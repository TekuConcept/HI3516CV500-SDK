@
@ -- FILES --
@

@ vi_ext.c
@ vi.c
@ vi_dev.c
@ vi_pipe.c
@ vi_chn.c
@ vi_extchn.c
@ vi_lowdelay.c
@ vi_luma.c
@ vi_proc.c
@ vi_drv_comm.c
@ vi_parallel_comm.c
@ vi_pic_queue.c
@ vi_node_list.c
@ vi_vgs.c
@ vi_snap.c
@ vi_userPic.c
@ vi_stitch.c
@ vi_userframe.c
@ vi_earlyint.c
@ vi_wdr.c
@ vi_wrap.c
@ vi_dis.c
@ vi_drv.c
@ vi_hal.c
@ wdr_buf.c
@ wdr_drv.c
@ vi_drv_isp.c
@ viproc_split.c
@ fpn_drv.c
@ vi_hal_3dnr.c
@ snap_drv.c
@ vi_init.c
@ hi3516cv500_vi.mod.c


unsigned char rodata[9588] = {
    /*0000*/ "VI_Ioctl\0\0\0\0",
    /*000c*/ "VI_DoIoctl\0\0",
    /*0018*/ "VI_CheckNullPtr\0",
    /*0028*/ "VI_NotifyBind\0\0\0",
    /*0038*/ "VI_CheckChnIdForIoctl\0\0\0",
    /*0050*/ "VI_CheckBindInfo\0\0\0\0",
    /*0064*/ "VI_ChnPrepareTask\0\0\0",
    /*0078*/ "VI_DoOneTask\0\0\0\0",
    /*0088*/ "VI_StartOneTask\0",
    /*0098*/ "VI_ProcSendPic2ChnPicQueue\0\0",
    /*00b4*/ "VI_MarkSendDataFlag\0",
    /*00c8*/ "VI_ProcSendBnrRaw\0\0\0",
    /*00dc*/ "VI_ProcChnFrame\0",
    /*00ec*/ "VI_StatisticTaskCostTime\0\0\0\0",
    /*0108*/ "VI_MKP_CreatInputQueue\0\0",
    /*0120*/ "VI_MKP_PipeWdrInit\0\0",
    /*0134*/ "VI_PipeMkpCtxInit\0\0\0",
    /*0148*/ "VI_PipeCtxInit\0\0",
    /*0158*/ "VI_CreatPipePicQueue\0\0\0\0",
    /*0170*/ "VI_WakeUpCondition\0\0",
    /*0184*/ "VI_WaitConditionCallBack\0\0\0\0",
    /*01a0*/ "VI_AbnormalVerifyAfterWait\0\0",
    /*01bc*/ "VI_IsPhyChnAttachFishEye\0\0\0\0",
    /*01d8*/ "VI_CheckCommCrop\0\0\0\0",
    /*01ec*/ "VI_WaitCaptureFrameStop\0",
    /*0204*/ "VI_LineModeSendPipeFrame\0\0\0\0",
    /*0220*/ "VI_SetChnLDCAttr\0\0\0\0",
    /*0234*/ "VI_GetChnLDCAttr\0\0\0\0",
    /*0248*/ "VI_SetChnLDCV2Attr\0\0",
    /*025c*/ "VI_GetChnLDCV2Attr\0\0",
    /*0270*/ "VI_SetModParam\0\0",
    /*0280*/ "VI_PollResault\0\0",
    /*0290*/ "VI_PROC_Init\0\0\0\0",
    /*02a0*/ "VI_PROC_Deinit\0\0",
    /*02b0*/ "VI_GetSplitAttr\0",
    /*02c0*/ "VI_UpdateViVpssMode\0",
    /*02d4*/ "VI_GetPipeBindDevSize\0\0\0",
    /*02ec*/ "VI_GetPipeNRXStatus\0",
    /*0300*/ "ViGetStitchSyncBeSttInfo\0\0\0\0",
    /*031c*/ "ViGetPipeBindDevId\0\0",
    /*0330*/ "ViGetBeSttInfo\0\0",
    /*0340*/ "VI_IspClearInputQueue\0\0\0",
    /*0358*/ "VI_CheckDevId\0\0\0",
    /*0368*/ "VI_SetDevAttr\0\0\0",
    /*0378*/ "VI_GetDevAttr\0\0\0",
    /*0388*/ "VI_EnableDev\0\0\0\0",
    /*0398*/ "VI_DisableDev\0\0\0",
    /*03a8*/ "VI_CheckDevBindPipe\0",
    /*03bc*/ "VI_SetDevBindPipe\0\0\0",
    /*03d0*/ "VI_GetDevBindPipe\0\0\0",
    /*03e4*/ "VI_WaitStopWorkingCallBack\0\0",
    /*0400*/ "VI_CheckPhyPipeId\0\0\0",
    /*0414*/ "VI_CheckPipeId\0\0",
    /*0424*/ "VI_CheckVirPipeId\0\0\0",
    /*0438*/ "VI_GetPipeCmpParam\0\0",
    /*044c*/ "VI_CreatPipe\0\0\0\0",
    /*045c*/ "VI_SetPipeAttr\0\0",
    /*046c*/ "VI_GetPipeAttr\0\0",
    /*047c*/ "VI_StartPipe\0\0\0\0",
    /*048c*/ "VI_DestroyPipe\0\0",
    /*049c*/ "VI_StopPipe\0",
    /*04a8*/ "VI_SetPipeRawSource\0",
    /*04bc*/ "VI_GetPipeRawSource\0",
    /*04d0*/ "VI_SetPipeRepeatMode\0\0\0\0",
    /*04e8*/ "VI_GetPipeRepeatMode\0\0\0\0",
    /*0500*/ "VI_SetPipeVCNumber\0\0",
    /*0514*/ "VI_GetPipeVCNumber\0\0",
    /*0528*/ "VI_SetCommFrameIntAttr\0\0",
    /*0540*/ "VI_SetVpssFrameInterruptAttr\0\0\0\0",
    /*0560*/ "VI_IspGetPipeFrameInterruptAttr\0",
    /*0580*/ "VI_GetPipeFrameInterruptAttr\0\0\0\0",
    /*05a0*/ "VI_SetPipeNRXParam\0\0",
    /*05b4*/ "VI_GetPipeNRXParam\0\0",
    /*05c8*/ "VI_GetPipeStatus\0\0\0\0",
    /*05dc*/ "VI_EnablePipeInterrupt\0\0",
    /*05f4*/ "VI_DisablePipeInterrupt\0",
    /*060c*/ "VI_SetPipeCrop\0\0",
    /*061c*/ "VI_GetPipeCrop\0\0",
    /*062c*/ "ViGetPipeWDRAttr\0\0\0\0",
    /*0640*/ "ViGetPipeHDRAttr\0\0\0\0",
    /*0654*/ "VI_SetPipeFPNAttr\0\0\0",
    /*0668*/ "VI_GetPipeFPNAttr\0\0\0",
    /*067c*/ "VI_SetChnRotationAttr\0\0\0",
    /*0694*/ "VI_GetChnRotationAttr\0\0\0",
    /*06ac*/ "VI_CheckChnId\0\0\0",
    /*06bc*/ "VI_CheckPhyChnId\0\0\0\0",
    /*06d0*/ "VI_SetChnAttr\0\0\0",
    /*06e0*/ "VI_GetChnAttr\0\0\0",
    /*06f0*/ "VI_SetChnCrop\0\0\0",
    /*0700*/ "VI_GetChnCrop\0\0\0",
    /*0710*/ "VI_EnableChn\0\0\0\0",
    /*0720*/ "VI_DisableChn\0\0\0",
    /*0730*/ "VI_GetChnOutPutSize\0",
    /*0744*/ "VI_GetChnStatus\0",
    /*0754*/ "VI_SetChnAlign\0\0",
    /*0764*/ "VI_GetChnAlign\0\0",
    /*0774*/ "VI_CheckExtChnId\0\0\0\0",
    /*0788*/ "VI_HandleExtChnPic\0\0",
    /*079c*/ "VI_SetExtChnBindAttr\0\0\0\0",
    /*07b4*/ "VI_SetExtChnAttr\0\0\0\0",
    /*07c8*/ "VI_GetExtChnAttr\0\0\0\0",
    /*07dc*/ "VI_SetExtChnFisheye\0",
    /*07f0*/ "VI_GetExtChnFisheye\0",
    /*0804*/ "VI_SetChnLowDealyAttr\0\0\0",
    /*081c*/ "VI_GetChnLowDealyAttr\0\0\0",
    /*0834*/ "VI_MallocRegionLumaBuffer\0\0\0",
    /*0850*/ "VI_CheckRegionLumaAttr\0\0",
    /*0868*/ "VI_CheckRegionInfo\0\0",
    /*087c*/ "VI_GetRegionLumaTimeout\0",
    /*0894*/ "8U\0\0",
    /*0898*/ "<U\0\0",
    /*089c*/ "DU\0\0",
    /*08a0*/ "\x08\0\0\0",
    /*08a4*/ "\n\0\0\0",
    /*08a8*/ "\x0c\0\0\0",
    /*08ac*/ "\x0e\0\0\0",
    /*08b0*/ "\x10\0\0\0",
    /*08b4*/ "\x14U\0\0",
    /*08b8*/ "\x1cU\0\0",
    /*08bc*/ "$U\0\0",
    /*08c0*/ ",U\0\0",
    /*08c4*/ "0U\0\0",
    /*08c8*/ "4U\0\0",
    /*08cc*/ "\xccT\0\0",
    /*08d0*/ "\xd4T\0\0",
    /*08d4*/ "\xdcT\0\0",
    /*08d8*/ "\xe4T\0\0",
    /*08dc*/ "\xecT\0\0",
    /*08e0*/ "\xbc1\0\0",
    /*08e4*/ "\xbc1\0\0",
    /*08e8*/ "\xbc1\0\0",
    /*08ec*/ "\xf4T\0\0",
    /*08f0*/ "\xfcT\0\0",
    /*08f4*/ "\x04U\0\0",
    /*08f8*/ "\xbc1\0\0",
    /*08fc*/ "\xbc1\0\0",
    /*0900*/ "\xbc1\0\0",
    /*0904*/ "\xbc1\0\0",
    /*0908*/ "\xbc1\0\0",
    /*090c*/ "\xbc1\0\0",
    /*0910*/ "\xbc1\0\0",
    /*0914*/ "\xbc1\0\0",
    /*0918*/ "\xbc1\0\0",
    /*091c*/ "\xbc1\0\0",
    /*0920*/ "\xbc1\0\0",
    /*0924*/ "\x0cU\0\0",
    /*0928*/ "\xa8T\0\0",
    /*092c*/ "\xb4T\0\0",
    /*0930*/ "\xc0T\0\0",
    /*0934*/ "\xc42\0\0",
    /*0938*/ "\x8cT\0\0",
    /*093c*/ "\x90T\0\0",
    /*0940*/ "\x98T\0\0",
    /*0944*/ "\xa0T\0\0",
    /*0948*/ "tT\0\0",
    /*094c*/ "|T\0\0",
    /*0950*/ "\x84T\0\0",
    /*0954*/ "dT\0\0",
    /*0958*/ "\xd41\0\0",
    /*095c*/ "\xc0G\0\0",
    /*0960*/ "hT\0\0",
    /*0964*/ "XT\0\0",
    /*0968*/ "\T\0\0",
    /*096c*/ "`T\0\0",
    /*0970*/ "8T\0\0",
    /*0974*/ "@T\0\0",
    /*0978*/ "HT\0\0",
    /*097c*/ "PT\0\0",
    /*0980*/ "\x1cT\0\0",
    /*0984*/ "$T\0\0",
    /*0988*/ ",T\0\0",
    /*098c*/ "VI_COMM_ProcOnlinePrepareNextBnrRawFrame\0\0\0\0",
    /*09b8*/ "VI_COMM_CreateOneNode\0\0\0",
    /*09d0*/ "VI_COMM_StartWaitList\0\0\0",
    /*09e8*/ "VI_COMM_SubmitOneNode\0\0\0",
    /*0a00*/ "VI_COMM_HalNodeProc\0",
    /*0a14*/ "VI_COMM_VIOffLineVPSSOffLineIrqRoute\0\0\0\0",
    /*0a3c*/ "VI_COMM_ProcPrepareNextChnFrame\0",
    /*0a5c*/ "VI_COMM_ProcIntAnalysis\0",
    /*0a74*/ "VI_COMM_VIOnLineVPSSOffLineIrqRoute\0",
    /*0a98*/ "VI_COMM_VIOnLineVPSSOnLineIrqRoute\0\0",
    /*0abc*/ "VI_COMM_ProcIrqRoute\0\0\0\0",
    /*0ad4*/ "VI_PROC_COMM_PerDevInit\0",
    /*0aec*/ "VI_PROC_COMM_DevInit\0\0\0\0",
    /*0b04*/ "VI_COMM_IsPipeStart\0",
    /*0b18*/ "VI_COMM_DetectWchIntErr\0",
    /*0b30*/ "VI_COMM_CapStatisticsIntTime\0\0\0\0",
    /*0b50*/ "VI_COMM_CapSendDumpFrame\0\0\0\0",
    /*0b6c*/ "VI_COMM_SendYuvFrameToChn\0\0\0",
    /*0b88*/ "VI_COMM_CapSendOffYUVFrame\0\0",
    /*0ba4*/ "VI_COMM_CapSendLinearFrame\0\0",
    /*0bc0*/ "VI_COMM_MasterPipeIsNormal\0\0",
    /*0bdc*/ "VI_COMM_CapSendWdrFrame\0",
    /*0bf4*/ "VI_COMM_CapSendOffLineFrame\0",
    /*0c10*/ "VI_COMM_CapPrepareFrame\0",
    /*0c28*/ "VI_COMM_BayerDumpIrqRoute\0\0\0",
    /*0c44*/ "VI_COMM_CapOnLineIrqRoute\0\0\0",
    /*0c60*/ "VI_COMM_CapOffLineIrqRoute\0\0",
    /*0c7c*/ "VI_CAP_COMM_PerDevInit\0\0",
    /*0c94*/ "VI_CAP_COMM_DevInit\0",
    /*0ca8*/ "VI_CoverExTaskCallBack\0\0",
    /*0cc0*/ "VI_ExtChnTaskCallBack\0\0\0",
    /*0cd8*/ "VI_VgsByPassTaskCallBack\0\0\0\0",
    /*0cf4*/ "VI_RegionLumaTaskCallBack\0\0\0",
    /*0d10*/ "VI_RegionLumaTaskCallBackMiddle\0",
    /*0d30*/ "VI_IsVgsExist\0\0\0",
    /*0d40*/ "VI_AddByPassTask2Vgs\0\0\0\0",
    /*0d58*/ "VI_SubmitByPassJob2Vgs\0\0",
    /*0d70*/ "VI_AddRegionLumaTask\0\0\0\0",
    /*0d88*/ "VI_AddCoverExTask\0\0\0",
    /*0d9c*/ "VI_AddOsdTask\0\0\0",
    /*0dac*/ "VI_SubmitSomeJob2Vgs\0\0\0\0",
    /*0dc4*/ "VI_AddOnlineTask\0\0\0\0",
    /*0dd8*/ "VI_SubmitExtChnPic2Vgs\0\0",
    /*0df0*/ "VI_SetSnapPipeAttr\0\0",
    /*0e04*/ "VI_SNAP_CheckPipeAttr\0\0\0",
    /*0e1c*/ "VI_SNAP_CheckZSLAttr\0\0\0\0",
    /*0e34*/ "VI_GetSnapPipeAttr\0\0",
    /*0e48*/ "VI_SNAP_OfflinePipeInit\0",
    /*0e60*/ "VI_SNAP_OfflinePipeDeInit\0\0\0",
    /*0e7c*/ "VI_EnableSnapPipe\0\0\0",
    /*0e90*/ "VI_SNAP_CheckEnable\0",
    /*0ea4*/ "VI_SNAP_SetPipeAttr\0",
    /*0eb8*/ "VI_DisableSnapPipe\0\0",
    /*0ecc*/ "VI_TriggerSnapPipe\0\0",
    /*0ee0*/ "VI_SNAP_GetFirstZSLFrame\0\0\0\0",
    /*0efc*/ "VI_SNAP_GetRemainingZSLFrame\0\0\0\0",
    /*0f1c*/ "VI_SNAP_OfflineIrqProc\0\0",
    /*0f34*/ "VI_SNAP_GetIspConfig\0\0\0\0",
    /*0f4c*/ "VI_SNAP_OnlineIrqProc\0\0\0",
    /*0f64*/ "VI_SNAP_OfflineProcChnFrame\0",
    /*0f80*/ "VI_SNAP_OnlineProcChnFrame\0\0",
    /*0f9c*/ "VI_SNAP_DiscardProFrame\0",
    /*0fb4*/ "VI_SNAP_ProcChnFrame\0\0\0\0",
    /*0fcc*/ "VI_SNAP_OfflineProcBnrRaw\0\0\0",
    /*0fe8*/ "VI_SNAP_OnlineProcBnrRaw\0\0\0\0",
    /*1004*/ "VI_SNAP_ZSLEnqueueProc\0\0",
    /*101c*/ "VI_SetProSharpenParam\0\0\0",
    /*1034*/ "VI_SNAP_SetProSharpenParam\0\0",
    /*1050*/ "VI_GetProSharpenParam\0\0\0",
    /*1068*/ "VI_SNAP_GetProSharpenParam\0\0",
    /*1084*/ "VI_SetProBNRParam\0\0\0",
    /*1098*/ "VI_SNAP_SetProBNRParam\0\0",
    /*10b0*/ "VI_GetProBNRParam\0\0\0",
    /*10c4*/ "VI_SNAP_GetProBNRParam\0\0",
    /*10dc*/ "\xa4{\0\0",
    /*10e0*/ "\xac{\0\0",
    /*10e4*/ "\xb4{\0\0",
    /*10e8*/ "\xbc{\0\0",
    /*10ec*/ "VI_GetPipeSnapStatus\0\0\0\0",
    /*1104*/ "VI_COMM_GetPipeIntCnt\0\0\0",
    /*111c*/ "VI_UserPicVgsByPassTaskCallBack\0",
    /*113c*/ "VI_StartNoIntDet\0\0\0\0",
    /*1150*/ "VI_EnableUserPic\0\0\0\0",
    /*1164*/ "VI_DisableUserPic\0\0\0",
    /*1178*/ "VI_CheckUserPic\0",
    /*1188*/ "VI_SetUserPic\0\0\0",
    /*1198*/ "VI_UserPicAddByPassTask2Vgs\0",
    /*11b4*/ "VI_UserPicSubmitByPassJob2Vgs\0\0\0",
    /*11d4*/ "VI_AddUserPicOnlineTask\0",
    /*11ec*/ "VI_AddUserPicCoverTask\0\0",
    /*1204*/ "VI_UpdatePicModeUserPic\0",
    /*121c*/ "VI_UpdateBgcModeUserPic\0",
    /*1234*/ "VI_COMM_ProcUserPic\0",
    /*1248*/ "VI_COMM_ProcNoInt\0\0\0",
    /*125c*/ "VI_ProcNoIntDet\0",
    /*126c*/ "VI_LineModeSendPipeRawFromBE\0\0\0\0",
    /*128c*/ "VI_SendPipeYUV\0\0",
    /*129c*/ "VI_WDRModeSendPipeRawFromBE\0",
    /*12b8*/ "VI_SendPipeRawFromFE\0\0\0\0",
    /*12d0*/ "VI_LineModeSendPipeRaw\0\0",
    /*12e8*/ "VI_SendMultPipeRaw\0\0",
    /*12fc*/ "VI_GetPipeRaw\0\0\0",
    /*130c*/ "VI_GetChnFrame\0\0",
    /*131c*/ "VI_SetDevTimingAttr\0",
    /*1330*/ "VI_SetPipeDumpAttr\0\0",
    /*1344*/ "VI_GetPipeDumpAttr\0\0",
    /*1358*/ "VI_GetPipeBnrRaw\0\0\0\0",
    /*136c*/ "VI_CheckBnrRawDumpAttr\0\0",
    /*1384*/ "VI_SetBNRRawDumpAttr\0\0\0\0",
    /*139c*/ "VI_GetBNRRawDumpAttr\0\0\0\0",
    /*13b4*/ "VI_WDR_OfflineWdrGetBeCfg\0\0\0",
    /*13d0*/ "VI_WDR_OfflineWdrPicNodeInputQueue\0\0",
    /*13f4*/ "VI_WDR_OfflineSyncWdrFrame\0\0",
    /*1410*/ "VI_GdcByPassTaskCallBack\0\0\0\0",
    /*142c*/ "VI_GdcLastTaskCallBack\0\0",
    /*1444*/ "VI_GdcExtChnTaskCallBack\0\0\0\0",
    /*1460*/ "Vi_InitLocalDisAlgorithm\0\0\0\0",
    /*147c*/ "VI_CheckChnAttrForGdc\0\0\0",
    /*1494*/ "VI_SetChnRotationExAttr\0",
    /*14ac*/ "VI_GetChnRotationExAttr\0",
    /*14c4*/ "VI_SetChnSpreadAttr\0",
    /*14d8*/ "VI_GetChnSpreadAttr\0",
    /*14ec*/ "VI_MKP_PutVb\0\0\0\0",
    /*14fc*/ "VI_IsGdcExist\0\0\0",
    /*150c*/ "Vi_DeInitLocalDisAlgorithm\0\0",
    /*1528*/ "Vi_EnableLocalDIS\0\0\0",
    /*153c*/ "Vi_DestroyGdcChn\0\0\0\0",
    /*1550*/ "Vi_CreateGdcChn\0",
    /*1560*/ "VI_GetUseVbForGdcOutput\0",
    /*1578*/ "VI_GetISPTimesForLocalDIS\0\0\0",
    /*1594*/ "VI_SubmitByPassJob2Gdc\0\0",
    /*15ac*/ "VI_SubmitSomeJob2Gdc\0\0\0\0",
    /*15c4*/ "VI_SubmitExtChnPic2Gdc\0\0",
    /*15dc*/ "VI_DIS_WaitLdcV2CallBack\0\0\0\0",
    /*15f8*/ "VI_DIS_WaitConditionCallBack\0\0\0\0",
    /*1618*/ "Vi_GetDISAttr\0\0\0",
    /*1628*/ "VI_IsDisExist\0\0\0",
    /*1638*/ "Vi_CreateDisChn\0",
    /*1648*/ "VI_DIS_CheckDisConfig\0\0\0",
    /*1660*/ "Vi_SetDISConfig\0",
    /*1670*/ "Vi_GetDISConfig\0",
    /*1680*/ "Vi_CheckDISAttr\0",
    /*1690*/ "Vi_DisableDIS\0\0\0",
    /*16a0*/ "Vi_destroyDISPool\0\0\0",
    /*16b4*/ "Vi_CheckChnAttrSupportDIS\0\0\0",
    /*16d0*/ "Vi_InitDisAlgorithm\0",
    /*16e4*/ "Vi_DeInitDisAlgorithm\0\0\0",
    /*16fc*/ "Vi_EnableGlobalDIS\0\0",
    /*1710*/ "Vi_EnableDIS\0\0\0\0",
    /*1720*/ "Vi_SetDISAttr\0\0\0",
    /*1730*/ "VI_SubmitFrame2Dis\0\0",
    /*1744*/ "VI_COMM_PrepareDISVBAndInfo\0",
    /*1760*/ "Vi_DestroyDisChn\0\0\0\0",
    /*1774*/ "X\x02\0\0",
    /*1778*/ "&\x02\0\0",
    /*177c*/ "\xdb\x01\0\0",
    /*1780*/ "\x8c\x01\0\0",
    /*1784*/ ",\x01\0\0",
    /*1788*/ "\x96\0\0\0",
    /*178c*/ "\xdb\x01\0\0",
    /*1790*/ "\x8c\x01\0\0",
    /*1794*/ ",\x01\0\0",
    /*1798*/ "\x96\0\0\0",
    /*179c*/ "VI_DRV_DevClockEnable\0\0\0",
    /*17b4*/ "VI_DRV_PutVb\0\0\0\0",
    /*17c4*/ "VI_DRV_GetVb\0\0\0\0",
    /*17d4*/ "VI_DRV_GetPipeMaxWidth\0\0",
    /*17ec*/ "VI_DRV_GetPipeMaxHeight\0",
    /*1804*/ "VI_DRV_GetChnMaxWidth\0\0\0",
    /*181c*/ "VI_DRV_GetChnMaxHeight\0\0",
    /*1834*/ "VI_DRV_FuncPreFilter\0\0\0\0",
    /*184c*/ "VI_DRV_ProcIsWrongInt\0\0\0",
    /*1864*/ "VI_DRV_ProcIsLostCfgInt\0",
    /*187c*/ "VI_DRV_QueryProcBusErrStatus\0\0\0\0",
    /*189c*/ "VI_DRV_CheckQuadrangleAttr\0\0",
    /*18b8*/ "VI_DRV_GetRgnCapacity\0\0\0",
    /*18d0*/ "VI_DRV_RegisterRgnCapacity\0\0",
    /*18ec*/ "VI_DRV_CheckFrameRate\0\0\0",
    /*1904*/ "VI_DRV_CheckPipeAttr\0\0\0\0",
    /*191c*/ "VI_DRV_CheckPipeStaticAttr\0\0",
    /*1938*/ "VI_DRV_MallocDRCBuffer\0\0",
    /*1950*/ "VI_DRV_PipeDrvCtxInit\0\0\0",
    /*1968*/ "VI_DRV_NeedCallGDCFunction\0\0",
    /*1984*/ "VI_DRV_CheckChnAttr\0",
    /*1998*/ "VI_DRV_CheckChnStaticAttr\0\0\0",
    /*19b4*/ "VI_DRV_CheckChnStaticAttrForGdc\0",
    /*19d4*/ "VI_DRV_CheckChnStaticAttrForFisheye\0",
    /*19f8*/ "VI_DRV_CheckChnStaticAttrForDis\0",
    /*1a18*/ "VI_DRV_CheckExtChnAttr\0\0",
    /*1a30*/ "VI_DRV_CheckChnLdcAttr\0\0",
    /*1a48*/ "VI_DRV_CheckChnLdcV2Attr\0\0\0\0",
    /*1a64*/ "VI_DRV_CheckChnRotateExAttr\0",
    /*1a80*/ "VI_DRV_CheckChnSpreadAttr\0\0\0",
    /*1a9c*/ "VI_DRV_CheckChnLowDelayAttr\0",
    /*1ab8*/ "VI_DRV_GetExtChnFisheyeAttr\0",
    /*1ad4*/ "VI_DRV_CalcCurPicSize\0\0\0",
    /*1aec*/ "VI_DRV_CalcCrop\0",
    /*1afc*/ "VI_DRV_CheckExtChnFishEyeAttr\0\0\0",
    /*1b1c*/ "VI_DRV_ChnCheckOfflineCapacity\0\0",
    /*1b3c*/ "VI_DRV_ChnCheckOnlineCapacity\0\0\0",
    /*1b5c*/ "VI_DRV_ExtChnCheckCapacity\0\0",
    /*1b78*/ "VI_DRV_CheckYuvCapacity\0",
    /*1b90*/ "VI_DRV_CheckLineRawCapacityForFE\0\0\0\0",
    /*1bb4*/ "VI_DRV_CheckLineRawCapacityForBE\0\0\0\0",
    /*1bd8*/ "VI_DRV_CheckWdrRawCapacity\0\0",
    /*1bf4*/ "VI_DRV_GetFrmVbBlk\0\0",
    /*1c08*/ "VI_DRV_GetRegion\0\0\0\0",
    /*1c1c*/ "VI_DRV_PutRegion\0\0\0\0",
    /*1c30*/ "VI_DRV_GetCoverInfo\0",
    /*1c44*/ "VI_DRV_GetNRISORange\0\0\0\0",
    /*1c5c*/ "VI_DRV_TransPixel\0\0\0",
    /*1c70*/ "VI_DRV_TransBitWidth\0\0\0\0",
    /*1c88*/ "VI_DRV_TransBitWidthEx\0\0",
    /*1ca0*/ "VI_DRV_TransDynamicRange2BitWidthEn\0",
    /*1cc4*/ "VI_DRV_WchTransBitWidth\0",
    /*1cdc*/ "VI_DRV_CheckChnCrop\0",
    /*1cf0*/ "VI_DRV_MallocLDCIBuffer\0",
    /*1d08*/ "VI_DRV_MallocModelBuf\0\0\0",
    /*1d20*/ "VI_DRV_MallocBeSttBuffer\0\0\0\0",
    /*1d3c*/ "VI_DRV_CheckPipeRawSource\0\0\0",
    /*1d58*/ "VI_DRV_SetPipeRawSource\0",
    /*1d70*/ "VI_DRV_CheckExtFisheyeCapacity\0\0",
    /*1d90*/ "VI_DRV_CheckNRXV2BaseParam\0\0",
    /*1dac*/ "VI_DRV_CheckPipeNRXISOParam\0",
    /*1dc8*/ "VI_DRV_CheckNRXV2AutoParam\0\0",
    /*1de4*/ "VI_DRV_CheckNRXV2Param\0\0",
    /*1dfc*/ "VI_DRV_CheckNRXParam\0\0\0\0",
    /*1e14*/ "VI_DRV_GetPipeNRXV2Param\0\0\0\0",
    /*1e30*/ "VI_DRV_GetPipeNRXParam\0\0",
    /*1e48*/ "VI_DRV_QueryAxiBusErrorStatus\0\0\0",
    /*1e68*/ "VI_DRV_QueryCapBusErrStatus\0",
    /*1e84*/ "VI_DRV_SetDataLayout\0\0\0\0",
    /*1e9c*/ "\x02\0\0\0",
    /*1ea0*/ "\x03\0\0\0",
    /*1ea4*/ "\x04\0\0\0",
    /*1ea8*/ "\x05\0\0\0",
    /*1eac*/ "\x05\0\0\0",
    /*1eb0*/ "\x05\0\0\0",
    /*1eb4*/ "\x06\0\0\0",
    /*1eb8*/ "\x06\0\0\0",
    /*1ebc*/ "\x06\0\0\0",
    /*1ec0*/ "\x06\0\0\0",
    /*1ec4*/ "VI_DRV_SetDevTimingAttr\0",
    /*1edc*/ "VI_DRV_CheckChipId\0\0",
    /*1ef0*/ "VI_DRV_CheckDevBindPipe\0",
    /*1f08*/ "VI_DRV_CheckInputDataType\0\0\0",
    /*1f24*/ "VI_DRV_CheckDataReverse\0",
    /*1f3c*/ "VI_DRV_CheckDevSize\0",
    /*1f50*/ "VI_DRV_CheckDataRate\0\0\0\0",
    /*1f68*/ "VI_DRV_CheckWorkMode\0\0\0\0",
    /*1f80*/ "VI_DRV_CheckScanMode\0\0\0\0",
    /*1f98*/ "VI_DRV_CheckDataSeq\0",
    /*1fac*/ "VI_DRV_CheckSynCfg\0\0",
    /*1fc0*/ "VI_DRV_CheckIntfMode\0\0\0\0",
    /*1fd8*/ "VI_DRV_CheckViVpssMode\0\0",
    /*1ff0*/ "VI_DRV_CheckPipeDumpAttr\0\0\0\0",
    /*200c*/ "VI_DRV_GetPipeCmpParam\0\0",
    /*2024*/ "VI_DRV_TransSrcPixelBitWidth\0\0\0\0",
    /*2044*/ "VI_DRV_SetPortSelect\0\0\0\0",
    /*205c*/ "VI_DRV_DISPoolInit\0\0",
    /*2070*/ "VI_DRV_DISGetVB\0",
    /*2080*/ "VI_DRV_CheckSendRawInlineMode\0\0\0",
    /*20a0*/ "VI_DRV_CheckSendRawInWdrMode\0\0\0\0",
    /*20c0*/ "VI_DRV_CheckStitchGrpAttr\0\0\0",
    /*20dc*/ "VI_DRV_SetStitchGrpAttr\0",
    /*20f4*/ "VI_DRV_CheckChnEarlyInterrupt\0\0\0",
    /*2114*/ "VI_DRV_DISCheckConfig\0\0\0",
    /*212c*/ "VI_DRV_CheckPipeFrameInterruptAttr\0\0",
    /*2150*/ "VI_DRV_GetViprocDebug\0\0\0",
    /*2168*/ "VI_DRV_CheckChnAlign\0\0\0\0",
    /*2180*/ "VI_DRV_CheckPipeChipLimit\0\0\0",
    /*219c*/ "VI_DRV_CapIsWrongInt\0\0\0\0",
    /*21b4*/ "VI_HAL_GetPortReg\0\0\0",
    /*21c8*/ "VI_HAL_Start\0\0\0\0",
    /*21d8*/ "VI_HAL_SetDataMask\0\0",
    /*21ec*/ "VI_HAL_SetDataOffset\0\0\0\0",
    /*2204*/ "VI_HAL_SetChnCombineMode\0\0\0\0",
    /*2220*/ "VI_HAL_SetPortSelect\0\0\0\0",
    /*2238*/ "\0\0\0\0",
    /*223c*/ "\0\0\0\0",
    /*2240*/ "\0\0\0\0",
    /*2244*/ "\xff\x01\0\0",
    /*2248*/ "\0\0\0\0",
    /*224c*/ "\0\0\0\0",
    /*2250*/ "\0\0\0\0",
    /*2254*/ "\0\0\0\0",
    /*2258*/ "\xf0\xff\xff\xff\0\0\0\0",
    /*2260*/ "\x91\0\0\0",
    /*2264*/ "\xfe\0\0\0",
    /*2268*/ "\x91\0\0\0",
    /*226c*/ "\0\0\0\0",
    /*2270*/ "\xf0\xff\xff\xff\0\0\0\0",
    /*2278*/ "VI_WDR_CreatePool\0\0\0",
    /*228c*/ "VI_WDR_DestoryPool\0\0",
    /*22a0*/ "VI_WDR_GetVb\0\0\0\0",
    /*22b0*/ "VI_DRV_CheckWDRAttr\0",
    /*22c4*/ "VI_DRV_TransDynamicRange2BitWidthEn\0",
    /*22e8*/ "VI_DRV_GetRawBitWidth\0\0\0",
    /*2300*/ "VI_DRV_GetWDRVB\0",
    /*2310*/ "VI_DRV_WDRPoolInit\0\0",
    /*2324*/ "VI_DRV_GetBeCfg\0",
    /*2334*/ "VI_DRV_HoldBeCfg\0\0\0\0",
    /*2348*/ "VI_DRV_CheckVideoFrame\0\0",
    /*2360*/ "VI_DRV_CheckCalibrateAttr\0\0\0",
    /*237c*/ "VI_DRV_CheckCorrectionAttr\0\0",
    /*2398*/ "VI_DRV_CheckFPNAttr\0",
    /*23ac*/ "VI_DRV_SetFPNCalibrateAttr\0\0",
    /*23c8*/ "SetPE0Vi\0\0\0\0",
    /*23d4*/ "SetSFiVi\0\0\0\0",
    /*23e0*/ "V500MapNRx\0\0",
    /*23ec*/ "\0\0\0\0",
    /*23f0*/ "\0\0\0\0",
    /*23f4*/ "\0\0\0\0",
    /*23f8*/ "\0\0\0\0",
    /*23fc*/ "\0\0\0\0",
    /*2400*/ "\0\0\0\0",
    /*2404*/ "\0\0\0\0",
    /*2408*/ "\0\0\0\0",
    /*240c*/ "\0\0\0\0",
    /*2410*/ "\0\0\0\0",
    /*2414*/ "\0\0\0\0",
    /*2418*/ "\0\0\0\0",
    /*241c*/ "\0\0\0\0",
    /*2420*/ "\0\0\0\0",
    /*2424*/ "\0\0\0\0",
    /*2428*/ "\0\0\0\0",
    /*242c*/ "hisilicon,hisi-vi\0\0\0",
    /*2440*/ "\0\0\0\0",
    /*2444*/ "\0\0\0\0",
    /*2448*/ "\0\0\0\0",
    /*244c*/ "\0\0\0\0",
    /*2450*/ "\0\0\0\0",
    /*2454*/ "\0\0\0\0",
    /*2458*/ "\0\0\0\0",
    /*245c*/ "\0\0\0\0",
    /*2460*/ "\0\0\0\0",
    /*2464*/ "\0\0\0\0",
    /*2468*/ "\0\0\0\0",
    /*246c*/ "\0\0\0\0",
    /*2470*/ "\0\0\0\0",
    /*2474*/ "\0\0\0\0",
    /*2478*/ "\0\0\0\0",
    /*247c*/ "\0\0\0\0",
    /*2480*/ "\0\0\0\0",
    /*2484*/ "\0\0\0\0",
    /*2488*/ "\0\0\0\0",
    /*248c*/ "\0\0\0\0",
    /*2490*/ "\0\0\0\0",
    /*2494*/ "\0\0\0\0",
    /*2498*/ "\0\0\0\0",
    /*249c*/ "\0\0\0\0",
    /*24a0*/ "\0\0\0\0",
    /*24a4*/ "\0\0\0\0",
    /*24a8*/ "\0\0\0\0",
    /*24ac*/ "\0\0\0\0",
    /*24b0*/ "\0\0\0\0",
    /*24b4*/ "\0\0\0\0",
    /*24b8*/ "\0\0\0\0",
    /*24bc*/ "\0\0\0\0",
    /*24c0*/ "\0\0\0\0",
    /*24c4*/ "\0\0\0\0",
    /*24c8*/ "\0\0\0\0",
    /*24cc*/ "\0\0\0\0",
    /*24d0*/ "\0\0\0\0",
    /*24d4*/ "\0\0\0\0",
    /*24d8*/ "\0\0\0\0",
    /*24dc*/ "\0\0\0\0",
    /*24e0*/ "\0\0\0\0",
    /*24e4*/ "\0\0\0\0",
    /*24e8*/ "\0\0\0\0",
    /*24ec*/ "\0\0\0\0",
    /*24f0*/ "\0\0\0\0",
    /*24f4*/ "\0\0\0\0",
    /*24f8*/ "\0\0\0\0",
    /*24fc*/ "\0\0\0\0",
    /*2500*/ "\0\0\0\0",
    /*2504*/ "\0\0\0\0",
    /*2508*/ "\0\0\0\0",
    /*250c*/ "\0\0\0\0",
    /*2510*/ "\0\0\0\0",
    /*2514*/ "\0\0\0\0",
    /*2518*/ "\0\0\0\0",
    /*251c*/ "\0\0\0\0",
    /*2520*/ "\0\0\0\0",
    /*2524*/ "\0\0\0\0",
    /*2528*/ "\0\0\0\0",
    /*252c*/ "\0\0\0\0",
    /*2530*/ "\0\0\0\0",
    /*2534*/ "\0\0\0\0",
    /*2538*/ "\0\0\0\0",
    /*253c*/ "\0\0\0\0",
    /*2540*/ "\0\0\0\0",
    /*2544*/ "\0\0\0\0",
    /*2548*/ "\0\0\0\0",
    /*254c*/ "\0\0\0\0",
    /*2550*/ "\0\0\0\0",
    /*2554*/ "\0\0\0\0",
    /*2558*/ "\0\0\0\0",
    /*255c*/ "\0\0\0\0",
    /*2560*/ "\0\0\0\0",
    /*2564*/ "\0\0\0\0",
    /*2568*/ "\0\0\0\0",
    /*256c*/ "\0\0\0\0",
    /*2570*/ "\0\0\0\0",
    /*2574*/ ""
};

unsigned char rel.rodata[488] = {
    /*0000*/ "\x94\x08\0\0",
    /*0004*/ "\x02\x06\0\0",
    /*0008*/ "\x98\x08\0\0",
    /*000c*/ "\x02\x06\0\0",
    /*0010*/ "\x9c\x08\0\0",
    /*0014*/ "\x02\x06\0\0",
    /*0018*/ "\xb4\x08\0\0",
    /*001c*/ "\x02\x06\0\0",
    /*0020*/ "\xb8\x08\0\0",
    /*0024*/ "\x02\x06\0\0",
    /*0028*/ "\xbc\x08\0\0",
    /*002c*/ "\x02\x06\0\0",
    /*0030*/ "\xc0\x08\0\0",
    /*0034*/ "\x02\x06\0\0",
    /*0038*/ "\xc4\x08\0\0",
    /*003c*/ "\x02\x06\0\0",
    /*0040*/ "\xc8\x08\0\0",
    /*0044*/ "\x02\x06\0\0",
    /*0048*/ "\xcc\x08\0\0",
    /*004c*/ "\x02\x06\0\0",
    /*0050*/ "\xd0\x08\0\0",
    /*0054*/ "\x02\x06\0\0",
    /*0058*/ "\xd4\x08\0\0",
    /*005c*/ "\x02\x06\0\0",
    /*0060*/ "\xd8\x08\0\0",
    /*0064*/ "\x02\x06\0\0",
    /*0068*/ "\xdc\x08\0\0",
    /*006c*/ "\x02\x06\0\0",
    /*0070*/ "\xe0\x08\0\0",
    /*0074*/ "\x02\x06\0\0",
    /*0078*/ "\xe4\x08\0\0",
    /*007c*/ "\x02\x06\0\0",
    /*0080*/ "\xe8\x08\0\0",
    /*0084*/ "\x02\x06\0\0",
    /*0088*/ "\xec\x08\0\0",
    /*008c*/ "\x02\x06\0\0",
    /*0090*/ "\xf0\x08\0\0",
    /*0094*/ "\x02\x06\0\0",
    /*0098*/ "\xf4\x08\0\0",
    /*009c*/ "\x02\x06\0\0",
    /*00a0*/ "\xf8\x08\0\0",
    /*00a4*/ "\x02\x06\0\0",
    /*00a8*/ "\xfc\x08\0\0",
    /*00ac*/ "\x02\x06\0\0",
    /*00b0*/ "\0\t\0\0",
    /*00b4*/ "\x02\x06\0\0",
    /*00b8*/ "\x04\t\0\0",
    /*00bc*/ "\x02\x06\0\0",
    /*00c0*/ "\x08\t\0\0",
    /*00c4*/ "\x02\x06\0\0",
    /*00c8*/ "\x0c\t\0\0",
    /*00cc*/ "\x02\x06\0\0",
    /*00d0*/ "\x10\t\0\0",
    /*00d4*/ "\x02\x06\0\0",
    /*00d8*/ "\x14\t\0\0",
    /*00dc*/ "\x02\x06\0\0",
    /*00e0*/ "\x18\t\0\0",
    /*00e4*/ "\x02\x06\0\0",
    /*00e8*/ "\x1c\t\0\0",
    /*00ec*/ "\x02\x06\0\0",
    /*00f0*/ " \t\0\0",
    /*00f4*/ "\x02\x06\0\0",
    /*00f8*/ "$\t\0\0",
    /*00fc*/ "\x02\x06\0\0",
    /*0100*/ "(\t\0\0",
    /*0104*/ "\x02\x06\0\0",
    /*0108*/ ",\t\0\0",
    /*010c*/ "\x02\x06\0\0",
    /*0110*/ "0\t\0\0",
    /*0114*/ "\x02\x06\0\0",
    /*0118*/ "4\t\0\0",
    /*011c*/ "\x02\x06\0\0",
    /*0120*/ "8\t\0\0",
    /*0124*/ "\x02\x06\0\0",
    /*0128*/ "<\t\0\0",
    /*012c*/ "\x02\x06\0\0",
    /*0130*/ "@\t\0\0",
    /*0134*/ "\x02\x06\0\0",
    /*0138*/ "D\t\0\0",
    /*013c*/ "\x02\x06\0\0",
    /*0140*/ "H\t\0\0",
    /*0144*/ "\x02\x06\0\0",
    /*0148*/ "L\t\0\0",
    /*014c*/ "\x02\x06\0\0",
    /*0150*/ "P\t\0\0",
    /*0154*/ "\x02\x06\0\0",
    /*0158*/ "T\t\0\0",
    /*015c*/ "\x02\x06\0\0",
    /*0160*/ "X\t\0\0",
    /*0164*/ "\x02\x06\0\0",
    /*0168*/ "\\t\0\0",
    /*016c*/ "\x02\x06\0\0",
    /*0170*/ "`\t\0\0",
    /*0174*/ "\x02\x06\0\0",
    /*0178*/ "d\t\0\0",
    /*017c*/ "\x02\x06\0\0",
    /*0180*/ "h\t\0\0",
    /*0184*/ "\x02\x06\0\0",
    /*0188*/ "l\t\0\0",
    /*018c*/ "\x02\x06\0\0",
    /*0190*/ "p\t\0\0",
    /*0194*/ "\x02\x06\0\0",
    /*0198*/ "t\t\0\0",
    /*019c*/ "\x02\x06\0\0",
    /*01a0*/ "x\t\0\0",
    /*01a4*/ "\x02\x06\0\0",
    /*01a8*/ "|\t\0\0",
    /*01ac*/ "\x02\x06\0\0",
    /*01b0*/ "\x80\t\0\0",
    /*01b4*/ "\x02\x06\0\0",
    /*01b8*/ "\x84\t\0\0",
    /*01bc*/ "\x02\x06\0\0",
    /*01c0*/ "\x88\t\0\0",
    /*01c4*/ "\x02\x06\0\0",
    /*01c8*/ "\xdc\x10\0\0",
    /*01cc*/ "\x02\x06\0\0",
    /*01d0*/ "\xe0\x10\0\0",
    /*01d4*/ "\x02\x06\0\0",
    /*01d8*/ "\xe4\x10\0\0",
    /*01dc*/ "\x02\x06\0\0",
    /*01e0*/ "\xe8\x10\0\0",
    /*01e4*/ "\x02\x06\0\0",
    /*01e8*/ ""
};

unsigned char rodata.str1.4[75246] = {
    /*0000*/ "[Func]:%s [Line]:%d [Info]:MPP vi not init !\n\0\0\0",
    /*0030*/ "[Func]:%s [Line]:%d [Info]:ioctl cmd 0x%x does not exist or not support the operation!\n\0",
    /*0088*/ "\n[VI] Version: [Hi3516CV500_MPP_V2.0.1.0 B090 Release], Build Time[Jan 14 2019, 20:23:45]\n\n\0",
    /*00e4*/ "Vi synchronization context init failed!\n\0\0\0\0",
    /*0110*/ "vi\0\0",
    /*0114*/ "Vi creat dev failed!\n\0\0\0",
    /*012c*/ "Vi register dev failed\n\0",
    /*0144*/ "Vi creat proc failed!\n\0\0",
    /*015c*/ "osal_atomic_init failed !\n\0\0",
    /*0178*/ "Vi register module failed !\n\0\0\0\0",
    /*0198*/ "Hi3516CV500\0",
    /*01a4*/ "load vi.ko for %s...OK !\n\0\0\0",
    /*01c0*/ "load vi.ko for %s...failed !\n\0\0\0",
    /*01e0*/ "unload vi.ko for %s...OK!\n\0\0",
    /*01fc*/ "[Func]:%s [Line]:%d [Info]:NULL point \r\n\0\0\0\0",
    /*0228*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexisted!\n\0\0",
    /*0258*/ "[Func]:%s [Line]:%d [Info]:Vi chn ID(%d) is invalid\r\n\0\0\0",
    /*0290*/ "[Func]:%s [Line]:%d [Info]:Pipe %d no phy chn was binded !\n\0",
    /*02cc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d  phy chn %d is disabled !\n\0\0\0",
    /*030c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d  phy chn %d lost frame according frame rate control !\n\0\0\0",
    /*0368*/ "[Func]:%s [Line]:%d [Info]:pipe id %d get DIS vb fail,\n\0",
    /*03a0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d all chn need not do task!\n\0\0\0",
    /*03e0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d is destroying/resetting/Working!\n\0\0\0\0",
    /*0428*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Mode:%d is invalid!\n\0",
    /*0460*/ "[Func]:%s [Line]:%d [Info]:Pipe %d lost frame for stitch sync!\n\0",
    /*04a0*/ "[Func]:%s [Line]:%d [Info]:ViPipe:%d sumbit vpss task fail\n\0",
    /*04dc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Chn %d get busy node from chn pic queue fail !\n\0\0",
    /*0530*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Chn %d pstPicNode is null!\n\0\0",
    /*0570*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Chn %d add getframe Err 0x%x!\n\0\0\0",
    /*05b4*/ "HI_NULL != pstLowDelayInfo\0\0",
    /*05d0*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*0610*/ "HI_NULL != pstPicInfo\0\0\0",
    /*0628*/ "[Func]:%s [Line]:%d [Info]:Pipe %d get busy node from bnr queue fail !\n\0",
    /*0670*/ "HI_NULL != pstPicNode\0\0\0",
    /*0688*/ "[Func]:%s [Line]:%d [Info]:Pipe %d add bnr VB Err %#x!\n\0",
    /*06c0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d is destroying!\n\0\0",
    /*06f4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Chn %d timeref is invalid!\n\0\0",
    /*0734*/ "[Func]:%s [Line]:%d [Info]:Pipe %d pstCurPicInfo unexisted!\n\0\0\0\0",
    /*0774*/ "[Func]:%s [Line]:%d [Info]:creat picture queue fail!\n\0\0\0",
    /*07ac*/ "[Func]:%s [Line]:%d [Info]:Pipe %d creat line picture queue fail!\n\0\0",
    /*07f0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d creat wdr picture queue fail!\n\0\0\0",
    /*0834*/ "[Func]:%s [Line]:%d [Info]:VI WDR CreateBuffer failed.\n\0",
    /*086c*/ "[Func]:%s [Line]:%d [Info]:Set WDR VBConfig  failed.\n\0\0\0",
    /*08a4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d malloc MKP context fail!\n\0\0\0\0",
    /*08e4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d MKP context init fail.\n\0\0",
    /*0920*/ "[Func]:%s [Line]:%d [Info]:Pipe %d DRV context init fail.\n\0\0",
    /*095c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d creat input picture queue fail!\n\0",
    /*09a0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d creat dump raw picture queue fail!\n\0\0",
    /*09e8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d creat Send raw picture queue fail!\n\0\0",
    /*0a30*/ "[Func]:%s [Line]:%d [Info]:Sys is not init\n\0",
    /*0a5c*/ "[Func]:%s [Line]:%d [Info]:Get Chn Luma Failure\n\0\0\0\0",
    /*0a90*/ "[Func]:%s [Line]:%d [Info]:Chanel Destroy \n\0",
    /*0abc*/ "[Func]:%s [Line]:%d [Info]:Chanel Resetting\n\0\0\0\0",
    /*0aec*/ "[Func]:%s [Line]:%d [Info]:Normal Wakeup\n\0\0\0",
    /*0b18*/ "[Func]:%s [Line]:%d [Info]:pParam is NULL !\n\0\0\0\0",
    /*0b48*/ "[Func]:%s [Line]:%d [Info]:Dev Context has been Destroyed\n\0\0",
    /*0b84*/ "[Func]:%s [Line]:%d [Info]:Dev Context has Recreat\n\0",
    /*0bb8*/ "[Func]:%s [Line]:%d [Info]:Dev Context is Destroying\n\0\0\0",
    /*0bf0*/ "[Func]:%s [Line]:%d [Info]:Dev Context is Resetting\n\0\0\0\0",
    /*0c28*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d is not phy chn!\n\0\0",
    /*0c64*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Extchn %d fishEye is enabled which is binded to phychn %d!\n\0\0",
    /*0cc4*/ "[Func]:%s [Line]:%d [Info]:bCropEn should be 0 or 1 which is %d!\n\0\0\0",
    /*0d08*/ "[Func]:%s [Line]:%d [Info]:Crop coordinate  should be VPSS_CROP_RATIO_COOR or VPSS_CROP_ABS_COOR!\n\0\0",
    /*0d6c*/ "[Func]:%s [Line]:%d [Info]:Crop start ratioX should be 0 to 999 which is %d!\n\0\0\0",
    /*0dbc*/ "[Func]:%s [Line]:%d [Info]:Crop start ratioY should be 0 to 999 which is %d!\n\0\0\0",
    /*0e0c*/ "[Func]:%s [Line]:%d [Info]:Crop start ratio Width should be 0 to 1000 which is %d!\n\0",
    /*0e60*/ "[Func]:%s [Line]:%d [Info]:Crop start ratio Height should be 0 to 1000 which is %d!\n\0\0\0\0",
    /*0eb8*/ "[Func]:%s [Line]:%d [Info]:Wait Pipe %d Capture stop timeout 120ms!!!\n\0\0",
    /*0f00*/ "[Func]:%s [Line]:%d [Info]:Pipe %d s32MilliSec %d err!\n\0",
    /*0f38*/ "[Func]:%s [Line]:%d [Info]:Pipe %d please start pipe first!!\n\0\0\0",
    /*0f78*/ "[Func]:%s [Line]:%d [Info]:Pipe %d can't use sys,please check sys module!\n\0\0",
    /*0fc4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d User pic queue is full!!!!\n\0\0",
    /*1004*/ "[Func]:%s [Line]:%d [Info]:Pipe %d User pic queue is full!!!!s32MilliSec %d \n\0\0\0",
    /*1054*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d  has exited \n\0\0",
    /*1088*/ "[Func]:%s [Line]:%d [Info]:Pipe %d  queue is full,can't receive.!!\n\0",
    /*10cc*/ "[Func]:%s [Line]:%d [Info]:Null pointer!FUNCTION %s,LINE %d!\n\0\0\0",
    /*110c*/ "[Func]:%s [Line]:%d [Info]:VI pic PoolId:%d, PhyAddr0:0x%llx, s32Ret:0x%x.\n\0",
    /*1158*/ "[Func]:%s [Line]:%d [Info]:Not support Chn(%d)!\n\0\0\0\0",
    /*118c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexist!\n\0\0\0\0",
    /*11bc*/ "[Func]:%s [Line]:%d [Info]:please first set chn (%d, %d)'s attr\0",
    /*11fc*/ "[Func]:%s [Line]:%d [Info]:When Spread and LDc On,Ldc Ratio(%d) cannot smaller than 0.\n\0",
    /*1254*/ "[Func]:%s [Line]:%d [Info]:LDC(%d) cannot use with LDCV2(%d) at the same time.\n\0",
    /*12a4*/ "[Func]:%s [Line]:%d [Info]:LDC cannot use with GYRO at the same time.\n\0\0",
    /*12ec*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d is not enabled!\n\0\0",
    /*1328*/ "[Func]:%s [Line]:%d [Info]: LDC and LDCV2 cannot On at the same time! LDC(%d),LDCV2(%d).\n\0\0\0",
    /*1384*/ "[Func]:%s [Line]:%d [Info]:LDCV2 cannot use with 4_DOF_GME or 6_DOF_GME at the same time.\n\0\0",
    /*13e0*/ "[Func]:%s [Line]:%d [Info]:Vi Enable GlobalDIS Failed!!!\n\0\0\0",
    /*141c*/ "[Func]:%s [Line]:%d [Info]:Vi Disable GlobalDIS Failed!!!\n\0\0",
    /*1458*/ "[Func]:%s [Line]:%d [Info]:Please set module parameter before setting dev attr.\n\0\0\0\0",
    /*14ac*/ "[Func]:%s [Line]:%d [Info]:Please set module parameter before creat pipe.\n\0\0",
    /*14f8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has been Uncreated ! \n\0\0\0",
    /*1534*/ "[Func]:%s [Line]:%d [Info]:Can't use sys,please check sys module!\n\0\0",
    /*1578*/ "[Func]:%s [Line]:%d [Info]:Invalid VI-VPSS mode.\n\0\0\0",
    /*15ac*/ "[Func]:%s [Line]:%d [Info]:set VI-VPSS mode failed.\n\0\0\0\0",
    /*15e4*/ "[Func]:%s [Line]:%d [Info]:attr of vi dev %d not configed\n\0\0",
    /*1620*/ "[Func]:%s [Line]:%d [Info]:NULL point \r\n!\0\0\0",
    /*164c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d u8Block should between %d and %d which is %d !\n\0\0",
    /*16a0*/ "[Func]:%s [Line]:%d [Info]:Vi Dev ID(%d) is invalid\r\n\0\0\0",
    /*16d8*/ "[Func]:%s [Line]:%d [Info]:can't set attr of vi dev(%d), because it has been enabled\n\0\0\0",
    /*1730*/ "[Func]:%s [Line]:%d [Info]:attr of vi dev %d not configed\n\0\0",
    /*176c*/ "[Func]:%s [Line]:%d [Info]:not allowed enable dev because dev%d not configed\n\0\0\0",
    /*17bc*/ "[Func]:%s [Line]:%d [Info]:The pipe %d of binding Dev %d is not destroyed.\n\0",
    /*1808*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has been created !\n\0\0",
    /*1840*/ "[Func]:%s [Line]:%d [Info]:not allowed bind pipe because DevBindPipeAttr is invalid.\n\0\0\0",
    /*1898*/ "[Func]:%s [Line]:%d [Info]:not allowed bind pipe because dev%d not enable\n\0\0",
    /*18e4*/ "[Func]:%s [Line]:%d [Info]:not allowed bind pipe because dev%d has been binded\n\0",
    /*1934*/ "[Func]:%s [Line]:%d [Info]:not allowed get bind pipe because dev%d not enable\n\0\0",
    /*1984*/ "[Func]:%s [Line]:%d [Info]:not allowed get bind pipe info because dev%d has not been binded\n\0\0\0\0",
    /*19e4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d, bWorking=%d, bCapWorking=%d, bNoIntTimerWorking=%d,                            bOtherPipeVisiting=%d, u32OtherModJobCnt=%d,                             u32OtherModJobVGSCnt=%d, u32OtherModJobGDCCnt=%d.\n\0\0",
    /*1ad4*/ "[Func]:%s [Line]:%d [Info]:Vi vir pipe ID(%d) is invalid\r\n\0\0",
    /*1b10*/ "[Func]:%s [Line]:%d [Info]:Vi pipe ID(%d) is invalid\r\n\0\0",
    /*1b48*/ "[Func]:%s [Line]:%d [Info]:Vi phy pipe ID(%d) is invalid\r\n\0\0",
    /*1b84*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexisted ! \n\0\0\0\0",
    /*1bb8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has been created !\n\0\0",
    /*1bf0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d do not bind Dev!\n\0\0\0\0",
    /*1c28*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has been uncreated ! \n\0\0\0",
    /*1c64*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has been Uncreated ! \n\0\0\0",
    /*1ca0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d  unexisted!\n\0",
    /*1cd0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexisted!\n\0\0",
    /*1d00*/ "[Func]:%s [Line]:%d [Info]:Pipe %d must be stopped!\n\0\0\0\0",
    /*1d38*/ "[Func]:%s [Line]:%d [Info]:Snap pipe %d must be disable first when destroy!\n\0\0\0\0",
    /*1d88*/ "[Func]:%s [Line]:%d [Info]:Pipe %d set VC number failed after pipe started!\n\0\0\0\0",
    /*1dd8*/ "[Func]:%s [Line]:%d [Info]:Invalid VC number, which should be [0, %d).\n\0",
    /*1e20*/ "[Func]:%s [Line]:%d [Info]:Vi pipe %d is start, not allowed to set pipe InterruptAttr!\n\0",
    /*1e78*/ "[Func]:%s [Line]:%d [Info]:Vi pipe %d is not VI_ONLINE_VPSS_ONLINE, not allowed to be called!\n\0\0",
    /*1ed8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d is destroying!\n\0\0",
    /*1f0c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d all chn are not setted,get HDR attr fail!\n\0\0\0",
    /*1f5c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexist!\n\0\0\0\0",
    /*1f8c*/ "[Func]:%s [Line]:%d [Info]:ViPipe:%d Fpn calibrate can't be set when chn %d is enable.\n\0",
    /*1fe4*/ "[Func]:%s [Line]:%d [Info]:Not support Chn(%d)!\n\0\0\0\0",
    /*2018*/ "[Func]:%s [Line]:%d [Info]:The GDC module may be not existed\n\0\0\0",
    /*2058*/ "[Func]:%s [Line]:%d [Info]:please first set chn (%d, %d)'s attr!\n\0\0\0",
    /*209c*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) ViChn(%d) enPixelFormat(%d) not support!\n\0",
    /*20ec*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) ViChn(%d) enCompressMode(%d) not support!\n\0\0\0\0",
    /*2140*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d can't change chn rotation because some extchn binded to this phychn enable fisheye!\n\0\0",
    /*21c0*/ "[Func]:%s [Line]:%d [Info]: Rotate_Ex and Rotate cannot On at the same time! enRotate(%d),Rotate_bEnable(%d).\n\0\0",
    /*2230*/ "[Func]:%s [Line]:%d [Info]:enDynamicRange:%d is Err\0",
    /*2264*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) ViChn(%d): calculate rotation configure fail with return 0x%x!\n\0\0\0",
    /*22cc*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) ViChn(%d): enRotation:%d !\n\0\0\0",
    /*2310*/ "[Func]:%s [Line]:%d [Info]:Vi chn ID(%d) is invalid\r\n\0\0\0",
    /*2348*/ "[Func]:%s [Line]:%d [Info]:Vi chn ID(%d) is invalid phy-chn, phy-chn's range is [%d, %d].\r\n\0",
    /*23a4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexisted!\n\0\0",
    /*23d4*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d ViChn %d can't change chn attr because chn will call GDC!!\n\0\0\0\0",
    /*2438*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d ViChn %d can't set chn COMPRESS_MODE_SEG because chn already enable Rotate!!\n\0\0",
    /*24ac*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d ViChn %d can't change chn attr because chn already enable dis!!\n\0\0\0",
    /*2514*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d can't change chn attr because some extchn binded to this phychn enable fisheye!\n\0\0",
    /*2590*/ "[Func]:%s [Line]:%d [Info]:Please first set pipe %d  chn %d  attr\n\0\0",
    /*25d4*/ "[Func]:%s [Line]:%d [Info]:Not support Chn(%d)!\n\0\0\0\0",
    /*2608*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) is BypassBe Mode, not support crop!!\n\0",
    /*2654*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d ViChn %d can't change chn crop because chn will call GDC!!\n\0\0\0\0",
    /*26b8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d can't change chn crop because some extchn binded to this phychn enable fisheye!\n\0\0",
    /*2734*/ "[Func]:%s [Line]:%d [Info]:vmalloc stBindSrc failed!\n\0\0\0",
    /*276c*/ "[Func]:%s [Line]:%d [Info]:Pipe%d extchn%d's  src chn%d is not enabled\n\0",
    /*27b4*/ "[Func]:%s [Line]:%d [Info]:creat picture queue fail!\n\0\0\0",
    /*27ec*/ "[Func]:%s [Line]:%d [Info]:Pipe %d,chn %d creat chn frame queue failed\n\0",
    /*2834*/ "[Func]:%s [Line]:%d [Info]:Pipe %d,chn %d creat gdc failed\n\0",
    /*2870*/ "[Func]:%s [Line]:%d [Info]:Pipe %d,chn %d creat dis failed\n\0",
    /*28ac*/ "[Func]:%s [Line]:%d [Info]:Pipe%d extchn%d  still enabled,which is binded phy chn%d \n\0\0\0",
    /*2904*/ "[Func]:%s [Line]:%d [Info]:Please first set pipe %d  chn %d  attr\0\0\0",
    /*2948*/ "[Func]:%s [Line]:%d [Info]:Align[%u] is illegal!\n\0\0\0",
    /*297c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexist!\n\0\0\0\0",
    /*29ac*/ "[Func]:%s [Line]:%d [Info]:Vi chn ID(%d) is invalid ext-chn, ext-chn's range is [%d, %d].\r\n\0",
    /*2a08*/ "HI_NULL != pstPicInfo\0\0\0",
    /*2a20*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*2a60*/ "[Func]:%s [Line]:%d [Info]:Ext-Chn%d has no bind and depth is 0!\n\0\0\0",
    /*2aa4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d  phy chn %d lost frame according frame rate control !\n\0\0\0",
    /*2b00*/ "u32OldSrcChn < VI_MAX_PHY_CHN_NUM\0\0\0",
    /*2b24*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexisted!\n\0\0",
    /*2b54*/ "[Func]:%s [Line]:%d [Info]:Please first set pipe %d  chn %d  attr\n\0\0",
    /*2b98*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexist!\n\0\0\0\0",
    /*2bc8*/ "[Func]:%s [Line]:%d [Info]:can't get GDC export function, it may be GDC module has not been inserted!\n\0\0",
    /*2c30*/ "[Func]:%s [Line]:%d [Info]:Pipe %d ViChn:%d pfnGdcFisheyFifoCalc failed!\n\0\0\0",
    /*2c7c*/ "[Func]:%s [Line]:%d [Info]:Not support Chn(%d)!\n\0\0\0\0",
    /*2cb0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexist!\n\0\0\0\0",
    /*2ce0*/ "[Func]:%s [Line]:%d [Info]:please first set chn (%d, %d)'s attr\0",
    /*2d20*/ "[Func]:%s [Line]:%d [Info]:Get mmz name fail!\n\0\0",
    /*2d50*/ "VI\0\0",
    /*2d54*/ "%s(%d) RGN LUMA\0",
    /*2d64*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d u32RegionNum %d err!,should be [1,%d]\n\0\0\0\0",
    /*2db8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Chn %d  s32MilliSec %d err!\n\0",
    /*2df8*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) ViChn(%d) VideoFormat is %d, not support!\n\0\0\0\0",
    /*2e4c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d pstFrameInfo address is invalid!\n\0\0\0\0",
    /*2e94*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Chn %d pu64LumaData 0x%lx err!,access failed!!\n\0\0",
    /*2ee8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Chn %d region:%d(X=%d,Y=%d,Height=%d,Width=%d) is out of limits(0,0,%d,%d)!\n\0",
    /*2f58*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Chn %d region:%d(X=%d,Y=%d,Height=%d,Width=%d)they all should be a multiple of 2!\n\0\0\0",
    /*2fd0*/ "[Func]:%s [Line]:%d [Info]:Not support Chn(%d)!\n\0\0\0\0",
    /*3004*/ "[Func]:%s [Line]:%d [Info]:Pipe %d  unexist!\n\0\0\0",
    /*3034*/ "[Func]:%s [Line]:%d [Info]:Pipe %d is destroying or resetting!\n\0",
    /*3074*/ "[Func]:%s [Line]:%d [Info]:Vi get region Luma copy_from_user fail!!!\n\0\0\0",
    /*30bc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d is disabled,so get Luma is not supported  !\n\0\0",
    /*3114*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d get region luma timeout,s32MilliSec:%d\n\0\0\0",
    /*3168*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d BusyQueue is null\n\0\0\0\0",
    /*31a8*/ "LINEAR\0\0",
    /*31b0*/ "TILE_16x8\0\0\0",
    /*31bc*/ "-\0\0\0",
    /*31c0*/ "RIT\0",
    /*31c4*/ "ABS\0",
    /*31c8*/ "0\0\0\0",
    /*31cc*/ "90\0\0",
    /*31d0*/ "270\0",
    /*31d4*/ "180\0",
    /*31d8*/ "BT656\0\0\0",
    /*31e0*/ "BT601\0\0\0",
    /*31e8*/ "DC\0\0",
    /*31ec*/ "BT1120S\0",
    /*31f4*/ "BT1120I\0",
    /*31fc*/ "MIPI\0\0\0\0",
    /*3204*/ "MIPI_YUV420_NORMAL\0\0",
    /*3218*/ "MIPI_YUV420_LEGACY\0\0",
    /*322c*/ "MIPI_YUV422\0",
    /*3238*/ "HISPI\0\0\0",
    /*3240*/ "LVDS\0\0\0\0",
    /*3248*/ "N/A\0",
    /*324c*/ "1Mux\0\0\0\0",
    /*3254*/ "4Mux\0\0\0\0",
    /*325c*/ "2Mux\0\0\0\0",
    /*3264*/ "VUVU\0\0\0\0",
    /*326c*/ "UVUV\0\0\0\0",
    /*3274*/ "UYVY\0\0\0\0",
    /*327c*/ "VYUY\0\0\0\0",
    /*3284*/ "YVYU\0\0\0\0",
    /*328c*/ "YUYV\0\0\0\0",
    /*3294*/ "YUV\0",
    /*3298*/ "RGB\0",
    /*329c*/ "NONE\0\0\0\0",
    /*32a4*/ "S1/2\0\0\0\0",
    /*32ac*/ "S1/3\0\0\0\0",
    /*32b4*/ "B1/3\0\0\0\0",
    /*32bc*/ "B1/2\0\0\0\0",
    /*32c4*/ "None\0\0\0\0",
    /*32cc*/ "BuildIn\0",
    /*32d4*/ "Qudra\0\0\0",
    /*32dc*/ "WDR_2L1\0",
    /*32e4*/ "WDR_2F1\0",
    /*32ec*/ "WDR_3L1\0",
    /*32f4*/ "WDR_3F1\0",
    /*32fc*/ "WDR_4F1\0",
    /*3304*/ "WDR_4L1\0",
    /*330c*/ "X1\0\0",
    /*3310*/ "X2\0\0",
    /*3314*/ "RFR\0",
    /*3318*/ "CH0\0",
    /*331c*/ "Tail\0\0\0\0",
    /*3324*/ "Head\0\0\0\0",
    /*332c*/ "ONCE\0\0\0\0",
    /*3334*/ "PIC\0",
    /*3338*/ "BGC\0",
    /*333c*/ "NR_X\0\0\0\0",
    /*3344*/ "AUTO\0\0\0\0",
    /*334c*/ "MANUAL\0\0",
    /*3354*/ "NORMAL\0\0",
    /*335c*/ "SYNC\0\0\0\0",
    /*3364*/ "Y\0\0\0",
    /*3368*/ "N\0\0\0",
    /*336c*/ "I\0\0\0",
    /*3370*/ "P\0\0\0",
    /*3374*/ "\n-------------------------------VI DEV ATTR1----------------------------------------------------------------------------\n\0\0\0",
    /*33f0*/ "DevEn\0\0\0",
    /*33f8*/ "DevID\0\0\0",
    /*3400*/ "%7s%8s%10s%10s%10s%20s%8s%12s%12s%8s\0\0\0\0",
    /*3428*/ "ScanM\0\0\0",
    /*3430*/ "ComMsk1\0",
    /*3438*/ "ComMsk0\0",
    /*3440*/ "WkM\0",
    /*3444*/ "IntfM\0\0\0",
    /*344c*/ "Height\0\0",
    /*3454*/ "Width\0\0\0",
    /*345c*/ "BindPipe\0\0\0\0",
    /*3468*/ "\n\0\0\0",
    /*346c*/ "%7d%8s%10s%10u%10u%20s%8s%12x%12x%8s\0\0\0\0",
    /*3494*/ "\n-------------------------------VI DEV ATTR2----------------------------------------------------------------------------\n\0\0\0",
    /*3510*/ "AD0\0",
    /*3514*/ "%7s%6s%6s%6s%6s%8s%10s%10s%8s%8s%8s%8s%10s%11s%10s\0\0",
    /*3548*/ "DataRate\0\0\0\0",
    /*3554*/ "CacheLine\0\0\0",
    /*3560*/ "WDRMode\0",
    /*3568*/ "VReph\0\0\0",
    /*3570*/ "HReph\0\0\0",
    /*3578*/ "BasH\0\0\0\0",
    /*3580*/ "BasW\0\0\0\0",
    /*3588*/ "DataRev\0",
    /*3590*/ "DataType\0\0\0\0",
    /*359c*/ "Seq\0",
    /*35a0*/ "AD3\0",
    /*35a4*/ "AD2\0",
    /*35a8*/ "AD1\0",
    /*35ac*/ "%7d%6d%6d%6d%6d%8s%10s%10s%8u%8u%8s%8s%10s%11d%10s\0\0",
    /*35e0*/ "\n-------------------------------VI BIND ATTR----------------------------------------------------------------------------\n\0\0\0",
    /*365c*/ "PipeNum\0",
    /*3664*/ "%8s%8s%20s\0\0",
    /*3670*/ "PipeId\0\0",
    /*3678*/ "%2d,\0\0\0\0",
    /*3680*/ "%2d\0",
    /*3684*/ "%8d%8d%20s\0\0",
    /*3690*/ "\n-------------------------------VI DEV TIMING ATTR----------------------------------------------------------------------\n\0\0\0",
    /*370c*/ "DevTimingEn\0",
    /*3718*/ "%7s%12s%12s%10s%12s\0",
    /*372c*/ "DevHeight\0\0\0",
    /*3738*/ "DevWidth\0\0\0\0",
    /*3744*/ "DevFrmRate\0\0",
    /*3750*/ "%7d%12s%12d%10d%12d\0",
    /*3764*/ "\n-------------------------------VI PIPE ATTR1---------------------------------------------------------------------------\n\0\0\0",
    /*37e0*/ "BypassMode\0\0",
    /*37ec*/ "PipeID\0\0",
    /*37f4*/ "%8s%12s%8s%10s%10s%10s%10s%10s%8s%10s%14s\0\0\0",
    /*3820*/ "CompressMode\0\0\0\0",
    /*3830*/ "SharpenEn\0\0\0",
    /*383c*/ "NrEn\0\0\0\0",
    /*3844*/ "BitWidth\0\0\0\0",
    /*3850*/ "PixFmt\0\0",
    /*3858*/ "IspBypass\0\0\0",
    /*3864*/ "YuvSkip\0",
    /*386c*/ "%8d%12s%8s%10s%10u%10u%10s%10u%8s%10s%14s\0\0\0",
    /*3898*/ "\n-------------------------------VI PIPE ATTR2---------------------------------------------------------------------------\n\0\0\0",
    /*3914*/ "SrcFRate\0\0\0\0",
    /*3920*/ "DiscProPic\0\0",
    /*392c*/ "%12s%12s%12s%12s%12s%8s%12s%10s\0",
    /*394c*/ "EarlyLine\0\0\0",
    /*3958*/ "IntType\0",
    /*3960*/ "VCNum\0\0\0",
    /*3968*/ "RepeatMode\0\0",
    /*3974*/ "FrameSource\0",
    /*3980*/ "DstFRate\0\0\0\0",
    /*398c*/ "%12s%12d%12d%12s%12s%8u%12s%10u\0",
    /*39ac*/ "\n-------------------------------VI PIPE CROP ATTR-----------------------------------------------------------------------\n\0\0\0",
    /*3a28*/ "CropEn \0",
    /*3a30*/ "%8s%8s%8s%8s%8s%8s\0\0",
    /*3a44*/ "CoorY\0\0\0",
    /*3a4c*/ "CoorX\0\0\0",
    /*3a54*/ "%8d%8s%8d%8d%8u%8u\0\0",
    /*3a68*/ "\n-------------------------------VI PIPE NR ATTR-------------------------------------------------------------------------\n\0\0\0",
    /*3ae4*/ "%8s%16s%16s%16s%16s%16s%16s%16s\0",
    /*3b04*/ "OptMode\0",
    /*3b0c*/ "Version\0",
    /*3b14*/ "Intf\0\0\0\0",
    /*3b1c*/ "RefSrc\0\0",
    /*3b24*/ "%8d%16u%16s%16s%16s%16s%16s%16s\0",
    /*3b44*/ "\n-------------------------------VI PIPE NRX_V2 PARAM--------------------------------------------------------------------\n\0\0\0",
    /*3bc0*/ "ISO\0",
    /*3bc4*/ "%8s%12s%10s%10s%10s%10s%10s%10s%10s%10s\0",
    /*3bec*/ "STH3\0\0\0\0",
    /*3bf4*/ "STH1\0\0\0\0",
    /*3bfc*/ "SFN3\0\0\0\0",
    /*3c04*/ "SFN1\0\0\0\0",
    /*3c0c*/ "SFN0\0\0\0\0",
    /*3c14*/ "SFS4\0\0\0\0",
    /*3c1c*/ "SFS2\0\0\0\0",
    /*3c24*/ "SFS1\0\0\0\0",
    /*3c2c*/ "\n-------------------------------VI PIPE NRX_V1 PARAM--------------------------------------------------------------------\n\0\0\0",
    /*3ca8*/ "%8s%12s%6s%6s%6s%6s%6s%6s%6s%6s%6s%6s%6s%6s%6s%6s%7s\0\0\0\0",
    /*3ce0*/ "CSFS\0\0\0\0",
    /*3ce8*/ "TFC\0",
    /*3cec*/ "SFC\0",
    /*3cf0*/ "TFS\0",
    /*3cf4*/ "MATH\0\0\0\0",
    /*3cfc*/ "STH2\0\0\0\0",
    /*3d04*/ "STH0\0\0\0\0",
    /*3d0c*/ "SDS2\0\0\0\0",
    /*3d14*/ "SDS1\0\0\0\0",
    /*3d1c*/ "SDS0\0\0\0\0",
    /*3d24*/ "SBS2\0\0\0\0",
    /*3d2c*/ "SBS1\0\0\0\0",
    /*3d34*/ "SBS0\0\0\0\0",
    /*3d3c*/ "nRef\0\0\0\0",
    /*3d44*/ "\n-------------------------------VI PIPE USER PIC ATTR-------------------------------------------------------------------\n\0\0\0",
    /*3dc0*/ "Enable\0\0",
    /*3dc8*/ "%8s%8s%8s%8s%8s%8s%8s%8s%8s%8s%8s%16s\0\0\0",
    /*3df0*/ "PhyAddr\0",
    /*3df8*/ "PoolID\0\0",
    /*3e00*/ "Stride\0\0",
    /*3e08*/ "PicID\0\0\0",
    /*3e10*/ "BgColor\0",
    /*3e18*/ "Mode\0\0\0\0",
    /*3e20*/ "ChnID\0\0\0",
    /*3e28*/ "%8d%8s%8d%8s%8x%8d%8s%8s%8s%8s%8s%16s\0\0\0",
    /*3e50*/ "--\0\0",
    /*3e54*/ "%8d%8s%8d%8s%8x%8d%8u%8u%8u%8s%8u%16llx\0",
    /*3e7c*/ "\n-------------------------------VI PIPE DUMP ATTR-----------------------------------------------------------------------\n\0\0\0",
    /*3ef8*/ "%8s%10s%10s\0",
    /*3f04*/ "Depth\0\0\0",
    /*3f0c*/ "%8d%10s%10u\0",
    /*3f18*/ "\n-------------------------------VI PIPE BNR DUMP ATTR-------------------------------------------------------------------\n\0\0\0",
    /*3f94*/ "\n-------------------------------VI CHN ATTR1----------------------------------------------------------------------------\n\0\0\0",
    /*4010*/ "%8s%8s%8s%10s%10s%8s%12s%12s%10s%14s%14s\0\0\0\0",
    /*403c*/ "DynamicRange\0\0\0\0",
    /*404c*/ "VideoFmt\0\0\0\0",
    /*4058*/ "Flip\0\0\0\0",
    /*4060*/ "Mirror\0\0",
    /*4068*/ "%8d%8d%8u%10u%10s%8s%12d%12d%10s%14s%14s\0\0\0\0",
    /*4094*/ "\n-------------------------------VI CHN ATTR2----------------------------------------------------------------------------\n\0\0\0",
    /*4110*/ "%14s%10s%10s\0\0\0\0",
    /*4120*/ "Align\0\0\0",
    /*4128*/ "%14s%10u%10u\0\0\0\0",
    /*4138*/ "\n-------------------------------VI EXTCHN ATTR1-------------------------------------------------------------------------\n\0\0\0",
    /*41b4*/ "%8s%8s%8s%8s%8s%10s%12s%12s%10s%14s%14s%10s\0",
    /*41e0*/ "SrcChn\0\0",
    /*41e8*/ "Source\0\0",
    /*41f0*/ "%8d%8d%8s%8d%8u%10u%12d%12d%10s%14s%14s%10u\0",
    /*421c*/ "\n-------------------------------VI EXTCHN ATTR2-------------------------------------------------------------------------\n\0\0\0",
    /*4298*/ "%7s\0",
    /*429c*/ "%7u\0",
    /*42a0*/ "\n-------------------------------VI CHN LOW DELAY ATTR-------------------------------------------------------------------\n\0\0\0",
    /*431c*/ "%8s%8s%8s%9s%9s\0",
    /*432c*/ "Effect\0\0",
    /*4334*/ "LineCnt\0",
    /*433c*/ "%8d%8d%8s%9d%9s\0",
    /*434c*/ "\n-------------------------------VI CHN CROP INFO------------------------------------------------------------------------\n\0\0\0",
    /*43c8*/ "%8s%8s%8s%10s%8s%8s%8s%8s%8s%8s%8s%8s\0\0\0",
    /*43f0*/ "TrimHgt\0",
    /*43f8*/ "TrimWid\0",
    /*4400*/ "TrimY\0\0\0",
    /*4408*/ "TrimX\0\0\0",
    /*4410*/ "CoorType\0\0\0\0",
    /*441c*/ "CropEn\0\0",
    /*4424*/ "%8d%8d%8s%10s%8d%8d%8u%8u%8u%8u%8u%8u\0\0\0",
    /*444c*/ "\n-------------------------------VI CHN ROTATION INFO--------------------------------------------------------------------\n\0\0\0",
    /*44c8*/ "%8s%8s%12s\0\0",
    /*44d4*/ "Rotation\0\0\0\0",
    /*44e0*/ "%8d%8d%12s\0\0",
    /*44ec*/ "\n-------------------------------VI CHN LDC INFO-------------------------------------------------------------------------\n\0\0\0",
    /*4568*/ "%8s%8s%8s%8s%8s%8s%10s%10s%10s%20s\0\0",
    /*458c*/ "DistortionRatio\0",
    /*459c*/ "YOffset\0",
    /*45a4*/ "XOffset\0",
    /*45ac*/ "XYRatio\0",
    /*45b4*/ "YRatio\0\0",
    /*45bc*/ "XRatio\0\0",
    /*45c4*/ "Aspect\0\0",
    /*45cc*/ "%8d%8d%8s%8s%8d%8d%10d%10d%10d%20d\0\0",
    /*45f0*/ "\n-------------------------------VI CHN LDCV2 INFO-------------------------------------------------------------------------\n\0",
    /*466c*/ "%8s%8s%8s%8s%8s%10s%10s\0",
    /*4684*/ "ShiftY\0\0",
    /*468c*/ "ShiftX\0\0",
    /*4694*/ "LenY\0\0\0\0",
    /*469c*/ "LenX\0\0\0\0",
    /*46a4*/ "%8d%8d%8s%8d%8d%10d%10d\0",
    /*46bc*/ "\n\n\0\0",
    /*46c0*/ "\n-------------------------------VI CHN ROTATIO_EX INFO------------------------------------------------------------------\n\0\0\0",
    /*473c*/ "%8s%8s%8s%10s%8s%10s%10s%10s%10s\0\0\0\0",
    /*4760*/ "Angle\0\0\0",
    /*4768*/ "ViewType\0\0\0\0",
    /*4774*/ "%8d%8d%8s%10s%8d%10d%10d%10d%10d\0\0\0\0",
    /*4798*/ "4_DOF_GME\0\0\0",
    /*47a4*/ "HYB\0",
    /*47a8*/ "6_DOF_GME\0\0\0",
    /*47b4*/ "GYRO\0\0\0\0",
    /*47bc*/ "Low\0",
    /*47c0*/ "Normal\0\0",
    /*47c8*/ "High\0\0\0\0",
    /*47d0*/ "IPC\0",
    /*47d4*/ "DV\0\0",
    /*47d8*/ "DRONE\0\0\0",
    /*47e0*/ "\n-------------------------------VI DIS CONFIG INFO1---------------------------------------------------------------------\n\0\0\0",
    /*485c*/ "%8s%8s%12s%8s%8s%8s%10s%8s%12s%14s%12s%8s\0\0\0",
    /*4888*/ "Scale\0\0\0",
    /*4890*/ "CamSteady\0\0\0",
    /*489c*/ "GyroBitWidth\0\0\0\0",
    /*48ac*/ "GyroRange\0\0\0",
    /*48b8*/ "FrmRate\0",
    /*48c0*/ "CropRatio\0\0\0",
    /*48cc*/ "BufNum\0\0",
    /*48d4*/ "PdtType\0",
    /*48dc*/ "Motion\0\0",
    /*48e4*/ "%8d%8d%12s%8s%8s%8d%10d%8d%12d%12d%12s%8s\0\0\0",
    /*4910*/ "\n-------------------------------VI DIS ATTR INFO------------------------------------------------------------------------\n\0\0\0",
    /*498c*/ "%8s%8s%8s%10s%10s%12s%10s%12s%12s%12s%12s%12s\0\0\0",
    /*49bc*/ "VerLimit\0\0\0\0",
    /*49c8*/ "HorLimit\0\0\0\0",
    /*49d4*/ "bStillCrop\0\0",
    /*49e0*/ "ViewAngle\0\0\0",
    /*49ec*/ "Timelag\0",
    /*49f4*/ "Roef\0\0\0\0",
    /*49fc*/ "MovSub\0\0",
    /*4a04*/ "GdcBypass\0\0\0",
    /*4a10*/ "DisChn\0\0",
    /*4a18*/ "%8d%8d%8d%10s%10s%12d%10d%12d%12d%12s%12d%12d\0\0\0",
    /*4a48*/ "\n-------------------------------VI CHN SPREAD INFO----------------------------------------------------------------------\n\0\0\0",
    /*4ac4*/ "%8s%8s%8s%8s%8s%10s\0",
    /*4ad8*/ "Coef\0\0\0\0",
    /*4ae0*/ "OutH\0\0\0\0",
    /*4ae8*/ "OutW\0\0\0\0",
    /*4af0*/ "%8d%8d%8s%8u%8u%10u\0",
    /*4b04*/ "\n-------------------------------VI EXTCHN FISHEYE ATTR------------------------------------------------------------------\n\0\0\0",
    /*4b80*/ "%8s%8s%8s%9s%8s%10s%9s%5s%9s%9s%7s%12s\0\0",
    /*4ba8*/ "FStrength\0\0\0",
    /*4bb4*/ "TCoef\0\0\0",
    /*4bbc*/ "VOffset\0",
    /*4bc4*/ "HOffset\0",
    /*4bcc*/ "LMF\0",
    /*4bd0*/ "BgEnable\0\0\0\0",
    /*4bdc*/ "RgnNum\0\0",
    /*4be4*/ "MntMode\0",
    /*4bec*/ "%8d%8d%8s%9s%8u%10s%#9x%5s%9d%9d%7u%12d\0",
    /*4c14*/ "\n-------------------------------VI EXTCHN FISHEYE REGION ATTR-----------------------------------------------------------\n\0\0\0",
    /*4c90*/ "%8s%8s%10s%10s%10s%11s%5s%6s%9s%9s%6s%6s%6s%6s\0\0",
    /*4cc0*/ "OutY\0\0\0\0",
    /*4cc8*/ "OutX\0\0\0\0",
    /*4cd0*/ "VerZoom\0",
    /*4cd8*/ "HorZoom\0",
    /*4ce0*/ "Tilt\0\0\0\0",
    /*4ce8*/ "Pan\0",
    /*4cec*/ "OutRadius\0\0\0",
    /*4cf8*/ "InRadius\0\0\0\0",
    /*4d04*/ "ViewMode\0\0\0\0",
    /*4d10*/ "RgnIndex\0\0\0\0",
    /*4d1c*/ "%8d%8d%10u%10s%10u%11u%5u%6u%9u%9u%6d%6d%6u%6u\0\0",
    /*4d4c*/ "\n-------------------------------VI CHN OUTPUT RESOLUTION----------------------------------------------------------------\n\0\0\0",
    /*4dc8*/ "%8s%8s%8s%8s%8s%8s%8s%8s%10s%14s%14s%10s\n\0\0\0",
    /*4df4*/ "FrameRate\0\0\0",
    /*4e00*/ "%8d%8d%8s%8s%8s%8d%8d%8s%10s%14s%14s%10u\0\0\0\0",
    /*4e2c*/ "\n-------------------------------VI CHN STATUS---------------------------------------------------------------------------\n\0\0\0",
    /*4ea8*/ "%8s%8s%8s%10s%10s%8s%8s%8s\n\0",
    /*4ec4*/ "VbFail\0\0",
    /*4ecc*/ "LostFrame\0\0\0",
    /*4ed8*/ "%8d%8d%8s%10u%10u%8u%8u%8u\0\0",
    /*4ef4*/ "\n-------------------------------VI PIPE Statistic-----------------------------------------------------------------------\n\0\0\0",
    /*4f70*/ "RecvPic\0",
    /*4f78*/ "%8s%12s%12s%12s%12s%12s%12s%12s%15s%10s\0",
    /*4fa0*/ "BeBufNum\0\0\0\0",
    /*4fac*/ "LowBandWidth\0\0\0\0",
    /*4fbc*/ "MaxTaskTm\0\0\0",
    /*4fc8*/ "CurTaskTm\0\0\0",
    /*4fd4*/ "MaxSoftTm\0\0\0",
    /*4fe0*/ "CurSoftTm\0\0\0",
    /*4fec*/ "BufCnt\0\0",
    /*4ff4*/ "LostCnt\0",
    /*4ffc*/ "%8d%12llu%12u%12u%12u%12u%12u%12u%15u%10d\0\0\0",
    /*5028*/ "\n-------------------------------VI PIPE STATUS--------------------------------------------------------------------------\n\0\0\0",
    /*50a4*/ "%8s%8s%10s%10s%10s%8s%8s%8s\n\0\0\0\0",
    /*50c4*/ "IntCnt\0\0",
    /*50cc*/ "%8d%8s%10u%10u%10u%8u%8u%8u\0",
    /*50e8*/ "\n-------------------------------VI DEBUG INFO------------------------------------------------------------\n\0\0",
    /*5154*/ "PipeDrvCtxSize\0\0",
    /*5164*/ "PipeMkpCtxSize\0\0",
    /*5174*/ "%20s%20s%20s\n\0\0\0",
    /*5184*/ "PipeCtxTotalSize\0\0\0\0",
    /*5198*/ "%20d%20d%20d\0\0\0\0",
    /*51a8*/ "\n-------------------------------MODULE PARAM ---------------------------------------------------------------------------\n\0\0\0",
    /*5224*/ "DropErrFrame\0\0\0\0",
    /*5234*/ "DetectErrFrame\0\0",
    /*5244*/ "%20s%20s\0\0\0\0",
    /*5250*/ "%20d%20u\0\0\0\0",
    /*525c*/ "\n-------------------------------VI DEV DETECT INFO----------------------------------------------------------------------\n\0\0\0",
    /*52d8*/ "ValidWidth\0\0",
    /*52e4*/ "%8s%12s%12s%12s\0",
    /*52f4*/ "TotalWidth\0\0",
    /*5300*/ "ValidHeight\0",
    /*530c*/ "%8d%12u%12u%12u\0",
    /*531c*/ "\n-------------------------------VI BAS DETECT INFO----------------------------------------------------------------------\n\0\0\0",
    /*5398*/ "\n-------------------------------VI ISP DETECT INFO----------------------------------------------------------------------\n\0\0\0",
    /*5414*/ "ISPID\0\0\0",
    /*541c*/ "START\0\0\0",
    /*5424*/ "EARLY\0\0\0",
    /*542c*/ "EARLY_END\0\0\0",
    /*5438*/ "VER_1\0\0\0",
    /*5440*/ "VER_2\0\0\0",
    /*5448*/ "VER_3\0\0\0",
    /*5450*/ "VER_4\0\0\0",
    /*5458*/ "DEV\0",
    /*545c*/ "FE\0\0",
    /*5460*/ "BE\0\0",
    /*5464*/ "360\0",
    /*5468*/ "OriScale\0\0\0\0",
    /*5474*/ "Desktop\0",
    /*547c*/ "Ceiling\0",
    /*5484*/ "Wall\0\0\0\0",
    /*548c*/ "Seg\0",
    /*5490*/ "Tile\0\0\0\0",
    /*5498*/ "Line\0\0\0\0",
    /*54a0*/ "Frame\0\0\0",
    /*54a8*/ "BypassNone\0\0",
    /*54b4*/ "BypassFe\0\0\0\0",
    /*54c0*/ "BypassBe\0\0\0\0",
    /*54cc*/ "RAW8\0\0\0\0",
    /*54d4*/ "RAW10\0\0\0",
    /*54dc*/ "RAW12\0\0\0",
    /*54e4*/ "RAW14\0\0\0",
    /*54ec*/ "RAW16\0\0\0",
    /*54f4*/ "SP422\0\0\0",
    /*54fc*/ "SP420\0\0\0",
    /*5504*/ "SP444\0\0\0",
    /*550c*/ "YUV400\0\0",
    /*5514*/ "SDR8\0\0\0\0",
    /*551c*/ "SDR10\0\0\0",
    /*5524*/ "HDR10\0\0\0",
    /*552c*/ "HLG\0",
    /*5530*/ "SLF\0",
    /*5534*/ "XDR\0",
    /*5538*/ "ALL\0",
    /*553c*/ "TYPICAL\0",
    /*5544*/ "INSIDE\0\0",
    /*554c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d, get bnr raw buffer failed !\n\0\0\0\0",
    /*5590*/ "[Func]:%s [Line]:%d [Info]:Pipe %d  can't get free node!\n\0\0\0",
    /*55cc*/ "HI_NULL != pstCurNode\0\0\0",
    /*55e4*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*5624*/ "pstCurNode->u32NodeCnt <= VI_MAX_NODE_NUM\0\0\0",
    /*5650*/ "pstCurNode->u64PhyAddr != 0\0",
    /*566c*/ "HI_NULL != pNode\0\0\0\0",
    /*5680*/ "HI_NULL != pstNode\0\0",
    /*5694*/ "[Func]:%s [Line]:%d [Info]:Vi proc%d should be %d but actual %d\n\0\0\0\0",
    /*56d8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d  phy chn %d lost frame according frame rate control !\n\0\0\0",
    /*5734*/ "[Func]:%s [Line]:%d [Info]:pipe id %d get vb fail,w:%d,h:%d\n\0\0\0\0",
    /*5774*/ "[Func]:%s [Line]:%d [Info]:pipe id %d get DIS vb fail,\n\0",
    /*57ac*/ "[Func]:%s [Line]:%d [Info]:ERR IRQ :u32ProcIntStatus:0x%x  enProcMode:%d\n\n\0\0",
    /*57f8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexisted!\n\0\0",
    /*5828*/ "[Func]:%s [Line]:%d [Info]:Pipe %d is destroying/resetting!\n\0\0\0\0",
    /*5868*/ "[Func]:%s [Line]:%d [Info]:Pipe %d is destroying/resetting/Working!\n\0\0\0\0",
    /*58b0*/ "0\0\0\0",
    /*58b4*/ "VI_PROC%d\0\0\0",
    /*58c0*/ "[Func]:%s [Line]:%d [Info]:Vi proc %d ioremap reg fail !\n\0\0\0",
    /*58fc*/ "[Func]:%s [Line]:%d [Info]:Vi %s register IRQ fail !\n\0\0\0",
    /*5934*/ "[Func]:%s [Line]:%d [Info]:Vi proc create node queue fail !\n\0\0\0\0",
    /*5974*/ "[Func]:%s [Line]:%d [Info]:Pipe %d pstPipeMkpCtx is null.\n\0\0",
    /*59b0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has not been started or triggered.\n\0\0",
    /*59f8*/ "%llu\0\0\0\0",
    /*5a00*/ "[Func]:%s [Line]:%d [Info]:PIPE %d VI_DATATHROW_INT\n\0\0\0\0",
    /*5a38*/ "[Func]:%s [Line]:%d [Info]:!!VI_DATATHROW_INT! PIPE %d: two int gap is %u, lasttime=%s, curtime=%s.\n\0\0\0\0",
    /*5aa0*/ "[Func]:%s [Line]:%d [Info]:PipeId %d VI_BUFOVF_INT\n\0",
    /*5ad4*/ "[Func]:%s [Line]:%d [Info]:PipeId %d Other err 0x%x\n\0\0\0\0",
    /*5b0c*/ "[Func]:%s [Line]:%d [Info]:PipeId %d without  VI_CC_INT IntStatus:0x%x\n\0",
    /*5b54*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Int time is too long: %u\n\0\0\0\0",
    /*5b94*/ "[Func]:%s [Line]:%d [Info]:Pipe %d no space to receive this frm!\r\n\0\0",
    /*5bd8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Chn %d, VideoFormat is Tile_16x8, not support VGS!\n\0\0",
    /*5c30*/ "[Func]:%s [Line]:%d [Info]:VI ViPipe %d bBufOk:%d bCapOK:%d lostInt++!\n\0",
    /*5c78*/ "[Func]:%s [Line]:%d [Info]:u32MaxW(%d) of PipeAttr is not equal to Width(%d) of input frame.\n\0\0\0",
    /*5cd8*/ "[Func]:%s [Line]:%d [Info]:u32MaxH(%d) of PipeAttr is not equal to Height(%d) of input frame.\n\0\0",
    /*5d38*/ "[Func]:%s [Line]:%d [Info]:Pipe %d lost this frm!\r\n\0",
    /*5d6c*/ "[Func]:%s [Line]:%d [Info]:MastPipe %d unexisted!\n\0\0",
    /*5da0*/ "[Func]:%s [Line]:%d [Info]:MastPipe %d is destroying!\n\0\0",
    /*5dd8*/ "[Func]:%s [Line]:%d [Info]:ViPipe:%d MastPipe %d WDRMode:%d  Master pipe WDRMode: %d!\n\0\0",
    /*5e30*/ "[Func]:%s [Line]:%d [Info]:===> offline split need no compress mode, return.\n\0\0\0",
    /*5e80*/ "[Func]:%s [Line]:%d [Info]:Pipe %d lost frame because of wrong int order!\n\0\0",
    /*5ecc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d lost frame according frame rate control !\n\0\0\0",
    /*5f1c*/ "[Func]:%s [Line]:%d [Info]:pipe id %d get vb fail\n\0\0",
    /*5f50*/ "[Func]:%s [Line]:%d [Info]:VI ViPipe %d lostInt++!\n\0",
    /*5f84*/ "VI_CAP%d\0\0\0\0",
    /*5f90*/ "[Func]:%s [Line]:%d [Info]:ViCap%d ioremap reg fail !\n\0\0",
    /*5fc8*/ "[Func]:%s [Line]:%d [Info]:ViCap%d init fail !\n\0",
    /*5ff8*/ "\n-------------------------------VI HW STATISTIC-------------------------------------------------------------------------\n\0\0\0",
    /*6074*/ "HWCostTm\0\0\0\0",
    /*6080*/ "ProcIdx\0",
    /*6088*/ "%9s%12s%12s%12s%12s\n\0\0\0\0",
    /*60a0*/ "MaxCycleCnt\0",
    /*60ac*/ "CycleCnt\0\0\0\0",
    /*60b8*/ "MaxHWCostTm\0",
    /*60c4*/ "%9d%12llu%12llu%12llu%12llu\0",
    /*60e0*/ "\n\0\0\0",
    /*60e4*/ "\n-------------------------------VI PROC OFFLINE IRQ STATISTIC----------------------------------------------------------\n\0\0\0\0",
    /*6160*/ "SubmitCnt\0\0\0",
    /*616c*/ "%8s%16s%16s%16s%10s%10s%12s%12s%14s\n\0\0\0\0",
    /*6194*/ "NodeIdErrCnt\0\0\0\0",
    /*61a4*/ "StartErrCnt\0",
    /*61b0*/ "DcmpErrCnt\0\0",
    /*61bc*/ "BusErrCnt\0\0\0",
    /*61c8*/ "TmOutCnt\0\0\0\0",
    /*61d4*/ "ListCnt\0",
    /*61dc*/ "IntCnt\0\0",
    /*61e4*/ "%8d%16llu%16llu%16llu%10llu%10llu%12llu%12llu%14llu\0",
    /*6218*/ "\n-------------------------------VI PROC ONLINE IRQ STATISTIC-----------------------------------------------------------\n\0\0\0\0",
    /*6294*/ "%8s%16s%16s%10s%12s%10s%14s%12s\n\0\0\0\0",
    /*62b8*/ "CfgLossCnt\0\0",
    /*62c4*/ "FrmFlowCnt\0\0",
    /*62d0*/ "FrmErrCnt\0\0\0",
    /*62dc*/ "FrmStartCnt\0",
    /*62e8*/ "%8d%16llu%16llu%10llu%12llu%10llu%14llu%12llu\0\0\0",
    /*6318*/ "\n-------------------------------VI PROC COST TIME STATISTIC-----------------------------------------------------------\n\0",
    /*6390*/ "IntCntPerSec\0\0\0\0",
    /*63a0*/ "%8s%16s%16s%14s%14s%16s%14s%16s\n\0\0\0\0",
    /*63c4*/ "MaxIntTmPerSec\0\0",
    /*63d4*/ "IntTmPerSec\0",
    /*63e0*/ "TotalIntCostTm\0\0",
    /*63f0*/ "MaxIntCostTm\0\0\0\0",
    /*6400*/ "CurIntCostTm\0\0\0\0",
    /*6410*/ "MaxIntCntPerSec\0",
    /*6420*/ "%8d%16u%16u%14u%14u%16llu%14u%16u\0\0\0",
    /*6444*/ "[Func]:%s [Line]:%d [Info]:VGS_COVEREX/OSD task fail!\n\0\0",
    /*647c*/ "[Func]:%s [Line]:%d [Info]:VGS ext chn task fail!\n\0\0",
    /*64b0*/ "[Func]:%s [Line]:%d [Info]:VGS_bypass task fail!\n\0\0\0",
    /*64e4*/ "[Func]:%s [Line]:%d [Info]:VGS_region_luma task fail!\n\0\0",
    /*651c*/ "[Func]:%s [Line]:%d [Info]:Can't get VGS export function, it may be VGS module has not been inserted!\n\0\0",
    /*6584*/ "[Func]:%s [Line]:%d [Info]:get free task failed!\n\0\0\0",
    /*65b8*/ "[Func]:%s [Line]:%d [Info]:begin bypass job fail with 0x%x!\n\0\0\0\0",
    /*65f8*/ "[Func]:%s [Line]:%d [Info]:Add bypass task fail with 0x%x!\n\0",
    /*6634*/ "[Func]:%s [Line]:%d [Info]:End job fail with 0x%x!\n\0",
    /*6668*/ "[Func]:%s [Line]:%d [Info]:Add task or end job fail with 0x%x!\n\0",
    /*66a8*/ "[Func]:%s [Line]:%d [Info]:VGS_COVEREX task fail!\n\0\0",
    /*66dc*/ "[Func]:%s [Line]:%d [Info]:VGS_OSD task fail!\n\0\0",
    /*670c*/ "[Func]:%s [Line]:%d [Info]:Add COVEREX task fail with 0x%x!\n\0\0\0\0",
    /*674c*/ "[Func]:%s [Line]:%d [Info]:Add region luma task fail with 0x%x!\n\0\0\0\0",
    /*6790*/ "[Func]:%s [Line]:%d [Info]:Add osd task fail with 0x%x!\n\0\0\0\0",
    /*67cc*/ "[Func]:%s [Line]:%d [Info]:VGS add Online task  fail!\n\0\0",
    /*6804*/ "[Func]:%s [Line]:%d [Info]:VGS bypass !\n\0\0\0\0",
    /*6830*/ "[Func]:%s [Line]:%d [Info]:VGS job start fail!\n\0",
    /*6860*/ "[Func]:%s [Line]:%d [Info]:Add Online task fail with 0x%x!\n\0",
    /*689c*/ "[Func]:%s [Line]:%d [Info]:Add Osd task fail with 0x%x!\n\0\0\0\0",
    /*68d8*/ "[Func]:%s [Line]:%d [Info]:Vgs end job fail with 0x%x!\n\0",
    /*6910*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexisted!\n\0\0",
    /*6940*/ "[Func]:%s [Line]:%d [Info]:Vipipe(%d) Can not set snap attr in WDR mode.\n\0\0\0",
    /*698c*/ "[Func]:%s [Line]:%d [Info]:Snap attr enSnapType:%d is error.\n\0\0\0",
    /*69cc*/ "[Func]:%s [Line]:%d [Info]:Snap attr bLoadCCM:%d is error.\n\0",
    /*6a08*/ "[Func]:%s [Line]:%d [Info]:Snap attr stNormalAttr.u32FrameCnt must greate than 0.\n\0\0",
    /*6a5c*/ "[Func]:%s [Line]:%d [Info]:Snap attr stNormalAttr.u32RepeatSendTimes:%d is error.\n\0\0",
    /*6ab0*/ "[Func]:%s [Line]:%d [Info]:Invalid param bZSL: %d, must be HI_TRUE or HI_FALSE\n\0",
    /*6b00*/ "[Func]:%s [Line]:%d [Info]:ZSL snap must be double pipe mode.\n\0\0",
    /*6b40*/ "[Func]:%s [Line]:%d [Info]:Snap pipe mode must be VI_PIPE_MODE_OFFLINE in ZSL snap.\n\0\0\0\0",
    /*6b98*/ "[Func]:%s [Line]:%d [Info]:Snap attr stNormalAttr.u32FrameDepth:%d is error, must be in (%d, %d].\n\0\0",
    /*6bfc*/ "[Func]:%s [Line]:%d [Info]:Snap attr stProAttr.u32FrameCnt:%d is error.\n\0\0\0\0",
    /*6c48*/ "[Func]:%s [Line]:%d [Info]:Snap attr stProAttr.stProParam.enOperationMode:%d is error.\n\0",
    /*6ca0*/ "[Func]:%s [Line]:%d [Info]:Snap attr stProParam.stManualParam.au32ManSysgain[%d]:%d is error.\n\0\0",
    /*6d00*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has been triggered and has not yet been finished,can not set snap attr! \n\0\0\0\0",
    /*6d70*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has been uncreated ! \n\0\0\0",
    /*6dac*/ "[Func]:%s [Line]:%d [Info]:creat picture queue fail!\n\0\0\0",
    /*6de4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d creat snap raw picture queue fail!\n\0\0",
    /*6e2c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d creat snap ZSL raw picture queue fail!\n\0\0",
    /*6e78*/ "[Func]:%s [Line]:%d [Info]:pipe(%d) Snap attr is not configured\n\0\0\0\0",
    /*6ebc*/ "[Func]:%s [Line]:%d [Info]:can not enable snap when single pipe.\n\0\0\0",
    /*6f00*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has been started, you should not start it in snap pipe.\n\0",
    /*6f5c*/ "[Func]:%s [Line]:%d [Info]:Can't enable snap when WDR mode is set!\n\0",
    /*6fa0*/ "[Func]:%s [Line]:%d [Info]:The enViSnapStatus of pipe %d is %d, can not enable again.\n\0\0",
    /*6ff8*/ "[Func]:%s [Line]:%d [Info]:Video Pipe %d has been uncreated ! \n\0",
    /*7038*/ "[Func]:%s [Line]:%d [Info]:The number of dev(%d) bind pipe(%d) is %d, which is error in snap mode.\n\0",
    /*709c*/ "[Func]:%s [Line]:%d [Info]:can not disable snap when single pipe.\n\0\0",
    /*70e0*/ "[Func]:%s [Line]:%d [Info]:Disable isp snap pipe %d error! \n\0\0\0\0",
    /*7120*/ "[Func]:%s [Line]:%d [Info]:Pipe %d trigger ends early ! \n\0\0\0",
    /*715c*/ "[Func]:%s [Line]:%d [Info]:It is not recommended to end early when the snap online pipe %d triggered ! \n\0\0\0\0",
    /*71c8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has not been snap enabled ! \n\0\0\0\0",
    /*720c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has not been start! \n\0\0\0\0",
    /*7248*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has been triggered and has not yet been finished ! \n\0",
    /*72a0*/ "[Func]:%s [Line]:%d [Info]:Set isp %d pro enable error %x. \n\0\0\0\0",
    /*72e0*/ "[Func]:%s [Line]:%d [Info]:Get isp %d pro ctrl error %x. \n\0\0",
    /*731c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d ZSL busy node is null. \n\0",
    /*7358*/ "[Func]:%s [Line]:%d [Info]:Snap pipe %d no space to receive this frm!\n\0\0",
    /*73a0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d no space to receive this frm!\n\0\0\0",
    /*73e4*/ "[Func]:%s [Line]:%d [Info]:Pipe:%d,the BusyNum of stDumpPipeRawPicQueue is not equal 0 ,but stDumpPipeRawPicQueue is empty! \n\0\0\0",
    /*7464*/ "[Func]:%s [Line]:%d [Info]:Pipe:%d VI_DRV_GetBeCfg fail.\n\0\0\0",
    /*74a0*/ "[Func]:%s [Line]:%d [Info]:enPipeMode:%d get error.\n\0\0\0\0",
    /*74d8*/ "[Func]:%s [Line]:%d [Info]:Pipe%d is not created.\n\0\0",
    /*750c*/ "[Func]:%s [Line]:%d [Info]:pstSnapIspInfo is NULL.\n\0",
    /*7540*/ "[Func]:%s [Line]:%d [Info]:This pipe(%d) is not snap pipe(%d), can not get isp config info.\n\0\0\0\0",
    /*75a0*/ "[Func]:%s [Line]:%d [Info]:stSnapAttr.enSnapType:%d is error!\n\0\0",
    /*75e0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Chn %d discard this frame u32FrameFlag=0x%x, pts=%llu\n\0\0\0",
    /*763c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Chn %d discard this frame !\n\0",
    /*767c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d is destroying!\n\0\0",
    /*76b0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d discard this bnr raw u32FrameFlag=0x%x, pts=%llu\n\0\0\0\0",
    /*7708*/ "[Func]:%s [Line]:%d [Info]:Pipe %d discard this frame !\n\0\0\0\0",
    /*7744*/ "[Func]:%s [Line]:%d [Info]:ZSL pipe %d no space to receive this frm!\n\0\0\0",
    /*778c*/ "[Func]:%s [Line]:%d [Info]:VI pipe:%d, ISP is not init!\n\0\0\0\0",
    /*77c8*/ "NORMAL\0\0",
    /*77d0*/ "PRO\0",
    /*77d4*/ "-\0\0\0",
    /*77d8*/ "\n-------------------------------VI SNAP ATTR INFO-----------------------------------------------------------------------\n\0\0\0",
    /*7854*/ "Type\0\0\0\0",
    /*785c*/ "PipeID\0\0",
    /*7864*/ "%8s%8s%10s%10s%10s%8s%10s%12s%10s\0\0\0",
    /*7888*/ "Interval\0\0\0\0",
    /*7894*/ "RollbaskMs\0\0",
    /*78a0*/ "FrmDepth\0\0\0\0",
    /*78ac*/ "bZSL\0\0\0\0",
    /*78b4*/ "rptTimes\0\0\0\0",
    /*78c0*/ "FrameCnt\0\0\0\0",
    /*78cc*/ "bLoadCCM\0\0\0\0",
    /*78d8*/ "\n\0\0\0",
    /*78dc*/ "%8d%8s%10d\0\0",
    /*78e8*/ "%10d%10d%8d%10d%12d%10d\0",
    /*7900*/ "%10d%10d%8s%10s%12s%10s\0",
    /*7918*/ "\n-------------------------------VI SNAP STATUS INFO---------------------------------------------------------------------\n\0\0\0",
    /*7994*/ "bDoublePipe\0",
    /*79a0*/ "Status\0\0",
    /*79a8*/ "%8s%12s%10s%10s%10s%12s\0",
    /*79c0*/ "ProDelayInt\0",
    /*79cc*/ "VcNum\0\0\0",
    /*79d4*/ "SnapPipe\0\0\0\0",
    /*79e0*/ "VideoPipe\0\0\0",
    /*79ec*/ "%8s%12d%10d%10d%10d%12d\0",
    /*7a04*/ "[Func]:%s [Line]:%d [Info]:vi pipe %d has been uncreated ! \n\0\0\0\0",
    /*7a44*/ "[Func]:%s [Line]:%d [Info]:vpss%d mode is %d, do not need to get snap status! \n\0",
    /*7a94*/ "[Func]:%s [Line]:%d [Info]:vpss %d discard this frame u32FrameFlag=0x%x, pts=%llu\n\0\0",
    /*7ae8*/ "[Func]:%s [Line]:%d [Info]:vpss %d discard this frame !\n\0\0\0\0",
    /*7b24*/ "[Func]:%s [Line]:%d [Info]:vi pipe %d has been uncreated !\n\0",
    /*7b60*/ "[Func]:%s [Line]:%d [Info]:vpss %d u32SnapVcNum %d discard frame !\n\0",
    /*7ba4*/ "Disable\0",
    /*7bac*/ "Enable\0\0",
    /*7bb4*/ "Trigger\0",
    /*7bbc*/ "Finished\0\0\0\0",
    /*7bc8*/ "[Func]:%s [Line]:%d [Info]:can't get viPipe%d's context\n\0\0\0\0",
    /*7c04*/ "[Func]:%s [Line]:%d [Info]:VGS_bypass task fail!\n\0\0\0",
    /*7c38*/ "[Func]:%s [Line]:%d [Info]:VI_StartNoIntDet init timer failed!\n\0",
    /*7c78*/ "[Func]:%s [Line]:%d [Info]:Pipe:%d  SrcFrmRate is %d, enable NoIntDet, DstFrmRate is %d, interval:%d\n\0\0\0",
    /*7ce0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has been uncreated ! \n\0\0\0",
    /*7d1c*/ "[Func]:%s [Line]:%d [Info]:please set user pic first\n\0\0\0",
    /*7d54*/ "[Func]:%s [Line]:%d [Info]:enUsrPicMode invalid, enUsrPicMode %d\n\0\0\0",
    /*7d98*/ "[Func]:%s [Line]:%d [Info]:pool id invalid:%d\n\0\0",
    /*7dc8*/ "[Func]:%s [Line]:%d [Info]:enPixelFormat invalid, only support sp420/sp422/single \n\0",
    /*7e1c*/ "[Func]:%s [Line]:%d [Info]:the width must be in [%d,%d], the height must be in [%d, %d]\n\0\0\0\0",
    /*7e78*/ "[Func]:%s [Line]:%d [Info]:the userpic size(%d, %d) must be even value\n\0",
    /*7ec0*/ "[Func]:%s [Line]:%d [Info]:userpic invalid, poolid:%d, phyaddr[0]:0x%lx\n\0\0\0\0",
    /*7f0c*/ "[Func]:%s [Line]:%d [Info]:userpic invalid, enCompressMode:%d, don't support compressed pic.\n\0\0\0",
    /*7f6c*/ "[Func]:%s [Line]:%d [Info]:userpic invalid enField:%d, only support VIDEO_FIELD_FRAME.\n\0",
    /*7fc4*/ "[Func]:%s [Line]:%d [Info]:userpic invalid enVideoFormat:%d, only support VIDEO_FORMAT_LINEAR.\n\0",
    /*8024*/ "[Func]:%s [Line]:%d [Info]:userpic invalid enDynamicRange:%d, only support DYNAMIC_RANGE_SDR8.\n\0",
    /*8084*/ "[Func]:%s [Line]:%d [Info]:userpic invalid enColorGamut:%d, should between [%d, %d).\n\0\0\0",
    /*80dc*/ "[Func]:%s [Line]:%d [Info]:usrpic bgcolor(0x%x) invalid, must be in[0x0,0xffffff]\n\0\0",
    /*8130*/ "[Func]:%s [Line]:%d [Info]:check userPic error!\n\0\0\0\0",
    /*8164*/ "[Func]:%s [Line]:%d [Info]:get free task failed!\n\0\0\0",
    /*8198*/ "[Func]:%s [Line]:%d [Info]:begin bypass job fail with 0x%x!\n\0\0\0\0",
    /*81d8*/ "[Func]:%s [Line]:%d [Info]:Add bypass task fail with 0x%x!\n\0",
    /*8214*/ "[Func]:%s [Line]:%d [Info]:End job fail with 0x%x!\n\0",
    /*8248*/ "[Func]:%s [Line]:%d [Info]:Add task or end job fail with 0x%x!\n\0",
    /*8288*/ "[Func]:%s [Line]:%d [Info]:pipe id %d get stUserPicDst vb fail\n\0",
    /*82c8*/ "[Func]:%s [Line]:%d [Info]:VGS add userPic Online task  fail! need callback .\n\0\0",
    /*8318*/ "[Func]:%s [Line]:%d [Info]:VGS add userPicBg cover task  fail! need callback .\n\0",
    /*8368*/ "[Func]:%s [Line]:%d [Info]:VGS is not exist!\n\0\0\0",
    /*8398*/ "[Func]:%s [Line]:%d [Info]:VGS job start fail!\n\0",
    /*83c8*/ "[Func]:%s [Line]:%d [Info]:Add UserPic Online task fail with 0x%x!\n\0",
    /*840c*/ "[Func]:%s [Line]:%d [Info]:Vgs end job fail with 0x%x!\n\0",
    /*8444*/ "[Func]:%s [Line]:%d [Info]:Add UserPic Cover task fail with 0x%x!\n\0\0",
    /*8488*/ "[Func]:%s [Line]:%d [Info]:Pipe %d lost frame according frame rate control !\n\0\0\0",
    /*84d8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d source %d error, only support VI_PIPE_FRAME_SOURCE_DEV!\n\0",
    /*8534*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) Ctx is NULL\r\n\0",
    /*8568*/ "[Func]:%s [Line]:%d [Info]:Pipe %d is destroying/resetting/Working!\n\0\0\0\0",
    /*85b0*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) Timer is not existed !\r\n\0\0",
    /*85f0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexisted!\n\0\0",
    /*8620*/ "[Func]:%s [Line]:%d [Info]:Pipe %d can not send raw from be while vi-vpss-mode is not VI_OFFLINE_VPSS_OFFLINE nor VI_OFFLINE_VPSS_ONLINE!\n\0\0",
    /*86ac*/ "[Func]:%s [Line]:%d [Info]:astRawDataInfo copy_from_user failed! s32Ret:0x%x src:0x%llx  dst:0x%lx.\n\0\0\0\0",
    /*8714*/ "[Func]:%s [Line]:%d [Info]:Pipe %d can not send yuv while pipe frame source is not VI_PIPE_FRAME_SOURCE_USER_BE!\n\0\0\0",
    /*8788*/ "[Func]:%s [Line]:%d [Info]:Pipe %d can not send yuv while pipe enPipeBypassMode is VI_PIPE_BYPASS_BE!\n\0\0",
    /*87f0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d s32MilliSec %d err!\n\0",
    /*8828*/ "[Func]:%s [Line]:%d [Info]:Pipe %d illegal PipeNum: %d, should >1!\n\0",
    /*886c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d please start pipe first!!\n\0\0\0",
    /*88ac*/ "[Func]:%s [Line]:%d [Info]:Pipe %d can't use sys,please check sys module!\n\0\0",
    /*88f8*/ "[Func]:%s [Line]:%d [Info]:astRawDataInfo copy_from_user failed! i:%d s32Ret:0x%x src:0x%llx  dst:0x%lx.\n\0\0\0",
    /*8964*/ "[Func]:%s [Line]:%d [Info]:Pipe %d User pic queue is full!!!!\n\0\0",
    /*89a4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d User pic queue is full!!!!s32MilliSec %d \n\0\0\0",
    /*89f4*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d  has exited \n\0\0",
    /*8a28*/ "[Func]:%s [Line]:%d [Info]:Pipe %d  queue is full,can't receive.!!\n\0",
    /*8a6c*/ "[Func]:%s [Line]:%d [Info]:Null pointer!FUNCTION %s,LINE %d!\n\0\0\0",
    /*8aac*/ "[Func]:%s [Line]:%d [Info]:Pipe %d not support send Raw frome FE!\n\0\0",
    /*8af0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d can not support send frame when pipe frame source is VI_PIPE_FRAME_SOURCE_DEV!\n\0\0",
    /*8b64*/ "[Func]:%s [Line]:%d [Info]:Pipe %d illegal PipeNum: %d, should between [%d,%d] !\n\0\0\0",
    /*8bb8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d au64RawInfoAddr[%d] address is invalid!\n\0",
    /*8c04*/ "[Func]:%s [Line]:%d [Info]:s32MilliSec(%d) must be >= -1!\n\0\0",
    /*8c40*/ "[Func]:%s [Line]:%d [Info]:Func: %s, Line: %d ERESTARTSYS\n\0\0",
    /*8c7c*/ "[Func]:%s [Line]:%d [Info]:Vi pipe %d   get  frame time out, s32MilliSec=%d\n\0\0\0\0",
    /*8ccc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d add User Failure!\n\0\0\0",
    /*8d04*/ "[Func]:%s [Line]:%d [Info]:Pipe %d add VI Failure!\n\0",
    /*8d38*/ "[Func]:%s [Line]:%d [Info]:user copy stFrameInfo for VI_GetPipeRaw failed!\n\0",
    /*8d84*/ "[Func]:%s [Line]:%d [Info]:Pipe %d pstVideoFrame address is invalid!\n\0\0\0",
    /*8dcc*/ "[Func]:%s [Line]:%d [Info]:Vi chn %d is disabled, not allowed to get Chn Frame!\n\0\0\0\0",
    /*8e20*/ "[Func]:%s [Line]:%d [Info]:Vi pipe %d  chn %d get chn frame time out, s32MilliSec=%d\n\0\0\0",
    /*8e78*/ "[Func]:%s [Line]:%d [Info]:osal_copy_to_user: copy VideoFrame for %s failed!\n\0\0\0",
    /*8ec8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d pstFrameInfo address is invalid!\n\0\0\0\0",
    /*8f10*/ "[Func]:%s [Line]:%d [Info]:bEnable should be 0 or 1 which is %d!\n\0\0\0",
    /*8f54*/ "[Func]:%s [Line]:%d [Info]:ViDev: %d is not enable, Set DevTiming failed!\n\0\0",
    /*8fa0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has been Uncreated ! \n\0\0\0",
    /*8fdc*/ "[Func]:%s [Line]:%d [Info]:Pipe:%d,the BusyNum of stDumpPipeRawPicQueue is not equal 0 ,but stDumpPipeRawPicQueue is empty! \n\0\0\0",
    /*905c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has been Un_created ! \n\0\0",
    /*9098*/ "[Func]:%s [Line]:%d [Info]:Pipe %d bnr is not enable!\n\0\0",
    /*90d0*/ "[Func]:%s [Line]:%d [Info]:Vi pipe %d get bnr frame time out, s32MilliSec=%d\n\0\0\0",
    /*9120*/ "[Func]:%s [Line]:%d [Info]:Vi pipe %d get bnr raw time out, s32MilliSec=%d\n\0",
    /*916c*/ "[Func]:%s [Line]:%d [Info]:Bnr dump attr bEnable:%d is error, must be in HI_TRUE or HI_FALSE.\n\0\0",
    /*91cc*/ "[Func]:%s [Line]:%d [Info]:Bnr dump attr u32Depth:%d is error, must be in [%d, %d].\n\0\0\0\0",
    /*9224*/ "[Func]:%s [Line]:%d [Info]:Bnr dump attr u32Depth:%d is error, must be greater than 0 when enabled.\n\0\0\0\0",
    /*928c*/ "[Func]:%s [Line]:%d [Info]:creat picture queue fail!\n\0\0\0",
    /*92c4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d creat bnr raw queue failed\n\0\0",
    /*9304*/ "[Func]:%s [Line]:%d [Info]:Pipe %d lost this frm because get be cfg failed!\r\n\0\0\0",
    /*9354*/ "[Func]:%s [Line]:%d [Info]:Pipe %d there is no WDR NodeSpace to receive this frm!\r\n\0",
    /*93a8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d no WDR NodeSpace to receive this frm!\r\n\0\0",
    /*93f4*/ "[Func]:%s [Line]:%d [Info]:GDC_bypass task fail!\n\0\0\0",
    /*9428*/ "[Func]:%s [Line]:%d [Info]:GDC task time out!\n\0\0",
    /*9458*/ "[Func]:%s [Line]:%d [Info]:GDC task fail!\n\0\0",
    /*9484*/ "[Func]:%s [Line]:%d [Info]:FISHEYE task fail!\n\0\0",
    /*94b4*/ "[Func]:%s [Line]:%d [Info]:can't get gdc export function, it may be gdc module has not been inserted!\n\0\0",
    /*951c*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) ViChn(%d) VideoFormat is %d, not support!\n\0\0\0\0",
    /*9570*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) ViChn(%d) enPixelFormat is %d, not support!\n\0\0",
    /*95c4*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) ViChn(%d) enCompressMode is not NONE, not support!\n\0\0\0",
    /*9620*/ "[Func]:%s [Line]:%d [Info]:Not support Chn(%d)!\n\0\0\0\0",
    /*9654*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexist!\n\0\0\0\0",
    /*9684*/ "[Func]:%s [Line]:%d [Info]:please first set chn (%d, %d)'s attr\n\0\0\0\0",
    /*96c8*/ "[Func]:%s [Line]:%d [Info]: Rotate_Ex and Rotate cannot On at the same time! enRotate(%d),Rotate_bEnable(%d).\n\0\0",
    /*9738*/ "[Func]:%s [Line]:%d [Info]:please first set chn (%d, %d)'s attr\0",
    /*9778*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d can't change chn spread attr because some extchn binded to this phychn enable fisheye!\n\0\0\0",
    /*97fc*/ "[Func]:%s [Line]:%d [Info]:When Spread and LDC On,LDC Ratio(%d) cannot smaller than 0.\n\0",
    /*9854*/ "[Func]:%s [Line]:%d [Info]:User Sub Err! 0x%x \r\n\0\0\0\0",
    /*9888*/ "[Func]:%s [Line]:%d [Info]:VI:VB invalid \r\n\0",
    /*98b4*/ "[Func]:%s [Line]:%d [Info]:can't get GDC export function, it may be GDC module has not been inserted!\n\0\0",
    /*991c*/ "[Func]:%s [Line]:%d [Info]:Gdc Motion Alg Init failed!!!,0x%x!\n\0",
    /*995c*/ "[Func]:%s [Line]:%d [Info]:DIS chn %d is not created !\n\0",
    /*9994*/ "[Func]:%s [Line]:%d [Info]:Gdc Motion Alg DeInit fail ,0x%x!\n\0\0\0",
    /*99d4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Vi_InitLocalDisAlgorithm error : 0x%x!\n\0\0\0",
    /*9a28*/ "[Func]:%s [Line]:%d [Info]:can't get GDC export function, it may be GDC module has not been inserted\n\0\0\0",
    /*9a90*/ "[Func]:%s [Line]:%d [Info]:GdcChn chn %d is not created !\n\0\0",
    /*9acc*/ "[Func]:%s [Line]:%d [Info]:Destroy GDC chn %d fail ,0x%x!\n\0\0",
    /*9b08*/ "[Func]:%s [Line]:%d [Info]:Create GDC chn fail ,0x%x!\n\0\0",
    /*9b40*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d get PMF out blk failed, width: %d, height: %d.\n\0\0\0",
    /*9b9c*/ "[Func]:%s [Line]:%d [Info]:VI DRV Get FrameInfo From Isp Failed, s32Ret(0x%x) !\n\0\0\0\0",
    /*9bf0*/ "[Func]:%s [Line]:%d [Info]:get gdc task fail !\n\0",
    /*9c20*/ "[Func]:%s [Line]:%d [Info]:submit gdc bypass task fail !\n\0\0\0",
    /*9c5c*/ "[Func]:%s [Line]:%d [Info]:can't get gdc param, it may be gdc chn has not been created\n\0",
    /*9cb4*/ "[Func]:%s [Line]:%d [Info]:get gdc normal task fail !\n\0\0",
    /*9cec*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Chn %d Gdc Function Proc failed ! \n\0\0",
    /*9d34*/ "[Func]:%s [Line]:%d [Info]:ViPipe:%d ViChn:%d release VB fail!\n\0",
    /*9d74*/ "[Func]:%s [Line]:%d [Info]:get gdc fisheye task fail !\n\0",
    /*9dac*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d get FISHEYE out blk failed, width: %d, height: %d.\n\0\0\0",
    /*9e0c*/ "[Func]:%s [Line]:%d [Info]:Pipe:%d Chn:%d proccess spread task failed ! \n\0\0\0",
    /*9e58*/ "[Func]:%s [Line]:%d [Info]:pParam is NULL !\n\0\0\0\0",
    /*9e88*/ "[Func]:%s [Line]:%d [Info]:Not support Chn(%d)!\n\0\0\0\0",
    /*9ebc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d unexisted!\n\0\0",
    /*9eec*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) is BypassBe Mode, not support dis!!\n\0\0",
    /*9f38*/ "[Func]:%s [Line]:%d [Info]:can't get DIS export function, it may be DIS module has not been inserted!\n\0\0",
    /*9fa0*/ "[Func]:%s [Line]:%d [Info]:Create DIS chn fail ,0x%x!\n\0\0",
    /*9fd8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d,chn %d creat dis chn failed\n\0",
    /*a018*/ "[Func]:%s [Line]:%d [Info]:enMode:%d illegal\n\0\0\0",
    /*a048*/ "[Func]:%s [Line]:%d [Info]:enPdtType:%d illegal\n\0\0\0\0",
    /*a07c*/ "[Func]:%s [Line]:%d [Info]:u32BufNum:%d Range[%d,%d]!\n\0\0",
    /*a0b4*/ "[Func]:%s [Line]:%d [Info]:u32FrameRate:%d Range(%d,%d]\n\0\0\0\0",
    /*a0f0*/ "[Func]:%s [Line]:%d [Info]:u32CropRatio:%d Range[%d,%d]\n\0\0\0\0",
    /*a12c*/ "[Func]:%s [Line]:%d [Info]:u32GyroOutputRange:%d Range[%d,%d]!\n\0",
    /*a16c*/ "[Func]:%s [Line]:%d [Info]:u32GyroDataBitWidth:%d Range[%d,%d]\n\0",
    /*a1ac*/ "[Func]:%s [Line]:%d [Info]:bCameraSteady:%d Range[0,1]\n\0",
    /*a1e4*/ "[Func]:%s [Line]:%d [Info]:bScale:%d) Range[0,1]\n\0\0\0",
    /*a218*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d can't set DIS config since the chn already enable DIS!\n\0\0\0",
    /*a27c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d DIS Config error!\n\0\0\0\0",
    /*a2bc*/ "[Func]:%s [Line]:%d [Info]:illegal param: u32MovingSubjectLevel(%d) err,u32MovingSubjectLevel Range is [%d,%d]!\n\0\0\0\0",
    /*a330*/ "[Func]:%s [Line]:%d [Info]:illegal param: s32RollingShutterCoef(%d) err,s32RollingShutterCoef Range is [%d,%d]!\n\0\0\0\0",
    /*a3a4*/ "[Func]:%s [Line]:%d [Info]:illegal param: s32Timelag(%d) err,s32Timelag Range is [%d,%d]!\n\0\0",
    /*a400*/ "[Func]:%s [Line]:%d [Info]:illegal param: u32HorizontalLimit(%d) err,u32HorizontalLimit Range is [%d,%d]!\n\0\0",
    /*a46c*/ "[Func]:%s [Line]:%d [Info]:illegal param: u32VerticalLimit(%d) err,u32VerticalLimit Range is [%d,%d]!\n\0\0",
    /*a4d4*/ "[Func]:%s [Line]:%d [Info]:illegal param: bStillCrop(%d) err,should HI_TRUE or HI_FALSE!\n\0\0\0",
    /*a530*/ "[Func]:%s [Line]:%d [Info]:illegal param: bEnable(%d) err,should HI_TRUE or HI_FALSE!\n\0\0",
    /*a588*/ "[Func]:%s [Line]:%d [Info]:illegal param: bGdcBypass(%d) err,should HI_TRUE or HI_FALSE!\n\0\0\0",
    /*a5e4*/ "[Func]:%s [Line]:%d [Info]:DIS chn %d is not created !\n\0",
    /*a61c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d VI_DRV_DISPoolInit failed : 0x%x!\n\0\0\0\0",
    /*a66c*/ "[Func]:%s [Line]:%d [Info]:DIS donot support filp or mirror ViPipe %d ViChn %d!\n\0\0\0\0",
    /*a6c0*/ "[Func]:%s [Line]:%d [Info]:DIS only support COMPRESS_MODE_NONE,donot support %d enCompressMode !\n\0\0\0",
    /*a724*/ "[Func]:%s [Line]:%d [Info]:DIS only support VIDEO_FORMAT_LINEAR,donot support %d enVideoFormat !\n\0\0\0",
    /*a788*/ "[Func]:%s [Line]:%d [Info]:This enPixelFormat(%d) DIS is not support!\n\0\0",
    /*a7d0*/ "[Func]:%s [Line]:%d [Info]:The image size of ViChn %d should be the same as that of ViPipe %d!\n\0",
    /*a830*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d ViChn %d can not enable dis while chn crop is enabled !\n\0\0\0",
    /*a890*/ "[Func]:%s [Line]:%d [Info]:can't get dis export function, it may be dis module has not been inserted!\n\0\0",
    /*a8f8*/ "[Func]:%s [Line]:%d [Info]:DISAlgorithmDeInit fail ,0x%x!\n\0\0",
    /*a934*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Vi_InitDisAlgorithm error : 0x%x!\n\0\0\0\0",
    /*a984*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d GetDSFCfg error : 0x%x!\n\0\0",
    /*a9c8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d VI_DRV_SetDISDsfConfig failed : 0x%x!\n\0\0\0\0",
    /*aa1c*/ "[Func]:%s [Line]:%d [Info]:Vi Enable GlobalDIS Failed!!!\n\0\0\0",
    /*aa58*/ "HI_TRUE == stLDCV2Attr.bEnable\0\0",
    /*aa78*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*aab8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Vi_DeInitDisAlgorithm error : 0x%x!\n\0\0",
    /*ab08*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d donot set DIS config!\n\0\0\0\0",
    /*ab4c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d is not enabled!\n\0\0",
    /*ab88*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d is already enabled, only one chn canbe enabled DIS in one pipe !\n\0",
    /*abf4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d DIS attribute error!\n\0",
    /*ac34*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d DIS donot support such attributes!\n\0\0\0",
    /*ac84*/ "[Func]:%s [Line]:%d [Info]:LDC cannot use with GYRO at the same time.\n\0\0",
    /*accc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d must set LDCV2 config first!\n\0",
    /*ad14*/ "[Func]:%s [Line]:%d [Info]:LDCV2 cannot use with 4_DOF_GME or 6_DOF_GME at the same time.\n\0\0",
    /*ad70*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Vi_EnableDIS failed ,s32Ret :0x%x !\n\0\0",
    /*adc0*/ "[Func]:%s [Line]:%d [Info]:submit dis task failed ,maybe dis chn has been destoryed !!\n\0",
    /*ae18*/ "[Func]:%s [Line]:%d [Info]:submit dis task failed ,0x%x!\n\0\0\0",
    /*ae54*/ "[Func]:%s [Line]:%d [Info]:pipe id %d get DIS vb fail\n\0\0",
    /*ae8c*/ "[Func]:%s [Line]:%d [Info]:Destroy DIS chn %d fail ,0x%x!\n\0\0",
    /*aec8*/ "online\0\0",
    /*aed0*/ "parallel\0\0\0\0",
    /*aedc*/ "N/A\0",
    /*aee0*/ "[Func]:%s [Line]:%d [Info]:VI: g_u32DelayTime is %u\n\0\0\0\0",
    /*af18*/ "[Func]:%s [Line]:%d [Info]:NULL point \r\n\0\0\0\0",
    /*af44*/ "[Func]:%s [Line]:%d [Info]:User Sub Err! 0x%x \r\n\0\0\0\0",
    /*af78*/ "[Func]:%s [Line]:%d [Info]:VI:VB invalid \r\n\0",
    /*afa4*/ "[Func]:%s [Line]:%d [Info]:ChipId illegal.\n\0",
    /*afd0*/ "dev attr\0\0\0\0",
    /*afdc*/ "dev ext attr\0\0\0\0",
    /*afec*/ "flash  attr\0",
    /*aff8*/ "flash  trigger\0\0",
    /*b008*/ "dev enable/disable\0\0",
    /*b01c*/ "dev bind mipi\0\0\0",
    /*b02c*/ "dev bind pipe\0\0\0",
    /*b03c*/ "dev timing attr\0",
    /*b04c*/ "pipe raw cmp param\0\0",
    /*b060*/ "pipe userPic\0\0\0\0",
    /*b070*/ "pipe userPic enable/disable\0",
    /*b08c*/ "pipe creat/destroy\0\0",
    /*b0a0*/ "pipe attr\0\0\0",
    /*b0ac*/ "pipe start/stop\0",
    /*b0bc*/ "pipe crop\0\0\0",
    /*b0c8*/ "pipe fisheye cfg\0\0\0\0",
    /*b0dc*/ "pipe snap attr\0\0",
    /*b0ec*/ "pipe snap enable/disable\0\0\0\0",
    /*b108*/ "pipe snap trigger\0\0\0",
    /*b11c*/ "pipe snap multi trigger\0",
    /*b134*/ "pipe snap pro sharpen get/set\0\0\0",
    /*b154*/ "pipe snap pro BNR get/set\0\0\0",
    /*b170*/ "pipe BNR dump attr get/set\0\0",
    /*b18c*/ "pipe BNR raw get\0\0\0\0",
    /*b1a0*/ "pipe dump attr\0\0",
    /*b1b0*/ "pipe source\0",
    /*b1bc*/ "pipe repeat mode\0\0\0\0",
    /*b1d0*/ "pipe get raw\0\0\0\0",
    /*b1e0*/ "pipe send yuv\0\0\0",
    /*b1f0*/ "pipe send raw\0\0\0",
    /*b200*/ "pipe status\0",
    /*b20c*/ "pipe int\0\0\0\0",
    /*b218*/ "pipe VC num set/get\0",
    /*b22c*/ "pipe frame interrupt set/get\0\0\0\0",
    /*b24c*/ "pipe NRX param\0\0",
    /*b25c*/ "pipe fpn attr\0\0\0",
    /*b26c*/ "pipe ISP dis\0\0\0\0",
    /*b27c*/ "chn attr\0\0\0\0",
    /*b288*/ "chn enable/disable\0\0",
    /*b29c*/ "chn crop\0\0\0\0",
    /*b2a8*/ "chn rotation\0\0\0\0",
    /*b2b8*/ "chn rotationEx\0\0",
    /*b2c8*/ "chn LDC\0",
    /*b2d0*/ "chn LDCV2\0\0\0",
    /*b2dc*/ "chn spread\0\0",
    /*b2e8*/ "chn luma\0\0\0\0",
    /*b2f4*/ "chn dis config\0\0",
    /*b304*/ "chn dis attr\0\0\0\0",
    /*b314*/ "ext chn fisheye attr\0\0\0\0",
    /*b32c*/ "ext chn attr\0\0\0\0",
    /*b33c*/ "chn frame get\0\0\0",
    /*b34c*/ "chn early interrupt\0",
    /*b360*/ "chn status get\0\0",
    /*b370*/ "chn low delay\0\0\0",
    /*b380*/ "mod frame release\0\0\0",
    /*b394*/ "stitch grp\0\0",
    /*b3a0*/ "module param\0\0\0\0",
    /*b3b0*/ "chn align\0\0\0",
    /*b3bc*/ "chn output size\0",
    /*b3cc*/ "VI_BIND_FLAG2FD\0",
    /*b3dc*/ "\0\0\0\0",
    /*b3e0*/ "[Func]:%s [Line]:%d [Info]:Not support the operation [%s] in vi-vpss mode[%d].\n\0",
    /*b430*/ "[Func]:%s [Line]:%d [Info]:Unsupported pipe mode %d \n\0\0\0",
    /*b468*/ "[Func]:%s [Line]:%d [Info]:ViPipe :%d lost cfg irq u32ProcIntStatus: 0x%x\n\n\0",
    /*b4b4*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Apb bus error!\n\0\0",
    /*b4e8*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi CAS read bus error!\n\0",
    /*b524*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi CUR read bus error!\n\0",
    /*b560*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi WDR read bus error!\n\0",
    /*b59c*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi FPN read bus error!\n\0",
    /*b5d8*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi DRC_STT read bus error!\n\0",
    /*b618*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi DCI_STT read bus error!\n\0",
    /*b658*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi ISP_PARA read bus error!\n\0\0\0\0",
    /*b69c*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi lut alg read bus error!\n\0",
    /*b6dc*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi HDLK read bus error!\n\0\0\0\0",
    /*b71c*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi OUT0 write bus error!\n\0\0\0",
    /*b75c*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi OUT1 write bus error!\n\0\0\0",
    /*b79c*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi FPD write bus error!\n\0\0\0\0",
    /*b7dc*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi FPN_OUT write bus error!\n\0\0\0\0",
    /*b820*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi BNR write bus error!\n\0\0\0\0",
    /*b860*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi DRC_STT write bus error!\n\0\0\0\0",
    /*b8a4*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi DCI_STT write bus error!\n\0\0\0\0",
    /*b8e8*/ "[Func]:%s [Line]:%d [Info]:VIPROC: Axi ISP_STT write bus error!\n\0\0\0\0",
    /*b92c*/ "[Func]:%s [Line]:%d [Info]:The four points of the region ([%d, %d], [%d, %d], [%d, %d], [%d, %d]) is on vertical or horizental line\n\0\0\0\0",
    /*b9b4*/ "HI_NULL != pstCapacity\0\0",
    /*b9cc*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*ba0c*/ "[Func]:%s [Line]:%d [Info]:Vi register to region failed. \n\0\0",
    /*ba48*/ "[Func]:%s [Line]:%d [Info]:s32SrcFrameRate(%d) wrong,should be [1, %d]\n\0",
    /*ba90*/ "[Func]:%s [Line]:%d [Info]:s32DstFrameRate(%d) is wrong,should be [0, %d]\n\0\0",
    /*badc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d do not bind valid Dev %d!\n\0\0\0",
    /*bb1c*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) illegal, not support virtual pipe!\n\0\0\0",
    /*bb68*/ "[Func]:%s [Line]:%d [Info]:enPipeBypassMode(%d) should be VI_PIPE_BYPASS_NONE or VI_PIPE_BYPASS_BE!\n\0\0\0\0",
    /*bbd0*/ "[Func]:%s [Line]:%d [Info]:Vi PipeMode(%d) only support VI_PIPE_BYPASS_NONE!\n\0\0\0",
    /*bc20*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d don't support VI_PIPE_BYPASS_BE!\n\0\0",
    /*bc68*/ "[Func]:%s [Line]:%d [Info]:bYuvSkip should between [%d,%d] which is %d!\n\0\0\0\0",
    /*bcb4*/ "[Func]:%s [Line]:%d [Info]:bIspBypass should between [%d,%d] which is %d!\n\0\0",
    /*bd00*/ "[Func]:%s [Line]:%d [Info]:ViPipe:%d Picture width should between [%d,%d] which is %d!\n\0",
    /*bd58*/ "[Func]:%s [Line]:%d [Info]:ViPipe:%d Picture Height should between [%d,%d] which is %d!\n\0\0\0\0",
    /*bdb4*/ "[Func]:%s [Line]:%d [Info]:ViPipe id should between [0,2] which is %d!\n\0",
    /*bdfc*/ "[Func]:%s [Line]:%d [Info]:vi pipe(%d) size can't be bigger than (2304 * 1296).\n\0\0\0\0",
    /*be50*/ "[Func]:%s [Line]:%d [Info]:vi pipe(%d) size can't be bigger than (2048 * 1536).\n\0\0\0\0",
    /*bea4*/ "[Func]:%s [Line]:%d [Info]:vi pipe(%d) size can't be bigger than (2688 * 1944).\n\0\0\0\0",
    /*bef8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d u32MaxW should be %d align which is %d!\n\0",
    /*bf44*/ "[Func]:%s [Line]:%d [Info]:Pipe %d u32MaxH should be %d align which is %d!\n\0",
    /*bf90*/ "[Func]:%s [Line]:%d [Info]:picture pix format should be YUV or BAYER which is %d!\n\0\0",
    /*bfe4*/ "[Func]:%s [Line]:%d [Info]:bIspBypass should be HI_FALSE which is %d when picture pix format is BAYER!\n\0",
    /*c04c*/ "[Func]:%s [Line]:%d [Info]:enPipeBypassMode must not be VI_PIPE_BYPASS_BE when picture pix format is BAYER!\n\0\0\0\0",
    /*c0bc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d can not support compressed raw data when picture pix format is BAYER 8BPP 16BPP!\n\0\0\0\0",
    /*c134*/ "[Func]:%s [Line]:%d [Info]:CompressMode should be COMPRESS_MODE_NONE which is %d when picture pix format is YUV!\n\0\0\0",
    /*c1a8*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) do not support SP420/SP422/YUV400!\n\0\0\0",
    /*c1f4*/ "[Func]:%s [Line]:%d [Info]:Vi Online PipeMode do not support SP420/SP422/YUV400!\n\0\0\0",
    /*c248*/ "[Func]:%s [Line]:%d [Info]:picture Compress Mode should be COMPRESS_MODE_NONE COMPRESS_MODE_LINE When OnlineWDR mode!\n\0\0",
    /*c2c0*/ "[Func]:%s [Line]:%d [Info]:Bit Width should between [%d,%d] which is %d!\n\0\0\0",
    /*c30c*/ "[Func]:%s [Line]:%d [Info]:enBitWidth Width: %d illegal, should be %d when YUV!\n\0\0\0\0",
    /*c360*/ "[Func]:%s [Line]:%d [Info]:bNrEn should be 0 or 1 which is %d!\n\0",
    /*c3a0*/ "[Func]:%s [Line]:%d [Info]:picture Compress Mode should be COMPRESS_MODE_NONE COMPRESS_MODE_LINE COMPRESS_MODE_FRAME which is %d!\n\0\0",
    /*c424*/ "[Func]:%s [Line]:%d [Info]:ViPipe(%d) only support COMPRESS_MODE_NONE!\n\0",
    /*c46c*/ "[Func]:%s [Line]:%d [Info]:bDiscardProPic should be 0 or 1 which is %d!\n\0\0\0\0",
    /*c4b8*/ "[Func]:%s [Line]:%d [Info]:enPipeBypassMode of pipe %d attribute can't be changed!\n \0\0\0\0",
    /*c510*/ "[Func]:%s [Line]:%d [Info]:bYuvSkip of pipe %d attribute can't be changed!\n \0\0\0\0",
    /*c560*/ "[Func]:%s [Line]:%d [Info]:bIspBypass of pipe %d attribute can't be changed!\n \0\0",
    /*c5b0*/ "[Func]:%s [Line]:%d [Info]:u32MaxW of pipe %d attribute can't be changed!\n \0",
    /*c5fc*/ "[Func]:%s [Line]:%d [Info]:u32MaxH of pipe %d attribute can't be changed!\n \0",
    /*c648*/ "[Func]:%s [Line]:%d [Info]:enBitWidth of pipe %d attribute can't be changed!\n \0\0",
    /*c698*/ "[Func]:%s [Line]:%d [Info]:Sys is not ready!\n\0\0\0",
    /*c6c8*/ "[Func]:%s [Line]:%d [Info]:Get mmz name fail!\n\0\0",
    /*c6f8*/ "VI\0\0",
    /*c6fc*/ "%s(%d) DRC COEF\0",
    /*c70c*/ "[Func]:%s [Line]:%d [Info]:malloc DRC COEF buf fail!\n\0\0\0",
    /*c744*/ "[Func]:%s [Line]:%d [Info]:Pipe %d malloc DRV context fail!\n\0\0\0\0",
    /*c784*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d ViChn %d will call GDC!!! bLDC %d bRotation %d bRotationEx %d bSpread %d bDISenable %d!\n\0\0\0",
    /*c804*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d, width should between [%d,%d] which is %d!\n\0\0\0",
    /*c85c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d size can't be bigger than (2304 * 1296).\n\0",
    /*c8b0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d size can't be bigger than (2688 * 1944).\n\0",
    /*c904*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Width should be %d align which is %d!\n\0\0\0\0",
    /*c958*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Height should be %d align which is %d!\n\0\0\0",
    /*c9ac*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d picture pix format should be SP420/SP422/YUV400 which is %d!\n\0",
    /*ca14*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Dynamic range should be SDR8 which is %d!\n\0\0\0\0",
    /*ca6c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Video format should be LINEAR which is %d!\n\0\0\0",
    /*cac4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d bMirror should be HI_FALSE or HI_TRUE which is %d!\n\0\0\0",
    /*cb24*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d bFlip should be HI_FALSE or HI_TRUE which is %d!\n\0",
    /*cb80*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d compressMode should be COMPRESS_MODE_NONE or  COMPRESS_MODE_SEG, which is %d!\n\0\0\0\0",
    /*cbfc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Depth should be 0 to %d which is %d\n\0\0",
    /*cc4c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d bMirror should be HI_FALSE which is %d while enPixelFormat is %d!\n\0\0\0\0",
    /*ccbc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d bFlip should be HI_FALSE which is %d while enPixelFormat is %d!\n\0\0",
    /*cd28*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d compressMode should be COMPRESS_MODE_NONE which is %d while enPixelFormat is %d!\n\0",
    /*cda4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Dynamic range can not change, old is %d,new is %d!\n\0\0\0",
    /*ce04*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Pixel format can not change, old is %d,new is %d!\n\0\0\0\0",
    /*ce64*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Size can not change, old is [%d,%d],new is [%d,%d]!\n\0\0",
    /*cec4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d VideoFormat is %d illegal!\n\0\0\0",
    /*cf0c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Size can not change, old  size is [%d,%d],new size is [%d,%d]!\n\0\0\0",
    /*cf78*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Dynamic range can not change, old  dynamic is %d,new dynamic is %d!\n\0\0",
    /*cfe8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Compress mode should be NONE!\n\0\0\0\0",
    /*d034*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d VideoFormat is %d, not support!\n\0\0",
    /*d080*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Video format can not change, old is %d,new is %d!\n\0\0\0\0",
    /*d0e0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Mirror can not change, old is %d,new is %d!\n\0\0",
    /*d138*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Flip can not change, old is %d,new is %d!\n\0\0\0\0",
    /*d190*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d Frame rate can not change, old is [%d,%d],new is [%d,%d]!\n\0\0\0\0",
    /*d1f8*/ "[Func]:%s [Line]:%d [Info]:enSource only support VI_EXT_CHN_SOURCE_TAIL.\n\0\0\0",
    /*d244*/ "[Func]:%s [Line]:%d [Info]:src chn%d is not Phy chn\n\0\0\0\0",
    /*d27c*/ "[Func]:%s [Line]:%d [Info]:Width should between %d and %d!\n\0",
    /*d2b8*/ "[Func]:%s [Line]:%d [Info]:Height should between %d and %d!\n\0\0\0\0",
    /*d2f8*/ "[Func]:%s [Line]:%d [Info]:Width should be %d align which is %d!\n\0\0\0",
    /*d33c*/ "[Func]:%s [Line]:%d [Info]:Height should be %d align which is %d!\n\0\0",
    /*d380*/ "[Func]:%s [Line]:%d [Info]:picture pix format should be SP420/SP422/YUV400 which is %d!\n\0\0\0\0",
    /*d3dc*/ "[Func]:%s [Line]:%d [Info]:Dynamic range should be SDR8  which is %d!\n\0\0",
    /*d424*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d compressMode should be COMPRESS_MODE_NONE or COMPRESS_MODE_SEG, which is %d!\n\0",
    /*d49c*/ "[Func]:%s [Line]:%d [Info]:Depth should be 0 to %d which is %d\n\0",
    /*d4dc*/ "[Func]:%s [Line]:%d [Info]:pstLdcAttr->bEnable should be 0/1 !\n\0",
    /*d51c*/ "[Func]:%s [Line]:%d [Info]:The LDC module may be not existed\n\0\0\0",
    /*d55c*/ "[Func]:%s [Line]:%d [Info]:check Gdc corrention attr failed\n\0\0\0\0",
    /*d59c*/ "[Func]:%s [Line]:%d [Info]:pstLDCV2Attr->bEnable should be 0/1 !\n\0\0\0",
    /*d5e0*/ "[Func]:%s [Line]:%d [Info]:The LDCV2 module may be not existed\n\0",
    /*d620*/ "[Func]:%s [Line]:%d [Info]:check LDCV2 attr failed\n\0",
    /*d654*/ "[Func]:%s [Line]:%d [Info]:pstViRotationAttr->bEnable should be 0/1 !\n\0\0",
    /*d69c*/ "[Func]:%s [Line]:%d [Info]:The GDC module may be not existed\n\0\0\0",
    /*d6dc*/ "[Func]:%s [Line]:%d [Info]:The spread module may be not existed\n\0\0\0\0",
    /*d720*/ "[Func]:%s [Line]:%d [Info]:check SpreadInfo attr failed\n\0\0\0\0",
    /*d75c*/ "[Func]:%s [Line]:%d [Info]:pstLowDelayAttr->bEnable(%d) should be 0/1 !\n\0\0\0\0",
    /*d7a8*/ "[Func]:%s [Line]:%d [Info]:pstLowDelayAttr->u32LineCnt(%d) should be [32,16384] !\n\0\0",
    /*d7fc*/ "[Func]:%s [Line]:%d [Info]: Pipe %d chn %d :the attribute of Fisheye is not allowed to get when it is not set!\n\0",
    /*d86c*/ "[Func]:%s [Line]:%d [Info]:Unsupported Pipe mode %d !\n\0\0",
    /*d8a4*/ "[Func]:%s [Line]:%d [Info]:Crop coordinate (%d, %d) is overranging of pic size(%d, %d),disable crop! \n\0\0",
    /*d90c*/ "[Func]:%s [Line]:%d [Info]:Crop size (%d, %d) is smaller than pic minimum  size(%d, %d),disable crop! \n\0",
    /*d974*/ "[Func]:%s [Line]:%d [Info]:Please first set pipe %d  chn %d  attr\0\0\0",
    /*d9b8*/ "[Func]:%s [Line]:%d [Info]:The fisheye module may be not existed\n\0\0\0",
    /*d9fc*/ "[Func]:%s [Line]:%d [Info]:check fisheye corrention attr failed\n\0\0\0\0",
    /*da40*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn%d dest width(%d) beyond max width!\n\0\0",
    /*da8c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn%d dest height(%d) beyond max height!\n\0\0\0\0",
    /*dadc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn%d do not support scale!!\n\0\0\0\0",
    /*db20*/ "[Func]:%s [Line]:%d [Info]:pipe %d :pixel format of all phy chn should be same,while chn %d's is %d but chn %d's is %d !!\n\0\0",
    /*db9c*/ "[Func]:%s [Line]:%d [Info]:pipe %d : invalid pixel format %d of phy chn %d should be SP422/SP420/YUV400,while frame pixel format is %d !!\n\0\0",
    /*dc28*/ "[Func]:%s [Line]:%d [Info]:pipe %d : invalid pixel format %d of phy chn %d should be SP420/YUV400,while frame pixel format is %d !!\n\0\0\0\0",
    /*dcb0*/ "[Func]:%s [Line]:%d [Info]:pipe %d : invalid pixel format %d of phy chn %d should be YUV400,while frame pixel format is %d !!\n\0\0",
    /*dd30*/ "[Func]:%s [Line]:%d [Info]:pipe %d :bMirror should be HI_FALSE, while chn %d's is %d !!\n\0\0\0\0",
    /*dd8c*/ "[Func]:%s [Line]:%d [Info]:pipe %d :invalid Video Format %d of frame ,should be VIDEO_FORMAT_LINEAR !!\n\0",
    /*ddf4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn%d src width(%d) beyond [%d, %d]!\n\0\0\0\0",
    /*de40*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn%d src height(%d) beyond [%d, %d]!\n\0\0\0",
    /*de8c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn%d dest width(%d) beyond [%d, %d]!\n\0\0\0",
    /*ded8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn%d dest height(%d) beyond [%d, %d]!\n\0\0",
    /*df24*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn%d scale beyond VGS scale cap (%d, %d)->(%d, %d)!\n\0\0\0\0",
    /*df80*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d chn%d only support SDR8.\n\0\0",
    /*dfc0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d ExtChn %d Video format should be LINEAR which is %d!\n\0\0\0\0",
    /*e01c*/ "[Func]:%s [Line]:%d [Info]:pipe %d is WDR mode can not send yuv.\n\0\0\0",
    /*e060*/ "[Func]:%s [Line]:%d [Info]:Pipe %d Invalid VB\n\0\0",
    /*e090*/ "[Func]:%s [Line]:%d [Info]:pipe %d send yuv u32Width %d is not same as u32MaxW %d!\n \0\0\0\0",
    /*e0e8*/ "[Func]:%s [Line]:%d [Info]:pipe %d send yuv u32Height %d is not same as u32MaxH %d!\n \0\0\0",
    /*e140*/ "[Func]:%s [Line]:%d [Info]:pipe %d send yuv enPixelFormat %d is not same as enPixFmt %d!\n \0\0",
    /*e19c*/ "[Func]:%s [Line]:%d [Info]:pipe %d illegal param: enField:%d,should be VIDEO_FIELD_FRAME !\n\0",
    /*e1f8*/ "[Func]:%s [Line]:%d [Info]:pipe %d illegal param: enVideoFormat:%d,should be VIDEO_FORMAT_LINEAR !\n\0",
    /*e25c*/ "[Func]:%s [Line]:%d [Info]:pipe %d illegal param: enCompressMode:%d,should be COMPRESS_MODE_NONE !\n\0",
    /*e2c0*/ "[Func]:%s [Line]:%d [Info]:pipe %d illegal param: enDynamicRange:%d,should be DYNAMIC_RANGE_SDR8!\n\0\0",
    /*e324*/ "[Func]:%s [Line]:%d [Info]:pipe %d illegal param: enColorGamut:%d should between [%d,%d]\n\0\0\0",
    /*e380*/ "[Func]:%s [Line]:%d [Info]:only supported raw source from BE.\n\0\0",
    /*e3c0*/ "[Func]:%s [Line]:%d [Info]:pipe %d can not send raw from BE when pipe pixel format is %d !\n \0\0\0\0",
    /*e420*/ "[Func]:%s [Line]:%d [Info]:pipe %d can not send raw from BE when pipe bIspBypass is %d !\n \0\0",
    /*e47c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d send LINE raw width %d is not same as pipe's u32MaxW %d!\n \0\0\0",
    /*e4dc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d send LINE raw height %d is not same as pipe's u32MaxH %d!\n \0\0",
    /*e53c*/ "[Func]:%s [Line]:%d [Info]:pipe %d wrong LINE raw pixel format %d !\n \0\0\0",
    /*e584*/ "[Func]:%s [Line]:%d [Info]:pipe %d illegal param: enCompressMode:%d,should be COMPRESS_MODE_NONE COMPRESS_MODE_LINE COMPRESS_MODE_FRAME!\n\0\0\0",
    /*e610*/ "[Func]:%s [Line]:%d [Info]:pipe %d illegal param: enCompressMode:%d,should be COMPRESS_MODE_NONE when pixel is BAYER 8BPP 16BPP!\n\0\0\0",
    /*e694*/ "[Func]:%s [Line]:%d [Info]:pipe %d send WDR raw (VcNum:0) u32Width %d is not same as u32MaxW %d!\n \0\0",
    /*e6f8*/ "[Func]:%s [Line]:%d [Info]:pipe %d send WDR raw (VcNum:0) u32Width %d is not same as u32MaxH %d!\n \0\0",
    /*e75c*/ "[Func]:%s [Line]:%d [Info]:pipe %d illegal param: enCompressMode:%d,should be COMPRESS_MODE_NONE COMPRESS_MODE_FRAME COMPRESS_MODE_LINE!\n\0\0\0",
    /*e7e8*/ "[Func]:%s [Line]:%d [Info]:pipe %d illegal param: enCompressMode:%d,should be COMPRESS_MODE_NONE when pixel is PIXEL_FORMAT_RGB_BAYER_16BPP!\n\0\0\0",
    /*e878*/ "[Func]:%s [Line]:%d [Info]:Invalid VB\n\0\0",
    /*e8a0*/ "[Func]:%s [Line]:%d [Info]:pipe %d send WDR raw (VcNum:%d) u32Width %d is not same as (VcNum:0) u32Width %d!\n \0\0",
    /*e910*/ "[Func]:%s [Line]:%d [Info]:pipe %d send WDR raw (VcNum:%d) u32Height %d is not same as (VcNum:0) u32Height %d!\n \0\0\0\0",
    /*e984*/ "[Func]:%s [Line]:%d [Info]:pipe %d send WDR raw (VcNum:%d) enPixelFormat %d is not same as (VcNum:0) enPixelFormat %d!\n \0\0\0\0",
    /*ea00*/ "[Func]:%s [Line]:%d [Info]:pipe %d send WDR raw (VcNum:%d) enVideoFormat %d is not same as (VcNum:0) enVideoFormat %d!\n \0\0\0\0",
    /*ea7c*/ "[Func]:%s [Line]:%d [Info]:pipe %d send WDR raw (VcNum:%d) enCompressMode %d is not same as (VcNum:0) enCompressMode %d!\n \0\0",
    /*eaf8*/ "[Func]:%s [Line]:%d [Info]:pipe %d send WDR raw (VcNum:%d) illegal param: enField:%d\n\0\0\0",
    /*eb50*/ "[Func]:%s [Line]:%d [Info]:SYS_GetVBCfg is NULL!\n\0\0\0",
    /*eb84*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d get mmz name fail!\n\0\0\0",
    /*ebc4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d get buffer fail,size %d !\n\0\0\0\0",
    /*ec0c*/ "[Func]:%s [Line]:%d [Info]:Get region (type :%d) fail.\n\0",
    /*ec44*/ "[Func]:%s [Line]:%d [Info]:Put ViChn:%d region (type :%d) fail.\n\0\0\0\0",
    /*ec88*/ "[Func]:%s [Line]:%d [Info]:illegal param: cover color (0x%x) err, should be [0x0,0xffffff].\n\0\0\0\0",
    /*ece8*/ "[Func]:%s [Line]:%d [Info]:Iso reach out of range!\n\0",
    /*ed1c*/ "[Func]:%s [Line]:%d [Info]:enNRVersion is not VI_NR_V2.\n\0\0\0\0",
    /*ed58*/ "[Func]:%s [Line]:%d [Info]:Not support this pixel format :%d!\n\0\0",
    /*ed98*/ "[Func]:%s [Line]:%d [Info]:Not support this pixel format !\n\0",
    /*edd4*/ "[Func]:%s [Line]:%d [Info]:Not support this pixel format :%d !\n\0",
    /*ee14*/ "[Func]:%s [Line]:%d [Info]:Not support this pixel format %d!\n\0\0\0",
    /*ee54*/ "[Func]:%s [Line]:%d [Info]:Crop X should be 2 bytes align which is %d!\n\0",
    /*ee9c*/ "[Func]:%s [Line]:%d [Info]:Crop Y should be 2 bytes align which is %d!\n\0",
    /*eee4*/ "[Func]:%s [Line]:%d [Info]:Crop Width should be %d bytes align which is %d!\n\0\0\0\0",
    /*ef34*/ "[Func]:%s [Line]:%d [Info]:Crop Height should be %d bytes align which is %d!\n\0\0\0",
    /*ef84*/ "[Func]:%s [Line]:%d [Info]:Crop width should between %d and %d which is %d!\n\0\0\0\0",
    /*efd4*/ "[Func]:%s [Line]:%d [Info]:Crop height should between %d and %d which is %d!\n\0\0\0",
    /*f024*/ "[Func]:%s [Line]:%d [Info]:Crop start absX should be 0 to %d which is %d!\n\0\0",
    /*f070*/ "[Func]:%s [Line]:%d [Info]:Crop start absY should be 0 to %d which is %d!\n\0\0",
    /*f0bc*/ "[Func]:%s [Line]:%d [Info]:Only support ChnCrop at COMPRESS_MODE_NONE when width is bigger than %d!\n\0\0\0\0",
    /*f124*/ "%s(%d) LDCI COEF\0\0\0\0",
    /*f138*/ "[Func]:%s [Line]:%d [Info]:malloc LDCI COEF buf fail!\n\0\0",
    /*f170*/ "[Func]:%s [Line]:%d [Info]:Get MMZ name fail!\n\0\0",
    /*f1a0*/ "%s(%d) MODEL\0\0\0\0",
    /*f1b0*/ "[Func]:%s [Line]:%d [Info]:malloc VI MODEL buffer fail!\n\0\0\0\0",
    /*f1ec*/ "%s(%d) STT\0\0",
    /*f1f8*/ "[Func]:%s [Line]:%d [Info]:malloc VI BE STT buf fail!\n\0\0",
    /*f230*/ "[Func]:%s [Line]:%d [Info]:Your enSource is %d, only supported raw source from BE.\n\0",
    /*f284*/ "[Func]:%s [Line]:%d [Info]:Pipe %d VI_ONLINE mode don't support send raw.\n\0\0",
    /*f2d0*/ "[Func]:%s [Line]:%d [Info]:Only supported raw source from BE.\n\0\0",
    /*f310*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d fisheye input image pixel format is not SEMIPLANAR_420 or PIXEL_FORMAT_YUV_400.\n\0\0",
    /*f38c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d fisheye input image pixel format is SEMIPLANAR_420,output image pixel format is SEMIPLANAR_422.\n\0\0",
    /*f418*/ "[Func]:%s [Line]:%d [Info]:Grp%d chn%d fisheye input image pixel format is PIXEL_FORMAT_YUV_400,output image pixel format is not PIXEL_FORMAT_YUV_400.\n\0",
    /*f4b0*/ "[Func]:%s [Line]:%d [Info]:Grp%d chn%d  fisheye input image Compress is not COMPRESS_MODE_NONE .\n\0\0\0",
    /*f514*/ "[Func]:%s [Line]:%d [Info]:Grp%d chn%d  fisheye input image size width: %d, height: %d is small than %dX%d.\n\0\0\0\0",
    /*f584*/ "[Func]:%s [Line]:%d [Info]:Grp%d chn%d  fisheye input image size width: %d, height: %d is big than %dX%d.\n\0\0",
    /*f5f0*/ "[Func]:%s [Line]:%d [Info]:Grp%d chn%d  fisheye output image size width: %d, height: %d is big than %dX%d.\n\0",
    /*f65c*/ "[Func]:%s [Line]:%d [Info]:Grp%d chn%d  fisheye output image size width: %d, height: %d is small than %dX%d.\n\0\0\0",
    /*f6cc*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d:pstNRXParamV2 is NULL !\n\0\0\0",
    /*f70c*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d 3DNR X IEy.IEDZ: %d, should between [%d,%d]!\n\0\0",
    /*f760*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d 3DNR X SFy.SPN6: %d, should between [%d,%d]!\n\0\0",
    /*f7b4*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d 3DNR X SFy.SBN6: %d, should between [%d,%d]!\n\0\0",
    /*f808*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d 3DNR X SFy.PBR6: %d, should between [%d,%d]!\n\0\0",
    /*f85c*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d 3DNR X SFy.SRT0: %d, should between [%d,%d]!\n\0\0",
    /*f8b0*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d 3DNR X SFy.SRT1: %d, should between [%d,%d]!\n\0\0",
    /*f904*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d 3DNR X SFy.JMODE: %d, should between [%d,%d]!\n\0",
    /*f958*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d 3DNR X SFy.DeIdx: %d, should between [%d,%d]!\n\0",
    /*f9ac*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d 3DNR X interface param SFR6[%d]: %d, should between [%d,%d]!\n\0\0",
    /*fa10*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d 3DNR X SFy.SFN1: %d, should between [%d,%d]!\n\0\0",
    /*fa64*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d 3DNR X SFy.SFN0: %d, should between [%d,%d]!\n\0\0",
    /*fab8*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d 3DNR X SFy.SFN2: %d, should between [%d,%d]!\n\0\0",
    /*fb0c*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d 3DNR X SFy.SFN3: %d, should between [%d,%d]!\n\0\0",
    /*fb60*/ "[Func]:%s [Line]:%d [Info]:ISO should between [100, 3276800],but it is %u !\n\0\0\0\0",
    /*fbb0*/ "[Func]:%s [Line]:%d [Info]:value of ISO  should be arranged  from small to large !\n\0",
    /*fc04*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d:pstNrAutoV2->pastNRXParamV2 is NULL !\n\0",
    /*fc50*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d:pstNrAutoV2->pau32ISO is NULL !\n\0\0\0",
    /*fc98*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d:pstNrAutoV2->u32ParamNum should between [1, %d],but it is %u !\n\0\0\0\0",
    /*fd00*/ "[Func]:%s [Line]:%d [Info]:Pipe %d pau32ISO address is invalid!\n\0\0\0\0",
    /*fd44*/ "[Func]:%s [Line]:%d [Info]:Pipe %d pastNRXParamV2 address is invalid, maybe the space of pastNRXParamV2 is not big enough!\n\0",
    /*fdc0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d vmalloc for pau32ISO failed!\n\0\0\0\0",
    /*fe04*/ "[Func]:%s [Line]:%d [Info]:Pipe %d vmalloc for pastNRXParamV2 failed!\n\0\0",
    /*fe4c*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d:NRX ISO param copy from user failed, maybe the space of pastNRXParamV2 is not big enough!\n\0",
    /*fecc*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d:NRX param copy from user failed, maybe the space of pastNRXParamV2 is not big enough!\n\0",
    /*ff48*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d: enOptMode should be OPERATION_MODE_AUTO or OPERATION_MODE_MANUAL which is %d!\n\0\0\0\0",
    /*ffc0*/ "[Func]:%s [Line]:%d [Info]:enNRVersion should be VI_NR_V2 which is %d!\n\0",
    /*10008*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d:pastNRXParamV2 is NULL !\n\0\0",
    /*10048*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d:pau32ISO is NULL !\n\0\0\0\0",
    /*10084*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d:NRX ISO param copy to user failed, maybe the space of pau32ISO is not big enough!\n\0",
    /*100fc*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d:NRX param copy to user failed, maybe the space of pastNRXParamV2 is not big enough!\n\0\0\0",
    /*10178*/ "[Func]:%s [Line]:%d [Info]:Pipe %d pau32ISO address is invalid, maybe the space of pau32ISO is not big enough!\n\0",
    /*101e8*/ "%8d%12u%10u%10u%10u%10u%10u%10u%10u%10u\0",
    /*10210*/ "\n\0\0\0",
    /*10214*/ "[Func]:%s [Line]:%d [Info]:VICAP: Axi CH0 write bus error!\n\0",
    /*10250*/ "[Func]:%s [Line]:%d [Info]:VICAP: Axi CH1 write bus error!\n\0",
    /*1028c*/ "[Func]:%s [Line]:%d [Info]:VICAP: Axi CH2 write bus error!\n\0",
    /*102c8*/ "[Func]:%s [Line]:%d [Info]:VICAP: Axi CH3 write bus error!\n\0",
    /*10304*/ "[Func]:%s [Line]:%d [Info]:VICAP: Axi CH2_EM write bus error!\n\0\0",
    /*10344*/ "[Func]:%s [Line]:%d [Info]:VICAP: Axi ISP0_STT write bus error!\n\0\0\0\0",
    /*10388*/ "[Func]:%s [Line]:%d [Info]:VICAP: Axi ISP1_STT write bus error!\n\0\0\0\0",
    /*103cc*/ "[Func]:%s [Line]:%d [Info]:VICAP: Axi ISP2_STT write bus error!\n\0\0\0\0",
    /*10410*/ "[Func]:%s [Line]:%d [Info]:VICAP: Axi ISP3_STT write bus error!\n\0\0\0\0",
    /*10454*/ "[Func]:%s [Line]:%d [Info]:VICAP: Apb bus error!\n\0\0\0",
    /*10488*/ "[Func]:%s [Line]:%d [Info]:Dev %d generate timing max frame rate: %d,but set frame rate is %d when clock is %d MHZ.\n\0\0\0\0",
    /*10500*/ "[Func]:%s [Line]:%d [Info]:Only support enable one ViDev.\n\0\0",
    /*1053c*/ "[Func]:%s [Line]:%d [Info]:vi dev(%d) bind pipe Num %d invalid, need [1,%d].\n\0\0\0",
    /*1058c*/ "[Func]:%s [Line]:%d [Info]:Vi bind pipe ID(%d) is not phy pipe, need [0,%d).\n\0\0\0",
    /*105dc*/ "[Func]:%s [Line]:%d [Info]:not allowed bind because pipe ID (%d) has been binded\n\0\0\0",
    /*10630*/ "[Func]:%s [Line]:%d [Info]:illegal bind because 2T1WDR need pipe0&pipe1 or pipe2&pipe3, and PipiId[0] need be pipe0 or pipe2.\n\0\0",
    /*106b0*/ "[Func]:%s [Line]:%d [Info]:Invalid input data type %d of vi dev %d, must be in [VI_DATA_TYPE_YUV, VI_DATA_TYPE_BUTT)\r\n\0\0",
    /*10728*/ "[Func]:%s [Line]:%d [Info]:ViDev %d DataRev(%d) err, shoule be HI_TRUE or HI_FALSE\r\n\0\0\0\0",
    /*10780*/ "[Func]:%s [Line]:%d [Info]:ViDev %d DataRev(%d) err, shoule be HI_FALSE when enIntfMode is %d\r\n\0",
    /*107e0*/ "[Func]:%s [Line]:%d [Info]:invalid Dev Size size(%d, %d) must be 2 align.\n\0\0",
    /*1082c*/ "[Func]:%s [Line]:%d [Info]:Dev%d width/height (%d, %d) illegal, can't be smaller than (%d, %d).\n\0\0\0\0",
    /*10890*/ "[Func]:%s [Line]:%d [Info]:Dev%d width/height (%d, %d) illegal, can't be bigger than (%d, %d).\n\0",
    /*108f0*/ "[Func]:%s [Line]:%d [Info]:vi dev(%d) Dev size can't be bigger than (2304 * 1296).\n\0",
    /*10944*/ "[Func]:%s [Line]:%d [Info]:vi dev(%d) Dev size can't be bigger than (2688 * 1944).\n\0",
    /*10998*/ "[Func]:%s [Line]:%d [Info]:ViDev %d Data Rate(%d) err, shoule be DATA_RATE_X1.\r\n\0\0\0\0",
    /*109ec*/ "[Func]:%s [Line]:%d [Info]:Invalid work mode %d of vi dev %d, must be VI_WORK_MODE_1Multiplex\r\n\0",
    /*10a4c*/ "[Func]:%s [Line]:%d [Info]:Invalid input vi scan mode %d of dev %d\r\n\0\0\0\0",
    /*10a94*/ "[Func]:%s [Line]:%d [Info]:Invalid input yuv seq %d of vi dev %d\r\n\0\0",
    /*10ad8*/ "[Func]:%s [Line]:%d [Info]:Invalid input vi enVsync %d of dev %d\r\n\0\0",
    /*10b1c*/ "[Func]:%s [Line]:%d [Info]:Invalid input vi enVsyncNeg %d of dev %d\r\n\0\0\0",
    /*10b64*/ "[Func]:%s [Line]:%d [Info]:Invalid input vi enHsync %d of dev %d\r\n\0\0",
    /*10ba8*/ "[Func]:%s [Line]:%d [Info]:Invalid input vi enHsyncNeg %d of dev %d\r\n\0\0\0",
    /*10bf0*/ "[Func]:%s [Line]:%d [Info]:Invalid input vi enVsyncValid %d of dev %d\r\n\0",
    /*10c38*/ "[Func]:%s [Line]:%d [Info]:Invalid input vi enVsyncValidNeg %d of dev %d\r\n\0\0",
    /*10c84*/ "[Func]:%s [Line]:%d [Info]:Invalid Intf Mode %d of vi dev %d\r\n\0\0",
    /*10cc4*/ "[Func]:%s [Line]:%d [Info]:Dev %d not support Intf Mode %d.\n\0\0\0\0",
    /*10d04*/ "[Func]:%s [Line]:%d [Info]:Invalid VI-VPSS mode aenMode[0] %d, shoule be [%d, %d]\r\n\0",
    /*10d58*/ "[Func]:%s [Line]:%d [Info]:Invalid VI-VPSS mode aenMode[%d] %d, shoule be [%d, %d]\r\n\0\0\0\0",
    /*10db0*/ "[Func]:%s [Line]:%d [Info]:bEnable should be HI_TRUE or HI_FALSE which is %d\n\0\0\0",
    /*10e00*/ "[Func]:%s [Line]:%d [Info]:Pipe %d is uncompressed ! \n\0\0",
    /*10e38*/ "[Func]:%s [Line]:%d [Info]:Pipe %d ViDev %d:Only dev 0 support read raw from src!\n\0\0",
    /*10e8c*/ "DIS\0",
    /*10e90*/ "[Func]:%s [Line]:%d [Info]:VI DIS CreatePool failed.\n\0\0\0",
    /*10ec8*/ "[Func]:%s [Line]:%d [Info]:VI DIS GetVb failed.w:%d ,h:%d \n\0",
    /*10f04*/ "[Func]:%s [Line]:%d [Info]:Pipe %d send raw should be from BE or FE!\n\0\0\0",
    /*10f4c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d u32PipeNum should be 1 which is %d in line mode!\n\0\0\0\0",
    /*10fa4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d send raw from BE must be in offline mode!\n\0\0\0",
    /*10ff4*/ "[Func]:%s [Line]:%d [Info]:Pipe %d u32PipeNum should be %d which is %d in wdr mode!\n\0\0\0\0",
    /*1104c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d as32PipeId[%d] should be %d which is %d in wdr mode!\n\0\0\0\0",
    /*110a8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d send raw should from BE which is %d in wdr mode!\n\0\0\0\0",
    /*11100*/ "[Func]:%s [Line]:%d [Info]:Do not support StitchGrp!\n\0\0\0",
    /*11138*/ "[Func]:%s [Line]:%d [Info]:Do not support Chn Early Interrupt!\n\0",
    /*11178*/ "[Func]:%s [Line]:%d [Info]:enMotionLevel:%d err !\n\0\0",
    /*111ac*/ "[Func]:%s [Line]:%d [Info]:Pipe %d  InterruptAttr is invalid!\n\0\0",
    /*111ec*/ "[Func]:%s [Line]:%d [Info]:Pipe %d u32LineCnt should be [0, %d).\n\0\0\0",
    /*11230*/ "[Func]:%s [Line]:%d [Info]:Pipe %d u32LineCnt must be not less than %d.\n\0\0\0\0",
    /*1127c*/ "[Func]:%s [Line]:%d [Info]:Not Support INTERRUPT %d,when pipe is Online-WDRMode\n\0\0\0\0",
    /*112d0*/ "offline\0",
    /*112d8*/ "%11s%12s%12s\0\0\0\0",
    /*112e8*/ "\n-------------------------------VPSS MODE -----------------------------------------------------------\n\0\0",
    /*11350*/ "Pipe1Mode\0\0\0",
    /*1135c*/ "Pipe0Mode\0\0\0",
    /*11368*/ "Pipe2Mode\0\0\0",
    /*11374*/ "%11s%12s%12s%12s\0\0\0\0",
    /*11388*/ "Pipe3Mode\0\0\0",
    /*11394*/ "\n-------------------------------VI MODE -------------------------------------------------------------\n\0\0",
    /*113fc*/ "DstJun[0]\0\0\0",
    /*11408*/ "SrcJun\0\0",
    /*11410*/ "%8s%12s%12s\0",
    /*1141c*/ "DstJun[1]\0\0\0",
    /*11428*/ "%8d%12d%12d\0",
    /*11434*/ "\n\n\0\0",
    /*11438*/ "SrcCaliRatio\0\0\0\0",
    /*11448*/ "%14s\0\0\0\0",
    /*11450*/ "[0][1]\0\0",
    /*11458*/ "[0][0]\0\0",
    /*11460*/ "%10s%10s%10s%10s%10s%10s%10s%10s\0\0\0\0",
    /*11484*/ "[1][3]\0\0",
    /*1148c*/ "[1][2]\0\0",
    /*11494*/ "[1][1]\0\0",
    /*1149c*/ "[1][0]\0\0",
    /*114a4*/ "[0][3]\0\0",
    /*114ac*/ "[0][2]\0\0",
    /*114b4*/ "%10d%10d%10d%10d%10d%10d%10d%10d\0\0\0\0",
    /*114d8*/ "DstCaliRatio\0\0\0\0",
    /*114e8*/ "%10s%10s%10s%10s%10s%10s%10s%10s%10s%10s%10s%10s\0\0\0\0",
    /*1151c*/ "[2][3]\0\0",
    /*11524*/ "[2][2]\0\0",
    /*1152c*/ "[2][1]\0\0",
    /*11534*/ "[2][0]\0\0",
    /*1153c*/ "%10d%10d%10d%10d%10d%10d%10d%10d%10d%10d%10d%10d\0\0\0\0",
    /*11570*/ "[Func]:%s [Line]:%d [Info]:==> s32ViprocDebug12=0x%x, s32ViprocDebug13=0x%x.\n\0\0\0",
    /*115c0*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d u32Align should between %d and %d, which is %d!\n\0\0",
    /*1161c*/ "[Func]:%s [Line]:%d [Info]: ViPipe %d enRawSource %d illegal,only support send raw from BE when Linear mode!\n\0\0\0",
    /*1168c*/ "[Func]:%s [Line]:%d [Info]:Unsupported IntType %d \n\0",
    /*116c0*/ "[Func]:%s [Line]:%d [Info]:Pipe:%d err intterupt status:0x%x !! EOF:%d BUFOVF:%d DATATHROW:%d .\n\0\0\0\0",
    /*11724*/ "0\0\0\0",
    /*11728*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*11768*/ "HI_NULL != pstNode\0\0",
    /*1177c*/ " Vi proc %d VIPROC_PNEXT_LOW:%#x  u64NextPhyAddr:%#llx\n\0",
    /*117b4*/ "\n================vcap %d register debug info============= \n\0",
    /*117f0*/ "%04x:  %08x %08x %08x %08x\n\0",
    /*1180c*/ "\n\n\0\0",
    /*11810*/ "\n================vi %d register debug info============= \n\0\0\0",
    /*1184c*/ "VI(%d,0) %s\0",
    /*11858*/ "[Func]:%s [Line]:%d [Info]:PipeId %d create %s VB pool failed! u32Bufsize: %d, u32BufNum: %d\n\0\0\0",
    /*118b8*/ "[Func]:%s [Line]:%d [Info]:VB_CreatePool u32BufNum: %d, PoolId: %d\n\0",
    /*118fc*/ "[Func]:%s [Line]:%d [Info]:Pipe %d has destoried VB pool!\n\0\0",
    /*11938*/ "[Func]:%s [Line]:%d [Info]:Destoried VB pool %d!\n\0\0\0",
    /*1196c*/ "[Func]:%s [Line]:%d [Info]:Someone(%d) occupies vi wdr's vb %d!\n\0\0\0\0",
    /*119b0*/ "[Func]:%s [Line]:%d [Info]:ViPipe %d destory vb pool failed!\n\0\0\0",
    /*119f0*/ "[Func]:%s [Line]:%d [Info]:Hasn't creat vb pool!\n\0\0\0",
    /*11a24*/ "[Func]:%s [Line]:%d [Info]:Get wdr vb block failed!\n\0\0\0\0",
    /*11a5c*/ "[Func]:%s [Line]:%d [Info]:SYS_GetVBCfg is NULL!\n\0\0\0",
    /*11a90*/ "[Func]:%s [Line]:%d [Info]:enWDRMode(%d) must be in [%d, %d]\n\0\0\0",
    /*11ad0*/ "[Func]:%s [Line]:%d [Info]:Not support WDR_MODE_QUDRA.\n\0",
    /*11b08*/ "[Func]:%s [Line]:%d [Info]:CacheLine(%d) illegal, must be divided by dev_height:%d, and >100.\n\0\0",
    /*11b68*/ "[Func]:%s [Line]:%d [Info]:Not support this pixel format !\n\0",
    /*11ba4*/ "[Func]:%s [Line]:%d [Info]:Not support this pixel format :%d !\n\0",
    /*11be4*/ "[Func]:%s [Line]:%d [Info]:VI_WDR_GetVb failed.\n\0\0\0\0",
    /*11c18*/ "[Func]:%s [Line]:%d [Info]:SYS_GetVBCfg is NULL!\n\0\0\0",
    /*11c4c*/ "WDR\0",
    /*11c50*/ "[Func]:%s [Line]:%d [Info]:VI_WDR_CreatePool failed.\n\0\0\0",
    /*11c88*/ "[Func]:%s [Line]:%d [Info]:ISP_DRV_GetBeSyncPara failed!\n\0\0\0",
    /*11cc4*/ "[Func]:%s [Line]:%d [Info]:ISP_DRV_GetReadyBeBuf failed!\n\0\0\0",
    /*11d00*/ "[Func]:%s [Line]:%d [Info]:ISP_DRV_HoldBusyBeBuf failed!\n\0\0\0",
    /*11d3c*/ "[Func]:%s [Line]:%d [Info]:pool id invalid:%d.\n\0",
    /*11d6c*/ "[Func]:%s [Line]:%d [Info]:enField(%d) invalid, only support FRAME.\n\0\0\0\0",
    /*11db4*/ "[Func]:%s [Line]:%d [Info]:enPixelFormat invalid, only support RAW. \n\0\0\0",
    /*11dfc*/ "[Func]:%s [Line]:%d [Info]:Your width:%d, Height:%d, width must be in [%d, %d], height must be in [%d, %d].\n\0\0\0\0",
    /*11e6c*/ "[Func]:%s [Line]:%d [Info]:the frame size(%d, %d) must be 4 aligned.\n\0\0\0",
    /*11eb4*/ "[Func]:%s [Line]:%d [Info]:invalid, poolid:%d, phyaddr[0]:0x%lx.\n\0\0\0",
    /*11ef8*/ "[Func]:%s [Line]:%d [Info]:invalid enCompressMode(%d) must be COMPRESS_MODE_NONE.\n\0\0",
    /*11f4c*/ "[Func]:%s [Line]:%d [Info]:invalid enVideoFormat(%d) should be %d.\n\0",
    /*11f90*/ "[Func]:%s [Line]:%d [Info]:pipe %d illegal param: enDynamicRange:%d should be DYNAMIC_RANGE_SDR8.\n\0\0",
    /*11ff4*/ "[Func]:%s [Line]:%d [Info]:pipe %d illegal param: enColorGamut:%d should between [%d,%d]\n\0\0\0",
    /*12050*/ "[Func]:%s [Line]:%d [Info]:Not support FPN when split. \n\0\0\0\0",
    /*1208c*/ "[Func]:%s [Line]:%d [Info]:ViPipe:%d, enMode:%d, Invalid pipe mode, Fpn Calibration must be in online pipe mode.\n\0\0\0",
    /*12100*/ "[Func]:%s [Line]:%d [Info]:Do not Calibrate when wdr mode ,please disable wdr!\n\0",
    /*12150*/ "[Func]:%s [Line]:%d [Info]:ViPipe:%d Invalid enFpnType %d, must be ISP_FPN_TYPE_FRAME.\n\0",
    /*121a8*/ "[Func]:%s [Line]:%d [Info]:Invalid u32FrameNum %d, must be in [%d, %d].\n\0\0\0\0",
    /*121f4*/ "[Func]:%s [Line]:%d [Info]:Invalid u32Threshold %d, must be in [1, 0xfff].\n\0",
    /*12240*/ "[Func]:%s [Line]:%d [Info]:Invalid u32FrameNum %d, must be 2^N.\n\0\0\0\0",
    /*12284*/ "[Func]:%s [Line]:%d [Info]:Invalid bEnable %d, which should be HI_TRUE or HI_FALSE.\n\0\0\0\0",
    /*122dc*/ "[Func]:%s [Line]:%d [Info]:Invalid enOpType %d, which should be OP_TYPE_AUTO or OP_TYPE_MANUAL.\n\0\0\0\0",
    /*12340*/ "[Func]:%s [Line]:%d [Info]:Invalid enFpnType %d, which should be ISP_FPN_TYPE_FRAME.\n\0\0\0",
    /*12398*/ "[Func]:%s [Line]:%d [Info]:Invalid fpn ISO(%d)!\n\0\0\0\0",
    /*123cc*/ "[Func]:%s [Line]:%d [Info]:Invalid u32Offset0 0x%x, u32Offset1 0x%x, must be in [0, 0xFFF].\n\0\0\0\0",
    /*1242c*/ "[Func]:%s [Line]:%d [Info]:Invalid fpn strength, over 1023!\n\0\0\0\0",
    /*1246c*/ "[Func]:%s [Line]:%d [Info]:Invalid enFpnWorkMode %d. \n\0\0",
    /*124a4*/ "[Func]:%s [Line]:%d [Info]:FPN Calibrate failed, the pipe is FPN Correction Enable.\n\0\0\0\0",
    /*124fc*/ "[Func]:%s [Line]:%d [Info]:FPN Calibrate failed, vi proc int timeout.\n\0\0",
    /*12544*/ "0\0\0\0",
    /*12548*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*12588*/ "1 == tabVi\0\0",
    /*12594*/ "VI_CAP%d\0\0\0\0",
    /*125a0*/ "can not find vi cap IRQ\n\0\0\0\0",
    /*125bc*/ "can not find vi proc IRQ\n\0\0\0",
    /*125d8*/ "VI_PROC%d\0\0\0",
    /*125e4*/ "hi35xx_vi\0"
};

unsigned char data[396] = {
    /*0000*/ 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0010*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0020*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0030*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0040*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0050*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0060*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0070*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x69, 0x00, 0x00, 
    /*0080*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 
    /*0090*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00a0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00c0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00d0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00e0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00f0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0100*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x27, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0110*/ 0x0a, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0120*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 
    /*0130*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0140*/ 0x00, 0x00, 0x00, 0x00, 0xe4, 0x25, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0150*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xec, 0x23, 0x00, 0x00, 
    /*0160*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0170*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0180*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

unsigned char rel.data[288] = {
    /*0000*/ 0x04, 0x00, 0x00, 0x00, 0x02, 0x28, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x02, 0x26, 0x00, 0x00, 
    /*0010*/ 0x18, 0x00, 0x00, 0x00, 0x02, 0x20, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x02, 0x1f, 0x00, 0x00, 
    /*0020*/ 0x34, 0x00, 0x00, 0x00, 0x02, 0x27, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x18, 0x00, 0x00, 
    /*0030*/ 0x90, 0x00, 0x00, 0x00, 0x02, 0x08, 0x0f, 0x00, 0x94, 0x00, 0x00, 0x00, 0x02, 0x6a, 0x0f, 0x00, 
    /*0040*/ 0x98, 0x00, 0x00, 0x00, 0x02, 0x1d, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x02, 0x19, 0x00, 0x00, 
    /*0050*/ 0xa0, 0x00, 0x00, 0x00, 0x02, 0x16, 0x00, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x02, 0x0d, 0x00, 0x00, 
    /*0060*/ 0xb4, 0x00, 0x00, 0x00, 0x02, 0xb6, 0x0e, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x02, 0x28, 0x0c, 0x00, 
    /*0070*/ 0xbc, 0x00, 0x00, 0x00, 0x02, 0x13, 0x0d, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x02, 0xf2, 0x0e, 0x00, 
    /*0080*/ 0xc4, 0x00, 0x00, 0x00, 0x02, 0x44, 0x0e, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x02, 0x50, 0x0b, 0x00, 
    /*0090*/ 0xcc, 0x00, 0x00, 0x00, 0x02, 0x82, 0x0b, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x02, 0xb9, 0x0f, 0x00, 
    /*00a0*/ 0xd4, 0x00, 0x00, 0x00, 0x02, 0x9e, 0x0e, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x02, 0x26, 0x0e, 0x00, 
    /*00b0*/ 0xdc, 0x00, 0x00, 0x00, 0x02, 0xb2, 0x0f, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x02, 0x9d, 0x0c, 0x00, 
    /*00c0*/ 0xe4, 0x00, 0x00, 0x00, 0x02, 0xfd, 0x0b, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x02, 0x4c, 0x0d, 0x00, 
    /*00d0*/ 0xec, 0x00, 0x00, 0x00, 0x02, 0x6d, 0x0f, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x02, 0xab, 0x0d, 0x00, 
    /*00e0*/ 0xf8, 0x00, 0x00, 0x00, 0x02, 0x98, 0x0d, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x02, 0xe3, 0x0e, 0x00, 
    /*00f0*/ 0x00, 0x01, 0x00, 0x00, 0x02, 0xfe, 0x0b, 0x00, 0x04, 0x01, 0x00, 0x00, 0x02, 0x6c, 0x0c, 0x00, 
    /*0100*/ 0x30, 0x01, 0x00, 0x00, 0x02, 0x2a, 0x0b, 0x00, 0x34, 0x01, 0x00, 0x00, 0x02, 0x28, 0x0b, 0x00, 
    /*0110*/ 0x44, 0x01, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 
};

unsigned char bss[80852];

@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text
@ Size: 0x3c368
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN VI_GetVerMagic
    /*00000000*/ MOVW        R0, #61479                  @ 0xf027 
    /*00000004*/ MOVT        R0, #307                    @ 0x133 
    /*00000008*/ BX          LR 
FUNC_END VI_GetVerMagic


FUNC_BEGIN VI_RegisterFlashCallBack
    /*0000000c*/ MOV         R0, #0 
    /*00000010*/ BX          LR 
FUNC_END VI_RegisterFlashCallBack


FUNC_BEGIN VI_Restore
    /*00000014*/ MOV         R0, #0 
    /*00000018*/ BX          LR 
FUNC_END VI_Restore


FUNC_BEGIN VI_Notify
    /*0000001c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00000020*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00000024*/ LDR         R5, [PC, #136]              @ 0x00000000000000b4 
    /*00000028*/ MOVW        R8, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000002c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00000030*/ MOVT        R8, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00000034*/ MOV         R6, #0 
    /*00000038*/ MOV         R2, #1 
    /*0000003c*/ STR         R2, [R3] 
    VI_Notify_x40:
    /*00000040*/ ADD         R7, R5, #24 
    /*00000044*/ MOV         R0, R7 
    /*00000048*/ BL          0x0000000000000048          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000004c*/ CMP         R0, #0 
    /*00000050*/ BNE         VI_Notify_xa0
    /*00000054*/ LDR         R3, [R8, R6, LSL #2] 
    /*00000058*/ CMP         R3, #0 
    /*0000005c*/ BEQ         VI_Notify_x98
    /*00000060*/ SUB         R4, R5, #36                 @ 0x24 
    VI_Notify_x64:
    /*00000064*/ MOV         R0, R4 
    /*00000068*/ ADD         R4, R4, #4 
    /*0000006c*/ BL          0x000000000000006C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00000070*/ CMP         R4, R5 
    /*00000074*/ BNE         VI_Notify_x64
    /*00000078*/ ADD         R0, R5, #8 
    /*0000007c*/ BL          0x000000000000007C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00000080*/ ADD         R0, R5, #4 
    /*00000084*/ BL          0x0000000000000084          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00000088*/ MOV         R0, R5 
    /*0000008c*/ BL          0x000000000000008C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00000090*/ ADD         R0, R5, #16 
    /*00000094*/ BL          0x0000000000000094          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VI_Notify_x98:
    /*00000098*/ MOV         R0, R7 
    /*0000009c*/ BL          0x000000000000009C          @ osal_up [R_ARM_CALL: +0x0] 
    VI_Notify_xa0:
    /*000000a0*/ ADD         R6, R6, #1 
    /*000000a4*/ ADD         R5, R5, #176                @ 0xb0 
    /*000000a8*/ CMP         R6, #4 
    /*000000ac*/ BNE         VI_Notify_x40
    /*000000b0*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*000000b4*/ ANDEQ       R0, R0, IP, ASR #32         @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_Notify


FUNC_BEGIN VI_QueryState
    /*000000b8*/ PUSH        {R4, LR} 
    /*000000bc*/ MOV         R4, R0 
    /*000000c0*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000000c4*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000000c8*/ BL          0x00000000000000C8          @ osal_atomic_read [R_ARM_CALL: +0x0] 
    /*000000cc*/ CMP         R0, #0 
    /*000000d0*/ MOVEQ       R3, #17 
    /*000000d4*/ MOVNE       R3, #34                     @ 0x22 
    /*000000d8*/ STR         R3, [R4] 
    /*000000dc*/ POP         {R4, PC} 
FUNC_END VI_QueryState


FUNC_BEGIN VI_Poll
    /*000000e0*/ PUSH        {R4, R5, R6, LR} 
    /*000000e4*/ MOV         R6, R0 
    /*000000e8*/ LDR         R1, [R1] 
    /*000000ec*/ UBFX        R5, R1, #8, #8 
    /*000000f0*/ UXTB        R4, R1 
    /*000000f4*/ MOV         R0, R5 
    /*000000f8*/ BL          0x00000000000000F8          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*000000fc*/ CMP         R4, #10 
    /*00000100*/ CMPLE       R0, #0 
    /*00000104*/ BEQ         VI_Poll_x110
    /*00000108*/ MOV         R0, #0 
    /*0000010c*/ POP         {R4, R5, R6, PC} 
    VI_Poll_x110:
    /*00000110*/ MOV         R2, R6 
    /*00000114*/ MOV         R1, R4 
    /*00000118*/ MOV         R0, R5 
    /*0000011c*/ POP         {R4, R5, R6, LR} 
    VI_Poll_x120:
    /*00000120*/ B           VI_Poll_x120                @ VI_DoPoll [R_ARM_JUMP24: .text+0x5ba4] 
FUNC_END VI_Poll


FUNC_BEGIN VI_Init
    /*00000124*/ PUSH        {R4, LR} 
    /*00000128*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000012c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00000130*/ SUB         SP, SP, #8 
    /*00000134*/ LDR         R0, [R4] 
    /*00000138*/ CMP         R0, #0 
    /*0000013c*/ BNE         VI_Init_x148
    VI_Init_x140:
    /*00000140*/ ADD         SP, SP, #8 
    /*00000144*/ POP         {R4, PC} 
    VI_Init_x148:
    /*00000148*/ BL          0x0000000000000148          @ VI_CAP_Init [R_ARM_CALL: .text+0x5bc4] 
    /*0000014c*/ CMP         R0, #0 
    /*00000150*/ BNE         VI_Init_x140
    /*00000154*/ BL          0x0000000000000154          @ VI_PROC_Init [R_ARM_CALL: .text+0x5c80] 
    /*00000158*/ CMP         R0, #0 
    /*0000015c*/ STR         R0, [SP, #4] 
    /*00000160*/ BNE         VI_Init_x178
    /*00000164*/ BL          0x0000000000000164          @ VI_SetDefaultViVpssMode [R_ARM_CALL: .text+0x632c] 
    /*00000168*/ BL          0x0000000000000168          @ VI_InitTimeRef [R_ARM_CALL: .text+0x5eb4] 
    /*0000016c*/ LDR         R0, [SP, #4] 
    /*00000170*/ STR         R0, [R4] 
    /*00000174*/ B           VI_Init_x140
    VI_Init_x178:
    /*00000178*/ BL          0x0000000000000178          @ VI_CAP_Deinit [R_ARM_CALL: .text+0x5bec] 
    /*0000017c*/ LDR         R0, [SP, #4] 
    /*00000180*/ B           VI_Init_x140
FUNC_END VI_Init


FUNC_BEGIN VI_Exit
    /*00000184*/ PUSH        {R4, LR} 
    /*00000188*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000018c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00000190*/ LDR         R3, [R4] 
    /*00000194*/ CMP         R3, #2 
    /*00000198*/ POPEQ       {R4, PC} 
    /*0000019c*/ BL          0x000000000000019C          @ VI_PROC_Deinit [R_ARM_CALL: .text+0x5da8] 
    /*000001a0*/ CMP         R0, #0 
    /*000001a4*/ POPNE       {R4, PC} 
    /*000001a8*/ BL          0x00000000000001A8          @ VI_CAP_Deinit [R_ARM_CALL: .text+0x5bec] 
    /*000001ac*/ MOV         R3, #2 
    /*000001b0*/ STR         R3, [R4] 
    /*000001b4*/ POP         {R4, PC} 
FUNC_END VI_Exit


FUNC_BEGIN VI_Ioctl
    /*000001b8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*000001bc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*000001c0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000001c4*/ SUB         SP, SP, #8 
    /*000001c8*/ LDR         R3, [R3] 
    /*000001cc*/ CMP         R3, #0 
    /*000001d0*/ BNE         VI_Ioctl_x7d0
    /*000001d4*/ MOV         R6, R0 
    /*000001d8*/ MOV         R9, R2 
    /*000001dc*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000001e0*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000001e4*/ MOV         R8, R1 
    /*000001e8*/ BL          0x00000000000001E8          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*000001ec*/ LDR         R2, [R9] 
    /*000001f0*/ MOV         R3, R6 
    /*000001f4*/ UBFX        SL, R2, #16, #8 
    /*000001f8*/ UBFX        R7, R2, #8, #8 
    /*000001fc*/ UXTB        R5, R2 
    /*00000200*/ MOV         R0, SL 
    /*00000204*/ MOV         R1, R7 
    /*00000208*/ MOV         R2, R5 
    /*0000020c*/ BL          0x000000000000020C          @ VI_DRV_FuncPreFilter [R_ARM_CALL: .text+0x26a20] 
    /*00000210*/ SUBS        R4, R0, #0 
    /*00000214*/ BNE         VI_Ioctl_x2b0
    /*00000218*/ MOVW        R3, #18752                  @ 0x4940 
    /*0000021c*/ MOVT        R3, #16844                  @ 0x41cc 
    /*00000220*/ CMP         R6, R3 
    /*00000224*/ BEQ         VI_Ioctl_xb74
    /*00000228*/ BLS         VI_Ioctl_x2c8
    /*0000022c*/ MOVW        R3, #18795                  @ 0x496b 
    /*00000230*/ MOVT        R3, #32792                  @ 0x8018 
    /*00000234*/ CMP         R6, R3 
    /*00000238*/ BEQ         VI_Ioctl_x1014
    /*0000023c*/ BLS         VI_Ioctl_x334
    /*00000240*/ MOVW        R3, #18703                  @ 0x490f 
    /*00000244*/ MOVT        R3, #32920                  @ 0x8098 
    /*00000248*/ CMP         R6, R3 
    /*0000024c*/ BEQ         VI_Ioctl_xfec
    /*00000250*/ BHI         VI_Ioctl_x41c
    /*00000254*/ MOVW        R3, #18790                  @ 0x4966 
    /*00000258*/ MOVT        R3, #32808                  @ 0x8028 
    /*0000025c*/ CMP         R6, R3 
    /*00000260*/ BEQ         VI_Ioctl_xfd4
    /*00000264*/ BHI         VI_Ioctl_x700
    /*00000268*/ MOVW        R3, #18771                  @ 0x4953 
    /*0000026c*/ MOVT        R3, #32800                  @ 0x8020 
    /*00000270*/ CMP         R6, R3 
    /*00000274*/ BEQ         VI_Ioctl_xb88
    /*00000278*/ BHI         VI_Ioctl_x894
    /*0000027c*/ MOVW        R3, #18741                  @ 0x4935 
    /*00000280*/ MOVT        R3, #32796                  @ 0x801c 
    /*00000284*/ CMP         R6, R3 
    /*00000288*/ BEQ         VI_Ioctl_xfb0
    /*0000028c*/ MOVW        R3, #18769                  @ 0x4951 
    /*00000290*/ MOVT        R3, #32796                  @ 0x801c 
    /*00000294*/ CMP         R6, R3 
    /*00000298*/ BNE         VI_Ioctl_xcf8
    /*0000029c*/ MOV         R2, R8 
    /*000002a0*/ MOV         R1, R5 
    /*000002a4*/ MOV         R0, R7 
    /*000002a8*/ BL          0x00000000000002A8          @ VI_GetChnRotationExAttr [R_ARM_CALL: .text+0x211a0] 
    /*000002ac*/ MOV         R4, R0 
    VI_Ioctl_x2b0:
    /*000002b0*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000002b4*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000002b8*/ BL          0x00000000000002B8          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*000002bc*/ MOV         R0, R4 
    VI_Ioctl_x2c0:
    /*000002c0*/ ADD         SP, SP, #8 
    /*000002c4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_Ioctl_x2c8:
    /*000002c8*/ MOVW        R3, #18728                  @ 0x4928 
    /*000002cc*/ MOVT        R3, #16392                  @ 0x4008 
    /*000002d0*/ CMP         R6, R3 
    /*000002d4*/ BEQ         VI_Ioctl_x1000
    /*000002d8*/ BHI         VI_Ioctl_x3a8
    /*000002dc*/ MOVW        R3, #18742                  @ 0x4936 
    /*000002e0*/ CMP         R6, R3 
    /*000002e4*/ BEQ         VI_Ioctl_xcd8
    /*000002e8*/ BHI         VI_Ioctl_x488
    /*000002ec*/ MOVW        R3, #18711                  @ 0x4917 
    /*000002f0*/ CMP         R6, R3 
    /*000002f4*/ BEQ         VI_Ioctl_xcc8
    /*000002f8*/ BHI         VI_Ioctl_x5e8
    /*000002fc*/ MOVW        R3, #18705                  @ 0x4911 
    /*00000300*/ CMP         R6, R3 
    /*00000304*/ BEQ         VI_Ioctl_xbb0
    /*00000308*/ BHI         VI_Ioctl_x86c
    /*0000030c*/ MOVW        R3, #18695                  @ 0x4907 
    /*00000310*/ CMP         R6, R3 
    /*00000314*/ BEQ         VI_Ioctl_xd90
    /*00000318*/ MOVW        R3, #18696                  @ 0x4908 
    /*0000031c*/ CMP         R6, R3 
    /*00000320*/ BNE         VI_Ioctl_xcf8
    /*00000324*/ MOV         R0, SL 
    /*00000328*/ BL          0x0000000000000328          @ VI_DisableDev [R_ARM_CALL: .text+0x70d0] 
    /*0000032c*/ MOV         R4, R0 
    /*00000330*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x334:
    /*00000334*/ MOVW        R3, #18702                  @ 0x490e 
    /*00000338*/ MOVT        R3, #32776                  @ 0x8008 
    /*0000033c*/ CMP         R6, R3 
    /*00000340*/ BEQ         VI_Ioctl_xcb4
    /*00000344*/ BHI         VI_Ioctl_x4e4
    /*00000348*/ MOVW        R3, #18698                  @ 0x490a 
    /*0000034c*/ MOVT        R3, #32772                  @ 0x8004 
    /*00000350*/ CMP         R6, R3 
    /*00000354*/ BEQ         VI_Ioctl_xca0
    /*00000358*/ BHI         VI_Ioctl_x5a0
    /*0000035c*/ MOVW        R3, #18766                  @ 0x494e 
    /*00000360*/ MOVT        R3, #17024                  @ 0x4280 
    /*00000364*/ CMP         R6, R3 
    /*00000368*/ BEQ         VI_Ioctl_xee4
    /*0000036c*/ BHI         VI_Ioctl_x834
    /*00000370*/ MOVW        R3, #18770                  @ 0x4952 
    /*00000374*/ MOVT        R3, #16888                  @ 0x41f8 
    /*00000378*/ CMP         R6, R3 
    /*0000037c*/ BEQ         VI_Ioctl_xdb4
    /*00000380*/ MOVW        R3, #18776                  @ 0x4958 
    /*00000384*/ MOVT        R3, #16960                  @ 0x4240 
    /*00000388*/ CMP         R6, R3 
    /*0000038c*/ BNE         VI_Ioctl_xcf8
    /*00000390*/ MOV         R2, R8 
    /*00000394*/ MOV         R1, R5 
    /*00000398*/ MOV         R0, R7 
    /*0000039c*/ BL          0x000000000000039C          @ VI_SetChnSpreadAttr [R_ARM_CALL: .text+0x212c4] 
    /*000003a0*/ MOV         R4, R0 
    /*000003a4*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x3a8:
    /*000003a8*/ MOVW        R3, #18781                  @ 0x495d 
    /*000003ac*/ MOVT        R3, #16420                  @ 0x4024 
    /*000003b0*/ CMP         R6, R3 
    /*000003b4*/ BEQ         VI_Ioctl_xecc
    /*000003b8*/ BHI         VI_Ioctl_x540
    /*000003bc*/ MOVW        R3, #18731                  @ 0x492b 
    /*000003c0*/ MOVT        R3, #16396                  @ 0x400c 
    /*000003c4*/ CMP         R6, R3 
    /*000003c8*/ BEQ         VI_Ioctl_xeb8
    /*000003cc*/ BHI         VI_Ioctl_x66c
    /*000003d0*/ MOVW        R3, #18796                  @ 0x496c 
    /*000003d4*/ MOVT        R3, #16392                  @ 0x4008 
    /*000003d8*/ CMP         R6, R3 
    /*000003dc*/ BEQ         VI_Ioctl_xc28
    /*000003e0*/ BHI         VI_Ioctl_x8f4
    /*000003e4*/ MOVW        R3, #18746                  @ 0x493a 
    /*000003e8*/ MOVT        R3, #16392                  @ 0x4008 
    /*000003ec*/ CMP         R6, R3 
    /*000003f0*/ BEQ         VI_Ioctl_xe64
    /*000003f4*/ MOVW        R3, #18778                  @ 0x495a 
    /*000003f8*/ MOVT        R3, #16392                  @ 0x4008 
    /*000003fc*/ CMP         R6, R3 
    /*00000400*/ BNE         VI_Ioctl_xcf8
    /*00000404*/ MOV         R2, R8 
    /*00000408*/ MOV         R1, R5 
    /*0000040c*/ MOV         R0, R7 
    /*00000410*/ BL          0x0000000000000410          @ VI_SetChnLowDealyAttr [R_ARM_CALL: .text+0xc108] 
    /*00000414*/ MOV         R4, R0 
    /*00000418*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x41c:
    /*0000041c*/ MOVW        R3, #18791                  @ 0x4967 
    /*00000420*/ MOVT        R3, #49160                  @ 0xc008 
    /*00000424*/ CMP         R6, R3 
    /*00000428*/ BEQ         VI_Ioctl_xb58
    /*0000042c*/ BLS         VI_Ioctl_x620
    /*00000430*/ MOVW        R3, #18780                  @ 0x495c 
    /*00000434*/ MOVT        R3, #49168                  @ 0xc010 
    /*00000438*/ CMP         R6, R3 
    /*0000043c*/ BEQ         VI_Ioctl_xe38
    /*00000440*/ BLS         VI_Ioctl_x928
    /*00000444*/ MOVW        R3, #18756                  @ 0x4944 
    /*00000448*/ MOVT        R3, #49544                  @ 0xc188 
    /*0000044c*/ CMP         R6, R3 
    /*00000450*/ BEQ         VI_Ioctl_xe24
    /*00000454*/ MOVW        R3, #18753                  @ 0x4941 
    /*00000458*/ MOVT        R3, #49612                  @ 0xc1cc 
    /*0000045c*/ CMP         R6, R3 
    /*00000460*/ BEQ         VI_Ioctl_xe10
    /*00000464*/ MOVW        R3, #18792                  @ 0x4968 
    /*00000468*/ MOVT        R3, #49488                  @ 0xc150 
    /*0000046c*/ CMP         R6, R3 
    /*00000470*/ BNE         VI_Ioctl_xcf8
    /*00000474*/ MOV         R0, R8 
    /*00000478*/ MOV         R1, #12 
    /*0000047c*/ BL          0x000000000000047C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00000480*/ MOV         R4, R0 
    /*00000484*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x488:
    /*00000488*/ MOVW        R3, #18733                  @ 0x492d 
    /*0000048c*/ MOVT        R3, #16388                  @ 0x4004 
    /*00000490*/ CMP         R6, R3 
    /*00000494*/ BEQ         VI_Ioctl_xc00
    /*00000498*/ BLS         VI_Ioctl_x748
    /*0000049c*/ MOVW        R3, #18800                  @ 0x4970 
    /*000004a0*/ MOVT        R3, #16388                  @ 0x4004 
    /*000004a4*/ CMP         R6, R3 
    /*000004a8*/ BEQ         VI_Ioctl_xc48
    /*000004ac*/ BHI         VI_Ioctl_x800
    /*000004b0*/ MOVW        R3, #18735                  @ 0x492f 
    /*000004b4*/ MOVT        R3, #16388                  @ 0x4004 
    /*000004b8*/ CMP         R6, R3 
    /*000004bc*/ BEQ         VI_Ioctl_xc14
    /*000004c0*/ MOVW        R3, #18744                  @ 0x4938 
    /*000004c4*/ MOVT        R3, #16388                  @ 0x4004 
    /*000004c8*/ CMP         R6, R3 
    /*000004cc*/ BNE         VI_Ioctl_xcf8
    /*000004d0*/ LDR         R1, [R8] 
    /*000004d4*/ MOV         R0, R7 
    /*000004d8*/ BL          0x00000000000004D8          @ VI_SetPipeVCNumber [R_ARM_CALL: .text+0x8850] 
    /*000004dc*/ MOV         R4, R0 
    /*000004e0*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x4e4:
    /*000004e4*/ MOVW        R3, #18732                  @ 0x492c 
    /*000004e8*/ MOVT        R3, #32780                  @ 0x800c 
    /*000004ec*/ CMP         R6, R3 
    /*000004f0*/ BEQ         VI_Ioctl_xc74
    /*000004f4*/ BHI         VI_Ioctl_x6b4
    /*000004f8*/ MOVW        R3, #18779                  @ 0x495b 
    /*000004fc*/ MOVT        R3, #32776                  @ 0x8008 
    /*00000500*/ CMP         R6, R3 
    /*00000504*/ BEQ         VI_Ioctl_xde0
    /*00000508*/ BHI         VI_Ioctl_x994
    /*0000050c*/ MOVW        R3, #18729                  @ 0x4929 
    /*00000510*/ MOVT        R3, #32776                  @ 0x8008 
    /*00000514*/ CMP         R6, R3 
    /*00000518*/ BEQ         VI_Ioctl_xdcc
    /*0000051c*/ MOVW        R3, #18747                  @ 0x493b 
    /*00000520*/ MOVT        R3, #32776                  @ 0x8008 
    /*00000524*/ CMP         R6, R3 
    /*00000528*/ BNE         VI_Ioctl_xcf8
    /*0000052c*/ MOV         R1, R8 
    /*00000530*/ MOV         R0, R7 
    /*00000534*/ BL          0x0000000000000534          @ VI_GetPipeFrameInterruptAttr [R_ARM_CALL: .text+0x8d40] 
    /*00000538*/ MOV         R4, R0 
    /*0000053c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x540:
    /*00000540*/ MOVW        R3, #18718                  @ 0x491e 
    /*00000544*/ MOVT        R3, #16484                  @ 0x4064 
    /*00000548*/ CMP         R6, R3 
    /*0000054c*/ BEQ         VI_Ioctl_xf38
    /*00000550*/ BHI         VI_Ioctl_x784
    /*00000554*/ MOVW        R3, #18760                  @ 0x4948 
    /*00000558*/ MOVT        R3, #16428                  @ 0x402c 
    /*0000055c*/ CMP         R6, R3 
    /*00000560*/ BEQ         VI_Ioctl_xe90
    /*00000564*/ BHI         VI_Ioctl_x9cc
    /*00000568*/ MOVW        R3, #18783                  @ 0x495f 
    /*0000056c*/ MOVT        R3, #16424                  @ 0x4028 
    /*00000570*/ CMP         R6, R3 
    /*00000574*/ BEQ         VI_Ioctl_xe78
    /*00000578*/ MOVW        R3, #18789                  @ 0x4965 
    /*0000057c*/ MOVT        R3, #16424                  @ 0x4028 
    /*00000580*/ CMP         R6, R3 
    /*00000584*/ BNE         VI_Ioctl_xcf8
    /*00000588*/ MOV         R2, R8 
    /*0000058c*/ MOV         R1, R5 
    /*00000590*/ MOV         R0, R7 
    /*00000594*/ BL          0x0000000000000594          @ VI_SetExtChnAttr [R_ARM_CALL: .text+0xba40] 
    /*00000598*/ MOV         R4, R0 
    /*0000059c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x5a0:
    /*000005a0*/ MOVW        R3, #18745                  @ 0x4939 
    /*000005a4*/ MOVT        R3, #32772                  @ 0x8004 
    /*000005a8*/ CMP         R6, R3 
    /*000005ac*/ BEQ         VI_Ioctl_xf60
    /*000005b0*/ BHI         VI_Ioctl_x95c
    /*000005b4*/ MOVW        R3, #18734                  @ 0x492e 
    /*000005b8*/ MOVT        R3, #32772                  @ 0x8004 
    /*000005bc*/ CMP         R6, R3 
    /*000005c0*/ BEQ         VI_Ioctl_xf4c
    /*000005c4*/ MOVW        R3, #18736                  @ 0x4930 
    /*000005c8*/ MOVT        R3, #32772                  @ 0x8004 
    /*000005cc*/ CMP         R6, R3 
    /*000005d0*/ BNE         VI_Ioctl_xcf8
    /*000005d4*/ MOV         R1, R8 
    /*000005d8*/ MOV         R0, R7 
    /*000005dc*/ BL          0x00000000000005DC          @ VI_GetPipeRepeatMode [R_ARM_CALL: .text+0x8770] 
    /*000005e0*/ MOV         R4, R0 
    /*000005e4*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x5e8:
    /*000005e8*/ MOVW        R3, #18721                  @ 0x4921 
    /*000005ec*/ CMP         R6, R3 
    /*000005f0*/ BEQ         VI_Ioctl_xbd8
    /*000005f4*/ BHI         VI_Ioctl_x8cc
    /*000005f8*/ MOVW        R3, #18712                  @ 0x4918 
    /*000005fc*/ CMP         R6, R3 
    /*00000600*/ BEQ         VI_Ioctl_xb30
    /*00000604*/ MOVW        R3, #18720                  @ 0x4920 
    /*00000608*/ CMP         R6, R3 
    /*0000060c*/ BNE         VI_Ioctl_xcf8
    /*00000610*/ MOV         R0, R7 
    /*00000614*/ BL          0x0000000000000614          @ VI_EnableSnapPipe [R_ARM_CALL: .text+0x18ec8] 
    /*00000618*/ MOV         R4, R0 
    /*0000061c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x620:
    /*00000620*/ MOVW        R3, #18757                  @ 0x4945 
    /*00000624*/ MOVT        R3, #33160                  @ 0x8188 
    /*00000628*/ CMP         R6, R3 
    /*0000062c*/ BEQ         VI_Ioctl_xd40
    /*00000630*/ BLS         VI_Ioctl_xa00
    /*00000634*/ MOVW        R3, #18730                  @ 0x492a 
    /*00000638*/ MOVT        R3, #49160                  @ 0xc008 
    /*0000063c*/ CMP         R6, R3 
    /*00000640*/ BEQ         VI_Ioctl_xd28
    /*00000644*/ MOVW        R3, #18737                  @ 0x4931 
    /*00000648*/ MOVT        R3, #49160                  @ 0xc008 
    /*0000064c*/ CMP         R6, R3 
    /*00000650*/ BNE         VI_Ioctl_xcf8
    /*00000654*/ MOV         R0, R7 
    /*00000658*/ LDR         R2, [R8] 
    /*0000065c*/ LDR         R1, [R8, #4] 
    /*00000660*/ BL          0x0000000000000660          @ VI_GetPipeRaw [R_ARM_CALL: .text+0x1eb64] 
    /*00000664*/ MOV         R4, R0 
    /*00000668*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x66c:
    /*0000066c*/ MOVW        R3, #18714                  @ 0x491a 
    /*00000670*/ MOVT        R3, #16404                  @ 0x4014 
    /*00000674*/ CMP         R6, R3 
    /*00000678*/ BEQ         VI_Ioctl_xc60
    /*0000067c*/ BLS         VI_Ioctl_xa38
    /*00000680*/ MOVW        R3, #18764                  @ 0x494c 
    /*00000684*/ MOVT        R3, #16408                  @ 0x4018 
    /*00000688*/ CMP         R6, R3 
    /*0000068c*/ BEQ         VI_Ioctl_xc88
    /*00000690*/ MOVW        R3, #18739                  @ 0x4933 
    /*00000694*/ MOVT        R3, #16416                  @ 0x4020 
    /*00000698*/ CMP         R6, R3 
    /*0000069c*/ BNE         VI_Ioctl_xcf8
    /*000006a0*/ MOV         R1, R8 
    /*000006a4*/ MOV         R0, R7 
    /*000006a8*/ BL          0x00000000000006A8          @ VI_SendMultPipeRaw [R_ARM_CALL: .text+0x1e930] 
    /*000006ac*/ MOV         R4, R0 
    /*000006b0*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x6b4:
    /*000006b4*/ MOVW        R3, #18700                  @ 0x490c 
    /*000006b8*/ MOVT        R3, #32788                  @ 0x8014 
    /*000006bc*/ CMP         R6, R3 
    /*000006c0*/ BEQ         VI_Ioctl_xd7c
    /*000006c4*/ BLS         VI_Ioctl_xb08
    /*000006c8*/ MOVW        R3, #18715                  @ 0x491b 
    /*000006cc*/ MOVT        R3, #32788                  @ 0x8014 
    /*000006d0*/ CMP         R6, R3 
    /*000006d4*/ BEQ         VI_Ioctl_xda0
    /*000006d8*/ MOVW        R3, #18765                  @ 0x494d 
    /*000006dc*/ MOVT        R3, #32792                  @ 0x8018 
    /*000006e0*/ CMP         R6, R3 
    /*000006e4*/ BNE         VI_Ioctl_xcf8
    /*000006e8*/ MOV         R2, R8 
    /*000006ec*/ MOV         R1, R5 
    /*000006f0*/ MOV         R0, R7 
    /*000006f4*/ BL          0x00000000000006F4          @ VI_GetChnCrop [R_ARM_CALL: .text+0xa800] 
    /*000006f8*/ MOV         R4, R0 
    /*000006fc*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x700:
    /*00000700*/ MOVW        R3, #18719                  @ 0x491f 
    /*00000704*/ MOVT        R3, #32868                  @ 0x8064 
    /*00000708*/ CMP         R6, R3 
    /*0000070c*/ BEQ         VI_Ioctl_xd68
    /*00000710*/ BHI         VI_Ioctl_xad4
    /*00000714*/ MOVW        R3, #18761                  @ 0x4949 
    /*00000718*/ MOVT        R3, #32812                  @ 0x802c 
    /*0000071c*/ CMP         R6, R3 
    /*00000720*/ BEQ         VI_Ioctl_xb40
    /*00000724*/ MOVW        R3, #18710                  @ 0x4916 
    /*00000728*/ MOVT        R3, #32836                  @ 0x8044 
    /*0000072c*/ CMP         R6, R3 
    /*00000730*/ BNE         VI_Ioctl_xcf8
    /*00000734*/ MOV         R1, R8 
    /*00000738*/ MOV         R0, R7 
    /*0000073c*/ BL          0x000000000000073C          @ VI_GetPipeAttr [R_ARM_CALL: .text+0x7c8c] 
    /*00000740*/ MOV         R4, R0 
    /*00000744*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x748:
    /*00000748*/ MOVW        R3, #18763                  @ 0x494b 
    /*0000074c*/ CMP         R6, R3 
    /*00000750*/ BEQ         VI_Ioctl_xf9c
    /*00000754*/ BHI         VI_Ioctl_xaa0
    /*00000758*/ MOVW        R3, #18743                  @ 0x4937 
    /*0000075c*/ CMP         R6, R3 
    /*00000760*/ BEQ         VI_Ioctl_xfc4
    /*00000764*/ MOVW        R3, #18762                  @ 0x494a 
    /*00000768*/ CMP         R6, R3 
    /*0000076c*/ BNE         VI_Ioctl_xcf8
    /*00000770*/ MOV         R1, R5 
    /*00000774*/ MOV         R0, R7 
    /*00000778*/ BL          0x0000000000000778          @ VI_EnableChn [R_ARM_CALL: .text+0xa968] 
    /*0000077c*/ MOV         R4, R0 
    /*00000780*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x784:
    /*00000784*/ MOVW        R3, #18690                  @ 0x4902 
    /*00000788*/ MOVT        R3, #16548                  @ 0x40a4 
    /*0000078c*/ CMP         R6, R3 
    /*00000790*/ BEQ         VI_Ioctl_x2b0
    /*00000794*/ BLS         VI_Ioctl_xa6c
    /*00000798*/ MOVW        R3, #18704                  @ 0x4910 
    /*0000079c*/ MOVT        R3, #16728                  @ 0x4158 
    /*000007a0*/ CMP         R6, R3 
    /*000007a4*/ BEQ         VI_Ioctl_xf88
    /*000007a8*/ MOVW        R3, #18738                  @ 0x4932 
    /*000007ac*/ MOVT        R3, #16728                  @ 0x4158 
    /*000007b0*/ CMP         R6, R3 
    /*000007b4*/ BNE         VI_Ioctl_xcf8
    /*000007b8*/ MOV         R0, R7 
    /*000007bc*/ LDR         R2, [R8, #336]              @ 0x150 
    /*000007c0*/ MOV         R1, R8 
    /*000007c4*/ BL          0x00000000000007C4          @ VI_SendPipeYUV [R_ARM_CALL: .text+0x1df9c] 
    /*000007c8*/ MOV         R4, R0 
    /*000007cc*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x7d0:
    /*000007d0*/ MOVW        R2, #1051                   @ 0x41b 
    /*000007d4*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*000007d8*/ STR         R2, [SP] 
    /*000007dc*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*000007e0*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x0] 
    /*000007e4*/ MOV         R1, #16 
    /*000007e8*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x0] 
    /*000007ec*/ MOV         R0, #3 
    /*000007f0*/ BL          0x00000000000007F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000007f4*/ MOVW        R0, #32784                  @ 0x8010 
    /*000007f8*/ MOVT        R0, #40976                  @ 0xa010 
    /*000007fc*/ B           VI_Ioctl_x2c0
    VI_Ioctl_x800:
    /*00000800*/ MOVW        R3, #18803                  @ 0x4973 
    /*00000804*/ MOVT        R3, #16388                  @ 0x4004 
    /*00000808*/ CMP         R6, R3 
    /*0000080c*/ BEQ         VI_Ioctl_xefc
    /*00000810*/ MOVW        R3, #18701                  @ 0x490d 
    /*00000814*/ MOVT        R3, #16392                  @ 0x4008 
    /*00000818*/ CMP         R6, R3 
    /*0000081c*/ BNE         VI_Ioctl_xcf8
    /*00000820*/ MOV         R1, R8 
    /*00000824*/ MOV         R0, SL 
    /*00000828*/ BL          0x0000000000000828          @ VI_SetDevTimingAttr [R_ARM_CALL: .text+0x1f594] 
    /*0000082c*/ MOV         R4, R0 
    /*00000830*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x834:
    /*00000834*/ MOVW        R3, #18768                  @ 0x4950 
    /*00000838*/ MOVT        R3, #17048                  @ 0x4298 
    /*0000083c*/ CMP         R6, R3 
    /*00000840*/ BEQ         VI_Ioctl_xbc0
    /*00000844*/ MOVW        R3, #18787                  @ 0x4963 
    /*00000848*/ MOVT        R3, #20192                  @ 0x4ee0 
    /*0000084c*/ CMP         R6, R3 
    /*00000850*/ BNE         VI_Ioctl_xcf8
    /*00000854*/ MOV         R2, R8 
    /*00000858*/ MOV         R1, R5 
    /*0000085c*/ MOV         R0, R7 
    /*00000860*/ BL          0x0000000000000860          @ VI_SetExtChnFisheye [R_ARM_CALL: .text+0xbcf8] 
    /*00000864*/ MOV         R4, R0 
    /*00000868*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x86c:
    /*0000086c*/ MOVW        R3, #18706                  @ 0x4912 
    /*00000870*/ CMP         R6, R3 
    /*00000874*/ BEQ         VI_Ioctl_xba0
    /*00000878*/ MOVW        R3, #18708                  @ 0x4914 
    /*0000087c*/ CMP         R6, R3 
    /*00000880*/ BNE         VI_Ioctl_xcf8
    /*00000884*/ MOV         R0, R7 
    /*00000888*/ BL          0x0000000000000888          @ VI_DestroyPipe [R_ARM_CALL: .text+0x7f60] 
    /*0000088c*/ MOV         R4, R0 
    /*00000890*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x894:
    /*00000894*/ MOVW        R3, #18782                  @ 0x495e 
    /*00000898*/ MOVT        R3, #32804                  @ 0x8024 
    /*0000089c*/ CMP         R6, R3 
    /*000008a0*/ BEQ         VI_Ioctl_xbe8
    /*000008a4*/ MOVW        R3, #18784                  @ 0x4960 
    /*000008a8*/ MOVT        R3, #32808                  @ 0x8028 
    /*000008ac*/ CMP         R6, R3 
    /*000008b0*/ BNE         VI_Ioctl_xcf8
    /*000008b4*/ MOV         R2, R8 
    /*000008b8*/ MOV         R1, R5 
    /*000008bc*/ MOV         R0, R7 
    /*000008c0*/ BL          0x00000000000008C0          @ Vi_GetDISConfig [R_ARM_CALL: .text+0x23590] 
    /*000008c4*/ MOV         R4, R0 
    /*000008c8*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x8cc:
    /*000008cc*/ MOVW        R3, #18722                  @ 0x4922 
    /*000008d0*/ CMP         R6, R3 
    /*000008d4*/ BEQ         VI_Ioctl_xc38
    /*000008d8*/ MOVW        R3, #18723                  @ 0x4923 
    /*000008dc*/ CMP         R6, R3 
    /*000008e0*/ BNE         VI_Ioctl_xcf8
    /*000008e4*/ MOV         R0, R7 
    /*000008e8*/ BL          0x00000000000008E8          @ VI_MultiPipeSnapTrigger [R_ARM_CALL: .text+0x199ac] 
    /*000008ec*/ MOV         R4, R0 
    /*000008f0*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x8f4:
    /*000008f4*/ MOVW        R3, #18724                  @ 0x4924 
    /*000008f8*/ MOVT        R3, #16396                  @ 0x400c 
    /*000008fc*/ CMP         R6, R3 
    /*00000900*/ BEQ         VI_Ioctl_xe50
    /*00000904*/ MOVW        R3, #18726                  @ 0x4926 
    /*00000908*/ MOVT        R3, #16396                  @ 0x400c 
    /*0000090c*/ CMP         R6, R3 
    /*00000910*/ BNE         VI_Ioctl_xcf8
    /*00000914*/ MOV         R1, R8 
    /*00000918*/ MOV         R0, R7 
    /*0000091c*/ BL          0x000000000000091C          @ VI_SetProBNRParam [R_ARM_CALL: .text+0x1aebc] 
    /*00000920*/ MOV         R4, R0 
    /*00000924*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x928:
    /*00000928*/ MOVW        R3, #18725                  @ 0x4925 
    /*0000092c*/ MOVT        R3, #49164                  @ 0xc00c 
    /*00000930*/ CMP         R6, R3 
    /*00000934*/ BEQ         VI_Ioctl_xf74
    /*00000938*/ MOVW        R3, #18727                  @ 0x4927 
    /*0000093c*/ MOVT        R3, #49164                  @ 0xc00c 
    /*00000940*/ CMP         R6, R3 
    /*00000944*/ BNE         VI_Ioctl_xcf8
    /*00000948*/ MOV         R1, R8 
    /*0000094c*/ MOV         R0, R7 
    /*00000950*/ BL          0x0000000000000950          @ VI_GetProBNRParam [R_ARM_CALL: .text+0x1aff0] 
    /*00000954*/ MOV         R4, R0 
    /*00000958*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x95c:
    /*0000095c*/ MOVW        R3, #18767                  @ 0x494f 
    /*00000960*/ MOVT        R3, #32772                  @ 0x8004 
    /*00000964*/ CMP         R6, R3 
    /*00000968*/ BEQ         VI_Ioctl_xdf8
    /*0000096c*/ MOVW        R3, #18801                  @ 0x4971 
    /*00000970*/ MOVT        R3, #32772                  @ 0x8004 
    /*00000974*/ CMP         R6, R3 
    /*00000978*/ BNE         VI_Ioctl_xcf8
    /*0000097c*/ MOV         R2, R8 
    /*00000980*/ MOV         R1, R5 
    /*00000984*/ MOV         R0, R7 
    /*00000988*/ BL          0x0000000000000988          @ VI_GetChnAlign [R_ARM_CALL: .text+0xb5bc] 
    /*0000098c*/ MOV         R4, R0 
    /*00000990*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x994:
    /*00000994*/ MOVW        R3, #18797                  @ 0x496d 
    /*00000998*/ MOVT        R3, #32776                  @ 0x8008 
    /*0000099c*/ CMP         R6, R3 
    /*000009a0*/ BEQ         VI_Ioctl_xea8
    /*000009a4*/ MOVW        R3, #18802                  @ 0x4972 
    /*000009a8*/ MOVT        R3, #32776                  @ 0x8008 
    /*000009ac*/ CMP         R6, R3 
    /*000009b0*/ BNE         VI_Ioctl_xcf8
    /*000009b4*/ MOV         R2, R8 
    /*000009b8*/ MOV         R1, R5 
    /*000009bc*/ MOV         R0, R7 
    /*000009c0*/ BL          0x00000000000009C0          @ VI_GetChnOutPutSize [R_ARM_CALL: .text+0xb1bc] 
    /*000009c4*/ MOV         R4, R0 
    /*000009c8*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x9cc:
    /*000009cc*/ MOVW        R3, #18707                  @ 0x4913 
    /*000009d0*/ MOVT        R3, #16452                  @ 0x4044 
    /*000009d4*/ CMP         R6, R3 
    /*000009d8*/ BEQ         VI_Ioctl_xd54
    /*000009dc*/ MOVW        R3, #18709                  @ 0x4915 
    /*000009e0*/ MOVT        R3, #16452                  @ 0x4044 
    /*000009e4*/ CMP         R6, R3 
    /*000009e8*/ BNE         VI_Ioctl_xcf8
    /*000009ec*/ MOV         R1, R8 
    /*000009f0*/ MOV         R0, R7 
    /*000009f4*/ BL          0x00000000000009F4          @ VI_SetPipeAttr [R_ARM_CALL: .text+0x7b14] 
    /*000009f8*/ MOV         R4, R0 
    /*000009fc*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xa00:
    /*00000a00*/ MOVW        R3, #18691                  @ 0x4903 
    /*00000a04*/ MOVT        R3, #32932                  @ 0x80a4 
    /*00000a08*/ CMP         R6, R3 
    /*00000a0c*/ BEQ         VI_Ioctl_x2b0
    /*00000a10*/ MOVW        R3, #18788                  @ 0x4964 
    /*00000a14*/ MOVT        R3, #32984                  @ 0x80d8 
    /*00000a18*/ CMP         R6, R3 
    /*00000a1c*/ BNE         VI_Ioctl_xcf8
    /*00000a20*/ MOV         R2, R8 
    /*00000a24*/ MOV         R1, R5 
    /*00000a28*/ MOV         R0, R7 
    /*00000a2c*/ BL          0x0000000000000A2C          @ VI_GetExtChnFisheye [R_ARM_CALL: .text+0xc008] 
    /*00000a30*/ MOV         R4, R0 
    /*00000a34*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xa38:
    /*00000a38*/ MOVW        R3, #18692                  @ 0x4904 
    /*00000a3c*/ MOVT        R3, #16404                  @ 0x4014 
    /*00000a40*/ CMP         R6, R3 
    /*00000a44*/ BEQ         VI_Ioctl_x2b0
    /*00000a48*/ MOVW        R3, #18699                  @ 0x490b 
    /*00000a4c*/ MOVT        R3, #16404                  @ 0x4014 
    /*00000a50*/ CMP         R6, R3 
    /*00000a54*/ BNE         VI_Ioctl_xcf8
    /*00000a58*/ MOV         R1, R8 
    /*00000a5c*/ MOV         R0, SL 
    /*00000a60*/ BL          0x0000000000000A60          @ VI_SetDevBindPipe [R_ARM_CALL: .text+0x7384] 
    /*00000a64*/ MOV         R4, R0 
    /*00000a68*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xa6c:
    /*00000a6c*/ MOVW        R3, #18748                  @ 0x493c 
    /*00000a70*/ MOVT        R3, #16504                  @ 0x4078 
    /*00000a74*/ CMP         R6, R3 
    /*00000a78*/ BEQ         VI_Ioctl_x2b0
    /*00000a7c*/ MOV         R3, #18688                  @ 0x4900 
    /*00000a80*/ MOVT        R3, #16528                  @ 0x4090 
    /*00000a84*/ CMP         R6, R3 
    /*00000a88*/ BNE         VI_Ioctl_xcf8
    /*00000a8c*/ MOV         R1, R8 
    /*00000a90*/ MOV         R0, SL 
    /*00000a94*/ BL          0x0000000000000A94          @ VI_SetDevAttr [R_ARM_CALL: .text+0x6db8] 
    /*00000a98*/ MOV         R4, R0 
    /*00000a9c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xaa0:
    /*00000aa0*/ MOVW        R3, #18694                  @ 0x4906 
    /*00000aa4*/ MOVT        R3, #16388                  @ 0x4004 
    /*00000aa8*/ CMP         R6, R3 
    /*00000aac*/ BEQ         VI_Ioctl_x2b0
    /*00000ab0*/ MOVW        R3, #18697                  @ 0x4909 
    /*00000ab4*/ MOVT        R3, #16388                  @ 0x4004 
    /*00000ab8*/ CMP         R6, R3 
    /*00000abc*/ BNE         VI_Ioctl_xcf8
    /*00000ac0*/ LDR         R1, [R8] 
    /*00000ac4*/ MOV         R0, SL 
    /*00000ac8*/ BL          0x0000000000000AC8          @ VI_SetMipiBindDev [R_ARM_CALL: .text+0x7664] 
    /*00000acc*/ MOV         R4, R0 
    /*00000ad0*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xad4:
    /*00000ad4*/ MOVW        R3, #18749                  @ 0x493d 
    /*00000ad8*/ MOVT        R3, #32888                  @ 0x8078 
    /*00000adc*/ CMP         R6, R3 
    /*00000ae0*/ BEQ         VI_Ioctl_x2b0
    /*00000ae4*/ MOVW        R3, #18689                  @ 0x4901 
    /*00000ae8*/ MOVT        R3, #32912                  @ 0x8090 
    /*00000aec*/ CMP         R6, R3 
    /*00000af0*/ BNE         VI_Ioctl_xcf8
    /*00000af4*/ MOV         R1, R8 
    /*00000af8*/ MOV         R0, SL 
    /*00000afc*/ BL          0x0000000000000AFC          @ VI_GetDevAttr [R_ARM_CALL: .text+0x6ee0] 
    /*00000b00*/ MOV         R4, R0 
    /*00000b04*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xb08:
    /*00000b08*/ MOVW        R3, #18777                  @ 0x4959 
    /*00000b0c*/ MOVT        R3, #32784                  @ 0x8010 
    /*00000b10*/ CMP         R6, R3 
    /*00000b14*/ BNE         VI_Ioctl_xce8
    /*00000b18*/ MOV         R2, R8 
    /*00000b1c*/ MOV         R1, R5 
    /*00000b20*/ MOV         R0, R7 
    /*00000b24*/ BL          0x0000000000000B24          @ VI_GetChnSpreadAttr [R_ARM_CALL: .text+0x21558] 
    /*00000b28*/ MOV         R4, R0 
    /*00000b2c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xb30:
    /*00000b30*/ MOV         R0, R7 
    /*00000b34*/ BL          0x0000000000000B34          @ VI_StopPipe [R_ARM_CALL: .text+0x82ec] 
    /*00000b38*/ MOV         R4, R0 
    /*00000b3c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xb40:
    /*00000b40*/ MOV         R2, R8 
    /*00000b44*/ MOV         R1, R5 
    /*00000b48*/ MOV         R0, R7 
    /*00000b4c*/ BL          0x0000000000000B4C          @ VI_GetChnAttr [R_ARM_CALL: .text+0xa478] 
    /*00000b50*/ MOV         R4, R0 
    /*00000b54*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xb58:
    /*00000b58*/ MOV         R1, R5 
    /*00000b5c*/ MOV         R0, R7 
    /*00000b60*/ LDR         R3, [R8] 
    /*00000b64*/ LDR         R2, [R8, #4] 
    /*00000b68*/ BL          0x0000000000000B68          @ VI_GetChnFrame [R_ARM_CALL: .text+0x1effc] 
    /*00000b6c*/ MOV         R4, R0 
    /*00000b70*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xb74:
    /*00000b74*/ MOV         R1, R8 
    /*00000b78*/ MOV         R0, R7 
    /*00000b7c*/ BL          0x0000000000000B7C          @ VI_SetPipeNRXParam [R_ARM_CALL: .text+0x8e20] 
    /*00000b80*/ MOV         R4, R0 
    /*00000b84*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xb88:
    /*00000b88*/ MOV         R2, R8 
    /*00000b8c*/ MOV         R1, R5 
    /*00000b90*/ MOV         R0, R7 
    /*00000b94*/ BL          0x0000000000000B94          @ VI_GetChnLDCAttr [R_ARM_CALL: .text+0x5168] 
    /*00000b98*/ MOV         R4, R0 
    /*00000b9c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xba0:
    /*00000ba0*/ MOV         R0, R7 
    /*00000ba4*/ BL          0x0000000000000BA4          @ VI_DisableUserPic [R_ARM_CALL: .text+0x1c458] 
    /*00000ba8*/ MOV         R4, R0 
    /*00000bac*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xbb0:
    /*00000bb0*/ MOV         R0, R7 
    /*00000bb4*/ BL          0x0000000000000BB4          @ VI_EnableUserPic [R_ARM_CALL: .text+0x1c224] 
    /*00000bb8*/ MOV         R4, R0 
    /*00000bbc*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xbc0:
    /*00000bc0*/ MOV         R2, R8 
    /*00000bc4*/ MOV         R1, R5 
    /*00000bc8*/ MOV         R0, R7 
    /*00000bcc*/ BL          0x0000000000000BCC          @ VI_SetChnRotationExAttr [R_ARM_CALL: .text+0x20f28] 
    /*00000bd0*/ MOV         R4, R0 
    /*00000bd4*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xbd8:
    /*00000bd8*/ MOV         R0, R7 
    /*00000bdc*/ BL          0x0000000000000BDC          @ VI_DisableSnapPipe [R_ARM_CALL: .text+0x192ac] 
    /*00000be0*/ MOV         R4, R0 
    /*00000be4*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xbe8:
    /*00000be8*/ MOV         R2, R8 
    /*00000bec*/ MOV         R1, R5 
    /*00000bf0*/ MOV         R0, R7 
    /*00000bf4*/ BL          0x0000000000000BF4          @ Vi_GetDISAttr [R_ARM_CALL: .text+0x22de0] 
    /*00000bf8*/ MOV         R4, R0 
    /*00000bfc*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xc00:
    /*00000c00*/ LDR         R1, [R8] 
    /*00000c04*/ MOV         R0, R7 
    /*00000c08*/ BL          0x0000000000000C08          @ VI_SetPipeRawSource [R_ARM_CALL: .text+0x8460] 
    /*00000c0c*/ MOV         R4, R0 
    /*00000c10*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xc14:
    /*00000c14*/ LDR         R1, [R8] 
    /*00000c18*/ MOV         R0, R7 
    /*00000c1c*/ BL          0x0000000000000C1C          @ VI_SetPipeRepeatMode [R_ARM_CALL: .text+0x8660] 
    /*00000c20*/ MOV         R4, R0 
    /*00000c24*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xc28:
    /*00000c28*/ MOV         R0, R8 
    /*00000c2c*/ BL          0x0000000000000C2C          @ VI_SetModParam [R_ARM_CALL: .text+0x58a4] 
    /*00000c30*/ MOV         R4, R0 
    /*00000c34*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xc38:
    /*00000c38*/ MOV         R0, R7 
    /*00000c3c*/ BL          0x0000000000000C3C          @ VI_TriggerSnapPipe [R_ARM_CALL: .text+0x1964c] 
    /*00000c40*/ MOV         R4, R0 
    /*00000c44*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xc48:
    /*00000c48*/ LDR         R2, [R8] 
    /*00000c4c*/ MOV         R1, R5 
    /*00000c50*/ MOV         R0, R7 
    /*00000c54*/ BL          0x0000000000000C54          @ VI_SetChnAlign [R_ARM_CALL: .text+0xb480] 
    /*00000c58*/ MOV         R4, R0 
    /*00000c5c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xc60:
    /*00000c60*/ MOV         R1, R8 
    /*00000c64*/ MOV         R0, R7 
    /*00000c68*/ BL          0x0000000000000C68          @ VI_SetPipeCrop [R_ARM_CALL: .text+0x93ac] 
    /*00000c6c*/ MOV         R4, R0 
    /*00000c70*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xc74:
    /*00000c74*/ MOV         R1, R8 
    /*00000c78*/ MOV         R0, R7 
    /*00000c7c*/ BL          0x0000000000000C7C          @ VI_GetPipeDumpAttr [R_ARM_CALL: .text+0x1f924] 
    /*00000c80*/ MOV         R4, R0 
    /*00000c84*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xc88:
    /*00000c88*/ MOV         R2, R8 
    /*00000c8c*/ MOV         R1, R5 
    /*00000c90*/ MOV         R0, R7 
    /*00000c94*/ BL          0x0000000000000C94          @ VI_SetChnCrop [R_ARM_CALL: .text+0xa5bc] 
    /*00000c98*/ MOV         R4, R0 
    /*00000c9c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xca0:
    /*00000ca0*/ MOV         R1, R8 
    /*00000ca4*/ MOV         R0, SL 
    /*00000ca8*/ BL          0x0000000000000CA8          @ VI_GetMipiBindDev [R_ARM_CALL: .text+0x766c] 
    /*00000cac*/ MOV         R4, R0 
    /*00000cb0*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xcb4:
    /*00000cb4*/ MOV         R1, R8 
    /*00000cb8*/ MOV         R0, SL 
    /*00000cbc*/ BL          0x0000000000000CBC          @ VI_GetDevTimingAttr [R_ARM_CALL: .text+0x1f6c8] 
    /*00000cc0*/ MOV         R4, R0 
    /*00000cc4*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xcc8:
    /*00000cc8*/ MOV         R0, R7 
    /*00000ccc*/ BL          0x0000000000000CCC          @ VI_StartPipe [R_ARM_CALL: .text+0x7d70] 
    /*00000cd0*/ MOV         R4, R0 
    /*00000cd4*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xcd8:
    /*00000cd8*/ MOV         R0, R7 
    /*00000cdc*/ BL          0x0000000000000CDC          @ VI_EnablePipeInterrupt [R_ARM_CALL: .text+0x91dc] 
    /*00000ce0*/ MOV         R4, R0 
    /*00000ce4*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xce8:
    /*00000ce8*/ MOVW        R3, #18693                  @ 0x4905 
    /*00000cec*/ MOVT        R3, #32788                  @ 0x8014 
    /*00000cf0*/ CMP         R6, R3 
    /*00000cf4*/ BEQ         VI_Ioctl_x2b0
    VI_Ioctl_xcf8:
    /*00000cf8*/ MOVW        R3, #986                    @ 0x3da 
    /*00000cfc*/ STR         R6, [SP, #4] 
    /*00000d00*/ STR         R3, [SP] 
    /*00000d04*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30] 
    /*00000d08*/ LDR         R3, [PC, #796]              @ 0x000000000000102c 
    /*00000d0c*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30] 
    /*00000d10*/ MOV         R1, #16 
    /*00000d14*/ MOV         R0, #3 
    /*00000d18*/ MOVW        R4, #32776                  @ 0x8008 
    /*00000d1c*/ BL          0x0000000000000D1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000d20*/ MOVT        R4, #40976                  @ 0xa010 
    /*00000d24*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xd28:
    /*00000d28*/ MOV         R0, R7 
    /*00000d2c*/ LDR         R2, [R8] 
    /*00000d30*/ LDR         R1, [R8, #4] 
    /*00000d34*/ BL          0x0000000000000D34          @ VI_GetPipeBnrRaw [R_ARM_CALL: .text+0x1fa58] 
    /*00000d38*/ MOV         R4, R0 
    /*00000d3c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xd40:
    /*00000d40*/ MOV         R1, R8 
    /*00000d44*/ MOV         R0, R7 
    /*00000d48*/ BL          0x0000000000000D48          @ VI_GetPipeFPNAttr [R_ARM_CALL: .text+0x9a38] 
    /*00000d4c*/ MOV         R4, R0 
    /*00000d50*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xd54:
    /*00000d54*/ MOV         R1, R8 
    /*00000d58*/ MOV         R0, R7 
    /*00000d5c*/ BL          0x0000000000000D5C          @ VI_CreatPipe [R_ARM_CALL: .text+0x7944] 
    /*00000d60*/ MOV         R4, R0 
    /*00000d64*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xd68:
    /*00000d68*/ MOV         R1, R8 
    /*00000d6c*/ MOV         R0, R7 
    /*00000d70*/ BL          0x0000000000000D70          @ VI_GetSnapPipeAttr [R_ARM_CALL: .text+0x18b10] 
    /*00000d74*/ MOV         R4, R0 
    /*00000d78*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xd7c:
    /*00000d7c*/ MOV         R1, R8 
    /*00000d80*/ MOV         R0, SL 
    /*00000d84*/ BL          0x0000000000000D84          @ VI_GetDevBindPipe [R_ARM_CALL: .text+0x7500] 
    /*00000d88*/ MOV         R4, R0 
    /*00000d8c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xd90:
    /*00000d90*/ MOV         R0, SL 
    /*00000d94*/ BL          0x0000000000000D94          @ VI_EnableDev [R_ARM_CALL: .text+0x6fc0] 
    /*00000d98*/ MOV         R4, R0 
    /*00000d9c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xda0:
    /*00000da0*/ MOV         R1, R8 
    /*00000da4*/ MOV         R0, R7 
    /*00000da8*/ BL          0x0000000000000DA8          @ VI_GetPipeCrop [R_ARM_CALL: .text+0x94b8] 
    /*00000dac*/ MOV         R4, R0 
    /*00000db0*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xdb4:
    /*00000db4*/ MOV         R2, R8 
    /*00000db8*/ MOV         R1, R5 
    /*00000dbc*/ MOV         R0, R7 
    /*00000dc0*/ BL          0x0000000000000DC0          @ VI_SetChnLDCAttr [R_ARM_CALL: .text+0x4e24] 
    /*00000dc4*/ MOV         R4, R0 
    /*00000dc8*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xdcc:
    /*00000dcc*/ MOV         R1, R8 
    /*00000dd0*/ MOV         R0, R7 
    /*00000dd4*/ BL          0x0000000000000DD4          @ VI_GetBNRRawDumpAttr [R_ARM_CALL: .text+0x202ac] 
    /*00000dd8*/ MOV         R4, R0 
    /*00000ddc*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xde0:
    /*00000de0*/ MOV         R2, R8 
    /*00000de4*/ MOV         R1, R5 
    /*00000de8*/ MOV         R0, R7 
    /*00000dec*/ BL          0x0000000000000DEC          @ VI_GetChnLowDealyAttr [R_ARM_CALL: .text+0xc2c8] 
    /*00000df0*/ MOV         R4, R0 
    /*00000df4*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xdf8:
    /*00000df8*/ MOV         R2, R8 
    /*00000dfc*/ MOV         R1, R5 
    /*00000e00*/ MOV         R0, R7 
    /*00000e04*/ BL          0x0000000000000E04          @ VI_GetChnRotationAttr [R_ARM_CALL: .text+0x9fcc] 
    /*00000e08*/ MOV         R4, R0 
    /*00000e0c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xe10:
    /*00000e10*/ MOV         R1, R8 
    /*00000e14*/ MOV         R0, R7 
    /*00000e18*/ BL          0x0000000000000E18          @ VI_GetPipeNRXParam [R_ARM_CALL: .text+0x8f48] 
    /*00000e1c*/ MOV         R4, R0 
    /*00000e20*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xe24:
    /*00000e24*/ MOV         R1, R8 
    /*00000e28*/ MOV         R0, R7 
    /*00000e2c*/ BL          0x0000000000000E2C          @ VI_SetPipeFPNAttr [R_ARM_CALL: .text+0x98d4] 
    /*00000e30*/ MOV         R4, R0 
    /*00000e34*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xe38:
    /*00000e38*/ MOV         R2, R8 
    /*00000e3c*/ MOV         R1, R5 
    /*00000e40*/ MOV         R0, R7 
    /*00000e44*/ BL          0x0000000000000E44          @ VI_GetRegionLumaTimeout [R_ARM_CALL: .text+0xc900] 
    /*00000e48*/ MOV         R4, R0 
    /*00000e4c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xe50:
    /*00000e50*/ MOV         R1, R8 
    /*00000e54*/ MOV         R0, R7 
    /*00000e58*/ BL          0x0000000000000E58          @ VI_SetProSharpenParam [R_ARM_CALL: .text+0x1ac54] 
    /*00000e5c*/ MOV         R4, R0 
    /*00000e60*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xe64:
    /*00000e64*/ MOV         R1, R8 
    /*00000e68*/ MOV         R0, R7 
    /*00000e6c*/ BL          0x0000000000000E6C          @ VI_SetPipeFrameInterruptAttr [R_ARM_CALL: .text+0x8bf4] 
    /*00000e70*/ MOV         R4, R0 
    /*00000e74*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xe78:
    /*00000e78*/ MOV         R2, R8 
    /*00000e7c*/ MOV         R1, R5 
    /*00000e80*/ MOV         R0, R7 
    /*00000e84*/ BL          0x0000000000000E84          @ Vi_SetDISConfig [R_ARM_CALL: .text+0x23348] 
    /*00000e88*/ MOV         R4, R0 
    /*00000e8c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xe90:
    /*00000e90*/ MOV         R2, R8 
    /*00000e94*/ MOV         R1, R5 
    /*00000e98*/ MOV         R0, R7 
    /*00000e9c*/ BL          0x0000000000000E9C          @ VI_SetChnAttr [R_ARM_CALL: .text+0xa1b0] 
    /*00000ea0*/ MOV         R4, R0 
    /*00000ea4*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xea8:
    /*00000ea8*/ MOV         R0, R8 
    /*00000eac*/ BL          0x0000000000000EAC          @ VI_GetModParam [R_ARM_CALL: .text+0x5844] 
    /*00000eb0*/ MOV         R4, R0 
    /*00000eb4*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xeb8:
    /*00000eb8*/ MOV         R1, R8 
    /*00000ebc*/ MOV         R0, R7 
    /*00000ec0*/ BL          0x0000000000000EC0          @ VI_SetPipeDumpAttr [R_ARM_CALL: .text+0x1f73c] 
    /*00000ec4*/ MOV         R4, R0 
    /*00000ec8*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xecc:
    /*00000ecc*/ MOV         R2, R8 
    /*00000ed0*/ MOV         R1, R5 
    /*00000ed4*/ MOV         R0, R7 
    /*00000ed8*/ BL          0x0000000000000ED8          @ Vi_SetDISAttr [R_ARM_CALL: .text+0x24308] 
    /*00000edc*/ MOV         R4, R0 
    /*00000ee0*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xee4:
    /*00000ee4*/ MOV         R2, R8 
    /*00000ee8*/ MOV         R1, R5 
    /*00000eec*/ MOV         R0, R7 
    /*00000ef0*/ BL          0x0000000000000EF0          @ VI_SetChnRotationAttr [R_ARM_CALL: .text+0x9b24] 
    /*00000ef4*/ MOV         R4, R0 
    /*00000ef8*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xefc:
    /*00000efc*/ LDR         R5, [R8] 
    /*00000f00*/ UBFX        R0, R5, #16, #8 
    /*00000f04*/ BL          0x0000000000000F04          @ VI_CheckDevId [R_ARM_CALL: .text+0x6d60] 
    /*00000f08*/ SUBS        R4, R0, #0 
    /*00000f0c*/ BNE         VI_Ioctl_x2b0
    /*00000f10*/ UBFX        R0, R5, #8, #8 
    /*00000f14*/ BL          0x0000000000000F14          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00000f18*/ SUBS        R4, R0, #0 
    /*00000f1c*/ BNE         VI_Ioctl_x2b0
    /*00000f20*/ UXTB        R0, R5 
    /*00000f24*/ BL          0x0000000000000F24          @ VI_CheckChnIdForIoctl [R_ARM_CALL: .text+0x1548] 
    /*00000f28*/ SUBS        R4, R0, #0 
    /*00000f2c*/ LDREQ       R3, [R8] 
    /*00000f30*/ STREQ       R3, [R9] 
    /*00000f34*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xf38:
    /*00000f38*/ MOV         R1, R8 
    /*00000f3c*/ MOV         R0, R7 
    /*00000f40*/ BL          0x0000000000000F40          @ VI_SetSnapPipeAttr [R_ARM_CALL: .text+0x186dc] 
    /*00000f44*/ MOV         R4, R0 
    /*00000f48*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xf4c:
    /*00000f4c*/ MOV         R1, R8 
    /*00000f50*/ MOV         R0, R7 
    /*00000f54*/ BL          0x0000000000000F54          @ VI_GetPipeRawSource [R_ARM_CALL: .text+0x8574] 
    /*00000f58*/ MOV         R4, R0 
    /*00000f5c*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xf60:
    /*00000f60*/ MOV         R1, R8 
    /*00000f64*/ MOV         R0, R7 
    /*00000f68*/ BL          0x0000000000000F68          @ VI_GetPipeVCNumber [R_ARM_CALL: .text+0x89ac] 
    /*00000f6c*/ MOV         R4, R0 
    /*00000f70*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xf74:
    /*00000f74*/ MOV         R1, R8 
    /*00000f78*/ MOV         R0, R7 
    /*00000f7c*/ BL          0x0000000000000F7C          @ VI_GetProSharpenParam [R_ARM_CALL: .text+0x1ad88] 
    /*00000f80*/ MOV         R4, R0 
    /*00000f84*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xf88:
    /*00000f88*/ MOV         R1, R8 
    /*00000f8c*/ MOV         R0, R7 
    /*00000f90*/ BL          0x0000000000000F90          @ VI_SetUserPic [R_ARM_CALL: .text+0x1c7d8] 
    /*00000f94*/ MOV         R4, R0 
    /*00000f98*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xf9c:
    /*00000f9c*/ MOV         R1, R5 
    /*00000fa0*/ MOV         R0, R7 
    /*00000fa4*/ BL          0x0000000000000FA4          @ VI_DisableChn [R_ARM_CALL: .text+0xae74] 
    /*00000fa8*/ MOV         R4, R0 
    /*00000fac*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xfb0:
    /*00000fb0*/ MOV         R1, R8 
    /*00000fb4*/ MOV         R0, R7 
    /*00000fb8*/ BL          0x0000000000000FB8          @ VI_GetPipeStatus [R_ARM_CALL: .text+0x90cc] 
    /*00000fbc*/ MOV         R4, R0 
    /*00000fc0*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xfc4:
    /*00000fc4*/ MOV         R0, R7 
    /*00000fc8*/ BL          0x0000000000000FC8          @ VI_DisablePipeInterrupt [R_ARM_CALL: .text+0x92c4] 
    /*00000fcc*/ MOV         R4, R0 
    /*00000fd0*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xfd4:
    /*00000fd4*/ MOV         R2, R8 
    /*00000fd8*/ MOV         R1, R5 
    /*00000fdc*/ MOV         R0, R7 
    /*00000fe0*/ BL          0x0000000000000FE0          @ VI_GetExtChnAttr [R_ARM_CALL: .text+0xbbb0] 
    /*00000fe4*/ MOV         R4, R0 
    /*00000fe8*/ B           VI_Ioctl_x2b0
    VI_Ioctl_xfec:
    /*00000fec*/ MOV         R1, R8 
    /*00000ff0*/ MOV         R0, R7 
    /*00000ff4*/ BL          0x0000000000000FF4          @ VI_GetPipeCmpParam [R_ARM_CALL: .text+0x7860] 
    /*00000ff8*/ MOV         R4, R0 
    /*00000ffc*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x1000:
    /*00001000*/ MOV         R1, R8 
    /*00001004*/ MOV         R0, R7 
    /*00001008*/ BL          0x0000000000001008          @ VI_SetBNRRawDumpAttr [R_ARM_CALL: .text+0x20080] 
    /*0000100c*/ MOV         R4, R0 
    /*00001010*/ B           VI_Ioctl_x2b0
    VI_Ioctl_x1014:
    /*00001014*/ MOV         R2, R8 
    /*00001018*/ MOV         R1, R5 
    /*0000101c*/ MOV         R0, R7 
    /*00001020*/ BL          0x0000000000001020          @ VI_GetChnStatus [R_ARM_CALL: .text+0xb318] 
    /*00001024*/ MOV         R4, R0 
    /*00001028*/ B           VI_Ioctl_x2b0
    /*0000102c*/ ANDEQ       R0, R0, IP 
FUNC_END VI_Ioctl


FUNC_BEGIN VI_Close
    /*00001030*/ MOV         R0, #0 
    /*00001034*/ BX          LR 
FUNC_END VI_Close


FUNC_BEGIN VI_Freeze
    /*00001038*/ MOV         R0, #0 
    /*0000103c*/ BX          LR 
FUNC_END VI_Freeze


FUNC_BEGIN VI_Open
    /*00001040*/ MOV         R0, #0 
    /*00001044*/ BX          LR 
FUNC_END VI_Open


FUNC_BEGIN VI_PipeProcInfo
    /*00001048*/ PUSH        {R4, LR} 
    /*0000104c*/ MOV         R4, R0 
    /*00001050*/ BL          0x0000000000001050          @ VI_ProcStithGrpAttr [R_ARM_CALL: .text+0xd57c] 
    /*00001054*/ MOV         R0, R4 
    /*00001058*/ BL          0x0000000000001058          @ VI_ProcDevAttr [R_ARM_CALL: .text+0xd584] 
    /*0000105c*/ MOV         R0, R4 
    /*00001060*/ BL          0x0000000000001060          @ VI_ProcPipeAttr [R_ARM_CALL: .text+0xde00] 
    /*00001064*/ MOV         R0, R4 
    /*00001068*/ BL          0x0000000000001068          @ VI_ProcPipeCropAttr [R_ARM_CALL: .text+0xe268] 
    /*0000106c*/ MOV         R0, R4 
    /*00001070*/ BL          0x0000000000001070          @ VI_ProcPipeNRAttr [R_ARM_CALL: .text+0xe3cc] 
    /*00001074*/ MOV         R0, R4 
    /*00001078*/ BL          0x0000000000001078          @ VI_ProcPipeNRXParam [R_ARM_CALL: .text+0xe908] 
    /*0000107c*/ MOV         R0, R4 
    /*00001080*/ BL          0x0000000000001080          @ VI_ProcPipeUserPicAttr [R_ARM_CALL: .text+0xe948] 
    /*00001084*/ MOV         R0, R4 
    /*00001088*/ BL          0x0000000000001088          @ VI_ProcPipeDumpAttr [R_ARM_CALL: .text+0xec90] 
    /*0000108c*/ MOV         R0, R4 
    /*00001090*/ BL          0x0000000000001090          @ VI_ProcPipeBNRDumpAttr [R_ARM_CALL: .text+0xedb8] 
    /*00001094*/ MOV         R0, R4 
    /*00001098*/ BL          0x0000000000001098          @ VI_ProcPhyChnAttr [R_ARM_CALL: .text+0xeecc] 
    /*0000109c*/ MOV         R0, R4 
    /*000010a0*/ BL          0x00000000000010A0          @ VI_ProcExtChnAttr [R_ARM_CALL: .text+0xf250] 
    /*000010a4*/ MOV         R0, R4 
    /*000010a8*/ BL          0x00000000000010A8          @ VI_ProcEarlyInterrupt [R_ARM_CALL: .text+0xf5c8] 
    /*000010ac*/ MOV         R0, R4 
    /*000010b0*/ BL          0x00000000000010B0          @ VI_ProcLowDelay [R_ARM_CALL: .text+0xf778] 
    /*000010b4*/ MOV         R0, R4 
    /*000010b8*/ BL          0x00000000000010B8          @ VI_ProcChnCropAttr [R_ARM_CALL: .text+0xf8fc] 
    /*000010bc*/ MOV         R0, R4 
    /*000010c0*/ BL          0x00000000000010C0          @ VI_ProcChnRotation [R_ARM_CALL: .text+0xfb40] 
    /*000010c4*/ MOV         R0, R4 
    /*000010c8*/ BL          0x00000000000010C8          @ VI_ProcChnLDCAttr [R_ARM_CALL: .text+0xfca0] 
    /*000010cc*/ MOV         R0, R4 
    /*000010d0*/ BL          0x00000000000010D0          @ VI_ProcChnLDCV2Attr [R_ARM_CALL: .text+0xfe64] 
    /*000010d4*/ MOV         R0, R4 
    /*000010d8*/ BL          0x00000000000010D8          @ VI_ProcChnRotationExAttr [R_ARM_CALL: .text+0xfff0] 
    /*000010dc*/ MOV         R0, R4 
    /*000010e0*/ BL          0x00000000000010E0          @ VI_ProcChnSpreadAttr [R_ARM_CALL: .text+0x10668] 
    /*000010e4*/ MOV         R0, R4 
    /*000010e8*/ BL          0x00000000000010E8          @ VI_ProcExtChnFishEye [R_ARM_CALL: .text+0x107d0] 
    /*000010ec*/ MOV         R0, R4 
    /*000010f0*/ BL          0x00000000000010F0          @ VI_ProcChnDISConfig [R_ARM_CALL: .text+0x101a0] 
    /*000010f4*/ MOV         R0, R4 
    /*000010f8*/ BL          0x00000000000010F8          @ VI_ProcChnDISAttr [R_ARM_CALL: .text+0x1045c] 
    /*000010fc*/ MOV         R0, R4 
    /*00001100*/ BL          0x0000000000001100          @ VI_ProcSnapAttr [R_ARM_CALL: .text+0x1b178] 
    /*00001104*/ MOV         R0, R4 
    /*00001108*/ BL          0x0000000000001108          @ VI_ProcChnOutputResolution [R_ARM_CALL: .text+0x10d38] 
    /*0000110c*/ MOV         R0, R4 
    /*00001110*/ BL          0x0000000000001110          @ VI_ProcPipeStatus [R_ARM_CALL: .text+0x11430] 
    /*00001114*/ MOV         R0, R4 
    /*00001118*/ BL          0x0000000000001118          @ VI_ProcChnStatus [R_ARM_CALL: .text+0x1113c] 
    /*0000111c*/ MOV         R0, R4 
    /*00001120*/ BL          0x0000000000001120          @ VI_ProcPipeStatistic [R_ARM_CALL: .text+0x112a0] 
    /*00001124*/ MOV         R0, R4 
    /*00001128*/ BL          0x0000000000001128          @ VI_ProcHwStatistic [R_ARM_CALL: .text+0x15da0] 
    /*0000112c*/ MOV         R0, R4 
    /*00001130*/ POP         {R4, LR} 
    VI_PipeProcInfo_x1134:
    /*00001134*/ B           VI_PipeProcInfo_x1134       @ VI_ProcHWDetectionInfo [R_ARM_JUMP24: .text+0x116a0] 
FUNC_END VI_PipeProcInfo


FUNC_BEGIN VI_ProcShow
    /*00001138*/ PUSH        {R4, LR} 
    /*0000113c*/ MOVW        R1, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x88] 
    /*00001140*/ MOV         R4, R0 
    /*00001144*/ MOVT        R1, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x88] 
    /*00001148*/ BL          0x0000000000001148          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000114c*/ MOV         R0, R4 
    /*00001150*/ BL          0x0000000000001150          @ VI_ProcModParam [R_ARM_CALL: .text+0x11620] 
    /*00001154*/ MOV         R0, R4 
    /*00001158*/ BL          0x0000000000001158          @ VI_PipeProcInfo [R_ARM_CALL: .text+0x1048] 
    /*0000115c*/ MOV         R0, #0 
    /*00001160*/ POP         {R4, PC} 
FUNC_END VI_ProcShow


FUNC_BEGIN VI_ModInit
    /*00001164*/ PUSH        {R4, R5, R6, LR} 
    /*00001168*/ BL          0x0000000000001168          @ VI_DRV_CheckProcEnableModuleParam [R_ARM_CALL: .text+0x345bc] 
    /*0000116c*/ CMP         R0, #0 
    /*00001170*/ BNE         VI_ModInit_x1250
    /*00001174*/ BL          0x0000000000001174          @ VI_SetDefaultModParam [R_ARM_CALL: .text+0x5e9c] 
    /*00001178*/ BL          0x0000000000001178          @ VI_DRV_ChangeProcSeq [R_ARM_CALL: .text+0x3443c] 
    /*0000117c*/ BL          0x000000000000117C          @ VI_SynchCtxInit [R_ARM_CALL: .text+0x5f30] 
    /*00001180*/ SUBS        R6, R0, #0 
    /*00001184*/ BNE         VI_ModInit_x1270
    /*00001188*/ MOVW        R0, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x110] 
    /*0000118c*/ MOVT        R0, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x110] 
    /*00001190*/ BL          0x0000000000001190          @ osal_createdev [R_ARM_CALL: +0x0] 
    /*00001194*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001198*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000119c*/ CMP         R0, #0 
    /*000011a0*/ STR         R0, [R4, #4] 
    /*000011a4*/ BEQ         VI_ModInit_x12c0
    /*000011a8*/ LDR         R5, [PC, #304]              @ 0x00000000000012e0 
    /*000011ac*/ STR         R6, [R0, #52]               @ 0x34 
    /*000011b0*/ ADD         R2, R5, #32 
    /*000011b4*/ STR         R2, [R0, #60]               @ 0x3c 
    /*000011b8*/ STR         R5, [R0, #56]               @ 0x38 
    /*000011bc*/ BL          0x00000000000011BC          @ osal_registerdevice [R_ARM_CALL: +0x0] 
    /*000011c0*/ SUBS        R6, R0, #0 
    /*000011c4*/ BNE         VI_ModInit_x1238
    /*000011c8*/ MOVW        R0, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x110] 
    /*000011cc*/ MOV         R1, R6 
    /*000011d0*/ MOVT        R0, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x110] 
    /*000011d4*/ BL          0x00000000000011D4          @ osal_create_proc_entry [R_ARM_CALL: +0x0] 
    /*000011d8*/ SUBS        R2, R0, #0 
    /*000011dc*/ BEQ         VI_ModInit_x12d0
    /*000011e0*/ STR         R6, [R2, #64]               @ 0x40 
    /*000011e4*/ MOVW        R3, #0                      @ VI_ProcShow [R_ARM_MOVW_ABS_NC: .text+0x1138] 
    /*000011e8*/ MOV         R0, R4 
    /*000011ec*/ MOVT        R3, #0                      @ VI_ProcShow [R_ARM_MOVT_ABS: .text+0x1138] 
    /*000011f0*/ STR         R3, [R2, #60]               @ 0x3c 
    /*000011f4*/ BL          0x00000000000011F4          @ osal_atomic_init [R_ARM_CALL: +0x0] 
    /*000011f8*/ SUBS        R1, R0, #0 
    /*000011fc*/ BNE         VI_ModInit_x1280
    /*00001200*/ MOV         R0, R4 
    /*00001204*/ BL          0x0000000000001204          @ osal_atomic_set [R_ARM_CALL: +0x0] 
    /*00001208*/ ADD         R0, R5, #112                @ 0x70 
    /*0000120c*/ BL          0x000000000000120C          @ CMPI_RegisterModule [R_ARM_CALL: +0x0] 
    /*00001210*/ SUBS        R5, R0, #0 
    /*00001214*/ BNE         VI_ModInit_x12a8
    /*00001218*/ BL          0x0000000000001218          @ VI_DRV_SetProcPowerSwitch [R_ARM_CALL: .text+0x345c4] 
    /*0000121c*/ MOVW        R1, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x198] 
    /*00001220*/ MOVW        R0, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a4] 
    /*00001224*/ MOVT        R1, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x198] 
    /*00001228*/ MOVT        R0, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a4] 
    /*0000122c*/ BL          0x000000000000122C          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00001230*/ MOV         R0, R5 
    /*00001234*/ POP         {R4, R5, R6, PC} 
    VI_ModInit_x1238:
    /*00001238*/ MOVW        R0, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12c] 
    /*0000123c*/ MOVT        R0, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12c] 
    /*00001240*/ BL          0x0000000000001240          @ osal_printk [R_ARM_CALL: +0x0] 
    VI_ModInit_x1244:
    /*00001244*/ LDR         R0, [R4, #4] 
    /*00001248*/ BL          0x0000000000001248          @ osal_destroydev [R_ARM_CALL: +0x0] 
    VI_ModInit_x124c:
    /*0000124c*/ BL          0x000000000000124C          @ VI_SynchCtxExit [R_ARM_CALL: .text+0x6060] 
    VI_ModInit_x1250:
    /*00001250*/ MVN         R5, #0 
    /*00001254*/ MOVW        R1, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x198] 
    /*00001258*/ MOVW        R0, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c0] 
    /*0000125c*/ MOVT        R1, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x198] 
    /*00001260*/ MOVT        R0, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c0] 
    /*00001264*/ BL          0x0000000000001264          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00001268*/ MOV         R0, R5 
    /*0000126c*/ POP         {R4, R5, R6, PC} 
    VI_ModInit_x1270:
    /*00001270*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe4] 
    /*00001274*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe4] 
    /*00001278*/ BL          0x0000000000001278          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0000127c*/ B           VI_ModInit_x1250
    VI_ModInit_x1280:
    /*00001280*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15c] 
    /*00001284*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15c] 
    /*00001288*/ BL          0x0000000000001288          @ osal_printk [R_ARM_CALL: +0x0] 
    VI_ModInit_x128c:
    /*0000128c*/ MOVW        R0, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x110] 
    /*00001290*/ MOV         R1, #0 
    /*00001294*/ MOVT        R0, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x110] 
    /*00001298*/ BL          0x0000000000001298          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    VI_ModInit_x129c:
    /*0000129c*/ LDR         R0, [R4, #4] 
    /*000012a0*/ BL          0x00000000000012A0          @ osal_deregisterdevice [R_ARM_CALL: +0x0] 
    /*000012a4*/ B           VI_ModInit_x1244
    VI_ModInit_x12a8:
    /*000012a8*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x178] 
    /*000012ac*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x178] 
    /*000012b0*/ BL          0x00000000000012B0          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000012b4*/ MOV         R0, R4 
    /*000012b8*/ BL          0x00000000000012B8          @ osal_atomic_destory [R_ARM_CALL: +0x0] 
    /*000012bc*/ B           VI_ModInit_x128c
    VI_ModInit_x12c0:
    /*000012c0*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x114] 
    /*000012c4*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x114] 
    /*000012c8*/ BL          0x00000000000012C8          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000012cc*/ B           VI_ModInit_x124c
    VI_ModInit_x12d0:
    /*000012d0*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x144] 
    /*000012d4*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x144] 
    /*000012d8*/ BL          0x00000000000012D8          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000012dc*/ B           VI_ModInit_x129c
    /*000012e0*/ ANDEQ       R0, R0, R4 
FUNC_END VI_ModInit


FUNC_BEGIN VI_ModExit
    /*000012e4*/ PUSH        {R4, LR} 
    /*000012e8*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000012ec*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000012f0*/ MOV         R0, #16 
    /*000012f4*/ BL          0x00000000000012F4          @ CMPI_UnRegisterModule [R_ARM_CALL: +0x0] 
    /*000012f8*/ MOV         R0, R4 
    /*000012fc*/ BL          0x00000000000012FC          @ osal_atomic_destory [R_ARM_CALL: +0x0] 
    /*00001300*/ MOV         R1, #0 
    /*00001304*/ MOVW        R0, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x110] 
    /*00001308*/ MOVT        R0, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x110] 
    /*0000130c*/ BL          0x000000000000130C          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    /*00001310*/ LDR         R0, [R4, #4] 
    /*00001314*/ BL          0x0000000000001314          @ osal_deregisterdevice [R_ARM_CALL: +0x0] 
    /*00001318*/ LDR         R0, [R4, #4] 
    /*0000131c*/ BL          0x000000000000131C          @ osal_destroydev [R_ARM_CALL: +0x0] 
    /*00001320*/ BL          0x0000000000001320          @ VI_SynchCtxExit [R_ARM_CALL: .text+0x6060] 
    /*00001324*/ MOVW        R1, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x198] 
    /*00001328*/ MOVW        R0, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e0] 
    /*0000132c*/ MOVT        R1, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x198] 
    /*00001330*/ MOVT        R0, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e0] 
    /*00001334*/ POP         {R4, LR} 
    VI_ModExit_x1338:
    /*00001338*/ B           VI_ModExit_x1338            @ osal_printk [R_ARM_JUMP24: +0x0] 
FUNC_END VI_ModExit


FUNC_BEGIN VI_CheckNullPtr.part.0
    /*0000133c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00001340*/ SUB         SP, SP, #12 
    /*00001344*/ MOV         R2, #75                     @ 0x4b 
    /*00001348*/ MOV         R1, #16 
    /*0000134c*/ STR         R2, [SP] 
    /*00001350*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x18] 
    /*00001354*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fc] 
    /*00001358*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x18] 
    /*0000135c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fc] 
    /*00001360*/ MOV         R0, #3 
    /*00001364*/ BL          0x0000000000001364          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001368*/ MOVW        R0, #32774                  @ 0x8006 
    /*0000136c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00001370*/ ADD         SP, SP, #12 
    /*00001374*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_CheckNullPtr.part.0


FUNC_BEGIN VI_NotifyBind
    /*00001378*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000137c*/ SUBS        R7, R2, #0 
    /*00001380*/ SUB         SP, SP, #20 
    /*00001384*/ MOV         R5, R0 
    /*00001388*/ MOV         R6, R1 
    /*0000138c*/ BEQ         VI_NotifyBind_x1438
    VI_NotifyBind_x1390:
    /*00001390*/ MOV         R0, R5 
    /*00001394*/ BL          0x0000000000001394          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00001398*/ SUBS        R4, R0, #0 
    /*0000139c*/ BEQ         VI_NotifyBind_x13ac
    VI_NotifyBind_x13a0:
    /*000013a0*/ MOV         R0, R4 
    /*000013a4*/ ADD         SP, SP, #20 
    /*000013a8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_NotifyBind_x13ac:
    /*000013ac*/ MOV         R0, R6 
    /*000013b0*/ BL          0x00000000000013B0          @ VI_CheckChnId [R_ARM_CALL: .text+0xa190] 
    /*000013b4*/ SUBS        R4, R0, #0 
    /*000013b8*/ BNE         VI_NotifyBind_x13a0
    /*000013bc*/ MOV         SL, #176                    @ 0xb0 
    /*000013c0*/ MOVW        R8, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000013c4*/ MUL         SL, SL, R5 
    /*000013c8*/ MOVT        R8, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000013cc*/ ADD         R9, SL, #100                @ 0x64 
    /*000013d0*/ ADD         R9, R8, R9 
    /*000013d4*/ MOV         R0, R9 
    /*000013d8*/ BL          0x00000000000013D8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000013dc*/ CMP         R0, #0 
    /*000013e0*/ BNE         VI_NotifyBind_x1448
    /*000013e4*/ ADD         R3, R8, R5, LSL #2 
    /*000013e8*/ LDR         FP, [R3, #704]              @ 0x2c0 
    /*000013ec*/ CMP         FP, #0 
    /*000013f0*/ BEQ         VI_NotifyBind_x1454
    /*000013f4*/ ADD         SL, SL, #140                @ 0x8c 
    /*000013f8*/ ADD         R1, SP, #12 
    /*000013fc*/ ADD         R8, R8, SL 
    /*00001400*/ MOV         R0, R8 
    /*00001404*/ BL          0x0000000000001404          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00001408*/ MOV         R2, #772                    @ 0x304 
    /*0000140c*/ MLA         R0, R2, R6, FP 
    /*00001410*/ MOV         R1, R7 
    /*00001414*/ ADD         R0, R0, #7424               @ 0x1d00 
    /*00001418*/ ADD         R0, R0, #52                 @ 0x34 
    /*0000141c*/ BL          0x000000000000141C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00001420*/ MOV         R0, R8 
    /*00001424*/ ADD         R1, SP, #12 
    /*00001428*/ BL          0x0000000000001428          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000142c*/ MOV         R0, R9 
    /*00001430*/ BL          0x0000000000001430          @ osal_up [R_ARM_CALL: +0x0] 
    /*00001434*/ B           VI_NotifyBind_x13a0
    VI_NotifyBind_x1438:
    /*00001438*/ BL          0x000000000000133C 
    /*0000143c*/ SUBS        R4, R0, #0 
    /*00001440*/ BNE         VI_NotifyBind_x13a0
    /*00001444*/ B           VI_NotifyBind_x1390
    VI_NotifyBind_x1448:
    /*00001448*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000144c*/ MOVT        R4, #65535                  @ 0xffff 
    /*00001450*/ B           VI_NotifyBind_x13a0
    VI_NotifyBind_x1454:
    /*00001454*/ MOV         R0, R9 
    /*00001458*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000145c*/ BL          0x000000000000145C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00001460*/ MOVW        R3, #3694                   @ 0xe6e 
    /*00001464*/ STR         R5, [SP, #4] 
    /*00001468*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x228] 
    /*0000146c*/ STR         R3, [SP] 
    /*00001470*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x228] 
    /*00001474*/ LDR         R3, [PC, #16]               @ 0x000000000000148c 
    /*00001478*/ MOV         R1, #16 
    /*0000147c*/ MOV         R0, #3 
    /*00001480*/ MOVT        R4, #40976                  @ 0xa010 
    /*00001484*/ BL          0x0000000000001484          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001488*/ B           VI_NotifyBind_x13a0
    /*0000148c*/ ANDEQ       R0, R0, R8, LSR #32 
FUNC_END VI_NotifyBind


FUNC_BEGIN VI_OfflinePrepareBnrTask.part.3
    /*00001490*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00001494*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00001498*/ ADD         R3, R3, R0, LSL #2 
    /*0000149c*/ MOV         R2, #0 
    /*000014a0*/ PUSH        {R4, R5, R6, LR} 
    /*000014a4*/ MOV         R5, R0 
    /*000014a8*/ LDR         R6, [R3, #704]              @ 0x2c0 
    /*000014ac*/ SUB         SP, SP, #40                 @ 0x28 
    /*000014b0*/ ADD         R4, R6, #36864              @ 0x9000 
    /*000014b4*/ LDR         R1, [R4, #528]              @ 0x210 
    /*000014b8*/ STR         R2, [R4, #1016]             @ 0x3f8 
    /*000014bc*/ CMP         R1, R2 
    /*000014c0*/ STR         R2, [R4, #1020]             @ 0x3fc 
    /*000014c4*/ STR         R2, [R4, #1024]             @ 0x400 
    /*000014c8*/ BEQ         VI_OfflinePrepareBnrTask.part.3_x14dc
    /*000014cc*/ LDR         R3, [R4, #388]              @ 0x184 
    /*000014d0*/ CMP         R3, #2 
    /*000014d4*/ MOVNE       R1, R2 
    /*000014d8*/ BEQ         VI_OfflinePrepareBnrTask.part.3_x1508
    VI_OfflinePrepareBnrTask.part.3_x14dc:
    /*000014dc*/ MOV         R0, R5 
    /*000014e0*/ BL          0x00000000000014E0          @ VI_DRV_SetBnrEnable [R_ARM_CALL: .text+0x3386c] 
    /*000014e4*/ LDR         R3, [R4, #1016]             @ 0x3f8 
    /*000014e8*/ CMP         R3, #0 
    /*000014ec*/ BEQ         VI_OfflinePrepareBnrTask.part.3_x1500
    /*000014f0*/ ADD         R1, R6, #37376              @ 0x9200 
    /*000014f4*/ MOV         R0, R5 
    /*000014f8*/ ADD         R1, R1, #72                 @ 0x48 
    /*000014fc*/ BL          0x00000000000014FC          @ VI_DRV_PrepareBnrRawPicInfo [R_ARM_CALL: .text+0x33874] 
    VI_OfflinePrepareBnrTask.part.3_x1500:
    /*00001500*/ ADD         SP, SP, #40                 @ 0x28 
    /*00001504*/ POP         {R4, R5, R6, PC} 
    VI_OfflinePrepareBnrTask.part.3_x1508:
    /*00001508*/ MOV         R1, SP 
    /*0000150c*/ BL          0x000000000000150C          @ VI_DRV_GetBnrRawVbInfo [R_ARM_CALL: .text+0x33864] 
    /*00001510*/ ADD         R1, R6, #37376              @ 0x9200 
    /*00001514*/ ADD         R1, R1, #72                 @ 0x48 
    /*00001518*/ MOV         R0, SP 
    /*0000151c*/ BL          0x000000000000151C          @ VI_DRV_GetFrmVbBlk [R_ARM_CALL: .text+0x2c8f4] 
    /*00001520*/ CMP         R0, #0 
    /*00001524*/ MOVEQ       R1, #1 
    /*00001528*/ LDRNE       R1, [R4, #1016]             @ 0x3f8 
    /*0000152c*/ STREQ       R1, [R4, #1016]             @ 0x3f8 
    /*00001530*/ B           VI_OfflinePrepareBnrTask.part.3_x14dc
FUNC_END VI_OfflinePrepareBnrTask.part.3


FUNC_BEGIN VI_CheckNullPtr
    /*00001534*/ CMP         R0, #0 
    /*00001538*/ BEQ         VI_CheckNullPtr_x1544
    /*0000153c*/ MOV         R0, #0 
    /*00001540*/ BX          LR 
    VI_CheckNullPtr_x1544:
    /*00001544*/ B           0x000000000000133C 
FUNC_END VI_CheckNullPtr


FUNC_BEGIN VI_CheckChnIdForIoctl
    /*00001548*/ CMP         R0, #9 
    /*0000154c*/ BHI         VI_CheckChnIdForIoctl_x1558
    /*00001550*/ MOV         R0, #0 
    /*00001554*/ BX          LR 
    VI_CheckChnIdForIoctl_x1558:
    /*00001558*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000155c*/ SUB         SP, SP, #12 
    /*00001560*/ MOV         R3, #87                     @ 0x57 
    /*00001564*/ MOV         R1, #16 
    /*00001568*/ STR         R0, [SP, #4] 
    /*0000156c*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x258] 
    /*00001570*/ STR         R3, [SP] 
    /*00001574*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x258] 
    /*00001578*/ LDR         R3, [PC, #20]               @ 0x0000000000001594 
    /*0000157c*/ MOV         R0, #3 
    /*00001580*/ BL          0x0000000000001580          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001584*/ MOVW        R0, #32770                  @ 0x8002 
    /*00001588*/ MOVT        R0, #40976                  @ 0xa010 
    /*0000158c*/ ADD         SP, SP, #12 
    /*00001590*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00001594*/ ANDEQ       R0, R0, R8, LSR R0 
FUNC_END VI_CheckChnIdForIoctl


FUNC_BEGIN VI_IsWaitCapFramStop
    /*00001598*/ LDR         R3, [R0] 
    /*0000159c*/ CMP         R3, #2 
    /*000015a0*/ MOVEQ       R3, #1 
    /*000015a4*/ STREQ       R3, [R0] 
    /*000015a8*/ MOVEQ       R0, R3 
    /*000015ac*/ SUBNE       R0, R3, #1 
    /*000015b0*/ CLZNE       R0, R0 
    /*000015b4*/ LSRNE       R0, R0, #5 
    /*000015b8*/ BX          LR 
FUNC_END VI_IsWaitCapFramStop


FUNC_BEGIN VI_GetBind
    /*000015bc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000015c0*/ MOVW        R5, #0                      @ g_stViModuleLock [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*000015c4*/ MOVT        R5, #0                      @ g_stViModuleLock [R_ARM_MOVT_ABS: .bss+0x8] 
    /*000015c8*/ SUB         SP, SP, #12 
    /*000015cc*/ MOV         R7, R0 
    /*000015d0*/ MOV         R6, R1 
    /*000015d4*/ MOV         R0, R5 
    /*000015d8*/ ADD         R1, SP, #4 
    /*000015dc*/ MOV         R4, R2 
    /*000015e0*/ BL          0x00000000000015E0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000015e4*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000015e8*/ MOV         R3, #772                    @ 0x304 
    /*000015ec*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000015f0*/ MOVW        R2, #7476                   @ 0x1d34 
    /*000015f4*/ ADD         R1, R1, R7, LSL #2 
    /*000015f8*/ MOV         R0, R4 
    /*000015fc*/ MUL         R3, R3, R6 
    /*00001600*/ LDR         IP, [R1, #704]              @ 0x2c0 
    /*00001604*/ MOV         LR, #12 
    /*00001608*/ ADD         IP, IP, R3 
    /*0000160c*/ ADD         R3, R3, #7424               @ 0x1d00 
    /*00001610*/ ADD         R3, R3, #56                 @ 0x38 
    /*00001614*/ LDR         R2, [IP, R2] 
    /*00001618*/ STR         R2, [R0], #4 
    /*0000161c*/ LDR         R1, [R1, #704]              @ 0x2c0 
    /*00001620*/ MUL         R2, LR, R2 
    /*00001624*/ ADD         R1, R1, R3 
    /*00001628*/ BL          0x0000000000001628          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000162c*/ MOV         R0, R5 
    /*00001630*/ ADD         R1, SP, #4 
    /*00001634*/ BL          0x0000000000001634          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001638*/ MOV         R0, #0 
    /*0000163c*/ ADD         SP, SP, #12 
    /*00001640*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VI_GetBind


FUNC_BEGIN VI_CheckBindInfo
    /*00001644*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00001648*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0000164c*/ ADD         R3, R3, R0, LSL #2 
    /*00001650*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00001654*/ MOV         R8, R0 
    /*00001658*/ LDR         R7, [R3, #704]              @ 0x2c0 
    /*0000165c*/ SUB         SP, SP, #8 
    /*00001660*/ MOV         R4, #0 
    /*00001664*/ ADD         R6, R7, #38912              @ 0x9800 
    /*00001668*/ ADD         R5, R7, #528                @ 0x210 
    /*0000166c*/ ADD         R6, R6, #176                @ 0xb0 
    /*00001670*/ B           VI_CheckBindInfo_x1684
    VI_CheckBindInfo_x1674:
    /*00001674*/ ADD         R4, R4, #1 
    /*00001678*/ ADD         R5, R5, #772                @ 0x304 
    /*0000167c*/ CMP         R4, #9 
    /*00001680*/ BEQ         VI_CheckBindInfo_x16b0
    VI_CheckBindInfo_x1684:
    /*00001684*/ LDR         R3, [R6, #4]! 
    /*00001688*/ CMP         R3, #0 
    /*0000168c*/ BEQ         VI_CheckBindInfo_x1674
    /*00001690*/ MOV         R2, R5 
    /*00001694*/ MOV         R1, R4 
    /*00001698*/ MOV         R0, R8 
    /*0000169c*/ ADD         R4, R4, #1 
    /*000016a0*/ BL          0x00000000000016A0          @ VI_GetBind [R_ARM_CALL: .text+0x15bc] 
    /*000016a4*/ CMP         R4, #9 
    /*000016a8*/ ADD         R5, R5, #772                @ 0x304 
    /*000016ac*/ BNE         VI_CheckBindInfo_x1684
    VI_CheckBindInfo_x16b0:
    /*000016b0*/ ADD         R3, R7, #36864              @ 0x9000 
    /*000016b4*/ LDR         R3, [R3, #2228]             @ 0x8b4 
    /*000016b8*/ CMP         R3, #1 
    /*000016bc*/ BEQ         VI_CheckBindInfo_x16f0
    VI_CheckBindInfo_x16c0:
    /*000016c0*/ STR         R8, [SP, #4] 
    /*000016c4*/ MOV         R3, #154                    @ 0x9a 
    /*000016c8*/ MOV         R1, #16 
    /*000016cc*/ STR         R3, [SP] 
    /*000016d0*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x290] 
    /*000016d4*/ LDR         R3, [PC, #44]               @ 0x0000000000001708 
    /*000016d8*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x290] 
    /*000016dc*/ MOV         R0, #6 
    /*000016e0*/ BL          0x00000000000016E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000016e4*/ MOV         R0, #0 
    /*000016e8*/ ADD         SP, SP, #8 
    /*000016ec*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_CheckBindInfo_x16f0:
    /*000016f0*/ LDR         R3, [R7, #528]              @ 0x210 
    /*000016f4*/ CMP         R3, #0 
    /*000016f8*/ BEQ         VI_CheckBindInfo_x16c0
    /*000016fc*/ MOV         R0, #0 
    /*00001700*/ ADD         SP, SP, #8 
    /*00001704*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*00001708*/ ANDEQ       R0, R0, R0, ASR R0 
FUNC_END VI_CheckBindInfo


FUNC_BEGIN VI_ChnPrepareTask
    /*0000170c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00001710*/ MOV         R2, #712                    @ 0x2c8 
    /*00001714*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00001718*/ MOVW        IP, #17020                  @ 0x427c 
    /*0000171c*/ MUL         R2, R2, R1 
    /*00001720*/ ADD         R3, R3, R0, LSL #2 
    /*00001724*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00001728*/ MOV         R4, R1 
    /*0000172c*/ LDR         R5, [R3, #704]              @ 0x2c0 
    /*00001730*/ MOV         R1, #0 
    /*00001734*/ SUB         SP, SP, #104                @ 0x68 
    /*00001738*/ MOV         R7, R0 
    /*0000173c*/ ADD         R3, R5, R2 
    /*00001740*/ ADD         R9, R5, R4, LSL #2 
    /*00001744*/ LDR         R8, [R5, #508]              @ 0x1fc 
    /*00001748*/ ADD         R9, R9, #36864              @ 0x9000 
    /*0000174c*/ STR         R1, [R3, IP] 
    /*00001750*/ MOVW        IP, #17024                  @ 0x4280 
    /*00001754*/ STR         R1, [R3, IP] 
    /*00001758*/ MOVW        IP, #17016                  @ 0x4278 
    /*0000175c*/ STR         R1, [R3, IP] 
    /*00001760*/ MOVW        IP, #17028                  @ 0x4284 
    /*00001764*/ STR         R1, [R3, IP] 
    /*00001768*/ MOVW        IP, #17012                  @ 0x4274 
    /*0000176c*/ STR         R1, [R3, IP] 
    /*00001770*/ ADD         R3, R4, #3600               @ 0xe10 
    /*00001774*/ ADD         R3, R3, #14 
    /*00001778*/ ADD         R2, R2, #16320              @ 0x3fc0 
    /*0000177c*/ ADD         R6, R5, R2 
    /*00001780*/ MOV         R2, #1 
    /*00001784*/ ADD         R3, R5, R3, LSL #2 
    /*00001788*/ STR         R2, [R3, #4] 
    /*0000178c*/ LDR         R3, [R9, #2228]             @ 0x8b4 
    /*00001790*/ CMP         R3, #0 
    /*00001794*/ BNE         VI_ChnPrepareTask_x1800
    /*00001798*/ MOV         R3, #214                    @ 0xd6 
    /*0000179c*/ STR         R0, [SP, #4] 
    /*000017a0*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2cc] 
    /*000017a4*/ STR         R3, [SP] 
    /*000017a8*/ STR         R4, [SP, #8] 
    /*000017ac*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2cc] 
    /*000017b0*/ LDR         R3, [PC, #492]              @ 0x00000000000019a4 
    /*000017b4*/ MOV         R1, #16 
    /*000017b8*/ MOV         R0, #6 
    /*000017bc*/ BL          0x00000000000017BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_ChnPrepareTask_x17c0:
    /*000017c0*/ MOV         R3, #712                    @ 0x2c8 
    /*000017c4*/ MOVW        R8, #17016                  @ 0x4278 
    /*000017c8*/ MLA         R5, R3, R4, R5 
    /*000017cc*/ MOV         R1, R4 
    /*000017d0*/ MOV         R0, R7 
    /*000017d4*/ LDR         R2, [R5, R8] 
    /*000017d8*/ BL          0x00000000000017D8          @ VI_DRV_MarkChnEnableFlag [R_ARM_CALL: .text+0x2cd3c] 
    /*000017dc*/ LDR         R3, [R5, R8] 
    /*000017e0*/ CMP         R3, #0 
    /*000017e4*/ BEQ         VI_ChnPrepareTask_x17f8
    /*000017e8*/ MOV         R2, R6 
    /*000017ec*/ MOV         R1, R4 
    /*000017f0*/ MOV         R0, R7 
    /*000017f4*/ BL          0x00000000000017F4          @ VI_DRV_PrepareChnDestPicInfo [R_ARM_CALL: .text+0x2d984] 
    VI_ChnPrepareTask_x17f8:
    /*000017f8*/ ADD         SP, SP, #104                @ 0x68 
    /*000017fc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_ChnPrepareTask_x1800:
    /*00001800*/ ADD         R2, SP, #60                 @ 0x3c 
    /*00001804*/ MOV         R1, R4 
    /*00001808*/ BL          0x0000000000001808          @ VI_DRV_GetWorkingChnAttr [R_ARM_CALL: .text+0x2991c] 
    /*0000180c*/ ADD         R1, R4, #118                @ 0x76 
    /*00001810*/ ADD         R0, SP, #96                 @ 0x60 
    /*00001814*/ ADD         R1, R5, R1, LSL #2 
    /*00001818*/ BL          0x0000000000001818          @ VI_DRV_ChnFrmRateCtl [R_ARM_CALL: .text+0x2b78c] 
    /*0000181c*/ CMP         R0, #0 
    /*00001820*/ BEQ         VI_ChnPrepareTask_x1858
    /*00001824*/ MOV         R2, R8 
    /*00001828*/ MOV         R1, R4 
    /*0000182c*/ MOV         R0, R7 
    /*00001830*/ BL          0x0000000000001830          @ VI_DRV_ChnCheckOfflineCapacity [R_ARM_CALL: .text+0x2b848] 
    /*00001834*/ SUBS        R8, R0, #0 
    /*00001838*/ BEQ         VI_ChnPrepareTask_x189c
    /*0000183c*/ MOV         R3, #56                     @ 0x38 
    /*00001840*/ MOVW        R1, #36660                  @ 0x8f34 
    /*00001844*/ MLA         R3, R3, R4, R5 
    /*00001848*/ LDR         R2, [R3, R1] 
    /*0000184c*/ ADD         R2, R2, #1 
    /*00001850*/ STR         R2, [R3, R1] 
    /*00001854*/ B           VI_ChnPrepareTask_x17c0
    VI_ChnPrepareTask_x1858:
    /*00001858*/ MOV         R0, #56                     @ 0x38 
    /*0000185c*/ MOVW        LR, #36664                  @ 0x8f38 
    /*00001860*/ MLA         R0, R0, R4, R5 
    /*00001864*/ MOV         R8, #224                    @ 0xe0 
    /*00001868*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30c] 
    /*0000186c*/ LDR         R3, [PC, #304]              @ 0x00000000000019a4 
    /*00001870*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30c] 
    /*00001874*/ MOV         R1, #16 
    /*00001878*/ LDR         IP, [R0, LR] 
    /*0000187c*/ ADD         IP, IP, #1 
    /*00001880*/ STR         IP, [R0, LR] 
    /*00001884*/ STR         R4, [SP, #8] 
    /*00001888*/ MOV         R0, #6 
    /*0000188c*/ STR         R7, [SP, #4] 
    /*00001890*/ STR         R8, [SP] 
    /*00001894*/ BL          0x0000000000001894          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001898*/ B           VI_ChnPrepareTask_x17c0
    VI_ChnPrepareTask_x189c:
    /*0000189c*/ LDR         R3, [SP, #68]               @ 0x44 
    /*000018a0*/ MOV         R1, R4 
    /*000018a4*/ LDR         IP, [R9, #2264]             @ 0x8d8 
    /*000018a8*/ MOV         R0, R7 
    /*000018ac*/ LDR         R2, [SP, #76]               @ 0x4c 
    /*000018b0*/ STR         R3, [SP, #36]               @ 0x24 
    /*000018b4*/ LDR         R3, [SP, #72]               @ 0x48 
    /*000018b8*/ STR         IP, [SP, #56]               @ 0x38 
    /*000018bc*/ STR         R2, [SP, #44]               @ 0x2c 
    /*000018c0*/ STR         R3, [SP, #48]               @ 0x30 
    /*000018c4*/ STR         R7, [SP, #20] 
    /*000018c8*/ STR         R4, [SP, #24] 
    /*000018cc*/ STR         R8, [SP, #52]               @ 0x34 
    /*000018d0*/ BL          0x00000000000018D0          @ VI_DRV_NeedCallGDCFunction [R_ARM_CALL: .text+0x28d64] 
    /*000018d4*/ ADD         R2, SP, #28 
    /*000018d8*/ MOV         R1, R4 
    /*000018dc*/ CMP         R0, #1 
    /*000018e0*/ MOV         R0, R7 
    /*000018e4*/ STREQ       R8, [SP, #40]               @ 0x28 
    /*000018e8*/ LDRNE       R3, [SP, #80]               @ 0x50 
    /*000018ec*/ STRNE       R3, [SP, #40]               @ 0x28 
    /*000018f0*/ BL          0x00000000000018F0          @ VI_DRV_GetChnOutPutSize [R_ARM_CALL: .text+0x2b724] 
    /*000018f4*/ MOV         R1, R6 
    /*000018f8*/ ADD         R0, SP, #20 
    /*000018fc*/ BL          0x00000000000018FC          @ VI_DRV_GetFrmVbBlk [R_ARM_CALL: .text+0x2c8f4] 
    /*00001900*/ SUBS        R9, R0, #0 
    /*00001904*/ BEQ         VI_ChnPrepareTask_x1934
    /*00001908*/ MOV         R3, #56                     @ 0x38 
    /*0000190c*/ MOVW        IP, #36660                  @ 0x8f34 
    /*00001910*/ MLA         R3, R3, R4, R5 
    VI_ChnPrepareTask_x1914:
    /*00001914*/ MOVW        R0, #36668                  @ 0x8f3c 
    /*00001918*/ LDR         R1, [R3, IP] 
    /*0000191c*/ LDR         R2, [R3, R0] 
    /*00001920*/ ADD         R1, R1, #1 
    /*00001924*/ STR         R1, [R3, IP] 
    /*00001928*/ ADD         R2, R2, #1 
    /*0000192c*/ STR         R2, [R3, R0] 
    /*00001930*/ B           VI_ChnPrepareTask_x17c0
    VI_ChnPrepareTask_x1934:
    /*00001934*/ MOV         R8, #712                    @ 0x2c8 
    /*00001938*/ MOVW        SL, #17016                  @ 0x4278 
    /*0000193c*/ MLA         R8, R8, R4, R5 
    /*00001940*/ MOV         R3, #1 
    /*00001944*/ MOV         R2, R6 
    /*00001948*/ MOV         R1, R4 
    /*0000194c*/ MOV         R0, R7 
    /*00001950*/ STR         R3, [R8, SL] 
    /*00001954*/ BL          0x0000000000001954          @ VI_COMM_PrepareDISVBAndInfo [R_ARM_CALL: .text+0x24f2c] 
    /*00001958*/ CMP         R0, #0 
    /*0000195c*/ BEQ         VI_ChnPrepareTask_x17c0
    /*00001960*/ MOVW        R3, #306                    @ 0x132 
    /*00001964*/ MOV         R1, #16 
    /*00001968*/ STR         R3, [SP] 
    /*0000196c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x368] 
    /*00001970*/ LDR         R3, [PC, #44]               @ 0x00000000000019a4 
    /*00001974*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x368] 
    /*00001978*/ STR         R7, [SP, #4] 
    /*0000197c*/ MOV         R0, #3 
    /*00001980*/ BL          0x0000000000001980          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001984*/ STR         R9, [R8, SL] 
    /*00001988*/ MOV         R1, R9 
    /*0000198c*/ MOV         R0, R6 
    /*00001990*/ BL          0x0000000000001990          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00001994*/ MOV         R3, #56                     @ 0x38 
    /*00001998*/ MLA         R3, R3, R4, R5 
    /*0000199c*/ MOVW        IP, #36660                  @ 0x8f34 
    /*000019a0*/ B           VI_ChnPrepareTask_x1914
    /*000019a4*/ ANDEQ       R0, R0, R4, RRX 
FUNC_END VI_ChnPrepareTask


FUNC_BEGIN VI_OfflinePrepareBnrTask
    /*000019a8*/ PUSH        {R4, LR} 
    /*000019ac*/ MOV         R4, R0 
    /*000019b0*/ BL          0x00000000000019B0          @ VI_DRV_IsBnrSupport [R_ARM_CALL: .text+0x2770c] 
    /*000019b4*/ CMP         R0, #1 
    /*000019b8*/ POPNE       {R4, PC} 
    /*000019bc*/ MOV         R0, R4 
    /*000019c0*/ POP         {R4, LR} 
    /*000019c4*/ B           0x0000000000001490 
FUNC_END VI_OfflinePrepareBnrTask


FUNC_BEGIN VI_PrepareOfflineWdrPicInfo
    /*000019c8*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000019cc*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000019d0*/ ADD         R3, R3, R0, LSL #2 
    /*000019d4*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000019d8*/ MOV         R6, R0 
    /*000019dc*/ LDR         R7, [R3, #704]              @ 0x2c0 
    /*000019e0*/ BL          0x00000000000019E0          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*000019e4*/ MOV         R4, R0 
    /*000019e8*/ BL          0x00000000000019E8          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*000019ec*/ CMP         R0, #1 
    /*000019f0*/ BEQ         VI_PrepareOfflineWdrPicInfo_x19fc
    VI_PrepareOfflineWdrPicInfo_x19f4:
    /*000019f4*/ MOV         R0, #0 
    /*000019f8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_PrepareOfflineWdrPicInfo_x19fc:
    /*000019fc*/ MOV         R0, R4 
    /*00001a00*/ BL          0x0000000000001A00          @ VI_DRV_GetWDRVcNum [R_ARM_CALL: .text+0x37b60] 
    /*00001a04*/ SUBS        R8, R0, #0 
    /*00001a08*/ BEQ         VI_PrepareOfflineWdrPicInfo_x19f4
    /*00001a0c*/ MOV         R5, #448                    @ 0x1c0 
    /*00001a10*/ MOV         R4, #0 
    VI_PrepareOfflineWdrPicInfo_x1a14:
    /*00001a14*/ LDR         R2, [R7, #516]              @ 0x204 
    /*00001a18*/ MOV         R1, R4 
    /*00001a1c*/ MOV         R0, R6 
    /*00001a20*/ ADD         R4, R4, #1 
    /*00001a24*/ ADD         R2, R2, R5 
    /*00001a28*/ ADD         R5, R5, #448                @ 0x1c0 
    /*00001a2c*/ BL          0x0000000000001A2C          @ VI_DRV_PrepareWdrPicInfo [R_ARM_CALL: .text+0x2d94c] 
    /*00001a30*/ CMP         R8, R4 
    /*00001a34*/ BNE         VI_PrepareOfflineWdrPicInfo_x1a14
    /*00001a38*/ MOV         R0, #0 
    /*00001a3c*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_PrepareOfflineWdrPicInfo


FUNC_BEGIN VI_PrepareTask
    /*00001a40*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00001a44*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00001a48*/ ADD         R3, R3, R0, LSL #2 
    /*00001a4c*/ PUSH        {R4, R5, R6, LR} 
    /*00001a50*/ MOV         R4, R0 
    /*00001a54*/ LDR         R3, [R3, #704]              @ 0x2c0 
    /*00001a58*/ MOV         R5, R1 
    /*00001a5c*/ LDR         R1, [R3, #508]              @ 0x1fc 
    /*00001a60*/ BL          0x0000000000001A60          @ VI_DRV_PrepareCurPicInfo [R_ARM_CALL: .text+0x2d91c] 
    /*00001a64*/ MOV         R0, R4 
    /*00001a68*/ BL          0x0000000000001A68          @ VI_PrepareOfflineWdrPicInfo [R_ARM_CALL: .text+0x19c8] 
    /*00001a6c*/ MOV         R1, R5 
    /*00001a70*/ MOV         R0, R4 
    /*00001a74*/ BL          0x0000000000001A74          @ VI_DRV_CalcCurPicSize [R_ARM_CALL: .text+0x2b244] 
    /*00001a78*/ MOV         R0, R4 
    /*00001a7c*/ BL          0x0000000000001A7C          @ VI_DRV_PrepareAllPhyChnCrop [R_ARM_CALL: .text+0x2b6e4] 
    /*00001a80*/ BL          0x0000000000001A80          @ VI_DRV_IsBnrSupport [R_ARM_CALL: .text+0x2770c] 
    /*00001a84*/ CMP         R0, #1 
    /*00001a88*/ BEQ         VI_PrepareTask_x1ac4
    VI_PrepareTask_x1a8c:
    /*00001a8c*/ MOV         R1, #0 
    /*00001a90*/ MOV         R0, R4 
    /*00001a94*/ BL          0x0000000000001A94          @ VI_ChnPrepareTask [R_ARM_CALL: .text+0x170c] 
    /*00001a98*/ MOV         R0, R4 
    /*00001a9c*/ BL          0x0000000000001A9C          @ VI_DRV_NeedSplit [R_ARM_CALL: .text+0x2f638] 
    /*00001aa0*/ CMP         R0, #0 
    /*00001aa4*/ BNE         VI_PrepareTask_x1ab0
    /*00001aa8*/ MOV         R0, #0 
    /*00001aac*/ POP         {R4, R5, R6, PC} 
    VI_PrepareTask_x1ab0:
    /*00001ab0*/ MOV         R0, R4 
    /*00001ab4*/ MOV         R1, #0 
    /*00001ab8*/ BL          0x0000000000001AB8          @ VI_DRV_PrepareOnlineScaleAttr [R_ARM_CALL: .text+0x2de8c] 
    /*00001abc*/ MOV         R0, #0 
    /*00001ac0*/ POP         {R4, R5, R6, PC} 
    VI_PrepareTask_x1ac4:
    /*00001ac4*/ MOV         R0, R4 
    /*00001ac8*/ BL          0x0000000000001490 
    /*00001acc*/ B           VI_PrepareTask_x1a8c
FUNC_END VI_PrepareTask


FUNC_BEGIN VI_bLinearOffline
    /*00001ad0*/ PUSH        {R4, R5, R6, LR} 
    /*00001ad4*/ MOV         R5, R1 
    /*00001ad8*/ BL          0x0000000000001AD8          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00001adc*/ MOV         R4, R0 
    /*00001ae0*/ MOV         R0, R5 
    /*00001ae4*/ BL          0x0000000000001AE4          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*00001ae8*/ CMP         R4, #1 
    /*00001aec*/ CMPLS       R0, #0 
    /*00001af0*/ MOVEQ       R0, #1 
    /*00001af4*/ MOVNE       R0, #0 
    /*00001af8*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_bLinearOffline


FUNC_BEGIN VI_bWDROffline
    /*00001afc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00001b00*/ MOV         R6, R1 
    /*00001b04*/ MOV         R5, R0 
    /*00001b08*/ BL          0x0000000000001B08          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*00001b0c*/ MOV         R7, R0 
    /*00001b10*/ MOV         R0, R5 
    /*00001b14*/ BL          0x0000000000001B14          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00001b18*/ MOV         R4, R0 
    /*00001b1c*/ MOV         R0, R6 
    /*00001b20*/ BL          0x0000000000001B20          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*00001b24*/ CMP         R0, #1 
    /*00001b28*/ BEQ         VI_bWDROffline_x1b34
    /*00001b2c*/ MOV         R0, #0 
    /*00001b30*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_bWDROffline_x1b34:
    /*00001b34*/ CMP         R4, #1 
    /*00001b38*/ CMPLS       R5, R7 
    /*00001b3c*/ MOVEQ       R0, #1 
    /*00001b40*/ MOVNE       R0, #0 
    /*00001b44*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_bWDROffline


FUNC_BEGIN VI_LostRepeatFrame
    /*00001b48*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00001b4c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00001b50*/ ADD         R3, R3, R0, LSL #2 
    /*00001b54*/ PUSH        {R4, R5, R6, LR} 
    /*00001b58*/ MOV         R4, R0 
    /*00001b5c*/ LDR         R5, [R3, #704]              @ 0x2c0 
    /*00001b60*/ BL          0x0000000000001B60          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00001b64*/ ADD         R3, R5, #36864              @ 0x9000 
    /*00001b68*/ LDR         R3, [R3, #2784]             @ 0xae0 
    /*00001b6c*/ CMP         R3, #0 
    /*00001b70*/ BNE         VI_LostRepeatFrame_x1b7c
    VI_LostRepeatFrame_x1b74:
    /*00001b74*/ MOV         R0, #0 
    /*00001b78*/ POP         {R4, R5, R6, PC} 
    VI_LostRepeatFrame_x1b7c:
    /*00001b7c*/ MOV         R1, R0 
    /*00001b80*/ MOV         R6, R0 
    /*00001b84*/ MOV         R0, R4 
    /*00001b88*/ BL          0x0000000000001B88          @ VI_bWDROffline [R_ARM_CALL: .text+0x1afc] 
    /*00001b8c*/ CMP         R0, #1 
    /*00001b90*/ BEQ         VI_LostRepeatFrame_x1bbc
    /*00001b94*/ MOV         R1, R6 
    /*00001b98*/ MOV         R0, R4 
    /*00001b9c*/ BL          0x0000000000001B9C          @ VI_bLinearOffline [R_ARM_CALL: .text+0x1ad0] 
    /*00001ba0*/ CMP         R0, #1 
    /*00001ba4*/ BNE         VI_LostRepeatFrame_x1b74
    /*00001ba8*/ LDR         R3, [R5, #512]              @ 0x200 
    /*00001bac*/ CMP         R3, #0 
    /*00001bb0*/ BEQ         VI_LostRepeatFrame_x1b74
    /*00001bb4*/ LDR         R0, [R3, #444]              @ 0x1bc 
    /*00001bb8*/ POP         {R4, R5, R6, PC} 
    VI_LostRepeatFrame_x1bbc:
    /*00001bbc*/ LDR         R3, [R5, #516]              @ 0x204 
    /*00001bc0*/ CMP         R3, #0 
    /*00001bc4*/ BEQ         VI_LostRepeatFrame_x1b74
    /*00001bc8*/ LDR         R0, [R3, #444]              @ 0x1bc 
    /*00001bcc*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_LostRepeatFrame


FUNC_BEGIN VI_ReleaseCurPic
    /*00001bd0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00001bd4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00001bd8*/ ADD         R3, R3, R0, LSL #2 
    /*00001bdc*/ PUSH        {R4, R5, R6, LR} 
    /*00001be0*/ MOV         R5, R0 
    /*00001be4*/ LDR         R4, [R3, #704]              @ 0x2c0 
    /*00001be8*/ BL          0x0000000000001BE8          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00001bec*/ MOV         R1, R0 
    /*00001bf0*/ MOV         R6, R0 
    /*00001bf4*/ MOV         R0, R5 
    /*00001bf8*/ BL          0x0000000000001BF8          @ VI_bLinearOffline [R_ARM_CALL: .text+0x1ad0] 
    /*00001bfc*/ CMP         R0, #1 
    /*00001c00*/ BEQ         VI_ReleaseCurPic_x1c24
    /*00001c04*/ MOV         R1, R6 
    /*00001c08*/ MOV         R0, R5 
    /*00001c0c*/ BL          0x0000000000001C0C          @ VI_bWDROffline [R_ARM_CALL: .text+0x1afc] 
    /*00001c10*/ CMP         R0, #1 
    /*00001c14*/ BEQ         VI_ReleaseCurPic_x1c64
    VI_ReleaseCurPic_x1c18:
    /*00001c18*/ MOV         R0, #0 
    /*00001c1c*/ STR         R0, [R4, #508]              @ 0x1fc 
    /*00001c20*/ POP         {R4, R5, R6, PC} 
    VI_ReleaseCurPic_x1c24:
    /*00001c24*/ LDR         R0, [R4, #512]              @ 0x200 
    /*00001c28*/ CMP         R0, #0 
    /*00001c2c*/ BEQ         VI_ReleaseCurPic_x1c18
    /*00001c30*/ MOV         R1, #0 
    /*00001c34*/ BL          0x0000000000001C34          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00001c38*/ LDR         R1, [R4, #512]              @ 0x200 
    /*00001c3c*/ MOV         R0, R5 
    /*00001c40*/ ADD         R1, R1, #448                @ 0x1c0 
    /*00001c44*/ BL          0x0000000000001C44          @ VI_DRV_PutFreeBeBuf [R_ARM_CALL: .text+0x3883c] 
    /*00001c48*/ LDR         R1, [R4, #512]              @ 0x200 
    /*00001c4c*/ ADD         R0, R4, #4 
    /*00001c50*/ ADD         R1, R1, #580                @ 0x244 
    /*00001c54*/ BL          0x0000000000001C54          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00001c58*/ MOV         R3, #0 
    /*00001c5c*/ STR         R3, [R4, #512]              @ 0x200 
    /*00001c60*/ B           VI_ReleaseCurPic_x1c18
    VI_ReleaseCurPic_x1c64:
    /*00001c64*/ LDR         R1, [R4, #516]              @ 0x204 
    /*00001c68*/ CMP         R1, #0 
    /*00001c6c*/ BEQ         VI_ReleaseCurPic_x1c18
    /*00001c70*/ MOV         R0, R5 
    /*00001c74*/ BL          0x0000000000001C74          @ VI_WDR_OfflineClearWdrPicNode [R_ARM_CALL: .text+0x203d8] 
    /*00001c78*/ LDR         R1, [R4, #516]              @ 0x204 
    /*00001c7c*/ ADD         R0, R4, #40                 @ 0x28 
    /*00001c80*/ ADD         R1, R1, #1024               @ 0x400 
    /*00001c84*/ ADD         R1, R1, #8 
    /*00001c88*/ BL          0x0000000000001C88          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00001c8c*/ MOV         R3, #0 
    /*00001c90*/ STR         R3, [R4, #516]              @ 0x204 
    /*00001c94*/ B           VI_ReleaseCurPic_x1c18
FUNC_END VI_ReleaseCurPic


FUNC_BEGIN VI_GetCurPic
    /*00001c98*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00001c9c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00001ca0*/ ADD         R3, R3, R0, LSL #2 
    /*00001ca4*/ PUSH        {R4, R5, R6, LR} 
    /*00001ca8*/ LDR         R4, [R3, #704]              @ 0x2c0 
    /*00001cac*/ BL          0x0000000000001CAC          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00001cb0*/ BL          0x0000000000001CB0          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*00001cb4*/ SUBS        R5, R0, #0 
    /*00001cb8*/ BNE         VI_GetCurPic_x1ce0
    /*00001cbc*/ ADD         R0, R4, #4 
    /*00001cc0*/ BL          0x0000000000001CC0          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*00001cc4*/ CMP         R0, #0 
    /*00001cc8*/ BEQ         VI_GetCurPic_x1d10
    /*00001ccc*/ SUB         R0, R0, #580                @ 0x244 
    /*00001cd0*/ STR         R0, [R4, #512]              @ 0x200 
    /*00001cd4*/ CMP         R0, #0 
    /*00001cd8*/ BNE         VI_GetCurPic_x1d04
    /*00001cdc*/ B           VI_GetCurPic_x1d14
    VI_GetCurPic_x1ce0:
    /*00001ce0*/ ADD         R0, R4, #40                 @ 0x28 
    /*00001ce4*/ BL          0x0000000000001CE4          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*00001ce8*/ SUBS        R3, R0, #0 
    /*00001cec*/ BEQ         VI_GetCurPic_x1d1c
    /*00001cf0*/ SUB         R0, R3, #1024               @ 0x400 
    /*00001cf4*/ SUB         R0, R0, #8 
    /*00001cf8*/ STR         R0, [R4, #516]              @ 0x204 
    /*00001cfc*/ CMP         R0, #0 
    /*00001d00*/ BEQ         VI_GetCurPic_x1d14
    VI_GetCurPic_x1d04:
    /*00001d04*/ STR         R0, [R4, #508]              @ 0x1fc 
    /*00001d08*/ MOV         R0, #0 
    /*00001d0c*/ POP         {R4, R5, R6, PC} 
    VI_GetCurPic_x1d10:
    /*00001d10*/ STR         R0, [R4, #512]              @ 0x200 
    VI_GetCurPic_x1d14:
    /*00001d14*/ MVN         R0, #0 
    /*00001d18*/ POP         {R4, R5, R6, PC} 
    VI_GetCurPic_x1d1c:
    /*00001d1c*/ MVN         R0, #0 
    /*00001d20*/ STR         R3, [R4, #516]              @ 0x204 
    /*00001d24*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_GetCurPic


FUNC_BEGIN VI_PrepareProcHwInfo
    /*00001d28*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00001d2c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00001d30*/ ADD         R3, R3, R0, LSL #2 
    /*00001d34*/ PUSH        {R4, R5, R6, LR} 
    /*00001d38*/ MOV         R4, R0 
    /*00001d3c*/ LDR         R0, [R3, #704]              @ 0x2c0 
    /*00001d40*/ ADD         R3, R0, #36864              @ 0x9000 
    /*00001d44*/ LDR         R3, [R3, #2228]             @ 0x8b4 
    /*00001d48*/ CMP         R3, #1 
    /*00001d4c*/ BEQ         VI_PrepareProcHwInfo_x1d98
    VI_PrepareProcHwInfo_x1d50:
    /*00001d50*/ MOV         R6, #0 
    VI_PrepareProcHwInfo_x1d54:
    /*00001d54*/ MOV         R0, R4 
    /*00001d58*/ BL          0x0000000000001D58          @ VI_DRV_GetActualSplitNum [R_ARM_CALL: .text+0x30020] 
    /*00001d5c*/ MOV         R5, R0 
    /*00001d60*/ MOV         R0, R4 
    /*00001d64*/ BL          0x0000000000001D64          @ VI_SNAP_PrepareIso [R_ARM_CALL: .text+0x1abec] 
    /*00001d68*/ MOV         R0, R4 
    /*00001d6c*/ BL          0x0000000000001D6C          @ VI_LostRepeatFrame [R_ARM_CALL: .text+0x1b48] 
    /*00001d70*/ MOV         R2, R6 
    /*00001d74*/ MOV         R1, R5 
    /*00001d78*/ MOV         R3, R0 
    /*00001d7c*/ MOV         R0, R4 
    /*00001d80*/ BL          0x0000000000001D80          @ VI_DRV_Prepare3dnrInfo [R_ARM_CALL: .text+0x2d594] 
    /*00001d84*/ MOV         R1, R5 
    /*00001d88*/ MOV         R0, R4 
    /*00001d8c*/ BL          0x0000000000001D8C          @ VI_DRV_PrepareLDCIInfo [R_ARM_CALL: .text+0x2d5c4] 
    /*00001d90*/ MOV         R0, #0 
    /*00001d94*/ POP         {R4, R5, R6, PC} 
    VI_PrepareProcHwInfo_x1d98:
    /*00001d98*/ ADD         R0, R0, #148                @ 0x94 
    /*00001d9c*/ BL          0x0000000000001D9C          @ VI_QueueQueryBusyTail [R_ARM_CALL: .text+0x16430] 
    /*00001da0*/ CMP         R0, #0 
    /*00001da4*/ BEQ         VI_PrepareProcHwInfo_x1d50
    /*00001da8*/ SUB         R6, R0, #336                @ 0x150 
    /*00001dac*/ B           VI_PrepareProcHwInfo_x1d54
FUNC_END VI_PrepareProcHwInfo


FUNC_BEGIN VI_DoOneTask
    /*00001db0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00001db4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00001db8*/ ADD         R2, R3, R0, LSL #2 
    /*00001dbc*/ CMP         R1, #1 
    /*00001dc0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00001dc4*/ MOV         R5, R0 
    /*00001dc8*/ LDR         R6, [R2, #704]              @ 0x2c0 
    /*00001dcc*/ SUB         SP, SP, #12 
    /*00001dd0*/ ADD         R2, R6, #16384              @ 0x4000 
    /*00001dd4*/ LDR         R4, [R2, #632]              @ 0x278 
    /*00001dd8*/ CLZ         R4, R4 
    /*00001ddc*/ LSR         R4, R4, #5 
    /*00001de0*/ MOVEQ       R4, #0 
    /*00001de4*/ CMP         R4, #0 
    /*00001de8*/ BNE         VI_DoOneTask_x1e40
    /*00001dec*/ MOV         R0, #176                    @ 0xb0 
    /*00001df0*/ MOV         R7, R1 
    /*00001df4*/ MLA         R0, R0, R5, R3 
    /*00001df8*/ ADD         R6, R6, #36608              @ 0x8f00 
    /*00001dfc*/ ADD         R0, R0, #76                 @ 0x4c 
    /*00001e00*/ BL          0x0000000000001E00          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00001e04*/ MOV         R0, R5 
    /*00001e08*/ BL          0x0000000000001E08          @ VI_PrepareProcHwInfo [R_ARM_CALL: .text+0x1d28] 
    /*00001e0c*/ MOV         R1, R7 
    /*00001e10*/ MOV         R0, R5 
    /*00001e14*/ BL          0x0000000000001E14          @ VI_COMM_CreateOneNode [R_ARM_CALL: .text+0x11eb0] 
    /*00001e18*/ MOV         R1, R7 
    /*00001e1c*/ BL          0x0000000000001E1C          @ VI_COMM_SubmitOneNode [R_ARM_CALL: .text+0x125e8] 
    /*00001e20*/ MOV         R0, #2 
    /*00001e24*/ BL          0x0000000000001E24          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001e28*/ LDR         R3, [R0] 
    /*00001e2c*/ BLX         R3 
    /*00001e30*/ STRD        R0, [R6, #-8] 
    VI_DoOneTask_x1e34:
    /*00001e34*/ MOV         R0, R4 
    /*00001e38*/ ADD         SP, SP, #12 
    /*00001e3c*/ POP         {R4, R5, R6, R7, PC} 
    VI_DoOneTask_x1e40:
    /*00001e40*/ BL          0x0000000000001E40          @ VI_ReleaseCurPic [R_ARM_CALL: .text+0x1bd0] 
    /*00001e44*/ MOV         R0, R5 
    /*00001e48*/ BL          0x0000000000001E48          @ VI_ReleasePipeBNRCaptureVB [R_ARM_CALL: .text+0x1f9f4] 
    /*00001e4c*/ MOVW        R3, #731                    @ 0x2db 
    /*00001e50*/ STR         R5, [SP, #4] 
    /*00001e54*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a0] 
    /*00001e58*/ STR         R3, [SP] 
    /*00001e5c*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a0] 
    /*00001e60*/ LDR         R3, [PC, #16]               @ 0x0000000000001e78 
    /*00001e64*/ MOV         R1, #16 
    /*00001e68*/ MOV         R0, #7 
    /*00001e6c*/ MVN         R4, #0 
    /*00001e70*/ BL          0x0000000000001E70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001e74*/ B           VI_DoOneTask_x1e34
    /*00001e78*/ ANDEQ       R0, R0, R8, ROR R0 
FUNC_END VI_DoOneTask


FUNC_BEGIN VI_GetBeCfgLocal
    /*00001e7c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00001e80*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00001e84*/ ADD         R3, R3, R0, LSL #2 
    /*00001e88*/ PUSH        {R4, R5, R6, LR} 
    /*00001e8c*/ MOV         R4, R0 
    /*00001e90*/ LDR         R5, [R3, #704]              @ 0x2c0 
    /*00001e94*/ BL          0x0000000000001E94          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00001e98*/ BL          0x0000000000001E98          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*00001e9c*/ CMP         R0, #0 
    /*00001ea0*/ BEQ         VI_GetBeCfgLocal_x1ebc
    /*00001ea4*/ LDR         R1, [R5, #516]              @ 0x204 
    /*00001ea8*/ MOV         R0, R4 
    /*00001eac*/ POP         {R4, R5, R6, LR} 
    /*00001eb0*/ ADD         R2, R1, #920                @ 0x398 
    /*00001eb4*/ ADD         R1, R1, #896                @ 0x380 
    VI_GetBeCfgLocal_x1eb8:
    /*00001eb8*/ B           VI_GetBeCfgLocal_x1eb8      @ VI_DRV_GetBeCfgLocal [R_ARM_JUMP24: .text+0x271c0] 
    VI_GetBeCfgLocal_x1ebc:
    /*00001ebc*/ LDR         R1, [R5, #512]              @ 0x200 
    /*00001ec0*/ MOV         R0, R4 
    /*00001ec4*/ POP         {R4, R5, R6, LR} 
    /*00001ec8*/ ADD         R2, R1, #472                @ 0x1d8 
    /*00001ecc*/ ADD         R1, R1, #448                @ 0x1c0 
    VI_GetBeCfgLocal_x1ed0:
    /*00001ed0*/ B           VI_GetBeCfgLocal_x1ed0      @ VI_DRV_GetBeCfgLocal [R_ARM_JUMP24: .text+0x271c0] 
FUNC_END VI_GetBeCfgLocal


FUNC_BEGIN VI_StartOneTask
    /*00001ed4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00001ed8*/ MOV         R6, #176                    @ 0xb0 
    /*00001edc*/ MUL         R6, R6, R0 
    /*00001ee0*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00001ee4*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00001ee8*/ SUB         SP, SP, #68                 @ 0x44 
    /*00001eec*/ MOV         R4, R0 
    /*00001ef0*/ MOV         R8, R1 
    /*00001ef4*/ ADD         R7, R6, #140                @ 0x8c 
    /*00001ef8*/ ADD         R1, SP, #16 
    /*00001efc*/ ADD         R7, R5, R7 
    /*00001f00*/ MOV         R0, R7 
    /*00001f04*/ BL          0x0000000000001F04          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00001f08*/ ADD         R3, R5, R4, LSL #2 
    /*00001f0c*/ LDR         SL, [R3, #704]              @ 0x2c0 
    /*00001f10*/ CMP         SL, #0 
    /*00001f14*/ BEQ         VI_StartOneTask_x2170
    /*00001f18*/ LDR         R3, [R5, R6] 
    /*00001f1c*/ ADD         R9, R5, R6 
    /*00001f20*/ CMP         R3, #0 
    /*00001f24*/ BNE         VI_StartOneTask_x20a8
    /*00001f28*/ LDR         R3, [R9, #4] 
    /*00001f2c*/ CMP         R3, #0 
    /*00001f30*/ BNE         VI_StartOneTask_x20a8
    /*00001f34*/ LDR         R3, [R9, #8] 
    /*00001f38*/ CMP         R3, #0 
    /*00001f3c*/ BNE         VI_StartOneTask_x20a8
    /*00001f40*/ MOV         R0, R8 
    /*00001f44*/ BL          0x0000000000001F44          @ VI_DRV_FindSuitableProc [R_ARM_CALL: .text+0x27244] 
    /*00001f48*/ CMP         R0, #0 
    /*00001f4c*/ BEQ         VI_StartOneTask_x211c
    /*00001f50*/ MOV         R0, R4 
    /*00001f54*/ BL          0x0000000000001F54          @ VI_CheckBindInfo [R_ARM_CALL: .text+0x1644] 
    /*00001f58*/ CMP         R0, #0 
    /*00001f5c*/ BNE         VI_StartOneTask_x2154
    /*00001f60*/ MOV         R0, R4 
    /*00001f64*/ BL          0x0000000000001F64          @ VI_DRV_CheckPipeChipLimit [R_ARM_CALL: .text+0x345cc] 
    /*00001f68*/ ADD         R1, SP, #16 
    /*00001f6c*/ CMP         R0, #0 
    /*00001f70*/ BNE         VI_StartOneTask_x2164
    /*00001f74*/ MOV         R3, #1 
    /*00001f78*/ MOV         R0, R7 
    /*00001f7c*/ STR         R3, [R9, #8] 
    /*00001f80*/ BL          0x0000000000001F80          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001f84*/ MOV         R0, R4 
    /*00001f88*/ BL          0x0000000000001F88          @ VI_DRV_IsStitchSyncLostFrame [R_ARM_CALL: .text+0x388d0] 
    /*00001f8c*/ CMP         R0, #1 
    /*00001f90*/ BEQ         VI_StartOneTask_x20e4
    VI_StartOneTask_x1f94:
    /*00001f94*/ MOV         R0, R4 
    /*00001f98*/ BL          0x0000000000001F98          @ VI_GetCurPic [R_ARM_CALL: .text+0x1c98] 
    /*00001f9c*/ SUBS        R9, R0, #0 
    /*00001fa0*/ BNE         VI_StartOneTask_x2060
    /*00001fa4*/ MOV         R0, R4 
    /*00001fa8*/ BL          0x0000000000001FA8          @ VI_GetBeCfgLocal [R_ARM_CALL: .text+0x1e7c] 
    /*00001fac*/ CMP         R8, #1 
    /*00001fb0*/ BEQ         VI_StartOneTask_x1fdc
    VI_StartOneTask_x1fb4:
    /*00001fb4*/ MOV         R1, R8 
    /*00001fb8*/ MOV         R0, R4 
    /*00001fbc*/ BL          0x0000000000001FBC          @ VI_PrepareTask [R_ARM_CALL: .text+0x1a40] 
    /*00001fc0*/ MOV         R1, R8 
    /*00001fc4*/ MOV         R0, R4 
    /*00001fc8*/ BL          0x0000000000001FC8          @ VI_DoOneTask [R_ARM_CALL: .text+0x1db0] 
    /*00001fcc*/ CMP         R0, #0 
    /*00001fd0*/ BNE         VI_StartOneTask_x2060
    VI_StartOneTask_x1fd4:
    /*00001fd4*/ ADD         SP, SP, #68                 @ 0x44 
    /*00001fd8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_StartOneTask_x1fdc:
    /*00001fdc*/ MOV         R0, #7 
    /*00001fe0*/ BL          0x0000000000001FE0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001fe4*/ LDR         R3, [R0, #12] 
    /*00001fe8*/ CMP         R3, #0 
    /*00001fec*/ BEQ         VI_StartOneTask_x1fb4
    /*00001ff0*/ MOV         R0, R4 
    /*00001ff4*/ BL          0x0000000000001FF4          @ VI_LostRepeatFrame [R_ARM_CALL: .text+0x1b48] 
    /*00001ff8*/ MOV         R1, R9 
    /*00001ffc*/ ADD         R2, SP, #20 
    /*00002000*/ MOV         FP, R0 
    /*00002004*/ MOV         R0, R4 
    /*00002008*/ BL          0x0000000000002008          @ VI_DRV_GetWorkingChnAttr [R_ARM_CALL: .text+0x2991c] 
    /*0000200c*/ MOV         R0, #7 
    /*00002010*/ BL          0x0000000000002010          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00002014*/ MOV         R2, FP 
    /*00002018*/ LDR         R3, [SP, #28] 
    /*0000201c*/ LDR         R1, [SL, #508]              @ 0x1fc 
    /*00002020*/ LDR         R9, [R0, #12] 
    /*00002024*/ MOV         R0, R4 
    /*00002028*/ BLX         R9 
    /*0000202c*/ CMP         R0, #0 
    /*00002030*/ BEQ         VI_StartOneTask_x1fb4
    /*00002034*/ MOV         R0, R4 
    /*00002038*/ BL          0x0000000000002038          @ VI_ReleaseCurPic [R_ARM_CALL: .text+0x1bd0] 
    /*0000203c*/ MOVW        R3, #877                    @ 0x36d 
    /*00002040*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a0] 
    /*00002044*/ STR         R3, [SP] 
    /*00002048*/ STR         R4, [SP, #4] 
    /*0000204c*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a0] 
    /*00002050*/ LDR         R3, [PC, #340]              @ 0x00000000000021ac 
    /*00002054*/ MOV         R1, #16 
    /*00002058*/ MOV         R0, #3 
    /*0000205c*/ BL          0x000000000000205C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_StartOneTask_x2060:
    /*00002060*/ MOV         R8, #0 
    /*00002064*/ ADD         R1, SP, #16 
    /*00002068*/ MOV         R0, R7 
    /*0000206c*/ STR         R8, [SL, #512]              @ 0x200 
    /*00002070*/ STR         R8, [SL, #516]              @ 0x204 
    /*00002074*/ BL          0x0000000000002074          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002078*/ MOV         R3, #176                    @ 0xb0 
    /*0000207c*/ MLA         R4, R3, R4, R5 
    /*00002080*/ ADD         R0, R6, #88                 @ 0x58 
    /*00002084*/ ADD         R0, R5, R0 
    /*00002088*/ STR         R8, [R4, #8] 
    /*0000208c*/ BL          0x000000000000208C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00002090*/ MOV         R0, R7 
    /*00002094*/ ADD         R1, SP, #16 
    /*00002098*/ BL          0x0000000000002098          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000209c*/ MVN         R0, #0 
    /*000020a0*/ ADD         SP, SP, #68                 @ 0x44 
    /*000020a4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_StartOneTask_x20a8:
    /*000020a8*/ ADD         R1, SP, #16 
    /*000020ac*/ MOV         R0, R7 
    /*000020b0*/ BL          0x00000000000020B0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000020b4*/ STR         R4, [SP, #4] 
    /*000020b8*/ MOVW        R3, #815                    @ 0x32f 
    /*000020bc*/ MOV         R1, #16 
    /*000020c0*/ STR         R3, [SP] 
    /*000020c4*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e0] 
    /*000020c8*/ LDR         R3, [PC, #220]              @ 0x00000000000021ac 
    /*000020cc*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e0] 
    /*000020d0*/ MOV         R0, #7 
    /*000020d4*/ BL          0x00000000000020D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000020d8*/ MVN         R0, #0 
    /*000020dc*/ ADD         SP, SP, #68                 @ 0x44 
    /*000020e0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_StartOneTask_x20e4:
    /*000020e4*/ MOV         R0, R4 
    /*000020e8*/ BL          0x00000000000020E8          @ VI_GetCurPic [R_ARM_CALL: .text+0x1c98] 
    /*000020ec*/ MOV         R0, R4 
    /*000020f0*/ BL          0x00000000000020F0          @ VI_ReleaseCurPic [R_ARM_CALL: .text+0x1bd0] 
    /*000020f4*/ MOVW        R3, #853                    @ 0x355 
    /*000020f8*/ STR         R4, [SP, #4] 
    /*000020fc*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x460] 
    /*00002100*/ STR         R3, [SP] 
    /*00002104*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x460] 
    /*00002108*/ LDR         R3, [PC, #156]              @ 0x00000000000021ac 
    /*0000210c*/ MOV         R1, #16 
    /*00002110*/ MOV         R0, #3 
    /*00002114*/ BL          0x0000000000002114          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002118*/ B           VI_StartOneTask_x1f94
    VI_StartOneTask_x211c:
    /*0000211c*/ STR         R8, [SP, #8] 
    /*00002120*/ MOVW        R3, #821                    @ 0x335 
    /*00002124*/ STR         R4, [SP, #4] 
    /*00002128*/ MOV         R1, #16 
    /*0000212c*/ STR         R3, [SP] 
    /*00002130*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x428] 
    /*00002134*/ LDR         R3, [PC, #112]              @ 0x00000000000021ac 
    /*00002138*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x428] 
    /*0000213c*/ MOV         R0, #7 
    /*00002140*/ BL          0x0000000000002140          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002144*/ ADD         R1, SP, #16 
    /*00002148*/ MOV         R0, R7 
    /*0000214c*/ BL          0x000000000000214C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002150*/ B           VI_StartOneTask_x2060
    VI_StartOneTask_x2154:
    /*00002154*/ ADD         R1, SP, #16 
    /*00002158*/ MOV         R0, R7 
    /*0000215c*/ BL          0x000000000000215C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002160*/ B           VI_StartOneTask_x2060
    VI_StartOneTask_x2164:
    /*00002164*/ MOV         R0, R7 
    /*00002168*/ BL          0x0000000000002168          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000216c*/ B           VI_StartOneTask_x2060
    VI_StartOneTask_x2170:
    /*00002170*/ ADD         R1, SP, #16 
    /*00002174*/ MOV         R0, R7 
    /*00002178*/ BL          0x0000000000002178          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000217c*/ MOVW        R3, #806                    @ 0x326 
    /*00002180*/ STR         R4, [SP, #4] 
    /*00002184*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x228] 
    /*00002188*/ STR         R3, [SP] 
    /*0000218c*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x228] 
    /*00002190*/ LDR         R3, [PC, #20]               @ 0x00000000000021ac 
    /*00002194*/ MOV         R1, #16 
    /*00002198*/ MOV         R0, #3 
    /*0000219c*/ BL          0x000000000000219C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000021a0*/ MOVW        R0, #32773                  @ 0x8005 
    /*000021a4*/ MOVT        R0, #40976                  @ 0xa010 
    /*000021a8*/ B           VI_StartOneTask_x1fd4
    /*000021ac*/ ANDEQ       R0, R0, R8, LSL #1 
FUNC_END VI_StartOneTask


FUNC_BEGIN VI_ReleaseCurResource
    /*000021b0*/ PUSH        {R4, R5, R6, LR} 
    /*000021b4*/ MOV         R6, R0 
    /*000021b8*/ MOV         R4, #176                    @ 0xb0 
    /*000021bc*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000021c0*/ MUL         R4, R4, R6 
    /*000021c4*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000021c8*/ SUB         SP, SP, #8 
    /*000021cc*/ BL          0x00000000000021CC          @ VI_ReleaseCurPic [R_ARM_CALL: .text+0x1bd0] 
    /*000021d0*/ ADD         R1, SP, #4 
    /*000021d4*/ ADD         R6, R4, #140                @ 0x8c 
    /*000021d8*/ ADD         R6, R5, R6 
    /*000021dc*/ MOV         R0, R6 
    /*000021e0*/ BL          0x00000000000021E0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000021e4*/ ADD         R3, R5, R4 
    /*000021e8*/ MOV         R1, #0 
    /*000021ec*/ LDR         R2, [R3, #4] 
    /*000021f0*/ STR         R1, [R3, #8] 
    /*000021f4*/ CMP         R2, R1 
    /*000021f8*/ BNE         VI_ReleaseCurResource_x2208
    /*000021fc*/ LDR         R3, [R5, R4] 
    /*00002200*/ CMP         R3, R1 
    /*00002204*/ BEQ         VI_ReleaseCurResource_x2214
    VI_ReleaseCurResource_x2208:
    /*00002208*/ ADD         R0, R4, #88                 @ 0x58 
    /*0000220c*/ ADD         R0, R5, R0 
    /*00002210*/ BL          0x0000000000002210          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VI_ReleaseCurResource_x2214:
    /*00002214*/ MOV         R0, R6 
    /*00002218*/ ADD         R1, SP, #4 
    /*0000221c*/ BL          0x000000000000221C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002220*/ MOV         R0, #0 
    /*00002224*/ ADD         SP, SP, #8 
    /*00002228*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_ReleaseCurResource


FUNC_BEGIN VI_ChnFrameRateStatistic
    /*0000222c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00002230*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00002234*/ ADD         R0, R3, R0, LSL #2 
    /*00002238*/ CMP         R2, #0 
    /*0000223c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00002240*/ MOV         R5, R1 
    /*00002244*/ LDR         R4, [R0, #704]              @ 0x2c0 
    /*00002248*/ BEQ         VI_ChnFrameRateStatistic_x2278
    /*0000224c*/ MOV         R2, #56                     @ 0x38 
    /*00002250*/ MOVW        IP, #36680                  @ 0x8f48 
    /*00002254*/ MLA         R2, R2, R1, R4 
    /*00002258*/ MOVW        LR, #36656                  @ 0x8f30 
    /*0000225c*/ LDRD        R0, [R2, IP] 
    /*00002260*/ LDR         R3, [R2, LR] 
    /*00002264*/ ADDS        R0, R0, #1 
    /*00002268*/ ADD         R3, R3, #1 
    /*0000226c*/ ADC         R1, R1, #0 
    /*00002270*/ STR         R3, [R2, LR] 
    /*00002274*/ STRD        R0, [R2, IP] 
    VI_ChnFrameRateStatistic_x2278:
    /*00002278*/ MOV         R0, #2 
    /*0000227c*/ BL          0x000000000000227C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00002280*/ LDR         R3, [R0] 
    /*00002284*/ BLX         R3 
    /*00002288*/ MOV         R3, #56                     @ 0x38 
    /*0000228c*/ MLA         R3, R3, R5, R4 
    /*00002290*/ MOVW        LR, #36704                  @ 0x8f60 
    /*00002294*/ MOVW        IP, #16959                  @ 0x423f 
    /*00002298*/ MOVT        IP, #15 
    /*0000229c*/ ADD         R8, R3, LR 
    /*000022a0*/ LDR         R2, [R3, LR] 
    /*000022a4*/ SUB         R2, R0, R2 
    /*000022a8*/ CMP         R2, IP 
    /*000022ac*/ POPLS       {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*000022b0*/ MOVW        R6, #36680                  @ 0x8f48 
    /*000022b4*/ MOVW        IP, #36688                  @ 0x8f50 
    /*000022b8*/ LDR         R2, [R3, R6] 
    /*000022bc*/ LDR         SL, [R3, IP] 
    /*000022c0*/ LDRD        R4, [R3, LR] 
    /*000022c4*/ SUB         R2, R2, SL 
    /*000022c8*/ MOVW        SL, #36696                  @ 0x8f58 
    /*000022cc*/ LDRD        R6, [R6, R3] 
    /*000022d0*/ SUB         R9, R0, R4 
    /*000022d4*/ STR         R2, [R3, SL] 
    /*000022d8*/ MOVW        R2, #33919                  @ 0x847f 
    /*000022dc*/ MOVT        R2, #30 
    /*000022e0*/ CMP         R9, R2 
    /*000022e4*/ STRD        R6, [R3, IP] 
    /*000022e8*/ BHI         VI_ChnFrameRateStatistic_x2308
    /*000022ec*/ MOVW        R0, #16960                  @ 0x4240 
    /*000022f0*/ MOVT        R0, #15 
    /*000022f4*/ ADDS        R4, R4, R0 
    /*000022f8*/ MOV         R1, #0 
    /*000022fc*/ ADC         R5, R5, R1 
    /*00002300*/ STRD        R4, [R3, LR] 
    /*00002304*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_ChnFrameRateStatistic_x2308:
    /*00002308*/ STR         R0, [R3, LR] 
    /*0000230c*/ STR         R1, [R8, #4] 
    /*00002310*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VI_ChnFrameRateStatistic


FUNC_BEGIN VI_PipeFrameRateStatistic
    /*00002314*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00002318*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0000231c*/ ADD         R0, R3, R0, LSL #2 
    /*00002320*/ CMP         R1, #0 
    /*00002324*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00002328*/ LDR         R4, [R0, #704]              @ 0x2c0 
    /*0000232c*/ ADD         R4, R4, #32768              @ 0x8000 
    /*00002330*/ BEQ         VI_PipeFrameRateStatistic_x2348
    /*00002334*/ ADD         R1, R4, #3664               @ 0xe50 
    /*00002338*/ LDRD        R2, [R1, #56]               @ 0x38 
    /*0000233c*/ ADDS        R2, R2, #1 
    /*00002340*/ ADC         R3, R3, #0 
    /*00002344*/ STRD        R2, [R1, #56]               @ 0x38 
    VI_PipeFrameRateStatistic_x2348:
    /*00002348*/ MOV         R0, #2 
    /*0000234c*/ BL          0x000000000000234C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00002350*/ LDR         R3, [R0] 
    /*00002354*/ BLX         R3 
    /*00002358*/ ADD         R3, R4, #3664               @ 0xe50 
    /*0000235c*/ MOVW        R2, #16959                  @ 0x423f 
    /*00002360*/ MOVT        R2, #15 
    /*00002364*/ LDRD        R6, [R3, #80]               @ 0x50 
    /*00002368*/ SUB         IP, R0, R6 
    /*0000236c*/ CMP         IP, R2 
    /*00002370*/ POPLS       {R4, R5, R6, R7, R8, PC} 
    /*00002374*/ MOVW        R5, #33919                  @ 0x847f 
    /*00002378*/ MOVT        R5, #30 
    /*0000237c*/ LDR         LR, [R4, #3720]             @ 0xe88 
    /*00002380*/ CMP         IP, R5 
    /*00002384*/ LDR         IP, [R4, #3724]             @ 0xe8c 
    /*00002388*/ LDR         R2, [R3, #64]               @ 0x40 
    /*0000238c*/ SUB         R2, LR, R2 
    /*00002390*/ STR         R2, [R4, #3736]             @ 0xe98 
    /*00002394*/ STR         LR, [R3, #64]               @ 0x40 
    /*00002398*/ STR         IP, [R4, #3732]             @ 0xe94 
    /*0000239c*/ BHI         VI_PipeFrameRateStatistic_x23bc
    /*000023a0*/ MOVW        R0, #16960                  @ 0x4240 
    /*000023a4*/ MOVT        R0, #15 
    /*000023a8*/ ADDS        R6, R6, R0 
    /*000023ac*/ MOV         R1, #0 
    /*000023b0*/ ADC         R7, R7, R1 
    /*000023b4*/ STRD        R6, [R3, #80]               @ 0x50 
    /*000023b8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_PipeFrameRateStatistic_x23bc:
    /*000023bc*/ STR         R0, [R3, #80]               @ 0x50 
    /*000023c0*/ STR         R1, [R4, #3748]             @ 0xea4 
    /*000023c4*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_PipeFrameRateStatistic


FUNC_BEGIN VI_SendPhyChnPic2ExtChn
    /*000023c8*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000023cc*/ MOV         R4, R1 
    /*000023d0*/ MOV         R9, R0 
    /*000023d4*/ MOV         SL, R2 
    /*000023d8*/ MOV         FP, R3 
    /*000023dc*/ BL          0x00000000000023DC          @ VI_DRV_IsSupportExtChn [R_ARM_CALL: .text+0x2b23c] 
    /*000023e0*/ ADDS        R4, R4, #0 
    /*000023e4*/ MOVNE       R4, #1 
    /*000023e8*/ CMP         R0, #0 
    /*000023ec*/ ORREQ       R4, R4, #1 
    /*000023f0*/ CMP         R4, #0 
    /*000023f4*/ BNE         VI_SendPhyChnPic2ExtChn_x2470
    /*000023f8*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000023fc*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00002400*/ ADD         R3, R3, R9, LSL #2 
    /*00002404*/ LDR         R6, [R3, #704]              @ 0x2c0 
    /*00002408*/ ADD         R3, R6, #12288              @ 0x3000 
    /*0000240c*/ LDR         R7, [R3, #2136]             @ 0x858 
    /*00002410*/ CMP         R7, #0 
    /*00002414*/ BEQ         VI_SendPhyChnPic2ExtChn_x2470
    /*00002418*/ ADD         R5, R6, #14400              @ 0x3840 
    /*0000241c*/ MOVW        R8, #9772                   @ 0x262c 
    /*00002420*/ ADD         R5, R5, #28 
    /*00002424*/ B           VI_SendPhyChnPic2ExtChn_x2430
    VI_SendPhyChnPic2ExtChn_x2428:
    /*00002428*/ CMP         R4, R7 
    /*0000242c*/ BEQ         VI_SendPhyChnPic2ExtChn_x2470
    VI_SendPhyChnPic2ExtChn_x2430:
    /*00002430*/ LDR         R1, [R5], #4 
    /*00002434*/ ADD         R4, R4, #1 
    /*00002438*/ SUB         R2, R1, #1 
    /*0000243c*/ ADD         R3, R1, R8 
    /*00002440*/ CMP         R2, #7 
    /*00002444*/ ADD         R3, R6, R3, LSL #2 
    /*00002448*/ BHI         VI_SendPhyChnPic2ExtChn_x2428
    /*0000244c*/ LDR         R3, [R3, #4] 
    /*00002450*/ CMP         R3, #0 
    /*00002454*/ BEQ         VI_SendPhyChnPic2ExtChn_x2428
    /*00002458*/ MOV         R3, FP 
    /*0000245c*/ MOV         R2, SL 
    /*00002460*/ MOV         R0, R9 
    /*00002464*/ BL          0x0000000000002464          @ VI_HandleExtChnPic [R_ARM_CALL: .text+0xb754] 
    /*00002468*/ CMP         R4, R7 
    /*0000246c*/ BNE         VI_SendPhyChnPic2ExtChn_x2430
    VI_SendPhyChnPic2ExtChn_x2470:
    /*00002470*/ MOV         R0, #0 
    /*00002474*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VI_SendPhyChnPic2ExtChn


FUNC_BEGIN VI_ProcSendPic2ChnPicQueue
    /*00002478*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000247c*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00002480*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00002484*/ SUB         SP, SP, #28 
    /*00002488*/ ADD         R3, R7, R0, LSL #2 
    /*0000248c*/ MOV         R8, R0 
    /*00002490*/ MOV         FP, R2 
    /*00002494*/ MOV         SL, R1 
    /*00002498*/ LDR         R4, [R3, #704]              @ 0x2c0 
    /*0000249c*/ BL          0x000000000000249C          @ VI_GetChnDepth [R_ARM_CALL: .text+0x1df78] 
    /*000024a0*/ SUBS        R6, R0, #0 
    /*000024a4*/ BNE         VI_ProcSendPic2ChnPicQueue_x24b4
    VI_ProcSendPic2ChnPicQueue_x24a8:
    /*000024a8*/ MOV         R0, #0 
    /*000024ac*/ ADD         SP, SP, #28 
    /*000024b0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcSendPic2ChnPicQueue_x24b4:
    /*000024b4*/ MOV         R9, #176                    @ 0xb0 
    /*000024b8*/ MOV         R5, #36                     @ 0x24 
    /*000024bc*/ MLA         R9, R9, R8, R7 
    /*000024c0*/ ADD         R1, SP, #20 
    /*000024c4*/ MLA         R5, R5, SL, R4 
    /*000024c8*/ ADD         R9, R9, #140                @ 0x8c 
    /*000024cc*/ MOV         R0, R9 
    /*000024d0*/ ADD         R5, R5, #148                @ 0x94 
    /*000024d4*/ BL          0x00000000000024D4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000024d8*/ B           VI_ProcSendPic2ChnPicQueue_x24f4
    VI_ProcSendPic2ChnPicQueue_x24dc:
    /*000024dc*/ SUBS        R0, R4, #336                @ 0x150 
    /*000024e0*/ BEQ         VI_ProcSendPic2ChnPicQueue_x2518
    /*000024e4*/ BL          0x00000000000024E4          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*000024e8*/ MOV         R1, R4 
    /*000024ec*/ MOV         R0, R5 
    /*000024f0*/ BL          0x00000000000024F0          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    VI_ProcSendPic2ChnPicQueue_x24f4:
    /*000024f4*/ MOV         R0, R5 
    /*000024f8*/ BL          0x00000000000024F8          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*000024fc*/ CMP         R6, R0 
    /*00002500*/ MOV         R0, R5 
    /*00002504*/ BHI         VI_ProcSendPic2ChnPicQueue_x2558
    /*00002508*/ BL          0x0000000000002508          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*0000250c*/ MOV         R1, #0 
    /*00002510*/ SUBS        R4, R0, #0 
    /*00002514*/ BNE         VI_ProcSendPic2ChnPicQueue_x24dc
    VI_ProcSendPic2ChnPicQueue_x2518:
    /*00002518*/ STR         SL, [SP, #8] 
    /*0000251c*/ MOV         R3, #1120                   @ 0x460 
    /*00002520*/ STR         R8, [SP, #4] 
    /*00002524*/ MOV         R1, #16 
    /*00002528*/ STR         R3, [SP] 
    /*0000252c*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4dc] 
    /*00002530*/ LDR         R3, [PC, #244]              @ 0x000000000000262c 
    /*00002534*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4dc] 
    /*00002538*/ MOV         R0, #3 
    /*0000253c*/ BL          0x000000000000253C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002540*/ MOV         R0, R9 
    /*00002544*/ ADD         R1, SP, #20 
    /*00002548*/ BL          0x0000000000002548          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000254c*/ MOV         R0, #0 
    /*00002550*/ ADD         SP, SP, #28 
    /*00002554*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcSendPic2ChnPicQueue_x2558:
    /*00002558*/ BL          0x0000000000002558          @ VI_QueueGetFree [R_ARM_CALL: .text+0x161cc] 
    /*0000255c*/ SUBS        R4, R0, #0 
    /*00002560*/ BEQ         VI_ProcSendPic2ChnPicQueue_x25f8
    /*00002564*/ SUBS        R6, R4, #336                @ 0x150 
    /*00002568*/ BEQ         VI_ProcSendPic2ChnPicQueue_x25f8
    /*0000256c*/ MOV         R1, FP 
    /*00002570*/ MOV         R2, #336                    @ 0x150 
    /*00002574*/ MOV         R0, R6 
    /*00002578*/ BL          0x0000000000002578          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000257c*/ MOV         R0, R6 
    /*00002580*/ MOV         R1, #0 
    /*00002584*/ BL          0x0000000000002584          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00002588*/ CMP         R0, #0 
    /*0000258c*/ BNE         VI_ProcSendPic2ChnPicQueue_x25c8
    VI_ProcSendPic2ChnPicQueue_x2590:
    /*00002590*/ MOV         R1, R4 
    /*00002594*/ MOV         R0, R5 
    /*00002598*/ BL          0x0000000000002598          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    /*0000259c*/ ADD         SL, SL, #10 
    /*000025a0*/ ADD         R1, SP, #20 
    /*000025a4*/ MOV         R0, R9 
    /*000025a8*/ BL          0x00000000000025A8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000025ac*/ MOV         R0, #44                     @ 0x2c 
    /*000025b0*/ MLA         R0, R0, R8, SL 
    /*000025b4*/ ADD         R0, R7, R0, LSL #2 
    /*000025b8*/ BL          0x00000000000025B8          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000025bc*/ MOV         R0, #0 
    /*000025c0*/ ADD         SP, SP, #28 
    /*000025c4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcSendPic2ChnPicQueue_x25c8:
    /*000025c8*/ STR         R0, [SP, #12] 
    /*000025cc*/ MOVW        R3, #1145                   @ 0x479 
    /*000025d0*/ STR         SL, [SP, #8] 
    /*000025d4*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x570] 
    /*000025d8*/ STR         R3, [SP] 
    /*000025dc*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x570] 
    /*000025e0*/ STR         R8, [SP, #4] 
    /*000025e4*/ MOV         R1, #16 
    /*000025e8*/ LDR         R3, [PC, #60]               @ 0x000000000000262c 
    /*000025ec*/ MOV         R0, #3 
    /*000025f0*/ BL          0x00000000000025F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000025f4*/ B           VI_ProcSendPic2ChnPicQueue_x2590
    VI_ProcSendPic2ChnPicQueue_x25f8:
    /*000025f8*/ ADD         R1, SP, #20 
    /*000025fc*/ MOV         R0, R9 
    /*00002600*/ BL          0x0000000000002600          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002604*/ MOV         R3, #1136                   @ 0x470 
    /*00002608*/ STMIB       SP, {R8, SL} 
    /*0000260c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x530] 
    /*00002610*/ STR         R3, [SP] 
    /*00002614*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x530] 
    /*00002618*/ LDR         R3, [PC, #12]               @ 0x000000000000262c 
    /*0000261c*/ MOV         R1, #16 
    /*00002620*/ MOV         R0, #3 
    /*00002624*/ BL          0x0000000000002624          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002628*/ B           VI_ProcSendPic2ChnPicQueue_x24a8
    /*0000262c*/ MULEQ       R0, R8, R0 
FUNC_END VI_ProcSendPic2ChnPicQueue


FUNC_BEGIN VI_MarkSendDataFlag
    /*00002630*/ PUSH        {R4, R5, R6, LR} 
    /*00002634*/ MOV         R4, R0 
    /*00002638*/ LDR         R5, [R0, #312]              @ 0x138 
    /*0000263c*/ BL          0x000000000000263C          @ VI_DRV_IsSupportLowDelay [R_ARM_CALL: .text+0x2a748] 
    /*00002640*/ CMP         R0, #1 
    /*00002644*/ BEQ         VI_MarkSendDataFlag_x2660
    /*00002648*/ CMP         R5, #0 
    /*0000264c*/ MOV         R0, #0 
    /*00002650*/ MOVNE       R3, #0 
    /*00002654*/ STRBNE      R3, [R5, #65]               @ 0x41 
    /*00002658*/ STR         R0, [R4, #688]              @ 0x2b0 
    /*0000265c*/ POP         {R4, R5, R6, PC} 
    VI_MarkSendDataFlag_x2660:
    /*00002660*/ CMP         R5, #0 
    /*00002664*/ BEQ         VI_MarkSendDataFlag_x269c
    VI_MarkSendDataFlag_x2668:
    /*00002668*/ LDR         R3, [R4, #688]              @ 0x2b0 
    /*0000266c*/ CMP         R3, #1 
    /*00002670*/ BEQ         VI_MarkSendDataFlag_x2690
    /*00002674*/ CMP         R3, #2 
    /*00002678*/ MOVEQ       R3, #0 
    /*0000267c*/ MOVEQ       R0, #4 
    /*00002680*/ STRBEQ      R3, [R5, #65]               @ 0x41 
    /*00002684*/ MOVNE       R0, #0 
    /*00002688*/ STRBNE      R0, [R5, #65]               @ 0x41 
    /*0000268c*/ POP         {R4, R5, R6, PC} 
    VI_MarkSendDataFlag_x2690:
    /*00002690*/ STRB        R3, [R5, #65]               @ 0x41 
    /*00002694*/ MOV         R0, #2 
    /*00002698*/ POP         {R4, R5, R6, PC} 
    VI_MarkSendDataFlag_x269c:
    /*0000269c*/ MOVW        R3, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b4] 
    /*000026a0*/ MOVW        R0, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d0] 
    /*000026a4*/ MOVT        R3, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b4] 
    /*000026a8*/ MOVT        R0, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d0] 
    /*000026ac*/ MOVW        R2, #1170                   @ 0x492 
    /*000026b0*/ LDR         R1, [PC, #4]                @ 0x00000000000026bc 
    /*000026b4*/ BL          0x00000000000026B4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000026b8*/ B           VI_MarkSendDataFlag_x2668
    /*000026bc*/ STRHEQ      R0, [R0], -R4 
FUNC_END VI_MarkSendDataFlag


FUNC_BEGIN VI_IsLowDelayFrame
    /*000026c0*/ PUSH        {R4, LR} 
    /*000026c4*/ MOV         R4, R0 
    /*000026c8*/ BL          0x00000000000026C8          @ VI_DRV_IsSupportLowDelay [R_ARM_CALL: .text+0x2a748] 
    /*000026cc*/ CMP         R0, #1 
    /*000026d0*/ LDREQ       R0, [R4, #688]              @ 0x2b0 
    /*000026d4*/ SUBEQ       R0, R0, #1 
    /*000026d8*/ CLZEQ       R0, R0 
    /*000026dc*/ LSREQ       R0, R0, #5 
    /*000026e0*/ MOVNE       R0, #0 
    /*000026e4*/ POP         {R4, PC} 
FUNC_END VI_IsLowDelayFrame


FUNC_BEGIN VI_ProcSendPic
    /*000026e8*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000026ec*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000026f0*/ ADD         R3, R3, R0, LSL #2 
    /*000026f4*/ MOVW        IP, #36672                  @ 0x8f40 
    /*000026f8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000026fc*/ MOV         R6, R1 
    /*00002700*/ LDR         R3, [R3, #704]              @ 0x2c0 
    /*00002704*/ MOV         R1, #56                     @ 0x38 
    /*00002708*/ MOV         R4, R2 
    /*0000270c*/ MOVW        R2, #36676                  @ 0x8f44 
    /*00002710*/ LDR         LR, [R4] 
    /*00002714*/ SUB         SP, SP, #12 
    /*00002718*/ MLA         R3, R1, R6, R3 
    /*0000271c*/ MOV         R5, R0 
    /*00002720*/ MOV         R0, R4 
    /*00002724*/ STR         LR, [R3, IP] 
    /*00002728*/ LDR         R1, [R4, #4] 
    /*0000272c*/ STR         R1, [R3, R2] 
    /*00002730*/ BL          0x0000000000002730          @ VI_MarkSendDataFlag [R_ARM_CALL: .text+0x2630] 
    /*00002734*/ MOV         R7, R0 
    /*00002738*/ MOV         R0, #2 
    /*0000273c*/ BL          0x000000000000273C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00002740*/ MOV         R3, R7 
    /*00002744*/ STR         R4, [SP, #4] 
    /*00002748*/ MOV         R1, #0 
    /*0000274c*/ MOV         R2, R6 
    /*00002750*/ STR         R1, [SP] 
    /*00002754*/ MOV         R1, R5 
    /*00002758*/ LDR         R7, [R0, #40]               @ 0x28 
    /*0000275c*/ MOV         R0, #16 
    /*00002760*/ BLX         R7 
    /*00002764*/ BL          0x0000000000002764          @ VI_DRV_IsSupportLowDelay [R_ARM_CALL: .text+0x2a748] 
    /*00002768*/ CMP         R0, #1 
    /*0000276c*/ BEQ         VI_ProcSendPic_x27b0
    VI_ProcSendPic_x2770:
    /*00002770*/ MOV         R2, #1 
    /*00002774*/ MOV         R1, R6 
    /*00002778*/ MOV         R0, R5 
    /*0000277c*/ BL          0x000000000000277C          @ VI_ChnFrameRateStatistic [R_ARM_CALL: .text+0x222c] 
    /*00002780*/ MOV         R2, R4 
    /*00002784*/ MOV         R1, R6 
    /*00002788*/ MOV         R3, #0 
    /*0000278c*/ MOV         R0, R5 
    /*00002790*/ BL          0x0000000000002790          @ VI_SendPhyChnPic2ExtChn [R_ARM_CALL: .text+0x23c8] 
    /*00002794*/ MOV         R2, R4 
    /*00002798*/ MOV         R1, R6 
    /*0000279c*/ MOV         R0, R5 
    /*000027a0*/ BL          0x00000000000027A0          @ VI_ProcSendPic2ChnPicQueue [R_ARM_CALL: .text+0x2478] 
    VI_ProcSendPic_x27a4:
    /*000027a4*/ MOV         R0, #0 
    /*000027a8*/ ADD         SP, SP, #12 
    /*000027ac*/ POP         {R4, R5, R6, R7, PC} 
    VI_ProcSendPic_x27b0:
    /*000027b0*/ LDR         R3, [R4, #688]              @ 0x2b0 
    /*000027b4*/ CMP         R3, #1 
    /*000027b8*/ BNE         VI_ProcSendPic_x2770
    /*000027bc*/ B           VI_ProcSendPic_x27a4
FUNC_END VI_ProcSendPic


FUNC_BEGIN VI_DRV_UpdatePipeStartFromUserSet
    /*000027c0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000027c4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000027c8*/ ADD         R0, R3, R0, LSL #2 
    /*000027cc*/ LDR         R3, [R0, #704]              @ 0x2c0 
    /*000027d0*/ MOV         R0, #0 
    /*000027d4*/ ADD         R3, R3, #36864              @ 0x9000 
    /*000027d8*/ LDR         R2, [R3, #2144]             @ 0x860 
    /*000027dc*/ CMP         R2, #1 
    /*000027e0*/ LDREQ       R2, [R3, #1480]             @ 0x5c8 
    /*000027e4*/ MOVEQ       R1, #0 
    /*000027e8*/ STREQ       R1, [R3, #2144]             @ 0x860 
    /*000027ec*/ STREQ       R2, [R3, #2224]             @ 0x8b0 
    /*000027f0*/ BX          LR 
FUNC_END VI_DRV_UpdatePipeStartFromUserSet


FUNC_BEGIN VI_DRV_UpdateChnEnableFromUserSet
    /*000027f4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000027f8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000027fc*/ ADD         R0, R3, R0, LSL #2 
    /*00002800*/ LDR         R3, [R0, #704]              @ 0x2c0 
    /*00002804*/ MOV         R0, #0 
    /*00002808*/ ADD         R1, R3, R1, LSL #2 
    /*0000280c*/ ADD         R1, R1, #36864              @ 0x9000 
    /*00002810*/ LDR         R3, [R1, #2148]             @ 0x864 
    /*00002814*/ CMP         R3, #1 
    /*00002818*/ LDREQ       R3, [R1, #1484]             @ 0x5cc 
    /*0000281c*/ MOVEQ       R2, #0 
    /*00002820*/ STREQ       R2, [R1, #2148]             @ 0x864 
    /*00002824*/ STREQ       R3, [R1, #2228]             @ 0x8b4 
    /*00002828*/ BX          LR 
FUNC_END VI_DRV_UpdateChnEnableFromUserSet


FUNC_BEGIN VI_DRV_UpdateChnAlignFromUserSet
    /*0000282c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00002830*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00002834*/ ADD         R0, R3, R0, LSL #2 
    /*00002838*/ LDR         R3, [R0, #704]              @ 0x2c0 
    /*0000283c*/ MOV         R0, #0 
    /*00002840*/ ADD         R1, R3, R1, LSL #2 
    /*00002844*/ ADD         R1, R1, #36864              @ 0x9000 
    /*00002848*/ LDR         R3, [R1, #2184]             @ 0x888 
    /*0000284c*/ CMP         R3, #1 
    /*00002850*/ LDREQ       R3, [R1, #1520]             @ 0x5f0 
    /*00002854*/ MOVEQ       R2, #0 
    /*00002858*/ STREQ       R2, [R1, #2184]             @ 0x888 
    /*0000285c*/ STREQ       R3, [R1, #2264]             @ 0x8d8 
    /*00002860*/ BX          LR 
FUNC_END VI_DRV_UpdateChnAlignFromUserSet


FUNC_BEGIN VI_DRV_UpdatePipeRepeatModeFromUserSet
    /*00002864*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00002868*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0000286c*/ ADD         R0, R3, R0, LSL #2 
    /*00002870*/ LDR         R3, [R0, #704]              @ 0x2c0 
    /*00002874*/ MOV         R0, #0 
    /*00002878*/ ADD         R3, R3, #36864              @ 0x9000 
    /*0000287c*/ LDR         R2, [R3, #2220]             @ 0x8ac 
    /*00002880*/ CMP         R2, #1 
    /*00002884*/ LDREQ       R2, [R3, #2040]             @ 0x7f8 
    /*00002888*/ MOVEQ       R1, #0 
    /*0000288c*/ STREQ       R1, [R3, #2220]             @ 0x8ac 
    /*00002890*/ STREQ       R2, [R3, #2784]             @ 0xae0 
    /*00002894*/ BX          LR 
FUNC_END VI_DRV_UpdatePipeRepeatModeFromUserSet


FUNC_BEGIN VI_UpdateWorkingPipeMkpAttr
    /*00002898*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000289c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000028a0*/ ADD         R3, R3, R0, LSL #2 
    /*000028a4*/ PUSH        {R4, LR} 
    /*000028a8*/ MOV         R4, R0 
    /*000028ac*/ LDR         R3, [R3, #704]              @ 0x2c0 
    /*000028b0*/ ADD         R3, R3, #36864              @ 0x9000 
    /*000028b4*/ LDR         R2, [R3, #2144]             @ 0x860 
    /*000028b8*/ CMP         R2, #1 
    /*000028bc*/ LDREQ       R2, [R3, #1480]             @ 0x5c8 
    /*000028c0*/ MOVEQ       R1, #0 
    /*000028c4*/ STREQ       R1, [R3, #2144]             @ 0x860 
    /*000028c8*/ STREQ       R2, [R3, #2224]             @ 0x8b0 
    /*000028cc*/ LDR         R2, [R3, #2220]             @ 0x8ac 
    /*000028d0*/ CMP         R2, #1 
    /*000028d4*/ LDREQ       R2, [R3, #2040]             @ 0x7f8 
    /*000028d8*/ MOVEQ       R1, #0 
    /*000028dc*/ STREQ       R1, [R3, #2220]             @ 0x8ac 
    /*000028e0*/ STREQ       R2, [R3, #2784]             @ 0xae0 
    /*000028e4*/ BL          0x00000000000028E4          @ VI_DRV_UpdateWorkingPipeDrvAttr [R_ARM_CALL: .text+0x2ae44] 
    /*000028e8*/ MOV         R0, R4 
    /*000028ec*/ BL          0x00000000000028EC          @ VI_UpdatePipeSnapCtxFromUserSet [R_ARM_CALL: .text+0x186a8] 
    /*000028f0*/ MOV         R0, #0 
    /*000028f4*/ POP         {R4, PC} 
FUNC_END VI_UpdateWorkingPipeMkpAttr


FUNC_BEGIN VI_UpdateWorkingChnMkpAttr
    /*000028f8*/ CMP         R1, #8 
    /*000028fc*/ PUSH        {R4, R5, R6, LR} 
    /*00002900*/ MOV         R4, R1 
    /*00002904*/ MOV         R5, R0 
    /*00002908*/ BHI         VI_UpdateWorkingChnMkpAttr_x295c
    /*0000290c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00002910*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00002914*/ ADD         R3, R3, R0, LSL #2 
    /*00002918*/ LDR         R3, [R3, #704]              @ 0x2c0 
    /*0000291c*/ ADD         R3, R3, R1, LSL #2 
    /*00002920*/ ADD         R3, R3, #36864              @ 0x9000 
    /*00002924*/ LDR         R2, [R3, #2148]             @ 0x864 
    /*00002928*/ CMP         R2, #1 
    /*0000292c*/ LDREQ       R2, [R3, #1484]             @ 0x5cc 
    /*00002930*/ MOVEQ       R1, #0 
    /*00002934*/ STREQ       R1, [R3, #2148]             @ 0x864 
    /*00002938*/ STREQ       R2, [R3, #2228]             @ 0x8b4 
    /*0000293c*/ LDR         R2, [R3, #2184]             @ 0x888 
    /*00002940*/ CMP         R2, #1 
    /*00002944*/ LDREQ       R2, [R3, #1520]             @ 0x5f0 
    /*00002948*/ MOVEQ       R1, #0 
    /*0000294c*/ STREQ       R1, [R3, #2184]             @ 0x888 
    /*00002950*/ STREQ       R2, [R3, #2264]             @ 0x8d8 
    /*00002954*/ CMP         R4, #0 
    /*00002958*/ BEQ         VI_UpdateWorkingChnMkpAttr_x2970
    VI_UpdateWorkingChnMkpAttr_x295c:
    /*0000295c*/ MOV         R1, R4 
    /*00002960*/ MOV         R0, R5 
    /*00002964*/ BL          0x0000000000002964          @ VI_DRV_UpdateWorkingChnDrvAttr [R_ARM_CALL: .text+0x2af08] 
    /*00002968*/ MOV         R0, #0 
    /*0000296c*/ POP         {R4, R5, R6, PC} 
    VI_UpdateWorkingChnMkpAttr_x2970:
    /*00002970*/ MOV         R1, R4 
    /*00002974*/ BL          0x0000000000002974          @ VI_UpdateChnDisAttr [R_ARM_CALL: .text+0x22d64] 
    /*00002978*/ MOV         R1, R4 
    /*0000297c*/ MOV         R0, R5 
    /*00002980*/ BL          0x0000000000002980          @ VI_UpdateChnGdcAttr [R_ARM_CALL: .text+0x20d94] 
    /*00002984*/ B           VI_UpdateWorkingChnMkpAttr_x295c
FUNC_END VI_UpdateWorkingChnMkpAttr


FUNC_BEGIN VI_UpdateWorkingPipeChnMkpAttr
    /*00002988*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000298c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00002990*/ ADD         R3, R3, R0, LSL #2 
    /*00002994*/ PUSH        {R4, LR} 
    /*00002998*/ MOV         R4, R0 
    /*0000299c*/ LDR         R1, [R3, #704]              @ 0x2c0 
    /*000029a0*/ ADD         R3, R1, #36864              @ 0x9000 
    /*000029a4*/ LDR         R2, [R3, #2144]             @ 0x860 
    /*000029a8*/ CMP         R2, #1 
    /*000029ac*/ LDREQ       R2, [R3, #1480]             @ 0x5c8 
    /*000029b0*/ MOVEQ       R0, #0 
    /*000029b4*/ STREQ       R0, [R3, #2144]             @ 0x860 
    /*000029b8*/ STREQ       R2, [R3, #2224]             @ 0x8b0 
    /*000029bc*/ LDR         R2, [R3, #2220]             @ 0x8ac 
    /*000029c0*/ CMP         R2, #1 
    /*000029c4*/ LDREQ       R2, [R3, #2040]             @ 0x7f8 
    /*000029c8*/ MOVEQ       R0, #0 
    /*000029cc*/ STREQ       R0, [R3, #2220]             @ 0x8ac 
    /*000029d0*/ MOV         R0, #0 
    /*000029d4*/ STREQ       R2, [R3, #2784]             @ 0xae0 
    /*000029d8*/ ADD         R3, R1, #38144              @ 0x9500 
    /*000029dc*/ MOV         R1, R3 
    /*000029e0*/ ADD         R3, R3, #204                @ 0xcc 
    /*000029e4*/ ADD         R1, R1, #240                @ 0xf0 
    VI_UpdateWorkingPipeChnMkpAttr_x29e8:
    /*000029e8*/ LDR         R2, [R3, #664]              @ 0x298 
    /*000029ec*/ ADD         R3, R3, #4 
    /*000029f0*/ CMP         R2, #1 
    /*000029f4*/ STREQ       R0, [R3, #660]              @ 0x294 
    /*000029f8*/ LDREQ       R2, [R3, #-4] 
    /*000029fc*/ STREQ       R2, [R3, #740]              @ 0x2e4 
    /*00002a00*/ LDR         R2, [R3, #696]              @ 0x2b8 
    /*00002a04*/ CMP         R2, #1 
    /*00002a08*/ STREQ       R0, [R3, #696]              @ 0x2b8 
    /*00002a0c*/ LDREQ       R2, [R3, #32] 
    /*00002a10*/ STREQ       R2, [R3, #776]              @ 0x308 
    /*00002a14*/ CMP         R3, R1 
    /*00002a18*/ BNE         VI_UpdateWorkingPipeChnMkpAttr_x29e8
    /*00002a1c*/ MOV         R1, #0 
    /*00002a20*/ MOV         R0, R4 
    /*00002a24*/ BL          0x0000000000002A24          @ VI_UpdateChnDisAttr [R_ARM_CALL: .text+0x22d64] 
    /*00002a28*/ MOV         R1, #0 
    /*00002a2c*/ MOV         R0, R4 
    /*00002a30*/ BL          0x0000000000002A30          @ VI_UpdateChnGdcAttr [R_ARM_CALL: .text+0x20d94] 
    /*00002a34*/ MOV         R0, R4 
    /*00002a38*/ BL          0x0000000000002A38          @ VI_DRV_UpdateWorkingPipeChnDrvAttr [R_ARM_CALL: .text+0x2b064] 
    /*00002a3c*/ MOV         R0, R4 
    /*00002a40*/ BL          0x0000000000002A40          @ VI_UpdatePipeSnapCtxFromUserSet [R_ARM_CALL: .text+0x186a8] 
    /*00002a44*/ MOV         R0, #0 
    /*00002a48*/ POP         {R4, PC} 
FUNC_END VI_UpdateWorkingPipeChnMkpAttr


FUNC_BEGIN VI_ProcSendBnrRaw
    /*00002a4c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00002a50*/ SUBS        R9, R1, #0 
    /*00002a54*/ SUB         SP, SP, #20 
    /*00002a58*/ MOV         R8, R0 
    /*00002a5c*/ BEQ         VI_ProcSendBnrRaw_x2b84
    VI_ProcSendBnrRaw_x2a60:
    /*00002a60*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00002a64*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00002a68*/ ADD         R3, R7, R8, LSL #2 
    /*00002a6c*/ LDR         R4, [R3, #704]              @ 0x2c0 
    /*00002a70*/ ADD         R3, R4, #36864              @ 0x9000 
    /*00002a74*/ LDR         R6, [R3, #532]              @ 0x214 
    /*00002a78*/ CMP         R6, #0 
    /*00002a7c*/ ADDNE       R4, R4, #37376              @ 0x9200 
    /*00002a80*/ ADDNE       R4, R4, #24 
    /*00002a84*/ BNE         VI_ProcSendBnrRaw_x2aa4
    /*00002a88*/ B           VI_ProcSendBnrRaw_x2aec
    VI_ProcSendBnrRaw_x2a8c:
    /*00002a8c*/ SUBS        R0, R5, #336                @ 0x150 
    /*00002a90*/ BEQ         VI_ProcSendBnrRaw_x2ac8
    /*00002a94*/ BL          0x0000000000002A94          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00002a98*/ MOV         R1, R5 
    /*00002a9c*/ MOV         R0, R4 
    /*00002aa0*/ BL          0x0000000000002AA0          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    VI_ProcSendBnrRaw_x2aa4:
    /*00002aa4*/ MOV         R0, R4 
    /*00002aa8*/ BL          0x0000000000002AA8          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00002aac*/ CMP         R6, R0 
    /*00002ab0*/ MOV         R0, R4 
    /*00002ab4*/ BHI         VI_ProcSendBnrRaw_x2af8
    /*00002ab8*/ BL          0x0000000000002AB8          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*00002abc*/ MOV         R1, #0 
    /*00002ac0*/ SUBS        R5, R0, #0 
    /*00002ac4*/ BNE         VI_ProcSendBnrRaw_x2a8c
    VI_ProcSendBnrRaw_x2ac8:
    /*00002ac8*/ MOVW        R3, #1415                   @ 0x587 
    /*00002acc*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x628] 
    /*00002ad0*/ STR         R3, [SP] 
    /*00002ad4*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x628] 
    /*00002ad8*/ STR         R8, [SP, #4] 
    /*00002adc*/ MOV         R1, #16 
    /*00002ae0*/ LDR         R3, [PC, #224]              @ 0x0000000000002bc8 
    /*00002ae4*/ MOV         R0, #3 
    /*00002ae8*/ BL          0x0000000000002AE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_ProcSendBnrRaw_x2aec:
    /*00002aec*/ MOV         R0, #0 
    /*00002af0*/ ADD         SP, SP, #20 
    /*00002af4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_ProcSendBnrRaw_x2af8:
    /*00002af8*/ BL          0x0000000000002AF8          @ VI_QueueGetFree [R_ARM_CALL: .text+0x161cc] 
    /*00002afc*/ CMP         R0, #0 
    /*00002b00*/ BEQ         VI_ProcSendBnrRaw_x2ba4
    /*00002b04*/ SUBS        R5, R0, #336                @ 0x150 
    /*00002b08*/ BEQ         VI_ProcSendBnrRaw_x2ba4
    VI_ProcSendBnrRaw_x2b0c:
    /*00002b0c*/ MOV         R1, R9 
    /*00002b10*/ MOV         R2, #336                    @ 0x150 
    /*00002b14*/ MOV         R0, R5 
    /*00002b18*/ BL          0x0000000000002B18          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00002b1c*/ MOV         R1, #0 
    /*00002b20*/ MOV         R0, R5 
    /*00002b24*/ BL          0x0000000000002B24          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00002b28*/ CMP         R0, #0 
    /*00002b2c*/ BNE         VI_ProcSendBnrRaw_x2b58
    VI_ProcSendBnrRaw_x2b30:
    /*00002b30*/ ADD         R1, R5, #336                @ 0x150 
    /*00002b34*/ MOV         R0, R4 
    /*00002b38*/ BL          0x0000000000002B38          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    /*00002b3c*/ MOV         R0, #176                    @ 0xb0 
    /*00002b40*/ MLA         R0, R0, R8, R7 
    /*00002b44*/ ADD         R0, R0, #92                 @ 0x5c 
    /*00002b48*/ BL          0x0000000000002B48          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00002b4c*/ MOV         R0, #0 
    /*00002b50*/ ADD         SP, SP, #20 
    /*00002b54*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_ProcSendBnrRaw_x2b58:
    /*00002b58*/ STR         R0, [SP, #8] 
    /*00002b5c*/ MOVW        R3, #1433                   @ 0x599 
    /*00002b60*/ STR         R8, [SP, #4] 
    /*00002b64*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x688] 
    /*00002b68*/ STR         R3, [SP] 
    /*00002b6c*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x688] 
    /*00002b70*/ LDR         R3, [PC, #80]               @ 0x0000000000002bc8 
    /*00002b74*/ MOV         R1, #16 
    /*00002b78*/ MOV         R0, #3 
    /*00002b7c*/ BL          0x0000000000002B7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002b80*/ B           VI_ProcSendBnrRaw_x2b30
    VI_ProcSendBnrRaw_x2b84:
    /*00002b84*/ MOVW        R3, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x610] 
    /*00002b88*/ MOVW        R0, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d0] 
    /*00002b8c*/ MOVT        R3, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x610] 
    /*00002b90*/ MOVT        R0, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d0] 
    /*00002b94*/ MOVW        R2, #1399                   @ 0x577 
    /*00002b98*/ LDR         R1, [PC, #40]               @ 0x0000000000002bc8 
    /*00002b9c*/ BL          0x0000000000002B9C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002ba0*/ B           VI_ProcSendBnrRaw_x2a60
    VI_ProcSendBnrRaw_x2ba4:
    /*00002ba4*/ MOVW        R3, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x670] 
    /*00002ba8*/ MOVW        R0, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d0] 
    /*00002bac*/ MOVT        R3, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x670] 
    /*00002bb0*/ MOVT        R0, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d0] 
    /*00002bb4*/ MOVW        R2, #1426                   @ 0x592 
    /*00002bb8*/ LDR         R1, [PC, #8]                @ 0x0000000000002bc8 
    /*00002bbc*/ BL          0x0000000000002BBC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002bc0*/ MOV         R5, #0 
    /*00002bc4*/ B           VI_ProcSendBnrRaw_x2b0c
    /*00002bc8*/ ANDEQ       R0, R0, R8, ASR #1 
FUNC_END VI_ProcSendBnrRaw


FUNC_BEGIN VI_ProcBnrRawFrame
    /*00002bcc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00002bd0*/ MOV         R5, R0 
    /*00002bd4*/ BL          0x0000000000002BD4          @ VI_DRV_IsBnrSupport [R_ARM_CALL: .text+0x2770c] 
    /*00002bd8*/ CMP         R0, #1 
    /*00002bdc*/ BEQ         VI_ProcBnrRawFrame_x2bec
    VI_ProcBnrRawFrame_x2be0:
    /*00002be0*/ MOV         R5, #0 
    VI_ProcBnrRawFrame_x2be4:
    /*00002be4*/ MOV         R0, R5 
    /*00002be8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_ProcBnrRawFrame_x2bec:
    /*00002bec*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00002bf0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00002bf4*/ ADD         R3, R3, R5, LSL #2 
    /*00002bf8*/ MOV         R4, R0 
    /*00002bfc*/ MOV         R0, R5 
    /*00002c00*/ LDR         R7, [R3, #704]              @ 0x2c0 
    /*00002c04*/ ADD         R6, R7, #36864              @ 0x9000 
    /*00002c08*/ LDR         R1, [R6, #1020]             @ 0x3fc 
    /*00002c0c*/ BL          0x0000000000002C0C          @ VI_SNAP_ProcBnrRaw [R_ARM_CALL: .text+0x1a888] 
    /*00002c10*/ LDR         R3, [R6, #1016]             @ 0x3f8 
    /*00002c14*/ CMP         R3, #0 
    /*00002c18*/ BEQ         VI_ProcBnrRawFrame_x2be0
    /*00002c1c*/ LDR         R1, [R6, #1020]             @ 0x3fc 
    /*00002c20*/ CMP         R1, #0 
    /*00002c24*/ BNE         VI_ProcBnrRawFrame_x2c3c
    /*00002c28*/ ADD         R0, R7, #37376              @ 0x9200 
    /*00002c2c*/ MOV         R5, R1 
    /*00002c30*/ ADD         R0, R0, #72                 @ 0x48 
    /*00002c34*/ BL          0x0000000000002C34          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00002c38*/ B           VI_ProcBnrRawFrame_x2be4
    VI_ProcBnrRawFrame_x2c3c:
    /*00002c3c*/ ADD         R7, R7, #37376              @ 0x9200 
    /*00002c40*/ MOV         R0, R5 
    /*00002c44*/ ADD         R7, R7, #72                 @ 0x48 
    /*00002c48*/ MOV         R1, R7 
    /*00002c4c*/ BL          0x0000000000002C4C          @ VI_ProcSendBnrRaw [R_ARM_CALL: .text+0x2a4c] 
    /*00002c50*/ MOV         R1, #0 
    /*00002c54*/ MOV         R5, R0 
    /*00002c58*/ MOV         R0, R7 
    /*00002c5c*/ BL          0x0000000000002C5C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00002c60*/ MOV         R3, #0 
    /*00002c64*/ STR         R4, [R6, #1024]             @ 0x400 
    /*00002c68*/ STR         R3, [R6, #1016]             @ 0x3f8 
    /*00002c6c*/ B           VI_ProcBnrRawFrame_x2be4
FUNC_END VI_ProcBnrRawFrame


FUNC_BEGIN VI_ProcChnFrame
    /*00002c70*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00002c74*/ MOV         R4, R2 
    /*00002c78*/ LDR         R3, [R2, #692]              @ 0x2b4 
    /*00002c7c*/ SUB         SP, SP, #20 
    /*00002c80*/ MOV         R6, R0 
    /*00002c84*/ MOV         R7, R1 
    /*00002c88*/ CMP         R3, #1 
    /*00002c8c*/ BEQ         VI_ProcChnFrame_x2c98
    /*00002c90*/ LDR         R2, [R2, #700]              @ 0x2bc 
    /*00002c94*/ BL          0x0000000000002C94          @ VI_SNAP_ProcChnFrame [R_ARM_CALL: .text+0x1a4ec] 
    VI_ProcChnFrame_x2c98:
    /*00002c98*/ LDR         R3, [R4, #696]              @ 0x2b8 
    /*00002c9c*/ CMP         R3, #0 
    /*00002ca0*/ BEQ         VI_ProcChnFrame_x2cb0
    /*00002ca4*/ LDR         R3, [R4, #700]              @ 0x2bc 
    /*00002ca8*/ CMP         R3, #0 
    /*00002cac*/ BNE         VI_ProcChnFrame_x2d04
    VI_ProcChnFrame_x2cb0:
    /*00002cb0*/ MOV         R2, #0 
    /*00002cb4*/ MOV         R1, R7 
    /*00002cb8*/ MOV         R0, R6 
    /*00002cbc*/ MOV         R5, R2 
    /*00002cc0*/ BL          0x0000000000002CC0          @ VI_ChnFrameRateStatistic [R_ARM_CALL: .text+0x222c] 
    VI_ProcChnFrame_x2cc4:
    /*00002cc4*/ LDR         R3, [R4, #696]              @ 0x2b8 
    /*00002cc8*/ CMP         R3, #0 
    /*00002ccc*/ BNE         VI_ProcChnFrame_x2ddc
    VI_ProcChnFrame_x2cd0:
    /*00002cd0*/ LDR         R3, [R4, #708]              @ 0x2c4 
    /*00002cd4*/ CMP         R3, #0 
    /*00002cd8*/ BEQ         VI_ProcChnFrame_x2cf0
    /*00002cdc*/ MOV         R1, #0 
    /*00002ce0*/ ADD         R0, R4, #336                @ 0x150 
    /*00002ce4*/ BL          0x0000000000002CE4          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00002ce8*/ MOV         R3, #0 
    /*00002cec*/ STR         R3, [R4, #708]              @ 0x2c4 
    VI_ProcChnFrame_x2cf0:
    /*00002cf0*/ MOV         R0, R5 
    /*00002cf4*/ MOV         R3, #1 
    /*00002cf8*/ STR         R3, [R4, #704]              @ 0x2c0 
    /*00002cfc*/ ADD         SP, SP, #20 
    /*00002d00*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_ProcChnFrame_x2d04:
    /*00002d04*/ LDR         R5, [R4, #704]              @ 0x2c0 
    /*00002d08*/ CMP         R5, #0 
    /*00002d0c*/ BNE         VI_ProcChnFrame_x2cb0
    /*00002d10*/ MOV         R2, #176                    @ 0xb0 
    /*00002d14*/ MOVW        R8, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00002d18*/ MUL         R2, R2, R6 
    /*00002d1c*/ MOVT        R8, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00002d20*/ ADD         R3, R8, R6, LSL #2 
    /*00002d24*/ LDR         R3, [R3, #704]              @ 0x2c0 
    /*00002d28*/ LDR         R2, [R8, R2] 
    /*00002d2c*/ CMP         R2, #1 
    /*00002d30*/ BEQ         VI_ProcChnFrame_x2df4
    /*00002d34*/ ADD         R3, R3, #36864              @ 0x9000 
    /*00002d38*/ ADD         R3, R3, R7, LSL #2 
    /*00002d3c*/ LDR         R3, [R3, #2228]             @ 0x8b4 
    /*00002d40*/ CMP         R3, #0 
    /*00002d44*/ BEQ         VI_ProcChnFrame_x2df4
    /*00002d48*/ MOV         R3, #19 
    /*00002d4c*/ LDR         R2, [R4, #232]              @ 0xe8 
    /*00002d50*/ MLA         R3, R3, R6, R7 
    /*00002d54*/ ADD         R3, R3, #8 
    /*00002d58*/ ADD         R3, R8, R3, LSL #2 
    /*00002d5c*/ LDR         R1, [R3, #724]              @ 0x2d4 
    /*00002d60*/ CMP         R1, R2 
    /*00002d64*/ BHI         VI_ProcChnFrame_x2e3c
    /*00002d68*/ LDR         R1, [R4, #692]              @ 0x2b4 
    /*00002d6c*/ STR         R2, [R3, #724]              @ 0x2d4 
    /*00002d70*/ CMP         R1, #1 
    /*00002d74*/ BEQ         VI_ProcChnFrame_x2d90
    /*00002d78*/ MOV         R1, R7 
    /*00002d7c*/ MOV         R0, R6 
    /*00002d80*/ BL          0x0000000000002D80          @ VI_DRV_PrepareChnCoverExInfo [R_ARM_CALL: .text+0x2d014] 
    /*00002d84*/ MOV         R1, R7 
    /*00002d88*/ MOV         R0, R6 
    /*00002d8c*/ BL          0x0000000000002D8C          @ VI_DRV_PrepareChnOsdInfo [R_ARM_CALL: .text+0x2d1d0] 
    VI_ProcChnFrame_x2d90:
    /*00002d90*/ MOV         R3, #1 
    /*00002d94*/ MOV         R2, R4 
    /*00002d98*/ MOV         R1, R7 
    /*00002d9c*/ MOV         R0, R6 
    /*00002da0*/ BL          0x0000000000002DA0          @ VI_SendPhyChnPic2ExtChn [R_ARM_CALL: .text+0x23c8] 
    /*00002da4*/ BL          0x0000000000002DA4          @ VI_IsDisExist [R_ARM_CALL: .text+0x22f40] 
    /*00002da8*/ SUBS        R5, R0, #0 
    /*00002dac*/ BNE         VI_ProcChnFrame_x2e20
    /*00002db0*/ BL          0x0000000000002DB0          @ VI_IsGdcExist [R_ARM_CALL: .text+0x21748] 
    /*00002db4*/ SUBS        R9, R0, #0 
    /*00002db8*/ BEQ         VI_ProcChnFrame_x2e68
    /*00002dbc*/ MOV         R1, R7 
    /*00002dc0*/ MOV         R0, R6 
    /*00002dc4*/ LDR         R3, [PC, #224]              @ 0x0000000000002eac 
    /*00002dc8*/ MOV         R2, R4 
    /*00002dcc*/ STR         R5, [R8, #1696]             @ 0x6a0 
    /*00002dd0*/ BL          0x0000000000002DD0          @ VI_SubmitFrame2Gdc [R_ARM_CALL: .text+0x228d4] 
    /*00002dd4*/ MOV         R5, R0 
    /*00002dd8*/ B           VI_ProcChnFrame_x2cc4
    VI_ProcChnFrame_x2ddc:
    /*00002ddc*/ MOV         R1, #0 
    /*00002de0*/ MOV         R0, R4 
    /*00002de4*/ BL          0x0000000000002DE4          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00002de8*/ MOV         R3, #0 
    /*00002dec*/ STR         R3, [R4, #696]              @ 0x2b8 
    /*00002df0*/ B           VI_ProcChnFrame_x2cd0
    VI_ProcChnFrame_x2df4:
    /*00002df4*/ MOV         R3, #1520                   @ 0x5f0 
    /*00002df8*/ STR         R6, [SP, #4] 
    /*00002dfc*/ STR         R3, [SP] 
    /*00002e00*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c0] 
    /*00002e04*/ LDR         R3, [PC, #164]              @ 0x0000000000002eb0 
    /*00002e08*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c0] 
    /*00002e0c*/ MOV         R1, #16 
    /*00002e10*/ MOV         R0, #7 
    /*00002e14*/ BL          0x0000000000002E14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002e18*/ MOV         R5, #0 
    /*00002e1c*/ B           VI_ProcChnFrame_x2cc4
    VI_ProcChnFrame_x2e20:
    /*00002e20*/ MOV         R1, R7 
    /*00002e24*/ MOV         R0, R6 
    /*00002e28*/ ADD         R3, R4, #708                @ 0x2c4 
    /*00002e2c*/ MOV         R2, R4 
    /*00002e30*/ BL          0x0000000000002E30          @ VI_SubmitFrame2Dis [R_ARM_CALL: .text+0x24ba4] 
    /*00002e34*/ MOV         R5, R0 
    /*00002e38*/ B           VI_ProcChnFrame_x2cc4
    VI_ProcChnFrame_x2e3c:
    /*00002e3c*/ MOVW        R3, #1526                   @ 0x5f6 
    /*00002e40*/ STR         R7, [SP, #8] 
    /*00002e44*/ STR         R3, [SP] 
    /*00002e48*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f4] 
    /*00002e4c*/ STR         R6, [SP, #4] 
    /*00002e50*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f4] 
    /*00002e54*/ LDR         R3, [PC, #84]               @ 0x0000000000002eb0 
    /*00002e58*/ MOV         R1, #16 
    /*00002e5c*/ MOV         R0, #7 
    /*00002e60*/ BL          0x0000000000002E60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002e64*/ B           VI_ProcChnFrame_x2cc4
    VI_ProcChnFrame_x2e68:
    /*00002e68*/ BL          0x0000000000002E68          @ VI_IsVgsExist [R_ARM_CALL: .text+0x170e8] 
    /*00002e6c*/ CMP         R0, #0 
    /*00002e70*/ BEQ         VI_ProcChnFrame_x2e90
    /*00002e74*/ STR         R9, [R4, #688]              @ 0x2b0 
    /*00002e78*/ MOV         R1, R7 
    /*00002e7c*/ MOV         R0, R6 
    /*00002e80*/ MOV         R2, R4 
    /*00002e84*/ BL          0x0000000000002E84          @ VI_SubmitFrame2Vgs [R_ARM_CALL: .text+0x17fd4] 
    /*00002e88*/ MOV         R5, R0 
    /*00002e8c*/ B           VI_ProcChnFrame_x2cc4
    VI_ProcChnFrame_x2e90:
    /*00002e90*/ STR         R0, [R4, #688]              @ 0x2b0 
    /*00002e94*/ MOV         R1, R7 
    /*00002e98*/ MOV         R0, R6 
    /*00002e9c*/ MOV         R2, R4 
    /*00002ea0*/ BL          0x0000000000002EA0          @ VI_ProcSendPic [R_ARM_CALL: .text+0x26e8] 
    /*00002ea4*/ MOV         R5, R0 
    /*00002ea8*/ B           VI_ProcChnFrame_x2cc4
    /*00002eac*/ ANDEQ       R0, R0, R0, LSL R4 
    /*00002eb0*/ LDRDEQ      R0, [R0], -IP 
FUNC_END VI_ProcChnFrame


FUNC_BEGIN VI_ProcOfflineIrqRoute
    /*00002eb4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00002eb8*/ LSL         R9, R0, #2 
    /*00002ebc*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00002ec0*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00002ec4*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00002ec8*/ ADD         IP, R5, R9 
    /*00002ecc*/ MOV         R3, #0 
    /*00002ed0*/ MOV         R4, R0 
    /*00002ed4*/ STR         R1, [SP, #12] 
    /*00002ed8*/ MOV         R7, R2 
    /*00002edc*/ LDR         R6, [IP, #704]              @ 0x2c0 
    /*00002ee0*/ STR         R3, [SP, #32] 
    /*00002ee4*/ STR         R3, [SP, #36]               @ 0x24 
    /*00002ee8*/ BL          0x0000000000002EE8          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00002eec*/ SUBS        R8, R0, #0 
    /*00002ef0*/ BEQ         VI_ProcOfflineIrqRoute_x2f00
    /*00002ef4*/ MOV         R0, R8 
    /*00002ef8*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00002efc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcOfflineIrqRoute_x2f00:
    /*00002f00*/ MOV         FP, #176                    @ 0xb0 
    /*00002f04*/ ADD         R3, R6, #16384              @ 0x4000 
    /*00002f08*/ MLA         FP, FP, R4, R5 
    /*00002f0c*/ ADD         R1, SP, #28 
    /*00002f10*/ MOV         SL, R3 
    /*00002f14*/ CLZ         R7, R7 
    /*00002f18*/ ADD         FP, FP, #140                @ 0x8c 
    /*00002f1c*/ LSR         R7, R7, #5 
    /*00002f20*/ MOV         R0, FP 
    /*00002f24*/ BL          0x0000000000002F24          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002f28*/ MOV         R0, R4 
    /*00002f2c*/ BL          0x0000000000002F2C          @ VI_UpdateWorkingPipeChnMkpAttr [R_ARM_CALL: .text+0x2988] 
    /*00002f30*/ MOV         R1, R8 
    /*00002f34*/ MOV         R0, R4 
    /*00002f38*/ BL          0x0000000000002F38          @ VI_DRV_SwitchBeSttInfo [R_ARM_CALL: .text+0x38810] 
    /*00002f3c*/ MOV         R0, R4 
    /*00002f40*/ BL          0x0000000000002F40          @ VI_DRV_StitchSyncBeSttInfo [R_ARM_CALL: .text+0x38834] 
    /*00002f44*/ ADD         R2, SP, #36                 @ 0x24 
    /*00002f48*/ ADD         R1, SP, #32 
    /*00002f4c*/ MOV         R0, R4 
    /*00002f50*/ BL          0x0000000000002F50          @ VI_DRV_UpdateDISOffset [R_ARM_CALL: .text+0x2e990] 
    /*00002f54*/ ADD         R1, SP, #28 
    /*00002f58*/ MOV         R0, FP 
    /*00002f5c*/ BL          0x0000000000002F5C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002f60*/ MOV         R0, R4 
    /*00002f64*/ BL          0x0000000000002F64          @ VI_DRV_IspBeEndIntProc [R_ARM_CALL: .text+0x38a00] 
    /*00002f68*/ MOV         R0, R4 
    /*00002f6c*/ BL          0x0000000000002F6C          @ VI_LostRepeatFrame [R_ARM_CALL: .text+0x1b48] 
    /*00002f70*/ ADD         IP, R6, #36864              @ 0x9000 
    /*00002f74*/ ADD         R3, R6, #16320              @ 0x3fc0 
    /*00002f78*/ STR         R3, [SP, #16] 
    /*00002f7c*/ STR         R7, [IP, #1020]             @ 0x3fc 
    /*00002f80*/ ADD         R1, R6, #37632              @ 0x9300 
    /*00002f84*/ LDR         IP, [R6, #508]              @ 0x1fc 
    /*00002f88*/ LDRD        R2, [IP, #240]              @ 0xf0 
    /*00002f8c*/ STRD        R2, [R1, #56]               @ 0x38 
    /*00002f90*/ STR         R0, [SP, #20] 
    /*00002f94*/ MOV         R0, R4 
    /*00002f98*/ BL          0x0000000000002F98          @ VI_ProcBnrRawFrame [R_ARM_CALL: .text+0x2bcc] 
    /*00002f9c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00002fa0*/ LDR         R1, [SP, #32] 
    /*00002fa4*/ MOV         R3, SL 
    /*00002fa8*/ LDR         R2, [SP, #20] 
    /*00002fac*/ ADD         IP, R6, #16896              @ 0x4200 
    /*00002fb0*/ STR         R7, [SL, #636]              @ 0x27c 
    /*00002fb4*/ MOV         R7, SL 
    /*00002fb8*/ STRH        R0, [SL, #156]              @ 0x9c 
    /*00002fbc*/ MOVW        LR, #16560                  @ 0x40b0 
    /*00002fc0*/ STRH        R1, [SL, #152]              @ 0x98 
    /*00002fc4*/ ADD         R1, R6, #12288              @ 0x3000 
    /*00002fc8*/ STR         R2, [SL, #640]              @ 0x280 
    /*00002fcc*/ MOV         R0, #1 
    /*00002fd0*/ LDR         R2, [R6, #508]              @ 0x1fc 
    /*00002fd4*/ LDRD        SL, [R2, #240]              @ 0xf0 
    /*00002fd8*/ STRD        SL, [IP] 
    /*00002fdc*/ LDRD        SL, [R2, #240]              @ 0xf0 
    /*00002fe0*/ STRD        SL, [R6, LR] 
    /*00002fe4*/ LDR         IP, [R2, #232]              @ 0xe8 
    /*00002fe8*/ STR         IP, [R3, #168]              @ 0xa8 
    /*00002fec*/ LDR         IP, [R2, #28] 
    /*00002ff0*/ STR         IP, [R1, #4060]             @ 0xfdc 
    /*00002ff4*/ LDR         R2, [R2, #256]              @ 0x100 
    /*00002ff8*/ STR         R2, [R3, #192]              @ 0xc0 
    /*00002ffc*/ BL          0x0000000000002FFC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003000*/ LDR         R1, [R6, #508]              @ 0x1fc 
    /*00003004*/ LDR         R2, [R0, #108]              @ 0x6c 
    /*00003008*/ ADD         R0, R6, #16320              @ 0x3fc0 
    /*0000300c*/ BLX         R2 
    /*00003010*/ LDR         R2, [R7, #636]              @ 0x27c 
    /*00003014*/ CMP         R2, #0 
    /*00003018*/ BEQ         VI_ProcOfflineIrqRoute_x30ac
    VI_ProcOfflineIrqRoute_x301c:
    /*0000301c*/ ADD         R5, R5, R9 
    /*00003020*/ LDR         R2, [SP, #16] 
    /*00003024*/ MOV         R1, #0 
    /*00003028*/ MOV         R0, R4 
    /*0000302c*/ BL          0x000000000000302C          @ VI_ProcChnFrame [R_ARM_CALL: .text+0x2c70] 
    /*00003030*/ LDR         R5, [R5, #704]              @ 0x2c0 
    /*00003034*/ CMP         R5, #0 
    /*00003038*/ BEQ         VI_ProcOfflineIrqRoute_x30f0
    /*0000303c*/ LDR         R3, [R5, #508]              @ 0x1fc 
    /*00003040*/ CMP         R3, #0 
    /*00003044*/ BEQ         VI_ProcOfflineIrqRoute_x30c8
    /*00003048*/ MOV         R0, #2 
    /*0000304c*/ LDR         R6, [R3, #416]              @ 0x1a0 
    /*00003050*/ BL          0x0000000000003050          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003054*/ LDR         R3, [R0] 
    /*00003058*/ BLX         R3 
    /*0000305c*/ ADD         R3, R5, #32768              @ 0x8000 
    /*00003060*/ LDR         R2, [R3, #3852]             @ 0xf0c 
    /*00003064*/ LDR         R1, [R3, #3844]             @ 0xf04 
    /*00003068*/ SUB         R0, R0, R6 
    /*0000306c*/ STR         R0, [R3, #3848]             @ 0xf08 
    /*00003070*/ CMP         R0, R2 
    /*00003074*/ LDR         R2, [R3, #3832]             @ 0xef8 
    /*00003078*/ STRHI       R0, [R3, #3852]             @ 0xf0c 
    /*0000307c*/ SUB         R2, R2, R6 
    /*00003080*/ STR         R2, [R3, #3840]             @ 0xf00 
    /*00003084*/ CMP         R2, R1 
    /*00003088*/ STRHI       R2, [R3, #3844]             @ 0xf04 
    VI_ProcOfflineIrqRoute_x308c:
    /*0000308c*/ MOV         R0, R4 
    /*00003090*/ BL          0x0000000000003090          @ VI_ReleaseCurResource [R_ARM_CALL: .text+0x21b0] 
    /*00003094*/ LDR         R1, [SP, #12] 
    /*00003098*/ MOV         R0, R4 
    /*0000309c*/ BL          0x000000000000309C          @ VI_StartOneTask [R_ARM_CALL: .text+0x1ed4] 
    /*000030a0*/ MOV         R0, R8 
    /*000030a4*/ ADD         SP, SP, #44                 @ 0x2c 
    /*000030a8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcOfflineIrqRoute_x30ac:
    /*000030ac*/ LDR         R3, [R7, #632]              @ 0x278 
    /*000030b0*/ CMP         R3, #1 
    /*000030b4*/ ADDEQ       R6, R6, #32768              @ 0x8000 
    /*000030b8*/ LDREQ       R3, [R6, #3892]             @ 0xf34 
    /*000030bc*/ ADDEQ       R3, R3, #1 
    /*000030c0*/ STREQ       R3, [R6, #3892]             @ 0xf34 
    /*000030c4*/ B           VI_ProcOfflineIrqRoute_x301c
    VI_ProcOfflineIrqRoute_x30c8:
    /*000030c8*/ MOVW        R3, #933                    @ 0x3a5 
    /*000030cc*/ STR         R4, [SP, #4] 
    /*000030d0*/ STR         R3, [SP] 
    /*000030d4*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x734] 
    /*000030d8*/ LDR         R3, [PC, #56]               @ 0x0000000000003118 
    /*000030dc*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x734] 
    /*000030e0*/ MOV         R1, #16 
    /*000030e4*/ MOV         R0, #3 
    /*000030e8*/ BL          0x00000000000030E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000030ec*/ B           VI_ProcOfflineIrqRoute_x308c
    VI_ProcOfflineIrqRoute_x30f0:
    /*000030f0*/ MOVW        R3, #925                    @ 0x39d 
    /*000030f4*/ STR         R4, [SP, #4] 
    /*000030f8*/ STR         R3, [SP] 
    /*000030fc*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x228] 
    /*00003100*/ LDR         R3, [PC, #16]               @ 0x0000000000003118 
    /*00003104*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x228] 
    /*00003108*/ MOV         R1, #16 
    /*0000310c*/ MOV         R0, #3 
    /*00003110*/ BL          0x0000000000003110          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003114*/ B           VI_ProcOfflineIrqRoute_x308c
    /*00003118*/ ANDEQ       R0, R0, IP, ROR #1 
FUNC_END VI_ProcOfflineIrqRoute


FUNC_BEGIN VI_MKP_DestoryInputQueue
    /*0000311c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00003120*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003124*/ ADD         R3, R3, R0, LSL #2 
    /*00003128*/ PUSH        {R4, R5, R6, LR} 
    /*0000312c*/ MOV         R4, R0 
    /*00003130*/ LDR         R5, [R3, #704]              @ 0x2c0 
    /*00003134*/ BL          0x0000000000003134          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00003138*/ MOV         R1, R0 
    /*0000313c*/ MOV         R6, R0 
    /*00003140*/ MOV         R0, R4 
    /*00003144*/ BL          0x0000000000003144          @ VI_bLinearOffline [R_ARM_CALL: .text+0x1ad0] 
    /*00003148*/ CMP         R0, #1 
    /*0000314c*/ BEQ         VI_MKP_DestoryInputQueue_x3194
    /*00003150*/ MOV         R1, R6 
    /*00003154*/ MOV         R0, R4 
    /*00003158*/ BL          0x0000000000003158          @ VI_bWDROffline [R_ARM_CALL: .text+0x1afc] 
    /*0000315c*/ CMP         R0, #1 
    /*00003160*/ POPNE       {R4, R5, R6, PC} 
    /*00003164*/ LDR         R3, [R5, #40]               @ 0x28 
    /*00003168*/ CMP         R3, #0 
    /*0000316c*/ POPEQ       {R4, R5, R6, PC} 
    /*00003170*/ ADD         R0, R5, #40                 @ 0x28 
    /*00003174*/ BL          0x0000000000003174          @ VI_DestroyQueue [R_ARM_CALL: .text+0x16170] 
    /*00003178*/ LDR         R0, [R5, #40]               @ 0x28 
    /*0000317c*/ CMP         R0, #0 
    /*00003180*/ POPEQ       {R4, R5, R6, PC} 
    /*00003184*/ BL          0x0000000000003184          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00003188*/ MOV         R3, #0 
    /*0000318c*/ STR         R3, [R5, #40]               @ 0x28 
    /*00003190*/ POP         {R4, R5, R6, PC} 
    VI_MKP_DestoryInputQueue_x3194:
    /*00003194*/ LDR         R3, [R5, #4] 
    /*00003198*/ CMP         R3, #0 
    /*0000319c*/ POPEQ       {R4, R5, R6, PC} 
    /*000031a0*/ ADD         R0, R5, #4 
    /*000031a4*/ BL          0x00000000000031A4          @ VI_DestroyQueue [R_ARM_CALL: .text+0x16170] 
    /*000031a8*/ LDR         R0, [R5, #4] 
    /*000031ac*/ CMP         R0, #0 
    /*000031b0*/ POPEQ       {R4, R5, R6, PC} 
    /*000031b4*/ BL          0x00000000000031B4          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*000031b8*/ MOV         R3, #0 
    /*000031bc*/ STR         R3, [R5, #4] 
    /*000031c0*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_MKP_DestoryInputQueue


FUNC_BEGIN VI_ClearLinearPicQueue
    /*000031c4*/ PUSH        {R4, R5, R6, LR} 
    /*000031c8*/ SUBS        R5, R1, #0 
    /*000031cc*/ MOV         R6, R0 
    /*000031d0*/ BEQ         VI_ClearLinearPicQueue_x3234
    VI_ClearLinearPicQueue_x31d4:
    /*000031d4*/ LDR         R3, [R5] 
    /*000031d8*/ CMP         R3, #0 
    /*000031dc*/ BEQ         VI_ClearLinearPicQueue_x3244
    VI_ClearLinearPicQueue_x31e0:
    /*000031e0*/ MOV         R0, R5 
    /*000031e4*/ BL          0x00000000000031E4          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*000031e8*/ SUBS        R3, R0, #0 
    /*000031ec*/ MOV         R0, R5 
    /*000031f0*/ BEQ         VI_ClearLinearPicQueue_x322c
    /*000031f4*/ BL          0x00000000000031F4          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*000031f8*/ SUBS        R4, R0, #0 
    /*000031fc*/ BEQ         VI_ClearLinearPicQueue_x31e0
    /*00003200*/ SUBS        R0, R4, #580                @ 0x244 
    /*00003204*/ BEQ         VI_ClearLinearPicQueue_x31e0
    /*00003208*/ MOV         R1, #0 
    /*0000320c*/ BL          0x000000000000320C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00003210*/ SUB         R1, R4, #132                @ 0x84 
    /*00003214*/ MOV         R0, R6 
    /*00003218*/ BL          0x0000000000003218          @ VI_DRV_PutFreeBeBuf [R_ARM_CALL: .text+0x3883c] 
    /*0000321c*/ MOV         R1, R4 
    /*00003220*/ MOV         R0, R5 
    /*00003224*/ BL          0x0000000000003224          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00003228*/ B           VI_ClearLinearPicQueue_x31e0
    VI_ClearLinearPicQueue_x322c:
    /*0000322c*/ MOV         R0, R3 
    /*00003230*/ POP         {R4, R5, R6, PC} 
    VI_ClearLinearPicQueue_x3234:
    /*00003234*/ BL          0x000000000000133C 
    /*00003238*/ CMP         R0, #0 
    /*0000323c*/ POPNE       {R4, R5, R6, PC} 
    /*00003240*/ B           VI_ClearLinearPicQueue_x31d4
    VI_ClearLinearPicQueue_x3244:
    /*00003244*/ BL          0x000000000000133C 
    /*00003248*/ CMP         R0, #0 
    /*0000324c*/ POPNE       {R4, R5, R6, PC} 
    /*00003250*/ B           VI_ClearLinearPicQueue_x31e0
FUNC_END VI_ClearLinearPicQueue


FUNC_BEGIN VI_ClearWDRPicQueue
    /*00003254*/ PUSH        {R4, R5, R6, LR} 
    /*00003258*/ SUBS        R4, R1, #0 
    /*0000325c*/ MOV         R6, R0 
    /*00003260*/ BEQ         VI_ClearWDRPicQueue_x32c0
    VI_ClearWDRPicQueue_x3264:
    /*00003264*/ LDR         R3, [R4] 
    /*00003268*/ CMP         R3, #0 
    /*0000326c*/ BEQ         VI_ClearWDRPicQueue_x32d0
    VI_ClearWDRPicQueue_x3270:
    /*00003270*/ MOV         R0, R4 
    /*00003274*/ BL          0x0000000000003274          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00003278*/ SUBS        R3, R0, #0 
    /*0000327c*/ MOV         R0, R4 
    /*00003280*/ BEQ         VI_ClearWDRPicQueue_x32b8
    /*00003284*/ BL          0x0000000000003284          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*00003288*/ SUBS        R5, R0, #0 
    /*0000328c*/ SUB         R1, R5, #1024               @ 0x400 
    /*00003290*/ SUB         R1, R1, #8 
    /*00003294*/ BEQ         VI_ClearWDRPicQueue_x3270
    /*00003298*/ CMP         R1, #0 
    /*0000329c*/ BEQ         VI_ClearWDRPicQueue_x3270
    /*000032a0*/ MOV         R0, R6 
    /*000032a4*/ BL          0x00000000000032A4          @ VI_WDR_OfflineClearWdrPicNode [R_ARM_CALL: .text+0x203d8] 
    /*000032a8*/ MOV         R1, R5 
    /*000032ac*/ MOV         R0, R4 
    /*000032b0*/ BL          0x00000000000032B0          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*000032b4*/ B           VI_ClearWDRPicQueue_x3270
    VI_ClearWDRPicQueue_x32b8:
    /*000032b8*/ MOV         R0, R3 
    /*000032bc*/ POP         {R4, R5, R6, PC} 
    VI_ClearWDRPicQueue_x32c0:
    /*000032c0*/ BL          0x000000000000133C 
    /*000032c4*/ CMP         R0, #0 
    /*000032c8*/ POPNE       {R4, R5, R6, PC} 
    /*000032cc*/ B           VI_ClearWDRPicQueue_x3264
    VI_ClearWDRPicQueue_x32d0:
    /*000032d0*/ BL          0x000000000000133C 
    /*000032d4*/ CMP         R0, #0 
    /*000032d8*/ POPNE       {R4, R5, R6, PC} 
    /*000032dc*/ B           VI_ClearWDRPicQueue_x3270
FUNC_END VI_ClearWDRPicQueue


FUNC_BEGIN VI_ClearInputQueue
    /*000032e0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000032e4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000032e8*/ ADD         R3, R3, R0, LSL #2 
    /*000032ec*/ PUSH        {R4, R5, R6, LR} 
    /*000032f0*/ MOV         R4, R0 
    /*000032f4*/ LDR         R6, [R3, #704]              @ 0x2c0 
    /*000032f8*/ BL          0x00000000000032F8          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*000032fc*/ MOV         R1, R0 
    /*00003300*/ MOV         R5, R0 
    /*00003304*/ MOV         R0, R4 
    /*00003308*/ BL          0x0000000000003308          @ VI_bLinearOffline [R_ARM_CALL: .text+0x1ad0] 
    /*0000330c*/ CMP         R0, #1 
    /*00003310*/ BEQ         VI_ClearInputQueue_x3338
    /*00003314*/ MOV         R1, R5 
    /*00003318*/ MOV         R0, R4 
    /*0000331c*/ BL          0x000000000000331C          @ VI_bWDROffline [R_ARM_CALL: .text+0x1afc] 
    /*00003320*/ CMP         R0, #1 
    /*00003324*/ POPNE       {R4, R5, R6, PC} 
    /*00003328*/ ADD         R1, R6, #40                 @ 0x28 
    /*0000332c*/ MOV         R0, R4 
    /*00003330*/ POP         {R4, R5, R6, LR} 
    VI_ClearInputQueue_x3334:
    /*00003334*/ B           VI_ClearInputQueue_x3334    @ VI_ClearWDRPicQueue [R_ARM_JUMP24: .text+0x3254] 
    VI_ClearInputQueue_x3338:
    /*00003338*/ ADD         R1, R6, #4 
    /*0000333c*/ MOV         R0, R4 
    /*00003340*/ POP         {R4, R5, R6, LR} 
    VI_ClearInputQueue_x3344:
    /*00003344*/ B           VI_ClearInputQueue_x3344    @ VI_ClearLinearPicQueue [R_ARM_JUMP24: .text+0x31c4] 
FUNC_END VI_ClearInputQueue


FUNC_BEGIN VI_MKP_CreatInputQueue
    /*00003348*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000334c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003350*/ ADD         R3, R3, R0, LSL #2 
    /*00003354*/ PUSH        {R4, R5, R6, LR} 
    /*00003358*/ SUB         SP, SP, #8 
    /*0000335c*/ MOV         R4, R0 
    /*00003360*/ MOV         R6, R1 
    /*00003364*/ LDR         R5, [R3, #704]              @ 0x2c0 
    /*00003368*/ BL          0x0000000000003368          @ VI_bLinearOffline [R_ARM_CALL: .text+0x1ad0] 
    /*0000336c*/ CMP         R0, #1 
    /*00003370*/ BEQ         VI_MKP_CreatInputQueue_x3394
    /*00003374*/ MOV         R1, R6 
    /*00003378*/ MOV         R0, R4 
    /*0000337c*/ BL          0x000000000000337C          @ VI_bWDROffline [R_ARM_CALL: .text+0x1afc] 
    /*00003380*/ CMP         R0, #1 
    /*00003384*/ BEQ         VI_MKP_CreatInputQueue_x33e0
    VI_MKP_CreatInputQueue_x3388:
    /*00003388*/ MOV         R0, #0 
    VI_MKP_CreatInputQueue_x338c:
    /*0000338c*/ ADD         SP, SP, #8 
    /*00003390*/ POP         {R4, R5, R6, PC} 
    VI_MKP_CreatInputQueue_x3394:
    /*00003394*/ MOV         R0, #4736                   @ 0x1280 
    /*00003398*/ BL          0x0000000000003398          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*0000339c*/ CMP         R0, #0 
    /*000033a0*/ STR         R0, [R5, #4] 
    /*000033a4*/ BEQ         VI_MKP_CreatInputQueue_x3430
    /*000033a8*/ ADD         R6, R5, #4 
    /*000033ac*/ MOV         R0, R6 
    /*000033b0*/ BL          0x00000000000033B0          @ VI_CreatQueue [R_ARM_CALL: .text+0x16114] 
    /*000033b4*/ LDR         R4, [R5, #4] 
    /*000033b8*/ ADD         R5, R4, #5312               @ 0x14c0 
    /*000033bc*/ ADD         R4, R4, #580                @ 0x244 
    /*000033c0*/ ADD         R5, R5, #4 
    VI_MKP_CreatInputQueue_x33c4:
    /*000033c4*/ MOV         R1, R4 
    /*000033c8*/ MOV         R0, R6 
    /*000033cc*/ ADD         R4, R4, #592                @ 0x250 
    /*000033d0*/ BL          0x00000000000033D0          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*000033d4*/ CMP         R5, R4 
    /*000033d8*/ BNE         VI_MKP_CreatInputQueue_x33c4
    /*000033dc*/ B           VI_MKP_CreatInputQueue_x3388
    VI_MKP_CreatInputQueue_x33e0:
    /*000033e0*/ MOV         R0, #8320                   @ 0x2080 
    /*000033e4*/ BL          0x00000000000033E4          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*000033e8*/ CMP         R0, #0 
    /*000033ec*/ STR         R0, [R5, #40]               @ 0x28 
    /*000033f0*/ BEQ         VI_MKP_CreatInputQueue_x3480
    /*000033f4*/ ADD         R6, R5, #40                 @ 0x28 
    /*000033f8*/ MOV         R0, R6 
    /*000033fc*/ BL          0x00000000000033FC          @ VI_CreatQueue [R_ARM_CALL: .text+0x16114] 
    /*00003400*/ LDR         R5, [R5, #40]               @ 0x28 
    /*00003404*/ ADD         R4, R5, #1024               @ 0x400 
    /*00003408*/ ADD         R5, R5, #9344               @ 0x2480 
    /*0000340c*/ ADD         R4, R4, #8 
    /*00003410*/ ADD         R5, R5, #8 
    VI_MKP_CreatInputQueue_x3414:
    /*00003414*/ MOV         R1, R4 
    /*00003418*/ MOV         R0, R6 
    /*0000341c*/ ADD         R4, R4, #1040               @ 0x410 
    /*00003420*/ BL          0x0000000000003420          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00003424*/ CMP         R5, R4 
    /*00003428*/ BNE         VI_MKP_CreatInputQueue_x3414
    /*0000342c*/ B           VI_MKP_CreatInputQueue_x3388
    VI_MKP_CreatInputQueue_x3430:
    /*00003430*/ MOVW        R3, #1844                   @ 0x734 
    /*00003434*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x774] 
    /*00003438*/ STR         R3, [SP] 
    /*0000343c*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x774] 
    /*00003440*/ LDR         R3, [PC, #112]              @ 0x00000000000034b8 
    /*00003444*/ MOV         R1, #16 
    /*00003448*/ MOV         R0, #3 
    /*0000344c*/ BL          0x000000000000344C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003450*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ac] 
    /*00003454*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ac] 
    /*00003458*/ MOVW        R3, #1848                   @ 0x738 
    /*0000345c*/ STR         R4, [SP, #4] 
    /*00003460*/ STR         R3, [SP] 
    VI_MKP_CreatInputQueue_x3464:
    /*00003464*/ LDR         R3, [PC, #76]               @ 0x00000000000034b8 
    /*00003468*/ MOV         R1, #16 
    /*0000346c*/ MOV         R0, #3 
    /*00003470*/ BL          0x0000000000003470          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003474*/ MOVW        R0, #32780                  @ 0x800c 
    /*00003478*/ MOVT        R0, #40976                  @ 0xa010 
    /*0000347c*/ B           VI_MKP_CreatInputQueue_x338c
    VI_MKP_CreatInputQueue_x3480:
    /*00003480*/ MOVW        R3, #1855                   @ 0x73f 
    /*00003484*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x774] 
    /*00003488*/ STR         R3, [SP] 
    /*0000348c*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x774] 
    /*00003490*/ LDR         R3, [PC, #32]               @ 0x00000000000034b8 
    /*00003494*/ MOV         R1, #16 
    /*00003498*/ MOV         R0, #3 
    /*0000349c*/ BL          0x000000000000349C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000034a0*/ MOVW        R3, #1859                   @ 0x743 
    /*000034a4*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f0] 
    /*000034a8*/ STR         R4, [SP, #4] 
    /*000034ac*/ STR         R3, [SP] 
    /*000034b0*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f0] 
    /*000034b4*/ B           VI_MKP_CreatInputQueue_x3464
    /*000034b8*/ ANDEQ       R0, R0, R8, LSL #2 
FUNC_END VI_MKP_CreatInputQueue


FUNC_BEGIN VI_MKP_PipeWdrInit
    /*000034bc*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000034c0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000034c4*/ ADD         R3, R3, R0, LSL #2 
    /*000034c8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000034cc*/ SUB         SP, SP, #12 
    /*000034d0*/ MOV         R4, R0 
    /*000034d4*/ LDR         R6, [R3, #704]              @ 0x2c0 
    /*000034d8*/ BL          0x00000000000034D8          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*000034dc*/ CMP         R4, #3 
    /*000034e0*/ MOVHI       R5, #0 
    /*000034e4*/ BLS         VI_MKP_PipeWdrInit_x34f4
    VI_MKP_PipeWdrInit_x34e8:
    /*000034e8*/ MOV         R0, R5 
    /*000034ec*/ ADD         SP, SP, #12 
    /*000034f0*/ POP         {R4, R5, R6, R7, PC} 
    VI_MKP_PipeWdrInit_x34f4:
    /*000034f4*/ BL          0x00000000000034F4          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*000034f8*/ SUBS        R7, R0, #0 
    /*000034fc*/ BEQ         VI_MKP_PipeWdrInit_x358c
    /*00003500*/ MOV         R0, R4 
    /*00003504*/ BL          0x0000000000003504          @ VI_DRV_WDRPoolInit [R_ARM_CALL: .text+0x381c8] 
    /*00003508*/ SUBS        R5, R0, #0 
    /*0000350c*/ BNE         VI_MKP_PipeWdrInit_x3568
    /*00003510*/ ADD         R1, R6, #14912              @ 0x3a40 
    /*00003514*/ MOV         R0, R4 
    /*00003518*/ ADD         R1, R1, #56                 @ 0x38 
    /*0000351c*/ BL          0x000000000000351C          @ VI_DRV_PreallocVB [R_ARM_CALL: .text+0x38434] 
    /*00003520*/ SUBS        R5, R0, #0 
    /*00003524*/ BNE         VI_MKP_PipeWdrInit_x35c0
    /*00003528*/ MOV         R0, R4 
    /*0000352c*/ BL          0x000000000000352C          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*00003530*/ BL          0x0000000000003530          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00003534*/ SUB         R0, R0, #2 
    /*00003538*/ CMP         R0, #1 
    /*0000353c*/ ADDHI       R6, R6, #12288              @ 0x3000 
    /*00003540*/ BLS         VI_MKP_PipeWdrInit_x35ec
    VI_MKP_PipeWdrInit_x3544:
    /*00003544*/ MOV         R0, R4 
    /*00003548*/ BL          0x0000000000003548          @ VI_DRV_GetPipeDefaultVCNumber [R_ARM_CALL: .text+0x37d4c] 
    /*0000354c*/ MOV         R1, #1 
    /*00003550*/ MOV         R3, R0 
    /*00003554*/ STR         R0, [R6, #2220]             @ 0x8ac 
    /*00003558*/ LSL         R1, R1, R3 
    /*0000355c*/ MOV         R0, R4 
    /*00003560*/ BL          0x0000000000003560          @ VI_DRV_SetIspIdSel [R_ARM_CALL: .text+0x37ba4] 
    /*00003564*/ B           VI_MKP_PipeWdrInit_x34e8
    VI_MKP_PipeWdrInit_x3568:
    /*00003568*/ MOVW        R3, #1915                   @ 0x77b 
    /*0000356c*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x834] 
    /*00003570*/ STR         R3, [SP] 
    /*00003574*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x834] 
    /*00003578*/ LDR         R3, [PC, #136]              @ 0x0000000000003608 
    /*0000357c*/ MOV         R1, #16 
    /*00003580*/ MOV         R0, #3 
    /*00003584*/ BL          0x0000000000003584          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003588*/ B           VI_MKP_PipeWdrInit_x34e8
    VI_MKP_PipeWdrInit_x358c:
    /*0000358c*/ ADD         R6, R6, #12288              @ 0x3000 
    /*00003590*/ MOV         R1, #1 
    /*00003594*/ MOV         R0, R4 
    /*00003598*/ MOV         R5, R7 
    /*0000359c*/ LDR         R3, [R6, #2220]             @ 0x8ac 
    /*000035a0*/ LSL         R1, R1, R3 
    /*000035a4*/ BL          0x00000000000035A4          @ VI_DRV_SetIspIdSel [R_ARM_CALL: .text+0x37ba4] 
    /*000035a8*/ MOV         R0, R4 
    /*000035ac*/ MOV         R1, R7 
    /*000035b0*/ BL          0x00000000000035B0          @ VI_DRV_OnlineEnableWDRPic [R_ARM_CALL: .text+0x37e54] 
    /*000035b4*/ MOV         R0, R5 
    /*000035b8*/ ADD         SP, SP, #12 
    /*000035bc*/ POP         {R4, R5, R6, R7, PC} 
    VI_MKP_PipeWdrInit_x35c0:
    /*000035c0*/ MOVW        R3, #1924                   @ 0x784 
    /*000035c4*/ MOV         R1, #16 
    /*000035c8*/ STR         R3, [SP] 
    /*000035cc*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x86c] 
    /*000035d0*/ LDR         R3, [PC, #48]               @ 0x0000000000003608 
    /*000035d4*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x86c] 
    /*000035d8*/ MOV         R0, #3 
    /*000035dc*/ BL          0x00000000000035DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000035e0*/ MOV         R0, R4 
    /*000035e4*/ BL          0x00000000000035E4          @ VI_DRV_WDRPoolDeInit [R_ARM_CALL: .text+0x383d0] 
    /*000035e8*/ B           VI_MKP_PipeWdrInit_x34e8
    VI_MKP_PipeWdrInit_x35ec:
    /*000035ec*/ MOV         R0, R4 
    /*000035f0*/ ADD         R6, R6, #12288              @ 0x3000 
    /*000035f4*/ BL          0x00000000000035F4          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*000035f8*/ CMP         R0, #1 
    /*000035fc*/ MOVLS       R3, #1 
    /*00003600*/ STRLS       R3, [R6, #3112]             @ 0xc28 
    /*00003604*/ B           VI_MKP_PipeWdrInit_x3544
    /*00003608*/ ANDEQ       R0, R0, R0, LSR #2 
FUNC_END VI_MKP_PipeWdrInit


FUNC_BEGIN VI_MKP_PipeWdrDeInit
    /*0000360c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00003610*/ MOV         R4, R0 
    /*00003614*/ BL          0x0000000000003614          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00003618*/ MOV         R5, R0 
    /*0000361c*/ BL          0x000000000000361C          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*00003620*/ CMP         R0, #0 
    /*00003624*/ BNE         VI_MKP_PipeWdrDeInit_x3630
    VI_MKP_PipeWdrDeInit_x3628:
    /*00003628*/ MOV         R0, #0 
    /*0000362c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_MKP_PipeWdrDeInit_x3630:
    /*00003630*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00003634*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003638*/ ADD         R3, R3, R4, LSL #2 
    /*0000363c*/ MOV         R0, R4 
    /*00003640*/ LDR         R7, [R3, #704]              @ 0x2c0 
    /*00003644*/ BL          0x0000000000003644          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*00003648*/ MOV         R8, R0 
    /*0000364c*/ BL          0x000000000000364C          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00003650*/ CMP         R4, R8 
    /*00003654*/ CMPNE       R5, #2 
    /*00003658*/ MOVNE       R5, #1 
    /*0000365c*/ MOVEQ       R5, #0 
    /*00003660*/ SUB         R6, R0, #2 
    /*00003664*/ CMP         R6, #1 
    /*00003668*/ MOVHI       R5, #0 
    /*0000366c*/ ANDLS       R5, R5, #1 
    /*00003670*/ CMP         R5, #0 
    /*00003674*/ BNE         VI_MKP_PipeWdrDeInit_x36e0
    VI_MKP_PipeWdrDeInit_x3678:
    /*00003678*/ CMP         R6, #1 
    /*0000367c*/ MOVLS       R6, #0 
    /*00003680*/ MOVHI       R6, #1 
    /*00003684*/ CMP         R4, R8 
    /*00003688*/ MOVNE       R6, #0 
    /*0000368c*/ CMP         R6, #0 
    /*00003690*/ BEQ         VI_MKP_PipeWdrDeInit_x3628
    /*00003694*/ LDR         R1, [R7, #520]              @ 0x208 
    /*00003698*/ CMP         R1, #0 
    /*0000369c*/ ADDEQ       R5, R7, #40                 @ 0x28 
    /*000036a0*/ BEQ         VI_MKP_PipeWdrDeInit_x36cc
    /*000036a4*/ MOV         R0, R4 
    /*000036a8*/ ADD         R5, R7, #40                 @ 0x28 
    /*000036ac*/ BL          0x00000000000036AC          @ VI_WDR_OfflineClearWdrPicNode [R_ARM_CALL: .text+0x203d8] 
    /*000036b0*/ LDR         R1, [R7, #520]              @ 0x208 
    /*000036b4*/ MOV         R0, R5 
    /*000036b8*/ ADD         R1, R1, #1024               @ 0x400 
    /*000036bc*/ ADD         R1, R1, #8 
    /*000036c0*/ BL          0x00000000000036C0          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*000036c4*/ MOV         R3, #0 
    /*000036c8*/ STR         R3, [R7, #520]              @ 0x208 
    VI_MKP_PipeWdrDeInit_x36cc:
    /*000036cc*/ MOV         R1, R5 
    /*000036d0*/ MOV         R0, R4 
    /*000036d4*/ BL          0x00000000000036D4          @ VI_ClearWDRPicQueue [R_ARM_CALL: .text+0x3254] 
    /*000036d8*/ MOV         R0, #0 
    /*000036dc*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_MKP_PipeWdrDeInit_x36e0:
    /*000036e0*/ ADD         R5, R7, #12288              @ 0x3000 
    /*000036e4*/ LDR         R3, [R5, #3112]             @ 0xc28 
    /*000036e8*/ CMP         R3, #0 
    /*000036ec*/ BEQ         VI_MKP_PipeWdrDeInit_x3678
    /*000036f0*/ ADD         R0, R7, #14912              @ 0x3a40 
    /*000036f4*/ MOV         R1, #0 
    /*000036f8*/ ADD         R0, R0, #56                 @ 0x38 
    /*000036fc*/ BL          0x00000000000036FC          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00003700*/ MOV         R3, #0 
    /*00003704*/ STR         R3, [R5, #3112]             @ 0xc28 
    /*00003708*/ B           VI_MKP_PipeWdrDeInit_x3678
FUNC_END VI_MKP_PipeWdrDeInit


FUNC_BEGIN VI_Init_ErrIntDetect
    /*0000370c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00003710*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003714*/ LDR         R2, [R3, #1872]             @ 0x750 
    /*00003718*/ CMP         R2, #0 
    /*0000371c*/ BLT         VI_Init_ErrIntDetect_x3760
    /*00003720*/ MOVNE       R2, #1 
    /*00003724*/ STRNE       R2, [R0] 
    /*00003728*/ LDRNE       R1, [R3, #1872]             @ 0x750 
    /*0000372c*/ MOVEQ       R1, #1 
    /*00003730*/ MOVNE       R2, #0 
    /*00003734*/ STREQ       R2, [R0, #4] 
    /*00003738*/ STREQ       R2, [R0, #8] 
    /*0000373c*/ STREQ       R1, [R0] 
    /*00003740*/ STRNE       R2, [R0, #4] 
    /*00003744*/ STRNE       R2, [R0, #8] 
    /*00003748*/ STR         R1, [R0, #12] 
    VI_Init_ErrIntDetect_x374c:
    /*0000374c*/ LDR         R3, [R3, #1876]             @ 0x754 
    /*00003750*/ CMP         R3, #1 
    /*00003754*/ MOVLS       R3, #1 
    /*00003758*/ STR         R3, [R0, #16] 
    /*0000375c*/ BX          LR 
    VI_Init_ErrIntDetect_x3760:
    /*00003760*/ MOV         R2, #0 
    /*00003764*/ STR         R2, [R0] 
    /*00003768*/ STR         R2, [R0, #4] 
    /*0000376c*/ STR         R2, [R0, #8] 
    /*00003770*/ STR         R2, [R0, #12] 
    /*00003774*/ B           VI_Init_ErrIntDetect_x374c
FUNC_END VI_Init_ErrIntDetect


FUNC_BEGIN VI_PipeMkpCtxInit
    /*00003778*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000377c*/ MOV         R7, R0 
    /*00003780*/ SUB         SP, SP, #16 
    /*00003784*/ MOVW        R0, #39880                  @ 0x9bc8 
    /*00003788*/ MOV         R8, R1 
    /*0000378c*/ BL          0x000000000000378C          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00003790*/ SUBS        R4, R0, #0 
    /*00003794*/ BEQ         VI_PipeMkpCtxInit_x38c0
    /*00003798*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000379c*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000037a0*/ MOV         R5, #176                    @ 0xb0 
    /*000037a4*/ MOVW        R2, #39880                  @ 0x9bc8 
    /*000037a8*/ MLA         R5, R5, R7, R6 
    /*000037ac*/ MOV         R1, #0 
    /*000037b0*/ BL          0x00000000000037B0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000037b4*/ LDR         R3, [R8] 
    /*000037b8*/ ADD         R1, SP, #12 
    /*000037bc*/ ADD         R5, R5, #140                @ 0x8c 
    /*000037c0*/ STR         R3, [R4] 
    /*000037c4*/ MOV         R0, R5 
    /*000037c8*/ BL          0x00000000000037C8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000037cc*/ LDR         R2, [R6, #1872]             @ 0x750 
    /*000037d0*/ ADD         R0, R6, R7, LSL #2 
    /*000037d4*/ ADD         R3, R4, #32768              @ 0x8000 
    /*000037d8*/ CMP         R2, #0 
    /*000037dc*/ STR         R4, [R0, #704]              @ 0x2c0 
    /*000037e0*/ BLT         VI_PipeMkpCtxInit_x38a8
    /*000037e4*/ BEQ         VI_PipeMkpCtxInit_x385c
    /*000037e8*/ MOV         R1, #0 
    /*000037ec*/ MOV         R0, #1 
    /*000037f0*/ STR         R2, [R3, #3768]             @ 0xeb8 
    /*000037f4*/ STR         R0, [R3, #3756]             @ 0xeac 
    /*000037f8*/ STR         R1, [R3, #3760]             @ 0xeb0 
    /*000037fc*/ STR         R1, [R3, #3764]             @ 0xeb4 
    VI_PipeMkpCtxInit_x3800:
    /*00003800*/ LDR         R1, [R6, #1876]             @ 0x754 
    /*00003804*/ CMP         R1, #1 
    /*00003808*/ STRHI       R1, [R3, #3772]             @ 0xebc 
    /*0000380c*/ MOVLS       R0, #1 
    /*00003810*/ STRLS       R0, [R3, #3772]             @ 0xebc 
    /*00003814*/ CMP         R2, #0 
    /*00003818*/ BLT         VI_PipeMkpCtxInit_x3890
    /*0000381c*/ BNE         VI_PipeMkpCtxInit_x3874
    /*00003820*/ MOV         R0, #1 
    /*00003824*/ STR         R2, [R3, #3864]             @ 0xf18 
    /*00003828*/ STR         R2, [R3, #3868]             @ 0xf1c 
    /*0000382c*/ STR         R0, [R3, #3860]             @ 0xf14 
    /*00003830*/ STR         R0, [R3, #3872]             @ 0xf20 
    VI_PipeMkpCtxInit_x3834:
    /*00003834*/ CMP         R1, #1 
    /*00003838*/ MOV         R0, R5 
    /*0000383c*/ STRHI       R1, [R3, #3876]             @ 0xf24 
    /*00003840*/ ADD         R1, SP, #12 
    /*00003844*/ MOVLS       R2, #1 
    /*00003848*/ STRLS       R2, [R3, #3876]             @ 0xf24 
    /*0000384c*/ BL          0x000000000000384C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003850*/ MOV         R0, #0 
    VI_PipeMkpCtxInit_x3854:
    /*00003854*/ ADD         SP, SP, #16 
    /*00003858*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_PipeMkpCtxInit_x385c:
    /*0000385c*/ MOV         R1, #1 
    /*00003860*/ STR         R2, [R3, #3760]             @ 0xeb0 
    /*00003864*/ STR         R2, [R3, #3764]             @ 0xeb4 
    /*00003868*/ STR         R1, [R3, #3756]             @ 0xeac 
    /*0000386c*/ STR         R1, [R3, #3768]             @ 0xeb8 
    /*00003870*/ B           VI_PipeMkpCtxInit_x3800
    VI_PipeMkpCtxInit_x3874:
    /*00003874*/ STR         R2, [R3, #3872]             @ 0xf20 
    /*00003878*/ MOV         R0, #1 
    /*0000387c*/ MOV         R2, #0 
    /*00003880*/ STR         R0, [R3, #3860]             @ 0xf14 
    /*00003884*/ STR         R2, [R3, #3864]             @ 0xf18 
    /*00003888*/ STR         R2, [R3, #3868]             @ 0xf1c 
    /*0000388c*/ B           VI_PipeMkpCtxInit_x3834
    VI_PipeMkpCtxInit_x3890:
    /*00003890*/ MOV         R2, #0 
    /*00003894*/ STR         R2, [R3, #3860]             @ 0xf14 
    /*00003898*/ STR         R2, [R3, #3864]             @ 0xf18 
    /*0000389c*/ STR         R2, [R3, #3868]             @ 0xf1c 
    /*000038a0*/ STR         R2, [R3, #3872]             @ 0xf20 
    /*000038a4*/ B           VI_PipeMkpCtxInit_x3834
    VI_PipeMkpCtxInit_x38a8:
    /*000038a8*/ MOV         R1, #0 
    /*000038ac*/ STR         R1, [R3, #3756]             @ 0xeac 
    /*000038b0*/ STR         R1, [R3, #3760]             @ 0xeb0 
    /*000038b4*/ STR         R1, [R3, #3764]             @ 0xeb4 
    /*000038b8*/ STR         R1, [R3, #3768]             @ 0xeb8 
    /*000038bc*/ B           VI_PipeMkpCtxInit_x3800
    VI_PipeMkpCtxInit_x38c0:
    /*000038c0*/ MOVW        R3, #2060                   @ 0x80c 
    /*000038c4*/ STR         R7, [SP, #4] 
    /*000038c8*/ STR         R3, [SP] 
    /*000038cc*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*000038d0*/ LDR         R3, [PC, #24]               @ 0x00000000000038f0 
    /*000038d4*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*000038d8*/ MOV         R1, #16 
    /*000038dc*/ MOV         R0, #3 
    /*000038e0*/ BL          0x00000000000038E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000038e4*/ MOVW        R0, #32780                  @ 0x800c 
    /*000038e8*/ MOVT        R0, #40976                  @ 0xa010 
    /*000038ec*/ B           VI_PipeMkpCtxInit_x3854
    /*000038f0*/ ANDEQ       R0, R0, R4, LSR R1 
FUNC_END VI_PipeMkpCtxInit


FUNC_BEGIN VI_PipeMkpCtxExit
    /*000038f4*/ PUSH        {R4, R5, R6, LR} 
    /*000038f8*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000038fc*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003900*/ MOV         R5, #176                    @ 0xb0 
    /*00003904*/ MOV         R6, R0 
    /*00003908*/ SUB         SP, SP, #8 
    /*0000390c*/ MLA         R5, R5, R0, R4 
    /*00003910*/ ADD         R4, R4, R6, LSL #2 
    /*00003914*/ ADD         R1, SP, #4 
    /*00003918*/ ADD         R5, R5, #140                @ 0x8c 
    /*0000391c*/ MOV         R0, R5 
    /*00003920*/ BL          0x0000000000003920          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003924*/ MOV         R0, R5 
    /*00003928*/ LDR         R5, [R4, #704]              @ 0x2c0 
    /*0000392c*/ ADD         R1, SP, #4 
    /*00003930*/ MOV         R3, #0 
    /*00003934*/ STR         R3, [R4, #704]              @ 0x2c0 
    /*00003938*/ BL          0x0000000000003938          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000393c*/ CMP         R5, #0 
    /*00003940*/ BEQ         VI_PipeMkpCtxExit_x394c
    /*00003944*/ MOV         R0, R5 
    /*00003948*/ BL          0x0000000000003948          @ osal_vfree [R_ARM_CALL: +0x0] 
    VI_PipeMkpCtxExit_x394c:
    /*0000394c*/ ADD         SP, SP, #8 
    /*00003950*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_PipeMkpCtxExit


FUNC_BEGIN VI_PipeCtxInit
    /*00003954*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00003958*/ SUB         SP, SP, #8 
    /*0000395c*/ MOV         R7, R2 
    /*00003960*/ MOV         R8, R3 
    /*00003964*/ MOV         R5, R0 
    /*00003968*/ MOV         R6, R1 
    /*0000396c*/ BL          0x000000000000396C          @ VI_PipeMkpCtxInit [R_ARM_CALL: .text+0x3778] 
    /*00003970*/ SUBS        R4, R0, #0 
    /*00003974*/ BNE         VI_PipeCtxInit_x39d8
    /*00003978*/ MOV         R3, R8 
    /*0000397c*/ MOV         R2, R7 
    /*00003980*/ MOV         R1, R6 
    /*00003984*/ MOV         R0, R5 
    /*00003988*/ BL          0x0000000000003988          @ VI_DRV_PipeDrvCtxInit [R_ARM_CALL: .text+0x28bd0] 
    /*0000398c*/ SUBS        R4, R0, #0 
    /*00003990*/ BNE         VI_PipeCtxInit_x39a0
    /*00003994*/ MOV         R0, R4 
    /*00003998*/ ADD         SP, SP, #8 
    /*0000399c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_PipeCtxInit_x39a0:
    /*000039a0*/ MOV         R1, #16 
    /*000039a4*/ STR         R5, [SP, #4] 
    /*000039a8*/ MOVW        R3, #2109                   @ 0x83d 
    /*000039ac*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x920] 
    /*000039b0*/ STR         R3, [SP] 
    /*000039b4*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x920] 
    /*000039b8*/ LDR         R3, [PC, #72]               @ 0x0000000000003a08 
    /*000039bc*/ MOV         R0, #3 
    /*000039c0*/ BL          0x00000000000039C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000039c4*/ MOV         R0, R5 
    /*000039c8*/ BL          0x00000000000039C8          @ VI_PipeMkpCtxExit [R_ARM_CALL: .text+0x38f4] 
    /*000039cc*/ MOV         R0, R4 
    /*000039d0*/ ADD         SP, SP, #8 
    /*000039d4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_PipeCtxInit_x39d8:
    /*000039d8*/ STR         R5, [SP, #4] 
    /*000039dc*/ MOVW        R3, #2102                   @ 0x836 
    /*000039e0*/ MOV         R1, #16 
    /*000039e4*/ STR         R3, [SP] 
    /*000039e8*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8e4] 
    /*000039ec*/ LDR         R3, [PC, #20]               @ 0x0000000000003a08 
    /*000039f0*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8e4] 
    /*000039f4*/ MOV         R0, #3 
    /*000039f8*/ BL          0x00000000000039F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000039fc*/ MOV         R0, R4 
    /*00003a00*/ ADD         SP, SP, #8 
    /*00003a04*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*00003a08*/ ANDEQ       R0, R0, R8, ASR #2 
FUNC_END VI_PipeCtxInit


FUNC_BEGIN VI_PipeCtxExit
    /*00003a0c*/ PUSH        {R4, LR} 
    /*00003a10*/ MOV         R4, R0 
    /*00003a14*/ BL          0x0000000000003A14          @ VI_DRV_PipeDrvCtxExit [R_ARM_CALL: .text+0x28d08] 
    /*00003a18*/ MOV         R0, R4 
    /*00003a1c*/ POP         {R4, LR} 
    VI_PipeCtxExit_x3a20:
    /*00003a20*/ B           VI_PipeCtxExit_x3a20        @ VI_PipeMkpCtxExit [R_ARM_JUMP24: .text+0x38f4] 
FUNC_END VI_PipeCtxExit


FUNC_BEGIN VI_PipeMallocMem
    /*00003a24*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00003a28*/ LDR         IP, [R1] 
    /*00003a2c*/ CMP         IP, #2 
    /*00003a30*/ BEQ         VI_PipeMallocMem_x3ab4
    /*00003a34*/ MOV         R5, R0 
    /*00003a38*/ MOV         R6, R2 
    /*00003a3c*/ MOV         R4, R1 
    /*00003a40*/ BL          0x0000000000003A40          @ VI_MKP_PipeWdrInit [R_ARM_CALL: .text+0x34bc] 
    /*00003a44*/ SUBS        R7, R0, #0 
    /*00003a48*/ BEQ         VI_PipeMallocMem_x3a54
    VI_PipeMallocMem_x3a4c:
    /*00003a4c*/ MOV         R0, R7 
    /*00003a50*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_PipeMallocMem_x3a54:
    /*00003a54*/ MOV         R0, R6 
    /*00003a58*/ BL          0x0000000000003A58          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*00003a5c*/ CMP         R0, #1 
    /*00003a60*/ BEQ         VI_PipeMallocMem_x3aa4
    VI_PipeMallocMem_x3a64:
    /*00003a64*/ MOV         R0, R5 
    /*00003a68*/ BL          0x0000000000003A68          @ VI_MODEL_CreatOneModel [R_ARM_CALL: .text+0x11d84] 
    /*00003a6c*/ SUBS        R7, R0, #0 
    /*00003a70*/ BNE         VI_PipeMallocMem_x3a90
    /*00003a74*/ MOV         R1, R4 
    /*00003a78*/ MOV         R0, R5 
    /*00003a7c*/ BL          0x0000000000003A7C          @ VI_DRV_MallocImageProcessBuffer [R_ARM_CALL: .text+0x2ff64] 
    /*00003a80*/ SUBS        R7, R0, #0 
    /*00003a84*/ BEQ         VI_PipeMallocMem_x3ab4
    /*00003a88*/ MOV         R0, R5 
    /*00003a8c*/ BL          0x0000000000003A8C          @ VI_MODEL_DestroyOneModel [R_ARM_CALL: .text+0x11ddc] 
    VI_PipeMallocMem_x3a90:
    /*00003a90*/ MOV         R0, R5 
    /*00003a94*/ BL          0x0000000000003A94          @ VI_MKP_PipeWdrDeInit [R_ARM_CALL: .text+0x360c] 
    /*00003a98*/ MOV         R0, R5 
    /*00003a9c*/ BL          0x0000000000003A9C          @ VI_DRV_WDRPoolDeInit [R_ARM_CALL: .text+0x383d0] 
    /*00003aa0*/ B           VI_PipeMallocMem_x3a4c
    VI_PipeMallocMem_x3aa4:
    /*00003aa4*/ MOV         R0, R5 
    /*00003aa8*/ BL          0x0000000000003AA8          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*00003aac*/ CMP         R5, R0 
    /*00003ab0*/ BEQ         VI_PipeMallocMem_x3a64
    VI_PipeMallocMem_x3ab4:
    /*00003ab4*/ MOV         R7, #0 
    /*00003ab8*/ MOV         R0, R7 
    /*00003abc*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_PipeMallocMem


FUNC_BEGIN VI_PipeFreeMem
    /*00003ac0*/ PUSH        {R4, LR} 
    /*00003ac4*/ MOV         R4, R0 
    /*00003ac8*/ BL          0x0000000000003AC8          @ VI_DRV_FreeImageProcessBuffer [R_ARM_CALL: .text+0x28a78] 
    /*00003acc*/ MOV         R0, R4 
    /*00003ad0*/ BL          0x0000000000003AD0          @ VI_MODEL_DestroyOneModel [R_ARM_CALL: .text+0x11ddc] 
    /*00003ad4*/ MOV         R0, R4 
    /*00003ad8*/ BL          0x0000000000003AD8          @ VI_MKP_PipeWdrDeInit [R_ARM_CALL: .text+0x360c] 
    /*00003adc*/ MOV         R0, R4 
    /*00003ae0*/ BL          0x0000000000003AE0          @ VI_FreeRegionLumaBuffer [R_ARM_CALL: .text+0xc520] 
    /*00003ae4*/ MOV         R0, R4 
    /*00003ae8*/ POP         {R4, LR} 
    VI_PipeFreeMem_x3aec:
    /*00003aec*/ B           VI_PipeFreeMem_x3aec        @ VI_DRV_RelaseFpnFrameAddr [R_ARM_JUMP24: .text+0x3a3d0] 
FUNC_END VI_PipeFreeMem


FUNC_BEGIN VI_CreatPipePicQueue
    /*00003af0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00003af4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003af8*/ ADD         R3, R3, R0, LSL #2 
    /*00003afc*/ MOV         R1, R2 
    /*00003b00*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00003b04*/ SUB         SP, SP, #12 
    /*00003b08*/ MOV         R7, R0 
    /*00003b0c*/ LDR         R9, [R3, #704]              @ 0x2c0 
    /*00003b10*/ BL          0x0000000000003B10          @ VI_MKP_CreatInputQueue [R_ARM_CALL: .text+0x3348] 
    /*00003b14*/ SUBS        R8, R0, #0 
    /*00003b18*/ BNE         VI_CreatPipePicQueue_x3c2c
    /*00003b1c*/ MOV         R0, #4736                   @ 0x1280 
    /*00003b20*/ BL          0x0000000000003B20          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00003b24*/ CMP         R0, #0 
    /*00003b28*/ STR         R0, [R9, #76]               @ 0x4c 
    /*00003b2c*/ BEQ         VI_CreatPipePicQueue_x3bd4
    /*00003b30*/ ADD         R6, R9, #76                 @ 0x4c 
    /*00003b34*/ MOV         R0, R6 
    /*00003b38*/ BL          0x0000000000003B38          @ VI_CreatQueue [R_ARM_CALL: .text+0x16114] 
    /*00003b3c*/ LDR         R4, [R9, #76]               @ 0x4c 
    /*00003b40*/ ADD         R5, R4, #5312               @ 0x14c0 
    /*00003b44*/ ADD         R4, R4, #580                @ 0x244 
    /*00003b48*/ ADD         R5, R5, #4 
    VI_CreatPipePicQueue_x3b4c:
    /*00003b4c*/ MOV         R1, R4 
    /*00003b50*/ MOV         R0, R6 
    /*00003b54*/ ADD         R4, R4, #592                @ 0x250 
    /*00003b58*/ BL          0x0000000000003B58          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00003b5c*/ CMP         R5, R4 
    /*00003b60*/ BNE         VI_CreatPipePicQueue_x3b4c
    /*00003b64*/ BL          0x0000000000003B64          @ VI_DRV_IsSrcSupport [R_ARM_CALL: .text+0x27714] 
    /*00003b68*/ CMP         R0, #1 
    /*00003b6c*/ BEQ         VI_CreatPipePicQueue_x3b7c
    VI_CreatPipePicQueue_x3b70:
    /*00003b70*/ MOV         R0, R8 
    /*00003b74*/ ADD         SP, SP, #12 
    /*00003b78*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_CreatPipePicQueue_x3b7c:
    /*00003b7c*/ MOV         R0, #4736                   @ 0x1280 
    /*00003b80*/ BL          0x0000000000003B80          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00003b84*/ CMP         R0, #0 
    /*00003b88*/ MOV         R4, R0 
    /*00003b8c*/ STR         R0, [R9, #112]              @ 0x70 
    /*00003b90*/ BEQ         VI_CreatPipePicQueue_x3c5c
    /*00003b94*/ ADD         R6, R9, #112                @ 0x70 
    /*00003b98*/ MOV         R0, R6 
    /*00003b9c*/ BL          0x0000000000003B9C          @ VI_CreatQueue [R_ARM_CALL: .text+0x16114] 
    /*00003ba0*/ LDR         R4, [R9, #112]              @ 0x70 
    /*00003ba4*/ ADD         R5, R4, #5312               @ 0x14c0 
    /*00003ba8*/ ADD         R4, R4, #580                @ 0x244 
    /*00003bac*/ ADD         R5, R5, #4 
    VI_CreatPipePicQueue_x3bb0:
    /*00003bb0*/ MOV         R1, R4 
    /*00003bb4*/ MOV         R0, R6 
    /*00003bb8*/ ADD         R4, R4, #592                @ 0x250 
    /*00003bbc*/ BL          0x0000000000003BBC          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00003bc0*/ CMP         R4, R5 
    /*00003bc4*/ BNE         VI_CreatPipePicQueue_x3bb0
    /*00003bc8*/ MOV         R0, R8 
    /*00003bcc*/ ADD         SP, SP, #12 
    /*00003bd0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_CreatPipePicQueue_x3bd4:
    /*00003bd4*/ MOVW        R3, #2221                   @ 0x8ad 
    /*00003bd8*/ MOV         R1, #16 
    /*00003bdc*/ STR         R3, [SP] 
    /*00003be0*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x774] 
    /*00003be4*/ LDR         R3, [PC, #212]              @ 0x0000000000003cc0 
    /*00003be8*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x774] 
    /*00003bec*/ MOV         R0, #3 
    /*00003bf0*/ BL          0x0000000000003BF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003bf4*/ MOVW        R3, #2225                   @ 0x8b1 
    /*00003bf8*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9a0] 
    /*00003bfc*/ STR         R3, [SP] 
    /*00003c00*/ STR         R7, [SP, #4] 
    /*00003c04*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9a0] 
    /*00003c08*/ LDR         R3, [PC, #176]              @ 0x0000000000003cc0 
    /*00003c0c*/ MOV         R1, #16 
    /*00003c10*/ MOV         R0, #3 
    /*00003c14*/ BL          0x0000000000003C14          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_CreatPipePicQueue_x3c18:
    /*00003c18*/ MOV         R0, R7 
    /*00003c1c*/ MOVW        R8, #32780                  @ 0x800c 
    /*00003c20*/ BL          0x0000000000003C20          @ VI_MKP_DestoryInputQueue [R_ARM_CALL: .text+0x311c] 
    /*00003c24*/ MOVT        R8, #40976                  @ 0xa010 
    /*00003c28*/ B           VI_CreatPipePicQueue_x3b70
    VI_CreatPipePicQueue_x3c2c:
    /*00003c2c*/ MOVW        R3, #2217                   @ 0x8a9 
    /*00003c30*/ STR         R7, [SP, #4] 
    /*00003c34*/ STR         R3, [SP] 
    /*00003c38*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x95c] 
    /*00003c3c*/ LDR         R3, [PC, #124]              @ 0x0000000000003cc0 
    /*00003c40*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x95c] 
    /*00003c44*/ MOV         R1, #16 
    /*00003c48*/ MOV         R0, #3 
    /*00003c4c*/ MOVW        R8, #32780                  @ 0x800c 
    /*00003c50*/ BL          0x0000000000003C50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003c54*/ MOVT        R8, #40976                  @ 0xa010 
    /*00003c58*/ B           VI_CreatPipePicQueue_x3b70
    VI_CreatPipePicQueue_x3c5c:
    /*00003c5c*/ MOVW        R3, #2231                   @ 0x8b7 
    /*00003c60*/ MOV         R1, #16 
    /*00003c64*/ STR         R3, [SP] 
    /*00003c68*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x774] 
    /*00003c6c*/ LDR         R3, [PC, #76]               @ 0x0000000000003cc0 
    /*00003c70*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x774] 
    /*00003c74*/ MOV         R0, #3 
    /*00003c78*/ BL          0x0000000000003C78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003c7c*/ MOVW        R3, #2235                   @ 0x8bb 
    /*00003c80*/ MOV         R1, #16 
    /*00003c84*/ STR         R3, [SP] 
    /*00003c88*/ STR         R7, [SP, #4] 
    /*00003c8c*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9e8] 
    /*00003c90*/ LDR         R3, [PC, #40]               @ 0x0000000000003cc0 
    /*00003c94*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9e8] 
    /*00003c98*/ MOV         R0, #3 
    /*00003c9c*/ BL          0x0000000000003C9C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003ca0*/ MOV         R0, R6 
    /*00003ca4*/ BL          0x0000000000003CA4          @ VI_DestroyQueue [R_ARM_CALL: .text+0x16170] 
    /*00003ca8*/ LDR         R0, [R9, #76]               @ 0x4c 
    /*00003cac*/ CMP         R0, #0 
    /*00003cb0*/ BEQ         VI_CreatPipePicQueue_x3c18
    /*00003cb4*/ BL          0x0000000000003CB4          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00003cb8*/ STR         R4, [R9, #76]               @ 0x4c 
    /*00003cbc*/ B           VI_CreatPipePicQueue_x3c18
    /*00003cc0*/ ANDEQ       R0, R0, R8, ASR R1 
FUNC_END VI_CreatPipePicQueue


FUNC_BEGIN VI_DestoryPipePicQueue
    /*00003cc4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00003cc8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003ccc*/ ADD         R3, R3, R0, LSL #2 
    /*00003cd0*/ PUSH        {R4, R5, R6, LR} 
    /*00003cd4*/ MOV         R5, R0 
    /*00003cd8*/ LDR         R4, [R3, #704]              @ 0x2c0 
    /*00003cdc*/ BL          0x0000000000003CDC          @ VI_ClearInputQueue [R_ARM_CALL: .text+0x32e0] 
    /*00003ce0*/ MOV         R0, R5 
    /*00003ce4*/ ADD         R6, R4, #76                 @ 0x4c 
    /*00003ce8*/ MOV         R1, R6 
    /*00003cec*/ BL          0x0000000000003CEC          @ VI_ClearLinearPicQueue [R_ARM_CALL: .text+0x31c4] 
    /*00003cf0*/ BL          0x0000000000003CF0          @ VI_DRV_IsSrcSupport [R_ARM_CALL: .text+0x27714] 
    /*00003cf4*/ CMP         R0, #1 
    /*00003cf8*/ BEQ         VI_DestoryPipePicQueue_x3d6c
    VI_DestoryPipePicQueue_x3cfc:
    /*00003cfc*/ MOV         R0, R5 
    /*00003d00*/ BL          0x0000000000003D00          @ VI_MKP_DestoryInputQueue [R_ARM_CALL: .text+0x311c] 
    /*00003d04*/ LDR         R3, [R4, #76]               @ 0x4c 
    /*00003d08*/ CMP         R3, #0 
    /*00003d0c*/ BEQ         VI_DestoryPipePicQueue_x3d30
    /*00003d10*/ MOV         R0, R6 
    /*00003d14*/ BL          0x0000000000003D14          @ VI_DestroyQueue [R_ARM_CALL: .text+0x16170] 
    /*00003d18*/ LDR         R0, [R4, #76]               @ 0x4c 
    /*00003d1c*/ CMP         R0, #0 
    /*00003d20*/ BEQ         VI_DestoryPipePicQueue_x3d30
    /*00003d24*/ BL          0x0000000000003D24          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00003d28*/ MOV         R3, #0 
    /*00003d2c*/ STR         R3, [R4, #76]               @ 0x4c 
    VI_DestoryPipePicQueue_x3d30:
    /*00003d30*/ BL          0x0000000000003D30          @ VI_DRV_IsSrcSupport [R_ARM_CALL: .text+0x27714] 
    /*00003d34*/ CMP         R0, #1 
    /*00003d38*/ POPNE       {R4, R5, R6, PC} 
    /*00003d3c*/ LDR         R3, [R4, #112]              @ 0x70 
    /*00003d40*/ CMP         R3, #0 
    /*00003d44*/ POPEQ       {R4, R5, R6, PC} 
    /*00003d48*/ ADD         R0, R4, #112                @ 0x70 
    /*00003d4c*/ BL          0x0000000000003D4C          @ VI_DestroyQueue [R_ARM_CALL: .text+0x16170] 
    /*00003d50*/ LDR         R0, [R4, #112]              @ 0x70 
    /*00003d54*/ CMP         R0, #0 
    /*00003d58*/ POPEQ       {R4, R5, R6, PC} 
    /*00003d5c*/ BL          0x0000000000003D5C          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00003d60*/ MOV         R3, #0 
    /*00003d64*/ STR         R3, [R4, #112]              @ 0x70 
    /*00003d68*/ POP         {R4, R5, R6, PC} 
    VI_DestoryPipePicQueue_x3d6c:
    /*00003d6c*/ ADD         R1, R4, #112                @ 0x70 
    /*00003d70*/ MOV         R0, R5 
    /*00003d74*/ BL          0x0000000000003D74          @ VI_ClearLinearPicQueue [R_ARM_CALL: .text+0x31c4] 
    /*00003d78*/ B           VI_DestoryPipePicQueue_x3cfc
FUNC_END VI_DestoryPipePicQueue


FUNC_BEGIN VI_PipeSyncCtxInit
    /*00003d7c*/ PUSH        {R4, R5, R6, LR} 
    /*00003d80*/ MOV         R4, #176                    @ 0xb0 
    /*00003d84*/ MUL         R4, R4, R0 
    /*00003d88*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00003d8c*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003d90*/ SUB         SP, SP, #8 
    /*00003d94*/ ADD         R1, SP, #4 
    /*00003d98*/ ADD         R6, R4, #140                @ 0x8c 
    /*00003d9c*/ ADD         R6, R5, R6 
    /*00003da0*/ MOV         R0, R6 
    /*00003da4*/ BL          0x0000000000003DA4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003da8*/ ADD         R0, R4, #28 
    /*00003dac*/ ADD         R0, R5, R0 
    /*00003db0*/ MOV         R1, #0 
    /*00003db4*/ BL          0x0000000000003DB4          @ osal_atomic_set [R_ARM_CALL: +0x0] 
    /*00003db8*/ ADD         R0, R4, #32 
    /*00003dbc*/ ADD         R0, R5, R0 
    /*00003dc0*/ MOV         R1, #0 
    /*00003dc4*/ BL          0x0000000000003DC4          @ osal_atomic_set [R_ARM_CALL: +0x0] 
    /*00003dc8*/ ADD         R0, R4, #36                 @ 0x24 
    /*00003dcc*/ ADD         R0, R5, R0 
    /*00003dd0*/ MOV         R1, #0 
    /*00003dd4*/ BL          0x0000000000003DD4          @ osal_atomic_set [R_ARM_CALL: +0x0] 
    /*00003dd8*/ ADD         R0, R4, #160                @ 0xa0 
    /*00003ddc*/ ADD         R0, R5, R0 
    /*00003de0*/ MOV         R1, #0 
    /*00003de4*/ BL          0x0000000000003DE4          @ osal_atomic_set [R_ARM_CALL: +0x0] 
    /*00003de8*/ ADD         R3, R5, R4 
    /*00003dec*/ MOV         R2, #0 
    /*00003df0*/ MOV         R0, R6 
    /*00003df4*/ LDR         IP, [R3, #24] 
    /*00003df8*/ ADD         R1, SP, #4 
    /*00003dfc*/ STR         R2, [R3, #4] 
    /*00003e00*/ ADD         IP, IP, #1 
    /*00003e04*/ STR         R2, [R3, #8] 
    /*00003e08*/ STR         IP, [R3, #24] 
    /*00003e0c*/ STR         R2, [R3, #12] 
    /*00003e10*/ STR         R2, [R3, #20] 
    /*00003e14*/ STR         R2, [R5, R4] 
    /*00003e18*/ BL          0x0000000000003E18          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003e1c*/ ADD         SP, SP, #8 
    /*00003e20*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_PipeSyncCtxInit


FUNC_BEGIN VI_ClearPicQueue
    /*00003e24*/ PUSH        {R4, R5, R6, LR} 
    /*00003e28*/ SUBS        R5, R0, #0 
    /*00003e2c*/ BEQ         VI_ClearPicQueue_x3e84
    VI_ClearPicQueue_x3e30:
    /*00003e30*/ LDR         R3, [R5] 
    /*00003e34*/ CMP         R3, #0 
    /*00003e38*/ BEQ         VI_ClearPicQueue_x3e94
    VI_ClearPicQueue_x3e3c:
    /*00003e3c*/ MOV         R0, R5 
    /*00003e40*/ BL          0x0000000000003E40          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00003e44*/ SUBS        R3, R0, #0 
    /*00003e48*/ MOV         R0, R5 
    /*00003e4c*/ BEQ         VI_ClearPicQueue_x3e7c
    /*00003e50*/ BL          0x0000000000003E50          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*00003e54*/ SUBS        R4, R0, #0 
    /*00003e58*/ BEQ         VI_ClearPicQueue_x3e3c
    /*00003e5c*/ SUBS        R0, R4, #336                @ 0x150 
    /*00003e60*/ BEQ         VI_ClearPicQueue_x3e3c
    /*00003e64*/ MOV         R1, #0 
    /*00003e68*/ BL          0x0000000000003E68          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00003e6c*/ MOV         R1, R4 
    /*00003e70*/ MOV         R0, R5 
    /*00003e74*/ BL          0x0000000000003E74          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00003e78*/ B           VI_ClearPicQueue_x3e3c
    VI_ClearPicQueue_x3e7c:
    /*00003e7c*/ MOV         R0, R3 
    /*00003e80*/ POP         {R4, R5, R6, PC} 
    VI_ClearPicQueue_x3e84:
    /*00003e84*/ BL          0x000000000000133C 
    /*00003e88*/ CMP         R0, #0 
    /*00003e8c*/ POPNE       {R4, R5, R6, PC} 
    /*00003e90*/ B           VI_ClearPicQueue_x3e30
    VI_ClearPicQueue_x3e94:
    /*00003e94*/ BL          0x000000000000133C 
    /*00003e98*/ CMP         R0, #0 
    /*00003e9c*/ POPNE       {R4, R5, R6, PC} 
    /*00003ea0*/ B           VI_ClearPicQueue_x3e3c
FUNC_END VI_ClearPicQueue


FUNC_BEGIN VI_WaitNormalWakeup
    /*00003ea4*/ PUSH        {R4, LR} 
    /*00003ea8*/ MOV         R4, R0 
    /*00003eac*/ CMP         R2, #6 
    /*00003eb0*/ LDRLS       PC, [PC, R2, LSL #2] 
    /*00003eb4*/ B           VI_WaitNormalWakeup_x4004
    /*00003eb8*/ ANDEQ       R3, R0, R0, LSL #30 
    /*00003ebc*/ ANDEQ       R3, R0, R8, LSR #30 
    /*00003ec0*/ ANDEQ       R3, R0, IP, ASR #30 
    /*00003ec4*/ ANDEQ       R3, R0, R0, LSL #31 
    /*00003ec8*/ @           <UNDEFINED> instruction: 0x00003fb4 
    /*00003ecc*/ LDRDEQ      R3, [R0], -IP 
    /*00003ed0*/ LDRDEQ      R3, [R0], -R4 
    /*00003ed4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00003ed8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003edc*/ ADD         R4, R3, R0, LSL #2 
    /*00003ee0*/ LDR         R0, [R4, #704]              @ 0x2c0 
    /*00003ee4*/ ADD         R0, R0, #37376              @ 0x9200 
    /*00003ee8*/ ADD         R0, R0, #24 
    /*00003eec*/ BL          0x0000000000003EEC          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00003ef0*/ CLZ         R0, R0 
    /*00003ef4*/ LSR         R0, R0, #5 
    /*00003ef8*/ RSB         R0, R0, #0 
    /*00003efc*/ POP         {R4, PC} 
    /*00003f00*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00003f04*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003f08*/ ADD         R4, R3, R0, LSL #2 
    /*00003f0c*/ LDR         R0, [R4, #704]              @ 0x2c0 
    /*00003f10*/ ADD         R0, R0, #4 
    /*00003f14*/ BL          0x0000000000003F14          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00003f18*/ CMP         R0, #2 
    /*00003f1c*/ MOVLS       R0, #0 
    /*00003f20*/ MVNHI       R0, #0 
    /*00003f24*/ POP         {R4, PC} 
    /*00003f28*/ MOV         R3, #44                     @ 0x2c 
    /*00003f2c*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00003f30*/ MLA         R1, R3, R0, R1 
    /*00003f34*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003f38*/ ADD         R1, R1, #38                 @ 0x26 
    /*00003f3c*/ LDR         R0, [R2, R1, LSL #2] 
    /*00003f40*/ SUBS        R0, R0, #1 
    /*00003f44*/ MVNNE       R0, #0 
    /*00003f48*/ POP         {R4, PC} 
    /*00003f4c*/ MOV         R0, #36                     @ 0x24 
    /*00003f50*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00003f54*/ MUL         R1, R0, R1 
    /*00003f58*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003f5c*/ ADD         R4, R3, R4, LSL #2 
    /*00003f60*/ LDR         R0, [R4, #704]              @ 0x2c0 
    /*00003f64*/ ADD         R1, R1, #148                @ 0x94 
    /*00003f68*/ ADD         R0, R0, R1 
    /*00003f6c*/ BL          0x0000000000003F6C          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00003f70*/ CLZ         R0, R0 
    /*00003f74*/ LSR         R0, R0, #5 
    /*00003f78*/ RSB         R0, R0, #0 
    /*00003f7c*/ POP         {R4, PC} 
    /*00003f80*/ BL          0x0000000000003F80          @ VI_DRV_IsSrcSupport [R_ARM_CALL: .text+0x27714] 
    /*00003f84*/ CMP         R0, #1 
    /*00003f88*/ BNE         VI_WaitNormalWakeup_x4004
    /*00003f8c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00003f90*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003f94*/ ADD         R4, R3, R4, LSL #2 
    /*00003f98*/ LDR         R0, [R4, #704]              @ 0x2c0 
    /*00003f9c*/ ADD         R0, R0, #112                @ 0x70 
    /*00003fa0*/ BL          0x0000000000003FA0          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00003fa4*/ CMP         R0, #7 
    /*00003fa8*/ MOVLS       R0, #0 
    /*00003fac*/ MVNHI       R0, #0 
    /*00003fb0*/ POP         {R4, PC} 
    /*00003fb4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00003fb8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003fbc*/ ADD         R4, R3, R0, LSL #2 
    /*00003fc0*/ LDR         R0, [R4, #704]              @ 0x2c0 
    /*00003fc4*/ ADD         R0, R0, #40                 @ 0x28 
    /*00003fc8*/ BL          0x0000000000003FC8          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00003fcc*/ CMP         R0, #2 
    /*00003fd0*/ MOVLS       R0, #0 
    /*00003fd4*/ MVNHI       R0, #0 
    /*00003fd8*/ POP         {R4, PC} 
    /*00003fdc*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00003fe0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00003fe4*/ ADD         R4, R3, R0, LSL #2 
    /*00003fe8*/ LDR         R0, [R4, #704]              @ 0x2c0 
    /*00003fec*/ ADD         R0, R0, #76                 @ 0x4c 
    /*00003ff0*/ BL          0x0000000000003FF0          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00003ff4*/ CLZ         R0, R0 
    /*00003ff8*/ LSR         R0, R0, #5 
    /*00003ffc*/ RSB         R0, R0, #0 
    /*00004000*/ POP         {R4, PC} 
    VI_WaitNormalWakeup_x4004:
    /*00004004*/ MVN         R0, #0 
    /*00004008*/ POP         {R4, PC} 
FUNC_END VI_WaitNormalWakeup


FUNC_BEGIN VI_WakeUpCondition
    /*0000400c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00004010*/ MOV         R4, #176                    @ 0xb0 
    /*00004014*/ MUL         R4, R4, R0 
    /*00004018*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000401c*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00004020*/ SUB         SP, SP, #20 
    /*00004024*/ MOV         R8, R3 
    /*00004028*/ MOV         R7, R0 
    /*0000402c*/ ADD         R6, R4, #140                @ 0x8c 
    /*00004030*/ MOV         R3, #0 
    /*00004034*/ ADD         R6, R5, R6 
    /*00004038*/ STR         R3, [R8] 
    /*0000403c*/ MOV         R9, R1 
    /*00004040*/ ADD         R1, SP, #12 
    /*00004044*/ MOV         R0, R6 
    /*00004048*/ MOV         FP, R2 
    /*0000404c*/ BL          0x000000000000404C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004050*/ MOVW        R3, #0                      @ s_u32ViStatus [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00004054*/ MOVT        R3, #0                      @ s_u32ViStatus [R_ARM_MOVT_ABS: .data+0x0] 
    /*00004058*/ LDR         SL, [R3] 
    /*0000405c*/ CMP         SL, #0 
    /*00004060*/ BNE         VI_WakeUpCondition_x410c
    /*00004064*/ ADD         R3, R5, R4 
    /*00004068*/ LDR         R2, [R3, #24] 
    /*0000406c*/ CMP         R2, FP 
    /*00004070*/ BNE         VI_WakeUpCondition_x40d0
    /*00004074*/ LDR         R4, [R5, R4] 
    /*00004078*/ CMP         R4, #1 
    /*0000407c*/ MOVWEQ      R3, #2437                   @ 0x985 
    /*00004080*/ MOVWEQ      R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa90] 
    /*00004084*/ STREQ       R3, [SP] 
    /*00004088*/ MOVTEQ      R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa90] 
    /*0000408c*/ BEQ         VI_WakeUpCondition_x4170
    /*00004090*/ LDR         R4, [R3, #4] 
    /*00004094*/ CMP         R4, #1 
    /*00004098*/ BEQ         VI_WakeUpCondition_x4160
    /*0000409c*/ MOV         R1, R9 
    /*000040a0*/ MOV         R0, R7 
    /*000040a4*/ LDR         R2, [SP, #56]               @ 0x38 
    /*000040a8*/ BL          0x00000000000040A8          @ VI_WaitNormalWakeup [R_ARM_CALL: .text+0x3ea4] 
    /*000040ac*/ CMP         R0, #0 
    /*000040b0*/ BEQ         VI_WakeUpCondition_x4120
    /*000040b4*/ MOV         R0, R6 
    /*000040b8*/ ADD         R1, SP, #12 
    /*000040bc*/ BL          0x00000000000040BC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000040c0*/ MOV         R4, SL 
    /*000040c4*/ MOV         R0, R4 
    /*000040c8*/ ADD         SP, SP, #20 
    /*000040cc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_WakeUpCondition_x40d0:
    /*000040d0*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa5c] 
    /*000040d4*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa5c] 
    /*000040d8*/ MOVW        R3, #2429                   @ 0x97d 
    /*000040dc*/ STR         R3, [SP] 
    VI_WakeUpCondition_x40e0:
    /*000040e0*/ LDR         R3, [PC, #176]              @ 0x0000000000004198 
    /*000040e4*/ MOV         R1, #16 
    /*000040e8*/ MOV         R0, #3 
    /*000040ec*/ MOV         R4, #1 
    /*000040f0*/ BL          0x00000000000040F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000040f4*/ MOV         R0, R6 
    /*000040f8*/ ADD         R1, SP, #12 
    /*000040fc*/ BL          0x00000000000040FC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004100*/ MOV         R0, R4 
    /*00004104*/ ADD         SP, SP, #20 
    /*00004108*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_WakeUpCondition_x410c:
    /*0000410c*/ MOVW        R3, #2421                   @ 0x975 
    /*00004110*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa30] 
    /*00004114*/ STR         R3, [SP] 
    /*00004118*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa30] 
    /*0000411c*/ B           VI_WakeUpCondition_x40e0
    VI_WakeUpCondition_x4120:
    /*00004120*/ MOVW        R3, #2453                   @ 0x995 
    /*00004124*/ MOV         R1, #16 
    /*00004128*/ STR         R3, [SP] 
    /*0000412c*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaec] 
    /*00004130*/ LDR         R3, [PC, #96]               @ 0x0000000000004198 
    /*00004134*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaec] 
    /*00004138*/ MOV         R0, #7 
    /*0000413c*/ MOV         R4, #1 
    /*00004140*/ BL          0x0000000000004140          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004144*/ MOV         R0, R6 
    /*00004148*/ ADD         R1, SP, #12 
    /*0000414c*/ STR         R4, [R8] 
    /*00004150*/ BL          0x0000000000004150          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004154*/ MOV         R0, R4 
    /*00004158*/ ADD         SP, SP, #20 
    /*0000415c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_WakeUpCondition_x4160:
    /*00004160*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xabc] 
    /*00004164*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0xabc] 
    /*00004168*/ MOVW        R3, #2445                   @ 0x98d 
    /*0000416c*/ STR         R3, [SP] 
    VI_WakeUpCondition_x4170:
    /*00004170*/ LDR         R3, [PC, #32]               @ 0x0000000000004198 
    /*00004174*/ MOV         R1, #16 
    /*00004178*/ MOV         R0, #3 
    /*0000417c*/ BL          0x000000000000417C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004180*/ MOV         R0, R6 
    /*00004184*/ ADD         R1, SP, #12 
    /*00004188*/ BL          0x0000000000004188          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000418c*/ MOV         R0, R4 
    /*00004190*/ ADD         SP, SP, #20 
    /*00004194*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00004198*/ ANDEQ       R0, R0, R0, ROR R1 
FUNC_END VI_WakeUpCondition


FUNC_BEGIN VI_WaitConditionCallBack
    /*0000419c*/ PUSH        {R4, LR} 
    /*000041a0*/ SUBS        R4, R0, #0 
    /*000041a4*/ SUB         SP, SP, #8 
    /*000041a8*/ BEQ         VI_WaitConditionCallBack_x41d8
    /*000041ac*/ LDR         IP, [R4, #16] 
    /*000041b0*/ ADD         R3, R4, #12 
    /*000041b4*/ LDR         R2, [R4, #8] 
    /*000041b8*/ LDM         R4, {R0, R1} 
    /*000041bc*/ STR         IP, [SP] 
    /*000041c0*/ BL          0x00000000000041C0          @ VI_WakeUpCondition [R_ARM_CALL: .text+0x400c] 
    /*000041c4*/ SUB         R0, R0, #1 
    /*000041c8*/ CLZ         R0, R0 
    /*000041cc*/ LSR         R0, R0, #5 
    /*000041d0*/ ADD         SP, SP, #8 
    /*000041d4*/ POP         {R4, PC} 
    VI_WaitConditionCallBack_x41d8:
    /*000041d8*/ MOVW        R3, #2502                   @ 0x9c6 
    /*000041dc*/ MOV         R1, #16 
    /*000041e0*/ STR         R3, [SP] 
    /*000041e4*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb18] 
    /*000041e8*/ LDR         R3, [PC, #20]               @ 0x0000000000004204 
    /*000041ec*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb18] 
    /*000041f0*/ MOV         R0, #3 
    /*000041f4*/ BL          0x00000000000041F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000041f8*/ MOV         R0, R4 
    /*000041fc*/ ADD         SP, SP, #8 
    /*00004200*/ POP         {R4, PC} 
    /*00004204*/ ANDEQ       R0, R0, R4, LSL #3 
FUNC_END VI_WaitConditionCallBack


FUNC_BEGIN VI_AbnormalVerifyAfterWait
    /*00004208*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000420c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00004210*/ ADD         R2, R3, R0, LSL #2 
    /*00004214*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00004218*/ SUB         SP, SP, #12 
    /*0000421c*/ LDR         R2, [R2, #704]              @ 0x2c0 
    /*00004220*/ CMP         R2, #0 
    /*00004224*/ MOVWEQ      R3, #2469                   @ 0x9a5 
    /*00004228*/ MOVWEQ      R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb48] 
    /*0000422c*/ STREQ       R3, [SP] 
    /*00004230*/ MOVTEQ      R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb48] 
    /*00004234*/ BEQ         VI_AbnormalVerifyAfterWait_x42a4
    /*00004238*/ MOV         R2, #176                    @ 0xb0 
    /*0000423c*/ MUL         R0, R2, R0 
    /*00004240*/ ADD         R2, R3, R0 
    /*00004244*/ LDR         IP, [R2, #24] 
    /*00004248*/ CMP         IP, R1 
    /*0000424c*/ MOVWNE      R3, #2475                   @ 0x9ab 
    /*00004250*/ MOVWNE      R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb84] 
    /*00004254*/ STRNE       R3, [SP] 
    /*00004258*/ MOVTNE      R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb84] 
    /*0000425c*/ BNE         VI_AbnormalVerifyAfterWait_x42a4
    /*00004260*/ LDR         R3, [R3, R0] 
    /*00004264*/ CMP         R3, #1 
    /*00004268*/ MOVWEQ      R3, #2481                   @ 0x9b1 
    /*0000426c*/ MOVWEQ      R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbb8] 
    /*00004270*/ STREQ       R3, [SP] 
    /*00004274*/ MOVTEQ      R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbb8] 
    /*00004278*/ BEQ         VI_AbnormalVerifyAfterWait_x42a4
    /*0000427c*/ LDR         R3, [R2, #4] 
    /*00004280*/ CMP         R3, #1 
    /*00004284*/ MOVNE       R0, #0 
    /*00004288*/ BEQ         VI_AbnormalVerifyAfterWait_x4294
    VI_AbnormalVerifyAfterWait_x428c:
    /*0000428c*/ ADD         SP, SP, #12 
    /*00004290*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_AbnormalVerifyAfterWait_x4294:
    /*00004294*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbf0] 
    /*00004298*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbf0] 
    /*0000429c*/ MOVW        R3, #2487                   @ 0x9b7 
    /*000042a0*/ STR         R3, [SP] 
    VI_AbnormalVerifyAfterWait_x42a4:
    /*000042a4*/ LDR         R3, [PC, #20]               @ 0x00000000000042c0 
    /*000042a8*/ MOV         R1, #16 
    /*000042ac*/ MOV         R0, #3 
    /*000042b0*/ BL          0x00000000000042B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000042b4*/ MOVW        R0, #32784                  @ 0x8010 
    /*000042b8*/ MOVT        R0, #40976                  @ 0xa010 
    /*000042bc*/ B           VI_AbnormalVerifyAfterWait_x428c
    /*000042c0*/ ANDEQ       R0, R0, R0, LSR #3 
FUNC_END VI_AbnormalVerifyAfterWait


FUNC_BEGIN VI_ReleaseChnBuffer
    /*000042c4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000042c8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000042cc*/ ADD         R3, R3, R0, LSL #2 
    /*000042d0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000042d4*/ MOV         R4, #0 
    /*000042d8*/ LDR         R5, [R3, #704]              @ 0x2c0 
    /*000042dc*/ MOV         R8, R0 
    /*000042e0*/ MOV         SL, R4 
    /*000042e4*/ MOV         R9, #1 
    /*000042e8*/ ADD         R7, R5, #38144              @ 0x9500 
    /*000042ec*/ ADD         R6, R5, #38912              @ 0x9800 
    /*000042f0*/ ADD         R7, R7, #200                @ 0xc8 
    /*000042f4*/ ADD         R6, R6, #96                 @ 0x60 
    VI_ReleaseChnBuffer_x42f8:
    /*000042f8*/ STR         SL, [R7, #4]! 
    /*000042fc*/ MOV         R1, R4 
    /*00004300*/ MOV         R2, #0 
    /*00004304*/ STR         R9, [R6, #4]! 
    /*00004308*/ MOV         R0, R8 
    /*0000430c*/ ADD         R4, R4, #1 
    /*00004310*/ BL          0x0000000000004310          @ VI_DRV_EnableChn [R_ARM_CALL: .text+0x29de8] 
    /*00004314*/ CMP         R4, #9 
    /*00004318*/ BNE         VI_ReleaseChnBuffer_x42f8
    /*0000431c*/ ADD         R4, R5, #22528              @ 0x5800 
    /*00004320*/ ADD         R6, R5, #28928              @ 0x7100 
    /*00004324*/ MOV         R0, R8 
    /*00004328*/ ADD         R4, R4, #200                @ 0xc8 
    /*0000432c*/ BL          0x000000000000432C          @ VI_DRV_ProcRegNewManual [R_ARM_CALL: .text+0x29e34] 
    /*00004330*/ ADD         R6, R6, #208                @ 0xd0 
    /*00004334*/ ADD         R5, R5, #16320              @ 0x3fc0 
    /*00004338*/ MOV         R7, #0 
    /*0000433c*/ B           VI_ReleaseChnBuffer_x435c
    VI_ReleaseChnBuffer_x4340:
    /*00004340*/ LDR         R3, [R4, #696]              @ 0x2b8 
    /*00004344*/ ADD         R5, R5, #712                @ 0x2c8 
    /*00004348*/ CMP         R3, #0 
    /*0000434c*/ BNE         VI_ReleaseChnBuffer_x4388
    VI_ReleaseChnBuffer_x4350:
    /*00004350*/ ADD         R4, R4, #712                @ 0x2c8 
    /*00004354*/ CMP         R4, R6 
    /*00004358*/ BEQ         VI_ReleaseChnBuffer_x43a4
    VI_ReleaseChnBuffer_x435c:
    /*0000435c*/ LDR         R3, [R5, #696]              @ 0x2b8 
    /*00004360*/ CMP         R3, #0 
    /*00004364*/ BEQ         VI_ReleaseChnBuffer_x4340
    /*00004368*/ MOV         R0, R5 
    /*0000436c*/ MOV         R1, #0 
    /*00004370*/ BL          0x0000000000004370          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00004374*/ STR         R7, [R5, #696]              @ 0x2b8 
    /*00004378*/ LDR         R3, [R4, #696]              @ 0x2b8 
    /*0000437c*/ ADD         R5, R5, #712                @ 0x2c8 
    /*00004380*/ CMP         R3, #0 
    /*00004384*/ BEQ         VI_ReleaseChnBuffer_x4350
    VI_ReleaseChnBuffer_x4388:
    /*00004388*/ MOV         R0, R4 
    /*0000438c*/ MOV         R1, #0 
    /*00004390*/ BL          0x0000000000004390          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00004394*/ ADD         R4, R4, #712                @ 0x2c8 
    /*00004398*/ STR         R7, [R4, #-16] 
    /*0000439c*/ CMP         R4, R6 
    /*000043a0*/ BNE         VI_ReleaseChnBuffer_x435c
    VI_ReleaseChnBuffer_x43a4:
    /*000043a4*/ MOV         R0, #0 
    /*000043a8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VI_ReleaseChnBuffer


FUNC_BEGIN VI_ReleaseSrcBuffer
    /*000043ac*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000043b0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000043b4*/ ADD         R3, R3, R0, LSL #2 
    /*000043b8*/ MOV         R1, #0 
    /*000043bc*/ PUSH        {R4, R5, R6, LR} 
    /*000043c0*/ MOV         R4, R0 
    /*000043c4*/ LDR         R5, [R3, #704]              @ 0x2c0 
    /*000043c8*/ BL          0x00000000000043C8          @ VI_DRV_EnableSrc [R_ARM_CALL: .text+0x32e74] 
    /*000043cc*/ MOV         R0, R4 
    /*000043d0*/ ADD         R4, R5, #12288              @ 0x3000 
    /*000043d4*/ BL          0x00000000000043D4          @ VI_DRV_SetSrcUpdate [R_ARM_CALL: .text+0x32f1c] 
    /*000043d8*/ LDR         R3, [R4, #3568]             @ 0xdf0 
    /*000043dc*/ CMP         R3, #1 
    /*000043e0*/ BEQ         VI_ReleaseSrcBuffer_x4414
    VI_ReleaseSrcBuffer_x43e4:
    /*000043e4*/ LDR         R3, [R4, #4016]             @ 0xfb0 
    /*000043e8*/ CMP         R3, #1 
    /*000043ec*/ BEQ         VI_ReleaseSrcBuffer_x43f8
    /*000043f0*/ MOV         R0, #0 
    /*000043f4*/ POP         {R4, R5, R6, PC} 
    VI_ReleaseSrcBuffer_x43f8:
    /*000043f8*/ ADD         R0, R5, #15872              @ 0x3e00 
    /*000043fc*/ MOV         R1, #0 
    /*00004400*/ BL          0x0000000000004400          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00004404*/ MOV         R3, #0 
    /*00004408*/ MOV         R0, #0 
    /*0000440c*/ STR         R3, [R4, #4016]             @ 0xfb0 
    /*00004410*/ POP         {R4, R5, R6, PC} 
    VI_ReleaseSrcBuffer_x4414:
    /*00004414*/ MOV         R1, #0 
    /*00004418*/ ADD         R0, R5, #15424              @ 0x3c40 
    /*0000441c*/ BL          0x000000000000441C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00004420*/ MOV         R3, #0 
    /*00004424*/ STR         R3, [R4, #3568]             @ 0xdf0 
    /*00004428*/ B           VI_ReleaseSrcBuffer_x43e4
FUNC_END VI_ReleaseSrcBuffer


FUNC_BEGIN VI_IsPhyChnAttachFishEye
    /*0000442c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00004430*/ SUBS        R4, R1, #0 
    /*00004434*/ SUB         SP, SP, #20 
    /*00004438*/ MOV         R8, R0 
    /*0000443c*/ BNE         VI_IsPhyChnAttachFishEye_x44fc
    /*00004440*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00004444*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00004448*/ ADD         R3, R3, R0, LSL #2 
    /*0000444c*/ LDR         R7, [R3, #704]              @ 0x2c0 
    /*00004450*/ ADD         R3, R7, #12288              @ 0x3000 
    /*00004454*/ LDR         R9, [R3, #2136]             @ 0x858 
    /*00004458*/ CMP         R9, #0 
    /*0000445c*/ ADDNE       R6, R7, #14400              @ 0x3840 
    /*00004460*/ ADDNE       R6, R6, #28 
    /*00004464*/ MOVWNE      SL, #9586                   @ 0x2572 
    /*00004468*/ BNE         VI_IsPhyChnAttachFishEye_x4478
    /*0000446c*/ B           VI_IsPhyChnAttachFishEye_x44ec
    VI_IsPhyChnAttachFishEye_x4470:
    /*00004470*/ CMP         R9, R4 
    /*00004474*/ BEQ         VI_IsPhyChnAttachFishEye_x44ec
    VI_IsPhyChnAttachFishEye_x4478:
    /*00004478*/ LDR         R5, [R6], #4 
    /*0000447c*/ ADD         R4, R4, #1 
    /*00004480*/ SUB         R2, R5, #1 
    /*00004484*/ ADD         R3, R5, SL 
    /*00004488*/ CMP         R2, #7 
    /*0000448c*/ ADD         R3, R7, R3, LSL #2 
    /*00004490*/ BHI         VI_IsPhyChnAttachFishEye_x4470
    /*00004494*/ LDR         R3, [R3, #4] 
    /*00004498*/ CMP         R3, #0 
    /*0000449c*/ BEQ         VI_IsPhyChnAttachFishEye_x4470
    /*000044a0*/ MOV         R1, R5 
    /*000044a4*/ MOV         R0, R8 
    /*000044a8*/ BL          0x00000000000044A8          @ VI_DRV_IsExtChnFisheyeEnable [R_ARM_CALL: .text+0x2b1d4] 
    /*000044ac*/ CMP         R0, #1 
    /*000044b0*/ MOV         FP, R0 
    /*000044b4*/ BNE         VI_IsPhyChnAttachFishEye_x4470
    /*000044b8*/ MOV         R2, #0 
    /*000044bc*/ MOVW        R3, #2700                   @ 0xa8c 
    /*000044c0*/ STR         R2, [SP, #12] 
    /*000044c4*/ MOV         R1, #16 
    /*000044c8*/ STR         R3, [SP] 
    /*000044cc*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc64] 
    /*000044d0*/ STR         R5, [SP, #8] 
    /*000044d4*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc64] 
    /*000044d8*/ STR         R8, [SP, #4] 
    /*000044dc*/ MOV         R0, #3 
    /*000044e0*/ LDR         R3, [PC, #76]               @ 0x0000000000004534 
    /*000044e4*/ BL          0x00000000000044E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000044e8*/ B           VI_IsPhyChnAttachFishEye_x44f0
    VI_IsPhyChnAttachFishEye_x44ec:
    /*000044ec*/ MOV         FP, #0 
    VI_IsPhyChnAttachFishEye_x44f0:
    /*000044f0*/ MOV         R0, FP 
    /*000044f4*/ ADD         SP, SP, #20 
    /*000044f8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_IsPhyChnAttachFishEye_x44fc:
    /*000044fc*/ STR         R0, [SP, #4] 
    /*00004500*/ MOVW        R3, #2676                   @ 0xa74 
    /*00004504*/ STR         R4, [SP, #8] 
    /*00004508*/ MOV         R1, #16 
    /*0000450c*/ STR         R3, [SP] 
    /*00004510*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc28] 
    /*00004514*/ LDR         R3, [PC, #24]               @ 0x0000000000004534 
    /*00004518*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc28] 
    /*0000451c*/ MOV         R0, #3 
    /*00004520*/ MOV         FP, #0 
    /*00004524*/ BL          0x0000000000004524          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004528*/ MOV         R0, FP 
    /*0000452c*/ ADD         SP, SP, #20 
    /*00004530*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00004534*/ @           <UNDEFINED> instruction: 0x000001bc 
FUNC_END VI_IsPhyChnAttachFishEye


FUNC_BEGIN VI_CheckCommCrop
    /*00004538*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000453c*/ SUB         SP, SP, #12 
    /*00004540*/ LDR         R3, [R0] 
    /*00004544*/ CMP         R3, #1 
    /*00004548*/ BHI         VI_CheckCommCrop_x45a0
    /*0000454c*/ LDR         R3, [R0, #4] 
    /*00004550*/ CMP         R3, #1 
    /*00004554*/ BHI         VI_CheckCommCrop_x45d0
    /*00004558*/ CMP         R3, #0 
    /*0000455c*/ MOVNE       R0, #0 
    /*00004560*/ BNE         VI_CheckCommCrop_x4598
    /*00004564*/ LDR         R2, [R0, #8] 
    /*00004568*/ CMP         R2, #1000                   @ 0x3e8 
    /*0000456c*/ BCS         VI_CheckCommCrop_x45fc
    /*00004570*/ LDR         R2, [R0, #12] 
    /*00004574*/ CMP         R2, #1000                   @ 0x3e8 
    /*00004578*/ BCS         VI_CheckCommCrop_x4614
    /*0000457c*/ LDR         R2, [R0, #16] 
    /*00004580*/ CMP         R2, #1000                   @ 0x3e8 
    /*00004584*/ BHI         VI_CheckCommCrop_x462c
    /*00004588*/ LDR         R2, [R0, #20] 
    /*0000458c*/ CMP         R2, #1000                   @ 0x3e8 
    /*00004590*/ MOVLS       R0, R3 
    /*00004594*/ BHI         VI_CheckCommCrop_x4644
    VI_CheckCommCrop_x4598:
    /*00004598*/ ADD         SP, SP, #12 
    /*0000459c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_CheckCommCrop_x45a0:
    /*000045a0*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcc4] 
    /*000045a4*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcc4] 
    /*000045a8*/ STR         R3, [SP, #4] 
    /*000045ac*/ MOVW        R3, #2712                   @ 0xa98 
    /*000045b0*/ STR         R3, [SP] 
    VI_CheckCommCrop_x45b4:
    /*000045b4*/ LDR         R3, [PC, #160]              @ 0x000000000000465c 
    /*000045b8*/ MOV         R1, #16 
    /*000045bc*/ MOV         R0, #3 
    /*000045c0*/ BL          0x00000000000045C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000045c4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000045c8*/ MOVT        R0, #40976                  @ 0xa010 
    /*000045cc*/ B           VI_CheckCommCrop_x4598
    VI_CheckCommCrop_x45d0:
    /*000045d0*/ MOVW        R3, #2718                   @ 0xa9e 
    /*000045d4*/ MOVW        R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd08] 
    /*000045d8*/ STR         R3, [SP] 
    /*000045dc*/ MOVT        R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd08] 
    /*000045e0*/ LDR         R3, [PC, #116]              @ 0x000000000000465c 
    /*000045e4*/ MOV         R1, #16 
    /*000045e8*/ MOV         R0, #3 
    /*000045ec*/ BL          0x00000000000045EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000045f0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000045f4*/ MOVT        R0, #40976                  @ 0xa010 
    /*000045f8*/ B           VI_CheckCommCrop_x4598
    VI_CheckCommCrop_x45fc:
    /*000045fc*/ STR         R2, [SP, #4] 
    /*00004600*/ MOVW        R3, #2726                   @ 0xaa6 
    /*00004604*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd6c] 
    /*00004608*/ STR         R3, [SP] 
    /*0000460c*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd6c] 
    /*00004610*/ B           VI_CheckCommCrop_x45b4
    VI_CheckCommCrop_x4614:
    /*00004614*/ STR         R2, [SP, #4] 
    /*00004618*/ MOVW        R3, #2732                   @ 0xaac 
    /*0000461c*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdbc] 
    /*00004620*/ STR         R3, [SP] 
    /*00004624*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdbc] 
    /*00004628*/ B           VI_CheckCommCrop_x45b4
    VI_CheckCommCrop_x462c:
    /*0000462c*/ STR         R2, [SP, #4] 
    /*00004630*/ MOVW        R3, #2738                   @ 0xab2 
    /*00004634*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe0c] 
    /*00004638*/ STR         R3, [SP] 
    /*0000463c*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe0c] 
    /*00004640*/ B           VI_CheckCommCrop_x45b4
    VI_CheckCommCrop_x4644:
    /*00004644*/ STR         R2, [SP, #4] 
    /*00004648*/ MOVW        R3, #2744                   @ 0xab8 
    /*0000464c*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe60] 
    /*00004650*/ STR         R3, [SP] 
    /*00004654*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe60] 
    /*00004658*/ B           VI_CheckCommCrop_x45b4
    /*0000465c*/ LDRDEQ      R0, [R0], -R8 
FUNC_END VI_CheckCommCrop


FUNC_BEGIN VI_WaitCaptureFrameStop
    /*00004660*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00004664*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00004668*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000466c*/ MOV         R4, #176                    @ 0xb0 
    /*00004670*/ MLA         R4, R4, R0, R3 
    /*00004674*/ SUB         SP, SP, #24 
    /*00004678*/ MOV         R7, R1 
    /*0000467c*/ MOV         SL, R0 
    /*00004680*/ ADD         R1, SP, #12 
    /*00004684*/ MOVW        R6, #16960                  @ 0x4240 
    /*00004688*/ ADD         R4, R4, #140                @ 0x8c 
    /*0000468c*/ MOVT        R6, #15 
    /*00004690*/ MOV         R0, R4 
    /*00004694*/ BL          0x0000000000004694          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004698*/ MOV         R3, #2 
    /*0000469c*/ MOV         R0, R4 
    /*000046a0*/ STR         R3, [R7] 
    /*000046a4*/ ADD         R1, SP, #12 
    /*000046a8*/ BL          0x00000000000046A8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000046ac*/ ADD         R0, SP, #16 
    /*000046b0*/ BL          0x00000000000046B0          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*000046b4*/ LDR         R4, [SP, #20] 
    /*000046b8*/ LDR         R2, [R7] 
    /*000046bc*/ LDR         R3, [SP, #16] 
    /*000046c0*/ ASR         R5, R4, #31 
    /*000046c4*/ CMP         R2, #1 
    /*000046c8*/ SMLAL       R4, R5, R6, R3 
    /*000046cc*/ BEQ         VI_WaitCaptureFrameStop_x4744
    /*000046d0*/ MOVW        R8, #54463                  @ 0xd4bf 
    /*000046d4*/ MOV         R9, #0 
    /*000046d8*/ MOVT        R8, #1 
    /*000046dc*/ B           VI_WaitCaptureFrameStop_x46f0
    VI_WaitCaptureFrameStop_x46e0:
    /*000046e0*/ BL          0x00000000000046E0          @ osal_msleep [R_ARM_CALL: +0x0] 
    /*000046e4*/ LDR         R3, [R7] 
    /*000046e8*/ CMP         R3, #1 
    /*000046ec*/ BEQ         VI_WaitCaptureFrameStop_x4744
    VI_WaitCaptureFrameStop_x46f0:
    /*000046f0*/ ADD         R0, SP, #16 
    /*000046f4*/ BL          0x00000000000046F4          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*000046f8*/ LDR         R2, [SP, #20] 
    /*000046fc*/ LDR         R1, [SP, #16] 
    /*00004700*/ MOV         R0, #10 
    /*00004704*/ ASR         R3, R2, #31 
    /*00004708*/ SMLAL       R2, R3, R6, R1 
    /*0000470c*/ SUBS        R2, R2, R4 
    /*00004710*/ SBC         R3, R3, R5 
    /*00004714*/ CMP         R3, R9 
    /*00004718*/ CMPEQ       R2, R8 
    /*0000471c*/ BLS         VI_WaitCaptureFrameStop_x46e0
    /*00004720*/ MOVW        R3, #2771                   @ 0xad3 
    /*00004724*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xeb8] 
    /*00004728*/ STR         R3, [SP] 
    /*0000472c*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0xeb8] 
    /*00004730*/ STR         SL, [SP, #4] 
    /*00004734*/ MOV         R1, #16 
    /*00004738*/ LDR         R3, [PC, #16]               @ 0x0000000000004750 
    /*0000473c*/ MOV         R0, #3 
    /*00004740*/ BL          0x0000000000004740          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_WaitCaptureFrameStop_x4744:
    /*00004744*/ MOV         R0, #0 
    /*00004748*/ ADD         SP, SP, #24 
    /*0000474c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*00004750*/ ANDEQ       R0, R0, IP, ROR #3 
FUNC_END VI_WaitCaptureFrameStop


FUNC_BEGIN VI_ReleaseChnCaptureVB
    /*00004754*/ MOV         R2, #712                    @ 0x2c8 
    /*00004758*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000475c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00004760*/ ADD         R0, R3, R0, LSL #2 
    /*00004764*/ MUL         R3, R2, R1 
    /*00004768*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000476c*/ MOVW        R6, #17016                  @ 0x4278 
    /*00004770*/ LDR         R4, [R0, #704]              @ 0x2c0 
    /*00004774*/ MOV         R5, R1 
    /*00004778*/ ADD         R7, R4, R3 
    /*0000477c*/ LDR         R2, [R7, R6] 
    /*00004780*/ CMP         R2, #0 
    /*00004784*/ BNE         VI_ReleaseChnCaptureVB_x47c4
    VI_ReleaseChnCaptureVB_x4788:
    /*00004788*/ MOV         R1, #712                    @ 0x2c8 
    /*0000478c*/ MOVW        R6, #23424                  @ 0x5b80 
    /*00004790*/ MUL         R1, R1, R5 
    /*00004794*/ ADD         R5, R4, R1 
    /*00004798*/ LDR         R3, [R5, R6] 
    /*0000479c*/ CMP         R3, #0 
    /*000047a0*/ POPEQ       {R4, R5, R6, R7, R8, PC} 
    /*000047a4*/ ADD         R0, R1, #22528              @ 0x5800 
    /*000047a8*/ MOV         R1, #0 
    /*000047ac*/ ADD         R0, R0, #200                @ 0xc8 
    /*000047b0*/ ADD         R0, R4, R0 
    /*000047b4*/ BL          0x00000000000047B4          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*000047b8*/ MOV         R3, #0 
    /*000047bc*/ STR         R3, [R5, R6] 
    /*000047c0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_ReleaseChnCaptureVB_x47c4:
    /*000047c4*/ ADD         R0, R3, #16320              @ 0x3fc0 
    /*000047c8*/ MOV         R1, #0 
    /*000047cc*/ ADD         R0, R4, R0 
    /*000047d0*/ BL          0x00000000000047D0          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*000047d4*/ MOV         R3, #0 
    /*000047d8*/ STR         R3, [R7, R6] 
    /*000047dc*/ B           VI_ReleaseChnCaptureVB_x4788
FUNC_END VI_ReleaseChnCaptureVB


FUNC_BEGIN VI_LineModeSendPipeFrame
    /*000047e0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000047e4*/ SUBS        R7, R1, #0 
    /*000047e8*/ SUB         SP, SP, #76                 @ 0x4c 
    /*000047ec*/ MOV         R4, R0 
    /*000047f0*/ MOV         R5, R2 
    /*000047f4*/ MOV         R8, R3 
    /*000047f8*/ BEQ         VI_LineModeSendPipeFrame_x4a24
    VI_LineModeSendPipeFrame_x47fc:
    /*000047fc*/ MOV         R0, R4 
    /*00004800*/ BL          0x0000000000004800          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00004804*/ SUBS        R6, R0, #0 
    /*00004808*/ BEQ         VI_LineModeSendPipeFrame_x4818
    VI_LineModeSendPipeFrame_x480c:
    /*0000480c*/ MOV         R0, R6 
    /*00004810*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00004814*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_LineModeSendPipeFrame_x4818:
    /*00004818*/ MOV         R3, #176                    @ 0xb0 
    /*0000481c*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00004820*/ MUL         R3, R3, R4 
    /*00004824*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00004828*/ ADD         R9, R3, #100                @ 0x64 
    /*0000482c*/ ADD         R9, R6, R9 
    /*00004830*/ STR         R3, [SP, #28] 
    /*00004834*/ MOV         R0, R9 
    /*00004838*/ BL          0x0000000000004838          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000483c*/ LDR         R3, [SP, #28] 
    /*00004840*/ SUBS        FP, R0, #0 
    /*00004844*/ BNE         VI_LineModeSendPipeFrame_x4b8c
    /*00004848*/ LSL         R2, R4, #2 
    /*0000484c*/ STR         R2, [SP, #32] 
    /*00004850*/ ADD         R2, R6, R2 
    /*00004854*/ LDR         R2, [R2, #704]              @ 0x2c0 
    /*00004858*/ CMP         R2, #0 
    /*0000485c*/ STR         R2, [SP, #28] 
    /*00004860*/ BEQ         VI_LineModeSendPipeFrame_x4d8c
    /*00004864*/ CMN         R5, #1 
    /*00004868*/ BLT         VI_LineModeSendPipeFrame_x4a80
    /*0000486c*/ LDR         R2, [R6, R3] 
    /*00004870*/ ADD         SL, R6, R3 
    /*00004874*/ CMP         R2, #1 
    /*00004878*/ BEQ         VI_LineModeSendPipeFrame_x4a74
    /*0000487c*/ LDR         R2, [SP, #28] 
    /*00004880*/ ADD         R2, R2, #36864              @ 0x9000 
    /*00004884*/ LDR         R2, [R2, #1480]             @ 0x5c8 
    /*00004888*/ CMP         R2, #0 
    /*0000488c*/ BEQ         VI_LineModeSendPipeFrame_x4a34
    /*00004890*/ MOV         R0, #2 
    /*00004894*/ STR         R3, [SP, #36]               @ 0x24 
    /*00004898*/ BL          0x0000000000004898          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000489c*/ LDR         R3, [SP, #36]               @ 0x24 
    /*000048a0*/ CMP         R0, #0 
    /*000048a4*/ BEQ         VI_LineModeSendPipeFrame_x4bb0
    /*000048a8*/ ADD         R2, R3, #140                @ 0x8c 
    /*000048ac*/ STR         R3, [SP, #40]               @ 0x28 
    /*000048b0*/ ADD         R3, R6, R2 
    /*000048b4*/ ADD         R1, SP, #48                 @ 0x30 
    /*000048b8*/ STR         R3, [SP, #36]               @ 0x24 
    /*000048bc*/ MOV         R0, R3 
    /*000048c0*/ BL          0x00000000000048C0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000048c4*/ LDR         R2, [SL, #24] 
    /*000048c8*/ LDR         R0, [SP, #36]               @ 0x24 
    /*000048cc*/ ADD         R1, SP, #48                 @ 0x30 
    /*000048d0*/ MOV         SL, R2 
    /*000048d4*/ STR         R2, [SP, #44]               @ 0x2c 
    /*000048d8*/ BL          0x00000000000048D8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000048dc*/ CMP         R5, #0 
    /*000048e0*/ STR         SL, [SP, #60]               @ 0x3c 
    /*000048e4*/ STR         R4, [SP, #52]               @ 0x34 
    /*000048e8*/ STR         FP, [SP, #56]               @ 0x38 
    /*000048ec*/ STR         FP, [SP, #64]               @ 0x40 
    /*000048f0*/ STR         FP, [SP, #68]               @ 0x44 
    /*000048f4*/ LDR         R3, [SP, #40]               @ 0x28 
    /*000048f8*/ BLE         VI_LineModeSendPipeFrame_x4ab4
    /*000048fc*/ ADD         SL, SP, #52                 @ 0x34 
    /*00004900*/ MOV         R0, R9 
    /*00004904*/ BL          0x0000000000004904          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004908*/ MOVW        FP, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x419c] 
    /*0000490c*/ MOV         R0, SL 
    /*00004910*/ MOVT        FP, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x419c] 
    /*00004914*/ BL          0x0000000000004914          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*00004918*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000491c*/ STR         R9, [SP, #40]               @ 0x28 
    /*00004920*/ ADD         R3, R3, #76                 @ 0x4c 
    /*00004924*/ ADD         R3, R6, R3 
    /*00004928*/ MOV         R9, R3 
    /*0000492c*/ B           VI_LineModeSendPipeFrame_x4944
    VI_LineModeSendPipeFrame_x4930:
    /*00004930*/ BL          0x0000000000004930          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00004934*/ ADD         R3, R0, #512                @ 0x200 
    /*00004938*/ MOV         R5, R0 
    /*0000493c*/ BICS        R3, R3, #512                @ 0x200 
    /*00004940*/ BEQ         VI_LineModeSendPipeFrame_x4b04
    VI_LineModeSendPipeFrame_x4944:
    /*00004944*/ MOV         R0, SL 
    /*00004948*/ BL          0x0000000000004948          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0000494c*/ MOV         R3, R5 
    /*00004950*/ MOV         R2, SL 
    /*00004954*/ MOV         R1, FP 
    /*00004958*/ CMP         R0, #0 
    /*0000495c*/ MOV         R0, R9 
    /*00004960*/ BEQ         VI_LineModeSendPipeFrame_x4930
    /*00004964*/ MOV         R0, R5 
    /*00004968*/ LDR         R9, [SP, #40]               @ 0x28 
    /*0000496c*/ BL          0x000000000000496C          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*00004970*/ MOV         R5, R0 
    VI_LineModeSendPipeFrame_x4974:
    /*00004974*/ MOV         R0, R9 
    /*00004978*/ BL          0x0000000000004978          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000497c*/ CMP         R0, #0 
    /*00004980*/ BNE         VI_LineModeSendPipeFrame_x4b8c
    /*00004984*/ CMP         R5, #0 
    /*00004988*/ BLT         VI_LineModeSendPipeFrame_x4b1c
    /*0000498c*/ BEQ         VI_LineModeSendPipeFrame_x4c78
    VI_LineModeSendPipeFrame_x4990:
    /*00004990*/ LDR         R3, [SP, #64]               @ 0x40 
    /*00004994*/ CMP         R3, #0 
    /*00004998*/ BEQ         VI_LineModeSendPipeFrame_x4dc4
    VI_LineModeSendPipeFrame_x499c:
    /*0000499c*/ LDR         R3, [SP, #32] 
    /*000049a0*/ ADD         R6, R6, R3 
    /*000049a4*/ LDR         R3, [R6, #704]              @ 0x2c0 
    /*000049a8*/ CMP         R3, #0 
    /*000049ac*/ BEQ         VI_LineModeSendPipeFrame_x4ca8
    /*000049b0*/ ADD         R1, SP, #48                 @ 0x30 
    /*000049b4*/ LDR         R0, [SP, #36]               @ 0x24 
    /*000049b8*/ BL          0x00000000000049B8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000049bc*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*000049c0*/ MOV         R0, R4 
    /*000049c4*/ BL          0x00000000000049C4          @ VI_AbnormalVerifyAfterWait [R_ARM_CALL: .text+0x4208] 
    /*000049c8*/ SUBS        R6, R0, #0 
    /*000049cc*/ BNE         VI_LineModeSendPipeFrame_x4b98
    /*000049d0*/ LDR         R3, [SP, #28] 
    /*000049d4*/ ADD         SL, R3, #4 
    /*000049d8*/ MOV         R0, SL 
    /*000049dc*/ BL          0x00000000000049DC          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*000049e0*/ CMP         R0, #2 
    /*000049e4*/ BLS         VI_LineModeSendPipeFrame_x4be0
    /*000049e8*/ MOVW        R3, #2962                   @ 0xb92 
    /*000049ec*/ STR         R4, [SP, #4] 
    /*000049f0*/ STR         R3, [SP] 
    /*000049f4*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1088] 
    /*000049f8*/ LDR         R3, [PC, #1056]             @ 0x0000000000004e20 
    /*000049fc*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1088] 
    /*00004a00*/ MOV         R1, #16 
    /*00004a04*/ MOV         R0, #3 
    /*00004a08*/ BL          0x0000000000004A08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004a0c*/ MOVW        R6, #32783                  @ 0x800f 
    /*00004a10*/ MOVT        R6, #40976                  @ 0xa010 
    VI_LineModeSendPipeFrame_x4a14:
    /*00004a14*/ ADD         R1, SP, #48                 @ 0x30 
    /*00004a18*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00004a1c*/ BL          0x0000000000004A1C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004a20*/ B           VI_LineModeSendPipeFrame_x4a60
    VI_LineModeSendPipeFrame_x4a24:
    /*00004a24*/ BL          0x000000000000133C 
    /*00004a28*/ SUBS        R6, R0, #0 
    /*00004a2c*/ BNE         VI_LineModeSendPipeFrame_x480c
    /*00004a30*/ B           VI_LineModeSendPipeFrame_x47fc
    VI_LineModeSendPipeFrame_x4a34:
    /*00004a34*/ MOVW        R3, #2845                   @ 0xb1d 
    /*00004a38*/ STR         R4, [SP, #4] 
    /*00004a3c*/ STR         R3, [SP] 
    /*00004a40*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf38] 
    /*00004a44*/ LDR         R3, [PC, #980]              @ 0x0000000000004e20 
    /*00004a48*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf38] 
    /*00004a4c*/ MOV         R1, #16 
    /*00004a50*/ MOV         R0, #3 
    /*00004a54*/ BL          0x0000000000004A54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004a58*/ MOVW        R6, #32784                  @ 0x8010 
    /*00004a5c*/ MOVT        R6, #40976                  @ 0xa010 
    VI_LineModeSendPipeFrame_x4a60:
    /*00004a60*/ MOV         R0, R9 
    /*00004a64*/ BL          0x0000000000004A64          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004a68*/ MOV         R0, R6 
    /*00004a6c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00004a70*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_LineModeSendPipeFrame_x4a74:
    /*00004a74*/ MOVW        R6, #32786                  @ 0x8012 
    /*00004a78*/ MOVT        R6, #40976                  @ 0xa010 
    /*00004a7c*/ B           VI_LineModeSendPipeFrame_x4a60
    VI_LineModeSendPipeFrame_x4a80:
    /*00004a80*/ MOV         R3, #2832                   @ 0xb10 
    /*00004a84*/ STR         R5, [SP, #8] 
    /*00004a88*/ STR         R3, [SP] 
    /*00004a8c*/ MOVW        R2, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf00] 
    /*00004a90*/ STR         R4, [SP, #4] 
    /*00004a94*/ MOVT        R2, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf00] 
    /*00004a98*/ LDR         R3, [PC, #896]              @ 0x0000000000004e20 
    /*00004a9c*/ MOV         R1, #16 
    /*00004aa0*/ MOV         R0, #3 
    /*00004aa4*/ MOVW        R6, #32771                  @ 0x8003 
    /*00004aa8*/ BL          0x0000000000004AA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004aac*/ MOVT        R6, #40976                  @ 0xa010 
    /*00004ab0*/ B           VI_LineModeSendPipeFrame_x4a60
    VI_LineModeSendPipeFrame_x4ab4:
    /*00004ab4*/ BNE         VI_LineModeSendPipeFrame_x4b28
    /*00004ab8*/ LDR         R3, [SP, #28] 
    /*00004abc*/ ADD         R0, R3, #4 
    /*00004ac0*/ BL          0x0000000000004AC0          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00004ac4*/ CMP         R0, #2 
    /*00004ac8*/ BLS         VI_LineModeSendPipeFrame_x499c
    /*00004acc*/ MOV         R2, #0 
    /*00004ad0*/ MOVW        R3, #2907                   @ 0xb5b 
    /*00004ad4*/ STR         R2, [SP, #8] 
    /*00004ad8*/ MOV         R1, #16 
    /*00004adc*/ STR         R3, [SP] 
    /*00004ae0*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1004] 
    /*00004ae4*/ STR         R4, [SP, #4] 
    /*00004ae8*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1004] 
    /*00004aec*/ LDR         R3, [PC, #812]              @ 0x0000000000004e20 
    /*00004af0*/ MOV         R0, #3 
    /*00004af4*/ MOVW        R6, #32783                  @ 0x800f 
    /*00004af8*/ BL          0x0000000000004AF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004afc*/ MOVT        R6, #40976                  @ 0xa010 
    /*00004b00*/ B           VI_LineModeSendPipeFrame_x4a60
    VI_LineModeSendPipeFrame_x4b04:
    /*00004b04*/ LDR         R9, [SP, #40]               @ 0x28 
    /*00004b08*/ B           VI_LineModeSendPipeFrame_x4974
    VI_LineModeSendPipeFrame_x4b0c:
    /*00004b0c*/ MOV         R0, R9 
    /*00004b10*/ BL          0x0000000000004B10          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00004b14*/ CMP         R0, #0 
    /*00004b18*/ BNE         VI_LineModeSendPipeFrame_x4b8c
    VI_LineModeSendPipeFrame_x4b1c:
    /*00004b1c*/ MOV         R6, #65024                  @ 0xfe00 
    /*00004b20*/ MOVT        R6, #65535                  @ 0xffff 
    /*00004b24*/ B           VI_LineModeSendPipeFrame_x4a60
    VI_LineModeSendPipeFrame_x4b28:
    /*00004b28*/ MOV         R0, R9 
    /*00004b2c*/ STR         R3, [SP, #40]               @ 0x28 
    /*00004b30*/ BL          0x0000000000004B30          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004b34*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00004b38*/ MOVW        R5, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x419c] 
    /*00004b3c*/ ADD         SL, SP, #52                 @ 0x34 
    /*00004b40*/ ADD         R3, R3, #76                 @ 0x4c 
    /*00004b44*/ MOVT        R5, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x419c] 
    /*00004b48*/ ADD         FP, R6, R3 
    /*00004b4c*/ B           VI_LineModeSendPipeFrame_x4b5c
    VI_LineModeSendPipeFrame_x4b50:
    /*00004b50*/ BL          0x0000000000004B50          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00004b54*/ CMP         R0, #0 
    /*00004b58*/ BLT         VI_LineModeSendPipeFrame_x4b0c
    VI_LineModeSendPipeFrame_x4b5c:
    /*00004b5c*/ MOV         R0, SL 
    /*00004b60*/ BL          0x0000000000004B60          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*00004b64*/ MOV         R3, #100                    @ 0x64 
    /*00004b68*/ MOV         R2, SL 
    /*00004b6c*/ MOV         R1, R5 
    /*00004b70*/ CMP         R0, #0 
    /*00004b74*/ MOV         R0, FP 
    /*00004b78*/ BEQ         VI_LineModeSendPipeFrame_x4b50
    /*00004b7c*/ MOV         R0, R9 
    /*00004b80*/ BL          0x0000000000004B80          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00004b84*/ CMP         R0, #0 
    /*00004b88*/ BEQ         VI_LineModeSendPipeFrame_x4990
    VI_LineModeSendPipeFrame_x4b8c:
    /*00004b8c*/ MOV         R6, #65024                  @ 0xfe00 
    /*00004b90*/ MOVT        R6, #65535                  @ 0xffff 
    /*00004b94*/ B           VI_LineModeSendPipeFrame_x480c
    VI_LineModeSendPipeFrame_x4b98:
    /*00004b98*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00004b9c*/ ADD         R1, SP, #48                 @ 0x30 
    /*00004ba0*/ BL          0x0000000000004BA0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004ba4*/ MOV         R0, R9 
    /*00004ba8*/ BL          0x0000000000004BA8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004bac*/ B           VI_LineModeSendPipeFrame_x480c
    VI_LineModeSendPipeFrame_x4bb0:
    /*00004bb0*/ MOVW        R3, #2852                   @ 0xb24 
    /*00004bb4*/ STR         R4, [SP, #4] 
    /*00004bb8*/ STR         R3, [SP] 
    /*00004bbc*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf78] 
    /*00004bc0*/ LDR         R3, [PC, #600]              @ 0x0000000000004e20 
    /*00004bc4*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf78] 
    /*00004bc8*/ MOV         R1, #16 
    /*00004bcc*/ MOV         R0, #3 
    /*00004bd0*/ MOVW        R6, #32777                  @ 0x8009 
    /*00004bd4*/ BL          0x0000000000004BD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004bd8*/ MOVT        R6, #40976                  @ 0xa010 
    /*00004bdc*/ B           VI_LineModeSendPipeFrame_x4a60
    VI_LineModeSendPipeFrame_x4be0:
    /*00004be0*/ MOV         R0, SL 
    /*00004be4*/ BL          0x0000000000004BE4          @ VI_QueueGetFree [R_ARM_CALL: .text+0x161cc] 
    /*00004be8*/ SUBS        R5, R0, #0 
    /*00004bec*/ BEQ         VI_LineModeSendPipeFrame_x4dd8
    /*00004bf0*/ SUBS        FP, R5, #580                @ 0x244 
    /*00004bf4*/ BEQ         VI_LineModeSendPipeFrame_x4dd8
    /*00004bf8*/ MOV         R1, R7 
    /*00004bfc*/ MOV         R2, #336                    @ 0x150 
    /*00004c00*/ MOV         R0, FP 
    /*00004c04*/ BL          0x0000000000004C04          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004c08*/ MOV         R3, #1 
    /*00004c0c*/ STR         R6, [R5, #-136]             @ 0xffffff78 
    /*00004c10*/ MOV         R1, R6 
    /*00004c14*/ MOV         R0, FP 
    /*00004c18*/ STR         R3, [R5, #-148]             @ 0xffffff6c 
    /*00004c1c*/ STR         R3, [R5, #-144]             @ 0xffffff70 
    /*00004c20*/ STR         R3, [R5, #-140]             @ 0xffffff74 
    /*00004c24*/ BL          0x0000000000004C24          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00004c28*/ SUBS        R6, R0, #0 
    /*00004c2c*/ BEQ         VI_LineModeSendPipeFrame_x4cd8
    /*00004c30*/ SUB         R3, R5, #576                @ 0x240 
    /*00004c34*/ STR         R6, [SP, #16] 
    /*00004c38*/ MOVW        LR, #2988                   @ 0xbac 
    /*00004c3c*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x110c] 
    /*00004c40*/ LDRD        R0, [R3, #116]              @ 0x74 
    /*00004c44*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x110c] 
    /*00004c48*/ LDR         R3, [PC, #464]              @ 0x0000000000004e20 
    /*00004c4c*/ STRD        R0, [SP, #8] 
    /*00004c50*/ MOV         R1, #16 
    /*00004c54*/ LDR         IP, [R5, #-252]             @ 0xffffff04 
    /*00004c58*/ MOV         R0, #3 
    /*00004c5c*/ STR         LR, [SP] 
    /*00004c60*/ STR         IP, [SP, #4] 
    /*00004c64*/ BL          0x0000000000004C64          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004c68*/ MOV         R1, R5 
    /*00004c6c*/ MOV         R0, SL 
    /*00004c70*/ BL          0x0000000000004C70          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00004c74*/ B           VI_LineModeSendPipeFrame_x4a14
    VI_LineModeSendPipeFrame_x4c78:
    /*00004c78*/ MOVW        R3, #2886                   @ 0xb46 
    /*00004c7c*/ STR         R4, [SP, #4] 
    /*00004c80*/ STR         R3, [SP] 
    /*00004c84*/ MOVW        R2, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfc4] 
    /*00004c88*/ LDR         R3, [PC, #400]              @ 0x0000000000004e20 
    /*00004c8c*/ MOVT        R2, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfc4] 
    /*00004c90*/ MOV         R1, #16 
    /*00004c94*/ MOV         R0, #3 
    /*00004c98*/ MOVW        R6, #32783                  @ 0x800f 
    /*00004c9c*/ BL          0x0000000000004C9C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004ca0*/ MOVT        R6, #40976                  @ 0xa010 
    /*00004ca4*/ B           VI_LineModeSendPipeFrame_x4a60
    VI_LineModeSendPipeFrame_x4ca8:
    /*00004ca8*/ MOV         R3, #2944                   @ 0xb80 
    /*00004cac*/ STR         R4, [SP, #4] 
    /*00004cb0*/ STR         R3, [SP] 
    /*00004cb4*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1054] 
    /*00004cb8*/ LDR         R3, [PC, #352]              @ 0x0000000000004e20 
    /*00004cbc*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1054] 
    /*00004cc0*/ MOV         R1, #16 
    /*00004cc4*/ MOV         R0, #3 
    /*00004cc8*/ MOVW        R6, #32773                  @ 0x8005 
    /*00004ccc*/ BL          0x0000000000004CCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004cd0*/ MOVT        R6, #40976                  @ 0xa010 
    /*00004cd4*/ B           VI_LineModeSendPipeFrame_x4a60
    VI_LineModeSendPipeFrame_x4cd8:
    /*00004cd8*/ ADD         R1, SP, #48                 @ 0x30 
    /*00004cdc*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00004ce0*/ BL          0x0000000000004CE0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004ce4*/ SUB         R2, R5, #108                @ 0x6c 
    /*00004ce8*/ SUB         R1, R5, #132                @ 0x84 
    /*00004cec*/ MOV         R0, R4 
    /*00004cf0*/ BL          0x0000000000004CF0          @ VI_DRV_GetBeCfg [R_ARM_CALL: .text+0x385b0] 
    /*00004cf4*/ SUBS        R6, R0, #0 
    /*00004cf8*/ BEQ         VI_LineModeSendPipeFrame_x4d18
    /*00004cfc*/ MOV         R0, FP 
    /*00004d00*/ MOV         R1, #0 
    /*00004d04*/ BL          0x0000000000004D04          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00004d08*/ MOV         R1, R5 
    /*00004d0c*/ MOV         R0, SL 
    /*00004d10*/ BL          0x0000000000004D10          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00004d14*/ B           VI_LineModeSendPipeFrame_x4a60
    VI_LineModeSendPipeFrame_x4d18:
    /*00004d18*/ LDR         R7, [SP, #36]               @ 0x24 
    /*00004d1c*/ ADD         R1, SP, #48                 @ 0x30 
    /*00004d20*/ MOV         R0, R7 
    /*00004d24*/ BL          0x0000000000004D24          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004d28*/ MOV         R1, R5 
    /*00004d2c*/ MOV         R0, SL 
    /*00004d30*/ BL          0x0000000000004D30          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    /*00004d34*/ LDR         R1, [SP, #28] 
    /*00004d38*/ LDR         R2, [R5, #-576]             @ 0xfffffdc0 
    /*00004d3c*/ MOV         R0, R4 
    /*00004d40*/ ADD         R3, R1, #12288              @ 0x3000 
    /*00004d44*/ ADD         R1, R1, #36352              @ 0x8e00 
    /*00004d48*/ STR         R2, [R3, #2212]             @ 0x8a4 
    /*00004d4c*/ LDR         R2, [R5, #-580]             @ 0xfffffdbc 
    /*00004d50*/ STR         R2, [R3, #2208]             @ 0x8a0 
    /*00004d54*/ LDRD        R2, [R1, #200]              @ 0xc8 
    /*00004d58*/ ADDS        R2, R2, #1 
    /*00004d5c*/ ADC         R3, R3, #0 
    /*00004d60*/ STRD        R2, [R1, #200]              @ 0xc8 
    /*00004d64*/ BL          0x0000000000004D64          @ VI_UpdateWorkingPipeChnMkpAttr [R_ARM_CALL: .text+0x2988] 
    /*00004d68*/ ADD         R1, SP, #48                 @ 0x30 
    /*00004d6c*/ MOV         R0, R7 
    /*00004d70*/ BL          0x0000000000004D70          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004d74*/ MOV         R1, R8 
    /*00004d78*/ MOV         R0, R4 
    /*00004d7c*/ BL          0x0000000000004D7C          @ VI_StartOneTask [R_ARM_CALL: .text+0x1ed4] 
    /*00004d80*/ MOV         R0, R9 
    /*00004d84*/ BL          0x0000000000004D84          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004d88*/ B           VI_LineModeSendPipeFrame_x480c
    VI_LineModeSendPipeFrame_x4d8c:
    /*00004d8c*/ MOV         R0, R9 
    /*00004d90*/ MOVW        R6, #32773                  @ 0x8005 
    /*00004d94*/ BL          0x0000000000004D94          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004d98*/ MOVW        R3, #2826                   @ 0xb0a 
    /*00004d9c*/ STR         R4, [SP, #4] 
    /*00004da0*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x228] 
    /*00004da4*/ STR         R3, [SP] 
    /*00004da8*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x228] 
    /*00004dac*/ LDR         R3, [PC, #108]              @ 0x0000000000004e20 
    /*00004db0*/ MOV         R1, #16 
    /*00004db4*/ MOV         R0, #3 
    /*00004db8*/ MOVT        R6, #40976                  @ 0xa010 
    /*00004dbc*/ BL          0x0000000000004DBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004dc0*/ B           VI_LineModeSendPipeFrame_x480c
    VI_LineModeSendPipeFrame_x4dc4:
    /*00004dc4*/ MOV         R0, R9 
    /*00004dc8*/ MOVW        R6, #32784                  @ 0x8010 
    /*00004dcc*/ BL          0x0000000000004DCC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004dd0*/ MOVT        R6, #40976                  @ 0xa010 
    /*00004dd4*/ B           VI_LineModeSendPipeFrame_x480c
    VI_LineModeSendPipeFrame_x4dd8:
    /*00004dd8*/ LDR         R3, [PC, #64]               @ 0x0000000000004e20 
    /*00004ddc*/ MOVW        R1, #2973                   @ 0xb9d 
    /*00004de0*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10cc] 
    /*00004de4*/ STR         R1, [SP, #8] 
    /*00004de8*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10cc] 
    /*00004dec*/ STR         R1, [SP] 
    /*00004df0*/ STR         R3, [SP, #4] 
    /*00004df4*/ MOV         R1, #16 
    /*00004df8*/ MOV         R0, #3 
    /*00004dfc*/ MOVW        R6, #32774                  @ 0x8006 
    /*00004e00*/ BL          0x0000000000004E00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004e04*/ ADD         R1, SP, #48                 @ 0x30 
    /*00004e08*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00004e0c*/ MOVT        R6, #40976                  @ 0xa010 
    /*00004e10*/ BL          0x0000000000004E10          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004e14*/ MOV         R0, R9 
    /*00004e18*/ BL          0x0000000000004E18          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004e1c*/ B           VI_LineModeSendPipeFrame_x480c
    /*00004e20*/ ANDEQ       R0, R0, R4, LSL #4 
FUNC_END VI_LineModeSendPipeFrame


FUNC_BEGIN VI_SetChnLDCAttr
    /*00004e24*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00004e28*/ SUB         SP, SP, #212                @ 0xd4 
    /*00004e2c*/ MOV         R5, R1 
    /*00004e30*/ MOV         R7, R2 
    /*00004e34*/ MOV         R6, R0 
    /*00004e38*/ BL          0x0000000000004E38          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00004e3c*/ SUBS        R4, R0, #0 
    /*00004e40*/ BEQ         VI_SetChnLDCAttr_x4e50
    VI_SetChnLDCAttr_x4e44:
    /*00004e44*/ MOV         R0, R4 
    /*00004e48*/ ADD         SP, SP, #212                @ 0xd4 
    /*00004e4c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SetChnLDCAttr_x4e50:
    /*00004e50*/ MOV         R0, R5 
    /*00004e54*/ BL          0x0000000000004E54          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*00004e58*/ SUBS        R4, R0, #0 
    /*00004e5c*/ BNE         VI_SetChnLDCAttr_x4e44
    /*00004e60*/ CMP         R7, #0 
    /*00004e64*/ BEQ         VI_SetChnLDCAttr_x509c
    VI_SetChnLDCAttr_x4e68:
    /*00004e68*/ MOV         R0, R5 
    /*00004e6c*/ BL          0x0000000000004E6C          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*00004e70*/ CMP         R0, #0 
    /*00004e74*/ BNE         VI_SetChnLDCAttr_x50ac
    /*00004e78*/ MOV         R9, #176                    @ 0xb0 
    /*00004e7c*/ MOVW        R8, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00004e80*/ MUL         R9, R9, R6 
    /*00004e84*/ MOVT        R8, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00004e88*/ ADD         SL, R9, #100                @ 0x64 
    /*00004e8c*/ ADD         SL, R8, SL 
    /*00004e90*/ MOV         R0, SL 
    /*00004e94*/ BL          0x0000000000004E94          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00004e98*/ CMP         R0, #0 
    /*00004e9c*/ BNE         VI_SetChnLDCAttr_x5048
    /*00004ea0*/ ADD         R3, R8, R6, LSL #2 
    /*00004ea4*/ LDR         FP, [R3, #704]              @ 0x2c0 
    /*00004ea8*/ CMP         FP, #0 
    /*00004eac*/ BEQ         VI_SetChnLDCAttr_x512c
    /*00004eb0*/ MOV         R1, R5 
    /*00004eb4*/ MOV         R0, R6 
    /*00004eb8*/ BL          0x0000000000004EB8          @ VI_DRV_IsChnAttrSetted [R_ARM_CALL: .text+0x29cfc] 
    /*00004ebc*/ CMP         R0, #0 
    /*00004ec0*/ BEQ         VI_SetChnLDCAttr_x50f0
    /*00004ec4*/ LDR         R3, [R7] 
    /*00004ec8*/ CMP         R3, #0 
    /*00004ecc*/ BNE         VI_SetChnLDCAttr_x4f9c
    VI_SetChnLDCAttr_x4ed0:
    /*00004ed0*/ MOV         R1, R5 
    /*00004ed4*/ ADD         R2, SP, #48                 @ 0x30 
    /*00004ed8*/ MOV         R0, R6 
    /*00004edc*/ BL          0x0000000000004EDC          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*00004ee0*/ ADD         R2, SP, #48                 @ 0x30 
    /*00004ee4*/ ADD         R3, SP, #24 
    /*00004ee8*/ MOV         R1, R5 
    /*00004eec*/ MOV         R0, R6 
    /*00004ef0*/ BL          0x0000000000004EF0          @ VI_DRV_GetChnOutPutSizeFromUserSet [R_ARM_CALL: .text+0x2b61c] 
    /*00004ef4*/ ADD         R3, SP, #24 
    /*00004ef8*/ MOV         R2, R7 
    /*00004efc*/ MOV         R1, R5 
    /*00004f00*/ MOV         R0, R6 
    /*00004f04*/ BL          0x0000000000004F04          @ VI_DRV_CheckChnLdcAttr [R_ARM_CALL: .text+0x29e54] 
    /*00004f08*/ SUBS        R4, R0, #0 
    /*00004f0c*/ BNE         VI_SetChnLDCAttr_x50dc
    /*00004f10*/ ADD         R2, SP, #32 
    /*00004f14*/ MOV         R1, R5 
    /*00004f18*/ MOV         R0, R6 
    /*00004f1c*/ BL          0x0000000000004F1C          @ VI_DRV_GetChnSpreadAttrSet [R_ARM_CALL: .text+0x2a6e8] 
    /*00004f20*/ LDR         R3, [SP, #32] 
    /*00004f24*/ CMP         R3, #1 
    /*00004f28*/ BEQ         VI_SetChnLDCAttr_x4fb4
    VI_SetChnLDCAttr_x4f2c:
    /*00004f2c*/ ADD         R2, SP, #92                 @ 0x5c 
    /*00004f30*/ MOV         R1, R5 
    /*00004f34*/ MOV         R0, R6 
    /*00004f38*/ BL          0x0000000000004F38          @ VI_DRV_GetChnLDCV2AttrSet [R_ARM_CALL: .text+0x2a104] 
    /*00004f3c*/ LDR         R3, [SP, #92]               @ 0x5c 
    /*00004f40*/ CMP         R3, #1 
    /*00004f44*/ BEQ         VI_SetChnLDCAttr_x5054
    VI_SetChnLDCAttr_x4f48:
    /*00004f48*/ MOV         R3, #468                    @ 0x1d4 
    /*00004f4c*/ MOVW        R2, #38828                  @ 0x97ac 
    /*00004f50*/ MLA         R3, R3, R5, FP 
    /*00004f54*/ LDR         R2, [R3, R2] 
    /*00004f58*/ CMP         R2, #1 
    /*00004f5c*/ BEQ         VI_SetChnLDCAttr_x5004
    VI_SetChnLDCAttr_x4f60:
    /*00004f60*/ ADD         R9, R9, #140                @ 0x8c 
    /*00004f64*/ ADD         R1, SP, #20 
    /*00004f68*/ ADD         R8, R8, R9 
    /*00004f6c*/ MOV         R0, R8 
    /*00004f70*/ BL          0x0000000000004F70          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004f74*/ MOV         R1, R5 
    /*00004f78*/ MOV         R0, R6 
    /*00004f7c*/ MOV         R2, R7 
    /*00004f80*/ BL          0x0000000000004F80          @ VI_DRV_SetChnLDCAttr [R_ARM_CALL: .text+0x29f50] 
    /*00004f84*/ ADD         R1, SP, #20 
    /*00004f88*/ MOV         R0, R8 
    /*00004f8c*/ BL          0x0000000000004F8C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_SetChnLDCAttr_x4f90:
    /*00004f90*/ MOV         R0, SL 
    /*00004f94*/ BL          0x0000000000004F94          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004f98*/ B           VI_SetChnLDCAttr_x4e44
    VI_SetChnLDCAttr_x4f9c:
    /*00004f9c*/ MOV         R1, R5 
    /*00004fa0*/ MOV         R0, R6 
    /*00004fa4*/ BL          0x0000000000004FA4          @ VI_CheckChnAttrForGdc [R_ARM_CALL: .text+0x20e10] 
    /*00004fa8*/ SUBS        R4, R0, #0 
    /*00004fac*/ BEQ         VI_SetChnLDCAttr_x4ed0
    /*00004fb0*/ B           VI_SetChnLDCAttr_x4f90
    VI_SetChnLDCAttr_x4fb4:
    /*00004fb4*/ LDR         R3, [R7] 
    /*00004fb8*/ CMP         R3, #1 
    /*00004fbc*/ BNE         VI_SetChnLDCAttr_x4f2c
    /*00004fc0*/ LDR         R3, [R7, #28] 
    /*00004fc4*/ CMP         R3, #0 
    /*00004fc8*/ BGE         VI_SetChnLDCAttr_x4f2c
    /*00004fcc*/ STR         R3, [SP, #4] 
    /*00004fd0*/ MOV         R1, #16 
    /*00004fd4*/ MOVW        R3, #3101                   @ 0xc1d 
    /*00004fd8*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11fc] 
    /*00004fdc*/ STR         R3, [SP] 
    /*00004fe0*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11fc] 
    /*00004fe4*/ LDR         R3, [PC, #376]              @ 0x0000000000005164 
    /*00004fe8*/ MOV         R0, #3 
    /*00004fec*/ BL          0x0000000000004FEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004ff0*/ MOV         R0, SL 
    /*00004ff4*/ MOVW        R4, #32771                  @ 0x8003 
    /*00004ff8*/ BL          0x0000000000004FF8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004ffc*/ MOVT        R4, #40976                  @ 0xa010 
    /*00005000*/ B           VI_SetChnLDCAttr_x4e44
    VI_SetChnLDCAttr_x5004:
    /*00005004*/ MOVW        R2, #38548                  @ 0x9694 
    /*00005008*/ LDR         R3, [R3, R2] 
    /*0000500c*/ CMP         R3, #2 
    /*00005010*/ BNE         VI_SetChnLDCAttr_x4f60
    /*00005014*/ MOVW        R3, #3121                   @ 0xc31 
    /*00005018*/ MOV         R1, #16 
    /*0000501c*/ STR         R3, [SP] 
    /*00005020*/ MOVW        R2, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12a4] 
    /*00005024*/ LDR         R3, [PC, #312]              @ 0x0000000000005164 
    /*00005028*/ MOVT        R2, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12a4] 
    /*0000502c*/ MOV         R0, #3 
    /*00005030*/ MOVW        R4, #32777                  @ 0x8009 
    /*00005034*/ BL          0x0000000000005034          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005038*/ MOV         R0, SL 
    /*0000503c*/ BL          0x000000000000503C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005040*/ MOVT        R4, #40976                  @ 0xa010 
    /*00005044*/ B           VI_SetChnLDCAttr_x4e44
    VI_SetChnLDCAttr_x5048:
    /*00005048*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000504c*/ MOVT        R4, #65535                  @ 0xffff 
    /*00005050*/ B           VI_SetChnLDCAttr_x4e44
    VI_SetChnLDCAttr_x5054:
    /*00005054*/ LDR         R3, [R7] 
    /*00005058*/ CMP         R3, #1 
    /*0000505c*/ BNE         VI_SetChnLDCAttr_x4f48
    /*00005060*/ STR         R3, [SP, #8] 
    /*00005064*/ MOVW        R1, #3110                   @ 0xc26 
    /*00005068*/ STR         R3, [SP, #4] 
    /*0000506c*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1254] 
    /*00005070*/ STR         R1, [SP] 
    /*00005074*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1254] 
    /*00005078*/ LDR         R3, [PC, #228]              @ 0x0000000000005164 
    /*0000507c*/ MOV         R1, #16 
    /*00005080*/ MOV         R0, #3 
    /*00005084*/ MOVW        R4, #32777                  @ 0x8009 
    /*00005088*/ BL          0x0000000000005088          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000508c*/ MOV         R0, SL 
    /*00005090*/ BL          0x0000000000005090          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005094*/ MOVT        R4, #40976                  @ 0xa010 
    /*00005098*/ B           VI_SetChnLDCAttr_x4e44
    VI_SetChnLDCAttr_x509c:
    /*0000509c*/ BL          0x000000000000133C 
    /*000050a0*/ SUBS        R4, R0, #0 
    /*000050a4*/ BNE         VI_SetChnLDCAttr_x4e44
    /*000050a8*/ B           VI_SetChnLDCAttr_x4e68
    VI_SetChnLDCAttr_x50ac:
    /*000050ac*/ MOVW        R3, #3050                   @ 0xbea 
    /*000050b0*/ STR         R5, [SP, #4] 
    /*000050b4*/ STR         R3, [SP] 
    /*000050b8*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1158] 
    /*000050bc*/ LDR         R3, [PC, #160]              @ 0x0000000000005164 
    /*000050c0*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1158] 
    /*000050c4*/ MOV         R1, #16 
    /*000050c8*/ MOV         R0, #3 
    /*000050cc*/ MOVW        R4, #32776                  @ 0x8008 
    /*000050d0*/ BL          0x00000000000050D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000050d4*/ MOVT        R4, #40976                  @ 0xa010 
    /*000050d8*/ B           VI_SetChnLDCAttr_x4e44
    VI_SetChnLDCAttr_x50dc:
    /*000050dc*/ MOV         R0, SL 
    /*000050e0*/ MOVW        R4, #32771                  @ 0x8003 
    /*000050e4*/ BL          0x00000000000050E4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000050e8*/ MOVT        R4, #40976                  @ 0xa010 
    /*000050ec*/ B           VI_SetChnLDCAttr_x4e44
    VI_SetChnLDCAttr_x50f0:
    /*000050f0*/ MOV         R0, SL 
    /*000050f4*/ MOVW        R4, #32784                  @ 0x8010 
    /*000050f8*/ BL          0x00000000000050F8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000050fc*/ MOVW        R3, #3067                   @ 0xbfb 
    /*00005100*/ STR         R5, [SP, #8] 
    /*00005104*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11bc] 
    /*00005108*/ STR         R3, [SP] 
    /*0000510c*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11bc] 
    /*00005110*/ STR         R6, [SP, #4] 
    /*00005114*/ MOV         R1, #16 
    /*00005118*/ LDR         R3, [PC, #68]               @ 0x0000000000005164 
    /*0000511c*/ MOV         R0, #3 
    /*00005120*/ BL          0x0000000000005120          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005124*/ MOVT        R4, #40976                  @ 0xa010 
    /*00005128*/ B           VI_SetChnLDCAttr_x4e44
    VI_SetChnLDCAttr_x512c:
    /*0000512c*/ MOVW        R3, #3058                   @ 0xbf2 
    /*00005130*/ MOV         R1, #16 
    /*00005134*/ STR         R3, [SP] 
    /*00005138*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x118c] 
    /*0000513c*/ LDR         R3, [PC, #32]               @ 0x0000000000005164 
    /*00005140*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x118c] 
    /*00005144*/ STR         R6, [SP, #4] 
    /*00005148*/ MOV         R0, #3 
    /*0000514c*/ BL          0x000000000000514C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005150*/ MOV         R0, SL 
    /*00005154*/ MOVW        R4, #32773                  @ 0x8005 
    /*00005158*/ BL          0x0000000000005158          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000515c*/ MOVT        R4, #40976                  @ 0xa010 
    /*00005160*/ B           VI_SetChnLDCAttr_x4e44
    /*00005164*/ ANDEQ       R0, R0, R0, LSR #4 
FUNC_END VI_SetChnLDCAttr


FUNC_BEGIN VI_GetChnLDCAttr
    /*00005168*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000516c*/ SUB         SP, SP, #12 
    /*00005170*/ MOV         R5, R1 
    /*00005174*/ MOV         R6, R2 
    /*00005178*/ MOV         R7, R0 
    /*0000517c*/ BL          0x000000000000517C          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00005180*/ SUBS        R4, R0, #0 
    /*00005184*/ BEQ         VI_GetChnLDCAttr_x5194
    VI_GetChnLDCAttr_x5188:
    /*00005188*/ MOV         R0, R4 
    /*0000518c*/ ADD         SP, SP, #12 
    /*00005190*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_GetChnLDCAttr_x5194:
    /*00005194*/ MOV         R0, R5 
    /*00005198*/ BL          0x0000000000005198          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*0000519c*/ SUBS        R4, R0, #0 
    /*000051a0*/ BNE         VI_GetChnLDCAttr_x5188
    /*000051a4*/ CMP         R6, #0 
    /*000051a8*/ BEQ         VI_GetChnLDCAttr_x5218
    VI_GetChnLDCAttr_x51ac:
    /*000051ac*/ MOV         R0, R5 
    /*000051b0*/ BL          0x00000000000051B0          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*000051b4*/ CMP         R0, #0 
    /*000051b8*/ BNE         VI_GetChnLDCAttr_x522c
    /*000051bc*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000051c0*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000051c4*/ MOV         R8, #176                    @ 0xb0 
    /*000051c8*/ MLA         R8, R8, R7, R9 
    /*000051cc*/ ADD         R8, R8, #100                @ 0x64 
    /*000051d0*/ MOV         R0, R8 
    /*000051d4*/ BL          0x00000000000051D4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000051d8*/ CMP         R0, #0 
    /*000051dc*/ BNE         VI_GetChnLDCAttr_x520c
    /*000051e0*/ ADD         R9, R9, R7, LSL #2 
    /*000051e4*/ LDR         R3, [R9, #704]              @ 0x2c0 
    /*000051e8*/ CMP         R3, #0 
    /*000051ec*/ BEQ         VI_GetChnLDCAttr_x525c
    /*000051f0*/ MOV         R0, R7 
    /*000051f4*/ MOV         R2, R6 
    /*000051f8*/ MOV         R1, R5 
    /*000051fc*/ BL          0x00000000000051FC          @ VI_DRV_GetChnLDCAttrSet [R_ARM_CALL: .text+0x29f94] 
    /*00005200*/ MOV         R0, R8 
    /*00005204*/ BL          0x0000000000005204          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005208*/ B           VI_GetChnLDCAttr_x5188
    VI_GetChnLDCAttr_x520c:
    /*0000520c*/ MOV         R4, #65024                  @ 0xfe00 
    /*00005210*/ MOVT        R4, #65535                  @ 0xffff 
    /*00005214*/ B           VI_GetChnLDCAttr_x5188
    VI_GetChnLDCAttr_x5218:
    /*00005218*/ BL          0x000000000000133C 
    /*0000521c*/ CMP         R0, #0 
    /*00005220*/ MOVNE       R4, R0 
    /*00005224*/ BNE         VI_GetChnLDCAttr_x5188
    /*00005228*/ B           VI_GetChnLDCAttr_x51ac
    VI_GetChnLDCAttr_x522c:
    /*0000522c*/ MOVW        R3, #3146                   @ 0xc4a 
    /*00005230*/ STR         R5, [SP, #4] 
    /*00005234*/ STR         R3, [SP] 
    /*00005238*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1158] 
    /*0000523c*/ LDR         R3, [PC, #80]               @ 0x0000000000005294 
    /*00005240*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1158] 
    /*00005244*/ MOV         R1, #16 
    /*00005248*/ MOV         R0, #3 
    /*0000524c*/ MOVW        R4, #32776                  @ 0x8008 
    /*00005250*/ BL          0x0000000000005250          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005254*/ MOVT        R4, #40976                  @ 0xa010 
    /*00005258*/ B           VI_GetChnLDCAttr_x5188
    VI_GetChnLDCAttr_x525c:
    /*0000525c*/ MOVW        R3, #3154                   @ 0xc52 
    /*00005260*/ MOV         R1, #16 
    /*00005264*/ STR         R3, [SP] 
    /*00005268*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x118c] 
    /*0000526c*/ LDR         R3, [PC, #32]               @ 0x0000000000005294 
    /*00005270*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x118c] 
    /*00005274*/ STR         R7, [SP, #4] 
    /*00005278*/ MOV         R0, #3 
    /*0000527c*/ BL          0x000000000000527C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005280*/ MOV         R0, R8 
    /*00005284*/ MOVW        R4, #32773                  @ 0x8005 
    /*00005288*/ BL          0x0000000000005288          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000528c*/ MOVT        R4, #40976                  @ 0xa010 
    /*00005290*/ B           VI_GetChnLDCAttr_x5188
    /*00005294*/ ANDEQ       R0, R0, R4, LSR R2 
FUNC_END VI_GetChnLDCAttr


FUNC_BEGIN VI_SetChnLDCV2Attr
    /*00005298*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000529c*/ SUB         SP, SP, #252                @ 0xfc 
    /*000052a0*/ MOV         R5, R1 
    /*000052a4*/ MOV         R7, R2 
    /*000052a8*/ MOV         R6, R0 
    /*000052ac*/ BL          0x00000000000052AC          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*000052b0*/ SUBS        R4, R0, #0 
    /*000052b4*/ BEQ         VI_SetChnLDCV2Attr_x52c4
    VI_SetChnLDCV2Attr_x52b8:
    /*000052b8*/ MOV         R0, R4 
    /*000052bc*/ ADD         SP, SP, #252                @ 0xfc 
    /*000052c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SetChnLDCV2Attr_x52c4:
    /*000052c4*/ MOV         R0, R5 
    /*000052c8*/ BL          0x00000000000052C8          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*000052cc*/ SUBS        R4, R0, #0 
    /*000052d0*/ BNE         VI_SetChnLDCV2Attr_x52b8
    /*000052d4*/ CMP         R7, #0 
    /*000052d8*/ BEQ         VI_SetChnLDCV2Attr_x5590
    VI_SetChnLDCV2Attr_x52dc:
    /*000052dc*/ MOV         R0, R5 
    /*000052e0*/ BL          0x00000000000052E0          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*000052e4*/ CMP         R0, #0 
    /*000052e8*/ BNE         VI_SetChnLDCV2Attr_x5640
    /*000052ec*/ MOV         R9, #176                    @ 0xb0 
    /*000052f0*/ MOVW        R8, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000052f4*/ MUL         R9, R9, R6 
    /*000052f8*/ MOVT        R8, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000052fc*/ ADD         SL, R9, #100                @ 0x64 
    /*00005300*/ ADD         SL, R8, SL 
    /*00005304*/ MOV         R0, SL 
    /*00005308*/ BL          0x0000000000005308          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000530c*/ CMP         R0, #0 
    /*00005310*/ BNE         VI_SetChnLDCV2Attr_x5584
    /*00005314*/ ADD         R3, R8, R6, LSL #2 
    /*00005318*/ LDR         FP, [R3, #704]              @ 0x2c0 
    /*0000531c*/ CMP         FP, #0 
    /*00005320*/ BEQ         VI_SetChnLDCV2Attr_x56c4
    /*00005324*/ ADD         R3, R5, #9536               @ 0x2540 
    /*00005328*/ ADD         R3, R3, #50                 @ 0x32 
    /*0000532c*/ ADD         R3, FP, R3, LSL #2 
    /*00005330*/ LDR         R3, [R3, #4] 
    /*00005334*/ CMP         R3, #0 
    /*00005338*/ BEQ         VI_SetChnLDCV2Attr_x5670
    /*0000533c*/ MOV         R1, R5 
    /*00005340*/ MOV         R0, R6 
    /*00005344*/ ADD         R2, SP, #132                @ 0x84 
    /*00005348*/ BL          0x0000000000005348          @ VI_DRV_GetChnLDCV2AttrSet [R_ARM_CALL: .text+0x2a104] 
    /*0000534c*/ ADD         R1, SP, #132                @ 0x84 
    /*00005350*/ MOV         R2, #116                    @ 0x74 
    /*00005354*/ MOV         R0, R7 
    /*00005358*/ BL          0x0000000000005358          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*0000535c*/ CMP         R0, #0 
    /*00005360*/ BEQ         VI_SetChnLDCV2Attr_x5384
    /*00005364*/ LDR         R3, [R7] 
    /*00005368*/ CMP         R3, #0 
    /*0000536c*/ BEQ         VI_SetChnLDCV2Attr_x5390
    /*00005370*/ MOV         R1, R5 
    /*00005374*/ MOV         R0, R6 
    /*00005378*/ BL          0x0000000000005378          @ VI_CheckChnAttrForGdc [R_ARM_CALL: .text+0x20e10] 
    /*0000537c*/ SUBS        R4, R0, #0 
    /*00005380*/ BEQ         VI_SetChnLDCV2Attr_x5390
    VI_SetChnLDCV2Attr_x5384:
    /*00005384*/ MOV         R0, SL 
    /*00005388*/ BL          0x0000000000005388          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000538c*/ B           VI_SetChnLDCV2Attr_x52b8
    VI_SetChnLDCV2Attr_x5390:
    /*00005390*/ ADD         R2, SP, #56                 @ 0x38 
    /*00005394*/ MOV         R1, R5 
    /*00005398*/ MOV         R0, R6 
    /*0000539c*/ BL          0x000000000000539C          @ VI_DRV_GetChnLDCAttrSet [R_ARM_CALL: .text+0x29f94] 
    /*000053a0*/ LDR         R3, [SP, #56]               @ 0x38 
    /*000053a4*/ CMP         R3, #1 
    /*000053a8*/ BEQ         VI_SetChnLDCV2Attr_x553c
    VI_SetChnLDCV2Attr_x53ac:
    /*000053ac*/ MOV         R3, #468                    @ 0x1d4 
    /*000053b0*/ MOVW        R2, #38828                  @ 0x97ac 
    /*000053b4*/ MLA         R3, R3, R5, FP 
    /*000053b8*/ LDR         R2, [R3, R2] 
    /*000053bc*/ CMP         R2, #1 
    /*000053c0*/ BEQ         VI_SetChnLDCV2Attr_x5484
    VI_SetChnLDCV2Attr_x53c4:
    /*000053c4*/ MOV         R1, R5 
    /*000053c8*/ ADD         R2, SP, #88                 @ 0x58 
    /*000053cc*/ MOV         R0, R6 
    /*000053d0*/ BL          0x00000000000053D0          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*000053d4*/ ADD         R2, SP, #88                 @ 0x58 
    /*000053d8*/ ADD         R3, SP, #28 
    /*000053dc*/ MOV         R1, R5 
    /*000053e0*/ MOV         R0, R6 
    /*000053e4*/ BL          0x00000000000053E4          @ VI_DRV_GetChnOutPutSizeFromUserSet [R_ARM_CALL: .text+0x2b61c] 
    /*000053e8*/ ADD         R3, SP, #28 
    /*000053ec*/ MOV         R2, R7 
    /*000053f0*/ MOV         R1, R5 
    /*000053f4*/ MOV         R0, R6 
    /*000053f8*/ BL          0x00000000000053F8          @ VI_DRV_CheckChnLdcV2Attr [R_ARM_CALL: .text+0x29fc0] 
    /*000053fc*/ SUBS        R4, R0, #0 
    /*00005400*/ BNE         VI_SetChnLDCV2Attr_x56b0
    /*00005404*/ LDR         R3, [R7] 
    /*00005408*/ CMP         R3, #1 
    /*0000540c*/ STR         R3, [SP, #16] 
    /*00005410*/ BEQ         VI_SetChnLDCV2Attr_x54c8
    /*00005414*/ ADD         R3, R9, #140                @ 0x8c 
    /*00005418*/ ADD         R1, SP, #24 
    /*0000541c*/ ADD         R3, R8, R3 
    /*00005420*/ STR         R3, [SP, #16] 
    /*00005424*/ MOV         R0, R3 
    /*00005428*/ BL          0x0000000000005428          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000542c*/ MOV         R2, R7 
    /*00005430*/ MOV         R1, R5 
    /*00005434*/ MOV         R0, R6 
    /*00005438*/ BL          0x0000000000005438          @ VI_DRV_SetChnLDCV2Attr [R_ARM_CALL: .text+0x2a0bc] 
    /*0000543c*/ LDR         R3, [SP, #16] 
    /*00005440*/ ADD         R1, SP, #24 
    /*00005444*/ MOV         R0, R3 
    /*00005448*/ BL          0x0000000000005448          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000544c*/ MOV         R3, #468                    @ 0x1d4 
    /*00005450*/ MLA         R3, R3, R5, FP 
    /*00005454*/ MOVW        R2, #38884                  @ 0x97e4 
    /*00005458*/ LDR         R2, [R3, R2] 
    /*0000545c*/ CMP         R2, #1 
    /*00005460*/ BEQ         VI_SetChnLDCV2Attr_x55a4
    VI_SetChnLDCV2Attr_x5464:
    /*00005464*/ MOV         R2, #468                    @ 0x1d4 
    /*00005468*/ MOVW        R3, #38428                  @ 0x961c 
    /*0000546c*/ MLA         R5, R2, R5, FP 
    /*00005470*/ MOV         R0, SL 
    /*00005474*/ MOV         R2, #1 
    /*00005478*/ STR         R2, [R5, R3] 
    /*0000547c*/ BL          0x000000000000547C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005480*/ B           VI_SetChnLDCV2Attr_x52b8
    VI_SetChnLDCV2Attr_x5484:
    /*00005484*/ MOVW        R2, #38548                  @ 0x9694 
    /*00005488*/ LDR         R3, [R3, R2] 
    /*0000548c*/ CMP         R3, #2 
    /*00005490*/ MOVNE       R3, #3248                   @ 0xcb0 
    /*00005494*/ MOVWNE      R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1384] 
    /*00005498*/ STRNE       R3, [SP] 
    /*0000549c*/ MOVTNE      R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1384] 
    /*000054a0*/ BEQ         VI_SetChnLDCV2Attr_x53c4
    VI_SetChnLDCV2Attr_x54a4:
    /*000054a4*/ LDR         R3, [PC, #612]              @ 0x0000000000005710 
    /*000054a8*/ MOV         R1, #16 
    /*000054ac*/ MOV         R0, #3 
    /*000054b0*/ MOVW        R4, #32777                  @ 0x8009 
    /*000054b4*/ BL          0x00000000000054B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000054b8*/ MOV         R0, SL 
    /*000054bc*/ BL          0x00000000000054BC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000054c0*/ MOVT        R4, #40976                  @ 0xa010 
    /*000054c4*/ B           VI_SetChnLDCV2Attr_x52b8
    VI_SetChnLDCV2Attr_x54c8:
    /*000054c8*/ MOV         R2, #468                    @ 0x1d4 
    /*000054cc*/ MOVW        R3, #38884                  @ 0x97e4 
    /*000054d0*/ MLA         R2, R2, R5, FP 
    /*000054d4*/ LDR         R1, [R2, R3] 
    /*000054d8*/ STR         R2, [SP, #20] 
    /*000054dc*/ CMP         R1, #0 
    /*000054e0*/ BNE         VI_SetChnLDCV2Attr_x5508
    /*000054e4*/ MOV         R1, R5 
    /*000054e8*/ MOV         R0, R6 
    /*000054ec*/ BL          0x00000000000054EC          @ Vi_EnableLocalDIS [R_ARM_CALL: .text+0x21990] 
    /*000054f0*/ LDR         R2, [SP, #20] 
    /*000054f4*/ LDR         R3, [SP, #16] 
    /*000054f8*/ CMP         R0, #0 
    /*000054fc*/ MOVWEQ      R1, #38884                  @ 0x97e4 
    /*00005500*/ STREQ       R3, [R2, R1] 
    /*00005504*/ BNE         VI_SetChnLDCV2Attr_x56fc
    VI_SetChnLDCV2Attr_x5508:
    /*00005508*/ ADD         R9, R9, #140                @ 0x8c 
    /*0000550c*/ ADD         R1, SP, #24 
    /*00005510*/ ADD         R8, R8, R9 
    /*00005514*/ MOV         R0, R8 
    /*00005518*/ BL          0x0000000000005518          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000551c*/ MOV         R1, R5 
    /*00005520*/ MOV         R0, R6 
    /*00005524*/ MOV         R2, R7 
    /*00005528*/ BL          0x0000000000005528          @ VI_DRV_SetChnLDCV2Attr [R_ARM_CALL: .text+0x2a0bc] 
    /*0000552c*/ ADD         R1, SP, #24 
    /*00005530*/ MOV         R0, R8 
    /*00005534*/ BL          0x0000000000005534          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00005538*/ B           VI_SetChnLDCV2Attr_x5464
    VI_SetChnLDCV2Attr_x553c:
    /*0000553c*/ LDR         R3, [R7] 
    /*00005540*/ CMP         R3, #1 
    /*00005544*/ BNE         VI_SetChnLDCV2Attr_x53ac
    /*00005548*/ MOVW        R2, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1328] 
    /*0000554c*/ MOVT        R2, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1328] 
    /*00005550*/ MOVW        R1, #3238                   @ 0xca6 
    /*00005554*/ STR         R3, [SP, #8] 
    /*00005558*/ STR         R3, [SP, #4] 
    /*0000555c*/ STR         R1, [SP] 
    VI_SetChnLDCV2Attr_x5560:
    /*00005560*/ LDR         R3, [PC, #424]              @ 0x0000000000005710 
    /*00005564*/ MOV         R1, #16 
    /*00005568*/ MOV         R0, #3 
    /*0000556c*/ MOVW        R4, #32777                  @ 0x8009 
    /*00005570*/ BL          0x0000000000005570          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005574*/ MOV         R0, SL 
    /*00005578*/ BL          0x0000000000005578          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000557c*/ MOVT        R4, #40976                  @ 0xa010 
    /*00005580*/ B           VI_SetChnLDCV2Attr_x52b8
    VI_SetChnLDCV2Attr_x5584:
    /*00005584*/ MOV         R4, #65024                  @ 0xfe00 
    /*00005588*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000558c*/ B           VI_SetChnLDCV2Attr_x52b8
    VI_SetChnLDCV2Attr_x5590:
    /*00005590*/ BL          0x000000000000133C 
    /*00005594*/ CMP         R0, #0 
    /*00005598*/ MOVNE       R4, R0 
    /*0000559c*/ BNE         VI_SetChnLDCV2Attr_x52b8
    /*000055a0*/ B           VI_SetChnLDCV2Attr_x52dc
    VI_SetChnLDCV2Attr_x55a4:
    /*000055a4*/ MOVW        R2, #38828                  @ 0x97ac 
    /*000055a8*/ LDR         R2, [R3, R2] 
    /*000055ac*/ CMP         R2, #0 
    /*000055b0*/ BEQ         VI_SetChnLDCV2Attr_x55cc
    /*000055b4*/ CMP         R2, #1 
    /*000055b8*/ BNE         VI_SetChnLDCV2Attr_x5464
    /*000055bc*/ MOVW        R2, #38548                  @ 0x9694 
    /*000055c0*/ LDR         R3, [R3, R2] 
    /*000055c4*/ CMP         R3, #2 
    /*000055c8*/ BEQ         VI_SetChnLDCV2Attr_x5464
    VI_SetChnLDCV2Attr_x55cc:
    /*000055cc*/ ADD         R9, R9, #172                @ 0xac 
    /*000055d0*/ MOVW        R7, #0                      @ VI_DIS_WaitLdcV2CallBack [R_ARM_MOVW_ABS_NC: .text+0x22bf8] 
    /*000055d4*/ ADD         R8, R8, R9 
    /*000055d8*/ MOVT        R7, #0                      @ VI_DIS_WaitLdcV2CallBack [R_ARM_MOVT_ABS: .text+0x22bf8] 
    /*000055dc*/ STR         R6, [SP, #36]               @ 0x24 
    /*000055e0*/ STR         R5, [SP, #40]               @ 0x28 
    /*000055e4*/ B           VI_SetChnLDCV2Attr_x55f4
    VI_SetChnLDCV2Attr_x55e8:
    /*000055e8*/ BL          0x00000000000055E8          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*000055ec*/ CMP         R0, #0 
    /*000055f0*/ BLT         VI_SetChnLDCV2Attr_x5614
    VI_SetChnLDCV2Attr_x55f4:
    /*000055f4*/ ADD         R0, SP, #36                 @ 0x24 
    /*000055f8*/ BL          0x00000000000055F8          @ VI_DIS_WaitLdcV2CallBack [R_ARM_CALL: .text+0x22bf8] 
    /*000055fc*/ MOV         R3, #100                    @ 0x64 
    /*00005600*/ ADD         R2, SP, #36                 @ 0x24 
    /*00005604*/ MOV         R1, R7 
    /*00005608*/ CMP         R0, #0 
    /*0000560c*/ MOV         R0, R8 
    /*00005610*/ BEQ         VI_SetChnLDCV2Attr_x55e8
    VI_SetChnLDCV2Attr_x5614:
    /*00005614*/ MOV         R0, R6 
    /*00005618*/ MOV         R1, R5 
    /*0000561c*/ BL          0x000000000000561C          @ Vi_DeInitLocalDisAlgorithm [R_ARM_CALL: .text+0x21888] 
    /*00005620*/ CMP         R0, #0 
    /*00005624*/ BNE         VI_SetChnLDCV2Attr_x568c
    VI_SetChnLDCV2Attr_x5628:
    /*00005628*/ MOV         R3, #468                    @ 0x1d4 
    /*0000562c*/ MOVW        R2, #38884                  @ 0x97e4 
    /*00005630*/ MLA         R3, R3, R5, FP 
    /*00005634*/ MOV         R1, #0 
    /*00005638*/ STR         R1, [R3, R2] 
    /*0000563c*/ B           VI_SetChnLDCV2Attr_x5464
    VI_SetChnLDCV2Attr_x5640:
    /*00005640*/ MOVW        R3, #3185                   @ 0xc71 
    /*00005644*/ STR         R5, [SP, #4] 
    /*00005648*/ STR         R3, [SP] 
    /*0000564c*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1158] 
    /*00005650*/ LDR         R3, [PC, #184]              @ 0x0000000000005710 
    /*00005654*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1158] 
    /*00005658*/ MOV         R1, #16 
    /*0000565c*/ MOV         R0, #3 
    /*00005660*/ MOVW        R4, #32776                  @ 0x8008 
    /*00005664*/ BL          0x0000000000005664          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005668*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000566c*/ B           VI_SetChnLDCV2Attr_x52b8
    VI_SetChnLDCV2Attr_x5670:
    /*00005670*/ MOV         R3, #3200                   @ 0xc80 
    /*00005674*/ MOVW        R2, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12ec] 
    /*00005678*/ STR         R5, [SP, #8] 
    /*0000567c*/ MOVT        R2, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12ec] 
    /*00005680*/ STR         R6, [SP, #4] 
    /*00005684*/ STR         R3, [SP] 
    /*00005688*/ B           VI_SetChnLDCV2Attr_x5560
    VI_SetChnLDCV2Attr_x568c:
    /*0000568c*/ MOVW        R3, #3311                   @ 0xcef 
    /*00005690*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x141c] 
    /*00005694*/ STR         R3, [SP] 
    /*00005698*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x141c] 
    /*0000569c*/ LDR         R3, [PC, #108]              @ 0x0000000000005710 
    /*000056a0*/ MOV         R1, #16 
    /*000056a4*/ MOV         R0, #3 
    /*000056a8*/ BL          0x00000000000056A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000056ac*/ B           VI_SetChnLDCV2Attr_x5628
    VI_SetChnLDCV2Attr_x56b0:
    /*000056b0*/ MOV         R0, SL 
    /*000056b4*/ MOVW        R4, #32771                  @ 0x8003 
    /*000056b8*/ BL          0x00000000000056B8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000056bc*/ MOVT        R4, #40976                  @ 0xa010 
    /*000056c0*/ B           VI_SetChnLDCV2Attr_x52b8
    VI_SetChnLDCV2Attr_x56c4:
    /*000056c4*/ MOVW        R3, #3193                   @ 0xc79 
    /*000056c8*/ MOV         R1, #16 
    /*000056cc*/ STR         R3, [SP] 
    /*000056d0*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x118c] 
    /*000056d4*/ LDR         R3, [PC, #52]               @ 0x0000000000005710 
    /*000056d8*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x118c] 
    /*000056dc*/ STR         R6, [SP, #4] 
    /*000056e0*/ MOV         R0, #3 
    /*000056e4*/ BL          0x00000000000056E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000056e8*/ MOV         R0, SL 
    /*000056ec*/ MOVW        R4, #32773                  @ 0x8005 
    /*000056f0*/ BL          0x00000000000056F0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000056f4*/ MOVT        R4, #40976                  @ 0xa010 
    /*000056f8*/ B           VI_SetChnLDCV2Attr_x52b8
    VI_SetChnLDCV2Attr_x56fc:
    /*000056fc*/ MOVW        R3, #3286                   @ 0xcd6 
    /*00005700*/ MOVW        R2, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13e0] 
    /*00005704*/ STR         R3, [SP] 
    /*00005708*/ MOVT        R2, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13e0] 
    /*0000570c*/ B           VI_SetChnLDCV2Attr_x54a4
    /*00005710*/ ANDEQ       R0, R0, R8, ASR #4 
FUNC_END VI_SetChnLDCV2Attr


FUNC_BEGIN VI_GetChnLDCV2Attr
    /*00005714*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00005718*/ SUB         SP, SP, #12 
    /*0000571c*/ MOV         R5, R1 
    /*00005720*/ MOV         R6, R2 
    /*00005724*/ MOV         R7, R0 
    /*00005728*/ BL          0x0000000000005728          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000572c*/ SUBS        R4, R0, #0 
    /*00005730*/ BEQ         VI_GetChnLDCV2Attr_x5740
    VI_GetChnLDCV2Attr_x5734:
    /*00005734*/ MOV         R0, R4 
    /*00005738*/ ADD         SP, SP, #12 
    /*0000573c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_GetChnLDCV2Attr_x5740:
    /*00005740*/ MOV         R0, R5 
    /*00005744*/ BL          0x0000000000005744          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*00005748*/ SUBS        R4, R0, #0 
    /*0000574c*/ BNE         VI_GetChnLDCV2Attr_x5734
    /*00005750*/ CMP         R6, #0 
    /*00005754*/ BEQ         VI_GetChnLDCV2Attr_x57c4
    VI_GetChnLDCV2Attr_x5758:
    /*00005758*/ MOV         R0, R5 
    /*0000575c*/ BL          0x000000000000575C          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*00005760*/ CMP         R0, #0 
    /*00005764*/ BNE         VI_GetChnLDCV2Attr_x57d8
    /*00005768*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000576c*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00005770*/ MOV         R8, #176                    @ 0xb0 
    /*00005774*/ MLA         R8, R8, R7, R9 
    /*00005778*/ ADD         R8, R8, #100                @ 0x64 
    /*0000577c*/ MOV         R0, R8 
    /*00005780*/ BL          0x0000000000005780          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00005784*/ CMP         R0, #0 
    /*00005788*/ BNE         VI_GetChnLDCV2Attr_x57b8
    /*0000578c*/ ADD         R9, R9, R7, LSL #2 
    /*00005790*/ LDR         R3, [R9, #704]              @ 0x2c0 
    /*00005794*/ CMP         R3, #0 
    /*00005798*/ BEQ         VI_GetChnLDCV2Attr_x5808
    /*0000579c*/ MOV         R0, R7 
    /*000057a0*/ MOV         R2, R6 
    /*000057a4*/ MOV         R1, R5 
    /*000057a8*/ BL          0x00000000000057A8          @ VI_DRV_GetChnLDCV2AttrSet [R_ARM_CALL: .text+0x2a104] 
    /*000057ac*/ MOV         R0, R8 
    /*000057b0*/ BL          0x00000000000057B0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000057b4*/ B           VI_GetChnLDCV2Attr_x5734
    VI_GetChnLDCV2Attr_x57b8:
    /*000057b8*/ MOV         R4, #65024                  @ 0xfe00 
    /*000057bc*/ MOVT        R4, #65535                  @ 0xffff 
    /*000057c0*/ B           VI_GetChnLDCV2Attr_x5734
    VI_GetChnLDCV2Attr_x57c4:
    /*000057c4*/ BL          0x000000000000133C 
    /*000057c8*/ CMP         R0, #0 
    /*000057cc*/ MOVNE       R4, R0 
    /*000057d0*/ BNE         VI_GetChnLDCV2Attr_x5734
    /*000057d4*/ B           VI_GetChnLDCV2Attr_x5758
    VI_GetChnLDCV2Attr_x57d8:
    /*000057d8*/ MOVW        R3, #3333                   @ 0xd05 
    /*000057dc*/ STR         R5, [SP, #4] 
    /*000057e0*/ STR         R3, [SP] 
    /*000057e4*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1158] 
    /*000057e8*/ LDR         R3, [PC, #80]               @ 0x0000000000005840 
    /*000057ec*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1158] 
    /*000057f0*/ MOV         R1, #16 
    /*000057f4*/ MOV         R0, #3 
    /*000057f8*/ MOVW        R4, #32776                  @ 0x8008 
    /*000057fc*/ BL          0x00000000000057FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005800*/ MOVT        R4, #40976                  @ 0xa010 
    /*00005804*/ B           VI_GetChnLDCV2Attr_x5734
    VI_GetChnLDCV2Attr_x5808:
    /*00005808*/ MOVW        R3, #3341                   @ 0xd0d 
    /*0000580c*/ MOV         R1, #16 
    /*00005810*/ STR         R3, [SP] 
    /*00005814*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x118c] 
    /*00005818*/ LDR         R3, [PC, #32]               @ 0x0000000000005840 
    /*0000581c*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x118c] 
    /*00005820*/ STR         R7, [SP, #4] 
    /*00005824*/ MOV         R0, #3 
    /*00005828*/ BL          0x0000000000005828          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000582c*/ MOV         R0, R8 
    /*00005830*/ MOVW        R4, #32773                  @ 0x8005 
    /*00005834*/ BL          0x0000000000005834          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005838*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000583c*/ B           VI_GetChnLDCV2Attr_x5734
    /*00005840*/ ANDEQ       R0, R0, IP, ASR R2 
FUNC_END VI_GetChnLDCV2Attr


FUNC_BEGIN VI_GetModParam
    /*00005844*/ PUSH        {R4, LR} 
    /*00005848*/ SUBS        R4, R0, #0 
    /*0000584c*/ SUB         SP, SP, #8 
    /*00005850*/ BEQ         VI_GetModParam_x5890
    VI_GetModParam_x5854:
    /*00005854*/ ADD         R1, SP, #4 
    /*00005858*/ MOVW        R0, #0                      @ g_stViModuleLock [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*0000585c*/ MOVT        R0, #0                      @ g_stViModuleLock [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00005860*/ BL          0x0000000000005860          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00005864*/ MOV         R2, #8 
    /*00005868*/ LDR         R1, [PC, #48]               @ 0x00000000000058a0 
    /*0000586c*/ MOV         R0, R4 
    /*00005870*/ BL          0x0000000000005870          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005874*/ ADD         R1, SP, #4 
    /*00005878*/ MOVW        R0, #0                      @ g_stViModuleLock [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*0000587c*/ MOVT        R0, #0                      @ g_stViModuleLock [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00005880*/ BL          0x0000000000005880          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00005884*/ MOV         R0, #0 
    VI_GetModParam_x5888:
    /*00005888*/ ADD         SP, SP, #8 
    /*0000588c*/ POP         {R4, PC} 
    VI_GetModParam_x5890:
    /*00005890*/ BL          0x000000000000133C 
    /*00005894*/ CMP         R0, #0 
    /*00005898*/ BNE         VI_GetModParam_x5888
    /*0000589c*/ B           VI_GetModParam_x5854
    /*000058a0*/ ANDEQ       R0, R0, R0, ROR #14 
FUNC_END VI_GetModParam


FUNC_BEGIN VI_SetModParam
    /*000058a4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000058a8*/ SUBS        R9, R0, #0 
    /*000058ac*/ SUB         SP, SP, #20 
    /*000058b0*/ BEQ         VI_SetModParam_x59d8
    VI_SetModParam_x58b4:
    /*000058b4*/ LDR         R0, [PC, #300]              @ 0x00000000000059e8 
    /*000058b8*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000058bc*/ BL          0x00000000000058BC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000058c0*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000058c4*/ CMP         R0, #0 
    /*000058c8*/ BNE         VI_SetModParam_x5984
    /*000058cc*/ ADD         R8, R5, #1888               @ 0x760 
    /*000058d0*/ MOV         R0, R8 
    /*000058d4*/ BL          0x00000000000058D4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000058d8*/ CMP         R0, #0 
    /*000058dc*/ BNE         VI_SetModParam_x5984
    /*000058e0*/ ADD         R4, R5, #100                @ 0x64 
    /*000058e4*/ ADD         R7, R5, #804                @ 0x324 
    VI_SetModParam_x58e8:
    /*000058e8*/ MOV         R0, R4 
    /*000058ec*/ ADD         R4, R4, #176                @ 0xb0 
    /*000058f0*/ BL          0x00000000000058F0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000058f4*/ SUBS        R6, R0, #0 
    /*000058f8*/ BNE         VI_SetModParam_x5984
    /*000058fc*/ CMP         R4, R7 
    /*00005900*/ BNE         VI_SetModParam_x58e8
    /*00005904*/ BL          0x0000000000005904          @ VI_IsDevConfiged [R_ARM_CALL: .text+0x6d74] 
    /*00005908*/ CMP         R0, #1 
    /*0000590c*/ BEQ         VI_SetModParam_x5998
    /*00005910*/ BL          0x0000000000005910          @ VI_IsPipeCreated [R_ARM_CALL: .text+0x7834] 
    /*00005914*/ CMP         R0, #1 
    /*00005918*/ BEQ         VI_SetModParam_x59c4
    /*0000591c*/ ADD         R1, SP, #12 
    /*00005920*/ MOVW        R0, #0                      @ g_stViModuleLock [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*00005924*/ MOVT        R0, #0                      @ g_stViModuleLock [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00005928*/ BL          0x0000000000005928          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000592c*/ LDM         R9, {R2, R3} 
    /*00005930*/ MOVW        R0, #0                      @ g_stViModuleLock [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*00005934*/ ADD         R1, SP, #12 
    /*00005938*/ MOVT        R0, #0                      @ g_stViModuleLock [R_ARM_MOVT_ABS: .bss+0x8] 
    /*0000593c*/ STR         R2, [R5, #1872]             @ 0x750 
    /*00005940*/ STR         R3, [R5, #1876]             @ 0x754 
    /*00005944*/ BL          0x0000000000005944          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_SetModParam_x5948:
    /*00005948*/ LDR         R0, [PC, #156]              @ 0x00000000000059ec 
    /*0000594c*/ BL          0x000000000000594C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005950*/ LDR         R0, [PC, #152]              @ 0x00000000000059f0 
    /*00005954*/ BL          0x0000000000005954          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005958*/ LDR         R0, [PC, #148]              @ 0x00000000000059f4 
    /*0000595c*/ BL          0x000000000000595C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005960*/ LDR         R0, [PC, #144]              @ 0x00000000000059f8 
    /*00005964*/ BL          0x0000000000005964          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005968*/ MOV         R0, R8 
    /*0000596c*/ BL          0x000000000000596C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005970*/ LDR         R0, [PC, #112]              @ 0x00000000000059e8 
    /*00005974*/ BL          0x0000000000005974          @ osal_up [R_ARM_CALL: +0x0] 
    VI_SetModParam_x5978:
    /*00005978*/ MOV         R0, R6 
    /*0000597c*/ ADD         SP, SP, #20 
    /*00005980*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetModParam_x5984:
    /*00005984*/ MOV         R6, #65024                  @ 0xfe00 
    /*00005988*/ MOVT        R6, #65535                  @ 0xffff 
    /*0000598c*/ MOV         R0, R6 
    /*00005990*/ ADD         SP, SP, #20 
    /*00005994*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetModParam_x5998:
    /*00005998*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1458] 
    /*0000599c*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1458] 
    /*000059a0*/ MOVW        R3, #3500                   @ 0xdac 
    /*000059a4*/ STR         R3, [SP] 
    VI_SetModParam_x59a8:
    /*000059a8*/ LDR         R3, [PC, #76]               @ 0x00000000000059fc 
    /*000059ac*/ MOV         R1, #16 
    /*000059b0*/ MOV         R0, #3 
    /*000059b4*/ MOVW        R6, #32777                  @ 0x8009 
    /*000059b8*/ BL          0x00000000000059B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000059bc*/ MOVT        R6, #40976                  @ 0xa010 
    /*000059c0*/ B           VI_SetModParam_x5948
    VI_SetModParam_x59c4:
    /*000059c4*/ MOVW        R3, #3510                   @ 0xdb6 
    /*000059c8*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14ac] 
    /*000059cc*/ STR         R3, [SP] 
    /*000059d0*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14ac] 
    /*000059d4*/ B           VI_SetModParam_x59a8
    VI_SetModParam_x59d8:
    /*000059d8*/ BL          0x000000000000133C 
    /*000059dc*/ SUBS        R6, R0, #0 
    /*000059e0*/ BNE         VI_SetModParam_x5978
    /*000059e4*/ B           VI_SetModParam_x58b4
    /*000059e8*/ ANDEQ       R0, R0, R8, ROR #14 
    /*000059ec*/ ANDEQ       R0, R0, R4, LSL #5 
    /*000059f0*/ LDRDEQ      R0, [R0], -R4 
    /*000059f4*/ ANDEQ       R0, R0, R4, LSR #2 
    /*000059f8*/ ANDEQ       R0, R0, R4, ROR R0 
    /*000059fc*/ ANDEQ       R0, R0, R0, ROR R2 
FUNC_END VI_SetModParam


FUNC_BEGIN VI_PollWaitEvent
    /*00005a00*/ CMP         R1, #10 
    /*00005a04*/ MOV         R3, R0 
    /*00005a08*/ BEQ         VI_PollWaitEvent_x5a50
    /*00005a0c*/ CMP         R1, #9 
    /*00005a10*/ BEQ         VI_PollWaitEvent_x5a34
    /*00005a14*/ MOV         R0, #44                     @ 0x2c 
    /*00005a18*/ MOVW        IP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00005a1c*/ MLA         R3, R0, R3, R1 
    /*00005a20*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00005a24*/ MOV         R0, R2 
    /*00005a28*/ ADD         R3, R3, #10 
    /*00005a2c*/ ADD         R1, IP, R3, LSL #2 
    VI_PollWaitEvent_x5a30:
    /*00005a30*/ B           VI_PollWaitEvent_x5a30      @ osal_poll_wait [R_ARM_JUMP24: +0x0] 
    VI_PollWaitEvent_x5a34:
    /*00005a34*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00005a38*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00005a3c*/ MOV         IP, #176                    @ 0xb0 
    /*00005a40*/ MOV         R0, R2 
    /*00005a44*/ MLA         R1, IP, R3, R1 
    /*00005a48*/ ADD         R1, R1, #84                 @ 0x54 
    VI_PollWaitEvent_x5a4c:
    /*00005a4c*/ B           VI_PollWaitEvent_x5a4c      @ osal_poll_wait [R_ARM_JUMP24: +0x0] 
    VI_PollWaitEvent_x5a50:
    /*00005a50*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00005a54*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00005a58*/ MOV         IP, #176                    @ 0xb0 
    /*00005a5c*/ MOV         R0, R2 
    /*00005a60*/ MLA         R1, IP, R3, R1 
    /*00005a64*/ ADD         R1, R1, #92                 @ 0x5c 
    VI_PollWaitEvent_x5a68:
    /*00005a68*/ B           VI_PollWaitEvent_x5a68      @ osal_poll_wait [R_ARM_JUMP24: +0x0] 
FUNC_END VI_PollWaitEvent


FUNC_BEGIN VI_PollResault
    /*00005a6c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00005a70*/ MOV         R5, #176                    @ 0xb0 
    /*00005a74*/ MUL         R5, R5, R0 
    /*00005a78*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00005a7c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00005a80*/ SUB         SP, SP, #16 
    /*00005a84*/ MOV         R7, R0 
    /*00005a88*/ MOV         R8, R1 
    /*00005a8c*/ ADD         R6, R5, #100                @ 0x64 
    /*00005a90*/ ADD         R6, R4, R6 
    /*00005a94*/ MOV         R0, R6 
    /*00005a98*/ BL          0x0000000000005A98          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00005a9c*/ CMP         R0, #0 
    /*00005aa0*/ MOVNE       R4, #65024                  @ 0xfe00 
    /*00005aa4*/ MOVTNE      R4, #65535                  @ 0xffff 
    /*00005aa8*/ BEQ         VI_PollResault_x5ab8
    /*00005aac*/ MOV         R0, R4 
    /*00005ab0*/ ADD         SP, SP, #16 
    /*00005ab4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_PollResault_x5ab8:
    /*00005ab8*/ ADD         R5, R5, #140                @ 0x8c 
    /*00005abc*/ ADD         R1, SP, #12 
    /*00005ac0*/ ADD         R5, R4, R5 
    /*00005ac4*/ ADD         R4, R4, R7, LSL #2 
    /*00005ac8*/ MOV         R0, R5 
    /*00005acc*/ BL          0x0000000000005ACC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00005ad0*/ LDR         R4, [R4, #704]              @ 0x2c0 
    /*00005ad4*/ CMP         R4, #0 
    /*00005ad8*/ BEQ         VI_PollResault_x5b78
    /*00005adc*/ CMP         R8, #10 
    /*00005ae0*/ BEQ         VI_PollResault_x5b4c
    /*00005ae4*/ CMP         R8, #9 
    /*00005ae8*/ BEQ         VI_PollResault_x5b6c
    /*00005aec*/ CMP         R8, #8 
    /*00005af0*/ BGT         VI_PollResault_x5b28
    /*00005af4*/ ADD         R3, R8, #9536               @ 0x2540 
    /*00005af8*/ ADD         R3, R3, #50                 @ 0x32 
    /*00005afc*/ ADD         R3, R4, R3, LSL #2 
    /*00005b00*/ LDR         R3, [R3, #4] 
    /*00005b04*/ CMP         R3, #1 
    /*00005b08*/ BNE         VI_PollResault_x5b28
    /*00005b0c*/ MOV         R3, #36                     @ 0x24 
    /*00005b10*/ MLA         R4, R3, R8, R4 
    /*00005b14*/ ADD         R0, R4, #148                @ 0x94 
    /*00005b18*/ BL          0x0000000000005B18          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    VI_PollResault_x5b1c:
    /*00005b1c*/ CMP         R0, #0 
    /*00005b20*/ MOVNE       R4, #65                     @ 0x41 
    /*00005b24*/ BNE         VI_PollResault_x5b2c
    VI_PollResault_x5b28:
    /*00005b28*/ MOV         R4, #0 
    VI_PollResault_x5b2c:
    /*00005b2c*/ ADD         R1, SP, #12 
    /*00005b30*/ MOV         R0, R5 
    /*00005b34*/ BL          0x0000000000005B34          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00005b38*/ MOV         R0, R6 
    /*00005b3c*/ BL          0x0000000000005B3C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005b40*/ MOV         R0, R4 
    /*00005b44*/ ADD         SP, SP, #16 
    /*00005b48*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_PollResault_x5b4c:
    /*00005b4c*/ ADD         R3, R4, #36864              @ 0x9000 
    /*00005b50*/ LDR         R3, [R3, #528]              @ 0x210 
    /*00005b54*/ CMP         R3, #1 
    /*00005b58*/ BNE         VI_PollResault_x5b28
    /*00005b5c*/ ADD         R0, R4, #37376              @ 0x9200 
    /*00005b60*/ ADD         R0, R0, #24 
    /*00005b64*/ BL          0x0000000000005B64          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00005b68*/ B           VI_PollResault_x5b1c
    VI_PollResault_x5b6c:
    /*00005b6c*/ ADD         R0, R4, #76                 @ 0x4c 
    /*00005b70*/ BL          0x0000000000005B70          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00005b74*/ B           VI_PollResault_x5b1c
    VI_PollResault_x5b78:
    /*00005b78*/ MOVW        R3, #3579                   @ 0xdfb 
    /*00005b7c*/ STR         R7, [SP, #4] 
    /*00005b80*/ STR         R3, [SP] 
    /*00005b84*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14f8] 
    /*00005b88*/ LDR         R3, [PC, #16]               @ 0x0000000000005ba0 
    /*00005b8c*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14f8] 
    /*00005b90*/ MOV         R1, #16 
    /*00005b94*/ MOV         R0, #3 
    /*00005b98*/ BL          0x0000000000005B98          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005b9c*/ B           VI_PollResault_x5b2c
    /*00005ba0*/ ANDEQ       R0, R0, R0, LSL #5 
FUNC_END VI_PollResault


FUNC_BEGIN VI_DoPoll
    /*00005ba4*/ PUSH        {R4, R5, R6, LR} 
    /*00005ba8*/ MOV         R4, R0 
    /*00005bac*/ MOV         R5, R1 
    /*00005bb0*/ BL          0x0000000000005BB0          @ VI_PollWaitEvent [R_ARM_CALL: .text+0x5a00] 
    /*00005bb4*/ MOV         R1, R5 
    /*00005bb8*/ MOV         R0, R4 
    /*00005bbc*/ POP         {R4, R5, R6, LR} 
    VI_DoPoll_x5bc0:
    /*00005bc0*/ B           VI_DoPoll_x5bc0             @ VI_PollResault [R_ARM_JUMP24: .text+0x5a6c] 
FUNC_END VI_DoPoll


FUNC_BEGIN VI_CAP_Init
    /*00005bc4*/ PUSH        {R4, LR} 
    /*00005bc8*/ BL          0x0000000000005BC8          @ VI_MKP_CapDevCtxInit [R_ARM_CALL: .text+0x6da0] 
    /*00005bcc*/ BL          0x0000000000005BCC          @ VI_DRV_CapDevCtxInit [R_ARM_CALL: .text+0x32b4c] 
    /*00005bd0*/ BL          0x0000000000005BD0          @ VI_CAP_COMM_DevInit [R_ARM_CALL: .text+0x15d40] 
    /*00005bd4*/ SUBS        R4, R0, #0 
    /*00005bd8*/ BEQ         VI_CAP_Init_x5be4
    /*00005bdc*/ BL          0x0000000000005BDC          @ VI_DRV_CapDevCtxExit [R_ARM_CALL: .text+0x32b60] 
    /*00005be0*/ BL          0x0000000000005BE0          @ VI_MKP_CapDevCtxExit [R_ARM_CALL: .text+0x6db4] 
    VI_CAP_Init_x5be4:
    /*00005be4*/ MOV         R0, R4 
    /*00005be8*/ POP         {R4, PC} 
FUNC_END VI_CAP_Init


FUNC_BEGIN VI_CAP_Deinit
    /*00005bec*/ PUSH        {R4, LR} 
    /*00005bf0*/ MOV         R0, #0 
    /*00005bf4*/ BL          0x0000000000005BF4          @ VI_DisableDev [R_ARM_CALL: .text+0x70d0] 
    /*00005bf8*/ MOV         R0, #1 
    /*00005bfc*/ BL          0x0000000000005BFC          @ VI_DisableDev [R_ARM_CALL: .text+0x70d0] 
    /*00005c00*/ BL          0x0000000000005C00          @ VI_CAP_COMM_DevExit [R_ARM_CALL: .text+0x15d98] 
    /*00005c04*/ BL          0x0000000000005C04          @ VI_DRV_CapDevCtxExit [R_ARM_CALL: .text+0x32b60] 
    /*00005c08*/ POP         {R4, LR} 
    VI_CAP_Deinit_x5c0c:
    /*00005c0c*/ B           VI_CAP_Deinit_x5c0c         @ VI_MKP_CapDevCtxExit [R_ARM_JUMP24: .text+0x6db4] 
FUNC_END VI_CAP_Deinit


FUNC_BEGIN VI_PROC_RegisterSender
    /*00005c10*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00005c14*/ SUB         SP, SP, #20 
    /*00005c18*/ MOV         R0, #2 
    /*00005c1c*/ MOV         R2, #16 
    /*00005c20*/ MOVW        R3, #0                      @ VI_NotifyBind [R_ARM_MOVW_ABS_NC: .text+0x1378] 
    /*00005c24*/ STR         R2, [SP] 
    /*00005c28*/ MOVT        R3, #0                      @ VI_NotifyBind [R_ARM_MOVT_ABS: .text+0x1378] 
    /*00005c2c*/ MOV         R2, #4 
    /*00005c30*/ STR         R3, [SP, #12] 
    /*00005c34*/ MOV         R3, #9 
    /*00005c38*/ STMIB       SP, {R2, R3} 
    /*00005c3c*/ BL          0x0000000000005C3C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005c40*/ LDR         R3, [R0, #24] 
    /*00005c44*/ MOV         R0, SP 
    /*00005c48*/ BLX         R3 
    /*00005c4c*/ ADD         SP, SP, #20 
    /*00005c50*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_PROC_RegisterSender


FUNC_BEGIN VI_PROC_UnRegisterSender
    /*00005c54*/ PUSH        {R4, LR} 
    /*00005c58*/ MOV         R0, #2 
    /*00005c5c*/ BL          0x0000000000005C5C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005c60*/ POP         {R4, LR} 
    /*00005c64*/ LDR         R3, [R0, #28] 
    /*00005c68*/ MOV         R0, #16 
    /*00005c6c*/ BX          R3 
FUNC_END VI_PROC_UnRegisterSender


FUNC_BEGIN VI_PROC_RegisterReceiver
    /*00005c70*/ MOV         R0, #0 
    /*00005c74*/ BX          LR 
FUNC_END VI_PROC_RegisterReceiver


FUNC_BEGIN VI_PROC_UnRegisterReceiver
    /*00005c78*/ MOV         R0, #0 
    /*00005c7c*/ BX          LR 
FUNC_END VI_PROC_UnRegisterReceiver


FUNC_BEGIN VI_PROC_Init
    /*00005c80*/ PUSH        {R4, R5, R6, LR} 
    /*00005c84*/ MOV         R0, #2 
    /*00005c88*/ SUB         SP, SP, #8 
    /*00005c8c*/ BL          0x0000000000005C8C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005c90*/ CMP         R0, #0 
    /*00005c94*/ BEQ         VI_PROC_Init_x5d78
    /*00005c98*/ MOV         R0, #2 
    /*00005c9c*/ BL          0x0000000000005C9C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005ca0*/ LDR         R3, [R0, #24] 
    /*00005ca4*/ CMP         R3, #0 
    /*00005ca8*/ BEQ         VI_PROC_Init_x5d78
    /*00005cac*/ MOV         R0, #2 
    /*00005cb0*/ BL          0x0000000000005CB0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005cb4*/ LDR         R3, [R0, #32] 
    /*00005cb8*/ CMP         R3, #0 
    /*00005cbc*/ BEQ         VI_PROC_Init_x5d78
    /*00005cc0*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00005cc4*/ MOV         R4, #0 
    /*00005cc8*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00005ccc*/ MOV         R6, R4 
    VI_PROC_Init_x5cd0:
    /*00005cd0*/ MOV         R0, R4 
    /*00005cd4*/ MVN         R1, #0 
    /*00005cd8*/ STR         R6, [R5, #24] 
    /*00005cdc*/ ADD         R5, R5, #176                @ 0xb0 
    /*00005ce0*/ BL          0x0000000000005CE0          @ VI_DRV_SetPipeBindDevId [R_ARM_CALL: .text+0x317d0] 
    /*00005ce4*/ MOV         R0, R4 
    /*00005ce8*/ MOV         R1, #15 
    /*00005cec*/ ADD         R4, R4, #1 
    /*00005cf0*/ BL          0x0000000000005CF0          @ VI_HAL_SetIspSel [R_ARM_CALL: .text+0x35ac0] 
    /*00005cf4*/ CMP         R4, #4 
    /*00005cf8*/ BNE         VI_PROC_Init_x5cd0
    /*00005cfc*/ BL          0x0000000000005CFC          @ VI_PROC_COMM_DevInit [R_ARM_CALL: .text+0x13b84] 
    /*00005d00*/ SUBS        R4, R0, #0 
    /*00005d04*/ BEQ         VI_PROC_Init_x5d14
    VI_PROC_Init_x5d08:
    /*00005d08*/ MOV         R0, R4 
    /*00005d0c*/ ADD         SP, SP, #8 
    /*00005d10*/ POP         {R4, R5, R6, PC} 
    VI_PROC_Init_x5d14:
    /*00005d14*/ BL          0x0000000000005D14          @ VI_PROC_RegisterSender [R_ARM_CALL: .text+0x5c10] 
    /*00005d18*/ SUBS        R4, R0, #0 
    /*00005d1c*/ BNE         VI_PROC_Init_x5d68
    /*00005d20*/ MOV         R0, #3 
    /*00005d24*/ BL          0x0000000000005D24          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005d28*/ CMP         R0, #0 
    /*00005d2c*/ BEQ         VI_PROC_Init_x5d50
    /*00005d30*/ MOV         R0, #3 
    /*00005d34*/ BL          0x0000000000005D34          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005d38*/ LDR         R3, [R0] 
    /*00005d3c*/ CMP         R3, #0 
    /*00005d40*/ BEQ         VI_PROC_Init_x5d50
    /*00005d44*/ BL          0x0000000000005D44          @ VI_DRV_RegisterRgnCapacity [R_ARM_CALL: .text+0x27b1c] 
    /*00005d48*/ SUBS        R5, R0, #0 
    /*00005d4c*/ BNE         VI_PROC_Init_x5d60
    VI_PROC_Init_x5d50:
    /*00005d50*/ BL          0x0000000000005D50          @ VI_InitUsrPicInfo [R_ARM_CALL: .text+0x1bac4] 
    /*00005d54*/ MOV         R0, R4 
    /*00005d58*/ ADD         SP, SP, #8 
    /*00005d5c*/ POP         {R4, R5, R6, PC} 
    VI_PROC_Init_x5d60:
    /*00005d60*/ BL          0x0000000000005D60          @ VI_PROC_UnRegisterSender [R_ARM_CALL: .text+0x5c54] 
    /*00005d64*/ MOV         R4, R5 
    VI_PROC_Init_x5d68:
    /*00005d68*/ BL          0x0000000000005D68          @ VI_PROC_COMM_DevExit [R_ARM_CALL: .text+0x13c70] 
    /*00005d6c*/ MOV         R0, R4 
    /*00005d70*/ ADD         SP, SP, #8 
    /*00005d74*/ POP         {R4, R5, R6, PC} 
    VI_PROC_Init_x5d78:
    /*00005d78*/ MOVW        R3, #3916                   @ 0xf4c 
    /*00005d7c*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1534] 
    /*00005d80*/ STR         R3, [SP] 
    /*00005d84*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1534] 
    /*00005d88*/ LDR         R3, [PC, #20]               @ 0x0000000000005da4 
    /*00005d8c*/ MOV         R1, #16 
    /*00005d90*/ MOV         R0, #3 
    /*00005d94*/ MOVW        R4, #32777                  @ 0x8009 
    /*00005d98*/ BL          0x0000000000005D98          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005d9c*/ MOVT        R4, #40976                  @ 0xa010 
    /*00005da0*/ B           VI_PROC_Init_x5d08
    /*00005da4*/ MULEQ       R0, R0, R2 
FUNC_END VI_PROC_Init


FUNC_BEGIN VI_PROC_Deinit
    /*00005da8*/ PUSH        {R4, R5, LR} 
    /*00005dac*/ MOV         R0, #2 
    /*00005db0*/ SUB         SP, SP, #12 
    /*00005db4*/ BL          0x0000000000005DB4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005db8*/ CMP         R0, #0 
    /*00005dbc*/ BEQ         VI_PROC_Deinit_x5e68
    /*00005dc0*/ MOV         R0, #2 
    /*00005dc4*/ BL          0x0000000000005DC4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005dc8*/ LDR         R3, [R0, #28] 
    /*00005dcc*/ CMP         R3, #0 
    /*00005dd0*/ BEQ         VI_PROC_Deinit_x5e68
    /*00005dd4*/ LDR         R5, [PC, #184]              @ 0x0000000000005e94 
    /*00005dd8*/ MOV         R4, #0 
    VI_PROC_Deinit_x5ddc:
    /*00005ddc*/ LDR         R3, [R5] 
    /*00005de0*/ MOV         R0, R4 
    /*00005de4*/ CMP         R3, #0 
    /*00005de8*/ BEQ         VI_PROC_Deinit_x5e0c
    /*00005dec*/ BL          0x0000000000005DEC          @ VI_StopPipe [R_ARM_CALL: .text+0x82ec] 
    /*00005df0*/ LDR         R3, [R5] 
    /*00005df4*/ ADD         R3, R3, #36864              @ 0x9000 
    /*00005df8*/ LDR         R3, [R3, #472]              @ 0x1d8 
    /*00005dfc*/ CMP         R3, #1 
    /*00005e00*/ BEQ         VI_PROC_Deinit_x5e5c
    VI_PROC_Deinit_x5e04:
    /*00005e04*/ MOV         R0, R4 
    /*00005e08*/ BL          0x0000000000005E08          @ VI_DestroyPipe [R_ARM_CALL: .text+0x7f60] 
    VI_PROC_Deinit_x5e0c:
    /*00005e0c*/ ADD         R4, R4, #1 
    /*00005e10*/ ADD         R5, R5, #4 
    /*00005e14*/ CMP         R4, #4 
    /*00005e18*/ BNE         VI_PROC_Deinit_x5ddc
    /*00005e1c*/ BL          0x0000000000005E1C          @ VI_DeinitUsrPicInfo [R_ARM_CALL: .text+0x1bb70] 
    /*00005e20*/ BL          0x0000000000005E20          @ VI_PROC_COMM_DevExit [R_ARM_CALL: .text+0x13c70] 
    /*00005e24*/ BL          0x0000000000005E24          @ VI_PROC_UnRegisterSender [R_ARM_CALL: .text+0x5c54] 
    /*00005e28*/ MOV         R0, #3 
    /*00005e2c*/ BL          0x0000000000005E2C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005e30*/ CMP         R0, #0 
    /*00005e34*/ BEQ         VI_PROC_Deinit_x5e50
    /*00005e38*/ MOV         R0, #3 
    /*00005e3c*/ BL          0x0000000000005E3C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005e40*/ LDR         R3, [R0] 
    /*00005e44*/ CMP         R3, #0 
    /*00005e48*/ BEQ         VI_PROC_Deinit_x5e50
    /*00005e4c*/ BL          0x0000000000005E4C          @ VI_DRV_UnRegisterRgnCapacity [R_ARM_CALL: .text+0x27c24] 
    VI_PROC_Deinit_x5e50:
    /*00005e50*/ MOV         R0, #0 
    VI_PROC_Deinit_x5e54:
    /*00005e54*/ ADD         SP, SP, #12 
    /*00005e58*/ POP         {R4, R5, PC} 
    VI_PROC_Deinit_x5e5c:
    /*00005e5c*/ MOV         R0, R4 
    /*00005e60*/ BL          0x0000000000005E60          @ VI_DisableSnapPipe [R_ARM_CALL: .text+0x192ac] 
    /*00005e64*/ B           VI_PROC_Deinit_x5e04
    VI_PROC_Deinit_x5e68:
    /*00005e68*/ MOVW        R3, #3985                   @ 0xf91 
    /*00005e6c*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1534] 
    /*00005e70*/ STR         R3, [SP] 
    /*00005e74*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1534] 
    /*00005e78*/ LDR         R3, [PC, #24]               @ 0x0000000000005e98 
    /*00005e7c*/ MOV         R1, #16 
    /*00005e80*/ MOV         R0, #3 
    /*00005e84*/ BL          0x0000000000005E84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005e88*/ MOVW        R0, #32777                  @ 0x8009 
    /*00005e8c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00005e90*/ B           VI_PROC_Deinit_x5e54
    /*00005e94*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
    /*00005e98*/ ANDEQ       R0, R0, R0, LSR #5 
FUNC_END VI_PROC_Deinit


FUNC_BEGIN VI_SetDefaultModParam
    /*00005e9c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00005ea0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00005ea4*/ MOV         R2, #0 
    /*00005ea8*/ STR         R2, [R3, #1872]             @ 0x750 
    /*00005eac*/ STR         R2, [R3, #1876]             @ 0x754 
    /*00005eb0*/ BX          LR 
FUNC_END VI_SetDefaultModParam


FUNC_BEGIN VI_InitTimeRef
    /*00005eb4*/ PUSH        {R4, R5, R6, LR} 
    /*00005eb8*/ LDR         R4, [PC, #32]               @ 0x0000000000005ee0 
    /*00005ebc*/ ADD         R5, R4, #304                @ 0x130 
    VI_InitTimeRef_x5ec0:
    /*00005ec0*/ MOV         R2, #76                     @ 0x4c 
    /*00005ec4*/ MOV         R0, R4 
    /*00005ec8*/ MOV         R1, #0 
    /*00005ecc*/ ADD         R4, R4, R2 
    /*00005ed0*/ BL          0x0000000000005ED0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00005ed4*/ CMP         R4, R5 
    /*00005ed8*/ BNE         VI_InitTimeRef_x5ec0
    /*00005edc*/ POP         {R4, R5, R6, PC} 
    /*00005ee0*/ ANDEQ       R0, R0, R0, ROR #5 
FUNC_END VI_InitTimeRef


FUNC_BEGIN VI_CalcChnTimeRef
    /*00005ee4*/ MOV         R2, #19 
    /*00005ee8*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00005eec*/ MLA         R1, R2, R0, R1 
    /*00005ef0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00005ef4*/ ADD         R3, R3, R1, LSL #2 
    /*00005ef8*/ LDR         R0, [R3, #720]              @ 0x2d0 
    /*00005efc*/ ADD         R2, R0, #2 
    /*00005f00*/ STR         R2, [R3, #720]              @ 0x2d0 
    /*00005f04*/ BX          LR 
FUNC_END VI_CalcChnTimeRef


FUNC_BEGIN VI_CalcRawTimeRef
    /*00005f08*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00005f0c*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00005f10*/ MOV         R3, #76                     @ 0x4c 
    /*00005f14*/ MLA         R3, R3, R0, R2 
    /*00005f18*/ LDR         R0, [R3, #792]              @ 0x318 
    /*00005f1c*/ ADD         R2, R0, #2 
    /*00005f20*/ STR         R2, [R3, #792]              @ 0x318 
    /*00005f24*/ BX          LR 
FUNC_END VI_CalcRawTimeRef


FUNC_BEGIN VI_CheckModParam
    /*00005f28*/ MOV         R0, #0 
    /*00005f2c*/ BX          LR 
FUNC_END VI_CheckModParam


FUNC_BEGIN VI_SynchCtxInit
    /*00005f30*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00005f34*/ MOVW        R0, #0                      @ g_stViModuleLock [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*00005f38*/ MOVT        R0, #0                      @ g_stViModuleLock [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00005f3c*/ LDR         R5, [PC, #268]              @ 0x0000000000006050 
    /*00005f40*/ BL          0x0000000000005F40          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*00005f44*/ MOVW        R0, #0                      @ g_stUserPicLock [R_ARM_MOVW_ABS_NC: .bss+0x11dc8] 
    /*00005f48*/ MOVT        R0, #0                      @ g_stUserPicLock [R_ARM_MOVT_ABS: .bss+0x11dc8] 
    /*00005f4c*/ ADD         R7, R5, #704                @ 0x2c0 
    /*00005f50*/ BL          0x0000000000005F50          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*00005f54*/ MOVW        R0, #0                      @ g_stViCommLock [R_ARM_MOVW_ABS_NC: .bss+0x1798] 
    /*00005f58*/ MOVT        R0, #0                      @ g_stViCommLock [R_ARM_MOVT_ABS: .bss+0x1798] 
    /*00005f5c*/ BL          0x0000000000005F5C          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*00005f60*/ BL          0x0000000000005F60          @ VI_DRV_FpnSpinLockInit [R_ARM_CALL: .text+0x3a684] 
    /*00005f64*/ MOV         R1, #1 
    /*00005f68*/ LDR         R0, [PC, #228]              @ 0x0000000000006054 
    /*00005f6c*/ BL          0x0000000000005F6C          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*00005f70*/ ADD         R0, R5, #1744               @ 0x6d0 
    /*00005f74*/ BL          0x0000000000005F74          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*00005f78*/ MOV         R1, #1 
    /*00005f7c*/ LDR         R0, [PC, #212]              @ 0x0000000000006058 
    /*00005f80*/ BL          0x0000000000005F80          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*00005f84*/ LDR         R0, [PC, #208]              @ 0x000000000000605c 
    /*00005f88*/ BL          0x0000000000005F88          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    VI_SynchCtxInit_x5f8c:
    /*00005f8c*/ SUB         R4, R5, #100                @ 0x64 
    /*00005f90*/ SUB         R6, R5, #64                 @ 0x40 
    VI_SynchCtxInit_x5f94:
    /*00005f94*/ MOV         R0, R4 
    /*00005f98*/ ADD         R4, R4, #4 
    /*00005f9c*/ BL          0x0000000000005F9C          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00005fa0*/ CMP         R4, R6 
    /*00005fa4*/ BNE         VI_SynchCtxInit_x5f94
    /*00005fa8*/ MOV         R0, R4 
    /*00005fac*/ SUB         R4, R5, #36                 @ 0x24 
    /*00005fb0*/ BL          0x0000000000005FB0          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00005fb4*/ SUB         R0, R5, #60                 @ 0x3c 
    /*00005fb8*/ BL          0x0000000000005FB8          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00005fbc*/ SUB         R0, R5, #56                 @ 0x38 
    /*00005fc0*/ BL          0x0000000000005FC0          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00005fc4*/ SUB         R0, R5, #52                 @ 0x34 
    /*00005fc8*/ BL          0x0000000000005FC8          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00005fcc*/ MOV         R1, #1 
    /*00005fd0*/ SUB         R0, R5, #44                 @ 0x2c 
    /*00005fd4*/ BL          0x0000000000005FD4          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*00005fd8*/ MOV         R1, #1 
    /*00005fdc*/ SUB         R0, R5, #40                 @ 0x28 
    /*00005fe0*/ BL          0x0000000000005FE0          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*00005fe4*/ SUB         R0, R5, #48                 @ 0x30 
    /*00005fe8*/ BL          0x0000000000005FE8          @ osal_wait_init [R_ARM_CALL: +0x0] 
    VI_SynchCtxInit_x5fec:
    /*00005fec*/ MOV         R0, R4 
    /*00005ff0*/ MOV         R1, #1 
    /*00005ff4*/ ADD         R4, R4, #4 
    /*00005ff8*/ BL          0x0000000000005FF8          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*00005ffc*/ CMP         R5, R4 
    /*00006000*/ BNE         VI_SynchCtxInit_x5fec
    /*00006004*/ MOV         R0, R5 
    /*00006008*/ BL          0x0000000000006008          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*0000600c*/ SUB         R0, R5, #112                @ 0x70 
    /*00006010*/ BL          0x0000000000006010          @ osal_atomic_init [R_ARM_CALL: +0x0] 
    /*00006014*/ SUB         R0, R5, #108                @ 0x6c 
    /*00006018*/ BL          0x0000000000006018          @ osal_atomic_init [R_ARM_CALL: +0x0] 
    /*0000601c*/ SUB         R0, R5, #104                @ 0x68 
    /*00006020*/ BL          0x0000000000006020          @ osal_atomic_init [R_ARM_CALL: +0x0] 
    /*00006024*/ ADD         R0, R5, #20 
    /*00006028*/ BL          0x0000000000006028          @ osal_atomic_init [R_ARM_CALL: +0x0] 
    /*0000602c*/ ADD         R0, R5, #28 
    /*00006030*/ BL          0x0000000000006030          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00006034*/ ADD         R0, R5, #32 
    /*00006038*/ ADD         R5, R5, #176                @ 0xb0 
    /*0000603c*/ BL          0x000000000000603C          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00006040*/ CMP         R5, R7 
    /*00006044*/ BNE         VI_SynchCtxInit_x5f8c
    /*00006048*/ MOV         R0, #0 
    /*0000604c*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*00006050*/ MULEQ       R0, IP, R0 
    /*00006054*/ ANDEQ       R0, R0, R8, ROR #14 
    /*00006058*/ ANDEQ       R0, R0, R0, ROR R7 
    /*0000605c*/ ANDEQ       R0, R0, R4, ROR R7 
FUNC_END VI_SynchCtxInit


FUNC_BEGIN VI_SynchCtxExit
    /*00006060*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00006064*/ LDR         R0, [PC, #256]              @ 0x000000000000616c 
    /*00006068*/ BL          0x0000000000006068          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    /*0000606c*/ LDR         R0, [PC, #252]              @ 0x0000000000006170 
    /*00006070*/ BL          0x0000000000006070          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00006074*/ LDR         R5, [PC, #248]              @ 0x0000000000006174 
    /*00006078*/ LDR         R0, [PC, #248]              @ 0x0000000000006178 
    /*0000607c*/ BL          0x000000000000607C          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    /*00006080*/ LDR         R0, [PC, #244]              @ 0x000000000000617c 
    /*00006084*/ ADD         R7, R5, #704                @ 0x2c0 
    /*00006088*/ BL          0x0000000000006088          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    VI_SynchCtxExit_x608c:
    /*0000608c*/ SUB         R4, R5, #100                @ 0x64 
    /*00006090*/ SUB         R6, R5, #64                 @ 0x40 
    VI_SynchCtxExit_x6094:
    /*00006094*/ MOV         R0, R4 
    /*00006098*/ ADD         R4, R4, #4 
    /*0000609c*/ BL          0x000000000000609C          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000060a0*/ CMP         R4, R6 
    /*000060a4*/ BNE         VI_SynchCtxExit_x6094
    /*000060a8*/ MOV         R0, R4 
    /*000060ac*/ SUB         R4, R5, #36                 @ 0x24 
    /*000060b0*/ BL          0x00000000000060B0          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000060b4*/ SUB         R0, R5, #60                 @ 0x3c 
    /*000060b8*/ BL          0x00000000000060B8          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000060bc*/ SUB         R0, R5, #56                 @ 0x38 
    /*000060c0*/ BL          0x00000000000060C0          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000060c4*/ SUB         R0, R5, #52                 @ 0x34 
    /*000060c8*/ BL          0x00000000000060C8          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000060cc*/ SUB         R0, R5, #44                 @ 0x2c 
    /*000060d0*/ BL          0x00000000000060D0          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    /*000060d4*/ SUB         R0, R5, #40                 @ 0x28 
    /*000060d8*/ BL          0x00000000000060D8          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    VI_SynchCtxExit_x60dc:
    /*000060dc*/ MOV         R0, R4 
    /*000060e0*/ ADD         R4, R4, #4 
    /*000060e4*/ BL          0x00000000000060E4          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    /*000060e8*/ CMP         R5, R4 
    /*000060ec*/ BNE         VI_SynchCtxExit_x60dc
    /*000060f0*/ SUB         R0, R5, #48                 @ 0x30 
    /*000060f4*/ BL          0x00000000000060F4          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000060f8*/ MOV         R0, R5 
    /*000060fc*/ BL          0x00000000000060FC          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00006100*/ SUB         R0, R5, #112                @ 0x70 
    /*00006104*/ BL          0x0000000000006104          @ osal_atomic_destory [R_ARM_CALL: +0x0] 
    /*00006108*/ SUB         R0, R5, #108                @ 0x6c 
    /*0000610c*/ BL          0x000000000000610C          @ osal_atomic_destory [R_ARM_CALL: +0x0] 
    /*00006110*/ SUB         R0, R5, #104                @ 0x68 
    /*00006114*/ BL          0x0000000000006114          @ osal_atomic_destory [R_ARM_CALL: +0x0] 
    /*00006118*/ ADD         R0, R5, #20 
    /*0000611c*/ BL          0x000000000000611C          @ osal_atomic_destory [R_ARM_CALL: +0x0] 
    /*00006120*/ ADD         R0, R5, #28 
    /*00006124*/ BL          0x0000000000006124          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*00006128*/ ADD         R0, R5, #32 
    /*0000612c*/ ADD         R5, R5, #176                @ 0xb0 
    /*00006130*/ BL          0x0000000000006130          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*00006134*/ CMP         R5, R7 
    /*00006138*/ BNE         VI_SynchCtxExit_x608c
    /*0000613c*/ BL          0x000000000000613C          @ VI_DRV_DestroyFpnSpinLock [R_ARM_CALL: .text+0x3a6b8] 
    /*00006140*/ MOVW        R0, #0                      @ g_stViCommLock [R_ARM_MOVW_ABS_NC: .bss+0x1798] 
    /*00006144*/ MOVT        R0, #0                      @ g_stViCommLock [R_ARM_MOVT_ABS: .bss+0x1798] 
    /*00006148*/ BL          0x0000000000006148          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*0000614c*/ MOVW        R0, #0                      @ g_stUserPicLock [R_ARM_MOVW_ABS_NC: .bss+0x11dc8] 
    /*00006150*/ MOVT        R0, #0                      @ g_stUserPicLock [R_ARM_MOVT_ABS: .bss+0x11dc8] 
    /*00006154*/ BL          0x0000000000006154          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00006158*/ MOVW        R0, #0                      @ g_stViModuleLock [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*0000615c*/ MOVT        R0, #0                      @ g_stViModuleLock [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00006160*/ BL          0x0000000000006160          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00006164*/ MOV         R0, #0 
    /*00006168*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*0000616c*/ ANDEQ       R0, R0, R8, ROR #14 
    /*00006170*/ ANDEQ       R0, R0, IP, ROR #14 
    /*00006174*/ MULEQ       R0, IP, R0 
    /*00006178*/ ANDEQ       R0, R0, R0, ROR R7 
    /*0000617c*/ ANDEQ       R0, R0, R4, ROR R7 
FUNC_END VI_SynchCtxExit


FUNC_BEGIN VI_GetSplitAttr
    /*00006180*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00006184*/ SUB         SP, SP, #16 
    /*00006188*/ MOV         R8, R1 
    /*0000618c*/ MOV         R7, R0 
    /*00006190*/ BL          0x0000000000006190          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00006194*/ SUBS        R4, R0, #0 
    /*00006198*/ BNE         VI_GetSplitAttr_x6200
    /*0000619c*/ CMP         R8, #0 
    /*000061a0*/ BEQ         VI_GetSplitAttr_x6248
    VI_GetSplitAttr_x61a4:
    /*000061a4*/ MOV         R6, #176                    @ 0xb0 
    /*000061a8*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000061ac*/ MUL         R6, R6, R7 
    /*000061b0*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000061b4*/ ADD         R1, SP, #12 
    /*000061b8*/ ADD         R5, R6, #140                @ 0x8c 
    /*000061bc*/ ADD         R5, R4, R5 
    /*000061c0*/ MOV         R0, R5 
    /*000061c4*/ BL          0x00000000000061C4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000061c8*/ ADD         R3, R4, R7, LSL #2 
    /*000061cc*/ LDR         R3, [R3, #704]              @ 0x2c0 
    /*000061d0*/ CMP         R3, #0 
    /*000061d4*/ BEQ         VI_GetSplitAttr_x6258
    /*000061d8*/ LDR         R3, [R4, R6] 
    /*000061dc*/ CMP         R3, #1 
    /*000061e0*/ BEQ         VI_GetSplitAttr_x620c
    /*000061e4*/ MOV         R1, R8 
    /*000061e8*/ MOV         R0, R7 
    /*000061ec*/ BL          0x00000000000061EC          @ VI_DRV_GetSplitAttr [R_ARM_CALL: .text+0x3363c] 
    /*000061f0*/ ADD         R1, SP, #12 
    /*000061f4*/ MOV         R4, R0 
    /*000061f8*/ MOV         R0, R5 
    /*000061fc*/ BL          0x00000000000061FC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_GetSplitAttr_x6200:
    /*00006200*/ MOV         R0, R4 
    /*00006204*/ ADD         SP, SP, #16 
    /*00006208*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetSplitAttr_x620c:
    /*0000620c*/ ADD         R1, SP, #12 
    /*00006210*/ MOV         R0, R5 
    /*00006214*/ BL          0x0000000000006214          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006218*/ MOVW        R3, #4209                   @ 0x1071 
    /*0000621c*/ STR         R7, [SP, #4] 
    /*00006220*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c0] 
    /*00006224*/ STR         R3, [SP] 
    /*00006228*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c0] 
    /*0000622c*/ LDR         R3, [PC, #96]               @ 0x0000000000006294 
    /*00006230*/ MOV         R1, #16 
    /*00006234*/ MOV         R0, #3 
    /*00006238*/ MOVW        R4, #32786                  @ 0x8012 
    /*0000623c*/ BL          0x000000000000623C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006240*/ MOVT        R4, #40976                  @ 0xa010 
    /*00006244*/ B           VI_GetSplitAttr_x6200
    VI_GetSplitAttr_x6248:
    /*00006248*/ BL          0x000000000000133C 
    /*0000624c*/ SUBS        R4, R0, #0 
    /*00006250*/ BNE         VI_GetSplitAttr_x6200
    /*00006254*/ B           VI_GetSplitAttr_x61a4
    VI_GetSplitAttr_x6258:
    /*00006258*/ ADD         R1, SP, #12 
    /*0000625c*/ MOV         R0, R5 
    /*00006260*/ BL          0x0000000000006260          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006264*/ MOVW        R3, #4202                   @ 0x106a 
    /*00006268*/ STR         R7, [SP, #4] 
    /*0000626c*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x228] 
    /*00006270*/ STR         R3, [SP] 
    /*00006274*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x228] 
    /*00006278*/ LDR         R3, [PC, #20]               @ 0x0000000000006294 
    /*0000627c*/ MOV         R1, #16 
    /*00006280*/ MOV         R0, #3 
    /*00006284*/ MOVW        R4, #32773                  @ 0x8005 
    /*00006288*/ BL          0x0000000000006288          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000628c*/ MOVT        R4, #40976                  @ 0xa010 
    /*00006290*/ B           VI_GetSplitAttr_x6200
    /*00006294*/ @           <UNDEFINED> instruction: 0x000002b0 
FUNC_END VI_GetSplitAttr


FUNC_BEGIN VI_UpdateViVpssMode
    /*00006298*/ PUSH        {R4, R5, LR} 
    /*0000629c*/ SUB         SP, SP, #12 
    /*000062a0*/ MOV         R5, R0 
    /*000062a4*/ BL          0x00000000000062A4          @ VI_DRV_CheckViVpssMode [R_ARM_CALL: .text+0x32904] 
    /*000062a8*/ SUBS        R4, R0, #0 
    /*000062ac*/ BNE         VI_UpdateViVpssMode_x62fc
    /*000062b0*/ MOV         R0, R5 
    /*000062b4*/ BL          0x00000000000062B4          @ VI_DRV_SetViVpssMode [R_ARM_CALL: .text+0x32890] 
    /*000062b8*/ SUBS        R4, R0, #0 
    /*000062bc*/ BNE         VI_UpdateViVpssMode_x62d0
    /*000062c0*/ BL          0x00000000000062C0          @ VI_COMM_GetOfflineProcCnt [R_ARM_CALL: .text+0x11a54] 
    /*000062c4*/ MOV         R0, R4 
    /*000062c8*/ ADD         SP, SP, #12 
    /*000062cc*/ POP         {R4, R5, PC} 
    VI_UpdateViVpssMode_x62d0:
    /*000062d0*/ MOVW        R3, #4236                   @ 0x108c 
    /*000062d4*/ MOV         R1, #16 
    /*000062d8*/ STR         R3, [SP] 
    /*000062dc*/ MOVW        R2, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15ac] 
    /*000062e0*/ LDR         R3, [PC, #64]               @ 0x0000000000006328 
    /*000062e4*/ MOVT        R2, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15ac] 
    /*000062e8*/ MOV         R0, #3 
    /*000062ec*/ BL          0x00000000000062EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000062f0*/ MOV         R0, R4 
    /*000062f4*/ ADD         SP, SP, #12 
    /*000062f8*/ POP         {R4, R5, PC} 
    VI_UpdateViVpssMode_x62fc:
    /*000062fc*/ MOVW        R3, #4227                   @ 0x1083 
    /*00006300*/ MOV         R1, #16 
    /*00006304*/ STR         R3, [SP] 
    /*00006308*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1578] 
    /*0000630c*/ LDR         R3, [PC, #20]               @ 0x0000000000006328 
    /*00006310*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1578] 
    /*00006314*/ MOV         R0, #3 
    /*00006318*/ BL          0x0000000000006318          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000631c*/ MOV         R0, R4 
    /*00006320*/ ADD         SP, SP, #12 
    /*00006324*/ POP         {R4, R5, PC} 
    /*00006328*/ ANDEQ       R0, R0, R0, ASR #5 
FUNC_END VI_UpdateViVpssMode


FUNC_BEGIN VI_SetDefaultViVpssMode
    /*0000632c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00006330*/ SUB         SP, SP, #20 
    /*00006334*/ MOV         R0, SP 
    /*00006338*/ BL          0x0000000000006338          @ VI_DRV_GetDefaultViVpssMode [R_ARM_CALL: .text+0x329d8] 
    /*0000633c*/ MOV         R0, SP 
    /*00006340*/ BL          0x0000000000006340          @ VI_UpdateViVpssMode [R_ARM_CALL: .text+0x6298] 
    /*00006344*/ ADD         SP, SP, #20 
    /*00006348*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_SetDefaultViVpssMode


FUNC_BEGIN VI_GetProcModuleParam
    /*0000634c*/ PUSH        {R4, LR} 
    /*00006350*/ SUBS        R4, R0, #0 
    /*00006354*/ BEQ         VI_GetProcModuleParam_x6364
    VI_GetProcModuleParam_x6358:
    /*00006358*/ MOV         R0, R4 
    /*0000635c*/ POP         {R4, LR} 
    VI_GetProcModuleParam_x6360:
    /*00006360*/ B           VI_GetProcModuleParam_x6360 @ VI_DRV_GetProcModuleParam [R_ARM_JUMP24: .text+0x344b4] 
    VI_GetProcModuleParam_x6364:
    /*00006364*/ BL          0x000000000000133C 
    /*00006368*/ CMP         R0, #0 
    /*0000636c*/ BEQ         VI_GetProcModuleParam_x6358
    /*00006370*/ POP         {R4, PC} 
FUNC_END VI_GetProcModuleParam


FUNC_BEGIN VI_DownSemaphore
    /*00006374*/ PUSH        {R4, R5, R6, LR} 
    /*00006378*/ MOV         R5, R0 
    /*0000637c*/ BL          0x000000000000637C          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00006380*/ SUBS        R4, R0, #0 
    /*00006384*/ BNE         VI_DownSemaphore_x63b0
    /*00006388*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000638c*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00006390*/ MOV         R3, #176                    @ 0xb0 
    /*00006394*/ MLA         R0, R3, R5, R0 
    /*00006398*/ ADD         R0, R0, #100                @ 0x64 
    /*0000639c*/ BL          0x000000000000639C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000063a0*/ MOV         R3, #65024                  @ 0xfe00 
    /*000063a4*/ MOVT        R3, #65535                  @ 0xffff 
    /*000063a8*/ CMP         R0, #0 
    /*000063ac*/ MOVNE       R4, R3 
    VI_DownSemaphore_x63b0:
    /*000063b0*/ MOV         R0, R4 
    /*000063b4*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DownSemaphore


FUNC_BEGIN VI_UpSemaphore
    /*000063b8*/ PUSH        {R4, R5, R6, LR} 
    /*000063bc*/ MOV         R4, R0 
    /*000063c0*/ BL          0x00000000000063C0          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*000063c4*/ SUBS        R5, R0, #0 
    /*000063c8*/ BNE         VI_UpSemaphore_x63e4
    /*000063cc*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000063d0*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000063d4*/ MOV         R3, #176                    @ 0xb0 
    /*000063d8*/ MLA         R0, R3, R4, R0 
    /*000063dc*/ ADD         R0, R0, #100                @ 0x64 
    /*000063e0*/ BL          0x00000000000063E0          @ osal_up [R_ARM_CALL: +0x0] 
    VI_UpSemaphore_x63e4:
    /*000063e4*/ MOV         R0, R5 
    /*000063e8*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_UpSemaphore


FUNC_BEGIN Vi_IsPipeExisted
    /*000063ec*/ PUSH        {R4, R5, R6, LR} 
    /*000063f0*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000063f4*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000063f8*/ MOV         R5, #176                    @ 0xb0 
    /*000063fc*/ MOV         R6, R0 
    /*00006400*/ SUB         SP, SP, #8 
    /*00006404*/ MLA         R5, R5, R0, R4 
    /*00006408*/ ADD         R4, R4, R6, LSL #2 
    /*0000640c*/ ADD         R1, SP, #4 
    /*00006410*/ ADD         R5, R5, #140                @ 0x8c 
    /*00006414*/ MOV         R0, R5 
    /*00006418*/ BL          0x0000000000006418          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000641c*/ LDR         R4, [R4, #704]              @ 0x2c0 
    /*00006420*/ MOV         R0, R5 
    /*00006424*/ ADD         R1, SP, #4 
    /*00006428*/ ADDS        R4, R4, #0 
    /*0000642c*/ MOVNE       R4, #1 
    /*00006430*/ BL          0x0000000000006430          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006434*/ MOV         R0, R4 
    /*00006438*/ ADD         SP, SP, #8 
    /*0000643c*/ POP         {R4, R5, R6, PC} 
FUNC_END Vi_IsPipeExisted


FUNC_BEGIN VI_GetPipeBindDevSize
    /*00006440*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00006444*/ SUB         SP, SP, #20 
    /*00006448*/ MOV         R9, R1 
    /*0000644c*/ MOV         R5, R0 
    /*00006450*/ BL          0x0000000000006450          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*00006454*/ SUBS        R8, R0, #0 
    /*00006458*/ BNE         VI_GetPipeBindDevSize_x64dc
    /*0000645c*/ CMP         R9, #0 
    /*00006460*/ BEQ         VI_GetPipeBindDevSize_x6524
    VI_GetPipeBindDevSize_x6464:
    /*00006464*/ MOV         R7, #176                    @ 0xb0 
    /*00006468*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000646c*/ MUL         R7, R7, R5 
    /*00006470*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00006474*/ ADD         R1, SP, #12 
    /*00006478*/ ADD         R6, R7, #140                @ 0x8c 
    /*0000647c*/ ADD         R6, R4, R6 
    /*00006480*/ MOV         R0, R6 
    /*00006484*/ BL          0x0000000000006484          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006488*/ ADD         R3, R4, R5, LSL #2 
    /*0000648c*/ LDR         R3, [R3, #704]              @ 0x2c0 
    /*00006490*/ CMP         R3, #0 
    /*00006494*/ BEQ         VI_GetPipeBindDevSize_x6574
    /*00006498*/ LDR         R3, [R4, R7] 
    /*0000649c*/ CMP         R3, #1 
    /*000064a0*/ BEQ         VI_GetPipeBindDevSize_x64e8
    /*000064a4*/ MOV         R0, R5 
    /*000064a8*/ BL          0x00000000000064A8          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*000064ac*/ MOV         R3, #36                     @ 0x24 
    /*000064b0*/ MLA         R4, R3, R0, R4 
    /*000064b4*/ MOV         R7, R0 
    /*000064b8*/ LDR         R3, [R4, #1896]             @ 0x768 
    /*000064bc*/ CMP         R3, #0 
    /*000064c0*/ BEQ         VI_GetPipeBindDevSize_x6538
    /*000064c4*/ MOV         R1, R9 
    /*000064c8*/ MOV         R0, R5 
    /*000064cc*/ BL          0x00000000000064CC          @ VI_DRV_GetPipeBindDevSize [R_ARM_CALL: .text+0x31cb8] 
    /*000064d0*/ ADD         R1, SP, #12 
    /*000064d4*/ MOV         R0, R6 
    /*000064d8*/ BL          0x00000000000064D8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_GetPipeBindDevSize_x64dc:
    /*000064dc*/ MOV         R0, R8 
    /*000064e0*/ ADD         SP, SP, #20 
    /*000064e4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_GetPipeBindDevSize_x64e8:
    /*000064e8*/ ADD         R1, SP, #12 
    /*000064ec*/ MOV         R0, R6 
    /*000064f0*/ BL          0x00000000000064F0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000064f4*/ MOVW        R3, #4318                   @ 0x10de 
    /*000064f8*/ STR         R5, [SP, #4] 
    /*000064fc*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c0] 
    /*00006500*/ STR         R3, [SP] 
    /*00006504*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c0] 
    /*00006508*/ LDR         R3, [PC, #160]              @ 0x00000000000065b0 
    /*0000650c*/ MOV         R1, #16 
    /*00006510*/ MOV         R0, #3 
    /*00006514*/ MOVW        R8, #32786                  @ 0x8012 
    /*00006518*/ BL          0x0000000000006518          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000651c*/ MOVT        R8, #40976                  @ 0xa010 
    /*00006520*/ B           VI_GetPipeBindDevSize_x64dc
    VI_GetPipeBindDevSize_x6524:
    /*00006524*/ BL          0x000000000000133C 
    /*00006528*/ CMP         R0, #0 
    /*0000652c*/ MOVNE       R8, R0 
    /*00006530*/ BNE         VI_GetPipeBindDevSize_x64dc
    /*00006534*/ B           VI_GetPipeBindDevSize_x6464
    VI_GetPipeBindDevSize_x6538:
    /*00006538*/ ADD         R1, SP, #12 
    /*0000653c*/ MOV         R0, R6 
    /*00006540*/ BL          0x0000000000006540          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006544*/ MOVW        R3, #4328                   @ 0x10e8 
    /*00006548*/ STR         R7, [SP, #4] 
    /*0000654c*/ MOVW        R2, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15e4] 
    /*00006550*/ STR         R3, [SP] 
    /*00006554*/ MOVT        R2, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15e4] 
    /*00006558*/ LDR         R3, [PC, #80]               @ 0x00000000000065b0 
    /*0000655c*/ MOV         R1, #16 
    /*00006560*/ MOV         R0, #3 
    /*00006564*/ MOVW        R8, #32775                  @ 0x8007 
    /*00006568*/ BL          0x0000000000006568          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000656c*/ MOVT        R8, #40976                  @ 0xa010 
    /*00006570*/ B           VI_GetPipeBindDevSize_x64dc
    VI_GetPipeBindDevSize_x6574:
    /*00006574*/ ADD         R1, SP, #12 
    /*00006578*/ MOV         R0, R6 
    /*0000657c*/ BL          0x000000000000657C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006580*/ MOVW        R3, #4311                   @ 0x10d7 
    /*00006584*/ STR         R5, [SP, #4] 
    /*00006588*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x228] 
    /*0000658c*/ STR         R3, [SP] 
    /*00006590*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x228] 
    /*00006594*/ LDR         R3, [PC, #20]               @ 0x00000000000065b0 
    /*00006598*/ MOV         R1, #16 
    /*0000659c*/ MOV         R0, #3 
    /*000065a0*/ MOVW        R8, #32773                  @ 0x8005 
    /*000065a4*/ BL          0x00000000000065A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000065a8*/ MOVT        R8, #40976                  @ 0xa010 
    /*000065ac*/ B           VI_GetPipeBindDevSize_x64dc
    /*000065b0*/ LDRDEQ      R0, [R0], -R4 
FUNC_END VI_GetPipeBindDevSize


FUNC_BEGIN VI_GetPipeNRXStatus
    /*000065b4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000065b8*/ SUB         SP, SP, #20 
    /*000065bc*/ MOV         R9, R1 
    /*000065c0*/ MOV         R5, R0 
    /*000065c4*/ BL          0x00000000000065C4          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*000065c8*/ SUBS        R6, R0, #0 
    /*000065cc*/ BEQ         VI_GetPipeNRXStatus_x65dc
    VI_GetPipeNRXStatus_x65d0:
    /*000065d0*/ MOV         R0, R6 
    /*000065d4*/ ADD         SP, SP, #20 
    /*000065d8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_GetPipeNRXStatus_x65dc:
    /*000065dc*/ MOV         R8, #176                    @ 0xb0 
    /*000065e0*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000065e4*/ MUL         R8, R8, R5 
    /*000065e8*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000065ec*/ ADD         R1, SP, #12 
    /*000065f0*/ ADD         R7, R8, #140                @ 0x8c 
    /*000065f4*/ ADD         R7, R4, R7 
    /*000065f8*/ MOV         R0, R7 
    /*000065fc*/ BL          0x00000000000065FC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006600*/ ADD         R3, R4, R5, LSL #2 
    /*00006604*/ CMP         R9, #0 
    /*00006608*/ LDR         R3, [R3, #704]              @ 0x2c0 
    /*0000660c*/ BEQ         VI_GetPipeNRXStatus_x6684
    /*00006610*/ CMP         R3, #0 
    /*00006614*/ BEQ         VI_GetPipeNRXStatus_x66bc
    /*00006618*/ LDR         R3, [R4, R8] 
    /*0000661c*/ CMP         R3, #1 
    /*00006620*/ BEQ         VI_GetPipeNRXStatus_x6648
    /*00006624*/ MOV         R1, R9 
    /*00006628*/ MOV         R0, R5 
    /*0000662c*/ BL          0x000000000000662C          @ VI_DRV_GetPipeNRXStatus [R_ARM_CALL: .text+0x31d08] 
    /*00006630*/ MOV         R0, R7 
    /*00006634*/ ADD         R1, SP, #12 
    /*00006638*/ BL          0x0000000000006638          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000663c*/ MOV         R0, R6 
    /*00006640*/ ADD         SP, SP, #20 
    /*00006644*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_GetPipeNRXStatus_x6648:
    /*00006648*/ ADD         R1, SP, #12 
    /*0000664c*/ MOV         R0, R7 
    /*00006650*/ BL          0x0000000000006650          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006654*/ MOVW        R3, #4366                   @ 0x110e 
    /*00006658*/ STR         R5, [SP, #4] 
    /*0000665c*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c0] 
    /*00006660*/ STR         R3, [SP] 
    /*00006664*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c0] 
    /*00006668*/ LDR         R3, [PC, #136]              @ 0x00000000000066f8 
    /*0000666c*/ MOV         R1, #16 
    /*00006670*/ MOV         R0, #3 
    /*00006674*/ MOVW        R6, #32786                  @ 0x8012 
    /*00006678*/ BL          0x0000000000006678          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000667c*/ MOVT        R6, #40976                  @ 0xa010 
    /*00006680*/ B           VI_GetPipeNRXStatus_x65d0
    VI_GetPipeNRXStatus_x6684:
    /*00006684*/ ADD         R1, SP, #12 
    /*00006688*/ MOV         R0, R7 
    /*0000668c*/ BL          0x000000000000668C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006690*/ MOV         R3, #4352                   @ 0x1100 
    /*00006694*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1620] 
    /*00006698*/ STR         R3, [SP] 
    /*0000669c*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1620] 
    /*000066a0*/ LDR         R3, [PC, #80]               @ 0x00000000000066f8 
    /*000066a4*/ MOV         R1, #16 
    /*000066a8*/ MOV         R0, #3 
    /*000066ac*/ MOVW        R6, #32774                  @ 0x8006 
    /*000066b0*/ BL          0x00000000000066B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000066b4*/ MOVT        R6, #40976                  @ 0xa010 
    /*000066b8*/ B           VI_GetPipeNRXStatus_x65d0
    VI_GetPipeNRXStatus_x66bc:
    /*000066bc*/ ADD         R1, SP, #12 
    /*000066c0*/ MOV         R0, R7 
    /*000066c4*/ BL          0x00000000000066C4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000066c8*/ MOVW        R3, #4359                   @ 0x1107 
    /*000066cc*/ STR         R5, [SP, #4] 
    /*000066d0*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x228] 
    /*000066d4*/ STR         R3, [SP] 
    /*000066d8*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x228] 
    /*000066dc*/ LDR         R3, [PC, #20]               @ 0x00000000000066f8 
    /*000066e0*/ MOV         R1, #16 
    /*000066e4*/ MOV         R0, #3 
    /*000066e8*/ MOVW        R6, #32773                  @ 0x8005 
    /*000066ec*/ BL          0x00000000000066EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000066f0*/ MOVT        R6, #40976                  @ 0xa010 
    /*000066f4*/ B           VI_GetPipeNRXStatus_x65d0
    /*000066f8*/ ANDEQ       R0, R0, IP, ROR #5 
FUNC_END VI_GetPipeNRXStatus


FUNC_BEGIN ViGetStitchSyncBeSttInfo
    /*000066fc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00006700*/ SUB         SP, SP, #16 
    /*00006704*/ MOV         R6, R1 
    /*00006708*/ MOV         R5, R0 
    /*0000670c*/ BL          0x000000000000670C          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00006710*/ SUBS        R4, R0, #0 
    /*00006714*/ BNE         ViGetStitchSyncBeSttInfo_x677c
    /*00006718*/ CMP         R6, #0 
    /*0000671c*/ BEQ         ViGetStitchSyncBeSttInfo_x67c4
    ViGetStitchSyncBeSttInfo_x6720:
    /*00006720*/ MOV         R8, #176                    @ 0xb0 
    /*00006724*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00006728*/ MUL         R8, R8, R5 
    /*0000672c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00006730*/ ADD         R1, SP, #12 
    /*00006734*/ ADD         R7, R8, #140                @ 0x8c 
    /*00006738*/ ADD         R7, R4, R7 
    /*0000673c*/ MOV         R0, R7 
    /*00006740*/ BL          0x0000000000006740          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006744*/ ADD         R3, R4, R5, LSL #2 
    /*00006748*/ LDR         R3, [R3, #704]              @ 0x2c0 
    /*0000674c*/ CMP         R3, #0 
    /*00006750*/ BEQ         ViGetStitchSyncBeSttInfo_x6788
    /*00006754*/ LDR         R3, [R4, R8] 
    /*00006758*/ CMP         R3, #1 
    /*0000675c*/ BEQ         ViGetStitchSyncBeSttInfo_x67e0
    /*00006760*/ MOV         R1, R6 
    /*00006764*/ MOV         R0, R5 
    /*00006768*/ BL          0x0000000000006768          @ VI_DRV_GetStitchSyncBeSttInfo [R_ARM_CALL: .text+0x38808] 
    /*0000676c*/ ADD         R1, SP, #12 
    /*00006770*/ MOV         R4, R0 
    /*00006774*/ MOV         R0, R7 
    /*00006778*/ BL          0x0000000000006778          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    ViGetStitchSyncBeSttInfo_x677c:
    /*0000677c*/ MOV         R0, R4 
    /*00006780*/ ADD         SP, SP, #16 
    /*00006784*/ POP         {R4, R5, R6, R7, R8, PC} 
    ViGetStitchSyncBeSttInfo_x6788:
    /*00006788*/ ADD         R1, SP, #12 
    /*0000678c*/ MOV         R0, R7 
    /*00006790*/ BL          0x0000000000006790          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006794*/ MOVW        R3, #4394                   @ 0x112a 
    /*00006798*/ STR         R5, [SP, #4] 
    /*0000679c*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x228] 
    /*000067a0*/ STR         R3, [SP] 
    /*000067a4*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x228] 
    /*000067a8*/ LDR         R3, [PC, #108]              @ 0x000000000000681c 
    /*000067ac*/ MOV         R1, #16 
    /*000067b0*/ MOV         R0, #3 
    /*000067b4*/ MOVW        R4, #32773                  @ 0x8005 
    /*000067b8*/ BL          0x00000000000067B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000067bc*/ MOVT        R4, #40976                  @ 0xa010 
    /*000067c0*/ B           ViGetStitchSyncBeSttInfo_x677c
    ViGetStitchSyncBeSttInfo_x67c4:
    /*000067c4*/ BL          0x000000000000133C 
    /*000067c8*/ SUBS        R4, R0, #0 
    /*000067cc*/ BNE         ViGetStitchSyncBeSttInfo_x677c
    /*000067d0*/ BL          0x000000000000133C 
    /*000067d4*/ SUBS        R4, R0, #0 
    /*000067d8*/ BNE         ViGetStitchSyncBeSttInfo_x677c
    /*000067dc*/ B           ViGetStitchSyncBeSttInfo_x6720
    ViGetStitchSyncBeSttInfo_x67e0:
    /*000067e0*/ ADD         R1, SP, #12 
    /*000067e4*/ MOV         R0, R7 
    /*000067e8*/ BL          0x00000000000067E8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000067ec*/ MOVW        R3, #4401                   @ 0x1131 
    /*000067f0*/ STR         R5, [SP, #4] 
    /*000067f4*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c0] 
    /*000067f8*/ STR         R3, [SP] 
    /*000067fc*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c0] 
    /*00006800*/ LDR         R3, [PC, #20]               @ 0x000000000000681c 
    /*00006804*/ MOV         R1, #16 
    /*00006808*/ MOV         R0, #3 
    /*0000680c*/ MOVW        R4, #32786                  @ 0x8012 
    /*00006810*/ BL          0x0000000000006810          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006814*/ MOVT        R4, #40976                  @ 0xa010 
    /*00006818*/ B           ViGetStitchSyncBeSttInfo_x677c
    /*0000681c*/ ANDEQ       R0, R0, R0, LSL #6 
FUNC_END ViGetStitchSyncBeSttInfo


FUNC_BEGIN ViGetPipeBindDevId
    /*00006820*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00006824*/ SUB         SP, SP, #20 
    /*00006828*/ MOV         R9, R1 
    /*0000682c*/ MOV         R7, R0 
    /*00006830*/ BL          0x0000000000006830          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00006834*/ SUBS        R8, R0, #0 
    /*00006838*/ BNE         ViGetPipeBindDevId_x689c
    /*0000683c*/ CMP         R9, #0 
    /*00006840*/ BEQ         ViGetPipeBindDevId_x68e4
    ViGetPipeBindDevId_x6844:
    /*00006844*/ MOV         R6, #176                    @ 0xb0 
    /*00006848*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000684c*/ MUL         R6, R6, R7 
    /*00006850*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00006854*/ ADD         R1, SP, #12 
    /*00006858*/ ADD         R5, R6, #140                @ 0x8c 
    /*0000685c*/ ADD         R5, R4, R5 
    /*00006860*/ MOV         R0, R5 
    /*00006864*/ BL          0x0000000000006864          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006868*/ ADD         R3, R4, R7, LSL #2 
    /*0000686c*/ LDR         R3, [R3, #704]              @ 0x2c0 
    /*00006870*/ CMP         R3, #0 
    /*00006874*/ BEQ         ViGetPipeBindDevId_x68f8
    /*00006878*/ LDR         R3, [R4, R6] 
    /*0000687c*/ CMP         R3, #1 
    /*00006880*/ BEQ         ViGetPipeBindDevId_x68a8
    /*00006884*/ MOV         R0, R7 
    /*00006888*/ BL          0x0000000000006888          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*0000688c*/ ADD         R1, SP, #12 
    /*00006890*/ STR         R0, [R9] 
    /*00006894*/ MOV         R0, R5 
    /*00006898*/ BL          0x0000000000006898          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    ViGetPipeBindDevId_x689c:
    /*0000689c*/ MOV         R0, R8 
    /*000068a0*/ ADD         SP, SP, #20 
    /*000068a4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    ViGetPipeBindDevId_x68a8:
    /*000068a8*/ ADD         R1, SP, #12 
    /*000068ac*/ MOV         R0, R5 
    /*000068b0*/ BL          0x00000000000068B0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000068b4*/ MOVW        R3, #4436                   @ 0x1154 
    /*000068b8*/ STR         R7, [SP, #4] 
    /*000068bc*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c0] 
    /*000068c0*/ STR         R3, [SP] 
    /*000068c4*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c0] 
    /*000068c8*/ LDR         R3, [PC, #100]              @ 0x0000000000006934 
    /*000068cc*/ MOV         R1, #16 
    /*000068d0*/ MOV         R0, #3 
    /*000068d4*/ MOVW        R8, #32786                  @ 0x8012 
    /*000068d8*/ BL          0x00000000000068D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000068dc*/ MOVT        R8, #40976                  @ 0xa010 
    /*000068e0*/ B           ViGetPipeBindDevId_x689c
    ViGetPipeBindDevId_x68e4:
    /*000068e4*/ BL          0x000000000000133C 
    /*000068e8*/ CMP         R0, #0 
    /*000068ec*/ MOVNE       R8, R0 
    /*000068f0*/ BNE         ViGetPipeBindDevId_x689c
    /*000068f4*/ B           ViGetPipeBindDevId_x6844
    ViGetPipeBindDevId_x68f8:
    /*000068f8*/ ADD         R1, SP, #12 
    /*000068fc*/ MOV         R0, R5 
    /*00006900*/ BL          0x0000000000006900          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006904*/ MOVW        R3, #4429                   @ 0x114d 
    /*00006908*/ STR         R7, [SP, #4] 
    /*0000690c*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x228] 
    /*00006910*/ STR         R3, [SP] 
    /*00006914*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x228] 
    /*00006918*/ LDR         R3, [PC, #20]               @ 0x0000000000006934 
    /*0000691c*/ MOV         R1, #16 
    /*00006920*/ MOV         R0, #3 
    /*00006924*/ MOVW        R8, #32773                  @ 0x8005 
    /*00006928*/ BL          0x0000000000006928          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000692c*/ MOVT        R8, #40976                  @ 0xa010 
    /*00006930*/ B           ViGetPipeBindDevId_x689c
    /*00006934*/ ANDEQ       R0, R0, IP, LSL R3 
FUNC_END ViGetPipeBindDevId


FUNC_BEGIN ViGetBeSttInfo
    /*00006938*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000693c*/ SUB         SP, SP, #36                 @ 0x24 
    /*00006940*/ MOV         R9, R1 
    /*00006944*/ MOV         R8, R2 
    /*00006948*/ MOV         R7, R0 
    /*0000694c*/ BL          0x000000000000694C          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00006950*/ SUBS        R4, R0, #0 
    /*00006954*/ BNE         ViGetBeSttInfo_x69c8
    /*00006958*/ CMP         R8, #0 
    /*0000695c*/ BEQ         ViGetBeSttInfo_x6a10
    ViGetBeSttInfo_x6960:
    /*00006960*/ MOV         R6, #176                    @ 0xb0 
    /*00006964*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00006968*/ MUL         R6, R6, R7 
    /*0000696c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00006970*/ ADD         R1, SP, #28 
    /*00006974*/ ADD         R5, R6, #140                @ 0x8c 
    /*00006978*/ ADD         R5, R4, R5 
    /*0000697c*/ MOV         R0, R5 
    /*00006980*/ BL          0x0000000000006980          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006984*/ ADD         R3, R4, R7, LSL #2 
    /*00006988*/ LDR         R3, [R3, #704]              @ 0x2c0 
    /*0000698c*/ CMP         R3, #0 
    /*00006990*/ BEQ         ViGetBeSttInfo_x6a70
    /*00006994*/ LDR         R3, [R4, R6] 
    /*00006998*/ CMP         R3, #1 
    /*0000699c*/ BEQ         ViGetBeSttInfo_x69d4
    /*000069a0*/ CMP         R9, #2 
    /*000069a4*/ BHI         ViGetBeSttInfo_x6a20
    /*000069a8*/ MOV         R1, R9 
    /*000069ac*/ MOV         R2, R8 
    /*000069b0*/ MOV         R0, R7 
    /*000069b4*/ BL          0x00000000000069B4          @ VI_DRV_GetBeSttInfo [R_ARM_CALL: .text+0x387ac] 
    /*000069b8*/ ADD         R1, SP, #28 
    /*000069bc*/ MOV         R4, R0 
    /*000069c0*/ MOV         R0, R5 
    /*000069c4*/ BL          0x00000000000069C4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    ViGetBeSttInfo_x69c8:
    /*000069c8*/ MOV         R0, R4 
    /*000069cc*/ ADD         SP, SP, #36                 @ 0x24 
    /*000069d0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    ViGetBeSttInfo_x69d4:
    /*000069d4*/ ADD         R1, SP, #28 
    /*000069d8*/ MOV         R0, R5 
    /*000069dc*/ BL          0x00000000000069DC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000069e0*/ MOVW        R3, #4471                   @ 0x1177 
    /*000069e4*/ STR         R7, [SP, #4] 
    /*000069e8*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c0] 
    /*000069ec*/ STR         R3, [SP] 
    /*000069f0*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c0] 
    /*000069f4*/ LDR         R3, [PC, #176]              @ 0x0000000000006aac 
    /*000069f8*/ MOV         R1, #16 
    /*000069fc*/ MOV         R0, #3 
    /*00006a00*/ MOVW        R4, #32786                  @ 0x8012 
    /*00006a04*/ BL          0x0000000000006A04          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006a08*/ MOVT        R4, #40976                  @ 0xa010 
    /*00006a0c*/ B           ViGetBeSttInfo_x69c8
    ViGetBeSttInfo_x6a10:
    /*00006a10*/ BL          0x000000000000133C 
    /*00006a14*/ SUBS        R4, R0, #0 
    /*00006a18*/ BNE         ViGetBeSttInfo_x69c8
    /*00006a1c*/ B           ViGetBeSttInfo_x6960
    ViGetBeSttInfo_x6a20:
    /*00006a20*/ ADD         R1, SP, #28 
    /*00006a24*/ MOV         R0, R5 
    /*00006a28*/ BL          0x0000000000006A28          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006a2c*/ MOV         R2, #2 
    /*00006a30*/ MOV         R3, #0 
    /*00006a34*/ STR         R2, [SP, #12] 
    /*00006a38*/ STR         R3, [SP, #8] 
    /*00006a3c*/ MOVW        R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x164c] 
    /*00006a40*/ MOVW        R3, #4478                   @ 0x117e 
    /*00006a44*/ STR         R9, [SP, #16] 
    /*00006a48*/ STR         R3, [SP] 
    /*00006a4c*/ MOVT        R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x164c] 
    /*00006a50*/ STR         R7, [SP, #4] 
    /*00006a54*/ MOV         R1, #16 
    /*00006a58*/ LDR         R3, [PC, #76]               @ 0x0000000000006aac 
    /*00006a5c*/ MOV         R0, #3 
    /*00006a60*/ MOVW        R4, #32771                  @ 0x8003 
    /*00006a64*/ BL          0x0000000000006A64          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006a68*/ MOVT        R4, #40976                  @ 0xa010 
    /*00006a6c*/ B           ViGetBeSttInfo_x69c8
    ViGetBeSttInfo_x6a70:
    /*00006a70*/ ADD         R1, SP, #28 
    /*00006a74*/ MOV         R0, R5 
    /*00006a78*/ BL          0x0000000000006A78          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006a7c*/ MOVW        R3, #4464                   @ 0x1170 
    /*00006a80*/ STR         R7, [SP, #4] 
    /*00006a84*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x228] 
    /*00006a88*/ STR         R3, [SP] 
    /*00006a8c*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x228] 
    /*00006a90*/ LDR         R3, [PC, #20]               @ 0x0000000000006aac 
    /*00006a94*/ MOV         R1, #16 
    /*00006a98*/ MOV         R0, #3 
    /*00006a9c*/ MOVW        R4, #32773                  @ 0x8005 
    /*00006aa0*/ BL          0x0000000000006AA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006aa4*/ MOVT        R4, #40976                  @ 0xa010 
    /*00006aa8*/ B           ViGetBeSttInfo_x69c8
    /*00006aac*/ ANDEQ       R0, R0, R0, LSR R3 
FUNC_END ViGetBeSttInfo


FUNC_BEGIN VI_IspClearInputQueue
    /*00006ab0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00006ab4*/ MOV         R6, #176                    @ 0xb0 
    /*00006ab8*/ MUL         R6, R6, R0 
    /*00006abc*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00006ac0*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00006ac4*/ SUB         SP, SP, #20 
    /*00006ac8*/ MOV         R7, R0 
    /*00006acc*/ ADD         R1, SP, #12 
    /*00006ad0*/ ADD         R5, R6, #140                @ 0x8c 
    /*00006ad4*/ ADD         R5, R4, R5 
    /*00006ad8*/ MOV         R0, R5 
    /*00006adc*/ BL          0x0000000000006ADC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006ae0*/ ADD         R3, R4, R7, LSL #2 
    /*00006ae4*/ LDR         R3, [R3, #704]              @ 0x2c0 
    /*00006ae8*/ CMP         R3, #0 
    /*00006aec*/ BEQ         VI_IspClearInputQueue_x6b58
    /*00006af0*/ LDR         R3, [R4, R6] 
    /*00006af4*/ CMP         R3, #1 
    /*00006af8*/ BEQ         VI_IspClearInputQueue_x6b1c
    /*00006afc*/ MOV         R0, R7 
    /*00006b00*/ BL          0x0000000000006B00          @ VI_ClearInputQueue [R_ARM_CALL: .text+0x32e0] 
    /*00006b04*/ MOV         R0, R5 
    /*00006b08*/ ADD         R1, SP, #12 
    /*00006b0c*/ BL          0x0000000000006B0C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006b10*/ MOV         R0, #0 
    VI_IspClearInputQueue_x6b14:
    /*00006b14*/ ADD         SP, SP, #20 
    /*00006b18*/ POP         {R4, R5, R6, R7, PC} 
    VI_IspClearInputQueue_x6b1c:
    /*00006b1c*/ ADD         R1, SP, #12 
    /*00006b20*/ MOV         R0, R5 
    /*00006b24*/ BL          0x0000000000006B24          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006b28*/ MOVW        R3, #4508                   @ 0x119c 
    /*00006b2c*/ STR         R7, [SP, #4] 
    /*00006b30*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c0] 
    /*00006b34*/ STR         R3, [SP] 
    /*00006b38*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c0] 
    /*00006b3c*/ LDR         R3, [PC, #80]               @ 0x0000000000006b94 
    /*00006b40*/ MOV         R1, #16 
    /*00006b44*/ MOV         R0, #3 
    /*00006b48*/ BL          0x0000000000006B48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006b4c*/ MOVW        R0, #32786                  @ 0x8012 
    /*00006b50*/ MOVT        R0, #40976                  @ 0xa010 
    /*00006b54*/ B           VI_IspClearInputQueue_x6b14
    VI_IspClearInputQueue_x6b58:
    /*00006b58*/ ADD         R1, SP, #12 
    /*00006b5c*/ MOV         R0, R5 
    /*00006b60*/ BL          0x0000000000006B60          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006b64*/ MOVW        R3, #4501                   @ 0x1195 
    /*00006b68*/ STR         R7, [SP, #4] 
    /*00006b6c*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x228] 
    /*00006b70*/ STR         R3, [SP] 
    /*00006b74*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x228] 
    /*00006b78*/ LDR         R3, [PC, #20]               @ 0x0000000000006b94 
    /*00006b7c*/ MOV         R1, #16 
    /*00006b80*/ MOV         R0, #3 
    /*00006b84*/ BL          0x0000000000006B84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006b88*/ MOVW        R0, #32773                  @ 0x8005 
    /*00006b8c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00006b90*/ B           VI_IspClearInputQueue_x6b14
    /*00006b94*/ ANDEQ       R0, R0, R0, ASR #6 
FUNC_END VI_IspClearInputQueue


FUNC_BEGIN VI_StatisticInputFrameRate
    /*00006b98*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00006b9c*/ CMP         R1, #0 
    /*00006ba0*/ BEQ         VI_StatisticInputFrameRate_x6c5c
    /*00006ba4*/ PUSH        {R4, R5, R6, LR} 
    /*00006ba8*/ MOVW        R4, #26215                  @ 0x6667 
    /*00006bac*/ LDR         LR, [R0, #44]               @ 0x2c 
    /*00006bb0*/ MOVT        R4, #26214                  @ 0x6666 
    /*00006bb4*/ MOV         R6, #10 
    /*00006bb8*/ LDR         R1, [R0, #40]               @ 0x28 
    /*00006bbc*/ ADD         LR, LR, #1 
    /*00006bc0*/ CMP         R1, #9 
    /*00006bc4*/ SMULL       R4, R5, LR, R4 
    /*00006bc8*/ ASR         IP, LR, #31 
    /*00006bcc*/ RSB         IP, IP, R5, ASR #2 
    /*00006bd0*/ MLS         IP, R6, IP, LR 
    /*00006bd4*/ STR         IP, [R0, #44]               @ 0x2c 
    /*00006bd8*/ BLE         VI_StatisticInputFrameRate_x6c38
    /*00006bdc*/ LDR         LR, [R0, #56]               @ 0x38 
    /*00006be0*/ SUB         LR, R2, LR 
    /*00006be4*/ STR         LR, [R0, IP, LSL #2] 
    VI_StatisticInputFrameRate_x6be8:
    /*00006be8*/ ADD         R5, R0, R1, LSL #2 
    /*00006bec*/ MOV         IP, R0 
    /*00006bf0*/ MOV         LR, #0 
    VI_StatisticInputFrameRate_x6bf4:
    /*00006bf4*/ LDR         R4, [IP], #4 
    /*00006bf8*/ CMP         IP, R5 
    /*00006bfc*/ ADD         LR, LR, R4 
    /*00006c00*/ BNE         VI_StatisticInputFrameRate_x6bf4
    VI_StatisticInputFrameRate_x6c04:
    /*00006c04*/ MOV         R4, R0 
    /*00006c08*/ MOV         R0, LR 
    /*00006c0c*/ MOV         R5, R3 
    /*00006c10*/ MOV         R6, R2 
    /*00006c14*/ BL          0x0000000000006C14          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*00006c18*/ MOV         R1, R0 
    /*00006c1c*/ MOVW        R0, #16960                  @ 0x4240 
    /*00006c20*/ MOVT        R0, #15 
    /*00006c24*/ BL          0x0000000000006C24          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*00006c28*/ STR         R6, [R4, #56]               @ 0x38 
    /*00006c2c*/ STR         R5, [R4, #60]               @ 0x3c 
    /*00006c30*/ STR         R0, [R4, #48]               @ 0x30 
    /*00006c34*/ POP         {R4, R5, R6, PC} 
    VI_StatisticInputFrameRate_x6c38:
    /*00006c38*/ ADD         R1, R1, #1 
    /*00006c3c*/ LDR         LR, [R0, #56]               @ 0x38 
    /*00006c40*/ CMP         R1, #0 
    /*00006c44*/ STR         R1, [R0, #40]               @ 0x28 
    /*00006c48*/ SUB         LR, R2, LR 
    /*00006c4c*/ STR         LR, [R0, IP, LSL #2] 
    /*00006c50*/ MOVLE       LR, #0 
    /*00006c54*/ BGT         VI_StatisticInputFrameRate_x6be8
    /*00006c58*/ B           VI_StatisticInputFrameRate_x6c04
    VI_StatisticInputFrameRate_x6c5c:
    /*00006c5c*/ STR         R2, [R0, #56]               @ 0x38 
    /*00006c60*/ MOV         R2, #1 
    /*00006c64*/ STR         R3, [R0, #60]               @ 0x3c 
    /*00006c68*/ MVN         R3, #0 
    /*00006c6c*/ STR         R1, [R0, #40]               @ 0x28 
    /*00006c70*/ STR         R2, [R0, #64]               @ 0x40 
    /*00006c74*/ STR         R3, [R0, #48]               @ 0x30 
    /*00006c78*/ STR         R3, [R0, #52]               @ 0x34 
    /*00006c7c*/ STR         R3, [R0, #44]               @ 0x2c 
    /*00006c80*/ BX          LR 
FUNC_END VI_StatisticInputFrameRate


FUNC_BEGIN VI_CalcOutputLimitFrameRate
    /*00006c84*/ PUSH        {R4, R5, R6, LR} 
    /*00006c88*/ LDR         R6, [R0, #48]               @ 0x30 
    /*00006c8c*/ CMN         R6, #1 
    /*00006c90*/ BEQ         VI_CalcOutputLimitFrameRate_x6d14
    /*00006c94*/ MOV         R5, R1 
    /*00006c98*/ LDR         R1, [R2] 
    /*00006c9c*/ MOV         R4, R0 
    /*00006ca0*/ CMN         R1, #1 
    /*00006ca4*/ BEQ         VI_CalcOutputLimitFrameRate_x6cd8
    /*00006ca8*/ LDR         R0, [R2, #4] 
    /*00006cac*/ CMN         R0, #1 
    /*00006cb0*/ CMPNE       R1, R0 
    /*00006cb4*/ BEQ         VI_CalcOutputLimitFrameRate_x6cd8
    /*00006cb8*/ MUL         R0, R0, R6 
    /*00006cbc*/ BL          0x0000000000006CBC          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*00006cc0*/ STR         R6, [R5, #4] 
    /*00006cc4*/ CMP         R0, #15 
    /*00006cc8*/ STRLE       R0, [R5, #8] 
    /*00006ccc*/ MOVGT       R3, #15 
    /*00006cd0*/ STRGT       R3, [R5, #8] 
    /*00006cd4*/ B           VI_CalcOutputLimitFrameRate_x6cf0
    VI_CalcOutputLimitFrameRate_x6cd8:
    /*00006cd8*/ CMP         R6, #15 
    /*00006cdc*/ STRGT       R6, [R5, #4] 
    /*00006ce0*/ MVNLE       R3, #0 
    /*00006ce4*/ MOVGT       R3, #15 
    /*00006ce8*/ STRLE       R3, [R5, #4] 
    /*00006cec*/ STR         R3, [R5, #8] 
    VI_CalcOutputLimitFrameRate_x6cf0:
    /*00006cf0*/ LDR         R3, [R5] 
    /*00006cf4*/ LDR         R0, [R4, #48]               @ 0x30 
    /*00006cf8*/ LDR         R1, [R4, #52]               @ 0x34 
    /*00006cfc*/ MUL         R0, R0, R3 
    /*00006d00*/ BL          0x0000000000006D00          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*00006d04*/ STR         R0, [R5] 
    /*00006d08*/ LDR         R3, [R4, #48]               @ 0x30 
    /*00006d0c*/ STR         R3, [R4, #52]               @ 0x34 
    /*00006d10*/ POP         {R4, R5, R6, PC} 
    VI_CalcOutputLimitFrameRate_x6d14:
    /*00006d14*/ STR         R6, [R1, #4] 
    /*00006d18*/ STR         R6, [R1, #8] 
    /*00006d1c*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_CalcOutputLimitFrameRate


FUNC_BEGIN VI_CheckDevId.part.0
    /*00006d20*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00006d24*/ SUB         SP, SP, #12 
    /*00006d28*/ MOV         R2, #39                     @ 0x27 
    /*00006d2c*/ MOV         R1, #16 
    /*00006d30*/ STR         R0, [SP, #4] 
    /*00006d34*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x358] 
    /*00006d38*/ STR         R2, [SP] 
    /*00006d3c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x358] 
    /*00006d40*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16a0] 
    /*00006d44*/ MOV         R0, #3 
    /*00006d48*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16a0] 
    /*00006d4c*/ BL          0x0000000000006D4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006d50*/ MOVW        R0, #32769                  @ 0x8001 
    /*00006d54*/ MOVT        R0, #40976                  @ 0xa010 
    /*00006d58*/ ADD         SP, SP, #12 
    /*00006d5c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_CheckDevId.part.0


FUNC_BEGIN VI_CheckDevId
    /*00006d60*/ CMP         R0, #1 
    /*00006d64*/ BHI         VI_CheckDevId_x6d70
    /*00006d68*/ MOV         R0, #0 
    /*00006d6c*/ BX          LR 
    VI_CheckDevId_x6d70:
    /*00006d70*/ B           0x0000000000006D20 
FUNC_END VI_CheckDevId


FUNC_BEGIN VI_IsDevConfiged
    /*00006d74*/ MOVW        R3, #0                      @ g_astDevMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x778] 
    /*00006d78*/ MOVT        R3, #0                      @ g_astDevMkpCtx [R_ARM_MOVT_ABS: .bss+0x778] 
    /*00006d7c*/ LDR         R2, [R3] 
    /*00006d80*/ CMP         R2, #0 
    /*00006d84*/ BNE         VI_IsDevConfiged_x6d98
    /*00006d88*/ LDR         R0, [R3, #36]               @ 0x24 
    /*00006d8c*/ ADDS        R0, R0, #0 
    /*00006d90*/ MOVNE       R0, #1 
    /*00006d94*/ BX          LR 
    VI_IsDevConfiged_x6d98:
    /*00006d98*/ MOV         R0, #1 
    /*00006d9c*/ BX          LR 
FUNC_END VI_IsDevConfiged


FUNC_BEGIN VI_MKP_CapDevCtxInit
    /*00006da0*/ MOVW        R0, #0                      @ g_astDevMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x778] 
    /*00006da4*/ MOV         R2, #72                     @ 0x48 
    /*00006da8*/ MOVT        R0, #0                      @ g_astDevMkpCtx [R_ARM_MOVT_ABS: .bss+0x778] 
    /*00006dac*/ MOV         R1, #0 
    VI_MKP_CapDevCtxInit_x6db0:
    /*00006db0*/ B           VI_MKP_CapDevCtxInit_x6db0  @ osal_memset [R_ARM_JUMP24: +0x0] 
FUNC_END VI_MKP_CapDevCtxInit


FUNC_BEGIN VI_MKP_CapDevCtxExit
    /*00006db4*/ BX          LR 
FUNC_END VI_MKP_CapDevCtxExit


FUNC_BEGIN VI_SetDevAttr
    /*00006db8*/ CMP         R0, #1 
    /*00006dbc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00006dc0*/ MOV         R4, R0 
    /*00006dc4*/ SUB         SP, SP, #16 
    /*00006dc8*/ MOV         R6, R1 
    /*00006dcc*/ BLS         VI_SetDevAttr_x6de8
    /*00006dd0*/ BL          0x0000000000006D20 
    /*00006dd4*/ SUBS        R5, R0, #0 
    /*00006dd8*/ BEQ         VI_SetDevAttr_x6de8
    VI_SetDevAttr_x6ddc:
    /*00006ddc*/ MOV         R0, R5 
    /*00006de0*/ ADD         SP, SP, #16 
    /*00006de4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SetDevAttr_x6de8:
    /*00006de8*/ MOV         R0, R6 
    /*00006dec*/ BL          0x0000000000006DEC          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00006df0*/ SUBS        R5, R0, #0 
    /*00006df4*/ BNE         VI_SetDevAttr_x6ddc
    /*00006df8*/ MOV         R1, R6 
    /*00006dfc*/ MOV         R0, R4 
    /*00006e00*/ BL          0x0000000000006E00          @ VI_DRV_CheckDevAttr [R_ARM_CALL: .text+0x32764] 
    /*00006e04*/ SUBS        R5, R0, #0 
    /*00006e08*/ BNE         VI_SetDevAttr_x6ddc
    /*00006e0c*/ MOVW        R7, #0                      @ g_astDevSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x768] 
    /*00006e10*/ LSL         R8, R4, #3 
    /*00006e14*/ MOVT        R7, #0                      @ g_astDevSynchCtx [R_ARM_MOVT_ABS: .bss+0x768] 
    /*00006e18*/ ADD         R9, R8, R7 
    /*00006e1c*/ MOV         R0, R9 
    /*00006e20*/ BL          0x0000000000006E20          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00006e24*/ CMP         R0, #0 
    /*00006e28*/ BNE         VI_SetDevAttr_x6e8c
    /*00006e2c*/ ADD         R8, R8, #4 
    /*00006e30*/ MOVW        SL, #0                      @ g_astDevMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x778] 
    /*00006e34*/ ADD         R7, R8, R7 
    /*00006e38*/ MOV         R8, #36                     @ 0x24 
    /*00006e3c*/ MUL         R8, R8, R4 
    /*00006e40*/ ADD         R1, SP, #12 
    /*00006e44*/ MOVT        SL, #0                      @ g_astDevMkpCtx [R_ARM_MOVT_ABS: .bss+0x778] 
    /*00006e48*/ MOV         R0, R7 
    /*00006e4c*/ BL          0x0000000000006E4C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006e50*/ ADD         R3, SL, R8 
    /*00006e54*/ LDR         R3, [R3, #4] 
    /*00006e58*/ CMP         R3, #0 
    /*00006e5c*/ BNE         VI_SetDevAttr_x6e98
    /*00006e60*/ MOV         R1, R6 
    /*00006e64*/ MOV         R0, R4 
    /*00006e68*/ BL          0x0000000000006E68          @ VI_DRV_SetDevAttr [R_ARM_CALL: .text+0x31e60] 
    /*00006e6c*/ MOV         R0, R7 
    /*00006e70*/ ADD         R1, SP, #12 
    /*00006e74*/ MOV         R3, #1 
    /*00006e78*/ STR         R3, [SL, R8] 
    /*00006e7c*/ BL          0x0000000000006E7C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006e80*/ MOV         R0, R9 
    /*00006e84*/ BL          0x0000000000006E84          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006e88*/ B           VI_SetDevAttr_x6ddc
    VI_SetDevAttr_x6e8c:
    /*00006e8c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00006e90*/ MOVT        R5, #65535                  @ 0xffff 
    /*00006e94*/ B           VI_SetDevAttr_x6ddc
    VI_SetDevAttr_x6e98:
    /*00006e98*/ ADD         R1, SP, #12 
    /*00006e9c*/ MOV         R0, R7 
    /*00006ea0*/ BL          0x0000000000006EA0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006ea4*/ MOV         R0, R9 
    /*00006ea8*/ BL          0x0000000000006EA8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006eac*/ MOV         R3, #116                    @ 0x74 
    /*00006eb0*/ STR         R4, [SP, #4] 
    /*00006eb4*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16d8] 
    /*00006eb8*/ STR         R3, [SP] 
    /*00006ebc*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16d8] 
    /*00006ec0*/ LDR         R3, [PC, #20]               @ 0x0000000000006edc 
    /*00006ec4*/ MOV         R1, #16 
    /*00006ec8*/ MOV         R0, #3 
    /*00006ecc*/ MOVW        R5, #32833                  @ 0x8041 
    /*00006ed0*/ BL          0x0000000000006ED0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006ed4*/ MOVT        R5, #40976                  @ 0xa010 
    /*00006ed8*/ B           VI_SetDevAttr_x6ddc
    /*00006edc*/ ANDEQ       R0, R0, R8, ROR #6 
FUNC_END VI_SetDevAttr


FUNC_BEGIN VI_GetDevAttr
    /*00006ee0*/ CMP         R0, #1 
    /*00006ee4*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00006ee8*/ MOV         R4, R0 
    /*00006eec*/ SUB         SP, SP, #12 
    /*00006ef0*/ MOV         R6, R1 
    /*00006ef4*/ BLS         VI_GetDevAttr_x6f10
    /*00006ef8*/ BL          0x0000000000006D20 
    /*00006efc*/ SUBS        R5, R0, #0 
    /*00006f00*/ BEQ         VI_GetDevAttr_x6f10
    VI_GetDevAttr_x6f04:
    /*00006f04*/ MOV         R0, R5 
    /*00006f08*/ ADD         SP, SP, #12 
    /*00006f0c*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetDevAttr_x6f10:
    /*00006f10*/ MOV         R0, R6 
    /*00006f14*/ BL          0x0000000000006F14          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00006f18*/ SUBS        R5, R0, #0 
    /*00006f1c*/ BNE         VI_GetDevAttr_x6f04
    /*00006f20*/ MOVW        R0, #0                      @ g_astDevSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x768] 
    /*00006f24*/ MOVT        R0, #0                      @ g_astDevSynchCtx [R_ARM_MOVT_ABS: .bss+0x768] 
    /*00006f28*/ ADD         R7, R0, R4, LSL #3 
    /*00006f2c*/ MOV         R0, R7 
    /*00006f30*/ BL          0x0000000000006F30          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00006f34*/ CMP         R0, #0 
    /*00006f38*/ BNE         VI_GetDevAttr_x6f78
    /*00006f3c*/ MOV         R3, #36                     @ 0x24 
    /*00006f40*/ MOVW        R2, #0                      @ g_astDevMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x778] 
    /*00006f44*/ MUL         R3, R3, R4 
    /*00006f48*/ MOVT        R2, #0                      @ g_astDevMkpCtx [R_ARM_MOVT_ABS: .bss+0x778] 
    /*00006f4c*/ LDR         R3, [R2, R3] 
    /*00006f50*/ CMP         R3, #0 
    /*00006f54*/ BEQ         VI_GetDevAttr_x6f84
    /*00006f58*/ MOV         R1, R6 
    /*00006f5c*/ MOV         R0, R4 
    /*00006f60*/ BL          0x0000000000006F60          @ VI_DRV_GetDevAttr [R_ARM_CALL: .text+0x31c8c] 
    /*00006f64*/ MOV         R0, R7 
    /*00006f68*/ BL          0x0000000000006F68          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006f6c*/ MOV         R0, R5 
    /*00006f70*/ ADD         SP, SP, #12 
    /*00006f74*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetDevAttr_x6f78:
    /*00006f78*/ MOV         R5, #65024                  @ 0xfe00 
    /*00006f7c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00006f80*/ B           VI_GetDevAttr_x6f04
    VI_GetDevAttr_x6f84:
    /*00006f84*/ MOV         R0, R7 
    /*00006f88*/ MOVW        R5, #32775                  @ 0x8007 
    /*00006f8c*/ BL          0x0000000000006F8C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006f90*/ MOV         R3, #145                    @ 0x91 
    /*00006f94*/ STR         R4, [SP, #4] 
    /*00006f98*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1730] 
    /*00006f9c*/ STR         R3, [SP] 
    /*00006fa0*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1730] 
    /*00006fa4*/ LDR         R3, [PC, #16]               @ 0x0000000000006fbc 
    /*00006fa8*/ MOV         R1, #16 
    /*00006fac*/ MOV         R0, #3 
    /*00006fb0*/ MOVT        R5, #40976                  @ 0xa010 
    /*00006fb4*/ BL          0x0000000000006FB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006fb8*/ B           VI_GetDevAttr_x6f04
    /*00006fbc*/ ANDEQ       R0, R0, R8, ROR R3 
FUNC_END VI_GetDevAttr


FUNC_BEGIN VI_EnableDev
    /*00006fc0*/ CMP         R0, #1 
    /*00006fc4*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00006fc8*/ MOV         R6, R0 
    /*00006fcc*/ SUB         SP, SP, #16 
    /*00006fd0*/ BLS         VI_EnableDev_x6fec
    /*00006fd4*/ BL          0x0000000000006D20 
    /*00006fd8*/ SUBS        R7, R0, #0 
    /*00006fdc*/ BEQ         VI_EnableDev_x6fec
    VI_EnableDev_x6fe0:
    /*00006fe0*/ MOV         R0, R7 
    /*00006fe4*/ ADD         SP, SP, #16 
    /*00006fe8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_EnableDev_x6fec:
    /*00006fec*/ MOVW        R4, #0                      @ g_astDevSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x768] 
    /*00006ff0*/ LSL         R5, R6, #3 
    /*00006ff4*/ MOVT        R4, #0                      @ g_astDevSynchCtx [R_ARM_MOVT_ABS: .bss+0x768] 
    /*00006ff8*/ ADD         R8, R5, R4 
    /*00006ffc*/ MOV         R0, R8 
    /*00007000*/ BL          0x0000000000007000          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007004*/ SUBS        R7, R0, #0 
    /*00007008*/ BNE         VI_EnableDev_x70c0
    /*0000700c*/ ADD         R5, R5, #4 
    /*00007010*/ ADD         R1, SP, #12 
    /*00007014*/ ADD         R4, R5, R4 
    /*00007018*/ MOV         R0, R4 
    /*0000701c*/ BL          0x000000000000701C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007020*/ MOV         R3, #36                     @ 0x24 
    /*00007024*/ MUL         R3, R3, R6 
    /*00007028*/ MOVW        R2, #0                      @ g_astDevMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x778] 
    /*0000702c*/ MOVT        R2, #0                      @ g_astDevMkpCtx [R_ARM_MOVT_ABS: .bss+0x778] 
    /*00007030*/ ADD         R5, R2, R3 
    /*00007034*/ LDR         R1, [R5, #4] 
    /*00007038*/ CMP         R1, #0 
    /*0000703c*/ BNE         VI_EnableDev_x7078
    /*00007040*/ LDR         R3, [R2, R3] 
    /*00007044*/ CMP         R3, #0 
    /*00007048*/ BNE         VI_EnableDev_x7098
    /*0000704c*/ MOV         R3, #179                    @ 0xb3 
    /*00007050*/ STR         R6, [SP, #4] 
    /*00007054*/ STR         R3, [SP] 
    /*00007058*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x176c] 
    /*0000705c*/ LDR         R3, [PC, #104]              @ 0x00000000000070cc 
    /*00007060*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x176c] 
    /*00007064*/ MOV         R1, #16 
    /*00007068*/ MOV         R0, #3 
    /*0000706c*/ BL          0x000000000000706C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007070*/ MOVW        R7, #32775                  @ 0x8007 
    /*00007074*/ MOVT        R7, #40976                  @ 0xa010 
    VI_EnableDev_x7078:
    /*00007078*/ ADD         R1, SP, #12 
    /*0000707c*/ MOV         R0, R4 
    /*00007080*/ BL          0x0000000000007080          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007084*/ MOV         R0, R8 
    /*00007088*/ BL          0x0000000000007088          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000708c*/ MOV         R0, R7 
    /*00007090*/ ADD         SP, SP, #16 
    /*00007094*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_EnableDev_x7098:
    /*00007098*/ MOV         R0, R6 
    /*0000709c*/ BL          0x000000000000709C          @ VI_DRV_CheckChipId [R_ARM_CALL: .text+0x31c04] 
    /*000070a0*/ SUBS        R7, R0, #0 
    /*000070a4*/ BNE         VI_EnableDev_x7078
    /*000070a8*/ MOV         R0, R6 
    /*000070ac*/ MOV         R1, #1 
    /*000070b0*/ BL          0x00000000000070B0          @ VI_DRV_SetDevEn [R_ARM_CALL: .text+0x31bdc] 
    /*000070b4*/ MOV         R3, #1 
    /*000070b8*/ STR         R3, [R5, #4] 
    /*000070bc*/ B           VI_EnableDev_x7078
    VI_EnableDev_x70c0:
    /*000070c0*/ MOV         R7, #65024                  @ 0xfe00 
    /*000070c4*/ MOVT        R7, #65535                  @ 0xffff 
    /*000070c8*/ B           VI_EnableDev_x6fe0
    /*000070cc*/ ANDEQ       R0, R0, R8, LSL #7 
FUNC_END VI_EnableDev


FUNC_BEGIN VI_DisableDev
    /*000070d0*/ CMP         R0, #1 
    /*000070d4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000070d8*/ MOV         R6, R0 
    /*000070dc*/ SUB         SP, SP, #40                 @ 0x28 
    /*000070e0*/ BLS         VI_DisableDev_x70f8
    /*000070e4*/ BL          0x0000000000006D20 
    /*000070e8*/ CMP         R0, #0 
    /*000070ec*/ BEQ         VI_DisableDev_x70f8
    VI_DisableDev_x70f0:
    /*000070f0*/ ADD         SP, SP, #40                 @ 0x28 
    /*000070f4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_DisableDev_x70f8:
    /*000070f8*/ MOVW        R4, #0                      @ g_astDevSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x768] 
    /*000070fc*/ LSL         R7, R6, #3 
    /*00007100*/ MOVT        R4, #0                      @ g_astDevSynchCtx [R_ARM_MOVT_ABS: .bss+0x768] 
    /*00007104*/ ADD         SL, R7, R4 
    /*00007108*/ MOV         R0, SL 
    /*0000710c*/ BL          0x000000000000710C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007110*/ SUBS        R8, R0, #0 
    /*00007114*/ BNE         VI_DisableDev_x7288
    /*00007118*/ ADD         R7, R7, #4 
    /*0000711c*/ MOVW        R9, #0                      @ g_astDevMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x778] 
    /*00007120*/ ADD         R7, R7, R4 
    /*00007124*/ ADD         R1, SP, #16 
    /*00007128*/ MOVT        R9, #0                      @ g_astDevMkpCtx [R_ARM_MOVT_ABS: .bss+0x778] 
    /*0000712c*/ MOV         R0, R7 
    /*00007130*/ BL          0x0000000000007130          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007134*/ MOV         R3, #36                     @ 0x24 
    /*00007138*/ MLA         R3, R3, R6, R9 
    /*0000713c*/ LDR         R4, [R3, #4] 
    /*00007140*/ CMP         R4, #0 
    /*00007144*/ BEQ         VI_DisableDev_x71e4
    /*00007148*/ ADD         R1, SP, #20 
    /*0000714c*/ MOV         R0, R6 
    /*00007150*/ BL          0x0000000000007150          @ VI_DRV_GetDevBindPipe [R_ARM_CALL: .text+0x31908] 
    /*00007154*/ LDR         R3, [SP, #20] 
    /*00007158*/ CMP         R3, #0 
    /*0000715c*/ ADDNE       R5, SP, #24 
    /*00007160*/ MOVNE       R4, R8 
    /*00007164*/ BNE         VI_DisableDev_x717c
    /*00007168*/ B           VI_DisableDev_x7204
    VI_DisableDev_x716c:
    /*0000716c*/ LDR         R3, [SP, #20] 
    /*00007170*/ ADD         R4, R4, #1 
    /*00007174*/ CMP         R3, R4 
    /*00007178*/ BLS         VI_DisableDev_x7204
    VI_DisableDev_x717c:
    /*0000717c*/ LDR         R0, [R5], #4 
    /*00007180*/ BL          0x0000000000007180          @ Vi_IsPipeExisted [R_ARM_CALL: .text+0x63ec] 
    /*00007184*/ CMP         R0, #0 
    /*00007188*/ BEQ         VI_DisableDev_x716c
    /*0000718c*/ ADD         R1, SP, #16 
    /*00007190*/ MOV         R0, R7 
    /*00007194*/ BL          0x0000000000007194          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007198*/ MOV         R0, SL 
    /*0000719c*/ BL          0x000000000000719C          @ osal_up [R_ARM_CALL: +0x0] 
    /*000071a0*/ ADD         R3, SP, #40                 @ 0x28 
    /*000071a4*/ ADD         R4, R3, R4, LSL #2 
    /*000071a8*/ STR         R6, [SP, #8] 
    /*000071ac*/ MOV         R3, #238                    @ 0xee 
    /*000071b0*/ MOV         R1, #16 
    /*000071b4*/ LDR         R0, [R4, #-16] 
    /*000071b8*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x17bc] 
    /*000071bc*/ STR         R3, [SP] 
    /*000071c0*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x17bc] 
    /*000071c4*/ LDR         R3, [PC, #200]              @ 0x0000000000007294 
    /*000071c8*/ STR         R0, [SP, #4] 
    /*000071cc*/ MOV         R0, #3 
    /*000071d0*/ BL          0x00000000000071D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000071d4*/ MOVW        R0, #32772                  @ 0x8004 
    /*000071d8*/ MOVT        R0, #40976                  @ 0xa010 
    /*000071dc*/ ADD         SP, SP, #40                 @ 0x28 
    /*000071e0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_DisableDev_x71e4:
    /*000071e4*/ ADD         R1, SP, #16 
    /*000071e8*/ MOV         R0, R7 
    /*000071ec*/ BL          0x00000000000071EC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000071f0*/ MOV         R0, SL 
    /*000071f4*/ BL          0x00000000000071F4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000071f8*/ MOV         R0, R4 
    /*000071fc*/ ADD         SP, SP, #40                 @ 0x28 
    /*00007200*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_DisableDev_x7204:
    /*00007204*/ MOV         R0, R6 
    /*00007208*/ BL          0x0000000000007208          @ VI_DRV_DisableDev [R_ARM_CALL: .text+0x31b48] 
    /*0000720c*/ LDR         R3, [SP, #20] 
    /*00007210*/ CMP         R3, #0 
    /*00007214*/ ADDNE       R4, SP, #24 
    /*00007218*/ BEQ         VI_DisableDev_x7248
    VI_DisableDev_x721c:
    /*0000721c*/ MOV         R5, R4 
    /*00007220*/ MVN         R1, #0 
    /*00007224*/ LDR         R0, [R4], #4 
    /*00007228*/ ADD         R8, R8, #1 
    /*0000722c*/ BL          0x000000000000722C          @ VI_DRV_SetPipeBindDevId [R_ARM_CALL: .text+0x317d0] 
    /*00007230*/ LDR         R0, [R5] 
    /*00007234*/ MOV         R1, #15 
    /*00007238*/ BL          0x0000000000007238          @ VI_HAL_SetIspSel [R_ARM_CALL: .text+0x35ac0] 
    /*0000723c*/ LDR         R3, [SP, #20] 
    /*00007240*/ CMP         R3, R8 
    /*00007244*/ BHI         VI_DisableDev_x721c
    VI_DisableDev_x7248:
    /*00007248*/ MOV         R3, #36                     @ 0x24 
    /*0000724c*/ MOV         R4, #0 
    /*00007250*/ MUL         R6, R3, R6 
    /*00007254*/ ADD         R1, SP, #16 
    /*00007258*/ MOV         R0, R7 
    /*0000725c*/ ADD         R3, R9, R6 
    /*00007260*/ STR         R4, [R3, #12] 
    /*00007264*/ STR         R4, [R3, #4] 
    /*00007268*/ STR         R4, [R3, #8] 
    /*0000726c*/ STR         R4, [R9, R6] 
    /*00007270*/ BL          0x0000000000007270          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007274*/ MOV         R0, SL 
    /*00007278*/ BL          0x0000000000007278          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000727c*/ MOV         R0, R4 
    /*00007280*/ ADD         SP, SP, #40                 @ 0x28 
    /*00007284*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_DisableDev_x7288:
    /*00007288*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000728c*/ MOVT        R0, #65535                  @ 0xffff 
    /*00007290*/ B           VI_DisableDev_x70f0
    /*00007294*/ MULEQ       R0, R8, R3 
FUNC_END VI_DisableDev


FUNC_BEGIN VI_CheckDevBindPipe
    /*00007298*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000729c*/ SUB         SP, SP, #8 
    /*000072a0*/ MOV         R7, R1 
    /*000072a4*/ BL          0x00000000000072A4          @ VI_DRV_CheckDevBindPipe [R_ARM_CALL: .text+0x31f28] 
    /*000072a8*/ SUBS        R9, R0, #0 
    /*000072ac*/ BNE         VI_CheckDevBindPipe_x7328
    /*000072b0*/ LDR         R3, [R7] 
    /*000072b4*/ CMP         R3, #0 
    /*000072b8*/ BEQ         VI_CheckDevBindPipe_x7328
    /*000072bc*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000072c0*/ MOVW        R8, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000072c4*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000072c8*/ MOVT        R8, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000072cc*/ ADD         SL, R7, #4 
    /*000072d0*/ MOV         R4, R9 
    /*000072d4*/ MOV         R6, #176                    @ 0xb0 
    /*000072d8*/ B           VI_CheckDevBindPipe_x7308
    VI_CheckDevBindPipe_x72dc:
    /*000072dc*/ LDR         R3, [SL], #4 
    /*000072e0*/ MLA         R0, R6, R3, R5 
    /*000072e4*/ LDR         R2, [R8, R3, LSL #2] 
    /*000072e8*/ CMP         R2, #0 
    /*000072ec*/ ADD         R0, R0, #100                @ 0x64 
    /*000072f0*/ BNE         VI_CheckDevBindPipe_x7334
    /*000072f4*/ BL          0x00000000000072F4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000072f8*/ LDR         R3, [R7] 
    /*000072fc*/ ADD         R4, R4, #1 
    /*00007300*/ CMP         R3, R4 
    /*00007304*/ BLS         VI_CheckDevBindPipe_x7328
    VI_CheckDevBindPipe_x7308:
    /*00007308*/ LDR         R0, [SL] 
    /*0000730c*/ MLA         R0, R6, R0, R5 
    /*00007310*/ ADD         R0, R0, #100                @ 0x64 
    /*00007314*/ BL          0x0000000000007314          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007318*/ CMP         R0, #0 
    /*0000731c*/ BEQ         VI_CheckDevBindPipe_x72dc
    /*00007320*/ MOV         R9, #65024                  @ 0xfe00 
    /*00007324*/ MOVT        R9, #65535                  @ 0xffff 
    VI_CheckDevBindPipe_x7328:
    /*00007328*/ MOV         R0, R9 
    /*0000732c*/ ADD         SP, SP, #8 
    /*00007330*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_CheckDevBindPipe_x7334:
    /*00007334*/ MLA         R0, R6, R3, R5 
    /*00007338*/ ADD         R4, R7, R4, LSL #2 
    /*0000733c*/ MOVW        R9, #32772                  @ 0x8004 
    /*00007340*/ MOVT        R9, #40976                  @ 0xa010 
    /*00007344*/ ADD         R0, R0, #100                @ 0x64 
    /*00007348*/ BL          0x0000000000007348          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000734c*/ LDR         IP, [R4, #4] 
    /*00007350*/ MOVW        R3, #282                    @ 0x11a 
    /*00007354*/ MOV         R1, #16 
    /*00007358*/ STR         R3, [SP] 
    /*0000735c*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1808] 
    /*00007360*/ LDR         R3, [PC, #24]               @ 0x0000000000007380 
    /*00007364*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1808] 
    /*00007368*/ STR         IP, [SP, #4] 
    /*0000736c*/ MOV         R0, #3 
    /*00007370*/ BL          0x0000000000007370          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007374*/ MOV         R0, R9 
    /*00007378*/ ADD         SP, SP, #8 
    /*0000737c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*00007380*/ ANDEQ       R0, R0, R8, LSR #7 
FUNC_END VI_CheckDevBindPipe


FUNC_BEGIN VI_SetDevBindPipe
    /*00007384*/ CMP         R0, #1 
    /*00007388*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000738c*/ MOV         R4, R0 
    /*00007390*/ SUB         SP, SP, #16 
    /*00007394*/ MOV         R6, R1 
    /*00007398*/ BLS         VI_SetDevBindPipe_x73b4
    /*0000739c*/ BL          0x0000000000006D20 
    /*000073a0*/ SUBS        R5, R0, #0 
    /*000073a4*/ BEQ         VI_SetDevBindPipe_x73b4
    VI_SetDevBindPipe_x73a8:
    /*000073a8*/ MOV         R0, R5 
    /*000073ac*/ ADD         SP, SP, #16 
    /*000073b0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SetDevBindPipe_x73b4:
    /*000073b4*/ MOV         R0, R6 
    /*000073b8*/ BL          0x00000000000073B8          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*000073bc*/ SUBS        R5, R0, #0 
    /*000073c0*/ BNE         VI_SetDevBindPipe_x73a8
    /*000073c4*/ MOVW        R7, #0                      @ g_astDevSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x768] 
    /*000073c8*/ LSL         R8, R4, #3 
    /*000073cc*/ MOVT        R7, #0                      @ g_astDevSynchCtx [R_ARM_MOVT_ABS: .bss+0x768] 
    /*000073d0*/ ADD         R9, R8, R7 
    /*000073d4*/ MOV         R0, R9 
    /*000073d8*/ BL          0x00000000000073D8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000073dc*/ CMP         R0, #0 
    /*000073e0*/ BNE         VI_SetDevBindPipe_x74f0
    /*000073e4*/ MOV         R1, R6 
    /*000073e8*/ MOV         R0, R4 
    /*000073ec*/ BL          0x00000000000073EC          @ VI_CheckDevBindPipe [R_ARM_CALL: .text+0x7298] 
    /*000073f0*/ SUBS        R5, R0, #0 
    /*000073f4*/ BNE         VI_SetDevBindPipe_x749c
    /*000073f8*/ MOVW        R3, #0                      @ g_astDevMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x778] 
    /*000073fc*/ MOVT        R3, #0                      @ g_astDevMkpCtx [R_ARM_MOVT_ABS: .bss+0x778] 
    /*00007400*/ MOV         SL, #36                     @ 0x24 
    /*00007404*/ MLA         SL, SL, R4, R3 
    /*00007408*/ LDR         R3, [SL, #4] 
    /*0000740c*/ CMP         R3, #0 
    /*00007410*/ BEQ         VI_SetDevBindPipe_x74c0
    /*00007414*/ LDR         R3, [SL, #12] 
    /*00007418*/ CMP         R3, #0 
    /*0000741c*/ BNE         VI_SetDevBindPipe_x746c
    /*00007420*/ ADD         R8, R8, #4 
    /*00007424*/ ADD         R1, SP, #12 
    /*00007428*/ ADD         R7, R8, R7 
    /*0000742c*/ MOV         R0, R7 
    /*00007430*/ BL          0x0000000000007430          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007434*/ MOV         R1, R6 
    /*00007438*/ MOV         R0, R4 
    /*0000743c*/ BL          0x000000000000743C          @ VI_DRV_SetDevBindPipe [R_ARM_CALL: .text+0x31854] 
    /*00007440*/ MOV         R3, #1 
    /*00007444*/ ADD         R1, SP, #12 
    /*00007448*/ STR         R3, [SL, #12] 
    /*0000744c*/ MOV         R5, R0 
    /*00007450*/ MOV         R0, R7 
    /*00007454*/ BL          0x0000000000007454          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_SetDevBindPipe_x7458:
    /*00007458*/ MOV         R0, R9 
    /*0000745c*/ BL          0x000000000000745C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007460*/ MOV         R0, R5 
    /*00007464*/ ADD         SP, SP, #16 
    /*00007468*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SetDevBindPipe_x746c:
    /*0000746c*/ MOVW        R3, #323                    @ 0x143 
    /*00007470*/ STR         R4, [SP, #4] 
    /*00007474*/ STR         R3, [SP] 
    /*00007478*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18e4] 
    /*0000747c*/ LDR         R3, [PC, #120]              @ 0x00000000000074fc 
    /*00007480*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18e4] 
    /*00007484*/ MOV         R1, #16 
    /*00007488*/ MOV         R0, #3 
    /*0000748c*/ MOVW        R5, #32840                  @ 0x8048 
    /*00007490*/ BL          0x0000000000007490          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007494*/ MOVT        R5, #40976                  @ 0xa010 
    /*00007498*/ B           VI_SetDevBindPipe_x7458
    VI_SetDevBindPipe_x749c:
    /*0000749c*/ MOVW        R3, #310                    @ 0x136 
    /*000074a0*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1840] 
    /*000074a4*/ STR         R3, [SP] 
    /*000074a8*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1840] 
    /*000074ac*/ LDR         R3, [PC, #72]               @ 0x00000000000074fc 
    /*000074b0*/ MOV         R1, #16 
    /*000074b4*/ MOV         R0, #3 
    /*000074b8*/ BL          0x00000000000074B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000074bc*/ B           VI_SetDevBindPipe_x7458
    VI_SetDevBindPipe_x74c0:
    /*000074c0*/ MOV         R3, #316                    @ 0x13c 
    /*000074c4*/ STR         R4, [SP, #4] 
    /*000074c8*/ STR         R3, [SP] 
    /*000074cc*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1898] 
    /*000074d0*/ LDR         R3, [PC, #36]               @ 0x00000000000074fc 
    /*000074d4*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1898] 
    /*000074d8*/ MOV         R1, #16 
    /*000074dc*/ MOV         R0, #3 
    /*000074e0*/ MOVW        R5, #32832                  @ 0x8040 
    /*000074e4*/ BL          0x00000000000074E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000074e8*/ MOVT        R5, #40976                  @ 0xa010 
    /*000074ec*/ B           VI_SetDevBindPipe_x7458
    VI_SetDevBindPipe_x74f0:
    /*000074f0*/ MOV         R5, #65024                  @ 0xfe00 
    /*000074f4*/ MOVT        R5, #65535                  @ 0xffff 
    /*000074f8*/ B           VI_SetDevBindPipe_x73a8
    /*000074fc*/ @           <UNDEFINED> instruction: 0x000003bc 
FUNC_END VI_SetDevBindPipe


FUNC_BEGIN VI_GetDevBindPipe
    /*00007500*/ CMP         R0, #1 
    /*00007504*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00007508*/ MOV         R4, R0 
    /*0000750c*/ SUB         SP, SP, #16 
    /*00007510*/ MOV         R6, R1 
    /*00007514*/ BLS         VI_GetDevBindPipe_x7530
    /*00007518*/ BL          0x0000000000006D20 
    /*0000751c*/ SUBS        R5, R0, #0 
    /*00007520*/ BEQ         VI_GetDevBindPipe_x7530
    VI_GetDevBindPipe_x7524:
    /*00007524*/ MOV         R0, R5 
    /*00007528*/ ADD         SP, SP, #16 
    /*0000752c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetDevBindPipe_x7530:
    /*00007530*/ MOV         R0, R6 
    /*00007534*/ BL          0x0000000000007534          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00007538*/ SUBS        R5, R0, #0 
    /*0000753c*/ BNE         VI_GetDevBindPipe_x7524
    /*00007540*/ MOVW        R5, #0                      @ g_astDevSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x768] 
    /*00007544*/ LSL         R7, R4, #3 
    /*00007548*/ MOVT        R5, #0                      @ g_astDevSynchCtx [R_ARM_MOVT_ABS: .bss+0x768] 
    /*0000754c*/ ADD         R8, R7, R5 
    /*00007550*/ MOV         R0, R8 
    /*00007554*/ BL          0x0000000000007554          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007558*/ CMP         R0, #0 
    /*0000755c*/ BNE         VI_GetDevBindPipe_x75cc
    /*00007560*/ ADD         R7, R7, #4 
    /*00007564*/ ADD         R1, SP, #12 
    /*00007568*/ ADD         R7, R7, R5 
    /*0000756c*/ MOV         R0, R7 
    /*00007570*/ BL          0x0000000000007570          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007574*/ MOVW        R2, #0                      @ g_astDevMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x778] 
    /*00007578*/ MOVT        R2, #0                      @ g_astDevMkpCtx [R_ARM_MOVT_ABS: .bss+0x778] 
    /*0000757c*/ MOV         R3, #36                     @ 0x24 
    /*00007580*/ MLA         R3, R3, R4, R2 
    /*00007584*/ LDR         R2, [R3, #4] 
    /*00007588*/ CMP         R2, #0 
    /*0000758c*/ BEQ         VI_GetDevBindPipe_x761c
    /*00007590*/ LDR         R3, [R3, #12] 
    /*00007594*/ CMP         R3, #0 
    /*00007598*/ BEQ         VI_GetDevBindPipe_x75d8
    /*0000759c*/ MOV         R1, R6 
    /*000075a0*/ MOV         R0, R4 
    /*000075a4*/ BL          0x00000000000075A4          @ VI_DRV_GetDevBindPipe [R_ARM_CALL: .text+0x31908] 
    /*000075a8*/ ADD         R1, SP, #12 
    /*000075ac*/ MOV         R5, R0 
    /*000075b0*/ MOV         R0, R7 
    /*000075b4*/ BL          0x00000000000075B4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000075b8*/ MOV         R0, R8 
    /*000075bc*/ BL          0x00000000000075BC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000075c0*/ MOV         R0, R5 
    /*000075c4*/ ADD         SP, SP, #16 
    /*000075c8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetDevBindPipe_x75cc:
    /*000075cc*/ MOV         R5, #65024                  @ 0xfe00 
    /*000075d0*/ MOVT        R5, #65535                  @ 0xffff 
    /*000075d4*/ B           VI_GetDevBindPipe_x7524
    VI_GetDevBindPipe_x75d8:
    /*000075d8*/ ADD         R1, SP, #12 
    /*000075dc*/ MOV         R0, R7 
    /*000075e0*/ BL          0x00000000000075E0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000075e4*/ MOV         R0, R8 
    /*000075e8*/ BL          0x00000000000075E8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000075ec*/ MOVW        R3, #370                    @ 0x172 
    /*000075f0*/ STR         R4, [SP, #4] 
    /*000075f4*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1984] 
    /*000075f8*/ STR         R3, [SP] 
    /*000075fc*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1984] 
    /*00007600*/ LDR         R3, [PC, #88]               @ 0x0000000000007660 
    /*00007604*/ MOV         R1, #16 
    /*00007608*/ MOV         R0, #3 
    /*0000760c*/ MOVW        R5, #32839                  @ 0x8047 
    /*00007610*/ BL          0x0000000000007610          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007614*/ MOVT        R5, #40976                  @ 0xa010 
    /*00007618*/ B           VI_GetDevBindPipe_x7524
    VI_GetDevBindPipe_x761c:
    /*0000761c*/ ADD         R1, SP, #12 
    /*00007620*/ MOV         R0, R7 
    /*00007624*/ BL          0x0000000000007624          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007628*/ MOV         R0, R8 
    /*0000762c*/ BL          0x000000000000762C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007630*/ MOVW        R3, #362                    @ 0x16a 
    /*00007634*/ STR         R4, [SP, #4] 
    /*00007638*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1934] 
    /*0000763c*/ STR         R3, [SP] 
    /*00007640*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1934] 
    /*00007644*/ LDR         R3, [PC, #20]               @ 0x0000000000007660 
    /*00007648*/ MOV         R1, #16 
    /*0000764c*/ MOV         R0, #3 
    /*00007650*/ MOVW        R5, #32832                  @ 0x8040 
    /*00007654*/ BL          0x0000000000007654          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007658*/ MOVT        R5, #40976                  @ 0xa010 
    /*0000765c*/ B           VI_GetDevBindPipe_x7524
    /*00007660*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VI_GetDevBindPipe


FUNC_BEGIN VI_SetMipiBindDev
    /*00007664*/ MOV         R0, #0 
    /*00007668*/ BX          LR 
FUNC_END VI_SetMipiBindDev


FUNC_BEGIN VI_GetMipiBindDev
    /*0000766c*/ MOV         R0, #0 
    /*00007670*/ BX          LR 
FUNC_END VI_GetMipiBindDev


FUNC_BEGIN VI_WaitStopWorkingCallBack
    /*00007674*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00007678*/ MOV         R5, #176                    @ 0xb0 
    /*0000767c*/ LDR         R6, [R0] 
    /*00007680*/ MOVW        R4, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00007684*/ MOVT        R4, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00007688*/ SUB         SP, SP, #40                 @ 0x28 
    /*0000768c*/ MUL         R5, R5, R6 
    /*00007690*/ ADD         R0, R5, #28 
    /*00007694*/ ADD         R0, R4, R0 
    /*00007698*/ BL          0x0000000000007698          @ osal_atomic_read [R_ARM_CALL: +0x0] 
    /*0000769c*/ MOV         R8, R0 
    /*000076a0*/ ADD         R0, R5, #32 
    /*000076a4*/ ADD         R0, R4, R0 
    /*000076a8*/ BL          0x00000000000076A8          @ osal_atomic_read [R_ARM_CALL: +0x0] 
    /*000076ac*/ MOV         R7, R0 
    /*000076b0*/ ADD         R0, R5, #36                 @ 0x24 
    /*000076b4*/ ADD         R0, R4, R0 
    /*000076b8*/ ADD         R4, R4, R5 
    /*000076bc*/ BL          0x00000000000076BC          @ osal_atomic_read [R_ARM_CALL: +0x0] 
    /*000076c0*/ LDR         IP, [R4, #8] 
    /*000076c4*/ LDR         R1, [R4, #12] 
    /*000076c8*/ CMP         IP, #0 
    /*000076cc*/ LDR         LR, [R4, #16] 
    /*000076d0*/ LDR         R2, [R4, #20] 
    /*000076d4*/ BNE         VI_WaitStopWorkingCallBack_x76e0
    /*000076d8*/ CMP         R1, #0 
    /*000076dc*/ BEQ         VI_WaitStopWorkingCallBack_x772c
    VI_WaitStopWorkingCallBack_x76e0:
    /*000076e0*/ STR         R0, [SP, #32] 
    /*000076e4*/ MOV         R4, #109                    @ 0x6d 
    /*000076e8*/ STR         R2, [SP, #20] 
    /*000076ec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x3e4] 
    /*000076f0*/ STR         R1, [SP, #12] 
    /*000076f4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x3e4] 
    /*000076f8*/ STR         R7, [SP, #28] 
    /*000076fc*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x19e4] 
    /*00007700*/ STR         R8, [SP, #24] 
    /*00007704*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x19e4] 
    /*00007708*/ STR         LR, [SP, #16] 
    /*0000770c*/ MOV         R1, #16 
    /*00007710*/ STR         IP, [SP, #8] 
    /*00007714*/ MOV         R0, #4 
    /*00007718*/ STM         SP, {R4, R6} 
    /*0000771c*/ BL          0x000000000000771C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007720*/ MOV         R0, #0 
    VI_WaitStopWorkingCallBack_x7724:
    /*00007724*/ ADD         SP, SP, #40                 @ 0x28 
    /*00007728*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_WaitStopWorkingCallBack_x772c:
    /*0000772c*/ CMP         LR, #0 
    /*00007730*/ BNE         VI_WaitStopWorkingCallBack_x76e0
    /*00007734*/ CMP         R8, #0 
    /*00007738*/ CMPEQ       R2, #0 
    /*0000773c*/ MOVEQ       R0, #1 
    /*00007740*/ BEQ         VI_WaitStopWorkingCallBack_x7724
    /*00007744*/ MOV         R1, LR 
    /*00007748*/ B           VI_WaitStopWorkingCallBack_x76e0
FUNC_END VI_WaitStopWorkingCallBack


FUNC_BEGIN VI_CheckPhyPipeId.part.0
    /*0000774c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00007750*/ SUB         SP, SP, #12 
    /*00007754*/ MOV         R3, #48                     @ 0x30 
    /*00007758*/ MOV         R1, #16 
    /*0000775c*/ STR         R0, [SP, #4] 
    /*00007760*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ad4] 
    /*00007764*/ STR         R3, [SP] 
    /*00007768*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ad4] 
    /*0000776c*/ LDR         R3, [PC, #20]               @ 0x0000000000007788 
    /*00007770*/ MOV         R0, #3 
    /*00007774*/ BL          0x0000000000007774          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007778*/ MOVW        R0, #32778                  @ 0x800a 
    /*0000777c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00007780*/ ADD         SP, SP, #12 
    /*00007784*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00007788*/ ANDEQ       R0, R0, R0, LSL #8 
FUNC_END VI_CheckPhyPipeId.part.0


FUNC_BEGIN VI_CheckPipeId.part.1
    /*0000778c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00007790*/ SUB         SP, SP, #12 
    /*00007794*/ MOV         R3, #59                     @ 0x3b 
    /*00007798*/ MOV         R1, #16 
    /*0000779c*/ STR         R0, [SP, #4] 
    /*000077a0*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b10] 
    /*000077a4*/ STR         R3, [SP] 
    /*000077a8*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b10] 
    /*000077ac*/ LDR         R3, [PC, #20]               @ 0x00000000000077c8 
    /*000077b0*/ MOV         R0, #3 
    /*000077b4*/ BL          0x00000000000077B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000077b8*/ MOVW        R0, #32778                  @ 0x800a 
    /*000077bc*/ MOVT        R0, #40976                  @ 0xa010 
    /*000077c0*/ ADD         SP, SP, #12 
    /*000077c4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000077c8*/ ANDEQ       R0, R0, R4, LSL R4 
FUNC_END VI_CheckPipeId.part.1


FUNC_BEGIN VI_CheckVirPipeId
    /*000077cc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000077d0*/ SUB         SP, SP, #12 
    /*000077d4*/ MOV         R3, #37                     @ 0x25 
    /*000077d8*/ MOV         R1, #16 
    /*000077dc*/ STR         R0, [SP, #4] 
    /*000077e0*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b48] 
    /*000077e4*/ STR         R3, [SP] 
    /*000077e8*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b48] 
    /*000077ec*/ LDR         R3, [PC, #20]               @ 0x0000000000007808 
    /*000077f0*/ MOV         R0, #3 
    /*000077f4*/ BL          0x00000000000077F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000077f8*/ MOVW        R0, #32778                  @ 0x800a 
    /*000077fc*/ MOVT        R0, #40976                  @ 0xa010 
    /*00007800*/ ADD         SP, SP, #12 
    /*00007804*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00007808*/ ANDEQ       R0, R0, R4, LSR #8 
FUNC_END VI_CheckVirPipeId


FUNC_BEGIN VI_CheckPhyPipeId
    /*0000780c*/ CMP         R0, #3 
    /*00007810*/ BHI         VI_CheckPhyPipeId_x781c
    /*00007814*/ MOV         R0, #0 
    /*00007818*/ BX          LR 
    VI_CheckPhyPipeId_x781c:
    /*0000781c*/ B           0x000000000000774C 
FUNC_END VI_CheckPhyPipeId


FUNC_BEGIN VI_CheckPipeId
    /*00007820*/ CMP         R0, #3 
    /*00007824*/ BHI         VI_CheckPipeId_x7830
    /*00007828*/ MOV         R0, #0 
    /*0000782c*/ BX          LR 
    VI_CheckPipeId_x7830:
    /*00007830*/ B           0x000000000000778C 
FUNC_END VI_CheckPipeId


FUNC_BEGIN VI_IsPipeCreated
    /*00007834*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00007838*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000783c*/ ADD         R2, R3, #16 
    VI_IsPipeCreated_x7840:
    /*00007840*/ LDR         R0, [R3], #4 
    /*00007844*/ CMP         R0, #0 
    /*00007848*/ BNE         VI_IsPipeCreated_x7858
    /*0000784c*/ CMP         R3, R2 
    /*00007850*/ BNE         VI_IsPipeCreated_x7840
    /*00007854*/ BX          LR 
    VI_IsPipeCreated_x7858:
    /*00007858*/ MOV         R0, #1 
    /*0000785c*/ BX          LR 
FUNC_END VI_IsPipeCreated


FUNC_BEGIN VI_GetPipeCmpParam
    /*00007860*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00007864*/ MOV         R4, R0 
    /*00007868*/ SUB         SP, SP, #12 
    /*0000786c*/ MOV         R0, R1 
    /*00007870*/ MOV         R6, R1 
    /*00007874*/ BL          0x0000000000007874          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00007878*/ SUBS        R5, R0, #0 
    /*0000787c*/ BNE         VI_GetPipeCmpParam_x78d8
    /*00007880*/ CMP         R4, #3 
    /*00007884*/ BHI         VI_GetPipeCmpParam_x78e4
    VI_GetPipeCmpParam_x7888:
    /*00007888*/ LDR         R3, [PC, #172]              @ 0x000000000000793c 
    /*0000788c*/ MOV         R7, #176                    @ 0xb0 
    /*00007890*/ MLA         R7, R7, R4, R3 
    /*00007894*/ MOV         R0, R7 
    /*00007898*/ BL          0x0000000000007898          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000789c*/ CMP         R0, #0 
    /*000078a0*/ BNE         VI_GetPipeCmpParam_x7930
    /*000078a4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000078a8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000078ac*/ LDR         R2, [R3, R4, LSL #2] 
    /*000078b0*/ CMP         R2, #0 
    /*000078b4*/ BEQ         VI_GetPipeCmpParam_x7900
    /*000078b8*/ ADD         R2, R2, #14912              @ 0x3a40 
    /*000078bc*/ MOV         R1, R6 
    /*000078c0*/ ADD         R2, R2, #56                 @ 0x38 
    /*000078c4*/ MOV         R0, R4 
    /*000078c8*/ BL          0x00000000000078C8          @ VI_DRV_GetPipeCmpParam [R_ARM_CALL: .text+0x32ce4] 
    /*000078cc*/ MOV         R5, R0 
    VI_GetPipeCmpParam_x78d0:
    /*000078d0*/ MOV         R0, R7 
    /*000078d4*/ BL          0x00000000000078D4          @ osal_up [R_ARM_CALL: +0x0] 
    VI_GetPipeCmpParam_x78d8:
    /*000078d8*/ MOV         R0, R5 
    /*000078dc*/ ADD         SP, SP, #12 
    /*000078e0*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeCmpParam_x78e4:
    /*000078e4*/ MOV         R0, R4 
    /*000078e8*/ BL          0x000000000000774C 
    /*000078ec*/ SUBS        R5, R0, #0 
    /*000078f0*/ BEQ         VI_GetPipeCmpParam_x7888
    /*000078f4*/ MOV         R0, R5 
    /*000078f8*/ ADD         SP, SP, #12 
    /*000078fc*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeCmpParam_x7900:
    /*00007900*/ MOV         R3, #128                    @ 0x80 
    /*00007904*/ STR         R4, [SP, #4] 
    /*00007908*/ STR         R3, [SP] 
    /*0000790c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b84] 
    /*00007910*/ LDR         R3, [PC, #40]               @ 0x0000000000007940 
    /*00007914*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b84] 
    /*00007918*/ MOV         R1, #16 
    /*0000791c*/ MOV         R0, #3 
    /*00007920*/ MOVW        R5, #32773                  @ 0x8005 
    /*00007924*/ BL          0x0000000000007924          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007928*/ MOVT        R5, #40976                  @ 0xa010 
    /*0000792c*/ B           VI_GetPipeCmpParam_x78d0
    VI_GetPipeCmpParam_x7930:
    /*00007930*/ MOV         R5, #65024                  @ 0xfe00 
    /*00007934*/ MOVT        R5, #65535                  @ 0xffff 
    /*00007938*/ B           VI_GetPipeCmpParam_x78d8
    /*0000793c*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00007940*/ ANDEQ       R0, R0, R8, LSR R4 
FUNC_END VI_GetPipeCmpParam


FUNC_BEGIN VI_CreatPipe
    /*00007944*/ CMP         R0, #3 
    /*00007948*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000794c*/ MOV         R4, R0 
    /*00007950*/ SUB         SP, SP, #12 
    /*00007954*/ MOV         R6, R1 
    /*00007958*/ BHI         VI_CreatPipe_x7978
    VI_CreatPipe_x795c:
    /*0000795c*/ MOV         R0, R6 
    /*00007960*/ BL          0x0000000000007960          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00007964*/ SUBS        R5, R0, #0 
    /*00007968*/ BEQ         VI_CreatPipe_x7990
    VI_CreatPipe_x796c:
    /*0000796c*/ MOV         R0, R5 
    /*00007970*/ ADD         SP, SP, #12 
    /*00007974*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_CreatPipe_x7978:
    /*00007978*/ BL          0x000000000000778C 
    /*0000797c*/ SUBS        R5, R0, #0 
    /*00007980*/ BEQ         VI_CreatPipe_x795c
    /*00007984*/ MOV         R0, R5 
    /*00007988*/ ADD         SP, SP, #12 
    /*0000798c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_CreatPipe_x7990:
    /*00007990*/ LDR         R3, [PC, #372]              @ 0x0000000000007b0c 
    /*00007994*/ MOV         R7, #176                    @ 0xb0 
    /*00007998*/ MLA         R7, R7, R4, R3 
    /*0000799c*/ MOV         R0, R7 
    /*000079a0*/ BL          0x00000000000079A0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000079a4*/ CMP         R0, #0 
    /*000079a8*/ BNE         VI_CreatPipe_x7af0
    /*000079ac*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000079b0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000079b4*/ LDR         R3, [R3, R4, LSL #2] 
    /*000079b8*/ CMP         R3, #0 
    /*000079bc*/ BEQ         VI_CreatPipe_x7a00
    /*000079c0*/ MOV         R3, #157                    @ 0x9d 
    /*000079c4*/ STR         R4, [SP, #4] 
    /*000079c8*/ STR         R3, [SP] 
    /*000079cc*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1bb8] 
    /*000079d0*/ LDR         R3, [PC, #312]              @ 0x0000000000007b10 
    /*000079d4*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1bb8] 
    /*000079d8*/ MOV         R1, #16 
    /*000079dc*/ MOV         R0, #3 
    /*000079e0*/ BL          0x00000000000079E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000079e4*/ MOVW        R5, #32772                  @ 0x8004 
    /*000079e8*/ MOVT        R5, #40976                  @ 0xa010 
    VI_CreatPipe_x79ec:
    /*000079ec*/ MOV         R0, R7 
    /*000079f0*/ BL          0x00000000000079F0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000079f4*/ MOV         R0, R5 
    /*000079f8*/ ADD         SP, SP, #12 
    /*000079fc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_CreatPipe_x7a00:
    /*00007a00*/ CMP         R4, #3 
    /*00007a04*/ BHI         VI_CreatPipe_x7ab4
    /*00007a08*/ MOV         R0, R4 
    /*00007a0c*/ BL          0x0000000000007A0C          @ VI_DRV_GetPipeBindDevIdBeforeInit [R_ARM_CALL: .text+0x317a4] 
    /*00007a10*/ CMN         R0, #1 
    /*00007a14*/ MOV         R9, R0 
    /*00007a18*/ BEQ         VI_CreatPipe_x7ac0
    /*00007a1c*/ MOV         R0, R4 
    /*00007a20*/ BL          0x0000000000007A20          @ VI_DRV_GetWDRModeFromDev [R_ARM_CALL: .text+0x37d04] 
    /*00007a24*/ MOV         R8, R0 
    VI_CreatPipe_x7a28:
    /*00007a28*/ MOV         R3, R8 
    /*00007a2c*/ MOV         R2, R9 
    /*00007a30*/ MOV         R1, R6 
    /*00007a34*/ MOV         R0, R4 
    /*00007a38*/ BL          0x0000000000007A38          @ VI_DRV_CheckPipeAttr [R_ARM_CALL: .text+0x27d74] 
    /*00007a3c*/ SUBS        R5, R0, #0 
    /*00007a40*/ BNE         VI_CreatPipe_x79ec
    /*00007a44*/ MOV         R2, R9 
    /*00007a48*/ MOV         R3, R8 
    /*00007a4c*/ MOV         R1, R6 
    /*00007a50*/ MOV         R0, R4 
    /*00007a54*/ BL          0x0000000000007A54          @ VI_PipeCtxInit [R_ARM_CALL: .text+0x3954] 
    /*00007a58*/ SUBS        R5, R0, #0 
    /*00007a5c*/ BNE         VI_CreatPipe_x79ec
    /*00007a60*/ MOV         R0, R4 
    /*00007a64*/ BL          0x0000000000007A64          @ VI_DRV_EnablePipeClock [R_ARM_CALL: .text+0x28b50] 
    /*00007a68*/ MOV         R2, R8 
    /*00007a6c*/ MOV         R1, R6 
    /*00007a70*/ MOV         R0, R4 
    /*00007a74*/ BL          0x0000000000007A74          @ VI_PipeMallocMem [R_ARM_CALL: .text+0x3a24] 
    /*00007a78*/ SUBS        R5, R0, #0 
    /*00007a7c*/ BNE         VI_CreatPipe_x7aa0
    /*00007a80*/ MOV         R2, R8 
    /*00007a84*/ MOV         R1, R6 
    /*00007a88*/ MOV         R0, R4 
    /*00007a8c*/ BL          0x0000000000007A8C          @ VI_CreatPipePicQueue [R_ARM_CALL: .text+0x3af0] 
    /*00007a90*/ SUBS        R5, R0, #0 
    /*00007a94*/ MOV         R0, R4 
    /*00007a98*/ BEQ         VI_CreatPipe_x7afc
    /*00007a9c*/ BL          0x0000000000007A9C          @ VI_PipeFreeMem [R_ARM_CALL: .text+0x3ac0] 
    VI_CreatPipe_x7aa0:
    /*00007aa0*/ MOV         R0, R4 
    /*00007aa4*/ BL          0x0000000000007AA4          @ VI_DRV_DisablePipeClock [R_ARM_CALL: .text+0x28bcc] 
    /*00007aa8*/ MOV         R0, R4 
    /*00007aac*/ BL          0x0000000000007AAC          @ VI_PipeCtxExit [R_ARM_CALL: .text+0x3a0c] 
    /*00007ab0*/ B           VI_CreatPipe_x79ec
    VI_CreatPipe_x7ab4:
    /*00007ab4*/ MOV         R8, R3 
    /*00007ab8*/ MVN         R9, #0 
    /*00007abc*/ B           VI_CreatPipe_x7a28
    VI_CreatPipe_x7ac0:
    /*00007ac0*/ MOV         R3, #168                    @ 0xa8 
    /*00007ac4*/ STR         R4, [SP, #4] 
    /*00007ac8*/ STR         R3, [SP] 
    /*00007acc*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1bf0] 
    /*00007ad0*/ LDR         R3, [PC, #56]               @ 0x0000000000007b10 
    /*00007ad4*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1bf0] 
    /*00007ad8*/ MOV         R1, #16 
    /*00007adc*/ MOV         R0, #3 
    /*00007ae0*/ MOVW        R5, #32839                  @ 0x8047 
    /*00007ae4*/ BL          0x0000000000007AE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007ae8*/ MOVT        R5, #40976                  @ 0xa010 
    /*00007aec*/ B           VI_CreatPipe_x79ec
    VI_CreatPipe_x7af0:
    /*00007af0*/ MOV         R5, #65024                  @ 0xfe00 
    /*00007af4*/ MOVT        R5, #65535                  @ 0xffff 
    /*00007af8*/ B           VI_CreatPipe_x796c
    VI_CreatPipe_x7afc:
    /*00007afc*/ BL          0x0000000000007AFC          @ VI_PipeSyncCtxInit [R_ARM_CALL: .text+0x3d7c] 
    /*00007b00*/ MOV         R0, R7 
    /*00007b04*/ BL          0x0000000000007B04          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007b08*/ B           VI_CreatPipe_x796c
    /*00007b0c*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00007b10*/ ANDEQ       R0, R0, IP, ASR #8 
FUNC_END VI_CreatPipe


FUNC_BEGIN VI_SetPipeAttr
    /*00007b14*/ CMP         R0, #3 
    /*00007b18*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00007b1c*/ MOV         R4, R0 
    /*00007b20*/ SUB         SP, SP, #20 
    /*00007b24*/ MOV         R6, R1 
    /*00007b28*/ BHI         VI_SetPipeAttr_x7b48
    VI_SetPipeAttr_x7b2c:
    /*00007b2c*/ MOV         R0, R6 
    /*00007b30*/ BL          0x0000000000007B30          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00007b34*/ SUBS        R5, R0, #0 
    /*00007b38*/ BEQ         VI_SetPipeAttr_x7b60
    VI_SetPipeAttr_x7b3c:
    /*00007b3c*/ MOV         R0, R5 
    /*00007b40*/ ADD         SP, SP, #20 
    /*00007b44*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetPipeAttr_x7b48:
    /*00007b48*/ BL          0x000000000000778C 
    /*00007b4c*/ SUBS        R5, R0, #0 
    /*00007b50*/ BEQ         VI_SetPipeAttr_x7b2c
    /*00007b54*/ MOV         R0, R5 
    /*00007b58*/ ADD         SP, SP, #20 
    /*00007b5c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetPipeAttr_x7b60:
    /*00007b60*/ MOV         R8, #176                    @ 0xb0 
    /*00007b64*/ MOVW        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00007b68*/ MUL         R8, R8, R4 
    /*00007b6c*/ MOVT        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00007b70*/ ADD         R7, R8, #100                @ 0x64 
    /*00007b74*/ ADD         R7, R7, R9 
    /*00007b78*/ MOV         R0, R7 
    /*00007b7c*/ BL          0x0000000000007B7C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007b80*/ CMP         R0, #0 
    /*00007b84*/ BNE         VI_SetPipeAttr_x7c7c
    /*00007b88*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00007b8c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00007b90*/ LDR         R3, [R3, R4, LSL #2] 
    /*00007b94*/ CMP         R3, #0 
    /*00007b98*/ BEQ         VI_SetPipeAttr_x7c4c
    /*00007b9c*/ MOV         R0, R4 
    /*00007ba0*/ BL          0x0000000000007BA0          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00007ba4*/ MOV         R5, R0 
    /*00007ba8*/ MOV         R0, R4 
    /*00007bac*/ BL          0x0000000000007BAC          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*00007bb0*/ MOV         R3, R5 
    /*00007bb4*/ MOV         R1, R6 
    /*00007bb8*/ MOV         R2, R0 
    /*00007bbc*/ MOV         R0, R4 
    /*00007bc0*/ BL          0x0000000000007BC0          @ VI_DRV_CheckPipeAttr [R_ARM_CALL: .text+0x27d74] 
    /*00007bc4*/ CMP         R0, #0 
    /*00007bc8*/ MOVWNE      R5, #32771                  @ 0x8003 
    /*00007bcc*/ MOVTNE      R5, #40976                  @ 0xa010 
    /*00007bd0*/ BEQ         VI_SetPipeAttr_x7be8
    VI_SetPipeAttr_x7bd4:
    /*00007bd4*/ MOV         R0, R7 
    /*00007bd8*/ BL          0x0000000000007BD8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007bdc*/ MOV         R0, R5 
    /*00007be0*/ ADD         SP, SP, #20 
    /*00007be4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetPipeAttr_x7be8:
    /*00007be8*/ MOV         R1, R6 
    /*00007bec*/ MOV         R0, R4 
    /*00007bf0*/ BL          0x0000000000007BF0          @ VI_DRV_CheckPipeStaticAttr [R_ARM_CALL: .text+0x284e8] 
    /*00007bf4*/ CMP         R0, #0 
    /*00007bf8*/ MOVWNE      R5, #32777                  @ 0x8009 
    /*00007bfc*/ MOVTNE      R5, #40976                  @ 0xa010 
    /*00007c00*/ BNE         VI_SetPipeAttr_x7bd4
    /*00007c04*/ MOV         R1, R6 
    /*00007c08*/ MOV         R0, R4 
    /*00007c0c*/ BL          0x0000000000007C0C          @ VI_DRV_MallocImageProcessBuffer [R_ARM_CALL: .text+0x2ff64] 
    /*00007c10*/ SUBS        R5, R0, #0 
    /*00007c14*/ BNE         VI_SetPipeAttr_x7bd4
    /*00007c18*/ ADD         R8, R8, #140                @ 0x8c 
    /*00007c1c*/ ADD         R1, SP, #12 
    /*00007c20*/ ADD         R8, R8, R9 
    /*00007c24*/ MOV         R0, R8 
    /*00007c28*/ BL          0x0000000000007C28          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007c2c*/ MOV         R1, R6 
    /*00007c30*/ MOV         R0, R4 
    /*00007c34*/ BL          0x0000000000007C34          @ VI_DRV_SetPipeAttr [R_ARM_CALL: .text+0x2861c] 
    /*00007c38*/ ADD         R1, SP, #12 
    /*00007c3c*/ MOV         R5, R0 
    /*00007c40*/ MOV         R0, R8 
    /*00007c44*/ BL          0x0000000000007C44          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007c48*/ B           VI_SetPipeAttr_x7bd4
    VI_SetPipeAttr_x7c4c:
    /*00007c4c*/ MOVW        R3, #374                    @ 0x176 
    /*00007c50*/ STR         R4, [SP, #4] 
    /*00007c54*/ STR         R3, [SP] 
    /*00007c58*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c28] 
    /*00007c5c*/ LDR         R3, [PC, #36]               @ 0x0000000000007c88 
    /*00007c60*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c28] 
    /*00007c64*/ MOV         R1, #16 
    /*00007c68*/ MOV         R0, #3 
    /*00007c6c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00007c70*/ BL          0x0000000000007C70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007c74*/ MOVT        R5, #40976                  @ 0xa010 
    /*00007c78*/ B           VI_SetPipeAttr_x7bd4
    VI_SetPipeAttr_x7c7c:
    /*00007c7c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00007c80*/ MOVT        R5, #65535                  @ 0xffff 
    /*00007c84*/ B           VI_SetPipeAttr_x7b3c
    /*00007c88*/ ANDEQ       R0, R0, IP, ASR R4 
FUNC_END VI_SetPipeAttr


FUNC_BEGIN VI_GetPipeAttr
    /*00007c8c*/ CMP         R0, #3 
    /*00007c90*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00007c94*/ MOV         R4, R0 
    /*00007c98*/ SUB         SP, SP, #12 
    /*00007c9c*/ MOV         R6, R1 
    /*00007ca0*/ BHI         VI_GetPipeAttr_x7cc0
    VI_GetPipeAttr_x7ca4:
    /*00007ca4*/ MOV         R0, R6 
    /*00007ca8*/ BL          0x0000000000007CA8          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00007cac*/ SUBS        R5, R0, #0 
    /*00007cb0*/ BEQ         VI_GetPipeAttr_x7cd8
    VI_GetPipeAttr_x7cb4:
    /*00007cb4*/ MOV         R0, R5 
    /*00007cb8*/ ADD         SP, SP, #12 
    /*00007cbc*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeAttr_x7cc0:
    /*00007cc0*/ BL          0x000000000000778C 
    /*00007cc4*/ SUBS        R5, R0, #0 
    /*00007cc8*/ BEQ         VI_GetPipeAttr_x7ca4
    /*00007ccc*/ MOV         R0, R5 
    /*00007cd0*/ ADD         SP, SP, #12 
    /*00007cd4*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeAttr_x7cd8:
    /*00007cd8*/ LDR         R3, [PC, #136]              @ 0x0000000000007d68 
    /*00007cdc*/ MOV         R7, #176                    @ 0xb0 
    /*00007ce0*/ MLA         R7, R7, R4, R3 
    /*00007ce4*/ MOV         R0, R7 
    /*00007ce8*/ BL          0x0000000000007CE8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007cec*/ CMP         R0, #0 
    /*00007cf0*/ BNE         VI_GetPipeAttr_x7d5c
    /*00007cf4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00007cf8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00007cfc*/ LDR         R3, [R3, R4, LSL #2] 
    /*00007d00*/ CMP         R3, #0 
    /*00007d04*/ BEQ         VI_GetPipeAttr_x7d2c
    /*00007d08*/ MOV         R1, R6 
    /*00007d0c*/ MOV         R0, R4 
    /*00007d10*/ BL          0x0000000000007D10          @ VI_DRV_GetPipeAttr [R_ARM_CALL: .text+0x28674] 
    /*00007d14*/ MOV         R5, R0 
    VI_GetPipeAttr_x7d18:
    /*00007d18*/ MOV         R0, R7 
    /*00007d1c*/ BL          0x0000000000007D1C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007d20*/ MOV         R0, R5 
    /*00007d24*/ ADD         SP, SP, #12 
    /*00007d28*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeAttr_x7d2c:
    /*00007d2c*/ MOVW        R3, #431                    @ 0x1af 
    /*00007d30*/ STR         R4, [SP, #4] 
    /*00007d34*/ STR         R3, [SP] 
    /*00007d38*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c64] 
    /*00007d3c*/ LDR         R3, [PC, #40]               @ 0x0000000000007d6c 
    /*00007d40*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c64] 
    /*00007d44*/ MOV         R1, #16 
    /*00007d48*/ MOV         R0, #3 
    /*00007d4c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00007d50*/ BL          0x0000000000007D50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007d54*/ MOVT        R5, #40976                  @ 0xa010 
    /*00007d58*/ B           VI_GetPipeAttr_x7d18
    VI_GetPipeAttr_x7d5c:
    /*00007d5c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00007d60*/ MOVT        R5, #65535                  @ 0xffff 
    /*00007d64*/ B           VI_GetPipeAttr_x7cb4
    /*00007d68*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00007d6c*/ ANDEQ       R0, R0, IP, ROR #8 
FUNC_END VI_GetPipeAttr


FUNC_BEGIN VI_StartPipe
    /*00007d70*/ CMP         R0, #3 
    /*00007d74*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00007d78*/ MOV         R4, R0 
    /*00007d7c*/ SUB         SP, SP, #20 
    /*00007d80*/ BHI         VI_StartPipe_x7e84
    VI_StartPipe_x7d84:
    /*00007d84*/ MOV         R6, #176                    @ 0xb0 
    /*00007d88*/ MOVW        R7, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00007d8c*/ MUL         R6, R6, R4 
    /*00007d90*/ MOVT        R7, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00007d94*/ ADD         R5, R6, #100                @ 0x64 
    /*00007d98*/ ADD         R5, R5, R7 
    /*00007d9c*/ MOV         R0, R5 
    /*00007da0*/ BL          0x0000000000007DA0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007da4*/ CMP         R0, #0 
    /*00007da8*/ BNE         VI_StartPipe_x7eec
    /*00007dac*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00007db0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00007db4*/ LDR         SL, [R3, R4, LSL #2] 
    /*00007db8*/ CMP         SL, #0 
    /*00007dbc*/ BEQ         VI_StartPipe_x7e9c
    /*00007dc0*/ ADD         FP, SL, #36864              @ 0x9000 
    /*00007dc4*/ LDR         R3, [FP, #1480]             @ 0x5c8 
    /*00007dc8*/ CMP         R3, #1 
    /*00007dcc*/ BEQ         VI_StartPipe_x7e6c
    /*00007dd0*/ MOV         R0, R4 
    /*00007dd4*/ BL          0x0000000000007DD4          @ VI_DRV_CheckPipeChipLimit [R_ARM_CALL: .text+0x345cc] 
    /*00007dd8*/ SUBS        R8, R0, #0 
    /*00007ddc*/ BNE         VI_StartPipe_x7e70
    /*00007de0*/ MOV         R0, R4 
    /*00007de4*/ ADD         R6, R6, #140                @ 0x8c 
    /*00007de8*/ BL          0x0000000000007DE8          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00007dec*/ ADD         R7, R6, R7 
    /*00007df0*/ ADD         R1, SP, #12 
    /*00007df4*/ MOV         R6, #1 
    /*00007df8*/ ADD         SL, SL, #12288              @ 0x3000 
    /*00007dfc*/ MOV         R9, R0 
    /*00007e00*/ MOV         R0, R7 
    /*00007e04*/ BL          0x0000000000007E04          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007e08*/ STR         R8, [FP, #488]              @ 0x1e8 
    /*00007e0c*/ STR         R6, [FP, #1480]             @ 0x5c8 
    /*00007e10*/ MOV         R0, R4 
    /*00007e14*/ STR         R6, [FP, #2144]             @ 0x860 
    /*00007e18*/ BL          0x0000000000007E18          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00007e1c*/ CMP         R0, #2 
    /*00007e20*/ MOV         FP, R0 
    /*00007e24*/ BEQ         VI_StartPipe_x7ecc
    /*00007e28*/ CMP         R9, #1 
    /*00007e2c*/ MOV         R0, R4 
    /*00007e30*/ STRLS       R6, [SL, #2216]             @ 0x8a8 
    /*00007e34*/ STRHI       R8, [SL, #2216]             @ 0x8a8 
    /*00007e38*/ STR         R8, [SL, #3128]             @ 0xc38 
    /*00007e3c*/ BL          0x0000000000007E3C          @ VI_DRV_StartPipe [R_ARM_CALL: .text+0x30230] 
    /*00007e40*/ ADD         R1, SP, #12 
    /*00007e44*/ MOV         R0, R7 
    /*00007e48*/ BL          0x0000000000007E48          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007e4c*/ CMP         FP, #1 
    /*00007e50*/ BHI         VI_StartPipe_x7e6c
    /*00007e54*/ SUB         R9, R9, #2 
    /*00007e58*/ CMP         R9, #1 
    /*00007e5c*/ BHI         VI_StartPipe_x7e6c
    /*00007e60*/ MOV         R0, R4 
    /*00007e64*/ BL          0x0000000000007E64          @ VI_COMM_UpdateFirstFramePipeAttr [R_ARM_CALL: .text+0x14d28] 
    /*00007e68*/ B           VI_StartPipe_x7e70
    VI_StartPipe_x7e6c:
    /*00007e6c*/ MOV         R8, #0 
    VI_StartPipe_x7e70:
    /*00007e70*/ MOV         R0, R5 
    /*00007e74*/ BL          0x0000000000007E74          @ osal_up [R_ARM_CALL: +0x0] 
    VI_StartPipe_x7e78:
    /*00007e78*/ MOV         R0, R8 
    /*00007e7c*/ ADD         SP, SP, #20 
    /*00007e80*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_StartPipe_x7e84:
    /*00007e84*/ BL          0x000000000000778C 
    /*00007e88*/ SUBS        R8, R0, #0 
    /*00007e8c*/ BEQ         VI_StartPipe_x7d84
    /*00007e90*/ MOV         R0, R8 
    /*00007e94*/ ADD         SP, SP, #20 
    /*00007e98*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_StartPipe_x7e9c:
    /*00007e9c*/ MOVW        R3, #462                    @ 0x1ce 
    /*00007ea0*/ STR         R4, [SP, #4] 
    /*00007ea4*/ STR         R3, [SP] 
    /*00007ea8*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ca0] 
    /*00007eac*/ LDR         R3, [PC, #68]               @ 0x0000000000007ef8 
    /*00007eb0*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ca0] 
    /*00007eb4*/ MOV         R1, #16 
    /*00007eb8*/ MOV         R0, #3 
    /*00007ebc*/ MOVW        R8, #32773                  @ 0x8005 
    /*00007ec0*/ BL          0x0000000000007EC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007ec4*/ MOVT        R8, #40976                  @ 0xa010 
    /*00007ec8*/ B           VI_StartPipe_x7e70
    VI_StartPipe_x7ecc:
    /*00007ecc*/ MOV         R0, R4 
    /*00007ed0*/ STR         R6, [SL, #3128]             @ 0xc38 
    /*00007ed4*/ STR         R8, [SL, #2216]             @ 0x8a8 
    /*00007ed8*/ BL          0x0000000000007ED8          @ VI_DRV_StartPipe [R_ARM_CALL: .text+0x30230] 
    /*00007edc*/ ADD         R1, SP, #12 
    /*00007ee0*/ MOV         R0, R7 
    /*00007ee4*/ BL          0x0000000000007EE4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007ee8*/ B           VI_StartPipe_x7e70
    VI_StartPipe_x7eec:
    /*00007eec*/ MOV         R8, #65024                  @ 0xfe00 
    /*00007ef0*/ MOVT        R8, #65535                  @ 0xffff 
    /*00007ef4*/ B           VI_StartPipe_x7e78
    /*00007ef8*/ ANDEQ       R0, R0, IP, ROR R4 
FUNC_END VI_StartPipe


FUNC_BEGIN VI_ReleasePipeCaptureVB
    /*00007efc*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00007f00*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00007f04*/ PUSH        {R4, R5, R6, LR} 
    /*00007f08*/ LDR         R5, [R3, R0, LSL #2] 
    /*00007f0c*/ ADD         R4, R5, #12288              @ 0x3000 
    /*00007f10*/ LDR         R3, [R4, #2664]             @ 0xa68 
    /*00007f14*/ CMP         R3, #0 
    /*00007f18*/ BNE         VI_ReleasePipeCaptureVB_x7f44
    VI_ReleasePipeCaptureVB_x7f1c:
    /*00007f1c*/ LDR         R3, [R4, #3112]             @ 0xc28 
    /*00007f20*/ CMP         R3, #0 
    /*00007f24*/ POPEQ       {R4, R5, R6, PC} 
    /*00007f28*/ ADD         R0, R5, #14912              @ 0x3a40 
    /*00007f2c*/ MOV         R1, #0 
    /*00007f30*/ ADD         R0, R0, #56                 @ 0x38 
    /*00007f34*/ BL          0x0000000000007F34          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00007f38*/ MOV         R3, #0 
    /*00007f3c*/ STR         R3, [R4, #3112]             @ 0xc28 
    /*00007f40*/ POP         {R4, R5, R6, PC} 
    VI_ReleasePipeCaptureVB_x7f44:
    /*00007f44*/ ADD         R0, R5, #14464              @ 0x3880 
    /*00007f48*/ MOV         R1, #0 
    /*00007f4c*/ ADD         R0, R0, #56                 @ 0x38 
    /*00007f50*/ BL          0x0000000000007F50          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00007f54*/ MOV         R3, #0 
    /*00007f58*/ STR         R3, [R4, #2664]             @ 0xa68 
    /*00007f5c*/ B           VI_ReleasePipeCaptureVB_x7f1c
FUNC_END VI_ReleasePipeCaptureVB


FUNC_BEGIN VI_DestroyPipe
    /*00007f60*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00007f64*/ CMP         R0, #3 
    /*00007f68*/ SUB         SP, SP, #28 
    /*00007f6c*/ MOVLS       R3, R0 
    /*00007f70*/ STR         R0, [SP, #12] 
    /*00007f74*/ BHI         VI_DestroyPipe_x81dc
    VI_DestroyPipe_x7f78:
    /*00007f78*/ MOV         R0, #176                    @ 0xb0 
    /*00007f7c*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00007f80*/ MUL         R3, R0, R3 
    /*00007f84*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00007f88*/ ADD         R0, R3, #100                @ 0x64 
    /*00007f8c*/ ADD         R0, R5, R0 
    /*00007f90*/ BL          0x0000000000007F90          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007f94*/ SUBS        R6, R0, #0 
    /*00007f98*/ BNE         VI_DestroyPipe_x8294
    /*00007f9c*/ LDR         R0, [SP, #12] 
    /*00007fa0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00007fa4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00007fa8*/ LDR         R8, [R3, R0, LSL #2] 
    /*00007fac*/ CMP         R8, #0 
    /*00007fb0*/ BEQ         VI_DestroyPipe_x82b8
    /*00007fb4*/ ADD         R9, R8, #36864              @ 0x9000 
    /*00007fb8*/ LDR         R3, [R9, #1480]             @ 0x5c8 
    /*00007fbc*/ CMP         R3, #1 
    /*00007fc0*/ BEQ         VI_DestroyPipe_x82a0
    /*00007fc4*/ LDR         R3, [R9, #472]              @ 0x1d8 
    /*00007fc8*/ CMP         R3, #1 
    /*00007fcc*/ BEQ         VI_DestroyPipe_x81f8
    VI_DestroyPipe_x7fd0:
    /*00007fd0*/ MOV         R7, #176                    @ 0xb0 
    /*00007fd4*/ ADD         R1, SP, #20 
    /*00007fd8*/ MLA         R0, R7, R0, R5 
    /*00007fdc*/ ADD         R4, SP, #24 
    /*00007fe0*/ MOVW        SL, #0                      @ VI_WaitStopWorkingCallBack [R_ARM_MOVW_ABS_NC: .text+0x7674] 
    /*00007fe4*/ MOVT        SL, #0                      @ VI_WaitStopWorkingCallBack [R_ARM_MOVT_ABS: .text+0x7674] 
    /*00007fe8*/ ADD         R0, R0, #140                @ 0x8c 
    /*00007fec*/ BL          0x0000000000007FEC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007ff0*/ LDR         R3, [SP, #12] 
    /*00007ff4*/ ADD         R1, SP, #20 
    /*00007ff8*/ MOV         R2, #1 
    /*00007ffc*/ MUL         R3, R7, R3 
    /*00008000*/ ADD         R0, R3, #140                @ 0x8c 
    /*00008004*/ ADD         R0, R5, R0 
    /*00008008*/ STR         R2, [R5, R3] 
    /*0000800c*/ BL          0x000000000000800C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008010*/ LDR         R0, [R4, #-12]! 
    /*00008014*/ BL          0x0000000000008014          @ VI_DestoryAllGdcChn [R_ARM_CALL: .text+0x21b48] 
    /*00008018*/ B           VI_DestroyPipe_x8034
    VI_DestroyPipe_x801c:
    /*0000801c*/ LDR         R0, [SP, #12] 
    /*00008020*/ MLA         R0, R7, R0, R5 
    /*00008024*/ ADD         R0, R0, #88                 @ 0x58 
    /*00008028*/ BL          0x0000000000008028          @ osal_wait_uninterruptible [R_ARM_CALL: +0x0] 
    /*0000802c*/ CMP         R0, #0 
    /*00008030*/ BLT         VI_DestroyPipe_x804c
    VI_DestroyPipe_x8034:
    /*00008034*/ MOV         R0, R4 
    /*00008038*/ BL          0x0000000000008038          @ VI_WaitStopWorkingCallBack [R_ARM_CALL: .text+0x7674] 
    /*0000803c*/ MOV         R2, R4 
    /*00008040*/ MOV         R1, SL 
    /*00008044*/ CMP         R0, #0 
    /*00008048*/ BEQ         VI_DestroyPipe_x801c
    VI_DestroyPipe_x804c:
    /*0000804c*/ LDR         R0, [SP, #12] 
    /*00008050*/ BL          0x0000000000008050          @ VI_DestroyUserPic [R_ARM_CALL: .text+0x1c3d8] 
    /*00008054*/ BL          0x0000000000008054          @ VI_IsDisExist [R_ARM_CALL: .text+0x22f40] 
    /*00008058*/ CMP         R0, #0 
    /*0000805c*/ BNE         VI_DestroyPipe_x8234
    VI_DestroyPipe_x8060:
    /*00008060*/ ADD         SL, R8, #324                @ 0x144 
    /*00008064*/ MOV         R4, R8 
    /*00008068*/ MOV         FP, #0 
    VI_DestroyPipe_x806c:
    /*0000806c*/ LDR         R3, [R4, #148]              @ 0x94 
    /*00008070*/ ADD         R7, R4, #148                @ 0x94 
    /*00008074*/ CMP         R3, #0 
    /*00008078*/ MOV         R0, R7 
    /*0000807c*/ BEQ         VI_DestroyPipe_x80a0
    /*00008080*/ BL          0x0000000000008080          @ VI_ClearPicQueue [R_ARM_CALL: .text+0x3e24] 
    /*00008084*/ MOV         R0, R7 
    /*00008088*/ BL          0x0000000000008088          @ VI_DestroyQueue [R_ARM_CALL: .text+0x16170] 
    /*0000808c*/ LDR         R0, [R4, #148]              @ 0x94 
    /*00008090*/ CMP         R0, #0 
    /*00008094*/ BEQ         VI_DestroyPipe_x80a0
    /*00008098*/ BL          0x0000000000008098          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000809c*/ STR         FP, [R4, #148]              @ 0x94 
    VI_DestroyPipe_x80a0:
    /*000080a0*/ ADD         R4, R4, #36                 @ 0x24 
    /*000080a4*/ CMP         SL, R4 
    /*000080a8*/ BNE         VI_DestroyPipe_x806c
    /*000080ac*/ LDR         R3, [R9, #536]              @ 0x218 
    /*000080b0*/ CMP         R3, #0 
    /*000080b4*/ BEQ         VI_DestroyPipe_x80e8
    /*000080b8*/ ADD         R8, R8, #37376              @ 0x9200 
    /*000080bc*/ ADD         R8, R8, #24 
    /*000080c0*/ MOV         R0, R8 
    /*000080c4*/ BL          0x00000000000080C4          @ VI_ClearPicQueue [R_ARM_CALL: .text+0x3e24] 
    /*000080c8*/ MOV         R0, R8 
    /*000080cc*/ BL          0x00000000000080CC          @ VI_DestroyQueue [R_ARM_CALL: .text+0x16170] 
    /*000080d0*/ LDR         R0, [R9, #536]              @ 0x218 
    /*000080d4*/ CMP         R0, #0 
    /*000080d8*/ BEQ         VI_DestroyPipe_x80e8
    /*000080dc*/ BL          0x00000000000080DC          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*000080e0*/ MOV         R3, #0 
    /*000080e4*/ STR         R3, [R9, #536]              @ 0x218 
    VI_DestroyPipe_x80e8:
    /*000080e8*/ LDR         R0, [SP, #12] 
    /*000080ec*/ BL          0x00000000000080EC          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*000080f0*/ SUB         R0, R0, #2 
    /*000080f4*/ BICS        R3, R0, #2 
    /*000080f8*/ BEQ         VI_DestroyPipe_x8288
    VI_DestroyPipe_x80fc:
    /*000080fc*/ LDR         R0, [SP, #12] 
    /*00008100*/ MOV         R4, #0 
    /*00008104*/ BL          0x0000000000008104          @ VI_ReleasePipeBNRCaptureVB [R_ARM_CALL: .text+0x1f9f4] 
    /*00008108*/ LDR         R0, [SP, #12] 
    /*0000810c*/ BL          0x000000000000810C          @ VI_ReleaseSrcBuffer [R_ARM_CALL: .text+0x43ac] 
    /*00008110*/ LDR         R0, [SP, #12] 
    /*00008114*/ BL          0x0000000000008114          @ VI_ReleasePipeCaptureVB [R_ARM_CALL: .text+0x7efc] 
    /*00008118*/ LDR         R0, [SP, #12] 
    /*0000811c*/ BL          0x000000000000811C          @ VI_PipeFreeMem [R_ARM_CALL: .text+0x3ac0] 
    /*00008120*/ LDR         R0, [SP, #12] 
    /*00008124*/ BL          0x0000000000008124          @ VI_ReleaseCurPic [R_ARM_CALL: .text+0x1bd0] 
    /*00008128*/ LDR         R0, [SP, #12] 
    /*0000812c*/ BL          0x000000000000812C          @ VI_DestoryPipePicQueue [R_ARM_CALL: .text+0x3cc4] 
    /*00008130*/ LDR         R0, [SP, #12] 
    /*00008134*/ BL          0x0000000000008134          @ VI_DRV_WDRPoolDeInit [R_ARM_CALL: .text+0x383d0] 
    /*00008138*/ LDR         R0, [SP, #12] 
    /*0000813c*/ BL          0x000000000000813C          @ VI_DRV_DisablePipeClock [R_ARM_CALL: .text+0x28bcc] 
    /*00008140*/ LDR         R0, [SP, #12] 
    /*00008144*/ BL          0x0000000000008144          @ VI_PipeCtxExit [R_ARM_CALL: .text+0x3a0c] 
    /*00008148*/ MOV         R7, #44                     @ 0x2c 
    VI_DestroyPipe_x814c:
    /*0000814c*/ LDR         R0, [SP, #12] 
    /*00008150*/ MLA         R0, R7, R0, R4 
    /*00008154*/ ADD         R4, R4, #1 
    /*00008158*/ ADD         R0, R0, #10 
    /*0000815c*/ ADD         R0, R5, R0, LSL #2 
    /*00008160*/ BL          0x0000000000008160          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00008164*/ CMP         R4, #9 
    /*00008168*/ BNE         VI_DestroyPipe_x814c
    /*0000816c*/ LDR         R0, [SP, #12] 
    /*00008170*/ MOV         R4, #176                    @ 0xb0 
    /*00008174*/ MLA         R0, R4, R0, R5 
    /*00008178*/ ADD         R0, R0, #84                 @ 0x54 
    /*0000817c*/ BL          0x000000000000817C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00008180*/ LDR         R0, [SP, #12] 
    /*00008184*/ MLA         R0, R4, R0, R5 
    /*00008188*/ ADD         R0, R0, #80                 @ 0x50 
    /*0000818c*/ BL          0x000000000000818C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00008190*/ LDR         R0, [SP, #12] 
    /*00008194*/ MLA         R0, R4, R0, R5 
    /*00008198*/ ADD         R0, R0, #76                 @ 0x4c 
    /*0000819c*/ BL          0x000000000000819C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000081a0*/ LDR         R0, [SP, #12] 
    /*000081a4*/ MLA         R0, R4, R0, R5 
    /*000081a8*/ ADD         R0, R0, #92                 @ 0x5c 
    /*000081ac*/ BL          0x00000000000081AC          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000081b0*/ MVN         R1, #0 
    /*000081b4*/ LDR         R0, [SP, #12] 
    /*000081b8*/ BL          0x00000000000081B8          @ VI_DRV_SetPipeBindDevId [R_ARM_CALL: .text+0x317d0] 
    VI_DestroyPipe_x81bc:
    /*000081bc*/ LDR         R0, [SP, #12] 
    /*000081c0*/ MOV         R3, #176                    @ 0xb0 
    /*000081c4*/ MLA         R0, R3, R0, R5 
    /*000081c8*/ ADD         R0, R0, #100                @ 0x64 
    /*000081cc*/ BL          0x00000000000081CC          @ osal_up [R_ARM_CALL: +0x0] 
    VI_DestroyPipe_x81d0:
    /*000081d0*/ MOV         R0, R6 
    /*000081d4*/ ADD         SP, SP, #28 
    /*000081d8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DestroyPipe_x81dc:
    /*000081dc*/ BL          0x000000000000778C 
    /*000081e0*/ SUBS        R6, R0, #0 
    /*000081e4*/ LDREQ       R3, [SP, #12] 
    /*000081e8*/ BEQ         VI_DestroyPipe_x7f78
    /*000081ec*/ MOV         R0, R6 
    /*000081f0*/ ADD         SP, SP, #28 
    /*000081f4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DestroyPipe_x81f8:
    /*000081f8*/ LDR         R3, [R9, #388]              @ 0x184 
    /*000081fc*/ CMP         R3, #0 
    /*00008200*/ BEQ         VI_DestroyPipe_x7fd0
    /*00008204*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d38] 
    /*00008208*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d38] 
    /*0000820c*/ MOV         R3, #256                    @ 0x100 
    /*00008210*/ STR         R0, [SP, #4] 
    /*00008214*/ STR         R3, [SP] 
    VI_DestroyPipe_x8218:
    /*00008218*/ LDR         R3, [PC, #200]              @ 0x00000000000082e8 
    /*0000821c*/ MOV         R1, #16 
    /*00008220*/ MOV         R0, #3 
    /*00008224*/ MOVW        R6, #32777                  @ 0x8009 
    /*00008228*/ BL          0x0000000000008228          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000822c*/ MOVT        R6, #40976                  @ 0xa010 
    /*00008230*/ B           VI_DestroyPipe_x81bc
    VI_DestroyPipe_x8234:
    /*00008234*/ LDR         R0, [SP, #12] 
    /*00008238*/ MOV         R4, #176                    @ 0xb0 
    /*0000823c*/ ADD         R1, SP, #20 
    /*00008240*/ MLA         R0, R4, R0, R5 
    /*00008244*/ ADD         R0, R0, #140                @ 0x8c 
    /*00008248*/ BL          0x0000000000008248          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000824c*/ MOV         R1, #0 
    /*00008250*/ LDR         R0, [SP, #12] 
    /*00008254*/ BL          0x0000000000008254          @ Vi_DisableDIS [R_ARM_CALL: .text+0x23974] 
    /*00008258*/ LDR         R0, [SP, #12] 
    /*0000825c*/ ADD         R1, SP, #20 
    /*00008260*/ MLA         R0, R4, R0, R5 
    /*00008264*/ ADD         R0, R0, #140                @ 0x8c 
    /*00008268*/ BL          0x0000000000008268          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000826c*/ MOV         R1, #0 
    /*00008270*/ LDR         R0, [SP, #12] 
    /*00008274*/ BL          0x0000000000008274          @ Vi_DestroyDisChn [R_ARM_CALL: .text+0x25008] 
    /*00008278*/ MOV         R1, #0 
    /*0000827c*/ LDR         R0, [SP, #12] 
    /*00008280*/ BL          0x0000000000008280          @ Vi_destroyDISPool [R_ARM_CALL: .text+0x23a18] 
    /*00008284*/ B           VI_DestroyPipe_x8060
    VI_DestroyPipe_x8288:
    /*00008288*/ LDR         R0, [SP, #12] 
    /*0000828c*/ BL          0x000000000000828C          @ VI_ReleaseChnBuffer [R_ARM_CALL: .text+0x42c4] 
    /*00008290*/ B           VI_DestroyPipe_x80fc
    VI_DestroyPipe_x8294:
    /*00008294*/ MOV         R6, #65024                  @ 0xfe00 
    /*00008298*/ MOVT        R6, #65535                  @ 0xffff 
    /*0000829c*/ B           VI_DestroyPipe_x81d0
    VI_DestroyPipe_x82a0:
    /*000082a0*/ MOV         R3, #248                    @ 0xf8 
    /*000082a4*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d00] 
    /*000082a8*/ STR         R0, [SP, #4] 
    /*000082ac*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d00] 
    /*000082b0*/ STR         R3, [SP] 
    /*000082b4*/ B           VI_DestroyPipe_x8218
    VI_DestroyPipe_x82b8:
    /*000082b8*/ STR         R0, [SP, #4] 
    /*000082bc*/ MOV         R3, #241                    @ 0xf1 
    /*000082c0*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*000082c4*/ STR         R3, [SP] 
    /*000082c8*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*000082cc*/ LDR         R3, [PC, #20]               @ 0x00000000000082e8 
    /*000082d0*/ MOV         R1, #16 
    /*000082d4*/ MOV         R0, #3 
    /*000082d8*/ MOVW        R6, #32773                  @ 0x8005 
    /*000082dc*/ BL          0x00000000000082DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000082e0*/ MOVT        R6, #40976                  @ 0xa010 
    /*000082e4*/ B           VI_DestroyPipe_x81bc
    /*000082e8*/ ANDEQ       R0, R0, IP, LSL #9 
FUNC_END VI_DestroyPipe


FUNC_BEGIN VI_StopPipe
    /*000082ec*/ CMP         R0, #3 
    /*000082f0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000082f4*/ MOV         R5, R0 
    /*000082f8*/ SUB         SP, SP, #20 
    /*000082fc*/ BHI         VI_StopPipe_x83b8
    VI_StopPipe_x8300:
    /*00008300*/ MOV         R4, #176                    @ 0xb0 
    /*00008304*/ MOVW        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00008308*/ MUL         R4, R4, R5 
    /*0000830c*/ MOVT        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00008310*/ ADD         R6, R4, #100                @ 0x64 
    /*00008314*/ ADD         R6, R6, R8 
    /*00008318*/ MOV         R0, R6 
    /*0000831c*/ BL          0x000000000000831C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008320*/ SUBS        R7, R0, #0 
    /*00008324*/ BNE         VI_StopPipe_x8450
    /*00008328*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000832c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00008330*/ LDR         R1, [R3, R5, LSL #2] 
    /*00008334*/ CMP         R1, #0 
    /*00008338*/ BEQ         VI_StopPipe_x8418
    /*0000833c*/ ADD         R9, R1, #36864              @ 0x9000 
    /*00008340*/ LDR         R3, [R9, #1480]             @ 0x5c8 
    /*00008344*/ CMP         R3, #1 
    /*00008348*/ BNE         VI_StopPipe_x83a4
    /*0000834c*/ ADD         R3, R1, #12288              @ 0x3000 
    /*00008350*/ LDR         R2, [R3, #2216]             @ 0x8a8 
    /*00008354*/ CMP         R2, #1 
    /*00008358*/ BEQ         VI_StopPipe_x83cc
    /*0000835c*/ ADD         R4, R4, #140                @ 0x8c 
    /*00008360*/ ADD         R7, SP, #12 
    /*00008364*/ ADD         R4, R4, R8 
    VI_StopPipe_x8368:
    /*00008368*/ MOV         R1, R7 
    /*0000836c*/ MOV         R0, R4 
    /*00008370*/ BL          0x0000000000008370          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008374*/ LDR         R3, [R9, #472]              @ 0x1d8 
    /*00008378*/ MOV         R2, #0 
    /*0000837c*/ MOV         R0, R5 
    /*00008380*/ CMP         R3, R2 
    /*00008384*/ STR         R2, [R9, #1480]             @ 0x5c8 
    /*00008388*/ STREQ       R3, [R9, #388]              @ 0x184 
    /*0000838c*/ MOV         R2, #1 
    /*00008390*/ STR         R2, [R9, #2144]             @ 0x860 
    /*00008394*/ BL          0x0000000000008394          @ VI_DRV_StopPipe [R_ARM_CALL: .text+0x30270] 
    /*00008398*/ MOV         R1, R7 
    /*0000839c*/ MOV         R0, R4 
    /*000083a0*/ BL          0x00000000000083A0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_StopPipe_x83a4:
    /*000083a4*/ MOV         R0, R6 
    /*000083a8*/ BL          0x00000000000083A8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000083ac*/ MOV         R0, #0 
    VI_StopPipe_x83b0:
    /*000083b0*/ ADD         SP, SP, #20 
    /*000083b4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_StopPipe_x83b8:
    /*000083b8*/ BL          0x000000000000778C 
    /*000083bc*/ CMP         R0, #0 
    /*000083c0*/ BEQ         VI_StopPipe_x8300
    /*000083c4*/ ADD         SP, SP, #20 
    /*000083c8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_StopPipe_x83cc:
    /*000083cc*/ ADD         R1, R1, #15360              @ 0x3c00 
    /*000083d0*/ ADD         R4, R4, #140                @ 0x8c 
    /*000083d4*/ STR         R7, [R3, #2216]             @ 0x8a8 
    /*000083d8*/ ADD         R1, R1, #56                 @ 0x38 
    /*000083dc*/ ADD         R4, R4, R8 
    /*000083e0*/ ADD         R7, SP, #12 
    /*000083e4*/ MOV         R0, R5 
    /*000083e8*/ BL          0x00000000000083E8          @ VI_WaitCaptureFrameStop [R_ARM_CALL: .text+0x4660] 
    /*000083ec*/ MOV         R0, R5 
    /*000083f0*/ BL          0x00000000000083F0          @ VI_ReleasePipeCaptureVB [R_ARM_CALL: .text+0x7efc] 
    /*000083f4*/ MOV         R1, R7 
    /*000083f8*/ MOV         R0, R4 
    /*000083fc*/ BL          0x00000000000083FC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008400*/ MOV         R0, R5 
    /*00008404*/ BL          0x0000000000008404          @ VI_DRV_DisableWch [R_ARM_CALL: .text+0x301c4] 
    /*00008408*/ MOV         R1, R7 
    /*0000840c*/ MOV         R0, R4 
    /*00008410*/ BL          0x0000000000008410          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008414*/ B           VI_StopPipe_x8368
    VI_StopPipe_x8418:
    /*00008418*/ MOV         R0, R6 
    /*0000841c*/ BL          0x000000000000841C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008420*/ MOV         R3, #564                    @ 0x234 
    /*00008424*/ STR         R5, [SP, #4] 
    /*00008428*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ca0] 
    /*0000842c*/ STR         R3, [SP] 
    /*00008430*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ca0] 
    /*00008434*/ LDR         R3, [PC, #32]               @ 0x000000000000845c 
    /*00008438*/ MOV         R1, #16 
    /*0000843c*/ MOV         R0, #3 
    /*00008440*/ BL          0x0000000000008440          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008444*/ MOVW        R0, #32773                  @ 0x8005 
    /*00008448*/ MOVT        R0, #40976                  @ 0xa010 
    /*0000844c*/ B           VI_StopPipe_x83b0
    VI_StopPipe_x8450:
    /*00008450*/ MOV         R0, #65024                  @ 0xfe00 
    /*00008454*/ MOVT        R0, #65535                  @ 0xffff 
    /*00008458*/ B           VI_StopPipe_x83b0
    /*0000845c*/ MULEQ       R0, IP, R4 
FUNC_END VI_StopPipe


FUNC_BEGIN VI_SetPipeRawSource
    /*00008460*/ CMP         R0, #3 
    /*00008464*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00008468*/ MOV         R6, R0 
    /*0000846c*/ SUB         SP, SP, #20 
    /*00008470*/ MOV         R9, R1 
    /*00008474*/ BHI         VI_SetPipeRawSource_x8514
    VI_SetPipeRawSource_x8478:
    /*00008478*/ MOV         R4, #176                    @ 0xb0 
    /*0000847c*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00008480*/ MUL         R4, R4, R6 
    /*00008484*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00008488*/ ADD         R7, R4, #100                @ 0x64 
    /*0000848c*/ ADD         R7, R7, R5 
    /*00008490*/ MOV         R0, R7 
    /*00008494*/ BL          0x0000000000008494          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008498*/ CMP         R0, #0 
    /*0000849c*/ BNE         VI_SetPipeRawSource_x8564
    /*000084a0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000084a4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000084a8*/ LDR         R3, [R3, R6, LSL #2] 
    /*000084ac*/ CMP         R3, #0 
    /*000084b0*/ BEQ         VI_SetPipeRawSource_x852c
    /*000084b4*/ MOV         R1, R9 
    /*000084b8*/ MOV         R0, R6 
    /*000084bc*/ BL          0x00000000000084BC          @ VI_DRV_CheckPipeRawSource [R_ARM_CALL: .text+0x302ac] 
    /*000084c0*/ SUBS        R8, R0, #0 
    /*000084c4*/ BNE         VI_SetPipeRawSource_x8500
    /*000084c8*/ ADD         R4, R4, #140                @ 0x8c 
    /*000084cc*/ ADD         R1, SP, #12 
    /*000084d0*/ ADD         R5, R4, R5 
    /*000084d4*/ MOV         R0, R5 
    /*000084d8*/ BL          0x00000000000084D8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000084dc*/ MOV         R0, R6 
    /*000084e0*/ BL          0x00000000000084E0          @ VI_ReleaseSrcBuffer [R_ARM_CALL: .text+0x43ac] 
    /*000084e4*/ MOV         R1, R9 
    /*000084e8*/ MOV         R0, R6 
    /*000084ec*/ BL          0x00000000000084EC          @ VI_DRV_SetPipeRawSource [R_ARM_CALL: .text+0x30348] 
    /*000084f0*/ ADD         R1, SP, #12 
    /*000084f4*/ MOV         R8, R0 
    /*000084f8*/ MOV         R0, R5 
    /*000084fc*/ BL          0x00000000000084FC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_SetPipeRawSource_x8500:
    /*00008500*/ MOV         R0, R7 
    /*00008504*/ BL          0x0000000000008504          @ osal_up [R_ARM_CALL: +0x0] 
    VI_SetPipeRawSource_x8508:
    /*00008508*/ MOV         R0, R8 
    /*0000850c*/ ADD         SP, SP, #20 
    /*00008510*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetPipeRawSource_x8514:
    /*00008514*/ BL          0x000000000000778C 
    /*00008518*/ SUBS        R8, R0, #0 
    /*0000851c*/ BEQ         VI_SetPipeRawSource_x8478
    /*00008520*/ MOV         R0, R8 
    /*00008524*/ ADD         SP, SP, #20 
    /*00008528*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetPipeRawSource_x852c:
    /*0000852c*/ MOV         R0, R7 
    /*00008530*/ MOVW        R8, #32773                  @ 0x8005 
    /*00008534*/ BL          0x0000000000008534          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008538*/ MOVW        R3, #621                    @ 0x26d 
    /*0000853c*/ STR         R6, [SP, #4] 
    /*00008540*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*00008544*/ STR         R3, [SP] 
    /*00008548*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*0000854c*/ LDR         R3, [PC, #28]               @ 0x0000000000008570 
    /*00008550*/ MOV         R1, #16 
    /*00008554*/ MOV         R0, #3 
    /*00008558*/ MOVT        R8, #40976                  @ 0xa010 
    /*0000855c*/ BL          0x000000000000855C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008560*/ B           VI_SetPipeRawSource_x8508
    VI_SetPipeRawSource_x8564:
    /*00008564*/ MOV         R8, #65024                  @ 0xfe00 
    /*00008568*/ MOVT        R8, #65535                  @ 0xffff 
    /*0000856c*/ B           VI_SetPipeRawSource_x8508
    /*00008570*/ ANDEQ       R0, R0, R8, LSR #9 
FUNC_END VI_SetPipeRawSource


FUNC_BEGIN VI_GetPipeRawSource
    /*00008574*/ CMP         R0, #3 
    /*00008578*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000857c*/ MOV         R4, R0 
    /*00008580*/ SUB         SP, SP, #12 
    /*00008584*/ MOV         R6, R1 
    /*00008588*/ BHI         VI_GetPipeRawSource_x85a8
    VI_GetPipeRawSource_x858c:
    /*0000858c*/ MOV         R0, R6 
    /*00008590*/ BL          0x0000000000008590          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00008594*/ SUBS        R5, R0, #0 
    /*00008598*/ BEQ         VI_GetPipeRawSource_x85c0
    VI_GetPipeRawSource_x859c:
    /*0000859c*/ MOV         R0, R5 
    /*000085a0*/ ADD         SP, SP, #12 
    /*000085a4*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeRawSource_x85a8:
    /*000085a8*/ BL          0x000000000000778C 
    /*000085ac*/ SUBS        R5, R0, #0 
    /*000085b0*/ BEQ         VI_GetPipeRawSource_x858c
    /*000085b4*/ MOV         R0, R5 
    /*000085b8*/ ADD         SP, SP, #12 
    /*000085bc*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeRawSource_x85c0:
    /*000085c0*/ LDR         R3, [PC, #144]              @ 0x0000000000008658 
    /*000085c4*/ MOV         R7, #176                    @ 0xb0 
    /*000085c8*/ MLA         R7, R7, R4, R3 
    /*000085cc*/ MOV         R0, R7 
    /*000085d0*/ BL          0x00000000000085D0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000085d4*/ CMP         R0, #0 
    /*000085d8*/ BNE         VI_GetPipeRawSource_x8614
    /*000085dc*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000085e0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000085e4*/ LDR         R3, [R3, R4, LSL #2] 
    /*000085e8*/ CMP         R3, #0 
    /*000085ec*/ BEQ         VI_GetPipeRawSource_x8620
    /*000085f0*/ MOV         R1, R6 
    /*000085f4*/ MOV         R0, R4 
    /*000085f8*/ BL          0x00000000000085F8          @ VI_DRV_GetPipeRawSource [R_ARM_CALL: .text+0x303c8] 
    /*000085fc*/ MOV         R5, R0 
    /*00008600*/ MOV         R0, R7 
    /*00008604*/ BL          0x0000000000008604          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008608*/ MOV         R0, R5 
    /*0000860c*/ ADD         SP, SP, #12 
    /*00008610*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeRawSource_x8614:
    /*00008614*/ MOV         R5, #65024                  @ 0xfe00 
    /*00008618*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000861c*/ B           VI_GetPipeRawSource_x859c
    VI_GetPipeRawSource_x8620:
    /*00008620*/ MOV         R0, R7 
    /*00008624*/ MOVW        R5, #32773                  @ 0x8005 
    /*00008628*/ BL          0x0000000000008628          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000862c*/ MOVW        R3, #661                    @ 0x295 
    /*00008630*/ STR         R4, [SP, #4] 
    /*00008634*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*00008638*/ STR         R3, [SP] 
    /*0000863c*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*00008640*/ LDR         R3, [PC, #20]               @ 0x000000000000865c 
    /*00008644*/ MOV         R1, #16 
    /*00008648*/ MOV         R0, #3 
    /*0000864c*/ MOVT        R5, #40976                  @ 0xa010 
    /*00008650*/ BL          0x0000000000008650          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008654*/ B           VI_GetPipeRawSource_x859c
    /*00008658*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0000865c*/ @           <UNDEFINED> instruction: 0x000004bc 
FUNC_END VI_GetPipeRawSource


FUNC_BEGIN VI_SetPipeRepeatMode
    /*00008660*/ CMP         R0, #3 
    /*00008664*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00008668*/ MOV         R7, R0 
    /*0000866c*/ SUB         SP, SP, #16 
    /*00008670*/ MOV         R9, R1 
    /*00008674*/ BHI         VI_SetPipeRepeatMode_x86e0
    VI_SetPipeRepeatMode_x8678:
    /*00008678*/ MOV         R4, #176                    @ 0xb0 
    /*0000867c*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00008680*/ MUL         R4, R4, R7 
    /*00008684*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00008688*/ ADD         R8, R4, #100                @ 0x64 
    /*0000868c*/ ADD         R8, R8, R5 
    /*00008690*/ MOV         R0, R8 
    /*00008694*/ BL          0x0000000000008694          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008698*/ CMP         R0, #0 
    /*0000869c*/ BNE         VI_SetPipeRepeatMode_x8760
    /*000086a0*/ MOVW        SL, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000086a4*/ MOVT        SL, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000086a8*/ LDR         R3, [SL, R7, LSL #2] 
    /*000086ac*/ CMP         R3, #0 
    /*000086b0*/ BEQ         VI_SetPipeRepeatMode_x86f8
    /*000086b4*/ MOV         R0, R9 
    /*000086b8*/ BL          0x00000000000086B8          @ VI_DRV_CheckPipeRepeatMode [R_ARM_CALL: .text+0x303f0] 
    /*000086bc*/ SUBS        R6, R0, #0 
    /*000086c0*/ MOVWNE      R6, #32771                  @ 0x8003 
    /*000086c4*/ MOVTNE      R6, #40976                  @ 0xa010 
    /*000086c8*/ BEQ         VI_SetPipeRepeatMode_x8728
    VI_SetPipeRepeatMode_x86cc:
    /*000086cc*/ MOV         R0, R8 
    /*000086d0*/ BL          0x00000000000086D0          @ osal_up [R_ARM_CALL: +0x0] 
    VI_SetPipeRepeatMode_x86d4:
    /*000086d4*/ MOV         R0, R6 
    /*000086d8*/ ADD         SP, SP, #16 
    /*000086dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SetPipeRepeatMode_x86e0:
    /*000086e0*/ BL          0x000000000000778C 
    /*000086e4*/ SUBS        R6, R0, #0 
    /*000086e8*/ BEQ         VI_SetPipeRepeatMode_x8678
    /*000086ec*/ MOV         R0, R6 
    /*000086f0*/ ADD         SP, SP, #16 
    /*000086f4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SetPipeRepeatMode_x86f8:
    /*000086f8*/ MOVW        R3, #689                    @ 0x2b1 
    /*000086fc*/ STR         R7, [SP, #4] 
    /*00008700*/ STR         R3, [SP] 
    /*00008704*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c28] 
    /*00008708*/ LDR         R3, [PC, #92]               @ 0x000000000000876c 
    /*0000870c*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c28] 
    /*00008710*/ MOV         R1, #16 
    /*00008714*/ MOV         R0, #3 
    /*00008718*/ MOVW        R6, #32773                  @ 0x8005 
    /*0000871c*/ BL          0x000000000000871C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008720*/ MOVT        R6, #40976                  @ 0xa010 
    /*00008724*/ B           VI_SetPipeRepeatMode_x86cc
    VI_SetPipeRepeatMode_x8728:
    /*00008728*/ ADD         R4, R4, #140                @ 0x8c 
    /*0000872c*/ ADD         R1, SP, #12 
    /*00008730*/ ADD         R5, R4, R5 
    /*00008734*/ LDR         R4, [SL, R7, LSL #2] 
    /*00008738*/ MOV         R0, R5 
    /*0000873c*/ BL          0x000000000000873C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008740*/ ADD         R3, R4, #36864              @ 0x9000 
    /*00008744*/ MOV         R2, #1 
    /*00008748*/ MOV         R0, R5 
    /*0000874c*/ ADD         R1, SP, #12 
    /*00008750*/ STR         R9, [R3, #2040]             @ 0x7f8 
    /*00008754*/ STR         R2, [R3, #2220]             @ 0x8ac 
    /*00008758*/ BL          0x0000000000008758          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000875c*/ B           VI_SetPipeRepeatMode_x86cc
    VI_SetPipeRepeatMode_x8760:
    /*00008760*/ MOV         R6, #65024                  @ 0xfe00 
    /*00008764*/ MOVT        R6, #65535                  @ 0xffff 
    /*00008768*/ B           VI_SetPipeRepeatMode_x86d4
    /*0000876c*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VI_SetPipeRepeatMode


FUNC_BEGIN VI_GetPipeRepeatMode
    /*00008770*/ CMP         R0, #3 
    /*00008774*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00008778*/ MOV         R4, R0 
    /*0000877c*/ SUB         SP, SP, #12 
    /*00008780*/ MOV         R6, R1 
    /*00008784*/ BHI         VI_GetPipeRepeatMode_x87a4
    VI_GetPipeRepeatMode_x8788:
    /*00008788*/ MOV         R0, R6 
    /*0000878c*/ BL          0x000000000000878C          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00008790*/ SUBS        R5, R0, #0 
    /*00008794*/ BEQ         VI_GetPipeRepeatMode_x87bc
    VI_GetPipeRepeatMode_x8798:
    /*00008798*/ MOV         R0, R5 
    /*0000879c*/ ADD         SP, SP, #12 
    /*000087a0*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeRepeatMode_x87a4:
    /*000087a4*/ BL          0x000000000000778C 
    /*000087a8*/ SUBS        R5, R0, #0 
    /*000087ac*/ BEQ         VI_GetPipeRepeatMode_x8788
    /*000087b0*/ MOV         R0, R5 
    /*000087b4*/ ADD         SP, SP, #12 
    /*000087b8*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeRepeatMode_x87bc:
    /*000087bc*/ LDR         R3, [PC, #132]              @ 0x0000000000008848 
    /*000087c0*/ MOV         R7, #176                    @ 0xb0 
    /*000087c4*/ MLA         R7, R7, R4, R3 
    /*000087c8*/ MOV         R0, R7 
    /*000087cc*/ BL          0x00000000000087CC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000087d0*/ SUBS        R5, R0, #0 
    /*000087d4*/ BNE         VI_GetPipeRepeatMode_x883c
    /*000087d8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000087dc*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000087e0*/ LDR         R3, [R3, R4, LSL #2] 
    /*000087e4*/ CMP         R3, #0 
    /*000087e8*/ ADDNE       R3, R3, #36864              @ 0x9000 
    /*000087ec*/ LDRNE       R3, [R3, #2040]             @ 0x7f8 
    /*000087f0*/ STRNE       R3, [R6] 
    /*000087f4*/ BEQ         VI_GetPipeRepeatMode_x880c
    VI_GetPipeRepeatMode_x87f8:
    /*000087f8*/ MOV         R0, R7 
    /*000087fc*/ BL          0x00000000000087FC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008800*/ MOV         R0, R5 
    /*00008804*/ ADD         SP, SP, #12 
    /*00008808*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeRepeatMode_x880c:
    /*0000880c*/ MOVW        R3, #734                    @ 0x2de 
    /*00008810*/ STR         R4, [SP, #4] 
    /*00008814*/ STR         R3, [SP] 
    /*00008818*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c28] 
    /*0000881c*/ LDR         R3, [PC, #40]               @ 0x000000000000884c 
    /*00008820*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c28] 
    /*00008824*/ MOV         R1, #16 
    /*00008828*/ MOV         R0, #3 
    /*0000882c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00008830*/ BL          0x0000000000008830          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008834*/ MOVT        R5, #40976                  @ 0xa010 
    /*00008838*/ B           VI_GetPipeRepeatMode_x87f8
    VI_GetPipeRepeatMode_x883c:
    /*0000883c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00008840*/ MOVT        R5, #65535                  @ 0xffff 
    /*00008844*/ B           VI_GetPipeRepeatMode_x8798
    /*00008848*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0000884c*/ ANDEQ       R0, R0, R8, ROR #9 
FUNC_END VI_GetPipeRepeatMode


FUNC_BEGIN VI_SetPipeVCNumber
    /*00008850*/ CMP         R0, #3 
    /*00008854*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00008858*/ MOV         R4, R0 
    /*0000885c*/ SUB         SP, SP, #8 
    /*00008860*/ MOV         R8, R1 
    /*00008864*/ BHI         VI_SetPipeVCNumber_x88dc
    VI_SetPipeVCNumber_x8868:
    /*00008868*/ LDR         R3, [PC, #308]              @ 0x00000000000089a4 
    /*0000886c*/ MOV         R5, #176                    @ 0xb0 
    /*00008870*/ MLA         R5, R5, R4, R3 
    /*00008874*/ MOV         R0, R5 
    /*00008878*/ BL          0x0000000000008878          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000887c*/ SUBS        R6, R0, #0 
    /*00008880*/ BNE         VI_SetPipeVCNumber_x8928
    /*00008884*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00008888*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000888c*/ LDR         R7, [R3, R4, LSL #2] 
    /*00008890*/ CMP         R7, #0 
    /*00008894*/ BEQ         VI_SetPipeVCNumber_x88f0
    /*00008898*/ ADD         R3, R7, #36864              @ 0x9000 
    /*0000889c*/ LDR         R3, [R3, #1480]             @ 0x5c8 
    /*000088a0*/ CMP         R3, #1 
    /*000088a4*/ BEQ         VI_SetPipeVCNumber_x896c
    /*000088a8*/ CMP         R8, #3 
    /*000088ac*/ BHI         VI_SetPipeVCNumber_x8934
    /*000088b0*/ MOV         R1, #1 
    /*000088b4*/ ADD         R7, R7, #12288              @ 0x3000 
    /*000088b8*/ MOV         R0, R4 
    /*000088bc*/ LSL         R1, R1, R8 
    /*000088c0*/ BL          0x00000000000088C0          @ VI_DRV_SetIspIdSel [R_ARM_CALL: .text+0x37ba4] 
    /*000088c4*/ MOV         R0, R5 
    /*000088c8*/ STR         R8, [R7, #2220]             @ 0x8ac 
    /*000088cc*/ BL          0x00000000000088CC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000088d0*/ MOV         R0, R6 
    VI_SetPipeVCNumber_x88d4:
    /*000088d4*/ ADD         SP, SP, #8 
    /*000088d8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SetPipeVCNumber_x88dc:
    /*000088dc*/ BL          0x000000000000774C 
    /*000088e0*/ CMP         R0, #0 
    /*000088e4*/ BEQ         VI_SetPipeVCNumber_x8868
    /*000088e8*/ ADD         SP, SP, #8 
    /*000088ec*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SetPipeVCNumber_x88f0:
    /*000088f0*/ MOV         R0, R5 
    /*000088f4*/ BL          0x00000000000088F4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000088f8*/ MOV         R3, #760                    @ 0x2f8 
    /*000088fc*/ STR         R4, [SP, #4] 
    /*00008900*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*00008904*/ STR         R3, [SP] 
    /*00008908*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*0000890c*/ LDR         R3, [PC, #148]              @ 0x00000000000089a8 
    /*00008910*/ MOV         R1, #16 
    /*00008914*/ MOV         R0, #3 
    /*00008918*/ BL          0x0000000000008918          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000891c*/ MOVW        R0, #32773                  @ 0x8005 
    /*00008920*/ MOVT        R0, #40976                  @ 0xa010 
    /*00008924*/ B           VI_SetPipeVCNumber_x88d4
    VI_SetPipeVCNumber_x8928:
    /*00008928*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000892c*/ MOVT        R0, #65535                  @ 0xffff 
    /*00008930*/ B           VI_SetPipeVCNumber_x88d4
    VI_SetPipeVCNumber_x8934:
    /*00008934*/ MOV         R0, R5 
    /*00008938*/ BL          0x0000000000008938          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000893c*/ MOVW        R2, #774                    @ 0x306 
    /*00008940*/ MOV         R3, #4 
    /*00008944*/ MOV         R1, #16 
    /*00008948*/ STM         SP, {R2, R3} 
    /*0000894c*/ MOV         R0, #3 
    /*00008950*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1dd8] 
    /*00008954*/ LDR         R3, [PC, #76]               @ 0x00000000000089a8 
    /*00008958*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1dd8] 
    /*0000895c*/ BL          0x000000000000895C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008960*/ MOVW        R0, #32771                  @ 0x8003 
    /*00008964*/ MOVT        R0, #40976                  @ 0xa010 
    /*00008968*/ B           VI_SetPipeVCNumber_x88d4
    VI_SetPipeVCNumber_x896c:
    /*0000896c*/ MOV         R0, R5 
    /*00008970*/ BL          0x0000000000008970          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008974*/ MOVW        R3, #767                    @ 0x2ff 
    /*00008978*/ STR         R4, [SP, #4] 
    /*0000897c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d88] 
    /*00008980*/ STR         R3, [SP] 
    /*00008984*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d88] 
    /*00008988*/ LDR         R3, [PC, #24]               @ 0x00000000000089a8 
    /*0000898c*/ MOV         R1, #16 
    /*00008990*/ MOV         R0, #3 
    /*00008994*/ BL          0x0000000000008994          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008998*/ MOVW        R0, #32777                  @ 0x8009 
    /*0000899c*/ MOVT        R0, #40976                  @ 0xa010 
    /*000089a0*/ B           VI_SetPipeVCNumber_x88d4
    /*000089a4*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*000089a8*/ ANDEQ       R0, R0, R0, LSL #10 
FUNC_END VI_SetPipeVCNumber


FUNC_BEGIN VI_GetPipeVCNumber
    /*000089ac*/ CMP         R0, #3 
    /*000089b0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000089b4*/ MOV         R4, R0 
    /*000089b8*/ SUB         SP, SP, #12 
    /*000089bc*/ MOV         R6, R1 
    /*000089c0*/ BHI         VI_GetPipeVCNumber_x89e0
    VI_GetPipeVCNumber_x89c4:
    /*000089c4*/ MOV         R0, R6 
    /*000089c8*/ BL          0x00000000000089C8          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*000089cc*/ SUBS        R5, R0, #0 
    /*000089d0*/ BEQ         VI_GetPipeVCNumber_x89f8
    VI_GetPipeVCNumber_x89d4:
    /*000089d4*/ MOV         R0, R5 
    /*000089d8*/ ADD         SP, SP, #12 
    /*000089dc*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeVCNumber_x89e0:
    /*000089e0*/ BL          0x000000000000774C 
    /*000089e4*/ SUBS        R5, R0, #0 
    /*000089e8*/ BEQ         VI_GetPipeVCNumber_x89c4
    /*000089ec*/ MOV         R0, R5 
    /*000089f0*/ ADD         SP, SP, #12 
    /*000089f4*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeVCNumber_x89f8:
    /*000089f8*/ LDR         R3, [PC, #140]              @ 0x0000000000008a8c 
    /*000089fc*/ MOV         R7, #176                    @ 0xb0 
    /*00008a00*/ MLA         R7, R7, R4, R3 
    /*00008a04*/ MOV         R0, R7 
    /*00008a08*/ BL          0x0000000000008A08          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008a0c*/ CMP         R0, #0 
    /*00008a10*/ BNE         VI_GetPipeVCNumber_x8a48
    /*00008a14*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00008a18*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00008a1c*/ LDR         R3, [R3, R4, LSL #2] 
    /*00008a20*/ CMP         R3, #0 
    /*00008a24*/ BEQ         VI_GetPipeVCNumber_x8a54
    /*00008a28*/ ADD         R3, R3, #12288              @ 0x3000 
    /*00008a2c*/ MOV         R0, R7 
    /*00008a30*/ LDR         R3, [R3, #2220]             @ 0x8ac 
    /*00008a34*/ STR         R3, [R6] 
    /*00008a38*/ BL          0x0000000000008A38          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008a3c*/ MOV         R0, R5 
    /*00008a40*/ ADD         SP, SP, #12 
    /*00008a44*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeVCNumber_x8a48:
    /*00008a48*/ MOV         R5, #65024                  @ 0xfe00 
    /*00008a4c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00008a50*/ B           VI_GetPipeVCNumber_x89d4
    VI_GetPipeVCNumber_x8a54:
    /*00008a54*/ MOV         R0, R7 
    /*00008a58*/ MOVW        R5, #32773                  @ 0x8005 
    /*00008a5c*/ BL          0x0000000000008A5C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008a60*/ MOVW        R3, #801                    @ 0x321 
    /*00008a64*/ STR         R4, [SP, #4] 
    /*00008a68*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*00008a6c*/ STR         R3, [SP] 
    /*00008a70*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*00008a74*/ LDR         R3, [PC, #20]               @ 0x0000000000008a90 
    /*00008a78*/ MOV         R1, #16 
    /*00008a7c*/ MOV         R0, #3 
    /*00008a80*/ MOVT        R5, #40976                  @ 0xa010 
    /*00008a84*/ BL          0x0000000000008A84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008a88*/ B           VI_GetPipeVCNumber_x89d4
    /*00008a8c*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00008a90*/ ANDEQ       R0, R0, R4, LSL R5 
FUNC_END VI_GetPipeVCNumber


FUNC_BEGIN VI_SetCommFrameIntAttr
    /*00008a94*/ CMP         R0, #3 
    /*00008a98*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00008a9c*/ MOV         R4, R0 
    /*00008aa0*/ SUB         SP, SP, #20 
    /*00008aa4*/ MOV         R6, R1 
    /*00008aa8*/ BHI         VI_SetCommFrameIntAttr_x8ac8
    VI_SetCommFrameIntAttr_x8aac:
    /*00008aac*/ MOV         R0, R6 
    /*00008ab0*/ BL          0x0000000000008AB0          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00008ab4*/ SUBS        R5, R0, #0 
    /*00008ab8*/ BEQ         VI_SetCommFrameIntAttr_x8ae0
    VI_SetCommFrameIntAttr_x8abc:
    /*00008abc*/ MOV         R0, R5 
    /*00008ac0*/ ADD         SP, SP, #20 
    /*00008ac4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetCommFrameIntAttr_x8ac8:
    /*00008ac8*/ BL          0x000000000000778C 
    /*00008acc*/ SUBS        R5, R0, #0 
    /*00008ad0*/ BEQ         VI_SetCommFrameIntAttr_x8aac
    /*00008ad4*/ MOV         R0, R5 
    /*00008ad8*/ ADD         SP, SP, #20 
    /*00008adc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetCommFrameIntAttr_x8ae0:
    /*00008ae0*/ MOV         R7, #176                    @ 0xb0 
    /*00008ae4*/ MOVW        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00008ae8*/ MUL         R7, R7, R4 
    /*00008aec*/ MOVT        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00008af0*/ ADD         R8, R7, #100                @ 0x64 
    /*00008af4*/ ADD         R8, R8, R9 
    /*00008af8*/ MOV         R0, R8 
    /*00008afc*/ BL          0x0000000000008AFC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008b00*/ CMP         R0, #0 
    /*00008b04*/ BNE         VI_SetCommFrameIntAttr_x8be4
    /*00008b08*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00008b0c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00008b10*/ LDR         R3, [R3, R4, LSL #2] 
    /*00008b14*/ CMP         R3, #0 
    /*00008b18*/ BEQ         VI_SetCommFrameIntAttr_x8bb4
    /*00008b1c*/ ADD         R3, R3, #36864              @ 0x9000 
    /*00008b20*/ LDR         R3, [R3, #1480]             @ 0x5c8 
    /*00008b24*/ CMP         R3, #1 
    /*00008b28*/ BEQ         VI_SetCommFrameIntAttr_x8b54
    /*00008b2c*/ MOV         R1, R6 
    /*00008b30*/ MOV         R0, R4 
    /*00008b34*/ BL          0x0000000000008B34          @ VI_DRV_CheckPipeFrameInterruptAttr [R_ARM_CALL: .text+0x3391c] 
    /*00008b38*/ SUBS        R5, R0, #0 
    /*00008b3c*/ BEQ         VI_SetCommFrameIntAttr_x8b84
    VI_SetCommFrameIntAttr_x8b40:
    /*00008b40*/ MOV         R0, R8 
    /*00008b44*/ BL          0x0000000000008B44          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008b48*/ MOV         R0, R5 
    /*00008b4c*/ ADD         SP, SP, #20 
    /*00008b50*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetCommFrameIntAttr_x8b54:
    /*00008b54*/ MOVW        R3, #838                    @ 0x346 
    /*00008b58*/ STR         R4, [SP, #4] 
    /*00008b5c*/ STR         R3, [SP] 
    /*00008b60*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e20] 
    /*00008b64*/ LDR         R3, [PC, #132]              @ 0x0000000000008bf0 
    /*00008b68*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e20] 
    /*00008b6c*/ MOV         R1, #16 
    /*00008b70*/ MOV         R0, #3 
    /*00008b74*/ MOVW        R5, #32777                  @ 0x8009 
    /*00008b78*/ BL          0x0000000000008B78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008b7c*/ MOVT        R5, #40976                  @ 0xa010 
    /*00008b80*/ B           VI_SetCommFrameIntAttr_x8b40
    VI_SetCommFrameIntAttr_x8b84:
    /*00008b84*/ ADD         R7, R7, #140                @ 0x8c 
    /*00008b88*/ ADD         R1, SP, #12 
    /*00008b8c*/ ADD         R9, R7, R9 
    /*00008b90*/ MOV         R0, R9 
    /*00008b94*/ BL          0x0000000000008B94          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008b98*/ MOV         R1, R6 
    /*00008b9c*/ MOV         R0, R4 
    /*00008ba0*/ BL          0x0000000000008BA0          @ VI_DRV_SetPipeFrameInterruptAttr [R_ARM_CALL: .text+0x33a70] 
    /*00008ba4*/ ADD         R1, SP, #12 
    /*00008ba8*/ MOV         R0, R9 
    /*00008bac*/ BL          0x0000000000008BAC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008bb0*/ B           VI_SetCommFrameIntAttr_x8b40
    VI_SetCommFrameIntAttr_x8bb4:
    /*00008bb4*/ MOVW        R3, #831                    @ 0x33f 
    /*00008bb8*/ STR         R4, [SP, #4] 
    /*00008bbc*/ STR         R3, [SP] 
    /*00008bc0*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*00008bc4*/ LDR         R3, [PC, #36]               @ 0x0000000000008bf0 
    /*00008bc8*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*00008bcc*/ MOV         R1, #16 
    /*00008bd0*/ MOV         R0, #3 
    /*00008bd4*/ MOVW        R5, #32773                  @ 0x8005 
    /*00008bd8*/ BL          0x0000000000008BD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008bdc*/ MOVT        R5, #40976                  @ 0xa010 
    /*00008be0*/ B           VI_SetCommFrameIntAttr_x8b40
    VI_SetCommFrameIntAttr_x8be4:
    /*00008be4*/ MOV         R5, #65024                  @ 0xfe00 
    /*00008be8*/ MOVT        R5, #65535                  @ 0xffff 
    /*00008bec*/ B           VI_SetCommFrameIntAttr_x8abc
    /*00008bf0*/ ANDEQ       R0, R0, R8, LSR #10 
FUNC_END VI_SetCommFrameIntAttr


FUNC_BEGIN VI_SetPipeFrameInterruptAttr
    VI_SetPipeFrameInterruptAttr_x8bf4:
    /*00008bf4*/ B           VI_SetPipeFrameInterruptAttr_x8bf4@ VI_SetCommFrameIntAttr [R_ARM_JUMP24: .text+0x8a94] 
FUNC_END VI_SetPipeFrameInterruptAttr


FUNC_BEGIN VI_SetVpssFrameInterruptAttr
    /*00008bf8*/ PUSH        {R4, R5, LR} 
    /*00008bfc*/ SUB         SP, SP, #12 
    /*00008c00*/ MOV         R5, R1 
    /*00008c04*/ MOV         R4, R0 
    /*00008c08*/ BL          0x0000000000008C08          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00008c0c*/ CMP         R0, #3 
    /*00008c10*/ BNE         VI_SetVpssFrameInterruptAttr_x8c28
    /*00008c14*/ MOV         R1, R5 
    /*00008c18*/ MOV         R0, R4 
    /*00008c1c*/ ADD         SP, SP, #12 
    /*00008c20*/ POP         {R4, R5, LR} 
    VI_SetVpssFrameInterruptAttr_x8c24:
    /*00008c24*/ B           VI_SetVpssFrameInterruptAttr_x8c24@ VI_SetCommFrameIntAttr [R_ARM_JUMP24: .text+0x8a94] 
    VI_SetVpssFrameInterruptAttr_x8c28:
    /*00008c28*/ STR         R4, [SP, #4] 
    /*00008c2c*/ MOV         R3, #880                    @ 0x370 
    /*00008c30*/ MOV         R1, #16 
    /*00008c34*/ STR         R3, [SP] 
    /*00008c38*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e78] 
    /*00008c3c*/ LDR         R3, [PC, #24]               @ 0x0000000000008c5c 
    /*00008c40*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e78] 
    /*00008c44*/ MOV         R0, #3 
    /*00008c48*/ BL          0x0000000000008C48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008c4c*/ MOVW        R0, #32777                  @ 0x8009 
    /*00008c50*/ MOVT        R0, #40976                  @ 0xa010 
    /*00008c54*/ ADD         SP, SP, #12 
    /*00008c58*/ POP         {R4, R5, PC} 
    /*00008c5c*/ ANDEQ       R0, R0, R0, ASR #10 
FUNC_END VI_SetVpssFrameInterruptAttr


FUNC_BEGIN VI_IspGetPipeFrameInterruptAttr
    /*00008c60*/ CMP         R0, #3 
    /*00008c64*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00008c68*/ MOV         R4, R0 
    /*00008c6c*/ SUB         SP, SP, #20 
    /*00008c70*/ MOV         R6, R1 
    /*00008c74*/ BHI         VI_IspGetPipeFrameInterruptAttr_x8c94
    VI_IspGetPipeFrameInterruptAttr_x8c78:
    /*00008c78*/ MOV         R0, R6 
    /*00008c7c*/ BL          0x0000000000008C7C          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00008c80*/ SUBS        R5, R0, #0 
    /*00008c84*/ BEQ         VI_IspGetPipeFrameInterruptAttr_x8cac
    VI_IspGetPipeFrameInterruptAttr_x8c88:
    /*00008c88*/ MOV         R0, R5 
    /*00008c8c*/ ADD         SP, SP, #20 
    /*00008c90*/ POP         {R4, R5, R6, R7, PC} 
    VI_IspGetPipeFrameInterruptAttr_x8c94:
    /*00008c94*/ BL          0x000000000000778C 
    /*00008c98*/ SUBS        R5, R0, #0 
    /*00008c9c*/ BEQ         VI_IspGetPipeFrameInterruptAttr_x8c78
    /*00008ca0*/ MOV         R0, R5 
    /*00008ca4*/ ADD         SP, SP, #20 
    /*00008ca8*/ POP         {R4, R5, R6, R7, PC} 
    VI_IspGetPipeFrameInterruptAttr_x8cac:
    /*00008cac*/ LDR         R3, [PC, #132]              @ 0x0000000000008d38 
    /*00008cb0*/ MOV         R7, #176                    @ 0xb0 
    /*00008cb4*/ ADD         R1, SP, #12 
    /*00008cb8*/ MLA         R7, R7, R4, R3 
    /*00008cbc*/ MOV         R0, R7 
    /*00008cc0*/ BL          0x0000000000008CC0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008cc4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00008cc8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00008ccc*/ LDR         R3, [R3, R4, LSL #2] 
    /*00008cd0*/ CMP         R3, #0 
    /*00008cd4*/ BEQ         VI_IspGetPipeFrameInterruptAttr_x8cfc
    /*00008cd8*/ MOV         R1, R6 
    /*00008cdc*/ MOV         R0, R4 
    /*00008ce0*/ BL          0x0000000000008CE0          @ VI_DRV_GetPipeFrameInterruptAttr [R_ARM_CALL: .text+0x33b9c] 
    /*00008ce4*/ MOV         R0, R7 
    /*00008ce8*/ ADD         R1, SP, #12 
    /*00008cec*/ BL          0x0000000000008CEC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008cf0*/ MOV         R0, R5 
    /*00008cf4*/ ADD         SP, SP, #20 
    /*00008cf8*/ POP         {R4, R5, R6, R7, PC} 
    VI_IspGetPipeFrameInterruptAttr_x8cfc:
    /*00008cfc*/ ADD         R1, SP, #12 
    /*00008d00*/ MOV         R0, R7 
    /*00008d04*/ BL          0x0000000000008D04          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008d08*/ MOV         R3, #908                    @ 0x38c 
    /*00008d0c*/ STR         R4, [SP, #4] 
    /*00008d10*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*00008d14*/ STR         R3, [SP] 
    /*00008d18*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*00008d1c*/ LDR         R3, [PC, #24]               @ 0x0000000000008d3c 
    /*00008d20*/ MOV         R1, #16 
    /*00008d24*/ MOV         R0, #3 
    /*00008d28*/ MOVW        R5, #32773                  @ 0x8005 
    /*00008d2c*/ BL          0x0000000000008D2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008d30*/ MOVT        R5, #40976                  @ 0xa010 
    /*00008d34*/ B           VI_IspGetPipeFrameInterruptAttr_x8c88
    /*00008d38*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00008d3c*/ ANDEQ       R0, R0, R0, ROR #10 
FUNC_END VI_IspGetPipeFrameInterruptAttr


FUNC_BEGIN VI_GetPipeFrameInterruptAttr
    /*00008d40*/ CMP         R0, #3 
    /*00008d44*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00008d48*/ MOV         R4, R0 
    /*00008d4c*/ SUB         SP, SP, #12 
    /*00008d50*/ MOV         R6, R1 
    /*00008d54*/ BHI         VI_GetPipeFrameInterruptAttr_x8d74
    VI_GetPipeFrameInterruptAttr_x8d58:
    /*00008d58*/ MOV         R0, R6 
    /*00008d5c*/ BL          0x0000000000008D5C          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00008d60*/ SUBS        R5, R0, #0 
    /*00008d64*/ BEQ         VI_GetPipeFrameInterruptAttr_x8d8c
    VI_GetPipeFrameInterruptAttr_x8d68:
    /*00008d68*/ MOV         R0, R5 
    /*00008d6c*/ ADD         SP, SP, #12 
    /*00008d70*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeFrameInterruptAttr_x8d74:
    /*00008d74*/ BL          0x000000000000778C 
    /*00008d78*/ SUBS        R5, R0, #0 
    /*00008d7c*/ BEQ         VI_GetPipeFrameInterruptAttr_x8d58
    /*00008d80*/ MOV         R0, R5 
    /*00008d84*/ ADD         SP, SP, #12 
    /*00008d88*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeFrameInterruptAttr_x8d8c:
    /*00008d8c*/ LDR         R3, [PC, #132]              @ 0x0000000000008e18 
    /*00008d90*/ MOV         R7, #176                    @ 0xb0 
    /*00008d94*/ MLA         R7, R7, R4, R3 
    /*00008d98*/ MOV         R0, R7 
    /*00008d9c*/ BL          0x0000000000008D9C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008da0*/ SUBS        R5, R0, #0 
    /*00008da4*/ BNE         VI_GetPipeFrameInterruptAttr_x8e0c
    /*00008da8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00008dac*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00008db0*/ LDR         R3, [R3, R4, LSL #2] 
    /*00008db4*/ CMP         R3, #0 
    /*00008db8*/ BEQ         VI_GetPipeFrameInterruptAttr_x8ddc
    /*00008dbc*/ MOV         R1, R6 
    /*00008dc0*/ MOV         R0, R4 
    /*00008dc4*/ BL          0x0000000000008DC4          @ VI_DRV_GetPipeFrameInterruptAttr [R_ARM_CALL: .text+0x33b9c] 
    VI_GetPipeFrameInterruptAttr_x8dc8:
    /*00008dc8*/ MOV         R0, R7 
    /*00008dcc*/ BL          0x0000000000008DCC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008dd0*/ MOV         R0, R5 
    /*00008dd4*/ ADD         SP, SP, #12 
    /*00008dd8*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeFrameInterruptAttr_x8ddc:
    /*00008ddc*/ MOVW        R3, #934                    @ 0x3a6 
    /*00008de0*/ STR         R4, [SP, #4] 
    /*00008de4*/ STR         R3, [SP] 
    /*00008de8*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*00008dec*/ LDR         R3, [PC, #40]               @ 0x0000000000008e1c 
    /*00008df0*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*00008df4*/ MOV         R1, #16 
    /*00008df8*/ MOV         R0, #3 
    /*00008dfc*/ MOVW        R5, #32773                  @ 0x8005 
    /*00008e00*/ BL          0x0000000000008E00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008e04*/ MOVT        R5, #40976                  @ 0xa010 
    /*00008e08*/ B           VI_GetPipeFrameInterruptAttr_x8dc8
    VI_GetPipeFrameInterruptAttr_x8e0c:
    /*00008e0c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00008e10*/ MOVT        R5, #65535                  @ 0xffff 
    /*00008e14*/ B           VI_GetPipeFrameInterruptAttr_x8d68
    /*00008e18*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00008e1c*/ ANDEQ       R0, R0, R0, LSL #11 
FUNC_END VI_GetPipeFrameInterruptAttr


FUNC_BEGIN VI_SetPipeNRXParam
    /*00008e20*/ CMP         R0, #3 
    /*00008e24*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00008e28*/ MOV         R4, R0 
    /*00008e2c*/ SUB         SP, SP, #20 
    /*00008e30*/ MOV         R6, R1 
    /*00008e34*/ BHI         VI_SetPipeNRXParam_x8e54
    VI_SetPipeNRXParam_x8e38:
    /*00008e38*/ MOV         R0, R6 
    /*00008e3c*/ BL          0x0000000000008E3C          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00008e40*/ SUBS        R5, R0, #0 
    /*00008e44*/ BEQ         VI_SetPipeNRXParam_x8e6c
    VI_SetPipeNRXParam_x8e48:
    /*00008e48*/ MOV         R0, R5 
    /*00008e4c*/ ADD         SP, SP, #20 
    /*00008e50*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetPipeNRXParam_x8e54:
    /*00008e54*/ BL          0x000000000000778C 
    /*00008e58*/ SUBS        R5, R0, #0 
    /*00008e5c*/ BEQ         VI_SetPipeNRXParam_x8e38
    /*00008e60*/ MOV         R0, R5 
    /*00008e64*/ ADD         SP, SP, #20 
    /*00008e68*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetPipeNRXParam_x8e6c:
    /*00008e6c*/ MOV         R7, #176                    @ 0xb0 
    /*00008e70*/ MOVW        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00008e74*/ MUL         R7, R7, R4 
    /*00008e78*/ MOVT        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00008e7c*/ ADD         R9, R7, #100                @ 0x64 
    /*00008e80*/ ADD         R9, R9, R8 
    /*00008e84*/ MOV         R0, R9 
    /*00008e88*/ BL          0x0000000000008E88          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008e8c*/ CMP         R0, #0 
    /*00008e90*/ BNE         VI_SetPipeNRXParam_x8f00
    /*00008e94*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00008e98*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00008e9c*/ LDR         R3, [R3, R4, LSL #2] 
    /*00008ea0*/ CMP         R3, #0 
    /*00008ea4*/ BEQ         VI_SetPipeNRXParam_x8f0c
    /*00008ea8*/ MOV         R1, R6 
    /*00008eac*/ MOV         R0, R4 
    /*00008eb0*/ BL          0x0000000000008EB0          @ VI_DRV_CheckNRXParam [R_ARM_CALL: .text+0x30e6c] 
    /*00008eb4*/ SUBS        R5, R0, #0 
    /*00008eb8*/ BEQ         VI_SetPipeNRXParam_x8ed0
    VI_SetPipeNRXParam_x8ebc:
    /*00008ebc*/ MOV         R0, R9 
    /*00008ec0*/ BL          0x0000000000008EC0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008ec4*/ MOV         R0, R5 
    /*00008ec8*/ ADD         SP, SP, #20 
    /*00008ecc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetPipeNRXParam_x8ed0:
    /*00008ed0*/ ADD         R7, R7, #140                @ 0x8c 
    /*00008ed4*/ ADD         R1, SP, #12 
    /*00008ed8*/ ADD         R8, R7, R8 
    /*00008edc*/ MOV         R0, R8 
    /*00008ee0*/ BL          0x0000000000008EE0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008ee4*/ MOV         R1, R6 
    /*00008ee8*/ MOV         R0, R4 
    /*00008eec*/ BL          0x0000000000008EEC          @ VI_DRV_SetPipeNRXParam [R_ARM_CALL: .text+0x30f64] 
    /*00008ef0*/ ADD         R1, SP, #12 
    /*00008ef4*/ MOV         R0, R8 
    /*00008ef8*/ BL          0x0000000000008EF8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008efc*/ B           VI_SetPipeNRXParam_x8ebc
    VI_SetPipeNRXParam_x8f00:
    /*00008f00*/ MOV         R5, #65024                  @ 0xfe00 
    /*00008f04*/ MOVT        R5, #65535                  @ 0xffff 
    /*00008f08*/ B           VI_SetPipeNRXParam_x8e48
    VI_SetPipeNRXParam_x8f0c:
    /*00008f0c*/ MOV         R0, R9 
    /*00008f10*/ MOVW        R5, #32773                  @ 0x8005 
    /*00008f14*/ BL          0x0000000000008F14          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008f18*/ MOVW        R3, #1032                   @ 0x408 
    /*00008f1c*/ STR         R4, [SP, #4] 
    /*00008f20*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*00008f24*/ STR         R3, [SP] 
    /*00008f28*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*00008f2c*/ LDR         R3, [PC, #16]               @ 0x0000000000008f44 
    /*00008f30*/ MOV         R1, #16 
    /*00008f34*/ MOV         R0, #3 
    /*00008f38*/ MOVT        R5, #40976                  @ 0xa010 
    /*00008f3c*/ BL          0x0000000000008F3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008f40*/ B           VI_SetPipeNRXParam_x8e48
    /*00008f44*/ ANDEQ       R0, R0, R0, LSR #11 
FUNC_END VI_SetPipeNRXParam


FUNC_BEGIN VI_GetPipeNRXParam
    /*00008f48*/ CMP         R0, #3 
    /*00008f4c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00008f50*/ MOV         R4, R0 
    /*00008f54*/ SUB         SP, SP, #12 
    /*00008f58*/ MOV         R6, R1 
    /*00008f5c*/ BHI         VI_GetPipeNRXParam_x8f7c
    VI_GetPipeNRXParam_x8f60:
    /*00008f60*/ MOV         R0, R6 
    /*00008f64*/ BL          0x0000000000008F64          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00008f68*/ SUBS        R5, R0, #0 
    /*00008f6c*/ BEQ         VI_GetPipeNRXParam_x8f94
    VI_GetPipeNRXParam_x8f70:
    /*00008f70*/ MOV         R0, R5 
    /*00008f74*/ ADD         SP, SP, #12 
    /*00008f78*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeNRXParam_x8f7c:
    /*00008f7c*/ BL          0x000000000000778C 
    /*00008f80*/ SUBS        R5, R0, #0 
    /*00008f84*/ BEQ         VI_GetPipeNRXParam_x8f60
    /*00008f88*/ MOV         R0, R5 
    /*00008f8c*/ ADD         SP, SP, #12 
    /*00008f90*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeNRXParam_x8f94:
    /*00008f94*/ LDR         R3, [PC, #140]              @ 0x0000000000009028 
    /*00008f98*/ MOV         R7, #176                    @ 0xb0 
    /*00008f9c*/ MLA         R7, R7, R4, R3 
    /*00008fa0*/ MOV         R0, R7 
    /*00008fa4*/ BL          0x0000000000008FA4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008fa8*/ CMP         R0, #0 
    /*00008fac*/ BNE         VI_GetPipeNRXParam_x8fe4
    /*00008fb0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00008fb4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00008fb8*/ LDR         R3, [R3, R4, LSL #2] 
    /*00008fbc*/ CMP         R3, #0 
    /*00008fc0*/ BEQ         VI_GetPipeNRXParam_x8ff0
    /*00008fc4*/ MOV         R1, R6 
    /*00008fc8*/ MOV         R0, R4 
    /*00008fcc*/ BL          0x0000000000008FCC          @ VI_DRV_GetPipeNRXParam [R_ARM_CALL: .text+0x311b0] 
    /*00008fd0*/ MOV         R0, R7 
    /*00008fd4*/ BL          0x0000000000008FD4          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008fd8*/ MOV         R0, R5 
    /*00008fdc*/ ADD         SP, SP, #12 
    /*00008fe0*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeNRXParam_x8fe4:
    /*00008fe4*/ MOV         R5, #65024                  @ 0xfe00 
    /*00008fe8*/ MOVT        R5, #65535                  @ 0xffff 
    /*00008fec*/ B           VI_GetPipeNRXParam_x8f70
    VI_GetPipeNRXParam_x8ff0:
    /*00008ff0*/ MOV         R0, R7 
    /*00008ff4*/ MOVW        R5, #32773                  @ 0x8005 
    /*00008ff8*/ BL          0x0000000000008FF8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008ffc*/ MOVW        R3, #1069                   @ 0x42d 
    /*00009000*/ STR         R4, [SP, #4] 
    /*00009004*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*00009008*/ STR         R3, [SP] 
    /*0000900c*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*00009010*/ LDR         R3, [PC, #20]               @ 0x000000000000902c 
    /*00009014*/ MOV         R1, #16 
    /*00009018*/ MOV         R0, #3 
    /*0000901c*/ MOVT        R5, #40976                  @ 0xa010 
    /*00009020*/ BL          0x0000000000009020          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009024*/ B           VI_GetPipeNRXParam_x8f70
    /*00009028*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0000902c*/ @           <UNDEFINED> instruction: 0x000005b4 
FUNC_END VI_GetPipeNRXParam


FUNC_BEGIN VI_DoGetPipeStatus
    /*00009030*/ PUSH        {R4, R5, R6, LR} 
    /*00009034*/ SUB         SP, SP, #88                 @ 0x58 
    /*00009038*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000903c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00009040*/ MOV         R5, R1 
    /*00009044*/ MOV         R1, SP 
    /*00009048*/ LDR         R4, [R3, R0, LSL #2] 
    /*0000904c*/ MOV         R6, R0 
    /*00009050*/ BL          0x0000000000009050          @ VI_DRV_GetPipeCrop [R_ARM_CALL: .text+0x286fc] 
    /*00009054*/ LDR         R3, [SP] 
    /*00009058*/ CMP         R3, #0 
    /*0000905c*/ BEQ         VI_DoGetPipeStatus_x90ac
    /*00009060*/ LDR         R2, [SP, #12] 
    /*00009064*/ LDR         R3, [SP, #16] 
    /*00009068*/ STR         R2, [R5, #20] 
    /*0000906c*/ STR         R3, [R5, #24] 
    VI_DoGetPipeStatus_x9070:
    /*00009070*/ ADD         R2, R4, #36864              @ 0x9000 
    /*00009074*/ ADD         R3, R4, #32768              @ 0x8000 
    /*00009078*/ MOV         R0, #0 
    /*0000907c*/ LDR         R2, [R2, #1480]             @ 0x5c8 
    /*00009080*/ STR         R2, [R5] 
    /*00009084*/ LDR         R2, [R3, #3656]             @ 0xe48 
    /*00009088*/ STR         R2, [R5, #4] 
    /*0000908c*/ LDR         R2, [R3, #3736]             @ 0xe98 
    /*00009090*/ STR         R2, [R5, #8] 
    /*00009094*/ LDR         R2, [R3, #3712]             @ 0xe80 
    /*00009098*/ STR         R2, [R5, #12] 
    /*0000909c*/ LDR         R3, [R3, #3660]             @ 0xe4c 
    /*000090a0*/ STR         R3, [R5, #16] 
    /*000090a4*/ ADD         SP, SP, #88                 @ 0x58 
    /*000090a8*/ POP         {R4, R5, R6, PC} 
    VI_DoGetPipeStatus_x90ac:
    /*000090ac*/ MOV         R0, R6 
    /*000090b0*/ ADD         R1, SP, #20 
    /*000090b4*/ BL          0x00000000000090B4          @ VI_DRV_GetPipeAttr [R_ARM_CALL: .text+0x28674] 
    /*000090b8*/ LDR         R2, [SP, #32] 
    /*000090bc*/ LDR         R3, [SP, #36]               @ 0x24 
    /*000090c0*/ STR         R2, [R5, #20] 
    /*000090c4*/ STR         R3, [R5, #24] 
    /*000090c8*/ B           VI_DoGetPipeStatus_x9070
FUNC_END VI_DoGetPipeStatus


FUNC_BEGIN VI_GetPipeStatus
    /*000090cc*/ CMP         R0, #3 
    /*000090d0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000090d4*/ MOV         R4, R0 
    /*000090d8*/ SUB         SP, SP, #20 
    /*000090dc*/ MOV         R6, R1 
    /*000090e0*/ BHI         VI_GetPipeStatus_x9100
    VI_GetPipeStatus_x90e4:
    /*000090e4*/ MOV         R0, R6 
    /*000090e8*/ BL          0x00000000000090E8          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*000090ec*/ SUBS        R5, R0, #0 
    /*000090f0*/ BEQ         VI_GetPipeStatus_x9118
    VI_GetPipeStatus_x90f4:
    /*000090f4*/ MOV         R0, R5 
    /*000090f8*/ ADD         SP, SP, #20 
    /*000090fc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_GetPipeStatus_x9100:
    /*00009100*/ BL          0x000000000000778C 
    /*00009104*/ SUBS        R5, R0, #0 
    /*00009108*/ BEQ         VI_GetPipeStatus_x90e4
    /*0000910c*/ MOV         R0, R5 
    /*00009110*/ ADD         SP, SP, #20 
    /*00009114*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_GetPipeStatus_x9118:
    /*00009118*/ MOV         R7, #176                    @ 0xb0 
    /*0000911c*/ MOVW        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00009120*/ MUL         R7, R7, R4 
    /*00009124*/ MOVT        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00009128*/ ADD         R8, R7, #100                @ 0x64 
    /*0000912c*/ ADD         R8, R8, R9 
    /*00009130*/ MOV         R0, R8 
    /*00009134*/ BL          0x0000000000009134          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00009138*/ CMP         R0, #0 
    /*0000913c*/ BNE         VI_GetPipeStatus_x9194
    /*00009140*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00009144*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00009148*/ LDR         R3, [R3, R4, LSL #2] 
    /*0000914c*/ CMP         R3, #0 
    /*00009150*/ BEQ         VI_GetPipeStatus_x91a0
    /*00009154*/ ADD         R7, R7, #140                @ 0x8c 
    /*00009158*/ ADD         R1, SP, #12 
    /*0000915c*/ ADD         R7, R7, R9 
    /*00009160*/ MOV         R0, R7 
    /*00009164*/ BL          0x0000000000009164          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009168*/ MOV         R1, R6 
    /*0000916c*/ MOV         R0, R4 
    /*00009170*/ BL          0x0000000000009170          @ VI_DoGetPipeStatus [R_ARM_CALL: .text+0x9030] 
    /*00009174*/ ADD         R1, SP, #12 
    /*00009178*/ MOV         R0, R7 
    /*0000917c*/ BL          0x000000000000917C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009180*/ MOV         R0, R8 
    /*00009184*/ BL          0x0000000000009184          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009188*/ MOV         R0, R5 
    /*0000918c*/ ADD         SP, SP, #20 
    /*00009190*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_GetPipeStatus_x9194:
    /*00009194*/ MOV         R5, #65024                  @ 0xfe00 
    /*00009198*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000919c*/ B           VI_GetPipeStatus_x90f4
    VI_GetPipeStatus_x91a0:
    /*000091a0*/ MOV         R0, R8 
    /*000091a4*/ MOVW        R5, #32773                  @ 0x8005 
    /*000091a8*/ BL          0x00000000000091A8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000091ac*/ MOVW        R3, #1196                   @ 0x4ac 
    /*000091b0*/ STR         R4, [SP, #4] 
    /*000091b4*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*000091b8*/ STR         R3, [SP] 
    /*000091bc*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*000091c0*/ LDR         R3, [PC, #16]               @ 0x00000000000091d8 
    /*000091c4*/ MOV         R1, #16 
    /*000091c8*/ MOV         R0, #3 
    /*000091cc*/ MOVT        R5, #40976                  @ 0xa010 
    /*000091d0*/ BL          0x00000000000091D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000091d4*/ B           VI_GetPipeStatus_x90f4
    /*000091d8*/ ANDEQ       R0, R0, R8, ASR #11 
FUNC_END VI_GetPipeStatus


FUNC_BEGIN VI_EnablePipeInterrupt
    /*000091dc*/ CMP         R0, #3 
    /*000091e0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000091e4*/ MOV         R5, R0 
    /*000091e8*/ SUB         SP, SP, #16 
    /*000091ec*/ BHI         VI_EnablePipeInterrupt_x9268
    VI_EnablePipeInterrupt_x91f0:
    /*000091f0*/ MOV         R4, #176                    @ 0xb0 
    /*000091f4*/ MOVW        R7, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000091f8*/ MUL         R4, R4, R5 
    /*000091fc*/ MOVT        R7, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00009200*/ ADD         R6, R4, #100                @ 0x64 
    /*00009204*/ ADD         R6, R6, R7 
    /*00009208*/ MOV         R0, R6 
    /*0000920c*/ BL          0x000000000000920C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00009210*/ SUBS        R8, R0, #0 
    /*00009214*/ BNE         VI_EnablePipeInterrupt_x92b4
    /*00009218*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000921c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00009220*/ LDR         R3, [R3, R5, LSL #2] 
    /*00009224*/ CMP         R3, #0 
    /*00009228*/ BEQ         VI_EnablePipeInterrupt_x927c
    /*0000922c*/ ADD         R4, R4, #140                @ 0x8c 
    /*00009230*/ ADD         R1, SP, #12 
    /*00009234*/ ADD         R4, R4, R7 
    /*00009238*/ MOV         R0, R4 
    /*0000923c*/ BL          0x000000000000923C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009240*/ MOV         R0, R5 
    /*00009244*/ BL          0x0000000000009244          @ VI_DRV_EnablePipeInterrupt [R_ARM_CALL: .text+0x344bc] 
    /*00009248*/ ADD         R1, SP, #12 
    /*0000924c*/ MOV         R0, R4 
    /*00009250*/ BL          0x0000000000009250          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009254*/ MOV         R0, R6 
    /*00009258*/ BL          0x0000000000009258          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000925c*/ MOV         R0, R8 
    VI_EnablePipeInterrupt_x9260:
    /*00009260*/ ADD         SP, SP, #16 
    /*00009264*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_EnablePipeInterrupt_x9268:
    /*00009268*/ BL          0x000000000000774C 
    /*0000926c*/ CMP         R0, #0 
    /*00009270*/ BEQ         VI_EnablePipeInterrupt_x91f0
    /*00009274*/ ADD         SP, SP, #16 
    /*00009278*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_EnablePipeInterrupt_x927c:
    /*0000927c*/ MOV         R0, R6 
    /*00009280*/ BL          0x0000000000009280          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009284*/ MOVW        R3, #1226                   @ 0x4ca 
    /*00009288*/ STR         R5, [SP, #4] 
    /*0000928c*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*00009290*/ STR         R3, [SP] 
    /*00009294*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*00009298*/ LDR         R3, [PC, #32]               @ 0x00000000000092c0 
    /*0000929c*/ MOV         R1, #16 
    /*000092a0*/ MOV         R0, #3 
    /*000092a4*/ BL          0x00000000000092A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000092a8*/ MOVW        R0, #32773                  @ 0x8005 
    /*000092ac*/ MOVT        R0, #40976                  @ 0xa010 
    /*000092b0*/ B           VI_EnablePipeInterrupt_x9260
    VI_EnablePipeInterrupt_x92b4:
    /*000092b4*/ MOV         R0, #65024                  @ 0xfe00 
    /*000092b8*/ MOVT        R0, #65535                  @ 0xffff 
    /*000092bc*/ B           VI_EnablePipeInterrupt_x9260
    /*000092c0*/ LDRDEQ      R0, [R0], -IP 
FUNC_END VI_EnablePipeInterrupt


FUNC_BEGIN VI_DisablePipeInterrupt
    /*000092c4*/ CMP         R0, #3 
    /*000092c8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000092cc*/ MOV         R5, R0 
    /*000092d0*/ SUB         SP, SP, #16 
    /*000092d4*/ BHI         VI_DisablePipeInterrupt_x9350
    VI_DisablePipeInterrupt_x92d8:
    /*000092d8*/ MOV         R4, #176                    @ 0xb0 
    /*000092dc*/ MOVW        R7, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000092e0*/ MUL         R4, R4, R5 
    /*000092e4*/ MOVT        R7, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000092e8*/ ADD         R6, R4, #100                @ 0x64 
    /*000092ec*/ ADD         R6, R6, R7 
    /*000092f0*/ MOV         R0, R6 
    /*000092f4*/ BL          0x00000000000092F4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000092f8*/ SUBS        R8, R0, #0 
    /*000092fc*/ BNE         VI_DisablePipeInterrupt_x939c
    /*00009300*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00009304*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00009308*/ LDR         R3, [R3, R5, LSL #2] 
    /*0000930c*/ CMP         R3, #0 
    /*00009310*/ BEQ         VI_DisablePipeInterrupt_x9364
    /*00009314*/ ADD         R4, R4, #140                @ 0x8c 
    /*00009318*/ ADD         R1, SP, #12 
    /*0000931c*/ ADD         R4, R4, R7 
    /*00009320*/ MOV         R0, R4 
    /*00009324*/ BL          0x0000000000009324          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009328*/ MOV         R0, R5 
    /*0000932c*/ BL          0x000000000000932C          @ VI_DRV_DisablePipeInterrupt [R_ARM_CALL: .text+0x34508] 
    /*00009330*/ ADD         R1, SP, #12 
    /*00009334*/ MOV         R0, R4 
    /*00009338*/ BL          0x0000000000009338          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000933c*/ MOV         R0, R6 
    /*00009340*/ BL          0x0000000000009340          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009344*/ MOV         R0, R8 
    VI_DisablePipeInterrupt_x9348:
    /*00009348*/ ADD         SP, SP, #16 
    /*0000934c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DisablePipeInterrupt_x9350:
    /*00009350*/ BL          0x000000000000774C 
    /*00009354*/ CMP         R0, #0 
    /*00009358*/ BEQ         VI_DisablePipeInterrupt_x92d8
    /*0000935c*/ ADD         SP, SP, #16 
    /*00009360*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DisablePipeInterrupt_x9364:
    /*00009364*/ MOV         R0, R6 
    /*00009368*/ BL          0x0000000000009368          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000936c*/ MOVW        R3, #1256                   @ 0x4e8 
    /*00009370*/ STR         R5, [SP, #4] 
    /*00009374*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*00009378*/ STR         R3, [SP] 
    /*0000937c*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*00009380*/ LDR         R3, [PC, #32]               @ 0x00000000000093a8 
    /*00009384*/ MOV         R1, #16 
    /*00009388*/ MOV         R0, #3 
    /*0000938c*/ BL          0x000000000000938C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009390*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009394*/ MOVT        R0, #40976                  @ 0xa010 
    /*00009398*/ B           VI_DisablePipeInterrupt_x9348
    VI_DisablePipeInterrupt_x939c:
    /*0000939c*/ MOV         R0, #65024                  @ 0xfe00 
    /*000093a0*/ MOVT        R0, #65535                  @ 0xffff 
    /*000093a4*/ B           VI_DisablePipeInterrupt_x9348
    /*000093a8*/ STRDEQ      R0, [R0], -R4 
FUNC_END VI_DisablePipeInterrupt


FUNC_BEGIN VI_SetPipeCrop
    /*000093ac*/ CMP         R0, #3 
    /*000093b0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000093b4*/ MOV         R4, R0 
    /*000093b8*/ SUB         SP, SP, #16 
    /*000093bc*/ MOV         R6, R1 
    /*000093c0*/ BHI         VI_SetPipeCrop_x93e0
    VI_SetPipeCrop_x93c4:
    /*000093c4*/ MOV         R0, R6 
    /*000093c8*/ BL          0x00000000000093C8          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*000093cc*/ SUBS        R5, R0, #0 
    /*000093d0*/ BEQ         VI_SetPipeCrop_x93f8
    VI_SetPipeCrop_x93d4:
    /*000093d4*/ MOV         R0, R5 
    /*000093d8*/ ADD         SP, SP, #16 
    /*000093dc*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SetPipeCrop_x93e0:
    /*000093e0*/ BL          0x000000000000774C 
    /*000093e4*/ SUBS        R5, R0, #0 
    /*000093e8*/ BEQ         VI_SetPipeCrop_x93c4
    /*000093ec*/ MOV         R0, R5 
    /*000093f0*/ ADD         SP, SP, #16 
    /*000093f4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SetPipeCrop_x93f8:
    /*000093f8*/ MOV         R5, #176                    @ 0xb0 
    /*000093fc*/ MOVW        R7, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00009400*/ MUL         R5, R5, R4 
    /*00009404*/ MOVT        R7, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00009408*/ ADD         R8, R5, #100                @ 0x64 
    /*0000940c*/ ADD         R8, R8, R7 
    /*00009410*/ MOV         R0, R8 
    /*00009414*/ BL          0x0000000000009414          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00009418*/ CMP         R0, #0 
    /*0000941c*/ BNE         VI_SetPipeCrop_x94a8
    /*00009420*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00009424*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00009428*/ LDR         R3, [R3, R4, LSL #2] 
    /*0000942c*/ CMP         R3, #0 
    /*00009430*/ BEQ         VI_SetPipeCrop_x9478
    /*00009434*/ ADD         R5, R5, #140                @ 0x8c 
    /*00009438*/ ADD         R1, SP, #12 
    /*0000943c*/ ADD         R7, R5, R7 
    /*00009440*/ MOV         R0, R7 
    /*00009444*/ BL          0x0000000000009444          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009448*/ MOV         R1, R6 
    /*0000944c*/ MOV         R0, R4 
    /*00009450*/ BL          0x0000000000009450          @ VI_DRV_SetPipeCrop [R_ARM_CALL: .text+0x286d4] 
    /*00009454*/ ADD         R1, SP, #12 
    /*00009458*/ MOV         R5, R0 
    /*0000945c*/ MOV         R0, R7 
    /*00009460*/ BL          0x0000000000009460          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_SetPipeCrop_x9464:
    /*00009464*/ MOV         R0, R8 
    /*00009468*/ BL          0x0000000000009468          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000946c*/ MOV         R0, R5 
    /*00009470*/ ADD         SP, SP, #16 
    /*00009474*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SetPipeCrop_x9478:
    /*00009478*/ MOVW        R3, #1295                   @ 0x50f 
    /*0000947c*/ STR         R4, [SP, #4] 
    /*00009480*/ STR         R3, [SP] 
    /*00009484*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c28] 
    /*00009488*/ LDR         R3, [PC, #36]               @ 0x00000000000094b4 
    /*0000948c*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c28] 
    /*00009490*/ MOV         R1, #16 
    /*00009494*/ MOV         R0, #3 
    /*00009498*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000949c*/ BL          0x000000000000949C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000094a0*/ MOVT        R5, #40976                  @ 0xa010 
    /*000094a4*/ B           VI_SetPipeCrop_x9464
    VI_SetPipeCrop_x94a8:
    /*000094a8*/ MOV         R5, #65024                  @ 0xfe00 
    /*000094ac*/ MOVT        R5, #65535                  @ 0xffff 
    /*000094b0*/ B           VI_SetPipeCrop_x93d4
    /*000094b4*/ ANDEQ       R0, R0, IP, LSL #12 
FUNC_END VI_SetPipeCrop


FUNC_BEGIN VI_GetPipeCrop
    /*000094b8*/ CMP         R0, #3 
    /*000094bc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000094c0*/ MOV         R4, R0 
    /*000094c4*/ SUB         SP, SP, #16 
    /*000094c8*/ MOV         R6, R1 
    /*000094cc*/ BHI         VI_GetPipeCrop_x94ec
    VI_GetPipeCrop_x94d0:
    /*000094d0*/ MOV         R0, R6 
    /*000094d4*/ BL          0x00000000000094D4          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*000094d8*/ SUBS        R5, R0, #0 
    /*000094dc*/ BEQ         VI_GetPipeCrop_x9504
    VI_GetPipeCrop_x94e0:
    /*000094e0*/ MOV         R0, R5 
    /*000094e4*/ ADD         SP, SP, #16 
    /*000094e8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetPipeCrop_x94ec:
    /*000094ec*/ BL          0x000000000000774C 
    /*000094f0*/ SUBS        R5, R0, #0 
    /*000094f4*/ BEQ         VI_GetPipeCrop_x94d0
    /*000094f8*/ MOV         R0, R5 
    /*000094fc*/ ADD         SP, SP, #16 
    /*00009500*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetPipeCrop_x9504:
    /*00009504*/ MOV         R5, #176                    @ 0xb0 
    /*00009508*/ MOVW        R7, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000950c*/ MUL         R5, R5, R4 
    /*00009510*/ MOVT        R7, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00009514*/ ADD         R8, R5, #100                @ 0x64 
    /*00009518*/ ADD         R8, R8, R7 
    /*0000951c*/ MOV         R0, R8 
    /*00009520*/ BL          0x0000000000009520          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00009524*/ CMP         R0, #0 
    /*00009528*/ BNE         VI_GetPipeCrop_x95b4
    /*0000952c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00009530*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00009534*/ LDR         R3, [R3, R4, LSL #2] 
    /*00009538*/ CMP         R3, #0 
    /*0000953c*/ BEQ         VI_GetPipeCrop_x9584
    /*00009540*/ ADD         R5, R5, #140                @ 0x8c 
    /*00009544*/ ADD         R1, SP, #12 
    /*00009548*/ ADD         R7, R5, R7 
    /*0000954c*/ MOV         R0, R7 
    /*00009550*/ BL          0x0000000000009550          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009554*/ MOV         R1, R6 
    /*00009558*/ MOV         R0, R4 
    /*0000955c*/ BL          0x000000000000955C          @ VI_DRV_GetPipeCrop [R_ARM_CALL: .text+0x286fc] 
    /*00009560*/ ADD         R1, SP, #12 
    /*00009564*/ MOV         R5, R0 
    /*00009568*/ MOV         R0, R7 
    /*0000956c*/ BL          0x000000000000956C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_GetPipeCrop_x9570:
    /*00009570*/ MOV         R0, R8 
    /*00009574*/ BL          0x0000000000009574          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009578*/ MOV         R0, R5 
    /*0000957c*/ ADD         SP, SP, #16 
    /*00009580*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetPipeCrop_x9584:
    /*00009584*/ MOVW        R3, #1324                   @ 0x52c 
    /*00009588*/ STR         R4, [SP, #4] 
    /*0000958c*/ STR         R3, [SP] 
    /*00009590*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c28] 
    /*00009594*/ LDR         R3, [PC, #36]               @ 0x00000000000095c0 
    /*00009598*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c28] 
    /*0000959c*/ MOV         R1, #16 
    /*000095a0*/ MOV         R0, #3 
    /*000095a4*/ MOVW        R5, #32773                  @ 0x8005 
    /*000095a8*/ BL          0x00000000000095A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000095ac*/ MOVT        R5, #40976                  @ 0xa010 
    /*000095b0*/ B           VI_GetPipeCrop_x9570
    VI_GetPipeCrop_x95b4:
    /*000095b4*/ MOV         R5, #65024                  @ 0xfe00 
    /*000095b8*/ MOVT        R5, #65535                  @ 0xffff 
    /*000095bc*/ B           VI_GetPipeCrop_x94e0
    /*000095c0*/ ANDEQ       R0, R0, IP, LSL R6 
FUNC_END VI_GetPipeCrop


FUNC_BEGIN ViGetPipeWDRAttr
    /*000095c4*/ CMP         R0, #3 
    /*000095c8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000095cc*/ MOV         R4, R0 
    /*000095d0*/ SUB         SP, SP, #16 
    /*000095d4*/ MOV         R5, R1 
    /*000095d8*/ BHI         ViGetPipeWDRAttr_x95f8
    ViGetPipeWDRAttr_x95dc:
    /*000095dc*/ MOV         R0, R5 
    /*000095e0*/ BL          0x00000000000095E0          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*000095e4*/ SUBS        R6, R0, #0 
    /*000095e8*/ BEQ         ViGetPipeWDRAttr_x9610
    ViGetPipeWDRAttr_x95ec:
    /*000095ec*/ MOV         R0, R6 
    /*000095f0*/ ADD         SP, SP, #16 
    /*000095f4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    ViGetPipeWDRAttr_x95f8:
    /*000095f8*/ BL          0x000000000000778C 
    /*000095fc*/ SUBS        R6, R0, #0 
    /*00009600*/ BEQ         ViGetPipeWDRAttr_x95dc
    /*00009604*/ MOV         R0, R6 
    /*00009608*/ ADD         SP, SP, #16 
    /*0000960c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    ViGetPipeWDRAttr_x9610:
    /*00009610*/ MOV         R8, #176                    @ 0xb0 
    /*00009614*/ MOVW        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00009618*/ MUL         R8, R8, R4 
    /*0000961c*/ MOVT        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00009620*/ ADD         R1, SP, #12 
    /*00009624*/ ADD         R7, R8, #140                @ 0x8c 
    /*00009628*/ ADD         R7, R7, R9 
    /*0000962c*/ MOV         R0, R7 
    /*00009630*/ BL          0x0000000000009630          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009634*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00009638*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000963c*/ LDR         R3, [R3, R4, LSL #2] 
    /*00009640*/ CMP         R3, #0 
    /*00009644*/ BEQ         ViGetPipeWDRAttr_x96f4
    /*00009648*/ LDR         R3, [R9, R8] 
    /*0000964c*/ CMP         R3, #1 
    /*00009650*/ BEQ         ViGetPipeWDRAttr_x96b8
    /*00009654*/ MOV         R0, R4 
    /*00009658*/ BL          0x0000000000009658          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*0000965c*/ MOV         R9, R0 
    /*00009660*/ MOV         R0, R4 
    /*00009664*/ BL          0x0000000000009664          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00009668*/ MOV         R8, R0 
    /*0000966c*/ MOV         R0, R4 
    /*00009670*/ BL          0x0000000000009670          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*00009674*/ ADD         R1, R5, #8 
    /*00009678*/ STR         R9, [R5] 
    /*0000967c*/ STR         R8, [R5, #4] 
    /*00009680*/ MOV         SL, R0 
    /*00009684*/ MOV         R0, R9 
    /*00009688*/ BL          0x0000000000009688          @ VI_DRV_GetDevBindPipe [R_ARM_CALL: .text+0x31908] 
    /*0000968c*/ CMP         R4, SL 
    /*00009690*/ CMPNE       R8, #0 
    /*00009694*/ MOV         R0, R7 
    /*00009698*/ STRNE       R6, [R5, #28] 
    /*0000969c*/ MOVEQ       R3, #1 
    /*000096a0*/ ADD         R1, SP, #12 
    /*000096a4*/ STREQ       R3, [R5, #28] 
    /*000096a8*/ BL          0x00000000000096A8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000096ac*/ MOV         R0, R6 
    /*000096b0*/ ADD         SP, SP, #16 
    /*000096b4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    ViGetPipeWDRAttr_x96b8:
    /*000096b8*/ ADD         R1, SP, #12 
    /*000096bc*/ MOV         R0, R7 
    /*000096c0*/ BL          0x00000000000096C0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000096c4*/ MOVW        R3, #1368                   @ 0x558 
    /*000096c8*/ STR         R4, [SP, #4] 
    /*000096cc*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ed8] 
    /*000096d0*/ STR         R3, [SP] 
    /*000096d4*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ed8] 
    /*000096d8*/ LDR         R3, [PC, #80]               @ 0x0000000000009730 
    /*000096dc*/ MOV         R1, #16 
    /*000096e0*/ MOV         R0, #3 
    /*000096e4*/ MOVW        R6, #32786                  @ 0x8012 
    /*000096e8*/ BL          0x00000000000096E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000096ec*/ MOVT        R6, #40976                  @ 0xa010 
    /*000096f0*/ B           ViGetPipeWDRAttr_x95ec
    ViGetPipeWDRAttr_x96f4:
    /*000096f4*/ ADD         R1, SP, #12 
    /*000096f8*/ MOV         R0, R7 
    /*000096fc*/ BL          0x00000000000096FC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009700*/ MOVW        R3, #1361                   @ 0x551 
    /*00009704*/ STR         R4, [SP, #4] 
    /*00009708*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*0000970c*/ STR         R3, [SP] 
    /*00009710*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*00009714*/ LDR         R3, [PC, #20]               @ 0x0000000000009730 
    /*00009718*/ MOV         R1, #16 
    /*0000971c*/ MOV         R0, #3 
    /*00009720*/ MOVW        R6, #32773                  @ 0x8005 
    /*00009724*/ BL          0x0000000000009724          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009728*/ MOVT        R6, #40976                  @ 0xa010 
    /*0000972c*/ B           ViGetPipeWDRAttr_x95ec
    /*00009730*/ ANDEQ       R0, R0, IP, LSR #12 
FUNC_END ViGetPipeWDRAttr


FUNC_BEGIN ViGetPipeHDRAttr
    /*00009734*/ CMP         R0, #3 
    /*00009738*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000973c*/ MOV         R4, R0 
    /*00009740*/ SUB         SP, SP, #60                 @ 0x3c 
    /*00009744*/ MOV         R6, R1 
    /*00009748*/ BHI         ViGetPipeHDRAttr_x9768
    ViGetPipeHDRAttr_x974c:
    /*0000974c*/ MOV         R0, R6 
    /*00009750*/ BL          0x0000000000009750          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00009754*/ SUBS        R5, R0, #0 
    /*00009758*/ BEQ         ViGetPipeHDRAttr_x9780
    ViGetPipeHDRAttr_x975c:
    /*0000975c*/ MOV         R0, R5 
    /*00009760*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00009764*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    ViGetPipeHDRAttr_x9768:
    /*00009768*/ BL          0x000000000000778C 
    /*0000976c*/ SUBS        R5, R0, #0 
    /*00009770*/ BEQ         ViGetPipeHDRAttr_x974c
    /*00009774*/ MOV         R0, R5 
    /*00009778*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000977c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    ViGetPipeHDRAttr_x9780:
    /*00009780*/ MOV         R8, #176                    @ 0xb0 
    /*00009784*/ MOVW        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00009788*/ MUL         R8, R8, R4 
    /*0000978c*/ MOVT        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00009790*/ ADD         R1, SP, #8 
    /*00009794*/ ADD         R7, R8, #140                @ 0x8c 
    /*00009798*/ ADD         R7, R7, R9 
    /*0000979c*/ MOV         R0, R7 
    /*000097a0*/ BL          0x00000000000097A0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000097a4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000097a8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000097ac*/ LDR         R3, [R3, R4, LSL #2] 
    /*000097b0*/ CMP         R3, #0 
    /*000097b4*/ BEQ         ViGetPipeHDRAttr_x9894
    /*000097b8*/ LDR         R3, [R9, R8] 
    /*000097bc*/ CMP         R3, #1 
    /*000097c0*/ BEQ         ViGetPipeHDRAttr_x9858
    /*000097c4*/ MOV         R1, R5 
    /*000097c8*/ MOV         R0, R4 
    /*000097cc*/ BL          0x00000000000097CC          @ VI_DRV_IsChnAttrSetted [R_ARM_CALL: .text+0x29cfc] 
    /*000097d0*/ CMP         R0, #1 
    /*000097d4*/ BEQ         ViGetPipeHDRAttr_x981c
    /*000097d8*/ STR         R4, [SP, #4] 
    /*000097dc*/ MOVW        R3, #1438                   @ 0x59e 
    /*000097e0*/ MOV         R1, #16 
    /*000097e4*/ STR         R3, [SP] 
    /*000097e8*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f0c] 
    /*000097ec*/ LDR         R3, [PC, #220]              @ 0x00000000000098d0 
    /*000097f0*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f0c] 
    /*000097f4*/ MOV         R0, #3 
    /*000097f8*/ BL          0x00000000000097F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000097fc*/ MOV         R0, R7 
    /*00009800*/ ADD         R1, SP, #8 
    /*00009804*/ MOVW        R5, #32784                  @ 0x8010 
    /*00009808*/ BL          0x0000000000009808          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000980c*/ MOVT        R5, #40976                  @ 0xa010 
    /*00009810*/ MOV         R0, R5 
    /*00009814*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00009818*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    ViGetPipeHDRAttr_x981c:
    /*0000981c*/ ADD         R2, SP, #12 
    /*00009820*/ MOV         R1, R5 
    /*00009824*/ MOV         R0, R4 
    /*00009828*/ BL          0x0000000000009828          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*0000982c*/ LDR         IP, [SP, #24] 
    /*00009830*/ LDR         R2, [SP, #20] 
    /*00009834*/ MOV         R0, R7 
    /*00009838*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000983c*/ ADD         R1, SP, #8 
    /*00009840*/ STR         IP, [R6] 
    /*00009844*/ STMIB       R6, {R2, R3} 
    /*00009848*/ BL          0x0000000000009848          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000984c*/ MOV         R0, R5 
    /*00009850*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00009854*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    ViGetPipeHDRAttr_x9858:
    /*00009858*/ ADD         R1, SP, #8 
    /*0000985c*/ MOV         R0, R7 
    /*00009860*/ BL          0x0000000000009860          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009864*/ MOVW        R3, #1422                   @ 0x58e 
    /*00009868*/ STR         R4, [SP, #4] 
    /*0000986c*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ed8] 
    /*00009870*/ STR         R3, [SP] 
    /*00009874*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ed8] 
    /*00009878*/ LDR         R3, [PC, #80]               @ 0x00000000000098d0 
    /*0000987c*/ MOV         R1, #16 
    /*00009880*/ MOV         R0, #3 
    /*00009884*/ MOVW        R5, #32786                  @ 0x8012 
    /*00009888*/ BL          0x0000000000009888          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000988c*/ MOVT        R5, #40976                  @ 0xa010 
    /*00009890*/ B           ViGetPipeHDRAttr_x975c
    ViGetPipeHDRAttr_x9894:
    /*00009894*/ ADD         R1, SP, #8 
    /*00009898*/ MOV         R0, R7 
    /*0000989c*/ BL          0x000000000000989C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000098a0*/ MOVW        R3, #1415                   @ 0x587 
    /*000098a4*/ STR         R4, [SP, #4] 
    /*000098a8*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd0] 
    /*000098ac*/ STR         R3, [SP] 
    /*000098b0*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd0] 
    /*000098b4*/ LDR         R3, [PC, #20]               @ 0x00000000000098d0 
    /*000098b8*/ MOV         R1, #16 
    /*000098bc*/ MOV         R0, #3 
    /*000098c0*/ MOVW        R5, #32773                  @ 0x8005 
    /*000098c4*/ BL          0x00000000000098C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000098c8*/ MOVT        R5, #40976                  @ 0xa010 
    /*000098cc*/ B           ViGetPipeHDRAttr_x975c
    /*000098d0*/ ANDEQ       R0, R0, R0, ASR #12 
FUNC_END ViGetPipeHDRAttr


FUNC_BEGIN VI_SetPipeFPNAttr
    /*000098d4*/ CMP         R0, #3 
    /*000098d8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000098dc*/ MOV         R4, R0 
    /*000098e0*/ SUB         SP, SP, #16 
    /*000098e4*/ MOV         R6, R1 
    /*000098e8*/ BHI         VI_SetPipeFPNAttr_x9908
    VI_SetPipeFPNAttr_x98ec:
    /*000098ec*/ MOV         R0, R6 
    /*000098f0*/ BL          0x00000000000098F0          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*000098f4*/ SUBS        R5, R0, #0 
    /*000098f8*/ BEQ         VI_SetPipeFPNAttr_x9920
    VI_SetPipeFPNAttr_x98fc:
    /*000098fc*/ MOV         R0, R5 
    /*00009900*/ ADD         SP, SP, #16 
    /*00009904*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SetPipeFPNAttr_x9908:
    /*00009908*/ BL          0x000000000000774C 
    /*0000990c*/ SUBS        R5, R0, #0 
    /*00009910*/ BEQ         VI_SetPipeFPNAttr_x98ec
    /*00009914*/ MOV         R0, R5 
    /*00009918*/ ADD         SP, SP, #16 
    /*0000991c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SetPipeFPNAttr_x9920:
    /*00009920*/ LDR         R3, [PC, #264]              @ 0x0000000000009a30 
    /*00009924*/ MOV         R7, #176                    @ 0xb0 
    /*00009928*/ MLA         R7, R7, R4, R3 
    /*0000992c*/ MOV         R0, R7 
    /*00009930*/ BL          0x0000000000009930          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00009934*/ CMP         R0, #0 
    /*00009938*/ BNE         VI_SetPipeFPNAttr_x99f0
    /*0000993c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00009940*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00009944*/ LDR         R8, [R3, R4, LSL #2] 
    /*00009948*/ CMP         R8, #0 
    /*0000994c*/ BEQ         VI_SetPipeFPNAttr_x99c0
    /*00009950*/ MOV         R1, R6 
    /*00009954*/ MOV         R0, R4 
    /*00009958*/ BL          0x0000000000009958          @ VI_DRV_CheckFPNAttr [R_ARM_CALL: .text+0x39d00] 
    /*0000995c*/ SUBS        R5, R0, #0 
    /*00009960*/ BNE         VI_SetPipeFPNAttr_x9988
    /*00009964*/ LDR         R3, [R6] 
    /*00009968*/ CMP         R3, #2 
    /*0000996c*/ BEQ         VI_SetPipeFPNAttr_x999c
    /*00009970*/ CMP         R3, #1 
    /*00009974*/ BNE         VI_SetPipeFPNAttr_x9988
    /*00009978*/ ADD         R1, R6, #8 
    /*0000997c*/ MOV         R0, R4 
    /*00009980*/ BL          0x0000000000009980          @ VI_DRV_SetFPNCorrectionAttr [R_ARM_CALL: .text+0x3a434] 
    /*00009984*/ MOV         R5, R0 
    VI_SetPipeFPNAttr_x9988:
    /*00009988*/ MOV         R0, R7 
    /*0000998c*/ BL          0x000000000000998C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009990*/ MOV         R0, R5 
    /*00009994*/ ADD         SP, SP, #16 
    /*00009998*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SetPipeFPNAttr_x999c:
    /*0000999c*/ ADD         R8, R8, #36864              @ 0x9000 
    /*000099a0*/ LDR         R3, [R8, #1484]             @ 0x5cc 
    /*000099a4*/ CMP         R3, #1 
    /*000099a8*/ BEQ         VI_SetPipeFPNAttr_x99fc
    /*000099ac*/ ADD         R1, R6, #8 
    /*000099b0*/ MOV         R0, R4 
    /*000099b4*/ BL          0x00000000000099B4          @ VI_DRV_SetFPNCalibrateAttr [R_ARM_CALL: .text+0x39f3c] 
    /*000099b8*/ MOV         R5, R0 
    /*000099bc*/ B           VI_SetPipeFPNAttr_x9988
    VI_SetPipeFPNAttr_x99c0:
    /*000099c0*/ MOVW        R3, #1475                   @ 0x5c3 
    /*000099c4*/ STR         R4, [SP, #4] 
    /*000099c8*/ STR         R3, [SP] 
    /*000099cc*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f5c] 
    /*000099d0*/ LDR         R3, [PC, #92]               @ 0x0000000000009a34 
    /*000099d4*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f5c] 
    /*000099d8*/ MOV         R1, #16 
    /*000099dc*/ MOV         R0, #3 
    /*000099e0*/ MOVW        R5, #32773                  @ 0x8005 
    /*000099e4*/ BL          0x00000000000099E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000099e8*/ MOVT        R5, #40976                  @ 0xa010 
    /*000099ec*/ B           VI_SetPipeFPNAttr_x9988
    VI_SetPipeFPNAttr_x99f0:
    /*000099f0*/ MOV         R5, #65024                  @ 0xfe00 
    /*000099f4*/ MOVT        R5, #65535                  @ 0xffff 
    /*000099f8*/ B           VI_SetPipeFPNAttr_x98fc
    VI_SetPipeFPNAttr_x99fc:
    /*000099fc*/ STR         R5, [SP, #8] 
    /*00009a00*/ MOVW        R3, #1492                   @ 0x5d4 
    /*00009a04*/ STR         R4, [SP, #4] 
    /*00009a08*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f8c] 
    /*00009a0c*/ STR         R3, [SP] 
    /*00009a10*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f8c] 
    /*00009a14*/ LDR         R3, [PC, #24]               @ 0x0000000000009a34 
    /*00009a18*/ MOV         R1, #16 
    /*00009a1c*/ MOV         R0, #3 
    /*00009a20*/ MOVW        R5, #32834                  @ 0x8042 
    /*00009a24*/ BL          0x0000000000009A24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009a28*/ MOVT        R5, #40976                  @ 0xa010 
    /*00009a2c*/ B           VI_SetPipeFPNAttr_x9988
    /*00009a30*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00009a34*/ ANDEQ       R0, R0, R4, ASR R6 
FUNC_END VI_SetPipeFPNAttr


FUNC_BEGIN VI_GetPipeFPNAttr
    /*00009a38*/ CMP         R0, #3 
    /*00009a3c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00009a40*/ MOV         R4, R0 
    /*00009a44*/ SUB         SP, SP, #12 
    /*00009a48*/ MOV         R6, R1 
    /*00009a4c*/ BHI         VI_GetPipeFPNAttr_x9a6c
    VI_GetPipeFPNAttr_x9a50:
    /*00009a50*/ MOV         R0, R6 
    /*00009a54*/ BL          0x0000000000009A54          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00009a58*/ SUBS        R5, R0, #0 
    /*00009a5c*/ BEQ         VI_GetPipeFPNAttr_x9a84
    VI_GetPipeFPNAttr_x9a60:
    /*00009a60*/ MOV         R0, R5 
    /*00009a64*/ ADD         SP, SP, #12 
    /*00009a68*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeFPNAttr_x9a6c:
    /*00009a6c*/ BL          0x000000000000774C 
    /*00009a70*/ SUBS        R5, R0, #0 
    /*00009a74*/ BEQ         VI_GetPipeFPNAttr_x9a50
    /*00009a78*/ MOV         R0, R5 
    /*00009a7c*/ ADD         SP, SP, #12 
    /*00009a80*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeFPNAttr_x9a84:
    /*00009a84*/ LDR         R3, [PC, #144]              @ 0x0000000000009b1c 
    /*00009a88*/ MOV         R7, #176                    @ 0xb0 
    /*00009a8c*/ MLA         R7, R7, R4, R3 
    /*00009a90*/ MOV         R0, R7 
    /*00009a94*/ BL          0x0000000000009A94          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00009a98*/ CMP         R0, #0 
    /*00009a9c*/ BNE         VI_GetPipeFPNAttr_x9ad8
    /*00009aa0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00009aa4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00009aa8*/ LDR         R3, [R3, R4, LSL #2] 
    /*00009aac*/ CMP         R3, #0 
    /*00009ab0*/ BEQ         VI_GetPipeFPNAttr_x9ae4
    /*00009ab4*/ MOV         R1, R6 
    /*00009ab8*/ MOV         R0, R4 
    /*00009abc*/ BL          0x0000000000009ABC          @ VI_DRV_GetFPNAttr [R_ARM_CALL: .text+0x3a4ac] 
    /*00009ac0*/ MOV         R5, R0 
    /*00009ac4*/ MOV         R0, R7 
    /*00009ac8*/ BL          0x0000000000009AC8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009acc*/ MOV         R0, R5 
    /*00009ad0*/ ADD         SP, SP, #12 
    /*00009ad4*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeFPNAttr_x9ad8:
    /*00009ad8*/ MOV         R5, #65024                  @ 0xfe00 
    /*00009adc*/ MOVT        R5, #65535                  @ 0xffff 
    /*00009ae0*/ B           VI_GetPipeFPNAttr_x9a60
    VI_GetPipeFPNAttr_x9ae4:
    /*00009ae4*/ MOVW        R3, #1524                   @ 0x5f4 
    /*00009ae8*/ MOV         R1, #16 
    /*00009aec*/ STR         R3, [SP] 
    /*00009af0*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f5c] 
    /*00009af4*/ LDR         R3, [PC, #36]               @ 0x0000000000009b20 
    /*00009af8*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f5c] 
    /*00009afc*/ STR         R4, [SP, #4] 
    /*00009b00*/ MOV         R0, #3 
    /*00009b04*/ BL          0x0000000000009B04          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009b08*/ MOV         R0, R7 
    /*00009b0c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00009b10*/ BL          0x0000000000009B10          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009b14*/ MOVT        R5, #40976                  @ 0xa010 
    /*00009b18*/ B           VI_GetPipeFPNAttr_x9a60
    /*00009b1c*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00009b20*/ ANDEQ       R0, R0, R8, ROR #12 
FUNC_END VI_GetPipeFPNAttr


FUNC_BEGIN VI_SetChnRotationAttr
    /*00009b24*/ CMP         R0, #3 
    /*00009b28*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00009b2c*/ MOV         R4, R0 
    /*00009b30*/ SUB         SP, SP, #204                @ 0xcc 
    /*00009b34*/ MOV         R6, R1 
    /*00009b38*/ MOV         R7, R2 
    /*00009b3c*/ BHI         VI_SetChnRotationAttr_x9b5c
    VI_SetChnRotationAttr_x9b40:
    /*00009b40*/ MOV         R0, R6 
    /*00009b44*/ BL          0x0000000000009B44          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*00009b48*/ SUBS        R5, R0, #0 
    /*00009b4c*/ BEQ         VI_SetChnRotationAttr_x9b74
    VI_SetChnRotationAttr_x9b50:
    /*00009b50*/ MOV         R0, R5 
    /*00009b54*/ ADD         SP, SP, #204                @ 0xcc 
    /*00009b58*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SetChnRotationAttr_x9b5c:
    /*00009b5c*/ BL          0x000000000000778C 
    /*00009b60*/ SUBS        R5, R0, #0 
    /*00009b64*/ BEQ         VI_SetChnRotationAttr_x9b40
    /*00009b68*/ MOV         R0, R5 
    /*00009b6c*/ ADD         SP, SP, #204                @ 0xcc 
    /*00009b70*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SetChnRotationAttr_x9b74:
    /*00009b74*/ MOV         R0, R7 
    /*00009b78*/ BL          0x0000000000009B78          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00009b7c*/ SUBS        R5, R0, #0 
    /*00009b80*/ BNE         VI_SetChnRotationAttr_x9b50
    /*00009b84*/ MOV         R0, R6 
    /*00009b88*/ BL          0x0000000000009B88          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*00009b8c*/ CMP         R0, #0 
    /*00009b90*/ BNE         VI_SetChnRotationAttr_x9e18
    /*00009b94*/ MOV         R0, #37                     @ 0x25 
    /*00009b98*/ BL          0x0000000000009B98          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009b9c*/ SUBS        FP, R0, #0 
    /*00009ba0*/ BEQ         VI_SetChnRotationAttr_x9ec4
    /*00009ba4*/ MOV         R3, #176                    @ 0xb0 
    /*00009ba8*/ MOVW        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00009bac*/ MUL         R3, R3, R4 
    /*00009bb0*/ MOVT        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00009bb4*/ ADD         R9, R3, #100                @ 0x64 
    /*00009bb8*/ ADD         R9, R8, R9 
    /*00009bbc*/ STR         R3, [SP, #16] 
    /*00009bc0*/ MOV         R0, R9 
    /*00009bc4*/ BL          0x0000000000009BC4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00009bc8*/ CMP         R0, #0 
    /*00009bcc*/ BNE         VI_SetChnRotationAttr_x9e48
    /*00009bd0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00009bd4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00009bd8*/ LDR         R3, [R3, R4, LSL #2] 
    /*00009bdc*/ CMP         R3, #0 
    /*00009be0*/ BEQ         VI_SetChnRotationAttr_x9ef0
    /*00009be4*/ MOV         R1, R6 
    /*00009be8*/ MOV         R0, R4 
    /*00009bec*/ BL          0x0000000000009BEC          @ VI_DRV_IsChnAttrSetted [R_ARM_CALL: .text+0x29cfc] 
    /*00009bf0*/ CMP         R0, #0 
    /*00009bf4*/ BEQ         VI_SetChnRotationAttr_x9e54
    /*00009bf8*/ MOV         R1, R6 
    /*00009bfc*/ MOV         R0, R4 
    /*00009c00*/ ADD         R2, SP, #68                 @ 0x44 
    /*00009c04*/ BL          0x0000000000009C04          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*00009c08*/ LDR         R3, [R7] 
    /*00009c0c*/ CMP         R3, #0 
    /*00009c10*/ BNE         VI_SetChnRotationAttr_x9d6c
    VI_SetChnRotationAttr_x9c14:
    /*00009c14*/ MOV         R1, R6 
    /*00009c18*/ MOV         R0, R4 
    /*00009c1c*/ BL          0x0000000000009C1C          @ VI_IsPhyChnAttachFishEye [R_ARM_CALL: .text+0x442c] 
    /*00009c20*/ CMP         R0, #0 
    /*00009c24*/ BNE         VI_SetChnRotationAttr_x9e8c
    /*00009c28*/ ADD         R2, SP, #40                 @ 0x28 
    /*00009c2c*/ MOV         R1, R6 
    /*00009c30*/ MOV         R0, R4 
    /*00009c34*/ BL          0x0000000000009C34          @ VI_DRV_GetChnRotationExAttrSet [R_ARM_CALL: .text+0x2a35c] 
    /*00009c38*/ LDR         R3, [R7] 
    /*00009c3c*/ CMP         R3, #0 
    /*00009c40*/ BEQ         VI_SetChnRotationAttr_x9c50
    /*00009c44*/ LDR         R2, [SP, #40]               @ 0x28 
    /*00009c48*/ CMP         R2, #1 
    /*00009c4c*/ BEQ         VI_SetChnRotationAttr_x9f8c
    VI_SetChnRotationAttr_x9c50:
    /*00009c50*/ ADD         R2, SP, #68                 @ 0x44 
    /*00009c54*/ MOV         R1, R6 
    /*00009c58*/ MOV         R0, R4 
    /*00009c5c*/ BL          0x0000000000009C5C          @ VI_DRV_ChnCalcCrop [R_ARM_CALL: .text+0x2b668] 
    /*00009c60*/ CMP         R0, #0 
    /*00009c64*/ BNE         VI_SetChnRotationAttr_x9eb0
    /*00009c68*/ MOV         R1, R6 
    /*00009c6c*/ MOV         R0, R4 
    /*00009c70*/ ADD         R2, SP, #28 
    /*00009c74*/ BL          0x0000000000009C74          @ VI_DRV_GetChnOutPutSize [R_ARM_CALL: .text+0x2b724] 
    /*00009c78*/ LDR         R3, [SP, #80]               @ 0x50 
    /*00009c7c*/ CMP         R3, #0 
    /*00009c80*/ MOVEQ       R3, #8 
    /*00009c84*/ STREQ       R3, [SP, #36]               @ 0x24 
    /*00009c88*/ BEQ         VI_SetChnRotationAttr_x9ca0
    /*00009c8c*/ SUB         R2, R3, #1 
    /*00009c90*/ CMP         R2, #4 
    /*00009c94*/ BHI         VI_SetChnRotationAttr_x9f28
    /*00009c98*/ MOV         R3, #10 
    /*00009c9c*/ STR         R3, [SP, #36]               @ 0x24 
    VI_SetChnRotationAttr_x9ca0:
    /*00009ca0*/ MOV         R1, R7 
    /*00009ca4*/ ADD         SL, SP, #200                @ 0xc8 
    /*00009ca8*/ LDR         R2, [R1], #80               @ 0x50 
    /*00009cac*/ MOV         IP, #0 
    /*00009cb0*/ STR         IP, [SL, #-88]!             @ 0xffffffa8 
    /*00009cb4*/ ADD         R3, R7, #168                @ 0xa8 
    /*00009cb8*/ ADD         R0, SP, #28 
    /*00009cbc*/ STR         R3, [SP, #20] 
    /*00009cc0*/ STR         R1, [SP] 
    /*00009cc4*/ MOV         R1, SL 
    /*00009cc8*/ LDR         R5, [FP, #64]               @ 0x40 
    /*00009ccc*/ BLX         R5 
    /*00009cd0*/ SUBS        R5, R0, #0 
    /*00009cd4*/ STRNE       R5, [SP, #12] 
    /*00009cd8*/ MOVWNE      R3, #1670                   @ 0x686 
    /*00009cdc*/ BNE         VI_SetChnRotationAttr_x9de8
    /*00009ce0*/ LDR         R3, [FP, #84]               @ 0x54 
    /*00009ce4*/ MOV         R1, SL 
    /*00009ce8*/ LDR         R2, [SP, #20] 
    /*00009cec*/ LDR         R0, [R7] 
    /*00009cf0*/ BLX         R3 
    /*00009cf4*/ SUBS        R5, R0, #0 
    /*00009cf8*/ BNE         VI_SetChnRotationAttr_x9de0
    /*00009cfc*/ LDR         R3, [SP, #16] 
    /*00009d00*/ ADD         R1, SP, #24 
    /*00009d04*/ ADD         R3, R3, #140                @ 0x8c 
    /*00009d08*/ ADD         R8, R8, R3 
    /*00009d0c*/ MOV         R0, R8 
    /*00009d10*/ BL          0x0000000000009D10          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009d14*/ LDR         R1, [R7] 
    /*00009d18*/ MOVW        R3, #1687                   @ 0x697 
    /*00009d1c*/ STR         R6, [SP, #8] 
    /*00009d20*/ STR         R3, [SP] 
    /*00009d24*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22cc] 
    /*00009d28*/ LDR         R3, [PC, #664]              @ 0x0000000000009fc8 
    /*00009d2c*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22cc] 
    /*00009d30*/ STR         R1, [SP, #12] 
    /*00009d34*/ MOV         R0, #6 
    /*00009d38*/ STR         R4, [SP, #4] 
    /*00009d3c*/ MOV         R1, #16 
    /*00009d40*/ BL          0x0000000000009D40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009d44*/ MOV         R2, R7 
    /*00009d48*/ MOV         R1, R6 
    /*00009d4c*/ MOV         R0, R4 
    /*00009d50*/ BL          0x0000000000009D50          @ VI_DRV_SetChnRotationAttr [R_ARM_CALL: .text+0x2a4a4] 
    /*00009d54*/ MOV         R0, R8 
    /*00009d58*/ ADD         R1, SP, #24 
    /*00009d5c*/ BL          0x0000000000009D5C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009d60*/ MOV         R0, R9 
    /*00009d64*/ BL          0x0000000000009D64          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009d68*/ B           VI_SetChnRotationAttr_x9b50
    VI_SetChnRotationAttr_x9d6c:
    /*00009d6c*/ MOV         R1, R6 
    /*00009d70*/ MOV         R0, R4 
    /*00009d74*/ BL          0x0000000000009D74          @ VI_CheckChnAttrForGdc [R_ARM_CALL: .text+0x20e10] 
    /*00009d78*/ SUBS        R5, R0, #0 
    /*00009d7c*/ BNE         VI_SetChnRotationAttr_x9e0c
    /*00009d80*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*00009d84*/ CMP         R3, #26 
    /*00009d88*/ CMPNE       R3, #39                     @ 0x27 
    /*00009d8c*/ BNE         VI_SetChnRotationAttr_x9f60
    /*00009d90*/ LDR         R3, [SP, #88]               @ 0x58 
    /*00009d94*/ CMP         R3, #0 
    /*00009d98*/ BEQ         VI_SetChnRotationAttr_x9c14
    /*00009d9c*/ MOV         R0, R9 
    /*00009da0*/ MOVW        R5, #32776                  @ 0x8008 
    /*00009da4*/ BL          0x0000000000009DA4          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009da8*/ LDR         R1, [SP, #88]               @ 0x58 
    /*00009dac*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20ec] 
    /*00009db0*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20ec] 
    /*00009db4*/ MOVW        R3, #1612                   @ 0x64c 
    /*00009db8*/ STR         R6, [SP, #8] 
    /*00009dbc*/ STR         R4, [SP, #4] 
    /*00009dc0*/ STR         R1, [SP, #12] 
    VI_SetChnRotationAttr_x9dc4:
    /*00009dc4*/ STR         R3, [SP] 
    /*00009dc8*/ MOV         R1, #16 
    /*00009dcc*/ LDR         R3, [PC, #500]              @ 0x0000000000009fc8 
    /*00009dd0*/ MOV         R0, #3 
    /*00009dd4*/ BL          0x0000000000009DD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009dd8*/ MOVT        R5, #40976                  @ 0xa010 
    /*00009ddc*/ B           VI_SetChnRotationAttr_x9b50
    VI_SetChnRotationAttr_x9de0:
    /*00009de0*/ MOVW        R3, #1679                   @ 0x68f 
    /*00009de4*/ STR         R5, [SP, #12] 
    VI_SetChnRotationAttr_x9de8:
    /*00009de8*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2264] 
    /*00009dec*/ STR         R3, [SP] 
    /*00009df0*/ STR         R6, [SP, #8] 
    /*00009df4*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2264] 
    /*00009df8*/ STR         R4, [SP, #4] 
    /*00009dfc*/ MOV         R1, #16 
    /*00009e00*/ LDR         R3, [PC, #448]              @ 0x0000000000009fc8 
    /*00009e04*/ MOV         R0, #3 
    /*00009e08*/ BL          0x0000000000009E08          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_SetChnRotationAttr_x9e0c:
    /*00009e0c*/ MOV         R0, R9 
    /*00009e10*/ BL          0x0000000000009E10          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009e14*/ B           VI_SetChnRotationAttr_x9b50
    VI_SetChnRotationAttr_x9e18:
    /*00009e18*/ MOVW        R3, #1558                   @ 0x616 
    /*00009e1c*/ STR         R6, [SP, #4] 
    /*00009e20*/ STR         R3, [SP] 
    /*00009e24*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fe4] 
    /*00009e28*/ LDR         R3, [PC, #408]              @ 0x0000000000009fc8 
    /*00009e2c*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fe4] 
    /*00009e30*/ MOV         R1, #16 
    /*00009e34*/ MOV         R0, #3 
    /*00009e38*/ MOVW        R5, #32776                  @ 0x8008 
    /*00009e3c*/ BL          0x0000000000009E3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009e40*/ MOVT        R5, #40976                  @ 0xa010 
    /*00009e44*/ B           VI_SetChnRotationAttr_x9b50
    VI_SetChnRotationAttr_x9e48:
    /*00009e48*/ MOV         R5, #65024                  @ 0xfe00 
    /*00009e4c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00009e50*/ B           VI_SetChnRotationAttr_x9b50
    VI_SetChnRotationAttr_x9e54:
    /*00009e54*/ MOV         R0, R9 
    /*00009e58*/ MOVW        R5, #32784                  @ 0x8010 
    /*00009e5c*/ BL          0x0000000000009E5C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009e60*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2058] 
    /*00009e64*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2058] 
    /*00009e68*/ MOVW        R3, #1583                   @ 0x62f 
    /*00009e6c*/ STMIB       SP, {R4, R6} 
    /*00009e70*/ STR         R3, [SP] 
    VI_SetChnRotationAttr_x9e74:
    /*00009e74*/ LDR         R3, [PC, #332]              @ 0x0000000000009fc8 
    /*00009e78*/ MOV         R1, #16 
    /*00009e7c*/ MOV         R0, #3 
    /*00009e80*/ MOVT        R5, #40976                  @ 0xa010 
    /*00009e84*/ BL          0x0000000000009E84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009e88*/ B           VI_SetChnRotationAttr_x9b50
    VI_SetChnRotationAttr_x9e8c:
    /*00009e8c*/ MOV         R0, R9 
    /*00009e90*/ MOVW        R5, #32777                  @ 0x8009 
    /*00009e94*/ BL          0x0000000000009E94          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009e98*/ MOVW        R3, #1622                   @ 0x656 
    /*00009e9c*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2140] 
    /*00009ea0*/ STMIB       SP, {R4, R6} 
    /*00009ea4*/ STR         R3, [SP] 
    /*00009ea8*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2140] 
    /*00009eac*/ B           VI_SetChnRotationAttr_x9e74
    VI_SetChnRotationAttr_x9eb0:
    /*00009eb0*/ MOV         R0, R9 
    /*00009eb4*/ MOVW        R5, #32771                  @ 0x8003 
    /*00009eb8*/ BL          0x0000000000009EB8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009ebc*/ MOVT        R5, #40976                  @ 0xa010 
    /*00009ec0*/ B           VI_SetChnRotationAttr_x9b50
    VI_SetChnRotationAttr_x9ec4:
    /*00009ec4*/ MOVW        R3, #1564                   @ 0x61c 
    /*00009ec8*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2018] 
    /*00009ecc*/ STR         R3, [SP] 
    /*00009ed0*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2018] 
    /*00009ed4*/ LDR         R3, [PC, #236]              @ 0x0000000000009fc8 
    /*00009ed8*/ MOV         R1, #16 
    /*00009edc*/ MOV         R0, #3 
    /*00009ee0*/ MOVW        R5, #32777                  @ 0x8009 
    /*00009ee4*/ BL          0x0000000000009EE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009ee8*/ MOVT        R5, #40976                  @ 0xa010 
    /*00009eec*/ B           VI_SetChnRotationAttr_x9b50
    VI_SetChnRotationAttr_x9ef0:
    /*00009ef0*/ MOVW        R3, #1575                   @ 0x627 
    /*00009ef4*/ MOV         R1, #16 
    /*00009ef8*/ STR         R3, [SP] 
    /*00009efc*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f5c] 
    /*00009f00*/ LDR         R3, [PC, #192]              @ 0x0000000000009fc8 
    /*00009f04*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f5c] 
    /*00009f08*/ STR         R4, [SP, #4] 
    /*00009f0c*/ MOV         R0, #3 
    /*00009f10*/ BL          0x0000000000009F10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009f14*/ MOV         R0, R9 
    /*00009f18*/ MOVW        R5, #32773                  @ 0x8005 
    /*00009f1c*/ BL          0x0000000000009F1C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009f20*/ MOVT        R5, #40976                  @ 0xa010 
    /*00009f24*/ B           VI_SetChnRotationAttr_x9b50
    VI_SetChnRotationAttr_x9f28:
    /*00009f28*/ STR         R3, [SP, #4] 
    /*00009f2c*/ MOV         R1, #16 
    /*00009f30*/ MOVW        R3, #1658                   @ 0x67a 
    /*00009f34*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2230] 
    /*00009f38*/ STR         R3, [SP] 
    /*00009f3c*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2230] 
    /*00009f40*/ LDR         R3, [PC, #128]              @ 0x0000000000009fc8 
    /*00009f44*/ MOV         R0, #3 
    /*00009f48*/ BL          0x0000000000009F48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009f4c*/ MOV         R0, R9 
    /*00009f50*/ MOVW        R5, #32771                  @ 0x8003 
    /*00009f54*/ BL          0x0000000000009F54          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009f58*/ MOVT        R5, #40997                  @ 0xa025 
    /*00009f5c*/ B           VI_SetChnRotationAttr_x9b50
    VI_SetChnRotationAttr_x9f60:
    /*00009f60*/ MOV         R0, R9 
    /*00009f64*/ MOVW        R5, #32776                  @ 0x8008 
    /*00009f68*/ BL          0x0000000000009F68          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009f6c*/ LDR         R1, [SP, #76]               @ 0x4c 
    /*00009f70*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x209c] 
    /*00009f74*/ STR         R6, [SP, #8] 
    /*00009f78*/ MOVW        R3, #1605                   @ 0x645 
    /*00009f7c*/ STR         R4, [SP, #4] 
    /*00009f80*/ STR         R1, [SP, #12] 
    /*00009f84*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x209c] 
    /*00009f88*/ B           VI_SetChnRotationAttr_x9dc4
    VI_SetChnRotationAttr_x9f8c:
    /*00009f8c*/ STR         R2, [SP, #8] 
    /*00009f90*/ MOV         R1, #1632                   @ 0x660 
    /*00009f94*/ STR         R3, [SP, #4] 
    /*00009f98*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x21c0] 
    /*00009f9c*/ STR         R1, [SP] 
    /*00009fa0*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x21c0] 
    /*00009fa4*/ LDR         R3, [PC, #28]               @ 0x0000000000009fc8 
    /*00009fa8*/ MOV         R1, #16 
    /*00009fac*/ MOV         R0, #3 
    /*00009fb0*/ MOVW        R5, #32777                  @ 0x8009 
    /*00009fb4*/ BL          0x0000000000009FB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009fb8*/ MOV         R0, R9 
    /*00009fbc*/ BL          0x0000000000009FBC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009fc0*/ MOVT        R5, #40976                  @ 0xa010 
    /*00009fc4*/ B           VI_SetChnRotationAttr_x9b50
    /*00009fc8*/ ANDEQ       R0, R0, IP, ROR R6 
FUNC_END VI_SetChnRotationAttr


FUNC_BEGIN VI_GetChnRotationAttr
    /*00009fcc*/ CMP         R0, #3 
    /*00009fd0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00009fd4*/ MOV         R4, R0 
    /*00009fd8*/ SUB         SP, SP, #8 
    /*00009fdc*/ MOV         R6, R1 
    /*00009fe0*/ MOV         R7, R2 
    /*00009fe4*/ BHI         VI_GetChnRotationAttr_xa004
    VI_GetChnRotationAttr_x9fe8:
    /*00009fe8*/ MOV         R0, R6 
    /*00009fec*/ BL          0x0000000000009FEC          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*00009ff0*/ SUBS        R5, R0, #0 
    /*00009ff4*/ BEQ         VI_GetChnRotationAttr_xa01c
    VI_GetChnRotationAttr_x9ff8:
    /*00009ff8*/ MOV         R0, R5 
    /*00009ffc*/ ADD         SP, SP, #8 
    /*0000a000*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetChnRotationAttr_xa004:
    /*0000a004*/ BL          0x000000000000778C 
    /*0000a008*/ SUBS        R5, R0, #0 
    /*0000a00c*/ BEQ         VI_GetChnRotationAttr_x9fe8
    /*0000a010*/ MOV         R0, R5 
    /*0000a014*/ ADD         SP, SP, #8 
    /*0000a018*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetChnRotationAttr_xa01c:
    /*0000a01c*/ MOV         R0, R7 
    /*0000a020*/ BL          0x000000000000A020          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000a024*/ SUBS        R5, R0, #0 
    /*0000a028*/ BNE         VI_GetChnRotationAttr_x9ff8
    /*0000a02c*/ MOV         R0, R6 
    /*0000a030*/ BL          0x000000000000A030          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*0000a034*/ CMP         R0, #0 
    /*0000a038*/ BNE         VI_GetChnRotationAttr_xa088
    /*0000a03c*/ LDR         R3, [PC, #184]              @ 0x000000000000a0fc 
    /*0000a040*/ MOV         R8, #176                    @ 0xb0 
    /*0000a044*/ MLA         R8, R8, R4, R3 
    /*0000a048*/ MOV         R0, R8 
    /*0000a04c*/ BL          0x000000000000A04C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a050*/ CMP         R0, #0 
    /*0000a054*/ BNE         VI_GetChnRotationAttr_xa0b8
    /*0000a058*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000a05c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000a060*/ LDR         R3, [R3, R4, LSL #2] 
    /*0000a064*/ CMP         R3, #0 
    /*0000a068*/ BEQ         VI_GetChnRotationAttr_xa0c4
    /*0000a06c*/ MOV         R0, R4 
    /*0000a070*/ MOV         R2, R7 
    /*0000a074*/ MOV         R1, R6 
    /*0000a078*/ BL          0x000000000000A078          @ VI_DRV_GetChnRotationAttrSet [R_ARM_CALL: .text+0x2a5c0] 
    /*0000a07c*/ MOV         R0, R8 
    /*0000a080*/ BL          0x000000000000A080          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a084*/ B           VI_GetChnRotationAttr_x9ff8
    VI_GetChnRotationAttr_xa088:
    /*0000a088*/ MOVW        R3, #1705                   @ 0x6a9 
    /*0000a08c*/ STR         R6, [SP, #4] 
    /*0000a090*/ STR         R3, [SP] 
    /*0000a094*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fe4] 
    /*0000a098*/ LDR         R3, [PC, #96]               @ 0x000000000000a100 
    /*0000a09c*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fe4] 
    /*0000a0a0*/ MOV         R1, #16 
    /*0000a0a4*/ MOV         R0, #3 
    /*0000a0a8*/ MOVW        R5, #32776                  @ 0x8008 
    /*0000a0ac*/ BL          0x000000000000A0AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a0b0*/ MOVT        R5, #40976                  @ 0xa010 
    /*0000a0b4*/ B           VI_GetChnRotationAttr_x9ff8
    VI_GetChnRotationAttr_xa0b8:
    /*0000a0b8*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000a0bc*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000a0c0*/ B           VI_GetChnRotationAttr_x9ff8
    VI_GetChnRotationAttr_xa0c4:
    /*0000a0c4*/ MOVW        R3, #1713                   @ 0x6b1 
    /*0000a0c8*/ MOV         R1, #16 
    /*0000a0cc*/ STR         R3, [SP] 
    /*0000a0d0*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f5c] 
    /*0000a0d4*/ LDR         R3, [PC, #36]               @ 0x000000000000a100 
    /*0000a0d8*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f5c] 
    /*0000a0dc*/ STR         R4, [SP, #4] 
    /*0000a0e0*/ MOV         R0, #3 
    /*0000a0e4*/ BL          0x000000000000A0E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a0e8*/ MOV         R0, R8 
    /*0000a0ec*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000a0f0*/ BL          0x000000000000A0F0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a0f4*/ MOVT        R5, #40976                  @ 0xa010 
    /*0000a0f8*/ B           VI_GetChnRotationAttr_x9ff8
    /*0000a0fc*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0000a100*/ MULEQ       R0, R4, R6 
FUNC_END VI_GetChnRotationAttr


FUNC_BEGIN VI_CheckChnId.part.0
    /*0000a104*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000a108*/ SUB         SP, SP, #12 
    /*0000a10c*/ MOV         R2, #38                     @ 0x26 
    /*0000a110*/ MOV         R1, #16 
    /*0000a114*/ STR         R0, [SP, #4] 
    /*0000a118*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x6ac] 
    /*0000a11c*/ STR         R2, [SP] 
    /*0000a120*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x6ac] 
    /*0000a124*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2310] 
    /*0000a128*/ MOV         R0, #3 
    /*0000a12c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2310] 
    /*0000a130*/ BL          0x000000000000A130          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a134*/ MOVW        R0, #32770                  @ 0x8002 
    /*0000a138*/ MOVT        R0, #40976                  @ 0xa010 
    /*0000a13c*/ ADD         SP, SP, #12 
    /*0000a140*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_CheckChnId.part.0


FUNC_BEGIN VI_CheckPhyChnId.part.1
    /*0000a144*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000a148*/ SUB         SP, SP, #20 
    /*0000a14c*/ MOV         R3, #0 
    /*0000a150*/ MOV         R1, #50                     @ 0x32 
    /*0000a154*/ STR         R0, [SP, #4] 
    /*0000a158*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2348] 
    /*0000a15c*/ STR         R3, [SP, #12] 
    /*0000a160*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2348] 
    /*0000a164*/ STR         R3, [SP, #8] 
    /*0000a168*/ MOV         R0, #3 
    /*0000a16c*/ STR         R1, [SP] 
    /*0000a170*/ MOV         R1, #16 
    /*0000a174*/ LDR         R3, [PC, #16]               @ 0x000000000000a18c 
    /*0000a178*/ BL          0x000000000000A178          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a17c*/ MOVW        R0, #32770                  @ 0x8002 
    /*0000a180*/ MOVT        R0, #40976                  @ 0xa010 
    /*0000a184*/ ADD         SP, SP, #20 
    /*0000a188*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000a18c*/ @           <UNDEFINED> instruction: 0x000006bc 
FUNC_END VI_CheckPhyChnId.part.1


FUNC_BEGIN VI_CheckChnId
    /*0000a190*/ CMP         R0, #8 
    /*0000a194*/ BHI         VI_CheckChnId_xa1a0
    /*0000a198*/ MOV         R0, #0 
    /*0000a19c*/ BX          LR 
    VI_CheckChnId_xa1a0:
    /*0000a1a0*/ B           0x000000000000A104 
FUNC_END VI_CheckChnId


FUNC_BEGIN VI_CheckPhyChnId
    /*0000a1a4*/ CMP         R0, #0 
    /*0000a1a8*/ BXEQ        LR 
    /*0000a1ac*/ B           0x000000000000A144 
FUNC_END VI_CheckPhyChnId


FUNC_BEGIN VI_SetChnAttr
    /*0000a1b0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000a1b4*/ MOV         R6, R0 
    /*0000a1b8*/ SUB         SP, SP, #28 
    /*0000a1bc*/ MOV         R0, R2 
    /*0000a1c0*/ MOV         R5, R2 
    /*0000a1c4*/ MOV         R7, R1 
    /*0000a1c8*/ BL          0x000000000000A1C8          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000a1cc*/ SUBS        R4, R0, #0 
    /*0000a1d0*/ BEQ         VI_SetChnAttr_xa1e0
    VI_SetChnAttr_xa1d4:
    /*0000a1d4*/ MOV         R0, R4 
    /*0000a1d8*/ ADD         SP, SP, #28 
    /*0000a1dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SetChnAttr_xa1e0:
    /*0000a1e0*/ MOV         R0, R6 
    /*0000a1e4*/ BL          0x000000000000A1E4          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000a1e8*/ SUBS        R4, R0, #0 
    /*0000a1ec*/ BNE         VI_SetChnAttr_xa1d4
    /*0000a1f0*/ CMP         R7, #0 
    /*0000a1f4*/ BNE         VI_SetChnAttr_xa264
    VI_SetChnAttr_xa1f8:
    /*0000a1f8*/ MOV         R8, #176                    @ 0xb0 
    /*0000a1fc*/ MOVW        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000a200*/ MUL         R8, R8, R6 
    /*0000a204*/ MOVT        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0000a208*/ ADD         SL, R8, #100                @ 0x64 
    /*0000a20c*/ ADD         SL, R9, SL 
    /*0000a210*/ MOV         R0, SL 
    /*0000a214*/ BL          0x000000000000A214          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a218*/ SUBS        R4, R0, #0 
    /*0000a21c*/ BNE         VI_SetChnAttr_xa380
    /*0000a220*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000a224*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000a228*/ LDR         FP, [R3, R6, LSL #2] 
    /*0000a22c*/ CMP         FP, #0 
    /*0000a230*/ BEQ         VI_SetChnAttr_xa38c
    /*0000a234*/ LDR         R3, [FP] 
    /*0000a238*/ CMP         R3, #2 
    /*0000a23c*/ BEQ         VI_SetChnAttr_xa368
    /*0000a240*/ MOV         R2, R5 
    /*0000a244*/ MOV         R1, R7 
    /*0000a248*/ MOV         R0, R6 
    /*0000a24c*/ BL          0x000000000000A24C          @ VI_DRV_CheckChnAttr [R_ARM_CALL: .text+0x28e30] 
    /*0000a250*/ SUBS        R4, R0, #0 
    /*0000a254*/ BEQ         VI_SetChnAttr_xa278
    VI_SetChnAttr_xa258:
    /*0000a258*/ MOV         R0, SL 
    /*0000a25c*/ BL          0x000000000000A25C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a260*/ B           VI_SetChnAttr_xa1d4
    VI_SetChnAttr_xa264:
    /*0000a264*/ MOV         R0, R7 
    /*0000a268*/ BL          0x000000000000A144 
    /*0000a26c*/ SUBS        R4, R0, #0 
    /*0000a270*/ BNE         VI_SetChnAttr_xa1d4
    /*0000a274*/ B           VI_SetChnAttr_xa1f8
    VI_SetChnAttr_xa278:
    /*0000a278*/ MOV         R2, R5 
    /*0000a27c*/ MOV         R1, R7 
    /*0000a280*/ MOV         R0, R6 
    /*0000a284*/ BL          0x000000000000A284          @ VI_DRV_CheckChnStaticAttr [R_ARM_CALL: .text+0x29290] 
    /*0000a288*/ SUBS        R4, R0, #0 
    /*0000a28c*/ BNE         VI_SetChnAttr_xa258
    /*0000a290*/ MOV         R1, R7 
    /*0000a294*/ MOV         R0, R6 
    /*0000a298*/ BL          0x000000000000A298          @ VI_DRV_NeedCallGDCFunction [R_ARM_CALL: .text+0x28d64] 
    /*0000a29c*/ CMP         R0, #1 
    /*0000a2a0*/ BEQ         VI_SetChnAttr_xa3bc
    VI_SetChnAttr_xa2a4:
    /*0000a2a4*/ ADD         R2, SP, #20 
    /*0000a2a8*/ MOV         R1, R7 
    /*0000a2ac*/ MOV         R0, R6 
    /*0000a2b0*/ BL          0x000000000000A2B0          @ VI_DRV_GetChnRotationAttrSet [R_ARM_CALL: .text+0x2a5c0] 
    /*0000a2b4*/ LDR         R3, [SP, #20] 
    /*0000a2b8*/ CMP         R3, #0 
    /*0000a2bc*/ BEQ         VI_SetChnAttr_xa2cc
    /*0000a2c0*/ LDR         R3, [R5, #20] 
    /*0000a2c4*/ CMP         R3, #1 
    /*0000a2c8*/ BEQ         VI_SetChnAttr_xa458
    VI_SetChnAttr_xa2cc:
    /*0000a2cc*/ MOV         R3, #468                    @ 0x1d4 
    /*0000a2d0*/ MOVW        R2, #38828                  @ 0x97ac 
    /*0000a2d4*/ MLA         R3, R3, R7, FP 
    /*0000a2d8*/ LDR         R3, [R3, R2] 
    /*0000a2dc*/ CMP         R3, #1 
    /*0000a2e0*/ BEQ         VI_SetChnAttr_xa408
    VI_SetChnAttr_xa2e4:
    /*0000a2e4*/ MOV         R1, R7 
    /*0000a2e8*/ MOV         R0, R6 
    /*0000a2ec*/ BL          0x000000000000A2EC          @ VI_IsPhyChnAttachFishEye [R_ARM_CALL: .text+0x442c] 
    /*0000a2f0*/ CMP         R0, #0 
    /*0000a2f4*/ BEQ         VI_SetChnAttr_xa310
    /*0000a2f8*/ MOV         R2, R5 
    /*0000a2fc*/ MOV         R1, R7 
    /*0000a300*/ MOV         R0, R6 
    /*0000a304*/ BL          0x000000000000A304          @ VI_DRV_CheckChnStaticAttrForFisheye [R_ARM_CALL: .text+0x294b0] 
    /*0000a308*/ CMP         R0, #0 
    /*0000a30c*/ BNE         VI_SetChnAttr_xa43c
    VI_SetChnAttr_xa310:
    /*0000a310*/ ADD         R8, R8, #140                @ 0x8c 
    /*0000a314*/ ADD         R1, SP, #16 
    /*0000a318*/ ADD         R9, R9, R8 
    /*0000a31c*/ MOV         R0, R9 
    /*0000a320*/ BL          0x000000000000A320          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a324*/ MOV         R3, #36                     @ 0x24 
    /*0000a328*/ MUL         R3, R3, R7 
    /*0000a32c*/ ADD         R2, FP, R3 
    /*0000a330*/ LDR         R2, [R2, #148]              @ 0x94 
    /*0000a334*/ CMP         R2, #0 
    /*0000a338*/ BEQ         VI_SetChnAttr_xa348
    /*0000a33c*/ ADD         R3, R3, #148                @ 0x94 
    /*0000a340*/ ADD         R0, FP, R3 
    /*0000a344*/ BL          0x000000000000A344          @ VI_ClearPicQueue [R_ARM_CALL: .text+0x3e24] 
    VI_SetChnAttr_xa348:
    /*0000a348*/ MOV         R1, R7 
    /*0000a34c*/ MOV         R2, R5 
    /*0000a350*/ MOV         R0, R6 
    /*0000a354*/ BL          0x000000000000A354          @ VI_DRV_SetChnAttr [R_ARM_CALL: .text+0x29874] 
    /*0000a358*/ ADD         R1, SP, #16 
    /*0000a35c*/ MOV         R0, R9 
    /*0000a360*/ BL          0x000000000000A360          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a364*/ B           VI_SetChnAttr_xa258
    VI_SetChnAttr_xa368:
    /*0000a368*/ ADD         R8, R8, #140                @ 0x8c 
    /*0000a36c*/ ADD         R1, SP, #16 
    /*0000a370*/ ADD         R9, R9, R8 
    /*0000a374*/ MOV         R0, R9 
    /*0000a378*/ BL          0x000000000000A378          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a37c*/ B           VI_SetChnAttr_xa348
    VI_SetChnAttr_xa380:
    /*0000a380*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000a384*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000a388*/ B           VI_SetChnAttr_xa1d4
    VI_SetChnAttr_xa38c:
    /*0000a38c*/ MOV         R3, #76                     @ 0x4c 
    /*0000a390*/ STR         R6, [SP, #4] 
    /*0000a394*/ STR         R3, [SP] 
    /*0000a398*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23a4] 
    /*0000a39c*/ LDR         R3, [PC, #208]              @ 0x000000000000a474 
    /*0000a3a0*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23a4] 
    /*0000a3a4*/ MOV         R1, #16 
    /*0000a3a8*/ MOV         R0, #3 
    /*0000a3ac*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000a3b0*/ BL          0x000000000000A3B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a3b4*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000a3b8*/ B           VI_SetChnAttr_xa258
    VI_SetChnAttr_xa3bc:
    /*0000a3bc*/ MOV         R2, R5 
    /*0000a3c0*/ MOV         R1, R7 
    /*0000a3c4*/ MOV         R0, R6 
    /*0000a3c8*/ BL          0x000000000000A3C8          @ VI_DRV_CheckChnStaticAttrForGdc [R_ARM_CALL: .text+0x29364] 
    /*0000a3cc*/ CMP         R0, #0 
    /*0000a3d0*/ BEQ         VI_SetChnAttr_xa2a4
    /*0000a3d4*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23d4] 
    /*0000a3d8*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23d4] 
    /*0000a3dc*/ MOV         R3, #113                    @ 0x71 
    /*0000a3e0*/ STR         R7, [SP, #8] 
    /*0000a3e4*/ STR         R6, [SP, #4] 
    /*0000a3e8*/ STR         R3, [SP] 
    VI_SetChnAttr_xa3ec:
    /*0000a3ec*/ LDR         R3, [PC, #128]              @ 0x000000000000a474 
    /*0000a3f0*/ MOV         R1, #16 
    /*0000a3f4*/ MOV         R0, #3 
    /*0000a3f8*/ MOVW        R4, #32777                  @ 0x8009 
    /*0000a3fc*/ BL          0x000000000000A3FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a400*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000a404*/ B           VI_SetChnAttr_xa258
    VI_SetChnAttr_xa408:
    /*0000a408*/ MOV         R2, R5 
    /*0000a40c*/ MOV         R1, R7 
    /*0000a410*/ MOV         R0, R6 
    /*0000a414*/ BL          0x000000000000A414          @ VI_DRV_CheckChnStaticAttrForDis [R_ARM_CALL: .text+0x2963c] 
    /*0000a418*/ CMP         R0, #0 
    /*0000a41c*/ BEQ         VI_SetChnAttr_xa2e4
    /*0000a420*/ MOV         R3, #135                    @ 0x87 
    /*0000a424*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24ac] 
    /*0000a428*/ STR         R7, [SP, #8] 
    /*0000a42c*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24ac] 
    /*0000a430*/ STR         R6, [SP, #4] 
    /*0000a434*/ STR         R3, [SP] 
    /*0000a438*/ B           VI_SetChnAttr_xa3ec
    VI_SetChnAttr_xa43c:
    /*0000a43c*/ MOV         R3, #150                    @ 0x96 
    /*0000a440*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2514] 
    /*0000a444*/ STR         R7, [SP, #8] 
    /*0000a448*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2514] 
    /*0000a44c*/ STR         R6, [SP, #4] 
    /*0000a450*/ STR         R3, [SP] 
    /*0000a454*/ B           VI_SetChnAttr_xa3ec
    VI_SetChnAttr_xa458:
    /*0000a458*/ MOV         R3, #123                    @ 0x7b 
    /*0000a45c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2438] 
    /*0000a460*/ STR         R7, [SP, #8] 
    /*0000a464*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2438] 
    /*0000a468*/ STR         R6, [SP, #4] 
    /*0000a46c*/ STR         R3, [SP] 
    /*0000a470*/ B           VI_SetChnAttr_xa3ec
    /*0000a474*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VI_SetChnAttr


FUNC_BEGIN VI_GetChnAttr
    /*0000a478*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000a47c*/ MOV         R6, R0 
    /*0000a480*/ SUB         SP, SP, #16 
    /*0000a484*/ MOV         R0, R2 
    /*0000a488*/ MOV         R5, R2 
    /*0000a48c*/ MOV         R7, R1 
    /*0000a490*/ BL          0x000000000000A490          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000a494*/ SUBS        R4, R0, #0 
    /*0000a498*/ BEQ         VI_GetChnAttr_xa4a8
    VI_GetChnAttr_xa49c:
    /*0000a49c*/ MOV         R0, R4 
    /*0000a4a0*/ ADD         SP, SP, #16 
    /*0000a4a4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetChnAttr_xa4a8:
    /*0000a4a8*/ MOV         R0, R6 
    /*0000a4ac*/ BL          0x000000000000A4AC          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000a4b0*/ SUBS        R4, R0, #0 
    /*0000a4b4*/ BNE         VI_GetChnAttr_xa49c
    /*0000a4b8*/ CMP         R7, #0 
    /*0000a4bc*/ BNE         VI_GetChnAttr_xa520
    VI_GetChnAttr_xa4c0:
    /*0000a4c0*/ LDR         R3, [PC, #236]              @ 0x000000000000a5b4 
    /*0000a4c4*/ MOV         R8, #176                    @ 0xb0 
    /*0000a4c8*/ MLA         R8, R8, R6, R3 
    /*0000a4cc*/ MOV         R0, R8 
    /*0000a4d0*/ BL          0x000000000000A4D0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a4d4*/ CMP         R0, #0 
    /*0000a4d8*/ BNE         VI_GetChnAttr_xa538
    /*0000a4dc*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000a4e0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000a4e4*/ LDR         R3, [R3, R6, LSL #2] 
    /*0000a4e8*/ CMP         R3, #0 
    /*0000a4ec*/ BEQ         VI_GetChnAttr_xa57c
    /*0000a4f0*/ MOV         R1, R7 
    /*0000a4f4*/ MOV         R0, R6 
    /*0000a4f8*/ BL          0x000000000000A4F8          @ VI_DRV_IsChnAttrSetted [R_ARM_CALL: .text+0x29cfc] 
    /*0000a4fc*/ CMP         R0, #0 
    /*0000a500*/ BEQ         VI_GetChnAttr_xa544
    /*0000a504*/ MOV         R2, R5 
    /*0000a508*/ MOV         R1, R7 
    /*0000a50c*/ MOV         R0, R6 
    /*0000a510*/ BL          0x000000000000A510          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*0000a514*/ MOV         R0, R8 
    /*0000a518*/ BL          0x000000000000A518          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a51c*/ B           VI_GetChnAttr_xa49c
    VI_GetChnAttr_xa520:
    /*0000a520*/ MOV         R0, R7 
    /*0000a524*/ BL          0x000000000000A144 
    /*0000a528*/ CMP         R0, #0 
    /*0000a52c*/ MOVNE       R4, R0 
    /*0000a530*/ BNE         VI_GetChnAttr_xa49c
    /*0000a534*/ B           VI_GetChnAttr_xa4c0
    VI_GetChnAttr_xa538:
    /*0000a538*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000a53c*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000a540*/ B           VI_GetChnAttr_xa49c
    VI_GetChnAttr_xa544:
    /*0000a544*/ MOV         R0, R8 
    /*0000a548*/ MOVW        R4, #32775                  @ 0x8007 
    /*0000a54c*/ BL          0x000000000000A54C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a550*/ MOV         R3, #195                    @ 0xc3 
    /*0000a554*/ STMIB       SP, {R6, R7} 
    /*0000a558*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2590] 
    /*0000a55c*/ STR         R3, [SP] 
    /*0000a560*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2590] 
    /*0000a564*/ LDR         R3, [PC, #76]               @ 0x000000000000a5b8 
    /*0000a568*/ MOV         R1, #16 
    /*0000a56c*/ MOV         R0, #3 
    /*0000a570*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000a574*/ BL          0x000000000000A574          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a578*/ B           VI_GetChnAttr_xa49c
    VI_GetChnAttr_xa57c:
    /*0000a57c*/ MOV         R0, R8 
    /*0000a580*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000a584*/ BL          0x000000000000A584          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a588*/ MOV         R3, #188                    @ 0xbc 
    /*0000a58c*/ STR         R6, [SP, #4] 
    /*0000a590*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23a4] 
    /*0000a594*/ STR         R3, [SP] 
    /*0000a598*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23a4] 
    /*0000a59c*/ LDR         R3, [PC, #20]               @ 0x000000000000a5b8 
    /*0000a5a0*/ MOV         R1, #16 
    /*0000a5a4*/ MOV         R0, #3 
    /*0000a5a8*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000a5ac*/ BL          0x000000000000A5AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a5b0*/ B           VI_GetChnAttr_xa49c
    /*0000a5b4*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0000a5b8*/ ANDEQ       R0, R0, R0, ROR #13 
FUNC_END VI_GetChnAttr


FUNC_BEGIN VI_SetChnCrop
    /*0000a5bc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000a5c0*/ MOV         R6, R0 
    /*0000a5c4*/ SUB         SP, SP, #24 
    /*0000a5c8*/ MOV         R0, R2 
    /*0000a5cc*/ MOV         R5, R2 
    /*0000a5d0*/ MOV         R7, R1 
    /*0000a5d4*/ BL          0x000000000000A5D4          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000a5d8*/ SUBS        R4, R0, #0 
    /*0000a5dc*/ BEQ         VI_SetChnCrop_xa5ec
    VI_SetChnCrop_xa5e0:
    /*0000a5e0*/ MOV         R0, R4 
    /*0000a5e4*/ ADD         SP, SP, #24 
    /*0000a5e8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SetChnCrop_xa5ec:
    /*0000a5ec*/ MOV         R0, R6 
    /*0000a5f0*/ BL          0x000000000000A5F0          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000a5f4*/ SUBS        R4, R0, #0 
    /*0000a5f8*/ BNE         VI_SetChnCrop_xa5e0
    /*0000a5fc*/ CMP         R7, #8 
    /*0000a600*/ BHI         VI_SetChnCrop_xa680
    VI_SetChnCrop_xa604:
    /*0000a604*/ MOV         R0, R7 
    /*0000a608*/ BL          0x000000000000A608          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*0000a60c*/ CMP         R0, #0 
    /*0000a610*/ BNE         VI_SetChnCrop_xa770
    /*0000a614*/ MOV         SL, #176                    @ 0xb0 
    /*0000a618*/ MOVW        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000a61c*/ MUL         SL, SL, R6 
    /*0000a620*/ MOVT        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0000a624*/ ADD         R8, SL, #100                @ 0x64 
    /*0000a628*/ ADD         R8, R9, R8 
    /*0000a62c*/ MOV         R0, R8 
    /*0000a630*/ BL          0x000000000000A630          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a634*/ CMP         R0, #0 
    /*0000a638*/ BNE         VI_SetChnCrop_xa7a0
    /*0000a63c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000a640*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000a644*/ LDR         R3, [R3, R6, LSL #2] 
    /*0000a648*/ CMP         R3, #0 
    /*0000a64c*/ BEQ         VI_SetChnCrop_xa740
    /*0000a650*/ LDR         R3, [R3] 
    /*0000a654*/ CMP         R3, #2 
    /*0000a658*/ BEQ         VI_SetChnCrop_xa710
    /*0000a65c*/ MOV         R0, R5 
    /*0000a660*/ BL          0x000000000000A660          @ VI_CheckCommCrop [R_ARM_CALL: .text+0x4538] 
    /*0000a664*/ CMP         R0, #0 
    /*0000a668*/ BEQ         VI_SetChnCrop_xa694
    VI_SetChnCrop_xa66c:
    /*0000a66c*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000a670*/ MOVT        R4, #40976                  @ 0xa010 
    VI_SetChnCrop_xa674:
    /*0000a674*/ MOV         R0, R8 
    /*0000a678*/ BL          0x000000000000A678          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a67c*/ B           VI_SetChnCrop_xa5e0
    VI_SetChnCrop_xa680:
    /*0000a680*/ MOV         R0, R7 
    /*0000a684*/ BL          0x000000000000A104 
    /*0000a688*/ SUBS        R4, R0, #0 
    /*0000a68c*/ BNE         VI_SetChnCrop_xa5e0
    /*0000a690*/ B           VI_SetChnCrop_xa604
    VI_SetChnCrop_xa694:
    /*0000a694*/ MOV         R2, R5 
    /*0000a698*/ MOV         R1, R7 
    /*0000a69c*/ MOV         R0, R6 
    /*0000a6a0*/ BL          0x000000000000A6A0          @ VI_DRV_CheckChnCrop [R_ARM_CALL: .text+0x2f6c4] 
    /*0000a6a4*/ SUBS        R4, R0, #0 
    /*0000a6a8*/ BNE         VI_SetChnCrop_xa66c
    /*0000a6ac*/ CMP         R7, #0 
    /*0000a6b0*/ BNE         VI_SetChnCrop_xa6dc
    /*0000a6b4*/ MOV         R1, R4 
    /*0000a6b8*/ MOV         R0, R6 
    /*0000a6bc*/ BL          0x000000000000A6BC          @ VI_DRV_NeedCallGDCFunction [R_ARM_CALL: .text+0x28d64] 
    /*0000a6c0*/ CMP         R0, #1 
    /*0000a6c4*/ BEQ         VI_SetChnCrop_xa7ac
    /*0000a6c8*/ MOV         R1, R4 
    /*0000a6cc*/ MOV         R0, R6 
    /*0000a6d0*/ BL          0x000000000000A6D0          @ VI_IsPhyChnAttachFishEye [R_ARM_CALL: .text+0x442c] 
    /*0000a6d4*/ CMP         R0, #0 
    /*0000a6d8*/ BNE         VI_SetChnCrop_xa7e0
    VI_SetChnCrop_xa6dc:
    /*0000a6dc*/ ADD         SL, SL, #140                @ 0x8c 
    /*0000a6e0*/ ADD         R1, SP, #20 
    /*0000a6e4*/ ADD         R9, R9, SL 
    /*0000a6e8*/ MOV         R0, R9 
    /*0000a6ec*/ BL          0x000000000000A6EC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a6f0*/ MOV         R1, R7 
    /*0000a6f4*/ MOV         R2, R5 
    /*0000a6f8*/ MOV         R0, R6 
    /*0000a6fc*/ BL          0x000000000000A6FC          @ VI_DRV_SetChnCrop [R_ARM_CALL: .text+0x29d64] 
    /*0000a700*/ ADD         R1, SP, #20 
    /*0000a704*/ MOV         R0, R9 
    /*0000a708*/ BL          0x000000000000A708          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a70c*/ B           VI_SetChnCrop_xa674
    VI_SetChnCrop_xa710:
    /*0000a710*/ MOV         R3, #235                    @ 0xeb 
    /*0000a714*/ STR         R6, [SP, #4] 
    /*0000a718*/ STR         R3, [SP] 
    /*0000a71c*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2608] 
    /*0000a720*/ LDR         R3, [PC, #212]              @ 0x000000000000a7fc 
    /*0000a724*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2608] 
    /*0000a728*/ MOV         R1, #16 
    /*0000a72c*/ MOV         R0, #3 
    /*0000a730*/ MOVW        R4, #32776                  @ 0x8008 
    /*0000a734*/ BL          0x000000000000A734          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a738*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000a73c*/ B           VI_SetChnCrop_xa674
    VI_SetChnCrop_xa740:
    /*0000a740*/ MOV         R3, #228                    @ 0xe4 
    /*0000a744*/ STR         R6, [SP, #4] 
    /*0000a748*/ STR         R3, [SP] 
    /*0000a74c*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23a4] 
    /*0000a750*/ LDR         R3, [PC, #164]              @ 0x000000000000a7fc 
    /*0000a754*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23a4] 
    /*0000a758*/ MOV         R1, #16 
    /*0000a75c*/ MOV         R0, #3 
    /*0000a760*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000a764*/ BL          0x000000000000A764          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a768*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000a76c*/ B           VI_SetChnCrop_xa674
    VI_SetChnCrop_xa770:
    /*0000a770*/ MOV         R3, #219                    @ 0xdb 
    /*0000a774*/ STR         R7, [SP, #4] 
    /*0000a778*/ STR         R3, [SP] 
    /*0000a77c*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25d4] 
    /*0000a780*/ LDR         R3, [PC, #116]              @ 0x000000000000a7fc 
    /*0000a784*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25d4] 
    /*0000a788*/ MOV         R1, #16 
    /*0000a78c*/ MOV         R0, #3 
    /*0000a790*/ MOVW        R4, #32776                  @ 0x8008 
    /*0000a794*/ BL          0x000000000000A794          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a798*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000a79c*/ B           VI_SetChnCrop_xa5e0
    VI_SetChnCrop_xa7a0:
    /*0000a7a0*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000a7a4*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000a7a8*/ B           VI_SetChnCrop_xa5e0
    VI_SetChnCrop_xa7ac:
    /*0000a7ac*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2654] 
    /*0000a7b0*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2654] 
    /*0000a7b4*/ MOVW        R3, #261                    @ 0x105 
    /*0000a7b8*/ STR         R4, [SP, #8] 
    /*0000a7bc*/ STR         R6, [SP, #4] 
    /*0000a7c0*/ STR         R3, [SP] 
    VI_SetChnCrop_xa7c4:
    /*0000a7c4*/ LDR         R3, [PC, #48]               @ 0x000000000000a7fc 
    /*0000a7c8*/ MOV         R1, #16 
    /*0000a7cc*/ MOV         R0, #3 
    /*0000a7d0*/ MOVW        R4, #32777                  @ 0x8009 
    /*0000a7d4*/ BL          0x000000000000A7D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a7d8*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000a7dc*/ B           VI_SetChnCrop_xa674
    VI_SetChnCrop_xa7e0:
    /*0000a7e0*/ MOVW        R3, #269                    @ 0x10d 
    /*0000a7e4*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26b8] 
    /*0000a7e8*/ STR         R4, [SP, #8] 
    /*0000a7ec*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26b8] 
    /*0000a7f0*/ STR         R6, [SP, #4] 
    /*0000a7f4*/ STR         R3, [SP] 
    /*0000a7f8*/ B           VI_SetChnCrop_xa7c4
    /*0000a7fc*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VI_SetChnCrop


FUNC_BEGIN VI_GetChnCrop
    /*0000a800*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000a804*/ MOV         R6, R0 
    /*0000a808*/ SUB         SP, SP, #8 
    /*0000a80c*/ MOV         R0, R2 
    /*0000a810*/ MOV         R5, R2 
    /*0000a814*/ MOV         R7, R1 
    /*0000a818*/ BL          0x000000000000A818          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000a81c*/ SUBS        R4, R0, #0 
    /*0000a820*/ BEQ         VI_GetChnCrop_xa830
    VI_GetChnCrop_xa824:
    /*0000a824*/ MOV         R0, R4 
    /*0000a828*/ ADD         SP, SP, #8 
    /*0000a82c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetChnCrop_xa830:
    /*0000a830*/ MOV         R0, R6 
    /*0000a834*/ BL          0x000000000000A834          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000a838*/ SUBS        R4, R0, #0 
    /*0000a83c*/ BNE         VI_GetChnCrop_xa824
    /*0000a840*/ CMP         R7, #8 
    /*0000a844*/ BHI         VI_GetChnCrop_xa8b0
    VI_GetChnCrop_xa848:
    /*0000a848*/ MOV         R0, R7 
    /*0000a84c*/ BL          0x000000000000A84C          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*0000a850*/ CMP         R0, #0 
    /*0000a854*/ BNE         VI_GetChnCrop_xa8c8
    /*0000a858*/ LDR         R3, [PC, #256]              @ 0x000000000000a960 
    /*0000a85c*/ MOV         R8, #176                    @ 0xb0 
    /*0000a860*/ MLA         R8, R8, R6, R3 
    /*0000a864*/ MOV         R0, R8 
    /*0000a868*/ BL          0x000000000000A868          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a86c*/ CMP         R0, #0 
    /*0000a870*/ BNE         VI_GetChnCrop_xa8f8
    /*0000a874*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000a878*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000a87c*/ LDR         R3, [R3, R6, LSL #2] 
    /*0000a880*/ CMP         R3, #0 
    /*0000a884*/ BEQ         VI_GetChnCrop_xa93c
    /*0000a888*/ LDR         R3, [R3] 
    /*0000a88c*/ CMP         R3, #2 
    /*0000a890*/ BEQ         VI_GetChnCrop_xa904
    /*0000a894*/ MOV         R2, R5 
    /*0000a898*/ MOV         R1, R7 
    /*0000a89c*/ MOV         R0, R6 
    /*0000a8a0*/ BL          0x000000000000A8A0          @ VI_DRV_GetChnCrop [R_ARM_CALL: .text+0x29db0] 
    /*0000a8a4*/ MOV         R0, R8 
    /*0000a8a8*/ BL          0x000000000000A8A8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a8ac*/ B           VI_GetChnCrop_xa824
    VI_GetChnCrop_xa8b0:
    /*0000a8b0*/ MOV         R0, R7 
    /*0000a8b4*/ BL          0x000000000000A104 
    /*0000a8b8*/ CMP         R0, #0 
    /*0000a8bc*/ MOVNE       R4, R0 
    /*0000a8c0*/ BNE         VI_GetChnCrop_xa824
    /*0000a8c4*/ B           VI_GetChnCrop_xa848
    VI_GetChnCrop_xa8c8:
    /*0000a8c8*/ MOVW        R3, #294                    @ 0x126 
    /*0000a8cc*/ STR         R7, [SP, #4] 
    /*0000a8d0*/ STR         R3, [SP] 
    /*0000a8d4*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25d4] 
    /*0000a8d8*/ LDR         R3, [PC, #132]              @ 0x000000000000a964 
    /*0000a8dc*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25d4] 
    /*0000a8e0*/ MOV         R1, #16 
    /*0000a8e4*/ MOV         R0, #3 
    /*0000a8e8*/ MOVW        R4, #32776                  @ 0x8008 
    /*0000a8ec*/ BL          0x000000000000A8EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a8f0*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000a8f4*/ B           VI_GetChnCrop_xa824
    VI_GetChnCrop_xa8f8:
    /*0000a8f8*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000a8fc*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000a900*/ B           VI_GetChnCrop_xa824
    VI_GetChnCrop_xa904:
    /*0000a904*/ MOV         R0, R8 
    /*0000a908*/ MOVW        R4, #32776                  @ 0x8008 
    /*0000a90c*/ BL          0x000000000000A90C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a910*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2608] 
    /*0000a914*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2608] 
    /*0000a918*/ MOVW        R3, #310                    @ 0x136 
    /*0000a91c*/ STR         R6, [SP, #4] 
    /*0000a920*/ STR         R3, [SP] 
    VI_GetChnCrop_xa924:
    /*0000a924*/ LDR         R3, [PC, #56]               @ 0x000000000000a964 
    /*0000a928*/ MOV         R1, #16 
    /*0000a92c*/ MOV         R0, #3 
    /*0000a930*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000a934*/ BL          0x000000000000A934          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a938*/ B           VI_GetChnCrop_xa824
    VI_GetChnCrop_xa93c:
    /*0000a93c*/ MOV         R0, R8 
    /*0000a940*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000a944*/ BL          0x000000000000A944          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a948*/ MOVW        R3, #303                    @ 0x12f 
    /*0000a94c*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23a4] 
    /*0000a950*/ STR         R6, [SP, #4] 
    /*0000a954*/ STR         R3, [SP] 
    /*0000a958*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23a4] 
    /*0000a95c*/ B           VI_GetChnCrop_xa924
    /*0000a960*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0000a964*/ ANDEQ       R0, R0, R0, LSL #14 
FUNC_END VI_GetChnCrop


FUNC_BEGIN VI_EnableChn
    /*0000a968*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000a96c*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000a970*/ MOV         R4, R1 
    /*0000a974*/ MOV         R7, R0 
    /*0000a978*/ BL          0x000000000000A978          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000a97c*/ SUBS        R5, R0, #0 
    /*0000a980*/ BNE         VI_EnableChn_xab50
    /*0000a984*/ CMP         R4, #8 
    /*0000a988*/ BHI         VI_EnableChn_xab5c
    VI_EnableChn_xa98c:
    /*0000a98c*/ MOV         R6, #176                    @ 0xb0 
    /*0000a990*/ MOVW        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000a994*/ MUL         R6, R6, R7 
    /*0000a998*/ MOVT        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0000a99c*/ ADD         R8, R6, #100                @ 0x64 
    /*0000a9a0*/ ADD         R8, R8, R9 
    /*0000a9a4*/ MOV         R0, R8 
    /*0000a9a8*/ BL          0x000000000000A9A8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a9ac*/ SUBS        FP, R0, #0 
    /*0000a9b0*/ BNE         VI_EnableChn_xac88
    /*0000a9b4*/ MOV         R0, #772                    @ 0x304 
    /*0000a9b8*/ BL          0x000000000000A9B8          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*0000a9bc*/ SUBS        R3, R0, #0 
    /*0000a9c0*/ STR         R3, [SP, #16] 
    /*0000a9c4*/ BEQ         VI_EnableChn_xae3c
    /*0000a9c8*/ MOVW        SL, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000a9cc*/ MOVT        SL, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000a9d0*/ MOV         R1, FP 
    /*0000a9d4*/ MOV         R2, #772                    @ 0x304 
    /*0000a9d8*/ BL          0x000000000000A9D8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000a9dc*/ LDR         FP, [SL, R7, LSL #2] 
    /*0000a9e0*/ CMP         FP, #0 
    /*0000a9e4*/ BEQ         VI_EnableChn_xadfc
    /*0000a9e8*/ MOV         R1, R4 
    /*0000a9ec*/ MOV         R0, R7 
    /*0000a9f0*/ BL          0x000000000000A9F0          @ VI_DRV_IsChnAttrSetted [R_ARM_CALL: .text+0x29cfc] 
    /*0000a9f4*/ CMP         R0, #0 
    /*0000a9f8*/ BEQ         VI_EnableChn_xad70
    /*0000a9fc*/ MOV         R0, R7 
    /*0000aa00*/ BL          0x000000000000AA00          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0000aa04*/ BIC         R3, R0, #2 
    /*0000aa08*/ CMP         R0, #5 
    /*0000aa0c*/ CMPNE       R3, #1 
    /*0000aa10*/ BEQ         VI_EnableChn_xabcc
    /*0000aa14*/ LDR         R3, [SL, R7, LSL #2] 
    /*0000aa18*/ ADD         SL, R3, R4, LSL #2 
    /*0000aa1c*/ ADD         SL, SL, #36864              @ 0x9000 
    /*0000aa20*/ LDR         R2, [SL, #1484]             @ 0x5cc 
    /*0000aa24*/ CMP         R2, #0 
    /*0000aa28*/ BNE         VI_EnableChn_xabcc
    /*0000aa2c*/ ADD         R6, R6, #140                @ 0x8c 
    /*0000aa30*/ ADD         R1, SP, #28 
    /*0000aa34*/ ADD         R9, R6, R9 
    /*0000aa38*/ STR         R3, [SP, #20] 
    /*0000aa3c*/ MOV         R0, R9 
    /*0000aa40*/ BL          0x000000000000AA40          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000aa44*/ BL          0x000000000000AA44          @ VI_DRV_IsSupportExtChn [R_ARM_CALL: .text+0x2b23c] 
    /*0000aa48*/ CMP         R0, #0 
    /*0000aa4c*/ BEQ         VI_EnableChn_xaa5c
    /*0000aa50*/ SUB         R2, R4, #1 
    /*0000aa54*/ CMP         R2, #7 
    /*0000aa58*/ BLS         VI_EnableChn_xac08
    VI_EnableChn_xaa5c:
    /*0000aa5c*/ MOV         R5, #36                     @ 0x24 
    /*0000aa60*/ ADD         R1, SP, #28 
    /*0000aa64*/ MUL         R5, R5, R4 
    /*0000aa68*/ MOV         R0, R9 
    /*0000aa6c*/ BL          0x000000000000AA6C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000aa70*/ ADD         R6, FP, R5 
    /*0000aa74*/ LDR         R2, [R6, #148]              @ 0x94 
    /*0000aa78*/ CMP         R2, #0 
    /*0000aa7c*/ BEQ         VI_EnableChn_xac94
    VI_EnableChn_xaa80:
    /*0000aa80*/ BL          0x000000000000AA80          @ VI_IsGdcExist [R_ARM_CALL: .text+0x21748] 
    /*0000aa84*/ CMP         R0, #1 
    /*0000aa88*/ CMPEQ       R4, #0 
    /*0000aa8c*/ BEQ         VI_EnableChn_xace4
    VI_EnableChn_xaa90:
    /*0000aa90*/ BL          0x000000000000AA90          @ VI_IsDisExist [R_ARM_CALL: .text+0x22f40] 
    /*0000aa94*/ CMP         R0, #1 
    /*0000aa98*/ MOV         R6, R0 
    /*0000aa9c*/ BEQ         VI_EnableChn_xabe8
    /*0000aaa0*/ ADD         R1, SP, #28 
    /*0000aaa4*/ MOV         R0, R9 
    /*0000aaa8*/ BL          0x000000000000AAA8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000aaac*/ CMP         R4, #0 
    /*0000aab0*/ MOV         R3, #1 
    /*0000aab4*/ STR         R3, [SL, #1484]             @ 0x5cc 
    /*0000aab8*/ STR         R3, [SL, #2148]             @ 0x864 
    /*0000aabc*/ BNE         VI_EnableChn_xaacc
    VI_EnableChn_xaac0:
    /*0000aac0*/ ADD         R3, FP, #32768              @ 0x8000 
    /*0000aac4*/ MOV         R2, #0 
    /*0000aac8*/ STR         R2, [R3, #2776]             @ 0xad8 
    VI_EnableChn_xaacc:
    /*0000aacc*/ ADD         R1, SP, #28 
    /*0000aad0*/ MOV         R0, R9 
    /*0000aad4*/ BL          0x000000000000AAD4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000aad8*/ MOV         R0, #2 
    /*0000aadc*/ MOV         R3, #16 
    /*0000aae0*/ STR         R7, [SP, #36]               @ 0x24 
    /*0000aae4*/ STR         R3, [SP, #32] 
    /*0000aae8*/ MOV         R5, #0 
    /*0000aaec*/ STR         R4, [SP, #40]               @ 0x28 
    /*0000aaf0*/ BL          0x000000000000AAF0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000aaf4*/ LDR         R6, [SP, #16] 
    /*0000aaf8*/ MOV         R1, R6 
    /*0000aafc*/ LDR         R3, [R0, #48]               @ 0x30 
    /*0000ab00*/ ADD         R0, SP, #32 
    /*0000ab04*/ BLX         R3 
    /*0000ab08*/ ADD         R1, SP, #28 
    /*0000ab0c*/ MOVW        R0, #0                      @ g_stViModuleLock [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*0000ab10*/ MOVT        R0, #0                      @ g_stViModuleLock [R_ARM_MOVT_ABS: .bss+0x8] 
    /*0000ab14*/ BL          0x000000000000AB14          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000ab18*/ MOV         R2, #772                    @ 0x304 
    /*0000ab1c*/ MLA         R0, R2, R4, FP 
    /*0000ab20*/ MOV         R1, R6 
    /*0000ab24*/ ADD         R0, R0, #7424               @ 0x1d00 
    /*0000ab28*/ ADD         R0, R0, #52                 @ 0x34 
    /*0000ab2c*/ BL          0x000000000000AB2C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000ab30*/ ADD         R1, SP, #28 
    /*0000ab34*/ MOVW        R0, #0                      @ g_stViModuleLock [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*0000ab38*/ MOVT        R0, #0                      @ g_stViModuleLock [R_ARM_MOVT_ABS: .bss+0x8] 
    /*0000ab3c*/ BL          0x000000000000AB3C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000ab40*/ MOV         R0, R6 
    /*0000ab44*/ BL          0x000000000000AB44          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000ab48*/ MOV         R0, R8 
    /*0000ab4c*/ BL          0x000000000000AB4C          @ osal_up [R_ARM_CALL: +0x0] 
    VI_EnableChn_xab50:
    /*0000ab50*/ MOV         R0, R5 
    /*0000ab54*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000ab58*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_EnableChn_xab5c:
    /*0000ab5c*/ MOV         R0, R4 
    /*0000ab60*/ BL          0x000000000000A104 
    /*0000ab64*/ CMP         R0, #0 
    /*0000ab68*/ MOVNE       R5, R0 
    /*0000ab6c*/ BEQ         VI_EnableChn_xa98c
    /*0000ab70*/ MOV         R0, R5 
    /*0000ab74*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000ab78*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_EnableChn_xab7c:
    /*0000ab7c*/ MOV         R3, #448                    @ 0x1c0 
    /*0000ab80*/ MOV         R1, #16 
    /*0000ab84*/ STR         R3, [SP] 
    /*0000ab88*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2870] 
    /*0000ab8c*/ LDR         R3, [PC, #732]              @ 0x000000000000ae70 
    /*0000ab90*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2870] 
    /*0000ab94*/ STR         R4, [SP, #8] 
    /*0000ab98*/ MOV         R0, #3 
    /*0000ab9c*/ STR         R7, [SP, #4] 
    /*0000aba0*/ BL          0x000000000000ABA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000aba4*/ ADD         R0, FP, #148                @ 0x94 
    /*0000aba8*/ BL          0x000000000000ABA8          @ VI_DestroyQueue [R_ARM_CALL: .text+0x16170] 
    /*0000abac*/ LDR         R0, [FP, #148]              @ 0x94 
    /*0000abb0*/ CMP         R0, #0 
    /*0000abb4*/ BEQ         VI_EnableChn_xabc0
    /*0000abb8*/ BL          0x000000000000ABB8          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000abbc*/ STR         R4, [FP, #148]              @ 0x94 
    VI_EnableChn_xabc0:
    /*0000abc0*/ MOV         R0, R7 
    /*0000abc4*/ MOV         R1, #0 
    /*0000abc8*/ BL          0x000000000000ABC8          @ Vi_DestroyGdcChn [R_ARM_CALL: .text+0x219e8] 
    VI_EnableChn_xabcc:
    /*0000abcc*/ MOV         R0, R8 
    /*0000abd0*/ BL          0x000000000000ABD0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000abd4*/ LDR         R0, [SP, #16] 
    /*0000abd8*/ BL          0x000000000000ABD8          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000abdc*/ MOV         R0, R5 
    /*0000abe0*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000abe4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_EnableChn_xabe8:
    /*0000abe8*/ CMP         R4, #0 
    /*0000abec*/ BEQ         VI_EnableChn_xad44
    /*0000abf0*/ ADD         R1, SP, #28 
    /*0000abf4*/ MOV         R0, R9 
    /*0000abf8*/ BL          0x000000000000ABF8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000abfc*/ STR         R6, [SL, #1484]             @ 0x5cc 
    /*0000ac00*/ STR         R6, [SL, #2148]             @ 0x864 
    /*0000ac04*/ B           VI_EnableChn_xaacc
    VI_EnableChn_xac08:
    /*0000ac08*/ ADD         R2, SP, #32 
    /*0000ac0c*/ MOV         R1, R4 
    /*0000ac10*/ MOV         R0, R7 
    /*0000ac14*/ BL          0x000000000000AC14          @ VI_DRV_GetExtChnAttr [R_ARM_CALL: .text+0x29c78] 
    /*0000ac18*/ LDR         R5, [SP, #36]               @ 0x24 
    /*0000ac1c*/ LDR         R3, [SP, #20] 
    /*0000ac20*/ ADD         R3, R3, #36864              @ 0x9000 
    /*0000ac24*/ ADD         R3, R3, R5, LSL #2 
    /*0000ac28*/ LDR         R3, [R3, #1484]             @ 0x5cc 
    /*0000ac2c*/ CMP         R3, #0 
    /*0000ac30*/ BNE         VI_EnableChn_xaa5c
    /*0000ac34*/ ADD         R1, SP, #28 
    /*0000ac38*/ MOV         R0, R9 
    /*0000ac3c*/ BL          0x000000000000AC3C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000ac40*/ MOV         R0, R8 
    /*0000ac44*/ BL          0x000000000000AC44          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ac48*/ STR         R5, [SP, #12] 
    /*0000ac4c*/ MOVW        R3, #401                    @ 0x191 
    /*0000ac50*/ MOV         R1, #16 
    /*0000ac54*/ STR         R3, [SP] 
    /*0000ac58*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x276c] 
    /*0000ac5c*/ LDR         R3, [PC, #524]              @ 0x000000000000ae70 
    /*0000ac60*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x276c] 
    /*0000ac64*/ STR         R4, [SP, #8] 
    /*0000ac68*/ MOV         R0, #3 
    /*0000ac6c*/ STR         R7, [SP, #4] 
    /*0000ac70*/ MOVW        R5, #32777                  @ 0x8009 
    /*0000ac74*/ BL          0x000000000000AC74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ac78*/ LDR         R0, [SP, #16] 
    /*0000ac7c*/ BL          0x000000000000AC7C          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000ac80*/ MOVT        R5, #40976                  @ 0xa010 
    /*0000ac84*/ B           VI_EnableChn_xab50
    VI_EnableChn_xac88:
    /*0000ac88*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000ac8c*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000ac90*/ B           VI_EnableChn_xab50
    VI_EnableChn_xac94:
    /*0000ac94*/ MOV         R0, #2752                   @ 0xac0 
    /*0000ac98*/ BL          0x000000000000AC98          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*0000ac9c*/ CMP         R0, #0 
    /*0000aca0*/ STR         R0, [R6, #148]              @ 0x94 
    /*0000aca4*/ BEQ         VI_EnableChn_xadb4
    /*0000aca8*/ ADD         R5, R5, #148                @ 0x94 
    /*0000acac*/ ADD         R3, FP, R5 
    /*0000acb0*/ STR         R3, [SP, #20] 
    /*0000acb4*/ MOV         R0, R3 
    /*0000acb8*/ BL          0x000000000000ACB8          @ VI_CreatQueue [R_ARM_CALL: .text+0x16114] 
    /*0000acbc*/ LDR         R5, [R6, #148]              @ 0x94 
    /*0000acc0*/ ADD         R6, R5, #336                @ 0x150 
    /*0000acc4*/ ADD         R5, R5, #3088               @ 0xc10 
    VI_EnableChn_xacc8:
    /*0000acc8*/ MOV         R1, R6 
    /*0000accc*/ LDR         R0, [SP, #20] 
    /*0000acd0*/ ADD         R6, R6, #344                @ 0x158 
    /*0000acd4*/ BL          0x000000000000ACD4          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*0000acd8*/ CMP         R6, R5 
    /*0000acdc*/ BNE         VI_EnableChn_xacc8
    /*0000ace0*/ B           VI_EnableChn_xaa80
    VI_EnableChn_xace4:
    /*0000ace4*/ MOV         R1, #0 
    /*0000ace8*/ MOV         R0, R7 
    /*0000acec*/ BL          0x000000000000ACEC          @ Vi_CreateGdcChn [R_ARM_CALL: .text+0x21b50] 
    /*0000acf0*/ SUBS        R5, R0, #0 
    /*0000acf4*/ BEQ         VI_EnableChn_xaa90
    /*0000acf8*/ MOV         R4, #0 
    /*0000acfc*/ MOV         R3, #428                    @ 0x1ac 
    /*0000ad00*/ MOV         R1, #16 
    /*0000ad04*/ STR         R3, [SP] 
    /*0000ad08*/ STR         R7, [SP, #4] 
    /*0000ad0c*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2834] 
    /*0000ad10*/ LDR         R3, [PC, #344]              @ 0x000000000000ae70 
    /*0000ad14*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2834] 
    /*0000ad18*/ STR         R4, [SP, #8] 
    /*0000ad1c*/ MOV         R0, #3 
    /*0000ad20*/ BL          0x000000000000AD20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ad24*/ ADD         R0, FP, #148                @ 0x94 
    /*0000ad28*/ BL          0x000000000000AD28          @ VI_DestroyQueue [R_ARM_CALL: .text+0x16170] 
    /*0000ad2c*/ LDR         R0, [FP, #148]              @ 0x94 
    /*0000ad30*/ CMP         R0, R4 
    /*0000ad34*/ BEQ         VI_EnableChn_xabcc
    /*0000ad38*/ BL          0x000000000000AD38          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000ad3c*/ STR         R4, [FP, #148]              @ 0x94 
    /*0000ad40*/ B           VI_EnableChn_xabcc
    VI_EnableChn_xad44:
    /*0000ad44*/ MOV         R1, R4 
    /*0000ad48*/ MOV         R0, R7 
    /*0000ad4c*/ BL          0x000000000000AD4C          @ Vi_CreateDisChn [R_ARM_CALL: .text+0x22fd4] 
    /*0000ad50*/ SUBS        R5, R0, #0 
    /*0000ad54*/ BNE         VI_EnableChn_xab7c
    /*0000ad58*/ ADD         R1, SP, #28 
    /*0000ad5c*/ MOV         R0, R9 
    /*0000ad60*/ BL          0x000000000000AD60          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000ad64*/ STR         R6, [SL, #1484]             @ 0x5cc 
    /*0000ad68*/ STR         R6, [SL, #2148]             @ 0x864 
    /*0000ad6c*/ B           VI_EnableChn_xaac0
    VI_EnableChn_xad70:
    /*0000ad70*/ MOV         R0, R8 
    /*0000ad74*/ MOVW        R5, #32777                  @ 0x8009 
    /*0000ad78*/ BL          0x000000000000AD78          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ad7c*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2590] 
    /*0000ad80*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2590] 
    /*0000ad84*/ MOVW        R3, #361                    @ 0x169 
    /*0000ad88*/ STR         R4, [SP, #8] 
    /*0000ad8c*/ STR         R7, [SP, #4] 
    /*0000ad90*/ STR         R3, [SP] 
    VI_EnableChn_xad94:
    /*0000ad94*/ LDR         R3, [PC, #212]              @ 0x000000000000ae70 
    /*0000ad98*/ MOV         R1, #16 
    /*0000ad9c*/ MOV         R0, #3 
    /*0000ada0*/ MOVT        R5, #40976                  @ 0xa010 
    /*0000ada4*/ BL          0x000000000000ADA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ada8*/ LDR         R0, [SP, #16] 
    /*0000adac*/ BL          0x000000000000ADAC          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000adb0*/ B           VI_EnableChn_xab50
    VI_EnableChn_xadb4:
    /*0000adb4*/ MOVW        R3, #413                    @ 0x19d 
    /*0000adb8*/ MOV         R1, #16 
    /*0000adbc*/ STR         R3, [SP] 
    /*0000adc0*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x27b4] 
    /*0000adc4*/ LDR         R3, [PC, #164]              @ 0x000000000000ae70 
    /*0000adc8*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x27b4] 
    /*0000adcc*/ MOV         R0, #3 
    /*0000add0*/ MOVW        R5, #32780                  @ 0x800c 
    /*0000add4*/ BL          0x000000000000ADD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000add8*/ MOV         R0, R8 
    /*0000addc*/ BL          0x000000000000ADDC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ade0*/ MOV         R3, #416                    @ 0x1a0 
    /*0000ade4*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x27ec] 
    /*0000ade8*/ STR         R4, [SP, #8] 
    /*0000adec*/ STR         R7, [SP, #4] 
    /*0000adf0*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x27ec] 
    /*0000adf4*/ STR         R3, [SP] 
    /*0000adf8*/ B           VI_EnableChn_xad94
    VI_EnableChn_xadfc:
    /*0000adfc*/ MOV         R0, R8 
    /*0000ae00*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000ae04*/ BL          0x000000000000AE04          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ae08*/ STR         R7, [SP, #4] 
    /*0000ae0c*/ MOV         R3, #352                    @ 0x160 
    /*0000ae10*/ MOV         R1, #16 
    /*0000ae14*/ STR         R3, [SP] 
    /*0000ae18*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23a4] 
    /*0000ae1c*/ LDR         R3, [PC, #76]               @ 0x000000000000ae70 
    /*0000ae20*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23a4] 
    /*0000ae24*/ MOV         R0, #3 
    /*0000ae28*/ MOVT        R5, #40976                  @ 0xa010 
    /*0000ae2c*/ BL          0x000000000000AE2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ae30*/ LDR         R0, [SP, #16] 
    /*0000ae34*/ BL          0x000000000000AE34          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000ae38*/ B           VI_EnableChn_xab50
    VI_EnableChn_xae3c:
    /*0000ae3c*/ MOV         R0, R8 
    /*0000ae40*/ MOVW        R5, #32780                  @ 0x800c 
    /*0000ae44*/ BL          0x000000000000AE44          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ae48*/ MOVW        R3, #341                    @ 0x155 
    /*0000ae4c*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2734] 
    /*0000ae50*/ STR         R3, [SP] 
    /*0000ae54*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2734] 
    /*0000ae58*/ LDR         R3, [PC, #16]               @ 0x000000000000ae70 
    /*0000ae5c*/ MOV         R1, #16 
    /*0000ae60*/ MOV         R0, #3 
    /*0000ae64*/ BL          0x000000000000AE64          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ae68*/ MOVT        R5, #40976                  @ 0xa010 
    /*0000ae6c*/ B           VI_EnableChn_xab50
    /*0000ae70*/ ANDEQ       R0, R0, R0, LSL R7 
FUNC_END VI_EnableChn


FUNC_BEGIN VI_DisableChn
    /*0000ae74*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ae78*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0000ae7c*/ MOV         R6, R1 
    /*0000ae80*/ MOV         R8, R0 
    /*0000ae84*/ BL          0x000000000000AE84          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000ae88*/ SUBS        R5, R0, #0 
    /*0000ae8c*/ BNE         VI_DisableChn_xb024
    /*0000ae90*/ CMP         R6, #8 
    /*0000ae94*/ BHI         VI_DisableChn_xb030
    VI_DisableChn_xae98:
    /*0000ae98*/ MOV         R4, #176                    @ 0xb0 
    /*0000ae9c*/ MOVW        FP, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000aea0*/ MUL         R4, R4, R8 
    /*0000aea4*/ MOVT        FP, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0000aea8*/ ADD         R7, R4, #100                @ 0x64 
    /*0000aeac*/ ADD         R7, R7, FP 
    /*0000aeb0*/ MOV         R0, R7 
    /*0000aeb4*/ BL          0x000000000000AEB4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000aeb8*/ CMP         R0, #0 
    /*0000aebc*/ BNE         VI_DisableChn_xb0dc
    /*0000aec0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000aec4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000aec8*/ LDR         SL, [R3, R8, LSL #2] 
    /*0000aecc*/ CMP         SL, #0 
    /*0000aed0*/ BEQ         VI_DisableChn_xb180
    /*0000aed4*/ ADD         R9, SL, R6, LSL #2 
    /*0000aed8*/ ADD         R9, R9, #36864              @ 0x9000 
    /*0000aedc*/ LDR         R3, [R9, #1484]             @ 0x5cc 
    /*0000aee0*/ CMP         R3, #0 
    /*0000aee4*/ BEQ         VI_DisableChn_xb01c
    /*0000aee8*/ MOV         R0, R8 
    /*0000aeec*/ BL          0x000000000000AEEC          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0000aef0*/ BIC         R3, R0, #2 
    /*0000aef4*/ STR         R0, [SP, #20] 
    /*0000aef8*/ CMP         R0, #5 
    /*0000aefc*/ CMPNE       R3, #1 
    /*0000af00*/ MOVEQ       R3, #1 
    /*0000af04*/ MOVNE       R3, #0 
    /*0000af08*/ BEQ         VI_DisableChn_xb01c
    /*0000af0c*/ STR         R3, [SP, #28] 
    /*0000af10*/ ADD         R4, R4, #140                @ 0x8c 
    /*0000af14*/ CLZ         R3, R6 
    /*0000af18*/ ADD         R4, R4, FP 
    /*0000af1c*/ ADD         R1, SP, #36                 @ 0x24 
    /*0000af20*/ LSR         R3, R3, #5 
    /*0000af24*/ MOV         R0, R4 
    /*0000af28*/ STR         R3, [SP, #24] 
    /*0000af2c*/ MOV         FP, R3 
    /*0000af30*/ BL          0x000000000000AF30          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000af34*/ BL          0x000000000000AF34          @ VI_DRV_IsSupportExtChn [R_ARM_CALL: .text+0x2b23c] 
    /*0000af38*/ MOV         R3, FP 
    /*0000af3c*/ CMP         R0, #0 
    /*0000af40*/ MOVEQ       R3, #0 
    /*0000af44*/ ANDNE       R3, R3, #1 
    /*0000af48*/ CMP         R3, #0 
    /*0000af4c*/ BEQ         VI_DisableChn_xafa0
    /*0000af50*/ ADD         R2, SL, #12288              @ 0x3000 
    /*0000af54*/ LDR         IP, [R2, #2136]             @ 0x858 
    /*0000af58*/ CMP         IP, #0 
    /*0000af5c*/ BEQ         VI_DisableChn_xafa0
    /*0000af60*/ ADD         R3, SL, #36864              @ 0x9000 
    /*0000af64*/ ADD         R1, SL, #14400              @ 0x3840 
    /*0000af68*/ ADD         R1, R1, #28 
    /*0000af6c*/ MOV         FP, R3 
    /*0000af70*/ LDR         R3, [SP, #28] 
    VI_DisableChn_xaf74:
    /*0000af74*/ LDR         R2, [R1], #4 
    /*0000af78*/ ADD         R3, R3, #1 
    /*0000af7c*/ SUB         R0, R2, #1 
    /*0000af80*/ CMP         R0, #7 
    /*0000af84*/ ADD         LR, FP, R2, LSL #2 
    /*0000af88*/ BHI         VI_DisableChn_xaf98
    /*0000af8c*/ LDR         R0, [LR, #1484]             @ 0x5cc 
    /*0000af90*/ CMP         R0, #0 
    /*0000af94*/ BNE         VI_DisableChn_xb0e8
    VI_DisableChn_xaf98:
    /*0000af98*/ CMP         IP, R3 
    /*0000af9c*/ BNE         VI_DisableChn_xaf74
    VI_DisableChn_xafa0:
    /*0000afa0*/ ADD         R1, SP, #36                 @ 0x24 
    /*0000afa4*/ MOV         R0, R4 
    /*0000afa8*/ BL          0x000000000000AFA8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000afac*/ LDR         FP, [SP, #24] 
    /*0000afb0*/ LDR         R3, [SP, #20] 
    /*0000afb4*/ CMP         R3, #1 
    /*0000afb8*/ MOVLS       FP, #0 
    /*0000afbc*/ ANDHI       FP, FP, #1 
    /*0000afc0*/ CMP         FP, #0 
    /*0000afc4*/ BNE         VI_DisableChn_xb050
    /*0000afc8*/ CMP         R6, #0 
    /*0000afcc*/ BEQ         VI_DisableChn_xb0b4
    VI_DisableChn_xafd0:
    /*0000afd0*/ MOV         R0, R4 
    /*0000afd4*/ ADD         R1, SP, #36                 @ 0x24 
    /*0000afd8*/ BL          0x000000000000AFD8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000afdc*/ MOV         R0, #36                     @ 0x24 
    /*0000afe0*/ MUL         R6, R0, R6 
    /*0000afe4*/ ADD         R3, SL, R6 
    /*0000afe8*/ LDR         R3, [R3, #148]              @ 0x94 
    /*0000afec*/ CMP         R3, #0 
    /*0000aff0*/ BEQ         VI_DisableChn_xb000
    /*0000aff4*/ ADD         R6, R6, #148                @ 0x94 
    /*0000aff8*/ ADD         R0, SL, R6 
    /*0000affc*/ BL          0x000000000000AFFC          @ VI_ClearPicQueue [R_ARM_CALL: .text+0x3e24] 
    VI_DisableChn_xb000:
    /*0000b000*/ MOV         R2, #0 
    /*0000b004*/ MOV         R3, #1 
    /*0000b008*/ ADD         R1, SP, #36                 @ 0x24 
    /*0000b00c*/ MOV         R0, R4 
    /*0000b010*/ STR         R2, [R9, #1484]             @ 0x5cc 
    /*0000b014*/ STR         R3, [R9, #2148]             @ 0x864 
    /*0000b018*/ BL          0x000000000000B018          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_DisableChn_xb01c:
    /*0000b01c*/ MOV         R0, R7 
    /*0000b020*/ BL          0x000000000000B020          @ osal_up [R_ARM_CALL: +0x0] 
    VI_DisableChn_xb024:
    /*0000b024*/ MOV         R0, R5 
    /*0000b028*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0000b02c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DisableChn_xb030:
    /*0000b030*/ MOV         R0, R6 
    /*0000b034*/ BL          0x000000000000A104 
    /*0000b038*/ CMP         R0, #0 
    /*0000b03c*/ MOVNE       R5, R0 
    /*0000b040*/ BEQ         VI_DisableChn_xae98
    /*0000b044*/ MOV         R0, R5 
    /*0000b048*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0000b04c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DisableChn_xb050:
    /*0000b050*/ ADD         R1, SP, #36                 @ 0x24 
    /*0000b054*/ MOV         R0, R4 
    /*0000b058*/ BL          0x000000000000B058          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b05c*/ MOV         R2, #0 
    /*0000b060*/ MOV         R1, R2 
    /*0000b064*/ MOV         R0, R8 
    /*0000b068*/ BL          0x000000000000B068          @ VI_DRV_EnableChn [R_ARM_CALL: .text+0x29de8] 
    /*0000b06c*/ MOV         R0, R8 
    /*0000b070*/ BL          0x000000000000B070          @ VI_DRV_ProcRegNew [R_ARM_CALL: .text+0x2e368] 
    /*0000b074*/ ADD         R1, SP, #36                 @ 0x24 
    /*0000b078*/ MOV         R0, R4 
    /*0000b07c*/ BL          0x000000000000B07C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b080*/ ADD         R1, SL, #35328              @ 0x8a00 
    /*0000b084*/ ADD         R1, R1, #216                @ 0xd8 
    /*0000b088*/ MOV         R0, R8 
    /*0000b08c*/ BL          0x000000000000B08C          @ VI_WaitCaptureFrameStop [R_ARM_CALL: .text+0x4660] 
    /*0000b090*/ ADD         R1, SP, #36                 @ 0x24 
    /*0000b094*/ MOV         R0, R4 
    /*0000b098*/ BL          0x000000000000B098          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b09c*/ MOV         R1, #0 
    /*0000b0a0*/ MOV         R0, R8 
    /*0000b0a4*/ BL          0x000000000000B0A4          @ VI_ReleaseChnCaptureVB [R_ARM_CALL: .text+0x4754] 
    /*0000b0a8*/ ADD         R1, SP, #36                 @ 0x24 
    /*0000b0ac*/ MOV         R0, R4 
    /*0000b0b0*/ BL          0x000000000000B0B0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_DisableChn_xb0b4:
    /*0000b0b4*/ BL          0x000000000000B0B4          @ VI_IsDisExist [R_ARM_CALL: .text+0x22f40] 
    /*0000b0b8*/ CMP         R0, #0 
    /*0000b0bc*/ BNE         VI_DisableChn_xb140
    VI_DisableChn_xb0c0:
    /*0000b0c0*/ BL          0x000000000000B0C0          @ VI_IsGdcExist [R_ARM_CALL: .text+0x21748] 
    /*0000b0c4*/ CMP         R0, #0 
    /*0000b0c8*/ BEQ         VI_DisableChn_xafd0
    /*0000b0cc*/ MOV         R0, R8 
    /*0000b0d0*/ MOV         R1, #0 
    /*0000b0d4*/ BL          0x000000000000B0D4          @ Vi_DestroyGdcChn [R_ARM_CALL: .text+0x219e8] 
    /*0000b0d8*/ B           VI_DisableChn_xafd0
    VI_DisableChn_xb0dc:
    /*0000b0dc*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000b0e0*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000b0e4*/ B           VI_DisableChn_xb024
    VI_DisableChn_xb0e8:
    /*0000b0e8*/ ADD         R1, SP, #36                 @ 0x24 
    /*0000b0ec*/ MOV         R0, R4 
    /*0000b0f0*/ STR         R2, [SP, #20] 
    /*0000b0f4*/ BL          0x000000000000B0F4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b0f8*/ MOV         R0, R7 
    /*0000b0fc*/ MOVW        R5, #32777                  @ 0x8009 
    /*0000b100*/ BL          0x000000000000B100          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b104*/ LDR         R2, [SP, #20] 
    /*0000b108*/ MOV         R3, #552                    @ 0x228 
    /*0000b10c*/ STR         R8, [SP, #4] 
    /*0000b110*/ STR         R3, [SP] 
    /*0000b114*/ MOV         R1, #16 
    /*0000b118*/ STR         R2, [SP, #8] 
    /*0000b11c*/ MOV         R0, #3 
    /*0000b120*/ MOV         R2, #0 
    /*0000b124*/ LDR         R3, [PC, #140]              @ 0x000000000000b1b8 
    /*0000b128*/ STR         R2, [SP, #12] 
    /*0000b12c*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28ac] 
    /*0000b130*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28ac] 
    /*0000b134*/ MOVT        R5, #40976                  @ 0xa010 
    /*0000b138*/ BL          0x000000000000B138          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b13c*/ B           VI_DisableChn_xb024
    VI_DisableChn_xb140:
    /*0000b140*/ ADD         R1, SP, #36                 @ 0x24 
    /*0000b144*/ MOV         R0, R4 
    /*0000b148*/ BL          0x000000000000B148          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b14c*/ MOV         R1, #0 
    /*0000b150*/ MOV         R0, R8 
    /*0000b154*/ BL          0x000000000000B154          @ Vi_DisableDIS [R_ARM_CALL: .text+0x23974] 
    /*0000b158*/ ADD         R1, SP, #36                 @ 0x24 
    /*0000b15c*/ MOV         R0, R4 
    /*0000b160*/ BL          0x000000000000B160          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b164*/ MOV         R1, #0 
    /*0000b168*/ MOV         R0, R8 
    /*0000b16c*/ BL          0x000000000000B16C          @ Vi_DestroyDisChn [R_ARM_CALL: .text+0x25008] 
    /*0000b170*/ MOV         R1, #0 
    /*0000b174*/ MOV         R0, R8 
    /*0000b178*/ BL          0x000000000000B178          @ Vi_destroyDISPool [R_ARM_CALL: .text+0x23a18] 
    /*0000b17c*/ B           VI_DisableChn_xb0c0
    VI_DisableChn_xb180:
    /*0000b180*/ MOV         R0, R7 
    /*0000b184*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000b188*/ BL          0x000000000000B188          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b18c*/ MOVW        R3, #511                    @ 0x1ff 
    /*0000b190*/ STR         R8, [SP, #4] 
    /*0000b194*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23a4] 
    /*0000b198*/ STR         R3, [SP] 
    /*0000b19c*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23a4] 
    /*0000b1a0*/ LDR         R3, [PC, #16]               @ 0x000000000000b1b8 
    /*0000b1a4*/ MOV         R1, #16 
    /*0000b1a8*/ MOV         R0, #3 
    /*0000b1ac*/ MOVT        R5, #40976                  @ 0xa010 
    /*0000b1b0*/ BL          0x000000000000B1B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b1b4*/ B           VI_DisableChn_xb024
    /*0000b1b8*/ ANDEQ       R0, R0, R0, LSR #14 
FUNC_END VI_DisableChn


FUNC_BEGIN VI_GetChnOutPutSize
    /*0000b1bc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000b1c0*/ SUB         SP, SP, #64                 @ 0x40 
    /*0000b1c4*/ MOV         R5, R1 
    /*0000b1c8*/ MOV         R6, R2 
    /*0000b1cc*/ MOV         R7, R0 
    /*0000b1d0*/ BL          0x000000000000B1D0          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000b1d4*/ SUBS        R4, R0, #0 
    /*0000b1d8*/ BNE         VI_GetChnOutPutSize_xb1f4
    /*0000b1dc*/ CMP         R5, #0 
    /*0000b1e0*/ BNE         VI_GetChnOutPutSize_xb200
    VI_GetChnOutPutSize_xb1e4:
    /*0000b1e4*/ MOV         R0, R6 
    /*0000b1e8*/ BL          0x000000000000B1E8          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000b1ec*/ SUBS        R4, R0, #0 
    /*0000b1f0*/ BEQ         VI_GetChnOutPutSize_xb21c
    VI_GetChnOutPutSize_xb1f4:
    /*0000b1f4*/ MOV         R0, R4 
    /*0000b1f8*/ ADD         SP, SP, #64                 @ 0x40 
    /*0000b1fc*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetChnOutPutSize_xb200:
    /*0000b200*/ MOV         R0, R5 
    /*0000b204*/ BL          0x000000000000A144 
    /*0000b208*/ SUBS        R4, R0, #0 
    /*0000b20c*/ BEQ         VI_GetChnOutPutSize_xb1e4
    /*0000b210*/ MOV         R0, R4 
    /*0000b214*/ ADD         SP, SP, #64                 @ 0x40 
    /*0000b218*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetChnOutPutSize_xb21c:
    /*0000b21c*/ LDR         R3, [PC, #236]              @ 0x000000000000b310 
    /*0000b220*/ MOV         R8, #176                    @ 0xb0 
    /*0000b224*/ MLA         R8, R8, R7, R3 
    /*0000b228*/ MOV         R0, R8 
    /*0000b22c*/ BL          0x000000000000B22C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000b230*/ CMP         R0, #0 
    /*0000b234*/ BNE         VI_GetChnOutPutSize_xb290
    /*0000b238*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000b23c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000b240*/ LDR         R3, [R3, R7, LSL #2] 
    /*0000b244*/ CMP         R3, #0 
    /*0000b248*/ BEQ         VI_GetChnOutPutSize_xb2d8
    /*0000b24c*/ MOV         R1, R5 
    /*0000b250*/ MOV         R0, R7 
    /*0000b254*/ BL          0x000000000000B254          @ VI_DRV_IsChnAttrSetted [R_ARM_CALL: .text+0x29cfc] 
    /*0000b258*/ CMP         R0, #0 
    /*0000b25c*/ BEQ         VI_GetChnOutPutSize_xb29c
    /*0000b260*/ MOV         R1, R5 
    /*0000b264*/ ADD         R2, SP, #20 
    /*0000b268*/ MOV         R0, R7 
    /*0000b26c*/ BL          0x000000000000B26C          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*0000b270*/ MOV         R0, R7 
    /*0000b274*/ MOV         R3, R6 
    /*0000b278*/ ADD         R2, SP, #20 
    /*0000b27c*/ MOV         R1, R5 
    /*0000b280*/ BL          0x000000000000B280          @ VI_DRV_GetChnOutPutSizeFromUserSet [R_ARM_CALL: .text+0x2b61c] 
    /*0000b284*/ MOV         R0, R8 
    /*0000b288*/ BL          0x000000000000B288          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b28c*/ B           VI_GetChnOutPutSize_xb1f4
    VI_GetChnOutPutSize_xb290:
    /*0000b290*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000b294*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000b298*/ B           VI_GetChnOutPutSize_xb1f4
    VI_GetChnOutPutSize_xb29c:
    /*0000b29c*/ MOV         R0, R8 
    /*0000b2a0*/ MOVW        R4, #32777                  @ 0x8009 
    /*0000b2a4*/ BL          0x000000000000B2A4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b2a8*/ MOVW        R3, #641                    @ 0x281 
    /*0000b2ac*/ STR         R5, [SP, #8] 
    /*0000b2b0*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2904] 
    /*0000b2b4*/ STR         R3, [SP] 
    /*0000b2b8*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2904] 
    /*0000b2bc*/ STR         R7, [SP, #4] 
    /*0000b2c0*/ MOV         R1, #16 
    /*0000b2c4*/ LDR         R3, [PC, #72]               @ 0x000000000000b314 
    /*0000b2c8*/ MOV         R0, #3 
    /*0000b2cc*/ BL          0x000000000000B2CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b2d0*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000b2d4*/ B           VI_GetChnOutPutSize_xb1f4
    VI_GetChnOutPutSize_xb2d8:
    /*0000b2d8*/ MOV         R0, R8 
    /*0000b2dc*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000b2e0*/ BL          0x000000000000B2E0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b2e4*/ MOVW        R3, #633                    @ 0x279 
    /*0000b2e8*/ STR         R7, [SP, #4] 
    /*0000b2ec*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23a4] 
    /*0000b2f0*/ STR         R3, [SP] 
    /*0000b2f4*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23a4] 
    /*0000b2f8*/ LDR         R3, [PC, #20]               @ 0x000000000000b314 
    /*0000b2fc*/ MOV         R1, #16 
    /*0000b300*/ MOV         R0, #3 
    /*0000b304*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000b308*/ BL          0x000000000000B308          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b30c*/ B           VI_GetChnOutPutSize_xb1f4
    /*0000b310*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0000b314*/ ANDEQ       R0, R0, R0, LSR R7 
FUNC_END VI_GetChnOutPutSize


FUNC_BEGIN VI_GetChnStatus
    /*0000b318*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000b31c*/ SUB         SP, SP, #20 
    /*0000b320*/ MOV         R5, R1 
    /*0000b324*/ MOV         R6, R2 
    /*0000b328*/ MOV         R7, R0 
    /*0000b32c*/ BL          0x000000000000B32C          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000b330*/ SUBS        R4, R0, #0 
    /*0000b334*/ BNE         VI_GetChnStatus_xb350
    /*0000b338*/ CMP         R5, #0 
    /*0000b33c*/ BNE         VI_GetChnStatus_xb35c
    VI_GetChnStatus_xb340:
    /*0000b340*/ MOV         R0, R6 
    /*0000b344*/ BL          0x000000000000B344          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000b348*/ SUBS        R4, R0, #0 
    /*0000b34c*/ BEQ         VI_GetChnStatus_xb378
    VI_GetChnStatus_xb350:
    /*0000b350*/ MOV         R0, R4 
    /*0000b354*/ ADD         SP, SP, #20 
    /*0000b358*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_GetChnStatus_xb35c:
    /*0000b35c*/ MOV         R0, R5 
    /*0000b360*/ BL          0x000000000000A144 
    /*0000b364*/ SUBS        R4, R0, #0 
    /*0000b368*/ BEQ         VI_GetChnStatus_xb340
    /*0000b36c*/ MOV         R0, R4 
    /*0000b370*/ ADD         SP, SP, #20 
    /*0000b374*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_GetChnStatus_xb378:
    /*0000b378*/ MOV         R8, #176                    @ 0xb0 
    /*0000b37c*/ MOVW        FP, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000b380*/ MUL         R8, R8, R7 
    /*0000b384*/ MOVT        FP, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0000b388*/ ADD         R9, R8, #100                @ 0x64 
    /*0000b38c*/ ADD         R9, R9, FP 
    /*0000b390*/ MOV         R0, R9 
    /*0000b394*/ BL          0x000000000000B394          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000b398*/ CMP         R0, #0 
    /*0000b39c*/ BNE         VI_GetChnStatus_xb438
    /*0000b3a0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000b3a4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000b3a8*/ LDR         SL, [R3, R7, LSL #2] 
    /*0000b3ac*/ CMP         SL, #0 
    /*0000b3b0*/ BEQ         VI_GetChnStatus_xb444
    /*0000b3b4*/ ADD         R8, R8, #140                @ 0x8c 
    /*0000b3b8*/ ADD         R1, SP, #12 
    /*0000b3bc*/ ADD         R8, R8, FP 
    /*0000b3c0*/ MOV         R0, R8 
    /*0000b3c4*/ BL          0x000000000000B3C4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b3c8*/ ADD         R3, R5, #9536               @ 0x2540 
    /*0000b3cc*/ ADD         R3, R3, #50                 @ 0x32 
    /*0000b3d0*/ MOV         R2, #56                     @ 0x38 
    /*0000b3d4*/ MLA         R5, R2, R5, SL 
    /*0000b3d8*/ ADD         SL, SL, R3, LSL #2 
    /*0000b3dc*/ MOVW        R3, #36696                  @ 0x8f58 
    /*0000b3e0*/ MOVW        LR, #36660                  @ 0x8f34 
    /*0000b3e4*/ LDR         R2, [SL, #4] 
    /*0000b3e8*/ MOVW        IP, #36668                  @ 0x8f3c 
    /*0000b3ec*/ MOV         R0, R8 
    /*0000b3f0*/ ADD         R1, SP, #12 
    /*0000b3f4*/ STR         R2, [R6] 
    /*0000b3f8*/ MOVW        R2, #36672                  @ 0x8f40 
    /*0000b3fc*/ LDR         R7, [R5, R3] 
    /*0000b400*/ MOVW        R3, #36676                  @ 0x8f44 
    /*0000b404*/ STR         R7, [R6, #4] 
    /*0000b408*/ LDR         LR, [R5, LR] 
    /*0000b40c*/ STR         LR, [R6, #8] 
    /*0000b410*/ LDR         IP, [R5, IP] 
    /*0000b414*/ STR         IP, [R6, #12] 
    /*0000b418*/ LDR         R2, [R5, R2] 
    /*0000b41c*/ STR         R2, [R6, #16] 
    /*0000b420*/ LDR         R3, [R5, R3] 
    /*0000b424*/ STR         R3, [R6, #20] 
    /*0000b428*/ BL          0x000000000000B428          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b42c*/ MOV         R0, R9 
    /*0000b430*/ BL          0x000000000000B430          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b434*/ B           VI_GetChnStatus_xb350
    VI_GetChnStatus_xb438:
    /*0000b438*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000b43c*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000b440*/ B           VI_GetChnStatus_xb350
    VI_GetChnStatus_xb444:
    /*0000b444*/ MOV         R0, R9 
    /*0000b448*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000b44c*/ BL          0x000000000000B44C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b450*/ MOV         R3, #672                    @ 0x2a0 
    /*0000b454*/ STR         R7, [SP, #4] 
    /*0000b458*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23a4] 
    /*0000b45c*/ STR         R3, [SP] 
    /*0000b460*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23a4] 
    /*0000b464*/ LDR         R3, [PC, #16]               @ 0x000000000000b47c 
    /*0000b468*/ MOV         R1, #16 
    /*0000b46c*/ MOV         R0, #3 
    /*0000b470*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000b474*/ BL          0x000000000000B474          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b478*/ B           VI_GetChnStatus_xb350
    /*0000b47c*/ ANDEQ       R0, R0, R4, ASR #14 
FUNC_END VI_GetChnStatus


FUNC_BEGIN VI_SetChnAlign
    /*0000b480*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000b484*/ SUB         SP, SP, #12 
    /*0000b488*/ MOV         R5, R1 
    /*0000b48c*/ MOV         R7, R2 
    /*0000b490*/ MOV         R6, R0 
    /*0000b494*/ BL          0x000000000000B494          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000b498*/ SUBS        R4, R0, #0 
    /*0000b49c*/ BNE         VI_SetChnAlign_xb518
    /*0000b4a0*/ CMP         R5, #8 
    /*0000b4a4*/ BHI         VI_SetChnAlign_xb524
    VI_SetChnAlign_xb4a8:
    /*0000b4a8*/ CMP         R7, #1024                   @ 0x400 
    /*0000b4ac*/ BHI         VI_SetChnAlign_xb540
    /*0000b4b0*/ LDR         R3, [PC, #252]              @ 0x000000000000b5b4 
    /*0000b4b4*/ MOV         R8, #176                    @ 0xb0 
    /*0000b4b8*/ MLA         R8, R8, R6, R3 
    /*0000b4bc*/ MOV         R0, R8 
    /*0000b4c0*/ BL          0x000000000000B4C0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000b4c4*/ CMP         R0, #0 
    /*0000b4c8*/ BNE         VI_SetChnAlign_xb570
    /*0000b4cc*/ MOVW        R9, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000b4d0*/ MOVT        R9, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000b4d4*/ LDR         R3, [R9, R6, LSL #2] 
    /*0000b4d8*/ CMP         R3, #0 
    /*0000b4dc*/ BEQ         VI_SetChnAlign_xb57c
    /*0000b4e0*/ MOV         R2, R7 
    /*0000b4e4*/ MOV         R1, R5 
    /*0000b4e8*/ MOV         R0, R6 
    /*0000b4ec*/ BL          0x000000000000B4EC          @ VI_DRV_CheckChnAlign [R_ARM_CALL: .text+0x34554] 
    /*0000b4f0*/ SUBS        R4, R0, #0 
    /*0000b4f4*/ LDREQ       R3, [R9, R6, LSL #2] 
    /*0000b4f8*/ MOVEQ       R2, #1 
    /*0000b4fc*/ MOVNE       R0, R8 
    /*0000b500*/ MOVEQ       R0, R8 
    /*0000b504*/ ADDEQ       R5, R3, R5, LSL #2 
    /*0000b508*/ ADDEQ       R5, R5, #36864              @ 0x9000 
    /*0000b50c*/ STREQ       R7, [R5, #1520]             @ 0x5f0 
    /*0000b510*/ STREQ       R2, [R5, #2184]             @ 0x888 
    /*0000b514*/ BL          0x000000000000B514          @ osal_up [R_ARM_CALL: +0x0] 
    VI_SetChnAlign_xb518:
    /*0000b518*/ MOV         R0, R4 
    /*0000b51c*/ ADD         SP, SP, #12 
    /*0000b520*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetChnAlign_xb524:
    /*0000b524*/ MOV         R0, R5 
    /*0000b528*/ BL          0x000000000000A104 
    /*0000b52c*/ SUBS        R4, R0, #0 
    /*0000b530*/ BEQ         VI_SetChnAlign_xb4a8
    /*0000b534*/ MOV         R0, R4 
    /*0000b538*/ ADD         SP, SP, #12 
    /*0000b53c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SetChnAlign_xb540:
    /*0000b540*/ MOV         R3, #704                    @ 0x2c0 
    /*0000b544*/ STR         R7, [SP, #4] 
    /*0000b548*/ STR         R3, [SP] 
    /*0000b54c*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2948] 
    /*0000b550*/ LDR         R3, [PC, #96]               @ 0x000000000000b5b8 
    /*0000b554*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2948] 
    /*0000b558*/ MOV         R1, #16 
    /*0000b55c*/ MOV         R0, #3 
    /*0000b560*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000b564*/ BL          0x000000000000B564          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b568*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000b56c*/ B           VI_SetChnAlign_xb518
    VI_SetChnAlign_xb570:
    /*0000b570*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000b574*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000b578*/ B           VI_SetChnAlign_xb518
    VI_SetChnAlign_xb57c:
    /*0000b57c*/ MOVW        R3, #714                    @ 0x2ca 
    /*0000b580*/ MOV         R1, #16 
    /*0000b584*/ STR         R3, [SP] 
    /*0000b588*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x297c] 
    /*0000b58c*/ LDR         R3, [PC, #36]               @ 0x000000000000b5b8 
    /*0000b590*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x297c] 
    /*0000b594*/ STR         R6, [SP, #4] 
    /*0000b598*/ MOV         R0, #3 
    /*0000b59c*/ BL          0x000000000000B59C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b5a0*/ MOV         R0, R8 
    /*0000b5a4*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000b5a8*/ BL          0x000000000000B5A8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b5ac*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000b5b0*/ B           VI_SetChnAlign_xb518
    /*0000b5b4*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0000b5b8*/ ANDEQ       R0, R0, R4, ASR R7 
FUNC_END VI_SetChnAlign


FUNC_BEGIN VI_GetChnAlign
    /*0000b5bc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000b5c0*/ SUB         SP, SP, #8 
    /*0000b5c4*/ MOV         R5, R1 
    /*0000b5c8*/ MOV         R6, R2 
    /*0000b5cc*/ MOV         R7, R0 
    /*0000b5d0*/ BL          0x000000000000B5D0          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000b5d4*/ SUBS        R4, R0, #0 
    /*0000b5d8*/ BNE         VI_GetChnAlign_xb5f4
    /*0000b5dc*/ CMP         R5, #8 
    /*0000b5e0*/ BHI         VI_GetChnAlign_xb600
    VI_GetChnAlign_xb5e4:
    /*0000b5e4*/ MOV         R0, R6 
    /*0000b5e8*/ BL          0x000000000000B5E8          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000b5ec*/ SUBS        R4, R0, #0 
    /*0000b5f0*/ BEQ         VI_GetChnAlign_xb61c
    VI_GetChnAlign_xb5f4:
    /*0000b5f4*/ MOV         R0, R4 
    /*0000b5f8*/ ADD         SP, SP, #8 
    /*0000b5fc*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetChnAlign_xb600:
    /*0000b600*/ MOV         R0, R5 
    /*0000b604*/ BL          0x000000000000A104 
    /*0000b608*/ SUBS        R4, R0, #0 
    /*0000b60c*/ BEQ         VI_GetChnAlign_xb5e4
    /*0000b610*/ MOV         R0, R4 
    /*0000b614*/ ADD         SP, SP, #8 
    /*0000b618*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetChnAlign_xb61c:
    /*0000b61c*/ LDR         R3, [PC, #136]              @ 0x000000000000b6ac 
    /*0000b620*/ MOV         R8, #176                    @ 0xb0 
    /*0000b624*/ MLA         R8, R8, R7, R3 
    /*0000b628*/ MOV         R0, R8 
    /*0000b62c*/ BL          0x000000000000B62C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000b630*/ CMP         R0, #0 
    /*0000b634*/ BNE         VI_GetChnAlign_xb668
    /*0000b638*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000b63c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000b640*/ LDR         R3, [R3, R7, LSL #2] 
    /*0000b644*/ CMP         R3, #0 
    /*0000b648*/ BEQ         VI_GetChnAlign_xb674
    /*0000b64c*/ ADD         R5, R3, R5, LSL #2 
    /*0000b650*/ MOV         R0, R8 
    /*0000b654*/ ADD         R5, R5, #36864              @ 0x9000 
    /*0000b658*/ LDR         R3, [R5, #1520]             @ 0x5f0 
    /*0000b65c*/ STR         R3, [R6] 
    /*0000b660*/ BL          0x000000000000B660          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b664*/ B           VI_GetChnAlign_xb5f4
    VI_GetChnAlign_xb668:
    /*0000b668*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000b66c*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000b670*/ B           VI_GetChnAlign_xb5f4
    VI_GetChnAlign_xb674:
    /*0000b674*/ MOV         R3, #752                    @ 0x2f0 
    /*0000b678*/ MOV         R1, #16 
    /*0000b67c*/ STR         R3, [SP] 
    /*0000b680*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x297c] 
    /*0000b684*/ LDR         R3, [PC, #36]               @ 0x000000000000b6b0 
    /*0000b688*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x297c] 
    /*0000b68c*/ STR         R7, [SP, #4] 
    /*0000b690*/ MOV         R0, #3 
    /*0000b694*/ BL          0x000000000000B694          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b698*/ MOV         R0, R8 
    /*0000b69c*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000b6a0*/ BL          0x000000000000B6A0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b6a4*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000b6a8*/ B           VI_GetChnAlign_xb5f4
    /*0000b6ac*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0000b6b0*/ ANDEQ       R0, R0, R4, ROR #14 
FUNC_END VI_GetChnAlign


FUNC_BEGIN VI_CheckExtChnId.part.0
    /*0000b6b4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000b6b8*/ SUB         SP, SP, #20 
    /*0000b6bc*/ MOV         R2, #8 
    /*0000b6c0*/ MOV         R3, #1 
    /*0000b6c4*/ STR         R0, [SP, #4] 
    /*0000b6c8*/ MOV         R1, #16 
    /*0000b6cc*/ STR         R2, [SP, #12] 
    /*0000b6d0*/ MOV         R0, #3 
    /*0000b6d4*/ STR         R3, [SP, #8] 
    /*0000b6d8*/ MOV         R2, #40                     @ 0x28 
    /*0000b6dc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x774] 
    /*0000b6e0*/ STR         R2, [SP] 
    /*0000b6e4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x774] 
    /*0000b6e8*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x29ac] 
    /*0000b6ec*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x29ac] 
    /*0000b6f0*/ BL          0x000000000000B6F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b6f4*/ MOVW        R0, #32770                  @ 0x8002 
    /*0000b6f8*/ MOVT        R0, #40976                  @ 0xa010 
    /*0000b6fc*/ ADD         SP, SP, #20 
    /*0000b700*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_CheckExtChnId.part.0


FUNC_BEGIN VI_CheckExtChnId
    /*0000b704*/ SUB         R3, R0, #1 
    /*0000b708*/ CMP         R3, #7 
    /*0000b70c*/ BHI         VI_CheckExtChnId_xb718
    /*0000b710*/ MOV         R0, #0 
    /*0000b714*/ BX          LR 
    VI_CheckExtChnId_xb718:
    /*0000b718*/ B           0x000000000000B6B4 
FUNC_END VI_CheckExtChnId


FUNC_BEGIN VI_SubmitExtChnPic2OtherMod
    /*0000b71c*/ PUSH        {R4, R5, R6, LR} 
    /*0000b720*/ MOV         R6, R2 
    /*0000b724*/ MOV         R4, R0 
    /*0000b728*/ MOV         R5, R1 
    /*0000b72c*/ BL          0x000000000000B72C          @ VI_DRV_NeedDoExtChnFisheye [R_ARM_CALL: .text+0x2b19c] 
    /*0000b730*/ MOV         R2, R6 
    /*0000b734*/ MOV         R1, R5 
    /*0000b738*/ CMP         R0, #1 
    /*0000b73c*/ MOV         R0, R4 
    /*0000b740*/ BEQ         VI_SubmitExtChnPic2OtherMod_xb74c
    /*0000b744*/ POP         {R4, R5, R6, LR} 
    VI_SubmitExtChnPic2OtherMod_xb748:
    /*0000b748*/ B           VI_SubmitExtChnPic2OtherMod_xb748@ VI_SubmitExtChnPic2Vgs [R_ARM_JUMP24: .text+0x182d4] 
    VI_SubmitExtChnPic2OtherMod_xb74c:
    /*0000b74c*/ POP         {R4, R5, R6, LR} 
    VI_SubmitExtChnPic2OtherMod_xb750:
    /*0000b750*/ B           VI_SubmitExtChnPic2OtherMod_xb750@ VI_SubmitExtChnPic2Gdc [R_ARM_JUMP24: .text+0x22928] 
FUNC_END VI_SubmitExtChnPic2OtherMod


FUNC_BEGIN VI_HandleExtChnPic
    /*0000b754*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000b758*/ SUBS        R8, R2, #0 
    /*0000b75c*/ SUB         SP, SP, #56                 @ 0x38 
    /*0000b760*/ MOV         R5, R0 
    /*0000b764*/ MOV         R4, R1 
    /*0000b768*/ MOV         R7, R3 
    /*0000b76c*/ BEQ         VI_HandleExtChnPic_xb83c
    VI_HandleExtChnPic_xb770:
    /*0000b770*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000b774*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000b778*/ ADD         R2, SP, #16 
    /*0000b77c*/ MOV         R1, R4 
    /*0000b780*/ LDR         R6, [R3, R5, LSL #2] 
    /*0000b784*/ MOV         R0, R5 
    /*0000b788*/ BL          0x000000000000B788          @ VI_DRV_GetWorkingExtChnAttr [R_ARM_CALL: .text+0x29cb4] 
    /*0000b78c*/ MOV         R3, #772                    @ 0x304 
    /*0000b790*/ MOVW        R2, #7476                   @ 0x1d34 
    /*0000b794*/ MOV         R1, R4 
    /*0000b798*/ MLA         R3, R3, R4, R6 
    /*0000b79c*/ MOV         R0, R5 
    /*0000b7a0*/ LDR         R3, [R3, R2] 
    /*0000b7a4*/ CMP         R3, #0 
    /*0000b7a8*/ BNE         VI_HandleExtChnPic_xb7d0
    /*0000b7ac*/ BL          0x000000000000B7AC          @ VI_GetChnDepth [R_ARM_CALL: .text+0x1df78] 
    /*0000b7b0*/ CMP         R0, #0 
    /*0000b7b4*/ BEQ         VI_HandleExtChnPic_xb80c
    /*0000b7b8*/ LDR         R3, [SP, #16] 
    /*0000b7bc*/ CMP         R3, R7 
    /*0000b7c0*/ BEQ         VI_HandleExtChnPic_xb7e0
    VI_HandleExtChnPic_xb7c4:
    /*0000b7c4*/ MOV         R0, #0 
    /*0000b7c8*/ ADD         SP, SP, #56                 @ 0x38 
    /*0000b7cc*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_HandleExtChnPic_xb7d0:
    /*0000b7d0*/ BL          0x000000000000B7D0          @ VI_GetChnDepth [R_ARM_CALL: .text+0x1df78] 
    /*0000b7d4*/ LDR         R3, [SP, #16] 
    /*0000b7d8*/ CMP         R3, R7 
    /*0000b7dc*/ BNE         VI_HandleExtChnPic_xb7c4
    VI_HandleExtChnPic_xb7e0:
    /*0000b7e0*/ ADD         R1, R4, #118                @ 0x76 
    /*0000b7e4*/ ADD         R0, SP, #48                 @ 0x30 
    /*0000b7e8*/ ADD         R1, R6, R1, LSL #2 
    /*0000b7ec*/ BL          0x000000000000B7EC          @ VI_DRV_ChnFrmRateCtl [R_ARM_CALL: .text+0x2b78c] 
    /*0000b7f0*/ CMP         R0, #0 
    /*0000b7f4*/ BEQ         VI_HandleExtChnPic_xb85c
    /*0000b7f8*/ MOV         R2, R8 
    /*0000b7fc*/ MOV         R1, R4 
    /*0000b800*/ MOV         R0, R5 
    /*0000b804*/ BL          0x000000000000B804          @ VI_SubmitExtChnPic2OtherMod [R_ARM_CALL: .text+0xb71c] 
    /*0000b808*/ B           VI_HandleExtChnPic_xb7c4
    VI_HandleExtChnPic_xb80c:
    /*0000b80c*/ STR         R4, [SP, #4] 
    /*0000b810*/ MOV         R3, #79                     @ 0x4f 
    /*0000b814*/ MOV         R1, #16 
    /*0000b818*/ STR         R3, [SP] 
    /*0000b81c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a60] 
    /*0000b820*/ LDR         R3, [PC, #120]              @ 0x000000000000b8a0 
    /*0000b824*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a60] 
    /*0000b828*/ MOV         R0, #7 
    /*0000b82c*/ BL          0x000000000000B82C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b830*/ MOV         R0, #0 
    /*0000b834*/ ADD         SP, SP, #56                 @ 0x38 
    /*0000b838*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_HandleExtChnPic_xb83c:
    /*0000b83c*/ MOVW        R3, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a08] 
    /*0000b840*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a20] 
    /*0000b844*/ MOVT        R3, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a08] 
    /*0000b848*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a20] 
    /*0000b84c*/ MOV         R2, #56                     @ 0x38 
    /*0000b850*/ LDR         R1, [PC, #72]               @ 0x000000000000b8a0 
    /*0000b854*/ BL          0x000000000000B854          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000b858*/ B           VI_HandleExtChnPic_xb770
    VI_HandleExtChnPic_xb85c:
    /*0000b85c*/ MOV         R3, #56                     @ 0x38 
    /*0000b860*/ MOVW        LR, #36664                  @ 0x8f38 
    /*0000b864*/ MLA         R6, R3, R4, R6 
    /*0000b868*/ MOV         R7, #93                     @ 0x5d 
    /*0000b86c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2aa4] 
    /*0000b870*/ LDR         R3, [PC, #40]               @ 0x000000000000b8a0 
    /*0000b874*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2aa4] 
    /*0000b878*/ MOV         R1, #16 
    /*0000b87c*/ MOV         R0, #6 
    /*0000b880*/ LDR         IP, [R6, LR] 
    /*0000b884*/ ADD         IP, IP, #1 
    /*0000b888*/ STR         IP, [R6, LR] 
    /*0000b88c*/ STR         R4, [SP, #8] 
    /*0000b890*/ STR         R5, [SP, #4] 
    /*0000b894*/ STR         R7, [SP] 
    /*0000b898*/ BL          0x000000000000B898          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b89c*/ B           VI_HandleExtChnPic_xb7c4
    /*0000b8a0*/ ANDEQ       R0, R0, R8, LSL #15 
FUNC_END VI_HandleExtChnPic


FUNC_BEGIN VI_SetExtChnBindAttr
    /*0000b8a4*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000b8a8*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0000b8ac*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000b8b0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000b8b4*/ MOV         R7, R2 
    /*0000b8b8*/ MOV         R2, SP 
    /*0000b8bc*/ LDR         R5, [R3, R0, LSL #2] 
    /*0000b8c0*/ MOV         R4, R1 
    /*0000b8c4*/ BL          0x000000000000B8C4          @ VI_DRV_GetExtChnAttr [R_ARM_CALL: .text+0x29c78] 
    /*0000b8c8*/ LDR         R6, [SP, #4] 
    /*0000b8cc*/ LDR         IP, [R7, #4] 
    /*0000b8d0*/ CMP         R6, #0 
    /*0000b8d4*/ BLT         VI_SetExtChnBindAttr_xb96c
    /*0000b8d8*/ CMP         R6, IP 
    /*0000b8dc*/ BEQ         VI_SetExtChnBindAttr_xb96c
    /*0000b8e0*/ CMP         R6, #0 
    /*0000b8e4*/ BNE         VI_SetExtChnBindAttr_xba14
    VI_SetExtChnBindAttr_xb8e8:
    /*0000b8e8*/ MOV         R2, #36                     @ 0x24 
    /*0000b8ec*/ MOVW        R1, #14424                  @ 0x3858 
    /*0000b8f0*/ MUL         R2, R2, R6 
    /*0000b8f4*/ ADD         R3, R5, R2 
    /*0000b8f8*/ LDR         R0, [R3, R1] 
    /*0000b8fc*/ CMP         R0, #0 
    /*0000b900*/ BEQ         VI_SetExtChnBindAttr_xb968
    /*0000b904*/ MOVW        R1, #14428                  @ 0x385c 
    /*0000b908*/ LDR         R3, [R3, R1] 
    /*0000b90c*/ CMP         R4, R3 
    /*0000b910*/ ADDNE       R2, R2, R1 
    /*0000b914*/ MOVNE       R3, #0 
    /*0000b918*/ ADDNE       R2, R5, R2 
    /*0000b91c*/ BNE         VI_SetExtChnBindAttr_xba04
    /*0000b920*/ MOV         R3, #0 
    VI_SetExtChnBindAttr_xb924:
    /*0000b924*/ ADD         R2, R6, R6, LSL #3 
    /*0000b928*/ MOV         R1, #36                     @ 0x24 
    /*0000b92c*/ ADD         R0, R2, R0 
    /*0000b930*/ ADD         R3, R2, R3 
    /*0000b934*/ ADD         R0, R0, #3600               @ 0xe10 
    /*0000b938*/ ADD         R3, R3, #3600               @ 0xe10 
    /*0000b93c*/ ADD         R0, R0, #5 
    /*0000b940*/ ADD         R3, R3, #6 
    /*0000b944*/ MLA         R6, R1, R6, R5 
    /*0000b948*/ ADD         R0, R5, R0, LSL #2 
    /*0000b94c*/ ADD         R3, R5, R3, LSL #2 
    /*0000b950*/ MOVW        R2, #14424                  @ 0x3858 
    /*0000b954*/ LDR         R1, [R0, #4] 
    /*0000b958*/ STR         R1, [R3, #4] 
    /*0000b95c*/ LDR         R3, [R6, R2] 
    /*0000b960*/ SUB         R3, R3, #1 
    /*0000b964*/ STR         R3, [R6, R2] 
    VI_SetExtChnBindAttr_xb968:
    /*0000b968*/ LDR         IP, [R7, #4] 
    VI_SetExtChnBindAttr_xb96c:
    /*0000b96c*/ MOV         R2, #36                     @ 0x24 
    /*0000b970*/ MOVW        R1, #14424                  @ 0x3858 
    /*0000b974*/ MUL         R2, R2, IP 
    /*0000b978*/ ADD         R3, R5, R2 
    /*0000b97c*/ LDR         R0, [R3, R1] 
    /*0000b980*/ CMP         R0, #0 
    /*0000b984*/ BEQ         VI_SetExtChnBindAttr_xba34
    /*0000b988*/ MOVW        R1, #14428                  @ 0x385c 
    /*0000b98c*/ LDR         R3, [R3, R1] 
    /*0000b990*/ CMP         R4, R3 
    /*0000b994*/ ADDNE       R2, R2, R1 
    /*0000b998*/ MOVNE       R3, #0 
    /*0000b99c*/ ADDNE       R2, R5, R2 
    /*0000b9a0*/ BNE         VI_SetExtChnBindAttr_xb9b4
    /*0000b9a4*/ B           VI_SetExtChnBindAttr_xb9f0
    VI_SetExtChnBindAttr_xb9a8:
    /*0000b9a8*/ LDR         R1, [R2, #4]! 
    /*0000b9ac*/ CMP         R4, R1 
    /*0000b9b0*/ BEQ         VI_SetExtChnBindAttr_xb9f0
    VI_SetExtChnBindAttr_xb9b4:
    /*0000b9b4*/ ADD         R3, R3, #1 
    /*0000b9b8*/ CMP         R0, R3 
    /*0000b9bc*/ BNE         VI_SetExtChnBindAttr_xb9a8
    VI_SetExtChnBindAttr_xb9c0:
    /*0000b9c0*/ ADD         R2, IP, IP, LSL #3 
    /*0000b9c4*/ MOV         R1, #36                     @ 0x24 
    /*0000b9c8*/ MLA         IP, R1, IP, R5 
    /*0000b9cc*/ ADD         R3, R2, R3 
    /*0000b9d0*/ ADD         R3, R3, #3600               @ 0xe10 
    /*0000b9d4*/ MOVW        R2, #14424                  @ 0x3858 
    /*0000b9d8*/ ADD         R3, R3, #6 
    /*0000b9dc*/ ADD         R5, R5, R3, LSL #2 
    /*0000b9e0*/ STR         R4, [R5, #4] 
    /*0000b9e4*/ LDR         R3, [IP, R2] 
    /*0000b9e8*/ ADD         R3, R3, #1 
    /*0000b9ec*/ STR         R3, [IP, R2] 
    VI_SetExtChnBindAttr_xb9f0:
    /*0000b9f0*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0000b9f4*/ POP         {R4, R5, R6, R7, PC} 
    VI_SetExtChnBindAttr_xb9f8:
    /*0000b9f8*/ LDR         R1, [R2, #4]! 
    /*0000b9fc*/ CMP         R4, R1 
    /*0000ba00*/ BEQ         VI_SetExtChnBindAttr_xb924
    VI_SetExtChnBindAttr_xba04:
    /*0000ba04*/ ADD         R3, R3, #1 
    /*0000ba08*/ CMP         R0, R3 
    /*0000ba0c*/ BNE         VI_SetExtChnBindAttr_xb9f8
    /*0000ba10*/ B           VI_SetExtChnBindAttr_xb968
    VI_SetExtChnBindAttr_xba14:
    /*0000ba14*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b00] 
    /*0000ba18*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a20] 
    /*0000ba1c*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b00] 
    /*0000ba20*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a20] 
    /*0000ba24*/ MOV         R2, #135                    @ 0x87 
    /*0000ba28*/ LDR         R1, [PC, #12]               @ 0x000000000000ba3c 
    /*0000ba2c*/ BL          0x000000000000BA2C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000ba30*/ B           VI_SetExtChnBindAttr_xb8e8
    VI_SetExtChnBindAttr_xba34:
    /*0000ba34*/ MOV         R3, R0 
    /*0000ba38*/ B           VI_SetExtChnBindAttr_xb9c0
    /*0000ba3c*/ MULEQ       R0, IP, R7 
FUNC_END VI_SetExtChnBindAttr


FUNC_BEGIN VI_SetExtChnAttr
    /*0000ba40*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ba44*/ MOV         R6, R0 
    /*0000ba48*/ SUB         SP, SP, #20 
    /*0000ba4c*/ MOV         R0, R2 
    /*0000ba50*/ MOV         R5, R2 
    /*0000ba54*/ MOV         R7, R1 
    /*0000ba58*/ BL          0x000000000000BA58          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000ba5c*/ SUBS        R4, R0, #0 
    /*0000ba60*/ BEQ         VI_SetExtChnAttr_xba70
    VI_SetExtChnAttr_xba64:
    /*0000ba64*/ MOV         R0, R4 
    /*0000ba68*/ ADD         SP, SP, #20 
    /*0000ba6c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SetExtChnAttr_xba70:
    /*0000ba70*/ MOV         R0, R6 
    /*0000ba74*/ BL          0x000000000000BA74          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000ba78*/ SUBS        R4, R0, #0 
    /*0000ba7c*/ BNE         VI_SetExtChnAttr_xba64
    /*0000ba80*/ SUB         R3, R7, #1 
    /*0000ba84*/ CMP         R3, #7 
    /*0000ba88*/ BHI         VI_SetExtChnAttr_xbaf4
    VI_SetExtChnAttr_xba8c:
    /*0000ba8c*/ MOV         R8, #176                    @ 0xb0 
    /*0000ba90*/ MOVW        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000ba94*/ MUL         R8, R8, R6 
    /*0000ba98*/ MOVT        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0000ba9c*/ ADD         SL, R8, #100                @ 0x64 
    /*0000baa0*/ ADD         SL, SL, R9 
    /*0000baa4*/ MOV         R0, SL 
    /*0000baa8*/ BL          0x000000000000BAA8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000baac*/ CMP         R0, #0 
    /*0000bab0*/ BNE         VI_SetExtChnAttr_xbba0
    /*0000bab4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000bab8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000babc*/ LDR         FP, [R3, R6, LSL #2] 
    /*0000bac0*/ CMP         FP, #0 
    /*0000bac4*/ BEQ         VI_SetExtChnAttr_xbb70
    /*0000bac8*/ MOV         R2, R5 
    /*0000bacc*/ MOV         R1, R7 
    /*0000bad0*/ MOV         R0, R6 
    /*0000bad4*/ BL          0x000000000000BAD4          @ VI_DRV_CheckExtChnAttr [R_ARM_CALL: .text+0x29994] 
    /*0000bad8*/ SUBS        R4, R0, #0 
    /*0000badc*/ MOVWNE      R4, #32771                  @ 0x8003 
    /*0000bae0*/ MOVTNE      R4, #40976                  @ 0xa010 
    /*0000bae4*/ BEQ         VI_SetExtChnAttr_xbb08
    VI_SetExtChnAttr_xbae8:
    /*0000bae8*/ MOV         R0, SL 
    /*0000baec*/ BL          0x000000000000BAEC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000baf0*/ B           VI_SetExtChnAttr_xba64
    VI_SetExtChnAttr_xbaf4:
    /*0000baf4*/ MOV         R0, R7 
    /*0000baf8*/ BL          0x000000000000B6B4 
    /*0000bafc*/ SUBS        R4, R0, #0 
    /*0000bb00*/ BNE         VI_SetExtChnAttr_xba64
    /*0000bb04*/ B           VI_SetExtChnAttr_xba8c
    VI_SetExtChnAttr_xbb08:
    /*0000bb08*/ ADD         R8, R8, #140                @ 0x8c 
    /*0000bb0c*/ ADD         R1, SP, #12 
    /*0000bb10*/ ADD         R9, R8, R9 
    /*0000bb14*/ MOV         R0, R9 
    /*0000bb18*/ BL          0x000000000000BB18          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000bb1c*/ MOV         R3, #36                     @ 0x24 
    /*0000bb20*/ MUL         R3, R3, R7 
    /*0000bb24*/ ADD         R2, FP, R3 
    /*0000bb28*/ LDR         R2, [R2, #148]              @ 0x94 
    /*0000bb2c*/ CMP         R2, #0 
    /*0000bb30*/ BEQ         VI_SetExtChnAttr_xbb40
    /*0000bb34*/ ADD         R3, R3, #148                @ 0x94 
    /*0000bb38*/ ADD         R0, FP, R3 
    /*0000bb3c*/ BL          0x000000000000BB3C          @ VI_ClearPicQueue [R_ARM_CALL: .text+0x3e24] 
    VI_SetExtChnAttr_xbb40:
    /*0000bb40*/ MOV         R2, R5 
    /*0000bb44*/ MOV         R1, R7 
    /*0000bb48*/ MOV         R0, R6 
    /*0000bb4c*/ BL          0x000000000000BB4C          @ VI_SetExtChnBindAttr [R_ARM_CALL: .text+0xb8a4] 
    /*0000bb50*/ MOV         R1, R7 
    /*0000bb54*/ MOV         R2, R5 
    /*0000bb58*/ MOV         R0, R6 
    /*0000bb5c*/ BL          0x000000000000BB5C          @ VI_DRV_SetExtChnAttr [R_ARM_CALL: .text+0x29c0c] 
    /*0000bb60*/ ADD         R1, SP, #12 
    /*0000bb64*/ MOV         R0, R9 
    /*0000bb68*/ BL          0x000000000000BB68          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000bb6c*/ B           VI_SetExtChnAttr_xbae8
    VI_SetExtChnAttr_xbb70:
    /*0000bb70*/ MOV         R3, #192                    @ 0xc0 
    /*0000bb74*/ STR         R6, [SP, #4] 
    /*0000bb78*/ STR         R3, [SP] 
    /*0000bb7c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b24] 
    /*0000bb80*/ LDR         R3, [PC, #36]               @ 0x000000000000bbac 
    /*0000bb84*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b24] 
    /*0000bb88*/ MOV         R1, #16 
    /*0000bb8c*/ MOV         R0, #3 
    /*0000bb90*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000bb94*/ BL          0x000000000000BB94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bb98*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000bb9c*/ B           VI_SetExtChnAttr_xbae8
    VI_SetExtChnAttr_xbba0:
    /*0000bba0*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000bba4*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000bba8*/ B           VI_SetExtChnAttr_xba64
    /*0000bbac*/ @           <UNDEFINED> instruction: 0x000007b4 
FUNC_END VI_SetExtChnAttr


FUNC_BEGIN VI_GetExtChnAttr
    /*0000bbb0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000bbb4*/ MOV         R6, R0 
    /*0000bbb8*/ SUB         SP, SP, #16 
    /*0000bbbc*/ MOV         R0, R2 
    /*0000bbc0*/ MOV         R5, R2 
    /*0000bbc4*/ MOV         R7, R1 
    /*0000bbc8*/ BL          0x000000000000BBC8          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000bbcc*/ SUBS        R4, R0, #0 
    /*0000bbd0*/ BEQ         VI_GetExtChnAttr_xbbe0
    VI_GetExtChnAttr_xbbd4:
    /*0000bbd4*/ MOV         R0, R4 
    /*0000bbd8*/ ADD         SP, SP, #16 
    /*0000bbdc*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetExtChnAttr_xbbe0:
    /*0000bbe0*/ MOV         R0, R6 
    /*0000bbe4*/ BL          0x000000000000BBE4          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000bbe8*/ SUBS        R4, R0, #0 
    /*0000bbec*/ BNE         VI_GetExtChnAttr_xbbd4
    /*0000bbf0*/ SUB         R3, R7, #1 
    /*0000bbf4*/ CMP         R3, #7 
    /*0000bbf8*/ BHI         VI_GetExtChnAttr_xbc5c
    VI_GetExtChnAttr_xbbfc:
    /*0000bbfc*/ LDR         R3, [PC, #236]              @ 0x000000000000bcf0 
    /*0000bc00*/ MOV         R8, #176                    @ 0xb0 
    /*0000bc04*/ MLA         R8, R8, R6, R3 
    /*0000bc08*/ MOV         R0, R8 
    /*0000bc0c*/ BL          0x000000000000BC0C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000bc10*/ CMP         R0, #0 
    /*0000bc14*/ BNE         VI_GetExtChnAttr_xbc74
    /*0000bc18*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000bc1c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000bc20*/ LDR         R3, [R3, R6, LSL #2] 
    /*0000bc24*/ CMP         R3, #0 
    /*0000bc28*/ BEQ         VI_GetExtChnAttr_xbcb8
    /*0000bc2c*/ MOV         R1, R7 
    /*0000bc30*/ MOV         R0, R6 
    /*0000bc34*/ BL          0x000000000000BC34          @ VI_DRV_IsChnAttrSetted [R_ARM_CALL: .text+0x29cfc] 
    /*0000bc38*/ CMP         R0, #0 
    /*0000bc3c*/ BEQ         VI_GetExtChnAttr_xbc80
    /*0000bc40*/ MOV         R2, R5 
    /*0000bc44*/ MOV         R1, R7 
    /*0000bc48*/ MOV         R0, R6 
    /*0000bc4c*/ BL          0x000000000000BC4C          @ VI_DRV_GetExtChnAttr [R_ARM_CALL: .text+0x29c78] 
    /*0000bc50*/ MOV         R0, R8 
    /*0000bc54*/ BL          0x000000000000BC54          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bc58*/ B           VI_GetExtChnAttr_xbbd4
    VI_GetExtChnAttr_xbc5c:
    /*0000bc5c*/ MOV         R0, R7 
    /*0000bc60*/ BL          0x000000000000B6B4 
    /*0000bc64*/ CMP         R0, #0 
    /*0000bc68*/ MOVNE       R4, R0 
    /*0000bc6c*/ BNE         VI_GetExtChnAttr_xbbd4
    /*0000bc70*/ B           VI_GetExtChnAttr_xbbfc
    VI_GetExtChnAttr_xbc74:
    /*0000bc74*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000bc78*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000bc7c*/ B           VI_GetExtChnAttr_xbbd4
    VI_GetExtChnAttr_xbc80:
    /*0000bc80*/ MOV         R0, R8 
    /*0000bc84*/ MOVW        R4, #32775                  @ 0x8007 
    /*0000bc88*/ BL          0x000000000000BC88          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bc8c*/ MOV         R3, #245                    @ 0xf5 
    /*0000bc90*/ STMIB       SP, {R6, R7} 
    /*0000bc94*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b54] 
    /*0000bc98*/ STR         R3, [SP] 
    /*0000bc9c*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b54] 
    /*0000bca0*/ LDR         R3, [PC, #76]               @ 0x000000000000bcf4 
    /*0000bca4*/ MOV         R1, #16 
    /*0000bca8*/ MOV         R0, #3 
    /*0000bcac*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000bcb0*/ BL          0x000000000000BCB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bcb4*/ B           VI_GetExtChnAttr_xbbd4
    VI_GetExtChnAttr_xbcb8:
    /*0000bcb8*/ MOV         R0, R8 
    /*0000bcbc*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000bcc0*/ BL          0x000000000000BCC0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bcc4*/ MOV         R3, #238                    @ 0xee 
    /*0000bcc8*/ STR         R6, [SP, #4] 
    /*0000bccc*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b24] 
    /*0000bcd0*/ STR         R3, [SP] 
    /*0000bcd4*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b24] 
    /*0000bcd8*/ LDR         R3, [PC, #20]               @ 0x000000000000bcf4 
    /*0000bcdc*/ MOV         R1, #16 
    /*0000bce0*/ MOV         R0, #3 
    /*0000bce4*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000bce8*/ BL          0x000000000000BCE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bcec*/ B           VI_GetExtChnAttr_xbbd4
    /*0000bcf0*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0000bcf4*/ ANDEQ       R0, R0, R8, ASR #15 
FUNC_END VI_GetExtChnAttr


FUNC_BEGIN VI_SetExtChnFisheye
    /*0000bcf8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000bcfc*/ SUB         SP, SP, #164                @ 0xa4 
    /*0000bd00*/ MOV         R5, R1 
    /*0000bd04*/ MOV         R4, R2 
    /*0000bd08*/ STR         R1, [SP, #16] 
    /*0000bd0c*/ STR         R0, [SP, #20] 
    /*0000bd10*/ BL          0x000000000000BD10          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000bd14*/ SUBS        R8, R0, #0 
    /*0000bd18*/ BNE         VI_SetExtChnFisheye_xbd38
    /*0000bd1c*/ SUB         R3, R5, #1 
    /*0000bd20*/ CMP         R3, #7 
    /*0000bd24*/ BHI         VI_SetExtChnFisheye_xbd44
    VI_SetExtChnFisheye_xbd28:
    /*0000bd28*/ MOV         R0, R4 
    /*0000bd2c*/ BL          0x000000000000BD2C          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000bd30*/ SUBS        R8, R0, #0 
    /*0000bd34*/ BEQ         VI_SetExtChnFisheye_xbd60
    VI_SetExtChnFisheye_xbd38:
    /*0000bd38*/ MOV         R0, R8 
    /*0000bd3c*/ ADD         SP, SP, #164                @ 0xa4 
    /*0000bd40*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SetExtChnFisheye_xbd44:
    /*0000bd44*/ LDR         R0, [SP, #16] 
    /*0000bd48*/ BL          0x000000000000B6B4 
    /*0000bd4c*/ SUBS        R8, R0, #0 
    /*0000bd50*/ BEQ         VI_SetExtChnFisheye_xbd28
    /*0000bd54*/ MOV         R0, R8 
    /*0000bd58*/ ADD         SP, SP, #164                @ 0xa4 
    /*0000bd5c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SetExtChnFisheye_xbd60:
    /*0000bd60*/ LDR         R6, [SP, #20] 
    /*0000bd64*/ MOV         R3, #176                    @ 0xb0 
    /*0000bd68*/ MOVW        R2, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000bd6c*/ MOVT        R2, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0000bd70*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000bd74*/ MUL         R3, R3, R6 
    /*0000bd78*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000bd7c*/ ADD         R3, R3, #100                @ 0x64 
    /*0000bd80*/ ADD         R3, R2, R3 
    /*0000bd84*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000bd88*/ MOV         R0, R3 
    /*0000bd8c*/ BL          0x000000000000BD8C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000bd90*/ SUBS        R5, R0, #0 
    /*0000bd94*/ BNE         VI_SetExtChnFisheye_xbf88
    /*0000bd98*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000bd9c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000bda0*/ LDR         R3, [R3, R6, LSL #2] 
    /*0000bda4*/ CMP         R3, #0 
    /*0000bda8*/ BEQ         VI_SetExtChnFisheye_xbfc8
    /*0000bdac*/ MOV         R0, #37                     @ 0x25 
    /*0000bdb0*/ BL          0x000000000000BDB0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000bdb4*/ SUBS        R3, R0, #0 
    /*0000bdb8*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000bdbc*/ BEQ         VI_SetExtChnFisheye_xbf94
    /*0000bdc0*/ MOV         R2, R4 
    /*0000bdc4*/ LDR         R1, [SP, #16] 
    /*0000bdc8*/ LDR         R0, [SP, #20] 
    /*0000bdcc*/ BL          0x000000000000BDCC          @ VI_DRV_CheckExtChnFishEyeAttr [R_ARM_CALL: .text+0x2b478] 
    /*0000bdd0*/ SUBS        R8, R0, #0 
    /*0000bdd4*/ BNE         VI_SetExtChnFisheye_xbf7c
    /*0000bdd8*/ LDR         R3, [R4, #3624]             @ 0xe28 
    /*0000bddc*/ CMP         R3, #0 
    /*0000bde0*/ BEQ         VI_SetExtChnFisheye_xbef4
    /*0000bde4*/ LDR         R1, [SP, #20] 
    /*0000bde8*/ MOV         R3, #560                    @ 0x230 
    /*0000bdec*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x7d0] 
    /*0000bdf0*/ STR         R8, [SP, #52]               @ 0x34 
    /*0000bdf4*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x7d0] 
    /*0000bdf8*/ LDR         R8, [SP, #40]               @ 0x28 
    /*0000bdfc*/ MUL         R3, R3, R1 
    /*0000be00*/ ADD         R6, R4, #1312               @ 0x520 
    /*0000be04*/ ADD         SL, R4, #1600               @ 0x640 
    /*0000be08*/ ADD         R7, R4, #3072               @ 0xc00 
    /*0000be0c*/ MOV         FP, R4 
    /*0000be10*/ STR         R2, [SP, #28] 
    /*0000be14*/ MOV         R1, R3 
    /*0000be18*/ ADD         R9, R2, R1 
    /*0000be1c*/ STR         R3, [SP, #24] 
    /*0000be20*/ ADD         R3, R3, #72                 @ 0x48 
    /*0000be24*/ ADD         R3, R2, R3 
    /*0000be28*/ STR         R3, [SP, #32] 
    VI_SetExtChnFisheye_xbe2c:
    /*0000be2c*/ MOV         R3, #44                     @ 0x2c 
    /*0000be30*/ MOV         IP, #0 
    /*0000be34*/ MLA         R3, R3, R5, R4 
    /*0000be38*/ MOV         R1, R6 
    /*0000be3c*/ MOV         R2, #72                     @ 0x48 
    /*0000be40*/ MOV         R0, R9 
    /*0000be44*/ STR         IP, [SP, #72]               @ 0x48 
    /*0000be48*/ ADD         R5, R5, #1 
    /*0000be4c*/ LDR         R3, [R3, #3628]             @ 0xe2c 
    /*0000be50*/ CMP         R3, #3 
    /*0000be54*/ BEQ         VI_SetExtChnFisheye_xbec4
    /*0000be58*/ BL          0x000000000000BE58          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000be5c*/ MOV         R2, #368                    @ 0x170 
    /*0000be60*/ MOV         R1, SL 
    /*0000be64*/ LDR         R0, [SP, #32] 
    /*0000be68*/ BL          0x000000000000BE68          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000be6c*/ LDR         R3, [SP, #24] 
    /*0000be70*/ MOV         R2, #32 
    /*0000be74*/ MOV         R1, R7 
    /*0000be78*/ ADD         R0, R3, #528                @ 0x210 
    /*0000be7c*/ LDR         R3, [SP, #28] 
    /*0000be80*/ ADD         R0, R3, R0 
    /*0000be84*/ BL          0x000000000000BE84          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000be88*/ ADD         R1, R4, #3568               @ 0xdf0 
    /*0000be8c*/ ADD         R1, R1, #8 
    /*0000be90*/ MOV         R2, #12 
    /*0000be94*/ ADD         R0, SP, #60                 @ 0x3c 
    /*0000be98*/ BL          0x000000000000BE98          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000be9c*/ STR         R7, [SP, #4] 
    /*0000bea0*/ STR         R9, [SP] 
    /*0000bea4*/ ADD         R0, SP, #60                 @ 0x3c 
    /*0000bea8*/ MOV         R3, #0 
    /*0000beac*/ ADD         R2, SP, #72                 @ 0x48 
    /*0000beb0*/ MOV         R1, FP 
    /*0000beb4*/ LDR         IP, [R8, #68]               @ 0x44 
    /*0000beb8*/ BLX         IP 
    /*0000bebc*/ CMP         R0, #0 
    /*0000bec0*/ BNE         VI_SetExtChnFisheye_xbf38
    VI_SetExtChnFisheye_xbec4:
    /*0000bec4*/ MOV         R0, R6 
    /*0000bec8*/ MOV         R2, #72                     @ 0x48 
    /*0000becc*/ MOV         R1, R9 
    /*0000bed0*/ ADD         SL, SL, #368                @ 0x170 
    /*0000bed4*/ BL          0x000000000000BED4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000bed8*/ LDR         R3, [R4, #3624]             @ 0xe28 
    /*0000bedc*/ ADD         R7, R7, #32 
    /*0000bee0*/ ADD         FP, FP, #328                @ 0x148 
    /*0000bee4*/ CMP         R3, R5 
    /*0000bee8*/ ADD         R6, R6, #72                 @ 0x48 
    /*0000beec*/ BHI         VI_SetExtChnFisheye_xbe2c
    /*0000bef0*/ LDR         R8, [SP, #52]               @ 0x34 
    VI_SetExtChnFisheye_xbef4:
    /*0000bef4*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000bef8*/ ADD         R1, SP, #56                 @ 0x38 
    /*0000befc*/ ADD         R5, R3, #140                @ 0x8c 
    /*0000bf00*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000bf04*/ ADD         R5, R3, R5 
    /*0000bf08*/ MOV         R0, R5 
    /*0000bf0c*/ BL          0x000000000000BF0C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000bf10*/ MOV         R2, R4 
    /*0000bf14*/ LDR         R1, [SP, #16] 
    /*0000bf18*/ LDR         R0, [SP, #20] 
    /*0000bf1c*/ BL          0x000000000000BF1C          @ VI_DRV_SetExtChnFisheyeAttr [R_ARM_CALL: .text+0x2b094] 
    /*0000bf20*/ MOV         R0, R5 
    /*0000bf24*/ ADD         R1, SP, #56                 @ 0x38 
    /*0000bf28*/ BL          0x000000000000BF28          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000bf2c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000bf30*/ BL          0x000000000000BF30          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bf34*/ B           VI_SetExtChnFisheye_xbd38
    VI_SetExtChnFisheye_xbf38:
    /*0000bf38*/ LDR         R3, [SP, #16] 
    /*0000bf3c*/ MOV         R1, #16 
    /*0000bf40*/ LDR         R2, [SP, #20] 
    /*0000bf44*/ MOV         R0, #3 
    /*0000bf48*/ MOVW        R8, #32771                  @ 0x8003 
    /*0000bf4c*/ MOVT        R8, #40976                  @ 0xa010 
    /*0000bf50*/ STR         R3, [SP, #8] 
    /*0000bf54*/ MOV         R3, #316                    @ 0x13c 
    /*0000bf58*/ STR         R2, [SP, #4] 
    /*0000bf5c*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c30] 
    /*0000bf60*/ STR         R3, [SP] 
    /*0000bf64*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c30] 
    /*0000bf68*/ LDR         R3, [PC, #148]              @ 0x000000000000c004 
    /*0000bf6c*/ BL          0x000000000000BF6C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bf70*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000bf74*/ BL          0x000000000000BF74          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bf78*/ B           VI_SetExtChnFisheye_xbd38
    VI_SetExtChnFisheye_xbf7c:
    /*0000bf7c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000bf80*/ BL          0x000000000000BF80          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bf84*/ B           VI_SetExtChnFisheye_xbd38
    VI_SetExtChnFisheye_xbf88:
    /*0000bf88*/ MOV         R8, #65024                  @ 0xfe00 
    /*0000bf8c*/ MOVT        R8, #65535                  @ 0xffff 
    /*0000bf90*/ B           VI_SetExtChnFisheye_xbd38
    VI_SetExtChnFisheye_xbf94:
    /*0000bf94*/ MOVW        R3, #287                    @ 0x11f 
    /*0000bf98*/ MOV         R1, #16 
    /*0000bf9c*/ STR         R3, [SP] 
    /*0000bfa0*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bc8] 
    /*0000bfa4*/ LDR         R3, [PC, #88]               @ 0x000000000000c004 
    /*0000bfa8*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bc8] 
    /*0000bfac*/ MOV         R0, #3 
    /*0000bfb0*/ MOVW        R8, #32777                  @ 0x8009 
    /*0000bfb4*/ BL          0x000000000000BFB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bfb8*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000bfbc*/ BL          0x000000000000BFBC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bfc0*/ MOVT        R8, #40976                  @ 0xa010 
    /*0000bfc4*/ B           VI_SetExtChnFisheye_xbd38
    VI_SetExtChnFisheye_xbfc8:
    /*0000bfc8*/ LDR         R3, [SP, #20] 
    /*0000bfcc*/ MOV         R1, #16 
    /*0000bfd0*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b98] 
    /*0000bfd4*/ MOV         R0, #3 
    /*0000bfd8*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b98] 
    /*0000bfdc*/ MOVW        R8, #32773                  @ 0x8005 
    /*0000bfe0*/ STR         R3, [SP, #4] 
    /*0000bfe4*/ MOVW        R3, #279                    @ 0x117 
    /*0000bfe8*/ STR         R3, [SP] 
    /*0000bfec*/ MOVT        R8, #40976                  @ 0xa010 
    /*0000bff0*/ LDR         R3, [PC, #12]               @ 0x000000000000c004 
    /*0000bff4*/ BL          0x000000000000BFF4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bff8*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000bffc*/ BL          0x000000000000BFFC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c000*/ B           VI_SetExtChnFisheye_xbd38
    /*0000c004*/ LDRDEQ      R0, [R0], -IP 
FUNC_END VI_SetExtChnFisheye


FUNC_BEGIN VI_GetExtChnFisheye
    /*0000c008*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000c00c*/ SUB         SP, SP, #8 
    /*0000c010*/ MOV         R5, R1 
    /*0000c014*/ MOV         R6, R2 
    /*0000c018*/ MOV         R7, R0 
    /*0000c01c*/ BL          0x000000000000C01C          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000c020*/ SUBS        R4, R0, #0 
    /*0000c024*/ BNE         VI_GetExtChnFisheye_xc044
    /*0000c028*/ SUB         R3, R5, #1 
    /*0000c02c*/ CMP         R3, #7 
    /*0000c030*/ BHI         VI_GetExtChnFisheye_xc050
    VI_GetExtChnFisheye_xc034:
    /*0000c034*/ MOV         R0, R6 
    /*0000c038*/ BL          0x000000000000C038          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000c03c*/ SUBS        R4, R0, #0 
    /*0000c040*/ BEQ         VI_GetExtChnFisheye_xc06c
    VI_GetExtChnFisheye_xc044:
    /*0000c044*/ MOV         R0, R4 
    /*0000c048*/ ADD         SP, SP, #8 
    /*0000c04c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetExtChnFisheye_xc050:
    /*0000c050*/ MOV         R0, R5 
    /*0000c054*/ BL          0x000000000000B6B4 
    /*0000c058*/ SUBS        R4, R0, #0 
    /*0000c05c*/ BEQ         VI_GetExtChnFisheye_xc034
    /*0000c060*/ MOV         R0, R4 
    /*0000c064*/ ADD         SP, SP, #8 
    /*0000c068*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetExtChnFisheye_xc06c:
    /*0000c06c*/ LDR         R3, [PC, #140]              @ 0x000000000000c100 
    /*0000c070*/ MOV         R8, #176                    @ 0xb0 
    /*0000c074*/ MLA         R8, R8, R7, R3 
    /*0000c078*/ MOV         R0, R8 
    /*0000c07c*/ BL          0x000000000000C07C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000c080*/ CMP         R0, #0 
    /*0000c084*/ BNE         VI_GetExtChnFisheye_xc0bc
    /*0000c088*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000c08c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000c090*/ LDR         R3, [R3, R7, LSL #2] 
    /*0000c094*/ CMP         R3, #0 
    /*0000c098*/ BEQ         VI_GetExtChnFisheye_xc0c8
    /*0000c09c*/ MOV         R2, R6 
    /*0000c0a0*/ MOV         R1, R5 
    /*0000c0a4*/ MOV         R0, R7 
    /*0000c0a8*/ BL          0x000000000000C0A8          @ VI_DRV_GetExtChnFisheyeAttr [R_ARM_CALL: .text+0x2b0e8] 
    /*0000c0ac*/ MOV         R4, R0 
    /*0000c0b0*/ MOV         R0, R8 
    /*0000c0b4*/ BL          0x000000000000C0B4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c0b8*/ B           VI_GetExtChnFisheye_xc044
    VI_GetExtChnFisheye_xc0bc:
    /*0000c0bc*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000c0c0*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000c0c4*/ B           VI_GetExtChnFisheye_xc044
    VI_GetExtChnFisheye_xc0c8:
    /*0000c0c8*/ MOV         R3, #356                    @ 0x164 
    /*0000c0cc*/ MOV         R1, #16 
    /*0000c0d0*/ STR         R3, [SP] 
    /*0000c0d4*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b98] 
    /*0000c0d8*/ LDR         R3, [PC, #36]               @ 0x000000000000c104 
    /*0000c0dc*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b98] 
    /*0000c0e0*/ STR         R7, [SP, #4] 
    /*0000c0e4*/ MOV         R0, #3 
    /*0000c0e8*/ BL          0x000000000000C0E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c0ec*/ MOV         R0, R8 
    /*0000c0f0*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000c0f4*/ BL          0x000000000000C0F4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c0f8*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000c0fc*/ B           VI_GetExtChnFisheye_xc044
    /*0000c100*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0000c104*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VI_GetExtChnFisheye


FUNC_BEGIN VI_SetChnLowDealyAttr
    /*0000c108*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000c10c*/ SUB         SP, SP, #24 
    /*0000c110*/ MOV         R5, R1 
    /*0000c114*/ MOV         R7, R2 
    /*0000c118*/ MOV         R6, R0 
    /*0000c11c*/ BL          0x000000000000C11C          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000c120*/ SUBS        R4, R0, #0 
    /*0000c124*/ BEQ         VI_SetChnLowDealyAttr_xc134
    VI_SetChnLowDealyAttr_xc128:
    /*0000c128*/ MOV         R0, R4 
    /*0000c12c*/ ADD         SP, SP, #24 
    /*0000c130*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SetChnLowDealyAttr_xc134:
    /*0000c134*/ MOV         R0, R5 
    /*0000c138*/ BL          0x000000000000C138          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*0000c13c*/ SUBS        R4, R0, #0 
    /*0000c140*/ BNE         VI_SetChnLowDealyAttr_xc128
    /*0000c144*/ MOV         R0, R7 
    /*0000c148*/ BL          0x000000000000C148          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000c14c*/ SUBS        R4, R0, #0 
    /*0000c150*/ BNE         VI_SetChnLowDealyAttr_xc128
    /*0000c154*/ MOV         R0, R5 
    /*0000c158*/ BL          0x000000000000C158          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*0000c15c*/ CMP         R0, #0 
    /*0000c160*/ BNE         VI_SetChnLowDealyAttr_xc20c
    /*0000c164*/ MOV         R8, #176                    @ 0xb0 
    /*0000c168*/ MOVW        SL, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000c16c*/ MUL         R8, R8, R6 
    /*0000c170*/ MOVT        SL, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0000c174*/ ADD         R9, R8, #100                @ 0x64 
    /*0000c178*/ ADD         R9, R9, SL 
    /*0000c17c*/ MOV         R0, R9 
    /*0000c180*/ BL          0x000000000000C180          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000c184*/ CMP         R0, #0 
    /*0000c188*/ BNE         VI_SetChnLowDealyAttr_xc240
    /*0000c18c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000c190*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000c194*/ LDR         R3, [R3, R6, LSL #2] 
    /*0000c198*/ CMP         R3, #0 
    /*0000c19c*/ BEQ         VI_SetChnLowDealyAttr_xc28c
    /*0000c1a0*/ MOV         R1, R5 
    /*0000c1a4*/ MOV         R0, R6 
    /*0000c1a8*/ BL          0x000000000000C1A8          @ VI_DRV_IsChnAttrSetted [R_ARM_CALL: .text+0x29cfc] 
    /*0000c1ac*/ CMP         R0, #0 
    /*0000c1b0*/ BEQ         VI_SetChnLowDealyAttr_xc24c
    /*0000c1b4*/ MOV         R2, R7 
    /*0000c1b8*/ MOV         R1, R5 
    /*0000c1bc*/ MOV         R0, R6 
    /*0000c1c0*/ BL          0x000000000000C1C0          @ VI_DRV_CheckChnLowDelayAttr [R_ARM_CALL: .text+0x2a750] 
    /*0000c1c4*/ SUBS        R4, R0, #0 
    /*0000c1c8*/ BNE         VI_SetChnLowDealyAttr_xc200
    /*0000c1cc*/ ADD         R8, R8, #140                @ 0x8c 
    /*0000c1d0*/ ADD         R1, SP, #20 
    /*0000c1d4*/ ADD         R8, R8, SL 
    /*0000c1d8*/ MOV         R0, R8 
    /*0000c1dc*/ BL          0x000000000000C1DC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c1e0*/ MOV         R1, R5 
    /*0000c1e4*/ MOV         R2, R7 
    /*0000c1e8*/ MOV         R0, R6 
    /*0000c1ec*/ BL          0x000000000000C1EC          @ VI_DRV_SetChnLowDelayAttr [R_ARM_CALL: .text+0x2a7d4] 
    /*0000c1f0*/ ADD         R1, SP, #20 
    /*0000c1f4*/ MOV         R4, R0 
    /*0000c1f8*/ MOV         R0, R8 
    /*0000c1fc*/ BL          0x000000000000C1FC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_SetChnLowDealyAttr_xc200:
    /*0000c200*/ MOV         R0, R9 
    /*0000c204*/ BL          0x000000000000C204          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c208*/ B           VI_SetChnLowDealyAttr_xc128
    VI_SetChnLowDealyAttr_xc20c:
    /*0000c20c*/ MOV         R2, #44                     @ 0x2c 
    /*0000c210*/ STR         R5, [SP, #4] 
    /*0000c214*/ STR         R2, [SP] 
    /*0000c218*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x804] 
    /*0000c21c*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c7c] 
    /*0000c220*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x804] 
    /*0000c224*/ MOV         R1, #16 
    /*0000c228*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c7c] 
    /*0000c22c*/ MOV         R0, #3 
    /*0000c230*/ MOVW        R4, #32776                  @ 0x8008 
    /*0000c234*/ BL          0x000000000000C234          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c238*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000c23c*/ B           VI_SetChnLowDealyAttr_xc128
    VI_SetChnLowDealyAttr_xc240:
    /*0000c240*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000c244*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000c248*/ B           VI_SetChnLowDealyAttr_xc128
    VI_SetChnLowDealyAttr_xc24c:
    /*0000c24c*/ MOV         R0, R9 
    /*0000c250*/ MOVW        R4, #32784                  @ 0x8010 
    /*0000c254*/ BL          0x000000000000C254          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c258*/ MOV         R2, #61                     @ 0x3d 
    /*0000c25c*/ STR         R5, [SP, #8] 
    /*0000c260*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x804] 
    /*0000c264*/ STR         R2, [SP] 
    /*0000c268*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x804] 
    /*0000c26c*/ STR         R6, [SP, #4] 
    /*0000c270*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ce0] 
    /*0000c274*/ MOV         R1, #16 
    /*0000c278*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ce0] 
    /*0000c27c*/ MOV         R0, #3 
    /*0000c280*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000c284*/ BL          0x000000000000C284          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c288*/ B           VI_SetChnLowDealyAttr_xc128
    VI_SetChnLowDealyAttr_xc28c:
    /*0000c28c*/ MOV         R2, #52                     @ 0x34 
    /*0000c290*/ MOV         R1, #16 
    /*0000c294*/ STR         R2, [SP] 
    /*0000c298*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x804] 
    /*0000c29c*/ STR         R6, [SP, #4] 
    /*0000c2a0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x804] 
    /*0000c2a4*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2cb0] 
    /*0000c2a8*/ MOV         R0, #3 
    /*0000c2ac*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2cb0] 
    /*0000c2b0*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000c2b4*/ BL          0x000000000000C2B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c2b8*/ MOV         R0, R9 
    /*0000c2bc*/ BL          0x000000000000C2BC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c2c0*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000c2c4*/ B           VI_SetChnLowDealyAttr_xc128
FUNC_END VI_SetChnLowDealyAttr


FUNC_BEGIN VI_GetChnLowDealyAttr
    /*0000c2c8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000c2cc*/ SUB         SP, SP, #8 
    /*0000c2d0*/ MOV         R5, R1 
    /*0000c2d4*/ MOV         R6, R2 
    /*0000c2d8*/ MOV         R7, R0 
    /*0000c2dc*/ BL          0x000000000000C2DC          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000c2e0*/ SUBS        R4, R0, #0 
    /*0000c2e4*/ BEQ         VI_GetChnLowDealyAttr_xc2f4
    VI_GetChnLowDealyAttr_xc2e8:
    /*0000c2e8*/ MOV         R0, R4 
    /*0000c2ec*/ ADD         SP, SP, #8 
    /*0000c2f0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetChnLowDealyAttr_xc2f4:
    /*0000c2f4*/ MOV         R0, R5 
    /*0000c2f8*/ BL          0x000000000000C2F8          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*0000c2fc*/ SUBS        R4, R0, #0 
    /*0000c300*/ BNE         VI_GetChnLowDealyAttr_xc2e8
    /*0000c304*/ MOV         R0, R6 
    /*0000c308*/ BL          0x000000000000C308          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000c30c*/ SUBS        R4, R0, #0 
    /*0000c310*/ BNE         VI_GetChnLowDealyAttr_xc2e8
    /*0000c314*/ MOV         R0, R5 
    /*0000c318*/ BL          0x000000000000C318          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*0000c31c*/ CMP         R0, #0 
    /*0000c320*/ BNE         VI_GetChnLowDealyAttr_xc374
    /*0000c324*/ LDR         R3, [PC, #188]              @ 0x000000000000c3e8 
    /*0000c328*/ MOV         R8, #176                    @ 0xb0 
    /*0000c32c*/ MLA         R8, R8, R7, R3 
    /*0000c330*/ MOV         R0, R8 
    /*0000c334*/ BL          0x000000000000C334          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000c338*/ CMP         R0, #0 
    /*0000c33c*/ BNE         VI_GetChnLowDealyAttr_xc3a4
    /*0000c340*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000c344*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000c348*/ LDR         R3, [R3, R7, LSL #2] 
    /*0000c34c*/ CMP         R3, #0 
    /*0000c350*/ BEQ         VI_GetChnLowDealyAttr_xc3b0
    /*0000c354*/ MOV         R2, R6 
    /*0000c358*/ MOV         R1, R5 
    /*0000c35c*/ MOV         R0, R7 
    /*0000c360*/ BL          0x000000000000C360          @ VI_DRV_GetChnLowDelayAttr [R_ARM_CALL: .text+0x2a81c] 
    /*0000c364*/ MOV         R4, R0 
    /*0000c368*/ MOV         R0, R8 
    /*0000c36c*/ BL          0x000000000000C36C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c370*/ B           VI_GetChnLowDealyAttr_xc2e8
    VI_GetChnLowDealyAttr_xc374:
    /*0000c374*/ MOV         R3, #94                     @ 0x5e 
    /*0000c378*/ STR         R5, [SP, #4] 
    /*0000c37c*/ STR         R3, [SP] 
    /*0000c380*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c7c] 
    /*0000c384*/ LDR         R3, [PC, #96]               @ 0x000000000000c3ec 
    /*0000c388*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c7c] 
    /*0000c38c*/ MOV         R1, #16 
    /*0000c390*/ MOV         R0, #3 
    /*0000c394*/ MOVW        R4, #32776                  @ 0x8008 
    /*0000c398*/ BL          0x000000000000C398          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c39c*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000c3a0*/ B           VI_GetChnLowDealyAttr_xc2e8
    VI_GetChnLowDealyAttr_xc3a4:
    /*0000c3a4*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000c3a8*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000c3ac*/ B           VI_GetChnLowDealyAttr_xc2e8
    VI_GetChnLowDealyAttr_xc3b0:
    /*0000c3b0*/ MOV         R3, #102                    @ 0x66 
    /*0000c3b4*/ MOV         R1, #16 
    /*0000c3b8*/ STR         R3, [SP] 
    /*0000c3bc*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2cb0] 
    /*0000c3c0*/ LDR         R3, [PC, #36]               @ 0x000000000000c3ec 
    /*0000c3c4*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2cb0] 
    /*0000c3c8*/ STR         R7, [SP, #4] 
    /*0000c3cc*/ MOV         R0, #3 
    /*0000c3d0*/ BL          0x000000000000C3D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c3d4*/ MOV         R0, R8 
    /*0000c3d8*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000c3dc*/ BL          0x000000000000C3DC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c3e0*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000c3e4*/ B           VI_GetChnLowDealyAttr_xc2e8
    /*0000c3e8*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0000c3ec*/ ANDEQ       R0, R0, IP, LSL R8 
FUNC_END VI_GetChnLowDealyAttr


FUNC_BEGIN VI_MallocRegionLumaBuffer
    /*0000c3f0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000c3f4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000c3f8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000c3fc*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0000c400*/ LDR         R8, [R3, R0, LSL #2] 
    /*0000c404*/ MOV         R3, #0 
    /*0000c408*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000c40c*/ ADD         R6, R8, #32768              @ 0x8000 
    /*0000c410*/ STR         R3, [SP, #12] 
    /*0000c414*/ ADD         R7, R6, #3312               @ 0xcf0 
    /*0000c418*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000c41c*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000c420*/ LDRD        R4, [R7] 
    /*0000c424*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000c428*/ ORRS        R2, R4, R5 
    /*0000c42c*/ MOVNE       R4, R3 
    /*0000c430*/ BEQ         VI_MallocRegionLumaBuffer_xc440
    VI_MallocRegionLumaBuffer_xc434:
    /*0000c434*/ MOV         R0, R4 
    /*0000c438*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000c43c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_MallocRegionLumaBuffer_xc440:
    /*0000c440*/ MOV         R4, R0 
    /*0000c444*/ MOV         R0, #2 
    /*0000c448*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000c44c*/ MOV         R5, #16 
    /*0000c450*/ STR         R4, [SP, #32] 
    /*0000c454*/ STR         R5, [SP, #28] 
    /*0000c458*/ BL          0x000000000000C458          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c45c*/ ADD         R1, SP, #12 
    /*0000c460*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0000c464*/ ADD         R0, SP, #28 
    /*0000c468*/ BLX         R3 
    /*0000c46c*/ SUBS        R9, R0, #0 
    /*0000c470*/ BNE         VI_MallocRegionLumaBuffer_xc4e4
    /*0000c474*/ MOV         R1, R5 
    /*0000c478*/ STR         R4, [SP] 
    /*0000c47c*/ MOVW        R3, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d50] 
    /*0000c480*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d54] 
    /*0000c484*/ MOVT        R3, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d50] 
    /*0000c488*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d54] 
    /*0000c48c*/ ADD         R0, SP, #40                 @ 0x28 
    /*0000c490*/ MOV         R5, #512                    @ 0x200 
    /*0000c494*/ BL          0x000000000000C494          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*0000c498*/ ADD         R3, R8, #35840              @ 0x8c00 
    /*0000c49c*/ LDR         R0, [SP, #12] 
    /*0000c4a0*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000c4a4*/ ADD         R3, R3, #248                @ 0xf8 
    /*0000c4a8*/ STR         R5, [SP] 
    /*0000c4ac*/ ADD         R2, SP, #16 
    /*0000c4b0*/ BL          0x000000000000C4B0          @ CMPI_MmzMallocNocache [R_ARM_CALL: +0x0] 
    /*0000c4b4*/ CMN         R0, #1 
    /*0000c4b8*/ MOV         R4, R0 
    /*0000c4bc*/ BEQ         VI_MallocRegionLumaBuffer_xc514
    /*0000c4c0*/ LDRD        SL, [SP, #16] 
    /*0000c4c4*/ MOV         R2, R5 
    /*0000c4c8*/ MOV         R1, R9 
    /*0000c4cc*/ STRD        SL, [R7] 
    /*0000c4d0*/ LDR         R0, [R6, #3320]             @ 0xcf8 
    /*0000c4d4*/ BL          0x000000000000C4D4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000c4d8*/ MOV         R0, R4 
    /*0000c4dc*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000c4e0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_MallocRegionLumaBuffer_xc4e4:
    /*0000c4e4*/ MOV         R2, #57                     @ 0x39 
    /*0000c4e8*/ MOV         R1, R5 
    /*0000c4ec*/ STR         R2, [SP] 
    /*0000c4f0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x834] 
    /*0000c4f4*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d20] 
    /*0000c4f8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x834] 
    /*0000c4fc*/ MOV         R0, #3 
    /*0000c500*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d20] 
    /*0000c504*/ MOVW        R4, #32784                  @ 0x8010 
    /*0000c508*/ BL          0x000000000000C508          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c50c*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000c510*/ B           VI_MallocRegionLumaBuffer_xc434
    VI_MallocRegionLumaBuffer_xc514:
    /*0000c514*/ MOVW        R4, #32784                  @ 0x8010 
    /*0000c518*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000c51c*/ B           VI_MallocRegionLumaBuffer_xc434
FUNC_END VI_MallocRegionLumaBuffer


FUNC_BEGIN VI_FreeRegionLumaBuffer
    /*0000c520*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000c524*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000c528*/ PUSH        {R4, R5, R6, LR} 
    /*0000c52c*/ LDR         R4, [R3, R0, LSL #2] 
    /*0000c530*/ ADD         R4, R4, #32768              @ 0x8000 
    /*0000c534*/ ADD         R5, R4, #3312               @ 0xcf0 
    /*0000c538*/ LDRD        R0, [R5] 
    /*0000c53c*/ ORRS        R3, R0, R1 
    /*0000c540*/ BEQ         VI_FreeRegionLumaBuffer_xc560
    /*0000c544*/ LDR         R2, [R4, #3320]             @ 0xcf8 
    /*0000c548*/ BL          0x000000000000C548          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*0000c54c*/ MOV         R0, #0 
    /*0000c550*/ MOV         R1, #0 
    /*0000c554*/ MOV         R3, #0 
    /*0000c558*/ STRD        R0, [R5] 
    /*0000c55c*/ STR         R3, [R4, #3320]             @ 0xcf8 
    VI_FreeRegionLumaBuffer_xc560:
    /*0000c560*/ MOV         R0, #0 
    /*0000c564*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_FreeRegionLumaBuffer


FUNC_BEGIN VI_CheckRegionLumaAttr
    /*0000c568*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000c56c*/ MOV         R5, R2 
    /*0000c570*/ LDR         R2, [R2] 
    /*0000c574*/ SUB         SP, SP, #72                 @ 0x48 
    /*0000c578*/ MOV         R6, R0 
    /*0000c57c*/ MOV         R7, R1 
    /*0000c580*/ CMP         R2, #32 
    /*0000c584*/ BHI         VI_CheckRegionLumaAttr_xc6ec
    /*0000c588*/ LSLS        R4, R2, #4 
    /*0000c58c*/ BNE         VI_CheckRegionLumaAttr_xc5c4
    VI_CheckRegionLumaAttr_xc590:
    /*0000c590*/ MOV         R3, #112                    @ 0x70 
    /*0000c594*/ STR         R6, [SP, #4] 
    /*0000c598*/ STR         R3, [SP] 
    /*0000c59c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e4c] 
    /*0000c5a0*/ LDR         R3, [PC, #416]              @ 0x000000000000c748 
    /*0000c5a4*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e4c] 
    /*0000c5a8*/ MOV         R1, #16 
    /*0000c5ac*/ MOV         R0, #3 
    /*0000c5b0*/ BL          0x000000000000C5B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c5b4*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000c5b8*/ MOVT        R0, #40976                  @ 0xa010 
    VI_CheckRegionLumaAttr_xc5bc:
    /*0000c5bc*/ ADD         SP, SP, #72                 @ 0x48 
    /*0000c5c0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_CheckRegionLumaAttr_xc5c4:
    /*0000c5c4*/ LDR         R8, [R5, #4] 
    /*0000c5c8*/ MOV         R2, R4 
    /*0000c5cc*/ MOV         R0, #0 
    /*0000c5d0*/ MOV         R1, R8 
    /*0000c5d4*/ BL          0x000000000000C5D4          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*0000c5d8*/ CMP         R0, #0 
    /*0000c5dc*/ BEQ         VI_CheckRegionLumaAttr_xc590
    /*0000c5e0*/ SUB         R1, R4, #1 
    /*0000c5e4*/ MOV         R2, #1 
    /*0000c5e8*/ ADD         R1, R8, R1 
    /*0000c5ec*/ ADD         R0, SP, #28 
    /*0000c5f0*/ BL          0x000000000000C5F0          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0000c5f4*/ CMP         R0, #0 
    /*0000c5f8*/ BNE         VI_CheckRegionLumaAttr_xc590
    /*0000c5fc*/ LDR         R8, [R5, #12] 
    /*0000c600*/ CMP         R8, #0 
    /*0000c604*/ BEQ         VI_CheckRegionLumaAttr_xc66c
    /*0000c608*/ LDR         R2, [R5] 
    /*0000c60c*/ STRB        R0, [SP, #28] 
    /*0000c610*/ LSLS        R4, R2, #3 
    /*0000c614*/ BNE         VI_CheckRegionLumaAttr_xc6cc
    VI_CheckRegionLumaAttr_xc618:
    /*0000c618*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e94] 
    /*0000c61c*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e94] 
    /*0000c620*/ MOV         R3, #120                    @ 0x78 
    /*0000c624*/ STR         R8, [SP, #12] 
    /*0000c628*/ STR         R7, [SP, #8] 
    /*0000c62c*/ STR         R6, [SP, #4] 
    VI_CheckRegionLumaAttr_xc630:
    /*0000c630*/ STR         R3, [SP] 
    /*0000c634*/ MOV         R1, #16 
    /*0000c638*/ LDR         R3, [PC, #264]              @ 0x000000000000c748 
    /*0000c63c*/ MOV         R0, #3 
    /*0000c640*/ BL          0x000000000000C640          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c644*/ MVN         R0, #0 
    /*0000c648*/ ADD         SP, SP, #72                 @ 0x48 
    /*0000c64c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_CheckRegionLumaAttr_xc650:
    /*0000c650*/ SUB         R0, R4, #1 
    /*0000c654*/ MOV         R2, #1 
    /*0000c658*/ ADD         R0, R8, R0 
    /*0000c65c*/ ADD         R1, SP, #28 
    /*0000c660*/ BL          0x000000000000C660          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0000c664*/ CMP         R0, #0 
    /*0000c668*/ BNE         VI_CheckRegionLumaAttr_xc6e4
    VI_CheckRegionLumaAttr_xc66c:
    /*0000c66c*/ LDR         R3, [R5, #8] 
    /*0000c670*/ CMN         R3, #1 
    /*0000c674*/ BLT         VI_CheckRegionLumaAttr_xc72c
    /*0000c678*/ ADD         R2, SP, #28 
    /*0000c67c*/ MOV         R1, R7 
    /*0000c680*/ MOV         R0, R6 
    /*0000c684*/ BL          0x000000000000C684          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*0000c688*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000c68c*/ CMP         R0, #0 
    /*0000c690*/ BEQ         VI_CheckRegionLumaAttr_xc5bc
    /*0000c694*/ STR         R0, [SP, #12] 
    /*0000c698*/ MOV         R3, #134                    @ 0x86 
    /*0000c69c*/ STR         R7, [SP, #8] 
    /*0000c6a0*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2df8] 
    /*0000c6a4*/ STR         R3, [SP] 
    /*0000c6a8*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2df8] 
    /*0000c6ac*/ STR         R6, [SP, #4] 
    /*0000c6b0*/ MOV         R1, #16 
    /*0000c6b4*/ LDR         R3, [PC, #140]              @ 0x000000000000c748 
    /*0000c6b8*/ MOV         R0, #3 
    /*0000c6bc*/ BL          0x000000000000C6BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c6c0*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000c6c4*/ MOVT        R0, #40976                  @ 0xa010 
    /*0000c6c8*/ B           VI_CheckRegionLumaAttr_xc5bc
    VI_CheckRegionLumaAttr_xc6cc:
    /*0000c6cc*/ MOV         R2, R4 
    /*0000c6d0*/ MOV         R1, R8 
    /*0000c6d4*/ MOV         R0, #1 
    /*0000c6d8*/ BL          0x000000000000C6D8          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*0000c6dc*/ CMP         R0, #0 
    /*0000c6e0*/ BNE         VI_CheckRegionLumaAttr_xc650
    VI_CheckRegionLumaAttr_xc6e4:
    /*0000c6e4*/ LDR         R8, [R5, #12] 
    /*0000c6e8*/ B           VI_CheckRegionLumaAttr_xc618
    VI_CheckRegionLumaAttr_xc6ec:
    /*0000c6ec*/ STR         R2, [SP, #12] 
    /*0000c6f0*/ MOV         R1, #32 
    /*0000c6f4*/ MOV         R3, #106                    @ 0x6a 
    /*0000c6f8*/ STR         R0, [SP, #4] 
    /*0000c6fc*/ STR         R1, [SP, #16] 
    /*0000c700*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d64] 
    /*0000c704*/ STR         R3, [SP] 
    /*0000c708*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d64] 
    /*0000c70c*/ STR         R7, [SP, #8] 
    /*0000c710*/ MOV         R1, #16 
    /*0000c714*/ LDR         R3, [PC, #44]               @ 0x000000000000c748 
    /*0000c718*/ MOV         R0, #3 
    /*0000c71c*/ BL          0x000000000000C71C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c720*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000c724*/ MOVT        R0, #40976                  @ 0xa010 
    /*0000c728*/ B           VI_CheckRegionLumaAttr_xc5bc
    VI_CheckRegionLumaAttr_xc72c:
    /*0000c72c*/ STR         R3, [SP, #12] 
    /*0000c730*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2db8] 
    /*0000c734*/ MOV         R3, #126                    @ 0x7e 
    /*0000c738*/ STR         R7, [SP, #8] 
    /*0000c73c*/ STR         R6, [SP, #4] 
    /*0000c740*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2db8] 
    /*0000c744*/ B           VI_CheckRegionLumaAttr_xc630
    /*0000c748*/ ANDEQ       R0, R0, R0, ASR R8 
FUNC_END VI_CheckRegionLumaAttr


FUNC_BEGIN VI_CheckRegionInfo
    /*0000c74c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000c750*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0000c754*/ MOV         R9, R3 
    /*0000c758*/ MOV         R6, R0 
    /*0000c75c*/ MOV         R7, R1 
    /*0000c760*/ MOV         R4, R2 
    /*0000c764*/ BL          0x000000000000C764          @ VI_DRV_GetChnMaxWidth [R_ARM_CALL: .text+0x25f04] 
    /*0000c768*/ MOV         R1, R7 
    /*0000c76c*/ MOV         R8, R0 
    /*0000c770*/ MOV         R0, R6 
    /*0000c774*/ BL          0x000000000000C774          @ VI_DRV_GetChnMaxHeight [R_ARM_CALL: .text+0x25fcc] 
    /*0000c778*/ CMP         R9, #0 
    /*0000c77c*/ BEQ         VI_CheckRegionInfo_xc8e4
    /*0000c780*/ LDM         R4, {R5, SL} 
    /*0000c784*/ CMP         R5, #0 
    /*0000c788*/ BLT         VI_CheckRegionInfo_xc8ec
    /*0000c78c*/ CMP         SL, #0 
    /*0000c790*/ LDR         IP, [R4, #12] 
    /*0000c794*/ MOVLT       R3, #0 
    /*0000c798*/ LDRLT       LR, [R4, #8] 
    /*0000c79c*/ BLT         VI_CheckRegionInfo_xc838
    /*0000c7a0*/ CMP         IP, #0 
    /*0000c7a4*/ LDREQ       LR, [R4, #8] 
    /*0000c7a8*/ MOVEQ       R3, IP 
    /*0000c7ac*/ BEQ         VI_CheckRegionInfo_xc838
    /*0000c7b0*/ MOV         R2, R4 
    /*0000c7b4*/ MOV         R3, #0 
    /*0000c7b8*/ B           VI_CheckRegionInfo_xc800
    VI_CheckRegionInfo_xc7bc:
    /*0000c7bc*/ TST         FP, #1 
    /*0000c7c0*/ ADD         R2, R2, #16 
    /*0000c7c4*/ BNE         VI_CheckRegionInfo_xc880
    /*0000c7c8*/ ANDS        R4, R4, #1 
    /*0000c7cc*/ BNE         VI_CheckRegionInfo_xc880
    /*0000c7d0*/ ADD         R3, R3, #1 
    /*0000c7d4*/ CMP         R9, R3 
    /*0000c7d8*/ BEQ         VI_CheckRegionInfo_xc8cc
    /*0000c7dc*/ LDR         R5, [R1, #16] 
    /*0000c7e0*/ CMP         R5, #0 
    /*0000c7e4*/ BLT         VI_CheckRegionInfo_xc8d4
    /*0000c7e8*/ LDR         SL, [R1, #20] 
    /*0000c7ec*/ LDR         IP, [R2, #12] 
    /*0000c7f0*/ CMP         SL, #0 
    /*0000c7f4*/ BLT         VI_CheckRegionInfo_xc8c4
    /*0000c7f8*/ CMP         IP, #0 
    /*0000c7fc*/ BEQ         VI_CheckRegionInfo_xc8c4
    VI_CheckRegionInfo_xc800:
    /*0000c800*/ LDR         LR, [R2, #8] 
    /*0000c804*/ ORR         FP, R5, SL 
    /*0000c808*/ CLZ         R1, LR 
    /*0000c80c*/ ORR         R4, LR, IP 
    /*0000c810*/ LSR         R1, R1, #5 
    /*0000c814*/ CMP         R8, LR 
    /*0000c818*/ ORRCC       R1, R1, #1 
    /*0000c81c*/ CMP         R0, IP 
    /*0000c820*/ ORRCC       R1, R1, #1 
    /*0000c824*/ CMP         R1, #0 
    /*0000c828*/ MOV         R1, R2 
    /*0000c82c*/ BEQ         VI_CheckRegionInfo_xc7bc
    /*0000c830*/ LDR         SL, [R2, #4] 
    /*0000c834*/ LDR         IP, [R2, #12] 
    VI_CheckRegionInfo_xc838:
    /*0000c838*/ STR         R0, [SP, #36]               @ 0x24 
    /*0000c83c*/ MOV         R4, #161                    @ 0xa1 
    /*0000c840*/ STR         R3, [SP, #12] 
    /*0000c844*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ee8] 
    /*0000c848*/ STR         R8, [SP, #32] 
    /*0000c84c*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ee8] 
    /*0000c850*/ STR         LR, [SP, #28] 
    /*0000c854*/ MOV         R1, #16 
    /*0000c858*/ STR         IP, [SP, #24] 
    /*0000c85c*/ MOV         R0, #3 
    /*0000c860*/ STR         SL, [SP, #20] 
    /*0000c864*/ STR         R5, [SP, #16] 
    /*0000c868*/ STM         SP, {R4, R6, R7} 
    /*0000c86c*/ LDR         R3, [PC, #136]              @ 0x000000000000c8fc 
    /*0000c870*/ BL          0x000000000000C870          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c874*/ MVN         R0, #0 
    VI_CheckRegionInfo_xc878:
    /*0000c878*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0000c87c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_CheckRegionInfo_xc880:
    /*0000c880*/ STR         LR, [SP, #28] 
    /*0000c884*/ MOV         R1, #16 
    /*0000c888*/ MOV         LR, #172                    @ 0xac 
    /*0000c88c*/ STR         R3, [SP, #12] 
    /*0000c890*/ STR         IP, [SP, #24] 
    /*0000c894*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f58] 
    /*0000c898*/ STR         SL, [SP, #20] 
    /*0000c89c*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f58] 
    /*0000c8a0*/ STR         R5, [SP, #16] 
    /*0000c8a4*/ MOV         R0, #3 
    /*0000c8a8*/ STMIB       SP, {R6, R7} 
    /*0000c8ac*/ STR         LR, [SP] 
    /*0000c8b0*/ LDR         R3, [PC, #68]               @ 0x000000000000c8fc 
    /*0000c8b4*/ BL          0x000000000000C8B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c8b8*/ MVN         R0, #0 
    /*0000c8bc*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0000c8c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_CheckRegionInfo_xc8c4:
    /*0000c8c4*/ LDR         LR, [R2, #8] 
    /*0000c8c8*/ B           VI_CheckRegionInfo_xc838
    VI_CheckRegionInfo_xc8cc:
    /*0000c8cc*/ MOV         R0, R4 
    /*0000c8d0*/ B           VI_CheckRegionInfo_xc878
    VI_CheckRegionInfo_xc8d4:
    /*0000c8d4*/ LDR         SL, [R2, #4] 
    /*0000c8d8*/ LDR         IP, [R2, #12] 
    /*0000c8dc*/ LDR         LR, [R2, #8] 
    /*0000c8e0*/ B           VI_CheckRegionInfo_xc838
    VI_CheckRegionInfo_xc8e4:
    /*0000c8e4*/ MOV         R0, R9 
    /*0000c8e8*/ B           VI_CheckRegionInfo_xc878
    VI_CheckRegionInfo_xc8ec:
    /*0000c8ec*/ MOV         R3, #0 
    /*0000c8f0*/ LDR         IP, [R4, #12] 
    /*0000c8f4*/ LDR         LR, [R4, #8] 
    /*0000c8f8*/ B           VI_CheckRegionInfo_xc838
    /*0000c8fc*/ ANDEQ       R0, R0, R8, ROR #16 
FUNC_END VI_CheckRegionInfo


FUNC_BEGIN VI_GetRegionLumaTimeout
    /*0000c900*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000c904*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000c908*/ MOV         R5, R1 
    /*0000c90c*/ MOV         R6, R2 
    /*0000c910*/ MOV         R7, R0 
    /*0000c914*/ BL          0x000000000000C914          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0000c918*/ SUBS        R4, R0, #0 
    /*0000c91c*/ BEQ         VI_GetRegionLumaTimeout_xc92c
    VI_GetRegionLumaTimeout_xc920:
    /*0000c920*/ MOV         R0, R4 
    /*0000c924*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000c928*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_GetRegionLumaTimeout_xc92c:
    /*0000c92c*/ MOV         R0, R5 
    /*0000c930*/ BL          0x000000000000C930          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*0000c934*/ SUBS        R4, R0, #0 
    /*0000c938*/ BNE         VI_GetRegionLumaTimeout_xc920
    /*0000c93c*/ MOV         R0, R5 
    /*0000c940*/ BL          0x000000000000C940          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*0000c944*/ CMP         R0, #0 
    /*0000c948*/ BNE         VI_GetRegionLumaTimeout_xca3c
    /*0000c94c*/ MOV         R0, R6 
    /*0000c950*/ BL          0x000000000000C950          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000c954*/ SUBS        R4, R0, #0 
    /*0000c958*/ BNE         VI_GetRegionLumaTimeout_xc920
    /*0000c95c*/ LDR         R0, [R6, #4] 
    /*0000c960*/ BL          0x000000000000C960          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000c964*/ SUBS        R4, R0, #0 
    /*0000c968*/ BNE         VI_GetRegionLumaTimeout_xc920
    /*0000c96c*/ LDR         R0, [R6, #12] 
    /*0000c970*/ BL          0x000000000000C970          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0000c974*/ SUBS        R4, R0, #0 
    /*0000c978*/ BNE         VI_GetRegionLumaTimeout_xc920
    /*0000c97c*/ MOV         R9, #176                    @ 0xb0 
    /*0000c980*/ MOVW        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0000c984*/ MUL         R9, R9, R7 
    /*0000c988*/ MOVT        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0000c98c*/ ADD         R3, R9, #96                 @ 0x60 
    /*0000c990*/ ADD         R3, R8, R3 
    /*0000c994*/ STR         R3, [SP, #16] 
    /*0000c998*/ MOV         R0, R3 
    /*0000c99c*/ BL          0x000000000000C99C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000c9a0*/ CMP         R0, #0 
    /*0000c9a4*/ BNE         VI_GetRegionLumaTimeout_xcad8
    /*0000c9a8*/ ADD         SL, R9, #100                @ 0x64 
    /*0000c9ac*/ ADD         SL, R8, SL 
    /*0000c9b0*/ MOV         R0, SL 
    /*0000c9b4*/ BL          0x000000000000C9B4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000c9b8*/ SUBS        R3, R0, #0 
    /*0000c9bc*/ STR         R3, [SP, #20] 
    /*0000c9c0*/ BNE         VI_GetRegionLumaTimeout_xcad8
    /*0000c9c4*/ MOVW        FP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000c9c8*/ MOVT        FP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000c9cc*/ LDR         R3, [FP, R7, LSL #2] 
    /*0000c9d0*/ CMP         R3, #0 
    /*0000c9d4*/ BEQ         VI_GetRegionLumaTimeout_xcaf8
    /*0000c9d8*/ LDR         R3, [R8, R9] 
    /*0000c9dc*/ CMP         R3, #0 
    /*0000c9e0*/ BNE         VI_GetRegionLumaTimeout_xc9fc
    /*0000c9e4*/ MOV         R3, #176                    @ 0xb0 
    /*0000c9e8*/ MLA         R3, R3, R7, R8 
    /*0000c9ec*/ STR         R3, [SP, #28] 
    /*0000c9f0*/ LDR         R3, [R3, #4] 
    /*0000c9f4*/ CMP         R3, #0 
    /*0000c9f8*/ BEQ         VI_GetRegionLumaTimeout_xca6c
    VI_GetRegionLumaTimeout_xc9fc:
    /*0000c9fc*/ MOV         R0, SL 
    /*0000ca00*/ MOVW        R4, #32784                  @ 0x8010 
    /*0000ca04*/ BL          0x000000000000CA04          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ca08*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3034] 
    /*0000ca0c*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3034] 
    /*0000ca10*/ MOV         R3, #217                    @ 0xd9 
    /*0000ca14*/ STR         R7, [SP, #4] 
    /*0000ca18*/ STR         R3, [SP] 
    VI_GetRegionLumaTimeout_xca1c:
    /*0000ca1c*/ LDR         R3, [PC, #1144]             @ 0x000000000000ce9c 
    /*0000ca20*/ MOV         R1, #16 
    /*0000ca24*/ MOV         R0, #3 
    /*0000ca28*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000ca2c*/ BL          0x000000000000CA2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_GetRegionLumaTimeout_xca30:
    /*0000ca30*/ LDR         R0, [SP, #16] 
    /*0000ca34*/ BL          0x000000000000CA34          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ca38*/ B           VI_GetRegionLumaTimeout_xc920
    VI_GetRegionLumaTimeout_xca3c:
    /*0000ca3c*/ MOV         R3, #196                    @ 0xc4 
    /*0000ca40*/ STR         R5, [SP, #4] 
    /*0000ca44*/ STR         R3, [SP] 
    /*0000ca48*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2fd0] 
    /*0000ca4c*/ LDR         R3, [PC, #1096]             @ 0x000000000000ce9c 
    /*0000ca50*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2fd0] 
    /*0000ca54*/ MOV         R1, #16 
    /*0000ca58*/ MOV         R0, #3 
    /*0000ca5c*/ MOVW        R4, #32776                  @ 0x8008 
    /*0000ca60*/ BL          0x000000000000CA60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ca64*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000ca68*/ B           VI_GetRegionLumaTimeout_xc920
    VI_GetRegionLumaTimeout_xca6c:
    /*0000ca6c*/ MOV         R2, R6 
    /*0000ca70*/ MOV         R1, R5 
    /*0000ca74*/ MOV         R0, R7 
    /*0000ca78*/ BL          0x000000000000CA78          @ VI_CheckRegionLumaAttr [R_ARM_CALL: .text+0xc568] 
    /*0000ca7c*/ CMP         R0, #0 
    /*0000ca80*/ BNE         VI_GetRegionLumaTimeout_xcae4
    /*0000ca84*/ LDR         R2, [R6] 
    /*0000ca88*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1090] 
    /*0000ca8c*/ LDR         R1, [R6, #4] 
    /*0000ca90*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1090] 
    /*0000ca94*/ LSL         R2, R2, #4 
    /*0000ca98*/ BL          0x000000000000CA98          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0000ca9c*/ CMP         R0, #0 
    /*0000caa0*/ BEQ         VI_GetRegionLumaTimeout_xcb1c
    /*0000caa4*/ MOV         R0, SL 
    /*0000caa8*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000caac*/ BL          0x000000000000CAAC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000cab0*/ MOV         R3, #237                    @ 0xed 
    /*0000cab4*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3074] 
    /*0000cab8*/ STR         R3, [SP] 
    /*0000cabc*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3074] 
    /*0000cac0*/ LDR         R3, [PC, #980]              @ 0x000000000000ce9c 
    /*0000cac4*/ MOV         R1, #16 
    /*0000cac8*/ MOV         R0, #3 
    /*0000cacc*/ BL          0x000000000000CACC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cad0*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000cad4*/ B           VI_GetRegionLumaTimeout_xca30
    VI_GetRegionLumaTimeout_xcad8:
    /*0000cad8*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000cadc*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000cae0*/ B           VI_GetRegionLumaTimeout_xc920
    VI_GetRegionLumaTimeout_xcae4:
    /*0000cae4*/ MOV         R0, SL 
    /*0000cae8*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000caec*/ BL          0x000000000000CAEC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000caf0*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000caf4*/ B           VI_GetRegionLumaTimeout_xca30
    VI_GetRegionLumaTimeout_xcaf8:
    /*0000caf8*/ MOV         R0, SL 
    /*0000cafc*/ MOVW        R4, #32773                  @ 0x8005 
    /*0000cb00*/ BL          0x000000000000CB00          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000cb04*/ MOV         R3, #209                    @ 0xd1 
    /*0000cb08*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3004] 
    /*0000cb0c*/ STR         R7, [SP, #4] 
    /*0000cb10*/ STR         R3, [SP] 
    /*0000cb14*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3004] 
    /*0000cb18*/ B           VI_GetRegionLumaTimeout_xca1c
    VI_GetRegionLumaTimeout_xcb1c:
    /*0000cb1c*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1090] 
    /*0000cb20*/ LDR         R3, [R6] 
    /*0000cb24*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1090] 
    /*0000cb28*/ MOV         R1, R5 
    /*0000cb2c*/ MOV         R0, R7 
    /*0000cb30*/ BL          0x000000000000CB30          @ VI_CheckRegionInfo [R_ARM_CALL: .text+0xc74c] 
    /*0000cb34*/ CMP         R0, #0 
    /*0000cb38*/ BNE         VI_GetRegionLumaTimeout_xcae4
    /*0000cb3c*/ ADD         R2, R5, #9536               @ 0x2540 
    /*0000cb40*/ LDR         R3, [FP, R7, LSL #2] 
    /*0000cb44*/ ADD         R2, R2, #50                 @ 0x32 
    /*0000cb48*/ ADD         R3, R3, R2, LSL #2 
    /*0000cb4c*/ LDR         R3, [R3, #4] 
    /*0000cb50*/ CMP         R3, #0 
    /*0000cb54*/ BNE         VI_GetRegionLumaTimeout_xcb94
    /*0000cb58*/ MOV         R0, SL 
    /*0000cb5c*/ MOVW        R4, #32777                  @ 0x8009 
    /*0000cb60*/ BL          0x000000000000CB60          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000cb64*/ MOV         R3, #254                    @ 0xfe 
    /*0000cb68*/ STR         R5, [SP, #8] 
    /*0000cb6c*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30bc] 
    /*0000cb70*/ STR         R3, [SP] 
    /*0000cb74*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30bc] 
    /*0000cb78*/ STR         R7, [SP, #4] 
    /*0000cb7c*/ MOV         R1, #16 
    /*0000cb80*/ LDR         R3, [PC, #788]              @ 0x000000000000ce9c 
    /*0000cb84*/ MOV         R0, #3 
    /*0000cb88*/ BL          0x000000000000CB88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cb8c*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000cb90*/ B           VI_GetRegionLumaTimeout_xca30
    VI_GetRegionLumaTimeout_xcb94:
    /*0000cb94*/ MOV         R0, R7 
    /*0000cb98*/ BL          0x000000000000CB98          @ VI_MallocRegionLumaBuffer [R_ARM_CALL: .text+0xc3f0] 
    /*0000cb9c*/ SUBS        R4, R0, #0 
    /*0000cba0*/ BEQ         VI_GetRegionLumaTimeout_xcbb0
    /*0000cba4*/ MOV         R0, SL 
    /*0000cba8*/ BL          0x000000000000CBA8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000cbac*/ B           VI_GetRegionLumaTimeout_xca30
    VI_GetRegionLumaTimeout_xcbb0:
    /*0000cbb0*/ ADD         R3, R9, #140                @ 0x8c 
    /*0000cbb4*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000cbb8*/ ADD         R3, R8, R3 
    /*0000cbbc*/ STR         R3, [SP, #24] 
    /*0000cbc0*/ MOV         R0, R3 
    /*0000cbc4*/ BL          0x000000000000CBC4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000cbc8*/ LDR         R0, [FP, R7, LSL #2] 
    /*0000cbcc*/ MOV         R3, #44                     @ 0x2c 
    /*0000cbd0*/ LDR         R2, [R6, #12] 
    /*0000cbd4*/ MLA         R3, R3, R7, R5 
    /*0000cbd8*/ ADD         FP, R0, #32768              @ 0x8000 
    /*0000cbdc*/ ADD         R0, R0, #35328              @ 0x8a00 
    /*0000cbe0*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1090] 
    /*0000cbe4*/ STR         R2, [FP, #3300]             @ 0xce4 
    /*0000cbe8*/ MOV         R2, #1 
    /*0000cbec*/ STR         R5, [FP, #3308]             @ 0xcec 
    /*0000cbf0*/ ADD         R3, R3, #38                 @ 0x26 
    /*0000cbf4*/ STR         R2, [FP, #3304]             @ 0xce8 
    /*0000cbf8*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1090] 
    /*0000cbfc*/ LDR         R2, [R6] 
    /*0000cc00*/ ADD         R0, R0, #224                @ 0xe0 
    /*0000cc04*/ STR         R4, [R8, R3, LSL #2] 
    /*0000cc08*/ STR         R2, [FP, #3296]             @ 0xce0 
    /*0000cc0c*/ LSL         R2, R2, #4 
    /*0000cc10*/ BL          0x000000000000CC10          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000cc14*/ LDR         R2, [SP, #28] 
    /*0000cc18*/ LDR         R0, [SP, #24] 
    /*0000cc1c*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000cc20*/ MOV         R3, #1 
    /*0000cc24*/ STR         R4, [SP, #56]               @ 0x38 
    /*0000cc28*/ LDR         R2, [R2, #24] 
    /*0000cc2c*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0000cc30*/ STR         R7, [SP, #44]               @ 0x2c 
    /*0000cc34*/ STR         R2, [SP, #32] 
    /*0000cc38*/ STR         R2, [SP, #52]               @ 0x34 
    /*0000cc3c*/ STR         R5, [SP, #48]               @ 0x30 
    /*0000cc40*/ BL          0x000000000000CC40          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000cc44*/ MOV         R0, SL 
    /*0000cc48*/ BL          0x000000000000CC48          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000cc4c*/ LDR         R4, [R6, #8] 
    /*0000cc50*/ CMP         R4, #0 
    /*0000cc54*/ BGT         VI_GetRegionLumaTimeout_xcd1c
    /*0000cc58*/ ADD         R9, R9, #80                 @ 0x50 
    /*0000cc5c*/ MOVW        R4, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x419c] 
    /*0000cc60*/ ADD         R3, SP, #44                 @ 0x2c 
    /*0000cc64*/ ADD         R9, R8, R9 
    /*0000cc68*/ MOVT        R4, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x419c] 
    /*0000cc6c*/ STR         R3, [SP, #28] 
    /*0000cc70*/ B           VI_GetRegionLumaTimeout_xcc80
    VI_GetRegionLumaTimeout_xcc74:
    /*0000cc74*/ BL          0x000000000000CC74          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0000cc78*/ CMP         R0, #0 
    /*0000cc7c*/ BLT         VI_GetRegionLumaTimeout_xcde0
    VI_GetRegionLumaTimeout_xcc80:
    /*0000cc80*/ LDR         R0, [SP, #28] 
    /*0000cc84*/ BL          0x000000000000CC84          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0000cc88*/ MOV         R3, #100                    @ 0x64 
    /*0000cc8c*/ LDR         R2, [SP, #28] 
    /*0000cc90*/ MOV         R1, R4 
    /*0000cc94*/ CMP         R0, #0 
    /*0000cc98*/ MOV         R0, R9 
    /*0000cc9c*/ BEQ         VI_GetRegionLumaTimeout_xcc74
    /*0000cca0*/ LDR         R3, [SP, #56]               @ 0x38 
    VI_GetRegionLumaTimeout_xcca4:
    /*0000cca4*/ CMP         R3, #0 
    /*0000cca8*/ BEQ         VI_GetRegionLumaTimeout_xce88
    /*0000ccac*/ MOV         R0, SL 
    /*0000ccb0*/ BL          0x000000000000CCB0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000ccb4*/ CMP         R0, #0 
    /*0000ccb8*/ BNE         VI_GetRegionLumaTimeout_xcad8
    /*0000ccbc*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000ccc0*/ LDR         R0, [SP, #24] 
    /*0000ccc4*/ BL          0x000000000000CCC4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000ccc8*/ LDR         R1, [SP, #32] 
    /*0000cccc*/ MOV         R0, R7 
    /*0000ccd0*/ BL          0x000000000000CCD0          @ VI_AbnormalVerifyAfterWait [R_ARM_CALL: .text+0x4208] 
    /*0000ccd4*/ SUBS        R4, R0, #0 
    /*0000ccd8*/ BNE         VI_GetRegionLumaTimeout_xce68
    /*0000ccdc*/ MOV         R3, #44                     @ 0x2c 
    /*0000cce0*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000cce4*/ MLA         R3, R3, R7, R5 
    /*0000cce8*/ LDR         R0, [SP, #24] 
    /*0000ccec*/ ADD         R3, R3, #38                 @ 0x26 
    /*0000ccf0*/ ADD         R8, R8, R3, LSL #2 
    /*0000ccf4*/ LDR         R5, [R8, #4] 
    /*0000ccf8*/ STR         R4, [R8, #4] 
    /*0000ccfc*/ BL          0x000000000000CCFC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000cd00*/ CMP         R5, #0 
    /*0000cd04*/ MOVWEQ      R4, #32782                  @ 0x800e 
    /*0000cd08*/ MOVTEQ      R4, #40976                  @ 0xa010 
    /*0000cd0c*/ BNE         VI_GetRegionLumaTimeout_xce1c
    VI_GetRegionLumaTimeout_xcd10:
    /*0000cd10*/ MOV         R0, SL 
    /*0000cd14*/ BL          0x000000000000CD14          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000cd18*/ B           VI_GetRegionLumaTimeout_xce10
    VI_GetRegionLumaTimeout_xcd1c:
    /*0000cd1c*/ ADD         R3, SP, #44                 @ 0x2c 
    /*0000cd20*/ STR         R3, [SP, #28] 
    /*0000cd24*/ MOV         R0, R3 
    /*0000cd28*/ BL          0x000000000000CD28          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0000cd2c*/ CMP         R0, #0 
    /*0000cd30*/ BEQ         VI_GetRegionLumaTimeout_xcd40
    /*0000cd34*/ LDR         R3, [R6, #8] 
    /*0000cd38*/ CMP         R3, #0 
    /*0000cd3c*/ MOVEQ       R4, #1 
    VI_GetRegionLumaTimeout_xcd40:
    /*0000cd40*/ ADD         R3, R9, #80                 @ 0x50 
    /*0000cd44*/ MOVW        R9, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x419c] 
    /*0000cd48*/ ADD         R3, R8, R3 
    /*0000cd4c*/ MOVT        R9, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x419c] 
    /*0000cd50*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000cd54*/ B           VI_GetRegionLumaTimeout_xcd6c
    VI_GetRegionLumaTimeout_xcd58:
    /*0000cd58*/ BL          0x000000000000CD58          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0000cd5c*/ ADD         R3, R0, #512                @ 0x200 
    /*0000cd60*/ MOV         R4, R0 
    /*0000cd64*/ BICS        R3, R3, #512                @ 0x200 
    /*0000cd68*/ BEQ         VI_GetRegionLumaTimeout_xcd98
    VI_GetRegionLumaTimeout_xcd6c:
    /*0000cd6c*/ LDR         R0, [SP, #28] 
    /*0000cd70*/ BL          0x000000000000CD70          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0000cd74*/ MOV         R3, R4 
    /*0000cd78*/ LDR         R2, [SP, #28] 
    /*0000cd7c*/ MOV         R1, R9 
    /*0000cd80*/ CMP         R0, #0 
    /*0000cd84*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000cd88*/ BEQ         VI_GetRegionLumaTimeout_xcd58
    /*0000cd8c*/ MOV         R0, R4 
    /*0000cd90*/ BL          0x000000000000CD90          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*0000cd94*/ MOV         R4, R0 
    VI_GetRegionLumaTimeout_xcd98:
    /*0000cd98*/ CMP         R4, #0 
    /*0000cd9c*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0000cda0*/ BGT         VI_GetRegionLumaTimeout_xcca4
    /*0000cda4*/ LDR         R1, [R6, #8] 
    /*0000cda8*/ MOV         R3, #304                    @ 0x130 
    /*0000cdac*/ STR         R5, [SP, #8] 
    /*0000cdb0*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3114] 
    /*0000cdb4*/ STR         R3, [SP] 
    /*0000cdb8*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3114] 
    /*0000cdbc*/ STR         R1, [SP, #12] 
    /*0000cdc0*/ MOV         R0, #3 
    /*0000cdc4*/ STR         R7, [SP, #4] 
    /*0000cdc8*/ MOV         R1, #16 
    /*0000cdcc*/ LDR         R3, [PC, #200]              @ 0x000000000000ce9c 
    /*0000cdd0*/ MOVW        R4, #32784                  @ 0x8010 
    /*0000cdd4*/ BL          0x000000000000CDD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cdd8*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000cddc*/ B           VI_GetRegionLumaTimeout_xce10
    VI_GetRegionLumaTimeout_xcde0:
    /*0000cde0*/ MOVW        R3, #333                    @ 0x14d 
    /*0000cde4*/ STR         R5, [SP, #8] 
    /*0000cde8*/ STR         R3, [SP] 
    /*0000cdec*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3168] 
    /*0000cdf0*/ STR         R7, [SP, #4] 
    /*0000cdf4*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3168] 
    /*0000cdf8*/ LDR         R3, [PC, #156]              @ 0x000000000000ce9c 
    /*0000cdfc*/ MOV         R1, #16 
    /*0000ce00*/ MOV         R0, #3 
    /*0000ce04*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000ce08*/ BL          0x000000000000CE08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ce0c*/ MOVT        R4, #65535                  @ 0xffff 
    VI_GetRegionLumaTimeout_xce10:
    /*0000ce10*/ MOV         R0, R7 
    /*0000ce14*/ BL          0x000000000000CE14          @ VI_FreeRegionLumaBuffer [R_ARM_CALL: .text+0xc520] 
    /*0000ce18*/ B           VI_GetRegionLumaTimeout_xca30
    VI_GetRegionLumaTimeout_xce1c:
    /*0000ce1c*/ LDR         R2, [FP, #3296]             @ 0xce0 
    /*0000ce20*/ LDR         R1, [FP, #3320]             @ 0xcf8 
    /*0000ce24*/ LDR         R0, [R6, #12] 
    /*0000ce28*/ LSL         R2, R2, #3 
    /*0000ce2c*/ BL          0x000000000000CE2C          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0000ce30*/ LDR         R5, [SP, #20] 
    /*0000ce34*/ B           VI_GetRegionLumaTimeout_xce50
    VI_GetRegionLumaTimeout_xce38:
    /*0000ce38*/ LDR         R1, [FP, #3320]             @ 0xcf8 
    /*0000ce3c*/ LDR         R0, [R6, #12] 
    /*0000ce40*/ ADD         R1, R1, R5, LSL #4 
    /*0000ce44*/ ADD         R0, R0, R5, LSL #3 
    /*0000ce48*/ ADD         R5, R5, #1 
    /*0000ce4c*/ BL          0x000000000000CE4C          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    VI_GetRegionLumaTimeout_xce50:
    /*0000ce50*/ LDR         R3, [FP, #3296]             @ 0xce0 
    /*0000ce54*/ MOV         R2, #8 
    /*0000ce58*/ CMP         R3, R5 
    /*0000ce5c*/ BHI         VI_GetRegionLumaTimeout_xce38
    /*0000ce60*/ MOV         R4, R0 
    /*0000ce64*/ B           VI_GetRegionLumaTimeout_xcd10
    VI_GetRegionLumaTimeout_xce68:
    /*0000ce68*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000ce6c*/ LDR         R0, [SP, #24] 
    /*0000ce70*/ BL          0x000000000000CE70          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000ce74*/ MOV         R0, SL 
    /*0000ce78*/ BL          0x000000000000CE78          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ce7c*/ LDR         R0, [SP, #16] 
    /*0000ce80*/ BL          0x000000000000CE80          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ce84*/ B           VI_GetRegionLumaTimeout_xc920
    VI_GetRegionLumaTimeout_xce88:
    /*0000ce88*/ LDR         R0, [SP, #16] 
    /*0000ce8c*/ MOVW        R4, #32784                  @ 0x8010 
    /*0000ce90*/ BL          0x000000000000CE90          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ce94*/ MOVT        R4, #40976                  @ 0xa010 
    /*0000ce98*/ B           VI_GetRegionLumaTimeout_xc920
    /*0000ce9c*/ ANDEQ       R0, R0, IP, ROR R8 
FUNC_END VI_GetRegionLumaTimeout


FUNC_BEGIN ViewTypeToStr
    /*0000cea0*/ CMP         R0, #2 
    /*0000cea4*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000cea8*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000ceac*/ LDRLS       R0, [R3, R0, LSL #2] 
    /*0000ceb0*/ MOVHI       R0, #0 
    /*0000ceb4*/ BX          LR 
FUNC_END ViewTypeToStr


FUNC_BEGIN VI_BitWidthToU32
    /*0000ceb8*/ CMP         R0, #4 
    /*0000cebc*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000cec0*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000cec4*/ ADDLS       R3, R3, R0, LSL #2 
    /*0000cec8*/ LDRLS       R0, [R3, #12] 
    /*0000cecc*/ MOVHI       R0, #0 
    /*0000ced0*/ BX          LR 
FUNC_END VI_BitWidthToU32


FUNC_BEGIN VI_VideoFormateToStr
    /*0000ced4*/ CMP         R0, #0 
    /*0000ced8*/ BEQ         VI_VideoFormateToStr_xcefc
    /*0000cedc*/ CMP         R0, #2 
    /*0000cee0*/ MOVW        R3, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31b0] 
    /*0000cee4*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000cee8*/ MOVT        R3, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31b0] 
    /*0000ceec*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000cef0*/ MOVEQ       R0, R3 
    /*0000cef4*/ MOVNE       R0, R2 
    /*0000cef8*/ BX          LR 
    VI_VideoFormateToStr_xcefc:
    /*0000cefc*/ MOVW        R0, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31a8] 
    /*0000cf00*/ MOVT        R0, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31a8] 
    /*0000cf04*/ BX          LR 
FUNC_END VI_VideoFormateToStr


FUNC_BEGIN VI_DynamicRangeToStr
    /*0000cf08*/ CMP         R0, #5 
    /*0000cf0c*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000cf10*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000cf14*/ ADDLS       R3, R3, R0, LSL #2 
    /*0000cf18*/ LDRLS       R0, [R3, #32] 
    /*0000cf1c*/ MOVWHI      R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000cf20*/ MOVTHI      R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000cf24*/ BX          LR 
FUNC_END VI_DynamicRangeToStr


FUNC_BEGIN VI_PixelFormatToStr
    /*0000cf28*/ SUB         R0, R0, #17 
    /*0000cf2c*/ CMP         R0, #22 
    /*0000cf30*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000cf34*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000cf38*/ ADDLS       R3, R3, R0, LSL #2 
    /*0000cf3c*/ LDRLS       R0, [R3, #56]               @ 0x38 
    /*0000cf40*/ MOVWHI      R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000cf44*/ MOVTHI      R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000cf48*/ BX          LR 
FUNC_END VI_PixelFormatToStr


FUNC_BEGIN VI_BypassModeToStr
    /*0000cf4c*/ CMP         R0, #2 
    /*0000cf50*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000cf54*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000cf58*/ ADDLS       R3, R3, R0, LSL #2 
    /*0000cf5c*/ LDRLS       R0, [R3, #148]              @ 0x94 
    /*0000cf60*/ MOVWHI      R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000cf64*/ MOVTHI      R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000cf68*/ BX          LR 
FUNC_END VI_BypassModeToStr


FUNC_BEGIN VI_CompressModeToStr
    /*0000cf6c*/ CMP         R0, #4 
    /*0000cf70*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000cf74*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000cf78*/ ADDLS       R3, R3, R0, LSL #2 
    /*0000cf7c*/ LDRLS       R0, [R3, #160]              @ 0xa0 
    /*0000cf80*/ MOVWHI      R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000cf84*/ MOVTHI      R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000cf88*/ BX          LR 
FUNC_END VI_CompressModeToStr


FUNC_BEGIN CropRatioToStr
    /*0000cf8c*/ CMP         R0, #0 
    /*0000cf90*/ BEQ         CropRatioToStr_xcfb4
    /*0000cf94*/ CMP         R0, #1 
    /*0000cf98*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31c4] 
    /*0000cf9c*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000cfa0*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31c4] 
    /*0000cfa4*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000cfa8*/ MOVEQ       R0, R3 
    /*0000cfac*/ MOVNE       R0, R2 
    /*0000cfb0*/ BX          LR 
    CropRatioToStr_xcfb4:
    /*0000cfb4*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31c0] 
    /*0000cfb8*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31c0] 
    /*0000cfbc*/ BX          LR 
FUNC_END CropRatioToStr


FUNC_BEGIN RotationToStr
    /*0000cfc0*/ CMP         R0, #0 
    /*0000cfc4*/ BEQ         RotationToStr_xcff8
    /*0000cfc8*/ CMP         R0, #1 
    /*0000cfcc*/ BEQ         RotationToStr_xd004
    /*0000cfd0*/ CMP         R0, #2 
    /*0000cfd4*/ BEQ         RotationToStr_xd010
    /*0000cfd8*/ CMP         R0, #3 
    /*0000cfdc*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31d0] 
    /*0000cfe0*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000cfe4*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31d0] 
    /*0000cfe8*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000cfec*/ MOVEQ       R0, R3 
    /*0000cff0*/ MOVNE       R0, R2 
    /*0000cff4*/ BX          LR 
    RotationToStr_xcff8:
    /*0000cff8*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31c8] 
    /*0000cffc*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31c8] 
    /*0000d000*/ BX          LR 
    RotationToStr_xd004:
    /*0000d004*/ MOVW        R0, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31cc] 
    /*0000d008*/ MOVT        R0, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31cc] 
    /*0000d00c*/ BX          LR 
    RotationToStr_xd010:
    /*0000d010*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31d4] 
    /*0000d014*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31d4] 
    /*0000d018*/ BX          LR 
FUNC_END RotationToStr


FUNC_BEGIN FisheyeMntModeToStr
    /*0000d01c*/ CMP         R0, #2 
    /*0000d020*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000d024*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000d028*/ ADDLS       R3, R3, R0, LSL #2 
    /*0000d02c*/ LDRLS       R0, [R3, #180]              @ 0xb4 
    /*0000d030*/ MOVWHI      R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000d034*/ MOVTHI      R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000d038*/ BX          LR 
FUNC_END FisheyeMntModeToStr


FUNC_BEGIN FisheyeViewModeToStr
    /*0000d03c*/ CMP         R0, #3 
    /*0000d040*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000d044*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000d048*/ ADDLS       R3, R3, R0, LSL #2 
    /*0000d04c*/ LDRLS       R0, [R3, #192]              @ 0xc0 
    /*0000d050*/ MOVWHI      R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000d054*/ MOVTHI      R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000d058*/ BX          LR 
FUNC_END FisheyeViewModeToStr


FUNC_BEGIN PRINT_INTFMODE
    /*0000d05c*/ CMP         R0, #0 
    /*0000d060*/ BEQ         PRINT_INTFMODE_xd0cc
    /*0000d064*/ CMP         R0, #1 
    /*0000d068*/ BEQ         PRINT_INTFMODE_xd0d8
    /*0000d06c*/ CMP         R0, #2 
    /*0000d070*/ BEQ         PRINT_INTFMODE_xd0e4
    /*0000d074*/ CMP         R0, #3 
    /*0000d078*/ BEQ         PRINT_INTFMODE_xd0f0
    /*0000d07c*/ CMP         R0, #4 
    /*0000d080*/ BEQ         PRINT_INTFMODE_xd0fc
    /*0000d084*/ CMP         R0, #5 
    /*0000d088*/ BEQ         PRINT_INTFMODE_xd108
    /*0000d08c*/ CMP         R0, #6 
    /*0000d090*/ BEQ         PRINT_INTFMODE_xd114
    /*0000d094*/ CMP         R0, #7 
    /*0000d098*/ BEQ         PRINT_INTFMODE_xd120
    /*0000d09c*/ CMP         R0, #8 
    /*0000d0a0*/ BEQ         PRINT_INTFMODE_xd12c
    /*0000d0a4*/ CMP         R0, #9 
    /*0000d0a8*/ BEQ         PRINT_INTFMODE_xd138
    /*0000d0ac*/ CMP         R0, #10 
    /*0000d0b0*/ MOVW        R3, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3238] 
    /*0000d0b4*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000d0b8*/ MOVT        R3, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3238] 
    /*0000d0bc*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000d0c0*/ MOVEQ       R0, R3 
    /*0000d0c4*/ MOVNE       R0, R2 
    /*0000d0c8*/ BX          LR 
    PRINT_INTFMODE_xd0cc:
    /*0000d0cc*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31d8] 
    /*0000d0d0*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31d8] 
    /*0000d0d4*/ BX          LR 
    PRINT_INTFMODE_xd0d8:
    /*0000d0d8*/ MOVW        R0, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31e0] 
    /*0000d0dc*/ MOVT        R0, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31e0] 
    /*0000d0e0*/ BX          LR 
    PRINT_INTFMODE_xd0e4:
    /*0000d0e4*/ MOVW        R0, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31e8] 
    /*0000d0e8*/ MOVT        R0, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31e8] 
    /*0000d0ec*/ BX          LR 
    PRINT_INTFMODE_xd0f0:
    /*0000d0f0*/ MOVW        R0, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31ec] 
    /*0000d0f4*/ MOVT        R0, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31ec] 
    /*0000d0f8*/ BX          LR 
    PRINT_INTFMODE_xd0fc:
    /*0000d0fc*/ MOVW        R0, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31f4] 
    /*0000d100*/ MOVT        R0, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31f4] 
    /*0000d104*/ BX          LR 
    PRINT_INTFMODE_xd108:
    /*0000d108*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31fc] 
    /*0000d10c*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31fc] 
    /*0000d110*/ BX          LR 
    PRINT_INTFMODE_xd114:
    /*0000d114*/ MOVW        R0, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3204] 
    /*0000d118*/ MOVT        R0, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3204] 
    /*0000d11c*/ BX          LR 
    PRINT_INTFMODE_xd120:
    /*0000d120*/ MOVW        R0, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3218] 
    /*0000d124*/ MOVT        R0, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3218] 
    /*0000d128*/ BX          LR 
    PRINT_INTFMODE_xd12c:
    /*0000d12c*/ MOVW        R0, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x322c] 
    /*0000d130*/ MOVT        R0, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x322c] 
    /*0000d134*/ BX          LR 
    PRINT_INTFMODE_xd138:
    /*0000d138*/ MOVW        R0, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3240] 
    /*0000d13c*/ MOVT        R0, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3240] 
    /*0000d140*/ BX          LR 
FUNC_END PRINT_INTFMODE


FUNC_BEGIN PRINT_WORKMODE
    /*0000d144*/ CMP         R0, #0 
    /*0000d148*/ BEQ         PRINT_WORKMODE_xd174
    /*0000d14c*/ CMP         R0, #1 
    /*0000d150*/ BEQ         PRINT_WORKMODE_xd180
    /*0000d154*/ CMP         R0, #3 
    /*0000d158*/ MOVW        R3, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3254] 
    /*0000d15c*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000d160*/ MOVT        R3, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3254] 
    /*0000d164*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000d168*/ MOVEQ       R0, R3 
    /*0000d16c*/ MOVNE       R0, R2 
    /*0000d170*/ BX          LR 
    PRINT_WORKMODE_xd174:
    /*0000d174*/ MOVW        R0, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x324c] 
    /*0000d178*/ MOVT        R0, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x324c] 
    /*0000d17c*/ BX          LR 
    PRINT_WORKMODE_xd180:
    /*0000d180*/ MOVW        R0, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x325c] 
    /*0000d184*/ MOVT        R0, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x325c] 
    /*0000d188*/ BX          LR 
FUNC_END PRINT_WORKMODE


FUNC_BEGIN PRINT_DATA_SEQ
    /*0000d18c*/ SUB         R3, R1, #6 
    /*0000d190*/ CMP         R1, #4 
    /*0000d194*/ CMPHI       R3, #2 
    /*0000d198*/ BLS         PRINT_DATA_SEQ_xd1a8
    /*0000d19c*/ MOVW        R0, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000d1a0*/ MOVT        R0, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000d1a4*/ BX          LR 
    PRINT_DATA_SEQ_xd1a8:
    /*0000d1a8*/ CMP         R0, #0 
    /*0000d1ac*/ BEQ         PRINT_DATA_SEQ_xd1f0
    /*0000d1b0*/ CMP         R0, #1 
    /*0000d1b4*/ BEQ         PRINT_DATA_SEQ_xd1fc
    /*0000d1b8*/ CMP         R0, #2 
    /*0000d1bc*/ BEQ         PRINT_DATA_SEQ_xd208
    /*0000d1c0*/ CMP         R0, #3 
    /*0000d1c4*/ BEQ         PRINT_DATA_SEQ_xd214
    /*0000d1c8*/ CMP         R0, #4 
    /*0000d1cc*/ BEQ         PRINT_DATA_SEQ_xd220
    /*0000d1d0*/ CMP         R0, #5 
    /*0000d1d4*/ MOVW        R3, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000d1d8*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3284] 
    /*0000d1dc*/ MOVT        R3, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000d1e0*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3284] 
    /*0000d1e4*/ MOVNE       R0, R3 
    /*0000d1e8*/ MOVEQ       R0, R2 
    /*0000d1ec*/ BX          LR 
    PRINT_DATA_SEQ_xd1f0:
    /*0000d1f0*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3264] 
    /*0000d1f4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3264] 
    /*0000d1f8*/ BX          LR 
    PRINT_DATA_SEQ_xd1fc:
    /*0000d1fc*/ MOVW        R0, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x326c] 
    /*0000d200*/ MOVT        R0, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x326c] 
    /*0000d204*/ BX          LR 
    PRINT_DATA_SEQ_xd208:
    /*0000d208*/ MOVW        R0, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3274] 
    /*0000d20c*/ MOVT        R0, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3274] 
    /*0000d210*/ BX          LR 
    PRINT_DATA_SEQ_xd214:
    /*0000d214*/ MOVW        R0, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x327c] 
    /*0000d218*/ MOVT        R0, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x327c] 
    /*0000d21c*/ BX          LR 
    PRINT_DATA_SEQ_xd220:
    /*0000d220*/ MOVW        R0, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x328c] 
    /*0000d224*/ MOVT        R0, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x328c] 
    /*0000d228*/ BX          LR 
FUNC_END PRINT_DATA_SEQ


FUNC_BEGIN PRINT_DATA_TYPE
    /*0000d22c*/ CMP         R0, #0 
    /*0000d230*/ BEQ         PRINT_DATA_TYPE_xd254
    /*0000d234*/ CMP         R0, #1 
    /*0000d238*/ MOVW        R3, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3298] 
    /*0000d23c*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000d240*/ MOVT        R3, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3298] 
    /*0000d244*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000d248*/ MOVEQ       R0, R3 
    /*0000d24c*/ MOVNE       R0, R2 
    /*0000d250*/ BX          LR 
    PRINT_DATA_TYPE_xd254:
    /*0000d254*/ MOVW        R0, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3294] 
    /*0000d258*/ MOVT        R0, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3294] 
    /*0000d25c*/ BX          LR 
FUNC_END PRINT_DATA_TYPE


FUNC_BEGIN PRINT_REPHASEMODE
    /*0000d260*/ CMP         R0, #0 
    /*0000d264*/ BEQ         PRINT_REPHASEMODE_xd294
    /*0000d268*/ CMP         R0, #1 
    /*0000d26c*/ BEQ         PRINT_REPHASEMODE_xd2a0
    /*0000d270*/ CMP         R0, #2 
    /*0000d274*/ BEQ         PRINT_REPHASEMODE_xd2ac
    /*0000d278*/ CMP         R0, #3 
    /*0000d27c*/ BEQ         PRINT_REPHASEMODE_xd2b8
    /*0000d280*/ CMP         R0, #4 
    /*0000d284*/ MOVW        R0, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32b4] 
    /*0000d288*/ MOVT        R0, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32b4] 
    /*0000d28c*/ MOVNE       R0, #0 
    /*0000d290*/ BX          LR 
    PRINT_REPHASEMODE_xd294:
    /*0000d294*/ MOVW        R0, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x329c] 
    /*0000d298*/ MOVT        R0, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x329c] 
    /*0000d29c*/ BX          LR 
    PRINT_REPHASEMODE_xd2a0:
    /*0000d2a0*/ MOVW        R0, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32a4] 
    /*0000d2a4*/ MOVT        R0, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32a4] 
    /*0000d2a8*/ BX          LR 
    PRINT_REPHASEMODE_xd2ac:
    /*0000d2ac*/ MOVW        R0, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32ac] 
    /*0000d2b0*/ MOVT        R0, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32ac] 
    /*0000d2b4*/ BX          LR 
    PRINT_REPHASEMODE_xd2b8:
    /*0000d2b8*/ MOVW        R0, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32bc] 
    /*0000d2bc*/ MOVT        R0, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32bc] 
    /*0000d2c0*/ BX          LR 
FUNC_END PRINT_REPHASEMODE


FUNC_BEGIN PRINT_WDR_MODE
    /*0000d2c4*/ CMP         R0, #0 
    /*0000d2c8*/ BEQ         PRINT_WDR_MODE_xd32c
    /*0000d2cc*/ CMP         R0, #1 
    /*0000d2d0*/ BEQ         PRINT_WDR_MODE_xd338
    /*0000d2d4*/ CMP         R0, #2 
    /*0000d2d8*/ BEQ         PRINT_WDR_MODE_xd344
    /*0000d2dc*/ CMP         R0, #3 
    /*0000d2e0*/ BEQ         PRINT_WDR_MODE_xd350
    /*0000d2e4*/ SUB         R3, R0, #4 
    /*0000d2e8*/ CMP         R3, #1 
    /*0000d2ec*/ BLS         PRINT_WDR_MODE_xd35c
    /*0000d2f0*/ CMP         R0, #6 
    /*0000d2f4*/ BEQ         PRINT_WDR_MODE_xd368
    /*0000d2f8*/ SUB         R3, R0, #7 
    /*0000d2fc*/ CMP         R3, #1 
    /*0000d300*/ BLS         PRINT_WDR_MODE_xd374
    /*0000d304*/ CMP         R0, #9 
    /*0000d308*/ BEQ         PRINT_WDR_MODE_xd380
    /*0000d30c*/ SUB         R3, R0, #10 
    /*0000d310*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000d314*/ CMP         R3, #1 
    /*0000d318*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000d31c*/ MOVW        R0, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32fc] 
    /*0000d320*/ MOVT        R0, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32fc] 
    /*0000d324*/ MOVHI       R0, R2 
    /*0000d328*/ BX          LR 
    PRINT_WDR_MODE_xd32c:
    /*0000d32c*/ MOVW        R0, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32c4] 
    /*0000d330*/ MOVT        R0, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32c4] 
    /*0000d334*/ BX          LR 
    PRINT_WDR_MODE_xd338:
    /*0000d338*/ MOVW        R0, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32cc] 
    /*0000d33c*/ MOVT        R0, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32cc] 
    /*0000d340*/ BX          LR 
    PRINT_WDR_MODE_xd344:
    /*0000d344*/ MOVW        R0, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32d4] 
    /*0000d348*/ MOVT        R0, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32d4] 
    /*0000d34c*/ BX          LR 
    PRINT_WDR_MODE_xd350:
    /*0000d350*/ MOVW        R0, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32dc] 
    /*0000d354*/ MOVT        R0, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32dc] 
    /*0000d358*/ BX          LR 
    PRINT_WDR_MODE_xd35c:
    /*0000d35c*/ MOVW        R0, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32e4] 
    /*0000d360*/ MOVT        R0, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32e4] 
    /*0000d364*/ BX          LR 
    PRINT_WDR_MODE_xd368:
    /*0000d368*/ MOVW        R0, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32ec] 
    /*0000d36c*/ MOVT        R0, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32ec] 
    /*0000d370*/ BX          LR 
    PRINT_WDR_MODE_xd374:
    /*0000d374*/ MOVW        R0, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32f4] 
    /*0000d378*/ MOVT        R0, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32f4] 
    /*0000d37c*/ BX          LR 
    PRINT_WDR_MODE_xd380:
    /*0000d380*/ MOVW        R0, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3304] 
    /*0000d384*/ MOVT        R0, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3304] 
    /*0000d388*/ BX          LR 
FUNC_END PRINT_WDR_MODE


FUNC_BEGIN PRINT_DATA_RATE
    /*0000d38c*/ CMP         R0, #0 
    /*0000d390*/ BEQ         PRINT_DATA_RATE_xd3b4
    /*0000d394*/ CMP         R0, #1 
    /*0000d398*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3310] 
    /*0000d39c*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000d3a0*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3310] 
    /*0000d3a4*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000d3a8*/ MOVEQ       R0, R3 
    /*0000d3ac*/ MOVNE       R0, R2 
    /*0000d3b0*/ BX          LR 
    PRINT_DATA_RATE_xd3b4:
    /*0000d3b4*/ MOVW        R0, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x330c] 
    /*0000d3b8*/ MOVT        R0, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x330c] 
    /*0000d3bc*/ BX          LR 
FUNC_END PRINT_DATA_RATE


FUNC_BEGIN PRINT_NR_REF_SRC
    /*0000d3c0*/ CMP         R0, #0 
    /*0000d3c4*/ BEQ         PRINT_NR_REF_SRC_xd3e8
    /*0000d3c8*/ CMP         R0, #1 
    /*0000d3cc*/ MOVW        R3, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3318] 
    /*0000d3d0*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000d3d4*/ MOVT        R3, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3318] 
    /*0000d3d8*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000d3dc*/ MOVEQ       R0, R3 
    /*0000d3e0*/ MOVNE       R0, R2 
    /*0000d3e4*/ BX          LR 
    PRINT_NR_REF_SRC_xd3e8:
    /*0000d3e8*/ MOVW        R0, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000d3ec*/ MOVT        R0, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000d3f0*/ BX          LR 
FUNC_END PRINT_NR_REF_SRC


FUNC_BEGIN ExtChnSourceToStr
    /*0000d3f4*/ CMP         R0, #0 
    /*0000d3f8*/ BEQ         ExtChnSourceToStr_xd41c
    /*0000d3fc*/ CMP         R0, #1 
    /*0000d400*/ MOVW        R3, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3324] 
    /*0000d404*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000d408*/ MOVT        R3, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3324] 
    /*0000d40c*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000d410*/ MOVEQ       R0, R3 
    /*0000d414*/ MOVNE       R0, R2 
    /*0000d418*/ BX          LR 
    ExtChnSourceToStr_xd41c:
    /*0000d41c*/ MOVW        R0, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x331c] 
    /*0000d420*/ MOVT        R0, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x331c] 
    /*0000d424*/ BX          LR 
FUNC_END ExtChnSourceToStr


FUNC_BEGIN PipeFrameSourceToStr
    /*0000d428*/ CMP         R0, #2 
    /*0000d42c*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000d430*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000d434*/ ADDLS       R3, R3, R0, LSL #2 
    /*0000d438*/ LDRLS       R0, [R3, #208]              @ 0xd0 
    /*0000d43c*/ MOVWHI      R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000d440*/ MOVTHI      R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000d444*/ BX          LR 
FUNC_END PipeFrameSourceToStr


FUNC_BEGIN PipePepeatModeToStr
    /*0000d448*/ CMP         R0, #0 
    /*0000d44c*/ BEQ         PipePepeatModeToStr_xd470
    /*0000d450*/ CMP         R0, #1 
    /*0000d454*/ MOVW        R3, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x332c] 
    /*0000d458*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000d45c*/ MOVT        R3, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x332c] 
    /*0000d460*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000d464*/ MOVEQ       R0, R3 
    /*0000d468*/ MOVNE       R0, R2 
    /*0000d46c*/ BX          LR 
    PipePepeatModeToStr_xd470:
    /*0000d470*/ MOVW        R0, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x329c] 
    /*0000d474*/ MOVT        R0, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x329c] 
    /*0000d478*/ BX          LR 
FUNC_END PipePepeatModeToStr


FUNC_BEGIN UserPicModeToStr
    /*0000d47c*/ CMP         R0, #0 
    /*0000d480*/ BEQ         UserPicModeToStr_xd4a4
    /*0000d484*/ CMP         R0, #1 
    /*0000d488*/ MOVW        R3, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3338] 
    /*0000d48c*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000d490*/ MOVT        R3, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3338] 
    /*0000d494*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000d498*/ MOVEQ       R0, R3 
    /*0000d49c*/ MOVNE       R0, R2 
    /*0000d4a0*/ BX          LR 
    UserPicModeToStr_xd4a4:
    /*0000d4a4*/ MOVW        R0, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3334] 
    /*0000d4a8*/ MOVT        R0, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3334] 
    /*0000d4ac*/ BX          LR 
FUNC_END UserPicModeToStr


FUNC_BEGIN NRInterfaceToStr
    /*0000d4b0*/ CMP         R0, #0 
    /*0000d4b4*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x333c] 
    /*0000d4b8*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000d4bc*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x333c] 
    /*0000d4c0*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000d4c4*/ MOVEQ       R0, R2 
    /*0000d4c8*/ MOVNE       R0, R3 
    /*0000d4cc*/ BX          LR 
FUNC_END NRInterfaceToStr


FUNC_BEGIN NRVersionToStr
    /*0000d4d0*/ SUB         R0, R0, #1 
    /*0000d4d4*/ CMP         R0, #3 
    /*0000d4d8*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000d4dc*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000d4e0*/ ADDLS       R3, R3, R0, LSL #2 
    /*0000d4e4*/ LDRLS       R0, [R3, #220]              @ 0xdc 
    /*0000d4e8*/ MOVWHI      R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000d4ec*/ MOVTHI      R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000d4f0*/ BX          LR 
FUNC_END NRVersionToStr


FUNC_BEGIN PRINT_OPERATION_MODE
    /*0000d4f4*/ CMP         R0, #0 
    /*0000d4f8*/ BEQ         PRINT_OPERATION_MODE_xd51c
    /*0000d4fc*/ CMP         R0, #1 
    /*0000d500*/ MOVW        R3, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000d504*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000d508*/ MOVT        R3, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000d50c*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000d510*/ MOVEQ       R0, R3 
    /*0000d514*/ MOVNE       R0, R2 
    /*0000d518*/ BX          LR 
    PRINT_OPERATION_MODE_xd51c:
    /*0000d51c*/ MOVW        R0, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3344] 
    /*0000d520*/ MOVT        R0, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3344] 
    /*0000d524*/ BX          LR 
FUNC_END PRINT_OPERATION_MODE


FUNC_BEGIN PRINT_STITCH_MODE
    /*0000d528*/ CMP         R0, #0 
    /*0000d52c*/ BEQ         PRINT_STITCH_MODE_xd550
    /*0000d530*/ CMP         R0, #1 
    /*0000d534*/ MOVW        R3, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x335c] 
    /*0000d538*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000d53c*/ MOVT        R3, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x335c] 
    /*0000d540*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000d544*/ MOVEQ       R0, R3 
    /*0000d548*/ MOVNE       R0, R2 
    /*0000d54c*/ BX          LR 
    PRINT_STITCH_MODE_xd550:
    /*0000d550*/ MOVW        R0, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3354] 
    /*0000d554*/ MOVT        R0, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3354] 
    /*0000d558*/ BX          LR 
FUNC_END PRINT_STITCH_MODE


FUNC_BEGIN PRINT_INT_TYPE
    /*0000d55c*/ CMP         R0, #2 
    /*0000d560*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000d564*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000d568*/ ADDLS       R3, R3, R0, LSL #2 
    /*0000d56c*/ LDRLS       R0, [R3, #236]              @ 0xec 
    /*0000d570*/ MOVWHI      R0, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000d574*/ MOVTHI      R0, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000d578*/ BX          LR 
FUNC_END PRINT_INT_TYPE


FUNC_BEGIN VI_ProcStithGrpAttr
    /*0000d57c*/ MOV         R0, #0 
    /*0000d580*/ BX          LR 
FUNC_END VI_ProcStithGrpAttr


FUNC_BEGIN VI_ProcDevAttr
    /*0000d584*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000d588*/ SUB         SP, SP, #292                @ 0x124 
    /*0000d58c*/ MOV         R9, R0 
    /*0000d590*/ MOVW        R1, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3374] 
    /*0000d594*/ MOVW        FP, #0                      @ g_astDevMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x778] 
    /*0000d598*/ MOVT        R1, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3374] 
    /*0000d59c*/ MOVT        FP, #0                      @ g_astDevMkpCtx [R_ARM_MOVT_ABS: .bss+0x778] 
    /*0000d5a0*/ BL          0x000000000000D5A0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000d5a4*/ MOVW        SL, #0                      @ g_astDevSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x768] 
    /*0000d5a8*/ MOVW        R2, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3428] 
    /*0000d5ac*/ MOVW        R3, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3430] 
    /*0000d5b0*/ MOVT        R2, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3428] 
    /*0000d5b4*/ MOVT        R3, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3430] 
    /*0000d5b8*/ STR         R2, [SP, #28] 
    /*0000d5bc*/ STR         R3, [SP, #24] 
    /*0000d5c0*/ MOVW        R2, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3438] 
    /*0000d5c4*/ MOVW        R3, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3440] 
    /*0000d5c8*/ MOVT        R2, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3438] 
    /*0000d5cc*/ MOVT        R3, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3440] 
    /*0000d5d0*/ STR         R2, [SP, #20] 
    /*0000d5d4*/ STR         R3, [SP, #16] 
    /*0000d5d8*/ MOVW        R2, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3444] 
    /*0000d5dc*/ MOVW        R3, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x344c] 
    /*0000d5e0*/ MOVT        R2, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3444] 
    /*0000d5e4*/ MOVT        R3, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x344c] 
    /*0000d5e8*/ STR         R2, [SP, #12] 
    /*0000d5ec*/ STR         R3, [SP, #8] 
    /*0000d5f0*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3454] 
    /*0000d5f4*/ MOVW        R3, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x345c] 
    /*0000d5f8*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3454] 
    /*0000d5fc*/ MOVT        R3, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x345c] 
    /*0000d600*/ STR         R2, [SP, #4] 
    /*0000d604*/ STR         R3, [SP] 
    /*0000d608*/ MOV         R0, R9 
    /*0000d60c*/ MOVW        R3, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33f0] 
    /*0000d610*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33f8] 
    /*0000d614*/ MOVT        R3, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33f0] 
    /*0000d618*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33f8] 
    /*0000d61c*/ MOVW        R1, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3400] 
    /*0000d620*/ MOVW        R7, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000d624*/ MOVT        R1, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3400] 
    /*0000d628*/ MOVT        SL, #0                      @ g_astDevSynchCtx [R_ARM_MOVT_ABS: .bss+0x768] 
    /*0000d62c*/ MOVT        R7, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000d630*/ BL          0x000000000000D630          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000d634*/ MOV         R5, FP 
    /*0000d638*/ MOV         R0, R9 
    /*0000d63c*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000d640*/ MOV         R4, #0 
    /*0000d644*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000d648*/ BL          0x000000000000D648          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000d64c*/ MOVW        R3, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0000d650*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x336c] 
    /*0000d654*/ MOVT        R3, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0000d658*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x336c] 
    /*0000d65c*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000d660*/ STR         R2, [SP, #60]               @ 0x3c 
    VI_ProcDevAttr_xd664:
    /*0000d664*/ ADD         R8, SL, R4, LSL #3 
    /*0000d668*/ MOV         R0, R8 
    /*0000d66c*/ BL          0x000000000000D66C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000d670*/ ADD         R1, SP, #144                @ 0x90 
    /*0000d674*/ SUBS        R6, R0, #0 
    /*0000d678*/ MOV         R0, R8 
    /*0000d67c*/ BNE         VI_ProcDevAttr_xdd50
    /*0000d680*/ LDR         R3, [R5] 
    /*0000d684*/ CMP         R3, #0 
    /*0000d688*/ BEQ         VI_ProcDevAttr_xdb84
    /*0000d68c*/ MOV         R0, R4 
    /*0000d690*/ BL          0x000000000000D690          @ VI_DRV_GetDevAttr [R_ARM_CALL: .text+0x31c8c] 
    /*0000d694*/ MOV         R0, R8 
    /*0000d698*/ BL          0x000000000000D698          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d69c*/ LDR         R1, [R5, #4] 
    /*0000d6a0*/ LDR         IP, [SP, #56]               @ 0x38 
    /*0000d6a4*/ LDR         R2, [R5, #12] 
    /*0000d6a8*/ CMP         R1, #1 
    /*0000d6ac*/ LDR         R0, [SP, #144]              @ 0x90 
    /*0000d6b0*/ MOV         R3, IP 
    /*0000d6b4*/ MOVEQ       R3, R7 
    /*0000d6b8*/ CMP         R2, #1 
    /*0000d6bc*/ MOV         R1, R3 
    /*0000d6c0*/ MOV         R3, IP 
    /*0000d6c4*/ MOVEQ       R3, R7 
    /*0000d6c8*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000d6cc*/ BL          0x000000000000D6CC          @ PRINT_INTFMODE [R_ARM_CALL: .text+0xd05c] 
    /*0000d6d0*/ LDR         R8, [SP, #148]              @ 0x94 
    /*0000d6d4*/ LDR         R2, [SP, #252]              @ 0xfc 
    /*0000d6d8*/ MOVW        IP, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3254] 
    /*0000d6dc*/ CMP         R8, #0 
    /*0000d6e0*/ MOVW        R3, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000d6e4*/ MOVT        IP, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3254] 
    /*0000d6e8*/ MOVT        R3, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000d6ec*/ STR         R2, [SP, #64]               @ 0x40 
    /*0000d6f0*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x324c] 
    /*0000d6f4*/ LDR         LR, [SP, #256]              @ 0x100 
    /*0000d6f8*/ MOVTEQ      R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x324c] 
    /*0000d6fc*/ BNE         VI_ProcDevAttr_xdcf0
    VI_ProcDevAttr_xd700:
    /*0000d700*/ STR         R0, [SP, #12] 
    /*0000d704*/ MOVW        IP, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3370] 
    /*0000d708*/ LDR         R0, [SP, #160]              @ 0xa0 
    /*0000d70c*/ MOVT        IP, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3370] 
    /*0000d710*/ STR         R2, [SP, #16] 
    /*0000d714*/ MOV         R3, R1 
    /*0000d718*/ LDR         R2, [SP, #64]               @ 0x40 
    /*0000d71c*/ CMP         R0, #0 
    /*0000d720*/ STR         LR, [SP, #8] 
    /*0000d724*/ MOVW        R1, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x346c] 
    /*0000d728*/ LDR         LR, [SP, #60]               @ 0x3c 
    /*0000d72c*/ MOVT        R1, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x346c] 
    /*0000d730*/ LDR         R8, [SP, #152]              @ 0x98 
    /*0000d734*/ MOV         R0, R9 
    /*0000d738*/ STR         R2, [SP, #4] 
    /*0000d73c*/ MOVEQ       IP, LR 
    /*0000d740*/ LDR         R2, [SP, #68]               @ 0x44 
    /*0000d744*/ STR         IP, [SP, #28] 
    /*0000d748*/ LDR         IP, [SP, #156]              @ 0x9c 
    /*0000d74c*/ STR         R2, [SP] 
    /*0000d750*/ MOV         R2, R4 
    /*0000d754*/ STR         R8, [SP, #20] 
    /*0000d758*/ STR         IP, [SP, #24] 
    /*0000d75c*/ BL          0x000000000000D75C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000d760*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000d764*/ MOV         R0, R9 
    /*0000d768*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000d76c*/ BL          0x000000000000D76C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcDevAttr_xd770:
    /*0000d770*/ ADD         R4, R4, #1 
    /*0000d774*/ ADD         R5, R5, #36                 @ 0x24 
    /*0000d778*/ CMP         R4, #2 
    /*0000d77c*/ BNE         VI_ProcDevAttr_xd664
    /*0000d780*/ MOVW        R3, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000d784*/ MOVW        R1, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3494] 
    /*0000d788*/ MOV         R0, R9 
    /*0000d78c*/ MOVT        R1, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3494] 
    /*0000d790*/ MOV         R4, R3 
    /*0000d794*/ BL          0x000000000000D794          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000d798*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3548] 
    /*0000d79c*/ MOVW        R3, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3554] 
    /*0000d7a0*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3548] 
    /*0000d7a4*/ MOVT        R3, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3554] 
    /*0000d7a8*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000d7ac*/ MOVW        R1, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3514] 
    /*0000d7b0*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000d7b4*/ MOVT        R1, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3514] 
    /*0000d7b8*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3560] 
    /*0000d7bc*/ MOVW        R3, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3568] 
    /*0000d7c0*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3560] 
    /*0000d7c4*/ MOVT        R3, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3568] 
    /*0000d7c8*/ STR         R2, [SP, #40]               @ 0x28 
    /*0000d7cc*/ MOV         R0, R9 
    /*0000d7d0*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000d7d4*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3570] 
    /*0000d7d8*/ MOVW        R3, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3578] 
    /*0000d7dc*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3570] 
    /*0000d7e0*/ MOVT        R3, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3578] 
    /*0000d7e4*/ STR         R2, [SP, #32] 
    /*0000d7e8*/ STR         R3, [SP, #28] 
    /*0000d7ec*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3580] 
    /*0000d7f0*/ MOVW        R3, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3588] 
    /*0000d7f4*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3580] 
    /*0000d7f8*/ MOVT        R3, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3588] 
    /*0000d7fc*/ STR         R2, [SP, #24] 
    /*0000d800*/ STR         R3, [SP, #20] 
    /*0000d804*/ MOVW        R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000d808*/ MOVW        R3, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x359c] 
    /*0000d80c*/ MOVT        R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000d810*/ MOVT        R3, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x359c] 
    /*0000d814*/ STR         R2, [SP, #16] 
    /*0000d818*/ STR         R3, [SP, #12] 
    /*0000d81c*/ MOVW        R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35a0] 
    /*0000d820*/ MOVW        R3, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35a4] 
    /*0000d824*/ MOVT        R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35a0] 
    /*0000d828*/ MOVT        R3, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35a4] 
    /*0000d82c*/ STR         R2, [SP, #8] 
    /*0000d830*/ STR         R3, [SP, #4] 
    /*0000d834*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35a8] 
    /*0000d838*/ MOVW        R3, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3510] 
    /*0000d83c*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35a8] 
    /*0000d840*/ MOVT        R3, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3510] 
    /*0000d844*/ STR         R2, [SP] 
    /*0000d848*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33f8] 
    /*0000d84c*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33f8] 
    /*0000d850*/ MOV         IP, R4 
    /*0000d854*/ MOVT        IP, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000d858*/ STR         IP, [SP, #56]               @ 0x38 
    /*0000d85c*/ BL          0x000000000000D85C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000d860*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000d864*/ MOV         R0, R9 
    /*0000d868*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000d86c*/ MOVW        R5, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0000d870*/ BL          0x000000000000D870          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000d874*/ MOVW        R7, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35ac] 
    /*0000d878*/ MOVT        R5, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0000d87c*/ MOVT        R7, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35ac] 
    /*0000d880*/ STR         R5, [SP, #60]               @ 0x3c 
    /*0000d884*/ STR         R7, [SP, #64]               @ 0x40 
    VI_ProcDevAttr_xd888:
    /*0000d888*/ ADD         R4, SL, R6, LSL #3 
    /*0000d88c*/ MOV         R0, R4 
    /*0000d890*/ BL          0x000000000000D890          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000d894*/ SUBS        R8, R0, #0 
    /*0000d898*/ BNE         VI_ProcDevAttr_xdd50
    /*0000d89c*/ MOV         R3, #36                     @ 0x24 
    /*0000d8a0*/ MOVW        R2, #0                      @ g_astDevMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x778] 
    /*0000d8a4*/ MUL         R3, R3, R6 
    /*0000d8a8*/ MOVT        R2, #0                      @ g_astDevMkpCtx [R_ARM_MOVT_ABS: .bss+0x778] 
    /*0000d8ac*/ LDR         R3, [R2, R3] 
    /*0000d8b0*/ CMP         R3, #0 
    /*0000d8b4*/ BEQ         VI_ProcDevAttr_xdb8c
    /*0000d8b8*/ ADD         R1, SP, #144                @ 0x90 
    /*0000d8bc*/ MOV         R0, R6 
    /*0000d8c0*/ BL          0x000000000000D8C0          @ VI_DRV_GetDevAttr [R_ARM_CALL: .text+0x31c8c] 
    /*0000d8c4*/ MOV         R0, R4 
    /*0000d8c8*/ BL          0x000000000000D8C8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d8cc*/ LDR         R1, [SP, #144]              @ 0x90 
    /*0000d8d0*/ LDR         R0, [SP, #180]              @ 0xb4 
    /*0000d8d4*/ BL          0x000000000000D8D4          @ PRINT_DATA_SEQ [R_ARM_CALL: .text+0xd18c] 
    /*0000d8d8*/ LDR         R2, [SP, #168]              @ 0xa8 
    /*0000d8dc*/ LDR         R3, [SP, #244]              @ 0xf4 
    /*0000d8e0*/ LDR         R1, [SP, #164]              @ 0xa4 
    /*0000d8e4*/ STR         R2, [SP, #72]               @ 0x48 
    /*0000d8e8*/ CMP         R3, #0 
    /*0000d8ec*/ LDR         R2, [SP, #172]              @ 0xac 
    /*0000d8f0*/ MOVWEQ      R7, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3294] 
    /*0000d8f4*/ MOVTEQ      R7, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3294] 
    /*0000d8f8*/ STR         R2, [SP, #76]               @ 0x4c 
    /*0000d8fc*/ LDR         R2, [SP, #176]              @ 0xb0 
    /*0000d900*/ STR         R2, [SP, #80]               @ 0x50 
    /*0000d904*/ STR         R0, [SP, #84]               @ 0x54 
    /*0000d908*/ BNE         VI_ProcDevAttr_xdd24
    VI_ProcDevAttr_xd90c:
    /*0000d90c*/ LDR         R2, [SP, #248]              @ 0xf8 
    /*0000d910*/ LDR         IP, [SP, #60]               @ 0x3c 
    /*0000d914*/ CMP         R2, #1 
    /*0000d918*/ LDR         R2, [SP, #260]              @ 0x104 
    /*0000d91c*/ LDR         R3, [SP, #268]              @ 0x10c 
    /*0000d920*/ LDR         R0, [SP, #56]               @ 0x38 
    /*0000d924*/ MOVNE       R0, IP 
    /*0000d928*/ STR         R2, [SP, #88]               @ 0x58 
    /*0000d92c*/ CMP         R3, #0 
    /*0000d930*/ LDR         R2, [SP, #264]              @ 0x108 
    /*0000d934*/ MOVWEQ      R4, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x329c] 
    /*0000d938*/ STR         R0, [SP, #68]               @ 0x44 
    /*0000d93c*/ MOVTEQ      R4, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x329c] 
    /*0000d940*/ STR         R2, [SP, #92]               @ 0x5c 
    /*0000d944*/ BEQ         VI_ProcDevAttr_xd970
    /*0000d948*/ CMP         R3, #1 
    /*0000d94c*/ BEQ         VI_ProcDevAttr_xdd70
    /*0000d950*/ CMP         R3, #2 
    /*0000d954*/ BEQ         VI_ProcDevAttr_xddd0
    /*0000d958*/ CMP         R3, #3 
    /*0000d95c*/ BEQ         VI_ProcDevAttr_xdde8
    /*0000d960*/ CMP         R3, #4 
    /*0000d964*/ MOVW        R4, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32b4] 
    /*0000d968*/ MOVT        R4, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32b4] 
    /*0000d96c*/ MOVNE       R4, #0 
    VI_ProcDevAttr_xd970:
    /*0000d970*/ LDR         R3, [SP, #272]              @ 0x110 
    /*0000d974*/ CMP         R3, #0 
    /*0000d978*/ MOVWEQ      R5, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x329c] 
    /*0000d97c*/ MOVTEQ      R5, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x329c] 
    /*0000d980*/ BEQ         VI_ProcDevAttr_xd9ac
    /*0000d984*/ CMP         R3, #1 
    /*0000d988*/ BEQ         VI_ProcDevAttr_xdd7c
    /*0000d98c*/ CMP         R3, #2 
    /*0000d990*/ BEQ         VI_ProcDevAttr_xdddc
    /*0000d994*/ CMP         R3, #3 
    /*0000d998*/ BEQ         VI_ProcDevAttr_xddf4
    /*0000d99c*/ CMP         R3, #4 
    /*0000d9a0*/ MOVW        R5, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32b4] 
    /*0000d9a4*/ MOVT        R5, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32b4] 
    /*0000d9a8*/ MOVNE       R5, #0 
    VI_ProcDevAttr_xd9ac:
    /*0000d9ac*/ LDR         R0, [SP, #276]              @ 0x114 
    /*0000d9b0*/ BL          0x000000000000D9B0          @ PRINT_WDR_MODE [R_ARM_CALL: .text+0xd2c4] 
    /*0000d9b4*/ LDR         R3, [SP, #284]              @ 0x11c 
    /*0000d9b8*/ LDR         IP, [SP, #280]              @ 0x118 
    /*0000d9bc*/ CMP         R3, #0 
    /*0000d9c0*/ MOVWEQ      R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x330c] 
    /*0000d9c4*/ MOVTEQ      R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x330c] 
    /*0000d9c8*/ BNE         VI_ProcDevAttr_xdd08
    VI_ProcDevAttr_xd9cc:
    /*0000d9cc*/ STR         IP, [SP, #44]               @ 0x2c 
    /*0000d9d0*/ MOV         R3, R1 
    /*0000d9d4*/ LDR         IP, [SP, #92]               @ 0x5c 
    /*0000d9d8*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000d9dc*/ MOV         R2, R6 
    /*0000d9e0*/ STR         R0, [SP, #40]               @ 0x28 
    /*0000d9e4*/ MOV         R0, R9 
    /*0000d9e8*/ STR         IP, [SP, #28] 
    /*0000d9ec*/ LDR         IP, [SP, #88]               @ 0x58 
    /*0000d9f0*/ LDR         R1, [SP, #64]               @ 0x40 
    /*0000d9f4*/ STR         R5, [SP, #36]               @ 0x24 
    /*0000d9f8*/ STR         IP, [SP, #24] 
    /*0000d9fc*/ LDR         IP, [SP, #68]               @ 0x44 
    /*0000da00*/ STR         R4, [SP, #32] 
    /*0000da04*/ STR         R7, [SP, #16] 
    /*0000da08*/ STR         IP, [SP, #20] 
    /*0000da0c*/ LDR         IP, [SP, #84]               @ 0x54 
    /*0000da10*/ STR         IP, [SP, #12] 
    /*0000da14*/ LDR         IP, [SP, #80]               @ 0x50 
    /*0000da18*/ STR         IP, [SP, #8] 
    /*0000da1c*/ LDR         IP, [SP, #76]               @ 0x4c 
    /*0000da20*/ STR         IP, [SP, #4] 
    /*0000da24*/ LDR         IP, [SP, #72]               @ 0x48 
    /*0000da28*/ STR         IP, [SP] 
    /*0000da2c*/ BL          0x000000000000DA2C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000da30*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000da34*/ MOV         R0, R9 
    /*0000da38*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000da3c*/ BL          0x000000000000DA3C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcDevAttr_xda40:
    /*0000da40*/ ADD         R6, R6, #1 
    /*0000da44*/ CMP         R6, #2 
    /*0000da48*/ BNE         VI_ProcDevAttr_xd888
    /*0000da4c*/ MOVW        R3, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3684] 
    /*0000da50*/ MOVW        R1, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35e0] 
    /*0000da54*/ MOV         R0, R9 
    /*0000da58*/ MOVT        R1, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35e0] 
    /*0000da5c*/ MOV         R4, R3 
    /*0000da60*/ MOVW        R6, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3678] 
    /*0000da64*/ BL          0x000000000000DA64          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000da68*/ MOVT        R6, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3678] 
    /*0000da6c*/ MOVW        R2, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3670] 
    /*0000da70*/ MOVW        R3, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x365c] 
    /*0000da74*/ MOVT        R2, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3670] 
    /*0000da78*/ MOVT        R3, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x365c] 
    /*0000da7c*/ STR         R2, [SP] 
    /*0000da80*/ MOVW        R1, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3664] 
    /*0000da84*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33f8] 
    /*0000da88*/ MOVT        R1, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3664] 
    /*0000da8c*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33f8] 
    /*0000da90*/ MOV         R0, R9 
    /*0000da94*/ MOV         IP, R4 
    /*0000da98*/ MOVT        IP, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3684] 
    /*0000da9c*/ STR         IP, [SP, #64]               @ 0x40 
    /*0000daa0*/ BL          0x000000000000DAA0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000daa4*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000daa8*/ MOV         R0, R9 
    /*0000daac*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000dab0*/ BL          0x000000000000DAB0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000dab4*/ MOVW        R3, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000dab8*/ STR         SL, [SP, #56]               @ 0x38 
    /*0000dabc*/ MOVT        R3, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000dac0*/ STR         R3, [SP, #68]               @ 0x44 
    VI_ProcDevAttr_xdac4:
    /*0000dac4*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0000dac8*/ ADD         R4, R3, R8, LSL #3 
    /*0000dacc*/ MOV         R0, R4 
    /*0000dad0*/ BL          0x000000000000DAD0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000dad4*/ SUBS        R3, R0, #0 
    /*0000dad8*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0000dadc*/ BNE         VI_ProcDevAttr_xdd50
    /*0000dae0*/ LDR         R3, [FP] 
    /*0000dae4*/ CMP         R3, #0 
    /*0000dae8*/ BEQ         VI_ProcDevAttr_xdd44
    /*0000daec*/ LDR         R3, [FP, #12] 
    /*0000daf0*/ CMP         R3, #0 
    /*0000daf4*/ BEQ         VI_ProcDevAttr_xdb98
    /*0000daf8*/ ADD         R1, SP, #104                @ 0x68 
    /*0000dafc*/ MOV         R0, R8 
    /*0000db00*/ BL          0x000000000000DB00          @ VI_DRV_GetDevBindPipe [R_ARM_CALL: .text+0x31908] 
    /*0000db04*/ MOV         R0, R4 
    /*0000db08*/ BL          0x000000000000DB08          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000db0c*/ LDR         R7, [SP, #104]              @ 0x68 
    /*0000db10*/ SUBS        R3, R7, #1 
    /*0000db14*/ STR         R3, [SP, #72]               @ 0x48 
    /*0000db18*/ BEQ         VI_ProcDevAttr_xdd60
    /*0000db1c*/ ADD         R5, R7, R7, LSL #1 
    /*0000db20*/ ADD         SL, SP, #124                @ 0x7c 
    /*0000db24*/ SUB         R3, R5, #3 
    /*0000db28*/ ADD         R5, SP, #108                @ 0x6c 
    /*0000db2c*/ ADD         R3, SL, R3 
    /*0000db30*/ STR         R7, [SP, #76]               @ 0x4c 
    /*0000db34*/ MOV         R4, SL 
    /*0000db38*/ MOV         R7, R5 
    /*0000db3c*/ MOV         R5, R3 
    VI_ProcDevAttr_xdb40:
    /*0000db40*/ MOV         R0, R4 
    /*0000db44*/ LDR         R2, [R7], #4 
    /*0000db48*/ MOV         R1, R6 
    /*0000db4c*/ ADD         R4, R4, #3 
    /*0000db50*/ BL          0x000000000000DB50          @ osal_sprintf [R_ARM_CALL: +0x0] 
    /*0000db54*/ CMP         R4, R5 
    /*0000db58*/ BNE         VI_ProcDevAttr_xdb40
    /*0000db5c*/ LDR         R7, [SP, #76]               @ 0x4c 
    /*0000db60*/ LDR         R3, [SP, #72]               @ 0x48 
    VI_ProcDevAttr_xdb64:
    /*0000db64*/ ADD         R2, SP, #288                @ 0x120 
    /*0000db68*/ MOV         R0, R4 
    /*0000db6c*/ ADD         R3, R2, R3, LSL #2 
    /*0000db70*/ MOVW        R1, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3680] 
    /*0000db74*/ MOVT        R1, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3680] 
    /*0000db78*/ LDR         R2, [R3, #-180]             @ 0xffffff4c 
    /*0000db7c*/ BL          0x000000000000DB7C          @ osal_sprintf [R_ARM_CALL: +0x0] 
    /*0000db80*/ B           VI_ProcDevAttr_xdbb8
    VI_ProcDevAttr_xdb84:
    /*0000db84*/ BL          0x000000000000DB84          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000db88*/ B           VI_ProcDevAttr_xd770
    VI_ProcDevAttr_xdb8c:
    /*0000db8c*/ MOV         R0, R4 
    /*0000db90*/ BL          0x000000000000DB90          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000db94*/ B           VI_ProcDevAttr_xda40
    VI_ProcDevAttr_xdb98:
    /*0000db98*/ ADD         SL, SP, #124                @ 0x7c 
    /*0000db9c*/ MOV         R0, R4 
    /*0000dba0*/ BL          0x000000000000DBA0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000dba4*/ MVN         R2, #0 
    /*0000dba8*/ MOV         R0, SL 
    /*0000dbac*/ MOV         R1, R6 
    /*0000dbb0*/ BL          0x000000000000DBB0          @ osal_sprintf [R_ARM_CALL: +0x0] 
    /*0000dbb4*/ LDR         R7, [SP, #60]               @ 0x3c 
    VI_ProcDevAttr_xdbb8:
    /*0000dbb8*/ LDR         R1, [SP, #64]               @ 0x40 
    /*0000dbbc*/ MOV         R3, R7 
    /*0000dbc0*/ STR         SL, [SP] 
    /*0000dbc4*/ MOV         R2, R8 
    /*0000dbc8*/ MOV         R0, R9 
    /*0000dbcc*/ BL          0x000000000000DBCC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000dbd0*/ LDR         R1, [SP, #68]               @ 0x44 
    /*0000dbd4*/ MOV         R0, R9 
    /*0000dbd8*/ BL          0x000000000000DBD8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcDevAttr_xdbdc:
    /*0000dbdc*/ ADD         R8, R8, #1 
    /*0000dbe0*/ ADD         FP, FP, #36                 @ 0x24 
    /*0000dbe4*/ CMP         R8, #2 
    /*0000dbe8*/ BNE         VI_ProcDevAttr_xdac4
    /*0000dbec*/ MOVW        R1, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3690] 
    /*0000dbf0*/ MOV         R0, R9 
    /*0000dbf4*/ MOVT        R1, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3690] 
    /*0000dbf8*/ LDR         R4, [SP, #60]               @ 0x3c 
    /*0000dbfc*/ LDR         SL, [SP, #56]               @ 0x38 
    /*0000dc00*/ BL          0x000000000000DC00          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000dc04*/ MOVW        R2, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x372c] 
    /*0000dc08*/ MOVW        R3, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3738] 
    /*0000dc0c*/ MOVT        R2, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0x372c] 
    /*0000dc10*/ MOVT        R3, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3738] 
    /*0000dc14*/ STR         R2, [SP, #8] 
    /*0000dc18*/ MOVW        R1, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3718] 
    /*0000dc1c*/ STR         R3, [SP, #4] 
    /*0000dc20*/ MOVT        R1, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3718] 
    /*0000dc24*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3744] 
    /*0000dc28*/ MOVW        R3, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x370c] 
    /*0000dc2c*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3744] 
    /*0000dc30*/ MOVT        R3, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x370c] 
    /*0000dc34*/ STR         R2, [SP] 
    /*0000dc38*/ MOV         R0, R9 
    /*0000dc3c*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33f8] 
    /*0000dc40*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33f8] 
    /*0000dc44*/ BL          0x000000000000DC44          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000dc48*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000dc4c*/ MOV         R0, R9 
    /*0000dc50*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000dc54*/ BL          0x000000000000DC54          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000dc58*/ MOVW        R7, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000dc5c*/ MOVW        R6, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3750] 
    /*0000dc60*/ MOVW        R5, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000dc64*/ MOVT        R7, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000dc68*/ MOVT        R6, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3750] 
    /*0000dc6c*/ MOVT        R5, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    VI_ProcDevAttr_xdc70:
    /*0000dc70*/ ADD         R8, SL, R4, LSL #3 
    /*0000dc74*/ MOV         R0, R8 
    /*0000dc78*/ BL          0x000000000000DC78          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000dc7c*/ MOV         R3, #36                     @ 0x24 
    /*0000dc80*/ MUL         R3, R3, R4 
    /*0000dc84*/ ADD         R1, SP, #144                @ 0x90 
    /*0000dc88*/ CMP         R0, #0 
    /*0000dc8c*/ MOV         R0, R8 
    /*0000dc90*/ BNE         VI_ProcDevAttr_xdd50
    /*0000dc94*/ MOVW        R2, #0                      @ g_astDevMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x778] 
    /*0000dc98*/ MOVT        R2, #0                      @ g_astDevMkpCtx [R_ARM_MOVT_ABS: .bss+0x778] 
    /*0000dc9c*/ LDR         R3, [R2, R3] 
    /*0000dca0*/ CMP         R3, #0 
    /*0000dca4*/ BEQ         VI_ProcDevAttr_xdce8
    /*0000dca8*/ MOV         R0, R4 
    /*0000dcac*/ BL          0x000000000000DCAC          @ VI_DRV_GetDevAttr [R_ARM_CALL: .text+0x31c8c] 
    /*0000dcb0*/ ADD         R1, SP, #96                 @ 0x60 
    /*0000dcb4*/ MOV         R0, R4 
    /*0000dcb8*/ BL          0x000000000000DCB8          @ VI_DRV_GetTimgAttr [R_ARM_CALL: .text+0x31b1c] 
    /*0000dcbc*/ MOV         R0, R8 
    /*0000dcc0*/ BL          0x000000000000DCC0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000dcc4*/ LDR         R3, [SP, #96]               @ 0x60 
    /*0000dcc8*/ CMP         R3, #1 
    /*0000dccc*/ BEQ         VI_ProcDevAttr_xdd88
    VI_ProcDevAttr_xdcd0:
    /*0000dcd0*/ ADD         R4, R4, #1 
    /*0000dcd4*/ CMP         R4, #2 
    /*0000dcd8*/ BNE         VI_ProcDevAttr_xdc70
    /*0000dcdc*/ MOV         R0, #0 
    /*0000dce0*/ ADD         SP, SP, #292                @ 0x124 
    /*0000dce4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcDevAttr_xdce8:
    /*0000dce8*/ BL          0x000000000000DCE8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000dcec*/ B           VI_ProcDevAttr_xdcd0
    VI_ProcDevAttr_xdcf0:
    /*0000dcf0*/ CMP         R8, #1 
    /*0000dcf4*/ BEQ         VI_ProcDevAttr_xddc4
    /*0000dcf8*/ CMP         R8, #3 
    /*0000dcfc*/ MOVEQ       R2, IP 
    /*0000dd00*/ MOVNE       R2, R3 
    /*0000dd04*/ B           VI_ProcDevAttr_xd700
    VI_ProcDevAttr_xdd08:
    /*0000dd08*/ MOVW        LR, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000dd0c*/ CMP         R3, #1 
    /*0000dd10*/ MOVT        LR, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000dd14*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3310] 
    /*0000dd18*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3310] 
    /*0000dd1c*/ MOVNE       R2, LR 
    /*0000dd20*/ B           VI_ProcDevAttr_xd9cc
    VI_ProcDevAttr_xdd24:
    /*0000dd24*/ CMP         R3, #1 
    /*0000dd28*/ MOVW        R0, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3298] 
    /*0000dd2c*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000dd30*/ MOVT        R0, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3298] 
    /*0000dd34*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000dd38*/ MOVEQ       R7, R0 
    /*0000dd3c*/ MOVNE       R7, R2 
    /*0000dd40*/ B           VI_ProcDevAttr_xd90c
    VI_ProcDevAttr_xdd44:
    /*0000dd44*/ MOV         R0, R4 
    /*0000dd48*/ BL          0x000000000000DD48          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000dd4c*/ B           VI_ProcDevAttr_xdbdc
    VI_ProcDevAttr_xdd50:
    /*0000dd50*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000dd54*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000dd58*/ ADD         SP, SP, #292                @ 0x124 
    /*0000dd5c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcDevAttr_xdd60:
    /*0000dd60*/ ADD         SL, SP, #124                @ 0x7c 
    /*0000dd64*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*0000dd68*/ MOV         R4, SL 
    /*0000dd6c*/ B           VI_ProcDevAttr_xdb64
    VI_ProcDevAttr_xdd70:
    /*0000dd70*/ MOVW        R4, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32a4] 
    /*0000dd74*/ MOVT        R4, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32a4] 
    /*0000dd78*/ B           VI_ProcDevAttr_xd970
    VI_ProcDevAttr_xdd7c:
    /*0000dd7c*/ MOVW        R5, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32a4] 
    /*0000dd80*/ MOVT        R5, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32a4] 
    /*0000dd84*/ B           VI_ProcDevAttr_xd9ac
    VI_ProcDevAttr_xdd88:
    /*0000dd88*/ LDR         R1, [SP, #256]              @ 0x100 
    /*0000dd8c*/ MOV         R3, R7 
    /*0000dd90*/ LDR         R0, [SP, #252]              @ 0xfc 
    /*0000dd94*/ MOV         R2, R4 
    /*0000dd98*/ LDR         IP, [SP, #100]              @ 0x64 
    /*0000dd9c*/ STR         R1, [SP, #8] 
    /*0000dda0*/ MOV         R1, R6 
    /*0000dda4*/ STR         R0, [SP, #4] 
    /*0000dda8*/ MOV         R0, R9 
    /*0000ddac*/ STR         IP, [SP] 
    /*0000ddb0*/ BL          0x000000000000DDB0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ddb4*/ MOV         R1, R5 
    /*0000ddb8*/ MOV         R0, R9 
    /*0000ddbc*/ BL          0x000000000000DDBC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ddc0*/ B           VI_ProcDevAttr_xdcd0
    VI_ProcDevAttr_xddc4:
    /*0000ddc4*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x325c] 
    /*0000ddc8*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x325c] 
    /*0000ddcc*/ B           VI_ProcDevAttr_xd700
    VI_ProcDevAttr_xddd0:
    /*0000ddd0*/ MOVW        R4, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32ac] 
    /*0000ddd4*/ MOVT        R4, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32ac] 
    /*0000ddd8*/ B           VI_ProcDevAttr_xd970
    VI_ProcDevAttr_xdddc:
    /*0000dddc*/ MOVW        R5, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32ac] 
    /*0000dde0*/ MOVT        R5, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32ac] 
    /*0000dde4*/ B           VI_ProcDevAttr_xd9ac
    VI_ProcDevAttr_xdde8:
    /*0000dde8*/ MOVW        R4, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32bc] 
    /*0000ddec*/ MOVT        R4, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32bc] 
    /*0000ddf0*/ B           VI_ProcDevAttr_xd970
    VI_ProcDevAttr_xddf4:
    /*0000ddf4*/ MOVW        R5, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32bc] 
    /*0000ddf8*/ MOVT        R5, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32bc] 
    /*0000ddfc*/ B           VI_ProcDevAttr_xd9ac
FUNC_END VI_ProcDevAttr


FUNC_BEGIN VI_ProcPipeAttr
    /*0000de00*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000de04*/ SUB         SP, SP, #156                @ 0x9c 
    /*0000de08*/ LDR         FP, [PC, #1108]             @ 0x000000000000e264 
    /*0000de0c*/ MOV         SL, R0 
    /*0000de10*/ MOVW        R1, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3764] 
    /*0000de14*/ MOVT        R1, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3764] 
    /*0000de18*/ BL          0x000000000000DE18          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000de1c*/ MOVW        R8, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000de20*/ MOVW        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000de24*/ MOVW        R2, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3820] 
    /*0000de28*/ MOVW        R3, #0                      @ .LC114 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3830] 
    /*0000de2c*/ MOVT        R2, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3820] 
    /*0000de30*/ MOVT        R3, #0                      @ .LC114 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3830] 
    /*0000de34*/ STR         R2, [SP, #32] 
    /*0000de38*/ STR         R3, [SP, #28] 
    /*0000de3c*/ MOVW        R2, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x383c] 
    /*0000de40*/ MOVW        R3, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3844] 
    /*0000de44*/ MOVT        R2, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0x383c] 
    /*0000de48*/ MOVT        R3, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3844] 
    /*0000de4c*/ STR         R2, [SP, #24] 
    /*0000de50*/ STR         R3, [SP, #20] 
    /*0000de54*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3850] 
    /*0000de58*/ MOVW        R3, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x344c] 
    /*0000de5c*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3850] 
    /*0000de60*/ MOVT        R3, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x344c] 
    /*0000de64*/ STR         R2, [SP, #16] 
    /*0000de68*/ STR         R3, [SP, #12] 
    /*0000de6c*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3454] 
    /*0000de70*/ MOVW        R3, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3858] 
    /*0000de74*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3454] 
    /*0000de78*/ MOVT        R3, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3858] 
    /*0000de7c*/ STR         R2, [SP, #8] 
    /*0000de80*/ STR         R3, [SP, #4] 
    /*0000de84*/ MOVW        R2, #0                      @ .LC119 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3864] 
    /*0000de88*/ MOV         R0, SL 
    /*0000de8c*/ MOVT        R2, #0                      @ .LC119 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3864] 
    /*0000de90*/ MOVW        R3, #0                      @ .LC110 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37e0] 
    /*0000de94*/ STR         R2, [SP] 
    /*0000de98*/ MOVT        R3, #0                      @ .LC110 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37e0] 
    /*0000de9c*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000dea0*/ MOVW        R1, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37f4] 
    /*0000dea4*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000dea8*/ MOVT        R1, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37f4] 
    /*0000deac*/ MOVW        R9, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0000deb0*/ MOVT        R8, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000deb4*/ MOVT        R9, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0000deb8*/ MOV         R4, IP 
    /*0000debc*/ MOV         R6, FP 
    /*0000dec0*/ BL          0x000000000000DEC0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000dec4*/ MOV         R5, #0 
    /*0000dec8*/ MOV         R0, SL 
    /*0000decc*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000ded0*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000ded4*/ BL          0x000000000000DED4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ded8*/ MOV         IP, R4 
    /*0000dedc*/ MOVW        R3, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x386c] 
    /*0000dee0*/ MOVT        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000dee4*/ MOVT        R3, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0x386c] 
    /*0000dee8*/ STR         IP, [SP, #64]               @ 0x40 
    /*0000deec*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0000def0*/ STR         IP, [SP, #44]               @ 0x2c 
    /*0000def4*/ STR         FP, [SP, #68]               @ 0x44 
    VI_ProcPipeAttr_xdef8:
    /*0000def8*/ MOV         R0, R6 
    /*0000defc*/ BL          0x000000000000DEFC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000df00*/ SUBS        R3, R0, #0 
    /*0000df04*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000df08*/ BNE         VI_ProcPipeAttr_xe254
    /*0000df0c*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000df10*/ LDR         R3, [R2], #4 
    /*0000df14*/ CMP         R3, #0 
    /*0000df18*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0000df1c*/ BEQ         VI_ProcPipeAttr_xe248
    /*0000df20*/ ADD         R1, SP, #84                 @ 0x54 
    /*0000df24*/ MOV         R0, R5 
    /*0000df28*/ BL          0x000000000000DF28          @ VI_DRV_GetPipeAttr [R_ARM_CALL: .text+0x28674] 
    /*0000df2c*/ MOV         R0, R6 
    /*0000df30*/ BL          0x000000000000DF30          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000df34*/ LDR         R2, [SP, #84]               @ 0x54 
    /*0000df38*/ LDR         R0, [SP, #88]               @ 0x58 
    /*0000df3c*/ CMP         R2, #2 
    /*0000df40*/ LDR         R1, [SP, #92]               @ 0x5c 
    /*0000df44*/ LDR         R7, [SP, #136]              @ 0x88 
    /*0000df48*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000df4c*/ MOVWHI      R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000df50*/ LDR         FP, [SP, #108]              @ 0x6c 
    /*0000df54*/ LDR         LR, [SP, #96]               @ 0x60 
    /*0000df58*/ LDR         R4, [SP, #100]              @ 0x64 
    /*0000df5c*/ STR         LR, [SP, #8] 
    /*0000df60*/ STR         R4, [SP, #12] 
    /*0000df64*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000df68*/ MOVTHI      R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000df6c*/ ADDLS       R3, R3, R2, LSL #2 
    /*0000df70*/ LDR         R2, [SP, #104]              @ 0x68 
    /*0000df74*/ LDRLS       R3, [R3, #148]              @ 0x94 
    /*0000df78*/ CMP         R0, #1 
    /*0000df7c*/ SUB         R2, R2, #17 
    /*0000df80*/ MOVEQ       R0, R8 
    /*0000df84*/ MOVNE       R0, R9 
    /*0000df88*/ CMP         R1, #1 
    /*0000df8c*/ STR         R0, [SP, #52]               @ 0x34 
    /*0000df90*/ MOVEQ       R1, R8 
    /*0000df94*/ MOVNE       R1, R9 
    /*0000df98*/ CMP         R2, #22 
    /*0000df9c*/ STR         R1, [SP, #48]               @ 0x30 
    /*0000dfa0*/ MOVWLS      R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000dfa4*/ MOVTLS      R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000dfa8*/ ADDLS       R2, R1, R2, LSL #2 
    /*0000dfac*/ LDR         R1, [SP, #112]              @ 0x70 
    /*0000dfb0*/ MOVWHI      IP, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000dfb4*/ MOVTHI      IP, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000dfb8*/ LDRLS       IP, [R2, #56]               @ 0x38 
    /*0000dfbc*/ CMP         R1, #4 
    /*0000dfc0*/ MOVWLS      R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000dfc4*/ MOVTLS      R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000dfc8*/ ADDLS       R2, R2, R1, LSL #2 
    /*0000dfcc*/ LDR         R1, [SP, #116]              @ 0x74 
    /*0000dfd0*/ MOVHI       R0, #0 
    /*0000dfd4*/ STR         IP, [SP, #16] 
    /*0000dfd8*/ LDRLS       R0, [R2, #12] 
    /*0000dfdc*/ CMP         R1, #1 
    /*0000dfe0*/ LDR         IP, [SP, #48]               @ 0x30 
    /*0000dfe4*/ MOVEQ       R1, R8 
    /*0000dfe8*/ MOVNE       R1, R9 
    /*0000dfec*/ CMP         R7, #1 
    /*0000dff0*/ STR         R1, [SP, #24] 
    /*0000dff4*/ STR         IP, [SP, #4] 
    /*0000dff8*/ MOVEQ       R7, R8 
    /*0000dffc*/ MOVNE       R7, R9 
    /*0000e000*/ CMP         FP, #4 
    /*0000e004*/ LDR         IP, [SP, #52]               @ 0x34 
    /*0000e008*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*0000e00c*/ MOVWLS      R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000e010*/ MOVTLS      R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000e014*/ ADDLS       R2, R2, FP, LSL #2 
    /*0000e018*/ MOVWHI      R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000e01c*/ STR         R0, [SP, #20] 
    /*0000e020*/ MOVTHI      R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000e024*/ LDRLS       R2, [R2, #160]              @ 0xa0 
    /*0000e028*/ MOV         R0, SL 
    /*0000e02c*/ STR         IP, [SP] 
    /*0000e030*/ STR         R7, [SP, #28] 
    /*0000e034*/ STR         R2, [SP, #32] 
    /*0000e038*/ MOV         R2, R5 
    /*0000e03c*/ BL          0x000000000000E03C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e040*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000e044*/ MOV         R0, SL 
    /*0000e048*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000e04c*/ BL          0x000000000000E04C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcPipeAttr_xe050:
    /*0000e050*/ ADD         R5, R5, #1 
    /*0000e054*/ ADD         R6, R6, #176                @ 0xb0 
    /*0000e058*/ CMP         R5, #4 
    /*0000e05c*/ BNE         VI_ProcPipeAttr_xdef8
    /*0000e060*/ MOVW        R1, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3898] 
    /*0000e064*/ MOV         R0, SL 
    /*0000e068*/ MOVT        R1, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3898] 
    /*0000e06c*/ LDR         FP, [SP, #68]               @ 0x44 
    /*0000e070*/ LDR         R4, [SP, #56]               @ 0x38 
    /*0000e074*/ BL          0x000000000000E074          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e078*/ MOVW        R2, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x394c] 
    /*0000e07c*/ MOVW        R3, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3958] 
    /*0000e080*/ MOVT        R2, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0x394c] 
    /*0000e084*/ MOVT        R3, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3958] 
    /*0000e088*/ STR         R2, [SP, #20] 
    /*0000e08c*/ MOVW        R1, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x392c] 
    /*0000e090*/ STR         R3, [SP, #16] 
    /*0000e094*/ MOVT        R1, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x392c] 
    /*0000e098*/ MOVW        R2, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3960] 
    /*0000e09c*/ MOVW        R3, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3968] 
    /*0000e0a0*/ MOVT        R2, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3960] 
    /*0000e0a4*/ MOVT        R3, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3968] 
    /*0000e0a8*/ STR         R2, [SP, #12] 
    /*0000e0ac*/ MOV         R0, SL 
    /*0000e0b0*/ STR         R3, [SP, #8] 
    /*0000e0b4*/ MOVW        R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3974] 
    /*0000e0b8*/ MOVW        R3, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3980] 
    /*0000e0bc*/ MOVT        R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3974] 
    /*0000e0c0*/ MOVT        R3, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3980] 
    /*0000e0c4*/ STR         R2, [SP, #4] 
    /*0000e0c8*/ STR         R3, [SP] 
    /*0000e0cc*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3920] 
    /*0000e0d0*/ MOVW        R3, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3914] 
    /*0000e0d4*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3920] 
    /*0000e0d8*/ MOVT        R3, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3914] 
    /*0000e0dc*/ MOVW        R7, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000e0e0*/ BL          0x000000000000E0E0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e0e4*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000e0e8*/ MOV         R0, SL 
    /*0000e0ec*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000e0f0*/ BL          0x000000000000E0F0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e0f4*/ MOVT        R7, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000e0f8*/ STR         R7, [SP, #44]               @ 0x2c 
    /*0000e0fc*/ MOVW        R6, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0000e100*/ LDR         R7, [SP, #64]               @ 0x40 
    /*0000e104*/ MOVW        R5, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x398c] 
    /*0000e108*/ MOVT        R6, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0000e10c*/ MOVT        R5, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0x398c] 
    VI_ProcPipeAttr_xe110:
    /*0000e110*/ MOV         R0, FP 
    /*0000e114*/ BL          0x000000000000E114          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000e118*/ CMP         R0, #0 
    /*0000e11c*/ BNE         VI_ProcPipeAttr_xe254
    /*0000e120*/ LDR         R3, [R7], #4 
    /*0000e124*/ CMP         R3, #0 
    /*0000e128*/ BEQ         VI_ProcPipeAttr_xe218
    /*0000e12c*/ ADD         R1, SP, #84                 @ 0x54 
    /*0000e130*/ MOV         R0, R4 
    /*0000e134*/ BL          0x000000000000E134          @ VI_DRV_GetPipeAttr [R_ARM_CALL: .text+0x28674] 
    /*0000e138*/ ADD         R1, SP, #72                 @ 0x48 
    /*0000e13c*/ MOV         R0, R4 
    /*0000e140*/ BL          0x000000000000E140          @ VI_DRV_GetPipeRawSource [R_ARM_CALL: .text+0x303c8] 
    /*0000e144*/ ADD         R1, SP, #76                 @ 0x4c 
    /*0000e148*/ MOV         R0, R4 
    /*0000e14c*/ BL          0x000000000000E14C          @ VI_DRV_GetPipeFrameInterruptAttr [R_ARM_CALL: .text+0x33b9c] 
    /*0000e150*/ LDR         R2, [SP, #148]              @ 0x94 
    /*0000e154*/ LDR         IP, [SP, #72]               @ 0x48 
    /*0000e158*/ CMP         R2, #1 
    /*0000e15c*/ LDR         R1, [R7, #-4] 
    /*0000e160*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000e164*/ ADD         R0, R1, #36864              @ 0x9000 
    /*0000e168*/ MOVNE       R3, R6 
    /*0000e16c*/ CMP         IP, #2 
    /*0000e170*/ LDR         LR, [SP, #144]              @ 0x90 
    /*0000e174*/ LDR         R8, [R0, #2040]             @ 0x7f8 
    /*0000e178*/ MOV         R2, R3 
    /*0000e17c*/ MOVWLS      R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000e180*/ MOVTLS      R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000e184*/ ADDLS       R0, R0, IP, LSL #2 
    /*0000e188*/ MOVWHI      IP, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000e18c*/ MOVTHI      IP, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000e190*/ LDR         R3, [SP, #140]              @ 0x8c 
    /*0000e194*/ LDRLS       IP, [R0, #208]              @ 0xd0 
    /*0000e198*/ CMP         R8, #0 
    /*0000e19c*/ BEQ         VI_ProcPipeAttr_xe23c
    /*0000e1a0*/ MOVW        R9, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x332c] 
    /*0000e1a4*/ CMP         R8, #1 
    /*0000e1a8*/ MOVT        R9, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x332c] 
    /*0000e1ac*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000e1b0*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000e1b4*/ MOVEQ       R0, R9 
    VI_ProcPipeAttr_xe1b8:
    /*0000e1b8*/ LDR         R9, [SP, #76]               @ 0x4c 
    /*0000e1bc*/ ADD         R1, R1, #12288              @ 0x3000 
    /*0000e1c0*/ CMP         R9, #2 
    /*0000e1c4*/ LDR         R8, [R1, #2220]             @ 0x8ac 
    /*0000e1c8*/ STR         R0, [SP, #8] 
    /*0000e1cc*/ MOV         R0, SL 
    /*0000e1d0*/ MOVWLS      R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000e1d4*/ MOVTLS      R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000e1d8*/ ADDLS       R9, R1, R9, LSL #2 
    /*0000e1dc*/ MOVWHI      R1, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000e1e0*/ STR         R8, [SP, #12] 
    /*0000e1e4*/ MOVTHI      R1, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000e1e8*/ LDRLS       R1, [R9, #236]              @ 0xec 
    /*0000e1ec*/ LDR         R9, [SP, #80]               @ 0x50 
    /*0000e1f0*/ STR         IP, [SP, #4] 
    /*0000e1f4*/ STR         R1, [SP, #16] 
    /*0000e1f8*/ MOV         R1, R5 
    /*0000e1fc*/ STR         LR, [SP] 
    /*0000e200*/ STR         R9, [SP, #20] 
    /*0000e204*/ BL          0x000000000000E204          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e208*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000e20c*/ MOV         R0, SL 
    /*0000e210*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000e214*/ BL          0x000000000000E214          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcPipeAttr_xe218:
    /*0000e218*/ MOV         R0, FP 
    /*0000e21c*/ ADD         R4, R4, #1 
    /*0000e220*/ BL          0x000000000000E220          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e224*/ CMP         R4, #4 
    /*0000e228*/ ADD         FP, FP, #176                @ 0xb0 
    /*0000e22c*/ BNE         VI_ProcPipeAttr_xe110
    /*0000e230*/ MOV         R0, #0 
    /*0000e234*/ ADD         SP, SP, #156                @ 0x9c 
    /*0000e238*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcPipeAttr_xe23c:
    /*0000e23c*/ MOVW        R0, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x329c] 
    /*0000e240*/ MOVT        R0, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x329c] 
    /*0000e244*/ B           VI_ProcPipeAttr_xe1b8
    VI_ProcPipeAttr_xe248:
    /*0000e248*/ MOV         R0, R6 
    /*0000e24c*/ BL          0x000000000000E24C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e250*/ B           VI_ProcPipeAttr_xe050
    VI_ProcPipeAttr_xe254:
    /*0000e254*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000e258*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000e25c*/ ADD         SP, SP, #156                @ 0x9c 
    /*0000e260*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000e264*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcPipeAttr


FUNC_BEGIN VI_ProcPipeCropAttr
    /*0000e268*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000e26c*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0000e270*/ MOV         R7, R0 
    /*0000e274*/ MOVW        R1, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x39ac] 
    /*0000e278*/ MOVT        R1, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0x39ac] 
    /*0000e27c*/ LDR         R5, [PC, #324]              @ 0x000000000000e3c8 
    /*0000e280*/ BL          0x000000000000E280          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e284*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x344c] 
    /*0000e288*/ MOVW        R3, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3454] 
    /*0000e28c*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x344c] 
    /*0000e290*/ MOVT        R3, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3454] 
    /*0000e294*/ STR         R2, [SP, #12] 
    /*0000e298*/ STR         R3, [SP, #8] 
    /*0000e29c*/ MOVW        R2, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a44] 
    /*0000e2a0*/ MOVW        R3, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a4c] 
    /*0000e2a4*/ MOVT        R2, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a44] 
    /*0000e2a8*/ MOVT        R3, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a4c] 
    /*0000e2ac*/ STR         R2, [SP, #4] 
    /*0000e2b0*/ STR         R3, [SP] 
    /*0000e2b4*/ MOV         R0, R7 
    /*0000e2b8*/ MOVW        R3, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a28] 
    /*0000e2bc*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000e2c0*/ MOVT        R3, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a28] 
    /*0000e2c4*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000e2c8*/ MOVW        R1, #0                      @ .LC134 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a30] 
    /*0000e2cc*/ MOVT        R1, #0                      @ .LC134 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a30] 
    /*0000e2d0*/ BL          0x000000000000E2D0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e2d4*/ MOV         R0, R7 
    /*0000e2d8*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000e2dc*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000e2e0*/ BL          0x000000000000E2E0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e2e4*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000e2e8*/ MOVW        SL, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000e2ec*/ MOVW        R9, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0000e2f0*/ MOVW        R8, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a54] 
    /*0000e2f4*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000e2f8*/ MOVT        SL, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000e2fc*/ MOVT        R9, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0000e300*/ MOVT        R8, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a54] 
    /*0000e304*/ MOV         R4, #0 
    VI_ProcPipeCropAttr_xe308:
    /*0000e308*/ MOV         R0, R5 
    /*0000e30c*/ BL          0x000000000000E30C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000e310*/ ADD         R1, SP, #20 
    /*0000e314*/ CMP         R0, #0 
    /*0000e318*/ MOV         R0, R4 
    /*0000e31c*/ BNE         VI_ProcPipeCropAttr_xe3b8
    /*0000e320*/ LDR         R3, [R6], #4 
    /*0000e324*/ CMP         R3, #0 
    /*0000e328*/ BEQ         VI_ProcPipeCropAttr_xe3ac
    /*0000e32c*/ BL          0x000000000000E32C          @ VI_DRV_GetPipeCrop [R_ARM_CALL: .text+0x286fc] 
    /*0000e330*/ MOV         R0, R5 
    /*0000e334*/ BL          0x000000000000E334          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e338*/ LDR         R3, [SP, #20] 
    /*0000e33c*/ MOV         R2, R4 
    /*0000e340*/ MOV         R1, R8 
    /*0000e344*/ CMP         R3, #0 
    /*0000e348*/ MOV         R0, R7 
    /*0000e34c*/ BEQ         VI_ProcPipeCropAttr_xe390
    /*0000e350*/ LDR         LR, [SP, #36]               @ 0x24 
    /*0000e354*/ CMP         R3, #1 
    /*0000e358*/ LDR         FP, [SP, #32] 
    /*0000e35c*/ LDR         IP, [SP, #28] 
    /*0000e360*/ MOVEQ       R3, SL 
    /*0000e364*/ STR         LR, [SP, #12] 
    /*0000e368*/ MOVNE       R3, R9 
    /*0000e36c*/ LDR         LR, [SP, #24] 
    /*0000e370*/ STR         FP, [SP, #8] 
    /*0000e374*/ STR         IP, [SP, #4] 
    /*0000e378*/ STR         LR, [SP] 
    /*0000e37c*/ BL          0x000000000000E37C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e380*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000e384*/ MOV         R0, R7 
    /*0000e388*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000e38c*/ BL          0x000000000000E38C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcPipeCropAttr_xe390:
    /*0000e390*/ ADD         R4, R4, #1 
    /*0000e394*/ ADD         R5, R5, #176                @ 0xb0 
    /*0000e398*/ CMP         R4, #4 
    /*0000e39c*/ BNE         VI_ProcPipeCropAttr_xe308
    /*0000e3a0*/ MOV         R0, #0 
    /*0000e3a4*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0000e3a8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcPipeCropAttr_xe3ac:
    /*0000e3ac*/ MOV         R0, R5 
    /*0000e3b0*/ BL          0x000000000000E3B0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e3b4*/ B           VI_ProcPipeCropAttr_xe390
    VI_ProcPipeCropAttr_xe3b8:
    /*0000e3b8*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000e3bc*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000e3c0*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0000e3c4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000e3c8*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcPipeCropAttr


FUNC_BEGIN VI_ProcPipeNRAttr
    /*0000e3cc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000e3d0*/ SUB         SP, SP, #124                @ 0x7c 
    /*0000e3d4*/ MOV         R8, R0 
    /*0000e3d8*/ MOVW        R1, #0                      @ .LC138 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a68] 
    /*0000e3dc*/ LDR         R5, [PC, #668]              @ 0x000000000000e680 
    /*0000e3e0*/ MOVT        R1, #0                      @ .LC138 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a68] 
    /*0000e3e4*/ BL          0x000000000000E3E4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e3e8*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000e3ec*/ MOVW        R2, #0                      @ .LC140 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b04] 
    /*0000e3f0*/ MOVW        R3, #0                      @ .LC141 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b0c] 
    /*0000e3f4*/ MOVT        R2, #0                      @ .LC140 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b04] 
    /*0000e3f8*/ MOVT        R3, #0                      @ .LC141 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b0c] 
    /*0000e3fc*/ STR         R2, [SP, #20] 
    /*0000e400*/ MOV         R0, R8 
    /*0000e404*/ STR         R3, [SP, #16] 
    /*0000e408*/ MOVW        R2, #0                      @ .LC142 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b14] 
    /*0000e40c*/ MOVW        R3, #0                      @ .LC143 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b1c] 
    /*0000e410*/ MOVT        R2, #0                      @ .LC142 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b14] 
    /*0000e414*/ MOVT        R3, #0                      @ .LC143 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b1c] 
    /*0000e418*/ STR         R2, [SP, #12] 
    /*0000e41c*/ STR         R3, [SP, #8] 
    /*0000e420*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3850] 
    /*0000e424*/ MOVW        R3, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3820] 
    /*0000e428*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3850] 
    /*0000e42c*/ MOVT        R3, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3820] 
    /*0000e430*/ STR         R2, [SP, #4] 
    /*0000e434*/ STR         R3, [SP] 
    /*0000e438*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000e43c*/ MOVW        R3, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3844] 
    /*0000e440*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000e444*/ MOVT        R3, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3844] 
    /*0000e448*/ MOVW        R1, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ae4] 
    /*0000e44c*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1290] 
    /*0000e450*/ MOVT        R1, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ae4] 
    /*0000e454*/ MOVW        FP, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x333c] 
    /*0000e458*/ MOVW        R7, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000e45c*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000e460*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1290] 
    /*0000e464*/ MOVT        FP, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x333c] 
    /*0000e468*/ MOVT        R7, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000e46c*/ BL          0x000000000000E46C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e470*/ MOV         R4, #0 
    /*0000e474*/ MOV         R0, R8 
    /*0000e478*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000e47c*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000e480*/ BL          0x000000000000E480          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e484*/ MOV         R3, #1 
    /*0000e488*/ STR         R3, [SP, #28] 
    VI_ProcPipeNRAttr_xe48c:
    /*0000e48c*/ MOV         R0, R5 
    /*0000e490*/ BL          0x000000000000E490          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000e494*/ CMP         R0, #0 
    /*0000e498*/ BNE         VI_ProcPipeNRAttr_xe670
    /*0000e49c*/ LDR         R3, [R6], #4 
    /*0000e4a0*/ CMP         R3, #0 
    /*0000e4a4*/ BEQ         VI_ProcPipeNRAttr_xe4c0
    /*0000e4a8*/ ADD         R1, SP, #52                 @ 0x34 
    /*0000e4ac*/ MOV         R0, R4 
    /*0000e4b0*/ BL          0x000000000000E4B0          @ VI_DRV_GetPipeAttr [R_ARM_CALL: .text+0x28674] 
    /*0000e4b4*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0000e4b8*/ CMP         R3, #0 
    /*0000e4bc*/ BNE         VI_ProcPipeNRAttr_xe4e4
    VI_ProcPipeNRAttr_xe4c0:
    /*0000e4c0*/ MOV         R0, R5 
    /*0000e4c4*/ ADD         R4, R4, #1 
    /*0000e4c8*/ BL          0x000000000000E4C8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e4cc*/ CMP         R4, #4 
    /*0000e4d0*/ ADD         R5, R5, #176                @ 0xb0 
    /*0000e4d4*/ BNE         VI_ProcPipeNRAttr_xe48c
    /*0000e4d8*/ MOV         R0, #0 
    /*0000e4dc*/ ADD         SP, SP, #124                @ 0x7c 
    /*0000e4e0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcPipeNRAttr_xe4e4:
    /*0000e4e4*/ ADD         R1, SP, #44                 @ 0x2c 
    /*0000e4e8*/ MOV         R0, R4 
    /*0000e4ec*/ BL          0x000000000000E4EC          @ VI_DRV_GetNRInterfaceType [R_ARM_CALL: .text+0x31228] 
    /*0000e4f0*/ ADD         R2, SP, #48                 @ 0x30 
    /*0000e4f4*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0000e4f8*/ MOV         R0, R4 
    /*0000e4fc*/ BL          0x000000000000E4FC          @ VI_DRV_GetNRVersion [R_ARM_CALL: .text+0x31238] 
    /*0000e500*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000e504*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1290] 
    /*0000e508*/ MOV         R0, R4 
    /*0000e50c*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1290] 
    /*0000e510*/ STR         R3, [R9] 
    /*0000e514*/ BL          0x000000000000E514          @ VI_DRV_GetPipeNRXParam [R_ARM_CALL: .text+0x311b0] 
    /*0000e518*/ LDR         R1, [SP, #48]               @ 0x30 
    /*0000e51c*/ CMP         R1, #1 
    /*0000e520*/ BEQ         VI_ProcPipeNRAttr_xe664
    /*0000e524*/ CMP         R1, #2 
    /*0000e528*/ BEQ         VI_ProcPipeNRAttr_xe664
    VI_ProcPipeNRAttr_xe52c:
    /*0000e52c*/ LDR         R2, [SP, #92]               @ 0x5c 
    /*0000e530*/ LDR         R0, [SP, #100]              @ 0x64 
    /*0000e534*/ CMP         R2, #4 
    /*0000e538*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000e53c*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000e540*/ ADDLS       R3, R3, R2, LSL #2 
    /*0000e544*/ MOVHI       R3, #0 
    /*0000e548*/ LDRLS       R3, [R3, #12] 
    /*0000e54c*/ CMP         R0, #4 
    /*0000e550*/ STRHI       R7, [SP, #32] 
    /*0000e554*/ MOVWLS      R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000e558*/ MOVTLS      R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000e55c*/ ADDLS       R2, R2, R0, LSL #2 
    /*0000e560*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000e564*/ LDRLS       R3, [R2, #160]              @ 0xa0 
    /*0000e568*/ LDR         R2, [SP, #88]               @ 0x58 
    /*0000e56c*/ SUB         R2, R2, #17 
    /*0000e570*/ STRLS       R3, [SP, #32] 
    /*0000e574*/ CMP         R2, #22 
    /*0000e578*/ MOVWLS      R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000e57c*/ MOVTLS      R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000e580*/ ADDLS       R2, R0, R2, LSL #2 
    /*0000e584*/ LDR         R0, [SP, #96]               @ 0x60 
    /*0000e588*/ MOVHI       IP, R7 
    /*0000e58c*/ LDRLS       IP, [R2, #56]               @ 0x38 
    /*0000e590*/ CMP         R0, #0 
    /*0000e594*/ MOVWEQ      R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000e598*/ MOVTEQ      R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000e59c*/ BNE         VI_ProcPipeNRAttr_xe648
    VI_ProcPipeNRAttr_xe5a0:
    /*0000e5a0*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000e5a4*/ SUB         R1, R1, #1 
    /*0000e5a8*/ LDR         R3, [SP, #28] 
    /*0000e5ac*/ CMP         R0, #0 
    /*0000e5b0*/ MOVEQ       R0, FP 
    /*0000e5b4*/ MOVNE       R0, R7 
    /*0000e5b8*/ CMP         R1, #3 
    /*0000e5bc*/ MOVWLS      LR, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000e5c0*/ MOVTLS      LR, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000e5c4*/ ADDLS       R1, LR, R1, LSL #2 
    /*0000e5c8*/ MOVHI       LR, R7 
    /*0000e5cc*/ LDRLS       LR, [R1, #220]              @ 0xdc 
    /*0000e5d0*/ CMP         R3, #0 
    /*0000e5d4*/ MOV         R1, R3 
    /*0000e5d8*/ MOVWEQ      R1, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3344] 
    /*0000e5dc*/ MOVTEQ      R1, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3344] 
    /*0000e5e0*/ BNE         VI_ProcPipeNRAttr_xe62c
    VI_ProcPipeNRAttr_xe5e4:
    /*0000e5e4*/ STR         IP, [SP, #4] 
    /*0000e5e8*/ LDR         IP, [SP, #32] 
    /*0000e5ec*/ STR         R1, [SP, #20] 
    /*0000e5f0*/ MOVW        R1, #0                      @ .LC144 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b24] 
    /*0000e5f4*/ STR         R0, [SP, #12] 
    /*0000e5f8*/ MOVT        R1, #0                      @ .LC144 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b24] 
    /*0000e5fc*/ STR         R2, [SP, #8] 
    /*0000e600*/ MOV         R0, R8 
    /*0000e604*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000e608*/ MOV         R2, R4 
    /*0000e60c*/ STR         LR, [SP, #16] 
    /*0000e610*/ STR         IP, [SP] 
    /*0000e614*/ BL          0x000000000000E614          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e618*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000e61c*/ MOV         R0, R8 
    /*0000e620*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000e624*/ BL          0x000000000000E624          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e628*/ B           VI_ProcPipeNRAttr_xe4c0
    VI_ProcPipeNRAttr_xe62c:
    /*0000e62c*/ MOVW        SL, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000e630*/ CMP         R3, #1 
    /*0000e634*/ MOVT        SL, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000e638*/ MOVW        R1, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000e63c*/ MOVT        R1, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000e640*/ MOVNE       R1, SL 
    /*0000e644*/ B           VI_ProcPipeNRAttr_xe5e4
    VI_ProcPipeNRAttr_xe648:
    /*0000e648*/ MOVW        LR, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3318] 
    /*0000e64c*/ CMP         R0, #1 
    /*0000e650*/ MOVT        LR, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3318] 
    /*0000e654*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3248] 
    /*0000e658*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3248] 
    /*0000e65c*/ MOVEQ       R2, LR 
    /*0000e660*/ B           VI_ProcPipeNRAttr_xe5a0
    VI_ProcPipeNRAttr_xe664:
    /*0000e664*/ LDR         R3, [R9, #4] 
    /*0000e668*/ STR         R3, [SP, #28] 
    /*0000e66c*/ B           VI_ProcPipeNRAttr_xe52c
    VI_ProcPipeNRAttr_xe670:
    /*0000e670*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000e674*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000e678*/ ADD         SP, SP, #124                @ 0x7c 
    /*0000e67c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000e680*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcPipeNRAttr


FUNC_BEGIN VI_ProcPipeNRXV2Param
    /*0000e684*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000e688*/ SUB         SP, SP, #36                 @ 0x24 
    /*0000e68c*/ MOV         R7, R0 
    /*0000e690*/ MOVW        R1, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b44] 
    /*0000e694*/ MOVT        R1, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b44] 
    /*0000e698*/ LDR         R5, [PC, #248]              @ 0x000000000000e798 
    /*0000e69c*/ BL          0x000000000000E69C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e6a0*/ MOVW        R2, #0                      @ .LC148 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bec] 
    /*0000e6a4*/ MOVW        R3, #0                      @ .LC149 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bf4] 
    /*0000e6a8*/ MOVT        R2, #0                      @ .LC148 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bec] 
    /*0000e6ac*/ MOVT        R3, #0                      @ .LC149 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bf4] 
    /*0000e6b0*/ STR         R2, [SP, #28] 
    /*0000e6b4*/ STR         R3, [SP, #24] 
    /*0000e6b8*/ MOVW        R2, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bfc] 
    /*0000e6bc*/ MOVW        R3, #0                      @ .LC151 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c04] 
    /*0000e6c0*/ MOVT        R2, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bfc] 
    /*0000e6c4*/ MOVT        R3, #0                      @ .LC151 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c04] 
    /*0000e6c8*/ STR         R2, [SP, #20] 
    /*0000e6cc*/ STR         R3, [SP, #16] 
    /*0000e6d0*/ MOVW        R2, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c0c] 
    /*0000e6d4*/ MOVW        R3, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c14] 
    /*0000e6d8*/ MOVT        R2, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c0c] 
    /*0000e6dc*/ MOVT        R3, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c14] 
    /*0000e6e0*/ STR         R2, [SP, #12] 
    /*0000e6e4*/ STR         R3, [SP, #8] 
    /*0000e6e8*/ MOVW        R2, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c1c] 
    /*0000e6ec*/ MOVW        R3, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c24] 
    /*0000e6f0*/ MOVT        R2, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c1c] 
    /*0000e6f4*/ MOVT        R3, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c24] 
    /*0000e6f8*/ STR         R2, [SP, #4] 
    /*0000e6fc*/ STR         R3, [SP] 
    /*0000e700*/ MOV         R0, R7 
    /*0000e704*/ MOVW        R3, #0                      @ .LC146 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bc0] 
    /*0000e708*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000e70c*/ MOVT        R3, #0                      @ .LC146 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bc0] 
    /*0000e710*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000e714*/ MOVW        R1, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bc4] 
    /*0000e718*/ MOVT        R1, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bc4] 
    /*0000e71c*/ BL          0x000000000000E71C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e720*/ MOV         R0, R7 
    /*0000e724*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000e728*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000e72c*/ BL          0x000000000000E72C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e730*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000e734*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000e738*/ MOV         R4, #0 
    VI_ProcPipeNRXV2Param_xe73c:
    /*0000e73c*/ MOV         R0, R5 
    /*0000e740*/ BL          0x000000000000E740          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000e744*/ MOV         R1, R7 
    /*0000e748*/ CMP         R0, #0 
    /*0000e74c*/ MOV         R0, R4 
    /*0000e750*/ BNE         VI_ProcPipeNRXV2Param_xe788
    /*0000e754*/ LDR         R3, [R6], #4 
    /*0000e758*/ CMP         R3, #0 
    /*0000e75c*/ BEQ         VI_ProcPipeNRXV2Param_xe764
    /*0000e760*/ BL          0x000000000000E760          @ VI_DRV_ProcPipeNRXV2Param [R_ARM_CALL: .text+0x31264] 
    VI_ProcPipeNRXV2Param_xe764:
    /*0000e764*/ MOV         R0, R5 
    /*0000e768*/ ADD         R4, R4, #1 
    /*0000e76c*/ BL          0x000000000000E76C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e770*/ CMP         R4, #4 
    /*0000e774*/ ADD         R5, R5, #176                @ 0xb0 
    /*0000e778*/ BNE         VI_ProcPipeNRXV2Param_xe73c
    /*0000e77c*/ MOV         R0, #0 
    /*0000e780*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000e784*/ POP         {R4, R5, R6, R7, PC} 
    VI_ProcPipeNRXV2Param_xe788:
    /*0000e788*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000e78c*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000e790*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000e794*/ POP         {R4, R5, R6, R7, PC} 
    /*0000e798*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcPipeNRXV2Param


FUNC_BEGIN VI_ProcPipeNRXV1Param
    /*0000e79c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000e7a0*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000e7a4*/ MOV         R7, R0 
    /*0000e7a8*/ MOVW        R1, #0                      @ .LC156 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c2c] 
    /*0000e7ac*/ MOVT        R1, #0                      @ .LC156 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c2c] 
    /*0000e7b0*/ LDR         R5, [PC, #332]              @ 0x000000000000e904 
    /*0000e7b4*/ BL          0x000000000000E7B4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e7b8*/ MOVW        R2, #0                      @ .LC158 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ce0] 
    /*0000e7bc*/ MOVW        R3, #0                      @ .LC159 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ce8] 
    /*0000e7c0*/ MOVT        R2, #0                      @ .LC158 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ce0] 
    /*0000e7c4*/ MOVT        R3, #0                      @ .LC159 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ce8] 
    /*0000e7c8*/ STR         R2, [SP, #56]               @ 0x38 
    /*0000e7cc*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000e7d0*/ MOVW        R2, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cec] 
    /*0000e7d4*/ MOVW        R3, #0                      @ .LC161 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cf0] 
    /*0000e7d8*/ MOVT        R2, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cec] 
    /*0000e7dc*/ MOVT        R3, #0                      @ .LC161 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cf0] 
    /*0000e7e0*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000e7e4*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000e7e8*/ MOVW        R2, #0                      @ .LC162 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cf4] 
    /*0000e7ec*/ MOVW        R3, #0                      @ .LC163 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cfc] 
    /*0000e7f0*/ MOVT        R2, #0                      @ .LC162 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cf4] 
    /*0000e7f4*/ MOVT        R3, #0                      @ .LC163 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cfc] 
    /*0000e7f8*/ STR         R2, [SP, #40]               @ 0x28 
    /*0000e7fc*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000e800*/ MOVW        R2, #0                      @ .LC149 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bf4] 
    /*0000e804*/ MOVW        R3, #0                      @ .LC164 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d04] 
    /*0000e808*/ MOVT        R2, #0                      @ .LC149 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bf4] 
    /*0000e80c*/ MOVT        R3, #0                      @ .LC164 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d04] 
    /*0000e810*/ STR         R2, [SP, #32] 
    /*0000e814*/ STR         R3, [SP, #28] 
    /*0000e818*/ MOVW        R2, #0                      @ .LC165 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d0c] 
    /*0000e81c*/ MOVW        R3, #0                      @ .LC166 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d14] 
    /*0000e820*/ MOVT        R2, #0                      @ .LC165 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d0c] 
    /*0000e824*/ MOVT        R3, #0                      @ .LC166 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d14] 
    /*0000e828*/ STR         R2, [SP, #24] 
    /*0000e82c*/ STR         R3, [SP, #20] 
    /*0000e830*/ MOVW        R2, #0                      @ .LC167 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d1c] 
    /*0000e834*/ MOVW        R3, #0                      @ .LC168 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d24] 
    /*0000e838*/ MOVT        R2, #0                      @ .LC167 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d1c] 
    /*0000e83c*/ MOVT        R3, #0                      @ .LC168 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d24] 
    /*0000e840*/ STR         R2, [SP, #16] 
    /*0000e844*/ STR         R3, [SP, #12] 
    /*0000e848*/ MOVW        R2, #0                      @ .LC169 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d2c] 
    /*0000e84c*/ MOVW        R3, #0                      @ .LC170 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d34] 
    /*0000e850*/ MOVT        R2, #0                      @ .LC169 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d2c] 
    /*0000e854*/ MOVT        R3, #0                      @ .LC170 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d34] 
    /*0000e858*/ STR         R2, [SP, #8] 
    /*0000e85c*/ STR         R3, [SP, #4] 
    /*0000e860*/ MOVW        R2, #0                      @ .LC171 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d3c] 
    /*0000e864*/ MOV         R0, R7 
    /*0000e868*/ MOVT        R2, #0                      @ .LC171 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d3c] 
    /*0000e86c*/ MOVW        R3, #0                      @ .LC146 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bc0] 
    /*0000e870*/ STR         R2, [SP] 
    /*0000e874*/ MOVT        R3, #0                      @ .LC146 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bc0] 
    /*0000e878*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000e87c*/ MOVW        R1, #0                      @ .LC157 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ca8] 
    /*0000e880*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000e884*/ MOVT        R1, #0                      @ .LC157 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ca8] 
    /*0000e888*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000e88c*/ BL          0x000000000000E88C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e890*/ MOV         R0, R7 
    /*0000e894*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000e898*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000e89c*/ BL          0x000000000000E89C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e8a0*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000e8a4*/ MOV         R4, #0 
    VI_ProcPipeNRXV1Param_xe8a8:
    /*0000e8a8*/ MOV         R0, R5 
    /*0000e8ac*/ BL          0x000000000000E8AC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000e8b0*/ MOV         R1, R7 
    /*0000e8b4*/ CMP         R0, #0 
    /*0000e8b8*/ MOV         R0, R4 
    /*0000e8bc*/ BNE         VI_ProcPipeNRXV1Param_xe8f4
    /*0000e8c0*/ LDR         R3, [R6], #4 
    /*0000e8c4*/ CMP         R3, #0 
    /*0000e8c8*/ BEQ         VI_ProcPipeNRXV1Param_xe8d0
    /*0000e8cc*/ BL          0x000000000000E8CC          @ VI_DRV_ProcPipeNRXV1Param [R_ARM_CALL: .text+0x3125c] 
    VI_ProcPipeNRXV1Param_xe8d0:
    /*0000e8d0*/ MOV         R0, R5 
    /*0000e8d4*/ ADD         R4, R4, #1 
    /*0000e8d8*/ BL          0x000000000000E8D8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e8dc*/ CMP         R4, #4 
    /*0000e8e0*/ ADD         R5, R5, #176                @ 0xb0 
    /*0000e8e4*/ BNE         VI_ProcPipeNRXV1Param_xe8a8
    /*0000e8e8*/ MOV         R0, #0 
    /*0000e8ec*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000e8f0*/ POP         {R4, R5, R6, R7, PC} 
    VI_ProcPipeNRXV1Param_xe8f4:
    /*0000e8f4*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000e8f8*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000e8fc*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000e900*/ POP         {R4, R5, R6, R7, PC} 
    /*0000e904*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcPipeNRXV1Param


FUNC_BEGIN VI_ProcPipeNRXParam
    /*0000e908*/ PUSH        {R4, LR} 
    /*0000e90c*/ MOV         R4, R0 
    /*0000e910*/ BL          0x000000000000E910          @ VI_DRV_IsNRXV1ParamSupport [R_ARM_CALL: .text+0x31218] 
    /*0000e914*/ CMP         R0, #1 
    /*0000e918*/ BEQ         VI_ProcPipeNRXParam_xe930
    /*0000e91c*/ BL          0x000000000000E91C          @ VI_DRV_IsNRXV2ParamSupport [R_ARM_CALL: .text+0x31220] 
    /*0000e920*/ CMP         R0, #1 
    /*0000e924*/ BEQ         VI_ProcPipeNRXParam_xe93c
    /*0000e928*/ MOV         R0, #0 
    /*0000e92c*/ POP         {R4, PC} 
    VI_ProcPipeNRXParam_xe930:
    /*0000e930*/ MOV         R0, R4 
    /*0000e934*/ POP         {R4, LR} 
    VI_ProcPipeNRXParam_xe938:
    /*0000e938*/ B           VI_ProcPipeNRXParam_xe938   @ VI_ProcPipeNRXV1Param [R_ARM_JUMP24: .text+0xe79c] 
    VI_ProcPipeNRXParam_xe93c:
    /*0000e93c*/ MOV         R0, R4 
    /*0000e940*/ POP         {R4, LR} 
    VI_ProcPipeNRXParam_xe944:
    /*0000e944*/ B           VI_ProcPipeNRXParam_xe944   @ VI_ProcPipeNRXV2Param [R_ARM_JUMP24: .text+0xe684] 
FUNC_END VI_ProcPipeNRXParam


FUNC_BEGIN VI_ProcPipeUserPicAttr
    /*0000e948*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000e94c*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000e950*/ MOV         R8, R0 
    /*0000e954*/ MOVW        R1, #0                      @ .LC172 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d44] 
    /*0000e958*/ LDR         R4, [PC, #808]              @ 0x000000000000ec88 
    /*0000e95c*/ MOVT        R1, #0                      @ .LC172 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d44] 
    /*0000e960*/ LDR         R6, [PC, #804]              @ 0x000000000000ec8c 
    /*0000e964*/ BL          0x000000000000E964          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e968*/ MOVW        R7, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000e96c*/ MOVW        R2, #0                      @ .LC175 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3df0] 
    /*0000e970*/ MOVW        R3, #0                      @ .LC176 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3df8] 
    /*0000e974*/ MOVT        R2, #0                      @ .LC175 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3df0] 
    /*0000e978*/ MOVT        R3, #0                      @ .LC176 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3df8] 
    /*0000e97c*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000e980*/ STR         R3, [SP, #32] 
    /*0000e984*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3850] 
    /*0000e988*/ MOVW        R3, #0                      @ .LC177 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e00] 
    /*0000e98c*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3850] 
    /*0000e990*/ MOVT        R3, #0                      @ .LC177 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e00] 
    /*0000e994*/ STR         R2, [SP, #28] 
    /*0000e998*/ STR         R3, [SP, #24] 
    /*0000e99c*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x344c] 
    /*0000e9a0*/ MOVW        R3, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3454] 
    /*0000e9a4*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x344c] 
    /*0000e9a8*/ MOVT        R3, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3454] 
    /*0000e9ac*/ STR         R2, [SP, #20] 
    /*0000e9b0*/ STR         R3, [SP, #16] 
    /*0000e9b4*/ MOVW        R2, #0                      @ .LC178 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e08] 
    /*0000e9b8*/ MOVW        R3, #0                      @ .LC179 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e10] 
    /*0000e9bc*/ MOVT        R2, #0                      @ .LC178 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e08] 
    /*0000e9c0*/ MOVT        R3, #0                      @ .LC179 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e10] 
    /*0000e9c4*/ STR         R2, [SP, #12] 
    /*0000e9c8*/ STR         R3, [SP, #8] 
    /*0000e9cc*/ MOVW        R2, #0                      @ .LC180 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e18] 
    /*0000e9d0*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*0000e9d4*/ MOVT        R2, #0                      @ .LC180 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e18] 
    /*0000e9d8*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*0000e9dc*/ STR         R2, [SP, #4] 
    /*0000e9e0*/ STR         R3, [SP] 
    /*0000e9e4*/ MOV         R0, R8 
    /*0000e9e8*/ MOVW        R3, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*0000e9ec*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000e9f0*/ MOVT        R3, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*0000e9f4*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000e9f8*/ MOVW        R1, #0                      @ .LC174 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc8] 
    /*0000e9fc*/ MOVW        FP, #0                      @ g_stUserPicLock [R_ARM_MOVW_ABS_NC: .bss+0x11dc8] 
    /*0000ea00*/ MOVT        R1, #0                      @ .LC174 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc8] 
    /*0000ea04*/ MOVT        R7, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000ea08*/ MOVT        FP, #0                      @ g_stUserPicLock [R_ARM_MOVT_ABS: .bss+0x11dc8] 
    /*0000ea0c*/ BL          0x000000000000EA0C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ea10*/ MOV         R5, #0 
    /*0000ea14*/ MOV         R0, R8 
    /*0000ea18*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000ea1c*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000ea20*/ BL          0x000000000000EA20          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ea24*/ MOVW        SL, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000ea28*/ MOVW        R3, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0000ea2c*/ MOVT        SL, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000ea30*/ MOVT        R3, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0000ea34*/ STR         R8, [SP, #48]               @ 0x30 
    /*0000ea38*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000ea3c*/ STR         SL, [SP, #56]               @ 0x38 
    VI_ProcPipeUserPicAttr_xea40:
    /*0000ea40*/ MOV         R0, R4 
    /*0000ea44*/ BL          0x000000000000EA44          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000ea48*/ CMP         R0, #0 
    /*0000ea4c*/ BNE         VI_ProcPipeUserPicAttr_xec6c
    /*0000ea50*/ LDR         R3, [R7], #4 
    /*0000ea54*/ CMP         R3, #0 
    /*0000ea58*/ BEQ         VI_ProcPipeUserPicAttr_xeb70
    /*0000ea5c*/ MOV         R0, FP 
    /*0000ea60*/ ADD         R1, SP, #68                 @ 0x44 
    /*0000ea64*/ BL          0x000000000000EA64          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000ea68*/ LDR         R3, [R6] 
    /*0000ea6c*/ CMP         R3, #0 
    /*0000ea70*/ BEQ         VI_ProcPipeUserPicAttr_xeb64
    /*0000ea74*/ LDR         R1, [R6, #64]               @ 0x40 
    /*0000ea78*/ CMP         R1, #0 
    /*0000ea7c*/ BLT         VI_ProcPipeUserPicAttr_xebac
    /*0000ea80*/ MOVW        R2, #0                      @ g_stUserPicComm [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0000ea84*/ MOVT        R2, #0                      @ g_stUserPicComm [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0000ea88*/ LDR         IP, [SP, #52]               @ 0x34 
    /*0000ea8c*/ CMP         R3, #1 
    /*0000ea90*/ LDR         LR, [R2, #4] 
    /*0000ea94*/ LDR         R0, [SP, #56]               @ 0x38 
    /*0000ea98*/ MOVNE       R0, IP 
    /*0000ea9c*/ CMP         LR, #0 
    /*0000eaa0*/ MOV         R3, R0 
    /*0000eaa4*/ BEQ         VI_ProcPipeUserPicAttr_xec60
    /*0000eaa8*/ CMP         LR, #1 
    /*0000eaac*/ MOVW        IP, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3338] 
    /*0000eab0*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000eab4*/ MOVT        IP, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3338] 
    /*0000eab8*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000eabc*/ MOVEQ       SL, IP 
    /*0000eac0*/ MOVNE       SL, R0 
    VI_ProcPipeUserPicAttr_xeac4:
    /*0000eac4*/ MOV         LR, #352                    @ 0x160 
    /*0000eac8*/ LDR         R0, [R2, #8] 
    /*0000eacc*/ MLA         LR, LR, R1, R2 
    /*0000ead0*/ MOV         R8, R0 
    /*0000ead4*/ LDR         R0, [LR, #372]              @ 0x174 
    /*0000ead8*/ LDR         IP, [LR, #360]              @ 0x168 
    /*0000eadc*/ SUB         R0, R0, #17 
    /*0000eae0*/ CMP         R0, #22 
    /*0000eae4*/ STR         IP, [SP, #60]               @ 0x3c 
    /*0000eae8*/ LDR         IP, [LR, #364]              @ 0x16c 
    /*0000eaec*/ LDR         LR, [LR, #404]              @ 0x194 
    /*0000eaf0*/ BLS         VI_ProcPipeUserPicAttr_xeb98
    /*0000eaf4*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000eaf8*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    VI_ProcPipeUserPicAttr_xeafc:
    /*0000eafc*/ MOV         R9, #352                    @ 0x160 
    /*0000eb00*/ STR         R0, [SP, #28] 
    /*0000eb04*/ MLA         R2, R9, R1, R2 
    /*0000eb08*/ LDR         R0, [SP, #60]               @ 0x3c 
    /*0000eb0c*/ STR         IP, [SP, #20] 
    /*0000eb10*/ MOV         IP, #0 
    /*0000eb14*/ STR         R1, [SP, #12] 
    /*0000eb18*/ MOVW        R1, #0                      @ .LC184 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e54] 
    /*0000eb1c*/ STR         R0, [SP, #16] 
    /*0000eb20*/ ADD         R0, R2, #480                @ 0x1e0 
    /*0000eb24*/ STR         LR, [SP, #24] 
    /*0000eb28*/ MOVT        R1, #0                      @ .LC184 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e54] 
    /*0000eb2c*/ STR         R8, [SP, #8] 
    /*0000eb30*/ LDR         LR, [R2, #688]              @ 0x2b0 
    /*0000eb34*/ MOV         R2, R5 
    /*0000eb38*/ LDRD        R8, [R0] 
    /*0000eb3c*/ STR         SL, [SP, #4] 
    /*0000eb40*/ LDR         R0, [SP, #48]               @ 0x30 
    /*0000eb44*/ STRD        R8, [SP, #40]               @ 0x28 
    /*0000eb48*/ STR         LR, [SP, #32] 
    /*0000eb4c*/ STR         IP, [SP] 
    /*0000eb50*/ BL          0x000000000000EB50          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000eb54*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000eb58*/ LDR         R0, [SP, #48]               @ 0x30 
    /*0000eb5c*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000eb60*/ BL          0x000000000000EB60          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcPipeUserPicAttr_xeb64:
    /*0000eb64*/ ADD         R1, SP, #68                 @ 0x44 
    /*0000eb68*/ MOV         R0, FP 
    /*0000eb6c*/ BL          0x000000000000EB6C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_ProcPipeUserPicAttr_xeb70:
    /*0000eb70*/ MOV         R0, R4 
    /*0000eb74*/ ADD         R5, R5, #1 
    /*0000eb78*/ BL          0x000000000000EB78          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000eb7c*/ CMP         R5, #4 
    /*0000eb80*/ ADD         R4, R4, #176                @ 0xb0 
    /*0000eb84*/ ADD         R6, R6, #4 
    /*0000eb88*/ BNE         VI_ProcPipeUserPicAttr_xea40
    /*0000eb8c*/ MOV         R0, #0 
    /*0000eb90*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000eb94*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcPipeUserPicAttr_xeb98:
    /*0000eb98*/ MOVW        R9, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000eb9c*/ MOVT        R9, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000eba0*/ ADD         R0, R9, R0, LSL #2 
    /*0000eba4*/ LDR         R0, [R0, #56]               @ 0x38 
    /*0000eba8*/ B           VI_ProcPipeUserPicAttr_xeafc
    VI_ProcPipeUserPicAttr_xebac:
    /*0000ebac*/ LDR         R2, [R7, #-4] 
    /*0000ebb0*/ ADD         R2, R2, #36864              @ 0x9000 
    /*0000ebb4*/ LDR         R2, [R2, #1484]             @ 0x5cc 
    /*0000ebb8*/ CMP         R2, #0 
    /*0000ebbc*/ BEQ         VI_ProcPipeUserPicAttr_xeb64
    /*0000ebc0*/ MOVW        R2, #0                      @ g_stUserPicComm [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0000ebc4*/ MOVT        R2, #0                      @ g_stUserPicComm [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0000ebc8*/ LDR         IP, [SP, #52]               @ 0x34 
    /*0000ebcc*/ CMP         R3, #1 
    /*0000ebd0*/ LDR         LR, [R2, #4] 
    /*0000ebd4*/ LDR         R0, [SP, #56]               @ 0x38 
    /*0000ebd8*/ MOVNE       R0, IP 
    /*0000ebdc*/ CMP         LR, #0 
    /*0000ebe0*/ MOV         R3, R0 
    /*0000ebe4*/ BEQ         VI_ProcPipeUserPicAttr_xec7c
    /*0000ebe8*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000ebec*/ CMP         LR, #1 
    /*0000ebf0*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000ebf4*/ MOVW        IP, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3338] 
    /*0000ebf8*/ MOVT        IP, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3338] 
    /*0000ebfc*/ MOVNE       IP, R0 
    VI_ProcPipeUserPicAttr_xec00:
    /*0000ec00*/ LDR         R2, [R2, #8] 
    /*0000ec04*/ MOVW        R0, #0                      @ .LC183 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e50] 
    /*0000ec08*/ STR         R1, [SP, #12] 
    /*0000ec0c*/ MOVT        R0, #0                      @ .LC183 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e50] 
    /*0000ec10*/ STR         IP, [SP, #4] 
    /*0000ec14*/ MOVW        R1, #0                      @ .LC182 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e28] 
    /*0000ec18*/ STR         R2, [SP, #8] 
    /*0000ec1c*/ MOV         IP, #0 
    /*0000ec20*/ STR         R0, [SP, #36]               @ 0x24 
    /*0000ec24*/ MOVT        R1, #0                      @ .LC182 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e28] 
    /*0000ec28*/ STR         R0, [SP, #32] 
    /*0000ec2c*/ MOV         R2, R5 
    /*0000ec30*/ STR         R0, [SP, #28] 
    /*0000ec34*/ STR         R0, [SP, #24] 
    /*0000ec38*/ STR         R0, [SP, #20] 
    /*0000ec3c*/ STR         R0, [SP, #16] 
    /*0000ec40*/ STR         IP, [SP] 
    /*0000ec44*/ LDR         R0, [SP, #48]               @ 0x30 
    /*0000ec48*/ BL          0x000000000000EC48          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ec4c*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000ec50*/ LDR         R0, [SP, #48]               @ 0x30 
    /*0000ec54*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000ec58*/ BL          0x000000000000EC58          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ec5c*/ B           VI_ProcPipeUserPicAttr_xeb64
    VI_ProcPipeUserPicAttr_xec60:
    /*0000ec60*/ MOVW        SL, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3334] 
    /*0000ec64*/ MOVT        SL, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3334] 
    /*0000ec68*/ B           VI_ProcPipeUserPicAttr_xeac4
    VI_ProcPipeUserPicAttr_xec6c:
    /*0000ec6c*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000ec70*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000ec74*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000ec78*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcPipeUserPicAttr_xec7c:
    /*0000ec7c*/ MOVW        IP, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3334] 
    /*0000ec80*/ MOVT        IP, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3334] 
    /*0000ec84*/ B           VI_ProcPipeUserPicAttr_xec00
    /*0000ec88*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0000ec8c*/ ANDEQ       R0, R0, R0, ROR #13         @ g_stUserPicComm [R_ARM_ABS32: .bss+0x11658] 
FUNC_END VI_ProcPipeUserPicAttr


FUNC_BEGIN VI_ProcPipeDumpAttr
    /*0000ec90*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000ec94*/ SUB         SP, SP, #24 
    /*0000ec98*/ MOV         R7, R0 
    /*0000ec9c*/ MOVW        R1, #0                      @ .LC185 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e7c] 
    /*0000eca0*/ MOVT        R1, #0                      @ .LC185 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e7c] 
    /*0000eca4*/ LDR         R5, [PC, #264]              @ 0x000000000000edb4 
    /*0000eca8*/ BL          0x000000000000ECA8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ecac*/ MOVW        R2, #0                      @ .LC187 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f04] 
    /*0000ecb0*/ MOV         R0, R7 
    /*0000ecb4*/ MOVT        R2, #0                      @ .LC187 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f04] 
    /*0000ecb8*/ MOVW        R3, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*0000ecbc*/ STR         R2, [SP] 
    /*0000ecc0*/ MOVT        R3, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*0000ecc4*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000ecc8*/ MOVW        R1, #0                      @ .LC186 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ef8] 
    /*0000eccc*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000ecd0*/ MOVT        R1, #0                      @ .LC186 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ef8] 
    /*0000ecd4*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000ecd8*/ BL          0x000000000000ECD8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ecdc*/ MOV         R0, R7 
    /*0000ece0*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000ece4*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000ece8*/ BL          0x000000000000ECE8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ecec*/ MOVW        SL, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000ecf0*/ MOVW        R9, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0000ecf4*/ MOVW        R8, #0                      @ .LC188 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f0c] 
    /*0000ecf8*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000ecfc*/ MOVT        SL, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000ed00*/ MOVT        R9, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0000ed04*/ MOVT        R8, #0                      @ .LC188 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f0c] 
    /*0000ed08*/ MOV         R4, #0 
    VI_ProcPipeDumpAttr_xed0c:
    /*0000ed0c*/ MOV         R0, R5 
    /*0000ed10*/ BL          0x000000000000ED10          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000ed14*/ ADD         R1, SP, #12 
    /*0000ed18*/ CMP         R0, #0 
    /*0000ed1c*/ MOV         R0, R4 
    /*0000ed20*/ BNE         VI_ProcPipeDumpAttr_xeda4
    /*0000ed24*/ LDR         R3, [R6], #4 
    /*0000ed28*/ CMP         R3, #0 
    /*0000ed2c*/ BEQ         VI_ProcPipeDumpAttr_xed98
    /*0000ed30*/ BL          0x000000000000ED30          @ VI_DRV_GetPipeDumpAttr [R_ARM_CALL: .text+0x32adc] 
    /*0000ed34*/ MOV         R0, R5 
    /*0000ed38*/ BL          0x000000000000ED38          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ed3c*/ LDR         R3, [SP, #12] 
    /*0000ed40*/ MOV         R2, R4 
    /*0000ed44*/ MOV         R1, R8 
    /*0000ed48*/ CMP         R3, #0 
    /*0000ed4c*/ MOV         R0, R7 
    /*0000ed50*/ BEQ         VI_ProcPipeDumpAttr_xed7c
    /*0000ed54*/ LDR         IP, [SP, #16] 
    /*0000ed58*/ CMP         R3, #1 
    /*0000ed5c*/ MOVEQ       R3, SL 
    /*0000ed60*/ MOVNE       R3, R9 
    /*0000ed64*/ STR         IP, [SP] 
    /*0000ed68*/ BL          0x000000000000ED68          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ed6c*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000ed70*/ MOV         R0, R7 
    /*0000ed74*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000ed78*/ BL          0x000000000000ED78          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcPipeDumpAttr_xed7c:
    /*0000ed7c*/ ADD         R4, R4, #1 
    /*0000ed80*/ ADD         R5, R5, #176                @ 0xb0 
    /*0000ed84*/ CMP         R4, #4 
    /*0000ed88*/ BNE         VI_ProcPipeDumpAttr_xed0c
    /*0000ed8c*/ MOV         R0, #0 
    /*0000ed90*/ ADD         SP, SP, #24 
    /*0000ed94*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_ProcPipeDumpAttr_xed98:
    /*0000ed98*/ MOV         R0, R5 
    /*0000ed9c*/ BL          0x000000000000ED9C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000eda0*/ B           VI_ProcPipeDumpAttr_xed7c
    VI_ProcPipeDumpAttr_xeda4:
    /*0000eda4*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000eda8*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000edac*/ ADD         SP, SP, #24 
    /*0000edb0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*0000edb4*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcPipeDumpAttr


FUNC_BEGIN VI_ProcPipeBNRDumpAttr
    /*0000edb8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000edbc*/ SUB         SP, SP, #8 
    /*0000edc0*/ MOV         R7, R0 
    /*0000edc4*/ MOVW        R1, #0                      @ .LC189 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f18] 
    /*0000edc8*/ MOVT        R1, #0                      @ .LC189 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f18] 
    /*0000edcc*/ LDR         R5, [PC, #244]              @ 0x000000000000eec8 
    /*0000edd0*/ BL          0x000000000000EDD0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000edd4*/ MOVW        R2, #0                      @ .LC187 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f04] 
    /*0000edd8*/ MOV         R0, R7 
    /*0000eddc*/ MOVT        R2, #0                      @ .LC187 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f04] 
    /*0000ede0*/ MOVW        R3, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*0000ede4*/ STR         R2, [SP] 
    /*0000ede8*/ MOVT        R3, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*0000edec*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000edf0*/ MOVW        R1, #0                      @ .LC186 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ef8] 
    /*0000edf4*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000edf8*/ MOVT        R1, #0                      @ .LC186 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ef8] 
    /*0000edfc*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000ee00*/ BL          0x000000000000EE00          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ee04*/ MOV         R0, R7 
    /*0000ee08*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000ee0c*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000ee10*/ BL          0x000000000000EE10          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ee14*/ MOVW        SL, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000ee18*/ MOVW        R9, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0000ee1c*/ MOVW        R8, #0                      @ .LC188 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f0c] 
    /*0000ee20*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000ee24*/ MOVT        SL, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000ee28*/ MOVT        R9, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0000ee2c*/ MOVT        R8, #0                      @ .LC188 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f0c] 
    /*0000ee30*/ MOV         R4, #0 
    VI_ProcPipeBNRDumpAttr_xee34:
    /*0000ee34*/ MOV         R0, R5 
    /*0000ee38*/ BL          0x000000000000EE38          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000ee3c*/ MOV         R2, R4 
    /*0000ee40*/ MOV         R1, R8 
    /*0000ee44*/ CMP         R0, #0 
    /*0000ee48*/ MOV         R0, R7 
    /*0000ee4c*/ BNE         VI_ProcPipeBNRDumpAttr_xeeb8
    /*0000ee50*/ LDR         R3, [R6], #4 
    /*0000ee54*/ CMP         R3, #0 
    /*0000ee58*/ ADD         IP, R3, #36864              @ 0x9000 
    /*0000ee5c*/ BEQ         VI_ProcPipeBNRDumpAttr_xee94
    /*0000ee60*/ LDR         R3, [IP, #528]              @ 0x210 
    /*0000ee64*/ CMP         R3, #0 
    /*0000ee68*/ BEQ         VI_ProcPipeBNRDumpAttr_xee94
    /*0000ee6c*/ LDR         IP, [IP, #532]              @ 0x214 
    /*0000ee70*/ CMP         R3, #1 
    /*0000ee74*/ MOVEQ       R3, SL 
    /*0000ee78*/ MOVNE       R3, R9 
    /*0000ee7c*/ STR         IP, [SP] 
    /*0000ee80*/ BL          0x000000000000EE80          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ee84*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000ee88*/ MOV         R0, R7 
    /*0000ee8c*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000ee90*/ BL          0x000000000000EE90          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcPipeBNRDumpAttr_xee94:
    /*0000ee94*/ MOV         R0, R5 
    /*0000ee98*/ ADD         R4, R4, #1 
    /*0000ee9c*/ BL          0x000000000000EE9C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000eea0*/ CMP         R4, #4 
    /*0000eea4*/ ADD         R5, R5, #176                @ 0xb0 
    /*0000eea8*/ BNE         VI_ProcPipeBNRDumpAttr_xee34
    /*0000eeac*/ MOV         R0, #0 
    /*0000eeb0*/ ADD         SP, SP, #8 
    /*0000eeb4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_ProcPipeBNRDumpAttr_xeeb8:
    /*0000eeb8*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000eebc*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000eec0*/ ADD         SP, SP, #8 
    /*0000eec4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*0000eec8*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcPipeBNRDumpAttr


FUNC_BEGIN VI_ProcPhyChnAttr
    /*0000eecc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000eed0*/ SUB         SP, SP, #116                @ 0x74 
    /*0000eed4*/ LDR         R6, [PC, #880]              @ 0x000000000000f24c 
    /*0000eed8*/ MOV         SL, R0 
    /*0000eedc*/ MOVW        R1, #0                      @ .LC190 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f94] 
    /*0000eee0*/ MOVW        FP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000eee4*/ MOVT        R1, #0                      @ .LC190 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f94] 
    /*0000eee8*/ MOVT        FP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000eeec*/ BL          0x000000000000EEEC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000eef0*/ MOVW        R9, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0000eef4*/ MOVW        R2, #0                      @ .LC192 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x403c] 
    /*0000eef8*/ MOVW        R3, #0                      @ .LC193 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x404c] 
    /*0000eefc*/ MOVT        R2, #0                      @ .LC192 [R_ARM_MOVT_ABS: .rodata.str1.4+0x403c] 
    /*0000ef00*/ MOVT        R3, #0                      @ .LC193 [R_ARM_MOVT_ABS: .rodata.str1.4+0x404c] 
    /*0000ef04*/ STR         R2, [SP, #32] 
    /*0000ef08*/ MOV         R0, SL 
    /*0000ef0c*/ STR         R3, [SP, #28] 
    /*0000ef10*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3850] 
    /*0000ef14*/ MOVW        R3, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3980] 
    /*0000ef18*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3850] 
    /*0000ef1c*/ MOVT        R3, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3980] 
    /*0000ef20*/ STR         R2, [SP, #24] 
    /*0000ef24*/ STR         R3, [SP, #20] 
    /*0000ef28*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3914] 
    /*0000ef2c*/ MOVW        R3, #0                      @ .LC194 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4058] 
    /*0000ef30*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3914] 
    /*0000ef34*/ MOVT        R3, #0                      @ .LC194 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4058] 
    /*0000ef38*/ STR         R2, [SP, #16] 
    /*0000ef3c*/ STR         R3, [SP, #12] 
    /*0000ef40*/ MOVW        R2, #0                      @ .LC195 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4060] 
    /*0000ef44*/ MOVW        R3, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x344c] 
    /*0000ef48*/ MOVT        R2, #0                      @ .LC195 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4060] 
    /*0000ef4c*/ MOVT        R3, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x344c] 
    /*0000ef50*/ STR         R2, [SP, #8] 
    /*0000ef54*/ STR         R3, [SP, #4] 
    /*0000ef58*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3454] 
    /*0000ef5c*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*0000ef60*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3454] 
    /*0000ef64*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*0000ef68*/ STR         R2, [SP] 
    /*0000ef6c*/ MOVW        R1, #0                      @ .LC191 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4010] 
    /*0000ef70*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000ef74*/ MOVT        R1, #0                      @ .LC191 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4010] 
    /*0000ef78*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000ef7c*/ MOVT        R9, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0000ef80*/ BL          0x000000000000EF80          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ef84*/ MOV         R8, FP 
    /*0000ef88*/ MOV         R0, SL 
    /*0000ef8c*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000ef90*/ MOV         R4, R6 
    /*0000ef94*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000ef98*/ MOV         R7, #0 
    /*0000ef9c*/ BL          0x000000000000EF9C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000efa0*/ MOVW        R3, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000efa4*/ MOVT        R3, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000efa8*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000efac*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000efb0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000efb4*/ STR         R3, [SP, #44]               @ 0x2c 
    VI_ProcPhyChnAttr_xefb8:
    /*0000efb8*/ MOV         R0, R4 
    /*0000efbc*/ BL          0x000000000000EFBC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000efc0*/ SUBS        R5, R0, #0 
    /*0000efc4*/ BNE         VI_ProcPhyChnAttr_xf23c
    /*0000efc8*/ LDR         R3, [R8], #4 
    /*0000efcc*/ CMP         R3, #0 
    /*0000efd0*/ BEQ         VI_ProcPhyChnAttr_xefe4
    /*0000efd4*/ ADD         R3, R3, #36864              @ 0x9000 
    /*0000efd8*/ LDR         R3, [R3, #1484]             @ 0x5cc 
    /*0000efdc*/ CMP         R3, #0 
    /*0000efe0*/ BNE         VI_ProcPhyChnAttr_xf0b0
    VI_ProcPhyChnAttr_xefe4:
    /*0000efe4*/ MOV         R0, R4 
    /*0000efe8*/ ADD         R7, R7, #1 
    /*0000efec*/ BL          0x000000000000EFEC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000eff0*/ CMP         R7, #4 
    /*0000eff4*/ ADD         R4, R4, #176                @ 0xb0 
    /*0000eff8*/ BNE         VI_ProcPhyChnAttr_xefb8
    /*0000effc*/ MOVW        R1, #0                      @ .LC197 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4094] 
    /*0000f000*/ MOV         R0, SL 
    /*0000f004*/ MOVT        R1, #0                      @ .LC197 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4094] 
    /*0000f008*/ MOVW        R8, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000f00c*/ BL          0x000000000000F00C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f010*/ MOVW        R2, #0                      @ .LC199 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4120] 
    /*0000f014*/ MOVW        R3, #0                      @ .LC187 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f04] 
    /*0000f018*/ MOVT        R2, #0                      @ .LC199 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4120] 
    /*0000f01c*/ MOVT        R3, #0                      @ .LC187 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f04] 
    /*0000f020*/ STR         R2, [SP] 
    /*0000f024*/ MOVW        R1, #0                      @ .LC198 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4110] 
    /*0000f028*/ MOVW        R2, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3820] 
    /*0000f02c*/ MOVT        R1, #0                      @ .LC198 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4110] 
    /*0000f030*/ MOVT        R2, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3820] 
    /*0000f034*/ MOV         R0, SL 
    /*0000f038*/ MOVW        R7, #0                      @ .LC200 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4128] 
    /*0000f03c*/ BL          0x000000000000F03C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f040*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000f044*/ MOV         R0, SL 
    /*0000f048*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000f04c*/ BL          0x000000000000F04C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f050*/ MOVW        R4, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000f054*/ MOVT        R8, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000f058*/ MOVT        R7, #0                      @ .LC200 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4128] 
    /*0000f05c*/ MOVT        R4, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    VI_ProcPhyChnAttr_xf060:
    /*0000f060*/ MOV         R0, R6 
    /*0000f064*/ BL          0x000000000000F064          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f068*/ SUBS        R1, R0, #0 
    /*0000f06c*/ BNE         VI_ProcPhyChnAttr_xf23c
    /*0000f070*/ LDR         R3, [FP], #4 
    /*0000f074*/ CMP         R3, #0 
    /*0000f078*/ ADD         R9, R3, #36864              @ 0x9000 
    /*0000f07c*/ BEQ         VI_ProcPhyChnAttr_xf08c
    /*0000f080*/ LDR         R3, [R9, #1484]             @ 0x5cc 
    /*0000f084*/ CMP         R3, #0 
    /*0000f088*/ BNE         VI_ProcPhyChnAttr_xf1b8
    VI_ProcPhyChnAttr_xf08c:
    /*0000f08c*/ MOV         R0, R6 
    /*0000f090*/ ADD         R5, R5, #1 
    /*0000f094*/ BL          0x000000000000F094          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f098*/ CMP         R5, #4 
    /*0000f09c*/ ADD         R6, R6, #176                @ 0xb0 
    /*0000f0a0*/ BNE         VI_ProcPhyChnAttr_xf060
    /*0000f0a4*/ MOV         R0, #0 
    /*0000f0a8*/ ADD         SP, SP, #116                @ 0x74 
    /*0000f0ac*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcPhyChnAttr_xf0b0:
    /*0000f0b0*/ ADD         R2, SP, #68                 @ 0x44 
    /*0000f0b4*/ MOV         R1, R5 
    /*0000f0b8*/ MOV         R0, R7 
    /*0000f0bc*/ BL          0x000000000000F0BC          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*0000f0c0*/ LDR         R1, [SP, #92]               @ 0x5c 
    /*0000f0c4*/ LDR         IP, [SP, #40]               @ 0x28 
    /*0000f0c8*/ CMP         R1, #1 
    /*0000f0cc*/ LDR         R2, [SP, #96]               @ 0x60 
    /*0000f0d0*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*0000f0d4*/ MOV         R0, IP 
    /*0000f0d8*/ MOVNE       R0, R9 
    /*0000f0dc*/ CMP         R2, #1 
    /*0000f0e0*/ SUB         R3, R3, #17 
    /*0000f0e4*/ LDR         R1, [SP, #68]               @ 0x44 
    /*0000f0e8*/ LDR         R2, [SP, #72]               @ 0x48 
    /*0000f0ec*/ STR         R0, [SP, #56]               @ 0x38 
    /*0000f0f0*/ MOV         R0, IP 
    /*0000f0f4*/ MOVNE       R0, R9 
    /*0000f0f8*/ CMP         R3, #22 
    /*0000f0fc*/ STR         R0, [SP, #60]               @ 0x3c 
    /*0000f100*/ STR         R1, [SP, #48]               @ 0x30 
    /*0000f104*/ STR         R2, [SP, #52]               @ 0x34 
    /*0000f108*/ LDR         R0, [SP, #104]              @ 0x68 
    /*0000f10c*/ LDR         IP, [SP, #108]              @ 0x6c 
    /*0000f110*/ BHI         VI_ProcPhyChnAttr_xf204
    /*0000f114*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000f118*/ LDR         R1, [SP, #84]               @ 0x54 
    /*0000f11c*/ ADD         R3, R2, R3, LSL #2 
    /*0000f120*/ CMP         R1, #0 
    /*0000f124*/ LDR         R2, [R3, #56]               @ 0x38 
    /*0000f128*/ BEQ         VI_ProcPhyChnAttr_xf218
    VI_ProcPhyChnAttr_xf12c:
    /*0000f12c*/ CMP         R1, #2 
    /*0000f130*/ MOVW        LR, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000f134*/ LDR         R1, [SP, #80]               @ 0x50 
    /*0000f138*/ MOVT        LR, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000f13c*/ MOVW        R3, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31b0] 
    /*0000f140*/ MOVT        R3, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31b0] 
    /*0000f144*/ MOVNE       R3, LR 
    /*0000f148*/ CMP         R1, #5 
    /*0000f14c*/ BLS         VI_ProcPhyChnAttr_xf22c
    VI_ProcPhyChnAttr_xf150:
    /*0000f150*/ MOVW        R1, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000f154*/ MOVT        R1, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    VI_ProcPhyChnAttr_xf158:
    /*0000f158*/ STR         IP, [SP, #20] 
    /*0000f15c*/ LDR         IP, [SP, #60]               @ 0x3c 
    /*0000f160*/ STR         R1, [SP, #32] 
    /*0000f164*/ MOVW        R1, #0                      @ .LC196 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4068] 
    /*0000f168*/ STR         R3, [SP, #28] 
    /*0000f16c*/ MOVT        R1, #0                      @ .LC196 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4068] 
    /*0000f170*/ STR         IP, [SP, #12] 
    /*0000f174*/ MOV         R3, #0 
    /*0000f178*/ LDR         IP, [SP, #56]               @ 0x38 
    /*0000f17c*/ STR         R2, [SP, #24] 
    /*0000f180*/ MOV         R2, R7 
    /*0000f184*/ STR         R0, [SP, #16] 
    /*0000f188*/ MOV         R0, SL 
    /*0000f18c*/ STR         IP, [SP, #8] 
    /*0000f190*/ LDR         IP, [SP, #52]               @ 0x34 
    /*0000f194*/ STR         IP, [SP, #4] 
    /*0000f198*/ LDR         IP, [SP, #48]               @ 0x30 
    /*0000f19c*/ STR         IP, [SP] 
    /*0000f1a0*/ BL          0x000000000000F1A0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f1a4*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000f1a8*/ MOV         R0, SL 
    /*0000f1ac*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000f1b0*/ BL          0x000000000000F1B0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f1b4*/ B           VI_ProcPhyChnAttr_xefe4
    VI_ProcPhyChnAttr_xf1b8:
    /*0000f1b8*/ ADD         R2, SP, #68                 @ 0x44 
    /*0000f1bc*/ MOV         R0, R5 
    /*0000f1c0*/ BL          0x000000000000F1C0          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*0000f1c4*/ LDR         R3, [SP, #88]               @ 0x58 
    /*0000f1c8*/ LDR         IP, [R9, #1520]             @ 0x5f0 
    /*0000f1cc*/ MOV         R1, R7 
    /*0000f1d0*/ CMP         R3, #4 
    /*0000f1d4*/ MOV         R0, SL 
    /*0000f1d8*/ ADD         R3, R8, R3, LSL #2 
    /*0000f1dc*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000f1e0*/ STR         IP, [SP] 
    /*0000f1e4*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000f1e8*/ LDRLS       R2, [R3, #160]              @ 0xa0 
    /*0000f1ec*/ LDR         R3, [SP, #100]              @ 0x64 
    /*0000f1f0*/ BL          0x000000000000F1F0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f1f4*/ MOV         R1, R4 
    /*0000f1f8*/ MOV         R0, SL 
    /*0000f1fc*/ BL          0x000000000000F1FC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f200*/ B           VI_ProcPhyChnAttr_xf08c
    VI_ProcPhyChnAttr_xf204:
    /*0000f204*/ LDR         R1, [SP, #84]               @ 0x54 
    /*0000f208*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000f20c*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000f210*/ CMP         R1, #0 
    /*0000f214*/ BNE         VI_ProcPhyChnAttr_xf12c
    VI_ProcPhyChnAttr_xf218:
    /*0000f218*/ LDR         R1, [SP, #80]               @ 0x50 
    /*0000f21c*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31a8] 
    /*0000f220*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31a8] 
    /*0000f224*/ CMP         R1, #5 
    /*0000f228*/ BHI         VI_ProcPhyChnAttr_xf150
    VI_ProcPhyChnAttr_xf22c:
    /*0000f22c*/ LDR         LR, [SP, #44]               @ 0x2c 
    /*0000f230*/ ADD         R1, LR, R1, LSL #2 
    /*0000f234*/ LDR         R1, [R1, #32] 
    /*0000f238*/ B           VI_ProcPhyChnAttr_xf158
    VI_ProcPhyChnAttr_xf23c:
    /*0000f23c*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000f240*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000f244*/ ADD         SP, SP, #116                @ 0x74 
    /*0000f248*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000f24c*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcPhyChnAttr


FUNC_BEGIN VI_ProcExtChnAttr
    /*0000f250*/ LDR         R3, [PC, #876]              @ 0x000000000000f5c4 
    /*0000f254*/ MOVW        R1, #0                      @ .LC201 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4138] 
    /*0000f258*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000f25c*/ SUB         SP, SP, #116                @ 0x74 
    /*0000f260*/ MOV         R6, R0 
    /*0000f264*/ MOVT        R1, #0                      @ .LC201 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4138] 
    /*0000f268*/ MOVW        SL, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000f26c*/ MOVT        SL, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000f270*/ MOV         R9, R3 
    /*0000f274*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000f278*/ BL          0x000000000000F278          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f27c*/ MOVW        R2, #0                      @ .LC187 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f04] 
    /*0000f280*/ MOVW        R3, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3820] 
    /*0000f284*/ MOVT        R2, #0                      @ .LC187 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f04] 
    /*0000f288*/ MOVT        R3, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3820] 
    /*0000f28c*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000f290*/ STR         R3, [SP, #32] 
    /*0000f294*/ MOVW        R2, #0                      @ .LC192 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x403c] 
    /*0000f298*/ MOVW        R3, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3850] 
    /*0000f29c*/ MOVT        R2, #0                      @ .LC192 [R_ARM_MOVT_ABS: .rodata.str1.4+0x403c] 
    /*0000f2a0*/ MOVT        R3, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3850] 
    /*0000f2a4*/ STR         R2, [SP, #28] 
    /*0000f2a8*/ STR         R3, [SP, #24] 
    /*0000f2ac*/ MOVW        R2, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3980] 
    /*0000f2b0*/ MOVW        R3, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3914] 
    /*0000f2b4*/ MOVT        R2, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3980] 
    /*0000f2b8*/ MOVT        R3, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3914] 
    /*0000f2bc*/ STR         R2, [SP, #20] 
    /*0000f2c0*/ STR         R3, [SP, #16] 
    /*0000f2c4*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x344c] 
    /*0000f2c8*/ MOVW        R3, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3454] 
    /*0000f2cc*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x344c] 
    /*0000f2d0*/ MOVT        R3, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3454] 
    /*0000f2d4*/ STR         R2, [SP, #12] 
    /*0000f2d8*/ STR         R3, [SP, #8] 
    /*0000f2dc*/ MOVW        R2, #0                      @ .LC203 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41e0] 
    /*0000f2e0*/ MOVW        R3, #0                      @ .LC204 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41e8] 
    /*0000f2e4*/ MOVT        R2, #0                      @ .LC203 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41e0] 
    /*0000f2e8*/ MOVT        R3, #0                      @ .LC204 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41e8] 
    /*0000f2ec*/ STR         R2, [SP, #4] 
    /*0000f2f0*/ STR         R3, [SP] 
    /*0000f2f4*/ MOV         R0, R6 
    /*0000f2f8*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*0000f2fc*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000f300*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*0000f304*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000f308*/ MOVW        R1, #0                      @ .LC202 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41b4] 
    /*0000f30c*/ MOVT        R1, #0                      @ .LC202 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41b4] 
    /*0000f310*/ BL          0x000000000000F310          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f314*/ MOV         R8, #0 
    /*0000f318*/ MOV         R0, R6 
    /*0000f31c*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000f320*/ MOV         FP, R9 
    /*0000f324*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000f328*/ MOV         R7, SL 
    /*0000f32c*/ BL          0x000000000000F32C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f330*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000f334*/ MOVW        R2, #0                      @ .LC205 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41f0] 
    /*0000f338*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000f33c*/ MOVT        R2, #0                      @ .LC205 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41f0] 
    /*0000f340*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0000f344*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000f348*/ STR         R3, [SP, #52]               @ 0x34 
    VI_ProcExtChnAttr_xf34c:
    /*0000f34c*/ MOV         R0, FP 
    /*0000f350*/ BL          0x000000000000F350          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f354*/ SUBS        R3, R0, #0 
    /*0000f358*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000f35c*/ BNE         VI_ProcExtChnAttr_xf5b4
    /*0000f360*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0000f364*/ LDR         R5, [R3], #4 
    /*0000f368*/ CMP         R5, #0 
    /*0000f36c*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000f370*/ BEQ         VI_ProcExtChnAttr_xf4a0
    /*0000f374*/ ADD         R5, R5, #38144              @ 0x9500 
    /*0000f378*/ MOVW        R9, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000f37c*/ ADD         R5, R5, #208                @ 0xd0 
    /*0000f380*/ MOVT        R9, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000f384*/ LDR         R4, [SP, #56]               @ 0x38 
    /*0000f388*/ STR         FP, [SP, #64]               @ 0x40 
    /*0000f38c*/ STR         R9, [SP, #44]               @ 0x2c 
    /*0000f390*/ B           VI_ProcExtChnAttr_xf39c
    VI_ProcExtChnAttr_xf394:
    /*0000f394*/ CMP         R4, #8 
    /*0000f398*/ BEQ         VI_ProcExtChnAttr_xf49c
    VI_ProcExtChnAttr_xf39c:
    /*0000f39c*/ LDR         R3, [R5], #4 
    /*0000f3a0*/ ADD         R4, R4, #1 
    /*0000f3a4*/ CMP         R3, #0 
    /*0000f3a8*/ BEQ         VI_ProcExtChnAttr_xf394
    /*0000f3ac*/ ADD         R2, SP, #72                 @ 0x48 
    /*0000f3b0*/ MOV         R1, R4 
    /*0000f3b4*/ MOV         R0, R8 
    /*0000f3b8*/ BL          0x000000000000F3B8          @ VI_DRV_GetExtChnAttr [R_ARM_CALL: .text+0x29c78] 
    /*0000f3bc*/ LDR         R3, [SP, #72]               @ 0x48 
    /*0000f3c0*/ CMP         R3, #0 
    /*0000f3c4*/ BEQ         VI_ProcExtChnAttr_xf5a8
    /*0000f3c8*/ CMP         R3, #1 
    /*0000f3cc*/ MOVW        IP, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3324] 
    /*0000f3d0*/ MOVT        IP, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3324] 
    /*0000f3d4*/ MOVNE       IP, R7 
    VI_ProcExtChnAttr_xf3d8:
    /*0000f3d8*/ LDR         R3, [SP, #88]               @ 0x58 
    /*0000f3dc*/ LDR         R2, [SP, #76]               @ 0x4c 
    /*0000f3e0*/ SUB         R3, R3, #17 
    /*0000f3e4*/ LDR         FP, [SP, #96]               @ 0x60 
    /*0000f3e8*/ CMP         R3, #22 
    /*0000f3ec*/ LDR         LR, [SP, #80]               @ 0x50 
    /*0000f3f0*/ STR         R2, [SP, #40]               @ 0x28 
    /*0000f3f4*/ MOVWLS      R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000f3f8*/ MOVTLS      R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000f3fc*/ ADDLS       R3, R2, R3, LSL #2 
    /*0000f400*/ LDR         R2, [SP, #92]               @ 0x5c 
    /*0000f404*/ MOVHI       R1, R7 
    /*0000f408*/ LDR         R0, [SP, #108]              @ 0x6c 
    /*0000f40c*/ LDRLS       R1, [R3, #56]               @ 0x38 
    /*0000f410*/ CMP         R2, #5 
    /*0000f414*/ LDR         R9, [SP, #84]               @ 0x54 
    /*0000f418*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000f41c*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000f420*/ ADDLS       R3, R3, R2, LSL #2 
    /*0000f424*/ MOVHI       R2, R7 
    /*0000f428*/ LDR         SL, [SP, #104]              @ 0x68 
    /*0000f42c*/ LDRLS       R2, [R3, #32] 
    /*0000f430*/ CMP         FP, #4 
    /*0000f434*/ STR         LR, [SP, #8] 
    /*0000f438*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*0000f43c*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0000f440*/ ADDLS       R3, R3, FP, LSL #2 
    /*0000f444*/ LDR         LR, [SP, #40]               @ 0x28 
    /*0000f448*/ LDR         FP, [SP, #100]              @ 0x64 
    /*0000f44c*/ MOVHI       R3, R7 
    /*0000f450*/ LDRLS       R3, [R3, #160]              @ 0xa0 
    /*0000f454*/ STR         R2, [SP, #28] 
    /*0000f458*/ MOV         R2, R8 
    /*0000f45c*/ STR         R1, [SP, #24] 
    /*0000f460*/ STR         R3, [SP, #32] 
    /*0000f464*/ MOV         R3, R4 
    /*0000f468*/ LDR         R1, [SP, #48]               @ 0x30 
    /*0000f46c*/ STR         R0, [SP, #20] 
    /*0000f470*/ MOV         R0, R6 
    /*0000f474*/ STM         SP, {IP, LR} 
    /*0000f478*/ STR         SL, [SP, #16] 
    /*0000f47c*/ STR         R9, [SP, #12] 
    /*0000f480*/ STR         FP, [SP, #36]               @ 0x24 
    /*0000f484*/ BL          0x000000000000F484          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f488*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0000f48c*/ MOV         R0, R6 
    /*0000f490*/ BL          0x000000000000F490          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f494*/ CMP         R4, #8 
    /*0000f498*/ BNE         VI_ProcExtChnAttr_xf39c
    VI_ProcExtChnAttr_xf49c:
    /*0000f49c*/ LDR         FP, [SP, #64]               @ 0x40 
    VI_ProcExtChnAttr_xf4a0:
    /*0000f4a0*/ MOV         R0, FP 
    /*0000f4a4*/ ADD         R8, R8, #1 
    /*0000f4a8*/ BL          0x000000000000F4A8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f4ac*/ CMP         R8, #4 
    /*0000f4b0*/ ADD         FP, FP, #176                @ 0xb0 
    /*0000f4b4*/ BNE         VI_ProcExtChnAttr_xf34c
    /*0000f4b8*/ MOVW        R1, #0                      @ .LC206 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x421c] 
    /*0000f4bc*/ MOV         R0, R6 
    /*0000f4c0*/ MOVT        R1, #0                      @ .LC206 [R_ARM_MOVT_ABS: .rodata.str1.4+0x421c] 
    /*0000f4c4*/ LDR         FP, [SP, #56]               @ 0x38 
    /*0000f4c8*/ BL          0x000000000000F4C8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f4cc*/ MOVW        R2, #0                      @ .LC199 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4120] 
    /*0000f4d0*/ MOVW        R1, #0                      @ .LC207 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4298] 
    /*0000f4d4*/ MOVT        R2, #0                      @ .LC199 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4120] 
    /*0000f4d8*/ MOVT        R1, #0                      @ .LC207 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4298] 
    /*0000f4dc*/ MOV         R0, R6 
    /*0000f4e0*/ BL          0x000000000000F4E0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f4e4*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000f4e8*/ MOV         R0, R6 
    /*0000f4ec*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000f4f0*/ BL          0x000000000000F4F0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f4f4*/ LDR         R9, [SP, #68]               @ 0x44 
    /*0000f4f8*/ MOVW        R7, #0                      @ .LC208 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x429c] 
    /*0000f4fc*/ MOVW        R5, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000f500*/ MOVT        R7, #0                      @ .LC208 [R_ARM_MOVT_ABS: .rodata.str1.4+0x429c] 
    /*0000f504*/ MOVT        R5, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000f508*/ MOVW        R8, #38352                  @ 0x95d0 
    VI_ProcExtChnAttr_xf50c:
    /*0000f50c*/ MOV         R0, R9 
    /*0000f510*/ BL          0x000000000000F510          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f514*/ SUBS        R4, R0, #0 
    /*0000f518*/ BNE         VI_ProcExtChnAttr_xf5b4
    /*0000f51c*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*0000f520*/ LDR         R3, [R2], #4 
    /*0000f524*/ CMP         R3, #0 
    /*0000f528*/ STR         R2, [SP, #60]               @ 0x3c 
    /*0000f52c*/ BEQ         VI_ProcExtChnAttr_xf584
    /*0000f530*/ ADD         SL, R3, R8 
    /*0000f534*/ B           VI_ProcExtChnAttr_xf540
    VI_ProcExtChnAttr_xf538:
    /*0000f538*/ CMP         R4, #8 
    /*0000f53c*/ BEQ         VI_ProcExtChnAttr_xf584
    VI_ProcExtChnAttr_xf540:
    /*0000f540*/ LDR         R2, [SL], #4 
    /*0000f544*/ ADD         R4, R4, #1 
    /*0000f548*/ CMP         R2, #0 
    /*0000f54c*/ BEQ         VI_ProcExtChnAttr_xf538
    /*0000f550*/ ADD         R2, SP, #72                 @ 0x48 
    /*0000f554*/ MOV         R1, R4 
    /*0000f558*/ MOV         R0, FP 
    /*0000f55c*/ BL          0x000000000000F55C          @ VI_DRV_GetExtChnAttr [R_ARM_CALL: .text+0x29c78] 
    /*0000f560*/ LDR         R2, [SL, #32] 
    /*0000f564*/ MOV         R1, R7 
    /*0000f568*/ MOV         R0, R6 
    /*0000f56c*/ BL          0x000000000000F56C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f570*/ MOV         R1, R5 
    /*0000f574*/ MOV         R0, R6 
    /*0000f578*/ BL          0x000000000000F578          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f57c*/ CMP         R4, #8 
    /*0000f580*/ BNE         VI_ProcExtChnAttr_xf540
    VI_ProcExtChnAttr_xf584:
    /*0000f584*/ MOV         R0, R9 
    /*0000f588*/ ADD         FP, FP, #1 
    /*0000f58c*/ BL          0x000000000000F58C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f590*/ CMP         FP, #4 
    /*0000f594*/ ADD         R9, R9, #176                @ 0xb0 
    /*0000f598*/ BNE         VI_ProcExtChnAttr_xf50c
    /*0000f59c*/ MOV         R0, #0 
    /*0000f5a0*/ ADD         SP, SP, #116                @ 0x74 
    /*0000f5a4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcExtChnAttr_xf5a8:
    /*0000f5a8*/ MOVW        IP, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x331c] 
    /*0000f5ac*/ MOVT        IP, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x331c] 
    /*0000f5b0*/ B           VI_ProcExtChnAttr_xf3d8
    VI_ProcExtChnAttr_xf5b4:
    /*0000f5b4*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000f5b8*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000f5bc*/ ADD         SP, SP, #116                @ 0x74 
    /*0000f5c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000f5c4*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcExtChnAttr


FUNC_BEGIN VI_ProcEarlyInterrupt
    /*0000f5c8*/ MOV         R0, #0 
    /*0000f5cc*/ BX          LR 
FUNC_END VI_ProcEarlyInterrupt


FUNC_BEGIN VI_Lowdelay_IsEffect
    /*0000f5d0*/ PUSH        {R4, R5, R6, LR} 
    /*0000f5d4*/ SUB         SP, SP, #200                @ 0xc8 
    /*0000f5d8*/ LDR         R3, [R3] 
    /*0000f5dc*/ CMP         R3, #0 
    /*0000f5e0*/ MOV         R3, #0 
    /*0000f5e4*/ STR         R3, [SP, #4] 
    /*0000f5e8*/ BEQ         VI_Lowdelay_IsEffect_xf65c
    /*0000f5ec*/ ADD         LR, R0, R2, LSL #4 
    /*0000f5f0*/ MOVW        IP, #39644                  @ 0x9adc 
    /*0000f5f4*/ LDR         IP, [LR, IP] 
    /*0000f5f8*/ CMP         IP, R3 
    /*0000f5fc*/ BEQ         VI_Lowdelay_IsEffect_xf65c
    /*0000f600*/ MOV         LR, #772                    @ 0x304 
    /*0000f604*/ MOVW        R4, #7476                   @ 0x1d34 
    /*0000f608*/ MUL         LR, LR, R2 
    /*0000f60c*/ ADD         IP, R0, LR 
    /*0000f610*/ LDR         R4, [IP, R4] 
    /*0000f614*/ CMP         R4, R3 
    /*0000f618*/ BEQ         VI_Lowdelay_IsEffect_xf65c
    /*0000f61c*/ MOVW        R5, #7480                   @ 0x1d38 
    /*0000f620*/ LDR         IP, [IP, R5] 
    /*0000f624*/ SUB         IP, IP, #7 
    /*0000f628*/ CMP         IP, #1 
    /*0000f62c*/ BLS         VI_Lowdelay_IsEffect_xf668
    /*0000f630*/ ADD         LR, LR, #7488               @ 0x1d40 
    /*0000f634*/ ADD         LR, LR, #4 
    /*0000f638*/ ADD         LR, R0, LR 
    /*0000f63c*/ B           VI_Lowdelay_IsEffect_xf650
    VI_Lowdelay_IsEffect_xf640:
    /*0000f640*/ LDR         IP, [LR], #12 
    /*0000f644*/ SUB         IP, IP, #7 
    /*0000f648*/ CMP         IP, #1 
    /*0000f64c*/ BLS         VI_Lowdelay_IsEffect_xf668
    VI_Lowdelay_IsEffect_xf650:
    /*0000f650*/ ADD         R3, R3, #1 
    /*0000f654*/ CMP         R4, R3 
    /*0000f658*/ BNE         VI_Lowdelay_IsEffect_xf640
    VI_Lowdelay_IsEffect_xf65c:
    /*0000f65c*/ MOV         R0, #0 
    VI_Lowdelay_IsEffect_xf660:
    /*0000f660*/ ADD         SP, SP, #200                @ 0xc8 
    /*0000f664*/ POP         {R4, R5, R6, PC} 
    VI_Lowdelay_IsEffect_xf668:
    /*0000f668*/ MOV         R6, R2 
    /*0000f66c*/ MOV         R5, R1 
    /*0000f670*/ ADD         R2, SP, #52                 @ 0x34 
    /*0000f674*/ MOV         R1, R6 
    /*0000f678*/ MOV         R4, R0 
    /*0000f67c*/ MOV         R0, R5 
    /*0000f680*/ BL          0x000000000000F680          @ VI_DRV_GetChnLDCAttrSet [R_ARM_CALL: .text+0x29f94] 
    /*0000f684*/ ADD         R2, SP, #84                 @ 0x54 
    /*0000f688*/ MOV         R1, R6 
    /*0000f68c*/ MOV         R0, R5 
    /*0000f690*/ BL          0x000000000000F690          @ VI_DRV_GetChnLDCV2AttrSet [R_ARM_CALL: .text+0x2a104] 
    /*0000f694*/ ADD         R2, SP, #8 
    /*0000f698*/ MOV         R1, R6 
    /*0000f69c*/ MOV         R0, R5 
    /*0000f6a0*/ BL          0x000000000000F6A0          @ VI_DRV_GetChnSpreadAttrSet [R_ARM_CALL: .text+0x2a6e8] 
    /*0000f6a4*/ ADD         R2, SP, #4 
    /*0000f6a8*/ MOV         R1, R6 
    /*0000f6ac*/ MOV         R0, R5 
    /*0000f6b0*/ BL          0x000000000000F6B0          @ VI_DRV_GetChnRotationAttrSet [R_ARM_CALL: .text+0x2a5c0] 
    /*0000f6b4*/ MOV         R0, R5 
    /*0000f6b8*/ ADD         R2, SP, #24 
    /*0000f6bc*/ MOV         R1, R6 
    /*0000f6c0*/ BL          0x000000000000F6C0          @ VI_DRV_GetChnRotationExAttrSet [R_ARM_CALL: .text+0x2a35c] 
    /*0000f6c4*/ LDR         R3, [SP, #4] 
    /*0000f6c8*/ CMP         R3, #0 
    /*0000f6cc*/ BNE         VI_Lowdelay_IsEffect_xf720
    /*0000f6d0*/ MOV         R2, #468                    @ 0x1d4 
    /*0000f6d4*/ MOVW        R3, #38828                  @ 0x97ac 
    /*0000f6d8*/ MLA         R2, R2, R6, R4 
    /*0000f6dc*/ LDR         R3, [R2, R3] 
    /*0000f6e0*/ CMP         R3, #0 
    /*0000f6e4*/ BNE         VI_Lowdelay_IsEffect_xf718
    /*0000f6e8*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0000f6ec*/ CMP         R3, #0 
    /*0000f6f0*/ BNE         VI_Lowdelay_IsEffect_xf718
    /*0000f6f4*/ LDR         R3, [SP, #8] 
    /*0000f6f8*/ CMP         R3, #0 
    /*0000f6fc*/ BNE         VI_Lowdelay_IsEffect_xf718
    /*0000f700*/ LDR         R3, [SP, #24] 
    /*0000f704*/ CMP         R3, #0 
    /*0000f708*/ BNE         VI_Lowdelay_IsEffect_xf718
    /*0000f70c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0000f710*/ CMP         R3, #0 
    /*0000f714*/ BEQ         VI_Lowdelay_IsEffect_xf65c
    VI_Lowdelay_IsEffect_xf718:
    /*0000f718*/ MOV         R0, #1 
    /*0000f71c*/ B           VI_Lowdelay_IsEffect_xf660
    VI_Lowdelay_IsEffect_xf720:
    /*0000f720*/ MOV         R2, #468                    @ 0x1d4 
    /*0000f724*/ MOVW        R3, #38828                  @ 0x97ac 
    /*0000f728*/ MLA         R2, R2, R6, R4 
    /*0000f72c*/ LDR         R0, [R2, R3] 
    /*0000f730*/ CMP         R0, #1 
    /*0000f734*/ BEQ         VI_Lowdelay_IsEffect_xf768
    /*0000f738*/ CMP         R0, #0 
    /*0000f73c*/ BNE         VI_Lowdelay_IsEffect_xf65c
    /*0000f740*/ LDR         R0, [SP, #52]               @ 0x34 
    /*0000f744*/ CMP         R0, #1 
    /*0000f748*/ BNE         VI_Lowdelay_IsEffect_xf65c
    VI_Lowdelay_IsEffect_xf74c:
    /*0000f74c*/ LDR         R3, [SP, #8] 
    /*0000f750*/ CMP         R3, #0 
    /*0000f754*/ BNE         VI_Lowdelay_IsEffect_xf65c
    /*0000f758*/ LDR         R3, [SP, #24] 
    /*0000f75c*/ CMP         R3, #0 
    /*0000f760*/ BNE         VI_Lowdelay_IsEffect_xf65c
    /*0000f764*/ B           VI_Lowdelay_IsEffect_xf660
    VI_Lowdelay_IsEffect_xf768:
    /*0000f768*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0000f76c*/ CMP         R3, #0 
    /*0000f770*/ BNE         VI_Lowdelay_IsEffect_xf65c
    /*0000f774*/ B           VI_Lowdelay_IsEffect_xf74c
FUNC_END VI_Lowdelay_IsEffect


FUNC_BEGIN VI_ProcLowDelay
    /*0000f778*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000f77c*/ SUB         SP, SP, #36                 @ 0x24 
    /*0000f780*/ MOV         SL, R0 
    /*0000f784*/ MOVW        R1, #0                      @ .LC209 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42a0] 
    /*0000f788*/ LDR         R5, [PC, #360]              @ 0x000000000000f8f8 
    /*0000f78c*/ MOVT        R1, #0                      @ .LC209 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42a0] 
    /*0000f790*/ MOV         R4, #0 
    /*0000f794*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000f798*/ STR         R4, [SP, #28] 
    /*0000f79c*/ MOVW        R9, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000f7a0*/ STR         R4, [SP, #24] 
    /*0000f7a4*/ MOVW        R8, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0000f7a8*/ BL          0x000000000000F7A8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f7ac*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000f7b0*/ MOVW        R3, #0                      @ .LC211 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x432c] 
    /*0000f7b4*/ MOVW        R2, #0                      @ .LC212 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4334] 
    /*0000f7b8*/ MOVT        R3, #0                      @ .LC211 [R_ARM_MOVT_ABS: .rodata.str1.4+0x432c] 
    /*0000f7bc*/ MOVT        R2, #0                      @ .LC212 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4334] 
    /*0000f7c0*/ STR         R3, [SP, #8] 
    /*0000f7c4*/ MOV         R0, SL 
    /*0000f7c8*/ STR         R2, [SP, #4] 
    /*0000f7cc*/ MOVW        R3, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*0000f7d0*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000f7d4*/ MOVT        R3, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*0000f7d8*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000f7dc*/ STR         R3, [SP] 
    /*0000f7e0*/ MOVW        R1, #0                      @ .LC210 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x431c] 
    /*0000f7e4*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*0000f7e8*/ MOVT        R1, #0                      @ .LC210 [R_ARM_MOVT_ABS: .rodata.str1.4+0x431c] 
    /*0000f7ec*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*0000f7f0*/ MOVT        R9, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000f7f4*/ MOVT        R8, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0000f7f8*/ BL          0x000000000000F7F8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f7fc*/ MOV         R0, SL 
    /*0000f800*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000f804*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000f808*/ BL          0x000000000000F808          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f80c*/ MOVW        R3, #0                      @ .LC213 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x433c] 
    /*0000f810*/ MOVT        R3, #0                      @ .LC213 [R_ARM_MOVT_ABS: .rodata.str1.4+0x433c] 
    /*0000f814*/ STR         R3, [SP, #16] 
    VI_ProcLowDelay_xf818:
    /*0000f818*/ MOV         R0, R5 
    /*0000f81c*/ BL          0x000000000000F81C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f820*/ SUBS        R7, R0, #0 
    /*0000f824*/ BNE         VI_ProcLowDelay_xf8e8
    /*0000f828*/ LDR         FP, [R6], #4 
    /*0000f82c*/ CMP         FP, #0 
    /*0000f830*/ ADD         R3, FP, #36864              @ 0x9000 
    /*0000f834*/ BEQ         VI_ProcLowDelay_xf844
    /*0000f838*/ LDR         R3, [R3, #1484]             @ 0x5cc 
    /*0000f83c*/ CMP         R3, #0 
    /*0000f840*/ BNE         VI_ProcLowDelay_xf868
    VI_ProcLowDelay_xf844:
    /*0000f844*/ MOV         R0, R5 
    /*0000f848*/ ADD         R4, R4, #1 
    /*0000f84c*/ BL          0x000000000000F84C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f850*/ CMP         R4, #4 
    /*0000f854*/ ADD         R5, R5, #176                @ 0xb0 
    /*0000f858*/ BNE         VI_ProcLowDelay_xf818
    /*0000f85c*/ MOV         R0, #0 
    /*0000f860*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000f864*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcLowDelay_xf868:
    /*0000f868*/ ADD         R2, SP, #24 
    /*0000f86c*/ MOV         R1, R7 
    /*0000f870*/ MOV         R0, R4 
    /*0000f874*/ BL          0x000000000000F874          @ VI_DRV_GetChnLowDelayAttr [R_ARM_CALL: .text+0x2a81c] 
    /*0000f878*/ LDR         IP, [SP, #24] 
    /*0000f87c*/ MOV         R0, FP 
    /*0000f880*/ ADD         R3, SP, #24 
    /*0000f884*/ CMP         IP, #1 
    /*0000f888*/ LDR         IP, [SP, #28] 
    /*0000f88c*/ MOV         R2, R7 
    /*0000f890*/ MOV         R1, R4 
    /*0000f894*/ MOVEQ       FP, R9 
    /*0000f898*/ MOVNE       FP, R8 
    /*0000f89c*/ STR         IP, [SP, #20] 
    /*0000f8a0*/ BL          0x000000000000F8A0          @ VI_Lowdelay_IsEffect [R_ARM_CALL: .text+0xf5d0] 
    /*0000f8a4*/ LDR         IP, [SP, #20] 
    /*0000f8a8*/ MOV         R3, R7 
    /*0000f8ac*/ LDR         R1, [SP, #16] 
    /*0000f8b0*/ MOV         R2, R4 
    /*0000f8b4*/ STR         FP, [SP] 
    /*0000f8b8*/ STR         IP, [SP, #4] 
    /*0000f8bc*/ CMP         R0, #1 
    /*0000f8c0*/ MOV         R0, SL 
    /*0000f8c4*/ MOVEQ       IP, R9 
    /*0000f8c8*/ MOVNE       IP, R8 
    /*0000f8cc*/ STR         IP, [SP, #8] 
    /*0000f8d0*/ BL          0x000000000000F8D0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f8d4*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000f8d8*/ MOV         R0, SL 
    /*0000f8dc*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000f8e0*/ BL          0x000000000000F8E0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f8e4*/ B           VI_ProcLowDelay_xf844
    VI_ProcLowDelay_xf8e8:
    /*0000f8e8*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000f8ec*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000f8f0*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000f8f4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000f8f8*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcLowDelay


FUNC_BEGIN VI_ProcChnCropAttr
    /*0000f8fc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000f900*/ SUB         SP, SP, #92                 @ 0x5c 
    /*0000f904*/ MOV         R7, R0 
    /*0000f908*/ MOVW        R1, #0                      @ .LC214 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x434c] 
    /*0000f90c*/ LDR         R9, [PC, #552]              @ 0x000000000000fb3c 
    /*0000f910*/ MOVT        R1, #0                      @ .LC214 [R_ARM_MOVT_ABS: .rodata.str1.4+0x434c] 
    /*0000f914*/ BL          0x000000000000F914          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f918*/ MOVW        FP, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000f91c*/ MOVW        R2, #0                      @ .LC216 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43f0] 
    /*0000f920*/ MOVW        R3, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43f8] 
    /*0000f924*/ MOVT        R2, #0                      @ .LC216 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43f0] 
    /*0000f928*/ MOVT        R3, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43f8] 
    /*0000f92c*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000f930*/ MOV         R0, R7 
    /*0000f934*/ STR         R3, [SP, #32] 
    /*0000f938*/ MOVW        R2, #0                      @ .LC218 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4400] 
    /*0000f93c*/ MOVW        R3, #0                      @ .LC219 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4408] 
    /*0000f940*/ MOVT        R2, #0                      @ .LC218 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4400] 
    /*0000f944*/ MOVT        R3, #0                      @ .LC219 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4408] 
    /*0000f948*/ STR         R2, [SP, #28] 
    /*0000f94c*/ STR         R3, [SP, #24] 
    /*0000f950*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x344c] 
    /*0000f954*/ MOVW        R3, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3454] 
    /*0000f958*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x344c] 
    /*0000f95c*/ MOVT        R3, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3454] 
    /*0000f960*/ STR         R2, [SP, #20] 
    /*0000f964*/ STR         R3, [SP, #16] 
    /*0000f968*/ MOVW        R2, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a44] 
    /*0000f96c*/ MOVW        R3, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a4c] 
    /*0000f970*/ MOVT        R2, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a44] 
    /*0000f974*/ MOVT        R3, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a4c] 
    /*0000f978*/ STR         R2, [SP, #12] 
    /*0000f97c*/ STR         R3, [SP, #8] 
    /*0000f980*/ MOVW        R2, #0                      @ .LC220 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4410] 
    /*0000f984*/ MOVW        R3, #0                      @ .LC221 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x441c] 
    /*0000f988*/ MOVT        R2, #0                      @ .LC220 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4410] 
    /*0000f98c*/ MOVT        R3, #0                      @ .LC221 [R_ARM_MOVT_ABS: .rodata.str1.4+0x441c] 
    /*0000f990*/ STR         R2, [SP, #4] 
    /*0000f994*/ STR         R3, [SP] 
    /*0000f998*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000f99c*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*0000f9a0*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000f9a4*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*0000f9a8*/ MOVW        R1, #0                      @ .LC215 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43c8] 
    /*0000f9ac*/ MOVW        SL, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0000f9b0*/ MOVT        R1, #0                      @ .LC215 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43c8] 
    /*0000f9b4*/ MOVT        FP, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000f9b8*/ MOVT        SL, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0000f9bc*/ BL          0x000000000000F9BC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f9c0*/ MOV         R6, #0 
    /*0000f9c4*/ MOV         R0, R7 
    /*0000f9c8*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000f9cc*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000f9d0*/ BL          0x000000000000F9D0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f9d4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000f9d8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000f9dc*/ STR         R3, [SP, #44]               @ 0x2c 
    VI_ProcChnCropAttr_xf9e0:
    /*0000f9e0*/ MOV         R0, R9 
    /*0000f9e4*/ BL          0x000000000000F9E4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f9e8*/ SUBS        R4, R0, #0 
    /*0000f9ec*/ BNE         VI_ProcChnCropAttr_xfb2c
    /*0000f9f0*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000f9f4*/ LDR         R5, [R3], #4 
    /*0000f9f8*/ CMP         R5, #0 
    /*0000f9fc*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000fa00*/ BEQ         VI_ProcChnCropAttr_xfb08
    /*0000fa04*/ ADD         R5, R5, #38144              @ 0x9500 
    /*0000fa08*/ MOVW        R8, #0                      @ .LC222 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4424] 
    /*0000fa0c*/ ADD         R5, R5, #200                @ 0xc8 
    /*0000fa10*/ MOVT        R8, #0                      @ .LC222 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4424] 
    /*0000fa14*/ B           VI_ProcChnCropAttr_xfa24
    VI_ProcChnCropAttr_xfa18:
    /*0000fa18*/ ADD         R4, R4, #1 
    /*0000fa1c*/ CMP         R4, #9 
    /*0000fa20*/ BEQ         VI_ProcChnCropAttr_xfb08
    VI_ProcChnCropAttr_xfa24:
    /*0000fa24*/ LDR         R3, [R5, #4]! 
    /*0000fa28*/ CMP         R3, #0 
    /*0000fa2c*/ BEQ         VI_ProcChnCropAttr_xfa18
    /*0000fa30*/ ADD         R2, SP, #64                 @ 0x40 
    /*0000fa34*/ MOV         R1, R4 
    /*0000fa38*/ MOV         R0, R6 
    /*0000fa3c*/ BL          0x000000000000FA3C          @ VI_DRV_GetChnCrop [R_ARM_CALL: .text+0x29db0] 
    /*0000fa40*/ ADD         R2, SP, #48                 @ 0x30 
    /*0000fa44*/ MOV         R1, R4 
    /*0000fa48*/ MOV         R0, R6 
    /*0000fa4c*/ BL          0x000000000000FA4C          @ VI_DRV_GetChnTrimCropInfo [R_ARM_CALL: .text+0x2b750] 
    /*0000fa50*/ LDR         R2, [SP, #64]               @ 0x40 
    /*0000fa54*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0000fa58*/ MOVW        LR, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31c0] 
    /*0000fa5c*/ CMP         R2, #1 
    /*0000fa60*/ MOVW        R1, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31c4] 
    /*0000fa64*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000fa68*/ MOVT        LR, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31c0] 
    /*0000fa6c*/ MOVEQ       R2, FP 
    /*0000fa70*/ MOVNE       R2, SL 
    /*0000fa74*/ CMP         R0, #0 
    /*0000fa78*/ MOVT        R1, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31c4] 
    /*0000fa7c*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000fa80*/ BEQ         VI_ProcChnCropAttr_xfa90
    /*0000fa84*/ CMP         R0, #1 
    /*0000fa88*/ MOVEQ       LR, R1 
    /*0000fa8c*/ MOVNE       LR, R3 
    VI_ProcChnCropAttr_xfa90:
    /*0000fa90*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*0000fa94*/ MOV         R3, R4 
    /*0000fa98*/ LDR         R0, [SP, #56]               @ 0x38 
    /*0000fa9c*/ ADD         R4, R4, #1 
    /*0000faa0*/ LDR         IP, [SP, #52]               @ 0x34 
    /*0000faa4*/ STR         LR, [SP, #4] 
    /*0000faa8*/ STR         R2, [SP] 
    /*0000faac*/ LDR         LR, [SP, #48]               @ 0x30 
    /*0000fab0*/ LDR         R2, [SP, #84]               @ 0x54 
    /*0000fab4*/ STR         R1, [SP, #36]               @ 0x24 
    /*0000fab8*/ STR         R0, [SP, #32] 
    /*0000fabc*/ LDR         R1, [SP, #80]               @ 0x50 
    /*0000fac0*/ LDR         R0, [SP, #76]               @ 0x4c 
    /*0000fac4*/ STR         IP, [SP, #28] 
    /*0000fac8*/ LDR         IP, [SP, #72]               @ 0x48 
    /*0000facc*/ STR         LR, [SP, #24] 
    /*0000fad0*/ STR         R2, [SP, #20] 
    /*0000fad4*/ MOV         R2, R6 
    /*0000fad8*/ STR         R1, [SP, #16] 
    /*0000fadc*/ MOV         R1, R8 
    /*0000fae0*/ STR         R0, [SP, #12] 
    /*0000fae4*/ MOV         R0, R7 
    /*0000fae8*/ STR         IP, [SP, #8] 
    /*0000faec*/ BL          0x000000000000FAEC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000faf0*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000faf4*/ MOV         R0, R7 
    /*0000faf8*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000fafc*/ BL          0x000000000000FAFC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fb00*/ CMP         R4, #9 
    /*0000fb04*/ BNE         VI_ProcChnCropAttr_xfa24
    VI_ProcChnCropAttr_xfb08:
    /*0000fb08*/ MOV         R0, R9 
    /*0000fb0c*/ ADD         R6, R6, #1 
    /*0000fb10*/ BL          0x000000000000FB10          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fb14*/ CMP         R6, #4 
    /*0000fb18*/ ADD         R9, R9, #176                @ 0xb0 
    /*0000fb1c*/ BNE         VI_ProcChnCropAttr_xf9e0
    /*0000fb20*/ MOV         R0, #0 
    /*0000fb24*/ ADD         SP, SP, #92                 @ 0x5c 
    /*0000fb28*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcChnCropAttr_xfb2c:
    /*0000fb2c*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000fb30*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000fb34*/ ADD         SP, SP, #92                 @ 0x5c 
    /*0000fb38*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000fb3c*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcChnCropAttr


FUNC_BEGIN VI_ProcChnRotation
    /*0000fb40*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000fb44*/ SUB         SP, SP, #16 
    /*0000fb48*/ MOV         R7, R0 
    /*0000fb4c*/ MOVW        R1, #0                      @ .LC223 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x444c] 
    /*0000fb50*/ MOVT        R1, #0                      @ .LC223 [R_ARM_MOVT_ABS: .rodata.str1.4+0x444c] 
    /*0000fb54*/ MOV         R4, #0 
    /*0000fb58*/ STR         R4, [SP, #12] 
    /*0000fb5c*/ BL          0x000000000000FB5C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fb60*/ MOVW        R2, #0                      @ .LC225 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x44d4] 
    /*0000fb64*/ MOV         R0, R7 
    /*0000fb68*/ MOVT        R2, #0                      @ .LC225 [R_ARM_MOVT_ABS: .rodata.str1.4+0x44d4] 
    /*0000fb6c*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*0000fb70*/ STR         R2, [SP] 
    /*0000fb74*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*0000fb78*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000fb7c*/ MOVW        R1, #0                      @ .LC224 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x44c8] 
    /*0000fb80*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000fb84*/ MOVT        R1, #0                      @ .LC224 [R_ARM_MOVT_ABS: .rodata.str1.4+0x44c8] 
    /*0000fb88*/ BL          0x000000000000FB88          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fb8c*/ MOV         R0, R7 
    /*0000fb90*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000fb94*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000fb98*/ BL          0x000000000000FB98          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fb9c*/ LDR         R5, [PC, #248]              @ 0x000000000000fc9c 
    /*0000fba0*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000fba4*/ MOVW        R9, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31d0] 
    /*0000fba8*/ MOVW        R8, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0000fbac*/ MOVW        SL, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31d4] 
    /*0000fbb0*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000fbb4*/ MOVT        R9, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31d0] 
    /*0000fbb8*/ MOVT        R8, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*0000fbbc*/ MOVT        SL, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31d4] 
    VI_ProcChnRotation_xfbc0:
    /*0000fbc0*/ MOV         R0, R5 
    /*0000fbc4*/ BL          0x000000000000FBC4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000fbc8*/ SUBS        R1, R0, #0 
    /*0000fbcc*/ BNE         VI_ProcChnRotation_xfc80
    /*0000fbd0*/ LDR         R3, [R6], #4 
    /*0000fbd4*/ CMP         R3, #0 
    /*0000fbd8*/ BEQ         VI_ProcChnRotation_xfbec
    /*0000fbdc*/ ADD         R3, R3, #36864              @ 0x9000 
    /*0000fbe0*/ LDR         R3, [R3, #1484]             @ 0x5cc 
    /*0000fbe4*/ CMP         R3, #0 
    /*0000fbe8*/ BNE         VI_ProcChnRotation_xfc10
    VI_ProcChnRotation_xfbec:
    /*0000fbec*/ MOV         R0, R5 
    /*0000fbf0*/ ADD         R4, R4, #1 
    /*0000fbf4*/ BL          0x000000000000FBF4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fbf8*/ CMP         R4, #4 
    /*0000fbfc*/ ADD         R5, R5, #176                @ 0xb0 
    /*0000fc00*/ BNE         VI_ProcChnRotation_xfbc0
    /*0000fc04*/ MOV         R0, #0 
    /*0000fc08*/ ADD         SP, SP, #16 
    /*0000fc0c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_ProcChnRotation_xfc10:
    /*0000fc10*/ ADD         R2, SP, #12 
    /*0000fc14*/ MOV         R0, R4 
    /*0000fc18*/ BL          0x000000000000FC18          @ VI_DRV_GetChnRotationAttrSet [R_ARM_CALL: .text+0x2a5c0] 
    /*0000fc1c*/ LDR         R3, [SP, #12] 
    /*0000fc20*/ CMP         R3, #0 
    /*0000fc24*/ MOVWEQ      R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31c8] 
    /*0000fc28*/ MOVTEQ      R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31c8] 
    /*0000fc2c*/ BEQ         VI_ProcChnRotation_xfc50
    /*0000fc30*/ CMP         R3, #1 
    /*0000fc34*/ BEQ         VI_ProcChnRotation_xfc90
    /*0000fc38*/ CMP         R3, #2 
    /*0000fc3c*/ MOVEQ       R3, SL 
    /*0000fc40*/ BEQ         VI_ProcChnRotation_xfc50
    /*0000fc44*/ CMP         R3, #3 
    /*0000fc48*/ MOVEQ       R3, R9 
    /*0000fc4c*/ MOVNE       R3, R8 
    VI_ProcChnRotation_xfc50:
    /*0000fc50*/ STR         R3, [SP] 
    /*0000fc54*/ MOV         R2, R4 
    /*0000fc58*/ MOV         R3, #0 
    /*0000fc5c*/ MOV         R0, R7 
    /*0000fc60*/ MOVW        R1, #0                      @ .LC226 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x44e0] 
    /*0000fc64*/ MOVT        R1, #0                      @ .LC226 [R_ARM_MOVT_ABS: .rodata.str1.4+0x44e0] 
    /*0000fc68*/ BL          0x000000000000FC68          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fc6c*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000fc70*/ MOV         R0, R7 
    /*0000fc74*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000fc78*/ BL          0x000000000000FC78          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fc7c*/ B           VI_ProcChnRotation_xfbec
    VI_ProcChnRotation_xfc80:
    /*0000fc80*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000fc84*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000fc88*/ ADD         SP, SP, #16 
    /*0000fc8c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_ProcChnRotation_xfc90:
    /*0000fc90*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31cc] 
    /*0000fc94*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31cc] 
    /*0000fc98*/ B           VI_ProcChnRotation_xfc50
    /*0000fc9c*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcChnRotation


FUNC_BEGIN VI_ProcChnLDCAttr
    /*0000fca0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000fca4*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000fca8*/ MOV         R9, R0 
    /*0000fcac*/ MOVW        R1, #0                      @ .LC227 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x44ec] 
    /*0000fcb0*/ MOVT        R1, #0                      @ .LC227 [R_ARM_MOVT_ABS: .rodata.str1.4+0x44ec] 
    /*0000fcb4*/ LDR         R4, [PC, #420]              @ 0x000000000000fe60 
    /*0000fcb8*/ BL          0x000000000000FCB8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fcbc*/ MOVW        R2, #0                      @ .LC229 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x458c] 
    /*0000fcc0*/ MOVW        R3, #0                      @ .LC230 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x459c] 
    /*0000fcc4*/ MOVT        R2, #0                      @ .LC229 [R_ARM_MOVT_ABS: .rodata.str1.4+0x458c] 
    /*0000fcc8*/ MOVT        R3, #0                      @ .LC230 [R_ARM_MOVT_ABS: .rodata.str1.4+0x459c] 
    /*0000fccc*/ STR         R2, [SP, #28] 
    /*0000fcd0*/ STR         R3, [SP, #24] 
    /*0000fcd4*/ MOVW        R2, #0                      @ .LC231 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45a4] 
    /*0000fcd8*/ MOVW        R3, #0                      @ .LC232 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45ac] 
    /*0000fcdc*/ MOVT        R2, #0                      @ .LC231 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45a4] 
    /*0000fce0*/ MOVT        R3, #0                      @ .LC232 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45ac] 
    /*0000fce4*/ STR         R2, [SP, #20] 
    /*0000fce8*/ STR         R3, [SP, #16] 
    /*0000fcec*/ MOVW        R2, #0                      @ .LC233 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45b4] 
    /*0000fcf0*/ MOVW        R3, #0                      @ .LC234 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45bc] 
    /*0000fcf4*/ MOVT        R2, #0                      @ .LC233 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45b4] 
    /*0000fcf8*/ MOVT        R3, #0                      @ .LC234 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45bc] 
    /*0000fcfc*/ STR         R2, [SP, #12] 
    /*0000fd00*/ STR         R3, [SP, #8] 
    /*0000fd04*/ MOVW        R2, #0                      @ .LC235 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45c4] 
    /*0000fd08*/ MOVW        R3, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*0000fd0c*/ MOVT        R2, #0                      @ .LC235 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45c4] 
    /*0000fd10*/ MOVT        R3, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*0000fd14*/ STR         R2, [SP, #4] 
    /*0000fd18*/ STR         R3, [SP] 
    /*0000fd1c*/ MOV         R0, R9 
    /*0000fd20*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*0000fd24*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000fd28*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*0000fd2c*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000fd30*/ MOVW        R1, #0                      @ .LC228 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4568] 
    /*0000fd34*/ MOVT        R1, #0                      @ .LC228 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4568] 
    /*0000fd38*/ BL          0x000000000000FD38          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fd3c*/ MOV         R0, R9 
    /*0000fd40*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000fd44*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000fd48*/ BL          0x000000000000FD48          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fd4c*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000fd50*/ MOVW        R8, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000fd54*/ MOVW        R7, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0000fd58*/ MOVW        SL, #0                      @ .LC236 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45cc] 
    /*0000fd5c*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000fd60*/ MOVT        R8, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000fd64*/ MOVT        R7, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0000fd68*/ MOVT        SL, #0                      @ .LC236 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45cc] 
    /*0000fd6c*/ MOV         R5, #0 
    VI_ProcChnLDCAttr_xfd70:
    /*0000fd70*/ MOV         R0, R4 
    /*0000fd74*/ BL          0x000000000000FD74          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000fd78*/ SUBS        FP, R0, #0 
    /*0000fd7c*/ BNE         VI_ProcChnLDCAttr_xfe50
    /*0000fd80*/ LDR         R2, [R6], #4 
    /*0000fd84*/ CMP         R2, #0 
    /*0000fd88*/ ADD         R3, R2, #36864              @ 0x9000 
    /*0000fd8c*/ BEQ         VI_ProcChnLDCAttr_xfd9c
    /*0000fd90*/ LDR         R3, [R3, #1484]             @ 0x5cc 
    /*0000fd94*/ CMP         R3, #0 
    /*0000fd98*/ BNE         VI_ProcChnLDCAttr_xfdc0
    VI_ProcChnLDCAttr_xfd9c:
    /*0000fd9c*/ MOV         R0, R4 
    /*0000fda0*/ ADD         R5, R5, #1 
    /*0000fda4*/ BL          0x000000000000FDA4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fda8*/ CMP         R5, #4 
    /*0000fdac*/ ADD         R4, R4, #176                @ 0xb0 
    /*0000fdb0*/ BNE         VI_ProcChnLDCAttr_xfd70
    /*0000fdb4*/ MOV         R0, #0 
    /*0000fdb8*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000fdbc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcChnLDCAttr_xfdc0:
    /*0000fdc0*/ ADD         R2, SP, #32 
    /*0000fdc4*/ MOV         R1, FP 
    /*0000fdc8*/ MOV         R0, R5 
    /*0000fdcc*/ BL          0x000000000000FDCC          @ VI_DRV_GetChnLDCAttrSet [R_ARM_CALL: .text+0x29f94] 
    /*0000fdd0*/ LDR         R2, [SP, #32] 
    /*0000fdd4*/ LDR         R0, [SP, #60]               @ 0x3c 
    /*0000fdd8*/ MOV         R3, FP 
    /*0000fddc*/ LDR         IP, [SP, #56]               @ 0x38 
    /*0000fde0*/ CMP         R2, #1 
    /*0000fde4*/ LDR         R1, [SP, #48]               @ 0x30 
    /*0000fde8*/ MOVEQ       R2, R8 
    /*0000fdec*/ MOVNE       R2, R7 
    /*0000fdf0*/ STR         R2, [SP] 
    /*0000fdf4*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0000fdf8*/ LDR         LR, [SP, #52]               @ 0x34 
    /*0000fdfc*/ STR         R0, [SP, #28] 
    /*0000fe00*/ CMP         R2, #1 
    /*0000fe04*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000fe08*/ STR         IP, [SP, #24] 
    /*0000fe0c*/ MOVEQ       R2, R8 
    /*0000fe10*/ LDR         IP, [SP, #40]               @ 0x28 
    /*0000fe14*/ MOVNE       R2, R7 
    /*0000fe18*/ STR         R1, [SP, #16] 
    /*0000fe1c*/ MOV         R1, SL 
    /*0000fe20*/ STR         R2, [SP, #4] 
    /*0000fe24*/ MOV         R2, R5 
    /*0000fe28*/ STR         R0, [SP, #12] 
    /*0000fe2c*/ MOV         R0, R9 
    /*0000fe30*/ STR         LR, [SP, #20] 
    /*0000fe34*/ STR         IP, [SP, #8] 
    /*0000fe38*/ BL          0x000000000000FE38          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fe3c*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000fe40*/ MOV         R0, R9 
    /*0000fe44*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000fe48*/ BL          0x000000000000FE48          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fe4c*/ B           VI_ProcChnLDCAttr_xfd9c
    VI_ProcChnLDCAttr_xfe50:
    /*0000fe50*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000fe54*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000fe58*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000fe5c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000fe60*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcChnLDCAttr


FUNC_BEGIN VI_ProcChnLDCV2Attr
    /*0000fe64*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000fe68*/ MOVW        R1, #0                      @ .LC237 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45f0] 
    /*0000fe6c*/ SUB         SP, SP, #148                @ 0x94 
    /*0000fe70*/ MOVT        R1, #0                      @ .LC237 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45f0] 
    /*0000fe74*/ MOV         FP, R0 
    /*0000fe78*/ BL          0x000000000000FE78          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fe7c*/ LDR         R4, [PC, #360]              @ 0x000000000000ffec 
    /*0000fe80*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0000fe84*/ MOVW        SL, #0                      @ .LC239 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4684] 
    /*0000fe88*/ MOVW        R9, #0                      @ .LC240 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x468c] 
    /*0000fe8c*/ MOVW        R8, #0                      @ .LC241 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4694] 
    /*0000fe90*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0000fe94*/ MOVT        SL, #0                      @ .LC239 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4684] 
    /*0000fe98*/ MOVT        R9, #0                      @ .LC240 [R_ARM_MOVT_ABS: .rodata.str1.4+0x468c] 
    /*0000fe9c*/ MOVT        R8, #0                      @ .LC241 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4694] 
    /*0000fea0*/ MOV         R5, #0 
    VI_ProcChnLDCV2Attr_xfea4:
    /*0000fea4*/ MOV         R0, R4 
    /*0000fea8*/ BL          0x000000000000FEA8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000feac*/ SUBS        R7, R0, #0 
    /*0000feb0*/ BNE         VI_ProcChnLDCV2Attr_xffdc
    /*0000feb4*/ LDR         R3, [R6], #4 
    /*0000feb8*/ CMP         R3, #0 
    /*0000febc*/ ADD         R2, R3, #36864              @ 0x9000 
    /*0000fec0*/ BEQ         VI_ProcChnLDCV2Attr_xfed0
    /*0000fec4*/ LDR         R3, [R2, #1484]             @ 0x5cc 
    /*0000fec8*/ CMP         R3, #0 
    /*0000fecc*/ BNE         VI_ProcChnLDCV2Attr_xfef4
    VI_ProcChnLDCV2Attr_xfed0:
    /*0000fed0*/ MOV         R0, R4 
    /*0000fed4*/ ADD         R5, R5, #1 
    /*0000fed8*/ BL          0x000000000000FED8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fedc*/ CMP         R5, #4 
    /*0000fee0*/ ADD         R4, R4, #176                @ 0xb0 
    /*0000fee4*/ BNE         VI_ProcChnLDCV2Attr_xfea4
    /*0000fee8*/ MOV         R0, #0 
    /*0000feec*/ ADD         SP, SP, #148                @ 0x94 
    /*0000fef0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcChnLDCV2Attr_xfef4:
    /*0000fef4*/ MOV         R1, R7 
    /*0000fef8*/ MOV         R0, R5 
    /*0000fefc*/ ADD         R2, SP, #28 
    /*0000ff00*/ BL          0x000000000000FF00          @ VI_DRV_GetChnLDCV2AttrSet [R_ARM_CALL: .text+0x2a104] 
    /*0000ff04*/ LDR         R3, [SP, #28] 
    /*0000ff08*/ CMP         R3, #1 
    /*0000ff0c*/ BNE         VI_ProcChnLDCV2Attr_xfed0
    /*0000ff10*/ STR         SL, [SP, #16] 
    /*0000ff14*/ MOV         R0, FP 
    /*0000ff18*/ STR         R9, [SP, #12] 
    /*0000ff1c*/ MOVW        R3, #0                      @ .LC242 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x469c] 
    /*0000ff20*/ STR         R8, [SP, #8] 
    /*0000ff24*/ MOVT        R3, #0                      @ .LC242 [R_ARM_MOVT_ABS: .rodata.str1.4+0x469c] 
    /*0000ff28*/ MOVW        R2, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*0000ff2c*/ STR         R3, [SP, #4] 
    /*0000ff30*/ MOVT        R2, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*0000ff34*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*0000ff38*/ STR         R2, [SP] 
    /*0000ff3c*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*0000ff40*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*0000ff44*/ MOVW        R1, #0                      @ .LC238 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x466c] 
    /*0000ff48*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*0000ff4c*/ MOVT        R1, #0                      @ .LC238 [R_ARM_MOVT_ABS: .rodata.str1.4+0x466c] 
    /*0000ff50*/ BL          0x000000000000FF50          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ff54*/ MOV         R0, FP 
    /*0000ff58*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0000ff5c*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0000ff60*/ BL          0x000000000000FF60          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ff64*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000ff68*/ LDR         LR, [SP, #28] 
    /*0000ff6c*/ MOV         R3, R7 
    /*0000ff70*/ LDR         IP, [SP, #44]               @ 0x2c 
    /*0000ff74*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0000ff78*/ LDR         R7, [SP, #32] 
    /*0000ff7c*/ CMP         LR, #1 
    /*0000ff80*/ STR         R0, [SP, #12] 
    /*0000ff84*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0000ff88*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000ff8c*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0000ff90*/ STR         IP, [SP, #16] 
    /*0000ff94*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*0000ff98*/ STR         R7, [SP, #4] 
    /*0000ff9c*/ MOVNE       R2, R1 
    /*0000ffa0*/ STR         R0, [SP, #8] 
    /*0000ffa4*/ MOVW        R1, #0                      @ .LC243 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x46a4] 
    /*0000ffa8*/ STR         R2, [SP] 
    /*0000ffac*/ MOVT        R1, #0                      @ .LC243 [R_ARM_MOVT_ABS: .rodata.str1.4+0x46a4] 
    /*0000ffb0*/ MOV         R2, R5 
    /*0000ffb4*/ MOV         R0, FP 
    /*0000ffb8*/ BL          0x000000000000FFB8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ffbc*/ MOV         R0, FP 
    /*0000ffc0*/ MOVW        R1, #0                      @ .LC244 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x46bc] 
    /*0000ffc4*/ MOVT        R1, #0                      @ .LC244 [R_ARM_MOVT_ABS: .rodata.str1.4+0x46bc] 
    /*0000ffc8*/ BL          0x000000000000FFC8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ffcc*/ ADD         R1, SP, #28 
    /*0000ffd0*/ MOV         R0, FP 
    /*0000ffd4*/ BL          0x000000000000FFD4          @ VI_DRV_ProcLDCV2Attr [R_ARM_CALL: .text+0x3417c] 
    /*0000ffd8*/ B           VI_ProcChnLDCV2Attr_xfed0
    VI_ProcChnLDCV2Attr_xffdc:
    /*0000ffdc*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000ffe0*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000ffe4*/ ADD         SP, SP, #148                @ 0x94 
    /*0000ffe8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000ffec*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcChnLDCV2Attr


FUNC_BEGIN VI_ProcChnRotationExAttr
    /*0000fff0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000fff4*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000fff8*/ MOV         R7, R0 
    /*0000fffc*/ MOVW        R1, #0                      @ .LC245 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x46c0] 
    /*00010000*/ MOVT        R1, #0                      @ .LC245 [R_ARM_MOVT_ABS: .rodata.str1.4+0x46c0] 
    /*00010004*/ LDR         R4, [PC, #400]              @ 0x000000000001019c 
    /*00010008*/ BL          0x0000000000010008          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001000c*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x344c] 
    /*00010010*/ MOVW        R3, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3454] 
    /*00010014*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x344c] 
    /*00010018*/ MOVT        R3, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3454] 
    /*0001001c*/ STR         R2, [SP, #24] 
    /*00010020*/ STR         R3, [SP, #20] 
    /*00010024*/ MOVW        R2, #0                      @ .LC230 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x459c] 
    /*00010028*/ MOVW        R3, #0                      @ .LC231 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45a4] 
    /*0001002c*/ MOVT        R2, #0                      @ .LC230 [R_ARM_MOVT_ABS: .rodata.str1.4+0x459c] 
    /*00010030*/ MOVT        R3, #0                      @ .LC231 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45a4] 
    /*00010034*/ STR         R2, [SP, #16] 
    /*00010038*/ STR         R3, [SP, #12] 
    /*0001003c*/ MOVW        R2, #0                      @ .LC247 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4760] 
    /*00010040*/ MOVW        R3, #0                      @ .LC248 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4768] 
    /*00010044*/ MOVT        R2, #0                      @ .LC247 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4760] 
    /*00010048*/ MOVT        R3, #0                      @ .LC248 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4768] 
    /*0001004c*/ STR         R2, [SP, #8] 
    /*00010050*/ STR         R3, [SP, #4] 
    /*00010054*/ MOVW        R2, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*00010058*/ MOV         R0, R7 
    /*0001005c*/ MOVT        R2, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*00010060*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*00010064*/ STR         R2, [SP] 
    /*00010068*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*0001006c*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*00010070*/ MOVW        R1, #0                      @ .LC246 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x473c] 
    /*00010074*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*00010078*/ MOVT        R1, #0                      @ .LC246 [R_ARM_MOVT_ABS: .rodata.str1.4+0x473c] 
    /*0001007c*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00010080*/ BL          0x0000000000010080          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010084*/ MOV         R0, R7 
    /*00010088*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0001008c*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00010090*/ BL          0x0000000000010090          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010094*/ MOVW        R9, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*00010098*/ MOVW        R8, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0001009c*/ MOVW        SL, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*000100a0*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000100a4*/ MOVT        R9, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*000100a8*/ MOVT        R8, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*000100ac*/ MOVT        SL, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*000100b0*/ MOV         R5, #0 
    VI_ProcChnRotationExAttr_x100b4:
    /*000100b4*/ MOV         R0, R4 
    /*000100b8*/ BL          0x00000000000100B8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000100bc*/ SUBS        FP, R0, #0 
    /*000100c0*/ BNE         VI_ProcChnRotationExAttr_x1018c
    /*000100c4*/ LDR         R3, [R6], #4 
    /*000100c8*/ CMP         R3, #0 
    /*000100cc*/ ADD         R2, R3, #36864              @ 0x9000 
    /*000100d0*/ BEQ         VI_ProcChnRotationExAttr_x100e0
    /*000100d4*/ LDR         R3, [R2, #1484]             @ 0x5cc 
    /*000100d8*/ CMP         R3, #0 
    /*000100dc*/ BNE         VI_ProcChnRotationExAttr_x10104
    VI_ProcChnRotationExAttr_x100e0:
    /*000100e0*/ MOV         R0, R4 
    /*000100e4*/ ADD         R5, R5, #1 
    /*000100e8*/ BL          0x00000000000100E8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000100ec*/ CMP         R5, #4 
    /*000100f0*/ ADD         R4, R4, #176                @ 0xb0 
    /*000100f4*/ BNE         VI_ProcChnRotationExAttr_x100b4
    /*000100f8*/ MOV         R0, #0 
    /*000100fc*/ ADD         SP, SP, #68                 @ 0x44 
    /*00010100*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcChnRotationExAttr_x10104:
    /*00010104*/ MOV         R1, FP 
    /*00010108*/ ADD         R2, SP, #36                 @ 0x24 
    /*0001010c*/ MOV         R0, R5 
    /*00010110*/ BL          0x0000000000010110          @ VI_DRV_GetChnRotationExAttrSet [R_ARM_CALL: .text+0x2a35c] 
    /*00010114*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00010118*/ LDR         R2, [SP, #40]               @ 0x28 
    /*0001011c*/ MOVW        R1, #0                      @ .LC249 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4774] 
    /*00010120*/ CMP         R3, #1 
    /*00010124*/ LDR         R0, [SP, #48]               @ 0x30 
    /*00010128*/ LDR         LR, [SP, #56]               @ 0x38 
    /*0001012c*/ MOVT        R1, #0                      @ .LC249 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4774] 
    /*00010130*/ MOVEQ       R3, R9 
    /*00010134*/ MOVNE       R3, R8 
    /*00010138*/ CMP         R2, #2 
    /*0001013c*/ STR         R3, [SP] 
    /*00010140*/ LDR         IP, [SP, #44]               @ 0x2c 
    /*00010144*/ LDRLS       FP, [SL, R2, LSL #2] 
    /*00010148*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*0001014c*/ LDR         R2, [SP, #52]               @ 0x34 
    /*00010150*/ STR         R0, [SP, #12] 
    /*00010154*/ MOV         R0, R7 
    /*00010158*/ STR         R3, [SP, #24] 
    /*0001015c*/ MOV         R3, #0 
    /*00010160*/ STR         R2, [SP, #16] 
    /*00010164*/ MOV         R2, R5 
    /*00010168*/ STR         FP, [SP, #4] 
    /*0001016c*/ STR         LR, [SP, #20] 
    /*00010170*/ STR         IP, [SP, #8] 
    /*00010174*/ BL          0x0000000000010174          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010178*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0001017c*/ MOV         R0, R7 
    /*00010180*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00010184*/ BL          0x0000000000010184          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010188*/ B           VI_ProcChnRotationExAttr_x100e0
    VI_ProcChnRotationExAttr_x1018c:
    /*0001018c*/ MOV         R0, #65024                  @ 0xfe00 
    /*00010190*/ MOVT        R0, #65535                  @ 0xffff 
    /*00010194*/ ADD         SP, SP, #68                 @ 0x44 
    /*00010198*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0001019c*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcChnRotationExAttr


FUNC_BEGIN VI_ProcChnDISConfig
    /*000101a0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000101a4*/ SUB         SP, SP, #68                 @ 0x44 
    /*000101a8*/ MOV         FP, R0 
    /*000101ac*/ MOVW        R1, #0                      @ .LC260 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47e0] 
    /*000101b0*/ LDR         R4, [PC, #672]              @ 0x0000000000010458 
    /*000101b4*/ MOVT        R1, #0                      @ .LC260 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47e0] 
    /*000101b8*/ BL          0x00000000000101B8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000101bc*/ MOVW        SL, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000101c0*/ MOVW        R2, #0                      @ .LC262 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4888] 
    /*000101c4*/ MOVW        R3, #0                      @ .LC263 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4890] 
    /*000101c8*/ MOVT        R2, #0                      @ .LC262 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4888] 
    /*000101cc*/ MOVT        R3, #0                      @ .LC263 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4890] 
    /*000101d0*/ STR         R2, [SP, #36]               @ 0x24 
    /*000101d4*/ MOV         R0, FP 
    /*000101d8*/ STR         R3, [SP, #32] 
    /*000101dc*/ MOVW        R2, #0                      @ .LC264 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x489c] 
    /*000101e0*/ MOVW        R3, #0                      @ .LC265 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x48ac] 
    /*000101e4*/ MOVT        R2, #0                      @ .LC264 [R_ARM_MOVT_ABS: .rodata.str1.4+0x489c] 
    /*000101e8*/ MOVT        R3, #0                      @ .LC265 [R_ARM_MOVT_ABS: .rodata.str1.4+0x48ac] 
    /*000101ec*/ STR         R2, [SP, #28] 
    /*000101f0*/ STR         R3, [SP, #24] 
    /*000101f4*/ MOVW        R2, #0                      @ .LC266 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x48b8] 
    /*000101f8*/ MOVW        R3, #0                      @ .LC267 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x48c0] 
    /*000101fc*/ MOVT        R2, #0                      @ .LC266 [R_ARM_MOVT_ABS: .rodata.str1.4+0x48b8] 
    /*00010200*/ MOVT        R3, #0                      @ .LC267 [R_ARM_MOVT_ABS: .rodata.str1.4+0x48c0] 
    /*00010204*/ STR         R2, [SP, #20] 
    /*00010208*/ STR         R3, [SP, #16] 
    /*0001020c*/ MOVW        R2, #0                      @ .LC268 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x48cc] 
    /*00010210*/ MOVW        R3, #0                      @ .LC269 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x48d4] 
    /*00010214*/ MOVT        R2, #0                      @ .LC268 [R_ARM_MOVT_ABS: .rodata.str1.4+0x48cc] 
    /*00010218*/ MOVT        R3, #0                      @ .LC269 [R_ARM_MOVT_ABS: .rodata.str1.4+0x48d4] 
    /*0001021c*/ STR         R2, [SP, #12] 
    /*00010220*/ STR         R3, [SP, #8] 
    /*00010224*/ MOVW        R2, #0                      @ .LC270 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x48dc] 
    /*00010228*/ MOVW        R3, #0                      @ .LC180 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e18] 
    /*0001022c*/ MOVT        R2, #0                      @ .LC270 [R_ARM_MOVT_ABS: .rodata.str1.4+0x48dc] 
    /*00010230*/ MOVT        R3, #0                      @ .LC180 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e18] 
    /*00010234*/ STR         R2, [SP, #4] 
    /*00010238*/ STR         R3, [SP] 
    /*0001023c*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*00010240*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*00010244*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*00010248*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*0001024c*/ MOVW        R1, #0                      @ .LC261 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x485c] 
    /*00010250*/ MOVT        SL, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00010254*/ MOVT        R1, #0                      @ .LC261 [R_ARM_MOVT_ABS: .rodata.str1.4+0x485c] 
    /*00010258*/ BL          0x0000000000010258          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001025c*/ MOV         R6, #0 
    /*00010260*/ MOV         R0, FP 
    /*00010264*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00010268*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0001026c*/ MOVW        R9, #0                      @ .LC253 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47b4] 
    /*00010270*/ BL          0x0000000000010270          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010274*/ MOVT        R9, #0                      @ .LC253 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47b4] 
    /*00010278*/ MOVW        R8, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0001027c*/ MOVW        R7, #0                      @ .LC252 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47a8] 
    /*00010280*/ MOVT        R8, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*00010284*/ MOVT        R7, #0                      @ .LC252 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47a8] 
    /*00010288*/ STR         R9, [SP, #56]               @ 0x38 
    /*0001028c*/ STR         R8, [SP, #40]               @ 0x28 
    /*00010290*/ STR         R7, [SP, #60]               @ 0x3c 
    VI_ProcChnDISConfig_x10294:
    /*00010294*/ MOV         R0, R4 
    /*00010298*/ BL          0x0000000000010298          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001029c*/ CMP         R0, #0 
    /*000102a0*/ BNE         VI_ProcChnDISConfig_x1041c
    /*000102a4*/ LDR         R3, [SL], #4 
    /*000102a8*/ CMP         R3, #0 
    /*000102ac*/ BEQ         VI_ProcChnDISConfig_x102c0
    /*000102b0*/ ADD         R3, R3, #36864              @ 0x9000 
    /*000102b4*/ LDR         R2, [R3, #1560]             @ 0x618 
    /*000102b8*/ CMP         R2, #1 
    /*000102bc*/ BEQ         VI_ProcChnDISConfig_x102e4
    VI_ProcChnDISConfig_x102c0:
    /*000102c0*/ MOV         R0, R4 
    /*000102c4*/ ADD         R6, R6, #1 
    /*000102c8*/ BL          0x00000000000102C8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000102cc*/ CMP         R6, #4 
    /*000102d0*/ ADD         R4, R4, #176                @ 0xb0 
    /*000102d4*/ BNE         VI_ProcChnDISConfig_x10294
    /*000102d8*/ MOV         R0, #0 
    /*000102dc*/ ADD         SP, SP, #68                 @ 0x44 
    /*000102e0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcChnDISConfig_x102e4:
    /*000102e4*/ LDR         R2, [R3, #1684]             @ 0x694 
    /*000102e8*/ CMP         R2, #0 
    /*000102ec*/ MOVWEQ      R5, #0                      @ .LC250 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4798] 
    /*000102f0*/ MOVTEQ      R5, #0                      @ .LC250 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4798] 
    /*000102f4*/ BEQ         VI_ProcChnDISConfig_x10318
    /*000102f8*/ CMP         R2, #3 
    /*000102fc*/ BEQ         VI_ProcChnDISConfig_x1042c
    /*00010300*/ CMP         R2, #1 
    /*00010304*/ BEQ         VI_ProcChnDISConfig_x10450
    /*00010308*/ LDR         R1, [SP, #40]               @ 0x28 
    /*0001030c*/ CMP         R2, #2 
    /*00010310*/ LDR         R5, [SP, #56]               @ 0x38 
    /*00010314*/ MOVNE       R5, R1 
    VI_ProcChnDISConfig_x10318:
    /*00010318*/ LDR         R2, [R3, #1688]             @ 0x698 
    /*0001031c*/ CMP         R2, #0 
    /*00010320*/ MOVWEQ      IP, #0                      @ .LC254 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47bc] 
    /*00010324*/ MOVTEQ      IP, #0                      @ .LC254 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47bc] 
    /*00010328*/ BEQ         VI_ProcChnDISConfig_x10348
    /*0001032c*/ CMP         R2, #1 
    /*00010330*/ BEQ         VI_ProcChnDISConfig_x10438
    /*00010334*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00010338*/ CMP         R2, #2 
    /*0001033c*/ MOVW        IP, #0                      @ .LC256 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47c8] 
    /*00010340*/ MOVT        IP, #0                      @ .LC256 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47c8] 
    /*00010344*/ MOVNE       IP, R1 
    VI_ProcChnDISConfig_x10348:
    /*00010348*/ LDR         R2, [R3, #1692]             @ 0x69c 
    /*0001034c*/ CMP         R2, #0 
    /*00010350*/ MOVWEQ      LR, #0                      @ .LC257 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47d0] 
    /*00010354*/ MOVTEQ      LR, #0                      @ .LC257 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47d0] 
    /*00010358*/ BEQ         VI_ProcChnDISConfig_x10378
    /*0001035c*/ CMP         R2, #1 
    /*00010360*/ BEQ         VI_ProcChnDISConfig_x10444
    /*00010364*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00010368*/ CMP         R2, #2 
    /*0001036c*/ MOVW        LR, #0                      @ .LC259 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47d8] 
    /*00010370*/ MOVT        LR, #0                      @ .LC259 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47d8] 
    /*00010374*/ MOVNE       LR, R1 
    VI_ProcChnDISConfig_x10378:
    /*00010378*/ LDR         R2, [R3, #1696]             @ 0x6a0 
    /*0001037c*/ LDR         R0, [R3, #1704]             @ 0x6a8 
    /*00010380*/ LDR         R7, [R3, #1716]             @ 0x6b4 
    /*00010384*/ STR         R2, [SP, #44]               @ 0x2c 
    /*00010388*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*0001038c*/ STR         R0, [SP, #52]               @ 0x34 
    /*00010390*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*00010394*/ CMP         R7, #1 
    /*00010398*/ MOVW        R0, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0001039c*/ MOVT        R0, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*000103a0*/ LDR         R1, [R3, #1700]             @ 0x6a4 
    /*000103a4*/ LDR         R9, [R3, #1720]             @ 0x6b8 
    /*000103a8*/ MOVEQ       R7, R2 
    /*000103ac*/ LDR         R8, [R3, #1708]             @ 0x6ac 
    /*000103b0*/ MOVNE       R7, R0 
    /*000103b4*/ LDR         R3, [R3, #1712]             @ 0x6b0 
    /*000103b8*/ CMP         R9, #1 
    /*000103bc*/ STR         R7, [SP, #32] 
    /*000103c0*/ LDR         R7, [SP, #52]               @ 0x34 
    /*000103c4*/ MOVNE       R2, R0 
    /*000103c8*/ STR         R1, [SP, #48]               @ 0x30 
    /*000103cc*/ MOV         R0, FP 
    /*000103d0*/ LDR         R9, [SP, #48]               @ 0x30 
    /*000103d4*/ MOVW        R1, #0                      @ .LC271 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x48e4] 
    /*000103d8*/ STR         R7, [SP, #20] 
    /*000103dc*/ MOVT        R1, #0                      @ .LC271 [R_ARM_MOVT_ABS: .rodata.str1.4+0x48e4] 
    /*000103e0*/ LDR         R7, [SP, #44]               @ 0x2c 
    /*000103e4*/ STR         R3, [SP, #28] 
    /*000103e8*/ MOV         R3, #0 
    /*000103ec*/ STR         R2, [SP, #36]               @ 0x24 
    /*000103f0*/ MOV         R2, R6 
    /*000103f4*/ STR         R8, [SP, #24] 
    /*000103f8*/ STR         R9, [SP, #16] 
    /*000103fc*/ STR         R7, [SP, #12] 
    /*00010400*/ STM         SP, {R5, IP, LR} 
    /*00010404*/ BL          0x0000000000010404          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010408*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0001040c*/ MOV         R0, FP 
    /*00010410*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00010414*/ BL          0x0000000000010414          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010418*/ B           VI_ProcChnDISConfig_x102c0
    VI_ProcChnDISConfig_x1041c:
    /*0001041c*/ MOV         R0, #65024                  @ 0xfe00 
    /*00010420*/ MOVT        R0, #65535                  @ 0xffff 
    /*00010424*/ ADD         SP, SP, #68                 @ 0x44 
    /*00010428*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcChnDISConfig_x1042c:
    /*0001042c*/ MOVW        R5, #0                      @ .LC251 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47a4] 
    /*00010430*/ MOVT        R5, #0                      @ .LC251 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47a4] 
    /*00010434*/ B           VI_ProcChnDISConfig_x10318
    VI_ProcChnDISConfig_x10438:
    /*00010438*/ MOVW        IP, #0                      @ .LC255 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47c0] 
    /*0001043c*/ MOVT        IP, #0                      @ .LC255 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47c0] 
    /*00010440*/ B           VI_ProcChnDISConfig_x10348
    VI_ProcChnDISConfig_x10444:
    /*00010444*/ MOVW        LR, #0                      @ .LC258 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47d4] 
    /*00010448*/ MOVT        LR, #0                      @ .LC258 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47d4] 
    /*0001044c*/ B           VI_ProcChnDISConfig_x10378
    VI_ProcChnDISConfig_x10450:
    /*00010450*/ LDR         R5, [SP, #60]               @ 0x3c 
    /*00010454*/ B           VI_ProcChnDISConfig_x10318
    /*00010458*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcChnDISConfig


FUNC_BEGIN VI_ProcChnDISAttr
    /*0001045c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00010460*/ SUB         SP, SP, #68                 @ 0x44 
    /*00010464*/ MOV         SL, R0 
    /*00010468*/ MOVW        R1, #0                      @ .LC272 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4910] 
    /*0001046c*/ MOVT        R1, #0                      @ .LC272 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4910] 
    /*00010470*/ LDR         R4, [PC, #492]              @ 0x0000000000010664 
    /*00010474*/ BL          0x0000000000010474          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010478*/ MOVW        R2, #0                      @ .LC274 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49bc] 
    /*0001047c*/ MOVW        R3, #0                      @ .LC275 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49c8] 
    /*00010480*/ MOVT        R2, #0                      @ .LC274 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49bc] 
    /*00010484*/ MOVT        R3, #0                      @ .LC275 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49c8] 
    /*00010488*/ STR         R2, [SP, #36]               @ 0x24 
    /*0001048c*/ STR         R3, [SP, #32] 
    /*00010490*/ MOVW        R2, #0                      @ .LC276 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49d4] 
    /*00010494*/ MOVW        R3, #0                      @ .LC277 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49e0] 
    /*00010498*/ MOVT        R2, #0                      @ .LC276 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49d4] 
    /*0001049c*/ MOVT        R3, #0                      @ .LC277 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49e0] 
    /*000104a0*/ STR         R2, [SP, #28] 
    /*000104a4*/ STR         R3, [SP, #24] 
    /*000104a8*/ MOVW        R2, #0                      @ .LC278 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49ec] 
    /*000104ac*/ MOVW        R3, #0                      @ .LC279 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49f4] 
    /*000104b0*/ MOVT        R2, #0                      @ .LC278 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49ec] 
    /*000104b4*/ MOVT        R3, #0                      @ .LC279 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49f4] 
    /*000104b8*/ STR         R2, [SP, #20] 
    /*000104bc*/ STR         R3, [SP, #16] 
    /*000104c0*/ MOVW        R2, #0                      @ .LC280 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49fc] 
    /*000104c4*/ MOVW        R3, #0                      @ .LC281 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a04] 
    /*000104c8*/ MOVT        R2, #0                      @ .LC280 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49fc] 
    /*000104cc*/ MOVT        R3, #0                      @ .LC281 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a04] 
    /*000104d0*/ STR         R2, [SP, #12] 
    /*000104d4*/ STR         R3, [SP, #8] 
    /*000104d8*/ MOVW        R2, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*000104dc*/ MOVW        R3, #0                      @ .LC282 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a10] 
    /*000104e0*/ MOVT        R2, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*000104e4*/ MOVT        R3, #0                      @ .LC282 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a10] 
    /*000104e8*/ STR         R2, [SP, #4] 
    /*000104ec*/ STR         R3, [SP] 
    /*000104f0*/ MOV         R0, SL 
    /*000104f4*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*000104f8*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*000104fc*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*00010500*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*00010504*/ MOVW        R1, #0                      @ .LC273 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x498c] 
    /*00010508*/ MOVT        R1, #0                      @ .LC273 [R_ARM_MOVT_ABS: .rodata.str1.4+0x498c] 
    /*0001050c*/ BL          0x000000000001050C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010510*/ MOV         R0, SL 
    /*00010514*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00010518*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0001051c*/ BL          0x000000000001051C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010520*/ MOVW        R9, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00010524*/ MOVW        R8, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*00010528*/ MOVW        R7, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*0001052c*/ MOVW        R6, #0                      @ .LC283 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a18] 
    /*00010530*/ MOVT        R9, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00010534*/ MOVT        R8, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*00010538*/ MOVT        R7, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*0001053c*/ MOVT        R6, #0                      @ .LC283 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a18] 
    /*00010540*/ MOV         R5, #0 
    VI_ProcChnDISAttr_x10544:
    /*00010544*/ MOV         R0, R4 
    /*00010548*/ BL          0x0000000000010548          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001054c*/ SUBS        R3, R0, #0 
    /*00010550*/ BNE         VI_ProcChnDISAttr_x10654
    /*00010554*/ LDR         R2, [R9], #4 
    /*00010558*/ CMP         R2, #0 
    /*0001055c*/ ADD         IP, R2, #36864              @ 0x9000 
    /*00010560*/ BEQ         VI_ProcChnDISAttr_x10570
    /*00010564*/ LDR         R2, [IP, #1560]             @ 0x618 
    /*00010568*/ CMP         R2, #1 
    /*0001056c*/ BEQ         VI_ProcChnDISAttr_x10594
    VI_ProcChnDISAttr_x10570:
    /*00010570*/ MOV         R0, R4 
    /*00010574*/ ADD         R5, R5, #1 
    /*00010578*/ BL          0x0000000000010578          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001057c*/ CMP         R5, #4 
    /*00010580*/ ADD         R4, R4, #176                @ 0xb0 
    /*00010584*/ BNE         VI_ProcChnDISAttr_x10544
    /*00010588*/ MOV         R0, #0 
    /*0001058c*/ ADD         SP, SP, #68                 @ 0x44 
    /*00010590*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcChnDISAttr_x10594:
    /*00010594*/ LDR         R1, [IP, #1964]             @ 0x7ac 
    /*00010598*/ LDR         R0, [IP, #1968]             @ 0x7b0 
    /*0001059c*/ CMP         R1, #1 
    /*000105a0*/ LDR         LR, [IP, #1972]             @ 0x7b4 
    /*000105a4*/ LDR         FP, [IP, #1996]             @ 0x7cc 
    /*000105a8*/ MOVEQ       R1, R8 
    /*000105ac*/ MOVNE       R1, R7 
    /*000105b0*/ STR         R1, [SP, #48]               @ 0x30 
    /*000105b4*/ CMP         R0, #1 
    /*000105b8*/ LDR         R1, [IP, #1976]             @ 0x7b8 
    /*000105bc*/ LDR         R2, [IP, #1556]             @ 0x614 
    /*000105c0*/ MOVEQ       R0, R8 
    /*000105c4*/ STR         LR, [SP, #52]               @ 0x34 
    /*000105c8*/ MOVNE       R0, R7 
    /*000105cc*/ STR         R1, [SP, #56]               @ 0x38 
    /*000105d0*/ CMP         FP, #1 
    /*000105d4*/ LDR         R1, [IP, #1980]             @ 0x7bc 
    /*000105d8*/ LDR         LR, [IP, #1984]             @ 0x7c0 
    /*000105dc*/ LDR         FP, [SP, #48]               @ 0x30 
    /*000105e0*/ STR         R1, [SP, #60]               @ 0x3c 
    /*000105e4*/ LDR         R1, [IP, #1992]             @ 0x7c8 
    /*000105e8*/ STR         R2, [SP, #44]               @ 0x2c 
    /*000105ec*/ MOV         R2, R5 
    /*000105f0*/ STR         R1, [SP, #36]               @ 0x24 
    /*000105f4*/ MOV         R1, R6 
    /*000105f8*/ LDR         IP, [IP, #1988]             @ 0x7c4 
    /*000105fc*/ STR         FP, [SP, #4] 
    /*00010600*/ STR         LR, [SP, #24] 
    /*00010604*/ STR         IP, [SP, #32] 
    /*00010608*/ MOVEQ       IP, R8 
    /*0001060c*/ MOVNE       IP, R7 
    /*00010610*/ STR         IP, [SP, #28] 
    /*00010614*/ LDR         IP, [SP, #60]               @ 0x3c 
    /*00010618*/ LDR         FP, [SP, #56]               @ 0x38 
    /*0001061c*/ LDR         LR, [SP, #52]               @ 0x34 
    /*00010620*/ STR         IP, [SP, #20] 
    /*00010624*/ LDR         IP, [SP, #44]               @ 0x2c 
    /*00010628*/ STR         R0, [SP, #8] 
    /*0001062c*/ MOV         R0, SL 
    /*00010630*/ STR         FP, [SP, #16] 
    /*00010634*/ STR         IP, [SP] 
    /*00010638*/ STR         LR, [SP, #12] 
    /*0001063c*/ BL          0x000000000001063C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010640*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00010644*/ MOV         R0, SL 
    /*00010648*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0001064c*/ BL          0x000000000001064C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010650*/ B           VI_ProcChnDISAttr_x10570
    VI_ProcChnDISAttr_x10654:
    /*00010654*/ MOV         R0, #65024                  @ 0xfe00 
    /*00010658*/ MOVT        R0, #65535                  @ 0xffff 
    /*0001065c*/ ADD         SP, SP, #68                 @ 0x44 
    /*00010660*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00010664*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcChnDISAttr


FUNC_BEGIN VI_ProcChnSpreadAttr
    /*00010668*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001066c*/ SUB         SP, SP, #36                 @ 0x24 
    /*00010670*/ MOV         R7, R0 
    /*00010674*/ MOVW        R1, #0                      @ .LC284 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a48] 
    /*00010678*/ MOVT        R1, #0                      @ .LC284 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a48] 
    /*0001067c*/ LDR         R4, [PC, #328]              @ 0x00000000000107cc 
    /*00010680*/ BL          0x0000000000010680          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010684*/ MOVW        R2, #0                      @ .LC286 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ad8] 
    /*00010688*/ MOVW        R3, #0                      @ .LC287 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ae0] 
    /*0001068c*/ MOVT        R2, #0                      @ .LC286 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ad8] 
    /*00010690*/ MOVT        R3, #0                      @ .LC287 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ae0] 
    /*00010694*/ STR         R2, [SP, #12] 
    /*00010698*/ STR         R3, [SP, #8] 
    /*0001069c*/ MOVW        R2, #0                      @ .LC288 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ae8] 
    /*000106a0*/ MOVW        R3, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*000106a4*/ MOVT        R2, #0                      @ .LC288 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ae8] 
    /*000106a8*/ MOVT        R3, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*000106ac*/ STR         R2, [SP, #4] 
    /*000106b0*/ STR         R3, [SP] 
    /*000106b4*/ MOV         R0, R7 
    /*000106b8*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*000106bc*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*000106c0*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*000106c4*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*000106c8*/ MOVW        R1, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ac4] 
    /*000106cc*/ MOVT        R1, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ac4] 
    /*000106d0*/ BL          0x00000000000106D0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000106d4*/ MOV         R0, R7 
    /*000106d8*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*000106dc*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*000106e0*/ BL          0x00000000000106E0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000106e4*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000106e8*/ MOVW        SL, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*000106ec*/ MOVW        R9, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*000106f0*/ MOVW        R8, #0                      @ .LC289 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4af0] 
    /*000106f4*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000106f8*/ MOVT        SL, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*000106fc*/ MOVT        R9, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*00010700*/ MOVT        R8, #0                      @ .LC289 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4af0] 
    /*00010704*/ MOV         R5, #0 
    VI_ProcChnSpreadAttr_x10708:
    /*00010708*/ MOV         R0, R4 
    /*0001070c*/ BL          0x000000000001070C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00010710*/ SUBS        FP, R0, #0 
    /*00010714*/ BNE         VI_ProcChnSpreadAttr_x107bc
    /*00010718*/ LDR         R2, [R6], #4 
    /*0001071c*/ CMP         R2, #0 
    /*00010720*/ ADD         R3, R2, #36864              @ 0x9000 
    /*00010724*/ BEQ         VI_ProcChnSpreadAttr_x10734
    /*00010728*/ LDR         R3, [R3, #1484]             @ 0x5cc 
    /*0001072c*/ CMP         R3, #0 
    /*00010730*/ BNE         VI_ProcChnSpreadAttr_x10758
    VI_ProcChnSpreadAttr_x10734:
    /*00010734*/ MOV         R0, R4 
    /*00010738*/ ADD         R5, R5, #1 
    /*0001073c*/ BL          0x000000000001073C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010740*/ CMP         R5, #4 
    /*00010744*/ ADD         R4, R4, #176                @ 0xb0 
    /*00010748*/ BNE         VI_ProcChnSpreadAttr_x10708
    /*0001074c*/ MOV         R0, #0 
    /*00010750*/ ADD         SP, SP, #36                 @ 0x24 
    /*00010754*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcChnSpreadAttr_x10758:
    /*00010758*/ ADD         R2, SP, #16 
    /*0001075c*/ MOV         R1, FP 
    /*00010760*/ MOV         R0, R5 
    /*00010764*/ BL          0x0000000000010764          @ VI_DRV_GetChnSpreadAttrSet [R_ARM_CALL: .text+0x2a6e8] 
    /*00010768*/ LDR         R1, [SP, #16] 
    /*0001076c*/ LDR         R2, [SP, #20] 
    /*00010770*/ MOV         R3, FP 
    /*00010774*/ LDR         R0, [SP, #24] 
    /*00010778*/ CMP         R1, #1 
    /*0001077c*/ LDR         IP, [SP, #28] 
    /*00010780*/ MOVEQ       R1, SL 
    /*00010784*/ MOVNE       R1, R9 
    /*00010788*/ STR         R2, [SP, #12] 
    /*0001078c*/ MOV         R2, R5 
    /*00010790*/ STR         R1, [SP] 
    /*00010794*/ MOV         R1, R8 
    /*00010798*/ STR         R0, [SP, #4] 
    /*0001079c*/ MOV         R0, R7 
    /*000107a0*/ STR         IP, [SP, #8] 
    /*000107a4*/ BL          0x00000000000107A4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000107a8*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*000107ac*/ MOV         R0, R7 
    /*000107b0*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*000107b4*/ BL          0x00000000000107B4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000107b8*/ B           VI_ProcChnSpreadAttr_x10734
    VI_ProcChnSpreadAttr_x107bc:
    /*000107bc*/ MOV         R0, #65024                  @ 0xfe00 
    /*000107c0*/ MOVT        R0, #65535                  @ 0xffff 
    /*000107c4*/ ADD         SP, SP, #36                 @ 0x24 
    /*000107c8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*000107cc*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcChnSpreadAttr


FUNC_BEGIN VI_ProcExtChnFishEye
    /*000107d0*/ LDR         R3, [PC, #1236]             @ 0x0000000000010cac 
    /*000107d4*/ MOV         R2, #216                    @ 0xd8 
    /*000107d8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000107dc*/ SUB         SP, SP, #292                @ 0x124 
    /*000107e0*/ MOV         R8, R0 
    /*000107e4*/ MOV         R1, #0 
    /*000107e8*/ ADD         R0, SP, #72                 @ 0x48 
    /*000107ec*/ MOV         R9, R3 
    /*000107f0*/ STR         R3, [SP, #56]               @ 0x38 
    /*000107f4*/ BL          0x00000000000107F4          @ memset [R_ARM_CALL: +0x0] 
    /*000107f8*/ MOV         R0, R8 
    /*000107fc*/ MOVW        R1, #0                      @ .LC290 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b04] 
    /*00010800*/ MOVT        R1, #0                      @ .LC290 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b04] 
    /*00010804*/ MOV         R6, #0 
    /*00010808*/ BL          0x0000000000010808          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001080c*/ MOVW        R2, #0                      @ .LC292 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ba8] 
    /*00010810*/ MOVW        R3, #0                      @ .LC293 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bb4] 
    /*00010814*/ MOVT        R2, #0                      @ .LC292 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ba8] 
    /*00010818*/ MOVT        R3, #0                      @ .LC293 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bb4] 
    /*0001081c*/ STR         R2, [SP, #36]               @ 0x24 
    /*00010820*/ STR         R3, [SP, #32] 
    /*00010824*/ MOVW        R2, #0                      @ .LC294 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bbc] 
    /*00010828*/ MOVW        R3, #0                      @ .LC295 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bc4] 
    /*0001082c*/ MOVT        R2, #0                      @ .LC294 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bbc] 
    /*00010830*/ MOVT        R3, #0                      @ .LC295 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bc4] 
    /*00010834*/ STR         R2, [SP, #28] 
    /*00010838*/ STR         R3, [SP, #24] 
    /*0001083c*/ MOVW        R2, #0                      @ .LC296 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bcc] 
    /*00010840*/ MOVW        R3, #0                      @ .LC179 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e10] 
    /*00010844*/ MOVT        R2, #0                      @ .LC296 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bcc] 
    /*00010848*/ MOVT        R3, #0                      @ .LC179 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e10] 
    /*0001084c*/ STR         R2, [SP, #20] 
    /*00010850*/ STR         R3, [SP, #16] 
    /*00010854*/ MOVW        R2, #0                      @ .LC297 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bd0] 
    /*00010858*/ MOVW        R3, #0                      @ .LC298 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bdc] 
    /*0001085c*/ MOVT        R2, #0                      @ .LC297 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bd0] 
    /*00010860*/ MOVT        R3, #0                      @ .LC298 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bdc] 
    /*00010864*/ STR         R2, [SP, #12] 
    /*00010868*/ STR         R3, [SP, #8] 
    /*0001086c*/ MOVW        R2, #0                      @ .LC299 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4be4] 
    /*00010870*/ MOVW        R3, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*00010874*/ MOVT        R2, #0                      @ .LC299 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4be4] 
    /*00010878*/ MOVT        R3, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*0001087c*/ STR         R2, [SP, #4] 
    /*00010880*/ STR         R3, [SP] 
    /*00010884*/ MOV         R0, R8 
    /*00010888*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*0001088c*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*00010890*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*00010894*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*00010898*/ MOVW        R1, #0                      @ .LC291 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b80] 
    /*0001089c*/ MOVT        R1, #0                      @ .LC291 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b80] 
    /*000108a0*/ BL          0x00000000000108A0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000108a4*/ MOV         R0, R8 
    /*000108a8*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*000108ac*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*000108b0*/ BL          0x00000000000108B0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000108b4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000108b8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000108bc*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*000108c0*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*000108c4*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*000108c8*/ MOV         FP, R3 
    /*000108cc*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*000108d0*/ STR         R3, [SP, #60]               @ 0x3c 
    /*000108d4*/ STR         R2, [SP, #48]               @ 0x30 
    /*000108d8*/ STR         R1, [SP, #52]               @ 0x34 
    VI_ProcExtChnFishEye_x108dc:
    /*000108dc*/ MOV         R0, R9 
    /*000108e0*/ BL          0x00000000000108E0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000108e4*/ SUBS        R7, R0, #0 
    /*000108e8*/ BNE         VI_ProcExtChnFishEye_x10c9c
    /*000108ec*/ LDR         R5, [FP], #4 
    /*000108f0*/ CMP         R5, #0 
    /*000108f4*/ BEQ         VI_ProcExtChnFishEye_x10a18
    /*000108f8*/ ADD         R5, R5, #38144              @ 0x9500 
    /*000108fc*/ MOVW        SL, #0                      @ .LC300 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bec] 
    /*00010900*/ ADD         R5, R5, #208                @ 0xd0 
    /*00010904*/ MOVT        SL, #0                      @ .LC300 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bec] 
    /*00010908*/ MOV         R4, #1 
    /*0001090c*/ B           VI_ProcExtChnFishEye_x1091c
    VI_ProcExtChnFishEye_x10910:
    /*00010910*/ ADD         R4, R4, #1 
    /*00010914*/ CMP         R4, #9 
    /*00010918*/ BEQ         VI_ProcExtChnFishEye_x10a18
    VI_ProcExtChnFishEye_x1091c:
    /*0001091c*/ LDR         R3, [R5], #4 
    /*00010920*/ CMP         R3, #0 
    /*00010924*/ BEQ         VI_ProcExtChnFishEye_x10910
    /*00010928*/ MOV         R1, R4 
    /*0001092c*/ MOV         R0, R6 
    /*00010930*/ BL          0x0000000000010930          @ VI_DRV_ExtChnFisheyeConfiged [R_ARM_CALL: .text+0x2b178] 
    /*00010934*/ CMP         R0, #1 
    /*00010938*/ BNE         VI_ProcExtChnFishEye_x10910
    /*0001093c*/ MOV         R1, R4 
    /*00010940*/ ADD         R2, SP, #72                 @ 0x48 
    /*00010944*/ MOV         R0, R6 
    /*00010948*/ BL          0x0000000000010948          @ VI_DRV_GetExtChnFisheyeAttr [R_ARM_CALL: .text+0x2b0e8] 
    /*0001094c*/ LDR         R2, [SP, #72]               @ 0x48 
    /*00010950*/ LDR         R1, [SP, #104]              @ 0x68 
    /*00010954*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*00010958*/ LDR         IP, [SP, #52]               @ 0x34 
    /*0001095c*/ CMP         R2, #1 
    /*00010960*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*00010964*/ LDR         R0, [SP, #48]               @ 0x30 
    /*00010968*/ ADD         R3, R3, R1, LSL #2 
    /*0001096c*/ LDR         LR, [SP, #100]              @ 0x64 
    /*00010970*/ MOVNE       R0, IP 
    /*00010974*/ CMP         R1, #2 
    /*00010978*/ MOVW        IP, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*0001097c*/ MOVT        IP, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*00010980*/ LDRLS       IP, [R3, #180]              @ 0xb4 
    /*00010984*/ MOV         R2, R0 
    /*00010988*/ LDR         R1, [SP, #108]              @ 0x6c 
    /*0001098c*/ MOV         R3, R4 
    /*00010990*/ LDR         R0, [SP, #84]               @ 0x54 
    /*00010994*/ ADD         R4, R4, #1 
    /*00010998*/ STM         SP, {R2, IP} 
    /*0001099c*/ LDR         R2, [SP, #80]               @ 0x50 
    /*000109a0*/ LDR         IP, [SP, #52]               @ 0x34 
    /*000109a4*/ STR         R1, [SP, #8] 
    /*000109a8*/ CMP         R2, #1 
    /*000109ac*/ LDR         R1, [SP, #48]               @ 0x30 
    /*000109b0*/ LDR         R2, [SP, #76]               @ 0x4c 
    /*000109b4*/ MOVNE       R1, IP 
    /*000109b8*/ STR         R0, [SP, #16] 
    /*000109bc*/ CMP         R2, #1 
    /*000109c0*/ STR         R1, [SP, #12] 
    /*000109c4*/ LDR         R1, [SP, #48]               @ 0x30 
    /*000109c8*/ MOVNE       R1, IP 
    /*000109cc*/ LDR         R0, [SP, #88]               @ 0x58 
    /*000109d0*/ STR         LR, [SP, #36]               @ 0x24 
    /*000109d4*/ MOV         R2, R1 
    /*000109d8*/ LDR         R1, [SP, #96]               @ 0x60 
    /*000109dc*/ STR         R2, [SP, #20] 
    /*000109e0*/ MOV         R2, R6 
    /*000109e4*/ STR         R0, [SP, #24] 
    /*000109e8*/ MOV         R0, R8 
    /*000109ec*/ STR         R1, [SP, #32] 
    /*000109f0*/ LDR         R1, [SP, #92]               @ 0x5c 
    /*000109f4*/ STR         R1, [SP, #28] 
    /*000109f8*/ MOV         R1, SL 
    /*000109fc*/ BL          0x00000000000109FC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010a00*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00010a04*/ MOV         R0, R8 
    /*00010a08*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00010a0c*/ BL          0x0000000000010A0C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010a10*/ CMP         R4, #9 
    /*00010a14*/ BNE         VI_ProcExtChnFishEye_x1091c
    VI_ProcExtChnFishEye_x10a18:
    /*00010a18*/ MOV         R0, R9 
    /*00010a1c*/ ADD         R6, R6, #1 
    /*00010a20*/ BL          0x0000000000010A20          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010a24*/ CMP         R6, #4 
    /*00010a28*/ ADD         R9, R9, #176                @ 0xb0 
    /*00010a2c*/ BNE         VI_ProcExtChnFishEye_x108dc
    /*00010a30*/ MOVW        R1, #0                      @ .LC301 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c14] 
    /*00010a34*/ MOV         R0, R8 
    /*00010a38*/ MOVT        R1, #0                      @ .LC301 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c14] 
    /*00010a3c*/ MOVW        FP, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*00010a40*/ BL          0x0000000000010A40          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010a44*/ MOVW        R2, #0                      @ .LC287 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ae0] 
    /*00010a48*/ MOVW        R3, #0                      @ .LC288 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ae8] 
    /*00010a4c*/ MOVT        R2, #0                      @ .LC287 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ae0] 
    /*00010a50*/ MOVT        R3, #0                      @ .LC288 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ae8] 
    /*00010a54*/ STR         R2, [SP, #44]               @ 0x2c 
    /*00010a58*/ STR         R3, [SP, #40]               @ 0x28 
    /*00010a5c*/ MOVW        R2, #0                      @ .LC303 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4cc0] 
    /*00010a60*/ MOVW        R3, #0                      @ .LC304 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4cc8] 
    /*00010a64*/ MOVT        R2, #0                      @ .LC303 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4cc0] 
    /*00010a68*/ MOVT        R3, #0                      @ .LC304 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4cc8] 
    /*00010a6c*/ STR         R2, [SP, #36]               @ 0x24 
    /*00010a70*/ STR         R3, [SP, #32] 
    /*00010a74*/ MOVW        R2, #0                      @ .LC305 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4cd0] 
    /*00010a78*/ MOVW        R3, #0                      @ .LC306 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4cd8] 
    /*00010a7c*/ MOVT        R2, #0                      @ .LC305 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4cd0] 
    /*00010a80*/ MOVT        R3, #0                      @ .LC306 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4cd8] 
    /*00010a84*/ STR         R2, [SP, #28] 
    /*00010a88*/ STR         R3, [SP, #24] 
    /*00010a8c*/ MOVW        R2, #0                      @ .LC307 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ce0] 
    /*00010a90*/ MOVW        R3, #0                      @ .LC308 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ce8] 
    /*00010a94*/ MOVT        R2, #0                      @ .LC307 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ce0] 
    /*00010a98*/ MOVT        R3, #0                      @ .LC308 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ce8] 
    /*00010a9c*/ STR         R2, [SP, #20] 
    /*00010aa0*/ STR         R3, [SP, #16] 
    /*00010aa4*/ MOVW        R2, #0                      @ .LC309 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4cec] 
    /*00010aa8*/ MOVW        R3, #0                      @ .LC310 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4cf8] 
    /*00010aac*/ MOVT        R2, #0                      @ .LC309 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4cec] 
    /*00010ab0*/ MOVT        R3, #0                      @ .LC310 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4cf8] 
    /*00010ab4*/ STR         R2, [SP, #12] 
    /*00010ab8*/ STR         R3, [SP, #8] 
    /*00010abc*/ MOVW        R2, #0                      @ .LC311 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d04] 
    /*00010ac0*/ MOVW        R3, #0                      @ .LC312 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d10] 
    /*00010ac4*/ MOVT        R2, #0                      @ .LC311 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d04] 
    /*00010ac8*/ MOVT        R3, #0                      @ .LC312 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d10] 
    /*00010acc*/ STR         R2, [SP, #4] 
    /*00010ad0*/ STR         R3, [SP] 
    /*00010ad4*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*00010ad8*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*00010adc*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*00010ae0*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*00010ae4*/ MOVW        R1, #0                      @ .LC302 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c90] 
    /*00010ae8*/ MOV         R0, R8 
    /*00010aec*/ MOVT        R1, #0                      @ .LC302 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c90] 
    /*00010af0*/ BL          0x0000000000010AF0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010af4*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00010af8*/ MOV         R0, R8 
    /*00010afc*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00010b00*/ BL          0x0000000000010B00          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010b04*/ MOVT        FP, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*00010b08*/ MOVW        SL, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*00010b0c*/ STR         FP, [SP, #52]               @ 0x34 
    /*00010b10*/ MOVT        SL, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*00010b14*/ LDR         FP, [SP, #56]               @ 0x38 
    /*00010b18*/ STR         SL, [SP, #56]               @ 0x38 
    /*00010b1c*/ MOVW        R3, #0                      @ .LC313 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d1c] 
    /*00010b20*/ LDR         SL, [SP, #60]               @ 0x3c 
    /*00010b24*/ MOVT        R3, #0                      @ .LC313 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d1c] 
    /*00010b28*/ STR         R3, [SP, #48]               @ 0x30 
    VI_ProcExtChnFishEye_x10b2c:
    /*00010b2c*/ MOV         R0, FP 
    /*00010b30*/ BL          0x0000000000010B30          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00010b34*/ CMP         R0, #0 
    /*00010b38*/ BNE         VI_ProcExtChnFishEye_x10c9c
    /*00010b3c*/ LDR         R5, [SL], #4 
    /*00010b40*/ CMP         R5, #0 
    /*00010b44*/ BEQ         VI_ProcExtChnFishEye_x10c78
    /*00010b48*/ ADD         R5, R5, #38144              @ 0x9500 
    /*00010b4c*/ MOV         R4, #1 
    /*00010b50*/ ADD         R5, R5, #208                @ 0xd0 
    /*00010b54*/ B           VI_ProcExtChnFishEye_x10b64
    VI_ProcExtChnFishEye_x10b58:
    /*00010b58*/ ADD         R4, R4, #1 
    /*00010b5c*/ CMP         R4, #9 
    /*00010b60*/ BEQ         VI_ProcExtChnFishEye_x10c78
    VI_ProcExtChnFishEye_x10b64:
    /*00010b64*/ LDR         R3, [R5], #4 
    /*00010b68*/ CMP         R3, #0 
    /*00010b6c*/ BEQ         VI_ProcExtChnFishEye_x10b58
    /*00010b70*/ MOV         R1, R4 
    /*00010b74*/ MOV         R0, R7 
    /*00010b78*/ BL          0x0000000000010B78          @ VI_DRV_ExtChnFisheyeConfiged [R_ARM_CALL: .text+0x2b178] 
    /*00010b7c*/ CMP         R0, #1 
    /*00010b80*/ BNE         VI_ProcExtChnFishEye_x10b58
    /*00010b84*/ ADD         R2, SP, #72                 @ 0x48 
    /*00010b88*/ MOV         R1, R4 
    /*00010b8c*/ MOV         R0, R7 
    /*00010b90*/ BL          0x0000000000010B90          @ VI_DRV_GetExtChnFisheyeAttr [R_ARM_CALL: .text+0x2b0e8] 
    /*00010b94*/ LDR         R3, [SP, #108]              @ 0x6c 
    /*00010b98*/ CMP         R3, #0 
    /*00010b9c*/ BEQ         VI_ProcExtChnFishEye_x10b58
    /*00010ba0*/ STR         R5, [SP, #60]               @ 0x3c 
    /*00010ba4*/ ADD         R6, SP, #72                 @ 0x48 
    /*00010ba8*/ STR         FP, [SP, #64]               @ 0x40 
    /*00010bac*/ MOV         R9, #0 
    /*00010bb0*/ STR         SL, [SP, #68]               @ 0x44 
    /*00010bb4*/ LDR         R5, [SP, #52]               @ 0x34 
    /*00010bb8*/ LDR         SL, [SP, #56]               @ 0x38 
    /*00010bbc*/ LDR         FP, [SP, #48]               @ 0x30 
    VI_ProcExtChnFishEye_x10bc0:
    /*00010bc0*/ LDR         R3, [R6, #40]               @ 0x28 
    /*00010bc4*/ MOV         R1, R5 
    /*00010bc8*/ LDR         R0, [R6, #72]               @ 0x48 
    /*00010bcc*/ MOV         R2, R7 
    /*00010bd0*/ CMP         R3, #3 
    /*00010bd4*/ LDR         LR, [R6, #80]               @ 0x50 
    /*00010bd8*/ ADD         R3, SL, R3, LSL #2 
    /*00010bdc*/ LDR         IP, [R6, #76]               @ 0x4c 
    /*00010be0*/ STR         R0, [SP, #36]               @ 0x24 
    /*00010be4*/ LDRLS       R1, [R3, #192]              @ 0xc0 
    /*00010be8*/ MOV         R3, R4 
    /*00010bec*/ STR         R1, [SP, #4] 
    /*00010bf0*/ MOV         R1, FP 
    /*00010bf4*/ LDR         R0, [R6, #68]               @ 0x44 
    /*00010bf8*/ STR         R9, [SP] 
    /*00010bfc*/ ADD         R9, R9, #1 
    /*00010c00*/ STR         LR, [SP, #44]               @ 0x2c 
    /*00010c04*/ STR         R0, [SP, #32] 
    /*00010c08*/ MOV         R0, R8 
    /*00010c0c*/ LDR         LR, [R6, #64]               @ 0x40 
    /*00010c10*/ STR         IP, [SP, #40]               @ 0x28 
    /*00010c14*/ LDR         IP, [R6, #60]               @ 0x3c 
    /*00010c18*/ STR         LR, [SP, #28] 
    /*00010c1c*/ LDR         LR, [R6, #56]               @ 0x38 
    /*00010c20*/ STR         IP, [SP, #24] 
    /*00010c24*/ LDR         IP, [R6, #52]               @ 0x34 
    /*00010c28*/ STR         LR, [SP, #20] 
    /*00010c2c*/ LDR         LR, [R6, #48]               @ 0x30 
    /*00010c30*/ STR         IP, [SP, #16] 
    /*00010c34*/ LDR         IP, [R6, #44]!              @ 0x2c 
    /*00010c38*/ STR         LR, [SP, #12] 
    /*00010c3c*/ STR         IP, [SP, #8] 
    /*00010c40*/ BL          0x0000000000010C40          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010c44*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00010c48*/ MOV         R0, R8 
    /*00010c4c*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00010c50*/ BL          0x0000000000010C50          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010c54*/ LDR         R3, [SP, #108]              @ 0x6c 
    /*00010c58*/ CMP         R3, R9 
    /*00010c5c*/ BHI         VI_ProcExtChnFishEye_x10bc0
    /*00010c60*/ ADD         R4, R4, #1 
    /*00010c64*/ LDR         R5, [SP, #60]               @ 0x3c 
    /*00010c68*/ CMP         R4, #9 
    /*00010c6c*/ LDR         FP, [SP, #64]               @ 0x40 
    /*00010c70*/ LDR         SL, [SP, #68]               @ 0x44 
    /*00010c74*/ BNE         VI_ProcExtChnFishEye_x10b64
    VI_ProcExtChnFishEye_x10c78:
    /*00010c78*/ MOV         R0, FP 
    /*00010c7c*/ ADD         R7, R7, #1 
    /*00010c80*/ BL          0x0000000000010C80          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010c84*/ CMP         R7, #4 
    /*00010c88*/ ADD         FP, FP, #176                @ 0xb0 
    /*00010c8c*/ BNE         VI_ProcExtChnFishEye_x10b2c
    /*00010c90*/ MOV         R0, #0 
    /*00010c94*/ ADD         SP, SP, #292                @ 0x124 
    /*00010c98*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcExtChnFishEye_x10c9c:
    /*00010c9c*/ MOV         R0, #65024                  @ 0xfe00 
    /*00010ca0*/ MOVT        R0, #65535                  @ 0xffff 
    /*00010ca4*/ ADD         SP, SP, #292                @ 0x124 
    /*00010ca8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00010cac*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcExtChnFishEye


FUNC_BEGIN VI_GetChnRealSize
    /*00010cb0*/ PUSH        {R4, R5, R6, LR} 
    /*00010cb4*/ SUB         SP, SP, #40                 @ 0x28 
    /*00010cb8*/ MOV         R4, R2 
    /*00010cbc*/ ADD         R2, SP, #12 
    /*00010cc0*/ MOV         R5, R0 
    /*00010cc4*/ MOV         R6, R1 
    /*00010cc8*/ BL          0x0000000000010CC8          @ VI_DRV_GetChnRotationExAttrSet [R_ARM_CALL: .text+0x2a35c] 
    /*00010ccc*/ LDR         R3, [SP, #12] 
    /*00010cd0*/ CMP         R3, #1 
    /*00010cd4*/ BEQ         VI_GetChnRealSize_x10d20
    /*00010cd8*/ ADD         R2, SP, #4 
    /*00010cdc*/ MOV         R1, R6 
    /*00010ce0*/ MOV         R0, R5 
    /*00010ce4*/ BL          0x0000000000010CE4          @ VI_DRV_GetChnOutPutSize [R_ARM_CALL: .text+0x2b724] 
    /*00010ce8*/ MOV         R2, SP 
    /*00010cec*/ MOV         R0, R5 
    /*00010cf0*/ MOV         R1, R6 
    /*00010cf4*/ BL          0x0000000000010CF4          @ VI_DRV_GetChnRotationAttrSet [R_ARM_CALL: .text+0x2a5c0] 
    /*00010cf8*/ LDR         R3, [SP] 
    /*00010cfc*/ MOV         R0, #0 
    /*00010d00*/ BIC         R3, R3, #2 
    /*00010d04*/ CMP         R3, #1 
    /*00010d08*/ LDREQ       R2, [SP, #8] 
    /*00010d0c*/ LDREQ       R3, [SP, #4] 
    /*00010d10*/ LDMIBNE     SP, {R2, R3} 
    /*00010d14*/ STM         R4, {R2, R3} 
    /*00010d18*/ ADD         SP, SP, #40                 @ 0x28 
    /*00010d1c*/ POP         {R4, R5, R6, PC} 
    VI_GetChnRealSize_x10d20:
    /*00010d20*/ LDR         R2, [SP, #32] 
    /*00010d24*/ MOV         R0, #0 
    /*00010d28*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00010d2c*/ STM         R4, {R2, R3} 
    /*00010d30*/ ADD         SP, SP, #40                 @ 0x28 
    /*00010d34*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_GetChnRealSize


FUNC_BEGIN VI_ProcChnOutputResolution
    /*00010d38*/ LDR         R3, [PC, #1016]             @ 0x0000000000011138 
    /*00010d3c*/ MOVW        R1, #0                      @ .LC314 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d4c] 
    /*00010d40*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00010d44*/ SUB         SP, SP, #156                @ 0x9c 
    /*00010d48*/ MOV         SL, R0 
    /*00010d4c*/ MOVT        R1, #0                      @ .LC314 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d4c] 
    /*00010d50*/ MOVW        FP, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*00010d54*/ MOVT        FP, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*00010d58*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00010d5c*/ MOV         R6, #0 
    /*00010d60*/ BL          0x0000000000010D60          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010d64*/ MOVW        R2, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4df4] 
    /*00010d68*/ MOVW        R3, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3820] 
    /*00010d6c*/ MOVT        R2, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4df4] 
    /*00010d70*/ MOVT        R3, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3820] 
    /*00010d74*/ STR         R2, [SP, #36]               @ 0x24 
    /*00010d78*/ STR         R3, [SP, #32] 
    /*00010d7c*/ MOVW        R2, #0                      @ .LC192 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x403c] 
    /*00010d80*/ MOVW        R3, #0                      @ .LC193 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x404c] 
    /*00010d84*/ MOVT        R2, #0                      @ .LC192 [R_ARM_MOVT_ABS: .rodata.str1.4+0x403c] 
    /*00010d88*/ MOVT        R3, #0                      @ .LC193 [R_ARM_MOVT_ABS: .rodata.str1.4+0x404c] 
    /*00010d8c*/ STR         R2, [SP, #28] 
    /*00010d90*/ STR         R3, [SP, #24] 
    /*00010d94*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3850] 
    /*00010d98*/ MOVW        R3, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x344c] 
    /*00010d9c*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3850] 
    /*00010da0*/ MOVT        R3, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x344c] 
    /*00010da4*/ STR         R2, [SP, #20] 
    /*00010da8*/ STR         R3, [SP, #16] 
    /*00010dac*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3454] 
    /*00010db0*/ MOVW        R3, #0                      @ .LC194 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4058] 
    /*00010db4*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3454] 
    /*00010db8*/ MOVT        R3, #0                      @ .LC194 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4058] 
    /*00010dbc*/ STR         R2, [SP, #12] 
    /*00010dc0*/ STR         R3, [SP, #8] 
    /*00010dc4*/ MOVW        R2, #0                      @ .LC195 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4060] 
    /*00010dc8*/ MOVW        R3, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*00010dcc*/ MOVT        R2, #0                      @ .LC195 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4060] 
    /*00010dd0*/ MOVT        R3, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*00010dd4*/ STR         R2, [SP, #4] 
    /*00010dd8*/ STR         R3, [SP] 
    /*00010ddc*/ MOV         R0, SL 
    /*00010de0*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*00010de4*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*00010de8*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*00010dec*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*00010df0*/ MOVW        R1, #0                      @ .LC315 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4dc8] 
    /*00010df4*/ MOVT        R1, #0                      @ .LC315 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4dc8] 
    /*00010df8*/ BL          0x0000000000010DF8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010dfc*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00010e00*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31a8] 
    /*00010e04*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00010e08*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31a8] 
    /*00010e0c*/ STR         R3, [SP, #56]               @ 0x38 
    /*00010e10*/ STR         R2, [SP, #52]               @ 0x34 
    /*00010e14*/ MOVW        R3, #0                      @ .LC317 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4e00] 
    /*00010e18*/ MOVT        R3, #0                      @ .LC317 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4e00] 
    /*00010e1c*/ STR         R3, [SP, #48]               @ 0x30 
    VI_ProcChnOutputResolution_x10e20:
    /*00010e20*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*00010e24*/ BL          0x0000000000010E24          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00010e28*/ SUBS        R4, R0, #0 
    /*00010e2c*/ BNE         VI_ProcChnOutputResolution_x11128
    /*00010e30*/ LDR         R3, [SP, #56]               @ 0x38 
    /*00010e34*/ LDR         R7, [R3], #4 
    /*00010e38*/ CMP         R7, #0 
    /*00010e3c*/ STR         R3, [SP, #56]               @ 0x38 
    /*00010e40*/ BEQ         VI_ProcChnOutputResolution_x10f88
    /*00010e44*/ ADD         R5, R7, #36864              @ 0x9000 
    /*00010e48*/ LDR         R3, [R5, #1484]             @ 0x5cc 
    /*00010e4c*/ CMP         R3, #0 
    /*00010e50*/ BNE         VI_ProcChnOutputResolution_x10fb4
    VI_ProcChnOutputResolution_x10e54:
    /*00010e54*/ ADD         R5, R7, #38144              @ 0x9500 
    /*00010e58*/ ADD         R7, R7, #36608              @ 0x8f00 
    /*00010e5c*/ ADD         R5, R5, #208                @ 0xd0 
    /*00010e60*/ ADD         R7, R7, #144                @ 0x90 
    /*00010e64*/ B           VI_ProcChnOutputResolution_x10e78
    VI_ProcChnOutputResolution_x10e68:
    /*00010e68*/ CMP         R4, #8 
    /*00010e6c*/ ADD         R5, R5, #4 
    /*00010e70*/ ADD         R7, R7, #56                 @ 0x38 
    /*00010e74*/ BEQ         VI_ProcChnOutputResolution_x10f88
    VI_ProcChnOutputResolution_x10e78:
    /*00010e78*/ LDR         R3, [R5] 
    /*00010e7c*/ ADD         R4, R4, #1 
    /*00010e80*/ CMP         R3, #0 
    /*00010e84*/ BEQ         VI_ProcChnOutputResolution_x10e68
    /*00010e88*/ MOV         R1, R4 
    /*00010e8c*/ ADD         R2, SP, #68                 @ 0x44 
    /*00010e90*/ MOV         R0, R6 
    /*00010e94*/ ADD         R5, R5, #4 
    /*00010e98*/ BL          0x0000000000010E98          @ VI_DRV_GetExtChnAttr [R_ARM_CALL: .text+0x29c78] 
    /*00010e9c*/ LDR         R2, [R5, #-4] 
    /*00010ea0*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00010ea4*/ MOVW        IP, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*00010ea8*/ CMP         R2, #1 
    /*00010eac*/ MOVT        IP, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*00010eb0*/ SUB         R3, R3, #17 
    /*00010eb4*/ LDR         R0, [R7] 
    /*00010eb8*/ MOVEQ       R2, IP 
    /*00010ebc*/ MOVNE       R2, FP 
    /*00010ec0*/ CMP         R3, #22 
    /*00010ec4*/ STR         R2, [SP, #40]               @ 0x28 
    /*00010ec8*/ LDR         IP, [SP, #52]               @ 0x34 
    /*00010ecc*/ ADD         R7, R7, #56                 @ 0x38 
    /*00010ed0*/ MOVWLS      R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*00010ed4*/ MOVTLS      R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*00010ed8*/ ADDLS       R3, R2, R3, LSL #2 
    /*00010edc*/ LDR         R2, [SP, #88]               @ 0x58 
    /*00010ee0*/ MOVWHI      LR, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*00010ee4*/ LDR         R8, [SP, #76]               @ 0x4c 
    /*00010ee8*/ LDRLS       LR, [R3, #56]               @ 0x38 
    /*00010eec*/ LDR         R9, [SP, #80]               @ 0x50 
    /*00010ef0*/ STR         IP, [SP, #24] 
    /*00010ef4*/ LDR         IP, [SP, #40]               @ 0x28 
    /*00010ef8*/ STR         R0, [SP, #36]               @ 0x24 
    /*00010efc*/ MOV         R0, SL 
    /*00010f00*/ STR         R9, [SP, #16] 
    /*00010f04*/ STR         IP, [SP] 
    /*00010f08*/ STR         R8, [SP, #12] 
    /*00010f0c*/ STR         FP, [SP, #8] 
    /*00010f10*/ STR         FP, [SP, #4] 
    /*00010f14*/ MOVTHI      LR, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*00010f18*/ CMP         R2, #5 
    /*00010f1c*/ STR         LR, [SP, #20] 
    /*00010f20*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*00010f24*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*00010f28*/ ADDLS       R3, R3, R2, LSL #2 
    /*00010f2c*/ LDR         R2, [SP, #92]               @ 0x5c 
    /*00010f30*/ MOVWHI      R1, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*00010f34*/ MOVTHI      R1, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*00010f38*/ LDRLS       R1, [R3, #32] 
    /*00010f3c*/ CMP         R2, #4 
    /*00010f40*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*00010f44*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*00010f48*/ ADDLS       R3, R3, R2, LSL #2 
    /*00010f4c*/ MOVWHI      R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*00010f50*/ STR         R1, [SP, #28] 
    /*00010f54*/ MOVTHI      R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*00010f58*/ LDRLS       R2, [R3, #160]              @ 0xa0 
    /*00010f5c*/ MOV         R3, R4 
    /*00010f60*/ LDR         R1, [SP, #48]               @ 0x30 
    /*00010f64*/ STR         R2, [SP, #32] 
    /*00010f68*/ MOV         R2, R6 
    /*00010f6c*/ BL          0x0000000000010F6C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010f70*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00010f74*/ MOV         R0, SL 
    /*00010f78*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00010f7c*/ BL          0x0000000000010F7C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010f80*/ CMP         R4, #8 
    /*00010f84*/ BNE         VI_ProcChnOutputResolution_x10e78
    VI_ProcChnOutputResolution_x10f88:
    /*00010f88*/ LDR         R4, [SP, #44]               @ 0x2c 
    /*00010f8c*/ ADD         R6, R6, #1 
    /*00010f90*/ MOV         R0, R4 
    /*00010f94*/ BL          0x0000000000010F94          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010f98*/ CMP         R6, #4 
    /*00010f9c*/ ADD         R3, R4, #176                @ 0xb0 
    /*00010fa0*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00010fa4*/ BNE         VI_ProcChnOutputResolution_x10e20
    /*00010fa8*/ MOV         R0, #0 
    /*00010fac*/ ADD         SP, SP, #156                @ 0x9c 
    /*00010fb0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcChnOutputResolution_x10fb4:
    /*00010fb4*/ ADD         R2, SP, #108                @ 0x6c 
    /*00010fb8*/ MOV         R1, R4 
    /*00010fbc*/ MOV         R0, R6 
    /*00010fc0*/ BL          0x0000000000010FC0          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*00010fc4*/ LDR         R9, [R5, #1484]             @ 0x5cc 
    /*00010fc8*/ LDR         R8, [SP, #132]              @ 0x84 
    /*00010fcc*/ MOVW        R5, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*00010fd0*/ CMP         R9, #1 
    /*00010fd4*/ MOVT        R5, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*00010fd8*/ LDR         R2, [SP, #136]              @ 0x88 
    /*00010fdc*/ ADD         R0, R7, #32768              @ 0x8000 
    /*00010fe0*/ MOVEQ       R9, R5 
    /*00010fe4*/ MOVNE       R9, FP 
    /*00010fe8*/ CMP         R8, #1 
    /*00010fec*/ LDR         R3, [SP, #116]              @ 0x74 
    /*00010ff0*/ MOVEQ       R8, R5 
    /*00010ff4*/ MOVNE       R8, FP 
    /*00010ff8*/ CMP         R2, #1 
    /*00010ffc*/ LDR         R2, [R0, #3904]             @ 0xf40 
    /*00011000*/ SUB         R3, R3, #17 
    /*00011004*/ MOVNE       R5, FP 
    /*00011008*/ CMP         R3, #22 
    /*0001100c*/ STR         R2, [SP, #40]               @ 0x28 
    /*00011010*/ LDR         R2, [R0, #3908]             @ 0xf44 
    /*00011014*/ STR         R2, [SP, #60]               @ 0x3c 
    /*00011018*/ BHI         VI_ProcChnOutputResolution_x110d4
    /*0001101c*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*00011020*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*00011024*/ ADD         R3, R2, R3, LSL #2 
    /*00011028*/ LDR         LR, [R3, #56]               @ 0x38 
    /*0001102c*/ LDR         R3, [SP, #124]              @ 0x7c 
    /*00011030*/ CMP         R3, #0 
    /*00011034*/ BEQ         VI_ProcChnOutputResolution_x110e8
    VI_ProcChnOutputResolution_x11038:
    /*00011038*/ CMP         R3, #2 
    /*0001103c*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*00011040*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*00011044*/ MOVW        IP, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31b0] 
    /*00011048*/ MOVT        IP, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31b0] 
    /*0001104c*/ MOVNE       IP, R2 
    /*00011050*/ LDR         R2, [SP, #120]              @ 0x78 
    /*00011054*/ CMP         R2, #5 
    /*00011058*/ BLS         VI_ProcChnOutputResolution_x110f8
    VI_ProcChnOutputResolution_x1105c:
    /*0001105c*/ LDR         R2, [SP, #128]              @ 0x80 
    /*00011060*/ MOVW        R1, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*00011064*/ MOVT        R1, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*00011068*/ CMP         R2, #4 
    /*0001106c*/ BLS         VI_ProcChnOutputResolution_x11114
    VI_ProcChnOutputResolution_x11070:
    /*00011070*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*00011074*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    VI_ProcChnOutputResolution_x11078:
    /*00011078*/ LDR         R0, [R0, #3928]             @ 0xf58 
    /*0001107c*/ MOV         R3, #0 
    /*00011080*/ STR         IP, [SP, #24] 
    /*00011084*/ LDR         IP, [SP, #60]               @ 0x3c 
    /*00011088*/ STR         R2, [SP, #32] 
    /*0001108c*/ MOV         R2, R6 
    /*00011090*/ STR         R1, [SP, #28] 
    /*00011094*/ STR         IP, [SP, #16] 
    /*00011098*/ LDR         IP, [SP, #40]               @ 0x28 
    /*0001109c*/ LDR         R1, [SP, #48]               @ 0x30 
    /*000110a0*/ STR         R0, [SP, #36]               @ 0x24 
    /*000110a4*/ MOV         R0, SL 
    /*000110a8*/ STR         LR, [SP, #20] 
    /*000110ac*/ STR         IP, [SP, #12] 
    /*000110b0*/ STR         R5, [SP, #8] 
    /*000110b4*/ STR         R8, [SP, #4] 
    /*000110b8*/ STR         R9, [SP] 
    /*000110bc*/ BL          0x00000000000110BC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000110c0*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*000110c4*/ MOV         R0, SL 
    /*000110c8*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*000110cc*/ BL          0x00000000000110CC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000110d0*/ B           VI_ProcChnOutputResolution_x10e54
    VI_ProcChnOutputResolution_x110d4:
    /*000110d4*/ LDR         R3, [SP, #124]              @ 0x7c 
    /*000110d8*/ MOVW        LR, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*000110dc*/ MOVT        LR, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*000110e0*/ CMP         R3, #0 
    /*000110e4*/ BNE         VI_ProcChnOutputResolution_x11038
    VI_ProcChnOutputResolution_x110e8:
    /*000110e8*/ LDR         R2, [SP, #120]              @ 0x78 
    /*000110ec*/ LDR         IP, [SP, #52]               @ 0x34 
    /*000110f0*/ CMP         R2, #5 
    /*000110f4*/ BHI         VI_ProcChnOutputResolution_x1105c
    VI_ProcChnOutputResolution_x110f8:
    /*000110f8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*000110fc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*00011100*/ ADD         R3, R3, R2, LSL #2 
    /*00011104*/ LDR         R2, [SP, #128]              @ 0x80 
    /*00011108*/ CMP         R2, #4 
    /*0001110c*/ LDR         R1, [R3, #32] 
    /*00011110*/ BHI         VI_ProcChnOutputResolution_x11070
    VI_ProcChnOutputResolution_x11114:
    /*00011114*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x894] 
    /*00011118*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x894] 
    /*0001111c*/ ADD         R3, R3, R2, LSL #2 
    /*00011120*/ LDR         R2, [R3, #160]              @ 0xa0 
    /*00011124*/ B           VI_ProcChnOutputResolution_x11078
    VI_ProcChnOutputResolution_x11128:
    /*00011128*/ MOV         R0, #65024                  @ 0xfe00 
    /*0001112c*/ MOVT        R0, #65535                  @ 0xffff 
    /*00011130*/ ADD         SP, SP, #156                @ 0x9c 
    /*00011134*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00011138*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcChnOutputResolution


FUNC_BEGIN VI_ProcChnStatus
    /*0001113c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00011140*/ SUB         SP, SP, #28 
    /*00011144*/ MOV         R7, R0 
    /*00011148*/ MOVW        R1, #0                      @ .LC318 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4e2c] 
    /*0001114c*/ MOVT        R1, #0                      @ .LC318 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4e2c] 
    /*00011150*/ LDR         R5, [PC, #324]              @ 0x000000000001129c 
    /*00011154*/ BL          0x0000000000011154          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011158*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x344c] 
    /*0001115c*/ MOVW        R3, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3454] 
    /*00011160*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x344c] 
    /*00011164*/ MOVT        R3, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3454] 
    /*00011168*/ STR         R2, [SP, #20] 
    /*0001116c*/ STR         R3, [SP, #16] 
    /*00011170*/ MOVW        R2, #0                      @ .LC320 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ec4] 
    /*00011174*/ MOVW        R3, #0                      @ .LC321 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ecc] 
    /*00011178*/ MOVT        R2, #0                      @ .LC320 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ec4] 
    /*0001117c*/ MOVT        R3, #0                      @ .LC321 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ecc] 
    /*00011180*/ STR         R2, [SP, #12] 
    /*00011184*/ STR         R3, [SP, #8] 
    /*00011188*/ MOVW        R2, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4df4] 
    /*0001118c*/ MOVW        R3, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*00011190*/ MOVT        R2, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4df4] 
    /*00011194*/ MOVT        R3, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*00011198*/ STR         R2, [SP, #4] 
    /*0001119c*/ STR         R3, [SP] 
    /*000111a0*/ MOV         R0, R7 
    /*000111a4*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*000111a8*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*000111ac*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*000111b0*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*000111b4*/ MOVW        R1, #0                      @ .LC319 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ea8] 
    /*000111b8*/ MOVT        R1, #0                      @ .LC319 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ea8] 
    /*000111bc*/ BL          0x00000000000111BC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000111c0*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000111c4*/ MOVW        SL, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*000111c8*/ MOVW        R9, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*000111cc*/ MOVW        R8, #0                      @ .LC322 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ed8] 
    /*000111d0*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000111d4*/ MOVT        SL, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*000111d8*/ MOVT        R9, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*000111dc*/ MOVT        R8, #0                      @ .LC322 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ed8] 
    /*000111e0*/ MOV         R4, #0 
    VI_ProcChnStatus_x111e4:
    /*000111e4*/ MOV         R0, R5 
    /*000111e8*/ BL          0x00000000000111E8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000111ec*/ MOV         R2, R4 
    /*000111f0*/ MOV         R1, R8 
    /*000111f4*/ ADD         R4, R4, #1 
    /*000111f8*/ SUBS        R3, R0, #0 
    /*000111fc*/ MOV         R0, R7 
    /*00011200*/ BNE         VI_ProcChnStatus_x1128c
    /*00011204*/ LDR         IP, [R6], #4 
    /*00011208*/ CMP         IP, #0 
    /*0001120c*/ ADD         LR, IP, #32768              @ 0x8000 
    /*00011210*/ ADD         FP, IP, #36864              @ 0x9000 
    /*00011214*/ BEQ         VI_ProcChnStatus_x1126c
    /*00011218*/ LDR         IP, [FP, #1484]             @ 0x5cc 
    /*0001121c*/ CMP         IP, #0 
    /*00011220*/ BEQ         VI_ProcChnStatus_x1126c
    /*00011224*/ LDR         FP, [LR, #3908]             @ 0xf44 
    /*00011228*/ CMP         IP, #1 
    /*0001122c*/ MOVEQ       IP, SL 
    /*00011230*/ MOVNE       IP, R9 
    /*00011234*/ STR         FP, [SP, #20] 
    /*00011238*/ LDR         FP, [LR, #3904]             @ 0xf40 
    /*0001123c*/ STR         FP, [SP, #16] 
    /*00011240*/ LDR         FP, [LR, #3900]             @ 0xf3c 
    /*00011244*/ STR         FP, [SP, #12] 
    /*00011248*/ LDR         FP, [LR, #3892]             @ 0xf34 
    /*0001124c*/ STR         FP, [SP, #8] 
    /*00011250*/ LDR         LR, [LR, #3928]             @ 0xf58 
    /*00011254*/ STM         SP, {IP, LR} 
    /*00011258*/ BL          0x0000000000011258          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001125c*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00011260*/ MOV         R0, R7 
    /*00011264*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00011268*/ BL          0x0000000000011268          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcChnStatus_x1126c:
    /*0001126c*/ MOV         R0, R5 
    /*00011270*/ ADD         R5, R5, #176                @ 0xb0 
    /*00011274*/ BL          0x0000000000011274          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011278*/ CMP         R4, #4 
    /*0001127c*/ BNE         VI_ProcChnStatus_x111e4
    /*00011280*/ MOV         R0, #0 
    /*00011284*/ ADD         SP, SP, #28 
    /*00011288*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcChnStatus_x1128c:
    /*0001128c*/ MOV         R0, #65024                  @ 0xfe00 
    /*00011290*/ MOVT        R0, #65535                  @ 0xffff 
    /*00011294*/ ADD         SP, SP, #28 
    /*00011298*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0001129c*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcChnStatus


FUNC_BEGIN VI_ProcPipeStatistic
    /*000112a0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000112a4*/ SUB         SP, SP, #44                 @ 0x2c 
    /*000112a8*/ MOV         R7, R0 
    /*000112ac*/ MOVW        R1, #0                      @ .LC323 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ef4] 
    /*000112b0*/ MOVT        R1, #0                      @ .LC323 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ef4] 
    /*000112b4*/ LDR         R5, [PC, #368]              @ 0x000000000001142c 
    /*000112b8*/ BL          0x00000000000112B8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000112bc*/ MOVW        R2, #0                      @ .LC326 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fa0] 
    /*000112c0*/ MOVW        R3, #0                      @ .LC327 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fac] 
    /*000112c4*/ MOVT        R2, #0                      @ .LC326 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fa0] 
    /*000112c8*/ MOVT        R3, #0                      @ .LC327 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fac] 
    /*000112cc*/ STR         R2, [SP, #28] 
    /*000112d0*/ STR         R3, [SP, #24] 
    /*000112d4*/ MOVW        R2, #0                      @ .LC328 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fbc] 
    /*000112d8*/ MOVW        R3, #0                      @ .LC329 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fc8] 
    /*000112dc*/ MOVT        R2, #0                      @ .LC328 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fbc] 
    /*000112e0*/ MOVT        R3, #0                      @ .LC329 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fc8] 
    /*000112e4*/ STR         R2, [SP, #20] 
    /*000112e8*/ STR         R3, [SP, #16] 
    /*000112ec*/ MOVW        R2, #0                      @ .LC330 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fd4] 
    /*000112f0*/ MOVW        R3, #0                      @ .LC331 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fe0] 
    /*000112f4*/ MOVT        R2, #0                      @ .LC330 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fd4] 
    /*000112f8*/ MOVT        R3, #0                      @ .LC331 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fe0] 
    /*000112fc*/ STR         R2, [SP, #12] 
    /*00011300*/ STR         R3, [SP, #8] 
    /*00011304*/ MOVW        R2, #0                      @ .LC332 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fec] 
    /*00011308*/ MOVW        R3, #0                      @ .LC333 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ff4] 
    /*0001130c*/ MOVT        R2, #0                      @ .LC332 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fec] 
    /*00011310*/ MOVT        R3, #0                      @ .LC333 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ff4] 
    /*00011314*/ STR         R2, [SP, #4] 
    /*00011318*/ STR         R3, [SP] 
    /*0001131c*/ MOV         R0, R7 
    /*00011320*/ MOVW        R3, #0                      @ .LC324 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f70] 
    /*00011324*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*00011328*/ MOVT        R3, #0                      @ .LC324 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f70] 
    /*0001132c*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*00011330*/ MOVW        R1, #0                      @ .LC325 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f78] 
    /*00011334*/ MOVT        R1, #0                      @ .LC325 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f78] 
    /*00011338*/ BL          0x0000000000011338          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001133c*/ MOV         R0, R7 
    /*00011340*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00011344*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00011348*/ BL          0x0000000000011348          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001134c*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00011350*/ MOVW        R9, #0                      @ .LC334 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ffc] 
    /*00011354*/ MOVW        R8, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00011358*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001135c*/ MOVT        R9, #0                      @ .LC334 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ffc] 
    /*00011360*/ MOVT        R8, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00011364*/ MOV         R4, #0 
    VI_ProcPipeStatistic_x11368:
    /*00011368*/ MOV         R0, R5 
    /*0001136c*/ BL          0x000000000001136C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00011370*/ CMP         R0, #0 
    /*00011374*/ MOV         R0, R4 
    /*00011378*/ BNE         VI_ProcPipeStatistic_x1141c
    /*0001137c*/ LDR         FP, [R6], #4 
    /*00011380*/ CMP         FP, #0 
    /*00011384*/ BEQ         VI_ProcPipeStatistic_x113f8
    /*00011388*/ BL          0x0000000000011388          @ VI_DRV_GetIspBeBufNum [R_ARM_CALL: .text+0x38598] 
    /*0001138c*/ ADD         R3, FP, #32768              @ 0x8000 
    /*00011390*/ ADD         FP, FP, #36352              @ 0x8e00 
    /*00011394*/ MOV         R1, R9 
    /*00011398*/ ADD         FP, FP, #208                @ 0xd0 
    /*0001139c*/ MOV         R2, R4 
    /*000113a0*/ STR         R0, [SP, #36]               @ 0x24 
    /*000113a4*/ MOV         R0, R7 
    /*000113a8*/ LDR         IP, [R3, #3856]             @ 0xf10 
    /*000113ac*/ STR         IP, [SP, #32] 
    /*000113b0*/ LDR         IP, [R3, #3852]             @ 0xf0c 
    /*000113b4*/ STR         IP, [SP, #28] 
    /*000113b8*/ LDR         IP, [R3, #3848]             @ 0xf08 
    /*000113bc*/ STR         IP, [SP, #24] 
    /*000113c0*/ LDR         IP, [R3, #3844]             @ 0xf04 
    /*000113c4*/ STR         IP, [SP, #20] 
    /*000113c8*/ LDR         IP, [R3, #3840]             @ 0xf00 
    /*000113cc*/ STR         IP, [SP, #16] 
    /*000113d0*/ LDR         IP, [R3, #3796]             @ 0xed4 
    /*000113d4*/ STR         IP, [SP, #12] 
    /*000113d8*/ LDR         R3, [R3, #3792]             @ 0xed0 
    /*000113dc*/ STR         R3, [SP, #8] 
    /*000113e0*/ LDRD        SL, [FP, #-8] 
    /*000113e4*/ STRD        SL, [SP] 
    /*000113e8*/ BL          0x00000000000113E8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000113ec*/ MOV         R1, R8 
    /*000113f0*/ MOV         R0, R7 
    /*000113f4*/ BL          0x00000000000113F4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcPipeStatistic_x113f8:
    /*000113f8*/ MOV         R0, R5 
    /*000113fc*/ ADD         R4, R4, #1 
    /*00011400*/ BL          0x0000000000011400          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011404*/ CMP         R4, #4 
    /*00011408*/ ADD         R5, R5, #176                @ 0xb0 
    /*0001140c*/ BNE         VI_ProcPipeStatistic_x11368
    /*00011410*/ MOV         R0, #0 
    /*00011414*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00011418*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcPipeStatistic_x1141c:
    /*0001141c*/ MOV         R0, #65024                  @ 0xfe00 
    /*00011420*/ MOVT        R0, #65535                  @ 0xffff 
    /*00011424*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00011428*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0001142c*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcPipeStatistic


FUNC_BEGIN VI_ProcPipeStatus
    /*00011430*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00011434*/ SUB         SP, SP, #56                 @ 0x38 
    /*00011438*/ MOV         R7, R0 
    /*0001143c*/ MOVW        R1, #0                      @ .LC335 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5028] 
    /*00011440*/ MOVT        R1, #0                      @ .LC335 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5028] 
    /*00011444*/ LDR         R5, [PC, #328]              @ 0x0000000000011594 
    /*00011448*/ BL          0x0000000000011448          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001144c*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x344c] 
    /*00011450*/ MOVW        R3, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3454] 
    /*00011454*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x344c] 
    /*00011458*/ MOVT        R3, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3454] 
    /*0001145c*/ STR         R2, [SP, #20] 
    /*00011460*/ STR         R3, [SP, #16] 
    /*00011464*/ MOVW        R2, #0                      @ .LC320 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ec4] 
    /*00011468*/ MOVW        R3, #0                      @ .LC321 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ecc] 
    /*0001146c*/ MOVT        R2, #0                      @ .LC320 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ec4] 
    /*00011470*/ MOVT        R3, #0                      @ .LC321 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ecc] 
    /*00011474*/ STR         R2, [SP, #12] 
    /*00011478*/ STR         R3, [SP, #8] 
    /*0001147c*/ MOVW        R2, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4df4] 
    /*00011480*/ MOVW        R3, #0                      @ .LC337 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x50c4] 
    /*00011484*/ MOVT        R2, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4df4] 
    /*00011488*/ MOVT        R3, #0                      @ .LC337 [R_ARM_MOVT_ABS: .rodata.str1.4+0x50c4] 
    /*0001148c*/ STR         R2, [SP, #4] 
    /*00011490*/ STR         R3, [SP] 
    /*00011494*/ MOV         R0, R7 
    /*00011498*/ MOVW        R3, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*0001149c*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ec] 
    /*000114a0*/ MOVT        R3, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*000114a4*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ec] 
    /*000114a8*/ MOVW        R1, #0                      @ .LC336 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x50a4] 
    /*000114ac*/ MOVT        R1, #0                      @ .LC336 [R_ARM_MOVT_ABS: .rodata.str1.4+0x50a4] 
    /*000114b0*/ BL          0x00000000000114B0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000114b4*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000114b8*/ MOVW        SL, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3364] 
    /*000114bc*/ MOVW        R9, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3368] 
    /*000114c0*/ MOVW        R8, #0                      @ .LC338 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x50cc] 
    /*000114c4*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000114c8*/ MOVT        SL, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3364] 
    /*000114cc*/ MOVT        R9, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3368] 
    /*000114d0*/ MOVT        R8, #0                      @ .LC338 [R_ARM_MOVT_ABS: .rodata.str1.4+0x50cc] 
    /*000114d4*/ MOV         R4, #0 
    VI_ProcPipeStatus_x114d8:
    /*000114d8*/ MOV         R0, R5 
    /*000114dc*/ BL          0x00000000000114DC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000114e0*/ ADD         R1, SP, #28 
    /*000114e4*/ CMP         R0, #0 
    /*000114e8*/ MOV         R0, R4 
    /*000114ec*/ BNE         VI_ProcPipeStatus_x11584
    /*000114f0*/ LDR         R3, [R6], #4 
    /*000114f4*/ CMP         R3, #0 
    /*000114f8*/ BEQ         VI_ProcPipeStatus_x11560
    /*000114fc*/ BL          0x00000000000114FC          @ VI_DoGetPipeStatus [R_ARM_CALL: .text+0x9030] 
    /*00011500*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00011504*/ LDR         IP, [SP, #48]               @ 0x30 
    /*00011508*/ MOV         R1, R8 
    /*0001150c*/ LDR         R0, [SP, #40]               @ 0x28 
    /*00011510*/ MOV         R2, R4 
    /*00011514*/ STR         R3, [SP, #20] 
    /*00011518*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001151c*/ LDR         LR, [SP, #44]               @ 0x2c 
    /*00011520*/ STR         IP, [SP, #16] 
    /*00011524*/ STR         R3, [SP, #4] 
    /*00011528*/ LDR         R3, [SP, #28] 
    /*0001152c*/ LDR         IP, [SP, #32] 
    /*00011530*/ CMP         R3, #1 
    /*00011534*/ STR         R0, [SP, #8] 
    /*00011538*/ STR         LR, [SP, #12] 
    /*0001153c*/ MOV         R0, R7 
    /*00011540*/ STR         IP, [SP] 
    /*00011544*/ MOVEQ       R3, SL 
    /*00011548*/ MOVNE       R3, R9 
    /*0001154c*/ BL          0x000000000001154C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011550*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00011554*/ MOV         R0, R7 
    /*00011558*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0001155c*/ BL          0x000000000001155C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcPipeStatus_x11560:
    /*00011560*/ MOV         R0, R5 
    /*00011564*/ ADD         R4, R4, #1 
    /*00011568*/ BL          0x0000000000011568          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001156c*/ CMP         R4, #4 
    /*00011570*/ ADD         R5, R5, #176                @ 0xb0 
    /*00011574*/ BNE         VI_ProcPipeStatus_x114d8
    /*00011578*/ MOV         R0, #0 
    /*0001157c*/ ADD         SP, SP, #56                 @ 0x38 
    /*00011580*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_ProcPipeStatus_x11584:
    /*00011584*/ MOV         R0, #65024                  @ 0xfe00 
    /*00011588*/ MOVT        R0, #65535                  @ 0xffff 
    /*0001158c*/ ADD         SP, SP, #56                 @ 0x38 
    /*00011590*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*00011594*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcPipeStatus


FUNC_BEGIN VI_DebugProcInfo
    /*00011598*/ PUSH        {R4, LR} 
    /*0001159c*/ SUB         SP, SP, #8 
    /*000115a0*/ MOV         R4, R0 
    /*000115a4*/ MOVW        R1, #0                      @ .LC339 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x50e8] 
    /*000115a8*/ MOVT        R1, #0                      @ .LC339 [R_ARM_MOVT_ABS: .rodata.str1.4+0x50e8] 
    /*000115ac*/ BL          0x00000000000115AC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000115b0*/ MOV         R0, R4 
    /*000115b4*/ MOVW        R2, #0                      @ .LC343 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5184] 
    /*000115b8*/ MOVW        R3, #0                      @ .LC340 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5154] 
    /*000115bc*/ MOVT        R2, #0                      @ .LC343 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5184] 
    /*000115c0*/ MOVT        R3, #0                      @ .LC340 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5154] 
    /*000115c4*/ STR         R2, [SP] 
    /*000115c8*/ MOVW        R1, #0                      @ .LC342 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5174] 
    /*000115cc*/ MOVW        R2, #0                      @ .LC341 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5164] 
    /*000115d0*/ MOVT        R1, #0                      @ .LC342 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5174] 
    /*000115d4*/ MOVT        R2, #0                      @ .LC341 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5164] 
    /*000115d8*/ BL          0x00000000000115D8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000115dc*/ MOV         R0, R4 
    /*000115e0*/ MOVW        R2, #63176                  @ 0xf6c8 
    /*000115e4*/ MOV         R3, #23296                  @ 0x5b00 
    /*000115e8*/ MOVT        R2, #1 
    /*000115ec*/ MOVT        R3, #1 
    /*000115f0*/ STR         R2, [SP] 
    /*000115f4*/ MOVW        R1, #0                      @ .LC344 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5198] 
    /*000115f8*/ MOVW        R2, #39880                  @ 0x9bc8 
    /*000115fc*/ MOVT        R1, #0                      @ .LC344 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5198] 
    /*00011600*/ BL          0x0000000000011600          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011604*/ MOV         R0, R4 
    /*00011608*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0001160c*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00011610*/ BL          0x0000000000011610          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011614*/ MOV         R0, #0 
    /*00011618*/ ADD         SP, SP, #8 
    /*0001161c*/ POP         {R4, PC} 
FUNC_END VI_DebugProcInfo


FUNC_BEGIN VI_ProcModParam
    /*00011620*/ PUSH        {R4, R5, R6, LR} 
    /*00011624*/ MOVW        R1, #0                      @ .LC345 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x51a8] 
    /*00011628*/ MOV         R4, R0 
    /*0001162c*/ MOVT        R1, #0                      @ .LC345 [R_ARM_MOVT_ABS: .rodata.str1.4+0x51a8] 
    /*00011630*/ MOVW        R5, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00011634*/ MOVT        R5, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00011638*/ BL          0x0000000000011638          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001163c*/ MOV         R0, R4 
    /*00011640*/ MOVW        R3, #0                      @ .LC346 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5224] 
    /*00011644*/ MOVW        R2, #0                      @ .LC347 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5234] 
    /*00011648*/ MOVT        R3, #0                      @ .LC346 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5224] 
    /*0001164c*/ MOVT        R2, #0                      @ .LC347 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5234] 
    /*00011650*/ MOVW        R1, #0                      @ .LC348 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5244] 
    /*00011654*/ MOVT        R1, #0                      @ .LC348 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5244] 
    /*00011658*/ BL          0x0000000000011658          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001165c*/ MOV         R1, R5 
    /*00011660*/ MOV         R0, R4 
    /*00011664*/ BL          0x0000000000011664          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011668*/ MOVW        R2, #0                      @ g_stModParam [R_ARM_MOVW_ABS_NC: .bss+0x760] 
    /*0001166c*/ MOVT        R2, #0                      @ g_stModParam [R_ARM_MOVT_ABS: .bss+0x760] 
    /*00011670*/ MOV         R0, R4 
    /*00011674*/ MOVW        R1, #0                      @ .LC349 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5250] 
    /*00011678*/ MOVT        R1, #0                      @ .LC349 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5250] 
    /*0001167c*/ LDM         R2, {R2, R3} 
    /*00011680*/ BL          0x0000000000011680          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011684*/ MOV         R1, R5 
    /*00011688*/ MOV         R0, R4 
    /*0001168c*/ BL          0x000000000001168C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011690*/ MOV         R0, R4 
    /*00011694*/ BL          0x0000000000011694          @ VI_DRV_ProcModParam [R_ARM_CALL: .text+0x33c2c] 
    /*00011698*/ MOV         R0, #0 
    /*0001169c*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_ProcModParam


FUNC_BEGIN VI_ProcHWDetectionInfo
    /*000116a0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000116a4*/ SUB         SP, SP, #28 
    /*000116a8*/ MOV         R5, R0 
    /*000116ac*/ MOVW        R1, #0                      @ .LC350 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x525c] 
    /*000116b0*/ MOVT        R1, #0                      @ .LC350 [R_ARM_MOVT_ABS: .rodata.str1.4+0x525c] 
    /*000116b4*/ MOVW        R9, #0                      @ .LC353 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52f4] 
    /*000116b8*/ BL          0x00000000000116B8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000116bc*/ MOVT        R9, #0                      @ .LC353 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52f4] 
    /*000116c0*/ MOVW        R8, #0                      @ .LC354 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5300] 
    /*000116c4*/ STR         R9, [SP, #4] 
    /*000116c8*/ MOVT        R8, #0                      @ .LC354 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5300] 
    /*000116cc*/ MOV         R0, R5 
    /*000116d0*/ STR         R8, [SP] 
    /*000116d4*/ MOVW        R3, #0                      @ .LC351 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52d8] 
    /*000116d8*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33f8] 
    /*000116dc*/ MOVT        R3, #0                      @ .LC351 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52d8] 
    /*000116e0*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33f8] 
    /*000116e4*/ MOVW        R1, #0                      @ .LC352 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52e4] 
    /*000116e8*/ MOVT        R1, #0                      @ .LC352 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52e4] 
    /*000116ec*/ MOVW        R4, #0                      @ g_astDevMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x778] 
    /*000116f0*/ BL          0x00000000000116F0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000116f4*/ MOV         R0, R5 
    /*000116f8*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*000116fc*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00011700*/ BL          0x0000000000011700          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011704*/ MOVT        R4, #0                      @ g_astDevMkpCtx [R_ARM_MOVT_ABS: .bss+0x778] 
    /*00011708*/ MOVW        FP, #0                      @ .LC355 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x530c] 
    /*0001170c*/ MOVW        SL, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00011710*/ MOVT        FP, #0                      @ .LC355 [R_ARM_MOVT_ABS: .rodata.str1.4+0x530c] 
    /*00011714*/ MOVT        SL, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00011718*/ MOV         R6, R4 
    /*0001171c*/ MOV         R7, #0 
    VI_ProcHWDetectionInfo_x11720:
    /*00011720*/ LDR         R3, [R6] 
    /*00011724*/ CMP         R3, #0 
    /*00011728*/ BEQ         VI_ProcHWDetectionInfo_x11738
    /*0001172c*/ LDR         R3, [R6, #4] 
    /*00011730*/ CMP         R3, #0 
    /*00011734*/ BNE         VI_ProcHWDetectionInfo_x1190c
    VI_ProcHWDetectionInfo_x11738:
    /*00011738*/ ADD         R7, R7, #1 
    /*0001173c*/ ADD         R6, R6, #36                 @ 0x24 
    /*00011740*/ CMP         R7, #2 
    /*00011744*/ BNE         VI_ProcHWDetectionInfo_x11720
    /*00011748*/ MOVW        R1, #0                      @ .LC356 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x531c] 
    /*0001174c*/ MOV         R0, R5 
    /*00011750*/ MOVT        R1, #0                      @ .LC356 [R_ARM_MOVT_ABS: .rodata.str1.4+0x531c] 
    /*00011754*/ MOVW        SL, #0                      @ .LC355 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x530c] 
    /*00011758*/ BL          0x0000000000011758          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001175c*/ STM         SP, {R8, R9} 
    /*00011760*/ MOVW        R3, #0                      @ .LC351 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52d8] 
    /*00011764*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33f8] 
    /*00011768*/ MOVT        R3, #0                      @ .LC351 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52d8] 
    /*0001176c*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33f8] 
    /*00011770*/ MOVW        R1, #0                      @ .LC352 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52e4] 
    /*00011774*/ MOV         R0, R5 
    /*00011778*/ MOVT        R1, #0                      @ .LC352 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52e4] 
    /*0001177c*/ MOVW        R7, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00011780*/ BL          0x0000000000011780          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011784*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00011788*/ MOV         R0, R5 
    /*0001178c*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00011790*/ BL          0x0000000000011790          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011794*/ MOVT        SL, #0                      @ .LC355 [R_ARM_MOVT_ABS: .rodata.str1.4+0x530c] 
    /*00011798*/ MOVT        R7, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*0001179c*/ MOV         R6, #0 
    VI_ProcHWDetectionInfo_x117a0:
    /*000117a0*/ LDR         R3, [R4] 
    /*000117a4*/ CMP         R3, #0 
    /*000117a8*/ BEQ         VI_ProcHWDetectionInfo_x117b8
    /*000117ac*/ LDR         R3, [R4, #4] 
    /*000117b0*/ CMP         R3, #0 
    /*000117b4*/ BNE         VI_ProcHWDetectionInfo_x118b8
    VI_ProcHWDetectionInfo_x117b8:
    /*000117b8*/ ADD         R6, R6, #1 
    /*000117bc*/ ADD         R4, R4, #36                 @ 0x24 
    /*000117c0*/ CMP         R6, #2 
    /*000117c4*/ BNE         VI_ProcHWDetectionInfo_x117a0
    /*000117c8*/ MOVW        R1, #0                      @ .LC357 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5398] 
    /*000117cc*/ MOV         R0, R5 
    /*000117d0*/ MOVT        R1, #0                      @ .LC357 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5398] 
    /*000117d4*/ LDR         R6, [PC, #388]              @ 0x0000000000011960 
    /*000117d8*/ BL          0x00000000000117D8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000117dc*/ STM         SP, {R8, R9} 
    /*000117e0*/ MOVW        R3, #0                      @ .LC351 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52d8] 
    /*000117e4*/ MOVW        R2, #0                      @ .LC358 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5414] 
    /*000117e8*/ MOVT        R3, #0                      @ .LC351 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52d8] 
    /*000117ec*/ MOVT        R2, #0                      @ .LC358 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5414] 
    /*000117f0*/ MOVW        R1, #0                      @ .LC352 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52e4] 
    /*000117f4*/ MOV         R0, R5 
    /*000117f8*/ MOVT        R1, #0                      @ .LC352 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52e4] 
    /*000117fc*/ MOVW        R7, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00011800*/ BL          0x0000000000011800          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011804*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*00011808*/ MOV         R0, R5 
    /*0001180c*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00011810*/ BL          0x0000000000011810          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011814*/ MOVW        R9, #0                      @ .LC355 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x530c] 
    /*00011818*/ MOVW        R8, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3468] 
    /*0001181c*/ MOVT        R7, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00011820*/ MOVT        R9, #0                      @ .LC355 [R_ARM_MOVT_ABS: .rodata.str1.4+0x530c] 
    /*00011824*/ MOVT        R8, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3468] 
    /*00011828*/ MOV         R4, #0 
    VI_ProcHWDetectionInfo_x1182c:
    /*0001182c*/ MOV         R0, R6 
    /*00011830*/ BL          0x0000000000011830          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00011834*/ ADD         R2, SP, #16 
    /*00011838*/ ADD         R1, SP, #8 
    /*0001183c*/ CMP         R0, #0 
    /*00011840*/ MOV         R0, R4 
    /*00011844*/ BNE         VI_ProcHWDetectionInfo_x11950
    /*00011848*/ LDR         R3, [R7], #4 
    /*0001184c*/ CMP         R3, #0 
    /*00011850*/ BEQ         VI_ProcHWDetectionInfo_x118ac
    /*00011854*/ BL          0x0000000000011854          @ VI_DRV_GetIspDetectionSize [R_ARM_CALL: .text+0x34670] 
    /*00011858*/ MOV         R0, R6 
    /*0001185c*/ BL          0x000000000001185C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011860*/ LDR         R0, [SP, #16] 
    /*00011864*/ LDR         IP, [SP, #12] 
    /*00011868*/ MOV         R1, R9 
    /*0001186c*/ LDR         R3, [SP, #8] 
    /*00011870*/ MOV         R2, R4 
    /*00011874*/ STR         R0, [SP, #4] 
    /*00011878*/ MOV         R0, R5 
    /*0001187c*/ STR         IP, [SP] 
    /*00011880*/ BL          0x0000000000011880          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011884*/ MOV         R1, R8 
    /*00011888*/ MOV         R0, R5 
    /*0001188c*/ BL          0x000000000001188C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcHWDetectionInfo_x11890:
    /*00011890*/ ADD         R4, R4, #1 
    /*00011894*/ ADD         R6, R6, #176                @ 0xb0 
    /*00011898*/ CMP         R4, #4 
    /*0001189c*/ BNE         VI_ProcHWDetectionInfo_x1182c
    /*000118a0*/ MOV         R0, #0 
    /*000118a4*/ ADD         SP, SP, #28 
    /*000118a8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcHWDetectionInfo_x118ac:
    /*000118ac*/ MOV         R0, R6 
    /*000118b0*/ BL          0x00000000000118B0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000118b4*/ B           VI_ProcHWDetectionInfo_x11890
    VI_ProcHWDetectionInfo_x118b8:
    /*000118b8*/ MOV         R0, R6 
    /*000118bc*/ BL          0x00000000000118BC          @ VI_DRV_IsDevSupportBas [R_ARM_CALL: .text+0x34680] 
    /*000118c0*/ CMP         R0, #0 
    /*000118c4*/ BEQ         VI_ProcHWDetectionInfo_x117b8
    /*000118c8*/ ADD         R2, SP, #16 
    /*000118cc*/ ADD         R1, SP, #8 
    /*000118d0*/ MOV         R0, R6 
    /*000118d4*/ BL          0x00000000000118D4          @ VI_DRV_GetBasDetectionSize [R_ARM_CALL: .text+0x34688] 
    /*000118d8*/ LDR         R0, [SP, #16] 
    /*000118dc*/ LDR         IP, [SP, #12] 
    /*000118e0*/ MOV         R1, SL 
    /*000118e4*/ LDR         R3, [SP, #8] 
    /*000118e8*/ MOV         R2, R6 
    /*000118ec*/ STR         R0, [SP, #4] 
    /*000118f0*/ MOV         R0, R5 
    /*000118f4*/ STR         IP, [SP] 
    /*000118f8*/ BL          0x00000000000118F8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000118fc*/ MOV         R1, R7 
    /*00011900*/ MOV         R0, R5 
    /*00011904*/ BL          0x0000000000011904          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011908*/ B           VI_ProcHWDetectionInfo_x117b8
    VI_ProcHWDetectionInfo_x1190c:
    /*0001190c*/ ADD         R2, SP, #16 
    /*00011910*/ ADD         R1, SP, #8 
    /*00011914*/ MOV         R0, R7 
    /*00011918*/ BL          0x0000000000011918          @ VI_DRV_GetDevDetectionSize [R_ARM_CALL: .text+0x34660] 
    /*0001191c*/ LDR         R0, [SP, #16] 
    /*00011920*/ LDR         IP, [SP, #12] 
    /*00011924*/ MOV         R1, FP 
    /*00011928*/ LDR         R3, [SP, #8] 
    /*0001192c*/ MOV         R2, R7 
    /*00011930*/ STR         R0, [SP, #4] 
    /*00011934*/ MOV         R0, R5 
    /*00011938*/ STR         IP, [SP] 
    /*0001193c*/ BL          0x000000000001193C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00011940*/ MOV         R1, SL 
    /*00011944*/ MOV         R0, R5 
    /*00011948*/ BL          0x0000000000011948          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001194c*/ B           VI_ProcHWDetectionInfo_x11738
    VI_ProcHWDetectionInfo_x11950:
    /*00011950*/ MOV         R0, #65024                  @ 0xfe00 
    /*00011954*/ MOVT        R0, #65535                  @ 0xffff 
    /*00011958*/ ADD         SP, SP, #28 
    /*0001195c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00011960*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcHWDetectionInfo


FUNC_BEGIN VI_COMM_ProcOnlinePrepareNextBnrRawFrame.part.2
    /*00011964*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00011968*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001196c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00011970*/ MOV         R7, R0 
    /*00011974*/ LDR         R5, [R3, R0, LSL #2] 
    /*00011978*/ SUB         SP, SP, #52                 @ 0x34 
    /*0001197c*/ MOV         R2, #448                    @ 0x1c0 
    /*00011980*/ ADD         R6, R5, #37888              @ 0x9400 
    /*00011984*/ ADD         R0, R5, #37376              @ 0x9200 
    /*00011988*/ ADD         R6, R6, #8 
    /*0001198c*/ ADD         R4, R5, #36864              @ 0x9000 
    /*00011990*/ ADD         R0, R0, #72                 @ 0x48 
    /*00011994*/ MOV         R1, R6 
    /*00011998*/ BL          0x0000000000011998          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001199c*/ ADD         R0, R5, #37376              @ 0x9200 
    /*000119a0*/ MOV         R3, #0 
    /*000119a4*/ ADD         R0, R0, #60                 @ 0x3c 
    /*000119a8*/ STR         R3, [R4, #1464]             @ 0x5b8 
    /*000119ac*/ STR         R3, [R4, #1468]             @ 0x5bc 
    /*000119b0*/ BL          0x00000000000119B0          @ VI_IsWaitCapFramStop [R_ARM_CALL: .text+0x1598] 
    /*000119b4*/ CMP         R0, #1 
    /*000119b8*/ BEQ         VI_COMM_ProcOnlinePrepareNextBnrRawFrame.part.2_x119c8
    /*000119bc*/ LDR         R3, [R4, #528]              @ 0x210 
    /*000119c0*/ CMP         R3, #0 
    /*000119c4*/ BNE         VI_COMM_ProcOnlinePrepareNextBnrRawFrame.part.2_x119f4
    VI_COMM_ProcOnlinePrepareNextBnrRawFrame.part.2_x119c8:
    /*000119c8*/ LDR         R1, [R4, #1464]             @ 0x5b8 
    VI_COMM_ProcOnlinePrepareNextBnrRawFrame.part.2_x119cc:
    /*000119cc*/ MOV         R0, R7 
    /*000119d0*/ BL          0x00000000000119D0          @ VI_DRV_SetBnrEnable [R_ARM_CALL: .text+0x3386c] 
    /*000119d4*/ LDR         R3, [R4, #1464]             @ 0x5b8 
    /*000119d8*/ CMP         R3, #0 
    /*000119dc*/ BEQ         VI_COMM_ProcOnlinePrepareNextBnrRawFrame.part.2_x119ec
    /*000119e0*/ MOV         R1, R6 
    /*000119e4*/ MOV         R0, R7 
    /*000119e8*/ BL          0x00000000000119E8          @ VI_DRV_PrepareBnrRawPicInfo [R_ARM_CALL: .text+0x33874] 
    VI_COMM_ProcOnlinePrepareNextBnrRawFrame.part.2_x119ec:
    /*000119ec*/ ADD         SP, SP, #52                 @ 0x34 
    /*000119f0*/ POP         {R4, R5, R6, R7, PC} 
    VI_COMM_ProcOnlinePrepareNextBnrRawFrame.part.2_x119f4:
    /*000119f4*/ LDR         R3, [R4, #388]              @ 0x184 
    /*000119f8*/ CMP         R3, #0 
    /*000119fc*/ BEQ         VI_COMM_ProcOnlinePrepareNextBnrRawFrame.part.2_x119c8
    /*00011a00*/ ADD         R1, SP, #8 
    /*00011a04*/ MOV         R0, R7 
    /*00011a08*/ BL          0x0000000000011A08          @ VI_DRV_GetBnrRawVbInfo [R_ARM_CALL: .text+0x33864] 
    /*00011a0c*/ MOV         R1, R6 
    /*00011a10*/ ADD         R0, SP, #8 
    /*00011a14*/ BL          0x0000000000011A14          @ VI_DRV_GetFrmVbBlk [R_ARM_CALL: .text+0x2c8f4] 
    /*00011a18*/ CMP         R0, #0 
    /*00011a1c*/ MOVEQ       R1, #1 
    /*00011a20*/ STREQ       R1, [R4, #1464]             @ 0x5b8 
    /*00011a24*/ BEQ         VI_COMM_ProcOnlinePrepareNextBnrRawFrame.part.2_x119cc
    /*00011a28*/ MOVW        R2, #1103                   @ 0x44f 
    /*00011a2c*/ STR         R7, [SP, #4] 
    /*00011a30*/ STR         R2, [SP] 
    /*00011a34*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x98c] 
    /*00011a38*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x554c] 
    /*00011a3c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x98c] 
    /*00011a40*/ MOV         R1, #16 
    /*00011a44*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x554c] 
    /*00011a48*/ MOV         R0, #3 
    /*00011a4c*/ BL          0x0000000000011A4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011a50*/ B           VI_COMM_ProcOnlinePrepareNextBnrRawFrame.part.2_x119c8
FUNC_END VI_COMM_ProcOnlinePrepareNextBnrRawFrame.part.2


FUNC_BEGIN VI_COMM_GetOfflineProcCnt
    /*00011a54*/ PUSH        {R4, R5, R6, LR} 
    /*00011a58*/ MOV         R5, #0 
    /*00011a5c*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00011a60*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00011a64*/ MOV         R0, R5 
    /*00011a68*/ MOV         R3, #1 
    /*00011a6c*/ STR         R5, [R4, #548]              @ 0x224 
    /*00011a70*/ STR         R5, [R4, #552]              @ 0x228 
    /*00011a74*/ STR         R3, [R4, #556]              @ 0x22c 
    /*00011a78*/ STR         R3, [R4, #560]              @ 0x230 
    /*00011a7c*/ BL          0x0000000000011A7C          @ VI_DRV_ProcGetMode [R_ARM_CALL: .text+0x27210] 
    /*00011a80*/ CMP         R0, #0 
    /*00011a84*/ BNE         VI_COMM_GetOfflineProcCnt_x11aa4
    /*00011a88*/ LDR         R2, [R4, #556]              @ 0x22c 
    /*00011a8c*/ LDR         R3, [R4, #548]              @ 0x224 
    /*00011a90*/ CMP         R2, R5 
    /*00011a94*/ STRNE       R0, [R4, #556]              @ 0x22c 
    /*00011a98*/ ADD         R3, R3, #1 
    /*00011a9c*/ STR         R3, [R4, #548]              @ 0x224 
    /*00011aa0*/ POP         {R4, R5, R6, PC} 
    VI_COMM_GetOfflineProcCnt_x11aa4:
    /*00011aa4*/ CMP         R0, #1 
    /*00011aa8*/ POPNE       {R4, R5, R6, PC} 
    /*00011aac*/ LDR         R2, [R4, #560]              @ 0x230 
    /*00011ab0*/ LDR         R3, [R4, #552]              @ 0x228 
    /*00011ab4*/ CMP         R2, #0 
    /*00011ab8*/ STRNE       R5, [R4, #560]              @ 0x230 
    /*00011abc*/ ADD         R3, R3, #1 
    /*00011ac0*/ STR         R3, [R4, #552]              @ 0x228 
    /*00011ac4*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_COMM_GetOfflineProcCnt


FUNC_BEGIN VI_COMM_ProcHwStatistic
    /*00011ac8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00011acc*/ LDR         R6, [SP, #24] 
    /*00011ad0*/ LDR         R8, [SP, #28] 
    /*00011ad4*/ LDR         R7, [SP, #32] 
    /*00011ad8*/ CMP         R1, #5 
    /*00011adc*/ LDRLS       PC, [PC, R1, LSL #2] 
    /*00011ae0*/ B           VI_COMM_ProcHwStatistic_x11d60
    /*00011ae4*/ @           <UNDEFINED> instruction: 0x00011cbc 
    /*00011ae8*/ @           <UNDEFINED> instruction: 0x00011cbc 
    /*00011aec*/ STRDEQ      R1, [R1], -IP 
    /*00011af0*/ STRDEQ      R1, [R1], -IP 
    /*00011af4*/ STRDEQ      R1, [R1], -IP 
    /*00011af8*/ STRDEQ      R1, [R1], -IP 
    /*00011afc*/ LDR         R5, [PC, #616]              @ 0x0000000000011d6c 
    /*00011b00*/ LSL         R4, R0, #8 
    /*00011b04*/ ADD         R3, R5, R4 
    /*00011b08*/ LDRD        R0, [R3, #56]               @ 0x38 
    /*00011b0c*/ ADDS        R0, R0, #1 
    /*00011b10*/ ADC         R1, R1, #0 
    /*00011b14*/ TST         R2, #1024                   @ 0x400 
    /*00011b18*/ STRD        R0, [R3, #56]               @ 0x38 
    /*00011b1c*/ BEQ         VI_COMM_ProcHwStatistic_x11b30
    /*00011b20*/ LDRD        R0, [R3, #64]               @ 0x40 
    /*00011b24*/ ADDS        R0, R0, #1 
    /*00011b28*/ ADC         R1, R1, #0 
    /*00011b2c*/ STRD        R0, [R3, #64]               @ 0x40 
    VI_COMM_ProcHwStatistic_x11b30:
    /*00011b30*/ TST         R2, #512                    @ 0x200 
    /*00011b34*/ BEQ         VI_COMM_ProcHwStatistic_x11b4c
    /*00011b38*/ ADD         R3, R5, R4 
    /*00011b3c*/ LDRD        R0, [R3, #72]               @ 0x48 
    /*00011b40*/ ADDS        R0, R0, #1 
    /*00011b44*/ ADC         R1, R1, #0 
    /*00011b48*/ STRD        R0, [R3, #72]               @ 0x48 
    VI_COMM_ProcHwStatistic_x11b4c:
    /*00011b4c*/ TST         R2, #256                    @ 0x100 
    /*00011b50*/ BEQ         VI_COMM_ProcHwStatistic_x11b68
    /*00011b54*/ ADD         R3, R5, R4 
    /*00011b58*/ LDRD        R0, [R3, #80]               @ 0x50 
    /*00011b5c*/ ADDS        R0, R0, #1 
    /*00011b60*/ ADC         R1, R1, #0 
    /*00011b64*/ STRD        R0, [R3, #80]               @ 0x50 
    VI_COMM_ProcHwStatistic_x11b68:
    /*00011b68*/ TST         R2, #24 
    /*00011b6c*/ BEQ         VI_COMM_ProcHwStatistic_x11b84
    /*00011b70*/ ADD         R3, R5, R4 
    /*00011b74*/ LDRD        R0, [R3, #88]               @ 0x58 
    /*00011b78*/ ADDS        R0, R0, #1 
    /*00011b7c*/ ADC         R1, R1, #0 
    /*00011b80*/ STRD        R0, [R3, #88]               @ 0x58 
    VI_COMM_ProcHwStatistic_x11b84:
    /*00011b84*/ TST         R2, #128                    @ 0x80 
    /*00011b88*/ BEQ         VI_COMM_ProcHwStatistic_x11ba0
    /*00011b8c*/ ADD         R3, R5, R4 
    /*00011b90*/ LDRD        R0, [R3, #96]               @ 0x60 
    /*00011b94*/ ADDS        R0, R0, #1 
    /*00011b98*/ ADC         R1, R1, #0 
    /*00011b9c*/ STRD        R0, [R3, #96]               @ 0x60 
    VI_COMM_ProcHwStatistic_x11ba0:
    /*00011ba0*/ TST         R2, #4096                   @ 0x1000 
    /*00011ba4*/ BEQ         VI_COMM_ProcHwStatistic_x11bbc
    /*00011ba8*/ ADD         R3, R5, R4 
    /*00011bac*/ LDRD        R0, [R3, #104]              @ 0x68 
    /*00011bb0*/ ADDS        R0, R0, #1 
    /*00011bb4*/ ADC         R1, R1, #0 
    /*00011bb8*/ STRD        R0, [R3, #104]              @ 0x68 
    VI_COMM_ProcHwStatistic_x11bbc:
    /*00011bbc*/ TST         R2, #4 
    /*00011bc0*/ BEQ         VI_COMM_ProcHwStatistic_x11bd8
    /*00011bc4*/ ADD         R3, R5, R4 
    /*00011bc8*/ LDRD        R0, [R3, #112]              @ 0x70 
    /*00011bcc*/ ADDS        R0, R0, #1 
    /*00011bd0*/ ADC         R1, R1, #0 
    /*00011bd4*/ STRD        R0, [R3, #112]              @ 0x70 
    VI_COMM_ProcHwStatistic_x11bd8:
    /*00011bd8*/ MOV         R1, R2 
    /*00011bdc*/ MOV         R0, #1 
    /*00011be0*/ BL          0x0000000000011BE0          @ VI_DRV_ProcIsWrongInt [R_ARM_CALL: .text+0x27288] 
    /*00011be4*/ CMP         R0, #0 
    /*00011be8*/ BEQ         VI_COMM_ProcHwStatistic_x11d48
    VI_COMM_ProcHwStatistic_x11bec:
    /*00011bec*/ ADD         R0, R5, R4 
    /*00011bf0*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00011bf4*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00011bf8*/ SUB         LR, R7, R6 
    /*00011bfc*/ LDRD        R2, [R0, #184]              @ 0xb8 
    /*00011c00*/ ADD         IP, R1, R4 
    /*00011c04*/ ADDS        R2, R2, #1 
    /*00011c08*/ ADC         R3, R3, #0 
    /*00011c0c*/ STRD        R2, [R0, #184]              @ 0xb8 
    /*00011c10*/ STR         LR, [IP, #800]              @ 0x320 
    /*00011c14*/ LDRD        R2, [R0, #208]              @ 0xd0 
    /*00011c18*/ ADDS        R2, R2, LR 
    /*00011c1c*/ ADC         R3, R3, #0 
    /*00011c20*/ STRD        R2, [R0, #208]              @ 0xd0 
    /*00011c24*/ LDR         R3, [IP, #800]              @ 0x320 
    /*00011c28*/ ADD         R0, R5, R4 
    /*00011c2c*/ LDR         R2, [IP, #804]              @ 0x324 
    /*00011c30*/ CMP         R3, R2 
    /*00011c34*/ STRHI       R3, [IP, #804]              @ 0x324 
    /*00011c38*/ LDR         R3, [R0, #240]              @ 0xf0 
    /*00011c3c*/ MOVW        R2, #16959                  @ 0x423f 
    /*00011c40*/ MOVT        R2, #15 
    /*00011c44*/ SUB         R3, R6, R3 
    /*00011c48*/ CMP         R3, R2 
    /*00011c4c*/ POPLS       {R4, R5, R6, R7, R8, PC} 
    /*00011c50*/ LDR         R2, [R0, #192]              @ 0xc0 
    /*00011c54*/ ADD         IP, R1, R4 
    /*00011c58*/ LDR         R3, [R0, #184]              @ 0xb8 
    /*00011c5c*/ ADD         R1, R1, R4 
    /*00011c60*/ SUB         R3, R3, R2 
    /*00011c64*/ STR         R3, [IP, #776]              @ 0x308 
    /*00011c68*/ LDRD        R2, [R0, #184]              @ 0xb8 
    /*00011c6c*/ STRD        R2, [R0, #192]              @ 0xc0 
    /*00011c70*/ ADD         R0, R5, R4 
    /*00011c74*/ LDR         R3, [IP, #776]              @ 0x308 
    /*00011c78*/ ADD         R4, R5, R4 
    /*00011c7c*/ LDR         R2, [IP, #780]              @ 0x30c 
    /*00011c80*/ CMP         R3, R2 
    /*00011c84*/ STRHI       R3, [IP, #780]              @ 0x30c 
    /*00011c88*/ LDR         R2, [R0, #216]              @ 0xd8 
    /*00011c8c*/ LDR         R3, [R0, #208]              @ 0xd0 
    /*00011c90*/ SUB         R3, R3, R2 
    /*00011c94*/ STR         R3, [R1, #808]              @ 0x328 
    /*00011c98*/ LDRD        R2, [R0, #208]              @ 0xd0 
    /*00011c9c*/ STRD        R2, [R0, #216]              @ 0xd8 
    /*00011ca0*/ LDR         R3, [R1, #808]              @ 0x328 
    /*00011ca4*/ LDR         R2, [R1, #812]              @ 0x32c 
    /*00011ca8*/ CMP         R3, R2 
    /*00011cac*/ STRHI       R3, [R1, #812]              @ 0x32c 
    /*00011cb0*/ STR         R6, [R4, #240]              @ 0xf0 
    /*00011cb4*/ STR         R8, [R4, #244]              @ 0xf4 
    /*00011cb8*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*00011cbc*/ LDR         R5, [PC, #168]              @ 0x0000000000011d6c 
    /*00011cc0*/ LSL         R4, R0, #8 
    /*00011cc4*/ ADD         R3, R5, R4 
    /*00011cc8*/ LDRD        R0, [R5, R4] 
    /*00011ccc*/ ADDS        R0, R0, #1 
    /*00011cd0*/ ADC         R1, R1, #0 
    /*00011cd4*/ TST         R2, #2 
    /*00011cd8*/ STRD        R0, [R5, R4] 
    /*00011cdc*/ BEQ         VI_COMM_ProcHwStatistic_x11cf0
    /*00011ce0*/ LDRD        R0, [R3, #8] 
    /*00011ce4*/ ADDS        R0, R0, #1 
    /*00011ce8*/ ADC         R1, R1, #0 
    /*00011cec*/ STRD        R0, [R3, #8] 
    VI_COMM_ProcHwStatistic_x11cf0:
    /*00011cf0*/ TST         R2, #4 
    /*00011cf4*/ BEQ         VI_COMM_ProcHwStatistic_x11d0c
    /*00011cf8*/ ADD         R3, R5, R4 
    /*00011cfc*/ LDRD        R0, [R3, #16] 
    /*00011d00*/ ADDS        R0, R0, #1 
    /*00011d04*/ ADC         R1, R1, #0 
    /*00011d08*/ STRD        R0, [R3, #16] 
    VI_COMM_ProcHwStatistic_x11d0c:
    /*00011d0c*/ TST         R2, #24 
    /*00011d10*/ BEQ         VI_COMM_ProcHwStatistic_x11d28
    /*00011d14*/ ADD         R3, R5, R4 
    /*00011d18*/ LDRD        R0, [R3, #24] 
    /*00011d1c*/ ADDS        R0, R0, #1 
    /*00011d20*/ ADC         R1, R1, #0 
    /*00011d24*/ STRD        R0, [R3, #24] 
    VI_COMM_ProcHwStatistic_x11d28:
    /*00011d28*/ TST         R2, #128                    @ 0x80 
    /*00011d2c*/ BEQ         VI_COMM_ProcHwStatistic_x11bec
    /*00011d30*/ ADD         R1, R5, R4 
    /*00011d34*/ LDRD        R2, [R1, #32] 
    /*00011d38*/ ADDS        R2, R2, #1 
    /*00011d3c*/ ADC         R3, R3, #0 
    /*00011d40*/ STRD        R2, [R1, #32] 
    /*00011d44*/ B           VI_COMM_ProcHwStatistic_x11bec
    VI_COMM_ProcHwStatistic_x11d48:
    /*00011d48*/ ADD         R1, R5, R4 
    /*00011d4c*/ LDRD        R2, [R1, #120]              @ 0x78 
    /*00011d50*/ ADDS        R2, R2, #1 
    /*00011d54*/ ADC         R3, R3, #0 
    /*00011d58*/ STRD        R2, [R1, #120]              @ 0x78 
    /*00011d5c*/ B           VI_COMM_ProcHwStatistic_x11bec
    VI_COMM_ProcHwStatistic_x11d60:
    /*00011d60*/ LSL         R4, R0, #8 
    /*00011d64*/ LDR         R5, [PC]                    @ 0x0000000000011d6c 
    /*00011d68*/ B           VI_COMM_ProcHwStatistic_x11bec
    /*00011d6c*/ ANDEQ       R1, R0, R0, LSR #13 
FUNC_END VI_COMM_ProcHwStatistic


FUNC_BEGIN VI_MODEL_GetOneFreeModel
    /*00011d70*/ MOV         R2, R0 
    /*00011d74*/ MOV         R3, #0 
    /*00011d78*/ MOV         R0, R3 
    /*00011d7c*/ STR         R3, [R2, #72]               @ 0x48 
    /*00011d80*/ BX          LR 
FUNC_END VI_MODEL_GetOneFreeModel


FUNC_BEGIN VI_MODEL_CreatOneModel
    /*00011d84*/ PUSH        {R4, R5, R6, LR} 
    /*00011d88*/ MOV         R4, R0 
    /*00011d8c*/ BL          0x0000000000011D8C          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00011d90*/ CMP         R0, #1 
    /*00011d94*/ BLS         VI_MODEL_CreatOneModel_x11da0
    /*00011d98*/ MOV         R0, #0 
    /*00011d9c*/ POP         {R4, R5, R6, PC} 
    VI_MODEL_CreatOneModel_x11da0:
    /*00011da0*/ MOV         R6, #96                     @ 0x60 
    /*00011da4*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00011da8*/ MUL         R6, R6, R4 
    /*00011dac*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00011db0*/ MOV         R0, R4 
    /*00011db4*/ ADD         R1, R6, #144                @ 0x90 
    /*00011db8*/ ADD         R1, R5, R1 
    /*00011dbc*/ BL          0x0000000000011DBC          @ VI_DRV_MallocModelBuf [R_ARM_CALL: .text+0x2fb04] 
    /*00011dc0*/ CMP         R0, #0 
    /*00011dc4*/ BNE         VI_MODEL_CreatOneModel_x11dd4
    /*00011dc8*/ ADD         R5, R5, R6 
    /*00011dcc*/ STR         R0, [R5, #216]              @ 0xd8 
    /*00011dd0*/ POP         {R4, R5, R6, PC} 
    VI_MODEL_CreatOneModel_x11dd4:
    /*00011dd4*/ MVN         R0, #0 
    /*00011dd8*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_MODEL_CreatOneModel


FUNC_BEGIN VI_MODEL_DestroyOneModel
    /*00011ddc*/ PUSH        {R4, LR} 
    /*00011de0*/ MOV         R4, R0 
    /*00011de4*/ BL          0x0000000000011DE4          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00011de8*/ CMP         R0, #1 
    /*00011dec*/ BLS         VI_MODEL_DestroyOneModel_x11df8
    /*00011df0*/ MOV         R0, #0 
    /*00011df4*/ POP         {R4, PC} 
    VI_MODEL_DestroyOneModel_x11df8:
    /*00011df8*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00011dfc*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00011e00*/ MOV         R3, #96                     @ 0x60 
    /*00011e04*/ MLA         R0, R3, R4, R0 
    /*00011e08*/ ADD         R0, R0, #144                @ 0x90 
    /*00011e0c*/ BL          0x0000000000011E0C          @ VI_DRV_FreeModelBuf [R_ARM_CALL: .text+0x28d2c] 
    /*00011e10*/ MOV         R0, #0 
    /*00011e14*/ POP         {R4, PC} 
FUNC_END VI_MODEL_DestroyOneModel


FUNC_BEGIN VI_COMM_SetModelStatus
    /*00011e18*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00011e1c*/ MOV         LR, #72                     @ 0x48 
    /*00011e20*/ MOV         IP, #24 
    /*00011e24*/ MUL         R1, LR, R1 
    /*00011e28*/ MLA         R2, IP, R2, R1 
    /*00011e2c*/ STR         R3, [R0, R2] 
    /*00011e30*/ MOV         R0, #0 
    /*00011e34*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_COMM_SetModelStatus


FUNC_BEGIN VI_COMM_AddNodeWeight
    /*00011e38*/ CMP         R1, #0 
    /*00011e3c*/ BEQ         VI_COMM_AddNodeWeight_x11e5c
    /*00011e40*/ CMP         R1, #1 
    /*00011e44*/ MOVWEQ      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00011e48*/ MOVTEQ      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00011e4c*/ LDREQ       R2, [R3, #88]               @ 0x58 
    /*00011e50*/ ADDEQ       R0, R2, R0 
    /*00011e54*/ STREQ       R0, [R3, #88]               @ 0x58 
    /*00011e58*/ BX          LR 
    VI_COMM_AddNodeWeight_x11e5c:
    /*00011e5c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00011e60*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00011e64*/ LDR         R2, [R3, #80]               @ 0x50 
    /*00011e68*/ ADD         R0, R2, R0 
    /*00011e6c*/ STR         R0, [R3, #80]               @ 0x50 
    /*00011e70*/ BX          LR 
FUNC_END VI_COMM_AddNodeWeight


FUNC_BEGIN VI_COMM_SubNodeWeight
    /*00011e74*/ CMP         R1, #0 
    /*00011e78*/ BEQ         VI_COMM_SubNodeWeight_x11e98
    /*00011e7c*/ CMP         R1, #1 
    /*00011e80*/ MOVWEQ      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00011e84*/ MOVTEQ      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00011e88*/ LDREQ       R2, [R3, #88]               @ 0x58 
    /*00011e8c*/ SUBEQ       R0, R2, R0 
    /*00011e90*/ STREQ       R0, [R3, #88]               @ 0x58 
    /*00011e94*/ BX          LR 
    VI_COMM_SubNodeWeight_x11e98:
    /*00011e98*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00011e9c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00011ea0*/ LDR         R2, [R3, #80]               @ 0x50 
    /*00011ea4*/ SUB         R0, R2, R0 
    /*00011ea8*/ STR         R0, [R3, #80]               @ 0x50 
    /*00011eac*/ BX          LR 
FUNC_END VI_COMM_SubNodeWeight


FUNC_BEGIN VI_COMM_CreateOneNode
    /*00011eb0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00011eb4*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00011eb8*/ SUB         SP, SP, #20 
    /*00011ebc*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00011ec0*/ MOV         R5, R0 
    /*00011ec4*/ MOV         R8, R1 
    /*00011ec8*/ ADD         R0, R4, #824                @ 0x338 
    /*00011ecc*/ ADD         R1, SP, #12 
    /*00011ed0*/ BL          0x0000000000011ED0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011ed4*/ MOV         R0, R4 
    /*00011ed8*/ BL          0x0000000000011ED8          @ VI_NODE_NodeQueueGetFree [R_ARM_CALL: .text+0x1675c] 
    /*00011edc*/ ADD         R1, SP, #12 
    /*00011ee0*/ MOV         R7, R0 
    /*00011ee4*/ ADD         R0, R4, #824                @ 0x338 
    /*00011ee8*/ BL          0x0000000000011EE8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011eec*/ CMP         R7, #0 
    /*00011ef0*/ BEQ         VI_COMM_CreateOneNode_x1201c
    /*00011ef4*/ MOV         R6, #96                     @ 0x60 
    /*00011ef8*/ STR         R5, [R7] 
    /*00011efc*/ MUL         R6, R6, R5 
    /*00011f00*/ MOV         R9, #72                     @ 0x48 
    /*00011f04*/ MOV         SL, #1 
    /*00011f08*/ MOV         R0, R5 
    /*00011f0c*/ ADD         R3, R4, R6 
    /*00011f10*/ LDR         R2, [R3, #216]              @ 0xd8 
    /*00011f14*/ MLA         R3, R9, R2, R6 
    /*00011f18*/ STR         R2, [R7, #4] 
    /*00011f1c*/ ADD         R3, R4, R3 
    /*00011f20*/ STR         SL, [R3, #144]              @ 0x90 
    /*00011f24*/ BL          0x0000000000011F24          @ VI_DRV_NeedSplit [R_ARM_CALL: .text+0x2f638] 
    /*00011f28*/ CMP         R0, #0 
    /*00011f2c*/ BNE         VI_COMM_CreateOneNode_x11fa4
    /*00011f30*/ LDR         R3, [R7, #4] 
    /*00011f34*/ ADD         R1, R6, #144                @ 0x90 
    /*00011f38*/ STR         SL, [R7, #52]               @ 0x34 
    /*00011f3c*/ MOV         R0, R5 
    /*00011f40*/ MUL         R9, R9, R3 
    /*00011f44*/ ADD         R6, R9, R6 
    /*00011f48*/ ADD         R1, R1, R9 
    /*00011f4c*/ ADD         R6, R4, R6 
    /*00011f50*/ ADD         R1, R4, R1 
    /*00011f54*/ LDR         R3, [R6, #160]              @ 0xa0 
    /*00011f58*/ STR         R3, [R7, #40]               @ 0x28 
    /*00011f5c*/ LDRD        R2, [R6, #152]              @ 0x98 
    /*00011f60*/ STRD        R2, [R7, #16] 
    /*00011f64*/ BL          0x0000000000011F64          @ VI_DRV_SetSingleModelCfg [R_ARM_CALL: .text+0x2f440] 
    VI_COMM_CreateOneNode_x11f68:
    /*00011f68*/ MOV         R0, R5 
    /*00011f6c*/ BL          0x0000000000011F6C          @ VI_DRV_GetNodeWeight [R_ARM_CALL: .text+0x2f614] 
    /*00011f70*/ CMP         R8, #0 
    /*00011f74*/ STR         R0, [R7, #56]               @ 0x38 
    /*00011f78*/ BNE         VI_COMM_CreateOneNode_x12008
    /*00011f7c*/ LDR         R3, [R4, #80]               @ 0x50 
    /*00011f80*/ ADD         R0, R3, R0 
    /*00011f84*/ STR         R0, [R4, #80]               @ 0x50 
    VI_COMM_CreateOneNode_x11f88:
    /*00011f88*/ ADD         R5, R5, #132                @ 0x84 
    /*00011f8c*/ LDR         R3, [R4, R5, LSL #2] 
    /*00011f90*/ ADD         R3, R3, #1 
    /*00011f94*/ STR         R3, [R4, R5, LSL #2] 
    VI_COMM_CreateOneNode_x11f98:
    /*00011f98*/ MOV         R0, R7 
    /*00011f9c*/ ADD         SP, SP, #20 
    /*00011fa0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_COMM_CreateOneNode_x11fa4:
    /*00011fa4*/ MOV         R0, R5 
    /*00011fa8*/ BL          0x0000000000011FA8          @ VI_DRV_GetActualSplitNum [R_ARM_CALL: .text+0x30020] 
    /*00011fac*/ LDR         R2, [R7, #4] 
    /*00011fb0*/ CMP         R0, #0 
    /*00011fb4*/ STR         R0, [R7, #52]               @ 0x34 
    /*00011fb8*/ BEQ         VI_COMM_CreateOneNode_x11ff0
    /*00011fbc*/ MLA         R1, R9, R2, R6 
    /*00011fc0*/ ADD         R3, R0, #10 
    /*00011fc4*/ ADD         IP, R7, #40                 @ 0x28 
    /*00011fc8*/ ADD         LR, R7, #16 
    /*00011fcc*/ ADD         R3, R7, R3, LSL #2 
    /*00011fd0*/ ADD         R1, R4, R1 
    VI_COMM_CreateOneNode_x11fd4:
    /*00011fd4*/ LDR         R9, [R1, #160]              @ 0xa0 
    /*00011fd8*/ ADD         R1, R1, #24 
    /*00011fdc*/ STR         R9, [IP], #4 
    /*00011fe0*/ CMP         IP, R3 
    /*00011fe4*/ LDRD        SL, [R1, #128]              @ 0x80 
    /*00011fe8*/ STRD        SL, [LR], #8 
    /*00011fec*/ BNE         VI_COMM_CreateOneNode_x11fd4
    VI_COMM_CreateOneNode_x11ff0:
    /*00011ff0*/ ADD         R1, R6, #144                @ 0x90 
    /*00011ff4*/ MOV         R3, R0 
    /*00011ff8*/ ADD         R1, R4, R1 
    /*00011ffc*/ MOV         R0, R5 
    /*00012000*/ BL          0x0000000000012000          @ VI_DRV_SetSplitModelCfg [R_ARM_CALL: .text+0x2ef94] 
    /*00012004*/ B           VI_COMM_CreateOneNode_x11f68
    VI_COMM_CreateOneNode_x12008:
    /*00012008*/ CMP         R8, #1 
    /*0001200c*/ LDREQ       R3, [R4, #88]               @ 0x58 
    /*00012010*/ ADDEQ       R0, R3, R0 
    /*00012014*/ STREQ       R0, [R4, #88]               @ 0x58 
    /*00012018*/ B           VI_COMM_CreateOneNode_x11f88
    VI_COMM_CreateOneNode_x1201c:
    /*0001201c*/ MOV         R3, #380                    @ 0x17c 
    /*00012020*/ STR         R5, [SP, #4] 
    /*00012024*/ STR         R3, [SP] 
    /*00012028*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5590] 
    /*0001202c*/ LDR         R3, [PC, #16]               @ 0x0000000000012044 
    /*00012030*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5590] 
    /*00012034*/ MOV         R1, #16 
    /*00012038*/ MOV         R0, #3 
    /*0001203c*/ BL          0x000000000001203C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012040*/ B           VI_COMM_CreateOneNode_x11f98
    /*00012044*/ @           <UNDEFINED> instruction: 0x000009b8 
FUNC_END VI_COMM_CreateOneNode


FUNC_BEGIN VI_COMM_NodeGetWaitNum
    /*00012048*/ CMP         R1, #0 
    /*0001204c*/ BEQ         VI_COMM_NodeGetWaitNum_x12060
    /*00012050*/ CMP         R1, #1 
    /*00012054*/ BEQ         VI_COMM_NodeGetWaitNum_x12064
    /*00012058*/ MOV         R0, #0 
    /*0001205c*/ BX          LR 
    VI_COMM_NodeGetWaitNum_x12060:
    /*00012060*/ B           VI_COMM_NodeGetWaitNum_x12060@ VI_NODE_GetViOfflineVpssOfflineWaitNum [R_ARM_JUMP24: .text+0x16b8c] 
    VI_COMM_NodeGetWaitNum_x12064:
    /*00012064*/ B           VI_COMM_NodeGetWaitNum_x12064@ VI_NODE_GetViOfflineVpssOnlineWaitNum [R_ARM_JUMP24: .text+0x16bc4] 
FUNC_END VI_COMM_NodeGetWaitNum


FUNC_BEGIN VI_COMM_NodeGetWait
    /*00012068*/ CMP         R1, #0 
    /*0001206c*/ BEQ         VI_COMM_NodeGetWait_x12084
    /*00012070*/ CMP         R1, #1 
    /*00012074*/ BNE         VI_COMM_NodeGetWait_x1207c
    VI_COMM_NodeGetWait_x12078:
    /*00012078*/ B           VI_COMM_NodeGetWait_x12078  @ VI_NODE_NodeQueueGetViOfflineVpssOnlineWait [R_ARM_JUMP24: .text+0x16a68] 
    VI_COMM_NodeGetWait_x1207c:
    /*0001207c*/ MOV         R0, #0 
    /*00012080*/ BX          LR 
    VI_COMM_NodeGetWait_x12084:
    /*00012084*/ B           VI_COMM_NodeGetWait_x12084  @ VI_NODE_NodeQueueGetViOfflineVpssOfflineWait [R_ARM_JUMP24: .text+0x169d8] 
FUNC_END VI_COMM_NodeGetWait


FUNC_BEGIN VI_COMM_StartWaitList
    /*00012088*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001208c*/ ADD         R3, R0, #18 
    /*00012090*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00012094*/ SUBS        FP, R1, #0 
    /*00012098*/ MOV         IP, R3 
    /*0001209c*/ STR         R3, [SP, #32] 
    /*000120a0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*000120a4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*000120a8*/ STR         R3, [SP, #28] 
    /*000120ac*/ STR         R0, [SP, #12] 
    /*000120b0*/ MOV         R2, R3 
    /*000120b4*/ ADD         R3, R3, IP, LSL #2 
    /*000120b8*/ LDR         R3, [R3, #4] 
    /*000120bc*/ STR         R3, [SP, #16] 
    /*000120c0*/ BNE         VI_COMM_StartWaitList_x12368
    /*000120c4*/ LDR         R3, [R2, #556]              @ 0x22c 
    /*000120c8*/ CMP         R0, R3 
    /*000120cc*/ STRNE       FP, [SP, #20] 
    /*000120d0*/ BEQ         VI_COMM_StartWaitList_x12540
    VI_COMM_StartWaitList_x120d4:
    /*000120d4*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*000120d8*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*000120dc*/ MOV         R3, #0 
    /*000120e0*/ STR         R3, [SP, #24] 
    /*000120e4*/ MOV         R8, R3 
    /*000120e8*/ MOV         R5, R3 
    /*000120ec*/ MOV         SL, R3 
    /*000120f0*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55cc] 
    /*000120f4*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55cc] 
    /*000120f8*/ STR         R3, [SP, #36]               @ 0x24 
    VI_COMM_StartWaitList_x120fc:
    /*000120fc*/ MOV         R1, FP 
    /*00012100*/ MOV         R0, R9 
    /*00012104*/ BL          0x0000000000012104          @ VI_COMM_NodeGetWaitNum [R_ARM_CALL: .text+0x12048] 
    /*00012108*/ CMP         R0, #0 
    /*0001210c*/ BEQ         VI_COMM_StartWaitList_x1224c
    /*00012110*/ MOV         R1, FP 
    /*00012114*/ MOV         R0, R9 
    /*00012118*/ BL          0x0000000000012118          @ VI_COMM_NodeGetWait [R_ARM_CALL: .text+0x12068] 
    /*0001211c*/ SUBS        R4, R0, #0 
    /*00012120*/ BEQ         VI_COMM_StartWaitList_x12230
    VI_COMM_StartWaitList_x12124:
    /*00012124*/ LDR         R3, [R4, #52]               @ 0x34 
    /*00012128*/ CMP         R3, #3 
    /*0001212c*/ BHI         VI_COMM_StartWaitList_x12210
    VI_COMM_StartWaitList_x12130:
    /*00012130*/ LDR         IP, [R4, #56]               @ 0x38 
    /*00012134*/ MOV         R3, R4 
    /*00012138*/ LDR         R2, [SP, #16] 
    /*0001213c*/ MOV         R0, R9 
    /*00012140*/ LDR         R1, [SP, #12] 
    /*00012144*/ ADD         SL, SL, IP 
    /*00012148*/ BL          0x0000000000012148          @ VI_NODE_NodeQueuePutBusy [R_ARM_CALL: .text+0x167ec] 
    /*0001214c*/ CMP         R5, #0 
    /*00012150*/ STREQ       R4, [SP, #24] 
    /*00012154*/ BEQ         VI_COMM_StartWaitList_x12178
    /*00012158*/ LDR         R1, [R5, #52]               @ 0x34 
    /*0001215c*/ MOV         R6, R4 
    /*00012160*/ LDRD        R2, [R6, #16]! 
    /*00012164*/ ADD         R1, R1, #9 
    /*00012168*/ LDR         R0, [R5, R1, LSL #2] 
    /*0001216c*/ BL          0x000000000001216C          @ VI_HAL_SetNext [R_ARM_CALL: .text+0x3521c] 
    /*00012170*/ CMP         R6, #0 
    /*00012174*/ BEQ         VI_COMM_StartWaitList_x12348
    VI_COMM_StartWaitList_x12178:
    /*00012178*/ LDR         R2, [R4, #52]               @ 0x34 
    /*0001217c*/ CMP         R2, #0 
    /*00012180*/ BEQ         VI_COMM_StartWaitList_x121fc
    /*00012184*/ MOV         R1, R8 
    /*00012188*/ LDR         R0, [R4, #40]               @ 0x28 
    /*0001218c*/ STR         R8, [R4, #8] 
    /*00012190*/ ADD         R7, R4, #24 
    /*00012194*/ BL          0x0000000000012194          @ VI_HAL_SetNodeID [R_ARM_CALL: .text+0x35224] 
    /*00012198*/ MOV         R1, #6 
    /*0001219c*/ LDR         R0, [R4, #40]               @ 0x28 
    /*000121a0*/ ADD         R6, R4, #40                 @ 0x28 
    /*000121a4*/ BL          0x00000000000121A4          @ VI_HAL_SetMask [R_ARM_CALL: .text+0x3522c] 
    /*000121a8*/ MOV         R5, #1 
    VI_COMM_StartWaitList_x121ac:
    /*000121ac*/ LDR         R2, [R4, #52]               @ 0x34 
    /*000121b0*/ ADD         R3, R8, R5 
    /*000121b4*/ CMP         R2, R5 
    /*000121b8*/ MOV         R1, R3 
    /*000121bc*/ BLS         VI_COMM_StartWaitList_x121f8
    /*000121c0*/ STR         R3, [R4, #8] 
    /*000121c4*/ LDR         R0, [R6, #4] 
    /*000121c8*/ BL          0x00000000000121C8          @ VI_HAL_SetNodeID [R_ARM_CALL: .text+0x35224] 
    /*000121cc*/ MOV         R1, #6 
    /*000121d0*/ LDR         R0, [R6, #4]! 
    /*000121d4*/ BL          0x00000000000121D4          @ VI_HAL_SetMask [R_ARM_CALL: .text+0x3522c] 
    /*000121d8*/ CMP         R5, #0 
    /*000121dc*/ ADD         R5, R5, #1 
    /*000121e0*/ BEQ         VI_COMM_StartWaitList_x121f0
    /*000121e4*/ LDRD        R2, [R7] 
    /*000121e8*/ LDR         R0, [R6, #-4] 
    /*000121ec*/ BL          0x00000000000121EC          @ VI_HAL_SetNext [R_ARM_CALL: .text+0x3521c] 
    VI_COMM_StartWaitList_x121f0:
    /*000121f0*/ ADD         R7, R7, #8 
    /*000121f4*/ B           VI_COMM_StartWaitList_x121ac
    VI_COMM_StartWaitList_x121f8:
    /*000121f8*/ MOV         R8, R3 
    VI_COMM_StartWaitList_x121fc:
    /*000121fc*/ LDR         R3, [SP, #20] 
    /*00012200*/ CMP         R3, SL 
    /*00012204*/ BLS         VI_COMM_StartWaitList_x1243c
    /*00012208*/ MOV         R5, R4 
    /*0001220c*/ B           VI_COMM_StartWaitList_x120fc
    VI_COMM_StartWaitList_x12210:
    /*00012210*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5624] 
    /*00012214*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55e4] 
    /*00012218*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5624] 
    /*0001221c*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55e4] 
    /*00012220*/ MOVW        R2, #505                    @ 0x1f9 
    /*00012224*/ LDR         R1, [PC, #928]              @ 0x00000000000125cc 
    /*00012228*/ BL          0x0000000000012228          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001222c*/ B           VI_COMM_StartWaitList_x12130
    VI_COMM_StartWaitList_x12230:
    /*00012230*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55e4] 
    /*00012234*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00012238*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55e4] 
    /*0001223c*/ MOV         R2, #504                    @ 0x1f8 
    /*00012240*/ LDR         R1, [PC, #900]              @ 0x00000000000125cc 
    /*00012244*/ BL          0x0000000000012244          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00012248*/ B           VI_COMM_StartWaitList_x12124
    VI_COMM_StartWaitList_x1224c:
    /*0001224c*/ CMP         R5, #0 
    /*00012250*/ MOV         R4, R0 
    /*00012254*/ MOVEQ       R0, R5 
    /*00012258*/ BEQ         VI_COMM_StartWaitList_x12340
    /*0001225c*/ LDR         R3, [R5, #52]               @ 0x34 
    /*00012260*/ MOV         R1, #6 
    /*00012264*/ ADD         R3, R3, #9 
    /*00012268*/ LDR         R0, [R5, R3, LSL #2] 
    /*0001226c*/ BL          0x000000000001226C          @ VI_HAL_SetMask [R_ARM_CALL: .text+0x3522c] 
    /*00012270*/ LDR         R1, [R5, #52]               @ 0x34 
    /*00012274*/ MOV         R2, #0 
    /*00012278*/ MOV         R3, #0 
    /*0001227c*/ ADD         R1, R1, #9 
    /*00012280*/ LDR         R0, [R5, R1, LSL #2] 
    /*00012284*/ BL          0x0000000000012284          @ VI_HAL_SetNext [R_ARM_CALL: .text+0x3521c] 
    /*00012288*/ LDR         R6, [SP, #12] 
    /*0001228c*/ LDR         R3, [SP, #28] 
    /*00012290*/ MOV         R1, #1 
    /*00012294*/ LDR         R2, [SP, #32] 
    /*00012298*/ MOV         R0, R6 
    /*0001229c*/ STR         R5, [R3, R2, LSL #2] 
    /*000122a0*/ BL          0x00000000000122A0          @ VI_DRV_ProcClkEnable [R_ARM_CALL: .text+0x2578c] 
    /*000122a4*/ MOV         R1, R4 
    /*000122a8*/ MOV         R0, R6 
    /*000122ac*/ BL          0x00000000000122AC          @ VI_DRV_ProcReset [R_ARM_CALL: .text+0x257c8] 
    /*000122b0*/ MOV         R0, R6 
    /*000122b4*/ BL          0x00000000000122B4          @ VI_DRV_ProcAbolishReset [R_ARM_CALL: .text+0x27c90] 
    /*000122b8*/ CMP         FP, #1 
    /*000122bc*/ BEQ         VI_COMM_StartWaitList_x12568
    /*000122c0*/ MOV         R0, #2 
    /*000122c4*/ LDR         R5, [SP, #12] 
    /*000122c8*/ BL          0x00000000000122C8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000122cc*/ LSL         R6, R5, #8 
    /*000122d0*/ LDR         R3, [R0] 
    /*000122d4*/ BLX         R3 
    /*000122d8*/ LDR         R3, [SP, #28] 
    /*000122dc*/ LDR         R2, [SP, #24] 
    /*000122e0*/ ADD         R3, R3, R6 
    /*000122e4*/ ADD         R3, R3, #720                @ 0x2d0 
    /*000122e8*/ CMP         R2, #0 
    /*000122ec*/ STRD        R0, [R3] 
    /*000122f0*/ BEQ         VI_COMM_StartWaitList_x124f0
    /*000122f4*/ LDRD        R2, [R2, #16] 
    /*000122f8*/ MOV         R0, R5 
    /*000122fc*/ STR         R4, [SP] 
    /*00012300*/ BL          0x0000000000012300          @ VI_HAL_Start [R_ARM_CALL: .text+0x35280] 
    /*00012304*/ CMP         R0, #0 
    /*00012308*/ BNE         VI_COMM_StartWaitList_x123fc
    VI_COMM_StartWaitList_x1230c:
    /*0001230c*/ CMP         FP, #0 
    /*00012310*/ BNE         VI_COMM_StartWaitList_x12420
    VI_COMM_StartWaitList_x12314:
    /*00012314*/ LDR         R2, [SP, #28] 
    /*00012318*/ LDR         R3, [R2, #80]               @ 0x50 
    /*0001231c*/ SUB         SL, R3, SL 
    /*00012320*/ STR         SL, [R2, #80]               @ 0x50 
    VI_COMM_StartWaitList_x12324:
    /*00012324*/ LDR         R3, [SP, #28] 
    /*00012328*/ ADD         R3, R3, R6 
    /*0001232c*/ ADD         R3, R3, #568                @ 0x238 
    /*00012330*/ LDRD        R4, [R3] 
    /*00012334*/ ADDS        R4, R4, #1 
    /*00012338*/ ADC         R5, R5, #0 
    /*0001233c*/ STRD        R4, [R3] 
    VI_COMM_StartWaitList_x12340:
    /*00012340*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00012344*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_COMM_StartWaitList_x12348:
    /*00012348*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5650] 
    /*0001234c*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55e4] 
    /*00012350*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5650] 
    /*00012354*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55e4] 
    /*00012358*/ MOVW        R2, #519                    @ 0x207 
    /*0001235c*/ LDR         R1, [PC, #616]              @ 0x00000000000125cc 
    /*00012360*/ BL          0x0000000000012360          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00012364*/ B           VI_COMM_StartWaitList_x12178
    VI_COMM_StartWaitList_x12368:
    /*00012368*/ CMP         FP, #1 
    /*0001236c*/ BEQ         VI_COMM_StartWaitList_x12504
    VI_COMM_StartWaitList_x12370:
    /*00012370*/ MOV         R3, #0 
    /*00012374*/ STR         R3, [SP, #20] 
    /*00012378*/ B           VI_COMM_StartWaitList_x120d4
    VI_COMM_StartWaitList_x1237c:
    /*0001237c*/ MOV         R0, #7 
    /*00012380*/ BL          0x0000000000012380          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00012384*/ LDR         R3, [R0, #16] 
    /*00012388*/ CMP         R3, #0 
    /*0001238c*/ BEQ         VI_COMM_StartWaitList_x123a4
    /*00012390*/ MOV         R0, #7 
    /*00012394*/ BL          0x0000000000012394          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00012398*/ LDR         R3, [R0, #16] 
    /*0001239c*/ LDR         R0, [SP, #12] 
    /*000123a0*/ BLX         R3 
    VI_COMM_StartWaitList_x123a4:
    /*000123a4*/ LDR         R3, [SP, #12] 
    /*000123a8*/ MOV         R0, #2 
    /*000123ac*/ LSL         R6, R3, #8 
    /*000123b0*/ BL          0x00000000000123B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000123b4*/ LDR         R3, [R0] 
    /*000123b8*/ BLX         R3 
    /*000123bc*/ LDR         R3, [SP, #28] 
    /*000123c0*/ LDR         R2, [SP, #24] 
    /*000123c4*/ ADD         R3, R3, R6 
    /*000123c8*/ CMP         R2, #0 
    /*000123cc*/ ADD         R3, R3, #720                @ 0x2d0 
    /*000123d0*/ STRD        R0, [R3] 
    /*000123d4*/ MOVEQ       R0, R2 
    /*000123d8*/ BEQ         VI_COMM_StartWaitList_x12428
    VI_COMM_StartWaitList_x123dc:
    /*000123dc*/ LDR         R3, [SP, #24] 
    /*000123e0*/ MOV         R1, #0 
    /*000123e4*/ LDR         R0, [SP, #12] 
    /*000123e8*/ LDRD        R2, [R3, #16] 
    /*000123ec*/ STR         R1, [SP] 
    /*000123f0*/ BL          0x00000000000123F0          @ VI_HAL_Start [R_ARM_CALL: .text+0x35280] 
    /*000123f4*/ CMP         R0, #0 
    /*000123f8*/ BEQ         VI_COMM_StartWaitList_x12428
    VI_COMM_StartWaitList_x123fc:
    /*000123fc*/ LDR         R3, [SP, #28] 
    /*00012400*/ ADD         R1, R3, R6 
    /*00012404*/ ADD         R1, R1, #616                @ 0x268 
    /*00012408*/ LDRD        R2, [R1] 
    /*0001240c*/ ADDS        R2, R2, #1 
    /*00012410*/ ADC         R3, R3, #0 
    /*00012414*/ CMP         FP, #0 
    /*00012418*/ STRD        R2, [R1] 
    /*0001241c*/ BEQ         VI_COMM_StartWaitList_x12314
    VI_COMM_StartWaitList_x12420:
    /*00012420*/ CMP         FP, #1 
    /*00012424*/ BNE         VI_COMM_StartWaitList_x12324
    VI_COMM_StartWaitList_x12428:
    /*00012428*/ LDR         R2, [SP, #28] 
    /*0001242c*/ LDR         R3, [R2, #88]               @ 0x58 
    /*00012430*/ SUB         SL, R3, SL 
    /*00012434*/ STR         SL, [R2, #88]               @ 0x58 
    /*00012438*/ B           VI_COMM_StartWaitList_x12324
    VI_COMM_StartWaitList_x1243c:
    /*0001243c*/ ADD         R2, R2, #9 
    /*00012440*/ MOV         R1, #6 
    /*00012444*/ LDR         R0, [R4, R2, LSL #2] 
    /*00012448*/ BL          0x0000000000012448          @ VI_HAL_SetMask [R_ARM_CALL: .text+0x3522c] 
    /*0001244c*/ LDR         R1, [R4, #52]               @ 0x34 
    /*00012450*/ MOV         R2, #0 
    /*00012454*/ MOV         R3, #0 
    /*00012458*/ ADD         R1, R1, #9 
    /*0001245c*/ LDR         R0, [R4, R1, LSL #2] 
    /*00012460*/ BL          0x0000000000012460          @ VI_HAL_SetNext [R_ARM_CALL: .text+0x3521c] 
    /*00012464*/ LDR         R5, [SP, #12] 
    /*00012468*/ LDR         R3, [SP, #28] 
    /*0001246c*/ MOV         R1, #1 
    /*00012470*/ LDR         R2, [SP, #32] 
    /*00012474*/ MOV         R0, R5 
    /*00012478*/ STR         R4, [R3, R2, LSL #2] 
    /*0001247c*/ BL          0x000000000001247C          @ VI_DRV_ProcClkEnable [R_ARM_CALL: .text+0x2578c] 
    /*00012480*/ MOV         R1, #0 
    /*00012484*/ MOV         R0, R5 
    /*00012488*/ BL          0x0000000000012488          @ VI_DRV_ProcReset [R_ARM_CALL: .text+0x257c8] 
    /*0001248c*/ MOV         R0, R5 
    /*00012490*/ BL          0x0000000000012490          @ VI_DRV_ProcAbolishReset [R_ARM_CALL: .text+0x27c90] 
    /*00012494*/ CMP         FP, #1 
    /*00012498*/ BEQ         VI_COMM_StartWaitList_x1237c
    /*0001249c*/ MOV         R0, #2 
    /*000124a0*/ LDR         R4, [SP, #12] 
    /*000124a4*/ BL          0x00000000000124A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000124a8*/ LSL         R6, R4, #8 
    /*000124ac*/ LDR         R3, [R0] 
    /*000124b0*/ BLX         R3 
    /*000124b4*/ LDR         R3, [SP, #28] 
    /*000124b8*/ LDR         R2, [SP, #24] 
    /*000124bc*/ ADD         R3, R3, R6 
    /*000124c0*/ ADD         R3, R3, #720                @ 0x2d0 
    /*000124c4*/ CMP         R2, #0 
    /*000124c8*/ STRD        R0, [R3] 
    /*000124cc*/ BEQ         VI_COMM_StartWaitList_x124f0
    /*000124d0*/ LDRD        R2, [R2, #16] 
    /*000124d4*/ MOV         R1, #0 
    /*000124d8*/ MOV         R0, R4 
    /*000124dc*/ STR         R1, [SP] 
    /*000124e0*/ BL          0x00000000000124E0          @ VI_HAL_Start [R_ARM_CALL: .text+0x35280] 
    /*000124e4*/ CMP         R0, #0 
    /*000124e8*/ BEQ         VI_COMM_StartWaitList_x1230c
    /*000124ec*/ B           VI_COMM_StartWaitList_x123fc
    VI_COMM_StartWaitList_x124f0:
    /*000124f0*/ CMP         FP, #0 
    /*000124f4*/ LDRNE       R0, [SP, #24] 
    /*000124f8*/ BNE         VI_COMM_StartWaitList_x12324
    /*000124fc*/ MOV         R0, FP 
    /*00012500*/ B           VI_COMM_StartWaitList_x12314
    VI_COMM_StartWaitList_x12504:
    /*00012504*/ LDR         R3, [SP, #28] 
    /*00012508*/ LDR         R2, [SP, #12] 
    /*0001250c*/ LDR         R3, [R3, #560]              @ 0x230 
    /*00012510*/ CMP         R2, R3 
    /*00012514*/ BNE         VI_COMM_StartWaitList_x12370
    /*00012518*/ LDR         R4, [SP, #28] 
    /*0001251c*/ MOV         R2, #1000                   @ 0x3e8 
    /*00012520*/ STR         R2, [SP, #20] 
    /*00012524*/ LDR         R1, [R4, #552]              @ 0x228 
    /*00012528*/ LDR         R0, [R4, #88]               @ 0x58 
    /*0001252c*/ ADD         R0, R1, R0 
    /*00012530*/ SUB         R0, R0, #1 
    /*00012534*/ BL          0x0000000000012534          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00012538*/ STR         R0, [R4, #92]               @ 0x5c 
    /*0001253c*/ B           VI_COMM_StartWaitList_x120d4
    VI_COMM_StartWaitList_x12540:
    /*00012540*/ LDR         R4, [SP, #28] 
    /*00012544*/ LDR         R1, [R4, #548]              @ 0x224 
    /*00012548*/ LDR         R0, [R4, #80]               @ 0x50 
    /*0001254c*/ ADD         R0, R1, R0 
    /*00012550*/ SUB         R0, R0, #1 
    /*00012554*/ BL          0x0000000000012554          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00012558*/ MOV         R3, R4 
    /*0001255c*/ STR         R0, [SP, #20] 
    /*00012560*/ STR         R0, [R3, #84]               @ 0x54 
    /*00012564*/ B           VI_COMM_StartWaitList_x120d4
    VI_COMM_StartWaitList_x12568:
    /*00012568*/ MOV         R0, #7 
    /*0001256c*/ BL          0x000000000001256C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00012570*/ LDR         R3, [R0, #16] 
    /*00012574*/ CMP         R3, #0 
    /*00012578*/ BEQ         VI_COMM_StartWaitList_x12590
    /*0001257c*/ MOV         R0, #7 
    /*00012580*/ BL          0x0000000000012580          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00012584*/ LDR         R3, [R0, #16] 
    /*00012588*/ LDR         R0, [SP, #12] 
    /*0001258c*/ BLX         R3 
    VI_COMM_StartWaitList_x12590:
    /*00012590*/ LDR         R3, [SP, #12] 
    /*00012594*/ MOV         R0, #2 
    /*00012598*/ LSL         R6, R3, #8 
    /*0001259c*/ BL          0x000000000001259C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000125a0*/ LDR         R3, [R0] 
    /*000125a4*/ BLX         R3 
    /*000125a8*/ LDR         R3, [SP, #28] 
    /*000125ac*/ LDR         R2, [SP, #24] 
    /*000125b0*/ ADD         R3, R3, R6 
    /*000125b4*/ ADD         R3, R3, #720                @ 0x2d0 
    /*000125b8*/ CMP         R2, #0 
    /*000125bc*/ STRD        R0, [R3] 
    /*000125c0*/ BNE         VI_COMM_StartWaitList_x123dc
    /*000125c4*/ LDR         R0, [SP, #24] 
    /*000125c8*/ B           VI_COMM_StartWaitList_x12428
    /*000125cc*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VI_COMM_StartWaitList


FUNC_BEGIN VI_COMM_NodeQueuePutWait
    /*000125d0*/ CMP         R2, #0 
    /*000125d4*/ BEQ         VI_COMM_NodeQueuePutWait_x125e4
    /*000125d8*/ CMP         R2, #1 
    /*000125dc*/ BXNE        LR 
    VI_COMM_NodeQueuePutWait_x125e0:
    /*000125e0*/ B           VI_COMM_NodeQueuePutWait_x125e0@ VI_NODE_NodeQueuePutViOfflineVpssOnlineWait [R_ARM_JUMP24: .text+0x1697c] 
    VI_COMM_NodeQueuePutWait_x125e4:
    /*000125e4*/ B           VI_COMM_NodeQueuePutWait_x125e4@ VI_NODE_NodeQueuePutViOfflineVpssOfflineWait [R_ARM_JUMP24: .text+0x16920] 
FUNC_END VI_COMM_NodeQueuePutWait


FUNC_BEGIN VI_COMM_SubmitOneNode
    /*000125e8*/ PUSH        {R4, R5, R6, LR} 
    /*000125ec*/ SUBS        R6, R0, #0 
    /*000125f0*/ SUB         SP, SP, #8 
    /*000125f4*/ MOV         R5, R1 
    /*000125f8*/ BEQ         VI_COMM_SubmitOneNode_x12670
    VI_COMM_SubmitOneNode_x125fc:
    /*000125fc*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00012600*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00012604*/ ADD         R0, R4, #824                @ 0x338 
    /*00012608*/ ADD         R1, SP, #4 
    /*0001260c*/ BL          0x000000000001260C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00012610*/ MOV         R2, R5 
    /*00012614*/ MOV         R1, R6 
    /*00012618*/ MOV         R0, R4 
    /*0001261c*/ BL          0x000000000001261C          @ VI_COMM_NodeQueuePutWait [R_ARM_CALL: .text+0x125d0] 
    /*00012620*/ MOV         R1, R5 
    /*00012624*/ MOV         R0, #0 
    /*00012628*/ BL          0x0000000000012628          @ VI_DRV_IsProcModeSuitable [R_ARM_CALL: .text+0x27224] 
    /*0001262c*/ CMP         R0, #0 
    /*00012630*/ BNE         VI_COMM_SubmitOneNode_x1264c
    VI_COMM_SubmitOneNode_x12634:
    /*00012634*/ ADD         R1, SP, #4 
    /*00012638*/ LDR         R0, [PC, #80]               @ 0x0000000000012690 
    /*0001263c*/ BL          0x000000000001263C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012640*/ MOV         R0, #0 
    /*00012644*/ ADD         SP, SP, #8 
    /*00012648*/ POP         {R4, R5, R6, PC} 
    VI_COMM_SubmitOneNode_x1264c:
    /*0001264c*/ LDR         R2, [R4, #76]               @ 0x4c 
    /*00012650*/ MOV         R0, R4 
    /*00012654*/ MOV         R1, #0 
    /*00012658*/ BL          0x0000000000012658          @ VI_NODE_GetBusyNum [R_ARM_CALL: .text+0x16bfc] 
    /*0001265c*/ CMP         R0, #0 
    /*00012660*/ BNE         VI_COMM_SubmitOneNode_x12634
    /*00012664*/ MOV         R1, R5 
    /*00012668*/ BL          0x0000000000012668          @ VI_COMM_StartWaitList [R_ARM_CALL: .text+0x12088] 
    /*0001266c*/ B           VI_COMM_SubmitOneNode_x12634
    VI_COMM_SubmitOneNode_x12670:
    /*00012670*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x566c] 
    /*00012674*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55e4] 
    /*00012678*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x566c] 
    /*0001267c*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55e4] 
    /*00012680*/ MOVW        R2, #651                    @ 0x28b 
    /*00012684*/ LDR         R1, [PC, #8]                @ 0x0000000000012694 
    /*00012688*/ BL          0x0000000000012688          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001268c*/ B           VI_COMM_SubmitOneNode_x125fc
    /*00012690*/ MULEQ       R0, R8, R7 
    /*00012694*/ ANDEQ       R0, R0, R8, ROR #19 
FUNC_END VI_COMM_SubmitOneNode


FUNC_BEGIN VI_COMM_HalNodeProc
    /*00012698*/ PUSH        {R4, R5, R6, LR} 
    /*0001269c*/ SUBS        R4, R0, #0 
    /*000126a0*/ MOV         R5, R1 
    /*000126a4*/ MOV         R6, R2 
    /*000126a8*/ BEQ         VI_COMM_HalNodeProc_x126c4
    VI_COMM_HalNodeProc_x126ac:
    /*000126ac*/ MOV         R2, R6 
    /*000126b0*/ MOV         R1, R5 
    /*000126b4*/ LDR         R0, [R4] 
    /*000126b8*/ BL          0x00000000000126B8          @ VI_ProcOfflineIrqRoute [R_ARM_CALL: .text+0x2eb4] 
    /*000126bc*/ MOV         R0, #0 
    /*000126c0*/ POP         {R4, R5, R6, PC} 
    VI_COMM_HalNodeProc_x126c4:
    /*000126c4*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5680] 
    /*000126c8*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55e4] 
    /*000126cc*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5680] 
    /*000126d0*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55e4] 
    /*000126d4*/ MOVW        R2, #678                    @ 0x2a6 
    /*000126d8*/ LDR         R1, [PC, #4]                @ 0x00000000000126e4 
    /*000126dc*/ BL          0x00000000000126DC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000126e0*/ B           VI_COMM_HalNodeProc_x126ac
    /*000126e4*/ ANDEQ       R0, R0, R0, LSL #20 
FUNC_END VI_COMM_HalNodeProc


FUNC_BEGIN VI_COMM_ProcListTaskIrqRoute
    /*000126e8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000126ec*/ ADD         R8, R0, #18 
    /*000126f0*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*000126f4*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*000126f8*/ SUB         SP, SP, #8 
    /*000126fc*/ MOV         R6, R0 
    /*00012700*/ ADD         R8, R7, R8, LSL #2 
    /*00012704*/ ADD         R5, R7, #824                @ 0x338 
    /*00012708*/ MOV         SL, R1 
    /*0001270c*/ MOV         R9, R2 
    /*00012710*/ B           VI_COMM_ProcListTaskIrqRoute_x12784
    VI_COMM_ProcListTaskIrqRoute_x12714:
    /*00012714*/ BL          0x0000000000012714          @ VI_NODE_NodeQueueGetBusy [R_ARM_CALL: .text+0x1686c] 
    /*00012718*/ ADD         R1, SP, #4 
    /*0001271c*/ MOV         R4, R0 
    /*00012720*/ MOV         R0, R5 
    /*00012724*/ BL          0x0000000000012724          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012728*/ MOV         R2, R9 
    /*0001272c*/ MOV         R1, SL 
    /*00012730*/ MOV         R0, R4 
    /*00012734*/ BL          0x0000000000012734          @ VI_COMM_HalNodeProc [R_ARM_CALL: .text+0x12698] 
    /*00012738*/ ADD         R1, SP, #4 
    /*0001273c*/ MOV         R0, R5 
    /*00012740*/ BL          0x0000000000012740          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00012744*/ MOV         R1, R4 
    /*00012748*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*0001274c*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00012750*/ BL          0x0000000000012750          @ VI_NODE_NodeQueuePutFree [R_ARM_CALL: .text+0x16af8] 
    /*00012754*/ ADD         R1, SP, #4 
    /*00012758*/ MOV         R0, R5 
    /*0001275c*/ BL          0x000000000001275C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012760*/ LDR         IP, [R4] 
    /*00012764*/ LDR         R3, [R4, #4] 
    /*00012768*/ MOV         R2, #96                     @ 0x60 
    /*0001276c*/ MOV         R0, #72                     @ 0x48 
    /*00012770*/ MOV         R1, #0 
    /*00012774*/ MUL         R2, R2, IP 
    /*00012778*/ MLA         R3, R0, R3, R2 
    /*0001277c*/ ADD         R3, R7, R3 
    /*00012780*/ STR         R1, [R3, #144]              @ 0x90 
    VI_COMM_ProcListTaskIrqRoute_x12784:
    /*00012784*/ ADD         R1, SP, #4 
    /*00012788*/ MOV         R0, R5 
    /*0001278c*/ BL          0x000000000001278C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00012790*/ LDR         R4, [R8, #4] 
    /*00012794*/ MOV         R1, R6 
    /*00012798*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*0001279c*/ CLZ         R4, R4 
    /*000127a0*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*000127a4*/ LSR         R4, R4, #5 
    /*000127a8*/ MOV         R2, R4 
    /*000127ac*/ BL          0x00000000000127AC          @ VI_NODE_GetBusyNum [R_ARM_CALL: .text+0x16bfc] 
    /*000127b0*/ MOV         R2, R4 
    /*000127b4*/ MOV         R1, R6 
    /*000127b8*/ SUBS        R4, R0, #0 
    /*000127bc*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*000127c0*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*000127c4*/ BNE         VI_COMM_ProcListTaskIrqRoute_x12714
    /*000127c8*/ ADD         R1, SP, #4 
    /*000127cc*/ LDR         R0, [PC, #12]               @ 0x00000000000127e0 
    /*000127d0*/ BL          0x00000000000127D0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000127d4*/ MOV         R0, R4 
    /*000127d8*/ ADD         SP, SP, #8 
    /*000127dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*000127e0*/ MULEQ       R0, R8, R7 
FUNC_END VI_COMM_ProcListTaskIrqRoute


FUNC_BEGIN VI_COMM_VIOffLineVPSSOffLineIrqRoute
    /*000127e4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000127e8*/ MOV         R6, R1 
    /*000127ec*/ SUB         SP, SP, #24 
    /*000127f0*/ MOV         R5, R0 
    /*000127f4*/ MOV         R1, R2 
    /*000127f8*/ MOV         R0, R6 
    /*000127fc*/ BL          0x00000000000127FC          @ VI_DRV_ProcIsWrongInt [R_ARM_CALL: .text+0x27288] 
    /*00012800*/ CMP         R0, #1 
    /*00012804*/ MOV         R8, R0 
    /*00012808*/ BEQ         VI_COMM_VIOffLineVPSSOffLineIrqRoute_x129d4
    VI_COMM_VIOffLineVPSSOffLineIrqRoute_x1280c:
    /*0001280c*/ MOV         R0, R5 
    /*00012810*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00012814*/ ADD         R7, R5, #18 
    /*00012818*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*0001281c*/ BL          0x000000000001281C          @ VI_DRV_ClearAnyProcInt [R_ARM_CALL: .text+0x27724] 
    /*00012820*/ ADD         R0, R4, #824                @ 0x338 
    /*00012824*/ ADD         R1, SP, #20 
    /*00012828*/ BL          0x0000000000012828          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001282c*/ ADD         R3, R4, R7, LSL #2 
    /*00012830*/ MOV         R1, R5 
    /*00012834*/ MOV         R0, R4 
    /*00012838*/ LDR         R2, [R3, #4] 
    /*0001283c*/ BL          0x000000000001283C          @ VI_NODE_GetBusyNum [R_ARM_CALL: .text+0x16bfc] 
    /*00012840*/ ADD         R1, SP, #20 
    /*00012844*/ MOV         R9, R0 
    /*00012848*/ ADD         R0, R4, #824                @ 0x338 
    /*0001284c*/ BL          0x000000000001284C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012850*/ CMP         R9, #0 
    /*00012854*/ BNE         VI_COMM_VIOffLineVPSSOffLineIrqRoute_x12864
    /*00012858*/ MOV         R0, #0 
    /*0001285c*/ ADD         SP, SP, #24 
    /*00012860*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_VIOffLineVPSSOffLineIrqRoute_x12864:
    /*00012864*/ ADD         R1, R4, #544                @ 0x220 
    /*00012868*/ MOV         R0, R5 
    /*0001286c*/ BL          0x000000000001286C          @ VI_HAL_GetNodeID [R_ARM_CALL: .text+0x3532c] 
    /*00012870*/ LDR         R3, [R4, R7, LSL #2] 
    /*00012874*/ LDR         R2, [R4, #544]              @ 0x220 
    /*00012878*/ LDR         R3, [R3, #8] 
    /*0001287c*/ CMP         R3, R2 
    /*00012880*/ MOVEQ       SL, #0 
    /*00012884*/ BEQ         VI_COMM_VIOffLineVPSSOffLineIrqRoute_x128b8
    /*00012888*/ STR         R2, [SP, #12] 
    /*0001288c*/ MOVW        R1, #795                    @ 0x31b 
    /*00012890*/ STR         R3, [SP, #8] 
    /*00012894*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5694] 
    /*00012898*/ STR         R1, [SP] 
    /*0001289c*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5694] 
    /*000128a0*/ STR         R5, [SP, #4] 
    /*000128a4*/ MOV         R1, #16 
    /*000128a8*/ LDR         R3, [PC, #360]              @ 0x0000000000012a18 
    /*000128ac*/ MOV         R0, #3 
    /*000128b0*/ BL          0x00000000000128B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000128b4*/ MOV         SL, #1 
    VI_COMM_VIOffLineVPSSOffLineIrqRoute_x128b8:
    /*000128b8*/ MOV         R0, #2 
    /*000128bc*/ LSL         R9, R5, #8 
    /*000128c0*/ BL          0x00000000000128C0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000128c4*/ LDR         R3, [R0] 
    /*000128c8*/ BLX         R3 
    /*000128cc*/ ADD         IP, R4, R9 
    /*000128d0*/ ADD         R3, IP, #720                @ 0x2d0 
    /*000128d4*/ ADD         LR, IP, #736                @ 0x2e0 
    /*000128d8*/ ADD         IP, IP, #728                @ 0x2d8 
    /*000128dc*/ LDRD        R2, [R3] 
    /*000128e0*/ SUBS        R2, R0, R2 
    /*000128e4*/ SBC         R3, R1, R3 
    /*000128e8*/ STRD        R2, [IP] 
    /*000128ec*/ MOV         R0, R2 
    /*000128f0*/ MOV         R1, R3 
    /*000128f4*/ LDRD        R2, [LR] 
    /*000128f8*/ CMP         R1, R3 
    /*000128fc*/ CMPEQ       R0, R2 
    /*00012900*/ MOVHI       R2, R0 
    /*00012904*/ MOVHI       R3, R1 
    /*00012908*/ STRDHI      R2, [LR] 
    /*0001290c*/ MOV         R0, R5 
    /*00012910*/ BL          0x0000000000012910          @ VI_DRV_GetHWCycleCnt [R_ARM_CALL: .text+0x33300] 
    /*00012914*/ ADD         R3, R4, R9 
    /*00012918*/ ADD         IP, R3, #752                @ 0x2f0 
    /*0001291c*/ ADD         LR, R3, #744                @ 0x2e8 
    /*00012920*/ MOV         R1, #0 
    /*00012924*/ LDRD        R2, [IP] 
    /*00012928*/ CMP         R1, R3 
    /*0001292c*/ CMPEQ       R0, R2 
    /*00012930*/ STRD        R0, [LR] 
    /*00012934*/ BHI         VI_COMM_VIOffLineVPSSOffLineIrqRoute_x129cc
    VI_COMM_VIOffLineVPSSOffLineIrqRoute_x12938:
    /*00012938*/ CMP         SL, #1 
    /*0001293c*/ BNE         VI_COMM_VIOffLineVPSSOffLineIrqRoute_x12958
    /*00012940*/ ADD         R9, R4, R9 
    /*00012944*/ ADD         R9, R9, #624                @ 0x270 
    /*00012948*/ LDRD        R2, [R9] 
    /*0001294c*/ ADDS        R0, R2, #1 
    /*00012950*/ ADC         R1, R3, #0 
    /*00012954*/ STRD        R0, [R9] 
    VI_COMM_VIOffLineVPSSOffLineIrqRoute_x12958:
    /*00012958*/ CMP         R6, #1 
    /*0001295c*/ BEQ         VI_COMM_VIOffLineVPSSOffLineIrqRoute_x129e0
    VI_COMM_VIOffLineVPSSOffLineIrqRoute_x12960:
    /*00012960*/ ADD         R1, SP, #20 
    /*00012964*/ LDR         R0, [PC, #176]              @ 0x0000000000012a1c 
    /*00012968*/ BL          0x0000000000012968          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001296c*/ ADD         R4, R4, R7, LSL #2 
    /*00012970*/ MOV         R0, R5 
    /*00012974*/ MOV         R1, #1 
    /*00012978*/ BL          0x0000000000012978          @ VI_DRV_ProcReset [R_ARM_CALL: .text+0x257c8] 
    /*0001297c*/ MOV         R0, R5 
    /*00012980*/ MOV         R1, #0 
    /*00012984*/ BL          0x0000000000012984          @ VI_DRV_ProcClkEnable [R_ARM_CALL: .text+0x2578c] 
    /*00012988*/ LDR         R3, [R4, #4] 
    /*0001298c*/ MOV         R1, R6 
    /*00012990*/ MOV         R0, R5 
    /*00012994*/ CLZ         R3, R3 
    /*00012998*/ LSR         R3, R3, #5 
    /*0001299c*/ STR         R3, [R4, #4] 
    /*000129a0*/ BL          0x00000000000129A0          @ VI_COMM_StartWaitList [R_ARM_CALL: .text+0x12088] 
    /*000129a4*/ ADD         R1, SP, #20 
    /*000129a8*/ LDR         R0, [PC, #108]              @ 0x0000000000012a1c 
    /*000129ac*/ BL          0x00000000000129AC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000129b0*/ MOV         R2, R8 
    /*000129b4*/ MOV         R1, R6 
    /*000129b8*/ MOV         R0, R5 
    /*000129bc*/ BL          0x00000000000129BC          @ VI_COMM_ProcListTaskIrqRoute [R_ARM_CALL: .text+0x126e8] 
    /*000129c0*/ MOV         R0, #0 
    /*000129c4*/ ADD         SP, SP, #24 
    /*000129c8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_VIOffLineVPSSOffLineIrqRoute_x129cc:
    /*000129cc*/ STRD        R0, [IP] 
    /*000129d0*/ B           VI_COMM_VIOffLineVPSSOffLineIrqRoute_x12938
    VI_COMM_VIOffLineVPSSOffLineIrqRoute_x129d4:
    /*000129d4*/ MOV         R0, R5 
    /*000129d8*/ BL          0x00000000000129D8          @ VI_DRV_PrintRegStatus [R_ARM_CALL: .text+0x27354] 
    /*000129dc*/ B           VI_COMM_VIOffLineVPSSOffLineIrqRoute_x1280c
    VI_COMM_VIOffLineVPSSOffLineIrqRoute_x129e0:
    /*000129e0*/ MOV         R0, #7 
    /*000129e4*/ BL          0x00000000000129E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000129e8*/ LDR         R3, [R0, #20] 
    /*000129ec*/ CMP         R3, #0 
    /*000129f0*/ BEQ         VI_COMM_VIOffLineVPSSOffLineIrqRoute_x12960
    /*000129f4*/ MOV         R0, #7 
    /*000129f8*/ BL          0x00000000000129F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000129fc*/ CMP         R8, #1 
    /*00012a00*/ MOVNE       R1, #0 
    /*00012a04*/ MVNEQ       R1, #0 
    /*00012a08*/ LDR         R3, [R0, #20] 
    /*00012a0c*/ MOV         R0, R5 
    /*00012a10*/ BLX         R3 
    /*00012a14*/ B           VI_COMM_VIOffLineVPSSOffLineIrqRoute_x12960
    /*00012a18*/ ANDEQ       R0, R0, R4, LSL SL 
    /*00012a1c*/ MULEQ       R0, R8, R7 
FUNC_END VI_COMM_VIOffLineVPSSOffLineIrqRoute


FUNC_BEGIN VI_COMM_IsEarlyIntEnable
    /*00012a20*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00012a24*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00012a28*/ PUSH        {R4, R5, R6, LR} 
    /*00012a2c*/ MOV         R5, R0 
    /*00012a30*/ SUB         SP, SP, #8 
    /*00012a34*/ MOV         R0, R1 
    /*00012a38*/ MOV         R4, R1 
    /*00012a3c*/ LDR         R6, [R3, R5, LSL #2] 
    /*00012a40*/ BL          0x0000000000012A40          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*00012a44*/ CMP         R0, #0 
    /*00012a48*/ BEQ         VI_COMM_IsEarlyIntEnable_x12a9c
    /*00012a4c*/ LDR         R3, [PC, #80]               @ 0x0000000000012aa4 
    /*00012a50*/ MOV         R2, #176                    @ 0xb0 
    /*00012a54*/ ADD         R1, SP, #4 
    /*00012a58*/ MLA         R5, R2, R5, R3 
    /*00012a5c*/ MOV         R0, R5 
    /*00012a60*/ BL          0x0000000000012A60          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00012a64*/ ADD         R3, R4, #9536               @ 0x2540 
    /*00012a68*/ ADD         R3, R3, #50                 @ 0x32 
    /*00012a6c*/ ADD         R4, R4, #1808               @ 0x710 
    /*00012a70*/ ADD         R4, R4, #6 
    /*00012a74*/ MOV         R0, R5 
    /*00012a78*/ ADD         R3, R6, R3, LSL #2 
    /*00012a7c*/ ADD         R1, SP, #4 
    /*00012a80*/ LDR         R4, [R6, R4, LSL #3] 
    /*00012a84*/ LDR         R5, [R3, #4] 
    /*00012a88*/ BL          0x0000000000012A88          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012a8c*/ CMP         R4, #0 
    /*00012a90*/ CMPNE       R5, #0 
    /*00012a94*/ MOVNE       R0, #1 
    /*00012a98*/ MOVEQ       R0, #0 
    VI_COMM_IsEarlyIntEnable_x12a9c:
    /*00012a9c*/ ADD         SP, SP, #8 
    /*00012aa0*/ POP         {R4, R5, R6, PC} 
    /*00012aa4*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_COMM_IsEarlyIntEnable


FUNC_BEGIN VI_COMM_ProcOnlineSendEarlyIntFrame
    /*00012aa8*/ MOVW        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00012aac*/ MOVT        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00012ab0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00012ab4*/ MOV         R1, #0 
    /*00012ab8*/ SUB         SP, SP, #8 
    /*00012abc*/ MOV         R4, R0 
    /*00012ac0*/ MOV         R6, R2 
    /*00012ac4*/ MOV         R7, R3 
    /*00012ac8*/ LDR         R5, [IP, R0, LSL #2] 
    /*00012acc*/ BL          0x0000000000012ACC          @ VI_COMM_IsEarlyIntEnable [R_ARM_CALL: .text+0x12a20] 
    /*00012ad0*/ CMP         R0, #0 
    /*00012ad4*/ BNE         VI_COMM_ProcOnlineSendEarlyIntFrame_x12ae0
    VI_COMM_ProcOnlineSendEarlyIntFrame_x12ad8:
    /*00012ad8*/ ADD         SP, SP, #8 
    /*00012adc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_ProcOnlineSendEarlyIntFrame_x12ae0:
    /*00012ae0*/ MOV         R1, #0 
    /*00012ae4*/ MOV         R0, R4 
    /*00012ae8*/ BL          0x0000000000012AE8          @ VI_CalcChnTimeRef [R_ARM_CALL: .text+0x5ee4] 
    /*00012aec*/ ADD         R8, R5, #16384              @ 0x4000 
    /*00012af0*/ MOVW        R3, #16560                  @ 0x40b0 
    /*00012af4*/ ADD         SL, R5, #12288              @ 0x3000 
    /*00012af8*/ STRD        R6, [R5, R3] 
    /*00012afc*/ MOV         R9, #0 
    /*00012b00*/ STR         R0, [R8, #168]              @ 0xa8 
    /*00012b04*/ MOV         R0, R4 
    /*00012b08*/ BL          0x0000000000012B08          @ VI_DRV_GetColorGamutFromIsp [R_ARM_CALL: .text+0x38a4c] 
    /*00012b0c*/ ADD         R3, R5, #16896              @ 0x4200 
    /*00012b10*/ MOV         R2, #1 
    /*00012b14*/ STR         R0, [SL, #4060]             @ 0xfdc 
    /*00012b18*/ STRD        R6, [R3] 
    /*00012b1c*/ LDR         R6, [R8, #632]              @ 0x278 
    /*00012b20*/ STR         R2, [R8, #636]              @ 0x27c 
    /*00012b24*/ CMP         R6, R2 
    /*00012b28*/ STRH        R9, [R8, #156]              @ 0x9c 
    /*00012b2c*/ STRH        R9, [R8, #152]              @ 0x98 
    /*00012b30*/ BNE         VI_COMM_ProcOnlineSendEarlyIntFrame_x12ad8
    /*00012b34*/ MOV         R2, R6 
    /*00012b38*/ MOV         R1, R9 
    /*00012b3c*/ MOV         R0, R4 
    /*00012b40*/ ADD         R7, R5, #16320              @ 0x3fc0 
    /*00012b44*/ BL          0x0000000000012B44          @ VI_ChnFrameRateStatistic [R_ARM_CALL: .text+0x222c] 
    /*00012b48*/ LDR         R3, [SL, #4032]             @ 0xfc0 
    /*00012b4c*/ ADD         R5, R5, #32768              @ 0x8000 
    /*00012b50*/ MOV         R0, #2 
    /*00012b54*/ STR         R3, [R5, #3904]             @ 0xf40 
    /*00012b58*/ LDR         R3, [SL, #4036]             @ 0xfc4 
    /*00012b5c*/ STR         R3, [R5, #3908]             @ 0xf44 
    /*00012b60*/ BL          0x0000000000012B60          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00012b64*/ MOV         R1, R4 
    /*00012b68*/ STR         R7, [SP, #4] 
    /*00012b6c*/ MOV         R3, R9 
    /*00012b70*/ STR         R9, [SP] 
    /*00012b74*/ MOV         R2, R9 
    /*00012b78*/ LDR         R4, [R0, #40]               @ 0x28 
    /*00012b7c*/ MOV         R0, #16 
    /*00012b80*/ BLX         R4 
    /*00012b84*/ MOV         R1, R9 
    /*00012b88*/ MOV         R0, R7 
    /*00012b8c*/ BL          0x0000000000012B8C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00012b90*/ STR         R9, [R8, #632]              @ 0x278 
    /*00012b94*/ STR         R6, [R8, #640]              @ 0x280 
    /*00012b98*/ B           VI_COMM_ProcOnlineSendEarlyIntFrame_x12ad8
FUNC_END VI_COMM_ProcOnlineSendEarlyIntFrame


FUNC_BEGIN VI_COMM_ProcOnlineSendLastFrame
    /*00012b9c*/ MOVW        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00012ba0*/ MOVT        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00012ba4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00012ba8*/ SUB         SP, SP, #8 
    /*00012bac*/ LDR         R4, [R1, R0, LSL #2] 
    /*00012bb0*/ MOV         R7, R3 
    /*00012bb4*/ MOV         R3, #0 
    /*00012bb8*/ STR         R3, [SP] 
    /*00012bbc*/ ADD         R8, R4, #32768              @ 0x8000 
    /*00012bc0*/ STR         R3, [SP, #4] 
    /*00012bc4*/ MOV         R6, R2 
    /*00012bc8*/ ADD         R1, R4, #36864              @ 0x9000 
    /*00012bcc*/ LDR         R3, [R8, #3804]             @ 0xedc 
    /*00012bd0*/ ADD         R2, R4, #37632              @ 0x9300 
    /*00012bd4*/ MOV         R5, R0 
    /*00012bd8*/ CLZ         R3, R3 
    /*00012bdc*/ LSR         R3, R3, #5 
    /*00012be0*/ STR         R3, [R1, #1020]             @ 0x3fc 
    /*00012be4*/ STRD        R6, [R2, #56]               @ 0x38 
    /*00012be8*/ BL          0x0000000000012BE8          @ VI_ProcBnrRawFrame [R_ARM_CALL: .text+0x2bcc] 
    /*00012bec*/ LDR         R3, [R8, #3804]             @ 0xedc 
    /*00012bf0*/ CMP         R3, #0 
    /*00012bf4*/ BEQ         VI_COMM_ProcOnlineSendLastFrame_x12c28
    VI_COMM_ProcOnlineSendLastFrame_x12bf8:
    /*00012bf8*/ MOV         R1, #0 
    /*00012bfc*/ MOV         R0, R5 
    /*00012c00*/ BL          0x0000000000012C00          @ VI_COMM_IsEarlyIntEnable [R_ARM_CALL: .text+0x12a20] 
    /*00012c04*/ SUBS        R1, R0, #0 
    /*00012c08*/ BEQ         VI_COMM_ProcOnlineSendLastFrame_x12c3c
    /*00012c0c*/ ADD         R5, R4, #16384              @ 0x4000 
    /*00012c10*/ LDR         R3, [R5, #632]              @ 0x278 
    /*00012c14*/ CMP         R3, #1 
    /*00012c18*/ BEQ         VI_COMM_ProcOnlineSendLastFrame_x12cc0
    VI_COMM_ProcOnlineSendLastFrame_x12c1c:
    /*00012c1c*/ MOV         R0, #0 
    /*00012c20*/ ADD         SP, SP, #8 
    /*00012c24*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_ProcOnlineSendLastFrame_x12c28:
    /*00012c28*/ ADD         R2, SP, #4 
    /*00012c2c*/ MOV         R1, SP 
    /*00012c30*/ MOV         R0, R5 
    /*00012c34*/ BL          0x0000000000012C34          @ VI_DRV_UpdateDISOffset [R_ARM_CALL: .text+0x2e990] 
    /*00012c38*/ B           VI_COMM_ProcOnlineSendLastFrame_x12bf8
    VI_COMM_ProcOnlineSendLastFrame_x12c3c:
    /*00012c3c*/ MOV         R0, R5 
    /*00012c40*/ ADD         R9, R4, #16384              @ 0x4000 
    /*00012c44*/ BL          0x0000000000012C44          @ VI_CalcChnTimeRef [R_ARM_CALL: .text+0x5ee4] 
    /*00012c48*/ MOVW        R3, #16560                  @ 0x40b0 
    /*00012c4c*/ STRD        R6, [R4, R3] 
    /*00012c50*/ ADD         SL, R4, #16320              @ 0x3fc0 
    /*00012c54*/ STR         R0, [R9, #168]              @ 0xa8 
    /*00012c58*/ MOV         R0, R5 
    /*00012c5c*/ BL          0x0000000000012C5C          @ VI_DRV_GetColorGamutFromIsp [R_ARM_CALL: .text+0x38a4c] 
    /*00012c60*/ LDR         R3, [SP] 
    /*00012c64*/ LDR         R2, [SP, #4] 
    /*00012c68*/ ADD         R1, R4, #12288              @ 0x3000 
    /*00012c6c*/ ADD         R4, R4, #16896              @ 0x4200 
    /*00012c70*/ STR         R0, [R1, #4060]             @ 0xfdc 
    /*00012c74*/ STRD        R6, [R4] 
    /*00012c78*/ STRH        R2, [R9, #156]              @ 0x9c 
    /*00012c7c*/ STRH        R3, [R9, #152]              @ 0x98 
    /*00012c80*/ LDR         R3, [R8, #3804]             @ 0xedc 
    /*00012c84*/ CMP         R3, #0 
    /*00012c88*/ MOVEQ       R3, #1 
    /*00012c8c*/ MOVNE       R3, #0 
    /*00012c90*/ STR         R3, [R9, #636]              @ 0x27c 
    /*00012c94*/ BEQ         VI_COMM_ProcOnlineSendLastFrame_x12ca4
    /*00012c98*/ LDR         R3, [R9, #632]              @ 0x278 
    /*00012c9c*/ CMP         R3, #1 
    /*00012ca0*/ BEQ         VI_COMM_ProcOnlineSendLastFrame_x12cd8
    VI_COMM_ProcOnlineSendLastFrame_x12ca4:
    /*00012ca4*/ MOV         R2, SL 
    /*00012ca8*/ MOV         R0, R5 
    /*00012cac*/ MOV         R1, #0 
    /*00012cb0*/ BL          0x0000000000012CB0          @ VI_ProcChnFrame [R_ARM_CALL: .text+0x2c70] 
    /*00012cb4*/ MOV         R0, #0 
    /*00012cb8*/ ADD         SP, SP, #8 
    /*00012cbc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_ProcOnlineSendLastFrame_x12cc0:
    /*00012cc0*/ ADD         R0, R4, #16320              @ 0x3fc0 
    /*00012cc4*/ MOV         R1, #0 
    /*00012cc8*/ BL          0x0000000000012CC8          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00012ccc*/ MOV         R3, #0 
    /*00012cd0*/ STR         R3, [R5, #632]              @ 0x278 
    /*00012cd4*/ B           VI_COMM_ProcOnlineSendLastFrame_x12c1c
    VI_COMM_ProcOnlineSendLastFrame_x12cd8:
    /*00012cd8*/ LDR         R3, [R8, #3892]             @ 0xf34 
    /*00012cdc*/ ADD         R3, R3, #1 
    /*00012ce0*/ STR         R3, [R8, #3892]             @ 0xf34 
    /*00012ce4*/ B           VI_COMM_ProcOnlineSendLastFrame_x12ca4
FUNC_END VI_COMM_ProcOnlineSendLastFrame


FUNC_BEGIN VI_COMM_UpdateCurCrop
    /*00012ce8*/ PUSH        {R4, LR} 
    /*00012cec*/ SUB         SP, SP, #24 
    /*00012cf0*/ MOV         R4, R0 
    /*00012cf4*/ ADD         R1, SP, #4 
    /*00012cf8*/ BL          0x0000000000012CF8          @ VI_DRV_GetPipeCrop [R_ARM_CALL: .text+0x286fc] 
    /*00012cfc*/ ADD         R1, SP, #4 
    /*00012d00*/ MOV         R0, R4 
    /*00012d04*/ BL          0x0000000000012D04          @ VI_DRV_SetCurFeCrop [R_ARM_CALL: .text+0x28728] 
    /*00012d08*/ MOV         R0, #0 
    /*00012d0c*/ ADD         SP, SP, #24 
    /*00012d10*/ POP         {R4, PC} 
FUNC_END VI_COMM_UpdateCurCrop


FUNC_BEGIN VI_COMM_ProcOnlineUpdateAttr
    /*00012d14*/ PUSH        {R4, R5, R6, LR} 
    /*00012d18*/ SUB         SP, SP, #424                @ 0x1a8 
    /*00012d1c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00012d20*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00012d24*/ MOV         R4, R0 
    /*00012d28*/ MOV         R1, SP 
    /*00012d2c*/ LDR         R5, [R3, R0, LSL #2] 
    /*00012d30*/ BL          0x0000000000012D30          @ VI_DRV_GetCurFeCrop [R_ARM_CALL: .text+0x287e0] 
    /*00012d34*/ ADD         R1, SP, #20 
    /*00012d38*/ MOV         R0, R4 
    /*00012d3c*/ BL          0x0000000000012D3C          @ VI_DRV_GetWorkingPipeAttr [R_ARM_CALL: .text+0x286a4] 
    /*00012d40*/ LDR         R3, [SP] 
    /*00012d44*/ MOV         R2, #16 
    /*00012d48*/ STR         R2, [SP, #420]              @ 0x1a4 
    /*00012d4c*/ CMP         R3, #0 
    /*00012d50*/ ADD         R1, SP, #88                 @ 0x58 
    /*00012d54*/ MOV         R0, R4 
    /*00012d58*/ LDRNE       R3, [SP, #16] 
    /*00012d5c*/ LDREQ       R3, [SP, #36]               @ 0x24 
    /*00012d60*/ LDRNE       R2, [SP, #12] 
    /*00012d64*/ LDREQ       R2, [SP, #32] 
    /*00012d68*/ STR         R3, [SP, #92]               @ 0x5c 
    /*00012d6c*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00012d70*/ STR         R2, [SP, #88]               @ 0x58 
    /*00012d74*/ MOV         R2, #0 
    /*00012d78*/ STR         R2, [SP, #108]              @ 0x6c 
    /*00012d7c*/ SUB         R2, R3, #25 
    /*00012d80*/ CMP         R3, #39                     @ 0x27 
    /*00012d84*/ CMPNE       R2, #2 
    /*00012d88*/ STR         R3, [SP, #100]              @ 0x64 
    /*00012d8c*/ MOVLS       R3, #27 
    /*00012d90*/ STRLS       R3, [SP, #100]              @ 0x64 
    /*00012d94*/ BL          0x0000000000012D94          @ VI_DRV_PrepareCurPicInfo [R_ARM_CALL: .text+0x2d91c] 
    /*00012d98*/ MOV         R1, #1 
    /*00012d9c*/ MOV         R0, R4 
    /*00012da0*/ BL          0x0000000000012DA0          @ VI_DRV_CalcCurPicSize [R_ARM_CALL: .text+0x2b244] 
    /*00012da4*/ MOV         R0, R4 
    /*00012da8*/ BL          0x0000000000012DA8          @ VI_DRV_PrepareAllPhyChnCrop [R_ARM_CALL: .text+0x2b6e4] 
    /*00012dac*/ ADD         R3, R5, #36864              @ 0x9000 
    /*00012db0*/ LDR         R3, [R3, #1484]             @ 0x5cc 
    /*00012db4*/ CMP         R3, #1 
    /*00012db8*/ BEQ         VI_COMM_ProcOnlineUpdateAttr_x12e0c
    VI_COMM_ProcOnlineUpdateAttr_x12dbc:
    /*00012dbc*/ MOV         R6, #0 
    VI_COMM_ProcOnlineUpdateAttr_x12dc0:
    /*00012dc0*/ MOV         R0, R4 
    /*00012dc4*/ BL          0x0000000000012DC4          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00012dc8*/ SUB         R3, R0, #4 
    /*00012dcc*/ MOV         R0, R4 
    /*00012dd0*/ CMP         R3, #2 
    /*00012dd4*/ MOVCC       R5, #2 
    /*00012dd8*/ MOVCS       R5, #1 
    /*00012ddc*/ BL          0x0000000000012DDC          @ VI_SNAP_PrepareIso [R_ARM_CALL: .text+0x1abec] 
    /*00012de0*/ MOV         R2, R6 
    /*00012de4*/ MOV         R3, #0 
    /*00012de8*/ MOV         R1, R5 
    /*00012dec*/ MOV         R0, R4 
    /*00012df0*/ BL          0x0000000000012DF0          @ VI_DRV_Prepare3dnrInfo [R_ARM_CALL: .text+0x2d594] 
    /*00012df4*/ MOV         R1, R5 
    /*00012df8*/ MOV         R0, R4 
    /*00012dfc*/ BL          0x0000000000012DFC          @ VI_DRV_PrepareLDCIInfo [R_ARM_CALL: .text+0x2d5c4] 
    /*00012e00*/ MOV         R0, #0 
    /*00012e04*/ ADD         SP, SP, #424                @ 0x1a8 
    /*00012e08*/ POP         {R4, R5, R6, PC} 
    VI_COMM_ProcOnlineUpdateAttr_x12e0c:
    /*00012e0c*/ ADD         R0, R5, #148                @ 0x94 
    /*00012e10*/ BL          0x0000000000012E10          @ VI_QueueQueryBusyTail [R_ARM_CALL: .text+0x16430] 
    /*00012e14*/ CMP         R0, #0 
    /*00012e18*/ BEQ         VI_COMM_ProcOnlineUpdateAttr_x12dbc
    /*00012e1c*/ SUB         R6, R0, #336                @ 0x150 
    /*00012e20*/ B           VI_COMM_ProcOnlineUpdateAttr_x12dc0
FUNC_END VI_COMM_ProcOnlineUpdateAttr


FUNC_BEGIN VI_COMM_ProcOnlinePrepareNextBnrRawFrame
    /*00012e24*/ PUSH        {R4, LR} 
    /*00012e28*/ MOV         R4, R0 
    /*00012e2c*/ BL          0x0000000000012E2C          @ VI_DRV_IsBnrSupport [R_ARM_CALL: .text+0x2770c] 
    /*00012e30*/ CMP         R0, #1 
    /*00012e34*/ POPNE       {R4, PC} 
    /*00012e38*/ MOV         R0, R4 
    /*00012e3c*/ POP         {R4, LR} 
    /*00012e40*/ B           0x0000000000011964 
FUNC_END VI_COMM_ProcOnlinePrepareNextBnrRawFrame


FUNC_BEGIN VI_ChnPerformanceLimit
    /*00012e44*/ MOVW        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00012e48*/ MOVT        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00012e4c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00012e50*/ MOV         IP, #56                     @ 0x38 
    /*00012e54*/ LDR         R7, [R2, R0, LSL #2] 
    /*00012e58*/ MOV         R4, #12 
    /*00012e5c*/ MUL         R4, R4, R1 
    /*00012e60*/ MOVW        LR, #36688                  @ 0x8f50 
    /*00012e64*/ MLA         R3, IP, R1, R7 
    /*00012e68*/ MOVW        R5, #36680                  @ 0x8f48 
    /*00012e6c*/ ADD         IP, R4, #37120              @ 0x9100 
    /*00012e70*/ SUB         SP, SP, #52                 @ 0x34 
    /*00012e74*/ ADD         IP, IP, #112                @ 0x70 
    /*00012e78*/ ADD         R2, SP, #4 
    /*00012e7c*/ ADD         R6, R7, IP 
    /*00012e80*/ LDR         R5, [R3, R5] 
    /*00012e84*/ LDR         R3, [R3, LR] 
    /*00012e88*/ SUB         R5, R5, R3 
    /*00012e8c*/ BL          0x0000000000012E8C          @ VI_DRV_GetWorkingChnAttr [R_ARM_CALL: .text+0x2991c] 
    /*00012e90*/ ADD         R0, R7, #37120              @ 0x9100 
    /*00012e94*/ MOV         R1, R6 
    /*00012e98*/ ADD         R2, SP, #40                 @ 0x28 
    /*00012e9c*/ ADD         R0, R0, #40                 @ 0x28 
    /*00012ea0*/ BL          0x0000000000012EA0          @ VI_CalcOutputLimitFrameRate [R_ARM_CALL: .text+0x6c84] 
    /*00012ea4*/ ADD         R0, R4, #37120              @ 0x9100 
    /*00012ea8*/ ADD         R0, R0, #116                @ 0x74 
    /*00012eac*/ MOV         R2, R5 
    /*00012eb0*/ MOV         R1, R6 
    /*00012eb4*/ ADD         R0, R7, R0 
    /*00012eb8*/ BL          0x0000000000012EB8          @ VI_DRV_ChnPerformanceLimit [R_ARM_CALL: .text+0x2b7dc] 
    /*00012ebc*/ ADD         SP, SP, #52                 @ 0x34 
    /*00012ec0*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VI_ChnPerformanceLimit


FUNC_BEGIN VI_COMM_ProcPrepareNextChnFrame
    /*00012ec4*/ MOV         R2, #712                    @ 0x2c8 
    /*00012ec8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00012ecc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00012ed0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00012ed4*/ MUL         R4, R2, R1 
    /*00012ed8*/ LDR         R6, [R3, R0, LSL #2] 
    /*00012edc*/ MOV         R8, R0 
    /*00012ee0*/ SUB         SP, SP, #108                @ 0x6c 
    /*00012ee4*/ MOV         R5, R1 
    /*00012ee8*/ MOVW        SL, #23424                  @ 0x5b80 
    /*00012eec*/ ADD         R7, R4, #22528              @ 0x5800 
    /*00012ef0*/ ADD         R0, R4, #16320              @ 0x3fc0 
    /*00012ef4*/ ADD         R7, R7, #200                @ 0xc8 
    /*00012ef8*/ ADD         R4, R6, R4 
    /*00012efc*/ ADD         R7, R6, R7 
    /*00012f00*/ ADD         R0, R6, R0 
    /*00012f04*/ MOV         R1, R7 
    /*00012f08*/ BL          0x0000000000012F08          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00012f0c*/ MOVW        R1, #23436                  @ 0x5b8c 
    /*00012f10*/ MOVW        R2, #23420                  @ 0x5b7c 
    /*00012f14*/ MOV         R3, #0 
    /*00012f18*/ MOV         R0, R8 
    /*00012f1c*/ STR         R3, [R4, R1] 
    /*00012f20*/ STR         R3, [R4, R2] 
    /*00012f24*/ MOV         R1, R5 
    /*00012f28*/ STR         R3, [R4, SL] 
    /*00012f2c*/ ADD         R2, SP, #60                 @ 0x3c 
    /*00012f30*/ BL          0x0000000000012F30          @ VI_DRV_GetWorkingChnAttr [R_ARM_CALL: .text+0x2991c] 
    /*00012f34*/ ADD         R1, R5, #8832               @ 0x2280 
    /*00012f38*/ ADD         R1, R1, #54                 @ 0x36 
    /*00012f3c*/ LSL         R9, R1, #2 
    /*00012f40*/ ADD         R0, R6, R9 
    /*00012f44*/ BL          0x0000000000012F44          @ VI_IsWaitCapFramStop [R_ARM_CALL: .text+0x1598] 
    /*00012f48*/ CMP         R0, #1 
    /*00012f4c*/ BEQ         VI_COMM_ProcPrepareNextChnFrame_x12f64
    /*00012f50*/ ADD         FP, R6, R5, LSL #2 
    /*00012f54*/ ADD         FP, FP, #36864              @ 0x9000 
    /*00012f58*/ LDR         R3, [FP, #2228]             @ 0x8b4 
    /*00012f5c*/ CMP         R3, #0 
    /*00012f60*/ BNE         VI_COMM_ProcPrepareNextChnFrame_x12fa4
    VI_COMM_ProcPrepareNextChnFrame_x12f64:
    /*00012f64*/ LDR         R2, [R4, SL] 
    VI_COMM_ProcPrepareNextChnFrame_x12f68:
    /*00012f68*/ MOV         R1, R5 
    /*00012f6c*/ MOV         R0, R8 
    /*00012f70*/ BL          0x0000000000012F70          @ VI_DRV_MarkChnEnableFlag [R_ARM_CALL: .text+0x2cd3c] 
    /*00012f74*/ MOV         R3, #712                    @ 0x2c8 
    /*00012f78*/ MLA         R6, R3, R5, R6 
    /*00012f7c*/ MOVW        R3, #23424                  @ 0x5b80 
    /*00012f80*/ LDR         R3, [R6, R3] 
    /*00012f84*/ CMP         R3, #0 
    /*00012f88*/ BEQ         VI_COMM_ProcPrepareNextChnFrame_x12f9c
    /*00012f8c*/ MOV         R2, R7 
    /*00012f90*/ MOV         R1, R5 
    /*00012f94*/ MOV         R0, R8 
    /*00012f98*/ BL          0x0000000000012F98          @ VI_DRV_PrepareChnDestPicInfo [R_ARM_CALL: .text+0x2d984] 
    VI_COMM_ProcPrepareNextChnFrame_x12f9c:
    /*00012f9c*/ ADD         SP, SP, #108                @ 0x6c 
    /*00012fa0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_COMM_ProcPrepareNextChnFrame_x12fa4:
    /*00012fa4*/ MOV         R1, R5 
    /*00012fa8*/ MOV         R0, R8 
    /*00012fac*/ BL          0x0000000000012FAC          @ VI_DRV_NeedLimitChnPerformance [R_ARM_CALL: .text+0x2b7d4] 
    /*00012fb0*/ CMP         R0, #0 
    /*00012fb4*/ BNE         VI_COMM_ProcPrepareNextChnFrame_x13010
    /*00012fb8*/ SUB         R1, R9, #35072              @ 0x8900 
    /*00012fbc*/ ADD         R0, SP, #96                 @ 0x60 
    /*00012fc0*/ ADD         R1, R6, R1 
    /*00012fc4*/ BL          0x0000000000012FC4          @ VI_DRV_ChnFrmRateCtl [R_ARM_CALL: .text+0x2b78c] 
    /*00012fc8*/ CMP         R0, #0 
    /*00012fcc*/ BEQ         VI_COMM_ProcPrepareNextChnFrame_x13168
    VI_COMM_ProcPrepareNextChnFrame_x12fd0:
    /*00012fd0*/ MOV         R1, R5 
    /*00012fd4*/ MOV         R0, R8 
    /*00012fd8*/ BL          0x0000000000012FD8          @ VI_DRV_ChnCheckOnlineCapacity [R_ARM_CALL: .text+0x2bb08] 
    /*00012fdc*/ SUBS        R4, R0, #0 
    /*00012fe0*/ BEQ         VI_COMM_ProcPrepareNextChnFrame_x13040
    /*00012fe4*/ MOV         R3, #56                     @ 0x38 
    /*00012fe8*/ MOV         R2, #712                    @ 0x2c8 
    /*00012fec*/ MLA         R3, R3, R5, R6 
    /*00012ff0*/ MOVW        R0, #36660                  @ 0x8f34 
    /*00012ff4*/ MLA         R2, R2, R5, R6 
    /*00012ff8*/ MOVW        IP, #23424                  @ 0x5b80 
    /*00012ffc*/ LDR         R1, [R3, R0] 
    /*00013000*/ ADD         R1, R1, #1 
    /*00013004*/ STR         R1, [R3, R0] 
    /*00013008*/ LDR         R2, [R2, IP] 
    /*0001300c*/ B           VI_COMM_ProcPrepareNextChnFrame_x12f68
    VI_COMM_ProcPrepareNextChnFrame_x13010:
    /*00013010*/ MOV         R1, R5 
    /*00013014*/ MOV         R0, R8 
    /*00013018*/ BL          0x0000000000013018          @ VI_ChnPerformanceLimit [R_ARM_CALL: .text+0x12e44] 
    /*0001301c*/ CMP         R0, #0 
    /*00013020*/ BNE         VI_COMM_ProcPrepareNextChnFrame_x12fd0
    /*00013024*/ MOV         R3, #56                     @ 0x38 
    /*00013028*/ MOVW        R1, #36664                  @ 0x8f38 
    /*0001302c*/ MLA         R3, R3, R5, R6 
    /*00013030*/ LDR         R2, [R3, R1] 
    /*00013034*/ ADD         R2, R2, #1 
    /*00013038*/ STR         R2, [R3, R1] 
    /*0001303c*/ B           VI_COMM_ProcPrepareNextChnFrame_x12f64
    VI_COMM_ProcPrepareNextChnFrame_x13040:
    /*00013040*/ ADD         R2, SP, #28 
    /*00013044*/ MOV         R1, R5 
    /*00013048*/ MOV         R0, R8 
    /*0001304c*/ STR         R8, [SP, #20] 
    /*00013050*/ STR         R5, [SP, #24] 
    /*00013054*/ STR         R4, [SP, #52]               @ 0x34 
    /*00013058*/ BL          0x0000000000013058          @ VI_DRV_GetChnOutPutSize [R_ARM_CALL: .text+0x2b724] 
    /*0001305c*/ LDR         R3, [FP, #2264]             @ 0x8d8 
    /*00013060*/ MOV         R1, R5 
    /*00013064*/ LDR         LR, [SP, #68]               @ 0x44 
    /*00013068*/ MOV         R0, R8 
    /*0001306c*/ LDR         IP, [SP, #80]               @ 0x50 
    /*00013070*/ LDR         R2, [SP, #76]               @ 0x4c 
    /*00013074*/ STR         R3, [SP, #56]               @ 0x38 
    /*00013078*/ LDR         R3, [SP, #72]               @ 0x48 
    /*0001307c*/ STR         LR, [SP, #36]               @ 0x24 
    /*00013080*/ STR         IP, [SP, #40]               @ 0x28 
    /*00013084*/ STR         R3, [SP, #48]               @ 0x30 
    /*00013088*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0001308c*/ BL          0x000000000001308C          @ VI_DRV_NeedCallGDCFunction [R_ARM_CALL: .text+0x28d64] 
    /*00013090*/ MOV         R1, R7 
    /*00013094*/ CMP         R0, #1 
    /*00013098*/ ADD         R0, SP, #20 
    /*0001309c*/ STREQ       R4, [SP, #40]               @ 0x28 
    /*000130a0*/ LDRNE       R3, [SP, #80]               @ 0x50 
    /*000130a4*/ STRNE       R3, [SP, #40]               @ 0x28 
    /*000130a8*/ BL          0x00000000000130A8          @ VI_DRV_GetFrmVbBlk [R_ARM_CALL: .text+0x2c8f4] 
    /*000130ac*/ SUBS        R9, R0, #0 
    /*000130b0*/ BEQ         VI_COMM_ProcPrepareNextChnFrame_x131b0
    /*000130b4*/ LDR         R0, [SP, #32] 
    /*000130b8*/ MOV         R2, #0 
    /*000130bc*/ LDR         R1, [SP, #28] 
    /*000130c0*/ MOVW        R3, #1237                   @ 0x4d5 
    /*000130c4*/ STR         R2, [SP, #4] 
    /*000130c8*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5734] 
    /*000130cc*/ STR         R0, [SP, #12] 
    /*000130d0*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5734] 
    /*000130d4*/ STR         R1, [SP, #8] 
    /*000130d8*/ MOV         R0, #3 
    /*000130dc*/ STR         R3, [SP] 
    /*000130e0*/ MOV         R1, #16 
    /*000130e4*/ LDR         R3, [PC, #316]              @ 0x0000000000013228 
    /*000130e8*/ BL          0x00000000000130E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_COMM_ProcPrepareNextChnFrame_x130ec:
    /*000130ec*/ MOV         R3, #56                     @ 0x38 
    /*000130f0*/ MOVW        IP, #36660                  @ 0x8f34 
    /*000130f4*/ MLA         R3, R3, R5, R6 
    /*000130f8*/ MOVW        R0, #36668                  @ 0x8f3c 
    /*000130fc*/ LDR         R1, [R3, IP] 
    /*00013100*/ LDR         R2, [R3, R0] 
    /*00013104*/ ADD         R1, R1, #1 
    /*00013108*/ STR         R1, [R3, IP] 
    /*0001310c*/ ADD         R2, R2, #1 
    /*00013110*/ STR         R2, [R3, R0] 
    VI_COMM_ProcPrepareNextChnFrame_x13114:
    /*00013114*/ MOV         R4, #712                    @ 0x2c8 
    /*00013118*/ MOVW        R9, #23424                  @ 0x5b80 
    /*0001311c*/ MLA         R4, R4, R5, R6 
    /*00013120*/ LDR         R2, [R4, R9] 
    /*00013124*/ CMP         R2, #0 
    /*00013128*/ BEQ         VI_COMM_ProcPrepareNextChnFrame_x12f68
    /*0001312c*/ ADD         R3, R6, #36864              @ 0x9000 
    /*00013130*/ LDR         R2, [R3, #472]              @ 0x1d8 
    /*00013134*/ CMP         R2, #1 
    /*00013138*/ BNE         VI_COMM_ProcPrepareNextChnFrame_x13148
    /*0001313c*/ LDR         R2, [R3, #480]              @ 0x1e0 
    /*00013140*/ CMP         R8, R2 
    /*00013144*/ BEQ         VI_COMM_ProcPrepareNextChnFrame_x13214
    VI_COMM_ProcPrepareNextChnFrame_x13148:
    /*00013148*/ MOV         R1, R7 
    /*0001314c*/ MOV         R0, R8 
    /*00013150*/ BL          0x0000000000013150          @ VI_COMM_SaveIspInfo2Pic [R_ARM_CALL: .text+0x1b838] 
    /*00013154*/ MOV         R3, #712                    @ 0x2c8 
    /*00013158*/ MLA         R3, R3, R5, R6 
    /*0001315c*/ MOVW        R2, #23424                  @ 0x5b80 
    /*00013160*/ LDR         R2, [R3, R2] 
    /*00013164*/ B           VI_COMM_ProcPrepareNextChnFrame_x12f68
    VI_COMM_ProcPrepareNextChnFrame_x13168:
    /*00013168*/ MOVW        R3, #1196                   @ 0x4ac 
    /*0001316c*/ MOV         R1, #16 
    /*00013170*/ STR         R3, [SP] 
    /*00013174*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56d8] 
    /*00013178*/ LDR         R3, [PC, #168]              @ 0x0000000000013228 
    /*0001317c*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56d8] 
    /*00013180*/ STR         R5, [SP, #8] 
    /*00013184*/ MOV         R0, #6 
    /*00013188*/ STR         R8, [SP, #4] 
    /*0001318c*/ BL          0x000000000001318C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013190*/ MOV         R3, #56                     @ 0x38 
    /*00013194*/ MLA         R3, R3, R5, R6 
    /*00013198*/ MOVW        R1, #36664                  @ 0x8f38 
    /*0001319c*/ LDR         R2, [R3, R1] 
    /*000131a0*/ ADD         R2, R2, #1 
    /*000131a4*/ STR         R2, [R3, R1] 
    /*000131a8*/ LDR         R2, [R4, SL] 
    /*000131ac*/ B           VI_COMM_ProcPrepareNextChnFrame_x12f68
    VI_COMM_ProcPrepareNextChnFrame_x131b0:
    /*000131b0*/ MOV         R4, #712                    @ 0x2c8 
    /*000131b4*/ MOVW        SL, #23424                  @ 0x5b80 
    /*000131b8*/ MLA         R4, R4, R5, R6 
    /*000131bc*/ MOV         R3, #1 
    /*000131c0*/ MOV         R2, R7 
    /*000131c4*/ MOV         R1, R5 
    /*000131c8*/ MOV         R0, R8 
    /*000131cc*/ STR         R3, [R4, SL] 
    /*000131d0*/ BL          0x00000000000131D0          @ VI_COMM_PrepareDISVBAndInfo [R_ARM_CALL: .text+0x24f2c] 
    /*000131d4*/ CMP         R0, #0 
    /*000131d8*/ BEQ         VI_COMM_ProcPrepareNextChnFrame_x13114
    /*000131dc*/ STR         R8, [SP, #4] 
    /*000131e0*/ MOVW        R3, #1250                   @ 0x4e2 
    /*000131e4*/ MOV         R1, #16 
    /*000131e8*/ STR         R3, [SP] 
    /*000131ec*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5774] 
    /*000131f0*/ LDR         R3, [PC, #48]               @ 0x0000000000013228 
    /*000131f4*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5774] 
    /*000131f8*/ MOV         R0, #3 
    /*000131fc*/ BL          0x00000000000131FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013200*/ STR         R9, [R4, SL] 
    /*00013204*/ MOV         R1, R9 
    /*00013208*/ MOV         R0, R7 
    /*0001320c*/ BL          0x000000000001320C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00013210*/ B           VI_COMM_ProcPrepareNextChnFrame_x130ec
    VI_COMM_ProcPrepareNextChnFrame_x13214:
    /*00013214*/ LDR         R0, [R3, #476]              @ 0x1dc 
    /*00013218*/ MOV         R1, R7 
    /*0001321c*/ BL          0x000000000001321C          @ VI_COMM_SaveIspInfo2Pic [R_ARM_CALL: .text+0x1b838] 
    /*00013220*/ LDR         R2, [R4, R9] 
    /*00013224*/ B           VI_COMM_ProcPrepareNextChnFrame_x12f68
    /*00013228*/ ANDEQ       R0, R0, IP, LSR SL 
FUNC_END VI_COMM_ProcPrepareNextChnFrame


FUNC_BEGIN VI_COMM_ViOnlineVpssOfflinePrepareNextFrame
    /*0001322c*/ PUSH        {R4, LR} 
    /*00013230*/ MOV         R4, R0 
    /*00013234*/ BL          0x0000000000013234          @ VI_DRV_IsBnrSupport [R_ARM_CALL: .text+0x2770c] 
    /*00013238*/ CMP         R0, #1 
    /*0001323c*/ BEQ         VI_COMM_ViOnlineVpssOfflinePrepareNextFrame_x13268
    VI_COMM_ViOnlineVpssOfflinePrepareNextFrame_x13240:
    /*00013240*/ MOV         R0, R4 
    /*00013244*/ MOV         R1, #0 
    /*00013248*/ BL          0x0000000000013248          @ VI_COMM_ProcPrepareNextChnFrame [R_ARM_CALL: .text+0x12ec4] 
    /*0001324c*/ MOV         R1, #0 
    /*00013250*/ MOV         R0, R4 
    /*00013254*/ BL          0x0000000000013254          @ VI_DRV_PrepareOnlineScaleAttr [R_ARM_CALL: .text+0x2de8c] 
    /*00013258*/ MOV         R0, R4 
    /*0001325c*/ BL          0x000000000001325C          @ VI_DRV_OnlinePrepareNextFrame [R_ARM_CALL: .text+0x2eadc] 
    /*00013260*/ MOV         R0, #0 
    /*00013264*/ POP         {R4, PC} 
    VI_COMM_ViOnlineVpssOfflinePrepareNextFrame_x13268:
    /*00013268*/ MOV         R0, R4 
    /*0001326c*/ BL          0x0000000000011964 
    /*00013270*/ B           VI_COMM_ViOnlineVpssOfflinePrepareNextFrame_x13240
FUNC_END VI_COMM_ViOnlineVpssOfflinePrepareNextFrame


FUNC_BEGIN VI_COMM_ViOnlineVpssOnlinePrepareNextFrame
    /*00013274*/ PUSH        {R4, LR} 
    /*00013278*/ MOV         R4, R0 
    /*0001327c*/ BL          0x000000000001327C          @ VI_DRV_IsBnrSupport [R_ARM_CALL: .text+0x2770c] 
    /*00013280*/ CMP         R0, #1 
    /*00013284*/ BEQ         VI_COMM_ViOnlineVpssOnlinePrepareNextFrame_x13298
    VI_COMM_ViOnlineVpssOnlinePrepareNextFrame_x13288:
    /*00013288*/ MOV         R0, R4 
    /*0001328c*/ BL          0x000000000001328C          @ VI_DRV_PrepareNextFramePipeAttr [R_ARM_CALL: .text+0x2ea04] 
    /*00013290*/ MOV         R0, #0 
    /*00013294*/ POP         {R4, PC} 
    VI_COMM_ViOnlineVpssOnlinePrepareNextFrame_x13298:
    /*00013298*/ MOV         R0, R4 
    /*0001329c*/ BL          0x0000000000011964 
    /*000132a0*/ B           VI_COMM_ViOnlineVpssOnlinePrepareNextFrame_x13288
FUNC_END VI_COMM_ViOnlineVpssOnlinePrepareNextFrame


FUNC_BEGIN VI_COMM_ProcStartCap
    /*000132a4*/ PUSH        {R4, LR} 
    /*000132a8*/ BL          0x00000000000132A8          @ VI_DRV_ProcStartCap [R_ARM_CALL: .text+0x2eafc] 
    /*000132ac*/ MOV         R0, #0 
    /*000132b0*/ POP         {R4, PC} 
FUNC_END VI_COMM_ProcStartCap


FUNC_BEGIN VI_Statistic_ErrIntDetect
    /*000132b4*/ LDR         R2, [R0] 
    /*000132b8*/ MOV         R3, R0 
    /*000132bc*/ CMP         R2, #0 
    /*000132c0*/ BEQ         VI_Statistic_ErrIntDetect_x13344
    /*000132c4*/ LDR         R2, [R0, #8] 
    /*000132c8*/ CMP         R2, #0 
    /*000132cc*/ BEQ         VI_Statistic_ErrIntDetect_x132f8
    /*000132d0*/ LDR         R2, [R0, #24] 
    /*000132d4*/ MOV         R0, #1 
    /*000132d8*/ LDR         R1, [R3, #16] 
    /*000132dc*/ ADD         R2, R2, R0 
    /*000132e0*/ STR         R0, [R3, #4] 
    /*000132e4*/ CMP         R2, R1 
    /*000132e8*/ STR         R2, [R3, #24] 
    /*000132ec*/ BEQ         VI_Statistic_ErrIntDetect_x13368
    VI_Statistic_ErrIntDetect_x132f0:
    /*000132f0*/ MOV         R0, #1 
    /*000132f4*/ BX          LR 
    VI_Statistic_ErrIntDetect_x132f8:
    /*000132f8*/ CMP         R1, #0 
    /*000132fc*/ BEQ         VI_Statistic_ErrIntDetect_x13350
    /*00013300*/ LDR         R1, [R0, #20] 
    /*00013304*/ LDR         R0, [R0, #12] 
    /*00013308*/ ADD         R1, R1, #1 
    /*0001330c*/ STR         R1, [R3, #20] 
    /*00013310*/ CMP         R1, R0 
    /*00013314*/ BNE         VI_Statistic_ErrIntDetect_x13344
    /*00013318*/ LDR         R0, [R3, #16] 
    /*0001331c*/ MOV         R1, #1 
    /*00013320*/ STR         R2, [R3, #20] 
    /*00013324*/ CMP         R0, R1 
    /*00013328*/ STR         R1, [R3, #4] 
    /*0001332c*/ STR         R1, [R3, #8] 
    /*00013330*/ STR         R1, [R3, #24] 
    /*00013334*/ BNE         VI_Statistic_ErrIntDetect_x132f0
    /*00013338*/ STR         R2, [R3, #8] 
    /*0001333c*/ STR         R2, [R3, #24] 
    /*00013340*/ BX          LR 
    VI_Statistic_ErrIntDetect_x13344:
    /*00013344*/ MOV         R0, #0 
    /*00013348*/ STR         R0, [R3, #4] 
    /*0001334c*/ BX          LR 
    VI_Statistic_ErrIntDetect_x13350:
    /*00013350*/ MOV         R0, R1 
    /*00013354*/ STR         R1, [R3, #4] 
    /*00013358*/ STR         R1, [R3, #8] 
    /*0001335c*/ STR         R1, [R3, #24] 
    /*00013360*/ STR         R1, [R3, #20] 
    /*00013364*/ BX          LR 
    VI_Statistic_ErrIntDetect_x13368:
    /*00013368*/ MOV         R2, #0 
    /*0001336c*/ STR         R2, [R3, #8] 
    /*00013370*/ STR         R2, [R3, #24] 
    /*00013374*/ STR         R2, [R3, #20] 
    /*00013378*/ BX          LR 
FUNC_END VI_Statistic_ErrIntDetect


FUNC_BEGIN VI_COMM_ProcIntAnalysis
    /*0001337c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00013380*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00013384*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00013388*/ MOV         R5, R1 
    /*0001338c*/ LDR         R4, [R3, R0, LSL #2] 
    /*00013390*/ SUB         SP, SP, #16 
    /*00013394*/ MOV         R6, R2 
    /*00013398*/ ADD         R3, R4, #16384              @ 0x4000 
    /*0001339c*/ LDR         R3, [R3, #632]              @ 0x278 
    /*000133a0*/ CMP         R3, #1 
    /*000133a4*/ BEQ         VI_COMM_ProcIntAnalysis_x133d8
    /*000133a8*/ MOV         R1, R2 
    /*000133ac*/ MOV         R0, R5 
    /*000133b0*/ BL          0x00000000000133B0          @ VI_DRV_ProcIsWrongInt [R_ARM_CALL: .text+0x27288] 
    /*000133b4*/ MOV         R8, R0 
    VI_COMM_ProcIntAnalysis_x133b8:
    /*000133b8*/ ADD         R0, R4, #36608              @ 0x8f00 
    /*000133bc*/ MOV         R1, R8 
    /*000133c0*/ ADD         R0, R0, #20 
    /*000133c4*/ ADD         R4, R4, #32768              @ 0x8000 
    /*000133c8*/ BL          0x00000000000133C8          @ VI_Statistic_ErrIntDetect [R_ARM_CALL: .text+0x132b4] 
    /*000133cc*/ STR         R0, [R4, #3804]             @ 0xedc 
    /*000133d0*/ ADD         SP, SP, #16 
    /*000133d4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_COMM_ProcIntAnalysis_x133d8:
    /*000133d8*/ MOV         R7, R0 
    /*000133dc*/ MOV         R1, R2 
    /*000133e0*/ MOV         R0, R5 
    /*000133e4*/ BL          0x00000000000133E4          @ VI_DRV_ProcIsWrongInt [R_ARM_CALL: .text+0x27288] 
    /*000133e8*/ CMP         R0, #1 
    /*000133ec*/ MOV         R8, R0 
    /*000133f0*/ BNE         VI_COMM_ProcIntAnalysis_x133b8
    /*000133f4*/ MOV         R0, R7 
    /*000133f8*/ BL          0x00000000000133F8          @ VI_DRV_GetViprocDebug [R_ARM_CALL: .text+0x34440] 
    /*000133fc*/ MOVW        R3, #1406                   @ 0x57e 
    /*00013400*/ STR         R5, [SP, #8] 
    /*00013404*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57ac] 
    /*00013408*/ STR         R3, [SP] 
    /*0001340c*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57ac] 
    /*00013410*/ STR         R6, [SP, #4] 
    /*00013414*/ MOV         R1, #16 
    /*00013418*/ LDR         R3, [PC, #8]                @ 0x0000000000013428 
    /*0001341c*/ MOV         R0, #3 
    /*00013420*/ BL          0x0000000000013420          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013424*/ B           VI_COMM_ProcIntAnalysis_x133b8
    /*00013428*/ ANDEQ       R0, R0, IP, ASR SL 
FUNC_END VI_COMM_ProcIntAnalysis


FUNC_BEGIN VI_COMM_LostCfgIntRepair
    /*0001342c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00013430*/ CMP         R1, #1 
    /*00013434*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00013438*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001343c*/ LDR         R6, [R3, R0, LSL #2] 
    /*00013440*/ BNE         VI_COMM_LostCfgIntRepair_x13464
    /*00013444*/ ADD         R5, R6, #32768              @ 0x8000 
    /*00013448*/ LDR         R4, [R5, #3820]             @ 0xeec 
    /*0001344c*/ CMP         R4, #0 
    /*00013450*/ BEQ         VI_COMM_LostCfgIntRepair_x134b8
    /*00013454*/ CMP         R4, #1 
    /*00013458*/ STREQ       R4, [R5, #3804]             @ 0xedc 
    /*0001345c*/ STREQ       R4, [R5, #3820]             @ 0xeec 
    /*00013460*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_COMM_LostCfgIntRepair_x13464:
    /*00013464*/ ADD         R3, R6, #32768              @ 0x8000 
    /*00013468*/ LDR         R2, [R3, #3820]             @ 0xeec 
    /*0001346c*/ CMP         R2, #1 
    /*00013470*/ POPNE       {R4, R5, R6, R7, R8, PC} 
    /*00013474*/ ADD         R7, R6, #28672              @ 0x7000 
    /*00013478*/ STR         R2, [R3, #3804]             @ 0xedc 
    /*0001347c*/ MOV         R4, #0 
    /*00013480*/ STR         R4, [R3, #3820]             @ 0xeec 
    /*00013484*/ LDR         R3, [R7, #1160]             @ 0x488 
    /*00013488*/ CMP         R3, #1 
    /*0001348c*/ BEQ         VI_COMM_LostCfgIntRepair_x13520
    VI_COMM_LostCfgIntRepair_x13490:
    /*00013490*/ LDR         R3, [R7, #1172]             @ 0x494 
    /*00013494*/ CMP         R3, #1 
    /*00013498*/ POPNE       {R4, R5, R6, R7, R8, PC} 
    /*0001349c*/ ADD         R0, R6, #29440              @ 0x7300 
    /*000134a0*/ MOV         R1, #0 
    /*000134a4*/ ADD         R0, R0, #32 
    /*000134a8*/ BL          0x00000000000134A8          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*000134ac*/ MOV         R3, #0 
    /*000134b0*/ STR         R3, [R7, #1172]             @ 0x494 
    /*000134b4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_COMM_LostCfgIntRepair_x134b8:
    /*000134b8*/ ADD         R8, R6, #28928              @ 0x7100 
    /*000134bc*/ ADD         R7, R6, #28672              @ 0x7000 
    /*000134c0*/ ADD         R8, R8, #208                @ 0xd0 
    /*000134c4*/ STR         R1, [R5, #3804]             @ 0xedc 
    /*000134c8*/ MOV         R2, #712                    @ 0x2c8 
    /*000134cc*/ ADD         R1, R6, #16320              @ 0x3fc0 
    /*000134d0*/ MOV         R0, R8 
    /*000134d4*/ BL          0x00000000000134D4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000134d8*/ LDR         R3, [R7, #1160]             @ 0x488 
    /*000134dc*/ CMP         R3, #1 
    /*000134e0*/ BEQ         VI_COMM_LostCfgIntRepair_x13510
    VI_COMM_LostCfgIntRepair_x134e4:
    /*000134e4*/ LDR         R3, [R7, #1172]             @ 0x494 
    /*000134e8*/ CMP         R3, #1 
    /*000134ec*/ BEQ         VI_COMM_LostCfgIntRepair_x134fc
    VI_COMM_LostCfgIntRepair_x134f0:
    /*000134f0*/ MOV         R3, #1 
    /*000134f4*/ STR         R3, [R5, #3820]             @ 0xeec 
    /*000134f8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_COMM_LostCfgIntRepair_x134fc:
    /*000134fc*/ ADD         R0, R6, #29440              @ 0x7300 
    /*00013500*/ MOV         R1, #0 
    /*00013504*/ ADD         R0, R0, #32 
    /*00013508*/ BL          0x0000000000013508          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001350c*/ B           VI_COMM_LostCfgIntRepair_x134f0
    VI_COMM_LostCfgIntRepair_x13510:
    /*00013510*/ MOV         R1, R4 
    /*00013514*/ MOV         R0, R8 
    /*00013518*/ BL          0x0000000000013518          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001351c*/ B           VI_COMM_LostCfgIntRepair_x134e4
    VI_COMM_LostCfgIntRepair_x13520:
    /*00013520*/ ADD         R0, R6, #28928              @ 0x7100 
    /*00013524*/ MOV         R1, R4 
    /*00013528*/ ADD         R0, R0, #208                @ 0xd0 
    /*0001352c*/ BL          0x000000000001352C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00013530*/ STR         R4, [R7, #1160]             @ 0x488 
    /*00013534*/ B           VI_COMM_LostCfgIntRepair_x13490
FUNC_END VI_COMM_LostCfgIntRepair


FUNC_BEGIN VI_COMM_VIOnLineVPSSOffLineIrqRoute
    /*00013538*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001353c*/ MOV         SL, R0 
    /*00013540*/ SUB         SP, SP, #20 
    /*00013544*/ MOV         R9, R3 
    /*00013548*/ MOV         R8, R2 
    /*0001354c*/ BL          0x000000000001354C          @ VI_DRV_ClearAnyProcInt [R_ARM_CALL: .text+0x27724] 
    /*00013550*/ MOV         R0, SL 
    /*00013554*/ MOV         R4, #176                    @ 0xb0 
    /*00013558*/ BL          0x0000000000013558          @ VI_DRV_GetPipeByProcId [R_ARM_CALL: .text+0x27358] 
    /*0001355c*/ MOVW        R6, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00013560*/ MOVT        R6, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00013564*/ ADD         R1, SP, #12 
    /*00013568*/ MUL         R4, R4, R0 
    /*0001356c*/ MOV         R5, R0 
    /*00013570*/ ADD         R7, R4, #140                @ 0x8c 
    /*00013574*/ ADD         R7, R6, R7 
    /*00013578*/ MOV         R0, R7 
    /*0001357c*/ BL          0x000000000001357C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013580*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00013584*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00013588*/ LDR         R3, [R3, R5, LSL #2] 
    /*0001358c*/ CMP         R3, #0 
    /*00013590*/ BEQ         VI_COMM_VIOnLineVPSSOffLineIrqRoute_x136f0
    /*00013594*/ LDR         R2, [R6, R4] 
    /*00013598*/ ADD         R3, R6, R4 
    /*0001359c*/ CMP         R2, #0 
    /*000135a0*/ BNE         VI_COMM_VIOnLineVPSSOffLineIrqRoute_x135b0
    /*000135a4*/ LDR         R2, [R3, #4] 
    /*000135a8*/ CMP         R2, #0 
    /*000135ac*/ BEQ         VI_COMM_VIOnLineVPSSOffLineIrqRoute_x135ec
    VI_COMM_VIOnLineVPSSOffLineIrqRoute_x135b0:
    /*000135b0*/ ADD         R1, SP, #12 
    /*000135b4*/ MOV         R0, R7 
    /*000135b8*/ BL          0x00000000000135B8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000135bc*/ MOVW        R3, #1511                   @ 0x5e7 
    /*000135c0*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5828] 
    /*000135c4*/ STR         R3, [SP] 
    /*000135c8*/ STR         R5, [SP, #4] 
    /*000135cc*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5828] 
    /*000135d0*/ LDR         R3, [PC, #352]              @ 0x0000000000013738 
    /*000135d4*/ MOV         R1, #16 
    /*000135d8*/ MOV         R0, #7 
    /*000135dc*/ BL          0x00000000000135DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_COMM_VIOnLineVPSSOffLineIrqRoute_x135e0:
    /*000135e0*/ MOV         R0, #1 
    /*000135e4*/ ADD         SP, SP, #20 
    /*000135e8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_COMM_VIOnLineVPSSOffLineIrqRoute_x135ec:
    /*000135ec*/ MOV         R2, #1 
    /*000135f0*/ MOV         R0, R5 
    /*000135f4*/ STR         R2, [R3, #8] 
    /*000135f8*/ BL          0x00000000000135F8          @ VI_UpdateWorkingPipeChnMkpAttr [R_ARM_CALL: .text+0x2988] 
    /*000135fc*/ ADD         R1, SP, #12 
    /*00013600*/ MOV         R0, R7 
    /*00013604*/ BL          0x0000000000013604          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013608*/ MOV         R0, R5 
    /*0001360c*/ BL          0x000000000001360C          @ VI_IsUserPicEnable [R_ARM_CALL: .text+0x1dd94] 
    /*00013610*/ MOV         FP, R0 
    /*00013614*/ LDR         R0, [SP, #56]               @ 0x38 
    /*00013618*/ BL          0x0000000000013618          @ VI_DRV_IsProcTunlFinishIrq [R_ARM_CALL: .text+0x27704] 
    /*0001361c*/ CMP         R0, #0 
    /*00013620*/ BNE         VI_COMM_VIOnLineVPSSOffLineIrqRoute_x13680
    VI_COMM_VIOnLineVPSSOffLineIrqRoute_x13624:
    /*00013624*/ MOV         R0, SL 
    /*00013628*/ BL          0x0000000000013628          @ VI_DRV_GetFpnCalibrateStartFlag [R_ARM_CALL: .text+0x39f08] 
    /*0001362c*/ MOV         R1, R0 
    /*00013630*/ LDR         R0, [SP, #56]               @ 0x38 
    /*00013634*/ BL          0x0000000000013634          @ VI_DRV_IsProcFrameStartIrq [R_ARM_CALL: .text+0x2771c] 
    /*00013638*/ CMP         R0, #0 
    /*0001363c*/ BNE         VI_COMM_VIOnLineVPSSOffLineIrqRoute_x13694
    VI_COMM_VIOnLineVPSSOffLineIrqRoute_x13640:
    /*00013640*/ ADD         R1, SP, #12 
    /*00013644*/ MOV         R0, R7 
    /*00013648*/ BL          0x0000000000013648          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001364c*/ MOV         R3, #176                    @ 0xb0 
    /*00013650*/ MLA         R5, R3, R5, R6 
    /*00013654*/ ADD         R0, R4, #88                 @ 0x58 
    /*00013658*/ MOV         R3, #0 
    /*0001365c*/ ADD         R0, R6, R0 
    /*00013660*/ STR         R3, [R5, #8] 
    /*00013664*/ BL          0x0000000000013664          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00013668*/ MOV         R0, R7 
    /*0001366c*/ ADD         R1, SP, #12 
    /*00013670*/ BL          0x0000000000013670          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013674*/ MOV         R0, #1 
    /*00013678*/ ADD         SP, SP, #20 
    /*0001367c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_COMM_VIOnLineVPSSOffLineIrqRoute_x13680:
    /*00013680*/ MOV         R2, R8 
    /*00013684*/ MOV         R3, R9 
    /*00013688*/ MOV         R0, R5 
    /*0001368c*/ BL          0x000000000001368C          @ VI_COMM_ProcOnlineSendEarlyIntFrame [R_ARM_CALL: .text+0x12aa8] 
    /*00013690*/ B           VI_COMM_VIOnLineVPSSOffLineIrqRoute_x13624
    VI_COMM_VIOnLineVPSSOffLineIrqRoute_x13694:
    /*00013694*/ LDR         R2, [SP, #56]               @ 0x38 
    /*00013698*/ MOV         R1, #2 
    /*0001369c*/ MOV         R0, R5 
    /*000136a0*/ BL          0x00000000000136A0          @ VI_COMM_ProcIntAnalysis [R_ARM_CALL: .text+0x1337c] 
    /*000136a4*/ LDR         R1, [SP, #56]               @ 0x38 
    /*000136a8*/ MOV         R0, R5 
    /*000136ac*/ BL          0x00000000000136AC          @ VI_DRV_ProcIsLostCfgInt [R_ARM_CALL: .text+0x27300] 
    /*000136b0*/ MOV         R1, R0 
    /*000136b4*/ MOV         R0, R5 
    /*000136b8*/ BL          0x00000000000136B8          @ VI_COMM_LostCfgIntRepair [R_ARM_CALL: .text+0x1342c] 
    /*000136bc*/ CMP         FP, #1 
    /*000136c0*/ BEQ         VI_COMM_VIOnLineVPSSOffLineIrqRoute_x13724
    /*000136c4*/ MOV         R2, R8 
    /*000136c8*/ MOV         R3, R9 
    /*000136cc*/ MOV         R0, R5 
    /*000136d0*/ BL          0x00000000000136D0          @ VI_COMM_ProcOnlineSendLastFrame [R_ARM_CALL: .text+0x12b9c] 
    /*000136d4*/ MOV         R0, R5 
    /*000136d8*/ BL          0x00000000000136D8          @ VI_COMM_ProcOnlineUpdateAttr [R_ARM_CALL: .text+0x12d14] 
    /*000136dc*/ MOV         R0, R5 
    /*000136e0*/ BL          0x00000000000136E0          @ VI_COMM_ViOnlineVpssOfflinePrepareNextFrame [R_ARM_CALL: .text+0x1322c] 
    /*000136e4*/ MOV         R0, R5 
    /*000136e8*/ BL          0x00000000000136E8          @ VI_DRV_ProcStartCap [R_ARM_CALL: .text+0x2eafc] 
    /*000136ec*/ B           VI_COMM_VIOnLineVPSSOffLineIrqRoute_x13640
    VI_COMM_VIOnLineVPSSOffLineIrqRoute_x136f0:
    /*000136f0*/ ADD         R1, SP, #12 
    /*000136f4*/ MOV         R0, R7 
    /*000136f8*/ BL          0x00000000000136F8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000136fc*/ MOVW        R3, #1503                   @ 0x5df 
    /*00013700*/ STR         R5, [SP, #4] 
    /*00013704*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57f8] 
    /*00013708*/ STR         R3, [SP] 
    /*0001370c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57f8] 
    /*00013710*/ LDR         R3, [PC, #32]               @ 0x0000000000013738 
    /*00013714*/ MOV         R1, #16 
    /*00013718*/ MOV         R0, #3 
    /*0001371c*/ BL          0x000000000001371C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013720*/ B           VI_COMM_VIOnLineVPSSOffLineIrqRoute_x135e0
    VI_COMM_VIOnLineVPSSOffLineIrqRoute_x13724:
    /*00013724*/ MOV         R0, R5 
    /*00013728*/ BL          0x0000000000013728          @ VI_COMM_UserPicIrqRoute [R_ARM_CALL: .text+0x1da1c] 
    /*0001372c*/ MOV         R0, R5 
    /*00013730*/ BL          0x0000000000013730          @ VI_DRV_ProcRegNew [R_ARM_CALL: .text+0x2e368] 
    /*00013734*/ B           VI_COMM_VIOnLineVPSSOffLineIrqRoute_x13640
    /*00013738*/ ANDEQ       R0, R0, R4, ROR SL 
FUNC_END VI_COMM_VIOnLineVPSSOffLineIrqRoute


FUNC_BEGIN VI_COMM_VIOnLineVPSSOnLineIrqRoute
    /*0001373c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00013740*/ MOV         SL, R0 
    /*00013744*/ SUB         SP, SP, #20 
    /*00013748*/ MOV         R9, R3 
    /*0001374c*/ MOV         R8, R2 
    /*00013750*/ BL          0x0000000000013750          @ VI_DRV_ClearAnyProcInt [R_ARM_CALL: .text+0x27724] 
    /*00013754*/ MOV         R0, SL 
    /*00013758*/ MOV         R4, #176                    @ 0xb0 
    /*0001375c*/ BL          0x000000000001375C          @ VI_DRV_GetPipeByProcId [R_ARM_CALL: .text+0x27358] 
    /*00013760*/ MOVW        R6, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00013764*/ MOVT        R6, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00013768*/ ADD         R1, SP, #12 
    /*0001376c*/ MUL         R4, R4, R0 
    /*00013770*/ MOV         R5, R0 
    /*00013774*/ ADD         R7, R4, #140                @ 0x8c 
    /*00013778*/ ADD         R7, R6, R7 
    /*0001377c*/ MOV         R0, R7 
    /*00013780*/ BL          0x0000000000013780          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013784*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00013788*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001378c*/ LDR         R3, [R3, R5, LSL #2] 
    /*00013790*/ CMP         R3, #0 
    /*00013794*/ BEQ         VI_COMM_VIOnLineVPSSOnLineIrqRoute_x13894
    /*00013798*/ LDR         R2, [R6, R4] 
    /*0001379c*/ ADD         R3, R6, R4 
    /*000137a0*/ ADD         R1, SP, #12 
    /*000137a4*/ MOV         R0, R7 
    /*000137a8*/ CMP         R2, #0 
    /*000137ac*/ BNE         VI_COMM_VIOnLineVPSSOnLineIrqRoute_x137bc
    /*000137b0*/ LDR         R2, [R3, #4] 
    /*000137b4*/ CMP         R2, #0 
    /*000137b8*/ BEQ         VI_COMM_VIOnLineVPSSOnLineIrqRoute_x137f0
    VI_COMM_VIOnLineVPSSOnLineIrqRoute_x137bc:
    /*000137bc*/ BL          0x00000000000137BC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000137c0*/ MOV         R3, #1600                   @ 0x640 
    /*000137c4*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5868] 
    /*000137c8*/ STR         R3, [SP] 
    /*000137cc*/ STR         R5, [SP, #4] 
    /*000137d0*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5868] 
    /*000137d4*/ LDR         R3, [PC, #236]              @ 0x00000000000138c8 
    /*000137d8*/ MOV         R1, #16 
    /*000137dc*/ MOV         R0, #7 
    /*000137e0*/ BL          0x00000000000137E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_COMM_VIOnLineVPSSOnLineIrqRoute_x137e4:
    /*000137e4*/ MOV         R0, #1 
    /*000137e8*/ ADD         SP, SP, #20 
    /*000137ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_COMM_VIOnLineVPSSOnLineIrqRoute_x137f0:
    /*000137f0*/ MOV         FP, #1 
    /*000137f4*/ STR         FP, [R3, #8] 
    /*000137f8*/ BL          0x00000000000137F8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000137fc*/ MOV         R0, SL 
    /*00013800*/ BL          0x0000000000013800          @ VI_DRV_GetFpnCalibrateStartFlag [R_ARM_CALL: .text+0x39f08] 
    /*00013804*/ MOV         R1, R0 
    /*00013808*/ LDR         R0, [SP, #56]               @ 0x38 
    /*0001380c*/ BL          0x000000000001380C          @ VI_DRV_IsProcFrameStartIrq [R_ARM_CALL: .text+0x2771c] 
    /*00013810*/ CMP         R0, #0 
    /*00013814*/ BNE         VI_COMM_VIOnLineVPSSOnLineIrqRoute_x13858
    VI_COMM_VIOnLineVPSSOnLineIrqRoute_x13818:
    /*00013818*/ ADD         R1, SP, #12 
    /*0001381c*/ MOV         R0, R7 
    /*00013820*/ BL          0x0000000000013820          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013824*/ MOV         R3, #176                    @ 0xb0 
    /*00013828*/ MLA         R5, R3, R5, R6 
    /*0001382c*/ ADD         R0, R4, #88                 @ 0x58 
    /*00013830*/ MOV         R3, #0 
    /*00013834*/ ADD         R0, R6, R0 
    /*00013838*/ STR         R3, [R5, #8] 
    /*0001383c*/ BL          0x000000000001383C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00013840*/ MOV         R0, R7 
    /*00013844*/ ADD         R1, SP, #12 
    /*00013848*/ BL          0x0000000000013848          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001384c*/ MOV         R0, #1 
    /*00013850*/ ADD         SP, SP, #20 
    /*00013854*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_COMM_VIOnLineVPSSOnLineIrqRoute_x13858:
    /*00013858*/ MOV         R1, FP 
    /*0001385c*/ LDR         R2, [SP, #56]               @ 0x38 
    /*00013860*/ MOV         R0, R5 
    /*00013864*/ BL          0x0000000000013864          @ VI_COMM_ProcIntAnalysis [R_ARM_CALL: .text+0x1337c] 
    /*00013868*/ MOV         R2, R8 
    /*0001386c*/ MOV         R3, R9 
    /*00013870*/ MOV         R0, R5 
    /*00013874*/ BL          0x0000000000013874          @ VI_COMM_ProcOnlineSendLastFrame [R_ARM_CALL: .text+0x12b9c] 
    /*00013878*/ MOV         R0, R5 
    /*0001387c*/ BL          0x000000000001387C          @ VI_COMM_ProcOnlineUpdateAttr [R_ARM_CALL: .text+0x12d14] 
    /*00013880*/ MOV         R0, R5 
    /*00013884*/ BL          0x0000000000013884          @ VI_COMM_ViOnlineVpssOnlinePrepareNextFrame [R_ARM_CALL: .text+0x13274] 
    /*00013888*/ MOV         R0, R5 
    /*0001388c*/ BL          0x000000000001388C          @ VI_DRV_ProcStartCap [R_ARM_CALL: .text+0x2eafc] 
    /*00013890*/ B           VI_COMM_VIOnLineVPSSOnLineIrqRoute_x13818
    VI_COMM_VIOnLineVPSSOnLineIrqRoute_x13894:
    /*00013894*/ ADD         R1, SP, #12 
    /*00013898*/ MOV         R0, R7 
    /*0001389c*/ BL          0x000000000001389C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000138a0*/ MOVW        R3, #1592                   @ 0x638 
    /*000138a4*/ STR         R5, [SP, #4] 
    /*000138a8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57f8] 
    /*000138ac*/ STR         R3, [SP] 
    /*000138b0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57f8] 
    /*000138b4*/ LDR         R3, [PC, #12]               @ 0x00000000000138c8 
    /*000138b8*/ MOV         R1, #16 
    /*000138bc*/ MOV         R0, #3 
    /*000138c0*/ BL          0x00000000000138C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000138c4*/ B           VI_COMM_VIOnLineVPSSOnLineIrqRoute_x137e4
    /*000138c8*/ MULEQ       R0, R8, SL 
FUNC_END VI_COMM_VIOnLineVPSSOnLineIrqRoute


FUNC_BEGIN VI_COMM_ProcIrqRoute
    /*000138cc*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*000138d0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*000138d4*/ PUSH        {R4, R5, R6, R8, R9, LR} 
    /*000138d8*/ SUB         SP, SP, #16 
    /*000138dc*/ LDR         R4, [R3, #96]               @ 0x60 
    /*000138e0*/ SUBS        R4, R4, R0 
    /*000138e4*/ MOVNE       R4, #1 
    /*000138e8*/ MOV         R0, R4 
    /*000138ec*/ BL          0x00000000000138EC          @ VI_DRV_IsProcIdValid [R_ARM_CALL: .text+0x27264] 
    /*000138f0*/ CMP         R0, #0 
    /*000138f4*/ BEQ         VI_COMM_ProcIrqRoute_x13a08
    VI_COMM_ProcIrqRoute_x138f8:
    /*000138f8*/ MOV         R0, R4 
    /*000138fc*/ BL          0x00000000000138FC          @ VI_DRV_GetProcIrqStatus [R_ARM_CALL: .text+0x273a8] 
    /*00013900*/ MOV         R6, R0 
    /*00013904*/ BL          0x0000000000013904          @ VI_DRV_IsProcIrqValid [R_ARM_CALL: .text+0x27260] 
    /*00013908*/ CMP         R0, #0 
    /*0001390c*/ BEQ         VI_COMM_ProcIrqRoute_x139e8
    VI_COMM_ProcIrqRoute_x13910:
    /*00013910*/ MOV         R0, #2 
    /*00013914*/ BL          0x0000000000013914          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013918*/ LDR         R3, [R0] 
    /*0001391c*/ BLX         R3 
    /*00013920*/ MOV         R8, R0 
    /*00013924*/ MOV         R0, R4 
    /*00013928*/ MOV         R9, R1 
    /*0001392c*/ BL          0x000000000001392C          @ VI_DRV_ProcGetMode [R_ARM_CALL: .text+0x27210] 
    /*00013930*/ MOV         R5, R0 
    /*00013934*/ CMP         R0, #5 
    /*00013938*/ LDRLS       PC, [PC, R0, LSL #2] 
    /*0001393c*/ B           VI_COMM_ProcIrqRoute_x13a28
    /*00013940*/ LDRDEQ      R3, [R1], -R4 
    /*00013944*/ LDRDEQ      R3, [R1], -R4 
    /*00013948*/ @           <UNDEFINED> instruction: 0x000139bc 
    /*0001394c*/ ANDEQ       R3, R1, R4, LSR #19 
    /*00013950*/ ANDEQ       R3, R1, R8, ASR R9 
    /*00013954*/ ANDEQ       R3, R1, R8, ASR R9 
    /*00013958*/ MOV         R1, R0 
    /*0001395c*/ STR         R6, [SP] 
    /*00013960*/ MOV         R2, R8 
    /*00013964*/ MOV         R3, R9 
    /*00013968*/ MOV         R0, R4 
    /*0001396c*/ BL          0x000000000001396C          @ VI_COMM_VIParallelVPSSOffLineIrqRoute [R_ARM_CALL: .text+0x1610c] 
    VI_COMM_ProcIrqRoute_x13970:
    /*00013970*/ MOV         R0, #2 
    /*00013974*/ BL          0x0000000000013974          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013978*/ LDR         R3, [R0] 
    /*0001397c*/ BLX         R3 
    /*00013980*/ STRD        R8, [SP] 
    /*00013984*/ MOV         R2, R6 
    /*00013988*/ STRD        R0, [SP, #8] 
    /*0001398c*/ MOV         R0, R4 
    /*00013990*/ MOV         R1, R5 
    /*00013994*/ BL          0x0000000000013994          @ VI_COMM_ProcHwStatistic [R_ARM_CALL: .text+0x11ac8] 
    /*00013998*/ MOV         R0, #1 
    /*0001399c*/ ADD         SP, SP, #16 
    /*000139a0*/ POP         {R4, R5, R6, R8, R9, PC} 
    /*000139a4*/ STR         R6, [SP] 
    /*000139a8*/ MOV         R2, R8 
    /*000139ac*/ MOV         R3, R9 
    /*000139b0*/ MOV         R0, R4 
    /*000139b4*/ BL          0x00000000000139B4          @ VI_COMM_VIOnLineVPSSOnLineIrqRoute [R_ARM_CALL: .text+0x1373c] 
    /*000139b8*/ B           VI_COMM_ProcIrqRoute_x13970
    /*000139bc*/ STR         R6, [SP] 
    /*000139c0*/ MOV         R2, R8 
    /*000139c4*/ MOV         R3, R9 
    /*000139c8*/ MOV         R0, R4 
    /*000139cc*/ BL          0x00000000000139CC          @ VI_COMM_VIOnLineVPSSOffLineIrqRoute [R_ARM_CALL: .text+0x13538] 
    /*000139d0*/ B           VI_COMM_ProcIrqRoute_x13970
    /*000139d4*/ MOV         R1, R0 
    /*000139d8*/ MOV         R2, R6 
    /*000139dc*/ MOV         R0, R4 
    /*000139e0*/ BL          0x00000000000139E0          @ VI_COMM_VIOffLineVPSSOffLineIrqRoute [R_ARM_CALL: .text+0x127e4] 
    /*000139e4*/ B           VI_COMM_ProcIrqRoute_x13970
    VI_COMM_ProcIrqRoute_x139e8:
    /*000139e8*/ MOVW        R3, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x58b0] 
    /*000139ec*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55e4] 
    /*000139f0*/ MOVT        R3, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x58b0] 
    /*000139f4*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55e4] 
    /*000139f8*/ MOVW        R2, #1674                   @ 0x68a 
    /*000139fc*/ LDR         R1, [PC, #68]               @ 0x0000000000013a48 
    /*00013a00*/ BL          0x0000000000013A00          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00013a04*/ B           VI_COMM_ProcIrqRoute_x13910
    VI_COMM_ProcIrqRoute_x13a08:
    /*00013a08*/ MOVW        R3, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x58b0] 
    /*00013a0c*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55e4] 
    /*00013a10*/ MOVT        R3, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x58b0] 
    /*00013a14*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55e4] 
    /*00013a18*/ MOVW        R2, #1665                   @ 0x681 
    /*00013a1c*/ LDR         R1, [PC, #36]               @ 0x0000000000013a48 
    /*00013a20*/ BL          0x0000000000013A20          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00013a24*/ B           VI_COMM_ProcIrqRoute_x138f8
    VI_COMM_ProcIrqRoute_x13a28:
    /*00013a28*/ MOVW        R3, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x58b0] 
    /*00013a2c*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55e4] 
    /*00013a30*/ MOVT        R3, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x58b0] 
    /*00013a34*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55e4] 
    /*00013a38*/ MOVW        R2, #1709                   @ 0x6ad 
    /*00013a3c*/ LDR         R1, [PC, #4]                @ 0x0000000000013a48 
    /*00013a40*/ BL          0x0000000000013A40          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00013a44*/ B           VI_COMM_ProcIrqRoute_x13970
    /*00013a48*/ @           <UNDEFINED> instruction: 0x00000abc 
FUNC_END VI_COMM_ProcIrqRoute


FUNC_BEGIN VI_COMM_ProcGetIDByIrq
    /*00013a4c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00013a50*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00013a54*/ LDR         R3, [R3, #96]               @ 0x60 
    /*00013a58*/ SUBS        R0, R3, R0 
    /*00013a5c*/ MOVNE       R0, #1 
    /*00013a60*/ BX          LR 
FUNC_END VI_COMM_ProcGetIDByIrq


FUNC_BEGIN VI_PROC_COMM_PerDevInit
    /*00013a64*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00013a68*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00013a6c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00013a70*/ MOV         R1, #20 
    /*00013a74*/ MOV         R3, R0 
    /*00013a78*/ SUB         SP, SP, #12 
    /*00013a7c*/ MLA         R6, R1, R0, R4 
    /*00013a80*/ MOV         R5, R0 
    /*00013a84*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x58b4] 
    /*00013a88*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x58b4] 
    /*00013a8c*/ ADD         R6, R6, #100                @ 0x64 
    /*00013a90*/ MOV         R0, R6 
    /*00013a94*/ BL          0x0000000000013A94          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*00013a98*/ MOV         R0, R5 
    /*00013a9c*/ BL          0x0000000000013A9C          @ VI_DRV_ProcRegInit [R_ARM_CALL: .text+0x27c60] 
    /*00013aa0*/ SUBS        R7, R0, #0 
    /*00013aa4*/ BNE         VI_PROC_COMM_PerDevInit_x13af8
    /*00013aa8*/ ADD         R2, R5, #24 
    /*00013aac*/ MOVW        R1, #0                      @ VI_COMM_ProcIrqRoute [R_ARM_MOVW_ABS_NC: .text+0x138cc] 
    /*00013ab0*/ MOV         R3, R6 
    /*00013ab4*/ MOVT        R1, #0                      @ VI_COMM_ProcIrqRoute [R_ARM_MOVT_ABS: .text+0x138cc] 
    /*00013ab8*/ LDR         R0, [R4, R2, LSL #2] 
    /*00013abc*/ ADD         R4, R4, R2, LSL #2 
    /*00013ac0*/ MOV         R2, R7 
    /*00013ac4*/ STR         R4, [SP] 
    /*00013ac8*/ BL          0x0000000000013AC8          @ osal_request_irq [R_ARM_CALL: +0x0] 
    /*00013acc*/ CMP         R0, #0 
    /*00013ad0*/ BNE         VI_PROC_COMM_PerDevInit_x13b24
    /*00013ad4*/ MOV         R1, #1 
    /*00013ad8*/ MOV         R0, R5 
    /*00013adc*/ BL          0x0000000000013ADC          @ VI_DRV_ProcReset [R_ARM_CALL: .text+0x257c8] 
    /*00013ae0*/ MOV         R1, R7 
    /*00013ae4*/ MOV         R0, R5 
    /*00013ae8*/ BL          0x0000000000013AE8          @ VI_DRV_ProcClkEnable [R_ARM_CALL: .text+0x2578c] 
    VI_PROC_COMM_PerDevInit_x13aec:
    /*00013aec*/ MOV         R0, R7 
    /*00013af0*/ ADD         SP, SP, #12 
    /*00013af4*/ POP         {R4, R5, R6, R7, PC} 
    VI_PROC_COMM_PerDevInit_x13af8:
    /*00013af8*/ MOVW        R3, #1730                   @ 0x6c2 
    /*00013afc*/ STR         R5, [SP, #4] 
    /*00013b00*/ STR         R3, [SP] 
    /*00013b04*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x58c0] 
    /*00013b08*/ LDR         R3, [PC, #72]               @ 0x0000000000013b58 
    /*00013b0c*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x58c0] 
    /*00013b10*/ MOV         R1, #16 
    /*00013b14*/ MOV         R0, #0 
    /*00013b18*/ BL          0x0000000000013B18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013b1c*/ MVN         R7, #0 
    /*00013b20*/ B           VI_PROC_COMM_PerDevInit_x13aec
    VI_PROC_COMM_PerDevInit_x13b24:
    /*00013b24*/ MOV         R0, R7 
    /*00013b28*/ MOVW        R3, #1737                   @ 0x6c9 
    /*00013b2c*/ MOV         R1, #16 
    /*00013b30*/ STR         R3, [SP] 
    /*00013b34*/ STR         R6, [SP, #4] 
    /*00013b38*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x58fc] 
    /*00013b3c*/ LDR         R3, [PC, #20]               @ 0x0000000000013b58 
    /*00013b40*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x58fc] 
    /*00013b44*/ BL          0x0000000000013B44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013b48*/ MOV         R0, R5 
    /*00013b4c*/ BL          0x0000000000013B4C          @ VI_DRV_ProcRegExit [R_ARM_CALL: .text+0x27c64] 
    /*00013b50*/ MVN         R7, #0 
    /*00013b54*/ B           VI_PROC_COMM_PerDevInit_x13aec
    /*00013b58*/ LDRDEQ      R0, [R0], -R4 
FUNC_END VI_PROC_COMM_PerDevInit


FUNC_BEGIN VI_PROC_COMM_PerDevExit
    /*00013b5c*/ PUSH        {R4, LR} 
    /*00013b60*/ MOV         R4, R0 
    /*00013b64*/ BL          0x0000000000013B64          @ VI_DRV_ProcRegExit [R_ARM_CALL: .text+0x27c64] 
    /*00013b68*/ ADD         R0, R4, #24 
    /*00013b6c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00013b70*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00013b74*/ ADD         R1, R3, R0, LSL #2 
    /*00013b78*/ POP         {R4, LR} 
    /*00013b7c*/ LDR         R0, [R3, R0, LSL #2] 
    VI_PROC_COMM_PerDevExit_x13b80:
    /*00013b80*/ B           VI_PROC_COMM_PerDevExit_x13b80@ osal_free_irq [R_ARM_JUMP24: +0x0] 
FUNC_END VI_PROC_COMM_PerDevExit


FUNC_BEGIN VI_PROC_COMM_DevInit
    /*00013b84*/ PUSH        {R4, R5, R6, LR} 
    /*00013b88*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00013b8c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00013b90*/ SUB         SP, SP, #8 
    /*00013b94*/ ADD         R0, R4, #96                 @ 0x60 
    /*00013b98*/ BL          0x0000000000013B98          @ VI_DRV_GetAllProcIrqId [R_ARM_CALL: .text+0x27270] 
    /*00013b9c*/ MOV         R0, #0 
    /*00013ba0*/ BL          0x0000000000013BA0          @ VI_PROC_COMM_PerDevInit [R_ARM_CALL: .text+0x13a64] 
    /*00013ba4*/ SUBS        R6, R0, #0 
    /*00013ba8*/ BNE         VI_PROC_COMM_DevInit_x13c64
    /*00013bac*/ MOV         R1, #5 
    /*00013bb0*/ MOV         R0, R4 
    /*00013bb4*/ BL          0x0000000000013BB4          @ VI_NODE_CreatNodeQueue [R_ARM_CALL: .text+0x165b0] 
    /*00013bb8*/ SUBS        R5, R0, #0 
    /*00013bbc*/ BNE         VI_PROC_COMM_DevInit_x13c28
    /*00013bc0*/ MOV         R2, #16 
    /*00013bc4*/ MOV         R1, R5 
    /*00013bc8*/ ADD         R0, R4, #528                @ 0x210 
    /*00013bcc*/ MOV         R3, #1 
    /*00013bd0*/ STR         R5, [R4, #80]               @ 0x50 
    /*00013bd4*/ STR         R3, [R4, #548]              @ 0x224 
    /*00013bd8*/ STR         R5, [R4, #84]               @ 0x54 
    /*00013bdc*/ STR         R5, [R4, #88]               @ 0x58 
    /*00013be0*/ STR         R5, [R4, #92]               @ 0x5c 
    /*00013be4*/ STR         R5, [R4, #552]              @ 0x228 
    /*00013be8*/ BL          0x0000000000013BE8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00013bec*/ MOV         R2, #4 
    /*00013bf0*/ MOV         R1, R5 
    /*00013bf4*/ ADD         R0, R4, #76                 @ 0x4c 
    /*00013bf8*/ BL          0x0000000000013BF8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00013bfc*/ MOV         R2, #256                    @ 0x100 
    /*00013c00*/ MOV         R1, R5 
    /*00013c04*/ ADD         R0, R4, #568                @ 0x238 
    /*00013c08*/ BL          0x0000000000013C08          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00013c0c*/ ADD         R0, R4, #144                @ 0x90 
    /*00013c10*/ MOV         R2, #384                    @ 0x180 
    /*00013c14*/ MOV         R1, R5 
    /*00013c18*/ BL          0x0000000000013C18          @ osal_memset [R_ARM_CALL: +0x0] 
    VI_PROC_COMM_DevInit_x13c1c:
    /*00013c1c*/ MOV         R0, R5 
    /*00013c20*/ ADD         SP, SP, #8 
    /*00013c24*/ POP         {R4, R5, R6, PC} 
    VI_PROC_COMM_DevInit_x13c28:
    /*00013c28*/ MOV         R1, #16 
    /*00013c2c*/ MOVW        R3, #1794                   @ 0x702 
    /*00013c30*/ MOV         R0, R6 
    /*00013c34*/ STR         R3, [SP] 
    /*00013c38*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5934] 
    /*00013c3c*/ LDR         R3, [PC, #40]               @ 0x0000000000013c6c 
    /*00013c40*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5934] 
    /*00013c44*/ MVN         R5, #0 
    /*00013c48*/ BL          0x0000000000013C48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013c4c*/ MOV         R0, R6 
    /*00013c50*/ BL          0x0000000000013C50          @ VI_DRV_ProcRegExit [R_ARM_CALL: .text+0x27c64] 
    /*00013c54*/ MOV         R1, R4 
    /*00013c58*/ LDR         R0, [R1, #96]!              @ 0x60 
    /*00013c5c*/ BL          0x0000000000013C5C          @ osal_free_irq [R_ARM_CALL: +0x0] 
    /*00013c60*/ B           VI_PROC_COMM_DevInit_x13c1c
    VI_PROC_COMM_DevInit_x13c64:
    /*00013c64*/ MVN         R5, #0 
    /*00013c68*/ B           VI_PROC_COMM_DevInit_x13c1c
    /*00013c6c*/ ANDEQ       R0, R0, IP, ROR #21 
FUNC_END VI_PROC_COMM_DevInit


FUNC_BEGIN VI_PROC_COMM_DevExit
    /*00013c70*/ PUSH        {R4, LR} 
    /*00013c74*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00013c78*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00013c7c*/ MOV         R0, R4 
    /*00013c80*/ BL          0x0000000000013C80          @ VI_NODE_DestroyNodeQueue [R_ARM_CALL: .text+0x166b8] 
    /*00013c84*/ MOV         R0, #0 
    /*00013c88*/ BL          0x0000000000013C88          @ VI_DRV_ProcRegExit [R_ARM_CALL: .text+0x27c64] 
    /*00013c8c*/ ADD         R1, R4, #96                 @ 0x60 
    /*00013c90*/ LDR         R0, [R4, #96]               @ 0x60 
    /*00013c94*/ POP         {R4, LR} 
    VI_PROC_COMM_DevExit_x13c98:
    /*00013c98*/ B           VI_PROC_COMM_DevExit_x13c98 @ osal_free_irq [R_ARM_JUMP24: +0x0] 
FUNC_END VI_PROC_COMM_DevExit


FUNC_BEGIN VI_COMM_IsPipeStart
    /*00013c9c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00013ca0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00013ca4*/ PUSH        {R4, LR} 
    /*00013ca8*/ MOV         R2, R0 
    /*00013cac*/ LDR         R4, [R3, R0, LSL #2] 
    /*00013cb0*/ SUB         SP, SP, #8 
    /*00013cb4*/ CMP         R4, #0 
    /*00013cb8*/ BEQ         VI_COMM_IsPipeStart_x13d0c
    /*00013cbc*/ ADD         R4, R4, #36864              @ 0x9000 
    /*00013cc0*/ LDR         R0, [R4, #2224]             @ 0x8b0 
    /*00013cc4*/ CMP         R0, #1 
    /*00013cc8*/ BEQ         VI_COMM_IsPipeStart_x13d04
    /*00013ccc*/ LDR         R3, [R4, #388]              @ 0x184 
    /*00013cd0*/ CMP         R3, #2 
    /*00013cd4*/ MOVEQ       R0, #1 
    /*00013cd8*/ BEQ         VI_COMM_IsPipeStart_x13d04
    /*00013cdc*/ STR         R2, [SP, #4] 
    /*00013ce0*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x59b0] 
    /*00013ce4*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x59b0] 
    /*00013ce8*/ MOV         R3, #1856                   @ 0x740 
    /*00013cec*/ STR         R3, [SP] 
    VI_COMM_IsPipeStart_x13cf0:
    /*00013cf0*/ LDR         R3, [PC, #44]               @ 0x0000000000013d24 
    /*00013cf4*/ MOV         R1, #16 
    /*00013cf8*/ MOV         R0, #3 
    /*00013cfc*/ BL          0x0000000000013CFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013d00*/ MOV         R0, #0 
    VI_COMM_IsPipeStart_x13d04:
    /*00013d04*/ ADD         SP, SP, #8 
    /*00013d08*/ POP         {R4, PC} 
    VI_COMM_IsPipeStart_x13d0c:
    /*00013d0c*/ MOVW        R3, #1848                   @ 0x738 
    /*00013d10*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5974] 
    /*00013d14*/ STR         R0, [SP, #4] 
    /*00013d18*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5974] 
    /*00013d1c*/ STR         R3, [SP] 
    /*00013d20*/ B           VI_COMM_IsPipeStart_x13cf0
    /*00013d24*/ ANDEQ       R0, R0, R4, LSL #22 
FUNC_END VI_COMM_IsPipeStart


FUNC_BEGIN VI_COMM_DetectWchIntErr
    /*00013d28*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00013d2c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00013d30*/ MOV         R5, R1 
    /*00013d34*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00013d38*/ ANDS        R1, R1, #8 
    /*00013d3c*/ SUB         SP, SP, #92                 @ 0x5c 
    /*00013d40*/ MOV         R7, R0 
    /*00013d44*/ LDR         R6, [R3, R0, LSL #2] 
    /*00013d48*/ BNE         VI_COMM_DetectWchIntErr_x13e6c
    VI_COMM_DetectWchIntErr_x13d4c:
    /*00013d4c*/ TST         R5, #4 
    /*00013d50*/ BNE         VI_COMM_DetectWchIntErr_x13e24
    VI_COMM_DetectWchIntErr_x13d54:
    /*00013d54*/ TST         R5, #13 
    /*00013d58*/ BEQ         VI_COMM_DetectWchIntErr_x13d84
    /*00013d5c*/ TST         R5, #2 
    /*00013d60*/ ADDEQ       R4, R6, #32768              @ 0x8000 
    /*00013d64*/ BEQ         VI_COMM_DetectWchIntErr_x13ddc
    /*00013d68*/ CMP         R1, #0 
    /*00013d6c*/ BNE         VI_COMM_DetectWchIntErr_x13f54
    VI_COMM_DetectWchIntErr_x13d70:
    /*00013d70*/ ADD         R0, R6, #36352              @ 0x8e00 
    /*00013d74*/ ADD         R0, R0, #172                @ 0xac 
    /*00013d78*/ BL          0x0000000000013D78          @ VI_Statistic_ErrIntDetect [R_ARM_CALL: .text+0x132b4] 
    /*00013d7c*/ ADD         SP, SP, #92                 @ 0x5c 
    /*00013d80*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_COMM_DetectWchIntErr_x13d84:
    /*00013d84*/ ADD         R4, R6, #32768              @ 0x8000 
    /*00013d88*/ MOVW        LR, #1911                   @ 0x777 
    /*00013d8c*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ad4] 
    /*00013d90*/ LDR         R3, [PC, #452]              @ 0x0000000000013f5c 
    /*00013d94*/ LDR         IP, [R4, #3676]             @ 0xe5c 
    /*00013d98*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ad4] 
    /*00013d9c*/ LDR         R0, [R4, #3668]             @ 0xe54 
    /*00013da0*/ MOV         R1, #16 
    /*00013da4*/ ADD         IP, IP, #1 
    /*00013da8*/ STR         IP, [R4, #3676]             @ 0xe5c 
    /*00013dac*/ LDR         IP, [R4, #3672]             @ 0xe58 
    /*00013db0*/ ADD         R0, R0, #1 
    /*00013db4*/ STR         R0, [R4, #3668]             @ 0xe54 
    /*00013db8*/ MOV         R0, #3 
    /*00013dbc*/ ADD         IP, IP, #1 
    /*00013dc0*/ STR         IP, [R4, #3672]             @ 0xe58 
    /*00013dc4*/ STR         R5, [SP, #8] 
    /*00013dc8*/ STR         R7, [SP, #4] 
    /*00013dcc*/ STR         LR, [SP] 
    /*00013dd0*/ BL          0x0000000000013DD0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013dd4*/ TST         R5, #2 
    /*00013dd8*/ BNE         VI_COMM_DetectWchIntErr_x13e04
    VI_COMM_DetectWchIntErr_x13ddc:
    /*00013ddc*/ MOVW        R3, #1917                   @ 0x77d 
    /*00013de0*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b0c] 
    /*00013de4*/ STR         R3, [SP] 
    /*00013de8*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b0c] 
    /*00013dec*/ STR         R5, [SP, #8] 
    /*00013df0*/ MOV         R1, #16 
    /*00013df4*/ STR         R7, [SP, #4] 
    /*00013df8*/ MOV         R0, #3 
    /*00013dfc*/ LDR         R3, [PC, #344]              @ 0x0000000000013f5c 
    /*00013e00*/ BL          0x0000000000013E00          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_COMM_DetectWchIntErr_x13e04:
    /*00013e04*/ LDR         R2, [R4, #3668]             @ 0xe54 
    /*00013e08*/ MOV         R1, #1 
    /*00013e0c*/ LDR         R3, [R4, #3672]             @ 0xe58 
    /*00013e10*/ ADD         R2, R2, R1 
    /*00013e14*/ STR         R2, [R4, #3668]             @ 0xe54 
    /*00013e18*/ ADD         R3, R3, R1 
    /*00013e1c*/ STR         R3, [R4, #3672]             @ 0xe58 
    /*00013e20*/ B           VI_COMM_DetectWchIntErr_x13d70
    VI_COMM_DetectWchIntErr_x13e24:
    /*00013e24*/ ADD         R4, R6, #32768              @ 0x8000 
    /*00013e28*/ MOVW        IP, #1901                   @ 0x76d 
    /*00013e2c*/ MOV         R1, #16 
    /*00013e30*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5aa0] 
    /*00013e34*/ LDR         R0, [R4, #3676]             @ 0xe5c 
    /*00013e38*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5aa0] 
    /*00013e3c*/ LDR         R3, [R4, #3856]             @ 0xf10 
    /*00013e40*/ ADD         R0, R0, #1 
    /*00013e44*/ STR         R0, [R4, #3676]             @ 0xe5c 
    /*00013e48*/ ADD         R3, R3, #1 
    /*00013e4c*/ MOV         R0, #3 
    /*00013e50*/ STR         R3, [R4, #3856]             @ 0xf10 
    /*00013e54*/ LDR         R3, [PC, #256]              @ 0x0000000000013f5c 
    /*00013e58*/ STR         R7, [SP, #4] 
    /*00013e5c*/ STR         IP, [SP] 
    /*00013e60*/ BL          0x0000000000013E60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013e64*/ MOV         R1, #1 
    /*00013e68*/ B           VI_COMM_DetectWchIntErr_x13d54
    VI_COMM_DetectWchIntErr_x13e6c:
    /*00013e6c*/ ADD         R4, R6, #32768              @ 0x8000 
    /*00013e70*/ MOV         R0, #2 
    /*00013e74*/ ADD         R1, R4, #3664               @ 0xe50 
    /*00013e78*/ ADD         R8, SP, #24 
    /*00013e7c*/ ADD         R9, SP, #56                 @ 0x38 
    /*00013e80*/ LDM         R1, {R1, R2, R3} 
    /*00013e84*/ ADD         R2, R2, #1 
    /*00013e88*/ ADD         R1, R1, #1 
    /*00013e8c*/ STR         R2, [R4, #3668]             @ 0xe54 
    /*00013e90*/ ADD         R3, R3, #1 
    /*00013e94*/ STR         R1, [R4, #3664]             @ 0xe50 
    /*00013e98*/ STR         R3, [R4, #3672]             @ 0xe58 
    /*00013e9c*/ BL          0x0000000000013E9C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013ea0*/ LDR         R3, [R0] 
    /*00013ea4*/ BLX         R3 
    /*00013ea8*/ MOVW        R3, #36448                  @ 0x8e60 
    /*00013eac*/ ADD         R2, R6, R3 
    /*00013eb0*/ LDR         R3, [R6, R3] 
    /*00013eb4*/ LDR         IP, [R2, #4] 
    /*00013eb8*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x59f8] 
    /*00013ebc*/ STR         R3, [SP] 
    /*00013ec0*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x59f8] 
    /*00013ec4*/ STR         IP, [SP, #4] 
    /*00013ec8*/ MOV         SL, R0 
    /*00013ecc*/ MOV         FP, R1 
    /*00013ed0*/ MOV         R0, R8 
    /*00013ed4*/ MOV         R1, #32 
    /*00013ed8*/ SUB         R4, SL, R3 
    /*00013edc*/ BL          0x0000000000013EDC          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*00013ee0*/ MOV         R1, #32 
    /*00013ee4*/ STM         SP, {SL, FP} 
    /*00013ee8*/ MOV         R0, R9 
    /*00013eec*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x59f8] 
    /*00013ef0*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x59f8] 
    /*00013ef4*/ BL          0x0000000000013EF4          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*00013ef8*/ MOVW        R3, #1890                   @ 0x762 
    /*00013efc*/ MOV         R1, #16 
    /*00013f00*/ STR         R3, [SP] 
    /*00013f04*/ STR         R7, [SP, #4] 
    /*00013f08*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a00] 
    /*00013f0c*/ LDR         R3, [PC, #72]               @ 0x0000000000013f5c 
    /*00013f10*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a00] 
    /*00013f14*/ MOV         R0, #3 
    /*00013f18*/ BL          0x0000000000013F18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013f1c*/ MOVW        R3, #1892                   @ 0x764 
    /*00013f20*/ MOV         R1, #16 
    /*00013f24*/ STR         R3, [SP] 
    /*00013f28*/ STR         R4, [SP, #8] 
    /*00013f2c*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a38] 
    /*00013f30*/ STR         R9, [SP, #16] 
    /*00013f34*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a38] 
    /*00013f38*/ STR         R8, [SP, #12] 
    /*00013f3c*/ MOV         R0, #3 
    /*00013f40*/ STR         R7, [SP, #4] 
    /*00013f44*/ LDR         R3, [PC, #16]               @ 0x0000000000013f5c 
    /*00013f48*/ BL          0x0000000000013F48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013f4c*/ MOV         R1, #1 
    /*00013f50*/ B           VI_COMM_DetectWchIntErr_x13d4c
    VI_COMM_DetectWchIntErr_x13f54:
    /*00013f54*/ ADD         R4, R6, #32768              @ 0x8000 
    /*00013f58*/ B           VI_COMM_DetectWchIntErr_x13e04
    /*00013f5c*/ ANDEQ       R0, R0, R8, LSL FP 
FUNC_END VI_COMM_DetectWchIntErr


FUNC_BEGIN VI_COMM_CapStatisticsIntTime
    /*00013f60*/ MOVW        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00013f64*/ MOVT        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00013f68*/ PUSH        {R4, R5, R6, LR} 
    /*00013f6c*/ MOV         R4, R2 
    /*00013f70*/ LDR         R2, [R1, R0, LSL #2] 
    /*00013f74*/ SUB         SP, SP, #16 
    /*00013f78*/ MOV         R6, R0 
    /*00013f7c*/ ADD         R5, R2, #32768              @ 0x8000 
    /*00013f80*/ LDR         R1, [R5, #3704]             @ 0xe78 
    /*00013f84*/ CMP         R1, #1 
    /*00013f88*/ BEQ         VI_COMM_CapStatisticsIntTime_x14020
    VI_COMM_CapStatisticsIntTime_x13f8c:
    /*00013f8c*/ MOVW        R1, #36448                  @ 0x8e60 
    /*00013f90*/ ADD         IP, R2, R1 
    /*00013f94*/ STR         R4, [R2, R1] 
    /*00013f98*/ MOV         R0, #2 
    /*00013f9c*/ STR         R3, [IP, #4] 
    /*00013fa0*/ BL          0x0000000000013FA0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013fa4*/ LDR         R3, [R0] 
    /*00013fa8*/ BLX         R3 
    /*00013fac*/ MOVW        R3, #0                      @ int_time [R_ARM_MOVW_ABS_NC: .data+0x108] 
    /*00013fb0*/ MOVT        R3, #0                      @ int_time [R_ARM_MOVT_ABS: .data+0x108] 
    /*00013fb4*/ LDR         R3, [R3] 
    /*00013fb8*/ SUB         R0, R0, R4 
    /*00013fbc*/ STR         R0, [R5, #3688]             @ 0xe68 
    /*00013fc0*/ CMP         R0, R3 
    /*00013fc4*/ BHI         VI_COMM_CapStatisticsIntTime_x13fe4
    VI_COMM_CapStatisticsIntTime_x13fc8:
    /*00013fc8*/ LDR         R3, [R5, #3692]             @ 0xe6c 
    /*00013fcc*/ CMP         R3, R0 
    /*00013fd0*/ MOV         R3, #1 
    /*00013fd4*/ STRCC       R0, [R5, #3692]             @ 0xe6c 
    /*00013fd8*/ STR         R3, [R5, #3704]             @ 0xe78 
    /*00013fdc*/ ADD         SP, SP, #16 
    /*00013fe0*/ POP         {R4, R5, R6, PC} 
    VI_COMM_CapStatisticsIntTime_x13fe4:
    /*00013fe4*/ STR         R0, [SP, #8] 
    /*00013fe8*/ MOVW        R3, #1955                   @ 0x7a3 
    /*00013fec*/ STR         R6, [SP, #4] 
    /*00013ff0*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b54] 
    /*00013ff4*/ STR         R3, [SP] 
    /*00013ff8*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b54] 
    /*00013ffc*/ LDR         R3, [PC, #60]               @ 0x0000000000014040 
    /*00014000*/ MOV         R1, #16 
    /*00014004*/ MOV         R0, #4 
    /*00014008*/ BL          0x0000000000014008          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001400c*/ LDR         R3, [R5, #3708]             @ 0xe7c 
    /*00014010*/ LDR         R0, [R5, #3688]             @ 0xe68 
    /*00014014*/ ADD         R3, R3, #1 
    /*00014018*/ STR         R3, [R5, #3708]             @ 0xe7c 
    /*0001401c*/ B           VI_COMM_CapStatisticsIntTime_x13fc8
    VI_COMM_CapStatisticsIntTime_x14020:
    /*00014020*/ MOVW        R1, #36448                  @ 0x8e60 
    /*00014024*/ LDR         R0, [R5, #3700]             @ 0xe74 
    /*00014028*/ LDR         R1, [R2, R1] 
    /*0001402c*/ SUB         R1, R4, R1 
    /*00014030*/ STR         R1, [R5, #3696]             @ 0xe70 
    /*00014034*/ CMP         R1, R0 
    /*00014038*/ STRHI       R1, [R5, #3700]             @ 0xe74 
    /*0001403c*/ B           VI_COMM_CapStatisticsIntTime_x13f8c
    /*00014040*/ ANDEQ       R0, R0, R0, LSR FP 
FUNC_END VI_COMM_CapStatisticsIntTime


FUNC_BEGIN VI_COMM_CapSendDumpFrame
    /*00014044*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00014048*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001404c*/ SUB         SP, SP, #28 
    /*00014050*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00014054*/ ADD         R1, SP, #12 
    /*00014058*/ MOV         R4, R0 
    /*0001405c*/ LDR         R5, [R3, R0, LSL #2] 
    /*00014060*/ BL          0x0000000000014060          @ VI_DRV_GetWorkingPipeDumpAttr [R_ARM_CALL: .text+0x32b0c] 
    /*00014064*/ LDR         R3, [SP, #12] 
    /*00014068*/ CMP         R3, #0 
    /*0001406c*/ BEQ         VI_COMM_CapSendDumpFrame_x14080
    /*00014070*/ ADD         R3, R5, #12288              @ 0x3000 
    /*00014074*/ LDR         R2, [R3, #2664]             @ 0xa68 
    /*00014078*/ CMP         R2, #0 
    /*0001407c*/ BNE         VI_COMM_CapSendDumpFrame_x14088
    VI_COMM_CapSendDumpFrame_x14080:
    /*00014080*/ ADD         SP, SP, #28 
    /*00014084*/ POP         {R4, R5, R6, R7, PC} 
    VI_COMM_CapSendDumpFrame_x14088:
    /*00014088*/ LDR         R3, [R3, #2668]             @ 0xa6c 
    /*0001408c*/ CMP         R3, #0 
    /*00014090*/ BEQ         VI_COMM_CapSendDumpFrame_x14080
    /*00014094*/ MOV         R0, R4 
    /*00014098*/ BL          0x0000000000014098          @ VI_SNAP_IsValidDumpFrame [R_ARM_CALL: .text+0x1abf4] 
    /*0001409c*/ CMP         R0, #0 
    /*000140a0*/ BEQ         VI_COMM_CapSendDumpFrame_x14080
    /*000140a4*/ LDR         R3, [SP, #16] 
    /*000140a8*/ CMP         R3, #0 
    /*000140ac*/ ADDNE       R7, R5, #76                 @ 0x4c 
    /*000140b0*/ BNE         VI_COMM_CapSendDumpFrame_x140d0
    /*000140b4*/ B           VI_COMM_CapSendDumpFrame_x14080
    VI_COMM_CapSendDumpFrame_x140b8:
    /*000140b8*/ SUBS        R0, R6, #580                @ 0x244 
    /*000140bc*/ BEQ         VI_COMM_CapSendDumpFrame_x140f8
    /*000140c0*/ BL          0x00000000000140C0          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*000140c4*/ MOV         R1, R6 
    /*000140c8*/ MOV         R0, R7 
    /*000140cc*/ BL          0x00000000000140CC          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    VI_COMM_CapSendDumpFrame_x140d0:
    /*000140d0*/ MOV         R0, R7 
    /*000140d4*/ BL          0x00000000000140D4          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*000140d8*/ LDR         R3, [SP, #16] 
    /*000140dc*/ CMP         R0, R3 
    /*000140e0*/ MOV         R0, R7 
    /*000140e4*/ BCC         VI_COMM_CapSendDumpFrame_x14120
    /*000140e8*/ BL          0x00000000000140E8          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*000140ec*/ MOV         R1, #0 
    /*000140f0*/ SUBS        R6, R0, #0 
    /*000140f4*/ BNE         VI_COMM_CapSendDumpFrame_x140b8
    VI_COMM_CapSendDumpFrame_x140f8:
    /*000140f8*/ MOVW        R3, #2018                   @ 0x7e2 
    /*000140fc*/ STR         R4, [SP, #4] 
    /*00014100*/ STR         R3, [SP] 
    /*00014104*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b94] 
    /*00014108*/ LDR         R3, [PC, #136]              @ 0x0000000000014198 
    /*0001410c*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b94] 
    /*00014110*/ MOV         R1, #16 
    /*00014114*/ MOV         R0, #3 
    /*00014118*/ BL          0x0000000000014118          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001411c*/ B           VI_COMM_CapSendDumpFrame_x14080
    VI_COMM_CapSendDumpFrame_x14120:
    /*00014120*/ BL          0x0000000000014120          @ VI_QueueGetFree [R_ARM_CALL: .text+0x161cc] 
    /*00014124*/ CMP         R0, #0 
    /*00014128*/ BEQ         VI_COMM_CapSendDumpFrame_x14174
    /*0001412c*/ SUBS        R6, R0, #580                @ 0x244 
    /*00014130*/ BEQ         VI_COMM_CapSendDumpFrame_x14174
    VI_COMM_CapSendDumpFrame_x14134:
    /*00014134*/ ADD         R1, R5, #14464              @ 0x3880 
    /*00014138*/ MOV         R2, #448                    @ 0x1c0 
    /*0001413c*/ ADD         R1, R1, #56                 @ 0x38 
    /*00014140*/ MOV         R0, R6 
    /*00014144*/ BL          0x0000000000014144          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00014148*/ MOV         R1, #0 
    /*0001414c*/ MOV         R0, R6 
    /*00014150*/ BL          0x0000000000014150          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00014154*/ MOV         R0, R7 
    /*00014158*/ ADD         R1, R6, #580                @ 0x244 
    /*0001415c*/ BL          0x000000000001415C          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    /*00014160*/ LDR         R3, [PC, #52]               @ 0x000000000001419c 
    /*00014164*/ MOV         R0, #176                    @ 0xb0 
    /*00014168*/ MLA         R0, R0, R4, R3 
    /*0001416c*/ BL          0x000000000001416C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00014170*/ B           VI_COMM_CapSendDumpFrame_x14080
    VI_COMM_CapSendDumpFrame_x14174:
    /*00014174*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5680] 
    /*00014178*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55e4] 
    /*0001417c*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5680] 
    /*00014180*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55e4] 
    /*00014184*/ MOVW        R2, #2028                   @ 0x7ec 
    /*00014188*/ LDR         R1, [PC, #8]                @ 0x0000000000014198 
    /*0001418c*/ BL          0x000000000001418C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00014190*/ MOV         R6, #0 
    /*00014194*/ B           VI_COMM_CapSendDumpFrame_x14134
    /*00014198*/ ANDEQ       R0, R0, R0, ASR FP 
    /*0001419c*/ ANDEQ       R0, R0, R4, ASR R0          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_COMM_CapSendDumpFrame


FUNC_BEGIN VI_COMM_SendYuvFrameToChn
    /*000141a0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000141a4*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*000141a8*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*000141ac*/ SUB         SP, SP, #68                 @ 0x44 
    /*000141b0*/ MOV         R5, R0 
    /*000141b4*/ MOV         R6, R1 
    /*000141b8*/ ADD         R0, R4, #832                @ 0x340 
    /*000141bc*/ MOV         R1, R2 
    /*000141c0*/ MOV         R2, #336                    @ 0x150 
    /*000141c4*/ BL          0x00000000000141C4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000141c8*/ MOV         R1, R6 
    /*000141cc*/ MOV         R0, R5 
    /*000141d0*/ BL          0x00000000000141D0          @ VI_DRV_PrepareChnCoverExInfo [R_ARM_CALL: .text+0x2d014] 
    /*000141d4*/ MOV         R1, R6 
    /*000141d8*/ MOV         R0, R5 
    /*000141dc*/ BL          0x00000000000141DC          @ VI_DRV_PrepareChnOsdInfo [R_ARM_CALL: .text+0x2d1d0] 
    /*000141e0*/ BL          0x00000000000141E0          @ VI_IsGdcExist [R_ARM_CALL: .text+0x21748] 
    /*000141e4*/ SUBS        R7, R0, #0 
    /*000141e8*/ BEQ         VI_COMM_SendYuvFrameToChn_x14210
    /*000141ec*/ ADD         R2, R4, #832                @ 0x340 
    /*000141f0*/ MOV         R1, R6 
    /*000141f4*/ MOV         R0, R5 
    /*000141f8*/ ADD         R3, R2, #696                @ 0x2b8 
    /*000141fc*/ MOV         IP, #0 
    /*00014200*/ STR         IP, [R4, #2200]             @ 0x898 
    /*00014204*/ BL          0x0000000000014204          @ VI_SubmitFrame2Gdc [R_ARM_CALL: .text+0x228d4] 
    VI_COMM_SendYuvFrameToChn_x14208:
    /*00014208*/ ADD         SP, SP, #68                 @ 0x44 
    /*0001420c*/ POP         {R4, R5, R6, R7, PC} 
    VI_COMM_SendYuvFrameToChn_x14210:
    /*00014210*/ BL          0x0000000000014210          @ VI_IsVgsExist [R_ARM_CALL: .text+0x170e8] 
    /*00014214*/ CMP         R0, #0 
    /*00014218*/ BEQ         VI_COMM_SendYuvFrameToChn_x14254
    /*0001421c*/ ADD         R2, SP, #20 
    /*00014220*/ MOV         R1, R6 
    /*00014224*/ MOV         R0, R5 
    /*00014228*/ BL          0x0000000000014228          @ VI_DRV_GetWorkingChnAttr [R_ARM_CALL: .text+0x2991c] 
    /*0001422c*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00014230*/ CMP         R3, #2 
    /*00014234*/ BEQ         VI_COMM_SendYuvFrameToChn_x1426c
    /*00014238*/ MOV         R1, R6 
    /*0001423c*/ MOV         R0, R5 
    /*00014240*/ ADD         R2, R4, #832                @ 0x340 
    /*00014244*/ STR         R7, [R4, #1520]             @ 0x5f0 
    /*00014248*/ BL          0x0000000000014248          @ VI_SubmitFrame2Vgs [R_ARM_CALL: .text+0x17fd4] 
    /*0001424c*/ ADD         SP, SP, #68                 @ 0x44 
    /*00014250*/ POP         {R4, R5, R6, R7, PC} 
    VI_COMM_SendYuvFrameToChn_x14254:
    /*00014254*/ ADD         R2, R4, #832                @ 0x340 
    /*00014258*/ MOV         R1, R6 
    /*0001425c*/ MOV         R0, R5 
    /*00014260*/ BL          0x0000000000014260          @ VI_ProcSendPic [R_ARM_CALL: .text+0x26e8] 
    /*00014264*/ ADD         SP, SP, #68                 @ 0x44 
    /*00014268*/ POP         {R4, R5, R6, R7, PC} 
    VI_COMM_SendYuvFrameToChn_x1426c:
    /*0001426c*/ MOVW        R3, #2072                   @ 0x818 
    /*00014270*/ STR         R6, [SP, #8] 
    /*00014274*/ STR         R3, [SP] 
    /*00014278*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5bd8] 
    /*0001427c*/ STR         R5, [SP, #4] 
    /*00014280*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5bd8] 
    /*00014284*/ LDR         R3, [PC, #12]               @ 0x0000000000014298 
    /*00014288*/ MOV         R1, #16 
    /*0001428c*/ MOV         R0, #3 
    /*00014290*/ BL          0x0000000000014290          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014294*/ B           VI_COMM_SendYuvFrameToChn_x14208
    /*00014298*/ ANDEQ       R0, R0, IP, ROR #22 
FUNC_END VI_COMM_SendYuvFrameToChn


FUNC_BEGIN VI_COMM_CapSendPipeBypassBeFrame
    /*0001429c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000142a0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000142a4*/ PUSH        {R4, LR} 
    /*000142a8*/ LDR         R4, [R3, R0, LSL #2] 
    /*000142ac*/ ADD         R3, R4, #12288              @ 0x3000 
    /*000142b0*/ LDR         R2, [R3, #2664]             @ 0xa68 
    /*000142b4*/ CMP         R2, #0 
    /*000142b8*/ POPEQ       {R4, PC} 
    /*000142bc*/ LDR         R3, [R3, #2668]             @ 0xa6c 
    /*000142c0*/ CMP         R3, #0 
    /*000142c4*/ POPEQ       {R4, PC} 
    /*000142c8*/ ADD         R3, R4, #36864              @ 0x9000 
    /*000142cc*/ LDR         R3, [R3, #2228]             @ 0x8b4 
    /*000142d0*/ CMP         R3, #0 
    /*000142d4*/ POPEQ       {R4, PC} 
    /*000142d8*/ ADD         R2, R4, #14464              @ 0x3880 
    /*000142dc*/ ADD         R4, R4, #36352              @ 0x8e00 
    /*000142e0*/ ADD         R2, R2, #56                 @ 0x38 
    /*000142e4*/ MOV         R1, #0 
    /*000142e8*/ BL          0x00000000000142E8          @ VI_COMM_SendYuvFrameToChn [R_ARM_CALL: .text+0x141a0] 
    /*000142ec*/ LDRD        R2, [R4, #200]              @ 0xc8 
    /*000142f0*/ ADD         R4, R4, #208                @ 0xd0 
    /*000142f4*/ ADDS        R2, R2, #1 
    /*000142f8*/ ADC         R3, R3, #0 
    /*000142fc*/ STRD        R2, [R4, #-8] 
    /*00014300*/ POP         {R4, PC} 
FUNC_END VI_COMM_CapSendPipeBypassBeFrame


FUNC_BEGIN VI_COMM_CapSendOffYUVFrame
    /*00014304*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00014308*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001430c*/ PUSH        {R4, R5, R6, LR} 
    /*00014310*/ MOV         R4, R0 
    /*00014314*/ LDR         R6, [R3, R0, LSL #2] 
    /*00014318*/ SUB         SP, SP, #16 
    /*0001431c*/ ADD         R5, R6, #12288              @ 0x3000 
    /*00014320*/ LDR         R3, [R5, #2664]             @ 0xa68 
    /*00014324*/ LDR         R0, [R5, #2668]             @ 0xa6c 
    /*00014328*/ CMP         R3, #0 
    /*0001432c*/ BEQ         VI_COMM_CapSendOffYUVFrame_x14374
    /*00014330*/ CMP         R0, #0 
    /*00014334*/ BEQ         VI_COMM_CapSendOffYUVFrame_x14374
    VI_COMM_CapSendOffYUVFrame_x14338:
    /*00014338*/ MOV         R0, R4 
    /*0001433c*/ BL          0x000000000001433C          @ VI_COMM_CapSendDumpFrame [R_ARM_CALL: .text+0x14044] 
    /*00014340*/ MOV         R0, R4 
    /*00014344*/ BL          0x0000000000014344          @ VI_COMM_CapSendPipeBypassBeFrame [R_ARM_CALL: .text+0x1429c] 
    /*00014348*/ LDR         R3, [R5, #2664]             @ 0xa68 
    /*0001434c*/ CMP         R3, #0 
    /*00014350*/ BEQ         VI_COMM_CapSendOffYUVFrame_x1436c
    /*00014354*/ ADD         R0, R6, #14464              @ 0x3880 
    /*00014358*/ MOV         R1, #0 
    /*0001435c*/ ADD         R0, R0, #56                 @ 0x38 
    /*00014360*/ BL          0x0000000000014360          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00014364*/ MOV         R3, #0 
    /*00014368*/ STR         R3, [R5, #2664]             @ 0xa68 
    VI_COMM_CapSendOffYUVFrame_x1436c:
    /*0001436c*/ ADD         SP, SP, #16 
    /*00014370*/ POP         {R4, R5, R6, PC} 
    VI_COMM_CapSendOffYUVFrame_x14374:
    /*00014374*/ ADD         IP, R6, #32768              @ 0x8000 
    /*00014378*/ MOVW        LR, #2121                   @ 0x849 
    /*0001437c*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c30] 
    /*00014380*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c30] 
    /*00014384*/ LDR         R1, [IP, #3712]             @ 0xe80 
    /*00014388*/ ADD         R1, R1, #1 
    /*0001438c*/ STR         R1, [IP, #3712]             @ 0xe80 
    /*00014390*/ STR         R0, [SP, #12] 
    /*00014394*/ MOV         R1, #16 
    /*00014398*/ STR         R3, [SP, #8] 
    /*0001439c*/ MOV         R0, #6 
    /*000143a0*/ STR         R4, [SP, #4] 
    /*000143a4*/ STR         LR, [SP] 
    /*000143a8*/ LDR         R3, [PC, #4]                @ 0x00000000000143b4 
    /*000143ac*/ BL          0x00000000000143AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000143b0*/ B           VI_COMM_CapSendOffYUVFrame_x14338
    /*000143b4*/ ANDEQ       R0, R0, R8, LSL #23 
FUNC_END VI_COMM_CapSendOffYUVFrame


FUNC_BEGIN VI_COMM_CapSendLinearFrame
    /*000143b8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000143bc*/ SUB         SP, SP, #92                 @ 0x5c 
    /*000143c0*/ MOV         R7, R1 
    /*000143c4*/ MOV         R4, R0 
    /*000143c8*/ BL          0x00000000000143C8          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*000143cc*/ BL          0x00000000000143CC          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*000143d0*/ CMP         R0, #1 
    /*000143d4*/ BEQ         VI_COMM_CapSendLinearFrame_x14480
    /*000143d8*/ ADD         R1, SP, #16 
    /*000143dc*/ MOV         R0, R4 
    /*000143e0*/ BL          0x00000000000143E0          @ VI_DRV_GetPipeRawSource [R_ARM_CALL: .text+0x303c8] 
    /*000143e4*/ LDR         R3, [SP, #16] 
    /*000143e8*/ CMP         R3, #2 
    /*000143ec*/ BEQ         VI_COMM_CapSendLinearFrame_x14480
    /*000143f0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000143f4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000143f8*/ LDR         R5, [R3, R4, LSL #2] 
    /*000143fc*/ ADD         R6, R5, #12288              @ 0x3000 
    /*00014400*/ LDR         R3, [R6, #2664]             @ 0xa68 
    /*00014404*/ CMP         R3, #0 
    /*00014408*/ BEQ         VI_COMM_CapSendLinearFrame_x14480
    /*0001440c*/ LDR         R3, [R6, #2668]             @ 0xa6c 
    /*00014410*/ CMP         R3, #0 
    /*00014414*/ BEQ         VI_COMM_CapSendLinearFrame_x14480
    /*00014418*/ ADD         R8, R5, #36864              @ 0x9000 
    /*0001441c*/ LDR         R3, [R8, #472]              @ 0x1d8 
    /*00014420*/ CMP         R3, #1 
    /*00014424*/ BEQ         VI_COMM_CapSendLinearFrame_x14488
    VI_COMM_CapSendLinearFrame_x14428:
    /*00014428*/ ADD         R1, SP, #20 
    /*0001442c*/ MOV         R0, R4 
    /*00014430*/ BL          0x0000000000014430          @ VI_DRV_GetPipeAttr [R_ARM_CALL: .text+0x28674] 
    /*00014434*/ LDR         IP, [SP, #32] 
    /*00014438*/ LDR         LR, [R6, #2232]             @ 0x8b8 
    /*0001443c*/ CMP         IP, LR 
    /*00014440*/ BEQ         VI_COMM_CapSendLinearFrame_x14498
    /*00014444*/ ADD         R5, R5, #32768              @ 0x8000 
    /*00014448*/ MOVW        R6, #2205                   @ 0x89d 
    /*0001444c*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c78] 
    /*00014450*/ LDR         R3, [PC, #628]              @ 0x00000000000146cc 
    /*00014454*/ LDR         R4, [R5, #3712]             @ 0xe80 
    /*00014458*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c78] 
    /*0001445c*/ LDR         R0, [R5, #3792]             @ 0xed0 
    /*00014460*/ MOV         R1, #16 
    /*00014464*/ ADD         R4, R4, #1 
    /*00014468*/ STR         R4, [R5, #3712]             @ 0xe80 
    /*0001446c*/ ADD         R0, R0, #1 
    /*00014470*/ STR         R0, [R5, #3792]             @ 0xed0 
    /*00014474*/ MOV         R0, #3 
    /*00014478*/ STM         SP, {R6, IP, LR} 
    /*0001447c*/ BL          0x000000000001447C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_COMM_CapSendLinearFrame_x14480:
    /*00014480*/ ADD         SP, SP, #92                 @ 0x5c 
    /*00014484*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_COMM_CapSendLinearFrame_x14488:
    /*00014488*/ LDR         R3, [R8, #388]              @ 0x184 
    /*0001448c*/ CMP         R3, #0 
    /*00014490*/ BNE         VI_COMM_CapSendLinearFrame_x14480
    /*00014494*/ B           VI_COMM_CapSendLinearFrame_x14428
    VI_COMM_CapSendLinearFrame_x14498:
    /*00014498*/ LDR         R6, [R6, #2236]             @ 0x8bc 
    /*0001449c*/ LDR         LR, [SP, #36]               @ 0x24 
    /*000144a0*/ CMP         LR, R6 
    /*000144a4*/ BEQ         VI_COMM_CapSendLinearFrame_x144ec
    /*000144a8*/ ADD         R5, R5, #32768              @ 0x8000 
    /*000144ac*/ MOVW        R4, #2216                   @ 0x8a8 
    /*000144b0*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5cd8] 
    /*000144b4*/ LDR         R3, [PC, #528]              @ 0x00000000000146cc 
    /*000144b8*/ LDR         IP, [R5, #3712]             @ 0xe80 
    /*000144bc*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5cd8] 
    /*000144c0*/ LDR         R0, [R5, #3792]             @ 0xed0 
    /*000144c4*/ MOV         R1, #16 
    /*000144c8*/ ADD         IP, IP, #1 
    /*000144cc*/ STR         IP, [R5, #3712]             @ 0xe80 
    /*000144d0*/ ADD         R0, R0, #1 
    /*000144d4*/ STR         R0, [R5, #3792]             @ 0xed0 
    /*000144d8*/ STR         R6, [SP, #8] 
    /*000144dc*/ MOV         R0, #3 
    /*000144e0*/ STM         SP, {R4, LR} 
    /*000144e4*/ BL          0x00000000000144E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000144e8*/ B           VI_COMM_CapSendLinearFrame_x14480
    VI_COMM_CapSendLinearFrame_x144ec:
    /*000144ec*/ ADD         SL, R5, #4 
    /*000144f0*/ MOV         R0, SL 
    /*000144f4*/ BL          0x00000000000144F4          @ VI_QueueGetFree [R_ARM_CALL: .text+0x161cc] 
    /*000144f8*/ SUBS        R6, R0, #0 
    /*000144fc*/ BEQ         VI_COMM_CapSendLinearFrame_x1466c
    /*00014500*/ SUBS        FP, R6, #580                @ 0x244 
    /*00014504*/ BEQ         VI_COMM_CapSendLinearFrame_x1466c
    /*00014508*/ MOV         R0, #2 
    /*0001450c*/ ADD         R9, R5, #14464              @ 0x3880 
    /*00014510*/ BL          0x0000000000014510          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014514*/ ADD         R9, R9, #56                 @ 0x38 
    /*00014518*/ LDR         R3, [R0] 
    /*0001451c*/ BLX         R3 
    /*00014520*/ ADD         R3, R5, #14912              @ 0x3a40 
    /*00014524*/ STRD        R0, [R3, #24] 
    /*00014528*/ MOV         R1, #0 
    /*0001452c*/ MOV         R0, R9 
    /*00014530*/ BL          0x0000000000014530          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00014534*/ MOV         R1, R9 
    /*00014538*/ MOV         R2, #448                    @ 0x1c0 
    /*0001453c*/ MOV         R0, FP 
    /*00014540*/ BL          0x0000000000014540          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00014544*/ SUB         R2, R6, #108                @ 0x6c 
    /*00014548*/ SUB         R1, R6, #132                @ 0x84 
    /*0001454c*/ MOV         R0, R4 
    /*00014550*/ BL          0x0000000000014550          @ VI_DRV_GetBeCfg [R_ARM_CALL: .text+0x385b0] 
    /*00014554*/ CMP         R0, #0 
    /*00014558*/ BNE         VI_COMM_CapSendLinearFrame_x145a8
    /*0001455c*/ LDR         R3, [R8, #2784]             @ 0xae0 
    /*00014560*/ MOV         R1, R6 
    /*00014564*/ MOV         R0, SL 
    /*00014568*/ CMP         R3, #0 
    /*0001456c*/ MOVNE       R3, #1 
    /*00014570*/ STR         R3, [R6, #-136]             @ 0xffffff78 
    /*00014574*/ BL          0x0000000000014574          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    /*00014578*/ LDR         R3, [R8, #2784]             @ 0xae0 
    /*0001457c*/ CMP         R3, #0 
    /*00014580*/ BNE         VI_COMM_CapSendLinearFrame_x145f8
    VI_COMM_CapSendLinearFrame_x14584:
    /*00014584*/ ADD         R5, R5, #36352              @ 0x8e00 
    /*00014588*/ LDRD        R2, [R5, #200]              @ 0xc8 
    /*0001458c*/ ADDS        R2, R2, #1 
    /*00014590*/ ADC         R3, R3, #0 
    /*00014594*/ STRD        R2, [R5, #200]              @ 0xc8 
    VI_COMM_CapSendLinearFrame_x14598:
    /*00014598*/ MOV         R1, R7 
    /*0001459c*/ MOV         R0, R4 
    /*000145a0*/ BL          0x00000000000145A0          @ VI_StartOneTask [R_ARM_CALL: .text+0x1ed4] 
    /*000145a4*/ B           VI_COMM_CapSendLinearFrame_x14480
    VI_COMM_CapSendLinearFrame_x145a8:
    /*000145a8*/ MOV         R1, #0 
    /*000145ac*/ MOV         R0, R9 
    /*000145b0*/ BL          0x00000000000145B0          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*000145b4*/ ADD         R5, R5, #32768              @ 0x8000 
    /*000145b8*/ MOV         R1, R6 
    /*000145bc*/ MOV         R0, SL 
    /*000145c0*/ BL          0x00000000000145C0          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*000145c4*/ MOVW        IP, #2245                   @ 0x8c5 
    VI_COMM_CapSendLinearFrame_x145c8:
    /*000145c8*/ LDR         R0, [R5, #3712]             @ 0xe80 
    /*000145cc*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d38] 
    /*000145d0*/ LDR         R3, [PC, #244]              @ 0x00000000000146cc 
    /*000145d4*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d38] 
    /*000145d8*/ ADD         R0, R0, #1 
    /*000145dc*/ MOV         R1, #16 
    /*000145e0*/ STR         R0, [R5, #3712]             @ 0xe80 
    /*000145e4*/ MOV         R0, #3 
    /*000145e8*/ STR         R4, [SP, #4] 
    /*000145ec*/ STR         IP, [SP] 
    /*000145f0*/ BL          0x00000000000145F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000145f4*/ B           VI_COMM_CapSendLinearFrame_x14598
    VI_COMM_CapSendLinearFrame_x145f8:
    /*000145f8*/ MOV         R0, SL 
    /*000145fc*/ BL          0x00000000000145FC          @ VI_QueueGetFree [R_ARM_CALL: .text+0x161cc] 
    /*00014600*/ SUBS        R6, R0, #0 
    /*00014604*/ BEQ         VI_COMM_CapSendLinearFrame_x146c0
    /*00014608*/ SUBS        R8, R6, #580                @ 0x244 
    /*0001460c*/ BEQ         VI_COMM_CapSendLinearFrame_x146c0
    /*00014610*/ MOV         R1, #0 
    /*00014614*/ MOV         R0, R9 
    /*00014618*/ BL          0x0000000000014618          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001461c*/ MOV         R1, FP 
    /*00014620*/ MOV         R0, R8 
    /*00014624*/ MOV         R2, #592                    @ 0x250 
    /*00014628*/ BL          0x0000000000014628          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001462c*/ MOV         R8, #0 
    /*00014630*/ SUB         R1, R6, #132                @ 0x84 
    /*00014634*/ STR         R8, [R6, #-136]             @ 0xffffff78 
    /*00014638*/ MOV         R0, R4 
    /*0001463c*/ BL          0x000000000001463C          @ VI_DRV_HoldBeCfg [R_ARM_CALL: .text+0x386e8] 
    /*00014640*/ CMP         R0, R8 
    /*00014644*/ BEQ         VI_COMM_CapSendLinearFrame_x146b0
    /*00014648*/ MOV         R1, R8 
    /*0001464c*/ MOV         R0, R9 
    /*00014650*/ BL          0x0000000000014650          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00014654*/ MOV         R1, R6 
    /*00014658*/ MOV         R0, SL 
    /*0001465c*/ ADD         R5, R5, #32768              @ 0x8000 
    /*00014660*/ BL          0x0000000000014660          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00014664*/ MOVW        IP, #2284                   @ 0x8ec 
    /*00014668*/ B           VI_COMM_CapSendLinearFrame_x145c8
    VI_COMM_CapSendLinearFrame_x1466c:
    /*0001466c*/ ADD         R5, R5, #32768              @ 0x8000 
    /*00014670*/ MOVW        LR, #2226                   @ 0x8b2 
    VI_COMM_CapSendLinearFrame_x14674:
    /*00014674*/ LDR         IP, [R5, #3712]             @ 0xe80 
    /*00014678*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b94] 
    /*0001467c*/ LDR         R0, [R5, #3792]             @ 0xed0 
    /*00014680*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b94] 
    /*00014684*/ ADD         IP, IP, #1 
    /*00014688*/ LDR         R3, [PC, #60]               @ 0x00000000000146cc 
    /*0001468c*/ STR         IP, [R5, #3712]             @ 0xe80 
    /*00014690*/ ADD         R0, R0, #1 
    /*00014694*/ MOV         R1, #16 
    /*00014698*/ STR         R0, [R5, #3792]             @ 0xed0 
    /*0001469c*/ STR         R4, [SP, #4] 
    /*000146a0*/ MOV         R0, #3 
    /*000146a4*/ STR         LR, [SP] 
    /*000146a8*/ BL          0x00000000000146A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000146ac*/ B           VI_COMM_CapSendLinearFrame_x14598
    VI_COMM_CapSendLinearFrame_x146b0:
    /*000146b0*/ MOV         R1, R6 
    /*000146b4*/ MOV         R0, SL 
    /*000146b8*/ BL          0x00000000000146B8          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    /*000146bc*/ B           VI_COMM_CapSendLinearFrame_x14584
    VI_COMM_CapSendLinearFrame_x146c0:
    /*000146c0*/ ADD         R5, R5, #32768              @ 0x8000 
    /*000146c4*/ MOVW        LR, #2270                   @ 0x8de 
    /*000146c8*/ B           VI_COMM_CapSendLinearFrame_x14674
    /*000146cc*/ ANDEQ       R0, R0, R4, LSR #23 
FUNC_END VI_COMM_CapSendLinearFrame


FUNC_BEGIN VI_COMM_MasterPipeIsNormal
    /*000146d0*/ PUSH        {R4, R5, R6, LR} 
    /*000146d4*/ SUB         SP, SP, #24 
    /*000146d8*/ MOV         R4, R1 
    /*000146dc*/ MOV         R6, R0 
    /*000146e0*/ BL          0x00000000000146E0          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*000146e4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000146e8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000146ec*/ LDR         R3, [R3, R4, LSL #2] 
    /*000146f0*/ CMP         R3, #0 
    /*000146f4*/ BEQ         VI_COMM_MasterPipeIsNormal_x147a8
    /*000146f8*/ MOV         R3, #176                    @ 0xb0 
    /*000146fc*/ MOVW        R2, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00014700*/ MUL         R3, R3, R4 
    /*00014704*/ MOVT        R2, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00014708*/ LDR         R3, [R2, R3] 
    /*0001470c*/ CMP         R3, #1 
    /*00014710*/ BEQ         VI_COMM_MasterPipeIsNormal_x14778
    /*00014714*/ MOV         R5, R0 
    /*00014718*/ MOV         R0, R4 
    /*0001471c*/ BL          0x000000000001471C          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00014720*/ CMP         R5, R0 
    /*00014724*/ MOVEQ       R0, #0 
    /*00014728*/ BNE         VI_COMM_MasterPipeIsNormal_x14734
    VI_COMM_MasterPipeIsNormal_x1472c:
    /*0001472c*/ ADD         SP, SP, #24 
    /*00014730*/ POP         {R4, R5, R6, PC} 
    VI_COMM_MasterPipeIsNormal_x14734:
    /*00014734*/ MOV         R0, R4 
    /*00014738*/ BL          0x0000000000014738          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*0001473c*/ MOVW        R3, #3028                   @ 0xbd4 
    /*00014740*/ STR         R5, [SP, #12] 
    /*00014744*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5dd8] 
    /*00014748*/ STR         R3, [SP] 
    /*0001474c*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5dd8] 
    /*00014750*/ STR         R4, [SP, #8] 
    /*00014754*/ MOV         R1, #16 
    /*00014758*/ STR         R6, [SP, #4] 
    /*0001475c*/ LDR         R3, [PC, #116]              @ 0x00000000000147d8 
    /*00014760*/ STR         R0, [SP, #16] 
    /*00014764*/ MOV         R0, #3 
    /*00014768*/ BL          0x0000000000014768          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001476c*/ MOVW        R0, #32784                  @ 0x8010 
    /*00014770*/ MOVT        R0, #40976                  @ 0xa010 
    /*00014774*/ B           VI_COMM_MasterPipeIsNormal_x1472c
    VI_COMM_MasterPipeIsNormal_x14778:
    /*00014778*/ MOVW        R3, #3022                   @ 0xbce 
    /*0001477c*/ STR         R4, [SP, #4] 
    /*00014780*/ STR         R3, [SP] 
    /*00014784*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5da0] 
    /*00014788*/ LDR         R3, [PC, #72]               @ 0x00000000000147d8 
    /*0001478c*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5da0] 
    /*00014790*/ MOV         R1, #16 
    /*00014794*/ MOV         R0, #3 
    /*00014798*/ BL          0x0000000000014798          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001479c*/ MOVW        R0, #32786                  @ 0x8012 
    /*000147a0*/ MOVT        R0, #40976                  @ 0xa010 
    /*000147a4*/ B           VI_COMM_MasterPipeIsNormal_x1472c
    VI_COMM_MasterPipeIsNormal_x147a8:
    /*000147a8*/ MOVW        R3, #3016                   @ 0xbc8 
    /*000147ac*/ STR         R4, [SP, #4] 
    /*000147b0*/ STR         R3, [SP] 
    /*000147b4*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d6c] 
    /*000147b8*/ LDR         R3, [PC, #24]               @ 0x00000000000147d8 
    /*000147bc*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d6c] 
    /*000147c0*/ MOV         R1, #16 
    /*000147c4*/ MOV         R0, #3 
    /*000147c8*/ BL          0x00000000000147C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000147cc*/ MOVW        R0, #32773                  @ 0x8005 
    /*000147d0*/ MOVT        R0, #40976                  @ 0xa010 
    /*000147d4*/ B           VI_COMM_MasterPipeIsNormal_x1472c
    /*000147d8*/ ANDEQ       R0, R0, R0, ASR #23 
FUNC_END VI_COMM_MasterPipeIsNormal


FUNC_BEGIN VI_COMM_CapSendWdrFrame
    /*000147dc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000147e0*/ SUB         SP, SP, #96                 @ 0x60 
    /*000147e4*/ MOV         R5, R0 
    /*000147e8*/ BL          0x00000000000147E8          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*000147ec*/ MOV         R4, R0 
    /*000147f0*/ BL          0x00000000000147F0          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*000147f4*/ CMP         R0, #0 
    /*000147f8*/ CMPNE       R4, #2 
    /*000147fc*/ MOVEQ       R9, #0 
    /*00014800*/ BEQ         VI_COMM_CapSendWdrFrame_x14918
    /*00014804*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00014808*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001480c*/ MOV         R0, R5 
    /*00014810*/ MOV         R7, #176                    @ 0xb0 
    /*00014814*/ LDR         SL, [R3, R5, LSL #2] 
    /*00014818*/ BL          0x0000000000014818          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*0001481c*/ MOVW        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00014820*/ MOVT        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00014824*/ ADD         R1, SP, #24 
    /*00014828*/ MUL         R7, R7, R0 
    /*0001482c*/ MOV         R4, R0 
    /*00014830*/ ADD         R6, R7, #140                @ 0x8c 
    /*00014834*/ ADD         R6, R8, R6 
    /*00014838*/ MOV         R0, R6 
    /*0001483c*/ BL          0x000000000001483C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00014840*/ MOV         R1, R4 
    /*00014844*/ MOV         R0, R5 
    /*00014848*/ BL          0x0000000000014848          @ VI_COMM_MasterPipeIsNormal [R_ARM_CALL: .text+0x146d0] 
    /*0001484c*/ SUBS        R9, R0, #0 
    /*00014850*/ BNE         VI_COMM_CapSendWdrFrame_x1490c
    /*00014854*/ ADD         SL, SL, #12288              @ 0x3000 
    /*00014858*/ LDR         R3, [SL, #2664]             @ 0xa68 
    /*0001485c*/ CMP         R3, #0 
    /*00014860*/ BEQ         VI_COMM_CapSendWdrFrame_x14890
    /*00014864*/ ADD         R1, SP, #28 
    /*00014868*/ MOV         R0, R4 
    /*0001486c*/ BL          0x000000000001486C          @ VI_DRV_GetPipeAttr [R_ARM_CALL: .text+0x28674] 
    /*00014870*/ LDR         R2, [SP, #40]               @ 0x28 
    /*00014874*/ LDR         R3, [SL, #2232]             @ 0x8b8 
    /*00014878*/ CMP         R2, R3 
    /*0001487c*/ BNE         VI_COMM_CapSendWdrFrame_x14974
    /*00014880*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*00014884*/ LDR         R3, [SL, #2236]             @ 0x8bc 
    /*00014888*/ CMP         R2, R3 
    /*0001488c*/ BNE         VI_COMM_CapSendWdrFrame_x1492c
    VI_COMM_CapSendWdrFrame_x14890:
    /*00014890*/ ADD         R1, SP, #20 
    /*00014894*/ MOV         R0, R4 
    /*00014898*/ BL          0x0000000000014898          @ VI_DRV_GetPipeRawSource [R_ARM_CALL: .text+0x303c8] 
    /*0001489c*/ LDR         R3, [SP, #20] 
    /*000148a0*/ CMP         R3, #2 
    /*000148a4*/ BEQ         VI_COMM_CapSendWdrFrame_x1490c
    /*000148a8*/ MOV         R3, #176                    @ 0xb0 
    /*000148ac*/ MOV         R2, #1 
    /*000148b0*/ MLA         R3, R3, R4, R8 
    /*000148b4*/ ADD         R1, SP, #24 
    /*000148b8*/ MOV         R0, R6 
    /*000148bc*/ STR         R2, [R3, #20] 
    /*000148c0*/ BL          0x00000000000148C0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000148c4*/ MOV         R0, R4 
    /*000148c8*/ BL          0x00000000000148C8          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*000148cc*/ MOV         R1, R4 
    /*000148d0*/ SUB         R0, R0, #2 
    /*000148d4*/ CMP         R0, #1 
    /*000148d8*/ MOV         R0, R5 
    /*000148dc*/ BLS         VI_COMM_CapSendWdrFrame_x14924
    /*000148e0*/ BL          0x00000000000148E0          @ VI_WDR_OfflineSyncWdrFrame [R_ARM_CALL: .text+0x2094c] 
    VI_COMM_CapSendWdrFrame_x148e4:
    /*000148e4*/ MOV         R0, R6 
    /*000148e8*/ ADD         R1, SP, #24 
    /*000148ec*/ BL          0x00000000000148EC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000148f0*/ MOV         R3, #176                    @ 0xb0 
    /*000148f4*/ MLA         R4, R3, R4, R8 
    /*000148f8*/ ADD         R0, R7, #88                 @ 0x58 
    /*000148fc*/ MOV         R3, #0 
    /*00014900*/ ADD         R0, R8, R0 
    /*00014904*/ STR         R3, [R4, #20] 
    /*00014908*/ BL          0x0000000000014908          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VI_COMM_CapSendWdrFrame_x1490c:
    /*0001490c*/ ADD         R1, SP, #24 
    /*00014910*/ MOV         R0, R6 
    /*00014914*/ BL          0x0000000000014914          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_COMM_CapSendWdrFrame_x14918:
    /*00014918*/ MOV         R0, R9 
    /*0001491c*/ ADD         SP, SP, #96                 @ 0x60 
    /*00014920*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_CapSendWdrFrame_x14924:
    /*00014924*/ BL          0x0000000000014924          @ VI_WDR_OnlineUpdateWdrCfg [R_ARM_CALL: .text+0x20380] 
    /*00014928*/ B           VI_COMM_CapSendWdrFrame_x148e4
    VI_COMM_CapSendWdrFrame_x1492c:
    /*0001492c*/ ADD         R1, SP, #24 
    /*00014930*/ MOV         R0, R6 
    /*00014934*/ BL          0x0000000000014934          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014938*/ LDR         R1, [SL, #2236]             @ 0x8bc 
    /*0001493c*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00014940*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5cd8] 
    /*00014944*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5cd8] 
    /*00014948*/ MOVW        R0, #3101                   @ 0xc1d 
    /*0001494c*/ STR         R1, [SP, #8] 
    /*00014950*/ STR         R0, [SP] 
    VI_COMM_CapSendWdrFrame_x14954:
    /*00014954*/ STR         R3, [SP, #4] 
    /*00014958*/ MOV         R1, #16 
    /*0001495c*/ LDR         R3, [PC, #60]               @ 0x00000000000149a0 
    /*00014960*/ MOV         R0, #3 
    /*00014964*/ MOVW        R9, #32777                  @ 0x8009 
    /*00014968*/ BL          0x0000000000014968          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001496c*/ MOVT        R9, #40976                  @ 0xa010 
    /*00014970*/ B           VI_COMM_CapSendWdrFrame_x14918
    VI_COMM_CapSendWdrFrame_x14974:
    /*00014974*/ ADD         R1, SP, #24 
    /*00014978*/ MOV         R0, R6 
    /*0001497c*/ BL          0x000000000001497C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014980*/ LDR         R1, [SL, #2232]             @ 0x8b8 
    /*00014984*/ MOVW        R0, #3092                   @ 0xc14 
    /*00014988*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c78] 
    /*0001498c*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00014990*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c78] 
    /*00014994*/ STR         R0, [SP] 
    /*00014998*/ STR         R1, [SP, #8] 
    /*0001499c*/ B           VI_COMM_CapSendWdrFrame_x14954
    /*000149a0*/ LDRDEQ      R0, [R0], -IP 
FUNC_END VI_COMM_CapSendWdrFrame


FUNC_BEGIN VI_COMM_CapSendOffLineFrame
    /*000149a4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000149a8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000149ac*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000149b0*/ MOV         R5, R0 
    /*000149b4*/ LDR         R6, [R3, R0, LSL #2] 
    /*000149b8*/ SUB         SP, SP, #20 
    /*000149bc*/ ADD         R4, R6, #12288              @ 0x3000 
    /*000149c0*/ LDR         R3, [R4, #2664]             @ 0xa68 
    /*000149c4*/ LDR         R2, [R4, #2668]             @ 0xa6c 
    /*000149c8*/ CMP         R3, #0 
    /*000149cc*/ BEQ         VI_COMM_CapSendOffLineFrame_x149ec
    /*000149d0*/ CMP         R2, #0 
    /*000149d4*/ BNE         VI_COMM_CapSendOffLineFrame_x14a44
    /*000149d8*/ CMP         R3, #1 
    /*000149dc*/ ADDEQ       R0, R6, #32768              @ 0x8000 
    /*000149e0*/ LDREQ       R1, [R0, #3712]             @ 0xe80 
    /*000149e4*/ ADDEQ       R1, R1, #1 
    /*000149e8*/ STREQ       R1, [R0, #3712]             @ 0xe80 
    VI_COMM_CapSendOffLineFrame_x149ec:
    /*000149ec*/ MOVW        R1, #3171                   @ 0xc63 
    /*000149f0*/ STR         R2, [SP, #12] 
    /*000149f4*/ STR         R3, [SP, #8] 
    /*000149f8*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c30] 
    /*000149fc*/ STR         R1, [SP] 
    /*00014a00*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c30] 
    /*00014a04*/ STR         R5, [SP, #4] 
    /*00014a08*/ MOV         R1, #16 
    /*00014a0c*/ LDR         R3, [PC, #184]              @ 0x0000000000014acc 
    /*00014a10*/ MOV         R0, #6 
    /*00014a14*/ BL          0x0000000000014A14          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_COMM_CapSendOffLineFrame_x14a18:
    /*00014a18*/ LDR         R3, [R4, #2664]             @ 0xa68 
    /*00014a1c*/ CMP         R3, #0 
    /*00014a20*/ BEQ         VI_COMM_CapSendOffLineFrame_x14a3c
    /*00014a24*/ ADD         R0, R6, #14464              @ 0x3880 
    /*00014a28*/ MOV         R1, #0 
    /*00014a2c*/ ADD         R0, R0, #56                 @ 0x38 
    /*00014a30*/ BL          0x0000000000014A30          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00014a34*/ MOV         R3, #0 
    /*00014a38*/ STR         R3, [R4, #2664]             @ 0xa68 
    VI_COMM_CapSendOffLineFrame_x14a3c:
    /*00014a3c*/ ADD         SP, SP, #20 
    /*00014a40*/ POP         {R4, R5, R6, R7, PC} 
    VI_COMM_CapSendOffLineFrame_x14a44:
    /*00014a44*/ LDR         R3, [R4, #2252]             @ 0x8cc 
    /*00014a48*/ MOV         R7, R1 
    /*00014a4c*/ CMP         R3, #0 
    /*00014a50*/ BEQ         VI_COMM_CapSendOffLineFrame_x14a60
    /*00014a54*/ BL          0x0000000000014A54          @ VI_DRV_NeedSplit [R_ARM_CALL: .text+0x2f638] 
    /*00014a58*/ CMP         R0, #0 
    /*00014a5c*/ BNE         VI_COMM_CapSendOffLineFrame_x14a98
    VI_COMM_CapSendOffLineFrame_x14a60:
    /*00014a60*/ MOV         R0, R5 
    /*00014a64*/ BL          0x0000000000014A64          @ VI_SNAP_CapSendFrame [R_ARM_CALL: .text+0x1aae8] 
    /*00014a68*/ MOV         R0, R5 
    /*00014a6c*/ BL          0x0000000000014A6C          @ VI_COMM_CapSendDumpFrame [R_ARM_CALL: .text+0x14044] 
    /*00014a70*/ MOV         R1, R7 
    /*00014a74*/ MOV         R0, R5 
    /*00014a78*/ BL          0x0000000000014A78          @ VI_COMM_CapSendLinearFrame [R_ARM_CALL: .text+0x143b8] 
    /*00014a7c*/ MOV         R1, R7 
    /*00014a80*/ MOV         R0, R5 
    /*00014a84*/ BL          0x0000000000014A84          @ VI_COMM_CapSendWdrFrame [R_ARM_CALL: .text+0x147dc] 
    /*00014a88*/ MOV         R0, R5 
    /*00014a8c*/ MOV         R1, #1 
    /*00014a90*/ BL          0x0000000000014A90          @ VI_PipeFrameRateStatistic [R_ARM_CALL: .text+0x2314] 
    /*00014a94*/ B           VI_COMM_CapSendOffLineFrame_x14a18
    VI_COMM_CapSendOffLineFrame_x14a98:
    /*00014a98*/ ADD         LR, R6, #32768              @ 0x8000 
    /*00014a9c*/ MOVW        R5, #3180                   @ 0xc6c 
    /*00014aa0*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e30] 
    /*00014aa4*/ LDR         R3, [PC, #32]               @ 0x0000000000014acc 
    /*00014aa8*/ LDR         IP, [LR, #3712]             @ 0xe80 
    /*00014aac*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e30] 
    /*00014ab0*/ MOV         R1, #16 
    /*00014ab4*/ MOV         R0, #3 
    /*00014ab8*/ ADD         IP, IP, #1 
    /*00014abc*/ STR         IP, [LR, #3712]             @ 0xe80 
    /*00014ac0*/ STR         R5, [SP] 
    /*00014ac4*/ BL          0x0000000000014AC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014ac8*/ B           VI_COMM_CapSendOffLineFrame_x14a18
    /*00014acc*/ STRDEQ      R0, [R0], -R4 
FUNC_END VI_COMM_CapSendOffLineFrame


FUNC_BEGIN VI_COMM_CapPrepareSrcFrame
    /*00014ad0*/ MOV         R0, #0 
    /*00014ad4*/ BX          LR 
FUNC_END VI_COMM_CapPrepareSrcFrame


FUNC_BEGIN VI_COMM_CapPrepareFrame
    /*00014ad8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00014adc*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00014ae0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00014ae4*/ SUB         SP, SP, #24 
    /*00014ae8*/ LDR         R4, [R3, R0, LSL #2] 
    /*00014aec*/ MOV         R8, R0 
    /*00014af0*/ BL          0x0000000000014AF0          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00014af4*/ ADD         R7, R4, #12288              @ 0x3000 
    /*00014af8*/ ADD         R5, R4, #14464              @ 0x3880 
    /*00014afc*/ ADD         R5, R5, #56                 @ 0x38 
    /*00014b00*/ LDR         R3, [R7, #2664]             @ 0xa68 
    /*00014b04*/ CMP         R3, #1 
    /*00014b08*/ MOV         R9, R0 
    /*00014b0c*/ BEQ         VI_COMM_CapPrepareFrame_x14c2c
    VI_COMM_CapPrepareFrame_x14b10:
    /*00014b10*/ ADD         R6, R4, #14912              @ 0x3a40 
    /*00014b14*/ MOV         R2, #448                    @ 0x1c0 
    /*00014b18*/ ADD         R6, R6, #56                 @ 0x38 
    /*00014b1c*/ MOV         R0, R5 
    /*00014b20*/ MOV         R1, R6 
    /*00014b24*/ BL          0x0000000000014B24          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00014b28*/ ADD         R0, R4, #15360              @ 0x3c00 
    /*00014b2c*/ ADD         R0, R0, #56                 @ 0x38 
    /*00014b30*/ BL          0x0000000000014B30          @ VI_IsWaitCapFramStop [R_ARM_CALL: .text+0x1598] 
    /*00014b34*/ CMP         R0, #1 
    /*00014b38*/ BEQ         VI_COMM_CapPrepareFrame_x14b5c
    /*00014b3c*/ LDR         R5, [R7, #2216]             @ 0x8a8 
    /*00014b40*/ CMP         R5, #0 
    /*00014b44*/ BNE         VI_COMM_CapPrepareFrame_x14b64
    VI_COMM_CapPrepareFrame_x14b48:
    /*00014b48*/ MOV         R3, #0 
    /*00014b4c*/ STR         R3, [R7, #3112]             @ 0xc28 
    VI_COMM_CapPrepareFrame_x14b50:
    /*00014b50*/ MOV         R0, R5 
    /*00014b54*/ ADD         SP, SP, #24 
    /*00014b58*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_CapPrepareFrame_x14b5c:
    /*00014b5c*/ MOV         R5, #0 
    /*00014b60*/ B           VI_COMM_CapPrepareFrame_x14b48
    VI_COMM_CapPrepareFrame_x14b64:
    /*00014b64*/ MOV         R0, R8 
    /*00014b68*/ BL          0x0000000000014B68          @ VI_DRV_PipeFrameRateCtl [R_ARM_CALL: .text+0x2beb4] 
    /*00014b6c*/ SUBS        R5, R0, #0 
    /*00014b70*/ BEQ         VI_COMM_CapPrepareFrame_x14c04
    /*00014b74*/ MOV         R0, R8 
    /*00014b78*/ BL          0x0000000000014B78          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*00014b7c*/ ADD         R1, SP, #12 
    /*00014b80*/ MOV         R5, R0 
    /*00014b84*/ MOV         R0, R8 
    /*00014b88*/ BL          0x0000000000014B88          @ VI_DRV_GetWorkingPipeDumpAttr [R_ARM_CALL: .text+0x32b0c] 
    /*00014b8c*/ MOV         R0, R9 
    /*00014b90*/ BL          0x0000000000014B90          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*00014b94*/ CMP         R0, #1 
    /*00014b98*/ BNE         VI_COMM_CapPrepareFrame_x14ba8
    /*00014b9c*/ LDR         SL, [SP, #12] 
    /*00014ba0*/ CMP         SL, #0 
    /*00014ba4*/ BEQ         VI_COMM_CapPrepareFrame_x14c64
    VI_COMM_CapPrepareFrame_x14ba8:
    /*00014ba8*/ MOV         R1, R6 
    /*00014bac*/ MOV         R0, R8 
    /*00014bb0*/ BL          0x0000000000014BB0          @ VI_DRV_GetWchVbBlk [R_ARM_CALL: .text+0x2cc2c] 
    /*00014bb4*/ CMP         R0, #0 
    /*00014bb8*/ MOV         R5, R0 
    /*00014bbc*/ BEQ         VI_COMM_CapPrepareFrame_x14c84
    /*00014bc0*/ ADD         R4, R4, #32768              @ 0x8000 
    /*00014bc4*/ MOVW        IP, #3437                   @ 0xd6d 
    /*00014bc8*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f1c] 
    /*00014bcc*/ MOV         R1, #16 
    /*00014bd0*/ LDR         R0, [R4, #3660]             @ 0xe4c 
    /*00014bd4*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f1c] 
    /*00014bd8*/ LDR         R3, [R4, #3712]             @ 0xe80 
    /*00014bdc*/ ADD         R0, R0, #1 
    /*00014be0*/ STR         R0, [R4, #3660]             @ 0xe4c 
    /*00014be4*/ ADD         R3, R3, #1 
    /*00014be8*/ MOV         R0, #3 
    /*00014bec*/ STR         R3, [R4, #3712]             @ 0xe80 
    /*00014bf0*/ LDR         R3, [PC, #236]              @ 0x0000000000014ce4 
    /*00014bf4*/ STR         R8, [SP, #4] 
    /*00014bf8*/ STR         IP, [SP] 
    /*00014bfc*/ BL          0x0000000000014BFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014c00*/ B           VI_COMM_CapPrepareFrame_x14b48
    VI_COMM_CapPrepareFrame_x14c04:
    /*00014c04*/ MOVW        R3, #3399                   @ 0xd47 
    /*00014c08*/ STR         R8, [SP, #4] 
    /*00014c0c*/ STR         R3, [SP] 
    /*00014c10*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ecc] 
    /*00014c14*/ LDR         R3, [PC, #200]              @ 0x0000000000014ce4 
    /*00014c18*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ecc] 
    /*00014c1c*/ MOV         R1, #16 
    /*00014c20*/ MOV         R0, #6 
    /*00014c24*/ BL          0x0000000000014C24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014c28*/ B           VI_COMM_CapPrepareFrame_x14b48
    VI_COMM_CapPrepareFrame_x14c2c:
    /*00014c2c*/ MOV         R1, #0 
    /*00014c30*/ MOV         R0, R5 
    /*00014c34*/ BL          0x0000000000014C34          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00014c38*/ MOV         R2, #0 
    /*00014c3c*/ MOVW        R3, #3378                   @ 0xd32 
    /*00014c40*/ STR         R2, [R7, #2664]             @ 0xa68 
    /*00014c44*/ MOV         R1, #16 
    /*00014c48*/ STM         SP, {R3, R8} 
    /*00014c4c*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e80] 
    /*00014c50*/ LDR         R3, [PC, #140]              @ 0x0000000000014ce4 
    /*00014c54*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e80] 
    /*00014c58*/ MOV         R0, #3 
    /*00014c5c*/ BL          0x0000000000014C5C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014c60*/ B           VI_COMM_CapPrepareFrame_x14b10
    VI_COMM_CapPrepareFrame_x14c64:
    /*00014c64*/ MOV         R0, R5 
    /*00014c68*/ BL          0x0000000000014C68          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00014c6c*/ SUB         R0, R0, #2 
    /*00014c70*/ CMP         R0, #1 
    /*00014c74*/ BHI         VI_COMM_CapPrepareFrame_x14ba8
    /*00014c78*/ MOV         R1, SL 
    /*00014c7c*/ MOV         R0, R6 
    /*00014c80*/ BL          0x0000000000014C80          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    VI_COMM_CapPrepareFrame_x14c84:
    /*00014c84*/ MOV         R0, R9 
    /*00014c88*/ BL          0x0000000000014C88          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*00014c8c*/ CMP         R0, #0 
    /*00014c90*/ BNE         VI_COMM_CapPrepareFrame_x14cbc
    /*00014c94*/ ADD         R4, R4, #36864              @ 0x9000 
    /*00014c98*/ MOV         R1, R6 
    /*00014c9c*/ LDR         R3, [R4, #472]              @ 0x1d8 
    /*00014ca0*/ CMP         R3, #1 
    /*00014ca4*/ BNE         VI_COMM_CapPrepareFrame_x14cb4
    /*00014ca8*/ LDR         R3, [R4, #480]              @ 0x1e0 
    /*00014cac*/ CMP         R8, R3 
    /*00014cb0*/ BEQ         VI_COMM_CapPrepareFrame_x14ccc
    VI_COMM_CapPrepareFrame_x14cb4:
    /*00014cb4*/ MOV         R0, R8 
    /*00014cb8*/ BL          0x0000000000014CB8          @ VI_COMM_SaveIspInfo2Pic [R_ARM_CALL: .text+0x1b838] 
    VI_COMM_CapPrepareFrame_x14cbc:
    /*00014cbc*/ MOV         R3, #1 
    /*00014cc0*/ MOV         R5, #0 
    /*00014cc4*/ STR         R3, [R7, #3112]             @ 0xc28 
    /*00014cc8*/ B           VI_COMM_CapPrepareFrame_x14b50
    VI_COMM_CapPrepareFrame_x14ccc:
    /*00014ccc*/ LDR         R0, [R4, #476]              @ 0x1dc 
    /*00014cd0*/ BL          0x0000000000014CD0          @ VI_COMM_SaveIspInfo2Pic [R_ARM_CALL: .text+0x1b838] 
    /*00014cd4*/ ADD         R1, R6, #336                @ 0x150 
    /*00014cd8*/ LDR         R0, [R4, #476]              @ 0x1dc 
    /*00014cdc*/ BL          0x0000000000014CDC          @ VI_SNAP_GetIspConfigInfo [R_ARM_CALL: .text+0x1a03c] 
    /*00014ce0*/ B           VI_COMM_CapPrepareFrame_x14cbc
    /*00014ce4*/ ANDEQ       R0, R0, R0, LSL IP 
FUNC_END VI_COMM_CapPrepareFrame


FUNC_BEGIN VI_COMM_CaptureFrame
    /*00014ce8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00014cec*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00014cf0*/ PUSH        {R4, R5, R6, LR} 
    /*00014cf4*/ MOV         R5, R0 
    /*00014cf8*/ LDR         R3, [R3, R0, LSL #2] 
    /*00014cfc*/ ADD         R4, R3, #14912              @ 0x3a40 
    /*00014d00*/ ADD         R3, R3, #12288              @ 0x3000 
    /*00014d04*/ ADD         R4, R4, #56                 @ 0x38 
    /*00014d08*/ LDR         R1, [R3, #3112]             @ 0xc28 
    /*00014d0c*/ MOV         R2, R4 
    /*00014d10*/ BL          0x0000000000014D10          @ VI_DRV_SetFeWchPicConfig [R_ARM_CALL: .text+0x32b7c] 
    /*00014d14*/ MOV         R0, R5 
    /*00014d18*/ MOV         R1, R4 
    /*00014d1c*/ BL          0x0000000000014D1C          @ VI_DRV_UpdateWchCmpAttr [R_ARM_CALL: .text+0x32dd4] 
    /*00014d20*/ MOV         R0, #0 
    /*00014d24*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_COMM_CaptureFrame


FUNC_BEGIN VI_COMM_UpdateFirstFramePipeAttr
    /*00014d28*/ LDR         R3, [PC, #104]              @ 0x0000000000014d98 
    /*00014d2c*/ PUSH        {R4, R5, LR} 
    /*00014d30*/ MOV         R5, #176                    @ 0xb0 
    /*00014d34*/ MLA         R5, R5, R0, R3 
    /*00014d38*/ SUB         SP, SP, #12 
    /*00014d3c*/ MOV         R4, R0 
    /*00014d40*/ ADD         R1, SP, #4 
    /*00014d44*/ MOV         R0, R5 
    /*00014d48*/ BL          0x0000000000014D48          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00014d4c*/ MOV         R0, R4 
    /*00014d50*/ BL          0x0000000000014D50          @ VI_UpdateWorkingPipeMkpAttr [R_ARM_CALL: .text+0x2898] 
    /*00014d54*/ ADD         R1, SP, #4 
    /*00014d58*/ MOV         R0, R5 
    /*00014d5c*/ BL          0x0000000000014D5C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014d60*/ MOV         R0, R4 
    /*00014d64*/ BL          0x0000000000014D64          @ VI_COMM_ProcOnlineUpdateAttr [R_ARM_CALL: .text+0x12d14] 
    /*00014d68*/ BL          0x0000000000014D68          @ VI_DRV_IsBnrSupport [R_ARM_CALL: .text+0x2770c] 
    /*00014d6c*/ CMP         R0, #1 
    /*00014d70*/ BEQ         VI_COMM_UpdateFirstFramePipeAttr_x14d8c
    VI_COMM_UpdateFirstFramePipeAttr_x14d74:
    /*00014d74*/ MOV         R0, R4 
    /*00014d78*/ BL          0x0000000000014D78          @ VI_DRV_PrepareNextFramePipeAttr [R_ARM_CALL: .text+0x2ea04] 
    /*00014d7c*/ MOV         R0, R4 
    /*00014d80*/ BL          0x0000000000014D80          @ VI_DRV_ProcStartCap [R_ARM_CALL: .text+0x2eafc] 
    /*00014d84*/ ADD         SP, SP, #12 
    /*00014d88*/ POP         {R4, R5, PC} 
    VI_COMM_UpdateFirstFramePipeAttr_x14d8c:
    /*00014d8c*/ MOV         R0, R4 
    /*00014d90*/ BL          0x0000000000011964 
    /*00014d94*/ B           VI_COMM_UpdateFirstFramePipeAttr_x14d74
    /*00014d98*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_COMM_UpdateFirstFramePipeAttr


FUNC_BEGIN VI_COMM_GetDngDynNamicInfo
    /*00014d9c*/ PUSH        {R4, R5, R6, LR} 
    /*00014da0*/ LDR         R5, [R1, #320]              @ 0x140 
    /*00014da4*/ CMP         R5, #0 
    /*00014da8*/ BEQ         VI_COMM_GetDngDynNamicInfo_x14dc8
    /*00014dac*/ MOV         R4, R0 
    /*00014db0*/ MOV         R0, #28 
    /*00014db4*/ BL          0x0000000000014DB4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014db8*/ MOV         R1, R5 
    /*00014dbc*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*00014dc0*/ MOV         R0, R4 
    /*00014dc4*/ BLX         R3 
    VI_COMM_GetDngDynNamicInfo_x14dc8:
    /*00014dc8*/ MOV         R0, #0 
    /*00014dcc*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_COMM_GetDngDynNamicInfo


FUNC_BEGIN VI_COMM_BayerDumpIrqRoute
    /*00014dd0*/ MOVW        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00014dd4*/ MOVT        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00014dd8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00014ddc*/ MOV         R5, R0 
    /*00014de0*/ LDR         R7, [R1, R0, LSL #2] 
    /*00014de4*/ SUB         SP, SP, #12 
    /*00014de8*/ ADD         R6, R7, #12288              @ 0x3000 
    /*00014dec*/ LDR         R4, [R6, #2664]             @ 0xa68 
    /*00014df0*/ CMP         R4, #0 
    /*00014df4*/ BEQ         VI_COMM_BayerDumpIrqRoute_x14e50
    /*00014df8*/ LDR         R4, [R6, #2668]             @ 0xa6c 
    /*00014dfc*/ CMP         R4, #0 
    /*00014e00*/ BNE         VI_COMM_BayerDumpIrqRoute_x14e68
    /*00014e04*/ ADD         IP, R7, #32768              @ 0x8000 
    /*00014e08*/ MOVW        LR, #3554                   @ 0xde2 
    /*00014e0c*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f50] 
    /*00014e10*/ MOV         R1, #16 
    /*00014e14*/ LDR         R0, [IP, #3712]             @ 0xe80 
    /*00014e18*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f50] 
    /*00014e1c*/ LDR         R3, [PC, #100]              @ 0x0000000000014e88 
    /*00014e20*/ ADD         R0, R0, #1 
    /*00014e24*/ STR         R0, [IP, #3712]             @ 0xe80 
    /*00014e28*/ STR         R5, [SP, #4] 
    /*00014e2c*/ MOV         R0, #6 
    /*00014e30*/ STR         LR, [SP] 
    /*00014e34*/ BL          0x0000000000014E34          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_COMM_BayerDumpIrqRoute_x14e38:
    /*00014e38*/ ADD         R0, R7, #14464              @ 0x3880 
    /*00014e3c*/ MOV         R1, #0 
    /*00014e40*/ ADD         R0, R0, #56                 @ 0x38 
    /*00014e44*/ BL          0x0000000000014E44          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00014e48*/ MOV         R3, #0 
    /*00014e4c*/ STR         R3, [R6, #2664]             @ 0xa68 
    VI_COMM_BayerDumpIrqRoute_x14e50:
    /*00014e50*/ MOV         R0, R5 
    /*00014e54*/ MOV         R1, R4 
    /*00014e58*/ BL          0x0000000000014E58          @ VI_PipeFrameRateStatistic [R_ARM_CALL: .text+0x2314] 
    /*00014e5c*/ MOV         R0, #0 
    /*00014e60*/ ADD         SP, SP, #12 
    /*00014e64*/ POP         {R4, R5, R6, R7, PC} 
    VI_COMM_BayerDumpIrqRoute_x14e68:
    /*00014e68*/ ADD         R1, R7, #14720              @ 0x3980 
    /*00014e6c*/ MOV         R4, #1 
    /*00014e70*/ STRD        R2, [R1, #40]               @ 0x28 
    /*00014e74*/ BL          0x0000000000014E74          @ VI_CalcRawTimeRef [R_ARM_CALL: .text+0x5f08] 
    /*00014e78*/ STR         R0, [R6, #2464]             @ 0x9a0 
    /*00014e7c*/ MOV         R0, R5 
    /*00014e80*/ BL          0x0000000000014E80          @ VI_COMM_CapSendDumpFrame [R_ARM_CALL: .text+0x14044] 
    /*00014e84*/ B           VI_COMM_BayerDumpIrqRoute_x14e38
    /*00014e88*/ ANDEQ       R0, R0, R8, LSR #24 
FUNC_END VI_COMM_BayerDumpIrqRoute


FUNC_BEGIN VI_COMM_NeedDoIrqRoute
    /*00014e8c*/ PUSH        {R4, R5, R6, LR} 
    /*00014e90*/ MOV         R5, R1 
    /*00014e94*/ MOV         R4, R0 
    /*00014e98*/ BL          0x0000000000014E98          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*00014e9c*/ CMP         R5, #1 
    /*00014ea0*/ BEQ         VI_COMM_NeedDoIrqRoute_x14eb0
    /*00014ea4*/ SUBS        R0, R4, R0 
    /*00014ea8*/ MOVNE       R0, #1 
    /*00014eac*/ POP         {R4, R5, R6, PC} 
    VI_COMM_NeedDoIrqRoute_x14eb0:
    /*00014eb0*/ SUB         R0, R4, R0 
    /*00014eb4*/ CLZ         R0, R0 
    /*00014eb8*/ LSR         R0, R0, #5 
    /*00014ebc*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_COMM_NeedDoIrqRoute


FUNC_BEGIN VI_COMM_CapMarkFrameOk
    /*00014ec0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00014ec4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00014ec8*/ PUSH        {R4, R5, R6, LR} 
    /*00014ecc*/ LDR         R5, [R3, R0, LSL #2] 
    /*00014ed0*/ ADD         R4, R5, #12288              @ 0x3000 
    /*00014ed4*/ LDR         R3, [R4, #2664]             @ 0xa68 
    /*00014ed8*/ CMP         R3, #1 
    /*00014edc*/ MOVNE       R0, #0 
    /*00014ee0*/ BEQ         VI_COMM_CapMarkFrameOk_x14eec
    /*00014ee4*/ STR         R0, [R4, #2668]             @ 0xa6c 
    /*00014ee8*/ POP         {R4, R5, R6, PC} 
    VI_COMM_CapMarkFrameOk_x14eec:
    /*00014eec*/ BL          0x0000000000014EEC          @ VI_DRV_CapIsWrongInt [R_ARM_CALL: .text+0x34690] 
    /*00014ef0*/ MOV         R1, R0 
    /*00014ef4*/ ADD         R0, R5, #36352              @ 0x8e00 
    /*00014ef8*/ ADD         R0, R0, #172                @ 0xac 
    /*00014efc*/ BL          0x0000000000014EFC          @ VI_Statistic_ErrIntDetect [R_ARM_CALL: .text+0x132b4] 
    /*00014f00*/ CLZ         R0, R0 
    /*00014f04*/ LSR         R0, R0, #5 
    /*00014f08*/ STR         R0, [R4, #2668]             @ 0xa6c 
    /*00014f0c*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_COMM_CapMarkFrameOk


FUNC_BEGIN VI_COMM_StatisticInputFrameRate
    /*00014f10*/ SUB         R1, R1, #4 
    /*00014f14*/ CMP         R1, #1 
    /*00014f18*/ BXHI        LR 
    /*00014f1c*/ MOVW        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00014f20*/ MOVT        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00014f24*/ LDR         R0, [R1, R0, LSL #2] 
    /*00014f28*/ ADD         R0, R0, #37120              @ 0x9100 
    /*00014f2c*/ ADD         R0, R0, #40                 @ 0x28 
    VI_COMM_StatisticInputFrameRate_x14f30:
    /*00014f30*/ B           VI_COMM_StatisticInputFrameRate_x14f30@ VI_StatisticInputFrameRate [R_ARM_JUMP24: .text+0x6b98] 
FUNC_END VI_COMM_StatisticInputFrameRate


FUNC_BEGIN VI_COMM_CapOnlineSendLastFrame
    /*00014f34*/ PUSH        {R4, R6, R7, LR} 
    /*00014f38*/ MOV         R4, R0 
    /*00014f3c*/ MOV         R6, R2 
    /*00014f40*/ MOV         R7, R3 
    /*00014f44*/ BL          0x0000000000014F44          @ VI_SNAP_FindProFrame [R_ARM_CALL: .text+0x1a2c8] 
    /*00014f48*/ MOV         R0, R4 
    /*00014f4c*/ BL          0x0000000000014F4C          @ VI_SNAP_OnlineIrqProc [R_ARM_CALL: .text+0x1a428] 
    /*00014f50*/ MOV         R2, R6 
    /*00014f54*/ MOV         R3, R7 
    /*00014f58*/ MOV         R0, R4 
    /*00014f5c*/ BL          0x0000000000014F5C          @ VI_COMM_BayerDumpIrqRoute [R_ARM_CALL: .text+0x14dd0] 
    /*00014f60*/ MOV         R0, #0 
    /*00014f64*/ POP         {R4, R6, R7, PC} 
FUNC_END VI_COMM_CapOnlineSendLastFrame


FUNC_BEGIN VI_COMM_CapOnlinePrepareNextFrame
    /*00014f68*/ PUSH        {R4, R5, LR} 
    /*00014f6c*/ SUB         SP, SP, #28 
    /*00014f70*/ MOV         R4, R0 
    /*00014f74*/ MOV         R5, R1 
    /*00014f78*/ ADD         R1, SP, #4 
    /*00014f7c*/ BL          0x0000000000014F7C          @ VI_DRV_GetPipeCrop [R_ARM_CALL: .text+0x286fc] 
    /*00014f80*/ ADD         R1, SP, #4 
    /*00014f84*/ MOV         R0, R4 
    /*00014f88*/ BL          0x0000000000014F88          @ VI_DRV_SetCurFeCrop [R_ARM_CALL: .text+0x28728] 
    /*00014f8c*/ MOV         R0, R4 
    /*00014f90*/ BL          0x0000000000014F90          @ VI_COMM_CapPrepareFrame [R_ARM_CALL: .text+0x14ad8] 
    /*00014f94*/ MOV         R0, R4 
    /*00014f98*/ BL          0x0000000000014F98          @ VI_COMM_CaptureFrame [R_ARM_CALL: .text+0x14ce8] 
    /*00014f9c*/ SUB         R3, R5, #4 
    /*00014fa0*/ CMP         R3, #1 
    /*00014fa4*/ BLS         VI_COMM_CapOnlinePrepareNextFrame_x14fbc
    VI_COMM_CapOnlinePrepareNextFrame_x14fa8:
    /*00014fa8*/ MOV         R0, R4 
    /*00014fac*/ BL          0x0000000000014FAC          @ VI_DRV_SetWchRegNewer [R_ARM_CALL: .text+0x32f98] 
    /*00014fb0*/ MOV         R0, #0 
    /*00014fb4*/ ADD         SP, SP, #28 
    /*00014fb8*/ POP         {R4, R5, PC} 
    VI_COMM_CapOnlinePrepareNextFrame_x14fbc:
    /*00014fbc*/ MOV         R1, R5 
    /*00014fc0*/ MOV         R0, R4 
    /*00014fc4*/ BL          0x0000000000014FC4          @ VI_DRV_SetParallelCrop [R_ARM_CALL: .text+0x32f90] 
    /*00014fc8*/ MOV         R0, R4 
    /*00014fcc*/ MOV         R1, #1 
    /*00014fd0*/ BL          0x0000000000014FD0          @ VI_DRV_SetWchSttInfo [R_ARM_CALL: .text+0x32f9c] 
    /*00014fd4*/ MOV         R0, R4 
    /*00014fd8*/ BL          0x0000000000014FD8          @ VI_DRV_SetParallelNewer [R_ARM_CALL: .text+0x32f94] 
    /*00014fdc*/ B           VI_COMM_CapOnlinePrepareNextFrame_x14fa8
FUNC_END VI_COMM_CapOnlinePrepareNextFrame


FUNC_BEGIN VI_COMM_CapOnLineFrameStartIrqRoute
    /*00014fe0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00014fe4*/ MOV         R5, R1 
    /*00014fe8*/ MOV         R6, R2 
    /*00014fec*/ MOV         R7, R3 
    /*00014ff0*/ MOV         R4, R0 
    /*00014ff4*/ BL          0x0000000000014FF4          @ VI_DRV_GetFeWchIntStatus [R_ARM_CALL: .text+0x31600] 
    /*00014ff8*/ TST         R0, #1 
    /*00014ffc*/ BNE         VI_COMM_CapOnLineFrameStartIrqRoute_x15008
    VI_COMM_CapOnLineFrameStartIrqRoute_x15000:
    /*00015000*/ MOV         R0, #0 
    /*00015004*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_COMM_CapOnLineFrameStartIrqRoute_x15008:
    /*00015008*/ MOV         R8, R0 
    /*0001500c*/ MOV         R1, #15 
    /*00015010*/ MOV         R0, R4 
    /*00015014*/ BL          0x0000000000015014          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*00015018*/ MOV         R1, #0 
    /*0001501c*/ MOV         R2, R8 
    /*00015020*/ MOV         R0, R4 
    /*00015024*/ BL          0x0000000000015024          @ VI_COMM_CapMarkFrameOk [R_ARM_CALL: .text+0x14ec0] 
    /*00015028*/ MOV         R2, R6 
    /*0001502c*/ MOV         R3, R7 
    /*00015030*/ MOV         R0, R4 
    /*00015034*/ BL          0x0000000000015034          @ VI_COMM_CapOnlineSendLastFrame [R_ARM_CALL: .text+0x14f34] 
    /*00015038*/ MOV         R1, R5 
    /*0001503c*/ MOV         R0, R4 
    /*00015040*/ SUB         R5, R5, #4 
    /*00015044*/ BL          0x0000000000015044          @ VI_COMM_CapOnlinePrepareNextFrame [R_ARM_CALL: .text+0x14f68] 
    /*00015048*/ CMP         R5, #1 
    /*0001504c*/ BHI         VI_COMM_CapOnLineFrameStartIrqRoute_x15000
    /*00015050*/ MOVW        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00015054*/ MOVT        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00015058*/ MOV         R2, R6 
    /*0001505c*/ MOV         R3, R7 
    /*00015060*/ LDR         R0, [R1, R4, LSL #2] 
    /*00015064*/ ADD         R0, R0, #37120              @ 0x9100 
    /*00015068*/ ADD         R0, R0, #40                 @ 0x28 
    /*0001506c*/ BL          0x000000000001506C          @ VI_StatisticInputFrameRate [R_ARM_CALL: .text+0x6b98] 
    /*00015070*/ B           VI_COMM_CapOnLineFrameStartIrqRoute_x15000
FUNC_END VI_COMM_CapOnLineFrameStartIrqRoute


FUNC_BEGIN VI_COMM_CapOnLineFrameEarlyIrqRoute
    /*00015074*/ PUSH        {R4, R5, R6, R8, R9, LR} 
    /*00015078*/ MOV         R6, R1 
    /*0001507c*/ MOV         R8, R2 
    /*00015080*/ MOV         R9, R3 
    /*00015084*/ MOV         R5, R0 
    /*00015088*/ BL          0x0000000000015088          @ VI_DRV_GetFeWchIntStatus [R_ARM_CALL: .text+0x31600] 
    /*0001508c*/ TST         R0, #1 
    /*00015090*/ MOV         R4, R0 
    /*00015094*/ BNE         VI_COMM_CapOnLineFrameEarlyIrqRoute_x15118
    VI_COMM_CapOnLineFrameEarlyIrqRoute_x15098:
    /*00015098*/ TST         R4, #32768                  @ 0x8000 
    /*0001509c*/ BNE         VI_COMM_CapOnLineFrameEarlyIrqRoute_x150a8
    VI_COMM_CapOnLineFrameEarlyIrqRoute_x150a0:
    /*000150a0*/ MOV         R0, #0 
    /*000150a4*/ POP         {R4, R5, R6, R8, R9, PC} 
    VI_COMM_CapOnLineFrameEarlyIrqRoute_x150a8:
    /*000150a8*/ MOVW        R1, #32780                  @ 0x800c 
    /*000150ac*/ MOV         R0, R5 
    /*000150b0*/ BL          0x00000000000150B0          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*000150b4*/ CMP         R6, #3 
    /*000150b8*/ BEQ         VI_COMM_CapOnLineFrameEarlyIrqRoute_x15128
    /*000150bc*/ MOV         R1, R6 
    /*000150c0*/ MOV         R0, R5 
    /*000150c4*/ BL          0x00000000000150C4          @ VI_COMM_CapOnlinePrepareNextFrame [R_ARM_CALL: .text+0x14f68] 
    /*000150c8*/ MOV         R2, R4 
    /*000150cc*/ MOV         R1, #1 
    /*000150d0*/ MOV         R0, R5 
    /*000150d4*/ BL          0x00000000000150D4          @ VI_COMM_CapMarkFrameOk [R_ARM_CALL: .text+0x14ec0] 
    /*000150d8*/ SUB         R6, R6, #4 
    /*000150dc*/ MOV         R2, R8 
    /*000150e0*/ MOV         R3, R9 
    /*000150e4*/ MOV         R0, R5 
    /*000150e8*/ BL          0x00000000000150E8          @ VI_COMM_CapOnlineSendLastFrame [R_ARM_CALL: .text+0x14f34] 
    /*000150ec*/ CMP         R6, #1 
    /*000150f0*/ BHI         VI_COMM_CapOnLineFrameEarlyIrqRoute_x150a0
    /*000150f4*/ MOVW        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000150f8*/ MOVT        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000150fc*/ MOV         R2, R8 
    /*00015100*/ MOV         R3, R9 
    /*00015104*/ LDR         R0, [R1, R5, LSL #2] 
    /*00015108*/ ADD         R0, R0, #37120              @ 0x9100 
    /*0001510c*/ ADD         R0, R0, #40                 @ 0x28 
    /*00015110*/ BL          0x0000000000015110          @ VI_StatisticInputFrameRate [R_ARM_CALL: .text+0x6b98] 
    /*00015114*/ B           VI_COMM_CapOnLineFrameEarlyIrqRoute_x150a0
    VI_COMM_CapOnLineFrameEarlyIrqRoute_x15118:
    /*00015118*/ MOV         R1, #1 
    /*0001511c*/ MOV         R0, R5 
    /*00015120*/ BL          0x0000000000015120          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*00015124*/ B           VI_COMM_CapOnLineFrameEarlyIrqRoute_x15098
    VI_COMM_CapOnLineFrameEarlyIrqRoute_x15128:
    /*00015128*/ MOV         R0, #7 
    /*0001512c*/ BL          0x000000000001512C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015130*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00015134*/ CMP         R3, #0 
    /*00015138*/ BEQ         VI_COMM_CapOnLineFrameEarlyIrqRoute_x15150
    /*0001513c*/ MOV         R0, #7 
    /*00015140*/ BL          0x0000000000015140          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015144*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00015148*/ MOV         R0, R5 
    /*0001514c*/ BLX         R3 
    VI_COMM_CapOnLineFrameEarlyIrqRoute_x15150:
    /*00015150*/ MOV         R1, #3 
    /*00015154*/ MOV         R0, R5 
    /*00015158*/ BL          0x0000000000015158          @ VI_COMM_CapOnlinePrepareNextFrame [R_ARM_CALL: .text+0x14f68] 
    /*0001515c*/ MOV         R2, R4 
    /*00015160*/ MOV         R0, R5 
    /*00015164*/ MOV         R1, #1 
    /*00015168*/ BL          0x0000000000015168          @ VI_COMM_CapMarkFrameOk [R_ARM_CALL: .text+0x14ec0] 
    /*0001516c*/ MOV         R2, R8 
    /*00015170*/ MOV         R3, R9 
    /*00015174*/ MOV         R0, R5 
    /*00015178*/ BL          0x0000000000015178          @ VI_COMM_CapOnlineSendLastFrame [R_ARM_CALL: .text+0x14f34] 
    /*0001517c*/ B           VI_COMM_CapOnLineFrameEarlyIrqRoute_x150a0
FUNC_END VI_COMM_CapOnLineFrameEarlyIrqRoute


FUNC_BEGIN VI_COMM_CapOnLineFrameEarlyEndIrqRoute
    /*00015180*/ PUSH        {R4, R5, R6, R8, R9, LR} 
    /*00015184*/ MOV         R6, R1 
    /*00015188*/ MOV         R8, R2 
    /*0001518c*/ MOV         R9, R3 
    /*00015190*/ MOV         R5, R0 
    /*00015194*/ BL          0x0000000000015194          @ VI_DRV_GetFeWchIntStatus [R_ARM_CALL: .text+0x31600] 
    /*00015198*/ TST         R0, #1 
    /*0001519c*/ MOV         R4, R0 
    /*000151a0*/ BNE         VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x15238
    VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x151a4:
    /*000151a4*/ TST         R4, #32768                  @ 0x8000 
    /*000151a8*/ BNE         VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x151e8
    VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x151ac:
    /*000151ac*/ TST         R4, #2 
    /*000151b0*/ BEQ         VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x151e0
    /*000151b4*/ MOV         R1, #14 
    /*000151b8*/ MOV         R0, R5 
    /*000151bc*/ BL          0x00000000000151BC          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*000151c0*/ MOV         R2, R4 
    /*000151c4*/ MOV         R0, R5 
    /*000151c8*/ MOV         R1, #2 
    /*000151cc*/ BL          0x00000000000151CC          @ VI_COMM_CapMarkFrameOk [R_ARM_CALL: .text+0x14ec0] 
    /*000151d0*/ MOV         R2, R8 
    /*000151d4*/ MOV         R3, R9 
    /*000151d8*/ MOV         R0, R5 
    /*000151dc*/ BL          0x00000000000151DC          @ VI_COMM_CapOnlineSendLastFrame [R_ARM_CALL: .text+0x14f34] 
    VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x151e0:
    /*000151e0*/ MOV         R0, #0 
    /*000151e4*/ POP         {R4, R5, R6, R8, R9, PC} 
    VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x151e8:
    /*000151e8*/ MOV         R1, #32768                  @ 0x8000 
    /*000151ec*/ MOV         R0, R5 
    /*000151f0*/ BL          0x00000000000151F0          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*000151f4*/ CMP         R6, #3 
    /*000151f8*/ BEQ         VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x15248
    /*000151fc*/ MOV         R1, R6 
    /*00015200*/ MOV         R0, R5 
    /*00015204*/ SUB         R6, R6, #4 
    /*00015208*/ BL          0x0000000000015208          @ VI_COMM_CapOnlinePrepareNextFrame [R_ARM_CALL: .text+0x14f68] 
    /*0001520c*/ CMP         R6, #1 
    /*00015210*/ BHI         VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x151ac
    /*00015214*/ MOVW        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00015218*/ MOVT        R1, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001521c*/ MOV         R2, R8 
    /*00015220*/ MOV         R3, R9 
    /*00015224*/ LDR         R0, [R1, R5, LSL #2] 
    /*00015228*/ ADD         R0, R0, #37120              @ 0x9100 
    /*0001522c*/ ADD         R0, R0, #40                 @ 0x28 
    /*00015230*/ BL          0x0000000000015230          @ VI_StatisticInputFrameRate [R_ARM_CALL: .text+0x6b98] 
    /*00015234*/ B           VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x151ac
    VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x15238:
    /*00015238*/ MOV         R1, #1 
    /*0001523c*/ MOV         R0, R5 
    /*00015240*/ BL          0x0000000000015240          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*00015244*/ B           VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x151a4
    VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x15248:
    /*00015248*/ MOV         R0, #7 
    /*0001524c*/ BL          0x000000000001524C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015250*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00015254*/ CMP         R3, #0 
    /*00015258*/ BEQ         VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x15270
    /*0001525c*/ MOV         R0, #7 
    /*00015260*/ BL          0x0000000000015260          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015264*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00015268*/ MOV         R0, R5 
    /*0001526c*/ BLX         R3 
    VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x15270:
    /*00015270*/ MOV         R1, #3 
    /*00015274*/ MOV         R0, R5 
    /*00015278*/ BL          0x0000000000015278          @ VI_COMM_CapOnlinePrepareNextFrame [R_ARM_CALL: .text+0x14f68] 
    /*0001527c*/ B           VI_COMM_CapOnLineFrameEarlyEndIrqRoute_x151ac
FUNC_END VI_COMM_CapOnLineFrameEarlyEndIrqRoute


FUNC_BEGIN VI_COMM_CapOnLineIrqRoute
    /*00015280*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00015284*/ MOV         R4, #176                    @ 0xb0 
    /*00015288*/ MUL         R4, R4, R0 
    /*0001528c*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00015290*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00015294*/ SUB         SP, SP, #24 
    /*00015298*/ MOV         R6, R0 
    /*0001529c*/ MOV         R9, R1 
    /*000152a0*/ ADD         R7, R4, #140                @ 0x8c 
    /*000152a4*/ ADD         R1, SP, #12 
    /*000152a8*/ ADD         R7, R5, R7 
    /*000152ac*/ MOV         SL, R2 
    /*000152b0*/ MOV         R0, R7 
    /*000152b4*/ BL          0x00000000000152B4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000152b8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000152bc*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000152c0*/ LDR         R8, [R3, R6, LSL #2] 
    /*000152c4*/ CMP         R8, #0 
    /*000152c8*/ BEQ         VI_COMM_CapOnLineIrqRoute_x15450
    /*000152cc*/ LDR         R3, [R5, R4] 
    /*000152d0*/ ADD         R2, R5, R4 
    /*000152d4*/ CMP         R3, #0 
    /*000152d8*/ BNE         VI_COMM_CapOnLineIrqRoute_x152e8
    /*000152dc*/ LDR         R3, [R2, #4] 
    /*000152e0*/ CMP         R3, #0 
    /*000152e4*/ BEQ         VI_COMM_CapOnLineIrqRoute_x15330
    VI_COMM_CapOnLineIrqRoute_x152e8:
    /*000152e8*/ MOVW        R1, #65535                  @ 0xffff 
    /*000152ec*/ MOV         R0, R6 
    /*000152f0*/ BL          0x00000000000152F0          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*000152f4*/ ADD         R1, SP, #12 
    /*000152f8*/ MOV         R0, R7 
    /*000152fc*/ BL          0x00000000000152FC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015300*/ MOVW        R3, #3864                   @ 0xf18 
    /*00015304*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5868] 
    /*00015308*/ STR         R3, [SP] 
    /*0001530c*/ STR         R6, [SP, #4] 
    /*00015310*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5868] 
    /*00015314*/ LDR         R3, [PC, #392]              @ 0x00000000000154a4 
    /*00015318*/ MOV         R1, #16 
    /*0001531c*/ MOV         R0, #7 
    /*00015320*/ BL          0x0000000000015320          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_COMM_CapOnLineIrqRoute_x15324:
    /*00015324*/ MOV         R0, #0 
    /*00015328*/ ADD         SP, SP, #24 
    /*0001532c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_CapOnLineIrqRoute_x15330:
    /*00015330*/ MOV         R0, R6 
    /*00015334*/ BL          0x0000000000015334          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*00015338*/ CMP         SL, #1 
    /*0001533c*/ BEQ         VI_COMM_CapOnLineIrqRoute_x153d8
    /*00015340*/ CMP         R6, R0 
    /*00015344*/ BEQ         VI_COMM_CapOnLineIrqRoute_x153e0
    VI_COMM_CapOnLineIrqRoute_x15348:
    /*00015348*/ MOV         R3, #176                    @ 0xb0 
    /*0001534c*/ ADD         R8, R8, #32768              @ 0x8000 
    /*00015350*/ MLA         R3, R3, R6, R5 
    /*00015354*/ LDR         R2, [R8, #3656]             @ 0xe48 
    /*00015358*/ MOV         R0, R6 
    /*0001535c*/ ADD         R2, R2, #1 
    /*00015360*/ STR         R2, [R8, #3656]             @ 0xe48 
    /*00015364*/ MOV         R2, #1 
    /*00015368*/ STR         R2, [R3, #12] 
    /*0001536c*/ BL          0x000000000001536C          @ VI_UpdateWorkingPipeChnMkpAttr [R_ARM_CALL: .text+0x2988] 
    /*00015370*/ ADD         R1, SP, #12 
    /*00015374*/ MOV         R0, R7 
    /*00015378*/ BL          0x0000000000015378          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001537c*/ MOV         R0, R6 
    /*00015380*/ BL          0x0000000000015380          @ VI_COMM_IsPipeStart [R_ARM_CALL: .text+0x13c9c] 
    /*00015384*/ CMP         R0, #0 
    /*00015388*/ BNE         VI_COMM_CapOnLineIrqRoute_x153f8
    /*0001538c*/ MOVW        R1, #65535                  @ 0xffff 
    /*00015390*/ MOV         R0, R6 
    /*00015394*/ BL          0x0000000000015394          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    VI_COMM_CapOnLineIrqRoute_x15398:
    /*00015398*/ ADD         R1, SP, #12 
    /*0001539c*/ MOV         R0, R7 
    /*000153a0*/ BL          0x00000000000153A0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000153a4*/ MOV         R3, #176                    @ 0xb0 
    /*000153a8*/ MLA         R6, R3, R6, R5 
    /*000153ac*/ ADD         R0, R4, #88                 @ 0x58 
    /*000153b0*/ MOV         R3, #0 
    /*000153b4*/ ADD         R0, R5, R0 
    /*000153b8*/ STR         R3, [R6, #12] 
    /*000153bc*/ BL          0x00000000000153BC          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000153c0*/ MOV         R0, R7 
    /*000153c4*/ ADD         R1, SP, #12 
    /*000153c8*/ BL          0x00000000000153C8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000153cc*/ MOV         R0, #0 
    /*000153d0*/ ADD         SP, SP, #24 
    /*000153d4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_CapOnLineIrqRoute_x153d8:
    /*000153d8*/ CMP         R6, R0 
    /*000153dc*/ BEQ         VI_COMM_CapOnLineIrqRoute_x15348
    VI_COMM_CapOnLineIrqRoute_x153e0:
    /*000153e0*/ MOV         R0, R7 
    /*000153e4*/ ADD         R1, SP, #12 
    /*000153e8*/ BL          0x00000000000153E8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000153ec*/ MOV         R0, #0 
    /*000153f0*/ ADD         SP, SP, #24 
    /*000153f4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_CapOnLineIrqRoute_x153f8:
    /*000153f8*/ ADD         R1, SP, #16 
    /*000153fc*/ MOV         R0, R6 
    /*00015400*/ BL          0x0000000000015400          @ VI_DRV_GetPipeFrameInterruptAttr [R_ARM_CALL: .text+0x33b9c] 
    /*00015404*/ LDR         R3, [SP, #16] 
    /*00015408*/ CMP         R3, #1 
    /*0001540c*/ BEQ         VI_COMM_CapOnLineIrqRoute_x15490
    /*00015410*/ BCC         VI_COMM_CapOnLineIrqRoute_x1543c
    /*00015414*/ CMP         R3, #2 
    /*00015418*/ BNE         VI_COMM_CapOnLineIrqRoute_x1542c
    /*0001541c*/ MOV         R1, R9 
    /*00015420*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*00015424*/ MOV         R0, R6 
    /*00015428*/ BL          0x0000000000015428          @ VI_COMM_CapOnLineFrameEarlyEndIrqRoute [R_ARM_CALL: .text+0x15180] 
    VI_COMM_CapOnLineIrqRoute_x1542c:
    /*0001542c*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*00015430*/ MOV         R0, R6 
    /*00015434*/ BL          0x0000000000015434          @ VI_COMM_CapStatisticsIntTime [R_ARM_CALL: .text+0x13f60] 
    /*00015438*/ B           VI_COMM_CapOnLineIrqRoute_x15398
    VI_COMM_CapOnLineIrqRoute_x1543c:
    /*0001543c*/ MOV         R1, R9 
    /*00015440*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*00015444*/ MOV         R0, R6 
    /*00015448*/ BL          0x0000000000015448          @ VI_COMM_CapOnLineFrameStartIrqRoute [R_ARM_CALL: .text+0x14fe0] 
    /*0001544c*/ B           VI_COMM_CapOnLineIrqRoute_x1542c
    VI_COMM_CapOnLineIrqRoute_x15450:
    /*00015450*/ MOV         R0, R6 
    /*00015454*/ MOVW        R1, #65535                  @ 0xffff 
    /*00015458*/ BL          0x0000000000015458          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*0001545c*/ ADD         R1, SP, #12 
    /*00015460*/ MOV         R0, R7 
    /*00015464*/ BL          0x0000000000015464          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015468*/ MOVW        R3, #3854                   @ 0xf0e 
    /*0001546c*/ STR         R6, [SP, #4] 
    /*00015470*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57f8] 
    /*00015474*/ STR         R3, [SP] 
    /*00015478*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57f8] 
    /*0001547c*/ LDR         R3, [PC, #32]               @ 0x00000000000154a4 
    /*00015480*/ MOV         R1, #16 
    /*00015484*/ MOV         R0, #3 
    /*00015488*/ BL          0x0000000000015488          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001548c*/ B           VI_COMM_CapOnLineIrqRoute_x15324
    VI_COMM_CapOnLineIrqRoute_x15490:
    /*00015490*/ MOV         R1, R9 
    /*00015494*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*00015498*/ MOV         R0, R6 
    /*0001549c*/ BL          0x000000000001549C          @ VI_COMM_CapOnLineFrameEarlyIrqRoute [R_ARM_CALL: .text+0x15074] 
    /*000154a0*/ B           VI_COMM_CapOnLineIrqRoute_x1542c
    /*000154a4*/ ANDEQ       R0, R0, R4, ASR #24 
FUNC_END VI_COMM_CapOnLineIrqRoute


FUNC_BEGIN VI_COMM_CapOfflineSendLastFrame
    /*000154a8*/ MOVW        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000154ac*/ MOVT        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000154b0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000154b4*/ MOV         R4, R0 
    /*000154b8*/ MOV         R8, R1 
    /*000154bc*/ MOV         R6, R2 
    /*000154c0*/ MOV         R7, R3 
    /*000154c4*/ LDR         R5, [IP, R0, LSL #2] 
    /*000154c8*/ BL          0x00000000000154C8          @ VI_IsUserPicEnable [R_ARM_CALL: .text+0x1dd94] 
    /*000154cc*/ CMP         R0, #1 
    /*000154d0*/ BEQ         VI_COMM_CapOfflineSendLastFrame_x1551c
    /*000154d4*/ ADD         R3, R5, #14720              @ 0x3980 
    /*000154d8*/ ADD         R2, R5, #14912              @ 0x3a40 
    /*000154dc*/ MOV         R0, R4 
    /*000154e0*/ STRD        R6, [R2, #24] 
    /*000154e4*/ STRD        R6, [R3, #40]               @ 0x28 
    /*000154e8*/ BL          0x00000000000154E8          @ VI_CalcRawTimeRef [R_ARM_CALL: .text+0x5f08] 
    /*000154ec*/ ADD         R3, R5, #12288              @ 0x3000 
    /*000154f0*/ STR         R0, [R3, #2464]             @ 0x9a0 
    /*000154f4*/ MOV         R0, R4 
    /*000154f8*/ LDR         R3, [R5] 
    /*000154fc*/ CMP         R3, #2 
    /*00015500*/ BEQ         VI_COMM_CapOfflineSendLastFrame_x15554
    /*00015504*/ BL          0x0000000000015504          @ VI_SNAP_FindProFrame [R_ARM_CALL: .text+0x1a2c8] 
    /*00015508*/ MOV         R0, R4 
    /*0001550c*/ MOV         R1, R8 
    /*00015510*/ BL          0x0000000000015510          @ VI_COMM_CapSendOffLineFrame [R_ARM_CALL: .text+0x149a4] 
    /*00015514*/ MOV         R0, #0 
    /*00015518*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_COMM_CapOfflineSendLastFrame_x1551c:
    /*0001551c*/ ADD         R6, R5, #12288              @ 0x3000 
    /*00015520*/ LDR         R3, [R6, #2664]             @ 0xa68 
    /*00015524*/ CMP         R3, #0 
    /*00015528*/ BEQ         VI_COMM_CapOfflineSendLastFrame_x15544
    /*0001552c*/ ADD         R0, R5, #14464              @ 0x3880 
    /*00015530*/ MOV         R1, #0 
    /*00015534*/ ADD         R0, R0, #56                 @ 0x38 
    /*00015538*/ BL          0x0000000000015538          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001553c*/ MOV         R3, #0 
    /*00015540*/ STR         R3, [R6, #2664]             @ 0xa68 
    VI_COMM_CapOfflineSendLastFrame_x15544:
    /*00015544*/ MOV         R0, R4 
    /*00015548*/ BL          0x0000000000015548          @ VI_COMM_UserPicIrqRoute [R_ARM_CALL: .text+0x1da1c] 
    /*0001554c*/ MOV         R0, #0 
    /*00015550*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_COMM_CapOfflineSendLastFrame_x15554:
    /*00015554*/ BL          0x0000000000015554          @ VI_COMM_CapSendOffYUVFrame [R_ARM_CALL: .text+0x14304] 
    /*00015558*/ MOV         R0, #0 
    /*0001555c*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_COMM_CapOfflineSendLastFrame


FUNC_BEGIN VI_COMM_CapOfflinePrepareNextFrame
    /*00015560*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00015564*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00015568*/ PUSH        {R4, R5, LR} 
    /*0001556c*/ SUB         SP, SP, #28 
    /*00015570*/ MOV         R4, R0 
    /*00015574*/ LDR         R5, [R3, R0, LSL #2] 
    /*00015578*/ BL          0x0000000000015578          @ VI_IsUserPicEnable [R_ARM_CALL: .text+0x1dd94] 
    /*0001557c*/ CMP         R0, #1 
    /*00015580*/ BEQ         VI_COMM_CapOfflinePrepareNextFrame_x155c0
    /*00015584*/ LDR         R3, [R5] 
    /*00015588*/ MOV         R0, R4 
    /*0001558c*/ ADD         R1, SP, #4 
    /*00015590*/ CMP         R3, #2 
    /*00015594*/ BEQ         VI_COMM_CapOfflinePrepareNextFrame_x155d4
    /*00015598*/ BL          0x0000000000015598          @ VI_DRV_GetPipeCrop [R_ARM_CALL: .text+0x286fc] 
    /*0001559c*/ ADD         R1, SP, #4 
    /*000155a0*/ MOV         R0, R4 
    /*000155a4*/ BL          0x00000000000155A4          @ VI_DRV_SetCurFeCrop [R_ARM_CALL: .text+0x28728] 
    /*000155a8*/ MOV         R0, R4 
    /*000155ac*/ BL          0x00000000000155AC          @ VI_COMM_CapPrepareFrame [R_ARM_CALL: .text+0x14ad8] 
    /*000155b0*/ MOV         R0, R4 
    /*000155b4*/ BL          0x00000000000155B4          @ VI_COMM_CaptureFrame [R_ARM_CALL: .text+0x14ce8] 
    /*000155b8*/ MOV         R0, R4 
    /*000155bc*/ BL          0x00000000000155BC          @ VI_SNAP_OfflineIsStopIrqProc [R_ARM_CALL: .text+0x1a330] 
    VI_COMM_CapOfflinePrepareNextFrame_x155c0:
    /*000155c0*/ MOV         R0, R4 
    /*000155c4*/ BL          0x00000000000155C4          @ VI_DRV_SetWchRegNewer [R_ARM_CALL: .text+0x32f98] 
    /*000155c8*/ MOV         R0, #0 
    /*000155cc*/ ADD         SP, SP, #28 
    /*000155d0*/ POP         {R4, R5, PC} 
    VI_COMM_CapOfflinePrepareNextFrame_x155d4:
    /*000155d4*/ BL          0x00000000000155D4          @ VI_DRV_GetPipeCrop [R_ARM_CALL: .text+0x286fc] 
    /*000155d8*/ ADD         R1, SP, #4 
    /*000155dc*/ MOV         R0, R4 
    /*000155e0*/ BL          0x00000000000155E0          @ VI_DRV_SetCurFeCrop [R_ARM_CALL: .text+0x28728] 
    /*000155e4*/ MOV         R0, R4 
    /*000155e8*/ BL          0x00000000000155E8          @ VI_COMM_CapPrepareFrame [R_ARM_CALL: .text+0x14ad8] 
    /*000155ec*/ MOV         R0, R4 
    /*000155f0*/ BL          0x00000000000155F0          @ VI_COMM_CaptureFrame [R_ARM_CALL: .text+0x14ce8] 
    /*000155f4*/ B           VI_COMM_CapOfflinePrepareNextFrame_x155c0
FUNC_END VI_COMM_CapOfflinePrepareNextFrame


FUNC_BEGIN VI_COMM_CapOfflineFrameStartIrqRoute
    /*000155f8*/ PUSH        {R4, R5, R6, R8, R9, LR} 
    /*000155fc*/ MOV         R6, R1 
    /*00015600*/ MOV         R8, R2 
    /*00015604*/ MOV         R9, R3 
    /*00015608*/ MOV         R4, R0 
    /*0001560c*/ BL          0x000000000001560C          @ VI_DRV_GetFeWchIntStatus [R_ARM_CALL: .text+0x31600] 
    /*00015610*/ TST         R0, #1 
    /*00015614*/ BEQ         VI_COMM_CapOfflineFrameStartIrqRoute_x15654
    /*00015618*/ MOV         R5, R0 
    /*0001561c*/ MOV         R1, #15 
    /*00015620*/ MOV         R0, R4 
    /*00015624*/ BL          0x0000000000015624          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*00015628*/ MOV         R2, R5 
    /*0001562c*/ MOV         R1, #0 
    /*00015630*/ MOV         R0, R4 
    /*00015634*/ BL          0x0000000000015634          @ VI_COMM_CapMarkFrameOk [R_ARM_CALL: .text+0x14ec0] 
    /*00015638*/ MOV         R2, R8 
    /*0001563c*/ MOV         R3, R9 
    /*00015640*/ MOV         R1, R6 
    /*00015644*/ MOV         R0, R4 
    /*00015648*/ BL          0x0000000000015648          @ VI_COMM_CapOfflineSendLastFrame [R_ARM_CALL: .text+0x154a8] 
    /*0001564c*/ MOV         R0, R4 
    /*00015650*/ BL          0x0000000000015650          @ VI_COMM_CapOfflinePrepareNextFrame [R_ARM_CALL: .text+0x15560] 
    VI_COMM_CapOfflineFrameStartIrqRoute_x15654:
    /*00015654*/ MOV         R0, #0 
    /*00015658*/ POP         {R4, R5, R6, R8, R9, PC} 
FUNC_END VI_COMM_CapOfflineFrameStartIrqRoute


FUNC_BEGIN VI_COMM_CapOfflineFrameEarlyIrqRoute
    /*0001565c*/ PUSH        {R4, R5, R6, R8, R9, LR} 
    /*00015660*/ MOV         R6, R1 
    /*00015664*/ MOV         R8, R2 
    /*00015668*/ MOV         R9, R3 
    /*0001566c*/ MOV         R5, R0 
    /*00015670*/ BL          0x0000000000015670          @ VI_DRV_GetFeWchIntStatus [R_ARM_CALL: .text+0x31600] 
    /*00015674*/ TST         R0, #1 
    /*00015678*/ MOV         R4, R0 
    /*0001567c*/ BNE         VI_COMM_CapOfflineFrameEarlyIrqRoute_x156c8
    VI_COMM_CapOfflineFrameEarlyIrqRoute_x15680:
    /*00015680*/ TST         R4, #32768                  @ 0x8000 
    /*00015684*/ BEQ         VI_COMM_CapOfflineFrameEarlyIrqRoute_x156c0
    /*00015688*/ MOVW        R1, #32780                  @ 0x800c 
    /*0001568c*/ MOV         R0, R5 
    /*00015690*/ BL          0x0000000000015690          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*00015694*/ MOV         R0, R5 
    /*00015698*/ BL          0x0000000000015698          @ VI_COMM_CapOfflinePrepareNextFrame [R_ARM_CALL: .text+0x15560] 
    /*0001569c*/ MOV         R2, R4 
    /*000156a0*/ MOV         R1, #1 
    /*000156a4*/ MOV         R0, R5 
    /*000156a8*/ BL          0x00000000000156A8          @ VI_COMM_CapMarkFrameOk [R_ARM_CALL: .text+0x14ec0] 
    /*000156ac*/ MOV         R2, R8 
    /*000156b0*/ MOV         R3, R9 
    /*000156b4*/ MOV         R1, R6 
    /*000156b8*/ MOV         R0, R5 
    /*000156bc*/ BL          0x00000000000156BC          @ VI_COMM_CapOfflineSendLastFrame [R_ARM_CALL: .text+0x154a8] 
    VI_COMM_CapOfflineFrameEarlyIrqRoute_x156c0:
    /*000156c0*/ MOV         R0, #0 
    /*000156c4*/ POP         {R4, R5, R6, R8, R9, PC} 
    VI_COMM_CapOfflineFrameEarlyIrqRoute_x156c8:
    /*000156c8*/ MOV         R1, #1 
    /*000156cc*/ MOV         R0, R5 
    /*000156d0*/ BL          0x00000000000156D0          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*000156d4*/ B           VI_COMM_CapOfflineFrameEarlyIrqRoute_x15680
FUNC_END VI_COMM_CapOfflineFrameEarlyIrqRoute


FUNC_BEGIN VI_COMM_IrqAbnormalOrder
    /*000156d8*/ MOVW        R3, #32770                  @ 0x8002 
    /*000156dc*/ BICS        R3, R3, R1 
    /*000156e0*/ MOVWEQ      R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000156e4*/ MOVTEQ      R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000156e8*/ LDREQ       R3, [R3, R0, LSL #2] 
    /*000156ec*/ ADDEQ       R3, R3, #12288              @ 0x3000 
    /*000156f0*/ LDREQ       R0, [R3, #2664]             @ 0xa68 
    /*000156f4*/ MOVNE       R0, #0 
    /*000156f8*/ BX          LR 
FUNC_END VI_COMM_IrqAbnormalOrder


FUNC_BEGIN VI_COMM_CapOfflineFrameEarlyEndIrqRoute
    /*000156fc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00015700*/ MOV         R8, R1 
    /*00015704*/ MOV         R6, R2 
    /*00015708*/ MOV         R7, R3 
    /*0001570c*/ MOV         R5, R0 
    /*00015710*/ BL          0x0000000000015710          @ VI_DRV_GetFeWchIntStatus [R_ARM_CALL: .text+0x31600] 
    /*00015714*/ TST         R0, #1 
    /*00015718*/ MOV         R4, R0 
    /*0001571c*/ BNE         VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x15744
    /*00015720*/ MOVW        R3, #32770                  @ 0x8002 
    /*00015724*/ BICS        R3, R3, R4 
    /*00015728*/ BEQ         VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x1575c
    VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x1572c:
    /*0001572c*/ TST         R4, #32768                  @ 0x8000 
    /*00015730*/ BNE         VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x157a4
    /*00015734*/ TST         R4, #2 
    /*00015738*/ BNE         VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x157c0
    VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x1573c:
    /*0001573c*/ MOV         R0, #0 
    /*00015740*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x15744:
    /*00015744*/ MOV         R1, #1 
    /*00015748*/ MOV         R0, R5 
    /*0001574c*/ BL          0x000000000001574C          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*00015750*/ MOVW        R3, #32770                  @ 0x8002 
    /*00015754*/ BICS        R3, R3, R4 
    /*00015758*/ BNE         VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x1572c
    VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x1575c:
    /*0001575c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00015760*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00015764*/ LDR         R3, [R3, R5, LSL #2] 
    /*00015768*/ ADD         R3, R3, #12288              @ 0x3000 
    /*0001576c*/ LDR         R3, [R3, #2664]             @ 0xa68 
    /*00015770*/ CMP         R3, #0 
    /*00015774*/ BEQ         VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x1572c
    /*00015778*/ TST         R4, #2 
    /*0001577c*/ BNE         VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x157f8
    VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x15780:
    /*00015780*/ TST         R4, #32768                  @ 0x8000 
    /*00015784*/ BEQ         VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x1573c
    /*00015788*/ MOV         R1, #32768                  @ 0x8000 
    /*0001578c*/ MOV         R0, R5 
    /*00015790*/ BL          0x0000000000015790          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*00015794*/ MOV         R0, R5 
    /*00015798*/ BL          0x0000000000015798          @ VI_COMM_CapOfflinePrepareNextFrame [R_ARM_CALL: .text+0x15560] 
    /*0001579c*/ MOV         R0, #0 
    /*000157a0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x157a4:
    /*000157a4*/ MOV         R1, #32768                  @ 0x8000 
    /*000157a8*/ MOV         R0, R5 
    /*000157ac*/ BL          0x00000000000157AC          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*000157b0*/ MOV         R0, R5 
    /*000157b4*/ BL          0x00000000000157B4          @ VI_COMM_CapOfflinePrepareNextFrame [R_ARM_CALL: .text+0x15560] 
    /*000157b8*/ TST         R4, #2 
    /*000157bc*/ BEQ         VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x1573c
    VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x157c0:
    /*000157c0*/ MOV         R0, R5 
    /*000157c4*/ MOV         R1, #14 
    /*000157c8*/ BL          0x00000000000157C8          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*000157cc*/ MOV         R2, R4 
    /*000157d0*/ MOV         R0, R5 
    /*000157d4*/ MOV         R1, #2 
    /*000157d8*/ BL          0x00000000000157D8          @ VI_COMM_CapMarkFrameOk [R_ARM_CALL: .text+0x14ec0] 
    /*000157dc*/ MOV         R2, R6 
    /*000157e0*/ MOV         R3, R7 
    /*000157e4*/ MOV         R1, R8 
    /*000157e8*/ MOV         R0, R5 
    /*000157ec*/ BL          0x00000000000157EC          @ VI_COMM_CapOfflineSendLastFrame [R_ARM_CALL: .text+0x154a8] 
    /*000157f0*/ MOV         R0, #0 
    /*000157f4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x157f8:
    /*000157f8*/ MOV         R0, R5 
    /*000157fc*/ MOV         R1, #14 
    /*00015800*/ BL          0x0000000000015800          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*00015804*/ MOV         R2, R4 
    /*00015808*/ MOV         R0, R5 
    /*0001580c*/ MOV         R1, #2 
    /*00015810*/ BL          0x0000000000015810          @ VI_COMM_CapMarkFrameOk [R_ARM_CALL: .text+0x14ec0] 
    /*00015814*/ MOV         R2, R6 
    /*00015818*/ MOV         R3, R7 
    /*0001581c*/ MOV         R1, R8 
    /*00015820*/ MOV         R0, R5 
    /*00015824*/ BL          0x0000000000015824          @ VI_COMM_CapOfflineSendLastFrame [R_ARM_CALL: .text+0x154a8] 
    /*00015828*/ B           VI_COMM_CapOfflineFrameEarlyEndIrqRoute_x15780
FUNC_END VI_COMM_CapOfflineFrameEarlyEndIrqRoute


FUNC_BEGIN VI_COMM_CapOffLineIrqRoute
    /*0001582c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00015830*/ MOV         R4, #176                    @ 0xb0 
    /*00015834*/ MUL         R4, R4, R0 
    /*00015838*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001583c*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00015840*/ SUB         SP, SP, #24 
    /*00015844*/ MOV         R6, R0 
    /*00015848*/ MOV         R9, R1 
    /*0001584c*/ ADD         R7, R4, #140                @ 0x8c 
    /*00015850*/ ADD         R1, SP, #12 
    /*00015854*/ ADD         R7, R5, R7 
    /*00015858*/ MOV         SL, R2 
    /*0001585c*/ MOV         R0, R7 
    /*00015860*/ BL          0x0000000000015860          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00015864*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00015868*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001586c*/ LDR         R8, [R3, R6, LSL #2] 
    /*00015870*/ CMP         R8, #0 
    /*00015874*/ BEQ         VI_COMM_CapOffLineIrqRoute_x159fc
    /*00015878*/ LDR         R3, [R5, R4] 
    /*0001587c*/ ADD         R2, R5, R4 
    /*00015880*/ CMP         R3, #0 
    /*00015884*/ BNE         VI_COMM_CapOffLineIrqRoute_x15894
    /*00015888*/ LDR         R3, [R2, #4] 
    /*0001588c*/ CMP         R3, #0 
    /*00015890*/ BEQ         VI_COMM_CapOffLineIrqRoute_x158dc
    VI_COMM_CapOffLineIrqRoute_x15894:
    /*00015894*/ MOVW        R1, #65535                  @ 0xffff 
    /*00015898*/ MOV         R0, R6 
    /*0001589c*/ BL          0x000000000001589C          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*000158a0*/ ADD         R1, SP, #12 
    /*000158a4*/ MOV         R0, R7 
    /*000158a8*/ BL          0x00000000000158A8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000158ac*/ MOVW        R3, #4203                   @ 0x106b 
    /*000158b0*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5828] 
    /*000158b4*/ STR         R3, [SP] 
    /*000158b8*/ STR         R6, [SP, #4] 
    /*000158bc*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5828] 
    /*000158c0*/ LDR         R3, [PC, #392]              @ 0x0000000000015a50 
    /*000158c4*/ MOV         R1, #16 
    /*000158c8*/ MOV         R0, #3 
    /*000158cc*/ BL          0x00000000000158CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_COMM_CapOffLineIrqRoute_x158d0:
    /*000158d0*/ MOV         R0, #0 
    /*000158d4*/ ADD         SP, SP, #24 
    /*000158d8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_CapOffLineIrqRoute_x158dc:
    /*000158dc*/ MOV         R0, R6 
    /*000158e0*/ BL          0x00000000000158E0          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*000158e4*/ CMP         SL, #1 
    /*000158e8*/ BEQ         VI_COMM_CapOffLineIrqRoute_x15990
    /*000158ec*/ CMP         R6, R0 
    /*000158f0*/ BEQ         VI_COMM_CapOffLineIrqRoute_x15998
    VI_COMM_CapOffLineIrqRoute_x158f4:
    /*000158f4*/ MOV         R3, #176                    @ 0xb0 
    /*000158f8*/ ADD         R8, R8, #32768              @ 0x8000 
    /*000158fc*/ MLA         R3, R3, R6, R5 
    /*00015900*/ MOV         R2, #1 
    /*00015904*/ MOV         R0, R6 
    /*00015908*/ STR         R2, [R3, #12] 
    /*0001590c*/ BL          0x000000000001590C          @ VI_UpdateWorkingPipeChnMkpAttr [R_ARM_CALL: .text+0x2988] 
    /*00015910*/ LDR         R3, [R8, #3656]             @ 0xe48 
    /*00015914*/ ADD         R1, SP, #12 
    /*00015918*/ MOV         R0, R7 
    /*0001591c*/ ADD         R3, R3, #1 
    /*00015920*/ STR         R3, [R8, #3656]             @ 0xe48 
    /*00015924*/ BL          0x0000000000015924          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015928*/ MOV         R0, R6 
    /*0001592c*/ BL          0x000000000001592C          @ VI_COMM_IsPipeStart [R_ARM_CALL: .text+0x13c9c] 
    /*00015930*/ CMP         R0, #0 
    /*00015934*/ BNE         VI_COMM_CapOffLineIrqRoute_x159b0
    /*00015938*/ MOVW        R1, #65535                  @ 0xffff 
    /*0001593c*/ MOV         R0, R6 
    /*00015940*/ BL          0x0000000000015940          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    VI_COMM_CapOffLineIrqRoute_x15944:
    /*00015944*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*00015948*/ MOV         R0, R6 
    /*0001594c*/ BL          0x000000000001594C          @ VI_COMM_CapStatisticsIntTime [R_ARM_CALL: .text+0x13f60] 
    /*00015950*/ ADD         R1, SP, #12 
    /*00015954*/ MOV         R0, R7 
    /*00015958*/ BL          0x0000000000015958          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001595c*/ MOV         R3, #176                    @ 0xb0 
    /*00015960*/ MLA         R6, R3, R6, R5 
    /*00015964*/ ADD         R0, R4, #88                 @ 0x58 
    /*00015968*/ MOV         R3, #0 
    /*0001596c*/ ADD         R0, R5, R0 
    /*00015970*/ STR         R3, [R6, #12] 
    /*00015974*/ BL          0x0000000000015974          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00015978*/ MOV         R0, R7 
    /*0001597c*/ ADD         R1, SP, #12 
    /*00015980*/ BL          0x0000000000015980          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015984*/ MOV         R0, #0 
    /*00015988*/ ADD         SP, SP, #24 
    /*0001598c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_CapOffLineIrqRoute_x15990:
    /*00015990*/ CMP         R6, R0 
    /*00015994*/ BEQ         VI_COMM_CapOffLineIrqRoute_x158f4
    VI_COMM_CapOffLineIrqRoute_x15998:
    /*00015998*/ MOV         R0, R7 
    /*0001599c*/ ADD         R1, SP, #12 
    /*000159a0*/ BL          0x00000000000159A0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000159a4*/ MOV         R0, #0 
    /*000159a8*/ ADD         SP, SP, #24 
    /*000159ac*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_CapOffLineIrqRoute_x159b0:
    /*000159b0*/ ADD         R1, SP, #16 
    /*000159b4*/ MOV         R0, R6 
    /*000159b8*/ BL          0x00000000000159B8          @ VI_DRV_GetPipeFrameInterruptAttr [R_ARM_CALL: .text+0x33b9c] 
    /*000159bc*/ LDR         R3, [SP, #16] 
    /*000159c0*/ CMP         R3, #1 
    /*000159c4*/ BEQ         VI_COMM_CapOffLineIrqRoute_x15a3c
    /*000159c8*/ BCC         VI_COMM_CapOffLineIrqRoute_x159e8
    /*000159cc*/ CMP         R3, #2 
    /*000159d0*/ BNE         VI_COMM_CapOffLineIrqRoute_x15944
    /*000159d4*/ MOV         R1, R9 
    /*000159d8*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*000159dc*/ MOV         R0, R6 
    /*000159e0*/ BL          0x00000000000159E0          @ VI_COMM_CapOfflineFrameEarlyEndIrqRoute [R_ARM_CALL: .text+0x156fc] 
    /*000159e4*/ B           VI_COMM_CapOffLineIrqRoute_x15944
    VI_COMM_CapOffLineIrqRoute_x159e8:
    /*000159e8*/ MOV         R1, R9 
    /*000159ec*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*000159f0*/ MOV         R0, R6 
    /*000159f4*/ BL          0x00000000000159F4          @ VI_COMM_CapOfflineFrameStartIrqRoute [R_ARM_CALL: .text+0x155f8] 
    /*000159f8*/ B           VI_COMM_CapOffLineIrqRoute_x15944
    VI_COMM_CapOffLineIrqRoute_x159fc:
    /*000159fc*/ MOV         R0, R6 
    /*00015a00*/ MOVW        R1, #65535                  @ 0xffff 
    /*00015a04*/ BL          0x0000000000015A04          @ VI_DRV_ClearFeWchInt [R_ARM_CALL: .text+0x3160c] 
    /*00015a08*/ ADD         R1, SP, #12 
    /*00015a0c*/ MOV         R0, R7 
    /*00015a10*/ BL          0x0000000000015A10          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015a14*/ MOVW        R3, #4193                   @ 0x1061 
    /*00015a18*/ STR         R6, [SP, #4] 
    /*00015a1c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57f8] 
    /*00015a20*/ STR         R3, [SP] 
    /*00015a24*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57f8] 
    /*00015a28*/ LDR         R3, [PC, #32]               @ 0x0000000000015a50 
    /*00015a2c*/ MOV         R1, #16 
    /*00015a30*/ MOV         R0, #3 
    /*00015a34*/ BL          0x0000000000015A34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015a38*/ B           VI_COMM_CapOffLineIrqRoute_x158d0
    VI_COMM_CapOffLineIrqRoute_x15a3c:
    /*00015a3c*/ MOV         R1, R9 
    /*00015a40*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*00015a44*/ MOV         R0, R6 
    /*00015a48*/ BL          0x0000000000015A48          @ VI_COMM_CapOfflineFrameEarlyIrqRoute [R_ARM_CALL: .text+0x1565c] 
    /*00015a4c*/ B           VI_COMM_CapOffLineIrqRoute_x15944
    /*00015a50*/ ANDEQ       R0, R0, R0, ROR #24 
FUNC_END VI_COMM_CapOffLineIrqRoute


FUNC_BEGIN VI_COMM_CapIrqRoute
    /*00015a54*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00015a58*/ MOV         R5, R0 
    /*00015a5c*/ SUB         SP, SP, #12 
    /*00015a60*/ MOV         R0, #2 
    /*00015a64*/ MOV         R9, R1 
    /*00015a68*/ BL          0x0000000000015A68          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015a6c*/ LDR         R3, [R0] 
    /*00015a70*/ BLX         R3 
    /*00015a74*/ MOV         R6, R0 
    /*00015a78*/ MOV         R0, R5 
    /*00015a7c*/ MOV         R7, R1 
    /*00015a80*/ BL          0x0000000000015A80          @ VI_DRV_CapGetIDByIrq [R_ARM_CALL: .text+0x31380] 
    /*00015a84*/ MOV         R8, R0 
    /*00015a88*/ BL          0x0000000000015A88          @ VI_DRV_GetCapIntStatus [R_ARM_CALL: .text+0x313e0] 
    /*00015a8c*/ MOV         R4, R0 
    /*00015a90*/ MOV         R0, R8 
    /*00015a94*/ BL          0x0000000000015A94          @ VI_DRV_GetCapIntMask [R_ARM_CALL: .text+0x313e4] 
    /*00015a98*/ MOV         R1, R4 
    /*00015a9c*/ AND         R4, R4, R0 
    /*00015aa0*/ MOV         R0, R8 
    /*00015aa4*/ BL          0x0000000000015AA4          @ VI_DRV_QueryCapBusErrStatus [R_ARM_CALL: .text+0x313e8] 
    /*00015aa8*/ MOV         R1, R9 
    /*00015aac*/ MOV         R0, R5 
    /*00015ab0*/ BL          0x0000000000015AB0          @ VI_DRV_IspIsr [R_ARM_CALL: .text+0x38c74] 
    /*00015ab4*/ TST         R4, #3840                   @ 0xf00 
    /*00015ab8*/ BNE         VI_COMM_CapIrqRoute_x15ac4
    /*00015abc*/ ADD         SP, SP, #12 
    /*00015ac0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_COMM_CapIrqRoute_x15ac4:
    /*00015ac4*/ BL          0x0000000000015AC4          @ VI_GetBeCfgForSyncStitchGrp [R_ARM_CALL: .text+0x1ddd8] 
    /*00015ac8*/ MOV         R5, #0 
    /*00015acc*/ MOV         R8, #1 
    VI_COMM_CapIrqRoute_x15ad0:
    /*00015ad0*/ MOV         R1, R4 
    /*00015ad4*/ MOV         R0, R5 
    /*00015ad8*/ BL          0x0000000000015AD8          @ VI_DRV_CapReportInt [R_ARM_CALL: .text+0x3139c] 
    /*00015adc*/ CMP         R0, #0 
    /*00015ae0*/ BNE         VI_COMM_CapIrqRoute_x15b6c
    VI_COMM_CapIrqRoute_x15ae4:
    /*00015ae4*/ ADD         R5, R5, #1 
    /*00015ae8*/ CMP         R5, #4 
    /*00015aec*/ BNE         VI_COMM_CapIrqRoute_x15ad0
    /*00015af0*/ MOV         R5, #0 
    /*00015af4*/ MOV         R8, #1 
    VI_COMM_CapIrqRoute_x15af8:
    /*00015af8*/ MOV         R1, R4 
    /*00015afc*/ MOV         R0, R5 
    /*00015b00*/ BL          0x0000000000015B00          @ VI_DRV_CapReportInt [R_ARM_CALL: .text+0x3139c] 
    /*00015b04*/ CMP         R0, #0 
    /*00015b08*/ BNE         VI_COMM_CapIrqRoute_x15b28
    VI_COMM_CapIrqRoute_x15b0c:
    /*00015b0c*/ ADD         R5, R5, #1 
    /*00015b10*/ CMP         R5, #4 
    /*00015b14*/ BNE         VI_COMM_CapIrqRoute_x15af8
    /*00015b18*/ BL          0x0000000000015B18          @ VI_PutBeCfgForSyncStitchGrp [R_ARM_CALL: .text+0x1dddc] 
    /*00015b1c*/ MOV         R0, #2 
    /*00015b20*/ ADD         SP, SP, #12 
    /*00015b24*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_COMM_CapIrqRoute_x15b28:
    /*00015b28*/ MOV         R0, R5 
    /*00015b2c*/ BL          0x0000000000015B2C          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00015b30*/ CMP         R0, #5 
    /*00015b34*/ LSL         R3, R8, R0 
    /*00015b38*/ BHI         VI_COMM_CapIrqRoute_x15b0c
    /*00015b3c*/ TST         R3, #48                     @ 0x30 
    /*00015b40*/ BNE         VI_COMM_CapIrqRoute_x15bb0
    /*00015b44*/ TST         R3, #12 
    /*00015b48*/ BNE         VI_COMM_CapIrqRoute_x15be0
    /*00015b4c*/ TST         R3, #3 
    /*00015b50*/ BEQ         VI_COMM_CapIrqRoute_x15b0c
    /*00015b54*/ MOV         R1, R0 
    /*00015b58*/ STRD        R6, [SP] 
    /*00015b5c*/ MOV         R2, #1 
    /*00015b60*/ MOV         R0, R5 
    /*00015b64*/ BL          0x0000000000015B64          @ VI_COMM_CapOffLineIrqRoute [R_ARM_CALL: .text+0x1582c] 
    /*00015b68*/ B           VI_COMM_CapIrqRoute_x15b0c
    VI_COMM_CapIrqRoute_x15b6c:
    /*00015b6c*/ MOV         R0, R5 
    /*00015b70*/ BL          0x0000000000015B70          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00015b74*/ CMP         R0, #5 
    /*00015b78*/ LSL         R3, R8, R0 
    /*00015b7c*/ BHI         VI_COMM_CapIrqRoute_x15ae4
    /*00015b80*/ ANDS        R2, R3, #48                 @ 0x30 
    /*00015b84*/ BNE         VI_COMM_CapIrqRoute_x15bc8
    /*00015b88*/ ANDS        R1, R3, #12 
    /*00015b8c*/ BNE         VI_COMM_CapIrqRoute_x15bf8
    /*00015b90*/ TST         R3, #3 
    /*00015b94*/ BEQ         VI_COMM_CapIrqRoute_x15ae4
    /*00015b98*/ MOV         R2, R1 
    /*00015b9c*/ STRD        R6, [SP] 
    /*00015ba0*/ MOV         R1, R0 
    /*00015ba4*/ MOV         R0, R5 
    /*00015ba8*/ BL          0x0000000000015BA8          @ VI_COMM_CapOffLineIrqRoute [R_ARM_CALL: .text+0x1582c] 
    /*00015bac*/ B           VI_COMM_CapIrqRoute_x15ae4
    VI_COMM_CapIrqRoute_x15bb0:
    /*00015bb0*/ MOV         R1, R0 
    /*00015bb4*/ STRD        R6, [SP] 
    /*00015bb8*/ MOV         R2, #1 
    /*00015bbc*/ MOV         R0, R5 
    /*00015bc0*/ BL          0x0000000000015BC0          @ VI_COMM_CapParallelIrqRoute [R_ARM_CALL: .text+0x16104] 
    /*00015bc4*/ B           VI_COMM_CapIrqRoute_x15b0c
    VI_COMM_CapIrqRoute_x15bc8:
    /*00015bc8*/ MOV         R1, R0 
    /*00015bcc*/ STRD        R6, [SP] 
    /*00015bd0*/ MOV         R2, #0 
    /*00015bd4*/ MOV         R0, R5 
    /*00015bd8*/ BL          0x0000000000015BD8          @ VI_COMM_CapParallelIrqRoute [R_ARM_CALL: .text+0x16104] 
    /*00015bdc*/ B           VI_COMM_CapIrqRoute_x15ae4
    VI_COMM_CapIrqRoute_x15be0:
    /*00015be0*/ MOV         R1, R0 
    /*00015be4*/ STRD        R6, [SP] 
    /*00015be8*/ MOV         R2, #1 
    /*00015bec*/ MOV         R0, R5 
    /*00015bf0*/ BL          0x0000000000015BF0          @ VI_COMM_CapOnLineIrqRoute [R_ARM_CALL: .text+0x15280] 
    /*00015bf4*/ B           VI_COMM_CapIrqRoute_x15b0c
    VI_COMM_CapIrqRoute_x15bf8:
    /*00015bf8*/ MOV         R1, R0 
    /*00015bfc*/ STRD        R6, [SP] 
    /*00015c00*/ MOV         R0, R5 
    /*00015c04*/ BL          0x0000000000015C04          @ VI_COMM_CapOnLineIrqRoute [R_ARM_CALL: .text+0x15280] 
    /*00015c08*/ B           VI_COMM_CapIrqRoute_x15ae4
FUNC_END VI_COMM_CapIrqRoute


FUNC_BEGIN VI_CAP_COMM_PerDevInit
    /*00015c0c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00015c10*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00015c14*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00015c18*/ MOV         R1, #20 
    /*00015c1c*/ MOV         R3, R0 
    /*00015c20*/ SUB         SP, SP, #12 
    /*00015c24*/ MLA         R6, R1, R0, R4 
    /*00015c28*/ MOV         R5, R0 
    /*00015c2c*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f84] 
    /*00015c30*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f84] 
    /*00015c34*/ ADD         R6, R6, #124                @ 0x7c 
    /*00015c38*/ MOV         R0, R6 
    /*00015c3c*/ BL          0x0000000000015C3C          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*00015c40*/ MOV         R0, R5 
    /*00015c44*/ BL          0x0000000000015C44          @ VI_DRV_CapRegInit [R_ARM_CALL: .text+0x32b44] 
    /*00015c48*/ SUBS        R7, R0, #0 
    /*00015c4c*/ BNE         VI_CAP_COMM_PerDevInit_x15cac
    /*00015c50*/ ADD         R3, R5, #30 
    /*00015c54*/ MOVW        R2, #0                      @ VI_DRV_IspIntBottomHalf [R_ARM_MOVW_ABS_NC: .text+0x38c30] 
    /*00015c58*/ MOVW        R1, #0                      @ VI_COMM_CapIrqRoute [R_ARM_MOVW_ABS_NC: .text+0x15a54] 
    /*00015c5c*/ MOVT        R2, #0                      @ VI_DRV_IspIntBottomHalf [R_ARM_MOVT_ABS: .text+0x38c30] 
    /*00015c60*/ LDR         R0, [R4, R3, LSL #2] 
    /*00015c64*/ MOVT        R1, #0                      @ VI_COMM_CapIrqRoute [R_ARM_MOVT_ABS: .text+0x15a54] 
    /*00015c68*/ ADD         R4, R4, R3, LSL #2 
    /*00015c6c*/ MOV         R3, R6 
    /*00015c70*/ STR         R4, [SP] 
    /*00015c74*/ BL          0x0000000000015C74          @ osal_request_irq [R_ARM_CALL: +0x0] 
    /*00015c78*/ CMP         R0, #0 
    /*00015c7c*/ MOV         R0, R5 
    /*00015c80*/ BNE         VI_CAP_COMM_PerDevInit_x15cd8
    /*00015c84*/ BL          0x0000000000015C84          @ VI_DRV_CapClkResetInit [R_ARM_CALL: .text+0x25974] 
    /*00015c88*/ MOV         R0, R5 
    /*00015c8c*/ MOVW        R1, #3843                   @ 0xf03 
    /*00015c90*/ MOVT        R1, #15 
    /*00015c94*/ BL          0x0000000000015C94          @ VI_HAL_SetVicapIntMask [R_ARM_CALL: .text+0x35b30] 
    /*00015c98*/ MOV         R0, R5 
    /*00015c9c*/ BL          0x0000000000015C9C          @ VI_DRV_CapAbolishReset [R_ARM_CALL: .text+0x27c68] 
    VI_CAP_COMM_PerDevInit_x15ca0:
    /*00015ca0*/ MOV         R0, R7 
    /*00015ca4*/ ADD         SP, SP, #12 
    /*00015ca8*/ POP         {R4, R5, R6, R7, PC} 
    VI_CAP_COMM_PerDevInit_x15cac:
    /*00015cac*/ MOVW        R3, #4387                   @ 0x1123 
    /*00015cb0*/ STR         R5, [SP, #4] 
    /*00015cb4*/ STR         R3, [SP] 
    /*00015cb8*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f90] 
    /*00015cbc*/ LDR         R3, [PC, #68]               @ 0x0000000000015d08 
    /*00015cc0*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f90] 
    /*00015cc4*/ MOV         R1, #16 
    /*00015cc8*/ MOV         R0, #0 
    /*00015ccc*/ BL          0x0000000000015CCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015cd0*/ MVN         R7, #0 
    /*00015cd4*/ B           VI_CAP_COMM_PerDevInit_x15ca0
    VI_CAP_COMM_PerDevInit_x15cd8:
    /*00015cd8*/ BL          0x0000000000015CD8          @ VI_DRV_CapRegExit [R_ARM_CALL: .text+0x32b48] 
    /*00015cdc*/ MOVW        R3, #4395                   @ 0x112b 
    /*00015ce0*/ STR         R6, [SP, #4] 
    /*00015ce4*/ MOV         R0, R7 
    /*00015ce8*/ STR         R3, [SP] 
    /*00015cec*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x58fc] 
    /*00015cf0*/ LDR         R3, [PC, #16]               @ 0x0000000000015d08 
    /*00015cf4*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x58fc] 
    /*00015cf8*/ MOV         R1, #16 
    /*00015cfc*/ MVN         R7, #0 
    /*00015d00*/ BL          0x0000000000015D00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015d04*/ B           VI_CAP_COMM_PerDevInit_x15ca0
    /*00015d08*/ ANDEQ       R0, R0, IP, ROR IP 
FUNC_END VI_CAP_COMM_PerDevInit


FUNC_BEGIN VI_CAP_COMM_PerDevExit
    /*00015d0c*/ ADD         R2, R0, #30 
    /*00015d10*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00015d14*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00015d18*/ PUSH        {R4, LR} 
    /*00015d1c*/ ADD         R1, R3, R2, LSL #2 
    /*00015d20*/ MOV         R4, R0 
    /*00015d24*/ LDR         R0, [R3, R2, LSL #2] 
    /*00015d28*/ BL          0x0000000000015D28          @ osal_free_irq [R_ARM_CALL: +0x0] 
    /*00015d2c*/ MOV         R0, R4 
    /*00015d30*/ BL          0x0000000000015D30          @ VI_DRV_CapRegExit [R_ARM_CALL: .text+0x32b48] 
    /*00015d34*/ MOV         R0, R4 
    /*00015d38*/ POP         {R4, LR} 
    VI_CAP_COMM_PerDevExit_x15d3c:
    /*00015d3c*/ B           VI_CAP_COMM_PerDevExit_x15d3c@ VI_DRV_CapClkResetExit [R_ARM_JUMP24: .text+0x25a54] 
FUNC_END VI_CAP_COMM_PerDevExit


FUNC_BEGIN VI_CAP_COMM_DevInit
    /*00015d40*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00015d44*/ SUB         SP, SP, #12 
    /*00015d48*/ LDR         R0, [PC, #64]               @ 0x0000000000015d90 
    /*00015d4c*/ BL          0x0000000000015D4C          @ VI_DRV_GetAllCapIrqId [R_ARM_CALL: .text+0x32b64] 
    /*00015d50*/ MOV         R0, #0 
    /*00015d54*/ BL          0x0000000000015D54          @ VI_CAP_COMM_PerDevInit [R_ARM_CALL: .text+0x15c0c] 
    /*00015d58*/ CMP         R0, #0 
    /*00015d5c*/ BEQ         VI_CAP_COMM_DevInit_x15d88
    /*00015d60*/ MOV         R0, #0 
    /*00015d64*/ MOVW        R3, #4436                   @ 0x1154 
    /*00015d68*/ STR         R0, [SP, #4] 
    /*00015d6c*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5fc8] 
    /*00015d70*/ STR         R3, [SP] 
    /*00015d74*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5fc8] 
    /*00015d78*/ LDR         R3, [PC, #20]               @ 0x0000000000015d94 
    /*00015d7c*/ MOV         R1, #16 
    /*00015d80*/ BL          0x0000000000015D80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015d84*/ MVN         R0, #0 
    VI_CAP_COMM_DevInit_x15d88:
    /*00015d88*/ ADD         SP, SP, #12 
    /*00015d8c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00015d90*/ LDRDEQ      R1, [R0], -R8 
    /*00015d94*/ MULEQ       R0, R4, IP 
FUNC_END VI_CAP_COMM_DevInit


FUNC_BEGIN VI_CAP_COMM_DevExit
    /*00015d98*/ MOV         R0, #0 
    VI_CAP_COMM_DevExit_x15d9c:
    /*00015d9c*/ B           VI_CAP_COMM_DevExit_x15d9c  @ VI_CAP_COMM_PerDevExit [R_ARM_JUMP24: .text+0x15d0c] 
FUNC_END VI_CAP_COMM_DevExit


FUNC_BEGIN VI_ProcHwStatistic
    /*00015da0*/ MOVW        R3, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6080] 
    /*00015da4*/ MOVT        R3, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6080] 
    /*00015da8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00015dac*/ SUB         SP, SP, #76                 @ 0x4c 
    /*00015db0*/ MOV         R7, R0 
    /*00015db4*/ MOV         R9, R3 
    /*00015db8*/ MOVW        R1, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ff8] 
    /*00015dbc*/ MOVT        R1, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ff8] 
    /*00015dc0*/ BL          0x0000000000015DC0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00015dc4*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1460] 
    /*00015dc8*/ MOV         R2, R9 
    /*00015dcc*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1460] 
    /*00015dd0*/ MOVW        IP, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60e0] 
    /*00015dd4*/ MOV         R0, R7 
    /*00015dd8*/ MOVW        R1, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60a0] 
    /*00015ddc*/ MOVW        R3, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60ac] 
    /*00015de0*/ MOVT        R1, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60a0] 
    /*00015de4*/ MOVT        R3, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60ac] 
    /*00015de8*/ STR         R1, [SP, #8] 
    /*00015dec*/ MOVW        R1, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60b8] 
    /*00015df0*/ STR         R3, [SP, #4] 
    /*00015df4*/ MOVT        R1, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60b8] 
    /*00015df8*/ MOVW        R3, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6074] 
    /*00015dfc*/ STR         R1, [SP] 
    /*00015e00*/ MOVT        R3, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6074] 
    /*00015e04*/ MOVW        R1, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6088] 
    /*00015e08*/ MOVT        R1, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6088] 
    /*00015e0c*/ MOV         R4, IP 
    /*00015e10*/ STR         R9, [SP, #64]               @ 0x40 
    /*00015e14*/ BL          0x0000000000015E14          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00015e18*/ ADD         R1, R6, #752                @ 0x2f0 
    /*00015e1c*/ MOV         R3, R4 
    /*00015e20*/ MOVT        R3, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60e0] 
    /*00015e24*/ STR         R3, [SP, #68]               @ 0x44 
    /*00015e28*/ LDRD        R2, [R1] 
    /*00015e2c*/ ADD         IP, R6, #736                @ 0x2e0 
    /*00015e30*/ LDRD        R4, [R1, #-8] 
    /*00015e34*/ MOV         R0, R7 
    /*00015e38*/ LDRD        SL, [IP] 
    /*00015e3c*/ MOVW        R1, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60c4] 
    /*00015e40*/ STRD        R2, [SP, #24] 
    /*00015e44*/ MOVT        R1, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60c4] 
    /*00015e48*/ LDRD        R8, [IP, #-8] 
    /*00015e4c*/ MOV         R2, #0 
    /*00015e50*/ STRD        R4, [SP, #16] 
    /*00015e54*/ MOVW        R4, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61b0] 
    /*00015e58*/ STRD        SL, [SP, #8] 
    /*00015e5c*/ MOVT        R4, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61b0] 
    /*00015e60*/ STRD        R8, [SP] 
    /*00015e64*/ MOVW        SL, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61bc] 
    /*00015e68*/ BL          0x0000000000015E68          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00015e6c*/ LDR         FP, [SP, #68]               @ 0x44 
    /*00015e70*/ MOV         R0, R7 
    /*00015e74*/ MOVT        SL, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61bc] 
    /*00015e78*/ MOVW        R5, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61dc] 
    /*00015e7c*/ MOVT        R5, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61dc] 
    /*00015e80*/ MOV         R1, FP 
    /*00015e84*/ BL          0x0000000000015E84          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00015e88*/ MOV         R0, R7 
    /*00015e8c*/ MOVW        R1, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60e4] 
    /*00015e90*/ MOVT        R1, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60e4] 
    /*00015e94*/ BL          0x0000000000015E94          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00015e98*/ LDR         R2, [SP, #64]               @ 0x40 
    /*00015e9c*/ STR         R4, [SP, #16] 
    /*00015ea0*/ MOV         R0, R7 
    /*00015ea4*/ STR         SL, [SP, #12] 
    /*00015ea8*/ MOVW        R1, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6194] 
    /*00015eac*/ STR         R5, [SP] 
    /*00015eb0*/ MOVT        R1, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6194] 
    /*00015eb4*/ MOVW        R3, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61a4] 
    /*00015eb8*/ STR         R1, [SP, #24] 
    /*00015ebc*/ MOVT        R3, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61a4] 
    /*00015ec0*/ MOVW        R1, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61c8] 
    /*00015ec4*/ STR         R3, [SP, #20] 
    /*00015ec8*/ MOVT        R1, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61c8] 
    /*00015ecc*/ MOVW        R3, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61d4] 
    /*00015ed0*/ STR         R1, [SP, #8] 
    /*00015ed4*/ MOVT        R3, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61d4] 
    /*00015ed8*/ MOVW        R1, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x616c] 
    /*00015edc*/ STR         R3, [SP, #4] 
    /*00015ee0*/ MOVT        R1, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x616c] 
    /*00015ee4*/ MOVW        R3, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6160] 
    /*00015ee8*/ MOVT        R3, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6160] 
    /*00015eec*/ BL          0x0000000000015EEC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00015ef0*/ ADD         LR, R6, #624                @ 0x270 
    /*00015ef4*/ ADD         IP, R6, #608                @ 0x260 
    /*00015ef8*/ ADD         R2, R6, #592                @ 0x250 
    /*00015efc*/ LDRD        R0, [LR] 
    /*00015f00*/ ADD         R3, R6, #576                @ 0x240 
    /*00015f04*/ LDRD        R8, [LR, #-8] 
    /*00015f08*/ STRD        R0, [SP, #56]               @ 0x38 
    /*00015f0c*/ STRD        R8, [SP, #48]               @ 0x30 
    /*00015f10*/ LDRD        R0, [IP] 
    /*00015f14*/ STRD        R0, [SP, #40]               @ 0x28 
    /*00015f18*/ MOV         R0, R7 
    /*00015f1c*/ LDRD        R8, [IP, #-8] 
    /*00015f20*/ MOVW        R1, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61e4] 
    /*00015f24*/ MOVT        R1, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61e4] 
    /*00015f28*/ STRD        R8, [SP, #32] 
    /*00015f2c*/ LDRD        R8, [R2] 
    /*00015f30*/ STRD        R8, [SP, #24] 
    /*00015f34*/ LDRD        R8, [R2, #-8] 
    /*00015f38*/ MOV         R2, #0 
    /*00015f3c*/ STRD        R8, [SP, #16] 
    /*00015f40*/ LDRD        R8, [R3] 
    /*00015f44*/ STRD        R8, [SP, #8] 
    /*00015f48*/ LDRD        R8, [R3, #-8] 
    /*00015f4c*/ STRD        R8, [SP] 
    /*00015f50*/ MOV         R8, FP 
    /*00015f54*/ BL          0x0000000000015F54          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00015f58*/ MOV         R1, FP 
    /*00015f5c*/ MOV         R0, R7 
    /*00015f60*/ BL          0x0000000000015F60          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00015f64*/ MOV         R0, R7 
    /*00015f68*/ MOVW        R1, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6218] 
    /*00015f6c*/ MOVT        R1, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6218] 
    /*00015f70*/ BL          0x0000000000015F70          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00015f74*/ LDR         R9, [SP, #64]               @ 0x40 
    /*00015f78*/ STR         R4, [SP, #16] 
    /*00015f7c*/ MOV         R3, R5 
    /*00015f80*/ STR         SL, [SP, #12] 
    /*00015f84*/ MOVW        R0, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62b8] 
    /*00015f88*/ MOV         R2, R9 
    /*00015f8c*/ MOVT        R0, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62b8] 
    /*00015f90*/ MOVW        R1, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62c4] 
    /*00015f94*/ STR         R0, [SP, #20] 
    /*00015f98*/ MOVT        R1, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62c4] 
    /*00015f9c*/ MOVW        R0, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62d0] 
    /*00015fa0*/ STR         R1, [SP, #8] 
    /*00015fa4*/ MOVT        R0, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62d0] 
    /*00015fa8*/ MOVW        R1, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62dc] 
    /*00015fac*/ STR         R0, [SP, #4] 
    /*00015fb0*/ MOVT        R1, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62dc] 
    /*00015fb4*/ MOV         R0, R7 
    /*00015fb8*/ STR         R1, [SP] 
    /*00015fbc*/ MOVW        R1, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6294] 
    /*00015fc0*/ MOVT        R1, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6294] 
    /*00015fc4*/ BL          0x0000000000015FC4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00015fc8*/ ADD         R1, R6, #672                @ 0x2a0 
    /*00015fcc*/ ADD         R3, R6, #688                @ 0x2b0 
    /*00015fd0*/ ADD         LR, R6, #656                @ 0x290 
    /*00015fd4*/ LDRD        R4, [R1] 
    /*00015fd8*/ ADD         IP, R6, #640                @ 0x280 
    /*00015fdc*/ LDRD        R2, [R3, #-8] 
    /*00015fe0*/ MOV         R0, R7 
    /*00015fe4*/ LDRD        SL, [R1, #-8] 
    /*00015fe8*/ MOVW        R1, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62e8] 
    /*00015fec*/ STRD        R4, [SP, #40]               @ 0x28 
    /*00015ff0*/ MOVT        R1, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62e8] 
    /*00015ff4*/ STRD        R2, [SP, #48]               @ 0x30 
    /*00015ff8*/ LDRD        R2, [LR, #-8] 
    /*00015ffc*/ LDRD        R4, [LR] 
    /*00016000*/ STRD        SL, [SP, #32] 
    /*00016004*/ STRD        R2, [SP, #16] 
    /*00016008*/ MOV         R2, #0 
    /*0001600c*/ STRD        R4, [SP, #24] 
    /*00016010*/ LDRD        SL, [IP, #-8] 
    /*00016014*/ LDRD        R4, [IP] 
    /*00016018*/ STRD        SL, [SP] 
    /*0001601c*/ STRD        R4, [SP, #8] 
    /*00016020*/ BL          0x0000000000016020          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00016024*/ MOV         R1, R8 
    /*00016028*/ MOV         R0, R7 
    /*0001602c*/ BL          0x000000000001602C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00016030*/ MOV         R0, R7 
    /*00016034*/ MOVW        R1, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6318] 
    /*00016038*/ MOVT        R1, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6318] 
    /*0001603c*/ BL          0x000000000001603C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00016040*/ MOV         R2, R9 
    /*00016044*/ MOV         R0, R7 
    /*00016048*/ MOVW        R1, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x63c4] 
    /*0001604c*/ MOVW        R3, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x63d4] 
    /*00016050*/ MOVT        R1, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x63c4] 
    /*00016054*/ MOVT        R3, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x63d4] 
    /*00016058*/ STR         R1, [SP, #20] 
    /*0001605c*/ STR         R3, [SP, #16] 
    /*00016060*/ MOVW        R1, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x63e0] 
    /*00016064*/ MOVW        R3, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x63f0] 
    /*00016068*/ MOVT        R1, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x63e0] 
    /*0001606c*/ MOVT        R3, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x63f0] 
    /*00016070*/ STR         R1, [SP, #12] 
    /*00016074*/ STR         R3, [SP, #8] 
    /*00016078*/ MOVW        R1, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6400] 
    /*0001607c*/ MOVW        R3, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6410] 
    /*00016080*/ MOVT        R1, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6400] 
    /*00016084*/ MOVT        R3, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6410] 
    /*00016088*/ STR         R1, [SP, #4] 
    /*0001608c*/ STR         R3, [SP] 
    /*00016090*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x63a0] 
    /*00016094*/ MOVW        R3, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6390] 
    /*00016098*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x63a0] 
    /*0001609c*/ MOVT        R3, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6390] 
    /*000160a0*/ BL          0x00000000000160A0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000160a4*/ ADD         R2, R6, #784                @ 0x310 
    /*000160a8*/ LDR         LR, [R6, #800]              @ 0x320 
    /*000160ac*/ MOV         R0, R7 
    /*000160b0*/ LDRD        R4, [R2] 
    /*000160b4*/ MOVW        R1, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6420] 
    /*000160b8*/ LDR         IP, [R6, #780]              @ 0x30c 
    /*000160bc*/ MOV         R2, #0 
    /*000160c0*/ LDR         FP, [R6, #812]              @ 0x32c 
    /*000160c4*/ MOVT        R1, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6420] 
    /*000160c8*/ LDR         SL, [R6, #808]              @ 0x328 
    /*000160cc*/ LDR         R9, [R6, #804]              @ 0x324 
    /*000160d0*/ LDR         R3, [R6, #776]              @ 0x308 
    /*000160d4*/ STM         SP, {IP, LR} 
    /*000160d8*/ STRD        R4, [SP, #16] 
    /*000160dc*/ STR         FP, [SP, #28] 
    /*000160e0*/ STR         SL, [SP, #24] 
    /*000160e4*/ STR         R9, [SP, #8] 
    /*000160e8*/ BL          0x00000000000160E8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000160ec*/ MOV         R1, R8 
    /*000160f0*/ MOV         R0, R7 
    /*000160f4*/ BL          0x00000000000160F4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000160f8*/ MOV         R0, #0 
    /*000160fc*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00016100*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VI_ProcHwStatistic


FUNC_BEGIN VI_COMM_CapParallelIrqRoute
    /*00016104*/ MOV         R0, #0 
    /*00016108*/ BX          LR 
FUNC_END VI_COMM_CapParallelIrqRoute


FUNC_BEGIN VI_COMM_VIParallelVPSSOffLineIrqRoute
    /*0001610c*/ MOV         R0, #0 
    /*00016110*/ BX          LR 
FUNC_END VI_COMM_VIParallelVPSSOffLineIrqRoute


FUNC_BEGIN VI_CreatQueue
    /*00016114*/ PUSH        {R4, R5, LR} 
    /*00016118*/ ADD         R5, R0, #20 
    /*0001611c*/ MOV         R4, R0 
    /*00016120*/ SUB         SP, SP, #12 
    /*00016124*/ MOV         R0, R5 
    /*00016128*/ BL          0x0000000000016128          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*0001612c*/ MOV         R0, R5 
    /*00016130*/ ADD         R1, SP, #4 
    /*00016134*/ BL          0x0000000000016134          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016138*/ ADD         R3, R4, #4 
    /*0001613c*/ ADD         R2, R4, #12 
    /*00016140*/ STR         R3, [R4, #4] 
    /*00016144*/ STR         R3, [R4, #8] 
    /*00016148*/ MOV         R0, R5 
    /*0001614c*/ MOV         R3, #0 
    /*00016150*/ ADD         R1, SP, #4 
    /*00016154*/ STR         R2, [R4, #12] 
    /*00016158*/ STR         R2, [R4, #16] 
    /*0001615c*/ STR         R3, [R4, #24] 
    /*00016160*/ STR         R3, [R4, #28] 
    /*00016164*/ BL          0x0000000000016164          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016168*/ ADD         SP, SP, #12 
    /*0001616c*/ POP         {R4, R5, PC} 
FUNC_END VI_CreatQueue


FUNC_BEGIN VI_DestroyQueue
    /*00016170*/ PUSH        {R4, R5, LR} 
    /*00016174*/ ADD         R5, R0, #20 
    /*00016178*/ SUB         SP, SP, #12 
    /*0001617c*/ MOV         R4, R0 
    /*00016180*/ ADD         R1, SP, #4 
    /*00016184*/ MOV         R0, R5 
    /*00016188*/ BL          0x0000000000016188          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001618c*/ ADD         R2, R4, #12 
    /*00016190*/ ADD         R3, R4, #4 
    /*00016194*/ ADD         R1, SP, #4 
    /*00016198*/ MOV         R0, R5 
    /*0001619c*/ STR         R3, [R4, #4] 
    /*000161a0*/ STR         R3, [R4, #8] 
    /*000161a4*/ MOV         R3, #0 
    /*000161a8*/ STR         R2, [R4, #12] 
    /*000161ac*/ STR         R2, [R4, #16] 
    /*000161b0*/ STR         R3, [R4, #24] 
    /*000161b4*/ STR         R3, [R4, #28] 
    /*000161b8*/ BL          0x00000000000161B8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000161bc*/ MOV         R0, R5 
    /*000161c0*/ BL          0x00000000000161C0          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*000161c4*/ ADD         SP, SP, #12 
    /*000161c8*/ POP         {R4, R5, PC} 
FUNC_END VI_DestroyQueue


FUNC_BEGIN VI_QueueGetFree
    /*000161cc*/ PUSH        {R4, R5, R6, LR} 
    /*000161d0*/ ADD         R6, R0, #20 
    /*000161d4*/ SUB         SP, SP, #8 
    /*000161d8*/ MOV         R5, R0 
    /*000161dc*/ ADD         R1, SP, #4 
    /*000161e0*/ MOV         R0, R6 
    /*000161e4*/ BL          0x00000000000161E4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000161e8*/ MOV         R3, R5 
    /*000161ec*/ LDR         R4, [R3, #4]! 
    /*000161f0*/ CMP         R4, R3 
    /*000161f4*/ BEQ         VI_QueueGetFree_x16240
    /*000161f8*/ LDR         IP, [R4, #4] 
    /*000161fc*/ MOV         R2, #256                    @ 0x100 
    /*00016200*/ LDR         LR, [R4] 
    /*00016204*/ MOVT        R2, #16 
    /*00016208*/ MOV         R3, #512                    @ 0x200 
    /*0001620c*/ MOVT        R3, #32 
    /*00016210*/ ADD         R1, SP, #4 
    /*00016214*/ MOV         R0, R6 
    /*00016218*/ STR         IP, [LR, #4] 
    /*0001621c*/ STR         LR, [IP] 
    /*00016220*/ STM         R4, {R2, R3} 
    /*00016224*/ LDR         R3, [R5, #24] 
    /*00016228*/ SUB         R3, R3, #1 
    /*0001622c*/ STR         R3, [R5, #24] 
    /*00016230*/ BL          0x0000000000016230          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_QueueGetFree_x16234:
    /*00016234*/ MOV         R0, R4 
    /*00016238*/ ADD         SP, SP, #8 
    /*0001623c*/ POP         {R4, R5, R6, PC} 
    VI_QueueGetFree_x16240:
    /*00016240*/ ADD         R1, SP, #4 
    /*00016244*/ MOV         R0, R6 
    /*00016248*/ BL          0x0000000000016248          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001624c*/ MOV         R4, #0 
    /*00016250*/ B           VI_QueueGetFree_x16234
FUNC_END VI_QueueGetFree


FUNC_BEGIN VI_QueueGetBusy
    /*00016254*/ PUSH        {R4, R5, R6, LR} 
    /*00016258*/ ADD         R6, R0, #20 
    /*0001625c*/ SUB         SP, SP, #8 
    /*00016260*/ MOV         R5, R0 
    /*00016264*/ ADD         R1, SP, #4 
    /*00016268*/ MOV         R0, R6 
    /*0001626c*/ BL          0x000000000001626C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016270*/ MOV         R3, R5 
    /*00016274*/ LDR         R4, [R3, #12]! 
    /*00016278*/ CMP         R4, R3 
    /*0001627c*/ BEQ         VI_QueueGetBusy_x162c8
    /*00016280*/ LDR         IP, [R4, #4] 
    /*00016284*/ MOV         R2, #256                    @ 0x100 
    /*00016288*/ LDR         LR, [R4] 
    /*0001628c*/ MOVT        R2, #16 
    /*00016290*/ MOV         R3, #512                    @ 0x200 
    /*00016294*/ MOVT        R3, #32 
    /*00016298*/ ADD         R1, SP, #4 
    /*0001629c*/ MOV         R0, R6 
    /*000162a0*/ STR         IP, [LR, #4] 
    /*000162a4*/ STR         LR, [IP] 
    /*000162a8*/ STM         R4, {R2, R3} 
    /*000162ac*/ LDR         R3, [R5, #28] 
    /*000162b0*/ SUB         R3, R3, #1 
    /*000162b4*/ STR         R3, [R5, #28] 
    /*000162b8*/ BL          0x00000000000162B8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_QueueGetBusy_x162bc:
    /*000162bc*/ MOV         R0, R4 
    /*000162c0*/ ADD         SP, SP, #8 
    /*000162c4*/ POP         {R4, R5, R6, PC} 
    VI_QueueGetBusy_x162c8:
    /*000162c8*/ ADD         R1, SP, #4 
    /*000162cc*/ MOV         R0, R6 
    /*000162d0*/ BL          0x00000000000162D0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000162d4*/ MOV         R4, #0 
    /*000162d8*/ B           VI_QueueGetBusy_x162bc
FUNC_END VI_QueueGetBusy


FUNC_BEGIN VI_QueueGetBusyTail
    /*000162dc*/ PUSH        {R4, R5, R6, LR} 
    /*000162e0*/ ADD         R6, R0, #20 
    /*000162e4*/ SUB         SP, SP, #8 
    /*000162e8*/ MOV         R4, R0 
    /*000162ec*/ ADD         R1, SP, #4 
    /*000162f0*/ MOV         R0, R6 
    /*000162f4*/ BL          0x00000000000162F4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000162f8*/ LDR         R2, [R4, #12] 
    /*000162fc*/ ADD         R3, R4, #12 
    /*00016300*/ CMP         R2, R3 
    /*00016304*/ BEQ         VI_QueueGetBusyTail_x1636c
    /*00016308*/ LDR         R5, [R4, #16] 
    /*0001630c*/ CMP         R5, #0 
    /*00016310*/ BEQ         VI_QueueGetBusyTail_x1635c
    /*00016314*/ LDR         IP, [R5, #4] 
    /*00016318*/ MOV         R2, #256                    @ 0x100 
    /*0001631c*/ LDR         LR, [R5] 
    /*00016320*/ MOVT        R2, #16 
    /*00016324*/ MOV         R3, #512                    @ 0x200 
    /*00016328*/ MOVT        R3, #32 
    /*0001632c*/ ADD         R1, SP, #4 
    /*00016330*/ MOV         R0, R6 
    /*00016334*/ STR         IP, [LR, #4] 
    /*00016338*/ STR         LR, [IP] 
    /*0001633c*/ STM         R5, {R2, R3} 
    /*00016340*/ LDR         R3, [R4, #28] 
    /*00016344*/ SUB         R3, R3, #1 
    /*00016348*/ STR         R3, [R4, #28] 
    /*0001634c*/ BL          0x000000000001634C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_QueueGetBusyTail_x16350:
    /*00016350*/ MOV         R0, R5 
    /*00016354*/ ADD         SP, SP, #8 
    /*00016358*/ POP         {R4, R5, R6, PC} 
    VI_QueueGetBusyTail_x1635c:
    /*0001635c*/ ADD         R1, SP, #4 
    /*00016360*/ MOV         R0, R6 
    /*00016364*/ BL          0x0000000000016364          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016368*/ B           VI_QueueGetBusyTail_x16350
    VI_QueueGetBusyTail_x1636c:
    /*0001636c*/ ADD         R1, SP, #4 
    /*00016370*/ MOV         R0, R6 
    /*00016374*/ BL          0x0000000000016374          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016378*/ MOV         R5, #0 
    /*0001637c*/ B           VI_QueueGetBusyTail_x16350
FUNC_END VI_QueueGetBusyTail


FUNC_BEGIN VI_QueueQueryBusy
    /*00016380*/ PUSH        {R4, R5, LR} 
    /*00016384*/ ADD         R5, R0, #20 
    /*00016388*/ SUB         SP, SP, #12 
    /*0001638c*/ MOV         R4, R0 
    /*00016390*/ ADD         R1, SP, #4 
    /*00016394*/ MOV         R0, R5 
    /*00016398*/ BL          0x0000000000016398          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001639c*/ MOV         R0, R4 
    /*000163a0*/ LDR         R4, [R0, #12]! 
    /*000163a4*/ ADD         R1, SP, #4 
    /*000163a8*/ CMP         R4, R0 
    /*000163ac*/ MOV         R0, R5 
    /*000163b0*/ BEQ         VI_QueueQueryBusy_x163c4
    /*000163b4*/ BL          0x00000000000163B4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_QueueQueryBusy_x163b8:
    /*000163b8*/ MOV         R0, R4 
    /*000163bc*/ ADD         SP, SP, #12 
    /*000163c0*/ POP         {R4, R5, PC} 
    VI_QueueQueryBusy_x163c4:
    /*000163c4*/ BL          0x00000000000163C4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000163c8*/ MOV         R4, #0 
    /*000163cc*/ B           VI_QueueQueryBusy_x163b8
FUNC_END VI_QueueQueryBusy


FUNC_BEGIN VI_QueueQueryBusyNext
    /*000163d0*/ PUSH        {R4, R5, LR} 
    /*000163d4*/ ADD         R5, R0, #20 
    /*000163d8*/ SUB         SP, SP, #12 
    /*000163dc*/ MOV         R4, R0 
    /*000163e0*/ ADD         R1, SP, #4 
    /*000163e4*/ MOV         R0, R5 
    /*000163e8*/ BL          0x00000000000163E8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000163ec*/ MOV         R3, R4 
    /*000163f0*/ LDR         R2, [R3, #12]! 
    /*000163f4*/ ADD         R1, SP, #4 
    /*000163f8*/ MOV         R0, R5 
    /*000163fc*/ CMP         R2, R3 
    /*00016400*/ BEQ         VI_QueueQueryBusyNext_x16424
    /*00016404*/ LDR         R3, [R4, #28] 
    /*00016408*/ CMP         R3, #1 
    /*0001640c*/ BLS         VI_QueueQueryBusyNext_x16424
    /*00016410*/ LDR         R4, [R2] 
    /*00016414*/ BL          0x0000000000016414          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_QueueQueryBusyNext_x16418:
    /*00016418*/ MOV         R0, R4 
    /*0001641c*/ ADD         SP, SP, #12 
    /*00016420*/ POP         {R4, R5, PC} 
    VI_QueueQueryBusyNext_x16424:
    /*00016424*/ BL          0x0000000000016424          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016428*/ MOV         R4, #0 
    /*0001642c*/ B           VI_QueueQueryBusyNext_x16418
FUNC_END VI_QueueQueryBusyNext


FUNC_BEGIN VI_QueueQueryBusyTail
    /*00016430*/ PUSH        {R4, R5, LR} 
    /*00016434*/ ADD         R5, R0, #20 
    /*00016438*/ SUB         SP, SP, #12 
    /*0001643c*/ MOV         R4, R0 
    /*00016440*/ ADD         R1, SP, #4 
    /*00016444*/ MOV         R0, R5 
    /*00016448*/ BL          0x0000000000016448          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001644c*/ LDR         R2, [R4, #12] 
    /*00016450*/ ADD         R3, R4, #12 
    /*00016454*/ CMP         R2, R3 
    /*00016458*/ BEQ         VI_QueueQueryBusyTail_x16478
    /*0001645c*/ ADD         R1, SP, #4 
    /*00016460*/ MOV         R0, R5 
    /*00016464*/ LDR         R4, [R4, #16] 
    /*00016468*/ BL          0x0000000000016468          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_QueueQueryBusyTail_x1646c:
    /*0001646c*/ MOV         R0, R4 
    /*00016470*/ ADD         SP, SP, #12 
    /*00016474*/ POP         {R4, R5, PC} 
    VI_QueueQueryBusyTail_x16478:
    /*00016478*/ ADD         R1, SP, #4 
    /*0001647c*/ MOV         R0, R5 
    /*00016480*/ BL          0x0000000000016480          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016484*/ MOV         R4, #0 
    /*00016488*/ B           VI_QueueQueryBusyTail_x1646c
FUNC_END VI_QueueQueryBusyTail


FUNC_BEGIN VI_QueueQueryTail
    VI_QueueQueryTail_x1648c:
    /*0001648c*/ B           VI_QueueQueryTail_x1648c    @ VI_QueueQueryBusyTail [R_ARM_JUMP24: .text+0x16430] 
FUNC_END VI_QueueQueryTail


FUNC_BEGIN VI_QueuePutFree
    /*00016490*/ PUSH        {R4, R5, R6, LR} 
    /*00016494*/ ADD         R6, R0, #20 
    /*00016498*/ SUB         SP, SP, #8 
    /*0001649c*/ MOV         R4, R0 
    /*000164a0*/ MOV         R5, R1 
    /*000164a4*/ MOV         R0, R6 
    /*000164a8*/ ADD         R1, SP, #4 
    /*000164ac*/ BL          0x00000000000164AC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000164b0*/ LDR         R3, [R4, #8] 
    /*000164b4*/ ADD         R2, R4, #4 
    /*000164b8*/ STR         R5, [R4, #8] 
    /*000164bc*/ STR         R2, [R5] 
    /*000164c0*/ MOV         R0, R6 
    /*000164c4*/ STR         R3, [R5, #4] 
    /*000164c8*/ ADD         R1, SP, #4 
    /*000164cc*/ STR         R5, [R3] 
    /*000164d0*/ LDR         R3, [R4, #24] 
    /*000164d4*/ ADD         R3, R3, #1 
    /*000164d8*/ STR         R3, [R4, #24] 
    /*000164dc*/ BL          0x00000000000164DC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000164e0*/ ADD         SP, SP, #8 
    /*000164e4*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_QueuePutFree


FUNC_BEGIN VI_QueuePutBusy
    /*000164e8*/ PUSH        {R4, R5, R6, LR} 
    /*000164ec*/ ADD         R6, R0, #20 
    /*000164f0*/ SUB         SP, SP, #8 
    /*000164f4*/ MOV         R4, R0 
    /*000164f8*/ MOV         R5, R1 
    /*000164fc*/ MOV         R0, R6 
    /*00016500*/ ADD         R1, SP, #4 
    /*00016504*/ BL          0x0000000000016504          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016508*/ LDR         R3, [R4, #16] 
    /*0001650c*/ ADD         R2, R4, #12 
    /*00016510*/ STR         R5, [R4, #16] 
    /*00016514*/ STR         R2, [R5] 
    /*00016518*/ MOV         R0, R6 
    /*0001651c*/ STR         R3, [R5, #4] 
    /*00016520*/ ADD         R1, SP, #4 
    /*00016524*/ STR         R5, [R3] 
    /*00016528*/ LDR         R3, [R4, #28] 
    /*0001652c*/ ADD         R3, R3, #1 
    /*00016530*/ STR         R3, [R4, #28] 
    /*00016534*/ BL          0x0000000000016534          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016538*/ ADD         SP, SP, #8 
    /*0001653c*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_QueuePutBusy


FUNC_BEGIN VI_QueueGetFreeNum
    /*00016540*/ PUSH        {R4, R5, LR} 
    /*00016544*/ ADD         R5, R0, #20 
    /*00016548*/ SUB         SP, SP, #12 
    /*0001654c*/ MOV         R4, R0 
    /*00016550*/ ADD         R1, SP, #4 
    /*00016554*/ MOV         R0, R5 
    /*00016558*/ BL          0x0000000000016558          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001655c*/ MOV         R0, R5 
    /*00016560*/ ADD         R1, SP, #4 
    /*00016564*/ LDR         R4, [R4, #24] 
    /*00016568*/ BL          0x0000000000016568          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001656c*/ MOV         R0, R4 
    /*00016570*/ ADD         SP, SP, #12 
    /*00016574*/ POP         {R4, R5, PC} 
FUNC_END VI_QueueGetFreeNum


FUNC_BEGIN VI_QueueGetBusyNum
    /*00016578*/ PUSH        {R4, R5, LR} 
    /*0001657c*/ ADD         R5, R0, #20 
    /*00016580*/ SUB         SP, SP, #12 
    /*00016584*/ MOV         R4, R0 
    /*00016588*/ ADD         R1, SP, #4 
    /*0001658c*/ MOV         R0, R5 
    /*00016590*/ BL          0x0000000000016590          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016594*/ MOV         R0, R5 
    /*00016598*/ ADD         R1, SP, #4 
    /*0001659c*/ LDR         R4, [R4, #28] 
    /*000165a0*/ BL          0x00000000000165A0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000165a4*/ MOV         R0, R4 
    /*000165a8*/ ADD         SP, SP, #12 
    /*000165ac*/ POP         {R4, R5, PC} 
FUNC_END VI_QueueGetBusyNum


FUNC_BEGIN VI_NODE_CreatNodeQueue
    /*000165b0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000165b4*/ MOV         R5, R1 
    /*000165b8*/ MOV         R7, #72                     @ 0x48 
    /*000165bc*/ ADD         R6, R0, #68                 @ 0x44 
    /*000165c0*/ MUL         R7, R7, R5 
    /*000165c4*/ SUB         SP, SP, #12 
    /*000165c8*/ MOV         R4, R0 
    /*000165cc*/ MOV         R0, R6 
    /*000165d0*/ BL          0x00000000000165D0          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*000165d4*/ MOV         R0, R7 
    /*000165d8*/ BL          0x00000000000165D8          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*000165dc*/ CMP         R0, #0 
    /*000165e0*/ STR         R0, [R4] 
    /*000165e4*/ BEQ         VI_NODE_CreatNodeQueue_x166b0
    /*000165e8*/ MOV         R2, R7 
    /*000165ec*/ MOV         R1, #0 
    /*000165f0*/ BL          0x00000000000165F0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000165f4*/ ADD         R1, SP, #4 
    /*000165f8*/ MOV         R0, R6 
    /*000165fc*/ BL          0x00000000000165FC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016600*/ CMP         R5, #0 
    /*00016604*/ ADD         R3, R4, #36                 @ 0x24 
    /*00016608*/ ADD         IP, R4, #28 
    /*0001660c*/ ADD         R1, R4, #44                 @ 0x2c 
    /*00016610*/ ADD         R2, R4, #52                 @ 0x34 
    /*00016614*/ STR         R3, [R4, #36]               @ 0x24 
    /*00016618*/ STR         R3, [R4, #40]               @ 0x28 
    /*0001661c*/ ADD         R3, R4, #60                 @ 0x3c 
    /*00016620*/ STR         IP, [R4, #28] 
    /*00016624*/ STR         R3, [R4, #60]               @ 0x3c 
    /*00016628*/ STR         R3, [R4, #64]               @ 0x40 
    /*0001662c*/ STR         IP, [R4, #32] 
    /*00016630*/ STR         R1, [R4, #44]               @ 0x2c 
    /*00016634*/ STR         R1, [R4, #48]               @ 0x30 
    /*00016638*/ STR         R2, [R4, #52]               @ 0x34 
    /*0001663c*/ STR         R2, [R4, #56]               @ 0x38 
    /*00016640*/ LDR         R3, [R4] 
    /*00016644*/ BEQ         VI_NODE_CreatNodeQueue_x1667c
    /*00016648*/ MOV         R0, IP 
    /*0001664c*/ MOV         R2, #0 
    /*00016650*/ B           VI_NODE_CreatNodeQueue_x16658
    VI_NODE_CreatNodeQueue_x16654:
    /*00016654*/ LDR         R0, [R4, #32] 
    VI_NODE_CreatNodeQueue_x16658:
    /*00016658*/ ADD         R2, R2, #1 
    /*0001665c*/ ADD         R1, R3, #60                 @ 0x3c 
    /*00016660*/ CMP         R5, R2 
    /*00016664*/ STR         R1, [R4, #32] 
    /*00016668*/ ADD         R3, R3, #72                 @ 0x48 
    /*0001666c*/ STR         IP, [R3, #-12] 
    /*00016670*/ STR         R0, [R3, #-8] 
    /*00016674*/ STR         R1, [R0] 
    /*00016678*/ BNE         VI_NODE_CreatNodeQueue_x16654
    VI_NODE_CreatNodeQueue_x1667c:
    /*0001667c*/ STR         R5, [R4, #4] 
    /*00016680*/ MOV         R0, R6 
    /*00016684*/ MOV         R5, #0 
    /*00016688*/ ADD         R1, SP, #4 
    /*0001668c*/ STR         R5, [R4, #8] 
    /*00016690*/ STR         R5, [R4, #12] 
    /*00016694*/ STR         R5, [R4, #16] 
    /*00016698*/ STR         R5, [R4, #20] 
    /*0001669c*/ STR         R5, [R4, #24] 
    /*000166a0*/ BL          0x00000000000166A0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000166a4*/ MOV         R0, R5 
    VI_NODE_CreatNodeQueue_x166a8:
    /*000166a8*/ ADD         SP, SP, #12 
    /*000166ac*/ POP         {R4, R5, R6, R7, PC} 
    VI_NODE_CreatNodeQueue_x166b0:
    /*000166b0*/ MVN         R0, #0 
    /*000166b4*/ B           VI_NODE_CreatNodeQueue_x166a8
FUNC_END VI_NODE_CreatNodeQueue


FUNC_BEGIN VI_NODE_DestroyNodeQueue
    /*000166b8*/ PUSH        {R4, R5, R6, LR} 
    /*000166bc*/ ADD         R6, R0, #68                 @ 0x44 
    /*000166c0*/ SUB         SP, SP, #8 
    /*000166c4*/ MOV         R4, R0 
    /*000166c8*/ ADD         R1, SP, #4 
    /*000166cc*/ MOV         R0, R6 
    /*000166d0*/ BL          0x00000000000166D0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000166d4*/ MOV         R5, #0 
    /*000166d8*/ ADD         IP, R4, #44                 @ 0x2c 
    /*000166dc*/ ADD         R2, R4, #28 
    /*000166e0*/ ADD         R3, R4, #36                 @ 0x24 
    /*000166e4*/ ADD         R1, SP, #4 
    /*000166e8*/ MOV         R0, R6 
    /*000166ec*/ STR         R2, [R4, #28] 
    /*000166f0*/ STR         R2, [R4, #32] 
    /*000166f4*/ ADD         R2, R4, #52                 @ 0x34 
    /*000166f8*/ STR         R3, [R4, #36]               @ 0x24 
    /*000166fc*/ STR         R3, [R4, #40]               @ 0x28 
    /*00016700*/ ADD         R3, R4, #60                 @ 0x3c 
    /*00016704*/ STR         IP, [R4, #44]               @ 0x2c 
    /*00016708*/ STR         IP, [R4, #48]               @ 0x30 
    /*0001670c*/ STR         R2, [R4, #52]               @ 0x34 
    /*00016710*/ STR         R2, [R4, #56]               @ 0x38 
    /*00016714*/ STR         R3, [R4, #60]               @ 0x3c 
    /*00016718*/ STR         R3, [R4, #64]               @ 0x40 
    /*0001671c*/ STR         R5, [R4, #4] 
    /*00016720*/ STR         R5, [R4, #8] 
    /*00016724*/ STR         R5, [R4, #12] 
    /*00016728*/ STR         R5, [R4, #16] 
    /*0001672c*/ STR         R5, [R4, #20] 
    /*00016730*/ STR         R5, [R4, #24] 
    /*00016734*/ BL          0x0000000000016734          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016738*/ MOV         R0, R6 
    /*0001673c*/ BL          0x000000000001673C          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00016740*/ LDR         R0, [R4] 
    /*00016744*/ CMP         R0, R5 
    /*00016748*/ BEQ         VI_NODE_DestroyNodeQueue_x16754
    /*0001674c*/ BL          0x000000000001674C          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00016750*/ STR         R5, [R4] 
    VI_NODE_DestroyNodeQueue_x16754:
    /*00016754*/ ADD         SP, SP, #8 
    /*00016758*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_NODE_DestroyNodeQueue


FUNC_BEGIN VI_NODE_NodeQueueGetFree
    /*0001675c*/ PUSH        {R4, R5, R6, LR} 
    /*00016760*/ ADD         R5, R0, #68                 @ 0x44 
    /*00016764*/ SUB         SP, SP, #8 
    /*00016768*/ MOV         R4, R0 
    /*0001676c*/ ADD         R1, SP, #4 
    /*00016770*/ MOV         R0, R5 
    /*00016774*/ BL          0x0000000000016774          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016778*/ MOV         R2, R4 
    /*0001677c*/ LDR         R3, [R2, #28]! 
    /*00016780*/ CMP         R3, R2 
    /*00016784*/ BEQ         VI_NODE_NodeQueueGetFree_x167d8
    /*00016788*/ LDR         LR, [R3, #4] 
    /*0001678c*/ MOV         IP, #256                    @ 0x100 
    /*00016790*/ LDR         R6, [R3] 
    /*00016794*/ MOVT        IP, #16 
    /*00016798*/ MOV         R2, #512                    @ 0x200 
    /*0001679c*/ MOV         R0, R5 
    /*000167a0*/ MOVT        R2, #32 
    /*000167a4*/ SUB         R5, R3, #60                 @ 0x3c 
    /*000167a8*/ STR         LR, [R6, #4] 
    /*000167ac*/ ADD         R1, SP, #4 
    /*000167b0*/ STR         R6, [LR] 
    /*000167b4*/ STR         IP, [R3] 
    /*000167b8*/ STR         R2, [R3, #4] 
    /*000167bc*/ LDR         R3, [R4, #4] 
    /*000167c0*/ SUB         R3, R3, #1 
    /*000167c4*/ STR         R3, [R4, #4] 
    /*000167c8*/ BL          0x00000000000167C8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_NODE_NodeQueueGetFree_x167cc:
    /*000167cc*/ MOV         R0, R5 
    /*000167d0*/ ADD         SP, SP, #8 
    /*000167d4*/ POP         {R4, R5, R6, PC} 
    VI_NODE_NodeQueueGetFree_x167d8:
    /*000167d8*/ MOV         R0, R5 
    /*000167dc*/ ADD         R1, SP, #4 
    /*000167e0*/ BL          0x00000000000167E0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000167e4*/ MOV         R5, #0 
    /*000167e8*/ B           VI_NODE_NodeQueueGetFree_x167cc
FUNC_END VI_NODE_NodeQueueGetFree


FUNC_BEGIN VI_NODE_NodeQueuePutBusy
    /*000167ec*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000167f0*/ ADD         R6, R0, #68                 @ 0x44 
    /*000167f4*/ SUB         SP, SP, #8 
    /*000167f8*/ MOV         R4, R0 
    /*000167fc*/ MOV         R8, R1 
    /*00016800*/ MOV         R0, R6 
    /*00016804*/ ADD         R1, SP, #4 
    /*00016808*/ MOV         R7, R3 
    /*0001680c*/ MOV         R5, R2 
    /*00016810*/ BL          0x0000000000016810          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016814*/ LSL         R1, R8, #1 
    /*00016818*/ ADD         IP, R7, #60                 @ 0x3c 
    /*0001681c*/ ADD         R2, R5, R1 
    /*00016820*/ ADD         R5, R5, #6 
    /*00016824*/ ADD         R5, R5, R1 
    /*00016828*/ MOV         R0, R6 
    /*0001682c*/ ADD         R1, R4, R2, LSL #3 
    /*00016830*/ ADD         R2, R4, R2, LSL #2 
    /*00016834*/ ADD         R4, R4, R5, LSL #3 
    /*00016838*/ LDR         R3, [R1, #56]               @ 0x38 
    /*0001683c*/ ADD         R4, R4, #4 
    /*00016840*/ STR         IP, [R1, #56]               @ 0x38 
    /*00016844*/ ADD         R1, SP, #4 
    /*00016848*/ STR         R4, [R7, #60]               @ 0x3c 
    /*0001684c*/ STR         R3, [R7, #64]               @ 0x40 
    /*00016850*/ STR         IP, [R3] 
    /*00016854*/ LDR         R3, [R2, #16] 
    /*00016858*/ ADD         R3, R3, #1 
    /*0001685c*/ STR         R3, [R2, #16] 
    /*00016860*/ BL          0x0000000000016860          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016864*/ ADD         SP, SP, #8 
    /*00016868*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_NODE_NodeQueuePutBusy


FUNC_BEGIN VI_NODE_NodeQueueGetBusy
    /*0001686c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00016870*/ ADD         R6, R0, #68                 @ 0x44 
    /*00016874*/ SUB         SP, SP, #12 
    /*00016878*/ MOV         R5, R0 
    /*0001687c*/ MOV         R7, R1 
    /*00016880*/ MOV         R0, R6 
    /*00016884*/ ADD         R1, SP, #4 
    /*00016888*/ MOV         R4, R2 
    /*0001688c*/ BL          0x000000000001688C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016890*/ LSL         R1, R7, #1 
    /*00016894*/ ADD         R2, R1, R4 
    /*00016898*/ ADD         R4, R4, #6 
    /*0001689c*/ ADD         R4, R4, R1 
    /*000168a0*/ ADD         R3, R5, R2, LSL #3 
    /*000168a4*/ ADD         R4, R5, R4, LSL #3 
    /*000168a8*/ LDR         R3, [R3, #52]               @ 0x34 
    /*000168ac*/ ADD         R4, R4, #4 
    /*000168b0*/ CMP         R3, R4 
    /*000168b4*/ BEQ         VI_NODE_NodeQueueGetBusy_x1690c
    /*000168b8*/ LDR         R4, [R3] 
    /*000168bc*/ ADD         R5, R5, R2, LSL #2 
    /*000168c0*/ LDR         LR, [R3, #4] 
    /*000168c4*/ MOV         IP, #256                    @ 0x100 
    /*000168c8*/ MOV         R2, #512                    @ 0x200 
    /*000168cc*/ MOVT        IP, #16 
    /*000168d0*/ MOVT        R2, #32 
    /*000168d4*/ ADD         R1, SP, #4 
    /*000168d8*/ STR         LR, [R4, #4] 
    /*000168dc*/ MOV         R0, R6 
    /*000168e0*/ STR         R4, [LR] 
    /*000168e4*/ SUB         R4, R3, #60                 @ 0x3c 
    /*000168e8*/ STR         IP, [R3] 
    /*000168ec*/ STR         R2, [R3, #4] 
    /*000168f0*/ LDR         R3, [R5, #16] 
    /*000168f4*/ SUB         R3, R3, #1 
    /*000168f8*/ STR         R3, [R5, #16] 
    /*000168fc*/ BL          0x00000000000168FC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_NODE_NodeQueueGetBusy_x16900:
    /*00016900*/ MOV         R0, R4 
    /*00016904*/ ADD         SP, SP, #12 
    /*00016908*/ POP         {R4, R5, R6, R7, PC} 
    VI_NODE_NodeQueueGetBusy_x1690c:
    /*0001690c*/ ADD         R1, SP, #4 
    /*00016910*/ MOV         R0, R6 
    /*00016914*/ BL          0x0000000000016914          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016918*/ MOV         R4, #0 
    /*0001691c*/ B           VI_NODE_NodeQueueGetBusy_x16900
FUNC_END VI_NODE_NodeQueueGetBusy


FUNC_BEGIN VI_NODE_NodeQueuePutViOfflineVpssOfflineWait
    /*00016920*/ PUSH        {R4, R5, R6, LR} 
    /*00016924*/ ADD         R6, R0, #68                 @ 0x44 
    /*00016928*/ SUB         SP, SP, #8 
    /*0001692c*/ MOV         R4, R0 
    /*00016930*/ MOV         R5, R1 
    /*00016934*/ MOV         R0, R6 
    /*00016938*/ ADD         R1, SP, #4 
    /*0001693c*/ BL          0x000000000001693C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016940*/ LDR         R3, [R4, #40]               @ 0x28 
    /*00016944*/ ADD         R2, R5, #60                 @ 0x3c 
    /*00016948*/ ADD         IP, R4, #36                 @ 0x24 
    /*0001694c*/ STR         R2, [R4, #40]               @ 0x28 
    /*00016950*/ MOV         R0, R6 
    /*00016954*/ STR         R3, [R5, #64]               @ 0x40 
    /*00016958*/ ADD         R1, SP, #4 
    /*0001695c*/ STR         IP, [R5, #60]               @ 0x3c 
    /*00016960*/ STR         R2, [R3] 
    /*00016964*/ LDR         R3, [R4, #8] 
    /*00016968*/ ADD         R3, R3, #1 
    /*0001696c*/ STR         R3, [R4, #8] 
    /*00016970*/ BL          0x0000000000016970          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016974*/ ADD         SP, SP, #8 
    /*00016978*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_NODE_NodeQueuePutViOfflineVpssOfflineWait


FUNC_BEGIN VI_NODE_NodeQueuePutViOfflineVpssOnlineWait
    /*0001697c*/ PUSH        {R4, R5, R6, LR} 
    /*00016980*/ ADD         R6, R0, #68                 @ 0x44 
    /*00016984*/ SUB         SP, SP, #8 
    /*00016988*/ MOV         R4, R0 
    /*0001698c*/ MOV         R5, R1 
    /*00016990*/ MOV         R0, R6 
    /*00016994*/ ADD         R1, SP, #4 
    /*00016998*/ BL          0x0000000000016998          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001699c*/ LDR         R3, [R4, #48]               @ 0x30 
    /*000169a0*/ ADD         R2, R5, #60                 @ 0x3c 
    /*000169a4*/ ADD         IP, R4, #44                 @ 0x2c 
    /*000169a8*/ STR         R2, [R4, #48]               @ 0x30 
    /*000169ac*/ MOV         R0, R6 
    /*000169b0*/ STR         R3, [R5, #64]               @ 0x40 
    /*000169b4*/ ADD         R1, SP, #4 
    /*000169b8*/ STR         IP, [R5, #60]               @ 0x3c 
    /*000169bc*/ STR         R2, [R3] 
    /*000169c0*/ LDR         R3, [R4, #12] 
    /*000169c4*/ ADD         R3, R3, #1 
    /*000169c8*/ STR         R3, [R4, #12] 
    /*000169cc*/ BL          0x00000000000169CC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000169d0*/ ADD         SP, SP, #8 
    /*000169d4*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_NODE_NodeQueuePutViOfflineVpssOnlineWait


FUNC_BEGIN VI_NODE_NodeQueueGetViOfflineVpssOfflineWait
    /*000169d8*/ PUSH        {R4, R5, R6, LR} 
    /*000169dc*/ ADD         R5, R0, #68                 @ 0x44 
    /*000169e0*/ SUB         SP, SP, #8 
    /*000169e4*/ MOV         R4, R0 
    /*000169e8*/ ADD         R1, SP, #4 
    /*000169ec*/ MOV         R0, R5 
    /*000169f0*/ BL          0x00000000000169F0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000169f4*/ MOV         R2, R4 
    /*000169f8*/ LDR         R3, [R2, #36]!              @ 0x24 
    /*000169fc*/ CMP         R3, R2 
    /*00016a00*/ BEQ         VI_NODE_NodeQueueGetViOfflineVpssOfflineWait_x16a54
    /*00016a04*/ LDR         LR, [R3, #4] 
    /*00016a08*/ MOV         IP, #256                    @ 0x100 
    /*00016a0c*/ LDR         R6, [R3] 
    /*00016a10*/ MOVT        IP, #16 
    /*00016a14*/ MOV         R2, #512                    @ 0x200 
    /*00016a18*/ MOV         R0, R5 
    /*00016a1c*/ MOVT        R2, #32 
    /*00016a20*/ SUB         R5, R3, #60                 @ 0x3c 
    /*00016a24*/ STR         LR, [R6, #4] 
    /*00016a28*/ ADD         R1, SP, #4 
    /*00016a2c*/ STR         R6, [LR] 
    /*00016a30*/ STR         IP, [R3] 
    /*00016a34*/ STR         R2, [R3, #4] 
    /*00016a38*/ LDR         R3, [R4, #8] 
    /*00016a3c*/ SUB         R3, R3, #1 
    /*00016a40*/ STR         R3, [R4, #8] 
    /*00016a44*/ BL          0x0000000000016A44          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_NODE_NodeQueueGetViOfflineVpssOfflineWait_x16a48:
    /*00016a48*/ MOV         R0, R5 
    /*00016a4c*/ ADD         SP, SP, #8 
    /*00016a50*/ POP         {R4, R5, R6, PC} 
    VI_NODE_NodeQueueGetViOfflineVpssOfflineWait_x16a54:
    /*00016a54*/ MOV         R0, R5 
    /*00016a58*/ ADD         R1, SP, #4 
    /*00016a5c*/ BL          0x0000000000016A5C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016a60*/ MOV         R5, #0 
    /*00016a64*/ B           VI_NODE_NodeQueueGetViOfflineVpssOfflineWait_x16a48
FUNC_END VI_NODE_NodeQueueGetViOfflineVpssOfflineWait


FUNC_BEGIN VI_NODE_NodeQueueGetViOfflineVpssOnlineWait
    /*00016a68*/ PUSH        {R4, R5, R6, LR} 
    /*00016a6c*/ ADD         R5, R0, #68                 @ 0x44 
    /*00016a70*/ SUB         SP, SP, #8 
    /*00016a74*/ MOV         R4, R0 
    /*00016a78*/ ADD         R1, SP, #4 
    /*00016a7c*/ MOV         R0, R5 
    /*00016a80*/ BL          0x0000000000016A80          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016a84*/ MOV         R2, R4 
    /*00016a88*/ LDR         R3, [R2, #44]!              @ 0x2c 
    /*00016a8c*/ CMP         R3, R2 
    /*00016a90*/ BEQ         VI_NODE_NodeQueueGetViOfflineVpssOnlineWait_x16ae4
    /*00016a94*/ LDR         LR, [R3, #4] 
    /*00016a98*/ MOV         IP, #256                    @ 0x100 
    /*00016a9c*/ LDR         R6, [R3] 
    /*00016aa0*/ MOVT        IP, #16 
    /*00016aa4*/ MOV         R2, #512                    @ 0x200 
    /*00016aa8*/ MOV         R0, R5 
    /*00016aac*/ MOVT        R2, #32 
    /*00016ab0*/ SUB         R5, R3, #60                 @ 0x3c 
    /*00016ab4*/ STR         LR, [R6, #4] 
    /*00016ab8*/ ADD         R1, SP, #4 
    /*00016abc*/ STR         R6, [LR] 
    /*00016ac0*/ STR         IP, [R3] 
    /*00016ac4*/ STR         R2, [R3, #4] 
    /*00016ac8*/ LDR         R3, [R4, #12] 
    /*00016acc*/ SUB         R3, R3, #1 
    /*00016ad0*/ STR         R3, [R4, #12] 
    /*00016ad4*/ BL          0x0000000000016AD4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_NODE_NodeQueueGetViOfflineVpssOnlineWait_x16ad8:
    /*00016ad8*/ MOV         R0, R5 
    /*00016adc*/ ADD         SP, SP, #8 
    /*00016ae0*/ POP         {R4, R5, R6, PC} 
    VI_NODE_NodeQueueGetViOfflineVpssOnlineWait_x16ae4:
    /*00016ae4*/ MOV         R0, R5 
    /*00016ae8*/ ADD         R1, SP, #4 
    /*00016aec*/ BL          0x0000000000016AEC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016af0*/ MOV         R5, #0 
    /*00016af4*/ B           VI_NODE_NodeQueueGetViOfflineVpssOnlineWait_x16ad8
FUNC_END VI_NODE_NodeQueueGetViOfflineVpssOnlineWait


FUNC_BEGIN VI_NODE_NodeQueuePutFree
    /*00016af8*/ PUSH        {R4, R5, R6, LR} 
    /*00016afc*/ ADD         R6, R0, #68                 @ 0x44 
    /*00016b00*/ SUB         SP, SP, #8 
    /*00016b04*/ MOV         R4, R0 
    /*00016b08*/ MOV         R5, R1 
    /*00016b0c*/ MOV         R0, R6 
    /*00016b10*/ ADD         R1, SP, #4 
    /*00016b14*/ BL          0x0000000000016B14          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016b18*/ LDR         R3, [R4, #32] 
    /*00016b1c*/ ADD         R2, R5, #60                 @ 0x3c 
    /*00016b20*/ ADD         IP, R4, #28 
    /*00016b24*/ STR         R2, [R4, #32] 
    /*00016b28*/ MOV         R0, R6 
    /*00016b2c*/ STR         R3, [R5, #64]               @ 0x40 
    /*00016b30*/ ADD         R1, SP, #4 
    /*00016b34*/ STR         IP, [R5, #60]               @ 0x3c 
    /*00016b38*/ STR         R2, [R3] 
    /*00016b3c*/ LDR         R3, [R4, #4] 
    /*00016b40*/ ADD         R3, R3, #1 
    /*00016b44*/ STR         R3, [R4, #4] 
    /*00016b48*/ BL          0x0000000000016B48          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016b4c*/ ADD         SP, SP, #8 
    /*00016b50*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_NODE_NodeQueuePutFree


FUNC_BEGIN VI_NODE_GetFreeNum
    /*00016b54*/ PUSH        {R4, R5, LR} 
    /*00016b58*/ ADD         R5, R0, #68                 @ 0x44 
    /*00016b5c*/ SUB         SP, SP, #12 
    /*00016b60*/ MOV         R4, R0 
    /*00016b64*/ ADD         R1, SP, #4 
    /*00016b68*/ MOV         R0, R5 
    /*00016b6c*/ BL          0x0000000000016B6C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016b70*/ MOV         R0, R5 
    /*00016b74*/ ADD         R1, SP, #4 
    /*00016b78*/ LDR         R4, [R4, #4] 
    /*00016b7c*/ BL          0x0000000000016B7C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016b80*/ MOV         R0, R4 
    /*00016b84*/ ADD         SP, SP, #12 
    /*00016b88*/ POP         {R4, R5, PC} 
FUNC_END VI_NODE_GetFreeNum


FUNC_BEGIN VI_NODE_GetViOfflineVpssOfflineWaitNum
    /*00016b8c*/ PUSH        {R4, R5, LR} 
    /*00016b90*/ ADD         R5, R0, #68                 @ 0x44 
    /*00016b94*/ SUB         SP, SP, #12 
    /*00016b98*/ MOV         R4, R0 
    /*00016b9c*/ ADD         R1, SP, #4 
    /*00016ba0*/ MOV         R0, R5 
    /*00016ba4*/ BL          0x0000000000016BA4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016ba8*/ MOV         R0, R5 
    /*00016bac*/ ADD         R1, SP, #4 
    /*00016bb0*/ LDR         R4, [R4, #8] 
    /*00016bb4*/ BL          0x0000000000016BB4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016bb8*/ MOV         R0, R4 
    /*00016bbc*/ ADD         SP, SP, #12 
    /*00016bc0*/ POP         {R4, R5, PC} 
FUNC_END VI_NODE_GetViOfflineVpssOfflineWaitNum


FUNC_BEGIN VI_NODE_GetViOfflineVpssOnlineWaitNum
    /*00016bc4*/ PUSH        {R4, R5, LR} 
    /*00016bc8*/ ADD         R5, R0, #68                 @ 0x44 
    /*00016bcc*/ SUB         SP, SP, #12 
    /*00016bd0*/ MOV         R4, R0 
    /*00016bd4*/ ADD         R1, SP, #4 
    /*00016bd8*/ MOV         R0, R5 
    /*00016bdc*/ BL          0x0000000000016BDC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016be0*/ MOV         R0, R5 
    /*00016be4*/ ADD         R1, SP, #4 
    /*00016be8*/ LDR         R4, [R4, #12] 
    /*00016bec*/ BL          0x0000000000016BEC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016bf0*/ MOV         R0, R4 
    /*00016bf4*/ ADD         SP, SP, #12 
    /*00016bf8*/ POP         {R4, R5, PC} 
FUNC_END VI_NODE_GetViOfflineVpssOnlineWaitNum


FUNC_BEGIN VI_NODE_GetBusyNum
    /*00016bfc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00016c00*/ ADD         R6, R0, #68                 @ 0x44 
    /*00016c04*/ MOV         R7, R1 
    /*00016c08*/ SUB         SP, SP, #12 
    /*00016c0c*/ MOV         R4, R2 
    /*00016c10*/ ADD         R4, R4, R7, LSL #1 
    /*00016c14*/ MOV         R5, R0 
    /*00016c18*/ ADD         R1, SP, #4 
    /*00016c1c*/ MOV         R0, R6 
    /*00016c20*/ ADD         R4, R4, #4 
    /*00016c24*/ BL          0x0000000000016C24          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016c28*/ MOV         R0, R6 
    /*00016c2c*/ ADD         R1, SP, #4 
    /*00016c30*/ LDR         R4, [R5, R4, LSL #2] 
    /*00016c34*/ BL          0x0000000000016C34          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016c38*/ MOV         R0, R4 
    /*00016c3c*/ ADD         SP, SP, #12 
    /*00016c40*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VI_NODE_GetBusyNum


FUNC_BEGIN VI_CoverExTaskCallBack
    /*00016c44*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00016c48*/ MOV         R4, R3 
    /*00016c4c*/ LDR         R3, [R3, #736]              @ 0x2e0 
    /*00016c50*/ SUB         SP, SP, #12 
    /*00016c54*/ CMP         R3, #1 
    /*00016c58*/ BEQ         VI_CoverExTaskCallBack_x16c94
    /*00016c5c*/ MOV         R2, #640                    @ 0x280 
    /*00016c60*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xca8] 
    /*00016c64*/ STR         R2, [SP] 
    /*00016c68*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xca8] 
    /*00016c6c*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6444] 
    /*00016c70*/ MOV         R1, #16 
    /*00016c74*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6444] 
    /*00016c78*/ MOV         R0, #3 
    /*00016c7c*/ BL          0x0000000000016C7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_CoverExTaskCallBack_x16c80:
    /*00016c80*/ MOV         R0, R4 
    /*00016c84*/ MOV         R1, #0 
    /*00016c88*/ ADD         SP, SP, #12 
    /*00016c8c*/ POP         {R4, R5, R6, R7, LR} 
    VI_CoverExTaskCallBack_x16c90:
    /*00016c90*/ B           VI_CoverExTaskCallBack_x16c90@ VI_DRV_PutVb [R_ARM_JUMP24: .text+0x25a8c] 
    VI_CoverExTaskCallBack_x16c94:
    /*00016c94*/ MOV         R7, R2 
    /*00016c98*/ MOVW        R2, #6264                   @ 0x1878 
    /*00016c9c*/ MUL         R2, R2, R1 
    /*00016ca0*/ MOV         R3, #696                    @ 0x2b8 
    /*00016ca4*/ MLA         R3, R3, R7, R2 
    /*00016ca8*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1da8] 
    /*00016cac*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1da8] 
    /*00016cb0*/ MOV         R6, R1 
    /*00016cb4*/ MOV         R2, #336                    @ 0x150 
    /*00016cb8*/ ADD         R1, R4, R2 
    /*00016cbc*/ ADD         R5, R5, R3 
    /*00016cc0*/ MOV         R0, R5 
    /*00016cc4*/ BL          0x0000000000016CC4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00016cc8*/ MOV         R3, #0 
    /*00016ccc*/ MOV         R1, R7 
    /*00016cd0*/ MOV         R0, R6 
    /*00016cd4*/ MOV         R2, R5 
    /*00016cd8*/ STR         R3, [R5, #688]              @ 0x2b0 
    /*00016cdc*/ BL          0x0000000000016CDC          @ VI_ProcSendPic [R_ARM_CALL: .text+0x26e8] 
    /*00016ce0*/ B           VI_CoverExTaskCallBack_x16c80
FUNC_END VI_CoverExTaskCallBack


FUNC_BEGIN VI_ExtChnTaskCallBack
    /*00016ce4*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00016ce8*/ MOV         R0, R3 
    /*00016cec*/ MOV         R4, R3 
    /*00016cf0*/ SUB         SP, SP, #12 
    /*00016cf4*/ MOV         R6, R1 
    /*00016cf8*/ MOV         R1, #0 
    /*00016cfc*/ MOV         R7, R2 
    /*00016d00*/ BL          0x0000000000016D00          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00016d04*/ LDR         R3, [R4, #736]              @ 0x2e0 
    /*00016d08*/ CMP         R3, #1 
    /*00016d0c*/ BEQ         VI_ExtChnTaskCallBack_x16d48
    /*00016d10*/ MOV         R3, #956                    @ 0x3bc 
    /*00016d14*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x647c] 
    /*00016d18*/ STR         R3, [SP] 
    /*00016d1c*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x647c] 
    /*00016d20*/ LDR         R3, [PC, #108]              @ 0x0000000000016d94 
    /*00016d24*/ MOV         R1, #16 
    /*00016d28*/ MOV         R0, #3 
    /*00016d2c*/ ADD         R4, R4, #336                @ 0x150 
    /*00016d30*/ BL          0x0000000000016D30          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_ExtChnTaskCallBack_x16d34:
    /*00016d34*/ MOV         R0, R4 
    /*00016d38*/ MOV         R1, #0 
    /*00016d3c*/ ADD         SP, SP, #12 
    /*00016d40*/ POP         {R4, R5, R6, R7, LR} 
    VI_ExtChnTaskCallBack_x16d44:
    /*00016d44*/ B           VI_ExtChnTaskCallBack_x16d44@ VI_DRV_PutVb [R_ARM_JUMP24: .text+0x25a8c] 
    VI_ExtChnTaskCallBack_x16d48:
    /*00016d48*/ MOVW        R2, #6264                   @ 0x1878 
    /*00016d4c*/ MOV         R3, #696                    @ 0x2b8 
    /*00016d50*/ MUL         R2, R2, R6 
    /*00016d54*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1da8] 
    /*00016d58*/ MLA         R3, R3, R7, R2 
    /*00016d5c*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1da8] 
    /*00016d60*/ ADD         R4, R4, #336                @ 0x150 
    /*00016d64*/ MOV         R2, #336                    @ 0x150 
    /*00016d68*/ ADD         R5, R5, R3 
    /*00016d6c*/ MOV         R1, R4 
    /*00016d70*/ MOV         R0, R5 
    /*00016d74*/ BL          0x0000000000016D74          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00016d78*/ MOV         R3, #0 
    /*00016d7c*/ MOV         R1, R7 
    /*00016d80*/ MOV         R0, R6 
    /*00016d84*/ MOV         R2, R5 
    /*00016d88*/ STR         R3, [R5, #688]              @ 0x2b0 
    /*00016d8c*/ BL          0x0000000000016D8C          @ VI_ProcSendPic [R_ARM_CALL: .text+0x26e8] 
    /*00016d90*/ B           VI_ExtChnTaskCallBack_x16d34
    /*00016d94*/ ANDEQ       R0, R0, R0, ASR #25 
FUNC_END VI_ExtChnTaskCallBack


FUNC_BEGIN VI_ExtChnOnlineTaskCallBack
    /*00016d98*/ PUSH        {R4, LR} 
    /*00016d9c*/ MOV         R1, #0 
    /*00016da0*/ MOV         R0, R3 
    /*00016da4*/ MOV         R4, R3 
    /*00016da8*/ BL          0x0000000000016DA8          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00016dac*/ ADD         R0, R4, #336                @ 0x150 
    /*00016db0*/ MOV         R1, #0 
    /*00016db4*/ POP         {R4, LR} 
    VI_ExtChnOnlineTaskCallBack_x16db8:
    /*00016db8*/ B           VI_ExtChnOnlineTaskCallBack_x16db8@ VI_DRV_PutVb [R_ARM_JUMP24: .text+0x25a8c] 
FUNC_END VI_ExtChnOnlineTaskCallBack


FUNC_BEGIN VI_VgsByPassTaskCallBack
    /*00016dbc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00016dc0*/ MOV         R6, R3 
    /*00016dc4*/ LDR         R3, [R3, #736]              @ 0x2e0 
    /*00016dc8*/ SUB         SP, SP, #12 
    /*00016dcc*/ MOV         R7, R1 
    /*00016dd0*/ MOV         R5, R2 
    /*00016dd4*/ CMP         R3, #1 
    /*00016dd8*/ BEQ         VI_VgsByPassTaskCallBack_x16e68
    /*00016ddc*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00016de0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00016de4*/ MOV         R1, #179                    @ 0xb3 
    /*00016de8*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x64b0] 
    /*00016dec*/ LDR         R4, [R3, R7, LSL #2] 
    /*00016df0*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x64b0] 
    /*00016df4*/ STR         R1, [SP] 
    /*00016df8*/ MOV         R0, #3 
    /*00016dfc*/ MOV         R1, #16 
    /*00016e00*/ LDR         R3, [PC, #176]              @ 0x0000000000016eb8 
    /*00016e04*/ BL          0x0000000000016E04          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016e08*/ MOV         R2, #56                     @ 0x38 
    /*00016e0c*/ MLA         R2, R2, R5, R4 
    /*00016e10*/ MOVW        R1, #36660                  @ 0x8f34 
    /*00016e14*/ LDR         R3, [R2, R1] 
    /*00016e18*/ ADD         R3, R3, #1 
    /*00016e1c*/ STR         R3, [R2, R1] 
    VI_VgsByPassTaskCallBack_x16e20:
    /*00016e20*/ MOV         R4, #176                    @ 0xb0 
    /*00016e24*/ MOV         R1, #0 
    /*00016e28*/ MUL         R4, R4, R7 
    /*00016e2c*/ MOV         R0, R6 
    /*00016e30*/ BL          0x0000000000016E30          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00016e34*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00016e38*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00016e3c*/ ADD         R0, R4, #28 
    /*00016e40*/ ADD         R0, R5, R0 
    /*00016e44*/ BL          0x0000000000016E44          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*00016e48*/ ADD         R0, R4, #32 
    /*00016e4c*/ ADD         R0, R5, R0 
    /*00016e50*/ BL          0x0000000000016E50          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*00016e54*/ ADD         R0, R4, #88                 @ 0x58 
    /*00016e58*/ ADD         R0, R5, R0 
    /*00016e5c*/ ADD         SP, SP, #12 
    /*00016e60*/ POP         {R4, R5, R6, R7, LR} 
    VI_VgsByPassTaskCallBack_x16e64:
    /*00016e64*/ B           VI_VgsByPassTaskCallBack_x16e64@ osal_wakeup [R_ARM_JUMP24: +0x0] 
    VI_VgsByPassTaskCallBack_x16e68:
    /*00016e68*/ MOVW        R2, #6264                   @ 0x1878 
    /*00016e6c*/ MOV         R3, #696                    @ 0x2b8 
    /*00016e70*/ MUL         R2, R2, R1 
    /*00016e74*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1da8] 
    /*00016e78*/ MLA         R3, R3, R5, R2 
    /*00016e7c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1da8] 
    /*00016e80*/ MOV         R2, #336                    @ 0x150 
    /*00016e84*/ ADD         R1, R6, R2 
    /*00016e88*/ ADD         R4, R4, R3 
    /*00016e8c*/ MOV         R0, R4 
    /*00016e90*/ BL          0x0000000000016E90          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00016e94*/ LDR         R3, [R6, #672]              @ 0x2a0 
    /*00016e98*/ MOV         R1, R5 
    /*00016e9c*/ MOV         R2, R4 
    /*00016ea0*/ MOV         R0, R7 
    /*00016ea4*/ STR         R3, [R4, #688]              @ 0x2b0 
    /*00016ea8*/ LDR         R3, [R6, #680]              @ 0x2a8 
    /*00016eac*/ STR         R3, [R4, #692]              @ 0x2b4 
    /*00016eb0*/ BL          0x0000000000016EB0          @ VI_ProcSendPic [R_ARM_CALL: .text+0x26e8] 
    /*00016eb4*/ B           VI_VgsByPassTaskCallBack_x16e20
    /*00016eb8*/ LDRDEQ      R0, [R0], -R8 
FUNC_END VI_VgsByPassTaskCallBack


FUNC_BEGIN VI_RegionLumaTaskCallBack
    /*00016ebc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00016ec0*/ MOV         R7, R3 
    /*00016ec4*/ LDR         R8, [R3, #736]              @ 0x2e0 
    /*00016ec8*/ SUB         SP, SP, #12 
    /*00016ecc*/ MOV         R4, R1 
    /*00016ed0*/ MOV         R6, R2 
    /*00016ed4*/ CMP         R8, #1 
    /*00016ed8*/ BEQ         VI_RegionLumaTaskCallBack_x16f54
    /*00016edc*/ MOV         R3, #484                    @ 0x1e4 
    /*00016ee0*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x64e4] 
    /*00016ee4*/ STR         R3, [SP] 
    /*00016ee8*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x64e4] 
    /*00016eec*/ LDR         R3, [PC, #192]              @ 0x0000000000016fb4 
    /*00016ef0*/ MOV         R1, #16 
    /*00016ef4*/ MOV         R0, #3 
    /*00016ef8*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00016efc*/ BL          0x0000000000016EFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016f00*/ MOV         R3, #44                     @ 0x2c 
    /*00016f04*/ MLA         R3, R3, R4, R6 
    /*00016f08*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00016f0c*/ MOV         R2, #0 
    /*00016f10*/ ADD         R3, R3, #38                 @ 0x26 
    /*00016f14*/ ADD         R3, R5, R3, LSL #2 
    /*00016f18*/ STR         R2, [R3, #4] 
    VI_RegionLumaTaskCallBack_x16f1c:
    /*00016f1c*/ MOV         R0, R7 
    /*00016f20*/ MOV         R1, #0 
    /*00016f24*/ BL          0x0000000000016F24          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00016f28*/ MOV         R2, #44                     @ 0x2c 
    /*00016f2c*/ MLA         R2, R2, R4, R6 
    /*00016f30*/ MOV         R0, #176                    @ 0xb0 
    /*00016f34*/ MLA         R0, R0, R4, R5 
    /*00016f38*/ MOV         R3, #1 
    /*00016f3c*/ ADD         R2, R2, #38                 @ 0x26 
    /*00016f40*/ ADD         R0, R0, #80                 @ 0x50 
    /*00016f44*/ STR         R3, [R5, R2, LSL #2] 
    /*00016f48*/ ADD         SP, SP, #12 
    /*00016f4c*/ POP         {R4, R5, R6, R7, R8, R9, LR} 
    VI_RegionLumaTaskCallBack_x16f50:
    /*00016f50*/ B           VI_RegionLumaTaskCallBack_x16f50@ osal_wakeup [R_ARM_JUMP24: +0x0] 
    VI_RegionLumaTaskCallBack_x16f54:
    /*00016f54*/ MOVW        R2, #6264                   @ 0x1878 
    /*00016f58*/ MOV         R3, #696                    @ 0x2b8 
    /*00016f5c*/ MUL         R2, R2, R1 
    /*00016f60*/ MOVW        R9, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1da8] 
    /*00016f64*/ MLA         R3, R3, R6, R2 
    /*00016f68*/ MOVT        R9, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1da8] 
    /*00016f6c*/ MOV         R2, #336                    @ 0x150 
    /*00016f70*/ ADD         R1, R7, R2 
    /*00016f74*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00016f78*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00016f7c*/ ADD         R9, R9, R3 
    /*00016f80*/ MOV         R0, R9 
    /*00016f84*/ BL          0x0000000000016F84          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00016f88*/ MOV         R3, #0 
    /*00016f8c*/ MOV         R2, R9 
    /*00016f90*/ STR         R3, [R9, #688]              @ 0x2b0 
    /*00016f94*/ MOV         R1, R6 
    /*00016f98*/ MOV         R0, R4 
    /*00016f9c*/ BL          0x0000000000016F9C          @ VI_ProcSendPic [R_ARM_CALL: .text+0x26e8] 
    /*00016fa0*/ MOV         R3, #44                     @ 0x2c 
    /*00016fa4*/ MLA         R3, R3, R4, R6 
    /*00016fa8*/ ADD         R3, R5, R3, LSL #2 
    /*00016fac*/ STR         R8, [R3, #156]              @ 0x9c 
    /*00016fb0*/ B           VI_RegionLumaTaskCallBack_x16f1c
    /*00016fb4*/ STRDEQ      R0, [R0], -R4 
FUNC_END VI_RegionLumaTaskCallBack


FUNC_BEGIN VI_RegionLumaTaskCallBackMiddle
    /*00016fb8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00016fbc*/ MOV         R7, R3 
    /*00016fc0*/ LDR         R3, [R3, #736]              @ 0x2e0 
    /*00016fc4*/ SUB         SP, SP, #12 
    /*00016fc8*/ MOV         R4, R1 
    /*00016fcc*/ MOV         R6, R2 
    /*00016fd0*/ CMP         R3, #1 
    /*00016fd4*/ BEQ         VI_RegionLumaTaskCallBackMiddle_x17050
    /*00016fd8*/ MOVW        R3, #511                    @ 0x1ff 
    /*00016fdc*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x64e4] 
    /*00016fe0*/ STR         R3, [SP] 
    /*00016fe4*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x64e4] 
    /*00016fe8*/ LDR         R3, [PC, #124]              @ 0x000000000001706c 
    /*00016fec*/ MOV         R1, #16 
    /*00016ff0*/ MOV         R0, #3 
    /*00016ff4*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00016ff8*/ BL          0x0000000000016FF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016ffc*/ MOV         R3, #44                     @ 0x2c 
    /*00017000*/ MLA         R3, R3, R4, R6 
    /*00017004*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00017008*/ MOV         R2, #0 
    /*0001700c*/ ADD         R3, R3, #38                 @ 0x26 
    /*00017010*/ ADD         R3, R5, R3, LSL #2 
    /*00017014*/ STR         R2, [R3, #4] 
    VI_RegionLumaTaskCallBackMiddle_x17018:
    /*00017018*/ MOV         R0, R7 
    /*0001701c*/ MOV         R1, #0 
    /*00017020*/ BL          0x0000000000017020          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00017024*/ MOV         R2, #44                     @ 0x2c 
    /*00017028*/ MLA         R2, R2, R4, R6 
    /*0001702c*/ MOV         R0, #176                    @ 0xb0 
    /*00017030*/ MLA         R0, R0, R4, R5 
    /*00017034*/ MOV         R3, #1 
    /*00017038*/ ADD         R2, R2, #38                 @ 0x26 
    /*0001703c*/ ADD         R0, R0, #80                 @ 0x50 
    /*00017040*/ STR         R3, [R5, R2, LSL #2] 
    /*00017044*/ ADD         SP, SP, #12 
    /*00017048*/ POP         {R4, R5, R6, R7, LR} 
    VI_RegionLumaTaskCallBackMiddle_x1704c:
    /*0001704c*/ B           VI_RegionLumaTaskCallBackMiddle_x1704c@ osal_wakeup [R_ARM_JUMP24: +0x0] 
    VI_RegionLumaTaskCallBackMiddle_x17050:
    /*00017050*/ MOV         R2, #44                     @ 0x2c 
    /*00017054*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00017058*/ MLA         R2, R2, R1, R6 
    /*0001705c*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00017060*/ ADD         R2, R5, R2, LSL #2 
    /*00017064*/ STR         R3, [R2, #156]              @ 0x9c 
    /*00017068*/ B           VI_RegionLumaTaskCallBackMiddle_x17018
    /*0001706c*/ ANDEQ       R0, R0, R0, LSL SP 
FUNC_END VI_RegionLumaTaskCallBackMiddle


FUNC_BEGIN VI_VgsJobCallBack
    /*00017070*/ PUSH        {R4, R5, R6, LR} 
    /*00017074*/ MOV         R4, #176                    @ 0xb0 
    /*00017078*/ MUL         R4, R4, R1 
    /*0001707c*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00017080*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00017084*/ ADD         R0, R4, #28 
    /*00017088*/ ADD         R0, R5, R0 
    /*0001708c*/ BL          0x000000000001708C          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*00017090*/ ADD         R0, R4, #32 
    /*00017094*/ ADD         R0, R5, R0 
    /*00017098*/ BL          0x0000000000017098          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0001709c*/ ADD         R0, R4, #88                 @ 0x58 
    /*000170a0*/ ADD         R0, R5, R0 
    /*000170a4*/ POP         {R4, R5, R6, LR} 
    VI_VgsJobCallBack_x170a8:
    /*000170a8*/ B           VI_VgsJobCallBack_x170a8    @ osal_wakeup [R_ARM_JUMP24: +0x0] 
FUNC_END VI_VgsJobCallBack


FUNC_BEGIN VI_OsdTaskCallBack
    /*000170ac*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000170b0*/ MOV         R4, R1 
    /*000170b4*/ MOV         R5, R2 
    /*000170b8*/ MOV         R6, R0 
    /*000170bc*/ MOV         R7, R3 
    /*000170c0*/ MOV         R1, R2 
    /*000170c4*/ MOV         R0, R4 
    /*000170c8*/ MOV         R2, #3 
    /*000170cc*/ BL          0x00000000000170CC          @ VI_DRV_PutRegion [R_ARM_CALL: .text+0x2ce10] 
    /*000170d0*/ MOV         R3, R7 
    /*000170d4*/ MOV         R2, R5 
    /*000170d8*/ MOV         R1, R4 
    /*000170dc*/ MOV         R0, R6 
    /*000170e0*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_OsdTaskCallBack_x170e4:
    /*000170e4*/ B           VI_OsdTaskCallBack_x170e4   @ VI_CoverExTaskCallBack [R_ARM_JUMP24: .text+0x16c44] 
FUNC_END VI_OsdTaskCallBack


FUNC_BEGIN VI_IsVgsExist
    /*000170e8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000170ec*/ MOV         R0, #45                     @ 0x2d 
    /*000170f0*/ SUB         SP, SP, #12 
    /*000170f4*/ BL          0x00000000000170F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000170f8*/ CMP         R0, #0 
    /*000170fc*/ BEQ         VI_IsVgsExist_x1714c
    /*00017100*/ LDR         R3, [R0] 
    /*00017104*/ CMP         R3, #0 
    /*00017108*/ BEQ         VI_IsVgsExist_x1714c
    /*0001710c*/ LDR         R3, [R0, #24] 
    /*00017110*/ CMP         R3, #0 
    /*00017114*/ BEQ         VI_IsVgsExist_x1714c
    /*00017118*/ LDR         R3, [R0, #16] 
    /*0001711c*/ CMP         R3, #0 
    /*00017120*/ BEQ         VI_IsVgsExist_x1714c
    /*00017124*/ LDR         R3, [R0, #20] 
    /*00017128*/ CMP         R3, #0 
    /*0001712c*/ BEQ         VI_IsVgsExist_x1714c
    /*00017130*/ LDR         R3, [R0, #28] 
    /*00017134*/ CMP         R3, #0 
    /*00017138*/ BEQ         VI_IsVgsExist_x1714c
    /*0001713c*/ LDR         R3, [R0, #12] 
    /*00017140*/ CMP         R3, #0 
    /*00017144*/ MOVNE       R0, #1 
    /*00017148*/ BNE         VI_IsVgsExist_x17170
    VI_IsVgsExist_x1714c:
    /*0001714c*/ MOV         R3, #48                     @ 0x30 
    /*00017150*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x651c] 
    /*00017154*/ STR         R3, [SP] 
    /*00017158*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x651c] 
    /*0001715c*/ LDR         R3, [PC, #20]               @ 0x0000000000017178 
    /*00017160*/ MOV         R1, #16 
    /*00017164*/ MOV         R0, #7 
    /*00017168*/ BL          0x0000000000017168          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001716c*/ MOV         R0, #0 
    VI_IsVgsExist_x17170:
    /*00017170*/ ADD         SP, SP, #12 
    /*00017174*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00017178*/ ANDEQ       R0, R0, R0, LSR SP 
FUNC_END VI_IsVgsExist


FUNC_BEGIN VI_IsByPassVgs
    /*0001717c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00017180*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00017184*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00017188*/ MOV         R7, R2 
    /*0001718c*/ LDR         R6, [R3, R0, LSL #2] 
    /*00017190*/ MOV         R4, R1 
    /*00017194*/ MOV         R5, R0 
    /*00017198*/ BL          0x0000000000017198          @ VI_DRV_GetChnCoverExNum [R_ARM_CALL: .text+0x2d088] 
    /*0001719c*/ MOV         R3, #36                     @ 0x24 
    /*000171a0*/ CMP         R0, #0 
    /*000171a4*/ MLANE       R3, R3, R4, R6 
    /*000171a8*/ MOVNE       R2, #1 
    /*000171ac*/ MLAEQ       R3, R3, R4, R6 
    /*000171b0*/ ADDNE       R3, R3, #36096              @ 0x8d00 
    /*000171b4*/ ADDEQ       R3, R3, #36096              @ 0x8d00 
    /*000171b8*/ STRNE       R2, [R3] 
    /*000171bc*/ STREQ       R0, [R3] 
    /*000171c0*/ LDR         R3, [R7, #692]              @ 0x2b4 
    /*000171c4*/ CMP         R3, #1 
    /*000171c8*/ BEQ         VI_IsByPassVgs_x171dc
    /*000171cc*/ ADD         R3, R6, #32768              @ 0x8000 
    /*000171d0*/ LDR         R2, [R3, #3304]             @ 0xce8 
    /*000171d4*/ CMP         R2, #0 
    /*000171d8*/ BNE         VI_IsByPassVgs_x172ac
    VI_IsByPassVgs_x171dc:
    /*000171dc*/ MOV         R3, #36                     @ 0x24 
    /*000171e0*/ MOVW        R2, #36100                  @ 0x8d04 
    /*000171e4*/ MLA         R3, R3, R4, R6 
    /*000171e8*/ MOV         R1, #0 
    /*000171ec*/ STR         R1, [R3, R2] 
    VI_IsByPassVgs_x171f0:
    /*000171f0*/ MOV         R1, R4 
    /*000171f4*/ MOV         R0, R5 
    /*000171f8*/ BL          0x00000000000171F8          @ VI_DRV_GetChnOsdNum [R_ARM_CALL: .text+0x2d244] 
    /*000171fc*/ MOV         R3, #36                     @ 0x24 
    /*00017200*/ MLA         R3, R3, R4, R6 
    /*00017204*/ MOVW        R2, #36104                  @ 0x8d08 
    /*00017208*/ SUB         R5, R4, #1 
    /*0001720c*/ CMP         R0, #0 
    /*00017210*/ STREQ       R0, [R3, R2] 
    /*00017214*/ MOVNE       R1, #1 
    /*00017218*/ STRNE       R1, [R3, R2] 
    /*0001721c*/ CMP         R5, #7 
    /*00017220*/ MOV         R3, #36                     @ 0x24 
    /*00017224*/ MOVW        R1, #36128                  @ 0x8d20 
    /*00017228*/ MLA         R3, R3, R4, R6 
    /*0001722c*/ BHI         VI_IsByPassVgs_x17254
    /*00017230*/ ADD         R2, R3, #36096              @ 0x8d00 
    /*00017234*/ MOV         R0, #1 
    /*00017238*/ STR         R0, [R3, R1] 
    /*0001723c*/ LDR         R3, [R2] 
    /*00017240*/ CMP         R3, #0 
    /*00017244*/ BEQ         VI_IsByPassVgs_x1726c
    /*00017248*/ BL          0x0000000000017248          @ VI_DRV_IsSupportLowDelay [R_ARM_CALL: .text+0x2a748] 
    /*0001724c*/ MOV         R0, #0 
    /*00017250*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_IsByPassVgs_x17254:
    /*00017254*/ ADD         R2, R3, #36096              @ 0x8d00 
    /*00017258*/ MOV         R0, #0 
    /*0001725c*/ STR         R0, [R3, R1] 
    /*00017260*/ LDR         R3, [R2] 
    /*00017264*/ CMP         R3, R0 
    /*00017268*/ BNE         VI_IsByPassVgs_x17284
    VI_IsByPassVgs_x1726c:
    /*0001726c*/ MOV         R2, #36                     @ 0x24 
    /*00017270*/ MOVW        R3, #36100                  @ 0x8d04 
    /*00017274*/ MLA         R4, R2, R4, R6 
    /*00017278*/ LDR         R3, [R4, R3] 
    /*0001727c*/ CMP         R3, #0 
    /*00017280*/ BEQ         VI_IsByPassVgs_x172d0
    VI_IsByPassVgs_x17284:
    /*00017284*/ BL          0x0000000000017284          @ VI_DRV_IsSupportLowDelay [R_ARM_CALL: .text+0x2a748] 
    /*00017288*/ CMP         R5, #7 
    /*0001728c*/ MOVLS       R3, #0 
    /*00017290*/ MOVHI       R3, #1 
    /*00017294*/ CMP         R0, #1 
    /*00017298*/ MOVNE       R3, #0 
    /*0001729c*/ CMP         R3, #0 
    /*000172a0*/ MOV         R0, R3 
    /*000172a4*/ BNE         VI_IsByPassVgs_x172fc
    /*000172a8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_IsByPassVgs_x172ac:
    /*000172ac*/ LDR         R3, [R3, #3308]             @ 0xcec 
    /*000172b0*/ CMP         R4, R3 
    /*000172b4*/ BNE         VI_IsByPassVgs_x171dc
    /*000172b8*/ MOV         R3, #36                     @ 0x24 
    /*000172bc*/ MOVW        R2, #36100                  @ 0x8d04 
    /*000172c0*/ MLA         R3, R3, R4, R6 
    /*000172c4*/ MOV         R1, #1 
    /*000172c8*/ STR         R1, [R3, R2] 
    /*000172cc*/ B           VI_IsByPassVgs_x171f0
    VI_IsByPassVgs_x172d0:
    /*000172d0*/ MOVW        R3, #36104                  @ 0x8d08 
    /*000172d4*/ LDR         R3, [R4, R3] 
    /*000172d8*/ CMP         R3, #0 
    /*000172dc*/ BNE         VI_IsByPassVgs_x17284
    /*000172e0*/ MOVW        R3, #36128                  @ 0x8d20 
    /*000172e4*/ LDR         R3, [R4, R3] 
    /*000172e8*/ CMP         R3, #0 
    /*000172ec*/ BNE         VI_IsByPassVgs_x17284
    /*000172f0*/ BL          0x00000000000172F0          @ VI_DRV_IsSupportLowDelay [R_ARM_CALL: .text+0x2a748] 
    /*000172f4*/ MOV         R0, #1 
    /*000172f8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_IsByPassVgs_x172fc:
    /*000172fc*/ LDR         R0, [R7, #688]              @ 0x2b0 
    /*00017300*/ ADDS        R0, R0, #0 
    /*00017304*/ MOVNE       R0, #1 
    /*00017308*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_IsByPassVgs


FUNC_BEGIN VI_VgsByPassTaskFailHandle
    /*0001730c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00017310*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00017314*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00017318*/ MOV         R7, R0 
    /*0001731c*/ LDR         R4, [R3, R0, LSL #2] 
    /*00017320*/ MOV         R6, R1 
    /*00017324*/ MOV         R0, R2 
    /*00017328*/ MOV         R1, #0 
    /*0001732c*/ BL          0x000000000001732C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00017330*/ MOV         R1, #56                     @ 0x38 
    /*00017334*/ MLA         R1, R1, R6, R4 
    /*00017338*/ MOV         R4, #176                    @ 0xb0 
    /*0001733c*/ MUL         R4, R4, R7 
    /*00017340*/ MOVW        R2, #36660                  @ 0x8f34 
    /*00017344*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00017348*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001734c*/ LDR         R3, [R1, R2] 
    /*00017350*/ ADD         R0, R4, #28 
    /*00017354*/ ADD         R0, R5, R0 
    /*00017358*/ ADD         R3, R3, #1 
    /*0001735c*/ STR         R3, [R1, R2] 
    /*00017360*/ BL          0x0000000000017360          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*00017364*/ ADD         R0, R4, #32 
    /*00017368*/ ADD         R0, R5, R0 
    /*0001736c*/ BL          0x000000000001736C          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*00017370*/ ADD         R0, R4, #88                 @ 0x58 
    /*00017374*/ ADD         R0, R5, R0 
    /*00017378*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_VgsByPassTaskFailHandle_x1737c:
    /*0001737c*/ B           VI_VgsByPassTaskFailHandle_x1737c@ osal_wakeup [R_ARM_JUMP24: +0x0] 
FUNC_END VI_VgsByPassTaskFailHandle


FUNC_BEGIN VI_AddByPassTask2Vgs
    /*00017380*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00017384*/ SUB         SP, SP, #20 
    /*00017388*/ MOV         R8, R0 
    /*0001738c*/ MOV         R0, #45                     @ 0x2d 
    /*00017390*/ MOV         R9, R1 
    /*00017394*/ STR         R2, [SP, #8] 
    /*00017398*/ MOV         R6, R3 
    /*0001739c*/ BL          0x000000000001739C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000173a0*/ LDR         R2, [R0, #64]               @ 0x40 
    /*000173a4*/ MOV         FP, R0 
    /*000173a8*/ BLX         R2 
    /*000173ac*/ SUBS        R4, R0, #0 
    /*000173b0*/ BEQ         VI_AddByPassTask2Vgs_x1749c
    /*000173b4*/ MOV         R5, #176                    @ 0xb0 
    /*000173b8*/ MOVW        R2, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000173bc*/ MUL         R5, R5, R8 
    /*000173c0*/ MOVT        R2, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000173c4*/ STR         R2, [SP, #12] 
    /*000173c8*/ MOV         SL, #16 
    /*000173cc*/ MOV         R7, #0 
    /*000173d0*/ ADD         R0, R5, #28 
    /*000173d4*/ ADD         R0, R2, R0 
    /*000173d8*/ BL          0x00000000000173D8          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*000173dc*/ LDR         R2, [SP, #12] 
    /*000173e0*/ ADD         R0, R5, #32 
    /*000173e4*/ ADD         R0, R2, R0 
    /*000173e8*/ BL          0x00000000000173E8          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*000173ec*/ STR         R8, [R4, #728]              @ 0x2d8 
    /*000173f0*/ STR         R9, [R4, #732]              @ 0x2dc 
    /*000173f4*/ MOV         R2, #336                    @ 0x150 
    /*000173f8*/ STR         SL, [R4, #724]              @ 0x2d4 
    /*000173fc*/ MOV         R1, R6 
    /*00017400*/ LDR         LR, [R6, #688]              @ 0x2b0 
    /*00017404*/ MOV         R0, R4 
    /*00017408*/ STR         R7, [R4, #676]              @ 0x2a4 
    /*0001740c*/ MOVW        IP, #0                      @ VI_VgsByPassTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x16dbc] 
    /*00017410*/ MOVT        IP, #0                      @ VI_VgsByPassTaskCallBack [R_ARM_MOVT_ABS: .text+0x16dbc] 
    /*00017414*/ STR         LR, [R4, #672]              @ 0x2a0 
    /*00017418*/ LDR         LR, [R6, #692]              @ 0x2b4 
    /*0001741c*/ STR         IP, [R4, #720]              @ 0x2d0 
    /*00017420*/ STR         R7, [R4, #684]              @ 0x2ac 
    /*00017424*/ STR         LR, [R4, #680]              @ 0x2a8 
    /*00017428*/ BL          0x0000000000017428          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001742c*/ MOV         R1, R7 
    /*00017430*/ MOV         R0, R4 
    /*00017434*/ BL          0x0000000000017434          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00017438*/ MOV         R2, #336                    @ 0x150 
    /*0001743c*/ MOV         R1, R6 
    /*00017440*/ ADD         R0, R4, R2 
    /*00017444*/ BL          0x0000000000017444          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00017448*/ MOV         R1, R4 
    /*0001744c*/ LDR         R3, [FP, #24] 
    /*00017450*/ LDR         R0, [SP, #8] 
    /*00017454*/ BLX         R3 
    /*00017458*/ SUBS        R4, R0, #0 
    /*0001745c*/ BEQ         VI_AddByPassTask2Vgs_x17490
    /*00017460*/ MOV         R1, SL 
    /*00017464*/ MOV         R3, #239                    @ 0xef 
    /*00017468*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x64b0] 
    /*0001746c*/ STR         R3, [SP] 
    /*00017470*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x64b0] 
    /*00017474*/ LDR         R3, [PC, #72]               @ 0x00000000000174c4 
    /*00017478*/ MOV         R0, #3 
    /*0001747c*/ BL          0x000000000001747C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017480*/ MOV         R2, R6 
    /*00017484*/ MOV         R1, R9 
    /*00017488*/ MOV         R0, R8 
    /*0001748c*/ BL          0x000000000001748C          @ VI_VgsByPassTaskFailHandle [R_ARM_CALL: .text+0x1730c] 
    VI_AddByPassTask2Vgs_x17490:
    /*00017490*/ MOV         R0, R4 
    /*00017494*/ ADD         SP, SP, #20 
    /*00017498*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddByPassTask2Vgs_x1749c:
    /*0001749c*/ MOV         R3, #217                    @ 0xd9 
    /*000174a0*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6584] 
    /*000174a4*/ STR         R3, [SP] 
    /*000174a8*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6584] 
    /*000174ac*/ LDR         R3, [PC, #16]               @ 0x00000000000174c4 
    /*000174b0*/ MOV         R1, #16 
    /*000174b4*/ MOV         R0, #3 
    /*000174b8*/ MVN         R4, #0 
    /*000174bc*/ BL          0x00000000000174BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000174c0*/ B           VI_AddByPassTask2Vgs_x17490
    /*000174c4*/ ANDEQ       R0, R0, R0, ASR #26 
FUNC_END VI_AddByPassTask2Vgs


FUNC_BEGIN VI_SubmitByPassJob2Vgs
    /*000174c8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000174cc*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000174d0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000174d4*/ MOV         R5, R0 
    /*000174d8*/ SUB         SP, SP, #84                 @ 0x54 
    /*000174dc*/ MOV         R0, #45                     @ 0x2d 
    /*000174e0*/ MOV         R6, R1 
    /*000174e4*/ MOV         R8, R2 
    /*000174e8*/ LDR         R9, [R3, R5, LSL #2] 
    /*000174ec*/ BL          0x00000000000174EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000174f0*/ MOV         R3, #0 
    /*000174f4*/ STR         R6, [SP] 
    /*000174f8*/ STR         R3, [SP, #68]               @ 0x44 
    /*000174fc*/ MOV         R1, R3 
    /*00017500*/ STR         R3, [SP, #72]               @ 0x48 
    /*00017504*/ ADD         R2, SP, #16 
    /*00017508*/ MOV         R3, R5 
    /*0001750c*/ STR         R2, [SP, #4] 
    /*00017510*/ MOV         R2, #16 
    /*00017514*/ MOV         R7, R0 
    /*00017518*/ ADD         R0, SP, #12 
    /*0001751c*/ LDR         R4, [R7] 
    /*00017520*/ BLX         R4 
    /*00017524*/ SUBS        R4, R0, #0 
    /*00017528*/ BNE         VI_SubmitByPassJob2Vgs_x175ec
    /*0001752c*/ MOV         R3, R8 
    /*00017530*/ MOV         R1, R6 
    /*00017534*/ MOV         R0, R5 
    /*00017538*/ LDR         R2, [SP, #12] 
    /*0001753c*/ BL          0x000000000001753C          @ VI_AddByPassTask2Vgs [R_ARM_CALL: .text+0x17380] 
    /*00017540*/ SUBS        R4, R0, #0 
    /*00017544*/ BEQ         VI_SubmitByPassJob2Vgs_x175a8
    /*00017548*/ MOVW        R3, #275                    @ 0x113 
    /*0001754c*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x65f8] 
    /*00017550*/ STR         R3, [SP] 
    /*00017554*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x65f8] 
    /*00017558*/ STR         R4, [SP, #4] 
    /*0001755c*/ MOV         R1, #16 
    /*00017560*/ LDR         R3, [PC, #204]              @ 0x0000000000017634 
    /*00017564*/ MOV         R0, #3 
    /*00017568*/ BL          0x0000000000017568          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_SubmitByPassJob2Vgs_x1756c:
    /*0001756c*/ LDR         R3, [R7, #4] 
    /*00017570*/ LDR         R0, [SP, #12] 
    /*00017574*/ BLX         R3 
    /*00017578*/ MOV         R3, #292                    @ 0x124 
    /*0001757c*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6668] 
    /*00017580*/ STR         R3, [SP] 
    /*00017584*/ STR         R4, [SP, #4] 
    /*00017588*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6668] 
    /*0001758c*/ LDR         R3, [PC, #160]              @ 0x0000000000017634 
    /*00017590*/ MOV         R1, #16 
    /*00017594*/ MOV         R0, #6 
    /*00017598*/ BL          0x0000000000017598          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_SubmitByPassJob2Vgs_x1759c:
    /*0001759c*/ MOV         R0, R4 
    /*000175a0*/ ADD         SP, SP, #84                 @ 0x54 
    /*000175a4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SubmitByPassJob2Vgs_x175a8:
    /*000175a8*/ MOV         R2, R4 
    /*000175ac*/ LDR         R3, [R7, #12] 
    /*000175b0*/ MOV         R1, #1 
    /*000175b4*/ LDR         R0, [SP, #12] 
    /*000175b8*/ BLX         R3 
    /*000175bc*/ SUBS        R4, R0, #0 
    /*000175c0*/ BEQ         VI_SubmitByPassJob2Vgs_x1759c
    /*000175c4*/ MOVW        R3, #283                    @ 0x11b 
    /*000175c8*/ STR         R4, [SP, #4] 
    /*000175cc*/ STR         R3, [SP] 
    /*000175d0*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6634] 
    /*000175d4*/ LDR         R3, [PC, #88]               @ 0x0000000000017634 
    /*000175d8*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6634] 
    /*000175dc*/ MOV         R1, #16 
    /*000175e0*/ MOV         R0, #3 
    /*000175e4*/ BL          0x00000000000175E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000175e8*/ B           VI_SubmitByPassJob2Vgs_x1756c
    VI_SubmitByPassJob2Vgs_x175ec:
    /*000175ec*/ STR         R4, [SP, #4] 
    /*000175f0*/ MOVW        R3, #265                    @ 0x109 
    /*000175f4*/ MOV         R1, #16 
    /*000175f8*/ STR         R3, [SP] 
    /*000175fc*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x65b8] 
    /*00017600*/ LDR         R3, [PC, #44]               @ 0x0000000000017634 
    /*00017604*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x65b8] 
    /*00017608*/ MOV         R0, #3 
    /*0001760c*/ BL          0x000000000001760C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017610*/ MOV         R3, #56                     @ 0x38 
    /*00017614*/ MLA         R6, R3, R6, R9 
    /*00017618*/ MOVW        R2, #36660                  @ 0x8f34 
    /*0001761c*/ MOV         R0, R4 
    /*00017620*/ LDR         R3, [R6, R2] 
    /*00017624*/ ADD         R3, R3, #1 
    /*00017628*/ STR         R3, [R6, R2] 
    /*0001762c*/ ADD         SP, SP, #84                 @ 0x54 
    /*00017630*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    /*00017634*/ ANDEQ       R0, R0, R8, ASR SP 
FUNC_END VI_SubmitByPassJob2Vgs


FUNC_BEGIN VI_RegionLumaTaskFailHandle
    /*00017638*/ MOV         R3, #44                     @ 0x2c 
    /*0001763c*/ MOV         R2, #176                    @ 0xb0 
    /*00017640*/ MLA         R1, R3, R0, R1 
    /*00017644*/ MOVW        R3, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00017648*/ MOVT        R3, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001764c*/ MOV         IP, #0 
    /*00017650*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00017654*/ ADD         R1, R1, #38                 @ 0x26 
    /*00017658*/ MLA         R0, R2, R0, R3 
    /*0001765c*/ ADD         R2, R3, R1, LSL #2 
    /*00017660*/ MOV         LR, #1 
    /*00017664*/ STR         LR, [R3, R1, LSL #2] 
    /*00017668*/ STR         IP, [R2, #4] 
    /*0001766c*/ ADD         R0, R0, #80                 @ 0x50 
    /*00017670*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    VI_RegionLumaTaskFailHandle_x17674:
    /*00017674*/ B           VI_RegionLumaTaskFailHandle_x17674@ osal_wakeup [R_ARM_JUMP24: +0x0] 
FUNC_END VI_RegionLumaTaskFailHandle


FUNC_BEGIN VI_AddRegionLumaTask
    /*00017678*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001767c*/ SUB         SP, SP, #68                 @ 0x44 
    /*00017680*/ MOVW        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00017684*/ MOVT        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00017688*/ MOV         LR, R0 
    /*0001768c*/ STR         R0, [SP, #12] 
    /*00017690*/ MOV         R6, R3 
    /*00017694*/ MOV         R0, #45                     @ 0x2d 
    /*00017698*/ MOV         R4, R1 
    /*0001769c*/ STR         R2, [SP, #16] 
    /*000176a0*/ LDR         R5, [IP, LR, LSL #2] 
    /*000176a4*/ BL          0x00000000000176A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000176a8*/ LDR         R3, [R6, #692]              @ 0x2b4 
    /*000176ac*/ CMP         R3, #1 
    /*000176b0*/ BEQ         VI_AddRegionLumaTask_x176d4
    /*000176b4*/ ADD         R7, R5, #32768              @ 0x8000 
    /*000176b8*/ LDR         R2, [R7, #3304]             @ 0xce8 
    /*000176bc*/ CMP         R2, #0 
    /*000176c0*/ BEQ         VI_AddRegionLumaTask_x176d4
    /*000176c4*/ LDR         R3, [R7, #3308]             @ 0xcec 
    /*000176c8*/ CMP         R3, R4 
    /*000176cc*/ STR         R3, [SP, #20] 
    /*000176d0*/ BEQ         VI_AddRegionLumaTask_x176e4
    VI_AddRegionLumaTask_x176d4:
    /*000176d4*/ MOV         R9, #0 
    VI_AddRegionLumaTask_x176d8:
    /*000176d8*/ MOV         R0, R9 
    /*000176dc*/ ADD         SP, SP, #68                 @ 0x44 
    /*000176e0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddRegionLumaTask_x176e4:
    /*000176e4*/ MOV         R9, #0 
    /*000176e8*/ MOV         R2, #32 
    /*000176ec*/ MOV         R8, R0 
    /*000176f0*/ MOV         R1, R9 
    /*000176f4*/ STR         R9, [R7, #3304]             @ 0xce8 
    /*000176f8*/ ADD         R0, SP, #32 
    /*000176fc*/ BL          0x00000000000176FC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00017700*/ LDR         R2, [R7, #3296]             @ 0xce0 
    /*00017704*/ CMP         R2, R9 
    /*00017708*/ BEQ         VI_AddRegionLumaTask_x176d4
    /*0001770c*/ LDR         R3, [SP, #20] 
    /*00017710*/ MOV         R2, #36                     @ 0x24 
    /*00017714*/ ADD         R4, R5, #35328              @ 0x8a00 
    /*00017718*/ STR         R9, [SP, #28] 
    /*0001771c*/ ADD         R4, R4, #224                @ 0xe0 
    /*00017720*/ MOV         SL, #0 
    /*00017724*/ MLA         R3, R2, R3, R5 
    /*00017728*/ MOV         FP, #0 
    /*0001772c*/ MOV         R5, R9 
    /*00017730*/ STR         R3, [SP, #24] 
    /*00017734*/ B           VI_AddRegionLumaTask_x17770
    VI_AddRegionLumaTask_x17738:
    /*00017738*/ MOV         R1, R9 
    /*0001773c*/ ADD         R2, SP, #32 
    /*00017740*/ LDR         R9, [R8, #28] 
    /*00017744*/ ADD         R5, R5, #1 
    /*00017748*/ LDR         R0, [SP, #16] 
    /*0001774c*/ ADD         R4, R4, #16 
    /*00017750*/ BLX         R9 
    /*00017754*/ CMP         R0, #0 
    /*00017758*/ BNE         VI_AddRegionLumaTask_x1788c
    /*0001775c*/ LDR         R2, [R7, #3296]             @ 0xce0 
    /*00017760*/ ADDS        SL, SL, #16 
    /*00017764*/ ADC         FP, FP, #0 
    /*00017768*/ CMP         R2, R5 
    /*0001776c*/ BLS         VI_AddRegionLumaTask_x176d4
    VI_AddRegionLumaTask_x17770:
    /*00017770*/ LDR         R2, [R8, #64]               @ 0x40 
    /*00017774*/ BLX         R2 
    /*00017778*/ MOV         R1, R6 
    /*0001777c*/ MOV         R2, #336                    @ 0x150 
    /*00017780*/ SUBS        R9, R0, #0 
    /*00017784*/ BEQ         VI_AddRegionLumaTask_x17864
    /*00017788*/ BL          0x0000000000017788          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001778c*/ MOV         R2, #336                    @ 0x150 
    /*00017790*/ MOV         R1, R6 
    /*00017794*/ ADD         R0, R9, R2 
    /*00017798*/ BL          0x0000000000017798          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001779c*/ LDR         R3, [SP, #12] 
    /*000177a0*/ MOV         R1, #16 
    /*000177a4*/ MOV         R2, #0 
    /*000177a8*/ STR         R1, [R9, #724]              @ 0x2d4 
    /*000177ac*/ ADD         R1, R7, #3312               @ 0xcf0 
    /*000177b0*/ STR         R3, [R9, #728]              @ 0x2d8 
    /*000177b4*/ LDR         R3, [SP, #20] 
    /*000177b8*/ STR         R2, [R9, #720]              @ 0x2d0 
    /*000177bc*/ STR         R3, [R9, #732]              @ 0x2dc 
    /*000177c0*/ LDR         IP, [R4] 
    /*000177c4*/ LDRD        R0, [R1] 
    /*000177c8*/ LDR         R2, [R7, #3296]             @ 0xce0 
    /*000177cc*/ STR         IP, [SP, #32] 
    /*000177d0*/ ADDS        R0, R0, SL 
    /*000177d4*/ LDR         IP, [R4, #4] 
    /*000177d8*/ SUB         R2, R2, #1 
    /*000177dc*/ ADC         R1, R1, FP 
    /*000177e0*/ CMP         R2, R5 
    /*000177e4*/ LDR         R2, [R7, #3320]             @ 0xcf8 
    /*000177e8*/ STR         IP, [SP, #36]               @ 0x24 
    /*000177ec*/ LDR         IP, [R4, #8] 
    /*000177f0*/ ADD         R2, R2, SL 
    /*000177f4*/ STR         IP, [SP, #40]               @ 0x28 
    /*000177f8*/ LDR         IP, [R4, #12] 
    /*000177fc*/ STRD        R0, [SP, #56]               @ 0x38 
    /*00017800*/ STR         R2, [SP, #48]               @ 0x30 
    /*00017804*/ STR         IP, [SP, #44]               @ 0x2c 
    /*00017808*/ BNE         VI_AddRegionLumaTask_x17738
    /*0001780c*/ LDR         R3, [SP, #24] 
    /*00017810*/ MOVW        R1, #36100                  @ 0x8d04 
    /*00017814*/ MOVW        R2, #0                      @ VI_RegionLumaTaskCallBackMiddle [R_ARM_MOVW_ABS_NC: .text+0x16fb8] 
    /*00017818*/ MOVT        R2, #0                      @ VI_RegionLumaTaskCallBackMiddle [R_ARM_MOVT_ABS: .text+0x16fb8] 
    /*0001781c*/ LDR         R1, [R3, R1] 
    /*00017820*/ CMP         R1, #1 
    /*00017824*/ BEQ         VI_AddRegionLumaTask_x17844
    VI_AddRegionLumaTask_x17828:
    /*00017828*/ STR         R2, [R9, #720]              @ 0x2d0 
    VI_AddRegionLumaTask_x1782c:
    /*0001782c*/ MOV         R1, #0 
    /*00017830*/ MOV         R0, R9 
    /*00017834*/ BL          0x0000000000017834          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00017838*/ MOV         R3, #1 
    /*0001783c*/ STR         R3, [SP, #28] 
    /*00017840*/ B           VI_AddRegionLumaTask_x17738
    VI_AddRegionLumaTask_x17844:
    /*00017844*/ MOVW        R0, #36104                  @ 0x8d08 
    /*00017848*/ MOVW        R1, #0                      @ VI_RegionLumaTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x16ebc] 
    /*0001784c*/ LDR         R0, [R3, R0] 
    /*00017850*/ MOVT        R1, #0                      @ VI_RegionLumaTaskCallBack [R_ARM_MOVT_ABS: .text+0x16ebc] 
    /*00017854*/ CMP         R0, #0 
    /*00017858*/ STREQ       R1, [R9, #720]              @ 0x2d0 
    /*0001785c*/ BEQ         VI_AddRegionLumaTask_x1782c
    /*00017860*/ B           VI_AddRegionLumaTask_x17828
    VI_AddRegionLumaTask_x17864:
    /*00017864*/ MOVW        R3, #563                    @ 0x233 
    /*00017868*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6584] 
    /*0001786c*/ STR         R3, [SP] 
    /*00017870*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6584] 
    /*00017874*/ LDR         R3, [PC, #148]              @ 0x0000000000017910 
    /*00017878*/ MOV         R1, #16 
    /*0001787c*/ MOV         R0, #3 
    /*00017880*/ MVN         R9, #0 
    /*00017884*/ BL          0x0000000000017884          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017888*/ B           VI_AddRegionLumaTask_x176d8
    VI_AddRegionLumaTask_x1788c:
    /*0001788c*/ MOVW        R3, #607                    @ 0x25f 
    /*00017890*/ MOV         R9, R0 
    /*00017894*/ STR         R3, [SP] 
    /*00017898*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x64e4] 
    /*0001789c*/ LDR         R3, [PC, #108]              @ 0x0000000000017910 
    /*000178a0*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x64e4] 
    /*000178a4*/ MOV         R1, #16 
    /*000178a8*/ MOV         R0, #3 
    /*000178ac*/ BL          0x00000000000178AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000178b0*/ LDR         R3, [SP, #28] 
    /*000178b4*/ CMP         R3, #1 
    /*000178b8*/ BEQ         VI_AddRegionLumaTask_x17900
    VI_AddRegionLumaTask_x178bc:
    /*000178bc*/ LDR         R1, [SP, #12] 
    /*000178c0*/ MOV         R3, #44                     @ 0x2c 
    /*000178c4*/ LDR         R0, [SP, #20] 
    /*000178c8*/ MOVW        R2, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000178cc*/ MOVT        R2, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000178d0*/ MOV         IP, #1 
    /*000178d4*/ MLA         SL, R3, R1, R0 
    /*000178d8*/ MOV         R0, #176                    @ 0xb0 
    /*000178dc*/ MLA         R0, R0, R1, R2 
    /*000178e0*/ MOV         R1, #0 
    /*000178e4*/ ADD         SL, SL, #38                 @ 0x26 
    /*000178e8*/ ADD         R3, R2, SL, LSL #2 
    /*000178ec*/ STR         IP, [R2, SL, LSL #2] 
    /*000178f0*/ ADD         R0, R0, #80                 @ 0x50 
    /*000178f4*/ STR         R1, [R3, #4] 
    /*000178f8*/ BL          0x00000000000178F8          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000178fc*/ B           VI_AddRegionLumaTask_x176d8
    VI_AddRegionLumaTask_x17900:
    /*00017900*/ MOV         R0, R6 
    /*00017904*/ MOV         R1, #0 
    /*00017908*/ BL          0x0000000000017908          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001790c*/ B           VI_AddRegionLumaTask_x178bc
    /*00017910*/ ANDEQ       R0, R0, R0, ROR SP 
FUNC_END VI_AddRegionLumaTask


FUNC_BEGIN VI_AddCoverExTask
    /*00017914*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00017918*/ MOVW        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001791c*/ SUB         SP, SP, #84                 @ 0x54 
    /*00017920*/ MOVT        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00017924*/ MOV         SL, R0 
    /*00017928*/ MOV         R0, #45                     @ 0x2d 
    /*0001792c*/ MOV         R9, R3 
    /*00017930*/ MOV         R5, R1 
    /*00017934*/ STR         R1, [SP, #8] 
    /*00017938*/ MOVW        R7, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x7d90] 
    /*0001793c*/ STR         R2, [SP, #12] 
    /*00017940*/ MOVT        R7, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x7d90] 
    /*00017944*/ LDR         R4, [IP, SL, LSL #2] 
    /*00017948*/ BL          0x0000000000017948          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001794c*/ ADD         R2, R7, #504                @ 0x1f8 
    /*00017950*/ MOV         R1, R5 
    /*00017954*/ MOV         R8, R0 
    /*00017958*/ MOV         R0, SL 
    /*0001795c*/ BL          0x000000000001795C          @ VI_DRV_GetChnCoverExInfo [R_ARM_CALL: .text+0x2d04c] 
    /*00017960*/ LDR         R3, [R7, #508]              @ 0x1fc 
    /*00017964*/ CMP         R3, #0 
    /*00017968*/ BEQ         VI_AddCoverExTask_x17ab0
    /*0001796c*/ LDR         R1, [SP, #8] 
    /*00017970*/ MOV         R3, #36                     @ 0x24 
    /*00017974*/ MOV         R2, #0 
    /*00017978*/ ADD         R5, R7, #528                @ 0x210 
    /*0001797c*/ STR         R2, [SP, #20] 
    /*00017980*/ MOV         R6, R2 
    /*00017984*/ MLA         R3, R3, R1, R4 
    /*00017988*/ STR         R3, [SP, #16] 
    /*0001798c*/ B           VI_AddCoverExTask_x179c8
    VI_AddCoverExTask_x17990:
    /*00017990*/ MOV         R3, #0 
    /*00017994*/ STR         R3, [R4, #720]              @ 0x2d0 
    VI_AddCoverExTask_x17998:
    /*00017998*/ MOV         R1, R4 
    /*0001799c*/ LDR         R3, [R8, #16] 
    /*000179a0*/ ADD         R2, SP, #28 
    /*000179a4*/ LDR         R0, [SP, #12] 
    /*000179a8*/ BLX         R3 
    /*000179ac*/ CMP         R0, #0 
    /*000179b0*/ BNE         VI_AddCoverExTask_x17af0
    /*000179b4*/ LDR         R3, [R7, #508]              @ 0x1fc 
    /*000179b8*/ ADD         R6, R6, #1 
    /*000179bc*/ ADD         R5, R5, #52                 @ 0x34 
    /*000179c0*/ CMP         R3, R6 
    /*000179c4*/ BLS         VI_AddCoverExTask_x17ab0
    VI_AddCoverExTask_x179c8:
    /*000179c8*/ LDR         R3, [R8, #64]               @ 0x40 
    /*000179cc*/ BLX         R3 
    /*000179d0*/ SUBS        R4, R0, #0 
    /*000179d4*/ BEQ         VI_AddCoverExTask_x17ac0
    /*000179d8*/ LDR         R3, [SP, #8] 
    /*000179dc*/ MOV         FP, #16 
    /*000179e0*/ MOV         R1, #0 
    /*000179e4*/ MOV         R2, #336                    @ 0x150 
    /*000179e8*/ STR         R1, [R4, #720]              @ 0x2d0 
    /*000179ec*/ MOV         R1, R9 
    /*000179f0*/ STR         R3, [R4, #732]              @ 0x2dc 
    /*000179f4*/ STR         SL, [R4, #728]              @ 0x2d8 
    /*000179f8*/ STR         FP, [R4, #724]              @ 0x2d4 
    /*000179fc*/ BL          0x00000000000179FC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00017a00*/ MOV         R2, #336                    @ 0x150 
    /*00017a04*/ MOV         R1, R9 
    /*00017a08*/ ADD         R0, R4, R2 
    /*00017a0c*/ BL          0x0000000000017A0C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00017a10*/ STR         FP, [R4, #332]              @ 0x14c 
    /*00017a14*/ MOV         R2, #45                     @ 0x2d 
    /*00017a18*/ STR         R2, [R4, #668]              @ 0x29c 
    /*00017a1c*/ LDR         R2, [R5, #-8] 
    /*00017a20*/ MOV         R0, #1 
    /*00017a24*/ LDR         R1, [R5, #-4] 
    /*00017a28*/ CMP         R2, #0 
    /*00017a2c*/ STR         R0, [SP, #28] 
    /*00017a30*/ STR         R2, [SP, #32] 
    /*00017a34*/ ADD         R0, SP, #36                 @ 0x24 
    /*00017a38*/ STR         R1, [SP, #76]               @ 0x4c 
    /*00017a3c*/ MOVEQ       R2, FP 
    /*00017a40*/ MOVNE       R2, #40                     @ 0x28 
    /*00017a44*/ MOV         R1, R5 
    /*00017a48*/ BL          0x0000000000017A48          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00017a4c*/ LDR         R3, [R7, #508]              @ 0x1fc 
    /*00017a50*/ SUB         R3, R3, #1 
    /*00017a54*/ CMP         R3, R6 
    /*00017a58*/ BNE         VI_AddCoverExTask_x17990
    /*00017a5c*/ LDR         R3, [SP, #16] 
    /*00017a60*/ ADD         R3, R3, #36096              @ 0x8d00 
    /*00017a64*/ LDR         R3, [R3] 
    /*00017a68*/ CMP         R3, #1 
    /*00017a6c*/ BNE         VI_AddCoverExTask_x17990
    /*00017a70*/ LDR         R1, [SP, #16] 
    /*00017a74*/ MOVW        R2, #36100                  @ 0x8d04 
    /*00017a78*/ LDR         R2, [R1, R2] 
    /*00017a7c*/ CMP         R2, #0 
    /*00017a80*/ BNE         VI_AddCoverExTask_x17990
    /*00017a84*/ MOVW        R2, #36104                  @ 0x8d08 
    /*00017a88*/ LDR         R1, [R1, R2] 
    /*00017a8c*/ CMP         R1, #0 
    /*00017a90*/ BNE         VI_AddCoverExTask_x17990
    /*00017a94*/ MOV         R0, R4 
    /*00017a98*/ STR         R3, [SP, #20] 
    /*00017a9c*/ BL          0x0000000000017A9C          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00017aa0*/ MOVW        R3, #0                      @ VI_CoverExTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x16c44] 
    /*00017aa4*/ MOVT        R3, #0                      @ VI_CoverExTaskCallBack [R_ARM_MOVT_ABS: .text+0x16c44] 
    /*00017aa8*/ STR         R3, [R4, #720]              @ 0x2d0 
    /*00017aac*/ B           VI_AddCoverExTask_x17998
    VI_AddCoverExTask_x17ab0:
    /*00017ab0*/ MOV         R4, #0 
    VI_AddCoverExTask_x17ab4:
    /*00017ab4*/ MOV         R0, R4 
    /*00017ab8*/ ADD         SP, SP, #84                 @ 0x54 
    /*00017abc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddCoverExTask_x17ac0:
    /*00017ac0*/ MOVW        R3, #670                    @ 0x29e 
    /*00017ac4*/ MOV         R1, #16 
    /*00017ac8*/ STR         R3, [SP] 
    /*00017acc*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6584] 
    /*00017ad0*/ LDR         R3, [PC, #88]               @ 0x0000000000017b30 
    /*00017ad4*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6584] 
    /*00017ad8*/ MOV         R0, #3 
    /*00017adc*/ MVN         R4, #0 
    /*00017ae0*/ BL          0x0000000000017AE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017ae4*/ MOV         R0, R4 
    /*00017ae8*/ ADD         SP, SP, #84                 @ 0x54 
    /*00017aec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddCoverExTask_x17af0:
    /*00017af0*/ MOVW        R3, #718                    @ 0x2ce 
    /*00017af4*/ MOV         R4, R0 
    /*00017af8*/ STR         R3, [SP] 
    /*00017afc*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x66a8] 
    /*00017b00*/ LDR         R3, [PC, #40]               @ 0x0000000000017b30 
    /*00017b04*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x66a8] 
    /*00017b08*/ MOV         R1, #16 
    /*00017b0c*/ MOV         R0, #3 
    /*00017b10*/ BL          0x0000000000017B10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017b14*/ LDR         R3, [SP, #20] 
    /*00017b18*/ CMP         R3, #1 
    /*00017b1c*/ BNE         VI_AddCoverExTask_x17ab4
    /*00017b20*/ MOV         R0, R9 
    /*00017b24*/ MOV         R1, #0 
    /*00017b28*/ BL          0x0000000000017B28          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00017b2c*/ B           VI_AddCoverExTask_x17ab4
    /*00017b30*/ ANDEQ       R0, R0, R8, LSL #27 
FUNC_END VI_AddCoverExTask


FUNC_BEGIN VI_AddOsdTask
    /*00017b34*/ MOVW        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00017b38*/ MOVT        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00017b3c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00017b40*/ MOV         R4, R0 
    /*00017b44*/ SUB         SP, SP, #116                @ 0x74 
    /*00017b48*/ MOV         R9, R3 
    /*00017b4c*/ LDR         R3, [IP, R4, LSL #2] 
    /*00017b50*/ MOV         R5, R1 
    /*00017b54*/ STR         R0, [SP, #16] 
    /*00017b58*/ MOV         R0, #45                     @ 0x2d 
    /*00017b5c*/ STR         R1, [SP, #12] 
    /*00017b60*/ MOV         R8, #1040                   @ 0x410 
    /*00017b64*/ STR         R2, [SP, #20] 
    /*00017b68*/ STR         R3, [SP, #24] 
    /*00017b6c*/ BL          0x0000000000017B6C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00017b70*/ MOVW        R3, #9360                   @ 0x2490 
    /*00017b74*/ MOV         R1, R5 
    /*00017b78*/ MUL         R3, R3, R4 
    /*00017b7c*/ MOV         R2, R4 
    /*00017b80*/ MLA         R5, R8, R5, R3 
    /*00017b84*/ LDR         R4, [PC, #552]              @ 0x0000000000017db4 
    /*00017b88*/ MOVW        R8, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x7d90] 
    /*00017b8c*/ MOVT        R8, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x7d90] 
    /*00017b90*/ ADD         R4, R4, R5 
    /*00017b94*/ ADD         R8, R8, R5 
    /*00017b98*/ MOV         SL, R0 
    /*00017b9c*/ MOV         R0, R2 
    /*00017ba0*/ MOV         R2, R4 
    /*00017ba4*/ BL          0x0000000000017BA4          @ VI_DRV_GetChnOsdInfo [R_ARM_CALL: .text+0x2d208] 
    /*00017ba8*/ ADD         R0, SP, #32 
    /*00017bac*/ MOV         R2, #80                     @ 0x50 
    /*00017bb0*/ MOV         R1, #0 
    /*00017bb4*/ BL          0x0000000000017BB4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00017bb8*/ LDR         R3, [R8, #1356]             @ 0x54c 
    /*00017bbc*/ CMP         R3, #0 
    /*00017bc0*/ MOVNE       R3, #0 
    /*00017bc4*/ STRNE       R3, [SP, #28] 
    /*00017bc8*/ MOVNE       R7, R3 
    /*00017bcc*/ BNE         VI_AddOsdTask_x17c08
    /*00017bd0*/ B           VI_AddOsdTask_x17d18
    VI_AddOsdTask_x17bd4:
    /*00017bd4*/ STR         IP, [R5, #720]              @ 0x2d0 
    VI_AddOsdTask_x17bd8:
    /*00017bd8*/ MOV         R1, R5 
    /*00017bdc*/ LDR         R3, [SL, #20] 
    /*00017be0*/ ADD         R2, SP, #32 
    /*00017be4*/ LDR         R0, [SP, #20] 
    /*00017be8*/ BLX         R3 
    /*00017bec*/ ADD         R7, R7, #1 
    /*00017bf0*/ ADD         R4, R4, #64                 @ 0x40 
    /*00017bf4*/ CMP         R0, #0 
    /*00017bf8*/ BNE         VI_AddOsdTask_x17d58
    /*00017bfc*/ LDR         R3, [R8, #1356]             @ 0x54c 
    /*00017c00*/ CMP         R3, R7 
    /*00017c04*/ BLS         VI_AddOsdTask_x17d18
    VI_AddOsdTask_x17c08:
    /*00017c08*/ LDR         R3, [SL, #64]               @ 0x40 
    /*00017c0c*/ MOV         R6, #0 
    /*00017c10*/ BLX         R3 
    /*00017c14*/ MOV         FP, #16 
    /*00017c18*/ MOV         R1, R9 
    /*00017c1c*/ MOV         R2, #336                    @ 0x150 
    /*00017c20*/ SUBS        R5, R0, #0 
    /*00017c24*/ BEQ         VI_AddOsdTask_x17d28
    /*00017c28*/ LDR         R3, [SP, #16] 
    /*00017c2c*/ STR         FP, [R5, #724]              @ 0x2d4 
    /*00017c30*/ STR         R6, [R5, #720]              @ 0x2d0 
    /*00017c34*/ STR         R3, [R5, #728]              @ 0x2d8 
    /*00017c38*/ LDR         R3, [SP, #12] 
    /*00017c3c*/ STR         R3, [R5, #732]              @ 0x2dc 
    /*00017c40*/ BL          0x0000000000017C40          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00017c44*/ MOV         R2, #336                    @ 0x150 
    /*00017c48*/ MOV         R1, R9 
    /*00017c4c*/ ADD         R0, R5, R2 
    /*00017c50*/ BL          0x0000000000017C50          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00017c54*/ STR         FP, [R5, #332]              @ 0x14c 
    /*00017c58*/ MOV         R3, #45                     @ 0x2d 
    /*00017c5c*/ STR         R3, [R5, #668]              @ 0x29c 
    /*00017c60*/ LDR         R0, [R4, #16] 
    /*00017c64*/ MOV         R3, #1 
    /*00017c68*/ LDR         R1, [R4, #20] 
    /*00017c6c*/ MOV         IP, #0 
    /*00017c70*/ LDR         R2, [R8, #1356]             @ 0x54c 
    /*00017c74*/ STR         R0, [SP, #64]               @ 0x40 
    /*00017c78*/ LDR         R0, [R4, #72]               @ 0x48 
    /*00017c7c*/ SUB         R2, R2, #1 
    /*00017c80*/ LDR         LR, [R4, #28] 
    /*00017c84*/ CMP         R2, R7 
    /*00017c88*/ STR         R1, [SP, #68]               @ 0x44 
    /*00017c8c*/ LDR         R2, [R4, #24] 
    /*00017c90*/ LDR         R1, [R4, #40]               @ 0x28 
    /*00017c94*/ STR         R0, [SP, #48]               @ 0x30 
    /*00017c98*/ LDR         R0, [R4, #36]               @ 0x24 
    /*00017c9c*/ STR         R2, [SP, #72]               @ 0x48 
    /*00017ca0*/ STR         LR, [SP, #76]               @ 0x4c 
    /*00017ca4*/ LDR         R2, [R4, #44]               @ 0x2c 
    /*00017ca8*/ LDR         LR, [R4, #68]               @ 0x44 
    /*00017cac*/ STRB        R1, [SP, #60]               @ 0x3c 
    /*00017cb0*/ STRB        R0, [SP, #36]               @ 0x24 
    /*00017cb4*/ LDRD        R0, [R4, #48]               @ 0x30 
    /*00017cb8*/ STR         R6, [SP, #56]               @ 0x38 
    /*00017cbc*/ STR         R6, [SP, #80]               @ 0x50 
    /*00017cc0*/ STR         R6, [SP, #100]              @ 0x64 
    /*00017cc4*/ STRB        R2, [SP, #61]               @ 0x3d 
    /*00017cc8*/ STR         LR, [SP, #52]               @ 0x34 
    /*00017ccc*/ STRD        R0, [SP, #40]               @ 0x28 
    /*00017cd0*/ STR         R3, [SP, #32] 
    /*00017cd4*/ BNE         VI_AddOsdTask_x17bd4
    /*00017cd8*/ LDR         R1, [SP, #12] 
    /*00017cdc*/ MOV         R3, #36                     @ 0x24 
    /*00017ce0*/ LDR         R0, [SP, #24] 
    /*00017ce4*/ MOVW        R2, #36104                  @ 0x8d08 
    /*00017ce8*/ MLA         R3, R3, R1, R0 
    /*00017cec*/ LDR         R3, [R3, R2] 
    /*00017cf0*/ CMP         R3, #1 
    /*00017cf4*/ BNE         VI_AddOsdTask_x17bd4
    /*00017cf8*/ MOV         R1, R6 
    /*00017cfc*/ MOV         R0, R5 
    /*00017d00*/ STR         R3, [SP, #28] 
    /*00017d04*/ BL          0x0000000000017D04          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00017d08*/ MOVW        R3, #0                      @ VI_OsdTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x170ac] 
    /*00017d0c*/ MOVT        R3, #0                      @ VI_OsdTaskCallBack [R_ARM_MOVT_ABS: .text+0x170ac] 
    /*00017d10*/ STR         R3, [R5, #720]              @ 0x2d0 
    /*00017d14*/ B           VI_AddOsdTask_x17bd8
    VI_AddOsdTask_x17d18:
    /*00017d18*/ MOV         R5, #0 
    /*00017d1c*/ MOV         R0, R5 
    /*00017d20*/ ADD         SP, SP, #116                @ 0x74 
    /*00017d24*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddOsdTask_x17d28:
    /*00017d28*/ MOVW        R3, #769                    @ 0x301 
    /*00017d2c*/ MOV         R1, FP 
    /*00017d30*/ STR         R3, [SP] 
    /*00017d34*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6584] 
    /*00017d38*/ LDR         R3, [PC, #120]              @ 0x0000000000017db8 
    /*00017d3c*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6584] 
    /*00017d40*/ MOV         R0, #3 
    /*00017d44*/ MVN         R5, #0 
    /*00017d48*/ BL          0x0000000000017D48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017d4c*/ MOV         R0, R5 
    /*00017d50*/ ADD         SP, SP, #116                @ 0x74 
    /*00017d54*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddOsdTask_x17d58:
    /*00017d58*/ MOV         R3, #816                    @ 0x330 
    /*00017d5c*/ MOV         R5, R0 
    /*00017d60*/ STR         R3, [SP] 
    /*00017d64*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x66dc] 
    /*00017d68*/ LDR         R3, [PC, #72]               @ 0x0000000000017db8 
    /*00017d6c*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x66dc] 
    /*00017d70*/ MOV         R1, #16 
    /*00017d74*/ MOV         R0, #3 
    /*00017d78*/ BL          0x0000000000017D78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017d7c*/ LDR         R3, [SP, #28] 
    /*00017d80*/ CMP         R3, #1 
    /*00017d84*/ BEQ         VI_AddOsdTask_x17da4
    VI_AddOsdTask_x17d88:
    /*00017d88*/ LDR         R0, [SP, #16] 
    /*00017d8c*/ MOV         R2, #3 
    /*00017d90*/ LDR         R1, [SP, #12] 
    /*00017d94*/ BL          0x0000000000017D94          @ VI_DRV_PutRegion [R_ARM_CALL: .text+0x2ce10] 
    /*00017d98*/ MOV         R0, R5 
    /*00017d9c*/ ADD         SP, SP, #116                @ 0x74 
    /*00017da0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddOsdTask_x17da4:
    /*00017da4*/ MOV         R0, R9 
    /*00017da8*/ MOV         R1, #0 
    /*00017dac*/ BL          0x0000000000017DAC          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00017db0*/ B           VI_AddOsdTask_x17d88
    /*00017db4*/ LDRDEQ      R8, [R0], -R8               @ <UNPREDICTABLE> 
    /*00017db8*/ MULEQ       R0, IP, SP 
FUNC_END VI_AddOsdTask


FUNC_BEGIN VI_SubmitSomeJob2Vgs
    /*00017dbc*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00017dc0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00017dc4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00017dc8*/ MOV         R5, R0 
    /*00017dcc*/ SUB         SP, SP, #84                 @ 0x54 
    /*00017dd0*/ MOV         R0, #45                     @ 0x2d 
    /*00017dd4*/ MOV         R4, R1 
    /*00017dd8*/ MOV         R9, R2 
    /*00017ddc*/ LDR         R8, [R3, R5, LSL #2] 
    /*00017de0*/ BL          0x0000000000017DE0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00017de4*/ MOV         SL, #1 
    /*00017de8*/ STR         R4, [SP] 
    /*00017dec*/ STR         SL, [SP, #68]               @ 0x44 
    /*00017df0*/ ADD         R2, SP, #16 
    /*00017df4*/ MOVW        R3, #0                      @ VI_VgsJobCallBack [R_ARM_MOVW_ABS_NC: .text+0x17070] 
    /*00017df8*/ STR         R2, [SP, #4] 
    /*00017dfc*/ MOVT        R3, #0                      @ VI_VgsJobCallBack [R_ARM_MOVT_ABS: .text+0x17070] 
    /*00017e00*/ MOV         R2, #16 
    /*00017e04*/ STR         R3, [SP, #72]               @ 0x48 
    /*00017e08*/ MOV         R1, #0 
    /*00017e0c*/ MOV         R3, R5 
    /*00017e10*/ MOV         R7, R0 
    /*00017e14*/ ADD         R0, SP, #12 
    /*00017e18*/ LDR         R6, [R7] 
    /*00017e1c*/ BLX         R6 
    /*00017e20*/ SUBS        R6, R0, #0 
    /*00017e24*/ BEQ         VI_SubmitSomeJob2Vgs_x17e4c
    /*00017e28*/ MOV         R3, #56                     @ 0x38 
    /*00017e2c*/ MOVW        R2, #36660                  @ 0x8f34 
    /*00017e30*/ MLA         R4, R3, R4, R8 
    /*00017e34*/ LDR         R3, [R4, R2] 
    /*00017e38*/ ADD         R3, R3, SL 
    /*00017e3c*/ STR         R3, [R4, R2] 
    VI_SubmitSomeJob2Vgs_x17e40:
    /*00017e40*/ MOV         R0, R6 
    /*00017e44*/ ADD         SP, SP, #84                 @ 0x54 
    /*00017e48*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SubmitSomeJob2Vgs_x17e4c:
    /*00017e4c*/ MOV         R6, #176                    @ 0xb0 
    /*00017e50*/ MOVW        FP, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00017e54*/ MUL         R6, R6, R5 
    /*00017e58*/ MOVT        FP, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00017e5c*/ ADD         R0, R6, #28 
    /*00017e60*/ ADD         R0, FP, R0 
    /*00017e64*/ BL          0x0000000000017E64          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*00017e68*/ ADD         R0, R6, #32 
    /*00017e6c*/ ADD         R0, FP, R0 
    /*00017e70*/ BL          0x0000000000017E70          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*00017e74*/ MOV         R3, R9 
    /*00017e78*/ LDR         R2, [SP, #12] 
    /*00017e7c*/ MOV         R1, R4 
    /*00017e80*/ MOV         R0, R5 
    /*00017e84*/ BL          0x0000000000017E84          @ VI_AddCoverExTask [R_ARM_CALL: .text+0x17914] 
    /*00017e88*/ SUBS        R6, R0, #0 
    /*00017e8c*/ BNE         VI_SubmitSomeJob2Vgs_x17f20
    /*00017e90*/ MOV         R3, R9 
    /*00017e94*/ LDR         R2, [SP, #12] 
    /*00017e98*/ MOV         R1, R4 
    /*00017e9c*/ MOV         R0, R5 
    /*00017ea0*/ BL          0x0000000000017EA0          @ VI_AddRegionLumaTask [R_ARM_CALL: .text+0x17678] 
    /*00017ea4*/ SUBS        R6, R0, #0 
    /*00017ea8*/ BEQ         VI_SubmitSomeJob2Vgs_x17f48
    /*00017eac*/ MOVW        R3, #894                    @ 0x37e 
    /*00017eb0*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x674c] 
    /*00017eb4*/ STR         R3, [SP] 
    /*00017eb8*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x674c] 
    /*00017ebc*/ STR         R6, [SP, #4] 
    /*00017ec0*/ MOV         R1, #16 
    /*00017ec4*/ LDR         R3, [PC, #260]              @ 0x0000000000017fd0 
    /*00017ec8*/ MOV         R0, #3 
    /*00017ecc*/ BL          0x0000000000017ECC          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_SubmitSomeJob2Vgs_x17ed0:
    /*00017ed0*/ LDR         R3, [R7, #4] 
    /*00017ed4*/ MOVW        R5, #922                    @ 0x39a 
    /*00017ed8*/ LDR         R0, [SP, #12] 
    /*00017edc*/ BLX         R3 
    /*00017ee0*/ MOV         R3, #56                     @ 0x38 
    /*00017ee4*/ MLA         R4, R3, R4, R8 
    /*00017ee8*/ MOVW        LR, #36660                  @ 0x8f34 
    /*00017eec*/ LDR         R3, [PC, #220]              @ 0x0000000000017fd0 
    /*00017ef0*/ MOV         R1, #16 
    /*00017ef4*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6668] 
    /*00017ef8*/ MOV         R0, #6 
    /*00017efc*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6668] 
    /*00017f00*/ LDR         IP, [R4, LR] 
    /*00017f04*/ ADD         IP, IP, #1 
    /*00017f08*/ STR         IP, [R4, LR] 
    /*00017f0c*/ STM         SP, {R5, R6} 
    /*00017f10*/ BL          0x0000000000017F10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017f14*/ MOV         R0, R6 
    /*00017f18*/ ADD         SP, SP, #84                 @ 0x54 
    /*00017f1c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SubmitSomeJob2Vgs_x17f20:
    /*00017f20*/ MOVW        R3, #885                    @ 0x375 
    /*00017f24*/ STR         R6, [SP, #4] 
    /*00017f28*/ STR         R3, [SP] 
    /*00017f2c*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x670c] 
    /*00017f30*/ LDR         R3, [PC, #152]              @ 0x0000000000017fd0 
    /*00017f34*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x670c] 
    /*00017f38*/ MOV         R1, #16 
    /*00017f3c*/ MOV         R0, #3 
    /*00017f40*/ BL          0x0000000000017F40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017f44*/ B           VI_SubmitSomeJob2Vgs_x17ed0
    VI_SubmitSomeJob2Vgs_x17f48:
    /*00017f48*/ MOV         R3, R9 
    /*00017f4c*/ MOV         R0, R5 
    /*00017f50*/ LDR         R2, [SP, #12] 
    /*00017f54*/ MOV         R1, R4 
    /*00017f58*/ BL          0x0000000000017F58          @ VI_AddOsdTask [R_ARM_CALL: .text+0x17b34] 
    /*00017f5c*/ SUBS        R6, R0, #0 
    /*00017f60*/ BNE         VI_SubmitSomeJob2Vgs_x17fa8
    /*00017f64*/ MOV         R2, R6 
    /*00017f68*/ MOV         R1, SL 
    /*00017f6c*/ LDR         R3, [R7, #12] 
    /*00017f70*/ LDR         R0, [SP, #12] 
    /*00017f74*/ BLX         R3 
    /*00017f78*/ SUBS        R6, R0, #0 
    /*00017f7c*/ BEQ         VI_SubmitSomeJob2Vgs_x17e40
    /*00017f80*/ MOVW        R3, #911                    @ 0x38f 
    /*00017f84*/ STR         R6, [SP, #4] 
    /*00017f88*/ STR         R3, [SP] 
    /*00017f8c*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6634] 
    /*00017f90*/ LDR         R3, [PC, #56]               @ 0x0000000000017fd0 
    /*00017f94*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6634] 
    /*00017f98*/ MOV         R1, #16 
    /*00017f9c*/ MOV         R0, #3 
    /*00017fa0*/ BL          0x0000000000017FA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017fa4*/ B           VI_SubmitSomeJob2Vgs_x17ed0
    VI_SubmitSomeJob2Vgs_x17fa8:
    /*00017fa8*/ MOVW        R3, #903                    @ 0x387 
    /*00017fac*/ STR         R6, [SP, #4] 
    /*00017fb0*/ STR         R3, [SP] 
    /*00017fb4*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6790] 
    /*00017fb8*/ LDR         R3, [PC, #16]               @ 0x0000000000017fd0 
    /*00017fbc*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6790] 
    /*00017fc0*/ MOV         R1, #16 
    /*00017fc4*/ MOV         R0, #3 
    /*00017fc8*/ BL          0x0000000000017FC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017fcc*/ B           VI_SubmitSomeJob2Vgs_x17ed0
    /*00017fd0*/ ANDEQ       R0, R0, IP, LSR #27 
FUNC_END VI_SubmitSomeJob2Vgs


FUNC_BEGIN VI_SubmitFrame2Vgs
    /*00017fd4*/ PUSH        {R4, R5, R6, LR} 
    /*00017fd8*/ MOV         R4, R0 
    /*00017fdc*/ MOV         R5, R1 
    /*00017fe0*/ MOV         R6, R2 
    /*00017fe4*/ BL          0x0000000000017FE4          @ VI_IsByPassVgs [R_ARM_CALL: .text+0x1717c] 
    /*00017fe8*/ MOV         R2, R6 
    /*00017fec*/ MOV         R1, R5 
    /*00017ff0*/ CMP         R0, #1 
    /*00017ff4*/ MOV         R0, R4 
    /*00017ff8*/ BEQ         VI_SubmitFrame2Vgs_x18004
    /*00017ffc*/ POP         {R4, R5, R6, LR} 
    VI_SubmitFrame2Vgs_x18000:
    /*00018000*/ B           VI_SubmitFrame2Vgs_x18000   @ VI_SubmitSomeJob2Vgs [R_ARM_JUMP24: .text+0x17dbc] 
    VI_SubmitFrame2Vgs_x18004:
    /*00018004*/ POP         {R4, R5, R6, LR} 
    VI_SubmitFrame2Vgs_x18008:
    /*00018008*/ B           VI_SubmitFrame2Vgs_x18008   @ VI_SubmitByPassJob2Vgs [R_ARM_JUMP24: .text+0x174c8] 
FUNC_END VI_SubmitFrame2Vgs


FUNC_BEGIN VI_AddOnlineTask
    /*0001800c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00018010*/ MOVW        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00018014*/ SUB         SP, SP, #132                @ 0x84 
    /*00018018*/ MOVT        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001801c*/ MOV         R5, R0 
    /*00018020*/ MOV         R0, #45                     @ 0x2d 
    /*00018024*/ MOV         R6, R3 
    /*00018028*/ MOV         R4, R1 
    /*0001802c*/ STR         R2, [SP, #12] 
    /*00018030*/ LDR         R9, [IP, R5, LSL #2] 
    /*00018034*/ BL          0x0000000000018034          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018038*/ LDR         IP, [R6] 
    /*0001803c*/ MOV         R1, R4 
    /*00018040*/ LDR         R3, [R6, #4] 
    /*00018044*/ ADD         R2, SP, #16 
    /*00018048*/ STR         IP, [SP, #16] 
    /*0001804c*/ STR         R3, [SP, #20] 
    /*00018050*/ MOV         R8, R0 
    /*00018054*/ MOV         R0, R5 
    /*00018058*/ BL          0x0000000000018058          @ VI_DRV_ChnCalcCrop [R_ARM_CALL: .text+0x2b668] 
    /*0001805c*/ MOV         R2, R6 
    /*00018060*/ MOV         R1, R4 
    /*00018064*/ MOV         R0, R5 
    /*00018068*/ BL          0x0000000000018068          @ VI_DRV_ExtChnCheckCapacity [R_ARM_CALL: .text+0x2bc84] 
    /*0001806c*/ SUBS        R7, R0, #0 
    /*00018070*/ BNE         VI_AddOnlineTask_x1823c
    /*00018074*/ LDR         R3, [R8, #64]               @ 0x40 
    /*00018078*/ BLX         R3 
    /*0001807c*/ SUBS        SL, R0, #0 
    /*00018080*/ BEQ         VI_AddOnlineTask_x182a4
    /*00018084*/ MOV         R2, #336                    @ 0x150 
    /*00018088*/ MOV         R1, R6 
    /*0001808c*/ BL          0x000000000001808C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018090*/ MOV         R1, R7 
    /*00018094*/ MOV         R0, SL 
    /*00018098*/ MOVW        FP, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x11d68] 
    /*0001809c*/ BL          0x000000000001809C          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*000180a0*/ MOVT        FP, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x11d68] 
    /*000180a4*/ ADD         R2, SP, #24 
    /*000180a8*/ MOV         R1, R4 
    /*000180ac*/ MOV         R0, R5 
    /*000180b0*/ BL          0x00000000000180B0          @ VI_DRV_GetChnCropCalcResault [R_ARM_CALL: .text+0x2b6ac] 
    /*000180b4*/ MOV         R1, R7 
    /*000180b8*/ MOV         R2, #320                    @ 0x140 
    /*000180bc*/ SUB         R0, FP, #2128               @ 0x850 
    /*000180c0*/ BL          0x00000000000180C0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000180c4*/ MOV         R2, #36                     @ 0x24 
    /*000180c8*/ MLA         R2, R2, R4, R9 
    /*000180cc*/ MOVW        R1, #36128                  @ 0x8d20 
    /*000180d0*/ MOV         R0, #16 
    /*000180d4*/ STR         R7, [SL, #740]              @ 0x2e4 
    /*000180d8*/ STR         R0, [SL, #724]              @ 0x2d4 
    /*000180dc*/ MOV         LR, #1 
    /*000180e0*/ STR         R5, [SL, #728]              @ 0x2d8 
    /*000180e4*/ STR         R4, [SL, #732]              @ 0x2dc 
    /*000180e8*/ LDR         R1, [R2, R1] 
    /*000180ec*/ LDR         R7, [SP, #24] 
    /*000180f0*/ LDR         IP, [SP, #28] 
    /*000180f4*/ CMP         R1, LR 
    /*000180f8*/ LDR         R0, [SP, #32] 
    /*000180fc*/ LDR         R1, [SP, #36]               @ 0x24 
    /*00018100*/ STR         LR, [FP, #-2128]            @ 0xfffff7b0 
    /*00018104*/ STR         R7, [FP, #-2124]            @ 0xfffff7b4 
    /*00018108*/ STR         IP, [FP, #-2120]            @ 0xfffff7b8 
    /*0001810c*/ STR         R0, [FP, #-2116]            @ 0xfffff7bc 
    /*00018110*/ STR         R1, [FP, #-2112]            @ 0xfffff7c0 
    /*00018114*/ BEQ         VI_AddOnlineTask_x1820c
    VI_AddOnlineTask_x18118:
    /*00018118*/ MOVW        R2, #0                      @ VI_ExtChnOnlineTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x16d98] 
    /*0001811c*/ MOVT        R2, #0                      @ VI_ExtChnOnlineTaskCallBack [R_ARM_MOVT_ABS: .text+0x16d98] 
    /*00018120*/ STR         R2, [SL, #720]              @ 0x2d0 
    VI_AddOnlineTask_x18124:
    /*00018124*/ ADD         R7, SL, #336                @ 0x150 
    /*00018128*/ MOV         R2, #336                    @ 0x150 
    /*0001812c*/ MOV         R1, SL 
    /*00018130*/ MOV         FP, #0 
    /*00018134*/ MOV         R0, R7 
    /*00018138*/ BL          0x0000000000018138          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001813c*/ MOV         R1, R4 
    /*00018140*/ ADD         R2, SP, #88                 @ 0x58 
    /*00018144*/ MOV         R0, R5 
    /*00018148*/ BL          0x0000000000018148          @ VI_DRV_GetWorkingExtChnAttr [R_ARM_CALL: .text+0x29cb4] 
    /*0001814c*/ ADD         R2, R4, #9728               @ 0x2600 
    /*00018150*/ ADD         R2, R2, #54                 @ 0x36 
    /*00018154*/ LDR         LR, [SP, #96]               @ 0x60 
    /*00018158*/ LDR         IP, [SP, #100]              @ 0x64 
    /*0001815c*/ MOV         R1, R7 
    /*00018160*/ LDR         R2, [R9, R2, LSL #2] 
    /*00018164*/ ADD         R0, SP, #48                 @ 0x30 
    /*00018168*/ LDR         R9, [R6, #16] 
    /*0001816c*/ STR         R5, [SP, #48]               @ 0x30 
    /*00018170*/ STR         R4, [SP, #52]               @ 0x34 
    /*00018174*/ STR         R2, [SP, #84]               @ 0x54 
    /*00018178*/ LDR         R4, [SP, #108]              @ 0x6c 
    /*0001817c*/ LDR         R5, [SP, #104]              @ 0x68 
    /*00018180*/ LDR         R2, [SP, #112]              @ 0x70 
    /*00018184*/ STR         R4, [SP, #76]               @ 0x4c 
    /*00018188*/ STR         LR, [SP, #56]               @ 0x38 
    /*0001818c*/ STR         IP, [SP, #60]               @ 0x3c 
    /*00018190*/ STR         R9, [SP, #72]               @ 0x48 
    /*00018194*/ STR         R5, [SP, #64]               @ 0x40 
    /*00018198*/ STR         R2, [SP, #68]               @ 0x44 
    /*0001819c*/ STR         FP, [SP, #80]               @ 0x50 
    /*000181a0*/ BL          0x00000000000181A0          @ VI_DRV_GetFrmVbBlk [R_ARM_CALL: .text+0x2c8f4] 
    /*000181a4*/ SUBS        R4, R0, #0 
    /*000181a8*/ BNE         VI_AddOnlineTask_x18244
    /*000181ac*/ LDRD        R2, [SL, #240]              @ 0xf0 
    /*000181b0*/ ADD         R1, SL, #576                @ 0x240 
    /*000181b4*/ MOV         IP, #45                     @ 0x2d 
    /*000181b8*/ MOV         R0, #1 
    /*000181bc*/ STRD        R2, [R1] 
    /*000181c0*/ STR         IP, [SL, #668]              @ 0x29c 
    /*000181c4*/ BL          0x00000000000181C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000181c8*/ MOV         R1, R6 
    /*000181cc*/ LDR         R2, [R0, #108]              @ 0x6c 
    /*000181d0*/ MOV         R0, R7 
    /*000181d4*/ BLX         R2 
    /*000181d8*/ MOV         R1, R7 
    /*000181dc*/ MOV         R2, #336                    @ 0x150 
    /*000181e0*/ LDR         R0, [SP, #168]              @ 0xa8 
    /*000181e4*/ BL          0x00000000000181E4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000181e8*/ LDR         R5, [R8, #32] 
    /*000181ec*/ MOV         R1, SL 
    /*000181f0*/ LDR         R0, [SP, #12] 
    /*000181f4*/ LDR         R2, [PC, #208]              @ 0x00000000000182cc 
    /*000181f8*/ BLX         R5 
    /*000181fc*/ CMP         R0, #0 
    /*00018200*/ BNE         VI_AddOnlineTask_x18264
    VI_AddOnlineTask_x18204:
    /*00018204*/ ADD         SP, SP, #132                @ 0x84 
    /*00018208*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddOnlineTask_x1820c:
    /*0001820c*/ ADD         R1, R2, #36096              @ 0x8d00 
    /*00018210*/ LDR         R1, [R1] 
    /*00018214*/ CMP         R1, #0 
    /*00018218*/ BNE         VI_AddOnlineTask_x18118
    /*0001821c*/ MOVW        R1, #36104                  @ 0x8d08 
    /*00018220*/ LDR         R2, [R2, R1] 
    /*00018224*/ CMP         R2, #0 
    /*00018228*/ BNE         VI_AddOnlineTask_x18118
    /*0001822c*/ MOVW        R2, #0                      @ VI_ExtChnTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x16ce4] 
    /*00018230*/ MOVT        R2, #0                      @ VI_ExtChnTaskCallBack [R_ARM_MOVT_ABS: .text+0x16ce4] 
    /*00018234*/ STR         R2, [SL, #720]              @ 0x2d0 
    /*00018238*/ B           VI_AddOnlineTask_x18124
    VI_AddOnlineTask_x1823c:
    /*0001823c*/ MVN         R0, #0 
    /*00018240*/ B           VI_AddOnlineTask_x18204
    VI_AddOnlineTask_x18244:
    /*00018244*/ MOV         R1, FP 
    /*00018248*/ MOV         R0, SL 
    /*0001824c*/ BL          0x000000000001824C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00018250*/ MOV         R0, SL 
    /*00018254*/ LDR         R2, [R8, #68]               @ 0x44 
    /*00018258*/ BLX         R2 
    /*0001825c*/ MVN         R0, #0 
    /*00018260*/ B           VI_AddOnlineTask_x18204
    VI_AddOnlineTask_x18264:
    /*00018264*/ MOVW        R3, #1071                   @ 0x42f 
    /*00018268*/ MOV         R1, #16 
    /*0001826c*/ STR         R3, [SP] 
    /*00018270*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x67cc] 
    /*00018274*/ LDR         R3, [PC, #84]               @ 0x00000000000182d0 
    /*00018278*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x67cc] 
    /*0001827c*/ MOV         R0, #3 
    /*00018280*/ BL          0x0000000000018280          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018284*/ MOV         R1, R4 
    /*00018288*/ MOV         R0, R6 
    /*0001828c*/ BL          0x000000000001828C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00018290*/ MOV         R1, R4 
    /*00018294*/ LDR         R0, [SP, #168]              @ 0xa8 
    /*00018298*/ BL          0x0000000000018298          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001829c*/ MVN         R0, #0 
    /*000182a0*/ B           VI_AddOnlineTask_x18204
    VI_AddOnlineTask_x182a4:
    /*000182a4*/ MOV         R3, #1004                   @ 0x3ec 
    /*000182a8*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6584] 
    /*000182ac*/ STR         R3, [SP] 
    /*000182b0*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6584] 
    /*000182b4*/ LDR         R3, [PC, #20]               @ 0x00000000000182d0 
    /*000182b8*/ MOV         R1, #16 
    /*000182bc*/ MOV         R0, #3 
    /*000182c0*/ BL          0x00000000000182C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000182c4*/ MVN         R0, #0 
    /*000182c8*/ B           VI_AddOnlineTask_x18204
    /*000182cc*/ ANDEQ       R1, R1, R8, LSL R5 
    /*000182d0*/ ANDEQ       R0, R0, R4, ASR #27 
FUNC_END VI_AddOnlineTask


FUNC_BEGIN VI_SubmitExtChnPic2Vgs
    /*000182d4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000182d8*/ MOV         R4, R0 
    /*000182dc*/ SUB         SP, SP, #80                 @ 0x50 
    /*000182e0*/ MOV         R0, #45                     @ 0x2d 
    /*000182e4*/ MOV         R5, R1 
    /*000182e8*/ MOV         R7, R2 
    /*000182ec*/ BL          0x00000000000182EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000182f0*/ MOV         R8, R0 
    /*000182f4*/ BL          0x00000000000182F4          @ VI_IsVgsExist [R_ARM_CALL: .text+0x170e8] 
    /*000182f8*/ CMP         R0, #0 
    /*000182fc*/ BEQ         VI_SubmitExtChnPic2Vgs_x184ec
    /*00018300*/ MOV         R1, R5 
    /*00018304*/ MOV         R0, R4 
    /*00018308*/ BL          0x0000000000018308          @ VI_DRV_PrepareChnCoverExInfo [R_ARM_CALL: .text+0x2d014] 
    /*0001830c*/ MOV         R1, R5 
    /*00018310*/ MOV         R0, R4 
    /*00018314*/ BL          0x0000000000018314          @ VI_DRV_PrepareChnOsdInfo [R_ARM_CALL: .text+0x2d1d0] 
    /*00018318*/ MOV         R2, R7 
    /*0001831c*/ MOV         R1, R5 
    /*00018320*/ MOV         R0, R4 
    /*00018324*/ BL          0x0000000000018324          @ VI_IsByPassVgs [R_ARM_CALL: .text+0x1717c] 
    /*00018328*/ CMP         R0, #1 
    /*0001832c*/ BEQ         VI_SubmitExtChnPic2Vgs_x184bc
    /*00018330*/ STR         R5, [SP] 
    /*00018334*/ ADD         R2, SP, #16 
    /*00018338*/ MOVW        R3, #0                      @ VI_VgsJobCallBack [R_ARM_MOVW_ABS_NC: .text+0x17070] 
    /*0001833c*/ STR         R2, [SP, #4] 
    /*00018340*/ MOVT        R3, #0                      @ VI_VgsJobCallBack [R_ARM_MOVT_ABS: .text+0x17070] 
    /*00018344*/ MOV         R9, #1 
    /*00018348*/ STR         R3, [SP, #72]               @ 0x48 
    /*0001834c*/ MOV         R2, #16 
    /*00018350*/ STR         R9, [SP, #68]               @ 0x44 
    /*00018354*/ MOV         R3, R4 
    /*00018358*/ LDR         R6, [R8] 
    /*0001835c*/ MOV         R1, #0 
    /*00018360*/ ADD         R0, SP, #12 
    /*00018364*/ BLX         R6 
    /*00018368*/ CMP         R0, #0 
    /*0001836c*/ BNE         VI_SubmitExtChnPic2Vgs_x18538
    /*00018370*/ MOV         R6, #176                    @ 0xb0 
    /*00018374*/ MOVW        SL, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00018378*/ MUL         R6, R6, R4 
    /*0001837c*/ MOVT        SL, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00018380*/ ADD         R0, R6, #28 
    /*00018384*/ ADD         R0, SL, R0 
    /*00018388*/ BL          0x0000000000018388          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0001838c*/ ADD         R0, R6, #32 
    /*00018390*/ ADD         R0, SL, R0 
    /*00018394*/ MOVW        R6, #6264                   @ 0x1878 
    /*00018398*/ BL          0x0000000000018398          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0001839c*/ MUL         R0, R6, R4 
    /*000183a0*/ MOV         R6, #696                    @ 0x2b8 
    /*000183a4*/ MLA         R6, R6, R5, R0 
    /*000183a8*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1da8] 
    /*000183ac*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1da8] 
    /*000183b0*/ MOV         R3, R7 
    /*000183b4*/ LDR         R2, [SP, #12] 
    /*000183b8*/ MOV         R1, R5 
    /*000183bc*/ ADD         R6, R0, R6 
    /*000183c0*/ MOV         R0, R4 
    /*000183c4*/ STR         R6, [SP] 
    /*000183c8*/ BL          0x00000000000183C8          @ VI_AddOnlineTask [R_ARM_CALL: .text+0x1800c] 
    /*000183cc*/ SUBS        R7, R0, #0 
    /*000183d0*/ BEQ         VI_SubmitExtChnPic2Vgs_x18434
    /*000183d4*/ MOVW        R3, #1130                   @ 0x46a 
    /*000183d8*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6860] 
    /*000183dc*/ STR         R3, [SP] 
    /*000183e0*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6860] 
    /*000183e4*/ STR         R7, [SP, #4] 
    /*000183e8*/ MOV         R1, #16 
    /*000183ec*/ LDR         R3, [PC, #364]              @ 0x0000000000018560 
    /*000183f0*/ MOV         R0, #3 
    /*000183f4*/ BL          0x00000000000183F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_SubmitExtChnPic2Vgs_x183f8:
    /*000183f8*/ LDR         R3, [R8, #4] 
    /*000183fc*/ LDR         R0, [SP, #12] 
    /*00018400*/ BLX         R3 
    /*00018404*/ MOVW        R3, #1166                   @ 0x48e 
    /*00018408*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6668] 
    /*0001840c*/ STR         R3, [SP] 
    /*00018410*/ STR         R7, [SP, #4] 
    /*00018414*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6668] 
    /*00018418*/ LDR         R3, [PC, #320]              @ 0x0000000000018560 
    /*0001841c*/ MOV         R1, #16 
    /*00018420*/ MOV         R0, #6 
    /*00018424*/ BL          0x0000000000018424          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_SubmitExtChnPic2Vgs_x18428:
    /*00018428*/ MOV         R0, R7 
    /*0001842c*/ ADD         SP, SP, #80                 @ 0x50 
    /*00018430*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SubmitExtChnPic2Vgs_x18434:
    /*00018434*/ MOV         R3, R6 
    /*00018438*/ LDR         R2, [SP, #12] 
    /*0001843c*/ MOV         R1, R5 
    /*00018440*/ MOV         R0, R4 
    /*00018444*/ BL          0x0000000000018444          @ VI_AddCoverExTask [R_ARM_CALL: .text+0x17914] 
    /*00018448*/ SUBS        R7, R0, #0 
    /*0001844c*/ BNE         VI_SubmitExtChnPic2Vgs_x18494
    /*00018450*/ MOV         R3, R6 
    /*00018454*/ MOV         R1, R5 
    /*00018458*/ MOV         R0, R4 
    /*0001845c*/ LDR         R2, [SP, #12] 
    /*00018460*/ BL          0x0000000000018460          @ VI_AddOsdTask [R_ARM_CALL: .text+0x17b34] 
    /*00018464*/ SUBS        R7, R0, #0 
    /*00018468*/ BEQ         VI_SubmitExtChnPic2Vgs_x184f4
    /*0001846c*/ MOVW        R3, #1148                   @ 0x47c 
    /*00018470*/ STR         R7, [SP, #4] 
    /*00018474*/ STR         R3, [SP] 
    /*00018478*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x689c] 
    /*0001847c*/ LDR         R3, [PC, #220]              @ 0x0000000000018560 
    /*00018480*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x689c] 
    /*00018484*/ MOV         R1, #16 
    /*00018488*/ MOV         R0, #3 
    /*0001848c*/ BL          0x000000000001848C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018490*/ B           VI_SubmitExtChnPic2Vgs_x183f8
    VI_SubmitExtChnPic2Vgs_x18494:
    /*00018494*/ MOVW        R3, #1139                   @ 0x473 
    /*00018498*/ STR         R7, [SP, #4] 
    /*0001849c*/ STR         R3, [SP] 
    /*000184a0*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x670c] 
    /*000184a4*/ LDR         R3, [PC, #180]              @ 0x0000000000018560 
    /*000184a8*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x670c] 
    /*000184ac*/ MOV         R1, #16 
    /*000184b0*/ MOV         R0, #3 
    /*000184b4*/ BL          0x00000000000184B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000184b8*/ B           VI_SubmitExtChnPic2Vgs_x183f8
    VI_SubmitExtChnPic2Vgs_x184bc:
    /*000184bc*/ MOV         R3, #1104                   @ 0x450 
    /*000184c0*/ MOV         R1, #16 
    /*000184c4*/ STR         R3, [SP] 
    /*000184c8*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6804] 
    /*000184cc*/ LDR         R3, [PC, #140]              @ 0x0000000000018560 
    /*000184d0*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6804] 
    /*000184d4*/ MOV         R0, #3 
    /*000184d8*/ MOV         R7, #0 
    /*000184dc*/ BL          0x00000000000184DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000184e0*/ MOV         R0, R7 
    /*000184e4*/ ADD         SP, SP, #80                 @ 0x50 
    /*000184e8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SubmitExtChnPic2Vgs_x184ec:
    /*000184ec*/ MVN         R7, #0 
    /*000184f0*/ B           VI_SubmitExtChnPic2Vgs_x18428
    VI_SubmitExtChnPic2Vgs_x184f4:
    /*000184f4*/ MOV         R2, R7 
    /*000184f8*/ MOV         R1, R9 
    /*000184fc*/ LDR         R3, [R8, #12] 
    /*00018500*/ LDR         R0, [SP, #12] 
    /*00018504*/ BLX         R3 
    /*00018508*/ SUBS        R7, R0, #0 
    /*0001850c*/ BEQ         VI_SubmitExtChnPic2Vgs_x18428
    /*00018510*/ MOVW        R3, #1156                   @ 0x484 
    /*00018514*/ STR         R7, [SP, #4] 
    /*00018518*/ STR         R3, [SP] 
    /*0001851c*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68d8] 
    /*00018520*/ LDR         R3, [PC, #56]               @ 0x0000000000018560 
    /*00018524*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68d8] 
    /*00018528*/ MOV         R1, #16 
    /*0001852c*/ MOV         R0, #3 
    /*00018530*/ BL          0x0000000000018530          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018534*/ B           VI_SubmitExtChnPic2Vgs_x183f8
    VI_SubmitExtChnPic2Vgs_x18538:
    /*00018538*/ MOVW        R3, #1116                   @ 0x45c 
    /*0001853c*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6830] 
    /*00018540*/ STR         R3, [SP] 
    /*00018544*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6830] 
    /*00018548*/ LDR         R3, [PC, #16]               @ 0x0000000000018560 
    /*0001854c*/ MOV         R1, #16 
    /*00018550*/ MOV         R0, #3 
    /*00018554*/ MVN         R7, #0 
    /*00018558*/ BL          0x0000000000018558          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001855c*/ B           VI_SubmitExtChnPic2Vgs_x18428
    /*00018560*/ LDRDEQ      R0, [R0], -R8 
FUNC_END VI_SubmitExtChnPic2Vgs


FUNC_BEGIN VI_SNAP_SetIspSnapAttr
    /*00018564*/ PUSH        {R4, R5, R6, LR} 
    /*00018568*/ MOV         R4, R0 
    /*0001856c*/ MOV         R0, #28 
    /*00018570*/ MOV         R5, R1 
    /*00018574*/ BL          0x0000000000018574          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018578*/ CMP         R0, #0 
    /*0001857c*/ BEQ         VI_SNAP_SetIspSnapAttr_x185b0
    /*00018580*/ MOV         R0, #28 
    /*00018584*/ BL          0x0000000000018584          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018588*/ LDR         R3, [R0, #76]               @ 0x4c 
    /*0001858c*/ CMP         R3, #0 
    /*00018590*/ BEQ         VI_SNAP_SetIspSnapAttr_x185b0
    /*00018594*/ MOV         R0, #28 
    /*00018598*/ BL          0x0000000000018598          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001859c*/ MOV         R1, R5 
    /*000185a0*/ LDR         R3, [R0, #76]               @ 0x4c 
    /*000185a4*/ MOV         R0, R4 
    /*000185a8*/ POP         {R4, R5, R6, LR} 
    /*000185ac*/ BX          R3 
    VI_SNAP_SetIspSnapAttr_x185b0:
    /*000185b0*/ MVN         R0, #0 
    /*000185b4*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_SNAP_SetIspSnapAttr


FUNC_BEGIN VI_SNAP_DisableIspPipe
    /*000185b8*/ PUSH        {R4, LR} 
    /*000185bc*/ SUB         SP, SP, #104                @ 0x68 
    /*000185c0*/ MOV         R4, R0 
    /*000185c4*/ MOV         R2, #104                    @ 0x68 
    /*000185c8*/ MOV         R1, #0 
    /*000185cc*/ MOV         R0, SP 
    /*000185d0*/ BL          0x00000000000185D0          @ memset [R_ARM_CALL: +0x0] 
    /*000185d4*/ MOV         R1, SP 
    /*000185d8*/ MOV         R0, R4 
    /*000185dc*/ MVN         R3, #0 
    /*000185e0*/ STR         R3, [SP, #4] 
    /*000185e4*/ STR         R3, [SP, #8] 
    /*000185e8*/ BL          0x0000000000018564 
    /*000185ec*/ ADD         SP, SP, #104                @ 0x68 
    /*000185f0*/ POP         {R4, PC} 
FUNC_END VI_SNAP_DisableIspPipe


FUNC_BEGIN VI_SNAP_SetIspPipeAttr
    /*000185f4*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000185f8*/ SUB         SP, SP, #104                @ 0x68 
    /*000185fc*/ MOV         R4, R1 
    /*00018600*/ MOV         R6, R0 
    /*00018604*/ MOV         R2, #104                    @ 0x68 
    /*00018608*/ MOV         R0, SP 
    /*0001860c*/ MOV         R1, #0 
    /*00018610*/ MOVW        R5, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00018614*/ BL          0x0000000000018614          @ memset [R_ARM_CALL: +0x0] 
    /*00018618*/ ADD         IP, R4, #20 
    /*0001861c*/ ADD         LR, R4, #36                 @ 0x24 
    /*00018620*/ MOVT        R5, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00018624*/ LDM         IP!, {R0, R1, R2, R3} 
    /*00018628*/ ADD         IP, SP, #36                 @ 0x24 
    /*0001862c*/ LDR         R5, [R5, R6, LSL #2] 
    /*00018630*/ LDR         R8, [R4] 
    /*00018634*/ ADD         R5, R5, #36864              @ 0x9000 
    /*00018638*/ STR         R0, [SP, #18] 
    /*0001863c*/ STR         R1, [SP, #22] 
    /*00018640*/ STR         R2, [SP, #26] 
    /*00018644*/ STR         R3, [SP, #30] 
    /*00018648*/ LDM         LR!, {R0, R1, R2, R3} 
    /*0001864c*/ LDR         R7, [R5, #476]              @ 0x1dc 
    /*00018650*/ LDR         R5, [R5, #480]              @ 0x1e0 
    /*00018654*/ STR         R8, [SP] 
    /*00018658*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*0001865c*/ LDM         LR!, {R0, R1, R2, R3} 
    /*00018660*/ STR         R7, [SP, #4] 
    /*00018664*/ STR         R5, [SP, #8] 
    /*00018668*/ LDR         R7, [R4, #16] 
    /*0001866c*/ LDR         R5, [R4, #8] 
    /*00018670*/ STR         R7, [SP, #12] 
    /*00018674*/ STRB        R5, [SP, #16] 
    /*00018678*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*0001867c*/ LDM         LR!, {R0, R1, R2, R3} 
    /*00018680*/ LDR         R4, [R4, #4] 
    /*00018684*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*00018688*/ LDM         LR, {R0, R1, R2, R3} 
    /*0001868c*/ STR         R4, [SP, #100]              @ 0x64 
    /*00018690*/ STM         IP, {R0, R1, R2, R3} 
    /*00018694*/ MOV         R1, SP 
    /*00018698*/ MOV         R0, R6 
    /*0001869c*/ BL          0x0000000000018564 
    /*000186a0*/ ADD         SP, SP, #104                @ 0x68 
    /*000186a4*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_SNAP_SetIspPipeAttr


FUNC_BEGIN VI_UpdatePipeSnapCtxFromUserSet
    /*000186a8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000186ac*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000186b0*/ PUSH        {R4, LR} 
    /*000186b4*/ MOV         R2, #100                    @ 0x64 
    /*000186b8*/ LDR         R0, [R3, R0, LSL #2] 
    /*000186bc*/ ADD         R0, R0, #36864              @ 0x9000 
    /*000186c0*/ ADD         R1, R0, #2032               @ 0x7f0 
    /*000186c4*/ ADD         R0, R0, #2784               @ 0xae0 
    /*000186c8*/ ADD         R1, R1, #12 
    /*000186cc*/ ADD         R0, R0, #4 
    /*000186d0*/ BL          0x00000000000186D0          @ memcpy [R_ARM_CALL: +0x0] 
    /*000186d4*/ MOV         R0, #0 
    /*000186d8*/ POP         {R4, PC} 
FUNC_END VI_UpdatePipeSnapCtxFromUserSet


FUNC_BEGIN VI_SetSnapPipeAttr
    /*000186dc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000186e0*/ SUB         SP, SP, #44                 @ 0x2c 
    /*000186e4*/ MOV         R5, R1 
    /*000186e8*/ MOV         R6, R0 
    /*000186ec*/ BL          0x00000000000186EC          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*000186f0*/ SUBS        R4, R0, #0 
    /*000186f4*/ BEQ         VI_SetSnapPipeAttr_x18704
    VI_SetSnapPipeAttr_x186f8:
    /*000186f8*/ MOV         R0, R4 
    /*000186fc*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00018700*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SetSnapPipeAttr_x18704:
    /*00018704*/ MOV         R0, R5 
    /*00018708*/ BL          0x0000000000018708          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001870c*/ SUBS        R4, R0, #0 
    /*00018710*/ BNE         VI_SetSnapPipeAttr_x186f8
    /*00018714*/ MOV         R8, #176                    @ 0xb0 
    /*00018718*/ MOVW        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001871c*/ MUL         R8, R8, R6 
    /*00018720*/ MOVT        R9, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00018724*/ ADD         R7, R8, #100                @ 0x64 
    /*00018728*/ ADD         R7, R9, R7 
    /*0001872c*/ MOV         R0, R7 
    /*00018730*/ BL          0x0000000000018730          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00018734*/ CMP         R0, #0 
    /*00018738*/ BNE         VI_SetSnapPipeAttr_x18968
    /*0001873c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00018740*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00018744*/ LDR         SL, [R3, R6, LSL #2] 
    /*00018748*/ CMP         SL, #0 
    /*0001874c*/ BEQ         VI_SetSnapPipeAttr_x188e8
    /*00018750*/ MOV         R0, R6 
    /*00018754*/ BL          0x0000000000018754          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00018758*/ BL          0x0000000000018758          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*0001875c*/ CMP         R0, #1 
    /*00018760*/ BEQ         VI_SetSnapPipeAttr_x18aac
    /*00018764*/ LDR         R3, [R5] 
    /*00018768*/ CMP         R3, #1 
    /*0001876c*/ BHI         VI_SetSnapPipeAttr_x18974
    /*00018770*/ LDR         R2, [R5, #4] 
    /*00018774*/ CMP         R2, #1 
    /*00018778*/ BHI         VI_SetSnapPipeAttr_x1898c
    /*0001877c*/ CMP         R3, #0 
    /*00018780*/ BEQ         VI_SetSnapPipeAttr_x18808
    /*00018784*/ LDR         R0, [R5, #8] 
    /*00018788*/ SUB         R3, R0, #1 
    /*0001878c*/ CMP         R3, #7 
    /*00018790*/ BHI         VI_SetSnapPipeAttr_x188b8
    /*00018794*/ LDR         R3, [R5, #12] 
    /*00018798*/ CMP         R3, #2 
    /*0001879c*/ BHI         VI_SetSnapPipeAttr_x18af0
    /*000187a0*/ LDR         R3, [R5, #16] 
    /*000187a4*/ CMP         R3, #1 
    /*000187a8*/ BHI         VI_SetSnapPipeAttr_x18a94
    /*000187ac*/ BNE         VI_SetSnapPipeAttr_x187d0
    /*000187b0*/ ADD         R2, R5, #68                 @ 0x44 
    /*000187b4*/ MOV         R3, #0 
    VI_SetSnapPipeAttr_x187b8:
    /*000187b8*/ LDR         R1, [R2], #4 
    /*000187bc*/ CMP         R1, #1024                   @ 0x400 
    /*000187c0*/ BCC         VI_SetSnapPipeAttr_x189a4
    /*000187c4*/ ADD         R3, R3, #1 
    /*000187c8*/ CMP         R0, R3 
    /*000187cc*/ BNE         VI_SetSnapPipeAttr_x187b8
    VI_SetSnapPipeAttr_x187d0:
    /*000187d0*/ ADD         FP, SL, #38656              @ 0x9700 
    /*000187d4*/ MOV         R2, #100                    @ 0x64 
    /*000187d8*/ ADD         FP, FP, #252                @ 0xfc 
    /*000187dc*/ MOV         R1, R5 
    /*000187e0*/ MOV         R0, FP 
    /*000187e4*/ BL          0x00000000000187E4          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*000187e8*/ CMP         R0, #0 
    /*000187ec*/ MOVEQ       R4, R0 
    /*000187f0*/ BNE         VI_SetSnapPipeAttr_x1891c
    VI_SetSnapPipeAttr_x187f4:
    /*000187f4*/ MOV         R0, R7 
    /*000187f8*/ BL          0x00000000000187F8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000187fc*/ MOV         R0, R4 
    /*00018800*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00018804*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SetSnapPipeAttr_x18808:
    /*00018808*/ LDR         R3, [R5, #8] 
    /*0001880c*/ CMP         R3, #0 
    /*00018810*/ BEQ         VI_SetSnapPipeAttr_x18a68
    /*00018814*/ LDR         R3, [R5, #12] 
    /*00018818*/ CMP         R3, #2 
    /*0001881c*/ BHI         VI_SetSnapPipeAttr_x18a50
    /*00018820*/ LDR         R3, [R5, #16] 
    /*00018824*/ CMP         R3, #1 
    /*00018828*/ BHI         VI_SetSnapPipeAttr_x18a0c
    /*0001882c*/ CMP         R3, #0 
    /*00018830*/ BEQ         VI_SetSnapPipeAttr_x187d0
    /*00018834*/ MOV         R0, R6 
    /*00018838*/ BL          0x0000000000018838          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*0001883c*/ ADD         R1, SP, #20 
    /*00018840*/ BL          0x0000000000018840          @ VI_DRV_GetDevBindPipe [R_ARM_CALL: .text+0x31908] 
    /*00018844*/ LDR         R3, [SP, #20] 
    /*00018848*/ CMP         R3, #2 
    /*0001884c*/ BNE         VI_SetSnapPipeAttr_x18adc
    /*00018850*/ LDR         R0, [SP, #28] 
    /*00018854*/ CMP         R6, R0 
    /*00018858*/ LDRNE       R0, [SP, #24] 
    /*0001885c*/ BL          0x000000000001885C          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00018860*/ CMP         R0, #1 
    /*00018864*/ BHI         VI_SetSnapPipeAttr_x18a24
    /*00018868*/ LDR         R3, [R5, #20] 
    /*0001886c*/ SUB         R2, R3, #1 
    /*00018870*/ CMP         R2, #7 
    /*00018874*/ BLS         VI_SetSnapPipeAttr_x187d0
    /*00018878*/ STR         R3, [SP, #4] 
    /*0001887c*/ MOV         R2, #8 
    /*00018880*/ MOV         R3, #0 
    /*00018884*/ STR         R2, [SP, #12] 
    /*00018888*/ STR         R3, [SP, #8] 
    /*0001888c*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b98] 
    /*00018890*/ MOV         R3, #50                     @ 0x32 
    /*00018894*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b98] 
    /*00018898*/ STR         R3, [SP] 
    /*0001889c*/ MOV         R1, #16 
    /*000188a0*/ LDR         R3, [PC, #608]              @ 0x0000000000018b08 
    /*000188a4*/ MOV         R0, #3 
    /*000188a8*/ MOVW        R4, #32771                  @ 0x8003 
    /*000188ac*/ BL          0x00000000000188AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000188b0*/ MOVT        R4, #40976                  @ 0xa010 
    /*000188b4*/ B           VI_SetSnapPipeAttr_x187f4
    VI_SetSnapPipeAttr_x188b8:
    /*000188b8*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6bfc] 
    /*000188bc*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6bfc] 
    /*000188c0*/ MOV         R3, #128                    @ 0x80 
    /*000188c4*/ STR         R0, [SP, #4] 
    /*000188c8*/ STR         R3, [SP] 
    VI_SetSnapPipeAttr_x188cc:
    /*000188cc*/ LDR         R3, [PC, #568]              @ 0x0000000000018b0c 
    /*000188d0*/ MOV         R1, #16 
    /*000188d4*/ MOV         R0, #3 
    /*000188d8*/ MOVW        R4, #32771                  @ 0x8003 
    /*000188dc*/ BL          0x00000000000188DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000188e0*/ MOVT        R4, #40976                  @ 0xa010 
    /*000188e4*/ B           VI_SetSnapPipeAttr_x187f4
    VI_SetSnapPipeAttr_x188e8:
    /*000188e8*/ MOVW        R2, #317                    @ 0x13d 
    /*000188ec*/ STR         R6, [SP, #4] 
    /*000188f0*/ STR         R2, [SP] 
    /*000188f4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xdf0] 
    /*000188f8*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6910] 
    /*000188fc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xdf0] 
    /*00018900*/ MOV         R1, #16 
    /*00018904*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6910] 
    /*00018908*/ MOV         R0, #3 
    /*0001890c*/ MOVW        R4, #32773                  @ 0x8005 
    /*00018910*/ BL          0x0000000000018910          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018914*/ MOVT        R4, #40976                  @ 0xa010 
    /*00018918*/ B           VI_SetSnapPipeAttr_x187f4
    VI_SetSnapPipeAttr_x1891c:
    /*0001891c*/ ADD         R8, R8, #140                @ 0x8c 
    /*00018920*/ ADD         SL, SL, #36864              @ 0x9000 
    /*00018924*/ ADD         R9, R9, R8 
    /*00018928*/ ADD         R1, SP, #20 
    /*0001892c*/ MOV         R0, R9 
    /*00018930*/ BL          0x0000000000018930          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00018934*/ LDR         R3, [SL, #388]              @ 0x184 
    /*00018938*/ CMP         R3, #2 
    /*0001893c*/ BEQ         VI_SetSnapPipeAttr_x189d8
    /*00018940*/ MOV         R1, R5 
    /*00018944*/ MOV         R0, FP 
    /*00018948*/ MOV         R2, #100                    @ 0x64 
    /*0001894c*/ BL          0x000000000001894C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018950*/ MOV         R3, #1 
    /*00018954*/ STR         R3, [SL, #384]              @ 0x180 
    VI_SetSnapPipeAttr_x18958:
    /*00018958*/ ADD         R1, SP, #20 
    /*0001895c*/ MOV         R0, R9 
    /*00018960*/ BL          0x0000000000018960          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00018964*/ B           VI_SetSnapPipeAttr_x187f4
    VI_SetSnapPipeAttr_x18968:
    /*00018968*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001896c*/ MOVT        R4, #65535                  @ 0xffff 
    /*00018970*/ B           VI_SetSnapPipeAttr_x186f8
    VI_SetSnapPipeAttr_x18974:
    /*00018974*/ STR         R3, [SP, #4] 
    /*00018978*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x698c] 
    /*0001897c*/ MOV         R3, #85                     @ 0x55 
    /*00018980*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x698c] 
    /*00018984*/ STR         R3, [SP] 
    /*00018988*/ B           VI_SetSnapPipeAttr_x188cc
    VI_SetSnapPipeAttr_x1898c:
    /*0001898c*/ STR         R2, [SP, #4] 
    /*00018990*/ MOV         R3, #91                     @ 0x5b 
    /*00018994*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x69cc] 
    /*00018998*/ STR         R3, [SP] 
    /*0001899c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x69cc] 
    /*000189a0*/ B           VI_SetSnapPipeAttr_x188cc
    VI_SetSnapPipeAttr_x189a4:
    /*000189a4*/ STR         R1, [SP, #8] 
    /*000189a8*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ca0] 
    /*000189ac*/ MOV         R1, #151                    @ 0x97 
    /*000189b0*/ STR         R3, [SP, #4] 
    /*000189b4*/ STR         R1, [SP] 
    /*000189b8*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ca0] 
    /*000189bc*/ LDR         R3, [PC, #328]              @ 0x0000000000018b0c 
    /*000189c0*/ MOV         R1, #16 
    /*000189c4*/ MOV         R0, #3 
    /*000189c8*/ MOVW        R4, #32771                  @ 0x8003 
    /*000189cc*/ BL          0x00000000000189CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000189d0*/ MOVT        R4, #40976                  @ 0xa010 
    /*000189d4*/ B           VI_SetSnapPipeAttr_x187f4
    VI_SetSnapPipeAttr_x189d8:
    /*000189d8*/ MOVW        R2, #338                    @ 0x152 
    /*000189dc*/ STR         R6, [SP, #4] 
    /*000189e0*/ STR         R2, [SP] 
    /*000189e4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xdf0] 
    /*000189e8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d00] 
    /*000189ec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xdf0] 
    /*000189f0*/ MOV         R1, #16 
    /*000189f4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d00] 
    /*000189f8*/ MOV         R0, #3 
    /*000189fc*/ MOVW        R4, #32786                  @ 0x8012 
    /*00018a00*/ BL          0x0000000000018A00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018a04*/ MOVT        R4, #40976                  @ 0xa010 
    /*00018a08*/ B           VI_SetSnapPipeAttr_x18958
    VI_SetSnapPipeAttr_x18a0c:
    /*00018a0c*/ STR         R3, [SP, #4] 
    /*00018a10*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ab0] 
    /*00018a14*/ MOV         R3, #111                    @ 0x6f 
    /*00018a18*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ab0] 
    /*00018a1c*/ STR         R3, [SP] 
    /*00018a20*/ B           VI_SetSnapPipeAttr_x188cc
    VI_SetSnapPipeAttr_x18a24:
    /*00018a24*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b40] 
    /*00018a28*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b40] 
    /*00018a2c*/ MOV         R3, #42                     @ 0x2a 
    /*00018a30*/ STR         R3, [SP] 
    VI_SetSnapPipeAttr_x18a34:
    /*00018a34*/ LDR         R3, [PC, #204]              @ 0x0000000000018b08 
    /*00018a38*/ MOV         R1, #16 
    /*00018a3c*/ MOV         R0, #3 
    /*00018a40*/ MOVW        R4, #32777                  @ 0x8009 
    /*00018a44*/ BL          0x0000000000018A44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018a48*/ MOVT        R4, #40976                  @ 0xa010 
    /*00018a4c*/ B           VI_SetSnapPipeAttr_x187f4
    VI_SetSnapPipeAttr_x18a50:
    /*00018a50*/ STR         R3, [SP, #4] 
    /*00018a54*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a5c] 
    /*00018a58*/ MOV         R3, #105                    @ 0x69 
    /*00018a5c*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a5c] 
    /*00018a60*/ STR         R3, [SP] 
    /*00018a64*/ B           VI_SetSnapPipeAttr_x188cc
    VI_SetSnapPipeAttr_x18a68:
    /*00018a68*/ MOV         R3, #99                     @ 0x63 
    /*00018a6c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a08] 
    /*00018a70*/ STR         R3, [SP] 
    /*00018a74*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a08] 
    /*00018a78*/ LDR         R3, [PC, #140]              @ 0x0000000000018b0c 
    /*00018a7c*/ MOV         R1, #16 
    /*00018a80*/ MOV         R0, #3 
    /*00018a84*/ MOVW        R4, #32771                  @ 0x8003 
    /*00018a88*/ BL          0x0000000000018A88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018a8c*/ MOVT        R4, #40976                  @ 0xa010 
    /*00018a90*/ B           VI_SetSnapPipeAttr_x187f4
    VI_SetSnapPipeAttr_x18a94:
    /*00018a94*/ STR         R3, [SP, #4] 
    /*00018a98*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c48] 
    /*00018a9c*/ MOV         R3, #140                    @ 0x8c 
    /*00018aa0*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c48] 
    /*00018aa4*/ STR         R3, [SP] 
    /*00018aa8*/ B           VI_SetSnapPipeAttr_x188cc
    VI_SetSnapPipeAttr_x18aac:
    /*00018aac*/ MOV         R3, #79                     @ 0x4f 
    /*00018ab0*/ STR         R6, [SP, #4] 
    /*00018ab4*/ STR         R3, [SP] 
    /*00018ab8*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6940] 
    /*00018abc*/ LDR         R3, [PC, #72]               @ 0x0000000000018b0c 
    /*00018ac0*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6940] 
    /*00018ac4*/ MOV         R1, #16 
    /*00018ac8*/ MOV         R0, #3 
    /*00018acc*/ MOVW        R4, #32777                  @ 0x8009 
    /*00018ad0*/ BL          0x0000000000018AD0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018ad4*/ MOVT        R4, #40976                  @ 0xa010 
    /*00018ad8*/ B           VI_SetSnapPipeAttr_x187f4
    VI_SetSnapPipeAttr_x18adc:
    /*00018adc*/ MOV         R3, #26 
    /*00018ae0*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b00] 
    /*00018ae4*/ STR         R3, [SP] 
    /*00018ae8*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b00] 
    /*00018aec*/ B           VI_SetSnapPipeAttr_x18a34
    VI_SetSnapPipeAttr_x18af0:
    /*00018af0*/ STR         R3, [SP, #4] 
    /*00018af4*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a5c] 
    /*00018af8*/ MOV         R3, #134                    @ 0x86 
    /*00018afc*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a5c] 
    /*00018b00*/ STR         R3, [SP] 
    /*00018b04*/ B           VI_SetSnapPipeAttr_x188cc
    /*00018b08*/ ANDEQ       R0, R0, IP, LSL LR 
    /*00018b0c*/ ANDEQ       R0, R0, R4, LSL #28 
FUNC_END VI_SetSnapPipeAttr


FUNC_BEGIN VI_GetSnapPipeAttr
    /*00018b10*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00018b14*/ SUB         SP, SP, #12 
    /*00018b18*/ MOV         R5, R1 
    /*00018b1c*/ MOV         R6, R0 
    /*00018b20*/ BL          0x0000000000018B20          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*00018b24*/ SUBS        R4, R0, #0 
    /*00018b28*/ BEQ         VI_GetSnapPipeAttr_x18b38
    VI_GetSnapPipeAttr_x18b2c:
    /*00018b2c*/ MOV         R0, R4 
    /*00018b30*/ ADD         SP, SP, #12 
    /*00018b34*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetSnapPipeAttr_x18b38:
    /*00018b38*/ MOV         R0, R5 
    /*00018b3c*/ BL          0x0000000000018B3C          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00018b40*/ SUBS        R4, R0, #0 
    /*00018b44*/ BNE         VI_GetSnapPipeAttr_x18b2c
    /*00018b48*/ LDR         R3, [PC, #140]              @ 0x0000000000018bdc 
    /*00018b4c*/ MOV         R7, #176                    @ 0xb0 
    /*00018b50*/ MLA         R7, R7, R6, R3 
    /*00018b54*/ MOV         R0, R7 
    /*00018b58*/ BL          0x0000000000018B58          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00018b5c*/ SUBS        R4, R0, #0 
    /*00018b60*/ BNE         VI_GetSnapPipeAttr_x18bd0
    /*00018b64*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00018b68*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00018b6c*/ LDR         R1, [R3, R6, LSL #2] 
    /*00018b70*/ CMP         R1, #0 
    /*00018b74*/ BEQ         VI_GetSnapPipeAttr_x18ba0
    /*00018b78*/ ADD         R1, R1, #38656              @ 0x9700 
    /*00018b7c*/ MOV         R0, R5 
    /*00018b80*/ ADD         R1, R1, #252                @ 0xfc 
    /*00018b84*/ MOV         R2, #100                    @ 0x64 
    /*00018b88*/ BL          0x0000000000018B88          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VI_GetSnapPipeAttr_x18b8c:
    /*00018b8c*/ MOV         R0, R7 
    /*00018b90*/ BL          0x0000000000018B90          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018b94*/ MOV         R0, R4 
    /*00018b98*/ ADD         SP, SP, #12 
    /*00018b9c*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetSnapPipeAttr_x18ba0:
    /*00018ba0*/ MOVW        R3, #370                    @ 0x172 
    /*00018ba4*/ STR         R6, [SP, #4] 
    /*00018ba8*/ STR         R3, [SP] 
    /*00018bac*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d70] 
    /*00018bb0*/ LDR         R3, [PC, #40]               @ 0x0000000000018be0 
    /*00018bb4*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d70] 
    /*00018bb8*/ MOV         R1, #16 
    /*00018bbc*/ MOV         R0, #3 
    /*00018bc0*/ MOVW        R4, #32773                  @ 0x8005 
    /*00018bc4*/ BL          0x0000000000018BC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018bc8*/ MOVT        R4, #40976                  @ 0xa010 
    /*00018bcc*/ B           VI_GetSnapPipeAttr_x18b8c
    VI_GetSnapPipeAttr_x18bd0:
    /*00018bd0*/ MOV         R4, #65024                  @ 0xfe00 
    /*00018bd4*/ MOVT        R4, #65535                  @ 0xffff 
    /*00018bd8*/ B           VI_GetSnapPipeAttr_x18b2c
    /*00018bdc*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00018be0*/ ANDEQ       R0, R0, R4, LSR LR 
FUNC_END VI_GetSnapPipeAttr


FUNC_BEGIN VI_SNAP_OfflinePipeInit
    /*00018be4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00018be8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00018bec*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00018bf0*/ MOV         R9, R0 
    /*00018bf4*/ LDR         R8, [R3, R0, LSL #2] 
    /*00018bf8*/ SUB         SP, SP, #12 
    /*00018bfc*/ CMP         R8, #0 
    /*00018c00*/ BEQ         VI_SNAP_OfflinePipeInit_x18db4
    /*00018c04*/ MOV         R0, #4736                   @ 0x1280 
    /*00018c08*/ ADD         R7, R8, #36864              @ 0x9000 
    /*00018c0c*/ BL          0x0000000000018C0C          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00018c10*/ CMP         R0, #0 
    /*00018c14*/ STR         R0, [R7, #392]              @ 0x188 
    /*00018c18*/ BEQ         VI_SNAP_OfflinePipeInit_x18cf8
    /*00018c1c*/ ADD         R5, R8, #37120              @ 0x9100 
    /*00018c20*/ ADD         R5, R5, #136                @ 0x88 
    /*00018c24*/ MOV         R0, R5 
    /*00018c28*/ BL          0x0000000000018C28          @ VI_CreatQueue [R_ARM_CALL: .text+0x16114] 
    /*00018c2c*/ LDR         R4, [R7, #392]              @ 0x188 
    /*00018c30*/ ADD         R6, R4, #5312               @ 0x14c0 
    /*00018c34*/ ADD         R4, R4, #580                @ 0x244 
    /*00018c38*/ ADD         R6, R6, #4 
    VI_SNAP_OfflinePipeInit_x18c3c:
    /*00018c3c*/ MOV         R1, R4 
    /*00018c40*/ MOV         R0, R5 
    /*00018c44*/ ADD         R4, R4, #592                @ 0x250 
    /*00018c48*/ BL          0x0000000000018C48          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00018c4c*/ CMP         R6, R4 
    /*00018c50*/ BNE         VI_SNAP_OfflinePipeInit_x18c3c
    /*00018c54*/ LDR         R0, [R7, #2044]             @ 0x7fc 
    /*00018c58*/ CMP         R0, #0 
    /*00018c5c*/ MOVNE       R0, #0 
    /*00018c60*/ BNE         VI_SNAP_OfflinePipeInit_x18c70
    /*00018c64*/ LDR         R3, [R7, #2060]             @ 0x80c 
    /*00018c68*/ CMP         R3, #1 
    /*00018c6c*/ BEQ         VI_SNAP_OfflinePipeInit_x18c78
    VI_SNAP_OfflinePipeInit_x18c70:
    /*00018c70*/ ADD         SP, SP, #12 
    /*00018c74*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SNAP_OfflinePipeInit_x18c78:
    /*00018c78*/ MOV         R0, #4736                   @ 0x1280 
    /*00018c7c*/ BL          0x0000000000018C7C          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00018c80*/ CMP         R0, #0 
    /*00018c84*/ MOV         R4, R0 
    /*00018c88*/ STR         R0, [R7, #428]              @ 0x1ac 
    /*00018c8c*/ BEQ         VI_SNAP_OfflinePipeInit_x18d4c
    /*00018c90*/ ADD         R5, R8, #37120              @ 0x9100 
    /*00018c94*/ ADD         R5, R5, #172                @ 0xac 
    /*00018c98*/ MOV         R0, R5 
    /*00018c9c*/ BL          0x0000000000018C9C          @ VI_CreatQueue [R_ARM_CALL: .text+0x16114] 
    /*00018ca0*/ LDR         R4, [R7, #428]              @ 0x1ac 
    /*00018ca4*/ ADD         R6, R4, #5312               @ 0x14c0 
    /*00018ca8*/ ADD         R4, R4, #580                @ 0x244 
    /*00018cac*/ ADD         R6, R6, #4 
    VI_SNAP_OfflinePipeInit_x18cb0:
    /*00018cb0*/ MOV         R1, R4 
    /*00018cb4*/ MOV         R0, R5 
    /*00018cb8*/ ADD         R4, R4, #592                @ 0x250 
    /*00018cbc*/ BL          0x0000000000018CBC          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00018cc0*/ CMP         R4, R6 
    /*00018cc4*/ BNE         VI_SNAP_OfflinePipeInit_x18cb0
    /*00018cc8*/ ADD         R8, R8, #12288              @ 0x3000 
    /*00018ccc*/ MOV         R5, #1 
    /*00018cd0*/ MOV         R0, R9 
    /*00018cd4*/ MOV         R4, #0 
    /*00018cd8*/ STR         R5, [R8, #2216]             @ 0x8a8 
    /*00018cdc*/ STR         R4, [R8, #3128]             @ 0xc38 
    /*00018ce0*/ BL          0x0000000000018CE0          @ VI_DRV_StartPipe [R_ARM_CALL: .text+0x30230] 
    /*00018ce4*/ MOV         R0, R4 
    /*00018ce8*/ STR         R5, [R7, #1480]             @ 0x5c8 
    /*00018cec*/ STR         R5, [R7, #2144]             @ 0x860 
    /*00018cf0*/ ADD         SP, SP, #12 
    /*00018cf4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SNAP_OfflinePipeInit_x18cf8:
    /*00018cf8*/ MOVW        R3, #397                    @ 0x18d 
    /*00018cfc*/ MOV         R1, #16 
    /*00018d00*/ STR         R3, [SP] 
    /*00018d04*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6dac] 
    /*00018d08*/ LDR         R3, [PC, #212]              @ 0x0000000000018de4 
    /*00018d0c*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6dac] 
    /*00018d10*/ MOV         R0, #3 
    /*00018d14*/ BL          0x0000000000018D14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018d18*/ STR         R9, [SP, #4] 
    /*00018d1c*/ MOVW        R3, #401                    @ 0x191 
    /*00018d20*/ MOV         R1, #16 
    /*00018d24*/ STR         R3, [SP] 
    /*00018d28*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6de4] 
    /*00018d2c*/ LDR         R3, [PC, #176]              @ 0x0000000000018de4 
    /*00018d30*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6de4] 
    /*00018d34*/ MOV         R0, #3 
    /*00018d38*/ BL          0x0000000000018D38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018d3c*/ MOVW        R0, #32780                  @ 0x800c 
    /*00018d40*/ MOVT        R0, #40976                  @ 0xa010 
    /*00018d44*/ ADD         SP, SP, #12 
    /*00018d48*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_SNAP_OfflinePipeInit_x18d4c:
    /*00018d4c*/ MOV         R3, #408                    @ 0x198 
    /*00018d50*/ MOV         R1, #16 
    /*00018d54*/ STR         R3, [SP] 
    /*00018d58*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6dac] 
    /*00018d5c*/ LDR         R3, [PC, #128]              @ 0x0000000000018de4 
    /*00018d60*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6dac] 
    /*00018d64*/ MOV         R0, #3 
    /*00018d68*/ BL          0x0000000000018D68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018d6c*/ MOV         R0, R5 
    /*00018d70*/ BL          0x0000000000018D70          @ VI_DestroyQueue [R_ARM_CALL: .text+0x16170] 
    /*00018d74*/ LDR         R0, [R7, #392]              @ 0x188 
    /*00018d78*/ CMP         R0, #0 
    /*00018d7c*/ BEQ         VI_SNAP_OfflinePipeInit_x18d88
    /*00018d80*/ BL          0x0000000000018D80          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00018d84*/ STR         R4, [R7, #392]              @ 0x188 
    VI_SNAP_OfflinePipeInit_x18d88:
    /*00018d88*/ MOV         R3, #412                    @ 0x19c 
    /*00018d8c*/ STR         R9, [SP, #4] 
    /*00018d90*/ STR         R3, [SP] 
    /*00018d94*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e2c] 
    /*00018d98*/ LDR         R3, [PC, #68]               @ 0x0000000000018de4 
    /*00018d9c*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e2c] 
    /*00018da0*/ MOV         R1, #16 
    /*00018da4*/ MOV         R0, #3 
    /*00018da8*/ BL          0x0000000000018DA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018dac*/ MVN         R0, #0 
    /*00018db0*/ B           VI_SNAP_OfflinePipeInit_x18c70
    VI_SNAP_OfflinePipeInit_x18db4:
    /*00018db4*/ STR         R0, [SP, #4] 
    /*00018db8*/ MOV         R3, #392                    @ 0x188 
    /*00018dbc*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d70] 
    /*00018dc0*/ STR         R3, [SP] 
    /*00018dc4*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d70] 
    /*00018dc8*/ LDR         R3, [PC, #20]               @ 0x0000000000018de4 
    /*00018dcc*/ MOV         R1, #16 
    /*00018dd0*/ MOV         R0, #3 
    /*00018dd4*/ BL          0x0000000000018DD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018dd8*/ MOVW        R0, #32773                  @ 0x8005 
    /*00018ddc*/ MOVT        R0, #40976                  @ 0xa010 
    /*00018de0*/ B           VI_SNAP_OfflinePipeInit_x18c70
    /*00018de4*/ ANDEQ       R0, R0, R8, ASR #28 
FUNC_END VI_SNAP_OfflinePipeInit


FUNC_BEGIN VI_SNAP_OfflinePipeDeInit
    /*00018de8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00018dec*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00018df0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00018df4*/ MOV         R6, R0 
    /*00018df8*/ LDR         R4, [R3, R0, LSL #2] 
    /*00018dfc*/ SUB         SP, SP, #8 
    /*00018e00*/ CMP         R4, #0 
    /*00018e04*/ BEQ         VI_SNAP_OfflinePipeDeInit_x18e94
    /*00018e08*/ ADD         R5, R4, #36864              @ 0x9000 
    /*00018e0c*/ LDR         R7, [R5, #2044]             @ 0x7fc 
    /*00018e10*/ CMP         R7, #0 
    /*00018e14*/ BEQ         VI_SNAP_OfflinePipeDeInit_x18e58
    VI_SNAP_OfflinePipeDeInit_x18e18:
    /*00018e18*/ ADD         R4, R4, #37120              @ 0x9100 
    /*00018e1c*/ MOV         R0, R6 
    /*00018e20*/ ADD         R4, R4, #136                @ 0x88 
    /*00018e24*/ MOV         R1, R4 
    /*00018e28*/ BL          0x0000000000018E28          @ VI_ClearLinearPicQueue [R_ARM_CALL: .text+0x31c4] 
    /*00018e2c*/ MOV         R0, R4 
    /*00018e30*/ BL          0x0000000000018E30          @ VI_DestroyQueue [R_ARM_CALL: .text+0x16170] 
    /*00018e34*/ LDR         R0, [R5, #392]              @ 0x188 
    /*00018e38*/ CMP         R0, #0 
    /*00018e3c*/ BEQ         VI_SNAP_OfflinePipeDeInit_x18e50
    /*00018e40*/ BL          0x0000000000018E40          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00018e44*/ MOV         R3, #0 
    /*00018e48*/ MOV         R0, R3 
    /*00018e4c*/ STR         R3, [R5, #392]              @ 0x188 
    VI_SNAP_OfflinePipeDeInit_x18e50:
    /*00018e50*/ ADD         SP, SP, #8 
    /*00018e54*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SNAP_OfflinePipeDeInit_x18e58:
    /*00018e58*/ LDR         R3, [R5, #2060]             @ 0x80c 
    /*00018e5c*/ CMP         R3, #1 
    /*00018e60*/ BNE         VI_SNAP_OfflinePipeDeInit_x18e18
    /*00018e64*/ ADD         R8, R4, #37120              @ 0x9100 
    /*00018e68*/ ADD         R8, R8, #172                @ 0xac 
    /*00018e6c*/ MOV         R1, R8 
    /*00018e70*/ BL          0x0000000000018E70          @ VI_ClearLinearPicQueue [R_ARM_CALL: .text+0x31c4] 
    /*00018e74*/ MOV         R0, R8 
    /*00018e78*/ BL          0x0000000000018E78          @ VI_DestroyQueue [R_ARM_CALL: .text+0x16170] 
    /*00018e7c*/ LDR         R0, [R5, #428]              @ 0x1ac 
    /*00018e80*/ CMP         R0, #0 
    /*00018e84*/ BEQ         VI_SNAP_OfflinePipeDeInit_x18e18
    /*00018e88*/ BL          0x0000000000018E88          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00018e8c*/ STR         R7, [R5, #428]              @ 0x1ac 
    /*00018e90*/ B           VI_SNAP_OfflinePipeDeInit_x18e18
    VI_SNAP_OfflinePipeDeInit_x18e94:
    /*00018e94*/ STR         R0, [SP, #4] 
    /*00018e98*/ MOV         R3, #436                    @ 0x1b4 
    /*00018e9c*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d70] 
    /*00018ea0*/ STR         R3, [SP] 
    /*00018ea4*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d70] 
    /*00018ea8*/ LDR         R3, [PC, #20]               @ 0x0000000000018ec4 
    /*00018eac*/ MOV         R1, #16 
    /*00018eb0*/ MOV         R0, #3 
    /*00018eb4*/ BL          0x0000000000018EB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018eb8*/ MOVW        R0, #32773                  @ 0x8005 
    /*00018ebc*/ MOVT        R0, #40976                  @ 0xa010 
    /*00018ec0*/ B           VI_SNAP_OfflinePipeDeInit_x18e50
    /*00018ec4*/ ANDEQ       R0, R0, R0, ROR #28 
FUNC_END VI_SNAP_OfflinePipeDeInit


FUNC_BEGIN VI_EnableSnapPipe
    /*00018ec8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00018ecc*/ SUB         SP, SP, #40                 @ 0x28 
    /*00018ed0*/ MOV         R5, R0 
    /*00018ed4*/ BL          0x0000000000018ED4          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*00018ed8*/ SUBS        R7, R0, #0 
    /*00018edc*/ BNE         VI_EnableSnapPipe_x19090
    /*00018ee0*/ LDR         R4, [PC, #828]              @ 0x0000000000019224 
    /*00018ee4*/ ADD         R6, R4, #704                @ 0x2c0 
    VI_EnableSnapPipe_x18ee8:
    /*00018ee8*/ MOV         R0, R4 
    /*00018eec*/ ADD         R4, R4, #176                @ 0xb0 
    /*00018ef0*/ BL          0x0000000000018EF0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00018ef4*/ CMP         R0, #0 
    /*00018ef8*/ BNE         VI_EnableSnapPipe_x1909c
    /*00018efc*/ CMP         R4, R6 
    /*00018f00*/ BNE         VI_EnableSnapPipe_x18ee8
    /*00018f04*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00018f08*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00018f0c*/ LDR         R4, [R6, R5, LSL #2] 
    /*00018f10*/ CMP         R4, #0 
    /*00018f14*/ BEQ         VI_EnableSnapPipe_x19044
    /*00018f18*/ ADD         R4, R4, #36864              @ 0x9000 
    /*00018f1c*/ LDR         R3, [R4, #384]              @ 0x180 
    /*00018f20*/ CMP         R3, #1 
    /*00018f24*/ BNE         VI_EnableSnapPipe_x190f8
    /*00018f28*/ MOV         R0, R5 
    /*00018f2c*/ BL          0x0000000000018F2C          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*00018f30*/ ADD         R1, SP, #20 
    /*00018f34*/ BL          0x0000000000018F34          @ VI_DRV_GetDevBindPipe [R_ARM_CALL: .text+0x31908] 
    /*00018f38*/ LDR         R3, [SP, #20] 
    /*00018f3c*/ CMP         R3, #1 
    /*00018f40*/ MOVEQ       R3, #180                    @ 0xb4 
    /*00018f44*/ MOVWEQ      R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ebc] 
    /*00018f48*/ STREQ       R3, [SP] 
    /*00018f4c*/ MOVTEQ      R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ebc] 
    /*00018f50*/ BEQ         VI_EnableSnapPipe_x1914c
    /*00018f54*/ LDR         R3, [R4, #1480]             @ 0x5c8 
    /*00018f58*/ CMP         R3, #1 
    /*00018f5c*/ BEQ         VI_EnableSnapPipe_x19168
    /*00018f60*/ MOV         R0, R5 
    /*00018f64*/ BL          0x0000000000018F64          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00018f68*/ CMP         R0, #1 
    /*00018f6c*/ BHI         VI_EnableSnapPipe_x1913c
    /*00018f70*/ LDR         R9, [R4, #388]              @ 0x184 
    /*00018f74*/ CMP         R9, #0 
    /*00018f78*/ BNE         VI_EnableSnapPipe_x19198
    /*00018f7c*/ MOV         R0, R5 
    /*00018f80*/ LDR         R8, [R6, R5, LSL #2] 
    /*00018f84*/ BL          0x0000000000018F84          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*00018f88*/ ADD         R1, SP, #20 
    /*00018f8c*/ MOV         SL, R0 
    /*00018f90*/ BL          0x0000000000018F90          @ VI_DRV_GetDevBindPipe [R_ARM_CALL: .text+0x31908] 
    /*00018f94*/ LDR         R3, [SP, #20] 
    /*00018f98*/ CMP         R3, #1 
    /*00018f9c*/ BEQ         VI_EnableSnapPipe_x19128
    /*00018fa0*/ CMP         R3, #2 
    /*00018fa4*/ BNE         VI_EnableSnapPipe_x190c0
    /*00018fa8*/ ADD         R3, R8, #36864              @ 0x9000 
    /*00018fac*/ MOV         R2, #1 
    /*00018fb0*/ STR         R5, [R3, #480]              @ 0x1e0 
    /*00018fb4*/ STR         R2, [R3, #472]              @ 0x1d8 
    /*00018fb8*/ LDR         R1, [SP, #24] 
    /*00018fbc*/ CMP         R5, R1 
    /*00018fc0*/ LDREQ       R1, [SP, #28] 
    /*00018fc4*/ LDR         R2, [R6, R1, LSL #2] 
    /*00018fc8*/ STR         R1, [R3, #476]              @ 0x1dc 
    /*00018fcc*/ CMP         R2, #0 
    /*00018fd0*/ BEQ         VI_EnableSnapPipe_x191fc
    /*00018fd4*/ ADD         R2, R2, #36864              @ 0x9000 
    /*00018fd8*/ MOV         R1, #1 
    /*00018fdc*/ STR         R1, [R2, #472]              @ 0x1d8 
    /*00018fe0*/ LDR         R1, [R3, #476]              @ 0x1dc 
    /*00018fe4*/ STR         R1, [R2, #476]              @ 0x1dc 
    /*00018fe8*/ LDR         R3, [R3, #480]              @ 0x1e0 
    /*00018fec*/ STR         R3, [R2, #480]              @ 0x1e0 
    VI_EnableSnapPipe_x18ff0:
    /*00018ff0*/ LDR         R3, [PC, #560]              @ 0x0000000000019228 
    /*00018ff4*/ MOV         R6, #176                    @ 0xb0 
    /*00018ff8*/ ADD         R1, SP, #20 
    /*00018ffc*/ MLA         R6, R6, R5, R3 
    /*00019000*/ MOV         R0, R6 
    /*00019004*/ BL          0x0000000000019004          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00019008*/ MOV         R3, #0 
    /*0001900c*/ MOV         R0, R5 
    /*00019010*/ STR         R3, [R4, #488]              @ 0x1e8 
    /*00019014*/ BL          0x0000000000019014          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00019018*/ CMP         R0, #1 
    /*0001901c*/ BLS         VI_EnableSnapPipe_x191cc
    /*00019020*/ SUB         R0, R0, #2 
    /*00019024*/ CMP         R0, #3 
    /*00019028*/ BLS         VI_EnableSnapPipe_x190a8
    VI_EnableSnapPipe_x1902c:
    /*0001902c*/ MOV         R3, #1 
    /*00019030*/ ADD         R1, SP, #20 
    /*00019034*/ MOV         R0, R6 
    /*00019038*/ STR         R3, [R4, #388]              @ 0x184 
    /*0001903c*/ BL          0x000000000001903C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00019040*/ B           VI_EnableSnapPipe_x19070
    VI_EnableSnapPipe_x19044:
    /*00019044*/ MOVW        R3, #479                    @ 0x1df 
    /*00019048*/ STR         R5, [SP, #4] 
    /*0001904c*/ STR         R3, [SP] 
    /*00019050*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d70] 
    /*00019054*/ LDR         R3, [PC, #464]              @ 0x000000000001922c 
    /*00019058*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d70] 
    /*0001905c*/ MOV         R1, #16 
    /*00019060*/ MOV         R0, #3 
    /*00019064*/ BL          0x0000000000019064          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019068*/ MOVW        R7, #32773                  @ 0x8005 
    /*0001906c*/ MOVT        R7, #40976                  @ 0xa010 
    VI_EnableSnapPipe_x19070:
    /*00019070*/ LDR         R0, [PC, #440]              @ 0x0000000000019230 
    /*00019074*/ BL          0x0000000000019074          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019078*/ LDR         R0, [PC, #436]              @ 0x0000000000019234 
    /*0001907c*/ BL          0x000000000001907C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019080*/ LDR         R0, [PC, #432]              @ 0x0000000000019238 
    /*00019084*/ BL          0x0000000000019084          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019088*/ LDR         R0, [PC, #404]              @ 0x0000000000019224 
    /*0001908c*/ BL          0x000000000001908C          @ osal_up [R_ARM_CALL: +0x0] 
    VI_EnableSnapPipe_x19090:
    /*00019090*/ MOV         R0, R7 
    /*00019094*/ ADD         SP, SP, #40                 @ 0x28 
    /*00019098*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_EnableSnapPipe_x1909c:
    /*0001909c*/ MOV         R7, #65024                  @ 0xfe00 
    /*000190a0*/ MOVT        R7, #65535                  @ 0xffff 
    /*000190a4*/ B           VI_EnableSnapPipe_x19090
    VI_EnableSnapPipe_x190a8:
    /*000190a8*/ MOV         R0, R5 
    /*000190ac*/ BL          0x00000000000190AC          @ VI_DRV_StartPipe [R_ARM_CALL: .text+0x30230] 
    /*000190b0*/ MOV         R3, #1 
    /*000190b4*/ STR         R3, [R4, #1480]             @ 0x5c8 
    /*000190b8*/ STR         R3, [R4, #2144]             @ 0x860 
    /*000190bc*/ B           VI_EnableSnapPipe_x1902c
    VI_EnableSnapPipe_x190c0:
    /*000190c0*/ STR         R3, [SP, #12] 
    /*000190c4*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7038] 
    /*000190c8*/ MOV         R3, #250                    @ 0xfa 
    /*000190cc*/ STR         R5, [SP, #8] 
    /*000190d0*/ STR         R3, [SP] 
    /*000190d4*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7038] 
    /*000190d8*/ STR         SL, [SP, #4] 
    /*000190dc*/ MOV         R1, #16 
    /*000190e0*/ LDR         R3, [PC, #340]              @ 0x000000000001923c 
    /*000190e4*/ MOV         R0, #3 
    /*000190e8*/ BL          0x00000000000190E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_EnableSnapPipe_x190ec:
    /*000190ec*/ MOVW        R7, #32777                  @ 0x8009 
    /*000190f0*/ MOVT        R7, #40976                  @ 0xa010 
    /*000190f4*/ B           VI_EnableSnapPipe_x19070
    VI_EnableSnapPipe_x190f8:
    /*000190f8*/ MOV         R3, #171                    @ 0xab 
    /*000190fc*/ STR         R5, [SP, #4] 
    /*00019100*/ STR         R3, [SP] 
    /*00019104*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e78] 
    /*00019108*/ LDR         R3, [PC, #304]              @ 0x0000000000019240 
    /*0001910c*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e78] 
    /*00019110*/ MOV         R1, #16 
    /*00019114*/ MOV         R0, #3 
    /*00019118*/ MOVW        R7, #32775                  @ 0x8007 
    /*0001911c*/ BL          0x000000000001911C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019120*/ MOVT        R7, #40976                  @ 0xa010 
    /*00019124*/ B           VI_EnableSnapPipe_x19070
    VI_EnableSnapPipe_x19128:
    /*00019128*/ ADD         R3, R8, #36864              @ 0x9000 
    /*0001912c*/ STR         R9, [R3, #472]              @ 0x1d8 
    /*00019130*/ STR         R5, [R3, #476]              @ 0x1dc 
    /*00019134*/ STR         R5, [R3, #480]              @ 0x1e0 
    /*00019138*/ B           VI_EnableSnapPipe_x18ff0
    VI_EnableSnapPipe_x1913c:
    /*0001913c*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f5c] 
    /*00019140*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f5c] 
    /*00019144*/ MOV         R3, #193                    @ 0xc1 
    /*00019148*/ STR         R3, [SP] 
    VI_EnableSnapPipe_x1914c:
    /*0001914c*/ LDR         R3, [PC, #236]              @ 0x0000000000019240 
    /*00019150*/ MOV         R1, #16 
    /*00019154*/ MOV         R0, #3 
    /*00019158*/ MOVW        R7, #32777                  @ 0x8009 
    /*0001915c*/ BL          0x000000000001915C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019160*/ MOVT        R7, #40976                  @ 0xa010 
    /*00019164*/ B           VI_EnableSnapPipe_x19070
    VI_EnableSnapPipe_x19168:
    /*00019168*/ MOV         R3, #186                    @ 0xba 
    /*0001916c*/ STR         R5, [SP, #4] 
    /*00019170*/ STR         R3, [SP] 
    /*00019174*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f00] 
    /*00019178*/ LDR         R3, [PC, #192]              @ 0x0000000000019240 
    /*0001917c*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f00] 
    /*00019180*/ MOV         R1, #16 
    /*00019184*/ MOV         R0, #3 
    /*00019188*/ MOVW        R7, #32786                  @ 0x8012 
    /*0001918c*/ BL          0x000000000001918C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019190*/ MOVT        R7, #40976                  @ 0xa010 
    /*00019194*/ B           VI_EnableSnapPipe_x19070
    VI_EnableSnapPipe_x19198:
    /*00019198*/ MOV         R3, #199                    @ 0xc7 
    /*0001919c*/ STR         R9, [SP, #8] 
    /*000191a0*/ STR         R3, [SP] 
    /*000191a4*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6fa0] 
    /*000191a8*/ STR         R5, [SP, #4] 
    /*000191ac*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6fa0] 
    /*000191b0*/ LDR         R3, [PC, #136]              @ 0x0000000000019240 
    /*000191b4*/ MOV         R1, #16 
    /*000191b8*/ MOV         R0, #3 
    /*000191bc*/ MOVW        R7, #32786                  @ 0x8012 
    /*000191c0*/ BL          0x00000000000191C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000191c4*/ MOVT        R7, #40976                  @ 0xa010 
    /*000191c8*/ B           VI_EnableSnapPipe_x19070
    VI_EnableSnapPipe_x191cc:
    /*000191cc*/ ADD         R1, SP, #20 
    /*000191d0*/ MOV         R0, R6 
    /*000191d4*/ BL          0x00000000000191D4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000191d8*/ MOV         R0, R5 
    /*000191dc*/ BL          0x00000000000191DC          @ VI_SNAP_OfflinePipeInit [R_ARM_CALL: .text+0x18be4] 
    /*000191e0*/ CMP         R0, #0 
    /*000191e4*/ MOVNE       R7, R0 
    /*000191e8*/ BNE         VI_EnableSnapPipe_x19070
    /*000191ec*/ ADD         R1, SP, #20 
    /*000191f0*/ MOV         R0, R6 
    /*000191f4*/ BL          0x00000000000191F4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000191f8*/ B           VI_EnableSnapPipe_x1902c
    VI_EnableSnapPipe_x191fc:
    /*000191fc*/ STR         R1, [SP, #4] 
    /*00019200*/ MOV         R3, #240                    @ 0xf0 
    /*00019204*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ff8] 
    /*00019208*/ STR         R3, [SP] 
    /*0001920c*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ff8] 
    /*00019210*/ LDR         R3, [PC, #36]               @ 0x000000000001923c 
    /*00019214*/ MOV         R1, #16 
    /*00019218*/ MOV         R0, #3 
    /*0001921c*/ BL          0x000000000001921C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019220*/ B           VI_EnableSnapPipe_x190ec
    /*00019224*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00019228*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001922c*/ ANDEQ       R0, R0, IP, ROR LR 
    /*00019230*/ ANDEQ       R0, R0, R4, ROR R2          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00019234*/ ANDEQ       R0, R0, R4, ASR #3          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00019238*/ ANDEQ       R0, R0, R4, LSL R1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001923c*/ ANDEQ       R0, R0, R4, LSR #29 
    /*00019240*/ MULEQ       R0, R0, LR 
FUNC_END VI_EnableSnapPipe


FUNC_BEGIN VI_SNAP_DisablePipe
    /*00019244*/ PUSH        {R4, LR} 
    /*00019248*/ MOV         R4, R0 
    /*0001924c*/ BL          0x000000000001924C          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*00019250*/ CMP         R0, #0 
    /*00019254*/ POPNE       {R4, PC} 
    /*00019258*/ MOVW        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001925c*/ MOVT        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00019260*/ LDR         R3, [R2, R4, LSL #2] 
    /*00019264*/ ADD         R3, R3, #36864              @ 0x9000 
    /*00019268*/ LDR         R1, [R3, #472]              @ 0x1d8 
    /*0001926c*/ CMP         R1, #0 
    /*00019270*/ BEQ         VI_SNAP_DisablePipe_x19294
    /*00019274*/ LDR         R1, [R3, #476]              @ 0x1dc 
    /*00019278*/ LDR         R2, [R2, R1, LSL #2] 
    /*0001927c*/ CMP         R2, #0 
    /*00019280*/ ADDNE       R2, R2, #36864              @ 0x9000 
    /*00019284*/ MVNNE       R1, #0 
    /*00019288*/ STRNE       R0, [R2, #472]              @ 0x1d8 
    /*0001928c*/ STRNE       R1, [R2, #480]              @ 0x1e0 
    /*00019290*/ STRNE       R1, [R2, #476]              @ 0x1dc 
    VI_SNAP_DisablePipe_x19294:
    /*00019294*/ MVN         R2, #0 
    /*00019298*/ MOV         R1, #0 
    /*0001929c*/ STR         R2, [R3, #480]              @ 0x1e0 
    /*000192a0*/ STR         R1, [R3, #472]              @ 0x1d8 
    /*000192a4*/ STR         R2, [R3, #476]              @ 0x1dc 
    /*000192a8*/ POP         {R4, PC} 
FUNC_END VI_SNAP_DisablePipe


FUNC_BEGIN VI_DisableSnapPipe
    /*000192ac*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000192b0*/ SUB         SP, SP, #16 
    /*000192b4*/ MOV         R7, R0 
    /*000192b8*/ BL          0x00000000000192B8          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*000192bc*/ SUBS        R5, R0, #0 
    /*000192c0*/ BNE         VI_DisableSnapPipe_x19338
    /*000192c4*/ LDR         R4, [PC, #672]              @ 0x000000000001956c 
    /*000192c8*/ ADD         R6, R4, #704                @ 0x2c0 
    VI_DisableSnapPipe_x192cc:
    /*000192cc*/ MOV         R0, R4 
    /*000192d0*/ ADD         R4, R4, #176                @ 0xb0 
    /*000192d4*/ BL          0x00000000000192D4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000192d8*/ SUBS        R5, R0, #0 
    /*000192dc*/ BNE         VI_DisableSnapPipe_x19400
    /*000192e0*/ CMP         R6, R4 
    /*000192e4*/ BNE         VI_DisableSnapPipe_x192cc
    /*000192e8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000192ec*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000192f0*/ LDR         R4, [R3, R7, LSL #2] 
    /*000192f4*/ CMP         R4, #0 
    /*000192f8*/ BEQ         VI_DisableSnapPipe_x1940c
    /*000192fc*/ ADD         R6, R4, #36864              @ 0x9000 
    /*00019300*/ LDR         R3, [R6, #472]              @ 0x1d8 
    /*00019304*/ CMP         R3, #0 
    /*00019308*/ BEQ         VI_DisableSnapPipe_x19344
    /*0001930c*/ LDR         R3, [R6, #388]              @ 0x184 
    /*00019310*/ CMP         R3, #0 
    /*00019314*/ BNE         VI_DisableSnapPipe_x19370
    VI_DisableSnapPipe_x19318:
    /*00019318*/ LDR         R0, [PC, #592]              @ 0x0000000000019570 
    /*0001931c*/ BL          0x000000000001931C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019320*/ LDR         R0, [PC, #588]              @ 0x0000000000019574 
    /*00019324*/ BL          0x0000000000019324          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019328*/ LDR         R0, [PC, #584]              @ 0x0000000000019578 
    /*0001932c*/ BL          0x000000000001932C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019330*/ LDR         R0, [PC, #564]              @ 0x000000000001956c 
    /*00019334*/ BL          0x0000000000019334          @ osal_up [R_ARM_CALL: +0x0] 
    VI_DisableSnapPipe_x19338:
    /*00019338*/ MOV         R0, R5 
    /*0001933c*/ ADD         SP, SP, #16 
    /*00019340*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_DisableSnapPipe_x19344:
    /*00019344*/ MOV         R3, #592                    @ 0x250 
    /*00019348*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x709c] 
    /*0001934c*/ STR         R3, [SP] 
    /*00019350*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x709c] 
    /*00019354*/ LDR         R3, [PC, #544]              @ 0x000000000001957c 
    /*00019358*/ MOV         R1, #16 
    /*0001935c*/ MOV         R0, #3 
    /*00019360*/ MOVW        R5, #32777                  @ 0x8009 
    /*00019364*/ BL          0x0000000000019364          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019368*/ MOVT        R5, #40976                  @ 0xa010 
    /*0001936c*/ B           VI_DisableSnapPipe_x19318
    VI_DisableSnapPipe_x19370:
    /*00019370*/ MOV         R0, R7 
    /*00019374*/ BL          0x00000000000185B8 
    /*00019378*/ SUBS        R5, R0, #0 
    /*0001937c*/ BNE         VI_DisableSnapPipe_x194b8
    VI_DisableSnapPipe_x19380:
    /*00019380*/ MOV         R0, R7 
    /*00019384*/ BL          0x0000000000019384          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00019388*/ CMP         R0, #1 
    /*0001938c*/ MOV         R9, R0 
    /*00019390*/ BLS         VI_DisableSnapPipe_x1943c
    /*00019394*/ LDR         R3, [PC, #484]              @ 0x0000000000019580 
    /*00019398*/ MOV         R8, #176                    @ 0xb0 
    /*0001939c*/ ADD         SL, SP, #12 
    /*000193a0*/ MLA         R8, R8, R7, R3 
    VI_DisableSnapPipe_x193a4:
    /*000193a4*/ MOV         R1, SL 
    /*000193a8*/ MOV         R0, R8 
    /*000193ac*/ SUB         R9, R9, #2 
    /*000193b0*/ BL          0x00000000000193B0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000193b4*/ CMP         R9, #3 
    /*000193b8*/ BHI         VI_DisableSnapPipe_x193e0
    /*000193bc*/ LDR         R3, [R6, #388]              @ 0x184 
    /*000193c0*/ CMP         R3, #2 
    /*000193c4*/ BEQ         VI_DisableSnapPipe_x19544
    VI_DisableSnapPipe_x193c8:
    /*000193c8*/ MOV         R0, R7 
    /*000193cc*/ BL          0x00000000000193CC          @ VI_DRV_StopPipe [R_ARM_CALL: .text+0x30270] 
    /*000193d0*/ MOV         R2, #0 
    /*000193d4*/ MOV         R3, #1 
    /*000193d8*/ STR         R2, [R6, #1480]             @ 0x5c8 
    /*000193dc*/ STR         R3, [R6, #2144]             @ 0x860 
    VI_DisableSnapPipe_x193e0:
    /*000193e0*/ MOV         R0, R8 
    /*000193e4*/ MOV         R3, #0 
    /*000193e8*/ MOV         R1, SL 
    /*000193ec*/ STR         R3, [R6, #388]              @ 0x184 
    /*000193f0*/ BL          0x00000000000193F0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000193f4*/ MOV         R0, R7 
    /*000193f8*/ BL          0x00000000000193F8          @ VI_SNAP_DisablePipe [R_ARM_CALL: .text+0x19244] 
    /*000193fc*/ B           VI_DisableSnapPipe_x19318
    VI_DisableSnapPipe_x19400:
    /*00019400*/ MOV         R5, #65024                  @ 0xfe00 
    /*00019404*/ MOVT        R5, #65535                  @ 0xffff 
    /*00019408*/ B           VI_DisableSnapPipe_x19338
    VI_DisableSnapPipe_x1940c:
    /*0001940c*/ MOVW        R3, #585                    @ 0x249 
    /*00019410*/ STR         R7, [SP, #4] 
    /*00019414*/ STR         R3, [SP] 
    /*00019418*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d70] 
    /*0001941c*/ LDR         R3, [PC, #344]              @ 0x000000000001957c 
    /*00019420*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d70] 
    /*00019424*/ MOV         R1, #16 
    /*00019428*/ MOV         R0, #3 
    /*0001942c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00019430*/ BL          0x0000000000019430          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019434*/ MOVT        R5, #40976                  @ 0xa010 
    /*00019438*/ B           VI_DisableSnapPipe_x19318
    VI_DisableSnapPipe_x1943c:
    /*0001943c*/ ADD         R5, R4, #12288              @ 0x3000 
    /*00019440*/ LDR         R3, [R5, #2216]             @ 0x8a8 
    /*00019444*/ CMP         R3, #1 
    /*00019448*/ BEQ         VI_DisableSnapPipe_x194e0
    /*0001944c*/ LDR         R3, [PC, #300]              @ 0x0000000000019580 
    /*00019450*/ MOV         R8, #176                    @ 0xb0 
    /*00019454*/ ADD         SL, SP, #12 
    /*00019458*/ MLA         R8, R8, R7, R3 
    VI_DisableSnapPipe_x1945c:
    /*0001945c*/ ADD         R1, R4, #15360              @ 0x3c00 
    /*00019460*/ ADD         R1, R1, #56                 @ 0x38 
    /*00019464*/ MOV         R0, R7 
    /*00019468*/ BL          0x0000000000019468          @ VI_WaitCaptureFrameStop [R_ARM_CALL: .text+0x4660] 
    /*0001946c*/ MOV         R0, R7 
    /*00019470*/ BL          0x0000000000019470          @ VI_ReleasePipeCaptureVB [R_ARM_CALL: .text+0x7efc] 
    /*00019474*/ MOV         R1, SL 
    /*00019478*/ MOV         R0, R8 
    /*0001947c*/ BL          0x000000000001947C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00019480*/ MOV         R0, R7 
    /*00019484*/ BL          0x0000000000019484          @ VI_DRV_StopPipe [R_ARM_CALL: .text+0x30270] 
    /*00019488*/ MOV         R2, #0 
    /*0001948c*/ MOV         R3, #1 
    /*00019490*/ STR         R2, [R6, #1480]             @ 0x5c8 
    /*00019494*/ STR         R3, [R6, #2144]             @ 0x860 
    /*00019498*/ MOV         R1, SL 
    /*0001949c*/ MOV         R0, R8 
    /*000194a0*/ BL          0x00000000000194A0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000194a4*/ MOV         R0, R7 
    /*000194a8*/ BL          0x00000000000194A8          @ VI_SNAP_OfflinePipeDeInit [R_ARM_CALL: .text+0x18de8] 
    /*000194ac*/ SUBS        R5, R0, #0 
    /*000194b0*/ BNE         VI_DisableSnapPipe_x19318
    /*000194b4*/ B           VI_DisableSnapPipe_x193a4
    VI_DisableSnapPipe_x194b8:
    /*000194b8*/ MOVW        R3, #605                    @ 0x25d 
    /*000194bc*/ STR         R7, [SP, #4] 
    /*000194c0*/ STR         R3, [SP] 
    /*000194c4*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x70e0] 
    /*000194c8*/ LDR         R3, [PC, #172]              @ 0x000000000001957c 
    /*000194cc*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x70e0] 
    /*000194d0*/ MOV         R1, #16 
    /*000194d4*/ MOV         R0, #3 
    /*000194d8*/ BL          0x00000000000194D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000194dc*/ B           VI_DisableSnapPipe_x19380
    VI_DisableSnapPipe_x194e0:
    /*000194e0*/ STR         R7, [SP, #4] 
    /*000194e4*/ MOVW        R3, #614                    @ 0x266 
    /*000194e8*/ MOV         R1, #16 
    /*000194ec*/ STR         R3, [SP] 
    /*000194f0*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7120] 
    /*000194f4*/ LDR         R3, [PC, #128]              @ 0x000000000001957c 
    /*000194f8*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7120] 
    /*000194fc*/ MOV         R0, #4 
    /*00019500*/ BL          0x0000000000019500          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019504*/ LDR         R2, [PC, #116]              @ 0x0000000000019580 
    /*00019508*/ MOV         R3, #176                    @ 0xb0 
    /*0001950c*/ MOV         R1, #0 
    /*00019510*/ STR         R1, [R5, #2216]             @ 0x8a8 
    /*00019514*/ ADD         SL, SP, #12 
    /*00019518*/ MLA         R5, R3, R7, R2 
    /*0001951c*/ MOV         R1, SL 
    /*00019520*/ MOV         R0, R5 
    /*00019524*/ MOV         R8, R5 
    /*00019528*/ BL          0x0000000000019528          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001952c*/ MOV         R0, R7 
    /*00019530*/ BL          0x0000000000019530          @ VI_DRV_DisableWch [R_ARM_CALL: .text+0x301c4] 
    /*00019534*/ MOV         R1, SL 
    /*00019538*/ MOV         R0, R5 
    /*0001953c*/ BL          0x000000000001953C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00019540*/ B           VI_DisableSnapPipe_x1945c
    VI_DisableSnapPipe_x19544:
    /*00019544*/ MOV         R3, #644                    @ 0x284 
    /*00019548*/ STR         R7, [SP, #4] 
    /*0001954c*/ STR         R3, [SP] 
    /*00019550*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x715c] 
    /*00019554*/ LDR         R3, [PC, #32]               @ 0x000000000001957c 
    /*00019558*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x715c] 
    /*0001955c*/ MOV         R1, #16 
    /*00019560*/ MOV         R0, #4 
    /*00019564*/ BL          0x0000000000019564          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019568*/ B           VI_DisableSnapPipe_x193c8
    /*0001956c*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00019570*/ ANDEQ       R0, R0, R4, ROR R2          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00019574*/ ANDEQ       R0, R0, R4, ASR #3          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00019578*/ ANDEQ       R0, R0, R4, LSL R1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001957c*/ @           <UNDEFINED> instruction: 0x00000eb8 
    /*00019580*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_DisableSnapPipe


FUNC_BEGIN VI_SNAP_PrepareNextFrame
    /*00019584*/ PUSH        {R4, LR} 
    /*00019588*/ MOV         R4, R0 
    /*0001958c*/ BL          0x000000000001958C          @ VI_COMM_UpdateCurCrop [R_ARM_CALL: .text+0x12ce8] 
    /*00019590*/ MOV         R0, R4 
    /*00019594*/ BL          0x0000000000019594          @ VI_COMM_CapPrepareSrcFrame [R_ARM_CALL: .text+0x14ad0] 
    /*00019598*/ MOV         R0, R4 
    /*0001959c*/ BL          0x000000000001959C          @ VI_COMM_CapPrepareFrame [R_ARM_CALL: .text+0x14ad8] 
    /*000195a0*/ MOV         R0, R4 
    /*000195a4*/ POP         {R4, LR} 
    VI_SNAP_PrepareNextFrame_x195a8:
    /*000195a8*/ B           VI_SNAP_PrepareNextFrame_x195a8@ VI_COMM_CaptureFrame [R_ARM_JUMP24: .text+0x14ce8] 
FUNC_END VI_SNAP_PrepareNextFrame


FUNC_BEGIN VI_SNAP_SetIspProEnable
    /*000195ac*/ PUSH        {R4, LR} 
    /*000195b0*/ MOV         R4, R0 
    /*000195b4*/ MOV         R0, #28 
    /*000195b8*/ BL          0x00000000000195B8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000195bc*/ CMP         R0, #0 
    /*000195c0*/ BEQ         VI_SNAP_SetIspProEnable_x195f0
    /*000195c4*/ MOV         R0, #28 
    /*000195c8*/ BL          0x00000000000195C8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000195cc*/ LDR         R3, [R0, #52]               @ 0x34 
    /*000195d0*/ CMP         R3, #0 
    /*000195d4*/ BEQ         VI_SNAP_SetIspProEnable_x195f0
    /*000195d8*/ MOV         R0, #28 
    /*000195dc*/ BL          0x00000000000195DC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000195e0*/ LDR         R3, [R0, #52]               @ 0x34 
    /*000195e4*/ MOV         R0, R4 
    /*000195e8*/ POP         {R4, LR} 
    /*000195ec*/ BX          R3 
    VI_SNAP_SetIspProEnable_x195f0:
    /*000195f0*/ MVN         R0, #0 
    /*000195f4*/ POP         {R4, PC} 
FUNC_END VI_SNAP_SetIspProEnable


FUNC_BEGIN VI_SNAP_GetIspProCtrl
    /*000195f8*/ PUSH        {R4, R5, R6, LR} 
    /*000195fc*/ MOV         R4, R0 
    /*00019600*/ MOV         R0, #28 
    /*00019604*/ MOV         R5, R1 
    /*00019608*/ BL          0x0000000000019608          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001960c*/ CMP         R0, #0 
    /*00019610*/ BEQ         VI_SNAP_GetIspProCtrl_x19644
    /*00019614*/ MOV         R0, #28 
    /*00019618*/ BL          0x0000000000019618          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001961c*/ LDR         R3, [R0, #72]               @ 0x48 
    /*00019620*/ CMP         R3, #0 
    /*00019624*/ BEQ         VI_SNAP_GetIspProCtrl_x19644
    /*00019628*/ MOV         R0, #28 
    /*0001962c*/ BL          0x000000000001962C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019630*/ MOV         R1, R5 
    /*00019634*/ LDR         R3, [R0, #72]               @ 0x48 
    /*00019638*/ MOV         R0, R4 
    /*0001963c*/ POP         {R4, R5, R6, LR} 
    /*00019640*/ BX          R3 
    VI_SNAP_GetIspProCtrl_x19644:
    /*00019644*/ MVN         R0, #0 
    /*00019648*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_SNAP_GetIspProCtrl


FUNC_BEGIN VI_TriggerSnapPipe
    /*0001964c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00019650*/ SUB         SP, SP, #24 
    /*00019654*/ MOV         R3, #0 
    /*00019658*/ MOV         R6, R0 
    /*0001965c*/ STRB        R3, [SP, #19] 
    /*00019660*/ BL          0x0000000000019660          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*00019664*/ SUBS        R4, R0, #0 
    /*00019668*/ BEQ         VI_TriggerSnapPipe_x19678
    VI_TriggerSnapPipe_x1966c:
    /*0001966c*/ MOV         R0, R4 
    /*00019670*/ ADD         SP, SP, #24 
    /*00019674*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_TriggerSnapPipe_x19678:
    /*00019678*/ MOV         R4, #176                    @ 0xb0 
    /*0001967c*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00019680*/ MUL         R4, R4, R6 
    /*00019684*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00019688*/ ADD         R7, R4, #100                @ 0x64 
    /*0001968c*/ ADD         R7, R7, R5 
    /*00019690*/ MOV         R0, R7 
    /*00019694*/ BL          0x0000000000019694          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00019698*/ CMP         R0, #0 
    /*0001969c*/ BNE         VI_TriggerSnapPipe_x198a4
    /*000196a0*/ MOVW        R9, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000196a4*/ MOVT        R9, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000196a8*/ LDR         R8, [R9, R6, LSL #2] 
    /*000196ac*/ CMP         R8, #0 
    /*000196b0*/ BEQ         VI_TriggerSnapPipe_x197b4
    /*000196b4*/ ADD         R4, R4, #140                @ 0x8c 
    /*000196b8*/ ADD         SL, R8, #36864              @ 0x9000 
    /*000196bc*/ ADD         R5, R4, R5 
    /*000196c0*/ ADD         R1, SP, #20 
    /*000196c4*/ MOV         R0, R5 
    /*000196c8*/ BL          0x00000000000196C8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000196cc*/ LDR         R3, [SL, #472]              @ 0x1d8 
    /*000196d0*/ CMP         R3, #1 
    /*000196d4*/ BEQ         VI_TriggerSnapPipe_x19738
    /*000196d8*/ CMP         R3, #0 
    /*000196dc*/ BNE         VI_TriggerSnapPipe_x196f4
    /*000196e0*/ LDR         R3, [R9, R6, LSL #2] 
    /*000196e4*/ ADD         R3, R3, #36864              @ 0x9000 
    /*000196e8*/ LDR         R3, [R3, #1480]             @ 0x5c8 
    /*000196ec*/ CMP         R3, #0 
    /*000196f0*/ BEQ         VI_TriggerSnapPipe_x19880
    VI_TriggerSnapPipe_x196f4:
    /*000196f4*/ LDR         R3, [SL, #388]              @ 0x184 
    VI_TriggerSnapPipe_x196f8:
    /*000196f8*/ CMP         R3, #2 
    /*000196fc*/ ADD         R1, SP, #20 
    /*00019700*/ MOV         R0, R5 
    /*00019704*/ BEQ         VI_TriggerSnapPipe_x19780
    /*00019708*/ BL          0x0000000000019708          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001970c*/ ADD         R1, R8, #38656              @ 0x9700 
    /*00019710*/ ADD         R1, R1, #252                @ 0xfc 
    /*00019714*/ MOV         R0, R6 
    /*00019718*/ BL          0x00000000000185F4 
    /*0001971c*/ SUBS        R4, R0, #0 
    /*00019720*/ BEQ         VI_TriggerSnapPipe_x197e4
    VI_TriggerSnapPipe_x19724:
    /*00019724*/ MOV         R0, R7 
    /*00019728*/ BL          0x0000000000019728          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001972c*/ MOV         R0, R4 
    /*00019730*/ ADD         SP, SP, #24 
    /*00019734*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_TriggerSnapPipe_x19738:
    /*00019738*/ LDR         R3, [SL, #388]              @ 0x184 
    /*0001973c*/ CMP         R3, #0 
    /*00019740*/ BNE         VI_TriggerSnapPipe_x196f8
    /*00019744*/ ADD         R1, SP, #20 
    /*00019748*/ MOV         R0, R5 
    /*0001974c*/ BL          0x000000000001974C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00019750*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x71c8] 
    /*00019754*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x71c8] 
    /*00019758*/ MOVW        R3, #734                    @ 0x2de 
    /*0001975c*/ STR         R6, [SP, #4] 
    /*00019760*/ STR         R3, [SP] 
    VI_TriggerSnapPipe_x19764:
    /*00019764*/ LDR         R3, [PC, #572]              @ 0x00000000000199a8 
    /*00019768*/ MOV         R1, #16 
    /*0001976c*/ MOV         R0, #3 
    /*00019770*/ MOVW        R4, #32832                  @ 0x8040 
    /*00019774*/ BL          0x0000000000019774          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019778*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001977c*/ B           VI_TriggerSnapPipe_x19724
    VI_TriggerSnapPipe_x19780:
    /*00019780*/ BL          0x0000000000019780          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00019784*/ MOVW        R3, #753                    @ 0x2f1 
    /*00019788*/ STR         R6, [SP, #4] 
    /*0001978c*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7248] 
    /*00019790*/ STR         R3, [SP] 
    /*00019794*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7248] 
    /*00019798*/ LDR         R3, [PC, #520]              @ 0x00000000000199a8 
    /*0001979c*/ MOV         R1, #16 
    /*000197a0*/ MOV         R0, #3 
    /*000197a4*/ MOVW        R4, #32786                  @ 0x8012 
    /*000197a8*/ BL          0x00000000000197A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000197ac*/ MOVT        R4, #40976                  @ 0xa010 
    /*000197b0*/ B           VI_TriggerSnapPipe_x19724
    VI_TriggerSnapPipe_x197b4:
    /*000197b4*/ MOV         R3, #724                    @ 0x2d4 
    /*000197b8*/ STR         R6, [SP, #4] 
    /*000197bc*/ STR         R3, [SP] 
    /*000197c0*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d70] 
    /*000197c4*/ LDR         R3, [PC, #476]              @ 0x00000000000199a8 
    /*000197c8*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d70] 
    /*000197cc*/ MOV         R1, #16 
    /*000197d0*/ MOV         R0, #3 
    /*000197d4*/ MOVW        R4, #32773                  @ 0x8005 
    /*000197d8*/ BL          0x00000000000197D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000197dc*/ MOVT        R4, #40976                  @ 0xa010 
    /*000197e0*/ B           VI_TriggerSnapPipe_x19724
    VI_TriggerSnapPipe_x197e4:
    /*000197e4*/ MOV         R0, R6 
    /*000197e8*/ BL          0x00000000000197E8          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*000197ec*/ LDR         R3, [SL, #2044]             @ 0x7fc 
    /*000197f0*/ CMP         R3, #1 
    /*000197f4*/ MOV         R9, R0 
    /*000197f8*/ BEQ         VI_TriggerSnapPipe_x19838
    VI_TriggerSnapPipe_x197fc:
    /*000197fc*/ CMP         R9, #1 
    /*00019800*/ BLS         VI_TriggerSnapPipe_x198b0
    VI_TriggerSnapPipe_x19804:
    /*00019804*/ ADD         R1, SP, #20 
    /*00019808*/ MOV         R0, R5 
    /*0001980c*/ BL          0x000000000001980C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00019810*/ MOV         R2, #1 
    /*00019814*/ MOV         R3, #0 
    /*00019818*/ ADD         R1, SP, #20 
    /*0001981c*/ STR         R3, [SL, #484]              @ 0x1e4 
    /*00019820*/ MOV         R0, R5 
    /*00019824*/ MOV         R3, #2 
    /*00019828*/ STR         R2, [SL, #464]              @ 0x1d0 
    /*0001982c*/ STR         R3, [SL, #388]              @ 0x184 
    /*00019830*/ BL          0x0000000000019830          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00019834*/ B           VI_TriggerSnapPipe_x19724
    VI_TriggerSnapPipe_x19838:
    /*00019838*/ LDR         R0, [SL, #476]              @ 0x1dc 
    /*0001983c*/ BL          0x000000000001983C          @ VI_SNAP_SetIspProEnable [R_ARM_CALL: .text+0x195ac] 
    /*00019840*/ CMP         R0, #0 
    /*00019844*/ BEQ         VI_TriggerSnapPipe_x19930
    /*00019848*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x72a0] 
    /*0001984c*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x72a0] 
    /*00019850*/ STR         R0, [SP, #8] 
    /*00019854*/ MOVW        R3, #775                    @ 0x307 
    /*00019858*/ LDR         R0, [SL, #476]              @ 0x1dc 
    /*0001985c*/ STR         R3, [SP] 
    VI_TriggerSnapPipe_x19860:
    /*00019860*/ STR         R0, [SP, #4] 
    /*00019864*/ MOV         R1, #16 
    /*00019868*/ LDR         R3, [PC, #312]              @ 0x00000000000199a8 
    /*0001986c*/ MOV         R0, #3 
    /*00019870*/ MOVW        R4, #32777                  @ 0x8009 
    /*00019874*/ BL          0x0000000000019874          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019878*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001987c*/ B           VI_TriggerSnapPipe_x19724
    VI_TriggerSnapPipe_x19880:
    /*00019880*/ ADD         R1, SP, #20 
    /*00019884*/ MOV         R0, R5 
    /*00019888*/ BL          0x0000000000019888          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001988c*/ MOV         R3, #744                    @ 0x2e8 
    /*00019890*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x720c] 
    /*00019894*/ STR         R6, [SP, #4] 
    /*00019898*/ STR         R3, [SP] 
    /*0001989c*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x720c] 
    /*000198a0*/ B           VI_TriggerSnapPipe_x19764
    VI_TriggerSnapPipe_x198a4:
    /*000198a4*/ MOV         R4, #65024                  @ 0xfe00 
    /*000198a8*/ MOVT        R4, #65535                  @ 0xffff 
    /*000198ac*/ B           VI_TriggerSnapPipe_x1966c
    VI_TriggerSnapPipe_x198b0:
    /*000198b0*/ LDR         R3, [SL, #2044]             @ 0x7fc 
    /*000198b4*/ CMP         R3, #0 
    /*000198b8*/ BNE         VI_TriggerSnapPipe_x198c8
    /*000198bc*/ LDR         R3, [SL, #2060]             @ 0x80c 
    /*000198c0*/ CMP         R3, #0 
    /*000198c4*/ BNE         VI_TriggerSnapPipe_x19960
    VI_TriggerSnapPipe_x198c8:
    /*000198c8*/ LDR         R9, [SL, #472]              @ 0x1d8 
    /*000198cc*/ CMP         R9, #1 
    /*000198d0*/ BNE         VI_TriggerSnapPipe_x19804
    /*000198d4*/ ADD         R8, R8, #12288              @ 0x3000 
    /*000198d8*/ ADD         R1, SP, #20 
    /*000198dc*/ MOV         R0, R5 
    /*000198e0*/ BL          0x00000000000198E0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000198e4*/ MOV         R3, #0 
    /*000198e8*/ ADD         R1, SP, #20 
    /*000198ec*/ STR         R3, [R8, #3128]             @ 0xc38 
    /*000198f0*/ MOV         R0, R5 
    /*000198f4*/ STR         R9, [R8, #2216]             @ 0x8a8 
    /*000198f8*/ BL          0x00000000000198F8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000198fc*/ MOV         R0, R6 
    /*00019900*/ BL          0x0000000000019900          @ VI_SNAP_PrepareNextFrame [R_ARM_CALL: .text+0x19584] 
    /*00019904*/ MOV         R0, R6 
    /*00019908*/ BL          0x0000000000019908          @ VI_DRV_StartPipe [R_ARM_CALL: .text+0x30230] 
    /*0001990c*/ ADD         R1, SP, #20 
    /*00019910*/ MOV         R0, R5 
    /*00019914*/ BL          0x0000000000019914          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00019918*/ STR         R9, [SL, #1480]             @ 0x5c8 
    /*0001991c*/ STR         R9, [SL, #2144]             @ 0x860 
    /*00019920*/ ADD         R1, SP, #20 
    /*00019924*/ MOV         R0, R5 
    /*00019928*/ BL          0x0000000000019928          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001992c*/ B           VI_TriggerSnapPipe_x19804
    VI_TriggerSnapPipe_x19930:
    /*00019930*/ ADD         R1, SP, #19 
    /*00019934*/ LDR         R0, [SL, #476]              @ 0x1dc 
    /*00019938*/ BL          0x0000000000019938          @ VI_SNAP_GetIspProCtrl [R_ARM_CALL: .text+0x195f8] 
    /*0001993c*/ CMP         R0, #0 
    /*00019940*/ BNE         VI_TriggerSnapPipe_x1997c
    /*00019944*/ SUB         R3, R9, #2 
    /*00019948*/ BICS        R3, R3, #2 
    /*0001994c*/ BEQ         VI_TriggerSnapPipe_x19998
    /*00019950*/ LDRB        R3, [SP, #19] 
    /*00019954*/ ADD         R3, R3, #2 
    /*00019958*/ STR         R3, [SL, #504]              @ 0x1f8 
    /*0001995c*/ B           VI_TriggerSnapPipe_x197fc
    VI_TriggerSnapPipe_x19960:
    /*00019960*/ MOV         R0, #2 
    /*00019964*/ ADD         R8, R8, #37376              @ 0x9200 
    /*00019968*/ BL          0x0000000000019968          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001996c*/ LDR         R3, [R0] 
    /*00019970*/ BLX         R3 
    /*00019974*/ STRD        R0, [R8] 
    /*00019978*/ B           VI_TriggerSnapPipe_x19804
    VI_TriggerSnapPipe_x1997c:
    /*0001997c*/ STR         R0, [SP, #8] 
    /*00019980*/ MOVW        R3, #786                    @ 0x312 
    /*00019984*/ LDR         R0, [SL, #476]              @ 0x1dc 
    /*00019988*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x72e0] 
    /*0001998c*/ STR         R3, [SP] 
    /*00019990*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x72e0] 
    /*00019994*/ B           VI_TriggerSnapPipe_x19860
    VI_TriggerSnapPipe_x19998:
    /*00019998*/ LDRB        R0, [SP, #19] 
    /*0001999c*/ BL          0x000000000001999C          @ VI_DRV_SNAP_GetOnlineProDelayIntNum [R_ARM_CALL: .text+0x3c208] 
    /*000199a0*/ STR         R0, [SL, #504]              @ 0x1f8 
    /*000199a4*/ B           VI_TriggerSnapPipe_x197fc
    /*000199a8*/ ANDEQ       R0, R0, IP, ASR #29 
FUNC_END VI_TriggerSnapPipe


FUNC_BEGIN VI_MultiPipeSnapTrigger
    /*000199ac*/ MOV         R0, #0 
    /*000199b0*/ BX          LR 
FUNC_END VI_MultiPipeSnapTrigger


FUNC_BEGIN VI_SNAP_GetFirstZSLFrame
    /*000199b4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000199b8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000199bc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000199c0*/ MOV         R1, #1000                   @ 0x3e8 
    /*000199c4*/ LDR         R4, [R3, R0, LSL #2] 
    /*000199c8*/ SUB         SP, SP, #8 
    /*000199cc*/ MOV         R8, R0 
    /*000199d0*/ ADD         R9, R4, #36864              @ 0x9000 
    /*000199d4*/ ADD         R3, R4, #37376              @ 0x9200 
    /*000199d8*/ LDR         R2, [R9, #2812]             @ 0xafc 
    /*000199dc*/ LDRD        R6, [R3] 
    /*000199e0*/ UMULL       R2, R3, R2, R1 
    /*000199e4*/ CMP         R3, R7 
    /*000199e8*/ CMPEQ       R2, R6 
    /*000199ec*/ MOVHI       R6, #0 
    /*000199f0*/ MOVHI       R7, #0 
    /*000199f4*/ BHI         VI_SNAP_GetFirstZSLFrame_x19a00
    /*000199f8*/ SUBS        R6, R6, R2 
    /*000199fc*/ SBC         R7, R7, R3 
    VI_SNAP_GetFirstZSLFrame_x19a00:
    /*00019a00*/ ADD         R4, R4, #37120              @ 0x9100 
    /*00019a04*/ ADD         R4, R4, #172                @ 0xac 
    /*00019a08*/ B           VI_SNAP_GetFirstZSLFrame_x19a38
    VI_SNAP_GetFirstZSLFrame_x19a0c:
    /*00019a0c*/ SUBS        R5, SL, #580                @ 0x244 
    /*00019a10*/ BEQ         VI_SNAP_GetFirstZSLFrame_x19a60
    /*00019a14*/ BL          0x0000000000019A14          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00019a18*/ SUB         R3, SL, #576                @ 0x240 
    /*00019a1c*/ MOV         R1, #0 
    /*00019a20*/ MOV         R0, R5 
    /*00019a24*/ LDRD        R2, [R3, #236]              @ 0xec 
    /*00019a28*/ CMP         R7, R3 
    /*00019a2c*/ CMPEQ       R6, R2 
    /*00019a30*/ BLS         VI_SNAP_GetFirstZSLFrame_x19a9c
    /*00019a34*/ BL          0x0000000000019A34          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    VI_SNAP_GetFirstZSLFrame_x19a38:
    /*00019a38*/ MOV         R0, R4 
    /*00019a3c*/ BL          0x0000000000019A3C          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00019a40*/ SUBS        R5, R0, #0 
    /*00019a44*/ MOV         R0, R4 
    /*00019a48*/ BEQ         VI_SNAP_GetFirstZSLFrame_x19a90
    /*00019a4c*/ BL          0x0000000000019A4C          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*00019a50*/ SUBS        SL, R0, #0 
    /*00019a54*/ MOV         R0, R4 
    /*00019a58*/ MOV         R1, SL 
    /*00019a5c*/ BNE         VI_SNAP_GetFirstZSLFrame_x19a0c
    VI_SNAP_GetFirstZSLFrame_x19a60:
    /*00019a60*/ STR         R8, [SP, #4] 
    /*00019a64*/ MOV         R3, #992                    @ 0x3e0 
    /*00019a68*/ MOV         R1, #16 
    /*00019a6c*/ STR         R3, [SP] 
    /*00019a70*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x731c] 
    /*00019a74*/ LDR         R3, [PC, #52]               @ 0x0000000000019ab0 
    /*00019a78*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x731c] 
    /*00019a7c*/ MOV         R0, #3 
    /*00019a80*/ BL          0x0000000000019A80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019a84*/ MOV         R0, #0 
    /*00019a88*/ ADD         SP, SP, #8 
    /*00019a8c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SNAP_GetFirstZSLFrame_x19a90:
    /*00019a90*/ MOV         R0, R5 
    /*00019a94*/ ADD         SP, SP, #8 
    /*00019a98*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SNAP_GetFirstZSLFrame_x19a9c:
    /*00019a9c*/ MOV         R3, #2 
    /*00019aa0*/ STR         R1, [R9, #520]              @ 0x208 
    /*00019aa4*/ STR         R3, [SL, #-324]             @ 0xfffffebc 
    /*00019aa8*/ ADD         SP, SP, #8 
    /*00019aac*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*00019ab0*/ ANDEQ       R0, R0, R0, ROR #29 
FUNC_END VI_SNAP_GetFirstZSLFrame


FUNC_BEGIN VI_SNAP_GetRemainingZSLFrame
    /*00019ab4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00019ab8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00019abc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00019ac0*/ MOV         R8, R0 
    /*00019ac4*/ LDR         R4, [R3, R0, LSL #2] 
    /*00019ac8*/ SUB         SP, SP, #8 
    /*00019acc*/ ADD         R6, R4, #37120              @ 0x9100 
    /*00019ad0*/ ADD         R4, R4, #36864              @ 0x9000 
    /*00019ad4*/ ADD         R6, R6, #172                @ 0xac 
    /*00019ad8*/ B           VI_SNAP_GetRemainingZSLFrame_x19b24
    VI_SNAP_GetRemainingZSLFrame_x19adc:
    /*00019adc*/ SUBS        R7, R5, #580                @ 0x244 
    /*00019ae0*/ BEQ         VI_SNAP_GetRemainingZSLFrame_x19b4c
    /*00019ae4*/ LDR         R3, [R4, #520]              @ 0x208 
    /*00019ae8*/ ADD         R3, R3, #1 
    /*00019aec*/ STR         R3, [R4, #520]              @ 0x208 
    /*00019af0*/ BL          0x0000000000019AF0          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00019af4*/ LDR         R3, [R4, #2816]             @ 0xb00 
    /*00019af8*/ MOV         R1, #0 
    /*00019afc*/ MOV         R0, R7 
    /*00019b00*/ CMP         R3, R1 
    /*00019b04*/ ADD         IP, R3, #1 
    /*00019b08*/ BEQ         VI_SNAP_GetRemainingZSLFrame_x19b88
    /*00019b0c*/ LDR         R2, [R4, #520]              @ 0x208 
    /*00019b10*/ CMP         R3, R2 
    /*00019b14*/ BEQ         VI_SNAP_GetRemainingZSLFrame_x19b98
    /*00019b18*/ CMP         R2, IP 
    /*00019b1c*/ BEQ         VI_SNAP_GetRemainingZSLFrame_x19bac
    /*00019b20*/ BL          0x0000000000019B20          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    VI_SNAP_GetRemainingZSLFrame_x19b24:
    /*00019b24*/ MOV         R0, R6 
    /*00019b28*/ BL          0x0000000000019B28          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00019b2c*/ SUBS        R7, R0, #0 
    /*00019b30*/ MOV         R0, R6 
    /*00019b34*/ BEQ         VI_SNAP_GetRemainingZSLFrame_x19b7c
    /*00019b38*/ BL          0x0000000000019B38          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*00019b3c*/ SUBS        R5, R0, #0 
    /*00019b40*/ MOV         R0, R6 
    /*00019b44*/ MOV         R1, R5 
    /*00019b48*/ BNE         VI_SNAP_GetRemainingZSLFrame_x19adc
    VI_SNAP_GetRemainingZSLFrame_x19b4c:
    /*00019b4c*/ STR         R8, [SP, #4] 
    /*00019b50*/ MOVW        R3, #1025                   @ 0x401 
    /*00019b54*/ MOV         R1, #16 
    /*00019b58*/ STR         R3, [SP] 
    /*00019b5c*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x731c] 
    /*00019b60*/ LDR         R3, [PC, #96]               @ 0x0000000000019bc8 
    /*00019b64*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x731c] 
    /*00019b68*/ MOV         R0, #3 
    /*00019b6c*/ BL          0x0000000000019B6C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019b70*/ MOV         R0, #0 
    /*00019b74*/ ADD         SP, SP, #8 
    /*00019b78*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SNAP_GetRemainingZSLFrame_x19b7c:
    /*00019b7c*/ MOV         R0, R7 
    /*00019b80*/ ADD         SP, SP, #8 
    /*00019b84*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SNAP_GetRemainingZSLFrame_x19b88:
    /*00019b88*/ MOV         R3, #2 
    /*00019b8c*/ STR         R3, [R5, #-324]             @ 0xfffffebc 
    /*00019b90*/ ADD         SP, SP, #8 
    /*00019b94*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SNAP_GetRemainingZSLFrame_x19b98:
    /*00019b98*/ MOV         R0, R7 
    /*00019b9c*/ MOV         R3, #4 
    /*00019ba0*/ STR         R3, [R5, #-324]             @ 0xfffffebc 
    /*00019ba4*/ ADD         SP, SP, #8 
    /*00019ba8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SNAP_GetRemainingZSLFrame_x19bac:
    /*00019bac*/ MOV         R0, R7 
    /*00019bb0*/ MOV         R2, #2 
    /*00019bb4*/ MOV         R3, #0 
    /*00019bb8*/ STR         R2, [R5, #-324]             @ 0xfffffebc 
    /*00019bbc*/ STR         R3, [R4, #520]              @ 0x208 
    /*00019bc0*/ ADD         SP, SP, #8 
    /*00019bc4*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*00019bc8*/ STRDEQ      R0, [R0], -IP 
FUNC_END VI_SNAP_GetRemainingZSLFrame


FUNC_BEGIN VI_SNAP_GetZSLFrame
    /*00019bcc*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00019bd0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00019bd4*/ LDR         R3, [R3, R0, LSL #2] 
    /*00019bd8*/ ADD         R3, R3, #36864              @ 0x9000 
    /*00019bdc*/ LDR         R3, [R3, #464]              @ 0x1d0 
    /*00019be0*/ CMP         R3, #0 
    /*00019be4*/ BNE         VI_SNAP_GetZSLFrame_x19bec
    VI_SNAP_GetZSLFrame_x19be8:
    /*00019be8*/ B           VI_SNAP_GetZSLFrame_x19be8  @ VI_SNAP_GetRemainingZSLFrame [R_ARM_JUMP24: .text+0x19ab4] 
    VI_SNAP_GetZSLFrame_x19bec:
    /*00019bec*/ B           VI_SNAP_GetZSLFrame_x19bec  @ VI_SNAP_GetFirstZSLFrame [R_ARM_JUMP24: .text+0x199b4] 
FUNC_END VI_SNAP_GetZSLFrame


FUNC_BEGIN VI_SNAP_OfflineIrqProc
    /*00019bf0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00019bf4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00019bf8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00019bfc*/ SUB         SP, SP, #20 
    /*00019c00*/ LDR         R5, [R3, R0, LSL #2] 
    /*00019c04*/ ADD         FP, R5, #36864              @ 0x9000 
    /*00019c08*/ LDR         R1, [FP, #388]              @ 0x184 
    /*00019c0c*/ CMP         R1, #2 
    /*00019c10*/ BEQ         VI_SNAP_OfflineIrqProc_x19c1c
    VI_SNAP_OfflineIrqProc_x19c14:
    /*00019c14*/ ADD         SP, SP, #20 
    /*00019c18*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SNAP_OfflineIrqProc_x19c1c:
    /*00019c1c*/ LDR         R2, [FP, #2788]             @ 0xae4 
    /*00019c20*/ STR         R0, [SP, #12] 
    /*00019c24*/ CMP         R2, #1 
    /*00019c28*/ BEQ         VI_SNAP_OfflineIrqProc_x19eec
    /*00019c2c*/ CMP         R2, #0 
    /*00019c30*/ BNE         VI_SNAP_OfflineIrqProc_x19c14
    /*00019c34*/ LDR         R2, [FP, #2804]             @ 0xaf4 
    /*00019c38*/ LDR         R3, [FP, #2796]             @ 0xaec 
    /*00019c3c*/ CMP         R2, #0 
    /*00019c40*/ LDR         R9, [FP, #2800]             @ 0xaf0 
    /*00019c44*/ STR         R3, [SP, #8] 
    /*00019c48*/ BNE         VI_SNAP_OfflineIrqProc_x19f18
    VI_SNAP_OfflineIrqProc_x19c4c:
    /*00019c4c*/ ADD         R6, R5, #14464              @ 0x3880 
    /*00019c50*/ LDR         R2, [FP, #484]              @ 0x1e4 
    /*00019c54*/ ADD         R6, R6, #56                 @ 0x38 
    VI_SNAP_OfflineIrqProc_x19c58:
    /*00019c58*/ LDR         R3, [SP, #8] 
    /*00019c5c*/ ADD         R2, R2, #1 
    /*00019c60*/ STR         R2, [FP, #484]              @ 0x1e4 
    /*00019c64*/ CMP         R2, R3 
    /*00019c68*/ MOVHI       R3, #0 
    /*00019c6c*/ MOVLS       R3, #1 
    /*00019c70*/ CMP         R6, #0 
    /*00019c74*/ MOVEQ       R3, #0 
    /*00019c78*/ CMP         R3, #0 
    /*00019c7c*/ BEQ         VI_SNAP_OfflineIrqProc_x19ddc
    VI_SNAP_OfflineIrqProc_x19c80:
    /*00019c80*/ LDR         R2, [FP, #464]              @ 0x1d0 
    /*00019c84*/ ADD         R8, R5, #37120              @ 0x9100 
    /*00019c88*/ CMP         R2, #0 
    /*00019c8c*/ ADDEQ       R8, R8, #136                @ 0x88 
    /*00019c90*/ BEQ         VI_SNAP_OfflineIrqProc_x19d60
    /*00019c94*/ CMP         R9, #0 
    /*00019c98*/ ADDEQ       R8, R8, #136                @ 0x88 
    /*00019c9c*/ BEQ         VI_SNAP_OfflineIrqProc_x19d58
    /*00019ca0*/ MOV         R7, #0 
    /*00019ca4*/ ADD         R8, R8, #136                @ 0x88 
    /*00019ca8*/ MOV         SL, #4 
    /*00019cac*/ B           VI_SNAP_OfflineIrqProc_x19cf4
    VI_SNAP_OfflineIrqProc_x19cb0:
    /*00019cb0*/ SUBS        R0, R4, #580                @ 0x244 
    /*00019cb4*/ BEQ         VI_SNAP_OfflineIrqProc_x19d10
    /*00019cb8*/ BL          0x0000000000019CB8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019cbc*/ MOV         R0, #2 
    /*00019cc0*/ BL          0x0000000000019CC0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019cc4*/ LDR         R3, [R0] 
    /*00019cc8*/ BLX         R3 
    /*00019ccc*/ STR         SL, [R4, #-324]             @ 0xfffffebc 
    /*00019cd0*/ STRD        R0, [R4, #-164]             @ 0xffffff5c 
    /*00019cd4*/ MOV         R1, #0 
    /*00019cd8*/ MOV         R0, R6 
    /*00019cdc*/ BL          0x0000000000019CDC          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00019ce0*/ MOV         R1, R4 
    /*00019ce4*/ MOV         R0, R8 
    /*00019ce8*/ BL          0x0000000000019CE8          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    /*00019cec*/ CMP         R7, R9 
    /*00019cf0*/ BEQ         VI_SNAP_OfflineIrqProc_x19d58
    VI_SNAP_OfflineIrqProc_x19cf4:
    /*00019cf4*/ MOV         R0, R8 
    /*00019cf8*/ ADD         R7, R7, #1 
    /*00019cfc*/ BL          0x0000000000019CFC          @ VI_QueueGetFree [R_ARM_CALL: .text+0x161cc] 
    /*00019d00*/ MOV         R2, #448                    @ 0x1c0 
    /*00019d04*/ MOV         R1, R6 
    /*00019d08*/ SUBS        R4, R0, #0 
    /*00019d0c*/ BNE         VI_SNAP_OfflineIrqProc_x19cb0
    VI_SNAP_OfflineIrqProc_x19d10:
    /*00019d10*/ ADD         R5, R5, #32768              @ 0x8000 
    /*00019d14*/ LDR         R3, [PC, #796]              @ 0x000000000001a038 
    /*00019d18*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7358] 
    /*00019d1c*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7358] 
    /*00019d20*/ LDR         IP, [R5, #3712]             @ 0xe80 
    /*00019d24*/ MOVW        LR, #1166                   @ 0x48e 
    VI_SNAP_OfflineIrqProc_x19d28:
    /*00019d28*/ ADD         IP, IP, #1 
    /*00019d2c*/ STR         IP, [R5, #3712]             @ 0xe80 
    /*00019d30*/ LDR         IP, [SP, #12] 
    /*00019d34*/ MOV         R1, #16 
    /*00019d38*/ LDR         R0, [R5, #3792]             @ 0xed0 
    /*00019d3c*/ ADD         R0, R0, #1 
    /*00019d40*/ STR         R0, [R5, #3792]             @ 0xed0 
    /*00019d44*/ STR         IP, [SP, #4] 
    /*00019d48*/ MOV         R0, #3 
    /*00019d4c*/ STR         LR, [SP] 
    /*00019d50*/ BL          0x0000000000019D50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019d54*/ B           VI_SNAP_OfflineIrqProc_x19c14
    VI_SNAP_OfflineIrqProc_x19d58:
    /*00019d58*/ MOV         R2, #0 
    /*00019d5c*/ STR         R2, [FP, #464]              @ 0x1d0 
    VI_SNAP_OfflineIrqProc_x19d60:
    /*00019d60*/ MOV         R0, R8 
    /*00019d64*/ BL          0x0000000000019D64          @ VI_QueueGetFree [R_ARM_CALL: .text+0x161cc] 
    /*00019d68*/ SUBS        R4, R0, #0 
    /*00019d6c*/ BEQ         VI_SNAP_OfflineIrqProc_x19fac
    /*00019d70*/ SUBS        R0, R4, #580                @ 0x244 
    /*00019d74*/ BEQ         VI_SNAP_OfflineIrqProc_x19fac
    /*00019d78*/ MOV         R2, #448                    @ 0x1c0 
    /*00019d7c*/ MOV         R1, R6 
    /*00019d80*/ BL          0x0000000000019D80          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019d84*/ MOV         R0, #2 
    /*00019d88*/ BL          0x0000000000019D88          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019d8c*/ LDR         R2, [R0] 
    /*00019d90*/ BLX         R2 
    /*00019d94*/ STRD        R0, [R4, #-164]             @ 0xffffff5c 
    /*00019d98*/ LDR         R2, [FP, #2788]             @ 0xae4 
    /*00019d9c*/ CMP         R2, #0 
    /*00019da0*/ BEQ         VI_SNAP_OfflineIrqProc_x19f08
    VI_SNAP_OfflineIrqProc_x19da4:
    /*00019da4*/ MOV         R2, #2 
    /*00019da8*/ STR         R2, [R4, #-324]             @ 0xfffffebc 
    VI_SNAP_OfflineIrqProc_x19dac:
    /*00019dac*/ LDR         R2, [FP, #484]              @ 0x1e4 
    /*00019db0*/ MOV         R1, #0 
    /*00019db4*/ LDR         R3, [SP, #8] 
    /*00019db8*/ MOV         R0, R6 
    /*00019dbc*/ CMP         R2, R3 
    /*00019dc0*/ LDREQ       R2, [R4, #-324]             @ 0xfffffebc 
    /*00019dc4*/ ORREQ       R2, R2, #-2147483648        @ 0x80000000 
    /*00019dc8*/ STREQ       R2, [R4, #-324]             @ 0xfffffebc 
    /*00019dcc*/ BL          0x0000000000019DCC          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00019dd0*/ MOV         R1, R4 
    /*00019dd4*/ MOV         R0, R8 
    /*00019dd8*/ BL          0x0000000000019DD8          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    VI_SNAP_OfflineIrqProc_x19ddc:
    /*00019ddc*/ LDR         R1, [FP, #2788]             @ 0xae4 
    /*00019de0*/ CMP         R1, #0 
    /*00019de4*/ BNE         VI_SNAP_OfflineIrqProc_x19e00
    /*00019de8*/ LDR         R2, [FP, #2804]             @ 0xaf4 
    /*00019dec*/ CMP         R2, #0 
    /*00019df0*/ CMPNE       R6, #0 
    /*00019df4*/ BEQ         VI_SNAP_OfflineIrqProc_x19e00
    /*00019df8*/ MOV         R0, R6 
    /*00019dfc*/ BL          0x0000000000019DFC          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    VI_SNAP_OfflineIrqProc_x19e00:
    /*00019e00*/ LDR         R2, [FP, #484]              @ 0x1e4 
    VI_SNAP_OfflineIrqProc_x19e04:
    /*00019e04*/ LDR         R3, [SP, #8] 
    /*00019e08*/ ADD         R9, R9, R3 
    /*00019e0c*/ CMP         R2, R9 
    /*00019e10*/ BHI         VI_SNAP_OfflineIrqProc_x19c14
    /*00019e14*/ ADD         R4, R5, #37120              @ 0x9100 
    /*00019e18*/ ADD         R4, R4, #136                @ 0x88 
    /*00019e1c*/ MOV         R0, R4 
    /*00019e20*/ BL          0x0000000000019E20          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*00019e24*/ CMP         R0, #0 
    /*00019e28*/ BEQ         VI_SNAP_OfflineIrqProc_x19c14
    /*00019e2c*/ ADD         R8, R5, #4 
    /*00019e30*/ MOV         R0, R8 
    /*00019e34*/ BL          0x0000000000019E34          @ VI_QueueGetFree [R_ARM_CALL: .text+0x161cc] 
    /*00019e38*/ SUBS        R6, R0, #0 
    /*00019e3c*/ BEQ         VI_SNAP_OfflineIrqProc_x19ff0
    /*00019e40*/ SUBS        R9, R6, #580                @ 0x244 
    /*00019e44*/ BEQ         VI_SNAP_OfflineIrqProc_x19ff0
    /*00019e48*/ MOV         R0, R4 
    /*00019e4c*/ BL          0x0000000000019E4C          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*00019e50*/ SUBS        R7, R0, #0 
    /*00019e54*/ BEQ         VI_SNAP_OfflineIrqProc_x1a00c
    /*00019e58*/ SUBS        R1, R7, #580                @ 0x244 
    /*00019e5c*/ BEQ         VI_SNAP_OfflineIrqProc_x1a00c
    /*00019e60*/ ADD         R3, R5, #12288              @ 0x3000 
    /*00019e64*/ MOV         R2, #448                    @ 0x1c0 
    /*00019e68*/ MOV         R0, R9 
    /*00019e6c*/ LDR         R3, [R3, #3128]             @ 0xc38 
    /*00019e70*/ CMP         R3, #2 
    /*00019e74*/ LDREQ       R3, [R7, #-324]             @ 0xfffffebc 
    /*00019e78*/ ORREQ       R3, R3, #-2147483648        @ 0x80000000 
    /*00019e7c*/ STREQ       R3, [R7, #-324]             @ 0xfffffebc 
    /*00019e80*/ BL          0x0000000000019E80          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019e84*/ SUB         R2, R6, #108                @ 0x6c 
    /*00019e88*/ SUB         R1, R6, #132                @ 0x84 
    /*00019e8c*/ LDR         R0, [SP, #12] 
    /*00019e90*/ BL          0x0000000000019E90          @ VI_DRV_GetBeCfg [R_ARM_CALL: .text+0x385b0] 
    /*00019e94*/ CMP         R0, #0 
    /*00019e98*/ BNE         VI_SNAP_OfflineIrqProc_x19f58
    /*00019e9c*/ ADD         R5, R5, #36352              @ 0x8e00 
    /*00019ea0*/ MOV         R1, R6 
    /*00019ea4*/ MOV         R0, R8 
    /*00019ea8*/ BL          0x0000000000019EA8          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    /*00019eac*/ LDRD        R2, [R5, #200]              @ 0xc8 
    /*00019eb0*/ MOV         R1, R7 
    /*00019eb4*/ MOV         R0, R4 
    /*00019eb8*/ ADDS        R2, R2, #1 
    /*00019ebc*/ ADC         R3, R3, #0 
    /*00019ec0*/ STRD        R2, [R5, #200]              @ 0xc8 
    /*00019ec4*/ BL          0x0000000000019EC4          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00019ec8*/ LDR         R0, [SP, #12] 
    /*00019ecc*/ BL          0x0000000000019ECC          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00019ed0*/ CMP         R0, #5 
    /*00019ed4*/ BHI         VI_SNAP_OfflineIrqProc_x19fc8
    /*00019ed8*/ MOV         R1, R0 
    /*00019edc*/ LDR         R0, [SP, #12] 
    /*00019ee0*/ ADD         SP, SP, #20 
    /*00019ee4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    VI_SNAP_OfflineIrqProc_x19ee8:
    /*00019ee8*/ B           VI_SNAP_OfflineIrqProc_x19ee8@ VI_StartOneTask [R_ARM_JUMP24: .text+0x1ed4] 
    VI_SNAP_OfflineIrqProc_x19eec:
    /*00019eec*/ LDR         R2, [FP, #504]              @ 0x1f8 
    /*00019ef0*/ CMP         R2, #0 
    /*00019ef4*/ BNE         VI_SNAP_OfflineIrqProc_x19c14
    /*00019ef8*/ LDR         R3, [FP, #2796]             @ 0xaec 
    /*00019efc*/ LDR         R9, [FP, #2800]             @ 0xaf0 
    /*00019f00*/ STR         R3, [SP, #8] 
    /*00019f04*/ B           VI_SNAP_OfflineIrqProc_x19c4c
    VI_SNAP_OfflineIrqProc_x19f08:
    /*00019f08*/ LDR         R2, [FP, #2804]             @ 0xaf4 
    /*00019f0c*/ CMP         R2, #0 
    /*00019f10*/ BNE         VI_SNAP_OfflineIrqProc_x19dac
    /*00019f14*/ B           VI_SNAP_OfflineIrqProc_x19da4
    VI_SNAP_OfflineIrqProc_x19f18:
    /*00019f18*/ BL          0x0000000000019F18          @ VI_SNAP_GetZSLFrame [R_ARM_CALL: .text+0x19bcc] 
    /*00019f1c*/ LDR         R2, [FP, #484]              @ 0x1e4 
    /*00019f20*/ LDR         R3, [SP, #8] 
    /*00019f24*/ CMP         R3, R2 
    /*00019f28*/ MOV         R6, R0 
    /*00019f2c*/ BLS         VI_SNAP_OfflineIrqProc_x19c58
    /*00019f30*/ CMP         R0, #0 
    /*00019f34*/ BEQ         VI_SNAP_OfflineIrqProc_x19e04
    /*00019f38*/ LDR         R1, [R0, #256]              @ 0x100 
    /*00019f3c*/ TST         R1, #2 
    /*00019f40*/ BEQ         VI_SNAP_OfflineIrqProc_x19c80
    /*00019f44*/ ADD         R2, R2, #1 
    /*00019f48*/ STR         R2, [FP, #484]              @ 0x1e4 
    /*00019f4c*/ CMP         R3, R2 
    /*00019f50*/ BCC         VI_SNAP_OfflineIrqProc_x19ddc
    /*00019f54*/ B           VI_SNAP_OfflineIrqProc_x19c80
    VI_SNAP_OfflineIrqProc_x19f58:
    /*00019f58*/ LDR         R3, [SP, #12] 
    /*00019f5c*/ MOV         R1, #16 
    /*00019f60*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7464] 
    /*00019f64*/ MOV         R0, #3 
    /*00019f68*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7464] 
    /*00019f6c*/ STR         R3, [SP, #4] 
    /*00019f70*/ MOVW        R3, #1244                   @ 0x4dc 
    /*00019f74*/ STR         R3, [SP] 
    /*00019f78*/ LDR         R3, [PC, #184]              @ 0x000000000001a038 
    /*00019f7c*/ BL          0x0000000000019F7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019f80*/ MOV         R0, R9 
    /*00019f84*/ MOV         R1, #0 
    /*00019f88*/ BL          0x0000000000019F88          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00019f8c*/ MOV         R1, R6 
    /*00019f90*/ MOV         R0, R8 
    /*00019f94*/ BL          0x0000000000019F94          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00019f98*/ MOV         R1, R7 
    /*00019f9c*/ MOV         R0, R4 
    /*00019fa0*/ ADD         SP, SP, #20 
    /*00019fa4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    VI_SNAP_OfflineIrqProc_x19fa8:
    /*00019fa8*/ B           VI_SNAP_OfflineIrqProc_x19fa8@ VI_QueuePutFree [R_ARM_JUMP24: .text+0x16490] 
    VI_SNAP_OfflineIrqProc_x19fac:
    /*00019fac*/ ADD         R5, R5, #32768              @ 0x8000 
    /*00019fb0*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7358] 
    /*00019fb4*/ MOVW        LR, #1185                   @ 0x4a1 
    /*00019fb8*/ LDR         R3, [PC, #120]              @ 0x000000000001a038 
    /*00019fbc*/ LDR         IP, [R5, #3712]             @ 0xe80 
    /*00019fc0*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7358] 
    /*00019fc4*/ B           VI_SNAP_OfflineIrqProc_x19d28
    VI_SNAP_OfflineIrqProc_x19fc8:
    /*00019fc8*/ STR         R0, [SP, #4] 
    /*00019fcc*/ MOVW        R3, #1263                   @ 0x4ef 
    /*00019fd0*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74a0] 
    /*00019fd4*/ STR         R3, [SP] 
    /*00019fd8*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74a0] 
    /*00019fdc*/ LDR         R3, [PC, #84]               @ 0x000000000001a038 
    /*00019fe0*/ MOV         R1, #16 
    /*00019fe4*/ MOV         R0, #3 
    /*00019fe8*/ BL          0x0000000000019FE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019fec*/ B           VI_SNAP_OfflineIrqProc_x19c14
    VI_SNAP_OfflineIrqProc_x19ff0:
    /*00019ff0*/ ADD         R5, R5, #32768              @ 0x8000 
    /*00019ff4*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x73a0] 
    /*00019ff8*/ MOVW        LR, #1223                   @ 0x4c7 
    /*00019ffc*/ LDR         R3, [PC, #52]               @ 0x000000000001a038 
    /*0001a000*/ LDR         IP, [R5, #3712]             @ 0xe80 
    /*0001a004*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x73a0] 
    /*0001a008*/ B           VI_SNAP_OfflineIrqProc_x19d28
    VI_SNAP_OfflineIrqProc_x1a00c:
    /*0001a00c*/ LDR         R3, [SP, #12] 
    /*0001a010*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x73e4] 
    /*0001a014*/ MOV         R1, #16 
    /*0001a018*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x73e4] 
    /*0001a01c*/ MOV         R0, #3 
    /*0001a020*/ STR         R3, [SP, #4] 
    /*0001a024*/ MOVW        R3, #1230                   @ 0x4ce 
    /*0001a028*/ STR         R3, [SP] 
    /*0001a02c*/ LDR         R3, [PC, #4]                @ 0x000000000001a038 
    /*0001a030*/ BL          0x000000000001A030          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a034*/ B           VI_SNAP_OfflineIrqProc_x19c14
    /*0001a038*/ ANDEQ       R0, R0, IP, LSL PC 
FUNC_END VI_SNAP_OfflineIrqProc


FUNC_BEGIN VI_SNAP_GetIspConfigInfo
    /*0001a03c*/ PUSH        {R4, R5, R6, LR} 
    /*0001a040*/ MOV         R4, R0 
    /*0001a044*/ MOV         R0, #28 
    /*0001a048*/ MOV         R5, R1 
    /*0001a04c*/ BL          0x000000000001A04C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a050*/ CMP         R0, #0 
    /*0001a054*/ BEQ         VI_SNAP_GetIspConfigInfo_x1a088
    /*0001a058*/ MOV         R0, #28 
    /*0001a05c*/ BL          0x000000000001A05C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a060*/ LDR         R3, [R0, #48]               @ 0x30 
    /*0001a064*/ CMP         R3, #0 
    /*0001a068*/ BEQ         VI_SNAP_GetIspConfigInfo_x1a088
    /*0001a06c*/ MOV         R0, #28 
    /*0001a070*/ BL          0x000000000001A070          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a074*/ MOV         R1, R5 
    /*0001a078*/ LDR         R3, [R0, #48]               @ 0x30 
    /*0001a07c*/ MOV         R0, R4 
    /*0001a080*/ POP         {R4, R5, R6, LR} 
    /*0001a084*/ BX          R3 
    VI_SNAP_GetIspConfigInfo_x1a088:
    /*0001a088*/ MVN         R0, #0 
    /*0001a08c*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_SNAP_GetIspConfigInfo


FUNC_BEGIN VI_SNAP_GetIspConfig
    /*0001a090*/ LDR         R3, [PC, #552]              @ 0x000000000001a2c0 
    /*0001a094*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0001a098*/ MOV         R4, #176                    @ 0xb0 
    /*0001a09c*/ MLA         R4, R4, R0, R3 
    /*0001a0a0*/ SUB         SP, SP, #24 
    /*0001a0a4*/ MOV         R5, R0 
    /*0001a0a8*/ MOV         R8, R1 
    /*0001a0ac*/ ADD         R1, SP, #20 
    /*0001a0b0*/ MOV         R0, R4 
    /*0001a0b4*/ BL          0x000000000001A0B4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001a0b8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001a0bc*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001a0c0*/ LDR         R6, [R3, R5, LSL #2] 
    /*0001a0c4*/ CMP         R6, #0 
    /*0001a0c8*/ BEQ         VI_SNAP_GetIspConfig_x1a160
    /*0001a0cc*/ CMP         R8, #0 
    /*0001a0d0*/ BEQ         VI_SNAP_GetIspConfig_x1a18c
    /*0001a0d4*/ ADD         R7, R6, #36864              @ 0x9000 
    /*0001a0d8*/ LDR         R3, [R7, #480]              @ 0x1e0 
    /*0001a0dc*/ CMP         R5, R3 
    /*0001a0e0*/ BEQ         VI_SNAP_GetIspConfig_x1a128
    /*0001a0e4*/ STR         R3, [SP, #8] 
    /*0001a0e8*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7540] 
    /*0001a0ec*/ MOVW        R3, #1330                   @ 0x532 
    /*0001a0f0*/ STR         R5, [SP, #4] 
    /*0001a0f4*/ STR         R3, [SP] 
    /*0001a0f8*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7540] 
    /*0001a0fc*/ LDR         R3, [PC, #448]              @ 0x000000000001a2c4 
    /*0001a100*/ MOV         R1, #16 
    /*0001a104*/ MOV         R0, #6 
    /*0001a108*/ MVN         R5, #0 
    /*0001a10c*/ BL          0x000000000001A10C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_SNAP_GetIspConfig_x1a110:
    /*0001a110*/ MOV         R0, R4 
    /*0001a114*/ ADD         R1, SP, #20 
    /*0001a118*/ BL          0x000000000001A118          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001a11c*/ MOV         R0, R5 
    /*0001a120*/ ADD         SP, SP, #24 
    /*0001a124*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SNAP_GetIspConfig_x1a128:
    /*0001a128*/ LDR         R3, [R7, #472]              @ 0x1d8 
    /*0001a12c*/ CMP         R3, #0 
    /*0001a130*/ BNE         VI_SNAP_GetIspConfig_x1a13c
    VI_SNAP_GetIspConfig_x1a134:
    /*0001a134*/ MVN         R5, #0 
    /*0001a138*/ B           VI_SNAP_GetIspConfig_x1a110
    VI_SNAP_GetIspConfig_x1a13c:
    /*0001a13c*/ MOV         R0, R5 
    /*0001a140*/ BL          0x000000000001A140          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0001a144*/ CMP         R0, #1 
    /*0001a148*/ BHI         VI_SNAP_GetIspConfig_x1a134
    /*0001a14c*/ LDR         R3, [R7, #388]              @ 0x184 
    /*0001a150*/ CMP         R3, #2 
    /*0001a154*/ BEQ         VI_SNAP_GetIspConfig_x1a1b4
    VI_SNAP_GetIspConfig_x1a158:
    /*0001a158*/ MOV         R5, #0 
    /*0001a15c*/ B           VI_SNAP_GetIspConfig_x1a110
    VI_SNAP_GetIspConfig_x1a160:
    /*0001a160*/ STR         R5, [SP, #4] 
    /*0001a164*/ MOVW        R3, #1317                   @ 0x525 
    /*0001a168*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74d8] 
    /*0001a16c*/ STR         R3, [SP] 
    /*0001a170*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74d8] 
    /*0001a174*/ LDR         R3, [PC, #328]              @ 0x000000000001a2c4 
    /*0001a178*/ MOV         R1, #16 
    /*0001a17c*/ MOV         R0, #3 
    /*0001a180*/ BL          0x000000000001A180          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a184*/ MVN         R5, #0 
    /*0001a188*/ B           VI_SNAP_GetIspConfig_x1a110
    VI_SNAP_GetIspConfig_x1a18c:
    /*0001a18c*/ MOVW        R3, #1323                   @ 0x52b 
    /*0001a190*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x750c] 
    /*0001a194*/ STR         R3, [SP] 
    /*0001a198*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x750c] 
    /*0001a19c*/ LDR         R3, [PC, #288]              @ 0x000000000001a2c4 
    /*0001a1a0*/ MOV         R1, #16 
    /*0001a1a4*/ MOV         R0, #3 
    /*0001a1a8*/ MVN         R5, #0 
    /*0001a1ac*/ BL          0x000000000001A1AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a1b0*/ B           VI_SNAP_GetIspConfig_x1a110
    VI_SNAP_GetIspConfig_x1a1b4:
    /*0001a1b4*/ MOV         R3, #0 
    /*0001a1b8*/ MOV         R2, #1 
    /*0001a1bc*/ STM         R8, {R2, R3} 
    /*0001a1c0*/ LDR         R3, [R7, #2788]             @ 0xae4 
    /*0001a1c4*/ CMP         R3, #0 
    /*0001a1c8*/ BNE         VI_SNAP_GetIspConfig_x1a25c
    /*0001a1cc*/ LDR         R5, [R7, #484]              @ 0x1e4 
    /*0001a1d0*/ LDR         R9, [R7, #2800]             @ 0xaf0 
    /*0001a1d4*/ CMP         R5, #0 
    /*0001a1d8*/ LDR         R3, [R7, #2796]             @ 0xaec 
    /*0001a1dc*/ BEQ         VI_SNAP_GetIspConfig_x1a2a8
    VI_SNAP_GetIspConfig_x1a1e0:
    /*0001a1e0*/ ADD         R3, R9, R3 
    /*0001a1e4*/ CMP         R3, R5 
    /*0001a1e8*/ BLS         VI_SNAP_GetIspConfig_x1a158
    /*0001a1ec*/ ADD         R6, R6, #37120              @ 0x9100 
    /*0001a1f0*/ ADD         R6, R6, #136                @ 0x88 
    /*0001a1f4*/ MOV         R0, R6 
    /*0001a1f8*/ BL          0x000000000001A1F8          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001a1fc*/ CMP         R0, #0 
    /*0001a200*/ BEQ         VI_SNAP_GetIspConfig_x1a158
    /*0001a204*/ MOV         R0, R6 
    /*0001a208*/ BL          0x000000000001A208          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*0001a20c*/ SUBS        SL, R0, #0 
    /*0001a210*/ BEQ         VI_SNAP_GetIspConfig_x1a134
    /*0001a214*/ CMP         SL, #580                    @ 0x244 
    /*0001a218*/ BEQ         VI_SNAP_GetIspConfig_x1a134
    /*0001a21c*/ LDR         R3, [R7, #484]              @ 0x1e4 
    /*0001a220*/ SUB         R1, SL, #244                @ 0xf4 
    /*0001a224*/ ADD         R0, R8, #8 
    /*0001a228*/ MOV         R2, #52                     @ 0x34 
    /*0001a22c*/ CMP         R3, R9 
    /*0001a230*/ MOV         R5, #0 
    /*0001a234*/ ADDCS       R3, R3, #1 
    /*0001a238*/ MOVCC       R3, #1 
    /*0001a23c*/ SUBCS       R9, R3, R9 
    /*0001a240*/ STRCC       R3, [R8, #4] 
    /*0001a244*/ STRCS       R9, [R8, #4] 
    /*0001a248*/ BL          0x000000000001A248          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001a24c*/ MOV         R1, SL 
    /*0001a250*/ MOV         R0, R6 
    /*0001a254*/ BL          0x000000000001A254          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    /*0001a258*/ B           VI_SNAP_GetIspConfig_x1a110
    VI_SNAP_GetIspConfig_x1a25c:
    /*0001a25c*/ CMP         R3, #1 
    /*0001a260*/ BNE         VI_SNAP_GetIspConfig_x1a134
    /*0001a264*/ LDR         R5, [R7, #484]              @ 0x1e4 
    /*0001a268*/ LDR         R9, [R7, #2800]             @ 0xaf0 
    /*0001a26c*/ CMP         R5, #0 
    /*0001a270*/ LDR         R3, [R7, #2796]             @ 0xaec 
    /*0001a274*/ BNE         VI_SNAP_GetIspConfig_x1a1e0
    /*0001a278*/ LDR         R3, [R7, #504]              @ 0x1f8 
    /*0001a27c*/ CMP         R9, #0 
    /*0001a280*/ CMPNE       R3, #1 
    /*0001a284*/ BNE         VI_SNAP_GetIspConfig_x1a158
    /*0001a288*/ ADD         R1, R6, #14848              @ 0x3a00 
    /*0001a28c*/ MOV         R3, #1 
    /*0001a290*/ ADD         R1, R1, #8 
    /*0001a294*/ STR         R3, [R8, #4] 
    /*0001a298*/ ADD         R0, R8, #8 
    /*0001a29c*/ MOV         R2, #52                     @ 0x34 
    /*0001a2a0*/ BL          0x000000000001A2A0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001a2a4*/ B           VI_SNAP_GetIspConfig_x1a158
    VI_SNAP_GetIspConfig_x1a2a8:
    /*0001a2a8*/ ADD         R1, R6, #14848              @ 0x3a00 
    /*0001a2ac*/ ADD         R0, R8, #8 
    /*0001a2b0*/ ADD         R1, R1, #8 
    /*0001a2b4*/ MOV         R2, #52                     @ 0x34 
    /*0001a2b8*/ BL          0x000000000001A2B8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001a2bc*/ B           VI_SNAP_GetIspConfig_x1a110
    /*0001a2c0*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001a2c4*/ ANDEQ       R0, R0, R4, LSR PC 
FUNC_END VI_SNAP_GetIspConfig


FUNC_BEGIN VI_SNAP_FindProFrame
    /*0001a2c8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001a2cc*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001a2d0*/ PUSH        {R4, LR} 
    /*0001a2d4*/ SUB         SP, SP, #8 
    /*0001a2d8*/ LDR         R4, [R3, R0, LSL #2] 
    /*0001a2dc*/ MOV         R2, #0 
    /*0001a2e0*/ STRB        R2, [SP, #7] 
    /*0001a2e4*/ ADD         R4, R4, #36864              @ 0x9000 
    /*0001a2e8*/ LDR         R3, [R4, #388]              @ 0x184 
    /*0001a2ec*/ CMP         R3, #2 
    /*0001a2f0*/ BEQ         VI_SNAP_FindProFrame_x1a2fc
    VI_SNAP_FindProFrame_x1a2f4:
    /*0001a2f4*/ ADD         SP, SP, #8 
    /*0001a2f8*/ POP         {R4, PC} 
    VI_SNAP_FindProFrame_x1a2fc:
    /*0001a2fc*/ LDR         R3, [R4, #2788]             @ 0xae4 
    /*0001a300*/ CMP         R3, #1 
    /*0001a304*/ BNE         VI_SNAP_FindProFrame_x1a2f4
    /*0001a308*/ ADD         R1, SP, #7 
    /*0001a30c*/ LDR         R0, [R4, #476]              @ 0x1dc 
    /*0001a310*/ BL          0x000000000001A310          @ VI_SNAP_GetIspProCtrl [R_ARM_CALL: .text+0x195f8] 
    /*0001a314*/ CMP         R0, #0 
    /*0001a318*/ BEQ         VI_SNAP_FindProFrame_x1a2f4
    /*0001a31c*/ LDR         R3, [R4, #504]              @ 0x1f8 
    /*0001a320*/ CMP         R3, #0 
    /*0001a324*/ SUBNE       R3, R3, #1 
    /*0001a328*/ STRNE       R3, [R4, #504]              @ 0x1f8 
    /*0001a32c*/ B           VI_SNAP_FindProFrame_x1a2f4
FUNC_END VI_SNAP_FindProFrame


FUNC_BEGIN VI_SNAP_OfflineIsStopIrqProc
    /*0001a330*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001a334*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001a338*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001a33c*/ SUB         SP, SP, #12 
    /*0001a340*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001a344*/ ADD         R4, R3, #36864              @ 0x9000 
    /*0001a348*/ LDR         R2, [R4, #388]              @ 0x184 
    /*0001a34c*/ CMP         R2, #2 
    /*0001a350*/ BEQ         VI_SNAP_OfflineIsStopIrqProc_x1a35c
    VI_SNAP_OfflineIsStopIrqProc_x1a354:
    /*0001a354*/ ADD         SP, SP, #12 
    /*0001a358*/ POP         {R4, R5, R6, R7, PC} 
    VI_SNAP_OfflineIsStopIrqProc_x1a35c:
    /*0001a35c*/ LDR         R2, [R4, #2788]             @ 0xae4 
    /*0001a360*/ CMP         R2, #0 
    /*0001a364*/ BNE         VI_SNAP_OfflineIsStopIrqProc_x1a3ec
    VI_SNAP_OfflineIsStopIrqProc_x1a368:
    /*0001a368*/ LDR         R1, [R4, #472]              @ 0x1d8 
    /*0001a36c*/ LDR         R2, [R4, #2800]             @ 0xaf0 
    /*0001a370*/ CMP         R1, #0 
    /*0001a374*/ LDR         IP, [R4, #2796]             @ 0xaec 
    /*0001a378*/ BEQ         VI_SNAP_OfflineIsStopIrqProc_x1a354
    /*0001a37c*/ LDR         R1, [R4, #484]              @ 0x1e4 
    /*0001a380*/ ADD         R2, R2, IP 
    /*0001a384*/ MOV         R6, R0 
    /*0001a388*/ CMP         R1, R2 
    /*0001a38c*/ ADDNE       R3, R3, #12288              @ 0x3000 
    /*0001a390*/ LDRNE       R7, [R3, #3128]             @ 0xc38 
    /*0001a394*/ BEQ         VI_SNAP_OfflineIsStopIrqProc_x1a3fc
    VI_SNAP_OfflineIsStopIrqProc_x1a398:
    /*0001a398*/ CMP         R7, #1 
    /*0001a39c*/ BNE         VI_SNAP_OfflineIsStopIrqProc_x1a354
    /*0001a3a0*/ LDR         R3, [PC, #124]              @ 0x000000000001a424 
    /*0001a3a4*/ MOV         R5, #176                    @ 0xb0 
    /*0001a3a8*/ ADD         R1, SP, #4 
    /*0001a3ac*/ MLA         R5, R5, R6, R3 
    /*0001a3b0*/ MOV         R0, R5 
    /*0001a3b4*/ BL          0x000000000001A3B4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001a3b8*/ MOV         R3, #3 
    /*0001a3bc*/ MOV         R0, R6 
    /*0001a3c0*/ STR         R3, [R4, #388]              @ 0x184 
    /*0001a3c4*/ BL          0x000000000001A3C4          @ VI_DRV_StopPipe [R_ARM_CALL: .text+0x30270] 
    /*0001a3c8*/ MOV         R0, R6 
    /*0001a3cc*/ MOV         R3, #0 
    /*0001a3d0*/ STR         R7, [R4, #2144]             @ 0x860 
    /*0001a3d4*/ STR         R3, [R4, #1480]             @ 0x5c8 
    /*0001a3d8*/ BL          0x000000000001A3D8          @ VI_ReleasePipeCaptureVB [R_ARM_CALL: .text+0x7efc] 
    /*0001a3dc*/ ADD         R1, SP, #4 
    /*0001a3e0*/ MOV         R0, R5 
    /*0001a3e4*/ BL          0x000000000001A3E4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001a3e8*/ B           VI_SNAP_OfflineIsStopIrqProc_x1a354
    VI_SNAP_OfflineIsStopIrqProc_x1a3ec:
    /*0001a3ec*/ CMP         R2, #1 
    /*0001a3f0*/ BEQ         VI_SNAP_OfflineIsStopIrqProc_x1a368
    /*0001a3f4*/ ADD         SP, SP, #12 
    /*0001a3f8*/ POP         {R4, R5, R6, R7, PC} 
    VI_SNAP_OfflineIsStopIrqProc_x1a3fc:
    /*0001a3fc*/ ADD         R5, R3, #12288              @ 0x3000 
    /*0001a400*/ LDR         R7, [R5, #3128]             @ 0xc38 
    /*0001a404*/ CMP         R7, #0 
    /*0001a408*/ BNE         VI_SNAP_OfflineIsStopIrqProc_x1a398
    /*0001a40c*/ STR         R7, [R5, #2216]             @ 0x8a8 
    /*0001a410*/ MOV         R0, R6 
    /*0001a414*/ BL          0x000000000001A414          @ VI_DRV_DisableWch [R_ARM_CALL: .text+0x301c4] 
    /*0001a418*/ MOV         R3, #2 
    /*0001a41c*/ STR         R3, [R5, #3128]             @ 0xc38 
    /*0001a420*/ B           VI_SNAP_OfflineIsStopIrqProc_x1a354
    /*0001a424*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_SNAP_OfflineIsStopIrqProc


FUNC_BEGIN VI_SNAP_OnlineIrqProc
    /*0001a428*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001a42c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001a430*/ MOV         R2, #0 
    /*0001a434*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001a438*/ ADD         R3, R3, #36864              @ 0x9000 
    /*0001a43c*/ LDR         R1, [R3, #468]              @ 0x1d4 
    /*0001a440*/ STR         R2, [R3, #508]              @ 0x1fc 
    /*0001a444*/ CMP         R1, R2 
    /*0001a448*/ BNE         VI_SNAP_OnlineIrqProc_x1a494
    /*0001a44c*/ LDR         R2, [R3, #388]              @ 0x184 
    /*0001a450*/ CMP         R2, #2 
    /*0001a454*/ BXNE        LR 
    /*0001a458*/ LDR         R2, [R3, #2788]             @ 0xae4 
    /*0001a45c*/ CMP         R2, #1 
    /*0001a460*/ BEQ         VI_SNAP_OnlineIrqProc_x1a4a4
    /*0001a464*/ CMP         R2, #0 
    /*0001a468*/ BNE         VI_SNAP_OnlineIrqProc_x1a4b4
    VI_SNAP_OnlineIrqProc_x1a46c:
    /*0001a46c*/ LDR         R2, [R3, #484]              @ 0x1e4 
    /*0001a470*/ LDR         R1, [R3, #2796]             @ 0xaec 
    /*0001a474*/ ADD         R2, R2, #1 
    /*0001a478*/ STR         R2, [R3, #484]              @ 0x1e4 
    /*0001a47c*/ CMP         R1, R2 
    /*0001a480*/ BXCC        LR 
    /*0001a484*/ MOVNE       R2, #2 
    /*0001a488*/ MOVEQ       R2, #-2147483646            @ 0x80000002 
    /*0001a48c*/ STR         R2, [R3, #508]              @ 0x1fc 
    /*0001a490*/ BX          LR 
    VI_SNAP_OnlineIrqProc_x1a494:
    /*0001a494*/ STR         R2, [R3, #468]              @ 0x1d4 
    /*0001a498*/ MOV         R2, #2 
    /*0001a49c*/ STR         R2, [R3, #508]              @ 0x1fc 
    /*0001a4a0*/ BX          LR 
    VI_SNAP_OnlineIrqProc_x1a4a4:
    /*0001a4a4*/ LDR         R2, [R3, #504]              @ 0x1f8 
    /*0001a4a8*/ CMP         R2, #0 
    /*0001a4ac*/ BEQ         VI_SNAP_OnlineIrqProc_x1a46c
    /*0001a4b0*/ BX          LR 
    VI_SNAP_OnlineIrqProc_x1a4b4:
    /*0001a4b4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001a4b8*/ SUB         SP, SP, #12 
    /*0001a4bc*/ MOVW        R3, #1599                   @ 0x63f 
    /*0001a4c0*/ MOV         R1, #16 
    /*0001a4c4*/ STR         R2, [SP, #4] 
    /*0001a4c8*/ MOV         R0, #3 
    /*0001a4cc*/ STR         R3, [SP] 
    /*0001a4d0*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x75a0] 
    /*0001a4d4*/ LDR         R3, [PC, #12]               @ 0x000000000001a4e8 
    /*0001a4d8*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x75a0] 
    /*0001a4dc*/ BL          0x000000000001A4DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a4e0*/ ADD         SP, SP, #12 
    /*0001a4e4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0001a4e8*/ ANDEQ       R0, R0, IP, ASR #30 
FUNC_END VI_SNAP_OnlineIrqProc


FUNC_BEGIN VI_SNAP_ProcChnFrame
    /*0001a4ec*/ CMP         R2, #0 
    /*0001a4f0*/ BNE         VI_SNAP_ProcChnFrame_x1a4fc
    /*0001a4f4*/ MOV         R0, #0 
    /*0001a4f8*/ BX          LR 
    VI_SNAP_ProcChnFrame_x1a4fc:
    /*0001a4fc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001a500*/ MOVW        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001a504*/ MOVT        R6, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001a508*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0001a50c*/ MOV         R4, R0 
    /*0001a510*/ MOV         R7, R1 
    /*0001a514*/ LDR         R9, [R6, R0, LSL #2] 
    /*0001a518*/ BL          0x000000000001A518          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0001a51c*/ CMP         R0, #1 
    /*0001a520*/ MOV         R8, R0 
    /*0001a524*/ BLS         VI_SNAP_ProcChnFrame_x1a5f4
    /*0001a528*/ SUB         R3, R0, #2 
    /*0001a52c*/ CMP         R3, #3 
    /*0001a530*/ ADDLS       R5, R9, #36864              @ 0x9000 
    /*0001a534*/ ADDHI       R5, R9, #36864              @ 0x9000 
    /*0001a538*/ MOVLS       R3, #712                    @ 0x2c8 
    /*0001a53c*/ MLALS       R9, R3, R7, R9 
    /*0001a540*/ LDRLS       R2, [R5, #508]              @ 0x1fc 
    /*0001a544*/ MOVWLS      R3, #16576                  @ 0x40c0 
    /*0001a548*/ STRLS       R2, [R9, R3] 
    VI_SNAP_ProcChnFrame_x1a54c:
    /*0001a54c*/ LDR         R3, [R5, #480]              @ 0x1e0 
    /*0001a550*/ CMP         R4, R3 
    /*0001a554*/ BEQ         VI_SNAP_ProcChnFrame_x1a61c
    /*0001a558*/ LDR         R3, [R5, #476]              @ 0x1dc 
    /*0001a55c*/ CMP         R4, R3 
    /*0001a560*/ BEQ         VI_SNAP_ProcChnFrame_x1a698
    VI_SNAP_ProcChnFrame_x1a564:
    /*0001a564*/ LDR         R3, [R5, #2788]             @ 0xae4 
    /*0001a568*/ CMP         R3, #0 
    /*0001a56c*/ BEQ         VI_SNAP_ProcChnFrame_x1a5a8
    /*0001a570*/ CMP         R3, #1 
    /*0001a574*/ BEQ         VI_SNAP_ProcChnFrame_x1a5a8
    /*0001a578*/ STR         R3, [SP, #4] 
    /*0001a57c*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x75a0] 
    /*0001a580*/ MOVW        R3, #1777                   @ 0x6f1 
    /*0001a584*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x75a0] 
    /*0001a588*/ STR         R3, [SP] 
    /*0001a58c*/ MOV         R1, #16 
    /*0001a590*/ LDR         R3, [PC, #736]              @ 0x000000000001a878 
    /*0001a594*/ MOV         R0, #3 
    /*0001a598*/ BL          0x000000000001A598          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_SNAP_ProcChnFrame_x1a59c:
    /*0001a59c*/ MOV         R0, #0 
    /*0001a5a0*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0001a5a4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SNAP_ProcChnFrame_x1a5a8:
    /*0001a5a8*/ LDR         R3, [R5, #472]              @ 0x1d8 
    /*0001a5ac*/ LDR         R2, [R5, #2796]             @ 0xaec 
    /*0001a5b0*/ CMP         R3, #0 
    /*0001a5b4*/ BNE         VI_SNAP_ProcChnFrame_x1a5e4
    VI_SNAP_ProcChnFrame_x1a5b8:
    /*0001a5b8*/ LDR         R3, [R5, #388]              @ 0x184 
    /*0001a5bc*/ CMP         R3, #2 
    /*0001a5c0*/ BNE         VI_SNAP_ProcChnFrame_x1a59c
    /*0001a5c4*/ LDR         R3, [R5, #480]              @ 0x1e0 
    /*0001a5c8*/ CMP         R4, R3 
    /*0001a5cc*/ BNE         VI_SNAP_ProcChnFrame_x1a59c
    /*0001a5d0*/ LDR         R3, [R5, #484]              @ 0x1e4 
    /*0001a5d4*/ CMP         R2, R3 
    /*0001a5d8*/ MOVEQ       R3, #3 
    /*0001a5dc*/ STREQ       R3, [R5, #388]              @ 0x184 
    /*0001a5e0*/ B           VI_SNAP_ProcChnFrame_x1a59c
    VI_SNAP_ProcChnFrame_x1a5e4:
    /*0001a5e4*/ SUB         R0, R8, #2 
    /*0001a5e8*/ CMP         R0, #3 
    /*0001a5ec*/ BLS         VI_SNAP_ProcChnFrame_x1a5b8
    /*0001a5f0*/ B           VI_SNAP_ProcChnFrame_x1a59c
    VI_SNAP_ProcChnFrame_x1a5f4:
    /*0001a5f4*/ LDR         R2, [R9, #508]              @ 0x1fc 
    /*0001a5f8*/ CMP         R2, #0 
    /*0001a5fc*/ BEQ         VI_SNAP_ProcChnFrame_x1a59c
    /*0001a600*/ MOV         R3, #712                    @ 0x2c8 
    /*0001a604*/ LDR         R1, [R2, #256]              @ 0x100 
    /*0001a608*/ MLA         R3, R3, R7, R9 
    /*0001a60c*/ MOVW        R2, #16576                  @ 0x40c0 
    /*0001a610*/ ADD         R5, R9, #36864              @ 0x9000 
    /*0001a614*/ STR         R1, [R3, R2] 
    /*0001a618*/ B           VI_SNAP_ProcChnFrame_x1a54c
    VI_SNAP_ProcChnFrame_x1a61c:
    /*0001a61c*/ MOV         R0, R4 
    /*0001a620*/ BL          0x000000000001A620          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0001a624*/ CMP         R0, #1 
    /*0001a628*/ MOV         R8, R0 
    /*0001a62c*/ BLS         VI_SNAP_ProcChnFrame_x1a668
    /*0001a630*/ SUB         R3, R0, #2 
    /*0001a634*/ CMP         R3, #3 
    /*0001a638*/ BHI         VI_SNAP_ProcChnFrame_x1a564
    /*0001a63c*/ LDR         R6, [R6, R4, LSL #2] 
    /*0001a640*/ ADD         R9, R6, #36864              @ 0x9000 
    /*0001a644*/ LDR         R3, [R9, #388]              @ 0x184 
    /*0001a648*/ CMP         R3, #2 
    /*0001a64c*/ BEQ         VI_SNAP_ProcChnFrame_x1a72c
    VI_SNAP_ProcChnFrame_x1a650:
    /*0001a650*/ MOV         R1, #712                    @ 0x2c8 
    /*0001a654*/ LDR         R2, [R9, #508]              @ 0x1fc 
    /*0001a658*/ MLA         R1, R1, R7, R6 
    /*0001a65c*/ MOVW        R3, #16576                  @ 0x40c0 
    /*0001a660*/ STR         R2, [R1, R3] 
    /*0001a664*/ B           VI_SNAP_ProcChnFrame_x1a564
    VI_SNAP_ProcChnFrame_x1a668:
    /*0001a668*/ LDR         R6, [R6, R4, LSL #2] 
    /*0001a66c*/ ADD         R3, R6, #36864              @ 0x9000 
    /*0001a670*/ LDR         R3, [R3, #388]              @ 0x184 
    /*0001a674*/ CMP         R3, #2 
    /*0001a678*/ BEQ         VI_SNAP_ProcChnFrame_x1a77c
    VI_SNAP_ProcChnFrame_x1a67c:
    /*0001a67c*/ MOV         R1, #712                    @ 0x2c8 
    /*0001a680*/ LDR         R2, [R6, #508]              @ 0x1fc 
    /*0001a684*/ MLA         R1, R1, R7, R6 
    /*0001a688*/ MOVW        R3, #16576                  @ 0x40c0 
    /*0001a68c*/ LDR         R2, [R2, #256]              @ 0x100 
    /*0001a690*/ STR         R2, [R1, R3] 
    /*0001a694*/ B           VI_SNAP_ProcChnFrame_x1a564
    VI_SNAP_ProcChnFrame_x1a698:
    /*0001a698*/ MOV         R0, R4 
    /*0001a69c*/ BL          0x000000000001A69C          @ VI_DRV_SNAP_IsDiscardProFrame [R_ARM_CALL: .text+0x3c1dc] 
    /*0001a6a0*/ CMP         R0, #1 
    /*0001a6a4*/ BNE         VI_SNAP_ProcChnFrame_x1a564
    /*0001a6a8*/ LDR         R9, [R6, R4, LSL #2] 
    /*0001a6ac*/ ADD         R3, R9, #36864              @ 0x9000 
    /*0001a6b0*/ LDR         R2, [R3, #472]              @ 0x1d8 
    /*0001a6b4*/ CMP         R2, #1 
    /*0001a6b8*/ BNE         VI_SNAP_ProcChnFrame_x1a564
    /*0001a6bc*/ LDR         R3, [R3, #480]              @ 0x1e0 
    /*0001a6c0*/ MOV         FP, #176                    @ 0xb0 
    /*0001a6c4*/ MOVW        R2, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001a6c8*/ MOVT        R2, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001a6cc*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001a6d0*/ STR         R2, [SP, #28] 
    /*0001a6d4*/ MUL         FP, FP, R3 
    /*0001a6d8*/ STR         R3, [SP, #24] 
    /*0001a6dc*/ ADD         SL, FP, #140                @ 0x8c 
    /*0001a6e0*/ ADD         SL, SL, R2 
    /*0001a6e4*/ MOV         R0, SL 
    /*0001a6e8*/ BL          0x000000000001A6E8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001a6ec*/ LDR         R3, [SP, #24] 
    /*0001a6f0*/ LDR         R2, [SP, #28] 
    /*0001a6f4*/ LDR         R3, [R6, R3, LSL #2] 
    /*0001a6f8*/ CMP         R3, #0 
    /*0001a6fc*/ BEQ         VI_SNAP_ProcChnFrame_x1a71c
    /*0001a700*/ LDR         R2, [R2, FP] 
    /*0001a704*/ CMP         R2, #1 
    /*0001a708*/ BEQ         VI_SNAP_ProcChnFrame_x1a840
    /*0001a70c*/ ADD         R3, R3, #36864              @ 0x9000 
    /*0001a710*/ LDR         R2, [R3, #388]              @ 0x184 
    /*0001a714*/ CMP         R2, #2 
    /*0001a718*/ BEQ         VI_SNAP_ProcChnFrame_x1a808
    VI_SNAP_ProcChnFrame_x1a71c:
    /*0001a71c*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001a720*/ MOV         R0, SL 
    /*0001a724*/ BL          0x000000000001A724          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001a728*/ B           VI_SNAP_ProcChnFrame_x1a564
    VI_SNAP_ProcChnFrame_x1a72c:
    /*0001a72c*/ LDR         R0, [R9, #508]              @ 0x1fc 
    /*0001a730*/ BL          0x000000000001A730          @ VI_DRV_SNAP_IsSendThisFrame [R_ARM_CALL: .text+0x3c1f8] 
    /*0001a734*/ CMP         R0, #1 
    /*0001a738*/ BEQ         VI_SNAP_ProcChnFrame_x1a7e0
    /*0001a73c*/ MOV         R1, #712                    @ 0x2c8 
    /*0001a740*/ MOVW        R0, #17020                  @ 0x427c 
    /*0001a744*/ MLA         R1, R1, R7, R6 
    /*0001a748*/ MOV         LR, #0 
    /*0001a74c*/ MOVW        IP, #1634                   @ 0x662 
    /*0001a750*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x763c] 
    /*0001a754*/ LDR         R3, [PC, #288]              @ 0x000000000001a87c 
    /*0001a758*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x763c] 
    /*0001a75c*/ STR         LR, [R1, R0] 
    /*0001a760*/ MOV         R1, #16 
    /*0001a764*/ STR         R7, [SP, #8] 
    /*0001a768*/ MOV         R0, #7 
    /*0001a76c*/ STR         R4, [SP, #4] 
    /*0001a770*/ STR         IP, [SP] 
    /*0001a774*/ BL          0x000000000001A774          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a778*/ B           VI_SNAP_ProcChnFrame_x1a650
    VI_SNAP_ProcChnFrame_x1a77c:
    /*0001a77c*/ LDR         R3, [R6, #508]              @ 0x1fc 
    /*0001a780*/ LDR         R0, [R3, #256]              @ 0x100 
    /*0001a784*/ BL          0x000000000001A784          @ VI_DRV_SNAP_IsSendThisFrame [R_ARM_CALL: .text+0x3c1f8] 
    /*0001a788*/ CMP         R0, #1 
    /*0001a78c*/ BEQ         VI_SNAP_ProcChnFrame_x1a7f4
    /*0001a790*/ MOV         R1, #712                    @ 0x2c8 
    /*0001a794*/ MOVW        R0, #17020                  @ 0x427c 
    /*0001a798*/ MLA         R1, R1, R7, R6 
    /*0001a79c*/ MOV         LR, #0 
    /*0001a7a0*/ MOV         IP, #1520                   @ 0x5f0 
    /*0001a7a4*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x75e0] 
    /*0001a7a8*/ LDR         R3, [PC, #208]              @ 0x000000000001a880 
    /*0001a7ac*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x75e0] 
    /*0001a7b0*/ STR         LR, [R1, R0] 
    /*0001a7b4*/ MOV         R1, #16 
    /*0001a7b8*/ LDR         R0, [R6, #508]              @ 0x1fc 
    /*0001a7bc*/ LDRD        SL, [R0, #240]              @ 0xf0 
    /*0001a7c0*/ STRD        SL, [SP, #16] 
    /*0001a7c4*/ LDR         R0, [R0, #256]              @ 0x100 
    /*0001a7c8*/ STMIB       SP, {R4, R7} 
    /*0001a7cc*/ STR         IP, [SP] 
    /*0001a7d0*/ STR         R0, [SP, #12] 
    /*0001a7d4*/ MOV         R0, #7 
    /*0001a7d8*/ BL          0x000000000001A7D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a7dc*/ B           VI_SNAP_ProcChnFrame_x1a67c
    VI_SNAP_ProcChnFrame_x1a7e0:
    /*0001a7e0*/ MOV         R3, #712                    @ 0x2c8 
    /*0001a7e4*/ MOVW        R2, #17020                  @ 0x427c 
    /*0001a7e8*/ MLA         R3, R3, R7, R6 
    /*0001a7ec*/ STR         R0, [R3, R2] 
    /*0001a7f0*/ B           VI_SNAP_ProcChnFrame_x1a650
    VI_SNAP_ProcChnFrame_x1a7f4:
    /*0001a7f4*/ MOV         R3, #712                    @ 0x2c8 
    /*0001a7f8*/ MOVW        R2, #17020                  @ 0x427c 
    /*0001a7fc*/ MLA         R3, R3, R7, R6 
    /*0001a800*/ STR         R0, [R3, R2] 
    /*0001a804*/ B           VI_SNAP_ProcChnFrame_x1a67c
    VI_SNAP_ProcChnFrame_x1a808:
    /*0001a808*/ LDR         R2, [R3, #2788]             @ 0xae4 
    /*0001a80c*/ CMP         R2, #1 
    /*0001a810*/ BNE         VI_SNAP_ProcChnFrame_x1a71c
    /*0001a814*/ LDR         R2, [R3, #484]              @ 0x1e4 
    /*0001a818*/ CMP         R2, #0 
    /*0001a81c*/ BEQ         VI_SNAP_ProcChnFrame_x1a71c
    /*0001a820*/ LDR         R3, [R3, #2796]             @ 0xaec 
    /*0001a824*/ CMP         R2, R3 
    /*0001a828*/ MOVLS       R1, #712                    @ 0x2c8 
    /*0001a82c*/ MOVWLS      R3, #17020                  @ 0x427c 
    /*0001a830*/ MLALS       R1, R1, R7, R9 
    /*0001a834*/ MOVLS       R2, #0 
    /*0001a838*/ STRLS       R2, [R1, R3] 
    /*0001a83c*/ B           VI_SNAP_ProcChnFrame_x1a71c
    VI_SNAP_ProcChnFrame_x1a840:
    /*0001a840*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001a844*/ MOV         R0, SL 
    /*0001a848*/ BL          0x000000000001A848          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001a84c*/ LDR         R3, [SP, #24] 
    /*0001a850*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x767c] 
    /*0001a854*/ MOV         R1, #16 
    /*0001a858*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x767c] 
    /*0001a85c*/ MOV         R0, #3 
    /*0001a860*/ STR         R3, [SP, #4] 
    /*0001a864*/ MOVW        R3, #1688                   @ 0x698 
    /*0001a868*/ STR         R3, [SP] 
    /*0001a86c*/ LDR         R3, [PC, #16]               @ 0x000000000001a884 
    /*0001a870*/ BL          0x000000000001A870          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a874*/ B           VI_SNAP_ProcChnFrame_x1a564
    /*0001a878*/ @           <UNDEFINED> instruction: 0x00000fb4 
    /*0001a87c*/ ANDEQ       R0, R0, R0, LSL #31 
    /*0001a880*/ ANDEQ       R0, R0, R4, ROR #30 
    /*0001a884*/ MULEQ       R0, IP, PC                  @ <UNPREDICTABLE> 
FUNC_END VI_SNAP_ProcChnFrame


FUNC_BEGIN VI_SNAP_ProcBnrRaw
    /*0001a888*/ CMP         R1, #0 
    /*0001a88c*/ BEQ         VI_SNAP_ProcBnrRaw_x1a8c4
    /*0001a890*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001a894*/ MOVW        R4, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001a898*/ MOVT        R4, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001a89c*/ SUB         SP, SP, #28 
    /*0001a8a0*/ MOV         R5, R0 
    /*0001a8a4*/ LDR         R3, [R4, R0, LSL #2] 
    /*0001a8a8*/ ADD         R3, R3, #36864              @ 0x9000 
    /*0001a8ac*/ LDR         R3, [R3, #480]              @ 0x1e0 
    /*0001a8b0*/ CMP         R0, R3 
    /*0001a8b4*/ BEQ         VI_SNAP_ProcBnrRaw_x1a8cc
    VI_SNAP_ProcBnrRaw_x1a8b8:
    /*0001a8b8*/ MOV         R0, #0 
    /*0001a8bc*/ ADD         SP, SP, #28 
    /*0001a8c0*/ POP         {R4, R5, R6, R7, PC} 
    VI_SNAP_ProcBnrRaw_x1a8c4:
    /*0001a8c4*/ MOV         R0, #0 
    /*0001a8c8*/ BX          LR 
    VI_SNAP_ProcBnrRaw_x1a8cc:
    /*0001a8cc*/ BL          0x000000000001A8CC          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0001a8d0*/ CMP         R0, #1 
    /*0001a8d4*/ BLS         VI_SNAP_ProcBnrRaw_x1a938
    /*0001a8d8*/ SUB         R0, R0, #2 
    /*0001a8dc*/ CMP         R0, #3 
    /*0001a8e0*/ BHI         VI_SNAP_ProcBnrRaw_x1a8b8
    /*0001a8e4*/ LDR         R3, [R4, R5, LSL #2] 
    /*0001a8e8*/ ADD         R3, R3, #36864              @ 0x9000 
    /*0001a8ec*/ LDR         R2, [R3, #388]              @ 0x184 
    /*0001a8f0*/ CMP         R2, #2 
    /*0001a8f4*/ BNE         VI_SNAP_ProcBnrRaw_x1a8b8
    /*0001a8f8*/ LDR         R2, [R3, #508]              @ 0x1fc 
    /*0001a8fc*/ ANDS        R2, R2, #2 
    /*0001a900*/ MOVNE       R2, #1 
    /*0001a904*/ STRNE       R2, [R3, #1020]             @ 0x3fc 
    /*0001a908*/ BNE         VI_SNAP_ProcBnrRaw_x1a8b8
    /*0001a90c*/ STR         R2, [R3, #1020]             @ 0x3fc 
    /*0001a910*/ MOV         R1, #16 
    /*0001a914*/ MOVW        R3, #1659                   @ 0x67b 
    /*0001a918*/ STR         R5, [SP, #4] 
    /*0001a91c*/ STR         R3, [SP] 
    /*0001a920*/ MOVW        R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7708] 
    /*0001a924*/ LDR         R3, [PC, #116]              @ 0x000000000001a9a0 
    /*0001a928*/ MOVT        R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7708] 
    /*0001a92c*/ MOV         R0, #7 
    /*0001a930*/ BL          0x000000000001A930          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a934*/ B           VI_SNAP_ProcBnrRaw_x1a8b8
    VI_SNAP_ProcBnrRaw_x1a938:
    /*0001a938*/ LDR         R3, [R4, R5, LSL #2] 
    /*0001a93c*/ ADD         R2, R3, #36864              @ 0x9000 
    /*0001a940*/ LDR         R1, [R2, #388]              @ 0x184 
    /*0001a944*/ CMP         R1, #2 
    /*0001a948*/ BNE         VI_SNAP_ProcBnrRaw_x1a8b8
    /*0001a94c*/ LDR         IP, [R3, #508]              @ 0x1fc 
    /*0001a950*/ LDR         R3, [IP, #256]              @ 0x100 
    /*0001a954*/ ANDS        R3, R3, #2 
    /*0001a958*/ MOVNE       R3, #1 
    /*0001a95c*/ STRNE       R3, [R2, #1020]             @ 0x3fc 
    /*0001a960*/ BNE         VI_SNAP_ProcBnrRaw_x1a8b8
    /*0001a964*/ STR         R3, [R2, #1020]             @ 0x3fc 
    /*0001a968*/ MOVW        LR, #1550                   @ 0x60e 
    /*0001a96c*/ LDRD        R6, [IP, #240]              @ 0xf0 
    /*0001a970*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x76b0] 
    /*0001a974*/ LDR         R3, [PC, #40]               @ 0x000000000001a9a4 
    /*0001a978*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x76b0] 
    /*0001a97c*/ MOV         R1, #16 
    /*0001a980*/ MOV         R0, #7 
    /*0001a984*/ STRD        R6, [SP, #16] 
    /*0001a988*/ LDR         IP, [IP, #256]              @ 0x100 
    /*0001a98c*/ STR         R5, [SP, #4] 
    /*0001a990*/ STR         LR, [SP] 
    /*0001a994*/ STR         IP, [SP, #8] 
    /*0001a998*/ BL          0x000000000001A998          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a99c*/ B           VI_SNAP_ProcBnrRaw_x1a8b8
    /*0001a9a0*/ ANDEQ       R0, R0, R8, ROR #31 
    /*0001a9a4*/ ANDEQ       R0, R0, IP, ASR #31 
FUNC_END VI_SNAP_ProcBnrRaw


FUNC_BEGIN VI_SNAP_ZSLEnqueueProc
    /*0001a9a8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001a9ac*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001a9b0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001a9b4*/ SUB         SP, SP, #8 
    /*0001a9b8*/ LDR         R7, [R3, R0, LSL #2] 
    /*0001a9bc*/ ADD         R6, R7, #36864              @ 0x9000 
    /*0001a9c0*/ LDR         R3, [R6, #2808]             @ 0xaf8 
    /*0001a9c4*/ CMP         R3, #0 
    /*0001a9c8*/ MOVEQ       R0, R3 
    /*0001a9cc*/ BEQ         VI_SNAP_ZSLEnqueueProc_x1aa48
    /*0001a9d0*/ ADD         R5, R7, #37120              @ 0x9100 
    /*0001a9d4*/ MOV         R8, R0 
    /*0001a9d8*/ ADD         R5, R5, #172                @ 0xac 
    /*0001a9dc*/ B           VI_SNAP_ZSLEnqueueProc_x1a9f8
    VI_SNAP_ZSLEnqueueProc_x1a9e0:
    /*0001a9e0*/ SUBS        R0, R4, #580                @ 0x244 
    /*0001a9e4*/ BEQ         VI_SNAP_ZSLEnqueueProc_x1aa20
    /*0001a9e8*/ BL          0x000000000001A9E8          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001a9ec*/ MOV         R1, R4 
    /*0001a9f0*/ MOV         R0, R5 
    /*0001a9f4*/ BL          0x000000000001A9F4          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    VI_SNAP_ZSLEnqueueProc_x1a9f8:
    /*0001a9f8*/ MOV         R0, R5 
    /*0001a9fc*/ BL          0x000000000001A9FC          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001aa00*/ LDR         R3, [R6, #2808]             @ 0xaf8 
    /*0001aa04*/ CMP         R0, R3 
    /*0001aa08*/ MOV         R0, R5 
    /*0001aa0c*/ BCC         VI_SNAP_ZSLEnqueueProc_x1aa50
    /*0001aa10*/ BL          0x000000000001AA10          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*0001aa14*/ MOV         R1, #0 
    /*0001aa18*/ SUBS        R4, R0, #0 
    /*0001aa1c*/ BNE         VI_SNAP_ZSLEnqueueProc_x1a9e0
    VI_SNAP_ZSLEnqueueProc_x1aa20:
    /*0001aa20*/ MOVW        R3, #1857                   @ 0x741 
    /*0001aa24*/ STR         R8, [SP, #4] 
    /*0001aa28*/ STR         R3, [SP] 
    /*0001aa2c*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x731c] 
    /*0001aa30*/ LDR         R3, [PC, #172]              @ 0x000000000001aae4 
    /*0001aa34*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x731c] 
    /*0001aa38*/ MOV         R1, #16 
    /*0001aa3c*/ MOV         R0, #3 
    /*0001aa40*/ BL          0x000000000001AA40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001aa44*/ MVN         R0, #0 
    VI_SNAP_ZSLEnqueueProc_x1aa48:
    /*0001aa48*/ ADD         SP, SP, #8 
    /*0001aa4c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SNAP_ZSLEnqueueProc_x1aa50:
    /*0001aa50*/ BL          0x000000000001AA50          @ VI_QueueGetFree [R_ARM_CALL: .text+0x161cc] 
    /*0001aa54*/ SUBS        R4, R0, #0 
    /*0001aa58*/ BEQ         VI_SNAP_ZSLEnqueueProc_x1aa9c
    /*0001aa5c*/ SUBS        R0, R4, #580                @ 0x244 
    /*0001aa60*/ BEQ         VI_SNAP_ZSLEnqueueProc_x1aa9c
    /*0001aa64*/ ADD         R7, R7, #14464              @ 0x3880 
    /*0001aa68*/ MOV         R2, #448                    @ 0x1c0 
    /*0001aa6c*/ ADD         R7, R7, #56                 @ 0x38 
    /*0001aa70*/ MOV         R1, R7 
    /*0001aa74*/ BL          0x000000000001AA74          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001aa78*/ MOV         R0, R7 
    /*0001aa7c*/ MOV         R1, #0 
    /*0001aa80*/ BL          0x000000000001AA80          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001aa84*/ MOV         R0, R5 
    /*0001aa88*/ MOV         R1, R4 
    /*0001aa8c*/ BL          0x000000000001AA8C          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    /*0001aa90*/ MOV         R0, #0 
    /*0001aa94*/ ADD         SP, SP, #8 
    /*0001aa98*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SNAP_ZSLEnqueueProc_x1aa9c:
    /*0001aa9c*/ ADD         R7, R7, #32768              @ 0x8000 
    /*0001aaa0*/ MOVW        LR, #1871                   @ 0x74f 
    /*0001aaa4*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7744] 
    /*0001aaa8*/ LDR         R3, [PC, #52]               @ 0x000000000001aae4 
    /*0001aaac*/ LDR         IP, [R7, #3712]             @ 0xe80 
    /*0001aab0*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7744] 
    /*0001aab4*/ LDR         R0, [R7, #3792]             @ 0xed0 
    /*0001aab8*/ MOV         R1, #16 
    /*0001aabc*/ ADD         IP, IP, #1 
    /*0001aac0*/ STR         IP, [R7, #3712]             @ 0xe80 
    /*0001aac4*/ ADD         R0, R0, #1 
    /*0001aac8*/ STR         R0, [R7, #3792]             @ 0xed0 
    /*0001aacc*/ MOV         R0, #3 
    /*0001aad0*/ STR         R8, [SP, #4] 
    /*0001aad4*/ STR         LR, [SP] 
    /*0001aad8*/ BL          0x000000000001AAD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001aadc*/ MVN         R0, #0 
    /*0001aae0*/ B           VI_SNAP_ZSLEnqueueProc_x1aa48
    /*0001aae4*/ ANDEQ       R1, R0, R4 
FUNC_END VI_SNAP_ZSLEnqueueProc


FUNC_BEGIN VI_SNAP_CapSendFrame
    /*0001aae8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001aaec*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001aaf0*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001aaf4*/ ADD         R2, R3, #12288              @ 0x3000 
    /*0001aaf8*/ LDR         R1, [R2, #2664]             @ 0xa68 
    /*0001aafc*/ CMP         R1, #0 
    /*0001ab00*/ BXEQ        LR 
    /*0001ab04*/ LDR         R1, [R2, #2668]             @ 0xa6c 
    /*0001ab08*/ CMP         R1, #0 
    /*0001ab0c*/ BXEQ        LR 
    /*0001ab10*/ ADD         R3, R3, #36864              @ 0x9000 
    /*0001ab14*/ LDR         R1, [R3, #468]              @ 0x1d4 
    /*0001ab18*/ CMP         R1, #0 
    /*0001ab1c*/ BNE         VI_SNAP_CapSendFrame_x1ab88
    /*0001ab20*/ PUSH        {R4, LR} 
    /*0001ab24*/ LDR         R1, [R3, #2788]             @ 0xae4 
    /*0001ab28*/ CMP         R1, #0 
    /*0001ab2c*/ BNE         VI_SNAP_CapSendFrame_x1ab7c
    VI_SNAP_CapSendFrame_x1ab30:
    /*0001ab30*/ LDR         IP, [R3, #472]              @ 0x1d8 
    /*0001ab34*/ LDR         LR, [R3, #2796]             @ 0xaec 
    /*0001ab38*/ CMP         IP, #0 
    /*0001ab3c*/ LDR         IP, [R3, #388]              @ 0x184 
    /*0001ab40*/ BNE         VI_SNAP_CapSendFrame_x1ab4c
    /*0001ab44*/ CMP         IP, #2 
    /*0001ab48*/ BEQ         VI_SNAP_CapSendFrame_x1ab9c
    VI_SNAP_CapSendFrame_x1ab4c:
    /*0001ab4c*/ CMP         IP, #0 
    /*0001ab50*/ POPEQ       {R4, PC} 
    /*0001ab54*/ CMP         R1, #0 
    /*0001ab58*/ MOV         R4, R0 
    /*0001ab5c*/ BNE         VI_SNAP_CapSendFrame_x1ab70
    /*0001ab60*/ LDR         R3, [R3, #2804]             @ 0xaf4 
    /*0001ab64*/ CMP         R3, #0 
    /*0001ab68*/ BEQ         VI_SNAP_CapSendFrame_x1ab70
    /*0001ab6c*/ BL          0x000000000001AB6C          @ VI_SNAP_ZSLEnqueueProc [R_ARM_CALL: .text+0x1a9a8] 
    VI_SNAP_CapSendFrame_x1ab70:
    /*0001ab70*/ MOV         R0, R4 
    /*0001ab74*/ POP         {R4, LR} 
    VI_SNAP_CapSendFrame_x1ab78:
    /*0001ab78*/ B           VI_SNAP_CapSendFrame_x1ab78 @ VI_SNAP_OfflineIrqProc [R_ARM_JUMP24: .text+0x19bf0] 
    VI_SNAP_CapSendFrame_x1ab7c:
    /*0001ab7c*/ CMP         R1, #1 
    /*0001ab80*/ POPNE       {R4, PC} 
    /*0001ab84*/ B           VI_SNAP_CapSendFrame_x1ab30
    VI_SNAP_CapSendFrame_x1ab88:
    /*0001ab88*/ MOV         R0, #2 
    /*0001ab8c*/ MOV         R1, #0 
    /*0001ab90*/ STR         R0, [R2, #2488]             @ 0x9b8 
    /*0001ab94*/ STR         R1, [R3, #468]              @ 0x1d4 
    /*0001ab98*/ BX          LR 
    VI_SNAP_CapSendFrame_x1ab9c:
    /*0001ab9c*/ CMP         R1, #1 
    /*0001aba0*/ BEQ         VI_SNAP_CapSendFrame_x1abdc
    VI_SNAP_CapSendFrame_x1aba4:
    /*0001aba4*/ LDR         R1, [R3, #484]              @ 0x1e4 
    /*0001aba8*/ ADD         R1, R1, #1 
    /*0001abac*/ STR         R1, [R3, #484]              @ 0x1e4 
    /*0001abb0*/ CMP         LR, R1 
    /*0001abb4*/ LDR         R3, [R2, #2488]             @ 0x9b8 
    /*0001abb8*/ ORR         R1, R3, #2 
    /*0001abbc*/ STR         R1, [R2, #2488]             @ 0x9b8 
    /*0001abc0*/ BEQ         VI_SNAP_CapSendFrame_x1abd0
    /*0001abc4*/ LDR         R1, [R2, #3128]             @ 0xc38 
    /*0001abc8*/ CMP         R1, #2 
    /*0001abcc*/ POPNE       {R4, PC} 
    VI_SNAP_CapSendFrame_x1abd0:
    /*0001abd0*/ ORR         R3, R3, #-2147483646        @ 0x80000002 
    /*0001abd4*/ STR         R3, [R2, #2488]             @ 0x9b8 
    /*0001abd8*/ POP         {R4, PC} 
    VI_SNAP_CapSendFrame_x1abdc:
    /*0001abdc*/ LDR         R1, [R3, #504]              @ 0x1f8 
    /*0001abe0*/ CMP         R1, #0 
    /*0001abe4*/ BEQ         VI_SNAP_CapSendFrame_x1aba4
    /*0001abe8*/ POP         {R4, PC} 
FUNC_END VI_SNAP_CapSendFrame


FUNC_BEGIN VI_SNAP_PrepareIso
    /*0001abec*/ MOV         R0, #0 
    /*0001abf0*/ BX          LR 
FUNC_END VI_SNAP_PrepareIso


FUNC_BEGIN VI_SNAP_IsValidDumpFrame
    /*0001abf4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001abf8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001abfc*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001ac00*/ ADD         R3, R3, #36864              @ 0x9000 
    /*0001ac04*/ LDR         R2, [R3, #480]              @ 0x1e0 
    /*0001ac08*/ CMP         R0, R2 
    /*0001ac0c*/ BEQ         VI_SNAP_IsValidDumpFrame_x1ac18
    VI_SNAP_IsValidDumpFrame_x1ac10:
    /*0001ac10*/ MOV         R0, #1 
    /*0001ac14*/ BX          LR 
    VI_SNAP_IsValidDumpFrame_x1ac18:
    /*0001ac18*/ LDR         R2, [R3, #388]              @ 0x184 
    /*0001ac1c*/ CMP         R2, #2 
    /*0001ac20*/ BNE         VI_SNAP_IsValidDumpFrame_x1ac10
    /*0001ac24*/ LDR         R2, [R3, #2788]             @ 0xae4 
    /*0001ac28*/ CMP         R2, #0 
    /*0001ac2c*/ BEQ         VI_SNAP_IsValidDumpFrame_x1ac38
    /*0001ac30*/ CMP         R2, #1 
    /*0001ac34*/ BNE         VI_SNAP_IsValidDumpFrame_x1ac10
    VI_SNAP_IsValidDumpFrame_x1ac38:
    /*0001ac38*/ LDR         R2, [R3, #2796]             @ 0xaec 
    /*0001ac3c*/ LDR         R3, [R3, #484]              @ 0x1e4 
    /*0001ac40*/ ADDS        R0, R3, #0 
    /*0001ac44*/ MOVNE       R0, #1 
    /*0001ac48*/ CMP         R2, R3 
    /*0001ac4c*/ MOVCC       R0, #0 
    /*0001ac50*/ BX          LR 
FUNC_END VI_SNAP_IsValidDumpFrame


FUNC_BEGIN VI_SetProSharpenParam
    /*0001ac54*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001ac58*/ SUB         SP, SP, #12 
    /*0001ac5c*/ MOV         R5, R1 
    /*0001ac60*/ MOV         R6, R0 
    /*0001ac64*/ BL          0x000000000001AC64          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*0001ac68*/ SUBS        R4, R0, #0 
    /*0001ac6c*/ BEQ         VI_SetProSharpenParam_x1ac7c
    VI_SetProSharpenParam_x1ac70:
    /*0001ac70*/ MOV         R0, R4 
    /*0001ac74*/ ADD         SP, SP, #12 
    /*0001ac78*/ POP         {R4, R5, R6, R7, PC} 
    VI_SetProSharpenParam_x1ac7c:
    /*0001ac7c*/ MOV         R0, R5 
    /*0001ac80*/ BL          0x000000000001AC80          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001ac84*/ SUBS        R4, R0, #0 
    /*0001ac88*/ BNE         VI_SetProSharpenParam_x1ac70
    /*0001ac8c*/ LDR         R3, [PC, #232]              @ 0x000000000001ad7c 
    /*0001ac90*/ MOV         R7, #176                    @ 0xb0 
    /*0001ac94*/ MLA         R7, R7, R6, R3 
    /*0001ac98*/ MOV         R0, R7 
    /*0001ac9c*/ BL          0x000000000001AC9C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001aca0*/ CMP         R0, #0 
    /*0001aca4*/ BNE         VI_SetProSharpenParam_x1ad40
    /*0001aca8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001acac*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001acb0*/ LDR         R3, [R3, R6, LSL #2] 
    /*0001acb4*/ CMP         R3, #0 
    /*0001acb8*/ BEQ         VI_SetProSharpenParam_x1ad10
    /*0001acbc*/ MOV         R0, #28 
    /*0001acc0*/ BL          0x000000000001ACC0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001acc4*/ CMP         R0, #0 
    /*0001acc8*/ BEQ         VI_SetProSharpenParam_x1ad4c
    /*0001accc*/ MOV         R0, #28 
    /*0001acd0*/ BL          0x000000000001ACD0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001acd4*/ LDR         R3, [R0, #84]               @ 0x54 
    /*0001acd8*/ CMP         R3, #0 
    /*0001acdc*/ BEQ         VI_SetProSharpenParam_x1ad4c
    /*0001ace0*/ MOV         R0, #28 
    /*0001ace4*/ BL          0x000000000001ACE4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001ace8*/ MOV         R1, R5 
    /*0001acec*/ LDR         R3, [R0, #84]               @ 0x54 
    /*0001acf0*/ MOV         R0, R6 
    /*0001acf4*/ BLX         R3 
    /*0001acf8*/ MOV         R4, R0 
    VI_SetProSharpenParam_x1acfc:
    /*0001acfc*/ MOV         R0, R7 
    /*0001ad00*/ BL          0x000000000001AD00          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001ad04*/ MOV         R0, R4 
    /*0001ad08*/ ADD         SP, SP, #12 
    /*0001ad0c*/ POP         {R4, R5, R6, R7, PC} 
    VI_SetProSharpenParam_x1ad10:
    /*0001ad10*/ MOVW        R3, #2107                   @ 0x83b 
    /*0001ad14*/ STR         R6, [SP, #4] 
    /*0001ad18*/ STR         R3, [SP] 
    /*0001ad1c*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d70] 
    /*0001ad20*/ LDR         R3, [PC, #88]               @ 0x000000000001ad80 
    /*0001ad24*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d70] 
    /*0001ad28*/ MOV         R1, #16 
    /*0001ad2c*/ MOV         R0, #3 
    /*0001ad30*/ MOVW        R4, #32773                  @ 0x8005 
    /*0001ad34*/ BL          0x000000000001AD34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ad38*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001ad3c*/ B           VI_SetProSharpenParam_x1acfc
    VI_SetProSharpenParam_x1ad40:
    /*0001ad40*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001ad44*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001ad48*/ B           VI_SetProSharpenParam_x1ac70
    VI_SetProSharpenParam_x1ad4c:
    /*0001ad4c*/ MOVW        R3, #2051                   @ 0x803 
    /*0001ad50*/ STR         R6, [SP, #4] 
    /*0001ad54*/ STR         R3, [SP] 
    /*0001ad58*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x778c] 
    /*0001ad5c*/ LDR         R3, [PC, #32]               @ 0x000000000001ad84 
    /*0001ad60*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x778c] 
    /*0001ad64*/ MOV         R1, #16 
    /*0001ad68*/ MOV         R0, #3 
    /*0001ad6c*/ MOVW        R4, #32784                  @ 0x8010 
    /*0001ad70*/ BL          0x000000000001AD70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ad74*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001ad78*/ B           VI_SetProSharpenParam_x1acfc
    /*0001ad7c*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001ad80*/ ANDEQ       R1, R0, IP, LSL R0 
    /*0001ad84*/ ANDEQ       R1, R0, R4, LSR R0 
FUNC_END VI_SetProSharpenParam


FUNC_BEGIN VI_GetProSharpenParam
    /*0001ad88*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001ad8c*/ SUB         SP, SP, #12 
    /*0001ad90*/ MOV         R5, R1 
    /*0001ad94*/ MOV         R6, R0 
    /*0001ad98*/ BL          0x000000000001AD98          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*0001ad9c*/ SUBS        R4, R0, #0 
    /*0001ada0*/ BEQ         VI_GetProSharpenParam_x1adb0
    VI_GetProSharpenParam_x1ada4:
    /*0001ada4*/ MOV         R0, R4 
    /*0001ada8*/ ADD         SP, SP, #12 
    /*0001adac*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetProSharpenParam_x1adb0:
    /*0001adb0*/ MOV         R0, R5 
    /*0001adb4*/ BL          0x000000000001ADB4          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001adb8*/ SUBS        R4, R0, #0 
    /*0001adbc*/ BNE         VI_GetProSharpenParam_x1ada4
    /*0001adc0*/ LDR         R3, [PC, #232]              @ 0x000000000001aeb0 
    /*0001adc4*/ MOV         R7, #176                    @ 0xb0 
    /*0001adc8*/ MLA         R7, R7, R6, R3 
    /*0001adcc*/ MOV         R0, R7 
    /*0001add0*/ BL          0x000000000001ADD0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001add4*/ CMP         R0, #0 
    /*0001add8*/ BNE         VI_GetProSharpenParam_x1ae74
    /*0001addc*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001ade0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001ade4*/ LDR         R3, [R3, R6, LSL #2] 
    /*0001ade8*/ CMP         R3, #0 
    /*0001adec*/ BEQ         VI_GetProSharpenParam_x1ae44
    /*0001adf0*/ MOV         R0, #28 
    /*0001adf4*/ BL          0x000000000001ADF4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001adf8*/ CMP         R0, #0 
    /*0001adfc*/ BEQ         VI_GetProSharpenParam_x1ae80
    /*0001ae00*/ MOV         R0, #28 
    /*0001ae04*/ BL          0x000000000001AE04          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001ae08*/ LDR         R3, [R0, #92]               @ 0x5c 
    /*0001ae0c*/ CMP         R3, #0 
    /*0001ae10*/ BEQ         VI_GetProSharpenParam_x1ae80
    /*0001ae14*/ MOV         R0, #28 
    /*0001ae18*/ BL          0x000000000001AE18          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001ae1c*/ MOV         R1, R5 
    /*0001ae20*/ LDR         R3, [R0, #92]               @ 0x5c 
    /*0001ae24*/ MOV         R0, R6 
    /*0001ae28*/ BLX         R3 
    /*0001ae2c*/ MOV         R4, R0 
    VI_GetProSharpenParam_x1ae30:
    /*0001ae30*/ MOV         R0, R7 
    /*0001ae34*/ BL          0x000000000001AE34          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001ae38*/ MOV         R0, R4 
    /*0001ae3c*/ ADD         SP, SP, #12 
    /*0001ae40*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetProSharpenParam_x1ae44:
    /*0001ae44*/ MOVW        R3, #2131                   @ 0x853 
    /*0001ae48*/ STR         R6, [SP, #4] 
    /*0001ae4c*/ STR         R3, [SP] 
    /*0001ae50*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d70] 
    /*0001ae54*/ LDR         R3, [PC, #88]               @ 0x000000000001aeb4 
    /*0001ae58*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d70] 
    /*0001ae5c*/ MOV         R1, #16 
    /*0001ae60*/ MOV         R0, #3 
    /*0001ae64*/ MOVW        R4, #32773                  @ 0x8005 
    /*0001ae68*/ BL          0x000000000001AE68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ae6c*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001ae70*/ B           VI_GetProSharpenParam_x1ae30
    VI_GetProSharpenParam_x1ae74:
    /*0001ae74*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001ae78*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001ae7c*/ B           VI_GetProSharpenParam_x1ada4
    VI_GetProSharpenParam_x1ae80:
    /*0001ae80*/ MOV         R3, #2064                   @ 0x810 
    /*0001ae84*/ STR         R6, [SP, #4] 
    /*0001ae88*/ STR         R3, [SP] 
    /*0001ae8c*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x778c] 
    /*0001ae90*/ LDR         R3, [PC, #32]               @ 0x000000000001aeb8 
    /*0001ae94*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x778c] 
    /*0001ae98*/ MOV         R1, #16 
    /*0001ae9c*/ MOV         R0, #3 
    /*0001aea0*/ MOVW        R4, #32784                  @ 0x8010 
    /*0001aea4*/ BL          0x000000000001AEA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001aea8*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001aeac*/ B           VI_GetProSharpenParam_x1ae30
    /*0001aeb0*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001aeb4*/ ANDEQ       R1, R0, R0, ASR R0 
    /*0001aeb8*/ ANDEQ       R1, R0, R8, RRX 
FUNC_END VI_GetProSharpenParam


FUNC_BEGIN VI_SetProBNRParam
    /*0001aebc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001aec0*/ SUB         SP, SP, #12 
    /*0001aec4*/ MOV         R5, R1 
    /*0001aec8*/ MOV         R6, R0 
    /*0001aecc*/ BL          0x000000000001AECC          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*0001aed0*/ SUBS        R4, R0, #0 
    /*0001aed4*/ BEQ         VI_SetProBNRParam_x1aee4
    VI_SetProBNRParam_x1aed8:
    /*0001aed8*/ MOV         R0, R4 
    /*0001aedc*/ ADD         SP, SP, #12 
    /*0001aee0*/ POP         {R4, R5, R6, R7, PC} 
    VI_SetProBNRParam_x1aee4:
    /*0001aee4*/ MOV         R0, R5 
    /*0001aee8*/ BL          0x000000000001AEE8          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001aeec*/ SUBS        R4, R0, #0 
    /*0001aef0*/ BNE         VI_SetProBNRParam_x1aed8
    /*0001aef4*/ LDR         R3, [PC, #232]              @ 0x000000000001afe4 
    /*0001aef8*/ MOV         R7, #176                    @ 0xb0 
    /*0001aefc*/ MLA         R7, R7, R6, R3 
    /*0001af00*/ MOV         R0, R7 
    /*0001af04*/ BL          0x000000000001AF04          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001af08*/ CMP         R0, #0 
    /*0001af0c*/ BNE         VI_SetProBNRParam_x1afa8
    /*0001af10*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001af14*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001af18*/ LDR         R3, [R3, R6, LSL #2] 
    /*0001af1c*/ CMP         R3, #0 
    /*0001af20*/ BEQ         VI_SetProBNRParam_x1af78
    /*0001af24*/ MOV         R0, #28 
    /*0001af28*/ BL          0x000000000001AF28          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001af2c*/ CMP         R0, #0 
    /*0001af30*/ BEQ         VI_SetProBNRParam_x1afb4
    /*0001af34*/ MOV         R0, #28 
    /*0001af38*/ BL          0x000000000001AF38          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001af3c*/ LDR         R3, [R0, #80]               @ 0x50 
    /*0001af40*/ CMP         R3, #0 
    /*0001af44*/ BEQ         VI_SetProBNRParam_x1afb4
    /*0001af48*/ MOV         R0, #28 
    /*0001af4c*/ BL          0x000000000001AF4C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001af50*/ MOV         R1, R5 
    /*0001af54*/ LDR         R3, [R0, #80]               @ 0x50 
    /*0001af58*/ MOV         R0, R6 
    /*0001af5c*/ BLX         R3 
    /*0001af60*/ MOV         R4, R0 
    VI_SetProBNRParam_x1af64:
    /*0001af64*/ MOV         R0, R7 
    /*0001af68*/ BL          0x000000000001AF68          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001af6c*/ MOV         R0, R4 
    /*0001af70*/ ADD         SP, SP, #12 
    /*0001af74*/ POP         {R4, R5, R6, R7, PC} 
    VI_SetProBNRParam_x1af78:
    /*0001af78*/ MOVW        R3, #2155                   @ 0x86b 
    /*0001af7c*/ STR         R6, [SP, #4] 
    /*0001af80*/ STR         R3, [SP] 
    /*0001af84*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d70] 
    /*0001af88*/ LDR         R3, [PC, #88]               @ 0x000000000001afe8 
    /*0001af8c*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d70] 
    /*0001af90*/ MOV         R1, #16 
    /*0001af94*/ MOV         R0, #3 
    /*0001af98*/ MOVW        R4, #32773                  @ 0x8005 
    /*0001af9c*/ BL          0x000000000001AF9C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001afa0*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001afa4*/ B           VI_SetProBNRParam_x1af64
    VI_SetProBNRParam_x1afa8:
    /*0001afa8*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001afac*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001afb0*/ B           VI_SetProBNRParam_x1aed8
    VI_SetProBNRParam_x1afb4:
    /*0001afb4*/ MOVW        R3, #2077                   @ 0x81d 
    /*0001afb8*/ STR         R6, [SP, #4] 
    /*0001afbc*/ STR         R3, [SP] 
    /*0001afc0*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x778c] 
    /*0001afc4*/ LDR         R3, [PC, #32]               @ 0x000000000001afec 
    /*0001afc8*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x778c] 
    /*0001afcc*/ MOV         R1, #16 
    /*0001afd0*/ MOV         R0, #3 
    /*0001afd4*/ MOVW        R4, #32784                  @ 0x8010 
    /*0001afd8*/ BL          0x000000000001AFD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001afdc*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001afe0*/ B           VI_SetProBNRParam_x1af64
    /*0001afe4*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001afe8*/ ANDEQ       R1, R0, R4, LSL #1 
    /*0001afec*/ MULEQ       R0, R8, R0 
FUNC_END VI_SetProBNRParam


FUNC_BEGIN VI_GetProBNRParam
    /*0001aff0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001aff4*/ SUB         SP, SP, #12 
    /*0001aff8*/ MOV         R5, R1 
    /*0001affc*/ MOV         R6, R0 
    /*0001b000*/ BL          0x000000000001B000          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*0001b004*/ SUBS        R4, R0, #0 
    /*0001b008*/ BEQ         VI_GetProBNRParam_x1b018
    VI_GetProBNRParam_x1b00c:
    /*0001b00c*/ MOV         R0, R4 
    /*0001b010*/ ADD         SP, SP, #12 
    /*0001b014*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetProBNRParam_x1b018:
    /*0001b018*/ MOV         R0, R5 
    /*0001b01c*/ BL          0x000000000001B01C          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001b020*/ SUBS        R4, R0, #0 
    /*0001b024*/ BNE         VI_GetProBNRParam_x1b00c
    /*0001b028*/ LDR         R3, [PC, #232]              @ 0x000000000001b118 
    /*0001b02c*/ MOV         R7, #176                    @ 0xb0 
    /*0001b030*/ MLA         R7, R7, R6, R3 
    /*0001b034*/ MOV         R0, R7 
    /*0001b038*/ BL          0x000000000001B038          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001b03c*/ CMP         R0, #0 
    /*0001b040*/ BNE         VI_GetProBNRParam_x1b0dc
    /*0001b044*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001b048*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001b04c*/ LDR         R3, [R3, R6, LSL #2] 
    /*0001b050*/ CMP         R3, #0 
    /*0001b054*/ BEQ         VI_GetProBNRParam_x1b0ac
    /*0001b058*/ MOV         R0, #28 
    /*0001b05c*/ BL          0x000000000001B05C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b060*/ CMP         R0, #0 
    /*0001b064*/ BEQ         VI_GetProBNRParam_x1b0e8
    /*0001b068*/ MOV         R0, #28 
    /*0001b06c*/ BL          0x000000000001B06C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b070*/ LDR         R3, [R0, #88]               @ 0x58 
    /*0001b074*/ CMP         R3, #0 
    /*0001b078*/ BEQ         VI_GetProBNRParam_x1b0e8
    /*0001b07c*/ MOV         R0, #28 
    /*0001b080*/ BL          0x000000000001B080          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b084*/ MOV         R1, R5 
    /*0001b088*/ LDR         R3, [R0, #88]               @ 0x58 
    /*0001b08c*/ MOV         R0, R6 
    /*0001b090*/ BLX         R3 
    /*0001b094*/ MOV         R4, R0 
    VI_GetProBNRParam_x1b098:
    /*0001b098*/ MOV         R0, R7 
    /*0001b09c*/ BL          0x000000000001B09C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b0a0*/ MOV         R0, R4 
    /*0001b0a4*/ ADD         SP, SP, #12 
    /*0001b0a8*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetProBNRParam_x1b0ac:
    /*0001b0ac*/ MOVW        R3, #2180                   @ 0x884 
    /*0001b0b0*/ STR         R6, [SP, #4] 
    /*0001b0b4*/ STR         R3, [SP] 
    /*0001b0b8*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d70] 
    /*0001b0bc*/ LDR         R3, [PC, #88]               @ 0x000000000001b11c 
    /*0001b0c0*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d70] 
    /*0001b0c4*/ MOV         R1, #16 
    /*0001b0c8*/ MOV         R0, #3 
    /*0001b0cc*/ MOVW        R4, #32773                  @ 0x8005 
    /*0001b0d0*/ BL          0x000000000001B0D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b0d4*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001b0d8*/ B           VI_GetProBNRParam_x1b098
    VI_GetProBNRParam_x1b0dc:
    /*0001b0dc*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001b0e0*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001b0e4*/ B           VI_GetProBNRParam_x1b00c
    VI_GetProBNRParam_x1b0e8:
    /*0001b0e8*/ MOVW        R3, #2090                   @ 0x82a 
    /*0001b0ec*/ STR         R6, [SP, #4] 
    /*0001b0f0*/ STR         R3, [SP] 
    /*0001b0f4*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x778c] 
    /*0001b0f8*/ LDR         R3, [PC, #32]               @ 0x000000000001b120 
    /*0001b0fc*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x778c] 
    /*0001b100*/ MOV         R1, #16 
    /*0001b104*/ MOV         R0, #3 
    /*0001b108*/ MOVW        R4, #32784                  @ 0x8010 
    /*0001b10c*/ BL          0x000000000001B10C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b110*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001b114*/ B           VI_GetProBNRParam_x1b098
    /*0001b118*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001b11c*/ STRHEQ      R1, [R0], -R0 
    /*0001b120*/ ANDEQ       R1, R0, R4, ASR #1 
FUNC_END VI_GetProBNRParam


FUNC_BEGIN VI_SNAP_TypeToStr
    /*0001b124*/ CMP         R0, #0 
    /*0001b128*/ BEQ         VI_SNAP_TypeToStr_x1b14c
    /*0001b12c*/ CMP         R0, #1 
    /*0001b130*/ MOVW        R3, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77d0] 
    /*0001b134*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77d4] 
    /*0001b138*/ MOVT        R3, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77d0] 
    /*0001b13c*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77d4] 
    /*0001b140*/ MOVEQ       R0, R3 
    /*0001b144*/ MOVNE       R0, R2 
    /*0001b148*/ BX          LR 
    VI_SNAP_TypeToStr_x1b14c:
    /*0001b14c*/ MOVW        R0, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77c8] 
    /*0001b150*/ MOVT        R0, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77c8] 
    /*0001b154*/ BX          LR 
FUNC_END VI_SNAP_TypeToStr


FUNC_BEGIN VI_SNAP_StatusToStr
    /*0001b158*/ CMP         R0, #3 
    /*0001b15c*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xdf0] 
    /*0001b160*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xdf0] 
    /*0001b164*/ ADDLS       R3, R3, R0, LSL #2 
    /*0001b168*/ LDRLS       R0, [R3, #748]              @ 0x2ec 
    /*0001b16c*/ MOVWHI      R0, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77d4] 
    /*0001b170*/ MOVTHI      R0, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77d4] 
    /*0001b174*/ BX          LR 
FUNC_END VI_SNAP_StatusToStr


FUNC_BEGIN VI_ProcSnapAttr
    /*0001b178*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001b17c*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0001b180*/ LDR         R5, [PC, #784]              @ 0x000000000001b498 
    /*0001b184*/ MOV         R8, R0 
    /*0001b188*/ MOVW        R1, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77d8] 
    /*0001b18c*/ MOVW        R9, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001b190*/ MOVT        R1, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77d8] 
    /*0001b194*/ MOVT        R9, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001b198*/ BL          0x000000000001B198          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001b19c*/ MOVW        FP, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77d4] 
    /*0001b1a0*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7888] 
    /*0001b1a4*/ MOVW        R3, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7894] 
    /*0001b1a8*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7888] 
    /*0001b1ac*/ MOVT        R3, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7894] 
    /*0001b1b0*/ STR         R2, [SP, #24] 
    /*0001b1b4*/ MOV         R0, R8 
    /*0001b1b8*/ STR         R3, [SP, #20] 
    /*0001b1bc*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78a0] 
    /*0001b1c0*/ MOVW        R3, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78ac] 
    /*0001b1c4*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78a0] 
    /*0001b1c8*/ MOVT        R3, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78ac] 
    /*0001b1cc*/ STR         R2, [SP, #16] 
    /*0001b1d0*/ STR         R3, [SP, #12] 
    /*0001b1d4*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78b4] 
    /*0001b1d8*/ MOVW        R3, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78c0] 
    /*0001b1dc*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78b4] 
    /*0001b1e0*/ MOVT        R3, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78c0] 
    /*0001b1e4*/ STR         R2, [SP, #8] 
    /*0001b1e8*/ STR         R3, [SP, #4] 
    /*0001b1ec*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78cc] 
    /*0001b1f0*/ MOVW        R3, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7854] 
    /*0001b1f4*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78cc] 
    /*0001b1f8*/ MOVT        R3, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7854] 
    /*0001b1fc*/ STR         R2, [SP] 
    /*0001b200*/ MOVW        R1, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7864] 
    /*0001b204*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x785c] 
    /*0001b208*/ MOVT        R1, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7864] 
    /*0001b20c*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x785c] 
    /*0001b210*/ MOVT        FP, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77d4] 
    /*0001b214*/ BL          0x000000000001B214          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001b218*/ MOV         SL, R9 
    /*0001b21c*/ MOV         R0, R8 
    /*0001b220*/ MOVW        R1, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78d8] 
    /*0001b224*/ MOV         R6, R5 
    /*0001b228*/ MOVT        R1, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78d8] 
    /*0001b22c*/ MOV         R7, #0 
    /*0001b230*/ BL          0x000000000001B230          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001b234*/ MOVW        R3, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78dc] 
    /*0001b238*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78d8] 
    /*0001b23c*/ MOVT        R3, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78dc] 
    /*0001b240*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78d8] 
    /*0001b244*/ STR         R3, [SP, #32] 
    /*0001b248*/ STR         R2, [SP, #36]               @ 0x24 
    VI_ProcSnapAttr_x1b24c:
    /*0001b24c*/ MOV         R0, R6 
    /*0001b250*/ BL          0x000000000001B250          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001b254*/ CMP         R0, #0 
    /*0001b258*/ BNE         VI_ProcSnapAttr_x1b45c
    /*0001b25c*/ LDR         R4, [SL], #4 
    /*0001b260*/ CMP         R4, #0 
    /*0001b264*/ BEQ         VI_ProcSnapAttr_x1b2cc
    /*0001b268*/ ADD         R4, R4, #36864              @ 0x9000 
    /*0001b26c*/ LDR         R3, [R4, #384]              @ 0x180 
    /*0001b270*/ CMP         R3, #0 
    /*0001b274*/ BEQ         VI_ProcSnapAttr_x1b2cc
    /*0001b278*/ LDR         R2, [R4, #2044]             @ 0x7fc 
    /*0001b27c*/ CMP         R2, #0 
    /*0001b280*/ BEQ         VI_ProcSnapAttr_x1b414
    /*0001b284*/ CMP         R2, #1 
    /*0001b288*/ MOVW        R3, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77d0] 
    /*0001b28c*/ MOVT        R3, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77d0] 
    /*0001b290*/ MOVNE       R3, FP 
    VI_ProcSnapAttr_x1b294:
    /*0001b294*/ LDR         IP, [R4, #2048]             @ 0x800 
    /*0001b298*/ MOV         R2, R7 
    /*0001b29c*/ LDR         R1, [SP, #32] 
    /*0001b2a0*/ MOV         R0, R8 
    /*0001b2a4*/ STR         IP, [SP] 
    /*0001b2a8*/ BL          0x000000000001B2A8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001b2ac*/ LDR         R3, [R4, #2044]             @ 0x7fc 
    /*0001b2b0*/ CMP         R3, #0 
    /*0001b2b4*/ BEQ         VI_ProcSnapAttr_x1b420
    /*0001b2b8*/ CMP         R3, #1 
    /*0001b2bc*/ BEQ         VI_ProcSnapAttr_x1b46c
    VI_ProcSnapAttr_x1b2c0:
    /*0001b2c0*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0001b2c4*/ MOV         R0, R8 
    /*0001b2c8*/ BL          0x000000000001B2C8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcSnapAttr_x1b2cc:
    /*0001b2cc*/ MOV         R0, R6 
    /*0001b2d0*/ ADD         R7, R7, #1 
    /*0001b2d4*/ BL          0x000000000001B2D4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b2d8*/ CMP         R7, #4 
    /*0001b2dc*/ ADD         R6, R6, #176                @ 0xb0 
    /*0001b2e0*/ BNE         VI_ProcSnapAttr_x1b24c
    /*0001b2e4*/ MOVW        R1, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7918] 
    /*0001b2e8*/ MOV         R0, R8 
    /*0001b2ec*/ MOVT        R1, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7918] 
    /*0001b2f0*/ LDR         SL, [PC, #420]              @ 0x000000000001b49c 
    /*0001b2f4*/ BL          0x000000000001B2F4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001b2f8*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x79c0] 
    /*0001b2fc*/ MOVW        R3, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x79cc] 
    /*0001b300*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x79c0] 
    /*0001b304*/ MOVT        R3, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x79cc] 
    /*0001b308*/ STR         R2, [SP, #12] 
    /*0001b30c*/ STR         R3, [SP, #8] 
    /*0001b310*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x79d4] 
    /*0001b314*/ MOVW        R3, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x79e0] 
    /*0001b318*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x79d4] 
    /*0001b31c*/ MOVT        R3, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x79e0] 
    /*0001b320*/ STR         R2, [SP, #4] 
    /*0001b324*/ STR         R3, [SP] 
    /*0001b328*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x79a0] 
    /*0001b32c*/ MOVW        R3, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7994] 
    /*0001b330*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x79a0] 
    /*0001b334*/ MOVT        R3, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7994] 
    /*0001b338*/ MOVW        R1, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x79a8] 
    /*0001b33c*/ MOV         R0, R8 
    /*0001b340*/ MOVT        R1, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x79a8] 
    /*0001b344*/ BL          0x000000000001B344          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001b348*/ MOVW        R1, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78d8] 
    /*0001b34c*/ MOV         R0, R8 
    /*0001b350*/ MOVT        R1, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78d8] 
    /*0001b354*/ BL          0x000000000001B354          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001b358*/ MOVW        R7, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x79ec] 
    /*0001b35c*/ MOVW        R6, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78d8] 
    /*0001b360*/ MOVW        R4, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77d4] 
    /*0001b364*/ MOVT        R7, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x79ec] 
    /*0001b368*/ MOVT        R6, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78d8] 
    /*0001b36c*/ MOVT        R4, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77d4] 
    VI_ProcSnapAttr_x1b370:
    /*0001b370*/ MOV         R0, R5 
    /*0001b374*/ BL          0x000000000001B374          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001b378*/ CMP         R0, #0 
    /*0001b37c*/ BNE         VI_ProcSnapAttr_x1b45c
    /*0001b380*/ LDR         R3, [R9], #4 
    /*0001b384*/ CMP         R3, #0 
    /*0001b388*/ ADD         IP, R3, #36864              @ 0x9000 
    /*0001b38c*/ BEQ         VI_ProcSnapAttr_x1b3f4
    /*0001b390*/ LDR         R3, [IP, #384]              @ 0x180 
    /*0001b394*/ CMP         R3, #0 
    /*0001b398*/ BEQ         VI_ProcSnapAttr_x1b3f4
    /*0001b39c*/ LDR         R1, [IP, #388]              @ 0x184 
    /*0001b3a0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xdf0] 
    /*0001b3a4*/ LDR         R0, [IP, #504]              @ 0x1f8 
    /*0001b3a8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xdf0] 
    /*0001b3ac*/ CMP         R1, #3 
    /*0001b3b0*/ MOV         R2, R4 
    /*0001b3b4*/ ADD         R3, R3, R1, LSL #2 
    /*0001b3b8*/ MOV         R1, R7 
    /*0001b3bc*/ LDRLS       R2, [R3, #748]              @ 0x2ec 
    /*0001b3c0*/ LDR         R3, [IP, #472]              @ 0x1d8 
    /*0001b3c4*/ STR         R0, [SP, #12] 
    /*0001b3c8*/ MOV         R0, R8 
    /*0001b3cc*/ LDR         LR, [IP, #484]              @ 0x1e4 
    /*0001b3d0*/ STR         LR, [SP, #8] 
    /*0001b3d4*/ LDR         LR, [IP, #480]              @ 0x1e0 
    /*0001b3d8*/ STR         LR, [SP, #4] 
    /*0001b3dc*/ LDR         IP, [IP, #476]              @ 0x1dc 
    /*0001b3e0*/ STR         IP, [SP] 
    /*0001b3e4*/ BL          0x000000000001B3E4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001b3e8*/ MOV         R1, R6 
    /*0001b3ec*/ MOV         R0, R8 
    /*0001b3f0*/ BL          0x000000000001B3F0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VI_ProcSnapAttr_x1b3f4:
    /*0001b3f4*/ MOV         R0, R5 
    /*0001b3f8*/ ADD         R5, R5, #176                @ 0xb0 
    /*0001b3fc*/ BL          0x000000000001B3FC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b400*/ CMP         R5, SL 
    /*0001b404*/ BNE         VI_ProcSnapAttr_x1b370
    /*0001b408*/ MOV         R0, #0 
    /*0001b40c*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0001b410*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcSnapAttr_x1b414:
    /*0001b414*/ MOVW        R3, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77c8] 
    /*0001b418*/ MOVT        R3, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77c8] 
    /*0001b41c*/ B           VI_ProcSnapAttr_x1b294
    VI_ProcSnapAttr_x1b420:
    /*0001b420*/ LDR         R0, [R4, #2072]             @ 0x818 
    /*0001b424*/ MOVW        R1, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78e8] 
    /*0001b428*/ LDR         R3, [R4, #2056]             @ 0x808 
    /*0001b42c*/ MOVT        R1, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78e8] 
    /*0001b430*/ LDR         R2, [R4, #2052]             @ 0x804 
    /*0001b434*/ STR         R0, [SP, #12] 
    /*0001b438*/ MOV         R0, R8 
    /*0001b43c*/ LDR         IP, [R4, #2068]             @ 0x814 
    /*0001b440*/ STR         IP, [SP, #8] 
    /*0001b444*/ LDR         IP, [R4, #2064]             @ 0x810 
    /*0001b448*/ STR         IP, [SP, #4] 
    /*0001b44c*/ LDR         IP, [R4, #2060]             @ 0x80c 
    /*0001b450*/ STR         IP, [SP] 
    /*0001b454*/ BL          0x000000000001B454          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001b458*/ B           VI_ProcSnapAttr_x1b2c0
    VI_ProcSnapAttr_x1b45c:
    /*0001b45c*/ MOV         R0, #65024                  @ 0xfe00 
    /*0001b460*/ MOVT        R0, #65535                  @ 0xffff 
    /*0001b464*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0001b468*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcSnapAttr_x1b46c:
    /*0001b46c*/ LDR         R3, [R4, #2056]             @ 0x808 
    /*0001b470*/ MOVW        R1, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7900] 
    /*0001b474*/ LDR         R2, [R4, #2052]             @ 0x804 
    /*0001b478*/ MOVT        R1, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7900] 
    /*0001b47c*/ STR         FP, [SP, #12] 
    /*0001b480*/ MOV         R0, R8 
    /*0001b484*/ STR         FP, [SP, #8] 
    /*0001b488*/ STR         FP, [SP, #4] 
    /*0001b48c*/ STR         FP, [SP] 
    /*0001b490*/ BL          0x000000000001B490          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001b494*/ B           VI_ProcSnapAttr_x1b2c0
    /*0001b498*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001b49c*/ ANDEQ       R0, R0, R4, LSR #6          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_ProcSnapAttr


FUNC_BEGIN VI_GetPipeSnapStatus
    /*0001b4a0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001b4a4*/ SUB         SP, SP, #36                 @ 0x24 
    /*0001b4a8*/ MOV         R6, R1 
    /*0001b4ac*/ MOV         R5, R0 
    /*0001b4b0*/ BL          0x000000000001B4B0          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0001b4b4*/ SUBS        R4, R0, #0 
    /*0001b4b8*/ BEQ         VI_GetPipeSnapStatus_x1b4c8
    VI_GetPipeSnapStatus_x1b4bc:
    /*0001b4bc*/ MOV         R0, R4 
    /*0001b4c0*/ ADD         SP, SP, #36                 @ 0x24 
    /*0001b4c4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_GetPipeSnapStatus_x1b4c8:
    /*0001b4c8*/ MOV         R0, R6 
    /*0001b4cc*/ BL          0x000000000001B4CC          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001b4d0*/ SUBS        R4, R0, #0 
    /*0001b4d4*/ BNE         VI_GetPipeSnapStatus_x1b4bc
    /*0001b4d8*/ MOV         R3, #176                    @ 0xb0 
    /*0001b4dc*/ MOVW        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001b4e0*/ MUL         FP, R3, R5 
    /*0001b4e4*/ MOVT        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001b4e8*/ MOVW        SL, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001b4ec*/ MOVT        SL, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001b4f0*/ ADD         R1, SP, #24 
    /*0001b4f4*/ ADD         R7, FP, #140                @ 0x8c 
    /*0001b4f8*/ ADD         R7, R8, R7 
    /*0001b4fc*/ MOV         R0, R7 
    /*0001b500*/ BL          0x000000000001B500          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001b504*/ LDR         R9, [SL, R5, LSL #2] 
    /*0001b508*/ CMP         R9, #0 
    /*0001b50c*/ BEQ         VI_GetPipeSnapStatus_x1b618
    /*0001b510*/ LDR         R2, [R8, FP] 
    /*0001b514*/ CMP         R2, #1 
    /*0001b518*/ BEQ         VI_GetPipeSnapStatus_x1b5e8
    /*0001b51c*/ MOV         R0, R5 
    /*0001b520*/ BL          0x000000000001B520          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0001b524*/ BIC         R2, R0, #2 
    /*0001b528*/ CMP         R2, #0 
    /*0001b52c*/ CMPNE       R0, #4 
    /*0001b530*/ MOVEQ       R2, #1 
    /*0001b534*/ MOVNE       R2, #0 
    /*0001b538*/ BEQ         VI_GetPipeSnapStatus_x1b5b8
    /*0001b53c*/ ADD         FP, R9, #36864              @ 0x9000 
    /*0001b540*/ STR         R2, [R6] 
    /*0001b544*/ STR         R2, [R6, #4] 
    /*0001b548*/ LDR         R2, [FP, #480]              @ 0x1e0 
    /*0001b54c*/ CMP         R5, R2 
    /*0001b550*/ BEQ         VI_GetPipeSnapStatus_x1b580
    /*0001b554*/ LDR         R2, [FP, #476]              @ 0x1dc 
    /*0001b558*/ CMP         R5, R2 
    /*0001b55c*/ LDRNE       R3, [FP, #508]              @ 0x1fc 
    /*0001b560*/ STRNE       R3, [R6, #4] 
    /*0001b564*/ BEQ         VI_GetPipeSnapStatus_x1b648
    VI_GetPipeSnapStatus_x1b568:
    /*0001b568*/ MOV         R0, R7 
    /*0001b56c*/ ADD         R1, SP, #24 
    /*0001b570*/ BL          0x000000000001B570          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001b574*/ MOV         R0, R4 
    /*0001b578*/ ADD         SP, SP, #36                 @ 0x24 
    /*0001b57c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_GetPipeSnapStatus_x1b580:
    /*0001b580*/ CMP         R0, #1 
    /*0001b584*/ BEQ         VI_GetPipeSnapStatus_x1b6c4
    /*0001b588*/ SUB         R0, R0, #3 
    /*0001b58c*/ BICS        R3, R0, #2 
    /*0001b590*/ BNE         VI_GetPipeSnapStatus_x1b5b0
    /*0001b594*/ LDR         R3, [FP, #388]              @ 0x184 
    /*0001b598*/ CMP         R3, #0 
    /*0001b59c*/ LDR         R3, [FP, #508]              @ 0x1fc 
    /*0001b5a0*/ BEQ         VI_GetPipeSnapStatus_x1b5ac
    /*0001b5a4*/ TST         R3, #2 
    /*0001b5a8*/ BEQ         VI_GetPipeSnapStatus_x1b734
    VI_GetPipeSnapStatus_x1b5ac:
    /*0001b5ac*/ STR         R3, [R6, #4] 
    VI_GetPipeSnapStatus_x1b5b0:
    /*0001b5b0*/ MOV         R4, #0 
    /*0001b5b4*/ B           VI_GetPipeSnapStatus_x1b568
    VI_GetPipeSnapStatus_x1b5b8:
    /*0001b5b8*/ STR         R0, [SP, #8] 
    /*0001b5bc*/ MOVW        R3, #2350                   @ 0x92e 
    /*0001b5c0*/ STR         R5, [SP, #4] 
    /*0001b5c4*/ MOVW        R2, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7a44] 
    /*0001b5c8*/ STR         R3, [SP] 
    /*0001b5cc*/ MOVT        R2, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7a44] 
    /*0001b5d0*/ LDR         R3, [PC, #604]              @ 0x000000000001b834 
    /*0001b5d4*/ MOV         R1, #16 
    /*0001b5d8*/ MOV         R0, #6 
    /*0001b5dc*/ MVN         R4, #0 
    /*0001b5e0*/ BL          0x000000000001B5E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b5e4*/ B           VI_GetPipeSnapStatus_x1b568
    VI_GetPipeSnapStatus_x1b5e8:
    /*0001b5e8*/ MOVW        R3, #2340                   @ 0x924 
    /*0001b5ec*/ STR         R5, [SP, #4] 
    /*0001b5f0*/ STR         R3, [SP] 
    /*0001b5f4*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x767c] 
    /*0001b5f8*/ LDR         R3, [PC, #564]              @ 0x000000000001b834 
    /*0001b5fc*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x767c] 
    /*0001b600*/ MOV         R1, #16 
    /*0001b604*/ MOV         R0, #4 
    /*0001b608*/ MOVW        R4, #32786                  @ 0x8012 
    /*0001b60c*/ BL          0x000000000001B60C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b610*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001b614*/ B           VI_GetPipeSnapStatus_x1b568
    VI_GetPipeSnapStatus_x1b618:
    /*0001b618*/ MOVW        R3, #2333                   @ 0x91d 
    /*0001b61c*/ STR         R5, [SP, #4] 
    /*0001b620*/ STR         R3, [SP] 
    /*0001b624*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7a04] 
    /*0001b628*/ LDR         R3, [PC, #516]              @ 0x000000000001b834 
    /*0001b62c*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7a04] 
    /*0001b630*/ MOV         R1, #16 
    /*0001b634*/ MOV         R0, #3 
    /*0001b638*/ MOVW        R4, #32773                  @ 0x8005 
    /*0001b63c*/ BL          0x000000000001B63C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b640*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001b644*/ B           VI_GetPipeSnapStatus_x1b568
    VI_GetPipeSnapStatus_x1b648:
    /*0001b648*/ MOV         R0, R5 
    /*0001b64c*/ BL          0x000000000001B64C          @ VI_DRV_SNAP_IsDiscardProFrame [R_ARM_CALL: .text+0x3c1dc] 
    /*0001b650*/ CMP         R0, #1 
    /*0001b654*/ BNE         VI_GetPipeSnapStatus_x1b5b0
    /*0001b658*/ LDR         R2, [FP, #472]              @ 0x1d8 
    /*0001b65c*/ CMP         R2, #1 
    /*0001b660*/ BNE         VI_GetPipeSnapStatus_x1b5b0
    /*0001b664*/ LDR         R9, [FP, #480]              @ 0x1e0 
    /*0001b668*/ MOV         R3, #176                    @ 0xb0 
    /*0001b66c*/ ADD         R1, SP, #28 
    /*0001b670*/ MLA         R4, R3, R9, R8 
    /*0001b674*/ ADD         R4, R4, #140                @ 0x8c 
    /*0001b678*/ MOV         R0, R4 
    /*0001b67c*/ BL          0x000000000001B67C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001b680*/ LDR         R3, [SL, R9, LSL #2] 
    /*0001b684*/ CMP         R3, #0 
    /*0001b688*/ BEQ         VI_GetPipeSnapStatus_x1b7fc
    /*0001b68c*/ MOV         R2, #176                    @ 0xb0 
    /*0001b690*/ MUL         R2, R2, R9 
    /*0001b694*/ LDR         R2, [R8, R2] 
    /*0001b698*/ CMP         R2, #1 
    /*0001b69c*/ BEQ         VI_GetPipeSnapStatus_x1b7c0
    /*0001b6a0*/ ADD         R3, R3, #36864              @ 0x9000 
    /*0001b6a4*/ LDR         R2, [R3, #388]              @ 0x184 
    /*0001b6a8*/ CMP         R2, #2 
    /*0001b6ac*/ BEQ         VI_GetPipeSnapStatus_x1b768
    VI_GetPipeSnapStatus_x1b6b0:
    /*0001b6b0*/ MOV         R0, R4 
    /*0001b6b4*/ ADD         R1, SP, #28 
    /*0001b6b8*/ BL          0x000000000001B6B8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001b6bc*/ MOV         R4, #0 
    /*0001b6c0*/ B           VI_GetPipeSnapStatus_x1b568
    VI_GetPipeSnapStatus_x1b6c4:
    /*0001b6c4*/ LDR         R3, [FP, #388]              @ 0x184 
    /*0001b6c8*/ CMP         R3, #2 
    /*0001b6cc*/ LDR         R3, [R9, #508]              @ 0x1fc 
    /*0001b6d0*/ BEQ         VI_GetPipeSnapStatus_x1b6e4
    VI_GetPipeSnapStatus_x1b6d4:
    /*0001b6d4*/ LDR         R3, [R3, #256]              @ 0x100 
    /*0001b6d8*/ MOV         R4, #0 
    /*0001b6dc*/ STR         R3, [R6, #4] 
    /*0001b6e0*/ B           VI_GetPipeSnapStatus_x1b568
    VI_GetPipeSnapStatus_x1b6e4:
    /*0001b6e4*/ LDR         R2, [R3, #256]              @ 0x100 
    /*0001b6e8*/ TST         R2, #2 
    /*0001b6ec*/ BNE         VI_GetPipeSnapStatus_x1b6d4
    /*0001b6f0*/ STR         R0, [R6] 
    /*0001b6f4*/ MOVW        IP, #2373                   @ 0x945 
    /*0001b6f8*/ LDR         R3, [R9, #508]              @ 0x1fc 
    /*0001b6fc*/ MOVW        R2, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7a94] 
    /*0001b700*/ MOV         R1, #16 
    /*0001b704*/ MOVT        R2, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7a94] 
    /*0001b708*/ MOV         R0, #7 
    /*0001b70c*/ LDRD        SL, [R3, #240]              @ 0xf0 
    /*0001b710*/ STRD        SL, [SP, #16] 
    /*0001b714*/ LDR         R3, [R3, #256]              @ 0x100 
    /*0001b718*/ STR         R5, [SP, #4] 
    /*0001b71c*/ STR         IP, [SP] 
    /*0001b720*/ STR         R3, [SP, #8] 
    /*0001b724*/ LDR         R3, [PC, #264]              @ 0x000000000001b834 
    /*0001b728*/ BL          0x000000000001B728          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b72c*/ LDR         R3, [R9, #508]              @ 0x1fc 
    /*0001b730*/ B           VI_GetPipeSnapStatus_x1b6d4
    VI_GetPipeSnapStatus_x1b734:
    /*0001b734*/ STR         R5, [SP, #4] 
    /*0001b738*/ MOV         R2, #1 
    /*0001b73c*/ MOVW        R3, #2391                   @ 0x957 
    /*0001b740*/ STR         R2, [R6] 
    /*0001b744*/ MOV         R1, #16 
    /*0001b748*/ STR         R3, [SP] 
    /*0001b74c*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ae8] 
    /*0001b750*/ LDR         R3, [PC, #220]              @ 0x000000000001b834 
    /*0001b754*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ae8] 
    /*0001b758*/ MOV         R0, #7 
    /*0001b75c*/ BL          0x000000000001B75C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b760*/ LDR         R3, [FP, #508]              @ 0x1fc 
    /*0001b764*/ B           VI_GetPipeSnapStatus_x1b5ac
    VI_GetPipeSnapStatus_x1b768:
    /*0001b768*/ LDR         R2, [R3, #2788]             @ 0xae4 
    /*0001b76c*/ CMP         R2, #1 
    /*0001b770*/ BNE         VI_GetPipeSnapStatus_x1b6b0
    /*0001b774*/ LDR         R1, [R3, #484]              @ 0x1e4 
    /*0001b778*/ CMP         R1, #0 
    /*0001b77c*/ BEQ         VI_GetPipeSnapStatus_x1b6b0
    /*0001b780*/ LDR         R0, [R3, #2796]             @ 0xaec 
    /*0001b784*/ CMP         R1, R0 
    /*0001b788*/ BHI         VI_GetPipeSnapStatus_x1b6b0
    /*0001b78c*/ STR         R2, [R6] 
    /*0001b790*/ MOVW        R1, #2433                   @ 0x981 
    /*0001b794*/ LDR         R3, [R3, #484]              @ 0x1e4 
    /*0001b798*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7b60] 
    /*0001b79c*/ STR         R1, [SP] 
    /*0001b7a0*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7b60] 
    /*0001b7a4*/ STR         R5, [SP, #4] 
    /*0001b7a8*/ MOV         R1, #16 
    /*0001b7ac*/ STR         R3, [SP, #8] 
    /*0001b7b0*/ MOV         R0, #7 
    /*0001b7b4*/ LDR         R3, [PC, #120]              @ 0x000000000001b834 
    /*0001b7b8*/ BL          0x000000000001B7B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b7bc*/ B           VI_GetPipeSnapStatus_x1b6b0
    VI_GetPipeSnapStatus_x1b7c0:
    /*0001b7c0*/ MOV         R0, R4 
    /*0001b7c4*/ ADD         R1, SP, #28 
    /*0001b7c8*/ BL          0x000000000001B7C8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001b7cc*/ MOVW        R3, #2420                   @ 0x974 
    /*0001b7d0*/ STR         R9, [SP, #4] 
    /*0001b7d4*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x767c] 
    /*0001b7d8*/ STR         R3, [SP] 
    /*0001b7dc*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x767c] 
    /*0001b7e0*/ LDR         R3, [PC, #76]               @ 0x000000000001b834 
    /*0001b7e4*/ MOV         R1, #16 
    /*0001b7e8*/ MOV         R0, #3 
    /*0001b7ec*/ MOVW        R4, #32786                  @ 0x8012 
    /*0001b7f0*/ BL          0x000000000001B7F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b7f4*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001b7f8*/ B           VI_GetPipeSnapStatus_x1b568
    VI_GetPipeSnapStatus_x1b7fc:
    /*0001b7fc*/ ADD         R1, SP, #28 
    /*0001b800*/ MOV         R0, R4 
    /*0001b804*/ BL          0x000000000001B804          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001b808*/ MOVW        R3, #2412                   @ 0x96c 
    /*0001b80c*/ STR         R9, [SP, #4] 
    /*0001b810*/ MOVW        R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7b24] 
    /*0001b814*/ STR         R3, [SP] 
    /*0001b818*/ MOVT        R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7b24] 
    /*0001b81c*/ LDR         R3, [PC, #16]               @ 0x000000000001b834 
    /*0001b820*/ MOV         R1, #16 
    /*0001b824*/ MOV         R0, #3 
    /*0001b828*/ MVN         R4, #0 
    /*0001b82c*/ BL          0x000000000001B82C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b830*/ B           VI_GetPipeSnapStatus_x1b568
    /*0001b834*/ ANDEQ       R1, R0, IP, ROR #1 
FUNC_END VI_GetPipeSnapStatus


FUNC_BEGIN VI_COMM_SaveIspInfo2Pic
    /*0001b838*/ PUSH        {R4, R5, R6, LR} 
    /*0001b83c*/ MOV         R4, R1 
    /*0001b840*/ LDR         R5, [R1, #320]              @ 0x140 
    /*0001b844*/ MOV         R6, R0 
    /*0001b848*/ CMP         R5, #0 
    /*0001b84c*/ BEQ         VI_COMM_SaveIspInfo2Pic_x1b88c
    /*0001b850*/ MOV         R0, #28 
    /*0001b854*/ BL          0x000000000001B854          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b858*/ CMP         R0, #0 
    /*0001b85c*/ BEQ         VI_COMM_SaveIspInfo2Pic_x1b88c
    /*0001b860*/ MOV         R0, #28 
    /*0001b864*/ BL          0x000000000001B864          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b868*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*0001b86c*/ CMP         R3, #0 
    /*0001b870*/ BEQ         VI_COMM_SaveIspInfo2Pic_x1b88c
    /*0001b874*/ MOV         R0, #28 
    /*0001b878*/ BL          0x000000000001B878          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b87c*/ MOV         R1, R5 
    /*0001b880*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*0001b884*/ MOV         R0, R6 
    /*0001b888*/ BLX         R3 
    VI_COMM_SaveIspInfo2Pic_x1b88c:
    /*0001b88c*/ LDR         R5, [R4, #304]              @ 0x130 
    /*0001b890*/ CMP         R5, #0 
    /*0001b894*/ BEQ         VI_COMM_SaveIspInfo2Pic_x1b8e8
    /*0001b898*/ MOV         R0, #28 
    /*0001b89c*/ BL          0x000000000001B89C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b8a0*/ CMP         R0, #0 
    /*0001b8a4*/ BEQ         VI_COMM_SaveIspInfo2Pic_x1b8e8
    /*0001b8a8*/ MOV         R0, #28 
    /*0001b8ac*/ BL          0x000000000001B8AC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b8b0*/ LDR         R3, [R0, #12] 
    /*0001b8b4*/ CMP         R3, #0 
    /*0001b8b8*/ BEQ         VI_COMM_SaveIspInfo2Pic_x1b8e8
    /*0001b8bc*/ LDR         R3, [R4, #256]              @ 0x100 
    /*0001b8c0*/ MOV         R2, #0 
    /*0001b8c4*/ MOV         R0, #28 
    /*0001b8c8*/ STR         R2, [R5, #24] 
    /*0001b8cc*/ AND         R3, R3, #1 
    /*0001b8d0*/ STR         R3, [R5, #20] 
    /*0001b8d4*/ BL          0x000000000001B8D4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b8d8*/ ADD         R1, R5, #28 
    /*0001b8dc*/ LDR         R3, [R0, #12] 
    /*0001b8e0*/ MOV         R0, R6 
    /*0001b8e4*/ BLX         R3 
    VI_COMM_SaveIspInfo2Pic_x1b8e8:
    /*0001b8e8*/ LDR         R4, [R4, #308]              @ 0x134 
    /*0001b8ec*/ CMP         R4, #0 
    /*0001b8f0*/ BEQ         VI_COMM_SaveIspInfo2Pic_x1b930
    /*0001b8f4*/ MOV         R0, #28 
    /*0001b8f8*/ BL          0x000000000001B8F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b8fc*/ CMP         R0, #0 
    /*0001b900*/ BEQ         VI_COMM_SaveIspInfo2Pic_x1b930
    /*0001b904*/ MOV         R0, #28 
    /*0001b908*/ BL          0x000000000001B908          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b90c*/ LDR         R3, [R0, #28] 
    /*0001b910*/ CMP         R3, #0 
    /*0001b914*/ BEQ         VI_COMM_SaveIspInfo2Pic_x1b930
    /*0001b918*/ MOV         R0, #28 
    /*0001b91c*/ BL          0x000000000001B91C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b920*/ MOV         R1, R4 
    /*0001b924*/ LDR         R3, [R0, #28] 
    /*0001b928*/ MOV         R0, R6 
    /*0001b92c*/ BLX         R3 
    VI_COMM_SaveIspInfo2Pic_x1b930:
    /*0001b930*/ MOV         R0, #0 
    /*0001b934*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_COMM_SaveIspInfo2Pic


FUNC_BEGIN VI_COMM_GetPipeIntCnt.part.1
    /*0001b938*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001b93c*/ SUB         SP, SP, #12 
    /*0001b940*/ MOV         R2, #215                    @ 0xd7 
    /*0001b944*/ MOV         R1, #16 
    /*0001b948*/ STR         R0, [SP, #4] 
    /*0001b94c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x1104] 
    /*0001b950*/ STR         R2, [SP] 
    /*0001b954*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x1104] 
    /*0001b958*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7bc8] 
    /*0001b95c*/ MOV         R0, #3 
    /*0001b960*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7bc8] 
    /*0001b964*/ BL          0x000000000001B964          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b968*/ MOV         R0, #0 
    /*0001b96c*/ ADD         SP, SP, #12 
    /*0001b970*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_COMM_GetPipeIntCnt.part.1


FUNC_BEGIN VI_UserPicUpdateOfflineTimeRefTimePts
    /*0001b974*/ PUSH        {R4, R5, R6, LR} 
    /*0001b978*/ MOV         R4, R0 
    /*0001b97c*/ BL          0x000000000001B97C          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0001b980*/ CMP         R0, #1 
    /*0001b984*/ BLS         VI_UserPicUpdateOfflineTimeRefTimePts_x1b990
    /*0001b988*/ MOV         R0, #0 
    /*0001b98c*/ POP         {R4, R5, R6, PC} 
    VI_UserPicUpdateOfflineTimeRefTimePts_x1b990:
    /*0001b990*/ MOV         R0, R4 
    /*0001b994*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001b998*/ BL          0x000000000001B998          @ VI_CalcRawTimeRef [R_ARM_CALL: .text+0x5f08] 
    /*0001b99c*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001b9a0*/ ADD         R3, R4, #444                @ 0x1bc 
    /*0001b9a4*/ ADD         R4, R4, #224                @ 0xe0 
    /*0001b9a8*/ LSL         R4, R4, #3 
    /*0001b9ac*/ STR         R0, [R5, R3, LSL #2] 
    /*0001b9b0*/ MOV         R0, #2 
    /*0001b9b4*/ BL          0x000000000001B9B4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b9b8*/ LDR         R3, [R0] 
    /*0001b9bc*/ BLX         R3 
    /*0001b9c0*/ STRD        R0, [R5, R4] 
    /*0001b9c4*/ MOV         R0, #0 
    /*0001b9c8*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_UserPicUpdateOfflineTimeRefTimePts


FUNC_BEGIN VI_COMM_GetUserPicTimeRef
    /*0001b9cc*/ PUSH        {R4, R5, R6, LR} 
    /*0001b9d0*/ MOV         R5, R1 
    /*0001b9d4*/ MOV         R4, R0 
    /*0001b9d8*/ BL          0x000000000001B9D8          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0001b9dc*/ CMP         R0, #1 
    /*0001b9e0*/ BLS         VI_COMM_GetUserPicTimeRef_x1b9f4
    /*0001b9e4*/ MOV         R1, R5 
    /*0001b9e8*/ MOV         R0, R4 
    /*0001b9ec*/ POP         {R4, R5, R6, LR} 
    VI_COMM_GetUserPicTimeRef_x1b9f0:
    /*0001b9f0*/ B           VI_COMM_GetUserPicTimeRef_x1b9f0@ VI_CalcChnTimeRef [R_ARM_JUMP24: .text+0x5ee4] 
    VI_COMM_GetUserPicTimeRef_x1b9f4:
    /*0001b9f4*/ ADD         R4, R4, #444                @ 0x1bc 
    /*0001b9f8*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001b9fc*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001ba00*/ LDR         R0, [R3, R4, LSL #2] 
    /*0001ba04*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_COMM_GetUserPicTimeRef


FUNC_BEGIN VI_COMM_GetUserPicTimePts
    /*0001ba08*/ PUSH        {R4, LR} 
    /*0001ba0c*/ MOV         R4, R0 
    /*0001ba10*/ BL          0x000000000001BA10          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0001ba14*/ CMP         R0, #1 
    /*0001ba18*/ BLS         VI_COMM_GetUserPicTimePts_x1ba30
    /*0001ba1c*/ MOV         R0, #2 
    /*0001ba20*/ BL          0x000000000001BA20          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001ba24*/ LDR         R3, [R0] 
    /*0001ba28*/ BLX         R3 
    /*0001ba2c*/ POP         {R4, PC} 
    VI_COMM_GetUserPicTimePts_x1ba30:
    /*0001ba30*/ ADD         R4, R4, #224                @ 0xe0 
    /*0001ba34*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001ba38*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001ba3c*/ LDR         R0, [R3, R4, LSL #3] 
    /*0001ba40*/ POP         {R4, PC} 
FUNC_END VI_COMM_GetUserPicTimePts


FUNC_BEGIN VI_COMM_UserPicIsSuitable
    /*0001ba44*/ PUSH        {R4, R5, R6, LR} 
    /*0001ba48*/ SUB         SP, SP, #56                 @ 0x38 
    /*0001ba4c*/ MOV         R4, R2 
    /*0001ba50*/ MOV         R5, R0 
    /*0001ba54*/ MOV         R6, R1 
    /*0001ba58*/ ADD         R2, SP, #12 
    /*0001ba5c*/ BL          0x000000000001BA5C          @ VI_DRV_GetWorkingChnAttr [R_ARM_CALL: .text+0x2991c] 
    /*0001ba60*/ ADD         R2, SP, #4 
    /*0001ba64*/ MOV         R1, R6 
    /*0001ba68*/ MOV         R0, R5 
    /*0001ba6c*/ BL          0x000000000001BA6C          @ VI_DRV_GetChnOutPutSize [R_ARM_CALL: .text+0x2b724] 
    /*0001ba70*/ LDR         R3, [R4] 
    /*0001ba74*/ LDR         R2, [SP, #4] 
    /*0001ba78*/ CMP         R2, R3 
    /*0001ba7c*/ BEQ         VI_COMM_UserPicIsSuitable_x1ba8c
    VI_COMM_UserPicIsSuitable_x1ba80:
    /*0001ba80*/ MOV         R0, #0 
    VI_COMM_UserPicIsSuitable_x1ba84:
    /*0001ba84*/ ADD         SP, SP, #56                 @ 0x38 
    /*0001ba88*/ POP         {R4, R5, R6, PC} 
    VI_COMM_UserPicIsSuitable_x1ba8c:
    /*0001ba8c*/ LDR         R2, [SP, #8] 
    /*0001ba90*/ LDR         R3, [R4, #4] 
    /*0001ba94*/ CMP         R2, R3 
    /*0001ba98*/ BNE         VI_COMM_UserPicIsSuitable_x1ba80
    /*0001ba9c*/ LDR         R2, [SP, #32] 
    /*0001baa0*/ LDR         R3, [R4, #20] 
    /*0001baa4*/ CMP         R2, R3 
    /*0001baa8*/ BNE         VI_COMM_UserPicIsSuitable_x1ba80
    /*0001baac*/ LDR         R3, [R4, #12] 
    /*0001bab0*/ LDR         R0, [SP, #20] 
    /*0001bab4*/ SUB         R0, R0, R3 
    /*0001bab8*/ CLZ         R0, R0 
    /*0001babc*/ LSR         R0, R0, #5 
    /*0001bac0*/ B           VI_COMM_UserPicIsSuitable_x1ba84
FUNC_END VI_COMM_UserPicIsSuitable


FUNC_BEGIN VI_InitUsrPicInfo
    /*0001bac4*/ PUSH        {R4, R5, LR} 
    /*0001bac8*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001bacc*/ SUB         SP, SP, #12 
    /*0001bad0*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001bad4*/ ADD         R0, R4, #1904               @ 0x770 
    /*0001bad8*/ ADD         R1, SP, #4 
    /*0001badc*/ BL          0x000000000001BADC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001bae0*/ MOV         R2, #1904                   @ 0x770 
    /*0001bae4*/ MOV         R1, #0 
    /*0001bae8*/ MOV         R0, R4 
    /*0001baec*/ BL          0x000000000001BAEC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0001baf0*/ MVN         R5, #0 
    /*0001baf4*/ MOV         R0, #0 
    /*0001baf8*/ ADD         R1, R4, #1408               @ 0x580 
    /*0001bafc*/ MOV         R2, #2 
    /*0001bb00*/ MOV         IP, R4 
    /*0001bb04*/ STM         R4, {R0, R2} 
    /*0001bb08*/ MOV         R3, R4 
    /*0001bb0c*/ MOV         R2, R0 
    /*0001bb10*/ MOV         LR, R5 
    /*0001bb14*/ STR         R0, [R4, #8] 
    /*0001bb18*/ STR         R5, [R4, #344]              @ 0x158 
    VI_InitUsrPicInfo_x1bb1c:
    /*0001bb1c*/ STR         R2, [R3, #352]              @ 0x160 
    /*0001bb20*/ ADD         R3, R3, #352                @ 0x160 
    /*0001bb24*/ STR         R2, [R3, #4] 
    /*0001bb28*/ STR         R2, [R3, #344]              @ 0x158 
    /*0001bb2c*/ STR         LR, [R3, #336]              @ 0x150 
    /*0001bb30*/ CMP         R1, R3 
    /*0001bb34*/ BNE         VI_InitUsrPicInfo_x1bb1c
    /*0001bb38*/ ADD         R1, SP, #4 
    /*0001bb3c*/ LDR         R0, [PC, #40]               @ 0x000000000001bb6c 
    /*0001bb40*/ STR         R2, [IP, #1760]             @ 0x6e0 
    /*0001bb44*/ STR         LR, [IP, #1824]             @ 0x720 
    /*0001bb48*/ STR         R2, [IP, #1764]             @ 0x6e4 
    /*0001bb4c*/ STR         LR, [IP, #1828]             @ 0x724 
    /*0001bb50*/ STR         R2, [IP, #1768]             @ 0x6e8 
    /*0001bb54*/ STR         LR, [IP, #1832]             @ 0x728 
    /*0001bb58*/ STR         R2, [IP, #1772]             @ 0x6ec 
    /*0001bb5c*/ STR         LR, [IP, #1836]             @ 0x72c 
    /*0001bb60*/ BL          0x000000000001BB60          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001bb64*/ ADD         SP, SP, #12 
    /*0001bb68*/ POP         {R4, R5, PC} 
    /*0001bb6c*/ ANDEQ       R1, R1, R8, ASR #27 
FUNC_END VI_InitUsrPicInfo


FUNC_BEGIN VI_DeinitUsrPicInfo
    /*0001bb70*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001bb74*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001bb78*/ SUB         SP, SP, #12 
    /*0001bb7c*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001bb80*/ ADD         R0, R6, #1904               @ 0x770 
    /*0001bb84*/ ADD         R1, SP, #4 
    /*0001bb88*/ BL          0x000000000001BB88          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001bb8c*/ LDR         R3, [R6] 
    /*0001bb90*/ CMP         R3, #1 
    /*0001bb94*/ BEQ         VI_DeinitUsrPicInfo_x1bc20
    VI_DeinitUsrPicInfo_x1bb98:
    /*0001bb98*/ LDR         R4, [PC, #152]              @ 0x000000000001bc38 
    /*0001bb9c*/ MOV         R5, #0 
    /*0001bba0*/ ADD         R7, R4, #1408               @ 0x580 
    VI_DeinitUsrPicInfo_x1bba4:
    /*0001bba4*/ LDR         R3, [R4, #-4] 
    /*0001bba8*/ CMP         R3, #0 
    /*0001bbac*/ BNE         VI_DeinitUsrPicInfo_x1bc10
    VI_DeinitUsrPicInfo_x1bbb0:
    /*0001bbb0*/ STR         R5, [R4, #-4] 
    /*0001bbb4*/ ADD         R4, R4, #352                @ 0x160 
    /*0001bbb8*/ STR         R5, [R4, #-360]             @ 0xfffffe98 
    /*0001bbbc*/ STR         R5, [R4, #-16] 
    /*0001bbc0*/ CMP         R7, R4 
    /*0001bbc4*/ BNE         VI_DeinitUsrPicInfo_x1bba4
    /*0001bbc8*/ ADD         R1, SP, #4 
    /*0001bbcc*/ LDR         R0, [PC, #104]              @ 0x000000000001bc3c 
    /*0001bbd0*/ MVN         R3, #0 
    /*0001bbd4*/ MOV         R2, #2 
    /*0001bbd8*/ STR         R5, [R6] 
    /*0001bbdc*/ STR         R5, [R6, #8] 
    /*0001bbe0*/ STR         R5, [R6, #1760]             @ 0x6e0 
    /*0001bbe4*/ STR         R5, [R6, #1764]             @ 0x6e4 
    /*0001bbe8*/ STR         R5, [R6, #1768]             @ 0x6e8 
    /*0001bbec*/ STR         R5, [R6, #1772]             @ 0x6ec 
    /*0001bbf0*/ STR         R2, [R6, #4] 
    /*0001bbf4*/ STR         R3, [R6, #1824]             @ 0x720 
    /*0001bbf8*/ STR         R3, [R6, #1828]             @ 0x724 
    /*0001bbfc*/ STR         R3, [R6, #1832]             @ 0x728 
    /*0001bc00*/ STR         R3, [R6, #1836]             @ 0x72c 
    /*0001bc04*/ BL          0x000000000001BC04          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001bc08*/ ADD         SP, SP, #12 
    /*0001bc0c*/ POP         {R4, R5, R6, R7, PC} 
    VI_DeinitUsrPicInfo_x1bc10:
    /*0001bc10*/ MOV         R1, #0 
    /*0001bc14*/ MOV         R0, R4 
    /*0001bc18*/ BL          0x000000000001BC18          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001bc1c*/ B           VI_DeinitUsrPicInfo_x1bbb0
    VI_DeinitUsrPicInfo_x1bc20:
    /*0001bc20*/ LDR         R1, [R6, #4] 
    /*0001bc24*/ CMP         R1, #0 
    /*0001bc28*/ BNE         VI_DeinitUsrPicInfo_x1bb98
    /*0001bc2c*/ ADD         R0, R6, #16 
    /*0001bc30*/ BL          0x000000000001BC30          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001bc34*/ B           VI_DeinitUsrPicInfo_x1bb98
    /*0001bc38*/ ANDEQ       R1, R1, R0, ASR #15 
    /*0001bc3c*/ ANDEQ       R1, R1, R8, ASR #27 
FUNC_END VI_DeinitUsrPicInfo


FUNC_BEGIN VI_COMM_GetPipeIntCnt
    /*0001bc40*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001bc44*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001bc48*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001bc4c*/ CMP         R3, #0 
    /*0001bc50*/ BEQ         VI_COMM_GetPipeIntCnt_x1bc60
    /*0001bc54*/ ADD         R3, R3, #32768              @ 0x8000 
    /*0001bc58*/ LDR         R0, [R3, #3656]             @ 0xe48 
    /*0001bc5c*/ BX          LR 
    VI_COMM_GetPipeIntCnt_x1bc60:
    /*0001bc60*/ B           0x000000000001B938 
FUNC_END VI_COMM_GetPipeIntCnt


FUNC_BEGIN VI_COMM_GetPipeSrcFrmRate
    /*0001bc64*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001bc68*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0001bc6c*/ ADD         R1, SP, #4 
    /*0001bc70*/ BL          0x000000000001BC70          @ VI_DRV_GetPipeAttr [R_ARM_CALL: .text+0x28674] 
    /*0001bc74*/ LDR         R0, [SP, #60]               @ 0x3c 
    /*0001bc78*/ CMN         R0, #1 
    /*0001bc7c*/ MOVEQ       R0, #30 
    /*0001bc80*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0001bc84*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_COMM_GetPipeSrcFrmRate


FUNC_BEGIN VI_COMM_SendUserPic
    /*0001bc88*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0001bc8c*/ MOV         R8, R1 
    /*0001bc90*/ ADD         R1, R0, R1 
    /*0001bc94*/ MOV         R3, #712                    @ 0x2c8 
    /*0001bc98*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001bc9c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001bca0*/ MUL         R3, R3, R1 
    /*0001bca4*/ MOV         R7, R0 
    /*0001bca8*/ ADD         R0, R4, #1904               @ 0x770 
    /*0001bcac*/ MOV         R6, #0 
    /*0001bcb0*/ ADD         R0, R0, #8 
    /*0001bcb4*/ MOV         R1, R2 
    /*0001bcb8*/ ADD         R4, R4, R3 
    /*0001bcbc*/ ADD         R5, R0, R3 
    /*0001bcc0*/ MOV         R9, #1 
    /*0001bcc4*/ MOV         R2, #336                    @ 0x150 
    /*0001bcc8*/ MOV         R0, R5 
    /*0001bccc*/ STR         R9, [R4, #2608]             @ 0xa30 
    /*0001bcd0*/ STR         R9, [R4, #2612]             @ 0xa34 
    /*0001bcd4*/ STR         R6, [R4, #2620]             @ 0xa3c 
    /*0001bcd8*/ STR         R6, [R4, #2616]             @ 0xa38 
    /*0001bcdc*/ STR         R6, [R4, #2600]             @ 0xa28 
    /*0001bce0*/ BL          0x000000000001BCE0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001bce4*/ MVN         R3, #0 
    /*0001bce8*/ MOV         R0, R7 
    /*0001bcec*/ STR         R3, [R4, #2576]             @ 0xa10 
    /*0001bcf0*/ BL          0x000000000001BCF0          @ VI_DRV_GetColorGamutFromIsp [R_ARM_CALL: .text+0x38a4c] 
    /*0001bcf4*/ MOV         R2, R5 
    /*0001bcf8*/ MOV         R1, R8 
    /*0001bcfc*/ STR         R9, [R4, #2604]             @ 0xa2c 
    /*0001bd00*/ STR         R0, [R4, #1940]             @ 0x794 
    /*0001bd04*/ MOV         R0, R7 
    /*0001bd08*/ BL          0x000000000001BD08          @ VI_ProcChnFrame [R_ARM_CALL: .text+0x2c70] 
    /*0001bd0c*/ MOV         R0, R6 
    /*0001bd10*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VI_COMM_SendUserPic


FUNC_BEGIN VI_UserPicVgsByPassTaskCallBack
    /*0001bd14*/ PUSH        {R4, R5, R6, LR} 
    /*0001bd18*/ MOV         R5, R3 
    /*0001bd1c*/ LDR         R3, [R3, #736]              @ 0x2e0 
    /*0001bd20*/ SUB         SP, SP, #8 
    /*0001bd24*/ MOV         R6, R1 
    /*0001bd28*/ CMP         R3, #1 
    /*0001bd2c*/ BEQ         VI_UserPicVgsByPassTaskCallBack_x1bd98
    /*0001bd30*/ MOVW        R3, #747                    @ 0x2eb 
    /*0001bd34*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c04] 
    /*0001bd38*/ STR         R3, [SP] 
    /*0001bd3c*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c04] 
    /*0001bd40*/ LDR         R3, [PC, #100]              @ 0x000000000001bdac 
    /*0001bd44*/ MOV         R1, #16 
    /*0001bd48*/ MOV         R0, #3 
    /*0001bd4c*/ BL          0x000000000001BD4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_UserPicVgsByPassTaskCallBack_x1bd50:
    /*0001bd50*/ MOV         R4, #176                    @ 0xb0 
    /*0001bd54*/ MOV         R1, #0 
    /*0001bd58*/ MUL         R4, R4, R6 
    /*0001bd5c*/ MOV         R0, R5 
    /*0001bd60*/ BL          0x000000000001BD60          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001bd64*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001bd68*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001bd6c*/ ADD         R0, R4, #28 
    /*0001bd70*/ ADD         R0, R5, R0 
    /*0001bd74*/ BL          0x000000000001BD74          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0001bd78*/ ADD         R0, R4, #32 
    /*0001bd7c*/ ADD         R0, R5, R0 
    /*0001bd80*/ BL          0x000000000001BD80          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0001bd84*/ ADD         R0, R4, #88                 @ 0x58 
    /*0001bd88*/ ADD         R0, R5, R0 
    /*0001bd8c*/ ADD         SP, SP, #8 
    /*0001bd90*/ POP         {R4, R5, R6, LR} 
    VI_UserPicVgsByPassTaskCallBack_x1bd94:
    /*0001bd94*/ B           VI_UserPicVgsByPassTaskCallBack_x1bd94@ osal_wakeup [R_ARM_JUMP24: +0x0] 
    VI_UserPicVgsByPassTaskCallBack_x1bd98:
    /*0001bd98*/ MOV         R1, R2 
    /*0001bd9c*/ MOV         R0, R6 
    /*0001bda0*/ ADD         R2, R5, #336                @ 0x150 
    /*0001bda4*/ BL          0x000000000001BDA4          @ VI_COMM_SendUserPic [R_ARM_CALL: .text+0x1bc88] 
    /*0001bda8*/ B           VI_UserPicVgsByPassTaskCallBack_x1bd50
    /*0001bdac*/ ANDEQ       R1, R0, IP, LSL R1 
FUNC_END VI_UserPicVgsByPassTaskCallBack


FUNC_BEGIN VI_UserPicOnlineTaskCallBack
    /*0001bdb0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0001bdb4*/ MOV         R0, R3 
    /*0001bdb8*/ MOV         R5, R3 
    /*0001bdbc*/ MOV         R7, R1 
    /*0001bdc0*/ MOV         R1, #0 
    /*0001bdc4*/ LDR         R4, [R3, #672]              @ 0x2a0 
    /*0001bdc8*/ MOV         R8, R2 
    /*0001bdcc*/ BL          0x000000000001BDCC          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001bdd0*/ LDR         R3, [R5, #736]              @ 0x2e0 
    /*0001bdd4*/ CMP         R3, #1 
    /*0001bdd8*/ BEQ         VI_UserPicOnlineTaskCallBack_x1be20
    VI_UserPicOnlineTaskCallBack_x1bddc:
    /*0001bddc*/ ADD         R0, R5, #336                @ 0x150 
    /*0001bde0*/ MOV         R1, #0 
    /*0001bde4*/ BL          0x000000000001BDE4          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    VI_UserPicOnlineTaskCallBack_x1bde8:
    /*0001bde8*/ MOV         R4, #176                    @ 0xb0 
    /*0001bdec*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001bdf0*/ MUL         R4, R4, R7 
    /*0001bdf4*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001bdf8*/ ADD         R0, R4, #28 
    /*0001bdfc*/ ADD         R0, R5, R0 
    /*0001be00*/ BL          0x000000000001BE00          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0001be04*/ ADD         R0, R4, #32 
    /*0001be08*/ ADD         R0, R5, R0 
    /*0001be0c*/ BL          0x000000000001BE0C          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0001be10*/ ADD         R0, R4, #88                 @ 0x58 
    /*0001be14*/ ADD         R0, R5, R0 
    /*0001be18*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    VI_UserPicOnlineTaskCallBack_x1be1c:
    /*0001be1c*/ B           VI_UserPicOnlineTaskCallBack_x1be1c@ osal_wakeup [R_ARM_JUMP24: +0x0] 
    VI_UserPicOnlineTaskCallBack_x1be20:
    /*0001be20*/ ADD         R3, R7, R8 
    /*0001be24*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001be28*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001be2c*/ ADD         R2, R6, R3, LSL #4 
    /*0001be30*/ LDR         R2, [R2, #1852]             @ 0x73c 
    /*0001be34*/ CMP         R2, #1 
    /*0001be38*/ ADDNE       R5, R5, #336                @ 0x150 
    /*0001be3c*/ BNE         VI_UserPicOnlineTaskCallBack_x1beac
    /*0001be40*/ ADD         R3, R3, #456                @ 0x1c8 
    /*0001be44*/ LDR         R3, [R6, R3, LSL #2] 
    /*0001be48*/ CMP         R4, R3 
    /*0001be4c*/ BNE         VI_UserPicOnlineTaskCallBack_x1bddc
    /*0001be50*/ ADD         SL, R4, #1 
    /*0001be54*/ MOV         R9, #352                    @ 0x160 
    /*0001be58*/ MLA         R3, R9, SL, R6 
    /*0001be5c*/ MLA         R9, R9, R4, R6 
    /*0001be60*/ LDR         R3, [R3, #4] 
    /*0001be64*/ CMP         R3, #1 
    /*0001be68*/ ADDNE       R9, R9, #360                @ 0x168 
    /*0001be6c*/ BEQ         VI_UserPicOnlineTaskCallBack_x1bec0
    VI_UserPicOnlineTaskCallBack_x1be70:
    /*0001be70*/ ADD         R5, R5, #336                @ 0x150 
    /*0001be74*/ MOV         R2, #336                    @ 0x150 
    /*0001be78*/ MOV         R0, R9 
    /*0001be7c*/ MOV         R1, R5 
    /*0001be80*/ BL          0x000000000001BE80          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001be84*/ MOV         R0, R9 
    /*0001be88*/ MOV         R1, #0 
    /*0001be8c*/ BL          0x000000000001BE8C          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001be90*/ MOV         R3, #352                    @ 0x160 
    /*0001be94*/ MLA         R4, R3, R4, R6 
    /*0001be98*/ MOV         R2, #0 
    /*0001be9c*/ MLA         R6, R3, SL, R6 
    /*0001bea0*/ MOV         R3, #1 
    /*0001bea4*/ STR         R2, [R4, #696]              @ 0x2b8 
    /*0001bea8*/ STR         R3, [R6, #4] 
    VI_UserPicOnlineTaskCallBack_x1beac:
    /*0001beac*/ MOV         R2, R5 
    /*0001beb0*/ MOV         R1, R8 
    /*0001beb4*/ MOV         R0, R7 
    /*0001beb8*/ BL          0x000000000001BEB8          @ VI_COMM_SendUserPic [R_ARM_CALL: .text+0x1bc88] 
    /*0001bebc*/ B           VI_UserPicOnlineTaskCallBack_x1bde8
    VI_UserPicOnlineTaskCallBack_x1bec0:
    /*0001bec0*/ ADD         R0, R9, #360                @ 0x168 
    /*0001bec4*/ MOV         R1, #0 
    /*0001bec8*/ MOV         R9, R0 
    /*0001becc*/ BL          0x000000000001BECC          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001bed0*/ B           VI_UserPicOnlineTaskCallBack_x1be70
FUNC_END VI_UserPicOnlineTaskCallBack


FUNC_BEGIN VI_UserPicCoverExTaskCallBack
    /*0001bed4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0001bed8*/ MOV         R6, R1 
    /*0001bedc*/ LDR         R1, [R3, #736]              @ 0x2e0 
    /*0001bee0*/ SUB         SP, SP, #8 
    /*0001bee4*/ CMP         R1, #1 
    /*0001bee8*/ BEQ         VI_UserPicCoverExTaskCallBack_x1bf34
    VI_UserPicCoverExTaskCallBack_x1beec:
    /*0001beec*/ ADD         R0, R3, #336                @ 0x150 
    /*0001bef0*/ MOV         R1, #0 
    /*0001bef4*/ BL          0x000000000001BEF4          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    VI_UserPicCoverExTaskCallBack_x1bef8:
    /*0001bef8*/ MOV         R4, #176                    @ 0xb0 
    /*0001befc*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001bf00*/ MUL         R4, R4, R6 
    /*0001bf04*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001bf08*/ ADD         R0, R4, #28 
    /*0001bf0c*/ ADD         R0, R5, R0 
    /*0001bf10*/ BL          0x000000000001BF10          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0001bf14*/ ADD         R0, R4, #32 
    /*0001bf18*/ ADD         R0, R5, R0 
    /*0001bf1c*/ BL          0x000000000001BF1C          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0001bf20*/ ADD         R0, R4, #88                 @ 0x58 
    /*0001bf24*/ ADD         R0, R5, R0 
    /*0001bf28*/ ADD         SP, SP, #8 
    /*0001bf2c*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    VI_UserPicCoverExTaskCallBack_x1bf30:
    /*0001bf30*/ B           VI_UserPicCoverExTaskCallBack_x1bf30@ osal_wakeup [R_ARM_JUMP24: +0x0] 
    VI_UserPicCoverExTaskCallBack_x1bf34:
    /*0001bf34*/ MOV         R4, R2 
    /*0001bf38*/ ADD         R2, R6, R2 
    /*0001bf3c*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001bf40*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001bf44*/ ADD         R1, R5, R2, LSL #4 
    /*0001bf48*/ LDR         R1, [R1, #1852]             @ 0x73c 
    /*0001bf4c*/ CMP         R1, #1 
    /*0001bf50*/ ADDNE       SL, R3, #336                @ 0x150 
    /*0001bf54*/ BNE         VI_UserPicCoverExTaskCallBack_x1bfc8
    /*0001bf58*/ ADD         R2, R2, #456                @ 0x1c8 
    /*0001bf5c*/ LDR         R7, [R3, #672]              @ 0x2a0 
    /*0001bf60*/ LDR         R2, [R5, R2, LSL #2] 
    /*0001bf64*/ CMP         R7, R2 
    /*0001bf68*/ BNE         VI_UserPicCoverExTaskCallBack_x1beec
    /*0001bf6c*/ ADD         R9, R7, #1 
    /*0001bf70*/ MOV         R8, #352                    @ 0x160 
    /*0001bf74*/ MLA         R2, R8, R9, R5 
    /*0001bf78*/ LDR         R2, [R2, #4] 
    /*0001bf7c*/ CMP         R2, #1 
    /*0001bf80*/ BEQ         VI_UserPicCoverExTaskCallBack_x1bfdc
    /*0001bf84*/ MLA         R8, R8, R7, R5 
    /*0001bf88*/ ADD         R8, R8, #360                @ 0x168 
    VI_UserPicCoverExTaskCallBack_x1bf8c:
    /*0001bf8c*/ ADD         SL, R3, #336                @ 0x150 
    /*0001bf90*/ MOV         R2, #336                    @ 0x150 
    /*0001bf94*/ MOV         R0, R8 
    /*0001bf98*/ MOV         R1, SL 
    /*0001bf9c*/ BL          0x000000000001BF9C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001bfa0*/ MOV         R0, R8 
    /*0001bfa4*/ MOV         R1, #0 
    /*0001bfa8*/ BL          0x000000000001BFA8          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001bfac*/ MOV         R3, #352                    @ 0x160 
    /*0001bfb0*/ MLA         R7, R3, R7, R5 
    /*0001bfb4*/ MOV         R2, #0 
    /*0001bfb8*/ MLA         R5, R3, R9, R5 
    /*0001bfbc*/ MOV         R3, #1 
    /*0001bfc0*/ STR         R2, [R7, #696]              @ 0x2b8 
    /*0001bfc4*/ STR         R3, [R5, #4] 
    VI_UserPicCoverExTaskCallBack_x1bfc8:
    /*0001bfc8*/ MOV         R2, SL 
    /*0001bfcc*/ MOV         R1, R4 
    /*0001bfd0*/ MOV         R0, R6 
    /*0001bfd4*/ BL          0x000000000001BFD4          @ VI_COMM_SendUserPic [R_ARM_CALL: .text+0x1bc88] 
    /*0001bfd8*/ B           VI_UserPicCoverExTaskCallBack_x1bef8
    VI_UserPicCoverExTaskCallBack_x1bfdc:
    /*0001bfdc*/ MLA         R8, R8, R7, R5 
    /*0001bfe0*/ MOV         R1, #0 
    /*0001bfe4*/ STR         R3, [SP, #4] 
    /*0001bfe8*/ ADD         R0, R8, #360                @ 0x168 
    /*0001bfec*/ MOV         R8, R0 
    /*0001bff0*/ BL          0x000000000001BFF0          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001bff4*/ LDR         R3, [SP, #4] 
    /*0001bff8*/ B           VI_UserPicCoverExTaskCallBack_x1bf8c
FUNC_END VI_UserPicCoverExTaskCallBack


FUNC_BEGIN VI_FrmRateCtl
    /*0001bffc*/ LDR         R2, [R1, #4] 
    /*0001c000*/ LDR         R3, [R1] 
    /*0001c004*/ CMN         R2, #1 
    /*0001c008*/ CMNNE       R3, #1 
    /*0001c00c*/ MOVEQ       R0, #1 
    /*0001c010*/ MOVNE       R0, #0 
    /*0001c014*/ CMP         R2, R3 
    /*0001c018*/ ORREQ       R0, R0, #1 
    /*0001c01c*/ CMP         R0, #0 
    /*0001c020*/ BNE         VI_FrmRateCtl_x1c040
    /*0001c024*/ LDR         IP, [R1, #8] 
    /*0001c028*/ ADD         R3, R3, IP 
    /*0001c02c*/ CMP         R2, R3 
    /*0001c030*/ SUBLS       R3, R3, R2 
    /*0001c034*/ STR         R3, [R1, #8] 
    /*0001c038*/ MOVLS       R0, #1 
    /*0001c03c*/ BX          LR 
    VI_FrmRateCtl_x1c040:
    /*0001c040*/ MOV         R0, #1 
    /*0001c044*/ BX          LR 
FUNC_END VI_FrmRateCtl


FUNC_BEGIN VI_StartNoIntDet
    /*0001c048*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001c04c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001c050*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001c054*/ MOV         R6, R0 
    /*0001c058*/ LDR         R5, [R3, R0, LSL #2] 
    /*0001c05c*/ SUB         SP, SP, #100                @ 0x64 
    /*0001c060*/ CMP         R5, #0 
    /*0001c064*/ ADDNE       R3, R5, #32768              @ 0x8000 
    /*0001c068*/ LDRNE       R0, [R3, #3656]             @ 0xe48 
    /*0001c06c*/ BEQ         VI_StartNoIntDet_x1c184
    VI_StartNoIntDet_x1c070:
    /*0001c070*/ ADD         R4, R5, #36864              @ 0x9000 
    /*0001c074*/ CMP         R0, #0 
    /*0001c078*/ SUBNE       R0, R0, #1 
    /*0001c07c*/ MOV         R2, #0 
    /*0001c080*/ MOVEQ       R3, #1 
    /*0001c084*/ STREQ       R3, [R4, #2976]             @ 0xba0 
    /*0001c088*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x110] 
    /*0001c08c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x110] 
    /*0001c090*/ STRNE       R0, [R4, #2976]             @ 0xba0 
    /*0001c094*/ MOV         R0, #1000                   @ 0x3e8 
    /*0001c098*/ LDR         R1, [R3] 
    /*0001c09c*/ ADD         R5, R5, #39680              @ 0x9b00 
    /*0001c0a0*/ STR         R2, [R4, #2972]             @ 0xb9c 
    /*0001c0a4*/ ADD         R5, R5, #172                @ 0xac 
    /*0001c0a8*/ STR         R2, [R4, #2980]             @ 0xba4 
    /*0001c0ac*/ MOV         R8, #1 
    /*0001c0b0*/ STR         R1, [R4, #2984]             @ 0xba8 
    /*0001c0b4*/ BL          0x000000000001C0B4          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0001c0b8*/ ADD         R1, SP, #28 
    /*0001c0bc*/ STR         R0, [R4, #3008]             @ 0xbc0 
    /*0001c0c0*/ MOV         R0, R6 
    /*0001c0c4*/ BL          0x000000000001C0C4          @ VI_DRV_GetPipeAttr [R_ARM_CALL: .text+0x28674] 
    /*0001c0c8*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0001c0cc*/ LDR         R2, [R4, #3008]             @ 0xbc0 
    /*0001c0d0*/ MOV         R0, R5 
    /*0001c0d4*/ CMN         R3, #1 
    /*0001c0d8*/ STR         R8, [R4, #2968]             @ 0xb98 
    /*0001c0dc*/ MOVEQ       R3, #30 
    /*0001c0e0*/ CMP         R3, R2 
    /*0001c0e4*/ MOVCS       R3, R2 
    /*0001c0e8*/ STR         R3, [R4, #3004]             @ 0xbbc 
    /*0001c0ec*/ BL          0x000000000001C0EC          @ osal_timer_init [R_ARM_CALL: +0x0] 
    /*0001c0f0*/ SUBS        R9, R0, #0 
    /*0001c0f4*/ BNE         VI_StartNoIntDet_x1c18c
    /*0001c0f8*/ LDR         R3, [PC, #180]              @ 0x000000000001c1b4 
    /*0001c0fc*/ MOV         R7, #176                    @ 0xb0 
    /*0001c100*/ ADD         R1, SP, #28 
    /*0001c104*/ MLA         R7, R7, R6, R3 
    /*0001c108*/ MOV         R0, R7 
    /*0001c10c*/ BL          0x000000000001C10C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001c110*/ LDR         R1, [R4, #2984]             @ 0xba8 
    /*0001c114*/ STR         R8, [R4, #3000]             @ 0xbb8 
    /*0001c118*/ MOV         R0, R5 
    /*0001c11c*/ STR         R6, [R4, #2996]             @ 0xbb4 
    /*0001c120*/ MOVW        R3, #0                      @ VI_ProcNoIntDet [R_ARM_MOVW_ABS_NC: .text+0x1dae4] 
    /*0001c124*/ MOVT        R3, #0                      @ VI_ProcNoIntDet [R_ARM_MOVT_ABS: .text+0x1dae4] 
    /*0001c128*/ STR         R3, [R4, #2992]             @ 0xbb0 
    /*0001c12c*/ BL          0x000000000001C12C          @ osal_set_timer [R_ARM_CALL: +0x0] 
    /*0001c130*/ ADD         R1, SP, #28 
    /*0001c134*/ MOV         R0, R7 
    /*0001c138*/ BL          0x000000000001C138          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001c13c*/ LDR         R1, [R4, #2984]             @ 0xba8 
    /*0001c140*/ MOV         LR, #476                    @ 0x1dc 
    /*0001c144*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c78] 
    /*0001c148*/ LDR         R3, [PC, #104]              @ 0x000000000001c1b8 
    /*0001c14c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c78] 
    /*0001c150*/ STR         R1, [SP, #16] 
    /*0001c154*/ MOV         R0, #6 
    /*0001c158*/ LDR         IP, [R4, #3004]             @ 0xbbc 
    /*0001c15c*/ MOV         R1, #16 
    /*0001c160*/ STR         IP, [SP, #12] 
    /*0001c164*/ LDR         IP, [R4, #3008]             @ 0xbc0 
    /*0001c168*/ STR         R6, [SP, #4] 
    /*0001c16c*/ STR         LR, [SP] 
    /*0001c170*/ STR         IP, [SP, #8] 
    /*0001c174*/ BL          0x000000000001C174          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_StartNoIntDet_x1c178:
    /*0001c178*/ MOV         R0, R9 
    /*0001c17c*/ ADD         SP, SP, #100                @ 0x64 
    /*0001c180*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_StartNoIntDet_x1c184:
    /*0001c184*/ BL          0x000000000001B938 
    /*0001c188*/ B           VI_StartNoIntDet_x1c070
    VI_StartNoIntDet_x1c18c:
    /*0001c18c*/ MOVW        R3, #459                    @ 0x1cb 
    /*0001c190*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c38] 
    /*0001c194*/ STR         R3, [SP] 
    /*0001c198*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c38] 
    /*0001c19c*/ LDR         R3, [PC, #20]               @ 0x000000000001c1b8 
    /*0001c1a0*/ MOV         R1, #16 
    /*0001c1a4*/ MOV         R0, #3 
    /*0001c1a8*/ MVN         R9, #0 
    /*0001c1ac*/ BL          0x000000000001C1AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c1b0*/ B           VI_StartNoIntDet_x1c178
    /*0001c1b4*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001c1b8*/ ANDEQ       R1, R0, IP, LSR R1 
FUNC_END VI_StartNoIntDet


FUNC_BEGIN VI_StopNoIntDet
    /*0001c1bc*/ LDR         R2, [PC, #92]               @ 0x000000000001c220 
    /*0001c1c0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001c1c4*/ PUSH        {R4, R5, R6, LR} 
    /*0001c1c8*/ MOV         R6, #176                    @ 0xb0 
    /*0001c1cc*/ MLA         R6, R6, R0, R2 
    /*0001c1d0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001c1d4*/ SUB         SP, SP, #8 
    /*0001c1d8*/ LDR         R5, [R3, R0, LSL #2] 
    /*0001c1dc*/ ADD         R1, SP, #4 
    /*0001c1e0*/ ADD         R4, R5, #39680              @ 0x9b00 
    /*0001c1e4*/ ADD         R5, R5, #36864              @ 0x9000 
    /*0001c1e8*/ ADD         R4, R4, #172                @ 0xac 
    /*0001c1ec*/ MOV         R0, R6 
    /*0001c1f0*/ BL          0x000000000001C1F0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001c1f4*/ MOV         R3, #0 
    /*0001c1f8*/ ADD         R1, SP, #4 
    /*0001c1fc*/ STR         R3, [R5, #3000]             @ 0xbb8 
    /*0001c200*/ MOV         R0, R6 
    /*0001c204*/ BL          0x000000000001C204          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001c208*/ MOV         R0, R4 
    /*0001c20c*/ BL          0x000000000001C20C          @ osal_del_timer [R_ARM_CALL: +0x0] 
    /*0001c210*/ MOV         R0, R4 
    /*0001c214*/ BL          0x000000000001C214          @ osal_timer_destory [R_ARM_CALL: +0x0] 
    /*0001c218*/ ADD         SP, SP, #8 
    /*0001c21c*/ POP         {R4, R5, R6, PC} 
    /*0001c220*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_StopNoIntDet


FUNC_BEGIN VI_EnableUserPic
    /*0001c224*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001c228*/ SUB         SP, SP, #20 
    /*0001c22c*/ MOV         R6, R0 
    /*0001c230*/ BL          0x000000000001C230          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0001c234*/ SUBS        R4, R0, #0 
    /*0001c238*/ BEQ         VI_EnableUserPic_x1c248
    VI_EnableUserPic_x1c23c:
    /*0001c23c*/ MOV         R0, R4 
    /*0001c240*/ ADD         SP, SP, #20 
    /*0001c244*/ POP         {R4, R5, R6, R7, PC} 
    VI_EnableUserPic_x1c248:
    /*0001c248*/ LDR         R3, [PC, #284]              @ 0x000000000001c36c 
    /*0001c24c*/ MOV         R7, #176                    @ 0xb0 
    /*0001c250*/ MLA         R7, R7, R6, R3 
    /*0001c254*/ MOV         R0, R7 
    /*0001c258*/ BL          0x000000000001C258          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001c25c*/ SUBS        R4, R0, #0 
    /*0001c260*/ BNE         VI_EnableUserPic_x1c360
    /*0001c264*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001c268*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001c26c*/ LDR         R3, [R3, R6, LSL #2] 
    /*0001c270*/ CMP         R3, #0 
    /*0001c274*/ BEQ         VI_EnableUserPic_x1c300
    /*0001c278*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001c27c*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001c280*/ ADD         R0, R5, #1904               @ 0x770 
    /*0001c284*/ ADD         R1, SP, #12 
    /*0001c288*/ BL          0x000000000001C288          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001c28c*/ LDR         R3, [R5] 
    /*0001c290*/ CMP         R3, #0 
    /*0001c294*/ BEQ         VI_EnableUserPic_x1c2c8
    /*0001c298*/ ADD         R3, R6, #440                @ 0x1b8 
    /*0001c29c*/ LDR         R2, [R5, R3, LSL #2] 
    /*0001c2a0*/ CMP         R2, #1 
    /*0001c2a4*/ BNE         VI_EnableUserPic_x1c330
    /*0001c2a8*/ ADD         R1, SP, #12 
    /*0001c2ac*/ ADD         R0, R5, #1904               @ 0x770 
    /*0001c2b0*/ BL          0x000000000001C2B0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_EnableUserPic_x1c2b4:
    /*0001c2b4*/ MOV         R0, R7 
    /*0001c2b8*/ BL          0x000000000001C2B8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001c2bc*/ MOV         R0, R4 
    /*0001c2c0*/ ADD         SP, SP, #20 
    /*0001c2c4*/ POP         {R4, R5, R6, R7, PC} 
    VI_EnableUserPic_x1c2c8:
    /*0001c2c8*/ ADD         R1, SP, #12 
    /*0001c2cc*/ ADD         R0, R5, #1904               @ 0x770 
    /*0001c2d0*/ BL          0x000000000001C2D0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001c2d4*/ MOVW        R3, #521                    @ 0x209 
    /*0001c2d8*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d1c] 
    /*0001c2dc*/ STR         R3, [SP] 
    /*0001c2e0*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d1c] 
    /*0001c2e4*/ LDR         R3, [PC, #132]              @ 0x000000000001c370 
    /*0001c2e8*/ MOV         R1, #16 
    /*0001c2ec*/ MOV         R0, #3 
    /*0001c2f0*/ MOVW        R4, #32777                  @ 0x8009 
    /*0001c2f4*/ BL          0x000000000001C2F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c2f8*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001c2fc*/ B           VI_EnableUserPic_x1c2b4
    VI_EnableUserPic_x1c300:
    /*0001c300*/ MOVW        R3, #511                    @ 0x1ff 
    /*0001c304*/ STR         R6, [SP, #4] 
    /*0001c308*/ STR         R3, [SP] 
    /*0001c30c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ce0] 
    /*0001c310*/ LDR         R3, [PC, #88]               @ 0x000000000001c370 
    /*0001c314*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ce0] 
    /*0001c318*/ MOV         R1, #16 
    /*0001c31c*/ MOV         R0, #3 
    /*0001c320*/ MOVW        R4, #32773                  @ 0x8005 
    /*0001c324*/ BL          0x000000000001C324          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c328*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001c32c*/ B           VI_EnableUserPic_x1c2b4
    VI_EnableUserPic_x1c330:
    /*0001c330*/ ADD         R2, R6, #456                @ 0x1c8 
    /*0001c334*/ ADD         R1, SP, #12 
    /*0001c338*/ ADD         R0, R5, #1904               @ 0x770 
    /*0001c33c*/ MVN         IP, #0 
    /*0001c340*/ STR         IP, [R5, R2, LSL #2] 
    /*0001c344*/ MOV         R2, #1 
    /*0001c348*/ STR         R2, [R5, R3, LSL #2] 
    /*0001c34c*/ BL          0x000000000001C34C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001c350*/ MOV         R0, R6 
    /*0001c354*/ BL          0x000000000001C354          @ VI_StartNoIntDet [R_ARM_CALL: .text+0x1c048] 
    /*0001c358*/ MOV         R4, R0 
    /*0001c35c*/ B           VI_EnableUserPic_x1c2b4
    VI_EnableUserPic_x1c360:
    /*0001c360*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001c364*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001c368*/ B           VI_EnableUserPic_x1c23c
    /*0001c36c*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001c370*/ ANDEQ       R1, R0, R0, ASR R1 
FUNC_END VI_EnableUserPic


FUNC_BEGIN VI_COMM_ReleaseLastUsrPic
    /*0001c374*/ CMP         R1, #0 
    /*0001c378*/ BXLT        LR 
    /*0001c37c*/ MOV         R2, #352                    @ 0x160 
    /*0001c380*/ MLA         R3, R1, R2, R2 
    /*0001c384*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001c388*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001c38c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001c390*/ ADD         R7, R4, R3 
    /*0001c394*/ LDR         R5, [R4, R3] 
    /*0001c398*/ SUB         R5, R5, #1 
    /*0001c39c*/ STR         R5, [R4, R3] 
    /*0001c3a0*/ CMP         R5, #0 
    /*0001c3a4*/ POPNE       {R4, R5, R6, R7, R8, PC} 
    /*0001c3a8*/ LDR         R8, [R7, #4] 
    /*0001c3ac*/ CMP         R8, #1 
    /*0001c3b0*/ POPNE       {R4, R5, R6, R7, R8, PC} 
    /*0001c3b4*/ MUL         R6, R2, R1 
    /*0001c3b8*/ MOV         R1, R5 
    /*0001c3bc*/ ADD         R0, R6, #360                @ 0x168 
    /*0001c3c0*/ ADD         R0, R4, R0 
    /*0001c3c4*/ ADD         R4, R4, R6 
    /*0001c3c8*/ BL          0x000000000001C3C8          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001c3cc*/ STR         R5, [R7, #4] 
    /*0001c3d0*/ STR         R8, [R4, #696]              @ 0x2b8 
    /*0001c3d4*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_COMM_ReleaseLastUsrPic


FUNC_BEGIN VI_DestroyUserPic
    /*0001c3d8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001c3dc*/ ADD         R6, R0, #440                @ 0x1b8 
    /*0001c3e0*/ SUB         SP, SP, #12 
    /*0001c3e4*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001c3e8*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001c3ec*/ MOV         R5, R0 
    /*0001c3f0*/ ADD         R1, SP, #4 
    /*0001c3f4*/ ADD         R0, R4, #1904               @ 0x770 
    /*0001c3f8*/ BL          0x000000000001C3F8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001c3fc*/ LDR         R3, [R4, R6, LSL #2] 
    /*0001c400*/ CMP         R3, #0 
    /*0001c404*/ BEQ         VI_DestroyUserPic_x1c444
    /*0001c408*/ ADD         R7, R5, #456                @ 0x1c8 
    /*0001c40c*/ MOV         R0, R5 
    /*0001c410*/ LDR         R1, [R4, R7, LSL #2] 
    /*0001c414*/ BL          0x000000000001C414          @ VI_COMM_ReleaseLastUsrPic [R_ARM_CALL: .text+0x1c374] 
    /*0001c418*/ ADD         R1, SP, #4 
    /*0001c41c*/ ADD         R0, R4, #1904               @ 0x770 
    /*0001c420*/ MVN         R3, #0 
    /*0001c424*/ STR         R3, [R4, R7, LSL #2] 
    /*0001c428*/ MOV         R3, #0 
    /*0001c42c*/ STR         R3, [R4, R6, LSL #2] 
    /*0001c430*/ BL          0x000000000001C430          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001c434*/ MOV         R0, R5 
    /*0001c438*/ BL          0x000000000001C438          @ VI_StopNoIntDet [R_ARM_CALL: .text+0x1c1bc] 
    /*0001c43c*/ ADD         SP, SP, #12 
    /*0001c440*/ POP         {R4, R5, R6, R7, PC} 
    VI_DestroyUserPic_x1c444:
    /*0001c444*/ ADD         R1, SP, #4 
    /*0001c448*/ ADD         R0, R4, #1904               @ 0x770 
    /*0001c44c*/ BL          0x000000000001C44C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001c450*/ ADD         SP, SP, #12 
    /*0001c454*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VI_DestroyUserPic


FUNC_BEGIN VI_DisableUserPic
    /*0001c458*/ PUSH        {R4, R5, R6, LR} 
    /*0001c45c*/ SUB         SP, SP, #8 
    /*0001c460*/ MOV         R5, R0 
    /*0001c464*/ BL          0x000000000001C464          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0001c468*/ SUBS        R4, R0, #0 
    /*0001c46c*/ BEQ         VI_DisableUserPic_x1c47c
    VI_DisableUserPic_x1c470:
    /*0001c470*/ MOV         R0, R4 
    /*0001c474*/ ADD         SP, SP, #8 
    /*0001c478*/ POP         {R4, R5, R6, PC} 
    VI_DisableUserPic_x1c47c:
    /*0001c47c*/ LDR         R3, [PC, #128]              @ 0x000000000001c504 
    /*0001c480*/ MOV         R6, #176                    @ 0xb0 
    /*0001c484*/ MLA         R6, R6, R5, R3 
    /*0001c488*/ MOV         R0, R6 
    /*0001c48c*/ BL          0x000000000001C48C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001c490*/ SUBS        R4, R0, #0 
    /*0001c494*/ BNE         VI_DisableUserPic_x1c4f8
    /*0001c498*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001c49c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001c4a0*/ LDR         R3, [R3, R5, LSL #2] 
    /*0001c4a4*/ CMP         R3, #0 
    /*0001c4a8*/ BEQ         VI_DisableUserPic_x1c4c8
    /*0001c4ac*/ MOV         R0, R5 
    /*0001c4b0*/ BL          0x000000000001C4B0          @ VI_DestroyUserPic [R_ARM_CALL: .text+0x1c3d8] 
    VI_DisableUserPic_x1c4b4:
    /*0001c4b4*/ MOV         R0, R6 
    /*0001c4b8*/ BL          0x000000000001C4B8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001c4bc*/ MOV         R0, R4 
    /*0001c4c0*/ ADD         SP, SP, #8 
    /*0001c4c4*/ POP         {R4, R5, R6, PC} 
    VI_DisableUserPic_x1c4c8:
    /*0001c4c8*/ MOVW        R3, #617                    @ 0x269 
    /*0001c4cc*/ STR         R5, [SP, #4] 
    /*0001c4d0*/ STR         R3, [SP] 
    /*0001c4d4*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ce0] 
    /*0001c4d8*/ LDR         R3, [PC, #40]               @ 0x000000000001c508 
    /*0001c4dc*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ce0] 
    /*0001c4e0*/ MOV         R1, #16 
    /*0001c4e4*/ MOV         R0, #3 
    /*0001c4e8*/ MOVW        R4, #32773                  @ 0x8005 
    /*0001c4ec*/ BL          0x000000000001C4EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c4f0*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001c4f4*/ B           VI_DisableUserPic_x1c4b4
    VI_DisableUserPic_x1c4f8:
    /*0001c4f8*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001c4fc*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001c500*/ B           VI_DisableUserPic_x1c470
    /*0001c504*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001c508*/ ANDEQ       R1, R0, R4, ROR #2 
FUNC_END VI_DisableUserPic


FUNC_BEGIN VI_CheckUserPic
    /*0001c50c*/ PUSH        {R4, LR} 
    /*0001c510*/ SUB         SP, SP, #24 
    /*0001c514*/ LDR         R3, [R0] 
    /*0001c518*/ CMP         R3, #1 
    /*0001c51c*/ BHI         VI_CheckUserPic_x1c664
    /*0001c520*/ CMP         R3, #0 
    /*0001c524*/ MOV         R4, R0 
    /*0001c528*/ BNE         VI_CheckUserPic_x1c618
    /*0001c52c*/ LDR         R3, [R0, #336]              @ 0x150 
    /*0001c530*/ CMN         R3, #1 
    /*0001c534*/ BEQ         VI_CheckUserPic_x1c7bc
    /*0001c538*/ LDR         R3, [R0, #20] 
    /*0001c53c*/ SUB         R2, R3, #25 
    /*0001c540*/ CMP         R3, #39                     @ 0x27 
    /*0001c544*/ CMPNE       R2, #1 
    /*0001c548*/ BHI         VI_CheckUserPic_x1c748
    /*0001c54c*/ LDR         R3, [R0, #8] 
    /*0001c550*/ MOVW        R2, #4488                   @ 0x1188 
    /*0001c554*/ SUB         R1, R3, #120                @ 0x78 
    /*0001c558*/ CMP         R1, R2 
    /*0001c55c*/ BHI         VI_CheckUserPic_x1c694
    /*0001c560*/ LDR         R2, [R0, #12] 
    /*0001c564*/ MOVW        R1, #3336                   @ 0xd08 
    /*0001c568*/ SUB         R0, R2, #120                @ 0x78 
    /*0001c56c*/ CMP         R0, R1 
    /*0001c570*/ BHI         VI_CheckUserPic_x1c694
    /*0001c574*/ ORR         R1, R3, R2 
    /*0001c578*/ TST         R1, #1 
    /*0001c57c*/ BNE         VI_CheckUserPic_x1c630
    /*0001c580*/ MOV         R0, #1 
    /*0001c584*/ BL          0x000000000001C584          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c588*/ LDRD        R2, [R4, #128]              @ 0x80 
    /*0001c58c*/ LDR         R1, [R0, #84]               @ 0x54 
    /*0001c590*/ LDR         R0, [R4, #336]              @ 0x150 
    /*0001c594*/ BLX         R1 
    /*0001c598*/ CMP         R0, #1 
    /*0001c59c*/ BNE         VI_CheckUserPic_x1c6dc
    /*0001c5a0*/ LDR         R3, [R4, #28] 
    /*0001c5a4*/ CMP         R3, #0 
    /*0001c5a8*/ BNE         VI_CheckUserPic_x1c774
    /*0001c5ac*/ LDR         R3, [R4, #16] 
    /*0001c5b0*/ CMP         R3, #4 
    /*0001c5b4*/ BNE         VI_CheckUserPic_x1c718
    /*0001c5b8*/ LDR         R3, [R4, #24] 
    /*0001c5bc*/ CMP         R3, #0 
    /*0001c5c0*/ BNE         VI_CheckUserPic_x1c78c
    /*0001c5c4*/ LDR         R3, [R4, #32] 
    /*0001c5c8*/ CMP         R3, #0 
    /*0001c5cc*/ BNE         VI_CheckUserPic_x1c7a4
    /*0001c5d0*/ LDR         R2, [R4, #36]               @ 0x24 
    /*0001c5d4*/ CMP         R2, #3 
    /*0001c5d8*/ BLS         VI_CheckUserPic_x1c624
    /*0001c5dc*/ STR         R3, [SP, #8] 
    /*0001c5e0*/ MOV         R1, #4 
    /*0001c5e4*/ STR         R2, [SP, #4] 
    /*0001c5e8*/ MOVW        R3, #715                    @ 0x2cb 
    /*0001c5ec*/ STR         R1, [SP, #12] 
    /*0001c5f0*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8084] 
    /*0001c5f4*/ STR         R3, [SP] 
    /*0001c5f8*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8084] 
    /*0001c5fc*/ LDR         R3, [PC, #464]              @ 0x000000000001c7d4 
    /*0001c600*/ MOV         R1, #16 
    /*0001c604*/ MOV         R0, #3 
    /*0001c608*/ BL          0x000000000001C608          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c60c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001c610*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001c614*/ B           VI_CheckUserPic_x1c628
    VI_CheckUserPic_x1c618:
    /*0001c618*/ LDR         R3, [R0, #8] 
    /*0001c61c*/ TST         R3, #-16777216              @ 0xff000000 
    /*0001c620*/ BNE         VI_CheckUserPic_x1c730
    VI_CheckUserPic_x1c624:
    /*0001c624*/ MOV         R0, #0 
    VI_CheckUserPic_x1c628:
    /*0001c628*/ ADD         SP, SP, #24 
    /*0001c62c*/ POP         {R4, PC} 
    VI_CheckUserPic_x1c630:
    /*0001c630*/ STR         R2, [SP, #8] 
    /*0001c634*/ MOV         R1, #672                    @ 0x2a0 
    /*0001c638*/ STR         R3, [SP, #4] 
    /*0001c63c*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e78] 
    /*0001c640*/ STR         R1, [SP] 
    /*0001c644*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e78] 
    /*0001c648*/ LDR         R3, [PC, #388]              @ 0x000000000001c7d4 
    /*0001c64c*/ MOV         R1, #16 
    /*0001c650*/ MOV         R0, #3 
    /*0001c654*/ BL          0x000000000001C654          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c658*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001c65c*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001c660*/ B           VI_CheckUserPic_x1c628
    VI_CheckUserPic_x1c664:
    /*0001c664*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d54] 
    /*0001c668*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d54] 
    /*0001c66c*/ STR         R3, [SP, #4] 
    /*0001c670*/ MOV         R3, #640                    @ 0x280 
    /*0001c674*/ STR         R3, [SP] 
    VI_CheckUserPic_x1c678:
    /*0001c678*/ LDR         R3, [PC, #340]              @ 0x000000000001c7d4 
    /*0001c67c*/ MOV         R1, #16 
    /*0001c680*/ MOV         R0, #3 
    /*0001c684*/ BL          0x000000000001C684          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c688*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001c68c*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001c690*/ B           VI_CheckUserPic_x1c628
    VI_CheckUserPic_x1c694:
    /*0001c694*/ MOV         R3, #120                    @ 0x78 
    /*0001c698*/ MOV         R2, #3456                   @ 0xd80 
    /*0001c69c*/ MOV         R0, #4608                   @ 0x1200 
    /*0001c6a0*/ STR         R2, [SP, #16] 
    /*0001c6a4*/ STR         R3, [SP, #12] 
    /*0001c6a8*/ MOVW        R1, #665                    @ 0x299 
    /*0001c6ac*/ STR         R3, [SP, #4] 
    /*0001c6b0*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e1c] 
    /*0001c6b4*/ STR         R0, [SP, #8] 
    /*0001c6b8*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e1c] 
    /*0001c6bc*/ STR         R1, [SP] 
    /*0001c6c0*/ MOV         R0, #3 
    /*0001c6c4*/ MOV         R1, #16 
    /*0001c6c8*/ LDR         R3, [PC, #260]              @ 0x000000000001c7d4 
    /*0001c6cc*/ BL          0x000000000001C6CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c6d0*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001c6d4*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001c6d8*/ B           VI_CheckUserPic_x1c628
    VI_CheckUserPic_x1c6dc:
    /*0001c6dc*/ LDR         R1, [R4, #128]              @ 0x80 
    /*0001c6e0*/ MOVW        R0, #679                    @ 0x2a7 
    /*0001c6e4*/ LDR         R3, [R4, #336]              @ 0x150 
    /*0001c6e8*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ec0] 
    /*0001c6ec*/ STR         R0, [SP] 
    /*0001c6f0*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ec0] 
    /*0001c6f4*/ STR         R1, [SP, #8] 
    /*0001c6f8*/ MOV         R0, #3 
    /*0001c6fc*/ STR         R3, [SP, #4] 
    /*0001c700*/ MOV         R1, #16 
    /*0001c704*/ LDR         R3, [PC, #200]              @ 0x000000000001c7d4 
    /*0001c708*/ BL          0x000000000001C708          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c70c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001c710*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001c714*/ B           VI_CheckUserPic_x1c628
    VI_CheckUserPic_x1c718:
    /*0001c718*/ STR         R3, [SP, #4] 
    /*0001c71c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*0001c720*/ MOVW        R3, #694                    @ 0x2b6 
    /*0001c724*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0001c728*/ STR         R3, [SP] 
    /*0001c72c*/ B           VI_CheckUserPic_x1c678
    VI_CheckUserPic_x1c730:
    /*0001c730*/ STR         R3, [SP, #4] 
    /*0001c734*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x80dc] 
    /*0001c738*/ MOV         R3, #724                    @ 0x2d4 
    /*0001c73c*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x80dc] 
    /*0001c740*/ STR         R3, [SP] 
    /*0001c744*/ B           VI_CheckUserPic_x1c678
    VI_CheckUserPic_x1c748:
    /*0001c748*/ MOV         R3, #656                    @ 0x290 
    /*0001c74c*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7dc8] 
    /*0001c750*/ STR         R3, [SP] 
    /*0001c754*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7dc8] 
    /*0001c758*/ LDR         R3, [PC, #116]              @ 0x000000000001c7d4 
    /*0001c75c*/ MOV         R1, #16 
    /*0001c760*/ MOV         R0, #3 
    /*0001c764*/ BL          0x000000000001C764          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c768*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001c76c*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001c770*/ B           VI_CheckUserPic_x1c628
    VI_CheckUserPic_x1c774:
    /*0001c774*/ STR         R3, [SP, #4] 
    /*0001c778*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f0c] 
    /*0001c77c*/ MOVW        R3, #687                    @ 0x2af 
    /*0001c780*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f0c] 
    /*0001c784*/ STR         R3, [SP] 
    /*0001c788*/ B           VI_CheckUserPic_x1c678
    VI_CheckUserPic_x1c78c:
    /*0001c78c*/ STR         R3, [SP, #4] 
    /*0001c790*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7fc4] 
    /*0001c794*/ MOVW        R3, #701                    @ 0x2bd 
    /*0001c798*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7fc4] 
    /*0001c79c*/ STR         R3, [SP] 
    /*0001c7a0*/ B           VI_CheckUserPic_x1c678
    VI_CheckUserPic_x1c7a4:
    /*0001c7a4*/ STR         R3, [SP, #4] 
    /*0001c7a8*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8024] 
    /*0001c7ac*/ MOV         R3, #708                    @ 0x2c4 
    /*0001c7b0*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8024] 
    /*0001c7b4*/ STR         R3, [SP] 
    /*0001c7b8*/ B           VI_CheckUserPic_x1c678
    VI_CheckUserPic_x1c7bc:
    /*0001c7bc*/ STR         R3, [SP, #4] 
    /*0001c7c0*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d98] 
    /*0001c7c4*/ MOV         R3, #648                    @ 0x288 
    /*0001c7c8*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d98] 
    /*0001c7cc*/ STR         R3, [SP] 
    /*0001c7d0*/ B           VI_CheckUserPic_x1c678
    /*0001c7d4*/ ANDEQ       R1, R0, R8, ROR R1 
FUNC_END VI_CheckUserPic


FUNC_BEGIN VI_SetUserPic
    /*0001c7d8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001c7dc*/ SUB         SP, SP, #20 
    /*0001c7e0*/ MOV         R5, R1 
    /*0001c7e4*/ BL          0x000000000001C7E4          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0001c7e8*/ SUBS        R4, R0, #0 
    /*0001c7ec*/ BEQ         VI_SetUserPic_x1c7fc
    VI_SetUserPic_x1c7f0:
    /*0001c7f0*/ MOV         R0, R4 
    /*0001c7f4*/ ADD         SP, SP, #20 
    /*0001c7f8*/ POP         {R4, R5, R6, R7, PC} 
    VI_SetUserPic_x1c7fc:
    /*0001c7fc*/ MOV         R0, R5 
    /*0001c800*/ BL          0x000000000001C800          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001c804*/ SUBS        R4, R0, #0 
    /*0001c808*/ BNE         VI_SetUserPic_x1c7f0
    /*0001c80c*/ MOV         R0, R5 
    /*0001c810*/ BL          0x000000000001C810          @ VI_CheckUserPic [R_ARM_CALL: .text+0x1c50c] 
    /*0001c814*/ SUBS        R4, R0, #0 
    /*0001c818*/ BNE         VI_SetUserPic_x1c878
    /*0001c81c*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001c820*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001c824*/ ADD         R0, R6, #1904               @ 0x770 
    /*0001c828*/ ADD         R1, SP, #12 
    /*0001c82c*/ BL          0x000000000001C82C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001c830*/ LDR         R3, [R6] 
    /*0001c834*/ CMP         R3, #1 
    /*0001c838*/ BEQ         VI_SetUserPic_x1c8fc
    VI_SetUserPic_x1c83c:
    /*0001c83c*/ LDR         R7, [R5] 
    /*0001c840*/ CMP         R7, #0 
    /*0001c844*/ BEQ         VI_SetUserPic_x1c89c
    /*0001c848*/ CMP         R7, #1 
    /*0001c84c*/ BEQ         VI_SetUserPic_x1c918
    VI_SetUserPic_x1c850:
    /*0001c850*/ ADD         R1, SP, #12 
    /*0001c854*/ LDR         R0, [PC, #212]              @ 0x000000000001c930 
    /*0001c858*/ MOV         R3, #1 
    /*0001c85c*/ STR         R3, [R6] 
    /*0001c860*/ STR         R3, [R6, #696]              @ 0x2b8 
    /*0001c864*/ STR         R3, [R6, #1048]             @ 0x418 
    /*0001c868*/ STR         R3, [R6, #1400]             @ 0x578 
    /*0001c86c*/ STR         R3, [R6, #1752]             @ 0x6d8 
    /*0001c870*/ BL          0x000000000001C870          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001c874*/ B           VI_SetUserPic_x1c7f0
    VI_SetUserPic_x1c878:
    /*0001c878*/ MOVW        R3, #873                    @ 0x369 
    /*0001c87c*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8130] 
    /*0001c880*/ STR         R3, [SP] 
    /*0001c884*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8130] 
    /*0001c888*/ LDR         R3, [PC, #164]              @ 0x000000000001c934 
    /*0001c88c*/ MOV         R1, #16 
    /*0001c890*/ MOV         R0, #3 
    /*0001c894*/ BL          0x000000000001C894          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c898*/ B           VI_SetUserPic_x1c7f0
    VI_SetUserPic_x1c89c:
    /*0001c89c*/ MOV         R2, #336                    @ 0x150 
    /*0001c8a0*/ ADD         R1, R5, #8 
    /*0001c8a4*/ LDR         R0, [PC, #140]              @ 0x000000000001c938 
    /*0001c8a8*/ BL          0x000000000001C8A8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001c8ac*/ MOV         R1, R7 
    /*0001c8b0*/ LDR         R0, [PC, #128]              @ 0x000000000001c938 
    /*0001c8b4*/ BL          0x000000000001C8B4          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001c8b8*/ MOV         R0, #1 
    /*0001c8bc*/ BL          0x000000000001C8BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c8c0*/ LDR         R3, [R0, #36]               @ 0x24 
    /*0001c8c4*/ LDRD        R0, [R5, #128]              @ 0x80 
    /*0001c8c8*/ BLX         R3 
    /*0001c8cc*/ MOV         R5, R0 
    /*0001c8d0*/ MOV         R0, #1 
    /*0001c8d4*/ BL          0x000000000001C8D4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c8d8*/ LDR         R3, [R0, #100]              @ 0x64 
    /*0001c8dc*/ MOV         R0, R5 
    /*0001c8e0*/ BLX         R3 
    /*0001c8e4*/ MOV         R2, #64                     @ 0x40 
    /*0001c8e8*/ MOV         R1, R0 
    /*0001c8ec*/ LDR         R0, [PC, #72]               @ 0x000000000001c93c 
    /*0001c8f0*/ BL          0x000000000001C8F0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001c8f4*/ STR         R7, [R6, #4] 
    /*0001c8f8*/ B           VI_SetUserPic_x1c850
    VI_SetUserPic_x1c8fc:
    /*0001c8fc*/ LDR         R3, [R6, #4] 
    /*0001c900*/ CMP         R3, #0 
    /*0001c904*/ BNE         VI_SetUserPic_x1c83c
    /*0001c908*/ MOV         R1, R4 
    /*0001c90c*/ ADD         R0, R6, #16 
    /*0001c910*/ BL          0x000000000001C910          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001c914*/ B           VI_SetUserPic_x1c83c
    VI_SetUserPic_x1c918:
    /*0001c918*/ ADD         R1, R5, #8 
    /*0001c91c*/ MOV         R2, #4 
    /*0001c920*/ LDR         R0, [PC, #24]               @ 0x000000000001c940 
    /*0001c924*/ BL          0x000000000001C924          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001c928*/ STR         R7, [R6, #4] 
    /*0001c92c*/ B           VI_SetUserPic_x1c850
    /*0001c930*/ ANDEQ       R1, R1, R8, ASR #27 
    /*0001c934*/ ANDEQ       R1, R0, R8, LSL #3 
    /*0001c938*/ ANDEQ       R1, R1, R8, ROR #12 
    /*0001c93c*/ ANDEQ       R1, R1, R0, ROR R7 
    /*0001c940*/ ANDEQ       R1, R1, R0, ROR #12 
FUNC_END VI_SetUserPic


FUNC_BEGIN VI_UserPicOnlineTaskFailHandle
    /*0001c944*/ PUSH        {R4, R5, R6, LR} 
    /*0001c948*/ MOV         R1, #0 
    /*0001c94c*/ MOV         R4, R3 
    /*0001c950*/ MOV         R6, R0 
    /*0001c954*/ MOV         R0, R2 
    /*0001c958*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001c95c*/ BL          0x000000000001C95C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001c960*/ MOV         R0, R4 
    /*0001c964*/ MOV         R4, #176                    @ 0xb0 
    /*0001c968*/ MOV         R1, #0 
    /*0001c96c*/ MUL         R4, R4, R6 
    /*0001c970*/ BL          0x000000000001C970          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001c974*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001c978*/ ADD         R0, R4, #28 
    /*0001c97c*/ ADD         R0, R5, R0 
    /*0001c980*/ BL          0x000000000001C980          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0001c984*/ ADD         R0, R4, #32 
    /*0001c988*/ ADD         R0, R5, R0 
    /*0001c98c*/ BL          0x000000000001C98C          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0001c990*/ ADD         R0, R4, #88                 @ 0x58 
    /*0001c994*/ ADD         R0, R5, R0 
    /*0001c998*/ POP         {R4, R5, R6, LR} 
    VI_UserPicOnlineTaskFailHandle_x1c99c:
    /*0001c99c*/ B           VI_UserPicOnlineTaskFailHandle_x1c99c@ osal_wakeup [R_ARM_JUMP24: +0x0] 
FUNC_END VI_UserPicOnlineTaskFailHandle


FUNC_BEGIN VI_UserPicCoverExTaskFailHandle
    /*0001c9a0*/ PUSH        {R4, R5, R6, LR} 
    /*0001c9a4*/ MOV         R6, R0 
    /*0001c9a8*/ MOV         R4, #176                    @ 0xb0 
    /*0001c9ac*/ MOV         R1, #0 
    /*0001c9b0*/ MUL         R4, R4, R6 
    /*0001c9b4*/ MOV         R0, R2 
    /*0001c9b8*/ BL          0x000000000001C9B8          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001c9bc*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001c9c0*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001c9c4*/ ADD         R0, R4, #28 
    /*0001c9c8*/ ADD         R0, R5, R0 
    /*0001c9cc*/ BL          0x000000000001C9CC          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0001c9d0*/ ADD         R0, R4, #32 
    /*0001c9d4*/ ADD         R0, R5, R0 
    /*0001c9d8*/ BL          0x000000000001C9D8          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0001c9dc*/ ADD         R0, R4, #88                 @ 0x58 
    /*0001c9e0*/ ADD         R0, R5, R0 
    /*0001c9e4*/ POP         {R4, R5, R6, LR} 
    VI_UserPicCoverExTaskFailHandle_x1c9e8:
    /*0001c9e8*/ B           VI_UserPicCoverExTaskFailHandle_x1c9e8@ osal_wakeup [R_ARM_JUMP24: +0x0] 
FUNC_END VI_UserPicCoverExTaskFailHandle


FUNC_BEGIN VI_UserPicAddByPassTask2Vgs
    /*0001c9ec*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001c9f0*/ MOV         R6, R0 
    /*0001c9f4*/ SUB         SP, SP, #20 
    /*0001c9f8*/ MOV         R0, #45                     @ 0x2d 
    /*0001c9fc*/ MOV         R8, R1 
    /*0001ca00*/ MOV         SL, R2 
    /*0001ca04*/ MOV         R7, R3 
    /*0001ca08*/ BL          0x000000000001CA08          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001ca0c*/ LDR         R3, [R0, #64]               @ 0x40 
    /*0001ca10*/ MOV         FP, R0 
    /*0001ca14*/ BLX         R3 
    /*0001ca18*/ SUBS        R4, R0, #0 
    /*0001ca1c*/ BEQ         VI_UserPicAddByPassTask2Vgs_x1caec
    /*0001ca20*/ MOV         R5, #176                    @ 0xb0 
    /*0001ca24*/ MOVW        R3, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001ca28*/ MUL         R5, R5, R6 
    /*0001ca2c*/ MOVT        R3, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001ca30*/ STR         R3, [SP, #12] 
    /*0001ca34*/ MOV         R9, #16 
    /*0001ca38*/ ADD         R0, R5, #28 
    /*0001ca3c*/ ADD         R0, R3, R0 
    /*0001ca40*/ BL          0x000000000001CA40          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0001ca44*/ LDR         R3, [SP, #12] 
    /*0001ca48*/ ADD         R0, R5, #32 
    /*0001ca4c*/ ADD         R0, R3, R0 
    /*0001ca50*/ BL          0x000000000001CA50          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0001ca54*/ MOV         R2, #336                    @ 0x150 
    /*0001ca58*/ STR         R6, [R4, #728]              @ 0x2d8 
    /*0001ca5c*/ MOV         R1, R7 
    /*0001ca60*/ STR         R8, [R4, #732]              @ 0x2dc 
    /*0001ca64*/ MOV         R0, R4 
    /*0001ca68*/ STR         R9, [R4, #724]              @ 0x2d4 
    /*0001ca6c*/ MOVW        R3, #0                      @ VI_UserPicVgsByPassTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x1bd14] 
    /*0001ca70*/ MOVT        R3, #0                      @ VI_UserPicVgsByPassTaskCallBack [R_ARM_MOVT_ABS: .text+0x1bd14] 
    /*0001ca74*/ STR         R3, [R4, #720]              @ 0x2d0 
    /*0001ca78*/ BL          0x000000000001CA78          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001ca7c*/ MOV         R1, #0 
    /*0001ca80*/ MOV         R0, R4 
    /*0001ca84*/ BL          0x000000000001CA84          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001ca88*/ MOV         R2, #336                    @ 0x150 
    /*0001ca8c*/ MOV         R1, R7 
    /*0001ca90*/ ADD         R0, R4, R2 
    /*0001ca94*/ BL          0x000000000001CA94          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001ca98*/ MOV         R1, R4 
    /*0001ca9c*/ LDR         R3, [FP, #24] 
    /*0001caa0*/ MOV         R0, SL 
    /*0001caa4*/ BLX         R3 
    /*0001caa8*/ SUBS        R4, R0, #0 
    /*0001caac*/ BEQ         VI_UserPicAddByPassTask2Vgs_x1cae0
    /*0001cab0*/ MOV         R1, R9 
    /*0001cab4*/ MOV         R3, #800                    @ 0x320 
    /*0001cab8*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c04] 
    /*0001cabc*/ STR         R3, [SP] 
    /*0001cac0*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c04] 
    /*0001cac4*/ LDR         R3, [PC, #72]               @ 0x000000000001cb14 
    /*0001cac8*/ MOV         R0, #3 
    /*0001cacc*/ BL          0x000000000001CACC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001cad0*/ MOV         R2, R7 
    /*0001cad4*/ MOV         R1, R8 
    /*0001cad8*/ MOV         R0, R6 
    /*0001cadc*/ BL          0x000000000001CADC          @ VI_UserPicCoverExTaskFailHandle [R_ARM_CALL: .text+0x1c9a0] 
    VI_UserPicAddByPassTask2Vgs_x1cae0:
    /*0001cae0*/ MOV         R0, R4 
    /*0001cae4*/ ADD         SP, SP, #20 
    /*0001cae8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_UserPicAddByPassTask2Vgs_x1caec:
    /*0001caec*/ MOV         R3, #780                    @ 0x30c 
    /*0001caf0*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8164] 
    /*0001caf4*/ STR         R3, [SP] 
    /*0001caf8*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8164] 
    /*0001cafc*/ LDR         R3, [PC, #16]               @ 0x000000000001cb14 
    /*0001cb00*/ MOV         R1, #16 
    /*0001cb04*/ MOV         R0, #3 
    /*0001cb08*/ MVN         R4, #0 
    /*0001cb0c*/ BL          0x000000000001CB0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001cb10*/ B           VI_UserPicAddByPassTask2Vgs_x1cae0
    /*0001cb14*/ MULEQ       R0, R8, R1 
FUNC_END VI_UserPicAddByPassTask2Vgs


FUNC_BEGIN VI_UserPicSubmitByPassJob2Vgs
    /*0001cb18*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001cb1c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001cb20*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001cb24*/ MOV         R5, R0 
    /*0001cb28*/ SUB         SP, SP, #84                 @ 0x54 
    /*0001cb2c*/ MOV         R0, #45                     @ 0x2d 
    /*0001cb30*/ MOV         R6, R1 
    /*0001cb34*/ MOV         R8, R2 
    /*0001cb38*/ LDR         R9, [R3, R5, LSL #2] 
    /*0001cb3c*/ BL          0x000000000001CB3C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001cb40*/ MOV         R3, #0 
    /*0001cb44*/ STR         R6, [SP] 
    /*0001cb48*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001cb4c*/ MOV         R1, R3 
    /*0001cb50*/ STR         R3, [SP, #72]               @ 0x48 
    /*0001cb54*/ ADD         R2, SP, #16 
    /*0001cb58*/ MOV         R3, R5 
    /*0001cb5c*/ STR         R2, [SP, #4] 
    /*0001cb60*/ MOV         R2, #16 
    /*0001cb64*/ MOV         R7, R0 
    /*0001cb68*/ ADD         R0, SP, #12 
    /*0001cb6c*/ LDR         R4, [R7] 
    /*0001cb70*/ BLX         R4 
    /*0001cb74*/ SUBS        R4, R0, #0 
    /*0001cb78*/ BNE         VI_UserPicSubmitByPassJob2Vgs_x1cc3c
    /*0001cb7c*/ MOV         R3, R8 
    /*0001cb80*/ MOV         R1, R6 
    /*0001cb84*/ MOV         R0, R5 
    /*0001cb88*/ LDR         R2, [SP, #12] 
    /*0001cb8c*/ BL          0x000000000001CB8C          @ VI_UserPicAddByPassTask2Vgs [R_ARM_CALL: .text+0x1c9ec] 
    /*0001cb90*/ SUBS        R4, R0, #0 
    /*0001cb94*/ BEQ         VI_UserPicSubmitByPassJob2Vgs_x1cbf8
    /*0001cb98*/ MOV         R3, #836                    @ 0x344 
    /*0001cb9c*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x81d8] 
    /*0001cba0*/ STR         R3, [SP] 
    /*0001cba4*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x81d8] 
    /*0001cba8*/ STR         R4, [SP, #4] 
    /*0001cbac*/ MOV         R1, #16 
    /*0001cbb0*/ LDR         R3, [PC, #204]              @ 0x000000000001cc84 
    /*0001cbb4*/ MOV         R0, #3 
    /*0001cbb8*/ BL          0x000000000001CBB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_UserPicSubmitByPassJob2Vgs_x1cbbc:
    /*0001cbbc*/ LDR         R3, [R7, #4] 
    /*0001cbc0*/ LDR         R0, [SP, #12] 
    /*0001cbc4*/ BLX         R3 
    /*0001cbc8*/ MOVW        R3, #853                    @ 0x355 
    /*0001cbcc*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8248] 
    /*0001cbd0*/ STR         R3, [SP] 
    /*0001cbd4*/ STR         R4, [SP, #4] 
    /*0001cbd8*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8248] 
    /*0001cbdc*/ LDR         R3, [PC, #160]              @ 0x000000000001cc84 
    /*0001cbe0*/ MOV         R1, #16 
    /*0001cbe4*/ MOV         R0, #6 
    /*0001cbe8*/ BL          0x000000000001CBE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_UserPicSubmitByPassJob2Vgs_x1cbec:
    /*0001cbec*/ MOV         R0, R4 
    /*0001cbf0*/ ADD         SP, SP, #84                 @ 0x54 
    /*0001cbf4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_UserPicSubmitByPassJob2Vgs_x1cbf8:
    /*0001cbf8*/ MOV         R2, R4 
    /*0001cbfc*/ LDR         R3, [R7, #12] 
    /*0001cc00*/ MOV         R1, #1 
    /*0001cc04*/ LDR         R0, [SP, #12] 
    /*0001cc08*/ BLX         R3 
    /*0001cc0c*/ SUBS        R4, R0, #0 
    /*0001cc10*/ BEQ         VI_UserPicSubmitByPassJob2Vgs_x1cbec
    /*0001cc14*/ MOV         R3, #844                    @ 0x34c 
    /*0001cc18*/ STR         R4, [SP, #4] 
    /*0001cc1c*/ STR         R3, [SP] 
    /*0001cc20*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8214] 
    /*0001cc24*/ LDR         R3, [PC, #88]               @ 0x000000000001cc84 
    /*0001cc28*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8214] 
    /*0001cc2c*/ MOV         R1, #16 
    /*0001cc30*/ MOV         R0, #3 
    /*0001cc34*/ BL          0x000000000001CC34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001cc38*/ B           VI_UserPicSubmitByPassJob2Vgs_x1cbbc
    VI_UserPicSubmitByPassJob2Vgs_x1cc3c:
    /*0001cc3c*/ STR         R4, [SP, #4] 
    /*0001cc40*/ MOVW        R3, #826                    @ 0x33a 
    /*0001cc44*/ MOV         R1, #16 
    /*0001cc48*/ STR         R3, [SP] 
    /*0001cc4c*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8198] 
    /*0001cc50*/ LDR         R3, [PC, #44]               @ 0x000000000001cc84 
    /*0001cc54*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8198] 
    /*0001cc58*/ MOV         R0, #3 
    /*0001cc5c*/ BL          0x000000000001CC5C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001cc60*/ MOV         R3, #56                     @ 0x38 
    /*0001cc64*/ MLA         R6, R3, R6, R9 
    /*0001cc68*/ MOVW        R2, #36660                  @ 0x8f34 
    /*0001cc6c*/ MOV         R0, R4 
    /*0001cc70*/ LDR         R3, [R6, R2] 
    /*0001cc74*/ ADD         R3, R3, #1 
    /*0001cc78*/ STR         R3, [R6, R2] 
    /*0001cc7c*/ ADD         SP, SP, #84                 @ 0x54 
    /*0001cc80*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    /*0001cc84*/ @           <UNDEFINED> instruction: 0x000011b4 
FUNC_END VI_UserPicSubmitByPassJob2Vgs


FUNC_BEGIN VI_UserPicVgsByPassTaskFailHandle
    VI_UserPicVgsByPassTaskFailHandle_x1cc88:
    /*0001cc88*/ B           VI_UserPicVgsByPassTaskFailHandle_x1cc88@ VI_UserPicCoverExTaskFailHandle [R_ARM_JUMP24: .text+0x1c9a0] 
FUNC_END VI_UserPicVgsByPassTaskFailHandle


FUNC_BEGIN VI_UpdateFromOriginalPic
    /*0001cc8c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001cc90*/ ADD         R7, R0, R1 
    /*0001cc94*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001cc98*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001cc9c*/ ADD         R3, R4, R7, LSL #4 
    /*0001cca0*/ SUB         SP, SP, #12 
    /*0001cca4*/ LDR         R3, [R3, #1852]             @ 0x73c 
    /*0001cca8*/ CMP         R3, #0 
    /*0001ccac*/ BEQ         VI_UpdateFromOriginalPic_x1cd88
    /*0001ccb0*/ ADD         R2, R4, #16 
    /*0001ccb4*/ MOV         R5, R0 
    /*0001ccb8*/ MOV         R6, R1 
    /*0001ccbc*/ BL          0x000000000001CCBC          @ VI_COMM_UserPicIsSuitable [R_ARM_CALL: .text+0x1ba44] 
    /*0001ccc0*/ CMP         R0, #1 
    /*0001ccc4*/ MOV         FP, R0 
    /*0001ccc8*/ BNE         VI_UpdateFromOriginalPic_x1cd88
    /*0001cccc*/ ADD         R7, R7, #456                @ 0x1c8 
    /*0001ccd0*/ MOV         R9, #352                    @ 0x160 
    /*0001ccd4*/ MOV         R2, #336                    @ 0x150 
    /*0001ccd8*/ MOV         SL, #0 
    /*0001ccdc*/ LDR         R3, [R4, R7, LSL #2] 
    /*0001cce0*/ ADD         R1, R4, #16 
    /*0001cce4*/ MUL         R7, R9, R3 
    /*0001cce8*/ STR         R3, [SP, #4] 
    /*0001ccec*/ ADD         R8, R7, #360                @ 0x168 
    /*0001ccf0*/ ADD         R7, R4, R7 
    /*0001ccf4*/ ADD         R8, R4, R8 
    /*0001ccf8*/ MOV         R0, R8 
    /*0001ccfc*/ BL          0x000000000001CCFC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001cd00*/ MOV         R1, SL 
    /*0001cd04*/ ADD         R0, R4, #16 
    /*0001cd08*/ BL          0x000000000001CD08          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001cd0c*/ LDR         R3, [SP, #4] 
    /*0001cd10*/ MOV         R1, R6 
    /*0001cd14*/ MOV         R0, R5 
    /*0001cd18*/ STR         SL, [R7, #696]              @ 0x2b8 
    /*0001cd1c*/ MLA         R9, R3, R9, R9 
    /*0001cd20*/ ADD         R4, R4, R9 
    /*0001cd24*/ STR         FP, [R4, #4] 
    /*0001cd28*/ BL          0x000000000001CD28          @ VI_COMM_GetUserPicTimeRef [R_ARM_CALL: .text+0x1b9cc] 
    /*0001cd2c*/ MOV         R1, R6 
    /*0001cd30*/ STR         R0, [R7, #592]              @ 0x250 
    /*0001cd34*/ MOV         R0, R5 
    /*0001cd38*/ BL          0x000000000001CD38          @ VI_COMM_GetUserPicTimePts [R_ARM_CALL: .text+0x1ba08] 
    /*0001cd3c*/ MOV         R1, SL 
    /*0001cd40*/ STR         SL, [R7, #604]              @ 0x25c 
    /*0001cd44*/ STR         R0, [R7, #600]              @ 0x258 
    /*0001cd48*/ MOV         R0, R8 
    /*0001cd4c*/ BL          0x000000000001CD4C          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001cd50*/ BL          0x000000000001CD50          @ VI_IsVgsExist [R_ARM_CALL: .text+0x170e8] 
    /*0001cd54*/ MOV         R2, R8 
    /*0001cd58*/ MOV         R1, R6 
    /*0001cd5c*/ SUBS        R4, R0, #0 
    /*0001cd60*/ MOV         R0, R5 
    /*0001cd64*/ BNE         VI_UpdateFromOriginalPic_x1cd78
    /*0001cd68*/ BL          0x000000000001CD68          @ VI_COMM_SendUserPic [R_ARM_CALL: .text+0x1bc88] 
    /*0001cd6c*/ MOV         R0, R4 
    /*0001cd70*/ ADD         SP, SP, #12 
    /*0001cd74*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_UpdateFromOriginalPic_x1cd78:
    /*0001cd78*/ BL          0x000000000001CD78          @ VI_UserPicSubmitByPassJob2Vgs [R_ARM_CALL: .text+0x1cb18] 
    /*0001cd7c*/ MOV         R0, SL 
    /*0001cd80*/ ADD         SP, SP, #12 
    /*0001cd84*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_UpdateFromOriginalPic_x1cd88:
    /*0001cd88*/ MVN         R0, #0 
    /*0001cd8c*/ ADD         SP, SP, #12 
    /*0001cd90*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VI_UpdateFromOriginalPic


FUNC_BEGIN VI_AddUserPicOnlineTask
    /*0001cd94*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001cd98*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001cd9c*/ SUB         SP, SP, #436                @ 0x1b4 
    /*0001cda0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001cda4*/ MOV         R4, R0 
    /*0001cda8*/ MOV         R0, #45                     @ 0x2d 
    /*0001cdac*/ MOV         R6, R1 
    /*0001cdb0*/ STR         R2, [SP, #12] 
    /*0001cdb4*/ LDR         SL, [R3, R4, LSL #2] 
    /*0001cdb8*/ BL          0x000000000001CDB8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001cdbc*/ LDR         R3, [R0, #64]               @ 0x40 
    /*0001cdc0*/ STR         R0, [SP, #8] 
    /*0001cdc4*/ BLX         R3 
    /*0001cdc8*/ SUBS        FP, R0, #0 
    /*0001cdcc*/ BEQ         VI_AddUserPicOnlineTask_x1d03c
    /*0001cdd0*/ ADD         R3, R4, R6 
    /*0001cdd4*/ ADD         R2, SP, #68                 @ 0x44 
    /*0001cdd8*/ MOV         R1, R6 
    /*0001cddc*/ MOV         R0, R4 
    /*0001cde0*/ MOV         R9, R3 
    /*0001cde4*/ STR         R3, [SP, #16] 
    /*0001cde8*/ BL          0x000000000001CDE8          @ VI_DRV_GetWorkingChnAttr [R_ARM_CALL: .text+0x2991c] 
    /*0001cdec*/ LDR         IP, [SP, #88]               @ 0x58 
    /*0001cdf0*/ LDR         LR, [SP, #76]               @ 0x4c 
    /*0001cdf4*/ ADD         R1, R6, #9728               @ 0x2600 
    /*0001cdf8*/ LDR         R7, [SP, #84]               @ 0x54 
    /*0001cdfc*/ ADD         R1, R1, #54                 @ 0x36 
    /*0001ce00*/ STR         IP, [SP, #48]               @ 0x30 
    /*0001ce04*/ MOV         IP, #336                    @ 0x150 
    /*0001ce08*/ MUL         R9, IP, R9 
    /*0001ce0c*/ MOVW        R8, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x13650] 
    /*0001ce10*/ MOVT        R8, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x13650] 
    /*0001ce14*/ LDR         R5, [SL, R1, LSL #2] 
    /*0001ce18*/ STR         LR, [SP, #44]               @ 0x2c 
    /*0001ce1c*/ ADD         R2, SP, #36                 @ 0x24 
    /*0001ce20*/ LDR         LR, [SP, #80]               @ 0x50 
    /*0001ce24*/ MOV         R1, R6 
    /*0001ce28*/ STR         R7, [SP, #52]               @ 0x34 
    /*0001ce2c*/ SUB         R7, R8, #3424               @ 0xd60 
    /*0001ce30*/ ADD         R7, R7, R9 
    /*0001ce34*/ MOV         R0, R4 
    /*0001ce38*/ MOV         IP, #0 
    /*0001ce3c*/ STR         R5, [SP, #64]               @ 0x40 
    /*0001ce40*/ STR         LR, [SP, #56]               @ 0x38 
    /*0001ce44*/ STR         IP, [SP, #60]               @ 0x3c 
    /*0001ce48*/ STR         R4, [SP, #28] 
    /*0001ce4c*/ STR         R6, [SP, #32] 
    /*0001ce50*/ BL          0x000000000001CE50          @ VI_DRV_GetChnOutPutSize [R_ARM_CALL: .text+0x2b724] 
    /*0001ce54*/ ADD         R0, SP, #28 
    /*0001ce58*/ MOV         R1, R7 
    /*0001ce5c*/ BL          0x000000000001CE5C          @ VI_DRV_GetFrmVbBlk [R_ARM_CALL: .text+0x2c8f4] 
    /*0001ce60*/ SUBS        R5, R0, #0 
    /*0001ce64*/ BNE         VI_AddUserPicOnlineTask_x1cfec
    /*0001ce68*/ MOV         R1, R6 
    /*0001ce6c*/ MOV         R0, R4 
    /*0001ce70*/ BL          0x000000000001CE70          @ VI_COMM_GetUserPicTimeRef [R_ARM_CALL: .text+0x1b9cc] 
    /*0001ce74*/ ADD         R9, R8, R9 
    /*0001ce78*/ MOV         R1, R6 
    /*0001ce7c*/ MOVW        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001ce80*/ MOVT        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001ce84*/ MOVW        SL, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001ce88*/ MOVT        SL, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001ce8c*/ STR         R0, [R9, #-3192]            @ 0xfffff388 
    /*0001ce90*/ MOV         R0, R4 
    /*0001ce94*/ BL          0x000000000001CE94          @ VI_COMM_GetUserPicTimePts [R_ARM_CALL: .text+0x1ba08] 
    /*0001ce98*/ STR         R5, [R7, #244]              @ 0xf4 
    /*0001ce9c*/ STR         R0, [R7, #240]              @ 0xf0 
    /*0001cea0*/ MOV         R0, R4 
    /*0001cea4*/ BL          0x000000000001CEA4          @ VI_DRV_GetColorGamutFromIsp [R_ARM_CALL: .text+0x38a4c] 
    /*0001cea8*/ MOV         R2, #176                    @ 0xb0 
    /*0001ceac*/ MUL         R2, R2, R4 
    /*0001ceb0*/ ADD         R1, R2, #28 
    /*0001ceb4*/ STR         R2, [SP, #20] 
    /*0001ceb8*/ STR         R0, [R9, #-3396]            @ 0xfffff2bc 
    /*0001cebc*/ ADD         R0, R8, R1 
    /*0001cec0*/ BL          0x000000000001CEC0          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0001cec4*/ LDR         R2, [SP, #20] 
    /*0001cec8*/ ADD         R0, R2, #32 
    /*0001cecc*/ ADD         R0, R8, R0 
    /*0001ced0*/ BL          0x000000000001CED0          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0001ced4*/ MOV         R1, R5 
    /*0001ced8*/ ADD         R0, SL, #16 
    /*0001cedc*/ BL          0x000000000001CEDC          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001cee0*/ MOV         R2, #336                    @ 0x150 
    /*0001cee4*/ ADD         R1, SL, #16 
    /*0001cee8*/ MOV         R0, FP 
    /*0001ceec*/ BL          0x000000000001CEEC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001cef0*/ MOV         R1, R5 
    /*0001cef4*/ MOV         R2, #320                    @ 0x140 
    /*0001cef8*/ ADD         R0, SP, #112                @ 0x70 
    /*0001cefc*/ BL          0x000000000001CEFC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0001cf00*/ LDR         R2, [SP, #16] 
    /*0001cf04*/ MOV         LR, #16 
    /*0001cf08*/ STR         R5, [FP, #740]              @ 0x2e4 
    /*0001cf0c*/ ADD         R0, R2, #456                @ 0x1c8 
    /*0001cf10*/ STR         LR, [FP, #724]              @ 0x2d4 
    /*0001cf14*/ STR         LR, [FP, #332]              @ 0x14c 
    /*0001cf18*/ MOV         IP, #45                     @ 0x2d 
    /*0001cf1c*/ STR         R4, [FP, #728]              @ 0x2d8 
    /*0001cf20*/ ADD         R1, FP, #672                @ 0x2a0 
    /*0001cf24*/ STR         IP, [FP, #668]              @ 0x29c 
    /*0001cf28*/ MOV         R2, #336                    @ 0x150 
    /*0001cf2c*/ STR         R6, [FP, #732]              @ 0x2dc 
    /*0001cf30*/ MOVW        IP, #0                      @ VI_UserPicOnlineTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x1bdb0] 
    /*0001cf34*/ LDR         R8, [SL, R0, LSL #2] 
    /*0001cf38*/ MOVT        IP, #0                      @ VI_UserPicOnlineTaskCallBack [R_ARM_MOVT_ABS: .text+0x1bdb0] 
    /*0001cf3c*/ ADD         R0, FP, R2 
    /*0001cf40*/ STR         R5, [SP, #112]              @ 0x70 
    /*0001cf44*/ STR         R5, [SP, #116]              @ 0x74 
    /*0001cf48*/ ASR         R9, R8, #31 
    /*0001cf4c*/ STRD        R8, [R1] 
    /*0001cf50*/ STR         IP, [FP, #720]              @ 0x2d0 
    /*0001cf54*/ MOV         R1, R7 
    /*0001cf58*/ STR         R5, [SP, #120]              @ 0x78 
    /*0001cf5c*/ STR         R5, [SP, #124]              @ 0x7c 
    /*0001cf60*/ STR         R5, [SP, #128]              @ 0x80 
    /*0001cf64*/ BL          0x000000000001CF64          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001cf68*/ MOV         R0, #1 
    /*0001cf6c*/ BL          0x000000000001CF6C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001cf70*/ MOV         R1, FP 
    /*0001cf74*/ LDR         R2, [R0, #108]              @ 0x6c 
    /*0001cf78*/ ADD         R0, FP, #336                @ 0x150 
    /*0001cf7c*/ BLX         R2 
    /*0001cf80*/ LDR         R3, [SP, #8] 
    /*0001cf84*/ ADD         R2, SP, #112                @ 0x70 
    /*0001cf88*/ MOV         R1, FP 
    /*0001cf8c*/ LDR         R0, [SP, #12] 
    /*0001cf90*/ LDR         R5, [R3, #32] 
    /*0001cf94*/ BLX         R5 
    /*0001cf98*/ SUBS        R5, R0, #0 
    /*0001cf9c*/ BNE         VI_AddUserPicOnlineTask_x1cfac
    VI_AddUserPicOnlineTask_x1cfa0:
    /*0001cfa0*/ MOV         R0, R5 
    /*0001cfa4*/ ADD         SP, SP, #436                @ 0x1b4 
    /*0001cfa8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddUserPicOnlineTask_x1cfac:
    /*0001cfac*/ MOV         R1, #16 
    /*0001cfb0*/ MOVW        R3, #1175                   @ 0x497 
    /*0001cfb4*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x82c8] 
    /*0001cfb8*/ STR         R3, [SP] 
    /*0001cfbc*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x82c8] 
    /*0001cfc0*/ LDR         R3, [PC, #156]              @ 0x000000000001d064 
    /*0001cfc4*/ MOV         R0, #3 
    /*0001cfc8*/ BL          0x000000000001CFC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001cfcc*/ MOV         R0, R4 
    /*0001cfd0*/ MOV         R3, R7 
    /*0001cfd4*/ ADD         R2, SL, #16 
    /*0001cfd8*/ MOV         R1, R6 
    /*0001cfdc*/ BL          0x000000000001CFDC          @ VI_UserPicOnlineTaskFailHandle [R_ARM_CALL: .text+0x1c944] 
    /*0001cfe0*/ MOV         R0, R5 
    /*0001cfe4*/ ADD         SP, SP, #436                @ 0x1b4 
    /*0001cfe8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddUserPicOnlineTask_x1cfec:
    /*0001cfec*/ LDR         R3, [SP, #8] 
    /*0001cff0*/ ADD         SL, SL, #32768              @ 0x8000 
    /*0001cff4*/ MOV         R0, FP 
    /*0001cff8*/ LDR         R2, [R3, #68]               @ 0x44 
    /*0001cffc*/ BLX         R2 
    /*0001d000*/ LDR         R0, [SL, #3660]             @ 0xe4c 
    /*0001d004*/ MOVW        IP, #1137                   @ 0x471 
    /*0001d008*/ LDR         R3, [PC, #84]               @ 0x000000000001d064 
    /*0001d00c*/ MOV         R1, #16 
    /*0001d010*/ ADD         R0, R0, #1 
    /*0001d014*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8288] 
    /*0001d018*/ STR         R0, [SL, #3660]             @ 0xe4c 
    /*0001d01c*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8288] 
    /*0001d020*/ STR         R4, [SP, #4] 
    /*0001d024*/ STR         IP, [SP] 
    /*0001d028*/ MOV         R0, #3 
    /*0001d02c*/ BL          0x000000000001D02C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d030*/ MOV         R0, R5 
    /*0001d034*/ ADD         SP, SP, #436                @ 0x1b4 
    /*0001d038*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddUserPicOnlineTask_x1d03c:
    /*0001d03c*/ MOVW        R3, #1114                   @ 0x45a 
    /*0001d040*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8164] 
    /*0001d044*/ STR         R3, [SP] 
    /*0001d048*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8164] 
    /*0001d04c*/ LDR         R3, [PC, #16]               @ 0x000000000001d064 
    /*0001d050*/ MOV         R1, #16 
    /*0001d054*/ MOV         R0, #3 
    /*0001d058*/ MVN         R5, #0 
    /*0001d05c*/ BL          0x000000000001D05C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d060*/ B           VI_AddUserPicOnlineTask_x1cfa0
    /*0001d064*/ LDRDEQ      R1, [R0], -R4 
FUNC_END VI_AddUserPicOnlineTask


FUNC_BEGIN VI_AddUserPicCoverTask
    /*0001d068*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001d06c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001d070*/ SUB         SP, SP, #164                @ 0xa4 
    /*0001d074*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001d078*/ MOV         R4, R0 
    /*0001d07c*/ MOV         R0, #45                     @ 0x2d 
    /*0001d080*/ MOV         R5, R1 
    /*0001d084*/ STR         R2, [SP, #12] 
    /*0001d088*/ LDR         SL, [R3, R4, LSL #2] 
    /*0001d08c*/ BL          0x000000000001D08C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d090*/ LDR         R3, [R0, #64]               @ 0x40 
    /*0001d094*/ STR         R0, [SP, #8] 
    /*0001d098*/ BLX         R3 
    /*0001d09c*/ SUBS        R9, R0, #0 
    /*0001d0a0*/ BEQ         VI_AddUserPicCoverTask_x1d2f4
    /*0001d0a4*/ ADD         R3, R4, R5 
    /*0001d0a8*/ ADD         R2, SP, #64                 @ 0x40 
    /*0001d0ac*/ MOV         R1, R5 
    /*0001d0b0*/ MOV         R0, R4 
    /*0001d0b4*/ MOV         R8, R3 
    /*0001d0b8*/ STR         R3, [SP, #16] 
    /*0001d0bc*/ BL          0x000000000001D0BC          @ VI_DRV_GetWorkingChnAttr [R_ARM_CALL: .text+0x2991c] 
    /*0001d0c0*/ LDR         IP, [SP, #84]               @ 0x54 
    /*0001d0c4*/ ADD         R1, R5, #9728               @ 0x2600 
    /*0001d0c8*/ LDR         LR, [SP, #72]               @ 0x48 
    /*0001d0cc*/ ADD         R1, R1, #54                 @ 0x36 
    /*0001d0d0*/ LDR         R7, [SP, #80]               @ 0x50 
    /*0001d0d4*/ STR         IP, [SP, #44]               @ 0x2c 
    /*0001d0d8*/ MOV         IP, #336                    @ 0x150 
    /*0001d0dc*/ LDR         R6, [SL, R1, LSL #2] 
    /*0001d0e0*/ ADD         R2, SP, #32 
    /*0001d0e4*/ MUL         FP, IP, R8 
    /*0001d0e8*/ STR         LR, [SP, #40]               @ 0x28 
    /*0001d0ec*/ STR         R6, [SP, #60]               @ 0x3c 
    /*0001d0f0*/ MOVW        R6, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x13650] 
    /*0001d0f4*/ MOVT        R6, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x13650] 
    /*0001d0f8*/ LDR         LR, [SP, #76]               @ 0x4c 
    /*0001d0fc*/ STR         R7, [SP, #48]               @ 0x30 
    /*0001d100*/ SUB         R7, R6, #3424               @ 0xd60 
    /*0001d104*/ ADD         R7, R7, FP 
    /*0001d108*/ MOV         R1, R5 
    /*0001d10c*/ MOV         R0, R4 
    /*0001d110*/ MOV         IP, #0 
    /*0001d114*/ STR         LR, [SP, #52]               @ 0x34 
    /*0001d118*/ STR         IP, [SP, #56]               @ 0x38 
    /*0001d11c*/ STR         R4, [SP, #24] 
    /*0001d120*/ STR         R5, [SP, #28] 
    /*0001d124*/ BL          0x000000000001D124          @ VI_DRV_GetChnOutPutSize [R_ARM_CALL: .text+0x2b724] 
    /*0001d128*/ ADD         R0, SP, #24 
    /*0001d12c*/ MOV         R1, R7 
    /*0001d130*/ BL          0x000000000001D130          @ VI_DRV_GetFrmVbBlk [R_ARM_CALL: .text+0x2c8f4] 
    /*0001d134*/ SUBS        R8, R0, #0 
    /*0001d138*/ BNE         VI_AddUserPicCoverTask_x1d2a4
    /*0001d13c*/ MOV         R1, R5 
    /*0001d140*/ MOV         R0, R4 
    /*0001d144*/ BL          0x000000000001D144          @ VI_COMM_GetUserPicTimeRef [R_ARM_CALL: .text+0x1b9cc] 
    /*0001d148*/ ADD         R6, R6, FP 
    /*0001d14c*/ MOV         R1, R5 
    /*0001d150*/ MOVW        SL, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001d154*/ MOVT        SL, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001d158*/ MOV         FP, #16 
    /*0001d15c*/ STR         R0, [R6, #-3192]            @ 0xfffff388 
    /*0001d160*/ MOV         R0, R4 
    /*0001d164*/ BL          0x000000000001D164          @ VI_COMM_GetUserPicTimePts [R_ARM_CALL: .text+0x1ba08] 
    /*0001d168*/ STR         R8, [R7, #244]              @ 0xf4 
    /*0001d16c*/ STR         R0, [R7, #240]              @ 0xf0 
    /*0001d170*/ MOV         R0, R4 
    /*0001d174*/ BL          0x000000000001D174          @ VI_DRV_GetColorGamutFromIsp [R_ARM_CALL: .text+0x38a4c] 
    /*0001d178*/ MOV         R2, #176                    @ 0xb0 
    /*0001d17c*/ MUL         R2, R2, R4 
    /*0001d180*/ ADD         R1, R2, #28 
    /*0001d184*/ STR         R2, [SP, #20] 
    /*0001d188*/ STR         R0, [R6, #-3396]            @ 0xfffff2bc 
    /*0001d18c*/ ADD         R0, SL, R1 
    /*0001d190*/ BL          0x000000000001D190          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0001d194*/ LDR         R2, [SP, #20] 
    /*0001d198*/ ADD         R0, R2, #32 
    /*0001d19c*/ ADD         R0, SL, R0 
    /*0001d1a0*/ ADD         SL, R9, #336                @ 0x150 
    /*0001d1a4*/ BL          0x000000000001D1A4          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0001d1a8*/ LDR         R2, [SP, #16] 
    /*0001d1ac*/ LDR         LR, [R6, #-3420]            @ 0xfffff2a4 
    /*0001d1b0*/ MOVW        R0, #0                      @ VI_UserPicCoverExTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x1bed4] 
    /*0001d1b4*/ ADD         R3, R2, #456                @ 0x1c8 
    /*0001d1b8*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001d1bc*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001d1c0*/ LDR         R1, [R6, #-3424]            @ 0xfffff2a0 
    /*0001d1c4*/ MOVT        R0, #0                      @ VI_UserPicCoverExTaskCallBack [R_ARM_MOVT_ABS: .text+0x1bed4] 
    /*0001d1c8*/ STR         R4, [R9, #728]              @ 0x2d8 
    /*0001d1cc*/ STR         R0, [R9, #720]              @ 0x2d0 
    /*0001d1d0*/ MOV         R0, #45                     @ 0x2d 
    /*0001d1d4*/ STR         R5, [R9, #732]              @ 0x2dc 
    /*0001d1d8*/ ADD         IP, R9, #672                @ 0x2a0 
    /*0001d1dc*/ STR         FP, [R9, #724]              @ 0x2d4 
    /*0001d1e0*/ STR         FP, [R9, #332]              @ 0x14c 
    /*0001d1e4*/ STR         R0, [R9, #668]              @ 0x29c 
    /*0001d1e8*/ LDR         R0, [R2, R3, LSL #2] 
    /*0001d1ec*/ LDR         R6, [R2, #8] 
    /*0001d1f0*/ MOV         R2, #336                    @ 0x150 
    /*0001d1f4*/ STR         R1, [SP, #124]              @ 0x7c 
    /*0001d1f8*/ ASR         R1, R0, #31 
    /*0001d1fc*/ STRD        R0, [IP] 
    /*0001d200*/ MOV         R1, R7 
    /*0001d204*/ MOV         R0, SL 
    /*0001d208*/ MOV         IP, #1 
    /*0001d20c*/ STR         LR, [SP, #128]              @ 0x80 
    /*0001d210*/ STR         IP, [SP, #108]              @ 0x6c 
    /*0001d214*/ STR         R8, [SP, #112]              @ 0x70 
    /*0001d218*/ STR         R8, [SP, #116]              @ 0x74 
    /*0001d21c*/ STR         R8, [SP, #120]              @ 0x78 
    /*0001d220*/ STR         R6, [SP, #156]              @ 0x9c 
    /*0001d224*/ BL          0x000000000001D224          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001d228*/ MOV         R2, #336                    @ 0x150 
    /*0001d22c*/ MOV         R1, SL 
    /*0001d230*/ MOV         R0, R9 
    /*0001d234*/ BL          0x000000000001D234          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001d238*/ LDR         R3, [SP, #8] 
    /*0001d23c*/ STR         R8, [R9, #20] 
    /*0001d240*/ MOV         R1, R9 
    /*0001d244*/ LDR         R0, [SP, #12] 
    /*0001d248*/ ADD         R2, SP, #108                @ 0x6c 
    /*0001d24c*/ LDR         R3, [R3, #16] 
    /*0001d250*/ BLX         R3 
    /*0001d254*/ SUBS        R8, R0, #0 
    /*0001d258*/ BNE         VI_AddUserPicCoverTask_x1d268
    VI_AddUserPicCoverTask_x1d25c:
    /*0001d25c*/ MOV         R0, R8 
    /*0001d260*/ ADD         SP, SP, #164                @ 0xa4 
    /*0001d264*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddUserPicCoverTask_x1d268:
    /*0001d268*/ MOV         R1, FP 
    /*0001d26c*/ MOVW        R3, #1257                   @ 0x4e9 
    /*0001d270*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8318] 
    /*0001d274*/ STR         R3, [SP] 
    /*0001d278*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8318] 
    /*0001d27c*/ LDR         R3, [PC, #152]              @ 0x000000000001d31c 
    /*0001d280*/ MOV         R0, #3 
    /*0001d284*/ BL          0x000000000001D284          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d288*/ MOV         R0, R4 
    /*0001d28c*/ MOV         R2, R7 
    /*0001d290*/ MOV         R1, R5 
    /*0001d294*/ BL          0x000000000001D294          @ VI_UserPicCoverExTaskFailHandle [R_ARM_CALL: .text+0x1c9a0] 
    /*0001d298*/ MOV         R0, R8 
    /*0001d29c*/ ADD         SP, SP, #164                @ 0xa4 
    /*0001d2a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddUserPicCoverTask_x1d2a4:
    /*0001d2a4*/ LDR         R3, [SP, #8] 
    /*0001d2a8*/ ADD         SL, SL, #32768              @ 0x8000 
    /*0001d2ac*/ MOV         R0, R9 
    /*0001d2b0*/ LDR         R2, [R3, #68]               @ 0x44 
    /*0001d2b4*/ BLX         R2 
    /*0001d2b8*/ LDR         R0, [SL, #3660]             @ 0xe4c 
    /*0001d2bc*/ MOVW        IP, #1223                   @ 0x4c7 
    /*0001d2c0*/ LDR         R3, [PC, #84]               @ 0x000000000001d31c 
    /*0001d2c4*/ MOV         R1, #16 
    /*0001d2c8*/ ADD         R0, R0, #1 
    /*0001d2cc*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8288] 
    /*0001d2d0*/ STR         R0, [SL, #3660]             @ 0xe4c 
    /*0001d2d4*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8288] 
    /*0001d2d8*/ STR         R4, [SP, #4] 
    /*0001d2dc*/ STR         IP, [SP] 
    /*0001d2e0*/ MOV         R0, #3 
    /*0001d2e4*/ BL          0x000000000001D2E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d2e8*/ MOV         R0, R8 
    /*0001d2ec*/ ADD         SP, SP, #164                @ 0xa4 
    /*0001d2f0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_AddUserPicCoverTask_x1d2f4:
    /*0001d2f4*/ MOV         R3, #1200                   @ 0x4b0 
    /*0001d2f8*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8164] 
    /*0001d2fc*/ STR         R3, [SP] 
    /*0001d300*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8164] 
    /*0001d304*/ LDR         R3, [PC, #16]               @ 0x000000000001d31c 
    /*0001d308*/ MOV         R1, #16 
    /*0001d30c*/ MOV         R0, #3 
    /*0001d310*/ MVN         R8, #0 
    /*0001d314*/ BL          0x000000000001D314          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d318*/ B           VI_AddUserPicCoverTask_x1d25c
    /*0001d31c*/ ANDEQ       R1, R0, IP, ROR #3 
FUNC_END VI_AddUserPicCoverTask


FUNC_BEGIN VI_UpdatePicModeUserPic
    /*0001d320*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001d324*/ SUB         SP, SP, #80                 @ 0x50 
    /*0001d328*/ MOV         R5, R0 
    /*0001d32c*/ MOV         R6, R1 
    /*0001d330*/ BL          0x000000000001D330          @ VI_UpdateFromOriginalPic [R_ARM_CALL: .text+0x1cc8c] 
    /*0001d334*/ SUBS        R4, R0, #0 
    /*0001d338*/ BNE         VI_UpdatePicModeUserPic_x1d348
    VI_UpdatePicModeUserPic_x1d33c:
    /*0001d33c*/ MOV         R0, R4 
    /*0001d340*/ ADD         SP, SP, #80                 @ 0x50 
    /*0001d344*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_UpdatePicModeUserPic_x1d348:
    /*0001d348*/ BL          0x000000000001D348          @ VI_IsVgsExist [R_ARM_CALL: .text+0x170e8] 
    /*0001d34c*/ CMP         R0, #0 
    /*0001d350*/ MOVWEQ      R3, #1279                   @ 0x4ff 
    /*0001d354*/ MOVWEQ      R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8368] 
    /*0001d358*/ STREQ       R3, [SP] 
    /*0001d35c*/ MOVTEQ      R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8368] 
    /*0001d360*/ BEQ         VI_UpdatePicModeUserPic_x1d474
    /*0001d364*/ MOV         R0, #45                     @ 0x2d 
    /*0001d368*/ MOV         R8, #1 
    /*0001d36c*/ BL          0x000000000001D36C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d370*/ MOV         R1, #0 
    /*0001d374*/ STR         R6, [SP] 
    /*0001d378*/ ADD         R2, SP, #16 
    /*0001d37c*/ STR         R1, [SP, #72]               @ 0x48 
    /*0001d380*/ MOV         R3, R5 
    /*0001d384*/ STR         R2, [SP, #4] 
    /*0001d388*/ MOV         R2, #16 
    /*0001d38c*/ STR         R8, [SP, #68]               @ 0x44 
    /*0001d390*/ MOV         R7, R0 
    /*0001d394*/ LDR         R4, [R0] 
    /*0001d398*/ ADD         R0, SP, #12 
    /*0001d39c*/ BLX         R4 
    /*0001d3a0*/ CMP         R0, #0 
    /*0001d3a4*/ BNE         VI_UpdatePicModeUserPic_x1d464
    /*0001d3a8*/ MOV         R1, R6 
    /*0001d3ac*/ MOV         R0, R5 
    /*0001d3b0*/ LDR         R2, [SP, #12] 
    /*0001d3b4*/ BL          0x000000000001D3B4          @ VI_AddUserPicOnlineTask [R_ARM_CALL: .text+0x1cd94] 
    /*0001d3b8*/ SUBS        R4, R0, #0 
    /*0001d3bc*/ BNE         VI_UpdatePicModeUserPic_x1d43c
    /*0001d3c0*/ MOV         R2, R4 
    /*0001d3c4*/ MOV         R1, R8 
    /*0001d3c8*/ LDR         R3, [R7, #12] 
    /*0001d3cc*/ LDR         R0, [SP, #12] 
    /*0001d3d0*/ BLX         R3 
    /*0001d3d4*/ SUBS        R4, R0, #0 
    /*0001d3d8*/ BEQ         VI_UpdatePicModeUserPic_x1d33c
    /*0001d3dc*/ MOVW        R3, #1309                   @ 0x51d 
    /*0001d3e0*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x840c] 
    /*0001d3e4*/ STR         R3, [SP] 
    /*0001d3e8*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x840c] 
    /*0001d3ec*/ STR         R4, [SP, #4] 
    /*0001d3f0*/ MOV         R1, #16 
    /*0001d3f4*/ LDR         R3, [PC, #144]              @ 0x000000000001d48c 
    /*0001d3f8*/ MOV         R0, #3 
    /*0001d3fc*/ BL          0x000000000001D3FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_UpdatePicModeUserPic_x1d400:
    /*0001d400*/ LDR         R3, [R7, #4] 
    /*0001d404*/ LDR         R0, [SP, #12] 
    /*0001d408*/ BLX         R3 
    /*0001d40c*/ STR         R4, [SP, #4] 
    /*0001d410*/ MOVW        R3, #1319                   @ 0x527 
    /*0001d414*/ MOV         R1, #16 
    /*0001d418*/ STR         R3, [SP] 
    /*0001d41c*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8248] 
    /*0001d420*/ LDR         R3, [PC, #100]              @ 0x000000000001d48c 
    /*0001d424*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8248] 
    /*0001d428*/ MOV         R0, #3 
    /*0001d42c*/ BL          0x000000000001D42C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d430*/ MOV         R0, R4 
    /*0001d434*/ ADD         SP, SP, #80                 @ 0x50 
    /*0001d438*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_UpdatePicModeUserPic_x1d43c:
    /*0001d43c*/ MOVW        R3, #1301                   @ 0x515 
    /*0001d440*/ STR         R4, [SP, #4] 
    /*0001d444*/ STR         R3, [SP] 
    /*0001d448*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x83c8] 
    /*0001d44c*/ LDR         R3, [PC, #56]               @ 0x000000000001d48c 
    /*0001d450*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x83c8] 
    /*0001d454*/ MOV         R1, #16 
    /*0001d458*/ MOV         R0, #3 
    /*0001d45c*/ BL          0x000000000001D45C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d460*/ B           VI_UpdatePicModeUserPic_x1d400
    VI_UpdatePicModeUserPic_x1d464:
    /*0001d464*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8398] 
    /*0001d468*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8398] 
    /*0001d46c*/ MOVW        R3, #1292                   @ 0x50c 
    /*0001d470*/ STR         R3, [SP] 
    VI_UpdatePicModeUserPic_x1d474:
    /*0001d474*/ LDR         R3, [PC, #16]               @ 0x000000000001d48c 
    /*0001d478*/ MOV         R1, #16 
    /*0001d47c*/ MOV         R0, #3 
    /*0001d480*/ MVN         R4, #0 
    /*0001d484*/ BL          0x000000000001D484          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d488*/ B           VI_UpdatePicModeUserPic_x1d33c
    /*0001d48c*/ ANDEQ       R1, R0, R4, LSL #4 
FUNC_END VI_UpdatePicModeUserPic


FUNC_BEGIN VI_UpdateBgcModeUserPic
    /*0001d490*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001d494*/ SUB         SP, SP, #80                 @ 0x50 
    /*0001d498*/ MOV         R4, R0 
    /*0001d49c*/ MOV         R6, R1 
    /*0001d4a0*/ BL          0x000000000001D4A0          @ VI_IsVgsExist [R_ARM_CALL: .text+0x170e8] 
    /*0001d4a4*/ CMP         R0, #0 
    /*0001d4a8*/ MOVWEQ      R3, #1334                   @ 0x536 
    /*0001d4ac*/ MOVWEQ      R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8368] 
    /*0001d4b0*/ STREQ       R3, [SP] 
    /*0001d4b4*/ MOVTEQ      R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8368] 
    /*0001d4b8*/ BEQ         VI_UpdateBgcModeUserPic_x1d5d8
    /*0001d4bc*/ MOV         R0, #45                     @ 0x2d 
    /*0001d4c0*/ MOV         R7, #1 
    /*0001d4c4*/ BL          0x000000000001D4C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d4c8*/ MOV         R1, #0 
    /*0001d4cc*/ STR         R6, [SP] 
    /*0001d4d0*/ ADD         R2, SP, #16 
    /*0001d4d4*/ STR         R1, [SP, #72]               @ 0x48 
    /*0001d4d8*/ MOV         R3, R4 
    /*0001d4dc*/ STR         R2, [SP, #4] 
    /*0001d4e0*/ MOV         R2, #16 
    /*0001d4e4*/ STR         R7, [SP, #68]               @ 0x44 
    /*0001d4e8*/ MOV         R5, R0 
    /*0001d4ec*/ LDR         R8, [R0] 
    /*0001d4f0*/ ADD         R0, SP, #12 
    /*0001d4f4*/ BLX         R8 
    /*0001d4f8*/ CMP         R0, #0 
    /*0001d4fc*/ BNE         VI_UpdateBgcModeUserPic_x1d5c8
    /*0001d500*/ MOV         R0, R4 
    /*0001d504*/ MOV         R1, R6 
    /*0001d508*/ LDR         R2, [SP, #12] 
    /*0001d50c*/ BL          0x000000000001D50C          @ VI_AddUserPicCoverTask [R_ARM_CALL: .text+0x1d068] 
    /*0001d510*/ SUBS        R4, R0, #0 
    /*0001d514*/ BEQ         VI_UpdateBgcModeUserPic_x1d578
    /*0001d518*/ MOVW        R3, #1356                   @ 0x54c 
    /*0001d51c*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8444] 
    /*0001d520*/ STR         R3, [SP] 
    /*0001d524*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8444] 
    /*0001d528*/ STR         R4, [SP, #4] 
    /*0001d52c*/ MOV         R1, #16 
    /*0001d530*/ LDR         R3, [PC, #184]              @ 0x000000000001d5f0 
    /*0001d534*/ MOV         R0, #3 
    /*0001d538*/ BL          0x000000000001D538          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_UpdateBgcModeUserPic_x1d53c:
    /*0001d53c*/ LDR         R3, [R5, #4] 
    /*0001d540*/ LDR         R0, [SP, #12] 
    /*0001d544*/ BLX         R3 
    /*0001d548*/ STR         R4, [SP, #4] 
    /*0001d54c*/ MOVW        R3, #1374                   @ 0x55e 
    /*0001d550*/ MOV         R1, #16 
    /*0001d554*/ STR         R3, [SP] 
    /*0001d558*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8248] 
    /*0001d55c*/ LDR         R3, [PC, #140]              @ 0x000000000001d5f0 
    /*0001d560*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8248] 
    /*0001d564*/ MOV         R0, #3 
    /*0001d568*/ BL          0x000000000001D568          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d56c*/ MOV         R0, R4 
    /*0001d570*/ ADD         SP, SP, #80                 @ 0x50 
    /*0001d574*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_UpdateBgcModeUserPic_x1d578:
    /*0001d578*/ MOV         R2, R4 
    /*0001d57c*/ MOV         R1, R7 
    /*0001d580*/ LDR         R3, [R5, #12] 
    /*0001d584*/ LDR         R0, [SP, #12] 
    /*0001d588*/ BLX         R3 
    /*0001d58c*/ SUBS        R4, R0, #0 
    /*0001d590*/ BNE         VI_UpdateBgcModeUserPic_x1d5a0
    VI_UpdateBgcModeUserPic_x1d594:
    /*0001d594*/ MOV         R0, R4 
    /*0001d598*/ ADD         SP, SP, #80                 @ 0x50 
    /*0001d59c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_UpdateBgcModeUserPic_x1d5a0:
    /*0001d5a0*/ MOVW        R3, #1364                   @ 0x554 
    /*0001d5a4*/ STR         R4, [SP, #4] 
    /*0001d5a8*/ STR         R3, [SP] 
    /*0001d5ac*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x840c] 
    /*0001d5b0*/ LDR         R3, [PC, #56]               @ 0x000000000001d5f0 
    /*0001d5b4*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x840c] 
    /*0001d5b8*/ MOV         R1, #16 
    /*0001d5bc*/ MOV         R0, #3 
    /*0001d5c0*/ BL          0x000000000001D5C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d5c4*/ B           VI_UpdateBgcModeUserPic_x1d53c
    VI_UpdateBgcModeUserPic_x1d5c8:
    /*0001d5c8*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8398] 
    /*0001d5cc*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8398] 
    /*0001d5d0*/ MOVW        R3, #1347                   @ 0x543 
    /*0001d5d4*/ STR         R3, [SP] 
    VI_UpdateBgcModeUserPic_x1d5d8:
    /*0001d5d8*/ LDR         R3, [PC, #16]               @ 0x000000000001d5f0 
    /*0001d5dc*/ MOV         R1, #16 
    /*0001d5e0*/ MOV         R0, #3 
    /*0001d5e4*/ MVN         R4, #0 
    /*0001d5e8*/ BL          0x000000000001D5E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d5ec*/ B           VI_UpdateBgcModeUserPic_x1d594
    /*0001d5f0*/ ANDEQ       R1, R0, IP, LSL R2 
FUNC_END VI_UpdateBgcModeUserPic


FUNC_BEGIN VI_UpdateUserPic
    /*0001d5f4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001d5f8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001d5fc*/ LDR         R3, [R3, #4] 
    /*0001d600*/ CMP         R3, #0 
    /*0001d604*/ BEQ         VI_UpdateUserPic_x1d60c
    VI_UpdateUserPic_x1d608:
    /*0001d608*/ B           VI_UpdateUserPic_x1d608     @ VI_UpdateBgcModeUserPic [R_ARM_JUMP24: .text+0x1d490] 
    VI_UpdateUserPic_x1d60c:
    /*0001d60c*/ B           VI_UpdateUserPic_x1d60c     @ VI_UpdatePicModeUserPic [R_ARM_JUMP24: .text+0x1d320] 
FUNC_END VI_UpdateUserPic


FUNC_BEGIN VI_COMM_GetUserPic
    /*0001d610*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001d614*/ ADD         R7, R0, R1 
    /*0001d618*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001d61c*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001d620*/ ADD         R3, R6, R7, LSL #4 
    /*0001d624*/ ADD         R4, R7, #456                @ 0x1c8 
    /*0001d628*/ LDR         R3, [R3, #1852]             @ 0x73c 
    /*0001d62c*/ LDR         FP, [R6, R4, LSL #2] 
    /*0001d630*/ CMP         R3, #0 
    /*0001d634*/ ADDNE       R4, R6, #360                @ 0x168 
    /*0001d638*/ MOVNE       SL, R1 
    /*0001d63c*/ MOVNE       R9, R0 
    /*0001d640*/ MOVNE       R5, #0 
    /*0001d644*/ BEQ         VI_COMM_GetUserPic_x1d788
    VI_COMM_GetUserPic_x1d648:
    /*0001d648*/ LDR         R3, [R4, #-4] 
    /*0001d64c*/ CMP         R3, #1 
    /*0001d650*/ BEQ         VI_COMM_GetUserPic_x1d6cc
    VI_COMM_GetUserPic_x1d654:
    /*0001d654*/ ADD         R5, R5, #1 
    /*0001d658*/ ADD         R4, R4, #352                @ 0x160 
    /*0001d65c*/ CMP         R5, #4 
    /*0001d660*/ BNE         VI_COMM_GetUserPic_x1d648
    /*0001d664*/ MOV         R1, FP 
    /*0001d668*/ MOV         R0, R9 
    /*0001d66c*/ BL          0x000000000001D66C          @ VI_COMM_ReleaseLastUsrPic [R_ARM_CALL: .text+0x1c374] 
    /*0001d670*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001d674*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001d678*/ MOV         R2, #0 
    VI_COMM_GetUserPic_x1d67c:
    /*0001d67c*/ LDR         R4, [R3, #352]              @ 0x160 
    /*0001d680*/ ADD         R3, R3, #352                @ 0x160 
    /*0001d684*/ CMP         R4, #0 
    /*0001d688*/ BEQ         VI_COMM_GetUserPic_x1d720
    /*0001d68c*/ ADD         R2, R2, #1 
    /*0001d690*/ CMP         R2, #4 
    /*0001d694*/ BNE         VI_COMM_GetUserPic_x1d67c
    /*0001d698*/ LDR         R1, [R6, #1412]             @ 0x584 
    /*0001d69c*/ ADD         R7, R7, #456                @ 0x1c8 
    /*0001d6a0*/ LDR         R3, [R6, #1408]             @ 0x580 
    /*0001d6a4*/ MOV         R2, #3 
    /*0001d6a8*/ CMP         R1, #1 
    /*0001d6ac*/ STR         R2, [R6, R7, LSL #2] 
    /*0001d6b0*/ ADD         R3, R3, #1 
    /*0001d6b4*/ MOV         R2, #1 
    /*0001d6b8*/ STR         R3, [R6, #1408]             @ 0x580 
    /*0001d6bc*/ STR         R2, [R6, #1752]             @ 0x6d8 
    /*0001d6c0*/ BEQ         VI_COMM_GetUserPic_x1d76c
    VI_COMM_GetUserPic_x1d6c4:
    /*0001d6c4*/ MVN         R0, #0 
    /*0001d6c8*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_COMM_GetUserPic_x1d6cc:
    /*0001d6cc*/ LDR         R8, [R4, #336]              @ 0x150 
    /*0001d6d0*/ CMP         R8, #0 
    /*0001d6d4*/ BNE         VI_COMM_GetUserPic_x1d654
    /*0001d6d8*/ MOV         R2, R4 
    /*0001d6dc*/ MOV         R1, SL 
    /*0001d6e0*/ MOV         R0, R9 
    /*0001d6e4*/ BL          0x000000000001D6E4          @ VI_COMM_UserPicIsSuitable [R_ARM_CALL: .text+0x1ba44] 
    /*0001d6e8*/ CMP         R0, #1 
    /*0001d6ec*/ BNE         VI_COMM_GetUserPic_x1d654
    /*0001d6f0*/ MOV         R3, #352                    @ 0x160 
    /*0001d6f4*/ ADD         R7, R7, #456                @ 0x1c8 
    /*0001d6f8*/ MLA         R3, R5, R3, R3 
    /*0001d6fc*/ MOV         R0, R9 
    /*0001d700*/ MOV         R1, FP 
    /*0001d704*/ STR         R5, [R6, R7, LSL #2] 
    /*0001d708*/ LDR         R2, [R6, R3] 
    /*0001d70c*/ ADD         R2, R2, #1 
    /*0001d710*/ STR         R2, [R6, R3] 
    /*0001d714*/ BL          0x000000000001D714          @ VI_COMM_ReleaseLastUsrPic [R_ARM_CALL: .text+0x1c374] 
    /*0001d718*/ MOV         R0, R8 
    /*0001d71c*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_COMM_GetUserPic_x1d720:
    /*0001d720*/ MOV         R3, #352                    @ 0x160 
    /*0001d724*/ ADD         R7, R7, #456                @ 0x1c8 
    /*0001d728*/ MLA         R1, R2, R3, R3 
    /*0001d72c*/ STR         R2, [R6, R7, LSL #2] 
    /*0001d730*/ MUL         R2, R3, R2 
    /*0001d734*/ MOV         R3, #1 
    /*0001d738*/ ADD         R5, R6, R1 
    /*0001d73c*/ LDR         IP, [R5, #4] 
    /*0001d740*/ ADD         R0, R6, R2 
    /*0001d744*/ STR         R3, [R6, R1] 
    /*0001d748*/ CMP         IP, R3 
    /*0001d74c*/ STR         R3, [R0, #696]              @ 0x2b8 
    /*0001d750*/ BNE         VI_COMM_GetUserPic_x1d6c4
    /*0001d754*/ ADD         R2, R2, #360                @ 0x168 
    /*0001d758*/ MOV         R1, R4 
    /*0001d75c*/ ADD         R0, R6, R2 
    /*0001d760*/ BL          0x000000000001D760          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001d764*/ STR         R4, [R5, #4] 
    /*0001d768*/ B           VI_COMM_GetUserPic_x1d6c4
    VI_COMM_GetUserPic_x1d76c:
    /*0001d76c*/ MOV         R1, #0 
    /*0001d770*/ LDR         R0, [PC, #40]               @ 0x000000000001d7a0 
    /*0001d774*/ BL          0x000000000001D774          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001d778*/ MOV         R3, #0 
    /*0001d77c*/ MVN         R0, #0 
    /*0001d780*/ STR         R3, [R6, #1412]             @ 0x584 
    /*0001d784*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_COMM_GetUserPic_x1d788:
    /*0001d788*/ MOV         R1, FP 
    /*0001d78c*/ BL          0x000000000001D78C          @ VI_COMM_ReleaseLastUsrPic [R_ARM_CALL: .text+0x1c374] 
    /*0001d790*/ MVN         R3, #0 
    /*0001d794*/ MOV         R0, R3 
    /*0001d798*/ STR         R3, [R6, R4, LSL #2] 
    /*0001d79c*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0001d7a0*/ ANDEQ       R1, R1, R0, ROR #23 
FUNC_END VI_COMM_GetUserPic


FUNC_BEGIN VI_UserPicUpdateAtherModTask
    /*0001d7a4*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001d7a8*/ SUB         SP, SP, #12 
    /*0001d7ac*/ MOV         R7, R1 
    /*0001d7b0*/ MOV         R4, R0 
    /*0001d7b4*/ BL          0x000000000001D7B4          @ VI_DRV_GetChnCoverExNum [R_ARM_CALL: .text+0x2d088] 
    /*0001d7b8*/ MOV         R1, R7 
    /*0001d7bc*/ MOV         R6, R0 
    /*0001d7c0*/ MOV         R0, R4 
    /*0001d7c4*/ BL          0x000000000001D7C4          @ VI_DRV_GetChnOsdNum [R_ARM_CALL: .text+0x2d244] 
    /*0001d7c8*/ MOV         R1, R7 
    /*0001d7cc*/ ADD         R2, SP, #4 
    /*0001d7d0*/ MOV         R5, R0 
    /*0001d7d4*/ MOV         R0, R4 
    /*0001d7d8*/ BL          0x000000000001D7D8          @ VI_DRV_GetChnRotationAttrUse [R_ARM_CALL: .text+0x2a5e4] 
    /*0001d7dc*/ ORR         R1, R6, R5 
    /*0001d7e0*/ ADDS        R6, R6, #0 
    /*0001d7e4*/ ADD         R4, R4, R7 
    /*0001d7e8*/ LDR         R2, [SP, #4] 
    /*0001d7ec*/ ADD         R0, R4, #115                @ 0x73 
    /*0001d7f0*/ MOVNE       R6, #1 
    /*0001d7f4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001d7f8*/ ADDS        R5, R5, #0 
    /*0001d7fc*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001d800*/ ADD         R4, R3, R4, LSL #4 
    /*0001d804*/ ADD         IP, R3, R0, LSL #4 
    /*0001d808*/ MOVNE       R5, #1 
    /*0001d80c*/ STR         R6, [R3, R0, LSL #4] 
    /*0001d810*/ ADDS        R3, R2, #0 
    /*0001d814*/ MOV         R0, #0 
    /*0001d818*/ STR         R5, [IP, #4] 
    /*0001d81c*/ MOVNE       R3, #1 
    /*0001d820*/ CMP         R2, #0 
    /*0001d824*/ CMPEQ       R1, #0 
    /*0001d828*/ STR         R3, [R4, #1848]             @ 0x738 
    /*0001d82c*/ MOVNE       R2, #0 
    /*0001d830*/ MOVEQ       R3, #1 
    /*0001d834*/ MOVEQ       R2, #1 
    /*0001d838*/ STREQ       R3, [R4, #1852]             @ 0x73c 
    /*0001d83c*/ STRNE       R2, [R4, #1852]             @ 0x73c 
    /*0001d840*/ ADD         SP, SP, #12 
    /*0001d844*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VI_UserPicUpdateAtherModTask


FUNC_BEGIN VI_COMM_ProcUserPic
    /*0001d848*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001d84c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001d850*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001d854*/ SUB         SP, SP, #24 
    /*0001d858*/ MOV         R4, R0 
    /*0001d85c*/ LDR         R5, [R3, R0, LSL #2] 
    /*0001d860*/ BL          0x000000000001D860          @ VI_DRV_PipeFrameRateCtl [R_ARM_CALL: .text+0x2beb4] 
    /*0001d864*/ CMP         R0, #0 
    /*0001d868*/ BEQ         VI_COMM_ProcUserPic_x1d908
    /*0001d86c*/ ADD         R1, SP, #16 
    /*0001d870*/ MOV         R0, R4 
    /*0001d874*/ BL          0x000000000001D874          @ VI_DRV_GetPipeRawSource [R_ARM_CALL: .text+0x303c8] 
    /*0001d878*/ LDR         R6, [SP, #16] 
    /*0001d87c*/ CMP         R6, #0 
    /*0001d880*/ BEQ         VI_COMM_ProcUserPic_x1d8c0
    /*0001d884*/ MOVW        R3, #1531                   @ 0x5fb 
    /*0001d888*/ STR         R6, [SP, #8] 
    /*0001d88c*/ STR         R3, [SP] 
    /*0001d890*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84d8] 
    /*0001d894*/ STR         R4, [SP, #4] 
    /*0001d898*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84d8] 
    /*0001d89c*/ LDR         R3, [PC, #368]              @ 0x000000000001da14 
    /*0001d8a0*/ MOV         R1, #16 
    /*0001d8a4*/ MOV         R0, #3 
    /*0001d8a8*/ MOVW        R5, #32771                  @ 0x8003 
    /*0001d8ac*/ BL          0x000000000001D8AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d8b0*/ MOVT        R5, #40976                  @ 0xa010 
    VI_COMM_ProcUserPic_x1d8b4:
    /*0001d8b4*/ MOV         R0, R5 
    /*0001d8b8*/ ADD         SP, SP, #24 
    /*0001d8bc*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_COMM_ProcUserPic_x1d8c0:
    /*0001d8c0*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001d8c4*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001d8c8*/ ADD         R1, SP, #20 
    /*0001d8cc*/ ADD         R0, R7, #1904               @ 0x770 
    /*0001d8d0*/ BL          0x000000000001D8D0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001d8d4*/ ADD         R5, R5, #36864              @ 0x9000 
    /*0001d8d8*/ MOV         R0, R4 
    /*0001d8dc*/ BL          0x000000000001D8DC          @ VI_UserPicUpdateOfflineTimeRefTimePts [R_ARM_CALL: .text+0x1b974] 
    /*0001d8e0*/ MOV         R0, R4 
    /*0001d8e4*/ BL          0x000000000001D8E4          @ VI_DRV_PrepareAllPhyChnCrop [R_ARM_CALL: .text+0x2b6e4] 
    /*0001d8e8*/ LDR         R3, [R5, #2228]             @ 0x8b4 
    /*0001d8ec*/ CMP         R3, #1 
    /*0001d8f0*/ MOVNE       R5, R6 
    /*0001d8f4*/ BEQ         VI_COMM_ProcUserPic_x1d938
    VI_COMM_ProcUserPic_x1d8f8:
    /*0001d8f8*/ ADD         R1, SP, #20 
    /*0001d8fc*/ LDR         R0, [PC, #276]              @ 0x000000000001da18 
    /*0001d900*/ BL          0x000000000001D900          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001d904*/ B           VI_COMM_ProcUserPic_x1d8b4
    VI_COMM_ProcUserPic_x1d908:
    /*0001d908*/ MOVW        R3, #1523                   @ 0x5f3 
    /*0001d90c*/ STR         R4, [SP, #4] 
    /*0001d910*/ STR         R3, [SP] 
    /*0001d914*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8488] 
    /*0001d918*/ LDR         R3, [PC, #244]              @ 0x000000000001da14 
    /*0001d91c*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8488] 
    /*0001d920*/ MOV         R1, #16 
    /*0001d924*/ MOV         R0, #3 
    /*0001d928*/ MOVW        R5, #32771                  @ 0x8003 
    /*0001d92c*/ BL          0x000000000001D92C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d930*/ MOVT        R5, #40976                  @ 0xa010 
    /*0001d934*/ B           VI_COMM_ProcUserPic_x1d8b4
    VI_COMM_ProcUserPic_x1d938:
    /*0001d938*/ MOV         R1, R6 
    /*0001d93c*/ MOV         R0, R4 
    /*0001d940*/ BL          0x000000000001D940          @ VI_DRV_PrepareChnCoverExInfo [R_ARM_CALL: .text+0x2d014] 
    /*0001d944*/ MOV         R1, R6 
    /*0001d948*/ MOV         R0, R4 
    /*0001d94c*/ BL          0x000000000001D94C          @ VI_DRV_PrepareChnOsdInfo [R_ARM_CALL: .text+0x2d1d0] 
    /*0001d950*/ MOV         R1, R6 
    /*0001d954*/ MOV         R0, R4 
    /*0001d958*/ BL          0x000000000001D958          @ VI_UserPicUpdateAtherModTask [R_ARM_CALL: .text+0x1d7a4] 
    /*0001d95c*/ MOV         R1, R6 
    /*0001d960*/ MOV         R0, R4 
    /*0001d964*/ BL          0x000000000001D964          @ VI_COMM_GetUserPic [R_ARM_CALL: .text+0x1d610] 
    /*0001d968*/ SUBS        R5, R0, #0 
    /*0001d96c*/ BEQ         VI_COMM_ProcUserPic_x1d980
    /*0001d970*/ MOV         R1, R6 
    /*0001d974*/ MOV         R0, R4 
    /*0001d978*/ BL          0x000000000001D978          @ VI_UpdateUserPic [R_ARM_CALL: .text+0x1d5f4] 
    /*0001d97c*/ B           VI_COMM_ProcUserPic_x1d8f8
    VI_COMM_ProcUserPic_x1d980:
    /*0001d980*/ ADD         R3, R4, #456                @ 0x1c8 
    /*0001d984*/ MOV         R8, #352                    @ 0x160 
    /*0001d988*/ MOV         R1, R5 
    /*0001d98c*/ MOV         R0, R4 
    /*0001d990*/ LDR         R3, [R7, R3, LSL #2] 
    /*0001d994*/ MUL         R8, R8, R3 
    /*0001d998*/ ADD         R3, R8, #360                @ 0x168 
    /*0001d99c*/ ADD         R8, R7, R8 
    /*0001d9a0*/ ADD         R7, R7, R3 
    /*0001d9a4*/ BL          0x000000000001D9A4          @ VI_COMM_GetUserPicTimeRef [R_ARM_CALL: .text+0x1b9cc] 
    /*0001d9a8*/ MOV         R1, R5 
    /*0001d9ac*/ STR         R0, [R8, #592]              @ 0x250 
    /*0001d9b0*/ MOV         R0, R4 
    /*0001d9b4*/ BL          0x000000000001D9B4          @ VI_COMM_GetUserPicTimePts [R_ARM_CALL: .text+0x1ba08] 
    /*0001d9b8*/ MOV         R1, R5 
    /*0001d9bc*/ STR         R5, [R8, #604]              @ 0x25c 
    /*0001d9c0*/ STR         R0, [R8, #600]              @ 0x258 
    /*0001d9c4*/ MOV         R0, R7 
    /*0001d9c8*/ BL          0x000000000001D9C8          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001d9cc*/ BL          0x000000000001D9CC          @ VI_IsVgsExist [R_ARM_CALL: .text+0x170e8] 
    /*0001d9d0*/ CMP         R0, #0 
    /*0001d9d4*/ BNE         VI_COMM_ProcUserPic_x1d9ec
    /*0001d9d8*/ MOV         R2, R7 
    /*0001d9dc*/ MOV         R0, R4 
    /*0001d9e0*/ MOV         R1, R5 
    /*0001d9e4*/ BL          0x000000000001D9E4          @ VI_COMM_SendUserPic [R_ARM_CALL: .text+0x1bc88] 
    /*0001d9e8*/ B           VI_COMM_ProcUserPic_x1d8f8
    VI_COMM_ProcUserPic_x1d9ec:
    /*0001d9ec*/ MOV         R1, R5 
    /*0001d9f0*/ MOV         R0, R4 
    /*0001d9f4*/ MOV         R2, R7 
    /*0001d9f8*/ BL          0x000000000001D9F8          @ VI_UserPicSubmitByPassJob2Vgs [R_ARM_CALL: .text+0x1cb18] 
    /*0001d9fc*/ SUBS        R5, R0, #0 
    /*0001da00*/ BEQ         VI_COMM_ProcUserPic_x1d8f8
    /*0001da04*/ MOV         R1, R6 
    /*0001da08*/ MOV         R0, R7 
    /*0001da0c*/ BL          0x000000000001DA0C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001da10*/ B           VI_COMM_ProcUserPic_x1d8f8
    /*0001da14*/ ANDEQ       R1, R0, R4, LSR R2 
    /*0001da18*/ ANDEQ       R1, R1, R8, ASR #27 
FUNC_END VI_COMM_ProcUserPic


FUNC_BEGIN VI_COMM_UserPicIrqRoute
    /*0001da1c*/ PUSH        {R4, LR} 
    /*0001da20*/ MOV         R4, R0 
    /*0001da24*/ BL          0x000000000001DA24          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*0001da28*/ BL          0x000000000001DA28          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*0001da2c*/ CMP         R0, #1 
    /*0001da30*/ MOV         R0, R4 
    /*0001da34*/ BEQ         VI_COMM_UserPicIrqRoute_x1da40
    VI_COMM_UserPicIrqRoute_x1da38:
    /*0001da38*/ POP         {R4, LR} 
    VI_COMM_UserPicIrqRoute_x1da3c:
    /*0001da3c*/ B           VI_COMM_UserPicIrqRoute_x1da3c@ VI_COMM_ProcUserPic [R_ARM_JUMP24: .text+0x1d848] 
    VI_COMM_UserPicIrqRoute_x1da40:
    /*0001da40*/ BL          0x000000000001DA40          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*0001da44*/ CMP         R4, R0 
    /*0001da48*/ BEQ         VI_COMM_UserPicIrqRoute_x1da38
    /*0001da4c*/ MOV         R0, #0 
    /*0001da50*/ POP         {R4, PC} 
FUNC_END VI_COMM_UserPicIrqRoute


FUNC_BEGIN VI_COMM_ProcNoInt
    /*0001da54*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001da58*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001da5c*/ PUSH        {R4, R5, LR} 
    /*0001da60*/ MOV         R4, R0 
    /*0001da64*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001da68*/ SUB         SP, SP, #20 
    /*0001da6c*/ CMP         R3, #0 
    /*0001da70*/ BEQ         VI_COMM_ProcNoInt_x1dab0
    /*0001da74*/ LDR         R3, [PC, #96]               @ 0x000000000001dadc 
    /*0001da78*/ MOV         R5, #176                    @ 0xb0 
    /*0001da7c*/ ADD         R1, SP, #12 
    /*0001da80*/ MLA         R5, R5, R0, R3 
    /*0001da84*/ MOV         R0, R5 
    /*0001da88*/ BL          0x000000000001DA88          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001da8c*/ MOV         R0, R4 
    /*0001da90*/ BL          0x000000000001DA90          @ VI_UpdateWorkingPipeChnMkpAttr [R_ARM_CALL: .text+0x2988] 
    /*0001da94*/ ADD         R1, SP, #12 
    /*0001da98*/ MOV         R0, R5 
    /*0001da9c*/ BL          0x000000000001DA9C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001daa0*/ MOV         R0, R4 
    /*0001daa4*/ BL          0x000000000001DAA4          @ VI_COMM_UserPicIrqRoute [R_ARM_CALL: .text+0x1da1c] 
    /*0001daa8*/ ADD         SP, SP, #20 
    /*0001daac*/ POP         {R4, R5, PC} 
    VI_COMM_ProcNoInt_x1dab0:
    /*0001dab0*/ STR         R0, [SP, #4] 
    /*0001dab4*/ MOV         R3, #240                    @ 0xf0 
    /*0001dab8*/ MOV         R1, #16 
    /*0001dabc*/ STR         R3, [SP] 
    /*0001dac0*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8534] 
    /*0001dac4*/ LDR         R3, [PC, #20]               @ 0x000000000001dae0 
    /*0001dac8*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8534] 
    /*0001dacc*/ MOV         R0, #3 
    /*0001dad0*/ BL          0x000000000001DAD0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001dad4*/ ADD         SP, SP, #20 
    /*0001dad8*/ POP         {R4, R5, PC} 
    /*0001dadc*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001dae0*/ ANDEQ       R1, R0, R8, ASR #4 
FUNC_END VI_COMM_ProcNoInt


FUNC_BEGIN VI_ProcNoIntDet
    /*0001dae4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001dae8*/ MOV         R4, #176                    @ 0xb0 
    /*0001daec*/ MUL         R4, R4, R0 
    /*0001daf0*/ MOV         R8, R0 
    /*0001daf4*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001daf8*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001dafc*/ SUB         SP, SP, #20 
    /*0001db00*/ MOVW        SL, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001db04*/ ADD         R0, R4, #140                @ 0x8c 
    /*0001db08*/ MOVT        SL, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001db0c*/ ADD         R9, R5, R0 
    /*0001db10*/ ADD         R1, SP, #12 
    /*0001db14*/ MOV         R0, R9 
    /*0001db18*/ BL          0x000000000001DB18          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001db1c*/ LDR         R0, [SL, R8, LSL #2] 
    /*0001db20*/ CMP         R0, #0 
    /*0001db24*/ BEQ         VI_ProcNoIntDet_x1dd50
    /*0001db28*/ LDR         R3, [R5, R4] 
    /*0001db2c*/ ADD         R7, R5, R4 
    /*0001db30*/ CMP         R3, #0 
    /*0001db34*/ BNE         VI_ProcNoIntDet_x1dbf8
    /*0001db38*/ LDR         R3, [R7, #4] 
    /*0001db3c*/ CMP         R3, #0 
    /*0001db40*/ BNE         VI_ProcNoIntDet_x1dbf8
    /*0001db44*/ ADD         R6, R0, #36864              @ 0x9000 
    /*0001db48*/ MOV         R3, #1 
    /*0001db4c*/ STR         R3, [R7, #16] 
    /*0001db50*/ LDR         R3, [R6, #3000]             @ 0xbb8 
    /*0001db54*/ CMP         R3, #0 
    /*0001db58*/ BEQ         VI_ProcNoIntDet_x1dcd8
    /*0001db5c*/ ADD         R0, R0, #39680              @ 0x9b00 
    /*0001db60*/ LDR         R1, [R6, #2984]             @ 0xba8 
    /*0001db64*/ STR         R8, [R6, #2996]             @ 0xbb4 
    /*0001db68*/ ADD         R0, R0, #172                @ 0xac 
    /*0001db6c*/ MOVW        R3, #0                      @ VI_ProcNoIntDet [R_ARM_MOVW_ABS_NC: .text+0x1dae4] 
    /*0001db70*/ MOVT        R3, #0                      @ VI_ProcNoIntDet [R_ARM_MOVT_ABS: .text+0x1dae4] 
    /*0001db74*/ STR         R3, [R6, #2992]             @ 0xbb0 
    /*0001db78*/ BL          0x000000000001DB78          @ osal_set_timer [R_ARM_CALL: +0x0] 
    /*0001db7c*/ ADD         R1, SP, #12 
    /*0001db80*/ MOV         R0, R9 
    /*0001db84*/ BL          0x000000000001DB84          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001db88*/ LDR         R2, [R6, #3008]             @ 0xbc0 
    /*0001db8c*/ LDR         R3, [R6, #3004]             @ 0xbbc 
    /*0001db90*/ CMN         R2, #1 
    /*0001db94*/ CMNNE       R3, #1 
    /*0001db98*/ MOVEQ       FP, #1 
    /*0001db9c*/ MOVNE       FP, #0 
    /*0001dba0*/ CMP         R2, R3 
    /*0001dba4*/ ORREQ       FP, FP, #1 
    /*0001dba8*/ CMP         FP, #0 
    /*0001dbac*/ BNE         VI_ProcNoIntDet_x1dc30
    /*0001dbb0*/ LDR         R1, [R6, #3012]             @ 0xbc4 
    /*0001dbb4*/ ADD         R3, R3, R1 
    /*0001dbb8*/ STR         R3, [R6, #3012]             @ 0xbc4 
    /*0001dbbc*/ CMP         R2, R3 
    /*0001dbc0*/ SUBLS       R3, R3, R2 
    /*0001dbc4*/ STRLS       R3, [R6, #3012]             @ 0xbc4 
    /*0001dbc8*/ BLS         VI_ProcNoIntDet_x1dc30
    /*0001dbcc*/ ADD         R1, SP, #12 
    /*0001dbd0*/ MOV         R0, R9 
    /*0001dbd4*/ BL          0x000000000001DBD4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001dbd8*/ ADD         R0, R4, #88                 @ 0x58 
    /*0001dbdc*/ ADD         R0, R5, R0 
    /*0001dbe0*/ STR         FP, [R7, #16] 
    /*0001dbe4*/ BL          0x000000000001DBE4          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0001dbe8*/ ADD         R1, SP, #12 
    /*0001dbec*/ MOV         R0, R9 
    /*0001dbf0*/ BL          0x000000000001DBF0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001dbf4*/ B           VI_ProcNoIntDet_x1dc28
    VI_ProcNoIntDet_x1dbf8:
    /*0001dbf8*/ ADD         R1, SP, #12 
    /*0001dbfc*/ MOV         R0, R9 
    /*0001dc00*/ BL          0x000000000001DC00          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001dc04*/ MOVW        R3, #330                    @ 0x14a 
    /*0001dc08*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8568] 
    /*0001dc0c*/ STR         R3, [SP] 
    /*0001dc10*/ STR         R8, [SP, #4] 
    /*0001dc14*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8568] 
    /*0001dc18*/ LDR         R3, [PC, #368]              @ 0x000000000001dd90 
    /*0001dc1c*/ MOV         R1, #16 
    /*0001dc20*/ MOV         R0, #7 
    /*0001dc24*/ BL          0x000000000001DC24          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_ProcNoIntDet_x1dc28:
    /*0001dc28*/ ADD         SP, SP, #20 
    /*0001dc2c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcNoIntDet_x1dc30:
    /*0001dc30*/ LDR         R3, [R6, #2972]             @ 0xb9c 
    /*0001dc34*/ CMP         R3, #0 
    /*0001dc38*/ BNE         VI_ProcNoIntDet_x1dc80
    /*0001dc3c*/ LDR         R3, [SL, R8, LSL #2] 
    /*0001dc40*/ CMP         R3, #0 
    /*0001dc44*/ ADDNE       R3, R3, #32768              @ 0x8000 
    /*0001dc48*/ LDRNE       R0, [R3, #3656]             @ 0xe48 
    /*0001dc4c*/ BEQ         VI_ProcNoIntDet_x1dd84
    VI_ProcNoIntDet_x1dc50:
    /*0001dc50*/ LDR         R3, [R6, #2976]             @ 0xba0 
    /*0001dc54*/ CMP         R3, R0 
    /*0001dc58*/ LDR         R3, [R6, #2972]             @ 0xb9c 
    /*0001dc5c*/ BEQ         VI_ProcNoIntDet_x1dd20
    /*0001dc60*/ MOV         R2, #1 
    /*0001dc64*/ ADDS        R3, R3, R2 
    /*0001dc68*/ AND         R3, R3, R2 
    /*0001dc6c*/ STR         R0, [R6, #2976]             @ 0xba0 
    /*0001dc70*/ RSBMI       R3, R3, #0 
    /*0001dc74*/ STR         R2, [R6, #2968]             @ 0xb98 
    /*0001dc78*/ STR         R3, [R6, #2972]             @ 0xb9c 
    /*0001dc7c*/ B           VI_ProcNoIntDet_x1dc9c
    VI_ProcNoIntDet_x1dc80:
    /*0001dc80*/ ADDS        R3, R3, #1 
    /*0001dc84*/ LDR         R2, [R6, #2968]             @ 0xb98 
    /*0001dc88*/ AND         R3, R3, #1 
    /*0001dc8c*/ RSBMI       R3, R3, #0 
    /*0001dc90*/ CMP         R2, #0 
    /*0001dc94*/ STR         R3, [R6, #2972]             @ 0xb9c 
    /*0001dc98*/ BEQ         VI_ProcNoIntDet_x1dd38
    VI_ProcNoIntDet_x1dc9c:
    /*0001dc9c*/ ADD         R1, SP, #12 
    /*0001dca0*/ MOV         R0, R9 
    /*0001dca4*/ BL          0x000000000001DCA4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001dca8*/ MOV         R3, #176                    @ 0xb0 
    /*0001dcac*/ MLA         R8, R3, R8, R5 
    /*0001dcb0*/ ADD         R0, R4, #88                 @ 0x58 
    /*0001dcb4*/ MOV         R3, #0 
    /*0001dcb8*/ ADD         R0, R5, R0 
    /*0001dcbc*/ STR         R3, [R8, #16] 
    /*0001dcc0*/ BL          0x000000000001DCC0          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0001dcc4*/ ADD         R1, SP, #12 
    /*0001dcc8*/ MOV         R0, R9 
    /*0001dccc*/ BL          0x000000000001DCCC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001dcd0*/ ADD         SP, SP, #20 
    /*0001dcd4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcNoIntDet_x1dcd8:
    /*0001dcd8*/ ADD         R0, R4, #88                 @ 0x58 
    /*0001dcdc*/ STR         R3, [R7, #16] 
    /*0001dce0*/ ADD         R0, R5, R0 
    /*0001dce4*/ BL          0x000000000001DCE4          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0001dce8*/ ADD         R1, SP, #12 
    /*0001dcec*/ MOV         R0, R9 
    /*0001dcf0*/ BL          0x000000000001DCF0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001dcf4*/ STR         R8, [SP, #4] 
    /*0001dcf8*/ MOVW        R3, #343                    @ 0x157 
    /*0001dcfc*/ MOV         R1, #16 
    /*0001dd00*/ STR         R3, [SP] 
    /*0001dd04*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x85b0] 
    /*0001dd08*/ LDR         R3, [PC, #128]              @ 0x000000000001dd90 
    /*0001dd0c*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x85b0] 
    /*0001dd10*/ MOV         R0, #3 
    /*0001dd14*/ BL          0x000000000001DD14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001dd18*/ ADD         SP, SP, #20 
    /*0001dd1c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_ProcNoIntDet_x1dd20:
    /*0001dd20*/ ADDS        R3, R3, #1 
    /*0001dd24*/ MOV         R2, #0 
    /*0001dd28*/ AND         R3, R3, #1 
    /*0001dd2c*/ STR         R2, [R6, #2968]             @ 0xb98 
    /*0001dd30*/ RSBMI       R3, R3, #0 
    /*0001dd34*/ STR         R3, [R6, #2972]             @ 0xb9c 
    VI_ProcNoIntDet_x1dd38:
    /*0001dd38*/ MOV         R0, R8 
    /*0001dd3c*/ BL          0x000000000001DD3C          @ VI_COMM_ProcNoInt [R_ARM_CALL: .text+0x1da54] 
    /*0001dd40*/ LDR         R3, [R6, #2980]             @ 0xba4 
    /*0001dd44*/ ADD         R3, R3, #1 
    /*0001dd48*/ STR         R3, [R6, #2980]             @ 0xba4 
    /*0001dd4c*/ B           VI_ProcNoIntDet_x1dc9c
    VI_ProcNoIntDet_x1dd50:
    /*0001dd50*/ ADD         R1, SP, #12 
    /*0001dd54*/ MOV         R0, R9 
    /*0001dd58*/ BL          0x000000000001DD58          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001dd5c*/ MOVW        R3, #322                    @ 0x142 
    /*0001dd60*/ STR         R8, [SP, #4] 
    /*0001dd64*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8534] 
    /*0001dd68*/ STR         R3, [SP] 
    /*0001dd6c*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8534] 
    /*0001dd70*/ LDR         R3, [PC, #24]               @ 0x000000000001dd90 
    /*0001dd74*/ MOV         R1, #16 
    /*0001dd78*/ MOV         R0, #3 
    /*0001dd7c*/ BL          0x000000000001DD7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001dd80*/ B           VI_ProcNoIntDet_x1dc28
    VI_ProcNoIntDet_x1dd84:
    /*0001dd84*/ MOV         R0, R8 
    /*0001dd88*/ BL          0x000000000001B938 
    /*0001dd8c*/ B           VI_ProcNoIntDet_x1dc50
    /*0001dd90*/ ANDEQ       R1, R0, IP, ASR R2 
FUNC_END VI_ProcNoIntDet


FUNC_BEGIN VI_IsUserPicEnable
    /*0001dd94*/ PUSH        {R4, R5, R6, LR} 
    /*0001dd98*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x11658] 
    /*0001dd9c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x11658] 
    /*0001dda0*/ SUB         SP, SP, #8 
    /*0001dda4*/ ADD         R6, R4, #1904               @ 0x770 
    /*0001dda8*/ ADD         R1, SP, #4 
    /*0001ddac*/ MOV         R5, R0 
    /*0001ddb0*/ ADD         R5, R5, #440                @ 0x1b8 
    /*0001ddb4*/ MOV         R0, R6 
    /*0001ddb8*/ BL          0x000000000001DDB8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001ddbc*/ MOV         R0, R6 
    /*0001ddc0*/ ADD         R1, SP, #4 
    /*0001ddc4*/ LDR         R4, [R4, R5, LSL #2] 
    /*0001ddc8*/ BL          0x000000000001DDC8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001ddcc*/ MOV         R0, R4 
    /*0001ddd0*/ ADD         SP, SP, #8 
    /*0001ddd4*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_IsUserPicEnable


FUNC_BEGIN VI_GetBeCfgForSyncStitchGrp
    /*0001ddd8*/ BX          LR 
FUNC_END VI_GetBeCfgForSyncStitchGrp


FUNC_BEGIN VI_PutBeCfgForSyncStitchGrp
    /*0001dddc*/ BX          LR 
FUNC_END VI_PutBeCfgForSyncStitchGrp


FUNC_BEGIN ViGetPipeStitchAttr
    /*0001dde0*/ MOV         R0, #0 
    /*0001dde4*/ BX          LR 
FUNC_END ViGetPipeStitchAttr


FUNC_BEGIN VI_GetStitchGrpAttr
    /*0001dde8*/ MOV         R0, #0 
    /*0001ddec*/ BX          LR 
FUNC_END VI_GetStitchGrpAttr


FUNC_BEGIN VI_SetStitchGrpAttr
    /*0001ddf0*/ MOV         R0, #0 
    /*0001ddf4*/ BX          LR 
FUNC_END VI_SetStitchGrpAttr


FUNC_BEGIN VI_LineModeSendPipeRawFromBE.part.0
    /*0001ddf8*/ LDR         R3, [PC, #372]              @ 0x000000000001df74 
    /*0001ddfc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001de00*/ MOV         R4, #176                    @ 0xb0 
    /*0001de04*/ MLA         R4, R4, R0, R3 
    /*0001de08*/ SUB         SP, SP, #360                @ 0x168 
    /*0001de0c*/ MOV         R5, R0 
    /*0001de10*/ MOV         R7, R1 
    /*0001de14*/ MOV         R6, R2 
    /*0001de18*/ MOV         R0, R4 
    /*0001de1c*/ BL          0x000000000001DE1C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001de20*/ CMP         R0, #0 
    /*0001de24*/ BNE         VI_LineModeSendPipeRawFromBE.part.0_x1dee0
    /*0001de28*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001de2c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001de30*/ LDR         R3, [R3, R5, LSL #2] 
    /*0001de34*/ CMP         R3, #0 
    /*0001de38*/ BEQ         VI_LineModeSendPipeRawFromBE.part.0_x1df38
    /*0001de3c*/ CMP         R6, #1 
    /*0001de40*/ BHI         VI_LineModeSendPipeRawFromBE.part.0_x1de98
    /*0001de44*/ MOV         R2, #336                    @ 0x150 
    /*0001de48*/ LDR         R1, [R7, #8] 
    /*0001de4c*/ ADD         R0, SP, #24 
    /*0001de50*/ BL          0x000000000001DE50          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0001de54*/ SUBS        R8, R0, #0 
    /*0001de58*/ BNE         VI_LineModeSendPipeRawFromBE.part.0_x1deec
    /*0001de5c*/ ADD         R1, SP, #24 
    /*0001de60*/ MOV         R0, R5 
    /*0001de64*/ BL          0x000000000001DE64          @ VI_DRV_CheckLineRawCapacityForBE [R_ARM_CALL: .text+0x2c1b0] 
    /*0001de68*/ MOV         R8, R0 
    /*0001de6c*/ MOV         R0, R4 
    /*0001de70*/ BL          0x000000000001DE70          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001de74*/ CMP         R8, #0 
    /*0001de78*/ BNE         VI_LineModeSendPipeRawFromBE.part.0_x1ded4
    /*0001de7c*/ MOV         R3, R6 
    /*0001de80*/ LDR         R2, [R7, #4] 
    /*0001de84*/ ADD         R1, SP, #24 
    /*0001de88*/ MOV         R0, R5 
    /*0001de8c*/ BL          0x000000000001DE8C          @ VI_LineModeSendPipeFrame [R_ARM_CALL: .text+0x47e0] 
    VI_LineModeSendPipeRawFromBE.part.0_x1de90:
    /*0001de90*/ ADD         SP, SP, #360                @ 0x168 
    /*0001de94*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_LineModeSendPipeRawFromBE.part.0_x1de98:
    /*0001de98*/ MOV         R0, R4 
    /*0001de9c*/ BL          0x000000000001DE9C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001dea0*/ MOV         R2, #129                    @ 0x81 
    /*0001dea4*/ STR         R5, [SP, #4] 
    /*0001dea8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x126c] 
    /*0001deac*/ STR         R2, [SP] 
    /*0001deb0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x126c] 
    /*0001deb4*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8620] 
    /*0001deb8*/ MOV         R1, #16 
    /*0001debc*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8620] 
    /*0001dec0*/ MOV         R0, #3 
    /*0001dec4*/ BL          0x000000000001DEC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001dec8*/ MOVW        R0, #32776                  @ 0x8008 
    /*0001decc*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001ded0*/ B           VI_LineModeSendPipeRawFromBE.part.0_x1de90
    VI_LineModeSendPipeRawFromBE.part.0_x1ded4:
    /*0001ded4*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001ded8*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001dedc*/ B           VI_LineModeSendPipeRawFromBE.part.0_x1de90
    VI_LineModeSendPipeRawFromBE.part.0_x1dee0:
    /*0001dee0*/ MOV         R0, #65024                  @ 0xfe00 
    /*0001dee4*/ MOVT        R0, #65535                  @ 0xffff 
    /*0001dee8*/ B           VI_LineModeSendPipeRawFromBE.part.0_x1de90
    VI_LineModeSendPipeRawFromBE.part.0_x1deec:
    /*0001deec*/ MOV         R0, R4 
    /*0001def0*/ BL          0x000000000001DEF0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001def4*/ LDRD        R0, [R7, #8] 
    /*0001def8*/ ADD         R3, SP, #24 
    /*0001defc*/ MOV         R2, #137                    @ 0x89 
    /*0001df00*/ STR         R3, [SP, #16] 
    /*0001df04*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x126c] 
    /*0001df08*/ STRD        R0, [SP, #8] 
    /*0001df0c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x126c] 
    /*0001df10*/ STR         R2, [SP] 
    /*0001df14*/ MOV         R1, #16 
    /*0001df18*/ STR         R8, [SP, #4] 
    /*0001df1c*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x86ac] 
    /*0001df20*/ MOV         R0, #3 
    /*0001df24*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x86ac] 
    /*0001df28*/ BL          0x000000000001DF28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001df2c*/ MOVW        R0, #32777                  @ 0x8009 
    /*0001df30*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001df34*/ B           VI_LineModeSendPipeRawFromBE.part.0_x1de90
    VI_LineModeSendPipeRawFromBE.part.0_x1df38:
    /*0001df38*/ MOV         R0, R4 
    /*0001df3c*/ BL          0x000000000001DF3C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001df40*/ MOV         R2, #122                    @ 0x7a 
    /*0001df44*/ STR         R5, [SP, #4] 
    /*0001df48*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x126c] 
    /*0001df4c*/ STR         R2, [SP] 
    /*0001df50*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x126c] 
    /*0001df54*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x85f0] 
    /*0001df58*/ MOV         R1, #16 
    /*0001df5c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x85f0] 
    /*0001df60*/ MOV         R0, #3 
    /*0001df64*/ BL          0x000000000001DF64          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001df68*/ MOVW        R0, #32773                  @ 0x8005 
    /*0001df6c*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001df70*/ B           VI_LineModeSendPipeRawFromBE.part.0_x1de90
    /*0001df74*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_LineModeSendPipeRawFromBE.part.0


FUNC_BEGIN VI_GetChnDepth
    /*0001df78*/ SUBS        R3, R1, #0 
    /*0001df7c*/ BEQ         VI_GetChnDepth_x1df94
    /*0001df80*/ SUB         R3, R3, #1 
    /*0001df84*/ CMP         R3, #7 
    /*0001df88*/ BLS         VI_GetChnDepth_x1df98
    /*0001df8c*/ MVN         R0, #0 
    /*0001df90*/ BX          LR 
    VI_GetChnDepth_x1df94:
    /*0001df94*/ B           VI_GetChnDepth_x1df94       @ VI_DRV_GetPhyChnDepth [R_ARM_JUMP24: .text+0x29d40] 
    VI_GetChnDepth_x1df98:
    /*0001df98*/ B           VI_GetChnDepth_x1df98       @ VI_DRV_GetExtChnDepth [R_ARM_JUMP24: .text+0x29d18] 
FUNC_END VI_GetChnDepth


FUNC_BEGIN VI_SendPipeYUV
    /*0001df9c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001dfa0*/ SUB         SP, SP, #16 
    /*0001dfa4*/ MOV         R5, R1 
    /*0001dfa8*/ MOV         R6, R2 
    /*0001dfac*/ MOV         R4, R0 
    /*0001dfb0*/ BL          0x000000000001DFB0          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0001dfb4*/ CMP         R0, #0 
    /*0001dfb8*/ BEQ         VI_SendPipeYUV_x1dfc4
    VI_SendPipeYUV_x1dfbc:
    /*0001dfbc*/ ADD         SP, SP, #16 
    /*0001dfc0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SendPipeYUV_x1dfc4:
    /*0001dfc4*/ MOV         R0, R5 
    /*0001dfc8*/ BL          0x000000000001DFC8          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001dfcc*/ CMP         R0, #0 
    /*0001dfd0*/ BNE         VI_SendPipeYUV_x1dfbc
    /*0001dfd4*/ LDR         R3, [PC, #312]              @ 0x000000000001e114 
    /*0001dfd8*/ MOV         R7, #176                    @ 0xb0 
    /*0001dfdc*/ MLA         R7, R7, R4, R3 
    /*0001dfe0*/ MOV         R0, R7 
    /*0001dfe4*/ BL          0x000000000001DFE4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001dfe8*/ CMP         R0, #0 
    /*0001dfec*/ BNE         VI_SendPipeYUV_x1e0b0
    /*0001dff0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001dff4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001dff8*/ LDR         R8, [R3, R4, LSL #2] 
    /*0001dffc*/ CMP         R8, #0 
    /*0001e000*/ BEQ         VI_SendPipeYUV_x1e0dc
    /*0001e004*/ ADD         R1, SP, #12 
    /*0001e008*/ MOV         R0, R4 
    /*0001e00c*/ BL          0x000000000001E00C          @ VI_DRV_GetPipeRawSource [R_ARM_CALL: .text+0x303c8] 
    /*0001e010*/ LDR         R3, [SP, #12] 
    /*0001e014*/ CMP         R3, #2 
    /*0001e018*/ BNE         VI_SendPipeYUV_x1e078
    /*0001e01c*/ LDR         R3, [R8] 
    /*0001e020*/ CMP         R3, #2 
    /*0001e024*/ BEQ         VI_SendPipeYUV_x1e0bc
    /*0001e028*/ MOV         R1, R5 
    /*0001e02c*/ MOV         R0, R4 
    /*0001e030*/ BL          0x000000000001E030          @ VI_DRV_CheckYuvCapacity [R_ARM_CALL: .text+0x2bf14] 
    /*0001e034*/ MOV         R8, R0 
    /*0001e038*/ MOV         R0, R7 
    /*0001e03c*/ BL          0x000000000001E03C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001e040*/ CMP         R8, #0 
    /*0001e044*/ BNE         VI_SendPipeYUV_x1e06c
    /*0001e048*/ MOV         R0, R4 
    /*0001e04c*/ BL          0x000000000001E04C          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0001e050*/ MOV         R2, R6 
    /*0001e054*/ MOV         R1, R5 
    /*0001e058*/ MOV         R3, R0 
    /*0001e05c*/ MOV         R0, R4 
    /*0001e060*/ BL          0x000000000001E060          @ VI_LineModeSendPipeFrame [R_ARM_CALL: .text+0x47e0] 
    /*0001e064*/ ADD         SP, SP, #16 
    /*0001e068*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SendPipeYUV_x1e06c:
    /*0001e06c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001e070*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001e074*/ B           VI_SendPipeYUV_x1dfbc
    VI_SendPipeYUV_x1e078:
    /*0001e078*/ MOV         R0, R7 
    /*0001e07c*/ BL          0x000000000001E07C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001e080*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8714] 
    /*0001e084*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8714] 
    /*0001e088*/ MOV         R3, #81                     @ 0x51 
    /*0001e08c*/ STR         R4, [SP, #4] 
    /*0001e090*/ STR         R3, [SP] 
    VI_SendPipeYUV_x1e094:
    /*0001e094*/ LDR         R3, [PC, #124]              @ 0x000000000001e118 
    /*0001e098*/ MOV         R1, #16 
    /*0001e09c*/ MOV         R0, #3 
    /*0001e0a0*/ BL          0x000000000001E0A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e0a4*/ MOVW        R0, #32776                  @ 0x8008 
    /*0001e0a8*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001e0ac*/ B           VI_SendPipeYUV_x1dfbc
    VI_SendPipeYUV_x1e0b0:
    /*0001e0b0*/ MOV         R0, #65024                  @ 0xfe00 
    /*0001e0b4*/ MOVT        R0, #65535                  @ 0xffff 
    /*0001e0b8*/ B           VI_SendPipeYUV_x1dfbc
    VI_SendPipeYUV_x1e0bc:
    /*0001e0bc*/ MOV         R0, R7 
    /*0001e0c0*/ BL          0x000000000001E0C0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001e0c4*/ MOV         R3, #88                     @ 0x58 
    /*0001e0c8*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8788] 
    /*0001e0cc*/ STR         R4, [SP, #4] 
    /*0001e0d0*/ STR         R3, [SP] 
    /*0001e0d4*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8788] 
    /*0001e0d8*/ B           VI_SendPipeYUV_x1e094
    VI_SendPipeYUV_x1e0dc:
    /*0001e0dc*/ MOV         R0, R7 
    /*0001e0e0*/ BL          0x000000000001E0E0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001e0e4*/ MOV         R3, #72                     @ 0x48 
    /*0001e0e8*/ STR         R4, [SP, #4] 
    /*0001e0ec*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x85f0] 
    /*0001e0f0*/ STR         R3, [SP] 
    /*0001e0f4*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x85f0] 
    /*0001e0f8*/ LDR         R3, [PC, #24]               @ 0x000000000001e118 
    /*0001e0fc*/ MOV         R1, #16 
    /*0001e100*/ MOV         R0, #3 
    /*0001e104*/ BL          0x000000000001E104          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e108*/ MOVW        R0, #32773                  @ 0x8005 
    /*0001e10c*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001e110*/ B           VI_SendPipeYUV_x1dfbc
    /*0001e114*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001e118*/ ANDEQ       R1, R0, IP, LSL #5 
FUNC_END VI_SendPipeYUV


FUNC_BEGIN VI_LineModeSendPipeRawFromBE
    /*0001e11c*/ PUSH        {R4, R5, R6, LR} 
    /*0001e120*/ MOV         R5, R1 
    /*0001e124*/ MOV         R6, R2 
    /*0001e128*/ MOV         R4, R0 
    /*0001e12c*/ BL          0x000000000001E12C          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0001e130*/ CMP         R0, #0 
    /*0001e134*/ POPNE       {R4, R5, R6, PC} 
    /*0001e138*/ MOV         R2, R6 
    /*0001e13c*/ MOV         R1, R5 
    /*0001e140*/ MOV         R0, R4 
    /*0001e144*/ POP         {R4, R5, R6, LR} 
    /*0001e148*/ B           0x000000000001DDF8 
FUNC_END VI_LineModeSendPipeRawFromBE


FUNC_BEGIN VI_WDRModeSendPipeRawFromBE
    /*0001e14c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001e150*/ SUB         SP, SP, #92                 @ 0x5c 
    /*0001e154*/ MOV         R8, R1 
    /*0001e158*/ MOV         R9, R2 
    /*0001e15c*/ MOV         R4, R0 
    /*0001e160*/ BL          0x000000000001E160          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0001e164*/ SUBS        R6, R0, #0 
    /*0001e168*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e178
    VI_WDRModeSendPipeRawFromBE_x1e16c:
    /*0001e16c*/ MOV         R0, R6 
    /*0001e170*/ ADD         SP, SP, #92                 @ 0x5c 
    /*0001e174*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_WDRModeSendPipeRawFromBE_x1e178:
    /*0001e178*/ MOV         R6, #176                    @ 0xb0 
    /*0001e17c*/ MOVW        FP, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001e180*/ MUL         R6, R6, R4 
    /*0001e184*/ MOVT        FP, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001e188*/ ADD         R5, R6, #100                @ 0x64 
    /*0001e18c*/ ADD         R5, FP, R5 
    /*0001e190*/ MOV         R0, R5 
    /*0001e194*/ BL          0x000000000001E194          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001e198*/ SUBS        R3, R0, #0 
    /*0001e19c*/ STR         R3, [SP, #32] 
    /*0001e1a0*/ BNE         VI_WDRModeSendPipeRawFromBE_x1e404
    /*0001e1a4*/ MOVW        R7, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001e1a8*/ MOVT        R7, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001e1ac*/ LDR         SL, [R7, R4, LSL #2] 
    /*0001e1b0*/ CMP         SL, #0 
    /*0001e1b4*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e318
    /*0001e1b8*/ CMP         R9, #1 
    /*0001e1bc*/ BLS         VI_WDRModeSendPipeRawFromBE_x1e200
    /*0001e1c0*/ MOV         R3, #185                    @ 0xb9 
    /*0001e1c4*/ STR         R4, [SP, #4] 
    /*0001e1c8*/ STR         R3, [SP] 
    /*0001e1cc*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8620] 
    /*0001e1d0*/ LDR         R3, [PC, #1680]             @ 0x000000000001e868 
    /*0001e1d4*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8620] 
    /*0001e1d8*/ MOV         R1, #16 
    /*0001e1dc*/ MOV         R0, #3 
    /*0001e1e0*/ BL          0x000000000001E1E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e1e4*/ MOVW        R6, #32776                  @ 0x8008 
    /*0001e1e8*/ MOVT        R6, #40976                  @ 0xa010 
    VI_WDRModeSendPipeRawFromBE_x1e1ec:
    /*0001e1ec*/ MOV         R0, R5 
    /*0001e1f0*/ BL          0x000000000001E1F0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001e1f4*/ MOV         R0, R6 
    /*0001e1f8*/ ADD         SP, SP, #92                 @ 0x5c 
    /*0001e1fc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_WDRModeSendPipeRawFromBE_x1e200:
    /*0001e200*/ LDR         R3, [R8, #4] 
    /*0001e204*/ CMN         R3, #1 
    /*0001e208*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001e20c*/ BLT         VI_WDRModeSendPipeRawFromBE_x1e348
    /*0001e210*/ LDR         R2, [R8] 
    /*0001e214*/ CMP         R2, #1 
    /*0001e218*/ BLS         VI_WDRModeSendPipeRawFromBE_x1e37c
    /*0001e21c*/ LDR         R2, [FP, R6] 
    /*0001e220*/ CMP         R2, #1 
    /*0001e224*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e30c
    /*0001e228*/ ADD         R2, SL, #36864              @ 0x9000 
    /*0001e22c*/ LDR         R2, [R2, #1480]             @ 0x5c8 
    /*0001e230*/ CMP         R2, #0 
    /*0001e234*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e2dc
    /*0001e238*/ MOV         R0, #2 
    /*0001e23c*/ BL          0x000000000001E23C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001e240*/ CMP         R0, #0 
    /*0001e244*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e460
    /*0001e248*/ MOV         R1, R8 
    /*0001e24c*/ MOV         R0, R4 
    /*0001e250*/ BL          0x000000000001E250          @ VI_DRV_CheckSendRawInWdrMode [R_ARM_CALL: .text+0x333ec] 
    /*0001e254*/ CMP         R0, #0 
    /*0001e258*/ BNE         VI_WDRModeSendPipeRawFromBE_x1e2d0
    /*0001e25c*/ LDR         R2, [R8] 
    /*0001e260*/ CMP         R2, #0 
    /*0001e264*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e2b8
    /*0001e268*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x12e30] 
    /*0001e26c*/ MOV         R2, #336                    @ 0x150 
    /*0001e270*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x12e30] 
    /*0001e274*/ LDR         R1, [R8, #8] 
    /*0001e278*/ BL          0x000000000001E278          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0001e27c*/ CMP         R0, #0 
    /*0001e280*/ BNE         VI_WDRModeSendPipeRawFromBE_x1e410
    /*0001e284*/ LDR         R2, [R8] 
    /*0001e288*/ CMP         R2, #1 
    /*0001e28c*/ BLS         VI_WDRModeSendPipeRawFromBE_x1e2b8
    /*0001e290*/ MOV         R2, #336                    @ 0x150 
    /*0001e294*/ LDR         R1, [R8, #16] 
    /*0001e298*/ LDR         R0, [PC, #1484]             @ 0x000000000001e86c 
    /*0001e29c*/ BL          0x000000000001E29C          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0001e2a0*/ CMP         R0, #0 
    /*0001e2a4*/ MOVNE       R3, #1 
    /*0001e2a8*/ STRNE       R3, [SP, #32] 
    /*0001e2ac*/ LDRNE       R3, [PC, #1464]             @ 0x000000000001e86c 
    /*0001e2b0*/ BNE         VI_WDRModeSendPipeRawFromBE_x1e418
    /*0001e2b4*/ LDR         R2, [R8] 
    VI_WDRModeSendPipeRawFromBE_x1e2b8:
    /*0001e2b8*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x12e30] 
    /*0001e2bc*/ MOV         R0, R4 
    /*0001e2c0*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x12e30] 
    /*0001e2c4*/ BL          0x000000000001E2C4          @ VI_DRV_CheckWdrRawCapacity [R_ARM_CALL: .text+0x2c43c] 
    /*0001e2c8*/ SUBS        R2, R0, #0 
    /*0001e2cc*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e490
    VI_WDRModeSendPipeRawFromBE_x1e2d0:
    /*0001e2d0*/ MOVW        R6, #32771                  @ 0x8003 
    /*0001e2d4*/ MOVT        R6, #40976                  @ 0xa010 
    /*0001e2d8*/ B           VI_WDRModeSendPipeRawFromBE_x1e1ec
    VI_WDRModeSendPipeRawFromBE_x1e2dc:
    /*0001e2dc*/ MOV         R3, #212                    @ 0xd4 
    /*0001e2e0*/ STR         R4, [SP, #4] 
    /*0001e2e4*/ STR         R3, [SP] 
    /*0001e2e8*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x886c] 
    /*0001e2ec*/ LDR         R3, [PC, #1396]             @ 0x000000000001e868 
    /*0001e2f0*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x886c] 
    /*0001e2f4*/ MOV         R1, #16 
    /*0001e2f8*/ MOV         R0, #3 
    /*0001e2fc*/ MOVW        R6, #32784                  @ 0x8010 
    /*0001e300*/ BL          0x000000000001E300          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e304*/ MOVT        R6, #40976                  @ 0xa010 
    /*0001e308*/ B           VI_WDRModeSendPipeRawFromBE_x1e1ec
    VI_WDRModeSendPipeRawFromBE_x1e30c:
    /*0001e30c*/ MOVW        R6, #32786                  @ 0x8012 
    /*0001e310*/ MOVT        R6, #40976                  @ 0xa010 
    /*0001e314*/ B           VI_WDRModeSendPipeRawFromBE_x1e1ec
    VI_WDRModeSendPipeRawFromBE_x1e318:
    /*0001e318*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x85f0] 
    /*0001e31c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x85f0] 
    /*0001e320*/ MOV         R3, #178                    @ 0xb2 
    /*0001e324*/ STR         R4, [SP, #4] 
    /*0001e328*/ STR         R3, [SP] 
    VI_WDRModeSendPipeRawFromBE_x1e32c:
    /*0001e32c*/ LDR         R3, [PC, #1332]             @ 0x000000000001e868 
    /*0001e330*/ MOV         R1, #16 
    /*0001e334*/ MOV         R0, #3 
    /*0001e338*/ MOVW        R6, #32773                  @ 0x8005 
    /*0001e33c*/ BL          0x000000000001E33C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e340*/ MOVT        R6, #40976                  @ 0xa010 
    /*0001e344*/ B           VI_WDRModeSendPipeRawFromBE_x1e1ec
    VI_WDRModeSendPipeRawFromBE_x1e348:
    /*0001e348*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x87f0] 
    /*0001e34c*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x87f0] 
    /*0001e350*/ STR         R3, [SP, #8] 
    /*0001e354*/ MOV         R3, #192                    @ 0xc0 
    /*0001e358*/ STR         R4, [SP, #4] 
    /*0001e35c*/ STR         R3, [SP] 
    VI_WDRModeSendPipeRawFromBE_x1e360:
    /*0001e360*/ LDR         R3, [PC, #1280]             @ 0x000000000001e868 
    /*0001e364*/ MOV         R1, #16 
    /*0001e368*/ MOV         R0, #3 
    /*0001e36c*/ MOVW        R6, #32771                  @ 0x8003 
    /*0001e370*/ BL          0x000000000001E370          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e374*/ MOVT        R6, #40976                  @ 0xa010 
    /*0001e378*/ B           VI_WDRModeSendPipeRawFromBE_x1e1ec
    VI_WDRModeSendPipeRawFromBE_x1e37c:
    /*0001e37c*/ STR         R2, [SP, #8] 
    /*0001e380*/ MOV         R3, #199                    @ 0xc7 
    /*0001e384*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8828] 
    /*0001e388*/ STR         R4, [SP, #4] 
    /*0001e38c*/ STR         R3, [SP] 
    /*0001e390*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8828] 
    /*0001e394*/ B           VI_WDRModeSendPipeRawFromBE_x1e360
    VI_WDRModeSendPipeRawFromBE_x1e398:
    /*0001e398*/ MOV         R0, R5 
    /*0001e39c*/ ADD         R6, R6, #76                 @ 0x4c 
    /*0001e3a0*/ BL          0x000000000001E3A0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001e3a4*/ MOVW        R3, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x419c] 
    /*0001e3a8*/ ADD         R2, SP, #68                 @ 0x44 
    /*0001e3ac*/ MOVT        R3, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x419c] 
    /*0001e3b0*/ ADD         R6, FP, R6 
    /*0001e3b4*/ STR         R4, [SP, #36]               @ 0x24 
    /*0001e3b8*/ MOV         FP, R2 
    /*0001e3bc*/ MOV         R4, R3 
    /*0001e3c0*/ B           VI_WDRModeSendPipeRawFromBE_x1e3d0
    VI_WDRModeSendPipeRawFromBE_x1e3c4:
    /*0001e3c4*/ BL          0x000000000001E3C4          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0001e3c8*/ CMP         R0, #0 
    /*0001e3cc*/ BLT         VI_WDRModeSendPipeRawFromBE_x1e680
    VI_WDRModeSendPipeRawFromBE_x1e3d0:
    /*0001e3d0*/ MOV         R0, FP 
    /*0001e3d4*/ BL          0x000000000001E3D4          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0001e3d8*/ MOV         R3, #100                    @ 0x64 
    /*0001e3dc*/ MOV         R2, FP 
    /*0001e3e0*/ MOV         R1, R4 
    /*0001e3e4*/ CMP         R0, #0 
    /*0001e3e8*/ MOV         R0, R6 
    /*0001e3ec*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e3c4
    /*0001e3f0*/ MOV         R0, R5 
    /*0001e3f4*/ LDR         R4, [SP, #36]               @ 0x24 
    /*0001e3f8*/ BL          0x000000000001E3F8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001e3fc*/ CMP         R0, #0 
    /*0001e400*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e5a0
    VI_WDRModeSendPipeRawFromBE_x1e404:
    /*0001e404*/ MOV         R6, #65024                  @ 0xfe00 
    /*0001e408*/ MOVT        R6, #65535                  @ 0xffff 
    /*0001e40c*/ B           VI_WDRModeSendPipeRawFromBE_x1e16c
    VI_WDRModeSendPipeRawFromBE_x1e410:
    /*0001e410*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x12e30] 
    /*0001e414*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x12e30] 
    VI_WDRModeSendPipeRawFromBE_x1e418:
    /*0001e418*/ LDR         IP, [SP, #32] 
    /*0001e41c*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x88f8] 
    /*0001e420*/ STR         R3, [SP, #24] 
    /*0001e424*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x88f8] 
    /*0001e428*/ MOV         R3, #236                    @ 0xec 
    /*0001e42c*/ MOV         R1, #16 
    /*0001e430*/ ADD         R8, R8, IP, LSL #3 
    /*0001e434*/ LDRD        R6, [R8, #8] 
    /*0001e438*/ STR         R0, [SP, #8] 
    /*0001e43c*/ MOV         R0, #3 
    /*0001e440*/ STR         R3, [SP] 
    /*0001e444*/ STRD        R6, [SP, #16] 
    /*0001e448*/ MOVW        R6, #32777                  @ 0x8009 
    /*0001e44c*/ STR         IP, [SP, #4] 
    /*0001e450*/ MOVT        R6, #40976                  @ 0xa010 
    /*0001e454*/ LDR         R3, [PC, #1036]             @ 0x000000000001e868 
    /*0001e458*/ BL          0x000000000001E458          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e45c*/ B           VI_WDRModeSendPipeRawFromBE_x1e1ec
    VI_WDRModeSendPipeRawFromBE_x1e460:
    /*0001e460*/ MOV         R3, #219                    @ 0xdb 
    /*0001e464*/ STR         R4, [SP, #4] 
    /*0001e468*/ STR         R3, [SP] 
    /*0001e46c*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x88ac] 
    /*0001e470*/ LDR         R3, [PC, #1008]             @ 0x000000000001e868 
    /*0001e474*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x88ac] 
    /*0001e478*/ MOV         R1, #16 
    /*0001e47c*/ MOV         R0, #3 
    /*0001e480*/ MOVW        R6, #32777                  @ 0x8009 
    /*0001e484*/ BL          0x000000000001E484          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e488*/ MOVT        R6, #40976                  @ 0xa010 
    /*0001e48c*/ B           VI_WDRModeSendPipeRawFromBE_x1e1ec
    VI_WDRModeSendPipeRawFromBE_x1e490:
    /*0001e490*/ ADD         R1, R6, #140                @ 0x8c 
    /*0001e494*/ STR         R2, [SP, #48]               @ 0x30 
    /*0001e498*/ ADD         R3, FP, R1 
    /*0001e49c*/ ADD         R1, SP, #64                 @ 0x40 
    /*0001e4a0*/ STR         R3, [SP, #40]               @ 0x28 
    /*0001e4a4*/ MOV         R0, R3 
    /*0001e4a8*/ BL          0x000000000001E4A8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001e4ac*/ MOV         IP, #176                    @ 0xb0 
    /*0001e4b0*/ MLA         IP, IP, R4, FP 
    /*0001e4b4*/ ADD         R1, SP, #64                 @ 0x40 
    /*0001e4b8*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0001e4bc*/ LDR         R3, [IP, #24] 
    /*0001e4c0*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0001e4c4*/ BL          0x000000000001E4C4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001e4c8*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0001e4cc*/ MOV         R1, #4 
    /*0001e4d0*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0001e4d4*/ CMP         R2, #0 
    /*0001e4d8*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0001e4dc*/ STR         R4, [SP, #68]               @ 0x44 
    /*0001e4e0*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0001e4e4*/ STR         R2, [SP, #72]               @ 0x48 
    /*0001e4e8*/ STR         R2, [SP, #80]               @ 0x50 
    /*0001e4ec*/ STR         R1, [SP, #84]               @ 0x54 
    /*0001e4f0*/ BLE         VI_WDRModeSendPipeRawFromBE_x1e634
    /*0001e4f4*/ MOV         R0, R5 
    /*0001e4f8*/ ADD         R3, SP, #68                 @ 0x44 
    /*0001e4fc*/ ADD         R6, R6, #76                 @ 0x4c 
    /*0001e500*/ STR         R3, [SP, #48]               @ 0x30 
    /*0001e504*/ BL          0x000000000001E504          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001e508*/ LDR         R0, [SP, #48]               @ 0x30 
    /*0001e50c*/ MOVW        R1, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x419c] 
    /*0001e510*/ ADD         R6, FP, R6 
    /*0001e514*/ MOVT        R1, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x419c] 
    /*0001e518*/ STR         R1, [SP, #60]               @ 0x3c 
    /*0001e51c*/ BL          0x000000000001E51C          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0001e520*/ STR         R5, [SP, #52]               @ 0x34 
    /*0001e524*/ STR         SL, [SP, #56]               @ 0x38 
    /*0001e528*/ LDR         R5, [SP, #36]               @ 0x24 
    /*0001e52c*/ LDR         SL, [SP, #48]               @ 0x30 
    /*0001e530*/ LDR         FP, [SP, #60]               @ 0x3c 
    /*0001e534*/ B           VI_WDRModeSendPipeRawFromBE_x1e54c
    VI_WDRModeSendPipeRawFromBE_x1e538:
    /*0001e538*/ BL          0x000000000001E538          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0001e53c*/ ADD         R3, R0, #512                @ 0x200 
    /*0001e540*/ MOV         R5, R0 
    /*0001e544*/ BICS        R3, R3, #512                @ 0x200 
    /*0001e548*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e69c
    VI_WDRModeSendPipeRawFromBE_x1e54c:
    /*0001e54c*/ MOV         R0, SL 
    /*0001e550*/ BL          0x000000000001E550          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0001e554*/ MOV         R3, R5 
    /*0001e558*/ MOV         R2, SL 
    /*0001e55c*/ MOV         R1, FP 
    /*0001e560*/ CMP         R0, #0 
    /*0001e564*/ MOV         R0, R6 
    /*0001e568*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e538
    /*0001e56c*/ MOV         R0, R5 
    /*0001e570*/ LDR         SL, [SP, #56]               @ 0x38 
    /*0001e574*/ LDR         R5, [SP, #52]               @ 0x34 
    /*0001e578*/ BL          0x000000000001E578          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*0001e57c*/ STR         R0, [SP, #36]               @ 0x24 
    VI_WDRModeSendPipeRawFromBE_x1e580:
    /*0001e580*/ MOV         R0, R5 
    /*0001e584*/ BL          0x000000000001E584          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001e588*/ CMP         R0, #0 
    /*0001e58c*/ BNE         VI_WDRModeSendPipeRawFromBE_x1e404
    /*0001e590*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001e594*/ CMP         R3, #0 
    /*0001e598*/ BLT         VI_WDRModeSendPipeRawFromBE_x1e690
    /*0001e59c*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e6ac
    VI_WDRModeSendPipeRawFromBE_x1e5a0:
    /*0001e5a0*/ LDR         R3, [SP, #80]               @ 0x50 
    /*0001e5a4*/ CMP         R3, #0 
    /*0001e5a8*/ MOVWEQ      R6, #32784                  @ 0x8010 
    /*0001e5ac*/ MOVTEQ      R6, #40976                  @ 0xa010 
    /*0001e5b0*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e1ec
    VI_WDRModeSendPipeRawFromBE_x1e5b4:
    /*0001e5b4*/ LDR         R3, [R7, R4, LSL #2] 
    /*0001e5b8*/ CMP         R3, #0 
    /*0001e5bc*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e6dc
    /*0001e5c0*/ ADD         R1, SP, #64                 @ 0x40 
    /*0001e5c4*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0001e5c8*/ BL          0x000000000001E5C8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001e5cc*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0001e5d0*/ MOV         R0, R4 
    /*0001e5d4*/ BL          0x000000000001E5D4          @ VI_AbnormalVerifyAfterWait [R_ARM_CALL: .text+0x4208] 
    /*0001e5d8*/ SUBS        R6, R0, #0 
    /*0001e5dc*/ BNE         VI_WDRModeSendPipeRawFromBE_x1e624
    /*0001e5e0*/ ADD         R3, SL, #40                 @ 0x28 
    /*0001e5e4*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001e5e8*/ MOV         R0, R3 
    /*0001e5ec*/ BL          0x000000000001E5EC          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001e5f0*/ CMP         R0, #2 
    /*0001e5f4*/ BLS         VI_WDRModeSendPipeRawFromBE_x1e6f4
    /*0001e5f8*/ MOVW        R3, #355                    @ 0x163 
    /*0001e5fc*/ STR         R4, [SP, #4] 
    /*0001e600*/ STR         R3, [SP] 
    /*0001e604*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a28] 
    /*0001e608*/ LDR         R3, [PC, #600]              @ 0x000000000001e868 
    /*0001e60c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a28] 
    /*0001e610*/ MOV         R1, #16 
    /*0001e614*/ MOV         R0, #3 
    /*0001e618*/ BL          0x000000000001E618          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e61c*/ MOVW        R6, #32783                  @ 0x800f 
    /*0001e620*/ MOVT        R6, #40976                  @ 0xa010 
    VI_WDRModeSendPipeRawFromBE_x1e624:
    /*0001e624*/ ADD         R1, SP, #64                 @ 0x40 
    /*0001e628*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0001e62c*/ BL          0x000000000001E62C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001e630*/ B           VI_WDRModeSendPipeRawFromBE_x1e1ec
    VI_WDRModeSendPipeRawFromBE_x1e634:
    /*0001e634*/ BNE         VI_WDRModeSendPipeRawFromBE_x1e398
    /*0001e638*/ ADD         R0, SL, #40                 @ 0x28 
    /*0001e63c*/ BL          0x000000000001E63C          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001e640*/ CMP         R0, #2 
    /*0001e644*/ BLS         VI_WDRModeSendPipeRawFromBE_x1e5b4
    /*0001e648*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001e64c*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89a4] 
    /*0001e650*/ STR         R4, [SP, #4] 
    /*0001e654*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89a4] 
    /*0001e658*/ MOV         R1, #16 
    /*0001e65c*/ MOV         R0, #3 
    /*0001e660*/ STR         R3, [SP, #8] 
    /*0001e664*/ MOV         R3, #300                    @ 0x12c 
    /*0001e668*/ STR         R3, [SP] 
    /*0001e66c*/ MOVW        R6, #32783                  @ 0x800f 
    /*0001e670*/ LDR         R3, [PC, #496]              @ 0x000000000001e868 
    /*0001e674*/ MOVT        R6, #40976                  @ 0xa010 
    /*0001e678*/ BL          0x000000000001E678          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e67c*/ B           VI_WDRModeSendPipeRawFromBE_x1e1ec
    VI_WDRModeSendPipeRawFromBE_x1e680:
    /*0001e680*/ MOV         R0, R5 
    /*0001e684*/ BL          0x000000000001E684          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001e688*/ CMP         R0, #0 
    /*0001e68c*/ BNE         VI_WDRModeSendPipeRawFromBE_x1e404
    VI_WDRModeSendPipeRawFromBE_x1e690:
    /*0001e690*/ MOV         R6, #65024                  @ 0xfe00 
    /*0001e694*/ MOVT        R6, #65535                  @ 0xffff 
    /*0001e698*/ B           VI_WDRModeSendPipeRawFromBE_x1e1ec
    VI_WDRModeSendPipeRawFromBE_x1e69c:
    /*0001e69c*/ LDR         SL, [SP, #56]               @ 0x38 
    /*0001e6a0*/ STR         R0, [SP, #36]               @ 0x24 
    /*0001e6a4*/ LDR         R5, [SP, #52]               @ 0x34 
    /*0001e6a8*/ B           VI_WDRModeSendPipeRawFromBE_x1e580
    VI_WDRModeSendPipeRawFromBE_x1e6ac:
    /*0001e6ac*/ MOVW        R3, #279                    @ 0x117 
    /*0001e6b0*/ STR         R4, [SP, #4] 
    /*0001e6b4*/ STR         R3, [SP] 
    /*0001e6b8*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8964] 
    /*0001e6bc*/ LDR         R3, [PC, #420]              @ 0x000000000001e868 
    /*0001e6c0*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8964] 
    /*0001e6c4*/ MOV         R1, #16 
    /*0001e6c8*/ MOV         R0, #3 
    /*0001e6cc*/ MOVW        R6, #32783                  @ 0x800f 
    /*0001e6d0*/ BL          0x000000000001E6D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e6d4*/ MOVT        R6, #40976                  @ 0xa010 
    /*0001e6d8*/ B           VI_WDRModeSendPipeRawFromBE_x1e1ec
    VI_WDRModeSendPipeRawFromBE_x1e6dc:
    /*0001e6dc*/ MOVW        R3, #337                    @ 0x151 
    /*0001e6e0*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89f4] 
    /*0001e6e4*/ STR         R4, [SP, #4] 
    /*0001e6e8*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89f4] 
    /*0001e6ec*/ STR         R3, [SP] 
    /*0001e6f0*/ B           VI_WDRModeSendPipeRawFromBE_x1e32c
    VI_WDRModeSendPipeRawFromBE_x1e6f4:
    /*0001e6f4*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001e6f8*/ BL          0x000000000001E6F8          @ VI_QueueGetFree [R_ARM_CALL: .text+0x161cc] 
    /*0001e6fc*/ SUBS        R7, R0, #0 
    /*0001e700*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e834
    /*0001e704*/ SUB         R3, R7, #1024               @ 0x400 
    /*0001e708*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0001e70c*/ SUBS        FP, R3, #8 
    /*0001e710*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e834
    /*0001e714*/ ADD         R1, SP, #64                 @ 0x40 
    /*0001e718*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0001e71c*/ BL          0x000000000001E71C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001e720*/ SUB         R2, R7, #112                @ 0x70 
    /*0001e724*/ SUB         R1, R7, #136                @ 0x88 
    /*0001e728*/ MOV         R0, R4 
    /*0001e72c*/ BL          0x000000000001E72C          @ VI_DRV_GetBeCfg [R_ARM_CALL: .text+0x385b0] 
    /*0001e730*/ SUBS        R6, R0, #0 
    /*0001e734*/ BEQ         VI_WDRModeSendPipeRawFromBE_x1e748
    /*0001e738*/ MOV         R1, R7 
    /*0001e73c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001e740*/ BL          0x000000000001E740          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*0001e744*/ B           VI_WDRModeSendPipeRawFromBE_x1e1ec
    VI_WDRModeSendPipeRawFromBE_x1e748:
    /*0001e748*/ ADD         R1, SP, #64                 @ 0x40 
    /*0001e74c*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0001e750*/ BL          0x000000000001E750          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001e754*/ MOV         IP, R6 
    /*0001e758*/ MOV         R6, R4 
    /*0001e75c*/ LDR         R4, [SP, #32] 
    /*0001e760*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x12e30] 
    /*0001e764*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x12e30] 
    /*0001e768*/ STR         R3, [SP, #48]               @ 0x30 
    VI_WDRModeSendPipeRawFromBE_x1e76c:
    /*0001e76c*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0001e770*/ MOV         R3, #336                    @ 0x150 
    /*0001e774*/ MOV         R0, FP 
    /*0001e778*/ MLA         R1, R3, R4, R2 
    /*0001e77c*/ MOV         R2, R3 
    /*0001e780*/ LDR         R3, [R8] 
    /*0001e784*/ CMP         R3, R4 
    /*0001e788*/ ADD         R4, R4, #1 
    /*0001e78c*/ BLS         VI_WDRModeSendPipeRawFromBE_x1e7d4
    /*0001e790*/ BL          0x000000000001E790          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001e794*/ MOV         R1, #0 
    /*0001e798*/ MOV         R0, FP 
    /*0001e79c*/ BL          0x000000000001E79C          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001e7a0*/ LDR         R1, [FP, #4] 
    /*0001e7a4*/ ADD         R3, SL, #12288              @ 0x3000 
    /*0001e7a8*/ MOV         R2, #0 
    /*0001e7ac*/ STR         R2, [FP, #444]              @ 0x1bc 
    /*0001e7b0*/ MOV         R2, #1 
    /*0001e7b4*/ STR         R2, [FP, #432]              @ 0x1b0 
    /*0001e7b8*/ STR         R2, [FP, #436]              @ 0x1b4 
    /*0001e7bc*/ STR         R2, [FP, #440]              @ 0x1b8 
    /*0001e7c0*/ STR         R1, [R3, #2212]             @ 0x8a4 
    /*0001e7c4*/ LDR         R2, [FP], #448              @ 0x1c0 
    /*0001e7c8*/ STR         R2, [R3, #2208]             @ 0x8a0 
    /*0001e7cc*/ MOV         IP, R0 
    /*0001e7d0*/ B           VI_WDRModeSendPipeRawFromBE_x1e76c
    VI_WDRModeSendPipeRawFromBE_x1e7d4:
    /*0001e7d4*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0001e7d8*/ ADD         SL, SL, #36352              @ 0x8e00 
    /*0001e7dc*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001e7e0*/ MOV         R4, R6 
    /*0001e7e4*/ ADD         R1, R3, #1024               @ 0x400 
    /*0001e7e8*/ MOV         R3, #1 
    /*0001e7ec*/ STR         R3, [R7, #-4] 
    /*0001e7f0*/ MOV         R6, IP 
    /*0001e7f4*/ BL          0x000000000001E7F4          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    /*0001e7f8*/ LDRD        R2, [SL, #200]              @ 0xc8 
    /*0001e7fc*/ MOV         R0, R4 
    /*0001e800*/ ADDS        R2, R2, #1 
    /*0001e804*/ ADC         R3, R3, #0 
    /*0001e808*/ STRD        R2, [SL, #200]              @ 0xc8 
    /*0001e80c*/ BL          0x000000000001E80C          @ VI_UpdateWorkingPipeChnMkpAttr [R_ARM_CALL: .text+0x2988] 
    /*0001e810*/ ADD         R1, SP, #64                 @ 0x40 
    /*0001e814*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0001e818*/ BL          0x000000000001E818          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001e81c*/ MOV         R1, R9 
    /*0001e820*/ MOV         R0, R4 
    /*0001e824*/ BL          0x000000000001E824          @ VI_StartOneTask [R_ARM_CALL: .text+0x1ed4] 
    /*0001e828*/ MOV         R0, R5 
    /*0001e82c*/ BL          0x000000000001E82C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001e830*/ B           VI_WDRModeSendPipeRawFromBE_x1e16c
    VI_WDRModeSendPipeRawFromBE_x1e834:
    /*0001e834*/ LDR         R3, [PC, #44]               @ 0x000000000001e868 
    /*0001e838*/ MOVW        R1, #366                    @ 0x16e 
    /*0001e83c*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a6c] 
    /*0001e840*/ STR         R1, [SP, #8] 
    /*0001e844*/ STR         R1, [SP] 
    /*0001e848*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a6c] 
    /*0001e84c*/ STR         R3, [SP, #4] 
    /*0001e850*/ MOV         R1, #16 
    /*0001e854*/ MOV         R0, #3 
    /*0001e858*/ MOVW        R6, #32774                  @ 0x8006 
    /*0001e85c*/ BL          0x000000000001E85C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e860*/ MOVT        R6, #40976                  @ 0xa010 
    /*0001e864*/ B           VI_WDRModeSendPipeRawFromBE_x1e624
    /*0001e868*/ MULEQ       R0, IP, R2 
    /*0001e86c*/ ANDEQ       R2, R1, R0, LSL #31 
FUNC_END VI_WDRModeSendPipeRawFromBE


FUNC_BEGIN VI_SendPipeRawFromFE
    /*0001e870*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001e874*/ SUB         SP, SP, #12 
    /*0001e878*/ MOV         R3, #668                    @ 0x29c 
    /*0001e87c*/ MOV         R1, #16 
    /*0001e880*/ STR         R0, [SP, #4] 
    /*0001e884*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8aac] 
    /*0001e888*/ STR         R3, [SP] 
    /*0001e88c*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8aac] 
    /*0001e890*/ LDR         R3, [PC, #20]               @ 0x000000000001e8ac 
    /*0001e894*/ MOV         R0, #3 
    /*0001e898*/ BL          0x000000000001E898          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e89c*/ MOVW        R0, #32776                  @ 0x8008 
    /*0001e8a0*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001e8a4*/ ADD         SP, SP, #12 
    /*0001e8a8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0001e8ac*/ @           <UNDEFINED> instruction: 0x000012b8 
FUNC_END VI_SendPipeRawFromFE


FUNC_BEGIN VI_LineModeSendPipeRaw
    /*0001e8b0*/ CMP         R2, #1 
    /*0001e8b4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001e8b8*/ SUB         SP, SP, #12 
    /*0001e8bc*/ BEQ         VI_LineModeSendPipeRaw_x1e90c
    /*0001e8c0*/ CMP         R2, #2 
    /*0001e8c4*/ BNE         VI_LineModeSendPipeRaw_x1e8d8
    /*0001e8c8*/ MOV         R2, R3 
    /*0001e8cc*/ ADD         SP, SP, #12 
    /*0001e8d0*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    VI_LineModeSendPipeRaw_x1e8d4:
    /*0001e8d4*/ B           VI_LineModeSendPipeRaw_x1e8d4@ VI_LineModeSendPipeRawFromBE [R_ARM_JUMP24: .text+0x1e11c] 
    VI_LineModeSendPipeRaw_x1e8d8:
    /*0001e8d8*/ MOVW        R3, #686                    @ 0x2ae 
    /*0001e8dc*/ STR         R3, [SP] 
    /*0001e8e0*/ LDR         R3, [PC, #64]               @ 0x000000000001e928 
    /*0001e8e4*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8af0] 
    /*0001e8e8*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8af0] 
    /*0001e8ec*/ STR         R0, [SP, #4] 
    VI_LineModeSendPipeRaw_x1e8f0:
    /*0001e8f0*/ MOV         R1, #16 
    /*0001e8f4*/ MOV         R0, #3 
    /*0001e8f8*/ BL          0x000000000001E8F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e8fc*/ MOVW        R0, #32776                  @ 0x8008 
    /*0001e900*/ MOVT        R0, #40976                  @ 0xa010 
    /*0001e904*/ ADD         SP, SP, #12 
    /*0001e908*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_LineModeSendPipeRaw_x1e90c:
    /*0001e90c*/ MOV         R3, #668                    @ 0x29c 
    /*0001e910*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8aac] 
    /*0001e914*/ STR         R3, [SP] 
    /*0001e918*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8aac] 
    /*0001e91c*/ STR         R0, [SP, #4] 
    /*0001e920*/ LDR         R3, [PC, #4]                @ 0x000000000001e92c 
    /*0001e924*/ B           VI_LineModeSendPipeRaw_x1e8f0
    /*0001e928*/ LDRDEQ      R1, [R0], -R0 
    /*0001e92c*/ @           <UNDEFINED> instruction: 0x000012b8 
FUNC_END VI_LineModeSendPipeRaw


FUNC_BEGIN VI_SendMultPipeRaw
    /*0001e930*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0001e934*/ SUB         SP, SP, #32 
    /*0001e938*/ MOV         R4, R1 
    /*0001e93c*/ MOV         R6, R0 
    /*0001e940*/ BL          0x000000000001E940          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0001e944*/ SUBS        R3, R0, #0 
    /*0001e948*/ BEQ         VI_SendMultPipeRaw_x1e958
    VI_SendMultPipeRaw_x1e94c:
    /*0001e94c*/ MOV         R0, R3 
    /*0001e950*/ ADD         SP, SP, #32 
    /*0001e954*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SendMultPipeRaw_x1e958:
    /*0001e958*/ MOV         R0, R4 
    /*0001e95c*/ BL          0x000000000001E95C          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001e960*/ SUBS        R3, R0, #0 
    /*0001e964*/ BNE         VI_SendMultPipeRaw_x1e94c
    /*0001e968*/ ADD         R7, R4, #8 
    /*0001e96c*/ MOV         R0, R7 
    /*0001e970*/ BL          0x000000000001E970          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001e974*/ SUBS        R3, R0, #0 
    /*0001e978*/ BNE         VI_SendMultPipeRaw_x1e94c
    /*0001e97c*/ ADD         R8, R4, #24 
    /*0001e980*/ MOV         R0, R8 
    /*0001e984*/ BL          0x000000000001E984          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001e988*/ SUBS        R3, R0, #0 
    /*0001e98c*/ BNE         VI_SendMultPipeRaw_x1e94c
    /*0001e990*/ LDR         R2, [R4] 
    /*0001e994*/ SUB         R1, R2, #1 
    /*0001e998*/ CMP         R1, #1 
    /*0001e99c*/ MOVLS       R5, R3 
    /*0001e9a0*/ MOVWLS      SL, #335                    @ 0x14f 
    /*0001e9a4*/ BHI         VI_SendMultPipeRaw_x1ead4
    VI_SendMultPipeRaw_x1e9a8:
    /*0001e9a8*/ LDR         R0, [R8], #4 
    /*0001e9ac*/ BL          0x000000000001E9AC          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0001e9b0*/ MOV         R2, #336                    @ 0x150 
    /*0001e9b4*/ SUBS        R3, R0, #0 
    /*0001e9b8*/ BNE         VI_SendMultPipeRaw_x1e94c
    /*0001e9bc*/ LDR         R9, [R7], #8 
    /*0001e9c0*/ MOV         R1, R9 
    /*0001e9c4*/ BL          0x000000000001E9C4          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*0001e9c8*/ CMP         R0, #0 
    /*0001e9cc*/ BNE         VI_SendMultPipeRaw_x1ea0c
    VI_SendMultPipeRaw_x1e9d0:
    /*0001e9d0*/ STR         R5, [SP, #8] 
    /*0001e9d4*/ MOVW        R3, #717                    @ 0x2cd 
    /*0001e9d8*/ STR         R6, [SP, #4] 
    /*0001e9dc*/ MOV         R1, #16 
    /*0001e9e0*/ STR         R3, [SP] 
    /*0001e9e4*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8bb8] 
    /*0001e9e8*/ LDR         R3, [PC, #364]              @ 0x000000000001eb5c 
    /*0001e9ec*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8bb8] 
    /*0001e9f0*/ MOV         R0, #3 
    /*0001e9f4*/ BL          0x000000000001E9F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e9f8*/ MOVW        R3, #32771                  @ 0x8003 
    /*0001e9fc*/ MOVT        R3, #40976                  @ 0xa010 
    /*0001ea00*/ MOV         R0, R3 
    /*0001ea04*/ ADD         SP, SP, #32 
    /*0001ea08*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SendMultPipeRaw_x1ea0c:
    /*0001ea0c*/ ADD         R1, R9, SL 
    /*0001ea10*/ MOV         R2, #1 
    /*0001ea14*/ ADD         R0, SP, #28 
    /*0001ea18*/ BL          0x000000000001EA18          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0001ea1c*/ CMP         R0, #0 
    /*0001ea20*/ BNE         VI_SendMultPipeRaw_x1e9d0
    /*0001ea24*/ LDR         R3, [R4] 
    /*0001ea28*/ ADD         R5, R5, #1 
    /*0001ea2c*/ CMP         R3, R5 
    /*0001ea30*/ BHI         VI_SendMultPipeRaw_x1e9a8
    /*0001ea34*/ LDR         R3, [PC, #292]              @ 0x000000000001eb60 
    /*0001ea38*/ MOV         R5, #176                    @ 0xb0 
    /*0001ea3c*/ MLA         R5, R5, R6, R3 
    /*0001ea40*/ MOV         R0, R5 
    /*0001ea44*/ BL          0x000000000001EA44          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001ea48*/ CMP         R0, #0 
    /*0001ea4c*/ BNE         VI_SendMultPipeRaw_x1eb18
    /*0001ea50*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001ea54*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001ea58*/ LDR         R3, [R3, R6, LSL #2] 
    /*0001ea5c*/ CMP         R3, #0 
    /*0001ea60*/ BEQ         VI_SendMultPipeRaw_x1eb24
    /*0001ea64*/ MOV         R0, R6 
    /*0001ea68*/ BL          0x000000000001EA68          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*0001ea6c*/ MOV         R7, R0 
    /*0001ea70*/ MOV         R0, R6 
    /*0001ea74*/ BL          0x000000000001EA74          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0001ea78*/ MOV         R8, R0 
    /*0001ea7c*/ MOV         R0, R5 
    /*0001ea80*/ BL          0x000000000001EA80          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001ea84*/ MOV         R0, R7 
    /*0001ea88*/ BL          0x000000000001EA88          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*0001ea8c*/ CMP         R0, #0 
    /*0001ea90*/ BEQ         VI_SendMultPipeRaw_x1eaac
    /*0001ea94*/ MOV         R2, R8 
    /*0001ea98*/ MOV         R1, R4 
    /*0001ea9c*/ MOV         R0, R6 
    /*0001eaa0*/ BL          0x000000000001EAA0          @ VI_WDRModeSendPipeRawFromBE [R_ARM_CALL: .text+0x1e14c] 
    /*0001eaa4*/ MOV         R3, R0 
    /*0001eaa8*/ B           VI_SendMultPipeRaw_x1e94c
    VI_SendMultPipeRaw_x1eaac:
    /*0001eaac*/ ADD         R1, SP, #28 
    /*0001eab0*/ MOV         R0, R6 
    /*0001eab4*/ BL          0x000000000001EAB4          @ VI_DRV_GetPipeRawSource [R_ARM_CALL: .text+0x303c8] 
    /*0001eab8*/ MOV         R3, R8 
    /*0001eabc*/ MOV         R1, R4 
    /*0001eac0*/ MOV         R0, R6 
    /*0001eac4*/ LDR         R2, [SP, #28] 
    /*0001eac8*/ BL          0x000000000001EAC8          @ VI_LineModeSendPipeRaw [R_ARM_CALL: .text+0x1e8b0] 
    /*0001eacc*/ MOV         R3, R0 
    /*0001ead0*/ B           VI_SendMultPipeRaw_x1e94c
    VI_SendMultPipeRaw_x1ead4:
    /*0001ead4*/ STR         R2, [SP, #8] 
    /*0001ead8*/ MOV         R3, #4 
    /*0001eadc*/ MOV         R2, #1 
    /*0001eae0*/ STR         R3, [SP, #16] 
    /*0001eae4*/ STR         R2, [SP, #12] 
    /*0001eae8*/ MOV         R3, #708                    @ 0x2c4 
    /*0001eaec*/ STR         R6, [SP, #4] 
    /*0001eaf0*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8b64] 
    /*0001eaf4*/ STR         R3, [SP] 
    /*0001eaf8*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8b64] 
    /*0001eafc*/ LDR         R3, [PC, #88]               @ 0x000000000001eb5c 
    /*0001eb00*/ MOV         R1, #16 
    /*0001eb04*/ MOV         R0, #3 
    /*0001eb08*/ BL          0x000000000001EB08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001eb0c*/ MOVW        R3, #32771                  @ 0x8003 
    /*0001eb10*/ MOVT        R3, #40976                  @ 0xa010 
    /*0001eb14*/ B           VI_SendMultPipeRaw_x1e94c
    VI_SendMultPipeRaw_x1eb18:
    /*0001eb18*/ MOV         R3, #65024                  @ 0xfe00 
    /*0001eb1c*/ MOVT        R3, #65535                  @ 0xffff 
    /*0001eb20*/ B           VI_SendMultPipeRaw_x1e94c
    VI_SendMultPipeRaw_x1eb24:
    /*0001eb24*/ MOV         R0, R5 
    /*0001eb28*/ BL          0x000000000001EB28          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001eb2c*/ MOV         R3, #728                    @ 0x2d8 
    /*0001eb30*/ STR         R6, [SP, #4] 
    /*0001eb34*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x85f0] 
    /*0001eb38*/ STR         R3, [SP] 
    /*0001eb3c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x85f0] 
    /*0001eb40*/ LDR         R3, [PC, #20]               @ 0x000000000001eb5c 
    /*0001eb44*/ MOV         R1, #16 
    /*0001eb48*/ MOV         R0, #3 
    /*0001eb4c*/ BL          0x000000000001EB4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001eb50*/ MOVW        R3, #32773                  @ 0x8005 
    /*0001eb54*/ MOVT        R3, #40976                  @ 0xa010 
    /*0001eb58*/ B           VI_SendMultPipeRaw_x1e94c
    /*0001eb5c*/ ANDEQ       R1, R0, R8, ROR #5 
    /*0001eb60*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_SendMultPipeRaw


FUNC_BEGIN VI_GetPipeRaw
    /*0001eb64*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001eb68*/ SUB         SP, SP, #396                @ 0x18c 
    /*0001eb6c*/ MOV         R7, R1 
    /*0001eb70*/ MOV         R8, R2 
    /*0001eb74*/ MOV         R6, R0 
    /*0001eb78*/ BL          0x000000000001EB78          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*0001eb7c*/ SUBS        R4, R0, #0 
    /*0001eb80*/ BEQ         VI_GetPipeRaw_x1eb90
    VI_GetPipeRaw_x1eb84:
    /*0001eb84*/ MOV         R0, R4 
    /*0001eb88*/ ADD         SP, SP, #396                @ 0x18c 
    /*0001eb8c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_GetPipeRaw_x1eb90:
    /*0001eb90*/ MOV         R0, R7 
    /*0001eb94*/ BL          0x000000000001EB94          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001eb98*/ SUBS        R4, R0, #0 
    /*0001eb9c*/ BNE         VI_GetPipeRaw_x1eb84
    /*0001eba0*/ CMN         R8, #1 
    /*0001eba4*/ BLT         VI_GetPipeRaw_x1efe0
    /*0001eba8*/ MOV         R2, #336                    @ 0x150 
    /*0001ebac*/ MOV         R1, R7 
    /*0001ebb0*/ MOV         R0, #1 
    /*0001ebb4*/ STRB        R4, [SP, #56]               @ 0x38 
    /*0001ebb8*/ BL          0x000000000001EBB8          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*0001ebbc*/ CMP         R0, #0 
    /*0001ebc0*/ BNE         VI_GetPipeRaw_x1ebfc
    VI_GetPipeRaw_x1ebc4:
    /*0001ebc4*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d84] 
    /*0001ebc8*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d84] 
    /*0001ebcc*/ MOVW        R3, #774                    @ 0x306 
    /*0001ebd0*/ STR         R6, [SP, #4] 
    /*0001ebd4*/ STR         R3, [SP] 
    VI_GetPipeRaw_x1ebd8:
    /*0001ebd8*/ LDR         R3, [PC, #1048]             @ 0x000000000001eff8 
    /*0001ebdc*/ MOV         R1, #16 
    /*0001ebe0*/ MOV         R0, #3 
    /*0001ebe4*/ MOVW        R4, #32771                  @ 0x8003 
    /*0001ebe8*/ BL          0x000000000001EBE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ebec*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001ebf0*/ MOV         R0, R4 
    /*0001ebf4*/ ADD         SP, SP, #396                @ 0x18c 
    /*0001ebf8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_GetPipeRaw_x1ebfc:
    /*0001ebfc*/ ADD         R0, R7, #332                @ 0x14c 
    /*0001ec00*/ MOV         R2, #1 
    /*0001ec04*/ ADD         R0, R0, #3 
    /*0001ec08*/ ADD         R1, SP, #56                 @ 0x38 
    /*0001ec0c*/ BL          0x000000000001EC0C          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0001ec10*/ CMP         R0, #0 
    /*0001ec14*/ BNE         VI_GetPipeRaw_x1ebc4
    /*0001ec18*/ MOV         FP, #176                    @ 0xb0 
    /*0001ec1c*/ MOVW        R4, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001ec20*/ MUL         FP, FP, R6 
    /*0001ec24*/ MOVT        R4, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001ec28*/ ADD         SL, FP, #100                @ 0x64 
    /*0001ec2c*/ ADD         SL, R4, SL 
    /*0001ec30*/ MOV         R0, SL 
    /*0001ec34*/ BL          0x000000000001EC34          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001ec38*/ SUBS        R5, R0, #0 
    /*0001ec3c*/ BNE         VI_GetPipeRaw_x1eed4
    /*0001ec40*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001ec44*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001ec48*/ LDR         R3, [R3, R6, LSL #2] 
    /*0001ec4c*/ CMP         R3, #0 
    /*0001ec50*/ STR         R3, [SP, #20] 
    /*0001ec54*/ BEQ         VI_GetPipeRaw_x1ee48
    /*0001ec58*/ ADD         R3, FP, #140                @ 0x8c 
    /*0001ec5c*/ ADD         R1, SP, #32 
    /*0001ec60*/ ADD         R3, R4, R3 
    /*0001ec64*/ STR         R3, [SP, #24] 
    /*0001ec68*/ MOV         R0, R3 
    /*0001ec6c*/ MOV         R9, R3 
    /*0001ec70*/ BL          0x000000000001EC70          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001ec74*/ ADD         R3, R4, FP 
    /*0001ec78*/ MOV         R0, R9 
    /*0001ec7c*/ ADD         R1, SP, #32 
    /*0001ec80*/ LDR         R3, [R3, #24] 
    /*0001ec84*/ MOV         R9, R3 
    /*0001ec88*/ STR         R3, [SP, #28] 
    /*0001ec8c*/ BL          0x000000000001EC8C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001ec90*/ CMP         R8, #0 
    /*0001ec94*/ MOV         R3, #5 
    /*0001ec98*/ STR         R6, [SP, #36]               @ 0x24 
    /*0001ec9c*/ STR         R5, [SP, #40]               @ 0x28 
    /*0001eca0*/ STR         R9, [SP, #44]               @ 0x2c 
    /*0001eca4*/ STR         R5, [SP, #48]               @ 0x30 
    /*0001eca8*/ STR         R3, [SP, #52]               @ 0x34 
    /*0001ecac*/ BLE         VI_GetPipeRaw_x1ed68
    /*0001ecb0*/ ADD         R5, SP, #36                 @ 0x24 
    /*0001ecb4*/ MOV         R0, SL 
    /*0001ecb8*/ BL          0x000000000001ECB8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001ecbc*/ ADD         FP, FP, #84                 @ 0x54 
    /*0001ecc0*/ MOV         R0, R5 
    /*0001ecc4*/ MOVW        R9, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x419c] 
    /*0001ecc8*/ ADD         FP, R4, FP 
    /*0001eccc*/ MOVT        R9, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x419c] 
    /*0001ecd0*/ BL          0x000000000001ECD0          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0001ecd4*/ MOV         R4, R8 
    /*0001ecd8*/ B           VI_GetPipeRaw_x1ecf0
    VI_GetPipeRaw_x1ecdc:
    /*0001ecdc*/ BL          0x000000000001ECDC          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0001ece0*/ ADD         R3, R0, #512                @ 0x200 
    /*0001ece4*/ MOV         R4, R0 
    /*0001ece8*/ BICS        R3, R3, #512                @ 0x200 
    /*0001ecec*/ BEQ         VI_GetPipeRaw_x1ed1c
    VI_GetPipeRaw_x1ecf0:
    /*0001ecf0*/ MOV         R0, R5 
    /*0001ecf4*/ BL          0x000000000001ECF4          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0001ecf8*/ MOV         R3, R4 
    /*0001ecfc*/ MOV         R2, R5 
    /*0001ed00*/ MOV         R1, R9 
    /*0001ed04*/ CMP         R0, #0 
    /*0001ed08*/ MOV         R0, FP 
    /*0001ed0c*/ BEQ         VI_GetPipeRaw_x1ecdc
    /*0001ed10*/ MOV         R0, R4 
    /*0001ed14*/ BL          0x000000000001ED14          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*0001ed18*/ MOV         R4, R0 
    VI_GetPipeRaw_x1ed1c:
    /*0001ed1c*/ MOV         R0, SL 
    /*0001ed20*/ BL          0x000000000001ED20          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001ed24*/ CMP         R0, #0 
    /*0001ed28*/ BNE         VI_GetPipeRaw_x1eed4
    /*0001ed2c*/ CMP         R4, #0 
    /*0001ed30*/ LDRLT       R3, [PC, #704]              @ 0x000000000001eff8 
    /*0001ed34*/ MOVLT       R1, #824                    @ 0x338 
    /*0001ed38*/ BLT         VI_GetPipeRaw_x1ef4c
    /*0001ed3c*/ BEQ         VI_GetPipeRaw_x1eee0
    VI_GetPipeRaw_x1ed40:
    /*0001ed40*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0001ed44*/ CMP         R3, #0 
    /*0001ed48*/ BNE         VI_GetPipeRaw_x1ef14
    /*0001ed4c*/ MOVW        R4, #32784                  @ 0x8010 
    /*0001ed50*/ MOVT        R4, #40976                  @ 0xa010 
    VI_GetPipeRaw_x1ed54:
    /*0001ed54*/ MOV         R0, SL 
    /*0001ed58*/ BL          0x000000000001ED58          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001ed5c*/ MOV         R0, R4 
    /*0001ed60*/ ADD         SP, SP, #396                @ 0x18c 
    /*0001ed64*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_GetPipeRaw_x1ed68:
    /*0001ed68*/ CMN         R8, #1 
    /*0001ed6c*/ BEQ         VI_GetPipeRaw_x1ee78
    /*0001ed70*/ LDR         R3, [SP, #20] 
    /*0001ed74*/ ADD         R5, R3, #76                 @ 0x4c 
    /*0001ed78*/ MOV         R0, R5 
    /*0001ed7c*/ BL          0x000000000001ED7C          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001ed80*/ CMP         R0, #0 
    /*0001ed84*/ MOVWEQ      R4, #32782                  @ 0x800e 
    /*0001ed88*/ MOVTEQ      R4, #40976                  @ 0xa010 
    /*0001ed8c*/ BEQ         VI_GetPipeRaw_x1ed54
    VI_GetPipeRaw_x1ed90:
    /*0001ed90*/ ADD         R1, SP, #32 
    /*0001ed94*/ LDR         R0, [SP, #24] 
    /*0001ed98*/ BL          0x000000000001ED98          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001ed9c*/ MOV         R0, R5 
    /*0001eda0*/ BL          0x000000000001EDA0          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*0001eda4*/ SUBS        R8, R0, #0 
    /*0001eda8*/ BEQ         VI_GetPipeRaw_x1efc8
    /*0001edac*/ SUBS        R9, R8, #580                @ 0x244 
    /*0001edb0*/ BEQ         VI_GetPipeRaw_x1efc8
    /*0001edb4*/ MOV         R1, #12 
    /*0001edb8*/ MOV         R0, R9 
    /*0001edbc*/ BL          0x000000000001EDBC          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001edc0*/ CMP         R0, #0 
    /*0001edc4*/ BNE         VI_GetPipeRaw_x1efa0
    VI_GetPipeRaw_x1edc8:
    /*0001edc8*/ MOV         R1, #0 
    /*0001edcc*/ MOV         R0, R9 
    /*0001edd0*/ BL          0x000000000001EDD0          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001edd4*/ SUBS        R4, R0, #0 
    /*0001edd8*/ BNE         VI_GetPipeRaw_x1ef78
    VI_GetPipeRaw_x1eddc:
    /*0001eddc*/ MOV         R2, #336                    @ 0x150 
    /*0001ede0*/ MOV         R1, R9 
    /*0001ede4*/ ADD         R0, SP, #56                 @ 0x38 
    /*0001ede8*/ BL          0x000000000001EDE8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001edec*/ MOV         R1, R8 
    /*0001edf0*/ MOV         R0, R5 
    /*0001edf4*/ BL          0x000000000001EDF4          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*0001edf8*/ ADD         R1, SP, #32 
    /*0001edfc*/ LDR         R0, [SP, #24] 
    /*0001ee00*/ BL          0x000000000001EE00          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001ee04*/ ADD         R1, SP, #56                 @ 0x38 
    /*0001ee08*/ MOV         R0, R7 
    /*0001ee0c*/ MOV         R2, #336                    @ 0x150 
    /*0001ee10*/ BL          0x000000000001EE10          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0001ee14*/ CMP         R0, #0 
    /*0001ee18*/ BEQ         VI_GetPipeRaw_x1ed54
    /*0001ee1c*/ MOV         R3, #944                    @ 0x3b0 
    /*0001ee20*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d38] 
    /*0001ee24*/ STR         R3, [SP] 
    /*0001ee28*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d38] 
    /*0001ee2c*/ LDR         R3, [PC, #452]              @ 0x000000000001eff8 
    /*0001ee30*/ MOV         R1, #16 
    /*0001ee34*/ MOV         R0, #3 
    /*0001ee38*/ MOVW        R4, #32784                  @ 0x8010 
    /*0001ee3c*/ BL          0x000000000001EE3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ee40*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001ee44*/ B           VI_GetPipeRaw_x1ed54
    VI_GetPipeRaw_x1ee48:
    /*0001ee48*/ MOV         R3, #784                    @ 0x310 
    /*0001ee4c*/ STR         R6, [SP, #4] 
    /*0001ee50*/ STR         R3, [SP] 
    /*0001ee54*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x85f0] 
    /*0001ee58*/ LDR         R3, [PC, #408]              @ 0x000000000001eff8 
    /*0001ee5c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x85f0] 
    /*0001ee60*/ MOV         R1, #16 
    /*0001ee64*/ MOV         R0, #3 
    /*0001ee68*/ MOVW        R4, #32773                  @ 0x8005 
    /*0001ee6c*/ BL          0x000000000001EE6C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ee70*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001ee74*/ B           VI_GetPipeRaw_x1ed54
    VI_GetPipeRaw_x1ee78:
    /*0001ee78*/ MOV         R0, SL 
    /*0001ee7c*/ ADD         FP, FP, #84                 @ 0x54 
    /*0001ee80*/ MOVW        R8, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x419c] 
    /*0001ee84*/ BL          0x000000000001EE84          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001ee88*/ ADD         R4, R4, FP 
    /*0001ee8c*/ MOVT        R8, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x419c] 
    /*0001ee90*/ ADD         R5, SP, #36                 @ 0x24 
    /*0001ee94*/ B           VI_GetPipeRaw_x1eea4
    VI_GetPipeRaw_x1ee98:
    /*0001ee98*/ BL          0x000000000001EE98          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0001ee9c*/ CMP         R0, #0 
    /*0001eea0*/ BLT         VI_GetPipeRaw_x1ef34
    VI_GetPipeRaw_x1eea4:
    /*0001eea4*/ MOV         R0, R5 
    /*0001eea8*/ BL          0x000000000001EEA8          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0001eeac*/ MOV         R3, #100                    @ 0x64 
    /*0001eeb0*/ MOV         R2, R5 
    /*0001eeb4*/ MOV         R1, R8 
    /*0001eeb8*/ CMP         R0, #0 
    /*0001eebc*/ MOV         R0, R4 
    /*0001eec0*/ BEQ         VI_GetPipeRaw_x1ee98
    /*0001eec4*/ MOV         R0, SL 
    /*0001eec8*/ BL          0x000000000001EEC8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001eecc*/ CMP         R0, #0 
    /*0001eed0*/ BEQ         VI_GetPipeRaw_x1ed40
    VI_GetPipeRaw_x1eed4:
    /*0001eed4*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001eed8*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001eedc*/ B           VI_GetPipeRaw_x1eb84
    VI_GetPipeRaw_x1eee0:
    /*0001eee0*/ MOVW        R3, #831                    @ 0x33f 
    /*0001eee4*/ STR         R8, [SP, #8] 
    /*0001eee8*/ STR         R3, [SP] 
    /*0001eeec*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c7c] 
    /*0001eef0*/ STR         R6, [SP, #4] 
    /*0001eef4*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c7c] 
    /*0001eef8*/ LDR         R3, [PC, #248]              @ 0x000000000001eff8 
    /*0001eefc*/ MOV         R1, #16 
    /*0001ef00*/ MOV         R0, #3 
    /*0001ef04*/ MOVW        R4, #32782                  @ 0x800e 
    /*0001ef08*/ BL          0x000000000001EF08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ef0c*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001ef10*/ B           VI_GetPipeRaw_x1ed54
    VI_GetPipeRaw_x1ef14:
    /*0001ef14*/ LDR         R1, [SP, #28] 
    /*0001ef18*/ MOV         R0, R6 
    /*0001ef1c*/ BL          0x000000000001EF1C          @ VI_AbnormalVerifyAfterWait [R_ARM_CALL: .text+0x4208] 
    /*0001ef20*/ SUBS        R4, R0, #0 
    /*0001ef24*/ BNE         VI_GetPipeRaw_x1ed54
    /*0001ef28*/ LDR         R3, [SP, #20] 
    /*0001ef2c*/ ADD         R5, R3, #76                 @ 0x4c 
    /*0001ef30*/ B           VI_GetPipeRaw_x1ed90
    VI_GetPipeRaw_x1ef34:
    /*0001ef34*/ MOV         R0, SL 
    /*0001ef38*/ BL          0x000000000001EF38          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001ef3c*/ CMP         R0, #0 
    /*0001ef40*/ BNE         VI_GetPipeRaw_x1eed4
    /*0001ef44*/ LDR         R3, [PC, #172]              @ 0x000000000001eff8 
    /*0001ef48*/ MOVW        R1, #875                    @ 0x36b 
    VI_GetPipeRaw_x1ef4c:
    /*0001ef4c*/ STR         R1, [SP, #8] 
    /*0001ef50*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c40] 
    /*0001ef54*/ STR         R1, [SP] 
    /*0001ef58*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c40] 
    /*0001ef5c*/ STR         R3, [SP, #4] 
    /*0001ef60*/ MOV         R1, #16 
    /*0001ef64*/ MOV         R0, #3 
    /*0001ef68*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001ef6c*/ BL          0x000000000001EF6C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ef70*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001ef74*/ B           VI_GetPipeRaw_x1ed54
    VI_GetPipeRaw_x1ef78:
    /*0001ef78*/ MOVW        R3, #934                    @ 0x3a6 
    /*0001ef7c*/ STR         R6, [SP, #4] 
    /*0001ef80*/ STR         R3, [SP] 
    /*0001ef84*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d04] 
    /*0001ef88*/ LDR         R3, [PC, #104]              @ 0x000000000001eff8 
    /*0001ef8c*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d04] 
    /*0001ef90*/ MOV         R1, #16 
    /*0001ef94*/ MOV         R0, #3 
    /*0001ef98*/ BL          0x000000000001EF98          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ef9c*/ B           VI_GetPipeRaw_x1eddc
    VI_GetPipeRaw_x1efa0:
    /*0001efa0*/ MOV         R3, #928                    @ 0x3a0 
    /*0001efa4*/ STR         R6, [SP, #4] 
    /*0001efa8*/ STR         R3, [SP] 
    /*0001efac*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ccc] 
    /*0001efb0*/ LDR         R3, [PC, #64]               @ 0x000000000001eff8 
    /*0001efb4*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ccc] 
    /*0001efb8*/ MOV         R1, #16 
    /*0001efbc*/ MOV         R0, #3 
    /*0001efc0*/ BL          0x000000000001EFC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001efc4*/ B           VI_GetPipeRaw_x1edc8
    VI_GetPipeRaw_x1efc8:
    /*0001efc8*/ ADD         R1, SP, #32 
    /*0001efcc*/ LDR         R0, [SP, #24] 
    /*0001efd0*/ MOVW        R4, #32782                  @ 0x800e 
    /*0001efd4*/ BL          0x000000000001EFD4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001efd8*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001efdc*/ B           VI_GetPipeRaw_x1ed54
    VI_GetPipeRaw_x1efe0:
    /*0001efe0*/ MOV         R3, #768                    @ 0x300 
    /*0001efe4*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c04] 
    /*0001efe8*/ STR         R8, [SP, #4] 
    /*0001efec*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c04] 
    /*0001eff0*/ STR         R3, [SP] 
    /*0001eff4*/ B           VI_GetPipeRaw_x1ebd8
    /*0001eff8*/ STRDEQ      R1, [R0], -IP 
FUNC_END VI_GetPipeRaw


FUNC_BEGIN VI_GetChnFrame
    /*0001effc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001f000*/ MOV         R8, R0 
    /*0001f004*/ SUB         SP, SP, #396                @ 0x18c 
    /*0001f008*/ MOV         R0, R2 
    /*0001f00c*/ MOV         R7, R2 
    /*0001f010*/ MOV         R9, R1 
    /*0001f014*/ MOV         SL, R3 
    /*0001f018*/ BL          0x000000000001F018          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001f01c*/ SUBS        R4, R0, #0 
    /*0001f020*/ BEQ         VI_GetChnFrame_x1f030
    VI_GetChnFrame_x1f024:
    /*0001f024*/ MOV         R0, R4 
    /*0001f028*/ ADD         SP, SP, #396                @ 0x18c 
    /*0001f02c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_GetChnFrame_x1f030:
    /*0001f030*/ MOV         R0, R8 
    /*0001f034*/ BL          0x000000000001F034          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*0001f038*/ SUBS        R4, R0, #0 
    /*0001f03c*/ BNE         VI_GetChnFrame_x1f024
    /*0001f040*/ MOV         R0, R9 
    /*0001f044*/ BL          0x000000000001F044          @ VI_CheckChnId [R_ARM_CALL: .text+0xa190] 
    /*0001f048*/ SUBS        R4, R0, #0 
    /*0001f04c*/ BNE         VI_GetChnFrame_x1f024
    /*0001f050*/ CMN         SL, #1 
    /*0001f054*/ BLT         VI_GetChnFrame_x1f560
    /*0001f058*/ MOV         R2, #336                    @ 0x150 
    /*0001f05c*/ MOV         R1, R7 
    /*0001f060*/ MOV         R0, #1 
    /*0001f064*/ STRB        R4, [SP, #56]               @ 0x38 
    /*0001f068*/ BL          0x000000000001F068          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*0001f06c*/ CMP         R0, #0 
    /*0001f070*/ BNE         VI_GetChnFrame_x1f0a4
    VI_GetChnFrame_x1f074:
    /*0001f074*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ec8] 
    /*0001f078*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ec8] 
    /*0001f07c*/ MOVW        R3, #981                    @ 0x3d5 
    /*0001f080*/ STR         R8, [SP, #4] 
    /*0001f084*/ STR         R3, [SP] 
    VI_GetChnFrame_x1f088:
    /*0001f088*/ LDR         R3, [PC, #1280]             @ 0x000000000001f590 
    /*0001f08c*/ MOV         R1, #16 
    /*0001f090*/ MOV         R0, #3 
    /*0001f094*/ MOVW        R4, #32771                  @ 0x8003 
    /*0001f098*/ BL          0x000000000001F098          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f09c*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001f0a0*/ B           VI_GetChnFrame_x1f024
    VI_GetChnFrame_x1f0a4:
    /*0001f0a4*/ ADD         R0, R7, #332                @ 0x14c 
    /*0001f0a8*/ MOV         R2, #1 
    /*0001f0ac*/ ADD         R0, R0, #3 
    /*0001f0b0*/ ADD         R1, SP, #56                 @ 0x38 
    /*0001f0b4*/ BL          0x000000000001F0B4          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0001f0b8*/ CMP         R0, #0 
    /*0001f0bc*/ BNE         VI_GetChnFrame_x1f074
    /*0001f0c0*/ MOV         R4, #44                     @ 0x2c 
    /*0001f0c4*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001f0c8*/ MLA         R4, R4, R8, R9 
    /*0001f0cc*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001f0d0*/ ADD         R4, R4, #26 
    /*0001f0d4*/ LSL         R4, R4, #2 
    /*0001f0d8*/ ADD         R3, R5, R4 
    /*0001f0dc*/ STR         R3, [SP, #24] 
    /*0001f0e0*/ MOV         R0, R3 
    /*0001f0e4*/ BL          0x000000000001F0E4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001f0e8*/ CMP         R0, #0 
    /*0001f0ec*/ BNE         VI_GetChnFrame_x1f184
    /*0001f0f0*/ MOV         R2, #176                    @ 0xb0 
    /*0001f0f4*/ MUL         R2, R2, R8 
    /*0001f0f8*/ ADD         FP, R2, #100                @ 0x64 
    /*0001f0fc*/ ADD         FP, R5, FP 
    /*0001f100*/ STR         R2, [SP, #16] 
    /*0001f104*/ MOV         R0, FP 
    /*0001f108*/ BL          0x000000000001F108          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001f10c*/ LDR         R2, [SP, #16] 
    /*0001f110*/ CMP         R0, #0 
    /*0001f114*/ BNE         VI_GetChnFrame_x1f184
    /*0001f118*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001f11c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001f120*/ LDR         R6, [R3, R8, LSL #2] 
    /*0001f124*/ CMP         R6, #0 
    /*0001f128*/ BEQ         VI_GetChnFrame_x1f4ac
    /*0001f12c*/ ADD         R3, R9, #9536               @ 0x2540 
    /*0001f130*/ ADD         R3, R3, #50                 @ 0x32 
    /*0001f134*/ ADD         R3, R6, R3, LSL #2 
    /*0001f138*/ LDR         R3, [R3, #4] 
    /*0001f13c*/ CMP         R3, #0 
    /*0001f140*/ BNE         VI_GetChnFrame_x1f190
    /*0001f144*/ MOVW        R3, #999                    @ 0x3e7 
    /*0001f148*/ STR         R9, [SP, #4] 
    /*0001f14c*/ STR         R3, [SP] 
    /*0001f150*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8dcc] 
    /*0001f154*/ LDR         R3, [PC, #1076]             @ 0x000000000001f590 
    /*0001f158*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8dcc] 
    /*0001f15c*/ MOV         R1, #16 
    /*0001f160*/ MOV         R0, #3 
    /*0001f164*/ BL          0x000000000001F164          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f168*/ MOVW        R4, #32777                  @ 0x8009 
    /*0001f16c*/ MOVT        R4, #40976                  @ 0xa010 
    VI_GetChnFrame_x1f170:
    /*0001f170*/ MOV         R0, FP 
    /*0001f174*/ BL          0x000000000001F174          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001f178*/ LDR         R0, [SP, #24] 
    /*0001f17c*/ BL          0x000000000001F17C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001f180*/ B           VI_GetChnFrame_x1f024
    VI_GetChnFrame_x1f184:
    /*0001f184*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001f188*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001f18c*/ B           VI_GetChnFrame_x1f024
    VI_GetChnFrame_x1f190:
    /*0001f190*/ ADD         R2, R2, #140                @ 0x8c 
    /*0001f194*/ ADD         R1, SP, #32 
    /*0001f198*/ ADD         R3, R5, R2 
    /*0001f19c*/ STR         R3, [SP, #28] 
    /*0001f1a0*/ MOV         R0, R3 
    /*0001f1a4*/ BL          0x000000000001F1A4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001f1a8*/ MOV         R3, #176                    @ 0xb0 
    /*0001f1ac*/ MLA         R3, R3, R8, R5 
    /*0001f1b0*/ LDR         R0, [SP, #28] 
    /*0001f1b4*/ ADD         R1, SP, #32 
    /*0001f1b8*/ LDR         R3, [R3, #24] 
    /*0001f1bc*/ STR         R3, [SP, #16] 
    /*0001f1c0*/ BL          0x000000000001F1C0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001f1c4*/ LDR         R3, [SP, #16] 
    /*0001f1c8*/ CMP         SL, #0 
    /*0001f1cc*/ MOV         R2, #0 
    /*0001f1d0*/ STR         R8, [SP, #36]               @ 0x24 
    /*0001f1d4*/ STR         R9, [SP, #40]               @ 0x28 
    /*0001f1d8*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0001f1dc*/ MOV         R3, #2 
    /*0001f1e0*/ STR         R2, [SP, #48]               @ 0x30 
    /*0001f1e4*/ STR         R3, [SP, #52]               @ 0x34 
    /*0001f1e8*/ BLE         VI_GetChnFrame_x1f300
    /*0001f1ec*/ MOV         R3, #36                     @ 0x24 
    /*0001f1f0*/ MLA         R6, R3, R9, R6 
    /*0001f1f4*/ ADD         R3, R6, #148                @ 0x94 
    /*0001f1f8*/ STR         R3, [SP, #20] 
    /*0001f1fc*/ MOV         R0, R3 
    /*0001f200*/ BL          0x000000000001F200          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001f204*/ CMP         R0, #0 
    /*0001f208*/ BNE         VI_GetChnFrame_x1f3ec
    /*0001f20c*/ MOV         R0, FP 
    /*0001f210*/ SUB         R4, R4, #64                 @ 0x40 
    /*0001f214*/ BL          0x000000000001F214          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001f218*/ ADD         R0, SP, #36                 @ 0x24 
    /*0001f21c*/ MOVW        R6, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x419c] 
    /*0001f220*/ ADD         R5, R5, R4 
    /*0001f224*/ MOVT        R6, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x419c] 
    /*0001f228*/ BL          0x000000000001F228          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0001f22c*/ MOV         R4, SL 
    /*0001f230*/ B           VI_GetChnFrame_x1f248
    VI_GetChnFrame_x1f234:
    /*0001f234*/ BL          0x000000000001F234          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0001f238*/ ADD         R3, R0, #512                @ 0x200 
    /*0001f23c*/ MOV         R4, R0 
    /*0001f240*/ BICS        R3, R3, #512                @ 0x200 
    /*0001f244*/ BEQ         VI_GetChnFrame_x1f274
    VI_GetChnFrame_x1f248:
    /*0001f248*/ ADD         R0, SP, #36                 @ 0x24 
    /*0001f24c*/ BL          0x000000000001F24C          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0001f250*/ MOV         R3, R4 
    /*0001f254*/ ADD         R2, SP, #36                 @ 0x24 
    /*0001f258*/ MOV         R1, R6 
    /*0001f25c*/ CMP         R0, #0 
    /*0001f260*/ MOV         R0, R5 
    /*0001f264*/ BEQ         VI_GetChnFrame_x1f234
    /*0001f268*/ MOV         R0, R4 
    /*0001f26c*/ BL          0x000000000001F26C          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*0001f270*/ MOV         R4, R0 
    VI_GetChnFrame_x1f274:
    /*0001f274*/ MOV         R0, FP 
    /*0001f278*/ BL          0x000000000001F278          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001f27c*/ CMP         R0, #0 
    /*0001f280*/ BNE         VI_GetChnFrame_x1f184
    /*0001f284*/ CMP         R4, #0 
    /*0001f288*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0001f28c*/ MOVWLT      R1, #1042                   @ 0x412 
    /*0001f290*/ LDRLT       R3, [PC, #760]              @ 0x000000000001f590 
    /*0001f294*/ BLT         VI_GetChnFrame_x1f3c0
    /*0001f298*/ BEQ         VI_GetChnFrame_x1f504
    /*0001f29c*/ CMP         R3, #0 
    /*0001f2a0*/ BEQ         VI_GetChnFrame_x1f4f8
    /*0001f2a4*/ LDR         R1, [SP, #16] 
    /*0001f2a8*/ MOV         R0, R8 
    /*0001f2ac*/ BL          0x000000000001F2AC          @ VI_AbnormalVerifyAfterWait [R_ARM_CALL: .text+0x4208] 
    /*0001f2b0*/ SUBS        R4, R0, #0 
    /*0001f2b4*/ BNE         VI_GetChnFrame_x1f170
    /*0001f2b8*/ LDR         R0, [SP, #20] 
    /*0001f2bc*/ BL          0x000000000001F2BC          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001f2c0*/ CMP         R0, #0 
    /*0001f2c4*/ STREQ       SL, [SP, #12] 
    /*0001f2c8*/ MOVEQ       R3, #1024                   @ 0x400 
    /*0001f2cc*/ BNE         VI_GetChnFrame_x1f3ec
    VI_GetChnFrame_x1f2d0:
    /*0001f2d0*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8e20] 
    /*0001f2d4*/ STR         R3, [SP] 
    /*0001f2d8*/ STR         R9, [SP, #8] 
    /*0001f2dc*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8e20] 
    /*0001f2e0*/ STR         R8, [SP, #4] 
    /*0001f2e4*/ MOV         R1, #16 
    /*0001f2e8*/ LDR         R3, [PC, #672]              @ 0x000000000001f590 
    /*0001f2ec*/ MOV         R0, #3 
    /*0001f2f0*/ BL          0x000000000001F2F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_GetChnFrame_x1f2f4:
    /*0001f2f4*/ MOVW        R4, #32782                  @ 0x800e 
    /*0001f2f8*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001f2fc*/ B           VI_GetChnFrame_x1f170
    VI_GetChnFrame_x1f300:
    /*0001f300*/ CMN         SL, #1 
    /*0001f304*/ MOV         R3, #36                     @ 0x24 
    /*0001f308*/ BNE         VI_GetChnFrame_x1f4dc
    /*0001f30c*/ MLA         R9, R3, R9, R6 
    /*0001f310*/ SUB         R4, R4, #64                 @ 0x40 
    /*0001f314*/ LDR         SL, [SP, #16] 
    /*0001f318*/ ADD         R6, R5, R4 
    /*0001f31c*/ MOVW        R5, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x419c] 
    /*0001f320*/ MOVT        R5, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x419c] 
    /*0001f324*/ ADD         R9, R9, #148                @ 0x94 
    VI_GetChnFrame_x1f328:
    /*0001f328*/ MOV         R0, R9 
    /*0001f32c*/ BL          0x000000000001F32C          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001f330*/ CMP         R0, #0 
    /*0001f334*/ BNE         VI_GetChnFrame_x1f3f0
    /*0001f338*/ MOV         R0, FP 
    /*0001f33c*/ BL          0x000000000001F33C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001f340*/ B           VI_GetChnFrame_x1f350
    VI_GetChnFrame_x1f344:
    /*0001f344*/ BL          0x000000000001F344          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0001f348*/ CMP         R0, #0 
    /*0001f34c*/ BLT         VI_GetChnFrame_x1f3a8
    VI_GetChnFrame_x1f350:
    /*0001f350*/ ADD         R0, SP, #36                 @ 0x24 
    /*0001f354*/ BL          0x000000000001F354          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0001f358*/ MOV         R3, #100                    @ 0x64 
    /*0001f35c*/ ADD         R2, SP, #36                 @ 0x24 
    /*0001f360*/ MOV         R1, R5 
    /*0001f364*/ CMP         R0, #0 
    /*0001f368*/ MOV         R0, R6 
    /*0001f36c*/ BEQ         VI_GetChnFrame_x1f344
    /*0001f370*/ MOV         R0, FP 
    /*0001f374*/ BL          0x000000000001F374          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001f378*/ CMP         R0, #0 
    /*0001f37c*/ BNE         VI_GetChnFrame_x1f184
    /*0001f380*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0001f384*/ CMP         R3, #0 
    /*0001f388*/ BEQ         VI_GetChnFrame_x1f4f8
    /*0001f38c*/ MOV         R1, SL 
    /*0001f390*/ MOV         R0, R8 
    /*0001f394*/ BL          0x000000000001F394          @ VI_AbnormalVerifyAfterWait [R_ARM_CALL: .text+0x4208] 
    /*0001f398*/ CMP         R0, #0 
    /*0001f39c*/ BEQ         VI_GetChnFrame_x1f328
    /*0001f3a0*/ MOV         R4, R0 
    /*0001f3a4*/ B           VI_GetChnFrame_x1f170
    VI_GetChnFrame_x1f3a8:
    /*0001f3a8*/ MOV         R0, FP 
    /*0001f3ac*/ BL          0x000000000001F3AC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001f3b0*/ CMP         R0, #0 
    /*0001f3b4*/ BNE         VI_GetChnFrame_x1f184
    /*0001f3b8*/ LDR         R3, [PC, #464]              @ 0x000000000001f590 
    /*0001f3bc*/ MOVW        R1, #1096                   @ 0x448 
    VI_GetChnFrame_x1f3c0:
    /*0001f3c0*/ STR         R1, [SP, #8] 
    /*0001f3c4*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c40] 
    /*0001f3c8*/ STR         R1, [SP] 
    /*0001f3cc*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c40] 
    /*0001f3d0*/ STR         R3, [SP, #4] 
    /*0001f3d4*/ MOV         R1, #16 
    /*0001f3d8*/ MOV         R0, #3 
    /*0001f3dc*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001f3e0*/ BL          0x000000000001F3E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f3e4*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001f3e8*/ B           VI_GetChnFrame_x1f170
    VI_GetChnFrame_x1f3ec:
    /*0001f3ec*/ LDR         R9, [SP, #20] 
    VI_GetChnFrame_x1f3f0:
    /*0001f3f0*/ ADD         R1, SP, #32 
    /*0001f3f4*/ LDR         R0, [SP, #28] 
    /*0001f3f8*/ BL          0x000000000001F3F8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001f3fc*/ MOV         R0, R9 
    /*0001f400*/ BL          0x000000000001F400          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*0001f404*/ SUBS        R5, R0, #0 
    /*0001f408*/ BEQ         VI_GetChnFrame_x1f578
    /*0001f40c*/ SUBS        R6, R5, #336                @ 0x150 
    /*0001f410*/ BEQ         VI_GetChnFrame_x1f578
    /*0001f414*/ MOV         R1, #12 
    /*0001f418*/ MOV         R0, R6 
    /*0001f41c*/ BL          0x000000000001F41C          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001f420*/ CMP         R0, #0 
    /*0001f424*/ BNE         VI_GetChnFrame_x1f538
    VI_GetChnFrame_x1f428:
    /*0001f428*/ MOV         R1, #0 
    /*0001f42c*/ MOV         R0, R6 
    /*0001f430*/ BL          0x000000000001F430          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001f434*/ SUBS        R4, R0, #0 
    /*0001f438*/ BNE         VI_GetChnFrame_x1f510
    VI_GetChnFrame_x1f43c:
    /*0001f43c*/ MOV         R2, #336                    @ 0x150 
    /*0001f440*/ MOV         R1, R6 
    /*0001f444*/ ADD         R0, SP, #56                 @ 0x38 
    /*0001f448*/ BL          0x000000000001F448          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001f44c*/ MOV         R1, R5 
    /*0001f450*/ MOV         R0, R9 
    /*0001f454*/ BL          0x000000000001F454          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*0001f458*/ ADD         R1, SP, #32 
    /*0001f45c*/ LDR         R0, [SP, #28] 
    /*0001f460*/ BL          0x000000000001F460          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001f464*/ ADD         R1, SP, #56                 @ 0x38 
    /*0001f468*/ MOV         R0, R7 
    /*0001f46c*/ MOV         R2, #336                    @ 0x150 
    /*0001f470*/ BL          0x000000000001F470          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0001f474*/ CMP         R0, #0 
    /*0001f478*/ BEQ         VI_GetChnFrame_x1f170
    /*0001f47c*/ LDR         R3, [PC, #268]              @ 0x000000000001f590 
    /*0001f480*/ MOVW        R1, #1169                   @ 0x491 
    /*0001f484*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8e78] 
    /*0001f488*/ STR         R1, [SP] 
    /*0001f48c*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8e78] 
    /*0001f490*/ MOV         R1, #16 
    /*0001f494*/ STR         R3, [SP, #4] 
    /*0001f498*/ MOV         R0, #3 
    /*0001f49c*/ MOVW        R4, #32784                  @ 0x8010 
    /*0001f4a0*/ BL          0x000000000001F4A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f4a4*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001f4a8*/ B           VI_GetChnFrame_x1f170
    VI_GetChnFrame_x1f4ac:
    /*0001f4ac*/ MOV         R3, #992                    @ 0x3e0 
    /*0001f4b0*/ STR         R8, [SP, #4] 
    /*0001f4b4*/ STR         R3, [SP] 
    /*0001f4b8*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x85f0] 
    /*0001f4bc*/ LDR         R3, [PC, #204]              @ 0x000000000001f590 
    /*0001f4c0*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x85f0] 
    /*0001f4c4*/ MOV         R1, #16 
    /*0001f4c8*/ MOV         R0, #3 
    /*0001f4cc*/ MOVW        R4, #32773                  @ 0x8005 
    /*0001f4d0*/ BL          0x000000000001F4D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f4d4*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001f4d8*/ B           VI_GetChnFrame_x1f170
    VI_GetChnFrame_x1f4dc:
    /*0001f4dc*/ MLA         R9, R3, R9, R6 
    /*0001f4e0*/ ADD         R9, R9, #148                @ 0x94 
    /*0001f4e4*/ MOV         R0, R9 
    /*0001f4e8*/ BL          0x000000000001F4E8          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001f4ec*/ CMP         R0, #0 
    /*0001f4f0*/ BEQ         VI_GetChnFrame_x1f2f4
    /*0001f4f4*/ B           VI_GetChnFrame_x1f3f0
    VI_GetChnFrame_x1f4f8:
    /*0001f4f8*/ MOVW        R4, #32784                  @ 0x8010 
    /*0001f4fc*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001f500*/ B           VI_GetChnFrame_x1f170
    VI_GetChnFrame_x1f504:
    /*0001f504*/ STR         SL, [SP, #12] 
    /*0001f508*/ MOVW        R3, #1049                   @ 0x419 
    /*0001f50c*/ B           VI_GetChnFrame_x1f2d0
    VI_GetChnFrame_x1f510:
    /*0001f510*/ MOVW        R3, #1159                   @ 0x487 
    /*0001f514*/ STR         R8, [SP, #4] 
    /*0001f518*/ STR         R3, [SP] 
    /*0001f51c*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d04] 
    /*0001f520*/ LDR         R3, [PC, #104]              @ 0x000000000001f590 
    /*0001f524*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d04] 
    /*0001f528*/ MOV         R1, #16 
    /*0001f52c*/ MOV         R0, #3 
    /*0001f530*/ BL          0x000000000001F530          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f534*/ B           VI_GetChnFrame_x1f43c
    VI_GetChnFrame_x1f538:
    /*0001f538*/ MOV         R3, #1152                   @ 0x480 
    /*0001f53c*/ STR         R8, [SP, #4] 
    /*0001f540*/ STR         R3, [SP] 
    /*0001f544*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ccc] 
    /*0001f548*/ LDR         R3, [PC, #64]               @ 0x000000000001f590 
    /*0001f54c*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ccc] 
    /*0001f550*/ MOV         R1, #16 
    /*0001f554*/ MOV         R0, #3 
    /*0001f558*/ BL          0x000000000001F558          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f55c*/ B           VI_GetChnFrame_x1f428
    VI_GetChnFrame_x1f560:
    /*0001f560*/ MOVW        R3, #975                    @ 0x3cf 
    /*0001f564*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c04] 
    /*0001f568*/ STR         SL, [SP, #4] 
    /*0001f56c*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c04] 
    /*0001f570*/ STR         R3, [SP] 
    /*0001f574*/ B           VI_GetChnFrame_x1f088
    VI_GetChnFrame_x1f578:
    /*0001f578*/ ADD         R1, SP, #32 
    /*0001f57c*/ LDR         R0, [SP, #28] 
    /*0001f580*/ MOVW        R4, #32782                  @ 0x800e 
    /*0001f584*/ BL          0x000000000001F584          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001f588*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001f58c*/ B           VI_GetChnFrame_x1f170
    /*0001f590*/ ANDEQ       R1, R0, IP, LSL #6 
FUNC_END VI_GetChnFrame


FUNC_BEGIN VI_SetDevTimingAttr
    /*0001f594*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001f598*/ SUB         SP, SP, #16 
    /*0001f59c*/ MOV         R5, R1 
    /*0001f5a0*/ MOV         R6, R0 
    /*0001f5a4*/ BL          0x000000000001F5A4          @ VI_CheckDevId [R_ARM_CALL: .text+0x6d60] 
    /*0001f5a8*/ SUBS        R4, R0, #0 
    /*0001f5ac*/ BEQ         VI_SetDevTimingAttr_x1f5bc
    VI_SetDevTimingAttr_x1f5b0:
    /*0001f5b0*/ MOV         R0, R4 
    /*0001f5b4*/ ADD         SP, SP, #16 
    /*0001f5b8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SetDevTimingAttr_x1f5bc:
    /*0001f5bc*/ MOV         R0, R5 
    /*0001f5c0*/ BL          0x000000000001F5C0          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001f5c4*/ SUBS        R4, R0, #0 
    /*0001f5c8*/ BNE         VI_SetDevTimingAttr_x1f5b0
    /*0001f5cc*/ MOVW        R4, #0                      @ g_astDevSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x768] 
    /*0001f5d0*/ LSL         R7, R6, #3 
    /*0001f5d4*/ MOVT        R4, #0                      @ g_astDevSynchCtx [R_ARM_MOVT_ABS: .bss+0x768] 
    /*0001f5d8*/ ADD         R8, R7, R4 
    /*0001f5dc*/ MOV         R0, R8 
    /*0001f5e0*/ BL          0x000000000001F5E0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001f5e4*/ CMP         R0, #0 
    /*0001f5e8*/ BNE         VI_SetDevTimingAttr_x1f6b8
    /*0001f5ec*/ ADD         R7, R7, #4 
    /*0001f5f0*/ ADD         R1, SP, #12 
    /*0001f5f4*/ ADD         R7, R7, R4 
    /*0001f5f8*/ MOV         R0, R7 
    /*0001f5fc*/ BL          0x000000000001F5FC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001f600*/ LDR         R3, [R5] 
    /*0001f604*/ CMP         R3, #1 
    /*0001f608*/ BLS         VI_SetDevTimingAttr_x1f658
    /*0001f60c*/ STR         R3, [SP, #4] 
    /*0001f610*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8f10] 
    /*0001f614*/ MOVW        R3, #1199                   @ 0x4af 
    /*0001f618*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8f10] 
    /*0001f61c*/ STR         R3, [SP] 
    /*0001f620*/ MOV         R1, #16 
    /*0001f624*/ LDR         R3, [PC, #152]              @ 0x000000000001f6c4 
    /*0001f628*/ MOV         R0, #3 
    /*0001f62c*/ BL          0x000000000001F62C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f630*/ MOVW        R4, #32771                  @ 0x8003 
    /*0001f634*/ MOVT        R4, #40976                  @ 0xa010 
    VI_SetDevTimingAttr_x1f638:
    /*0001f638*/ ADD         R1, SP, #12 
    /*0001f63c*/ MOV         R0, R7 
    /*0001f640*/ BL          0x000000000001F640          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001f644*/ MOV         R0, R8 
    /*0001f648*/ BL          0x000000000001F648          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001f64c*/ MOV         R0, R4 
    /*0001f650*/ ADD         SP, SP, #16 
    /*0001f654*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_SetDevTimingAttr_x1f658:
    /*0001f658*/ MOVW        R2, #0                      @ g_astDevMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x778] 
    /*0001f65c*/ MOVT        R2, #0                      @ g_astDevMkpCtx [R_ARM_MOVT_ABS: .bss+0x778] 
    /*0001f660*/ MOV         R3, #36                     @ 0x24 
    /*0001f664*/ MLA         R3, R3, R6, R2 
    /*0001f668*/ LDR         R3, [R3, #4] 
    /*0001f66c*/ CMP         R3, #1 
    /*0001f670*/ BEQ         VI_SetDevTimingAttr_x1f6a4
    /*0001f674*/ MOVW        R3, #1206                   @ 0x4b6 
    /*0001f678*/ STR         R6, [SP, #4] 
    /*0001f67c*/ STR         R3, [SP] 
    /*0001f680*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8f54] 
    /*0001f684*/ LDR         R3, [PC, #56]               @ 0x000000000001f6c4 
    /*0001f688*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8f54] 
    /*0001f68c*/ MOV         R1, #16 
    /*0001f690*/ MOV         R0, #3 
    /*0001f694*/ MOVW        R4, #32832                  @ 0x8040 
    /*0001f698*/ BL          0x000000000001F698          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f69c*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001f6a0*/ B           VI_SetDevTimingAttr_x1f638
    VI_SetDevTimingAttr_x1f6a4:
    /*0001f6a4*/ MOV         R1, R5 
    /*0001f6a8*/ MOV         R0, R6 
    /*0001f6ac*/ BL          0x000000000001F6AC          @ VI_DRV_SetTimgAttr [R_ARM_CALL: .text+0x31ae8] 
    /*0001f6b0*/ MOV         R4, R0 
    /*0001f6b4*/ B           VI_SetDevTimingAttr_x1f638
    VI_SetDevTimingAttr_x1f6b8:
    /*0001f6b8*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001f6bc*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001f6c0*/ B           VI_SetDevTimingAttr_x1f5b0
    /*0001f6c4*/ ANDEQ       R1, R0, IP, LSL R3 
FUNC_END VI_SetDevTimingAttr


FUNC_BEGIN VI_GetDevTimingAttr
    /*0001f6c8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001f6cc*/ MOV         R5, R1 
    /*0001f6d0*/ MOV         R6, R0 
    /*0001f6d4*/ BL          0x000000000001F6D4          @ VI_CheckDevId [R_ARM_CALL: .text+0x6d60] 
    /*0001f6d8*/ SUBS        R4, R0, #0 
    /*0001f6dc*/ BEQ         VI_GetDevTimingAttr_x1f6e8
    VI_GetDevTimingAttr_x1f6e0:
    /*0001f6e0*/ MOV         R0, R4 
    /*0001f6e4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetDevTimingAttr_x1f6e8:
    /*0001f6e8*/ MOV         R0, R5 
    /*0001f6ec*/ BL          0x000000000001F6EC          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001f6f0*/ SUBS        R4, R0, #0 
    /*0001f6f4*/ BNE         VI_GetDevTimingAttr_x1f6e0
    /*0001f6f8*/ MOVW        R0, #0                      @ g_astDevSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x768] 
    /*0001f6fc*/ MOVT        R0, #0                      @ g_astDevSynchCtx [R_ARM_MOVT_ABS: .bss+0x768] 
    /*0001f700*/ ADD         R7, R0, R6, LSL #3 
    /*0001f704*/ MOV         R0, R7 
    /*0001f708*/ BL          0x000000000001F708          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001f70c*/ CMP         R0, #0 
    /*0001f710*/ BNE         VI_GetDevTimingAttr_x1f730
    /*0001f714*/ MOV         R1, R5 
    /*0001f718*/ MOV         R0, R6 
    /*0001f71c*/ BL          0x000000000001F71C          @ VI_DRV_GetTimgAttr [R_ARM_CALL: .text+0x31b1c] 
    /*0001f720*/ MOV         R0, R7 
    /*0001f724*/ BL          0x000000000001F724          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001f728*/ MOV         R0, R4 
    /*0001f72c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetDevTimingAttr_x1f730:
    /*0001f730*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001f734*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001f738*/ B           VI_GetDevTimingAttr_x1f6e0
FUNC_END VI_GetDevTimingAttr


FUNC_BEGIN VI_SetPipeDumpAttr
    /*0001f73c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001f740*/ SUB         SP, SP, #20 
    /*0001f744*/ MOV         R6, R1 
    /*0001f748*/ MOV         R7, R0 
    /*0001f74c*/ BL          0x000000000001F74C          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*0001f750*/ SUBS        R4, R0, #0 
    /*0001f754*/ BEQ         VI_SetPipeDumpAttr_x1f764
    VI_SetPipeDumpAttr_x1f758:
    /*0001f758*/ MOV         R0, R4 
    /*0001f75c*/ ADD         SP, SP, #20 
    /*0001f760*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SetPipeDumpAttr_x1f764:
    /*0001f764*/ MOV         R0, R6 
    /*0001f768*/ BL          0x000000000001F768          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001f76c*/ SUBS        R4, R0, #0 
    /*0001f770*/ BNE         VI_SetPipeDumpAttr_x1f758
    /*0001f774*/ MOV         R1, R6 
    /*0001f778*/ MOV         R0, R7 
    /*0001f77c*/ BL          0x000000000001F77C          @ VI_DRV_CheckPipeDumpAttr [R_ARM_CALL: .text+0x329f0] 
    /*0001f780*/ SUBS        R4, R0, #0 
    /*0001f784*/ BNE         VI_SetPipeDumpAttr_x1f758
    /*0001f788*/ MOV         R5, #176                    @ 0xb0 
    /*0001f78c*/ MOVW        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001f790*/ MUL         R5, R5, R7 
    /*0001f794*/ MOVT        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001f798*/ ADD         R9, R5, #100                @ 0x64 
    /*0001f79c*/ ADD         R9, R8, R9 
    /*0001f7a0*/ MOV         R0, R9 
    /*0001f7a4*/ BL          0x000000000001F7A4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001f7a8*/ CMP         R0, #0 
    /*0001f7ac*/ BNE         VI_SetPipeDumpAttr_x1f914
    /*0001f7b0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001f7b4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001f7b8*/ LDR         SL, [R3, R7, LSL #2] 
    /*0001f7bc*/ CMP         SL, #0 
    /*0001f7c0*/ BEQ         VI_SetPipeDumpAttr_x1f8c4
    /*0001f7c4*/ MOV         R0, R7 
    /*0001f7c8*/ BL          0x000000000001F7C8          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0001f7cc*/ MOV         FP, R0 
    /*0001f7d0*/ MOV         R0, R7 
    /*0001f7d4*/ BL          0x000000000001F7D4          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*0001f7d8*/ SUB         R0, R0, #2 
    /*0001f7dc*/ CLZ         R0, R0 
    /*0001f7e0*/ LSR         R0, R0, #5 
    /*0001f7e4*/ CMP         FP, #1 
    /*0001f7e8*/ ORRHI       R0, R0, #1 
    /*0001f7ec*/ CMP         R0, #0 
    /*0001f7f0*/ BEQ         VI_SetPipeDumpAttr_x1f804
    /*0001f7f4*/ ADD         R3, SL, #12288              @ 0x3000 
    /*0001f7f8*/ LDR         R2, [R3, #2216]             @ 0x8a8 
    /*0001f7fc*/ CMP         R2, #1 
    /*0001f800*/ BEQ         VI_SetPipeDumpAttr_x1f8f4
    VI_SetPipeDumpAttr_x1f804:
    /*0001f804*/ ADD         R5, R5, #140                @ 0x8c 
    /*0001f808*/ ADD         R1, SP, #12 
    /*0001f80c*/ ADD         R8, R8, R5 
    /*0001f810*/ ADD         R5, SL, #76                 @ 0x4c 
    /*0001f814*/ MOV         R0, R8 
    /*0001f818*/ BL          0x000000000001F818          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001f81c*/ B           VI_SetPipeDumpAttr_x1f838
    VI_SetPipeDumpAttr_x1f820:
    /*0001f820*/ SUBS        FP, FP, #580                @ 0x244 
    /*0001f824*/ BEQ         VI_SetPipeDumpAttr_x1f860
    /*0001f828*/ BL          0x000000000001F828          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*0001f82c*/ MOV         R0, FP 
    /*0001f830*/ MOV         R1, #0 
    /*0001f834*/ BL          0x000000000001F834          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    VI_SetPipeDumpAttr_x1f838:
    /*0001f838*/ MOV         R0, R5 
    /*0001f83c*/ BL          0x000000000001F83C          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001f840*/ CMP         R0, #0 
    /*0001f844*/ MOV         R0, R5 
    /*0001f848*/ BEQ         VI_SetPipeDumpAttr_x1f888
    /*0001f84c*/ BL          0x000000000001F84C          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*0001f850*/ SUBS        FP, R0, #0 
    /*0001f854*/ MOV         R0, R5 
    /*0001f858*/ MOV         R1, FP 
    /*0001f85c*/ BNE         VI_SetPipeDumpAttr_x1f820
    VI_SetPipeDumpAttr_x1f860:
    /*0001f860*/ MOVW        R3, #1293                   @ 0x50d 
    /*0001f864*/ STR         R7, [SP, #4] 
    /*0001f868*/ STR         R3, [SP] 
    /*0001f86c*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8fdc] 
    /*0001f870*/ LDR         R3, [PC, #168]              @ 0x000000000001f920 
    /*0001f874*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8fdc] 
    /*0001f878*/ MOV         R1, #16 
    /*0001f87c*/ MOV         R0, #3 
    /*0001f880*/ BL          0x000000000001F880          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f884*/ MVN         R4, #0 
    VI_SetPipeDumpAttr_x1f888:
    /*0001f888*/ LDR         R3, [R6] 
    /*0001f88c*/ MOV         R1, R6 
    /*0001f890*/ MOV         R0, R7 
    /*0001f894*/ CMP         R3, #1 
    /*0001f898*/ ADDEQ       SL, SL, #12288              @ 0x3000 
    /*0001f89c*/ MOVEQ       R2, #0 
    /*0001f8a0*/ STREQ       R3, [SL, #2216]             @ 0x8a8 
    /*0001f8a4*/ STREQ       R2, [SL, #3128]             @ 0xc38 
    /*0001f8a8*/ BL          0x000000000001F8A8          @ VI_DRV_SetPipeDumpAttr [R_ARM_CALL: .text+0x32a84] 
    /*0001f8ac*/ ADD         R1, SP, #12 
    /*0001f8b0*/ MOV         R0, R8 
    /*0001f8b4*/ BL          0x000000000001F8B4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_SetPipeDumpAttr_x1f8b8:
    /*0001f8b8*/ MOV         R0, R9 
    /*0001f8bc*/ BL          0x000000000001F8BC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001f8c0*/ B           VI_SetPipeDumpAttr_x1f758
    VI_SetPipeDumpAttr_x1f8c4:
    /*0001f8c4*/ MOVW        R3, #1265                   @ 0x4f1 
    /*0001f8c8*/ STR         R7, [SP, #4] 
    /*0001f8cc*/ STR         R3, [SP] 
    /*0001f8d0*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8fa0] 
    /*0001f8d4*/ LDR         R3, [PC, #68]               @ 0x000000000001f920 
    /*0001f8d8*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8fa0] 
    /*0001f8dc*/ MOV         R1, #16 
    /*0001f8e0*/ MOV         R0, #3 
    /*0001f8e4*/ MOVW        R4, #32773                  @ 0x8005 
    /*0001f8e8*/ BL          0x000000000001F8E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f8ec*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001f8f0*/ B           VI_SetPipeDumpAttr_x1f8b8
    VI_SetPipeDumpAttr_x1f8f4:
    /*0001f8f4*/ ADD         R1, SL, #15360              @ 0x3c00 
    /*0001f8f8*/ STR         R4, [R3, #2216]             @ 0x8a8 
    /*0001f8fc*/ ADD         R1, R1, #56                 @ 0x38 
    /*0001f900*/ MOV         R0, R7 
    /*0001f904*/ BL          0x000000000001F904          @ VI_WaitCaptureFrameStop [R_ARM_CALL: .text+0x4660] 
    /*0001f908*/ MOV         R0, R7 
    /*0001f90c*/ BL          0x000000000001F90C          @ VI_ReleasePipeCaptureVB [R_ARM_CALL: .text+0x7efc] 
    /*0001f910*/ B           VI_SetPipeDumpAttr_x1f804
    VI_SetPipeDumpAttr_x1f914:
    /*0001f914*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001f918*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001f91c*/ B           VI_SetPipeDumpAttr_x1f758
    /*0001f920*/ ANDEQ       R1, R0, R0, LSR R3 
FUNC_END VI_SetPipeDumpAttr


FUNC_BEGIN VI_GetPipeDumpAttr
    /*0001f924*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001f928*/ SUB         SP, SP, #12 
    /*0001f92c*/ MOV         R5, R1 
    /*0001f930*/ MOV         R6, R0 
    /*0001f934*/ BL          0x000000000001F934          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*0001f938*/ SUBS        R4, R0, #0 
    /*0001f93c*/ BEQ         VI_GetPipeDumpAttr_x1f94c
    VI_GetPipeDumpAttr_x1f940:
    /*0001f940*/ MOV         R0, R4 
    /*0001f944*/ ADD         SP, SP, #12 
    /*0001f948*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeDumpAttr_x1f94c:
    /*0001f94c*/ MOV         R0, R5 
    /*0001f950*/ BL          0x000000000001F950          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001f954*/ SUBS        R4, R0, #0 
    /*0001f958*/ BNE         VI_GetPipeDumpAttr_x1f940
    /*0001f95c*/ LDR         R3, [PC, #136]              @ 0x000000000001f9ec 
    /*0001f960*/ MOV         R7, #176                    @ 0xb0 
    /*0001f964*/ MLA         R7, R7, R6, R3 
    /*0001f968*/ MOV         R0, R7 
    /*0001f96c*/ BL          0x000000000001F96C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001f970*/ CMP         R0, #0 
    /*0001f974*/ BNE         VI_GetPipeDumpAttr_x1f9e0
    /*0001f978*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001f97c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001f980*/ LDR         R3, [R3, R6, LSL #2] 
    /*0001f984*/ CMP         R3, #0 
    /*0001f988*/ BEQ         VI_GetPipeDumpAttr_x1f9b0
    /*0001f98c*/ MOV         R1, R5 
    /*0001f990*/ MOV         R0, R6 
    /*0001f994*/ BL          0x000000000001F994          @ VI_DRV_GetPipeDumpAttr [R_ARM_CALL: .text+0x32adc] 
    /*0001f998*/ MOV         R4, R0 
    VI_GetPipeDumpAttr_x1f99c:
    /*0001f99c*/ MOV         R0, R7 
    /*0001f9a0*/ BL          0x000000000001F9A0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001f9a4*/ MOV         R0, R4 
    /*0001f9a8*/ ADD         SP, SP, #12 
    /*0001f9ac*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetPipeDumpAttr_x1f9b0:
    /*0001f9b0*/ MOVW        R3, #1331                   @ 0x533 
    /*0001f9b4*/ STR         R6, [SP, #4] 
    /*0001f9b8*/ STR         R3, [SP] 
    /*0001f9bc*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x905c] 
    /*0001f9c0*/ LDR         R3, [PC, #40]               @ 0x000000000001f9f0 
    /*0001f9c4*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x905c] 
    /*0001f9c8*/ MOV         R1, #16 
    /*0001f9cc*/ MOV         R0, #3 
    /*0001f9d0*/ MOVW        R4, #32773                  @ 0x8005 
    /*0001f9d4*/ BL          0x000000000001F9D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f9d8*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001f9dc*/ B           VI_GetPipeDumpAttr_x1f99c
    VI_GetPipeDumpAttr_x1f9e0:
    /*0001f9e0*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001f9e4*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001f9e8*/ B           VI_GetPipeDumpAttr_x1f940
    /*0001f9ec*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0001f9f0*/ ANDEQ       R1, R0, R4, ASR #6 
FUNC_END VI_GetPipeDumpAttr


FUNC_BEGIN VI_ReleasePipeBNRCaptureVB
    /*0001f9f4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001f9f8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001f9fc*/ PUSH        {R4, R5, R6, LR} 
    /*0001fa00*/ LDR         R5, [R3, R0, LSL #2] 
    /*0001fa04*/ ADD         R4, R5, #36864              @ 0x9000 
    /*0001fa08*/ LDR         R3, [R4, #1016]             @ 0x3f8 
    /*0001fa0c*/ CMP         R3, #0 
    /*0001fa10*/ BNE         VI_ReleasePipeBNRCaptureVB_x1fa3c
    VI_ReleasePipeBNRCaptureVB_x1fa14:
    /*0001fa14*/ LDR         R3, [R4, #1464]             @ 0x5b8 
    /*0001fa18*/ CMP         R3, #0 
    /*0001fa1c*/ POPEQ       {R4, R5, R6, PC} 
    /*0001fa20*/ ADD         R0, R5, #37888              @ 0x9400 
    /*0001fa24*/ MOV         R1, #0 
    /*0001fa28*/ ADD         R0, R0, #8 
    /*0001fa2c*/ BL          0x000000000001FA2C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001fa30*/ MOV         R3, #0 
    /*0001fa34*/ STR         R3, [R4, #1464]             @ 0x5b8 
    /*0001fa38*/ POP         {R4, R5, R6, PC} 
    VI_ReleasePipeBNRCaptureVB_x1fa3c:
    /*0001fa3c*/ ADD         R0, R5, #37376              @ 0x9200 
    /*0001fa40*/ MOV         R1, #0 
    /*0001fa44*/ ADD         R0, R0, #72                 @ 0x48 
    /*0001fa48*/ BL          0x000000000001FA48          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001fa4c*/ MOV         R3, #0 
    /*0001fa50*/ STR         R3, [R4, #1016]             @ 0x3f8 
    /*0001fa54*/ B           VI_ReleasePipeBNRCaptureVB_x1fa14
FUNC_END VI_ReleasePipeBNRCaptureVB


FUNC_BEGIN VI_GetPipeBnrRaw
    /*0001fa58*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001fa5c*/ MOV         R8, R0 
    /*0001fa60*/ SUB         SP, SP, #396                @ 0x18c 
    /*0001fa64*/ MOV         R0, R1 
    /*0001fa68*/ MOV         SL, R1 
    /*0001fa6c*/ MOV         FP, R2 
    /*0001fa70*/ BL          0x000000000001FA70          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0001fa74*/ SUBS        R4, R0, #0 
    /*0001fa78*/ BEQ         VI_GetPipeBnrRaw_x1fa88
    VI_GetPipeBnrRaw_x1fa7c:
    /*0001fa7c*/ MOV         R0, R4 
    /*0001fa80*/ ADD         SP, SP, #396                @ 0x18c 
    /*0001fa84*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_GetPipeBnrRaw_x1fa88:
    /*0001fa88*/ MOV         R0, R8 
    /*0001fa8c*/ BL          0x000000000001FA8C          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*0001fa90*/ SUBS        R4, R0, #0 
    /*0001fa94*/ BNE         VI_GetPipeBnrRaw_x1fa7c
    /*0001fa98*/ CMN         FP, #1 
    /*0001fa9c*/ BLT         VI_GetPipeBnrRaw_x1ff80
    /*0001faa0*/ MOV         R2, #336                    @ 0x150 
    /*0001faa4*/ MOV         R1, SL 
    /*0001faa8*/ MOV         R0, #1 
    /*0001faac*/ STRB        R4, [SP, #56]               @ 0x38 
    /*0001fab0*/ BL          0x000000000001FAB0          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*0001fab4*/ CMP         R0, #0 
    /*0001fab8*/ BNE         VI_GetPipeBnrRaw_x1faf4
    VI_GetPipeBnrRaw_x1fabc:
    /*0001fabc*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d84] 
    /*0001fac0*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d84] 
    /*0001fac4*/ MOVW        R3, #1390                   @ 0x56e 
    /*0001fac8*/ STR         R8, [SP, #4] 
    /*0001facc*/ STR         R3, [SP] 
    VI_GetPipeBnrRaw_x1fad0:
    /*0001fad0*/ LDR         R3, [PC, #1240]             @ 0x000000000001ffb0 
    /*0001fad4*/ MOV         R1, #16 
    /*0001fad8*/ MOV         R0, #3 
    /*0001fadc*/ MOVW        R4, #32771                  @ 0x8003 
    /*0001fae0*/ BL          0x000000000001FAE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fae4*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001fae8*/ MOV         R0, R4 
    /*0001faec*/ ADD         SP, SP, #396                @ 0x18c 
    /*0001faf0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_GetPipeBnrRaw_x1faf4:
    /*0001faf4*/ ADD         R0, SL, #332                @ 0x14c 
    /*0001faf8*/ MOV         R2, #1 
    /*0001fafc*/ ADD         R0, R0, #3 
    /*0001fb00*/ ADD         R1, SP, #56                 @ 0x38 
    /*0001fb04*/ BL          0x000000000001FB04          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0001fb08*/ CMP         R0, #0 
    /*0001fb0c*/ BNE         VI_GetPipeBnrRaw_x1fabc
    /*0001fb10*/ MOV         R4, #176                    @ 0xb0 
    /*0001fb14*/ MOVW        R6, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0001fb18*/ MUL         R4, R4, R8 
    /*0001fb1c*/ MOVT        R6, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*0001fb20*/ ADD         R9, R4, #100                @ 0x64 
    /*0001fb24*/ ADD         R9, R6, R9 
    /*0001fb28*/ MOV         R0, R9 
    /*0001fb2c*/ BL          0x000000000001FB2C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001fb30*/ SUBS        R5, R0, #0 
    /*0001fb34*/ BNE         VI_GetPipeBnrRaw_x1fd00
    /*0001fb38*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0001fb3c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0001fb40*/ LDR         R7, [R3, R8, LSL #2] 
    /*0001fb44*/ CMP         R7, #0 
    /*0001fb48*/ BEQ         VI_GetPipeBnrRaw_x1fed8
    /*0001fb4c*/ ADD         R3, R7, #36864              @ 0x9000 
    /*0001fb50*/ LDR         R3, [R3, #528]              @ 0x210 
    /*0001fb54*/ CMP         R3, #0 
    /*0001fb58*/ BNE         VI_GetPipeBnrRaw_x1fb9c
    /*0001fb5c*/ MOVW        R3, #1406                   @ 0x57e 
    /*0001fb60*/ STR         R8, [SP, #4] 
    /*0001fb64*/ STR         R3, [SP] 
    /*0001fb68*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9098] 
    /*0001fb6c*/ LDR         R3, [PC, #1084]             @ 0x000000000001ffb0 
    /*0001fb70*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9098] 
    /*0001fb74*/ MOV         R1, #16 
    /*0001fb78*/ MOV         R0, #3 
    /*0001fb7c*/ BL          0x000000000001FB7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fb80*/ MOVW        R4, #32784                  @ 0x8010 
    /*0001fb84*/ MOVT        R4, #40976                  @ 0xa010 
    VI_GetPipeBnrRaw_x1fb88:
    /*0001fb88*/ MOV         R0, R9 
    /*0001fb8c*/ BL          0x000000000001FB8C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001fb90*/ MOV         R0, R4 
    /*0001fb94*/ ADD         SP, SP, #396                @ 0x18c 
    /*0001fb98*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_GetPipeBnrRaw_x1fb9c:
    /*0001fb9c*/ ADD         R3, R4, #140                @ 0x8c 
    /*0001fba0*/ ADD         R1, SP, #32 
    /*0001fba4*/ ADD         R3, R6, R3 
    /*0001fba8*/ STR         R3, [SP, #28] 
    /*0001fbac*/ MOV         R0, R3 
    /*0001fbb0*/ BL          0x000000000001FBB0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001fbb4*/ ADD         R3, R6, R4 
    /*0001fbb8*/ LDR         R0, [SP, #28] 
    /*0001fbbc*/ ADD         R1, SP, #32 
    /*0001fbc0*/ LDR         R3, [R3, #24] 
    /*0001fbc4*/ STR         R3, [SP, #20] 
    /*0001fbc8*/ BL          0x000000000001FBC8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001fbcc*/ LDR         R2, [SP, #20] 
    /*0001fbd0*/ CMP         FP, #0 
    /*0001fbd4*/ MOV         R3, #6 
    /*0001fbd8*/ STR         R8, [SP, #36]               @ 0x24 
    /*0001fbdc*/ STR         R5, [SP, #40]               @ 0x28 
    /*0001fbe0*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0001fbe4*/ STR         R5, [SP, #48]               @ 0x30 
    /*0001fbe8*/ STR         R3, [SP, #52]               @ 0x34 
    /*0001fbec*/ BLE         VI_GetPipeBnrRaw_x1fd0c
    /*0001fbf0*/ ADD         R3, R7, #37376              @ 0x9200 
    /*0001fbf4*/ ADD         R3, R3, #24 
    /*0001fbf8*/ STR         R3, [SP, #24] 
    /*0001fbfc*/ MOV         R0, R3 
    /*0001fc00*/ BL          0x000000000001FC00          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001fc04*/ CMP         R0, #0 
    /*0001fc08*/ BNE         VI_GetPipeBnrRaw_x1fe20
    /*0001fc0c*/ ADD         R5, SP, #36                 @ 0x24 
    /*0001fc10*/ MOV         R0, R9 
    /*0001fc14*/ BL          0x000000000001FC14          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001fc18*/ ADD         R4, R4, #92                 @ 0x5c 
    /*0001fc1c*/ MOV         R0, R5 
    /*0001fc20*/ MOVW        R7, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x419c] 
    /*0001fc24*/ ADD         R6, R6, R4 
    /*0001fc28*/ MOVT        R7, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x419c] 
    /*0001fc2c*/ BL          0x000000000001FC2C          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0001fc30*/ MOV         R4, FP 
    /*0001fc34*/ B           VI_GetPipeBnrRaw_x1fc4c
    VI_GetPipeBnrRaw_x1fc38:
    /*0001fc38*/ BL          0x000000000001FC38          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0001fc3c*/ ADD         R3, R0, #512                @ 0x200 
    /*0001fc40*/ MOV         R4, R0 
    /*0001fc44*/ BICS        R3, R3, #512                @ 0x200 
    /*0001fc48*/ BEQ         VI_GetPipeBnrRaw_x1fc78
    VI_GetPipeBnrRaw_x1fc4c:
    /*0001fc4c*/ MOV         R0, R5 
    /*0001fc50*/ BL          0x000000000001FC50          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0001fc54*/ MOV         R3, R4 
    /*0001fc58*/ MOV         R2, R5 
    /*0001fc5c*/ MOV         R1, R7 
    /*0001fc60*/ CMP         R0, #0 
    /*0001fc64*/ MOV         R0, R6 
    /*0001fc68*/ BEQ         VI_GetPipeBnrRaw_x1fc38
    /*0001fc6c*/ MOV         R0, R4 
    /*0001fc70*/ BL          0x000000000001FC70          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*0001fc74*/ MOV         R4, R0 
    VI_GetPipeBnrRaw_x1fc78:
    /*0001fc78*/ MOV         R0, R9 
    /*0001fc7c*/ BL          0x000000000001FC7C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001fc80*/ CMP         R0, #0 
    /*0001fc84*/ BNE         VI_GetPipeBnrRaw_x1fd00
    /*0001fc88*/ CMP         R4, #0 
    /*0001fc8c*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0001fc90*/ MOVWLT      R1, #1449                   @ 0x5a9 
    /*0001fc94*/ LDRLT       R3, [PC, #788]              @ 0x000000000001ffb0 
    /*0001fc98*/ BLT         VI_GetPipeBnrRaw_x1fdd4
    /*0001fc9c*/ BEQ         VI_GetPipeBnrRaw_x1ff14
    /*0001fca0*/ CMP         R3, #0 
    /*0001fca4*/ BEQ         VI_GetPipeBnrRaw_x1ff08
    /*0001fca8*/ LDR         R1, [SP, #20] 
    /*0001fcac*/ MOV         R0, R8 
    /*0001fcb0*/ BL          0x000000000001FCB0          @ VI_AbnormalVerifyAfterWait [R_ARM_CALL: .text+0x4208] 
    /*0001fcb4*/ SUBS        R4, R0, #0 
    /*0001fcb8*/ BNE         VI_GetPipeBnrRaw_x1fb88
    /*0001fcbc*/ LDR         R0, [SP, #24] 
    /*0001fcc0*/ BL          0x000000000001FCC0          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001fcc4*/ CMP         R0, #0 
    /*0001fcc8*/ BNE         VI_GetPipeBnrRaw_x1fe20
    /*0001fccc*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x90d0] 
    /*0001fcd0*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x90d0] 
    /*0001fcd4*/ MOVW        R3, #1431                   @ 0x597 
    /*0001fcd8*/ STR         FP, [SP, #8] 
    /*0001fcdc*/ STR         R8, [SP, #4] 
    /*0001fce0*/ STR         R3, [SP] 
    VI_GetPipeBnrRaw_x1fce4:
    /*0001fce4*/ LDR         R3, [PC, #708]              @ 0x000000000001ffb0 
    /*0001fce8*/ MOV         R1, #16 
    /*0001fcec*/ MOV         R0, #3 
    /*0001fcf0*/ MOVW        R4, #32782                  @ 0x800e 
    /*0001fcf4*/ BL          0x000000000001FCF4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fcf8*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001fcfc*/ B           VI_GetPipeBnrRaw_x1fb88
    VI_GetPipeBnrRaw_x1fd00:
    /*0001fd00*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001fd04*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001fd08*/ B           VI_GetPipeBnrRaw_x1fa7c
    VI_GetPipeBnrRaw_x1fd0c:
    /*0001fd0c*/ CMN         FP, #1 
    /*0001fd10*/ ADD         R3, R7, #37376              @ 0x9200 
    /*0001fd14*/ BNE         VI_GetPipeBnrRaw_x1fe00
    /*0001fd18*/ ADD         R3, R3, #24 
    /*0001fd1c*/ ADD         R4, R4, #92                 @ 0x5c 
    /*0001fd20*/ LDR         FP, [SP, #20] 
    /*0001fd24*/ ADD         R6, R6, R4 
    /*0001fd28*/ MOV         R7, R3 
    /*0001fd2c*/ STR         R3, [SP, #24] 
    VI_GetPipeBnrRaw_x1fd30:
    /*0001fd30*/ MOV         R0, R7 
    /*0001fd34*/ BL          0x000000000001FD34          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001fd38*/ CMP         R0, #0 
    /*0001fd3c*/ BNE         VI_GetPipeBnrRaw_x1fe20
    /*0001fd40*/ MOV         R0, R9 
    /*0001fd44*/ MOVW        R5, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x419c] 
    /*0001fd48*/ BL          0x000000000001FD48          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001fd4c*/ MOVT        R5, #0                      @ VI_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x419c] 
    /*0001fd50*/ ADD         R4, SP, #36                 @ 0x24 
    /*0001fd54*/ B           VI_GetPipeBnrRaw_x1fd64
    VI_GetPipeBnrRaw_x1fd58:
    /*0001fd58*/ BL          0x000000000001FD58          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0001fd5c*/ CMP         R0, #0 
    /*0001fd60*/ BLT         VI_GetPipeBnrRaw_x1fdbc
    VI_GetPipeBnrRaw_x1fd64:
    /*0001fd64*/ MOV         R0, R4 
    /*0001fd68*/ BL          0x000000000001FD68          @ VI_WaitConditionCallBack [R_ARM_CALL: .text+0x419c] 
    /*0001fd6c*/ MOV         R3, #100                    @ 0x64 
    /*0001fd70*/ MOV         R2, R4 
    /*0001fd74*/ MOV         R1, R5 
    /*0001fd78*/ CMP         R0, #0 
    /*0001fd7c*/ MOV         R0, R6 
    /*0001fd80*/ BEQ         VI_GetPipeBnrRaw_x1fd58
    /*0001fd84*/ MOV         R0, R9 
    /*0001fd88*/ BL          0x000000000001FD88          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001fd8c*/ CMP         R0, #0 
    /*0001fd90*/ BNE         VI_GetPipeBnrRaw_x1fd00
    /*0001fd94*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0001fd98*/ CMP         R3, #0 
    /*0001fd9c*/ BEQ         VI_GetPipeBnrRaw_x1ff08
    /*0001fda0*/ MOV         R1, FP 
    /*0001fda4*/ MOV         R0, R8 
    /*0001fda8*/ BL          0x000000000001FDA8          @ VI_AbnormalVerifyAfterWait [R_ARM_CALL: .text+0x4208] 
    /*0001fdac*/ CMP         R0, #0 
    /*0001fdb0*/ BEQ         VI_GetPipeBnrRaw_x1fd30
    /*0001fdb4*/ MOV         R4, R0 
    /*0001fdb8*/ B           VI_GetPipeBnrRaw_x1fb88
    VI_GetPipeBnrRaw_x1fdbc:
    /*0001fdbc*/ MOV         R0, R9 
    /*0001fdc0*/ BL          0x000000000001FDC0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001fdc4*/ CMP         R0, #0 
    /*0001fdc8*/ BNE         VI_GetPipeBnrRaw_x1fd00
    /*0001fdcc*/ LDR         R3, [PC, #476]              @ 0x000000000001ffb0 
    /*0001fdd0*/ MOVW        R1, #1502                   @ 0x5de 
    VI_GetPipeBnrRaw_x1fdd4:
    /*0001fdd4*/ STR         R1, [SP, #8] 
    /*0001fdd8*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c40] 
    /*0001fddc*/ STR         R1, [SP] 
    /*0001fde0*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c40] 
    /*0001fde4*/ STR         R3, [SP, #4] 
    /*0001fde8*/ MOV         R1, #16 
    /*0001fdec*/ MOV         R0, #3 
    /*0001fdf0*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001fdf4*/ BL          0x000000000001FDF4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fdf8*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001fdfc*/ B           VI_GetPipeBnrRaw_x1fb88
    VI_GetPipeBnrRaw_x1fe00:
    /*0001fe00*/ ADD         R3, R3, #24 
    /*0001fe04*/ STR         R3, [SP, #24] 
    /*0001fe08*/ MOV         R0, R3 
    /*0001fe0c*/ BL          0x000000000001FE0C          @ VI_QueueGetBusyNum [R_ARM_CALL: .text+0x16578] 
    /*0001fe10*/ CMP         R0, #0 
    /*0001fe14*/ MOVWEQ      R4, #32782                  @ 0x800e 
    /*0001fe18*/ MOVTEQ      R4, #40976                  @ 0xa010 
    /*0001fe1c*/ BEQ         VI_GetPipeBnrRaw_x1fb88
    VI_GetPipeBnrRaw_x1fe20:
    /*0001fe20*/ ADD         R1, SP, #32 
    /*0001fe24*/ LDR         R0, [SP, #28] 
    /*0001fe28*/ BL          0x000000000001FE28          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001fe2c*/ LDR         R0, [SP, #24] 
    /*0001fe30*/ BL          0x000000000001FE30          @ VI_QueueGetBusy [R_ARM_CALL: .text+0x16254] 
    /*0001fe34*/ SUBS        R5, R0, #0 
    /*0001fe38*/ BEQ         VI_GetPipeBnrRaw_x1ff98
    /*0001fe3c*/ SUBS        R6, R5, #336                @ 0x150 
    /*0001fe40*/ BEQ         VI_GetPipeBnrRaw_x1ff98
    /*0001fe44*/ MOV         R1, #12 
    /*0001fe48*/ MOV         R0, R6 
    /*0001fe4c*/ BL          0x000000000001FE4C          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*0001fe50*/ CMP         R0, #0 
    /*0001fe54*/ BNE         VI_GetPipeBnrRaw_x1ff58
    VI_GetPipeBnrRaw_x1fe58:
    /*0001fe58*/ MOV         R1, #0 
    /*0001fe5c*/ MOV         R0, R6 
    /*0001fe60*/ BL          0x000000000001FE60          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0001fe64*/ SUBS        R4, R0, #0 
    /*0001fe68*/ BNE         VI_GetPipeBnrRaw_x1ff30
    VI_GetPipeBnrRaw_x1fe6c:
    /*0001fe6c*/ MOV         R2, #336                    @ 0x150 
    /*0001fe70*/ MOV         R1, R6 
    /*0001fe74*/ ADD         R0, SP, #56                 @ 0x38 
    /*0001fe78*/ BL          0x000000000001FE78          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001fe7c*/ MOV         R1, R5 
    /*0001fe80*/ LDR         R0, [SP, #24] 
    /*0001fe84*/ BL          0x000000000001FE84          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*0001fe88*/ ADD         R1, SP, #32 
    /*0001fe8c*/ LDR         R0, [SP, #28] 
    /*0001fe90*/ BL          0x000000000001FE90          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001fe94*/ ADD         R1, SP, #56                 @ 0x38 
    /*0001fe98*/ MOV         R0, SL 
    /*0001fe9c*/ MOV         R2, #336                    @ 0x150 
    /*0001fea0*/ BL          0x000000000001FEA0          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0001fea4*/ CMP         R0, #0 
    /*0001fea8*/ BEQ         VI_GetPipeBnrRaw_x1fb88
    /*0001feac*/ MOVW        R3, #1571                   @ 0x623 
    /*0001feb0*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d38] 
    /*0001feb4*/ STR         R3, [SP] 
    /*0001feb8*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d38] 
    /*0001febc*/ LDR         R3, [PC, #236]              @ 0x000000000001ffb0 
    /*0001fec0*/ MOV         R1, #16 
    /*0001fec4*/ MOV         R0, #3 
    /*0001fec8*/ MOVW        R4, #32784                  @ 0x8010 
    /*0001fecc*/ BL          0x000000000001FECC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fed0*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001fed4*/ B           VI_GetPipeBnrRaw_x1fb88
    VI_GetPipeBnrRaw_x1fed8:
    /*0001fed8*/ MOVW        R3, #1399                   @ 0x577 
    /*0001fedc*/ STR         R8, [SP, #4] 
    /*0001fee0*/ STR         R3, [SP] 
    /*0001fee4*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x85f0] 
    /*0001fee8*/ LDR         R3, [PC, #192]              @ 0x000000000001ffb0 
    /*0001feec*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x85f0] 
    /*0001fef0*/ MOV         R1, #16 
    /*0001fef4*/ MOV         R0, #3 
    /*0001fef8*/ MOVW        R4, #32773                  @ 0x8005 
    /*0001fefc*/ BL          0x000000000001FEFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ff00*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001ff04*/ B           VI_GetPipeBnrRaw_x1fb88
    VI_GetPipeBnrRaw_x1ff08:
    /*0001ff08*/ MOVW        R4, #32784                  @ 0x8010 
    /*0001ff0c*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001ff10*/ B           VI_GetPipeBnrRaw_x1fb88
    VI_GetPipeBnrRaw_x1ff14:
    /*0001ff14*/ MOV         R3, #1456                   @ 0x5b0 
    /*0001ff18*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9120] 
    /*0001ff1c*/ STR         FP, [SP, #8] 
    /*0001ff20*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9120] 
    /*0001ff24*/ STR         R8, [SP, #4] 
    /*0001ff28*/ STR         R3, [SP] 
    /*0001ff2c*/ B           VI_GetPipeBnrRaw_x1fce4
    VI_GetPipeBnrRaw_x1ff30:
    /*0001ff30*/ MOVW        R3, #1561                   @ 0x619 
    /*0001ff34*/ STR         R8, [SP, #4] 
    /*0001ff38*/ STR         R3, [SP] 
    /*0001ff3c*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d04] 
    /*0001ff40*/ LDR         R3, [PC, #104]              @ 0x000000000001ffb0 
    /*0001ff44*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d04] 
    /*0001ff48*/ MOV         R1, #16 
    /*0001ff4c*/ MOV         R0, #3 
    /*0001ff50*/ BL          0x000000000001FF50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ff54*/ B           VI_GetPipeBnrRaw_x1fe6c
    VI_GetPipeBnrRaw_x1ff58:
    /*0001ff58*/ MOVW        R3, #1555                   @ 0x613 
    /*0001ff5c*/ STR         R8, [SP, #4] 
    /*0001ff60*/ STR         R3, [SP] 
    /*0001ff64*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ccc] 
    /*0001ff68*/ LDR         R3, [PC, #64]               @ 0x000000000001ffb0 
    /*0001ff6c*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ccc] 
    /*0001ff70*/ MOV         R1, #16 
    /*0001ff74*/ MOV         R0, #3 
    /*0001ff78*/ BL          0x000000000001FF78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ff7c*/ B           VI_GetPipeBnrRaw_x1fe58
    VI_GetPipeBnrRaw_x1ff80:
    /*0001ff80*/ MOVW        R3, #1384                   @ 0x568 
    /*0001ff84*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c04] 
    /*0001ff88*/ STR         FP, [SP, #4] 
    /*0001ff8c*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c04] 
    /*0001ff90*/ STR         R3, [SP] 
    /*0001ff94*/ B           VI_GetPipeBnrRaw_x1fad0
    VI_GetPipeBnrRaw_x1ff98:
    /*0001ff98*/ ADD         R1, SP, #32 
    /*0001ff9c*/ LDR         R0, [SP, #28] 
    /*0001ffa0*/ MOVW        R4, #32782                  @ 0x800e 
    /*0001ffa4*/ BL          0x000000000001FFA4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001ffa8*/ MOVT        R4, #40976                  @ 0xa010 
    /*0001ffac*/ B           VI_GetPipeBnrRaw_x1fb88
    /*0001ffb0*/ ANDEQ       R1, R0, R8, ASR R3 
FUNC_END VI_GetPipeBnrRaw


FUNC_BEGIN VI_CheckBnrRawDumpAttr
    /*0001ffb4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001ffb8*/ SUB         SP, SP, #20 
    /*0001ffbc*/ LDR         R0, [R1] 
    /*0001ffc0*/ CMP         R0, #1 
    /*0001ffc4*/ BHI         VI_CheckBnrRawDumpAttr_x20024
    /*0001ffc8*/ LDR         R3, [R1, #4] 
    /*0001ffcc*/ CMP         R3, #8 
    /*0001ffd0*/ BHI         VI_CheckBnrRawDumpAttr_x2003c
    /*0001ffd4*/ CMP         R3, #0 
    /*0001ffd8*/ MOVNE       R0, #0 
    /*0001ffdc*/ ANDEQ       R0, R0, #1 
    /*0001ffe0*/ CMP         R0, #0 
    /*0001ffe4*/ BNE         VI_CheckBnrRawDumpAttr_x1fff0
    VI_CheckBnrRawDumpAttr_x1ffe8:
    /*0001ffe8*/ ADD         SP, SP, #20 
    /*0001ffec*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_CheckBnrRawDumpAttr_x1fff0:
    /*0001fff0*/ MOV         R2, #0 
    /*0001fff4*/ STR         R2, [SP, #4] 
    /*0001fff8*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9224] 
    /*0001fffc*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9224] 
    /*00020000*/ MOVW        R3, #1604                   @ 0x644 
    /*00020004*/ STR         R3, [SP] 
    VI_CheckBnrRawDumpAttr_x20008:
    /*00020008*/ LDR         R3, [PC, #108]              @ 0x000000000002007c 
    /*0002000c*/ MOV         R1, #16 
    /*00020010*/ MOV         R0, #3 
    /*00020014*/ BL          0x0000000000020014          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020018*/ MOVW        R0, #32771                  @ 0x8003 
    /*0002001c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00020020*/ B           VI_CheckBnrRawDumpAttr_x1ffe8
    VI_CheckBnrRawDumpAttr_x20024:
    /*00020024*/ MOVW        R3, #1588                   @ 0x634 
    /*00020028*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x916c] 
    /*0002002c*/ STR         R0, [SP, #4] 
    /*00020030*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x916c] 
    /*00020034*/ STR         R3, [SP] 
    /*00020038*/ B           VI_CheckBnrRawDumpAttr_x20008
    VI_CheckBnrRawDumpAttr_x2003c:
    /*0002003c*/ STR         R3, [SP, #4] 
    /*00020040*/ MOV         R2, #8 
    /*00020044*/ MOV         R3, #0 
    /*00020048*/ STR         R2, [SP, #12] 
    /*0002004c*/ STR         R3, [SP, #8] 
    /*00020050*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x91cc] 
    /*00020054*/ MOVW        R3, #1595                   @ 0x63b 
    /*00020058*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x91cc] 
    /*0002005c*/ STR         R3, [SP] 
    /*00020060*/ MOV         R1, #16 
    /*00020064*/ LDR         R3, [PC, #16]               @ 0x000000000002007c 
    /*00020068*/ MOV         R0, #3 
    /*0002006c*/ BL          0x000000000002006C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020070*/ MOVW        R0, #32771                  @ 0x8003 
    /*00020074*/ MOVT        R0, #40976                  @ 0xa010 
    /*00020078*/ B           VI_CheckBnrRawDumpAttr_x1ffe8
    /*0002007c*/ ANDEQ       R1, R0, IP, ROR #6 
FUNC_END VI_CheckBnrRawDumpAttr


FUNC_BEGIN VI_SetBNRRawDumpAttr
    /*00020080*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00020084*/ SUB         SP, SP, #28 
    /*00020088*/ MOV         R5, R1 
    /*0002008c*/ MOV         R6, R0 
    /*00020090*/ BL          0x0000000000020090          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*00020094*/ SUBS        R4, R0, #0 
    /*00020098*/ BEQ         VI_SetBNRRawDumpAttr_x200a8
    VI_SetBNRRawDumpAttr_x2009c:
    /*0002009c*/ MOV         R0, R4 
    /*000200a0*/ ADD         SP, SP, #28 
    /*000200a4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SetBNRRawDumpAttr_x200a8:
    /*000200a8*/ MOV         R0, R5 
    /*000200ac*/ BL          0x00000000000200AC          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*000200b0*/ SUBS        R4, R0, #0 
    /*000200b4*/ BNE         VI_SetBNRRawDumpAttr_x2009c
    /*000200b8*/ MOV         R1, R5 
    /*000200bc*/ MOV         R0, R6 
    /*000200c0*/ BL          0x00000000000200C0          @ VI_CheckBnrRawDumpAttr [R_ARM_CALL: .text+0x1ffb4] 
    /*000200c4*/ SUBS        R4, R0, #0 
    /*000200c8*/ BNE         VI_SetBNRRawDumpAttr_x2009c
    /*000200cc*/ MOV         R8, #176                    @ 0xb0 
    /*000200d0*/ MOVW        R7, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000200d4*/ MUL         R8, R8, R6 
    /*000200d8*/ MOVT        R7, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000200dc*/ ADD         R9, R8, #100                @ 0x64 
    /*000200e0*/ ADD         R9, R7, R9 
    /*000200e4*/ MOV         R0, R9 
    /*000200e8*/ BL          0x00000000000200E8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000200ec*/ CMP         R0, #0 
    /*000200f0*/ BNE         VI_SetBNRRawDumpAttr_x2024c
    /*000200f4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000200f8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000200fc*/ LDR         SL, [R3, R6, LSL #2] 
    /*00020100*/ CMP         SL, #0 
    /*00020104*/ BEQ         VI_SetBNRRawDumpAttr_x201cc
    /*00020108*/ LDR         R3, [R5] 
    /*0002010c*/ CMP         R3, #0 
    /*00020110*/ BEQ         VI_SetBNRRawDumpAttr_x2016c
    /*00020114*/ ADD         FP, SL, #36864              @ 0x9000 
    /*00020118*/ LDR         R3, [FP, #536]              @ 0x218 
    /*0002011c*/ STR         R4, [FP, #572]              @ 0x23c 
    /*00020120*/ CMP         R3, #0 
    /*00020124*/ BEQ         VI_SetBNRRawDumpAttr_x201fc
    VI_SetBNRRawDumpAttr_x20128:
    /*00020128*/ ADD         R8, R8, #140                @ 0x8c 
    /*0002012c*/ ADD         R6, SP, #20 
    VI_SetBNRRawDumpAttr_x20130:
    /*00020130*/ ADD         R7, R7, R8 
    VI_SetBNRRawDumpAttr_x20134:
    /*00020134*/ MOV         R1, R6 
    /*00020138*/ MOV         R0, R7 
    /*0002013c*/ BL          0x000000000002013C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00020140*/ ADD         R0, SL, #37376              @ 0x9200 
    /*00020144*/ MOV         R1, R5 
    /*00020148*/ ADD         R0, R0, #16 
    /*0002014c*/ MOV         R2, #8 
    /*00020150*/ BL          0x0000000000020150          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00020154*/ MOV         R1, R6 
    /*00020158*/ MOV         R0, R7 
    /*0002015c*/ BL          0x000000000002015C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_SetBNRRawDumpAttr_x20160:
    /*00020160*/ MOV         R0, R9 
    /*00020164*/ BL          0x0000000000020164          @ osal_up [R_ARM_CALL: +0x0] 
    /*00020168*/ B           VI_SetBNRRawDumpAttr_x2009c
    VI_SetBNRRawDumpAttr_x2016c:
    /*0002016c*/ ADD         R1, SL, #37376              @ 0x9200 
    /*00020170*/ MOV         R0, R6 
    /*00020174*/ ADD         R1, R1, #60                 @ 0x3c 
    /*00020178*/ ADD         R8, R8, #140                @ 0x8c 
    /*0002017c*/ BL          0x000000000002017C          @ VI_WaitCaptureFrameStop [R_ARM_CALL: .text+0x4660] 
    /*00020180*/ MOV         R0, R6 
    /*00020184*/ BL          0x0000000000020184          @ VI_ReleasePipeBNRCaptureVB [R_ARM_CALL: .text+0x1f9f4] 
    /*00020188*/ ADD         R3, SL, #36864              @ 0x9000 
    /*0002018c*/ ADD         R6, SP, #20 
    /*00020190*/ LDR         R3, [R3, #536]              @ 0x218 
    /*00020194*/ CMP         R3, #0 
    /*00020198*/ BEQ         VI_SetBNRRawDumpAttr_x20130
    /*0002019c*/ ADD         R8, R7, R8 
    /*000201a0*/ MOV         R1, R6 
    /*000201a4*/ MOV         R0, R8 
    /*000201a8*/ MOV         R7, R8 
    /*000201ac*/ BL          0x00000000000201AC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000201b0*/ ADD         R0, SL, #37376              @ 0x9200 
    /*000201b4*/ ADD         R0, R0, #24 
    /*000201b8*/ BL          0x00000000000201B8          @ VI_ClearPicQueue [R_ARM_CALL: .text+0x3e24] 
    /*000201bc*/ MOV         R1, R6 
    /*000201c0*/ MOV         R0, R8 
    /*000201c4*/ BL          0x00000000000201C4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000201c8*/ B           VI_SetBNRRawDumpAttr_x20134
    VI_SetBNRRawDumpAttr_x201cc:
    /*000201cc*/ MOVW        R3, #1635                   @ 0x663 
    /*000201d0*/ STR         R6, [SP, #4] 
    /*000201d4*/ STR         R3, [SP] 
    /*000201d8*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8fa0] 
    /*000201dc*/ LDR         R3, [PC, #196]              @ 0x00000000000202a8 
    /*000201e0*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8fa0] 
    /*000201e4*/ MOV         R1, #16 
    /*000201e8*/ MOV         R0, #3 
    /*000201ec*/ MOVW        R4, #32773                  @ 0x8005 
    /*000201f0*/ BL          0x00000000000201F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000201f4*/ MOVT        R4, #40976                  @ 0xa010 
    /*000201f8*/ B           VI_SetBNRRawDumpAttr_x20160
    VI_SetBNRRawDumpAttr_x201fc:
    /*000201fc*/ MOV         R0, #2752                   @ 0xac0 
    /*00020200*/ BL          0x0000000000020200          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00020204*/ CMP         R0, #0 
    /*00020208*/ STR         R0, [FP, #536]              @ 0x218 
    /*0002020c*/ BEQ         VI_SetBNRRawDumpAttr_x20258
    /*00020210*/ ADD         R3, SL, #37376              @ 0x9200 
    /*00020214*/ ADD         R3, R3, #24 
    /*00020218*/ STR         R3, [SP, #12] 
    /*0002021c*/ MOV         R0, R3 
    /*00020220*/ BL          0x0000000000020220          @ VI_CreatQueue [R_ARM_CALL: .text+0x16114] 
    /*00020224*/ LDR         FP, [FP, #536]              @ 0x218 
    /*00020228*/ ADD         R6, FP, #336                @ 0x150 
    /*0002022c*/ ADD         FP, FP, #3088               @ 0xc10 
    VI_SetBNRRawDumpAttr_x20230:
    /*00020230*/ MOV         R1, R6 
    /*00020234*/ LDR         R0, [SP, #12] 
    /*00020238*/ ADD         R6, R6, #344                @ 0x158 
    /*0002023c*/ BL          0x000000000002023C          @ VI_QueuePutFree [R_ARM_CALL: .text+0x16490] 
    /*00020240*/ CMP         FP, R6 
    /*00020244*/ BNE         VI_SetBNRRawDumpAttr_x20230
    /*00020248*/ B           VI_SetBNRRawDumpAttr_x20128
    VI_SetBNRRawDumpAttr_x2024c:
    /*0002024c*/ MOV         R4, #65024                  @ 0xfe00 
    /*00020250*/ MOVT        R4, #65535                  @ 0xffff 
    /*00020254*/ B           VI_SetBNRRawDumpAttr_x2009c
    VI_SetBNRRawDumpAttr_x20258:
    /*00020258*/ MOVW        R3, #1662                   @ 0x67e 
    /*0002025c*/ MOV         R1, #16 
    /*00020260*/ STR         R3, [SP] 
    /*00020264*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x928c] 
    /*00020268*/ LDR         R3, [PC, #56]               @ 0x00000000000202a8 
    /*0002026c*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x928c] 
    /*00020270*/ MOV         R0, #3 
    /*00020274*/ MOVW        R4, #32780                  @ 0x800c 
    /*00020278*/ BL          0x0000000000020278          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002027c*/ MOV         R3, #1664                   @ 0x680 
    /*00020280*/ STR         R6, [SP, #4] 
    /*00020284*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x92c4] 
    /*00020288*/ STR         R3, [SP] 
    /*0002028c*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x92c4] 
    /*00020290*/ LDR         R3, [PC, #16]               @ 0x00000000000202a8 
    /*00020294*/ MOV         R1, #16 
    /*00020298*/ MOV         R0, #3 
    /*0002029c*/ MOVT        R4, #40976                  @ 0xa010 
    /*000202a0*/ BL          0x00000000000202A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000202a4*/ B           VI_SetBNRRawDumpAttr_x20160
    /*000202a8*/ ANDEQ       R1, R0, R4, LSL #7 
FUNC_END VI_SetBNRRawDumpAttr


FUNC_BEGIN VI_GetBNRRawDumpAttr
    /*000202ac*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000202b0*/ SUB         SP, SP, #12 
    /*000202b4*/ MOV         R5, R1 
    /*000202b8*/ MOV         R6, R0 
    /*000202bc*/ BL          0x00000000000202BC          @ VI_CheckPhyPipeId [R_ARM_CALL: .text+0x780c] 
    /*000202c0*/ SUBS        R4, R0, #0 
    /*000202c4*/ BEQ         VI_GetBNRRawDumpAttr_x202d4
    VI_GetBNRRawDumpAttr_x202c8:
    /*000202c8*/ MOV         R0, R4 
    /*000202cc*/ ADD         SP, SP, #12 
    /*000202d0*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetBNRRawDumpAttr_x202d4:
    /*000202d4*/ MOV         R0, R5 
    /*000202d8*/ BL          0x00000000000202D8          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*000202dc*/ SUBS        R4, R0, #0 
    /*000202e0*/ BNE         VI_GetBNRRawDumpAttr_x202c8
    /*000202e4*/ LDR         R3, [PC, #140]              @ 0x0000000000020378 
    /*000202e8*/ MOV         R7, #176                    @ 0xb0 
    /*000202ec*/ MLA         R7, R7, R6, R3 
    /*000202f0*/ MOV         R0, R7 
    /*000202f4*/ BL          0x00000000000202F4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000202f8*/ SUBS        R4, R0, #0 
    /*000202fc*/ BNE         VI_GetBNRRawDumpAttr_x2036c
    /*00020300*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00020304*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00020308*/ LDR         R1, [R3, R6, LSL #2] 
    /*0002030c*/ CMP         R1, #0 
    /*00020310*/ BEQ         VI_GetBNRRawDumpAttr_x2033c
    /*00020314*/ ADD         R1, R1, #37376              @ 0x9200 
    /*00020318*/ MOV         R0, R5 
    /*0002031c*/ ADD         R1, R1, #16 
    /*00020320*/ MOV         R2, #8 
    /*00020324*/ BL          0x0000000000020324          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VI_GetBNRRawDumpAttr_x20328:
    /*00020328*/ MOV         R0, R7 
    /*0002032c*/ BL          0x000000000002032C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00020330*/ MOV         R0, R4 
    /*00020334*/ ADD         SP, SP, #12 
    /*00020338*/ POP         {R4, R5, R6, R7, PC} 
    VI_GetBNRRawDumpAttr_x2033c:
    /*0002033c*/ MOVW        R3, #1699                   @ 0x6a3 
    /*00020340*/ STR         R6, [SP, #4] 
    /*00020344*/ STR         R3, [SP] 
    /*00020348*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8fa0] 
    /*0002034c*/ LDR         R3, [PC, #40]               @ 0x000000000002037c 
    /*00020350*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8fa0] 
    /*00020354*/ MOV         R1, #16 
    /*00020358*/ MOV         R0, #3 
    /*0002035c*/ MOVW        R4, #32773                  @ 0x8005 
    /*00020360*/ BL          0x0000000000020360          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020364*/ MOVT        R4, #40976                  @ 0xa010 
    /*00020368*/ B           VI_GetBNRRawDumpAttr_x20328
    VI_GetBNRRawDumpAttr_x2036c:
    /*0002036c*/ MOV         R4, #65024                  @ 0xfe00 
    /*00020370*/ MOVT        R4, #65535                  @ 0xffff 
    /*00020374*/ B           VI_GetBNRRawDumpAttr_x202c8
    /*00020378*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0002037c*/ MULEQ       R0, IP, R3 
FUNC_END VI_GetBNRRawDumpAttr


FUNC_BEGIN VI_WDR_OnlineUpdateWdrCfg
    /*00020380*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00020384*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00020388*/ PUSH        {R4, R5, R6, LR} 
    /*0002038c*/ MOV         R6, R1 
    /*00020390*/ LDR         R4, [R3, R0, LSL #2] 
    /*00020394*/ BL          0x0000000000020394          @ VI_DRV_GetPipeIdxFromBind [R_ARM_CALL: .text+0x37c94] 
    /*00020398*/ ADD         R3, R4, #12288              @ 0x3000 
    /*0002039c*/ LDR         R2, [R3, #2664]             @ 0xa68 
    /*000203a0*/ CMP         R2, #0 
    /*000203a4*/ POPEQ       {R4, R5, R6, PC} 
    /*000203a8*/ LDR         R3, [R3, #2668]             @ 0xa6c 
    /*000203ac*/ CMP         R3, #0 
    /*000203b0*/ POPEQ       {R4, R5, R6, PC} 
    /*000203b4*/ MOV         R5, R0 
    /*000203b8*/ MOV         R0, R6 
    /*000203bc*/ BL          0x00000000000203BC          @ VI_DRV_GetOnlineProcIDByPipe [R_ARM_CALL: .text+0x27360] 
    /*000203c0*/ BL          0x00000000000203C0          @ VI_DRV_GetProcRegByProcId [R_ARM_CALL: .text+0x273a4] 
    /*000203c4*/ ADD         R2, R4, #14464              @ 0x3880 
    /*000203c8*/ SUB         R1, R5, #1 
    /*000203cc*/ ADD         R2, R2, #56                 @ 0x38 
    /*000203d0*/ POP         {R4, R5, R6, LR} 
    VI_WDR_OnlineUpdateWdrCfg_x203d4:
    /*000203d4*/ B           VI_WDR_OnlineUpdateWdrCfg_x203d4@ VI_DRV_SetWDRPicConfig [R_ARM_JUMP24: .text+0x37ea4] 
FUNC_END VI_WDR_OnlineUpdateWdrCfg


FUNC_BEGIN VI_WDR_OfflineClearWdrPicNode
    /*000203d8*/ PUSH        {R4, R5, R6, LR} 
    /*000203dc*/ MOV         R4, R1 
    /*000203e0*/ LDR         R3, [R1, #432]              @ 0x1b0 
    /*000203e4*/ MOV         R6, R0 
    /*000203e8*/ CMP         R3, #1 
    /*000203ec*/ BEQ         VI_WDR_OfflineClearWdrPicNode_x20448
    VI_WDR_OfflineClearWdrPicNode_x203f0:
    /*000203f0*/ LDR         R3, [R4, #880]              @ 0x370 
    /*000203f4*/ MOV         R1, #0 
    /*000203f8*/ STR         R1, [R4, #432]              @ 0x1b0 
    /*000203fc*/ CMP         R3, #1 
    /*00020400*/ STR         R1, [R4, #436]              @ 0x1b4 
    /*00020404*/ STR         R1, [R4, #440]              @ 0x1b8 
    /*00020408*/ BEQ         VI_WDR_OfflineClearWdrPicNode_x20458
    VI_WDR_OfflineClearWdrPicNode_x2040c:
    /*0002040c*/ LDR         R3, [R4, #1028]             @ 0x404 
    /*00020410*/ MOV         R5, #0 
    /*00020414*/ STR         R5, [R4, #880]              @ 0x370 
    /*00020418*/ CMP         R3, #1 
    /*0002041c*/ STR         R5, [R4, #884]              @ 0x374 
    /*00020420*/ STR         R5, [R4, #888]              @ 0x378 
    /*00020424*/ BEQ         VI_WDR_OfflineClearWdrPicNode_x20430
    /*00020428*/ MOV         R0, #0 
    /*0002042c*/ POP         {R4, R5, R6, PC} 
    VI_WDR_OfflineClearWdrPicNode_x20430:
    /*00020430*/ MOV         R0, R6 
    /*00020434*/ ADD         R1, R4, #896                @ 0x380 
    /*00020438*/ BL          0x0000000000020438          @ VI_DRV_PutFreeBeBuf [R_ARM_CALL: .text+0x3883c] 
    /*0002043c*/ STR         R5, [R4, #1028]             @ 0x404 
    /*00020440*/ MOV         R0, #0 
    /*00020444*/ POP         {R4, R5, R6, PC} 
    VI_WDR_OfflineClearWdrPicNode_x20448:
    /*00020448*/ MOV         R1, #0 
    /*0002044c*/ MOV         R0, R4 
    /*00020450*/ BL          0x0000000000020450          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00020454*/ B           VI_WDR_OfflineClearWdrPicNode_x203f0
    VI_WDR_OfflineClearWdrPicNode_x20458:
    /*00020458*/ ADD         R0, R4, #448                @ 0x1c0 
    /*0002045c*/ BL          0x000000000002045C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00020460*/ B           VI_WDR_OfflineClearWdrPicNode_x2040c
FUNC_END VI_WDR_OfflineClearWdrPicNode


FUNC_BEGIN VI_WDR_OfflineInitWdrPicNode
    /*00020464*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00020468*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0002046c*/ PUSH        {R4, R5, R6, LR} 
    /*00020470*/ LDR         R6, [R3, R0, LSL #2] 
    /*00020474*/ LDR         R4, [R6, #520]              @ 0x208 
    /*00020478*/ CMP         R4, #0 
    /*0002047c*/ BEQ         VI_WDR_OfflineInitWdrPicNode_x20488
    /*00020480*/ MOV         R0, #0 
    /*00020484*/ POP         {R4, R5, R6, PC} 
    VI_WDR_OfflineInitWdrPicNode_x20488:
    /*00020488*/ MOV         R5, R0 
    /*0002048c*/ ADD         R0, R6, #40                 @ 0x28 
    /*00020490*/ BL          0x0000000000020490          @ VI_QueueGetFree [R_ARM_CALL: .text+0x161cc] 
    /*00020494*/ SUBS        R1, R0, #0 
    /*00020498*/ BEQ         VI_WDR_OfflineInitWdrPicNode_x204c0
    /*0002049c*/ SUB         R1, R1, #1024               @ 0x400 
    /*000204a0*/ SUB         R1, R1, #8 
    /*000204a4*/ STR         R1, [R6, #520]              @ 0x208 
    /*000204a8*/ CMP         R1, #0 
    /*000204ac*/ BEQ         VI_WDR_OfflineInitWdrPicNode_x204cc
    /*000204b0*/ MOV         R0, R5 
    /*000204b4*/ BL          0x00000000000204B4          @ VI_WDR_OfflineClearWdrPicNode [R_ARM_CALL: .text+0x203d8] 
    /*000204b8*/ MOV         R0, R4 
    /*000204bc*/ POP         {R4, R5, R6, PC} 
    VI_WDR_OfflineInitWdrPicNode_x204c0:
    /*000204c0*/ MVN         R0, #0 
    /*000204c4*/ STR         R1, [R6, #520]              @ 0x208 
    /*000204c8*/ POP         {R4, R5, R6, PC} 
    VI_WDR_OfflineInitWdrPicNode_x204cc:
    /*000204cc*/ MVN         R0, #0 
    /*000204d0*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_WDR_OfflineInitWdrPicNode


FUNC_BEGIN VI_WDR_OfflineWdrLostSameVcFrame
    /*000204d4*/ PUSH        {R4, LR} 
    /*000204d8*/ MOV         R4, R1 
    /*000204dc*/ BL          0x00000000000204DC          @ VI_DRV_GetPipeIdxFromBind [R_ARM_CALL: .text+0x37c94] 
    /*000204e0*/ MOVW        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000204e4*/ MOVT        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000204e8*/ MOV         R3, #448                    @ 0x1c0 
    /*000204ec*/ LDR         R2, [R2, R4, LSL #2] 
    /*000204f0*/ LDR         R1, [R2, #520]              @ 0x208 
    /*000204f4*/ MLA         R0, R3, R0, R1 
    /*000204f8*/ LDR         R3, [R0, #440]              @ 0x1b8 
    /*000204fc*/ CMP         R3, #1 
    /*00020500*/ BEQ         VI_WDR_OfflineWdrLostSameVcFrame_x2050c
    /*00020504*/ MOV         R0, #0 
    /*00020508*/ POP         {R4, PC} 
    VI_WDR_OfflineWdrLostSameVcFrame_x2050c:
    /*0002050c*/ MOV         R0, R4 
    /*00020510*/ BL          0x0000000000020510          @ VI_WDR_OfflineClearWdrPicNode [R_ARM_CALL: .text+0x203d8] 
    /*00020514*/ MOV         R0, #0 
    /*00020518*/ POP         {R4, PC} 
FUNC_END VI_WDR_OfflineWdrLostSameVcFrame


FUNC_BEGIN VI_WDR_OfflineWdrFrameRecieve
    /*0002051c*/ PUSH        {R4, R5, R6, LR} 
    /*00020520*/ MOV         R5, R2 
    /*00020524*/ MOV         R6, R1 
    /*00020528*/ BL          0x0000000000020528          @ VI_DRV_GetPipeIdxFromBind [R_ARM_CALL: .text+0x37c94] 
    /*0002052c*/ LDR         R2, [R5, #432]              @ 0x1b0 
    /*00020530*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00020534*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00020538*/ CMP         R2, #1 
    /*0002053c*/ LDR         R6, [R3, R6, LSL #2] 
    /*00020540*/ MOV         R4, R0 
    /*00020544*/ BEQ         VI_WDR_OfflineWdrFrameRecieve_x20578
    VI_WDR_OfflineWdrFrameRecieve_x20548:
    /*00020548*/ MOV         R2, #448                    @ 0x1c0 
    /*0002054c*/ LDR         R0, [R6, #520]              @ 0x208 
    /*00020550*/ MUL         R4, R2, R4 
    /*00020554*/ MOV         R1, R5 
    /*00020558*/ ADD         R0, R0, R4 
    /*0002055c*/ BL          0x000000000002055C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00020560*/ LDR         R3, [R6, #520]              @ 0x208 
    /*00020564*/ MOV         R2, #1 
    /*00020568*/ MOV         R0, #0 
    /*0002056c*/ ADD         R4, R3, R4 
    /*00020570*/ STR         R2, [R4, #440]              @ 0x1b8 
    /*00020574*/ POP         {R4, R5, R6, PC} 
    VI_WDR_OfflineWdrFrameRecieve_x20578:
    /*00020578*/ MOV         R1, #0 
    /*0002057c*/ MOV         R0, R5 
    /*00020580*/ BL          0x0000000000020580          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00020584*/ B           VI_WDR_OfflineWdrFrameRecieve_x20548
FUNC_END VI_WDR_OfflineWdrFrameRecieve


FUNC_BEGIN VI_WDR_OfflineWdrGetBeCfg
    /*00020588*/ CMP         R1, R0 
    /*0002058c*/ BEQ         VI_WDR_OfflineWdrGetBeCfg_x20598
    /*00020590*/ MOV         R0, #0 
    /*00020594*/ BX          LR 
    VI_WDR_OfflineWdrGetBeCfg_x20598:
    /*00020598*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0002059c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000205a0*/ PUSH        {R4, R5, LR} 
    /*000205a4*/ SUB         SP, SP, #12 
    /*000205a8*/ LDR         R5, [R3, R1, LSL #2] 
    /*000205ac*/ LDR         R3, [R5, #520]              @ 0x208 
    /*000205b0*/ LDR         R2, [R3, #1028]             @ 0x404 
    /*000205b4*/ CMP         R2, #1 
    /*000205b8*/ MOVEQ       R0, #0 
    /*000205bc*/ BEQ         VI_WDR_OfflineWdrGetBeCfg_x205e4
    /*000205c0*/ ADD         R2, R3, #920                @ 0x398 
    /*000205c4*/ MOV         R4, R1 
    /*000205c8*/ ADD         R1, R3, #896                @ 0x380 
    /*000205cc*/ BL          0x00000000000205CC          @ VI_DRV_GetBeCfg [R_ARM_CALL: .text+0x385b0] 
    /*000205d0*/ CMP         R0, #0 
    /*000205d4*/ LDREQ       R3, [R5, #520]              @ 0x208 
    /*000205d8*/ MOVEQ       R2, #1 
    /*000205dc*/ STREQ       R2, [R3, #1028]             @ 0x404 
    /*000205e0*/ BNE         VI_WDR_OfflineWdrGetBeCfg_x205ec
    VI_WDR_OfflineWdrGetBeCfg_x205e4:
    /*000205e4*/ ADD         SP, SP, #12 
    /*000205e8*/ POP         {R4, R5, PC} 
    VI_WDR_OfflineWdrGetBeCfg_x205ec:
    /*000205ec*/ LDR         R1, [R5, #520]              @ 0x208 
    /*000205f0*/ ADD         R5, R5, #32768              @ 0x8000 
    /*000205f4*/ MOV         R0, R4 
    /*000205f8*/ BL          0x00000000000205F8          @ VI_WDR_OfflineClearWdrPicNode [R_ARM_CALL: .text+0x203d8] 
    /*000205fc*/ LDR         R0, [R5, #3712]             @ 0xe80 
    /*00020600*/ MOV         IP, #167                    @ 0xa7 
    /*00020604*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x13b4] 
    /*00020608*/ ADD         R0, R0, #1 
    /*0002060c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x13b4] 
    /*00020610*/ STR         R0, [R5, #3712]             @ 0xe80 
    /*00020614*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9304] 
    /*00020618*/ MOV         R1, #16 
    /*0002061c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9304] 
    /*00020620*/ MOV         R0, #3 
    /*00020624*/ STR         R4, [SP, #4] 
    /*00020628*/ STR         IP, [SP] 
    /*0002062c*/ BL          0x000000000002062C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020630*/ MVN         R0, #0 
    /*00020634*/ B           VI_WDR_OfflineWdrGetBeCfg_x205e4
FUNC_END VI_WDR_OfflineWdrGetBeCfg


FUNC_BEGIN VI_WDR_OfflineWdrAllFrameSend
    /*00020638*/ CMP         R1, R0 
    /*0002063c*/ BEQ         VI_WDR_OfflineWdrAllFrameSend_x20648
    /*00020640*/ MOV         R0, #0 
    /*00020644*/ BX          LR 
    VI_WDR_OfflineWdrAllFrameSend_x20648:
    /*00020648*/ CMP         R2, #0 
    /*0002064c*/ BLT         VI_WDR_OfflineWdrAllFrameSend_x20684
    /*00020650*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00020654*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00020658*/ LDR         R3, [R3, R1, LSL #2] 
    /*0002065c*/ LDR         R3, [R3, #520]              @ 0x208 
    /*00020660*/ LDR         R0, [R3, #440]              @ 0x1b8 
    /*00020664*/ CMP         R0, #0 
    /*00020668*/ BXEQ        LR 
    /*0002066c*/ CMP         R2, #0 
    /*00020670*/ BEQ         VI_WDR_OfflineWdrAllFrameSend_x20684
    /*00020674*/ LDR         R0, [R3, #888]              @ 0x378 
    /*00020678*/ CMP         R0, #0 
    /*0002067c*/ MOVNE       R0, #1 
    /*00020680*/ BX          LR 
    VI_WDR_OfflineWdrAllFrameSend_x20684:
    /*00020684*/ MOV         R0, #1 
    /*00020688*/ BX          LR 
FUNC_END VI_WDR_OfflineWdrAllFrameSend


FUNC_BEGIN VI_WDR_OfflineWdrAllFrameOk
    /*0002068c*/ CMP         R1, R0 
    /*00020690*/ BEQ         VI_WDR_OfflineWdrAllFrameOk_x2069c
    /*00020694*/ MOV         R0, #0 
    /*00020698*/ BX          LR 
    VI_WDR_OfflineWdrAllFrameOk_x2069c:
    /*0002069c*/ CMP         R2, #0 
    /*000206a0*/ BLT         VI_WDR_OfflineWdrAllFrameOk_x206f0
    /*000206a4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000206a8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000206ac*/ LDR         R3, [R3, R1, LSL #2] 
    /*000206b0*/ LDR         R3, [R3, #520]              @ 0x208 
    /*000206b4*/ LDR         R0, [R3, #436]              @ 0x1b4 
    /*000206b8*/ CMP         R0, #0 
    /*000206bc*/ BXEQ        LR 
    /*000206c0*/ LDR         R0, [R3, #432]              @ 0x1b0 
    /*000206c4*/ CMP         R0, #0 
    /*000206c8*/ BXEQ        LR 
    /*000206cc*/ CMP         R2, #0 
    /*000206d0*/ BEQ         VI_WDR_OfflineWdrAllFrameOk_x206f0
    /*000206d4*/ LDR         R0, [R3, #884]              @ 0x374 
    /*000206d8*/ CMP         R0, #0 
    /*000206dc*/ BXEQ        LR 
    /*000206e0*/ LDR         R0, [R3, #880]              @ 0x370 
    /*000206e4*/ CMP         R0, #0 
    /*000206e8*/ MOVNE       R0, #1 
    /*000206ec*/ BX          LR 
    VI_WDR_OfflineWdrAllFrameOk_x206f0:
    /*000206f0*/ MOV         R0, #1 
    /*000206f4*/ BX          LR 
FUNC_END VI_WDR_OfflineWdrAllFrameOk


FUNC_BEGIN VI_WDR_OfflineWdrPicNodeInputQueue
    /*000206f8*/ CMP         R1, R0 
    /*000206fc*/ BEQ         VI_WDR_OfflineWdrPicNodeInputQueue_x20708
    /*00020700*/ MOV         R0, #0 
    /*00020704*/ BX          LR 
    VI_WDR_OfflineWdrPicNodeInputQueue_x20708:
    /*00020708*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0002070c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00020710*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00020714*/ CMP         R2, #0 
    /*00020718*/ LDR         R4, [R3, R1, LSL #2] 
    /*0002071c*/ SUB         SP, SP, #12 
    /*00020720*/ ADD         R8, R4, #36864              @ 0x9000 
    /*00020724*/ BLT         VI_WDR_OfflineWdrPicNodeInputQueue_x20768
    /*00020728*/ LDR         R3, [R8, #2784]             @ 0xae0 
    /*0002072c*/ CMP         R3, #0 
    /*00020730*/ LDRNE       R3, [R4, #520]              @ 0x208 
    /*00020734*/ MOVNE       R0, #1 
    /*00020738*/ LDREQ       R0, [R4, #520]              @ 0x208 
    /*0002073c*/ STRNE       R0, [R3, #444]              @ 0x1bc 
    /*00020740*/ STREQ       R3, [R0, #444]              @ 0x1bc 
    /*00020744*/ CMP         R2, #0 
    /*00020748*/ BEQ         VI_WDR_OfflineWdrPicNodeInputQueue_x20768
    /*0002074c*/ LDR         R3, [R8, #2784]             @ 0xae0 
    /*00020750*/ CMP         R3, #0 
    /*00020754*/ LDRNE       R3, [R4, #520]              @ 0x208 
    /*00020758*/ MOVNE       R0, #1 
    /*0002075c*/ LDREQ       R0, [R4, #520]              @ 0x208 
    /*00020760*/ STRNE       R0, [R3, #892]              @ 0x37c 
    /*00020764*/ STREQ       R3, [R0, #892]              @ 0x37c 
    VI_WDR_OfflineWdrPicNodeInputQueue_x20768:
    /*00020768*/ MOV         R7, R1 
    /*0002076c*/ LDR         R1, [R4, #520]              @ 0x208 
    /*00020770*/ ADD         R6, R4, #40                 @ 0x28 
    /*00020774*/ MOV         R5, R2 
    /*00020778*/ ADD         R1, R1, #1024               @ 0x400 
    /*0002077c*/ MOV         R0, R6 
    /*00020780*/ ADD         R1, R1, #8 
    /*00020784*/ BL          0x0000000000020784          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    /*00020788*/ LDR         R3, [R8, #2784]             @ 0xae0 
    /*0002078c*/ CMP         R3, #0 
    /*00020790*/ BNE         VI_WDR_OfflineWdrPicNodeInputQueue_x207a8
    VI_WDR_OfflineWdrPicNodeInputQueue_x20794:
    /*00020794*/ MOV         R3, #0 
    /*00020798*/ MOV         R0, #0 
    /*0002079c*/ STR         R3, [R4, #520]              @ 0x208 
    /*000207a0*/ ADD         SP, SP, #12 
    /*000207a4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_WDR_OfflineWdrPicNodeInputQueue_x207a8:
    /*000207a8*/ LDR         R1, [R4, #520]              @ 0x208 
    /*000207ac*/ MOV         R0, R7 
    /*000207b0*/ ADD         R1, R1, #896                @ 0x380 
    /*000207b4*/ BL          0x00000000000207B4          @ VI_DRV_HoldBeCfg [R_ARM_CALL: .text+0x386e8] 
    /*000207b8*/ SUBS        R8, R0, #0 
    /*000207bc*/ BNE         VI_WDR_OfflineWdrPicNodeInputQueue_x20794
    /*000207c0*/ MOV         R0, R6 
    /*000207c4*/ BL          0x00000000000207C4          @ VI_QueueGetFree [R_ARM_CALL: .text+0x161cc] 
    /*000207c8*/ SUBS        SL, R0, #0 
    /*000207cc*/ BEQ         VI_WDR_OfflineWdrPicNodeInputQueue_x20834
    /*000207d0*/ SUB         R9, SL, #1024               @ 0x400 
    /*000207d4*/ SUBS        FP, R9, #8 
    /*000207d8*/ BEQ         VI_WDR_OfflineWdrPicNodeInputQueue_x20834
    /*000207dc*/ MOV         R2, #1040                   @ 0x410 
    /*000207e0*/ LDR         R1, [R4, #520]              @ 0x208 
    /*000207e4*/ MOV         R0, FP 
    /*000207e8*/ BL          0x00000000000207E8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000207ec*/ CMP         R5, #0 
    /*000207f0*/ MOVGE       R7, R8 
    /*000207f4*/ MOVGE       R8, SL 
    /*000207f8*/ MOVGE       SL, R7 
    /*000207fc*/ BLT         VI_WDR_OfflineWdrPicNodeInputQueue_x20824
    VI_WDR_OfflineWdrPicNodeInputQueue_x20800:
    /*00020800*/ MOV         R0, FP 
    /*00020804*/ ADD         R7, R7, #1 
    /*00020808*/ MOV         R1, #0 
    /*0002080c*/ ADD         FP, FP, #448                @ 0x1c0 
    /*00020810*/ BL          0x0000000000020810          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00020814*/ CMP         R5, R7 
    /*00020818*/ STR         SL, [R8, #-588]             @ 0xfffffdb4 
    /*0002081c*/ ADD         R8, R8, #448                @ 0x1c0 
    /*00020820*/ BGE         VI_WDR_OfflineWdrPicNodeInputQueue_x20800
    VI_WDR_OfflineWdrPicNodeInputQueue_x20824:
    /*00020824*/ ADD         R1, R9, #1024               @ 0x400 
    /*00020828*/ MOV         R0, R6 
    /*0002082c*/ BL          0x000000000002082C          @ VI_QueuePutBusy [R_ARM_CALL: .text+0x164e8] 
    /*00020830*/ B           VI_WDR_OfflineWdrPicNodeInputQueue_x20794
    VI_WDR_OfflineWdrPicNodeInputQueue_x20834:
    /*00020834*/ ADD         LR, R4, #32768              @ 0x8000 
    /*00020838*/ MOVW        R5, #282                    @ 0x11a 
    /*0002083c*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9354] 
    /*00020840*/ LDR         R3, [PC, #32]               @ 0x0000000000020868 
    /*00020844*/ LDR         IP, [LR, #3712]             @ 0xe80 
    /*00020848*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9354] 
    /*0002084c*/ MOV         R1, #16 
    /*00020850*/ MOV         R0, #3 
    /*00020854*/ ADD         IP, IP, #1 
    /*00020858*/ STR         IP, [LR, #3712]             @ 0xe80 
    /*0002085c*/ STM         SP, {R5, R7} 
    /*00020860*/ BL          0x0000000000020860          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020864*/ B           VI_WDR_OfflineWdrPicNodeInputQueue_x20794
    /*00020868*/ LDRDEQ      R1, [R0], -R0 
FUNC_END VI_WDR_OfflineWdrPicNodeInputQueue


FUNC_BEGIN VI_WDR_OfflineWdrTryToStartOneTask
    /*0002086c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00020870*/ MOVW        R5, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00020874*/ MOVT        R5, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00020878*/ MOV         R6, R0 
    /*0002087c*/ MOV         R0, R1 
    /*00020880*/ MOV         R4, R1 
    /*00020884*/ MOV         R8, R2 
    /*00020888*/ LDR         R9, [R5, R1, LSL #2] 
    /*0002088c*/ BL          0x000000000002088C          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00020890*/ CMP         R4, R6 
    /*00020894*/ MOV         R7, R0 
    /*00020898*/ BEQ         VI_WDR_OfflineWdrTryToStartOneTask_x208b0
    VI_WDR_OfflineWdrTryToStartOneTask_x2089c:
    /*0002089c*/ MOV         R1, R7 
    /*000208a0*/ MOV         R0, R4 
    /*000208a4*/ BL          0x00000000000208A4          @ VI_StartOneTask [R_ARM_CALL: .text+0x1ed4] 
    /*000208a8*/ MOV         R0, #0 
    /*000208ac*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_WDR_OfflineWdrTryToStartOneTask_x208b0:
    /*000208b0*/ CMP         R8, #0 
    /*000208b4*/ LDR         R3, [R5, R4, LSL #2] 
    /*000208b8*/ BLT         VI_WDR_OfflineWdrTryToStartOneTask_x20918
    /*000208bc*/ LDR         R3, [R3, #520]              @ 0x208 
    /*000208c0*/ LDR         R2, [R3, #440]              @ 0x1b8 
    /*000208c4*/ CMP         R2, #0 
    /*000208c8*/ BEQ         VI_WDR_OfflineWdrTryToStartOneTask_x2093c
    /*000208cc*/ CMP         R8, #0 
    /*000208d0*/ BEQ         VI_WDR_OfflineWdrTryToStartOneTask_x208e0
    /*000208d4*/ LDR         R2, [R3, #888]              @ 0x378 
    /*000208d8*/ CMP         R2, #0 
    /*000208dc*/ BEQ         VI_WDR_OfflineWdrTryToStartOneTask_x2093c
    VI_WDR_OfflineWdrTryToStartOneTask_x208e0:
    /*000208e0*/ LDR         R2, [R3, #436]              @ 0x1b4 
    /*000208e4*/ CMP         R2, #0 
    /*000208e8*/ BEQ         VI_WDR_OfflineWdrTryToStartOneTask_x2093c
    /*000208ec*/ LDR         R2, [R3, #432]              @ 0x1b0 
    /*000208f0*/ CMP         R2, #0 
    /*000208f4*/ BEQ         VI_WDR_OfflineWdrTryToStartOneTask_x2093c
    /*000208f8*/ CMP         R8, #0 
    /*000208fc*/ BEQ         VI_WDR_OfflineWdrTryToStartOneTask_x20918
    /*00020900*/ LDR         R2, [R3, #884]              @ 0x374 
    /*00020904*/ CMP         R2, #0 
    /*00020908*/ BEQ         VI_WDR_OfflineWdrTryToStartOneTask_x2093c
    /*0002090c*/ LDR         R3, [R3, #880]              @ 0x370 
    /*00020910*/ CMP         R3, #0 
    /*00020914*/ BEQ         VI_WDR_OfflineWdrTryToStartOneTask_x2093c
    VI_WDR_OfflineWdrTryToStartOneTask_x20918:
    /*00020918*/ LDR         R1, [R9, #520]              @ 0x208 
    /*0002091c*/ LDR         R3, [R1, #1028]             @ 0x404 
    /*00020920*/ CMP         R3, #1 
    /*00020924*/ BNE         VI_WDR_OfflineWdrTryToStartOneTask_x20940
    /*00020928*/ MOV         R2, R8 
    /*0002092c*/ MOV         R0, R6 
    /*00020930*/ MOV         R1, R4 
    /*00020934*/ BL          0x0000000000020934          @ VI_WDR_OfflineWdrPicNodeInputQueue [R_ARM_CALL: .text+0x206f8] 
    /*00020938*/ B           VI_WDR_OfflineWdrTryToStartOneTask_x2089c
    VI_WDR_OfflineWdrTryToStartOneTask_x2093c:
    /*0002093c*/ LDR         R1, [R9, #520]              @ 0x208 
    VI_WDR_OfflineWdrTryToStartOneTask_x20940:
    /*00020940*/ MOV         R0, R4 
    /*00020944*/ BL          0x0000000000020944          @ VI_WDR_OfflineClearWdrPicNode [R_ARM_CALL: .text+0x203d8] 
    /*00020948*/ B           VI_WDR_OfflineWdrTryToStartOneTask_x2089c
FUNC_END VI_WDR_OfflineWdrTryToStartOneTask


FUNC_BEGIN VI_WDR_OfflineSyncWdrFrame
    /*0002094c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00020950*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00020954*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00020958*/ SUB         SP, SP, #12 
    /*0002095c*/ MOV         R5, R1 
    /*00020960*/ LDR         R4, [R3, R0, LSL #2] 
    /*00020964*/ MOV         R6, R0 
    /*00020968*/ BL          0x0000000000020968          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*0002096c*/ BL          0x000000000002096C          @ VI_DRV_GetWDRVcNum [R_ARM_CALL: .text+0x37b60] 
    /*00020970*/ MOV         R9, R0 
    /*00020974*/ MOV         R0, R5 
    /*00020978*/ BL          0x0000000000020978          @ VI_WDR_OfflineInitWdrPicNode [R_ARM_CALL: .text+0x20464] 
    /*0002097c*/ SUBS        R8, R0, #0 
    /*00020980*/ BNE         VI_WDR_OfflineSyncWdrFrame_x209e4
    /*00020984*/ ADD         R7, R4, #14464              @ 0x3880 
    /*00020988*/ MOV         R1, R5 
    /*0002098c*/ ADD         R7, R7, #56                 @ 0x38 
    /*00020990*/ MOV         R0, R6 
    /*00020994*/ BL          0x0000000000020994          @ VI_WDR_OfflineWdrLostSameVcFrame [R_ARM_CALL: .text+0x204d4] 
    /*00020998*/ MOV         R1, R5 
    /*0002099c*/ MOV         R2, R7 
    /*000209a0*/ MOV         R0, R6 
    /*000209a4*/ BL          0x00000000000209A4          @ VI_WDR_OfflineWdrFrameRecieve [R_ARM_CALL: .text+0x2051c] 
    /*000209a8*/ MOV         R1, R5 
    /*000209ac*/ MOV         R0, R6 
    /*000209b0*/ BL          0x00000000000209B0          @ VI_WDR_OfflineWdrGetBeCfg [R_ARM_CALL: .text+0x20588] 
    /*000209b4*/ MOV         R1, R5 
    /*000209b8*/ MOV         R2, R9 
    /*000209bc*/ MOV         R0, R6 
    /*000209c0*/ BL          0x00000000000209C0          @ VI_WDR_OfflineWdrTryToStartOneTask [R_ARM_CALL: .text+0x2086c] 
    /*000209c4*/ ADD         R3, R4, #36352              @ 0x8e00 
    /*000209c8*/ LDRD        R0, [R3, #200]              @ 0xc8 
    /*000209cc*/ ADDS        R0, R0, #1 
    /*000209d0*/ ADC         R1, R1, #0 
    /*000209d4*/ STRD        R0, [R3, #200]              @ 0xc8 
    VI_WDR_OfflineSyncWdrFrame_x209d8:
    /*000209d8*/ MOV         R0, R8 
    /*000209dc*/ ADD         SP, SP, #12 
    /*000209e0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_WDR_OfflineSyncWdrFrame_x209e4:
    /*000209e4*/ ADD         R4, R4, #32768              @ 0x8000 
    /*000209e8*/ MOV         LR, #352                    @ 0x160 
    /*000209ec*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x93a8] 
    /*000209f0*/ LDR         R3, [PC, #40]               @ 0x0000000000020a20 
    /*000209f4*/ LDR         IP, [R4, #3712]             @ 0xe80 
    /*000209f8*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x93a8] 
    /*000209fc*/ MOV         R1, #16 
    /*00020a00*/ MOV         R0, #3 
    /*00020a04*/ ADD         IP, IP, #1 
    /*00020a08*/ STR         IP, [R4, #3712]             @ 0xe80 
    /*00020a0c*/ STR         R5, [SP, #4] 
    /*00020a10*/ MVN         R8, #0 
    /*00020a14*/ STR         LR, [SP] 
    /*00020a18*/ BL          0x0000000000020A18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020a1c*/ B           VI_WDR_OfflineSyncWdrFrame_x209d8
    /*00020a20*/ STRDEQ      R1, [R0], -R4 
FUNC_END VI_WDR_OfflineSyncWdrFrame


FUNC_BEGIN VI_GdcByPassTaskCallBack
    /*00020a24*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00020a28*/ MOV         R5, R3 
    /*00020a2c*/ LDR         R3, [R3, #764]              @ 0x2fc 
    /*00020a30*/ SUB         SP, SP, #12 
    /*00020a34*/ MOV         R7, R1 
    /*00020a38*/ MOV         R4, R2 
    /*00020a3c*/ CMP         R3, #1 
    /*00020a40*/ BEQ         VI_GdcByPassTaskCallBack_x20aa0
    /*00020a44*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00020a48*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00020a4c*/ MOV         R0, #56                     @ 0x38 
    /*00020a50*/ MOVW        LR, #36660                  @ 0x8f34 
    /*00020a54*/ LDR         R1, [R3, R1, LSL #2] 
    /*00020a58*/ MOVW        R6, #711                    @ 0x2c7 
    /*00020a5c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x1410] 
    /*00020a60*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x93f4] 
    /*00020a64*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x1410] 
    /*00020a68*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x93f4] 
    /*00020a6c*/ MLA         R4, R0, R4, R1 
    /*00020a70*/ MOV         R1, #16 
    /*00020a74*/ MOV         R0, #3 
    /*00020a78*/ LDR         IP, [R4, LR] 
    /*00020a7c*/ ADD         IP, IP, #1 
    /*00020a80*/ STR         IP, [R4, LR] 
    /*00020a84*/ STR         R6, [SP] 
    /*00020a88*/ BL          0x0000000000020A88          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_GdcByPassTaskCallBack_x20a8c:
    /*00020a8c*/ MOV         R0, R5 
    /*00020a90*/ MOV         R1, #0 
    /*00020a94*/ ADD         SP, SP, #12 
    /*00020a98*/ POP         {R4, R5, R6, R7, LR} 
    VI_GdcByPassTaskCallBack_x20a9c:
    /*00020a9c*/ B           VI_GdcByPassTaskCallBack_x20a9c@ VI_DRV_PutVb [R_ARM_JUMP24: .text+0x25a8c] 
    VI_GdcByPassTaskCallBack_x20aa0:
    /*00020aa0*/ MOVW        R2, #6264                   @ 0x1878 
    /*00020aa4*/ MOV         R3, #696                    @ 0x2b8 
    /*00020aa8*/ MUL         R2, R2, R1 
    /*00020aac*/ LDR         IP, [R5, #672]              @ 0x2a0 
    /*00020ab0*/ MLA         R3, R3, R4, R2 
    /*00020ab4*/ MOVW        R6, #0                      @ g_astPicInfo [R_ARM_MOVW_ABS_NC: .bss+0x1da8] 
    /*00020ab8*/ MOVT        R6, #0                      @ g_astPicInfo [R_ARM_MOVT_ABS: .bss+0x1da8] 
    /*00020abc*/ MOV         R2, #336                    @ 0x150 
    /*00020ac0*/ ADD         R1, R5, R2 
    /*00020ac4*/ ADD         R6, R6, R3 
    /*00020ac8*/ STR         IP, [R6, #692]              @ 0x2b4 
    /*00020acc*/ MOV         R0, R6 
    /*00020ad0*/ BL          0x0000000000020AD0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00020ad4*/ MOV         R3, #0 
    /*00020ad8*/ STR         R3, [R6, #688]              @ 0x2b0 
    /*00020adc*/ BL          0x0000000000020ADC          @ VI_IsVgsExist [R_ARM_CALL: .text+0x170e8] 
    /*00020ae0*/ MOV         R2, R6 
    /*00020ae4*/ MOV         R1, R4 
    /*00020ae8*/ CMP         R0, #0 
    /*00020aec*/ MOV         R0, R7 
    /*00020af0*/ BEQ         VI_GdcByPassTaskCallBack_x20afc
    /*00020af4*/ BL          0x0000000000020AF4          @ VI_SubmitFrame2Vgs [R_ARM_CALL: .text+0x17fd4] 
    /*00020af8*/ B           VI_GdcByPassTaskCallBack_x20a8c
    VI_GdcByPassTaskCallBack_x20afc:
    /*00020afc*/ BL          0x0000000000020AFC          @ VI_ProcSendPic [R_ARM_CALL: .text+0x26e8] 
    /*00020b00*/ B           VI_GdcByPassTaskCallBack_x20a8c
FUNC_END VI_GdcByPassTaskCallBack


FUNC_BEGIN VI_GdcLastTaskCallBack
    /*00020b04*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00020b08*/ MOV         R5, R3 
    /*00020b0c*/ LDR         R3, [R3, #764]              @ 0x2fc 
    /*00020b10*/ SUB         SP, SP, #12 
    /*00020b14*/ MOV         R6, R1 
    /*00020b18*/ CMP         R3, #6 
    /*00020b1c*/ BEQ         VI_GdcLastTaskCallBack_x20c40
    /*00020b20*/ MOV         R7, R2 
    /*00020b24*/ SUB         R2, R3, #4 
    /*00020b28*/ CMP         R3, #1 
    /*00020b2c*/ CMPNE       R2, #1 
    /*00020b30*/ BLS         VI_GdcLastTaskCallBack_x20ba0
    /*00020b34*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00020b38*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00020b3c*/ MOV         R1, #56                     @ 0x38 
    /*00020b40*/ MOVW        R4, #36660                  @ 0x8f34 
    /*00020b44*/ LDR         IP, [R3, R6, LSL #2] 
    /*00020b48*/ MOVW        R9, #834                    @ 0x342 
    /*00020b4c*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9458] 
    /*00020b50*/ LDR         R3, [PC, #272]              @ 0x0000000000020c68 
    /*00020b54*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9458] 
    /*00020b58*/ MOV         R0, #3 
    /*00020b5c*/ MLA         IP, R1, R7, IP 
    /*00020b60*/ MOV         R1, #16 
    /*00020b64*/ ADD         R8, R5, #336                @ 0x150 
    /*00020b68*/ LDR         LR, [IP, R4] 
    /*00020b6c*/ ADD         LR, LR, #1 
    /*00020b70*/ STR         LR, [IP, R4] 
    /*00020b74*/ STR         R9, [SP] 
    /*00020b78*/ BL          0x0000000000020B78          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_GdcLastTaskCallBack_x20b7c:
    /*00020b7c*/ MOV         R0, R8 
    /*00020b80*/ MOV         R1, #0 
    /*00020b84*/ BL          0x0000000000020B84          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00020b88*/ LDR         R3, [PC, #220]              @ 0x0000000000020c6c 
    /*00020b8c*/ MOV         R0, #176                    @ 0xb0 
    /*00020b90*/ MLA         R0, R0, R6, R3 
    /*00020b94*/ ADD         SP, SP, #12 
    /*00020b98*/ POP         {R4, R5, R6, R7, R8, R9, LR} 
    VI_GdcLastTaskCallBack_x20b9c:
    /*00020b9c*/ B           VI_GdcLastTaskCallBack_x20b9c@ osal_wakeup [R_ARM_JUMP24: +0x0] 
    VI_GdcLastTaskCallBack_x20ba0:
    /*00020ba0*/ MOVW        R2, #6264                   @ 0x1878 
    /*00020ba4*/ MOV         R3, #696                    @ 0x2b8 
    /*00020ba8*/ MUL         R2, R2, R1 
    /*00020bac*/ LDR         IP, [R5, #672]              @ 0x2a0 
    /*00020bb0*/ MLA         R3, R3, R7, R2 
    /*00020bb4*/ MOVW        R4, #0                      @ g_astPicInfo [R_ARM_MOVW_ABS_NC: .bss+0x1da8] 
    /*00020bb8*/ MOVT        R4, #0                      @ g_astPicInfo [R_ARM_MOVT_ABS: .bss+0x1da8] 
    /*00020bbc*/ ADD         R8, R5, #336                @ 0x150 
    /*00020bc0*/ MOV         R2, #336                    @ 0x150 
    /*00020bc4*/ ADD         R4, R4, R3 
    /*00020bc8*/ MOV         R1, R8 
    /*00020bcc*/ MOV         R0, R4 
    /*00020bd0*/ STR         IP, [R4, #692]              @ 0x2b4 
    /*00020bd4*/ BL          0x0000000000020BD4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00020bd8*/ LDR         R3, [R5, #764]              @ 0x2fc 
    /*00020bdc*/ CMP         R3, #4 
    /*00020be0*/ MOVEQ       R3, #1 
    /*00020be4*/ STREQ       R3, [R4, #688]              @ 0x2b0 
    /*00020be8*/ BEQ         VI_GdcLastTaskCallBack_x20bfc
    /*00020bec*/ CMP         R3, #5 
    /*00020bf0*/ MOVEQ       R3, #2 
    /*00020bf4*/ MOVNE       R3, #0 
    /*00020bf8*/ STR         R3, [R4, #688]              @ 0x2b0 
    VI_GdcLastTaskCallBack_x20bfc:
    /*00020bfc*/ BL          0x0000000000020BFC          @ VI_IsVgsExist [R_ARM_CALL: .text+0x170e8] 
    /*00020c00*/ MOV         R2, R4 
    /*00020c04*/ MOV         R1, R7 
    /*00020c08*/ CMP         R0, #0 
    /*00020c0c*/ MOV         R0, R6 
    /*00020c10*/ BEQ         VI_GdcLastTaskCallBack_x20c2c
    /*00020c14*/ BL          0x0000000000020C14          @ VI_SubmitFrame2Vgs [R_ARM_CALL: .text+0x17fd4] 
    /*00020c18*/ LDR         R3, [R5, #764]              @ 0x2fc 
    /*00020c1c*/ CMP         R3, #4 
    /*00020c20*/ BNE         VI_GdcLastTaskCallBack_x20b7c
    VI_GdcLastTaskCallBack_x20c24:
    /*00020c24*/ ADD         SP, SP, #12 
    /*00020c28*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_GdcLastTaskCallBack_x20c2c:
    /*00020c2c*/ BL          0x0000000000020C2C          @ VI_ProcSendPic [R_ARM_CALL: .text+0x26e8] 
    /*00020c30*/ LDR         R3, [R5, #764]              @ 0x2fc 
    /*00020c34*/ CMP         R3, #4 
    /*00020c38*/ BNE         VI_GdcLastTaskCallBack_x20b7c
    /*00020c3c*/ B           VI_GdcLastTaskCallBack_x20c24
    VI_GdcLastTaskCallBack_x20c40:
    /*00020c40*/ MOV         R3, #788                    @ 0x314 
    /*00020c44*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9428] 
    /*00020c48*/ STR         R3, [SP] 
    /*00020c4c*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9428] 
    /*00020c50*/ LDR         R3, [PC, #16]               @ 0x0000000000020c68 
    /*00020c54*/ MOV         R1, #16 
    /*00020c58*/ MOV         R0, #3 
    /*00020c5c*/ ADD         R8, R5, #336                @ 0x150 
    /*00020c60*/ BL          0x0000000000020C60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020c64*/ B           VI_GdcLastTaskCallBack_x20b7c
    /*00020c68*/ ANDEQ       R1, R0, IP, LSR #8 
    /*00020c6c*/ ANDEQ       R0, R0, R8, ASR R0          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
FUNC_END VI_GdcLastTaskCallBack


FUNC_BEGIN VI_GdcExtChnTaskCallBack
    /*00020c70*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00020c74*/ MOV         R0, R3 
    /*00020c78*/ MOV         R5, R3 
    /*00020c7c*/ SUB         SP, SP, #12 
    /*00020c80*/ MOV         R6, R1 
    /*00020c84*/ MOV         R1, #0 
    /*00020c88*/ MOV         R7, R2 
    /*00020c8c*/ BL          0x0000000000020C8C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00020c90*/ LDR         R3, [R5, #764]              @ 0x2fc 
    /*00020c94*/ CMP         R3, #1 
    /*00020c98*/ BEQ         VI_GdcExtChnTaskCallBack_x20d08
    /*00020c9c*/ MOVW        R3, #1153                   @ 0x481 
    /*00020ca0*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9484] 
    /*00020ca4*/ STR         R3, [SP] 
    /*00020ca8*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9484] 
    /*00020cac*/ LDR         R3, [PC, #160]              @ 0x0000000000020d54 
    /*00020cb0*/ MOV         R1, #16 
    /*00020cb4*/ MOV         R0, #3 
    /*00020cb8*/ ADD         R5, R5, #336                @ 0x150 
    /*00020cbc*/ BL          0x0000000000020CBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_GdcExtChnTaskCallBack_x20cc0:
    /*00020cc0*/ MOV         R4, #176                    @ 0xb0 
    /*00020cc4*/ MOV         R1, #0 
    /*00020cc8*/ MUL         R4, R4, R6 
    /*00020ccc*/ MOV         R0, R5 
    /*00020cd0*/ BL          0x0000000000020CD0          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00020cd4*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00020cd8*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00020cdc*/ ADD         R0, R4, #28 
    /*00020ce0*/ ADD         R0, R5, R0 
    /*00020ce4*/ BL          0x0000000000020CE4          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*00020ce8*/ ADD         R0, R4, #36                 @ 0x24 
    /*00020cec*/ ADD         R0, R5, R0 
    /*00020cf0*/ BL          0x0000000000020CF0          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*00020cf4*/ ADD         R0, R4, #88                 @ 0x58 
    /*00020cf8*/ ADD         R0, R5, R0 
    /*00020cfc*/ ADD         SP, SP, #12 
    /*00020d00*/ POP         {R4, R5, R6, R7, LR} 
    VI_GdcExtChnTaskCallBack_x20d04:
    /*00020d04*/ B           VI_GdcExtChnTaskCallBack_x20d04@ osal_wakeup [R_ARM_JUMP24: +0x0] 
    VI_GdcExtChnTaskCallBack_x20d08:
    /*00020d08*/ MOVW        R2, #6264                   @ 0x1878 
    /*00020d0c*/ MOV         R4, #696                    @ 0x2b8 
    /*00020d10*/ MUL         R2, R2, R6 
    /*00020d14*/ MOVW        R3, #0                      @ g_astPicInfo [R_ARM_MOVW_ABS_NC: .bss+0x1da8] 
    /*00020d18*/ MLA         R4, R4, R7, R2 
    /*00020d1c*/ MOVT        R3, #0                      @ g_astPicInfo [R_ARM_MOVT_ABS: .bss+0x1da8] 
    /*00020d20*/ ADD         R5, R5, #336                @ 0x150 
    /*00020d24*/ MOV         R2, #336                    @ 0x150 
    /*00020d28*/ ADD         R4, R4, R3 
    /*00020d2c*/ MOV         R1, R5 
    /*00020d30*/ MOV         R0, R4 
    /*00020d34*/ BL          0x0000000000020D34          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00020d38*/ MOV         R3, #0 
    /*00020d3c*/ MOV         R1, R7 
    /*00020d40*/ MOV         R2, R4 
    /*00020d44*/ MOV         R0, R6 
    /*00020d48*/ STR         R3, [R4, #688]              @ 0x2b0 
    /*00020d4c*/ BL          0x0000000000020D4C          @ VI_ProcSendPic [R_ARM_CALL: .text+0x26e8] 
    /*00020d50*/ B           VI_GdcExtChnTaskCallBack_x20cc0
    /*00020d54*/ ANDEQ       R1, R0, R4, ASR #8 
FUNC_END VI_GdcExtChnTaskCallBack


FUNC_BEGIN Vi_InitLocalDisAlgorithm.part.2
    /*00020d58*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00020d5c*/ SUB         SP, SP, #12 
    /*00020d60*/ MOVW        R3, #371                    @ 0x173 
    /*00020d64*/ MOV         R1, #16 
    /*00020d68*/ STR         R3, [SP] 
    /*00020d6c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x94b4] 
    /*00020d70*/ LDR         R3, [PC, #24]               @ 0x0000000000020d90 
    /*00020d74*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x94b4] 
    /*00020d78*/ MOV         R0, #3 
    /*00020d7c*/ BL          0x0000000000020D7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020d80*/ MOVW        R0, #32776                  @ 0x8008 
    /*00020d84*/ MOVT        R0, #40976                  @ 0xa010 
    /*00020d88*/ ADD         SP, SP, #12 
    /*00020d8c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00020d90*/ ANDEQ       R1, R0, R0, ROR #8 
FUNC_END Vi_InitLocalDisAlgorithm.part.2


FUNC_BEGIN VI_UpdateChnGdcAttr
    /*00020d94*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00020d98*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00020d9c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00020da0*/ LDR         R3, [R3, R0, LSL #2] 
    /*00020da4*/ ADD         R4, R3, #36864              @ 0x9000 
    /*00020da8*/ ADD         R4, R4, R1, LSL #4 
    /*00020dac*/ LDR         R7, [R4, #2032]             @ 0x7f0 
    /*00020db0*/ CMP         R7, #1 
    /*00020db4*/ BEQ         VI_UpdateChnGdcAttr_x20dc0
    /*00020db8*/ MOV         R0, #0 
    /*00020dbc*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_UpdateChnGdcAttr_x20dc0:
    /*00020dc0*/ MOV         R5, R0 
    /*00020dc4*/ ADD         R0, R1, #34                 @ 0x22 
    /*00020dc8*/ MOV         R6, R1 
    /*00020dcc*/ ADD         R1, R3, #38144              @ 0x9500 
    /*00020dd0*/ ADD         R3, R3, #38912              @ 0x9800 
    /*00020dd4*/ LSL         R0, R0, #4 
    /*00020dd8*/ ADD         R3, R3, #176                @ 0xb0 
    /*00020ddc*/ ADD         R1, R1, #200                @ 0xc8 
    /*00020de0*/ ADD         R1, R1, R0 
    /*00020de4*/ MOV         R2, #16 
    /*00020de8*/ ADD         R0, R3, R0 
    /*00020dec*/ BL          0x0000000000020DEC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00020df0*/ MOV         R3, #0 
    /*00020df4*/ MOV         R2, R7 
    /*00020df8*/ MOV         R1, R6 
    /*00020dfc*/ MOV         R0, R5 
    /*00020e00*/ STR         R3, [R4, #2032]             @ 0x7f0 
    /*00020e04*/ BL          0x0000000000020E04          @ VI_DRV_SetGdcCfgUpdateFlag [R_ARM_CALL: .text+0x2aa8c] 
    /*00020e08*/ MOV         R0, #0 
    /*00020e0c*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_UpdateChnGdcAttr


FUNC_BEGIN VI_CheckChnAttrForGdc
    /*00020e10*/ PUSH        {R4, R5, LR} 
    /*00020e14*/ SUB         SP, SP, #68                 @ 0x44 
    /*00020e18*/ MOV         R4, R1 
    /*00020e1c*/ MOV         R5, R0 
    /*00020e20*/ BL          0x0000000000020E20          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00020e24*/ CMP         R0, #0 
    /*00020e28*/ BEQ         VI_CheckChnAttrForGdc_x20e34
    VI_CheckChnAttrForGdc_x20e2c:
    /*00020e2c*/ ADD         SP, SP, #68                 @ 0x44 
    /*00020e30*/ POP         {R4, R5, PC} 
    VI_CheckChnAttrForGdc_x20e34:
    /*00020e34*/ MOV         R0, R4 
    /*00020e38*/ BL          0x0000000000020E38          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*00020e3c*/ CMP         R0, #0 
    /*00020e40*/ BNE         VI_CheckChnAttrForGdc_x20e2c
    /*00020e44*/ ADD         R2, SP, #20 
    /*00020e48*/ MOV         R1, R4 
    /*00020e4c*/ MOV         R0, R5 
    /*00020e50*/ BL          0x0000000000020E50          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*00020e54*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00020e58*/ CMP         R3, #0 
    /*00020e5c*/ BNE         VI_CheckChnAttrForGdc_x20eb0
    /*00020e60*/ LDR         R0, [SP, #28] 
    /*00020e64*/ BL          0x0000000000020E64          @ VI_DRV_CheckGdcSupportPixelFormat [R_ARM_CALL: .text+0x2a68c] 
    /*00020e68*/ CMP         R0, #0 
    /*00020e6c*/ BNE         VI_CheckChnAttrForGdc_x20ee8
    /*00020e70*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00020e74*/ CMP         R3, #1 
    /*00020e78*/ BLS         VI_CheckChnAttrForGdc_x20e2c
    /*00020e7c*/ MOV         R3, #85                     @ 0x55 
    /*00020e80*/ STR         R4, [SP, #8] 
    /*00020e84*/ STR         R3, [SP] 
    /*00020e88*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x95c4] 
    /*00020e8c*/ STR         R5, [SP, #4] 
    /*00020e90*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x95c4] 
    /*00020e94*/ LDR         R3, [PC, #136]              @ 0x0000000000020f24 
    /*00020e98*/ MOV         R1, #16 
    /*00020e9c*/ MOV         R0, #3 
    /*00020ea0*/ BL          0x0000000000020EA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020ea4*/ MOVW        R0, #32776                  @ 0x8008 
    /*00020ea8*/ MOVT        R0, #40976                  @ 0xa010 
    /*00020eac*/ B           VI_CheckChnAttrForGdc_x20e2c
    VI_CheckChnAttrForGdc_x20eb0:
    /*00020eb0*/ STR         R3, [SP, #12] 
    /*00020eb4*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x951c] 
    /*00020eb8*/ MOV         R3, #72                     @ 0x48 
    /*00020ebc*/ STR         R4, [SP, #8] 
    /*00020ec0*/ STR         R3, [SP] 
    /*00020ec4*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x951c] 
    /*00020ec8*/ STR         R5, [SP, #4] 
    /*00020ecc*/ MOV         R1, #16 
    /*00020ed0*/ LDR         R3, [PC, #76]               @ 0x0000000000020f24 
    /*00020ed4*/ MOV         R0, #3 
    /*00020ed8*/ BL          0x0000000000020ED8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020edc*/ MOVW        R0, #32776                  @ 0x8008 
    /*00020ee0*/ MOVT        R0, #40976                  @ 0xa010 
    /*00020ee4*/ B           VI_CheckChnAttrForGdc_x20e2c
    VI_CheckChnAttrForGdc_x20ee8:
    /*00020ee8*/ LDR         R1, [SP, #28] 
    /*00020eec*/ MOV         R3, #78                     @ 0x4e 
    /*00020ef0*/ STR         R4, [SP, #8] 
    /*00020ef4*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9570] 
    /*00020ef8*/ STR         R3, [SP] 
    /*00020efc*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9570] 
    /*00020f00*/ STR         R1, [SP, #12] 
    /*00020f04*/ MOV         R0, #3 
    /*00020f08*/ STR         R5, [SP, #4] 
    /*00020f0c*/ MOV         R1, #16 
    /*00020f10*/ LDR         R3, [PC, #12]               @ 0x0000000000020f24 
    /*00020f14*/ BL          0x0000000000020F14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020f18*/ MOVW        R0, #32776                  @ 0x8008 
    /*00020f1c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00020f20*/ B           VI_CheckChnAttrForGdc_x20e2c
    /*00020f24*/ ANDEQ       R1, R0, IP, ROR R4 
FUNC_END VI_CheckChnAttrForGdc


FUNC_BEGIN VI_SetChnRotationExAttr
    /*00020f28*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00020f2c*/ SUB         SP, SP, #80                 @ 0x50 
    /*00020f30*/ MOV         R5, R1 
    /*00020f34*/ MOV         R7, R2 
    /*00020f38*/ MOV         R6, R0 
    /*00020f3c*/ BL          0x0000000000020F3C          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00020f40*/ SUBS        R4, R0, #0 
    /*00020f44*/ BEQ         VI_SetChnRotationExAttr_x20f54
    VI_SetChnRotationExAttr_x20f48:
    /*00020f48*/ MOV         R0, R4 
    /*00020f4c*/ ADD         SP, SP, #80                 @ 0x50 
    /*00020f50*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SetChnRotationExAttr_x20f54:
    /*00020f54*/ MOV         R0, R5 
    /*00020f58*/ BL          0x0000000000020F58          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*00020f5c*/ SUBS        R4, R0, #0 
    /*00020f60*/ BNE         VI_SetChnRotationExAttr_x20f48
    /*00020f64*/ MOV         R0, R7 
    /*00020f68*/ BL          0x0000000000020F68          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00020f6c*/ SUBS        R4, R0, #0 
    /*00020f70*/ BNE         VI_SetChnRotationExAttr_x20f48
    /*00020f74*/ MOV         R0, R5 
    /*00020f78*/ BL          0x0000000000020F78          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*00020f7c*/ CMP         R0, #0 
    /*00020f80*/ BNE         VI_SetChnRotationExAttr_x2109c
    /*00020f84*/ MOV         R9, #176                    @ 0xb0 
    /*00020f88*/ MOVW        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00020f8c*/ MUL         R9, R9, R6 
    /*00020f90*/ MOVT        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00020f94*/ ADD         SL, R9, #100                @ 0x64 
    /*00020f98*/ ADD         SL, R8, SL 
    /*00020f9c*/ MOV         R0, SL 
    /*00020fa0*/ BL          0x0000000000020FA0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00020fa4*/ CMP         R0, #0 
    /*00020fa8*/ BNE         VI_SetChnRotationExAttr_x210cc
    /*00020fac*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00020fb0*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00020fb4*/ LDR         R3, [R3, R6, LSL #2] 
    /*00020fb8*/ CMP         R3, #0 
    /*00020fbc*/ BEQ         VI_SetChnRotationExAttr_x21128
    /*00020fc0*/ MOV         R1, R5 
    /*00020fc4*/ MOV         R0, R6 
    /*00020fc8*/ BL          0x0000000000020FC8          @ VI_DRV_IsChnAttrSetted [R_ARM_CALL: .text+0x29cfc] 
    /*00020fcc*/ CMP         R0, #0 
    /*00020fd0*/ BEQ         VI_SetChnRotationExAttr_x210ec
    /*00020fd4*/ LDR         R3, [R7] 
    /*00020fd8*/ CMP         R3, #0 
    /*00020fdc*/ BNE         VI_SetChnRotationExAttr_x21084
    VI_SetChnRotationExAttr_x20fe0:
    /*00020fe0*/ MOV         R1, R5 
    /*00020fe4*/ ADD         R2, SP, #36                 @ 0x24 
    /*00020fe8*/ MOV         R0, R6 
    /*00020fec*/ BL          0x0000000000020FEC          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*00020ff0*/ ADD         R2, SP, #36                 @ 0x24 
    /*00020ff4*/ ADD         R3, SP, #28 
    /*00020ff8*/ MOV         R1, R5 
    /*00020ffc*/ MOV         R0, R6 
    /*00021000*/ BL          0x0000000000021000          @ VI_DRV_GetChnOutPutSizeFromUserSet [R_ARM_CALL: .text+0x2b61c] 
    /*00021004*/ ADD         R3, SP, #28 
    /*00021008*/ MOV         R2, R7 
    /*0002100c*/ MOV         R1, R5 
    /*00021010*/ MOV         R0, R6 
    /*00021014*/ BL          0x0000000000021014          @ VI_DRV_CheckChnRotateExAttr [R_ARM_CALL: .text+0x2a214] 
    /*00021018*/ SUBS        R4, R0, #0 
    /*0002101c*/ BNE         VI_SetChnRotationExAttr_x210d8
    /*00021020*/ ADD         R2, SP, #24 
    /*00021024*/ MOV         R1, R5 
    /*00021028*/ MOV         R0, R6 
    /*0002102c*/ BL          0x000000000002102C          @ VI_DRV_GetChnRotationAttrSet [R_ARM_CALL: .text+0x2a5c0] 
    /*00021030*/ LDR         R3, [SP, #24] 
    /*00021034*/ CMP         R3, #0 
    /*00021038*/ BEQ         VI_SetChnRotationExAttr_x21048
    /*0002103c*/ LDR         R2, [R7] 
    /*00021040*/ CMP         R2, #1 
    /*00021044*/ BEQ         VI_SetChnRotationExAttr_x21160
    VI_SetChnRotationExAttr_x21048:
    /*00021048*/ ADD         R9, R9, #140                @ 0x8c 
    /*0002104c*/ ADD         R1, SP, #20 
    /*00021050*/ ADD         R8, R8, R9 
    /*00021054*/ MOV         R0, R8 
    /*00021058*/ BL          0x0000000000021058          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0002105c*/ MOV         R1, R5 
    /*00021060*/ MOV         R0, R6 
    /*00021064*/ MOV         R2, R7 
    /*00021068*/ BL          0x0000000000021068          @ VI_DRV_SetChnRotationExAttr [R_ARM_CALL: .text+0x2a310] 
    /*0002106c*/ ADD         R1, SP, #20 
    /*00021070*/ MOV         R0, R8 
    /*00021074*/ BL          0x0000000000021074          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_SetChnRotationExAttr_x21078:
    /*00021078*/ MOV         R0, SL 
    /*0002107c*/ BL          0x000000000002107C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00021080*/ B           VI_SetChnRotationExAttr_x20f48
    VI_SetChnRotationExAttr_x21084:
    /*00021084*/ MOV         R1, R5 
    /*00021088*/ MOV         R0, R6 
    /*0002108c*/ BL          0x000000000002108C          @ VI_CheckChnAttrForGdc [R_ARM_CALL: .text+0x20e10] 
    /*00021090*/ SUBS        R4, R0, #0 
    /*00021094*/ BEQ         VI_SetChnRotationExAttr_x20fe0
    /*00021098*/ B           VI_SetChnRotationExAttr_x21078
    VI_SetChnRotationExAttr_x2109c:
    /*0002109c*/ MOV         R3, #108                    @ 0x6c 
    /*000210a0*/ STR         R5, [SP, #4] 
    /*000210a4*/ STR         R3, [SP] 
    /*000210a8*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9620] 
    /*000210ac*/ LDR         R3, [PC, #232]              @ 0x000000000002119c 
    /*000210b0*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9620] 
    /*000210b4*/ MOV         R1, #16 
    /*000210b8*/ MOV         R0, #3 
    /*000210bc*/ MOVW        R4, #32776                  @ 0x8008 
    /*000210c0*/ BL          0x00000000000210C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000210c4*/ MOVT        R4, #40976                  @ 0xa010 
    /*000210c8*/ B           VI_SetChnRotationExAttr_x20f48
    VI_SetChnRotationExAttr_x210cc:
    /*000210cc*/ MOV         R4, #65024                  @ 0xfe00 
    /*000210d0*/ MOVT        R4, #65535                  @ 0xffff 
    /*000210d4*/ B           VI_SetChnRotationExAttr_x20f48
    VI_SetChnRotationExAttr_x210d8:
    /*000210d8*/ MOV         R0, SL 
    /*000210dc*/ MOVW        R4, #32771                  @ 0x8003 
    /*000210e0*/ BL          0x00000000000210E0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000210e4*/ MOVT        R4, #40976                  @ 0xa010 
    /*000210e8*/ B           VI_SetChnRotationExAttr_x20f48
    VI_SetChnRotationExAttr_x210ec:
    /*000210ec*/ MOV         R0, SL 
    /*000210f0*/ MOVW        R4, #32784                  @ 0x8010 
    /*000210f4*/ BL          0x00000000000210F4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000210f8*/ MOV         R3, #125                    @ 0x7d 
    /*000210fc*/ STR         R5, [SP, #8] 
    /*00021100*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9684] 
    /*00021104*/ STR         R3, [SP] 
    /*00021108*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9684] 
    /*0002110c*/ STR         R6, [SP, #4] 
    /*00021110*/ MOV         R1, #16 
    /*00021114*/ LDR         R3, [PC, #128]              @ 0x000000000002119c 
    /*00021118*/ MOV         R0, #3 
    /*0002111c*/ BL          0x000000000002111C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021120*/ MOVT        R4, #40976                  @ 0xa010 
    /*00021124*/ B           VI_SetChnRotationExAttr_x20f48
    VI_SetChnRotationExAttr_x21128:
    /*00021128*/ MOV         R3, #116                    @ 0x74 
    /*0002112c*/ MOV         R1, #16 
    /*00021130*/ STR         R3, [SP] 
    /*00021134*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9654] 
    /*00021138*/ LDR         R3, [PC, #92]               @ 0x000000000002119c 
    /*0002113c*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9654] 
    /*00021140*/ STR         R6, [SP, #4] 
    /*00021144*/ MOV         R0, #3 
    /*00021148*/ BL          0x0000000000021148          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002114c*/ MOV         R0, SL 
    /*00021150*/ MOVW        R4, #32773                  @ 0x8005 
    /*00021154*/ BL          0x0000000000021154          @ osal_up [R_ARM_CALL: +0x0] 
    /*00021158*/ MOVT        R4, #40976                  @ 0xa010 
    /*0002115c*/ B           VI_SetChnRotationExAttr_x20f48
    VI_SetChnRotationExAttr_x21160:
    /*00021160*/ STR         R2, [SP, #8] 
    /*00021164*/ MOV         R1, #158                    @ 0x9e 
    /*00021168*/ STR         R3, [SP, #4] 
    /*0002116c*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x96c8] 
    /*00021170*/ STR         R1, [SP] 
    /*00021174*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x96c8] 
    /*00021178*/ LDR         R3, [PC, #28]               @ 0x000000000002119c 
    /*0002117c*/ MOV         R1, #16 
    /*00021180*/ MOV         R0, #3 
    /*00021184*/ MOVW        R4, #32777                  @ 0x8009 
    /*00021188*/ BL          0x0000000000021188          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002118c*/ MOV         R0, SL 
    /*00021190*/ BL          0x0000000000021190          @ osal_up [R_ARM_CALL: +0x0] 
    /*00021194*/ MOVT        R4, #40976                  @ 0xa010 
    /*00021198*/ B           VI_SetChnRotationExAttr_x20f48
    /*0002119c*/ MULEQ       R0, R4, R4 
FUNC_END VI_SetChnRotationExAttr


FUNC_BEGIN VI_GetChnRotationExAttr
    /*000211a0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000211a4*/ SUB         SP, SP, #8 
    /*000211a8*/ MOV         R5, R1 
    /*000211ac*/ MOV         R6, R2 
    /*000211b0*/ MOV         R7, R0 
    /*000211b4*/ BL          0x00000000000211B4          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*000211b8*/ SUBS        R4, R0, #0 
    /*000211bc*/ BEQ         VI_GetChnRotationExAttr_x211cc
    VI_GetChnRotationExAttr_x211c0:
    /*000211c0*/ MOV         R0, R4 
    /*000211c4*/ ADD         SP, SP, #8 
    /*000211c8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetChnRotationExAttr_x211cc:
    /*000211cc*/ MOV         R0, R5 
    /*000211d0*/ BL          0x00000000000211D0          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*000211d4*/ SUBS        R4, R0, #0 
    /*000211d8*/ BNE         VI_GetChnRotationExAttr_x211c0
    /*000211dc*/ MOV         R0, R6 
    /*000211e0*/ BL          0x00000000000211E0          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*000211e4*/ SUBS        R4, R0, #0 
    /*000211e8*/ BNE         VI_GetChnRotationExAttr_x211c0
    /*000211ec*/ MOV         R0, R5 
    /*000211f0*/ BL          0x00000000000211F0          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*000211f4*/ CMP         R0, #0 
    /*000211f8*/ BNE         VI_GetChnRotationExAttr_x21248
    /*000211fc*/ LDR         R3, [PC, #184]              @ 0x00000000000212bc 
    /*00021200*/ MOV         R8, #176                    @ 0xb0 
    /*00021204*/ MLA         R8, R8, R7, R3 
    /*00021208*/ MOV         R0, R8 
    /*0002120c*/ BL          0x000000000002120C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00021210*/ CMP         R0, #0 
    /*00021214*/ BNE         VI_GetChnRotationExAttr_x21278
    /*00021218*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0002121c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00021220*/ LDR         R3, [R3, R7, LSL #2] 
    /*00021224*/ CMP         R3, #0 
    /*00021228*/ BEQ         VI_GetChnRotationExAttr_x21284
    /*0002122c*/ MOV         R0, R7 
    /*00021230*/ MOV         R2, R6 
    /*00021234*/ MOV         R1, R5 
    /*00021238*/ BL          0x0000000000021238          @ VI_DRV_GetChnRotationExAttrSet [R_ARM_CALL: .text+0x2a35c] 
    /*0002123c*/ MOV         R0, R8 
    /*00021240*/ BL          0x0000000000021240          @ osal_up [R_ARM_CALL: +0x0] 
    /*00021244*/ B           VI_GetChnRotationExAttr_x211c0
    VI_GetChnRotationExAttr_x21248:
    /*00021248*/ MOV         R3, #180                    @ 0xb4 
    /*0002124c*/ STR         R5, [SP, #4] 
    /*00021250*/ STR         R3, [SP] 
    /*00021254*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9620] 
    /*00021258*/ LDR         R3, [PC, #96]               @ 0x00000000000212c0 
    /*0002125c*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9620] 
    /*00021260*/ MOV         R1, #16 
    /*00021264*/ MOV         R0, #3 
    /*00021268*/ MOVW        R4, #32776                  @ 0x8008 
    /*0002126c*/ BL          0x000000000002126C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021270*/ MOVT        R4, #40976                  @ 0xa010 
    /*00021274*/ B           VI_GetChnRotationExAttr_x211c0
    VI_GetChnRotationExAttr_x21278:
    /*00021278*/ MOV         R4, #65024                  @ 0xfe00 
    /*0002127c*/ MOVT        R4, #65535                  @ 0xffff 
    /*00021280*/ B           VI_GetChnRotationExAttr_x211c0
    VI_GetChnRotationExAttr_x21284:
    /*00021284*/ MOV         R3, #188                    @ 0xbc 
    /*00021288*/ MOV         R1, #16 
    /*0002128c*/ STR         R3, [SP] 
    /*00021290*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9654] 
    /*00021294*/ LDR         R3, [PC, #36]               @ 0x00000000000212c0 
    /*00021298*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9654] 
    /*0002129c*/ STR         R7, [SP, #4] 
    /*000212a0*/ MOV         R0, #3 
    /*000212a4*/ BL          0x00000000000212A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000212a8*/ MOV         R0, R8 
    /*000212ac*/ MOVW        R4, #32773                  @ 0x8005 
    /*000212b0*/ BL          0x00000000000212B0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000212b4*/ MOVT        R4, #40976                  @ 0xa010 
    /*000212b8*/ B           VI_GetChnRotationExAttr_x211c0
    /*000212bc*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*000212c0*/ ANDEQ       R1, R0, IP, LSR #9 
FUNC_END VI_GetChnRotationExAttr


FUNC_BEGIN VI_SetChnSpreadAttr
    /*000212c4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000212c8*/ SUB         SP, SP, #56                 @ 0x38 
    /*000212cc*/ MOV         R5, R1 
    /*000212d0*/ MOV         R7, R2 
    /*000212d4*/ MOV         R6, R0 
    /*000212d8*/ BL          0x00000000000212D8          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*000212dc*/ SUBS        R4, R0, #0 
    /*000212e0*/ BEQ         VI_SetChnSpreadAttr_x212f0
    VI_SetChnSpreadAttr_x212e4:
    /*000212e4*/ MOV         R0, R4 
    /*000212e8*/ ADD         SP, SP, #56                 @ 0x38 
    /*000212ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_SetChnSpreadAttr_x212f0:
    /*000212f0*/ MOV         R0, R5 
    /*000212f4*/ BL          0x00000000000212F4          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*000212f8*/ SUBS        R4, R0, #0 
    /*000212fc*/ BNE         VI_SetChnSpreadAttr_x212e4
    /*00021300*/ MOV         R0, R7 
    /*00021304*/ BL          0x0000000000021304          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00021308*/ SUBS        R4, R0, #0 
    /*0002130c*/ BNE         VI_SetChnSpreadAttr_x212e4
    /*00021310*/ MOV         R0, R5 
    /*00021314*/ BL          0x0000000000021314          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*00021318*/ CMP         R0, #0 
    /*0002131c*/ BNE         VI_SetChnSpreadAttr_x21468
    /*00021320*/ MOV         R9, #176                    @ 0xb0 
    /*00021324*/ MOVW        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00021328*/ MUL         R9, R9, R6 
    /*0002132c*/ MOVT        R8, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00021330*/ ADD         SL, R9, #100                @ 0x64 
    /*00021334*/ ADD         SL, R8, SL 
    /*00021338*/ MOV         R0, SL 
    /*0002133c*/ BL          0x000000000002133C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00021340*/ CMP         R0, #0 
    /*00021344*/ BNE         VI_SetChnSpreadAttr_x21498
    /*00021348*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0002134c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00021350*/ LDR         R3, [R3, R6, LSL #2] 
    /*00021354*/ CMP         R3, #0 
    /*00021358*/ BEQ         VI_SetChnSpreadAttr_x2151c
    /*0002135c*/ MOV         R1, R5 
    /*00021360*/ MOV         R0, R6 
    /*00021364*/ BL          0x0000000000021364          @ VI_DRV_IsChnAttrSetted [R_ARM_CALL: .text+0x29cfc] 
    /*00021368*/ CMP         R0, #0 
    /*0002136c*/ BEQ         VI_SetChnSpreadAttr_x214f4
    /*00021370*/ LDR         R3, [R7] 
    /*00021374*/ CMP         R3, #0 
    /*00021378*/ BNE         VI_SetChnSpreadAttr_x2140c
    VI_SetChnSpreadAttr_x2137c:
    /*0002137c*/ MOV         R1, R5 
    /*00021380*/ MOV         R0, R6 
    /*00021384*/ BL          0x0000000000021384          @ VI_IsPhyChnAttachFishEye [R_ARM_CALL: .text+0x442c] 
    /*00021388*/ CMP         R0, #0 
    /*0002138c*/ BNE         VI_SetChnSpreadAttr_x214a4
    /*00021390*/ MOV         R2, R7 
    /*00021394*/ MOV         R1, R5 
    /*00021398*/ MOV         R0, R6 
    /*0002139c*/ BL          0x000000000002139C          @ VI_DRV_CheckChnSpreadAttr [R_ARM_CALL: .text+0x2a60c] 
    /*000213a0*/ SUBS        R4, R0, #0 
    /*000213a4*/ BNE         VI_SetChnSpreadAttr_x214e0
    /*000213a8*/ ADD         R2, SP, #24 
    /*000213ac*/ MOV         R1, R5 
    /*000213b0*/ MOV         R0, R6 
    /*000213b4*/ BL          0x00000000000213B4          @ VI_DRV_GetChnLDCAttrSet [R_ARM_CALL: .text+0x29f94] 
    /*000213b8*/ LDR         R3, [SP, #24] 
    /*000213bc*/ CMP         R3, #1 
    /*000213c0*/ BNE         VI_SetChnSpreadAttr_x213d0
    /*000213c4*/ LDR         R3, [R7] 
    /*000213c8*/ CMP         R3, #1 
    /*000213cc*/ BEQ         VI_SetChnSpreadAttr_x21424
    VI_SetChnSpreadAttr_x213d0:
    /*000213d0*/ ADD         R9, R9, #140                @ 0x8c 
    /*000213d4*/ ADD         R1, SP, #20 
    /*000213d8*/ ADD         R8, R8, R9 
    /*000213dc*/ MOV         R0, R8 
    /*000213e0*/ BL          0x00000000000213E0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000213e4*/ MOV         R1, R5 
    /*000213e8*/ MOV         R0, R6 
    /*000213ec*/ MOV         R2, R7 
    /*000213f0*/ BL          0x00000000000213F0          @ VI_DRV_SetChnSpreadAttr [R_ARM_CALL: .text+0x2a6a4] 
    /*000213f4*/ ADD         R1, SP, #20 
    /*000213f8*/ MOV         R0, R8 
    /*000213fc*/ BL          0x00000000000213FC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_SetChnSpreadAttr_x21400:
    /*00021400*/ MOV         R0, SL 
    /*00021404*/ BL          0x0000000000021404          @ osal_up [R_ARM_CALL: +0x0] 
    /*00021408*/ B           VI_SetChnSpreadAttr_x212e4
    VI_SetChnSpreadAttr_x2140c:
    /*0002140c*/ MOV         R1, R5 
    /*00021410*/ MOV         R0, R6 
    /*00021414*/ BL          0x0000000000021414          @ VI_CheckChnAttrForGdc [R_ARM_CALL: .text+0x20e10] 
    /*00021418*/ SUBS        R4, R0, #0 
    /*0002141c*/ BEQ         VI_SetChnSpreadAttr_x2137c
    /*00021420*/ B           VI_SetChnSpreadAttr_x21400
    VI_SetChnSpreadAttr_x21424:
    /*00021424*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00021428*/ CMP         R3, #0 
    /*0002142c*/ BGE         VI_SetChnSpreadAttr_x213d0
    /*00021430*/ STR         R3, [SP, #4] 
    /*00021434*/ MOV         R1, #16 
    /*00021438*/ MOVW        R3, #270                    @ 0x10e 
    /*0002143c*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x97fc] 
    /*00021440*/ STR         R3, [SP] 
    /*00021444*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x97fc] 
    /*00021448*/ LDR         R3, [PC, #260]              @ 0x0000000000021554 
    /*0002144c*/ MOV         R0, #3 
    /*00021450*/ BL          0x0000000000021450          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021454*/ MOV         R0, SL 
    /*00021458*/ MOVW        R4, #32771                  @ 0x8003 
    /*0002145c*/ BL          0x000000000002145C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00021460*/ MOVT        R4, #40976                  @ 0xa010 
    /*00021464*/ B           VI_SetChnSpreadAttr_x212e4
    VI_SetChnSpreadAttr_x21468:
    /*00021468*/ MOV         R3, #215                    @ 0xd7 
    /*0002146c*/ STR         R5, [SP, #4] 
    /*00021470*/ STR         R3, [SP] 
    /*00021474*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9620] 
    /*00021478*/ LDR         R3, [PC, #212]              @ 0x0000000000021554 
    /*0002147c*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9620] 
    /*00021480*/ MOV         R1, #16 
    /*00021484*/ MOV         R0, #3 
    /*00021488*/ MOVW        R4, #32776                  @ 0x8008 
    /*0002148c*/ BL          0x000000000002148C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021490*/ MOVT        R4, #40976                  @ 0xa010 
    /*00021494*/ B           VI_SetChnSpreadAttr_x212e4
    VI_SetChnSpreadAttr_x21498:
    /*00021498*/ MOV         R4, #65024                  @ 0xfe00 
    /*0002149c*/ MOVT        R4, #65535                  @ 0xffff 
    /*000214a0*/ B           VI_SetChnSpreadAttr_x212e4
    VI_SetChnSpreadAttr_x214a4:
    /*000214a4*/ MOV         R0, SL 
    /*000214a8*/ MOVW        R4, #32777                  @ 0x8009 
    /*000214ac*/ BL          0x00000000000214AC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000214b0*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9778] 
    /*000214b4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9778] 
    /*000214b8*/ MOV         R3, #250                    @ 0xfa 
    /*000214bc*/ STR         R5, [SP, #8] 
    /*000214c0*/ STR         R6, [SP, #4] 
    /*000214c4*/ STR         R3, [SP] 
    VI_SetChnSpreadAttr_x214c8:
    /*000214c8*/ LDR         R3, [PC, #132]              @ 0x0000000000021554 
    /*000214cc*/ MOV         R1, #16 
    /*000214d0*/ MOV         R0, #3 
    /*000214d4*/ MOVT        R4, #40976                  @ 0xa010 
    /*000214d8*/ BL          0x00000000000214D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000214dc*/ B           VI_SetChnSpreadAttr_x212e4
    VI_SetChnSpreadAttr_x214e0:
    /*000214e0*/ MOV         R0, SL 
    /*000214e4*/ MOVW        R4, #32771                  @ 0x8003 
    /*000214e8*/ BL          0x00000000000214E8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000214ec*/ MOVT        R4, #40976                  @ 0xa010 
    /*000214f0*/ B           VI_SetChnSpreadAttr_x212e4
    VI_SetChnSpreadAttr_x214f4:
    /*000214f4*/ MOV         R0, SL 
    /*000214f8*/ MOVW        R4, #32784                  @ 0x8010 
    /*000214fc*/ BL          0x00000000000214FC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00021500*/ MOV         R3, #232                    @ 0xe8 
    /*00021504*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9738] 
    /*00021508*/ STR         R5, [SP, #8] 
    /*0002150c*/ STR         R6, [SP, #4] 
    /*00021510*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9738] 
    /*00021514*/ STR         R3, [SP] 
    /*00021518*/ B           VI_SetChnSpreadAttr_x214c8
    VI_SetChnSpreadAttr_x2151c:
    /*0002151c*/ MOV         R3, #223                    @ 0xdf 
    /*00021520*/ MOV         R1, #16 
    /*00021524*/ STR         R3, [SP] 
    /*00021528*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9654] 
    /*0002152c*/ LDR         R3, [PC, #32]               @ 0x0000000000021554 
    /*00021530*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9654] 
    /*00021534*/ STR         R6, [SP, #4] 
    /*00021538*/ MOV         R0, #3 
    /*0002153c*/ BL          0x000000000002153C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021540*/ MOV         R0, SL 
    /*00021544*/ MOVW        R4, #32773                  @ 0x8005 
    /*00021548*/ BL          0x0000000000021548          @ osal_up [R_ARM_CALL: +0x0] 
    /*0002154c*/ MOVT        R4, #40976                  @ 0xa010 
    /*00021550*/ B           VI_SetChnSpreadAttr_x212e4
    /*00021554*/ ANDEQ       R1, R0, R4, ASR #9 
FUNC_END VI_SetChnSpreadAttr


FUNC_BEGIN VI_GetChnSpreadAttr
    /*00021558*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002155c*/ SUB         SP, SP, #8 
    /*00021560*/ MOV         R5, R1 
    /*00021564*/ MOV         R6, R2 
    /*00021568*/ MOV         R7, R0 
    /*0002156c*/ BL          0x000000000002156C          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00021570*/ SUBS        R4, R0, #0 
    /*00021574*/ BEQ         VI_GetChnSpreadAttr_x21584
    VI_GetChnSpreadAttr_x21578:
    /*00021578*/ MOV         R0, R4 
    /*0002157c*/ ADD         SP, SP, #8 
    /*00021580*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_GetChnSpreadAttr_x21584:
    /*00021584*/ MOV         R0, R5 
    /*00021588*/ BL          0x0000000000021588          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*0002158c*/ SUBS        R4, R0, #0 
    /*00021590*/ BNE         VI_GetChnSpreadAttr_x21578
    /*00021594*/ MOV         R0, R6 
    /*00021598*/ BL          0x0000000000021598          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0002159c*/ SUBS        R4, R0, #0 
    /*000215a0*/ BNE         VI_GetChnSpreadAttr_x21578
    /*000215a4*/ MOV         R0, R5 
    /*000215a8*/ BL          0x00000000000215A8          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*000215ac*/ CMP         R0, #0 
    /*000215b0*/ BNE         VI_GetChnSpreadAttr_x21600
    /*000215b4*/ LDR         R3, [PC, #184]              @ 0x0000000000021674 
    /*000215b8*/ MOV         R8, #176                    @ 0xb0 
    /*000215bc*/ MLA         R8, R8, R7, R3 
    /*000215c0*/ MOV         R0, R8 
    /*000215c4*/ BL          0x00000000000215C4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000215c8*/ CMP         R0, #0 
    /*000215cc*/ BNE         VI_GetChnSpreadAttr_x21630
    /*000215d0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000215d4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000215d8*/ LDR         R3, [R3, R7, LSL #2] 
    /*000215dc*/ CMP         R3, #0 
    /*000215e0*/ BEQ         VI_GetChnSpreadAttr_x2163c
    /*000215e4*/ MOV         R0, R7 
    /*000215e8*/ MOV         R2, R6 
    /*000215ec*/ MOV         R1, R5 
    /*000215f0*/ BL          0x00000000000215F0          @ VI_DRV_GetChnSpreadAttrSet [R_ARM_CALL: .text+0x2a6e8] 
    /*000215f4*/ MOV         R0, R8 
    /*000215f8*/ BL          0x00000000000215F8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000215fc*/ B           VI_GetChnSpreadAttr_x21578
    VI_GetChnSpreadAttr_x21600:
    /*00021600*/ MOVW        R3, #293                    @ 0x125 
    /*00021604*/ STR         R5, [SP, #4] 
    /*00021608*/ STR         R3, [SP] 
    /*0002160c*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9620] 
    /*00021610*/ LDR         R3, [PC, #96]               @ 0x0000000000021678 
    /*00021614*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9620] 
    /*00021618*/ MOV         R1, #16 
    /*0002161c*/ MOV         R0, #3 
    /*00021620*/ MOVW        R4, #32776                  @ 0x8008 
    /*00021624*/ BL          0x0000000000021624          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021628*/ MOVT        R4, #40976                  @ 0xa010 
    /*0002162c*/ B           VI_GetChnSpreadAttr_x21578
    VI_GetChnSpreadAttr_x21630:
    /*00021630*/ MOV         R4, #65024                  @ 0xfe00 
    /*00021634*/ MOVT        R4, #65535                  @ 0xffff 
    /*00021638*/ B           VI_GetChnSpreadAttr_x21578
    VI_GetChnSpreadAttr_x2163c:
    /*0002163c*/ MOVW        R3, #301                    @ 0x12d 
    /*00021640*/ MOV         R1, #16 
    /*00021644*/ STR         R3, [SP] 
    /*00021648*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9654] 
    /*0002164c*/ LDR         R3, [PC, #36]               @ 0x0000000000021678 
    /*00021650*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9654] 
    /*00021654*/ STR         R7, [SP, #4] 
    /*00021658*/ MOV         R0, #3 
    /*0002165c*/ BL          0x000000000002165C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021660*/ MOV         R0, R8 
    /*00021664*/ MOVW        R4, #32773                  @ 0x8005 
    /*00021668*/ BL          0x0000000000021668          @ osal_up [R_ARM_CALL: +0x0] 
    /*0002166c*/ MOVT        R4, #40976                  @ 0xa010 
    /*00021670*/ B           VI_GetChnSpreadAttr_x21578
    /*00021674*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00021678*/ LDRDEQ      R1, [R0], -R8 
FUNC_END VI_GetChnSpreadAttr


FUNC_BEGIN VI_MKP_PutVb
    /*0002167c*/ PUSH        {R4, R6, R7, LR} 
    /*00021680*/ MOV         R4, R0 
    /*00021684*/ SUB         SP, SP, #8 
    /*00021688*/ MOV         R0, #1 
    /*0002168c*/ MOV         R6, R2 
    /*00021690*/ MOV         R7, R3 
    /*00021694*/ BL          0x0000000000021694          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00021698*/ MOV         R2, R6 
    /*0002169c*/ MOV         R3, R7 
    /*000216a0*/ LDR         R1, [R0, #84]               @ 0x54 
    /*000216a4*/ MOV         R0, R4 
    /*000216a8*/ BLX         R1 
    /*000216ac*/ CMP         R0, #0 
    /*000216b0*/ BEQ         VI_MKP_PutVb_x216e8
    /*000216b4*/ MOV         R0, #1 
    /*000216b8*/ BL          0x00000000000216B8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000216bc*/ LDR         R3, [SP, #24] 
    /*000216c0*/ MOV         R2, R6 
    /*000216c4*/ STR         R3, [SP] 
    /*000216c8*/ MOV         R3, R7 
    /*000216cc*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000216d0*/ MOV         R0, R4 
    /*000216d4*/ BLX         R1 
    /*000216d8*/ CMP         R0, #0 
    /*000216dc*/ BNE         VI_MKP_PutVb_x21714
    VI_MKP_PutVb_x216e0:
    /*000216e0*/ ADD         SP, SP, #8 
    /*000216e4*/ POP         {R4, R6, R7, PC} 
    VI_MKP_PutVb_x216e8:
    /*000216e8*/ MOV         R3, #332                    @ 0x14c 
    /*000216ec*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9888] 
    /*000216f0*/ STR         R3, [SP] 
    /*000216f4*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9888] 
    /*000216f8*/ LDR         R3, [PC, #68]               @ 0x0000000000021744 
    /*000216fc*/ MOV         R1, #16 
    /*00021700*/ MOV         R0, #3 
    /*00021704*/ BL          0x0000000000021704          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021708*/ MOVW        R0, #32771                  @ 0x8003 
    /*0002170c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00021710*/ B           VI_MKP_PutVb_x216e0
    VI_MKP_PutVb_x21714:
    /*00021714*/ MOVW        R4, #32777                  @ 0x8009 
    /*00021718*/ MOVT        R4, #40976                  @ 0xa010 
    /*0002171c*/ MOVW        R3, #326                    @ 0x146 
    /*00021720*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9854] 
    /*00021724*/ STM         SP, {R3, R4} 
    /*00021728*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9854] 
    /*0002172c*/ LDR         R3, [PC, #16]               @ 0x0000000000021744 
    /*00021730*/ MOV         R1, #16 
    /*00021734*/ MOV         R0, #3 
    /*00021738*/ BL          0x0000000000021738          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002173c*/ MOV         R0, R4 
    /*00021740*/ B           VI_MKP_PutVb_x216e0
    /*00021744*/ ANDEQ       R1, R0, IP, ROR #9 
FUNC_END VI_MKP_PutVb


FUNC_BEGIN VI_IsGdcExist
    /*00021748*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002174c*/ MOV         R0, #37                     @ 0x25 
    /*00021750*/ SUB         SP, SP, #12 
    /*00021754*/ BL          0x0000000000021754          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00021758*/ CMP         R0, #0 
    /*0002175c*/ BEQ         VI_IsGdcExist_x21790
    /*00021760*/ LDR         R3, [R0, #16] 
    /*00021764*/ CMP         R3, #0 
    /*00021768*/ BEQ         VI_IsGdcExist_x21790
    /*0002176c*/ LDR         R3, [R0, #100]              @ 0x64 
    /*00021770*/ CMP         R3, #0 
    /*00021774*/ BEQ         VI_IsGdcExist_x21790
    /*00021778*/ LDR         R3, [R0, #64]               @ 0x40 
    /*0002177c*/ CMP         R3, #0 
    /*00021780*/ MOVNE       R0, #1 
    /*00021784*/ BEQ         VI_IsGdcExist_x21790
    /*00021788*/ ADD         SP, SP, #12 
    /*0002178c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_IsGdcExist_x21790:
    /*00021790*/ MOVW        R3, #349                    @ 0x15d 
    /*00021794*/ MOV         R1, #16 
    /*00021798*/ STR         R3, [SP] 
    /*0002179c*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x98b4] 
    /*000217a0*/ LDR         R3, [PC, #20]               @ 0x00000000000217bc 
    /*000217a4*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x98b4] 
    /*000217a8*/ MOV         R0, #7 
    /*000217ac*/ BL          0x00000000000217AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000217b0*/ MOV         R0, #0 
    /*000217b4*/ ADD         SP, SP, #12 
    /*000217b8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000217bc*/ STRDEQ      R1, [R0], -IP 
FUNC_END VI_IsGdcExist


FUNC_BEGIN Vi_InitLocalDisAlgorithm
    /*000217c0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000217c4*/ MOV         R4, R0 
    /*000217c8*/ SUB         SP, SP, #64                 @ 0x40 
    /*000217cc*/ MOV         R0, #37                     @ 0x25 
    /*000217d0*/ MOV         R5, R1 
    /*000217d4*/ BL          0x00000000000217D4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000217d8*/ SUBS        R7, R0, #0 
    /*000217dc*/ BEQ         Vi_InitLocalDisAlgorithm_x21878
    /*000217e0*/ LDR         R3, [R7, #116]              @ 0x74 
    /*000217e4*/ CMP         R3, #0 
    /*000217e8*/ BEQ         Vi_InitLocalDisAlgorithm_x21878
    /*000217ec*/ MOVW        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000217f0*/ MOVT        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000217f4*/ ADD         IP, R5, #34                 @ 0x22 
    /*000217f8*/ MOVW        R0, #38344                  @ 0x95c8 
    /*000217fc*/ LDR         R3, [R2, R4, LSL #2] 
    /*00021800*/ ADD         R6, SP, #12 
    /*00021804*/ MOV         R1, R5 
    /*00021808*/ ADD         R2, SP, #20 
    /*0002180c*/ ADD         R3, R3, IP, LSL #4 
    /*00021810*/ LDR         R8, [R3, R0] 
    /*00021814*/ MOV         R0, R4 
    /*00021818*/ BL          0x0000000000021818          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*0002181c*/ MOV         R0, R4 
    /*00021820*/ ADD         R2, SP, #20 
    /*00021824*/ MOV         R1, R5 
    /*00021828*/ MOV         R3, R6 
    /*0002182c*/ BL          0x000000000002182C          @ VI_DRV_GetChnOutPutSizeFromUserSet [R_ARM_CALL: .text+0x2b61c] 
    /*00021830*/ MOV         R0, R8 
    /*00021834*/ LDR         R3, [R7, #116]              @ 0x74 
    /*00021838*/ LDM         R6, {R1, R2} 
    /*0002183c*/ BLX         R3 
    /*00021840*/ SUBS        R4, R0, #0 
    /*00021844*/ BEQ         Vi_InitLocalDisAlgorithm_x2186c
    /*00021848*/ MOVW        R3, #386                    @ 0x182 
    /*0002184c*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x991c] 
    /*00021850*/ STR         R3, [SP] 
    /*00021854*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x991c] 
    /*00021858*/ STR         R4, [SP, #4] 
    /*0002185c*/ MOV         R1, #16 
    /*00021860*/ LDR         R3, [PC, #28]               @ 0x0000000000021884 
    /*00021864*/ MOV         R0, #3 
    /*00021868*/ BL          0x0000000000021868          @ HI_LOG [R_ARM_CALL: +0x0] 
    Vi_InitLocalDisAlgorithm_x2186c:
    /*0002186c*/ MOV         R0, R4 
    /*00021870*/ ADD         SP, SP, #64                 @ 0x40 
    /*00021874*/ POP         {R4, R5, R6, R7, R8, PC} 
    Vi_InitLocalDisAlgorithm_x21878:
    /*00021878*/ BL          0x0000000000020D58 
    /*0002187c*/ MOV         R4, R0 
    /*00021880*/ B           Vi_InitLocalDisAlgorithm_x2186c
    /*00021884*/ ANDEQ       R1, R0, R0, ROR #8 
FUNC_END Vi_InitLocalDisAlgorithm


FUNC_BEGIN Vi_DeInitLocalDisAlgorithm
    /*00021888*/ PUSH        {R4, R5, LR} 
    /*0002188c*/ MOV         R5, R0 
    /*00021890*/ SUB         SP, SP, #12 
    /*00021894*/ MOV         R0, #37                     @ 0x25 
    /*00021898*/ MOV         R4, R1 
    /*0002189c*/ BL          0x000000000002189C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000218a0*/ SUBS        R2, R0, #0 
    /*000218a4*/ BEQ         Vi_DeInitLocalDisAlgorithm_x21960
    /*000218a8*/ LDR         R3, [R2, #116]              @ 0x74 
    /*000218ac*/ CMP         R3, #0 
    /*000218b0*/ BEQ         Vi_DeInitLocalDisAlgorithm_x21960
    /*000218b4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000218b8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000218bc*/ ADD         R4, R4, #34                 @ 0x22 
    /*000218c0*/ MOVW        R0, #38348                  @ 0x95cc 
    /*000218c4*/ LDR         R1, [R3, R5, LSL #2] 
    /*000218c8*/ MOVW        R3, #38344                  @ 0x95c8 
    /*000218cc*/ ADD         R1, R1, R4, LSL #4 
    /*000218d0*/ LDR         IP, [R1, R0] 
    /*000218d4*/ LDR         R0, [R1, R3] 
    /*000218d8*/ CMP         IP, #0 
    /*000218dc*/ BEQ         Vi_DeInitLocalDisAlgorithm_x2192c
    /*000218e0*/ LDR         R3, [R2, #120]              @ 0x78 
    /*000218e4*/ BLX         R3 
    /*000218e8*/ SUBS        R4, R0, #0 
    /*000218ec*/ BNE         Vi_DeInitLocalDisAlgorithm_x218fc
    Vi_DeInitLocalDisAlgorithm_x218f0:
    /*000218f0*/ MOV         R0, R4 
    /*000218f4*/ ADD         SP, SP, #12 
    /*000218f8*/ POP         {R4, R5, PC} 
    Vi_DeInitLocalDisAlgorithm_x218fc:
    /*000218fc*/ STR         R4, [SP, #4] 
    /*00021900*/ MOVW        R3, #423                    @ 0x1a7 
    /*00021904*/ MOV         R1, #16 
    /*00021908*/ STR         R3, [SP] 
    /*0002190c*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9994] 
    /*00021910*/ LDR         R3, [PC, #116]              @ 0x000000000002198c 
    /*00021914*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9994] 
    /*00021918*/ MOV         R0, #3 
    /*0002191c*/ BL          0x000000000002191C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021920*/ MOV         R0, R4 
    /*00021924*/ ADD         SP, SP, #12 
    /*00021928*/ POP         {R4, R5, PC} 
    Vi_DeInitLocalDisAlgorithm_x2192c:
    /*0002192c*/ STR         R0, [SP, #4] 
    /*00021930*/ MOV         R3, #416                    @ 0x1a0 
    /*00021934*/ MOV         R1, #16 
    /*00021938*/ STR         R3, [SP] 
    /*0002193c*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x995c] 
    /*00021940*/ LDR         R3, [PC, #68]               @ 0x000000000002198c 
    /*00021944*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x995c] 
    /*00021948*/ MOV         R0, #7 
    /*0002194c*/ MOV         R4, IP 
    /*00021950*/ BL          0x0000000000021950          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021954*/ MOV         R0, R4 
    /*00021958*/ ADD         SP, SP, #12 
    /*0002195c*/ POP         {R4, R5, PC} 
    Vi_DeInitLocalDisAlgorithm_x21960:
    /*00021960*/ MOVW        R3, #406                    @ 0x196 
    /*00021964*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x94b4] 
    /*00021968*/ STR         R3, [SP] 
    /*0002196c*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x94b4] 
    /*00021970*/ LDR         R3, [PC, #20]               @ 0x000000000002198c 
    /*00021974*/ MOV         R1, #16 
    /*00021978*/ MOV         R0, #3 
    /*0002197c*/ MOVW        R4, #32776                  @ 0x8008 
    /*00021980*/ BL          0x0000000000021980          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021984*/ MOVT        R4, #40976                  @ 0xa010 
    /*00021988*/ B           Vi_DeInitLocalDisAlgorithm_x218f0
    /*0002198c*/ ANDEQ       R1, R0, IP, LSL #10 
FUNC_END Vi_DeInitLocalDisAlgorithm


FUNC_BEGIN Vi_EnableLocalDIS
    /*00021990*/ PUSH        {R4, R5, R6, LR} 
    /*00021994*/ SUB         SP, SP, #16 
    /*00021998*/ MOV         R5, R0 
    /*0002199c*/ MOV         R6, R1 
    /*000219a0*/ BL          0x00000000000219A0          @ Vi_InitLocalDisAlgorithm [R_ARM_CALL: .text+0x217c0] 
    /*000219a4*/ SUBS        R4, R0, #0 
    /*000219a8*/ BEQ         Vi_EnableLocalDIS_x219d8
    /*000219ac*/ MOVW        R3, #449                    @ 0x1c1 
    /*000219b0*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x99d4] 
    /*000219b4*/ STR         R3, [SP] 
    /*000219b8*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x99d4] 
    /*000219bc*/ STR         R4, [SP, #12] 
    /*000219c0*/ MOV         R1, #16 
    /*000219c4*/ STR         R6, [SP, #8] 
    /*000219c8*/ MOV         R0, #3 
    /*000219cc*/ STR         R5, [SP, #4] 
    /*000219d0*/ LDR         R3, [PC, #12]               @ 0x00000000000219e4 
    /*000219d4*/ BL          0x00000000000219D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    Vi_EnableLocalDIS_x219d8:
    /*000219d8*/ MOV         R0, R4 
    /*000219dc*/ ADD         SP, SP, #16 
    /*000219e0*/ POP         {R4, R5, R6, PC} 
    /*000219e4*/ ANDEQ       R1, R0, R8, LSR #10 
FUNC_END Vi_EnableLocalDIS


FUNC_BEGIN Vi_DestroyGdcChn
    /*000219e8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000219ec*/ MOV         R6, R0 
    /*000219f0*/ SUB         SP, SP, #24 
    /*000219f4*/ MOV         R0, #37                     @ 0x25 
    /*000219f8*/ MOV         R4, R1 
    /*000219fc*/ BL          0x00000000000219FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00021a00*/ SUBS        R7, R0, #0 
    /*00021a04*/ BEQ         Vi_DestroyGdcChn_x21b18
    /*00021a08*/ LDR         R3, [R7, #104]              @ 0x68 
    /*00021a0c*/ CMP         R3, #0 
    /*00021a10*/ BEQ         Vi_DestroyGdcChn_x21b18
    /*00021a14*/ LDR         R3, [R7, #108]              @ 0x6c 
    /*00021a18*/ CMP         R3, #0 
    /*00021a1c*/ BEQ         Vi_DestroyGdcChn_x21b18
    /*00021a20*/ LDR         R3, [PC, #280]              @ 0x0000000000021b40 
    /*00021a24*/ MOV         R5, #176                    @ 0xb0 
    /*00021a28*/ ADD         R1, SP, #20 
    /*00021a2c*/ MLA         R5, R5, R6, R3 
    /*00021a30*/ MOV         R0, R5 
    /*00021a34*/ BL          0x0000000000021A34          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00021a38*/ MOVW        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00021a3c*/ MOVT        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00021a40*/ ADD         R3, R4, #34                 @ 0x22 
    /*00021a44*/ MOVW        IP, #38348                  @ 0x95cc 
    /*00021a48*/ MOVW        R1, #38344                  @ 0x95c8 
    /*00021a4c*/ LDR         R2, [R2, R6, LSL #2] 
    /*00021a50*/ ADD         R3, R2, R3, LSL #4 
    /*00021a54*/ LDR         R6, [R3, IP] 
    /*00021a58*/ LDR         R8, [R3, R1] 
    /*00021a5c*/ CMP         R6, #0 
    /*00021a60*/ BEQ         Vi_DestroyGdcChn_x21adc
    /*00021a64*/ ADD         R4, R4, #2416               @ 0x970 
    /*00021a68*/ MOV         LR, #0 
    /*00021a6c*/ ADD         R4, R4, #15 
    /*00021a70*/ STR         LR, [R3, IP] 
    /*00021a74*/ ADD         R1, SP, #20 
    /*00021a78*/ MOV         R3, #1 
    /*00021a7c*/ MOV         R0, R5 
    /*00021a80*/ STR         R3, [R2, R4, LSL #4] 
    /*00021a84*/ BL          0x0000000000021A84          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00021a88*/ LDR         R3, [R7, #108]              @ 0x6c 
    /*00021a8c*/ MOV         R0, R8 
    /*00021a90*/ BLX         R3 
    /*00021a94*/ SUBS        R6, R0, #0 
    /*00021a98*/ BNE         Vi_DestroyGdcChn_x21aa8
    Vi_DestroyGdcChn_x21a9c:
    /*00021a9c*/ MOV         R0, R6 
    /*00021aa0*/ ADD         SP, SP, #24 
    /*00021aa4*/ POP         {R4, R5, R6, R7, R8, PC} 
    Vi_DestroyGdcChn_x21aa8:
    /*00021aa8*/ STR         R6, [SP, #8] 
    /*00021aac*/ MOVW        R3, #494                    @ 0x1ee 
    /*00021ab0*/ STR         R8, [SP, #4] 
    /*00021ab4*/ MOV         R1, #16 
    /*00021ab8*/ STR         R3, [SP] 
    /*00021abc*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9acc] 
    /*00021ac0*/ LDR         R3, [PC, #124]              @ 0x0000000000021b44 
    /*00021ac4*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9acc] 
    /*00021ac8*/ MOV         R0, #3 
    /*00021acc*/ BL          0x0000000000021ACC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021ad0*/ MOV         R0, R6 
    /*00021ad4*/ ADD         SP, SP, #24 
    /*00021ad8*/ POP         {R4, R5, R6, R7, R8, PC} 
    Vi_DestroyGdcChn_x21adc:
    /*00021adc*/ STR         R8, [SP, #4] 
    /*00021ae0*/ MOV         R3, #480                    @ 0x1e0 
    /*00021ae4*/ MOV         R1, #16 
    /*00021ae8*/ STR         R3, [SP] 
    /*00021aec*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9a90] 
    /*00021af0*/ LDR         R3, [PC, #76]               @ 0x0000000000021b44 
    /*00021af4*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9a90] 
    /*00021af8*/ MOV         R0, #7 
    /*00021afc*/ BL          0x0000000000021AFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021b00*/ MOV         R0, R5 
    /*00021b04*/ ADD         R1, SP, #20 
    /*00021b08*/ BL          0x0000000000021B08          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00021b0c*/ MOV         R0, R6 
    /*00021b10*/ ADD         SP, SP, #24 
    /*00021b14*/ POP         {R4, R5, R6, R7, R8, PC} 
    Vi_DestroyGdcChn_x21b18:
    /*00021b18*/ MOV         R3, #468                    @ 0x1d4 
    /*00021b1c*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9a28] 
    /*00021b20*/ STR         R3, [SP] 
    /*00021b24*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9a28] 
    /*00021b28*/ LDR         R3, [PC, #20]               @ 0x0000000000021b44 
    /*00021b2c*/ MOV         R1, #16 
    /*00021b30*/ MOV         R0, #3 
    /*00021b34*/ MVN         R6, #0 
    /*00021b38*/ BL          0x0000000000021B38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021b3c*/ B           Vi_DestroyGdcChn_x21a9c
    /*00021b40*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00021b44*/ ANDEQ       R1, R0, IP, LSR R5 
FUNC_END Vi_DestroyGdcChn


FUNC_BEGIN VI_DestoryAllGdcChn
    /*00021b48*/ MOV         R1, #0 
    VI_DestoryAllGdcChn_x21b4c:
    /*00021b4c*/ B           VI_DestoryAllGdcChn_x21b4c  @ Vi_DestroyGdcChn [R_ARM_JUMP24: .text+0x219e8] 
FUNC_END VI_DestoryAllGdcChn


FUNC_BEGIN Vi_CreateGdcChn
    /*00021b50*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00021b54*/ MOV         R5, R0 
    /*00021b58*/ SUB         SP, SP, #16 
    /*00021b5c*/ MOV         R0, #37                     @ 0x25 
    /*00021b60*/ MOV         R6, R1 
    /*00021b64*/ BL          0x0000000000021B64          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00021b68*/ CMP         R0, #0 
    /*00021b6c*/ BEQ         Vi_CreateGdcChn_x21c30
    /*00021b70*/ LDR         R2, [R0, #104]              @ 0x68 
    /*00021b74*/ CMP         R2, #0 
    /*00021b78*/ BEQ         Vi_CreateGdcChn_x21c30
    /*00021b7c*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00021b80*/ CMP         R3, #0 
    /*00021b84*/ BEQ         Vi_CreateGdcChn_x21c30
    /*00021b88*/ ADD         R4, R6, #34                 @ 0x22 
    /*00021b8c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00021b90*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00021b94*/ LSL         R4, R4, #4 
    /*00021b98*/ LDR         R7, [R3, R5, LSL #2] 
    /*00021b9c*/ ADD         R0, R4, #38144              @ 0x9500 
    /*00021ba0*/ ADD         R0, R0, #200                @ 0xc8 
    /*00021ba4*/ ADD         R0, R7, R0 
    /*00021ba8*/ BLX         R2 
    /*00021bac*/ SUBS        R8, R0, #0 
    /*00021bb0*/ BNE         Vi_CreateGdcChn_x21c00
    /*00021bb4*/ LDR         R3, [PC, #156]              @ 0x0000000000021c58 
    /*00021bb8*/ MOV         R2, #176                    @ 0xb0 
    /*00021bbc*/ ADD         R1, SP, #12 
    /*00021bc0*/ ADD         R4, R7, R4 
    /*00021bc4*/ MLA         R5, R2, R5, R3 
    /*00021bc8*/ MOV         R0, R5 
    /*00021bcc*/ BL          0x0000000000021BCC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00021bd0*/ ADD         R3, R6, #2416               @ 0x970 
    /*00021bd4*/ ADD         R3, R3, #15 
    /*00021bd8*/ MOVW        IP, #38348                  @ 0x95cc 
    /*00021bdc*/ MOV         R2, #1 
    /*00021be0*/ MOV         R0, R5 
    /*00021be4*/ STR         R2, [R4, IP] 
    /*00021be8*/ ADD         R1, SP, #12 
    /*00021bec*/ STR         R2, [R7, R3, LSL #4] 
    /*00021bf0*/ BL          0x0000000000021BF0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    Vi_CreateGdcChn_x21bf4:
    /*00021bf4*/ MOV         R0, R8 
    /*00021bf8*/ ADD         SP, SP, #16 
    /*00021bfc*/ POP         {R4, R5, R6, R7, R8, PC} 
    Vi_CreateGdcChn_x21c00:
    /*00021c00*/ STR         R8, [SP, #4] 
    /*00021c04*/ MOVW        R3, #523                    @ 0x20b 
    /*00021c08*/ MOV         R1, #16 
    /*00021c0c*/ STR         R3, [SP] 
    /*00021c10*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b08] 
    /*00021c14*/ LDR         R3, [PC, #64]               @ 0x0000000000021c5c 
    /*00021c18*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b08] 
    /*00021c1c*/ MOV         R0, #3 
    /*00021c20*/ BL          0x0000000000021C20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021c24*/ MOV         R0, R8 
    /*00021c28*/ ADD         SP, SP, #16 
    /*00021c2c*/ POP         {R4, R5, R6, R7, R8, PC} 
    Vi_CreateGdcChn_x21c30:
    /*00021c30*/ MOV         R3, #512                    @ 0x200 
    /*00021c34*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9a28] 
    /*00021c38*/ STR         R3, [SP] 
    /*00021c3c*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9a28] 
    /*00021c40*/ LDR         R3, [PC, #20]               @ 0x0000000000021c5c 
    /*00021c44*/ MOV         R1, #16 
    /*00021c48*/ MOV         R0, #3 
    /*00021c4c*/ MVN         R8, #0 
    /*00021c50*/ BL          0x0000000000021C50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021c54*/ B           Vi_CreateGdcChn_x21bf4
    /*00021c58*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00021c5c*/ ANDEQ       R1, R0, R0, ASR R5 
FUNC_END Vi_CreateGdcChn


FUNC_BEGIN VI_GetUseVbForGdcOutput
    /*00021c60*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00021c64*/ MOVW        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00021c68*/ SUB         SP, SP, #68                 @ 0x44 
    /*00021c6c*/ MOVT        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00021c70*/ MOV         R4, R2 
    /*00021c74*/ ADD         R2, SP, #44                 @ 0x2c 
    /*00021c78*/ MOV         R5, R3 
    /*00021c7c*/ LDR         R9, [IP, R0, LSL #2] 
    /*00021c80*/ MOV         R7, R1 
    /*00021c84*/ MOV         R3, #0 
    /*00021c88*/ STR         R1, [SP, #28] 
    /*00021c8c*/ MOV         R6, R0 
    /*00021c90*/ STR         R3, [SP, #56]               @ 0x38 
    /*00021c94*/ STR         R0, [SP, #24] 
    /*00021c98*/ BL          0x0000000000021C98          @ VI_DRV_GetWorkingChnCompressMode [R_ARM_CALL: .text+0x29958] 
    /*00021c9c*/ ADD         R2, R7, #9728               @ 0x2600 
    /*00021ca0*/ LDR         R8, [R5] 
    /*00021ca4*/ ADD         R2, R2, #54                 @ 0x36 
    /*00021ca8*/ LDR         LR, [R5, #4] 
    /*00021cac*/ LDR         IP, [R4, #12] 
    /*00021cb0*/ MOV         R1, R5 
    /*00021cb4*/ LDR         R3, [R4, #24] 
    /*00021cb8*/ ADD         R0, SP, #24 
    /*00021cbc*/ LDR         R5, [R9, R2, LSL #2] 
    /*00021cc0*/ LDR         R2, [R4, #16] 
    /*00021cc4*/ STR         R8, [SP, #32] 
    /*00021cc8*/ STR         R5, [SP, #60]               @ 0x3c 
    /*00021ccc*/ STR         LR, [SP, #36]               @ 0x24 
    /*00021cd0*/ STR         IP, [SP, #40]               @ 0x28 
    /*00021cd4*/ STR         R2, [SP, #48]               @ 0x30 
    /*00021cd8*/ STR         R3, [SP, #52]               @ 0x34 
    /*00021cdc*/ BL          0x0000000000021CDC          @ VI_DRV_GetFrmVbBlk [R_ARM_CALL: .text+0x2c8f4] 
    /*00021ce0*/ SUBS        R4, R0, #0 
    /*00021ce4*/ BEQ         VI_GetUseVbForGdcOutput_x21d20
    /*00021ce8*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00021cec*/ MOVW        R3, #563                    @ 0x233 
    /*00021cf0*/ LDR         IP, [SP, #32] 
    /*00021cf4*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b40] 
    /*00021cf8*/ STR         R3, [SP] 
    /*00021cfc*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b40] 
    /*00021d00*/ STR         R0, [SP, #16] 
    /*00021d04*/ MOV         R1, #16 
    /*00021d08*/ STR         R7, [SP, #8] 
    /*00021d0c*/ MOV         R0, #3 
    /*00021d10*/ STR         R6, [SP, #4] 
    /*00021d14*/ STR         IP, [SP, #12] 
    /*00021d18*/ LDR         R3, [PC, #12]               @ 0x0000000000021d2c 
    /*00021d1c*/ BL          0x0000000000021D1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_GetUseVbForGdcOutput_x21d20:
    /*00021d20*/ MOV         R0, R4 
    /*00021d24*/ ADD         SP, SP, #68                 @ 0x44 
    /*00021d28*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    /*00021d2c*/ ANDEQ       R1, R0, R0, ROR #10 
FUNC_END VI_GetUseVbForGdcOutput


FUNC_BEGIN VI_GetISPTimesForLocalDIS
    /*00021d30*/ PUSH        {R4, R5, R6, LR} 
    /*00021d34*/ SUB         SP, SP, #64                 @ 0x40 
    /*00021d38*/ MOV         R6, R0 
    /*00021d3c*/ MOV         R5, R1 
    /*00021d40*/ MOV         R4, R2 
    /*00021d44*/ MOV         R1, #0 
    /*00021d48*/ MOV         R2, #56                     @ 0x38 
    /*00021d4c*/ ADD         R0, SP, #8 
    /*00021d50*/ BL          0x0000000000021D50          @ memset [R_ARM_CALL: +0x0] 
    /*00021d54*/ ADD         R1, SP, #8 
    /*00021d58*/ MOV         R0, R6 
    /*00021d5c*/ BL          0x0000000000021D5C          @ VI_DRV_GetFrameInfoFromIsp [R_ARM_CALL: .text+0x388d8] 
    /*00021d60*/ CMP         R0, #0 
    /*00021d64*/ BEQ         VI_GetISPTimesForLocalDIS_x21d8c
    /*00021d68*/ MOV         R3, #580                    @ 0x244 
    /*00021d6c*/ STR         R0, [SP, #4] 
    /*00021d70*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b9c] 
    /*00021d74*/ STR         R3, [SP] 
    /*00021d78*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b9c] 
    /*00021d7c*/ LDR         R3, [PC, #32]               @ 0x0000000000021da4 
    /*00021d80*/ MOV         R1, #16 
    /*00021d84*/ MOV         R0, #7 
    /*00021d88*/ BL          0x0000000000021D88          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_GetISPTimesForLocalDIS_x21d8c:
    /*00021d8c*/ LDR         R2, [SP, #56]               @ 0x38 
    /*00021d90*/ LDR         R3, [SP, #12] 
    /*00021d94*/ STR         R2, [R5] 
    /*00021d98*/ STR         R3, [R4] 
    /*00021d9c*/ ADD         SP, SP, #64                 @ 0x40 
    /*00021da0*/ POP         {R4, R5, R6, PC} 
    /*00021da4*/ ANDEQ       R1, R0, R8, ROR R5 
FUNC_END VI_GetISPTimesForLocalDIS


FUNC_BEGIN VI_GetRotationExInfo
    /*00021da8*/ PUSH        {R4, R5, LR} 
    /*00021dac*/ SUB         SP, SP, #36                 @ 0x24 
    /*00021db0*/ MOV         R4, R2 
    /*00021db4*/ ADD         R2, SP, #4 
    /*00021db8*/ MOV         R5, R3 
    /*00021dbc*/ BL          0x0000000000021DBC          @ VI_DRV_GetChnRotationExAttrUse [R_ARM_CALL: .text+0x2a390] 
    /*00021dc0*/ LDR         IP, [SP, #4] 
    /*00021dc4*/ MOV         R0, R5 
    /*00021dc8*/ MOV         R2, #8 
    /*00021dcc*/ ADD         R1, SP, #24 
    /*00021dd0*/ STR         IP, [R4] 
    /*00021dd4*/ BL          0x0000000000021DD4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00021dd8*/ ADD         SP, SP, #36                 @ 0x24 
    /*00021ddc*/ POP         {R4, R5, PC} 
FUNC_END VI_GetRotationExInfo


FUNC_BEGIN VI_IsByPassGdc
    /*00021de0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00021de4*/ MOVW        IP, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*00021de8*/ MOVW        LR, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00021dec*/ MOVT        IP, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*00021df0*/ MOVT        LR, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00021df4*/ SUB         SP, SP, #264                @ 0x108 
    /*00021df8*/ LDR         SL, [IP, R0, LSL #2] 
    /*00021dfc*/ MOV         R9, R2 
    /*00021e00*/ LDR         R7, [LR, R0, LSL #2] 
    /*00021e04*/ ADD         R2, SP, #48                 @ 0x30 
    /*00021e08*/ MOV         R4, R1 
    /*00021e0c*/ MOV         R6, R0 
    /*00021e10*/ MOV         R8, R3 
    /*00021e14*/ MOV         R5, #36                     @ 0x24 
    /*00021e18*/ BL          0x0000000000021E18          @ VI_DRV_GetChnLDCAttrUse [R_ARM_CALL: .text+0x2a1e0] 
    /*00021e1c*/ MOV         R3, #116                    @ 0x74 
    /*00021e20*/ MLA         R5, R5, R4, R7 
    /*00021e24*/ LDR         LR, [SP, #48]               @ 0x30 
    /*00021e28*/ MLA         R3, R3, R4, SL 
    /*00021e2c*/ MOVW        R0, #36108                  @ 0x8d0c 
    /*00021e30*/ MOVW        R2, #35336                  @ 0x8a08 
    /*00021e34*/ MOVW        IP, #36112                  @ 0x8d10 
    /*00021e38*/ MOV         R1, R4 
    /*00021e3c*/ STR         LR, [R5, R0] 
    /*00021e40*/ MOV         R0, R6 
    /*00021e44*/ LDR         R3, [R3, R2] 
    /*00021e48*/ MOV         R2, SP 
    /*00021e4c*/ STR         R3, [R5, IP] 
    /*00021e50*/ BL          0x0000000000021E50          @ VI_DRV_GetChnRotationAttrUse [R_ARM_CALL: .text+0x2a5e4] 
    /*00021e54*/ MOV         R1, R4 
    /*00021e58*/ MOV         R0, R6 
    /*00021e5c*/ ADD         R2, SP, #4 
    /*00021e60*/ BL          0x0000000000021E60          @ VI_DRV_GetChnSpreadAttrUse [R_ARM_CALL: .text+0x2a714] 
    /*00021e64*/ MOV         R1, R4 
    /*00021e68*/ MOV         R0, R6 
    /*00021e6c*/ ADD         R2, SP, #80                 @ 0x50 
    /*00021e70*/ BL          0x0000000000021E70          @ VI_DRV_GetChnDISAttr [R_ARM_CALL: .text+0x2a3bc] 
    /*00021e74*/ MOV         R0, R6 
    /*00021e78*/ MOV         R1, R4 
    /*00021e7c*/ ADD         R2, SP, #20 
    /*00021e80*/ BL          0x0000000000021E80          @ VI_DRV_GetChnRotationExAttrUse [R_ARM_CALL: .text+0x2a390] 
    /*00021e84*/ LDR         R2, [SP, #20] 
    /*00021e88*/ LDR         R3, [SP] 
    /*00021e8c*/ MOVW        R0, #36116                  @ 0x8d14 
    /*00021e90*/ SUB         R2, R2, #1 
    /*00021e94*/ MOVW        R1, #36120                  @ 0x8d18 
    /*00021e98*/ ADDS        R3, R3, #0 
    /*00021e9c*/ CLZ         R2, R2 
    /*00021ea0*/ MOVNE       R3, #1 
    /*00021ea4*/ LSR         R2, R2, #5 
    /*00021ea8*/ STR         R3, [R5, R0] 
    /*00021eac*/ STR         R2, [R5, R1] 
    /*00021eb0*/ LDR         R3, [R9, #672]              @ 0x2a0 
    /*00021eb4*/ CMP         R3, #1 
    /*00021eb8*/ BEQ         VI_IsByPassGdc_x21f90
    /*00021ebc*/ CMP         R3, #0 
    /*00021ec0*/ BEQ         VI_IsByPassGdc_x21f64
    VI_IsByPassGdc_x21ec4:
    /*00021ec4*/ MOV         R3, #36                     @ 0x24 
    /*00021ec8*/ MOVW        R2, #36124                  @ 0x8d1c 
    /*00021ecc*/ MLA         R3, R3, R4, R7 
    /*00021ed0*/ MOV         R1, #0 
    /*00021ed4*/ STR         R1, [R3, R2] 
    /*00021ed8*/ LDR         R3, [R8, #692]              @ 0x2b4 
    /*00021edc*/ CMP         R3, #1 
    /*00021ee0*/ BEQ         VI_IsByPassGdc_x21fb0
    VI_IsByPassGdc_x21ee4:
    /*00021ee4*/ MOV         R2, #36                     @ 0x24 
    /*00021ee8*/ MOVW        R3, #36108                  @ 0x8d0c 
    /*00021eec*/ MLA         R4, R2, R4, R7 
    /*00021ef0*/ LDR         R3, [R4, R3] 
    /*00021ef4*/ CMP         R3, #0 
    /*00021ef8*/ BEQ         VI_IsByPassGdc_x21f10
    VI_IsByPassGdc_x21efc:
    /*00021efc*/ LDR         R0, [R8, #20] 
    /*00021f00*/ ADDS        R0, R0, #0 
    /*00021f04*/ MOVNE       R0, #1 
    VI_IsByPassGdc_x21f08:
    /*00021f08*/ ADD         SP, SP, #264                @ 0x108 
    /*00021f0c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_IsByPassGdc_x21f10:
    /*00021f10*/ MOVW        R3, #36112                  @ 0x8d10 
    /*00021f14*/ LDR         R3, [R4, R3] 
    /*00021f18*/ CMP         R3, #0 
    /*00021f1c*/ BNE         VI_IsByPassGdc_x21efc
    /*00021f20*/ MOVW        R3, #36116                  @ 0x8d14 
    /*00021f24*/ LDR         R3, [R4, R3] 
    /*00021f28*/ CMP         R3, #0 
    /*00021f2c*/ BNE         VI_IsByPassGdc_x21efc
    /*00021f30*/ MOVW        R3, #36120                  @ 0x8d18 
    /*00021f34*/ LDR         R3, [R4, R3] 
    /*00021f38*/ CMP         R3, #0 
    /*00021f3c*/ BNE         VI_IsByPassGdc_x21efc
    /*00021f40*/ LDR         R3, [SP, #4] 
    /*00021f44*/ CMP         R3, #0 
    /*00021f48*/ BNE         VI_IsByPassGdc_x21efc
    /*00021f4c*/ MOVW        R3, #36124                  @ 0x8d1c 
    /*00021f50*/ LDR         R3, [R4, R3] 
    /*00021f54*/ CMP         R3, #0 
    /*00021f58*/ MOVEQ       R0, #1 
    /*00021f5c*/ BNE         VI_IsByPassGdc_x21efc
    /*00021f60*/ B           VI_IsByPassGdc_x21f08
    VI_IsByPassGdc_x21f64:
    /*00021f64*/ MOV         R3, #468                    @ 0x1d4 
    /*00021f68*/ MOVW        R2, #38828                  @ 0x97ac 
    /*00021f6c*/ MLA         R3, R3, R4, R7 
    /*00021f70*/ LDR         R2, [R3, R2] 
    /*00021f74*/ CMP         R2, #1 
    /*00021f78*/ BNE         VI_IsByPassGdc_x21ec4
    /*00021f7c*/ MOVW        R2, #38548                  @ 0x9694 
    /*00021f80*/ LDR         R3, [R3, R2] 
    /*00021f84*/ SUB         R3, R3, #2 
    /*00021f88*/ CMP         R3, #1 
    /*00021f8c*/ BHI         VI_IsByPassGdc_x21ec4
    VI_IsByPassGdc_x21f90:
    /*00021f90*/ MOV         R3, #36                     @ 0x24 
    /*00021f94*/ MOVW        R2, #36124                  @ 0x8d1c 
    /*00021f98*/ MLA         R3, R3, R4, R7 
    /*00021f9c*/ MOV         R1, #1 
    /*00021fa0*/ STR         R1, [R3, R2] 
    /*00021fa4*/ LDR         R3, [R8, #692]              @ 0x2b4 
    /*00021fa8*/ CMP         R3, #1 
    /*00021fac*/ BNE         VI_IsByPassGdc_x21ee4
    VI_IsByPassGdc_x21fb0:
    /*00021fb0*/ MOV         R3, #36                     @ 0x24 
    /*00021fb4*/ MOVW        R2, #36116                  @ 0x8d14 
    /*00021fb8*/ MLA         R4, R3, R4, R7 
    /*00021fbc*/ LDR         R0, [R4, R2] 
    /*00021fc0*/ CLZ         R0, R0 
    /*00021fc4*/ LSR         R0, R0, #5 
    /*00021fc8*/ ADD         SP, SP, #264                @ 0x108 
    /*00021fcc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VI_IsByPassGdc


FUNC_BEGIN VI_SubmitByPassJob2Gdc
    /*00021fd0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00021fd4*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00021fd8*/ SUB         SP, SP, #68                 @ 0x44 
    /*00021fdc*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00021fe0*/ MOV         R8, R0 
    /*00021fe4*/ MOV         R0, #37                     @ 0x25 
    /*00021fe8*/ MOV         R4, #0 
    /*00021fec*/ MOV         R6, R1 
    /*00021ff0*/ MOV         R7, R2 
    /*00021ff4*/ LDR         FP, [R3, R8, LSL #2] 
    /*00021ff8*/ STR         R4, [SP, #12] 
    /*00021ffc*/ STR         R4, [SP, #8] 
    /*00022000*/ STR         R4, [SP, #16] 
    /*00022004*/ STR         R4, [SP, #20] 
    /*00022008*/ STR         R4, [SP, #24] 
    /*0002200c*/ BL          0x000000000002200C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00022010*/ MOV         SL, R0 
    /*00022014*/ MOV         R0, R4 
    /*00022018*/ LDR         R3, [SL, #92]               @ 0x5c 
    /*0002201c*/ BLX         R3 
    /*00022020*/ SUBS        R5, R0, #0 
    /*00022024*/ BEQ         VI_SubmitByPassJob2Gdc_x2212c
    /*00022028*/ STR         R8, [R5, #756]              @ 0x2f4 
    /*0002202c*/ MOV         R9, #16 
    /*00022030*/ STR         R6, [R5, #760]              @ 0x2f8 
    /*00022034*/ MOV         R2, #336                    @ 0x150 
    /*00022038*/ STR         R9, [R5, #752]              @ 0x2f0 
    /*0002203c*/ MOV         R1, R7 
    /*00022040*/ LDR         LR, [R7, #692]              @ 0x2b4 
    /*00022044*/ MOVW        R3, #0                      @ VI_GdcByPassTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x20a24] 
    /*00022048*/ STR         R4, [R5, #676]              @ 0x2a4 
    /*0002204c*/ MOVT        R3, #0                      @ VI_GdcByPassTaskCallBack [R_ARM_MOVT_ABS: .text+0x20a24] 
    /*00022050*/ STR         R3, [R5, #748]              @ 0x2ec 
    /*00022054*/ STR         LR, [R5, #672]              @ 0x2a0 
    /*00022058*/ BL          0x0000000000022058          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002205c*/ MOV         R1, R4 
    /*00022060*/ MOV         R0, R5 
    /*00022064*/ BL          0x0000000000022064          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00022068*/ MOV         R2, #336                    @ 0x150 
    /*0002206c*/ MOV         R1, R7 
    /*00022070*/ ADD         R0, R5, R2 
    /*00022074*/ BL          0x0000000000022074          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00022078*/ ADD         IP, FP, R6, LSL #4 
    /*0002207c*/ ADD         R3, IP, #36864              @ 0x9000 
    /*00022080*/ MOVW        LR, #39644                  @ 0x9adc 
    /*00022084*/ MOV         R0, R5 
    /*00022088*/ STR         R9, [SP, #8] 
    /*0002208c*/ LDR         R2, [R3, #2768]             @ 0xad0 
    /*00022090*/ MOV         R5, #1 
    /*00022094*/ STR         R4, [R3, #2036]             @ 0x7f4 
    /*00022098*/ ADD         R1, SP, #8 
    /*0002209c*/ STR         R4, [IP, LR] 
    /*000220a0*/ MOV         R3, R4 
    /*000220a4*/ STR         R2, [SP, #20] 
    /*000220a8*/ ADD         R2, SP, #28 
    /*000220ac*/ STR         R5, [SP, #60]               @ 0x3c 
    /*000220b0*/ STR         R4, [SP] 
    /*000220b4*/ STR         R8, [SP, #12] 
    /*000220b8*/ LDR         R5, [SL, #100]              @ 0x64 
    /*000220bc*/ STR         R6, [SP, #16] 
    /*000220c0*/ STR         R4, [SP, #32] 
    /*000220c4*/ BLX         R5 
    /*000220c8*/ SUBS        R5, R0, #0 
    /*000220cc*/ BNE         VI_SubmitByPassJob2Gdc_x220dc
    /*000220d0*/ MOV         R0, R5 
    /*000220d4*/ ADD         SP, SP, #68                 @ 0x44 
    /*000220d8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SubmitByPassJob2Gdc_x220dc:
    /*000220dc*/ MOV         R1, R4 
    /*000220e0*/ MOV         R0, R7 
    /*000220e4*/ BL          0x00000000000220E4          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*000220e8*/ MOVW        R3, #762                    @ 0x2fa 
    /*000220ec*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c20] 
    /*000220f0*/ STR         R3, [SP] 
    /*000220f4*/ MOV         R1, R9 
    /*000220f8*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c20] 
    /*000220fc*/ LDR         R3, [PC, #84]               @ 0x0000000000022158 
    /*00022100*/ MOV         R0, #3 
    /*00022104*/ BL          0x0000000000022104          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_SubmitByPassJob2Gdc_x22108:
    /*00022108*/ MOV         R3, #56                     @ 0x38 
    /*0002210c*/ MOVW        R2, #36660                  @ 0x8f34 
    /*00022110*/ MLA         R6, R3, R6, FP 
    /*00022114*/ MOV         R0, R5 
    /*00022118*/ LDR         R3, [R6, R2] 
    /*0002211c*/ ADD         R3, R3, #1 
    /*00022120*/ STR         R3, [R6, R2] 
    /*00022124*/ ADD         SP, SP, #68                 @ 0x44 
    /*00022128*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SubmitByPassJob2Gdc_x2212c:
    /*0002212c*/ MOVW        R3, #733                    @ 0x2dd 
    /*00022130*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9bf0] 
    /*00022134*/ STR         R3, [SP] 
    /*00022138*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9bf0] 
    /*0002213c*/ LDR         R3, [PC, #20]               @ 0x0000000000022158 
    /*00022140*/ MOV         R1, #16 
    /*00022144*/ MOV         R0, #3 
    /*00022148*/ MOVW        R5, #32782                  @ 0x800e 
    /*0002214c*/ BL          0x000000000002214C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00022150*/ MOVT        R5, #40976                  @ 0xa010 
    /*00022154*/ B           VI_SubmitByPassJob2Gdc_x22108
    /*00022158*/ MULEQ       R0, R4, R5 
FUNC_END VI_SubmitByPassJob2Gdc


FUNC_BEGIN VI_SetDisWH
    /*0002215c*/ PUSH        {R4, R5} 
    /*00022160*/ MOV         R3, #10 
    /*00022164*/ LDR         R4, [R1, #144]              @ 0x90 
    /*00022168*/ MOVW        IP, #19923                  @ 0x4dd3 
    /*0002216c*/ MOVT        IP, #4194                   @ 0x1062 
    /*00022170*/ LDR         R1, [R2] 
    /*00022174*/ MUL         R4, R3, R4 
    /*00022178*/ RSB         R4, R4, #1000               @ 0x3e8 
    /*0002217c*/ LSL         R4, R4, #12 
    /*00022180*/ UMULL       R4, R5, R4, IP 
    /*00022184*/ LSR         R3, R5, #6 
    /*00022188*/ RSB         IP, R3, #4096               @ 0x1000 
    /*0002218c*/ POP         {R4, R5} 
    /*00022190*/ MUL         R1, R1, IP 
    /*00022194*/ ADD         R1, R1, #2048               @ 0x800 
    /*00022198*/ UBFX        R1, R1, #12, #19 
    /*0002219c*/ STR         R1, [R0, #752]              @ 0x2f0 
    /*000221a0*/ LDR         R3, [R2, #4] 
    /*000221a4*/ TST         R1, #1 
    /*000221a8*/ SUBNE       R1, R1, #1 
    /*000221ac*/ STRNE       R1, [R0, #752]              @ 0x2f0 
    /*000221b0*/ MUL         R3, R3, IP 
    /*000221b4*/ ADD         R3, R3, #2048               @ 0x800 
    /*000221b8*/ UBFX        R3, R3, #12, #19 
    /*000221bc*/ STR         R3, [R0, #756]              @ 0x2f4 
    /*000221c0*/ TST         R3, #1 
    /*000221c4*/ SUBNE       R3, R3, #1 
    /*000221c8*/ STRNE       R3, [R0, #756]              @ 0x2f4 
    /*000221cc*/ BX          LR 
FUNC_END VI_SetDisWH


FUNC_BEGIN VI_SubmitSomeJob2Gdc
    /*000221d0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000221d4*/ MOV         R4, R1 
    /*000221d8*/ SUB         SP, SP, #396                @ 0x18c 
    /*000221dc*/ MOV         R7, #0 
    /*000221e0*/ LSL         IP, R4, #4 
    /*000221e4*/ MOV         R5, R0 
    /*000221e8*/ MOV         R1, R7 
    /*000221ec*/ MOV         R6, R2 
    /*000221f0*/ ADD         R0, SP, #120                @ 0x78 
    /*000221f4*/ MOV         R2, #44                     @ 0x2c 
    /*000221f8*/ MOV         R8, IP 
    /*000221fc*/ STR         IP, [SP, #36]               @ 0x24 
    /*00022200*/ STR         R3, [SP, #16] 
    /*00022204*/ MOV         R3, #1 
    /*00022208*/ STR         R7, [SP, #44]               @ 0x2c 
    /*0002220c*/ STR         R3, [SP, #40]               @ 0x28 
    /*00022210*/ STR         R7, [SP, #64]               @ 0x40 
    /*00022214*/ STR         R7, [SP, #48]               @ 0x30 
    /*00022218*/ STR         R7, [SP, #68]               @ 0x44 
    /*0002221c*/ STR         R7, [SP, #72]               @ 0x48 
    /*00022220*/ STR         R7, [SP, #76]               @ 0x4c 
    /*00022224*/ STR         R7, [SP, #80]               @ 0x50 
    /*00022228*/ BL          0x0000000000022228          @ memset [R_ARM_CALL: +0x0] 
    /*0002222c*/ MOV         R1, R7 
    /*00022230*/ MOV         R2, #228                    @ 0xe4 
    /*00022234*/ ADD         R0, SP, #164                @ 0xa4 
    /*00022238*/ STR         R7, [SP, #52]               @ 0x34 
    /*0002223c*/ BL          0x000000000002223C          @ memset [R_ARM_CALL: +0x0] 
    /*00022240*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*00022244*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*00022248*/ MOVW        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0002224c*/ MOVT        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00022250*/ MOV         R0, #37                     @ 0x25 
    /*00022254*/ LDR         R3, [R3, R5, LSL #2] 
    /*00022258*/ MOV         R7, #468                    @ 0x1d4 
    /*0002225c*/ LDR         FP, [R2, R5, LSL #2] 
    /*00022260*/ MUL         R7, R7, R4 
    /*00022264*/ STR         R3, [SP, #24] 
    /*00022268*/ ADD         R3, FP, R8 
    /*0002226c*/ ADD         R3, R3, #36864              @ 0x9000 
    /*00022270*/ STR         R3, [SP, #32] 
    /*00022274*/ LDR         R3, [R3, #2768]             @ 0xad0 
    /*00022278*/ MOV         R8, R3 
    /*0002227c*/ STR         R3, [SP, #28] 
    /*00022280*/ BL          0x0000000000022280          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00022284*/ ADD         R1, SP, #48                 @ 0x30 
    /*00022288*/ LDR         R3, [R0, #88]               @ 0x58 
    /*0002228c*/ MOV         SL, R0 
    /*00022290*/ MOV         R0, R8 
    /*00022294*/ BLX         R3 
    /*00022298*/ SUBS        R8, R0, #0 
    /*0002229c*/ MOVWNE      R3, #906                    @ 0x38a 
    /*000222a0*/ MOVWNE      R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c5c] 
    /*000222a4*/ STRNE       R3, [SP] 
    /*000222a8*/ MOVTNE      R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c5c] 
    /*000222ac*/ BNE         VI_SubmitSomeJob2Gdc_x22814
    /*000222b0*/ ADD         R1, R7, #39168              @ 0x9900 
    /*000222b4*/ MOV         R2, #40                     @ 0x28 
    /*000222b8*/ ADD         R1, R1, #124                @ 0x7c 
    /*000222bc*/ ADD         R0, SP, #292                @ 0x124 
    /*000222c0*/ ADD         R1, FP, R1 
    /*000222c4*/ BL          0x00000000000222C4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000222c8*/ ADD         R1, R7, #39424              @ 0x9a00 
    /*000222cc*/ ADD         R1, R1, #148                @ 0x94 
    /*000222d0*/ MOV         R2, #36                     @ 0x24 
    /*000222d4*/ ADD         R1, FP, R1 
    /*000222d8*/ ADD         R0, SP, #332                @ 0x14c 
    /*000222dc*/ BL          0x00000000000222DC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000222e0*/ ADD         R3, SP, #52                 @ 0x34 
    /*000222e4*/ ADD         R2, SP, #180                @ 0xb4 
    /*000222e8*/ MOV         R1, R4 
    /*000222ec*/ MOV         R0, R5 
    /*000222f0*/ BL          0x00000000000222F0          @ VI_DRV_GetChnLDCV2AttrUse [R_ARM_CALL: .text+0x2a130] 
    /*000222f4*/ ADD         R2, SP, #44                 @ 0x2c 
    /*000222f8*/ MOV         R1, R4 
    /*000222fc*/ MOV         R0, R5 
    /*00022300*/ BL          0x0000000000022300          @ VI_DRV_GetChnRotationAttrUse [R_ARM_CALL: .text+0x2a5e4] 
    /*00022304*/ ADD         R3, SP, #56                 @ 0x38 
    /*00022308*/ ADD         R2, SP, #40                 @ 0x28 
    /*0002230c*/ MOV         R1, R4 
    /*00022310*/ MOV         R0, R5 
    /*00022314*/ BL          0x0000000000022314          @ VI_GetRotationExInfo [R_ARM_CALL: .text+0x21da8] 
    /*00022318*/ ADD         R2, SP, #376                @ 0x178 
    /*0002231c*/ MOV         R1, R4 
    /*00022320*/ MOV         R0, R5 
    /*00022324*/ BL          0x0000000000022324          @ VI_DRV_GetChnLowDelayAttr [R_ARM_CALL: .text+0x2a81c] 
    /*00022328*/ ADD         R2, SP, #120                @ 0x78 
    /*0002232c*/ MOV         R1, R4 
    /*00022330*/ MOV         R0, R5 
    /*00022334*/ BL          0x0000000000022334          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*00022338*/ LDR         R3, [SP, #16] 
    /*0002233c*/ LDR         R1, [SP, #144]              @ 0x90 
    /*00022340*/ LDR         R2, [SP, #148]              @ 0x94 
    /*00022344*/ LDR         R3, [R3, #672]              @ 0x2a0 
    /*00022348*/ STR         R1, [SP, #384]              @ 0x180 
    /*0002234c*/ CMP         R3, #1 
    /*00022350*/ STR         R2, [SP, #388]              @ 0x184 
    /*00022354*/ BEQ         VI_SubmitSomeJob2Gdc_x2259c
    /*00022358*/ CMP         R3, #0 
    /*0002235c*/ STRNE       R8, [SP, #20] 
    /*00022360*/ BEQ         VI_SubmitSomeJob2Gdc_x22590
    VI_SubmitSomeJob2Gdc_x22364:
    /*00022364*/ ADD         R2, SP, #372                @ 0x174 
    /*00022368*/ ADD         R1, SP, #368                @ 0x170 
    /*0002236c*/ MOV         R0, R5 
    /*00022370*/ BL          0x0000000000022370          @ VI_GetISPTimesForLocalDIS [R_ARM_CALL: .text+0x21d30] 
    /*00022374*/ LDR         R3, [SL, #92]               @ 0x5c 
    /*00022378*/ MOV         R0, #0 
    /*0002237c*/ BLX         R3 
    /*00022380*/ SUBS        R8, R0, #0 
    /*00022384*/ BEQ         VI_SubmitSomeJob2Gdc_x22804
    /*00022388*/ MOV         R2, #336                    @ 0x150 
    /*0002238c*/ MOV         R1, R6 
    /*00022390*/ ADD         R9, R8, R2 
    /*00022394*/ BL          0x0000000000022394          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00022398*/ MOV         R1, #0 
    /*0002239c*/ MOV         R0, R8 
    /*000223a0*/ BL          0x00000000000223A0          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*000223a4*/ MOV         R2, #336                    @ 0x150 
    /*000223a8*/ MOV         R0, R9 
    /*000223ac*/ MOV         R1, R8 
    /*000223b0*/ BL          0x00000000000223B0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000223b4*/ LDR         R3, [R6, #692]              @ 0x2b4 
    /*000223b8*/ LDR         R2, [SP, #20] 
    /*000223bc*/ CMP         R3, #1 
    /*000223c0*/ MOVEQ       R2, #0 
    /*000223c4*/ ANDNE       R2, R2, #1 
    /*000223c8*/ CMP         R2, #0 
    /*000223cc*/ BNE         VI_SubmitSomeJob2Gdc_x22724
    VI_SubmitSomeJob2Gdc_x223d0:
    /*000223d0*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*000223d4*/ BIC         R3, R3, #2 
    /*000223d8*/ CMP         R3, #1 
    /*000223dc*/ LDREQ       R3, [R8, #340]              @ 0x154 
    /*000223e0*/ LDREQ       R2, [R8, #336]              @ 0x150 
    /*000223e4*/ STREQ       R3, [R8, #336]              @ 0x150 
    /*000223e8*/ STREQ       R2, [R8, #340]              @ 0x154 
    /*000223ec*/ LDR         R3, [R6, #692]              @ 0x2b4 
    /*000223f0*/ CMP         R3, #1 
    /*000223f4*/ BEQ         VI_SubmitSomeJob2Gdc_x22410
    /*000223f8*/ LDR         R3, [SP, #40]               @ 0x28 
    /*000223fc*/ CMP         R3, #1 
    /*00022400*/ LDREQ       R2, [SP, #56]               @ 0x38 
    /*00022404*/ LDREQ       R3, [SP, #60]               @ 0x3c 
    /*00022408*/ STREQ       R2, [R8, #336]              @ 0x150 
    /*0002240c*/ STREQ       R3, [R8, #340]              @ 0x154 
    VI_SubmitSomeJob2Gdc_x22410:
    /*00022410*/ MOV         R3, R9 
    /*00022414*/ MOV         R2, R8 
    /*00022418*/ MOV         R1, R4 
    /*0002241c*/ MOV         R0, R5 
    /*00022420*/ BL          0x0000000000022420          @ VI_GetUseVbForGdcOutput [R_ARM_CALL: .text+0x21c60] 
    /*00022424*/ SUBS        R7, R0, #0 
    /*00022428*/ BNE         VI_SubmitSomeJob2Gdc_x22614
    /*0002242c*/ MOV         R0, #1 
    /*00022430*/ BL          0x0000000000022430          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00022434*/ MOV         R1, R8 
    /*00022438*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*0002243c*/ MOV         R0, R9 
    /*00022440*/ BLX         R3 
    /*00022444*/ MOV         R3, #37                     @ 0x25 
    /*00022448*/ MOV         R1, R4 
    /*0002244c*/ STR         R3, [R8, #668]              @ 0x29c 
    /*00022450*/ MOV         R0, R5 
    /*00022454*/ STR         R7, [SP, #84]               @ 0x54 
    /*00022458*/ BL          0x0000000000022458          @ VI_DRV_IsGdcCfgUpdate [R_ARM_CALL: .text+0x2aaac] 
    /*0002245c*/ CMP         R0, #0 
    /*00022460*/ BNE         VI_SubmitSomeJob2Gdc_x22664
    VI_SubmitSomeJob2Gdc_x22464:
    /*00022464*/ LDR         R3, [SP, #24] 
    /*00022468*/ MOV         R0, #504                    @ 0x1f8 
    /*0002246c*/ MOV         R1, #116                    @ 0x74 
    /*00022470*/ MOV         R2, #576                    @ 0x240 
    /*00022474*/ LDR         IP, [SP, #28] 
    /*00022478*/ MLA         R0, R0, R4, R3 
    /*0002247c*/ STR         R5, [SP, #68]               @ 0x44 
    /*00022480*/ MLA         R1, R1, R4, R3 
    /*00022484*/ STR         IP, [SP, #76]               @ 0x4c 
    /*00022488*/ MLA         R2, R2, R4, R3 
    /*0002248c*/ MOV         R3, #468                    @ 0x1d4 
    /*00022490*/ MLA         R3, R3, R4, FP 
    /*00022494*/ MOVW        IP, #34832                  @ 0x8810 
    /*00022498*/ LDR         IP, [R0, IP] 
    /*0002249c*/ MOVW        R0, #35336                  @ 0x8a08 
    /*000224a0*/ LDR         R0, [R1, R0] 
    /*000224a4*/ MOVW        R1, #36760                  @ 0x8f98 
    /*000224a8*/ LDR         LR, [R2, R1] 
    /*000224ac*/ MOVW        R2, #39328                  @ 0x99a0 
    /*000224b0*/ LDR         R1, [SP, #20] 
    /*000224b4*/ LDR         R3, [R3, R2] 
    /*000224b8*/ LDR         R2, [SP, #376]              @ 0x178 
    /*000224bc*/ STR         R1, [SP, #88]               @ 0x58 
    /*000224c0*/ CMP         R2, #1 
    /*000224c4*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*000224c8*/ LDR         R2, [SP, #40]               @ 0x28 
    /*000224cc*/ STR         R0, [SP, #112]              @ 0x70 
    /*000224d0*/ MOV         R0, #16 
    /*000224d4*/ STR         R3, [SP, #92]               @ 0x5c 
    /*000224d8*/ MOV         R3, #0 
    /*000224dc*/ STR         R4, [SP, #72]               @ 0x48 
    /*000224e0*/ STR         IP, [SP, #108]              @ 0x6c 
    /*000224e4*/ STR         LR, [SP, #96]               @ 0x60 
    /*000224e8*/ STR         R1, [SP, #100]              @ 0x64 
    /*000224ec*/ STR         R2, [SP, #104]              @ 0x68 
    /*000224f0*/ STR         R0, [SP, #64]               @ 0x40 
    /*000224f4*/ STR         R3, [SP, #116]              @ 0x74 
    /*000224f8*/ BEQ         VI_SubmitSomeJob2Gdc_x22794
    VI_SubmitSomeJob2Gdc_x224fc:
    /*000224fc*/ STR         R5, [R8, #756]              @ 0x2f4 
    /*00022500*/ MOV         R3, #0 
    /*00022504*/ STR         R4, [R8, #760]              @ 0x2f8 
    /*00022508*/ MOVW        R2, #0                      @ VI_GdcLastTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x20b04] 
    /*0002250c*/ LDR         R0, [R6, #692]              @ 0x2b4 
    /*00022510*/ MOVT        R2, #0                      @ VI_GdcLastTaskCallBack [R_ARM_MOVT_ABS: .text+0x20b04] 
    /*00022514*/ STR         R3, [R8, #676]              @ 0x2a4 
    /*00022518*/ STR         R2, [R8, #748]              @ 0x2ec 
    /*0002251c*/ STR         R0, [R8, #672]              @ 0x2a0 
    /*00022520*/ LDR         R2, [R6, #692]              @ 0x2b4 
    /*00022524*/ CMP         R2, #1 
    /*00022528*/ BEQ         VI_SubmitSomeJob2Gdc_x226d8
    VI_SubmitSomeJob2Gdc_x2252c:
    /*0002252c*/ LDR         R2, [R8, #664]              @ 0x298 
    /*00022530*/ MOV         R0, R8 
    /*00022534*/ LDR         R3, [SP, #16] 
    /*00022538*/ ADD         IP, SP, #164                @ 0xa4 
    /*0002253c*/ LDRD        R8, [R9, #120]              @ 0x78 
    /*00022540*/ ADD         R1, SP, #64                 @ 0x40 
    /*00022544*/ STR         R2, [SP, #16] 
    /*00022548*/ ADD         R2, SP, #84                 @ 0x54 
    /*0002254c*/ STR         IP, [SP] 
    /*00022550*/ LDR         R7, [SL, #100]              @ 0x64 
    /*00022554*/ BLX         R7 
    /*00022558*/ SUBS        R7, R0, #0 
    /*0002255c*/ BNE         VI_SubmitSomeJob2Gdc_x225a4
    /*00022560*/ MOV         R1, R7 
    /*00022564*/ MOV         R0, R6 
    /*00022568*/ BL          0x0000000000022568          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*0002256c*/ SUBS        R7, R0, #0 
    /*00022570*/ BNE         VI_SubmitSomeJob2Gdc_x22760
    /*00022574*/ MOV         R1, R4 
    /*00022578*/ MOV         R0, R5 
    /*0002257c*/ MOV         R2, R7 
    /*00022580*/ BL          0x0000000000022580          @ VI_DRV_SetGdcCfgUpdateFlag [R_ARM_CALL: .text+0x2aa8c] 
    VI_SubmitSomeJob2Gdc_x22584:
    /*00022584*/ MOV         R0, R7 
    /*00022588*/ ADD         SP, SP, #396                @ 0x18c 
    /*0002258c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SubmitSomeJob2Gdc_x22590:
    /*00022590*/ LDR         R2, [SP, #292]              @ 0x124 
    /*00022594*/ CMP         R2, #2 
    /*00022598*/ BEQ         VI_SubmitSomeJob2Gdc_x2270c
    VI_SubmitSomeJob2Gdc_x2259c:
    /*0002259c*/ STR         R3, [SP, #20] 
    /*000225a0*/ B           VI_SubmitSomeJob2Gdc_x22364
    VI_SubmitSomeJob2Gdc_x225a4:
    /*000225a4*/ MOV         R0, R6 
    /*000225a8*/ MOV         R1, #0 
    /*000225ac*/ BL          0x00000000000225AC          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*000225b0*/ MOV         R2, R8 
    /*000225b4*/ MOV         R3, R9 
    /*000225b8*/ MOV         R1, #0 
    /*000225bc*/ LDR         R0, [SP, #16] 
    /*000225c0*/ STR         R1, [SP] 
    /*000225c4*/ BL          0x00000000000225C4          @ VI_MKP_PutVb [R_ARM_CALL: .text+0x2167c] 
    /*000225c8*/ STR         R4, [SP, #8] 
    /*000225cc*/ STR         R5, [SP, #4] 
    /*000225d0*/ MOVW        R3, #1099                   @ 0x44b 
    /*000225d4*/ MOV         R1, #16 
    /*000225d8*/ STR         R3, [SP] 
    /*000225dc*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9cec] 
    /*000225e0*/ LDR         R3, [PC, #744]              @ 0x00000000000228d0 
    /*000225e4*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9cec] 
    /*000225e8*/ MOV         R0, #3 
    /*000225ec*/ BL          0x00000000000225EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000225f0*/ MOV         R3, #56                     @ 0x38 
    /*000225f4*/ MLA         R4, R3, R4, FP 
    /*000225f8*/ MOVW        R2, #36660                  @ 0x8f34 
    /*000225fc*/ MOV         R0, R7 
    /*00022600*/ LDR         R3, [R4, R2] 
    /*00022604*/ ADD         R3, R3, #1 
    /*00022608*/ STR         R3, [R4, R2] 
    /*0002260c*/ ADD         SP, SP, #396                @ 0x18c 
    /*00022610*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SubmitSomeJob2Gdc_x22614:
    /*00022614*/ MOV         R1, #0 
    /*00022618*/ MOV         R0, R8 
    /*0002261c*/ BL          0x000000000002261C          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00022620*/ MOV         R3, #56                     @ 0x38 
    /*00022624*/ MLA         R4, R3, R4, FP 
    /*00022628*/ MOVW        LR, #36660                  @ 0x8f34 
    /*0002262c*/ MOVW        IP, #36668                  @ 0x8f3c 
    /*00022630*/ MOV         R1, R8 
    /*00022634*/ MOV         R0, #0 
    /*00022638*/ LDR         R2, [R4, LR] 
    /*0002263c*/ LDR         R3, [R4, IP] 
    /*00022640*/ ADD         R2, R2, #1 
    /*00022644*/ STR         R2, [R4, LR] 
    /*00022648*/ ADD         R3, R3, #1 
    /*0002264c*/ STR         R3, [R4, IP] 
    /*00022650*/ LDR         R3, [SL, #96]               @ 0x60 
    /*00022654*/ BLX         R3 
    /*00022658*/ MOV         R0, R7 
    /*0002265c*/ ADD         SP, SP, #396                @ 0x18c 
    /*00022660*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SubmitSomeJob2Gdc_x22664:
    /*00022664*/ LDR         R2, [SP, #48]               @ 0x30 
    /*00022668*/ MOV         R1, R4 
    /*0002266c*/ MOV         R0, R5 
    /*00022670*/ MOV         R3, #1 
    /*00022674*/ ADD         R2, R2, #8 
    /*00022678*/ STR         R3, [SP, #84]               @ 0x54 
    /*0002267c*/ BL          0x000000000002267C          @ VI_DRV_GetLDCOperationAttr [R_ARM_CALL: .text+0x2a424] 
    /*00022680*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00022684*/ CMP         R3, #0 
    /*00022688*/ BNE         VI_SubmitSomeJob2Gdc_x227e8
    /*0002268c*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00022690*/ CMP         R1, #0 
    /*00022694*/ BEQ         VI_SubmitSomeJob2Gdc_x227d0
    /*00022698*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0002269c*/ MOV         R1, R4 
    /*000226a0*/ MOV         R0, R5 
    /*000226a4*/ ADD         R2, R2, #1136               @ 0x470 
    /*000226a8*/ ADD         R2, R2, #8 
    /*000226ac*/ BL          0x00000000000226AC          @ VI_DRV_GetRotationExOperationAttr [R_ARM_CALL: .text+0x2a558] 
    VI_SubmitSomeJob2Gdc_x226b0:
    /*000226b0*/ LDR         R3, [SP, #48]               @ 0x30 
    /*000226b4*/ ADD         R2, SP, #164                @ 0xa4 
    /*000226b8*/ MOV         R1, R4 
    /*000226bc*/ MOV         R0, R5 
    /*000226c0*/ ADD         R3, R3, #936                @ 0x3a8 
    /*000226c4*/ BL          0x00000000000226C4          @ VI_DRV_GetSpreadOperationAttr [R_ARM_CALL: .text+0x2a850] 
    /*000226c8*/ LDR         R0, [SP, #48]               @ 0x30 
    /*000226cc*/ ADD         R0, R0, #936                @ 0x3a8 
    /*000226d0*/ BL          0x00000000000226D0          @ VI_DRV_SetSpreadOperationPointer [R_ARM_CALL: .text+0x2a8d4] 
    /*000226d4*/ B           VI_SubmitSomeJob2Gdc_x22464
    VI_SubmitSomeJob2Gdc_x226d8:
    /*000226d8*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*000226dc*/ STR         R3, [SP, #88]               @ 0x58 
    /*000226e0*/ STR         R3, [SP, #108]              @ 0x6c 
    /*000226e4*/ STR         R3, [SP, #96]               @ 0x60 
    /*000226e8*/ STR         R3, [SP, #104]              @ 0x68 
    /*000226ec*/ STR         R3, [SP, #92]               @ 0x5c 
    /*000226f0*/ STR         R3, [SP, #112]              @ 0x70 
    /*000226f4*/ STR         R3, [SP, #332]              @ 0x14c 
    /*000226f8*/ STR         R3, [SP, #164]              @ 0xa4 
    /*000226fc*/ STR         R3, [SP, #376]              @ 0x178 
    /*00022700*/ STR         R3, [SP, #380]              @ 0x17c 
    /*00022704*/ STR         R2, [SP, #100]              @ 0x64 
    /*00022708*/ B           VI_SubmitSomeJob2Gdc_x2252c
    VI_SubmitSomeJob2Gdc_x2270c:
    /*0002270c*/ LDR         R8, [SP, #332]              @ 0x14c 
    /*00022710*/ SUB         R3, R8, #1 
    /*00022714*/ CLZ         R3, R3 
    /*00022718*/ LSR         R3, R3, #5 
    /*0002271c*/ STR         R3, [SP, #20] 
    /*00022720*/ B           VI_SubmitSomeJob2Gdc_x22364
    VI_SubmitSomeJob2Gdc_x22724:
    /*00022724*/ LDR         R3, [SP, #292]              @ 0x124 
    /*00022728*/ CMP         R3, #2 
    /*0002272c*/ BEQ         VI_SubmitSomeJob2Gdc_x2282c
    VI_SubmitSomeJob2Gdc_x22730:
    /*00022730*/ MOV         R3, #468                    @ 0x1d4 
    /*00022734*/ MOVW        R2, #39328                  @ 0x99a0 
    /*00022738*/ MLA         R3, R3, R4, FP 
    /*0002273c*/ LDR         R3, [R3, R2] 
    /*00022740*/ CMP         R3, #0 
    /*00022744*/ BNE         VI_SubmitSomeJob2Gdc_x223d0
    /*00022748*/ LDR         R2, [SP, #16] 
    /*0002274c*/ LDR         R3, [R2, #752]              @ 0x2f0 
    /*00022750*/ STR         R3, [R8, #336]              @ 0x150 
    /*00022754*/ LDR         R3, [R2, #756]              @ 0x2f4 
    /*00022758*/ STR         R3, [R8, #340]              @ 0x154 
    /*0002275c*/ B           VI_SubmitSomeJob2Gdc_x223d0
    VI_SubmitSomeJob2Gdc_x22760:
    /*00022760*/ STR         R4, [SP, #8] 
    /*00022764*/ MOVW        R3, #1109                   @ 0x455 
    /*00022768*/ STR         R5, [SP, #4] 
    /*0002276c*/ MOV         R1, #16 
    /*00022770*/ STR         R3, [SP] 
    /*00022774*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9d34] 
    /*00022778*/ LDR         R3, [PC, #336]              @ 0x00000000000228d0 
    /*0002277c*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9d34] 
    /*00022780*/ MOV         R0, #3 
    /*00022784*/ BL          0x0000000000022784          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00022788*/ MOV         R0, R7 
    /*0002278c*/ ADD         SP, SP, #396                @ 0x18c 
    /*00022790*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SubmitSomeJob2Gdc_x22794:
    /*00022794*/ MOV         R1, R4 
    /*00022798*/ MOV         R0, R5 
    /*0002279c*/ BL          0x000000000002279C          @ VI_DRV_GetChnOsdNum [R_ARM_CALL: .text+0x2d244] 
    /*000227a0*/ CMP         R0, #0 
    /*000227a4*/ BEQ         VI_SubmitSomeJob2Gdc_x22848
    VI_SubmitSomeJob2Gdc_x227a8:
    /*000227a8*/ LDR         R3, [SP, #36]               @ 0x24 
    /*000227ac*/ MOVW        R2, #39644                  @ 0x9adc 
    /*000227b0*/ LDR         R0, [SP, #32] 
    /*000227b4*/ ADD         R1, FP, R3 
    /*000227b8*/ MOV         R3, #0 
    /*000227bc*/ STR         R3, [SP, #376]              @ 0x178 
    /*000227c0*/ STR         R3, [R0, #2036]             @ 0x7f4 
    /*000227c4*/ STR         R3, [SP, #380]              @ 0x17c 
    /*000227c8*/ STR         R3, [R1, R2] 
    /*000227cc*/ B           VI_SubmitSomeJob2Gdc_x224fc
    VI_SubmitSomeJob2Gdc_x227d0:
    /*000227d0*/ LDR         R0, [SP, #48]               @ 0x30 
    /*000227d4*/ MOV         R2, #208                    @ 0xd0 
    /*000227d8*/ ADD         R0, R0, #1136               @ 0x470 
    /*000227dc*/ ADD         R0, R0, #8 
    /*000227e0*/ BL          0x00000000000227E0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000227e4*/ B           VI_SubmitSomeJob2Gdc_x226b0
    VI_SubmitSomeJob2Gdc_x227e8:
    /*000227e8*/ LDR         R2, [SP, #48]               @ 0x30 
    /*000227ec*/ MOV         R1, R4 
    /*000227f0*/ MOV         R0, R5 
    /*000227f4*/ ADD         R2, R2, #1136               @ 0x470 
    /*000227f8*/ ADD         R2, R2, #8 
    /*000227fc*/ BL          0x00000000000227FC          @ VI_DRV_GetRotationOperationAttr [R_ARM_CALL: .text+0x2a4e8] 
    /*00022800*/ B           VI_SubmitSomeJob2Gdc_x226b0
    VI_SubmitSomeJob2Gdc_x22804:
    /*00022804*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9cb4] 
    /*00022808*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9cb4] 
    /*0002280c*/ MOV         R3, #944                    @ 0x3b0 
    /*00022810*/ STR         R3, [SP] 
    VI_SubmitSomeJob2Gdc_x22814:
    /*00022814*/ LDR         R3, [PC, #180]              @ 0x00000000000228d0 
    /*00022818*/ MOV         R1, #16 
    /*0002281c*/ MOV         R0, #3 
    /*00022820*/ MVN         R7, #0 
    /*00022824*/ BL          0x0000000000022824          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00022828*/ B           VI_SubmitSomeJob2Gdc_x22584
    VI_SubmitSomeJob2Gdc_x2282c:
    /*0002282c*/ ADD         R1, R7, #38912              @ 0x9800 
    /*00022830*/ MOV         R2, R9 
    /*00022834*/ ADD         R1, R1, #252                @ 0xfc 
    /*00022838*/ LDR         R0, [SP, #16] 
    /*0002283c*/ ADD         R1, FP, R1 
    /*00022840*/ BL          0x0000000000022840          @ VI_SetDisWH [R_ARM_CALL: .text+0x2215c] 
    /*00022844*/ B           VI_SubmitSomeJob2Gdc_x22730
    VI_SubmitSomeJob2Gdc_x22848:
    /*00022848*/ MOV         R1, R4 
    /*0002284c*/ MOV         R0, R5 
    /*00022850*/ BL          0x0000000000022850          @ VI_DRV_GetChnCoverExNum [R_ARM_CALL: .text+0x2d088] 
    /*00022854*/ CMP         R0, #0 
    /*00022858*/ BNE         VI_SubmitSomeJob2Gdc_x227a8
    /*0002285c*/ LDR         R3, [R6, #692]              @ 0x2b4 
    /*00022860*/ CMP         R3, #1 
    /*00022864*/ BEQ         VI_SubmitSomeJob2Gdc_x22884
    /*00022868*/ ADD         R3, FP, #32768              @ 0x8000 
    /*0002286c*/ LDR         R2, [R3, #3304]             @ 0xce8 
    /*00022870*/ CMP         R2, #0 
    /*00022874*/ BEQ         VI_SubmitSomeJob2Gdc_x22884
    /*00022878*/ LDR         R3, [R3, #3308]             @ 0xcec 
    /*0002287c*/ CMP         R4, R3 
    /*00022880*/ BEQ         VI_SubmitSomeJob2Gdc_x227a8
    VI_SubmitSomeJob2Gdc_x22884:
    /*00022884*/ LDR         R3, [R8, #340]              @ 0x154 
    /*00022888*/ LDR         R2, [SP, #380]              @ 0x17c 
    /*0002288c*/ CMP         R2, R3 
    /*00022890*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00022894*/ BCC         VI_SubmitSomeJob2Gdc_x228b4
    /*00022898*/ LDR         R0, [SP, #32] 
    /*0002289c*/ ADD         R1, FP, R3 
    /*000228a0*/ MOVW        R2, #39644                  @ 0x9adc 
    /*000228a4*/ MOV         R3, #0 
    /*000228a8*/ STR         R3, [R0, #2036]             @ 0x7f4 
    /*000228ac*/ STR         R3, [R1, R2] 
    /*000228b0*/ B           VI_SubmitSomeJob2Gdc_x224fc
    VI_SubmitSomeJob2Gdc_x228b4:
    /*000228b4*/ LDR         R0, [SP, #32] 
    /*000228b8*/ ADD         R3, FP, R3 
    /*000228bc*/ MOVW        R1, #39644                  @ 0x9adc 
    /*000228c0*/ MOV         R2, #1 
    /*000228c4*/ STR         R2, [R0, #2036]             @ 0x7f4 
    /*000228c8*/ STR         R2, [R3, R1] 
    /*000228cc*/ B           VI_SubmitSomeJob2Gdc_x224fc
    /*000228d0*/ ANDEQ       R1, R0, IP, LSR #11 
FUNC_END VI_SubmitSomeJob2Gdc


FUNC_BEGIN VI_SubmitFrame2Gdc
    /*000228d4*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000228d8*/ MOV         R4, R2 
    /*000228dc*/ MOV         R5, R3 
    /*000228e0*/ MOV         R2, R3 
    /*000228e4*/ MOV         R3, R4 
    /*000228e8*/ MOV         R6, R0 
    /*000228ec*/ MOV         R7, R1 
    /*000228f0*/ BL          0x00000000000228F0          @ VI_IsByPassGdc [R_ARM_CALL: .text+0x21de0] 
    /*000228f4*/ CMP         R0, #0 
    /*000228f8*/ BNE         VI_SubmitFrame2Gdc_x22914
    /*000228fc*/ MOV         R3, R5 
    /*00022900*/ MOV         R2, R4 
    /*00022904*/ MOV         R1, R7 
    /*00022908*/ MOV         R0, R6 
    /*0002290c*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_SubmitFrame2Gdc_x22910:
    /*00022910*/ B           VI_SubmitFrame2Gdc_x22910   @ VI_SubmitSomeJob2Gdc [R_ARM_JUMP24: .text+0x221d0] 
    VI_SubmitFrame2Gdc_x22914:
    /*00022914*/ MOV         R2, R4 
    /*00022918*/ MOV         R1, R7 
    /*0002291c*/ MOV         R0, R6 
    /*00022920*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_SubmitFrame2Gdc_x22924:
    /*00022924*/ B           VI_SubmitFrame2Gdc_x22924   @ VI_SubmitByPassJob2Gdc [R_ARM_JUMP24: .text+0x21fd0] 
FUNC_END VI_SubmitFrame2Gdc


FUNC_BEGIN VI_SubmitExtChnPic2Gdc
    /*00022928*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002292c*/ SUB         SP, SP, #124                @ 0x7c 
    /*00022930*/ ADD         R7, SP, #120                @ 0x78 
    /*00022934*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00022938*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0002293c*/ MOV         R4, R0 
    /*00022940*/ MOV         R0, #37                     @ 0x25 
    /*00022944*/ MOV         R5, R1 
    /*00022948*/ LDR         FP, [R3, R4, LSL #2] 
    /*0002294c*/ MOV         R6, R2 
    /*00022950*/ MOV         R9, #0 
    /*00022954*/ STR         R9, [R7, #-84]!             @ 0xffffffac 
    /*00022958*/ BL          0x0000000000022958          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002295c*/ MOV         R2, R7 
    /*00022960*/ MOV         R1, R5 
    /*00022964*/ MOV         SL, R0 
    /*00022968*/ MOV         R0, R4 
    /*0002296c*/ BL          0x000000000002296C          @ VI_DRV_GetExtChnFisheyeWorkingAttr [R_ARM_CALL: .text+0x2b208] 
    /*00022970*/ LDR         R1, [SP, #36]               @ 0x24 
    /*00022974*/ MOV         R0, R4 
    /*00022978*/ BL          0x0000000000022978          @ VI_DRV_GetFisheyeWorkingConfig [R_ARM_CALL: .text+0x30420] 
    /*0002297c*/ MOV         R2, R6 
    /*00022980*/ MOV         R1, R5 
    /*00022984*/ MOV         R0, R4 
    /*00022988*/ BL          0x0000000000022988          @ VI_DRV_CheckExtFisheyeCapacity [R_ARM_CALL: .text+0x30428] 
    /*0002298c*/ SUBS        R7, R0, #0 
    /*00022990*/ BEQ         VI_SubmitExtChnPic2Gdc_x229a0
    VI_SubmitExtChnPic2Gdc_x22994:
    /*00022994*/ MOV         R0, R7 
    /*00022998*/ ADD         SP, SP, #124                @ 0x7c 
    /*0002299c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SubmitExtChnPic2Gdc_x229a0:
    /*000229a0*/ ADD         R2, SP, #80                 @ 0x50 
    /*000229a4*/ MOV         R1, R5 
    /*000229a8*/ MOV         R0, R4 
    /*000229ac*/ BL          0x00000000000229AC          @ VI_DRV_GetWorkingExtChnAttr [R_ARM_CALL: .text+0x29cb4] 
    /*000229b0*/ LDR         R3, [SL, #92]               @ 0x5c 
    /*000229b4*/ MOV         R0, #1 
    /*000229b8*/ BLX         R3 
    /*000229bc*/ SUBS        R8, R0, #0 
    /*000229c0*/ BEQ         VI_SubmitExtChnPic2Gdc_x22b98
    /*000229c4*/ MOV         R2, #336                    @ 0x150 
    /*000229c8*/ MOV         R1, R6 
    /*000229cc*/ ADD         R3, R8, R2 
    /*000229d0*/ STR         R3, [SP, #28] 
    /*000229d4*/ BL          0x00000000000229D4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000229d8*/ MOV         R1, R7 
    /*000229dc*/ MOV         R0, R8 
    /*000229e0*/ BL          0x00000000000229E0          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*000229e4*/ MOV         R2, #336                    @ 0x150 
    /*000229e8*/ MOV         R1, R6 
    /*000229ec*/ ADD         R0, R8, #336                @ 0x150 
    /*000229f0*/ BL          0x00000000000229F0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000229f4*/ ADD         R3, R5, #9728               @ 0x2600 
    /*000229f8*/ ADD         R3, R3, #54                 @ 0x36 
    /*000229fc*/ LDR         IP, [SP, #88]               @ 0x58 
    /*00022a00*/ LDR         R2, [SP, #92]               @ 0x5c 
    /*00022a04*/ ADD         R1, R8, #336                @ 0x150 
    /*00022a08*/ LDR         R3, [FP, R3, LSL #2] 
    /*00022a0c*/ ADD         R0, SP, #40                 @ 0x28 
    /*00022a10*/ LDR         LR, [SP, #96]               @ 0x60 
    /*00022a14*/ STR         IP, [SP, #48]               @ 0x30 
    /*00022a18*/ STR         R3, [SP, #76]               @ 0x4c 
    /*00022a1c*/ LDR         IP, [R6, #16] 
    /*00022a20*/ LDR         R3, [SP, #104]              @ 0x68 
    /*00022a24*/ STR         R2, [SP, #52]               @ 0x34 
    /*00022a28*/ LDR         R2, [R6, #24] 
    /*00022a2c*/ STR         R7, [SP, #72]               @ 0x48 
    /*00022a30*/ STR         R7, [SP, #28] 
    /*00022a34*/ STR         R4, [SP, #40]               @ 0x28 
    /*00022a38*/ STR         R5, [SP, #44]               @ 0x2c 
    /*00022a3c*/ STR         LR, [SP, #56]               @ 0x38 
    /*00022a40*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00022a44*/ STR         IP, [SP, #64]               @ 0x40 
    /*00022a48*/ STR         R2, [SP, #68]               @ 0x44 
    /*00022a4c*/ BL          0x0000000000022A4C          @ VI_DRV_GetFrmVbBlk [R_ARM_CALL: .text+0x2c8f4] 
    /*00022a50*/ SUBS        R7, R0, #0 
    /*00022a54*/ BNE         VI_SubmitExtChnPic2Gdc_x22b38
    /*00022a58*/ MOV         R0, #1 
    /*00022a5c*/ MOV         R9, #16 
    /*00022a60*/ BL          0x0000000000022A60          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00022a64*/ MOV         R1, R6 
    /*00022a68*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00022a6c*/ ADD         R0, R8, #336                @ 0x150 
    /*00022a70*/ BLX         R3 
    /*00022a74*/ ADD         R2, R8, #464                @ 0x1d0 
    /*00022a78*/ STR         R4, [R8, #756]              @ 0x2f4 
    /*00022a7c*/ MOV         R1, #37                     @ 0x25 
    /*00022a80*/ STR         R5, [R8, #760]              @ 0x2f8 
    /*00022a84*/ MOV         R0, R8 
    /*00022a88*/ STR         R1, [R8, #668]              @ 0x29c 
    /*00022a8c*/ MOVW        R3, #0                      @ VI_GdcExtChnTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x20c70] 
    /*00022a90*/ STR         R9, [R8, #752]              @ 0x2f0 
    /*00022a94*/ MOVT        R3, #0                      @ VI_GdcExtChnTaskCallBack [R_ARM_MOVT_ABS: .text+0x20c70] 
    /*00022a98*/ LDR         R1, [SP, #36]               @ 0x24 
    /*00022a9c*/ STR         R3, [R8, #748]              @ 0x2ec 
    /*00022aa0*/ LDR         R3, [SL, #28] 
    /*00022aa4*/ LDR         R8, [R8, #664]              @ 0x298 
    /*00022aa8*/ LDRD        SL, [R2, #-8] 
    /*00022aac*/ BLX         R3 
    /*00022ab0*/ SUBS        R7, R0, #0 
    /*00022ab4*/ BNE         VI_SubmitExtChnPic2Gdc_x22aec
    /*00022ab8*/ MOV         R0, #176                    @ 0xb0 
    /*00022abc*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00022ac0*/ MUL         R4, R0, R4 
    /*00022ac4*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00022ac8*/ ADD         R0, R4, #28 
    /*00022acc*/ ADD         R4, R4, #36                 @ 0x24 
    /*00022ad0*/ ADD         R0, R5, R0 
    /*00022ad4*/ BL          0x0000000000022AD4          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*00022ad8*/ ADD         R0, R5, R4 
    /*00022adc*/ BL          0x0000000000022ADC          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*00022ae0*/ MOV         R0, R7 
    /*00022ae4*/ ADD         SP, SP, #124                @ 0x7c 
    /*00022ae8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SubmitExtChnPic2Gdc_x22aec:
    /*00022aec*/ MOV         R0, R6 
    /*00022af0*/ LDR         R6, [SP, #28] 
    /*00022af4*/ MOV         R1, R6 
    /*00022af8*/ BL          0x0000000000022AF8          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00022afc*/ MOV         R2, SL 
    /*00022b00*/ MOV         R3, FP 
    /*00022b04*/ STR         R6, [SP] 
    /*00022b08*/ MOV         R0, R8 
    /*00022b0c*/ BL          0x0000000000022B0C          @ VI_MKP_PutVb [R_ARM_CALL: .text+0x2167c] 
    /*00022b10*/ MOVW        R3, #1260                   @ 0x4ec 
    /*00022b14*/ STMIB       SP, {R4, R5} 
    /*00022b18*/ MOV         R1, R9 
    /*00022b1c*/ STR         R3, [SP] 
    /*00022b20*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9e0c] 
    /*00022b24*/ LDR         R3, [PC, #144]              @ 0x0000000000022bbc 
    /*00022b28*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9e0c] 
    /*00022b2c*/ MOV         R0, #3 
    /*00022b30*/ BL          0x0000000000022B30          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00022b34*/ B           VI_SubmitExtChnPic2Gdc_x22994
    VI_SubmitExtChnPic2Gdc_x22b38:
    /*00022b38*/ MOV         R1, R9 
    /*00022b3c*/ MOV         R0, R8 
    /*00022b40*/ BL          0x0000000000022B40          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00022b44*/ LDR         R1, [SP, #52]               @ 0x34 
    /*00022b48*/ LDR         R0, [SP, #48]               @ 0x30 
    /*00022b4c*/ MOVW        R3, #1235                   @ 0x4d3 
    /*00022b50*/ STR         R5, [SP, #8] 
    /*00022b54*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9dac] 
    /*00022b58*/ STR         R1, [SP, #16] 
    /*00022b5c*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9dac] 
    /*00022b60*/ STR         R0, [SP, #12] 
    /*00022b64*/ MOV         R1, #16 
    /*00022b68*/ STR         R3, [SP] 
    /*00022b6c*/ MOV         R0, #3 
    /*00022b70*/ STR         R4, [SP, #4] 
    /*00022b74*/ LDR         R3, [PC, #64]               @ 0x0000000000022bbc 
    /*00022b78*/ BL          0x0000000000022B78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00022b7c*/ LDR         R3, [SL, #96]               @ 0x60 
    /*00022b80*/ MOV         R1, R8 
    /*00022b84*/ MOV         R0, #1 
    /*00022b88*/ BLX         R3 
    /*00022b8c*/ MOV         R0, R7 
    /*00022b90*/ ADD         SP, SP, #124                @ 0x7c 
    /*00022b94*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SubmitExtChnPic2Gdc_x22b98:
    /*00022b98*/ MOVW        R3, #1206                   @ 0x4b6 
    /*00022b9c*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9d74] 
    /*00022ba0*/ STR         R3, [SP] 
    /*00022ba4*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9d74] 
    /*00022ba8*/ LDR         R3, [PC, #12]               @ 0x0000000000022bbc 
    /*00022bac*/ MOV         R1, #16 
    /*00022bb0*/ MOV         R0, #3 
    /*00022bb4*/ BL          0x0000000000022BB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00022bb8*/ B           VI_SubmitExtChnPic2Gdc_x22994
    /*00022bbc*/ ANDEQ       R1, R0, R4, ASR #11 
FUNC_END VI_SubmitExtChnPic2Gdc


FUNC_BEGIN VI_DIS_WaitLdcV2CallBack.part.0
    /*00022bc0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00022bc4*/ SUB         SP, SP, #12 
    /*00022bc8*/ MOV         R2, #71                     @ 0x47 
    /*00022bcc*/ MOV         R1, #16 
    /*00022bd0*/ STR         R2, [SP] 
    /*00022bd4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x15dc] 
    /*00022bd8*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9e58] 
    /*00022bdc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x15dc] 
    /*00022be0*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9e58] 
    /*00022be4*/ MOV         R0, #3 
    /*00022be8*/ BL          0x0000000000022BE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00022bec*/ MOV         R0, #1 
    /*00022bf0*/ ADD         SP, SP, #12 
    /*00022bf4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DIS_WaitLdcV2CallBack.part.0


FUNC_BEGIN VI_DIS_WaitLdcV2CallBack
    /*00022bf8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00022bfc*/ SUB         SP, SP, #124                @ 0x7c 
    /*00022c00*/ MOV         R5, R0 
    /*00022c04*/ MOV         R0, #37                     @ 0x25 
    /*00022c08*/ MOV         R4, #0 
    /*00022c0c*/ STR         R4, [SP, #4] 
    /*00022c10*/ BL          0x0000000000022C10          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00022c14*/ SUBS        R6, R0, #0 
    /*00022c18*/ BEQ         VI_DIS_WaitLdcV2CallBack_x22ca8
    /*00022c1c*/ LDR         R3, [R6, #112]              @ 0x70 
    /*00022c20*/ CMP         R3, R4 
    /*00022c24*/ BEQ         VI_DIS_WaitLdcV2CallBack_x22ca8
    /*00022c28*/ CMP         R5, R4 
    /*00022c2c*/ BEQ         VI_DIS_WaitLdcV2CallBack_x22cb4
    /*00022c30*/ LDR         R0, [R5] 
    /*00022c34*/ MOVW        LR, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00022c38*/ LDR         R1, [R5, #4] 
    /*00022c3c*/ MOVT        LR, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00022c40*/ ADD         R3, SP, #4 
    /*00022c44*/ ADD         R2, SP, #8 
    /*00022c48*/ ADD         IP, R1, #2464               @ 0x9a0 
    /*00022c4c*/ LDR         LR, [LR, R0, LSL #2] 
    /*00022c50*/ ADD         IP, IP, #13 
    /*00022c54*/ LDR         R7, [LR, IP, LSL #4] 
    /*00022c58*/ BL          0x0000000000022C58          @ VI_DRV_GetChnLDCV2AttrUse [R_ARM_CALL: .text+0x2a130] 
    /*00022c5c*/ LDR         R3, [SP, #4] 
    /*00022c60*/ CMP         R3, #0 
    /*00022c64*/ BEQ         VI_DIS_WaitLdcV2CallBack_x22c8c
    /*00022c68*/ LDR         R3, [R5] 
    /*00022c6c*/ MOVW        R2, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00022c70*/ MOVT        R2, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00022c74*/ MOV         R1, #176                    @ 0xb0 
    /*00022c78*/ MLA         R3, R1, R3, R2 
    /*00022c7c*/ LDR         R3, [R3, #8] 
    /*00022c80*/ CMP         R3, #0 
    /*00022c84*/ MOVNE       R0, R4 
    /*00022c88*/ BNE         VI_DIS_WaitLdcV2CallBack_x22ca0
    VI_DIS_WaitLdcV2CallBack_x22c8c:
    /*00022c8c*/ LDR         R3, [R6, #112]              @ 0x70 
    /*00022c90*/ MOV         R0, R7 
    /*00022c94*/ BLX         R3 
    /*00022c98*/ CLZ         R0, R0 
    /*00022c9c*/ LSR         R0, R0, #5 
    VI_DIS_WaitLdcV2CallBack_x22ca0:
    /*00022ca0*/ ADD         SP, SP, #124                @ 0x7c 
    /*00022ca4*/ POP         {R4, R5, R6, R7, PC} 
    VI_DIS_WaitLdcV2CallBack_x22ca8:
    /*00022ca8*/ MOV         R0, #1 
    /*00022cac*/ ADD         SP, SP, #124                @ 0x7c 
    /*00022cb0*/ POP         {R4, R5, R6, R7, PC} 
    VI_DIS_WaitLdcV2CallBack_x22cb4:
    /*00022cb4*/ BL          0x0000000000022BC0 
    /*00022cb8*/ B           VI_DIS_WaitLdcV2CallBack_x22ca0
FUNC_END VI_DIS_WaitLdcV2CallBack


FUNC_BEGIN VI_DIS_WaitConditionCallBack
    /*00022cbc*/ PUSH        {R4, LR} 
    /*00022cc0*/ SUBS        R4, R0, #0 
    /*00022cc4*/ SUB         SP, SP, #8 
    /*00022cc8*/ BEQ         VI_DIS_WaitConditionCallBack_x22d38
    /*00022ccc*/ LDR         R0, [R4] 
    /*00022cd0*/ MOVW        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00022cd4*/ MOVT        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00022cd8*/ LDR         R3, [R4, #4] 
    /*00022cdc*/ MOV         IP, #468                    @ 0x1d4 
    /*00022ce0*/ MOVW        R1, #39572                  @ 0x9a94 
    /*00022ce4*/ LDR         R2, [R2, R0, LSL #2] 
    /*00022ce8*/ MLA         R3, IP, R3, R2 
    /*00022cec*/ LDR         R3, [R3, R1] 
    /*00022cf0*/ CMP         R3, #0 
    /*00022cf4*/ MOVW        R3, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00022cf8*/ MOVT        R3, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00022cfc*/ BEQ         VI_DIS_WaitConditionCallBack_x22d18
    /*00022d00*/ MOV         R2, #176                    @ 0xb0 
    /*00022d04*/ MLA         R2, R2, R0, R3 
    /*00022d08*/ LDR         R2, [R2, #8] 
    /*00022d0c*/ CMP         R2, #0 
    /*00022d10*/ MOVNE       R0, #0 
    /*00022d14*/ BNE         VI_DIS_WaitConditionCallBack_x22d30
    VI_DIS_WaitConditionCallBack_x22d18:
    /*00022d18*/ MOV         R2, #176                    @ 0xb0 
    /*00022d1c*/ MLA         R0, R2, R0, R3 
    /*00022d20*/ ADD         R0, R0, #160                @ 0xa0 
    /*00022d24*/ BL          0x0000000000022D24          @ osal_atomic_read [R_ARM_CALL: +0x0] 
    /*00022d28*/ CLZ         R0, R0 
    /*00022d2c*/ LSR         R0, R0, #5 
    VI_DIS_WaitConditionCallBack_x22d30:
    /*00022d30*/ ADD         SP, SP, #8 
    /*00022d34*/ POP         {R4, PC} 
    VI_DIS_WaitConditionCallBack_x22d38:
    /*00022d38*/ MOV         R3, #229                    @ 0xe5 
    /*00022d3c*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9e58] 
    /*00022d40*/ STR         R3, [SP] 
    /*00022d44*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9e58] 
    /*00022d48*/ LDR         R3, [PC, #16]               @ 0x0000000000022d60 
    /*00022d4c*/ MOV         R1, #16 
    /*00022d50*/ MOV         R0, #3 
    /*00022d54*/ BL          0x0000000000022D54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00022d58*/ MOV         R0, R4 
    /*00022d5c*/ B           VI_DIS_WaitConditionCallBack_x22d30
    /*00022d60*/ STRDEQ      R1, [R0], -R8 
FUNC_END VI_DIS_WaitConditionCallBack


FUNC_BEGIN VI_UpdateChnDisAttr
    /*00022d64*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00022d68*/ MOV         R2, #468                    @ 0x1d4 
    /*00022d6c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00022d70*/ MUL         IP, R2, R1 
    /*00022d74*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00022d78*/ LDR         R3, [R3, R0, LSL #2] 
    /*00022d7c*/ ADD         R4, R3, #36864              @ 0x9000 
    /*00022d80*/ ADD         R4, R4, IP 
    /*00022d84*/ LDR         R7, [R4, #2012]             @ 0x7dc 
    /*00022d88*/ CMP         R7, #1 
    /*00022d8c*/ BEQ         VI_UpdateChnDisAttr_x22d98
    /*00022d90*/ MOV         R0, #0 
    /*00022d94*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_UpdateChnDisAttr_x22d98:
    /*00022d98*/ MOV         R6, R1 
    /*00022d9c*/ ADD         R1, R3, #38144              @ 0x9500 
    /*00022da0*/ ADD         R3, R3, #38912              @ 0x9800 
    /*00022da4*/ ADD         IP, IP, #76                 @ 0x4c 
    /*00022da8*/ ADD         R3, R3, #176                @ 0xb0 
    /*00022dac*/ ADD         R1, R1, #200                @ 0xc8 
    /*00022db0*/ ADD         R1, R1, IP 
    /*00022db4*/ MOV         R5, R0 
    /*00022db8*/ ADD         R0, R3, IP 
    /*00022dbc*/ BL          0x0000000000022DBC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00022dc0*/ MOV         R3, #0 
    /*00022dc4*/ MOV         R2, R7 
    /*00022dc8*/ MOV         R1, R6 
    /*00022dcc*/ MOV         R0, R5 
    /*00022dd0*/ STR         R3, [R4, #2012]             @ 0x7dc 
    /*00022dd4*/ BL          0x0000000000022DD4          @ VI_DRV_SetGdcCfgUpdateFlag [R_ARM_CALL: .text+0x2aa8c] 
    /*00022dd8*/ MOV         R0, #0 
    /*00022ddc*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_UpdateChnDisAttr


FUNC_BEGIN Vi_GetDISAttr
    /*00022de0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00022de4*/ SUB         SP, SP, #8 
    /*00022de8*/ MOV         R5, R1 
    /*00022dec*/ MOV         R6, R2 
    /*00022df0*/ MOV         R7, R0 
    /*00022df4*/ BL          0x0000000000022DF4          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00022df8*/ SUBS        R4, R0, #0 
    /*00022dfc*/ BEQ         Vi_GetDISAttr_x22e0c
    Vi_GetDISAttr_x22e00:
    /*00022e00*/ MOV         R0, R4 
    /*00022e04*/ ADD         SP, SP, #8 
    /*00022e08*/ POP         {R4, R5, R6, R7, R8, PC} 
    Vi_GetDISAttr_x22e0c:
    /*00022e0c*/ MOV         R0, R5 
    /*00022e10*/ BL          0x0000000000022E10          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*00022e14*/ SUBS        R4, R0, #0 
    /*00022e18*/ BNE         Vi_GetDISAttr_x22e00
    /*00022e1c*/ MOV         R0, R6 
    /*00022e20*/ BL          0x0000000000022E20          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*00022e24*/ SUBS        R4, R0, #0 
    /*00022e28*/ BNE         Vi_GetDISAttr_x22e00
    /*00022e2c*/ MOV         R0, R5 
    /*00022e30*/ BL          0x0000000000022E30          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*00022e34*/ CMP         R0, #0 
    /*00022e38*/ BNE         Vi_GetDISAttr_x22ea0
    /*00022e3c*/ LDR         R3, [PC, #244]              @ 0x0000000000022f38 
    /*00022e40*/ MOV         R8, #176                    @ 0xb0 
    /*00022e44*/ MLA         R8, R8, R7, R3 
    /*00022e48*/ MOV         R0, R8 
    /*00022e4c*/ BL          0x0000000000022E4C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00022e50*/ CMP         R0, #0 
    /*00022e54*/ BNE         Vi_GetDISAttr_x22ed0
    /*00022e58*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00022e5c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00022e60*/ LDR         R1, [R3, R7, LSL #2] 
    /*00022e64*/ CMP         R1, #0 
    /*00022e68*/ BEQ         Vi_GetDISAttr_x22f14
    /*00022e6c*/ LDR         R3, [R1] 
    /*00022e70*/ CMP         R3, #2 
    /*00022e74*/ BEQ         Vi_GetDISAttr_x22edc
    /*00022e78*/ MOV         R3, #468                    @ 0x1d4 
    /*00022e7c*/ MOV         R0, R6 
    /*00022e80*/ MLA         R1, R3, R5, R1 
    /*00022e84*/ MOV         R2, #36                     @ 0x24 
    /*00022e88*/ ADD         R1, R1, #38656              @ 0x9700 
    /*00022e8c*/ ADD         R1, R1, #172                @ 0xac 
    /*00022e90*/ BL          0x0000000000022E90          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00022e94*/ MOV         R0, R8 
    /*00022e98*/ BL          0x0000000000022E98          @ osal_up [R_ARM_CALL: +0x0] 
    /*00022e9c*/ B           Vi_GetDISAttr_x22e00
    Vi_GetDISAttr_x22ea0:
    /*00022ea0*/ MOV         R3, #189                    @ 0xbd 
    /*00022ea4*/ STR         R5, [SP, #4] 
    /*00022ea8*/ STR         R3, [SP] 
    /*00022eac*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9e88] 
    /*00022eb0*/ LDR         R3, [PC, #132]              @ 0x0000000000022f3c 
    /*00022eb4*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9e88] 
    /*00022eb8*/ MOV         R1, #16 
    /*00022ebc*/ MOV         R0, #3 
    /*00022ec0*/ MOVW        R4, #32776                  @ 0x8008 
    /*00022ec4*/ BL          0x0000000000022EC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00022ec8*/ MOVT        R4, #40976                  @ 0xa010 
    /*00022ecc*/ B           Vi_GetDISAttr_x22e00
    Vi_GetDISAttr_x22ed0:
    /*00022ed0*/ MOV         R4, #65024                  @ 0xfe00 
    /*00022ed4*/ MOVT        R4, #65535                  @ 0xffff 
    /*00022ed8*/ B           Vi_GetDISAttr_x22e00
    Vi_GetDISAttr_x22edc:
    /*00022edc*/ MOV         R0, R8 
    /*00022ee0*/ MOVW        R4, #32776                  @ 0x8008 
    /*00022ee4*/ BL          0x0000000000022EE4          @ osal_up [R_ARM_CALL: +0x0] 
    /*00022ee8*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9eec] 
    /*00022eec*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9eec] 
    /*00022ef0*/ MOV         R3, #204                    @ 0xcc 
    /*00022ef4*/ STR         R7, [SP, #4] 
    /*00022ef8*/ STR         R3, [SP] 
    Vi_GetDISAttr_x22efc:
    /*00022efc*/ LDR         R3, [PC, #56]               @ 0x0000000000022f3c 
    /*00022f00*/ MOV         R1, #16 
    /*00022f04*/ MOV         R0, #3 
    /*00022f08*/ MOVT        R4, #40976                  @ 0xa010 
    /*00022f0c*/ BL          0x0000000000022F0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00022f10*/ B           Vi_GetDISAttr_x22e00
    Vi_GetDISAttr_x22f14:
    /*00022f14*/ MOV         R0, R8 
    /*00022f18*/ MOVW        R4, #32773                  @ 0x8005 
    /*00022f1c*/ BL          0x0000000000022F1C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00022f20*/ MOV         R3, #197                    @ 0xc5 
    /*00022f24*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9ebc] 
    /*00022f28*/ STR         R7, [SP, #4] 
    /*00022f2c*/ STR         R3, [SP] 
    /*00022f30*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9ebc] 
    /*00022f34*/ B           Vi_GetDISAttr_x22efc
    /*00022f38*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00022f3c*/ ANDEQ       R1, R0, R8, LSL R6 
FUNC_END Vi_GetDISAttr


FUNC_BEGIN VI_IsDisExist
    /*00022f40*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00022f44*/ MOV         R0, #17 
    /*00022f48*/ SUB         SP, SP, #12 
    /*00022f4c*/ BL          0x0000000000022F4C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00022f50*/ CMP         R0, #0 
    /*00022f54*/ BEQ         VI_IsDisExist_x22fa4
    /*00022f58*/ LDR         R3, [R0, #4] 
    /*00022f5c*/ CMP         R3, #0 
    /*00022f60*/ BEQ         VI_IsDisExist_x22fa4
    /*00022f64*/ LDR         R3, [R0] 
    /*00022f68*/ CMP         R3, #0 
    /*00022f6c*/ BEQ         VI_IsDisExist_x22fa4
    /*00022f70*/ LDR         R3, [R0, #8] 
    /*00022f74*/ CMP         R3, #0 
    /*00022f78*/ BEQ         VI_IsDisExist_x22fa4
    /*00022f7c*/ LDR         R3, [R0, #12] 
    /*00022f80*/ CMP         R3, #0 
    /*00022f84*/ BEQ         VI_IsDisExist_x22fa4
    /*00022f88*/ LDR         R3, [R0, #16] 
    /*00022f8c*/ CMP         R3, #0 
    /*00022f90*/ BEQ         VI_IsDisExist_x22fa4
    /*00022f94*/ LDR         R3, [R0, #20] 
    /*00022f98*/ CMP         R3, #0 
    /*00022f9c*/ MOVNE       R0, #1 
    /*00022fa0*/ BNE         VI_IsDisExist_x22fc8
    VI_IsDisExist_x22fa4:
    /*00022fa4*/ MOVW        R3, #470                    @ 0x1d6 
    /*00022fa8*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9f38] 
    /*00022fac*/ STR         R3, [SP] 
    /*00022fb0*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9f38] 
    /*00022fb4*/ LDR         R3, [PC, #20]               @ 0x0000000000022fd0 
    /*00022fb8*/ MOV         R1, #16 
    /*00022fbc*/ MOV         R0, #7 
    /*00022fc0*/ BL          0x0000000000022FC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00022fc4*/ MOV         R0, #0 
    VI_IsDisExist_x22fc8:
    /*00022fc8*/ ADD         SP, SP, #12 
    /*00022fcc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00022fd0*/ ANDEQ       R1, R0, R8, LSR #12 
FUNC_END VI_IsDisExist


FUNC_BEGIN Vi_CreateDisChn
    /*00022fd4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00022fd8*/ MOV         R6, R0 
    /*00022fdc*/ SUB         SP, SP, #28 
    /*00022fe0*/ MOV         R0, #17 
    /*00022fe4*/ MOV         R8, R1 
    /*00022fe8*/ BL          0x0000000000022FE8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00022fec*/ MOV         R4, #468                    @ 0x1d4 
    /*00022ff0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00022ff4*/ MUL         R5, R4, R8 
    /*00022ff8*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00022ffc*/ MOVW        R9, #38420                  @ 0x9614 
    /*00023000*/ LDR         R4, [R3, R6, LSL #2] 
    /*00023004*/ LDR         R2, [R0, #4] 
    /*00023008*/ MOV         FP, R0 
    /*0002300c*/ ADD         R0, R5, R9 
    /*00023010*/ ADD         R0, R4, R0 
    /*00023014*/ BLX         R2 
    /*00023018*/ SUBS        R7, R0, #0 
    /*0002301c*/ BNE         Vi_CreateDisChn_x2308c
    /*00023020*/ MOV         R0, #848                    @ 0x350 
    /*00023024*/ BL          0x0000000000023024          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00023028*/ SUBS        SL, R0, #0 
    /*0002302c*/ BEQ         Vi_CreateDisChn_x230bc
    /*00023030*/ MOV         R2, #848                    @ 0x350 
    /*00023034*/ MOV         R1, R7 
    /*00023038*/ BL          0x0000000000023038          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0002303c*/ LDR         R3, [PC, #184]              @ 0x00000000000230fc 
    /*00023040*/ MOV         R2, #176                    @ 0xb0 
    /*00023044*/ ADD         R4, R4, R5 
    /*00023048*/ ADD         R1, SP, #20 
    /*0002304c*/ MLA         R6, R2, R6, R3 
    /*00023050*/ MOV         R0, R6 
    /*00023054*/ BL          0x0000000000023054          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00023058*/ MOVW        R3, #38880                  @ 0x97e0 
    /*0002305c*/ MOVW        IP, #38432                  @ 0x9620 
    /*00023060*/ MOVW        R2, #38876                  @ 0x97dc 
    /*00023064*/ STR         SL, [R4, R3] 
    /*00023068*/ MOV         R0, R6 
    /*0002306c*/ MOV         R3, #1 
    /*00023070*/ ADD         R1, SP, #20 
    /*00023074*/ STR         R3, [R4, IP] 
    /*00023078*/ STR         R3, [R4, R2] 
    /*0002307c*/ BL          0x000000000002307C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    Vi_CreateDisChn_x23080:
    /*00023080*/ MOV         R0, R7 
    /*00023084*/ ADD         SP, SP, #28 
    /*00023088*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Vi_CreateDisChn_x2308c:
    /*0002308c*/ STR         R7, [SP, #4] 
    /*00023090*/ MOV         R3, #496                    @ 0x1f0 
    /*00023094*/ MOV         R1, #16 
    /*00023098*/ STR         R3, [SP] 
    /*0002309c*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9fa0] 
    /*000230a0*/ LDR         R3, [PC, #88]               @ 0x0000000000023100 
    /*000230a4*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9fa0] 
    /*000230a8*/ MOV         R0, #3 
    /*000230ac*/ BL          0x00000000000230AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000230b0*/ MOV         R0, R7 
    /*000230b4*/ ADD         SP, SP, #28 
    /*000230b8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Vi_CreateDisChn_x230bc:
    /*000230bc*/ ADD         R4, R4, R5 
    /*000230c0*/ LDR         R3, [FP, #8] 
    /*000230c4*/ MOVW        R7, #32780                  @ 0x800c 
    /*000230c8*/ MOVT        R7, #40976                  @ 0xa010 
    /*000230cc*/ LDR         R0, [R4, R9] 
    /*000230d0*/ BLX         R3 
    /*000230d4*/ MOV         R3, #504                    @ 0x1f8 
    /*000230d8*/ STMIB       SP, {R6, R8} 
    /*000230dc*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9fd8] 
    /*000230e0*/ STR         R3, [SP] 
    /*000230e4*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9fd8] 
    /*000230e8*/ LDR         R3, [PC, #16]               @ 0x0000000000023100 
    /*000230ec*/ MOV         R1, #16 
    /*000230f0*/ MOV         R0, #3 
    /*000230f4*/ BL          0x00000000000230F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000230f8*/ B           Vi_CreateDisChn_x23080
    /*000230fc*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00023100*/ ANDEQ       R1, R0, R8, LSR R6 
FUNC_END Vi_CreateDisChn


FUNC_BEGIN VI_DIS_CheckDisConfig
    /*00023104*/ PUSH        {R4, LR} 
    /*00023108*/ SUB         SP, SP, #16 
    /*0002310c*/ MOV         R4, R0 
    /*00023110*/ BL          0x0000000000023110          @ VI_DRV_DISCheckConfig [R_ARM_CALL: .text+0x338c0] 
    /*00023114*/ CMP         R0, #0 
    /*00023118*/ BNE         VI_DIS_CheckDisConfig_x231c4
    /*0002311c*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00023120*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00023124*/ LDR         R3, [R3] 
    /*00023128*/ LDRB        R2, [R3, #40]               @ 0x28 
    /*0002312c*/ CMP         R2, #12 
    /*00023130*/ BHI         VI_DIS_CheckDisConfig_x231cc
    /*00023134*/ MOVW        R3, #4609                   @ 0x1201 
    /*00023138*/ MVN         R3, R3, LSR R2 
    /*0002313c*/ TST         R3, #1 
    /*00023140*/ BNE         VI_DIS_CheckDisConfig_x231cc
    /*00023144*/ LDR         R3, [R4] 
    /*00023148*/ CMP         R3, #2 
    /*0002314c*/ BHI         VI_DIS_CheckDisConfig_x2332c
    VI_DIS_CheckDisConfig_x23150:
    /*00023150*/ LDR         R3, [R4, #8] 
    /*00023154*/ CMP         R3, #2 
    /*00023158*/ BHI         VI_DIS_CheckDisConfig_x23238
    /*0002315c*/ LDR         R3, [R4, #12] 
    /*00023160*/ SUB         R2, R3, #5 
    /*00023164*/ CMP         R2, #5 
    /*00023168*/ BHI         VI_DIS_CheckDisConfig_x23250
    /*0002316c*/ LDR         R3, [R4, #20] 
    /*00023170*/ SUB         R2, R3, #1 
    /*00023174*/ CMP         R2, #59                     @ 0x3b 
    /*00023178*/ BHI         VI_DIS_CheckDisConfig_x23290
    /*0002317c*/ LDR         R3, [R4, #16] 
    /*00023180*/ SUB         R2, R3, #50                 @ 0x32 
    /*00023184*/ CMP         R2, #48                     @ 0x30 
    /*00023188*/ BHI         VI_DIS_CheckDisConfig_x232b8
    /*0002318c*/ LDR         R2, [R4, #24] 
    /*00023190*/ MOV         R3, #3392                   @ 0xd40 
    /*00023194*/ MOVT        R3, #3 
    /*00023198*/ CMP         R2, R3 
    /*0002319c*/ BHI         VI_DIS_CheckDisConfig_x232e0
    /*000231a0*/ LDR         R3, [R4, #28] 
    /*000231a4*/ CMP         R3, #32 
    /*000231a8*/ BHI         VI_DIS_CheckDisConfig_x23304
    /*000231ac*/ LDR         R3, [R4, #32] 
    /*000231b0*/ CMP         R3, #1 
    /*000231b4*/ BHI         VI_DIS_CheckDisConfig_x23220
    /*000231b8*/ LDR         R3, [R4, #36]               @ 0x24 
    /*000231bc*/ CMP         R3, #1 
    /*000231c0*/ BHI         VI_DIS_CheckDisConfig_x231f0
    VI_DIS_CheckDisConfig_x231c4:
    /*000231c4*/ ADD         SP, SP, #16 
    /*000231c8*/ POP         {R4, PC} 
    VI_DIS_CheckDisConfig_x231cc:
    /*000231cc*/ LDR         R3, [R4] 
    /*000231d0*/ CMP         R3, #1 
    /*000231d4*/ BLS         VI_DIS_CheckDisConfig_x23150
    /*000231d8*/ STR         R3, [SP, #4] 
    /*000231dc*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa018] 
    /*000231e0*/ MOV         R3, #540                    @ 0x21c 
    /*000231e4*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa018] 
    /*000231e8*/ STR         R3, [SP] 
    /*000231ec*/ B           VI_DIS_CheckDisConfig_x23204
    VI_DIS_CheckDisConfig_x231f0:
    /*000231f0*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa1e4] 
    /*000231f4*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa1e4] 
    /*000231f8*/ STR         R3, [SP, #4] 
    /*000231fc*/ MOVW        R3, #594                    @ 0x252 
    /*00023200*/ STR         R3, [SP] 
    VI_DIS_CheckDisConfig_x23204:
    /*00023204*/ LDR         R3, [PC, #312]              @ 0x0000000000023344 
    /*00023208*/ MOV         R1, #16 
    /*0002320c*/ MOV         R0, #3 
    /*00023210*/ BL          0x0000000000023210          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023214*/ MOVW        R0, #32771                  @ 0x8003 
    /*00023218*/ MOVT        R0, #40976                  @ 0xa010 
    /*0002321c*/ B           VI_DIS_CheckDisConfig_x231c4
    VI_DIS_CheckDisConfig_x23220:
    /*00023220*/ STR         R3, [SP, #4] 
    /*00023224*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa1ac] 
    /*00023228*/ MOV         R3, #588                    @ 0x24c 
    /*0002322c*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa1ac] 
    /*00023230*/ STR         R3, [SP] 
    /*00023234*/ B           VI_DIS_CheckDisConfig_x23204
    VI_DIS_CheckDisConfig_x23238:
    /*00023238*/ STR         R3, [SP, #4] 
    /*0002323c*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa048] 
    /*00023240*/ MOVW        R3, #547                    @ 0x223 
    /*00023244*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa048] 
    /*00023248*/ STR         R3, [SP] 
    /*0002324c*/ B           VI_DIS_CheckDisConfig_x23204
    VI_DIS_CheckDisConfig_x23250:
    /*00023250*/ MOV         R2, #10 
    /*00023254*/ STR         R2, [SP, #12] 
    /*00023258*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa07c] 
    /*0002325c*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa07c] 
    /*00023260*/ STR         R3, [SP, #4] 
    /*00023264*/ MOV         R3, #5 
    /*00023268*/ STR         R3, [SP, #8] 
    /*0002326c*/ MOVW        R3, #554                    @ 0x22a 
    /*00023270*/ STR         R3, [SP] 
    VI_DIS_CheckDisConfig_x23274:
    /*00023274*/ LDR         R3, [PC, #200]              @ 0x0000000000023344 
    /*00023278*/ MOV         R1, #16 
    /*0002327c*/ MOV         R0, #3 
    /*00023280*/ BL          0x0000000000023280          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023284*/ MOVW        R0, #32771                  @ 0x8003 
    /*00023288*/ MOVT        R0, #40976                  @ 0xa010 
    /*0002328c*/ B           VI_DIS_CheckDisConfig_x231c4
    VI_DIS_CheckDisConfig_x23290:
    /*00023290*/ MOV         R2, #60                     @ 0x3c 
    /*00023294*/ STR         R3, [SP, #4] 
    /*00023298*/ STR         R2, [SP, #12] 
    /*0002329c*/ MOV         R3, #0 
    /*000232a0*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa0b4] 
    /*000232a4*/ STR         R3, [SP, #8] 
    /*000232a8*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa0b4] 
    /*000232ac*/ MOVW        R3, #561                    @ 0x231 
    /*000232b0*/ STR         R3, [SP] 
    /*000232b4*/ B           VI_DIS_CheckDisConfig_x23274
    VI_DIS_CheckDisConfig_x232b8:
    /*000232b8*/ MOV         R2, #98                     @ 0x62 
    /*000232bc*/ STR         R3, [SP, #4] 
    /*000232c0*/ STR         R2, [SP, #12] 
    /*000232c4*/ MOV         R3, #50                     @ 0x32 
    /*000232c8*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa0f0] 
    /*000232cc*/ STR         R3, [SP, #8] 
    /*000232d0*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa0f0] 
    /*000232d4*/ MOV         R3, #568                    @ 0x238 
    /*000232d8*/ STR         R3, [SP] 
    /*000232dc*/ B           VI_DIS_CheckDisConfig_x23274
    VI_DIS_CheckDisConfig_x232e0:
    /*000232e0*/ STR         R3, [SP, #12] 
    /*000232e4*/ MOV         R1, #0 
    /*000232e8*/ STR         R2, [SP, #4] 
    /*000232ec*/ MOVW        R3, #575                    @ 0x23f 
    /*000232f0*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa12c] 
    /*000232f4*/ STR         R1, [SP, #8] 
    /*000232f8*/ STR         R3, [SP] 
    /*000232fc*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa12c] 
    /*00023300*/ B           VI_DIS_CheckDisConfig_x23274
    VI_DIS_CheckDisConfig_x23304:
    /*00023304*/ MOV         R2, #32 
    /*00023308*/ STR         R3, [SP, #4] 
    /*0002330c*/ STR         R2, [SP, #12] 
    /*00023310*/ MOV         R3, #0 
    /*00023314*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa16c] 
    /*00023318*/ STR         R3, [SP, #8] 
    /*0002331c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa16c] 
    /*00023320*/ MOVW        R3, #582                    @ 0x246 
    /*00023324*/ STR         R3, [SP] 
    /*00023328*/ B           VI_DIS_CheckDisConfig_x23274
    VI_DIS_CheckDisConfig_x2332c:
    /*0002332c*/ STR         R3, [SP, #4] 
    /*00023330*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa018] 
    /*00023334*/ MOVW        R3, #535                    @ 0x217 
    /*00023338*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa018] 
    /*0002333c*/ STR         R3, [SP] 
    /*00023340*/ B           VI_DIS_CheckDisConfig_x23204
    /*00023344*/ ANDEQ       R1, R0, R8, ASR #12 
FUNC_END VI_DIS_CheckDisConfig


FUNC_BEGIN Vi_SetDISConfig
    /*00023348*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002334c*/ SUB         SP, SP, #20 
    /*00023350*/ MOV         R5, R1 
    /*00023354*/ MOV         R6, R2 
    /*00023358*/ MOV         R7, R0 
    /*0002335c*/ BL          0x000000000002335C          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00023360*/ SUBS        R4, R0, #0 
    /*00023364*/ BEQ         Vi_SetDISConfig_x23374
    Vi_SetDISConfig_x23368:
    /*00023368*/ MOV         R0, R4 
    /*0002336c*/ ADD         SP, SP, #20 
    /*00023370*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Vi_SetDISConfig_x23374:
    /*00023374*/ MOV         R0, R5 
    /*00023378*/ BL          0x0000000000023378          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*0002337c*/ SUBS        R4, R0, #0 
    /*00023380*/ BNE         Vi_SetDISConfig_x23368
    /*00023384*/ MOV         R0, R6 
    /*00023388*/ BL          0x0000000000023388          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0002338c*/ SUBS        R4, R0, #0 
    /*00023390*/ BNE         Vi_SetDISConfig_x23368
    /*00023394*/ MOV         R0, R5 
    /*00023398*/ BL          0x0000000000023398          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*0002339c*/ CMP         R0, #0 
    /*000233a0*/ BNE         Vi_SetDISConfig_x234f0
    /*000233a4*/ LDR         R3, [PC, #476]              @ 0x0000000000023588 
    /*000233a8*/ MOV         R9, #176                    @ 0xb0 
    /*000233ac*/ MLA         R9, R9, R7, R3 
    /*000233b0*/ MOV         R0, R9 
    /*000233b4*/ BL          0x00000000000233B4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000233b8*/ CMP         R0, #0 
    /*000233bc*/ BNE         Vi_SetDISConfig_x23520
    /*000233c0*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000233c4*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000233c8*/ LDR         SL, [R3, R7, LSL #2] 
    /*000233cc*/ CMP         SL, #0 
    /*000233d0*/ BEQ         Vi_SetDISConfig_x23564
    /*000233d4*/ LDR         R3, [SL] 
    /*000233d8*/ CMP         R3, #2 
    /*000233dc*/ BEQ         Vi_SetDISConfig_x2352c
    /*000233e0*/ MOV         R8, #468                    @ 0x1d4 
    /*000233e4*/ MOVW        R3, #38828                  @ 0x97ac 
    /*000233e8*/ MUL         R8, R8, R5 
    /*000233ec*/ ADD         FP, SL, R8 
    /*000233f0*/ LDR         R3, [FP, R3] 
    /*000233f4*/ CMP         R3, #1 
    /*000233f8*/ BEQ         Vi_SetDISConfig_x23464
    /*000233fc*/ MOV         R0, R6 
    /*00023400*/ BL          0x0000000000023400          @ VI_DIS_CheckDisConfig [R_ARM_CALL: .text+0x23104] 
    /*00023404*/ SUBS        R4, R0, #0 
    /*00023408*/ BEQ         Vi_SetDISConfig_x23498
    /*0002340c*/ MOV         R3, #652                    @ 0x28c 
    /*00023410*/ MOV         R1, #16 
    /*00023414*/ STR         R3, [SP] 
    /*00023418*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa27c] 
    /*0002341c*/ LDR         R3, [PC, #360]              @ 0x000000000002358c 
    /*00023420*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa27c] 
    /*00023424*/ STR         R5, [SP, #8] 
    /*00023428*/ MOV         R0, #3 
    /*0002342c*/ STR         R7, [SP, #4] 
    /*00023430*/ BL          0x0000000000023430          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023434*/ MOVW        R1, #32776                  @ 0x8008 
    /*00023438*/ MOVT        R1, #40977                  @ 0xa011 
    /*0002343c*/ MOVW        R2, #32771                  @ 0x8003 
    /*00023440*/ CMP         R4, R1 
    /*00023444*/ MOVT        R2, #40976                  @ 0xa010 
    /*00023448*/ MOVW        R3, #32776                  @ 0x8008 
    /*0002344c*/ MOVT        R3, #40976                  @ 0xa010 
    /*00023450*/ MOVNE       R4, R2 
    /*00023454*/ MOVEQ       R4, R3 
    Vi_SetDISConfig_x23458:
    /*00023458*/ MOV         R0, R9 
    /*0002345c*/ BL          0x000000000002345C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00023460*/ B           Vi_SetDISConfig_x23368
    Vi_SetDISConfig_x23464:
    /*00023464*/ MOVW        R3, #638                    @ 0x27e 
    /*00023468*/ STR         R5, [SP, #8] 
    /*0002346c*/ STR         R3, [SP] 
    /*00023470*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa218] 
    /*00023474*/ STR         R7, [SP, #4] 
    /*00023478*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa218] 
    /*0002347c*/ LDR         R3, [PC, #264]              @ 0x000000000002358c 
    /*00023480*/ MOV         R1, #16 
    /*00023484*/ MOV         R0, #3 
    /*00023488*/ MOVW        R4, #32777                  @ 0x8009 
    /*0002348c*/ BL          0x000000000002348C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023490*/ MOVT        R4, #40976                  @ 0xa010 
    /*00023494*/ B           Vi_SetDISConfig_x23458
    Vi_SetDISConfig_x23498:
    /*00023498*/ ADD         R0, R8, #38400              @ 0x9600 
    /*0002349c*/ MOV         R1, R6 
    /*000234a0*/ ADD         R0, R0, #148                @ 0x94 
    /*000234a4*/ MOV         R2, #40                     @ 0x28 
    /*000234a8*/ ADD         R0, SL, R0 
    /*000234ac*/ BL          0x00000000000234AC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000234b0*/ MOVW        R3, #38556                  @ 0x969c 
    /*000234b4*/ LDR         R3, [FP, R3] 
    /*000234b8*/ CMP         R3, #0 
    /*000234bc*/ MOVNE       R3, #468                    @ 0x1d4 
    /*000234c0*/ MOVWNE      R2, #38580                  @ 0x96b4 
    /*000234c4*/ MLANE       R3, R3, R5, SL 
    /*000234c8*/ MOVNE       R1, #0 
    /*000234cc*/ STRNE       R1, [R3, R2] 
    /*000234d0*/ MOV         R3, #468                    @ 0x1d4 
    /*000234d4*/ MLA         R5, R3, R5, SL 
    /*000234d8*/ MOVW        R1, #38424                  @ 0x9618 
    /*000234dc*/ MOVW        R2, #38876                  @ 0x97dc 
    /*000234e0*/ MOV         R3, #1 
    /*000234e4*/ STR         R3, [R5, R1] 
    /*000234e8*/ STR         R3, [R5, R2] 
    /*000234ec*/ B           Vi_SetDISConfig_x23458
    Vi_SetDISConfig_x234f0:
    /*000234f0*/ MOVW        R3, #614                    @ 0x266 
    /*000234f4*/ STR         R5, [SP, #4] 
    /*000234f8*/ STR         R3, [SP] 
    /*000234fc*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9e88] 
    /*00023500*/ LDR         R3, [PC, #132]              @ 0x000000000002358c 
    /*00023504*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9e88] 
    /*00023508*/ MOV         R1, #16 
    /*0002350c*/ MOV         R0, #3 
    /*00023510*/ MOVW        R4, #32776                  @ 0x8008 
    /*00023514*/ BL          0x0000000000023514          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023518*/ MOVT        R4, #40976                  @ 0xa010 
    /*0002351c*/ B           Vi_SetDISConfig_x23368
    Vi_SetDISConfig_x23520:
    /*00023520*/ MOV         R4, #65024                  @ 0xfe00 
    /*00023524*/ MOVT        R4, #65535                  @ 0xffff 
    /*00023528*/ B           Vi_SetDISConfig_x23368
    Vi_SetDISConfig_x2352c:
    /*0002352c*/ MOV         R0, R9 
    /*00023530*/ MOVW        R4, #32776                  @ 0x8008 
    /*00023534*/ BL          0x0000000000023534          @ osal_up [R_ARM_CALL: +0x0] 
    /*00023538*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9eec] 
    /*0002353c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9eec] 
    /*00023540*/ MOVW        R3, #629                    @ 0x275 
    /*00023544*/ STR         R7, [SP, #4] 
    /*00023548*/ STR         R3, [SP] 
    Vi_SetDISConfig_x2354c:
    /*0002354c*/ LDR         R3, [PC, #56]               @ 0x000000000002358c 
    /*00023550*/ MOV         R1, #16 
    /*00023554*/ MOV         R0, #3 
    /*00023558*/ MOVT        R4, #40976                  @ 0xa010 
    /*0002355c*/ BL          0x000000000002355C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023560*/ B           Vi_SetDISConfig_x23368
    Vi_SetDISConfig_x23564:
    /*00023564*/ MOV         R0, R9 
    /*00023568*/ MOVW        R4, #32773                  @ 0x8005 
    /*0002356c*/ BL          0x000000000002356C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00023570*/ MOVW        R3, #622                    @ 0x26e 
    /*00023574*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9ebc] 
    /*00023578*/ STR         R7, [SP, #4] 
    /*0002357c*/ STR         R3, [SP] 
    /*00023580*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9ebc] 
    /*00023584*/ B           Vi_SetDISConfig_x2354c
    /*00023588*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*0002358c*/ ANDEQ       R1, R0, R0, ROR #12 
FUNC_END Vi_SetDISConfig


FUNC_BEGIN Vi_GetDISConfig
    /*00023590*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00023594*/ SUB         SP, SP, #8 
    /*00023598*/ MOV         R5, R1 
    /*0002359c*/ MOV         R6, R2 
    /*000235a0*/ MOV         R7, R0 
    /*000235a4*/ BL          0x00000000000235A4          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*000235a8*/ SUBS        R4, R0, #0 
    /*000235ac*/ BEQ         Vi_GetDISConfig_x235bc
    Vi_GetDISConfig_x235b0:
    /*000235b0*/ MOV         R0, R4 
    /*000235b4*/ ADD         SP, SP, #8 
    /*000235b8*/ POP         {R4, R5, R6, R7, R8, PC} 
    Vi_GetDISConfig_x235bc:
    /*000235bc*/ MOV         R0, R5 
    /*000235c0*/ BL          0x00000000000235C0          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*000235c4*/ SUBS        R4, R0, #0 
    /*000235c8*/ BNE         Vi_GetDISConfig_x235b0
    /*000235cc*/ MOV         R0, R6 
    /*000235d0*/ BL          0x00000000000235D0          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*000235d4*/ SUBS        R4, R0, #0 
    /*000235d8*/ BNE         Vi_GetDISConfig_x235b0
    /*000235dc*/ MOV         R0, R5 
    /*000235e0*/ BL          0x00000000000235E0          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*000235e4*/ CMP         R0, #0 
    /*000235e8*/ BNE         Vi_GetDISConfig_x23650
    /*000235ec*/ LDR         R3, [PC, #244]              @ 0x00000000000236e8 
    /*000235f0*/ MOV         R8, #176                    @ 0xb0 
    /*000235f4*/ MLA         R8, R8, R7, R3 
    /*000235f8*/ MOV         R0, R8 
    /*000235fc*/ BL          0x00000000000235FC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00023600*/ CMP         R0, #0 
    /*00023604*/ BNE         Vi_GetDISConfig_x23680
    /*00023608*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*0002360c*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00023610*/ LDR         R1, [R3, R7, LSL #2] 
    /*00023614*/ CMP         R1, #0 
    /*00023618*/ BEQ         Vi_GetDISConfig_x236c4
    /*0002361c*/ LDR         R3, [R1] 
    /*00023620*/ CMP         R3, #2 
    /*00023624*/ BEQ         Vi_GetDISConfig_x2368c
    /*00023628*/ MOV         R3, #468                    @ 0x1d4 
    /*0002362c*/ MOV         R0, R6 
    /*00023630*/ MLA         R1, R3, R5, R1 
    /*00023634*/ MOV         R2, #40                     @ 0x28 
    /*00023638*/ ADD         R1, R1, #38400              @ 0x9600 
    /*0002363c*/ ADD         R1, R1, #148                @ 0x94 
    /*00023640*/ BL          0x0000000000023640          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00023644*/ MOV         R0, R8 
    /*00023648*/ BL          0x0000000000023648          @ osal_up [R_ARM_CALL: +0x0] 
    /*0002364c*/ B           Vi_GetDISConfig_x235b0
    Vi_GetDISConfig_x23650:
    /*00023650*/ MOVW        R3, #689                    @ 0x2b1 
    /*00023654*/ STR         R5, [SP, #4] 
    /*00023658*/ STR         R3, [SP] 
    /*0002365c*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9e88] 
    /*00023660*/ LDR         R3, [PC, #132]              @ 0x00000000000236ec 
    /*00023664*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9e88] 
    /*00023668*/ MOV         R1, #16 
    /*0002366c*/ MOV         R0, #3 
    /*00023670*/ MOVW        R4, #32776                  @ 0x8008 
    /*00023674*/ BL          0x0000000000023674          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023678*/ MOVT        R4, #40976                  @ 0xa010 
    /*0002367c*/ B           Vi_GetDISConfig_x235b0
    Vi_GetDISConfig_x23680:
    /*00023680*/ MOV         R4, #65024                  @ 0xfe00 
    /*00023684*/ MOVT        R4, #65535                  @ 0xffff 
    /*00023688*/ B           Vi_GetDISConfig_x235b0
    Vi_GetDISConfig_x2368c:
    /*0002368c*/ MOV         R0, R8 
    /*00023690*/ MOVW        R4, #32776                  @ 0x8008 
    /*00023694*/ BL          0x0000000000023694          @ osal_up [R_ARM_CALL: +0x0] 
    /*00023698*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9eec] 
    /*0002369c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9eec] 
    /*000236a0*/ MOV         R3, #704                    @ 0x2c0 
    /*000236a4*/ STR         R7, [SP, #4] 
    /*000236a8*/ STR         R3, [SP] 
    Vi_GetDISConfig_x236ac:
    /*000236ac*/ LDR         R3, [PC, #56]               @ 0x00000000000236ec 
    /*000236b0*/ MOV         R1, #16 
    /*000236b4*/ MOV         R0, #3 
    /*000236b8*/ MOVT        R4, #40976                  @ 0xa010 
    /*000236bc*/ BL          0x00000000000236BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000236c0*/ B           Vi_GetDISConfig_x235b0
    Vi_GetDISConfig_x236c4:
    /*000236c4*/ MOV         R0, R8 
    /*000236c8*/ MOVW        R4, #32773                  @ 0x8005 
    /*000236cc*/ BL          0x00000000000236CC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000236d0*/ MOVW        R3, #697                    @ 0x2b9 
    /*000236d4*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9ebc] 
    /*000236d8*/ STR         R7, [SP, #4] 
    /*000236dc*/ STR         R3, [SP] 
    /*000236e0*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9ebc] 
    /*000236e4*/ B           Vi_GetDISConfig_x236ac
    /*000236e8*/ ANDEQ       R0, R0, R4, RRX             @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*000236ec*/ ANDEQ       R1, R0, R0, ROR R6 
FUNC_END Vi_GetDISConfig


FUNC_BEGIN Vi_DISGetCurPTS
    /*000236f0*/ PUSH        {R4, LR} 
    /*000236f4*/ MOV         R0, #2 
    /*000236f8*/ BL          0x00000000000236F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000236fc*/ LDR         R3, [R0, #88]               @ 0x58 
    /*00023700*/ BLX         R3 
    /*00023704*/ MOV         R2, #1000                   @ 0x3e8 
    /*00023708*/ MOV         R3, #0 
    /*0002370c*/ POP         {R4, LR} 
    Vi_DISGetCurPTS_x23710:
    /*00023710*/ B           Vi_DISGetCurPTS_x23710      @ osal_div64_u64 [R_ARM_JUMP24: +0x0] 
FUNC_END Vi_DISGetCurPTS


FUNC_BEGIN Vi_CheckDISAttr
    /*00023714*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00023718*/ SUB         SP, SP, #20 
    /*0002371c*/ LDR         R3, [R0, #8] 
    /*00023720*/ CMP         R3, #6 
    /*00023724*/ BHI         Vi_CheckDISAttr_x237fc
    /*00023728*/ LDR         R3, [R0, #12] 
    /*0002372c*/ CMP         R3, #1000                   @ 0x3e8 
    /*00023730*/ BHI         Vi_CheckDISAttr_x2383c
    /*00023734*/ LDR         R1, [R0, #16] 
    /*00023738*/ MOV         R2, #2304                   @ 0x900 
    /*0002373c*/ MOVT        R2, #61                     @ 0x3d 
    /*00023740*/ ADD         R3, R1, #1998848            @ 0x1e8000 
    /*00023744*/ ADD         R3, R3, #1152               @ 0x480 
    /*00023748*/ CMP         R3, R2 
    /*0002374c*/ BHI         Vi_CheckDISAttr_x23864
    /*00023750*/ LDR         R3, [R0, #24] 
    /*00023754*/ CMP         R3, #1000                   @ 0x3e8 
    /*00023758*/ BHI         Vi_CheckDISAttr_x23894
    /*0002375c*/ LDR         R3, [R0, #28] 
    /*00023760*/ CMP         R3, #1000                   @ 0x3e8 
    /*00023764*/ BHI         Vi_CheckDISAttr_x238bc
    /*00023768*/ LDR         R3, [R0, #32] 
    /*0002376c*/ CMP         R3, #1 
    /*00023770*/ BHI         Vi_CheckDISAttr_x23798
    /*00023774*/ LDR         R3, [R0] 
    /*00023778*/ CMP         R3, #1 
    /*0002377c*/ BHI         Vi_CheckDISAttr_x237cc
    /*00023780*/ LDR         R3, [R0, #4] 
    /*00023784*/ CMP         R3, #1 
    /*00023788*/ MOVLS       R0, #0 
    /*0002378c*/ BHI         Vi_CheckDISAttr_x237e4
    Vi_CheckDISAttr_x23790:
    /*00023790*/ ADD         SP, SP, #20 
    /*00023794*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    Vi_CheckDISAttr_x23798:
    /*00023798*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa4d4] 
    /*0002379c*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa4d4] 
    /*000237a0*/ STR         R3, [SP, #4] 
    /*000237a4*/ MOVW        R3, #774                    @ 0x306 
    /*000237a8*/ STR         R3, [SP] 
    Vi_CheckDISAttr_x237ac:
    /*000237ac*/ LDR         R3, [PC, #304]              @ 0x00000000000238e4 
    /*000237b0*/ MOV         R1, #16 
    /*000237b4*/ MOV         R0, #3 
    /*000237b8*/ BL          0x00000000000237B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000237bc*/ MOVW        R0, #32771                  @ 0x8003 
    /*000237c0*/ MOVT        R0, #40976                  @ 0xa010 
    /*000237c4*/ ADD         SP, SP, #20 
    /*000237c8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    Vi_CheckDISAttr_x237cc:
    /*000237cc*/ STR         R3, [SP, #4] 
    /*000237d0*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa530] 
    /*000237d4*/ MOV         R3, #780                    @ 0x30c 
    /*000237d8*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa530] 
    /*000237dc*/ STR         R3, [SP] 
    /*000237e0*/ B           Vi_CheckDISAttr_x237ac
    Vi_CheckDISAttr_x237e4:
    /*000237e4*/ STR         R3, [SP, #4] 
    /*000237e8*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa588] 
    /*000237ec*/ MOVW        R3, #786                    @ 0x312 
    /*000237f0*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa588] 
    /*000237f4*/ STR         R3, [SP] 
    /*000237f8*/ B           Vi_CheckDISAttr_x237ac
    Vi_CheckDISAttr_x237fc:
    /*000237fc*/ MOV         R2, #6 
    /*00023800*/ STR         R2, [SP, #12] 
    /*00023804*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa2bc] 
    /*00023808*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa2bc] 
    /*0002380c*/ STR         R3, [SP, #4] 
    /*00023810*/ MOV         R3, #0 
    /*00023814*/ STR         R3, [SP, #8] 
    /*00023818*/ MOVW        R3, #731                    @ 0x2db 
    /*0002381c*/ STR         R3, [SP] 
    Vi_CheckDISAttr_x23820:
    /*00023820*/ LDR         R3, [PC, #188]              @ 0x00000000000238e4 
    /*00023824*/ MOV         R1, #16 
    /*00023828*/ MOV         R0, #3 
    /*0002382c*/ BL          0x000000000002382C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023830*/ MOVW        R0, #32771                  @ 0x8003 
    /*00023834*/ MOVT        R0, #40976                  @ 0xa010 
    /*00023838*/ B           Vi_CheckDISAttr_x23790
    Vi_CheckDISAttr_x2383c:
    /*0002383c*/ MOV         R2, #1000                   @ 0x3e8 
    /*00023840*/ STR         R3, [SP, #4] 
    /*00023844*/ STR         R2, [SP, #12] 
    /*00023848*/ MOV         R3, #0 
    /*0002384c*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa330] 
    /*00023850*/ STR         R3, [SP, #8] 
    /*00023854*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa330] 
    /*00023858*/ MOVW        R3, #739                    @ 0x2e3 
    /*0002385c*/ STR         R3, [SP] 
    /*00023860*/ B           Vi_CheckDISAttr_x23820
    Vi_CheckDISAttr_x23864:
    /*00023864*/ MOVW        R2, #33920                  @ 0x8480 
    /*00023868*/ MOVW        R3, #31616                  @ 0x7b80 
    /*0002386c*/ MOVT        R2, #30 
    /*00023870*/ MOVT        R3, #65505                  @ 0xffe1 
    /*00023874*/ STR         R2, [SP, #12] 
    /*00023878*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa3a4] 
    /*0002387c*/ STR         R3, [SP, #8] 
    /*00023880*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa3a4] 
    /*00023884*/ MOVW        R3, #747                    @ 0x2eb 
    /*00023888*/ STR         R1, [SP, #4] 
    /*0002388c*/ STR         R3, [SP] 
    /*00023890*/ B           Vi_CheckDISAttr_x23820
    Vi_CheckDISAttr_x23894:
    /*00023894*/ MOV         R2, #1000                   @ 0x3e8 
    /*00023898*/ STR         R3, [SP, #4] 
    /*0002389c*/ STR         R2, [SP, #12] 
    /*000238a0*/ MOV         R3, #0 
    /*000238a4*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa400] 
    /*000238a8*/ STR         R3, [SP, #8] 
    /*000238ac*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa400] 
    /*000238b0*/ MOVW        R3, #761                    @ 0x2f9 
    /*000238b4*/ STR         R3, [SP] 
    /*000238b8*/ B           Vi_CheckDISAttr_x23820
    Vi_CheckDISAttr_x238bc:
    /*000238bc*/ MOV         R2, #1000                   @ 0x3e8 
    /*000238c0*/ STR         R3, [SP, #4] 
    /*000238c4*/ STR         R2, [SP, #12] 
    /*000238c8*/ MOV         R3, #0 
    /*000238cc*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa46c] 
    /*000238d0*/ STR         R3, [SP, #8] 
    /*000238d4*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa46c] 
    /*000238d8*/ MOV         R3, #768                    @ 0x300 
    /*000238dc*/ STR         R3, [SP] 
    /*000238e0*/ B           Vi_CheckDISAttr_x23820
    /*000238e4*/ ANDEQ       R1, R0, R0, LSL #13 
FUNC_END Vi_CheckDISAttr


FUNC_BEGIN Vi_ReleaseDISBuffer
    /*000238e8*/ MOV         R3, #712                    @ 0x2c8 
    /*000238ec*/ MOVW        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000238f0*/ MUL         R3, R3, R1 
    /*000238f4*/ MOVT        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000238f8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000238fc*/ MOVW        R6, #17028                  @ 0x4284 
    /*00023900*/ LDR         R4, [R2, R0, LSL #2] 
    /*00023904*/ MOV         R5, R1 
    /*00023908*/ ADD         R7, R4, R3 
    /*0002390c*/ LDR         R2, [R7, R6] 
    /*00023910*/ CMP         R2, #0 
    /*00023914*/ BNE         Vi_ReleaseDISBuffer_x23954
    Vi_ReleaseDISBuffer_x23918:
    /*00023918*/ MOV         R1, #712                    @ 0x2c8 
    /*0002391c*/ MOVW        R6, #23436                  @ 0x5b8c 
    /*00023920*/ MUL         R1, R1, R5 
    /*00023924*/ ADD         R5, R4, R1 
    /*00023928*/ LDR         R3, [R5, R6] 
    /*0002392c*/ CMP         R3, #0 
    /*00023930*/ POPEQ       {R4, R5, R6, R7, R8, PC} 
    /*00023934*/ ADD         R0, R1, #23040              @ 0x5a00 
    /*00023938*/ MOV         R1, #0 
    /*0002393c*/ ADD         R0, R0, #24 
    /*00023940*/ ADD         R0, R4, R0 
    /*00023944*/ BL          0x0000000000023944          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00023948*/ MOV         R3, #0 
    /*0002394c*/ STR         R3, [R5, R6] 
    /*00023950*/ POP         {R4, R5, R6, R7, R8, PC} 
    Vi_ReleaseDISBuffer_x23954:
    /*00023954*/ ADD         R0, R3, #16640              @ 0x4100 
    /*00023958*/ MOV         R1, #0 
    /*0002395c*/ ADD         R0, R0, #16 
    /*00023960*/ ADD         R0, R4, R0 
    /*00023964*/ BL          0x0000000000023964          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00023968*/ MOV         R3, #0 
    /*0002396c*/ STR         R3, [R7, R6] 
    /*00023970*/ B           Vi_ReleaseDISBuffer_x23918
FUNC_END Vi_ReleaseDISBuffer


FUNC_BEGIN Vi_DisableDIS
    /*00023974*/ MOVW        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00023978*/ MOVT        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*0002397c*/ PUSH        {R4, R5, LR} 
    /*00023980*/ MOV         R3, #468                    @ 0x1d4 
    /*00023984*/ LDR         R5, [R2, R0, LSL #2] 
    /*00023988*/ MOVW        R2, #38432                  @ 0x9620 
    /*0002398c*/ SUB         SP, SP, #12 
    /*00023990*/ MOV         R4, R1 
    /*00023994*/ MLA         R3, R3, R1, R5 
    /*00023998*/ LDR         R2, [R3, R2] 
    /*0002399c*/ CMP         R2, #0 
    /*000239a0*/ BEQ         Vi_DisableDIS_x239d4
    /*000239a4*/ MOVW        IP, #38828                  @ 0x97ac 
    /*000239a8*/ LDR         R2, [R3, IP] 
    /*000239ac*/ CMP         R2, #1 
    /*000239b0*/ BEQ         Vi_DisableDIS_x23a04
    Vi_DisableDIS_x239b4:
    /*000239b4*/ MOV         R2, #468                    @ 0x1d4 
    /*000239b8*/ MOVW        R3, #38876                  @ 0x97dc 
    /*000239bc*/ MLA         R4, R2, R4, R5 
    /*000239c0*/ MOV         R0, #0 
    /*000239c4*/ MOV         R2, #1 
    /*000239c8*/ STR         R2, [R4, R3] 
    /*000239cc*/ ADD         SP, SP, #12 
    /*000239d0*/ POP         {R4, R5, PC} 
    Vi_DisableDIS_x239d4:
    /*000239d4*/ STR         R1, [SP, #4] 
    /*000239d8*/ MOVW        R3, #885                    @ 0x375 
    /*000239dc*/ MOV         R1, #16 
    /*000239e0*/ STR         R3, [SP] 
    /*000239e4*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa5e4] 
    /*000239e8*/ LDR         R3, [PC, #36]               @ 0x0000000000023a14 
    /*000239ec*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa5e4] 
    /*000239f0*/ MOV         R0, #7 
    /*000239f4*/ BL          0x00000000000239F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000239f8*/ MOV         R0, #0 
    /*000239fc*/ ADD         SP, SP, #12 
    /*00023a00*/ POP         {R4, R5, PC} 
    Vi_DisableDIS_x23a04:
    /*00023a04*/ MOV         R2, #0 
    /*00023a08*/ STR         R2, [R3, IP] 
    /*00023a0c*/ BL          0x0000000000023A0C          @ VI_DRV_SetDISen [R_ARM_CALL: .text+0x33068] 
    /*00023a10*/ B           Vi_DisableDIS_x239b4
    /*00023a14*/ MULEQ       R0, R0, R6 
FUNC_END Vi_DisableDIS


FUNC_BEGIN Vi_destroyDISPool
    /*00023a18*/ LDR         R3, [PC, #208]              @ 0x0000000000023af0 
    /*00023a1c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00023a20*/ MOV         R5, #176                    @ 0xb0 
    /*00023a24*/ MLA         R5, R5, R0, R3 
    /*00023a28*/ SUB         SP, SP, #28 
    /*00023a2c*/ MOV         R4, R0 
    /*00023a30*/ MOV         R6, R1 
    /*00023a34*/ ADD         R1, SP, #20 
    /*00023a38*/ MOV         R0, R5 
    /*00023a3c*/ BL          0x0000000000023A3C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00023a40*/ MOV         R1, R6 
    /*00023a44*/ MOV         R0, R4 
    /*00023a48*/ BL          0x0000000000023A48          @ Vi_ReleaseDISBuffer [R_ARM_CALL: .text+0x238e8] 
    /*00023a4c*/ MOV         R1, R6 
    /*00023a50*/ MOV         R0, R4 
    /*00023a54*/ BL          0x0000000000023A54          @ VI_DRV_GetDISPoolId [R_ARM_CALL: .text+0x33234] 
    /*00023a58*/ CMN         R0, #1 
    /*00023a5c*/ BEQ         Vi_destroyDISPool_x23aa0
    /*00023a60*/ MVN         R2, #0 
    /*00023a64*/ MOV         R7, R0 
    /*00023a68*/ MOV         R1, R6 
    /*00023a6c*/ MOV         R0, R4 
    /*00023a70*/ BL          0x0000000000023A70          @ VI_DRV_SetDISPoolId [R_ARM_CALL: .text+0x33210] 
    /*00023a74*/ ADD         R1, SP, #20 
    /*00023a78*/ MOV         R0, R5 
    /*00023a7c*/ BL          0x0000000000023A7C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00023a80*/ MOV         R1, R7 
    /*00023a84*/ MOV         R0, R4 
    /*00023a88*/ BL          0x0000000000023A88          @ VI_DRV_DISPoolDeInit [R_ARM_CALL: .text+0x3320c] 
    /*00023a8c*/ CMP         R0, #0 
    /*00023a90*/ BNE         Vi_destroyDISPool_x23ab8
    /*00023a94*/ MOV         R0, #0 
    /*00023a98*/ ADD         SP, SP, #28 
    /*00023a9c*/ POP         {R4, R5, R6, R7, PC} 
    Vi_destroyDISPool_x23aa0:
    /*00023aa0*/ MOV         R0, R5 
    /*00023aa4*/ ADD         R1, SP, #20 
    /*00023aa8*/ BL          0x0000000000023AA8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00023aac*/ MOV         R0, #0 
    /*00023ab0*/ ADD         SP, SP, #28 
    /*00023ab4*/ POP         {R4, R5, R6, R7, PC} 
    Vi_destroyDISPool_x23ab8:
    /*00023ab8*/ STR         R0, [SP, #12] 
    /*00023abc*/ MOVW        R3, #925                    @ 0x39d 
    /*00023ac0*/ STR         R6, [SP, #8] 
    /*00023ac4*/ MOV         R1, #16 
    /*00023ac8*/ STR         R3, [SP] 
    /*00023acc*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa61c] 
    /*00023ad0*/ STR         R4, [SP, #4] 
    /*00023ad4*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa61c] 
    /*00023ad8*/ LDR         R3, [PC, #20]               @ 0x0000000000023af4 
    /*00023adc*/ MOV         R0, #3 
    /*00023ae0*/ BL          0x0000000000023AE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023ae4*/ MOV         R0, #0 
    /*00023ae8*/ ADD         SP, SP, #28 
    /*00023aec*/ POP         {R4, R5, R6, R7, PC} 
    /*00023af0*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*00023af4*/ ANDEQ       R1, R0, R0, LSR #13 
FUNC_END Vi_destroyDISPool


FUNC_BEGIN Vi_SetDISSysConfig
    /*00023af8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00023afc*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00023b00*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00023b04*/ MOV         R5, R1 
    /*00023b08*/ LDR         R6, [R3, R0, LSL #2] 
    /*00023b0c*/ MOV         R4, #468                    @ 0x1d4 
    /*00023b10*/ SUB         SP, SP, #52                 @ 0x34 
    /*00023b14*/ MOV         R7, R0 
    /*00023b18*/ ADD         R2, SP, #4 
    /*00023b1c*/ MLA         R4, R4, R5, R6 
    /*00023b20*/ BL          0x0000000000023B20          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*00023b24*/ LDR         R3, [SP, #16] 
    /*00023b28*/ LDR         R2, [SP, #8] 
    /*00023b2c*/ MOVW        LR, #38596                  @ 0x96c4 
    /*00023b30*/ LDR         IP, [SP, #4] 
    /*00023b34*/ CMP         R3, #0 
    /*00023b38*/ MOVW        R1, #38588                  @ 0x96bc 
    /*00023b3c*/ MOVW        R3, #38592                  @ 0x96c0 
    /*00023b40*/ MOV         R0, R7 
    /*00023b44*/ MOVEQ       R7, #8 
    /*00023b48*/ MOVNE       R7, #10 
    /*00023b4c*/ STR         R7, [R4, LR] 
    /*00023b50*/ STR         IP, [R4, R1] 
    /*00023b54*/ STR         R2, [R4, R3] 
    /*00023b58*/ BL          0x0000000000023B58          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00023b5c*/ SUB         R0, R0, #4 
    /*00023b60*/ CMP         R0, #1 
    /*00023b64*/ MOVWHI      R3, #38600                  @ 0x96c8 
    /*00023b68*/ MOVHI       R2, #0 
    /*00023b6c*/ STRHI       R2, [R4, R3] 
    /*00023b70*/ MOV         R2, #468                    @ 0x1d4 
    /*00023b74*/ MLA         R5, R2, R5, R6 
    /*00023b78*/ MOVW        R3, #38872                  @ 0x97d8 
    /*00023b7c*/ LDR         R3, [R5, R3] 
    /*00023b80*/ CMP         R3, #0 
    /*00023b84*/ MOVWEQ      R2, #38616                  @ 0x96d8 
    /*00023b88*/ MOVWNE      R3, #38616                  @ 0x96d8 
    /*00023b8c*/ MOVNE       R2, #1 
    /*00023b90*/ STREQ       R3, [R5, R2] 
    /*00023b94*/ STRNE       R2, [R5, R3] 
    /*00023b98*/ ADD         SP, SP, #52                 @ 0x34 
    /*00023b9c*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END Vi_SetDISSysConfig


FUNC_BEGIN Vi_CheckChnAttrSupportDIS
    /*00023ba0*/ PUSH        {R4, R5, R6, LR} 
    /*00023ba4*/ SUB         SP, SP, #152                @ 0x98 
    /*00023ba8*/ MOV         R5, R0 
    /*00023bac*/ ADD         R2, SP, #40                 @ 0x28 
    /*00023bb0*/ MOV         R6, R1 
    /*00023bb4*/ BL          0x0000000000023BB4          @ VI_DRV_GetChnAttr [R_ARM_CALL: .text+0x298e4] 
    /*00023bb8*/ MOV         R0, R5 
    /*00023bbc*/ ADD         R1, SP, #84                 @ 0x54 
    /*00023bc0*/ BL          0x0000000000023BC0          @ VI_DRV_GetPipeAttr [R_ARM_CALL: .text+0x28674] 
    /*00023bc4*/ LDR         R3, [SP, #68]               @ 0x44 
    /*00023bc8*/ CMP         R3, #1 
    /*00023bcc*/ BEQ         Vi_CheckChnAttrSupportDIS_x23cbc
    /*00023bd0*/ LDR         R3, [SP, #64]               @ 0x40 
    /*00023bd4*/ CMP         R3, #1 
    /*00023bd8*/ BEQ         Vi_CheckChnAttrSupportDIS_x23cbc
    /*00023bdc*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*00023be0*/ CMP         R3, #1 
    /*00023be4*/ BHI         Vi_CheckChnAttrSupportDIS_x23c8c
    /*00023be8*/ LDR         R3, [SP, #56]               @ 0x38 
    /*00023bec*/ CMP         R3, #0 
    /*00023bf0*/ BNE         Vi_CheckChnAttrSupportDIS_x23cd8
    /*00023bf4*/ LDR         R3, [SP, #48]               @ 0x30 
    /*00023bf8*/ CMP         R3, #26 
    /*00023bfc*/ CMPNE       R3, #39                     @ 0x27 
    /*00023c00*/ MOVNE       R4, #1 
    /*00023c04*/ MOVEQ       R4, #0 
    /*00023c08*/ BNE         Vi_CheckChnAttrSupportDIS_x23cf0
    /*00023c0c*/ LDR         R2, [SP, #96]               @ 0x60 
    /*00023c10*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00023c14*/ CMP         R2, R3 
    /*00023c18*/ BNE         Vi_CheckChnAttrSupportDIS_x23c54
    /*00023c1c*/ LDR         R2, [SP, #100]              @ 0x64 
    /*00023c20*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00023c24*/ CMP         R2, R3 
    /*00023c28*/ BNE         Vi_CheckChnAttrSupportDIS_x23c54
    /*00023c2c*/ ADD         R2, SP, #16 
    /*00023c30*/ MOV         R1, R6 
    /*00023c34*/ MOV         R0, R5 
    /*00023c38*/ BL          0x0000000000023C38          @ VI_DRV_GetChnCrop [R_ARM_CALL: .text+0x29db0] 
    /*00023c3c*/ LDR         R3, [SP, #16] 
    /*00023c40*/ CMP         R3, #1 
    /*00023c44*/ MOVNE       R0, R4 
    /*00023c48*/ BEQ         Vi_CheckChnAttrSupportDIS_x23d08
    Vi_CheckChnAttrSupportDIS_x23c4c:
    /*00023c4c*/ ADD         SP, SP, #152                @ 0x98 
    /*00023c50*/ POP         {R4, R5, R6, PC} 
    Vi_CheckChnAttrSupportDIS_x23c54:
    /*00023c54*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa7d0] 
    /*00023c58*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa7d0] 
    /*00023c5c*/ MOVW        R3, #1023                   @ 0x3ff 
    /*00023c60*/ STR         R5, [SP, #8] 
    /*00023c64*/ STR         R6, [SP, #4] 
    /*00023c68*/ STR         R3, [SP] 
    Vi_CheckChnAttrSupportDIS_x23c6c:
    /*00023c6c*/ LDR         R3, [PC, #176]              @ 0x0000000000023d24 
    /*00023c70*/ MOV         R1, #16 
    /*00023c74*/ MOV         R0, #3 
    /*00023c78*/ BL          0x0000000000023C78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023c7c*/ MOVW        R0, #32777                  @ 0x8009 
    /*00023c80*/ MOVT        R0, #40976                  @ 0xa010 
    /*00023c84*/ ADD         SP, SP, #152                @ 0x98 
    /*00023c88*/ POP         {R4, R5, R6, PC} 
    Vi_CheckChnAttrSupportDIS_x23c8c:
    /*00023c8c*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa6c0] 
    /*00023c90*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa6c0] 
    /*00023c94*/ STR         R3, [SP, #4] 
    /*00023c98*/ MOVW        R3, #999                    @ 0x3e7 
    /*00023c9c*/ STR         R3, [SP] 
    Vi_CheckChnAttrSupportDIS_x23ca0:
    /*00023ca0*/ LDR         R3, [PC, #124]              @ 0x0000000000023d24 
    /*00023ca4*/ MOV         R1, #16 
    /*00023ca8*/ MOV         R0, #3 
    /*00023cac*/ BL          0x0000000000023CAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023cb0*/ MOVW        R0, #32777                  @ 0x8009 
    /*00023cb4*/ MOVT        R0, #40976                  @ 0xa010 
    /*00023cb8*/ B           Vi_CheckChnAttrSupportDIS_x23c4c
    Vi_CheckChnAttrSupportDIS_x23cbc:
    /*00023cbc*/ MOV         R3, #992                    @ 0x3e0 
    /*00023cc0*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa66c] 
    /*00023cc4*/ STR         R6, [SP, #8] 
    /*00023cc8*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa66c] 
    /*00023ccc*/ STR         R5, [SP, #4] 
    /*00023cd0*/ STR         R3, [SP] 
    /*00023cd4*/ B           Vi_CheckChnAttrSupportDIS_x23c6c
    Vi_CheckChnAttrSupportDIS_x23cd8:
    /*00023cd8*/ STR         R3, [SP, #4] 
    /*00023cdc*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa724] 
    /*00023ce0*/ MOVW        R3, #1006                   @ 0x3ee 
    /*00023ce4*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa724] 
    /*00023ce8*/ STR         R3, [SP] 
    /*00023cec*/ B           Vi_CheckChnAttrSupportDIS_x23ca0
    Vi_CheckChnAttrSupportDIS_x23cf0:
    /*00023cf0*/ STR         R3, [SP, #4] 
    /*00023cf4*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa788] 
    /*00023cf8*/ MOVW        R3, #1017                   @ 0x3f9 
    /*00023cfc*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa788] 
    /*00023d00*/ STR         R3, [SP] 
    /*00023d04*/ B           Vi_CheckChnAttrSupportDIS_x23ca0
    Vi_CheckChnAttrSupportDIS_x23d08:
    /*00023d08*/ MOVW        R3, #1031                   @ 0x407 
    /*00023d0c*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa830] 
    /*00023d10*/ STR         R6, [SP, #8] 
    /*00023d14*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa830] 
    /*00023d18*/ STR         R5, [SP, #4] 
    /*00023d1c*/ STR         R3, [SP] 
    /*00023d20*/ B           Vi_CheckChnAttrSupportDIS_x23c6c
    /*00023d24*/ @           <UNDEFINED> instruction: 0x000016b4 
FUNC_END Vi_CheckChnAttrSupportDIS


FUNC_BEGIN Vi_InitDisAlgorithm
    /*00023d28*/ PUSH        {R4, R5, R6, LR} 
    /*00023d2c*/ MOV         R5, R0 
    /*00023d30*/ SUB         SP, SP, #8 
    /*00023d34*/ MOV         R0, #17 
    /*00023d38*/ MOV         R6, R1 
    /*00023d3c*/ BL          0x0000000000023D3C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023d40*/ CMP         R0, #0 
    /*00023d44*/ BEQ         Vi_InitDisAlgorithm_x23dc8
    /*00023d48*/ LDR         R4, [R0, #12] 
    /*00023d4c*/ CMP         R4, #0 
    /*00023d50*/ BEQ         Vi_InitDisAlgorithm_x23dc8
    /*00023d54*/ MOV         R3, #468                    @ 0x1d4 
    /*00023d58*/ MOVW        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00023d5c*/ MUL         R3, R3, R6 
    /*00023d60*/ MOVT        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00023d64*/ MOVW        IP, #38420                  @ 0x9614 
    /*00023d68*/ LDR         R0, [R2, R5, LSL #2] 
    /*00023d6c*/ ADD         R2, R3, #38400              @ 0x9600 
    /*00023d70*/ ADD         R3, R0, R3 
    /*00023d74*/ MOV         R1, R2 
    /*00023d78*/ ADD         R2, R2, #188                @ 0xbc 
    /*00023d7c*/ ADD         R1, R1, #148                @ 0x94 
    /*00023d80*/ ADD         R2, R0, R2 
    /*00023d84*/ ADD         R1, R0, R1 
    /*00023d88*/ LDR         R0, [R3, IP] 
    /*00023d8c*/ BLX         R4 
    /*00023d90*/ SUBS        R4, R0, #0 
    /*00023d94*/ BEQ         Vi_InitDisAlgorithm_x23dbc
    /*00023d98*/ MOVW        R3, #1138                   @ 0x472 
    /*00023d9c*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9fa0] 
    /*00023da0*/ STR         R3, [SP] 
    /*00023da4*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9fa0] 
    /*00023da8*/ STR         R4, [SP, #4] 
    /*00023dac*/ MOV         R1, #16 
    /*00023db0*/ LDR         R3, [PC, #60]               @ 0x0000000000023df4 
    /*00023db4*/ MOV         R0, #3 
    /*00023db8*/ BL          0x0000000000023DB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    Vi_InitDisAlgorithm_x23dbc:
    /*00023dbc*/ MOV         R0, R4 
    /*00023dc0*/ ADD         SP, SP, #8 
    /*00023dc4*/ POP         {R4, R5, R6, PC} 
    Vi_InitDisAlgorithm_x23dc8:
    /*00023dc8*/ MOVW        R3, #1125                   @ 0x465 
    /*00023dcc*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa890] 
    /*00023dd0*/ STR         R3, [SP] 
    /*00023dd4*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa890] 
    /*00023dd8*/ LDR         R3, [PC, #20]               @ 0x0000000000023df4 
    /*00023ddc*/ MOV         R1, #16 
    /*00023de0*/ MOV         R0, #3 
    /*00023de4*/ MOVW        R4, #32776                  @ 0x8008 
    /*00023de8*/ BL          0x0000000000023DE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023dec*/ MOVT        R4, #40976                  @ 0xa010 
    /*00023df0*/ B           Vi_InitDisAlgorithm_x23dbc
    /*00023df4*/ LDRDEQ      R1, [R0], -R0 
FUNC_END Vi_InitDisAlgorithm


FUNC_BEGIN Vi_DeInitDisAlgorithm
    /*00023df8*/ PUSH        {R4, R5, LR} 
    /*00023dfc*/ MOV         R5, R0 
    /*00023e00*/ SUB         SP, SP, #12 
    /*00023e04*/ MOV         R0, #17 
    /*00023e08*/ MOV         R4, R1 
    /*00023e0c*/ BL          0x0000000000023E0C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023e10*/ CMP         R0, #0 
    /*00023e14*/ BEQ         Vi_DeInitDisAlgorithm_x23ecc
    /*00023e18*/ LDR         R2, [R0, #16] 
    /*00023e1c*/ CMP         R2, #0 
    /*00023e20*/ BEQ         Vi_DeInitDisAlgorithm_x23ecc
    /*00023e24*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00023e28*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00023e2c*/ MOV         IP, #468                    @ 0x1d4 
    /*00023e30*/ MOVW        R0, #38432                  @ 0x9620 
    /*00023e34*/ LDR         R1, [R3, R5, LSL #2] 
    /*00023e38*/ MLA         R1, IP, R4, R1 
    /*00023e3c*/ LDR         IP, [R1, R0] 
    /*00023e40*/ CMP         IP, #0 
    /*00023e44*/ BEQ         Vi_DeInitDisAlgorithm_x23e98
    /*00023e48*/ MOVW        R3, #38420                  @ 0x9614 
    /*00023e4c*/ LDR         R0, [R1, R3] 
    /*00023e50*/ BLX         R2 
    /*00023e54*/ SUBS        R4, R0, #0 
    /*00023e58*/ BNE         Vi_DeInitDisAlgorithm_x23e68
    Vi_DeInitDisAlgorithm_x23e5c:
    /*00023e5c*/ MOV         R0, R4 
    /*00023e60*/ ADD         SP, SP, #12 
    /*00023e64*/ POP         {R4, R5, PC} 
    Vi_DeInitDisAlgorithm_x23e68:
    /*00023e68*/ STR         R4, [SP, #4] 
    /*00023e6c*/ MOVW        R3, #1174                   @ 0x496 
    /*00023e70*/ MOV         R1, #16 
    /*00023e74*/ STR         R3, [SP] 
    /*00023e78*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa8f8] 
    /*00023e7c*/ LDR         R3, [PC, #116]              @ 0x0000000000023ef8 
    /*00023e80*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa8f8] 
    /*00023e84*/ MOV         R0, #3 
    /*00023e88*/ BL          0x0000000000023E88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023e8c*/ MOV         R0, R4 
    /*00023e90*/ ADD         SP, SP, #12 
    /*00023e94*/ POP         {R4, R5, PC} 
    Vi_DeInitDisAlgorithm_x23e98:
    /*00023e98*/ STR         IP, [SP, #4] 
    /*00023e9c*/ MOVW        R3, #1165                   @ 0x48d 
    /*00023ea0*/ MOV         R1, #16 
    /*00023ea4*/ STR         R3, [SP] 
    /*00023ea8*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa5e4] 
    /*00023eac*/ LDR         R3, [PC, #68]               @ 0x0000000000023ef8 
    /*00023eb0*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa5e4] 
    /*00023eb4*/ MOV         R0, #7 
    /*00023eb8*/ MOV         R4, IP 
    /*00023ebc*/ BL          0x0000000000023EBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023ec0*/ MOV         R0, R4 
    /*00023ec4*/ ADD         SP, SP, #12 
    /*00023ec8*/ POP         {R4, R5, PC} 
    Vi_DeInitDisAlgorithm_x23ecc:
    /*00023ecc*/ MOVW        R3, #1157                   @ 0x485 
    /*00023ed0*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa890] 
    /*00023ed4*/ STR         R3, [SP] 
    /*00023ed8*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa890] 
    /*00023edc*/ LDR         R3, [PC, #20]               @ 0x0000000000023ef8 
    /*00023ee0*/ MOV         R1, #16 
    /*00023ee4*/ MOV         R0, #3 
    /*00023ee8*/ MOVW        R4, #32776                  @ 0x8008 
    /*00023eec*/ BL          0x0000000000023EEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023ef0*/ MOVT        R4, #40976                  @ 0xa010 
    /*00023ef4*/ B           Vi_DeInitDisAlgorithm_x23e5c
    /*00023ef8*/ ANDEQ       R1, R0, R4, ROR #13 
FUNC_END Vi_DeInitDisAlgorithm


FUNC_BEGIN Vi_EnableGlobalDIS
    /*00023efc*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00023f00*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00023f04*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00023f08*/ MOV         R5, R0 
    /*00023f0c*/ SUB         SP, SP, #20 
    /*00023f10*/ MOV         R0, #17 
    /*00023f14*/ MOV         R6, R1 
    /*00023f18*/ LDR         R7, [R3, R5, LSL #2] 
    /*00023f1c*/ BL          0x0000000000023F1C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023f20*/ SUBS        R9, R0, #0 
    /*00023f24*/ BEQ         Vi_EnableGlobalDIS_x24078
    /*00023f28*/ MOV         R4, #468                    @ 0x1d4 
    /*00023f2c*/ MOVW        R3, #38420                  @ 0x9614 
    /*00023f30*/ MUL         R4, R4, R6 
    /*00023f34*/ MOV         R1, R6 
    /*00023f38*/ MOV         R0, R5 
    /*00023f3c*/ ADD         R8, R7, R4 
    /*00023f40*/ LDR         SL, [R8, R3] 
    /*00023f44*/ BL          0x0000000000023F44          @ Vi_InitDisAlgorithm [R_ARM_CALL: .text+0x23d28] 
    /*00023f48*/ SUBS        FP, R0, #0 
    /*00023f4c*/ BNE         Vi_EnableGlobalDIS_x24008
    /*00023f50*/ ADD         R4, R4, #38400              @ 0x9600 
    /*00023f54*/ LDR         R3, [R9, #20] 
    /*00023f58*/ ADD         R4, R4, #36                 @ 0x24 
    /*00023f5c*/ MOV         R0, SL 
    /*00023f60*/ ADD         R4, R7, R4 
    /*00023f64*/ MOV         R1, R4 
    /*00023f68*/ BLX         R3 
    /*00023f6c*/ SUBS        FP, R0, #0 
    /*00023f70*/ BNE         Vi_EnableGlobalDIS_x23fc4
    /*00023f74*/ MOV         R2, R4 
    /*00023f78*/ MOV         R1, R6 
    /*00023f7c*/ MOV         R0, R5 
    /*00023f80*/ BL          0x0000000000023F80          @ VI_DRV_SetDISDsfConfig [R_ARM_CALL: .text+0x3302c] 
    /*00023f84*/ SUBS        FP, R0, #0 
    /*00023f88*/ BNE         Vi_EnableGlobalDIS_x2405c
    /*00023f8c*/ MOVW        R3, #38560                  @ 0x96a0 
    /*00023f90*/ MOV         R1, R6 
    /*00023f94*/ LDR         R2, [R8, R3] 
    /*00023f98*/ MOV         R0, R5 
    /*00023f9c*/ BL          0x0000000000023F9C          @ VI_DRV_DISPoolInit [R_ARM_CALL: .text+0x330e0] 
    /*00023fa0*/ SUBS        FP, R0, #0 
    /*00023fa4*/ BNE         Vi_EnableGlobalDIS_x24040
    /*00023fa8*/ MOV         R0, R5 
    /*00023fac*/ MOV         R1, R6 
    /*00023fb0*/ MOV         R2, #1 
    /*00023fb4*/ BL          0x0000000000023FB4          @ VI_DRV_SetDISen [R_ARM_CALL: .text+0x33068] 
    /*00023fb8*/ MOV         R0, FP 
    /*00023fbc*/ ADD         SP, SP, #20 
    /*00023fc0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Vi_EnableGlobalDIS_x23fc4:
    /*00023fc4*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa984] 
    /*00023fc8*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa984] 
    /*00023fcc*/ MOVW        R3, #825                    @ 0x339 
    /*00023fd0*/ STR         FP, [SP, #12] 
    /*00023fd4*/ STR         R6, [SP, #8] 
    /*00023fd8*/ STR         R5, [SP, #4] 
    Vi_EnableGlobalDIS_x23fdc:
    /*00023fdc*/ STR         R3, [SP] 
    /*00023fe0*/ MOV         R1, #16 
    /*00023fe4*/ LDR         R3, [PC, #184]              @ 0x00000000000240a4 
    /*00023fe8*/ MOV         R0, #3 
    /*00023fec*/ BL          0x0000000000023FEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023ff0*/ MOV         R1, R6 
    /*00023ff4*/ MOV         R0, R5 
    /*00023ff8*/ BL          0x0000000000023FF8          @ Vi_DeInitDisAlgorithm [R_ARM_CALL: .text+0x23df8] 
    Vi_EnableGlobalDIS_x23ffc:
    /*00023ffc*/ MOV         R0, FP 
    /*00024000*/ ADD         SP, SP, #20 
    /*00024004*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Vi_EnableGlobalDIS_x24008:
    /*00024008*/ STR         FP, [SP, #12] 
    /*0002400c*/ MOVW        R3, #818                    @ 0x332 
    /*00024010*/ STR         R6, [SP, #8] 
    /*00024014*/ MOV         R1, #16 
    /*00024018*/ STR         R3, [SP] 
    /*0002401c*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa934] 
    /*00024020*/ STR         R5, [SP, #4] 
    /*00024024*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa934] 
    /*00024028*/ LDR         R3, [PC, #116]              @ 0x00000000000240a4 
    /*0002402c*/ MOV         R0, #3 
    /*00024030*/ BL          0x0000000000024030          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024034*/ MOV         R0, FP 
    /*00024038*/ ADD         SP, SP, #20 
    /*0002403c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Vi_EnableGlobalDIS_x24040:
    /*00024040*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa61c] 
    /*00024044*/ STR         FP, [SP, #12] 
    /*00024048*/ MOVW        R3, #841                    @ 0x349 
    /*0002404c*/ STR         R6, [SP, #8] 
    /*00024050*/ STR         R5, [SP, #4] 
    /*00024054*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa61c] 
    /*00024058*/ B           Vi_EnableGlobalDIS_x23fdc
    Vi_EnableGlobalDIS_x2405c:
    /*0002405c*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa9c8] 
    /*00024060*/ STR         FP, [SP, #12] 
    /*00024064*/ MOVW        R3, #833                    @ 0x341 
    /*00024068*/ STR         R6, [SP, #8] 
    /*0002406c*/ STR         R5, [SP, #4] 
    /*00024070*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa9c8] 
    /*00024074*/ B           Vi_EnableGlobalDIS_x23fdc
    Vi_EnableGlobalDIS_x24078:
    /*00024078*/ MOVW        R3, #807                    @ 0x327 
    /*0002407c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9f38] 
    /*00024080*/ STR         R3, [SP] 
    /*00024084*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9f38] 
    /*00024088*/ LDR         R3, [PC, #20]               @ 0x00000000000240a4 
    /*0002408c*/ MOV         R1, #16 
    /*00024090*/ MOV         R0, #3 
    /*00024094*/ MOVW        FP, #32777                  @ 0x8009 
    /*00024098*/ BL          0x0000000000024098          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002409c*/ MOVT        FP, #40976                  @ 0xa010 
    /*000240a0*/ B           Vi_EnableGlobalDIS_x23ffc
    /*000240a4*/ STRDEQ      R1, [R0], -IP 
FUNC_END Vi_EnableGlobalDIS


FUNC_BEGIN Vi_EnableDIS
    /*000240a8*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*000240ac*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*000240b0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000240b4*/ MOV         R4, #468                    @ 0x1d4 
    /*000240b8*/ LDR         R7, [R3, R0, LSL #2] 
    /*000240bc*/ MOVW        R8, #38828                  @ 0x97ac 
    /*000240c0*/ SUB         SP, SP, #164                @ 0xa4 
    /*000240c4*/ MLA         R4, R4, R1, R7 
    /*000240c8*/ LDR         R3, [R4, R8] 
    /*000240cc*/ CMP         R3, #0 
    /*000240d0*/ BNE         Vi_EnableDIS_x240fc
    /*000240d4*/ MOVW        R9, #38548                  @ 0x9694 
    /*000240d8*/ MOV         R6, R0 
    /*000240dc*/ LDR         R3, [R4, R9] 
    /*000240e0*/ MOV         R5, R1 
    /*000240e4*/ CMP         R3, #3 
    /*000240e8*/ CMPNE       R3, #1 
    /*000240ec*/ BLS         Vi_EnableDIS_x2410c
    /*000240f0*/ SUB         R3, R3, #2 
    /*000240f4*/ CMP         R3, #1 
    /*000240f8*/ BLS         Vi_EnableDIS_x24138
    Vi_EnableDIS_x240fc:
    /*000240fc*/ MOV         R4, #0 
    Vi_EnableDIS_x24100:
    /*00024100*/ MOV         R0, R4 
    /*00024104*/ ADD         SP, SP, #164                @ 0xa4 
    /*00024108*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    Vi_EnableDIS_x2410c:
    /*0002410c*/ BL          0x000000000002410C          @ Vi_EnableGlobalDIS [R_ARM_CALL: .text+0x23efc] 
    /*00024110*/ CMP         R0, #0 
    /*00024114*/ MOVNE       R3, #118                    @ 0x76 
    /*00024118*/ BNE         Vi_EnableDIS_x242a4
    /*0002411c*/ LDR         R3, [R4, R8] 
    /*00024120*/ CMP         R3, #0 
    /*00024124*/ BNE         Vi_EnableDIS_x240fc
    /*00024128*/ LDR         R3, [R4, R9] 
    /*0002412c*/ SUB         R3, R3, #2 
    /*00024130*/ CMP         R3, #1 
    /*00024134*/ BHI         Vi_EnableDIS_x240fc
    Vi_EnableDIS_x24138:
    /*00024138*/ MOV         R3, #468                    @ 0x1d4 
    /*0002413c*/ MOVW        R8, #38884                  @ 0x97e4 
    /*00024140*/ MLA         R7, R3, R5, R7 
    /*00024144*/ LDR         R3, [R7, R8] 
    /*00024148*/ CMP         R3, #0 
    /*0002414c*/ BEQ         Vi_EnableDIS_x2427c
    /*00024150*/ CMP         R3, #1 
    /*00024154*/ BNE         Vi_EnableDIS_x240fc
    /*00024158*/ MOV         R7, #176                    @ 0xb0 
    /*0002415c*/ MOVW        R4, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00024160*/ MUL         R7, R7, R6 
    /*00024164*/ MOVT        R4, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00024168*/ ADD         R1, SP, #20 
    /*0002416c*/ ADD         R8, R7, #140                @ 0x8c 
    /*00024170*/ ADD         R8, R4, R8 
    /*00024174*/ MOV         R0, R8 
    /*00024178*/ BL          0x0000000000024178          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0002417c*/ ADD         R2, SP, #44                 @ 0x2c 
    /*00024180*/ MOV         R1, R5 
    /*00024184*/ MOV         R0, R6 
    /*00024188*/ BL          0x0000000000024188          @ VI_DRV_GetChnLDCV2AttrSet [R_ARM_CALL: .text+0x2a104] 
    /*0002418c*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00024190*/ CMP         R3, #1 
    /*00024194*/ BEQ         Vi_EnableDIS_x241b4
    /*00024198*/ MOVW        R3, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaa58] 
    /*0002419c*/ MOVW        R0, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaa78] 
    /*000241a0*/ MOVT        R3, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaa58] 
    /*000241a4*/ MOVT        R0, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaa78] 
    /*000241a8*/ MOV         R2, #143                    @ 0x8f 
    /*000241ac*/ LDR         R1, [PC, #336]              @ 0x0000000000024304 
    /*000241b0*/ BL          0x00000000000241B0          @ osal_panic [R_ARM_CALL: +0x0] 
    Vi_EnableDIS_x241b4:
    /*000241b4*/ ADD         R2, SP, #44                 @ 0x2c 
    /*000241b8*/ MOV         R1, R5 
    /*000241bc*/ MOV         R0, R6 
    /*000241c0*/ MOV         R3, #0 
    /*000241c4*/ ADD         R7, R7, #172                @ 0xac 
    /*000241c8*/ STR         R3, [SP, #44]               @ 0x2c 
    /*000241cc*/ BL          0x00000000000241CC          @ VI_DRV_SetChnLDCV2Attr [R_ARM_CALL: .text+0x2a0bc] 
    /*000241d0*/ ADD         R1, SP, #20 
    /*000241d4*/ MOV         R0, R8 
    /*000241d8*/ ADD         R4, R4, R7 
    /*000241dc*/ BL          0x00000000000241DC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000241e0*/ MOVW        R7, #0                      @ VI_DIS_WaitLdcV2CallBack [R_ARM_MOVW_ABS_NC: .text+0x22bf8] 
    /*000241e4*/ STR         R6, [SP, #24] 
    /*000241e8*/ MOVT        R7, #0                      @ VI_DIS_WaitLdcV2CallBack [R_ARM_MOVT_ABS: .text+0x22bf8] 
    /*000241ec*/ STR         R5, [SP, #28] 
    /*000241f0*/ B           Vi_EnableDIS_x24200
    Vi_EnableDIS_x241f4:
    /*000241f4*/ BL          0x00000000000241F4          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*000241f8*/ CMP         R0, #0 
    /*000241fc*/ BLT         Vi_EnableDIS_x24220
    Vi_EnableDIS_x24200:
    /*00024200*/ ADD         R0, SP, #24 
    /*00024204*/ BL          0x0000000000024204          @ VI_DIS_WaitLdcV2CallBack [R_ARM_CALL: .text+0x22bf8] 
    /*00024208*/ MOV         R3, #100                    @ 0x64 
    /*0002420c*/ ADD         R2, SP, #24 
    /*00024210*/ MOV         R1, R7 
    /*00024214*/ CMP         R0, #0 
    /*00024218*/ MOV         R0, R4 
    /*0002421c*/ BEQ         Vi_EnableDIS_x241f4
    Vi_EnableDIS_x24220:
    /*00024220*/ MOV         R1, R5 
    /*00024224*/ MOV         R0, R6 
    /*00024228*/ BL          0x0000000000024228          @ Vi_DeInitLocalDisAlgorithm [R_ARM_CALL: .text+0x21888] 
    /*0002422c*/ CMP         R0, #0 
    /*00024230*/ BNE         Vi_EnableDIS_x242cc
    /*00024234*/ MOV         R1, R5 
    /*00024238*/ MOV         R0, R6 
    /*0002423c*/ BL          0x000000000002423C          @ Vi_EnableLocalDIS [R_ARM_CALL: .text+0x21990] 
    /*00024240*/ SUBS        R4, R0, #0 
    /*00024244*/ BNE         Vi_EnableDIS_x242a0
    /*00024248*/ ADD         R1, SP, #20 
    /*0002424c*/ MOV         R0, R8 
    /*00024250*/ BL          0x0000000000024250          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00024254*/ MOV         R1, R5 
    /*00024258*/ MOV         R0, R6 
    /*0002425c*/ ADD         R2, SP, #44                 @ 0x2c 
    /*00024260*/ MOV         R3, #1 
    /*00024264*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00024268*/ BL          0x0000000000024268          @ VI_DRV_SetChnLDCV2Attr [R_ARM_CALL: .text+0x2a0bc] 
    /*0002426c*/ ADD         R1, SP, #20 
    /*00024270*/ MOV         R0, R8 
    /*00024274*/ BL          0x0000000000024274          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00024278*/ B           Vi_EnableDIS_x24100
    Vi_EnableDIS_x2427c:
    /*0002427c*/ MOV         R1, R5 
    /*00024280*/ MOV         R0, R6 
    /*00024284*/ BL          0x0000000000024284          @ Vi_EnableLocalDIS [R_ARM_CALL: .text+0x21990] 
    /*00024288*/ SUBS        R4, R0, #0 
    /*0002428c*/ MOVNE       R3, #131                    @ 0x83 
    /*00024290*/ BNE         Vi_EnableDIS_x242a4
    /*00024294*/ MOV         R3, #1 
    /*00024298*/ STR         R3, [R7, R8] 
    /*0002429c*/ B           Vi_EnableDIS_x24100
    Vi_EnableDIS_x242a0:
    /*000242a0*/ MOV         R3, #159                    @ 0x9f 
    Vi_EnableDIS_x242a4:
    /*000242a4*/ STR         R3, [SP] 
    /*000242a8*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaa1c] 
    /*000242ac*/ LDR         R3, [PC, #80]               @ 0x0000000000024304 
    /*000242b0*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaa1c] 
    /*000242b4*/ MOV         R1, #16 
    /*000242b8*/ MOV         R0, #3 
    /*000242bc*/ MOVW        R4, #32777                  @ 0x8009 
    /*000242c0*/ BL          0x00000000000242C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000242c4*/ MOVT        R4, #40976                  @ 0xa010 
    /*000242c8*/ B           Vi_EnableDIS_x24100
    Vi_EnableDIS_x242cc:
    /*000242cc*/ STR         R0, [SP, #12] 
    /*000242d0*/ MOV         R3, #153                    @ 0x99 
    /*000242d4*/ STR         R5, [SP, #8] 
    /*000242d8*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaab8] 
    /*000242dc*/ STR         R3, [SP] 
    /*000242e0*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaab8] 
    /*000242e4*/ STR         R6, [SP, #4] 
    /*000242e8*/ MOV         R1, #16 
    /*000242ec*/ LDR         R3, [PC, #16]               @ 0x0000000000024304 
    /*000242f0*/ MOV         R0, #3 
    /*000242f4*/ MOVW        R4, #32780                  @ 0x800c 
    /*000242f8*/ BL          0x00000000000242F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000242fc*/ MOVT        R4, #40976                  @ 0xa010 
    /*00024300*/ B           Vi_EnableDIS_x24100
    /*00024304*/ ANDEQ       R1, R0, R0, LSL R7 
FUNC_END Vi_EnableDIS


FUNC_BEGIN Vi_SetDISAttr
    /*00024308*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002430c*/ SUB         SP, SP, #212                @ 0xd4 
    /*00024310*/ MOV         R5, R1 
    /*00024314*/ MOV         R6, R2 
    /*00024318*/ MOV         R7, R0 
    /*0002431c*/ BL          0x000000000002431C          @ VI_CheckPipeId [R_ARM_CALL: .text+0x7820] 
    /*00024320*/ SUBS        R4, R0, #0 
    /*00024324*/ BEQ         Vi_SetDISAttr_x24334
    Vi_SetDISAttr_x24328:
    /*00024328*/ MOV         R0, R4 
    /*0002432c*/ ADD         SP, SP, #212                @ 0xd4 
    /*00024330*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Vi_SetDISAttr_x24334:
    /*00024334*/ MOV         R0, R5 
    /*00024338*/ BL          0x0000000000024338          @ VI_CheckPhyChnId [R_ARM_CALL: .text+0xa1a4] 
    /*0002433c*/ SUBS        R4, R0, #0 
    /*00024340*/ BNE         Vi_SetDISAttr_x24328
    /*00024344*/ MOV         R0, R6 
    /*00024348*/ BL          0x0000000000024348          @ VI_CheckNullPtr [R_ARM_CALL: .text+0x1534] 
    /*0002434c*/ SUBS        R4, R0, #0 
    /*00024350*/ BNE         Vi_SetDISAttr_x24328
    /*00024354*/ MOV         R0, R5 
    /*00024358*/ BL          0x0000000000024358          @ VI_DRV_IsEarlyIntChn [R_ARM_CALL: .text+0x3387c] 
    /*0002435c*/ CMP         R0, #0 
    /*00024360*/ BNE         Vi_SetDISAttr_x246b4
    /*00024364*/ MOV         FP, #176                    @ 0xb0 
    /*00024368*/ MOVW        R3, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*0002436c*/ MUL         FP, FP, R7 
    /*00024370*/ MOVT        R3, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00024374*/ STR         R3, [SP, #20] 
    /*00024378*/ ADD         SL, FP, #100                @ 0x64 
    /*0002437c*/ ADD         SL, R3, SL 
    /*00024380*/ MOV         R0, SL 
    /*00024384*/ BL          0x0000000000024384          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00024388*/ SUBS        R4, R0, #0 
    /*0002438c*/ BNE         Vi_SetDISAttr_x246e4
    /*00024390*/ MOVW        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00024394*/ MOVT        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00024398*/ LDR         R3, [SP, #20] 
    /*0002439c*/ LDR         R9, [R2, R7, LSL #2] 
    /*000243a0*/ CMP         R9, #0 
    /*000243a4*/ BEQ         Vi_SetDISAttr_x24810
    /*000243a8*/ LDR         R2, [R9] 
    /*000243ac*/ CMP         R2, #2 
    /*000243b0*/ BEQ         Vi_SetDISAttr_x247ac
    /*000243b4*/ MOV         R8, #468                    @ 0x1d4 
    /*000243b8*/ MOVW        R2, #38424                  @ 0x9618 
    /*000243bc*/ MUL         R8, R8, R5 
    /*000243c0*/ ADD         R1, R9, R8 
    /*000243c4*/ LDR         R2, [R1, R2] 
    /*000243c8*/ CMP         R2, #0 
    /*000243cc*/ BEQ         Vi_SetDISAttr_x24424
    /*000243d0*/ ADD         R2, R5, #9536               @ 0x2540 
    /*000243d4*/ ADD         R2, R2, #50                 @ 0x32 
    /*000243d8*/ ADD         R2, R9, R2, LSL #2 
    /*000243dc*/ LDR         R2, [R2, #4] 
    /*000243e0*/ CMP         R2, #0 
    /*000243e4*/ BNE         Vi_SetDISAttr_x24440
    /*000243e8*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xab4c] 
    /*000243ec*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0xab4c] 
    /*000243f0*/ MOVW        R3, #309                    @ 0x135 
    /*000243f4*/ STR         R5, [SP, #8] 
    /*000243f8*/ STR         R7, [SP, #4] 
    /*000243fc*/ STR         R3, [SP] 
    Vi_SetDISAttr_x24400:
    /*00024400*/ LDR         R3, [PC, #1308]             @ 0x0000000000024924 
    /*00024404*/ MOV         R1, #16 
    /*00024408*/ MOV         R0, #3 
    /*0002440c*/ MOVW        R4, #32777                  @ 0x8009 
    /*00024410*/ BL          0x0000000000024410          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024414*/ MOVT        R4, #40976                  @ 0xa010 
    Vi_SetDISAttr_x24418:
    /*00024418*/ MOV         R0, SL 
    /*0002441c*/ BL          0x000000000002441C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00024420*/ B           Vi_SetDISAttr_x24328
    Vi_SetDISAttr_x24424:
    /*00024424*/ MOVW        R3, #302                    @ 0x12e 
    /*00024428*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xab08] 
    /*0002442c*/ STR         R5, [SP, #8] 
    /*00024430*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0xab08] 
    /*00024434*/ STR         R7, [SP, #4] 
    /*00024438*/ STR         R3, [SP] 
    /*0002443c*/ B           Vi_SetDISAttr_x24400
    Vi_SetDISAttr_x24440:
    /*00024440*/ MOVW        IP, #38828                  @ 0x97ac 
    /*00024444*/ ADD         R8, R8, IP 
    /*00024448*/ STR         R3, [SP, #20] 
    /*0002444c*/ ADD         R8, R9, R8 
    /*00024450*/ LDR         R3, [R1, IP] 
    /*00024454*/ MOV         R2, #36                     @ 0x24 
    /*00024458*/ MOV         R0, R6 
    /*0002445c*/ MOV         R1, R8 
    /*00024460*/ STR         R3, [SP, #24] 
    /*00024464*/ BL          0x0000000000024464          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*00024468*/ CMP         R0, #0 
    /*0002446c*/ BEQ         Vi_SetDISAttr_x24418
    /*00024470*/ ADD         R2, R9, #36864              @ 0x9000 
    /*00024474*/ CMP         R5, #0 
    /*00024478*/ LDR         R2, [R2, #1964]             @ 0x7ac 
    /*0002447c*/ SUB         R2, R2, #1 
    /*00024480*/ CLZ         R2, R2 
    /*00024484*/ LSR         R2, R2, #5 
    /*00024488*/ MOVEQ       R2, #0 
    /*0002448c*/ CMP         R2, #0 
    /*00024490*/ BNE         Vi_SetDISAttr_x24908
    /*00024494*/ MOV         R0, R6 
    /*00024498*/ BL          0x0000000000024498          @ Vi_CheckDISAttr [R_ARM_CALL: .text+0x23714] 
    /*0002449c*/ LDR         R3, [SP, #20] 
    /*000244a0*/ SUBS        IP, R0, #0 
    /*000244a4*/ BNE         Vi_SetDISAttr_x24684
    /*000244a8*/ LDR         R2, [R6] 
    /*000244ac*/ CMP         R2, #0 
    /*000244b0*/ BEQ         Vi_SetDISAttr_x24510
    /*000244b4*/ MOV         R1, R5 
    /*000244b8*/ MOV         R0, R7 
    /*000244bc*/ STR         R3, [SP, #20] 
    /*000244c0*/ BL          0x00000000000244C0          @ Vi_CheckChnAttrSupportDIS [R_ARM_CALL: .text+0x23ba0] 
    /*000244c4*/ LDR         R3, [SP, #20] 
    /*000244c8*/ SUBS        IP, R0, #0 
    /*000244cc*/ BNE         Vi_SetDISAttr_x2473c
    /*000244d0*/ MOV         R1, #468                    @ 0x1d4 
    /*000244d4*/ MOVW        R2, #38548                  @ 0x9694 
    /*000244d8*/ MLA         R1, R1, R5, R9 
    /*000244dc*/ LDR         R2, [R1, R2] 
    /*000244e0*/ STR         R1, [SP, #20] 
    /*000244e4*/ CMP         R2, #2 
    /*000244e8*/ BEQ         Vi_SetDISAttr_x24758
    /*000244ec*/ ADD         R2, SP, #92                 @ 0x5c 
    /*000244f0*/ MOV         R1, R5 
    /*000244f4*/ MOV         R0, R7 
    /*000244f8*/ STR         R3, [SP, #20] 
    /*000244fc*/ BL          0x00000000000244FC          @ VI_DRV_GetChnLDCV2AttrSet [R_ARM_CALL: .text+0x2a104] 
    /*00024500*/ LDR         R2, [SP, #92]               @ 0x5c 
    /*00024504*/ LDR         R3, [SP, #20] 
    /*00024508*/ CMP         R2, #1 
    /*0002450c*/ BEQ         Vi_SetDISAttr_x247e4
    Vi_SetDISAttr_x24510:
    /*00024510*/ MOV         R1, R5 
    /*00024514*/ MOV         R0, R7 
    /*00024518*/ STR         R3, [SP, #20] 
    /*0002451c*/ BL          0x000000000002451C          @ Vi_SetDISSysConfig [R_ARM_CALL: .text+0x23af8] 
    /*00024520*/ LDR         R2, [R6] 
    /*00024524*/ LDR         R3, [SP, #20] 
    /*00024528*/ CMP         R2, #1 
    /*0002452c*/ BEQ         Vi_SetDISAttr_x246f0
    /*00024530*/ MOV         R1, R5 
    /*00024534*/ MOV         R0, R7 
    /*00024538*/ STR         R3, [SP, #20] 
    /*0002453c*/ BL          0x000000000002453C          @ Vi_DisableDIS [R_ARM_CALL: .text+0x23974] 
    /*00024540*/ LDR         R3, [SP, #20] 
    Vi_SetDISAttr_x24544:
    /*00024544*/ ADD         R2, FP, #140                @ 0x8c 
    /*00024548*/ ADD         R1, SP, #36                 @ 0x24 
    /*0002454c*/ ADD         R2, R3, R2 
    /*00024550*/ STR         R3, [SP, #28] 
    /*00024554*/ STR         R2, [SP, #20] 
    /*00024558*/ MOV         R0, R2 
    /*0002455c*/ BL          0x000000000002455C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00024560*/ MOV         R0, R8 
    /*00024564*/ MOV         R2, #36                     @ 0x24 
    /*00024568*/ MOV         R1, R6 
    /*0002456c*/ BL          0x000000000002456C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00024570*/ MOV         R2, #468                    @ 0x1d4 
    /*00024574*/ MLA         R2, R2, R5, R9 
    /*00024578*/ MOVW        R1, #38580                  @ 0x96b4 
    /*0002457c*/ MOV         R8, #468                    @ 0x1d4 
    /*00024580*/ LDR         R3, [SP, #28] 
    /*00024584*/ MLA         R8, R8, R5, R9 
    /*00024588*/ STR         R3, [SP, #28] 
    /*0002458c*/ LDR         R1, [R2, R1] 
    /*00024590*/ CMP         R1, #0 
    /*00024594*/ MOVWEQ      IP, #38852                  @ 0x97c4 
    /*00024598*/ MOVWEQ      R0, #38856                  @ 0x97c8 
    /*0002459c*/ MOVEQ       R1, #1000                   @ 0x3e8 
    /*000245a0*/ STREQ       R1, [R2, IP] 
    /*000245a4*/ MOV         IP, #1 
    /*000245a8*/ STREQ       R1, [R2, R0] 
    /*000245ac*/ MOVW        R2, #38876                  @ 0x97dc 
    /*000245b0*/ STR         IP, [R8, R2] 
    /*000245b4*/ ADD         R1, SP, #36                 @ 0x24 
    /*000245b8*/ LDR         R0, [SP, #20] 
    /*000245bc*/ BL          0x00000000000245BC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000245c0*/ LDR         R3, [SP, #24] 
    /*000245c4*/ LDR         R2, [R6] 
    /*000245c8*/ CMP         R2, #0 
    /*000245cc*/ CMPEQ       R3, #1 
    /*000245d0*/ LDR         R3, [SP, #28] 
    /*000245d4*/ BNE         Vi_SetDISAttr_x24418
    /*000245d8*/ MOVW        R2, #38884                  @ 0x97e4 
    /*000245dc*/ STR         R7, [SP, #40]               @ 0x28 
    /*000245e0*/ LDR         R2, [R8, R2] 
    /*000245e4*/ STR         R5, [SP, #44]               @ 0x2c 
    /*000245e8*/ CMP         R2, #1 
    /*000245ec*/ BEQ         Vi_SetDISAttr_x24848
    /*000245f0*/ ADD         R6, FP, #168                @ 0xa8 
    /*000245f4*/ MOVW        R4, #0                      @ VI_DIS_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x22cbc] 
    /*000245f8*/ ADD         R6, R3, R6 
    /*000245fc*/ MOVT        R4, #0                      @ VI_DIS_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x22cbc] 
    /*00024600*/ ADD         R8, SP, #40                 @ 0x28 
    /*00024604*/ B           Vi_SetDISAttr_x24614
    Vi_SetDISAttr_x24608:
    /*00024608*/ BL          0x0000000000024608          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0002460c*/ CMP         R0, #0 
    /*00024610*/ BLT         Vi_SetDISAttr_x24634
    Vi_SetDISAttr_x24614:
    /*00024614*/ MOV         R0, R8 
    /*00024618*/ BL          0x0000000000024618          @ VI_DIS_WaitConditionCallBack [R_ARM_CALL: .text+0x22cbc] 
    /*0002461c*/ MOV         R3, #100                    @ 0x64 
    /*00024620*/ MOV         R2, R8 
    /*00024624*/ MOV         R1, R4 
    /*00024628*/ CMP         R0, #0 
    /*0002462c*/ MOV         R0, R6 
    /*00024630*/ BEQ         Vi_SetDISAttr_x24608
    Vi_SetDISAttr_x24634:
    /*00024634*/ MOV         R1, R5 
    /*00024638*/ MOV         R0, R7 
    /*0002463c*/ BL          0x000000000002463C          @ Vi_DeInitDisAlgorithm [R_ARM_CALL: .text+0x23df8] 
    /*00024640*/ SUBS        R4, R0, #0 
    /*00024644*/ BEQ         Vi_SetDISAttr_x24674
    /*00024648*/ MOVW        R3, #433                    @ 0x1b1 
    /*0002464c*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaab8] 
    /*00024650*/ STR         R3, [SP] 
    /*00024654*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaab8] 
    /*00024658*/ STR         R4, [SP, #12] 
    /*0002465c*/ MOV         R1, #16 
    /*00024660*/ STR         R5, [SP, #8] 
    /*00024664*/ MOV         R0, #3 
    /*00024668*/ STR         R7, [SP, #4] 
    /*0002466c*/ LDR         R3, [PC, #688]              @ 0x0000000000024924 
    /*00024670*/ BL          0x0000000000024670          @ HI_LOG [R_ARM_CALL: +0x0] 
    Vi_SetDISAttr_x24674:
    /*00024674*/ MOV         R1, R5 
    /*00024678*/ MOV         R0, R7 
    /*0002467c*/ BL          0x000000000002467C          @ Vi_destroyDISPool [R_ARM_CALL: .text+0x23a18] 
    /*00024680*/ B           Vi_SetDISAttr_x24418
    Vi_SetDISAttr_x24684:
    /*00024684*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xabf4] 
    /*00024688*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0xabf4] 
    /*0002468c*/ MOVW        R3, #333                    @ 0x14d 
    /*00024690*/ STR         R5, [SP, #8] 
    /*00024694*/ STR         R7, [SP, #4] 
    /*00024698*/ STR         R3, [SP] 
    Vi_SetDISAttr_x2469c:
    /*0002469c*/ LDR         R3, [PC, #640]              @ 0x0000000000024924 
    /*000246a0*/ MOV         R1, #16 
    /*000246a4*/ MOV         R0, #3 
    /*000246a8*/ MOV         R4, IP 
    /*000246ac*/ BL          0x00000000000246AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000246b0*/ B           Vi_SetDISAttr_x24418
    Vi_SetDISAttr_x246b4:
    /*000246b4*/ MOVW        R3, #267                    @ 0x10b 
    /*000246b8*/ STR         R5, [SP, #4] 
    /*000246bc*/ STR         R3, [SP] 
    /*000246c0*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9e88] 
    /*000246c4*/ LDR         R3, [PC, #600]              @ 0x0000000000024924 
    /*000246c8*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9e88] 
    /*000246cc*/ MOV         R1, #16 
    /*000246d0*/ MOV         R0, #3 
    /*000246d4*/ MOVW        R4, #32776                  @ 0x8008 
    /*000246d8*/ BL          0x00000000000246D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000246dc*/ MOVT        R4, #40976                  @ 0xa010 
    /*000246e0*/ B           Vi_SetDISAttr_x24328
    Vi_SetDISAttr_x246e4:
    /*000246e4*/ MOV         R4, #65024                  @ 0xfe00 
    /*000246e8*/ MOVT        R4, #65535                  @ 0xffff 
    /*000246ec*/ B           Vi_SetDISAttr_x24328
    Vi_SetDISAttr_x246f0:
    /*000246f0*/ MOV         R1, R5 
    /*000246f4*/ MOV         R0, R7 
    /*000246f8*/ BL          0x00000000000246F8          @ Vi_EnableDIS [R_ARM_CALL: .text+0x240a8] 
    /*000246fc*/ LDR         R3, [SP, #20] 
    /*00024700*/ SUBS        IP, R0, #0 
    /*00024704*/ BEQ         Vi_SetDISAttr_x24544
    /*00024708*/ MOVW        R3, #382                    @ 0x17e 
    /*0002470c*/ STR         IP, [SP, #12] 
    /*00024710*/ STR         R3, [SP] 
    /*00024714*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xad70] 
    /*00024718*/ STR         R5, [SP, #8] 
    /*0002471c*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0xad70] 
    /*00024720*/ STR         R7, [SP, #4] 
    /*00024724*/ MOV         R1, #16 
    /*00024728*/ LDR         R3, [PC, #500]              @ 0x0000000000024924 
    /*0002472c*/ MOV         R0, #3 
    /*00024730*/ MOV         R4, IP 
    /*00024734*/ BL          0x0000000000024734          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024738*/ B           Vi_SetDISAttr_x24418
    Vi_SetDISAttr_x2473c:
    /*0002473c*/ MOVW        R3, #342                    @ 0x156 
    /*00024740*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xac34] 
    /*00024744*/ STR         R5, [SP, #8] 
    /*00024748*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0xac34] 
    /*0002474c*/ STR         R7, [SP, #4] 
    /*00024750*/ STR         R3, [SP] 
    /*00024754*/ B           Vi_SetDISAttr_x2469c
    Vi_SetDISAttr_x24758:
    /*00024758*/ ADD         R2, SP, #60                 @ 0x3c 
    /*0002475c*/ MOV         R1, R5 
    /*00024760*/ MOV         R0, R7 
    /*00024764*/ STR         R3, [SP, #28] 
    /*00024768*/ BL          0x0000000000024768          @ VI_DRV_GetChnLDCAttrSet [R_ARM_CALL: .text+0x29f94] 
    /*0002476c*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*00024770*/ LDR         R3, [SP, #28] 
    /*00024774*/ CMP         R2, #1 
    /*00024778*/ BEQ         Vi_SetDISAttr_x24834
    /*0002477c*/ LDR         R1, [SP, #20] 
    /*00024780*/ MOVW        R2, #38428                  @ 0x961c 
    /*00024784*/ LDR         R2, [R1, R2] 
    /*00024788*/ CMP         R2, #0 
    /*0002478c*/ BNE         Vi_SetDISAttr_x24510
    /*00024790*/ MOVW        R3, #358                    @ 0x166 
    /*00024794*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaccc] 
    /*00024798*/ STR         R5, [SP, #8] 
    /*0002479c*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaccc] 
    /*000247a0*/ STR         R7, [SP, #4] 
    /*000247a4*/ STR         R3, [SP] 
    /*000247a8*/ B           Vi_SetDISAttr_x24400
    Vi_SetDISAttr_x247ac:
    /*000247ac*/ MOV         R0, SL 
    /*000247b0*/ MOVW        R4, #32776                  @ 0x8008 
    /*000247b4*/ BL          0x00000000000247B4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000247b8*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9eec] 
    /*000247bc*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9eec] 
    /*000247c0*/ MOVW        R3, #282                    @ 0x11a 
    /*000247c4*/ STR         R7, [SP, #4] 
    /*000247c8*/ STR         R3, [SP] 
    Vi_SetDISAttr_x247cc:
    /*000247cc*/ LDR         R3, [PC, #336]              @ 0x0000000000024924 
    /*000247d0*/ MOV         R1, #16 
    /*000247d4*/ MOV         R0, #3 
    /*000247d8*/ MOVT        R4, #40976                  @ 0xa010 
    /*000247dc*/ BL          0x00000000000247DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000247e0*/ B           Vi_SetDISAttr_x24328
    Vi_SetDISAttr_x247e4:
    /*000247e4*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xad14] 
    /*000247e8*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0xad14] 
    /*000247ec*/ MOV         R3, #368                    @ 0x170 
    /*000247f0*/ STR         R3, [SP] 
    Vi_SetDISAttr_x247f4:
    /*000247f4*/ LDR         R3, [PC, #296]              @ 0x0000000000024924 
    /*000247f8*/ MOV         R1, #16 
    /*000247fc*/ MOV         R0, #3 
    /*00024800*/ MOVW        R4, #32777                  @ 0x8009 
    /*00024804*/ BL          0x0000000000024804          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024808*/ MOVT        R4, #40976                  @ 0xa010 
    /*0002480c*/ B           Vi_SetDISAttr_x24418
    Vi_SetDISAttr_x24810:
    /*00024810*/ MOV         R0, SL 
    /*00024814*/ MOVW        R4, #32773                  @ 0x8005 
    /*00024818*/ BL          0x0000000000024818          @ osal_up [R_ARM_CALL: +0x0] 
    /*0002481c*/ MOVW        R3, #275                    @ 0x113 
    /*00024820*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9ebc] 
    /*00024824*/ STR         R7, [SP, #4] 
    /*00024828*/ STR         R3, [SP] 
    /*0002482c*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9ebc] 
    /*00024830*/ B           Vi_SetDISAttr_x247cc
    Vi_SetDISAttr_x24834:
    /*00024834*/ MOVW        R3, #351                    @ 0x15f 
    /*00024838*/ MOVW        R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xac84] 
    /*0002483c*/ STR         R3, [SP] 
    /*00024840*/ MOVT        R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0xac84] 
    /*00024844*/ B           Vi_SetDISAttr_x247f4
    Vi_SetDISAttr_x24848:
    /*00024848*/ ADD         R2, SP, #92                 @ 0x5c 
    /*0002484c*/ MOV         R1, R5 
    /*00024850*/ MOV         R0, R7 
    /*00024854*/ STR         R3, [SP, #20] 
    /*00024858*/ BL          0x0000000000024858          @ VI_DRV_GetChnLDCV2AttrSet [R_ARM_CALL: .text+0x2a104] 
    /*0002485c*/ LDR         R2, [SP, #92]               @ 0x5c 
    /*00024860*/ CMP         R2, #0 
    /*00024864*/ BNE         Vi_SetDISAttr_x24418
    /*00024868*/ LDR         R3, [SP, #20] 
    /*0002486c*/ ADD         R4, FP, #172                @ 0xac 
    /*00024870*/ MOVW        R6, #0                      @ VI_DIS_WaitLdcV2CallBack [R_ARM_MOVW_ABS_NC: .text+0x22bf8] 
    /*00024874*/ ADD         R8, SP, #40                 @ 0x28 
    /*00024878*/ ADD         R4, R3, R4 
    /*0002487c*/ MOVT        R6, #0                      @ VI_DIS_WaitLdcV2CallBack [R_ARM_MOVT_ABS: .text+0x22bf8] 
    /*00024880*/ B           Vi_SetDISAttr_x24890
    Vi_SetDISAttr_x24884:
    /*00024884*/ BL          0x0000000000024884          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00024888*/ CMP         R0, #0 
    /*0002488c*/ BLT         Vi_SetDISAttr_x248b0
    Vi_SetDISAttr_x24890:
    /*00024890*/ MOV         R0, R8 
    /*00024894*/ BL          0x0000000000024894          @ VI_DIS_WaitLdcV2CallBack [R_ARM_CALL: .text+0x22bf8] 
    /*00024898*/ MOV         R3, #100                    @ 0x64 
    /*0002489c*/ MOV         R2, R8 
    /*000248a0*/ MOV         R1, R6 
    /*000248a4*/ CMP         R0, #0 
    /*000248a8*/ MOV         R0, R4 
    /*000248ac*/ BEQ         Vi_SetDISAttr_x24884
    Vi_SetDISAttr_x248b0:
    /*000248b0*/ MOV         R1, R5 
    /*000248b4*/ MOV         R0, R7 
    /*000248b8*/ BL          0x00000000000248B8          @ Vi_DeInitLocalDisAlgorithm [R_ARM_CALL: .text+0x21888] 
    /*000248bc*/ SUBS        R4, R0, #0 
    /*000248c0*/ BEQ         Vi_SetDISAttr_x248f0
    /*000248c4*/ MOV         R3, #420                    @ 0x1a4 
    /*000248c8*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaab8] 
    /*000248cc*/ STR         R3, [SP] 
    /*000248d0*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaab8] 
    /*000248d4*/ STR         R4, [SP, #12] 
    /*000248d8*/ MOV         R1, #16 
    /*000248dc*/ STR         R5, [SP, #8] 
    /*000248e0*/ MOV         R0, #3 
    /*000248e4*/ STR         R7, [SP, #4] 
    /*000248e8*/ LDR         R3, [PC, #52]               @ 0x0000000000024924 
    /*000248ec*/ BL          0x00000000000248EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    Vi_SetDISAttr_x248f0:
    /*000248f0*/ MOV         R3, #468                    @ 0x1d4 
    /*000248f4*/ MOVW        R2, #38884                  @ 0x97e4 
    /*000248f8*/ MLA         R5, R3, R5, R9 
    /*000248fc*/ MOV         R3, #0 
    /*00024900*/ STR         R3, [R5, R2] 
    /*00024904*/ B           Vi_SetDISAttr_x24418
    Vi_SetDISAttr_x24908:
    /*00024908*/ MOVW        R3, #325                    @ 0x145 
    /*0002490c*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xab88] 
    /*00024910*/ STR         R5, [SP, #8] 
    /*00024914*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0xab88] 
    /*00024918*/ STR         R7, [SP, #4] 
    /*0002491c*/ STR         R3, [SP] 
    /*00024920*/ B           Vi_SetDISAttr_x24400
    /*00024924*/ ANDEQ       R1, R0, R0, LSR #14 
FUNC_END Vi_SetDISAttr


FUNC_BEGIN VI_DISBypassTaskCallBack
    /*00024928*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002492c*/ MOVW        R3, #6264                   @ 0x1878 
    /*00024930*/ MOV         FP, R1 
    /*00024934*/ MOV         R4, #696                    @ 0x2b8 
    /*00024938*/ MUL         R1, R3, R0 
    /*0002493c*/ MOVW        R3, #0                      @ g_astPicInfo [R_ARM_MOVW_ABS_NC: .bss+0x1da8] 
    /*00024940*/ MLA         R4, R4, FP, R1 
    /*00024944*/ MOVT        R3, #0                      @ g_astPicInfo [R_ARM_MOVT_ABS: .bss+0x1da8] 
    /*00024948*/ ADD         IP, R2, #720                @ 0x2d0 
    /*0002494c*/ ADD         R1, R2, #688                @ 0x2b0 
    /*00024950*/ MOV         R5, R2 
    /*00024954*/ ADD         R2, R2, #704                @ 0x2c0 
    /*00024958*/ ADD         R4, R4, R3 
    /*0002495c*/ MOV         R6, #0 
    /*00024960*/ MOV         R7, #0 
    /*00024964*/ MOV         R8, #32768                  @ 0x8000 
    /*00024968*/ STRD        R6, [R1] 
    /*0002496c*/ MOV         R9, #0 
    /*00024970*/ MOV         SL, R0 
    /*00024974*/ STRD        R8, [R1, #-8] 
    /*00024978*/ MOV         R0, R4 
    /*0002497c*/ STRD        R6, [R2, #-8] 
    /*00024980*/ STRD        R6, [R2] 
    /*00024984*/ MOV         R1, R5 
    /*00024988*/ STRD        R6, [IP] 
    /*0002498c*/ MOV         R2, #336                    @ 0x150 
    /*00024990*/ STRD        R8, [IP, #-8] 
    /*00024994*/ BL          0x0000000000024994          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00024998*/ LDR         R3, [R5, #760]              @ 0x2f8 
    /*0002499c*/ STR         R3, [R4, #692]              @ 0x2b4 
    /*000249a0*/ BL          0x00000000000249A0          @ VI_IsGdcExist [R_ARM_CALL: .text+0x21748] 
    /*000249a4*/ SUBS        R6, R0, #0 
    /*000249a8*/ BNE         VI_DISBypassTaskCallBack_x24a10
    /*000249ac*/ BL          0x00000000000249AC          @ VI_IsVgsExist [R_ARM_CALL: .text+0x170e8] 
    /*000249b0*/ MOV         R1, FP 
    /*000249b4*/ MOV         R2, R4 
    /*000249b8*/ SUBS        R3, R0, #0 
    /*000249bc*/ MOV         R0, SL 
    /*000249c0*/ BNE         VI_DISBypassTaskCallBack_x24a04
    /*000249c4*/ STR         R3, [R4, #688]              @ 0x2b0 
    /*000249c8*/ BL          0x00000000000249C8          @ VI_ProcSendPic [R_ARM_CALL: .text+0x26e8] 
    VI_DISBypassTaskCallBack_x249cc:
    /*000249cc*/ MOV         R4, #176                    @ 0xb0 
    /*000249d0*/ MOV         R0, R5 
    /*000249d4*/ MUL         R4, R4, SL 
    /*000249d8*/ MOV         R1, #0 
    /*000249dc*/ BL          0x00000000000249DC          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*000249e0*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*000249e4*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*000249e8*/ ADD         R0, R4, #28 
    /*000249ec*/ ADD         R0, R5, R0 
    /*000249f0*/ BL          0x00000000000249F0          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*000249f4*/ ADD         R0, R4, #88                 @ 0x58 
    /*000249f8*/ ADD         R0, R5, R0 
    /*000249fc*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    VI_DISBypassTaskCallBack_x24a00:
    /*00024a00*/ B           VI_DISBypassTaskCallBack_x24a00@ osal_wakeup [R_ARM_JUMP24: +0x0] 
    VI_DISBypassTaskCallBack_x24a04:
    /*00024a04*/ STR         R6, [R4, #688]              @ 0x2b0 
    /*00024a08*/ BL          0x0000000000024A08          @ VI_SubmitFrame2Vgs [R_ARM_CALL: .text+0x17fd4] 
    /*00024a0c*/ B           VI_DISBypassTaskCallBack_x249cc
    VI_DISBypassTaskCallBack_x24a10:
    /*00024a10*/ MOV         R2, R4 
    /*00024a14*/ MOV         R1, FP 
    /*00024a18*/ MOV         R3, R5 
    /*00024a1c*/ MOV         R0, SL 
    /*00024a20*/ BL          0x0000000000024A20          @ VI_SubmitFrame2Gdc [R_ARM_CALL: .text+0x228d4] 
    /*00024a24*/ B           VI_DISBypassTaskCallBack_x249cc
FUNC_END VI_DISBypassTaskCallBack


FUNC_BEGIN VI_DISNormalTaskCallBack
    /*00024a28*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00024a2c*/ MOVW        R4, #6264                   @ 0x1878 
    /*00024a30*/ MUL         R4, R4, R0 
    /*00024a34*/ MOV         R3, #696                    @ 0x2b8 
    /*00024a38*/ MLA         R3, R3, R1, R4 
    /*00024a3c*/ LDR         IP, [R2, #760]              @ 0x2f8 
    /*00024a40*/ MOVW        R4, #0                      @ g_astPicInfo [R_ARM_MOVW_ABS_NC: .bss+0x1da8] 
    /*00024a44*/ MOVT        R4, #0                      @ g_astPicInfo [R_ARM_MOVT_ABS: .bss+0x1da8] 
    /*00024a48*/ MOV         R6, R0 
    /*00024a4c*/ MOV         R7, R1 
    /*00024a50*/ ADD         R4, R4, R3 
    /*00024a54*/ MOV         R1, R2 
    /*00024a58*/ MOV         R5, R2 
    /*00024a5c*/ MOV         R2, #336                    @ 0x150 
    /*00024a60*/ STR         IP, [R4, #692]              @ 0x2b4 
    /*00024a64*/ MOV         R0, R4 
    /*00024a68*/ BL          0x0000000000024A68          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00024a6c*/ BL          0x0000000000024A6C          @ VI_IsGdcExist [R_ARM_CALL: .text+0x21748] 
    /*00024a70*/ SUBS        R8, R0, #0 
    /*00024a74*/ BNE         VI_DISNormalTaskCallBack_x24ae8
    /*00024a78*/ BL          0x0000000000024A78          @ VI_IsVgsExist [R_ARM_CALL: .text+0x170e8] 
    /*00024a7c*/ MOV         R1, R7 
    /*00024a80*/ MOV         R2, R4 
    /*00024a84*/ SUBS        R3, R0, #0 
    /*00024a88*/ MOV         R0, R6 
    /*00024a8c*/ BNE         VI_DISNormalTaskCallBack_x24adc
    /*00024a90*/ STR         R3, [R4, #688]              @ 0x2b0 
    /*00024a94*/ BL          0x0000000000024A94          @ VI_ProcSendPic [R_ARM_CALL: .text+0x26e8] 
    VI_DISNormalTaskCallBack_x24a98:
    /*00024a98*/ MOV         R4, #176                    @ 0xb0 
    /*00024a9c*/ MOV         R1, #0 
    /*00024aa0*/ MUL         R4, R4, R6 
    /*00024aa4*/ MOV         R0, R5 
    /*00024aa8*/ BL          0x0000000000024AA8          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00024aac*/ ADD         R0, R5, #336                @ 0x150 
    /*00024ab0*/ MOV         R1, #0 
    /*00024ab4*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00024ab8*/ BL          0x0000000000024AB8          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00024abc*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00024ac0*/ ADD         R0, R4, #28 
    /*00024ac4*/ ADD         R0, R5, R0 
    /*00024ac8*/ BL          0x0000000000024AC8          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*00024acc*/ ADD         R0, R4, #88                 @ 0x58 
    /*00024ad0*/ ADD         R0, R5, R0 
    /*00024ad4*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_DISNormalTaskCallBack_x24ad8:
    /*00024ad8*/ B           VI_DISNormalTaskCallBack_x24ad8@ osal_wakeup [R_ARM_JUMP24: +0x0] 
    VI_DISNormalTaskCallBack_x24adc:
    /*00024adc*/ STR         R8, [R4, #688]              @ 0x2b0 
    /*00024ae0*/ BL          0x0000000000024AE0          @ VI_SubmitFrame2Vgs [R_ARM_CALL: .text+0x17fd4] 
    /*00024ae4*/ B           VI_DISNormalTaskCallBack_x24a98
    VI_DISNormalTaskCallBack_x24ae8:
    /*00024ae8*/ MOV         R2, R4 
    /*00024aec*/ MOV         R1, R7 
    /*00024af0*/ MOV         R3, R5 
    /*00024af4*/ MOV         R0, R6 
    /*00024af8*/ BL          0x0000000000024AF8          @ VI_SubmitFrame2Gdc [R_ARM_CALL: .text+0x228d4] 
    /*00024afc*/ B           VI_DISNormalTaskCallBack_x24a98
FUNC_END VI_DISNormalTaskCallBack


FUNC_BEGIN VI_DISTaskCallBack
    /*00024b00*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00024b04*/ MOV         R4, #176                    @ 0xb0 
    /*00024b08*/ MUL         R4, R4, R1 
    /*00024b0c*/ MOVW        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00024b10*/ MOVT        R5, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00024b14*/ MOV         R6, R1 
    /*00024b18*/ MOV         R8, R2 
    /*00024b1c*/ MOV         R7, R3 
    /*00024b20*/ ADD         R0, R4, #160                @ 0xa0 
    /*00024b24*/ ADD         R0, R5, R0 
    /*00024b28*/ BL          0x0000000000024B28          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*00024b2c*/ ADD         R0, R4, #168                @ 0xa8 
    /*00024b30*/ ADD         R0, R5, R0 
    /*00024b34*/ BL          0x0000000000024B34          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00024b38*/ LDR         R3, [R7, #672]              @ 0x2a0 
    /*00024b3c*/ MOV         R2, R7 
    /*00024b40*/ MOV         R1, R8 
    /*00024b44*/ CMP         R3, #0 
    /*00024b48*/ MOV         R0, R6 
    /*00024b4c*/ BEQ         VI_DISTaskCallBack_x24b58
    /*00024b50*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_DISTaskCallBack_x24b54:
    /*00024b54*/ B           VI_DISTaskCallBack_x24b54   @ VI_DISNormalTaskCallBack [R_ARM_JUMP24: .text+0x24a28] 
    VI_DISTaskCallBack_x24b58:
    /*00024b58*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_DISTaskCallBack_x24b5c:
    /*00024b5c*/ B           VI_DISTaskCallBack_x24b5c   @ VI_DISBypassTaskCallBack [R_ARM_JUMP24: .text+0x24928] 
FUNC_END VI_DISTaskCallBack


FUNC_BEGIN VI_IsDISByTask
    /*00024b60*/ LDR         R3, [R0, #408]              @ 0x198 
    /*00024b64*/ CMP         R3, #0 
    /*00024b68*/ CMPNE       R1, #0 
    /*00024b6c*/ MOVEQ       R1, #1 
    /*00024b70*/ MOVNE       R1, #0 
    /*00024b74*/ BEQ         VI_IsDISByTask_x24b88
    /*00024b78*/ CMP         R3, #1 
    /*00024b7c*/ BEQ         VI_IsDISByTask_x24b90
    /*00024b80*/ MOV         R0, R1 
    /*00024b84*/ BX          LR 
    VI_IsDISByTask_x24b88:
    /*00024b88*/ MOV         R0, #1 
    /*00024b8c*/ BX          LR 
    VI_IsDISByTask_x24b90:
    /*00024b90*/ LDR         R0, [R0, #128]              @ 0x80 
    /*00024b94*/ SUB         R0, R0, #2 
    /*00024b98*/ CLZ         R0, R0 
    /*00024b9c*/ LSR         R0, R0, #5 
    /*00024ba0*/ BX          LR 
FUNC_END VI_IsDISByTask


FUNC_BEGIN VI_SubmitFrame2Dis
    /*00024ba4*/ MOVW        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00024ba8*/ MOVT        IP, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00024bac*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00024bb0*/ MOV         R6, R1 
    /*00024bb4*/ LDR         R1, [IP, R0, LSL #2] 
    /*00024bb8*/ SUB         SP, SP, #36                 @ 0x24 
    /*00024bbc*/ MOV         SL, R2 
    /*00024bc0*/ MOV         R7, R0 
    /*00024bc4*/ MOVW        R0, #39176                  @ 0x9908 
    /*00024bc8*/ MOV         R9, R3 
    /*00024bcc*/ MOV         IP, R1 
    /*00024bd0*/ STR         R1, [SP, #8] 
    /*00024bd4*/ MOV         R1, #468                    @ 0x1d4 
    /*00024bd8*/ MLA         R2, R1, R6, IP 
    /*00024bdc*/ LDR         R8, [R2, R0] 
    /*00024be0*/ CMP         R8, #0 
    /*00024be4*/ BEQ         VI_SubmitFrame2Dis_x24e50
    /*00024be8*/ MOVW        R3, #39624                  @ 0x9ac8 
    /*00024bec*/ LDR         FP, [R2, R3] 
    /*00024bf0*/ CMP         FP, #0 
    /*00024bf4*/ BEQ         VI_SubmitFrame2Dis_x24ed0
    /*00024bf8*/ MOVW        R1, #39572                  @ 0x9a94 
    /*00024bfc*/ LDR         R0, [R9] 
    /*00024c00*/ LDR         R1, [R2, R1] 
    /*00024c04*/ CMP         R1, #0 
    /*00024c08*/ CMPNE       R0, #0 
    /*00024c0c*/ BEQ         VI_SubmitFrame2Dis_x24da8
    /*00024c10*/ CMP         R1, #1 
    /*00024c14*/ BEQ         VI_SubmitFrame2Dis_x24d98
    VI_SubmitFrame2Dis_x24c18:
    /*00024c18*/ LDR         R3, [SP, #8] 
    /*00024c1c*/ MOV         R2, #468                    @ 0x1d4 
    /*00024c20*/ MOVW        R1, #39576                  @ 0x9a98 
    /*00024c24*/ MLA         R2, R2, R6, R3 
    /*00024c28*/ LDR         R2, [R2, R1] 
    /*00024c2c*/ CMP         R2, #0 
    /*00024c30*/ MOVEQ       R2, #1 
    /*00024c34*/ STREQ       R2, [FP, #672]              @ 0x2a0 
    /*00024c38*/ MOVNE       R2, #2 
    /*00024c3c*/ STRNE       R2, [FP, #672]              @ 0x2a0 
    /*00024c40*/ LDR         R2, [SL, #692]              @ 0x2b4 
    /*00024c44*/ CMP         R2, #1 
    /*00024c48*/ BNE         VI_SubmitFrame2Dis_x24c60
    VI_SubmitFrame2Dis_x24c4c:
    /*00024c4c*/ MOV         R2, #0 
    /*00024c50*/ STR         R2, [FP, #672]              @ 0x2a0 
    VI_SubmitFrame2Dis_x24c54:
    /*00024c54*/ LDR         R2, [R9] 
    /*00024c58*/ CMP         R2, #1 
    /*00024c5c*/ BEQ         VI_SubmitFrame2Dis_x24eac
    VI_SubmitFrame2Dis_x24c60:
    /*00024c60*/ MOV         R2, #3 
    /*00024c64*/ MOV         R0, #17 
    /*00024c68*/ STR         R2, [FP, #840]              @ 0x348 
    /*00024c6c*/ MOVW        R5, #39612                  @ 0x9abc 
    /*00024c70*/ BL          0x0000000000024C70          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024c74*/ LDR         R3, [SP, #8] 
    /*00024c78*/ MOV         R2, #468                    @ 0x1d4 
    /*00024c7c*/ MOVW        R1, #39164                  @ 0x98fc 
    /*00024c80*/ MOV         LR, #16 
    /*00024c84*/ MOV         R4, #0 
    /*00024c88*/ MLA         R2, R2, R6, R3 
    /*00024c8c*/ MOVW        IP, #0                      @ VI_DISTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x24b00] 
    /*00024c90*/ MOVT        IP, #0                      @ VI_DISTaskCallBack [R_ARM_MOVT_ABS: .text+0x24b00] 
    /*00024c94*/ LDR         R1, [R2, R1] 
    /*00024c98*/ LDR         R3, [R2, R5] 
    /*00024c9c*/ STR         R1, [SP, #12] 
    /*00024ca0*/ ADD         R1, R3, #2 
    /*00024ca4*/ STR         R1, [R2, R5] 
    /*00024ca8*/ MOV         R2, #336                    @ 0x150 
    /*00024cac*/ STR         R7, [FP, #832]              @ 0x340 
    /*00024cb0*/ MOV         R1, SL 
    /*00024cb4*/ STR         R6, [FP, #836]              @ 0x344 
    /*00024cb8*/ STR         LR, [FP, #828]              @ 0x33c 
    /*00024cbc*/ LDR         LR, [SL, #692]              @ 0x2b4 
    /*00024cc0*/ STR         IP, [FP, #824]              @ 0x338 
    /*00024cc4*/ STR         R4, [FP, #764]              @ 0x2fc 
    /*00024cc8*/ STR         LR, [FP, #760]              @ 0x2f8 
    /*00024ccc*/ MOV         R8, R0 
    /*00024cd0*/ MOV         R0, FP 
    /*00024cd4*/ BL          0x0000000000024CD4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00024cd8*/ MOV         R1, R4 
    /*00024cdc*/ MOV         R0, FP 
    /*00024ce0*/ BL          0x0000000000024CE0          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00024ce4*/ LDR         R2, [R9] 
    /*00024ce8*/ CMP         R2, #1 
    /*00024cec*/ BEQ         VI_SubmitFrame2Dis_x24e88
    VI_SubmitFrame2Dis_x24cf0:
    /*00024cf0*/ MOV         R5, #176                    @ 0xb0 
    /*00024cf4*/ MOVW        R4, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00024cf8*/ MUL         R5, R5, R7 
    /*00024cfc*/ MOVT        R4, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00024d00*/ MOV         R2, #16 
    /*00024d04*/ STR         R2, [FP, #332]              @ 0x14c 
    /*00024d08*/ ADD         R3, R5, #28 
    /*00024d0c*/ ADD         R3, R4, R3 
    /*00024d10*/ STR         R3, [SP, #16] 
    /*00024d14*/ MOV         R0, R3 
    /*00024d18*/ BL          0x0000000000024D18          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*00024d1c*/ ADD         R2, R5, #160                @ 0xa0 
    /*00024d20*/ ADD         R3, R4, R2 
    /*00024d24*/ STR         R3, [SP, #20] 
    /*00024d28*/ MOV         R0, R3 
    /*00024d2c*/ BL          0x0000000000024D2C          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*00024d30*/ LDR         R3, [SP, #8] 
    /*00024d34*/ MOV         R2, #468                    @ 0x1d4 
    /*00024d38*/ LDR         R8, [R8] 
    /*00024d3c*/ LDR         R0, [SP, #12] 
    /*00024d40*/ MOV         R1, FP 
    /*00024d44*/ MLA         R2, R2, R6, R3 
    /*00024d48*/ ADD         R2, R2, #39424              @ 0x9a00 
    /*00024d4c*/ ADD         R2, R2, #148                @ 0x94 
    /*00024d50*/ BLX         R8 
    /*00024d54*/ SUBS        R8, R0, #0 
    /*00024d58*/ BNE         VI_SubmitFrame2Dis_x24dc0
    VI_SubmitFrame2Dis_x24d5c:
    /*00024d5c*/ ADD         R5, R5, #140                @ 0x8c 
    /*00024d60*/ ADD         R1, SP, #28 
    /*00024d64*/ ADD         R4, R4, R5 
    /*00024d68*/ MOV         R0, R4 
    /*00024d6c*/ BL          0x0000000000024D6C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00024d70*/ LDR         R2, [R9] 
    /*00024d74*/ MOV         R1, R6 
    /*00024d78*/ MOV         R0, R7 
    /*00024d7c*/ BL          0x0000000000024D7C          @ VI_DRV_UpdateLastBufOkFlag [R_ARM_CALL: .text+0x2a3ec] 
    /*00024d80*/ MOV         R0, R4 
    /*00024d84*/ ADD         R1, SP, #28 
    /*00024d88*/ BL          0x0000000000024D88          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00024d8c*/ MOV         R0, R8 
    /*00024d90*/ ADD         SP, SP, #36                 @ 0x24 
    /*00024d94*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_SubmitFrame2Dis_x24d98:
    /*00024d98*/ MOVW        R1, #39292                  @ 0x997c 
    /*00024d9c*/ LDR         R2, [R2, R1] 
    /*00024da0*/ CMP         R2, #2 
    /*00024da4*/ BNE         VI_SubmitFrame2Dis_x24c18
    VI_SubmitFrame2Dis_x24da8:
    /*00024da8*/ MOV         R2, #0 
    /*00024dac*/ STR         R2, [FP, #672]              @ 0x2a0 
    /*00024db0*/ LDR         R2, [SL, #692]              @ 0x2b4 
    /*00024db4*/ CMP         R2, #1 
    /*00024db8*/ BEQ         VI_SubmitFrame2Dis_x24c4c
    /*00024dbc*/ B           VI_SubmitFrame2Dis_x24c54
    VI_SubmitFrame2Dis_x24dc0:
    /*00024dc0*/ MOV         R0, SL 
    /*00024dc4*/ MOV         R1, #0 
    /*00024dc8*/ BL          0x0000000000024DC8          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00024dcc*/ LDR         R2, [R9] 
    /*00024dd0*/ CMP         R2, #1 
    /*00024dd4*/ BEQ         VI_SubmitFrame2Dis_x24ec0
    VI_SubmitFrame2Dis_x24dd8:
    /*00024dd8*/ MOV         R1, #16 
    /*00024ddc*/ STR         R8, [SP, #4] 
    /*00024de0*/ MOVW        R3, #1387                   @ 0x56b 
    /*00024de4*/ ADD         SL, R5, #168                @ 0xa8 
    /*00024de8*/ STR         R3, [SP] 
    /*00024dec*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xae18] 
    /*00024df0*/ LDR         R3, [PC, #304]              @ 0x0000000000024f28 
    /*00024df4*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0xae18] 
    /*00024df8*/ MOV         R0, #3 
    /*00024dfc*/ ADD         SL, R4, SL 
    /*00024e00*/ BL          0x0000000000024E00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024e04*/ LDR         R0, [SP, #16] 
    /*00024e08*/ BL          0x0000000000024E08          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*00024e0c*/ LDR         R0, [SP, #20] 
    /*00024e10*/ BL          0x0000000000024E10          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*00024e14*/ MOV         R0, SL 
    /*00024e18*/ BL          0x0000000000024E18          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00024e1c*/ LDR         R2, [SP, #8] 
    /*00024e20*/ MOV         R3, #56                     @ 0x38 
    /*00024e24*/ MOVW        R1, #36660                  @ 0x8f34 
    /*00024e28*/ MOV         R0, SL 
    /*00024e2c*/ MLA         R3, R3, R6, R2 
    /*00024e30*/ LDR         R2, [R3, R1] 
    /*00024e34*/ ADD         R2, R2, #1 
    /*00024e38*/ STR         R2, [R3, R1] 
    /*00024e3c*/ BL          0x0000000000024E3C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00024e40*/ ADD         R0, R5, #88                 @ 0x58 
    /*00024e44*/ ADD         R0, R4, R0 
    /*00024e48*/ BL          0x0000000000024E48          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00024e4c*/ B           VI_SubmitFrame2Dis_x24d5c
    VI_SubmitFrame2Dis_x24e50:
    /*00024e50*/ MOVW        R3, #1298                   @ 0x512 
    /*00024e54*/ STR         R8, [SP, #4] 
    /*00024e58*/ STR         R3, [SP] 
    /*00024e5c*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa5e4] 
    /*00024e60*/ LDR         R3, [PC, #192]              @ 0x0000000000024f28 
    /*00024e64*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa5e4] 
    /*00024e68*/ MOV         R1, #16 
    /*00024e6c*/ MOV         R0, #7 
    /*00024e70*/ MOV         R5, #176                    @ 0xb0 
    /*00024e74*/ MOVW        R4, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00024e78*/ BL          0x0000000000024E78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024e7c*/ MUL         R5, R5, R7 
    /*00024e80*/ MOVT        R4, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00024e84*/ B           VI_SubmitFrame2Dis_x24d5c
    VI_SubmitFrame2Dis_x24e88:
    /*00024e88*/ ADD         R5, FP, #336                @ 0x150 
    /*00024e8c*/ MOV         R2, #336                    @ 0x150 
    /*00024e90*/ ADD         R1, SL, R2 
    /*00024e94*/ MOV         R0, R5 
    /*00024e98*/ BL          0x0000000000024E98          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00024e9c*/ MOV         R1, R4 
    /*00024ea0*/ MOV         R0, R5 
    /*00024ea4*/ BL          0x0000000000024EA4          @ VI_DRV_GetVb [R_ARM_CALL: .text+0x25b88] 
    /*00024ea8*/ B           VI_SubmitFrame2Dis_x24cf0
    VI_SubmitFrame2Dis_x24eac:
    /*00024eac*/ MOV         R1, #0 
    /*00024eb0*/ ADD         R0, SL, #336                @ 0x150 
    /*00024eb4*/ STR         R1, [R9] 
    /*00024eb8*/ BL          0x0000000000024EB8          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00024ebc*/ B           VI_SubmitFrame2Dis_x24c60
    VI_SubmitFrame2Dis_x24ec0:
    /*00024ec0*/ ADD         R0, FP, #336                @ 0x150 
    /*00024ec4*/ MOV         R1, #0 
    /*00024ec8*/ BL          0x0000000000024EC8          @ VI_DRV_PutVb [R_ARM_CALL: .text+0x25a8c] 
    /*00024ecc*/ B           VI_SubmitFrame2Dis_x24dd8
    VI_SubmitFrame2Dis_x24ed0:
    /*00024ed0*/ MOVW        R3, #1306                   @ 0x51a 
    /*00024ed4*/ MOV         R1, #16 
    /*00024ed8*/ STR         R3, [SP] 
    /*00024edc*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xadc0] 
    /*00024ee0*/ LDR         R3, [PC, #64]               @ 0x0000000000024f28 
    /*00024ee4*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0xadc0] 
    /*00024ee8*/ MOV         R0, #4 
    /*00024eec*/ MOV         R5, #176                    @ 0xb0 
    /*00024ef0*/ BL          0x0000000000024EF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024ef4*/ LDR         R2, [SP, #8] 
    /*00024ef8*/ MOV         R3, #56                     @ 0x38 
    /*00024efc*/ MOVW        R1, #36660                  @ 0x8f34 
    /*00024f00*/ MOVW        R8, #32777                  @ 0x8009 
    /*00024f04*/ MOVW        R4, #0                      @ g_astPipeSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x10] 
    /*00024f08*/ MLA         R3, R3, R6, R2 
    /*00024f0c*/ MOVT        R8, #40976                  @ 0xa010 
    /*00024f10*/ MUL         R5, R5, R7 
    /*00024f14*/ MOVT        R4, #0                      @ g_astPipeSynchCtx [R_ARM_MOVT_ABS: .bss+0x10] 
    /*00024f18*/ LDR         R2, [R3, R1] 
    /*00024f1c*/ ADD         R2, R2, #1 
    /*00024f20*/ STR         R2, [R3, R1] 
    /*00024f24*/ B           VI_SubmitFrame2Dis_x24d5c
    /*00024f28*/ ANDEQ       R1, R0, R0, LSR R7 
FUNC_END VI_SubmitFrame2Dis


FUNC_BEGIN VI_COMM_PrepareDISVBAndInfo
    /*00024f2c*/ MOVW        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00024f30*/ MOVT        R3, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00024f34*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00024f38*/ MVN         R4, #0 
    /*00024f3c*/ LDR         R5, [R3, R0, LSL #2] 
    /*00024f40*/ MOV         R3, #468                    @ 0x1d4 
    /*00024f44*/ STR         R4, [R2, #664]              @ 0x298 
    /*00024f48*/ MOVW        R4, #39572                  @ 0x9a94 
    /*00024f4c*/ SUB         SP, SP, #8 
    /*00024f50*/ MLA         R3, R3, R1, R5 
    /*00024f54*/ LDR         R6, [R3, R4] 
    /*00024f58*/ CMP         R6, #1 
    /*00024f5c*/ MOVNE       R4, #0 
    /*00024f60*/ BEQ         VI_COMM_PrepareDISVBAndInfo_x24f70
    VI_COMM_PrepareDISVBAndInfo_x24f64:
    /*00024f64*/ MOV         R0, R4 
    /*00024f68*/ ADD         SP, SP, #8 
    /*00024f6c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_COMM_PrepareDISVBAndInfo_x24f70:
    /*00024f70*/ MOVW        R4, #39292                  @ 0x997c 
    /*00024f74*/ LDR         R4, [R3, R4] 
    /*00024f78*/ CMP         R4, #3 
    /*00024f7c*/ CMPNE       R4, #1 
    /*00024f80*/ MOVLS       R4, #1 
    /*00024f84*/ MOVHI       R4, #0 
    /*00024f88*/ BHI         VI_COMM_PrepareDISVBAndInfo_x24f64
    /*00024f8c*/ LDR         IP, [R2, #24] 
    /*00024f90*/ ADD         R7, R2, #336                @ 0x150 
    /*00024f94*/ MOV         R5, R2 
    /*00024f98*/ MOV         R3, #0 
    /*00024f9c*/ MOV         R8, #16 
    /*00024fa0*/ STR         R8, [R2, #668]              @ 0x29c 
    /*00024fa4*/ MOV         R2, R7 
    /*00024fa8*/ STR         IP, [R5, #360]              @ 0x168 
    /*00024fac*/ STR         R3, [R5, #356]              @ 0x164 
    /*00024fb0*/ MOV         SL, R0 
    /*00024fb4*/ MOV         R9, R1 
    /*00024fb8*/ BL          0x0000000000024FB8          @ VI_DRV_DISGetVB [R_ARM_CALL: .text+0x33258] 
    /*00024fbc*/ SUBS        R4, R0, #0 
    /*00024fc0*/ BNE         VI_COMM_PrepareDISVBAndInfo_x24fdc
    /*00024fc4*/ STR         R6, [R5, #708]              @ 0x2c4 
    /*00024fc8*/ MOV         R2, R7 
    /*00024fcc*/ MOV         R1, R9 
    /*00024fd0*/ MOV         R0, SL 
    /*00024fd4*/ BL          0x0000000000024FD4          @ VI_DRV_PrepareChnDsfPicInfo [R_ARM_CALL: .text+0x32fa0] 
    /*00024fd8*/ B           VI_COMM_PrepareDISVBAndInfo_x24f64
    VI_COMM_PrepareDISVBAndInfo_x24fdc:
    /*00024fdc*/ MOVW        R3, #1425                   @ 0x591 
    /*00024fe0*/ STR         SL, [SP, #4] 
    /*00024fe4*/ STR         R3, [SP] 
    /*00024fe8*/ MOV         R1, R8 
    /*00024fec*/ MOVW        R2, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xae54] 
    /*00024ff0*/ LDR         R3, [PC, #12]               @ 0x0000000000025004 
    /*00024ff4*/ MOVT        R2, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0xae54] 
    /*00024ff8*/ MOV         R0, #3 
    /*00024ffc*/ BL          0x0000000000024FFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025000*/ B           VI_COMM_PrepareDISVBAndInfo_x24f64
    /*00025004*/ ANDEQ       R1, R0, R4, ASR #14 
FUNC_END VI_COMM_PrepareDISVBAndInfo


FUNC_BEGIN Vi_DestroyDisChn
    /*00025008*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0002500c*/ MOV         R7, R0 
    /*00025010*/ SUB         SP, SP, #24 
    /*00025014*/ MOV         R0, #17 
    /*00025018*/ MOV         R6, R1 
    /*0002501c*/ BL          0x000000000002501C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025020*/ LDR         R3, [PC, #392]              @ 0x00000000000251b0 
    /*00025024*/ MOV         R4, #176                    @ 0xb0 
    /*00025028*/ ADD         R1, SP, #20 
    /*0002502c*/ MLA         R4, R4, R7, R3 
    /*00025030*/ MOV         R9, R0 
    /*00025034*/ MOV         R0, R4 
    /*00025038*/ BL          0x0000000000025038          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0002503c*/ MOVW        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVW_ABS_NC: .bss+0x2d0] 
    /*00025040*/ MOVT        R2, #0                      @ g_pastPipeMkpCtx [R_ARM_MOVT_ABS: .bss+0x2d0] 
    /*00025044*/ MOV         R3, #468                    @ 0x1d4 
    /*00025048*/ MOVW        IP, #38432                  @ 0x9620 
    /*0002504c*/ MOVW        R1, #38420                  @ 0x9614 
    /*00025050*/ LDR         R8, [R2, R7, LSL #2] 
    /*00025054*/ MLA         R3, R3, R6, R8 
    /*00025058*/ LDR         R5, [R3, IP] 
    /*0002505c*/ LDR         SL, [R3, R1] 
    /*00025060*/ CMP         R5, #0 
    /*00025064*/ BEQ         Vi_DestroyDisChn_x250e4
    /*00025068*/ MOVW        LR, #38880                  @ 0x97e0 
    /*0002506c*/ MOV         R2, #0 
    /*00025070*/ MOV         R0, R4 
    /*00025074*/ MOVW        R5, #39624                  @ 0x9ac8 
    /*00025078*/ LDR         R4, [R3, LR] 
    /*0002507c*/ ADD         R1, SP, #20 
    /*00025080*/ STR         R2, [R3, LR] 
    /*00025084*/ MOVW        LR, #38876                  @ 0x97dc 
    /*00025088*/ STR         R2, [R3, IP] 
    /*0002508c*/ MOV         IP, #1 
    /*00025090*/ STR         R2, [R3, R5] 
    /*00025094*/ STR         IP, [R3, LR] 
    /*00025098*/ BL          0x0000000000025098          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0002509c*/ LDR         R3, [R9, #8] 
    /*000250a0*/ MOV         R0, SL 
    /*000250a4*/ BLX         R3 
    /*000250a8*/ SUBS        R5, R0, #0 
    /*000250ac*/ BNE         Vi_DestroyDisChn_x25154
    Vi_DestroyDisChn_x250b0:
    /*000250b0*/ MOV         R3, #468                    @ 0x1d4 
    /*000250b4*/ MOVW        R2, #38884                  @ 0x97e4 
    /*000250b8*/ MLA         R3, R3, R6, R8 
    /*000250bc*/ LDR         R3, [R3, R2] 
    /*000250c0*/ CMP         R3, #0 
    /*000250c4*/ BNE         Vi_DestroyDisChn_x25120
    /*000250c8*/ CMP         R4, #0 
    /*000250cc*/ BEQ         Vi_DestroyDisChn_x250d8
    Vi_DestroyDisChn_x250d0:
    /*000250d0*/ MOV         R0, R4 
    /*000250d4*/ BL          0x00000000000250D4          @ osal_vfree [R_ARM_CALL: +0x0] 
    Vi_DestroyDisChn_x250d8:
    /*000250d8*/ MOV         R0, R5 
    /*000250dc*/ ADD         SP, SP, #24 
    /*000250e0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    Vi_DestroyDisChn_x250e4:
    /*000250e4*/ STR         SL, [SP, #4] 
    /*000250e8*/ MOVW        R3, #1457                   @ 0x5b1 
    /*000250ec*/ MOV         R1, #16 
    /*000250f0*/ STR         R3, [SP] 
    /*000250f4*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa5e4] 
    /*000250f8*/ LDR         R3, [PC, #180]              @ 0x00000000000251b4 
    /*000250fc*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa5e4] 
    /*00025100*/ MOV         R0, #7 
    /*00025104*/ BL          0x0000000000025104          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025108*/ MOV         R0, R4 
    /*0002510c*/ ADD         R1, SP, #20 
    /*00025110*/ BL          0x0000000000025110          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00025114*/ MOV         R0, R5 
    /*00025118*/ ADD         SP, SP, #24 
    /*0002511c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    Vi_DestroyDisChn_x25120:
    /*00025120*/ MOV         R1, R6 
    /*00025124*/ MOV         R0, R7 
    /*00025128*/ BL          0x0000000000025128          @ Vi_DeInitLocalDisAlgorithm [R_ARM_CALL: .text+0x21888] 
    /*0002512c*/ SUBS        R5, R0, #0 
    /*00025130*/ BNE         Vi_DestroyDisChn_x25180
    Vi_DestroyDisChn_x25134:
    /*00025134*/ MOV         R2, #468                    @ 0x1d4 
    /*00025138*/ CMP         R4, #0 
    /*0002513c*/ MLA         R6, R2, R6, R8 
    /*00025140*/ MOVW        R3, #38884                  @ 0x97e4 
    /*00025144*/ MOV         R2, #0 
    /*00025148*/ STR         R2, [R6, R3] 
    /*0002514c*/ BNE         Vi_DestroyDisChn_x250d0
    /*00025150*/ B           Vi_DestroyDisChn_x250d8
    Vi_DestroyDisChn_x25154:
    /*00025154*/ MOVW        R3, #1476                   @ 0x5c4 
    /*00025158*/ STR         R5, [SP, #8] 
    /*0002515c*/ STR         R3, [SP] 
    /*00025160*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xae8c] 
    /*00025164*/ STR         SL, [SP, #4] 
    /*00025168*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0xae8c] 
    /*0002516c*/ LDR         R3, [PC, #64]               @ 0x00000000000251b4 
    /*00025170*/ MOV         R1, #16 
    /*00025174*/ MOV         R0, #3 
    /*00025178*/ BL          0x0000000000025178          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002517c*/ B           Vi_DestroyDisChn_x250b0
    Vi_DestroyDisChn_x25180:
    /*00025180*/ MOVW        R3, #1484                   @ 0x5cc 
    /*00025184*/ STR         R5, [SP, #12] 
    /*00025188*/ STR         R3, [SP] 
    /*0002518c*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaab8] 
    /*00025190*/ STR         R6, [SP, #8] 
    /*00025194*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaab8] 
    /*00025198*/ STR         R7, [SP, #4] 
    /*0002519c*/ MOV         R1, #16 
    /*000251a0*/ LDR         R3, [PC, #12]               @ 0x00000000000251b4 
    /*000251a4*/ MOV         R0, #3 
    /*000251a8*/ BL          0x00000000000251A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000251ac*/ B           Vi_DestroyDisChn_x25134
    /*000251b0*/ ANDEQ       R0, R0, IP, LSL #1          @ g_astPipeSynchCtx [R_ARM_ABS32: .bss+0x10] 
    /*000251b4*/ ANDEQ       R1, R0, R0, ROR #14 
FUNC_END Vi_DestroyDisChn


FUNC_BEGIN VI_DRV_StartProc.part.14
    /*000251b8*/ PUSH        {R4, LR} 
    /*000251bc*/ MOV         R0, #0 
    /*000251c0*/ BL          0x00000000000251C0          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*000251c4*/ MOV         R1, #1024                   @ 0x400 
    /*000251c8*/ MOV         R4, R0 
    /*000251cc*/ BL          0x00000000000251CC          @ VI_HAL_SetMask [R_ARM_CALL: .text+0x3522c] 
    /*000251d0*/ MOV         R0, R4 
    /*000251d4*/ MOV         R1, #1 
    /*000251d8*/ BL          0x00000000000251D8          @ VI_HAL_SetProcVideoEnable [R_ARM_CALL: .text+0x353f8] 
    /*000251dc*/ MOV         R0, R4 
    /*000251e0*/ MOV         R1, #1 
    /*000251e4*/ BL          0x00000000000251E4          @ VI_HAL_SetBeEnable [R_ARM_CALL: .text+0x35408] 
    /*000251e8*/ MOV         R0, #0 
    /*000251ec*/ BL          0x00000000000251EC          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*000251f0*/ POP         {R4, LR} 
    VI_DRV_StartProc.part.14_x251f4:
    /*000251f4*/ B           VI_DRV_StartProc.part.14_x251f4@ VI_HAL_ProcRegNew [R_ARM_JUMP24: .text+0x353d8] 
FUNC_END VI_DRV_StartProc.part.14


FUNC_BEGIN VI_DRV_StopProc.part.15
    /*000251f8*/ PUSH        {R4, LR} 
    /*000251fc*/ MOV         R0, #0 
    /*00025200*/ BL          0x0000000000025200          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*00025204*/ MOV         R1, #0 
    /*00025208*/ MOV         R4, R0 
    /*0002520c*/ BL          0x000000000002520C          @ VI_HAL_SetMask [R_ARM_CALL: .text+0x3522c] 
    /*00025210*/ MOV         R0, R4 
    /*00025214*/ MOV         R1, #0 
    /*00025218*/ BL          0x0000000000025218          @ VI_HAL_SetProcVideoEnable [R_ARM_CALL: .text+0x353f8] 
    /*0002521c*/ MOV         R0, #0 
    /*00025220*/ BL          0x0000000000025220          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*00025224*/ POP         {R4, LR} 
    VI_DRV_StopProc.part.15_x25228:
    /*00025228*/ B           VI_DRV_StopProc.part.15_x25228@ VI_HAL_ProcRegNew [R_ARM_JUMP24: .text+0x353d8] 
FUNC_END VI_DRV_StopProc.part.15


FUNC_BEGIN VI_DRV_SetChnIntfCfg.part.17
    /*0002522c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00025230*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00025234*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00025238*/ MOV         R2, #356                    @ 0x164 
    /*0002523c*/ SUB         SP, SP, #16 
    /*00025240*/ MOV         R4, R0 
    /*00025244*/ MLA         R2, R2, R0, R6 
    /*00025248*/ LDR         R3, [R2, #36]               @ 0x24 
    /*0002524c*/ CMP         R3, #1 
    /*00025250*/ BLS         VI_DRV_SetChnIntfCfg.part.17_x25448
    /*00025254*/ CMP         R3, #2 
    /*00025258*/ BEQ         VI_DRV_SetChnIntfCfg.part.17_x2540c
    /*0002525c*/ SUB         R1, R3, #3 
    /*00025260*/ CMP         R1, #1 
    /*00025264*/ BLS         VI_DRV_SetChnIntfCfg.part.17_x25370
    /*00025268*/ SUB         R3, R3, #5 
    /*0002526c*/ CMP         R3, #5 
    /*00025270*/ BLS         VI_DRV_SetChnIntfCfg.part.17_x25364
    VI_DRV_SetChnIntfCfg.part.17_x25274:
    /*00025274*/ MOV         R1, #0 
    /*00025278*/ MOV         R0, R4 
    /*0002527c*/ BL          0x000000000002527C          @ VI_HAL_SetChnCombineMode [R_ARM_CALL: .text+0x35fd8] 
    VI_DRV_SetChnIntfCfg.part.17_x25280:
    /*00025280*/ MOV         R3, #356                    @ 0x164 
    /*00025284*/ MLA         R3, R3, R4, R6 
    /*00025288*/ LDR         R1, [R3, #36]               @ 0x24 
    /*0002528c*/ CMP         R1, #3 
    /*00025290*/ CMPNE       R1, #0 
    /*00025294*/ BEQ         VI_DRV_SetChnIntfCfg.part.17_x253f8
    /*00025298*/ CMP         R1, #1 
    /*0002529c*/ BEQ         VI_DRV_SetChnIntfCfg.part.17_x25438
    /*000252a0*/ CMP         R1, #2 
    /*000252a4*/ BEQ         VI_DRV_SetChnIntfCfg.part.17_x25438
    /*000252a8*/ CMP         R1, #4 
    /*000252ac*/ BEQ         VI_DRV_SetChnIntfCfg.part.17_x25460
    /*000252b0*/ SUB         R1, R1, #5 
    /*000252b4*/ CMP         R1, #5 
    /*000252b8*/ BLS         VI_DRV_SetChnIntfCfg.part.17_x25424
    /*000252bc*/ MOV         R8, #4 
    VI_DRV_SetChnIntfCfg.part.17_x252c0:
    /*000252c0*/ MOV         R5, #356                    @ 0x164 
    /*000252c4*/ MOV         R0, R4 
    /*000252c8*/ MLA         R5, R5, R4, R6 
    /*000252cc*/ LDR         R1, [R5, #52]               @ 0x34 
    /*000252d0*/ BL          0x00000000000252D0          @ VI_HAL_SetChnScanMode [R_ARM_CALL: .text+0x36054] 
    /*000252d4*/ LDR         R3, [R5, #36]               @ 0x24 
    /*000252d8*/ SUB         R2, R3, #1 
    /*000252dc*/ CMP         R2, #1 
    /*000252e0*/ BLS         VI_DRV_SetChnIntfCfg.part.17_x2538c
    /*000252e4*/ SUB         R3, R3, #5 
    /*000252e8*/ CMP         R3, #5 
    /*000252ec*/ BLS         VI_DRV_SetChnIntfCfg.part.17_x2538c
    /*000252f0*/ MOV         R0, R4 
    /*000252f4*/ MOV         R1, #0 
    /*000252f8*/ BL          0x00000000000252F8          @ VI_HAL_SetChnFixcode [R_ARM_CALL: .text+0x365f0] 
    /*000252fc*/ MOV         R0, R4 
    /*00025300*/ MOV         R1, #0 
    /*00025304*/ BL          0x0000000000025304          @ VI_HAL_SetChnFtcPolar [R_ARM_CALL: .text+0x365f4] 
    /*00025308*/ MOV         R0, R4 
    /*0002530c*/ MOV         R1, #0 
    /*00025310*/ BL          0x0000000000025310          @ VI_HAL_SetChnCorrectEn [R_ARM_CALL: .text+0x36630] 
    /*00025314*/ LDR         R1, [R5, #72]               @ 0x48 
    /*00025318*/ MOV         R0, R4 
    /*0002531c*/ BL          0x000000000002531C          @ VI_HAL_SetChnYUVInputSeq [R_ARM_CALL: .text+0x36538] 
    /*00025320*/ LDR         R7, [R5, #96]               @ 0x60 
    /*00025324*/ LDR         R6, [R5, #92]               @ 0x5c 
    /*00025328*/ MOV         R1, R8 
    /*0002532c*/ LDR         LR, [R5, #88]               @ 0x58 
    /*00025330*/ MOV         R0, R4 
    /*00025334*/ LDR         IP, [R5, #84]               @ 0x54 
    /*00025338*/ LDR         R3, [R5, #80]               @ 0x50 
    /*0002533c*/ LDR         R2, [R5, #76]               @ 0x4c 
    /*00025340*/ STR         R7, [SP, #12] 
    /*00025344*/ STR         R6, [SP, #8] 
    /*00025348*/ STM         SP, {IP, LR} 
    /*0002534c*/ BL          0x000000000002534C          @ VI_HAL_SetChnSync [R_ARM_CALL: .text+0x36058] 
    /*00025350*/ MOV         R0, R4 
    /*00025354*/ MOV         R1, #1 
    /*00025358*/ ADD         SP, SP, #16 
    /*0002535c*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_DRV_SetChnIntfCfg.part.17_x25360:
    /*00025360*/ B           VI_DRV_SetChnIntfCfg.part.17_x25360@ VI_HAL_SetBT656En [R_ARM_JUMP24: .text+0x365b4] 
    VI_DRV_SetChnIntfCfg.part.17_x25364:
    /*00025364*/ LDR         R3, [R2, #136]              @ 0x88 
    /*00025368*/ CMP         R3, #0 
    /*0002536c*/ BNE         VI_DRV_SetChnIntfCfg.part.17_x25274
    VI_DRV_SetChnIntfCfg.part.17_x25370:
    /*00025370*/ MOV         R0, R4 
    /*00025374*/ MOV         R1, #1 
    /*00025378*/ BL          0x0000000000025378          @ VI_HAL_SetChnCombineMode [R_ARM_CALL: .text+0x35fd8] 
    /*0002537c*/ MOV         R1, #1 
    /*00025380*/ MOV         R0, R4 
    /*00025384*/ BL          0x0000000000025384          @ VI_HAL_SetChnCompMode [R_ARM_CALL: .text+0x3604c] 
    /*00025388*/ B           VI_DRV_SetChnIntfCfg.part.17_x25280
    VI_DRV_SetChnIntfCfg.part.17_x2538c:
    /*0002538c*/ MOV         R7, #356                    @ 0x164 
    /*00025390*/ MOV         R1, R8 
    /*00025394*/ MUL         R7, R7, R4 
    /*00025398*/ MOV         R0, R4 
    /*0002539c*/ ADD         R5, R6, R7 
    /*000253a0*/ LDR         IP, [R5, #92]               @ 0x5c 
    /*000253a4*/ LDR         R8, [R5, #96]               @ 0x60 
    /*000253a8*/ LDR         R3, [R5, #80]               @ 0x50 
    /*000253ac*/ LDR         R2, [R5, #76]               @ 0x4c 
    /*000253b0*/ LDR         LR, [R5, #88]               @ 0x58 
    /*000253b4*/ STR         R8, [SP, #12] 
    /*000253b8*/ STR         IP, [SP, #8] 
    /*000253bc*/ LDR         IP, [R5, #84]               @ 0x54 
    /*000253c0*/ STM         SP, {IP, LR} 
    /*000253c4*/ BL          0x00000000000253C4          @ VI_HAL_SetChnSync [R_ARM_CALL: .text+0x36058] 
    /*000253c8*/ ADD         R1, R7, #100                @ 0x64 
    /*000253cc*/ ADD         R1, R6, R1 
    /*000253d0*/ MOV         R0, R4 
    /*000253d4*/ BL          0x00000000000253D4          @ VI_HAL_SetChnTimingBlank [R_ARM_CALL: .text+0x363bc] 
    /*000253d8*/ LDR         R1, [R5, #72]               @ 0x48 
    /*000253dc*/ MOV         R0, R4 
    /*000253e0*/ BL          0x00000000000253E0          @ VI_HAL_SetChnYUVInputSeq [R_ARM_CALL: .text+0x36538] 
    /*000253e4*/ MOV         R0, R4 
    /*000253e8*/ MOV         R1, #0 
    /*000253ec*/ ADD         SP, SP, #16 
    /*000253f0*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_DRV_SetChnIntfCfg.part.17_x253f4:
    /*000253f4*/ B           VI_DRV_SetChnIntfCfg.part.17_x253f4@ VI_HAL_SetBT656En [R_ARM_JUMP24: .text+0x365b4] 
    VI_DRV_SetChnIntfCfg.part.17_x253f8:
    /*000253f8*/ MOV         R1, #0 
    /*000253fc*/ MOV         R0, R4 
    /*00025400*/ BL          0x0000000000025400          @ VI_HAL_SetChnInputMode [R_ARM_CALL: .text+0x36050] 
    /*00025404*/ MOV         R8, #0 
    /*00025408*/ B           VI_DRV_SetChnIntfCfg.part.17_x252c0
    VI_DRV_SetChnIntfCfg.part.17_x2540c:
    /*0002540c*/ LDR         R3, [R2, #136]              @ 0x88 
    /*00025410*/ CMP         R3, #0 
    /*00025414*/ BNE         VI_DRV_SetChnIntfCfg.part.17_x25274
    /*00025418*/ MOV         R1, #1 
    /*0002541c*/ BL          0x000000000002541C          @ VI_HAL_SetChnCombineMode [R_ARM_CALL: .text+0x35fd8] 
    /*00025420*/ B           VI_DRV_SetChnIntfCfg.part.17_x25280
    VI_DRV_SetChnIntfCfg.part.17_x25424:
    /*00025424*/ MOV         R1, #4 
    /*00025428*/ MOV         R0, R4 
    /*0002542c*/ BL          0x000000000002542C          @ VI_HAL_SetChnInputMode [R_ARM_CALL: .text+0x36050] 
    /*00025430*/ MOV         R8, #4 
    /*00025434*/ B           VI_DRV_SetChnIntfCfg.part.17_x252c0
    VI_DRV_SetChnIntfCfg.part.17_x25438:
    /*00025438*/ MOV         R0, R4 
    /*0002543c*/ MOV         R8, R1 
    /*00025440*/ BL          0x0000000000025440          @ VI_HAL_SetChnInputMode [R_ARM_CALL: .text+0x36050] 
    /*00025444*/ B           VI_DRV_SetChnIntfCfg.part.17_x252c0
    VI_DRV_SetChnIntfCfg.part.17_x25448:
    /*00025448*/ MOV         R1, #1 
    /*0002544c*/ BL          0x000000000002544C          @ VI_HAL_SetChnCombineMode [R_ARM_CALL: .text+0x35fd8] 
    /*00025450*/ MOV         R1, #0 
    /*00025454*/ MOV         R0, R4 
    /*00025458*/ BL          0x0000000000025458          @ VI_HAL_SetChnCompMode [R_ARM_CALL: .text+0x3604c] 
    /*0002545c*/ B           VI_DRV_SetChnIntfCfg.part.17_x25280
    VI_DRV_SetChnIntfCfg.part.17_x25460:
    /*00025460*/ MOV         R1, #3 
    /*00025464*/ MOV         R0, R4 
    /*00025468*/ BL          0x0000000000025468          @ VI_HAL_SetChnInputMode [R_ARM_CALL: .text+0x36050] 
    /*0002546c*/ MOV         R8, #3 
    /*00025470*/ B           VI_DRV_SetChnIntfCfg.part.17_x252c0
FUNC_END VI_DRV_SetChnIntfCfg.part.17


FUNC_BEGIN PRINT_PIPEVPSSMODE.part.24
    /*00025474*/ BIC         R3, R0, #2 
    /*00025478*/ CMP         R3, #1 
    /*0002547c*/ BEQ         PRINT_PIPEVPSSMODE.part.24_x254a0
    /*00025480*/ CMP         R0, #5 
    /*00025484*/ MOVW        R3, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaed0] 
    /*00025488*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaedc] 
    /*0002548c*/ MOVT        R3, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaed0] 
    /*00025490*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaedc] 
    /*00025494*/ MOVEQ       R0, R3 
    /*00025498*/ MOVNE       R0, R2 
    /*0002549c*/ BX          LR 
    PRINT_PIPEVPSSMODE.part.24_x254a0:
    /*000254a0*/ MOVW        R0, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaec8] 
    /*000254a4*/ MOVT        R0, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaec8] 
    /*000254a8*/ BX          LR 
FUNC_END PRINT_PIPEVPSSMODE.part.24


FUNC_BEGIN VI_DRV_GetViPortClockByClkSel
    /*000254ac*/ CMP         R0, #5 
    /*000254b0*/ MOVWLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x1774] 
    /*000254b4*/ MOVTLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x1774] 
    /*000254b8*/ LDRLS       R0, [R3, R0, LSL #2] 
    /*000254bc*/ MOVHI       R0, #150                    @ 0x96 
    /*000254c0*/ BX          LR 
FUNC_END VI_DRV_GetViPortClockByClkSel


FUNC_BEGIN VI_DRV_GetViProcClockByClkSel
    /*000254c4*/ CMP         R0, #3 
    /*000254c8*/ MOVWLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x1774] 
    /*000254cc*/ MOVTLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x1774] 
    /*000254d0*/ ADDLS       R3, R3, R0, LSL #2 
    /*000254d4*/ LDRLS       R0, [R3, #24] 
    /*000254d8*/ MOVHI       R0, #150                    @ 0x96 
    /*000254dc*/ BX          LR 
FUNC_END VI_DRV_GetViProcClockByClkSel


FUNC_BEGIN VI_DRV_BusClockEnable
    /*000254e0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000254e4*/ SUB         SP, SP, #28 
    /*000254e8*/ MOV         R3, #16 
    /*000254ec*/ STR         R0, [SP, #16] 
    /*000254f0*/ MOV         R0, #2 
    /*000254f4*/ STR         R1, [SP, #4] 
    /*000254f8*/ STR         R3, [SP, #12] 
    /*000254fc*/ BL          0x00000000000254FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025500*/ ADD         R2, SP, #4 
    /*00025504*/ MOV         R1, #45                     @ 0x2d 
    /*00025508*/ LDR         R3, [R0, #20] 
    /*0002550c*/ ADD         R0, SP, #12 
    /*00025510*/ BLX         R3 
    /*00025514*/ ADD         SP, SP, #28 
    /*00025518*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_BusClockEnable


FUNC_BEGIN VI_DRV_BusReset
    /*0002551c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00025520*/ SUB         SP, SP, #28 
    /*00025524*/ MOV         R3, #16 
    /*00025528*/ STR         R0, [SP, #16] 
    /*0002552c*/ MOV         R0, #2 
    /*00025530*/ STR         R1, [SP, #4] 
    /*00025534*/ STR         R3, [SP, #12] 
    /*00025538*/ BL          0x0000000000025538          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002553c*/ ADD         R2, SP, #4 
    /*00025540*/ MOV         R1, #44                     @ 0x2c 
    /*00025544*/ LDR         R3, [R0, #20] 
    /*00025548*/ ADD         R0, SP, #12 
    /*0002554c*/ BLX         R3 
    /*00025550*/ ADD         SP, SP, #28 
    /*00025554*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_BusReset


FUNC_BEGIN VI_DRV_PPCClockEnable
    /*00025558*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002555c*/ SUB         SP, SP, #28 
    /*00025560*/ MOV         R3, #16 
    /*00025564*/ STR         R0, [SP, #16] 
    /*00025568*/ MOV         R0, #2 
    /*0002556c*/ STR         R1, [SP, #4] 
    /*00025570*/ STR         R3, [SP, #12] 
    /*00025574*/ BL          0x0000000000025574          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025578*/ ADD         R2, SP, #4 
    /*0002557c*/ MOV         R1, #47                     @ 0x2f 
    /*00025580*/ LDR         R3, [R0, #20] 
    /*00025584*/ ADD         R0, SP, #12 
    /*00025588*/ BLX         R3 
    /*0002558c*/ ADD         SP, SP, #28 
    /*00025590*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_PPCClockEnable


FUNC_BEGIN VI_DRV_PPCReset
    /*00025594*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00025598*/ SUB         SP, SP, #28 
    /*0002559c*/ MOV         R3, #16 
    /*000255a0*/ STR         R0, [SP, #16] 
    /*000255a4*/ MOV         R0, #2 
    /*000255a8*/ STR         R1, [SP, #4] 
    /*000255ac*/ STR         R3, [SP, #12] 
    /*000255b0*/ BL          0x00000000000255B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000255b4*/ ADD         R2, SP, #4 
    /*000255b8*/ MOV         R1, #46                     @ 0x2e 
    /*000255bc*/ LDR         R3, [R0, #20] 
    /*000255c0*/ ADD         R0, SP, #12 
    /*000255c4*/ BLX         R3 
    /*000255c8*/ ADD         SP, SP, #28 
    /*000255cc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_PPCReset


FUNC_BEGIN VI_DRV_DevClockEnable
    /*000255d0*/ PUSH        {R4, R5, LR} 
    /*000255d4*/ SUB         SP, SP, #36                 @ 0x24 
    /*000255d8*/ MOV         R5, #16 
    /*000255dc*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x114] 
    /*000255e0*/ STR         R0, [SP, #24] 
    /*000255e4*/ MOV         R0, #2 
    /*000255e8*/ STR         R1, [SP, #12] 
    /*000255ec*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x114] 
    /*000255f0*/ STR         R5, [SP, #20] 
    /*000255f4*/ BL          0x00000000000255F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000255f8*/ ADD         R2, SP, #12 
    /*000255fc*/ MOV         R1, #49                     @ 0x31 
    /*00025600*/ LDR         R3, [R0, #20] 
    /*00025604*/ ADD         R0, SP, #20 
    /*00025608*/ BLX         R3 
    /*0002560c*/ MOV         R0, #2 
    /*00025610*/ BL          0x0000000000025610          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025614*/ ADD         R2, SP, #12 
    /*00025618*/ MOV         R1, #50                     @ 0x32 
    /*0002561c*/ LDR         R3, [R0, #20] 
    /*00025620*/ ADD         R0, SP, #20 
    /*00025624*/ BLX         R3 
    /*00025628*/ LDR         R0, [R4] 
    /*0002562c*/ BL          0x000000000002562C          @ osal_udelay [R_ARM_CALL: +0x0] 
    /*00025630*/ LDR         R3, [R4] 
    /*00025634*/ MOV         R1, R5 
    /*00025638*/ MOV         R0, #198                    @ 0xc6 
    /*0002563c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaee0] 
    /*00025640*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaee0] 
    /*00025644*/ STM         SP, {R0, R3} 
    /*00025648*/ MOV         R0, #7 
    /*0002564c*/ LDR         R3, [PC, #8]                @ 0x000000000002565c 
    /*00025650*/ BL          0x0000000000025650          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025654*/ ADD         SP, SP, #36                 @ 0x24 
    /*00025658*/ POP         {R4, R5, PC} 
    /*0002565c*/ MULEQ       R0, IP, R7 
FUNC_END VI_DRV_DevClockEnable


FUNC_BEGIN VI_DRV_DevReset
    /*00025660*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00025664*/ SUB         SP, SP, #28 
    /*00025668*/ MOV         R3, #16 
    /*0002566c*/ STR         R0, [SP, #16] 
    /*00025670*/ MOV         R0, #2 
    /*00025674*/ STR         R1, [SP, #4] 
    /*00025678*/ STR         R3, [SP, #12] 
    /*0002567c*/ BL          0x000000000002567C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025680*/ ADD         R2, SP, #4 
    /*00025684*/ MOV         R1, #48                     @ 0x30 
    /*00025688*/ LDR         R3, [R0, #20] 
    /*0002568c*/ ADD         R0, SP, #12 
    /*00025690*/ BLX         R3 
    /*00025694*/ ADD         SP, SP, #28 
    /*00025698*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_DevReset


FUNC_BEGIN VI_DRV_WchClockEnable
    /*0002569c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000256a0*/ SUB         SP, SP, #28 
    /*000256a4*/ MOV         R3, #16 
    /*000256a8*/ STR         R0, [SP, #16] 
    /*000256ac*/ MOV         R0, #2 
    /*000256b0*/ STR         R1, [SP, #4] 
    /*000256b4*/ STR         R3, [SP, #12] 
    /*000256b8*/ BL          0x00000000000256B8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000256bc*/ ADD         R2, SP, #4 
    /*000256c0*/ MOV         R1, #51                     @ 0x33 
    /*000256c4*/ LDR         R3, [R0, #20] 
    /*000256c8*/ ADD         R0, SP, #12 
    /*000256cc*/ BLX         R3 
    /*000256d0*/ ADD         SP, SP, #28 
    /*000256d4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_WchClockEnable


FUNC_BEGIN VI_DRV_IspClockEnable
    /*000256d8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000256dc*/ SUB         SP, SP, #28 
    /*000256e0*/ MOV         R3, #16 
    /*000256e4*/ STR         R0, [SP, #16] 
    /*000256e8*/ MOV         R0, #2 
    /*000256ec*/ STR         R1, [SP, #4] 
    /*000256f0*/ STR         R3, [SP, #12] 
    /*000256f4*/ BL          0x00000000000256F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000256f8*/ ADD         R2, SP, #4 
    /*000256fc*/ MOV         R1, #60                     @ 0x3c 
    /*00025700*/ LDR         R3, [R0, #20] 
    /*00025704*/ ADD         R0, SP, #12 
    /*00025708*/ BLX         R3 
    /*0002570c*/ ADD         SP, SP, #28 
    /*00025710*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_IspClockEnable


FUNC_BEGIN VI_DRV_IspCfgReset
    /*00025714*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00025718*/ SUB         SP, SP, #28 
    /*0002571c*/ MOV         R3, #16 
    /*00025720*/ STR         R0, [SP, #16] 
    /*00025724*/ MOV         R0, #2 
    /*00025728*/ STR         R1, [SP, #4] 
    /*0002572c*/ STR         R3, [SP, #12] 
    /*00025730*/ BL          0x0000000000025730          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025734*/ ADD         R2, SP, #4 
    /*00025738*/ MOV         R1, #58                     @ 0x3a 
    /*0002573c*/ LDR         R3, [R0, #20] 
    /*00025740*/ ADD         R0, SP, #12 
    /*00025744*/ BLX         R3 
    /*00025748*/ ADD         SP, SP, #28 
    /*0002574c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_IspCfgReset


FUNC_BEGIN VI_DRV_IspCoreReset
    /*00025750*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00025754*/ SUB         SP, SP, #28 
    /*00025758*/ MOV         R3, #16 
    /*0002575c*/ STR         R0, [SP, #16] 
    /*00025760*/ MOV         R0, #2 
    /*00025764*/ STR         R1, [SP, #4] 
    /*00025768*/ STR         R3, [SP, #12] 
    /*0002576c*/ BL          0x000000000002576C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025770*/ ADD         R2, SP, #4 
    /*00025774*/ MOV         R1, #59                     @ 0x3b 
    /*00025778*/ LDR         R3, [R0, #20] 
    /*0002577c*/ ADD         R0, SP, #12 
    /*00025780*/ BLX         R3 
    /*00025784*/ ADD         SP, SP, #28 
    /*00025788*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_IspCoreReset


FUNC_BEGIN VI_DRV_ProcClkEnable
    /*0002578c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00025790*/ SUB         SP, SP, #28 
    /*00025794*/ MOV         R3, #16 
    /*00025798*/ STR         R0, [SP, #16] 
    /*0002579c*/ MOV         R0, #2 
    /*000257a0*/ STR         R1, [SP, #4] 
    /*000257a4*/ STR         R3, [SP, #12] 
    /*000257a8*/ BL          0x00000000000257A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000257ac*/ ADD         R2, SP, #4 
    /*000257b0*/ MOV         R1, #55                     @ 0x37 
    /*000257b4*/ LDR         R3, [R0, #20] 
    /*000257b8*/ ADD         R0, SP, #12 
    /*000257bc*/ BLX         R3 
    /*000257c0*/ ADD         SP, SP, #28 
    /*000257c4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_ProcClkEnable


FUNC_BEGIN VI_DRV_ProcReset
    /*000257c8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000257cc*/ SUB         SP, SP, #28 
    /*000257d0*/ MOV         R3, #16 
    /*000257d4*/ STR         R0, [SP, #16] 
    /*000257d8*/ MOV         R0, #2 
    /*000257dc*/ STR         R1, [SP, #4] 
    /*000257e0*/ STR         R3, [SP, #12] 
    /*000257e4*/ BL          0x00000000000257E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000257e8*/ ADD         R2, SP, #4 
    /*000257ec*/ MOV         R1, #54                     @ 0x36 
    /*000257f0*/ LDR         R3, [R0, #20] 
    /*000257f4*/ ADD         R0, SP, #12 
    /*000257f8*/ BLX         R3 
    /*000257fc*/ ADD         SP, SP, #28 
    /*00025800*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_ProcReset


FUNC_BEGIN VI_DRV_GetViPortClock
    /*00025804*/ PUSH        {R4, LR} 
    /*00025808*/ SUB         SP, SP, #16 
    /*0002580c*/ MOV         R4, R0 
    /*00025810*/ MOV         R0, #2 
    /*00025814*/ STR         R4, [SP, #8] 
    /*00025818*/ MOV         R3, #16 
    /*0002581c*/ STR         R3, [SP, #4] 
    /*00025820*/ BL          0x0000000000025820          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025824*/ MOV         R2, SP 
    /*00025828*/ MOV         R1, #67                     @ 0x43 
    /*0002582c*/ ADD         R4, R4, R4, LSL #1 
    /*00025830*/ ADD         R4, R4, #15 
    /*00025834*/ LDR         R3, [R0, #20] 
    /*00025838*/ ADD         R0, SP, #4 
    /*0002583c*/ BLX         R3 
    /*00025840*/ LDR         R3, [SP] 
    /*00025844*/ ASR         R4, R3, R4 
    /*00025848*/ AND         R4, R4, #7 
    /*0002584c*/ CMP         R4, #5 
    /*00025850*/ MOVWLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x1774] 
    /*00025854*/ MOVTLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x1774] 
    /*00025858*/ MOVHI       R0, #150                    @ 0x96 
    /*0002585c*/ LDRLS       R0, [R3, R4, LSL #2] 
    /*00025860*/ ADD         SP, SP, #16 
    /*00025864*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetViPortClock


FUNC_BEGIN VI_DRV_SetViPortClock
    /*00025868*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002586c*/ SUB         SP, SP, #28 
    /*00025870*/ MOV         R3, #16 
    /*00025874*/ STR         R0, [SP, #16] 
    /*00025878*/ MOV         R0, #2 
    /*0002587c*/ STR         R1, [SP, #4] 
    /*00025880*/ STR         R3, [SP, #12] 
    /*00025884*/ BL          0x0000000000025884          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025888*/ ADD         R2, SP, #4 
    /*0002588c*/ MOV         R1, #68                     @ 0x44 
    /*00025890*/ LDR         R3, [R0, #20] 
    /*00025894*/ ADD         R0, SP, #12 
    /*00025898*/ BLX         R3 
    /*0002589c*/ MOV         R0, #2 
    /*000258a0*/ BL          0x00000000000258A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000258a4*/ ADD         R2, SP, #4 
    /*000258a8*/ MOV         R1, #69                     @ 0x45 
    /*000258ac*/ LDR         R3, [R0, #20] 
    /*000258b0*/ ADD         R0, SP, #12 
    /*000258b4*/ BLX         R3 
    /*000258b8*/ MOV         R0, #0 
    /*000258bc*/ ADD         SP, SP, #28 
    /*000258c0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_SetViPortClock


FUNC_BEGIN VI_DRV_GetIspClock
    /*000258c4*/ PUSH        {R4, LR} 
    /*000258c8*/ SUB         SP, SP, #16 
    /*000258cc*/ MOV         R4, R0 
    /*000258d0*/ MOV         R0, #2 
    /*000258d4*/ STR         R4, [SP, #8] 
    /*000258d8*/ MOV         R3, #16 
    /*000258dc*/ STR         R3, [SP, #4] 
    /*000258e0*/ BL          0x00000000000258E0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000258e4*/ MOV         R2, SP 
    /*000258e8*/ MOV         R1, #70                     @ 0x46 
    /*000258ec*/ ADD         R4, R4, R4, LSL #1 
    /*000258f0*/ LDR         R3, [R0, #20] 
    /*000258f4*/ ADD         R0, SP, #4 
    /*000258f8*/ BLX         R3 
    /*000258fc*/ LDR         R0, [SP] 
    /*00025900*/ ASR         R0, R0, R4 
    /*00025904*/ AND         R0, R0, #7 
    /*00025908*/ CMP         R0, #5 
    /*0002590c*/ MOVWLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x1774] 
    /*00025910*/ MOVHI       R0, #150                    @ 0x96 
    /*00025914*/ MOVTLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x1774] 
    /*00025918*/ LDRLS       R0, [R3, R0, LSL #2] 
    /*0002591c*/ ADD         SP, SP, #16 
    /*00025920*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetIspClock


FUNC_BEGIN VI_DRV_GetViProcClock
    /*00025924*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00025928*/ SUB         SP, SP, #20 
    /*0002592c*/ MOV         R3, #16 
    /*00025930*/ STR         R0, [SP, #8] 
    /*00025934*/ MOV         R0, #2 
    /*00025938*/ STR         R3, [SP, #4] 
    /*0002593c*/ BL          0x000000000002593C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025940*/ MOV         R2, SP 
    /*00025944*/ MOV         R1, #71                     @ 0x47 
    /*00025948*/ LDR         R3, [R0, #20] 
    /*0002594c*/ ADD         R0, SP, #4 
    /*00025950*/ BLX         R3 
    /*00025954*/ LDR         R2, [SP] 
    /*00025958*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x1774] 
    /*0002595c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x1774] 
    /*00025960*/ AND         R2, R2, #3 
    /*00025964*/ ADD         R3, R3, R2, LSL #2 
    /*00025968*/ LDR         R0, [R3, #24] 
    /*0002596c*/ ADD         SP, SP, #20 
    /*00025970*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_GetViProcClock


FUNC_BEGIN VI_DRV_CapClkResetInit
    /*00025974*/ PUSH        {R4, R5, R6, LR} 
    /*00025978*/ MOV         R1, #1 
    /*0002597c*/ MOV         R6, R0 
    /*00025980*/ BL          0x0000000000025980          @ VI_DRV_BusReset [R_ARM_CALL: .text+0x2551c] 
    /*00025984*/ MOV         R1, #1 
    /*00025988*/ MOV         R0, R6 
    /*0002598c*/ MOV         R5, R1 
    /*00025990*/ BL          0x0000000000025990          @ VI_DRV_BusClockEnable [R_ARM_CALL: .text+0x254e0] 
    /*00025994*/ MOV         R1, #0 
    /*00025998*/ MOV         R0, R6 
    /*0002599c*/ MOV         R4, R1 
    /*000259a0*/ BL          0x00000000000259A0          @ VI_DRV_BusReset [R_ARM_CALL: .text+0x2551c] 
    /*000259a4*/ MOV         R0, R6 
    /*000259a8*/ MOV         R1, R5 
    /*000259ac*/ BL          0x00000000000259AC          @ VI_DRV_PPCReset [R_ARM_CALL: .text+0x25594] 
    /*000259b0*/ MOV         R0, R6 
    /*000259b4*/ MOV         R1, R5 
    /*000259b8*/ BL          0x00000000000259B8          @ VI_DRV_PPCClockEnable [R_ARM_CALL: .text+0x25558] 
    /*000259bc*/ MOV         R0, R6 
    /*000259c0*/ MOV         R1, R4 
    /*000259c4*/ BL          0x00000000000259C4          @ VI_DRV_PPCReset [R_ARM_CALL: .text+0x25594] 
    /*000259c8*/ MOV         R1, R5 
    /*000259cc*/ MOV         R0, R4 
    /*000259d0*/ BL          0x00000000000259D0          @ VI_DRV_DevReset [R_ARM_CALL: .text+0x25660] 
    /*000259d4*/ MOV         R1, R4 
    /*000259d8*/ MOV         R0, R4 
    /*000259dc*/ BL          0x00000000000259DC          @ VI_DRV_DevClockEnable [R_ARM_CALL: .text+0x255d0] 
    /*000259e0*/ MOV         R1, R5 
    /*000259e4*/ MOV         R0, R5 
    /*000259e8*/ BL          0x00000000000259E8          @ VI_DRV_DevReset [R_ARM_CALL: .text+0x25660] 
    /*000259ec*/ MOV         R1, R4 
    /*000259f0*/ MOV         R0, R5 
    /*000259f4*/ BL          0x00000000000259F4          @ VI_DRV_DevClockEnable [R_ARM_CALL: .text+0x255d0] 
    VI_DRV_CapClkResetInit_x259f8:
    /*000259f8*/ MOV         R1, #1 
    /*000259fc*/ MOV         R0, R4 
    /*00025a00*/ BL          0x0000000000025A00          @ VI_DRV_IspCoreReset [R_ARM_CALL: .text+0x25750] 
    /*00025a04*/ MOV         R1, #1 
    /*00025a08*/ MOV         R0, R4 
    /*00025a0c*/ BL          0x0000000000025A0C          @ VI_DRV_IspCfgReset [R_ARM_CALL: .text+0x25714] 
    /*00025a10*/ MOV         R1, #0 
    /*00025a14*/ MOV         R0, R4 
    /*00025a18*/ BL          0x0000000000025A18          @ VI_DRV_IspClockEnable [R_ARM_CALL: .text+0x256d8] 
    /*00025a1c*/ MOV         R1, #0 
    /*00025a20*/ CMP         R4, R1 
    /*00025a24*/ MOV         R0, R4 
    /*00025a28*/ BEQ         VI_DRV_CapClkResetInit_x25a48
    /*00025a2c*/ BL          0x0000000000025A2C          @ VI_DRV_WchClockEnable [R_ARM_CALL: .text+0x2569c] 
    /*00025a30*/ CMP         R5, #4 
    /*00025a34*/ BEQ         VI_DRV_CapClkResetInit_x25a44
    VI_DRV_CapClkResetInit_x25a38:
    /*00025a38*/ ADD         R4, R4, #1 
    /*00025a3c*/ ADD         R5, R5, #1 
    /*00025a40*/ B           VI_DRV_CapClkResetInit_x259f8
    VI_DRV_CapClkResetInit_x25a44:
    /*00025a44*/ POP         {R4, R5, R6, PC} 
    VI_DRV_CapClkResetInit_x25a48:
    /*00025a48*/ MOV         R1, #1 
    /*00025a4c*/ BL          0x0000000000025A4C          @ VI_DRV_WchClockEnable [R_ARM_CALL: .text+0x2569c] 
    /*00025a50*/ B           VI_DRV_CapClkResetInit_x25a38
FUNC_END VI_DRV_CapClkResetInit


FUNC_BEGIN VI_DRV_CapClkResetExit
    /*00025a54*/ PUSH        {R4, LR} 
    /*00025a58*/ MOV         R1, #1 
    /*00025a5c*/ MOV         R4, R0 
    /*00025a60*/ BL          0x0000000000025A60          @ VI_DRV_PPCReset [R_ARM_CALL: .text+0x25594] 
    /*00025a64*/ MOV         R0, R4 
    /*00025a68*/ MOV         R1, #0 
    /*00025a6c*/ BL          0x0000000000025A6C          @ VI_DRV_PPCClockEnable [R_ARM_CALL: .text+0x25558] 
    /*00025a70*/ MOV         R0, R4 
    /*00025a74*/ MOV         R1, #1 
    /*00025a78*/ BL          0x0000000000025A78          @ VI_DRV_BusReset [R_ARM_CALL: .text+0x2551c] 
    /*00025a7c*/ MOV         R0, R4 
    /*00025a80*/ MOV         R1, #0 
    /*00025a84*/ POP         {R4, LR} 
    VI_DRV_CapClkResetExit_x25a88:
    /*00025a88*/ B           VI_DRV_CapClkResetExit_x25a88@ VI_DRV_BusClockEnable [R_ARM_JUMP24: .text+0x254e0] 
FUNC_END VI_DRV_CapClkResetExit


FUNC_BEGIN VI_DRV_PutVb
    /*00025a8c*/ SUBS        R3, R0, #0 
    /*00025a90*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00025a94*/ SUB         SP, SP, #12 
    /*00025a98*/ BEQ         VI_DRV_PutVb_x25b58
    /*00025a9c*/ MOV         R0, #1 
    /*00025aa0*/ LDR         R4, [R3, #328]              @ 0x148 
    /*00025aa4*/ LDRD        R6, [R3, #120]              @ 0x78 
    /*00025aa8*/ MOV         R5, R1 
    /*00025aac*/ BL          0x0000000000025AAC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025ab0*/ MOV         R2, R6 
    /*00025ab4*/ MOV         R3, R7 
    /*00025ab8*/ LDR         R1, [R0, #84]               @ 0x54 
    /*00025abc*/ MOV         R0, R4 
    /*00025ac0*/ BLX         R1 
    /*00025ac4*/ CMP         R0, #0 
    /*00025ac8*/ BEQ         VI_DRV_PutVb_x25afc
    /*00025acc*/ MOV         R0, #1 
    /*00025ad0*/ BL          0x0000000000025AD0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025ad4*/ STR         R5, [SP] 
    /*00025ad8*/ MOV         R2, R6 
    /*00025adc*/ MOV         R3, R7 
    /*00025ae0*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00025ae4*/ MOV         R0, R4 
    /*00025ae8*/ BLX         R1 
    /*00025aec*/ CMP         R0, #0 
    /*00025af0*/ BNE         VI_DRV_PutVb_x25b28
    VI_DRV_PutVb_x25af4:
    /*00025af4*/ ADD         SP, SP, #12 
    /*00025af8*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_PutVb_x25afc:
    /*00025afc*/ MOVW        R3, #441                    @ 0x1b9 
    /*00025b00*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaf78] 
    /*00025b04*/ STR         R3, [SP] 
    /*00025b08*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaf78] 
    /*00025b0c*/ LDR         R3, [PC, #112]              @ 0x0000000000025b84 
    /*00025b10*/ MOV         R1, #16 
    /*00025b14*/ MOV         R0, #3 
    /*00025b18*/ BL          0x0000000000025B18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025b1c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00025b20*/ MOVT        R0, #40976                  @ 0xa010 
    /*00025b24*/ B           VI_DRV_PutVb_x25af4
    VI_DRV_PutVb_x25b28:
    /*00025b28*/ MOVW        R4, #32777                  @ 0x8009 
    /*00025b2c*/ MOVT        R4, #40976                  @ 0xa010 
    /*00025b30*/ MOVW        R3, #435                    @ 0x1b3 
    /*00025b34*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaf44] 
    /*00025b38*/ STM         SP, {R3, R4} 
    /*00025b3c*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaf44] 
    /*00025b40*/ LDR         R3, [PC, #60]               @ 0x0000000000025b84 
    /*00025b44*/ MOV         R1, #16 
    /*00025b48*/ MOV         R0, #3 
    /*00025b4c*/ BL          0x0000000000025B4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025b50*/ MOV         R0, R4 
    /*00025b54*/ B           VI_DRV_PutVb_x25af4
    VI_DRV_PutVb_x25b58:
    /*00025b58*/ MOVW        R3, #422                    @ 0x1a6 
    /*00025b5c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaf18] 
    /*00025b60*/ STR         R3, [SP] 
    /*00025b64*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaf18] 
    /*00025b68*/ LDR         R3, [PC, #20]               @ 0x0000000000025b84 
    /*00025b6c*/ MOV         R1, #16 
    /*00025b70*/ MOV         R0, #3 
    /*00025b74*/ BL          0x0000000000025B74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025b78*/ MOVW        R0, #32774                  @ 0x8006 
    /*00025b7c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00025b80*/ B           VI_DRV_PutVb_x25af4
    /*00025b84*/ @           <UNDEFINED> instruction: 0x000017b4 
FUNC_END VI_DRV_PutVb


FUNC_BEGIN VI_DRV_GetVb
    /*00025b88*/ SUBS        R3, R0, #0 
    /*00025b8c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00025b90*/ SUB         SP, SP, #12 
    /*00025b94*/ BEQ         VI_DRV_GetVb_x25c1c
    /*00025b98*/ MOV         R0, #1 
    /*00025b9c*/ LDR         R4, [R3, #328]              @ 0x148 
    /*00025ba0*/ LDRD        R6, [R3, #120]              @ 0x78 
    /*00025ba4*/ MOV         R5, R1 
    /*00025ba8*/ BL          0x0000000000025BA8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025bac*/ MOV         R2, R6 
    /*00025bb0*/ MOV         R3, R7 
    /*00025bb4*/ LDR         R1, [R0, #84]               @ 0x54 
    /*00025bb8*/ MOV         R0, R4 
    /*00025bbc*/ BLX         R1 
    /*00025bc0*/ CMP         R0, #0 
    /*00025bc4*/ BEQ         VI_DRV_GetVb_x25bf0
    /*00025bc8*/ MOV         R0, #1 
    /*00025bcc*/ BL          0x0000000000025BCC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025bd0*/ STR         R5, [SP] 
    /*00025bd4*/ MOV         R2, R6 
    /*00025bd8*/ MOV         R3, R7 
    /*00025bdc*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00025be0*/ MOV         R0, R4 
    /*00025be4*/ BLX         R1 
    VI_DRV_GetVb_x25be8:
    /*00025be8*/ ADD         SP, SP, #12 
    /*00025bec*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_GetVb_x25bf0:
    /*00025bf0*/ MOVW        R3, #469                    @ 0x1d5 
    /*00025bf4*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaf78] 
    /*00025bf8*/ STR         R3, [SP] 
    /*00025bfc*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaf78] 
    /*00025c00*/ LDR         R3, [PC, #64]               @ 0x0000000000025c48 
    /*00025c04*/ MOV         R1, #16 
    /*00025c08*/ MOV         R0, #3 
    /*00025c0c*/ BL          0x0000000000025C0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025c10*/ MOVW        R0, #32771                  @ 0x8003 
    /*00025c14*/ MOVT        R0, #40976                  @ 0xa010 
    /*00025c18*/ B           VI_DRV_GetVb_x25be8
    VI_DRV_GetVb_x25c1c:
    /*00025c1c*/ MOVW        R3, #455                    @ 0x1c7 
    /*00025c20*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaf18] 
    /*00025c24*/ STR         R3, [SP] 
    /*00025c28*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaf18] 
    /*00025c2c*/ LDR         R3, [PC, #20]               @ 0x0000000000025c48 
    /*00025c30*/ MOV         R1, #16 
    /*00025c34*/ MOV         R0, #3 
    /*00025c38*/ BL          0x0000000000025C38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025c3c*/ MOVW        R0, #32774                  @ 0x8006 
    /*00025c40*/ MOVT        R0, #40976                  @ 0xa010 
    /*00025c44*/ B           VI_DRV_GetVb_x25be8
    /*00025c48*/ ANDEQ       R1, R0, R4, ASR #15 
FUNC_END VI_DRV_GetVb


FUNC_BEGIN VI_DRV_GetPipeMinWidth
    /*00025c4c*/ MOV         R0, #120                    @ 0x78 
    /*00025c50*/ BX          LR 
FUNC_END VI_DRV_GetPipeMinWidth


FUNC_BEGIN VI_DRV_GetPipeMinHeight
    /*00025c54*/ MOV         R0, #120                    @ 0x78 
    /*00025c58*/ BX          LR 
FUNC_END VI_DRV_GetPipeMinHeight


FUNC_BEGIN VI_DRV_GetPipeMaxWidth
    /*00025c5c*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00025c60*/ LSL         R1, R0, #2 
    /*00025c64*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00025c68*/ ADD         R3, R2, R1 
    /*00025c6c*/ PUSH        {R4, LR} 
    /*00025c70*/ MOV         R4, R0 
    /*00025c74*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*00025c78*/ SUB         SP, SP, #8 
    /*00025c7c*/ CMP         R3, #1 
    /*00025c80*/ BLS         VI_DRV_GetPipeMaxWidth_x25d68
    /*00025c84*/ SUB         R3, R3, #2 
    /*00025c88*/ CMP         R3, #1 
    /*00025c8c*/ BLS         VI_DRV_GetPipeMaxWidth_x25ce0
    VI_DRV_GetPipeMaxWidth_x25c90:
    /*00025c90*/ CMP         R4, #1 
    /*00025c94*/ BLS         VI_DRV_GetPipeMaxWidth_x25dc4
    VI_DRV_GetPipeMaxWidth_x25c98:
    /*00025c98*/ SUB         R4, R4, #2 
    /*00025c9c*/ CMP         R4, #1 
    /*00025ca0*/ MOVHI       R0, #0 
    /*00025ca4*/ BLS         VI_DRV_GetPipeMaxWidth_x25cb0
    VI_DRV_GetPipeMaxWidth_x25ca8:
    /*00025ca8*/ ADD         SP, SP, #8 
    /*00025cac*/ POP         {R4, PC} 
    VI_DRV_GetPipeMaxWidth_x25cb0:
    /*00025cb0*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00025cb4*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00025cb8*/ LDR         R3, [R3] 
    /*00025cbc*/ LDRB        R3, [R3, #40]               @ 0x28 
    /*00025cc0*/ CMP         R3, #12 
    /*00025cc4*/ BHI         VI_DRV_GetPipeMaxWidth_x25da0
    /*00025cc8*/ MOVW        R2, #4711                   @ 0x1267 
    /*00025ccc*/ MVN         R3, R2, LSR R3 
    /*00025cd0*/ TST         R3, #1 
    /*00025cd4*/ BNE         VI_DRV_GetPipeMaxWidth_x25da0
    VI_DRV_GetPipeMaxWidth_x25cd8:
    /*00025cd8*/ MOV         R0, #2048                   @ 0x800 
    /*00025cdc*/ B           VI_DRV_GetPipeMaxWidth_x25ca8
    VI_DRV_GetPipeMaxWidth_x25ce0:
    /*00025ce0*/ CMP         R0, #0 
    /*00025ce4*/ BEQ         VI_DRV_GetPipeMaxWidth_x25d60
    VI_DRV_GetPipeMaxWidth_x25ce8:
    /*00025ce8*/ CMP         R4, #1 
    /*00025cec*/ BNE         VI_DRV_GetPipeMaxWidth_x25c90
    VI_DRV_GetPipeMaxWidth_x25cf0:
    /*00025cf0*/ MOV         R0, #3840                   @ 0xf00 
    VI_DRV_GetPipeMaxWidth_x25cf4:
    /*00025cf4*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00025cf8*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00025cfc*/ LDR         R3, [R3] 
    /*00025d00*/ LDRB        R3, [R3, #40]               @ 0x28 
    /*00025d04*/ SUB         R2, R3, #1 
    /*00025d08*/ CMP         R2, #1 
    /*00025d0c*/ BLS         VI_DRV_GetPipeMaxWidth_x25d58
    /*00025d10*/ SUB         R2, R3, #5 
    /*00025d14*/ CMP         R2, #1 
    /*00025d18*/ MOVLS       R0, #2688                   @ 0xa80 
    /*00025d1c*/ BLS         VI_DRV_GetPipeMaxWidth_x25ca8
    /*00025d20*/ CMP         R3, #12 
    /*00025d24*/ BHI         VI_DRV_GetPipeMaxWidth_x25d38
    /*00025d28*/ MOVW        R2, #4609                   @ 0x1201 
    /*00025d2c*/ MVN         R3, R2, LSR R3 
    /*00025d30*/ TST         R3, #1 
    /*00025d34*/ BEQ         VI_DRV_GetPipeMaxWidth_x25ca8
    VI_DRV_GetPipeMaxWidth_x25d38:
    /*00025d38*/ MOVW        R3, #595                    @ 0x253 
    /*00025d3c*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xafa4] 
    /*00025d40*/ STR         R3, [SP] 
    /*00025d44*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xafa4] 
    /*00025d48*/ LDR         R3, [PC, #136]              @ 0x0000000000025dd8 
    /*00025d4c*/ MOV         R1, #16 
    /*00025d50*/ MOV         R0, #3 
    /*00025d54*/ BL          0x0000000000025D54          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_GetPipeMaxWidth_x25d58:
    /*00025d58*/ MOV         R0, #2304                   @ 0x900 
    /*00025d5c*/ B           VI_DRV_GetPipeMaxWidth_x25ca8
    VI_DRV_GetPipeMaxWidth_x25d60:
    /*00025d60*/ MOV         R0, #4096                   @ 0x1000 
    /*00025d64*/ B           VI_DRV_GetPipeMaxWidth_x25cf4
    VI_DRV_GetPipeMaxWidth_x25d68:
    /*00025d68*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x114] 
    /*00025d6c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x114] 
    /*00025d70*/ ADD         R1, R3, R1 
    /*00025d74*/ MOV         R0, #356                    @ 0x164 
    /*00025d78*/ LDR         R3, [R1, #4] 
    /*00025d7c*/ MLA         R2, R0, R3, R2 
    /*00025d80*/ LDR         R0, [R2, #168]              @ 0xa8 
    /*00025d84*/ BL          0x0000000000025D84          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*00025d88*/ CMP         R0, #1 
    /*00025d8c*/ BEQ         VI_DRV_GetPipeMaxWidth_x25dcc
    /*00025d90*/ CMP         R4, #0 
    /*00025d94*/ BNE         VI_DRV_GetPipeMaxWidth_x25ce8
    /*00025d98*/ MOV         R0, #4608                   @ 0x1200 
    /*00025d9c*/ B           VI_DRV_GetPipeMaxWidth_x25cf4
    VI_DRV_GetPipeMaxWidth_x25da0:
    /*00025da0*/ MOVW        R3, #613                    @ 0x265 
    /*00025da4*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xafa4] 
    /*00025da8*/ STR         R3, [SP] 
    /*00025dac*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xafa4] 
    /*00025db0*/ LDR         R3, [PC, #32]               @ 0x0000000000025dd8 
    /*00025db4*/ MOV         R1, #16 
    /*00025db8*/ MOV         R0, #3 
    /*00025dbc*/ BL          0x0000000000025DBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025dc0*/ B           VI_DRV_GetPipeMaxWidth_x25cd8
    VI_DRV_GetPipeMaxWidth_x25dc4:
    /*00025dc4*/ MOV         R0, #2048                   @ 0x800 
    /*00025dc8*/ B           VI_DRV_GetPipeMaxWidth_x25cf4
    VI_DRV_GetPipeMaxWidth_x25dcc:
    /*00025dcc*/ CMP         R4, #1 
    /*00025dd0*/ BHI         VI_DRV_GetPipeMaxWidth_x25c98
    /*00025dd4*/ B           VI_DRV_GetPipeMaxWidth_x25cf0
    /*00025dd8*/ LDRDEQ      R1, [R0], -R4 
FUNC_END VI_DRV_GetPipeMaxWidth


FUNC_BEGIN VI_DRV_GetPipeMaxHeight
    /*00025ddc*/ CMP         R0, #1 
    /*00025de0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00025de4*/ SUB         SP, SP, #12 
    /*00025de8*/ BLS         VI_DRV_GetPipeMaxHeight_x25e58
    /*00025dec*/ SUB         R0, R0, #2 
    /*00025df0*/ CMP         R0, #1 
    /*00025df4*/ MOVHI       R0, #0 
    /*00025df8*/ BLS         VI_DRV_GetPipeMaxHeight_x25e04
    VI_DRV_GetPipeMaxHeight_x25dfc:
    /*00025dfc*/ ADD         SP, SP, #12 
    /*00025e00*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_GetPipeMaxHeight_x25e04:
    /*00025e04*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00025e08*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00025e0c*/ LDR         R3, [R3] 
    /*00025e10*/ LDR         R3, [R3, #40]               @ 0x28 
    /*00025e14*/ AND         R2, R3, #251                @ 0xfb 
    /*00025e18*/ SUB         R2, R2, #1 
    /*00025e1c*/ CMP         R2, #1 
    /*00025e20*/ BLS         VI_DRV_GetPipeMaxHeight_x25e50
    /*00025e24*/ UXTB        R3, R3 
    /*00025e28*/ CMP         R3, #12 
    /*00025e2c*/ BLS         VI_DRV_GetPipeMaxHeight_x25ecc
    VI_DRV_GetPipeMaxHeight_x25e30:
    /*00025e30*/ MOV         R3, #680                    @ 0x2a8 
    /*00025e34*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xafa4] 
    /*00025e38*/ STR         R3, [SP] 
    /*00025e3c*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xafa4] 
    /*00025e40*/ LDR         R3, [PC, #152]              @ 0x0000000000025ee0 
    /*00025e44*/ MOV         R1, #16 
    /*00025e48*/ MOV         R0, #3 
    /*00025e4c*/ BL          0x0000000000025E4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_GetPipeMaxHeight_x25e50:
    /*00025e50*/ MOV         R0, #2048                   @ 0x800 
    /*00025e54*/ B           VI_DRV_GetPipeMaxHeight_x25dfc
    VI_DRV_GetPipeMaxHeight_x25e58:
    /*00025e58*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00025e5c*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00025e60*/ LDR         R3, [R3] 
    /*00025e64*/ LDRB        R3, [R3, #40]               @ 0x28 
    /*00025e68*/ SUB         R2, R3, #1 
    /*00025e6c*/ CMP         R2, #1 
    /*00025e70*/ BLS         VI_DRV_GetPipeMaxHeight_x25ec4
    /*00025e74*/ SUB         R2, R3, #5 
    /*00025e78*/ CMP         R2, #1 
    /*00025e7c*/ MOVLS       R0, #2688                   @ 0xa80 
    /*00025e80*/ BLS         VI_DRV_GetPipeMaxHeight_x25dfc
    /*00025e84*/ CMP         R3, #12 
    /*00025e88*/ BHI         VI_DRV_GetPipeMaxHeight_x25ea4
    /*00025e8c*/ MOVW        R2, #4609                   @ 0x1201 
    /*00025e90*/ MVN         R3, R2, LSR R3 
    /*00025e94*/ TST         R3, #1 
    /*00025e98*/ BNE         VI_DRV_GetPipeMaxHeight_x25ea4
    VI_DRV_GetPipeMaxHeight_x25e9c:
    /*00025e9c*/ MOV         R0, #3456                   @ 0xd80 
    /*00025ea0*/ B           VI_DRV_GetPipeMaxHeight_x25dfc
    VI_DRV_GetPipeMaxHeight_x25ea4:
    /*00025ea4*/ MOVW        R3, #662                    @ 0x296 
    /*00025ea8*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xafa4] 
    /*00025eac*/ STR         R3, [SP] 
    /*00025eb0*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xafa4] 
    /*00025eb4*/ LDR         R3, [PC, #36]               @ 0x0000000000025ee0 
    /*00025eb8*/ MOV         R1, #16 
    /*00025ebc*/ MOV         R0, #3 
    /*00025ec0*/ BL          0x0000000000025EC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_GetPipeMaxHeight_x25ec4:
    /*00025ec4*/ MOV         R0, #2304                   @ 0x900 
    /*00025ec8*/ B           VI_DRV_GetPipeMaxHeight_x25dfc
    VI_DRV_GetPipeMaxHeight_x25ecc:
    /*00025ecc*/ MOVW        R2, #4609                   @ 0x1201 
    /*00025ed0*/ MVN         R3, R2, LSR R3 
    /*00025ed4*/ TST         R3, #1 
    /*00025ed8*/ BEQ         VI_DRV_GetPipeMaxHeight_x25e9c
    /*00025edc*/ B           VI_DRV_GetPipeMaxHeight_x25e30
    /*00025ee0*/ ANDEQ       R1, R0, IP, ROR #15 
FUNC_END VI_DRV_GetPipeMaxHeight


FUNC_BEGIN VI_DRV_GetChnMinWidth
    /*00025ee4*/ CMP         R1, #0 
    /*00025ee8*/ MOVNE       R0, #32 
    /*00025eec*/ MOVEQ       R0, #120                    @ 0x78 
    /*00025ef0*/ BX          LR 
FUNC_END VI_DRV_GetChnMinWidth


FUNC_BEGIN VI_DRV_GetChnMinHeight
    /*00025ef4*/ CMP         R1, #0 
    /*00025ef8*/ MOVNE       R0, #32 
    /*00025efc*/ MOVEQ       R0, #120                    @ 0x78 
    /*00025f00*/ BX          LR 
FUNC_END VI_DRV_GetChnMinHeight


FUNC_BEGIN VI_DRV_GetChnMaxWidth
    /*00025f04*/ CMP         R1, #0 
    /*00025f08*/ BEQ         VI_DRV_GetChnMaxWidth_x25f14
    /*00025f0c*/ MOV         R0, #8192                   @ 0x2000 
    /*00025f10*/ BX          LR 
    VI_DRV_GetChnMaxWidth_x25f14:
    /*00025f14*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00025f18*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00025f1c*/ ADD         R3, R3, R0, LSL #2 
    /*00025f20*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*00025f24*/ CMP         R3, #1 
    /*00025f28*/ MOVLS       R0, #4608                   @ 0x1200 
    /*00025f2c*/ BLS         VI_DRV_GetChnMaxWidth_x25f40
    /*00025f30*/ SUB         R3, R3, #2 
    /*00025f34*/ CMP         R3, #1 
    /*00025f38*/ MOVHI       R0, #4608                   @ 0x1200 
    /*00025f3c*/ MOVLS       R0, #4096                   @ 0x1000 
    VI_DRV_GetChnMaxWidth_x25f40:
    /*00025f40*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00025f44*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00025f48*/ LDR         R3, [R3] 
    /*00025f4c*/ LDRB        R3, [R3, #40]               @ 0x28 
    /*00025f50*/ SUB         R2, R3, #1 
    /*00025f54*/ CMP         R2, #1 
    /*00025f58*/ BLS         VI_DRV_GetChnMaxWidth_x25fac
    /*00025f5c*/ SUB         R2, R3, #5 
    /*00025f60*/ CMP         R2, #1 
    /*00025f64*/ BLS         VI_DRV_GetChnMaxWidth_x25fa4
    /*00025f68*/ CMP         R3, #12 
    /*00025f6c*/ BLS         VI_DRV_GetChnMaxWidth_x25fb4
    VI_DRV_GetChnMaxWidth_x25f70:
    /*00025f70*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00025f74*/ SUB         SP, SP, #12 
    /*00025f78*/ MOVW        R3, #783                    @ 0x30f 
    /*00025f7c*/ MOV         R1, #16 
    /*00025f80*/ STR         R3, [SP] 
    /*00025f84*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xafa4] 
    /*00025f88*/ LDR         R3, [PC, #56]               @ 0x0000000000025fc8 
    /*00025f8c*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xafa4] 
    /*00025f90*/ MOV         R0, #3 
    /*00025f94*/ BL          0x0000000000025F94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025f98*/ MOV         R0, #2304                   @ 0x900 
    /*00025f9c*/ ADD         SP, SP, #12 
    /*00025fa0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_GetChnMaxWidth_x25fa4:
    /*00025fa4*/ MOV         R0, #2688                   @ 0xa80 
    /*00025fa8*/ BX          LR 
    VI_DRV_GetChnMaxWidth_x25fac:
    /*00025fac*/ MOV         R0, #2304                   @ 0x900 
    /*00025fb0*/ BX          LR 
    VI_DRV_GetChnMaxWidth_x25fb4:
    /*00025fb4*/ MOVW        R2, #4609                   @ 0x1201 
    /*00025fb8*/ MVN         R3, R2, LSR R3 
    /*00025fbc*/ TST         R3, #1 
    /*00025fc0*/ BXEQ        LR 
    /*00025fc4*/ B           VI_DRV_GetChnMaxWidth_x25f70
    /*00025fc8*/ ANDEQ       R1, R0, R4, LSL #16 
FUNC_END VI_DRV_GetChnMaxWidth


FUNC_BEGIN VI_DRV_GetChnMaxHeight
    /*00025fcc*/ CMP         R1, #0 
    /*00025fd0*/ BNE         VI_DRV_GetChnMaxHeight_x2601c
    /*00025fd4*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00025fd8*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00025fdc*/ LDR         R3, [R3] 
    /*00025fe0*/ LDRB        R3, [R3, #40]               @ 0x28 
    /*00025fe4*/ SUB         R2, R3, #1 
    /*00025fe8*/ CMP         R2, #1 
    /*00025fec*/ BLS         VI_DRV_GetChnMaxHeight_x26024
    /*00025ff0*/ SUB         R2, R3, #5 
    /*00025ff4*/ CMP         R2, #1 
    /*00025ff8*/ BLS         VI_DRV_GetChnMaxHeight_x2602c
    /*00025ffc*/ CMP         R3, #12 
    /*00026000*/ BHI         VI_DRV_GetChnMaxHeight_x26034
    /*00026004*/ MOVW        R2, #4609                   @ 0x1201 
    /*00026008*/ MVN         R3, R2, LSR R3 
    /*0002600c*/ TST         R3, #1 
    /*00026010*/ BNE         VI_DRV_GetChnMaxHeight_x26034
    /*00026014*/ MOV         R0, #4608                   @ 0x1200 
    /*00026018*/ BX          LR 
    VI_DRV_GetChnMaxHeight_x2601c:
    /*0002601c*/ MOV         R0, #8192                   @ 0x2000 
    /*00026020*/ BX          LR 
    VI_DRV_GetChnMaxHeight_x26024:
    /*00026024*/ MOV         R0, #2304                   @ 0x900 
    /*00026028*/ BX          LR 
    VI_DRV_GetChnMaxHeight_x2602c:
    /*0002602c*/ MOV         R0, #2688                   @ 0xa80 
    /*00026030*/ BX          LR 
    VI_DRV_GetChnMaxHeight_x26034:
    /*00026034*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00026038*/ SUB         SP, SP, #12 
    /*0002603c*/ MOV         R3, #832                    @ 0x340 
    /*00026040*/ MOV         R1, #16 
    /*00026044*/ STR         R3, [SP] 
    /*00026048*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xafa4] 
    /*0002604c*/ LDR         R3, [PC, #20]               @ 0x0000000000026068 
    /*00026050*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xafa4] 
    /*00026054*/ MOV         R0, #3 
    /*00026058*/ BL          0x0000000000026058          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002605c*/ MOV         R0, #2304                   @ 0x900 
    /*00026060*/ ADD         SP, SP, #12 
    /*00026064*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00026068*/ ANDEQ       R1, R0, IP, LSL R8 
FUNC_END VI_DRV_GetChnMaxHeight


FUNC_BEGIN VI_DRV_GetMastPipeByPipe
    /*0002606c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00026070*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00026074*/ ADD         R0, R3, R0, LSL #2 
    /*00026078*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002607c*/ LDR         R0, [R3, #4] 
    /*00026080*/ BX          LR 
FUNC_END VI_DRV_GetMastPipeByPipe


FUNC_BEGIN VI_DRV_GetSensorBitWidth
    /*00026084*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00026088*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002608c*/ MOV         R3, #356                    @ 0x164 
    /*00026090*/ MLA         R0, R3, R0, R2 
    /*00026094*/ LDR         R0, [R0, #344]              @ 0x158 
    /*00026098*/ BX          LR 
FUNC_END VI_DRV_GetSensorBitWidth


FUNC_BEGIN VI_DRV_GetCmdName
    /*0002609c*/ MOVW        R3, #18752                  @ 0x4940 
    /*000260a0*/ MOVT        R3, #16844                  @ 0x41cc 
    /*000260a4*/ CMP         R0, R3 
    /*000260a8*/ BEQ         VI_DRV_GetCmdName_x2690c
    /*000260ac*/ BLS         VI_DRV_GetCmdName_x2612c
    /*000260b0*/ MOVW        R3, #18795                  @ 0x496b 
    /*000260b4*/ MOVT        R3, #32792                  @ 0x8018 
    /*000260b8*/ CMP         R0, R3 
    /*000260bc*/ BEQ         VI_DRV_GetCmdName_x265d8
    /*000260c0*/ BLS         VI_DRV_GetCmdName_x2620c
    /*000260c4*/ MOVW        R3, #18703                  @ 0x490f 
    /*000260c8*/ MOVT        R3, #32920                  @ 0x8098 
    /*000260cc*/ CMP         R0, R3 
    /*000260d0*/ BEQ         VI_DRV_GetCmdName_x26900
    /*000260d4*/ BLS         VI_DRV_GetCmdName_x262e8
    /*000260d8*/ MOVW        R3, #18791                  @ 0x4967 
    /*000260dc*/ MOVT        R3, #49160                  @ 0xc008 
    /*000260e0*/ CMP         R0, R3 
    /*000260e4*/ BEQ         VI_DRV_GetCmdName_x26958
    /*000260e8*/ BHI         VI_DRV_GetCmdName_x263f4
    /*000260ec*/ MOVW        R3, #18717                  @ 0x491d 
    /*000260f0*/ MOVT        R3, #33024                  @ 0x8100 
    /*000260f4*/ CMP         R0, R3 
    /*000260f8*/ BEQ         VI_DRV_GetCmdName_x2694c
    /*000260fc*/ BLS         VI_DRV_GetCmdName_x26524
    /*00026100*/ MOVW        R3, #18730                  @ 0x492a 
    /*00026104*/ MOVT        R3, #49160                  @ 0xc008 
    /*00026108*/ CMP         R0, R3 
    /*0002610c*/ BEQ         VI_DRV_GetCmdName_x269bc
    /*00026110*/ MOVW        R3, #18737                  @ 0x4931 
    /*00026114*/ MOVT        R3, #49160                  @ 0xc008 
    /*00026118*/ CMP         R0, R3 
    /*0002611c*/ BNE         VI_DRV_GetCmdName_x26a04
    /*00026120*/ MOVW        R0, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb1d0] 
    /*00026124*/ MOVT        R0, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb1d0] 
    /*00026128*/ BX          LR 
    VI_DRV_GetCmdName_x2612c:
    /*0002612c*/ MOVW        R3, #18746                  @ 0x493a 
    /*00026130*/ MOVT        R3, #16392                  @ 0x4008 
    /*00026134*/ CMP         R0, R3 
    /*00026138*/ BEQ         VI_DRV_GetCmdName_x26680
    /*0002613c*/ BHI         VI_DRV_GetCmdName_x261a4
    /*00026140*/ MOVW        R3, #18743                  @ 0x4937 
    /*00026144*/ CMP         R0, R3 
    /*00026148*/ BHI         VI_DRV_GetCmdName_x26284
    /*0002614c*/ MOVW        R3, #18742                  @ 0x4936 
    /*00026150*/ CMP         R0, R3 
    /*00026154*/ BCS         VI_DRV_GetCmdName_x26930
    /*00026158*/ MOVW        R3, #18712                  @ 0x4918 
    /*0002615c*/ CMP         R0, R3 
    /*00026160*/ BHI         VI_DRV_GetCmdName_x26444
    /*00026164*/ MOVW        R3, #18711                  @ 0x4917 
    /*00026168*/ CMP         R0, R3 
    /*0002616c*/ BCS         VI_DRV_GetCmdName_x26924
    /*00026170*/ MOVW        R3, #18706                  @ 0x4912 
    /*00026174*/ CMP         R0, R3 
    /*00026178*/ BHI         VI_DRV_GetCmdName_x265e4
    /*0002617c*/ MOVW        R3, #18705                  @ 0x4911 
    /*00026180*/ CMP         R0, R3 
    /*00026184*/ BCS         VI_DRV_GetCmdName_x268b8
    /*00026188*/ SUB         R0, R0, #18688              @ 0x4900 
    /*0002618c*/ SUB         R0, R0, #7 
    /*00026190*/ CMP         R0, #1 
    /*00026194*/ BHI         VI_DRV_GetCmdName_x2659c
    /*00026198*/ MOVW        R0, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb008] 
    /*0002619c*/ MOVT        R0, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb008] 
    /*000261a0*/ BX          LR 
    VI_DRV_GetCmdName_x261a4:
    /*000261a4*/ MOVW        R3, #18781                  @ 0x495d 
    /*000261a8*/ MOVT        R3, #16420                  @ 0x4024 
    /*000261ac*/ CMP         R0, R3 
    /*000261b0*/ BEQ         VI_DRV_GetCmdName_x26874
    /*000261b4*/ BLS         VI_DRV_GetCmdName_x2632c
    /*000261b8*/ MOVW        R3, #18718                  @ 0x491e 
    /*000261bc*/ MOVT        R3, #16484                  @ 0x4064 
    /*000261c0*/ CMP         R0, R3 
    /*000261c4*/ BEQ         VI_DRV_GetCmdName_x264b0
    /*000261c8*/ BLS         VI_DRV_GetCmdName_x266cc
    /*000261cc*/ MOVW        R3, #18690                  @ 0x4902 
    /*000261d0*/ MOVT        R3, #16548                  @ 0x40a4 
    /*000261d4*/ CMP         R0, R3 
    /*000261d8*/ BEQ         VI_DRV_GetCmdName_x26964
    /*000261dc*/ BLS         VI_DRV_GetCmdName_x26550
    /*000261e0*/ MOVW        R3, #18704                  @ 0x4910 
    /*000261e4*/ MOVT        R3, #16728                  @ 0x4158 
    /*000261e8*/ CMP         R0, R3 
    /*000261ec*/ BEQ         VI_DRV_GetCmdName_x269e0
    /*000261f0*/ MOVW        R3, #18738                  @ 0x4932 
    /*000261f4*/ MOVT        R3, #16728                  @ 0x4158 
    /*000261f8*/ CMP         R0, R3 
    /*000261fc*/ BNE         VI_DRV_GetCmdName_x2693c
    /*00026200*/ MOVW        R0, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb1e0] 
    /*00026204*/ MOVT        R0, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb1e0] 
    /*00026208*/ BX          LR 
    VI_DRV_GetCmdName_x2620c:
    /*0002620c*/ MOVW        R3, #18702                  @ 0x490e 
    /*00026210*/ MOVT        R3, #32776                  @ 0x8008 
    /*00026214*/ CMP         R0, R3 
    /*00026218*/ BEQ         VI_DRV_GetCmdName_x26918
    /*0002621c*/ BLS         VI_DRV_GetCmdName_x26390
    /*00026220*/ MOVW        R3, #18802                  @ 0x4972 
    /*00026224*/ MOVT        R3, #32776                  @ 0x8008 
    /*00026228*/ CMP         R0, R3 
    /*0002622c*/ BEQ         VI_DRV_GetCmdName_x268c4
    /*00026230*/ BLS         VI_DRV_GetCmdName_x2664c
    /*00026234*/ MOVW        R3, #18693                  @ 0x4905 
    /*00026238*/ MOVT        R3, #32788                  @ 0x8014 
    /*0002623c*/ CMP         R0, R3 
    /*00026240*/ BEQ         VI_DRV_GetCmdName_x265fc
    /*00026244*/ BLS         VI_DRV_GetCmdName_x267b4
    /*00026248*/ MOVW        R3, #18715                  @ 0x491b 
    /*0002624c*/ MOVT        R3, #32788                  @ 0x8014 
    /*00026250*/ CMP         R0, R3 
    /*00026254*/ BEQ         VI_DRV_GetCmdName_x2697c
    /*00026258*/ MOVW        R3, #18765                  @ 0x494d 
    /*0002625c*/ MOVT        R3, #32792                  @ 0x8018 
    /*00026260*/ CMP         R0, R3 
    /*00026264*/ BEQ         VI_DRV_GetCmdName_x26384
    /*00026268*/ MOVW        R3, #18700                  @ 0x490c 
    /*0002626c*/ MOVT        R3, #32788                  @ 0x8014 
    /*00026270*/ CMP         R0, R3 
    /*00026274*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26278:
    /*00026278*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb02c] 
    /*0002627c*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb02c] 
    /*00026280*/ BX          LR 
    VI_DRV_GetCmdName_x26284:
    /*00026284*/ MOVW        R3, #18735                  @ 0x492f 
    /*00026288*/ MOVT        R3, #16388                  @ 0x4004 
    /*0002628c*/ CMP         R0, R3 
    /*00026290*/ BEQ         VI_DRV_GetCmdName_x268a0
    /*00026294*/ BLS         VI_DRV_GetCmdName_x264bc
    /*00026298*/ MOVW        R3, #18800                  @ 0x4970 
    /*0002629c*/ MOVT        R3, #16388                  @ 0x4004 
    /*000262a0*/ CMP         R0, R3 
    /*000262a4*/ BEQ         VI_DRV_GetCmdName_x269f8
    /*000262a8*/ BLS         VI_DRV_GetCmdName_x2657c
    /*000262ac*/ MOVW        R3, #18701                  @ 0x490d 
    /*000262b0*/ MOVT        R3, #16392                  @ 0x4008 
    /*000262b4*/ CMP         R0, R3 
    /*000262b8*/ BEQ         VI_DRV_GetCmdName_x26918
    /*000262bc*/ MOVW        R3, #18728                  @ 0x4928 
    /*000262c0*/ MOVT        R3, #16392                  @ 0x4008 
    /*000262c4*/ CMP         R0, R3 
    /*000262c8*/ BEQ         VI_DRV_GetCmdName_x269d4
    /*000262cc*/ MOVW        R3, #18803                  @ 0x4973 
    /*000262d0*/ MOVT        R3, #16388                  @ 0x4004 
    /*000262d4*/ CMP         R0, R3 
    /*000262d8*/ BNE         VI_DRV_GetCmdName_x2659c
    /*000262dc*/ MOVW        R0, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb3cc] 
    /*000262e0*/ MOVT        R0, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb3cc] 
    /*000262e4*/ BX          LR 
    VI_DRV_GetCmdName_x262e8:
    /*000262e8*/ MOVW        R3, #18784                  @ 0x4960 
    /*000262ec*/ MOVT        R3, #32808                  @ 0x8028 
    /*000262f0*/ CMP         R0, R3 
    /*000262f4*/ BEQ         VI_DRV_GetCmdName_x269ec
    /*000262f8*/ BHI         VI_DRV_GetCmdName_x2646c
    /*000262fc*/ MOVW        R3, #18771                  @ 0x4953 
    /*00026300*/ MOVT        R3, #32800                  @ 0x8020 
    /*00026304*/ CMP         R0, R3 
    /*00026308*/ BEQ         VI_DRV_GetCmdName_x26614
    /*0002630c*/ BHI         VI_DRV_GetCmdName_x26854
    /*00026310*/ MOVW        R3, #18741                  @ 0x4935 
    /*00026314*/ MOVT        R3, #32796                  @ 0x801c 
    /*00026318*/ CMP         R0, R3 
    /*0002631c*/ BNE         VI_DRV_GetCmdName_x26988
    /*00026320*/ MOVW        R0, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb200] 
    /*00026324*/ MOVT        R0, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb200] 
    /*00026328*/ BX          LR 
    VI_DRV_GetCmdName_x2632c:
    /*0002632c*/ MOVW        R3, #18731                  @ 0x492b 
    /*00026330*/ MOVT        R3, #16396                  @ 0x400c 
    /*00026334*/ CMP         R0, R3 
    /*00026338*/ BEQ         VI_DRV_GetCmdName_x269a4
    /*0002633c*/ BLS         VI_DRV_GetCmdName_x2670c
    /*00026340*/ MOVW        R3, #18714                  @ 0x491a 
    /*00026344*/ MOVT        R3, #16404                  @ 0x4014 
    /*00026348*/ CMP         R0, R3 
    /*0002634c*/ BEQ         VI_DRV_GetCmdName_x2697c
    /*00026350*/ BLS         VI_DRV_GetCmdName_x265a8
    /*00026354*/ MOVW        R3, #18739                  @ 0x4933 
    /*00026358*/ MOVT        R3, #16416                  @ 0x4020 
    /*0002635c*/ CMP         R0, R3 
    /*00026360*/ BEQ         VI_DRV_GetCmdName_x268f4
    /*00026364*/ MOVW        R3, #18798                  @ 0x496e 
    /*00026368*/ MOVT        R3, #16416                  @ 0x4020 
    /*0002636c*/ CMP         R0, R3 
    /*00026370*/ BEQ         VI_DRV_GetCmdName_x268e8
    /*00026374*/ MOVW        R3, #18764                  @ 0x494c 
    /*00026378*/ MOVT        R3, #16408                  @ 0x4018 
    /*0002637c*/ CMP         R0, R3 
    /*00026380*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26384:
    /*00026384*/ MOVW        R0, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb29c] 
    /*00026388*/ MOVT        R0, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb29c] 
    /*0002638c*/ BX          LR 
    VI_DRV_GetCmdName_x26390:
    /*00026390*/ MOVW        R3, #18698                  @ 0x490a 
    /*00026394*/ MOVT        R3, #32772                  @ 0x8004 
    /*00026398*/ CMP         R0, R3 
    /*0002639c*/ BEQ         VI_DRV_GetCmdName_x268d0
    /*000263a0*/ BLS         VI_DRV_GetCmdName_x2668c
    /*000263a4*/ MOVW        R3, #18745                  @ 0x4939 
    /*000263a8*/ MOVT        R3, #32772                  @ 0x8004 
    /*000263ac*/ CMP         R0, R3 
    /*000263b0*/ BEQ         VI_DRV_GetCmdName_x26608
    /*000263b4*/ BLS         VI_DRV_GetCmdName_x26880
    /*000263b8*/ MOVW        R3, #18767                  @ 0x494f 
    /*000263bc*/ MOVT        R3, #32772                  @ 0x8004 
    /*000263c0*/ CMP         R0, R3 
    /*000263c4*/ BEQ         VI_DRV_GetCmdName_x268ac
    /*000263c8*/ MOVW        R3, #18801                  @ 0x4971 
    /*000263cc*/ MOVT        R3, #32772                  @ 0x8004 
    /*000263d0*/ CMP         R0, R3 
    /*000263d4*/ BEQ         VI_DRV_GetCmdName_x269f8
    /*000263d8*/ MOVW        R3, #18759                  @ 0x4947 
    /*000263dc*/ MOVT        R3, #32772                  @ 0x8004 
    /*000263e0*/ CMP         R0, R3 
    /*000263e4*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x263e8:
    /*000263e8*/ MOVW        R0, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb26c] 
    /*000263ec*/ MOVT        R0, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb26c] 
    /*000263f0*/ BX          LR 
    VI_DRV_GetCmdName_x263f4:
    /*000263f4*/ MOVW        R3, #18780                  @ 0x495c 
    /*000263f8*/ MOVT        R3, #49168                  @ 0xc010 
    /*000263fc*/ CMP         R0, R3 
    /*00026400*/ BEQ         VI_DRV_GetCmdName_x269c8
    /*00026404*/ BLS         VI_DRV_GetCmdName_x264f8
    /*00026408*/ MOVW        R3, #18756                  @ 0x4944 
    /*0002640c*/ MOVT        R3, #49544                  @ 0xc188 
    /*00026410*/ CMP         R0, R3 
    /*00026414*/ BEQ         VI_DRV_GetCmdName_x26a14
    /*00026418*/ MOVW        R3, #18753                  @ 0x4941 
    /*0002641c*/ MOVT        R3, #49612                  @ 0xc1cc 
    /*00026420*/ CMP         R0, R3 
    /*00026424*/ BEQ         VI_DRV_GetCmdName_x2690c
    /*00026428*/ MOVW        R3, #18792                  @ 0x4968 
    /*0002642c*/ MOVT        R3, #49488                  @ 0xc150 
    /*00026430*/ CMP         R0, R3 
    /*00026434*/ BNE         VI_DRV_GetCmdName_x2659c
    /*00026438*/ MOVW        R0, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb380] 
    /*0002643c*/ MOVT        R0, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb380] 
    /*00026440*/ BX          LR 
    VI_DRV_GetCmdName_x26444:
    /*00026444*/ MOVW        R3, #18722                  @ 0x4922 
    /*00026448*/ CMP         R0, R3 
    /*0002644c*/ BEQ         VI_DRV_GetCmdName_x264ec
    /*00026450*/ BHI         VI_DRV_GetCmdName_x2674c
    /*00026454*/ MOVW        R3, #18720                  @ 0x4920 
    /*00026458*/ CMP         R0, R3 
    /*0002645c*/ BCC         VI_DRV_GetCmdName_x2659c
    /*00026460*/ MOVW        R0, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb0ec] 
    /*00026464*/ MOVT        R0, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb0ec] 
    /*00026468*/ BX          LR 
    VI_DRV_GetCmdName_x2646c:
    /*0002646c*/ MOVW        R3, #18710                  @ 0x4916 
    /*00026470*/ MOVT        R3, #32836                  @ 0x8044 
    /*00026474*/ CMP         R0, R3 
    /*00026478*/ BEQ         VI_DRV_GetCmdName_x26640
    /*0002647c*/ BLS         VI_DRV_GetCmdName_x26828
    /*00026480*/ MOVW        R3, #18773                  @ 0x4955 
    /*00026484*/ MOVT        R3, #32884                  @ 0x8074 
    /*00026488*/ CMP         R0, R3 
    /*0002648c*/ BEQ         VI_DRV_GetCmdName_x26970
    /*00026490*/ MOVW        R3, #18689                  @ 0x4901 
    /*00026494*/ MOVT        R3, #32912                  @ 0x8090 
    /*00026498*/ CMP         R0, R3 
    /*0002649c*/ BEQ         VI_DRV_GetCmdName_x26570
    /*000264a0*/ MOVW        R3, #18719                  @ 0x491f 
    /*000264a4*/ MOVT        R3, #32868                  @ 0x8064 
    /*000264a8*/ CMP         R0, R3 
    /*000264ac*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x264b0:
    /*000264b0*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb0dc] 
    /*000264b4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb0dc] 
    /*000264b8*/ BX          LR 
    VI_DRV_GetCmdName_x264bc:
    /*000264bc*/ MOVW        R3, #18694                  @ 0x4906 
    /*000264c0*/ MOVT        R3, #16388                  @ 0x4004 
    /*000264c4*/ CMP         R0, R3 
    /*000264c8*/ BEQ         VI_DRV_GetCmdName_x265cc
    /*000264cc*/ BHI         VI_DRV_GetCmdName_x267fc
    /*000264d0*/ SUB         R0, R0, #18688              @ 0x4900 
    /*000264d4*/ SUB         R0, R0, #74                 @ 0x4a 
    /*000264d8*/ CMP         R0, #1 
    /*000264dc*/ BHI         VI_DRV_GetCmdName_x2659c
    /*000264e0*/ MOVW        R0, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb288] 
    /*000264e4*/ MOVT        R0, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb288] 
    /*000264e8*/ BX          LR 
    VI_DRV_GetCmdName_x264ec:
    /*000264ec*/ MOVW        R0, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb108] 
    /*000264f0*/ MOVT        R0, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb108] 
    /*000264f4*/ BX          LR 
    VI_DRV_GetCmdName_x264f8:
    /*000264f8*/ MOVW        R3, #18725                  @ 0x4925 
    /*000264fc*/ MOVT        R3, #49164                  @ 0xc00c 
    /*00026500*/ CMP         R0, R3 
    /*00026504*/ BEQ         VI_DRV_GetCmdName_x268dc
    /*00026508*/ MOVW        R3, #18727                  @ 0x4927 
    /*0002650c*/ MOVT        R3, #49164                  @ 0xc00c 
    /*00026510*/ CMP         R0, R3 
    /*00026514*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26518:
    /*00026518*/ MOVW        R0, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb154] 
    /*0002651c*/ MOVT        R0, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb154] 
    /*00026520*/ BX          LR 
    VI_DRV_GetCmdName_x26524:
    /*00026524*/ MOVW        R3, #18691                  @ 0x4903 
    /*00026528*/ MOVT        R3, #32932                  @ 0x80a4 
    /*0002652c*/ CMP         R0, R3 
    /*00026530*/ BEQ         VI_DRV_GetCmdName_x26964
    /*00026534*/ MOVW        R3, #18788                  @ 0x4964 
    /*00026538*/ MOVT        R3, #32984                  @ 0x80d8 
    /*0002653c*/ CMP         R0, R3 
    /*00026540*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26544:
    /*00026544*/ MOVW        R0, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb314] 
    /*00026548*/ MOVT        R0, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb314] 
    /*0002654c*/ BX          LR 
    VI_DRV_GetCmdName_x26550:
    /*00026550*/ MOVW        R3, #18772                  @ 0x4954 
    /*00026554*/ MOVT        R3, #16500                  @ 0x4074 
    /*00026558*/ CMP         R0, R3 
    /*0002655c*/ BEQ         VI_DRV_GetCmdName_x26970
    /*00026560*/ MOV         R3, #18688                  @ 0x4900 
    /*00026564*/ MOVT        R3, #16528                  @ 0x4090 
    /*00026568*/ CMP         R0, R3 
    /*0002656c*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26570:
    /*00026570*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xafd0] 
    /*00026574*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0xafd0] 
    /*00026578*/ BX          LR 
    VI_DRV_GetCmdName_x2657c:
    /*0002657c*/ MOVW        R3, #18744                  @ 0x4938 
    /*00026580*/ MOVT        R3, #16388                  @ 0x4004 
    /*00026584*/ CMP         R0, R3 
    /*00026588*/ BEQ         VI_DRV_GetCmdName_x26608
    /*0002658c*/ MOVW        R3, #18758                  @ 0x4946 
    /*00026590*/ MOVT        R3, #16388                  @ 0x4004 
    /*00026594*/ CMP         R0, R3 
    /*00026598*/ BEQ         VI_DRV_GetCmdName_x263e8
    VI_DRV_GetCmdName_x2659c:
    /*0002659c*/ MOVW        R0, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb3dc] 
    /*000265a0*/ MOVT        R0, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb3dc] 
    /*000265a4*/ BX          LR 
    VI_DRV_GetCmdName_x265a8:
    /*000265a8*/ MOVW        R3, #18692                  @ 0x4904 
    /*000265ac*/ MOVT        R3, #16404                  @ 0x4014 
    /*000265b0*/ CMP         R0, R3 
    /*000265b4*/ BEQ         VI_DRV_GetCmdName_x265fc
    /*000265b8*/ MOVW        R3, #18699                  @ 0x490b 
    /*000265bc*/ MOVT        R3, #16404                  @ 0x4014 
    /*000265c0*/ CMP         R0, R3 
    /*000265c4*/ BEQ         VI_DRV_GetCmdName_x26278
    /*000265c8*/ B           VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x265cc:
    /*000265cc*/ MOVW        R0, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaff8] 
    /*000265d0*/ MOVT        R0, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaff8] 
    /*000265d4*/ BX          LR 
    VI_DRV_GetCmdName_x265d8:
    /*000265d8*/ MOVW        R0, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb360] 
    /*000265dc*/ MOVT        R0, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb360] 
    /*000265e0*/ BX          LR 
    VI_DRV_GetCmdName_x265e4:
    /*000265e4*/ MOVW        R3, #18708                  @ 0x4914 
    /*000265e8*/ CMP         R0, R3 
    /*000265ec*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x265f0:
    /*000265f0*/ MOVW        R0, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb08c] 
    /*000265f4*/ MOVT        R0, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb08c] 
    /*000265f8*/ BX          LR 
    VI_DRV_GetCmdName_x265fc:
    /*000265fc*/ MOVW        R0, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xafec] 
    /*00026600*/ MOVT        R0, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0xafec] 
    /*00026604*/ BX          LR 
    VI_DRV_GetCmdName_x26608:
    /*00026608*/ MOVW        R0, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb218] 
    /*0002660c*/ MOVT        R0, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb218] 
    /*00026610*/ BX          LR 
    VI_DRV_GetCmdName_x26614:
    /*00026614*/ MOVW        R0, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb2c8] 
    /*00026618*/ MOVT        R0, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb2c8] 
    /*0002661c*/ BX          LR 
    VI_DRV_GetCmdName_x26620:
    /*00026620*/ MOVW        R3, #18707                  @ 0x4913 
    /*00026624*/ MOVT        R3, #16452                  @ 0x4044 
    /*00026628*/ CMP         R0, R3 
    /*0002662c*/ BEQ         VI_DRV_GetCmdName_x265f0
    /*00026630*/ MOVW        R3, #18709                  @ 0x4915 
    /*00026634*/ MOVT        R3, #16452                  @ 0x4044 
    /*00026638*/ CMP         R0, R3 
    /*0002663c*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26640:
    /*00026640*/ MOVW        R0, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb0a0] 
    /*00026644*/ MOVT        R0, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb0a0] 
    /*00026648*/ BX          LR 
    VI_DRV_GetCmdName_x2664c:
    /*0002664c*/ MOVW        R3, #18779                  @ 0x495b 
    /*00026650*/ MOVT        R3, #32776                  @ 0x8008 
    /*00026654*/ CMP         R0, R3 
    /*00026658*/ BEQ         VI_DRV_GetCmdName_x269b0
    /*0002665c*/ BHI         VI_DRV_GetCmdName_x26764
    /*00026660*/ MOVW        R3, #18729                  @ 0x4929 
    /*00026664*/ MOVT        R3, #32776                  @ 0x8008 
    /*00026668*/ CMP         R0, R3 
    /*0002666c*/ BEQ         VI_DRV_GetCmdName_x269d4
    /*00026670*/ MOVW        R3, #18747                  @ 0x493b 
    /*00026674*/ MOVT        R3, #32776                  @ 0x8008 
    /*00026678*/ CMP         R0, R3 
    /*0002667c*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26680:
    /*00026680*/ MOVW        R0, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb22c] 
    /*00026684*/ MOVT        R0, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb22c] 
    /*00026688*/ BX          LR 
    VI_DRV_GetCmdName_x2668c:
    /*0002668c*/ MOVW        R3, #18766                  @ 0x494e 
    /*00026690*/ MOVT        R3, #17024                  @ 0x4280 
    /*00026694*/ CMP         R0, R3 
    /*00026698*/ BEQ         VI_DRV_GetCmdName_x268ac
    /*0002669c*/ BHI         VI_DRV_GetCmdName_x267d8
    /*000266a0*/ MOVW        R3, #18770                  @ 0x4952 
    /*000266a4*/ MOVT        R3, #16888                  @ 0x41f8 
    /*000266a8*/ CMP         R0, R3 
    /*000266ac*/ BEQ         VI_DRV_GetCmdName_x26614
    /*000266b0*/ MOVW        R3, #18776                  @ 0x4958 
    /*000266b4*/ MOVT        R3, #16960                  @ 0x4240 
    /*000266b8*/ CMP         R0, R3 
    /*000266bc*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x266c0:
    /*000266c0*/ MOVW        R0, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb2dc] 
    /*000266c4*/ MOVT        R0, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb2dc] 
    /*000266c8*/ BX          LR 
    VI_DRV_GetCmdName_x266cc:
    /*000266cc*/ MOVW        R3, #18760                  @ 0x4948 
    /*000266d0*/ MOVT        R3, #16428                  @ 0x402c 
    /*000266d4*/ CMP         R0, R3 
    /*000266d8*/ BEQ         VI_DRV_GetCmdName_x26848
    /*000266dc*/ BHI         VI_DRV_GetCmdName_x26620
    /*000266e0*/ MOVW        R3, #18783                  @ 0x495f 
    /*000266e4*/ MOVT        R3, #16424                  @ 0x4028 
    /*000266e8*/ CMP         R0, R3 
    /*000266ec*/ BEQ         VI_DRV_GetCmdName_x269ec
    /*000266f0*/ MOVW        R3, #18789                  @ 0x4965 
    /*000266f4*/ MOVT        R3, #16424                  @ 0x4028 
    /*000266f8*/ CMP         R0, R3 
    /*000266fc*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26700:
    /*00026700*/ MOVW        R0, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb32c] 
    /*00026704*/ MOVT        R0, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb32c] 
    /*00026708*/ BX          LR 
    VI_DRV_GetCmdName_x2670c:
    /*0002670c*/ MOVW        R3, #18796                  @ 0x496c 
    /*00026710*/ MOVT        R3, #16392                  @ 0x4008 
    /*00026714*/ CMP         R0, R3 
    /*00026718*/ BEQ         VI_DRV_GetCmdName_x26784
    /*0002671c*/ BHI         VI_DRV_GetCmdName_x26790
    /*00026720*/ MOVW        R3, #18778                  @ 0x495a 
    /*00026724*/ MOVT        R3, #16392                  @ 0x4008 
    /*00026728*/ CMP         R0, R3 
    /*0002672c*/ BEQ         VI_DRV_GetCmdName_x269b0
    /*00026730*/ MOVW        R3, #18793                  @ 0x4969 
    /*00026734*/ MOVT        R3, #16392                  @ 0x4008 
    /*00026738*/ CMP         R0, R3 
    /*0002673c*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26740:
    /*00026740*/ MOVW        R0, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb34c] 
    /*00026744*/ MOVT        R0, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb34c] 
    /*00026748*/ BX          LR 
    VI_DRV_GetCmdName_x2674c:
    /*0002674c*/ MOVW        R3, #18723                  @ 0x4923 
    /*00026750*/ CMP         R0, R3 
    /*00026754*/ BNE         VI_DRV_GetCmdName_x2659c
    /*00026758*/ MOVW        R0, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb11c] 
    /*0002675c*/ MOVT        R0, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb11c] 
    /*00026760*/ BX          LR 
    VI_DRV_GetCmdName_x26764:
    /*00026764*/ MOVW        R3, #18794                  @ 0x496a 
    /*00026768*/ MOVT        R3, #32776                  @ 0x8008 
    /*0002676c*/ CMP         R0, R3 
    /*00026770*/ BEQ         VI_DRV_GetCmdName_x26740
    /*00026774*/ MOVW        R3, #18797                  @ 0x496d 
    /*00026778*/ MOVT        R3, #32776                  @ 0x8008 
    /*0002677c*/ CMP         R0, R3 
    /*00026780*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26784:
    /*00026784*/ MOVW        R0, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb3a0] 
    /*00026788*/ MOVT        R0, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb3a0] 
    /*0002678c*/ BX          LR 
    VI_DRV_GetCmdName_x26790:
    /*00026790*/ MOVW        R3, #18724                  @ 0x4924 
    /*00026794*/ MOVT        R3, #16396                  @ 0x400c 
    /*00026798*/ CMP         R0, R3 
    /*0002679c*/ BEQ         VI_DRV_GetCmdName_x268dc
    /*000267a0*/ MOVW        R3, #18726                  @ 0x4926 
    /*000267a4*/ MOVT        R3, #16396                  @ 0x400c 
    /*000267a8*/ CMP         R0, R3 
    /*000267ac*/ BEQ         VI_DRV_GetCmdName_x26518
    /*000267b0*/ B           VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x267b4:
    /*000267b4*/ MOVW        R3, #18732                  @ 0x492c 
    /*000267b8*/ MOVT        R3, #32780                  @ 0x800c 
    /*000267bc*/ CMP         R0, R3 
    /*000267c0*/ BEQ         VI_DRV_GetCmdName_x269a4
    /*000267c4*/ MOVW        R3, #18777                  @ 0x4959 
    /*000267c8*/ MOVT        R3, #32784                  @ 0x8010 
    /*000267cc*/ CMP         R0, R3 
    /*000267d0*/ BEQ         VI_DRV_GetCmdName_x266c0
    /*000267d4*/ B           VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x267d8:
    /*000267d8*/ MOVW        R3, #18768                  @ 0x4950 
    /*000267dc*/ MOVT        R3, #17048                  @ 0x4298 
    /*000267e0*/ CMP         R0, R3 
    /*000267e4*/ BEQ         VI_DRV_GetCmdName_x26998
    /*000267e8*/ MOVW        R3, #18787                  @ 0x4963 
    /*000267ec*/ MOVT        R3, #20192                  @ 0x4ee0 
    /*000267f0*/ CMP         R0, R3 
    /*000267f4*/ BEQ         VI_DRV_GetCmdName_x26544
    /*000267f8*/ B           VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x267fc:
    /*000267fc*/ MOVW        R3, #18697                  @ 0x4909 
    /*00026800*/ MOVT        R3, #16388                  @ 0x4004 
    /*00026804*/ CMP         R0, R3 
    /*00026808*/ BEQ         VI_DRV_GetCmdName_x268d0
    /*0002680c*/ MOVW        R3, #18733                  @ 0x492d 
    /*00026810*/ MOVT        R3, #16388                  @ 0x4004 
    /*00026814*/ CMP         R0, R3 
    /*00026818*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x2681c:
    /*0002681c*/ MOVW        R0, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb1b0] 
    /*00026820*/ MOVT        R0, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb1b0] 
    /*00026824*/ BX          LR 
    VI_DRV_GetCmdName_x26828:
    /*00026828*/ MOVW        R3, #18790                  @ 0x4966 
    /*0002682c*/ MOVT        R3, #32808                  @ 0x8028 
    /*00026830*/ CMP         R0, R3 
    /*00026834*/ BEQ         VI_DRV_GetCmdName_x26700
    /*00026838*/ MOVW        R3, #18761                  @ 0x4949 
    /*0002683c*/ MOVT        R3, #32812                  @ 0x802c 
    /*00026840*/ CMP         R0, R3 
    /*00026844*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26848:
    /*00026848*/ MOVW        R0, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb27c] 
    /*0002684c*/ MOVT        R0, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb27c] 
    /*00026850*/ BX          LR 
    VI_DRV_GetCmdName_x26854:
    /*00026854*/ MOVW        R3, #18799                  @ 0x496f 
    /*00026858*/ MOVT        R3, #32800                  @ 0x8020 
    /*0002685c*/ CMP         R0, R3 
    /*00026860*/ BEQ         VI_DRV_GetCmdName_x268e8
    /*00026864*/ MOVW        R3, #18782                  @ 0x495e 
    /*00026868*/ MOVT        R3, #32804                  @ 0x8024 
    /*0002686c*/ CMP         R0, R3 
    /*00026870*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26874:
    /*00026874*/ MOVW        R0, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb304] 
    /*00026878*/ MOVT        R0, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb304] 
    /*0002687c*/ BX          LR 
    VI_DRV_GetCmdName_x26880:
    /*00026880*/ MOVW        R3, #18734                  @ 0x492e 
    /*00026884*/ MOVT        R3, #32772                  @ 0x8004 
    /*00026888*/ CMP         R0, R3 
    /*0002688c*/ BEQ         VI_DRV_GetCmdName_x2681c
    /*00026890*/ MOVW        R3, #18736                  @ 0x4930 
    /*00026894*/ MOVT        R3, #32772                  @ 0x8004 
    /*00026898*/ CMP         R0, R3 
    /*0002689c*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x268a0:
    /*000268a0*/ MOVW        R0, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb1bc] 
    /*000268a4*/ MOVT        R0, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb1bc] 
    /*000268a8*/ BX          LR 
    VI_DRV_GetCmdName_x268ac:
    /*000268ac*/ MOVW        R0, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb2a8] 
    /*000268b0*/ MOVT        R0, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb2a8] 
    /*000268b4*/ BX          LR 
    VI_DRV_GetCmdName_x268b8:
    /*000268b8*/ MOVW        R0, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb070] 
    /*000268bc*/ MOVT        R0, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb070] 
    /*000268c0*/ BX          LR 
    VI_DRV_GetCmdName_x268c4:
    /*000268c4*/ MOVW        R0, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb3bc] 
    /*000268c8*/ MOVT        R0, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb3bc] 
    /*000268cc*/ BX          LR 
    VI_DRV_GetCmdName_x268d0:
    /*000268d0*/ MOVW        R0, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb01c] 
    /*000268d4*/ MOVT        R0, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb01c] 
    /*000268d8*/ BX          LR 
    VI_DRV_GetCmdName_x268dc:
    /*000268dc*/ MOVW        R0, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb134] 
    /*000268e0*/ MOVT        R0, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb134] 
    /*000268e4*/ BX          LR 
    VI_DRV_GetCmdName_x268e8:
    /*000268e8*/ MOVW        R0, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb394] 
    /*000268ec*/ MOVT        R0, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb394] 
    /*000268f0*/ BX          LR 
    VI_DRV_GetCmdName_x268f4:
    /*000268f4*/ MOVW        R0, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb1f0] 
    /*000268f8*/ MOVT        R0, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb1f0] 
    /*000268fc*/ BX          LR 
    VI_DRV_GetCmdName_x26900:
    /*00026900*/ MOVW        R0, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb04c] 
    /*00026904*/ MOVT        R0, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb04c] 
    /*00026908*/ BX          LR 
    VI_DRV_GetCmdName_x2690c:
    /*0002690c*/ MOVW        R0, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb24c] 
    /*00026910*/ MOVT        R0, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb24c] 
    /*00026914*/ BX          LR 
    VI_DRV_GetCmdName_x26918:
    /*00026918*/ MOVW        R0, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb03c] 
    /*0002691c*/ MOVT        R0, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb03c] 
    /*00026920*/ BX          LR 
    VI_DRV_GetCmdName_x26924:
    /*00026924*/ MOVW        R0, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb0ac] 
    /*00026928*/ MOVT        R0, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb0ac] 
    /*0002692c*/ BX          LR 
    VI_DRV_GetCmdName_x26930:
    /*00026930*/ MOVW        R0, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb20c] 
    /*00026934*/ MOVT        R0, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb20c] 
    /*00026938*/ BX          LR 
    VI_DRV_GetCmdName_x2693c:
    /*0002693c*/ MOVW        R3, #18716                  @ 0x491c 
    /*00026940*/ MOVT        R3, #16640                  @ 0x4100 
    /*00026944*/ CMP         R0, R3 
    /*00026948*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x2694c:
    /*0002694c*/ MOVW        R0, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb0c8] 
    /*00026950*/ MOVT        R0, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb0c8] 
    /*00026954*/ BX          LR 
    VI_DRV_GetCmdName_x26958:
    /*00026958*/ MOVW        R0, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb33c] 
    /*0002695c*/ MOVT        R0, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb33c] 
    /*00026960*/ BX          LR 
    VI_DRV_GetCmdName_x26964:
    /*00026964*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xafdc] 
    /*00026968*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0xafdc] 
    /*0002696c*/ BX          LR 
    VI_DRV_GetCmdName_x26970:
    /*00026970*/ MOVW        R0, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb2d0] 
    /*00026974*/ MOVT        R0, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb2d0] 
    /*00026978*/ BX          LR 
    VI_DRV_GetCmdName_x2697c:
    /*0002697c*/ MOVW        R0, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb0bc] 
    /*00026980*/ MOVT        R0, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb0bc] 
    /*00026984*/ BX          LR 
    VI_DRV_GetCmdName_x26988:
    /*00026988*/ MOVW        R3, #18769                  @ 0x4951 
    /*0002698c*/ MOVT        R3, #32796                  @ 0x801c 
    /*00026990*/ CMP         R0, R3 
    /*00026994*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26998:
    /*00026998*/ MOVW        R0, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb2b8] 
    /*0002699c*/ MOVT        R0, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb2b8] 
    /*000269a0*/ BX          LR 
    VI_DRV_GetCmdName_x269a4:
    /*000269a4*/ MOVW        R0, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb1a0] 
    /*000269a8*/ MOVT        R0, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb1a0] 
    /*000269ac*/ BX          LR 
    VI_DRV_GetCmdName_x269b0:
    /*000269b0*/ MOVW        R0, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb370] 
    /*000269b4*/ MOVT        R0, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb370] 
    /*000269b8*/ BX          LR 
    VI_DRV_GetCmdName_x269bc:
    /*000269bc*/ MOVW        R0, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb18c] 
    /*000269c0*/ MOVT        R0, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb18c] 
    /*000269c4*/ BX          LR 
    VI_DRV_GetCmdName_x269c8:
    /*000269c8*/ MOVW        R0, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb2e8] 
    /*000269cc*/ MOVT        R0, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb2e8] 
    /*000269d0*/ BX          LR 
    VI_DRV_GetCmdName_x269d4:
    /*000269d4*/ MOVW        R0, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb170] 
    /*000269d8*/ MOVT        R0, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb170] 
    /*000269dc*/ BX          LR 
    VI_DRV_GetCmdName_x269e0:
    /*000269e0*/ MOVW        R0, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb060] 
    /*000269e4*/ MOVT        R0, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb060] 
    /*000269e8*/ BX          LR 
    VI_DRV_GetCmdName_x269ec:
    /*000269ec*/ MOVW        R0, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb2f4] 
    /*000269f0*/ MOVT        R0, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb2f4] 
    /*000269f4*/ BX          LR 
    VI_DRV_GetCmdName_x269f8:
    /*000269f8*/ MOVW        R0, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb3b0] 
    /*000269fc*/ MOVT        R0, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb3b0] 
    /*00026a00*/ BX          LR 
    VI_DRV_GetCmdName_x26a04:
    /*00026a04*/ MOVW        R3, #18757                  @ 0x4945 
    /*00026a08*/ MOVT        R3, #33160                  @ 0x8188 
    /*00026a0c*/ CMP         R0, R3 
    /*00026a10*/ BNE         VI_DRV_GetCmdName_x2659c
    VI_DRV_GetCmdName_x26a14:
    /*00026a14*/ MOVW        R0, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb25c] 
    /*00026a18*/ MOVT        R0, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb25c] 
    /*00026a1c*/ BX          LR 
FUNC_END VI_DRV_GetCmdName


FUNC_BEGIN VI_DRV_FuncPreFilter
    /*00026a20*/ MOVW        R2, #18716                  @ 0x491c 
    /*00026a24*/ MOVT        R2, #16640                  @ 0x4100 
    /*00026a28*/ CMP         R3, R2 
    /*00026a2c*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026a30*/ BLS         VI_DRV_FuncPreFilter_x26a88
    /*00026a34*/ MOVW        R2, #18715                  @ 0x491b 
    /*00026a38*/ MOVT        R2, #32788                  @ 0x8014 
    /*00026a3c*/ CMP         R3, R2 
    /*00026a40*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026a44*/ BHI         VI_DRV_FuncPreFilter_x26ad4
    /*00026a48*/ MOVW        R2, #18729                  @ 0x4929 
    /*00026a4c*/ MOVT        R2, #32776                  @ 0x8008 
    /*00026a50*/ CMP         R3, R2 
    /*00026a54*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026a58*/ BLS         VI_DRV_FuncPreFilter_x26c14
    /*00026a5c*/ MOVW        R2, #18794                  @ 0x496a 
    /*00026a60*/ MOVT        R2, #32776                  @ 0x8008 
    /*00026a64*/ CMP         R3, R2 
    /*00026a68*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026a6c*/ MOVW        R2, #18693                  @ 0x4905 
    /*00026a70*/ MOVT        R2, #32788                  @ 0x8014 
    /*00026a74*/ CMP         R3, R2 
    /*00026a78*/ BNE         VI_DRV_FuncPreFilter_x26b18
    VI_DRV_FuncPreFilter_x26a7c:
    /*00026a7c*/ MOVW        R0, #32776                  @ 0x8008 
    /*00026a80*/ MOVT        R0, #40976                  @ 0xa010 
    /*00026a84*/ BX          LR 
    VI_DRV_FuncPreFilter_x26a88:
    /*00026a88*/ MOVW        R2, #18726                  @ 0x4926 
    /*00026a8c*/ MOVT        R2, #16396                  @ 0x400c 
    /*00026a90*/ CMP         R3, R2 
    /*00026a94*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026a98*/ BHI         VI_DRV_FuncPreFilter_x26bb8
    /*00026a9c*/ MOVW        R2, #18758                  @ 0x4946 
    /*00026aa0*/ MOVT        R2, #16388                  @ 0x4004 
    /*00026aa4*/ CMP         R3, R2 
    /*00026aa8*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026aac*/ BLS         VI_DRV_FuncPreFilter_x26bf0
    /*00026ab0*/ MOVW        R2, #18728                  @ 0x4928 
    /*00026ab4*/ MOVT        R2, #16392                  @ 0x4008 
    /*00026ab8*/ CMP         R3, R2 
    /*00026abc*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026ac0*/ MOVW        R2, #18793                  @ 0x4969 
    /*00026ac4*/ MOVT        R2, #16392                  @ 0x4008 
    /*00026ac8*/ CMP         R3, R2 
    /*00026acc*/ BNE         VI_DRV_FuncPreFilter_x26b18
    /*00026ad0*/ B           VI_DRV_FuncPreFilter_x26a7c
    VI_DRV_FuncPreFilter_x26ad4:
    /*00026ad4*/ MOVW        R2, #18691                  @ 0x4903 
    /*00026ad8*/ MOVT        R2, #32932                  @ 0x80a4 
    /*00026adc*/ CMP         R3, R2 
    /*00026ae0*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026ae4*/ BLS         VI_DRV_FuncPreFilter_x26c5c
    /*00026ae8*/ MOVW        R2, #18730                  @ 0x492a 
    /*00026aec*/ MOVT        R2, #49160                  @ 0xc008 
    /*00026af0*/ CMP         R3, R2 
    /*00026af4*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026af8*/ MOVW        R2, #18727                  @ 0x4927 
    /*00026afc*/ MOVT        R2, #49164                  @ 0xc00c 
    /*00026b00*/ CMP         R3, R2 
    /*00026b04*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026b08*/ MOVW        R2, #18717                  @ 0x491d 
    /*00026b0c*/ MOVT        R2, #33024                  @ 0x8100 
    /*00026b10*/ CMP         R3, R2 
    /*00026b14*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    VI_DRV_FuncPreFilter_x26b18:
    /*00026b18*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00026b1c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00026b20*/ ADD         R2, R2, R1, LSL #2 
    /*00026b24*/ LDR         R0, [R2, #712]              @ 0x2c8 
    /*00026b28*/ CMP         R0, #0 
    /*00026b2c*/ BXEQ        LR 
    /*00026b30*/ CMP         R0, #1 
    /*00026b34*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00026b38*/ SUB         SP, SP, #20 
    /*00026b3c*/ BEQ         VI_DRV_FuncPreFilter_x26c80
    /*00026b40*/ CMP         R0, #2 
    /*00026b44*/ BEQ         VI_DRV_FuncPreFilter_x26d40
    /*00026b48*/ CMP         R0, #3 
    /*00026b4c*/ BNE         VI_DRV_FuncPreFilter_x26e0c
    /*00026b50*/ MOVW        R2, #18766                  @ 0x494e 
    /*00026b54*/ MOVT        R2, #17024                  @ 0x4280 
    /*00026b58*/ CMP         R3, R2 
    /*00026b5c*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00026b60*/ BHI         VI_DRV_FuncPreFilter_x26cf0
    /*00026b64*/ MOVW        R2, #18764                  @ 0x494c 
    /*00026b68*/ MOVT        R2, #16408                  @ 0x4018 
    /*00026b6c*/ CMP         R3, R2 
    /*00026b70*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00026b74*/ BHI         VI_DRV_FuncPreFilter_x26e54
    /*00026b78*/ MOVW        R2, #18743                  @ 0x4937 
    /*00026b7c*/ CMP         R3, R2 
    /*00026b80*/ BLS         VI_DRV_FuncPreFilter_x26fd0
    /*00026b84*/ MOVW        R2, #18800                  @ 0x4970 
    /*00026b88*/ MOVT        R2, #16388                  @ 0x4004 
    /*00026b8c*/ CMP         R3, R2 
    /*00026b90*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00026b94*/ MOVW        R2, #18800                  @ 0x4970 
    /*00026b98*/ MOVT        R2, #16388                  @ 0x4004 
    /*00026b9c*/ CMP         R3, R2 
    /*00026ba0*/ BHI         VI_DRV_FuncPreFilter_x27198
    /*00026ba4*/ MOVW        R2, #18735                  @ 0x492f 
    /*00026ba8*/ MOVT        R2, #16388                  @ 0x4004 
    /*00026bac*/ CMP         R3, R2 
    /*00026bb0*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00026bb4*/ B           VI_DRV_FuncPreFilter_x26e8c
    VI_DRV_FuncPreFilter_x26bb8:
    /*00026bb8*/ MOVW        R2, #18774                  @ 0x4956 
    /*00026bbc*/ MOVT        R2, #16408                  @ 0x4018 
    /*00026bc0*/ CMP         R3, R2 
    /*00026bc4*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026bc8*/ BLS         VI_DRV_FuncPreFilter_x26c38
    /*00026bcc*/ MOVW        R2, #18798                  @ 0x496e 
    /*00026bd0*/ MOVT        R2, #16416                  @ 0x4020 
    /*00026bd4*/ CMP         R3, R2 
    /*00026bd8*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026bdc*/ MOVW        R2, #18690                  @ 0x4902 
    /*00026be0*/ MOVT        R2, #16548                  @ 0x40a4 
    /*00026be4*/ CMP         R3, R2 
    /*00026be8*/ BNE         VI_DRV_FuncPreFilter_x26b18
    /*00026bec*/ B           VI_DRV_FuncPreFilter_x26a7c
    VI_DRV_FuncPreFilter_x26bf0:
    /*00026bf0*/ MOVW        R2, #18694                  @ 0x4906 
    /*00026bf4*/ MOVT        R2, #16388                  @ 0x4004 
    /*00026bf8*/ CMP         R3, R2 
    /*00026bfc*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026c00*/ MOVW        R2, #18697                  @ 0x4909 
    /*00026c04*/ MOVT        R2, #16388                  @ 0x4004 
    /*00026c08*/ CMP         R3, R2 
    /*00026c0c*/ BNE         VI_DRV_FuncPreFilter_x26b18
    /*00026c10*/ B           VI_DRV_FuncPreFilter_x26a7c
    VI_DRV_FuncPreFilter_x26c14:
    /*00026c14*/ MOVW        R2, #18698                  @ 0x490a 
    /*00026c18*/ MOVT        R2, #32772                  @ 0x8004 
    /*00026c1c*/ CMP         R3, R2 
    /*00026c20*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026c24*/ MOVW        R2, #18759                  @ 0x4947 
    /*00026c28*/ MOVT        R2, #32772                  @ 0x8004 
    /*00026c2c*/ CMP         R3, R2 
    /*00026c30*/ BNE         VI_DRV_FuncPreFilter_x26b18
    /*00026c34*/ B           VI_DRV_FuncPreFilter_x26a7c
    VI_DRV_FuncPreFilter_x26c38:
    /*00026c38*/ MOVW        R2, #18692                  @ 0x4904 
    /*00026c3c*/ MOVT        R2, #16404                  @ 0x4014 
    /*00026c40*/ CMP         R3, R2 
    /*00026c44*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026c48*/ MOVW        R2, #18714                  @ 0x491a 
    /*00026c4c*/ MOVT        R2, #16404                  @ 0x4014 
    /*00026c50*/ CMP         R3, R2 
    /*00026c54*/ BNE         VI_DRV_FuncPreFilter_x26b18
    /*00026c58*/ B           VI_DRV_FuncPreFilter_x26a7c
    VI_DRV_FuncPreFilter_x26c5c:
    /*00026c5c*/ MOVW        R2, #18775                  @ 0x4957 
    /*00026c60*/ MOVT        R2, #32792                  @ 0x8018 
    /*00026c64*/ CMP         R3, R2 
    /*00026c68*/ BEQ         VI_DRV_FuncPreFilter_x26a7c
    /*00026c6c*/ MOVW        R2, #18799                  @ 0x496f 
    /*00026c70*/ MOVT        R2, #32800                  @ 0x8020 
    /*00026c74*/ CMP         R3, R2 
    /*00026c78*/ BNE         VI_DRV_FuncPreFilter_x26b18
    /*00026c7c*/ B           VI_DRV_FuncPreFilter_x26a7c
    VI_DRV_FuncPreFilter_x26c80:
    /*00026c80*/ MOVW        R2, #18787                  @ 0x4963 
    /*00026c84*/ MOVT        R2, #20192                  @ 0x4ee0 
    /*00026c88*/ CMP         R3, R2 
    /*00026c8c*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00026c90*/ BHI         VI_DRV_FuncPreFilter_x26d80
    /*00026c94*/ MOVW        R2, #18783                  @ 0x495f 
    /*00026c98*/ MOVT        R2, #16424                  @ 0x4028 
    /*00026c9c*/ CMP         R3, R2 
    /*00026ca0*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00026ca4*/ BLS         VI_DRV_FuncPreFilter_x26f30
    /*00026ca8*/ MOVW        R2, #18770                  @ 0x4952 
    /*00026cac*/ MOVT        R2, #16888                  @ 0x41f8 
    /*00026cb0*/ CMP         R3, R2 
    /*00026cb4*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00026cb8*/ BHI         VI_DRV_FuncPreFilter_x27058
    /*00026cbc*/ MOVW        R2, #18772                  @ 0x4954 
    /*00026cc0*/ MOVT        R2, #16500                  @ 0x4074 
    /*00026cc4*/ CMP         R3, R2 
    /*00026cc8*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00026ccc*/ MOVW        R2, #18704                  @ 0x4910 
    /*00026cd0*/ MOVT        R2, #16728                  @ 0x4158 
    /*00026cd4*/ CMP         R3, R2 
    /*00026cd8*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00026cdc*/ MOVW        R2, #18789                  @ 0x4965 
    /*00026ce0*/ MOVT        R2, #16424                  @ 0x4028 
    /*00026ce4*/ CMP         R3, R2 
    /*00026ce8*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00026cec*/ B           VI_DRV_FuncPreFilter_x26dd8
    VI_DRV_FuncPreFilter_x26cf0:
    /*00026cf0*/ MOVW        R2, #18769                  @ 0x4951 
    /*00026cf4*/ MOVT        R2, #32796                  @ 0x801c 
    /*00026cf8*/ CMP         R3, R2 
    /*00026cfc*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00026d00*/ BHI         VI_DRV_FuncPreFilter_x26e18
    /*00026d04*/ MOVW        R2, #18801                  @ 0x4971 
    /*00026d08*/ MOVT        R2, #32772                  @ 0x8004 
    /*00026d0c*/ CMP         R3, R2 
    /*00026d10*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00026d14*/ BLS         VI_DRV_FuncPreFilter_x26fa8
    /*00026d18*/ MOVW        R2, #18777                  @ 0x4959 
    /*00026d1c*/ MOVT        R2, #32784                  @ 0x8010 
    /*00026d20*/ CMP         R3, R2 
    /*00026d24*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00026d28*/ BHI         VI_DRV_FuncPreFilter_x27174
    /*00026d2c*/ MOVW        R2, #18779                  @ 0x495b 
    /*00026d30*/ MOVT        R2, #32776                  @ 0x8008 
    /*00026d34*/ CMP         R3, R2 
    /*00026d38*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00026d3c*/ B           VI_DRV_FuncPreFilter_x26e8c
    VI_DRV_FuncPreFilter_x26d40:
    /*00026d40*/ MOVW        R2, #18748                  @ 0x493c 
    /*00026d44*/ MOVT        R2, #16504                  @ 0x4078 
    /*00026d48*/ CMP         R3, R2 
    /*00026d4c*/ BEQ         VI_DRV_FuncPreFilter_x26ed4
    /*00026d50*/ BHI         VI_DRV_FuncPreFilter_x26ea4
    /*00026d54*/ MOVW        R2, #18735                  @ 0x492f 
    /*00026d58*/ MOVT        R2, #16388                  @ 0x4004 
    /*00026d5c*/ CMP         R3, R2 
    /*00026d60*/ BEQ         VI_DRV_FuncPreFilter_x26ed4
    /*00026d64*/ MOVW        R2, #18746                  @ 0x493a 
    /*00026d68*/ MOVT        R2, #16392                  @ 0x4008 
    /*00026d6c*/ CMP         R3, R2 
    /*00026d70*/ BEQ         VI_DRV_FuncPreFilter_x26ed4
    VI_DRV_FuncPreFilter_x26d74:
    /*00026d74*/ MOV         R0, #0 
    VI_DRV_FuncPreFilter_x26d78:
    /*00026d78*/ ADD         SP, SP, #20 
    /*00026d7c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_FuncPreFilter_x26d80:
    /*00026d80*/ MOVW        R2, #18771                  @ 0x4953 
    /*00026d84*/ MOVT        R2, #32800                  @ 0x8020 
    /*00026d88*/ CMP         R3, R2 
    /*00026d8c*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00026d90*/ BHI         VI_DRV_FuncPreFilter_x26ee8
    /*00026d94*/ MOVW        R2, #18777                  @ 0x4959 
    /*00026d98*/ MOVT        R2, #32784                  @ 0x8010 
    /*00026d9c*/ CMP         R3, R2 
    /*00026da0*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00026da4*/ BHI         VI_DRV_FuncPreFilter_x26ff0
    /*00026da8*/ MOVW        R2, #18801                  @ 0x4971 
    /*00026dac*/ MOVT        R2, #32772                  @ 0x8004 
    /*00026db0*/ CMP         R3, R2 
    /*00026db4*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00026db8*/ MOVW        R2, #18779                  @ 0x495b 
    /*00026dbc*/ MOVT        R2, #32776                  @ 0x8008 
    /*00026dc0*/ CMP         R3, R2 
    /*00026dc4*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00026dc8*/ MOVW        R2, #18767                  @ 0x494f 
    /*00026dcc*/ MOVT        R2, #32772                  @ 0x8004 
    /*00026dd0*/ CMP         R3, R2 
    /*00026dd4*/ BNE         VI_DRV_FuncPreFilter_x26d74
    VI_DRV_FuncPreFilter_x26dd8:
    /*00026dd8*/ MOV         R0, R3 
    /*00026ddc*/ BL          0x0000000000026DDC          @ VI_DRV_GetCmdName [R_ARM_CALL: .text+0x2609c] 
    /*00026de0*/ MOV         R2, #1 
    /*00026de4*/ MOVW        R3, #1231                   @ 0x4cf 
    VI_DRV_FuncPreFilter_x26de8:
    /*00026de8*/ STR         R2, [SP, #8] 
    VI_DRV_FuncPreFilter_x26dec:
    /*00026dec*/ STR         R3, [SP] 
    /*00026df0*/ MOVW        R2, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb3e0] 
    /*00026df4*/ STR         R0, [SP, #4] 
    /*00026df8*/ MOVT        R2, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb3e0] 
    /*00026dfc*/ LDR         R3, [PC, #952]              @ 0x00000000000271bc 
    /*00026e00*/ MOV         R1, #16 
    /*00026e04*/ MOV         R0, #3 
    /*00026e08*/ BL          0x0000000000026E08          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_FuncPreFilter_x26e0c:
    /*00026e0c*/ MOVW        R0, #32776                  @ 0x8008 
    /*00026e10*/ MOVT        R0, #40976                  @ 0xa010 
    /*00026e14*/ B           VI_DRV_FuncPreFilter_x26d78
    VI_DRV_FuncPreFilter_x26e18:
    /*00026e18*/ MOVW        R2, #18773                  @ 0x4955 
    /*00026e1c*/ MOVT        R2, #32884                  @ 0x8074 
    /*00026e20*/ CMP         R3, R2 
    /*00026e24*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00026e28*/ BLS         VI_DRV_FuncPreFilter_x26f58
    /*00026e2c*/ MOVW        R2, #18788                  @ 0x4964 
    /*00026e30*/ MOVT        R2, #32984                  @ 0x80d8 
    /*00026e34*/ CMP         R3, R2 
    /*00026e38*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00026e3c*/ BHI         VI_DRV_FuncPreFilter_x270c0
    /*00026e40*/ MOVW        R2, #18749                  @ 0x493d 
    /*00026e44*/ MOVT        R2, #32888                  @ 0x8078 
    /*00026e48*/ CMP         R3, R2 
    /*00026e4c*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00026e50*/ B           VI_DRV_FuncPreFilter_x26e8c
    VI_DRV_FuncPreFilter_x26e54:
    /*00026e54*/ MOVW        R2, #18748                  @ 0x493c 
    /*00026e58*/ MOVT        R2, #16504                  @ 0x4078 
    /*00026e5c*/ CMP         R3, R2 
    /*00026e60*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00026e64*/ BHI         VI_DRV_FuncPreFilter_x26f80
    /*00026e68*/ MOVW        R2, #18783                  @ 0x495f 
    /*00026e6c*/ MOVT        R2, #16424                  @ 0x4028 
    /*00026e70*/ CMP         R3, R2 
    /*00026e74*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00026e78*/ BHI         VI_DRV_FuncPreFilter_x270e4
    /*00026e7c*/ MOVW        R2, #18781                  @ 0x495d 
    /*00026e80*/ MOVT        R2, #16420                  @ 0x4024 
    /*00026e84*/ CMP         R3, R2 
    /*00026e88*/ BNE         VI_DRV_FuncPreFilter_x26d74
    VI_DRV_FuncPreFilter_x26e8c:
    /*00026e8c*/ MOV         R0, R3 
    /*00026e90*/ BL          0x0000000000026E90          @ VI_DRV_GetCmdName [R_ARM_CALL: .text+0x2609c] 
    /*00026e94*/ MOV         IP, #3 
    /*00026e98*/ MOVW        R3, #1325                   @ 0x52d 
    /*00026e9c*/ STR         IP, [SP, #8] 
    /*00026ea0*/ B           VI_DRV_FuncPreFilter_x26dec
    VI_DRV_FuncPreFilter_x26ea4:
    /*00026ea4*/ MOVW        R2, #18736                  @ 0x4930 
    /*00026ea8*/ MOVT        R2, #32772                  @ 0x8004 
    /*00026eac*/ CMP         R3, R2 
    /*00026eb0*/ BEQ         VI_DRV_FuncPreFilter_x26ed4
    /*00026eb4*/ MOVW        R2, #18749                  @ 0x493d 
    /*00026eb8*/ MOVT        R2, #32888                  @ 0x8078 
    /*00026ebc*/ CMP         R3, R2 
    /*00026ec0*/ BEQ         VI_DRV_FuncPreFilter_x26ed4
    /*00026ec4*/ MOVW        R2, #18738                  @ 0x4932 
    /*00026ec8*/ MOVT        R2, #16728                  @ 0x4158 
    /*00026ecc*/ CMP         R3, R2 
    /*00026ed0*/ BNE         VI_DRV_FuncPreFilter_x26d74
    VI_DRV_FuncPreFilter_x26ed4:
    /*00026ed4*/ MOV         R0, R3 
    /*00026ed8*/ BL          0x0000000000026ED8          @ VI_DRV_GetCmdName [R_ARM_CALL: .text+0x2609c] 
    /*00026edc*/ MOV         R2, #2 
    /*00026ee0*/ MOVW        R3, #1254                   @ 0x4e6 
    /*00026ee4*/ B           VI_DRV_FuncPreFilter_x26de8
    VI_DRV_FuncPreFilter_x26ee8:
    /*00026ee8*/ MOVW        R2, #18773                  @ 0x4955 
    /*00026eec*/ MOVT        R2, #32884                  @ 0x8074 
    /*00026ef0*/ CMP         R3, R2 
    /*00026ef4*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00026ef8*/ BHI         VI_DRV_FuncPreFilter_x27024
    /*00026efc*/ MOVW        R2, #18784                  @ 0x4960 
    /*00026f00*/ MOVT        R2, #32808                  @ 0x8028 
    /*00026f04*/ CMP         R3, R2 
    /*00026f08*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00026f0c*/ MOVW        R2, #18790                  @ 0x4966 
    /*00026f10*/ MOVT        R2, #32808                  @ 0x8028 
    /*00026f14*/ CMP         R3, R2 
    /*00026f18*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00026f1c*/ MOVW        R2, #18782                  @ 0x495e 
    /*00026f20*/ MOVT        R2, #32804                  @ 0x8024 
    /*00026f24*/ CMP         R3, R2 
    /*00026f28*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00026f2c*/ B           VI_DRV_FuncPreFilter_x26dd8
    VI_DRV_FuncPreFilter_x26f30:
    /*00026f30*/ MOVW        R2, #18800                  @ 0x4970 
    /*00026f34*/ MOVT        R2, #16388                  @ 0x4004 
    /*00026f38*/ CMP         R3, R2 
    /*00026f3c*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00026f40*/ BHI         VI_DRV_FuncPreFilter_x2708c
    /*00026f44*/ SUB         R2, R3, #18688              @ 0x4900 
    /*00026f48*/ SUB         R2, R2, #17 
    /*00026f4c*/ CMP         R2, #1 
    /*00026f50*/ BHI         VI_DRV_FuncPreFilter_x26d74
    /*00026f54*/ B           VI_DRV_FuncPreFilter_x26dd8
    VI_DRV_FuncPreFilter_x26f58:
    /*00026f58*/ MOVW        R2, #18782                  @ 0x495e 
    /*00026f5c*/ MOVT        R2, #32804                  @ 0x8024 
    /*00026f60*/ CMP         R3, R2 
    /*00026f64*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00026f68*/ BHI         VI_DRV_FuncPreFilter_x27108
    /*00026f6c*/ MOVW        R2, #18771                  @ 0x4953 
    /*00026f70*/ MOVT        R2, #32800                  @ 0x8020 
    /*00026f74*/ CMP         R3, R2 
    /*00026f78*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00026f7c*/ B           VI_DRV_FuncPreFilter_x26e8c
    VI_DRV_FuncPreFilter_x26f80:
    /*00026f80*/ MOVW        R2, #18738                  @ 0x4932 
    /*00026f84*/ MOVT        R2, #16728                  @ 0x4158 
    /*00026f88*/ CMP         R3, R2 
    /*00026f8c*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00026f90*/ BHI         VI_DRV_FuncPreFilter_x2712c
    /*00026f94*/ MOVW        R2, #18704                  @ 0x4910 
    /*00026f98*/ MOVT        R2, #16728                  @ 0x4158 
    /*00026f9c*/ CMP         R3, R2 
    /*00026fa0*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00026fa4*/ B           VI_DRV_FuncPreFilter_x26e8c
    VI_DRV_FuncPreFilter_x26fa8:
    /*00026fa8*/ MOVW        R2, #18787                  @ 0x4963 
    /*00026fac*/ MOVT        R2, #20192                  @ 0x4ee0 
    /*00026fb0*/ CMP         R3, R2 
    /*00026fb4*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00026fb8*/ BHI         VI_DRV_FuncPreFilter_x27150
    /*00026fbc*/ MOVW        R2, #18768                  @ 0x4950 
    /*00026fc0*/ MOVT        R2, #17048                  @ 0x4298 
    /*00026fc4*/ CMP         R3, R2 
    /*00026fc8*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00026fcc*/ B           VI_DRV_FuncPreFilter_x26e8c
    VI_DRV_FuncPreFilter_x26fd0:
    /*00026fd0*/ MOVW        R2, #18742                  @ 0x4936 
    /*00026fd4*/ CMP         R3, R2 
    /*00026fd8*/ BCS         VI_DRV_FuncPreFilter_x26e8c
    /*00026fdc*/ SUB         R2, R3, #18688              @ 0x4900 
    /*00026fe0*/ SUB         R2, R2, #17 
    /*00026fe4*/ CMP         R2, #1 
    /*00026fe8*/ BHI         VI_DRV_FuncPreFilter_x26d74
    /*00026fec*/ B           VI_DRV_FuncPreFilter_x26e8c
    VI_DRV_FuncPreFilter_x26ff0:
    /*00026ff0*/ MOVW        R2, #18795                  @ 0x496b 
    /*00026ff4*/ MOVT        R2, #32792                  @ 0x8018 
    /*00026ff8*/ CMP         R3, R2 
    /*00026ffc*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00027000*/ MOVW        R2, #18769                  @ 0x4951 
    /*00027004*/ MOVT        R2, #32796                  @ 0x801c 
    /*00027008*/ CMP         R3, R2 
    /*0002700c*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00027010*/ MOVW        R2, #18765                  @ 0x494d 
    /*00027014*/ MOVT        R2, #32792                  @ 0x8018 
    /*00027018*/ CMP         R3, R2 
    /*0002701c*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00027020*/ B           VI_DRV_FuncPreFilter_x26dd8
    VI_DRV_FuncPreFilter_x27024:
    /*00027024*/ MOVW        R2, #18791                  @ 0x4967 
    /*00027028*/ MOVT        R2, #49160                  @ 0xc008 
    /*0002702c*/ CMP         R3, R2 
    /*00027030*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00027034*/ MOVW        R2, #18780                  @ 0x495c 
    /*00027038*/ MOVT        R2, #49168                  @ 0xc010 
    /*0002703c*/ CMP         R3, R2 
    /*00027040*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00027044*/ MOVW        R2, #18788                  @ 0x4964 
    /*00027048*/ MOVT        R2, #32984                  @ 0x80d8 
    /*0002704c*/ CMP         R3, R2 
    /*00027050*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00027054*/ B           VI_DRV_FuncPreFilter_x26dd8
    VI_DRV_FuncPreFilter_x27058:
    /*00027058*/ MOVW        R2, #18766                  @ 0x494e 
    /*0002705c*/ MOVT        R2, #17024                  @ 0x4280 
    /*00027060*/ CMP         R3, R2 
    /*00027064*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00027068*/ MOVW        R2, #18768                  @ 0x4950 
    /*0002706c*/ MOVT        R2, #17048                  @ 0x4298 
    /*00027070*/ CMP         R3, R2 
    /*00027074*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*00027078*/ MOVW        R2, #18776                  @ 0x4958 
    /*0002707c*/ MOVT        R2, #16960                  @ 0x4240 
    /*00027080*/ CMP         R3, R2 
    /*00027084*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00027088*/ B           VI_DRV_FuncPreFilter_x26dd8
    VI_DRV_FuncPreFilter_x2708c:
    /*0002708c*/ MOVW        R2, #18764                  @ 0x494c 
    /*00027090*/ MOVT        R2, #16408                  @ 0x4018 
    /*00027094*/ CMP         R3, R2 
    /*00027098*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*0002709c*/ MOVW        R2, #18781                  @ 0x495d 
    /*000270a0*/ MOVT        R2, #16420                  @ 0x4024 
    /*000270a4*/ CMP         R3, R2 
    /*000270a8*/ BEQ         VI_DRV_FuncPreFilter_x26dd8
    /*000270ac*/ MOVW        R2, #18778                  @ 0x495a 
    /*000270b0*/ MOVT        R2, #16392                  @ 0x4008 
    /*000270b4*/ CMP         R3, R2 
    /*000270b8*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*000270bc*/ B           VI_DRV_FuncPreFilter_x26dd8
    VI_DRV_FuncPreFilter_x270c0:
    /*000270c0*/ MOVW        R2, #18791                  @ 0x4967 
    /*000270c4*/ MOVT        R2, #49160                  @ 0xc008 
    /*000270c8*/ CMP         R3, R2 
    /*000270cc*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*000270d0*/ MOVW        R2, #18780                  @ 0x495c 
    /*000270d4*/ MOVT        R2, #49168                  @ 0xc010 
    /*000270d8*/ CMP         R3, R2 
    /*000270dc*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*000270e0*/ B           VI_DRV_FuncPreFilter_x26e8c
    VI_DRV_FuncPreFilter_x270e4:
    /*000270e4*/ MOVW        R2, #18789                  @ 0x4965 
    /*000270e8*/ MOVT        R2, #16424                  @ 0x4028 
    /*000270ec*/ CMP         R3, R2 
    /*000270f0*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*000270f4*/ MOVW        R2, #18772                  @ 0x4954 
    /*000270f8*/ MOVT        R2, #16500                  @ 0x4074 
    /*000270fc*/ CMP         R3, R2 
    /*00027100*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00027104*/ B           VI_DRV_FuncPreFilter_x26e8c
    VI_DRV_FuncPreFilter_x27108:
    /*00027108*/ MOVW        R2, #18784                  @ 0x4960 
    /*0002710c*/ MOVT        R2, #32808                  @ 0x8028 
    /*00027110*/ CMP         R3, R2 
    /*00027114*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00027118*/ MOVW        R2, #18790                  @ 0x4966 
    /*0002711c*/ MOVT        R2, #32808                  @ 0x8028 
    /*00027120*/ CMP         R3, R2 
    /*00027124*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00027128*/ B           VI_DRV_FuncPreFilter_x26e8c
    VI_DRV_FuncPreFilter_x2712c:
    /*0002712c*/ MOVW        R2, #18770                  @ 0x4952 
    /*00027130*/ MOVT        R2, #16888                  @ 0x41f8 
    /*00027134*/ CMP         R3, R2 
    /*00027138*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*0002713c*/ MOVW        R2, #18776                  @ 0x4958 
    /*00027140*/ MOVT        R2, #16960                  @ 0x4240 
    /*00027144*/ CMP         R3, R2 
    /*00027148*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*0002714c*/ B           VI_DRV_FuncPreFilter_x26e8c
    VI_DRV_FuncPreFilter_x27150:
    /*00027150*/ MOVW        R2, #18736                  @ 0x4930 
    /*00027154*/ MOVT        R2, #32772                  @ 0x8004 
    /*00027158*/ CMP         R3, R2 
    /*0002715c*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00027160*/ MOVW        R2, #18767                  @ 0x494f 
    /*00027164*/ MOVT        R2, #32772                  @ 0x8004 
    /*00027168*/ CMP         R3, R2 
    /*0002716c*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00027170*/ B           VI_DRV_FuncPreFilter_x26e8c
    VI_DRV_FuncPreFilter_x27174:
    /*00027174*/ MOVW        R2, #18765                  @ 0x494d 
    /*00027178*/ MOVT        R2, #32792                  @ 0x8018 
    /*0002717c*/ CMP         R3, R2 
    /*00027180*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*00027184*/ MOVW        R2, #18795                  @ 0x496b 
    /*00027188*/ MOVT        R2, #32792                  @ 0x8018 
    /*0002718c*/ CMP         R3, R2 
    /*00027190*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*00027194*/ B           VI_DRV_FuncPreFilter_x26e8c
    VI_DRV_FuncPreFilter_x27198:
    /*00027198*/ MOVW        R2, #18746                  @ 0x493a 
    /*0002719c*/ MOVT        R2, #16392                  @ 0x4008 
    /*000271a0*/ CMP         R3, R2 
    /*000271a4*/ BEQ         VI_DRV_FuncPreFilter_x26e8c
    /*000271a8*/ MOVW        R2, #18778                  @ 0x495a 
    /*000271ac*/ MOVT        R2, #16392                  @ 0x4008 
    /*000271b0*/ CMP         R3, R2 
    /*000271b4*/ BNE         VI_DRV_FuncPreFilter_x26d74
    /*000271b8*/ B           VI_DRV_FuncPreFilter_x26e8c
    /*000271bc*/ ANDEQ       R1, R0, R4, LSR R8 
FUNC_END VI_DRV_FuncPreFilter


FUNC_BEGIN VI_DRV_GetBeCfgLocal
    /*000271c0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000271c4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000271c8*/ ADD         R0, R3, R0, LSL #2 
    /*000271cc*/ PUSH        {R4, R5, R6, LR} 
    /*000271d0*/ MOV         R5, R2 
    /*000271d4*/ LDR         R4, [R0, #728]              @ 0x2d8 
    /*000271d8*/ MOV         R2, #24 
    /*000271dc*/ ADD         R4, R4, #87040              @ 0x15400 
    /*000271e0*/ ADD         R0, R4, #552                @ 0x228 
    /*000271e4*/ BL          0x00000000000271E4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000271e8*/ ADD         R0, R4, #576                @ 0x240 
    /*000271ec*/ MOV         R1, R5 
    /*000271f0*/ MOV         R2, #108                    @ 0x6c 
    /*000271f4*/ POP         {R4, R5, R6, LR} 
    VI_DRV_GetBeCfgLocal_x271f8:
    /*000271f8*/ B           VI_DRV_GetBeCfgLocal_x271f8 @ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_GetBeCfgLocal


FUNC_BEGIN VI_DRV_GetPipeMode
    /*000271fc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00027200*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00027204*/ ADD         R0, R3, R0, LSL #2 
    /*00027208*/ LDR         R0, [R0, #712]              @ 0x2c8 
    /*0002720c*/ BX          LR 
FUNC_END VI_DRV_GetPipeMode


FUNC_BEGIN VI_DRV_ProcGetMode
    /*00027210*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00027214*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00027218*/ ADD         R0, R3, R0, LSL #2 
    /*0002721c*/ LDR         R0, [R0, #744]              @ 0x2e8 
    /*00027220*/ BX          LR 
FUNC_END VI_DRV_ProcGetMode


FUNC_BEGIN VI_DRV_IsProcModeSuitable
    /*00027224*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00027228*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002722c*/ ADD         R0, R3, R0, LSL #2 
    /*00027230*/ LDR         R0, [R0, #744]              @ 0x2e8 
    /*00027234*/ SUB         R0, R0, R1 
    /*00027238*/ CLZ         R0, R0 
    /*0002723c*/ LSR         R0, R0, #5 
    /*00027240*/ BX          LR 
FUNC_END VI_DRV_IsProcModeSuitable


FUNC_BEGIN VI_DRV_FindSuitableProc
    /*00027244*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00027248*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002724c*/ LDR         R3, [R3, #744]              @ 0x2e8 
    /*00027250*/ SUB         R0, R3, R0 
    /*00027254*/ CLZ         R0, R0 
    /*00027258*/ LSR         R0, R0, #5 
    /*0002725c*/ BX          LR 
FUNC_END VI_DRV_FindSuitableProc


FUNC_BEGIN VI_DRV_IsProcIrqValid
    VI_DRV_IsProcIrqValid_x27260:
    /*00027260*/ B           VI_DRV_IsProcIrqValid_x27260@ VI_HAL_IsProcIrqValid [R_ARM_JUMP24: .text+0x353b0] 
FUNC_END VI_DRV_IsProcIrqValid


FUNC_BEGIN VI_DRV_IsProcIdValid
    /*00027264*/ CLZ         R0, R0 
    /*00027268*/ LSR         R0, R0, #5 
    /*0002726c*/ BX          LR 
FUNC_END VI_DRV_IsProcIdValid


FUNC_BEGIN VI_DRV_GetAllProcIrqId
    /*00027270*/ PUSH        {R4, LR} 
    /*00027274*/ MOV         R4, R0 
    /*00027278*/ MOV         R0, #0 
    /*0002727c*/ BL          0x000000000002727C          @ VI_HAL_GetProcIrqNum [R_ARM_CALL: .text+0x34778] 
    /*00027280*/ STR         R0, [R4] 
    /*00027284*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetAllProcIrqId


FUNC_BEGIN VI_DRV_ProcIsWrongInt
    /*00027288*/ CMP         R0, #3 
    /*0002728c*/ LDRLS       PC, [PC, R0, LSL #2] 
    /*00027290*/ B           VI_DRV_ProcIsWrongInt_x272c4
    /*00027294*/ @           <UNDEFINED> instruction: 0x000272b4 
    /*00027298*/ @           <UNDEFINED> instruction: 0x000272b4 
    /*0002729c*/ ANDEQ       R7, R2, R4, LSR #5 
    /*000272a0*/ ANDEQ       R7, R2, R4, LSR #5 
    /*000272a4*/ TST         R1, #920                    @ 0x398 
    /*000272a8*/ MOVNE       R0, #1 
    /*000272ac*/ MOVEQ       R0, #0 
    /*000272b0*/ BX          LR 
    /*000272b4*/ TST         R1, #412                    @ 0x19c 
    /*000272b8*/ MOVNE       R0, #1 
    /*000272bc*/ MOVEQ       R0, #0 
    /*000272c0*/ BX          LR 
    VI_DRV_ProcIsWrongInt_x272c4:
    /*000272c4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000272c8*/ SUB         SP, SP, #12 
    /*000272cc*/ MOVW        R3, #1591                   @ 0x637 
    /*000272d0*/ MOV         R1, #16 
    /*000272d4*/ STR         R0, [SP, #4] 
    /*000272d8*/ MOVW        R2, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb430] 
    /*000272dc*/ STR         R3, [SP] 
    /*000272e0*/ MOVT        R2, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb430] 
    /*000272e4*/ LDR         R3, [PC, #16]               @ 0x00000000000272fc 
    /*000272e8*/ MOV         R0, #3 
    /*000272ec*/ BL          0x00000000000272EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000272f0*/ MOV         R0, #0 
    /*000272f4*/ ADD         SP, SP, #12 
    /*000272f8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000272fc*/ ANDEQ       R1, R0, IP, ASR #16 
FUNC_END VI_DRV_ProcIsWrongInt


FUNC_BEGIN VI_DRV_ProcIsLostCfgInt
    /*00027300*/ AND         R3, R1, #4096               @ 0x1000 
    /*00027304*/ CMP         R3, #0 
    /*00027308*/ PUSH        {R4, LR} 
    /*0002730c*/ MOVNE       R4, #1 
    /*00027310*/ SUB         SP, SP, #16 
    /*00027314*/ MOVEQ       R4, #0 
    /*00027318*/ BEQ         VI_DRV_ProcIsLostCfgInt_x27344
    /*0002731c*/ MOVW        R3, #1606                   @ 0x646 
    /*00027320*/ STR         R1, [SP, #8] 
    /*00027324*/ STR         R0, [SP, #4] 
    /*00027328*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb468] 
    /*0002732c*/ STR         R3, [SP] 
    /*00027330*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb468] 
    /*00027334*/ LDR         R3, [PC, #20]               @ 0x0000000000027350 
    /*00027338*/ MOV         R1, #16 
    /*0002733c*/ MOV         R0, #3 
    /*00027340*/ BL          0x0000000000027340          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_ProcIsLostCfgInt_x27344:
    /*00027344*/ MOV         R0, R4 
    /*00027348*/ ADD         SP, SP, #16 
    /*0002734c*/ POP         {R4, PC} 
    /*00027350*/ ANDEQ       R1, R0, R4, ROR #16 
FUNC_END VI_DRV_ProcIsLostCfgInt


FUNC_BEGIN VI_DRV_PrintRegStatus
    VI_DRV_PrintRegStatus_x27354:
    /*00027354*/ B           VI_DRV_PrintRegStatus_x27354@ VI_HAL_PrintRegStatus [R_ARM_JUMP24: .text+0x3716c] 
FUNC_END VI_DRV_PrintRegStatus


FUNC_BEGIN VI_DRV_GetPipeByProcId
    /*00027358*/ MOV         R0, #0 
    /*0002735c*/ BX          LR 
FUNC_END VI_DRV_GetPipeByProcId


FUNC_BEGIN VI_DRV_GetOnlineProcIDByPipe
    /*00027360*/ MOV         R0, #0 
    /*00027364*/ BX          LR 
FUNC_END VI_DRV_GetOnlineProcIDByPipe


FUNC_BEGIN VI_DRV_GetIspBeReg
    /*00027368*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002736c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00027370*/ ADD         R0, R3, R0, LSL #2 
    /*00027374*/ LDR         R3, [R0, #712]              @ 0x2c8 
    /*00027378*/ SUB         R3, R3, #2 
    /*0002737c*/ CMP         R3, #1 
    /*00027380*/ BLS         VI_DRV_GetIspBeReg_x27394
    /*00027384*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*00027388*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002738c*/ LDR         R0, [R3, #1592]             @ 0x638 
    /*00027390*/ BX          LR 
    VI_DRV_GetIspBeReg_x27394:
    /*00027394*/ MOV         R0, #0 
    VI_DRV_GetIspBeReg_x27398:
    /*00027398*/ B           VI_DRV_GetIspBeReg_x27398   @ VI_HAL_GetIspBeReg [R_ARM_JUMP24: .text+0x34828] 
FUNC_END VI_DRV_GetIspBeReg


FUNC_BEGIN VI_DRV_GetProcReg
    /*0002739c*/ MOV         R0, #0 
    VI_DRV_GetProcReg_x273a0:
    /*000273a0*/ B           VI_DRV_GetProcReg_x273a0    @ VI_HAL_GetProcReg [R_ARM_JUMP24: .text+0x34818] 
FUNC_END VI_DRV_GetProcReg


FUNC_BEGIN VI_DRV_GetProcRegByProcId
    VI_DRV_GetProcRegByProcId_x273a4:
    /*000273a4*/ B           VI_DRV_GetProcRegByProcId_x273a4@ VI_HAL_GetProcReg [R_ARM_JUMP24: .text+0x34818] 
FUNC_END VI_DRV_GetProcRegByProcId


FUNC_BEGIN VI_DRV_GetProcIrqStatus
    VI_DRV_GetProcIrqStatus_x273a8:
    /*000273a8*/ B           VI_DRV_GetProcIrqStatus_x273a8@ VI_HAL_GetProcIrqStatus [R_ARM_JUMP24: .text+0x35344] 
FUNC_END VI_DRV_GetProcIrqStatus


FUNC_BEGIN VI_DRV_QueryProcBusErrStatus
    /*000273ac*/ PUSH        {R4, R5, LR} 
    /*000273b0*/ SUB         SP, SP, #12 
    /*000273b4*/ MOV         R5, R0 
    /*000273b8*/ BL          0x00000000000273B8          @ VI_HAL_GetProcIrqStatus [R_ARM_CALL: .text+0x35344] 
    /*000273bc*/ TST         R0, #64                     @ 0x40 
    /*000273c0*/ BNE         VI_DRV_QueryProcBusErrStatus_x276dc
    VI_DRV_QueryProcBusErrStatus_x273c4:
    /*000273c4*/ MOV         R0, R5 
    /*000273c8*/ BL          0x00000000000273C8          @ VI_HAL_GetProcRdErrStatus [R_ARM_CALL: .text+0x35358] 
    /*000273cc*/ MOV         R4, R0 
    /*000273d0*/ MOV         R0, R5 
    /*000273d4*/ BL          0x00000000000273D4          @ VI_HAL_ClearProcRdErrStatus [R_ARM_CALL: .text+0x3536c] 
    /*000273d8*/ TST         R4, #1 
    /*000273dc*/ BNE         VI_DRV_QueryProcBusErrStatus_x276b8
    VI_DRV_QueryProcBusErrStatus_x273e0:
    /*000273e0*/ TST         R4, #6 
    /*000273e4*/ BNE         VI_DRV_QueryProcBusErrStatus_x27694
    VI_DRV_QueryProcBusErrStatus_x273e8:
    /*000273e8*/ TST         R4, #96                     @ 0x60 
    /*000273ec*/ BNE         VI_DRV_QueryProcBusErrStatus_x27670
    VI_DRV_QueryProcBusErrStatus_x273f0:
    /*000273f0*/ TST         R4, #2048                   @ 0x800 
    /*000273f4*/ BNE         VI_DRV_QueryProcBusErrStatus_x2764c
    VI_DRV_QueryProcBusErrStatus_x273f8:
    /*000273f8*/ TST         R4, #16384                  @ 0x4000 
    /*000273fc*/ BNE         VI_DRV_QueryProcBusErrStatus_x27628
    VI_DRV_QueryProcBusErrStatus_x27400:
    /*00027400*/ TST         R4, #32768                  @ 0x8000 
    /*00027404*/ BNE         VI_DRV_QueryProcBusErrStatus_x27604
    VI_DRV_QueryProcBusErrStatus_x27408:
    /*00027408*/ TST         R4, #65536                  @ 0x10000 
    /*0002740c*/ BNE         VI_DRV_QueryProcBusErrStatus_x275e0
    VI_DRV_QueryProcBusErrStatus_x27410:
    /*00027410*/ TST         R4, #131072                 @ 0x20000 
    /*00027414*/ BNE         VI_DRV_QueryProcBusErrStatus_x275bc
    VI_DRV_QueryProcBusErrStatus_x27418:
    /*00027418*/ TST         R4, #786432                 @ 0xc0000 
    /*0002741c*/ BNE         VI_DRV_QueryProcBusErrStatus_x27598
    VI_DRV_QueryProcBusErrStatus_x27420:
    /*00027420*/ MOV         R0, R5 
    /*00027424*/ BL          0x0000000000027424          @ VI_HAL_GetProcWrErrStatus [R_ARM_CALL: .text+0x35384] 
    /*00027428*/ MOV         R4, R0 
    /*0002742c*/ MOV         R0, R5 
    /*00027430*/ BL          0x0000000000027430          @ VI_HAL_ClearProcWrErrStatus [R_ARM_CALL: .text+0x35398] 
    /*00027434*/ TST         R4, #3 
    /*00027438*/ BNE         VI_DRV_QueryProcBusErrStatus_x27574
    VI_DRV_QueryProcBusErrStatus_x2743c:
    /*0002743c*/ TST         R4, #12 
    /*00027440*/ BNE         VI_DRV_QueryProcBusErrStatus_x27550
    VI_DRV_QueryProcBusErrStatus_x27444:
    /*00027444*/ TST         R4, #64                     @ 0x40 
    /*00027448*/ BNE         VI_DRV_QueryProcBusErrStatus_x2752c
    VI_DRV_QueryProcBusErrStatus_x2744c:
    /*0002744c*/ TST         R4, #128                    @ 0x80 
    /*00027450*/ BNE         VI_DRV_QueryProcBusErrStatus_x27508
    VI_DRV_QueryProcBusErrStatus_x27454:
    /*00027454*/ TST         R4, #256                    @ 0x100 
    /*00027458*/ BNE         VI_DRV_QueryProcBusErrStatus_x274e4
    VI_DRV_QueryProcBusErrStatus_x2745c:
    /*0002745c*/ TST         R4, #2048                   @ 0x800 
    /*00027460*/ BNE         VI_DRV_QueryProcBusErrStatus_x274c0
    VI_DRV_QueryProcBusErrStatus_x27464:
    /*00027464*/ TST         R4, #4096                   @ 0x1000 
    /*00027468*/ BNE         VI_DRV_QueryProcBusErrStatus_x2749c
    VI_DRV_QueryProcBusErrStatus_x2746c:
    /*0002746c*/ TST         R4, #24576                  @ 0x6000 
    /*00027470*/ BEQ         VI_DRV_QueryProcBusErrStatus_x27494
    /*00027474*/ MOVW        R3, #1807                   @ 0x70f 
    /*00027478*/ MOVW        R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb8e8] 
    /*0002747c*/ STR         R3, [SP] 
    /*00027480*/ MOVT        R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb8e8] 
    /*00027484*/ LDR         R3, [PC, #628]              @ 0x0000000000027700 
    /*00027488*/ MOV         R1, #16 
    /*0002748c*/ MOV         R0, #3 
    /*00027490*/ BL          0x0000000000027490          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_QueryProcBusErrStatus_x27494:
    /*00027494*/ ADD         SP, SP, #12 
    /*00027498*/ POP         {R4, R5, PC} 
    VI_DRV_QueryProcBusErrStatus_x2749c:
    /*0002749c*/ MOVW        R3, #1801                   @ 0x709 
    /*000274a0*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb8a4] 
    /*000274a4*/ STR         R3, [SP] 
    /*000274a8*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb8a4] 
    /*000274ac*/ LDR         R3, [PC, #588]              @ 0x0000000000027700 
    /*000274b0*/ MOV         R1, #16 
    /*000274b4*/ MOV         R0, #3 
    /*000274b8*/ BL          0x00000000000274B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000274bc*/ B           VI_DRV_QueryProcBusErrStatus_x2746c
    VI_DRV_QueryProcBusErrStatus_x274c0:
    /*000274c0*/ MOVW        R3, #1796                   @ 0x704 
    /*000274c4*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb860] 
    /*000274c8*/ STR         R3, [SP] 
    /*000274cc*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb860] 
    /*000274d0*/ LDR         R3, [PC, #552]              @ 0x0000000000027700 
    /*000274d4*/ MOV         R1, #16 
    /*000274d8*/ MOV         R0, #3 
    /*000274dc*/ BL          0x00000000000274DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000274e0*/ B           VI_DRV_QueryProcBusErrStatus_x27464
    VI_DRV_QueryProcBusErrStatus_x274e4:
    /*000274e4*/ MOVW        R3, #1791                   @ 0x6ff 
    /*000274e8*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb820] 
    /*000274ec*/ STR         R3, [SP] 
    /*000274f0*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb820] 
    /*000274f4*/ LDR         R3, [PC, #516]              @ 0x0000000000027700 
    /*000274f8*/ MOV         R1, #16 
    /*000274fc*/ MOV         R0, #3 
    /*00027500*/ BL          0x0000000000027500          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00027504*/ B           VI_DRV_QueryProcBusErrStatus_x2745c
    VI_DRV_QueryProcBusErrStatus_x27508:
    /*00027508*/ MOVW        R3, #1786                   @ 0x6fa 
    /*0002750c*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb7dc] 
    /*00027510*/ STR         R3, [SP] 
    /*00027514*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb7dc] 
    /*00027518*/ LDR         R3, [PC, #480]              @ 0x0000000000027700 
    /*0002751c*/ MOV         R1, #16 
    /*00027520*/ MOV         R0, #3 
    /*00027524*/ BL          0x0000000000027524          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00027528*/ B           VI_DRV_QueryProcBusErrStatus_x27454
    VI_DRV_QueryProcBusErrStatus_x2752c:
    /*0002752c*/ MOVW        R3, #1781                   @ 0x6f5 
    /*00027530*/ MOVW        R2, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb79c] 
    /*00027534*/ STR         R3, [SP] 
    /*00027538*/ MOVT        R2, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb79c] 
    /*0002753c*/ LDR         R3, [PC, #444]              @ 0x0000000000027700 
    /*00027540*/ MOV         R1, #16 
    /*00027544*/ MOV         R0, #3 
    /*00027548*/ BL          0x0000000000027548          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002754c*/ B           VI_DRV_QueryProcBusErrStatus_x2744c
    VI_DRV_QueryProcBusErrStatus_x27550:
    /*00027550*/ MOV         R3, #1776                   @ 0x6f0 
    /*00027554*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb75c] 
    /*00027558*/ STR         R3, [SP] 
    /*0002755c*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb75c] 
    /*00027560*/ LDR         R3, [PC, #408]              @ 0x0000000000027700 
    /*00027564*/ MOV         R1, #16 
    /*00027568*/ MOV         R0, #3 
    /*0002756c*/ BL          0x000000000002756C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00027570*/ B           VI_DRV_QueryProcBusErrStatus_x27444
    VI_DRV_QueryProcBusErrStatus_x27574:
    /*00027574*/ MOVW        R3, #1770                   @ 0x6ea 
    /*00027578*/ MOVW        R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb71c] 
    /*0002757c*/ STR         R3, [SP] 
    /*00027580*/ MOVT        R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb71c] 
    /*00027584*/ LDR         R3, [PC, #372]              @ 0x0000000000027700 
    /*00027588*/ MOV         R1, #16 
    /*0002758c*/ MOV         R0, #3 
    /*00027590*/ BL          0x0000000000027590          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00027594*/ B           VI_DRV_QueryProcBusErrStatus_x2743c
    VI_DRV_QueryProcBusErrStatus_x27598:
    /*00027598*/ MOVW        R3, #1761                   @ 0x6e1 
    /*0002759c*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb6dc] 
    /*000275a0*/ STR         R3, [SP] 
    /*000275a4*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb6dc] 
    /*000275a8*/ LDR         R3, [PC, #336]              @ 0x0000000000027700 
    /*000275ac*/ MOV         R1, #16 
    /*000275b0*/ MOV         R0, #3 
    /*000275b4*/ BL          0x00000000000275B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000275b8*/ B           VI_DRV_QueryProcBusErrStatus_x27420
    VI_DRV_QueryProcBusErrStatus_x275bc:
    /*000275bc*/ MOVW        R3, #1755                   @ 0x6db 
    /*000275c0*/ MOVW        R2, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb69c] 
    /*000275c4*/ STR         R3, [SP] 
    /*000275c8*/ MOVT        R2, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb69c] 
    /*000275cc*/ LDR         R3, [PC, #300]              @ 0x0000000000027700 
    /*000275d0*/ MOV         R1, #16 
    /*000275d4*/ MOV         R0, #3 
    /*000275d8*/ BL          0x00000000000275D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000275dc*/ B           VI_DRV_QueryProcBusErrStatus_x27418
    VI_DRV_QueryProcBusErrStatus_x275e0:
    /*000275e0*/ MOVW        R3, #1750                   @ 0x6d6 
    /*000275e4*/ MOVW        R2, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb658] 
    /*000275e8*/ STR         R3, [SP] 
    /*000275ec*/ MOVT        R2, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb658] 
    /*000275f0*/ LDR         R3, [PC, #264]              @ 0x0000000000027700 
    /*000275f4*/ MOV         R1, #16 
    /*000275f8*/ MOV         R0, #3 
    /*000275fc*/ BL          0x00000000000275FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00027600*/ B           VI_DRV_QueryProcBusErrStatus_x27410
    VI_DRV_QueryProcBusErrStatus_x27604:
    /*00027604*/ MOVW        R3, #1745                   @ 0x6d1 
    /*00027608*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb618] 
    /*0002760c*/ STR         R3, [SP] 
    /*00027610*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb618] 
    /*00027614*/ LDR         R3, [PC, #228]              @ 0x0000000000027700 
    /*00027618*/ MOV         R1, #16 
    /*0002761c*/ MOV         R0, #3 
    /*00027620*/ BL          0x0000000000027620          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00027624*/ B           VI_DRV_QueryProcBusErrStatus_x27408
    VI_DRV_QueryProcBusErrStatus_x27628:
    /*00027628*/ MOVW        R3, #1740                   @ 0x6cc 
    /*0002762c*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb5d8] 
    /*00027630*/ STR         R3, [SP] 
    /*00027634*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb5d8] 
    /*00027638*/ LDR         R3, [PC, #192]              @ 0x0000000000027700 
    /*0002763c*/ MOV         R1, #16 
    /*00027640*/ MOV         R0, #3 
    /*00027644*/ BL          0x0000000000027644          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00027648*/ B           VI_DRV_QueryProcBusErrStatus_x27400
    VI_DRV_QueryProcBusErrStatus_x2764c:
    /*0002764c*/ MOVW        R3, #1735                   @ 0x6c7 
    /*00027650*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb59c] 
    /*00027654*/ STR         R3, [SP] 
    /*00027658*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb59c] 
    /*0002765c*/ LDR         R3, [PC, #156]              @ 0x0000000000027700 
    /*00027660*/ MOV         R1, #16 
    /*00027664*/ MOV         R0, #3 
    /*00027668*/ BL          0x0000000000027668          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002766c*/ B           VI_DRV_QueryProcBusErrStatus_x273f8
    VI_DRV_QueryProcBusErrStatus_x27670:
    /*00027670*/ MOVW        R3, #1730                   @ 0x6c2 
    /*00027674*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb560] 
    /*00027678*/ STR         R3, [SP] 
    /*0002767c*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb560] 
    /*00027680*/ LDR         R3, [PC, #120]              @ 0x0000000000027700 
    /*00027684*/ MOV         R1, #16 
    /*00027688*/ MOV         R0, #3 
    /*0002768c*/ BL          0x000000000002768C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00027690*/ B           VI_DRV_QueryProcBusErrStatus_x273f0
    VI_DRV_QueryProcBusErrStatus_x27694:
    /*00027694*/ MOVW        R3, #1724                   @ 0x6bc 
    /*00027698*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb524] 
    /*0002769c*/ STR         R3, [SP] 
    /*000276a0*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb524] 
    /*000276a4*/ LDR         R3, [PC, #84]               @ 0x0000000000027700 
    /*000276a8*/ MOV         R1, #16 
    /*000276ac*/ MOV         R0, #3 
    /*000276b0*/ BL          0x00000000000276B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000276b4*/ B           VI_DRV_QueryProcBusErrStatus_x273e8
    VI_DRV_QueryProcBusErrStatus_x276b8:
    /*000276b8*/ MOVW        R3, #1718                   @ 0x6b6 
    /*000276bc*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb4e8] 
    /*000276c0*/ STR         R3, [SP] 
    /*000276c4*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb4e8] 
    /*000276c8*/ LDR         R3, [PC, #48]               @ 0x0000000000027700 
    /*000276cc*/ MOV         R1, #16 
    /*000276d0*/ MOV         R0, #3 
    /*000276d4*/ BL          0x00000000000276D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000276d8*/ B           VI_DRV_QueryProcBusErrStatus_x273e0
    VI_DRV_QueryProcBusErrStatus_x276dc:
    /*000276dc*/ MOVW        R3, #1704                   @ 0x6a8 
    /*000276e0*/ MOVW        R2, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb4b4] 
    /*000276e4*/ STR         R3, [SP] 
    /*000276e8*/ MOVT        R2, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb4b4] 
    /*000276ec*/ LDR         R3, [PC, #12]               @ 0x0000000000027700 
    /*000276f0*/ MOV         R1, #16 
    /*000276f4*/ MOV         R0, #3 
    /*000276f8*/ BL          0x00000000000276F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000276fc*/ B           VI_DRV_QueryProcBusErrStatus_x273c4
    /*00027700*/ ANDEQ       R1, R0, IP, ROR R8 
FUNC_END VI_DRV_QueryProcBusErrStatus


FUNC_BEGIN VI_DRV_IsProcTunlFinishIrq
    /*00027704*/ MOV         R0, #0 
    /*00027708*/ BX          LR 
FUNC_END VI_DRV_IsProcTunlFinishIrq


FUNC_BEGIN VI_DRV_IsBnrSupport
    /*0002770c*/ MOV         R0, #0 
    /*00027710*/ BX          LR 
FUNC_END VI_DRV_IsBnrSupport


FUNC_BEGIN VI_DRV_IsSrcSupport
    /*00027714*/ MOV         R0, #0 
    /*00027718*/ BX          LR 
FUNC_END VI_DRV_IsSrcSupport


FUNC_BEGIN VI_DRV_IsProcFrameStartIrq
    /*0002771c*/ UBFX        R0, R0, #10, #1 
    /*00027720*/ BX          LR 
FUNC_END VI_DRV_IsProcFrameStartIrq


FUNC_BEGIN VI_DRV_ClearAnyProcInt
    VI_DRV_ClearAnyProcInt_x27724:
    /*00027724*/ B           VI_DRV_ClearAnyProcInt_x27724@ VI_HAL_ClearAnyProcInt [R_ARM_JUMP24: .text+0x353bc] 
FUNC_END VI_DRV_ClearAnyProcInt


FUNC_BEGIN VI_DRV_CheckQuadrangleAttr
    /*00027728*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0002772c*/ MOV         R1, #0 
    /*00027730*/ LDR         LR, [R0, #12] 
    /*00027734*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00027738*/ LDR         IP, [R0, #8] 
    /*0002773c*/ ADD         R4, R0, #24 
    /*00027740*/ MOV         R3, R0 
    /*00027744*/ MOV         R5, R1 
    VI_DRV_CheckQuadrangleAttr_x27748:
    /*00027748*/ LDR         R2, [R3, #20] 
    /*0002774c*/ ADD         R3, R3, #8 
    /*00027750*/ CMP         LR, R2 
    /*00027754*/ LDR         R2, [R3, #8] 
    /*00027758*/ ADDEQ       R5, R5, #1 
    /*0002775c*/ CMP         R2, IP 
    /*00027760*/ ADDEQ       R1, R1, #1 
    /*00027764*/ CMP         R4, R3 
    /*00027768*/ BNE         VI_DRV_CheckQuadrangleAttr_x27748
    /*0002776c*/ CMP         R1, #3 
    /*00027770*/ CMPNE       R5, #3 
    /*00027774*/ MOVNE       R0, #1 
    /*00027778*/ BNE         VI_DRV_CheckQuadrangleAttr_x277d8
    /*0002777c*/ LDR         R1, [R0, #36]               @ 0x24 
    /*00027780*/ MOVW        R3, #1873                   @ 0x751 
    /*00027784*/ LDR         R7, [R0, #32] 
    /*00027788*/ MOVW        R2, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb92c] 
    /*0002778c*/ LDR         R6, [R0, #28] 
    /*00027790*/ MOVT        R2, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb92c] 
    /*00027794*/ LDR         R5, [R0, #24] 
    /*00027798*/ STR         LR, [SP, #8] 
    /*0002779c*/ LDR         R4, [R0, #20] 
    /*000277a0*/ LDR         LR, [R0, #16] 
    /*000277a4*/ MOV         R0, #3 
    /*000277a8*/ STR         R1, [SP, #32] 
    /*000277ac*/ MOV         R1, #16 
    /*000277b0*/ STR         R3, [SP] 
    /*000277b4*/ STR         IP, [SP, #4] 
    /*000277b8*/ STR         R7, [SP, #28] 
    /*000277bc*/ STR         R6, [SP, #24] 
    /*000277c0*/ STR         R5, [SP, #20] 
    /*000277c4*/ STR         R4, [SP, #16] 
    /*000277c8*/ STR         LR, [SP, #12] 
    /*000277cc*/ LDR         R3, [PC, #12]               @ 0x00000000000277e0 
    /*000277d0*/ BL          0x00000000000277D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000277d4*/ MOV         R0, #0 
    VI_DRV_CheckQuadrangleAttr_x277d8:
    /*000277d8*/ ADD         SP, SP, #44                 @ 0x2c 
    /*000277dc*/ POP         {R4, R5, R6, R7, PC} 
    /*000277e0*/ MULEQ       R0, IP, R8 
FUNC_END VI_DRV_CheckQuadrangleAttr


FUNC_BEGIN VI_DRV_CheckRgnAttr
    /*000277e4*/ CMP         R0, #2 
    /*000277e8*/ BNE         VI_DRV_CheckRgnAttr_x277f8
    /*000277ec*/ LDR         R3, [R2, #8] 
    /*000277f0*/ CMP         R3, #0 
    /*000277f4*/ BNE         VI_DRV_CheckRgnAttr_x27800
    VI_DRV_CheckRgnAttr_x277f8:
    /*000277f8*/ MOV         R0, #1 
    /*000277fc*/ BX          LR 
    VI_DRV_CheckRgnAttr_x27800:
    /*00027800*/ ADD         R0, R2, #12 
    VI_DRV_CheckRgnAttr_x27804:
    /*00027804*/ B           VI_DRV_CheckRgnAttr_x27804  @ VI_DRV_CheckQuadrangleAttr [R_ARM_JUMP24: .text+0x27728] 
FUNC_END VI_DRV_CheckRgnAttr


FUNC_BEGIN VI_DRV_CheckCoverExAttr
    /*00027808*/ LDR         R3, [R1] 
    /*0002780c*/ CMP         R3, #0 
    /*00027810*/ BNE         VI_DRV_CheckCoverExAttr_x2781c
    /*00027814*/ MOV         R0, #1 
    /*00027818*/ BX          LR 
    VI_DRV_CheckCoverExAttr_x2781c:
    /*0002781c*/ ADD         R0, R1, #4 
    VI_DRV_CheckCoverExAttr_x27820:
    /*00027820*/ B           VI_DRV_CheckCoverExAttr_x27820@ VI_DRV_CheckQuadrangleAttr [R_ARM_JUMP24: .text+0x27728] 
FUNC_END VI_DRV_CheckCoverExAttr


FUNC_BEGIN VI_DRV_GetRgnCapacity
    /*00027824*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00027828*/ SUBS        R4, R1, #0 
    /*0002782c*/ MOV         R5, R0 
    /*00027830*/ BEQ         VI_DRV_GetRgnCapacity_x27af8
    VI_DRV_GetRgnCapacity_x27834:
    /*00027834*/ MOV         R2, #328                    @ 0x148 
    /*00027838*/ MOV         R1, #0 
    /*0002783c*/ MOV         R0, R4 
    /*00027840*/ BL          0x0000000000027840          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00027844*/ CMP         R5, #2 
    /*00027848*/ MOVW        R2, #0                      @ VI_DRV_CheckRgnAttr [R_ARM_MOVW_ABS_NC: .text+0x277e4] 
    /*0002784c*/ MOV         R3, #0 
    /*00027850*/ MOVT        R2, #0                      @ VI_DRV_CheckRgnAttr [R_ARM_MOVT_ABS: .text+0x277e4] 
    /*00027854*/ STR         R3, [R4, #320]              @ 0x140 
    /*00027858*/ STR         R2, [R4, #324]              @ 0x144 
    /*0002785c*/ BEQ         VI_DRV_GetRgnCapacity_x27994
    /*00027860*/ CMP         R5, #3 
    /*00027864*/ POPNE       {R4, R5, R6, R7, R8, PC} 
    /*00027868*/ MOV         R2, #1 
    /*0002786c*/ MOV         R1, #2 
    /*00027870*/ MOVW        IP, #8190                   @ 0x1ffe 
    /*00027874*/ MOV         R0, #8192                   @ 0x2000 
    /*00027878*/ MOV         LR, #15 
    /*0002787c*/ STR         R5, [R4, #136]              @ 0x88 
    /*00027880*/ STR         LR, [R4, #12] 
    /*00027884*/ MOV         R5, #8 
    /*00027888*/ STR         R1, [R4, #40]               @ 0x28 
    /*0002788c*/ MOV         LR, #9 
    /*00027890*/ STR         R1, [R4, #44]               @ 0x2c 
    /*00027894*/ MOV         R6, #67108864               @ 0x4000000 
    /*00027898*/ STR         R1, [R4, #72]               @ 0x48 
    /*0002789c*/ STR         R1, [R4, #76]               @ 0x4c 
    /*000278a0*/ STR         R1, [R4, #56]               @ 0x38 
    /*000278a4*/ STR         R1, [R4, #60]               @ 0x3c 
    /*000278a8*/ MOV         R1, #255                    @ 0xff 
    /*000278ac*/ STR         IP, [R4, #32] 
    /*000278b0*/ STR         IP, [R4, #36]               @ 0x24 
    /*000278b4*/ MOV         IP, #11 
    /*000278b8*/ STR         R0, [R4, #64]               @ 0x40 
    /*000278bc*/ STR         R0, [R4, #68]               @ 0x44 
    /*000278c0*/ MOV         R0, #51                     @ 0x33 
    /*000278c4*/ STR         R5, [R4, #140]              @ 0x8c 
    /*000278c8*/ MVN         R5, #50                     @ 0x32 
    /*000278cc*/ STR         LR, [R4, #144]              @ 0x90 
    /*000278d0*/ MOV         LR, #64                     @ 0x40 
    /*000278d4*/ STR         IP, [R4, #148]              @ 0x94 
    /*000278d8*/ MOV         IP, #16 
    /*000278dc*/ STR         R3, [R4] 
    /*000278e0*/ STR         R3, [R4, #8] 
    /*000278e4*/ STR         R3, [R4, #16] 
    /*000278e8*/ STR         R3, [R4, #24] 
    /*000278ec*/ STR         R3, [R4, #28] 
    /*000278f0*/ STR         R3, [R4, #52]               @ 0x34 
    /*000278f4*/ STR         R3, [R4, #132]              @ 0x84 
    /*000278f8*/ STR         R3, [R4, #160]              @ 0xa0 
    /*000278fc*/ STR         R2, [R4, #4] 
    /*00027900*/ STR         R2, [R4, #20] 
    /*00027904*/ STR         R2, [R4, #48]               @ 0x30 
    /*00027908*/ STR         R2, [R4, #124]              @ 0x7c 
    /*0002790c*/ STR         R2, [R4, #128]              @ 0x80 
    /*00027910*/ STR         R2, [R4, #156]              @ 0x9c 
    /*00027914*/ STR         R2, [R4, #164]              @ 0xa4 
    /*00027918*/ STR         R6, [R4, #80]               @ 0x50 
    /*0002791c*/ STR         R1, [R4, #168]              @ 0xa8 
    /*00027920*/ STR         R3, [R4, #172]              @ 0xac 
    /*00027924*/ STR         R2, [R4, #176]              @ 0xb0 
    /*00027928*/ STR         R2, [R4, #184]              @ 0xb8 
    /*0002792c*/ STR         R1, [R4, #188]              @ 0xbc 
    /*00027930*/ STR         R2, [R4, #204]              @ 0xcc 
    /*00027934*/ STR         R1, [R4, #208]              @ 0xd0 
    /*00027938*/ STR         R2, [R4, #216]              @ 0xd8 
    /*0002793c*/ STR         R2, [R4, #220]              @ 0xdc 
    /*00027940*/ STR         R2, [R4, #224]              @ 0xe0 
    /*00027944*/ STR         R2, [R4, #232]              @ 0xe8 
    /*00027948*/ STR         R2, [R4, #240]              @ 0xf0 
    /*0002794c*/ STR         R2, [R4, #252]              @ 0xfc 
    /*00027950*/ STR         R2, [R4, #304]              @ 0x130 
    /*00027954*/ STR         R2, [R4, #308]              @ 0x134 
    /*00027958*/ STR         R3, [R4, #180]              @ 0xb4 
    /*0002795c*/ STR         R3, [R4, #192]              @ 0xc0 
    /*00027960*/ STR         R3, [R4, #196]              @ 0xc4 
    /*00027964*/ STR         R3, [R4, #200]              @ 0xc8 
    /*00027968*/ STR         R3, [R4, #212]              @ 0xd4 
    /*0002796c*/ STR         R3, [R4, #236]              @ 0xec 
    /*00027970*/ STR         R3, [R4, #244]              @ 0xf4 
    /*00027974*/ STR         R3, [R4, #248]              @ 0xf8 
    /*00027978*/ STR         R3, [R4, #260]              @ 0x104 
    /*0002797c*/ STR         R0, [R4, #264]              @ 0x108 
    /*00027980*/ STR         R0, [R4, #272]              @ 0x110 
    /*00027984*/ STR         R5, [R4, #268]              @ 0x10c 
    /*00027988*/ STR         LR, [R4, #312]              @ 0x138 
    /*0002798c*/ STR         IP, [R4, #316]              @ 0x13c 
    /*00027990*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_GetRgnCapacity_x27994:
    /*00027994*/ MOV         R2, #1 
    /*00027998*/ MOVW        R0, #8190                   @ 0x1ffe 
    /*0002799c*/ MOV         R6, #8192                   @ 0x2000 
    /*000279a0*/ MOV         LR, #3 
    /*000279a4*/ STR         R5, [R4, #40]               @ 0x28 
    /*000279a8*/ MOV         IP, #15 
    /*000279ac*/ STR         R5, [R4, #44]               @ 0x2c 
    /*000279b0*/ MOV         R1, #57344                  @ 0xe000 
    /*000279b4*/ STR         R5, [R4, #72]               @ 0x48 
    /*000279b8*/ MOVT        R1, #65535                  @ 0xffff 
    /*000279bc*/ STR         R5, [R4, #76]               @ 0x4c 
    /*000279c0*/ MOV         R7, #9 
    /*000279c4*/ STR         R5, [R4, #56]               @ 0x38 
    /*000279c8*/ STR         R5, [R4, #60]               @ 0x3c 
    /*000279cc*/ STR         R5, [R4, #92]               @ 0x5c 
    /*000279d0*/ STR         R5, [R4, #116]              @ 0x74 
    /*000279d4*/ STR         R1, [R4, #24] 
    /*000279d8*/ STR         R1, [R4, #28] 
    /*000279dc*/ STR         R1, [R4, #100]              @ 0x64 
    /*000279e0*/ STR         R1, [R4, #104]              @ 0x68 
    /*000279e4*/ MOV         R1, #67108864               @ 0x4000000 
    /*000279e8*/ STR         IP, [R4, #12] 
    /*000279ec*/ MOV         IP, #8 
    /*000279f0*/ STR         R0, [R4, #32] 
    /*000279f4*/ STR         R0, [R4, #36]               @ 0x24 
    /*000279f8*/ STR         R0, [R4, #108]              @ 0x6c 
    /*000279fc*/ STR         R0, [R4, #112]              @ 0x70 
    /*00027a00*/ MOV         R0, #51                     @ 0x33 
    /*00027a04*/ STR         R6, [R4, #64]               @ 0x40 
    /*00027a08*/ STR         R6, [R4, #68]               @ 0x44 
    /*00027a0c*/ MOV         R6, #11 
    /*00027a10*/ STR         R1, [R4, #80]               @ 0x50 
    /*00027a14*/ MOV         R1, #255                    @ 0xff 
    /*00027a18*/ STR         LR, [R4, #280]              @ 0x118 
    /*00027a1c*/ STR         IP, [R4, #96]               @ 0x60 
    /*00027a20*/ STR         R3, [R4] 
    /*00027a24*/ STR         R3, [R4, #8] 
    /*00027a28*/ STR         R3, [R4, #16] 
    /*00027a2c*/ STR         R3, [R4, #48]               @ 0x30 
    /*00027a30*/ STR         R3, [R4, #84]               @ 0x54 
    /*00027a34*/ STR         R2, [R4, #4] 
    /*00027a38*/ STR         R2, [R4, #20] 
    /*00027a3c*/ STR         R2, [R4, #52]               @ 0x34 
    /*00027a40*/ STR         R2, [R4, #276]              @ 0x114 
    /*00027a44*/ STR         R2, [R4, #88]               @ 0x58 
    /*00027a48*/ STR         R5, [R4, #120]              @ 0x78 
    /*00027a4c*/ MVN         R5, #50                     @ 0x32 
    /*00027a50*/ STR         LR, [R4, #136]              @ 0x88 
    /*00027a54*/ MOV         LR, #64                     @ 0x40 
    /*00027a58*/ STR         IP, [R4, #140]              @ 0x8c 
    /*00027a5c*/ MOV         IP, #16 
    /*00027a60*/ STR         R2, [R4, #216]              @ 0xd8 
    /*00027a64*/ STR         R2, [R4, #224]              @ 0xe0 
    /*00027a68*/ STR         R2, [R4, #232]              @ 0xe8 
    /*00027a6c*/ STR         R2, [R4, #240]              @ 0xf0 
    /*00027a70*/ STR         R3, [R4, #124]              @ 0x7c 
    /*00027a74*/ STR         R3, [R4, #128]              @ 0x80 
    /*00027a78*/ STR         R3, [R4, #132]              @ 0x84 
    /*00027a7c*/ STR         R3, [R4, #156]              @ 0x9c 
    /*00027a80*/ STR         R3, [R4, #160]              @ 0xa0 
    /*00027a84*/ STR         R3, [R4, #164]              @ 0xa4 
    /*00027a88*/ STR         R3, [R4, #172]              @ 0xac 
    /*00027a8c*/ STR         R3, [R4, #176]              @ 0xb0 
    /*00027a90*/ STR         R3, [R4, #180]              @ 0xb4 
    /*00027a94*/ STR         R3, [R4, #184]              @ 0xb8 
    /*00027a98*/ STR         R3, [R4, #192]              @ 0xc0 
    /*00027a9c*/ STR         R3, [R4, #196]              @ 0xc4 
    /*00027aa0*/ STR         R3, [R4, #200]              @ 0xc8 
    /*00027aa4*/ STR         R3, [R4, #204]              @ 0xcc 
    /*00027aa8*/ STR         R3, [R4, #212]              @ 0xd4 
    /*00027aac*/ STR         R3, [R4, #220]              @ 0xdc 
    /*00027ab0*/ STR         R3, [R4, #236]              @ 0xec 
    /*00027ab4*/ STR         R3, [R4, #244]              @ 0xf4 
    /*00027ab8*/ STR         R3, [R4, #248]              @ 0xf8 
    /*00027abc*/ STR         R3, [R4, #252]              @ 0xfc 
    /*00027ac0*/ STR         R7, [R4, #144]              @ 0x90 
    /*00027ac4*/ STR         R6, [R4, #148]              @ 0x94 
    /*00027ac8*/ STR         R1, [R4, #168]              @ 0xa8 
    /*00027acc*/ STR         R1, [R4, #188]              @ 0xbc 
    /*00027ad0*/ STR         R1, [R4, #208]              @ 0xd0 
    /*00027ad4*/ STR         R0, [R4, #264]              @ 0x108 
    /*00027ad8*/ STR         R3, [R4, #260]              @ 0x104 
    /*00027adc*/ STR         R2, [R4, #308]              @ 0x134 
    /*00027ae0*/ STR         R0, [R4, #272]              @ 0x110 
    /*00027ae4*/ STR         R3, [R4, #304]              @ 0x130 
    /*00027ae8*/ STR         R5, [R4, #268]              @ 0x10c 
    /*00027aec*/ STR         LR, [R4, #312]              @ 0x138 
    /*00027af0*/ STR         IP, [R4, #316]              @ 0x13c 
    /*00027af4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_GetRgnCapacity_x27af8:
    /*00027af8*/ MOVW        R3, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9b4] 
    /*00027afc*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9cc] 
    /*00027b00*/ MOVT        R3, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9b4] 
    /*00027b04*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9cc] 
    /*00027b08*/ MOV         R2, #1904                   @ 0x770 
    /*00027b0c*/ LDR         R1, [PC, #4]                @ 0x0000000000027b18 
    /*00027b10*/ BL          0x0000000000027B10          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00027b14*/ B           VI_DRV_GetRgnCapacity_x27834
    /*00027b18*/ @           <UNDEFINED> instruction: 0x000018b8 
FUNC_END VI_DRV_GetRgnCapacity


FUNC_BEGIN VI_DRV_RegisterRgnCapacity
    /*00027b1c*/ PUSH        {R4, R5, LR} 
    /*00027b20*/ SUB         SP, SP, #356                @ 0x164 
    /*00027b24*/ ADD         R1, SP, #24 
    /*00027b28*/ MOV         R0, #2 
    /*00027b2c*/ MOV         R3, #4 
    /*00027b30*/ MOV         R5, #16 
    /*00027b34*/ STR         R3, [SP, #12] 
    /*00027b38*/ MOV         R4, #9 
    /*00027b3c*/ MOV         R3, #0 
    /*00027b40*/ STR         R5, [SP, #8] 
    /*00027b44*/ STR         R3, [SP, #20] 
    /*00027b48*/ STR         R4, [SP, #16] 
    /*00027b4c*/ BL          0x0000000000027B4C          @ VI_DRV_GetRgnCapacity [R_ARM_CALL: .text+0x27824] 
    /*00027b50*/ MOV         R0, #3 
    /*00027b54*/ BL          0x0000000000027B54          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00027b58*/ ADD         R1, SP, #24 
    /*00027b5c*/ ADD         R2, SP, #8 
    /*00027b60*/ LDR         R3, [R0] 
    /*00027b64*/ MOV         R0, #2 
    /*00027b68*/ BLX         R3 
    /*00027b6c*/ CMP         R0, #0 
    /*00027b70*/ BNE         VI_DRV_RegisterRgnCapacity_x27bb0
    /*00027b74*/ ADD         R1, SP, #24 
    /*00027b78*/ MOV         R0, #3 
    /*00027b7c*/ STR         R4, [SP, #16] 
    /*00027b80*/ BL          0x0000000000027B80          @ VI_DRV_GetRgnCapacity [R_ARM_CALL: .text+0x27824] 
    /*00027b84*/ MOV         R0, #3 
    /*00027b88*/ BL          0x0000000000027B88          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00027b8c*/ ADD         R2, SP, #8 
    /*00027b90*/ ADD         R1, SP, #24 
    /*00027b94*/ LDR         R3, [R0] 
    /*00027b98*/ MOV         R0, #3 
    /*00027b9c*/ BLX         R3 
    /*00027ba0*/ CMP         R0, #0 
    /*00027ba4*/ BNE         VI_DRV_RegisterRgnCapacity_x27bdc
    VI_DRV_RegisterRgnCapacity_x27ba8:
    /*00027ba8*/ ADD         SP, SP, #356                @ 0x164 
    /*00027bac*/ POP         {R4, R5, PC} 
    VI_DRV_RegisterRgnCapacity_x27bb0:
    /*00027bb0*/ MOVW        R3, #2135                   @ 0x857 
    /*00027bb4*/ MOV         R1, R5 
    /*00027bb8*/ STR         R3, [SP] 
    /*00027bbc*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xba0c] 
    /*00027bc0*/ LDR         R3, [PC, #88]               @ 0x0000000000027c20 
    /*00027bc4*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0xba0c] 
    /*00027bc8*/ MOV         R0, #3 
    /*00027bcc*/ BL          0x0000000000027BCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00027bd0*/ MOVW        R0, #32784                  @ 0x8010 
    /*00027bd4*/ MOVT        R0, #40976                  @ 0xa010 
    /*00027bd8*/ B           VI_DRV_RegisterRgnCapacity_x27ba8
    VI_DRV_RegisterRgnCapacity_x27bdc:
    /*00027bdc*/ MOV         R1, R5 
    /*00027be0*/ MOVW        R3, #2146                   @ 0x862 
    /*00027be4*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xba0c] 
    /*00027be8*/ STR         R3, [SP] 
    /*00027bec*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0xba0c] 
    /*00027bf0*/ LDR         R3, [PC, #40]               @ 0x0000000000027c20 
    /*00027bf4*/ MOV         R0, #3 
    /*00027bf8*/ BL          0x0000000000027BF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00027bfc*/ MOV         R0, #3 
    /*00027c00*/ BL          0x0000000000027C00          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00027c04*/ MOV         R1, R5 
    /*00027c08*/ LDR         R3, [R0, #4] 
    /*00027c0c*/ MOV         R0, #2 
    /*00027c10*/ BLX         R3 
    /*00027c14*/ MOVW        R0, #32784                  @ 0x8010 
    /*00027c18*/ MOVT        R0, #40976                  @ 0xa010 
    /*00027c1c*/ B           VI_DRV_RegisterRgnCapacity_x27ba8
    /*00027c20*/ LDRDEQ      R1, [R0], -R0 
FUNC_END VI_DRV_RegisterRgnCapacity


FUNC_BEGIN VI_DRV_UnRegisterRgnCapacity
    /*00027c24*/ PUSH        {R4, LR} 
    /*00027c28*/ MOV         R0, #3 
    /*00027c2c*/ BL          0x0000000000027C2C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00027c30*/ MOV         R1, #16 
    /*00027c34*/ LDR         R3, [R0, #4] 
    /*00027c38*/ MOV         R0, #2 
    /*00027c3c*/ BLX         R3 
    /*00027c40*/ MOV         R0, #3 
    /*00027c44*/ BL          0x0000000000027C44          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00027c48*/ MOV         R1, #16 
    /*00027c4c*/ LDR         R3, [R0, #4] 
    /*00027c50*/ MOV         R0, #3 
    /*00027c54*/ BLX         R3 
    /*00027c58*/ MOV         R0, #0 
    /*00027c5c*/ POP         {R4, PC} 
FUNC_END VI_DRV_UnRegisterRgnCapacity


FUNC_BEGIN VI_DRV_ProcRegInit
    VI_DRV_ProcRegInit_x27c60:
    /*00027c60*/ B           VI_DRV_ProcRegInit_x27c60   @ VI_HAL_ProcRegInit [R_ARM_JUMP24: .text+0x347c4] 
FUNC_END VI_DRV_ProcRegInit


FUNC_BEGIN VI_DRV_ProcRegExit
    VI_DRV_ProcRegExit_x27c64:
    /*00027c64*/ B           VI_DRV_ProcRegExit_x27c64   @ VI_HAL_ProcRegExit [R_ARM_JUMP24: .text+0x34814] 
FUNC_END VI_DRV_ProcRegExit


FUNC_BEGIN VI_DRV_CapAbolishReset
    /*00027c68*/ PUSH        {R4, LR} 
    /*00027c6c*/ MOV         R2, #6 
    /*00027c70*/ MOV         R4, R0 
    /*00027c74*/ MOV         R1, #12 
    /*00027c78*/ BL          0x0000000000027C78          @ VI_HAL_CapSetOutstanding [R_ARM_CALL: .text+0x36888] 
    /*00027c7c*/ MOV         R0, R4 
    /*00027c80*/ MOV         R1, #1 
    /*00027c84*/ BL          0x0000000000027C84          @ VI_HAL_CapMemPowerEnable [R_ARM_CALL: .text+0x368b4] 
    /*00027c88*/ MOV         R0, #0 
    /*00027c8c*/ POP         {R4, PC} 
FUNC_END VI_DRV_CapAbolishReset


FUNC_BEGIN VI_DRV_ProcAbolishReset
    /*00027c90*/ PUSH        {R4, LR} 
    /*00027c94*/ MOV         R2, #6 
    /*00027c98*/ MOV         R4, R0 
    /*00027c9c*/ MOV         R1, #11 
    /*00027ca0*/ BL          0x0000000000027CA0          @ VI_HAL_ProcSetOutstanding [R_ARM_CALL: .text+0x3483c] 
    /*00027ca4*/ MOV         R0, R4 
    /*00027ca8*/ MOV         R1, #1 
    /*00027cac*/ BL          0x0000000000027CAC          @ VI_HAL_ProcSetApbMuxCfg [R_ARM_CALL: .text+0x34864] 
    /*00027cb0*/ MOV         R0, R4 
    /*00027cb4*/ MOV         R1, #1 
    /*00027cb8*/ BL          0x0000000000027CB8          @ VI_HAL_ProcLowPowerEnable [R_ARM_CALL: .text+0x34880] 
    /*00027cbc*/ MOV         R0, #0 
    /*00027cc0*/ POP         {R4, PC} 
FUNC_END VI_DRV_ProcAbolishReset


FUNC_BEGIN VI_DRV_CheckFrameRate
    /*00027cc4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00027cc8*/ SUB         SP, SP, #20 
    /*00027ccc*/ LDR         R2, [R0] 
    /*00027cd0*/ CMN         R2, #1 
    /*00027cd4*/ BEQ         VI_DRV_CheckFrameRate_x27d04
    /*00027cd8*/ SUB         R3, R2, #1 
    /*00027cdc*/ CMP         R3, #239                    @ 0xef 
    /*00027ce0*/ BHI         VI_DRV_CheckFrameRate_x27d10
    /*00027ce4*/ LDR         R3, [R0, #4] 
    /*00027ce8*/ CMP         R2, R3 
    /*00027cec*/ MOVGE       R0, #0 
    /*00027cf0*/ MOVLT       R0, #1 
    /*00027cf4*/ ORRS        R0, R0, R3, LSR #31 
    /*00027cf8*/ BNE         VI_DRV_CheckFrameRate_x27d50
    VI_DRV_CheckFrameRate_x27cfc:
    /*00027cfc*/ ADD         SP, SP, #20 
    /*00027d00*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckFrameRate_x27d04:
    /*00027d04*/ LDR         R3, [R0, #4] 
    /*00027d08*/ CMN         R3, #1 
    /*00027d0c*/ BEQ         VI_DRV_CheckFrameRate_x27d48
    VI_DRV_CheckFrameRate_x27d10:
    /*00027d10*/ MOVW        R3, #2204                   @ 0x89c 
    /*00027d14*/ STR         R3, [SP] 
    /*00027d18*/ LDR         R3, [PC, #80]               @ 0x0000000000027d70 
    /*00027d1c*/ STR         R2, [SP, #4] 
    /*00027d20*/ MOV         R2, #240                    @ 0xf0 
    /*00027d24*/ STR         R2, [SP, #8] 
    /*00027d28*/ MOVW        R2, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xba48] 
    /*00027d2c*/ MOVT        R2, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0xba48] 
    VI_DRV_CheckFrameRate_x27d30:
    /*00027d30*/ MOV         R1, #16 
    /*00027d34*/ MOV         R0, #3 
    /*00027d38*/ BL          0x0000000000027D38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00027d3c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00027d40*/ MOVT        R0, #40976                  @ 0xa010 
    /*00027d44*/ B           VI_DRV_CheckFrameRate_x27cfc
    VI_DRV_CheckFrameRate_x27d48:
    /*00027d48*/ MOV         R0, #0 
    /*00027d4c*/ B           VI_DRV_CheckFrameRate_x27cfc
    VI_DRV_CheckFrameRate_x27d50:
    /*00027d50*/ STR         R2, [SP, #8] 
    /*00027d54*/ MOVW        R1, #2212                   @ 0x8a4 
    /*00027d58*/ STR         R3, [SP, #4] 
    /*00027d5c*/ MOVW        R2, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xba90] 
    /*00027d60*/ STR         R1, [SP] 
    /*00027d64*/ MOVT        R2, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0xba90] 
    /*00027d68*/ LDR         R3, [PC]                    @ 0x0000000000027d70 
    /*00027d6c*/ B           VI_DRV_CheckFrameRate_x27d30
    /*00027d70*/ ANDEQ       R1, R0, IP, ROR #17 
FUNC_END VI_DRV_CheckFrameRate


FUNC_BEGIN VI_DRV_CheckPipeAttr
    /*00027d74*/ CMP         R2, #1 
    /*00027d78*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00027d7c*/ MOV         R5, R0 
    /*00027d80*/ SUB         SP, SP, #28 
    /*00027d84*/ BHI         VI_DRV_CheckPipeAttr_x282ac
    /*00027d88*/ CMP         R0, #3 
    /*00027d8c*/ BHI         VI_DRV_CheckPipeAttr_x28328
    /*00027d90*/ MOV         R6, R3 
    /*00027d94*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00027d98*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00027d9c*/ MOV         R4, R1 
    /*00027da0*/ ADD         R3, R3, R0, LSL #2 
    /*00027da4*/ LDR         R9, [R3, #712]              @ 0x2c8 
    /*00027da8*/ BL          0x0000000000027DA8          @ VI_DRV_GetPipeMaxWidth [R_ARM_CALL: .text+0x25c5c] 
    /*00027dac*/ MOV         R8, R0 
    /*00027db0*/ MOV         R0, R5 
    /*00027db4*/ BL          0x0000000000027DB4          @ VI_DRV_GetPipeMaxHeight [R_ARM_CALL: .text+0x25ddc] 
    /*00027db8*/ LDR         R3, [R4] 
    /*00027dbc*/ BICS        R2, R3, #2 
    /*00027dc0*/ BNE         VI_DRV_CheckPipeAttr_x2837c
    /*00027dc4*/ SUB         R7, R9, #2 
    /*00027dc8*/ CMP         R7, #1 
    /*00027dcc*/ BLS         VI_DRV_CheckPipeAttr_x28088
    /*00027dd0*/ CMP         R9, #1 
    /*00027dd4*/ BEQ         VI_DRV_CheckPipeAttr_x280a8
    /*00027dd8*/ SUB         R3, R3, #2 
    /*00027ddc*/ CMP         R5, #2 
    /*00027de0*/ CLZ         R3, R3 
    /*00027de4*/ LSR         R3, R3, #5 
    /*00027de8*/ MOVEQ       R3, #0 
    /*00027dec*/ CMP         R3, #0 
    /*00027df0*/ BNE         VI_DRV_CheckPipeAttr_x283dc
    VI_DRV_CheckPipeAttr_x27df4:
    /*00027df4*/ LDR         R3, [R4, #4] 
    /*00027df8*/ CMP         R3, #1 
    /*00027dfc*/ BHI         VI_DRV_CheckPipeAttr_x28304
    /*00027e00*/ LDR         R3, [R4, #8] 
    /*00027e04*/ CMP         R3, #1 
    /*00027e08*/ BHI         VI_DRV_CheckPipeAttr_x28340
    /*00027e0c*/ LDR         R3, [R4, #12] 
    /*00027e10*/ CMP         R8, R3 
    /*00027e14*/ CMPCS       R3, #119                    @ 0x77 
    /*00027e18*/ BLS         VI_DRV_CheckPipeAttr_x2826c
    /*00027e1c*/ LDR         R2, [R4, #16] 
    /*00027e20*/ CMP         R0, R2 
    /*00027e24*/ CMPCS       R2, #119                    @ 0x77 
    /*00027e28*/ BLS         VI_DRV_CheckPipeAttr_x282e0
    /*00027e2c*/ MOVW        R1, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00027e30*/ MOVT        R1, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00027e34*/ LDR         R1, [R1] 
    /*00027e38*/ LDRB        R1, [R1, #40]               @ 0x28 
    /*00027e3c*/ SUB         R0, R1, #1 
    /*00027e40*/ CMP         R0, #1 
    /*00027e44*/ BLS         VI_DRV_CheckPipeAttr_x27ecc
    /*00027e48*/ SUB         R0, R1, #5 
    /*00027e4c*/ CMP         R0, #1 
    /*00027e50*/ BLS         VI_DRV_CheckPipeAttr_x28100
    /*00027e54*/ CMP         R1, #12 
    /*00027e58*/ BLS         VI_DRV_CheckPipeAttr_x280ec
    VI_DRV_CheckPipeAttr_x27e5c:
    /*00027e5c*/ MOVW        R3, #2365                   @ 0x93d 
    /*00027e60*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xafa4] 
    /*00027e64*/ STR         R3, [SP] 
    /*00027e68*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xafa4] 
    /*00027e6c*/ LDR         R3, [PC, #1648]             @ 0x00000000000284e4 
    /*00027e70*/ MOV         R1, #16 
    /*00027e74*/ MOV         R0, #3 
    /*00027e78*/ BL          0x0000000000027E78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00027e7c*/ CMP         R5, #1 
    /*00027e80*/ BLE         VI_DRV_CheckPipeAttr_x28480
    /*00027e84*/ LDR         R3, [R4, #12] 
    /*00027e88*/ LDR         R2, [R4, #16] 
    /*00027e8c*/ MUL         R1, R2, R3 
    /*00027e90*/ CMP         R1, #3145728                @ 0x300000 
    /*00027e94*/ BLS         VI_DRV_CheckPipeAttr_x27ee8
    /*00027e98*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbe50] 
    /*00027e9c*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbe50] 
    /*00027ea0*/ MOVW        R3, #2378                   @ 0x94a 
    /*00027ea4*/ STR         R5, [SP, #4] 
    /*00027ea8*/ STR         R3, [SP] 
    VI_DRV_CheckPipeAttr_x27eac:
    /*00027eac*/ LDR         R3, [PC, #1584]             @ 0x00000000000284e4 
    /*00027eb0*/ MOV         R1, #16 
    /*00027eb4*/ MOV         R0, #3 
    /*00027eb8*/ BL          0x0000000000027EB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00027ebc*/ MOVW        R0, #32771                  @ 0x8003 
    /*00027ec0*/ MOVT        R0, #40976                  @ 0xa010 
    VI_DRV_CheckPipeAttr_x27ec4:
    /*00027ec4*/ ADD         SP, SP, #28 
    /*00027ec8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_CheckPipeAttr_x27ecc:
    /*00027ecc*/ CMP         R5, #3 
    /*00027ed0*/ BEQ         VI_DRV_CheckPipeAttr_x284b4
    /*00027ed4*/ CMP         R5, #2 
    /*00027ed8*/ BNE         VI_DRV_CheckPipeAttr_x2819c
    /*00027edc*/ MUL         R1, R2, R3 
    /*00027ee0*/ CMP         R1, #3145728                @ 0x300000 
    /*00027ee4*/ BHI         VI_DRV_CheckPipeAttr_x28468
    VI_DRV_CheckPipeAttr_x27ee8:
    /*00027ee8*/ TST         R3, #3 
    /*00027eec*/ BNE         VI_DRV_CheckPipeAttr_x28394
    /*00027ef0*/ TST         R2, #3 
    /*00027ef4*/ BNE         VI_DRV_CheckPipeAttr_x283b8
    /*00027ef8*/ LDR         R3, [R4, #20] 
    /*00027efc*/ SUB         R0, R3, #17 
    /*00027f00*/ SUB         R2, R3, #25 
    /*00027f04*/ CMP         R0, #22 
    /*00027f08*/ BLS         VI_DRV_CheckPipeAttr_x27f24
    VI_DRV_CheckPipeAttr_x27f0c:
    /*00027f0c*/ STR         R3, [SP, #4] 
    /*00027f10*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbf90] 
    /*00027f14*/ MOVW        R3, #2409                   @ 0x969 
    /*00027f18*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbf90] 
    /*00027f1c*/ STR         R3, [SP] 
    /*00027f20*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x27f24:
    /*00027f24*/ MOVW        R1, #799                    @ 0x31f 
    /*00027f28*/ MOVT        R1, #64                     @ 0x40 
    /*00027f2c*/ MVN         R1, R1, LSR R0 
    /*00027f30*/ TST         R1, #1 
    /*00027f34*/ BNE         VI_DRV_CheckPipeAttr_x27f0c
    /*00027f38*/ CMP         R0, #4 
    /*00027f3c*/ BHI         VI_DRV_CheckPipeAttr_x27f68
    /*00027f40*/ LDR         R1, [R4, #8] 
    /*00027f44*/ CMP         R1, #0 
    /*00027f48*/ BNE         VI_DRV_CheckPipeAttr_x2840c
    /*00027f4c*/ LDR         R1, [R4] 
    /*00027f50*/ CMP         R1, #2 
    /*00027f54*/ MOVWEQ      R3, #2429                   @ 0x97d 
    /*00027f58*/ MOVWEQ      R2, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc04c] 
    /*00027f5c*/ STREQ       R3, [SP] 
    /*00027f60*/ MOVTEQ      R2, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc04c] 
    /*00027f64*/ BEQ         VI_DRV_CheckPipeAttr_x28224
    VI_DRV_CheckPipeAttr_x27f68:
    /*00027f68*/ BIC         R1, R3, #4 
    /*00027f6c*/ CMP         R1, #17 
    /*00027f70*/ BNE         VI_DRV_CheckPipeAttr_x28014
    /*00027f74*/ LDR         R1, [R4, #24] 
    /*00027f78*/ CMP         R1, #0 
    /*00027f7c*/ BNE         VI_DRV_CheckPipeAttr_x28424
    /*00027f80*/ CMP         R3, #39                     @ 0x27 
    /*00027f84*/ CMPNE       R2, #1 
    /*00027f88*/ MOVLS       R3, #1 
    /*00027f8c*/ MOVHI       R3, #0 
    VI_DRV_CheckPipeAttr_x27f90:
    /*00027f90*/ CMP         R5, #1 
    /*00027f94*/ MOVHI       R1, #0 
    /*00027f98*/ MOVLS       R1, #1 
    /*00027f9c*/ CMP         R5, #3 
    /*00027fa0*/ MOVNE       R2, R1 
    /*00027fa4*/ ORREQ       R2, R1, #1 
    /*00027fa8*/ ANDS        R2, R3, R2 
    /*00027fac*/ BNE         VI_DRV_CheckPipeAttr_x28450
    /*00027fb0*/ CMP         R7, #1 
    /*00027fb4*/ BLS         VI_DRV_CheckPipeAttr_x2812c
    /*00027fb8*/ LDR         R0, [R4, #28] 
    /*00027fbc*/ CMP         R0, #4 
    /*00027fc0*/ BHI         VI_DRV_CheckPipeAttr_x28048
    /*00027fc4*/ CMP         R0, #0 
    /*00027fc8*/ MOVEQ       R3, #0 
    /*00027fcc*/ ANDNE       R3, R3, #1 
    /*00027fd0*/ CMP         R3, #0 
    /*00027fd4*/ BNE         VI_DRV_CheckPipeAttr_x281e0
    VI_DRV_CheckPipeAttr_x27fd8:
    /*00027fd8*/ LDR         R3, [R4, #32] 
    /*00027fdc*/ CMP         R3, #1 
    /*00027fe0*/ BHI         VI_DRV_CheckPipeAttr_x28364
    /*00027fe4*/ CMP         R1, #0 
    /*00027fe8*/ LDR         R3, [R4, #24] 
    /*00027fec*/ BNE         VI_DRV_CheckPipeAttr_x28174
    /*00027ff0*/ CMP         R3, #0 
    /*00027ff4*/ BNE         VI_DRV_CheckPipeAttr_x283f4
    VI_DRV_CheckPipeAttr_x27ff8:
    /*00027ff8*/ LDR         R3, [R4, #64]               @ 0x40 
    /*00027ffc*/ CMP         R3, #1 
    /*00028000*/ BHI         VI_DRV_CheckPipeAttr_x281c8
    /*00028004*/ ADD         R0, R4, #56                 @ 0x38 
    /*00028008*/ ADD         SP, SP, #28 
    /*0002800c*/ POP         {R4, R5, R6, R7, R8, R9, LR} 
    VI_DRV_CheckPipeAttr_x28010:
    /*00028010*/ B           VI_DRV_CheckPipeAttr_x28010 @ VI_DRV_CheckFrameRate [R_ARM_JUMP24: .text+0x27cc4] 
    VI_DRV_CheckPipeAttr_x28014:
    /*00028014*/ CMP         R3, #39                     @ 0x27 
    /*00028018*/ CMPNE       R2, #1 
    /*0002801c*/ MOVLS       R3, #1 
    /*00028020*/ MOVHI       R3, #0 
    /*00028024*/ BLS         VI_DRV_CheckPipeAttr_x280c8
    /*00028028*/ CMP         R5, #1 
    /*0002802c*/ MOVHI       R1, #0 
    /*00028030*/ MOVLS       R1, #1 
    /*00028034*/ CMP         R7, #1 
    /*00028038*/ BLS         VI_DRV_CheckPipeAttr_x28134
    VI_DRV_CheckPipeAttr_x2803c:
    /*0002803c*/ LDR         R0, [R4, #28] 
    /*00028040*/ CMP         R0, #4 
    /*00028044*/ BLS         VI_DRV_CheckPipeAttr_x27fd8
    VI_DRV_CheckPipeAttr_x28048:
    /*00028048*/ MOV         R2, #0 
    /*0002804c*/ MOV         R3, #4 
    /*00028050*/ STMIB       SP, {R2, R3} 
    /*00028054*/ MOVW        R2, #0                      @ .LC119 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc2c0] 
    /*00028058*/ MOVT        R2, #0                      @ .LC119 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc2c0] 
    /*0002805c*/ MOV         R3, #2496                   @ 0x9c0 
    /*00028060*/ STR         R0, [SP, #12] 
    /*00028064*/ STR         R3, [SP] 
    VI_DRV_CheckPipeAttr_x28068:
    /*00028068*/ LDR         R3, [PC, #1140]             @ 0x00000000000284e4 
    /*0002806c*/ MOV         R1, #16 
    /*00028070*/ MOV         R0, #3 
    /*00028074*/ BL          0x0000000000028074          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00028078*/ MOVW        R0, #32771                  @ 0x8003 
    /*0002807c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00028080*/ ADD         SP, SP, #28 
    /*00028084*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_CheckPipeAttr_x28088:
    /*00028088*/ CMP         R3, #0 
    /*0002808c*/ BEQ         VI_DRV_CheckPipeAttr_x27df4
    /*00028090*/ MOVW        R3, #2259                   @ 0x8d3 
    /*00028094*/ MOVW        R2, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbbd0] 
    /*00028098*/ STR         R9, [SP, #4] 
    /*0002809c*/ MOVT        R2, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbbd0] 
    /*000280a0*/ STR         R3, [SP] 
    /*000280a4*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x280a8:
    /*000280a8*/ CMP         R3, #0 
    /*000280ac*/ BEQ         VI_DRV_CheckPipeAttr_x27df4
    /*000280b0*/ MOVW        R3, #2267                   @ 0x8db 
    /*000280b4*/ MOVW        R2, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbbd0] 
    /*000280b8*/ STR         R9, [SP, #4] 
    /*000280bc*/ MOVT        R2, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbbd0] 
    /*000280c0*/ STR         R3, [SP] 
    /*000280c4*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x280c8:
    /*000280c8*/ LDR         R2, [R4, #24] 
    /*000280cc*/ CMP         R2, #0 
    /*000280d0*/ BEQ         VI_DRV_CheckPipeAttr_x27f90
    /*000280d4*/ STR         R2, [SP, #4] 
    /*000280d8*/ MOVW        R3, #2457                   @ 0x999 
    /*000280dc*/ MOVW        R2, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc134] 
    /*000280e0*/ STR         R3, [SP] 
    /*000280e4*/ MOVT        R2, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc134] 
    /*000280e8*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x280ec:
    /*000280ec*/ MOVW        R0, #4609                   @ 0x1201 
    /*000280f0*/ MVN         R1, R0, LSR R1 
    /*000280f4*/ TST         R1, #1 
    /*000280f8*/ BEQ         VI_DRV_CheckPipeAttr_x27ee8
    /*000280fc*/ B           VI_DRV_CheckPipeAttr_x27e5c
    VI_DRV_CheckPipeAttr_x28100:
    /*00028100*/ CMP         R5, #1 
    /*00028104*/ BLE         VI_DRV_CheckPipeAttr_x28240
    /*00028108*/ MUL         R1, R2, R3 
    /*0002810c*/ CMP         R1, #3145728                @ 0x300000 
    /*00028110*/ BLS         VI_DRV_CheckPipeAttr_x27ee8
    /*00028114*/ MOVW        R3, #2353                   @ 0x931 
    /*00028118*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbe50] 
    /*0002811c*/ STR         R5, [SP, #4] 
    /*00028120*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbe50] 
    /*00028124*/ STR         R3, [SP] 
    /*00028128*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x2812c:
    /*0002812c*/ CMP         R3, #0 
    /*00028130*/ BNE         VI_DRV_CheckPipeAttr_x28214
    VI_DRV_CheckPipeAttr_x28134:
    /*00028134*/ CMP         R6, #3 
    /*00028138*/ BNE         VI_DRV_CheckPipeAttr_x2803c
    /*0002813c*/ LDR         R3, [R4, #24] 
    /*00028140*/ CMP         R3, #4 
    /*00028144*/ BNE         VI_DRV_CheckPipeAttr_x2803c
    /*00028148*/ MOVW        R3, #2487                   @ 0x9b7 
    /*0002814c*/ MOV         R0, R6 
    /*00028150*/ STR         R3, [SP] 
    /*00028154*/ MOVW        R2, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc248] 
    /*00028158*/ LDR         R3, [PC, #900]              @ 0x00000000000284e4 
    /*0002815c*/ MOVT        R2, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc248] 
    /*00028160*/ MOV         R1, #16 
    /*00028164*/ BL          0x0000000000028164          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00028168*/ MOVW        R0, #32771                  @ 0x8003 
    /*0002816c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00028170*/ B           VI_DRV_CheckPipeAttr_x27ec4
    VI_DRV_CheckPipeAttr_x28174:
    /*00028174*/ SUB         R2, R3, #3 
    /*00028178*/ CMP         R3, #0 
    /*0002817c*/ CMPNE       R2, #1 
    /*00028180*/ BLS         VI_DRV_CheckPipeAttr_x27ff8
    /*00028184*/ STR         R3, [SP, #4] 
    /*00028188*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc3a0] 
    /*0002818c*/ MOV         R3, #2528                   @ 0x9e0 
    /*00028190*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc3a0] 
    /*00028194*/ STR         R3, [SP] 
    /*00028198*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x2819c:
    /*0002819c*/ MUL         R0, R2, R3 
    /*000281a0*/ MOV         R1, #36864                  @ 0x9000 
    /*000281a4*/ MOVT        R1, #45                     @ 0x2d 
    /*000281a8*/ CMP         R0, R1 
    /*000281ac*/ BLS         VI_DRV_CheckPipeAttr_x27ee8
    /*000281b0*/ MOVW        R3, #2326                   @ 0x916 
    /*000281b4*/ MOVW        R2, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbdfc] 
    /*000281b8*/ STR         R5, [SP, #4] 
    /*000281bc*/ MOVT        R2, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbdfc] 
    /*000281c0*/ STR         R3, [SP] 
    /*000281c4*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x281c8:
    /*000281c8*/ STR         R3, [SP, #4] 
    /*000281cc*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc46c] 
    /*000281d0*/ MOVW        R3, #2546                   @ 0x9f2 
    /*000281d4*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc46c] 
    /*000281d8*/ STR         R3, [SP] 
    /*000281dc*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x281e0:
    /*000281e0*/ STR         R2, [SP, #8] 
    /*000281e4*/ MOVW        R3, #2507                   @ 0x9cb 
    /*000281e8*/ STR         R0, [SP, #4] 
    /*000281ec*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc30c] 
    /*000281f0*/ STR         R3, [SP] 
    /*000281f4*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc30c] 
    /*000281f8*/ LDR         R3, [PC, #740]              @ 0x00000000000284e4 
    /*000281fc*/ MOV         R1, #16 
    /*00028200*/ MOV         R0, #3 
    /*00028204*/ BL          0x0000000000028204          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00028208*/ MOVW        R0, #32771                  @ 0x8003 
    /*0002820c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00028210*/ B           VI_DRV_CheckPipeAttr_x27ec4
    VI_DRV_CheckPipeAttr_x28214:
    /*00028214*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc1f4] 
    /*00028218*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc1f4] 
    /*0002821c*/ MOVW        R3, #2481                   @ 0x9b1 
    /*00028220*/ STR         R3, [SP] 
    VI_DRV_CheckPipeAttr_x28224:
    /*00028224*/ LDR         R3, [PC, #696]              @ 0x00000000000284e4 
    /*00028228*/ MOV         R1, #16 
    /*0002822c*/ MOV         R0, #3 
    /*00028230*/ BL          0x0000000000028230          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00028234*/ MOVW        R0, #32771                  @ 0x8003 
    /*00028238*/ MOVT        R0, #40976                  @ 0xa010 
    /*0002823c*/ B           VI_DRV_CheckPipeAttr_x27ec4
    VI_DRV_CheckPipeAttr_x28240:
    /*00028240*/ MUL         R0, R2, R3 
    /*00028244*/ MOV         R1, #48128                  @ 0xbc00 
    /*00028248*/ MOVT        R1, #79                     @ 0x4f 
    /*0002824c*/ CMP         R0, R1 
    /*00028250*/ BLS         VI_DRV_CheckPipeAttr_x27ee8
    /*00028254*/ MOVW        R3, #2345                   @ 0x929 
    /*00028258*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbea4] 
    /*0002825c*/ STR         R5, [SP, #4] 
    /*00028260*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbea4] 
    /*00028264*/ STR         R3, [SP] 
    /*00028268*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x2826c:
    /*0002826c*/ MOVW        R2, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbd00] 
    /*00028270*/ MOVT        R2, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbd00] 
    /*00028274*/ STR         R3, [SP, #16] 
    /*00028278*/ MOVW        R3, #2302                   @ 0x8fe 
    /*0002827c*/ MOV         R1, #120                    @ 0x78 
    /*00028280*/ STR         R8, [SP, #12] 
    /*00028284*/ STR         R5, [SP, #4] 
    /*00028288*/ STR         R1, [SP, #8] 
    VI_DRV_CheckPipeAttr_x2828c:
    /*0002828c*/ STR         R3, [SP] 
    /*00028290*/ MOV         R1, #16 
    /*00028294*/ LDR         R3, [PC, #584]              @ 0x00000000000284e4 
    /*00028298*/ MOV         R0, #3 
    /*0002829c*/ BL          0x000000000002829C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000282a0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000282a4*/ MOVT        R0, #40976                  @ 0xa010 
    /*000282a8*/ B           VI_DRV_CheckPipeAttr_x27ec4
    VI_DRV_CheckPipeAttr_x282ac:
    /*000282ac*/ STR         R2, [SP, #8] 
    /*000282b0*/ MOVW        R3, #2229                   @ 0x8b5 
    /*000282b4*/ STR         R0, [SP, #4] 
    /*000282b8*/ MOVW        R2, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbadc] 
    /*000282bc*/ STR         R3, [SP] 
    /*000282c0*/ MOVT        R2, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbadc] 
    /*000282c4*/ LDR         R3, [PC, #536]              @ 0x00000000000284e4 
    /*000282c8*/ MOV         R1, #16 
    /*000282cc*/ MOV         R0, #3 
    /*000282d0*/ BL          0x00000000000282D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000282d4*/ MOVW        R0, #32839                  @ 0x8047 
    /*000282d8*/ MOVT        R0, #40976                  @ 0xa010 
    /*000282dc*/ B           VI_DRV_CheckPipeAttr_x27ec4
    VI_DRV_CheckPipeAttr_x282e0:
    /*000282e0*/ STR         R2, [SP, #16] 
    /*000282e4*/ MOV         R1, #120                    @ 0x78 
    /*000282e8*/ MOVW        R2, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbd58] 
    /*000282ec*/ STR         R0, [SP, #12] 
    /*000282f0*/ MOVW        R3, #2309                   @ 0x905 
    /*000282f4*/ STR         R5, [SP, #4] 
    /*000282f8*/ STR         R1, [SP, #8] 
    /*000282fc*/ MOVT        R2, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbd58] 
    /*00028300*/ B           VI_DRV_CheckPipeAttr_x2828c
    VI_DRV_CheckPipeAttr_x28304:
    /*00028304*/ MOV         R2, #0 
    /*00028308*/ STR         R3, [SP, #12] 
    /*0002830c*/ MOV         R3, #1 
    /*00028310*/ STMIB       SP, {R2, R3} 
    /*00028314*/ MOVW        R3, #2285                   @ 0x8ed 
    /*00028318*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbc68] 
    /*0002831c*/ STR         R3, [SP] 
    /*00028320*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbc68] 
    /*00028324*/ B           VI_DRV_CheckPipeAttr_x28068
    VI_DRV_CheckPipeAttr_x28328:
    /*00028328*/ MOVW        R3, #2235                   @ 0x8bb 
    /*0002832c*/ MOVW        R2, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbb1c] 
    /*00028330*/ STR         R0, [SP, #4] 
    /*00028334*/ MOVT        R2, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbb1c] 
    /*00028338*/ STR         R3, [SP] 
    /*0002833c*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x28340:
    /*00028340*/ MOV         R2, #0 
    /*00028344*/ STR         R3, [SP, #12] 
    /*00028348*/ MOV         R3, #1 
    /*0002834c*/ STMIB       SP, {R2, R3} 
    /*00028350*/ MOVW        R3, #2294                   @ 0x8f6 
    /*00028354*/ MOVW        R2, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbcb4] 
    /*00028358*/ STR         R3, [SP] 
    /*0002835c*/ MOVT        R2, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbcb4] 
    /*00028360*/ B           VI_DRV_CheckPipeAttr_x28068
    VI_DRV_CheckPipeAttr_x28364:
    /*00028364*/ STR         R3, [SP, #4] 
    /*00028368*/ MOVW        R2, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc360] 
    /*0002836c*/ MOVW        R3, #2516                   @ 0x9d4 
    /*00028370*/ MOVT        R2, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc360] 
    /*00028374*/ STR         R3, [SP] 
    /*00028378*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x2837c:
    /*0002837c*/ STR         R3, [SP, #4] 
    /*00028380*/ MOVW        R2, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbb68] 
    /*00028384*/ MOVW        R3, #2251                   @ 0x8cb 
    /*00028388*/ MOVT        R2, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbb68] 
    /*0002838c*/ STR         R3, [SP] 
    /*00028390*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x28394:
    /*00028394*/ MOV         R2, #4 
    /*00028398*/ STR         R3, [SP, #12] 
    /*0002839c*/ STR         R2, [SP, #8] 
    /*000283a0*/ MOVW        R3, #2387                   @ 0x953 
    /*000283a4*/ MOVW        R2, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbef8] 
    /*000283a8*/ STR         R5, [SP, #4] 
    /*000283ac*/ STR         R3, [SP] 
    /*000283b0*/ MOVT        R2, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbef8] 
    /*000283b4*/ B           VI_DRV_CheckPipeAttr_x28068
    VI_DRV_CheckPipeAttr_x283b8:
    /*000283b8*/ STR         R2, [SP, #12] 
    /*000283bc*/ MOVW        R3, #2394                   @ 0x95a 
    /*000283c0*/ MOV         R2, #4 
    /*000283c4*/ STR         R5, [SP, #4] 
    /*000283c8*/ STR         R2, [SP, #8] 
    /*000283cc*/ MOVW        R2, #0                      @ .LC110 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbf44] 
    /*000283d0*/ STR         R3, [SP] 
    /*000283d4*/ MOVT        R2, #0                      @ .LC110 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbf44] 
    /*000283d8*/ B           VI_DRV_CheckPipeAttr_x28068
    VI_DRV_CheckPipeAttr_x283dc:
    /*000283dc*/ MOVW        R3, #2277                   @ 0x8e5 
    /*000283e0*/ MOVW        R2, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbc20] 
    /*000283e4*/ STR         R5, [SP, #4] 
    /*000283e8*/ MOVT        R2, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbc20] 
    /*000283ec*/ STR         R3, [SP] 
    /*000283f0*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x283f4:
    /*000283f4*/ MOVW        R3, #2537                   @ 0x9e9 
    /*000283f8*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc424] 
    /*000283fc*/ STR         R5, [SP, #4] 
    /*00028400*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc424] 
    /*00028404*/ STR         R3, [SP] 
    /*00028408*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x2840c:
    /*0002840c*/ MOVW        R3, #2423                   @ 0x977 
    /*00028410*/ MOVW        R2, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbfe4] 
    /*00028414*/ STR         R1, [SP, #4] 
    /*00028418*/ MOVT        R2, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbfe4] 
    /*0002841c*/ STR         R3, [SP] 
    /*00028420*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x28424:
    /*00028424*/ MOVW        R3, #2438                   @ 0x986 
    /*00028428*/ STR         R5, [SP, #4] 
    /*0002842c*/ STR         R3, [SP] 
    /*00028430*/ MOVW        R2, #0                      @ .LC114 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc0bc] 
    /*00028434*/ LDR         R3, [PC, #168]              @ 0x00000000000284e4 
    /*00028438*/ MOVT        R2, #0                      @ .LC114 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc0bc] 
    /*0002843c*/ MOV         R1, #16 
    /*00028440*/ MOV         R0, #3 
    /*00028444*/ BL          0x0000000000028444          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00028448*/ MVN         R0, #0 
    /*0002844c*/ B           VI_DRV_CheckPipeAttr_x27ec4
    VI_DRV_CheckPipeAttr_x28450:
    /*00028450*/ MOVW        R3, #2469                   @ 0x9a5 
    /*00028454*/ MOVW        R2, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc1a8] 
    /*00028458*/ STR         R5, [SP, #4] 
    /*0002845c*/ MOVT        R2, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc1a8] 
    /*00028460*/ STR         R3, [SP] 
    /*00028464*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x28468:
    /*00028468*/ MOVW        R3, #2334                   @ 0x91e 
    /*0002846c*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbe50] 
    /*00028470*/ STR         R5, [SP, #4] 
    /*00028474*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbe50] 
    /*00028478*/ STR         R3, [SP] 
    /*0002847c*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x28480:
    /*00028480*/ LDR         R3, [R4, #12] 
    /*00028484*/ MOV         R1, #36864                  @ 0x9000 
    /*00028488*/ LDR         R2, [R4, #16] 
    /*0002848c*/ MOVT        R1, #45                     @ 0x2d 
    /*00028490*/ MUL         R0, R2, R3 
    /*00028494*/ CMP         R0, R1 
    /*00028498*/ BLS         VI_DRV_CheckPipeAttr_x27ee8
    /*0002849c*/ MOVW        R3, #2370                   @ 0x942 
    /*000284a0*/ MOVW        R2, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbdfc] 
    /*000284a4*/ STR         R5, [SP, #4] 
    /*000284a8*/ MOVT        R2, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbdfc] 
    /*000284ac*/ STR         R3, [SP] 
    /*000284b0*/ B           VI_DRV_CheckPipeAttr_x27eac
    VI_DRV_CheckPipeAttr_x284b4:
    /*000284b4*/ MOVW        R3, #2318                   @ 0x90e 
    /*000284b8*/ STR         R5, [SP, #4] 
    /*000284bc*/ STR         R3, [SP] 
    /*000284c0*/ MOV         R0, R5 
    /*000284c4*/ MOVW        R2, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbdb4] 
    /*000284c8*/ LDR         R3, [PC, #20]               @ 0x00000000000284e4 
    /*000284cc*/ MOVT        R2, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbdb4] 
    /*000284d0*/ MOV         R1, #16 
    /*000284d4*/ BL          0x00000000000284D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000284d8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000284dc*/ MOVT        R0, #40976                  @ 0xa010 
    /*000284e0*/ B           VI_DRV_CheckPipeAttr_x27ec4
    /*000284e4*/ ANDEQ       R1, R0, R4, LSL #18 
FUNC_END VI_DRV_CheckPipeAttr


FUNC_BEGIN VI_DRV_CheckPipeStaticAttr
    /*000284e8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000284ec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000284f0*/ ADD         R3, R3, R0, LSL #2 
    /*000284f4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000284f8*/ SUB         SP, SP, #12 
    /*000284fc*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*00028500*/ LDR         IP, [R1] 
    /*00028504*/ ADD         R3, R3, #32768              @ 0x8000 
    /*00028508*/ LDR         R2, [R3, #1324]             @ 0x52c 
    /*0002850c*/ CMP         IP, R2 
    /*00028510*/ BNE         VI_DRV_CheckPipeStaticAttr_x28570
    /*00028514*/ LDR         IP, [R1, #4] 
    /*00028518*/ LDR         R2, [R3, #1328]             @ 0x530 
    /*0002851c*/ CMP         IP, R2 
    /*00028520*/ BNE         VI_DRV_CheckPipeStaticAttr_x285a0
    /*00028524*/ LDR         IP, [R1, #8] 
    /*00028528*/ LDR         R2, [R3, #1332]             @ 0x534 
    /*0002852c*/ CMP         IP, R2 
    /*00028530*/ BNE         VI_DRV_CheckPipeStaticAttr_x285b8
    /*00028534*/ LDR         IP, [R1, #12] 
    /*00028538*/ LDR         R2, [R3, #1336]             @ 0x538 
    /*0002853c*/ CMP         IP, R2 
    /*00028540*/ BNE         VI_DRV_CheckPipeStaticAttr_x285d0
    /*00028544*/ LDR         IP, [R1, #16] 
    /*00028548*/ LDR         R2, [R3, #1340]             @ 0x53c 
    /*0002854c*/ CMP         IP, R2 
    /*00028550*/ BNE         VI_DRV_CheckPipeStaticAttr_x285e8
    /*00028554*/ LDR         R2, [R1, #28] 
    /*00028558*/ LDR         R3, [R3, #1352]             @ 0x548 
    /*0002855c*/ CMP         R2, R3 
    /*00028560*/ MOVEQ       R0, #0 
    /*00028564*/ BNE         VI_DRV_CheckPipeStaticAttr_x28600
    /*00028568*/ ADD         SP, SP, #12 
    /*0002856c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckPipeStaticAttr_x28570:
    /*00028570*/ MOVW        R2, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc4b8] 
    /*00028574*/ MOVT        R2, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc4b8] 
    /*00028578*/ MOVW        R3, #2562                   @ 0xa02 
    /*0002857c*/ STR         R0, [SP, #4] 
    /*00028580*/ STR         R3, [SP] 
    VI_DRV_CheckPipeStaticAttr_x28584:
    /*00028584*/ LDR         R3, [PC, #140]              @ 0x0000000000028618 
    /*00028588*/ MOV         R1, #16 
    /*0002858c*/ MOV         R0, #3 
    /*00028590*/ BL          0x0000000000028590          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00028594*/ MVN         R0, #0 
    /*00028598*/ ADD         SP, SP, #12 
    /*0002859c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckPipeStaticAttr_x285a0:
    /*000285a0*/ MOVW        R3, #2568                   @ 0xa08 
    /*000285a4*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc510] 
    /*000285a8*/ STR         R0, [SP, #4] 
    /*000285ac*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc510] 
    /*000285b0*/ STR         R3, [SP] 
    /*000285b4*/ B           VI_DRV_CheckPipeStaticAttr_x28584
    VI_DRV_CheckPipeStaticAttr_x285b8:
    /*000285b8*/ MOVW        R3, #2574                   @ 0xa0e 
    /*000285bc*/ MOVW        R2, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc560] 
    /*000285c0*/ STR         R0, [SP, #4] 
    /*000285c4*/ MOVT        R2, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc560] 
    /*000285c8*/ STR         R3, [SP] 
    /*000285cc*/ B           VI_DRV_CheckPipeStaticAttr_x28584
    VI_DRV_CheckPipeStaticAttr_x285d0:
    /*000285d0*/ MOVW        R3, #2580                   @ 0xa14 
    /*000285d4*/ MOVW        R2, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc5b0] 
    /*000285d8*/ STR         R0, [SP, #4] 
    /*000285dc*/ MOVT        R2, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc5b0] 
    /*000285e0*/ STR         R3, [SP] 
    /*000285e4*/ B           VI_DRV_CheckPipeStaticAttr_x28584
    VI_DRV_CheckPipeStaticAttr_x285e8:
    /*000285e8*/ MOVW        R3, #2586                   @ 0xa1a 
    /*000285ec*/ MOVW        R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc5fc] 
    /*000285f0*/ STR         R0, [SP, #4] 
    /*000285f4*/ MOVT        R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc5fc] 
    /*000285f8*/ STR         R3, [SP] 
    /*000285fc*/ B           VI_DRV_CheckPipeStaticAttr_x28584
    VI_DRV_CheckPipeStaticAttr_x28600:
    /*00028600*/ MOV         R3, #2592                   @ 0xa20 
    /*00028604*/ MOVW        R2, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc648] 
    /*00028608*/ STR         R0, [SP, #4] 
    /*0002860c*/ MOVT        R2, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc648] 
    /*00028610*/ STR         R3, [SP] 
    /*00028614*/ B           VI_DRV_CheckPipeStaticAttr_x28584
    /*00028618*/ ANDEQ       R1, R0, IP, LSL R9 
FUNC_END VI_DRV_CheckPipeStaticAttr


FUNC_BEGIN VI_DRV_SetPipeAttr
    /*0002861c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00028620*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00028624*/ ADD         R0, R3, R0, LSL #2 
    /*00028628*/ MOV         R2, #68                     @ 0x44 
    /*0002862c*/ PUSH        {R4, R5, R6, LR} 
    /*00028630*/ MOV         R6, R1 
    /*00028634*/ LDR         R5, [R0, #728]              @ 0x2d8 
    /*00028638*/ ADD         R4, R5, #34048              @ 0x8500 
    /*0002863c*/ ADD         R4, R4, #44                 @ 0x2c 
    /*00028640*/ MOV         R0, R4 
    /*00028644*/ BL          0x0000000000028644          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*00028648*/ CMP         R0, #0 
    /*0002864c*/ BEQ         VI_DRV_SetPipeAttr_x2866c
    /*00028650*/ ADD         R5, R5, #32768              @ 0x8000 
    /*00028654*/ MOV         R1, R6 
    /*00028658*/ MOV         R0, R4 
    /*0002865c*/ MOV         R2, #68                     @ 0x44 
    /*00028660*/ BL          0x0000000000028660          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00028664*/ MOV         R3, #1 
    /*00028668*/ STR         R3, [R5, #2040]             @ 0x7f8 
    VI_DRV_SetPipeAttr_x2866c:
    /*0002866c*/ MOV         R0, #0 
    /*00028670*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_SetPipeAttr


FUNC_BEGIN VI_DRV_GetPipeAttr
    /*00028674*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00028678*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002867c*/ ADD         R3, R3, R0, LSL #2 
    /*00028680*/ MOV         R0, R1 
    /*00028684*/ PUSH        {R4, LR} 
    /*00028688*/ MOV         R2, #68                     @ 0x44 
    /*0002868c*/ LDR         R1, [R3, #728]              @ 0x2d8 
    /*00028690*/ ADD         R1, R1, #34048              @ 0x8500 
    /*00028694*/ ADD         R1, R1, #44                 @ 0x2c 
    /*00028698*/ BL          0x0000000000028698          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002869c*/ MOV         R0, #0 
    /*000286a0*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetPipeAttr


FUNC_BEGIN VI_DRV_GetWorkingPipeAttr
    /*000286a4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000286a8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000286ac*/ ADD         R3, R3, R0, LSL #2 
    /*000286b0*/ MOV         R0, R1 
    /*000286b4*/ PUSH        {R4, LR} 
    /*000286b8*/ MOV         R2, #68                     @ 0x44 
    /*000286bc*/ LDR         R1, [R3, #728]              @ 0x2d8 
    /*000286c0*/ ADD         R1, R1, #67584              @ 0x10800 
    /*000286c4*/ ADD         R1, R1, #948                @ 0x3b4 
    /*000286c8*/ BL          0x00000000000286C8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000286cc*/ MOV         R0, #0 
    /*000286d0*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetWorkingPipeAttr


FUNC_BEGIN VI_DRV_SetPipeCrop
    /*000286d4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000286d8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000286dc*/ ADD         R0, R3, R0, LSL #2 
    /*000286e0*/ MOV         R2, #20 
    /*000286e4*/ PUSH        {R4, LR} 
    /*000286e8*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*000286ec*/ ADD         R0, R0, #300                @ 0x12c 
    /*000286f0*/ BL          0x00000000000286F0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000286f4*/ MOV         R0, #0 
    /*000286f8*/ POP         {R4, PC} 
FUNC_END VI_DRV_SetPipeCrop


FUNC_BEGIN VI_DRV_GetPipeCrop
    /*000286fc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00028700*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00028704*/ ADD         R3, R3, R0, LSL #2 
    /*00028708*/ MOV         R0, R1 
    /*0002870c*/ PUSH        {R4, LR} 
    /*00028710*/ MOV         R2, #20 
    /*00028714*/ LDR         R1, [R3, #728]              @ 0x2d8 
    /*00028718*/ ADD         R1, R1, #300                @ 0x12c 
    /*0002871c*/ BL          0x000000000002871C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00028720*/ MOV         R0, #0 
    /*00028724*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetPipeCrop


FUNC_BEGIN VI_DRV_SetCurFeCrop
    /*00028728*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0002872c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00028730*/ LDR         R6, [R1] 
    /*00028734*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00028738*/ ADD         R3, R3, R0, LSL #2 
    /*0002873c*/ SUB         SP, SP, #28 
    /*00028740*/ CMP         R6, #0 
    /*00028744*/ MOV         R4, R1 
    /*00028748*/ MOV         R7, R0 
    /*0002874c*/ LDR         R5, [R3, #728]              @ 0x2d8 
    /*00028750*/ BEQ         VI_DRV_SetCurFeCrop_x287b8
    VI_DRV_SetCurFeCrop_x28754:
    /*00028754*/ ADD         R5, R5, #280                @ 0x118 
    /*00028758*/ MOV         R2, #20 
    /*0002875c*/ MOV         R1, R4 
    /*00028760*/ MOV         R0, R5 
    /*00028764*/ BL          0x0000000000028764          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*00028768*/ CMP         R0, #0 
    /*0002876c*/ BEQ         VI_DRV_SetCurFeCrop_x287ac
    /*00028770*/ MOV         R0, R5 
    /*00028774*/ MOV         R2, #20 
    /*00028778*/ MOV         R1, R4 
    /*0002877c*/ BL          0x000000000002877C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00028780*/ LDMIB       R4, {R5, LR} 
    /*00028784*/ LDR         IP, [R4, #12] 
    /*00028788*/ MOV         R0, R7 
    /*0002878c*/ LDR         R2, [R4, #16] 
    /*00028790*/ ADD         R1, SP, #4 
    /*00028794*/ LDR         R3, [R4] 
    /*00028798*/ STMIB       SP, {R5, LR} 
    /*0002879c*/ STR         IP, [SP, #12] 
    /*000287a0*/ STR         R2, [SP, #16] 
    /*000287a4*/ STR         R3, [SP, #20] 
    /*000287a8*/ BL          0x00000000000287A8          @ VI_HAL_SetPipeCrop [R_ARM_CALL: .text+0x35914] 
    VI_DRV_SetCurFeCrop_x287ac:
    /*000287ac*/ MOV         R0, #0 
    /*000287b0*/ ADD         SP, SP, #28 
    /*000287b4*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_SetCurFeCrop_x287b8:
    /*000287b8*/ ADD         R1, SP, #4 
    /*000287bc*/ LDR         R0, [R5, #8] 
    /*000287c0*/ BL          0x00000000000287C0          @ VI_DRV_GetDevSize [R_ARM_CALL: .text+0x37b6c] 
    /*000287c4*/ LDR         R2, [SP, #8] 
    /*000287c8*/ LDR         R3, [SP, #4] 
    /*000287cc*/ STR         R6, [R4, #4] 
    /*000287d0*/ STR         R6, [R4, #8] 
    /*000287d4*/ STR         R2, [R4, #16] 
    /*000287d8*/ STR         R3, [R4, #12] 
    /*000287dc*/ B           VI_DRV_SetCurFeCrop_x28754
FUNC_END VI_DRV_SetCurFeCrop


FUNC_BEGIN VI_DRV_GetCurFeCrop
    /*000287e0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000287e4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000287e8*/ ADD         R3, R3, R0, LSL #2 
    /*000287ec*/ MOV         R0, R1 
    /*000287f0*/ PUSH        {R4, LR} 
    /*000287f4*/ MOV         R2, #20 
    /*000287f8*/ LDR         R1, [R3, #728]              @ 0x2d8 
    /*000287fc*/ ADD         R1, R1, #280                @ 0x118 
    /*00028800*/ BL          0x0000000000028800          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00028804*/ MOV         R0, #0 
    /*00028808*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetCurFeCrop


FUNC_BEGIN VI_DRV_FreeBeSttBuffer
    /*0002880c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00028810*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00028814*/ ADD         R0, R3, R0, LSL #2 
    /*00028818*/ PUSH        {R4, R5, R6, LR} 
    /*0002881c*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*00028820*/ ADD         R4, R3, #87040              @ 0x15400 
    /*00028824*/ ADD         R4, R4, #464                @ 0x1d0 
    /*00028828*/ LDRD        R0, [R4, #-8] 
    /*0002882c*/ ORRS        R2, R0, R1 
    /*00028830*/ BEQ         VI_DRV_FreeBeSttBuffer_x28854
    /*00028834*/ ADD         R5, R3, #86016              @ 0x15000 
    /*00028838*/ LDR         R2, [R5, #1504]             @ 0x5e0 
    /*0002883c*/ BL          0x000000000002883C          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*00028840*/ MOV         R0, #0 
    /*00028844*/ MOV         R1, #0 
    /*00028848*/ MOV         R3, #0 
    /*0002884c*/ STRD        R0, [R4, #-8] 
    /*00028850*/ STR         R3, [R5, #1504]             @ 0x5e0 
    VI_DRV_FreeBeSttBuffer_x28854:
    /*00028854*/ MOV         R0, #0 
    /*00028858*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_FreeBeSttBuffer


FUNC_BEGIN VI_DRV_MallocDRCBuffer
    /*0002885c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00028860*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00028864*/ ADD         R3, R3, R0, LSL #2 
    /*00028868*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002886c*/ SUB         SP, SP, #56                 @ 0x38 
    /*00028870*/ LDR         R7, [R3, #728]              @ 0x2d8 
    /*00028874*/ MOV         R4, #0 
    /*00028878*/ STR         R4, [SP, #44]               @ 0x2c 
    /*0002887c*/ ADD         R5, R7, #88064              @ 0x15800 
    /*00028880*/ STR         R4, [SP, #8] 
    /*00028884*/ ADD         R5, R5, #80                 @ 0x50 
    /*00028888*/ STR         R4, [SP, #40]               @ 0x28 
    /*0002888c*/ LDRD        R2, [R5, #-8] 
    /*00028890*/ STR         R4, [SP, #48]               @ 0x30 
    /*00028894*/ ORRS        R3, R2, R3 
    /*00028898*/ STR         R4, [SP, #52]               @ 0x34 
    /*0002889c*/ BNE         VI_DRV_MallocDRCBuffer_x28954
    /*000288a0*/ MOV         R6, R0 
    /*000288a4*/ MOV         R0, #2 
    /*000288a8*/ BL          0x00000000000288A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000288ac*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*000288b0*/ CMP         R3, #0 
    /*000288b4*/ BEQ         VI_DRV_MallocDRCBuffer_x28960
    /*000288b8*/ MOV         R0, #2 
    /*000288bc*/ STR         R6, [SP, #32] 
    /*000288c0*/ STR         R4, [SP, #36]               @ 0x24 
    /*000288c4*/ MOV         R8, #16 
    /*000288c8*/ STR         R8, [SP, #28] 
    /*000288cc*/ BL          0x00000000000288CC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000288d0*/ ADD         R1, SP, #8 
    /*000288d4*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*000288d8*/ ADD         R0, SP, #28 
    /*000288dc*/ BLX         R3 
    /*000288e0*/ CMP         R0, #0 
    /*000288e4*/ BNE         VI_DRV_MallocDRCBuffer_x2898c
    /*000288e8*/ STR         R6, [SP] 
    /*000288ec*/ MOV         R1, R8 
    /*000288f0*/ MOVW        R3, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc6f8] 
    /*000288f4*/ MOVW        R2, #0                      @ .LC134 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc6fc] 
    /*000288f8*/ MOVT        R3, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc6f8] 
    /*000288fc*/ MOVT        R2, #0                      @ .LC134 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc6fc] 
    /*00028900*/ ADD         R0, SP, #40                 @ 0x28 
    /*00028904*/ MOV         R6, #1376                   @ 0x560 
    /*00028908*/ BL          0x0000000000028908          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*0002890c*/ MOVT        R6, #1 
    /*00028910*/ LDR         R0, [SP, #8] 
    /*00028914*/ ADD         R1, SP, #40                 @ 0x28 
    /*00028918*/ ADD         R3, SP, #12 
    /*0002891c*/ STR         R6, [SP] 
    /*00028920*/ ADD         R2, SP, #16 
    /*00028924*/ BL          0x0000000000028924          @ CMPI_MmzMallocNocache [R_ARM_CALL: +0x0] 
    /*00028928*/ SUBS        R4, R0, #0 
    /*0002892c*/ BNE         VI_DRV_MallocDRCBuffer_x289b8
    /*00028930*/ MOV         R2, R6 
    /*00028934*/ MOV         R1, R4 
    /*00028938*/ LDR         R0, [SP, #12] 
    /*0002893c*/ ADD         R7, R7, #86016              @ 0x15000 
    /*00028940*/ BL          0x0000000000028940          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00028944*/ LDRD        R2, [SP, #16] 
    /*00028948*/ LDR         R1, [SP, #12] 
    /*0002894c*/ STRD        R2, [R5, #-8] 
    /*00028950*/ STR         R1, [R7, #2128]             @ 0x850 
    VI_DRV_MallocDRCBuffer_x28954:
    /*00028954*/ MOV         R0, R4 
    /*00028958*/ ADD         SP, SP, #56                 @ 0x38 
    /*0002895c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_MallocDRCBuffer_x28960:
    /*00028960*/ MOVW        R3, #2834                   @ 0xb12 
    /*00028964*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc698] 
    /*00028968*/ STR         R3, [SP] 
    /*0002896c*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc698] 
    /*00028970*/ LDR         R3, [PC, #108]              @ 0x00000000000289e4 
    /*00028974*/ MOV         R1, #16 
    /*00028978*/ MOV         R0, #3 
    /*0002897c*/ MOVW        R4, #32784                  @ 0x8010 
    /*00028980*/ BL          0x0000000000028980          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00028984*/ MOVT        R4, #40976                  @ 0xa010 
    /*00028988*/ B           VI_DRV_MallocDRCBuffer_x28954
    VI_DRV_MallocDRCBuffer_x2898c:
    /*0002898c*/ MOVW        R3, #2844                   @ 0xb1c 
    /*00028990*/ MOV         R1, R8 
    /*00028994*/ STR         R3, [SP] 
    /*00028998*/ MOVW        R2, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc6c8] 
    /*0002899c*/ LDR         R3, [PC, #64]               @ 0x00000000000289e4 
    /*000289a0*/ MOVT        R2, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc6c8] 
    /*000289a4*/ MOV         R0, #3 
    /*000289a8*/ MOVW        R4, #32784                  @ 0x8010 
    /*000289ac*/ BL          0x00000000000289AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000289b0*/ MOVT        R4, #40976                  @ 0xa010 
    /*000289b4*/ B           VI_DRV_MallocDRCBuffer_x28954
    VI_DRV_MallocDRCBuffer_x289b8:
    /*000289b8*/ MOVW        R3, #2852                   @ 0xb24 
    /*000289bc*/ MOV         R1, R8 
    /*000289c0*/ STR         R3, [SP] 
    /*000289c4*/ MOVW        R2, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc70c] 
    /*000289c8*/ LDR         R3, [PC, #20]               @ 0x00000000000289e4 
    /*000289cc*/ MOVT        R2, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc70c] 
    /*000289d0*/ MOV         R0, #3 
    /*000289d4*/ MOVW        R4, #32780                  @ 0x800c 
    /*000289d8*/ BL          0x00000000000289D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000289dc*/ MOVT        R4, #40976                  @ 0xa010 
    /*000289e0*/ B           VI_DRV_MallocDRCBuffer_x28954
    /*000289e4*/ ANDEQ       R1, R0, R8, LSR R9 
FUNC_END VI_DRV_MallocDRCBuffer


FUNC_BEGIN VI_DRV_FreeDRCBuffer
    /*000289e8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000289ec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000289f0*/ ADD         R0, R3, R0, LSL #2 
    /*000289f4*/ PUSH        {R4, R5, R6, LR} 
    /*000289f8*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*000289fc*/ ADD         R4, R3, #88064              @ 0x15800 
    /*00028a00*/ LDRD        R0, [R4, #72]               @ 0x48 
    /*00028a04*/ ORRS        R2, R0, R1 
    /*00028a08*/ BEQ         VI_DRV_FreeDRCBuffer_x28a30
    /*00028a0c*/ ADD         R5, R3, #86016              @ 0x15000 
    /*00028a10*/ ADD         R4, R4, #80                 @ 0x50 
    /*00028a14*/ LDR         R2, [R5, #2128]             @ 0x850 
    /*00028a18*/ BL          0x0000000000028A18          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*00028a1c*/ MOV         R0, #0 
    /*00028a20*/ MOV         R1, #0 
    /*00028a24*/ MOV         R3, #0 
    /*00028a28*/ STRD        R0, [R4, #-8] 
    /*00028a2c*/ STR         R3, [R5, #2128]             @ 0x850 
    VI_DRV_FreeDRCBuffer_x28a30:
    /*00028a30*/ MOV         R0, #0 
    /*00028a34*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_FreeDRCBuffer


FUNC_BEGIN VI_DRV_FreeLDCIBuffer
    /*00028a38*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00028a3c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00028a40*/ ADD         R0, R3, R0, LSL #2 
    /*00028a44*/ PUSH        {R4, R5, R6, LR} 
    /*00028a48*/ LDR         R4, [R0, #728]              @ 0x2d8 
    /*00028a4c*/ ADD         R4, R4, #86016              @ 0x15000 
    /*00028a50*/ LDR         R0, [R4, #2144]             @ 0x860 
    /*00028a54*/ CMP         R0, #0 
    /*00028a58*/ BEQ         VI_DRV_FreeLDCIBuffer_x28a70
    /*00028a5c*/ MOV         R5, #0 
    /*00028a60*/ MOV         R2, R5 
    /*00028a64*/ MOV         R1, R5 
    /*00028a68*/ BL          0x0000000000028A68          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*00028a6c*/ STR         R5, [R4, #2144]             @ 0x860 
    VI_DRV_FreeLDCIBuffer_x28a70:
    /*00028a70*/ MOV         R0, #0 
    /*00028a74*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_FreeLDCIBuffer


FUNC_BEGIN VI_DRV_FreeImageProcessBuffer
    /*00028a78*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00028a7c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00028a80*/ ADD         R3, R3, R0, LSL #2 
    /*00028a84*/ LDR         R2, [R3, #712]              @ 0x2c8 
    /*00028a88*/ CMP         R2, #1 
    /*00028a8c*/ BXHI        LR 
    /*00028a90*/ PUSH        {R4, R5, R6, LR} 
    /*00028a94*/ MOV         R4, R0 
    /*00028a98*/ LDR         R5, [R3, #728]              @ 0x2d8 
    /*00028a9c*/ ADD         R5, R5, #86016              @ 0x15000 
    /*00028aa0*/ LDR         R0, [R5, #2144]             @ 0x860 
    /*00028aa4*/ CMP         R0, #0 
    /*00028aa8*/ BNE         VI_DRV_FreeImageProcessBuffer_x28ac0
    VI_DRV_FreeImageProcessBuffer_x28aac:
    /*00028aac*/ MOV         R0, R4 
    /*00028ab0*/ BL          0x0000000000028AB0          @ VI_DRV_FreeDRCBuffer [R_ARM_CALL: .text+0x289e8] 
    /*00028ab4*/ MOV         R0, R4 
    /*00028ab8*/ POP         {R4, R5, R6, LR} 
    VI_DRV_FreeImageProcessBuffer_x28abc:
    /*00028abc*/ B           VI_DRV_FreeImageProcessBuffer_x28abc@ VI_DRV_FreeBeSttBuffer [R_ARM_JUMP24: .text+0x2880c] 
    VI_DRV_FreeImageProcessBuffer_x28ac0:
    /*00028ac0*/ MOV         R6, #0 
    /*00028ac4*/ MOV         R2, R6 
    /*00028ac8*/ MOV         R1, R6 
    /*00028acc*/ BL          0x0000000000028ACC          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*00028ad0*/ STR         R6, [R5, #2144]             @ 0x860 
    /*00028ad4*/ B           VI_DRV_FreeImageProcessBuffer_x28aac
FUNC_END VI_DRV_FreeImageProcessBuffer


FUNC_BEGIN VI_DRV_SetDefaultNRXV2ManualParam
    /*00028ad8*/ PUSH        {R4, LR} 
    /*00028adc*/ BL          0x0000000000028ADC          @ V500SetDefaultNRx [R_ARM_CALL: .text+0x3b45c] 
    /*00028ae0*/ MOV         R0, #0 
    /*00028ae4*/ POP         {R4, PC} 
FUNC_END VI_DRV_SetDefaultNRXV2ManualParam


FUNC_BEGIN VI_DRV_SetDefaultNRXV2AutoParam
    /*00028ae8*/ MOV         R2, R0 
    /*00028aec*/ MOV         R3, #0 
    /*00028af0*/ MOV         R0, R3 
    /*00028af4*/ STR         R3, [R2, #36]               @ 0x24 
    /*00028af8*/ BX          LR 
FUNC_END VI_DRV_SetDefaultNRXV2AutoParam


FUNC_BEGIN VI_DRV_SetDefaultNRXV2Param
    /*00028afc*/ PUSH        {R4, LR} 
    /*00028b00*/ MOV         R4, R0 
    /*00028b04*/ ADD         R0, R0, #4 
    /*00028b08*/ BL          0x0000000000028B08          @ V500SetDefaultNRx [R_ARM_CALL: .text+0x3b45c] 
    /*00028b0c*/ MOV         R3, #0 
    /*00028b10*/ MOV         R0, R3 
    /*00028b14*/ STR         R3, [R4, #36]               @ 0x24 
    /*00028b18*/ POP         {R4, PC} 
FUNC_END VI_DRV_SetDefaultNRXV2Param


FUNC_BEGIN VI_DRV_SetDefault3dnrParam
    /*00028b1c*/ PUSH        {R4, LR} 
    /*00028b20*/ MOV         R3, #2 
    /*00028b24*/ MOV         R4, R0 
    /*00028b28*/ STR         R3, [R0] 
    /*00028b2c*/ MOV         R3, #1 
    /*00028b30*/ STR         R3, [R0, #4]! 
    /*00028b34*/ ADD         R0, R0, #4 
    /*00028b38*/ BL          0x0000000000028B38          @ V500SetDefaultNRx [R_ARM_CALL: .text+0x3b45c] 
    /*00028b3c*/ MOV         R3, #0 
    /*00028b40*/ MOV         R0, R3 
    /*00028b44*/ STR         R3, [R4, #40]               @ 0x28 
    /*00028b48*/ POP         {R4, PC} 
FUNC_END VI_DRV_SetDefault3dnrParam


FUNC_BEGIN VI_DRV_SetDefaultNRXParam
    VI_DRV_SetDefaultNRXParam_x28b4c:
    /*00028b4c*/ B           VI_DRV_SetDefaultNRXParam_x28b4c@ VI_DRV_SetDefault3dnrParam [R_ARM_JUMP24: .text+0x28b1c] 
FUNC_END VI_DRV_SetDefaultNRXParam


FUNC_BEGIN VI_DRV_EnablePipeClock
    /*00028b50*/ CMP         R0, #3 
    /*00028b54*/ BXHI        LR 
    /*00028b58*/ PUSH        {R4, LR} 
    /*00028b5c*/ MOV         R1, #1 
    /*00028b60*/ MOV         R4, R0 
    /*00028b64*/ BL          0x0000000000028B64          @ VI_DRV_WchClockEnable [R_ARM_CALL: .text+0x2569c] 
    /*00028b68*/ MOV         R1, #1 
    /*00028b6c*/ MOV         R0, R4 
    /*00028b70*/ BL          0x0000000000028B70          @ VI_DRV_IspClockEnable [R_ARM_CALL: .text+0x256d8] 
    /*00028b74*/ MOV         R1, #0 
    /*00028b78*/ MOV         R0, R4 
    /*00028b7c*/ BL          0x0000000000028B7C          @ VI_DRV_IspCoreReset [R_ARM_CALL: .text+0x25750] 
    /*00028b80*/ MOV         R1, #0 
    /*00028b84*/ MOV         R0, R4 
    /*00028b88*/ BL          0x0000000000028B88          @ VI_DRV_IspCfgReset [R_ARM_CALL: .text+0x25714] 
    /*00028b8c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00028b90*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00028b94*/ ADD         R3, R3, R4, LSL #2 
    /*00028b98*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*00028b9c*/ SUB         R3, R3, #2 
    /*00028ba0*/ CMP         R3, #1 
    /*00028ba4*/ POPHI       {R4, PC} 
    /*00028ba8*/ MOV         R1, #1 
    /*00028bac*/ MOV         R0, #0 
    /*00028bb0*/ BL          0x0000000000028BB0          @ VI_DRV_ProcClkEnable [R_ARM_CALL: .text+0x2578c] 
    /*00028bb4*/ MOV         R1, #0 
    /*00028bb8*/ MOV         R0, R1 
    /*00028bbc*/ BL          0x0000000000028BBC          @ VI_DRV_ProcReset [R_ARM_CALL: .text+0x257c8] 
    /*00028bc0*/ MOV         R0, #0 
    /*00028bc4*/ POP         {R4, LR} 
    VI_DRV_EnablePipeClock_x28bc8:
    /*00028bc8*/ B           VI_DRV_EnablePipeClock_x28bc8@ VI_DRV_ProcAbolishReset [R_ARM_JUMP24: .text+0x27c90] 
FUNC_END VI_DRV_EnablePipeClock


FUNC_BEGIN VI_DRV_DisablePipeClock
    /*00028bcc*/ BX          LR 
FUNC_END VI_DRV_DisablePipeClock


FUNC_BEGIN VI_DRV_PipeDrvCtxInit
    /*00028bd0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00028bd4*/ MOV         R6, R0 
    /*00028bd8*/ SUB         SP, SP, #12 
    /*00028bdc*/ MOV         R0, #23296                  @ 0x5b00 
    /*00028be0*/ MOVT        R0, #1 
    /*00028be4*/ MOV         R9, R1 
    /*00028be8*/ MOV         R7, R2 
    /*00028bec*/ MOV         R8, R3 
    /*00028bf0*/ BL          0x0000000000028BF0          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00028bf4*/ SUBS        R4, R0, #0 
    /*00028bf8*/ BEQ         VI_DRV_PipeDrvCtxInit_x28cd4
    /*00028bfc*/ MOV         R1, #0 
    /*00028c00*/ MOV         R2, #23296                  @ 0x5b00 
    /*00028c04*/ MOVT        R2, #1 
    /*00028c08*/ ADD         R5, R4, #32768              @ 0x8000 
    /*00028c0c*/ BL          0x0000000000028C0C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00028c10*/ ADD         R0, R4, #34048              @ 0x8500 
    /*00028c14*/ MOV         R1, R9 
    /*00028c18*/ MOV         R2, #68                     @ 0x44 
    /*00028c1c*/ ADD         R0, R0, #44                 @ 0x2c 
    /*00028c20*/ BL          0x0000000000028C20          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00028c24*/ ADD         R0, R4, #67584              @ 0x10800 
    /*00028c28*/ MOV         R1, R9 
    /*00028c2c*/ MOV         R2, #68                     @ 0x44 
    /*00028c30*/ ADD         R0, R0, #948                @ 0x3b4 
    /*00028c34*/ MOV         R9, #1 
    /*00028c38*/ BL          0x0000000000028C38          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00028c3c*/ ADD         R0, R4, #34048              @ 0x8500 
    /*00028c40*/ MOV         R3, #2 
    /*00028c44*/ ADD         R0, R0, #180                @ 0xb4 
    /*00028c48*/ STR         R3, [R5, #1452]             @ 0x5ac 
    /*00028c4c*/ STR         R9, [R5, #2040]             @ 0x7f8 
    /*00028c50*/ STR         R9, [R5, #1456]             @ 0x5b0 
    /*00028c54*/ BL          0x0000000000028C54          @ V500SetDefaultNRx [R_ARM_CALL: .text+0x3b45c] 
    /*00028c58*/ MOV         R3, #0 
    /*00028c5c*/ MOV         R1, R7 
    /*00028c60*/ STR         R3, [R5, #1492]             @ 0x5d4 
    /*00028c64*/ STR         R9, [R5, #2056]             @ 0x808 
    /*00028c68*/ MOV         R0, R6 
    /*00028c6c*/ BL          0x0000000000028C6C          @ VI_DRV_GetMastPipeByDev [R_ARM_CALL: .text+0x37e38] 
    /*00028c70*/ MVN         LR, #0 
    /*00028c74*/ ADD         IP, R4, #86016              @ 0x15000 
    /*00028c78*/ ADD         R1, R4, #320                @ 0x140 
    /*00028c7c*/ MOV         R2, LR 
    /*00028c80*/ MOV         R3, R4 
    /*00028c84*/ STR         LR, [R4, #324]              @ 0x144 
    /*00028c88*/ STR         R0, [R4, #4] 
    /*00028c8c*/ STR         LR, [IP, #2628]             @ 0xa44 
    VI_DRV_PipeDrvCtxInit_x28c90:
    /*00028c90*/ STR         R2, [R3, #2900]             @ 0xb54 
    /*00028c94*/ ADD         R3, R3, #40                 @ 0x28 
    /*00028c98*/ CMP         R3, R1 
    /*00028c9c*/ BNE         VI_DRV_PipeDrvCtxInit_x28c90
    /*00028ca0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00028ca4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00028ca8*/ MOV         R2, #0 
    /*00028cac*/ ADD         R3, R3, R6, LSL #2 
    /*00028cb0*/ MOV         R0, R2 
    /*00028cb4*/ STR         R8, [R4, #320]              @ 0x140 
    /*00028cb8*/ STR         R4, [R3, #728]              @ 0x2d8 
    /*00028cbc*/ STR         R6, [R4] 
    /*00028cc0*/ STR         R7, [R4, #8] 
    /*00028cc4*/ STR         R2, [IP, #2804]             @ 0xaf4 
    /*00028cc8*/ STR         R2, [IP, #2808]             @ 0xaf8 
    VI_DRV_PipeDrvCtxInit_x28ccc:
    /*00028ccc*/ ADD         SP, SP, #12 
    /*00028cd0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_PipeDrvCtxInit_x28cd4:
    /*00028cd4*/ MOVW        R3, #3139                   @ 0xc43 
    /*00028cd8*/ STR         R6, [SP, #4] 
    /*00028cdc*/ STR         R3, [SP] 
    /*00028ce0*/ MOVW        R2, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc744] 
    /*00028ce4*/ LDR         R3, [PC, #24]               @ 0x0000000000028d04 
    /*00028ce8*/ MOVT        R2, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc744] 
    /*00028cec*/ MOV         R1, #16 
    /*00028cf0*/ MOV         R0, #3 
    /*00028cf4*/ BL          0x0000000000028CF4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00028cf8*/ MOVW        R0, #32780                  @ 0x800c 
    /*00028cfc*/ MOVT        R0, #40976                  @ 0xa010 
    /*00028d00*/ B           VI_DRV_PipeDrvCtxInit_x28ccc
    /*00028d04*/ ANDEQ       R1, R0, R0, ASR R9 
FUNC_END VI_DRV_PipeDrvCtxInit


FUNC_BEGIN VI_DRV_PipeDrvCtxExit
    /*00028d08*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00028d0c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00028d10*/ PUSH        {R4, LR} 
    /*00028d14*/ ADD         R4, R3, R0, LSL #2 
    /*00028d18*/ LDR         R0, [R4, #728]              @ 0x2d8 
    /*00028d1c*/ BL          0x0000000000028D1C          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00028d20*/ MOV         R3, #0 
    /*00028d24*/ STR         R3, [R4, #728]              @ 0x2d8 
    /*00028d28*/ POP         {R4, PC} 
FUNC_END VI_DRV_PipeDrvCtxExit


FUNC_BEGIN VI_DRV_FreeModelBuf
    /*00028d2c*/ LDRD        R2, [R0, #80]               @ 0x50 
    /*00028d30*/ ORRS        R1, R2, R3 
    /*00028d34*/ BXEQ        LR 
    /*00028d38*/ PUSH        {R4, LR} 
    /*00028d3c*/ MOV         R4, R0 
    /*00028d40*/ MOV         R1, R3 
    /*00028d44*/ MOV         R0, R2 
    /*00028d48*/ LDR         R2, [R4, #88]               @ 0x58 
    /*00028d4c*/ BL          0x0000000000028D4C          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*00028d50*/ MOV         R0, R4 
    /*00028d54*/ MOV         R2, #96                     @ 0x60 
    /*00028d58*/ MOV         R1, #0 
    /*00028d5c*/ POP         {R4, LR} 
    VI_DRV_FreeModelBuf_x28d60:
    /*00028d60*/ B           VI_DRV_FreeModelBuf_x28d60  @ osal_memset [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_FreeModelBuf


FUNC_BEGIN VI_DRV_NeedCallGDCFunction
    /*00028d64*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00028d68*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00028d6c*/ ADD         R3, R3, R0, LSL #2 
    /*00028d70*/ MOV         IP, #640                    @ 0x280 
    /*00028d74*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00028d78*/ MOV         LR, #504                    @ 0x1f8 
    /*00028d7c*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*00028d80*/ MOV         R4, #664                    @ 0x298 
    /*00028d84*/ MOV         R5, #576                    @ 0x240 
    /*00028d88*/ MOV         R2, #184                    @ 0xb8 
    /*00028d8c*/ SUB         SP, SP, #36                 @ 0x24 
    /*00028d90*/ MLA         LR, LR, R1, R3 
    /*00028d94*/ MLA         R4, R4, R1, R3 
    /*00028d98*/ MLA         R5, R5, R1, R3 
    /*00028d9c*/ MLA         IP, IP, R1, R3 
    /*00028da0*/ LDR         LR, [LR, #392]              @ 0x188 
    /*00028da4*/ MLA         R2, R2, R1, R3 
    /*00028da8*/ LDR         R4, [R4, #1656]             @ 0x678 
    /*00028dac*/ LDR         R5, [R5, #2320]             @ 0x910 
    /*00028db0*/ ORR         R3, LR, R4 
    /*00028db4*/ ADD         R2, R2, #88064              @ 0x15800 
    /*00028db8*/ LDR         IP, [IP, #1016]             @ 0x3f8 
    /*00028dbc*/ ORR         R3, R3, R5 
    /*00028dc0*/ LDR         R2, [R2, #572]              @ 0x23c 
    /*00028dc4*/ ADDS        IP, IP, #0 
    /*00028dc8*/ ORR         R3, R3, R2 
    /*00028dcc*/ MOVNE       IP, #1 
    /*00028dd0*/ ORRS        R3, R3, IP 
    /*00028dd4*/ BEQ         VI_DRV_NeedCallGDCFunction_x28e20
    /*00028dd8*/ MOV         R3, R1 
    /*00028ddc*/ MOV         R6, R0 
    /*00028de0*/ STR         R2, [SP, #28] 
    /*00028de4*/ MOVW        R7, #3326                   @ 0xcfe 
    /*00028de8*/ STR         R3, [SP, #8] 
    /*00028dec*/ MOVW        R2, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc784] 
    /*00028df0*/ LDR         R3, [PC, #52]               @ 0x0000000000028e2c 
    /*00028df4*/ MOVT        R2, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc784] 
    /*00028df8*/ STR         R5, [SP, #24] 
    /*00028dfc*/ MOV         R1, #16 
    /*00028e00*/ STR         R4, [SP, #20] 
    /*00028e04*/ MOV         R0, #6 
    /*00028e08*/ STR         IP, [SP, #16] 
    /*00028e0c*/ STR         LR, [SP, #12] 
    /*00028e10*/ STR         R6, [SP, #4] 
    /*00028e14*/ STR         R7, [SP] 
    /*00028e18*/ BL          0x0000000000028E18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00028e1c*/ MOV         R3, #1 
    VI_DRV_NeedCallGDCFunction_x28e20:
    /*00028e20*/ MOV         R0, R3 
    /*00028e24*/ ADD         SP, SP, #36                 @ 0x24 
    /*00028e28*/ POP         {R4, R5, R6, R7, PC} 
    /*00028e2c*/ ANDEQ       R1, R0, R8, ROR #18 
FUNC_END VI_DRV_NeedCallGDCFunction


FUNC_BEGIN VI_DRV_CheckChnAttr
    /*00028e30*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00028e34*/ SUB         SP, SP, #28 
    /*00028e38*/ MOV         R5, R1 
    /*00028e3c*/ MOV         R4, R2 
    /*00028e40*/ MOV         R6, R0 
    /*00028e44*/ BL          0x0000000000028E44          @ VI_DRV_GetChnMaxWidth [R_ARM_CALL: .text+0x25f04] 
    /*00028e48*/ MOV         R1, R5 
    /*00028e4c*/ MOV         R7, R0 
    /*00028e50*/ MOV         R0, R6 
    /*00028e54*/ BL          0x0000000000028E54          @ VI_DRV_GetChnMaxHeight [R_ARM_CALL: .text+0x25fcc] 
    /*00028e58*/ LDR         R3, [R4] 
    /*00028e5c*/ CMP         R5, #0 
    /*00028e60*/ MOVEQ       R1, #120                    @ 0x78 
    /*00028e64*/ MOVNE       R1, #32 
    /*00028e68*/ CMP         R7, R3 
    /*00028e6c*/ CMPCS       R3, R1 
    /*00028e70*/ STRCC       R3, [SP, #20] 
    /*00028e74*/ STRCC       R7, [SP, #16] 
    /*00028e78*/ MOVWCC      R3, #3354                   @ 0xd1a 
    /*00028e7c*/ BCC         VI_DRV_CheckChnAttr_x29050
    /*00028e80*/ LDR         R2, [R4, #4] 
    /*00028e84*/ CMP         R0, R2 
    /*00028e88*/ CMPCS       R2, R1 
    /*00028e8c*/ BCC         VI_DRV_CheckChnAttr_x29044
    /*00028e90*/ MOVW        R1, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00028e94*/ MOVT        R1, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00028e98*/ LDR         R1, [R1] 
    /*00028e9c*/ LDRB        R1, [R1, #40]               @ 0x28 
    /*00028ea0*/ SUB         R0, R1, #1 
    /*00028ea4*/ CMP         R0, #1 
    /*00028ea8*/ BLS         VI_DRV_CheckChnAttr_x28fe4
    /*00028eac*/ SUB         R0, R1, #5 
    /*00028eb0*/ CMP         R0, #1 
    /*00028eb4*/ BLS         VI_DRV_CheckChnAttr_x28f18
    /*00028eb8*/ CMP         R1, #12 
    /*00028ebc*/ BLS         VI_DRV_CheckChnAttr_x29030
    VI_DRV_CheckChnAttr_x28ec0:
    /*00028ec0*/ MOVW        R3, #3388                   @ 0xd3c 
    /*00028ec4*/ MOV         R1, #16 
    /*00028ec8*/ STR         R3, [SP] 
    /*00028ecc*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xafa4] 
    /*00028ed0*/ LDR         R3, [PC, #948]              @ 0x000000000002928c 
    /*00028ed4*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xafa4] 
    /*00028ed8*/ MOV         R0, #3 
    /*00028edc*/ BL          0x0000000000028EDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00028ee0*/ LDR         R3, [R4] 
    /*00028ee4*/ LDR         R2, [R4, #4] 
    /*00028ee8*/ MOV         R1, #36864                  @ 0x9000 
    /*00028eec*/ MOVT        R1, #45                     @ 0x2d 
    /*00028ef0*/ MUL         R0, R2, R3 
    /*00028ef4*/ CMP         R0, R1 
    /*00028ef8*/ BLS         VI_DRV_CheckChnAttr_x28f2c
    /*00028efc*/ MOVW        R3, #3391                   @ 0xd3f 
    /*00028f00*/ MOVW        R2, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc85c] 
    /*00028f04*/ STR         R5, [SP, #8] 
    /*00028f08*/ MOVT        R2, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc85c] 
    /*00028f0c*/ STR         R6, [SP, #4] 
    /*00028f10*/ STR         R3, [SP] 
    /*00028f14*/ B           VI_DRV_CheckChnAttr_x29010
    VI_DRV_CheckChnAttr_x28f18:
    /*00028f18*/ MUL         R0, R2, R3 
    /*00028f1c*/ MOV         R1, #48128                  @ 0xbc00 
    /*00028f20*/ MOVT        R1, #79                     @ 0x4f 
    /*00028f24*/ CMP         R0, R1 
    /*00028f28*/ BHI         VI_DRV_CheckChnAttr_x29218
    VI_DRV_CheckChnAttr_x28f2c:
    /*00028f2c*/ TST         R3, #3 
    /*00028f30*/ BNE         VI_DRV_CheckChnAttr_x29148
    /*00028f34*/ TST         R2, #3 
    /*00028f38*/ BNE         VI_DRV_CheckChnAttr_x2916c
    /*00028f3c*/ LDR         R3, [R4, #8] 
    /*00028f40*/ SUB         R2, R3, #25 
    /*00028f44*/ CMP         R3, #39                     @ 0x27 
    /*00028f48*/ CMPNE       R2, #1 
    /*00028f4c*/ BHI         VI_DRV_CheckChnAttr_x29190
    /*00028f50*/ LDR         R3, [R4, #12] 
    /*00028f54*/ CMP         R3, #0 
    /*00028f58*/ BNE         VI_DRV_CheckChnAttr_x291ac
    /*00028f5c*/ LDR         R3, [R4, #16] 
    /*00028f60*/ CMP         R3, #0 
    /*00028f64*/ BNE         VI_DRV_CheckChnAttr_x291c8
    /*00028f68*/ LDR         R3, [R4, #24] 
    /*00028f6c*/ CMP         R3, #1 
    /*00028f70*/ BHI         VI_DRV_CheckChnAttr_x29084
    /*00028f74*/ LDR         R3, [R4, #28] 
    /*00028f78*/ CMP         R3, #1 
    /*00028f7c*/ BHI         VI_DRV_CheckChnAttr_x290bc
    /*00028f80*/ LDR         R3, [R4, #20] 
    /*00028f84*/ CMP         R3, #1 
    /*00028f88*/ BHI         VI_DRV_CheckChnAttr_x290f4
    /*00028f8c*/ LDR         R3, [R4, #32] 
    /*00028f90*/ CMP         R3, #8 
    /*00028f94*/ BHI         VI_DRV_CheckChnAttr_x29110
    /*00028f98*/ ADD         R0, R4, #36                 @ 0x24 
    /*00028f9c*/ BL          0x0000000000028F9C          @ VI_DRV_CheckFrameRate [R_ARM_CALL: .text+0x27cc4] 
    /*00028fa0*/ CMP         R0, #0 
    /*00028fa4*/ BNE         VI_DRV_CheckChnAttr_x29020
    /*00028fa8*/ LDR         R3, [R4, #8] 
    /*00028fac*/ SUB         R2, R3, #17 
    /*00028fb0*/ CMP         R2, #4 
    /*00028fb4*/ BHI         VI_DRV_CheckChnAttr_x28fdc
    /*00028fb8*/ LDR         R2, [R4, #24] 
    /*00028fbc*/ CMP         R2, #1 
    /*00028fc0*/ BEQ         VI_DRV_CheckChnAttr_x29234
    /*00028fc4*/ LDR         R2, [R4, #28] 
    /*00028fc8*/ CMP         R2, #1 
    /*00028fcc*/ BEQ         VI_DRV_CheckChnAttr_x29270
    /*00028fd0*/ LDR         R2, [R4, #20] 
    /*00028fd4*/ CMP         R2, #0 
    /*00028fd8*/ BNE         VI_DRV_CheckChnAttr_x291e4
    VI_DRV_CheckChnAttr_x28fdc:
    /*00028fdc*/ ADD         SP, SP, #28 
    /*00028fe0*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_CheckChnAttr_x28fe4:
    /*00028fe4*/ MUL         R0, R2, R3 
    /*00028fe8*/ MOV         R1, #36864                  @ 0x9000 
    /*00028fec*/ MOVT        R1, #45                     @ 0x2d 
    /*00028ff0*/ CMP         R0, R1 
    /*00028ff4*/ BLS         VI_DRV_CheckChnAttr_x28f2c
    /*00028ff8*/ MOVW        R2, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc85c] 
    /*00028ffc*/ MOVT        R2, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc85c] 
    /*00029000*/ MOVW        R3, #3369                   @ 0xd29 
    /*00029004*/ STR         R5, [SP, #8] 
    /*00029008*/ STR         R6, [SP, #4] 
    /*0002900c*/ STR         R3, [SP] 
    VI_DRV_CheckChnAttr_x29010:
    /*00029010*/ LDR         R3, [PC, #628]              @ 0x000000000002928c 
    /*00029014*/ MOV         R1, #16 
    /*00029018*/ MOV         R0, #3 
    /*0002901c*/ BL          0x000000000002901C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_CheckChnAttr_x29020:
    /*00029020*/ MOVW        R0, #32771                  @ 0x8003 
    /*00029024*/ MOVT        R0, #40976                  @ 0xa010 
    VI_DRV_CheckChnAttr_x29028:
    /*00029028*/ ADD         SP, SP, #28 
    /*0002902c*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_CheckChnAttr_x29030:
    /*00029030*/ MOVW        R0, #4609                   @ 0x1201 
    /*00029034*/ MVN         R1, R0, LSR R1 
    /*00029038*/ TST         R1, #1 
    /*0002903c*/ BEQ         VI_DRV_CheckChnAttr_x28f2c
    /*00029040*/ B           VI_DRV_CheckChnAttr_x28ec0
    VI_DRV_CheckChnAttr_x29044:
    /*00029044*/ MOVW        R3, #3361                   @ 0xd21 
    /*00029048*/ STR         R2, [SP, #20] 
    /*0002904c*/ STR         R0, [SP, #16] 
    VI_DRV_CheckChnAttr_x29050:
    /*00029050*/ STR         R1, [SP, #12] 
    /*00029054*/ MOVW        R2, #0                      @ .LC138 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc804] 
    /*00029058*/ STR         R3, [SP] 
    /*0002905c*/ MOVT        R2, #0                      @ .LC138 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc804] 
    /*00029060*/ STR         R5, [SP, #8] 
    /*00029064*/ MOV         R1, #16 
    /*00029068*/ STR         R6, [SP, #4] 
    /*0002906c*/ MOV         R0, #3 
    /*00029070*/ LDR         R3, [PC, #532]              @ 0x000000000002928c 
    /*00029074*/ BL          0x0000000000029074          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029078*/ MOVW        R0, #32771                  @ 0x8003 
    /*0002907c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00029080*/ B           VI_DRV_CheckChnAttr_x29028
    VI_DRV_CheckChnAttr_x29084:
    /*00029084*/ STR         R3, [SP, #12] 
    /*00029088*/ MOVW        R2, #0                      @ .LC146 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcac4] 
    /*0002908c*/ MOV         R3, #3440                   @ 0xd70 
    /*00029090*/ STR         R5, [SP, #8] 
    /*00029094*/ STR         R3, [SP] 
    /*00029098*/ MOVT        R2, #0                      @ .LC146 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcac4] 
    /*0002909c*/ STR         R6, [SP, #4] 
    /*000290a0*/ MOV         R1, #16 
    /*000290a4*/ LDR         R3, [PC, #480]              @ 0x000000000002928c 
    /*000290a8*/ MOV         R0, #3 
    /*000290ac*/ BL          0x00000000000290AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000290b0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000290b4*/ MOVT        R0, #40976                  @ 0xa010 
    /*000290b8*/ B           VI_DRV_CheckChnAttr_x28fdc
    VI_DRV_CheckChnAttr_x290bc:
    /*000290bc*/ MOVW        R2, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcb24] 
    /*000290c0*/ MOVT        R2, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcb24] 
    /*000290c4*/ STR         R3, [SP, #12] 
    /*000290c8*/ MOVW        R3, #3447                   @ 0xd77 
    /*000290cc*/ STR         R5, [SP, #8] 
    /*000290d0*/ STR         R6, [SP, #4] 
    VI_DRV_CheckChnAttr_x290d4:
    /*000290d4*/ STR         R3, [SP] 
    /*000290d8*/ MOV         R1, #16 
    /*000290dc*/ LDR         R3, [PC, #424]              @ 0x000000000002928c 
    /*000290e0*/ MOV         R0, #3 
    /*000290e4*/ BL          0x00000000000290E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000290e8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000290ec*/ MOVT        R0, #40976                  @ 0xa010 
    /*000290f0*/ B           VI_DRV_CheckChnAttr_x29028
    VI_DRV_CheckChnAttr_x290f4:
    /*000290f4*/ STR         R3, [SP, #12] 
    /*000290f8*/ MOVW        R2, #0                      @ .LC148 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcb80] 
    /*000290fc*/ MOVW        R3, #3455                   @ 0xd7f 
    /*00029100*/ STR         R5, [SP, #8] 
    /*00029104*/ STR         R6, [SP, #4] 
    /*00029108*/ MOVT        R2, #0                      @ .LC148 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcb80] 
    /*0002910c*/ B           VI_DRV_CheckChnAttr_x290d4
    VI_DRV_CheckChnAttr_x29110:
    /*00029110*/ MOVW        R2, #0                      @ .LC149 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcbfc] 
    /*00029114*/ MOVT        R2, #0                      @ .LC149 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcbfc] 
    /*00029118*/ STR         R3, [SP, #16] 
    /*0002911c*/ MOVW        R3, #3464                   @ 0xd88 
    /*00029120*/ MOV         R1, #8 
    /*00029124*/ STR         R5, [SP, #8] 
    /*00029128*/ STR         R6, [SP, #4] 
    /*0002912c*/ STR         R1, [SP, #12] 
    VI_DRV_CheckChnAttr_x29130:
    /*00029130*/ STR         R3, [SP] 
    /*00029134*/ MOV         R1, #16 
    /*00029138*/ LDR         R3, [PC, #332]              @ 0x000000000002928c 
    /*0002913c*/ MOV         R0, #3 
    /*00029140*/ BL          0x0000000000029140          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029144*/ B           VI_DRV_CheckChnAttr_x29020
    VI_DRV_CheckChnAttr_x29148:
    /*00029148*/ STR         R3, [SP, #16] 
    /*0002914c*/ MOV         R1, #4 
    /*00029150*/ MOVW        R2, #0                      @ .LC141 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc904] 
    /*00029154*/ STR         R5, [SP, #8] 
    /*00029158*/ MOVW        R3, #3399                   @ 0xd47 
    /*0002915c*/ STR         R6, [SP, #4] 
    /*00029160*/ STR         R1, [SP, #12] 
    /*00029164*/ MOVT        R2, #0                      @ .LC141 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc904] 
    /*00029168*/ B           VI_DRV_CheckChnAttr_x29130
    VI_DRV_CheckChnAttr_x2916c:
    /*0002916c*/ STR         R2, [SP, #16] 
    /*00029170*/ MOV         R1, #4 
    /*00029174*/ MOVW        R2, #0                      @ .LC142 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc958] 
    /*00029178*/ STR         R5, [SP, #8] 
    /*0002917c*/ MOVW        R3, #3406                   @ 0xd4e 
    /*00029180*/ STR         R6, [SP, #4] 
    /*00029184*/ STR         R1, [SP, #12] 
    /*00029188*/ MOVT        R2, #0                      @ .LC142 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc958] 
    /*0002918c*/ B           VI_DRV_CheckChnAttr_x29130
    VI_DRV_CheckChnAttr_x29190:
    /*00029190*/ STR         R3, [SP, #12] 
    /*00029194*/ MOVW        R2, #0                      @ .LC143 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc9ac] 
    /*00029198*/ MOVW        R3, #3416                   @ 0xd58 
    /*0002919c*/ STR         R5, [SP, #8] 
    /*000291a0*/ STR         R6, [SP, #4] 
    /*000291a4*/ MOVT        R2, #0                      @ .LC143 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc9ac] 
    /*000291a8*/ B           VI_DRV_CheckChnAttr_x290d4
    VI_DRV_CheckChnAttr_x291ac:
    /*000291ac*/ STR         R3, [SP, #12] 
    /*000291b0*/ MOVW        R2, #0                      @ .LC144 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xca14] 
    /*000291b4*/ MOV         R3, #3424                   @ 0xd60 
    /*000291b8*/ STR         R5, [SP, #8] 
    /*000291bc*/ STR         R6, [SP, #4] 
    /*000291c0*/ MOVT        R2, #0                      @ .LC144 [R_ARM_MOVT_ABS: .rodata.str1.4+0xca14] 
    /*000291c4*/ B           VI_DRV_CheckChnAttr_x290d4
    VI_DRV_CheckChnAttr_x291c8:
    /*000291c8*/ STR         R3, [SP, #12] 
    /*000291cc*/ MOVW        R2, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xca6c] 
    /*000291d0*/ MOVW        R3, #3432                   @ 0xd68 
    /*000291d4*/ STR         R5, [SP, #8] 
    /*000291d8*/ STR         R6, [SP, #4] 
    /*000291dc*/ MOVT        R2, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0xca6c] 
    /*000291e0*/ B           VI_DRV_CheckChnAttr_x290d4
    VI_DRV_CheckChnAttr_x291e4:
    /*000291e4*/ STR         R2, [SP, #12] 
    /*000291e8*/ MOVW        R2, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcd28] 
    /*000291ec*/ MOVT        R2, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcd28] 
    /*000291f0*/ STR         R3, [SP, #16] 
    /*000291f4*/ MOVW        R3, #3499                   @ 0xdab 
    /*000291f8*/ STR         R5, [SP, #8] 
    VI_DRV_CheckChnAttr_x291fc:
    /*000291fc*/ STR         R3, [SP] 
    /*00029200*/ MOV         R1, #16 
    /*00029204*/ STR         R6, [SP, #4] 
    /*00029208*/ MOV         R0, #3 
    /*0002920c*/ LDR         R3, [PC, #120]              @ 0x000000000002928c 
    /*00029210*/ BL          0x0000000000029210          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029214*/ B           VI_DRV_CheckChnAttr_x29020
    VI_DRV_CheckChnAttr_x29218:
    /*00029218*/ MOVW        R3, #3377                   @ 0xd31 
    /*0002921c*/ MOVW        R2, #0                      @ .LC140 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc8b0] 
    /*00029220*/ STR         R5, [SP, #8] 
    /*00029224*/ MOVT        R2, #0                      @ .LC140 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc8b0] 
    /*00029228*/ STR         R6, [SP, #4] 
    /*0002922c*/ STR         R3, [SP] 
    /*00029230*/ B           VI_DRV_CheckChnAttr_x29010
    VI_DRV_CheckChnAttr_x29234:
    /*00029234*/ STR         R3, [SP, #16] 
    /*00029238*/ MOV         R1, #16 
    /*0002923c*/ MOVW        R3, #3485                   @ 0xd9d 
    /*00029240*/ STR         R2, [SP, #12] 
    /*00029244*/ STR         R3, [SP] 
    /*00029248*/ MOVW        R2, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcc4c] 
    /*0002924c*/ STR         R5, [SP, #8] 
    /*00029250*/ MOVT        R2, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcc4c] 
    /*00029254*/ STR         R6, [SP, #4] 
    /*00029258*/ MOV         R0, #3 
    /*0002925c*/ LDR         R3, [PC, #40]               @ 0x000000000002928c 
    /*00029260*/ BL          0x0000000000029260          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029264*/ MOVW        R0, #32771                  @ 0x8003 
    /*00029268*/ MOVT        R0, #40976                  @ 0xa010 
    /*0002926c*/ B           VI_DRV_CheckChnAttr_x28fdc
    VI_DRV_CheckChnAttr_x29270:
    /*00029270*/ STR         R3, [SP, #16] 
    /*00029274*/ MOVW        R3, #3492                   @ 0xda4 
    /*00029278*/ STR         R2, [SP, #12] 
    /*0002927c*/ MOVW        R2, #0                      @ .LC151 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xccbc] 
    /*00029280*/ STR         R5, [SP, #8] 
    /*00029284*/ MOVT        R2, #0                      @ .LC151 [R_ARM_MOVT_ABS: .rodata.str1.4+0xccbc] 
    /*00029288*/ B           VI_DRV_CheckChnAttr_x291fc
    /*0002928c*/ ANDEQ       R1, R0, R4, LSL #19 
FUNC_END VI_DRV_CheckChnAttr


FUNC_BEGIN VI_DRV_CheckChnStaticAttr
    /*00029290*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029294*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029298*/ ADD         R3, R3, R0, LSL #2 
    /*0002929c*/ LDR         IP, [R3, #728]              @ 0x2d8 
    /*000292a0*/ ADD         R3, IP, R1, LSL #2 
    /*000292a4*/ LDR         R3, [R3, #20] 
    /*000292a8*/ CMP         R3, #0 
    /*000292ac*/ BEQ         VI_DRV_CheckChnStaticAttr_x292f4
    /*000292b0*/ MOV         R3, #44                     @ 0x2c 
    /*000292b4*/ MLA         R3, R3, R1, IP 
    /*000292b8*/ PUSH        {R4, LR} 
    /*000292bc*/ MOVW        R4, #34172                  @ 0x857c 
    /*000292c0*/ LDR         LR, [R2, #12] 
    /*000292c4*/ SUB         SP, SP, #24 
    /*000292c8*/ LDR         IP, [R3, R4] 
    /*000292cc*/ CMP         IP, LR 
    /*000292d0*/ BNE         VI_DRV_CheckChnStaticAttr_x292fc
    /*000292d4*/ MOVW        IP, #34168                  @ 0x8578 
    /*000292d8*/ LDR         R2, [R2, #8] 
    /*000292dc*/ LDR         R3, [R3, IP] 
    /*000292e0*/ CMP         R3, R2 
    /*000292e4*/ MOVEQ       R0, #0 
    /*000292e8*/ BNE         VI_DRV_CheckChnStaticAttr_x29338
    VI_DRV_CheckChnStaticAttr_x292ec:
    /*000292ec*/ ADD         SP, SP, #24 
    /*000292f0*/ POP         {R4, PC} 
    VI_DRV_CheckChnStaticAttr_x292f4:
    /*000292f4*/ MOV         R0, R3 
    /*000292f8*/ BX          LR 
    VI_DRV_CheckChnStaticAttr_x292fc:
    /*000292fc*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcda4] 
    /*00029300*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcda4] 
    /*00029304*/ STR         R1, [SP, #8] 
    /*00029308*/ MOV         R1, #16 
    /*0002930c*/ MOVW        R3, #3525                   @ 0xdc5 
    /*00029310*/ STR         LR, [SP, #16] 
    /*00029314*/ STR         IP, [SP, #12] 
    /*00029318*/ STR         R0, [SP, #4] 
    /*0002931c*/ STR         R3, [SP] 
    VI_DRV_CheckChnStaticAttr_x29320:
    /*00029320*/ MOV         R0, #3 
    /*00029324*/ LDR         R3, [PC, #52]               @ 0x0000000000029360 
    /*00029328*/ BL          0x0000000000029328          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002932c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00029330*/ MOVT        R0, #40976                  @ 0xa010 
    /*00029334*/ B           VI_DRV_CheckChnStaticAttr_x292ec
    VI_DRV_CheckChnStaticAttr_x29338:
    /*00029338*/ STR         R2, [SP, #16] 
    /*0002933c*/ MOVW        IP, #3532                   @ 0xdcc 
    /*00029340*/ MOVW        R2, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xce04] 
    /*00029344*/ STR         R1, [SP, #8] 
    /*00029348*/ STR         R3, [SP, #12] 
    /*0002934c*/ MOVT        R2, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0xce04] 
    /*00029350*/ STR         R0, [SP, #4] 
    /*00029354*/ MOV         R1, #16 
    /*00029358*/ STR         IP, [SP] 
    /*0002935c*/ B           VI_DRV_CheckChnStaticAttr_x29320
    /*00029360*/ MULEQ       R0, R8, R9 
FUNC_END VI_DRV_CheckChnStaticAttr


FUNC_BEGIN VI_DRV_CheckChnStaticAttrForGdc
    /*00029364*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029368*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002936c*/ ADD         R3, R3, R0, LSL #2 
    /*00029370*/ LDR         IP, [R3, #728]              @ 0x2d8 
    /*00029374*/ ADD         R3, IP, R1, LSL #2 
    /*00029378*/ LDR         R3, [R3, #20] 
    /*0002937c*/ CMP         R3, #0 
    /*00029380*/ BEQ         VI_DRV_CheckChnStaticAttrForGdc_x293f0
    /*00029384*/ PUSH        {R4, R5, LR} 
    /*00029388*/ MOV         R3, #44                     @ 0x2c 
    /*0002938c*/ MOV         LR, R1 
    /*00029390*/ MOVW        R1, #34160                  @ 0x8570 
    /*00029394*/ MLA         R3, R3, LR, IP 
    /*00029398*/ MOV         R4, R0 
    /*0002939c*/ LDR         R0, [R2] 
    /*000293a0*/ MOVW        IP, #34164                  @ 0x8574 
    /*000293a4*/ SUB         SP, SP, #36                 @ 0x24 
    /*000293a8*/ LDR         R5, [R2, #4] 
    /*000293ac*/ LDR         R1, [R3, R1] 
    /*000293b0*/ LDR         IP, [R3, IP] 
    /*000293b4*/ CMP         R1, R0 
    /*000293b8*/ BNE         VI_DRV_CheckChnStaticAttrForGdc_x293f8
    /*000293bc*/ CMP         IP, R5 
    /*000293c0*/ BNE         VI_DRV_CheckChnStaticAttrForGdc_x293f8
    /*000293c4*/ MOVW        R0, #34172                  @ 0x857c 
    /*000293c8*/ LDR         R1, [R2, #12] 
    /*000293cc*/ LDR         R3, [R3, R0] 
    /*000293d0*/ CMP         R3, R1 
    /*000293d4*/ BNE         VI_DRV_CheckChnStaticAttrForGdc_x29470
    /*000293d8*/ LDR         R3, [R2, #16] 
    /*000293dc*/ CMP         R3, #0 
    /*000293e0*/ MOVEQ       R0, R3 
    /*000293e4*/ BNE         VI_DRV_CheckChnStaticAttrForGdc_x29438
    VI_DRV_CheckChnStaticAttrForGdc_x293e8:
    /*000293e8*/ ADD         SP, SP, #36                 @ 0x24 
    /*000293ec*/ POP         {R4, R5, PC} 
    VI_DRV_CheckChnStaticAttrForGdc_x293f0:
    /*000293f0*/ MOV         R0, R3 
    /*000293f4*/ BX          LR 
    VI_DRV_CheckChnStaticAttrForGdc_x293f8:
    /*000293f8*/ MOVW        R3, #3559                   @ 0xde7 
    /*000293fc*/ STR         R0, [SP, #20] 
    /*00029400*/ STR         R1, [SP, #12] 
    /*00029404*/ MOVW        R2, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xce64] 
    /*00029408*/ STM         SP, {R3, R4} 
    /*0002940c*/ MOVT        R2, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0xce64] 
    /*00029410*/ STR         R5, [SP, #24] 
    /*00029414*/ MOV         R1, #16 
    /*00029418*/ STR         IP, [SP, #16] 
    /*0002941c*/ MOV         R0, #3 
    /*00029420*/ STR         LR, [SP, #8] 
    /*00029424*/ LDR         R3, [PC, #128]              @ 0x00000000000294ac 
    /*00029428*/ BL          0x0000000000029428          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002942c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00029430*/ MOVT        R0, #40976                  @ 0xa010 
    /*00029434*/ B           VI_DRV_CheckChnStaticAttrForGdc_x293e8
    VI_DRV_CheckChnStaticAttrForGdc_x29438:
    /*00029438*/ STR         R3, [SP, #12] 
    /*0002943c*/ MOVW        R2, #0                      @ .LC156 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcec4] 
    /*00029440*/ MOVW        R3, #3572                   @ 0xdf4 
    /*00029444*/ STR         LR, [SP, #8] 
    /*00029448*/ STR         R3, [SP] 
    /*0002944c*/ MOVT        R2, #0                      @ .LC156 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcec4] 
    /*00029450*/ STR         R4, [SP, #4] 
    /*00029454*/ MOV         R1, #16 
    /*00029458*/ LDR         R3, [PC, #76]               @ 0x00000000000294ac 
    /*0002945c*/ MOV         R0, #3 
    /*00029460*/ BL          0x0000000000029460          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029464*/ MOVW        R0, #32771                  @ 0x8003 
    /*00029468*/ MOVT        R0, #40976                  @ 0xa010 
    /*0002946c*/ B           VI_DRV_CheckChnStaticAttrForGdc_x293e8
    VI_DRV_CheckChnStaticAttrForGdc_x29470:
    /*00029470*/ STR         R1, [SP, #16] 
    /*00029474*/ MOVW        R0, #3566                   @ 0xdee 
    /*00029478*/ STR         R3, [SP, #12] 
    /*0002947c*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcda4] 
    /*00029480*/ STR         R0, [SP] 
    /*00029484*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcda4] 
    /*00029488*/ STR         LR, [SP, #8] 
    /*0002948c*/ MOV         R1, #16 
    /*00029490*/ STR         R4, [SP, #4] 
    /*00029494*/ MOV         R0, #3 
    /*00029498*/ LDR         R3, [PC, #12]               @ 0x00000000000294ac 
    /*0002949c*/ BL          0x000000000002949C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000294a0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000294a4*/ MOVT        R0, #40976                  @ 0xa010 
    /*000294a8*/ B           VI_DRV_CheckChnStaticAttrForGdc_x293e8
    /*000294ac*/ @           <UNDEFINED> instruction: 0x000019b4 
FUNC_END VI_DRV_CheckChnStaticAttrForGdc


FUNC_BEGIN VI_DRV_CheckChnStaticAttrForFisheye
    /*000294b0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000294b4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000294b8*/ ADD         R3, R3, R0, LSL #2 
    /*000294bc*/ LDR         IP, [R3, #728]              @ 0x2d8 
    /*000294c0*/ ADD         R3, IP, R1, LSL #2 
    /*000294c4*/ LDR         R3, [R3, #20] 
    /*000294c8*/ CMP         R3, #0 
    /*000294cc*/ BEQ         VI_DRV_CheckChnStaticAttrForFisheye_x29548
    /*000294d0*/ PUSH        {R4, R5, LR} 
    /*000294d4*/ MOV         R3, #44                     @ 0x2c 
    /*000294d8*/ MOV         LR, R1 
    /*000294dc*/ MOVW        R1, #34160                  @ 0x8570 
    /*000294e0*/ MLA         R3, R3, LR, IP 
    /*000294e4*/ MOV         R4, R0 
    /*000294e8*/ LDR         R0, [R2] 
    /*000294ec*/ MOVW        IP, #34164                  @ 0x8574 
    /*000294f0*/ SUB         SP, SP, #36                 @ 0x24 
    /*000294f4*/ LDR         R5, [R2, #4] 
    /*000294f8*/ LDR         R1, [R3, R1] 
    /*000294fc*/ LDR         IP, [R3, IP] 
    /*00029500*/ CMP         R1, R0 
    /*00029504*/ BNE         VI_DRV_CheckChnStaticAttrForFisheye_x29550
    /*00029508*/ CMP         IP, R5 
    /*0002950c*/ BNE         VI_DRV_CheckChnStaticAttrForFisheye_x29550
    /*00029510*/ MOVW        R0, #34172                  @ 0x857c 
    /*00029514*/ LDR         R1, [R2, #12] 
    /*00029518*/ LDR         R3, [R3, R0] 
    /*0002951c*/ CMP         R3, R1 
    /*00029520*/ BNE         VI_DRV_CheckChnStaticAttrForFisheye_x295c4
    /*00029524*/ LDR         R3, [R2, #20] 
    /*00029528*/ CMP         R3, #0 
    /*0002952c*/ BNE         VI_DRV_CheckChnStaticAttrForFisheye_x29590
    /*00029530*/ LDR         R3, [R2, #16] 
    /*00029534*/ CMP         R3, #0 
    /*00029538*/ MOVEQ       R0, R3 
    /*0002953c*/ BNE         VI_DRV_CheckChnStaticAttrForFisheye_x29600
    VI_DRV_CheckChnStaticAttrForFisheye_x29540:
    /*00029540*/ ADD         SP, SP, #36                 @ 0x24 
    /*00029544*/ POP         {R4, R5, PC} 
    VI_DRV_CheckChnStaticAttrForFisheye_x29548:
    /*00029548*/ MOV         R0, R3 
    /*0002954c*/ BX          LR 
    VI_DRV_CheckChnStaticAttrForFisheye_x29550:
    /*00029550*/ MOVW        R3, #3599                   @ 0xe0f 
    /*00029554*/ STR         R0, [SP, #20] 
    /*00029558*/ STR         R1, [SP, #12] 
    /*0002955c*/ MOVW        R2, #0                      @ .LC157 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcf0c] 
    /*00029560*/ STM         SP, {R3, R4} 
    /*00029564*/ MOVT        R2, #0                      @ .LC157 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcf0c] 
    /*00029568*/ STR         R5, [SP, #24] 
    /*0002956c*/ MOV         R1, #16 
    /*00029570*/ STR         IP, [SP, #16] 
    /*00029574*/ MOV         R0, #3 
    /*00029578*/ STR         LR, [SP, #8] 
    /*0002957c*/ LDR         R3, [PC, #180]              @ 0x0000000000029638 
    /*00029580*/ BL          0x0000000000029580          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029584*/ MOVW        R0, #32771                  @ 0x8003 
    /*00029588*/ MOVT        R0, #40976                  @ 0xa010 
    /*0002958c*/ B           VI_DRV_CheckChnStaticAttrForFisheye_x29540
    VI_DRV_CheckChnStaticAttrForFisheye_x29590:
    /*00029590*/ MOVW        R3, #3612                   @ 0xe1c 
    /*00029594*/ STR         LR, [SP, #8] 
    /*00029598*/ STR         R3, [SP] 
    /*0002959c*/ MOVW        R2, #0                      @ .LC159 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcfe8] 
    /*000295a0*/ STR         R4, [SP, #4] 
    /*000295a4*/ MOVT        R2, #0                      @ .LC159 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcfe8] 
    /*000295a8*/ LDR         R3, [PC, #136]              @ 0x0000000000029638 
    /*000295ac*/ MOV         R1, #16 
    /*000295b0*/ MOV         R0, #3 
    /*000295b4*/ BL          0x00000000000295B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000295b8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000295bc*/ MOVT        R0, #40976                  @ 0xa010 
    /*000295c0*/ B           VI_DRV_CheckChnStaticAttrForFisheye_x29540
    VI_DRV_CheckChnStaticAttrForFisheye_x295c4:
    /*000295c4*/ STR         R1, [SP, #16] 
    /*000295c8*/ MOVW        R0, #3606                   @ 0xe16 
    /*000295cc*/ STR         R3, [SP, #12] 
    /*000295d0*/ MOVW        R2, #0                      @ .LC158 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcf78] 
    /*000295d4*/ STR         R0, [SP] 
    /*000295d8*/ MOVT        R2, #0                      @ .LC158 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcf78] 
    /*000295dc*/ STR         LR, [SP, #8] 
    /*000295e0*/ MOV         R1, #16 
    /*000295e4*/ STR         R4, [SP, #4] 
    /*000295e8*/ MOV         R0, #3 
    /*000295ec*/ LDR         R3, [PC, #68]               @ 0x0000000000029638 
    /*000295f0*/ BL          0x00000000000295F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000295f4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000295f8*/ MOVT        R0, #40976                  @ 0xa010 
    /*000295fc*/ B           VI_DRV_CheckChnStaticAttrForFisheye_x29540
    VI_DRV_CheckChnStaticAttrForFisheye_x29600:
    /*00029600*/ STR         R3, [SP, #12] 
    /*00029604*/ MOVW        R2, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd034] 
    /*00029608*/ MOVW        R3, #3618                   @ 0xe22 
    /*0002960c*/ STR         LR, [SP, #8] 
    /*00029610*/ STR         R3, [SP] 
    /*00029614*/ MOVT        R2, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd034] 
    /*00029618*/ STR         R4, [SP, #4] 
    /*0002961c*/ MOV         R1, #16 
    /*00029620*/ LDR         R3, [PC, #16]               @ 0x0000000000029638 
    /*00029624*/ MOV         R0, #3 
    /*00029628*/ BL          0x0000000000029628          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002962c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00029630*/ MOVT        R0, #40976                  @ 0xa010 
    /*00029634*/ B           VI_DRV_CheckChnStaticAttrForFisheye_x29540
    /*00029638*/ LDRDEQ      R1, [R0], -R4 
FUNC_END VI_DRV_CheckChnStaticAttrForFisheye


FUNC_BEGIN VI_DRV_CheckChnStaticAttrForDis
    /*0002963c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029640*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029644*/ ADD         R3, R3, R0, LSL #2 
    /*00029648*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002964c*/ ADD         IP, R3, R1, LSL #2 
    /*00029650*/ LDR         IP, [IP, #20] 
    /*00029654*/ CMP         IP, #0 
    /*00029658*/ BEQ         VI_DRV_CheckChnStaticAttrForDis_x29734
    /*0002965c*/ PUSH        {R4, R5, LR} 
    /*00029660*/ MOV         R4, R1 
    /*00029664*/ MOV         R5, R0 
    /*00029668*/ MOV         R0, #44                     @ 0x2c 
    /*0002966c*/ MLA         R3, R0, R4, R3 
    /*00029670*/ MOVW        R1, #34160                  @ 0x8570 
    /*00029674*/ LDR         R0, [R2] 
    /*00029678*/ MOVW        IP, #34164                  @ 0x8574 
    /*0002967c*/ SUB         SP, SP, #36                 @ 0x24 
    /*00029680*/ LDR         LR, [R2, #4] 
    /*00029684*/ LDR         R1, [R3, R1] 
    /*00029688*/ LDR         IP, [R3, IP] 
    /*0002968c*/ CMP         R1, R0 
    /*00029690*/ BNE         VI_DRV_CheckChnStaticAttrForDis_x2973c
    /*00029694*/ CMP         IP, LR 
    /*00029698*/ BNE         VI_DRV_CheckChnStaticAttrForDis_x2973c
    /*0002969c*/ MOVW        R1, #34168                  @ 0x8578 
    /*000296a0*/ LDR         R0, [R2, #8] 
    /*000296a4*/ LDR         R1, [R3, R1] 
    /*000296a8*/ CMP         R1, R0 
    /*000296ac*/ BNE         VI_DRV_CheckChnStaticAttrForDis_x29800
    /*000296b0*/ MOVW        R1, #34172                  @ 0x857c 
    /*000296b4*/ LDR         R0, [R2, #12] 
    /*000296b8*/ LDR         R1, [R3, R1] 
    /*000296bc*/ CMP         R1, R0 
    /*000296c0*/ BNE         VI_DRV_CheckChnStaticAttrForDis_x297c0
    /*000296c4*/ MOVW        R1, #34176                  @ 0x8580 
    /*000296c8*/ LDR         R0, [R2, #16] 
    /*000296cc*/ LDR         R1, [R3, R1] 
    /*000296d0*/ CMP         R1, R0 
    /*000296d4*/ BNE         VI_DRV_CheckChnStaticAttrForDis_x2981c
    /*000296d8*/ MOVW        R1, #34184                  @ 0x8588 
    /*000296dc*/ LDR         R0, [R2, #24] 
    /*000296e0*/ LDR         R1, [R3, R1] 
    /*000296e4*/ CMP         R1, R0 
    /*000296e8*/ BNE         VI_DRV_CheckChnStaticAttrForDis_x29838
    /*000296ec*/ MOVW        R1, #34188                  @ 0x858c 
    /*000296f0*/ LDR         R0, [R2, #28] 
    /*000296f4*/ LDR         R1, [R3, R1] 
    /*000296f8*/ CMP         R1, R0 
    /*000296fc*/ BNE         VI_DRV_CheckChnStaticAttrForDis_x29854
    /*00029700*/ MOVW        R1, #34196                  @ 0x8594 
    /*00029704*/ LDR         R0, [R2, #36]               @ 0x24 
    /*00029708*/ LDR         R1, [R3, R1] 
    /*0002970c*/ MOVW        IP, #34200                  @ 0x8598 
    /*00029710*/ LDR         R2, [R2, #40]               @ 0x28 
    /*00029714*/ CMP         R1, R0 
    /*00029718*/ LDR         R3, [R3, IP] 
    /*0002971c*/ BNE         VI_DRV_CheckChnStaticAttrForDis_x2977c
    /*00029720*/ CMP         R3, R2 
    /*00029724*/ MOVEQ       R0, #0 
    /*00029728*/ BNE         VI_DRV_CheckChnStaticAttrForDis_x2977c
    VI_DRV_CheckChnStaticAttrForDis_x2972c:
    /*0002972c*/ ADD         SP, SP, #36                 @ 0x24 
    /*00029730*/ POP         {R4, R5, PC} 
    VI_DRV_CheckChnStaticAttrForDis_x29734:
    /*00029734*/ MOV         R0, IP 
    /*00029738*/ BX          LR 
    VI_DRV_CheckChnStaticAttrForDis_x2973c:
    /*0002973c*/ MOVW        R3, #3646                   @ 0xe3e 
    /*00029740*/ STR         R0, [SP, #20] 
    /*00029744*/ STR         R1, [SP, #12] 
    /*00029748*/ MOVW        R2, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xce64] 
    /*0002974c*/ STM         SP, {R3, R5} 
    /*00029750*/ MOVT        R2, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0xce64] 
    /*00029754*/ STR         LR, [SP, #24] 
    /*00029758*/ MOV         R1, #16 
    /*0002975c*/ STR         IP, [SP, #16] 
    /*00029760*/ MOV         R0, #3 
    /*00029764*/ STR         R4, [SP, #8] 
    /*00029768*/ LDR         R3, [PC, #256]              @ 0x0000000000029870 
    /*0002976c*/ BL          0x000000000002976C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029770*/ MOVW        R0, #32771                  @ 0x8003 
    /*00029774*/ MOVT        R0, #40976                  @ 0xa010 
    /*00029778*/ B           VI_DRV_CheckChnStaticAttrForDis_x2972c
    VI_DRV_CheckChnStaticAttrForDis_x2977c:
    /*0002977c*/ STR         R2, [SP, #24] 
    /*00029780*/ MOVW        IP, #3691                   @ 0xe6b 
    /*00029784*/ STR         R0, [SP, #20] 
    /*00029788*/ MOVW        R2, #0                      @ .LC164 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd190] 
    /*0002978c*/ STR         R3, [SP, #16] 
    /*00029790*/ MOVT        R2, #0                      @ .LC164 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd190] 
    /*00029794*/ STR         R1, [SP, #12] 
    /*00029798*/ MOV         R0, #3 
    /*0002979c*/ MOV         R1, #16 
    /*000297a0*/ STR         R4, [SP, #8] 
    /*000297a4*/ STR         R5, [SP, #4] 
    /*000297a8*/ STR         IP, [SP] 
    /*000297ac*/ LDR         R3, [PC, #188]              @ 0x0000000000029870 
    /*000297b0*/ BL          0x00000000000297B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000297b4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000297b8*/ MOVT        R0, #40976                  @ 0xa010 
    /*000297bc*/ B           VI_DRV_CheckChnStaticAttrForDis_x2972c
    VI_DRV_CheckChnStaticAttrForDis_x297c0:
    /*000297c0*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcda4] 
    /*000297c4*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcda4] 
    /*000297c8*/ MOVW        R3, #3660                   @ 0xe4c 
    /*000297cc*/ STR         R0, [SP, #16] 
    /*000297d0*/ STR         R1, [SP, #12] 
    /*000297d4*/ STR         R4, [SP, #8] 
    VI_DRV_CheckChnStaticAttrForDis_x297d8:
    /*000297d8*/ STR         R3, [SP] 
    /*000297dc*/ MOV         R1, #16 
    /*000297e0*/ STR         R5, [SP, #4] 
    /*000297e4*/ MOV         R0, #3 
    /*000297e8*/ LDR         R3, [PC, #128]              @ 0x0000000000029870 
    /*000297ec*/ BL          0x00000000000297EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000297f0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000297f4*/ MOVT        R0, #40976                  @ 0xa010 
    /*000297f8*/ ADD         SP, SP, #36                 @ 0x24 
    /*000297fc*/ POP         {R4, R5, PC} 
    VI_DRV_CheckChnStaticAttrForDis_x29800:
    /*00029800*/ MOVW        R2, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xce04] 
    /*00029804*/ STR         R0, [SP, #16] 
    /*00029808*/ MOVW        R3, #3653                   @ 0xe45 
    /*0002980c*/ STR         R1, [SP, #12] 
    /*00029810*/ STR         R4, [SP, #8] 
    /*00029814*/ MOVT        R2, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0xce04] 
    /*00029818*/ B           VI_DRV_CheckChnStaticAttrForDis_x297d8
    VI_DRV_CheckChnStaticAttrForDis_x2981c:
    /*0002981c*/ MOVW        R2, #0                      @ .LC161 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd080] 
    /*00029820*/ STR         R0, [SP, #16] 
    /*00029824*/ MOVW        R3, #3667                   @ 0xe53 
    /*00029828*/ STR         R1, [SP, #12] 
    /*0002982c*/ STR         R4, [SP, #8] 
    /*00029830*/ MOVT        R2, #0                      @ .LC161 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd080] 
    /*00029834*/ B           VI_DRV_CheckChnStaticAttrForDis_x297d8
    VI_DRV_CheckChnStaticAttrForDis_x29838:
    /*00029838*/ MOVW        R2, #0                      @ .LC162 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd0e0] 
    /*0002983c*/ STR         R0, [SP, #16] 
    /*00029840*/ MOVW        R3, #3674                   @ 0xe5a 
    /*00029844*/ STR         R1, [SP, #12] 
    /*00029848*/ STR         R4, [SP, #8] 
    /*0002984c*/ MOVT        R2, #0                      @ .LC162 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd0e0] 
    /*00029850*/ B           VI_DRV_CheckChnStaticAttrForDis_x297d8
    VI_DRV_CheckChnStaticAttrForDis_x29854:
    /*00029854*/ MOVW        R2, #0                      @ .LC163 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd138] 
    /*00029858*/ STR         R0, [SP, #16] 
    /*0002985c*/ MOVW        R3, #3681                   @ 0xe61 
    /*00029860*/ STR         R1, [SP, #12] 
    /*00029864*/ STR         R4, [SP, #8] 
    /*00029868*/ MOVT        R2, #0                      @ .LC163 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd138] 
    /*0002986c*/ B           VI_DRV_CheckChnStaticAttrForDis_x297d8
    /*00029870*/ STRDEQ      R1, [R0], -R8 
FUNC_END VI_DRV_CheckChnStaticAttrForDis


FUNC_BEGIN VI_DRV_SetChnAttr
    /*00029874*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029878*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002987c*/ ADD         R0, R3, R0, LSL #2 
    /*00029880*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00029884*/ MOV         R4, R1 
    /*00029888*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002988c*/ MOV         R5, #44                     @ 0x2c 
    /*00029890*/ MOV         R8, R2 
    /*00029894*/ MOV         R7, #1 
    /*00029898*/ ADD         R6, R3, R4, LSL #2 
    /*0002989c*/ MOV         R2, R5 
    /*000298a0*/ MLA         R4, R5, R4, R3 
    /*000298a4*/ MOV         R1, R8 
    /*000298a8*/ STR         R7, [R6, #20] 
    /*000298ac*/ ADD         R4, R4, #34048              @ 0x8500 
    /*000298b0*/ ADD         R4, R4, #112                @ 0x70 
    /*000298b4*/ MOV         R0, R4 
    /*000298b8*/ BL          0x00000000000298B8          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*000298bc*/ CMP         R0, #0 
    /*000298c0*/ BEQ         VI_DRV_SetChnAttr_x298dc
    /*000298c4*/ ADD         R6, R6, #32768              @ 0x8000 
    /*000298c8*/ MOV         R2, R5 
    /*000298cc*/ MOV         R1, R8 
    /*000298d0*/ MOV         R0, R4 
    /*000298d4*/ BL          0x00000000000298D4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000298d8*/ STR         R7, [R6, #2044]             @ 0x7fc 
    VI_DRV_SetChnAttr_x298dc:
    /*000298dc*/ MOV         R0, #0 
    /*000298e0*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_DRV_SetChnAttr


FUNC_BEGIN VI_DRV_GetChnAttr
    /*000298e4*/ PUSH        {R4, LR} 
    /*000298e8*/ MOVW        IP, #34160                  @ 0x8570 
    /*000298ec*/ MOV         LR, #44                     @ 0x2c 
    /*000298f0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000298f4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000298f8*/ MLA         R1, LR, R1, IP 
    /*000298fc*/ ADD         R3, R3, R0, LSL #2 
    /*00029900*/ MOV         R0, R2 
    /*00029904*/ MOV         R2, LR 
    /*00029908*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002990c*/ ADD         R1, R3, R1 
    /*00029910*/ BL          0x0000000000029910          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00029914*/ MOV         R0, #0 
    /*00029918*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetChnAttr


FUNC_BEGIN VI_DRV_GetWorkingChnAttr
    /*0002991c*/ MOV         IP, #44                     @ 0x2c 
    /*00029920*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029924*/ MUL         R1, IP, R1 
    /*00029928*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002992c*/ ADD         R3, R3, R0, LSL #2 
    /*00029930*/ MOV         R0, R2 
    /*00029934*/ PUSH        {R4, LR} 
    /*00029938*/ ADD         R1, R1, #67584              @ 0x10800 
    /*0002993c*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*00029940*/ ADD         R1, R1, #1016               @ 0x3f8 
    /*00029944*/ MOV         R2, IP 
    /*00029948*/ ADD         R1, R3, R1 
    /*0002994c*/ BL          0x000000000002994C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00029950*/ MOV         R0, #0 
    /*00029954*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetWorkingChnAttr


FUNC_BEGIN VI_DRV_GetWorkingChnCompressMode
    /*00029958*/ MOV         R3, #44                     @ 0x2c 
    /*0002995c*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029960*/ MUL         R1, R3, R1 
    /*00029964*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029968*/ ADD         IP, IP, R0, LSL #2 
    /*0002996c*/ MOV         R0, R2 
    /*00029970*/ PUSH        {R4, LR} 
    /*00029974*/ ADD         R1, R1, #68608              @ 0x10c00 
    /*00029978*/ LDR         R3, [IP, #728]              @ 0x2d8 
    /*0002997c*/ ADD         R1, R1, #12 
    /*00029980*/ MOV         R2, #4 
    /*00029984*/ ADD         R1, R3, R1 
    /*00029988*/ BL          0x0000000000029988          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002998c*/ MOV         R0, #0 
    /*00029990*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetWorkingChnCompressMode


FUNC_BEGIN VI_DRV_CheckExtChnAttr
    /*00029994*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00029998*/ SUB         SP, SP, #20 
    /*0002999c*/ MOV         R5, R1 
    /*000299a0*/ MOV         R4, R2 
    /*000299a4*/ MOV         R6, R0 
    /*000299a8*/ BL          0x00000000000299A8          @ VI_DRV_GetChnMaxWidth [R_ARM_CALL: .text+0x25f04] 
    /*000299ac*/ MOV         R1, R5 
    /*000299b0*/ MOV         R7, R0 
    /*000299b4*/ MOV         R0, R6 
    /*000299b8*/ BL          0x00000000000299B8          @ VI_DRV_GetChnMaxHeight [R_ARM_CALL: .text+0x25fcc] 
    /*000299bc*/ CMP         R5, #0 
    /*000299c0*/ LDR         R3, [R4] 
    /*000299c4*/ MOVNE       R1, #32 
    /*000299c8*/ MOVEQ       R1, #120                    @ 0x78 
    /*000299cc*/ CMP         R3, #0 
    /*000299d0*/ BNE         VI_DRV_CheckExtChnAttr_x29b14
    /*000299d4*/ LDR         R3, [R4, #4] 
    /*000299d8*/ CMP         R3, #0 
    /*000299dc*/ BNE         VI_DRV_CheckExtChnAttr_x29b38
    /*000299e0*/ LDR         R3, [R4, #8] 
    /*000299e4*/ CMP         R7, R3 
    /*000299e8*/ CMPCS       R3, R1 
    /*000299ec*/ BCC         VI_DRV_CheckExtChnAttr_x29a58
    /*000299f0*/ LDR         R2, [R4, #12] 
    /*000299f4*/ CMP         R0, R2 
    /*000299f8*/ CMPCS       R2, R1 
    /*000299fc*/ BCC         VI_DRV_CheckExtChnAttr_x29a8c
    /*00029a00*/ TST         R3, #3 
    /*00029a04*/ BNE         VI_DRV_CheckExtChnAttr_x29b60
    /*00029a08*/ TST         R2, #3 
    /*00029a0c*/ BNE         VI_DRV_CheckExtChnAttr_x29b8c
    /*00029a10*/ LDR         R3, [R4, #16] 
    /*00029a14*/ SUB         R2, R3, #25 
    /*00029a18*/ CMP         R3, #39                     @ 0x27 
    /*00029a1c*/ CMPNE       R2, #1 
    /*00029a20*/ BHI         VI_DRV_CheckExtChnAttr_x29bb8
    /*00029a24*/ LDR         R3, [R4, #20] 
    /*00029a28*/ CMP         R3, #0 
    /*00029a2c*/ BNE         VI_DRV_CheckExtChnAttr_x29be0
    /*00029a30*/ LDR         R3, [R4, #24] 
    /*00029a34*/ CMP         R3, #1 
    /*00029a38*/ BHI         VI_DRV_CheckExtChnAttr_x29ab8
    /*00029a3c*/ LDR         R3, [R4, #28] 
    /*00029a40*/ CMP         R3, #8 
    /*00029a44*/ BHI         VI_DRV_CheckExtChnAttr_x29ae8
    /*00029a48*/ ADD         R0, R4, #32 
    /*00029a4c*/ ADD         SP, SP, #20 
    /*00029a50*/ POP         {R4, R5, R6, R7, LR} 
    VI_DRV_CheckExtChnAttr_x29a54:
    /*00029a54*/ B           VI_DRV_CheckExtChnAttr_x29a54@ VI_DRV_CheckFrameRate [R_ARM_JUMP24: .text+0x27cc4] 
    VI_DRV_CheckExtChnAttr_x29a58:
    /*00029a58*/ MOVW        R3, #3782                   @ 0xec6 
    /*00029a5c*/ STR         R1, [SP, #4] 
    /*00029a60*/ MOVW        R2, #0                      @ .LC167 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd27c] 
    /*00029a64*/ STR         R3, [SP] 
    /*00029a68*/ STR         R7, [SP, #8] 
    /*00029a6c*/ MOVT        R2, #0                      @ .LC167 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd27c] 
    /*00029a70*/ LDR         R3, [PC, #400]              @ 0x0000000000029c08 
    /*00029a74*/ MOV         R1, #16 
    /*00029a78*/ MOV         R0, #3 
    /*00029a7c*/ BL          0x0000000000029A7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_CheckExtChnAttr_x29a80:
    /*00029a80*/ MVN         R0, #0 
    /*00029a84*/ ADD         SP, SP, #20 
    /*00029a88*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_CheckExtChnAttr_x29a8c:
    /*00029a8c*/ STR         R0, [SP, #8] 
    /*00029a90*/ MOVW        R3, #3788                   @ 0xecc 
    /*00029a94*/ STR         R1, [SP, #4] 
    /*00029a98*/ MOVW        R2, #0                      @ .LC168 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd2b8] 
    /*00029a9c*/ STR         R3, [SP] 
    /*00029aa0*/ MOVT        R2, #0                      @ .LC168 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd2b8] 
    /*00029aa4*/ LDR         R3, [PC, #348]              @ 0x0000000000029c08 
    /*00029aa8*/ MOV         R1, #16 
    /*00029aac*/ MOV         R0, #3 
    /*00029ab0*/ BL          0x0000000000029AB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029ab4*/ B           VI_DRV_CheckExtChnAttr_x29a80
    VI_DRV_CheckExtChnAttr_x29ab8:
    /*00029ab8*/ STR         R3, [SP, #12] 
    /*00029abc*/ MOVW        R2, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd424] 
    /*00029ac0*/ MOVW        R3, #3825                   @ 0xef1 
    /*00029ac4*/ STR         R5, [SP, #8] 
    /*00029ac8*/ STR         R3, [SP] 
    /*00029acc*/ MOVT        R2, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd424] 
    /*00029ad0*/ STR         R6, [SP, #4] 
    /*00029ad4*/ MOV         R1, #16 
    /*00029ad8*/ LDR         R3, [PC, #296]              @ 0x0000000000029c08 
    /*00029adc*/ MOV         R0, #3 
    /*00029ae0*/ BL          0x0000000000029AE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029ae4*/ B           VI_DRV_CheckExtChnAttr_x29a80
    VI_DRV_CheckExtChnAttr_x29ae8:
    /*00029ae8*/ STR         R3, [SP, #8] 
    /*00029aec*/ MOVW        R2, #3833                   @ 0xef9 
    /*00029af0*/ MOV         R3, #8 
    /*00029af4*/ MOV         R1, #16 
    /*00029af8*/ STM         SP, {R2, R3} 
    /*00029afc*/ MOV         R0, #3 
    /*00029b00*/ MOVW        R2, #0                      @ .LC174 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd49c] 
    /*00029b04*/ LDR         R3, [PC, #252]              @ 0x0000000000029c08 
    /*00029b08*/ MOVT        R2, #0                      @ .LC174 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd49c] 
    /*00029b0c*/ BL          0x0000000000029B0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029b10*/ B           VI_DRV_CheckExtChnAttr_x29a80
    VI_DRV_CheckExtChnAttr_x29b14:
    /*00029b14*/ MOVW        R3, #3768                   @ 0xeb8 
    /*00029b18*/ MOVW        R2, #0                      @ .LC165 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd1f8] 
    /*00029b1c*/ STR         R3, [SP] 
    /*00029b20*/ MOVT        R2, #0                      @ .LC165 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd1f8] 
    /*00029b24*/ LDR         R3, [PC, #220]              @ 0x0000000000029c08 
    /*00029b28*/ MOV         R1, #16 
    /*00029b2c*/ MOV         R0, #3 
    /*00029b30*/ BL          0x0000000000029B30          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029b34*/ B           VI_DRV_CheckExtChnAttr_x29a80
    VI_DRV_CheckExtChnAttr_x29b38:
    /*00029b38*/ STR         R3, [SP, #4] 
    /*00029b3c*/ MOVW        R2, #0                      @ .LC166 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd244] 
    /*00029b40*/ MOVW        R3, #3775                   @ 0xebf 
    /*00029b44*/ MOVT        R2, #0                      @ .LC166 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd244] 
    /*00029b48*/ STR         R3, [SP] 
    /*00029b4c*/ MOV         R1, #16 
    /*00029b50*/ LDR         R3, [PC, #176]              @ 0x0000000000029c08 
    /*00029b54*/ MOV         R0, #3 
    /*00029b58*/ BL          0x0000000000029B58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029b5c*/ B           VI_DRV_CheckExtChnAttr_x29a80
    VI_DRV_CheckExtChnAttr_x29b60:
    /*00029b60*/ STR         R3, [SP, #8] 
    /*00029b64*/ MOVW        R2, #3794                   @ 0xed2 
    /*00029b68*/ MOV         R3, #4 
    /*00029b6c*/ MOV         R1, #16 
    /*00029b70*/ STM         SP, {R2, R3} 
    /*00029b74*/ MOV         R0, #3 
    /*00029b78*/ MOVW        R2, #0                      @ .LC169 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd2f8] 
    /*00029b7c*/ LDR         R3, [PC, #132]              @ 0x0000000000029c08 
    /*00029b80*/ MOVT        R2, #0                      @ .LC169 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd2f8] 
    /*00029b84*/ BL          0x0000000000029B84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029b88*/ B           VI_DRV_CheckExtChnAttr_x29a80
    VI_DRV_CheckExtChnAttr_x29b8c:
    /*00029b8c*/ STR         R2, [SP, #8] 
    /*00029b90*/ MOV         R3, #4 
    /*00029b94*/ MOVW        R2, #3800                   @ 0xed8 
    /*00029b98*/ MOV         R1, #16 
    /*00029b9c*/ STM         SP, {R2, R3} 
    /*00029ba0*/ MOV         R0, #3 
    /*00029ba4*/ MOVW        R2, #0                      @ .LC170 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd33c] 
    /*00029ba8*/ LDR         R3, [PC, #88]               @ 0x0000000000029c08 
    /*00029bac*/ MOVT        R2, #0                      @ .LC170 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd33c] 
    /*00029bb0*/ BL          0x0000000000029BB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029bb4*/ B           VI_DRV_CheckExtChnAttr_x29a80
    VI_DRV_CheckExtChnAttr_x29bb8:
    /*00029bb8*/ STR         R3, [SP, #4] 
    /*00029bbc*/ MOVW        R2, #0                      @ .LC171 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd380] 
    /*00029bc0*/ MOVW        R3, #3810                   @ 0xee2 
    /*00029bc4*/ MOVT        R2, #0                      @ .LC171 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd380] 
    /*00029bc8*/ STR         R3, [SP] 
    /*00029bcc*/ MOV         R1, #16 
    /*00029bd0*/ LDR         R3, [PC, #48]               @ 0x0000000000029c08 
    /*00029bd4*/ MOV         R0, #3 
    /*00029bd8*/ BL          0x0000000000029BD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029bdc*/ B           VI_DRV_CheckExtChnAttr_x29a80
    VI_DRV_CheckExtChnAttr_x29be0:
    /*00029be0*/ STR         R3, [SP, #4] 
    /*00029be4*/ MOVW        R2, #0                      @ .LC172 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd3dc] 
    /*00029be8*/ MOVW        R3, #3817                   @ 0xee9 
    /*00029bec*/ MOVT        R2, #0                      @ .LC172 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd3dc] 
    /*00029bf0*/ STR         R3, [SP] 
    /*00029bf4*/ MOV         R1, #16 
    /*00029bf8*/ LDR         R3, [PC, #8]                @ 0x0000000000029c08 
    /*00029bfc*/ MOV         R0, #3 
    /*00029c00*/ BL          0x0000000000029C00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029c04*/ B           VI_DRV_CheckExtChnAttr_x29a80
    /*00029c08*/ ANDEQ       R1, R0, R8, LSL SL 
FUNC_END VI_DRV_CheckExtChnAttr


FUNC_BEGIN VI_DRV_SetExtChnAttr
    /*00029c0c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029c10*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029c14*/ ADD         R0, R3, R0, LSL #2 
    /*00029c18*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00029c1c*/ SUB         R4, R1, #1 
    /*00029c20*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*00029c24*/ MOV         R6, #40                     @ 0x28 
    /*00029c28*/ MOV         R8, R2 
    /*00029c2c*/ MOV         R7, #1 
    /*00029c30*/ ADD         R5, R3, R1, LSL #2 
    /*00029c34*/ MOV         R2, R6 
    /*00029c38*/ MLA         R4, R6, R4, R3 
    /*00029c3c*/ MOV         R1, R8 
    /*00029c40*/ STR         R7, [R5, #20] 
    /*00029c44*/ ADD         R4, R4, #2896               @ 0xb50 
    /*00029c48*/ MOV         R0, R4 
    /*00029c4c*/ BL          0x0000000000029C4C          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*00029c50*/ CMP         R0, #0 
    /*00029c54*/ BEQ         VI_DRV_SetExtChnAttr_x29c70
    /*00029c58*/ MOV         R1, R8 
    /*00029c5c*/ MOV         R2, R6 
    /*00029c60*/ MOV         R0, R4 
    /*00029c64*/ BL          0x0000000000029C64          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00029c68*/ ADD         R1, R5, #32768              @ 0x8000 
    /*00029c6c*/ STR         R7, [R1, #1216]             @ 0x4c0 
    VI_DRV_SetExtChnAttr_x29c70:
    /*00029c70*/ MOV         R0, #0 
    /*00029c74*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_DRV_SetExtChnAttr


FUNC_BEGIN VI_DRV_GetExtChnAttr
    /*00029c78*/ SUB         R1, R1, #1 
    /*00029c7c*/ MOV         IP, #40                     @ 0x28 
    /*00029c80*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029c84*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029c88*/ MUL         R1, IP, R1 
    /*00029c8c*/ ADD         R3, R3, R0, LSL #2 
    /*00029c90*/ PUSH        {R4, LR} 
    /*00029c94*/ MOV         R0, R2 
    /*00029c98*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*00029c9c*/ ADD         R1, R1, #2896               @ 0xb50 
    /*00029ca0*/ MOV         R2, IP 
    /*00029ca4*/ ADD         R1, R3, R1 
    /*00029ca8*/ BL          0x0000000000029CA8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00029cac*/ MOV         R0, #0 
    /*00029cb0*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetExtChnAttr


FUNC_BEGIN VI_DRV_GetWorkingExtChnAttr
    /*00029cb4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029cb8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029cbc*/ ADD         R0, R3, R0, LSL #2 
    /*00029cc0*/ SUB         R3, R1, #1 
    /*00029cc4*/ PUSH        {R4, LR} 
    /*00029cc8*/ MOV         LR, #40                     @ 0x28 
    /*00029ccc*/ LDR         IP, [R0, #728]              @ 0x2d8 
    /*00029cd0*/ MOV         R4, #1 
    /*00029cd4*/ MOV         R0, R2 
    /*00029cd8*/ MOV         R2, LR 
    /*00029cdc*/ ADD         R1, IP, R1, LSL #2 
    /*00029ce0*/ MLA         R3, LR, R3, IP 
    /*00029ce4*/ STR         R4, [R1, #20] 
    /*00029ce8*/ ADD         R1, R3, #37120              @ 0x9100 
    /*00029cec*/ ADD         R1, R1, #216                @ 0xd8 
    /*00029cf0*/ BL          0x0000000000029CF0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00029cf4*/ MOV         R0, #0 
    /*00029cf8*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetWorkingExtChnAttr


FUNC_BEGIN VI_DRV_IsChnAttrSetted
    /*00029cfc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029d00*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029d04*/ ADD         R0, R3, R0, LSL #2 
    /*00029d08*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*00029d0c*/ ADD         R1, R3, R1, LSL #2 
    /*00029d10*/ LDR         R0, [R1, #20] 
    /*00029d14*/ BX          LR 
FUNC_END VI_DRV_IsChnAttrSetted


FUNC_BEGIN VI_DRV_GetExtChnDepth
    /*00029d18*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029d1c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029d20*/ ADD         R0, R3, R0, LSL #2 
    /*00029d24*/ SUB         R1, R1, #1 
    /*00029d28*/ MOV         IP, #40                     @ 0x28 
    /*00029d2c*/ MOVW        R3, #37364                  @ 0x91f4 
    /*00029d30*/ LDR         R2, [R0, #728]              @ 0x2d8 
    /*00029d34*/ MLA         R1, IP, R1, R2 
    /*00029d38*/ LDR         R0, [R1, R3] 
    /*00029d3c*/ BX          LR 
FUNC_END VI_DRV_GetExtChnDepth


FUNC_BEGIN VI_DRV_GetPhyChnDepth
    /*00029d40*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029d44*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029d48*/ ADD         R0, R3, R0, LSL #2 
    /*00029d4c*/ MOV         R3, #44                     @ 0x2c 
    /*00029d50*/ LDR         R2, [R0, #728]              @ 0x2d8 
    /*00029d54*/ MLA         R1, R3, R1, R2 
    /*00029d58*/ ADD         R1, R1, #68608              @ 0x10c00 
    /*00029d5c*/ LDR         R0, [R1, #24] 
    /*00029d60*/ BX          LR 
FUNC_END VI_DRV_GetPhyChnDepth


FUNC_BEGIN VI_DRV_SetChnCrop
    /*00029d64*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029d68*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029d6c*/ ADD         R0, R3, R0, LSL #2 
    /*00029d70*/ MOV         R3, #24 
    /*00029d74*/ PUSH        {R4, R5, R6, LR} 
    /*00029d78*/ MOV         R4, R1 
    /*00029d7c*/ LDR         R5, [R0, #728]              @ 0x2d8 
    /*00029d80*/ MOV         R1, R2 
    /*00029d84*/ MOV         R2, R3 
    /*00029d88*/ MLA         R0, R3, R4, R5 
    /*00029d8c*/ ADD         R0, R0, #3216               @ 0xc90 
    /*00029d90*/ BL          0x0000000000029D90          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00029d94*/ ADD         R1, R4, #8448               @ 0x2100 
    /*00029d98*/ ADD         R1, R1, #56                 @ 0x38 
    /*00029d9c*/ MOV         R3, #1 
    /*00029da0*/ MOV         R0, #0 
    /*00029da4*/ ADD         R1, R5, R1, LSL #2 
    /*00029da8*/ STR         R3, [R1, #4] 
    /*00029dac*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_SetChnCrop


FUNC_BEGIN VI_DRV_GetChnCrop
    /*00029db0*/ MOV         IP, #24 
    /*00029db4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029db8*/ MUL         R1, IP, R1 
    /*00029dbc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029dc0*/ ADD         R3, R3, R0, LSL #2 
    /*00029dc4*/ MOV         R0, R2 
    /*00029dc8*/ PUSH        {R4, LR} 
    /*00029dcc*/ ADD         R1, R1, #3216               @ 0xc90 
    /*00029dd0*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*00029dd4*/ MOV         R2, IP 
    /*00029dd8*/ ADD         R1, R3, R1 
    /*00029ddc*/ BL          0x0000000000029DDC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00029de0*/ MOV         R0, #0 
    /*00029de4*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetChnCrop


FUNC_BEGIN VI_DRV_EnableChn
    /*00029de8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029dec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029df0*/ ADD         R0, R3, R0, LSL #2 
    /*00029df4*/ LDR         R3, [R0, #712]              @ 0x2c8 
    /*00029df8*/ SUB         R3, R3, #2 
    /*00029dfc*/ CMP         R3, #1 
    /*00029e00*/ BLS         VI_DRV_EnableChn_x29e0c
    /*00029e04*/ MOV         R0, #0 
    /*00029e08*/ BX          LR 
    VI_DRV_EnableChn_x29e0c:
    /*00029e0c*/ PUSH        {R4, R5, R6, LR} 
    /*00029e10*/ MOV         R0, #0 
    /*00029e14*/ MOV         R5, R2 
    /*00029e18*/ MOV         R4, R1 
    /*00029e1c*/ BL          0x0000000000029E1C          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*00029e20*/ MOV         R2, R5 
    /*00029e24*/ MOV         R1, R4 
    /*00029e28*/ BL          0x0000000000029E28          @ VI_HAL_EnableChn [R_ARM_CALL: .text+0x34c34] 
    /*00029e2c*/ MOV         R0, #0 
    /*00029e30*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_EnableChn


FUNC_BEGIN VI_DRV_ProcRegNewManual
    /*00029e34*/ PUSH        {R4, LR} 
    /*00029e38*/ MOV         R0, #0 
    /*00029e3c*/ BL          0x0000000000029E3C          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*00029e40*/ BL          0x0000000000029E40          @ VI_HAL_ProcRegNewManual [R_ARM_CALL: .text+0x353e8] 
    /*00029e44*/ MOV         R0, #0 
    /*00029e48*/ POP         {R4, PC} 
FUNC_END VI_DRV_ProcRegNewManual


FUNC_BEGIN VI_DRV_SetChnLDCV3Attr
    /*00029e4c*/ BX          LR 
FUNC_END VI_DRV_SetChnLDCV3Attr


FUNC_BEGIN VI_DRV_GetChnLDCV3AttrSet
    /*00029e50*/ BX          LR 
FUNC_END VI_DRV_GetChnLDCV3AttrSet


FUNC_BEGIN VI_DRV_CheckChnLdcAttr
    /*00029e54*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00029e58*/ MOV         R5, R2 
    /*00029e5c*/ LDR         R2, [R2] 
    /*00029e60*/ SUB         SP, SP, #72                 @ 0x48 
    /*00029e64*/ CMP         R2, #1 
    /*00029e68*/ MOVWHI      R3, #4072                   @ 0xfe8 
    /*00029e6c*/ MOVWHI      R2, #0                      @ .LC175 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd4dc] 
    /*00029e70*/ STRHI       R3, [SP] 
    /*00029e74*/ MOVTHI      R2, #0                      @ .LC175 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd4dc] 
    /*00029e78*/ BHI         VI_DRV_CheckChnLdcAttr_x29f1c
    /*00029e7c*/ MOV         R8, R0 
    /*00029e80*/ MOV         R0, #37                     @ 0x25 
    /*00029e84*/ MOV         R4, R1 
    /*00029e88*/ MOV         R6, R3 
    /*00029e8c*/ BL          0x0000000000029E8C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00029e90*/ SUBS        R7, R0, #0 
    /*00029e94*/ BEQ         VI_DRV_CheckChnLdcAttr_x29f38
    /*00029e98*/ LDR         R3, [R7, #40]               @ 0x28 
    /*00029e9c*/ CMP         R3, #0 
    /*00029ea0*/ BEQ         VI_DRV_CheckChnLdcAttr_x29f38
    /*00029ea4*/ MOV         R1, #44                     @ 0x2c 
    /*00029ea8*/ MOVW        R3, #34160                  @ 0x8570 
    /*00029eac*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029eb0*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029eb4*/ MLA         R4, R1, R4, R3 
    /*00029eb8*/ ADD         R0, R0, R8, LSL #2 
    /*00029ebc*/ MOV         R2, R1 
    /*00029ec0*/ LDR         R1, [R0, #728]              @ 0x2d8 
    /*00029ec4*/ ADD         R0, SP, #28 
    /*00029ec8*/ ADD         R1, R1, R4 
    /*00029ecc*/ BL          0x0000000000029ECC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00029ed0*/ LDM         R6, {R4, LR} 
    /*00029ed4*/ LDR         IP, [SP, #36]               @ 0x24 
    /*00029ed8*/ ADD         R1, R5, #4 
    /*00029edc*/ LDR         R2, [SP, #48]               @ 0x30 
    /*00029ee0*/ ADD         R0, SP, #8 
    /*00029ee4*/ LDR         R3, [R7, #40]               @ 0x28 
    /*00029ee8*/ STR         R4, [SP, #8] 
    /*00029eec*/ STR         LR, [SP, #12] 
    /*00029ef0*/ STR         IP, [SP, #16] 
    /*00029ef4*/ STR         R2, [SP, #20] 
    /*00029ef8*/ BLX         R3 
    /*00029efc*/ CMP         R0, #0 
    /*00029f00*/ BNE         VI_DRV_CheckChnLdcAttr_x29f0c
    /*00029f04*/ ADD         SP, SP, #72                 @ 0x48 
    /*00029f08*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_CheckChnLdcAttr_x29f0c:
    /*00029f0c*/ MOVW        R2, #0                      @ .LC177 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd55c] 
    /*00029f10*/ MOVT        R2, #0                      @ .LC177 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd55c] 
    /*00029f14*/ MOVW        R3, #4090                   @ 0xffa 
    /*00029f18*/ STR         R3, [SP] 
    VI_DRV_CheckChnLdcAttr_x29f1c:
    /*00029f1c*/ LDR         R3, [PC, #40]               @ 0x0000000000029f4c 
    /*00029f20*/ MOV         R1, #16 
    /*00029f24*/ MOV         R0, #3 
    /*00029f28*/ BL          0x0000000000029F28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00029f2c*/ MVN         R0, #0 
    /*00029f30*/ ADD         SP, SP, #72                 @ 0x48 
    /*00029f34*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_CheckChnLdcAttr_x29f38:
    /*00029f38*/ MOVW        R3, #4078                   @ 0xfee 
    /*00029f3c*/ MOVW        R2, #0                      @ .LC176 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd51c] 
    /*00029f40*/ STR         R3, [SP] 
    /*00029f44*/ MOVT        R2, #0                      @ .LC176 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd51c] 
    /*00029f48*/ B           VI_DRV_CheckChnLdcAttr_x29f1c
    /*00029f4c*/ ANDEQ       R1, R0, R0, LSR SL 
FUNC_END VI_DRV_CheckChnLdcAttr


FUNC_BEGIN VI_DRV_SetChnLDCAttr
    /*00029f50*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029f54*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029f58*/ ADD         R0, R3, R0, LSL #2 
    /*00029f5c*/ MOV         R3, #504                    @ 0x1f8 
    /*00029f60*/ PUSH        {R4, R5, R6, LR} 
    /*00029f64*/ MOV         R4, R1 
    /*00029f68*/ LDR         R5, [R0, #728]              @ 0x2d8 
    /*00029f6c*/ MOV         R1, R2 
    /*00029f70*/ MOV         R2, R3 
    /*00029f74*/ MLA         R0, R3, R4, R5 
    /*00029f78*/ ADD         R0, R0, #392                @ 0x188 
    /*00029f7c*/ BL          0x0000000000029F7C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00029f80*/ ADD         R1, R4, #8448               @ 0x2100 
    /*00029f84*/ ADD         R1, R1, #44                 @ 0x2c 
    /*00029f88*/ MOV         R3, #1 
    /*00029f8c*/ STR         R3, [R5, R1, LSL #2] 
    /*00029f90*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_SetChnLDCAttr


FUNC_BEGIN VI_DRV_GetChnLDCAttrSet
    /*00029f94*/ MOV         R3, #504                    @ 0x1f8 
    /*00029f98*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00029f9c*/ MUL         R1, R3, R1 
    /*00029fa0*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00029fa4*/ ADD         IP, IP, R0, LSL #2 
    /*00029fa8*/ MOV         R0, R2 
    /*00029fac*/ MOV         R2, #32 
    /*00029fb0*/ LDR         R3, [IP, #728]              @ 0x2d8 
    /*00029fb4*/ ADD         R1, R1, #392                @ 0x188 
    /*00029fb8*/ ADD         R1, R3, R1 
    VI_DRV_GetChnLDCAttrSet_x29fbc:
    /*00029fbc*/ B           VI_DRV_GetChnLDCAttrSet_x29fbc@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_GetChnLDCAttrSet


FUNC_BEGIN VI_DRV_CheckChnLdcV2Attr
    /*00029fc0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00029fc4*/ MOV         R5, R2 
    /*00029fc8*/ LDR         R2, [R2] 
    /*00029fcc*/ SUB         SP, SP, #72                 @ 0x48 
    /*00029fd0*/ CMP         R2, #1 
    /*00029fd4*/ MOVWHI      R3, #4123                   @ 0x101b 
    /*00029fd8*/ MOVWHI      R2, #0                      @ .LC178 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd59c] 
    /*00029fdc*/ STRHI       R3, [SP] 
    /*00029fe0*/ MOVTHI      R2, #0                      @ .LC178 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd59c] 
    /*00029fe4*/ BHI         VI_DRV_CheckChnLdcV2Attr_x2a088
    /*00029fe8*/ MOV         R8, R0 
    /*00029fec*/ MOV         R0, #37                     @ 0x25 
    /*00029ff0*/ MOV         R4, R1 
    /*00029ff4*/ MOV         R6, R3 
    /*00029ff8*/ BL          0x0000000000029FF8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00029ffc*/ SUBS        R7, R0, #0 
    /*0002a000*/ BEQ         VI_DRV_CheckChnLdcV2Attr_x2a0a4
    /*0002a004*/ LDR         R3, [R7, #44]               @ 0x2c 
    /*0002a008*/ CMP         R3, #0 
    /*0002a00c*/ BEQ         VI_DRV_CheckChnLdcV2Attr_x2a0a4
    /*0002a010*/ MOV         R1, #44                     @ 0x2c 
    /*0002a014*/ MOVW        R3, #34160                  @ 0x8570 
    /*0002a018*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a01c*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a020*/ MLA         R4, R1, R4, R3 
    /*0002a024*/ ADD         R0, R0, R8, LSL #2 
    /*0002a028*/ MOV         R2, R1 
    /*0002a02c*/ LDR         R1, [R0, #728]              @ 0x2d8 
    /*0002a030*/ ADD         R0, SP, #28 
    /*0002a034*/ ADD         R1, R1, R4 
    /*0002a038*/ BL          0x000000000002A038          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a03c*/ LDM         R6, {R4, LR} 
    /*0002a040*/ LDR         IP, [SP, #36]               @ 0x24 
    /*0002a044*/ ADD         R1, R5, #4 
    /*0002a048*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0002a04c*/ ADD         R0, SP, #8 
    /*0002a050*/ LDR         R3, [R7, #44]               @ 0x2c 
    /*0002a054*/ STR         R4, [SP, #8] 
    /*0002a058*/ STR         LR, [SP, #12] 
    /*0002a05c*/ STR         IP, [SP, #16] 
    /*0002a060*/ STR         R2, [SP, #20] 
    /*0002a064*/ BLX         R3 
    /*0002a068*/ CMP         R0, #0 
    /*0002a06c*/ BNE         VI_DRV_CheckChnLdcV2Attr_x2a078
    /*0002a070*/ ADD         SP, SP, #72                 @ 0x48 
    /*0002a074*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_CheckChnLdcV2Attr_x2a078:
    /*0002a078*/ MOVW        R2, #0                      @ .LC180 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd620] 
    /*0002a07c*/ MOVT        R2, #0                      @ .LC180 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd620] 
    /*0002a080*/ MOVW        R3, #4141                   @ 0x102d 
    /*0002a084*/ STR         R3, [SP] 
    VI_DRV_CheckChnLdcV2Attr_x2a088:
    /*0002a088*/ LDR         R3, [PC, #40]               @ 0x000000000002a0b8 
    /*0002a08c*/ MOV         R1, #16 
    /*0002a090*/ MOV         R0, #3 
    /*0002a094*/ BL          0x000000000002A094          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002a098*/ MVN         R0, #0 
    /*0002a09c*/ ADD         SP, SP, #72                 @ 0x48 
    /*0002a0a0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_CheckChnLdcV2Attr_x2a0a4:
    /*0002a0a4*/ MOVW        R3, #4129                   @ 0x1021 
    /*0002a0a8*/ MOVW        R2, #0                      @ .LC179 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd5e0] 
    /*0002a0ac*/ STR         R3, [SP] 
    /*0002a0b0*/ MOVT        R2, #0                      @ .LC179 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd5e0] 
    /*0002a0b4*/ B           VI_DRV_CheckChnLdcV2Attr_x2a088
    /*0002a0b8*/ ANDEQ       R1, R0, R8, ASR #20 
FUNC_END VI_DRV_CheckChnLdcV2Attr


FUNC_BEGIN VI_DRV_SetChnLDCV2Attr
    /*0002a0bc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a0c0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a0c4*/ ADD         R0, R3, R0, LSL #2 
    /*0002a0c8*/ MOV         R3, #116                    @ 0x74 
    /*0002a0cc*/ PUSH        {R4, R5, R6, LR} 
    /*0002a0d0*/ MOV         R4, R1 
    /*0002a0d4*/ LDR         R5, [R0, #728]              @ 0x2d8 
    /*0002a0d8*/ MOV         R1, R2 
    /*0002a0dc*/ MOV         R2, R3 
    /*0002a0e0*/ MLA         R0, R3, R4, R5 
    /*0002a0e4*/ ADD         R0, R0, #896                @ 0x380 
    /*0002a0e8*/ BL          0x000000000002A0E8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a0ec*/ ADD         R1, R4, #8448               @ 0x2100 
    /*0002a0f0*/ ADD         R1, R1, #44                 @ 0x2c 
    /*0002a0f4*/ MOV         R3, #1 
    /*0002a0f8*/ ADD         R1, R5, R1, LSL #2 
    /*0002a0fc*/ STR         R3, [R1, #4] 
    /*0002a100*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_SetChnLDCV2Attr


FUNC_BEGIN VI_DRV_GetChnLDCV2AttrSet
    /*0002a104*/ MOV         IP, #116                    @ 0x74 
    /*0002a108*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a10c*/ MUL         R1, IP, R1 
    /*0002a110*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a114*/ ADD         R3, R3, R0, LSL #2 
    /*0002a118*/ MOV         R0, R2 
    /*0002a11c*/ MOV         R2, IP 
    /*0002a120*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002a124*/ ADD         R1, R1, #896                @ 0x380 
    /*0002a128*/ ADD         R1, R3, R1 
    VI_DRV_GetChnLDCV2AttrSet_x2a12c:
    /*0002a12c*/ B           VI_DRV_GetChnLDCV2AttrSet_x2a12c@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_GetChnLDCV2AttrSet


FUNC_BEGIN VI_DRV_GetChnLDCV2AttrUse
    /*0002a130*/ PUSH        {R4, R5, R6, LR} 
    /*0002a134*/ MOV         R4, #116                    @ 0x74 
    /*0002a138*/ MUL         R5, R4, R1 
    /*0002a13c*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a140*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a144*/ MOV         R6, R3 
    /*0002a148*/ ADD         IP, IP, R0, LSL #2 
    /*0002a14c*/ MOV         R0, R2 
    /*0002a150*/ ADD         R1, R5, #35328              @ 0x8a00 
    /*0002a154*/ MOV         R2, #112                    @ 0x70 
    /*0002a158*/ LDR         R4, [IP, #728]              @ 0x2d8 
    /*0002a15c*/ ADD         R1, R1, #12 
    /*0002a160*/ ADD         R1, R4, R1 
    /*0002a164*/ ADD         R4, R4, R5 
    /*0002a168*/ BL          0x000000000002A168          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a16c*/ MOVW        R3, #35336                  @ 0x8a08 
    /*0002a170*/ LDR         R3, [R4, R3] 
    /*0002a174*/ STR         R3, [R6] 
    /*0002a178*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_GetChnLDCV2AttrUse


FUNC_BEGIN VI_DRV_UpdateLDCV2AttrFromUserSet
    /*0002a17c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a180*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a184*/ ADD         R0, R3, R0, LSL #2 
    /*0002a188*/ PUSH        {R4, R5, R6, LR} 
    /*0002a18c*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002a190*/ ADD         R4, R3, R1, LSL #2 
    /*0002a194*/ ADD         R6, R4, #32768              @ 0x8000 
    /*0002a198*/ LDR         R5, [R6, #1204]             @ 0x4b4 
    /*0002a19c*/ CMP         R5, #1 
    /*0002a1a0*/ BEQ         VI_DRV_UpdateLDCV2AttrFromUserSet_x2a1ac
    /*0002a1a4*/ MOV         R0, #0 
    /*0002a1a8*/ POP         {R4, R5, R6, PC} 
    VI_DRV_UpdateLDCV2AttrFromUserSet_x2a1ac:
    /*0002a1ac*/ MOV         R2, #116                    @ 0x74 
    /*0002a1b0*/ MUL         R1, R2, R1 
    /*0002a1b4*/ ADD         R0, R1, #35328              @ 0x8a00 
    /*0002a1b8*/ ADD         R1, R1, #896                @ 0x380 
    /*0002a1bc*/ ADD         R0, R0, #8 
    /*0002a1c0*/ ADD         R1, R3, R1 
    /*0002a1c4*/ ADD         R0, R3, R0 
    /*0002a1c8*/ BL          0x000000000002A1C8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a1cc*/ MOV         R3, #0 
    /*0002a1d0*/ MOV         R0, #0 
    /*0002a1d4*/ STR         R3, [R6, #1204]             @ 0x4b4 
    /*0002a1d8*/ STR         R5, [R4, #16] 
    /*0002a1dc*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_UpdateLDCV2AttrFromUserSet


FUNC_BEGIN VI_DRV_GetChnLDCAttrUse
    /*0002a1e0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002a1e4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a1e8*/ MOVW        LR, #34832                  @ 0x8810 
    /*0002a1ec*/ MOV         IP, #504                    @ 0x1f8 
    /*0002a1f0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a1f4*/ ADD         R3, R3, R0, LSL #2 
    /*0002a1f8*/ MOV         R0, R2 
    /*0002a1fc*/ MLA         R1, IP, R1, LR 
    /*0002a200*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002a204*/ MOV         R2, #32 
    /*0002a208*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    /*0002a20c*/ ADD         R1, R3, R1 
    VI_DRV_GetChnLDCAttrUse_x2a210:
    /*0002a210*/ B           VI_DRV_GetChnLDCAttrUse_x2a210@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_GetChnLDCAttrUse


FUNC_BEGIN VI_DRV_CheckChnRotateExAttr
    /*0002a214*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002a218*/ MOV         R5, R2 
    /*0002a21c*/ LDR         R2, [R2] 
    /*0002a220*/ SUB         SP, SP, #72                 @ 0x48 
    /*0002a224*/ CMP         R2, #1 
    /*0002a228*/ MOVWHI      R3, #4219                   @ 0x107b 
    /*0002a22c*/ MOVWHI      R2, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd654] 
    /*0002a230*/ STRHI       R3, [SP] 
    /*0002a234*/ MOVTHI      R2, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd654] 
    /*0002a238*/ BHI         VI_DRV_CheckChnRotateExAttr_x2a2dc
    /*0002a23c*/ MOV         R8, R0 
    /*0002a240*/ MOV         R0, #37                     @ 0x25 
    /*0002a244*/ MOV         R4, R1 
    /*0002a248*/ MOV         R6, R3 
    /*0002a24c*/ BL          0x000000000002A24C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002a250*/ SUBS        R7, R0, #0 
    /*0002a254*/ BEQ         VI_DRV_CheckChnRotateExAttr_x2a2f8
    /*0002a258*/ LDR         R3, [R7, #56]               @ 0x38 
    /*0002a25c*/ CMP         R3, #0 
    /*0002a260*/ BEQ         VI_DRV_CheckChnRotateExAttr_x2a2f8
    /*0002a264*/ MOV         R1, #44                     @ 0x2c 
    /*0002a268*/ MOVW        R3, #34160                  @ 0x8570 
    /*0002a26c*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a270*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a274*/ MLA         R4, R1, R4, R3 
    /*0002a278*/ ADD         R0, R0, R8, LSL #2 
    /*0002a27c*/ MOV         R2, R1 
    /*0002a280*/ LDR         R1, [R0, #728]              @ 0x2d8 
    /*0002a284*/ ADD         R0, SP, #28 
    /*0002a288*/ ADD         R1, R1, R4 
    /*0002a28c*/ BL          0x000000000002A28C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a290*/ LDM         R6, {R4, LR} 
    /*0002a294*/ LDR         IP, [SP, #36]               @ 0x24 
    /*0002a298*/ ADD         R1, R5, #4 
    /*0002a29c*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0002a2a0*/ ADD         R0, SP, #8 
    /*0002a2a4*/ LDR         R3, [R7, #56]               @ 0x38 
    /*0002a2a8*/ STR         R4, [SP, #8] 
    /*0002a2ac*/ STR         LR, [SP, #12] 
    /*0002a2b0*/ STR         IP, [SP, #16] 
    /*0002a2b4*/ STR         R2, [SP, #20] 
    /*0002a2b8*/ BLX         R3 
    /*0002a2bc*/ CMP         R0, #0 
    /*0002a2c0*/ BNE         VI_DRV_CheckChnRotateExAttr_x2a2cc
    /*0002a2c4*/ ADD         SP, SP, #72                 @ 0x48 
    /*0002a2c8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_CheckChnRotateExAttr_x2a2cc:
    /*0002a2cc*/ MOVW        R2, #0                      @ .LC177 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd55c] 
    /*0002a2d0*/ MOVT        R2, #0                      @ .LC177 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd55c] 
    /*0002a2d4*/ MOVW        R3, #4240                   @ 0x1090 
    /*0002a2d8*/ STR         R3, [SP] 
    VI_DRV_CheckChnRotateExAttr_x2a2dc:
    /*0002a2dc*/ LDR         R3, [PC, #40]               @ 0x000000000002a30c 
    /*0002a2e0*/ MOV         R1, #16 
    /*0002a2e4*/ MOV         R0, #3 
    /*0002a2e8*/ BL          0x000000000002A2E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002a2ec*/ MVN         R0, #0 
    /*0002a2f0*/ ADD         SP, SP, #72                 @ 0x48 
    /*0002a2f4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_CheckChnRotateExAttr_x2a2f8:
    /*0002a2f8*/ MOVW        R3, #4225                   @ 0x1081 
    /*0002a2fc*/ MOVW        R2, #0                      @ .LC182 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd69c] 
    /*0002a300*/ STR         R3, [SP] 
    /*0002a304*/ MOVT        R2, #0                      @ .LC182 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd69c] 
    /*0002a308*/ B           VI_DRV_CheckChnRotateExAttr_x2a2dc
    /*0002a30c*/ ANDEQ       R1, R0, R4, ROR #20 
FUNC_END VI_DRV_CheckChnRotateExAttr


FUNC_BEGIN VI_DRV_SetChnRotationExAttr
    /*0002a310*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a314*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a318*/ ADD         R0, R3, R0, LSL #2 
    /*0002a31c*/ MOV         R3, #664                    @ 0x298 
    /*0002a320*/ PUSH        {R4, R5, R6, LR} 
    /*0002a324*/ MOV         R4, R1 
    /*0002a328*/ LDR         R5, [R0, #728]              @ 0x2d8 
    /*0002a32c*/ MOV         R1, R2 
    /*0002a330*/ MOV         R2, R3 
    /*0002a334*/ MLA         R0, R3, R4, R5 
    /*0002a338*/ ADD         R0, R0, #1648               @ 0x670 
    /*0002a33c*/ ADD         R0, R0, #8 
    /*0002a340*/ BL          0x000000000002A340          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a344*/ ADD         R1, R4, #8448               @ 0x2100 
    /*0002a348*/ ADD         R1, R1, #46                 @ 0x2e 
    /*0002a34c*/ MOV         R3, #1 
    /*0002a350*/ ADD         R1, R5, R1, LSL #2 
    /*0002a354*/ STR         R3, [R1, #4] 
    /*0002a358*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_SetChnRotationExAttr


FUNC_BEGIN VI_DRV_GetChnRotationExAttrSet
    /*0002a35c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002a360*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a364*/ MOVW        LR, #1656                   @ 0x678 
    /*0002a368*/ MOV         IP, #664                    @ 0x298 
    /*0002a36c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a370*/ ADD         R3, R3, R0, LSL #2 
    /*0002a374*/ MOV         R0, R2 
    /*0002a378*/ MLA         R1, IP, R1, LR 
    /*0002a37c*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002a380*/ MOV         R2, #28 
    /*0002a384*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    /*0002a388*/ ADD         R1, R3, R1 
    VI_DRV_GetChnRotationExAttrSet_x2a38c:
    /*0002a38c*/ B           VI_DRV_GetChnRotationExAttrSet_x2a38c@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_GetChnRotationExAttrSet


FUNC_BEGIN VI_DRV_GetChnRotationExAttrUse
    /*0002a390*/ MOV         R3, #664                    @ 0x298 
    /*0002a394*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a398*/ MUL         R1, R3, R1 
    /*0002a39c*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a3a0*/ ADD         IP, IP, R0, LSL #2 
    /*0002a3a4*/ MOV         R0, R2 
    /*0002a3a8*/ MOV         R2, #28 
    /*0002a3ac*/ LDR         R3, [IP, #728]              @ 0x2d8 
    /*0002a3b0*/ ADD         R1, R1, #36096              @ 0x8d00 
    /*0002a3b4*/ ADD         R1, R3, R1 
    VI_DRV_GetChnRotationExAttrUse_x2a3b8:
    /*0002a3b8*/ B           VI_DRV_GetChnRotationExAttrUse_x2a3b8@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_GetChnRotationExAttrUse


FUNC_BEGIN VI_DRV_GetChnDISAttr
    /*0002a3bc*/ MOV         IP, #184                    @ 0xb8 
    /*0002a3c0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a3c4*/ MUL         R1, IP, R1 
    /*0002a3c8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a3cc*/ ADD         R3, R3, R0, LSL #2 
    /*0002a3d0*/ MOV         R0, R2 
    /*0002a3d4*/ MOV         R2, IP 
    /*0002a3d8*/ ADD         R1, R1, #88064              @ 0x15800 
    /*0002a3dc*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002a3e0*/ ADD         R1, R1, #568                @ 0x238 
    /*0002a3e4*/ ADD         R1, R3, R1 
    VI_DRV_GetChnDISAttr_x2a3e8:
    /*0002a3e8*/ B           VI_DRV_GetChnDISAttr_x2a3e8 @ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_GetChnDISAttr


FUNC_BEGIN VI_DRV_UpdateLastBufOkFlag
    /*0002a3ec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a3f0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a3f4*/ ADD         R0, R3, R0, LSL #2 
    /*0002a3f8*/ MOV         R3, #184                    @ 0xb8 
    /*0002a3fc*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0002a400*/ MLA         R3, R3, R1, R0 
    /*0002a404*/ ADD         R3, R3, #88064              @ 0x15800 
    /*0002a408*/ LDR         IP, [R3, #576]              @ 0x240 
    /*0002a40c*/ CMP         IP, R2 
    /*0002a410*/ STRNE       R2, [R3, #576]              @ 0x240 
    /*0002a414*/ ADDNE       R1, R1, #4 
    /*0002a418*/ MOVNE       R3, #1 
    /*0002a41c*/ STRNE       R3, [R0, R1, LSL #2] 
    /*0002a420*/ BX          LR 
FUNC_END VI_DRV_UpdateLastBufOkFlag


FUNC_BEGIN VI_DRV_GetLDCOperationAttr
    /*0002a424*/ PUSH        {R4, R5, R6, LR} 
    /*0002a428*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a42c*/ MOV         R4, #504                    @ 0x1f8 
    /*0002a430*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a434*/ MUL         R4, R4, R1 
    /*0002a438*/ ADD         R0, R3, R0, LSL #2 
    /*0002a43c*/ MOVW        IP, #34832                  @ 0x8810 
    /*0002a440*/ MOV         R6, R2 
    /*0002a444*/ LDR         R5, [R0, #728]              @ 0x2d8 
    /*0002a448*/ MOV         R0, R2 
    /*0002a44c*/ ADD         R1, R4, #34816              @ 0x8800 
    /*0002a450*/ MOV         R2, #28 
    /*0002a454*/ ADD         R3, R5, R4 
    /*0002a458*/ ADD         R1, R1, #20 
    /*0002a45c*/ ADD         R1, R5, R1 
    /*0002a460*/ LDR         R3, [R3, IP] 
    /*0002a464*/ STR         R3, [R0], #16 
    /*0002a468*/ BL          0x000000000002A468          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a46c*/ ADD         R1, R4, #34816              @ 0x8800 
    /*0002a470*/ ADD         R1, R1, #48                 @ 0x30 
    /*0002a474*/ ADD         R0, R6, #248                @ 0xf8 
    /*0002a478*/ ADD         R1, R5, R1 
    /*0002a47c*/ MOV         R2, #72                     @ 0x48 
    /*0002a480*/ BL          0x000000000002A480          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a484*/ ADD         R1, R4, #34816              @ 0x8800 
    /*0002a488*/ ADD         R1, R1, #120                @ 0x78 
    /*0002a48c*/ ADD         R0, R6, #320                @ 0x140 
    /*0002a490*/ ADD         R1, R5, R1 
    /*0002a494*/ MOV         R2, #368                    @ 0x170 
    /*0002a498*/ BL          0x000000000002A498          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a49c*/ MOV         R0, #0 
    /*0002a4a0*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_GetLDCOperationAttr


FUNC_BEGIN VI_DRV_SetChnRotationAttr
    /*0002a4a4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a4a8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a4ac*/ ADD         R0, R3, R0, LSL #2 
    /*0002a4b0*/ MOV         R3, #640                    @ 0x280 
    /*0002a4b4*/ PUSH        {R4, R5, R6, LR} 
    /*0002a4b8*/ MOV         R4, R1 
    /*0002a4bc*/ LDR         R5, [R0, #728]              @ 0x2d8 
    /*0002a4c0*/ MOV         R1, R2 
    /*0002a4c4*/ MOV         R2, R3 
    /*0002a4c8*/ MLA         R0, R3, R4, R5 
    /*0002a4cc*/ ADD         R0, R0, #1016               @ 0x3f8 
    /*0002a4d0*/ BL          0x000000000002A4D0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a4d4*/ ADD         R1, R4, #8448               @ 0x2100 
    /*0002a4d8*/ ADD         R1, R1, #46                 @ 0x2e 
    /*0002a4dc*/ MOV         R3, #1 
    /*0002a4e0*/ STR         R3, [R5, R1, LSL #2] 
    /*0002a4e4*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_SetChnRotationAttr


FUNC_BEGIN VI_DRV_GetRotationOperationAttr
    /*0002a4e8*/ PUSH        {R4, R5, R6, LR} 
    /*0002a4ec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a4f0*/ MOV         R4, #640                    @ 0x280 
    /*0002a4f4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a4f8*/ MUL         R4, R4, R1 
    /*0002a4fc*/ ADD         R0, R3, R0, LSL #2 
    /*0002a500*/ MOVW        IP, #35456                  @ 0x8a80 
    /*0002a504*/ MOV         R6, R2 
    /*0002a508*/ LDR         R5, [R0, #728]              @ 0x2d8 
    /*0002a50c*/ MOV         R0, R2 
    /*0002a510*/ ADD         R1, R4, #35328              @ 0x8a00 
    /*0002a514*/ MOV         R2, #88                     @ 0x58 
    /*0002a518*/ ADD         R3, R5, R4 
    /*0002a51c*/ ADD         R1, R1, #208                @ 0xd0 
    /*0002a520*/ ADD         R1, R5, R1 
    /*0002a524*/ LDR         R3, [R3, IP] 
    /*0002a528*/ ADDS        R3, R3, #0 
    /*0002a52c*/ MOVNE       R3, #1 
    /*0002a530*/ STR         R3, [R0], #16 
    /*0002a534*/ BL          0x000000000002A534          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a538*/ ADD         R1, R4, #35584              @ 0x8b00 
    /*0002a53c*/ ADD         R1, R1, #40                 @ 0x28 
    /*0002a540*/ ADD         R0, R6, #104                @ 0x68 
    /*0002a544*/ ADD         R1, R5, R1 
    /*0002a548*/ MOV         R2, #72                     @ 0x48 
    /*0002a54c*/ BL          0x000000000002A54C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a550*/ MOV         R0, #0 
    /*0002a554*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_GetRotationOperationAttr


FUNC_BEGIN VI_DRV_GetRotationExOperationAttr
    /*0002a558*/ PUSH        {R4, R5, R6, LR} 
    /*0002a55c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a560*/ MOV         R4, #664                    @ 0x298 
    /*0002a564*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a568*/ MUL         R4, R4, R1 
    /*0002a56c*/ ADD         R3, R3, R0, LSL #2 
    /*0002a570*/ MOV         R0, R2 
    /*0002a574*/ MOV         R6, R2 
    /*0002a578*/ LDR         R5, [R3, #728]              @ 0x2d8 
    /*0002a57c*/ MOV         R2, #88                     @ 0x58 
    /*0002a580*/ ADD         R1, R4, #36096              @ 0x8d00 
    /*0002a584*/ ADD         R3, R5, R4 
    /*0002a588*/ ADD         R1, R1, #104                @ 0x68 
    /*0002a58c*/ ADD         R3, R3, #36096              @ 0x8d00 
    /*0002a590*/ ADD         R1, R5, R1 
    /*0002a594*/ LDR         R3, [R3] 
    /*0002a598*/ STR         R3, [R0], #16 
    /*0002a59c*/ BL          0x000000000002A59C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a5a0*/ ADD         R1, R4, #36096              @ 0x8d00 
    /*0002a5a4*/ ADD         R1, R1, #192                @ 0xc0 
    /*0002a5a8*/ ADD         R0, R6, #104                @ 0x68 
    /*0002a5ac*/ ADD         R1, R5, R1 
    /*0002a5b0*/ MOV         R2, #72                     @ 0x48 
    /*0002a5b4*/ BL          0x000000000002A5B4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a5b8*/ MOV         R0, #0 
    /*0002a5bc*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_GetRotationExOperationAttr


FUNC_BEGIN VI_DRV_GetChnRotationAttrSet
    /*0002a5c0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a5c4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a5c8*/ ADD         R0, R3, R0, LSL #2 
    /*0002a5cc*/ MOV         R3, #640                    @ 0x280 
    /*0002a5d0*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0002a5d4*/ MLA         R1, R3, R1, R0 
    /*0002a5d8*/ LDR         R3, [R1, #1016]             @ 0x3f8 
    /*0002a5dc*/ STR         R3, [R2] 
    /*0002a5e0*/ BX          LR 
FUNC_END VI_DRV_GetChnRotationAttrSet


FUNC_BEGIN VI_DRV_GetChnRotationAttrUse
    /*0002a5e4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a5e8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a5ec*/ ADD         R0, R3, R0, LSL #2 
    /*0002a5f0*/ MOV         R3, #640                    @ 0x280 
    /*0002a5f4*/ MOVW        IP, #35456                  @ 0x8a80 
    /*0002a5f8*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0002a5fc*/ MLA         R1, R3, R1, R0 
    /*0002a600*/ LDR         R3, [R1, IP] 
    /*0002a604*/ STR         R3, [R2] 
    /*0002a608*/ BX          LR 
FUNC_END VI_DRV_GetChnRotationAttrUse


FUNC_BEGIN VI_DRV_CheckChnSpreadAttr
    /*0002a60c*/ PUSH        {R4, LR} 
    /*0002a610*/ MOV         R0, #37                     @ 0x25 
    /*0002a614*/ SUB         SP, SP, #8 
    /*0002a618*/ MOV         R4, R2 
    /*0002a61c*/ BL          0x000000000002A61C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002a620*/ CMP         R0, #0 
    /*0002a624*/ BEQ         VI_DRV_CheckChnSpreadAttr_x2a64c
    /*0002a628*/ LDR         R3, [R0, #48]               @ 0x30 
    /*0002a62c*/ CMP         R3, #0 
    /*0002a630*/ BEQ         VI_DRV_CheckChnSpreadAttr_x2a64c
    /*0002a634*/ MOV         R0, R4 
    /*0002a638*/ BLX         R3 
    /*0002a63c*/ CMP         R0, #0 
    /*0002a640*/ BNE         VI_DRV_CheckChnSpreadAttr_x2a674
    VI_DRV_CheckChnSpreadAttr_x2a644:
    /*0002a644*/ ADD         SP, SP, #8 
    /*0002a648*/ POP         {R4, PC} 
    VI_DRV_CheckChnSpreadAttr_x2a64c:
    /*0002a64c*/ MOVW        R2, #0                      @ .LC183 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd6dc] 
    /*0002a650*/ MOVT        R2, #0                      @ .LC183 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd6dc] 
    /*0002a654*/ MOVW        R3, #4381                   @ 0x111d 
    /*0002a658*/ STR         R3, [SP] 
    VI_DRV_CheckChnSpreadAttr_x2a65c:
    /*0002a65c*/ LDR         R3, [PC, #36]               @ 0x000000000002a688 
    /*0002a660*/ MOV         R1, #16 
    /*0002a664*/ MOV         R0, #3 
    /*0002a668*/ BL          0x000000000002A668          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002a66c*/ MVN         R0, #0 
    /*0002a670*/ B           VI_DRV_CheckChnSpreadAttr_x2a644
    VI_DRV_CheckChnSpreadAttr_x2a674:
    /*0002a674*/ MOVW        R3, #4387                   @ 0x1123 
    /*0002a678*/ MOVW        R2, #0                      @ .LC184 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd720] 
    /*0002a67c*/ STR         R3, [SP] 
    /*0002a680*/ MOVT        R2, #0                      @ .LC184 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd720] 
    /*0002a684*/ B           VI_DRV_CheckChnSpreadAttr_x2a65c
    /*0002a688*/ ANDEQ       R1, R0, R0, LSL #21 
FUNC_END VI_DRV_CheckChnSpreadAttr


FUNC_BEGIN VI_DRV_CheckGdcSupportPixelFormat
    /*0002a68c*/ CMP         R0, #39                     @ 0x27 
    /*0002a690*/ CMPNE       R0, #26 
    /*0002a694*/ MOVEQ       R0, #1 
    /*0002a698*/ MOVNE       R0, #0 
    /*0002a69c*/ SUB         R0, R0, #1 
    /*0002a6a0*/ BX          LR 
FUNC_END VI_DRV_CheckGdcSupportPixelFormat


FUNC_BEGIN VI_DRV_SetChnSpreadAttr
    /*0002a6a4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a6a8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a6ac*/ ADD         R0, R3, R0, LSL #2 
    /*0002a6b0*/ MOV         R3, #576                    @ 0x240 
    /*0002a6b4*/ PUSH        {R4, R5, R6, LR} 
    /*0002a6b8*/ MOV         R4, R1 
    /*0002a6bc*/ LDR         R5, [R0, #728]              @ 0x2d8 
    /*0002a6c0*/ MOV         R1, R2 
    /*0002a6c4*/ MOV         R2, R3 
    /*0002a6c8*/ MLA         R0, R3, R4, R5 
    /*0002a6cc*/ ADD         R0, R0, #2320               @ 0x910 
    /*0002a6d0*/ BL          0x000000000002A6D0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a6d4*/ ADD         R1, R4, #8448               @ 0x2100 
    /*0002a6d8*/ ADD         R1, R1, #48                 @ 0x30 
    /*0002a6dc*/ MOV         R3, #1 
    /*0002a6e0*/ STR         R3, [R5, R1, LSL #2] 
    /*0002a6e4*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_SetChnSpreadAttr


FUNC_BEGIN VI_DRV_GetChnSpreadAttrSet
    /*0002a6e8*/ MOV         R3, #576                    @ 0x240 
    /*0002a6ec*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a6f0*/ MUL         R1, R3, R1 
    /*0002a6f4*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a6f8*/ ADD         IP, IP, R0, LSL #2 
    /*0002a6fc*/ MOV         R0, R2 
    /*0002a700*/ MOV         R2, #16 
    /*0002a704*/ LDR         R3, [IP, #728]              @ 0x2d8 
    /*0002a708*/ ADD         R1, R1, #2320               @ 0x910 
    /*0002a70c*/ ADD         R1, R3, R1 
    VI_DRV_GetChnSpreadAttrSet_x2a710:
    /*0002a710*/ B           VI_DRV_GetChnSpreadAttrSet_x2a710@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_GetChnSpreadAttrSet


FUNC_BEGIN VI_DRV_GetChnSpreadAttrUse
    /*0002a714*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002a718*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a71c*/ MOVW        LR, #36760                  @ 0x8f98 
    /*0002a720*/ MOV         IP, #576                    @ 0x240 
    /*0002a724*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a728*/ ADD         R3, R3, R0, LSL #2 
    /*0002a72c*/ MOV         R0, R2 
    /*0002a730*/ MLA         R1, IP, R1, LR 
    /*0002a734*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002a738*/ MOV         R2, #16 
    /*0002a73c*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    /*0002a740*/ ADD         R1, R3, R1 
    VI_DRV_GetChnSpreadAttrUse_x2a744:
    /*0002a744*/ B           VI_DRV_GetChnSpreadAttrUse_x2a744@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_GetChnSpreadAttrUse


FUNC_BEGIN VI_DRV_IsSupportLowDelay
    /*0002a748*/ MOV         R0, #1 
    /*0002a74c*/ BX          LR 
FUNC_END VI_DRV_IsSupportLowDelay


FUNC_BEGIN VI_DRV_CheckChnLowDelayAttr
    /*0002a750*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002a754*/ SUB         SP, SP, #12 
    /*0002a758*/ LDR         R3, [R2] 
    /*0002a75c*/ CMP         R3, #1 
    /*0002a760*/ BHI         VI_DRV_CheckChnLowDelayAttr_x2a7b8
    /*0002a764*/ BEQ         VI_DRV_CheckChnLowDelayAttr_x2a774
    VI_DRV_CheckChnLowDelayAttr_x2a768:
    /*0002a768*/ MOV         R0, #0 
    VI_DRV_CheckChnLowDelayAttr_x2a76c:
    /*0002a76c*/ ADD         SP, SP, #12 
    /*0002a770*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckChnLowDelayAttr_x2a774:
    /*0002a774*/ LDR         R3, [R2, #4] 
    /*0002a778*/ MOVW        R2, #16352                  @ 0x3fe0 
    /*0002a77c*/ SUB         R1, R3, #32 
    /*0002a780*/ CMP         R1, R2 
    /*0002a784*/ BLS         VI_DRV_CheckChnLowDelayAttr_x2a768
    /*0002a788*/ MOVW        R2, #0                      @ .LC186 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd7a8] 
    /*0002a78c*/ MOVT        R2, #0                      @ .LC186 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd7a8] 
    /*0002a790*/ STR         R3, [SP, #4] 
    /*0002a794*/ MOVW        R3, #4449                   @ 0x1161 
    /*0002a798*/ STR         R3, [SP] 
    VI_DRV_CheckChnLowDelayAttr_x2a79c:
    /*0002a79c*/ LDR         R3, [PC, #44]               @ 0x000000000002a7d0 
    /*0002a7a0*/ MOV         R1, #16 
    /*0002a7a4*/ MOV         R0, #3 
    /*0002a7a8*/ BL          0x000000000002A7A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002a7ac*/ MOVW        R0, #32771                  @ 0x8003 
    /*0002a7b0*/ MOVT        R0, #40976                  @ 0xa010 
    /*0002a7b4*/ B           VI_DRV_CheckChnLowDelayAttr_x2a76c
    VI_DRV_CheckChnLowDelayAttr_x2a7b8:
    /*0002a7b8*/ STR         R3, [SP, #4] 
    /*0002a7bc*/ MOVW        R2, #0                      @ .LC185 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd75c] 
    /*0002a7c0*/ MOVW        R3, #4441                   @ 0x1159 
    /*0002a7c4*/ MOVT        R2, #0                      @ .LC185 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd75c] 
    /*0002a7c8*/ STR         R3, [SP] 
    /*0002a7cc*/ B           VI_DRV_CheckChnLowDelayAttr_x2a79c
    /*0002a7d0*/ MULEQ       R0, IP, SL 
FUNC_END VI_DRV_CheckChnLowDelayAttr


FUNC_BEGIN VI_DRV_SetChnLowDelayAttr
    /*0002a7d4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a7d8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a7dc*/ ADD         R3, R3, R0, LSL #2 
    /*0002a7e0*/ ADD         R0, R1, #4224               @ 0x1080 
    /*0002a7e4*/ PUSH        {R4, R5, R6, LR} 
    /*0002a7e8*/ ADD         R0, R0, #21 
    /*0002a7ec*/ LDR         R5, [R3, #728]              @ 0x2d8 
    /*0002a7f0*/ MOV         R4, R1 
    /*0002a7f4*/ MOV         R1, R2 
    /*0002a7f8*/ MOV         R2, #8 
    /*0002a7fc*/ ADD         R0, R5, R0, LSL #3 
    /*0002a800*/ BL          0x000000000002A800          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a804*/ ADD         R1, R4, #8512               @ 0x2140 
    /*0002a808*/ ADD         R1, R1, #10 
    /*0002a80c*/ MOV         R3, #1 
    /*0002a810*/ MOV         R0, #0 
    /*0002a814*/ STR         R3, [R5, R1, LSL #2] 
    /*0002a818*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_SetChnLowDelayAttr


FUNC_BEGIN VI_DRV_GetChnLowDelayAttr
    /*0002a81c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a820*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a824*/ ADD         R3, R3, R0, LSL #2 
    /*0002a828*/ ADD         R1, R1, #4224               @ 0x1080 
    /*0002a82c*/ PUSH        {R4, LR} 
    /*0002a830*/ ADD         R1, R1, #21 
    /*0002a834*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002a838*/ MOV         R0, R2 
    /*0002a83c*/ MOV         R2, #8 
    /*0002a840*/ ADD         R1, R3, R1, LSL #3 
    /*0002a844*/ BL          0x000000000002A844          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a848*/ MOV         R0, #0 
    /*0002a84c*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetChnLowDelayAttr


FUNC_BEGIN VI_DRV_GetSpreadOperationAttr
    /*0002a850*/ PUSH        {R4, R5, R6, LR} 
    /*0002a854*/ MOV         R4, #576                    @ 0x240 
    /*0002a858*/ MUL         R4, R4, R1 
    /*0002a85c*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a860*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a864*/ MOV         R6, R3 
    /*0002a868*/ ADD         IP, IP, R0, LSL #2 
    /*0002a86c*/ MOV         R0, R2 
    /*0002a870*/ ADD         R1, R4, #36608              @ 0x8f00 
    /*0002a874*/ MOV         R2, #16 
    /*0002a878*/ LDR         R5, [IP, #728]              @ 0x2d8 
    /*0002a87c*/ ADD         R1, R1, #152                @ 0x98 
    /*0002a880*/ ADD         R1, R5, R1 
    /*0002a884*/ BL          0x000000000002A884          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a888*/ ADD         R1, R4, #36608              @ 0x8f00 
    /*0002a88c*/ ADD         R1, R1, #168                @ 0xa8 
    /*0002a890*/ ADD         R0, R6, #16 
    /*0002a894*/ ADD         R1, R5, R1 
    /*0002a898*/ MOV         R2, #88                     @ 0x58 
    /*0002a89c*/ BL          0x000000000002A89C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a8a0*/ ADD         R1, R4, #36864              @ 0x9000 
    /*0002a8a4*/ ADD         R1, R5, R1 
    /*0002a8a8*/ ADD         R0, R6, #104                @ 0x68 
    /*0002a8ac*/ MOV         R2, #72                     @ 0x48 
    /*0002a8b0*/ BL          0x000000000002A8B0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a8b4*/ ADD         R1, R4, #37120              @ 0x9100 
    /*0002a8b8*/ ADD         R1, R1, #184                @ 0xb8 
    /*0002a8bc*/ ADD         R0, R6, #176                @ 0xb0 
    /*0002a8c0*/ ADD         R1, R5, R1 
    /*0002a8c4*/ MOV         R2, #32 
    /*0002a8c8*/ BL          0x000000000002A8C8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a8cc*/ MOV         R0, #0 
    /*0002a8d0*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_GetSpreadOperationAttr


FUNC_BEGIN VI_DRV_SetSpreadOperationPointer
    /*0002a8d4*/ MOV         R3, #0 
    /*0002a8d8*/ STR         R3, [R0, #160]              @ 0xa0 
    /*0002a8dc*/ STR         R3, [R0, #164]              @ 0xa4 
    /*0002a8e0*/ STR         R3, [R0, #152]              @ 0x98 
    /*0002a8e4*/ STR         R3, [R0, #156]              @ 0x9c 
    /*0002a8e8*/ BX          LR 
FUNC_END VI_DRV_SetSpreadOperationPointer


FUNC_BEGIN VI_DRV_UpdatePipeAttrFromUserSet
    /*0002a8ec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a8f0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a8f4*/ ADD         R0, R3, R0, LSL #2 
    /*0002a8f8*/ PUSH        {R4, LR} 
    /*0002a8fc*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0002a900*/ ADD         R4, R0, #32768              @ 0x8000 
    /*0002a904*/ LDR         R3, [R4, #2040]             @ 0x7f8 
    /*0002a908*/ CMP         R3, #1 
    /*0002a90c*/ BEQ         VI_DRV_UpdatePipeAttrFromUserSet_x2a918
    /*0002a910*/ MOV         R0, #0 
    /*0002a914*/ POP         {R4, PC} 
    VI_DRV_UpdatePipeAttrFromUserSet_x2a918:
    /*0002a918*/ ADD         R1, R0, #34048              @ 0x8500 
    /*0002a91c*/ ADD         R0, R0, #67584              @ 0x10800 
    /*0002a920*/ ADD         R1, R1, #44                 @ 0x2c 
    /*0002a924*/ MOV         R2, #68                     @ 0x44 
    /*0002a928*/ ADD         R0, R0, #948                @ 0x3b4 
    /*0002a92c*/ BL          0x000000000002A92C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a930*/ MOV         R3, #0 
    /*0002a934*/ MOV         R0, #0 
    /*0002a938*/ STR         R3, [R4, #2040]             @ 0x7f8 
    /*0002a93c*/ POP         {R4, PC} 
FUNC_END VI_DRV_UpdatePipeAttrFromUserSet


FUNC_BEGIN VI_DRV_UpdatePipeRawSourceFromUserSet
    /*0002a940*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a944*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a948*/ ADD         R0, R3, R0, LSL #2 
    /*0002a94c*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002a950*/ ADD         R2, R3, #32768              @ 0x8000 
    /*0002a954*/ LDR         R1, [R2, #2048]             @ 0x800 
    /*0002a958*/ CMP         R1, #1 
    /*0002a95c*/ ADDEQ       R3, R3, #65536              @ 0x10000 
    /*0002a960*/ LDREQ       R0, [R2, #1436]             @ 0x59c 
    /*0002a964*/ MOVEQ       R1, #0 
    /*0002a968*/ STREQ       R0, [R3, #3108]             @ 0xc24 
    /*0002a96c*/ MOV         R0, #0 
    /*0002a970*/ STREQ       R1, [R2, #2048]             @ 0x800 
    /*0002a974*/ BX          LR 
FUNC_END VI_DRV_UpdatePipeRawSourceFromUserSet


FUNC_BEGIN VI_DRV_UpdatePipeNrParamFromUserSet
    /*0002a978*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a97c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a980*/ ADD         R0, R3, R0, LSL #2 
    /*0002a984*/ PUSH        {R4, R5, R6, LR} 
    /*0002a988*/ LDR         R4, [R0, #728]              @ 0x2d8 
    /*0002a98c*/ ADD         R6, R4, #32768              @ 0x8000 
    /*0002a990*/ LDR         R5, [R6, #2056]             @ 0x808 
    /*0002a994*/ CMP         R5, #1 
    /*0002a998*/ BEQ         VI_DRV_UpdatePipeNrParamFromUserSet_x2a9a4
    /*0002a99c*/ MOV         R0, #0 
    /*0002a9a0*/ POP         {R4, R5, R6, PC} 
    VI_DRV_UpdatePipeNrParamFromUserSet_x2a9a4:
    /*0002a9a4*/ ADD         R1, R4, #34048              @ 0x8500 
    /*0002a9a8*/ ADD         R0, R4, #68608              @ 0x10c00 
    /*0002a9ac*/ ADD         R4, R4, #86016              @ 0x15000 
    /*0002a9b0*/ ADD         R1, R1, #172                @ 0xac 
    /*0002a9b4*/ MOV         R2, #588                    @ 0x24c 
    /*0002a9b8*/ ADD         R0, R0, #52                 @ 0x34 
    /*0002a9bc*/ BL          0x000000000002A9BC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002a9c0*/ MOV         R3, #0 
    /*0002a9c4*/ MOV         R0, #0 
    /*0002a9c8*/ STR         R3, [R6, #2056]             @ 0x808 
    /*0002a9cc*/ STR         R5, [R4, #2180]             @ 0x884 
    /*0002a9d0*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_UpdatePipeNrParamFromUserSet


FUNC_BEGIN VI_DRV_UpdatePipeDumpAttrFromUserSet
    /*0002a9d4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002a9d8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002a9dc*/ ADD         R0, R3, R0, LSL #2 
    /*0002a9e0*/ PUSH        {R4, LR} 
    /*0002a9e4*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0002a9e8*/ ADD         R4, R0, #32768              @ 0x8000 
    /*0002a9ec*/ LDR         R3, [R4, #2052]             @ 0x804 
    /*0002a9f0*/ CMP         R3, #1 
    /*0002a9f4*/ BEQ         VI_DRV_UpdatePipeDumpAttrFromUserSet_x2aa00
    /*0002a9f8*/ MOV         R0, #0 
    /*0002a9fc*/ POP         {R4, PC} 
    VI_DRV_UpdatePipeDumpAttrFromUserSet_x2aa00:
    /*0002aa00*/ ADD         R1, R0, #34048              @ 0x8500 
    /*0002aa04*/ ADD         R0, R0, #68608              @ 0x10c00 
    /*0002aa08*/ ADD         R1, R1, #160                @ 0xa0 
    /*0002aa0c*/ MOV         R2, #12 
    /*0002aa10*/ ADD         R0, R0, #40                 @ 0x28 
    /*0002aa14*/ BL          0x000000000002AA14          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002aa18*/ MOV         R3, #0 
    /*0002aa1c*/ MOV         R0, #0 
    /*0002aa20*/ STR         R3, [R4, #2052]             @ 0x804 
    /*0002aa24*/ POP         {R4, PC} 
FUNC_END VI_DRV_UpdatePipeDumpAttrFromUserSet


FUNC_BEGIN VI_DRV_UpdatePhyChnAttrFromUserSet
    /*0002aa28*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002aa2c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002aa30*/ ADD         R0, R3, R0, LSL #2 
    /*0002aa34*/ PUSH        {R4, LR} 
    /*0002aa38*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0002aa3c*/ ADD         R4, R0, R1, LSL #2 
    /*0002aa40*/ ADD         R4, R4, #32768              @ 0x8000 
    /*0002aa44*/ LDR         R3, [R4, #2044]             @ 0x7fc 
    /*0002aa48*/ CMP         R3, #1 
    /*0002aa4c*/ BEQ         VI_DRV_UpdatePhyChnAttrFromUserSet_x2aa58
    /*0002aa50*/ MOV         R0, #0 
    /*0002aa54*/ POP         {R4, PC} 
    VI_DRV_UpdatePhyChnAttrFromUserSet_x2aa58:
    /*0002aa58*/ MOV         R2, #44                     @ 0x2c 
    /*0002aa5c*/ MUL         R3, R2, R1 
    /*0002aa60*/ ADD         R1, R3, #34048              @ 0x8500 
    /*0002aa64*/ ADD         R3, R3, #67584              @ 0x10800 
    /*0002aa68*/ ADD         R3, R3, #1016               @ 0x3f8 
    /*0002aa6c*/ ADD         R1, R1, #112                @ 0x70 
    /*0002aa70*/ ADD         R1, R0, R1 
    /*0002aa74*/ ADD         R0, R0, R3 
    /*0002aa78*/ BL          0x000000000002AA78          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002aa7c*/ MOV         R3, #0 
    /*0002aa80*/ MOV         R0, #0 
    /*0002aa84*/ STR         R3, [R4, #2044]             @ 0x7fc 
    /*0002aa88*/ POP         {R4, PC} 
FUNC_END VI_DRV_UpdatePhyChnAttrFromUserSet


FUNC_BEGIN VI_DRV_SetGdcCfgUpdateFlag
    /*0002aa8c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002aa90*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002aa94*/ ADD         R3, R3, R0, LSL #2 
    /*0002aa98*/ ADD         R1, R1, #4 
    /*0002aa9c*/ MOV         R0, #0 
    /*0002aaa0*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002aaa4*/ STR         R2, [R3, R1, LSL #2] 
    /*0002aaa8*/ BX          LR 
FUNC_END VI_DRV_SetGdcCfgUpdateFlag


FUNC_BEGIN VI_DRV_IsGdcCfgUpdate
    /*0002aaac*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002aab0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002aab4*/ ADD         R0, R3, R0, LSL #2 
    /*0002aab8*/ ADD         R1, R1, #4 
    /*0002aabc*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002aac0*/ LDR         R0, [R3, R1, LSL #2] 
    /*0002aac4*/ BX          LR 
FUNC_END VI_DRV_IsGdcCfgUpdate


FUNC_BEGIN VI_DRV_UpdateLDCAttrFromUserSet
    /*0002aac8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002aacc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002aad0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002aad4*/ ADD         R5, R3, R0, LSL #2 
    /*0002aad8*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*0002aadc*/ ADD         R4, R3, R1, LSL #2 
    /*0002aae0*/ ADD         R4, R4, #32768              @ 0x8000 
    /*0002aae4*/ LDR         R7, [R4, #1200]             @ 0x4b0 
    /*0002aae8*/ CMP         R7, #1 
    /*0002aaec*/ BEQ         VI_DRV_UpdateLDCAttrFromUserSet_x2aaf8
    /*0002aaf0*/ MOV         R0, #0 
    /*0002aaf4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_UpdateLDCAttrFromUserSet_x2aaf8:
    /*0002aaf8*/ MOV         R2, #504                    @ 0x1f8 
    /*0002aafc*/ MOV         R6, R1 
    /*0002ab00*/ MUL         R1, R2, R1 
    /*0002ab04*/ ADD         R0, R1, #34816              @ 0x8800 
    /*0002ab08*/ ADD         R1, R1, #392                @ 0x188 
    /*0002ab0c*/ ADD         R0, R0, #16 
    /*0002ab10*/ ADD         R1, R3, R1 
    /*0002ab14*/ ADD         R0, R3, R0 
    /*0002ab18*/ BL          0x000000000002AB18          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002ab1c*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*0002ab20*/ ADD         R1, R6, #4 
    /*0002ab24*/ MOV         R2, #0 
    /*0002ab28*/ MOV         R0, #0 
    /*0002ab2c*/ STR         R2, [R4, #1200]             @ 0x4b0 
    /*0002ab30*/ STR         R7, [R3, R1, LSL #2] 
    /*0002ab34*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_DRV_UpdateLDCAttrFromUserSet


FUNC_BEGIN VI_DRV_UpdateRotationAttrFromUserSet
    /*0002ab38*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ab3c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002ab40*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002ab44*/ ADD         R5, R3, R0, LSL #2 
    /*0002ab48*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*0002ab4c*/ ADD         R4, R3, R1, LSL #2 
    /*0002ab50*/ ADD         R4, R4, #32768              @ 0x8000 
    /*0002ab54*/ LDR         R7, [R4, #1208]             @ 0x4b8 
    /*0002ab58*/ CMP         R7, #1 
    /*0002ab5c*/ BEQ         VI_DRV_UpdateRotationAttrFromUserSet_x2ab68
    /*0002ab60*/ MOV         R0, #0 
    /*0002ab64*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_UpdateRotationAttrFromUserSet_x2ab68:
    /*0002ab68*/ MOV         R2, #640                    @ 0x280 
    /*0002ab6c*/ MOV         R6, R1 
    /*0002ab70*/ MUL         R1, R2, R1 
    /*0002ab74*/ ADD         R0, R1, #35328              @ 0x8a00 
    /*0002ab78*/ ADD         R1, R1, #1016               @ 0x3f8 
    /*0002ab7c*/ ADD         R0, R0, #128                @ 0x80 
    /*0002ab80*/ ADD         R1, R3, R1 
    /*0002ab84*/ ADD         R0, R3, R0 
    /*0002ab88*/ BL          0x000000000002AB88          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002ab8c*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*0002ab90*/ ADD         R1, R6, #4 
    /*0002ab94*/ MOV         R2, #0 
    /*0002ab98*/ MOV         R0, #0 
    /*0002ab9c*/ STR         R2, [R4, #1208]             @ 0x4b8 
    /*0002aba0*/ STR         R7, [R3, R1, LSL #2] 
    /*0002aba4*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_DRV_UpdateRotationAttrFromUserSet


FUNC_BEGIN VI_DRV_UpdateRotationAttrExFromUserSet
    /*0002aba8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002abac*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002abb0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002abb4*/ ADD         R5, R3, R0, LSL #2 
    /*0002abb8*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*0002abbc*/ ADD         R4, R3, R1, LSL #2 
    /*0002abc0*/ ADD         R4, R4, #32768              @ 0x8000 
    /*0002abc4*/ LDR         R7, [R4, #1212]             @ 0x4bc 
    /*0002abc8*/ CMP         R7, #1 
    /*0002abcc*/ BEQ         VI_DRV_UpdateRotationAttrExFromUserSet_x2abd8
    /*0002abd0*/ MOV         R0, #0 
    /*0002abd4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_UpdateRotationAttrExFromUserSet_x2abd8:
    /*0002abd8*/ MOV         R2, #664                    @ 0x298 
    /*0002abdc*/ MOV         R6, R1 
    /*0002abe0*/ MUL         R0, R2, R1 
    /*0002abe4*/ ADD         R1, R0, #1648               @ 0x670 
    /*0002abe8*/ ADD         R0, R0, #36096              @ 0x8d00 
    /*0002abec*/ ADD         R1, R1, #8 
    /*0002abf0*/ ADD         R0, R3, R0 
    /*0002abf4*/ ADD         R1, R3, R1 
    /*0002abf8*/ BL          0x000000000002ABF8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002abfc*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*0002ac00*/ ADD         R1, R6, #4 
    /*0002ac04*/ MOV         R2, #0 
    /*0002ac08*/ MOV         R0, #0 
    /*0002ac0c*/ STR         R2, [R4, #1212]             @ 0x4bc 
    /*0002ac10*/ STR         R7, [R3, R1, LSL #2] 
    /*0002ac14*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_DRV_UpdateRotationAttrExFromUserSet


FUNC_BEGIN VI_DRV_UpdateSpreadAttrFromUserSet
    /*0002ac18*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ac1c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002ac20*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002ac24*/ ADD         R5, R3, R0, LSL #2 
    /*0002ac28*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*0002ac2c*/ ADD         R4, R3, R1, LSL #2 
    /*0002ac30*/ ADD         R4, R4, #32768              @ 0x8000 
    /*0002ac34*/ LDR         R7, [R4, #1216]             @ 0x4c0 
    /*0002ac38*/ CMP         R7, #1 
    /*0002ac3c*/ BEQ         VI_DRV_UpdateSpreadAttrFromUserSet_x2ac48
    /*0002ac40*/ MOV         R0, #0 
    /*0002ac44*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_UpdateSpreadAttrFromUserSet_x2ac48:
    /*0002ac48*/ MOV         R2, #576                    @ 0x240 
    /*0002ac4c*/ MOV         R6, R1 
    /*0002ac50*/ MUL         R1, R2, R1 
    /*0002ac54*/ ADD         R0, R1, #36608              @ 0x8f00 
    /*0002ac58*/ ADD         R1, R1, #2320               @ 0x910 
    /*0002ac5c*/ ADD         R0, R0, #152                @ 0x98 
    /*0002ac60*/ ADD         R1, R3, R1 
    /*0002ac64*/ ADD         R0, R3, R0 
    /*0002ac68*/ BL          0x000000000002AC68          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002ac6c*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*0002ac70*/ ADD         R1, R6, #4 
    /*0002ac74*/ MOV         R2, #0 
    /*0002ac78*/ MOV         R0, #0 
    /*0002ac7c*/ STR         R2, [R4, #1216]             @ 0x4c0 
    /*0002ac80*/ STR         R7, [R3, R1, LSL #2] 
    /*0002ac84*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_DRV_UpdateSpreadAttrFromUserSet


FUNC_BEGIN VI_DRV_UpdateGdcAttrFromUserSet
    /*0002ac88*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002ac8c*/ MOV         R5, R0 
    /*0002ac90*/ MOV         R4, R1 
    /*0002ac94*/ BL          0x000000000002AC94          @ VI_DRV_UpdateLDCAttrFromUserSet [R_ARM_CALL: .text+0x2aac8] 
    /*0002ac98*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ac9c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002aca0*/ ADD         R3, R3, R5, LSL #2 
    /*0002aca4*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002aca8*/ ADD         R6, R3, R4, LSL #2 
    /*0002acac*/ ADD         R8, R6, #32768              @ 0x8000 
    /*0002acb0*/ LDR         R7, [R8, #1204]             @ 0x4b4 
    /*0002acb4*/ CMP         R7, #1 
    /*0002acb8*/ BEQ         VI_DRV_UpdateGdcAttrFromUserSet_x2ace8
    VI_DRV_UpdateGdcAttrFromUserSet_x2acbc:
    /*0002acbc*/ MOV         R1, R4 
    /*0002acc0*/ MOV         R0, R5 
    /*0002acc4*/ BL          0x000000000002ACC4          @ VI_DRV_UpdateRotationAttrFromUserSet [R_ARM_CALL: .text+0x2ab38] 
    /*0002acc8*/ MOV         R1, R4 
    /*0002accc*/ MOV         R0, R5 
    /*0002acd0*/ BL          0x000000000002ACD0          @ VI_DRV_UpdateRotationAttrExFromUserSet [R_ARM_CALL: .text+0x2aba8] 
    /*0002acd4*/ MOV         R1, R4 
    /*0002acd8*/ MOV         R0, R5 
    /*0002acdc*/ BL          0x000000000002ACDC          @ VI_DRV_UpdateSpreadAttrFromUserSet [R_ARM_CALL: .text+0x2ac18] 
    /*0002ace0*/ MOV         R0, #0 
    /*0002ace4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_UpdateGdcAttrFromUserSet_x2ace8:
    /*0002ace8*/ MOV         R2, #116                    @ 0x74 
    /*0002acec*/ MUL         R1, R2, R4 
    /*0002acf0*/ ADD         R0, R1, #35328              @ 0x8a00 
    /*0002acf4*/ ADD         R1, R1, #896                @ 0x380 
    /*0002acf8*/ ADD         R0, R0, #8 
    /*0002acfc*/ ADD         R1, R3, R1 
    /*0002ad00*/ ADD         R0, R3, R0 
    /*0002ad04*/ BL          0x000000000002AD04          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002ad08*/ MOV         R3, #0 
    /*0002ad0c*/ STR         R3, [R8, #1204]             @ 0x4b4 
    /*0002ad10*/ STR         R7, [R6, #16] 
    /*0002ad14*/ B           VI_DRV_UpdateGdcAttrFromUserSet_x2acbc
FUNC_END VI_DRV_UpdateGdcAttrFromUserSet


FUNC_BEGIN VI_DRV_UpdateChnCropInfoFromUserSet
    /*0002ad18*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ad1c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002ad20*/ ADD         R0, R3, R0, LSL #2 
    /*0002ad24*/ PUSH        {R4, LR} 
    /*0002ad28*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002ad2c*/ ADD         R4, R3, R1, LSL #2 
    /*0002ad30*/ ADD         R4, R4, #32768              @ 0x8000 
    /*0002ad34*/ LDR         R2, [R4, #1252]             @ 0x4e4 
    /*0002ad38*/ CMP         R2, #1 
    /*0002ad3c*/ BEQ         VI_DRV_UpdateChnCropInfoFromUserSet_x2ad48
    /*0002ad40*/ MOV         R0, #0 
    /*0002ad44*/ POP         {R4, PC} 
    VI_DRV_UpdateChnCropInfoFromUserSet_x2ad48:
    /*0002ad48*/ MOV         R2, #24 
    /*0002ad4c*/ MUL         R1, R2, R1 
    /*0002ad50*/ ADD         R0, R1, #37632              @ 0x9300 
    /*0002ad54*/ ADD         R1, R1, #3216               @ 0xc90 
    /*0002ad58*/ ADD         R0, R0, R2 
    /*0002ad5c*/ ADD         R1, R3, R1 
    /*0002ad60*/ ADD         R0, R3, R0 
    /*0002ad64*/ BL          0x000000000002AD64          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002ad68*/ MOV         R3, #0 
    /*0002ad6c*/ MOV         R0, #0 
    /*0002ad70*/ STR         R3, [R4, #1252]             @ 0x4e4 
    /*0002ad74*/ POP         {R4, PC} 
FUNC_END VI_DRV_UpdateChnCropInfoFromUserSet


FUNC_BEGIN VI_DRV_UpdateExtChnAttrFromUserSet
    /*0002ad78*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ad7c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002ad80*/ ADD         R0, R3, R0, LSL #2 
    /*0002ad84*/ SUB         IP, R1, #1 
    /*0002ad88*/ PUSH        {R4, LR} 
    /*0002ad8c*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002ad90*/ ADD         R1, R3, R1, LSL #2 
    /*0002ad94*/ ADD         R4, R1, #32768              @ 0x8000 
    /*0002ad98*/ LDR         R2, [R4, #1216]             @ 0x4c0 
    /*0002ad9c*/ CMP         R2, #1 
    /*0002ada0*/ BEQ         VI_DRV_UpdateExtChnAttrFromUserSet_x2adac
    /*0002ada4*/ MOV         R0, #0 
    /*0002ada8*/ POP         {R4, PC} 
    VI_DRV_UpdateExtChnAttrFromUserSet_x2adac:
    /*0002adac*/ MOV         R2, #40                     @ 0x28 
    /*0002adb0*/ MUL         IP, R2, IP 
    /*0002adb4*/ ADD         R0, IP, #37120              @ 0x9100 
    /*0002adb8*/ ADD         IP, IP, #2896               @ 0xb50 
    /*0002adbc*/ ADD         R0, R0, #216                @ 0xd8 
    /*0002adc0*/ ADD         R1, R3, IP 
    /*0002adc4*/ ADD         R0, R3, R0 
    /*0002adc8*/ BL          0x000000000002ADC8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002adcc*/ MOV         R3, #0 
    /*0002add0*/ MOV         R0, #0 
    /*0002add4*/ STR         R3, [R4, #1216]             @ 0x4c0 
    /*0002add8*/ POP         {R4, PC} 
FUNC_END VI_DRV_UpdateExtChnAttrFromUserSet


FUNC_BEGIN VI_DRV_UpdateExtChnFishEyeAttrFromUserSet
    /*0002addc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ade0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002ade4*/ ADD         R0, R3, R0, LSL #2 
    /*0002ade8*/ SUB         R3, R1, #1 
    /*0002adec*/ PUSH        {R4, LR} 
    /*0002adf0*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0002adf4*/ ADD         R1, R0, R1, LSL #2 
    /*0002adf8*/ ADD         R4, R1, #32768              @ 0x8000 
    /*0002adfc*/ LDR         R2, [R4, #1284]             @ 0x504 
    /*0002ae00*/ CMP         R2, #1 
    /*0002ae04*/ BEQ         VI_DRV_UpdateExtChnFishEyeAttrFromUserSet_x2ae10
    /*0002ae08*/ MOV         R0, #0 
    /*0002ae0c*/ POP         {R4, PC} 
    VI_DRV_UpdateExtChnFishEyeAttrFromUserSet_x2ae10:
    /*0002ae10*/ MOVW        R2, #3816                   @ 0xee8 
    /*0002ae14*/ MUL         R3, R2, R3 
    /*0002ae18*/ ADD         R1, R3, #3424               @ 0xd60 
    /*0002ae1c*/ ADD         R3, R3, #37632              @ 0x9300 
    /*0002ae20*/ ADD         R3, R3, #240                @ 0xf0 
    /*0002ae24*/ ADD         R1, R1, #8 
    /*0002ae28*/ ADD         R1, R0, R1 
    /*0002ae2c*/ ADD         R0, R0, R3 
    /*0002ae30*/ BL          0x000000000002AE30          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002ae34*/ MOV         R3, #0 
    /*0002ae38*/ MOV         R0, #0 
    /*0002ae3c*/ STR         R3, [R4, #1284]             @ 0x504 
    /*0002ae40*/ POP         {R4, PC} 
FUNC_END VI_DRV_UpdateExtChnFishEyeAttrFromUserSet


FUNC_BEGIN VI_DRV_UpdateWorkingPipeDrvAttr
    /*0002ae44*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002ae48*/ LSL         R6, R0, #2 
    /*0002ae4c*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ae50*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002ae54*/ ADD         R8, R4, R6 
    /*0002ae58*/ MOV         R7, R0 
    /*0002ae5c*/ LDR         R0, [R8, #728]              @ 0x2d8 
    /*0002ae60*/ ADD         R5, R0, #32768              @ 0x8000 
    /*0002ae64*/ LDR         R3, [R5, #2040]             @ 0x7f8 
    /*0002ae68*/ CMP         R3, #1 
    /*0002ae6c*/ BEQ         VI_DRV_UpdateWorkingPipeDrvAttr_x2aedc
    VI_DRV_UpdateWorkingPipeDrvAttr_x2ae70:
    /*0002ae70*/ LDR         R3, [R5, #2048]             @ 0x800 
    /*0002ae74*/ ADD         R4, R4, R6 
    /*0002ae78*/ CMP         R3, #1 
    /*0002ae7c*/ ADDEQ       R0, R0, #65536              @ 0x10000 
    /*0002ae80*/ LDREQ       R2, [R5, #1436]             @ 0x59c 
    /*0002ae84*/ MOVEQ       R3, #0 
    /*0002ae88*/ STREQ       R2, [R0, #3108]             @ 0xc24 
    /*0002ae8c*/ MOV         R0, R7 
    /*0002ae90*/ STREQ       R3, [R5, #2048]             @ 0x800 
    /*0002ae94*/ BL          0x000000000002AE94          @ VI_DRV_UpdatePipeNrParamFromUserSet [R_ARM_CALL: .text+0x2a978] 
    /*0002ae98*/ LDR         R0, [R4, #728]              @ 0x2d8 
    /*0002ae9c*/ ADD         R4, R0, #32768              @ 0x8000 
    /*0002aea0*/ LDR         R3, [R4, #2052]             @ 0x804 
    /*0002aea4*/ CMP         R3, #1 
    /*0002aea8*/ BEQ         VI_DRV_UpdateWorkingPipeDrvAttr_x2aeb4
    /*0002aeac*/ MOV         R0, #0 
    /*0002aeb0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_UpdateWorkingPipeDrvAttr_x2aeb4:
    /*0002aeb4*/ ADD         R1, R0, #34048              @ 0x8500 
    /*0002aeb8*/ ADD         R0, R0, #68608              @ 0x10c00 
    /*0002aebc*/ ADD         R1, R1, #160                @ 0xa0 
    /*0002aec0*/ MOV         R2, #12 
    /*0002aec4*/ ADD         R0, R0, #40                 @ 0x28 
    /*0002aec8*/ BL          0x000000000002AEC8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002aecc*/ MOV         R3, #0 
    /*0002aed0*/ MOV         R0, #0 
    /*0002aed4*/ STR         R3, [R4, #2052]             @ 0x804 
    /*0002aed8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_UpdateWorkingPipeDrvAttr_x2aedc:
    /*0002aedc*/ ADD         R1, R0, #34048              @ 0x8500 
    /*0002aee0*/ ADD         R0, R0, #67584              @ 0x10800 
    /*0002aee4*/ ADD         R1, R1, #44                 @ 0x2c 
    /*0002aee8*/ ADD         R0, R0, #948                @ 0x3b4 
    /*0002aeec*/ MOV         R2, #68                     @ 0x44 
    /*0002aef0*/ BL          0x000000000002AEF0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002aef4*/ LDR         R0, [R8, #728]              @ 0x2d8 
    /*0002aef8*/ MOV         R3, #0 
    /*0002aefc*/ STR         R3, [R5, #2040]             @ 0x7f8 
    /*0002af00*/ ADD         R5, R0, #32768              @ 0x8000 
    /*0002af04*/ B           VI_DRV_UpdateWorkingPipeDrvAttr_x2ae70
FUNC_END VI_DRV_UpdateWorkingPipeDrvAttr


FUNC_BEGIN VI_DRV_UpdateWorkingChnDrvAttr
    /*0002af08*/ CMP         R1, #8 
    /*0002af0c*/ BHI         VI_DRV_UpdateWorkingChnDrvAttr_x2af80
    /*0002af10*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0002af14*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002af18*/ LSL         SL, R0, #2 
    /*0002af1c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002af20*/ ADD         R9, R4, SL 
    /*0002af24*/ LSL         R8, R1, #2 
    /*0002af28*/ MOV         R7, R0 
    /*0002af2c*/ MOV         R5, R1 
    /*0002af30*/ LDR         R3, [R9, #728]              @ 0x2d8 
    /*0002af34*/ ADD         R6, R3, R8 
    /*0002af38*/ ADD         R6, R6, #32768              @ 0x8000 
    /*0002af3c*/ LDR         R2, [R6, #1252]             @ 0x4e4 
    /*0002af40*/ CMP         R2, #1 
    /*0002af44*/ BEQ         VI_DRV_UpdateWorkingChnDrvAttr_x2afdc
    VI_DRV_UpdateWorkingChnDrvAttr_x2af48:
    /*0002af48*/ CMP         R5, #0 
    /*0002af4c*/ BEQ         VI_DRV_UpdateWorkingChnDrvAttr_x2af88
    /*0002af50*/ ADD         R2, R3, R8 
    /*0002af54*/ SUB         R5, R5, #1 
    /*0002af58*/ ADD         R6, R2, #32768              @ 0x8000 
    /*0002af5c*/ LDR         R1, [R6, #1216]             @ 0x4c0 
    /*0002af60*/ CMP         R1, #1 
    /*0002af64*/ BEQ         VI_DRV_UpdateWorkingChnDrvAttr_x2b00c
    VI_DRV_UpdateWorkingChnDrvAttr_x2af68:
    /*0002af68*/ ADD         R4, R2, #32768              @ 0x8000 
    /*0002af6c*/ LDR         R2, [R4, #1284]             @ 0x504 
    /*0002af70*/ CMP         R2, #1 
    /*0002af74*/ BEQ         VI_DRV_UpdateWorkingChnDrvAttr_x2afac
    VI_DRV_UpdateWorkingChnDrvAttr_x2af78:
    /*0002af78*/ MOV         R0, #0 
    /*0002af7c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_DRV_UpdateWorkingChnDrvAttr_x2af80:
    /*0002af80*/ MOV         R0, #0 
    /*0002af84*/ BX          LR 
    VI_DRV_UpdateWorkingChnDrvAttr_x2af88:
    /*0002af88*/ ADD         R4, R3, #32768              @ 0x8000 
    /*0002af8c*/ LDR         R2, [R4, #2044]             @ 0x7fc 
    /*0002af90*/ CMP         R2, #1 
    /*0002af94*/ BEQ         VI_DRV_UpdateWorkingChnDrvAttr_x2b044
    VI_DRV_UpdateWorkingChnDrvAttr_x2af98:
    /*0002af98*/ MOV         R0, R7 
    /*0002af9c*/ MOV         R1, #0 
    /*0002afa0*/ BL          0x000000000002AFA0          @ VI_DRV_UpdateGdcAttrFromUserSet [R_ARM_CALL: .text+0x2ac88] 
    /*0002afa4*/ MOV         R0, #0 
    /*0002afa8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_DRV_UpdateWorkingChnDrvAttr_x2afac:
    /*0002afac*/ MOVW        R2, #3816                   @ 0xee8 
    /*0002afb0*/ MUL         R5, R2, R5 
    /*0002afb4*/ ADD         R1, R5, #3424               @ 0xd60 
    /*0002afb8*/ ADD         R0, R5, #37632              @ 0x9300 
    /*0002afbc*/ ADD         R1, R1, #8 
    /*0002afc0*/ ADD         R0, R0, #240                @ 0xf0 
    /*0002afc4*/ ADD         R1, R3, R1 
    /*0002afc8*/ ADD         R0, R3, R0 
    /*0002afcc*/ BL          0x000000000002AFCC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002afd0*/ MOV         R3, #0 
    /*0002afd4*/ STR         R3, [R4, #1284]             @ 0x504 
    /*0002afd8*/ B           VI_DRV_UpdateWorkingChnDrvAttr_x2af78
    VI_DRV_UpdateWorkingChnDrvAttr_x2afdc:
    /*0002afdc*/ MOV         R2, #24 
    /*0002afe0*/ MUL         R1, R2, R1 
    /*0002afe4*/ ADD         R0, R1, #37632              @ 0x9300 
    /*0002afe8*/ ADD         R1, R1, #3216               @ 0xc90 
    /*0002afec*/ ADD         R0, R0, R2 
    /*0002aff0*/ ADD         R1, R3, R1 
    /*0002aff4*/ ADD         R0, R3, R0 
    /*0002aff8*/ BL          0x000000000002AFF8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002affc*/ MOV         R2, #0 
    /*0002b000*/ LDR         R3, [R9, #728]              @ 0x2d8 
    /*0002b004*/ STR         R2, [R6, #1252]             @ 0x4e4 
    /*0002b008*/ B           VI_DRV_UpdateWorkingChnDrvAttr_x2af48
    VI_DRV_UpdateWorkingChnDrvAttr_x2b00c:
    /*0002b00c*/ MOV         R2, #40                     @ 0x28 
    /*0002b010*/ ADD         R4, R4, SL 
    /*0002b014*/ MUL         R1, R2, R5 
    /*0002b018*/ ADD         R0, R1, #37120              @ 0x9100 
    /*0002b01c*/ ADD         R1, R1, #2896               @ 0xb50 
    /*0002b020*/ ADD         R0, R0, #216                @ 0xd8 
    /*0002b024*/ ADD         R1, R3, R1 
    /*0002b028*/ ADD         R0, R3, R0 
    /*0002b02c*/ BL          0x000000000002B02C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002b030*/ MOV         R3, #0 
    /*0002b034*/ STR         R3, [R6, #1216]             @ 0x4c0 
    /*0002b038*/ LDR         R3, [R4, #728]              @ 0x2d8 
    /*0002b03c*/ ADD         R2, R3, R8 
    /*0002b040*/ B           VI_DRV_UpdateWorkingChnDrvAttr_x2af68
    VI_DRV_UpdateWorkingChnDrvAttr_x2b044:
    /*0002b044*/ ADD         R1, R3, #34048              @ 0x8500 
    /*0002b048*/ ADD         R0, R3, #67584              @ 0x10800 
    /*0002b04c*/ ADD         R1, R1, #112                @ 0x70 
    /*0002b050*/ ADD         R0, R0, #1016               @ 0x3f8 
    /*0002b054*/ MOV         R2, #44                     @ 0x2c 
    /*0002b058*/ BL          0x000000000002B058          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002b05c*/ STR         R5, [R4, #2044]             @ 0x7fc 
    /*0002b060*/ B           VI_DRV_UpdateWorkingChnDrvAttr_x2af98
FUNC_END VI_DRV_UpdateWorkingChnDrvAttr


FUNC_BEGIN VI_DRV_UpdateWorkingPipeChnDrvAttr
    /*0002b064*/ PUSH        {R4, R5, R6, LR} 
    /*0002b068*/ MOV         R5, R0 
    /*0002b06c*/ BL          0x000000000002B06C          @ VI_DRV_UpdateWorkingPipeDrvAttr [R_ARM_CALL: .text+0x2ae44] 
    /*0002b070*/ MOV         R4, #0 
    VI_DRV_UpdateWorkingPipeChnDrvAttr_x2b074:
    /*0002b074*/ MOV         R1, R4 
    /*0002b078*/ MOV         R0, R5 
    /*0002b07c*/ ADD         R4, R4, #1 
    /*0002b080*/ BL          0x000000000002B080          @ VI_DRV_UpdateWorkingChnDrvAttr [R_ARM_CALL: .text+0x2af08] 
    /*0002b084*/ CMP         R4, #9 
    /*0002b088*/ BNE         VI_DRV_UpdateWorkingPipeChnDrvAttr_x2b074
    /*0002b08c*/ MOV         R0, #0 
    /*0002b090*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_UpdateWorkingPipeChnDrvAttr


FUNC_BEGIN VI_DRV_SetExtChnFisheyeAttr
    /*0002b094*/ PUSH        {R4, R5, R6, LR} 
    /*0002b098*/ SUB         R4, R1, #1 
    /*0002b09c*/ MOVW        R5, #3816                   @ 0xee8 
    /*0002b0a0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b0a4*/ MUL         R5, R5, R4 
    /*0002b0a8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b0ac*/ ADD         R0, R3, R0, LSL #2 
    /*0002b0b0*/ MOV         R1, R2 
    /*0002b0b4*/ MOV         R2, #3808                   @ 0xee0 
    /*0002b0b8*/ LDR         R6, [R0, #728]              @ 0x2d8 
    /*0002b0bc*/ ADD         R0, R5, #3440               @ 0xd70 
    /*0002b0c0*/ ADD         R0, R6, R0 
    /*0002b0c4*/ ADD         R5, R6, R5 
    /*0002b0c8*/ BL          0x000000000002B0C8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002b0cc*/ ADD         R1, R4, #8512               @ 0x2140 
    /*0002b0d0*/ ADD         R1, R1, #2 
    /*0002b0d4*/ MOV         R3, #1 
    /*0002b0d8*/ MOV         R0, #0 
    /*0002b0dc*/ STR         R3, [R5, #3432]             @ 0xd68 
    /*0002b0e0*/ STR         R3, [R6, R1, LSL #2] 
    /*0002b0e4*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_SetExtChnFisheyeAttr


FUNC_BEGIN VI_DRV_GetExtChnFisheyeAttr
    /*0002b0e8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002b0ec*/ SUB         LR, R1, #1 
    /*0002b0f0*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b0f4*/ MOVW        R3, #3816                   @ 0xee8 
    /*0002b0f8*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b0fc*/ SUB         SP, SP, #20 
    /*0002b100*/ ADD         IP, IP, R0, LSL #2 
    /*0002b104*/ MUL         R3, R3, LR 
    /*0002b108*/ LDR         IP, [IP, #728]              @ 0x2d8 
    /*0002b10c*/ ADD         LR, IP, R3 
    /*0002b110*/ LDR         LR, [LR, #3432]             @ 0xd68 
    /*0002b114*/ CMP         LR, #1 
    /*0002b118*/ BNE         VI_DRV_GetExtChnFisheyeAttr_x2b140
    /*0002b11c*/ ADD         R3, R3, #6976               @ 0x1b40 
    /*0002b120*/ MOV         R0, R2 
    /*0002b124*/ ADD         R3, R3, #52                 @ 0x34 
    /*0002b128*/ MOV         R2, #216                    @ 0xd8 
    /*0002b12c*/ ADD         R1, IP, R3 
    /*0002b130*/ BL          0x000000000002B130          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002b134*/ MOV         R0, #0 
    VI_DRV_GetExtChnFisheyeAttr_x2b138:
    /*0002b138*/ ADD         SP, SP, #20 
    /*0002b13c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_GetExtChnFisheyeAttr_x2b140:
    /*0002b140*/ STR         R1, [SP, #8] 
    /*0002b144*/ MOVW        R3, #4894                   @ 0x131e 
    /*0002b148*/ STR         R0, [SP, #4] 
    /*0002b14c*/ MOVW        R2, #0                      @ .LC187 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd7fc] 
    /*0002b150*/ STR         R3, [SP] 
    /*0002b154*/ MOVT        R2, #0                      @ .LC187 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd7fc] 
    /*0002b158*/ LDR         R3, [PC, #20]               @ 0x000000000002b174 
    /*0002b15c*/ MOV         R1, #16 
    /*0002b160*/ MOV         R0, #3 
    /*0002b164*/ BL          0x000000000002B164          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002b168*/ MOVW        R0, #32775                  @ 0x8007 
    /*0002b16c*/ MOVT        R0, #40976                  @ 0xa010 
    /*0002b170*/ B           VI_DRV_GetExtChnFisheyeAttr_x2b138
    /*0002b174*/ @           <UNDEFINED> instruction: 0x00001ab8 
FUNC_END VI_DRV_GetExtChnFisheyeAttr


FUNC_BEGIN VI_DRV_ExtChnFisheyeConfiged
    /*0002b178*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b17c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b180*/ ADD         R0, R3, R0, LSL #2 
    /*0002b184*/ SUB         R1, R1, #1 
    /*0002b188*/ MOVW        R2, #3816                   @ 0xee8 
    /*0002b18c*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002b190*/ MLA         R1, R2, R1, R3 
    /*0002b194*/ LDR         R0, [R1, #3432]             @ 0xd68 
    /*0002b198*/ BX          LR 
FUNC_END VI_DRV_ExtChnFisheyeConfiged


FUNC_BEGIN VI_DRV_NeedDoExtChnFisheye
    /*0002b19c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b1a0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b1a4*/ ADD         R0, R3, R0, LSL #2 
    /*0002b1a8*/ SUB         R1, R1, #1 
    /*0002b1ac*/ MOVW        IP, #3816                   @ 0xee8 
    /*0002b1b0*/ MOVW        R3, #37872                  @ 0x93f0 
    /*0002b1b4*/ LDR         R2, [R0, #728]              @ 0x2d8 
    /*0002b1b8*/ MLA         R1, IP, R1, R2 
    /*0002b1bc*/ LDR         R3, [R1, R3] 
    /*0002b1c0*/ CMP         R3, #1 
    /*0002b1c4*/ MOVWEQ      R3, #41468                  @ 0xa1fc 
    /*0002b1c8*/ LDREQ       R0, [R1, R3] 
    /*0002b1cc*/ MOVNE       R0, #0 
    /*0002b1d0*/ BX          LR 
FUNC_END VI_DRV_NeedDoExtChnFisheye


FUNC_BEGIN VI_DRV_IsExtChnFisheyeEnable
    /*0002b1d4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b1d8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b1dc*/ ADD         R0, R3, R0, LSL #2 
    /*0002b1e0*/ SUB         R1, R1, #1 
    /*0002b1e4*/ MOVW        R2, #3816                   @ 0xee8 
    /*0002b1e8*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002b1ec*/ MLA         R1, R2, R1, R3 
    /*0002b1f0*/ LDR         R3, [R1, #3432]             @ 0xd68 
    /*0002b1f4*/ CMP         R3, #1 
    /*0002b1f8*/ MOVWEQ      R3, #7028                   @ 0x1b74 
    /*0002b1fc*/ LDREQ       R0, [R1, R3] 
    /*0002b200*/ MOVNE       R0, #0 
    /*0002b204*/ BX          LR 
FUNC_END VI_DRV_IsExtChnFisheyeEnable


FUNC_BEGIN VI_DRV_GetExtChnFisheyeWorkingAttr
    /*0002b208*/ SUB         R1, R1, #1 
    /*0002b20c*/ MOVW        IP, #37880                  @ 0x93f8 
    /*0002b210*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002b214*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b218*/ MOVW        LR, #3816                   @ 0xee8 
    /*0002b21c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b220*/ MLA         IP, LR, R1, IP 
    /*0002b224*/ ADD         R3, R3, R0, LSL #2 
    /*0002b228*/ MOV         R0, #0 
    /*0002b22c*/ LDR         R1, [R3, #728]              @ 0x2d8 
    /*0002b230*/ ADD         R1, R1, IP 
    /*0002b234*/ STR         R1, [R2] 
    /*0002b238*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_GetExtChnFisheyeWorkingAttr


FUNC_BEGIN VI_DRV_IsSupportExtChn
    /*0002b23c*/ MOV         R0, #1 
    /*0002b240*/ BX          LR 
FUNC_END VI_DRV_IsSupportExtChn


FUNC_BEGIN VI_DRV_CalcCurPicSize
    /*0002b244*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b248*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b24c*/ ADD         R0, R3, R0, LSL #2 
    /*0002b250*/ CMP         R1, #1 
    /*0002b254*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002b258*/ BLS         VI_DRV_CalcCurPicSize_x2b2c0
    /*0002b25c*/ SUB         R2, R1, #2 
    /*0002b260*/ CMP         R2, #1 
    /*0002b264*/ BLS         VI_DRV_CalcCurPicSize_x2b2a8
    /*0002b268*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002b26c*/ SUB         SP, SP, #12 
    /*0002b270*/ MOV         R0, #0 
    /*0002b274*/ MOVW        IP, #4978                   @ 0x1372 
    /*0002b278*/ STR         R0, [R3, #272]              @ 0x110 
    /*0002b27c*/ MOVW        R2, #0                      @ .LC188 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd86c] 
    /*0002b280*/ STR         R0, [R3, #276]              @ 0x114 
    /*0002b284*/ MOVT        R2, #0                      @ .LC188 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd86c] 
    /*0002b288*/ STR         R1, [SP, #4] 
    /*0002b28c*/ MOV         R0, #3 
    /*0002b290*/ MOV         R1, #16 
    /*0002b294*/ STR         IP, [SP] 
    /*0002b298*/ LDR         R3, [PC, #56]               @ 0x000000000002b2d8 
    /*0002b29c*/ BL          0x000000000002B29C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002b2a0*/ ADD         SP, SP, #12 
    /*0002b2a4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CalcCurPicSize_x2b2a8:
    /*0002b2a8*/ ADD         R2, R3, #65536              @ 0x10000 
    /*0002b2ac*/ LDR         R1, [R2, #3008]             @ 0xbc0 
    /*0002b2b0*/ STR         R1, [R3, #272]              @ 0x110 
    /*0002b2b4*/ LDR         R2, [R2, #3012]             @ 0xbc4 
    /*0002b2b8*/ STR         R2, [R3, #276]              @ 0x114 
    /*0002b2bc*/ BX          LR 
    VI_DRV_CalcCurPicSize_x2b2c0:
    /*0002b2c0*/ ADD         R2, R3, #86016              @ 0x15000 
    /*0002b2c4*/ LDR         R1, [R2, #356]              @ 0x164 
    /*0002b2c8*/ STR         R1, [R3, #272]              @ 0x110 
    /*0002b2cc*/ LDR         R2, [R2, #360]              @ 0x168 
    /*0002b2d0*/ STR         R2, [R3, #276]              @ 0x114 
    /*0002b2d4*/ BX          LR 
    /*0002b2d8*/ LDRDEQ      R1, [R0], -R4 
FUNC_END VI_DRV_CalcCurPicSize


FUNC_BEGIN VI_DRV_CalcCrop
    /*0002b2dc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002b2e0*/ SUB         SP, SP, #28 
    /*0002b2e4*/ CMP         R1, #0 
    /*0002b2e8*/ LDR         R1, [R2] 
    /*0002b2ec*/ LDR         R0, [SP, #64]               @ 0x40 
    /*0002b2f0*/ MOVEQ       IP, #120                    @ 0x78 
    /*0002b2f4*/ MOVNE       IP, #32 
    /*0002b2f8*/ CMP         R1, #0 
    /*0002b2fc*/ LDM         R0, {R5, R6} 
    /*0002b300*/ BEQ         VI_DRV_CalcCrop_x2b3e0
    /*0002b304*/ MOV         R4, R3 
    /*0002b308*/ LDR         R3, [R2, #4] 
    /*0002b30c*/ CMP         R3, #0 
    /*0002b310*/ BEQ         VI_DRV_CalcCrop_x2b394
    /*0002b314*/ LDR         R3, [R2, #8] 
    /*0002b318*/ CMP         R5, R3 
    /*0002b31c*/ MOV         R0, R3 
    /*0002b320*/ LDRCC       R1, [R2, #12] 
    /*0002b324*/ BCC         VI_DRV_CalcCrop_x2b458
    /*0002b328*/ LDR         LR, [R2, #12] 
    /*0002b32c*/ CMP         R6, LR 
    /*0002b330*/ MOV         R1, LR 
    /*0002b334*/ LDRCS       R8, [R2, #16] 
    /*0002b338*/ LDRCS       R7, [R2, #20] 
    /*0002b33c*/ BCC         VI_DRV_CalcCrop_x2b458
    VI_DRV_CalcCrop_x2b340:
    /*0002b340*/ BIC         R2, R0, #1 
    /*0002b344*/ BIC         LR, LR, #1 
    /*0002b348*/ SUB         R3, R5, R2 
    /*0002b34c*/ SUB         R1, R6, LR 
    /*0002b350*/ CMP         R3, R8 
    /*0002b354*/ STR         R2, [R4] 
    /*0002b358*/ STR         LR, [R4, #4] 
    /*0002b35c*/ MOVCS       R3, R8 
    /*0002b360*/ CMP         R1, R7 
    /*0002b364*/ BIC         R3, R3, #3 
    /*0002b368*/ STR         R3, [R4, #8] 
    /*0002b36c*/ MOVCS       R1, R7 
    /*0002b370*/ BIC         R1, R1, #3 
    /*0002b374*/ CMP         R1, IP 
    /*0002b378*/ CMPCS       R3, IP 
    /*0002b37c*/ STR         R1, [R4, #12] 
    /*0002b380*/ MOVCC       R0, #1 
    /*0002b384*/ MOVCS       R0, #0 
    /*0002b388*/ BCC         VI_DRV_CalcCrop_x2b404
    VI_DRV_CalcCrop_x2b38c:
    /*0002b38c*/ ADD         SP, SP, #28 
    /*0002b390*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_CalcCrop_x2b394:
    /*0002b394*/ LDR         SL, [R2, #8] 
    /*0002b398*/ MOVW        R3, #19923                  @ 0x4dd3 
    /*0002b39c*/ LDR         R8, [R2, #12] 
    /*0002b3a0*/ MOVT        R3, #4194                   @ 0x1062 
    /*0002b3a4*/ LDR         R0, [R2, #16] 
    /*0002b3a8*/ LDR         R2, [R2, #20] 
    /*0002b3ac*/ MUL         SL, SL, R5 
    /*0002b3b0*/ MUL         R8, R8, R6 
    /*0002b3b4*/ MUL         R0, R0, R5 
    /*0002b3b8*/ MUL         R2, R2, R6 
    /*0002b3bc*/ UMULL       R8, R9, R8, R3 
    /*0002b3c0*/ UMULL       R0, R1, R0, R3 
    /*0002b3c4*/ UMULL       SL, FP, SL, R3 
    /*0002b3c8*/ LSR         LR, R9, #6 
    /*0002b3cc*/ UMULL       R2, R3, R2, R3 
    /*0002b3d0*/ LSR         R8, R1, #6 
    /*0002b3d4*/ LSR         R0, FP, #6 
    /*0002b3d8*/ LSR         R7, R3, #6 
    /*0002b3dc*/ B           VI_DRV_CalcCrop_x2b340
    VI_DRV_CalcCrop_x2b3e0:
    /*0002b3e0*/ BIC         R5, R5, #3 
    /*0002b3e4*/ BIC         R6, R6, #3 
    /*0002b3e8*/ MOV         R0, R1 
    /*0002b3ec*/ STR         R5, [R3, #8] 
    /*0002b3f0*/ STR         R6, [R3, #12] 
    /*0002b3f4*/ STR         R1, [R3] 
    /*0002b3f8*/ STR         R1, [R3, #4] 
    /*0002b3fc*/ ADD         SP, SP, #28 
    /*0002b400*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_CalcCrop_x2b404:
    /*0002b404*/ MOVW        R2, #0                      @ .LC190 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd90c] 
    /*0002b408*/ MOVT        R2, #0                      @ .LC190 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd90c] 
    /*0002b40c*/ MOVW        R0, #5054                   @ 0x13be 
    /*0002b410*/ STR         IP, [SP, #16] 
    /*0002b414*/ STR         IP, [SP, #12] 
    /*0002b418*/ STR         R1, [SP, #8] 
    VI_DRV_CalcCrop_x2b41c:
    /*0002b41c*/ STR         R3, [SP, #4] 
    /*0002b420*/ MOV         R1, #16 
    /*0002b424*/ STR         R0, [SP] 
    /*0002b428*/ MOV         R0, #3 
    /*0002b42c*/ LDR         R3, [PC, #64]               @ 0x000000000002b474 
    /*0002b430*/ BIC         R5, R5, #3 
    /*0002b434*/ BL          0x000000000002B434          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002b438*/ BIC         R6, R6, #3 
    /*0002b43c*/ MOV         R3, #0 
    /*0002b440*/ STR         R5, [R4, #8] 
    /*0002b444*/ STR         R6, [R4, #12] 
    /*0002b448*/ MVN         R0, #0 
    /*0002b44c*/ STR         R3, [R4] 
    /*0002b450*/ STR         R3, [R4, #4] 
    /*0002b454*/ B           VI_DRV_CalcCrop_x2b38c
    VI_DRV_CalcCrop_x2b458:
    /*0002b458*/ MOVW        R2, #0                      @ .LC189 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd8a4] 
    /*0002b45c*/ STR         R6, [SP, #16] 
    /*0002b460*/ MOVW        R0, #5018                   @ 0x139a 
    /*0002b464*/ STR         R5, [SP, #12] 
    /*0002b468*/ STR         R1, [SP, #8] 
    /*0002b46c*/ MOVT        R2, #0                      @ .LC189 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd8a4] 
    /*0002b470*/ B           VI_DRV_CalcCrop_x2b41c
    /*0002b474*/ ANDEQ       R1, R0, IP, ROR #21 
FUNC_END VI_DRV_CalcCrop


FUNC_BEGIN VI_DRV_CheckExtChnFishEyeAttr
    /*0002b478*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b47c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b480*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0002b484*/ ADD         R5, R3, R0, LSL #2 
    /*0002b488*/ MOV         R7, R1 
    /*0002b48c*/ SUB         SP, SP, #108                @ 0x6c 
    /*0002b490*/ LDR         R1, [R5, #728]              @ 0x2d8 
    /*0002b494*/ MOV         R8, R0 
    /*0002b498*/ ADD         R3, R1, R7, LSL #2 
    /*0002b49c*/ LDR         R3, [R3, #20] 
    /*0002b4a0*/ CMP         R3, #0 
    /*0002b4a4*/ BEQ         VI_DRV_CheckExtChnFishEyeAttr_x2b58c
    /*0002b4a8*/ SUB         R4, R7, #1 
    /*0002b4ac*/ MOV         R3, #40                     @ 0x28 
    /*0002b4b0*/ MOV         IP, #44                     @ 0x2c 
    /*0002b4b4*/ ADD         R9, SP, #60                 @ 0x3c 
    /*0002b4b8*/ MLA         R4, R3, R4, R1 
    /*0002b4bc*/ ADD         R6, R2, #3584               @ 0xe00 
    /*0002b4c0*/ MOV         R0, R9 
    /*0002b4c4*/ MOV         R2, IP 
    /*0002b4c8*/ ADD         R6, R6, #4 
    /*0002b4cc*/ LDR         R3, [R4, #2900]             @ 0xb54 
    /*0002b4d0*/ MLA         R1, IP, R3, R1 
    /*0002b4d4*/ ADD         R1, R1, #34048              @ 0x8500 
    /*0002b4d8*/ ADD         R1, R1, #112                @ 0x70 
    /*0002b4dc*/ BL          0x000000000002B4DC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002b4e0*/ MOV         IP, #24 
    /*0002b4e4*/ MUL         IP, IP, R7 
    /*0002b4e8*/ LDR         R2, [R5, #728]              @ 0x2d8 
    /*0002b4ec*/ MOV         R1, R7 
    /*0002b4f0*/ ADD         R3, SP, #36                 @ 0x24 
    /*0002b4f4*/ STR         R9, [SP] 
    /*0002b4f8*/ MOV         R0, R8 
    /*0002b4fc*/ ADD         IP, IP, #3216               @ 0xc90 
    /*0002b500*/ ADD         R2, R2, IP 
    /*0002b504*/ BL          0x000000000002B504          @ VI_DRV_CalcCrop [R_ARM_CALL: .text+0x2b2dc] 
    /*0002b508*/ LDR         R3, [R4, #2904]             @ 0xb58 
    /*0002b50c*/ LDR         LR, [SP, #44]               @ 0x2c 
    /*0002b510*/ MOV         R0, #37                     @ 0x25 
    /*0002b514*/ LDR         IP, [SP, #48]               @ 0x30 
    /*0002b518*/ STR         R3, [SP, #36]               @ 0x24 
    /*0002b51c*/ LDR         R3, [R4, #2908]             @ 0xb5c 
    /*0002b520*/ LDR         R1, [SP, #68]               @ 0x44 
    /*0002b524*/ LDR         R2, [SP, #80]               @ 0x50 
    /*0002b528*/ STR         R3, [SP, #40]               @ 0x28 
    /*0002b52c*/ LDR         R3, [R4, #2912]             @ 0xb60 
    /*0002b530*/ STR         LR, [SP, #16] 
    /*0002b534*/ STR         IP, [SP, #20] 
    /*0002b538*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0002b53c*/ LDR         R3, [R4, #2920]             @ 0xb68 
    /*0002b540*/ STR         R1, [SP, #24] 
    /*0002b544*/ STR         R2, [SP, #28] 
    /*0002b548*/ STR         R3, [SP, #48]               @ 0x30 
    /*0002b54c*/ LDR         R3, [R4, #2916]             @ 0xb64 
    /*0002b550*/ STR         R3, [SP, #52]               @ 0x34 
    /*0002b554*/ BL          0x000000000002B554          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002b558*/ CMP         R0, #0 
    /*0002b55c*/ BEQ         VI_DRV_CheckExtChnFishEyeAttr_x2b5c0
    /*0002b560*/ LDR         R3, [R0, #36]               @ 0x24 
    /*0002b564*/ CMP         R3, #0 
    /*0002b568*/ BEQ         VI_DRV_CheckExtChnFishEyeAttr_x2b5c0
    /*0002b56c*/ MOV         R2, R6 
    /*0002b570*/ ADD         R1, SP, #36                 @ 0x24 
    /*0002b574*/ ADD         R0, SP, #16 
    /*0002b578*/ BLX         R3 
    /*0002b57c*/ CMP         R0, #0 
    /*0002b580*/ BNE         VI_DRV_CheckExtChnFishEyeAttr_x2b5ec
    VI_DRV_CheckExtChnFishEyeAttr_x2b584:
    /*0002b584*/ ADD         SP, SP, #108                @ 0x6c 
    /*0002b588*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_CheckExtChnFishEyeAttr_x2b58c:
    /*0002b58c*/ MOVW        R3, #4827                   @ 0x12db 
    /*0002b590*/ STR         R0, [SP, #4] 
    /*0002b594*/ STR         R3, [SP] 
    /*0002b598*/ MOVW        R2, #0                      @ .LC191 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd974] 
    /*0002b59c*/ STR         R7, [SP, #8] 
    /*0002b5a0*/ MOVT        R2, #0                      @ .LC191 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd974] 
    /*0002b5a4*/ LDR         R3, [PC, #108]              @ 0x000000000002b618 
    /*0002b5a8*/ MOV         R1, #16 
    /*0002b5ac*/ MOV         R0, #3 
    /*0002b5b0*/ BL          0x000000000002B5B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002b5b4*/ MOVW        R0, #32777                  @ 0x8009 
    /*0002b5b8*/ MOVT        R0, #40976                  @ 0xa010 
    /*0002b5bc*/ B           VI_DRV_CheckExtChnFishEyeAttr_x2b584
    VI_DRV_CheckExtChnFishEyeAttr_x2b5c0:
    /*0002b5c0*/ MOVW        R3, #4853                   @ 0x12f5 
    /*0002b5c4*/ MOVW        R2, #0                      @ .LC192 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd9b8] 
    /*0002b5c8*/ STR         R3, [SP] 
    /*0002b5cc*/ MOVT        R2, #0                      @ .LC192 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd9b8] 
    /*0002b5d0*/ LDR         R3, [PC, #64]               @ 0x000000000002b618 
    /*0002b5d4*/ MOV         R1, #16 
    /*0002b5d8*/ MOV         R0, #3 
    /*0002b5dc*/ BL          0x000000000002B5DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002b5e0*/ MOVW        R0, #32777                  @ 0x8009 
    /*0002b5e4*/ MOVT        R0, #40976                  @ 0xa010 
    /*0002b5e8*/ B           VI_DRV_CheckExtChnFishEyeAttr_x2b584
    VI_DRV_CheckExtChnFishEyeAttr_x2b5ec:
    /*0002b5ec*/ MOVW        R3, #4861                   @ 0x12fd 
    /*0002b5f0*/ MOVW        R2, #0                      @ .LC193 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd9fc] 
    /*0002b5f4*/ STR         R3, [SP] 
    /*0002b5f8*/ MOVT        R2, #0                      @ .LC193 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd9fc] 
    /*0002b5fc*/ LDR         R3, [PC, #20]               @ 0x000000000002b618 
    /*0002b600*/ MOV         R1, #16 
    /*0002b604*/ MOV         R0, #3 
    /*0002b608*/ BL          0x000000000002B608          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002b60c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0002b610*/ MOVT        R0, #40976                  @ 0xa010 
    /*0002b614*/ B           VI_DRV_CheckExtChnFishEyeAttr_x2b584
    /*0002b618*/ STRDEQ      R1, [R0], -IP 
FUNC_END VI_DRV_CheckExtChnFishEyeAttr


FUNC_BEGIN VI_DRV_GetChnOutPutSizeFromUserSet
    /*0002b61c*/ MOV         IP, #24 
    /*0002b620*/ PUSH        {R4, LR} 
    /*0002b624*/ MOVW        LR, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b628*/ MUL         IP, IP, R1 
    /*0002b62c*/ MOVT        LR, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b630*/ SUB         SP, SP, #32 
    /*0002b634*/ ADD         LR, LR, R0, LSL #2 
    /*0002b638*/ MOV         R4, R3 
    /*0002b63c*/ ADD         R3, SP, #8 
    /*0002b640*/ STR         R2, [SP] 
    /*0002b644*/ ADD         IP, IP, #3216               @ 0xc90 
    /*0002b648*/ LDR         R2, [LR, #728]              @ 0x2d8 
    /*0002b64c*/ ADD         R2, R2, IP 
    /*0002b650*/ BL          0x000000000002B650          @ VI_DRV_CalcCrop [R_ARM_CALL: .text+0x2b2dc] 
    /*0002b654*/ LDR         R2, [SP, #16] 
    /*0002b658*/ LDR         R3, [SP, #20] 
    /*0002b65c*/ STM         R4, {R2, R3} 
    /*0002b660*/ ADD         SP, SP, #32 
    /*0002b664*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetChnOutPutSizeFromUserSet


FUNC_BEGIN VI_DRV_ChnCalcCrop
    /*0002b668*/ MOV         IP, #24 
    /*0002b66c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b670*/ MUL         IP, IP, R1 
    /*0002b674*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b678*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002b67c*/ ADD         R3, R3, R0, LSL #2 
    /*0002b680*/ SUB         SP, SP, #12 
    /*0002b684*/ STR         R2, [SP] 
    /*0002b688*/ ADD         R2, IP, #37632              @ 0x9300 
    /*0002b68c*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002b690*/ ADD         IP, IP, #56                 @ 0x38 
    /*0002b694*/ ADD         R2, R2, #24 
    /*0002b698*/ ADD         R2, R3, R2 
    /*0002b69c*/ ADD         R3, R3, IP 
    /*0002b6a0*/ BL          0x000000000002B6A0          @ VI_DRV_CalcCrop [R_ARM_CALL: .text+0x2b2dc] 
    /*0002b6a4*/ ADD         SP, SP, #12 
    /*0002b6a8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_ChnCalcCrop


FUNC_BEGIN VI_DRV_GetChnCropCalcResault
    /*0002b6ac*/ MOV         IP, #24 
    /*0002b6b0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b6b4*/ MUL         R1, IP, R1 
    /*0002b6b8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b6bc*/ ADD         R3, R3, R0, LSL #2 
    /*0002b6c0*/ MOV         R0, R2 
    /*0002b6c4*/ PUSH        {R4, LR} 
    /*0002b6c8*/ ADD         R1, R1, #56                 @ 0x38 
    /*0002b6cc*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002b6d0*/ MOV         R2, IP 
    /*0002b6d4*/ ADD         R1, R3, R1 
    /*0002b6d8*/ BL          0x000000000002B6D8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002b6dc*/ MOV         R0, #0 
    /*0002b6e0*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetChnCropCalcResault


FUNC_BEGIN VI_DRV_PrepareAllPhyChnCrop
    /*0002b6e4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b6e8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b6ec*/ ADD         R3, R3, R0, LSL #2 
    /*0002b6f0*/ MOV         R1, #0 
    /*0002b6f4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002b6f8*/ SUB         SP, SP, #12 
    /*0002b6fc*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002b700*/ ADD         IP, R3, #67584              @ 0x10800 
    /*0002b704*/ ADD         R2, R3, #37632              @ 0x9300 
    /*0002b708*/ ADD         IP, IP, #1016               @ 0x3f8 
    /*0002b70c*/ ADD         R2, R2, #24 
    /*0002b710*/ STR         IP, [SP] 
    /*0002b714*/ ADD         R3, R3, #56                 @ 0x38 
    /*0002b718*/ BL          0x000000000002B718          @ VI_DRV_CalcCrop [R_ARM_CALL: .text+0x2b2dc] 
    /*0002b71c*/ ADD         SP, SP, #12 
    /*0002b720*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_PrepareAllPhyChnCrop


FUNC_BEGIN VI_DRV_GetChnOutPutSize
    /*0002b724*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b728*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b72c*/ ADD         R0, R3, R0, LSL #2 
    /*0002b730*/ MOV         R3, #24 
    /*0002b734*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0002b738*/ MLA         R1, R3, R1, R0 
    /*0002b73c*/ LDR         R3, [R1, #64]               @ 0x40 
    /*0002b740*/ STR         R3, [R2] 
    /*0002b744*/ LDR         R3, [R1, #68]               @ 0x44 
    /*0002b748*/ STR         R3, [R2, #4] 
    /*0002b74c*/ BX          LR 
FUNC_END VI_DRV_GetChnOutPutSize


FUNC_BEGIN VI_DRV_GetChnTrimCropInfo
    /*0002b750*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b754*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b758*/ ADD         R0, R3, R0, LSL #2 
    /*0002b75c*/ MOV         R3, #24 
    /*0002b760*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0002b764*/ MLA         R1, R3, R1, R0 
    /*0002b768*/ LDR         R3, [R1, #56]               @ 0x38 
    /*0002b76c*/ STR         R3, [R2] 
    /*0002b770*/ LDR         R3, [R1, #60]               @ 0x3c 
    /*0002b774*/ STR         R3, [R2, #4] 
    /*0002b778*/ LDR         R3, [R1, #64]               @ 0x40 
    /*0002b77c*/ STR         R3, [R2, #8] 
    /*0002b780*/ LDR         R3, [R1, #68]               @ 0x44 
    /*0002b784*/ STR         R3, [R2, #12] 
    /*0002b788*/ BX          LR 
FUNC_END VI_DRV_GetChnTrimCropInfo


FUNC_BEGIN VI_DRV_ChnFrmRateCtl
    /*0002b78c*/ LDM         R0, {R2, R3} 
    /*0002b790*/ CMN         R2, #1 
    /*0002b794*/ CMNNE       R3, #1 
    /*0002b798*/ MOVEQ       R0, #1 
    /*0002b79c*/ MOVNE       R0, #0 
    /*0002b7a0*/ CMP         R2, R3 
    /*0002b7a4*/ ORREQ       R0, R0, #1 
    /*0002b7a8*/ CMP         R0, #0 
    /*0002b7ac*/ BNE         VI_DRV_ChnFrmRateCtl_x2b7cc
    /*0002b7b0*/ LDR         IP, [R1] 
    /*0002b7b4*/ ADD         R3, R3, IP 
    /*0002b7b8*/ CMP         R2, R3 
    /*0002b7bc*/ SUBLE       R3, R3, R2 
    /*0002b7c0*/ STR         R3, [R1] 
    /*0002b7c4*/ MOVLE       R0, #1 
    /*0002b7c8*/ BX          LR 
    VI_DRV_ChnFrmRateCtl_x2b7cc:
    /*0002b7cc*/ MOV         R0, #1 
    /*0002b7d0*/ BX          LR 
FUNC_END VI_DRV_ChnFrmRateCtl


FUNC_BEGIN VI_DRV_NeedLimitChnPerformance
    /*0002b7d4*/ MOV         R0, #0 
    /*0002b7d8*/ BX          LR 
FUNC_END VI_DRV_NeedLimitChnPerformance


FUNC_BEGIN VI_DRV_ChnPerformanceLimit
    /*0002b7dc*/ LDR         IP, [R0] 
    /*0002b7e0*/ LDR         R3, [R0, #4] 
    /*0002b7e4*/ CMN         IP, #1 
    /*0002b7e8*/ CMNNE       R3, #1 
    /*0002b7ec*/ MOVEQ       R0, #1 
    /*0002b7f0*/ MOVNE       R0, #0 
    /*0002b7f4*/ CMP         IP, R3 
    /*0002b7f8*/ ORREQ       R0, R0, #1 
    /*0002b7fc*/ CMP         R0, #0 
    /*0002b800*/ BNE         VI_DRV_ChnPerformanceLimit_x2b830
    /*0002b804*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002b808*/ LDR         LR, [R1] 
    /*0002b80c*/ ADD         R3, R3, LR 
    /*0002b810*/ CMP         IP, R3 
    /*0002b814*/ BGT         VI_DRV_ChnPerformanceLimit_x2b840
    /*0002b818*/ CMP         R2, #14 
    /*0002b81c*/ SUB         R3, R3, IP 
    /*0002b820*/ STR         R3, [R1] 
    /*0002b824*/ MOVGT       R0, #0 
    /*0002b828*/ MOVLE       R0, #1 
    /*0002b82c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_ChnPerformanceLimit_x2b830:
    /*0002b830*/ CMP         R2, #14 
    /*0002b834*/ MOVGT       R0, #0 
    /*0002b838*/ MOVLE       R0, #1 
    /*0002b83c*/ BX          LR 
    VI_DRV_ChnPerformanceLimit_x2b840:
    /*0002b840*/ STR         R3, [R1] 
    /*0002b844*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_ChnPerformanceLimit


FUNC_BEGIN VI_DRV_ChnCheckOfflineCapacity
    /*0002b848*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0002b84c*/ SUB         SP, SP, #28 
    /*0002b850*/ MOV         R5, R0 
    /*0002b854*/ MOV         R4, R1 
    /*0002b858*/ MOV         R6, R2 
    /*0002b85c*/ BL          0x000000000002B85C          @ VI_DRV_GetChnMaxWidth [R_ARM_CALL: .text+0x25f04] 
    /*0002b860*/ MOV         R1, R4 
    /*0002b864*/ MOV         R7, R0 
    /*0002b868*/ MOV         R0, R5 
    /*0002b86c*/ BL          0x000000000002B86C          @ VI_DRV_GetChnMaxHeight [R_ARM_CALL: .text+0x25fcc] 
    /*0002b870*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002b874*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002b878*/ MOV         R1, #24 
    /*0002b87c*/ ADD         R3, R3, R5, LSL #2 
    /*0002b880*/ LDR         R2, [R3, #728]              @ 0x2d8 
    /*0002b884*/ MLA         R3, R1, R4, R2 
    /*0002b888*/ LDR         R1, [R3, #64]               @ 0x40 
    /*0002b88c*/ LDR         R3, [R3, #68]               @ 0x44 
    /*0002b890*/ CMP         R7, R1 
    /*0002b894*/ BCC         VI_DRV_ChnCheckOfflineCapacity_x2ba58
    /*0002b898*/ CMP         R0, R3 
    /*0002b89c*/ BCC         VI_DRV_ChnCheckOfflineCapacity_x2ba8c
    /*0002b8a0*/ MOV         R3, #44                     @ 0x2c 
    /*0002b8a4*/ CMP         R4, #0 
    /*0002b8a8*/ MLA         R3, R3, R4, R2 
    /*0002b8ac*/ LDR         R1, [R6] 
    /*0002b8b0*/ LDR         R0, [R6, #4] 
    /*0002b8b4*/ ADD         R3, R3, #67584              @ 0x10800 
    /*0002b8b8*/ LDR         IP, [R3, #1016]             @ 0x3f8 
    /*0002b8bc*/ LDR         R3, [R3, #1020]             @ 0x3fc 
    /*0002b8c0*/ BNE         VI_DRV_ChnCheckOfflineCapacity_x2b904
    /*0002b8c4*/ CMP         R3, R0 
    /*0002b8c8*/ CMPEQ       IP, R1 
    /*0002b8cc*/ BEQ         VI_DRV_ChnCheckOfflineCapacity_x2b904
    /*0002b8d0*/ MOVW        R2, #0                      @ .LC196 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdadc] 
    /*0002b8d4*/ MOVT        R2, #0                      @ .LC196 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdadc] 
    /*0002b8d8*/ MOVW        R3, #5240                   @ 0x1478 
    /*0002b8dc*/ STR         R4, [SP, #8] 
    /*0002b8e0*/ STR         R5, [SP, #4] 
    /*0002b8e4*/ STR         R3, [SP] 
    VI_DRV_ChnCheckOfflineCapacity_x2b8e8:
    /*0002b8e8*/ LDR         R3, [PC, #532]              @ 0x000000000002bb04 
    /*0002b8ec*/ MOV         R1, #16 
    /*0002b8f0*/ MOV         R0, #3 
    /*0002b8f4*/ BL          0x000000000002B8F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002b8f8*/ MVN         R0, #0 
    VI_DRV_ChnCheckOfflineCapacity_x2b8fc:
    /*0002b8fc*/ ADD         SP, SP, #28 
    /*0002b900*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_ChnCheckOfflineCapacity_x2b904:
    /*0002b904*/ MOV         R3, #44                     @ 0x2c 
    /*0002b908*/ LDR         R0, [R2, #20] 
    /*0002b90c*/ MLA         R3, R3, R4, R2 
    /*0002b910*/ CMP         R0, #0 
    /*0002b914*/ ADD         R3, R3, #68608              @ 0x10c00 
    /*0002b918*/ LDR         R0, [R3] 
    /*0002b91c*/ BEQ         VI_DRV_ChnCheckOfflineCapacity_x2b930
    /*0002b920*/ ADD         R3, R2, #65536              @ 0x10000 
    /*0002b924*/ LDR         R3, [R3, #3072]             @ 0xc00 
    /*0002b928*/ CMP         R0, R3 
    /*0002b92c*/ BNE         VI_DRV_ChnCheckOfflineCapacity_x2baa8
    VI_DRV_ChnCheckOfflineCapacity_x2b930:
    /*0002b930*/ LDR         R3, [R6, #12] 
    /*0002b934*/ CMP         R3, #25 
    /*0002b938*/ BEQ         VI_DRV_ChnCheckOfflineCapacity_x2b9e8
    /*0002b93c*/ CMP         R3, #26 
    /*0002b940*/ BEQ         VI_DRV_ChnCheckOfflineCapacity_x2ba30
    /*0002b944*/ SUB         R3, R3, #39                 @ 0x27 
    /*0002b948*/ CMP         R0, #39                     @ 0x27 
    /*0002b94c*/ CLZ         R3, R3 
    /*0002b950*/ LSR         R3, R3, #5 
    /*0002b954*/ MOVEQ       R3, #0 
    /*0002b958*/ CMP         R3, #0 
    /*0002b95c*/ BNE         VI_DRV_ChnCheckOfflineCapacity_x2b9ac
    VI_DRV_ChnCheckOfflineCapacity_x2b960:
    /*0002b960*/ CMP         R1, #4096                   @ 0x1000 
    /*0002b964*/ MOVLS       R0, #0 
    /*0002b968*/ BLS         VI_DRV_ChnCheckOfflineCapacity_x2b8fc
    /*0002b96c*/ MOV         R3, #44                     @ 0x2c 
    /*0002b970*/ MLA         R2, R3, R4, R2 
    /*0002b974*/ ADD         R2, R2, #68608              @ 0x10c00 
    /*0002b978*/ LDR         R3, [R2, #16] 
    /*0002b97c*/ CMP         R3, #0 
    /*0002b980*/ BNE         VI_DRV_ChnCheckOfflineCapacity_x2bae8
    /*0002b984*/ LDR         R0, [R6, #16] 
    /*0002b988*/ CMP         R0, #0 
    /*0002b98c*/ BEQ         VI_DRV_ChnCheckOfflineCapacity_x2b8fc
    /*0002b990*/ MOV         R3, #5312                   @ 0x14c0 
    /*0002b994*/ MOVW        R2, #0                      @ .LC202 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdd8c] 
    /*0002b998*/ STR         R0, [SP, #8] 
    /*0002b99c*/ MOVT        R2, #0                      @ .LC202 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdd8c] 
    /*0002b9a0*/ STR         R5, [SP, #4] 
    /*0002b9a4*/ STR         R3, [SP] 
    /*0002b9a8*/ B           VI_DRV_ChnCheckOfflineCapacity_x2b8e8
    VI_DRV_ChnCheckOfflineCapacity_x2b9ac:
    /*0002b9ac*/ MOV         R1, #39                     @ 0x27 
    /*0002b9b0*/ STR         R0, [SP, #8] 
    /*0002b9b4*/ MOVW        R3, #5293                   @ 0x14ad 
    /*0002b9b8*/ STR         R1, [SP, #16] 
    /*0002b9bc*/ STR         R3, [SP] 
    /*0002b9c0*/ MOVW        R2, #0                      @ .LC200 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdcb0] 
    /*0002b9c4*/ STR         R4, [SP, #12] 
    /*0002b9c8*/ MOVT        R2, #0                      @ .LC200 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdcb0] 
    /*0002b9cc*/ STR         R5, [SP, #4] 
    /*0002b9d0*/ MOV         R1, #16 
    /*0002b9d4*/ LDR         R3, [PC, #296]              @ 0x000000000002bb04 
    /*0002b9d8*/ MOV         R0, #3 
    /*0002b9dc*/ BL          0x000000000002B9DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002b9e0*/ MVN         R0, #0 
    /*0002b9e4*/ B           VI_DRV_ChnCheckOfflineCapacity_x2b8fc
    VI_DRV_ChnCheckOfflineCapacity_x2b9e8:
    /*0002b9e8*/ SUB         IP, R0, #25 
    /*0002b9ec*/ CMP         R0, #39                     @ 0x27 
    /*0002b9f0*/ CMPNE       IP, #1 
    /*0002b9f4*/ BLS         VI_DRV_ChnCheckOfflineCapacity_x2b960
    /*0002b9f8*/ MOVW        R2, #0                      @ .LC198 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdb9c] 
    /*0002b9fc*/ MOVT        R2, #0                      @ .LC198 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdb9c] 
    /*0002ba00*/ STR         R3, [SP, #16] 
    /*0002ba04*/ MOVW        R3, #5272                   @ 0x1498 
    /*0002ba08*/ STR         R4, [SP, #12] 
    /*0002ba0c*/ STR         R0, [SP, #8] 
    VI_DRV_ChnCheckOfflineCapacity_x2ba10:
    /*0002ba10*/ STR         R3, [SP] 
    /*0002ba14*/ MOV         R1, #16 
    /*0002ba18*/ STR         R5, [SP, #4] 
    /*0002ba1c*/ MOV         R0, #3 
    /*0002ba20*/ LDR         R3, [PC, #220]              @ 0x000000000002bb04 
    /*0002ba24*/ BL          0x000000000002BA24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002ba28*/ MVN         R0, #0 
    /*0002ba2c*/ B           VI_DRV_ChnCheckOfflineCapacity_x2b8fc
    VI_DRV_ChnCheckOfflineCapacity_x2ba30:
    /*0002ba30*/ CMP         R0, #26 
    /*0002ba34*/ CMPNE       R0, #39                     @ 0x27 
    /*0002ba38*/ BEQ         VI_DRV_ChnCheckOfflineCapacity_x2b960
    /*0002ba3c*/ STR         R3, [SP, #16] 
    /*0002ba40*/ MOVW        R2, #0                      @ .LC199 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdc28] 
    /*0002ba44*/ MOVW        R3, #5283                   @ 0x14a3 
    /*0002ba48*/ STR         R4, [SP, #12] 
    /*0002ba4c*/ STR         R0, [SP, #8] 
    /*0002ba50*/ MOVT        R2, #0                      @ .LC199 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdc28] 
    /*0002ba54*/ B           VI_DRV_ChnCheckOfflineCapacity_x2ba10
    VI_DRV_ChnCheckOfflineCapacity_x2ba58:
    /*0002ba58*/ MOVW        R2, #0                      @ .LC194 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xda40] 
    /*0002ba5c*/ MOVT        R2, #0                      @ .LC194 [R_ARM_MOVT_ABS: .rodata.str1.4+0xda40] 
    /*0002ba60*/ MOVW        R3, #5220                   @ 0x1464 
    /*0002ba64*/ STR         R1, [SP, #12] 
    /*0002ba68*/ STR         R4, [SP, #8] 
    /*0002ba6c*/ STR         R5, [SP, #4] 
    VI_DRV_ChnCheckOfflineCapacity_x2ba70:
    /*0002ba70*/ STR         R3, [SP] 
    /*0002ba74*/ MOV         R1, #16 
    /*0002ba78*/ LDR         R3, [PC, #132]              @ 0x000000000002bb04 
    /*0002ba7c*/ MOV         R0, #3 
    /*0002ba80*/ BL          0x000000000002BA80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002ba84*/ MVN         R0, #0 
    /*0002ba88*/ B           VI_DRV_ChnCheckOfflineCapacity_x2b8fc
    VI_DRV_ChnCheckOfflineCapacity_x2ba8c:
    /*0002ba8c*/ STR         R3, [SP, #12] 
    /*0002ba90*/ MOVW        R2, #0                      @ .LC195 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xda8c] 
    /*0002ba94*/ MOVW        R3, #5226                   @ 0x146a 
    /*0002ba98*/ STR         R4, [SP, #8] 
    /*0002ba9c*/ STR         R5, [SP, #4] 
    /*0002baa0*/ MOVT        R2, #0                      @ .LC195 [R_ARM_MOVT_ABS: .rodata.str1.4+0xda8c] 
    /*0002baa4*/ B           VI_DRV_ChnCheckOfflineCapacity_x2ba70
    VI_DRV_ChnCheckOfflineCapacity_x2baa8:
    /*0002baa8*/ STR         R3, [SP, #20] 
    /*0002baac*/ MOV         R1, #0 
    /*0002bab0*/ STR         R0, [SP, #12] 
    /*0002bab4*/ MOVW        R3, #5255                   @ 0x1487 
    /*0002bab8*/ STR         R1, [SP, #16] 
    /*0002babc*/ MOVW        R2, #0                      @ .LC197 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdb20] 
    /*0002bac0*/ STR         R3, [SP] 
    /*0002bac4*/ MOVT        R2, #0                      @ .LC197 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdb20] 
    /*0002bac8*/ STR         R4, [SP, #8] 
    /*0002bacc*/ MOV         R1, #16 
    /*0002bad0*/ STR         R5, [SP, #4] 
    /*0002bad4*/ MOV         R0, #3 
    /*0002bad8*/ LDR         R3, [PC, #36]               @ 0x000000000002bb04 
    /*0002badc*/ BL          0x000000000002BADC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002bae0*/ MVN         R0, #0 
    /*0002bae4*/ B           VI_DRV_ChnCheckOfflineCapacity_x2b8fc
    VI_DRV_ChnCheckOfflineCapacity_x2bae8:
    /*0002bae8*/ STR         R3, [SP, #12] 
    /*0002baec*/ MOVW        R2, #0                      @ .LC201 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdd30] 
    /*0002baf0*/ MOVW        R3, #5305                   @ 0x14b9 
    /*0002baf4*/ STR         R4, [SP, #8] 
    /*0002baf8*/ STR         R5, [SP, #4] 
    /*0002bafc*/ MOVT        R2, #0                      @ .LC201 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdd30] 
    /*0002bb00*/ B           VI_DRV_ChnCheckOfflineCapacity_x2ba70
    /*0002bb04*/ ANDEQ       R1, R0, IP, LSL FP 
FUNC_END VI_DRV_ChnCheckOfflineCapacity


FUNC_BEGIN VI_DRV_ChnCheckOnlineCapacity
    /*0002bb08*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002bb0c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002bb10*/ ADD         R3, R3, R0, LSL #2 
    /*0002bb14*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0002bb18*/ SUB         SP, SP, #28 
    /*0002bb1c*/ LDR         R6, [R3, #728]              @ 0x2d8 
    /*0002bb20*/ MOV         R4, R1 
    /*0002bb24*/ MOV         R5, R0 
    /*0002bb28*/ BL          0x000000000002BB28          @ VI_DRV_GetChnMaxWidth [R_ARM_CALL: .text+0x25f04] 
    /*0002bb2c*/ MOV         R1, R4 
    /*0002bb30*/ MOV         R7, R0 
    /*0002bb34*/ MOV         R0, R5 
    /*0002bb38*/ BL          0x000000000002BB38          @ VI_DRV_GetChnMaxHeight [R_ARM_CALL: .text+0x25fcc] 
    /*0002bb3c*/ MOV         R3, #24 
    /*0002bb40*/ MLA         R3, R3, R4, R6 
    /*0002bb44*/ LDR         R2, [R3, #64]               @ 0x40 
    /*0002bb48*/ LDR         R3, [R3, #68]               @ 0x44 
    /*0002bb4c*/ CMP         R7, R2 
    /*0002bb50*/ BCC         VI_DRV_ChnCheckOnlineCapacity_x2bc30
    /*0002bb54*/ CMP         R0, R3 
    /*0002bb58*/ BCC         VI_DRV_ChnCheckOnlineCapacity_x2bc64
    /*0002bb5c*/ MOV         R3, #44                     @ 0x2c 
    /*0002bb60*/ ADD         R2, R6, #65536              @ 0x10000 
    /*0002bb64*/ MLA         R3, R3, R4, R6 
    /*0002bb68*/ CMP         R4, #0 
    /*0002bb6c*/ LDR         R0, [R2, #3008]             @ 0xbc0 
    /*0002bb70*/ LDR         R1, [R2, #3012]             @ 0xbc4 
    /*0002bb74*/ ADD         R3, R3, #67584              @ 0x10800 
    /*0002bb78*/ LDR         IP, [R3, #1016]             @ 0x3f8 
    /*0002bb7c*/ LDR         R3, [R3, #1020]             @ 0x3fc 
    /*0002bb80*/ BNE         VI_DRV_ChnCheckOnlineCapacity_x2bbc4
    /*0002bb84*/ CMP         R3, R1 
    /*0002bb88*/ CMPEQ       IP, R0 
    /*0002bb8c*/ BEQ         VI_DRV_ChnCheckOnlineCapacity_x2bbc4
    /*0002bb90*/ MOVW        R3, #5364                   @ 0x14f4 
    /*0002bb94*/ STR         R4, [SP, #8] 
    /*0002bb98*/ STR         R3, [SP] 
    /*0002bb9c*/ MOVW        R2, #0                      @ .LC196 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdadc] 
    /*0002bba0*/ STR         R5, [SP, #4] 
    /*0002bba4*/ MOVT        R2, #0                      @ .LC196 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdadc] 
    /*0002bba8*/ LDR         R3, [PC, #208]              @ 0x000000000002bc80 
    /*0002bbac*/ MOV         R1, #16 
    /*0002bbb0*/ MOV         R0, #3 
    /*0002bbb4*/ BL          0x000000000002BBB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002bbb8*/ MVN         R0, #0 
    VI_DRV_ChnCheckOnlineCapacity_x2bbbc:
    /*0002bbbc*/ ADD         SP, SP, #28 
    /*0002bbc0*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_ChnCheckOnlineCapacity_x2bbc4:
    /*0002bbc4*/ LDR         R0, [R6, #20] 
    /*0002bbc8*/ CMP         R0, #0 
    /*0002bbcc*/ BEQ         VI_DRV_ChnCheckOnlineCapacity_x2bbbc
    /*0002bbd0*/ MOV         R3, #44                     @ 0x2c 
    /*0002bbd4*/ LDR         R2, [R2, #3072]             @ 0xc00 
    /*0002bbd8*/ MLA         R6, R3, R4, R6 
    /*0002bbdc*/ ADD         R6, R6, #68608              @ 0x10c00 
    /*0002bbe0*/ LDR         R3, [R6] 
    /*0002bbe4*/ CMP         R3, R2 
    /*0002bbe8*/ MOVEQ       R0, #0 
    /*0002bbec*/ BEQ         VI_DRV_ChnCheckOnlineCapacity_x2bbbc
    /*0002bbf0*/ STR         R2, [SP, #20] 
    /*0002bbf4*/ MOV         R1, #0 
    /*0002bbf8*/ STR         R3, [SP, #12] 
    /*0002bbfc*/ MOVW        R2, #0                      @ .LC197 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdb20] 
    /*0002bc00*/ MOVW        R3, #5379                   @ 0x1503 
    /*0002bc04*/ STR         R1, [SP, #16] 
    /*0002bc08*/ STR         R3, [SP] 
    /*0002bc0c*/ MOVT        R2, #0                      @ .LC197 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdb20] 
    /*0002bc10*/ STR         R4, [SP, #8] 
    /*0002bc14*/ MOV         R1, #16 
    /*0002bc18*/ STR         R5, [SP, #4] 
    /*0002bc1c*/ MOV         R0, #3 
    /*0002bc20*/ LDR         R3, [PC, #88]               @ 0x000000000002bc80 
    /*0002bc24*/ BL          0x000000000002BC24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002bc28*/ MVN         R0, #0 
    /*0002bc2c*/ B           VI_DRV_ChnCheckOnlineCapacity_x2bbbc
    VI_DRV_ChnCheckOnlineCapacity_x2bc30:
    /*0002bc30*/ STR         R2, [SP, #12] 
    /*0002bc34*/ MOVW        R2, #0                      @ .LC194 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xda40] 
    /*0002bc38*/ MOVT        R2, #0                      @ .LC194 [R_ARM_MOVT_ABS: .rodata.str1.4+0xda40] 
    /*0002bc3c*/ MOVW        R3, #5344                   @ 0x14e0 
    /*0002bc40*/ STR         R4, [SP, #8] 
    /*0002bc44*/ STR         R5, [SP, #4] 
    VI_DRV_ChnCheckOnlineCapacity_x2bc48:
    /*0002bc48*/ STR         R3, [SP] 
    /*0002bc4c*/ MOV         R1, #16 
    /*0002bc50*/ LDR         R3, [PC, #40]               @ 0x000000000002bc80 
    /*0002bc54*/ MOV         R0, #3 
    /*0002bc58*/ BL          0x000000000002BC58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002bc5c*/ MVN         R0, #0 
    /*0002bc60*/ B           VI_DRV_ChnCheckOnlineCapacity_x2bbbc
    VI_DRV_ChnCheckOnlineCapacity_x2bc64:
    /*0002bc64*/ STR         R3, [SP, #12] 
    /*0002bc68*/ MOVW        R2, #0                      @ .LC195 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xda8c] 
    /*0002bc6c*/ MOVW        R3, #5350                   @ 0x14e6 
    /*0002bc70*/ STR         R4, [SP, #8] 
    /*0002bc74*/ STR         R5, [SP, #4] 
    /*0002bc78*/ MOVT        R2, #0                      @ .LC195 [R_ARM_MOVT_ABS: .rodata.str1.4+0xda8c] 
    /*0002bc7c*/ B           VI_DRV_ChnCheckOnlineCapacity_x2bc48
    /*0002bc80*/ ANDEQ       R1, R0, IP, LSR FP 
FUNC_END VI_DRV_ChnCheckOnlineCapacity


FUNC_BEGIN VI_DRV_ExtChnCheckCapacity
    /*0002bc84*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0002bc88*/ SUB         SP, SP, #32 
    /*0002bc8c*/ MOV         R4, R1 
    /*0002bc90*/ MOV         R5, R0 
    /*0002bc94*/ MOV         R7, R2 
    /*0002bc98*/ BL          0x000000000002BC98          @ VI_DRV_GetChnMaxWidth [R_ARM_CALL: .text+0x25f04] 
    /*0002bc9c*/ MOV         R1, R4 
    /*0002bca0*/ MOV         R8, #40                     @ 0x28 
    /*0002bca4*/ MOVW        SL, #37344                  @ 0x91e0 
    /*0002bca8*/ MOVW        R9, #37348                  @ 0x91e4 
    /*0002bcac*/ MOV         R6, R0 
    /*0002bcb0*/ MOV         R0, R5 
    /*0002bcb4*/ BL          0x000000000002BCB4          @ VI_DRV_GetChnMaxHeight [R_ARM_CALL: .text+0x25fcc] 
    /*0002bcb8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002bcbc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002bcc0*/ MOV         R1, #24 
    /*0002bcc4*/ ADD         R3, R3, R5, LSL #2 
    /*0002bcc8*/ SUB         LR, R4, #1 
    /*0002bccc*/ CMP         R4, #0 
    /*0002bcd0*/ LDR         R2, [R3, #728]              @ 0x2d8 
    /*0002bcd4*/ MOVNE       IP, #32 
    /*0002bcd8*/ MOVEQ       IP, #120                    @ 0x78 
    /*0002bcdc*/ MLA         R1, R1, R4, R2 
    /*0002bce0*/ MLA         R3, R8, LR, R2 
    /*0002bce4*/ LDR         LR, [R1, #64]               @ 0x40 
    /*0002bce8*/ LDR         R8, [R1, #68]               @ 0x44 
    /*0002bcec*/ LDR         R9, [R3, R9] 
    /*0002bcf0*/ LDR         R1, [R3, SL] 
    /*0002bcf4*/ CMP         LR, IP 
    /*0002bcf8*/ CMPCS       R6, LR 
    /*0002bcfc*/ BCC         VI_DRV_ExtChnCheckCapacity_x2bdbc
    /*0002bd00*/ CMP         R8, IP 
    /*0002bd04*/ CMPCS       R0, R8 
    /*0002bd08*/ BCC         VI_DRV_ExtChnCheckCapacity_x2bdf8
    /*0002bd0c*/ CMP         R1, IP 
    /*0002bd10*/ CMPCS       R6, R1 
    /*0002bd14*/ BCC         VI_DRV_ExtChnCheckCapacity_x2be14
    /*0002bd18*/ CMP         R9, IP 
    /*0002bd1c*/ CMPCS       R0, R9 
    /*0002bd20*/ BCC         VI_DRV_ExtChnCheckCapacity_x2be30
    /*0002bd24*/ MOV         R2, #30 
    /*0002bd28*/ MUL         R0, R2, R1 
    /*0002bd2c*/ CMP         LR, R0 
    /*0002bd30*/ BHI         VI_DRV_ExtChnCheckCapacity_x2bd7c
    /*0002bd34*/ MUL         R2, R2, R9 
    /*0002bd38*/ CMP         R8, R2 
    /*0002bd3c*/ BHI         VI_DRV_ExtChnCheckCapacity_x2bd7c
    /*0002bd40*/ CMP         R1, LR, LSL #4 
    /*0002bd44*/ BHI         VI_DRV_ExtChnCheckCapacity_x2bd7c
    /*0002bd48*/ CMP         R9, R8, LSL #4 
    /*0002bd4c*/ BHI         VI_DRV_ExtChnCheckCapacity_x2bd7c
    /*0002bd50*/ MOVW        R1, #37356                  @ 0x91ec 
    /*0002bd54*/ LDR         R2, [R7, #24] 
    /*0002bd58*/ LDR         R3, [R3, R1] 
    /*0002bd5c*/ ORRS        R3, R3, R2 
    /*0002bd60*/ BNE         VI_DRV_ExtChnCheckCapacity_x2be4c
    /*0002bd64*/ LDR         R3, [R7, #16] 
    /*0002bd68*/ CMP         R3, #0 
    /*0002bd6c*/ MOVEQ       R0, #0 
    /*0002bd70*/ BNE         VI_DRV_ExtChnCheckCapacity_x2be7c
    VI_DRV_ExtChnCheckCapacity_x2bd74:
    /*0002bd74*/ ADD         SP, SP, #32 
    /*0002bd78*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_DRV_ExtChnCheckCapacity_x2bd7c:
    /*0002bd7c*/ STR         R1, [SP, #20] 
    /*0002bd80*/ MOVW        R3, #5458                   @ 0x1552 
    /*0002bd84*/ STR         R9, [SP, #24] 
    /*0002bd88*/ MOV         R1, #16 
    /*0002bd8c*/ STM         SP, {R3, R5} 
    /*0002bd90*/ MOVW        R2, #0                      @ .LC207 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdf24] 
    /*0002bd94*/ STR         R8, [SP, #16] 
    /*0002bd98*/ MOVT        R2, #0                      @ .LC207 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdf24] 
    /*0002bd9c*/ STR         LR, [SP, #12] 
    /*0002bda0*/ MOV         R0, #3 
    /*0002bda4*/ STR         R4, [SP, #8] 
    /*0002bda8*/ LDR         R3, [PC, #256]              @ 0x000000000002beb0 
    /*0002bdac*/ BL          0x000000000002BDAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002bdb0*/ MVN         R0, #0 
    /*0002bdb4*/ ADD         SP, SP, #32 
    /*0002bdb8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_DRV_ExtChnCheckCapacity_x2bdbc:
    /*0002bdbc*/ MOVW        R2, #0                      @ .LC203 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xddf4] 
    /*0002bdc0*/ MOVT        R2, #0                      @ .LC203 [R_ARM_MOVT_ABS: .rodata.str1.4+0xddf4] 
    /*0002bdc4*/ MOVW        R3, #5425                   @ 0x1531 
    /*0002bdc8*/ STR         R6, [SP, #20] 
    /*0002bdcc*/ STR         IP, [SP, #16] 
    /*0002bdd0*/ STR         LR, [SP, #12] 
    VI_DRV_ExtChnCheckCapacity_x2bdd4:
    /*0002bdd4*/ STR         R3, [SP] 
    /*0002bdd8*/ MOV         R1, #16 
    /*0002bddc*/ STR         R4, [SP, #8] 
    /*0002bde0*/ MOV         R0, #3 
    /*0002bde4*/ STR         R5, [SP, #4] 
    /*0002bde8*/ LDR         R3, [PC, #192]              @ 0x000000000002beb0 
    /*0002bdec*/ BL          0x000000000002BDEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002bdf0*/ MVN         R0, #0 
    /*0002bdf4*/ B           VI_DRV_ExtChnCheckCapacity_x2bd74
    VI_DRV_ExtChnCheckCapacity_x2bdf8:
    /*0002bdf8*/ MOVW        R2, #0                      @ .LC204 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xde40] 
    /*0002bdfc*/ STR         R0, [SP, #20] 
    /*0002be00*/ MOVW        R3, #5432                   @ 0x1538 
    /*0002be04*/ STR         IP, [SP, #16] 
    /*0002be08*/ STR         R8, [SP, #12] 
    /*0002be0c*/ MOVT        R2, #0                      @ .LC204 [R_ARM_MOVT_ABS: .rodata.str1.4+0xde40] 
    /*0002be10*/ B           VI_DRV_ExtChnCheckCapacity_x2bdd4
    VI_DRV_ExtChnCheckCapacity_x2be14:
    /*0002be14*/ MOVW        R2, #0                      @ .LC205 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xde8c] 
    /*0002be18*/ STR         R6, [SP, #20] 
    /*0002be1c*/ MOV         R3, #5440                   @ 0x1540 
    /*0002be20*/ STR         IP, [SP, #16] 
    /*0002be24*/ STR         R1, [SP, #12] 
    /*0002be28*/ MOVT        R2, #0                      @ .LC205 [R_ARM_MOVT_ABS: .rodata.str1.4+0xde8c] 
    /*0002be2c*/ B           VI_DRV_ExtChnCheckCapacity_x2bdd4
    VI_DRV_ExtChnCheckCapacity_x2be30:
    /*0002be30*/ MOVW        R2, #0                      @ .LC206 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xded8] 
    /*0002be34*/ STR         R0, [SP, #20] 
    /*0002be38*/ MOVW        R3, #5447                   @ 0x1547 
    /*0002be3c*/ STR         IP, [SP, #16] 
    /*0002be40*/ STR         R9, [SP, #12] 
    /*0002be44*/ MOVT        R2, #0                      @ .LC206 [R_ARM_MOVT_ABS: .rodata.str1.4+0xded8] 
    /*0002be48*/ B           VI_DRV_ExtChnCheckCapacity_x2bdd4
    VI_DRV_ExtChnCheckCapacity_x2be4c:
    /*0002be4c*/ MOVW        R3, #5467                   @ 0x155b 
    /*0002be50*/ STR         R4, [SP, #8] 
    /*0002be54*/ STR         R3, [SP] 
    /*0002be58*/ MOVW        R2, #0                      @ .LC208 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdf80] 
    /*0002be5c*/ STR         R5, [SP, #4] 
    /*0002be60*/ MOVT        R2, #0                      @ .LC208 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdf80] 
    /*0002be64*/ LDR         R3, [PC, #68]               @ 0x000000000002beb0 
    /*0002be68*/ MOV         R1, #16 
    /*0002be6c*/ MOV         R0, #3 
    /*0002be70*/ BL          0x000000000002BE70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002be74*/ MVN         R0, #0 
    /*0002be78*/ B           VI_DRV_ExtChnCheckCapacity_x2bd74
    VI_DRV_ExtChnCheckCapacity_x2be7c:
    /*0002be7c*/ STR         R3, [SP, #12] 
    /*0002be80*/ MOVW        R2, #0                      @ .LC209 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdfc0] 
    /*0002be84*/ MOVW        R3, #5474                   @ 0x1562 
    /*0002be88*/ STR         R4, [SP, #8] 
    /*0002be8c*/ STR         R3, [SP] 
    /*0002be90*/ MOVT        R2, #0                      @ .LC209 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdfc0] 
    /*0002be94*/ STR         R5, [SP, #4] 
    /*0002be98*/ MOV         R1, #16 
    /*0002be9c*/ LDR         R3, [PC, #12]               @ 0x000000000002beb0 
    /*0002bea0*/ MOV         R0, #3 
    /*0002bea4*/ BL          0x000000000002BEA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002bea8*/ MVN         R0, #0 
    /*0002beac*/ B           VI_DRV_ExtChnCheckCapacity_x2bd74
    /*0002beb0*/ ANDEQ       R1, R0, IP, ASR FP 
FUNC_END VI_DRV_ExtChnCheckCapacity


FUNC_BEGIN VI_DRV_PipeFrameRateCtl
    /*0002beb4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002beb8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002bebc*/ ADD         R0, R3, R0, LSL #2 
    /*0002bec0*/ LDR         R1, [R0, #728]              @ 0x2d8 
    /*0002bec4*/ ADD         R3, R1, #65536              @ 0x10000 
    /*0002bec8*/ LDR         R2, [R3, #3052]             @ 0xbec 
    /*0002becc*/ LDR         R3, [R3, #3056]             @ 0xbf0 
    /*0002bed0*/ CMN         R2, #1 
    /*0002bed4*/ CMNNE       R3, #1 
    /*0002bed8*/ MOVEQ       R0, #1 
    /*0002bedc*/ MOVNE       R0, #0 
    /*0002bee0*/ CMP         R2, R3 
    /*0002bee4*/ ORREQ       R0, R0, #1 
    /*0002bee8*/ CMP         R0, #0 
    /*0002beec*/ BNE         VI_DRV_PipeFrameRateCtl_x2bf0c
    /*0002bef0*/ LDR         IP, [R1, #12] 
    /*0002bef4*/ ADD         R3, R3, IP 
    /*0002bef8*/ CMP         R2, R3 
    /*0002befc*/ SUBLE       R3, R3, R2 
    /*0002bf00*/ STR         R3, [R1, #12] 
    /*0002bf04*/ MOVLE       R0, #1 
    /*0002bf08*/ BX          LR 
    VI_DRV_PipeFrameRateCtl_x2bf0c:
    /*0002bf0c*/ MOV         R0, #1 
    /*0002bf10*/ BX          LR 
FUNC_END VI_DRV_PipeFrameRateCtl


FUNC_BEGIN VI_DRV_CheckYuvCapacity
    /*0002bf14*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002bf18*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002bf1c*/ ADD         R3, R3, R0, LSL #2 
    /*0002bf20*/ PUSH        {R4, R5, R6, LR} 
    /*0002bf24*/ MOV         R6, R0 
    /*0002bf28*/ LDR         R5, [R3, #728]              @ 0x2d8 
    /*0002bf2c*/ SUB         SP, SP, #24 
    /*0002bf30*/ MOV         R4, R1 
    /*0002bf34*/ LDR         R0, [R5, #320]              @ 0x140 
    /*0002bf38*/ BL          0x000000000002BF38          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*0002bf3c*/ CMP         R0, #1 
    /*0002bf40*/ BEQ         VI_DRV_CheckYuvCapacity_x2c0b0
    /*0002bf44*/ MOV         R0, #1 
    /*0002bf48*/ BL          0x000000000002BF48          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002bf4c*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*0002bf50*/ LDR         R1, [R0, #84]               @ 0x54 
    /*0002bf54*/ LDR         R0, [R4, #328]              @ 0x148 
    /*0002bf58*/ BLX         R1 
    /*0002bf5c*/ CMP         R0, #0 
    /*0002bf60*/ BEQ         VI_DRV_CheckYuvCapacity_x2c084
    /*0002bf64*/ ADD         R3, R5, #32768              @ 0x8000 
    /*0002bf68*/ LDR         R2, [R4] 
    /*0002bf6c*/ LDR         R1, [R3, #1336]             @ 0x538 
    /*0002bf70*/ CMP         R2, R1 
    /*0002bf74*/ BNE         VI_DRV_CheckYuvCapacity_x2bfe0
    /*0002bf78*/ LDR         R2, [R4, #4] 
    /*0002bf7c*/ LDR         R1, [R3, #1340]             @ 0x53c 
    /*0002bf80*/ CMP         R2, R1 
    /*0002bf84*/ BNE         VI_DRV_CheckYuvCapacity_x2c018
    /*0002bf88*/ LDR         R2, [R3, #1344]             @ 0x540 
    /*0002bf8c*/ LDR         R3, [R4, #12] 
    /*0002bf90*/ CMP         R3, R2 
    /*0002bf94*/ BNE         VI_DRV_CheckYuvCapacity_x2c034
    /*0002bf98*/ LDR         R3, [R4, #8] 
    /*0002bf9c*/ CMP         R3, #4 
    /*0002bfa0*/ BNE         VI_DRV_CheckYuvCapacity_x2c054
    /*0002bfa4*/ LDR         R3, [R4, #16] 
    /*0002bfa8*/ CMP         R3, #0 
    /*0002bfac*/ BNE         VI_DRV_CheckYuvCapacity_x2c0e0
    /*0002bfb0*/ LDR         R3, [R4, #20] 
    /*0002bfb4*/ CMP         R3, #0 
    /*0002bfb8*/ BNE         VI_DRV_CheckYuvCapacity_x2c0fc
    /*0002bfbc*/ LDR         R3, [R4, #24] 
    /*0002bfc0*/ CMP         R3, #0 
    /*0002bfc4*/ BNE         VI_DRV_CheckYuvCapacity_x2c118
    /*0002bfc8*/ LDR         R3, [R4, #28] 
    /*0002bfcc*/ CMP         R3, #3 
    /*0002bfd0*/ MOVLS       R0, #0 
    /*0002bfd4*/ BHI         VI_DRV_CheckYuvCapacity_x2c134
    VI_DRV_CheckYuvCapacity_x2bfd8:
    /*0002bfd8*/ ADD         SP, SP, #24 
    /*0002bfdc*/ POP         {R4, R5, R6, PC} 
    VI_DRV_CheckYuvCapacity_x2bfe0:
    /*0002bfe0*/ STR         R2, [SP, #8] 
    /*0002bfe4*/ MOVW        R2, #0                      @ .LC212 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe090] 
    /*0002bfe8*/ MOVT        R2, #0                      @ .LC212 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe090] 
    /*0002bfec*/ MOVW        R3, #5521                   @ 0x1591 
    /*0002bff0*/ STR         R1, [SP, #12] 
    /*0002bff4*/ STR         R6, [SP, #4] 
    VI_DRV_CheckYuvCapacity_x2bff8:
    /*0002bff8*/ STR         R3, [SP] 
    VI_DRV_CheckYuvCapacity_x2bffc:
    /*0002bffc*/ MOV         R1, #16 
    /*0002c000*/ LDR         R3, [PC, #364]              @ 0x000000000002c174 
    /*0002c004*/ MOV         R0, #3 
    /*0002c008*/ BL          0x000000000002C008          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c00c*/ MVN         R0, #0 
    /*0002c010*/ ADD         SP, SP, #24 
    /*0002c014*/ POP         {R4, R5, R6, PC} 
    VI_DRV_CheckYuvCapacity_x2c018:
    /*0002c018*/ STR         R2, [SP, #8] 
    /*0002c01c*/ MOVW        R3, #5528                   @ 0x1598 
    /*0002c020*/ MOVW        R2, #0                      @ .LC213 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe0e8] 
    /*0002c024*/ STR         R1, [SP, #12] 
    /*0002c028*/ STR         R6, [SP, #4] 
    /*0002c02c*/ MOVT        R2, #0                      @ .LC213 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe0e8] 
    /*0002c030*/ B           VI_DRV_CheckYuvCapacity_x2bff8
    VI_DRV_CheckYuvCapacity_x2c034:
    /*0002c034*/ STR         R2, [SP, #12] 
    /*0002c038*/ MOVW        R1, #5536                   @ 0x15a0 
    /*0002c03c*/ MOVW        R2, #0                      @ .LC214 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe140] 
    /*0002c040*/ STR         R3, [SP, #8] 
    /*0002c044*/ STR         R6, [SP, #4] 
    /*0002c048*/ MOVT        R2, #0                      @ .LC214 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe140] 
    /*0002c04c*/ STR         R1, [SP] 
    /*0002c050*/ B           VI_DRV_CheckYuvCapacity_x2bffc
    VI_DRV_CheckYuvCapacity_x2c054:
    /*0002c054*/ MOVW        R2, #0                      @ .LC215 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe19c] 
    /*0002c058*/ MOVT        R2, #0                      @ .LC215 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe19c] 
    /*0002c05c*/ STR         R3, [SP, #8] 
    /*0002c060*/ MOVW        R3, #5543                   @ 0x15a7 
    /*0002c064*/ STR         R6, [SP, #4] 
    /*0002c068*/ STR         R3, [SP] 
    VI_DRV_CheckYuvCapacity_x2c06c:
    /*0002c06c*/ LDR         R3, [PC, #256]              @ 0x000000000002c174 
    /*0002c070*/ MOV         R1, #16 
    /*0002c074*/ MOV         R0, #3 
    /*0002c078*/ BL          0x000000000002C078          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c07c*/ MVN         R0, #0 
    /*0002c080*/ B           VI_DRV_CheckYuvCapacity_x2bfd8
    VI_DRV_CheckYuvCapacity_x2c084:
    /*0002c084*/ MOVW        R3, #5513                   @ 0x1589 
    /*0002c088*/ STR         R6, [SP, #4] 
    /*0002c08c*/ STR         R3, [SP] 
    /*0002c090*/ MOVW        R2, #0                      @ .LC211 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe060] 
    /*0002c094*/ LDR         R3, [PC, #216]              @ 0x000000000002c174 
    /*0002c098*/ MOVT        R2, #0                      @ .LC211 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe060] 
    /*0002c09c*/ MOV         R1, #16 
    /*0002c0a0*/ MOV         R0, #3 
    /*0002c0a4*/ BL          0x000000000002C0A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c0a8*/ MVN         R0, #0 
    /*0002c0ac*/ B           VI_DRV_CheckYuvCapacity_x2bfd8
    VI_DRV_CheckYuvCapacity_x2c0b0:
    /*0002c0b0*/ MOVW        R3, #5506                   @ 0x1582 
    /*0002c0b4*/ STR         R6, [SP, #4] 
    /*0002c0b8*/ STR         R3, [SP] 
    /*0002c0bc*/ MOVW        R2, #0                      @ .LC210 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe01c] 
    /*0002c0c0*/ LDR         R3, [PC, #172]              @ 0x000000000002c174 
    /*0002c0c4*/ MOVT        R2, #0                      @ .LC210 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe01c] 
    /*0002c0c8*/ MOV         R1, #16 
    /*0002c0cc*/ MOV         R0, #3 
    /*0002c0d0*/ BL          0x000000000002C0D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c0d4*/ MOVW        R0, #32776                  @ 0x8008 
    /*0002c0d8*/ MOVT        R0, #40976                  @ 0xa010 
    /*0002c0dc*/ B           VI_DRV_CheckYuvCapacity_x2bfd8
    VI_DRV_CheckYuvCapacity_x2c0e0:
    /*0002c0e0*/ STR         R3, [SP, #8] 
    /*0002c0e4*/ MOVW        R2, #0                      @ .LC216 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe1f8] 
    /*0002c0e8*/ MOVW        R3, #5550                   @ 0x15ae 
    /*0002c0ec*/ STR         R6, [SP, #4] 
    /*0002c0f0*/ STR         R3, [SP] 
    /*0002c0f4*/ MOVT        R2, #0                      @ .LC216 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe1f8] 
    /*0002c0f8*/ B           VI_DRV_CheckYuvCapacity_x2c06c
    VI_DRV_CheckYuvCapacity_x2c0fc:
    /*0002c0fc*/ STR         R3, [SP, #8] 
    /*0002c100*/ MOVW        R2, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe25c] 
    /*0002c104*/ MOVW        R3, #5557                   @ 0x15b5 
    /*0002c108*/ STR         R6, [SP, #4] 
    /*0002c10c*/ STR         R3, [SP] 
    /*0002c110*/ MOVT        R2, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe25c] 
    /*0002c114*/ B           VI_DRV_CheckYuvCapacity_x2c06c
    VI_DRV_CheckYuvCapacity_x2c118:
    /*0002c118*/ STR         R3, [SP, #8] 
    /*0002c11c*/ MOVW        R2, #0                      @ .LC218 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe2c0] 
    /*0002c120*/ MOVW        R3, #5564                   @ 0x15bc 
    /*0002c124*/ STR         R6, [SP, #4] 
    /*0002c128*/ STR         R3, [SP] 
    /*0002c12c*/ MOVT        R2, #0                      @ .LC218 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe2c0] 
    /*0002c130*/ B           VI_DRV_CheckYuvCapacity_x2c06c
    VI_DRV_CheckYuvCapacity_x2c134:
    /*0002c134*/ MOV         R2, #3 
    /*0002c138*/ STR         R3, [SP, #8] 
    /*0002c13c*/ MOV         R0, R2 
    /*0002c140*/ STR         R2, [SP, #16] 
    /*0002c144*/ MOVW        R3, #5572                   @ 0x15c4 
    /*0002c148*/ MOV         R2, #0 
    /*0002c14c*/ STR         R3, [SP] 
    /*0002c150*/ MOV         R1, #16 
    /*0002c154*/ STR         R2, [SP, #12] 
    /*0002c158*/ MOVW        R2, #0                      @ .LC219 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe324] 
    /*0002c15c*/ STR         R6, [SP, #4] 
    /*0002c160*/ MOVT        R2, #0                      @ .LC219 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe324] 
    /*0002c164*/ LDR         R3, [PC, #8]                @ 0x000000000002c174 
    /*0002c168*/ BL          0x000000000002C168          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c16c*/ MVN         R0, #0 
    /*0002c170*/ B           VI_DRV_CheckYuvCapacity_x2bfd8
    /*0002c174*/ ANDEQ       R1, R0, R8, ROR FP 
FUNC_END VI_DRV_CheckYuvCapacity


FUNC_BEGIN VI_DRV_CheckLineRawCapacityForFE
    /*0002c178*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002c17c*/ SUB         SP, SP, #12 
    /*0002c180*/ MOVW        R3, #5581                   @ 0x15cd 
    /*0002c184*/ MOV         R1, #16 
    /*0002c188*/ STR         R3, [SP] 
    /*0002c18c*/ MOVW        R2, #0                      @ .LC220 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe380] 
    /*0002c190*/ LDR         R3, [PC, #20]               @ 0x000000000002c1ac 
    /*0002c194*/ MOVT        R2, #0                      @ .LC220 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe380] 
    /*0002c198*/ MOV         R0, #3 
    /*0002c19c*/ BL          0x000000000002C19C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c1a0*/ MVN         R0, #0 
    /*0002c1a4*/ ADD         SP, SP, #12 
    /*0002c1a8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0002c1ac*/ MULEQ       R0, R0, FP 
FUNC_END VI_DRV_CheckLineRawCapacityForFE


FUNC_BEGIN VI_DRV_CheckLineRawCapacityForBE
    /*0002c1b0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002c1b4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002c1b8*/ ADD         R3, R3, R0, LSL #2 
    /*0002c1bc*/ PUSH        {R4, R5, R6, LR} 
    /*0002c1c0*/ MOV         R6, R0 
    /*0002c1c4*/ LDR         R5, [R3, #728]              @ 0x2d8 
    /*0002c1c8*/ SUB         SP, SP, #24 
    /*0002c1cc*/ ADD         R5, R5, #32768              @ 0x8000 
    /*0002c1d0*/ LDR         R3, [R5, #1344]             @ 0x540 
    /*0002c1d4*/ SUB         R2, R3, #17 
    /*0002c1d8*/ CMP         R2, #4 
    /*0002c1dc*/ BHI         VI_DRV_CheckLineRawCapacityForBE_x2c340
    /*0002c1e0*/ LDR         R3, [R5, #1332]             @ 0x534 
    /*0002c1e4*/ CMP         R3, #0 
    /*0002c1e8*/ BNE         VI_DRV_CheckLineRawCapacityForBE_x2c2a0
    /*0002c1ec*/ MOV         R0, #1 
    /*0002c1f0*/ MOV         R4, R1 
    /*0002c1f4*/ BL          0x000000000002C1F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002c1f8*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*0002c1fc*/ LDR         R1, [R0, #84]               @ 0x54 
    /*0002c200*/ LDR         R0, [R4, #328]              @ 0x148 
    /*0002c204*/ BLX         R1 
    /*0002c208*/ CMP         R0, #0 
    /*0002c20c*/ BEQ         VI_DRV_CheckLineRawCapacityForBE_x2c378
    /*0002c210*/ LDR         R3, [R4] 
    /*0002c214*/ LDR         R2, [R5, #1336]             @ 0x538 
    /*0002c218*/ CMP         R3, R2 
    /*0002c21c*/ BNE         VI_DRV_CheckLineRawCapacityForBE_x2c2d4
    /*0002c220*/ LDR         R2, [R5, #1340]             @ 0x53c 
    /*0002c224*/ LDR         R3, [R4, #4] 
    /*0002c228*/ CMP         R3, R2 
    /*0002c22c*/ BNE         VI_DRV_CheckLineRawCapacityForBE_x2c308
    /*0002c230*/ LDR         R3, [R4, #12] 
    /*0002c234*/ SUB         R2, R3, #17 
    /*0002c238*/ CMP         R2, #4 
    /*0002c23c*/ BHI         VI_DRV_CheckLineRawCapacityForBE_x2c3a4
    /*0002c240*/ LDR         R2, [R4, #8] 
    /*0002c244*/ CMP         R2, #4 
    /*0002c248*/ BNE         VI_DRV_CheckLineRawCapacityForBE_x2c324
    /*0002c24c*/ LDR         R2, [R4, #16] 
    /*0002c250*/ CMP         R2, #0 
    /*0002c254*/ BNE         VI_DRV_CheckLineRawCapacityForBE_x2c3c0
    /*0002c258*/ LDR         R2, [R4, #20] 
    /*0002c25c*/ ADDS        R0, R2, #0 
    /*0002c260*/ SUB         R1, R2, #3 
    /*0002c264*/ MOVNE       R0, #1 
    /*0002c268*/ CMP         R2, #0 
    /*0002c26c*/ CMPNE       R1, #1 
    /*0002c270*/ BHI         VI_DRV_CheckLineRawCapacityForBE_x2c35c
    /*0002c274*/ LDR         R1, [R4, #28] 
    /*0002c278*/ CMP         R1, #3 
    /*0002c27c*/ BHI         VI_DRV_CheckLineRawCapacityForBE_x2c3dc
    /*0002c280*/ BIC         R3, R3, #4 
    /*0002c284*/ CMP         R3, #17 
    /*0002c288*/ MOVNE       R0, #0 
    /*0002c28c*/ ANDEQ       R0, R0, #1 
    /*0002c290*/ CMP         R0, #0 
    /*0002c294*/ BNE         VI_DRV_CheckLineRawCapacityForBE_x2c41c
    VI_DRV_CheckLineRawCapacityForBE_x2c298:
    /*0002c298*/ ADD         SP, SP, #24 
    /*0002c29c*/ POP         {R4, R5, R6, PC} 
    VI_DRV_CheckLineRawCapacityForBE_x2c2a0:
    /*0002c2a0*/ MOVW        R2, #0                      @ .LC222 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe420] 
    /*0002c2a4*/ MOVT        R2, #0                      @ .LC222 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe420] 
    /*0002c2a8*/ STR         R3, [SP, #8] 
    /*0002c2ac*/ MOVW        R3, #5607                   @ 0x15e7 
    /*0002c2b0*/ STR         R0, [SP, #4] 
    /*0002c2b4*/ STR         R3, [SP] 
    VI_DRV_CheckLineRawCapacityForBE_x2c2b8:
    /*0002c2b8*/ LDR         R3, [PC, #376]              @ 0x000000000002c438 
    /*0002c2bc*/ MOV         R1, #16 
    /*0002c2c0*/ MOV         R0, #3 
    /*0002c2c4*/ BL          0x000000000002C2C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c2c8*/ MVN         R0, #0 
    /*0002c2cc*/ ADD         SP, SP, #24 
    /*0002c2d0*/ POP         {R4, R5, R6, PC} 
    VI_DRV_CheckLineRawCapacityForBE_x2c2d4:
    /*0002c2d4*/ STR         R2, [SP, #12] 
    /*0002c2d8*/ MOVW        R2, #0                      @ .LC223 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe47c] 
    /*0002c2dc*/ MOVT        R2, #0                      @ .LC223 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe47c] 
    /*0002c2e0*/ MOVW        R1, #5622                   @ 0x15f6 
    /*0002c2e4*/ STR         R3, [SP, #8] 
    /*0002c2e8*/ STR         R6, [SP, #4] 
    VI_DRV_CheckLineRawCapacityForBE_x2c2ec:
    /*0002c2ec*/ STR         R1, [SP] 
    /*0002c2f0*/ MOV         R0, #3 
    /*0002c2f4*/ MOV         R1, #16 
    /*0002c2f8*/ LDR         R3, [PC, #312]              @ 0x000000000002c438 
    /*0002c2fc*/ BL          0x000000000002C2FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c300*/ MVN         R0, #0 
    /*0002c304*/ B           VI_DRV_CheckLineRawCapacityForBE_x2c298
    VI_DRV_CheckLineRawCapacityForBE_x2c308:
    /*0002c308*/ STR         R2, [SP, #12] 
    /*0002c30c*/ MOVW        R1, #5629                   @ 0x15fd 
    /*0002c310*/ MOVW        R2, #0                      @ .LC224 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe4dc] 
    /*0002c314*/ STR         R3, [SP, #8] 
    /*0002c318*/ STR         R6, [SP, #4] 
    /*0002c31c*/ MOVT        R2, #0                      @ .LC224 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe4dc] 
    /*0002c320*/ B           VI_DRV_CheckLineRawCapacityForBE_x2c2ec
    VI_DRV_CheckLineRawCapacityForBE_x2c324:
    /*0002c324*/ STR         R2, [SP, #8] 
    /*0002c328*/ MOVW        R3, #5648                   @ 0x1610 
    /*0002c32c*/ MOVW        R2, #0                      @ .LC215 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe19c] 
    /*0002c330*/ STR         R6, [SP, #4] 
    /*0002c334*/ STR         R3, [SP] 
    /*0002c338*/ MOVT        R2, #0                      @ .LC215 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe19c] 
    /*0002c33c*/ B           VI_DRV_CheckLineRawCapacityForBE_x2c2b8
    VI_DRV_CheckLineRawCapacityForBE_x2c340:
    /*0002c340*/ STR         R3, [SP, #8] 
    /*0002c344*/ MOVW        R2, #0                      @ .LC221 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe3c0] 
    /*0002c348*/ MOVW        R3, #5599                   @ 0x15df 
    /*0002c34c*/ STR         R0, [SP, #4] 
    /*0002c350*/ STR         R3, [SP] 
    /*0002c354*/ MOVT        R2, #0                      @ .LC221 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe3c0] 
    /*0002c358*/ B           VI_DRV_CheckLineRawCapacityForBE_x2c2b8
    VI_DRV_CheckLineRawCapacityForBE_x2c35c:
    /*0002c35c*/ STR         R2, [SP, #8] 
    /*0002c360*/ MOVW        R3, #5664                   @ 0x1620 
    /*0002c364*/ MOVW        R2, #0                      @ .LC226 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe584] 
    /*0002c368*/ STR         R6, [SP, #4] 
    /*0002c36c*/ STR         R3, [SP] 
    /*0002c370*/ MOVT        R2, #0                      @ .LC226 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe584] 
    /*0002c374*/ B           VI_DRV_CheckLineRawCapacityForBE_x2c2b8
    VI_DRV_CheckLineRawCapacityForBE_x2c378:
    /*0002c378*/ MOVW        R3, #5614                   @ 0x15ee 
    /*0002c37c*/ STR         R6, [SP, #4] 
    /*0002c380*/ STR         R3, [SP] 
    /*0002c384*/ MOVW        R2, #0                      @ .LC211 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe060] 
    /*0002c388*/ LDR         R3, [PC, #168]              @ 0x000000000002c438 
    /*0002c38c*/ MOVT        R2, #0                      @ .LC211 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe060] 
    /*0002c390*/ MOV         R1, #16 
    /*0002c394*/ MOV         R0, #3 
    /*0002c398*/ BL          0x000000000002C398          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c39c*/ MVN         R0, #0 
    /*0002c3a0*/ B           VI_DRV_CheckLineRawCapacityForBE_x2c298
    VI_DRV_CheckLineRawCapacityForBE_x2c3a4:
    /*0002c3a4*/ STR         R3, [SP, #8] 
    /*0002c3a8*/ MOVW        R2, #0                      @ .LC225 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe53c] 
    /*0002c3ac*/ MOVW        R3, #5641                   @ 0x1609 
    /*0002c3b0*/ STR         R6, [SP, #4] 
    /*0002c3b4*/ STR         R3, [SP] 
    /*0002c3b8*/ MOVT        R2, #0                      @ .LC225 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe53c] 
    /*0002c3bc*/ B           VI_DRV_CheckLineRawCapacityForBE_x2c2b8
    VI_DRV_CheckLineRawCapacityForBE_x2c3c0:
    /*0002c3c0*/ STR         R2, [SP, #8] 
    /*0002c3c4*/ MOVW        R3, #5655                   @ 0x1617 
    /*0002c3c8*/ MOVW        R2, #0                      @ .LC216 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe1f8] 
    /*0002c3cc*/ STR         R6, [SP, #4] 
    /*0002c3d0*/ STR         R3, [SP] 
    /*0002c3d4*/ MOVT        R2, #0                      @ .LC216 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe1f8] 
    /*0002c3d8*/ B           VI_DRV_CheckLineRawCapacityForBE_x2c2b8
    VI_DRV_CheckLineRawCapacityForBE_x2c3dc:
    /*0002c3dc*/ MOV         R3, #3 
    /*0002c3e0*/ STR         R1, [SP, #8] 
    /*0002c3e4*/ MOV         R0, R3 
    /*0002c3e8*/ STR         R3, [SP, #16] 
    /*0002c3ec*/ MOV         R2, #0 
    /*0002c3f0*/ MOVW        R3, #5672                   @ 0x1628 
    /*0002c3f4*/ STR         R2, [SP, #12] 
    /*0002c3f8*/ MOV         R1, #16 
    /*0002c3fc*/ STR         R3, [SP] 
    /*0002c400*/ MOVW        R2, #0                      @ .LC219 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe324] 
    /*0002c404*/ STR         R6, [SP, #4] 
    /*0002c408*/ MOVT        R2, #0                      @ .LC219 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe324] 
    /*0002c40c*/ LDR         R3, [PC, #36]               @ 0x000000000002c438 
    /*0002c410*/ BL          0x000000000002C410          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c414*/ MVN         R0, #0 
    /*0002c418*/ B           VI_DRV_CheckLineRawCapacityForBE_x2c298
    VI_DRV_CheckLineRawCapacityForBE_x2c41c:
    /*0002c41c*/ STR         R2, [SP, #8] 
    /*0002c420*/ MOVW        R3, #5681                   @ 0x1631 
    /*0002c424*/ MOVW        R2, #0                      @ .LC227 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe610] 
    /*0002c428*/ STR         R6, [SP, #4] 
    /*0002c42c*/ STR         R3, [SP] 
    /*0002c430*/ MOVT        R2, #0                      @ .LC227 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe610] 
    /*0002c434*/ B           VI_DRV_CheckLineRawCapacityForBE_x2c2b8
    /*0002c438*/ @           <UNDEFINED> instruction: 0x00001bb4 
FUNC_END VI_DRV_CheckLineRawCapacityForBE


FUNC_BEGIN VI_DRV_CheckWdrRawCapacity
    /*0002c43c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002c440*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002c444*/ ADD         R3, R3, R0, LSL #2 
    /*0002c448*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002c44c*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0002c450*/ LDR         R8, [R3, #728]              @ 0x2d8 
    /*0002c454*/ MOV         R4, R1 
    /*0002c458*/ LDR         R3, [R1, #16] 
    /*0002c45c*/ MOV         SL, R2 
    /*0002c460*/ ADD         R8, R8, #65536              @ 0x10000 
    /*0002c464*/ LDR         R6, [R1] 
    /*0002c468*/ LDR         R9, [R1, #4] 
    /*0002c46c*/ MOV         FP, R0 
    /*0002c470*/ STR         R3, [SP, #32] 
    /*0002c474*/ LDR         R3, [R8, #3016]             @ 0xbc8 
    /*0002c478*/ LDR         R7, [R1, #12] 
    /*0002c47c*/ SUB         R2, R3, #17 
    /*0002c480*/ LDR         R5, [R1, #20] 
    /*0002c484*/ CMP         R2, #4 
    /*0002c488*/ LDR         R1, [R1, #28] 
    /*0002c48c*/ LDR         R2, [R4, #8] 
    /*0002c490*/ STR         R1, [SP, #36]               @ 0x24 
    /*0002c494*/ STR         R2, [SP, #28] 
    /*0002c498*/ BHI         VI_DRV_CheckWdrRawCapacity_x2c7dc
    /*0002c49c*/ LDR         R3, [R8, #3004]             @ 0xbbc 
    /*0002c4a0*/ CMP         R3, #0 
    /*0002c4a4*/ BNE         VI_DRV_CheckWdrRawCapacity_x2c738
    /*0002c4a8*/ MOV         R0, #1 
    /*0002c4ac*/ BL          0x000000000002C4AC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002c4b0*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*0002c4b4*/ LDR         R1, [R0, #84]               @ 0x54 
    /*0002c4b8*/ LDR         R0, [R4, #328]              @ 0x148 
    /*0002c4bc*/ BLX         R1 
    /*0002c4c0*/ CMP         R0, #0 
    /*0002c4c4*/ BEQ         VI_DRV_CheckWdrRawCapacity_x2c7f8
    /*0002c4c8*/ LDR         R3, [R8, #3008]             @ 0xbc0 
    /*0002c4cc*/ CMP         R6, R3 
    /*0002c4d0*/ BNE         VI_DRV_CheckWdrRawCapacity_x2c76c
    /*0002c4d4*/ LDR         R3, [R8, #3012]             @ 0xbc4 
    /*0002c4d8*/ CMP         R9, R3 
    /*0002c4dc*/ BNE         VI_DRV_CheckWdrRawCapacity_x2c788
    /*0002c4e0*/ SUB         R3, R7, #17 
    /*0002c4e4*/ CMP         R3, #4 
    /*0002c4e8*/ BHI         VI_DRV_CheckWdrRawCapacity_x2c824
    /*0002c4ec*/ LDR         R3, [SP, #28] 
    /*0002c4f0*/ CMP         R3, #4 
    /*0002c4f4*/ BNE         VI_DRV_CheckWdrRawCapacity_x2c7a4
    /*0002c4f8*/ LDR         R3, [SP, #32] 
    /*0002c4fc*/ CMP         R3, #0 
    /*0002c500*/ BNE         VI_DRV_CheckWdrRawCapacity_x2c840
    /*0002c504*/ ADDS        R2, R5, #0 
    /*0002c508*/ SUB         R3, R5, #3 
    /*0002c50c*/ MOVNE       R2, #1 
    /*0002c510*/ CMP         R5, #0 
    /*0002c514*/ CMPNE       R3, #1 
    /*0002c518*/ BHI         VI_DRV_CheckWdrRawCapacity_x2c7c0
    /*0002c51c*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0002c520*/ CMP         R3, #3 
    /*0002c524*/ BHI         VI_DRV_CheckWdrRawCapacity_x2c85c
    /*0002c528*/ CMP         R7, #21 
    /*0002c52c*/ MOVNE       R2, #0 
    /*0002c530*/ ANDEQ       R2, R2, #1 
    /*0002c534*/ CMP         R2, #0 
    /*0002c538*/ BNE         VI_DRV_CheckWdrRawCapacity_x2c704
    /*0002c53c*/ CMP         SL, #1 
    /*0002c540*/ MOVGT       R8, #1 
    /*0002c544*/ BGT         VI_DRV_CheckWdrRawCapacity_x2c5a4
    /*0002c548*/ B           VI_DRV_CheckWdrRawCapacity_x2c5f4
    VI_DRV_CheckWdrRawCapacity_x2c54c:
    /*0002c54c*/ LDR         R3, [R4, #336]              @ 0x150 
    /*0002c550*/ CMP         R6, R3 
    /*0002c554*/ BNE         VI_DRV_CheckWdrRawCapacity_x2c600
    /*0002c558*/ LDR         R3, [R4, #340]              @ 0x154 
    /*0002c55c*/ CMP         R9, R3 
    /*0002c560*/ BNE         VI_DRV_CheckWdrRawCapacity_x2c63c
    /*0002c564*/ LDR         R3, [R4, #348]              @ 0x15c 
    /*0002c568*/ CMP         R7, R3 
    /*0002c56c*/ BNE         VI_DRV_CheckWdrRawCapacity_x2c658
    /*0002c570*/ LDR         R3, [R4, #352]              @ 0x160 
    /*0002c574*/ CMP         R3, #0 
    /*0002c578*/ BNE         VI_DRV_CheckWdrRawCapacity_x2c674
    /*0002c57c*/ LDR         R3, [R4, #356]              @ 0x164 
    /*0002c580*/ CMP         R5, R3 
    /*0002c584*/ BNE         VI_DRV_CheckWdrRawCapacity_x2c6b0
    /*0002c588*/ LDR         R3, [R4, #344]              @ 0x158 
    /*0002c58c*/ ADD         R4, R4, #336                @ 0x150 
    /*0002c590*/ CMP         R3, #4 
    /*0002c594*/ BNE         VI_DRV_CheckWdrRawCapacity_x2c6cc
    /*0002c598*/ ADD         R8, R8, #1 
    /*0002c59c*/ CMP         SL, R8 
    /*0002c5a0*/ BEQ         VI_DRV_CheckWdrRawCapacity_x2c5f4
    VI_DRV_CheckWdrRawCapacity_x2c5a4:
    /*0002c5a4*/ MOV         R0, #1 
    /*0002c5a8*/ BL          0x000000000002C5A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002c5ac*/ ADD         R3, R4, #456                @ 0x1c8 
    /*0002c5b0*/ LDRD        R2, [R3] 
    /*0002c5b4*/ LDR         R1, [R0, #84]               @ 0x54 
    /*0002c5b8*/ LDR         R0, [R4, #664]              @ 0x298 
    /*0002c5bc*/ BLX         R1 
    /*0002c5c0*/ CMP         R0, #0 
    /*0002c5c4*/ BNE         VI_DRV_CheckWdrRawCapacity_x2c54c
    /*0002c5c8*/ MOVW        R3, #5817                   @ 0x16b9 
    /*0002c5cc*/ MOVW        R2, #0                      @ .LC232 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe878] 
    /*0002c5d0*/ STR         R3, [SP] 
    /*0002c5d4*/ MOVT        R2, #0                      @ .LC232 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe878] 
    /*0002c5d8*/ LDR         R3, [PC, #704]              @ 0x000000000002c8a0 
    /*0002c5dc*/ MOV         R1, #16 
    /*0002c5e0*/ MOV         R0, #3 
    /*0002c5e4*/ BL          0x000000000002C5E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c5e8*/ MVN         R0, #0 
    VI_DRV_CheckWdrRawCapacity_x2c5ec:
    /*0002c5ec*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0002c5f0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_CheckWdrRawCapacity_x2c5f4:
    /*0002c5f4*/ MOV         R0, #0 
    /*0002c5f8*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0002c5fc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_CheckWdrRawCapacity_x2c600:
    /*0002c600*/ MOVW        R2, #0                      @ .LC233 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe8a0] 
    /*0002c604*/ MOVT        R2, #0                      @ .LC233 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe8a0] 
    /*0002c608*/ MOVW        R0, #5825                   @ 0x16c1 
    /*0002c60c*/ STR         R6, [SP, #16] 
    /*0002c610*/ STR         R3, [SP, #12] 
    /*0002c614*/ STR         R8, [SP, #8] 
    VI_DRV_CheckWdrRawCapacity_x2c618:
    /*0002c618*/ STR         R0, [SP] 
    /*0002c61c*/ MOV         R1, #16 
    /*0002c620*/ STR         FP, [SP, #4] 
    /*0002c624*/ MOV         R0, #3 
    /*0002c628*/ LDR         R3, [PC, #624]              @ 0x000000000002c8a0 
    /*0002c62c*/ BL          0x000000000002C62C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c630*/ MVN         R0, #0 
    /*0002c634*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0002c638*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_CheckWdrRawCapacity_x2c63c:
    /*0002c63c*/ MOVW        R2, #0                      @ .LC234 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe910] 
    /*0002c640*/ STR         R9, [SP, #16] 
    /*0002c644*/ MOVW        R0, #5832                   @ 0x16c8 
    /*0002c648*/ STR         R3, [SP, #12] 
    /*0002c64c*/ STR         R8, [SP, #8] 
    /*0002c650*/ MOVT        R2, #0                      @ .LC234 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe910] 
    /*0002c654*/ B           VI_DRV_CheckWdrRawCapacity_x2c618
    VI_DRV_CheckWdrRawCapacity_x2c658:
    /*0002c658*/ MOVW        R2, #0                      @ .LC235 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe984] 
    /*0002c65c*/ STR         R7, [SP, #16] 
    /*0002c660*/ MOVW        R0, #5840                   @ 0x16d0 
    /*0002c664*/ STR         R3, [SP, #12] 
    /*0002c668*/ STR         R8, [SP, #8] 
    /*0002c66c*/ MOVT        R2, #0                      @ .LC235 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe984] 
    /*0002c670*/ B           VI_DRV_CheckWdrRawCapacity_x2c618
    VI_DRV_CheckWdrRawCapacity_x2c674:
    /*0002c674*/ STR         R3, [SP, #12] 
    /*0002c678*/ MOV         R1, #0 
    /*0002c67c*/ MOVW        R3, #5848                   @ 0x16d8 
    /*0002c680*/ STR         R1, [SP, #16] 
    /*0002c684*/ STR         R3, [SP] 
    /*0002c688*/ MOVW        R2, #0                      @ .LC236 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xea00] 
    /*0002c68c*/ STR         R8, [SP, #8] 
    /*0002c690*/ MOVT        R2, #0                      @ .LC236 [R_ARM_MOVT_ABS: .rodata.str1.4+0xea00] 
    /*0002c694*/ STR         FP, [SP, #4] 
    /*0002c698*/ MOV         R1, #16 
    /*0002c69c*/ LDR         R3, [PC, #508]              @ 0x000000000002c8a0 
    /*0002c6a0*/ MOV         R0, #3 
    /*0002c6a4*/ BL          0x000000000002C6A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c6a8*/ MVN         R0, #0 
    /*0002c6ac*/ B           VI_DRV_CheckWdrRawCapacity_x2c5ec
    VI_DRV_CheckWdrRawCapacity_x2c6b0:
    /*0002c6b0*/ MOVW        R2, #0                      @ .LC237 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xea7c] 
    /*0002c6b4*/ STR         R5, [SP, #16] 
    /*0002c6b8*/ MOVW        R0, #5856                   @ 0x16e0 
    /*0002c6bc*/ STR         R3, [SP, #12] 
    /*0002c6c0*/ STR         R8, [SP, #8] 
    /*0002c6c4*/ MOVT        R2, #0                      @ .LC237 [R_ARM_MOVT_ABS: .rodata.str1.4+0xea7c] 
    /*0002c6c8*/ B           VI_DRV_CheckWdrRawCapacity_x2c618
    VI_DRV_CheckWdrRawCapacity_x2c6cc:
    /*0002c6cc*/ MOVW        R2, #0                      @ .LC238 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xeaf8] 
    /*0002c6d0*/ MOVT        R2, #0                      @ .LC238 [R_ARM_MOVT_ABS: .rodata.str1.4+0xeaf8] 
    /*0002c6d4*/ STR         R3, [SP, #12] 
    /*0002c6d8*/ MOVW        R3, #5870                   @ 0x16ee 
    /*0002c6dc*/ STR         R8, [SP, #8] 
    /*0002c6e0*/ STR         FP, [SP, #4] 
    VI_DRV_CheckWdrRawCapacity_x2c6e4:
    /*0002c6e4*/ STR         R3, [SP] 
    /*0002c6e8*/ MOV         R1, #16 
    /*0002c6ec*/ LDR         R3, [PC, #428]              @ 0x000000000002c8a0 
    /*0002c6f0*/ MOV         R0, #3 
    /*0002c6f4*/ BL          0x000000000002C6F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c6f8*/ MVN         R0, #0 
    /*0002c6fc*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0002c700*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_CheckWdrRawCapacity_x2c704:
    /*0002c704*/ LDR         R3, [R4, #20] 
    /*0002c708*/ MOVW        R1, #5805                   @ 0x16ad 
    /*0002c70c*/ STR         FP, [SP, #4] 
    /*0002c710*/ MOVW        R2, #0                      @ .LC231 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe7e8] 
    /*0002c714*/ STR         R1, [SP] 
    /*0002c718*/ MOVT        R2, #0                      @ .LC231 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe7e8] 
    /*0002c71c*/ STR         R3, [SP, #8] 
    /*0002c720*/ MOV         R1, #16 
    /*0002c724*/ LDR         R3, [PC, #372]              @ 0x000000000002c8a0 
    /*0002c728*/ MOV         R0, #3 
    /*0002c72c*/ BL          0x000000000002C72C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c730*/ MVN         R0, #0 
    /*0002c734*/ B           VI_DRV_CheckWdrRawCapacity_x2c5ec
    VI_DRV_CheckWdrRawCapacity_x2c738:
    /*0002c738*/ MOVW        R2, #0                      @ .LC222 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe420] 
    /*0002c73c*/ MOVT        R2, #0                      @ .LC222 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe420] 
    /*0002c740*/ STR         R3, [SP, #8] 
    /*0002c744*/ MOVW        R3, #5730                   @ 0x1662 
    /*0002c748*/ STR         R0, [SP, #4] 
    /*0002c74c*/ STR         R3, [SP] 
    VI_DRV_CheckWdrRawCapacity_x2c750:
    /*0002c750*/ LDR         R3, [PC, #328]              @ 0x000000000002c8a0 
    /*0002c754*/ MOV         R1, #16 
    /*0002c758*/ MOV         R0, #3 
    /*0002c75c*/ BL          0x000000000002C75C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c760*/ MVN         R0, #0 
    /*0002c764*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0002c768*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_CheckWdrRawCapacity_x2c76c:
    /*0002c76c*/ STR         R3, [SP, #12] 
    /*0002c770*/ MOVW        R2, #0                      @ .LC228 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe694] 
    /*0002c774*/ MOVW        R3, #5745                   @ 0x1671 
    /*0002c778*/ STR         R6, [SP, #8] 
    /*0002c77c*/ STR         FP, [SP, #4] 
    /*0002c780*/ MOVT        R2, #0                      @ .LC228 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe694] 
    /*0002c784*/ B           VI_DRV_CheckWdrRawCapacity_x2c6e4
    VI_DRV_CheckWdrRawCapacity_x2c788:
    /*0002c788*/ STR         R3, [SP, #12] 
    /*0002c78c*/ MOVW        R2, #0                      @ .LC229 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe6f8] 
    /*0002c790*/ MOVW        R3, #5752                   @ 0x1678 
    /*0002c794*/ STR         R9, [SP, #8] 
    /*0002c798*/ STR         FP, [SP, #4] 
    /*0002c79c*/ MOVT        R2, #0                      @ .LC229 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe6f8] 
    /*0002c7a0*/ B           VI_DRV_CheckWdrRawCapacity_x2c6e4
    VI_DRV_CheckWdrRawCapacity_x2c7a4:
    /*0002c7a4*/ STR         R3, [SP, #8] 
    /*0002c7a8*/ MOVW        R2, #0                      @ .LC215 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe19c] 
    /*0002c7ac*/ MOVW        R3, #5771                   @ 0x168b 
    /*0002c7b0*/ STR         FP, [SP, #4] 
    /*0002c7b4*/ STR         R3, [SP] 
    /*0002c7b8*/ MOVT        R2, #0                      @ .LC215 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe19c] 
    /*0002c7bc*/ B           VI_DRV_CheckWdrRawCapacity_x2c750
    VI_DRV_CheckWdrRawCapacity_x2c7c0:
    /*0002c7c0*/ MOVW        R3, #5787                   @ 0x169b 
    /*0002c7c4*/ MOVW        R2, #0                      @ .LC230 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe75c] 
    /*0002c7c8*/ STR         R5, [SP, #8] 
    /*0002c7cc*/ MOVT        R2, #0                      @ .LC230 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe75c] 
    /*0002c7d0*/ STR         FP, [SP, #4] 
    /*0002c7d4*/ STR         R3, [SP] 
    /*0002c7d8*/ B           VI_DRV_CheckWdrRawCapacity_x2c750
    VI_DRV_CheckWdrRawCapacity_x2c7dc:
    /*0002c7dc*/ STR         R3, [SP, #8] 
    /*0002c7e0*/ MOVW        R2, #0                      @ .LC221 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe3c0] 
    /*0002c7e4*/ MOVW        R3, #5722                   @ 0x165a 
    /*0002c7e8*/ STR         R0, [SP, #4] 
    /*0002c7ec*/ STR         R3, [SP] 
    /*0002c7f0*/ MOVT        R2, #0                      @ .LC221 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe3c0] 
    /*0002c7f4*/ B           VI_DRV_CheckWdrRawCapacity_x2c750
    VI_DRV_CheckWdrRawCapacity_x2c7f8:
    /*0002c7f8*/ MOVW        R3, #5737                   @ 0x1669 
    /*0002c7fc*/ STR         FP, [SP, #4] 
    /*0002c800*/ STR         R3, [SP] 
    /*0002c804*/ MOVW        R2, #0                      @ .LC211 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe060] 
    /*0002c808*/ LDR         R3, [PC, #144]              @ 0x000000000002c8a0 
    /*0002c80c*/ MOVT        R2, #0                      @ .LC211 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe060] 
    /*0002c810*/ MOV         R1, #16 
    /*0002c814*/ MOV         R0, #3 
    /*0002c818*/ BL          0x000000000002C818          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c81c*/ MVN         R0, #0 
    /*0002c820*/ B           VI_DRV_CheckWdrRawCapacity_x2c5ec
    VI_DRV_CheckWdrRawCapacity_x2c824:
    /*0002c824*/ MOVW        R3, #5764                   @ 0x1684 
    /*0002c828*/ MOVW        R2, #0                      @ .LC225 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe53c] 
    /*0002c82c*/ STR         R7, [SP, #8] 
    /*0002c830*/ MOVT        R2, #0                      @ .LC225 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe53c] 
    /*0002c834*/ STR         FP, [SP, #4] 
    /*0002c838*/ STR         R3, [SP] 
    /*0002c83c*/ B           VI_DRV_CheckWdrRawCapacity_x2c750
    VI_DRV_CheckWdrRawCapacity_x2c840:
    /*0002c840*/ STR         R3, [SP, #8] 
    /*0002c844*/ MOVW        R2, #0                      @ .LC216 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe1f8] 
    /*0002c848*/ MOVW        R3, #5778                   @ 0x1692 
    /*0002c84c*/ STR         FP, [SP, #4] 
    /*0002c850*/ STR         R3, [SP] 
    /*0002c854*/ MOVT        R2, #0                      @ .LC216 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe1f8] 
    /*0002c858*/ B           VI_DRV_CheckWdrRawCapacity_x2c750
    VI_DRV_CheckWdrRawCapacity_x2c85c:
    /*0002c85c*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0002c860*/ MOV         R3, #3 
    /*0002c864*/ MOV         R0, R3 
    /*0002c868*/ STR         R3, [SP, #16] 
    /*0002c86c*/ STR         FP, [SP, #4] 
    /*0002c870*/ MOVW        R3, #5795                   @ 0x16a3 
    /*0002c874*/ STR         R2, [SP, #8] 
    /*0002c878*/ MOV         R1, #16 
    /*0002c87c*/ MOV         R2, #0 
    /*0002c880*/ STR         R3, [SP] 
    /*0002c884*/ STR         R2, [SP, #12] 
    /*0002c888*/ MOVW        R2, #0                      @ .LC219 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe324] 
    /*0002c88c*/ LDR         R3, [PC, #12]               @ 0x000000000002c8a0 
    /*0002c890*/ MOVT        R2, #0                      @ .LC219 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe324] 
    /*0002c894*/ BL          0x000000000002C894          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002c898*/ MVN         R0, #0 
    /*0002c89c*/ B           VI_DRV_CheckWdrRawCapacity_x2c5ec
    /*0002c8a0*/ LDRDEQ      R1, [R0], -R8 
FUNC_END VI_DRV_CheckWdrRawCapacity


FUNC_BEGIN VI_DRV_GetYuvStrideByBitWidth
    /*0002c8a4*/ CMP         R2, #3 
    /*0002c8a8*/ BEQ         VI_DRV_GetYuvStrideByBitWidth_x2c8c4
    /*0002c8ac*/ MUL         R0, R1, R0 
    /*0002c8b0*/ ADD         R0, R0, #7 
    /*0002c8b4*/ LSR         R0, R0, #3 
    /*0002c8b8*/ ADD         R0, R0, #15 
    /*0002c8bc*/ BIC         R0, R0, #15 
    /*0002c8c0*/ BX          LR 
    VI_DRV_GetYuvStrideByBitWidth_x2c8c4:
    /*0002c8c4*/ ADD         R0, R0, #31 
    /*0002c8c8*/ BIC         R3, R0, #31 
    /*0002c8cc*/ LSR         R0, R0, #5 
    /*0002c8d0*/ MUL         R3, R1, R3 
    /*0002c8d4*/ ADD         R0, R0, #15 
    /*0002c8d8*/ LSR         R3, R3, #3 
    /*0002c8dc*/ ADD         R3, R3, #15 
    /*0002c8e0*/ BIC         R3, R3, #15 
    /*0002c8e4*/ ADD         R0, R0, R3 
    /*0002c8e8*/ BIC         R0, R0, #15 
    /*0002c8ec*/ ADD         R0, R0, #16 
    /*0002c8f0*/ BX          LR 
FUNC_END VI_DRV_GetYuvStrideByBitWidth


FUNC_BEGIN VI_DRV_GetFrmVbBlk
    /*0002c8f4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002c8f8*/ MOV         R6, R0 
    /*0002c8fc*/ LDR         R2, [R6, #20] 
    /*0002c900*/ SUB         SP, SP, #108                @ 0x6c 
    /*0002c904*/ LDR         R5, [R6, #28] 
    /*0002c908*/ MOV         R4, R1 
    /*0002c90c*/ LDR         LR, [R6, #16] 
    /*0002c910*/ MOV         R0, #2 
    /*0002c914*/ LDR         IP, [R6, #24] 
    /*0002c918*/ MOV         R3, #0 
    /*0002c91c*/ LDR         R1, [R6, #8] 
    /*0002c920*/ STR         R2, [SP, #56]               @ 0x38 
    /*0002c924*/ LDR         R2, [R6, #12] 
    /*0002c928*/ STR         R3, [SP, #16] 
    /*0002c92c*/ STR         R3, [SP, #64]               @ 0x40 
    /*0002c930*/ STR         R2, [SP, #40]               @ 0x28 
    /*0002c934*/ STR         R3, [SP, #48]               @ 0x30 
    /*0002c938*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0002c93c*/ STR         R5, [SP, #52]               @ 0x34 
    /*0002c940*/ STR         LR, [SP, #32] 
    /*0002c944*/ STR         IP, [SP, #60]               @ 0x3c 
    /*0002c948*/ STR         R1, [SP, #36]               @ 0x24 
    /*0002c94c*/ LDM         R6, {R9, SL} 
    /*0002c950*/ BL          0x000000000002C950          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002c954*/ LDR         R3, [R0, #120]              @ 0x78 
    /*0002c958*/ CMP         R3, #0 
    /*0002c95c*/ MOVWEQ      R3, #6021                   @ 0x1785 
    /*0002c960*/ MOVWEQ      R2, #0                      @ .LC239 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xeb50] 
    /*0002c964*/ STREQ       R3, [SP] 
    /*0002c968*/ MOVTEQ      R2, #0                      @ .LC239 [R_ARM_MOVT_ABS: .rodata.str1.4+0xeb50] 
    /*0002c96c*/ BEQ         VI_DRV_GetFrmVbBlk_x2cc10
    /*0002c970*/ MOV         R0, #2 
    /*0002c974*/ BL          0x000000000002C974          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002c978*/ ADD         R1, SP, #68                 @ 0x44 
    /*0002c97c*/ LDR         R3, [R0, #120]              @ 0x78 
    /*0002c980*/ ADD         R0, SP, #32 
    /*0002c984*/ BLX         R3 
    /*0002c988*/ MOV         R0, #2 
    /*0002c98c*/ BL          0x000000000002C98C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002c990*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0002c994*/ CMP         R3, #0 
    /*0002c998*/ BEQ         VI_DRV_GetFrmVbBlk_x2cc00
    /*0002c99c*/ MOV         R0, #2 
    /*0002c9a0*/ MOV         R8, #16 
    /*0002c9a4*/ STR         R9, [SP, #24] 
    /*0002c9a8*/ STR         SL, [SP, #28] 
    /*0002c9ac*/ STR         R8, [SP, #20] 
    /*0002c9b0*/ BL          0x000000000002C9B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002c9b4*/ ADD         R1, SP, R8 
    /*0002c9b8*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0002c9bc*/ ADD         R0, SP, #20 
    /*0002c9c0*/ BLX         R3 
    /*0002c9c4*/ SUBS        R5, R0, #0 
    /*0002c9c8*/ BNE         VI_DRV_GetFrmVbBlk_x2cb98
    /*0002c9cc*/ MOV         R0, #1 
    /*0002c9d0*/ BL          0x000000000002C9D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002c9d4*/ LDR         R3, [SP, #16] 
    /*0002c9d8*/ MOV         R2, R5 
    /*0002c9dc*/ MOV         R1, R5 
    /*0002c9e0*/ LDR         R7, [R0, #12] 
    /*0002c9e4*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0002c9e8*/ BLX         R7 
    /*0002c9ec*/ CMN         R0, #1 
    /*0002c9f0*/ MOV         R7, R0 
    /*0002c9f4*/ BEQ         VI_DRV_GetFrmVbBlk_x2cbc8
    /*0002c9f8*/ MOV         R0, #1 
    /*0002c9fc*/ BL          0x000000000002C9FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002ca00*/ LDR         R3, [R0, #40]               @ 0x28 
    /*0002ca04*/ MOV         R0, R7 
    /*0002ca08*/ BLX         R3 
    /*0002ca0c*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0002ca10*/ LDR         R2, [SP, #40]               @ 0x28 
    /*0002ca14*/ MOV         R3, #4 
    /*0002ca18*/ STR         R8, [R4, #332]              @ 0x14c 
    /*0002ca1c*/ STM         R4, {R1, R2, R3} 
    /*0002ca20*/ STR         R0, [R4, #328]              @ 0x148 
    /*0002ca24*/ MOV         R0, #1 
    /*0002ca28*/ LDR         R3, [R6, #28] 
    /*0002ca2c*/ STR         R3, [R4, #24] 
    /*0002ca30*/ LDR         R3, [R6, #20] 
    /*0002ca34*/ STR         R3, [R4, #20] 
    /*0002ca38*/ LDR         R3, [R6, #24] 
    /*0002ca3c*/ STR         R3, [R4, #16] 
    /*0002ca40*/ LDR         R3, [R6, #16] 
    /*0002ca44*/ STR         R3, [R4, #12] 
    /*0002ca48*/ BL          0x000000000002CA48          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002ca4c*/ LDR         R3, [R0, #100]              @ 0x64 
    /*0002ca50*/ MOV         R0, R7 
    /*0002ca54*/ BLX         R3 
    /*0002ca58*/ MOV         R2, #64                     @ 0x40 
    /*0002ca5c*/ MOV         R1, R0 
    /*0002ca60*/ ADD         R0, R4, #264                @ 0x108 
    /*0002ca64*/ BL          0x000000000002CA64          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002ca68*/ MOV         R0, #1 
    /*0002ca6c*/ BL          0x000000000002CA6C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002ca70*/ LDR         R3, [R0, #52]               @ 0x34 
    /*0002ca74*/ MOV         R0, R7 
    /*0002ca78*/ BLX         R3 
    /*0002ca7c*/ MOV         R3, R1 
    /*0002ca80*/ LDR         R1, [SP, #80]               @ 0x50 
    /*0002ca84*/ MOV         R2, R0 
    /*0002ca88*/ STRD        R2, [R4, #72]               @ 0x48 
    /*0002ca8c*/ ADDS        R2, R2, R1 
    /*0002ca90*/ MOV         R0, #1 
    /*0002ca94*/ ADC         R3, R3, #0 
    /*0002ca98*/ STRD        R2, [R4, #80]               @ 0x50 
    /*0002ca9c*/ STRD        R2, [R4, #88]               @ 0x58 
    /*0002caa0*/ BL          0x000000000002CAA0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002caa4*/ LDR         R3, [R0, #48]               @ 0x30 
    /*0002caa8*/ MOV         R0, R7 
    /*0002caac*/ BLX         R3 
    /*0002cab0*/ LDR         R6, [SP, #76]               @ 0x4c 
    /*0002cab4*/ LDRD        SL, [R4, #72]               @ 0x48 
    /*0002cab8*/ MOV         R7, #0 
    /*0002cabc*/ LDR         IP, [SP, #80]               @ 0x50 
    /*0002cac0*/ MOV         R3, #0 
    /*0002cac4*/ ADDS        SL, SL, R6 
    /*0002cac8*/ LDR         R2, [SP, #88]               @ 0x58 
    /*0002cacc*/ ADC         FP, FP, R7 
    /*0002cad0*/ LDR         LR, [SP, #72]               @ 0x48 
    /*0002cad4*/ STRD        SL, [R4, #120]              @ 0x78 
    /*0002cad8*/ STR         LR, [R4, #32] 
    /*0002cadc*/ STR         LR, [R4, #36]               @ 0x24 
    /*0002cae0*/ STR         LR, [R4, #40]               @ 0x28 
    /*0002cae4*/ ADDS        R8, R0, R6 
    /*0002cae8*/ STRD        R0, [R4, #96]               @ 0x60 
    /*0002caec*/ ADC         R9, R1, R7 
    /*0002caf0*/ ADDS        R0, R0, IP 
    /*0002caf4*/ ADC         R1, R1, #0 
    /*0002caf8*/ LDR         R6, [SP, #100]              @ 0x64 
    /*0002cafc*/ STRD        R0, [R4, #104]              @ 0x68 
    /*0002cb00*/ MOV         R7, #0 
    /*0002cb04*/ STRD        R0, [R4, #112]              @ 0x70 
    /*0002cb08*/ ADDS        R0, SL, R2 
    /*0002cb0c*/ ADC         R1, FP, R3 
    /*0002cb10*/ ADDS        R2, R2, R8 
    /*0002cb14*/ ADC         R3, R3, R9 
    /*0002cb18*/ STRD        R0, [R4, #168]              @ 0xa8 
    /*0002cb1c*/ ADDS        R0, R0, R6 
    /*0002cb20*/ STRD        R2, [R4, #192]              @ 0xc0 
    /*0002cb24*/ ADC         R1, R1, R7 
    /*0002cb28*/ ADDS        R2, R2, R6 
    /*0002cb2c*/ LDR         R6, [SP, #92]               @ 0x5c 
    /*0002cb30*/ ADC         R3, R3, R7 
    /*0002cb34*/ LDR         IP, [SP, #96]               @ 0x60 
    /*0002cb38*/ MOV         R7, #0 
    /*0002cb3c*/ STRD        R2, [R4, #200]              @ 0xc8 
    /*0002cb40*/ ADDS        SL, SL, R6 
    /*0002cb44*/ STRD        R2, [R4, #208]              @ 0xd0 
    /*0002cb48*/ ADC         FP, FP, R7 
    /*0002cb4c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0002cb50*/ ADDS        R6, R6, R8 
    /*0002cb54*/ ADC         R7, R7, R9 
    /*0002cb58*/ STRD        R8, [R4, #144]              @ 0x90 
    /*0002cb5c*/ STRD        R0, [R4, #176]              @ 0xb0 
    /*0002cb60*/ STRD        R0, [R4, #184]              @ 0xb8 
    /*0002cb64*/ STRD        SL, [R4, #128]              @ 0x80 
    /*0002cb68*/ STRD        SL, [R4, #136]              @ 0x88 
    /*0002cb6c*/ STRD        R6, [R4, #152]              @ 0x98 
    /*0002cb70*/ STRD        R6, [R4, #160]              @ 0xa0 
    /*0002cb74*/ STR         R3, [R4, #44]               @ 0x2c 
    /*0002cb78*/ STR         R3, [R4, #48]               @ 0x30 
    /*0002cb7c*/ STR         R3, [R4, #52]               @ 0x34 
    /*0002cb80*/ STR         IP, [R4, #56]               @ 0x38 
    /*0002cb84*/ STR         IP, [R4, #60]               @ 0x3c 
    /*0002cb88*/ STR         IP, [R4, #64]               @ 0x40 
    VI_DRV_GetFrmVbBlk_x2cb8c:
    /*0002cb8c*/ MOV         R0, R5 
    /*0002cb90*/ ADD         SP, SP, #108                @ 0x6c 
    /*0002cb94*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_GetFrmVbBlk_x2cb98:
    /*0002cb98*/ MOVW        R3, #6040                   @ 0x1798 
    /*0002cb9c*/ STR         SL, [SP, #8] 
    /*0002cba0*/ STR         R3, [SP] 
    /*0002cba4*/ MOV         R1, R8 
    /*0002cba8*/ STR         R9, [SP, #4] 
    /*0002cbac*/ MOVW        R2, #0                      @ .LC240 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xeb84] 
    /*0002cbb0*/ LDR         R3, [PC, #112]              @ 0x000000000002cc28 
    /*0002cbb4*/ MOVT        R2, #0                      @ .LC240 [R_ARM_MOVT_ABS: .rodata.str1.4+0xeb84] 
    /*0002cbb8*/ MOV         R0, #3 
    /*0002cbbc*/ MVN         R5, #0 
    /*0002cbc0*/ BL          0x000000000002CBC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002cbc4*/ B           VI_DRV_GetFrmVbBlk_x2cb8c
    VI_DRV_GetFrmVbBlk_x2cbc8:
    /*0002cbc8*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0002cbcc*/ MOVW        R3, #6048                   @ 0x17a0 
    /*0002cbd0*/ MOV         R1, R8 
    /*0002cbd4*/ STR         R3, [SP] 
    /*0002cbd8*/ STR         SL, [SP, #8] 
    /*0002cbdc*/ MOVW        R2, #0                      @ .LC241 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xebc4] 
    /*0002cbe0*/ STR         R0, [SP, #12] 
    /*0002cbe4*/ MOVT        R2, #0                      @ .LC241 [R_ARM_MOVT_ABS: .rodata.str1.4+0xebc4] 
    /*0002cbe8*/ STR         R9, [SP, #4] 
    /*0002cbec*/ MOV         R0, #3 
    /*0002cbf0*/ LDR         R3, [PC, #48]               @ 0x000000000002cc28 
    /*0002cbf4*/ MOV         R5, R7 
    /*0002cbf8*/ BL          0x000000000002CBF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002cbfc*/ B           VI_DRV_GetFrmVbBlk_x2cb8c
    VI_DRV_GetFrmVbBlk_x2cc00:
    /*0002cc00*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc698] 
    /*0002cc04*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc698] 
    /*0002cc08*/ MOVW        R3, #6030                   @ 0x178e 
    /*0002cc0c*/ STR         R3, [SP] 
    VI_DRV_GetFrmVbBlk_x2cc10:
    /*0002cc10*/ LDR         R3, [PC, #16]               @ 0x000000000002cc28 
    /*0002cc14*/ MOV         R1, #16 
    /*0002cc18*/ MOV         R0, #3 
    /*0002cc1c*/ MVN         R5, #0 
    /*0002cc20*/ BL          0x000000000002CC20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002cc24*/ B           VI_DRV_GetFrmVbBlk_x2cb8c
    /*0002cc28*/ STRDEQ      R1, [R0], -R4 
FUNC_END VI_DRV_GetFrmVbBlk


FUNC_BEGIN VI_DRV_GetWchVbBlk
    /*0002cc2c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002cc30*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002cc34*/ LSL         R8, R0, #2 
    /*0002cc38*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002cc3c*/ ADD         R2, R5, R8 
    /*0002cc40*/ SUB         SP, SP, #48                 @ 0x30 
    /*0002cc44*/ MOV         R3, #0 
    /*0002cc48*/ MOV         R6, R0 
    /*0002cc4c*/ LDR         R4, [R2, #728]              @ 0x2d8 
    /*0002cc50*/ MOV         R7, R1 
    /*0002cc54*/ STR         R0, [SP, #8] 
    /*0002cc58*/ STR         R3, [SP, #12] 
    /*0002cc5c*/ LDR         R2, [R4, #300]              @ 0x12c 
    /*0002cc60*/ STR         R3, [SP, #40]               @ 0x28 
    /*0002cc64*/ CMP         R2, R3 
    /*0002cc68*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0002cc6c*/ BEQ         VI_DRV_GetWchVbBlk_x2cd04
    /*0002cc70*/ LDR         R1, [R4, #312]              @ 0x138 
    /*0002cc74*/ MOV         R2, R4 
    /*0002cc78*/ LDR         R3, [R4, #316]              @ 0x13c 
    /*0002cc7c*/ ADD         R4, R4, #65536              @ 0x10000 
    /*0002cc80*/ STR         R1, [SP, #16] 
    /*0002cc84*/ STR         R3, [SP, #20] 
    VI_DRV_GetWchVbBlk_x2cc88:
    /*0002cc88*/ LDR         R3, [R4, #3016]             @ 0xbc8 
    /*0002cc8c*/ LDR         R1, [R4, #3020]             @ 0xbcc 
    /*0002cc90*/ SUB         R0, R3, #25 
    /*0002cc94*/ CMP         R3, #39                     @ 0x27 
    /*0002cc98*/ CMPNE       R0, #2 
    /*0002cc9c*/ STR         R3, [SP, #24] 
    /*0002cca0*/ STR         R1, [SP, #28] 
    /*0002cca4*/ BLS         VI_DRV_GetWchVbBlk_x2ccf0
    VI_DRV_GetWchVbBlk_x2cca8:
    /*0002cca8*/ MOV         R3, #0 
    /*0002ccac*/ STR         R3, [SP, #36]               @ 0x24 
    VI_DRV_GetWchVbBlk_x2ccb0:
    /*0002ccb0*/ LDR         R0, [R2, #320]              @ 0x140 
    /*0002ccb4*/ MOV         R3, #0 
    /*0002ccb8*/ STR         R3, [SP, #32] 
    /*0002ccbc*/ BL          0x000000000002CCBC          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*0002ccc0*/ CMP         R0, #1 
    /*0002ccc4*/ ADDEQ       R3, R5, R8 
    /*0002ccc8*/ MOVNE       R0, R6 
    /*0002cccc*/ LDREQ       R3, [R3, #728]              @ 0x2d8 
    /*0002ccd0*/ LDREQ       R0, [R3, #4] 
    /*0002ccd4*/ BL          0x000000000002CCD4          @ VI_DRV_GetColorGamutFromIsp [R_ARM_CALL: .text+0x38a4c] 
    /*0002ccd8*/ MOV         R1, R7 
    /*0002ccdc*/ STR         R0, [R7, #28] 
    /*0002cce0*/ ADD         R0, SP, #8 
    /*0002cce4*/ BL          0x000000000002CCE4          @ VI_DRV_GetFrmVbBlk [R_ARM_CALL: .text+0x2c8f4] 
    /*0002cce8*/ ADD         SP, SP, #48                 @ 0x30 
    /*0002ccec*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_GetWchVbBlk_x2ccf0:
    /*0002ccf0*/ LDR         R3, [R4, #3024]             @ 0xbd0 
    /*0002ccf4*/ CMP         R3, #1 
    /*0002ccf8*/ STREQ       R3, [SP, #36]               @ 0x24 
    /*0002ccfc*/ BEQ         VI_DRV_GetWchVbBlk_x2ccb0
    /*0002cd00*/ B           VI_DRV_GetWchVbBlk_x2cca8
    VI_DRV_GetWchVbBlk_x2cd04:
    /*0002cd04*/ MOV         R1, SP 
    /*0002cd08*/ ADD         R4, R4, #65536              @ 0x10000 
    /*0002cd0c*/ BL          0x000000000002CD0C          @ VI_DRV_GetIspPubRect [R_ARM_CALL: .text+0x38cb8] 
    /*0002cd10*/ LDR         R3, [SP] 
    /*0002cd14*/ LDR         R2, [SP, #4] 
    /*0002cd18*/ CMP         R3, #0 
    /*0002cd1c*/ LDREQ       R3, [R4, #3008]             @ 0xbc0 
    /*0002cd20*/ CMP         R2, #0 
    /*0002cd24*/ LDREQ       R2, [R4, #3012]             @ 0xbc4 
    /*0002cd28*/ STR         R3, [SP, #16] 
    /*0002cd2c*/ ADD         R3, R5, R8 
    /*0002cd30*/ STR         R2, [SP, #20] 
    /*0002cd34*/ LDR         R2, [R3, #728]              @ 0x2d8 
    /*0002cd38*/ B           VI_DRV_GetWchVbBlk_x2cc88
FUNC_END VI_DRV_GetWchVbBlk


FUNC_BEGIN VI_DRV_MarkChnEnableFlag
    /*0002cd3c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002cd40*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002cd44*/ ADD         IP, R3, R0, LSL #2 
    /*0002cd48*/ MOV         R3, #12 
    /*0002cd4c*/ MOV         R0, #0 
    /*0002cd50*/ LDR         IP, [IP, #728]              @ 0x2d8 
    /*0002cd54*/ MLA         R1, R3, R1, IP 
    /*0002cd58*/ ADD         R1, R1, #86016              @ 0x15000 
    /*0002cd5c*/ STR         R2, [R1, #280]              @ 0x118 
    /*0002cd60*/ BX          LR 
FUNC_END VI_DRV_MarkChnEnableFlag


FUNC_BEGIN VI_DRV_GetRegion
    /*0002cd64*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0002cd68*/ MOV         R7, R0 
    /*0002cd6c*/ SUB         SP, SP, #28 
    /*0002cd70*/ MOV         R0, #3 
    /*0002cd74*/ MOV         R5, R1 
    /*0002cd78*/ MOV         R4, R2 
    /*0002cd7c*/ MOV         R6, R3 
    /*0002cd80*/ BL          0x000000000002CD80          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002cd84*/ CMP         R0, #0 
    /*0002cd88*/ BEQ         VI_DRV_GetRegion_x2ce04
    /*0002cd8c*/ MOV         R0, #3 
    /*0002cd90*/ BL          0x000000000002CD90          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002cd94*/ LDR         R3, [R0, #8] 
    /*0002cd98*/ CMP         R3, #0 
    /*0002cd9c*/ BEQ         VI_DRV_GetRegion_x2ce04
    /*0002cda0*/ MOV         R0, #3 
    /*0002cda4*/ STR         R5, [SP, #20] 
    /*0002cda8*/ STR         R7, [SP, #16] 
    /*0002cdac*/ MOV         R5, #16 
    /*0002cdb0*/ STR         R5, [SP, #12] 
    /*0002cdb4*/ BL          0x000000000002CDB4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002cdb8*/ MOV         R2, R6 
    /*0002cdbc*/ ADD         R1, SP, #12 
    /*0002cdc0*/ LDR         R3, [R0, #8] 
    /*0002cdc4*/ MOV         R0, R4 
    /*0002cdc8*/ BLX         R3 
    /*0002cdcc*/ SUBS        R6, R0, #0 
    /*0002cdd0*/ BEQ         VI_DRV_GetRegion_x2cdf8
    /*0002cdd4*/ MOVW        R3, #6166                   @ 0x1816 
    /*0002cdd8*/ MOVW        R2, #0                      @ .LC242 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xec0c] 
    /*0002cddc*/ STR         R3, [SP] 
    /*0002cde0*/ MOV         R1, R5 
    /*0002cde4*/ STR         R4, [SP, #4] 
    /*0002cde8*/ MOVT        R2, #0                      @ .LC242 [R_ARM_MOVT_ABS: .rodata.str1.4+0xec0c] 
    /*0002cdec*/ LDR         R3, [PC, #24]               @ 0x000000000002ce0c 
    /*0002cdf0*/ MOV         R0, #3 
    /*0002cdf4*/ BL          0x000000000002CDF4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_GetRegion_x2cdf8:
    /*0002cdf8*/ MOV         R0, R6 
    /*0002cdfc*/ ADD         SP, SP, #28 
    /*0002ce00*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_GetRegion_x2ce04:
    /*0002ce04*/ MVN         R6, #0 
    /*0002ce08*/ B           VI_DRV_GetRegion_x2cdf8
    /*0002ce0c*/ ANDEQ       R1, R0, R8, LSL #24 
FUNC_END VI_DRV_GetRegion


FUNC_BEGIN VI_DRV_PutRegion
    /*0002ce10*/ PUSH        {R4, R5, R6, LR} 
    /*0002ce14*/ MOV         R6, R0 
    /*0002ce18*/ SUB         SP, SP, #32 
    /*0002ce1c*/ MOV         R0, #3 
    /*0002ce20*/ MOV         R4, R1 
    /*0002ce24*/ MOV         R5, R2 
    /*0002ce28*/ BL          0x000000000002CE28          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002ce2c*/ CMP         R0, #0 
    /*0002ce30*/ BEQ         VI_DRV_PutRegion_x2ce7c
    /*0002ce34*/ MOV         R0, #3 
    /*0002ce38*/ BL          0x000000000002CE38          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002ce3c*/ LDR         R3, [R0, #12] 
    /*0002ce40*/ CMP         R3, #0 
    /*0002ce44*/ BEQ         VI_DRV_PutRegion_x2ce7c
    /*0002ce48*/ MOV         R0, #3 
    /*0002ce4c*/ STR         R6, [SP, #24] 
    /*0002ce50*/ STR         R4, [SP, #28] 
    /*0002ce54*/ MOV         R6, #16 
    /*0002ce58*/ STR         R6, [SP, #20] 
    /*0002ce5c*/ BL          0x000000000002CE5C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002ce60*/ MOV         R2, #0 
    /*0002ce64*/ ADD         R1, SP, #20 
    /*0002ce68*/ LDR         R3, [R0, #12] 
    /*0002ce6c*/ MOV         R0, R5 
    /*0002ce70*/ BLX         R3 
    /*0002ce74*/ CMP         R0, #0 
    /*0002ce78*/ BNE         VI_DRV_PutRegion_x2ce84
    VI_DRV_PutRegion_x2ce7c:
    /*0002ce7c*/ ADD         SP, SP, #32 
    /*0002ce80*/ POP         {R4, R5, R6, PC} 
    VI_DRV_PutRegion_x2ce84:
    /*0002ce84*/ STR         R5, [SP, #8] 
    /*0002ce88*/ MOV         R1, R6 
    /*0002ce8c*/ STR         R4, [SP, #4] 
    /*0002ce90*/ MOVW        R3, #6193                   @ 0x1831 
    /*0002ce94*/ MOVW        R2, #0                      @ .LC243 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xec44] 
    /*0002ce98*/ STR         R3, [SP] 
    /*0002ce9c*/ MOVT        R2, #0                      @ .LC243 [R_ARM_MOVT_ABS: .rodata.str1.4+0xec44] 
    /*0002cea0*/ LDR         R3, [PC, #12]               @ 0x000000000002ceb4 
    /*0002cea4*/ MOV         R0, #3 
    /*0002cea8*/ BL          0x000000000002CEA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002ceac*/ ADD         SP, SP, #32 
    /*0002ceb0*/ POP         {R4, R5, R6, PC} 
    /*0002ceb4*/ ANDEQ       R1, R0, IP, LSL IP 
FUNC_END VI_DRV_PutRegion


FUNC_BEGIN VI_DRV_GetCoverInfo
    /*0002ceb8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002cebc*/ SUB         SP, SP, #28 
    /*0002cec0*/ MOV         R7, R3 
    /*0002cec4*/ ADD         R3, SP, #12 
    /*0002cec8*/ MOV         R5, R0 
    /*0002cecc*/ MOV         R6, R1 
    /*0002ced0*/ MOV         R4, R2 
    /*0002ced4*/ BL          0x000000000002CED4          @ VI_DRV_GetRegion [R_ARM_CALL: .text+0x2cd64] 
    /*0002ced8*/ SUBS        R8, R0, #0 
    /*0002cedc*/ BEQ         VI_DRV_GetCoverInfo_x2ceec
    VI_DRV_GetCoverInfo_x2cee0:
    /*0002cee0*/ MOV         R0, R8 
    /*0002cee4*/ ADD         SP, SP, #28 
    /*0002cee8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_GetCoverInfo_x2ceec:
    /*0002ceec*/ MOV         R1, R6 
    /*0002cef0*/ MOV         R0, R5 
    /*0002cef4*/ MOV         R2, R4 
    /*0002cef8*/ BL          0x000000000002CEF8          @ VI_DRV_PutRegion [R_ARM_CALL: .text+0x2ce10] 
    /*0002cefc*/ LDR         R3, [SP, #16] 
    /*0002cf00*/ CMP         R3, #0 
    /*0002cf04*/ BEQ         VI_DRV_GetCoverInfo_x2cee0
    /*0002cf08*/ LDR         R2, [SP, #12] 
    /*0002cf0c*/ STR         R4, [R7, #8] 
    /*0002cf10*/ CMP         R2, #0 
    /*0002cf14*/ STR         R3, [R7] 
    /*0002cf18*/ STR         R2, [R7, #4] 
    /*0002cf1c*/ BEQ         VI_DRV_GetCoverInfo_x2cee0
    /*0002cf20*/ MOVW        R9, #0                      @ .LC244 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xec88] 
    /*0002cf24*/ LDR         FP, [PC, #228]              @ 0x000000000002d010 
    /*0002cf28*/ ADD         R4, R7, #24 
    /*0002cf2c*/ MOVT        R9, #0                      @ .LC244 [R_ARM_MOVT_ABS: .rodata.str1.4+0xec88] 
    /*0002cf30*/ MOV         R5, R8 
    /*0002cf34*/ MOV         R6, R8 
    /*0002cf38*/ MOVW        SL, #6233                   @ 0x1859 
    /*0002cf3c*/ B           VI_DRV_GetCoverInfo_x2cfb4
    VI_DRV_GetCoverInfo_x2cf40:
    /*0002cf40*/ LDR         R2, [R3, #8] 
    /*0002cf44*/ LDR         R2, [R2, #64]               @ 0x40 
    /*0002cf48*/ STR         R2, [R4, #-12] 
    /*0002cf4c*/ LDR         R2, [R3, #8] 
    /*0002cf50*/ LDR         R2, [R2, #4] 
    /*0002cf54*/ CMP         R2, #0 
    /*0002cf58*/ STR         R2, [R4, #-8] 
    /*0002cf5c*/ BNE         VI_DRV_GetCoverInfo_x2cff8
    /*0002cf60*/ LDR         R2, [R3, #8] 
    /*0002cf64*/ LDR         R2, [R2, #8] 
    /*0002cf68*/ STR         R2, [R4] 
    /*0002cf6c*/ LDR         R2, [R3, #8] 
    /*0002cf70*/ LDR         R2, [R2, #12] 
    /*0002cf74*/ STR         R2, [R4, #4] 
    /*0002cf78*/ LDR         R2, [R3, #8] 
    /*0002cf7c*/ LDR         R2, [R2, #16] 
    /*0002cf80*/ STR         R2, [R4, #8] 
    /*0002cf84*/ LDR         R2, [R3, #8] 
    /*0002cf88*/ LDR         R2, [R2, #20] 
    /*0002cf8c*/ STR         R2, [R4, #12] 
    /*0002cf90*/ LDR         R3, [R3, #8] 
    /*0002cf94*/ LDR         R3, [R3, #68]               @ 0x44 
    /*0002cf98*/ STR         R3, [R4, #-4] 
    VI_DRV_GetCoverInfo_x2cf9c:
    /*0002cf9c*/ LDR         R3, [R7, #4] 
    /*0002cfa0*/ ADD         R6, R6, #1 
    /*0002cfa4*/ ADD         R5, R5, #12 
    /*0002cfa8*/ ADD         R4, R4, #52                 @ 0x34 
    /*0002cfac*/ CMP         R3, R6 
    /*0002cfb0*/ BLS         VI_DRV_GetCoverInfo_x2cee0
    VI_DRV_GetCoverInfo_x2cfb4:
    /*0002cfb4*/ LDR         R3, [SP, #20] 
    /*0002cfb8*/ ADD         R3, R3, R5 
    /*0002cfbc*/ LDR         R2, [R3, #8] 
    /*0002cfc0*/ LDR         R2, [R2, #68]               @ 0x44 
    /*0002cfc4*/ CMP         R2, #16777216               @ 0x1000000 
    /*0002cfc8*/ STR         R2, [R4, #-4] 
    /*0002cfcc*/ BCC         VI_DRV_GetCoverInfo_x2cf40
    /*0002cfd0*/ STR         R2, [SP, #4] 
    /*0002cfd4*/ MOV         R3, FP 
    /*0002cfd8*/ STR         SL, [SP] 
    /*0002cfdc*/ MOV         R2, R9 
    /*0002cfe0*/ MOV         R1, #16 
    /*0002cfe4*/ MOV         R0, #4 
    /*0002cfe8*/ BL          0x000000000002CFE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002cfec*/ LDR         R3, [SP, #20] 
    /*0002cff0*/ ADD         R3, R3, R5 
    /*0002cff4*/ B           VI_DRV_GetCoverInfo_x2cf40
    VI_DRV_GetCoverInfo_x2cff8:
    /*0002cff8*/ LDR         R1, [R3, #8] 
    /*0002cffc*/ MOV         R2, #40                     @ 0x28 
    /*0002d000*/ MOV         R0, R4 
    /*0002d004*/ ADD         R1, R1, #24 
    /*0002d008*/ BL          0x000000000002D008          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002d00c*/ B           VI_DRV_GetCoverInfo_x2cf9c
    /*0002d010*/ ANDEQ       R1, R0, R0, LSR IP 
FUNC_END VI_DRV_GetCoverInfo


FUNC_BEGIN VI_DRV_PrepareChnCoverExInfo
    /*0002d014*/ MOV         R3, #844                    @ 0x34c 
    /*0002d018*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d01c*/ MUL         R3, R3, R1 
    /*0002d020*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d024*/ ADD         IP, R2, R0, LSL #2 
    /*0002d028*/ MOV         R2, #2 
    /*0002d02c*/ PUSH        {R4, LR} 
    /*0002d030*/ ADD         R3, R3, #68608              @ 0x10c00 
    /*0002d034*/ LDR         IP, [IP, #728]              @ 0x2d8 
    /*0002d038*/ ADD         R3, R3, #724                @ 0x2d4 
    /*0002d03c*/ ADD         R3, IP, R3 
    /*0002d040*/ BL          0x000000000002D040          @ VI_DRV_GetCoverInfo [R_ARM_CALL: .text+0x2ceb8] 
    /*0002d044*/ MOV         R0, #0 
    /*0002d048*/ POP         {R4, PC} 
FUNC_END VI_DRV_PrepareChnCoverExInfo


FUNC_BEGIN VI_DRV_GetChnCoverExInfo
    /*0002d04c*/ MOV         IP, #844                    @ 0x34c 
    /*0002d050*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d054*/ MUL         R1, IP, R1 
    /*0002d058*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d05c*/ ADD         R3, R3, R0, LSL #2 
    /*0002d060*/ MOV         R0, R2 
    /*0002d064*/ PUSH        {R4, LR} 
    /*0002d068*/ ADD         R1, R1, #68608              @ 0x10c00 
    /*0002d06c*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002d070*/ ADD         R1, R1, #724                @ 0x2d4 
    /*0002d074*/ MOV         R2, IP 
    /*0002d078*/ ADD         R1, R3, R1 
    /*0002d07c*/ BL          0x000000000002D07C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002d080*/ MOV         R0, #0 
    /*0002d084*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetChnCoverExInfo


FUNC_BEGIN VI_DRV_GetChnCoverExNum
    /*0002d088*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d08c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d090*/ ADD         R0, R3, R0, LSL #2 
    /*0002d094*/ MOV         R3, #844                    @ 0x34c 
    /*0002d098*/ LDR         R2, [R0, #728]              @ 0x2d8 
    /*0002d09c*/ MLA         R1, R3, R1, R2 
    /*0002d0a0*/ ADD         R1, R1, #68608              @ 0x10c00 
    /*0002d0a4*/ LDR         R0, [R1, #728]              @ 0x2d8 
    /*0002d0a8*/ BX          LR 
FUNC_END VI_DRV_GetChnCoverExNum


FUNC_BEGIN VI_DRV_GetOsdInfo
    /*0002d0ac*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002d0b0*/ SUB         SP, SP, #16 
    /*0002d0b4*/ MOV         R5, R3 
    /*0002d0b8*/ ADD         R3, SP, #4 
    /*0002d0bc*/ MOV         R7, R0 
    /*0002d0c0*/ MOV         R8, R1 
    /*0002d0c4*/ MOV         R6, R2 
    /*0002d0c8*/ BL          0x000000000002D0C8          @ VI_DRV_GetRegion [R_ARM_CALL: .text+0x2cd64] 
    /*0002d0cc*/ SUBS        R4, R0, #0 
    /*0002d0d0*/ BNE         VI_DRV_GetOsdInfo_x2d1a4
    /*0002d0d4*/ LDR         R3, [SP, #4] 
    /*0002d0d8*/ CMP         R3, #0 
    /*0002d0dc*/ BEQ         VI_DRV_GetOsdInfo_x2d1b0
    /*0002d0e0*/ LDR         R3, [SP, #8] 
    /*0002d0e4*/ CMP         R3, #0 
    /*0002d0e8*/ BEQ         VI_DRV_GetOsdInfo_x2d1a4
    VI_DRV_GetOsdInfo_x2d0ec:
    /*0002d0ec*/ LDR         IP, [SP, #4] 
    /*0002d0f0*/ STR         R6, [R5, #12] 
    /*0002d0f4*/ CMP         IP, #0 
    /*0002d0f8*/ STM         R5, {R3, IP} 
    /*0002d0fc*/ BEQ         VI_DRV_GetOsdInfo_x2d1a4
    /*0002d100*/ LDR         R2, [SP, #12] 
    /*0002d104*/ MOV         R1, #12 
    /*0002d108*/ MOV         R3, R5 
    /*0002d10c*/ MLA         IP, R1, IP, R2 
    VI_DRV_GetOsdInfo_x2d110:
    /*0002d110*/ LDR         R1, [R2, #8] 
    /*0002d114*/ ADD         R2, R2, #12 
    /*0002d118*/ ADD         R3, R3, #64                 @ 0x40 
    /*0002d11c*/ LDR         R1, [R1, #8] 
    /*0002d120*/ STR         R1, [R3, #-48]              @ 0xffffffd0 
    /*0002d124*/ LDR         R1, [R2, #-4] 
    /*0002d128*/ LDR         R1, [R1, #12] 
    /*0002d12c*/ STR         R1, [R3, #-44]              @ 0xffffffd4 
    /*0002d130*/ LDR         R1, [R2, #-4] 
    /*0002d134*/ LDR         R1, [R1, #16] 
    /*0002d138*/ STR         R1, [R3, #-40]              @ 0xffffffd8 
    /*0002d13c*/ LDR         R1, [R2, #-4] 
    /*0002d140*/ LDR         R1, [R1, #20] 
    /*0002d144*/ STR         R1, [R3, #-36]              @ 0xffffffdc 
    /*0002d148*/ LDR         R1, [R2, #-4] 
    /*0002d14c*/ LDR         R1, [R1, #76]               @ 0x4c 
    /*0002d150*/ STR         R1, [R3, #-20]              @ 0xffffffec 
    /*0002d154*/ LDR         R1, [R2, #-4] 
    /*0002d158*/ LDR         R1, [R1, #80]               @ 0x50 
    /*0002d15c*/ STR         R1, [R3, #-24]              @ 0xffffffe8 
    /*0002d160*/ LDR         R1, [R2, #-4] 
    /*0002d164*/ LDR         R1, [R1, #72]               @ 0x48 
    /*0002d168*/ STR         R1, [R3, #-28]              @ 0xffffffe4 
    /*0002d16c*/ LDR         R1, [R2, #-4] 
    /*0002d170*/ LDR         R1, [R1, #64]               @ 0x40 
    /*0002d174*/ STR         R1, [R3, #-32]              @ 0xffffffe0 
    /*0002d178*/ LDR         R1, [R2, #-4] 
    /*0002d17c*/ LDRD        R0, [R1, #88]               @ 0x58 
    /*0002d180*/ STRD        R0, [R3, #-16] 
    /*0002d184*/ LDR         R1, [R2, #-4] 
    /*0002d188*/ LDR         R1, [R1, #104]              @ 0x68 
    /*0002d18c*/ STR         R1, [R3, #4] 
    /*0002d190*/ LDR         R1, [R2, #-4] 
    /*0002d194*/ CMP         R2, IP 
    /*0002d198*/ LDR         R1, [R1, #112]              @ 0x70 
    /*0002d19c*/ STR         R1, [R3, #8] 
    /*0002d1a0*/ BNE         VI_DRV_GetOsdInfo_x2d110
    VI_DRV_GetOsdInfo_x2d1a4:
    /*0002d1a4*/ MOV         R0, R4 
    /*0002d1a8*/ ADD         SP, SP, #16 
    /*0002d1ac*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_GetOsdInfo_x2d1b0:
    /*0002d1b0*/ MOV         R1, R8 
    /*0002d1b4*/ MOV         R0, R7 
    /*0002d1b8*/ MOV         R2, R6 
    /*0002d1bc*/ BL          0x000000000002D1BC          @ VI_DRV_PutRegion [R_ARM_CALL: .text+0x2ce10] 
    /*0002d1c0*/ LDR         R3, [SP, #8] 
    /*0002d1c4*/ CMP         R3, #0 
    /*0002d1c8*/ BNE         VI_DRV_GetOsdInfo_x2d0ec
    /*0002d1cc*/ B           VI_DRV_GetOsdInfo_x2d1a4
FUNC_END VI_DRV_GetOsdInfo


FUNC_BEGIN VI_DRV_PrepareChnOsdInfo
    /*0002d1d0*/ MOV         R3, #1040                   @ 0x410 
    /*0002d1d4*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d1d8*/ MUL         R3, R3, R1 
    /*0002d1dc*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d1e0*/ ADD         IP, R2, R0, LSL #2 
    /*0002d1e4*/ MOV         R2, #3 
    /*0002d1e8*/ PUSH        {R4, LR} 
    /*0002d1ec*/ ADD         R3, R3, #76800              @ 0x12c00 
    /*0002d1f0*/ LDR         IP, [IP, #728]              @ 0x2d8 
    /*0002d1f4*/ ADD         R3, R3, #128                @ 0x80 
    /*0002d1f8*/ ADD         R3, IP, R3 
    /*0002d1fc*/ BL          0x000000000002D1FC          @ VI_DRV_GetOsdInfo [R_ARM_CALL: .text+0x2d0ac] 
    /*0002d200*/ MOV         R0, #0 
    /*0002d204*/ POP         {R4, PC} 
FUNC_END VI_DRV_PrepareChnOsdInfo


FUNC_BEGIN VI_DRV_GetChnOsdInfo
    /*0002d208*/ MOV         IP, #1040                   @ 0x410 
    /*0002d20c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d210*/ MUL         R1, IP, R1 
    /*0002d214*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d218*/ ADD         R3, R3, R0, LSL #2 
    /*0002d21c*/ MOV         R0, R2 
    /*0002d220*/ PUSH        {R4, LR} 
    /*0002d224*/ ADD         R1, R1, #76800              @ 0x12c00 
    /*0002d228*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002d22c*/ ADD         R1, R1, #128                @ 0x80 
    /*0002d230*/ MOV         R2, IP 
    /*0002d234*/ ADD         R1, R3, R1 
    /*0002d238*/ BL          0x000000000002D238          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002d23c*/ MOV         R0, #0 
    /*0002d240*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetChnOsdInfo


FUNC_BEGIN VI_DRV_GetChnOsdNum
    /*0002d244*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d248*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d24c*/ ADD         R0, R3, R0, LSL #2 
    /*0002d250*/ MOV         R3, #1040                   @ 0x410 
    /*0002d254*/ LDR         R2, [R0, #728]              @ 0x2d8 
    /*0002d258*/ MLA         R1, R3, R1, R2 
    /*0002d25c*/ ADD         R1, R1, #76800              @ 0x12c00 
    /*0002d260*/ LDR         R0, [R1, #132]              @ 0x84 
    /*0002d264*/ BX          LR 
FUNC_END VI_DRV_GetChnOsdNum


FUNC_BEGIN VI_DRV_PrepareNRXV2ManualParam
    /*0002d268*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d26c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d270*/ ADD         R0, R3, R0, LSL #2 
    /*0002d274*/ PUSH        {R4, LR} 
    /*0002d278*/ LDR         R4, [R0, #728]              @ 0x2d8 
    /*0002d27c*/ ADD         R1, R4, #68608              @ 0x10c00 
    /*0002d280*/ ADD         R0, R4, #88064              @ 0x15800 
    /*0002d284*/ ADD         R4, R4, #86016              @ 0x15000 
    /*0002d288*/ ADD         R1, R1, #60                 @ 0x3c 
    /*0002d28c*/ ADD         R0, R0, #136                @ 0x88 
    /*0002d290*/ BL          0x000000000002D290          @ V500MapNRx [R_ARM_CALL: .text+0x3b594] 
    /*0002d294*/ MOV         R2, #110                    @ 0x6e 
    /*0002d298*/ MOV         R3, #1 
    /*0002d29c*/ STR         R2, [R4, #2800]             @ 0xaf0 
    /*0002d2a0*/ MOV         R0, #0 
    /*0002d2a4*/ STR         R3, [R4, #2180]             @ 0x884 
    /*0002d2a8*/ POP         {R4, PC} 
FUNC_END VI_DRV_PrepareNRXV2ManualParam


FUNC_BEGIN VI_DRV_GetNRISORange
    /*0002d2ac*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d2b0*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d2b4*/ ADD         R0, IP, R0, LSL #2 
    /*0002d2b8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002d2bc*/ LDR         IP, [R0, #728]              @ 0x2d8 
    /*0002d2c0*/ LDR         R6, [SP, #24] 
    /*0002d2c4*/ ADD         R0, IP, #65536              @ 0x10000 
    /*0002d2c8*/ LDR         R7, [SP, #28] 
    /*0002d2cc*/ LDR         LR, [R0, #3124]             @ 0xc34 
    /*0002d2d0*/ CMP         LR, #2 
    /*0002d2d4*/ BEQ         VI_DRV_GetNRISORange_x2d2fc
    /*0002d2d8*/ MOVW        R2, #0                      @ .LC246 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xed1c] 
    /*0002d2dc*/ MOVT        R2, #0                      @ .LC246 [R_ARM_MOVT_ABS: .rodata.str1.4+0xed1c] 
    /*0002d2e0*/ MOVW        R3, #6461                   @ 0x193d 
    /*0002d2e4*/ STR         R3, [SP, #24] 
    VI_DRV_GetNRISORange_x2d2e8:
    /*0002d2e8*/ LDR         R3, [PC, #224]              @ 0x000000000002d3d0 
    /*0002d2ec*/ MOV         R1, #16 
    /*0002d2f0*/ MOV         R0, #3 
    /*0002d2f4*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_DRV_GetNRISORange_x2d2f8:
    /*0002d2f8*/ B           VI_DRV_GetNRISORange_x2d2f8 @ HI_LOG [R_ARM_JUMP24: +0x0] 
    VI_DRV_GetNRISORange_x2d2fc:
    /*0002d2fc*/ LDR         LR, [R0, #3168]             @ 0xc60 
    /*0002d300*/ CMP         LR, R1 
    /*0002d304*/ BCS         VI_DRV_GetNRISORange_x2d388
    /*0002d308*/ LDR         R5, [R0, #3164]             @ 0xc5c 
    /*0002d30c*/ ADD         R8, IP, #68608              @ 0x10c00 
    /*0002d310*/ ADD         R8, R8, #96                 @ 0x60 
    /*0002d314*/ SUB         R0, R5, #-1073741823        @ 0xc0000001 
    /*0002d318*/ LDR         IP, [R8, R0, LSL #2] 
    /*0002d31c*/ CMP         R1, IP 
    /*0002d320*/ BHI         VI_DRV_GetNRISORange_x2d368
    /*0002d324*/ CMP         R5, #0 
    /*0002d328*/ MOVNE       LR, R8 
    /*0002d32c*/ MOVNE       IP, #0 
    /*0002d330*/ BNE         VI_DRV_GetNRISORange_x2d348
    /*0002d334*/ B           VI_DRV_GetNRISORange_x2d354
    VI_DRV_GetNRISORange_x2d338:
    /*0002d338*/ LDR         R4, [LR, #4]! 
    /*0002d33c*/ CMP         R1, R4 
    /*0002d340*/ BLS         VI_DRV_GetNRISORange_x2d3a8
    /*0002d344*/ MOV         IP, R0 
    VI_DRV_GetNRISORange_x2d348:
    /*0002d348*/ ADD         R0, IP, #1 
    /*0002d34c*/ CMP         R0, R5 
    /*0002d350*/ BNE         VI_DRV_GetNRISORange_x2d338
    VI_DRV_GetNRISORange_x2d354:
    /*0002d354*/ MOVW        R3, #6456                   @ 0x1938 
    /*0002d358*/ MOVW        R2, #0                      @ .LC245 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xece8] 
    /*0002d35c*/ STR         R3, [SP, #24] 
    /*0002d360*/ MOVT        R2, #0                      @ .LC245 [R_ARM_MOVT_ABS: .rodata.str1.4+0xece8] 
    /*0002d364*/ B           VI_DRV_GetNRISORange_x2d2e8
    VI_DRV_GetNRISORange_x2d368:
    /*0002d368*/ SUB         R5, R5, #1 
    /*0002d36c*/ STR         R5, [R2] 
    /*0002d370*/ STR         R5, [R6] 
    /*0002d374*/ LDR         R2, [R8, R0, LSL #2] 
    /*0002d378*/ STR         R2, [R3] 
    /*0002d37c*/ LDR         R3, [R8, R0, LSL #2] 
    /*0002d380*/ STR         R3, [R7] 
    /*0002d384*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_GetNRISORange_x2d388:
    /*0002d388*/ MOV         R1, #0 
    /*0002d38c*/ STR         R1, [R2] 
    /*0002d390*/ STR         R1, [R6] 
    /*0002d394*/ LDR         R2, [R0, #3168]             @ 0xc60 
    /*0002d398*/ STR         R2, [R3] 
    /*0002d39c*/ LDR         R3, [R0, #3168]             @ 0xc60 
    /*0002d3a0*/ STR         R3, [R7] 
    /*0002d3a4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_GetNRISORange_x2d3a8:
    /*0002d3a8*/ BIC         IP, IP, IP, ASR #31 
    /*0002d3ac*/ STR         IP, [R2] 
    /*0002d3b0*/ STR         R0, [R6] 
    /*0002d3b4*/ LDR         R2, [R2] 
    /*0002d3b8*/ LDR         R2, [R8, R2, LSL #2] 
    /*0002d3bc*/ STR         R2, [R3] 
    /*0002d3c0*/ LDR         R3, [R6] 
    /*0002d3c4*/ LDR         R3, [R8, R3, LSL #2] 
    /*0002d3c8*/ STR         R3, [R7] 
    /*0002d3cc*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*0002d3d0*/ ANDEQ       R1, R0, R4, ASR #24 
FUNC_END VI_DRV_GetNRISORange


FUNC_BEGIN VI_DRV_PrepareNRXV2AutoParam
    /*0002d3d4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d3d8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d3dc*/ PUSH        {R4, R5, R6, LR} 
    /*0002d3e0*/ ADD         R3, R3, R0, LSL #2 
    /*0002d3e4*/ SUB         SP, SP, #80                 @ 0x50 
    /*0002d3e8*/ MOV         IP, #0 
    /*0002d3ec*/ ADD         R1, SP, #24 
    /*0002d3f0*/ LDR         R4, [R3, #728]              @ 0x2d8 
    /*0002d3f4*/ MOV         R2, #100                    @ 0x64 
    /*0002d3f8*/ STR         IP, [SP, #8] 
    /*0002d3fc*/ STR         IP, [SP, #12] 
    /*0002d400*/ MOV         R5, R0 
    /*0002d404*/ STR         R2, [SP, #16] 
    /*0002d408*/ STR         R2, [SP, #20] 
    /*0002d40c*/ BL          0x000000000002D40C          @ VI_DRV_GetFrameInfoFromIsp [R_ARM_CALL: .text+0x388d8] 
    /*0002d410*/ ADD         R2, SP, #12 
    /*0002d414*/ CMP         R0, #0 
    /*0002d418*/ MOV         R0, R5 
    /*0002d41c*/ ADDEQ       R6, R4, #86016              @ 0x15000 
    /*0002d420*/ ADDNE       R6, R4, #86016              @ 0x15000 
    /*0002d424*/ LDREQ       R1, [SP, #24] 
    /*0002d428*/ MOVNE       R3, #110                    @ 0x6e 
    /*0002d42c*/ MOVNE       R1, R3 
    /*0002d430*/ STRNE       R3, [R6, #2800]             @ 0xaf0 
    /*0002d434*/ ADD         R3, SP, #20 
    /*0002d438*/ ADD         R5, R4, #68608              @ 0x10c00 
    /*0002d43c*/ STREQ       R1, [R6, #2800]             @ 0xaf0 
    /*0002d440*/ ADD         R5, R5, #676                @ 0x2a4 
    /*0002d444*/ STR         R3, [SP, #4] 
    /*0002d448*/ ADD         R3, SP, #16 
    /*0002d44c*/ STR         R2, [SP] 
    /*0002d450*/ ADD         R2, SP, #8 
    /*0002d454*/ BL          0x000000000002D454          @ VI_DRV_GetNRISORange [R_ARM_CALL: .text+0x2d2ac] 
    /*0002d458*/ LDR         IP, [SP, #12] 
    /*0002d45c*/ LDR         R2, [SP, #8] 
    /*0002d460*/ MOV         R3, #30 
    /*0002d464*/ LDR         R0, [R6, #2800]             @ 0xaf0 
    /*0002d468*/ MLA         IP, R3, IP, R4 
    /*0002d46c*/ LDR         R1, [SP, #16] 
    /*0002d470*/ MLA         R2, R3, R2, R4 
    /*0002d474*/ STR         R5, [SP, #4] 
    /*0002d478*/ ADD         IP, IP, #68608              @ 0x10c00 
    /*0002d47c*/ LDR         R3, [SP, #20] 
    /*0002d480*/ ADD         IP, IP, #160                @ 0xa0 
    /*0002d484*/ STR         IP, [SP] 
    /*0002d488*/ ADD         R2, R2, #68608              @ 0x10c00 
    /*0002d48c*/ ADD         R2, R2, #160                @ 0xa0 
    /*0002d490*/ BL          0x000000000002D490          @ V500CalcNRXV2AutoParam [R_ARM_CALL: .text+0x3b874] 
    /*0002d494*/ ADD         R0, R4, #88064              @ 0x15800 
    /*0002d498*/ MOV         R1, R5 
    /*0002d49c*/ ADD         R0, R0, #136                @ 0x88 
    /*0002d4a0*/ BL          0x000000000002D4A0          @ V500MapNRx [R_ARM_CALL: .text+0x3b594] 
    /*0002d4a4*/ MOV         R3, #1 
    /*0002d4a8*/ MOV         R0, #0 
    /*0002d4ac*/ STR         R3, [R6, #2180]             @ 0x884 
    /*0002d4b0*/ ADD         SP, SP, #80                 @ 0x50 
    /*0002d4b4*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_PrepareNRXV2AutoParam


FUNC_BEGIN VI_DRV_PrepareNRXV2Param
    /*0002d4b8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d4bc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d4c0*/ ADD         R3, R3, R0, LSL #2 
    /*0002d4c4*/ PUSH        {R4, R5, R6, LR} 
    /*0002d4c8*/ LDR         R5, [R3, #728]              @ 0x2d8 
    /*0002d4cc*/ ADD         R3, R5, #65536              @ 0x10000 
    /*0002d4d0*/ LDR         R4, [R3, #3128]             @ 0xc38 
    /*0002d4d4*/ CMP         R4, #1 
    /*0002d4d8*/ BEQ         VI_DRV_PrepareNRXV2Param_x2d4f4
    /*0002d4dc*/ CMP         R4, #0 
    /*0002d4e0*/ BEQ         VI_DRV_PrepareNRXV2Param_x2d4ec
    VI_DRV_PrepareNRXV2Param_x2d4e4:
    /*0002d4e4*/ MOV         R0, #0 
    /*0002d4e8*/ POP         {R4, R5, R6, PC} 
    VI_DRV_PrepareNRXV2Param_x2d4ec:
    /*0002d4ec*/ POP         {R4, R5, R6, LR} 
    VI_DRV_PrepareNRXV2Param_x2d4f0:
    /*0002d4f0*/ B           VI_DRV_PrepareNRXV2Param_x2d4f0@ VI_DRV_PrepareNRXV2AutoParam [R_ARM_JUMP24: .text+0x2d3d4] 
    VI_DRV_PrepareNRXV2Param_x2d4f4:
    /*0002d4f4*/ ADD         R1, R5, #68608              @ 0x10c00 
    /*0002d4f8*/ ADD         R0, R5, #88064              @ 0x15800 
    /*0002d4fc*/ ADD         R5, R5, #86016              @ 0x15000 
    /*0002d500*/ ADD         R1, R1, #60                 @ 0x3c 
    /*0002d504*/ ADD         R0, R0, #136                @ 0x88 
    /*0002d508*/ BL          0x000000000002D508          @ V500MapNRx [R_ARM_CALL: .text+0x3b594] 
    /*0002d50c*/ MOV         R3, #110                    @ 0x6e 
    /*0002d510*/ STR         R4, [R5, #2180]             @ 0x884 
    /*0002d514*/ STR         R3, [R5, #2800]             @ 0xaf0 
    /*0002d518*/ B           VI_DRV_PrepareNRXV2Param_x2d4e4
FUNC_END VI_DRV_PrepareNRXV2Param


FUNC_BEGIN VI_DRV_PrepareNRXParam
    /*0002d51c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d520*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d524*/ ADD         R3, R3, R0, LSL #2 
    /*0002d528*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002d52c*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0002d530*/ LDR         R3, [R3, #3124]             @ 0xc34 
    /*0002d534*/ CMP         R3, #2 
    /*0002d538*/ BEQ         VI_DRV_PrepareNRXParam_x2d544
    /*0002d53c*/ MOV         R0, #0 
    /*0002d540*/ BX          LR 
    VI_DRV_PrepareNRXParam_x2d544:
    /*0002d544*/ B           VI_DRV_PrepareNRXParam_x2d544@ VI_DRV_PrepareNRXV2Param [R_ARM_JUMP24: .text+0x2d4b8] 
FUNC_END VI_DRV_PrepareNRXParam


FUNC_BEGIN VI_DRV_Prepare3dnrParam
    /*0002d548*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d54c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d550*/ ADD         R3, R3, R0, LSL #2 
    /*0002d554*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002d558*/ ADD         R2, R3, #86016              @ 0x15000 
    /*0002d55c*/ LDR         R1, [R2, #2176]             @ 0x880 
    /*0002d560*/ CMP         R1, #0 
    /*0002d564*/ BNE         VI_DRV_Prepare3dnrParam_x2d580
    /*0002d568*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0002d56c*/ LDR         R3, [R3, #3124]             @ 0xc34 
    /*0002d570*/ CMP         R3, #2 
    /*0002d574*/ BEQ         VI_DRV_Prepare3dnrParam_x2d590
    /*0002d578*/ MOV         R0, #0 
    /*0002d57c*/ BX          LR 
    VI_DRV_Prepare3dnrParam_x2d580:
    /*0002d580*/ MOV         R3, #1 
    /*0002d584*/ MOV         R0, #0 
    /*0002d588*/ STR         R3, [R2, #2180]             @ 0x884 
    /*0002d58c*/ BX          LR 
    VI_DRV_Prepare3dnrParam_x2d590:
    /*0002d590*/ B           VI_DRV_Prepare3dnrParam_x2d590@ VI_DRV_PrepareNRXV2Param [R_ARM_JUMP24: .text+0x2d4b8] 
FUNC_END VI_DRV_Prepare3dnrParam


FUNC_BEGIN VI_DRV_Prepare3dnrInfo
    /*0002d594*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d598*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d59c*/ ADD         R3, R3, R0, LSL #2 
    /*0002d5a0*/ PUSH        {R4, LR} 
    /*0002d5a4*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002d5a8*/ ADD         R2, R3, #65536              @ 0x10000 
    /*0002d5ac*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002d5b0*/ LDR         R2, [R2, #3028]             @ 0xbd4 
    /*0002d5b4*/ STR         R2, [R3, #272]              @ 0x110 
    /*0002d5b8*/ BL          0x000000000002D5B8          @ VI_DRV_Prepare3dnrParam [R_ARM_CALL: .text+0x2d548] 
    /*0002d5bc*/ MOV         R0, #0 
    /*0002d5c0*/ POP         {R4, PC} 
FUNC_END VI_DRV_Prepare3dnrInfo


FUNC_BEGIN VI_DRV_PrepareLDCIInfo
    /*0002d5c4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d5c8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d5cc*/ ADD         R0, R3, R0, LSL #2 
    /*0002d5d0*/ LDR         R3, [R0, #712]              @ 0x2c8 
    /*0002d5d4*/ CMP         R3, #1 
    /*0002d5d8*/ BLS         VI_DRV_PrepareLDCIInfo_x2d5e4
    /*0002d5dc*/ MOV         R0, #0 
    /*0002d5e0*/ BX          LR 
    VI_DRV_PrepareLDCIInfo_x2d5e4:
    /*0002d5e4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0002d5e8*/ CMP         R1, #0 
    /*0002d5ec*/ LDR         R6, [R0, #728]              @ 0x2d8 
    /*0002d5f0*/ MOV         R5, R1 
    /*0002d5f4*/ ADD         R7, R6, #86016              @ 0x15000 
    /*0002d5f8*/ LDR         R3, [R7, #2140]             @ 0x85c 
    /*0002d5fc*/ RSB         R8, R3, #1 
    /*0002d600*/ BLE         VI_DRV_PrepareLDCIInfo_x2d648
    /*0002d604*/ MOVW        R2, #22040                  @ 0x5618 
    /*0002d608*/ ADD         R3, R3, R2 
    /*0002d60c*/ ADD         R2, R8, R2 
    /*0002d610*/ LDR         R0, [R7, #2136]             @ 0x858 
    /*0002d614*/ LDR         R9, [R6, R3, LSL #2] 
    /*0002d618*/ LDR         R4, [R6, R2, LSL #2] 
    /*0002d61c*/ BL          0x000000000002D61C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0002d620*/ ADD         R1, R5, #22016              @ 0x5600 
    /*0002d624*/ ADD         R3, R6, #88064              @ 0x15800 
    /*0002d628*/ ADD         R1, R1, #26 
    /*0002d62c*/ ADD         R3, R3, #104                @ 0x68 
    /*0002d630*/ ADD         R1, R6, R1, LSL #2 
    VI_DRV_PrepareLDCIInfo_x2d634:
    /*0002d634*/ STR         R9, [R3], #4 
    /*0002d638*/ CMP         R3, R1 
    /*0002d63c*/ STR         R4, [R3, #8] 
    /*0002d640*/ ADD         R4, R4, R0 
    /*0002d644*/ BNE         VI_DRV_PrepareLDCIInfo_x2d634
    VI_DRV_PrepareLDCIInfo_x2d648:
    /*0002d648*/ STR         R8, [R7, #2140]             @ 0x85c 
    /*0002d64c*/ MOV         R0, #0 
    /*0002d650*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VI_DRV_PrepareLDCIInfo


FUNC_BEGIN VI_DRV_TransPixel
    /*0002d654*/ SUB         R3, R0, #17 
    /*0002d658*/ CMP         R3, #22 
    /*0002d65c*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*0002d660*/ B           VI_DRV_TransPixel_x2d6e0
    /*0002d664*/ ANDEQ       SP, R2, R0, ASR #13 
    /*0002d668*/ ANDEQ       SP, R2, R0, ASR #13 
    /*0002d66c*/ ANDEQ       SP, R2, R0, ASR #13 
    /*0002d670*/ ANDEQ       SP, R2, R0, ASR #13 
    /*0002d674*/ ANDEQ       SP, R2, R0, ASR #13 
    /*0002d678*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d67c*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d680*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d684*/ LDRDEQ      SP, [R2], -R8 
    /*0002d688*/ LDRDEQ      SP, [R2], -R0 
    /*0002d68c*/ ANDEQ       SP, R2, R8, ASR #13 
    /*0002d690*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d694*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d698*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d69c*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d6a0*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d6a4*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d6a8*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d6ac*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d6b0*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d6b4*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d6b8*/ ANDEQ       SP, R2, R0, ROR #13 
    /*0002d6bc*/ LDRDEQ      SP, [R2], -R0 
    /*0002d6c0*/ MOV         R0, #2 
    /*0002d6c4*/ BX          LR 
    /*0002d6c8*/ MOV         R0, #5 
    /*0002d6cc*/ BX          LR 
    /*0002d6d0*/ MOV         R0, #0 
    /*0002d6d4*/ BX          LR 
    /*0002d6d8*/ MOV         R0, #1 
    /*0002d6dc*/ BX          LR 
    VI_DRV_TransPixel_x2d6e0:
    /*0002d6e0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002d6e4*/ SUB         SP, SP, #12 
    /*0002d6e8*/ MOVW        R3, #6646                   @ 0x19f6 
    /*0002d6ec*/ MOV         R1, #16 
    /*0002d6f0*/ STR         R0, [SP, #4] 
    /*0002d6f4*/ MOVW        R2, #0                      @ .LC247 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xed58] 
    /*0002d6f8*/ STR         R3, [SP] 
    /*0002d6fc*/ MOVT        R2, #0                      @ .LC247 [R_ARM_MOVT_ABS: .rodata.str1.4+0xed58] 
    /*0002d700*/ LDR         R3, [PC, #16]               @ 0x000000000002d718 
    /*0002d704*/ MOV         R0, #7 
    /*0002d708*/ BL          0x000000000002D708          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002d70c*/ MOV         R0, #0 
    /*0002d710*/ ADD         SP, SP, #12 
    /*0002d714*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0002d718*/ ANDEQ       R1, R0, IP, ASR IP 
FUNC_END VI_DRV_TransPixel


FUNC_BEGIN VI_DRV_TransBitWidth
    /*0002d71c*/ SUB         R0, R0, #17 
    /*0002d720*/ CMP         R0, #22 
    /*0002d724*/ LDRLS       PC, [PC, R0, LSL #2] 
    /*0002d728*/ B           VI_DRV_TransBitWidth_x2d7bc
    /*0002d72c*/ MULEQ       R2, R4, R7 
    /*0002d730*/ MULEQ       R2, IP, R7 
    /*0002d734*/ ANDEQ       SP, R2, R4, LSR #15 
    /*0002d738*/ ANDEQ       SP, R2, IP, LSR #15 
    /*0002d73c*/ @           <UNDEFINED> instruction: 0x0002d7b4 
    /*0002d740*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d744*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d748*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d74c*/ ANDEQ       SP, R2, R8, LSL #15 
    /*0002d750*/ ANDEQ       SP, R2, R8, LSL #15 
    /*0002d754*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d758*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d75c*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d760*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d764*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d768*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d76c*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d770*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d774*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d778*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d77c*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d780*/ @           <UNDEFINED> instruction: 0x0002d7bc 
    /*0002d784*/ ANDEQ       SP, R2, R8, LSL #15 
    /*0002d788*/ ADDS        R0, R1, #0 
    /*0002d78c*/ MOVNE       R0, #1 
    /*0002d790*/ BX          LR 
    /*0002d794*/ MOV         R0, #0 
    /*0002d798*/ BX          LR 
    /*0002d79c*/ MOV         R0, #1 
    /*0002d7a0*/ BX          LR 
    /*0002d7a4*/ MOV         R0, #2 
    /*0002d7a8*/ BX          LR 
    /*0002d7ac*/ MOV         R0, #3 
    /*0002d7b0*/ BX          LR 
    /*0002d7b4*/ MOV         R0, #4 
    /*0002d7b8*/ BX          LR 
    VI_DRV_TransBitWidth_x2d7bc:
    /*0002d7bc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002d7c0*/ SUB         SP, SP, #12 
    /*0002d7c4*/ MOVW        R3, #6710                   @ 0x1a36 
    /*0002d7c8*/ MOV         R1, #16 
    /*0002d7cc*/ STR         R3, [SP] 
    /*0002d7d0*/ MOVW        R2, #0                      @ .LC248 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xed98] 
    /*0002d7d4*/ LDR         R3, [PC, #20]               @ 0x000000000002d7f0 
    /*0002d7d8*/ MOVT        R2, #0                      @ .LC248 [R_ARM_MOVT_ABS: .rodata.str1.4+0xed98] 
    /*0002d7dc*/ MOV         R0, #6 
    /*0002d7e0*/ BL          0x000000000002D7E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002d7e4*/ MOV         R0, #0 
    /*0002d7e8*/ ADD         SP, SP, #12 
    /*0002d7ec*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0002d7f0*/ ANDEQ       R1, R0, R0, ROR IP 
FUNC_END VI_DRV_TransBitWidth


FUNC_BEGIN VI_DRV_TransVideoToDrvPic
    /*0002d7f4*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002d7f8*/ MOV         R4, R0 
    /*0002d7fc*/ LDR         R3, [R2, #332]              @ 0x14c 
    /*0002d800*/ MOV         R5, R2 
    /*0002d804*/ LDR         R7, [R2, #32] 
    /*0002d808*/ LDR         R6, [R2, #36]               @ 0x24 
    /*0002d80c*/ STR         R3, [R0, #92]               @ 0x5c 
    /*0002d810*/ SUB         R7, R7, #32 
    /*0002d814*/ STR         R1, [R0, #168]              @ 0xa8 
    /*0002d818*/ SUB         R6, R6, #32 
    /*0002d81c*/ LDR         R3, [R2, #4] 
    /*0002d820*/ CLZ         R7, R7 
    /*0002d824*/ CLZ         R6, R6 
    /*0002d828*/ LSR         R7, R7, #5 
    /*0002d82c*/ STR         R3, [R0, #64]               @ 0x40 
    /*0002d830*/ LSR         R6, R6, #5 
    /*0002d834*/ LDR         R3, [R2] 
    /*0002d838*/ STR         R3, [R0, #60]               @ 0x3c 
    /*0002d83c*/ LDR         R3, [R2, #20] 
    /*0002d840*/ STR         R3, [R0, #84]               @ 0x54 
    /*0002d844*/ LDR         R3, [R2, #16] 
    /*0002d848*/ STR         R3, [R0, #80]               @ 0x50 
    /*0002d84c*/ LDR         R3, [R2, #24] 
    /*0002d850*/ STR         R3, [R0, #88]               @ 0x58 
    /*0002d854*/ LDR         R1, [R2, #24] 
    /*0002d858*/ LDR         R0, [R2, #12] 
    /*0002d85c*/ BL          0x000000000002D85C          @ VI_DRV_TransBitWidth [R_ARM_CALL: .text+0x2d71c] 
    /*0002d860*/ STR         R0, [R4, #68]               @ 0x44 
    /*0002d864*/ LDR         R3, [R5, #12] 
    /*0002d868*/ STR         R3, [R4, #160]              @ 0xa0 
    /*0002d86c*/ LDRD        R2, [R5, #96]               @ 0x60 
    /*0002d870*/ STRD        R2, [R4, #136]              @ 0x88 
    /*0002d874*/ LDRD        R2, [R5, #104]              @ 0x68 
    /*0002d878*/ STRD        R2, [R4, #144]              @ 0x90 
    /*0002d87c*/ LDRD        R2, [R5, #72]               @ 0x48 
    /*0002d880*/ STRD        R2, [R4, #96]               @ 0x60 
    /*0002d884*/ LDRD        R2, [R5, #80]               @ 0x50 
    /*0002d888*/ STR         R7, [R4, #120]              @ 0x78 
    /*0002d88c*/ STR         R6, [R4, #124]              @ 0x7c 
    /*0002d890*/ STRD        R2, [R4, #104]              @ 0x68 
    /*0002d894*/ STR         R6, [R4, #128]              @ 0x80 
    /*0002d898*/ LDRD        R2, [R5, #120]              @ 0x78 
    /*0002d89c*/ STRD        R2, [R4] 
    /*0002d8a0*/ LDRD        R2, [R5, #128]              @ 0x80 
    /*0002d8a4*/ STRD        R2, [R4, #8] 
    /*0002d8a8*/ LDRD        R2, [R5, #136]              @ 0x88 
    /*0002d8ac*/ STRD        R2, [R4, #16] 
    /*0002d8b0*/ LDR         R3, [R5, #44]               @ 0x2c 
    /*0002d8b4*/ STR         R3, [R4, #48]               @ 0x30 
    /*0002d8b8*/ LDR         R3, [R5, #48]               @ 0x30 
    /*0002d8bc*/ STR         R3, [R4, #52]               @ 0x34 
    /*0002d8c0*/ LDR         R3, [R5, #52]               @ 0x34 
    /*0002d8c4*/ STR         R3, [R4, #56]               @ 0x38 
    /*0002d8c8*/ LDRD        R2, [R5, #144]              @ 0x90 
    /*0002d8cc*/ STRD        R2, [R4, #24] 
    /*0002d8d0*/ LDRD        R2, [R5, #152]              @ 0x98 
    /*0002d8d4*/ STRD        R2, [R4, #32] 
    /*0002d8d8*/ LDRD        R2, [R5, #160]              @ 0xa0 
    /*0002d8dc*/ STRD        R2, [R4, #40]               @ 0x28 
    /*0002d8e0*/ LDRD        R2, [R5, #168]              @ 0xa8 
    /*0002d8e4*/ STRD        R2, [R4, #200]              @ 0xc8 
    /*0002d8e8*/ LDRD        R2, [R5, #176]              @ 0xb0 
    /*0002d8ec*/ STRD        R2, [R4, #208]              @ 0xd0 
    /*0002d8f0*/ LDRD        R2, [R5, #184]              @ 0xb8 
    /*0002d8f4*/ STRD        R2, [R4, #216]              @ 0xd8 
    /*0002d8f8*/ LDR         R3, [R5, #56]               @ 0x38 
    /*0002d8fc*/ STR         R3, [R4, #184]              @ 0xb8 
    /*0002d900*/ LDR         R3, [R5, #60]               @ 0x3c 
    /*0002d904*/ STR         R3, [R4, #188]              @ 0xbc 
    /*0002d908*/ LDR         R3, [R5, #64]               @ 0x40 
    /*0002d90c*/ STR         R3, [R4, #192]              @ 0xc0 
    /*0002d910*/ LDRD        R2, [R5, #240]              @ 0xf0 
    /*0002d914*/ STRD        R2, [R4, #176]              @ 0xb0 
    /*0002d918*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_DRV_TransVideoToDrvPic


FUNC_BEGIN VI_DRV_PrepareCurPicInfo
    /*0002d91c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d920*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d924*/ ADD         R0, R3, R0, LSL #2 
    /*0002d928*/ MOV         R2, R1 
    /*0002d92c*/ PUSH        {R4, LR} 
    /*0002d930*/ MOV         R1, #0 
    /*0002d934*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0002d938*/ ADD         R0, R0, #86016              @ 0x15000 
    /*0002d93c*/ ADD         R0, R0, #296                @ 0x128 
    /*0002d940*/ BL          0x000000000002D940          @ VI_DRV_TransVideoToDrvPic [R_ARM_CALL: .text+0x2d7f4] 
    /*0002d944*/ MOV         R0, #0 
    /*0002d948*/ POP         {R4, PC} 
FUNC_END VI_DRV_PrepareCurPicInfo


FUNC_BEGIN VI_DRV_PrepareWdrPicInfo
    /*0002d94c*/ MOV         R3, #288                    @ 0x120 
    /*0002d950*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d954*/ MUL         R3, R3, R1 
    /*0002d958*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d95c*/ ADD         R0, IP, R0, LSL #2 
    /*0002d960*/ MOV         R1, #0 
    /*0002d964*/ PUSH        {R4, LR} 
    /*0002d968*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002d96c*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0002d970*/ ADD         R3, R3, #584                @ 0x248 
    /*0002d974*/ ADD         R0, R0, R3 
    /*0002d978*/ BL          0x000000000002D978          @ VI_DRV_TransVideoToDrvPic [R_ARM_CALL: .text+0x2d7f4] 
    /*0002d97c*/ MOV         R0, #0 
    /*0002d980*/ POP         {R4, PC} 
FUNC_END VI_DRV_PrepareWdrPicInfo


FUNC_BEGIN VI_DRV_PrepareChnDestPicInfo
    /*0002d984*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002d988*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002d98c*/ ADD         R0, IP, R0, LSL #2 
    /*0002d990*/ MOV         R3, #576                    @ 0x240 
    /*0002d994*/ MUL         R3, R3, R1 
    /*0002d998*/ ADD         IP, R1, #21760              @ 0x5500 
    /*0002d99c*/ PUSH        {R4, LR} 
    /*0002d9a0*/ ADD         IP, IP, #108                @ 0x6c 
    /*0002d9a4*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0002d9a8*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002d9ac*/ ADD         R3, R3, #872                @ 0x368 
    /*0002d9b0*/ MOV         LR, #288                    @ 0x120 
    /*0002d9b4*/ MOV         R1, #0 
    /*0002d9b8*/ LDR         IP, [R0, IP, LSL #2] 
    /*0002d9bc*/ MLA         R3, LR, IP, R3 
    /*0002d9c0*/ ADD         R0, R0, R3 
    /*0002d9c4*/ BL          0x000000000002D9C4          @ VI_DRV_TransVideoToDrvPic [R_ARM_CALL: .text+0x2d7f4] 
    /*0002d9c8*/ MOV         R0, #0 
    /*0002d9cc*/ POP         {R4, PC} 
FUNC_END VI_DRV_PrepareChnDestPicInfo


FUNC_BEGIN VI_DRV_TransBitWidthEx
    /*0002d9d0*/ SUB         R3, R0, #17 
    /*0002d9d4*/ CMP         R3, #22 
    /*0002d9d8*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*0002d9dc*/ B           VI_DRV_TransBitWidthEx_x2da74
    /*0002d9e0*/ ANDEQ       SP, R2, IP, ASR #20 
    /*0002d9e4*/ ANDEQ       SP, R2, R4, ASR SL 
    /*0002d9e8*/ ANDEQ       SP, R2, IP, ASR SL 
    /*0002d9ec*/ ANDEQ       SP, R2, R4, ROR #20 
    /*0002d9f0*/ ANDEQ       SP, R2, IP, ROR #20 
    /*0002d9f4*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002d9f8*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002d9fc*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002da00*/ ANDEQ       SP, R2, IP, LSR SL 
    /*0002da04*/ ANDEQ       SP, R2, IP, LSR SL 
    /*0002da08*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002da0c*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002da10*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002da14*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002da18*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002da1c*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002da20*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002da24*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002da28*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002da2c*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002da30*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002da34*/ ANDEQ       SP, R2, R4, ROR SL 
    /*0002da38*/ ANDEQ       SP, R2, IP, LSR SL 
    /*0002da3c*/ CMP         R1, #0 
    /*0002da40*/ MOVNE       R0, #10 
    /*0002da44*/ MOVEQ       R0, #8 
    /*0002da48*/ BX          LR 
    /*0002da4c*/ MOV         R0, #8 
    /*0002da50*/ BX          LR 
    /*0002da54*/ MOV         R0, #10 
    /*0002da58*/ BX          LR 
    /*0002da5c*/ MOV         R0, #12 
    /*0002da60*/ BX          LR 
    /*0002da64*/ MOV         R0, #14 
    /*0002da68*/ BX          LR 
    /*0002da6c*/ MOV         R0, #16 
    /*0002da70*/ BX          LR 
    VI_DRV_TransBitWidthEx_x2da74:
    /*0002da74*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002da78*/ SUB         SP, SP, #12 
    /*0002da7c*/ MOVW        R3, #6775                   @ 0x1a77 
    /*0002da80*/ MOV         R1, #16 
    /*0002da84*/ STR         R0, [SP, #4] 
    /*0002da88*/ MOVW        R2, #0                      @ .LC249 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xedd4] 
    /*0002da8c*/ STR         R3, [SP] 
    /*0002da90*/ MOVT        R2, #0                      @ .LC249 [R_ARM_MOVT_ABS: .rodata.str1.4+0xedd4] 
    /*0002da94*/ LDR         R3, [PC, #16]               @ 0x000000000002daac 
    /*0002da98*/ MOV         R0, #7 
    /*0002da9c*/ BL          0x000000000002DA9C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002daa0*/ MOV         R0, #0 
    /*0002daa4*/ ADD         SP, SP, #12 
    /*0002daa8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0002daac*/ ANDEQ       R1, R0, R8, LSL #25 
FUNC_END VI_DRV_TransBitWidthEx


FUNC_BEGIN VI_DRV_TransDynamicRange2BitWidthEn
    /*0002dab0*/ SUB         R0, R0, #17 
    /*0002dab4*/ CMP         R0, #22 
    /*0002dab8*/ LDRLS       PC, [PC, R0, LSL #2] 
    /*0002dabc*/ B           VI_DRV_TransDynamicRange2BitWidthEn_x2db50
    /*0002dac0*/ ANDEQ       SP, R2, R8, LSR #22 
    /*0002dac4*/ ANDEQ       SP, R2, R0, LSR FP 
    /*0002dac8*/ ANDEQ       SP, R2, R8, LSR FP 
    /*0002dacc*/ ANDEQ       SP, R2, R0, ASR #22 
    /*0002dad0*/ ANDEQ       SP, R2, R8, ASR #22 
    /*0002dad4*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002dad8*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002dadc*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002dae0*/ ANDEQ       SP, R2, IP, LSL FP 
    /*0002dae4*/ ANDEQ       SP, R2, IP, LSL FP 
    /*0002dae8*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002daec*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002daf0*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002daf4*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002daf8*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002dafc*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002db00*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002db04*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002db08*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002db0c*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002db10*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002db14*/ ANDEQ       SP, R2, R0, ASR FP 
    /*0002db18*/ ANDEQ       SP, R2, IP, LSL FP 
    /*0002db1c*/ ADDS        R0, R1, #0 
    /*0002db20*/ MOVNE       R0, #1 
    /*0002db24*/ BX          LR 
    /*0002db28*/ MOV         R0, #0 
    /*0002db2c*/ BX          LR 
    /*0002db30*/ MOV         R0, #1 
    /*0002db34*/ BX          LR 
    /*0002db38*/ MOV         R0, #2 
    /*0002db3c*/ BX          LR 
    /*0002db40*/ MOV         R0, #3 
    /*0002db44*/ BX          LR 
    /*0002db48*/ MOV         R0, #4 
    /*0002db4c*/ BX          LR 
    VI_DRV_TransDynamicRange2BitWidthEn_x2db50:
    /*0002db50*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002db54*/ SUB         SP, SP, #12 
    /*0002db58*/ MOVW        R3, #6839                   @ 0x1ab7 
    /*0002db5c*/ MOV         R1, #16 
    /*0002db60*/ STR         R3, [SP] 
    /*0002db64*/ MOVW        R2, #0                      @ .LC248 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xed98] 
    /*0002db68*/ LDR         R3, [PC, #20]               @ 0x000000000002db84 
    /*0002db6c*/ MOVT        R2, #0                      @ .LC248 [R_ARM_MOVT_ABS: .rodata.str1.4+0xed98] 
    /*0002db70*/ MOV         R0, #6 
    /*0002db74*/ BL          0x000000000002DB74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002db78*/ MOV         R0, #0 
    /*0002db7c*/ ADD         SP, SP, #12 
    /*0002db80*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0002db84*/ ANDEQ       R1, R0, R0, LSR #25 
FUNC_END VI_DRV_TransDynamicRange2BitWidthEn


FUNC_BEGIN VI_DRV_WchTransBitWidth
    /*0002db88*/ SUB         R3, R0, #17 
    /*0002db8c*/ CMP         R3, #22 
    /*0002db90*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*0002db94*/ B           VI_DRV_WchTransBitWidth_x2dc1c
    /*0002db98*/ STRDEQ      SP, [R2], -R4 
    /*0002db9c*/ STRDEQ      SP, [R2], -IP 
    /*0002dba0*/ ANDEQ       SP, R2, R4, LSL #24 
    /*0002dba4*/ ANDEQ       SP, R2, IP, LSL #24 
    /*0002dba8*/ ANDEQ       SP, R2, R4, LSL IP 
    /*0002dbac*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbb0*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbb4*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbb8*/ STRDEQ      SP, [R2], -R4 
    /*0002dbbc*/ STRDEQ      SP, [R2], -R4 
    /*0002dbc0*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbc4*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbc8*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbcc*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbd0*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbd4*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbd8*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbdc*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbe0*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbe4*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbe8*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbec*/ ANDEQ       SP, R2, IP, LSL IP 
    /*0002dbf0*/ STRDEQ      SP, [R2], -R4 
    /*0002dbf4*/ MOV         R0, #8 
    /*0002dbf8*/ BX          LR 
    /*0002dbfc*/ MOV         R0, #10 
    /*0002dc00*/ BX          LR 
    /*0002dc04*/ MOV         R0, #12 
    /*0002dc08*/ BX          LR 
    /*0002dc0c*/ MOV         R0, #14 
    /*0002dc10*/ BX          LR 
    /*0002dc14*/ MOV         R0, #16 
    /*0002dc18*/ BX          LR 
    VI_DRV_WchTransBitWidth_x2dc1c:
    /*0002dc1c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002dc20*/ SUB         SP, SP, #12 
    /*0002dc24*/ MOVW        R3, #6924                   @ 0x1b0c 
    /*0002dc28*/ MOV         R1, #16 
    /*0002dc2c*/ STR         R0, [SP, #4] 
    /*0002dc30*/ MOVW        R2, #0                      @ .LC250 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xee14] 
    /*0002dc34*/ STR         R3, [SP] 
    /*0002dc38*/ MOVT        R2, #0                      @ .LC250 [R_ARM_MOVT_ABS: .rodata.str1.4+0xee14] 
    /*0002dc3c*/ LDR         R3, [PC, #16]               @ 0x000000000002dc54 
    /*0002dc40*/ MOV         R0, #3 
    /*0002dc44*/ BL          0x000000000002DC44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002dc48*/ MOV         R0, #8 
    /*0002dc4c*/ ADD         SP, SP, #12 
    /*0002dc50*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0002dc54*/ ANDEQ       R1, R0, R4, ASR #25 
FUNC_END VI_DRV_WchTransBitWidth


FUNC_BEGIN VI_DRV_SetCurPicConfig
    /*0002dc58*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002dc5c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002dc60*/ ADD         R0, R3, R0, LSL #2 
    /*0002dc64*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0002dc68*/ SUB         SP, SP, #88                 @ 0x58 
    /*0002dc6c*/ LDR         R8, [R0, #728]              @ 0x2d8 
    /*0002dc70*/ MOV         R9, R2 
    /*0002dc74*/ MOV         SL, R1 
    /*0002dc78*/ ADD         R8, R8, #86016              @ 0x15000 
    /*0002dc7c*/ LDR         R4, [R8, #456]              @ 0x1c8 
    /*0002dc80*/ LDR         R5, [R8, #384]              @ 0x180 
    /*0002dc84*/ MOV         R0, R4 
    /*0002dc88*/ BL          0x000000000002DC88          @ VI_DRV_TransPixel [R_ARM_CALL: .text+0x2d654] 
    /*0002dc8c*/ MOV         R1, R5 
    /*0002dc90*/ STR         R0, [SP, #72]               @ 0x48 
    /*0002dc94*/ MOV         R0, R4 
    /*0002dc98*/ BL          0x000000000002DC98          @ VI_DRV_TransBitWidth [R_ARM_CALL: .text+0x2d71c] 
    /*0002dc9c*/ ADD         LR, R8, #272                @ 0x110 
    /*0002dca0*/ LDR         R1, [R8, #380]              @ 0x17c 
    /*0002dca4*/ MOV         IP, #0 
    /*0002dca8*/ LDRD        R2, [LR, #120]              @ 0x78 
    /*0002dcac*/ LDR         R4, [R8, #356]              @ 0x164 
    /*0002dcb0*/ LDRD        R6, [LR, #128]              @ 0x80 
    /*0002dcb4*/ STRD        R2, [SP] 
    /*0002dcb8*/ SUB         R2, R1, #3 
    /*0002dcbc*/ SUB         R3, R1, #1 
    /*0002dcc0*/ CLZ         R2, R2 
    /*0002dcc4*/ CLZ         R3, R3 
    /*0002dcc8*/ SUBS        R1, R1, IP 
    /*0002dccc*/ STR         R4, [SP, #48]               @ 0x30 
    /*0002dcd0*/ LSR         R2, R2, #5 
    /*0002dcd4*/ LDRD        R4, [LR, #24] 
    /*0002dcd8*/ LSR         R3, R3, #5 
    /*0002dcdc*/ STR         R2, [SP, #56]               @ 0x38 
    /*0002dce0*/ MOVNE       R1, #1 
    /*0002dce4*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0002dce8*/ CMP         R9, IP 
    /*0002dcec*/ LDRD        R2, [LR, #32] 
    /*0002dcf0*/ STR         R1, [SP, #64]               @ 0x40 
    /*0002dcf4*/ LDR         R1, [R8, #348]              @ 0x15c 
    /*0002dcf8*/ STRD        R4, [SP, #16] 
    /*0002dcfc*/ LDR         LR, [R8, #344]              @ 0x158 
    /*0002dd00*/ LDR         R4, [R8, #360]              @ 0x168 
    /*0002dd04*/ STRD        R2, [SP, #24] 
    /*0002dd08*/ LDMNE       R9, {R2, R3} 
    /*0002dd0c*/ STR         R1, [SP, #44]               @ 0x2c 
    /*0002dd10*/ MOV         R1, SP 
    /*0002dd14*/ STR         IP, [SP, #80]               @ 0x50 
    /*0002dd18*/ STR         IP, [SP, #32] 
    /*0002dd1c*/ STRD        R6, [SP, #8] 
    /*0002dd20*/ STR         R4, [SP, #52]               @ 0x34 
    /*0002dd24*/ STR         LR, [SP, #40]               @ 0x28 
    /*0002dd28*/ STR         IP, [SP, #36]               @ 0x24 
    /*0002dd2c*/ STR         IP, [SP, #76]               @ 0x4c 
    /*0002dd30*/ STRNE       R2, [SP, #48]               @ 0x30 
    /*0002dd34*/ STRNE       R3, [SP, #80]               @ 0x50 
    /*0002dd38*/ STR         R0, [SP, #68]               @ 0x44 
    /*0002dd3c*/ MOV         R0, SL 
    /*0002dd40*/ BL          0x000000000002DD40          @ VI_HAL_SetCurPicConfig [R_ARM_CALL: .text+0x34918] 
    /*0002dd44*/ MOV         R0, #0 
    /*0002dd48*/ ADD         SP, SP, #88                 @ 0x58 
    /*0002dd4c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VI_DRV_SetCurPicConfig


FUNC_BEGIN VI_DRV_UpdateCurPicDcmpAttr
    /*0002dd50*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0002dd54*/ SUB         SP, SP, #196                @ 0xc4 
    /*0002dd58*/ MOV         R6, R0 
    /*0002dd5c*/ MOV         R7, R1 
    /*0002dd60*/ MOV         R2, #152                    @ 0x98 
    /*0002dd64*/ ADD         R0, SP, #40                 @ 0x28 
    /*0002dd68*/ MOV         R1, #0 
    /*0002dd6c*/ MOV         R5, #0 
    /*0002dd70*/ BL          0x000000000002DD70          @ memset [R_ARM_CALL: +0x0] 
    /*0002dd74*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002dd78*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002dd7c*/ STR         R5, [SP, #28] 
    /*0002dd80*/ ADD         R3, R3, R6, LSL #2 
    /*0002dd84*/ STR         R5, [SP, #32] 
    /*0002dd88*/ LDR         R4, [R3, #728]              @ 0x2d8 
    /*0002dd8c*/ ADD         R4, R4, #86016              @ 0x15000 
    /*0002dd90*/ LDR         R1, [R4, #384]              @ 0x180 
    /*0002dd94*/ LDR         R0, [R4, #456]              @ 0x1c8 
    /*0002dd98*/ BL          0x000000000002DD98          @ VI_DRV_TransDynamicRange2BitWidthEn [R_ARM_CALL: .text+0x2dab0] 
    /*0002dd9c*/ LDR         R2, [R4, #380]              @ 0x17c 
    /*0002dda0*/ LDR         R3, [R4, #388]              @ 0x184 
    /*0002dda4*/ ADD         R1, SP, #16 
    /*0002dda8*/ LDR         IP, [R4, #456]              @ 0x1c8 
    /*0002ddac*/ STR         R2, [SP, #8] 
    /*0002ddb0*/ STR         R3, [SP] 
    /*0002ddb4*/ LDR         R2, [R4, #356]              @ 0x164 
    /*0002ddb8*/ LDR         R3, [R4, #360]              @ 0x168 
    /*0002ddbc*/ STR         IP, [SP, #4] 
    /*0002ddc0*/ STR         R2, [SP, #20] 
    /*0002ddc4*/ STR         R3, [SP, #24] 
    /*0002ddc8*/ STR         R5, [SP, #36]               @ 0x24 
    /*0002ddcc*/ STR         R0, [SP, #12] 
    /*0002ddd0*/ MOV         R0, R6 
    /*0002ddd4*/ BL          0x000000000002DDD4          @ VI_DRV_GetIspPubBayerFormat [R_ARM_CALL: .text+0x38d2c] 
    /*0002ddd8*/ MOV         R0, #2 
    /*0002dddc*/ BL          0x000000000002DDDC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002dde0*/ MOV         R2, R5 
    /*0002dde4*/ ADD         R1, SP, #40                 @ 0x28 
    /*0002dde8*/ LDR         R3, [R0, #132]              @ 0x84 
    /*0002ddec*/ MOV         R0, SP 
    /*0002ddf0*/ BLX         R3 
    /*0002ddf4*/ ADD         R1, SP, #40                 @ 0x28 
    /*0002ddf8*/ MOV         R0, R7 
    /*0002ddfc*/ BL          0x000000000002DDFC          @ VI_HAL_SetCurDcmpAttr [R_ARM_CALL: .text+0x349cc] 
    /*0002de00*/ ADD         SP, SP, #196                @ 0xc4 
    /*0002de04*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VI_DRV_UpdateCurPicDcmpAttr


FUNC_BEGIN VI_DRV_SetChnCropInfo
    /*0002de08*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002de0c*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002de10*/ ADD         R0, IP, R0, LSL #2 
    /*0002de14*/ MOV         IP, #24 
    /*0002de18*/ PUSH        {R4, R5, LR} 
    /*0002de1c*/ MOVW        LR, #37656                  @ 0x9318 
    /*0002de20*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0002de24*/ SUB         SP, SP, #28 
    /*0002de28*/ CMP         R3, #0 
    /*0002de2c*/ MLA         IP, IP, R1, R0 
    /*0002de30*/ LDR         R0, [IP, LR] 
    /*0002de34*/ LDR         R5, [IP, #56]               @ 0x38 
    /*0002de38*/ LDR         R4, [IP, #60]               @ 0x3c 
    /*0002de3c*/ LDR         LR, [IP, #64]               @ 0x40 
    /*0002de40*/ LDR         IP, [IP, #68]               @ 0x44 
    /*0002de44*/ STR         R5, [SP, #4] 
    /*0002de48*/ STR         R4, [SP, #8] 
    /*0002de4c*/ STR         LR, [SP, #12] 
    /*0002de50*/ STR         IP, [SP, #16] 
    /*0002de54*/ STR         R0, [SP, #20] 
    /*0002de58*/ BEQ         VI_DRV_SetChnCropInfo_x2de74
    /*0002de5c*/ LDR         IP, [R3, #88]               @ 0x58 
    /*0002de60*/ LDR         R0, [R3, #84]               @ 0x54 
    /*0002de64*/ LDR         R3, [R3, #80]               @ 0x50 
    /*0002de68*/ STR         IP, [SP, #4] 
    /*0002de6c*/ STR         R0, [SP, #12] 
    /*0002de70*/ STR         R3, [SP, #20] 
    VI_DRV_SetChnCropInfo_x2de74:
    /*0002de74*/ MOV         R0, R2 
    /*0002de78*/ ADD         R2, SP, #4 
    /*0002de7c*/ BL          0x000000000002DE7C          @ VI_HAL_SetChnCrop [R_ARM_CALL: .text+0x34be4] 
    /*0002de80*/ MOV         R0, #0 
    /*0002de84*/ ADD         SP, SP, #28 
    /*0002de88*/ POP         {R4, R5, PC} 
FUNC_END VI_DRV_SetChnCropInfo


FUNC_BEGIN VI_DRV_PrepareOnlineScaleAttr
    /*0002de8c*/ BX          LR 
FUNC_END VI_DRV_PrepareOnlineScaleAttr


FUNC_BEGIN VI_DRV_UpdateChnAttr
    /*0002de90*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002de94*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002de98*/ ADD         R0, IP, R0, LSL #2 
    /*0002de9c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002dea0*/ SUB         SP, SP, #156                @ 0x9c 
    /*0002dea4*/ LDR         R9, [R0, #728]              @ 0x2d8 
    /*0002dea8*/ LDR         R0, [R0, #712]              @ 0x2c8 
    /*0002deac*/ ADD         R4, R9, #86016              @ 0x15000 
    /*0002deb0*/ LDR         R5, [R4, #1720]             @ 0x6b8 
    /*0002deb4*/ CMP         R5, #2 
    /*0002deb8*/ CMPEQ       R0, #2 
    /*0002debc*/ MOVEQ       R5, #1 
    /*0002dec0*/ MOVNE       R5, #0 
    /*0002dec4*/ BEQ         VI_DRV_UpdateChnAttr_x2df38
    /*0002dec8*/ MOV         FP, #12 
    /*0002decc*/ MOV         R8, R2 
    /*0002ded0*/ MLA         FP, FP, R1, R4 
    /*0002ded4*/ MOV         R6, R3 
    /*0002ded8*/ MOV         R7, R1 
    /*0002dedc*/ LDR         R2, [FP, #280]              @ 0x118 
    /*0002dee0*/ CMP         R2, #0 
    /*0002dee4*/ BNE         VI_DRV_UpdateChnAttr_x2df40
    /*0002dee8*/ ADD         R3, SP, #8 
    /*0002deec*/ MOV         R1, R2 
    /*0002def0*/ MOV         R2, #144                    @ 0x90 
    /*0002def4*/ STR         R3, [SP] 
    /*0002def8*/ MOV         R0, R3 
    /*0002defc*/ BL          0x000000000002DEFC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0002df00*/ LDR         R3, [FP, #280]              @ 0x118 
    /*0002df04*/ STR         R3, [SP, #64]               @ 0x40 
    VI_DRV_UpdateChnAttr_x2df08:
    /*0002df08*/ CMP         R6, #0 
    /*0002df0c*/ BEQ         VI_DRV_UpdateChnAttr_x2df28
    /*0002df10*/ LDR         R1, [R6, #60]               @ 0x3c 
    /*0002df14*/ LDR         R2, [R6, #68]               @ 0x44 
    /*0002df18*/ LDR         R3, [R6, #56]               @ 0x38 
    /*0002df1c*/ STR         R1, [SP, #56]               @ 0x38 
    /*0002df20*/ STR         R2, [SP, #88]               @ 0x58 
    /*0002df24*/ STR         R3, [SP, #64]               @ 0x40 
    VI_DRV_UpdateChnAttr_x2df28:
    /*0002df28*/ LDR         R2, [SP] 
    /*0002df2c*/ MOV         R1, R7 
    /*0002df30*/ MOV         R0, R8 
    /*0002df34*/ BL          0x000000000002DF34          @ VI_HAL_SetChnPicConfig [R_ARM_CALL: .text+0x34c48] 
    VI_DRV_UpdateChnAttr_x2df38:
    /*0002df38*/ ADD         SP, SP, #156                @ 0x9c 
    /*0002df3c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_UpdateChnAttr_x2df40:
    /*0002df40*/ ADD         R3, R4, R1, LSL #2 
    /*0002df44*/ MOV         R1, #576                    @ 0x240 
    /*0002df48*/ MUL         R0, R1, R7 
    /*0002df4c*/ LDR         R1, [R3, #1456]             @ 0x5b0 
    /*0002df50*/ MOV         IP, #288                    @ 0x120 
    /*0002df54*/ ADD         R3, R4, #272                @ 0x110 
    /*0002df58*/ MLA         R1, IP, R1, R0 
    /*0002df5c*/ ADD         R0, SP, #8 
    /*0002df60*/ STR         R0, [SP] 
    /*0002df64*/ ADD         R3, R3, R1 
    /*0002df68*/ ADD         R4, R4, R1 
    /*0002df6c*/ ADD         FP, R3, #704                @ 0x2c0 
    /*0002df70*/ ADD         LR, R3, #600                @ 0x258 
    /*0002df74*/ ADD         R1, R3, #696                @ 0x2b8 
    /*0002df78*/ ADD         IP, R3, #608                @ 0x260 
    /*0002df7c*/ LDRD        SL, [FP] 
    /*0002df80*/ LDRD        R0, [R1] 
    /*0002df84*/ STRD        SL, [SP, #16] 
    /*0002df88*/ LDRD        SL, [LR] 
    /*0002df8c*/ STRD        R0, [SP, #8] 
    /*0002df90*/ ADD         R0, R3, #800                @ 0x320 
    /*0002df94*/ ADD         R1, R3, #808                @ 0x328 
    /*0002df98*/ ADD         R3, R3, #816                @ 0x330 
    /*0002df9c*/ STRD        SL, [SP, #24] 
    /*0002dfa0*/ LDRD        SL, [IP] 
    /*0002dfa4*/ LDR         IP, [R4, #992]              @ 0x3e0 
    /*0002dfa8*/ STRD        SL, [SP, #32] 
    /*0002dfac*/ LDRD        SL, [R0] 
    /*0002dfb0*/ LDRD        R0, [R1] 
    /*0002dfb4*/ STR         IP, [SP, #40]               @ 0x28 
    /*0002dfb8*/ STRD        SL, [SP, #128]              @ 0x80 
    /*0002dfbc*/ STRD        R0, [SP, #136]              @ 0x88 
    /*0002dfc0*/ LDRD        SL, [R3] 
    /*0002dfc4*/ LDR         R0, [R4, #996]              @ 0x3e4 
    /*0002dfc8*/ LDR         R1, [R4, #920]              @ 0x398 
    /*0002dfcc*/ LDR         R3, [R4, #924]              @ 0x39c 
    /*0002dfd0*/ LDR         IP, [R4, #1056]             @ 0x420 
    /*0002dfd4*/ STR         R0, [SP, #44]               @ 0x2c 
    /*0002dfd8*/ STR         R1, [SP, #48]               @ 0x30 
    /*0002dfdc*/ LDR         R0, [R4, #1060]             @ 0x424 
    /*0002dfe0*/ LDR         R1, [R4, #1064]             @ 0x428 
    /*0002dfe4*/ STR         R3, [SP, #52]               @ 0x34 
    /*0002dfe8*/ LDR         R3, [R4, #932]              @ 0x3a4 
    /*0002dfec*/ STRD        SL, [SP, #144]              @ 0x90 
    /*0002dff0*/ LDR         FP, [R4, #1032]             @ 0x408 
    /*0002dff4*/ STR         IP, [SP, #112]              @ 0x70 
    /*0002dff8*/ STR         R0, [SP, #116]              @ 0x74 
    /*0002dffc*/ STR         R1, [SP, #120]              @ 0x78 
    /*0002e000*/ MOV         R0, FP 
    /*0002e004*/ LDR         R1, [R4, #960]              @ 0x3c0 
    /*0002e008*/ STR         R3, [SP, #56]               @ 0x38 
    /*0002e00c*/ LDR         R3, [R4, #936]              @ 0x3a8 
    /*0002e010*/ STR         R2, [SP, #64]               @ 0x40 
    /*0002e014*/ STR         R1, [SP, #4] 
    /*0002e018*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0002e01c*/ STR         R5, [SP, #68]               @ 0x44 
    /*0002e020*/ STR         R5, [SP, #72]               @ 0x48 
    /*0002e024*/ BL          0x000000000002E024          @ VI_DRV_TransPixel [R_ARM_CALL: .text+0x2d654] 
    /*0002e028*/ LDR         R3, [R4, #952]              @ 0x3b8 
    /*0002e02c*/ LDR         R1, [SP, #4] 
    /*0002e030*/ SUB         R3, R3, #2 
    /*0002e034*/ CLZ         R3, R3 
    /*0002e038*/ LSR         R3, R3, #5 
    /*0002e03c*/ STR         R3, [SP, #80]               @ 0x50 
    /*0002e040*/ STR         R0, [SP, #76]               @ 0x4c 
    /*0002e044*/ MOV         R0, FP 
    /*0002e048*/ BL          0x000000000002E048          @ VI_DRV_TransBitWidth [R_ARM_CALL: .text+0x2d71c] 
    /*0002e04c*/ MOV         R3, #44                     @ 0x2c 
    /*0002e050*/ MLA         R9, R3, R7, R9 
    /*0002e054*/ LDR         R3, [R4, #956]              @ 0x3bc 
    /*0002e058*/ STR         R5, [SP, #92]               @ 0x5c 
    /*0002e05c*/ SUB         R3, R3, #1 
    /*0002e060*/ STR         R5, [SP, #88]               @ 0x58 
    /*0002e064*/ ADD         R9, R9, #68608              @ 0x10c00 
    /*0002e068*/ CLZ         R3, R3 
    /*0002e06c*/ LDR         R2, [R9, #20] 
    /*0002e070*/ LSR         R3, R3, #5 
    /*0002e074*/ STR         R3, [SP, #104]              @ 0x68 
    /*0002e078*/ STR         R3, [SP, #108]              @ 0x6c 
    /*0002e07c*/ LDR         R3, [R9, #16] 
    /*0002e080*/ STR         R2, [SP, #96]               @ 0x60 
    /*0002e084*/ STR         R3, [SP, #100]              @ 0x64 
    /*0002e088*/ STR         R0, [SP, #84]               @ 0x54 
    /*0002e08c*/ B           VI_DRV_UpdateChnAttr_x2df08
FUNC_END VI_DRV_UpdateChnAttr


FUNC_BEGIN VI_DRV_UpdateCmpParam
    /*0002e090*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0002e094*/ SUB         SP, SP, #260                @ 0x104 
    /*0002e098*/ MOV         R6, R1 
    /*0002e09c*/ MOV         R4, R0 
    /*0002e0a0*/ MOV         R1, #0 
    /*0002e0a4*/ MOV         R8, R2 
    /*0002e0a8*/ ADD         R0, SP, #40                 @ 0x28 
    /*0002e0ac*/ MOV         R2, #216                    @ 0xd8 
    /*0002e0b0*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e0b4*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e0b8*/ MOV         R7, R3 
    /*0002e0bc*/ BL          0x000000000002E0BC          @ memset [R_ARM_CALL: +0x0] 
    /*0002e0c0*/ ADD         R2, R5, R4, LSL #2 
    /*0002e0c4*/ MOV         R4, #576                    @ 0x240 
    /*0002e0c8*/ MUL         R1, R4, R6 
    /*0002e0cc*/ LDR         R3, [R2, #728]              @ 0x2d8 
    /*0002e0d0*/ MOV         R0, #288                    @ 0x120 
    /*0002e0d4*/ MOV         R2, #12 
    /*0002e0d8*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002e0dc*/ ADD         IP, R3, R6, LSL #2 
    /*0002e0e0*/ MLA         R2, R2, R6, R3 
    /*0002e0e4*/ LDR         R4, [IP, #1456]             @ 0x5b0 
    /*0002e0e8*/ MLA         R4, R0, R4, R1 
    /*0002e0ec*/ LDR         R1, [R2, #280]              @ 0x118 
    /*0002e0f0*/ ADD         R4, R3, R4 
    /*0002e0f4*/ LDR         R3, [R4, #956]              @ 0x3bc 
    /*0002e0f8*/ CMP         R1, #1 
    /*0002e0fc*/ CMPEQ       R3, #1 
    /*0002e100*/ BEQ         VI_DRV_UpdateCmpParam_x2e10c
    VI_DRV_UpdateCmpParam_x2e104:
    /*0002e104*/ ADD         SP, SP, #260                @ 0x104 
    /*0002e108*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_UpdateCmpParam_x2e10c:
    /*0002e10c*/ LDR         R3, [R2, #284]              @ 0x11c 
    /*0002e110*/ MOV         R9, #0 
    /*0002e114*/ LDR         R1, [R4, #960]              @ 0x3c0 
    /*0002e118*/ LDR         R0, [R4, #1032]             @ 0x408 
    /*0002e11c*/ STR         R3, [SP, #28] 
    /*0002e120*/ STR         R9, [SP, #32] 
    /*0002e124*/ BL          0x000000000002E124          @ VI_DRV_TransDynamicRange2BitWidthEn [R_ARM_CALL: .text+0x2dab0] 
    /*0002e128*/ LDR         R3, [R4, #964]              @ 0x3c4 
    /*0002e12c*/ CMP         R7, R9 
    /*0002e130*/ LDR         IP, [R4, #1032]             @ 0x408 
    /*0002e134*/ LDR         R1, [R4, #932]              @ 0x3a4 
    /*0002e138*/ LDR         R2, [R4, #936]              @ 0x3a8 
    /*0002e13c*/ STR         R3, [SP] 
    /*0002e140*/ MOV         R3, #1 
    /*0002e144*/ STR         R9, [SP, #36]               @ 0x24 
    /*0002e148*/ STR         IP, [SP, #4] 
    /*0002e14c*/ STR         R1, [SP, #20] 
    /*0002e150*/ STR         R2, [SP, #24] 
    /*0002e154*/ STR         R3, [SP, #8] 
    /*0002e158*/ STR         R0, [SP, #12] 
    /*0002e15c*/ BEQ         VI_DRV_UpdateCmpParam_x2e1b0
    /*0002e160*/ LDR         R3, [R7, #60]               @ 0x3c 
    /*0002e164*/ MOV         R0, #2 
    /*0002e168*/ STR         R3, [SP, #20] 
    /*0002e16c*/ STR         R3, [SP, #24] 
    /*0002e170*/ BL          0x000000000002E170          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002e174*/ ADD         R2, SP, #40                 @ 0x28 
    /*0002e178*/ ADD         R1, R5, #748                @ 0x2ec 
    /*0002e17c*/ LDR         R3, [R0, #128]              @ 0x80 
    /*0002e180*/ MOV         R0, SP 
    /*0002e184*/ BLX         R3 
    /*0002e188*/ LDR         R2, [R7, #72]               @ 0x48 
    /*0002e18c*/ LDR         R3, [R7, #76]               @ 0x4c 
    /*0002e190*/ STR         R2, [R5, #788]              @ 0x314 
    /*0002e194*/ STR         R3, [SP, #80]               @ 0x50 
    VI_DRV_UpdateCmpParam_x2e198:
    /*0002e198*/ ADD         R3, SP, #40                 @ 0x28 
    /*0002e19c*/ MOV         R1, R6 
    /*0002e1a0*/ MOV         R0, R8 
    /*0002e1a4*/ LDR         R2, [PC, #36]               @ 0x000000000002e1d0 
    /*0002e1a8*/ BL          0x000000000002E1A8          @ VI_HAL_SetChnCmpAttr [R_ARM_CALL: .text+0x34d34] 
    /*0002e1ac*/ B           VI_DRV_UpdateCmpParam_x2e104
    VI_DRV_UpdateCmpParam_x2e1b0:
    /*0002e1b0*/ MOV         R0, #2 
    /*0002e1b4*/ BL          0x000000000002E1B4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002e1b8*/ ADD         R1, R5, #748                @ 0x2ec 
    /*0002e1bc*/ ADD         R2, SP, #40                 @ 0x28 
    /*0002e1c0*/ LDR         R3, [R0, #128]              @ 0x80 
    /*0002e1c4*/ MOV         R0, SP 
    /*0002e1c8*/ BLX         R3 
    /*0002e1cc*/ B           VI_DRV_UpdateCmpParam_x2e198
    /*0002e1d0*/ @           <UNDEFINED> instruction: 0x000133bc 
FUNC_END VI_DRV_UpdateCmpParam


FUNC_BEGIN VI_DRV_UpdateDSFConfig
    /*0002e1d4*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e1d8*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e1dc*/ ADD         R0, IP, R0, LSL #2 
    /*0002e1e0*/ MOV         IP, #184                    @ 0xb8 
    /*0002e1e4*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0002e1e8*/ SUB         SP, SP, #116                @ 0x74 
    /*0002e1ec*/ LDR         LR, [R0, #728]              @ 0x2d8 
    /*0002e1f0*/ MLA         IP, IP, R1, LR 
    /*0002e1f4*/ ADD         IP, IP, #88064              @ 0x15800 
    /*0002e1f8*/ LDR         R0, [IP, #572]              @ 0x23c 
    /*0002e1fc*/ CMP         R0, #0 
    /*0002e200*/ BEQ         VI_DRV_UpdateDSFConfig_x2e35c
    /*0002e204*/ LDR         R0, [IP, #744]              @ 0x2e8 
    /*0002e208*/ CMP         R0, #0 
    /*0002e20c*/ MOVNE       R0, #1 
    /*0002e210*/ STRNE       R0, [SP] 
    /*0002e214*/ BEQ         VI_DRV_UpdateDSFConfig_x2e35c
    VI_DRV_UpdateDSFConfig_x2e218:
    /*0002e218*/ MOV         R0, #184                    @ 0xb8 
    /*0002e21c*/ MOV         IP, #0 
    /*0002e220*/ MLA         R1, R0, R1, LR 
    /*0002e224*/ MOV         R6, #1 
    /*0002e228*/ STR         IP, [SP, #20] 
    /*0002e22c*/ CMP         R3, IP 
    /*0002e230*/ ADD         R1, R1, #88064              @ 0x15800 
    /*0002e234*/ ADD         R0, R1, #712                @ 0x2c8 
    /*0002e238*/ STR         IP, [R1, #744]              @ 0x2e8 
    /*0002e23c*/ LDRD        R4, [R0] 
    /*0002e240*/ LDR         R0, [LR, #276]              @ 0x114 
    /*0002e244*/ LDR         R7, [LR, #272]              @ 0x110 
    /*0002e248*/ STRD        R4, [SP, #8] 
    /*0002e24c*/ STR         R0, [SP, #108]              @ 0x6c 
    /*0002e250*/ LDR         R0, [R1, #616]              @ 0x268 
    /*0002e254*/ LDR         R5, [R1, #728]              @ 0x2d8 
    /*0002e258*/ LDR         R4, [R1, #740]              @ 0x2e4 
    /*0002e25c*/ ADD         R0, R0, R6 
    /*0002e260*/ STR         R0, [SP, #44]               @ 0x2c 
    /*0002e264*/ LDR         R0, [R1, #624]              @ 0x270 
    /*0002e268*/ LDR         LR, [R1, #568]              @ 0x238 
    /*0002e26c*/ STR         R5, [SP, #16] 
    /*0002e270*/ ADD         R0, R0, R6 
    /*0002e274*/ LDRB        R5, [R1, #600]              @ 0x258 
    /*0002e278*/ STR         R4, [SP, #24] 
    /*0002e27c*/ STR         R0, [SP, #60]               @ 0x3c 
    /*0002e280*/ LDR         R4, [R1, #604]              @ 0x25c 
    /*0002e284*/ LDR         R0, [R1, #608]              @ 0x260 
    /*0002e288*/ STR         LR, [SP, #28] 
    /*0002e28c*/ STR         R5, [SP, #76]               @ 0x4c 
    /*0002e290*/ LDR         LR, [R1, #596]              @ 0x254 
    /*0002e294*/ LDR         R5, [R1, #612]              @ 0x264 
    /*0002e298*/ STR         R4, [SP, #88]               @ 0x58 
    /*0002e29c*/ STR         R0, [SP, #36]               @ 0x24 
    /*0002e2a0*/ LDR         R4, [R1, #620]              @ 0x26c 
    /*0002e2a4*/ LDR         R0, [R1, #628]              @ 0x274 
    /*0002e2a8*/ STR         R7, [SP, #104]              @ 0x68 
    /*0002e2ac*/ STR         R5, [SP, #40]               @ 0x28 
    /*0002e2b0*/ STR         R4, [SP, #56]               @ 0x38 
    /*0002e2b4*/ STR         LR, [SP, #72]               @ 0x48 
    /*0002e2b8*/ STR         R0, [SP, #48]               @ 0x30 
    /*0002e2bc*/ LDR         R0, [R1, #632]              @ 0x278 
    /*0002e2c0*/ LDR         R7, [R1, #636]              @ 0x27c 
    /*0002e2c4*/ LDR         R5, [R1, #644]              @ 0x284 
    /*0002e2c8*/ ADD         R0, R0, R6 
    /*0002e2cc*/ LDR         R4, [R1, #648]              @ 0x288 
    /*0002e2d0*/ STR         IP, [SP, #96]               @ 0x60 
    /*0002e2d4*/ LDR         IP, [R1, #640]              @ 0x280 
    /*0002e2d8*/ STR         R0, [SP, #52]               @ 0x34 
    /*0002e2dc*/ ADD         IP, IP, R6 
    /*0002e2e0*/ STR         LR, [SP, #32] 
    /*0002e2e4*/ STR         R7, [SP, #64]               @ 0x40 
    /*0002e2e8*/ STR         R5, [SP, #80]               @ 0x50 
    /*0002e2ec*/ STR         IP, [SP, #68]               @ 0x44 
    /*0002e2f0*/ STR         R4, [SP, #84]               @ 0x54 
    /*0002e2f4*/ STR         R6, [SP, #92]               @ 0x5c 
    /*0002e2f8*/ BEQ         VI_DRV_UpdateDSFConfig_x2e348
    /*0002e2fc*/ STR         R6, [R1, #744]              @ 0x2e8 
    /*0002e300*/ LDR         R1, [R3, #92]               @ 0x5c 
    /*0002e304*/ LDR         R6, [R3, #120]              @ 0x78 
    /*0002e308*/ LDR         R5, [R3, #96]               @ 0x60 
    /*0002e30c*/ LDR         R4, [R3, #100]              @ 0x64 
    /*0002e310*/ LDR         LR, [R3, #104]              @ 0x68 
    /*0002e314*/ LDR         IP, [R3, #108]              @ 0x6c 
    /*0002e318*/ LDR         R0, [R3, #116]              @ 0x74 
    /*0002e31c*/ STR         R1, [SP, #32] 
    /*0002e320*/ LDR         R1, [R3, #112]              @ 0x70 
    /*0002e324*/ LDR         R3, [R3, #124]              @ 0x7c 
    /*0002e328*/ STR         R6, [SP, #104]              @ 0x68 
    /*0002e32c*/ STR         R5, [SP, #40]               @ 0x28 
    /*0002e330*/ STR         R4, [SP, #44]               @ 0x2c 
    /*0002e334*/ STR         LR, [SP, #48]               @ 0x30 
    /*0002e338*/ STR         IP, [SP, #52]               @ 0x34 
    /*0002e33c*/ STR         R0, [SP, #80]               @ 0x50 
    /*0002e340*/ STR         R1, [SP, #76]               @ 0x4c 
    /*0002e344*/ STR         R3, [SP, #24] 
    VI_DRV_UpdateDSFConfig_x2e348:
    /*0002e348*/ MOV         R0, R2 
    /*0002e34c*/ MOV         R1, SP 
    /*0002e350*/ BL          0x000000000002E350          @ VI_HAL_SetDSFConfig [R_ARM_CALL: .text+0x368d4] 
    /*0002e354*/ ADD         SP, SP, #116                @ 0x74 
    /*0002e358*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_UpdateDSFConfig_x2e35c:
    /*0002e35c*/ MOV         R0, #0 
    /*0002e360*/ STR         R0, [SP] 
    /*0002e364*/ B           VI_DRV_UpdateDSFConfig_x2e218
FUNC_END VI_DRV_UpdateDSFConfig


FUNC_BEGIN VI_DRV_ProcRegNew
    /*0002e368*/ PUSH        {R4, LR} 
    /*0002e36c*/ MOV         R0, #0 
    /*0002e370*/ BL          0x000000000002E370          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*0002e374*/ BL          0x000000000002E374          @ VI_HAL_ProcRegNew [R_ARM_CALL: .text+0x353d8] 
    /*0002e378*/ MOV         R0, #0 
    /*0002e37c*/ POP         {R4, PC} 
FUNC_END VI_DRV_ProcRegNew


FUNC_BEGIN VI_DRV_ProcSplitMode
    /*0002e380*/ PUSH        {R4, LR} 
    /*0002e384*/ MOV         R0, #0 
    /*0002e388*/ MOV         R4, R1 
    /*0002e38c*/ BL          0x000000000002E38C          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*0002e390*/ MOV         R1, R4 
    /*0002e394*/ BL          0x000000000002E394          @ VI_HAL_ProcSplitMode [R_ARM_CALL: .text+0x35428] 
    /*0002e398*/ MOV         R0, #0 
    /*0002e39c*/ POP         {R4, PC} 
FUNC_END VI_DRV_ProcSplitMode


FUNC_BEGIN VI_DRV_SetImgProMode
    /*0002e3a0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e3a4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e3a8*/ ADD         R3, R3, R0, LSL #2 
    /*0002e3ac*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002e3b0*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002e3b4*/ LDR         R2, [R3, #280]              @ 0x118 
    /*0002e3b8*/ CMP         R2, #0 
    /*0002e3bc*/ BNE         VI_DRV_SetImgProMode_x2e3d8
    /*0002e3c0*/ LDR         R3, [R3, #456]              @ 0x1c8 
    /*0002e3c4*/ CMP         R3, #39                     @ 0x27 
    /*0002e3c8*/ BEQ         VI_DRV_SetImgProMode_x2e3ec
    VI_DRV_SetImgProMode_x2e3cc:
    /*0002e3cc*/ MOV         R0, R1 
    /*0002e3d0*/ MOV         R1, #0 
    VI_DRV_SetImgProMode_x2e3d4:
    /*0002e3d4*/ B           VI_DRV_SetImgProMode_x2e3d4 @ VI_HAL_SetImgProMode [R_ARM_JUMP24: .text+0x35438] 
    VI_DRV_SetImgProMode_x2e3d8:
    /*0002e3d8*/ LDR         R2, [R3, #1032]             @ 0x408 
    /*0002e3dc*/ LDR         R3, [R3, #456]              @ 0x1c8 
    /*0002e3e0*/ CMP         R3, #39                     @ 0x27 
    /*0002e3e4*/ CMPNE       R2, #39                     @ 0x27 
    /*0002e3e8*/ BNE         VI_DRV_SetImgProMode_x2e3cc
    VI_DRV_SetImgProMode_x2e3ec:
    /*0002e3ec*/ MOV         R0, R1 
    /*0002e3f0*/ MOV         R1, #1 
    VI_DRV_SetImgProMode_x2e3f4:
    /*0002e3f4*/ B           VI_DRV_SetImgProMode_x2e3f4 @ VI_HAL_SetImgProMode [R_ARM_JUMP24: .text+0x35438] 
FUNC_END VI_DRV_SetImgProMode


FUNC_BEGIN VI_DRV_SetBeEnable
    /*0002e3f8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e3fc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e400*/ ADD         R3, R3, R0, LSL #2 
    /*0002e404*/ MOV         R0, R1 
    /*0002e408*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002e40c*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0002e410*/ LDR         R2, [R3, #3004]             @ 0xbbc 
    /*0002e414*/ CMP         R2, #1 
    /*0002e418*/ MOVEQ       R1, #0 
    /*0002e41c*/ BEQ         VI_DRV_SetBeEnable_x2e42c
    /*0002e420*/ LDR         R1, [R3, #2996]             @ 0xbb4 
    /*0002e424*/ SUBS        R1, R1, #2 
    /*0002e428*/ MOVNE       R1, #1 
    VI_DRV_SetBeEnable_x2e42c:
    /*0002e42c*/ B           VI_DRV_SetBeEnable_x2e42c   @ VI_HAL_SetBeEnable [R_ARM_JUMP24: .text+0x35408] 
FUNC_END VI_DRV_SetBeEnable


FUNC_BEGIN VI_DRV_SetSFifoEnable
    /*0002e430*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e434*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e438*/ PUSH        {R4, R5, R6, LR} 
    /*0002e43c*/ ADD         R4, R3, R0, LSL #2 
    /*0002e440*/ MOV         R6, R1 
    /*0002e444*/ LDR         R3, [R4, #728]              @ 0x2d8 
    /*0002e448*/ LDR         R5, [R3, #320]              @ 0x140 
    /*0002e44c*/ MOV         R0, R5 
    /*0002e450*/ BL          0x000000000002E450          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*0002e454*/ CMP         R5, #2 
    /*0002e458*/ LDR         R1, [R4, #712]              @ 0x2c8 
    /*0002e45c*/ SUB         R0, R0, #1 
    /*0002e460*/ CLZ         R0, R0 
    /*0002e464*/ LSR         R0, R0, #5 
    /*0002e468*/ MOVEQ       R0, #0 
    /*0002e46c*/ CMP         R0, #0 
    /*0002e470*/ BEQ         VI_DRV_SetSFifoEnable_x2e490
    /*0002e474*/ SUB         R1, R1, #2 
    /*0002e478*/ CMP         R1, #1 
    /*0002e47c*/ MOVHI       R1, #0 
    /*0002e480*/ MOVLS       R1, #1 
    VI_DRV_SetSFifoEnable_x2e484:
    /*0002e484*/ MOV         R0, R6 
    /*0002e488*/ POP         {R4, R5, R6, LR} 
    VI_DRV_SetSFifoEnable_x2e48c:
    /*0002e48c*/ B           VI_DRV_SetSFifoEnable_x2e48c@ VI_HAL_SetSFifoEnable [R_ARM_JUMP24: .text+0x35418] 
    VI_DRV_SetSFifoEnable_x2e490:
    /*0002e490*/ CMP         R1, #1 
    /*0002e494*/ MOVLS       R1, R0 
    /*0002e498*/ BLS         VI_DRV_SetSFifoEnable_x2e484
    /*0002e49c*/ LDR         R3, [R4, #728]              @ 0x2d8 
    /*0002e4a0*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002e4a4*/ LDR         R0, [R3, #1720]             @ 0x6b8 
    /*0002e4a8*/ SUB         R0, R0, #1 
    /*0002e4ac*/ CMP         R0, #1 
    /*0002e4b0*/ MOV         R0, R6 
    /*0002e4b4*/ POP         {R4, R5, R6, LR} 
    /*0002e4b8*/ MOVHI       R1, #0 
    /*0002e4bc*/ MOVLS       R1, #1 
    VI_DRV_SetSFifoEnable_x2e4c0:
    /*0002e4c0*/ B           VI_DRV_SetSFifoEnable_x2e4c0@ VI_HAL_SetSFifoEnable [R_ARM_JUMP24: .text+0x35418] 
FUNC_END VI_DRV_SetSFifoEnable


FUNC_BEGIN VI_DRV_SetIspBypassMode
    /*0002e4c4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e4c8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e4cc*/ ADD         R3, R3, R0, LSL #2 
    /*0002e4d0*/ MOV         R0, R1 
    /*0002e4d4*/ LDR         R2, [R3, #712]              @ 0x2c8 
    /*0002e4d8*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002e4dc*/ BIC         R1, R2, #2 
    /*0002e4e0*/ CMP         R1, #0 
    /*0002e4e4*/ CMPNE       R2, #4 
    /*0002e4e8*/ ADDNE       R3, R3, #65536              @ 0x10000 
    /*0002e4ec*/ LDRNE       R1, [R3, #3016]             @ 0xbc8 
    /*0002e4f0*/ BEQ         VI_DRV_SetIspBypassMode_x2e510
    VI_DRV_SetIspBypassMode_x2e4f4:
    /*0002e4f4*/ SUB         R3, R1, #17 
    /*0002e4f8*/ CMP         R3, #4 
    /*0002e4fc*/ SUBHI       R1, R1, #25 
    /*0002e500*/ CLZHI       R1, R1 
    /*0002e504*/ MOVLS       R1, #2 
    /*0002e508*/ LSRHI       R1, R1, #5 
    VI_DRV_SetIspBypassMode_x2e50c:
    /*0002e50c*/ B           VI_DRV_SetIspBypassMode_x2e50c@ VI_HAL_SetIspBypassMode [R_ARM_JUMP24: .text+0x34bb0] 
    VI_DRV_SetIspBypassMode_x2e510:
    /*0002e510*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002e514*/ LDR         R1, [R3, #280]              @ 0x118 
    /*0002e518*/ CMP         R1, #0 
    /*0002e51c*/ BEQ         VI_DRV_SetIspBypassMode_x2e50c
    /*0002e520*/ LDR         R2, [R3, #1456]             @ 0x5b0 
    /*0002e524*/ MOV         R1, #288                    @ 0x120 
    /*0002e528*/ MLA         R3, R1, R2, R3 
    /*0002e52c*/ LDR         R1, [R3, #1032]             @ 0x408 
    /*0002e530*/ B           VI_DRV_SetIspBypassMode_x2e4f4
FUNC_END VI_DRV_SetIspBypassMode


FUNC_BEGIN VI_DRV_OfflineUpdate3dnrAttr
    /*0002e534*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e538*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e53c*/ ADD         R0, R3, R0, LSL #2 
    /*0002e540*/ LDR         IP, [R0, #728]              @ 0x2d8 
    /*0002e544*/ ADD         R3, IP, #86016              @ 0x15000 
    /*0002e548*/ LDR         R2, [R3, #1592]             @ 0x638 
    /*0002e54c*/ LDR         R3, [R3, #2180]             @ 0x884 
    /*0002e550*/ CMP         R2, #0 
    /*0002e554*/ SUB         R3, R3, #1 
    /*0002e558*/ CLZ         R3, R3 
    /*0002e55c*/ LSR         R3, R3, #5 
    /*0002e560*/ MOVEQ       R3, #0 
    /*0002e564*/ CMP         R3, #0 
    /*0002e568*/ BEQ         VI_DRV_OfflineUpdate3dnrAttr_x2e590
    /*0002e56c*/ MOV         R3, #112640                 @ 0x1b800 
    /*0002e570*/ MOV         R0, R1 
    /*0002e574*/ ADD         R1, IP, #88064              @ 0x15800 
    /*0002e578*/ MLA         R0, R3, R0, R2 
    /*0002e57c*/ ADD         R1, R1, #136                @ 0x88 
    /*0002e580*/ PUSH        {R4, LR} 
    /*0002e584*/ BL          0x000000000002E584          @ VI_HAL_Set3dnrParam [R_ARM_CALL: .text+0x34bc0] 
    /*0002e588*/ MOV         R0, #0 
    /*0002e58c*/ POP         {R4, PC} 
    VI_DRV_OfflineUpdate3dnrAttr_x2e590:
    /*0002e590*/ MOV         R0, #0 
    /*0002e594*/ BX          LR 
FUNC_END VI_DRV_OfflineUpdate3dnrAttr


FUNC_BEGIN VI_DRV_Update3dnrAttr
    /*0002e598*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e59c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e5a0*/ ADD         R3, R3, R0, LSL #2 
    /*0002e5a4*/ LDR         R1, [R3, #728]              @ 0x2d8 
    /*0002e5a8*/ ADD         R3, R1, #86016              @ 0x15000 
    /*0002e5ac*/ LDR         R3, [R3, #2180]             @ 0x884 
    /*0002e5b0*/ CMP         R3, #1 
    /*0002e5b4*/ BEQ         VI_DRV_Update3dnrAttr_x2e5c0
    /*0002e5b8*/ MOV         R0, #0 
    /*0002e5bc*/ BX          LR 
    VI_DRV_Update3dnrAttr_x2e5c0:
    /*0002e5c0*/ ADD         R1, R1, #88064              @ 0x15800 
    /*0002e5c4*/ MOV         R0, R2 
    /*0002e5c8*/ PUSH        {R4, LR} 
    /*0002e5cc*/ ADD         R1, R1, #136                @ 0x88 
    /*0002e5d0*/ BL          0x000000000002E5D0          @ VI_HAL_Set3dnrParam [R_ARM_CALL: .text+0x34bc0] 
    /*0002e5d4*/ MOV         R0, #0 
    /*0002e5d8*/ POP         {R4, PC} 
FUNC_END VI_DRV_Update3dnrAttr


FUNC_BEGIN VI_DRV_AfterUpdate3dnrAttr
    /*0002e5dc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e5e0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e5e4*/ ADD         R3, R3, R0, LSL #2 
    /*0002e5e8*/ MOV         R2, #0 
    /*0002e5ec*/ MOV         R0, R2 
    /*0002e5f0*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002e5f4*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002e5f8*/ STR         R2, [R3, #2180]             @ 0x884 
    /*0002e5fc*/ BX          LR 
FUNC_END VI_DRV_AfterUpdate3dnrAttr


FUNC_BEGIN VI_DRV_SetVcdsEn
    /*0002e600*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e604*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e608*/ ADD         R3, R3, R0, LSL #2 
    /*0002e60c*/ MOV         R0, R1 
    /*0002e610*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002e614*/ ADD         R2, R3, #86016              @ 0x15000 
    /*0002e618*/ LDR         R1, [R2, #280]              @ 0x118 
    /*0002e61c*/ CMP         R1, #0 
    /*0002e620*/ BNE         VI_DRV_SetVcdsEn_x2e634
    /*0002e624*/ LDR         R2, [R3, #20] 
    /*0002e628*/ CMP         R2, #1 
    /*0002e62c*/ BEQ         VI_DRV_SetVcdsEn_x2e650
    VI_DRV_SetVcdsEn_x2e630:
    /*0002e630*/ B           VI_DRV_SetVcdsEn_x2e630     @ VI_HAL_SetIspMcdsVcdsEn [R_ARM_JUMP24: .text+0x374a0] 
    VI_DRV_SetVcdsEn_x2e634:
    /*0002e634*/ LDR         R3, [R2, #1456]             @ 0x5b0 
    /*0002e638*/ MOV         R1, #288                    @ 0x120 
    /*0002e63c*/ MLA         R2, R1, R3, R2 
    /*0002e640*/ LDR         R1, [R2, #1032]             @ 0x408 
    VI_DRV_SetVcdsEn_x2e644:
    /*0002e644*/ SUBS        R1, R1, #25 
    /*0002e648*/ MOVNE       R1, #1 
    /*0002e64c*/ B           VI_DRV_SetVcdsEn_x2e630
    VI_DRV_SetVcdsEn_x2e650:
    /*0002e650*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0002e654*/ LDR         R1, [R3, #3072]             @ 0xc00 
    /*0002e658*/ B           VI_DRV_SetVcdsEn_x2e644
FUNC_END VI_DRV_SetVcdsEn


FUNC_BEGIN VI_DRV_SetBeOutputPixel
    /*0002e65c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e660*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e664*/ ADD         R3, R3, R0, LSL #2 
    /*0002e668*/ MOV         R0, R1 
    /*0002e66c*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002e670*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002e674*/ LDR         R1, [R3, #280]              @ 0x118 
    /*0002e678*/ CMP         R1, #0 
    /*0002e67c*/ BEQ         VI_DRV_SetBeOutputPixel_x2e6a8
    /*0002e680*/ LDR         R2, [R3, #1456]             @ 0x5b0 
    /*0002e684*/ MOV         R1, #288                    @ 0x120 
    /*0002e688*/ MLA         R3, R1, R2, R3 
    /*0002e68c*/ LDR         R1, [R3, #1032]             @ 0x408 
    /*0002e690*/ SUB         R3, R1, #17 
    /*0002e694*/ CMP         R3, #4 
    /*0002e698*/ SUBHI       R1, R1, #25 
    /*0002e69c*/ CLZHI       R1, R1 
    /*0002e6a0*/ MOVLS       R1, #2 
    /*0002e6a4*/ LSRHI       R1, R1, #5 
    VI_DRV_SetBeOutputPixel_x2e6a8:
    /*0002e6a8*/ B           VI_DRV_SetBeOutputPixel_x2e6a8@ VI_HAL_SetBeOutputPixel [R_ARM_JUMP24: .text+0x374b0] 
FUNC_END VI_DRV_SetBeOutputPixel


FUNC_BEGIN VI_DRV_UpdateVCDS
    /*0002e6ac*/ PUSH        {R4, R5, R6, LR} 
    /*0002e6b0*/ MOV         R5, R1 
    /*0002e6b4*/ MOV         R4, R0 
    /*0002e6b8*/ MOV         R1, R2 
    /*0002e6bc*/ BL          0x000000000002E6BC          @ VI_DRV_SetBeOutputPixel [R_ARM_CALL: .text+0x2e65c] 
    /*0002e6c0*/ MOV         R1, R5 
    /*0002e6c4*/ MOV         R0, R4 
    /*0002e6c8*/ POP         {R4, R5, R6, LR} 
    VI_DRV_UpdateVCDS_x2e6cc:
    /*0002e6cc*/ B           VI_DRV_UpdateVCDS_x2e6cc    @ VI_DRV_SetVcdsEn [R_ARM_JUMP24: .text+0x2e600] 
FUNC_END VI_DRV_UpdateVCDS


FUNC_BEGIN VI_DRV_UpdateOfflineVCDS
    /*0002e6d0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e6d4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e6d8*/ ADD         R3, R3, R0, LSL #2 
    /*0002e6dc*/ MOV         IP, #112640                 @ 0x1b800 
    /*0002e6e0*/ PUSH        {R4, R5, R6, LR} 
    /*0002e6e4*/ MOV         R4, R0 
    /*0002e6e8*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002e6ec*/ MOV         R5, R2 
    /*0002e6f0*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002e6f4*/ LDR         R3, [R3, #1592]             @ 0x638 
    /*0002e6f8*/ CMP         R3, #0 
    /*0002e6fc*/ MLA         R1, IP, R1, R3 
    /*0002e700*/ BEQ         VI_DRV_UpdateOfflineVCDS_x2e708
    /*0002e704*/ BL          0x000000000002E704          @ VI_DRV_SetBeOutputPixel [R_ARM_CALL: .text+0x2e65c] 
    VI_DRV_UpdateOfflineVCDS_x2e708:
    /*0002e708*/ MOV         R1, R5 
    /*0002e70c*/ MOV         R0, R4 
    /*0002e710*/ POP         {R4, R5, R6, LR} 
    VI_DRV_UpdateOfflineVCDS_x2e714:
    /*0002e714*/ B           VI_DRV_UpdateOfflineVCDS_x2e714@ VI_DRV_SetVcdsEn [R_ARM_JUMP24: .text+0x2e600] 
FUNC_END VI_DRV_UpdateOfflineVCDS


FUNC_BEGIN VI_DRV_UpdateLDCI
    /*0002e718*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e71c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e720*/ ADD         R0, R3, R0, LSL #2 
    /*0002e724*/ PUSH        {R4, R5, R6, LR} 
    /*0002e728*/ MOV         R5, R2 
    /*0002e72c*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002e730*/ ADD         R2, R3, #65536              @ 0x10000 
    /*0002e734*/ LDR         R0, [R2, #3004]             @ 0xbbc 
    /*0002e738*/ CMP         R0, #1 
    /*0002e73c*/ BEQ         VI_DRV_UpdateLDCI_x2e77c
    /*0002e740*/ LDR         R2, [R2, #2996]             @ 0xbb4 
    /*0002e744*/ CMP         R2, #2 
    /*0002e748*/ BEQ         VI_DRV_UpdateLDCI_x2e77c
    /*0002e74c*/ ADD         R4, R3, R1, LSL #2 
    /*0002e750*/ MOV         R0, R5 
    /*0002e754*/ ADD         R4, R4, #86016              @ 0x15000 
    /*0002e758*/ MOV         R3, #0 
    /*0002e75c*/ LDR         R2, [R4, #2152]             @ 0x868 
    /*0002e760*/ BL          0x000000000002E760          @ VI_HAL_SetLDCIParaAddr [R_ARM_CALL: .text+0x35498] 
    /*0002e764*/ MOV         R0, R5 
    /*0002e768*/ LDR         R2, [R4, #2164]             @ 0x874 
    /*0002e76c*/ MOV         R3, #0 
    /*0002e770*/ BL          0x000000000002E770          @ VI_HAL_SetLDCIOutParaAddr [R_ARM_CALL: .text+0x354a0] 
    /*0002e774*/ MOV         R0, #0 
    /*0002e778*/ POP         {R4, R5, R6, PC} 
    VI_DRV_UpdateLDCI_x2e77c:
    /*0002e77c*/ MOV         R0, R5 
    /*0002e780*/ MOV         R2, #0 
    /*0002e784*/ MOV         R3, #0 
    /*0002e788*/ BL          0x000000000002E788          @ VI_HAL_SetLDCIParaAddr [R_ARM_CALL: .text+0x35498] 
    /*0002e78c*/ MOV         R0, R5 
    /*0002e790*/ MOV         R2, #0 
    /*0002e794*/ MOV         R3, #0 
    /*0002e798*/ BL          0x000000000002E798          @ VI_HAL_SetLDCIOutParaAddr [R_ARM_CALL: .text+0x354a0] 
    /*0002e79c*/ MOV         R0, #0 
    /*0002e7a0*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_UpdateLDCI


FUNC_BEGIN VI_DRV_SetWdrPicConfig
    /*0002e7a4*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e7a8*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e7ac*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002e7b0*/ ADD         R0, IP, R0, LSL #2 
    /*0002e7b4*/ MOV         R5, #288                    @ 0x120 
    /*0002e7b8*/ SUB         SP, SP, #92                 @ 0x5c 
    /*0002e7bc*/ MUL         R5, R5, R2 
    /*0002e7c0*/ LDR         R4, [R0, #728]              @ 0x2d8 
    /*0002e7c4*/ MOV         FP, R3 
    /*0002e7c8*/ MOV         R9, R2 
    /*0002e7cc*/ ADD         R4, R4, #86016              @ 0x15000 
    /*0002e7d0*/ MOV         SL, R1 
    /*0002e7d4*/ ADD         R8, R4, R5 
    /*0002e7d8*/ LDR         R6, [R8, #744]              @ 0x2e8 
    /*0002e7dc*/ LDR         R7, [R8, #672]              @ 0x2a0 
    /*0002e7e0*/ MOV         R0, R6 
    /*0002e7e4*/ BL          0x000000000002E7E4          @ VI_DRV_TransPixel [R_ARM_CALL: .text+0x2d654] 
    /*0002e7e8*/ MOV         R1, R7 
    /*0002e7ec*/ STR         R0, [SP, #72]               @ 0x48 
    /*0002e7f0*/ MOV         R0, R6 
    /*0002e7f4*/ BL          0x000000000002E7F4          @ VI_DRV_TransBitWidth [R_ARM_CALL: .text+0x2d71c] 
    /*0002e7f8*/ ADD         R3, R4, #272                @ 0x110 
    /*0002e7fc*/ ADD         R3, R3, R5 
    /*0002e800*/ LDR         R1, [R8, #668]              @ 0x29c 
    /*0002e804*/ ADD         R2, R3, #408                @ 0x198 
    /*0002e808*/ ADD         R5, R3, #416                @ 0x1a0 
    /*0002e80c*/ ADD         LR, R3, #312                @ 0x138 
    /*0002e810*/ ADD         IP, R3, #320                @ 0x140 
    /*0002e814*/ SUB         R4, R1, #3 
    /*0002e818*/ LDRD        R2, [R2] 
    /*0002e81c*/ CLZ         R4, R4 
    /*0002e820*/ LDRD        R6, [R5] 
    /*0002e824*/ STRD        R2, [SP] 
    /*0002e828*/ LSR         R4, R4, #5 
    /*0002e82c*/ LDRD        R2, [IP] 
    /*0002e830*/ STR         R4, [SP, #56]               @ 0x38 
    /*0002e834*/ SUB         R4, R1, #1 
    /*0002e838*/ CLZ         R4, R4 
    /*0002e83c*/ ADDS        R1, R1, #0 
    /*0002e840*/ STRD        R2, [SP, #24] 
    /*0002e844*/ LSR         R4, R4, #5 
    /*0002e848*/ LDR         R2, [R8, #632]              @ 0x278 
    /*0002e84c*/ STR         R4, [SP, #60]               @ 0x3c 
    /*0002e850*/ MOVNE       R1, #1 
    /*0002e854*/ LDRD        R4, [LR] 
    /*0002e858*/ CMP         FP, #0 
    /*0002e85c*/ LDR         R3, [R8, #636]              @ 0x27c 
    /*0002e860*/ MOV         LR, #0 
    /*0002e864*/ STR         R2, [SP, #40]               @ 0x28 
    /*0002e868*/ STRD        R4, [SP, #16] 
    /*0002e86c*/ LDRNE       R2, [FP, #16] 
    /*0002e870*/ LDR         R4, [R8, #644]              @ 0x284 
    /*0002e874*/ LDR         IP, [R8, #648]              @ 0x288 
    /*0002e878*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0002e87c*/ LDRNE       R3, [FP, #20] 
    /*0002e880*/ STR         R1, [SP, #64]               @ 0x40 
    /*0002e884*/ MOV         R1, R9 
    /*0002e888*/ STR         R4, [SP, #48]               @ 0x30 
    /*0002e88c*/ STRNE       R2, [SP, #48]               @ 0x30 
    /*0002e890*/ MOV         R2, SP 
    /*0002e894*/ STR         LR, [SP, #80]               @ 0x50 
    /*0002e898*/ STRD        R6, [SP, #8] 
    /*0002e89c*/ STR         IP, [SP, #52]               @ 0x34 
    /*0002e8a0*/ STR         LR, [SP, #32] 
    /*0002e8a4*/ STR         LR, [SP, #36]               @ 0x24 
    /*0002e8a8*/ STR         LR, [SP, #76]               @ 0x4c 
    /*0002e8ac*/ STR         R0, [SP, #68]               @ 0x44 
    /*0002e8b0*/ MOV         R0, SL 
    /*0002e8b4*/ STRNE       R3, [SP, #80]               @ 0x50 
    /*0002e8b8*/ BL          0x000000000002E8B8          @ VI_HAL_SetWDRPicConfig [R_ARM_CALL: .text+0x34ab8] 
    /*0002e8bc*/ MOV         R0, #0 
    /*0002e8c0*/ ADD         SP, SP, #92                 @ 0x5c 
    /*0002e8c4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VI_DRV_SetWdrPicConfig


FUNC_BEGIN VI_DRV_UpdateWdrCmpAttr
    /*0002e8c8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002e8cc*/ SUB         SP, SP, #192                @ 0xc0 
    /*0002e8d0*/ MOV         R7, R0 
    /*0002e8d4*/ MOV         R6, R2 
    /*0002e8d8*/ MOV         R8, R1 
    /*0002e8dc*/ MOV         R2, #152                    @ 0x98 
    /*0002e8e0*/ MOV         R1, #0 
    /*0002e8e4*/ ADD         R0, SP, #40                 @ 0x28 
    /*0002e8e8*/ MOV         R5, R1 
    /*0002e8ec*/ BL          0x000000000002E8EC          @ memset [R_ARM_CALL: +0x0] 
    /*0002e8f0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002e8f4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002e8f8*/ ADD         R3, R3, R7, LSL #2 
    /*0002e8fc*/ MOV         R4, #288                    @ 0x120 
    /*0002e900*/ STR         R5, [SP, #28] 
    /*0002e904*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002e908*/ STR         R5, [SP, #32] 
    /*0002e90c*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002e910*/ MLA         R4, R4, R6, R3 
    /*0002e914*/ LDR         R1, [R4, #672]              @ 0x2a0 
    /*0002e918*/ LDR         R0, [R4, #744]              @ 0x2e8 
    /*0002e91c*/ BL          0x000000000002E91C          @ VI_DRV_TransDynamicRange2BitWidthEn [R_ARM_CALL: .text+0x2dab0] 
    /*0002e920*/ LDR         R2, [R4, #668]              @ 0x29c 
    /*0002e924*/ LDR         R3, [R4, #676]              @ 0x2a4 
    /*0002e928*/ ADD         R1, SP, #16 
    /*0002e92c*/ LDR         IP, [R4, #744]              @ 0x2e8 
    /*0002e930*/ STR         R2, [SP, #8] 
    /*0002e934*/ STR         R3, [SP] 
    /*0002e938*/ LDR         R2, [R4, #644]              @ 0x284 
    /*0002e93c*/ LDR         R3, [R4, #648]              @ 0x288 
    /*0002e940*/ STR         IP, [SP, #4] 
    /*0002e944*/ STR         R2, [SP, #20] 
    /*0002e948*/ STR         R3, [SP, #24] 
    /*0002e94c*/ STR         R5, [SP, #36]               @ 0x24 
    /*0002e950*/ STR         R0, [SP, #12] 
    /*0002e954*/ MOV         R0, R7 
    /*0002e958*/ BL          0x000000000002E958          @ VI_DRV_GetIspPubBayerFormat [R_ARM_CALL: .text+0x38d2c] 
    /*0002e95c*/ MOV         R0, #2 
    /*0002e960*/ BL          0x000000000002E960          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002e964*/ MOV         R2, R5 
    /*0002e968*/ ADD         R1, SP, #40                 @ 0x28 
    /*0002e96c*/ LDR         R3, [R0, #132]              @ 0x84 
    /*0002e970*/ MOV         R0, SP 
    /*0002e974*/ BLX         R3 
    /*0002e978*/ ADD         R2, SP, #40                 @ 0x28 
    /*0002e97c*/ MOV         R1, R6 
    /*0002e980*/ MOV         R0, R8 
    /*0002e984*/ BL          0x000000000002E984          @ VI_HAL_SetDWRCmpAttr [R_ARM_CALL: .text+0x34b48] 
    /*0002e988*/ ADD         SP, SP, #192                @ 0xc0 
    /*0002e98c*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_DRV_UpdateWdrCmpAttr


FUNC_BEGIN VI_DRV_UpdateDISOffset
    /*0002e990*/ BX          LR 
FUNC_END VI_DRV_UpdateDISOffset


FUNC_BEGIN VI_DRV_PrepareNextFrameChnAttr
    /*0002e994*/ PUSH        {R4, R5, R6, LR} 
    /*0002e998*/ MOV         R4, R0 
    /*0002e99c*/ MOV         R0, #0 
    /*0002e9a0*/ MOV         R5, R1 
    /*0002e9a4*/ BL          0x000000000002E9A4          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*0002e9a8*/ MOV         R1, R5 
    /*0002e9ac*/ MOV         R3, #0 
    /*0002e9b0*/ MOV         R6, R0 
    /*0002e9b4*/ MOV         R0, R4 
    /*0002e9b8*/ MOV         R2, R6 
    /*0002e9bc*/ BL          0x000000000002E9BC          @ VI_DRV_SetChnCropInfo [R_ARM_CALL: .text+0x2de08] 
    /*0002e9c0*/ MOV         R2, R6 
    /*0002e9c4*/ MOV         R1, R5 
    /*0002e9c8*/ MOV         R0, R4 
    /*0002e9cc*/ MOV         R3, #0 
    /*0002e9d0*/ BL          0x000000000002E9D0          @ VI_DRV_UpdateChnAttr [R_ARM_CALL: .text+0x2de90] 
    /*0002e9d4*/ MOV         R2, R6 
    /*0002e9d8*/ MOV         R1, R5 
    /*0002e9dc*/ MOV         R0, R4 
    /*0002e9e0*/ MOV         R3, #0 
    /*0002e9e4*/ BL          0x000000000002E9E4          @ VI_DRV_UpdateCmpParam [R_ARM_CALL: .text+0x2e090] 
    /*0002e9e8*/ MOV         R0, R4 
    /*0002e9ec*/ MOV         R2, R6 
    /*0002e9f0*/ MOV         R1, R5 
    /*0002e9f4*/ MOV         R3, #0 
    /*0002e9f8*/ BL          0x000000000002E9F8          @ VI_DRV_UpdateDSFConfig [R_ARM_CALL: .text+0x2e1d4] 
    /*0002e9fc*/ MOV         R0, #0 
    /*0002ea00*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_PrepareNextFrameChnAttr


FUNC_BEGIN VI_DRV_PrepareNextFramePipeAttr
    /*0002ea04*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002ea08*/ LSL         R6, R0, #2 
    /*0002ea0c*/ MOV         R5, R0 
    /*0002ea10*/ MOV         R0, #0 
    /*0002ea14*/ BL          0x000000000002EA14          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*0002ea18*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ea1c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002ea20*/ ADD         R2, R4, R6 
    /*0002ea24*/ LDR         R3, [R2, #712]              @ 0x2c8 
    /*0002ea28*/ SUB         R3, R3, #2 
    /*0002ea2c*/ CMP         R3, #1 
    /*0002ea30*/ MOV         R7, R0 
    /*0002ea34*/ BLS         VI_DRV_PrepareNextFramePipeAttr_x2eacc
    /*0002ea38*/ LDR         R3, [R2, #728]              @ 0x2d8 
    /*0002ea3c*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002ea40*/ LDR         R8, [R3, #1592]             @ 0x638 
    VI_DRV_PrepareNextFramePipeAttr_x2ea44:
    /*0002ea44*/ MOV         R1, R7 
    /*0002ea48*/ MOV         R2, #0 
    /*0002ea4c*/ MOV         R0, R5 
    /*0002ea50*/ BL          0x000000000002EA50          @ VI_DRV_SetCurPicConfig [R_ARM_CALL: .text+0x2dc58] 
    /*0002ea54*/ ADD         R3, R4, R6 
    /*0002ea58*/ LDR         R1, [R3, #728]              @ 0x2d8 
    /*0002ea5c*/ ADD         R3, R1, #86016              @ 0x15000 
    /*0002ea60*/ LDR         R3, [R3, #2180]             @ 0x884 
    /*0002ea64*/ CMP         R3, #1 
    /*0002ea68*/ BEQ         VI_DRV_PrepareNextFramePipeAttr_x2eab8
    VI_DRV_PrepareNextFramePipeAttr_x2ea6c:
    /*0002ea6c*/ MOV         R1, R8 
    /*0002ea70*/ MOV         R0, R5 
    /*0002ea74*/ ADD         R4, R4, R6 
    /*0002ea78*/ BL          0x000000000002EA78          @ VI_DRV_SetBeOutputPixel [R_ARM_CALL: .text+0x2e65c] 
    /*0002ea7c*/ MOV         R1, R7 
    /*0002ea80*/ MOV         R0, R5 
    /*0002ea84*/ BL          0x000000000002EA84          @ VI_DRV_SetVcdsEn [R_ARM_CALL: .text+0x2e600] 
    /*0002ea88*/ LDR         R3, [R4, #728]              @ 0x2d8 
    /*0002ea8c*/ MOV         R6, #0 
    /*0002ea90*/ MOV         R1, R7 
    /*0002ea94*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002ea98*/ MOV         R2, R6 
    /*0002ea9c*/ MOV         R0, R5 
    /*0002eaa0*/ STR         R6, [R3, #2180]             @ 0x884 
    /*0002eaa4*/ BL          0x000000000002EAA4          @ VI_DRV_UpdateFpnCorrection [R_ARM_CALL: .text+0x3a4d8] 
    /*0002eaa8*/ MOV         R0, R5 
    /*0002eaac*/ BL          0x000000000002EAAC          @ VI_DRV_AfterUpdateFpn [R_ARM_CALL: .text+0x3a67c] 
    /*0002eab0*/ MOV         R0, R6 
    /*0002eab4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_PrepareNextFramePipeAttr_x2eab8:
    /*0002eab8*/ ADD         R1, R1, #88064              @ 0x15800 
    /*0002eabc*/ MOV         R0, R8 
    /*0002eac0*/ ADD         R1, R1, #136                @ 0x88 
    /*0002eac4*/ BL          0x000000000002EAC4          @ VI_HAL_Set3dnrParam [R_ARM_CALL: .text+0x34bc0] 
    /*0002eac8*/ B           VI_DRV_PrepareNextFramePipeAttr_x2ea6c
    VI_DRV_PrepareNextFramePipeAttr_x2eacc:
    /*0002eacc*/ MOV         R0, #0 
    /*0002ead0*/ BL          0x000000000002EAD0          @ VI_HAL_GetIspBeReg [R_ARM_CALL: .text+0x34828] 
    /*0002ead4*/ MOV         R8, R0 
    /*0002ead8*/ B           VI_DRV_PrepareNextFramePipeAttr_x2ea44
FUNC_END VI_DRV_PrepareNextFramePipeAttr


FUNC_BEGIN VI_DRV_OnlinePrepareNextFrame
    /*0002eadc*/ PUSH        {R4, LR} 
    /*0002eae0*/ MOV         R4, R0 
    /*0002eae4*/ BL          0x000000000002EAE4          @ VI_DRV_PrepareNextFramePipeAttr [R_ARM_CALL: .text+0x2ea04] 
    /*0002eae8*/ MOV         R0, R4 
    /*0002eaec*/ MOV         R1, #0 
    /*0002eaf0*/ BL          0x000000000002EAF0          @ VI_DRV_PrepareNextFrameChnAttr [R_ARM_CALL: .text+0x2e994] 
    /*0002eaf4*/ MOV         R0, #0 
    /*0002eaf8*/ POP         {R4, PC} 
FUNC_END VI_DRV_OnlinePrepareNextFrame


FUNC_BEGIN VI_DRV_ProcStartCap
    /*0002eafc*/ PUSH        {R4, R5, R6, LR} 
    /*0002eb00*/ MOV         R4, R0 
    /*0002eb04*/ MOV         R0, #0 
    /*0002eb08*/ BL          0x000000000002EB08          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*0002eb0c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002eb10*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002eb14*/ ADD         R3, R3, R4, LSL #2 
    /*0002eb18*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002eb1c*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0002eb20*/ LDR         R2, [R3, #3004]             @ 0xbbc 
    /*0002eb24*/ CMP         R2, #1 
    /*0002eb28*/ MOVEQ       R1, #0 
    /*0002eb2c*/ MOV         R5, R0 
    /*0002eb30*/ BEQ         VI_DRV_ProcStartCap_x2eb40
    /*0002eb34*/ LDR         R1, [R3, #2996]             @ 0xbb4 
    /*0002eb38*/ SUBS        R1, R1, #2 
    /*0002eb3c*/ MOVNE       R1, #1 
    VI_DRV_ProcStartCap_x2eb40:
    /*0002eb40*/ MOV         R0, R5 
    /*0002eb44*/ BL          0x000000000002EB44          @ VI_HAL_SetBeEnable [R_ARM_CALL: .text+0x35408] 
    /*0002eb48*/ MOV         R1, R5 
    /*0002eb4c*/ MOV         R0, R4 
    /*0002eb50*/ BL          0x000000000002EB50          @ VI_DRV_SetSFifoEnable [R_ARM_CALL: .text+0x2e430] 
    /*0002eb54*/ MOV         R1, R5 
    /*0002eb58*/ MOV         R0, R4 
    /*0002eb5c*/ BL          0x000000000002EB5C          @ VI_DRV_SetImgProMode [R_ARM_CALL: .text+0x2e3a0] 
    /*0002eb60*/ MOV         R0, #0 
    /*0002eb64*/ BL          0x000000000002EB64          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*0002eb68*/ MOV         R1, #1 
    /*0002eb6c*/ BL          0x000000000002EB6C          @ VI_HAL_ProcSplitMode [R_ARM_CALL: .text+0x35428] 
    /*0002eb70*/ MOV         R0, #0 
    /*0002eb74*/ BL          0x000000000002EB74          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*0002eb78*/ BL          0x000000000002EB78          @ VI_HAL_ProcRegNew [R_ARM_CALL: .text+0x353d8] 
    /*0002eb7c*/ MOV         R0, #0 
    /*0002eb80*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_ProcStartCap


FUNC_BEGIN VI_DRV_GetSplitCfg
    /*0002eb84*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002eb88*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002eb8c*/ ADD         R0, R3, R0, LSL #2 
    /*0002eb90*/ MOV         R2, #0 
    /*0002eb94*/ PUSH        {R4, R5} 
    /*0002eb98*/ MOV         R4, #0 
    /*0002eb9c*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002eba0*/ MOV         R5, #0 
    /*0002eba4*/ ADD         R0, R3, #86016              @ 0x15000 
    /*0002eba8*/ LDR         IP, [R0, #356]              @ 0x164 
    /*0002ebac*/ STRD        R4, [R1, #48]               @ 0x30 
    /*0002ebb0*/ STR         R2, [R1, #40]               @ 0x28 
    /*0002ebb4*/ STR         IP, [R1] 
    /*0002ebb8*/ STR         R2, [R1, #28] 
    /*0002ebbc*/ STR         R2, [R1, #32] 
    /*0002ebc0*/ STR         R2, [R1, #36]               @ 0x24 
    /*0002ebc4*/ STR         R2, [R1, #24] 
    /*0002ebc8*/ LDR         R2, [R0, #280]              @ 0x118 
    /*0002ebcc*/ POP         {R4, R5} 
    /*0002ebd0*/ STR         R2, [R1, #56]               @ 0x38 
    /*0002ebd4*/ LDR         R2, [R3, #64]               @ 0x40 
    /*0002ebd8*/ STR         R2, [R1, #60]               @ 0x3c 
    /*0002ebdc*/ LDR         R2, [R0, #956]              @ 0x3bc 
    /*0002ebe0*/ SUB         R2, R2, #1 
    /*0002ebe4*/ CLZ         R2, R2 
    /*0002ebe8*/ LSR         R2, R2, #5 
    /*0002ebec*/ STR         R2, [R1, #64]               @ 0x40 
    /*0002ebf0*/ LDR         R2, [R0, #944]              @ 0x3b0 
    /*0002ebf4*/ STR         R2, [R1, #68]               @ 0x44 
    /*0002ebf8*/ LDR         R2, [R3, #3216]             @ 0xc90 
    /*0002ebfc*/ STR         R2, [R1, #80]               @ 0x50 
    /*0002ec00*/ LDR         R2, [R3, #64]               @ 0x40 
    /*0002ec04*/ STR         R2, [R1, #84]               @ 0x54 
    /*0002ec08*/ LDR         R3, [R3, #56]               @ 0x38 
    /*0002ec0c*/ STR         R3, [R1, #88]               @ 0x58 
    /*0002ec10*/ BX          LR 
FUNC_END VI_DRV_GetSplitCfg


FUNC_BEGIN VI_DRV_ViParallelVpssOfflinePrepareNextFrame
    /*0002ec14*/ MOV         R0, #0 
    /*0002ec18*/ BX          LR 
FUNC_END VI_DRV_ViParallelVpssOfflinePrepareNextFrame


FUNC_BEGIN VI_DRV_ViParallelVpssParallelPrepareNextFrame
    /*0002ec1c*/ MOV         R0, #0 
    /*0002ec20*/ BX          LR 
FUNC_END VI_DRV_ViParallelVpssParallelPrepareNextFrame


FUNC_BEGIN VI_DRV_ProcParallelStartCap
    /*0002ec24*/ MOV         R0, #0 
    /*0002ec28*/ BX          LR 
FUNC_END VI_DRV_ProcParallelStartCap


FUNC_BEGIN VI_DRV_UpdateOfflineWdrPic
    /*0002ec2c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ec30*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002ec34*/ ADD         R3, R3, R0, LSL #2 
    /*0002ec38*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002ec3c*/ MOV         R5, R0 
    /*0002ec40*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002ec44*/ MOV         R6, R1 
    /*0002ec48*/ MOV         R7, R2 
    /*0002ec4c*/ LDR         R4, [R3, #320]              @ 0x140 
    /*0002ec50*/ MOV         R0, R4 
    /*0002ec54*/ BL          0x000000000002EC54          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*0002ec58*/ CMP         R0, #1 
    /*0002ec5c*/ BEQ         VI_DRV_UpdateOfflineWdrPic_x2ec68
    VI_DRV_UpdateOfflineWdrPic_x2ec60:
    /*0002ec60*/ MOV         R0, #0 
    /*0002ec64*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_UpdateOfflineWdrPic_x2ec68:
    /*0002ec68*/ MOV         R0, R4 
    /*0002ec6c*/ BL          0x000000000002EC6C          @ VI_DRV_GetWDRVcNum [R_ARM_CALL: .text+0x37b60] 
    /*0002ec70*/ SUBS        R8, R0, #0 
    /*0002ec74*/ BEQ         VI_DRV_UpdateOfflineWdrPic_x2ec60
    /*0002ec78*/ MOV         R4, #0 
    VI_DRV_UpdateOfflineWdrPic_x2ec7c:
    /*0002ec7c*/ MOV         R2, R4 
    /*0002ec80*/ MOV         R3, R7 
    /*0002ec84*/ MOV         R1, R6 
    /*0002ec88*/ MOV         R0, R5 
    /*0002ec8c*/ BL          0x000000000002EC8C          @ VI_DRV_SetWdrPicConfig [R_ARM_CALL: .text+0x2e7a4] 
    /*0002ec90*/ MOV         R2, R4 
    /*0002ec94*/ MOV         R3, R7 
    /*0002ec98*/ MOV         R1, R6 
    /*0002ec9c*/ MOV         R0, R5 
    /*0002eca0*/ ADD         R4, R4, #1 
    /*0002eca4*/ BL          0x000000000002ECA4          @ VI_DRV_UpdateWdrCmpAttr [R_ARM_CALL: .text+0x2e8c8] 
    /*0002eca8*/ CMP         R8, R4 
    /*0002ecac*/ BNE         VI_DRV_UpdateOfflineWdrPic_x2ec7c
    /*0002ecb0*/ MOV         R0, #0 
    /*0002ecb4*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_DRV_UpdateOfflineWdrPic


FUNC_BEGIN VI_DRV_SetIspSttAddr
    /*0002ecb8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ecbc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002ecc0*/ ADD         IP, R3, R0, LSL #2 
    /*0002ecc4*/ MOV         R0, R1 
    /*0002ecc8*/ PUSH        {R4, R5, LR} 
    /*0002eccc*/ MOV         R3, #6 
    /*0002ecd0*/ LDR         IP, [IP, #728]              @ 0x2d8 
    /*0002ecd4*/ MOV         LR, #48                     @ 0x30 
    /*0002ecd8*/ ADD         R1, IP, #86016              @ 0x15000 
    /*0002ecdc*/ ADD         R4, R1, #272                @ 0x110 
    /*0002ece0*/ LDR         R1, [R1, #1464]             @ 0x5b8 
    /*0002ece4*/ LDRD        R4, [R4, #200]              @ 0xc8 
    /*0002ece8*/ MLA         R2, R3, R1, R2 
    /*0002ecec*/ MLA         R3, LR, R1, IP 
    /*0002ecf0*/ ADD         R2, R2, #10880              @ 0x2a80 
    /*0002ecf4*/ ADD         R2, R2, #57                 @ 0x39 
    /*0002ecf8*/ ADD         R3, R3, #87040              @ 0x15400 
    /*0002ecfc*/ ADD         R3, R3, #448                @ 0x1c0 
    /*0002ed00*/ LSL         R2, R2, #3 
    /*0002ed04*/ STRD        R4, [R3] 
    /*0002ed08*/ LDRD        R2, [R2, IP] 
    /*0002ed0c*/ POP         {R4, R5, LR} 
    VI_DRV_SetIspSttAddr_x2ed10:
    /*0002ed10*/ B           VI_DRV_SetIspSttAddr_x2ed10 @ VI_HAL_SetIspSttAddr [R_ARM_JUMP24: .text+0x35480] 
FUNC_END VI_DRV_SetIspSttAddr


FUNC_BEGIN VI_DRV_CalcVpssSplit
    /*0002ed14*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ed18*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002ed1c*/ ADD         R0, R3, R0, LSL #2 
    /*0002ed20*/ PUSH        {R4, R5, LR} 
    /*0002ed24*/ SUB         SP, SP, #28 
    /*0002ed28*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002ed2c*/ MOV         R5, R2 
    /*0002ed30*/ MOV         R2, #104                    @ 0x68 
    /*0002ed34*/ STR         R2, [SP, #8] 
    /*0002ed38*/ ADD         R3, R3, #32768              @ 0x8000 
    /*0002ed3c*/ MOV         R4, R1 
    /*0002ed40*/ LDR         IP, [R3, #1336]             @ 0x538 
    /*0002ed44*/ LDR         R2, [R3, #1416]             @ 0x588 
    /*0002ed48*/ LDR         R3, [R3, #1392]             @ 0x570 
    /*0002ed4c*/ MOV         R0, IP 
    /*0002ed50*/ STR         IP, [SP, #4] 
    /*0002ed54*/ STR         R2, [SP, #16] 
    /*0002ed58*/ STR         R3, [SP, #20] 
    /*0002ed5c*/ BL          0x000000000002ED5C          @ GetSplitLineBufferSize [R_ARM_CALL: .text+0x395f8] 
    /*0002ed60*/ MOV         R2, R5 
    /*0002ed64*/ MOV         R1, R4 
    /*0002ed68*/ MOV         R3, #0 
    /*0002ed6c*/ STR         R0, [SP, #12] 
    /*0002ed70*/ ADD         R0, SP, #4 
    /*0002ed74*/ BL          0x000000000002ED74          @ VpssSplitForIsp [R_ARM_CALL: .text+0x392e4] 
    /*0002ed78*/ ADD         SP, SP, #28 
    /*0002ed7c*/ POP         {R4, R5, PC} 
FUNC_END VI_DRV_CalcVpssSplit


FUNC_BEGIN VI_DRV_FlushIspBuf
    /*0002ed80*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ed84*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002ed88*/ ADD         R0, R3, R0, LSL #2 
    /*0002ed8c*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002ed90*/ ADD         R2, R3, #65536              @ 0x10000 
    /*0002ed94*/ LDR         R1, [R2, #3004]             @ 0xbbc 
    /*0002ed98*/ CMP         R1, #0 
    /*0002ed9c*/ BXNE        LR 
    /*0002eda0*/ LDR         R2, [R2, #2996]             @ 0xbb4 
    /*0002eda4*/ CMP         R2, #2 
    /*0002eda8*/ BXEQ        LR 
    /*0002edac*/ ADD         R1, R3, #87040              @ 0x15400 
    /*0002edb0*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002edb4*/ LDR         R2, [R1, #560]              @ 0x230 
    /*0002edb8*/ LDR         R0, [R3, #1592]             @ 0x638 
    /*0002edbc*/ LDR         R1, [R1, #552]              @ 0x228 
    VI_DRV_FlushIspBuf_x2edc0:
    /*0002edc0*/ B           VI_DRV_FlushIspBuf_x2edc0   @ osal_flush_dcache_area [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_FlushIspBuf


FUNC_BEGIN VI_DRV_SetSplitIspAlgAddr
    /*0002edc4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002edc8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002edcc*/ ADD         R0, R3, R0, LSL #2 
    /*0002edd0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0002edd4*/ MOV         R4, R1 
    /*0002edd8*/ LDR         SL, [R0, #728]              @ 0x2d8 
    /*0002eddc*/ ADD         R3, SL, #65536              @ 0x10000 
    /*0002ede0*/ LDR         R1, [R3, #3004]             @ 0xbbc 
    /*0002ede4*/ CMP         R1, #1 
    /*0002ede8*/ BEQ         VI_DRV_SetSplitIspAlgAddr_x2ef00
    /*0002edec*/ LDR         R3, [R3, #2996]             @ 0xbb4 
    /*0002edf0*/ CMP         R3, #2 
    /*0002edf4*/ BEQ         VI_DRV_SetSplitIspAlgAddr_x2ef00
    /*0002edf8*/ ADD         R5, SL, #87040              @ 0x15400 
    /*0002edfc*/ MOV         R6, #112640                 @ 0x1b800 
    /*0002ee00*/ SMULL       R6, R7, R2, R6 
    /*0002ee04*/ ADD         R5, R5, #560                @ 0x230 
    /*0002ee08*/ MOV         R0, R4 
    /*0002ee0c*/ ADD         SL, SL, #88064              @ 0x15800 
    /*0002ee10*/ LDRD        R2, [R5, #-8] 
    /*0002ee14*/ ADD         SL, SL, #80                 @ 0x50 
    /*0002ee18*/ ADDS        R2, R2, R6 
    /*0002ee1c*/ ADC         R3, R3, R7 
    /*0002ee20*/ BL          0x000000000002EE20          @ VI_HAL_SetBE0CFGLoadAddr [R_ARM_CALL: .text+0x35450] 
    /*0002ee24*/ LDRD        R2, [R5, #-8] 
    /*0002ee28*/ ADDS        R8, R6, #45568              @ 0xb200 
    /*0002ee2c*/ MOV         R0, R4 
    /*0002ee30*/ ADC         R9, R7, #0 
    /*0002ee34*/ ADDS        R2, R2, R8 
    /*0002ee38*/ ADC         R3, R3, R9 
    /*0002ee3c*/ BL          0x000000000002EE3C          @ VI_HAL_SetBE1CFGLoadAddr [R_ARM_CALL: .text+0x35458] 
    /*0002ee40*/ LDRD        R2, [R5, #-8] 
    /*0002ee44*/ ADDS        R8, R6, #47872              @ 0xbb00 
    /*0002ee48*/ MOV         R0, R4 
    /*0002ee4c*/ ADC         R9, R7, #0 
    /*0002ee50*/ ADDS        R2, R2, R8 
    /*0002ee54*/ ADC         R3, R3, R9 
    /*0002ee58*/ BL          0x000000000002EE58          @ VI_HAL_SetBEPARA0LoadAddr [R_ARM_CALL: .text+0x35460] 
    /*0002ee5c*/ LDRD        R8, [R5, #-8] 
    /*0002ee60*/ MOVW        R2, #49696                  @ 0xc220 
    /*0002ee64*/ ADDS        R2, R2, R6 
    /*0002ee68*/ MOV         R3, #0 
    /*0002ee6c*/ ADC         R3, R3, R7 
    /*0002ee70*/ ADDS        R2, R2, R8 
    /*0002ee74*/ MOV         R0, R4 
    /*0002ee78*/ ADC         R3, R3, R9 
    /*0002ee7c*/ BL          0x000000000002EE7C          @ VI_HAL_SetBEPARA1LoadAddr [R_ARM_CALL: .text+0x35468] 
    /*0002ee80*/ LDRD        R8, [R5, #-8] 
    /*0002ee84*/ MOVW        R2, #50736                  @ 0xc630 
    /*0002ee88*/ ADDS        R2, R2, R6 
    /*0002ee8c*/ MOV         R3, #0 
    /*0002ee90*/ ADC         R3, R3, R7 
    /*0002ee94*/ ADDS        R2, R2, R8 
    /*0002ee98*/ MOV         R0, R4 
    /*0002ee9c*/ ADC         R3, R3, R9 
    /*0002eea0*/ BL          0x000000000002EEA0          @ VI_HAL_SetBEPARA2LoadAddr [R_ARM_CALL: .text+0x35470] 
    /*0002eea4*/ LDRD        R8, [R5, #-8] 
    /*0002eea8*/ MOVW        R2, #51552                  @ 0xc960 
    /*0002eeac*/ ADDS        R2, R2, R6 
    /*0002eeb0*/ MOV         R3, #0 
    /*0002eeb4*/ ADC         R3, R3, R7 
    /*0002eeb8*/ ADDS        R2, R2, R8 
    /*0002eebc*/ MOV         R0, R4 
    /*0002eec0*/ ADC         R3, R3, R9 
    /*0002eec4*/ BL          0x000000000002EEC4          @ VI_HAL_SetBEPARA3LoadAddr [R_ARM_CALL: .text+0x35478] 
    /*0002eec8*/ LDRD        R2, [R5, #-8] 
    /*0002eecc*/ ADDS        R6, R6, #52736              @ 0xce00 
    /*0002eed0*/ MOV         R0, R4 
    /*0002eed4*/ ADC         R7, R7, #0 
    /*0002eed8*/ ADDS        R2, R2, R6 
    /*0002eedc*/ ADC         R3, R3, R7 
    /*0002eee0*/ BL          0x000000000002EEE0          @ VI_HAL_SetBeLut2SttAddr [R_ARM_CALL: .text+0x354b0] 
    /*0002eee4*/ LDRD        R2, [SL, #-8] 
    /*0002eee8*/ MOV         R0, R4 
    /*0002eeec*/ BL          0x000000000002EEEC          @ VI_HAL_SetDRCParaAddr [R_ARM_CALL: .text+0x35488] 
    /*0002eef0*/ MOV         R0, R4 
    /*0002eef4*/ LDRD        R2, [SL, #-8] 
    /*0002eef8*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    VI_DRV_SetSplitIspAlgAddr_x2eefc:
    /*0002eefc*/ B           VI_DRV_SetSplitIspAlgAddr_x2eefc@ VI_HAL_SetDRCOutParaAddr [R_ARM_JUMP24: .text+0x35490] 
    VI_DRV_SetSplitIspAlgAddr_x2ef00:
    /*0002ef00*/ MOV         R0, R4 
    /*0002ef04*/ MOV         R2, #0 
    /*0002ef08*/ MOV         R3, #0 
    /*0002ef0c*/ BL          0x000000000002EF0C          @ VI_HAL_SetBE0CFGLoadAddr [R_ARM_CALL: .text+0x35450] 
    /*0002ef10*/ MOV         R0, R4 
    /*0002ef14*/ MOV         R2, #0 
    /*0002ef18*/ MOV         R3, #0 
    /*0002ef1c*/ BL          0x000000000002EF1C          @ VI_HAL_SetBE1CFGLoadAddr [R_ARM_CALL: .text+0x35458] 
    /*0002ef20*/ MOV         R0, R4 
    /*0002ef24*/ MOV         R2, #0 
    /*0002ef28*/ MOV         R3, #0 
    /*0002ef2c*/ BL          0x000000000002EF2C          @ VI_HAL_SetBEPARA0LoadAddr [R_ARM_CALL: .text+0x35460] 
    /*0002ef30*/ MOV         R0, R4 
    /*0002ef34*/ MOV         R2, #0 
    /*0002ef38*/ MOV         R3, #0 
    /*0002ef3c*/ BL          0x000000000002EF3C          @ VI_HAL_SetBEPARA1LoadAddr [R_ARM_CALL: .text+0x35468] 
    /*0002ef40*/ MOV         R0, R4 
    /*0002ef44*/ MOV         R2, #0 
    /*0002ef48*/ MOV         R3, #0 
    /*0002ef4c*/ BL          0x000000000002EF4C          @ VI_HAL_SetBEPARA2LoadAddr [R_ARM_CALL: .text+0x35470] 
    /*0002ef50*/ MOV         R0, R4 
    /*0002ef54*/ MOV         R2, #0 
    /*0002ef58*/ MOV         R3, #0 
    /*0002ef5c*/ BL          0x000000000002EF5C          @ VI_HAL_SetBEPARA3LoadAddr [R_ARM_CALL: .text+0x35478] 
    /*0002ef60*/ MOV         R0, R4 
    /*0002ef64*/ MOV         R2, #0 
    /*0002ef68*/ MOV         R3, #0 
    /*0002ef6c*/ BL          0x000000000002EF6C          @ VI_HAL_SetBeLut2SttAddr [R_ARM_CALL: .text+0x354b0] 
    /*0002ef70*/ MOV         R0, R4 
    /*0002ef74*/ MOV         R2, #0 
    /*0002ef78*/ MOV         R3, #0 
    /*0002ef7c*/ BL          0x000000000002EF7C          @ VI_HAL_SetDRCParaAddr [R_ARM_CALL: .text+0x35488] 
    /*0002ef80*/ MOV         R0, R4 
    /*0002ef84*/ MOV         R2, #0 
    /*0002ef88*/ MOV         R3, #0 
    /*0002ef8c*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    VI_DRV_SetSplitIspAlgAddr_x2ef90:
    /*0002ef90*/ B           VI_DRV_SetSplitIspAlgAddr_x2ef90@ VI_HAL_SetDRCOutParaAddr [R_ARM_JUMP24: .text+0x35490] 
FUNC_END VI_DRV_SetSplitIspAlgAddr


FUNC_BEGIN VI_DRV_SetSplitModelCfg
    /*0002ef94*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002ef98*/ MOV         R4, R0 
    /*0002ef9c*/ SUB         SP, SP, #228                @ 0xe4 
    /*0002efa0*/ LSL         IP, R4, #2 
    /*0002efa4*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002efa8*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002efac*/ STR         R0, [SP, #16] 
    /*0002efb0*/ ADD         R0, R0, IP 
    /*0002efb4*/ STR         R2, [SP, #28] 
    /*0002efb8*/ MOV         R6, #0 
    /*0002efbc*/ LDR         R2, [R0, #728]              @ 0x2d8 
    /*0002efc0*/ MOV         FP, R3 
    /*0002efc4*/ LDR         R7, [R0, #712]              @ 0x2c8 
    /*0002efc8*/ MOV         R3, #2 
    /*0002efcc*/ STR         IP, [SP, #20] 
    /*0002efd0*/ LDR         R0, [R2, #320]              @ 0x140 
    /*0002efd4*/ STR         R1, [SP, #24] 
    /*0002efd8*/ STR         R6, [SP, #40]               @ 0x28 
    /*0002efdc*/ STR         R6, [SP, #36]               @ 0x24 
    /*0002efe0*/ STR         R6, [SP, #44]               @ 0x2c 
    /*0002efe4*/ STR         R3, [SP, #32] 
    /*0002efe8*/ BL          0x000000000002EFE8          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*0002efec*/ CMP         R0, #1 
    /*0002eff0*/ STREQ       R0, [SP, #80]               @ 0x50 
    /*0002eff4*/ STRNE       R6, [SP, #80]               @ 0x50 
    /*0002eff8*/ MOVEQ       R5, #1920                   @ 0x780 
    /*0002effc*/ MOVNE       R5, #3840                   @ 0xf00 
    /*0002f000*/ CMP         R7, #1 
    /*0002f004*/ MOVNE       IP, #0 
    /*0002f008*/ BEQ         VI_DRV_SetSplitModelCfg_x2f25c
    VI_DRV_SetSplitModelCfg_x2f00c:
    /*0002f00c*/ LDR         R3, [SP, #16] 
    /*0002f010*/ MOV         R7, #456                    @ 0x1c8 
    /*0002f014*/ LDR         R2, [SP, #20] 
    /*0002f018*/ MOV         R9, #0 
    /*0002f01c*/ LDR         R1, [PC, #652]              @ 0x000000000002f2b0 
    /*0002f020*/ ADD         SL, R3, R2 
    /*0002f024*/ ADD         R3, SP, #36                 @ 0x24 
    /*0002f028*/ LDR         R0, [SL, #728]              @ 0x2d8 
    /*0002f02c*/ MLA         R7, R7, R4, R1 
    /*0002f030*/ ADD         R2, R0, #86016              @ 0x15000 
    /*0002f034*/ LDR         R6, [R0, #3216]             @ 0xc90 
    /*0002f038*/ LDR         R1, [R2, #956]              @ 0x3bc 
    /*0002f03c*/ LDR         LR, [R2, #944]              @ 0x3b0 
    /*0002f040*/ SUB         R1, R1, #1 
    /*0002f044*/ LDR         R8, [R0, #64]               @ 0x40 
    /*0002f048*/ CLZ         R1, R1 
    /*0002f04c*/ STR         R6, [SP, #152]              @ 0x98 
    /*0002f050*/ STR         LR, [SP, #140]              @ 0x8c 
    /*0002f054*/ LDR         R6, [R2, #280]              @ 0x118 
    /*0002f058*/ LSR         R1, R1, #5 
    /*0002f05c*/ STR         R1, [SP, #136]              @ 0x88 
    /*0002f060*/ MOV         R1, R7 
    /*0002f064*/ LDR         LR, [R0, #64]               @ 0x40 
    /*0002f068*/ LDR         R2, [R2, #356]              @ 0x164 
    /*0002f06c*/ STR         R8, [SP, #132]              @ 0x84 
    /*0002f070*/ MOV         R8, #0 
    /*0002f074*/ STR         R6, [SP, #128]              @ 0x80 
    /*0002f078*/ MOV         R6, #0 
    /*0002f07c*/ STR         LR, [SP, #156]              @ 0x9c 
    /*0002f080*/ LDR         LR, [R0, #56]               @ 0x38 
    /*0002f084*/ ADD         R0, SP, #72                 @ 0x48 
    /*0002f088*/ STR         R2, [SP, #72]               @ 0x48 
    /*0002f08c*/ MOV         R2, #104                    @ 0x68 
    /*0002f090*/ STR         R5, [SP, #8] 
    /*0002f094*/ STR         FP, [SP, #4] 
    /*0002f098*/ STR         IP, [SP] 
    /*0002f09c*/ STR         LR, [SP, #160]              @ 0xa0 
    /*0002f0a0*/ STR         R6, [SP, #112]              @ 0x70 
    /*0002f0a4*/ STR         R6, [SP, #100]              @ 0x64 
    /*0002f0a8*/ STR         R6, [SP, #104]              @ 0x68 
    /*0002f0ac*/ STR         R6, [SP, #108]              @ 0x6c 
    /*0002f0b0*/ STR         R6, [SP, #96]               @ 0x60 
    /*0002f0b4*/ STRD        R8, [SP, #120]              @ 0x78 
    /*0002f0b8*/ BL          0x000000000002F0B8          @ VIPROCSplitForViproc [R_ARM_CALL: .text+0x38e48] 
    /*0002f0bc*/ CMP         FP, R6 
    /*0002f0c0*/ BEQ         VI_DRV_SetSplitModelCfg_x2f22c
    /*0002f0c4*/ LDR         R2, [SP, #28] 
    /*0002f0c8*/ MOV         R3, #72                     @ 0x48 
    /*0002f0cc*/ LDR         R1, [SP, #24] 
    /*0002f0d0*/ MLA         R9, R3, R2, R1 
    VI_DRV_SetSplitModelCfg_x2f0d4:
    /*0002f0d4*/ LDR         R5, [R9, #16] 
    /*0002f0d8*/ MOV         R2, R7 
    /*0002f0dc*/ MOV         R0, R4 
    /*0002f0e0*/ MOV         R1, R5 
    /*0002f0e4*/ BL          0x000000000002F0E4          @ VI_DRV_SetCurPicConfig [R_ARM_CALL: .text+0x2dc58] 
    /*0002f0e8*/ MOV         R3, R7 
    /*0002f0ec*/ MOV         R2, R5 
    /*0002f0f0*/ MOV         R1, #0 
    /*0002f0f4*/ MOV         R0, R4 
    /*0002f0f8*/ BL          0x000000000002F0F8          @ VI_DRV_SetChnCropInfo [R_ARM_CALL: .text+0x2de08] 
    /*0002f0fc*/ MOV         R3, R7 
    /*0002f100*/ MOV         R2, R5 
    /*0002f104*/ MOV         R1, #0 
    /*0002f108*/ MOV         R0, R4 
    /*0002f10c*/ BL          0x000000000002F10C          @ VI_DRV_UpdateChnAttr [R_ARM_CALL: .text+0x2de90] 
    /*0002f110*/ MOV         R3, R7 
    /*0002f114*/ MOV         R2, R5 
    /*0002f118*/ MOV         R1, #0 
    /*0002f11c*/ MOV         R0, R4 
    /*0002f120*/ BL          0x000000000002F120          @ VI_DRV_UpdateCmpParam [R_ARM_CALL: .text+0x2e090] 
    /*0002f124*/ MOV         R2, R7 
    /*0002f128*/ MOV         R1, R6 
    /*0002f12c*/ MOV         R0, R4 
    /*0002f130*/ BL          0x000000000002F130          @ VI_DRV_OfflineUpdate3dnrAttr [R_ARM_CALL: .text+0x2e534] 
    /*0002f134*/ MOV         R2, R7 
    /*0002f138*/ MOV         R1, R5 
    /*0002f13c*/ MOV         R0, R4 
    /*0002f140*/ BL          0x000000000002F140          @ VI_DRV_UpdateOfflineWdrPic [R_ARM_CALL: .text+0x2ec2c] 
    /*0002f144*/ LDR         R3, [SL, #728]              @ 0x2d8 
    /*0002f148*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0002f14c*/ LDR         R2, [R3, #3004]             @ 0xbbc 
    /*0002f150*/ CMP         R2, #1 
    /*0002f154*/ MOVEQ       R1, #0 
    /*0002f158*/ BEQ         VI_DRV_SetSplitModelCfg_x2f168
    /*0002f15c*/ LDR         R1, [R3, #2996]             @ 0xbb4 
    /*0002f160*/ SUBS        R1, R1, #2 
    /*0002f164*/ MOVNE       R1, #1 
    VI_DRV_SetSplitModelCfg_x2f168:
    /*0002f168*/ MOV         R0, R5 
    /*0002f16c*/ UXTB        R8, R6 
    /*0002f170*/ BL          0x000000000002F170          @ VI_HAL_SetBeEnable [R_ARM_CALL: .text+0x35408] 
    /*0002f174*/ MOV         R1, R5 
    /*0002f178*/ MOV         R0, R4 
    /*0002f17c*/ ADD         R7, R7, #152                @ 0x98 
    /*0002f180*/ BL          0x000000000002F180          @ VI_DRV_SetIspBypassMode [R_ARM_CALL: .text+0x2e4c4] 
    /*0002f184*/ MOV         R1, R5 
    /*0002f188*/ MOV         R0, R4 
    /*0002f18c*/ ADD         R9, R9, #24 
    /*0002f190*/ BL          0x000000000002F190          @ VI_DRV_SetImgProMode [R_ARM_CALL: .text+0x2e3a0] 
    /*0002f194*/ MOV         R1, R5 
    /*0002f198*/ MOV         R0, R4 
    /*0002f19c*/ BL          0x000000000002F19C          @ VI_DRV_SetSFifoEnable [R_ARM_CALL: .text+0x2e430] 
    /*0002f1a0*/ LDRD        R2, [R9, #-16] 
    /*0002f1a4*/ MOV         R0, R5 
    /*0002f1a8*/ ADDS        R2, R2, #5888               @ 0x1700 
    /*0002f1ac*/ ADC         R3, R3, #0 
    /*0002f1b0*/ BL          0x000000000002F1B0          @ VI_HAL_SetDSFLoadAddr [R_ARM_CALL: .text+0x35448] 
    /*0002f1b4*/ MOV         R2, R6 
    /*0002f1b8*/ MOV         R1, R5 
    /*0002f1bc*/ MOV         R0, R4 
    /*0002f1c0*/ BL          0x000000000002F1C0          @ VI_DRV_SetSplitIspAlgAddr [R_ARM_CALL: .text+0x2edc4] 
    /*0002f1c4*/ MOV         R1, R6 
    /*0002f1c8*/ MOV         R2, R5 
    /*0002f1cc*/ MOV         R0, R4 
    /*0002f1d0*/ BL          0x000000000002F1D0          @ VI_DRV_UpdateLDCI [R_ARM_CALL: .text+0x2e718] 
    /*0002f1d4*/ MOV         R2, R8 
    /*0002f1d8*/ MOV         R1, R5 
    /*0002f1dc*/ MOV         R0, R4 
    /*0002f1e0*/ BL          0x000000000002F1E0          @ VI_DRV_SetIspSttAddr [R_ARM_CALL: .text+0x2ecb8] 
    /*0002f1e4*/ MOV         R2, R5 
    /*0002f1e8*/ MOV         R1, R8 
    /*0002f1ec*/ MOV         R0, R4 
    /*0002f1f0*/ BL          0x000000000002F1F0          @ VI_DRV_EnableIspAlgorithm [R_ARM_CALL: .text+0x3891c] 
    /*0002f1f4*/ MOV         R1, R6 
    /*0002f1f8*/ MOV         R2, R5 
    /*0002f1fc*/ MOV         R0, R4 
    /*0002f200*/ BL          0x000000000002F200          @ VI_DRV_UpdateOfflineVCDS [R_ARM_CALL: .text+0x2e6d0] 
    /*0002f204*/ MOV         R2, R5 
    /*0002f208*/ MOV         R1, R8 
    /*0002f20c*/ MOV         R0, R4 
    /*0002f210*/ BL          0x000000000002F210          @ VI_DRV_SetBeLut2SttWidth [R_ARM_CALL: .text+0x38978] 
    /*0002f214*/ ADD         R6, R6, #1 
    /*0002f218*/ MOV         R1, R8 
    /*0002f21c*/ MOV         R0, R4 
    /*0002f220*/ BL          0x000000000002F220          @ VI_DRV_UpdateIspSyncParam [R_ARM_CALL: .text+0x38aa4] 
    /*0002f224*/ CMP         FP, R6 
    /*0002f228*/ BHI         VI_DRV_SetSplitModelCfg_x2f0d4
    VI_DRV_SetSplitModelCfg_x2f22c:
    /*0002f22c*/ LDR         R3, [SP, #16] 
    /*0002f230*/ MOV         R0, R4 
    /*0002f234*/ LDR         R2, [SP, #20] 
    /*0002f238*/ MOV         R4, #0 
    /*0002f23c*/ ADD         R3, R3, R2 
    /*0002f240*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0002f244*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002f248*/ STR         R4, [R3, #2180]             @ 0x884 
    /*0002f24c*/ BL          0x000000000002F24C          @ VI_DRV_FlushIspBuf [R_ARM_CALL: .text+0x2ed80] 
    /*0002f250*/ MOV         R0, R4 
    /*0002f254*/ ADD         SP, SP, #228                @ 0xe4 
    /*0002f258*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_SetSplitModelCfg_x2f25c:
    /*0002f25c*/ ADD         R6, SP, #48                 @ 0x30 
    /*0002f260*/ ADD         R2, SP, #32 
    /*0002f264*/ MOV         R0, R4 
    /*0002f268*/ MOV         R1, R6 
    /*0002f26c*/ BL          0x000000000002F26C          @ VI_DRV_CalcVpssSplit [R_ARM_CALL: .text+0x2ed14] 
    /*0002f270*/ LDR         R1, [SP, #32] 
    /*0002f274*/ CMP         R1, #0 
    /*0002f278*/ BEQ         VI_DRV_SetSplitModelCfg_x2f2a8
    /*0002f27c*/ LDR         R8, [SP, #24] 
    /*0002f280*/ MOV         R3, #0 
    /*0002f284*/ LDR         R9, [SP, #28] 
    VI_DRV_SetSplitModelCfg_x2f288:
    /*0002f288*/ LDR         R2, [R6, R3, LSL #3] 
    /*0002f28c*/ ADD         R0, SP, #36                 @ 0x24 
    /*0002f290*/ STR         R2, [R0, R3, LSL #2] 
    /*0002f294*/ ADD         R3, R3, #1 
    /*0002f298*/ CMP         R3, R1 
    /*0002f29c*/ BNE         VI_DRV_SetSplitModelCfg_x2f288
    /*0002f2a0*/ STR         R8, [SP, #24] 
    /*0002f2a4*/ STR         R9, [SP, #28] 
    VI_DRV_SetSplitModelCfg_x2f2a8:
    /*0002f2a8*/ MOV         IP, #1 
    /*0002f2ac*/ B           VI_DRV_SetSplitModelCfg_x2f00c
    /*0002f2b0*/ MULEQ       R1, R8, R4 
FUNC_END VI_DRV_SetSplitModelCfg


FUNC_BEGIN VI_DRV_SetSingleIspAlgAddr
    /*0002f2b4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002f2b8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002f2bc*/ ADD         R0, R3, R0, LSL #2 
    /*0002f2c0*/ PUSH        {R4, R5, R6, R8, R9, LR} 
    /*0002f2c4*/ MOV         R4, R1 
    /*0002f2c8*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002f2cc*/ ADD         R2, R3, #65536              @ 0x10000 
    /*0002f2d0*/ LDR         R1, [R2, #3004]             @ 0xbbc 
    /*0002f2d4*/ CMP         R1, #1 
    /*0002f2d8*/ BEQ         VI_DRV_SetSingleIspAlgAddr_x2f3ac
    /*0002f2dc*/ LDR         R2, [R2, #2996]             @ 0xbb4 
    /*0002f2e0*/ CMP         R2, #2 
    /*0002f2e4*/ BEQ         VI_DRV_SetSingleIspAlgAddr_x2f3ac
    /*0002f2e8*/ ADD         R5, R3, #87040              @ 0x15400 
    /*0002f2ec*/ ADD         R6, R3, #88064              @ 0x15800 
    /*0002f2f0*/ ADD         R5, R5, #560                @ 0x230 
    /*0002f2f4*/ MOV         R0, R4 
    /*0002f2f8*/ MOVW        R8, #49696                  @ 0xc220 
    /*0002f2fc*/ MOV         R9, #0 
    /*0002f300*/ LDRD        R2, [R5, #-8] 
    /*0002f304*/ BL          0x000000000002F304          @ VI_HAL_SetBE0CFGLoadAddr [R_ARM_CALL: .text+0x35450] 
    /*0002f308*/ LDRD        R2, [R5, #-8] 
    /*0002f30c*/ MOV         R0, R4 
    /*0002f310*/ ADDS        R2, R2, #45568              @ 0xb200 
    /*0002f314*/ ADC         R3, R3, #0 
    /*0002f318*/ BL          0x000000000002F318          @ VI_HAL_SetBE1CFGLoadAddr [R_ARM_CALL: .text+0x35458] 
    /*0002f31c*/ LDRD        R2, [R5, #-8] 
    /*0002f320*/ MOV         R0, R4 
    /*0002f324*/ ADDS        R2, R2, #47872              @ 0xbb00 
    /*0002f328*/ ADC         R3, R3, #0 
    /*0002f32c*/ BL          0x000000000002F32C          @ VI_HAL_SetBEPARA0LoadAddr [R_ARM_CALL: .text+0x35460] 
    /*0002f330*/ LDRD        R2, [R5, #-8] 
    /*0002f334*/ MOV         R0, R4 
    /*0002f338*/ ADDS        R2, R2, R8 
    /*0002f33c*/ MOVW        R8, #50736                  @ 0xc630 
    /*0002f340*/ ADC         R3, R3, R9 
    /*0002f344*/ MOV         R9, #0 
    /*0002f348*/ BL          0x000000000002F348          @ VI_HAL_SetBEPARA1LoadAddr [R_ARM_CALL: .text+0x35468] 
    /*0002f34c*/ LDRD        R2, [R5, #-8] 
    /*0002f350*/ MOV         R0, R4 
    /*0002f354*/ ADDS        R2, R2, R8 
    /*0002f358*/ MOVW        R8, #51552                  @ 0xc960 
    /*0002f35c*/ ADC         R3, R3, R9 
    /*0002f360*/ MOV         R9, #0 
    /*0002f364*/ BL          0x000000000002F364          @ VI_HAL_SetBEPARA2LoadAddr [R_ARM_CALL: .text+0x35470] 
    /*0002f368*/ LDRD        R2, [R5, #-8] 
    /*0002f36c*/ MOV         R0, R4 
    /*0002f370*/ ADDS        R2, R2, R8 
    /*0002f374*/ ADC         R3, R3, R9 
    /*0002f378*/ BL          0x000000000002F378          @ VI_HAL_SetBEPARA3LoadAddr [R_ARM_CALL: .text+0x35478] 
    /*0002f37c*/ LDRD        R2, [R5, #-8] 
    /*0002f380*/ MOV         R0, R4 
    /*0002f384*/ ADDS        R2, R2, #52736              @ 0xce00 
    /*0002f388*/ ADC         R3, R3, #0 
    /*0002f38c*/ BL          0x000000000002F38C          @ VI_HAL_SetBeLut2SttAddr [R_ARM_CALL: .text+0x354b0] 
    /*0002f390*/ LDRD        R2, [R6, #72]               @ 0x48 
    /*0002f394*/ MOV         R0, R4 
    /*0002f398*/ BL          0x000000000002F398          @ VI_HAL_SetDRCParaAddr [R_ARM_CALL: .text+0x35488] 
    /*0002f39c*/ MOV         R0, R4 
    /*0002f3a0*/ LDRD        R2, [R6, #72]               @ 0x48 
    /*0002f3a4*/ POP         {R4, R5, R6, R8, R9, LR} 
    VI_DRV_SetSingleIspAlgAddr_x2f3a8:
    /*0002f3a8*/ B           VI_DRV_SetSingleIspAlgAddr_x2f3a8@ VI_HAL_SetDRCOutParaAddr [R_ARM_JUMP24: .text+0x35490] 
    VI_DRV_SetSingleIspAlgAddr_x2f3ac:
    /*0002f3ac*/ MOV         R0, R4 
    /*0002f3b0*/ MOV         R2, #0 
    /*0002f3b4*/ MOV         R3, #0 
    /*0002f3b8*/ BL          0x000000000002F3B8          @ VI_HAL_SetBE0CFGLoadAddr [R_ARM_CALL: .text+0x35450] 
    /*0002f3bc*/ MOV         R0, R4 
    /*0002f3c0*/ MOV         R2, #0 
    /*0002f3c4*/ MOV         R3, #0 
    /*0002f3c8*/ BL          0x000000000002F3C8          @ VI_HAL_SetBE1CFGLoadAddr [R_ARM_CALL: .text+0x35458] 
    /*0002f3cc*/ MOV         R0, R4 
    /*0002f3d0*/ MOV         R2, #0 
    /*0002f3d4*/ MOV         R3, #0 
    /*0002f3d8*/ BL          0x000000000002F3D8          @ VI_HAL_SetBEPARA0LoadAddr [R_ARM_CALL: .text+0x35460] 
    /*0002f3dc*/ MOV         R0, R4 
    /*0002f3e0*/ MOV         R2, #0 
    /*0002f3e4*/ MOV         R3, #0 
    /*0002f3e8*/ BL          0x000000000002F3E8          @ VI_HAL_SetBEPARA1LoadAddr [R_ARM_CALL: .text+0x35468] 
    /*0002f3ec*/ MOV         R0, R4 
    /*0002f3f0*/ MOV         R2, #0 
    /*0002f3f4*/ MOV         R3, #0 
    /*0002f3f8*/ BL          0x000000000002F3F8          @ VI_HAL_SetBEPARA2LoadAddr [R_ARM_CALL: .text+0x35470] 
    /*0002f3fc*/ MOV         R0, R4 
    /*0002f400*/ MOV         R2, #0 
    /*0002f404*/ MOV         R3, #0 
    /*0002f408*/ BL          0x000000000002F408          @ VI_HAL_SetBEPARA3LoadAddr [R_ARM_CALL: .text+0x35478] 
    /*0002f40c*/ MOV         R0, R4 
    /*0002f410*/ MOV         R2, #0 
    /*0002f414*/ MOV         R3, #0 
    /*0002f418*/ BL          0x000000000002F418          @ VI_HAL_SetBeLut2SttAddr [R_ARM_CALL: .text+0x354b0] 
    /*0002f41c*/ MOV         R0, R4 
    /*0002f420*/ MOV         R2, #0 
    /*0002f424*/ MOV         R3, #0 
    /*0002f428*/ BL          0x000000000002F428          @ VI_HAL_SetDRCParaAddr [R_ARM_CALL: .text+0x35488] 
    /*0002f42c*/ MOV         R0, R4 
    /*0002f430*/ MOV         R2, #0 
    /*0002f434*/ MOV         R3, #0 
    /*0002f438*/ POP         {R4, R5, R6, R8, R9, LR} 
    VI_DRV_SetSingleIspAlgAddr_x2f43c:
    /*0002f43c*/ B           VI_DRV_SetSingleIspAlgAddr_x2f43c@ VI_HAL_SetDRCOutParaAddr [R_ARM_JUMP24: .text+0x35490] 
FUNC_END VI_DRV_SetSingleIspAlgAddr


FUNC_BEGIN VI_DRV_SetSingleModelCfg
    /*0002f440*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0002f444*/ MOV         R2, #0 
    /*0002f448*/ LDR         R5, [R1, #16] 
    /*0002f44c*/ MOV         R4, R0 
    /*0002f450*/ MOV         R8, R1 
    /*0002f454*/ LSL         R9, R0, #2 
    /*0002f458*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002f45c*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002f460*/ MOV         R1, R5 
    /*0002f464*/ ADD         R7, R6, R9 
    /*0002f468*/ BL          0x000000000002F468          @ VI_DRV_SetCurPicConfig [R_ARM_CALL: .text+0x2dc58] 
    /*0002f46c*/ MOV         R1, R5 
    /*0002f470*/ MOV         R0, R4 
    /*0002f474*/ MOV         R2, #0 
    /*0002f478*/ BL          0x000000000002F478          @ VI_DRV_UpdateCurPicDcmpAttr [R_ARM_CALL: .text+0x2dd50] 
    /*0002f47c*/ MOV         R3, #0 
    /*0002f480*/ MOV         R1, R3 
    /*0002f484*/ MOV         R2, R5 
    /*0002f488*/ MOV         R0, R4 
    /*0002f48c*/ BL          0x000000000002F48C          @ VI_DRV_SetChnCropInfo [R_ARM_CALL: .text+0x2de08] 
    /*0002f490*/ MOV         R3, #0 
    /*0002f494*/ MOV         R1, R3 
    /*0002f498*/ MOV         R2, R5 
    /*0002f49c*/ MOV         R0, R4 
    /*0002f4a0*/ BL          0x000000000002F4A0          @ VI_DRV_UpdateChnAttr [R_ARM_CALL: .text+0x2de90] 
    /*0002f4a4*/ MOV         R3, #0 
    /*0002f4a8*/ MOV         R1, R3 
    /*0002f4ac*/ MOV         R2, R5 
    /*0002f4b0*/ MOV         R0, R4 
    /*0002f4b4*/ BL          0x000000000002F4B4          @ VI_DRV_UpdateCmpParam [R_ARM_CALL: .text+0x2e090] 
    /*0002f4b8*/ MOV         R3, #0 
    /*0002f4bc*/ MOV         R1, R3 
    /*0002f4c0*/ MOV         R2, R5 
    /*0002f4c4*/ MOV         R0, R4 
    /*0002f4c8*/ BL          0x000000000002F4C8          @ VI_DRV_UpdateDSFConfig [R_ARM_CALL: .text+0x2e1d4] 
    /*0002f4cc*/ LDR         R1, [R7, #728]              @ 0x2d8 
    /*0002f4d0*/ ADD         R3, R1, #86016              @ 0x15000 
    /*0002f4d4*/ LDR         R2, [R3, #2180]             @ 0x884 
    /*0002f4d8*/ LDR         R0, [R3, #1592]             @ 0x638 
    /*0002f4dc*/ SUB         R2, R2, #1 
    /*0002f4e0*/ CLZ         R2, R2 
    /*0002f4e4*/ CMP         R0, #0 
    /*0002f4e8*/ LSR         R2, R2, #5 
    /*0002f4ec*/ MOVEQ       R2, #0 
    /*0002f4f0*/ CMP         R2, #0 
    /*0002f4f4*/ BEQ         VI_DRV_SetSingleModelCfg_x2f50c
    /*0002f4f8*/ ADD         R1, R1, #88064              @ 0x15800 
    /*0002f4fc*/ ADD         R1, R1, #136                @ 0x88 
    /*0002f500*/ BL          0x000000000002F500          @ VI_HAL_Set3dnrParam [R_ARM_CALL: .text+0x34bc0] 
    /*0002f504*/ LDR         R1, [R7, #728]              @ 0x2d8 
    /*0002f508*/ ADD         R3, R1, #86016              @ 0x15000 
    VI_DRV_SetSingleModelCfg_x2f50c:
    /*0002f50c*/ MOV         R7, #0 
    /*0002f510*/ ADD         R6, R6, R9 
    /*0002f514*/ MOV         R1, R5 
    /*0002f518*/ STR         R7, [R3, #2180]             @ 0x884 
    /*0002f51c*/ MOV         R2, R7 
    /*0002f520*/ MOV         R0, R4 
    /*0002f524*/ BL          0x000000000002F524          @ VI_DRV_UpdateOfflineWdrPic [R_ARM_CALL: .text+0x2ec2c] 
    /*0002f528*/ LDR         R3, [R6, #728]              @ 0x2d8 
    /*0002f52c*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0002f530*/ LDR         R2, [R3, #3004]             @ 0xbbc 
    /*0002f534*/ CMP         R2, #1 
    /*0002f538*/ MOVEQ       R1, R7 
    /*0002f53c*/ BEQ         VI_DRV_SetSingleModelCfg_x2f54c
    /*0002f540*/ LDR         R1, [R3, #2996]             @ 0xbb4 
    /*0002f544*/ SUBS        R1, R1, #2 
    /*0002f548*/ MOVNE       R1, #1 
    VI_DRV_SetSingleModelCfg_x2f54c:
    /*0002f54c*/ MOV         R0, R5 
    /*0002f550*/ BL          0x000000000002F550          @ VI_HAL_SetBeEnable [R_ARM_CALL: .text+0x35408] 
    /*0002f554*/ MOV         R1, R5 
    /*0002f558*/ MOV         R0, R4 
    /*0002f55c*/ BL          0x000000000002F55C          @ VI_DRV_SetIspBypassMode [R_ARM_CALL: .text+0x2e4c4] 
    /*0002f560*/ MOV         R1, R5 
    /*0002f564*/ MOV         R0, R4 
    /*0002f568*/ BL          0x000000000002F568          @ VI_DRV_SetImgProMode [R_ARM_CALL: .text+0x2e3a0] 
    /*0002f56c*/ MOV         R1, R5 
    /*0002f570*/ MOV         R0, R4 
    /*0002f574*/ BL          0x000000000002F574          @ VI_DRV_SetSFifoEnable [R_ARM_CALL: .text+0x2e430] 
    /*0002f578*/ LDRD        R2, [R8, #8] 
    /*0002f57c*/ MOV         R0, R5 
    /*0002f580*/ ADDS        R2, R2, #5888               @ 0x1700 
    /*0002f584*/ ADC         R3, R3, #0 
    /*0002f588*/ BL          0x000000000002F588          @ VI_HAL_SetDSFLoadAddr [R_ARM_CALL: .text+0x35448] 
    /*0002f58c*/ MOV         R1, R5 
    /*0002f590*/ MOV         R0, R4 
    /*0002f594*/ BL          0x000000000002F594          @ VI_DRV_SetSingleIspAlgAddr [R_ARM_CALL: .text+0x2f2b4] 
    /*0002f598*/ MOV         R2, R5 
    /*0002f59c*/ MOV         R1, #0 
    /*0002f5a0*/ MOV         R0, R4 
    /*0002f5a4*/ BL          0x000000000002F5A4          @ VI_DRV_UpdateLDCI [R_ARM_CALL: .text+0x2e718] 
    /*0002f5a8*/ MOV         R1, R5 
    /*0002f5ac*/ MOV         R0, R4 
    /*0002f5b0*/ MOV         R2, #0 
    /*0002f5b4*/ BL          0x000000000002F5B4          @ VI_DRV_SetIspSttAddr [R_ARM_CALL: .text+0x2ecb8] 
    /*0002f5b8*/ MOV         R2, R5 
    /*0002f5bc*/ MOV         R1, #0 
    /*0002f5c0*/ MOV         R0, R4 
    /*0002f5c4*/ BL          0x000000000002F5C4          @ VI_DRV_EnableIspAlgorithm [R_ARM_CALL: .text+0x3891c] 
    /*0002f5c8*/ MOV         R2, R5 
    /*0002f5cc*/ MOV         R0, R4 
    /*0002f5d0*/ MOV         R1, #0 
    /*0002f5d4*/ BL          0x000000000002F5D4          @ VI_DRV_UpdateOfflineVCDS [R_ARM_CALL: .text+0x2e6d0] 
    /*0002f5d8*/ MOV         R1, R5 
    /*0002f5dc*/ MOV         R2, #0 
    /*0002f5e0*/ MOV         R0, R4 
    /*0002f5e4*/ BL          0x000000000002F5E4          @ VI_DRV_UpdateFpnCorrection [R_ARM_CALL: .text+0x3a4d8] 
    /*0002f5e8*/ MOV         R2, R5 
    /*0002f5ec*/ MOV         R1, #0 
    /*0002f5f0*/ MOV         R0, R4 
    /*0002f5f4*/ BL          0x000000000002F5F4          @ VI_DRV_SetBeLut2SttWidth [R_ARM_CALL: .text+0x38978] 
    /*0002f5f8*/ MOV         R1, #0 
    /*0002f5fc*/ MOV         R0, R4 
    /*0002f600*/ BL          0x000000000002F600          @ VI_DRV_UpdateIspSyncParam [R_ARM_CALL: .text+0x38aa4] 
    /*0002f604*/ MOV         R0, R4 
    /*0002f608*/ BL          0x000000000002F608          @ VI_DRV_FlushIspBuf [R_ARM_CALL: .text+0x2ed80] 
    /*0002f60c*/ MOV         R0, #0 
    /*0002f610*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VI_DRV_SetSingleModelCfg


FUNC_BEGIN VI_DRV_GetNodeWeight
    /*0002f614*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002f618*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002f61c*/ ADD         R0, R3, R0, LSL #2 
    /*0002f620*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0002f624*/ ADD         R3, R3, #86016              @ 0x15000 
    /*0002f628*/ LDR         R2, [R3, #356]              @ 0x164 
    /*0002f62c*/ LDR         R0, [R3, #360]              @ 0x168 
    /*0002f630*/ MUL         R0, R0, R2 
    /*0002f634*/ BX          LR 
FUNC_END VI_DRV_GetNodeWeight


FUNC_BEGIN VI_DRV_NeedSplit
    /*0002f638*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002f63c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002f640*/ PUSH        {R4, R5, LR} 
    /*0002f644*/ ADD         R4, R3, R0, LSL #2 
    /*0002f648*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0002f64c*/ LDR         R5, [R4, #712]              @ 0x2c8 
    /*0002f650*/ CMP         R5, #1 
    /*0002f654*/ MOVHI       R0, #0 
    /*0002f658*/ BLS         VI_DRV_NeedSplit_x2f664
    /*0002f65c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0002f660*/ POP         {R4, R5, PC} 
    VI_DRV_NeedSplit_x2f664:
    /*0002f664*/ LDR         R1, [R4, #728]              @ 0x2d8 
    /*0002f668*/ MOV         R2, #68                     @ 0x44 
    /*0002f66c*/ ADD         R0, SP, #4 
    /*0002f670*/ ADD         R1, R1, #34048              @ 0x8500 
    /*0002f674*/ ADD         R1, R1, #44                 @ 0x2c 
    /*0002f678*/ BL          0x000000000002F678          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002f67c*/ LDR         R3, [R4, #728]              @ 0x2d8 
    /*0002f680*/ LDR         R0, [R3, #320]              @ 0x140 
    /*0002f684*/ BL          0x000000000002F684          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*0002f688*/ CMP         R0, #1 
    /*0002f68c*/ BEQ         VI_DRV_NeedSplit_x2f6b4
    /*0002f690*/ CMP         R5, #1 
    /*0002f694*/ MOVEQ       R0, #2048                   @ 0x800 
    /*0002f698*/ MOVNE       R0, #4096                   @ 0x1000 
    VI_DRV_NeedSplit_x2f69c:
    /*0002f69c*/ LDR         R3, [SP, #16] 
    /*0002f6a0*/ CMP         R0, R3 
    /*0002f6a4*/ MOVCS       R0, #0 
    /*0002f6a8*/ MOVCC       R0, #1 
    /*0002f6ac*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0002f6b0*/ POP         {R4, R5, PC} 
    VI_DRV_NeedSplit_x2f6b4:
    /*0002f6b4*/ CMP         R5, #1 
    /*0002f6b8*/ MOVEQ       R0, #2048                   @ 0x800 
    /*0002f6bc*/ MOVNE       R0, #2688                   @ 0xa80 
    /*0002f6c0*/ B           VI_DRV_NeedSplit_x2f69c
FUNC_END VI_DRV_NeedSplit


FUNC_BEGIN VI_DRV_CheckChnCrop
    /*0002f6c4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0002f6c8*/ SUB         SP, SP, #64                 @ 0x40 
    /*0002f6cc*/ MOV         R5, R0 
    /*0002f6d0*/ MOV         R7, R1 
    /*0002f6d4*/ MOV         R6, R2 
    /*0002f6d8*/ BL          0x000000000002F6D8          @ VI_DRV_GetChnMaxWidth [R_ARM_CALL: .text+0x25f04] 
    /*0002f6dc*/ MOV         R1, R7 
    /*0002f6e0*/ LSL         R8, R5, #2 
    /*0002f6e4*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002f6e8*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002f6ec*/ MOV         R9, R0 
    /*0002f6f0*/ MOV         R0, R5 
    /*0002f6f4*/ BL          0x000000000002F6F4          @ VI_DRV_GetChnMaxHeight [R_ARM_CALL: .text+0x25fcc] 
    /*0002f6f8*/ CMP         R7, #0 
    /*0002f6fc*/ LDR         R2, [R6, #4] 
    /*0002f700*/ ADD         R3, R4, R8 
    /*0002f704*/ MOVEQ       R1, #120                    @ 0x78 
    /*0002f708*/ MOVNE       R1, #32 
    /*0002f70c*/ CMP         R2, #1 
    /*0002f710*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*0002f714*/ BEQ         VI_DRV_CheckChnCrop_x2f7a8
    VI_DRV_CheckChnCrop_x2f718:
    /*0002f718*/ CMP         R3, #0 
    /*0002f71c*/ BEQ         VI_DRV_CheckChnCrop_x2f72c
    VI_DRV_CheckChnCrop_x2f720:
    /*0002f720*/ MOV         R0, #0 
    VI_DRV_CheckChnCrop_x2f724:
    /*0002f724*/ ADD         SP, SP, #64                 @ 0x40 
    /*0002f728*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_DRV_CheckChnCrop_x2f72c:
    /*0002f72c*/ MOV         R0, R5 
    /*0002f730*/ BL          0x000000000002F730          @ VI_DRV_NeedSplit [R_ARM_CALL: .text+0x2f638] 
    /*0002f734*/ CMP         R0, #1 
    /*0002f738*/ BNE         VI_DRV_CheckChnCrop_x2f720
    /*0002f73c*/ LDR         R3, [R6] 
    /*0002f740*/ CMP         R3, #1 
    /*0002f744*/ BNE         VI_DRV_CheckChnCrop_x2f720
    /*0002f748*/ MOV         R1, #44                     @ 0x2c 
    /*0002f74c*/ MOVW        R3, #34160                  @ 0x8570 
    /*0002f750*/ MLA         R7, R1, R7, R3 
    /*0002f754*/ ADD         R4, R4, R8 
    /*0002f758*/ MOV         R2, R1 
    /*0002f75c*/ ADD         R0, SP, #20 
    /*0002f760*/ LDR         R1, [R4, #728]              @ 0x2d8 
    /*0002f764*/ ADD         R1, R1, R7 
    /*0002f768*/ BL          0x000000000002F768          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002f76c*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0002f770*/ CMP         R3, #0 
    /*0002f774*/ BEQ         VI_DRV_CheckChnCrop_x2f720
    /*0002f778*/ MOV         R2, #4096                   @ 0x1000 
    /*0002f77c*/ STR         R2, [SP, #4] 
    /*0002f780*/ MOVW        R2, #0                      @ .LC259 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0bc] 
    /*0002f784*/ MOVT        R2, #0                      @ .LC259 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0bc] 
    /*0002f788*/ MOVW        R3, #3991                   @ 0xf97 
    /*0002f78c*/ STR         R3, [SP] 
    VI_DRV_CheckChnCrop_x2f790:
    /*0002f790*/ LDR         R3, [PC, #428]              @ 0x000000000002f944 
    /*0002f794*/ MOV         R1, #16 
    /*0002f798*/ MOV         R0, #3 
    /*0002f79c*/ BL          0x000000000002F79C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002f7a0*/ MVN         R0, #0 
    /*0002f7a4*/ B           VI_DRV_CheckChnCrop_x2f724
    VI_DRV_CheckChnCrop_x2f7a8:
    /*0002f7a8*/ LDR         IP, [R6, #8] 
    /*0002f7ac*/ TST         IP, #1 
    /*0002f7b0*/ BNE         VI_DRV_CheckChnCrop_x2f8b4
    /*0002f7b4*/ LDR         LR, [R6, #12] 
    /*0002f7b8*/ TST         LR, #1 
    /*0002f7bc*/ BNE         VI_DRV_CheckChnCrop_x2f8cc
    /*0002f7c0*/ LDR         R2, [R6, #16] 
    /*0002f7c4*/ TST         R2, #3 
    /*0002f7c8*/ BNE         VI_DRV_CheckChnCrop_x2f8e4
    /*0002f7cc*/ LDR         SL, [R6, #20] 
    /*0002f7d0*/ TST         SL, #3 
    /*0002f7d4*/ BNE         VI_DRV_CheckChnCrop_x2f914
    /*0002f7d8*/ CMP         R9, R2 
    /*0002f7dc*/ CMPCS       R2, R1 
    /*0002f7e0*/ BCC         VI_DRV_CheckChnCrop_x2f848
    /*0002f7e4*/ CMP         R0, SL 
    /*0002f7e8*/ CMPCS       SL, R1 
    /*0002f7ec*/ BCC         VI_DRV_CheckChnCrop_x2f87c
    /*0002f7f0*/ CMP         IP, #0 
    /*0002f7f4*/ SUB         R9, R9, #1 
    /*0002f7f8*/ BLT         VI_DRV_CheckChnCrop_x2f898
    /*0002f7fc*/ CMP         IP, R9 
    /*0002f800*/ BHI         VI_DRV_CheckChnCrop_x2f898
    /*0002f804*/ CMP         LR, #0 
    /*0002f808*/ SUB         R0, R0, #1 
    /*0002f80c*/ BLT         VI_DRV_CheckChnCrop_x2f818
    /*0002f810*/ CMP         LR, R0 
    /*0002f814*/ BLS         VI_DRV_CheckChnCrop_x2f718
    VI_DRV_CheckChnCrop_x2f818:
    /*0002f818*/ MOVW        R2, #0                      @ .LC258 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf070] 
    /*0002f81c*/ MOVT        R2, #0                      @ .LC258 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf070] 
    /*0002f820*/ MOVW        R3, #3978                   @ 0xf8a 
    /*0002f824*/ STR         LR, [SP, #8] 
    /*0002f828*/ STR         R0, [SP, #4] 
    /*0002f82c*/ STR         R3, [SP] 
    VI_DRV_CheckChnCrop_x2f830:
    /*0002f830*/ LDR         R3, [PC, #268]              @ 0x000000000002f944 
    /*0002f834*/ MOV         R1, #16 
    /*0002f838*/ MOV         R0, #3 
    /*0002f83c*/ BL          0x000000000002F83C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002f840*/ MVN         R0, #0 
    /*0002f844*/ B           VI_DRV_CheckChnCrop_x2f724
    VI_DRV_CheckChnCrop_x2f848:
    /*0002f848*/ STR         R2, [SP, #12] 
    /*0002f84c*/ MOVW        R2, #0                      @ .LC255 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xef84] 
    /*0002f850*/ MOVT        R2, #0                      @ .LC255 [R_ARM_MOVT_ABS: .rodata.str1.4+0xef84] 
    /*0002f854*/ MOVW        R3, #3957                   @ 0xf75 
    /*0002f858*/ STR         R9, [SP, #8] 
    /*0002f85c*/ STR         R1, [SP, #4] 
    VI_DRV_CheckChnCrop_x2f860:
    /*0002f860*/ STR         R3, [SP] 
    /*0002f864*/ MOV         R1, #16 
    /*0002f868*/ LDR         R3, [PC, #212]              @ 0x000000000002f944 
    /*0002f86c*/ MOV         R0, #3 
    /*0002f870*/ BL          0x000000000002F870          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002f874*/ MVN         R0, #0 
    /*0002f878*/ B           VI_DRV_CheckChnCrop_x2f724
    VI_DRV_CheckChnCrop_x2f87c:
    /*0002f87c*/ MOVW        R2, #0                      @ .LC256 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xefd4] 
    /*0002f880*/ STR         SL, [SP, #12] 
    /*0002f884*/ MOVW        R3, #3963                   @ 0xf7b 
    /*0002f888*/ STR         R0, [SP, #8] 
    /*0002f88c*/ STR         R1, [SP, #4] 
    /*0002f890*/ MOVT        R2, #0                      @ .LC256 [R_ARM_MOVT_ABS: .rodata.str1.4+0xefd4] 
    /*0002f894*/ B           VI_DRV_CheckChnCrop_x2f860
    VI_DRV_CheckChnCrop_x2f898:
    /*0002f898*/ MOVW        R3, #3971                   @ 0xf83 
    /*0002f89c*/ MOVW        R2, #0                      @ .LC257 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf024] 
    /*0002f8a0*/ STR         IP, [SP, #8] 
    /*0002f8a4*/ MOVT        R2, #0                      @ .LC257 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf024] 
    /*0002f8a8*/ STR         R9, [SP, #4] 
    /*0002f8ac*/ STR         R3, [SP] 
    /*0002f8b0*/ B           VI_DRV_CheckChnCrop_x2f830
    VI_DRV_CheckChnCrop_x2f8b4:
    /*0002f8b4*/ MOVW        R3, #3934                   @ 0xf5e 
    /*0002f8b8*/ MOVW        R2, #0                      @ .LC251 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xee54] 
    /*0002f8bc*/ STR         IP, [SP, #4] 
    /*0002f8c0*/ MOVT        R2, #0                      @ .LC251 [R_ARM_MOVT_ABS: .rodata.str1.4+0xee54] 
    /*0002f8c4*/ STR         R3, [SP] 
    /*0002f8c8*/ B           VI_DRV_CheckChnCrop_x2f790
    VI_DRV_CheckChnCrop_x2f8cc:
    /*0002f8cc*/ MOVW        R3, #3939                   @ 0xf63 
    /*0002f8d0*/ MOVW        R2, #0                      @ .LC252 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xee9c] 
    /*0002f8d4*/ STR         LR, [SP, #4] 
    /*0002f8d8*/ MOVT        R2, #0                      @ .LC252 [R_ARM_MOVT_ABS: .rodata.str1.4+0xee9c] 
    /*0002f8dc*/ STR         R3, [SP] 
    /*0002f8e0*/ B           VI_DRV_CheckChnCrop_x2f790
    VI_DRV_CheckChnCrop_x2f8e4:
    /*0002f8e4*/ STR         R2, [SP, #8] 
    /*0002f8e8*/ MOV         R3, #4 
    /*0002f8ec*/ MOVW        R2, #3945                   @ 0xf69 
    /*0002f8f0*/ MOV         R1, #16 
    /*0002f8f4*/ STM         SP, {R2, R3} 
    /*0002f8f8*/ MOV         R0, #3 
    /*0002f8fc*/ MOVW        R2, #0                      @ .LC253 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xeee4] 
    /*0002f900*/ LDR         R3, [PC, #60]               @ 0x000000000002f944 
    /*0002f904*/ MOVT        R2, #0                      @ .LC253 [R_ARM_MOVT_ABS: .rodata.str1.4+0xeee4] 
    /*0002f908*/ BL          0x000000000002F908          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002f90c*/ MVN         R0, #0 
    /*0002f910*/ B           VI_DRV_CheckChnCrop_x2f724
    VI_DRV_CheckChnCrop_x2f914:
    /*0002f914*/ MOVW        R2, #3950                   @ 0xf6e 
    /*0002f918*/ MOV         R3, #4 
    /*0002f91c*/ STR         SL, [SP, #8] 
    /*0002f920*/ MOV         R1, #16 
    /*0002f924*/ STM         SP, {R2, R3} 
    /*0002f928*/ MOV         R0, #3 
    /*0002f92c*/ MOVW        R2, #0                      @ .LC254 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xef34] 
    /*0002f930*/ LDR         R3, [PC, #12]               @ 0x000000000002f944 
    /*0002f934*/ MOVT        R2, #0                      @ .LC254 [R_ARM_MOVT_ABS: .rodata.str1.4+0xef34] 
    /*0002f938*/ BL          0x000000000002F938          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002f93c*/ MVN         R0, #0 
    /*0002f940*/ B           VI_DRV_CheckChnCrop_x2f724
    /*0002f944*/ LDRDEQ      R1, [R0], -IP 
FUNC_END VI_DRV_CheckChnCrop


FUNC_BEGIN VI_DRV_MallocLDCIBuffer
    /*0002f948*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002f94c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002f950*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002f954*/ ADD         R4, R3, R0, LSL #2 
    /*0002f958*/ SUB         SP, SP, #40                 @ 0x28 
    /*0002f95c*/ MOV         R3, #0 
    /*0002f960*/ LDR         R5, [R4, #728]              @ 0x2d8 
    /*0002f964*/ STR         R3, [SP, #28] 
    /*0002f968*/ ADD         R5, R5, #86016              @ 0x15000 
    /*0002f96c*/ STR         R3, [SP, #8] 
    /*0002f970*/ STR         R3, [SP, #24] 
    /*0002f974*/ LDR         R1, [R5, #2144]             @ 0x860 
    /*0002f978*/ STR         R3, [SP, #32] 
    /*0002f97c*/ CMP         R1, R3 
    /*0002f980*/ STR         R3, [SP, #36]               @ 0x24 
    /*0002f984*/ MOVNE       R4, R3 
    /*0002f988*/ BNE         VI_DRV_MallocLDCIBuffer_x2fa40
    /*0002f98c*/ MOV         R6, R0 
    /*0002f990*/ BL          0x000000000002F990          @ VI_DRV_NeedSplit [R_ARM_CALL: .text+0x2f638] 
    /*0002f994*/ CMP         R0, #1 
    /*0002f998*/ BEQ         VI_DRV_MallocLDCIBuffer_x2fa4c
    VI_DRV_MallocLDCIBuffer_x2f99c:
    /*0002f99c*/ MOV         R7, #1 
    VI_DRV_MallocLDCIBuffer_x2f9a0:
    /*0002f9a0*/ MOV         R0, #2 
    /*0002f9a4*/ BL          0x000000000002F9A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002f9a8*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0002f9ac*/ CMP         R3, #0 
    /*0002f9b0*/ BEQ         VI_DRV_MallocLDCIBuffer_x2fad4
    /*0002f9b4*/ MOV         R0, #2 
    /*0002f9b8*/ MOV         R3, #0 
    /*0002f9bc*/ STR         R6, [SP, #16] 
    /*0002f9c0*/ MOV         R8, #16 
    /*0002f9c4*/ STR         R3, [SP, #20] 
    /*0002f9c8*/ STR         R8, [SP, #12] 
    /*0002f9cc*/ BL          0x000000000002F9CC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002f9d0*/ ADD         R1, SP, #8 
    /*0002f9d4*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0002f9d8*/ ADD         R0, SP, #12 
    /*0002f9dc*/ BLX         R3 
    /*0002f9e0*/ SUBS        R4, R0, #0 
    /*0002f9e4*/ BNE         VI_DRV_MallocLDCIBuffer_x2fa7c
    /*0002f9e8*/ MOV         R1, R8 
    /*0002f9ec*/ STR         R6, [SP] 
    /*0002f9f0*/ MOVW        R3, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc6f8] 
    /*0002f9f4*/ MOVW        R2, #0                      @ .LC260 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf124] 
    /*0002f9f8*/ MOVT        R3, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc6f8] 
    /*0002f9fc*/ MOVT        R2, #0                      @ .LC260 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf124] 
    /*0002fa00*/ ADD         R0, SP, #24 
    /*0002fa04*/ BL          0x000000000002FA04          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*0002fa08*/ MOV         R2, #1536                   @ 0x600 
    /*0002fa0c*/ ADD         R1, SP, #24 
    /*0002fa10*/ LDR         R0, [SP, #8] 
    /*0002fa14*/ MUL         R2, R2, R7 
    /*0002fa18*/ BL          0x000000000002FA18          @ CMPI_MmzMalloc [R_ARM_CALL: +0x0] 
    /*0002fa1c*/ CMP         R0, #0 
    /*0002fa20*/ BEQ         VI_DRV_MallocLDCIBuffer_x2faa8
    /*0002fa24*/ CMP         R7, #1 
    /*0002fa28*/ STR         R0, [R5, #2144]             @ 0x860 
    /*0002fa2c*/ MOV         R3, #1536                   @ 0x600 
    /*0002fa30*/ ADDNE       R0, R0, #1536               @ 0x600 
    /*0002fa34*/ STR         R4, [R5, #2140]             @ 0x85c 
    /*0002fa38*/ STR         R0, [R5, #2148]             @ 0x864 
    /*0002fa3c*/ STR         R3, [R5, #2136]             @ 0x858 
    VI_DRV_MallocLDCIBuffer_x2fa40:
    /*0002fa40*/ MOV         R0, R4 
    /*0002fa44*/ ADD         SP, SP, #40                 @ 0x28 
    /*0002fa48*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_MallocLDCIBuffer_x2fa4c:
    /*0002fa4c*/ LDR         R3, [R4, #712]              @ 0x2c8 
    /*0002fa50*/ CMP         R3, #1 
    /*0002fa54*/ MOVEQ       R7, #3 
    /*0002fa58*/ BEQ         VI_DRV_MallocLDCIBuffer_x2f9a0
    /*0002fa5c*/ CMP         R3, #0 
    /*0002fa60*/ BNE         VI_DRV_MallocLDCIBuffer_x2f99c
    /*0002fa64*/ MOV         R0, R6 
    /*0002fa68*/ BL          0x000000000002FA68          @ VI_DRV_NeedSplit [R_ARM_CALL: .text+0x2f638] 
    /*0002fa6c*/ CMP         R0, #1 
    /*0002fa70*/ MOVEQ       R7, #2 
    /*0002fa74*/ BNE         VI_DRV_MallocLDCIBuffer_x2f99c
    /*0002fa78*/ B           VI_DRV_MallocLDCIBuffer_x2f9a0
    VI_DRV_MallocLDCIBuffer_x2fa7c:
    /*0002fa7c*/ MOVW        R3, #2923                   @ 0xb6b 
    /*0002fa80*/ MOV         R1, R8 
    /*0002fa84*/ STR         R3, [SP] 
    /*0002fa88*/ MOVW        R2, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc6c8] 
    /*0002fa8c*/ LDR         R3, [PC, #108]              @ 0x000000000002fb00 
    /*0002fa90*/ MOVT        R2, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc6c8] 
    /*0002fa94*/ MOV         R0, #3 
    /*0002fa98*/ MOVW        R4, #32784                  @ 0x8010 
    /*0002fa9c*/ BL          0x000000000002FA9C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002faa0*/ MOVT        R4, #40976                  @ 0xa010 
    /*0002faa4*/ B           VI_DRV_MallocLDCIBuffer_x2fa40
    VI_DRV_MallocLDCIBuffer_x2faa8:
    /*0002faa8*/ MOVW        R3, #2932                   @ 0xb74 
    /*0002faac*/ MOV         R1, R8 
    /*0002fab0*/ STR         R3, [SP] 
    /*0002fab4*/ MOVW        R2, #0                      @ .LC261 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf138] 
    /*0002fab8*/ LDR         R3, [PC, #64]               @ 0x000000000002fb00 
    /*0002fabc*/ MOVT        R2, #0                      @ .LC261 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf138] 
    /*0002fac0*/ MOV         R0, #3 
    /*0002fac4*/ MOVW        R4, #32780                  @ 0x800c 
    /*0002fac8*/ BL          0x000000000002FAC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002facc*/ MOVT        R4, #40976                  @ 0xa010 
    /*0002fad0*/ B           VI_DRV_MallocLDCIBuffer_x2fa40
    VI_DRV_MallocLDCIBuffer_x2fad4:
    /*0002fad4*/ MOVW        R3, #2913                   @ 0xb61 
    /*0002fad8*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc698] 
    /*0002fadc*/ STR         R3, [SP] 
    /*0002fae0*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc698] 
    /*0002fae4*/ LDR         R3, [PC, #20]               @ 0x000000000002fb00 
    /*0002fae8*/ MOV         R1, #16 
    /*0002faec*/ MOV         R0, #3 
    /*0002faf0*/ MOVW        R4, #32784                  @ 0x8010 
    /*0002faf4*/ BL          0x000000000002FAF4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002faf8*/ MOVT        R4, #40976                  @ 0xa010 
    /*0002fafc*/ B           VI_DRV_MallocLDCIBuffer_x2fa40
    /*0002fb00*/ STRDEQ      R1, [R0], -R0 
FUNC_END VI_DRV_MallocLDCIBuffer


FUNC_BEGIN VI_DRV_MallocModelBuf
    /*0002fb04*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002fb08*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002fb0c*/ ADD         R2, R3, R0, LSL #2 
    /*0002fb10*/ MOV         R3, #0 
    /*0002fb14*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002fb18*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0002fb1c*/ LDR         R2, [R2, #712]              @ 0x2c8 
    /*0002fb20*/ MOV         R8, #0 
    /*0002fb24*/ MOV         R9, #0 
    /*0002fb28*/ MOV         R5, R0 
    /*0002fb2c*/ CMP         R2, #1 
    /*0002fb30*/ STRD        R8, [SP, #16] 
    /*0002fb34*/ MOV         R7, R1 
    /*0002fb38*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0002fb3c*/ STR         R3, [SP, #8] 
    /*0002fb40*/ MOVEQ       R8, #3 
    /*0002fb44*/ STR         R3, [SP, #12] 
    /*0002fb48*/ STR         R3, [SP, #40]               @ 0x28 
    /*0002fb4c*/ STR         R3, [SP, #48]               @ 0x30 
    /*0002fb50*/ STR         R3, [SP, #52]               @ 0x34 
    /*0002fb54*/ BEQ         VI_DRV_MallocModelBuf_x2fb64
    /*0002fb58*/ CMP         R2, R3 
    /*0002fb5c*/ BEQ         VI_DRV_MallocModelBuf_x2fc24
    VI_DRV_MallocModelBuf_x2fb60:
    /*0002fb60*/ MOV         R8, #1 
    VI_DRV_MallocModelBuf_x2fb64:
    /*0002fb64*/ MOV         R0, #2 
    /*0002fb68*/ BL          0x000000000002FB68          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002fb6c*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0002fb70*/ CMP         R3, #0 
    /*0002fb74*/ BEQ         VI_DRV_MallocModelBuf_x2fcec
    /*0002fb78*/ MOV         R0, #2 
    /*0002fb7c*/ MOV         R3, #0 
    /*0002fb80*/ STR         R5, [SP, #32] 
    /*0002fb84*/ MOV         R6, #16 
    /*0002fb88*/ STR         R3, [SP, #36]               @ 0x24 
    /*0002fb8c*/ MOV         R4, #6400                   @ 0x1900 
    /*0002fb90*/ STR         R6, [SP, #28] 
    /*0002fb94*/ BL          0x000000000002FB94          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002fb98*/ ADD         R1, SP, #12 
    /*0002fb9c*/ MUL         R4, R4, R8 
    /*0002fba0*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0002fba4*/ ADD         R0, SP, #28 
    /*0002fba8*/ BLX         R3 
    /*0002fbac*/ CMP         R0, #0 
    /*0002fbb0*/ BNE         VI_DRV_MallocModelBuf_x2fcc4
    /*0002fbb4*/ STR         R5, [SP] 
    /*0002fbb8*/ MOV         R1, R6 
    /*0002fbbc*/ MOVW        R3, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc6f8] 
    /*0002fbc0*/ MOVW        R2, #0                      @ .LC263 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf1a0] 
    /*0002fbc4*/ MOVT        R3, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc6f8] 
    /*0002fbc8*/ MOVT        R2, #0                      @ .LC263 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf1a0] 
    /*0002fbcc*/ ADD         R0, SP, #40                 @ 0x28 
    /*0002fbd0*/ BL          0x000000000002FBD0          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*0002fbd4*/ LDR         R0, [SP, #12] 
    /*0002fbd8*/ STR         R4, [SP] 
    /*0002fbdc*/ ADD         R1, SP, #40                 @ 0x28 
    /*0002fbe0*/ ADD         R3, SP, #8 
    /*0002fbe4*/ ADD         R2, SP, #16 
    /*0002fbe8*/ BL          0x000000000002FBE8          @ CMPI_MmzMallocNocache [R_ARM_CALL: +0x0] 
    /*0002fbec*/ SUBS        R5, R0, #0 
    /*0002fbf0*/ BEQ         VI_DRV_MallocModelBuf_x2fc38
    /*0002fbf4*/ MOVW        R3, #3233                   @ 0xca1 
    /*0002fbf8*/ MOVW        R2, #0                      @ .LC264 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf1b0] 
    /*0002fbfc*/ STR         R3, [SP] 
    /*0002fc00*/ MOV         R1, R6 
    /*0002fc04*/ MOVT        R2, #0                      @ .LC264 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf1b0] 
    /*0002fc08*/ LDR         R3, [PC, #260]              @ 0x000000000002fd14 
    /*0002fc0c*/ MOV         R0, #3 
    /*0002fc10*/ MVN         R5, #0 
    /*0002fc14*/ BL          0x000000000002FC14          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_MallocModelBuf_x2fc18:
    /*0002fc18*/ MOV         R0, R5 
    /*0002fc1c*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0002fc20*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_MallocModelBuf_x2fc24:
    /*0002fc24*/ BL          0x000000000002FC24          @ VI_DRV_NeedSplit [R_ARM_CALL: .text+0x2f638] 
    /*0002fc28*/ CMP         R0, #1 
    /*0002fc2c*/ MOVEQ       R8, #2 
    /*0002fc30*/ BNE         VI_DRV_MallocModelBuf_x2fb60
    /*0002fc34*/ B           VI_DRV_MallocModelBuf_x2fb64
    VI_DRV_MallocModelBuf_x2fc38:
    /*0002fc38*/ LDRD        SL, [SP, #16] 
    /*0002fc3c*/ MOV         R2, R4 
    /*0002fc40*/ LDR         R0, [SP, #8] 
    /*0002fc44*/ MOV         R1, R5 
    /*0002fc48*/ STRD        SL, [R7, #80]               @ 0x50 
    /*0002fc4c*/ STR         R0, [R7, #88]               @ 0x58 
    /*0002fc50*/ BL          0x000000000002FC50          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0002fc54*/ LDRD        R2, [SP, #16] 
    /*0002fc58*/ LDR         IP, [SP, #8] 
    /*0002fc5c*/ ADDS        R0, R2, #255                @ 0xff 
    /*0002fc60*/ STR         R5, [R7] 
    /*0002fc64*/ ADC         R1, R3, #0 
    /*0002fc68*/ SUBS        R2, IP, R2 
    /*0002fc6c*/ CMP         R8, #1 
    /*0002fc70*/ BIC         R0, R0, #255                @ 0xff 
    /*0002fc74*/ ADD         R3, R2, R0 
    /*0002fc78*/ STR         R5, [R7, #72]               @ 0x48 
    /*0002fc7c*/ STRD        R0, [R7, #8] 
    /*0002fc80*/ STR         R3, [R7, #16] 
    /*0002fc84*/ BEQ         VI_DRV_MallocModelBuf_x2fc18
    /*0002fc88*/ ADDS        SL, R0, #6144               @ 0x1800 
    /*0002fc8c*/ ADD         R2, R3, #6144               @ 0x1800 
    /*0002fc90*/ ADC         FP, R1, #0 
    /*0002fc94*/ CMP         R8, #3 
    /*0002fc98*/ STR         R5, [R7, #24] 
    /*0002fc9c*/ STRD        SL, [R7, #32] 
    /*0002fca0*/ STR         R2, [R7, #40]               @ 0x28 
    /*0002fca4*/ BNE         VI_DRV_MallocModelBuf_x2fc18
    /*0002fca8*/ ADDS        R0, R0, #12288              @ 0x3000 
    /*0002fcac*/ ADD         R3, R3, #12288              @ 0x3000 
    /*0002fcb0*/ ADC         R1, R1, #0 
    /*0002fcb4*/ STR         R3, [R7, #64]               @ 0x40 
    /*0002fcb8*/ STRD        R0, [R7, #56]               @ 0x38 
    /*0002fcbc*/ STR         R5, [R7, #48]               @ 0x30 
    /*0002fcc0*/ B           VI_DRV_MallocModelBuf_x2fc18
    VI_DRV_MallocModelBuf_x2fcc4:
    /*0002fcc4*/ MOVW        R3, #3223                   @ 0xc97 
    /*0002fcc8*/ MOV         R1, R6 
    /*0002fccc*/ STR         R3, [SP] 
    /*0002fcd0*/ MOVW        R2, #0                      @ .LC262 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf170] 
    /*0002fcd4*/ LDR         R3, [PC, #56]               @ 0x000000000002fd14 
    /*0002fcd8*/ MOVT        R2, #0                      @ .LC262 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf170] 
    /*0002fcdc*/ MOV         R0, #3 
    /*0002fce0*/ MVN         R5, #0 
    /*0002fce4*/ BL          0x000000000002FCE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002fce8*/ B           VI_DRV_MallocModelBuf_x2fc18
    VI_DRV_MallocModelBuf_x2fcec:
    /*0002fcec*/ MOVW        R3, #3211                   @ 0xc8b 
    /*0002fcf0*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc698] 
    /*0002fcf4*/ STR         R3, [SP] 
    /*0002fcf8*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc698] 
    /*0002fcfc*/ LDR         R3, [PC, #16]               @ 0x000000000002fd14 
    /*0002fd00*/ MOV         R1, #16 
    /*0002fd04*/ MOV         R0, #3 
    /*0002fd08*/ MVN         R5, #0 
    /*0002fd0c*/ BL          0x000000000002FD0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002fd10*/ B           VI_DRV_MallocModelBuf_x2fc18
    /*0002fd14*/ ANDEQ       R1, R0, R8, LSL #26 
FUNC_END VI_DRV_MallocModelBuf


FUNC_BEGIN VI_DRV_MallocBeSttBuffer
    /*0002fd18*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002fd1c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002fd20*/ ADD         R3, R3, R0, LSL #2 
    /*0002fd24*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002fd28*/ SUB         SP, SP, #84                 @ 0x54 
    /*0002fd2c*/ LDR         R7, [R3, #728]              @ 0x2d8 
    /*0002fd30*/ MOV         R6, #0 
    /*0002fd34*/ STR         R6, [SP, #68]               @ 0x44 
    /*0002fd38*/ ADD         R4, R7, #87040              @ 0x15400 
    /*0002fd3c*/ STR         R6, [SP, #36]               @ 0x24 
    /*0002fd40*/ ADD         R1, R4, #464                @ 0x1d0 
    /*0002fd44*/ STR         R6, [SP, #64]               @ 0x40 
    /*0002fd48*/ STR         R6, [SP, #72]               @ 0x48 
    /*0002fd4c*/ LDRD        R8, [R1, #-8] 
    /*0002fd50*/ STR         R6, [SP, #76]               @ 0x4c 
    /*0002fd54*/ ORRS        R2, R8, R9 
    /*0002fd58*/ STRNE       R6, [SP, #16] 
    /*0002fd5c*/ BNE         VI_DRV_MallocBeSttBuffer_x2feb8
    /*0002fd60*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*0002fd64*/ MOV         R5, R0 
    /*0002fd68*/ CMP         R3, #1 
    /*0002fd6c*/ BEQ         VI_DRV_MallocBeSttBuffer_x2fec4
    /*0002fd70*/ CMP         R3, #0 
    /*0002fd74*/ BEQ         VI_DRV_MallocBeSttBuffer_x2fecc
    VI_DRV_MallocBeSttBuffer_x2fd78:
    /*0002fd78*/ MOV         FP, #1 
    VI_DRV_MallocBeSttBuffer_x2fd7c:
    /*0002fd7c*/ MOV         R0, #2 
    /*0002fd80*/ BL          0x000000000002FD80          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002fd84*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0002fd88*/ CMP         R3, #0 
    /*0002fd8c*/ BEQ         VI_DRV_MallocBeSttBuffer_x2ff3c
    /*0002fd90*/ MOV         R0, #2 
    /*0002fd94*/ MOV         R3, #0 
    /*0002fd98*/ STR         R5, [SP, #56]               @ 0x38 
    /*0002fd9c*/ MOV         R8, #16 
    /*0002fda0*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0002fda4*/ STR         R8, [SP, #52]               @ 0x34 
    /*0002fda8*/ BL          0x000000000002FDA8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002fdac*/ ADD         R1, SP, #36                 @ 0x24 
    /*0002fdb0*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0002fdb4*/ ADD         R0, SP, #52                 @ 0x34 
    /*0002fdb8*/ BLX         R3 
    /*0002fdbc*/ CMP         R0, #0 
    /*0002fdc0*/ BNE         VI_DRV_MallocBeSttBuffer_x2fee0
    /*0002fdc4*/ STR         R5, [SP] 
    /*0002fdc8*/ MOVW        R5, #18592                  @ 0x48a0 
    /*0002fdcc*/ MOVT        R5, #1 
    /*0002fdd0*/ MOV         R1, R8 
    /*0002fdd4*/ MOVW        R3, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc6f8] 
    /*0002fdd8*/ MOVW        R2, #0                      @ .LC265 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf1ec] 
    /*0002fddc*/ MUL         R5, R5, FP 
    /*0002fde0*/ MOVT        R3, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc6f8] 
    /*0002fde4*/ MOVT        R2, #0                      @ .LC265 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf1ec] 
    /*0002fde8*/ ADD         R0, SP, #64                 @ 0x40 
    /*0002fdec*/ BL          0x000000000002FDEC          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*0002fdf0*/ ADD         R3, SP, #32 
    /*0002fdf4*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0002fdf8*/ ADD         R1, SP, #64                 @ 0x40 
    /*0002fdfc*/ ADD         R2, SP, #40                 @ 0x28 
    /*0002fe00*/ STR         R5, [SP] 
    /*0002fe04*/ BL          0x000000000002FE04          @ CMPI_MmzMallocCached [R_ARM_CALL: +0x0] 
    /*0002fe08*/ SUBS        R3, R0, #0 
    /*0002fe0c*/ STR         R3, [SP, #16] 
    /*0002fe10*/ BNE         VI_DRV_MallocBeSttBuffer_x2ff18
    /*0002fe14*/ LDR         R6, [SP, #16] 
    /*0002fe18*/ ADD         R3, R7, #86016              @ 0x15000 
    /*0002fe1c*/ ADD         SL, R4, #448                @ 0x1c0 
    /*0002fe20*/ MOVW        R7, #42064                  @ 0xa450 
    /*0002fe24*/ ADD         R2, R4, #544                @ 0x220 
    /*0002fe28*/ STR         R3, [SP, #28] 
    /*0002fe2c*/ STR         R2, [SP, #24] 
    /*0002fe30*/ STR         R5, [R3, #1568]             @ 0x620 
    VI_DRV_MallocBeSttBuffer_x2fe34:
    /*0002fe34*/ MUL         R5, R7, R6 
    /*0002fe38*/ ADD         R9, SL, #28 
    /*0002fe3c*/ MOV         R8, SL 
    /*0002fe40*/ MOV         R4, #0 
    /*0002fe44*/ STR         SL, [SP, #20] 
    /*0002fe48*/ STR         FP, [SP, #12] 
    VI_DRV_MallocBeSttBuffer_x2fe4c:
    /*0002fe4c*/ LDRD        R0, [SP, #40]               @ 0x28 
    /*0002fe50*/ ADD         R3, R4, R6 
    /*0002fe54*/ MOVW        R2, #42064                  @ 0xa450 
    /*0002fe58*/ ADD         R4, R4, #1 
    /*0002fe5c*/ UMLAL       R0, R1, R7, R3 
    /*0002fe60*/ MOV         SL, R0 
    /*0002fe64*/ MOV         FP, R1 
    /*0002fe68*/ STRD        SL, [R8, #8]! 
    /*0002fe6c*/ MVN         R1, #0 
    /*0002fe70*/ LDR         R0, [SP, #32] 
    /*0002fe74*/ ADD         R0, R0, R5 
    /*0002fe78*/ STR         R0, [R9, #4]! 
    /*0002fe7c*/ BL          0x000000000002FE7C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0002fe80*/ LDR         R3, [SP, #12] 
    /*0002fe84*/ ADD         R5, R5, R7 
    /*0002fe88*/ CMP         R3, R4 
    /*0002fe8c*/ BHI         VI_DRV_MallocBeSttBuffer_x2fe4c
    /*0002fe90*/ LDR         SL, [SP, #20] 
    /*0002fe94*/ MOV         FP, R3 
    /*0002fe98*/ ADD         R6, R6, R3 
    /*0002fe9c*/ LDR         R3, [SP, #24] 
    /*0002fea0*/ ADD         SL, SL, #48                 @ 0x30 
    /*0002fea4*/ CMP         SL, R3 
    /*0002fea8*/ BNE         VI_DRV_MallocBeSttBuffer_x2fe34
    /*0002feac*/ LDR         R2, [SP, #28] 
    /*0002feb0*/ MOV         R3, #0 
    /*0002feb4*/ STR         R3, [R2, #1464]             @ 0x5b8 
    VI_DRV_MallocBeSttBuffer_x2feb8:
    /*0002feb8*/ LDR         R0, [SP, #16] 
    /*0002febc*/ ADD         SP, SP, #84                 @ 0x54 
    /*0002fec0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_MallocBeSttBuffer_x2fec4:
    /*0002fec4*/ MOV         FP, #3 
    /*0002fec8*/ B           VI_DRV_MallocBeSttBuffer_x2fd7c
    VI_DRV_MallocBeSttBuffer_x2fecc:
    /*0002fecc*/ BL          0x000000000002FECC          @ VI_DRV_NeedSplit [R_ARM_CALL: .text+0x2f638] 
    /*0002fed0*/ CMP         R0, #1 
    /*0002fed4*/ MOVEQ       FP, #2 
    /*0002fed8*/ BNE         VI_DRV_MallocBeSttBuffer_x2fd78
    /*0002fedc*/ B           VI_DRV_MallocBeSttBuffer_x2fd7c
    VI_DRV_MallocBeSttBuffer_x2fee0:
    /*0002fee0*/ MOV         R3, #2752                   @ 0xac0 
    /*0002fee4*/ STR         R3, [SP] 
    /*0002fee8*/ LDR         R3, [PC, #112]              @ 0x000000000002ff60 
    /*0002feec*/ MOVW        R2, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc6c8] 
    /*0002fef0*/ MOVT        R2, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc6c8] 
    /*0002fef4*/ MOV         R1, R8 
    /*0002fef8*/ MOV         R0, #3 
    /*0002fefc*/ MOVW        IP, #32784                  @ 0x8010 
    VI_DRV_MallocBeSttBuffer_x2ff00:
    /*0002ff00*/ MOV         R4, IP 
    /*0002ff04*/ BL          0x000000000002FF04          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002ff08*/ MOV         IP, R4 
    /*0002ff0c*/ MOVT        IP, #40976                  @ 0xa010 
    /*0002ff10*/ STR         IP, [SP, #16] 
    /*0002ff14*/ B           VI_DRV_MallocBeSttBuffer_x2feb8
    VI_DRV_MallocBeSttBuffer_x2ff18:
    /*0002ff18*/ MOVW        R3, #2763                   @ 0xacb 
    /*0002ff1c*/ MOVW        R2, #0                      @ .LC266 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf1f8] 
    /*0002ff20*/ STR         R3, [SP] 
    /*0002ff24*/ MOV         R1, R8 
    /*0002ff28*/ MOVT        R2, #0                      @ .LC266 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf1f8] 
    /*0002ff2c*/ LDR         R3, [PC, #44]               @ 0x000000000002ff60 
    /*0002ff30*/ MOV         R0, #3 
    /*0002ff34*/ MOVW        IP, #32780                  @ 0x800c 
    /*0002ff38*/ B           VI_DRV_MallocBeSttBuffer_x2ff00
    VI_DRV_MallocBeSttBuffer_x2ff3c:
    /*0002ff3c*/ MOVW        R3, #2742                   @ 0xab6 
    /*0002ff40*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc698] 
    /*0002ff44*/ STR         R3, [SP] 
    /*0002ff48*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc698] 
    /*0002ff4c*/ LDR         R3, [PC, #12]               @ 0x000000000002ff60 
    /*0002ff50*/ MOV         R1, #16 
    /*0002ff54*/ MOV         R0, #3 
    /*0002ff58*/ MOVW        IP, #32784                  @ 0x8010 
    /*0002ff5c*/ B           VI_DRV_MallocBeSttBuffer_x2ff00
    /*0002ff60*/ ANDEQ       R1, R0, R0, LSR #26 
FUNC_END VI_DRV_MallocBeSttBuffer


FUNC_BEGIN VI_DRV_MallocImageProcessBuffer
    /*0002ff64*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ff68*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002ff6c*/ ADD         R3, R3, R0, LSL #2 
    /*0002ff70*/ PUSH        {R4, R5, R6, LR} 
    /*0002ff74*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*0002ff78*/ CMP         R3, #1 
    /*0002ff7c*/ BLS         VI_DRV_MallocImageProcessBuffer_x2ff8c
    VI_DRV_MallocImageProcessBuffer_x2ff80:
    /*0002ff80*/ MOV         R5, #0 
    VI_DRV_MallocImageProcessBuffer_x2ff84:
    /*0002ff84*/ MOV         R0, R5 
    /*0002ff88*/ POP         {R4, R5, R6, PC} 
    VI_DRV_MallocImageProcessBuffer_x2ff8c:
    /*0002ff8c*/ MOV         R4, R0 
    /*0002ff90*/ BL          0x000000000002FF90          @ VI_DRV_MallocBeSttBuffer [R_ARM_CALL: .text+0x2fd18] 
    /*0002ff94*/ SUBS        R5, R0, #0 
    /*0002ff98*/ BNE         VI_DRV_MallocImageProcessBuffer_x2ff84
    /*0002ff9c*/ MOV         R0, R4 
    /*0002ffa0*/ BL          0x000000000002FFA0          @ VI_DRV_MallocDRCBuffer [R_ARM_CALL: .text+0x2885c] 
    /*0002ffa4*/ SUBS        R5, R0, #0 
    /*0002ffa8*/ BNE         VI_DRV_MallocImageProcessBuffer_x2ffc4
    /*0002ffac*/ MOV         R0, R4 
    /*0002ffb0*/ BL          0x000000000002FFB0          @ VI_DRV_MallocLDCIBuffer [R_ARM_CALL: .text+0x2f948] 
    /*0002ffb4*/ SUBS        R5, R0, #0 
    /*0002ffb8*/ BEQ         VI_DRV_MallocImageProcessBuffer_x2ff80
    /*0002ffbc*/ MOV         R0, R4 
    /*0002ffc0*/ BL          0x000000000002FFC0          @ VI_DRV_FreeDRCBuffer [R_ARM_CALL: .text+0x289e8] 
    VI_DRV_MallocImageProcessBuffer_x2ffc4:
    /*0002ffc4*/ MOV         R0, R4 
    /*0002ffc8*/ BL          0x000000000002FFC8          @ VI_DRV_FreeBeSttBuffer [R_ARM_CALL: .text+0x2880c] 
    /*0002ffcc*/ B           VI_DRV_MallocImageProcessBuffer_x2ff84
FUNC_END VI_DRV_MallocImageProcessBuffer


FUNC_BEGIN VI_DRV_GetSplitNum
    /*0002ffd0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0002ffd4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0002ffd8*/ ADD         R3, R3, R0, LSL #2 
    /*0002ffdc*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*0002ffe0*/ CMP         R3, #1 
    /*0002ffe4*/ BEQ         VI_DRV_GetSplitNum_x30010
    /*0002ffe8*/ CMP         R3, #0 
    /*0002ffec*/ BEQ         VI_DRV_GetSplitNum_x2fff8
    /*0002fff0*/ MOV         R0, #1 
    /*0002fff4*/ BX          LR 
    VI_DRV_GetSplitNum_x2fff8:
    /*0002fff8*/ PUSH        {R4, LR} 
    /*0002fffc*/ BL          0x000000000002FFFC          @ VI_DRV_NeedSplit [R_ARM_CALL: .text+0x2f638] 
    /*00030000*/ CMP         R0, #1 
    /*00030004*/ BEQ         VI_DRV_GetSplitNum_x30018
    /*00030008*/ MOV         R0, #1 
    /*0003000c*/ POP         {R4, PC} 
    VI_DRV_GetSplitNum_x30010:
    /*00030010*/ MOV         R0, #3 
    /*00030014*/ BX          LR 
    VI_DRV_GetSplitNum_x30018:
    /*00030018*/ MOV         R0, #2 
    /*0003001c*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetSplitNum


FUNC_BEGIN VI_DRV_GetActualSplitNum
    /*00030020*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00030024*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00030028*/ ADD         R0, R3, R0, LSL #2 
    /*0003002c*/ PUSH        {R4, LR} 
    /*00030030*/ SUB         SP, SP, #24 
    /*00030034*/ LDR         R3, [R0, #712]              @ 0x2c8 
    /*00030038*/ LDR         R4, [R0, #728]              @ 0x2d8 
    /*0003003c*/ CMP         R3, #0 
    /*00030040*/ BEQ         VI_DRV_GetActualSplitNum_x30058
    /*00030044*/ CMP         R3, #1 
    /*00030048*/ MOVNE       R0, #1 
    /*0003004c*/ BEQ         VI_DRV_GetActualSplitNum_x30098
    /*00030050*/ ADD         SP, SP, #24 
    /*00030054*/ POP         {R4, PC} 
    VI_DRV_GetActualSplitNum_x30058:
    /*00030058*/ LDR         R0, [R4, #320]              @ 0x140 
    /*0003005c*/ ADD         R4, R4, #65536              @ 0x10000 
    /*00030060*/ BL          0x0000000000030060          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*00030064*/ LDR         R3, [R4, #3008]             @ 0xbc0 
    /*00030068*/ SUB         R3, R3, #1 
    /*0003006c*/ CMP         R0, #1 
    /*00030070*/ MOVEQ       R4, #2688                   @ 0xa80 
    /*00030074*/ MOVNE       R4, #4096                   @ 0x1000 
    /*00030078*/ MOV         R1, R4 
    /*0003007c*/ ADD         R0, R3, R4 
    /*00030080*/ BL          0x0000000000030080          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00030084*/ MOV         R1, R4 
    /*00030088*/ MUL         R0, R4, R0 
    /*0003008c*/ BL          0x000000000003008C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00030090*/ ADD         SP, SP, #24 
    /*00030094*/ POP         {R4, PC} 
    VI_DRV_GetActualSplitNum_x30098:
    /*00030098*/ ADD         R4, R4, #65536              @ 0x10000 
    /*0003009c*/ MOV         R3, #104                    @ 0x68 
    /*000300a0*/ STR         R3, [SP, #8] 
    /*000300a4*/ LDR         R3, [R4, #3008]             @ 0xbc0 
    /*000300a8*/ LDR         R1, [R4, #3064]             @ 0xbf8 
    /*000300ac*/ LDR         R2, [R4, #3088]             @ 0xc10 
    /*000300b0*/ MOV         R0, R3 
    /*000300b4*/ STR         R3, [SP, #4] 
    /*000300b8*/ STR         R1, [SP, #20] 
    /*000300bc*/ STR         R2, [SP, #16] 
    /*000300c0*/ BL          0x00000000000300C0          @ GetSplitLineBufferSize [R_ARM_CALL: .text+0x395f8] 
    /*000300c4*/ MOV         R1, #0 
    /*000300c8*/ STR         R0, [SP, #12] 
    /*000300cc*/ ADD         R0, SP, #4 
    /*000300d0*/ BL          0x00000000000300D0          @ VpssSplitNum [R_ARM_CALL: .text+0x395dc] 
    /*000300d4*/ ADD         SP, SP, #24 
    /*000300d8*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetActualSplitNum


FUNC_BEGIN VI_DRV_SetAfifoCrop
    /*000300dc*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000300e0*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000300e4*/ ADD         R3, R2, R0, LSL #2 
    /*000300e8*/ MOV         IP, #0 
    /*000300ec*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000300f0*/ MOV         LR, #356                    @ 0x164 
    /*000300f4*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*000300f8*/ SUB         SP, SP, #20 
    /*000300fc*/ MOV         R1, SP 
    /*00030100*/ STR         IP, [SP] 
    /*00030104*/ LDR         R3, [R3, #8] 
    /*00030108*/ STR         IP, [SP, #4] 
    /*0003010c*/ MLA         R3, LR, R3, R2 
    /*00030110*/ LDR         R2, [R3, #144]              @ 0x90 
    /*00030114*/ LDR         R3, [R3, #148]              @ 0x94 
    /*00030118*/ STR         R2, [SP, #8] 
    /*0003011c*/ STR         R3, [SP, #12] 
    /*00030120*/ BL          0x0000000000030120          @ VI_HAL_SetAfifoCrop [R_ARM_CALL: .text+0x36bc4] 
    /*00030124*/ ADD         SP, SP, #20 
    /*00030128*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_SetAfifoCrop


FUNC_BEGIN VI_DRV_StartWch
    /*0003012c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00030130*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00030134*/ ADD         R3, R3, R0, LSL #2 
    /*00030138*/ MOV         R1, #1 
    /*0003013c*/ PUSH        {R4, R5, R6, LR} 
    /*00030140*/ MOV         R4, R0 
    /*00030144*/ LDR         R5, [R3, #728]              @ 0x2d8 
    /*00030148*/ BL          0x0000000000030148          @ VI_HAL_SetWchEn [R_ARM_CALL: .text+0x35850] 
    /*0003014c*/ MOV         R0, R4 
    /*00030150*/ MOV         R1, #0 
    /*00030154*/ BL          0x0000000000030154          @ VI_HAL_SetWchRegNewerMode [R_ARM_CALL: .text+0x3588c] 
    /*00030158*/ ADD         R5, R5, #86016              @ 0x15000 
    /*0003015c*/ MOV         R2, #0 
    /*00030160*/ MOV         R0, R4 
    /*00030164*/ MOV         R1, R2 
    /*00030168*/ BL          0x0000000000030168          @ VI_HAL_SetWchUV2C [R_ARM_CALL: .text+0x358d4] 
    /*0003016c*/ LDR         R1, [R5, #2804]             @ 0xaf4 
    /*00030170*/ CMP         R1, #0 
    /*00030174*/ MOVEQ       R1, #1 
    /*00030178*/ MOVEQ       R5, R1 
    /*0003017c*/ BEQ         VI_DRV_StartWch_x3019c
    /*00030180*/ CMP         R1, #1 
    /*00030184*/ MOVWEQ      R5, #32769                  @ 0x8001 
    /*00030188*/ BEQ         VI_DRV_StartWch_x3019c
    /*0003018c*/ CMP         R1, #2 
    /*00030190*/ MOV         R1, #0 
    /*00030194*/ MOVWEQ      R5, #32771                  @ 0x8003 
    /*00030198*/ MOVNE       R5, R1 
    VI_DRV_StartWch_x3019c:
    /*0003019c*/ MOV         R0, R4 
    /*000301a0*/ BL          0x00000000000301A0          @ VI_HAL_SetWchFinishMode [R_ARM_CALL: .text+0x358b0] 
    /*000301a4*/ MOV         R1, R5 
    /*000301a8*/ MOV         R0, R4 
    /*000301ac*/ BL          0x00000000000301AC          @ VI_HAL_SetWchMask [R_ARM_CALL: .text+0x35960] 
    /*000301b0*/ MOV         R0, R4 
    /*000301b4*/ BL          0x00000000000301B4          @ VI_HAL_SetWchRegNewer [R_ARM_CALL: .text+0x35c28] 
    /*000301b8*/ MOV         R0, R4 
    /*000301bc*/ POP         {R4, R5, R6, LR} 
    VI_DRV_StartWch_x301c0:
    /*000301c0*/ B           VI_DRV_StartWch_x301c0      @ VI_HAL_SetWchUpdate [R_ARM_JUMP24: .text+0x35c4c] 
FUNC_END VI_DRV_StartWch


FUNC_BEGIN VI_DRV_DisableWch
    /*000301c4*/ PUSH        {R4, LR} 
    /*000301c8*/ MOV         R1, #0 
    /*000301cc*/ MOV         R4, R0 
    /*000301d0*/ BL          0x00000000000301D0          @ VI_HAL_SetWchEn [R_ARM_CALL: .text+0x35850] 
    /*000301d4*/ MOV         R0, R4 
    /*000301d8*/ BL          0x00000000000301D8          @ VI_HAL_SetWchRegNewer [R_ARM_CALL: .text+0x35c28] 
    /*000301dc*/ MOV         R0, R4 
    /*000301e0*/ POP         {R4, LR} 
    VI_DRV_DisableWch_x301e4:
    /*000301e4*/ B           VI_DRV_DisableWch_x301e4    @ VI_HAL_SetWchUpdate [R_ARM_JUMP24: .text+0x35c4c] 
FUNC_END VI_DRV_DisableWch


FUNC_BEGIN VI_DRV_StopWch
    /*000301e8*/ MOV         R1, #0 
    VI_DRV_StopWch_x301ec:
    /*000301ec*/ B           VI_DRV_StopWch_x301ec       @ VI_HAL_SetWchMask [R_ARM_JUMP24: .text+0x35960] 
FUNC_END VI_DRV_StopWch


FUNC_BEGIN VI_DRV_StartProc
    /*000301f0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000301f4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000301f8*/ ADD         R0, R3, R0, LSL #2 
    /*000301fc*/ LDR         R3, [R0, #712]              @ 0x2c8 
    /*00030200*/ SUB         R3, R3, #2 
    /*00030204*/ CMP         R3, #1 
    /*00030208*/ BXHI        LR 
    /*0003020c*/ B           0x00000000000251B8 
FUNC_END VI_DRV_StartProc


FUNC_BEGIN VI_DRV_StopProc
    /*00030210*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00030214*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00030218*/ ADD         R0, R3, R0, LSL #2 
    /*0003021c*/ LDR         R3, [R0, #712]              @ 0x2c8 
    /*00030220*/ SUB         R3, R3, #2 
    /*00030224*/ CMP         R3, #1 
    /*00030228*/ BXHI        LR 
    /*0003022c*/ B           0x00000000000251F8 
FUNC_END VI_DRV_StopProc


FUNC_BEGIN VI_DRV_StartPipe
    /*00030230*/ CMP         R0, #3 
    /*00030234*/ BXHI        LR 
    /*00030238*/ PUSH        {R4, LR} 
    /*0003023c*/ MOV         R4, R0 
    /*00030240*/ BL          0x0000000000030240          @ VI_DRV_SetAfifoCrop [R_ARM_CALL: .text+0x300dc] 
    /*00030244*/ MOV         R0, R4 
    /*00030248*/ BL          0x0000000000030248          @ VI_DRV_StartWch [R_ARM_CALL: .text+0x3012c] 
    /*0003024c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00030250*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00030254*/ ADD         R3, R3, R4, LSL #2 
    /*00030258*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*0003025c*/ SUB         R3, R3, #2 
    /*00030260*/ CMP         R3, #1 
    /*00030264*/ POPHI       {R4, PC} 
    /*00030268*/ POP         {R4, LR} 
    /*0003026c*/ B           0x00000000000251B8 
FUNC_END VI_DRV_StartPipe


FUNC_BEGIN VI_DRV_StopPipe
    /*00030270*/ CMP         R0, #3 
    /*00030274*/ BXHI        LR 
    /*00030278*/ PUSH        {R4, LR} 
    /*0003027c*/ MOV         R1, #0 
    /*00030280*/ MOV         R4, R0 
    /*00030284*/ BL          0x0000000000030284          @ VI_HAL_SetWchMask [R_ARM_CALL: .text+0x35960] 
    /*00030288*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0003028c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00030290*/ ADD         R3, R3, R4, LSL #2 
    /*00030294*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*00030298*/ SUB         R3, R3, #2 
    /*0003029c*/ CMP         R3, #1 
    /*000302a0*/ POPHI       {R4, PC} 
    /*000302a4*/ POP         {R4, LR} 
    /*000302a8*/ B           0x00000000000251F8 
FUNC_END VI_DRV_StopPipe


FUNC_BEGIN VI_DRV_CheckPipeRawSource
    /*000302ac*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000302b0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000302b4*/ ADD         R3, R3, R0, LSL #2 
    /*000302b8*/ BICS        R2, R1, #2 
    /*000302bc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000302c0*/ SUB         SP, SP, #12 
    /*000302c4*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*000302c8*/ BNE         VI_DRV_CheckPipeRawSource_x302e4
    /*000302cc*/ SUB         R3, R3, #2 
    /*000302d0*/ CMP         R3, #1 
    /*000302d4*/ MOVHI       R0, R2 
    /*000302d8*/ BLS         VI_DRV_CheckPipeRawSource_x30314
    VI_DRV_CheckPipeRawSource_x302dc:
    /*000302dc*/ ADD         SP, SP, #12 
    /*000302e0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckPipeRawSource_x302e4:
    /*000302e4*/ STR         R1, [SP, #4] 
    /*000302e8*/ MOVW        R3, #8418                   @ 0x20e2 
    /*000302ec*/ MOVW        R2, #0                      @ .LC267 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf230] 
    /*000302f0*/ STR         R3, [SP] 
    /*000302f4*/ MOVT        R2, #0                      @ .LC267 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf230] 
    /*000302f8*/ LDR         R3, [PC, #68]               @ 0x0000000000030344 
    /*000302fc*/ MOV         R1, #16 
    /*00030300*/ MOV         R0, #3 
    /*00030304*/ BL          0x0000000000030304          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030308*/ MOVW        R0, #32771                  @ 0x8003 
    /*0003030c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00030310*/ B           VI_DRV_CheckPipeRawSource_x302dc
    VI_DRV_CheckPipeRawSource_x30314:
    /*00030314*/ STR         R0, [SP, #4] 
    /*00030318*/ MOVW        R3, #8425                   @ 0x20e9 
    /*0003031c*/ MOVW        R2, #0                      @ .LC268 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf284] 
    /*00030320*/ STR         R3, [SP] 
    /*00030324*/ MOVT        R2, #0                      @ .LC268 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf284] 
    /*00030328*/ LDR         R3, [PC, #20]               @ 0x0000000000030344 
    /*0003032c*/ MOV         R1, #16 
    /*00030330*/ MOV         R0, #3 
    /*00030334*/ BL          0x0000000000030334          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030338*/ MOVW        R0, #32776                  @ 0x8008 
    /*0003033c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00030340*/ B           VI_DRV_CheckPipeRawSource_x302dc
    /*00030344*/ ANDEQ       R1, R0, IP, LSR SP 
FUNC_END VI_DRV_CheckPipeRawSource


FUNC_BEGIN VI_DRV_SetPipeRawSource
    /*00030348*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0003034c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00030350*/ ADD         R0, R3, R0, LSL #2 
    /*00030354*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*00030358*/ ADD         R3, R3, #32768              @ 0x8000 
    /*0003035c*/ LDR         R2, [R3, #1436]             @ 0x59c 
    /*00030360*/ CMP         R2, R1 
    /*00030364*/ BEQ         VI_DRV_SetPipeRawSource_x30384
    /*00030368*/ CMP         R1, #1 
    /*0003036c*/ BEQ         VI_DRV_SetPipeRawSource_x3038c
    /*00030370*/ MOV         R2, #1 
    /*00030374*/ STR         R1, [R3, #1436]             @ 0x59c 
    /*00030378*/ MOV         R0, #0 
    /*0003037c*/ STR         R2, [R3, #2048]             @ 0x800 
    /*00030380*/ BX          LR 
    VI_DRV_SetPipeRawSource_x30384:
    /*00030384*/ MOV         R0, #0 
    /*00030388*/ BX          LR 
    VI_DRV_SetPipeRawSource_x3038c:
    /*0003038c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00030390*/ SUB         SP, SP, #12 
    /*00030394*/ MOVW        R3, #8453                   @ 0x2105 
    /*00030398*/ MOV         R1, #16 
    /*0003039c*/ STR         R3, [SP] 
    /*000303a0*/ MOVW        R2, #0                      @ .LC269 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf2d0] 
    /*000303a4*/ LDR         R3, [PC, #24]               @ 0x00000000000303c4 
    /*000303a8*/ MOVT        R2, #0                      @ .LC269 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf2d0] 
    /*000303ac*/ MOV         R0, #3 
    /*000303b0*/ BL          0x00000000000303B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000303b4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000303b8*/ MOVT        R0, #40976                  @ 0xa010 
    /*000303bc*/ ADD         SP, SP, #12 
    /*000303c0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000303c4*/ ANDEQ       R1, R0, R8, ASR SP 
FUNC_END VI_DRV_SetPipeRawSource


FUNC_BEGIN VI_DRV_GetPipeRawSource
    /*000303c8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000303cc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000303d0*/ ADD         R0, R3, R0, LSL #2 
    /*000303d4*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*000303d8*/ MOV         R0, #0 
    /*000303dc*/ CMP         R3, #0 
    /*000303e0*/ ADDNE       R3, R3, #32768              @ 0x8000 
    /*000303e4*/ LDRNE       R3, [R3, #1436]             @ 0x59c 
    /*000303e8*/ STR         R3, [R1] 
    /*000303ec*/ BX          LR 
FUNC_END VI_DRV_GetPipeRawSource


FUNC_BEGIN VI_DRV_CheckPipeRepeatMode
    /*000303f0*/ CMP         R0, #1 
    /*000303f4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000303f8*/ MOVT        R0, #40976                  @ 0xa010 
    /*000303fc*/ MOVLS       R0, #0 
    /*00030400*/ BX          LR 
FUNC_END VI_DRV_CheckPipeRepeatMode


FUNC_BEGIN VI_DRV_CheckFisheyeConfig
    /*00030404*/ MOVW        R0, #32776                  @ 0x8008 
    /*00030408*/ MOVT        R0, #40976                  @ 0xa010 
    /*0003040c*/ BX          LR 
FUNC_END VI_DRV_CheckFisheyeConfig


FUNC_BEGIN VI_DRV_SetFisheyeConfig
    /*00030410*/ MOV         R0, #0 
    /*00030414*/ BX          LR 
FUNC_END VI_DRV_SetFisheyeConfig


FUNC_BEGIN VI_DRV_GetFisheyeConfig
    /*00030418*/ MOV         R0, #0 
    /*0003041c*/ BX          LR 
FUNC_END VI_DRV_GetFisheyeConfig


FUNC_BEGIN VI_DRV_GetFisheyeWorkingConfig
    /*00030420*/ MOV         R0, #0 
    /*00030424*/ BX          LR 
FUNC_END VI_DRV_GetFisheyeWorkingConfig


FUNC_BEGIN VI_DRV_CheckExtFisheyeCapacity
    /*00030428*/ PUSH        {R4, LR} 
    /*0003042c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00030430*/ LDR         LR, [R2, #12] 
    /*00030434*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00030438*/ ADD         R3, R3, R0, LSL #2 
    /*0003043c*/ SUB         SP, SP, #32 
    /*00030440*/ CMP         LR, #26 
    /*00030444*/ CMPNE       LR, #39                     @ 0x27 
    /*00030448*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0003044c*/ BNE         VI_DRV_CheckExtFisheyeCapacity_x30638
    /*00030450*/ CMP         LR, #26 
    /*00030454*/ SUB         IP, R1, #1 
    /*00030458*/ BEQ         VI_DRV_CheckExtFisheyeCapacity_x304e0
    /*0003045c*/ CMP         LR, #39                     @ 0x27 
    /*00030460*/ BEQ         VI_DRV_CheckExtFisheyeCapacity_x30514
    VI_DRV_CheckExtFisheyeCapacity_x30464:
    /*00030464*/ LDR         LR, [R2, #20] 
    /*00030468*/ CMP         LR, #0 
    /*0003046c*/ BNE         VI_DRV_CheckExtFisheyeCapacity_x30654
    /*00030470*/ LDR         LR, [R2] 
    /*00030474*/ LDR         R2, [R2, #4] 
    /*00030478*/ CMP         LR, #1920                   @ 0x780 
    /*0003047c*/ BCC         VI_DRV_CheckExtFisheyeCapacity_x3055c
    /*00030480*/ MOVW        R4, #1079                   @ 0x437 
    /*00030484*/ CMP         R2, R4 
    /*00030488*/ BLS         VI_DRV_CheckExtFisheyeCapacity_x3055c
    /*0003048c*/ CMP         R2, #4608                   @ 0x1200 
    /*00030490*/ CMPLS       LR, #4608                   @ 0x1200 
    /*00030494*/ BHI         VI_DRV_CheckExtFisheyeCapacity_x305a4
    /*00030498*/ MOV         LR, #40                     @ 0x28 
    /*0003049c*/ MOVW        R2, #37344                  @ 0x91e0 
    /*000304a0*/ MLA         R3, LR, IP, R3 
    /*000304a4*/ MOVW        IP, #37348                  @ 0x91e4 
    /*000304a8*/ LDR         R2, [R3, R2] 
    /*000304ac*/ LDR         IP, [R3, IP] 
    /*000304b0*/ CMP         R2, #4608                   @ 0x1200 
    /*000304b4*/ BHI         VI_DRV_CheckExtFisheyeCapacity_x305e8
    /*000304b8*/ CMP         IP, #4608                   @ 0x1200 
    /*000304bc*/ BHI         VI_DRV_CheckExtFisheyeCapacity_x305e8
    /*000304c0*/ CMP         IP, #360                    @ 0x168 
    /*000304c4*/ CMPCS       R2, #640                    @ 0x280 
    /*000304c8*/ MOVCS       R3, #0 
    /*000304cc*/ MOVCC       R3, #1 
    /*000304d0*/ MOVCS       R0, R3 
    /*000304d4*/ BCC         VI_DRV_CheckExtFisheyeCapacity_x3060c
    VI_DRV_CheckExtFisheyeCapacity_x304d8:
    /*000304d8*/ ADD         SP, SP, #32 
    /*000304dc*/ POP         {R4, PC} 
    VI_DRV_CheckExtFisheyeCapacity_x304e0:
    /*000304e0*/ MOV         LR, #40                     @ 0x28 
    /*000304e4*/ MOVW        R4, #37352                  @ 0x91e8 
    /*000304e8*/ MLA         LR, LR, IP, R3 
    /*000304ec*/ LDR         LR, [LR, R4] 
    /*000304f0*/ CMP         LR, #25 
    /*000304f4*/ BNE         VI_DRV_CheckExtFisheyeCapacity_x30464
    /*000304f8*/ MOVW        R3, #8533                   @ 0x2155 
    /*000304fc*/ MOVW        R2, #0                      @ .LC271 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf38c] 
    /*00030500*/ STR         R1, [SP, #8] 
    /*00030504*/ MOVT        R2, #0                      @ .LC271 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf38c] 
    /*00030508*/ STR         R0, [SP, #4] 
    /*0003050c*/ STR         R3, [SP] 
    /*00030510*/ B           VI_DRV_CheckExtFisheyeCapacity_x30544
    VI_DRV_CheckExtFisheyeCapacity_x30514:
    /*00030514*/ MOV         LR, #40                     @ 0x28 
    /*00030518*/ MOVW        R4, #37352                  @ 0x91e8 
    /*0003051c*/ MLA         LR, LR, IP, R3 
    /*00030520*/ LDR         LR, [LR, R4] 
    /*00030524*/ CMP         LR, #39                     @ 0x27 
    /*00030528*/ BEQ         VI_DRV_CheckExtFisheyeCapacity_x30464
    /*0003052c*/ MOVW        R2, #0                      @ .LC272 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf418] 
    /*00030530*/ MOVT        R2, #0                      @ .LC272 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf418] 
    /*00030534*/ MOVW        R3, #8541                   @ 0x215d 
    /*00030538*/ STR         R1, [SP, #8] 
    /*0003053c*/ STR         R0, [SP, #4] 
    /*00030540*/ STR         R3, [SP] 
    VI_DRV_CheckExtFisheyeCapacity_x30544:
    /*00030544*/ LDR         R3, [PC, #292]              @ 0x0000000000030670 
    /*00030548*/ MOV         R1, #16 
    /*0003054c*/ MOV         R0, #3 
    /*00030550*/ BL          0x0000000000030550          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030554*/ MVN         R0, #0 
    /*00030558*/ B           VI_DRV_CheckExtFisheyeCapacity_x304d8
    VI_DRV_CheckExtFisheyeCapacity_x3055c:
    /*0003055c*/ STR         R2, [SP, #16] 
    /*00030560*/ MOVW        R2, #0                      @ .LC274 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf514] 
    /*00030564*/ MOVT        R2, #0                      @ .LC274 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf514] 
    /*00030568*/ MOV         IP, #1920                   @ 0x780 
    /*0003056c*/ MOVW        R3, #8557                   @ 0x216d 
    /*00030570*/ MOVW        R4, #1080                   @ 0x438 
    /*00030574*/ STR         LR, [SP, #12] 
    /*00030578*/ STR         R1, [SP, #8] 
    /*0003057c*/ STR         R0, [SP, #4] 
    /*00030580*/ STR         R4, [SP, #24] 
    VI_DRV_CheckExtFisheyeCapacity_x30584:
    /*00030584*/ STR         R3, [SP] 
    /*00030588*/ MOV         R1, #16 
    /*0003058c*/ STR         IP, [SP, #20] 
    /*00030590*/ MOV         R0, #3 
    /*00030594*/ LDR         R3, [PC, #212]              @ 0x0000000000030670 
    /*00030598*/ BL          0x0000000000030598          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003059c*/ MVN         R0, #0 
    /*000305a0*/ B           VI_DRV_CheckExtFisheyeCapacity_x304d8
    VI_DRV_CheckExtFisheyeCapacity_x305a4:
    /*000305a4*/ STR         R2, [SP, #16] 
    /*000305a8*/ MOVW        R2, #0                      @ .LC275 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf584] 
    /*000305ac*/ MOVT        R2, #0                      @ .LC275 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf584] 
    /*000305b0*/ MOV         R3, #4608                   @ 0x1200 
    /*000305b4*/ MOVW        IP, #8566                   @ 0x2176 
    /*000305b8*/ STR         LR, [SP, #12] 
    /*000305bc*/ STR         R1, [SP, #8] 
    /*000305c0*/ STR         R0, [SP, #4] 
    VI_DRV_CheckExtFisheyeCapacity_x305c4:
    /*000305c4*/ STR         R3, [SP, #24] 
    /*000305c8*/ MOV         R1, #16 
    /*000305cc*/ STR         R3, [SP, #20] 
    /*000305d0*/ MOV         R0, #3 
    /*000305d4*/ STR         IP, [SP] 
    /*000305d8*/ LDR         R3, [PC, #144]              @ 0x0000000000030670 
    /*000305dc*/ BL          0x00000000000305DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000305e0*/ MVN         R0, #0 
    /*000305e4*/ B           VI_DRV_CheckExtFisheyeCapacity_x304d8
    VI_DRV_CheckExtFisheyeCapacity_x305e8:
    /*000305e8*/ STR         IP, [SP, #16] 
    /*000305ec*/ MOV         R3, #4608                   @ 0x1200 
    /*000305f0*/ STR         R2, [SP, #12] 
    /*000305f4*/ MOVW        IP, #8575                   @ 0x217f 
    /*000305f8*/ MOVW        R2, #0                      @ .LC276 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf5f0] 
    /*000305fc*/ STR         R1, [SP, #8] 
    /*00030600*/ STR         R0, [SP, #4] 
    /*00030604*/ MOVT        R2, #0                      @ .LC276 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf5f0] 
    /*00030608*/ B           VI_DRV_CheckExtFisheyeCapacity_x305c4
    VI_DRV_CheckExtFisheyeCapacity_x3060c:
    /*0003060c*/ STR         IP, [SP, #16] 
    /*00030610*/ MOV         LR, #360                    @ 0x168 
    /*00030614*/ STR         R2, [SP, #12] 
    /*00030618*/ MOV         IP, #640                    @ 0x280 
    /*0003061c*/ MOVW        R2, #0                      @ .LC277 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf65c] 
    /*00030620*/ STR         R1, [SP, #8] 
    /*00030624*/ MOVW        R3, #8584                   @ 0x2188 
    /*00030628*/ STR         R0, [SP, #4] 
    /*0003062c*/ STR         LR, [SP, #24] 
    /*00030630*/ MOVT        R2, #0                      @ .LC277 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf65c] 
    /*00030634*/ B           VI_DRV_CheckExtFisheyeCapacity_x30584
    VI_DRV_CheckExtFisheyeCapacity_x30638:
    /*00030638*/ MOVW        R3, #8525                   @ 0x214d 
    /*0003063c*/ MOVW        R2, #0                      @ .LC270 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf310] 
    /*00030640*/ STR         R1, [SP, #8] 
    /*00030644*/ MOVT        R2, #0                      @ .LC270 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf310] 
    /*00030648*/ STR         R0, [SP, #4] 
    /*0003064c*/ STR         R3, [SP] 
    /*00030650*/ B           VI_DRV_CheckExtFisheyeCapacity_x30544
    VI_DRV_CheckExtFisheyeCapacity_x30654:
    /*00030654*/ MOVW        R3, #8548                   @ 0x2164 
    /*00030658*/ MOVW        R2, #0                      @ .LC273 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf4b0] 
    /*0003065c*/ STR         R1, [SP, #8] 
    /*00030660*/ MOVT        R2, #0                      @ .LC273 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf4b0] 
    /*00030664*/ STR         R0, [SP, #4] 
    /*00030668*/ STR         R3, [SP] 
    /*0003066c*/ B           VI_DRV_CheckExtFisheyeCapacity_x30544
    /*00030670*/ ANDEQ       R1, R0, R0, ROR SP 
FUNC_END VI_DRV_CheckExtFisheyeCapacity


FUNC_BEGIN VI_DRV_CheckNRXV2BaseParam
    /*00030674*/ CMP         R1, #0 
    /*00030678*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0003067c*/ SUB         SP, SP, #28 
    /*00030680*/ BEQ         VI_DRV_CheckNRXV2BaseParam_x30a30
    /*00030684*/ LDRH        R3, [R1, #4] 
    /*00030688*/ UBFX        R3, R3, #0, #10 
    /*0003068c*/ CMP         R3, #1000                   @ 0x3e8 
    /*00030690*/ BGE         VI_DRV_CheckNRXV2BaseParam_x307c8
    /*00030694*/ LDRB        R3, [R1, #6] 
    /*00030698*/ AND         R3, R3, #7 
    /*0003069c*/ CMP         R3, #5 
    /*000306a0*/ BGT         VI_DRV_CheckNRXV2BaseParam_x3080c
    /*000306a4*/ LDRB        R3, [R1, #7] 
    /*000306a8*/ AND         R2, R3, #7 
    /*000306ac*/ CMP         R2, #5 
    /*000306b0*/ BGT         VI_DRV_CheckNRXV2BaseParam_x30874
    /*000306b4*/ LSR         R3, R3, #3 
    /*000306b8*/ CMP         R3, #16 
    /*000306bc*/ BGT         VI_DRV_CheckNRXV2BaseParam_x30838
    /*000306c0*/ LDRB        R3, [R1, #8] 
    /*000306c4*/ AND         R3, R3, #31 
    /*000306c8*/ CMP         R3, #16 
    /*000306cc*/ BGT         VI_DRV_CheckNRXV2BaseParam_x308a0
    /*000306d0*/ LDRH        R3, [R1, #8] 
    /*000306d4*/ UBFX        R3, R3, #5, #5 
    /*000306d8*/ CMP         R3, #16 
    /*000306dc*/ BGT         VI_DRV_CheckNRXV2BaseParam_x308dc
    /*000306e0*/ LDRB        R3, [R1, #9] 
    /*000306e4*/ UBFX        R2, R3, #2, #3 
    /*000306e8*/ CMP         R2, #4 
    /*000306ec*/ BGT         VI_DRV_CheckNRXV2BaseParam_x30918
    /*000306f0*/ LSR         R3, R3, #5 
    /*000306f4*/ ADD         R2, R3, #5 
    /*000306f8*/ AND         R2, R2, #7 
    /*000306fc*/ CMP         R2, #3 
    /*00030700*/ BHI         VI_DRV_CheckNRXV2BaseParam_x30944
    /*00030704*/ LDRB        R3, [R1, #11] 
    /*00030708*/ CMP         R3, #31 
    /*0003070c*/ BHI         VI_DRV_CheckNRXV2BaseParam_x307c0
    /*00030710*/ LDRB        R3, [R1, #12] 
    /*00030714*/ CMP         R3, #31 
    /*00030718*/ BHI         VI_DRV_CheckNRXV2BaseParam_x30774
    /*0003071c*/ LDRB        R3, [R1, #13] 
    /*00030720*/ CMP         R3, #31 
    /*00030724*/ MOVHI       R2, #2 
    /*00030728*/ BHI         VI_DRV_CheckNRXV2BaseParam_x30778
    /*0003072c*/ LDRB        R3, [R1, #25] 
    /*00030730*/ UBFX        R2, R3, #1, #3 
    /*00030734*/ CMP         R2, #7 
    /*00030738*/ BEQ         VI_DRV_CheckNRXV2BaseParam_x30980
    /*0003073c*/ LSR         R3, R3, #5 
    /*00030740*/ CMP         R3, #7 
    /*00030744*/ BEQ         VI_DRV_CheckNRXV2BaseParam_x309ac
    /*00030748*/ LDRB        R3, [R1, #27] 
    /*0003074c*/ UBFX        R3, R3, #1, #3 
    /*00030750*/ CMP         R3, #7 
    /*00030754*/ BEQ         VI_DRV_CheckNRXV2BaseParam_x309d8
    /*00030758*/ LDRB        R3, [R1, #29] 
    /*0003075c*/ UBFX        R3, R3, #1, #3 
    /*00030760*/ CMP         R3, #7 
    /*00030764*/ MOVNE       R0, #0 
    /*00030768*/ BEQ         VI_DRV_CheckNRXV2BaseParam_x30a04
    VI_DRV_CheckNRXV2BaseParam_x3076c:
    /*0003076c*/ ADD         SP, SP, #28 
    /*00030770*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckNRXV2BaseParam_x30774:
    /*00030774*/ MOV         R2, #1 
    VI_DRV_CheckNRXV2BaseParam_x30778:
    /*00030778*/ STR         R3, [SP, #12] 
    /*0003077c*/ MOV         IP, #31 
    /*00030780*/ STR         R2, [SP, #8] 
    /*00030784*/ MOV         R1, #0 
    /*00030788*/ STR         R0, [SP, #4] 
    /*0003078c*/ MOVW        R3, #8655                   @ 0x21cf 
    /*00030790*/ STR         R1, [SP, #16] 
    /*00030794*/ MOVW        R2, #0                      @ .LC287 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf9ac] 
    /*00030798*/ STR         R3, [SP] 
    /*0003079c*/ MOVT        R2, #0                      @ .LC287 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf9ac] 
    /*000307a0*/ STR         IP, [SP, #20] 
    /*000307a4*/ MOV         R1, #16 
    /*000307a8*/ LDR         R3, [PC, #688]              @ 0x0000000000030a60 
    /*000307ac*/ MOV         R0, #3 
    /*000307b0*/ BL          0x00000000000307B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000307b4*/ MVN         R0, #0 
    /*000307b8*/ ADD         SP, SP, #28 
    /*000307bc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckNRXV2BaseParam_x307c0:
    /*000307c0*/ MOV         R2, #0 
    /*000307c4*/ B           VI_DRV_CheckNRXV2BaseParam_x30778
    VI_DRV_CheckNRXV2BaseParam_x307c8:
    /*000307c8*/ MOV         R2, #0 
    /*000307cc*/ STR         R2, [SP, #12] 
    /*000307d0*/ MOVW        R2, #0                      @ .LC279 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf70c] 
    /*000307d4*/ MOVT        R2, #0                      @ .LC279 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf70c] 
    /*000307d8*/ STR         R3, [SP, #8] 
    /*000307dc*/ MOVW        R3, #999                    @ 0x3e7 
    /*000307e0*/ STR         R0, [SP, #4] 
    /*000307e4*/ STR         R3, [SP, #16] 
    /*000307e8*/ MOVW        R3, #8604                   @ 0x219c 
    /*000307ec*/ STR         R3, [SP] 
    VI_DRV_CheckNRXV2BaseParam_x307f0:
    /*000307f0*/ LDR         R3, [PC, #616]              @ 0x0000000000030a60 
    /*000307f4*/ MOV         R1, #16 
    /*000307f8*/ MOV         R0, #3 
    /*000307fc*/ BL          0x00000000000307FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030800*/ MVN         R0, #0 
    /*00030804*/ ADD         SP, SP, #28 
    /*00030808*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckNRXV2BaseParam_x3080c:
    /*0003080c*/ MOV         R2, #0 
    /*00030810*/ STR         R3, [SP, #8] 
    /*00030814*/ STR         R2, [SP, #12] 
    /*00030818*/ MOV         R3, #5 
    /*0003081c*/ MOVW        R2, #0                      @ .LC280 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf760] 
    /*00030820*/ STR         R3, [SP, #16] 
    /*00030824*/ STR         R0, [SP, #4] 
    /*00030828*/ MOVW        R3, #8611                   @ 0x21a3 
    /*0003082c*/ MOVT        R2, #0                      @ .LC280 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf760] 
    /*00030830*/ STR         R3, [SP] 
    /*00030834*/ B           VI_DRV_CheckNRXV2BaseParam_x307f0
    VI_DRV_CheckNRXV2BaseParam_x30838:
    /*00030838*/ MOV         R2, #16 
    /*0003083c*/ STMIB       SP, {R0, R3} 
    /*00030840*/ MOV         R1, R2 
    /*00030844*/ STR         R2, [SP, #16] 
    /*00030848*/ MOVW        R3, #8623                   @ 0x21af 
    /*0003084c*/ MOV         R2, #0 
    /*00030850*/ STR         R3, [SP] 
    /*00030854*/ MOV         R0, #3 
    /*00030858*/ STR         R2, [SP, #12] 
    /*0003085c*/ MOVW        R2, #0                      @ .LC282 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf808] 
    /*00030860*/ LDR         R3, [PC, #504]              @ 0x0000000000030a60 
    /*00030864*/ MOVT        R2, #0                      @ .LC282 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf808] 
    /*00030868*/ BL          0x0000000000030868          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003086c*/ MVN         R0, #0 
    /*00030870*/ B           VI_DRV_CheckNRXV2BaseParam_x3076c
    VI_DRV_CheckNRXV2BaseParam_x30874:
    /*00030874*/ MOV         R3, #5 
    /*00030878*/ STR         R2, [SP, #8] 
    /*0003087c*/ STR         R3, [SP, #16] 
    /*00030880*/ MOV         R2, #0 
    /*00030884*/ MOVW        R3, #8617                   @ 0x21a9 
    /*00030888*/ STR         R2, [SP, #12] 
    /*0003088c*/ STR         R0, [SP, #4] 
    /*00030890*/ MOVW        R2, #0                      @ .LC281 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf7b4] 
    /*00030894*/ STR         R3, [SP] 
    /*00030898*/ MOVT        R2, #0                      @ .LC281 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf7b4] 
    /*0003089c*/ B           VI_DRV_CheckNRXV2BaseParam_x307f0
    VI_DRV_CheckNRXV2BaseParam_x308a0:
    /*000308a0*/ MOV         R2, #16 
    /*000308a4*/ STMIB       SP, {R0, R3} 
    /*000308a8*/ MOV         R1, R2 
    /*000308ac*/ STR         R2, [SP, #16] 
    /*000308b0*/ MOVW        R3, #8629                   @ 0x21b5 
    /*000308b4*/ MOV         R2, #0 
    /*000308b8*/ STR         R3, [SP] 
    /*000308bc*/ MOV         R0, #3 
    /*000308c0*/ STR         R2, [SP, #12] 
    /*000308c4*/ MOVW        R2, #0                      @ .LC283 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf85c] 
    /*000308c8*/ LDR         R3, [PC, #400]              @ 0x0000000000030a60 
    /*000308cc*/ MOVT        R2, #0                      @ .LC283 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf85c] 
    /*000308d0*/ BL          0x00000000000308D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000308d4*/ MVN         R0, #0 
    /*000308d8*/ B           VI_DRV_CheckNRXV2BaseParam_x3076c
    VI_DRV_CheckNRXV2BaseParam_x308dc:
    /*000308dc*/ MOV         R2, #16 
    /*000308e0*/ STMIB       SP, {R0, R3} 
    /*000308e4*/ MOV         R1, R2 
    /*000308e8*/ STR         R2, [SP, #16] 
    /*000308ec*/ MOVW        R3, #8635                   @ 0x21bb 
    /*000308f0*/ MOV         R2, #0 
    /*000308f4*/ STR         R3, [SP] 
    /*000308f8*/ MOV         R0, #3 
    /*000308fc*/ STR         R2, [SP, #12] 
    /*00030900*/ MOVW        R2, #0                      @ .LC284 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf8b0] 
    /*00030904*/ LDR         R3, [PC, #340]              @ 0x0000000000030a60 
    /*00030908*/ MOVT        R2, #0                      @ .LC284 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf8b0] 
    /*0003090c*/ BL          0x000000000003090C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030910*/ MVN         R0, #0 
    /*00030914*/ B           VI_DRV_CheckNRXV2BaseParam_x3076c
    VI_DRV_CheckNRXV2BaseParam_x30918:
    /*00030918*/ MOV         R3, #4 
    /*0003091c*/ STR         R2, [SP, #8] 
    /*00030920*/ STR         R3, [SP, #16] 
    /*00030924*/ MOV         R2, #0 
    /*00030928*/ MOVW        R3, #8641                   @ 0x21c1 
    /*0003092c*/ STR         R2, [SP, #12] 
    /*00030930*/ STR         R0, [SP, #4] 
    /*00030934*/ MOVW        R2, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf904] 
    /*00030938*/ STR         R3, [SP] 
    /*0003093c*/ MOVT        R2, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf904] 
    /*00030940*/ B           VI_DRV_CheckNRXV2BaseParam_x307f0
    VI_DRV_CheckNRXV2BaseParam_x30944:
    /*00030944*/ MOV         R2, #3 
    /*00030948*/ STMIB       SP, {R0, R3} 
    /*0003094c*/ STR         R2, [SP, #12] 
    /*00030950*/ MOV         R0, R2 
    /*00030954*/ MOVW        R3, #8647                   @ 0x21c7 
    /*00030958*/ MOV         R2, #6 
    /*0003095c*/ STR         R3, [SP] 
    /*00030960*/ MOV         R1, #16 
    /*00030964*/ STR         R2, [SP, #16] 
    /*00030968*/ MOVW        R2, #0                      @ .LC286 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf958] 
    /*0003096c*/ LDR         R3, [PC, #236]              @ 0x0000000000030a60 
    /*00030970*/ MOVT        R2, #0                      @ .LC286 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf958] 
    /*00030974*/ BL          0x0000000000030974          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030978*/ MVN         R0, #0 
    /*0003097c*/ B           VI_DRV_CheckNRXV2BaseParam_x3076c
    VI_DRV_CheckNRXV2BaseParam_x30980:
    /*00030980*/ MOV         R3, #6 
    /*00030984*/ STR         R2, [SP, #8] 
    /*00030988*/ STR         R3, [SP, #16] 
    /*0003098c*/ MOV         R2, #0 
    /*00030990*/ MOVW        R3, #8666                   @ 0x21da 
    /*00030994*/ STR         R2, [SP, #12] 
    /*00030998*/ STR         R0, [SP, #4] 
    /*0003099c*/ MOVW        R2, #0                      @ .LC288 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfa10] 
    /*000309a0*/ STR         R3, [SP] 
    /*000309a4*/ MOVT        R2, #0                      @ .LC288 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfa10] 
    /*000309a8*/ B           VI_DRV_CheckNRXV2BaseParam_x307f0
    VI_DRV_CheckNRXV2BaseParam_x309ac:
    /*000309ac*/ MOV         R2, #0 
    /*000309b0*/ STR         R3, [SP, #8] 
    /*000309b4*/ STR         R2, [SP, #12] 
    /*000309b8*/ MOV         R3, #6 
    /*000309bc*/ MOVW        R2, #0                      @ .LC289 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfa64] 
    /*000309c0*/ STR         R3, [SP, #16] 
    /*000309c4*/ STR         R0, [SP, #4] 
    /*000309c8*/ MOVW        R3, #8672                   @ 0x21e0 
    /*000309cc*/ MOVT        R2, #0                      @ .LC289 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfa64] 
    /*000309d0*/ STR         R3, [SP] 
    /*000309d4*/ B           VI_DRV_CheckNRXV2BaseParam_x307f0
    VI_DRV_CheckNRXV2BaseParam_x309d8:
    /*000309d8*/ MOV         R2, #0 
    /*000309dc*/ STR         R3, [SP, #8] 
    /*000309e0*/ STR         R2, [SP, #12] 
    /*000309e4*/ MOV         R3, #6 
    /*000309e8*/ MOVW        R2, #0                      @ .LC290 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfab8] 
    /*000309ec*/ STR         R3, [SP, #16] 
    /*000309f0*/ STR         R0, [SP, #4] 
    /*000309f4*/ MOVW        R3, #8678                   @ 0x21e6 
    /*000309f8*/ MOVT        R2, #0                      @ .LC290 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfab8] 
    /*000309fc*/ STR         R3, [SP] 
    /*00030a00*/ B           VI_DRV_CheckNRXV2BaseParam_x307f0
    VI_DRV_CheckNRXV2BaseParam_x30a04:
    /*00030a04*/ MOV         R2, #0 
    /*00030a08*/ STR         R3, [SP, #8] 
    /*00030a0c*/ STR         R2, [SP, #12] 
    /*00030a10*/ MOV         R3, #6 
    /*00030a14*/ MOVW        R2, #0                      @ .LC291 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfb0c] 
    /*00030a18*/ STR         R3, [SP, #16] 
    /*00030a1c*/ STR         R0, [SP, #4] 
    /*00030a20*/ MOVW        R3, #8684                   @ 0x21ec 
    /*00030a24*/ MOVT        R2, #0                      @ .LC291 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfb0c] 
    /*00030a28*/ STR         R3, [SP] 
    /*00030a2c*/ B           VI_DRV_CheckNRXV2BaseParam_x307f0
    VI_DRV_CheckNRXV2BaseParam_x30a30:
    /*00030a30*/ STR         R0, [SP, #4] 
    /*00030a34*/ MOVW        R3, #8596                   @ 0x2194 
    /*00030a38*/ MOVW        R2, #0                      @ .LC278 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf6cc] 
    /*00030a3c*/ STR         R3, [SP] 
    /*00030a40*/ MOVT        R2, #0                      @ .LC278 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf6cc] 
    /*00030a44*/ LDR         R3, [PC, #20]               @ 0x0000000000030a60 
    /*00030a48*/ MOV         R1, #16 
    /*00030a4c*/ MOV         R0, #3 
    /*00030a50*/ BL          0x0000000000030A50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030a54*/ MOVW        R0, #32771                  @ 0x8003 
    /*00030a58*/ MOVT        R0, #40976                  @ 0xa010 
    /*00030a5c*/ B           VI_DRV_CheckNRXV2BaseParam_x3076c
    /*00030a60*/ MULEQ       R0, R0, SP 
FUNC_END VI_DRV_CheckNRXV2BaseParam


FUNC_BEGIN VI_DRV_CheckNRXV2ManualParam
    VI_DRV_CheckNRXV2ManualParam_x30a64:
    /*00030a64*/ B           VI_DRV_CheckNRXV2ManualParam_x30a64@ VI_DRV_CheckNRXV2BaseParam [R_ARM_JUMP24: .text+0x30674] 
FUNC_END VI_DRV_CheckNRXV2ManualParam


FUNC_BEGIN VI_DRV_CheckPipeNRXISOParam
    /*00030a68*/ MOVW        R3, #65436                  @ 0xff9c 
    /*00030a6c*/ SUB         R2, R0, #100                @ 0x64 
    /*00030a70*/ MOVT        R3, #49                     @ 0x31 
    /*00030a74*/ CMP         R2, R3 
    /*00030a78*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00030a7c*/ SUB         SP, SP, #12 
    /*00030a80*/ BHI         VI_DRV_CheckPipeNRXISOParam_x30a98
    /*00030a84*/ CMP         R0, R1 
    /*00030a88*/ MOVHI       R0, #0 
    /*00030a8c*/ BLS         VI_DRV_CheckPipeNRXISOParam_x30ac8
    VI_DRV_CheckPipeNRXISOParam_x30a90:
    /*00030a90*/ ADD         SP, SP, #12 
    /*00030a94*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckPipeNRXISOParam_x30a98:
    /*00030a98*/ STR         R0, [SP, #4] 
    /*00030a9c*/ MOVW        R3, #8701                   @ 0x21fd 
    /*00030aa0*/ MOVW        R2, #0                      @ .LC292 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfb60] 
    /*00030aa4*/ STR         R3, [SP] 
    /*00030aa8*/ MOVT        R2, #0                      @ .LC292 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfb60] 
    /*00030aac*/ LDR         R3, [PC, #64]               @ 0x0000000000030af4 
    /*00030ab0*/ MOV         R1, #16 
    /*00030ab4*/ MOV         R0, #3 
    /*00030ab8*/ BL          0x0000000000030AB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030abc*/ MOVW        R0, #32771                  @ 0x8003 
    /*00030ac0*/ MOVT        R0, #40976                  @ 0xa010 
    /*00030ac4*/ B           VI_DRV_CheckPipeNRXISOParam_x30a90
    VI_DRV_CheckPipeNRXISOParam_x30ac8:
    /*00030ac8*/ MOVW        R3, #8707                   @ 0x2203 
    /*00030acc*/ MOVW        R2, #0                      @ .LC293 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfbb0] 
    /*00030ad0*/ STR         R3, [SP] 
    /*00030ad4*/ MOVT        R2, #0                      @ .LC293 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfbb0] 
    /*00030ad8*/ LDR         R3, [PC, #20]               @ 0x0000000000030af4 
    /*00030adc*/ MOV         R1, #16 
    /*00030ae0*/ MOV         R0, #3 
    /*00030ae4*/ BL          0x0000000000030AE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030ae8*/ MOVW        R0, #32771                  @ 0x8003 
    /*00030aec*/ MOVT        R0, #40976                  @ 0xa010 
    /*00030af0*/ B           VI_DRV_CheckPipeNRXISOParam_x30a90
    /*00030af4*/ ANDEQ       R1, R0, IP, LSR #27 
FUNC_END VI_DRV_CheckPipeNRXISOParam


FUNC_BEGIN VI_DRV_CheckNRXV2AutoParam
    /*00030af8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00030afc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00030b00*/ LDR         R2, [R1, #8] 
    /*00030b04*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00030b08*/ ADD         R3, R3, R0, LSL #2 
    /*00030b0c*/ SUB         SP, SP, #24 
    /*00030b10*/ CMP         R2, #0 
    /*00030b14*/ MOV         R7, R0 
    /*00030b18*/ LDR         R4, [R3, #728]              @ 0x2d8 
    /*00030b1c*/ BEQ         VI_DRV_CheckNRXV2AutoParam_x30c0c
    /*00030b20*/ LDR         R5, [R1, #4] 
    /*00030b24*/ MOV         R6, R1 
    /*00030b28*/ CMP         R5, #0 
    /*00030b2c*/ BEQ         VI_DRV_CheckNRXV2AutoParam_x30c78
    /*00030b30*/ LDR         R8, [R1] 
    /*00030b34*/ SUB         R3, R8, #1 
    /*00030b38*/ CMP         R3, #15 
    /*00030b3c*/ BHI         VI_DRV_CheckNRXV2AutoParam_x30bc4
    /*00030b40*/ LSL         R9, R8, #2 
    /*00030b44*/ MOV         R1, R5 
    /*00030b48*/ MOV         R0, #0 
    /*00030b4c*/ MOV         R2, R9 
    /*00030b50*/ BL          0x0000000000030B50          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*00030b54*/ CMP         R0, #0 
    /*00030b58*/ BNE         VI_DRV_CheckNRXV2AutoParam_x30c24
    VI_DRV_CheckNRXV2AutoParam_x30b5c:
    /*00030b5c*/ MOVW        R2, #0                      @ .LC297 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfd00] 
    /*00030b60*/ MOVT        R2, #0                      @ .LC297 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfd00] 
    /*00030b64*/ MOVW        R3, #8750                   @ 0x222e 
    /*00030b68*/ STR         R7, [SP, #4] 
    /*00030b6c*/ STR         R3, [SP] 
    VI_DRV_CheckNRXV2AutoParam_x30b70:
    /*00030b70*/ LDR         R3, [PC, #652]              @ 0x0000000000030e04 
    /*00030b74*/ MOV         R1, #16 
    /*00030b78*/ MOV         R0, #3 
    /*00030b7c*/ ADD         R4, R4, #65536              @ 0x10000 
    /*00030b80*/ BL          0x0000000000030B80          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_CheckNRXV2AutoParam_x30b84:
    /*00030b84*/ LDR         R0, [R4, #3740]             @ 0xe9c 
    /*00030b88*/ CMP         R0, #0 
    /*00030b8c*/ BEQ         VI_DRV_CheckNRXV2AutoParam_x30b9c
    /*00030b90*/ BL          0x0000000000030B90          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00030b94*/ MOV         R3, #0 
    /*00030b98*/ STR         R3, [R4, #3740]             @ 0xe9c 
    VI_DRV_CheckNRXV2AutoParam_x30b9c:
    /*00030b9c*/ LDR         R0, [R4, #3744]             @ 0xea0 
    /*00030ba0*/ CMP         R0, #0 
    /*00030ba4*/ BEQ         VI_DRV_CheckNRXV2AutoParam_x30bfc
    /*00030ba8*/ BL          0x0000000000030BA8          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00030bac*/ MOVW        R0, #32771                  @ 0x8003 
    /*00030bb0*/ MOVT        R0, #40976                  @ 0xa010 
    /*00030bb4*/ MOV         R3, #0 
    /*00030bb8*/ STR         R3, [R4, #3744]             @ 0xea0 
    VI_DRV_CheckNRXV2AutoParam_x30bbc:
    /*00030bbc*/ ADD         SP, SP, #24 
    /*00030bc0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_DRV_CheckNRXV2AutoParam_x30bc4:
    /*00030bc4*/ MOV         R3, #16 
    /*00030bc8*/ STR         R0, [SP, #4] 
    /*00030bcc*/ MOV         R1, R3 
    /*00030bd0*/ STR         R3, [SP, #8] 
    /*00030bd4*/ STR         R8, [SP, #12] 
    /*00030bd8*/ MOVW        R3, #8743                   @ 0x2227 
    /*00030bdc*/ MOVW        R2, #0                      @ .LC296 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfc98] 
    /*00030be0*/ STR         R3, [SP] 
    /*00030be4*/ MOVT        R2, #0                      @ .LC296 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfc98] 
    /*00030be8*/ LDR         R3, [PC, #532]              @ 0x0000000000030e04 
    /*00030bec*/ MOV         R0, #3 
    /*00030bf0*/ ADD         R4, R4, #65536              @ 0x10000 
    /*00030bf4*/ BL          0x0000000000030BF4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030bf8*/ B           VI_DRV_CheckNRXV2AutoParam_x30b84
    VI_DRV_CheckNRXV2AutoParam_x30bfc:
    /*00030bfc*/ MOVW        R0, #32771                  @ 0x8003 
    /*00030c00*/ MOVT        R0, #40976                  @ 0xa010 
    /*00030c04*/ ADD         SP, SP, #24 
    /*00030c08*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_DRV_CheckNRXV2AutoParam_x30c0c:
    /*00030c0c*/ MOVW        R3, #8727                   @ 0x2217 
    /*00030c10*/ MOVW        R2, #0                      @ .LC294 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfc04] 
    /*00030c14*/ STR         R0, [SP, #4] 
    /*00030c18*/ MOVT        R2, #0                      @ .LC294 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfc04] 
    /*00030c1c*/ STR         R3, [SP] 
    /*00030c20*/ B           VI_DRV_CheckNRXV2AutoParam_x30b70
    VI_DRV_CheckNRXV2AutoParam_x30c24:
    /*00030c24*/ SUB         R1, R9, #1 
    /*00030c28*/ MOV         R2, #1 
    /*00030c2c*/ ADD         R1, R5, R1 
    /*00030c30*/ ADD         R0, SP, #23 
    /*00030c34*/ BL          0x0000000000030C34          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*00030c38*/ CMP         R0, #0 
    /*00030c3c*/ BNE         VI_DRV_CheckNRXV2AutoParam_x30b5c
    /*00030c40*/ MOV         R5, #30 
    /*00030c44*/ LDR         SL, [R6, #8] 
    /*00030c48*/ MUL         R5, R5, R8 
    /*00030c4c*/ MOV         R1, SL 
    /*00030c50*/ MOV         R2, R5 
    /*00030c54*/ BL          0x0000000000030C54          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*00030c58*/ CMP         R0, #0 
    /*00030c5c*/ BNE         VI_DRV_CheckNRXV2AutoParam_x30c90
    VI_DRV_CheckNRXV2AutoParam_x30c60:
    /*00030c60*/ MOVW        R3, #8757                   @ 0x2235 
    /*00030c64*/ MOVW        R2, #0                      @ .LC298 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfd44] 
    /*00030c68*/ STR         R7, [SP, #4] 
    /*00030c6c*/ MOVT        R2, #0                      @ .LC298 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfd44] 
    /*00030c70*/ STR         R3, [SP] 
    /*00030c74*/ B           VI_DRV_CheckNRXV2AutoParam_x30b70
    VI_DRV_CheckNRXV2AutoParam_x30c78:
    /*00030c78*/ MOVW        R3, #8734                   @ 0x221e 
    /*00030c7c*/ MOVW        R2, #0                      @ .LC295 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfc50] 
    /*00030c80*/ STR         R0, [SP, #4] 
    /*00030c84*/ MOVT        R2, #0                      @ .LC295 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfc50] 
    /*00030c88*/ STR         R3, [SP] 
    /*00030c8c*/ B           VI_DRV_CheckNRXV2AutoParam_x30b70
    VI_DRV_CheckNRXV2AutoParam_x30c90:
    /*00030c90*/ SUB         R1, R5, #1 
    /*00030c94*/ ADD         R0, SP, #23 
    /*00030c98*/ ADD         R1, SL, R1 
    /*00030c9c*/ MOV         R2, #1 
    /*00030ca0*/ BL          0x0000000000030CA0          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*00030ca4*/ CMP         R0, #0 
    /*00030ca8*/ BNE         VI_DRV_CheckNRXV2AutoParam_x30c60
    /*00030cac*/ MOV         R0, R9 
    /*00030cb0*/ ADD         R4, R4, #65536              @ 0x10000 
    /*00030cb4*/ BL          0x0000000000030CB4          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00030cb8*/ CMP         R0, #0 
    /*00030cbc*/ STR         R0, [R4, #3740]             @ 0xe9c 
    /*00030cc0*/ BEQ         VI_DRV_CheckNRXV2AutoParam_x30d8c
    /*00030cc4*/ MOV         R0, R5 
    /*00030cc8*/ BL          0x0000000000030CC8          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00030ccc*/ CMP         R0, #0 
    /*00030cd0*/ STR         R0, [R4, #3744]             @ 0xea0 
    /*00030cd4*/ BEQ         VI_DRV_CheckNRXV2AutoParam_x30db4
    /*00030cd8*/ MOV         R2, R9 
    /*00030cdc*/ LDR         R1, [R6, #4] 
    /*00030ce0*/ LDR         R0, [R4, #3740]             @ 0xe9c 
    /*00030ce4*/ BL          0x0000000000030CE4          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*00030ce8*/ CMP         R0, #0 
    /*00030cec*/ BEQ         VI_DRV_CheckNRXV2AutoParam_x30d18
    /*00030cf0*/ MOVW        R3, #8780                   @ 0x224c 
    /*00030cf4*/ STR         R7, [SP, #4] 
    /*00030cf8*/ STR         R3, [SP] 
    /*00030cfc*/ MOVW        R2, #0                      @ .LC301 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfe4c] 
    /*00030d00*/ LDR         R3, [PC, #252]              @ 0x0000000000030e04 
    /*00030d04*/ MOVT        R2, #0                      @ .LC301 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfe4c] 
    /*00030d08*/ MOV         R1, #16 
    /*00030d0c*/ MOV         R0, #3 
    /*00030d10*/ BL          0x0000000000030D10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030d14*/ B           VI_DRV_CheckNRXV2AutoParam_x30b84
    VI_DRV_CheckNRXV2AutoParam_x30d18:
    /*00030d18*/ LDR         R1, [R6, #8] 
    /*00030d1c*/ MOV         R2, R5 
    /*00030d20*/ LDR         R0, [R4, #3744]             @ 0xea0 
    /*00030d24*/ BL          0x0000000000030D24          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*00030d28*/ SUBS        R6, R0, #0 
    /*00030d2c*/ BNE         VI_DRV_CheckNRXV2AutoParam_x30ddc
    /*00030d30*/ LDR         R3, [R4, #3740]             @ 0xe9c 
    /*00030d34*/ MOV         R5, R6 
    /*00030d38*/ MOV         R1, #99                     @ 0x63 
    /*00030d3c*/ MOV         R9, #30 
    /*00030d40*/ LDR         R0, [R3] 
    /*00030d44*/ B           VI_DRV_CheckNRXV2AutoParam_x30d58
    VI_DRV_CheckNRXV2AutoParam_x30d48:
    /*00030d48*/ LDR         R3, [R4, #3740]             @ 0xe9c 
    /*00030d4c*/ LDR         R0, [R3, R5, LSL #2] 
    /*00030d50*/ LDR         R1, [R3, R6] 
    /*00030d54*/ ADD         R6, R6, #4 
    VI_DRV_CheckNRXV2AutoParam_x30d58:
    /*00030d58*/ BL          0x0000000000030D58          @ VI_DRV_CheckPipeNRXISOParam [R_ARM_CALL: .text+0x30a68] 
    /*00030d5c*/ CMP         R0, #0 
    /*00030d60*/ MOV         R0, R7 
    /*00030d64*/ BNE         VI_DRV_CheckNRXV2AutoParam_x30b84
    /*00030d68*/ LDR         R1, [R4, #3744]             @ 0xea0 
    /*00030d6c*/ MLA         R1, R9, R5, R1 
    /*00030d70*/ BL          0x0000000000030D70          @ VI_DRV_CheckNRXV2BaseParam [R_ARM_CALL: .text+0x30674] 
    /*00030d74*/ ADD         R5, R5, #1 
    /*00030d78*/ CMP         R0, #0 
    /*00030d7c*/ BNE         VI_DRV_CheckNRXV2AutoParam_x30b84
    /*00030d80*/ CMP         R8, R5 
    /*00030d84*/ BHI         VI_DRV_CheckNRXV2AutoParam_x30d48
    /*00030d88*/ B           VI_DRV_CheckNRXV2AutoParam_x30bbc
    VI_DRV_CheckNRXV2AutoParam_x30d8c:
    /*00030d8c*/ MOVW        R3, #8765                   @ 0x223d 
    /*00030d90*/ STR         R7, [SP, #4] 
    /*00030d94*/ STR         R3, [SP] 
    /*00030d98*/ MOVW        R2, #0                      @ .LC299 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfdc0] 
    /*00030d9c*/ LDR         R3, [PC, #96]               @ 0x0000000000030e04 
    /*00030da0*/ MOVT        R2, #0                      @ .LC299 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfdc0] 
    /*00030da4*/ MOV         R1, #16 
    /*00030da8*/ MOV         R0, #3 
    /*00030dac*/ BL          0x0000000000030DAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030db0*/ B           VI_DRV_CheckNRXV2AutoParam_x30b84
    VI_DRV_CheckNRXV2AutoParam_x30db4:
    /*00030db4*/ MOVW        R3, #8773                   @ 0x2245 
    /*00030db8*/ STR         R7, [SP, #4] 
    /*00030dbc*/ STR         R3, [SP] 
    /*00030dc0*/ MOVW        R2, #0                      @ .LC300 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfe04] 
    /*00030dc4*/ LDR         R3, [PC, #56]               @ 0x0000000000030e04 
    /*00030dc8*/ MOVT        R2, #0                      @ .LC300 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfe04] 
    /*00030dcc*/ MOV         R1, #16 
    /*00030dd0*/ MOV         R0, #3 
    /*00030dd4*/ BL          0x0000000000030DD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030dd8*/ B           VI_DRV_CheckNRXV2AutoParam_x30b84
    VI_DRV_CheckNRXV2AutoParam_x30ddc:
    /*00030ddc*/ MOVW        R3, #8787                   @ 0x2253 
    /*00030de0*/ STR         R7, [SP, #4] 
    /*00030de4*/ STR         R3, [SP] 
    /*00030de8*/ MOVW        R2, #0                      @ .LC302 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfecc] 
    /*00030dec*/ LDR         R3, [PC, #16]               @ 0x0000000000030e04 
    /*00030df0*/ MOVT        R2, #0                      @ .LC302 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfecc] 
    /*00030df4*/ MOV         R1, #16 
    /*00030df8*/ MOV         R0, #3 
    /*00030dfc*/ BL          0x0000000000030DFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030e00*/ B           VI_DRV_CheckNRXV2AutoParam_x30b84
    /*00030e04*/ ANDEQ       R1, R0, R8, ASR #27 
FUNC_END VI_DRV_CheckNRXV2AutoParam


FUNC_BEGIN VI_DRV_CheckNRXV2Param
    /*00030e08*/ LDR         R3, [R1] 
    /*00030e0c*/ CMP         R3, #1 
    /*00030e10*/ BHI         VI_DRV_CheckNRXV2Param_x30e28
    /*00030e14*/ BEQ         VI_DRV_CheckNRXV2Param_x30e20
    /*00030e18*/ ADD         R1, R1, #36                 @ 0x24 
    VI_DRV_CheckNRXV2Param_x30e1c:
    /*00030e1c*/ B           VI_DRV_CheckNRXV2Param_x30e1c@ VI_DRV_CheckNRXV2AutoParam [R_ARM_JUMP24: .text+0x30af8] 
    VI_DRV_CheckNRXV2Param_x30e20:
    /*00030e20*/ ADD         R1, R1, #4 
    VI_DRV_CheckNRXV2Param_x30e24:
    /*00030e24*/ B           VI_DRV_CheckNRXV2Param_x30e24@ VI_DRV_CheckNRXV2BaseParam [R_ARM_JUMP24: .text+0x30674] 
    VI_DRV_CheckNRXV2Param_x30e28:
    /*00030e28*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00030e2c*/ SUB         SP, SP, #20 
    /*00030e30*/ MOVW        R1, #8847                   @ 0x228f 
    /*00030e34*/ MOVW        R2, #0                      @ .LC303 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xff48] 
    /*00030e38*/ STR         R0, [SP, #8] 
    /*00030e3c*/ MOVT        R2, #0                      @ .LC303 [R_ARM_MOVT_ABS: .rodata.str1.4+0xff48] 
    /*00030e40*/ STR         R3, [SP, #4] 
    /*00030e44*/ MOV         R0, #3 
    /*00030e48*/ STR         R1, [SP] 
    /*00030e4c*/ MOV         R1, #16 
    /*00030e50*/ LDR         R3, [PC, #16]               @ 0x0000000000030e68 
    /*00030e54*/ BL          0x0000000000030E54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030e58*/ MOVW        R0, #32771                  @ 0x8003 
    /*00030e5c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00030e60*/ ADD         SP, SP, #20 
    /*00030e64*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00030e68*/ ANDEQ       R1, R0, R4, ROR #27 
FUNC_END VI_DRV_CheckNRXV2Param


FUNC_BEGIN VI_DRV_CheckNRXParam
    /*00030e6c*/ LDR         R3, [R1] 
    /*00030e70*/ CMP         R3, #2 
    /*00030e74*/ BNE         VI_DRV_CheckNRXParam_x30e80
    /*00030e78*/ ADD         R1, R1, #4 
    VI_DRV_CheckNRXParam_x30e7c:
    /*00030e7c*/ B           VI_DRV_CheckNRXParam_x30e7c @ VI_DRV_CheckNRXV2Param [R_ARM_JUMP24: .text+0x30e08] 
    VI_DRV_CheckNRXParam_x30e80:
    /*00030e80*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00030e84*/ SUB         SP, SP, #12 
    /*00030e88*/ MOV         R1, #16 
    /*00030e8c*/ MOVW        R2, #0                      @ .LC304 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xffc0] 
    /*00030e90*/ STR         R3, [SP, #4] 
    /*00030e94*/ MOVT        R2, #0                      @ .LC304 [R_ARM_MOVT_ABS: .rodata.str1.4+0xffc0] 
    /*00030e98*/ MOVW        R3, #8874                   @ 0x22aa 
    /*00030e9c*/ MOV         R0, #3 
    /*00030ea0*/ STR         R3, [SP] 
    /*00030ea4*/ LDR         R3, [PC, #16]               @ 0x0000000000030ebc 
    /*00030ea8*/ BL          0x0000000000030EA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00030eac*/ MOVW        R0, #32771                  @ 0x8003 
    /*00030eb0*/ MOVT        R0, #40976                  @ 0xa010 
    /*00030eb4*/ ADD         SP, SP, #12 
    /*00030eb8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00030ebc*/ STRDEQ      R1, [R0], -IP 
FUNC_END VI_DRV_CheckNRXParam


FUNC_BEGIN VI_DRV_SetPipeNRXV2Param
    /*00030ec0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00030ec4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00030ec8*/ ADD         R0, R3, R0, LSL #2 
    /*00030ecc*/ MOV         R2, #30 
    /*00030ed0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00030ed4*/ MOV         R6, R1 
    /*00030ed8*/ LDR         R4, [R0, #728]              @ 0x2d8 
    /*00030edc*/ LDR         R3, [R1, #4]! 
    /*00030ee0*/ ADD         R7, R4, #32768              @ 0x8000 
    /*00030ee4*/ ADD         R5, R4, #34048              @ 0x8500 
    /*00030ee8*/ ADD         R5, R5, #176                @ 0xb0 
    /*00030eec*/ ADD         R1, R1, #4 
    /*00030ef0*/ ADD         R0, R5, #4 
    /*00030ef4*/ STR         R3, [R7, #1456]             @ 0x5b0 
    /*00030ef8*/ BL          0x0000000000030EF8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00030efc*/ LDR         R6, [R6, #40]               @ 0x28 
    /*00030f00*/ ADD         R4, R4, #65536              @ 0x10000 
    /*00030f04*/ STR         R6, [R7, #1492]             @ 0x5d4 
    /*00030f08*/ LDR         R1, [R4, #3740]             @ 0xe9c 
    /*00030f0c*/ CMP         R1, #0 
    /*00030f10*/ BEQ         VI_DRV_SetPipeNRXV2Param_x30f30
    /*00030f14*/ LSL         R2, R6, #2 
    /*00030f18*/ ADD         R0, R5, #40                 @ 0x28 
    /*00030f1c*/ BL          0x0000000000030F1C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00030f20*/ LDR         R0, [R4, #3740]             @ 0xe9c 
    /*00030f24*/ BL          0x0000000000030F24          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00030f28*/ MOV         R3, #0 
    /*00030f2c*/ STR         R3, [R4, #3740]             @ 0xe9c 
    VI_DRV_SetPipeNRXV2Param_x30f30:
    /*00030f30*/ LDR         R1, [R4, #3744]             @ 0xea0 
    /*00030f34*/ CMP         R1, #0 
    /*00030f38*/ BEQ         VI_DRV_SetPipeNRXV2Param_x30f5c
    /*00030f3c*/ MOV         R2, #30 
    /*00030f40*/ ADD         R0, R5, #104                @ 0x68 
    /*00030f44*/ MUL         R2, R2, R6 
    /*00030f48*/ BL          0x0000000000030F48          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00030f4c*/ LDR         R0, [R4, #3744]             @ 0xea0 
    /*00030f50*/ BL          0x0000000000030F50          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00030f54*/ MOV         R3, #0 
    /*00030f58*/ STR         R3, [R4, #3744]             @ 0xea0 
    VI_DRV_SetPipeNRXV2Param_x30f5c:
    /*00030f5c*/ MOV         R0, #0 
    /*00030f60*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_DRV_SetPipeNRXV2Param


FUNC_BEGIN VI_DRV_SetPipeNRXParam
    /*00030f64*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00030f68*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00030f6c*/ ADD         R3, R3, R0, LSL #2 
    /*00030f70*/ MOV         IP, #1 
    /*00030f74*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00030f78*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*00030f7c*/ LDR         LR, [R1] 
    /*00030f80*/ ADD         R3, R3, #32768              @ 0x8000 
    /*00030f84*/ STR         LR, [R3, #1452]             @ 0x5ac 
    /*00030f88*/ STR         IP, [R3, #2056]             @ 0x808 
    /*00030f8c*/ LDR         R3, [R1] 
    /*00030f90*/ CMP         R3, #2 
    /*00030f94*/ BEQ         VI_DRV_SetPipeNRXParam_x30fa0
    /*00030f98*/ MOV         R0, #0 
    /*00030f9c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_SetPipeNRXParam_x30fa0:
    /*00030fa0*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    VI_DRV_SetPipeNRXParam_x30fa4:
    /*00030fa4*/ B           VI_DRV_SetPipeNRXParam_x30fa4@ VI_DRV_SetPipeNRXV2Param [R_ARM_JUMP24: .text+0x30ec0] 
FUNC_END VI_DRV_SetPipeNRXParam


FUNC_BEGIN VI_DRV_GetPipeNRXV2Param
    /*00030fa8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00030fac*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00030fb0*/ ADD         R3, R3, R0, LSL #2 
    /*00030fb4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00030fb8*/ MOV         R5, R1 
    /*00030fbc*/ LDR         R4, [R3, #728]              @ 0x2d8 
    /*00030fc0*/ SUB         SP, SP, #20 
    /*00030fc4*/ ADD         R3, R4, #32768              @ 0x8000 
    /*00030fc8*/ LDR         R2, [R3, #1456]             @ 0x5b0 
    /*00030fcc*/ STR         R2, [R1, #4] 
    /*00030fd0*/ LDR         R6, [R3, #1492]             @ 0x5d4 
    /*00030fd4*/ CMP         R6, #0 
    /*00030fd8*/ ADDEQ       R4, R4, #34048              @ 0x8500 
    /*00030fdc*/ STR         R6, [R1, #40]               @ 0x28 
    /*00030fe0*/ ADDEQ       R4, R4, #176                @ 0xb0 
    /*00030fe4*/ BEQ         VI_DRV_GetPipeNRXV2Param_x310b4
    /*00030fe8*/ LDR         R3, [R1, #48]               @ 0x30 
    /*00030fec*/ MOV         R7, R0 
    /*00030ff0*/ CMP         R3, #0 
    /*00030ff4*/ BEQ         VI_DRV_GetPipeNRXV2Param_x31194
    /*00030ff8*/ LDR         R8, [R1, #44]               @ 0x2c 
    /*00030ffc*/ CMP         R8, #0 
    /*00031000*/ BEQ         VI_DRV_GetPipeNRXV2Param_x31164
    /*00031004*/ LSLS        R9, R6, #2 
    /*00031008*/ MOV         R3, #0 
    /*0003100c*/ STRB        R3, [SP, #15] 
    /*00031010*/ BNE         VI_DRV_GetPipeNRXV2Param_x310d0
    VI_DRV_GetPipeNRXV2Param_x31014:
    /*00031014*/ MOVW        R2, #0                      @ .LC309 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10178] 
    /*00031018*/ MOVT        R2, #0                      @ .LC309 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10178] 
    /*0003101c*/ MOVW        R3, #8975                   @ 0x230f 
    /*00031020*/ STR         R7, [SP, #4] 
    /*00031024*/ STR         R3, [SP] 
    VI_DRV_GetPipeNRXV2Param_x31028:
    /*00031028*/ LDR         R3, [PC, #380]              @ 0x00000000000311ac 
    /*0003102c*/ MOV         R1, #16 
    /*00031030*/ MOV         R0, #3 
    /*00031034*/ BL          0x0000000000031034          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00031038*/ MOVW        R0, #32771                  @ 0x8003 
    /*0003103c*/ MOVT        R0, #40976                  @ 0xa010 
    VI_DRV_GetPipeNRXV2Param_x31040:
    /*00031040*/ ADD         SP, SP, #20 
    /*00031044*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_GetPipeNRXV2Param_x31048:
    /*00031048*/ MOV         R2, R6 
    /*0003104c*/ MOV         R1, R8 
    /*00031050*/ MOV         R0, #1 
    /*00031054*/ BL          0x0000000000031054          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*00031058*/ CMP         R0, #0 
    /*0003105c*/ BEQ         VI_DRV_GetPipeNRXV2Param_x3111c
    /*00031060*/ SUB         R0, R6, #1 
    /*00031064*/ ADD         R1, SP, #15 
    /*00031068*/ ADD         R0, R8, R0 
    /*0003106c*/ MOV         R2, #1 
    /*00031070*/ BL          0x0000000000031070          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*00031074*/ CMP         R0, #0 
    /*00031078*/ BNE         VI_DRV_GetPipeNRXV2Param_x3111c
    /*0003107c*/ ADD         R4, R4, #34048              @ 0x8500 
    /*00031080*/ MOV         R2, R9 
    /*00031084*/ ADD         R4, R4, #176                @ 0xb0 
    /*00031088*/ LDR         R0, [R5, #44]               @ 0x2c 
    /*0003108c*/ ADD         R1, R4, #40                 @ 0x28 
    /*00031090*/ BL          0x0000000000031090          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*00031094*/ CMP         R0, #0 
    /*00031098*/ BNE         VI_DRV_GetPipeNRXV2Param_x3114c
    /*0003109c*/ MOV         R2, R6 
    /*000310a0*/ ADD         R1, R4, #104                @ 0x68 
    /*000310a4*/ LDR         R0, [R5, #48]               @ 0x30 
    /*000310a8*/ BL          0x00000000000310A8          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*000310ac*/ CMP         R0, #0 
    /*000310b0*/ BNE         VI_DRV_GetPipeNRXV2Param_x31134
    VI_DRV_GetPipeNRXV2Param_x310b4:
    /*000310b4*/ ADD         R1, R4, #4 
    /*000310b8*/ ADD         R0, R5, #8 
    /*000310bc*/ MOV         R2, #30 
    /*000310c0*/ BL          0x00000000000310C0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000310c4*/ MOV         R0, #0 
    /*000310c8*/ ADD         SP, SP, #20 
    /*000310cc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_GetPipeNRXV2Param_x310d0:
    /*000310d0*/ MOV         R2, R9 
    /*000310d4*/ MOV         R1, R8 
    /*000310d8*/ MOV         R0, #1 
    /*000310dc*/ BL          0x00000000000310DC          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*000310e0*/ CMP         R0, #0 
    /*000310e4*/ BEQ         VI_DRV_GetPipeNRXV2Param_x31014
    /*000310e8*/ SUB         R0, R9, #1 
    /*000310ec*/ MOV         R2, #1 
    /*000310f0*/ ADD         R0, R8, R0 
    /*000310f4*/ ADD         R1, SP, #15 
    /*000310f8*/ BL          0x00000000000310F8          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*000310fc*/ CMP         R0, #0 
    /*00031100*/ BNE         VI_DRV_GetPipeNRXV2Param_x31014
    /*00031104*/ MOV         R3, #30 
    /*00031108*/ STRB        R0, [SP, #15] 
    /*0003110c*/ MUL         R6, R3, R6 
    /*00031110*/ LDR         R8, [R5, #48]               @ 0x30 
    /*00031114*/ CMP         R6, #0 
    /*00031118*/ BNE         VI_DRV_GetPipeNRXV2Param_x31048
    VI_DRV_GetPipeNRXV2Param_x3111c:
    /*0003111c*/ MOVW        R3, #8981                   @ 0x2315 
    /*00031120*/ MOVW        R2, #0                      @ .LC298 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfd44] 
    /*00031124*/ STR         R7, [SP, #4] 
    /*00031128*/ MOVT        R2, #0                      @ .LC298 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfd44] 
    /*0003112c*/ STR         R3, [SP] 
    /*00031130*/ B           VI_DRV_GetPipeNRXV2Param_x31028
    VI_DRV_GetPipeNRXV2Param_x31134:
    /*00031134*/ MOVW        R3, #8993                   @ 0x2321 
    /*00031138*/ MOVW        R2, #0                      @ .LC308 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x100fc] 
    /*0003113c*/ STR         R7, [SP, #4] 
    /*00031140*/ MOVT        R2, #0                      @ .LC308 [R_ARM_MOVT_ABS: .rodata.str1.4+0x100fc] 
    /*00031144*/ STR         R3, [SP] 
    /*00031148*/ B           VI_DRV_GetPipeNRXV2Param_x31028
    VI_DRV_GetPipeNRXV2Param_x3114c:
    /*0003114c*/ MOVW        R3, #8987                   @ 0x231b 
    /*00031150*/ MOVW        R2, #0                      @ .LC307 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10084] 
    /*00031154*/ STR         R7, [SP, #4] 
    /*00031158*/ MOVT        R2, #0                      @ .LC307 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10084] 
    /*0003115c*/ STR         R3, [SP] 
    /*00031160*/ B           VI_DRV_GetPipeNRXV2Param_x31028
    VI_DRV_GetPipeNRXV2Param_x31164:
    /*00031164*/ MOVW        R2, #0                      @ .LC306 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10048] 
    /*00031168*/ MOVT        R2, #0                      @ .LC306 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10048] 
    /*0003116c*/ MOVW        R3, #8969                   @ 0x2309 
    /*00031170*/ STR         R0, [SP, #4] 
    /*00031174*/ STR         R3, [SP] 
    VI_DRV_GetPipeNRXV2Param_x31178:
    /*00031178*/ LDR         R3, [PC, #44]               @ 0x00000000000311ac 
    /*0003117c*/ MOV         R1, #16 
    /*00031180*/ MOV         R0, #3 
    /*00031184*/ BL          0x0000000000031184          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00031188*/ MOVW        R0, #32774                  @ 0x8006 
    /*0003118c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00031190*/ B           VI_DRV_GetPipeNRXV2Param_x31040
    VI_DRV_GetPipeNRXV2Param_x31194:
    /*00031194*/ MOVW        R3, #8963                   @ 0x2303 
    /*00031198*/ MOVW        R2, #0                      @ .LC305 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10008] 
    /*0003119c*/ STR         R0, [SP, #4] 
    /*000311a0*/ MOVT        R2, #0                      @ .LC305 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10008] 
    /*000311a4*/ STR         R3, [SP] 
    /*000311a8*/ B           VI_DRV_GetPipeNRXV2Param_x31178
    /*000311ac*/ ANDEQ       R1, R0, R4, LSL LR 
FUNC_END VI_DRV_GetPipeNRXV2Param


FUNC_BEGIN VI_DRV_GetPipeNRXParam
    /*000311b0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000311b4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000311b8*/ ADD         R3, R3, R0, LSL #2 
    /*000311bc*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*000311c0*/ ADD         R3, R3, #32768              @ 0x8000 
    /*000311c4*/ LDR         R3, [R3, #1452]             @ 0x5ac 
    /*000311c8*/ CMP         R3, #2 
    /*000311cc*/ STR         R3, [R1] 
    /*000311d0*/ BNE         VI_DRV_GetPipeNRXParam_x311d8
    VI_DRV_GetPipeNRXParam_x311d4:
    /*000311d4*/ B           VI_DRV_GetPipeNRXParam_x311d4@ VI_DRV_GetPipeNRXV2Param [R_ARM_JUMP24: .text+0x30fa8] 
    VI_DRV_GetPipeNRXParam_x311d8:
    /*000311d8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000311dc*/ SUB         SP, SP, #12 
    /*000311e0*/ MOV         R1, #16 
    /*000311e4*/ MOVW        R2, #0                      @ .LC304 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xffc0] 
    /*000311e8*/ STR         R3, [SP, #4] 
    /*000311ec*/ MOVT        R2, #0                      @ .LC304 [R_ARM_MOVT_ABS: .rodata.str1.4+0xffc0] 
    /*000311f0*/ MOVW        R3, #9018                   @ 0x233a 
    /*000311f4*/ MOV         R0, #3 
    /*000311f8*/ STR         R3, [SP] 
    /*000311fc*/ LDR         R3, [PC, #16]               @ 0x0000000000031214 
    /*00031200*/ BL          0x0000000000031200          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00031204*/ MOVW        R0, #32771                  @ 0x8003 
    /*00031208*/ MOVT        R0, #40976                  @ 0xa010 
    /*0003120c*/ ADD         SP, SP, #12 
    /*00031210*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00031214*/ ANDEQ       R1, R0, R0, LSR LR 
FUNC_END VI_DRV_GetPipeNRXParam


FUNC_BEGIN VI_DRV_IsNRXV1ParamSupport
    /*00031218*/ MOV         R0, #0 
    /*0003121c*/ BX          LR 
FUNC_END VI_DRV_IsNRXV1ParamSupport


FUNC_BEGIN VI_DRV_IsNRXV2ParamSupport
    /*00031220*/ MOV         R0, #1 
    /*00031224*/ BX          LR 
FUNC_END VI_DRV_IsNRXV2ParamSupport


FUNC_BEGIN VI_DRV_GetNRInterfaceType
    /*00031228*/ MOV         R3, #0 
    /*0003122c*/ STR         R3, [R1] 
    /*00031230*/ MOV         R0, R3 
    /*00031234*/ BX          LR 
FUNC_END VI_DRV_GetNRInterfaceType


FUNC_BEGIN VI_DRV_GetNRVersion
    /*00031238*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0003123c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031240*/ ADD         R3, R3, R0, LSL #2 
    /*00031244*/ MOV         R0, #0 
    /*00031248*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*0003124c*/ ADD         R3, R3, #32768              @ 0x8000 
    /*00031250*/ LDR         R3, [R3, #1452]             @ 0x5ac 
    /*00031254*/ STR         R3, [R2] 
    /*00031258*/ BX          LR 
FUNC_END VI_DRV_GetNRVersion


FUNC_BEGIN VI_DRV_ProcPipeNRXV1Param
    /*0003125c*/ MOV         R0, #0 
    /*00031260*/ BX          LR 
FUNC_END VI_DRV_ProcPipeNRXV1Param


FUNC_BEGIN VI_DRV_ProcPipeNRXV2Param
    /*00031264*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031268*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0003126c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00031270*/ ADD         R4, R3, R0, LSL #2 
    /*00031274*/ SUB         SP, SP, #108                @ 0x6c 
    /*00031278*/ MOV         R7, R1 
    /*0003127c*/ LDR         R5, [R4, #728]              @ 0x2d8 
    /*00031280*/ MOV         R6, R0 
    /*00031284*/ MOV         R2, #68                     @ 0x44 
    /*00031288*/ ADD         R0, SP, #36                 @ 0x24 
    /*0003128c*/ ADD         R1, R5, #34048              @ 0x8500 
    /*00031290*/ ADD         R1, R1, #44                 @ 0x2c 
    /*00031294*/ BL          0x0000000000031294          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00031298*/ LDR         R3, [SP, #68]               @ 0x44 
    /*0003129c*/ CMP         R3, #1 
    /*000312a0*/ BEQ         VI_DRV_ProcPipeNRXV2Param_x312b0
    VI_DRV_ProcPipeNRXV2Param_x312a4:
    /*000312a4*/ MOV         R0, #0 
    /*000312a8*/ ADD         SP, SP, #108                @ 0x6c 
    /*000312ac*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_ProcPipeNRXV2Param_x312b0:
    /*000312b0*/ LDR         R3, [R4, #728]              @ 0x2d8 
    /*000312b4*/ ADD         R3, R3, #32768              @ 0x8000 
    /*000312b8*/ LDR         R3, [R3, #1452]             @ 0x5ac 
    /*000312bc*/ CMP         R3, #2 
    /*000312c0*/ BNE         VI_DRV_ProcPipeNRXV2Param_x312a4
    /*000312c4*/ ADD         R3, R5, #65536              @ 0x10000 
    /*000312c8*/ ADD         IP, R5, #68608              @ 0x10c00 
    /*000312cc*/ ADD         R5, R5, #86016              @ 0x15000 
    /*000312d0*/ MOV         R2, R6 
    /*000312d4*/ LDR         R3, [R3, #3128]             @ 0xc38 
    /*000312d8*/ MOVW        R1, #0                      @ .LC310 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x101e8] 
    /*000312dc*/ MOVT        R1, #0                      @ .LC310 [R_ARM_MOVT_ABS: .rodata.str1.4+0x101e8] 
    /*000312e0*/ CMP         R3, #0 
    /*000312e4*/ LDR         R3, [R5, #2800]             @ 0xaf0 
    /*000312e8*/ ADDEQ       IP, IP, #676                @ 0x2a4 
    /*000312ec*/ ADDNE       IP, IP, #60                 @ 0x3c 
    /*000312f0*/ LDRH        R0, [IP, #28] 
    /*000312f4*/ UBFX        R0, R0, #0, #9 
    /*000312f8*/ STR         R0, [SP, #28] 
    /*000312fc*/ LDRH        LR, [IP, #24] 
    /*00031300*/ MOV         R0, R7 
    /*00031304*/ UBFX        LR, LR, #0, #9 
    /*00031308*/ STR         LR, [SP, #24] 
    /*0003130c*/ LDRB        LR, [IP, #29] 
    /*00031310*/ UBFX        LR, LR, #1, #3 
    /*00031314*/ STR         LR, [SP, #20] 
    /*00031318*/ LDRB        LR, [IP, #25] 
    /*0003131c*/ UBFX        LR, LR, #1, #3 
    /*00031320*/ STR         LR, [SP, #16] 
    /*00031324*/ LDRB        LR, [IP, #25] 
    /*00031328*/ LSR         LR, LR, #5 
    /*0003132c*/ STR         LR, [SP, #12] 
    /*00031330*/ LDRB        LR, [IP, #20] 
    /*00031334*/ STR         LR, [SP, #8] 
    /*00031338*/ LDRB        LR, [IP, #17] 
    /*0003133c*/ STR         LR, [SP, #4] 
    /*00031340*/ LDRB        IP, [IP, #14] 
    /*00031344*/ STR         IP, [SP] 
    /*00031348*/ BL          0x0000000000031348          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0003134c*/ MOV         R0, R7 
    /*00031350*/ MOVW        R1, #0                      @ .LC311 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10210] 
    /*00031354*/ MOVT        R1, #0                      @ .LC311 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10210] 
    /*00031358*/ BL          0x0000000000031358          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0003135c*/ MOV         R0, #0 
    /*00031360*/ ADD         SP, SP, #108                @ 0x6c 
    /*00031364*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VI_DRV_ProcPipeNRXV2Param


FUNC_BEGIN VI_DRV_SetSnapPipeIso
    /*00031368*/ MOV         R0, #0 
    /*0003136c*/ BX          LR 
FUNC_END VI_DRV_SetSnapPipeIso


FUNC_BEGIN VI_DRV_SetIspDISAttr
    /*00031370*/ MOV         R0, #0 
    /*00031374*/ BX          LR 
FUNC_END VI_DRV_SetIspDISAttr


FUNC_BEGIN VI_DRV_GetIspDISAttr
    /*00031378*/ MOV         R0, #0 
    /*0003137c*/ BX          LR 
FUNC_END VI_DRV_GetIspDISAttr


FUNC_BEGIN VI_DRV_CapGetIDByIrq
    /*00031380*/ MOV         R0, #0 
    /*00031384*/ BX          LR 
FUNC_END VI_DRV_CapGetIDByIrq


FUNC_BEGIN VI_DRV_IsMipiIntfMode
    /*00031388*/ SUB         R0, R0, #5 
    /*0003138c*/ CMP         R0, #5 
    /*00031390*/ MOVHI       R0, #0 
    /*00031394*/ MOVLS       R0, #1 
    /*00031398*/ BX          LR 
FUNC_END VI_DRV_IsMipiIntfMode


FUNC_BEGIN VI_DRV_CapReportInt
    /*0003139c*/ CMP         R0, #3 
    /*000313a0*/ LDRLS       PC, [PC, R0, LSL #2] 
    /*000313a4*/ B           VI_DRV_CapReportInt_x313d8
    /*000313a8*/ LDRDEQ      R1, [R3], -R0 
    /*000313ac*/ ANDEQ       R1, R3, R8, ASR #7 
    /*000313b0*/ ANDEQ       R1, R3, R0, ASR #7 
    /*000313b4*/ @           <UNDEFINED> instruction: 0x000313b8 
    /*000313b8*/ UBFX        R0, R1, #11, #1 
    /*000313bc*/ BX          LR 
    /*000313c0*/ UBFX        R0, R1, #10, #1 
    /*000313c4*/ BX          LR 
    /*000313c8*/ UBFX        R0, R1, #9, #1 
    /*000313cc*/ BX          LR 
    /*000313d0*/ UBFX        R0, R1, #8, #1 
    /*000313d4*/ BX          LR 
    VI_DRV_CapReportInt_x313d8:
    /*000313d8*/ MOV         R0, #0 
    /*000313dc*/ BX          LR 
FUNC_END VI_DRV_CapReportInt


FUNC_BEGIN VI_DRV_GetCapIntStatus
    VI_DRV_GetCapIntStatus_x313e0:
    /*000313e0*/ B           VI_DRV_GetCapIntStatus_x313e0@ VI_HAL_GetCapIntStatus [R_ARM_JUMP24: .text+0x359bc] 
FUNC_END VI_DRV_GetCapIntStatus


FUNC_BEGIN VI_DRV_GetCapIntMask
    VI_DRV_GetCapIntMask_x313e4:
    /*000313e4*/ B           VI_DRV_GetCapIntMask_x313e4 @ VI_HAL_GetVicapIntMask [R_ARM_JUMP24: .text+0x35be4] 
FUNC_END VI_DRV_GetCapIntMask


FUNC_BEGIN VI_DRV_QueryCapBusErrStatus
    /*000313e8*/ TST         R1, #67108864               @ 0x4000000 
    /*000313ec*/ BXEQ        LR 
    /*000313f0*/ PUSH        {R4, R5, R6, LR} 
    /*000313f4*/ SUB         SP, SP, #8 
    /*000313f8*/ MOV         R4, R0 
    /*000313fc*/ BL          0x00000000000313FC          @ VI_HAL_GetDbgIntStatus [R_ARM_CALL: .text+0x359d4] 
    /*00031400*/ TST         R0, #1 
    /*00031404*/ MOV         R5, R0 
    /*00031408*/ BNE         VI_DRV_QueryCapBusErrStatus_x31424
    /*0003140c*/ TST         R5, #2 
    /*00031410*/ BNE         VI_DRV_QueryCapBusErrStatus_x314a8
    VI_DRV_QueryCapBusErrStatus_x31414:
    /*00031414*/ MOV         R0, R4 
    /*00031418*/ ADD         SP, SP, #8 
    /*0003141c*/ POP         {R4, R5, R6, LR} 
    VI_DRV_QueryCapBusErrStatus_x31420:
    /*00031420*/ B           VI_DRV_QueryCapBusErrStatus_x31420@ VI_HAL_ClearDbgIntStatus [R_ARM_JUMP24: .text+0x359ec] 
    VI_DRV_QueryCapBusErrStatus_x31424:
    /*00031424*/ MOV         R0, R4 
    /*00031428*/ BL          0x0000000000031428          @ VI_HAL_GetWrErrIntStatus [R_ARM_CALL: .text+0x35a08] 
    /*0003142c*/ TST         R0, #3 
    /*00031430*/ MOV         R6, R0 
    /*00031434*/ BNE         VI_DRV_QueryCapBusErrStatus_x315d4
    VI_DRV_QueryCapBusErrStatus_x31438:
    /*00031438*/ TST         R6, #12 
    /*0003143c*/ BNE         VI_DRV_QueryCapBusErrStatus_x315b0
    VI_DRV_QueryCapBusErrStatus_x31440:
    /*00031440*/ TST         R6, #48                     @ 0x30 
    /*00031444*/ BNE         VI_DRV_QueryCapBusErrStatus_x3158c
    VI_DRV_QueryCapBusErrStatus_x31448:
    /*00031448*/ TST         R6, #192                    @ 0xc0 
    /*0003144c*/ BNE         VI_DRV_QueryCapBusErrStatus_x31568
    VI_DRV_QueryCapBusErrStatus_x31450:
    /*00031450*/ TST         R6, #65536                  @ 0x10000 
    /*00031454*/ BNE         VI_DRV_QueryCapBusErrStatus_x31544
    VI_DRV_QueryCapBusErrStatus_x31458:
    /*00031458*/ TST         R6, #4194304                @ 0x400000 
    /*0003145c*/ BNE         VI_DRV_QueryCapBusErrStatus_x31520
    VI_DRV_QueryCapBusErrStatus_x31460:
    /*00031460*/ TST         R6, #8388608                @ 0x800000 
    /*00031464*/ BNE         VI_DRV_QueryCapBusErrStatus_x314fc
    VI_DRV_QueryCapBusErrStatus_x31468:
    /*00031468*/ TST         R6, #16777216               @ 0x1000000 
    /*0003146c*/ BNE         VI_DRV_QueryCapBusErrStatus_x314d8
    VI_DRV_QueryCapBusErrStatus_x31470:
    /*00031470*/ TST         R6, #33554432               @ 0x2000000 
    /*00031474*/ BEQ         VI_DRV_QueryCapBusErrStatus_x31498
    /*00031478*/ MOVW        R3, #9364                   @ 0x2494 
    /*0003147c*/ MOVW        R2, #0                      @ .LC320 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10410] 
    /*00031480*/ STR         R3, [SP] 
    /*00031484*/ MOVT        R2, #0                      @ .LC320 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10410] 
    /*00031488*/ LDR         R3, [PC, #360]              @ 0x00000000000315f8 
    /*0003148c*/ MOV         R1, #16 
    /*00031490*/ MOV         R0, #3 
    /*00031494*/ BL          0x0000000000031494          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_QueryCapBusErrStatus_x31498:
    /*00031498*/ MOV         R0, R4 
    /*0003149c*/ BL          0x000000000003149C          @ VI_HAL_ClearWrErrIntStatus [R_ARM_CALL: .text+0x35a20] 
    /*000314a0*/ TST         R5, #2 
    /*000314a4*/ BEQ         VI_DRV_QueryCapBusErrStatus_x31414
    VI_DRV_QueryCapBusErrStatus_x314a8:
    /*000314a8*/ MOVW        R3, #9388                   @ 0x24ac 
    /*000314ac*/ MOV         R1, #16 
    /*000314b0*/ STR         R3, [SP] 
    /*000314b4*/ MOVW        R2, #0                      @ .LC321 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10454] 
    /*000314b8*/ LDR         R3, [PC, #316]              @ 0x00000000000315fc 
    /*000314bc*/ MOVT        R2, #0                      @ .LC321 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10454] 
    /*000314c0*/ MOV         R0, #3 
    /*000314c4*/ BL          0x00000000000314C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000314c8*/ MOV         R0, R4 
    /*000314cc*/ ADD         SP, SP, #8 
    /*000314d0*/ POP         {R4, R5, R6, LR} 
    VI_DRV_QueryCapBusErrStatus_x314d4:
    /*000314d4*/ B           VI_DRV_QueryCapBusErrStatus_x314d4@ VI_HAL_ClearDbgIntStatus [R_ARM_JUMP24: .text+0x359ec] 
    VI_DRV_QueryCapBusErrStatus_x314d8:
    /*000314d8*/ MOVW        R3, #9359                   @ 0x248f 
    /*000314dc*/ MOVW        R2, #0                      @ .LC319 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x103cc] 
    /*000314e0*/ STR         R3, [SP] 
    /*000314e4*/ MOVT        R2, #0                      @ .LC319 [R_ARM_MOVT_ABS: .rodata.str1.4+0x103cc] 
    /*000314e8*/ LDR         R3, [PC, #264]              @ 0x00000000000315f8 
    /*000314ec*/ MOV         R1, #16 
    /*000314f0*/ MOV         R0, #3 
    /*000314f4*/ BL          0x00000000000314F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000314f8*/ B           VI_DRV_QueryCapBusErrStatus_x31470
    VI_DRV_QueryCapBusErrStatus_x314fc:
    /*000314fc*/ MOVW        R3, #9354                   @ 0x248a 
    /*00031500*/ MOVW        R2, #0                      @ .LC318 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10388] 
    /*00031504*/ STR         R3, [SP] 
    /*00031508*/ MOVT        R2, #0                      @ .LC318 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10388] 
    /*0003150c*/ LDR         R3, [PC, #228]              @ 0x00000000000315f8 
    /*00031510*/ MOV         R1, #16 
    /*00031514*/ MOV         R0, #3 
    /*00031518*/ BL          0x0000000000031518          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003151c*/ B           VI_DRV_QueryCapBusErrStatus_x31468
    VI_DRV_QueryCapBusErrStatus_x31520:
    /*00031520*/ MOVW        R3, #9349                   @ 0x2485 
    /*00031524*/ MOVW        R2, #0                      @ .LC317 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10344] 
    /*00031528*/ STR         R3, [SP] 
    /*0003152c*/ MOVT        R2, #0                      @ .LC317 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10344] 
    /*00031530*/ LDR         R3, [PC, #192]              @ 0x00000000000315f8 
    /*00031534*/ MOV         R1, #16 
    /*00031538*/ MOV         R0, #3 
    /*0003153c*/ BL          0x000000000003153C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00031540*/ B           VI_DRV_QueryCapBusErrStatus_x31460
    VI_DRV_QueryCapBusErrStatus_x31544:
    /*00031544*/ MOV         R3, #9344                   @ 0x2480 
    /*00031548*/ MOVW        R2, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10304] 
    /*0003154c*/ STR         R3, [SP] 
    /*00031550*/ MOVT        R2, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10304] 
    /*00031554*/ LDR         R3, [PC, #156]              @ 0x00000000000315f8 
    /*00031558*/ MOV         R1, #16 
    /*0003155c*/ MOV         R0, #3 
    /*00031560*/ BL          0x0000000000031560          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00031564*/ B           VI_DRV_QueryCapBusErrStatus_x31458
    VI_DRV_QueryCapBusErrStatus_x31568:
    /*00031568*/ MOVW        R3, #9339                   @ 0x247b 
    /*0003156c*/ MOVW        R2, #0                      @ .LC315 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x102c8] 
    /*00031570*/ STR         R3, [SP] 
    /*00031574*/ MOVT        R2, #0                      @ .LC315 [R_ARM_MOVT_ABS: .rodata.str1.4+0x102c8] 
    /*00031578*/ LDR         R3, [PC, #120]              @ 0x00000000000315f8 
    /*0003157c*/ MOV         R1, #16 
    /*00031580*/ MOV         R0, #3 
    /*00031584*/ BL          0x0000000000031584          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00031588*/ B           VI_DRV_QueryCapBusErrStatus_x31450
    VI_DRV_QueryCapBusErrStatus_x3158c:
    /*0003158c*/ MOVW        R3, #9333                   @ 0x2475 
    /*00031590*/ MOVW        R2, #0                      @ .LC314 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1028c] 
    /*00031594*/ STR         R3, [SP] 
    /*00031598*/ MOVT        R2, #0                      @ .LC314 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1028c] 
    /*0003159c*/ LDR         R3, [PC, #84]               @ 0x00000000000315f8 
    /*000315a0*/ MOV         R1, #16 
    /*000315a4*/ MOV         R0, #3 
    /*000315a8*/ BL          0x00000000000315A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000315ac*/ B           VI_DRV_QueryCapBusErrStatus_x31448
    VI_DRV_QueryCapBusErrStatus_x315b0:
    /*000315b0*/ MOVW        R3, #9327                   @ 0x246f 
    /*000315b4*/ MOVW        R2, #0                      @ .LC313 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10250] 
    /*000315b8*/ STR         R3, [SP] 
    /*000315bc*/ MOVT        R2, #0                      @ .LC313 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10250] 
    /*000315c0*/ LDR         R3, [PC, #48]               @ 0x00000000000315f8 
    /*000315c4*/ MOV         R1, #16 
    /*000315c8*/ MOV         R0, #3 
    /*000315cc*/ BL          0x00000000000315CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000315d0*/ B           VI_DRV_QueryCapBusErrStatus_x31440
    VI_DRV_QueryCapBusErrStatus_x315d4:
    /*000315d4*/ MOVW        R3, #9321                   @ 0x2469 
    /*000315d8*/ MOVW        R2, #0                      @ .LC312 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10214] 
    /*000315dc*/ STR         R3, [SP] 
    /*000315e0*/ MOVT        R2, #0                      @ .LC312 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10214] 
    /*000315e4*/ LDR         R3, [PC, #12]               @ 0x00000000000315f8 
    /*000315e8*/ MOV         R1, #16 
    /*000315ec*/ MOV         R0, #3 
    /*000315f0*/ BL          0x00000000000315F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000315f4*/ B           VI_DRV_QueryCapBusErrStatus_x31438
    /*000315f8*/ ANDEQ       R1, R0, R8, ASR #28 
    /*000315fc*/ ANDEQ       R1, R0, R8, ROR #28 
FUNC_END VI_DRV_QueryCapBusErrStatus


FUNC_BEGIN VI_DRV_GetFeWchIntStatus
    VI_DRV_GetFeWchIntStatus_x31600:
    /*00031600*/ B           VI_DRV_GetFeWchIntStatus_x31600@ VI_HAL_GetFeWchIntStatus [R_ARM_JUMP24: .text+0x36810] 
FUNC_END VI_DRV_GetFeWchIntStatus


FUNC_BEGIN VI_DRV_GetParallaIntStatus
    /*00031604*/ MOV         R0, #0 
    /*00031608*/ BX          LR 
FUNC_END VI_DRV_GetParallaIntStatus


FUNC_BEGIN VI_DRV_ClearFeWchInt
    VI_DRV_ClearFeWchInt_x3160c:
    /*0003160c*/ B           VI_DRV_ClearFeWchInt_x3160c @ VI_HAL_ClearWchInt [R_ARM_JUMP24: .text+0x3597c] 
FUNC_END VI_DRV_ClearFeWchInt


FUNC_BEGIN VI_DRV_ClearParallaIntStatus
    /*00031610*/ BX          LR 
FUNC_END VI_DRV_ClearParallaIntStatus


FUNC_BEGIN VI_DRV_SetDataLayout
    /*00031614*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00031618*/ MOV         R4, R1 
    /*0003161c*/ LDR         R3, [R1] 
    /*00031620*/ SUB         SP, SP, #12 
    /*00031624*/ MOV         R8, R0 
    /*00031628*/ CMP         R3, #3 
    /*0003162c*/ MOVEQ       R7, #1 
    /*00031630*/ BEQ         VI_DRV_SetDataLayout_x31644
    /*00031634*/ SUB         R3, R3, #5 
    /*00031638*/ CMP         R3, #5 
    /*0003163c*/ MOVHI       R7, #0 
    /*00031640*/ BLS         VI_DRV_SetDataLayout_x3175c
    VI_DRV_SetDataLayout_x31644:
    /*00031644*/ MOV         R1, R7 
    /*00031648*/ MOV         R0, R8 
    /*0003164c*/ BL          0x000000000003164C          @ VI_HAL_SetPortCompMode [R_ARM_CALL: .text+0x35d60] 
    /*00031650*/ ADD         R6, R4, #8 
    /*00031654*/ MOV         R5, #0 
    /*00031658*/ MOV         R9, R6 
    VI_DRV_SetDataLayout_x3165c:
    /*0003165c*/ LDR         R1, [R4, #104]              @ 0x68 
    /*00031660*/ LDR         R0, [R9], #4 
    /*00031664*/ BL          0x0000000000031664          @ VI_HAL_CalcMask [R_ARM_CALL: .text+0x35ee8] 
    /*00031668*/ MOV         R1, R5 
    /*0003166c*/ LDR         R3, [R4, #104]              @ 0x68 
    /*00031670*/ MOV         R2, R0 
    /*00031674*/ LDR         R0, [R4] 
    /*00031678*/ BL          0x0000000000031678          @ VI_HAL_CalcOffset [R_ARM_CALL: .text+0x35f20] 
    /*0003167c*/ MOV         R1, R5 
    /*00031680*/ LDR         R3, [R4, #104]              @ 0x68 
    /*00031684*/ ADD         R5, R5, #1 
    /*00031688*/ MOV         R2, R0 
    /*0003168c*/ MOV         R0, R8 
    /*00031690*/ BL          0x0000000000031690          @ VI_HAL_SetDataOffset [R_ARM_CALL: .text+0x35e3c] 
    /*00031694*/ CMP         R7, R5 
    /*00031698*/ BCS         VI_DRV_SetDataLayout_x3165c
    /*0003169c*/ MOV         R5, #0 
    VI_DRV_SetDataLayout_x316a0:
    /*000316a0*/ MOV         R3, #0 
    /*000316a4*/ LDR         R2, [R6] 
    /*000316a8*/ MOV         R1, R5 
    /*000316ac*/ LDR         R0, [R4] 
    /*000316b0*/ BL          0x00000000000316B0          @ VI_HAL_CalcOffset [R_ARM_CALL: .text+0x35f20] 
    /*000316b4*/ LDR         R3, [R4] 
    /*000316b8*/ MOV         R1, #1 
    /*000316bc*/ SUB         R3, R3, #6 
    /*000316c0*/ CMP         R3, #2 
    /*000316c4*/ MOV         IP, R0 
    /*000316c8*/ SUB         R2, R0, #2 
    /*000316cc*/ MOV         R0, R8 
    /*000316d0*/ BHI         VI_DRV_SetDataLayout_x31744
    /*000316d4*/ CMP         R5, #0 
    /*000316d8*/ LDRNE       R3, [R6] 
    /*000316dc*/ MOVEQ       R1, R5 
    /*000316e0*/ LDREQ       R2, [R4, #8] 
    /*000316e4*/ MOVEQ       R0, R8 
    /*000316e8*/ LSLNE       R2, R3, R2 
    /*000316ec*/ LSLEQ       R2, R2, IP 
    /*000316f0*/ BL          0x00000000000316F0          @ VI_HAL_SetDataMask [R_ARM_CALL: .text+0x35d9c] 
    VI_DRV_SetDataLayout_x316f4:
    /*000316f4*/ ADD         R5, R5, #1 
    /*000316f8*/ ADD         R6, R6, #4 
    /*000316fc*/ CMP         R7, R5 
    /*00031700*/ BCS         VI_DRV_SetDataLayout_x316a0
    /*00031704*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x114] 
    /*00031708*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x114] 
    /*0003170c*/ LDR         R0, [R4] 
    /*00031710*/ BL          0x0000000000031710          @ osal_udelay [R_ARM_CALL: +0x0] 
    /*00031714*/ LDR         R3, [R4] 
    /*00031718*/ MOVW        R1, #9502                   @ 0x251e 
    /*0003171c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaee0] 
    /*00031720*/ STR         R1, [SP] 
    /*00031724*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaee0] 
    /*00031728*/ STR         R3, [SP, #4] 
    /*0003172c*/ MOV         R1, #16 
    /*00031730*/ LDR         R3, [PC, #52]               @ 0x000000000003176c 
    /*00031734*/ MOV         R0, #7 
    /*00031738*/ BL          0x0000000000031738          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003173c*/ ADD         SP, SP, #12 
    /*00031740*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_SetDataLayout_x31744:
    /*00031744*/ LDR         R2, [R6] 
    /*00031748*/ MOV         R1, R5 
    /*0003174c*/ MOV         R0, R8 
    /*00031750*/ LSL         R2, R2, IP 
    /*00031754*/ BL          0x0000000000031754          @ VI_HAL_SetDataMask [R_ARM_CALL: .text+0x35d9c] 
    /*00031758*/ B           VI_DRV_SetDataLayout_x316f4
    VI_DRV_SetDataLayout_x3175c:
    /*0003175c*/ LDR         R7, [R1, #100]              @ 0x64 
    /*00031760*/ CLZ         R7, R7 
    /*00031764*/ LSR         R7, R7, #5 
    /*00031768*/ B           VI_DRV_SetDataLayout_x31644
    /*0003176c*/ ANDEQ       R1, R0, R4, LSL #29 
FUNC_END VI_DRV_SetDataLayout


FUNC_BEGIN VI_DRV_SetChnIntfCfg
    /*00031770*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031774*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031778*/ MOV         R3, #356                    @ 0x164 
    /*0003177c*/ MLA         R3, R3, R0, R2 
    /*00031780*/ LDR         R3, [R3, #8] 
    /*00031784*/ CMP         R3, #0 
    /*00031788*/ BNE         VI_DRV_SetChnIntfCfg_x3179c
    /*0003178c*/ PUSH        {R4, LR} 
    /*00031790*/ BL          0x000000000002522C 
    /*00031794*/ MOV         R0, #0 
    /*00031798*/ POP         {R4, PC} 
    VI_DRV_SetChnIntfCfg_x3179c:
    /*0003179c*/ MOV         R0, #0 
    /*000317a0*/ BX          LR 
FUNC_END VI_DRV_SetChnIntfCfg


FUNC_BEGIN VI_DRV_GetPipeBindDevIdBeforeInit
    /*000317a4*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x114] 
    /*000317a8*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x114] 
    /*000317ac*/ ADD         R0, R3, R0, LSL #2 
    /*000317b0*/ LDR         R0, [R0, #4] 
    /*000317b4*/ BX          LR 
FUNC_END VI_DRV_GetPipeBindDevIdBeforeInit


FUNC_BEGIN VI_DRV_GetPipeBindDevId
    /*000317b8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000317bc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000317c0*/ ADD         R0, R3, R0, LSL #2 
    /*000317c4*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*000317c8*/ LDR         R0, [R3, #8] 
    /*000317cc*/ BX          LR 
FUNC_END VI_DRV_GetPipeBindDevId


FUNC_BEGIN VI_DRV_SetPipeBindDevId
    /*000317d0*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x114] 
    /*000317d4*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x114] 
    /*000317d8*/ ADD         R0, R3, R0, LSL #2 
    /*000317dc*/ STR         R1, [R0, #4] 
    /*000317e0*/ BX          LR 
FUNC_END VI_DRV_SetPipeBindDevId


FUNC_BEGIN VI_DRV_GetWDRModeByPipe
    /*000317e4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000317e8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000317ec*/ ADD         R0, R3, R0, LSL #2 
    /*000317f0*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*000317f4*/ LDR         R0, [R3, #320]              @ 0x140 
    /*000317f8*/ BX          LR 
FUNC_END VI_DRV_GetWDRModeByPipe


FUNC_BEGIN VI_DRV_SetIspMode
    /*000317fc*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031800*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031804*/ MOV         R3, #356                    @ 0x164 
    /*00031808*/ MLA         R0, R3, R0, R2 
    /*0003180c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00031810*/ LDR         R7, [R1] 
    /*00031814*/ CMP         R7, #0 
    /*00031818*/ LDR         R5, [R0, #136]              @ 0x88 
    /*0003181c*/ BEQ         VI_DRV_SetIspMode_x3184c
    /*00031820*/ CLZ         R5, R5 
    /*00031824*/ ADD         R4, R1, #4 
    /*00031828*/ MOV         R6, #0 
    /*0003182c*/ LSR         R5, R5, #5 
    VI_DRV_SetIspMode_x31830:
    /*00031830*/ ADD         R6, R6, #1 
    /*00031834*/ MOV         R2, R5 
    /*00031838*/ MOV         R1, R5 
    /*0003183c*/ LDR         R0, [R4], #4 
    /*00031840*/ BL          0x0000000000031840          @ VI_HAL_SetIspMode [R_ARM_CALL: .text+0x35a3c] 
    /*00031844*/ CMP         R7, R6 
    /*00031848*/ BNE         VI_DRV_SetIspMode_x31830
    VI_DRV_SetIspMode_x3184c:
    /*0003184c*/ MOV         R0, #0 
    /*00031850*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_DRV_SetIspMode


FUNC_BEGIN VI_DRV_SetDevBindPipe
    /*00031854*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00031858*/ MOV         R6, R1 
    /*0003185c*/ LDR         R8, [R1] 
    /*00031860*/ MOV         R5, R0 
    /*00031864*/ CMP         R8, #0 
    /*00031868*/ ADDNE       R7, R1, #4 
    /*0003186c*/ MOVNE       R4, #0 
    /*00031870*/ BEQ         VI_DRV_SetDevBindPipe_x3188c
    VI_DRV_SetDevBindPipe_x31874:
    /*00031874*/ ADD         R4, R4, #1 
    /*00031878*/ MOV         R1, R5 
    /*0003187c*/ LDR         R0, [R7], #4 
    /*00031880*/ BL          0x0000000000031880          @ VI_HAL_SetIspSel [R_ARM_CALL: .text+0x35ac0] 
    /*00031884*/ CMP         R8, R4 
    /*00031888*/ BNE         VI_DRV_SetDevBindPipe_x31874
    VI_DRV_SetDevBindPipe_x3188c:
    /*0003188c*/ MOV         R7, #356                    @ 0x164 
    /*00031890*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031894*/ MUL         R7, R7, R5 
    /*00031898*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0003189c*/ MOV         R2, #20 
    /*000318a0*/ MOV         R1, R6 
    /*000318a4*/ ADD         R0, R7, #16 
    /*000318a8*/ ADD         R0, R4, R0 
    /*000318ac*/ ADD         R4, R4, R7 
    /*000318b0*/ BL          0x00000000000318B0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000318b4*/ MOV         R3, #1 
    /*000318b8*/ STR         R3, [R4, #12] 
    /*000318bc*/ LDR         R3, [R6] 
    /*000318c0*/ CMP         R3, #0 
    /*000318c4*/ BEQ         VI_DRV_SetDevBindPipe_x318f4
    /*000318c8*/ MOVW        R0, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x114] 
    /*000318cc*/ ADD         R1, R6, #4 
    /*000318d0*/ MOVT        R0, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x114] 
    /*000318d4*/ MOV         R2, #0 
    VI_DRV_SetDevBindPipe_x318d8:
    /*000318d8*/ LDR         R3, [R1], #4 
    /*000318dc*/ ADD         R2, R2, #1 
    /*000318e0*/ ADD         R3, R0, R3, LSL #2 
    /*000318e4*/ STR         R5, [R3, #4] 
    /*000318e8*/ LDR         R3, [R6] 
    /*000318ec*/ CMP         R3, R2 
    /*000318f0*/ BHI         VI_DRV_SetDevBindPipe_x318d8
    VI_DRV_SetDevBindPipe_x318f4:
    /*000318f4*/ MOV         R1, R6 
    /*000318f8*/ MOV         R0, R5 
    /*000318fc*/ BL          0x00000000000318FC          @ VI_DRV_SetIspMode [R_ARM_CALL: .text+0x317fc] 
    /*00031900*/ MOV         R0, #0 
    /*00031904*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_DRV_SetDevBindPipe


FUNC_BEGIN VI_DRV_GetDevBindPipe
    /*00031908*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0003190c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031910*/ MOV         R3, #356                    @ 0x164 
    /*00031914*/ MLA         R3, R3, R0, R2 
    /*00031918*/ MOV         R2, #20 
    /*0003191c*/ PUSH        {R4, LR} 
    /*00031920*/ MOV         R0, R1 
    /*00031924*/ ADD         R1, R3, #16 
    /*00031928*/ BL          0x0000000000031928          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0003192c*/ MOV         R0, #0 
    /*00031930*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetDevBindPipe


FUNC_BEGIN VI_DRV_GetGentimgRatio
    /*00031934*/ SUB         R0, R0, #1 
    /*00031938*/ CMP         R0, #9 
    /*0003193c*/ MOVWLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x1774] 
    /*00031940*/ MOVTLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x1774] 
    /*00031944*/ ADDLS       R3, R3, R0, LSL #2 
    /*00031948*/ LDRLS       R0, [R3, #1832]             @ 0x728 
    /*0003194c*/ MOVHI       R0, #8 
    /*00031950*/ BX          LR 
FUNC_END VI_DRV_GetGentimgRatio


FUNC_BEGIN VI_DRV_SetDevTimingCfg
    /*00031954*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00031958*/ MOV         R4, R0 
    /*0003195c*/ MOV         R6, R1 
    /*00031960*/ MOV         R1, R3 
    /*00031964*/ MOV         R5, R2 
    /*00031968*/ MOV         R7, R3 
    /*0003196c*/ BL          0x000000000003196C          @ VI_HAL_SetDevTimingHfb [R_ARM_CALL: .text+0x36a60] 
    /*00031970*/ LDR         R1, [R6] 
    /*00031974*/ MOV         R0, R4 
    /*00031978*/ BL          0x0000000000031978          @ VI_HAL_SetDevTimingHact [R_ARM_CALL: .text+0x36a9c] 
    /*0003197c*/ MOV         R1, R7 
    /*00031980*/ MOV         R0, R4 
    /*00031984*/ BL          0x0000000000031984          @ VI_HAL_SetDevTimingHbb [R_ARM_CALL: .text+0x36ad4] 
    /*00031988*/ MOV         R1, R5 
    /*0003198c*/ MOV         R0, R4 
    /*00031990*/ BL          0x0000000000031990          @ VI_HAL_SetDevTimingVfb [R_ARM_CALL: .text+0x36b10] 
    /*00031994*/ LDR         R1, [R6, #4] 
    /*00031998*/ MOV         R0, R4 
    /*0003199c*/ BL          0x000000000003199C          @ VI_HAL_SetDevTimingVact [R_ARM_CALL: .text+0x36b4c] 
    /*000319a0*/ MOV         R1, R5 
    /*000319a4*/ MOV         R0, R4 
    /*000319a8*/ BL          0x00000000000319A8          @ VI_HAL_SetDevTimingVbb [R_ARM_CALL: .text+0x36b88] 
    /*000319ac*/ MOV         R0, R4 
    /*000319b0*/ LDR         R1, [SP, #24] 
    /*000319b4*/ BL          0x00000000000319B4          @ VI_HAL_SetDevAutoTimingEn [R_ARM_CALL: .text+0x36a14] 
    /*000319b8*/ MOV         R0, #0 
    /*000319bc*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_DRV_SetDevTimingCfg


FUNC_BEGIN VI_DRV_DisableTimgAttr
    /*000319c0*/ PUSH        {R4, LR} 
    /*000319c4*/ MOV         R1, #0 
    /*000319c8*/ BL          0x00000000000319C8          @ VI_HAL_SetDevAutoTimingEn [R_ARM_CALL: .text+0x36a14] 
    /*000319cc*/ MOV         R0, #0 
    /*000319d0*/ POP         {R4, PC} 
FUNC_END VI_DRV_DisableTimgAttr


FUNC_BEGIN VI_DRV_SetDevTimingAttr
    /*000319d4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000319d8*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000319dc*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000319e0*/ MOV         R5, #356                    @ 0x164 
    /*000319e4*/ SUB         SP, SP, #36                 @ 0x24 
    /*000319e8*/ MLA         R5, R5, R0, R4 
    /*000319ec*/ LDR         R1, [R5, #348]              @ 0x15c 
    /*000319f0*/ CMP         R1, #0 
    /*000319f4*/ BEQ         VI_DRV_SetDevTimingAttr_x31a98
    /*000319f8*/ MOV         R6, R0 
    /*000319fc*/ BL          0x00000000000319FC          @ VI_DRV_GetViPortClock [R_ARM_CALL: .text+0x25804] 
    /*00031a00*/ MOV         R7, #356                    @ 0x164 
    /*00031a04*/ LDR         R3, [R5, #176]              @ 0xb0 
    /*00031a08*/ MLA         R7, R7, R6, R4 
    /*00031a0c*/ LDR         R5, [R5, #144]              @ 0x90 
    /*00031a10*/ CMP         R3, #1 
    /*00031a14*/ LSREQ       R5, R5, #1 
    /*00031a18*/ STR         R5, [SP, #24] 
    /*00031a1c*/ ADD         R1, R5, #128                @ 0x80 
    /*00031a20*/ LDR         R3, [R7, #148]              @ 0x94 
    /*00031a24*/ ADD         SL, R3, #64                 @ 0x40 
    /*00031a28*/ STR         R3, [SP, #28] 
    /*00031a2c*/ MUL         R1, SL, R1 
    /*00031a30*/ MOV         R8, R0 
    /*00031a34*/ MOVW        R0, #16960                  @ 0x4240 
    /*00031a38*/ MOVT        R0, #15 
    /*00031a3c*/ MUL         R9, R0, R8 
    /*00031a40*/ MOV         R0, R9 
    /*00031a44*/ BL          0x0000000000031A44          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00031a48*/ LDR         R1, [R7, #352]              @ 0x160 
    /*00031a4c*/ CMP         R0, R1 
    /*00031a50*/ MOV         FP, R0 
    /*00031a54*/ BLT         VI_DRV_SetDevTimingAttr_x31aa8
    /*00031a58*/ MUL         R1, SL, R1 
    /*00031a5c*/ MOV         R0, R9 
    /*00031a60*/ BL          0x0000000000031A60          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00031a64*/ SUB         R0, R0, R5 
    /*00031a68*/ LSR         R3, R0, #1 
    VI_DRV_SetDevTimingAttr_x31a6c:
    /*00031a6c*/ MOV         R2, #356                    @ 0x164 
    /*00031a70*/ MOV         R0, R6 
    /*00031a74*/ MLA         R4, R2, R6, R4 
    /*00031a78*/ ADD         R1, SP, #24 
    /*00031a7c*/ MOV         R2, #32 
    /*00031a80*/ LDR         IP, [R4, #348]              @ 0x15c 
    /*00031a84*/ STR         IP, [SP] 
    /*00031a88*/ BL          0x0000000000031A88          @ VI_DRV_SetDevTimingCfg [R_ARM_CALL: .text+0x31954] 
    /*00031a8c*/ MOV         R0, #0 
    /*00031a90*/ ADD         SP, SP, #36                 @ 0x24 
    /*00031a94*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_SetDevTimingAttr_x31a98:
    /*00031a98*/ BL          0x0000000000031A98          @ VI_HAL_SetDevAutoTimingEn [R_ARM_CALL: .text+0x36a14] 
    /*00031a9c*/ MOV         R0, #0 
    /*00031aa0*/ ADD         SP, SP, #36                 @ 0x24 
    /*00031aa4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_SetDevTimingAttr_x31aa8:
    /*00031aa8*/ MOVW        R3, #9889                   @ 0x26a1 
    /*00031aac*/ STR         R1, [SP, #12] 
    /*00031ab0*/ STR         R0, [SP, #8] 
    /*00031ab4*/ MOVW        R2, #0                      @ .LC322 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10488] 
    /*00031ab8*/ STR         R3, [SP] 
    /*00031abc*/ MOVT        R2, #0                      @ .LC322 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10488] 
    /*00031ac0*/ LDR         R3, [PC, #28]               @ 0x0000000000031ae4 
    /*00031ac4*/ MOV         R1, #16 
    /*00031ac8*/ STR         R8, [SP, #16] 
    /*00031acc*/ MOV         R0, #3 
    /*00031ad0*/ STR         R6, [SP, #4] 
    /*00031ad4*/ BL          0x0000000000031AD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00031ad8*/ STR         FP, [R7, #352]              @ 0x160 
    /*00031adc*/ MOV         R3, #64                     @ 0x40 
    /*00031ae0*/ B           VI_DRV_SetDevTimingAttr_x31a6c
    /*00031ae4*/ ANDEQ       R1, R0, R4, ASR #29 
FUNC_END VI_DRV_SetDevTimingAttr


FUNC_BEGIN VI_DRV_SetTimgAttr
    /*00031ae8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031aec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031af0*/ PUSH        {R4, LR} 
    /*00031af4*/ MOV         R4, R0 
    /*00031af8*/ MOV         R0, #356                    @ 0x164 
    /*00031afc*/ MOV         R2, #8 
    /*00031b00*/ MLA         R0, R0, R4, R3 
    /*00031b04*/ ADD         R0, R0, #348                @ 0x15c 
    /*00031b08*/ BL          0x0000000000031B08          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00031b0c*/ MOV         R0, R4 
    /*00031b10*/ BL          0x0000000000031B10          @ VI_DRV_SetDevTimingAttr [R_ARM_CALL: .text+0x319d4] 
    /*00031b14*/ MOV         R0, #0 
    /*00031b18*/ POP         {R4, PC} 
FUNC_END VI_DRV_SetTimgAttr


FUNC_BEGIN VI_DRV_GetTimgAttr
    /*00031b1c*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031b20*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031b24*/ MOV         R3, #356                    @ 0x164 
    /*00031b28*/ MLA         R3, R3, R0, R2 
    /*00031b2c*/ MOV         R2, #8 
    /*00031b30*/ PUSH        {R4, LR} 
    /*00031b34*/ MOV         R0, R1 
    /*00031b38*/ ADD         R1, R3, #348                @ 0x15c 
    /*00031b3c*/ BL          0x0000000000031B3C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00031b40*/ MOV         R0, #0 
    /*00031b44*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetTimgAttr


FUNC_BEGIN VI_DRV_DisableDev
    /*00031b48*/ PUSH        {R4, LR} 
    /*00031b4c*/ MOV         R1, #0 
    /*00031b50*/ MOV         R4, R0 
    /*00031b54*/ BL          0x0000000000031B54          @ VI_HAL_SetPortEn [R_ARM_CALL: .text+0x35ca8] 
    /*00031b58*/ MOV         R0, R4 
    /*00031b5c*/ MOV         R1, #1 
    /*00031b60*/ BL          0x0000000000031B60          @ VI_DRV_DevReset [R_ARM_CALL: .text+0x25660] 
    /*00031b64*/ MOV         R0, R4 
    /*00031b68*/ MOV         R1, #0 
    /*00031b6c*/ BL          0x0000000000031B6C          @ VI_DRV_DevClockEnable [R_ARM_CALL: .text+0x255d0] 
    /*00031b70*/ MOV         R0, #356                    @ 0x164 
    /*00031b74*/ MUL         R0, R0, R4 
    /*00031b78*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031b7c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031b80*/ MOV         R3, #0 
    /*00031b84*/ ADD         R1, R2, R0 
    /*00031b88*/ STR         R3, [R2, R0] 
    /*00031b8c*/ STR         R3, [R1, #4] 
    /*00031b90*/ STR         R3, [R1, #12] 
    /*00031b94*/ STR         R3, [R1, #8] 
    /*00031b98*/ POP         {R4, PC} 
FUNC_END VI_DRV_DisableDev


FUNC_BEGIN VI_DRV_DevInputSel
    /*00031b9c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00031ba0*/ SUB         SP, SP, #28 
    /*00031ba4*/ MOV         R3, #16 
    /*00031ba8*/ STR         R0, [SP, #16] 
    /*00031bac*/ MOV         R0, #2 
    /*00031bb0*/ STR         R1, [SP, #4] 
    /*00031bb4*/ STR         R3, [SP, #12] 
    /*00031bb8*/ BL          0x0000000000031BB8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00031bbc*/ ADD         R2, SP, #4 
    /*00031bc0*/ MOV         R1, #66                     @ 0x42 
    /*00031bc4*/ LDR         R3, [R0, #20] 
    /*00031bc8*/ ADD         R0, SP, #12 
    /*00031bcc*/ BLX         R3 
    /*00031bd0*/ MOV         R0, #0 
    /*00031bd4*/ ADD         SP, SP, #28 
    /*00031bd8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_DevInputSel


FUNC_BEGIN VI_DRV_SetDevEn
    /*00031bdc*/ PUSH        {R4, R5, R6, LR} 
    /*00031be0*/ MOV         R4, R0 
    /*00031be4*/ MOV         R5, R1 
    /*00031be8*/ BL          0x0000000000031BE8          @ VI_HAL_SetPortEn [R_ARM_CALL: .text+0x35ca8] 
    /*00031bec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031bf0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031bf4*/ MOV         R2, #356                    @ 0x164 
    /*00031bf8*/ MLA         R4, R2, R4, R3 
    /*00031bfc*/ STR         R5, [R4, #4] 
    /*00031c00*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_SetDevEn


FUNC_BEGIN VI_DRV_CheckChipId
    /*00031c04*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00031c08*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00031c0c*/ LDR         R3, [R3] 
    /*00031c10*/ LDRB        R3, [R3, #40]               @ 0x28 
    /*00031c14*/ SUB         R3, R3, #1 
    /*00031c18*/ CMP         R3, #1 
    /*00031c1c*/ BLS         VI_DRV_CheckChipId_x31c28
    /*00031c20*/ MOV         R0, #0 
    /*00031c24*/ BX          LR 
    VI_DRV_CheckChipId_x31c28:
    /*00031c28*/ CMP         R0, #0 
    /*00031c2c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031c30*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031c34*/ MOVEQ       R0, #356                    @ 0x164 
    /*00031c38*/ MOVNE       R0, #0 
    /*00031c3c*/ ADD         R3, R3, R0 
    /*00031c40*/ LDR         R0, [R3, #4] 
    /*00031c44*/ CMP         R0, #0 
    /*00031c48*/ BNE         VI_DRV_CheckChipId_x31c50
    /*00031c4c*/ BX          LR 
    VI_DRV_CheckChipId_x31c50:
    /*00031c50*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00031c54*/ SUB         SP, SP, #12 
    /*00031c58*/ MOVW        R3, #9990                   @ 0x2706 
    /*00031c5c*/ MOV         R1, #16 
    /*00031c60*/ STR         R3, [SP] 
    /*00031c64*/ MOVW        R2, #0                      @ .LC323 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10500] 
    /*00031c68*/ LDR         R3, [PC, #24]               @ 0x0000000000031c88 
    /*00031c6c*/ MOVT        R2, #0                      @ .LC323 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10500] 
    /*00031c70*/ MOV         R0, #3 
    /*00031c74*/ BL          0x0000000000031C74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00031c78*/ MOVW        R0, #32776                  @ 0x8008 
    /*00031c7c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00031c80*/ ADD         SP, SP, #12 
    /*00031c84*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00031c88*/ LDRDEQ      R1, [R0], -IP 
FUNC_END VI_DRV_CheckChipId


FUNC_BEGIN VI_DRV_GetDevAttr
    /*00031c8c*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031c90*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031c94*/ MOV         R3, #356                    @ 0x164 
    /*00031c98*/ MLA         R3, R3, R0, R2 
    /*00031c9c*/ MOV         R2, #144                    @ 0x90 
    /*00031ca0*/ PUSH        {R4, LR} 
    /*00031ca4*/ MOV         R0, R1 
    /*00031ca8*/ ADD         R1, R3, #36                 @ 0x24 
    /*00031cac*/ BL          0x0000000000031CAC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00031cb0*/ MOV         R0, #0 
    /*00031cb4*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetDevAttr


FUNC_BEGIN VI_DRV_GetPipeBindDevSize
    /*00031cb8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031cbc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031cc0*/ ADD         R0, R3, R0, LSL #2 
    /*00031cc4*/ MOV         IP, #356                    @ 0x164 
    /*00031cc8*/ PUSH        {R4, LR} 
    /*00031ccc*/ MOV         R4, R1 
    /*00031cd0*/ LDR         R1, [R0, #728]              @ 0x2d8 
    /*00031cd4*/ SUB         SP, SP, #144                @ 0x90 
    /*00031cd8*/ MOV         R2, #144                    @ 0x90 
    /*00031cdc*/ MOV         R0, SP 
    /*00031ce0*/ LDR         R1, [R1, #8] 
    /*00031ce4*/ MLA         R1, IP, R1, R3 
    /*00031ce8*/ ADD         R1, R1, #36                 @ 0x24 
    /*00031cec*/ BL          0x0000000000031CEC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00031cf0*/ LDR         R2, [SP, #108]              @ 0x6c 
    /*00031cf4*/ LDR         R3, [SP, #112]              @ 0x70 
    /*00031cf8*/ MOV         R0, #0 
    /*00031cfc*/ STM         R4, {R2, R3} 
    /*00031d00*/ ADD         SP, SP, #144                @ 0x90 
    /*00031d04*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetPipeBindDevSize


FUNC_BEGIN VI_DRV_GetPipeNRXStatus
    /*00031d08*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031d0c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031d10*/ ADD         R3, R3, R0, LSL #2 
    /*00031d14*/ MOV         R0, #0 
    /*00031d18*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*00031d1c*/ ADD         R3, R3, #32768              @ 0x8000 
    /*00031d20*/ LDR         R3, [R3, #1356]             @ 0x54c 
    /*00031d24*/ STR         R3, [R1] 
    /*00031d28*/ BX          LR 
FUNC_END VI_DRV_GetPipeNRXStatus


FUNC_BEGIN VI_DRV_SetMipiYuvSize
    /*00031d2c*/ MOV         R2, R1 
    /*00031d30*/ MOV         R3, #0 
    /*00031d34*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00031d38*/ SUB         SP, SP, #20 
    /*00031d3c*/ LDR         IP, [R2] 
    /*00031d40*/ LDR         R2, [R2, #4] 
    /*00031d44*/ MOV         R1, SP 
    /*00031d48*/ STR         R3, [SP] 
    /*00031d4c*/ STR         IP, [SP, #8] 
    /*00031d50*/ STR         R2, [SP, #12] 
    /*00031d54*/ STR         R3, [SP, #4] 
    /*00031d58*/ BL          0x0000000000031D58          @ VI_HAL_SetMipiYuvCrop [R_ARM_CALL: .text+0x367ac] 
    /*00031d5c*/ ADD         SP, SP, #20 
    /*00031d60*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_SetMipiYuvSize


FUNC_BEGIN VI_DRV_SetMipiYuvCfg
    /*00031d64*/ PUSH        {R4, R5, LR} 
    /*00031d68*/ MOV         R4, R1 
    /*00031d6c*/ SUB         SP, SP, #20 
    /*00031d70*/ MOV         R5, R0 
    /*00031d74*/ LDR         R1, [R1] 
    /*00031d78*/ BL          0x0000000000031D78          @ VI_HAL_SetMipiYuvCfg [R_ARM_CALL: .text+0x36710] 
    /*00031d7c*/ LDR         R1, [R4, #36]               @ 0x24 
    /*00031d80*/ MOV         R0, R5 
    /*00031d84*/ BL          0x0000000000031D84          @ VI_HAL_SetMipiYuvSeq [R_ARM_CALL: .text+0x36764] 
    /*00031d88*/ LDR         IP, [R4, #108]              @ 0x6c 
    /*00031d8c*/ LDR         R2, [R4, #112]              @ 0x70 
    /*00031d90*/ MOV         R0, R5 
    /*00031d94*/ MOV         R1, SP 
    /*00031d98*/ MOV         R3, #0 
    /*00031d9c*/ STR         IP, [SP, #8] 
    /*00031da0*/ STR         R2, [SP, #12] 
    /*00031da4*/ STR         R3, [SP] 
    /*00031da8*/ STR         R3, [SP, #4] 
    /*00031dac*/ BL          0x0000000000031DAC          @ VI_HAL_SetMipiYuvCrop [R_ARM_CALL: .text+0x367ac] 
    /*00031db0*/ ADD         SP, SP, #20 
    /*00031db4*/ POP         {R4, R5, PC} 
FUNC_END VI_DRV_SetMipiYuvCfg


FUNC_BEGIN VI_DRV_SetPortInPutMode
    /*00031db8*/ PUSH        {R4, R5, R6, LR} 
    /*00031dbc*/ MOV         R4, R1 
    /*00031dc0*/ LDR         R1, [R1] 
    /*00031dc4*/ MOV         R5, R0 
    /*00031dc8*/ CMP         R1, #3 
    /*00031dcc*/ CMPNE       R1, #0 
    /*00031dd0*/ BEQ         VI_DRV_SetPortInPutMode_x31e24
    /*00031dd4*/ CMP         R1, #1 
    /*00031dd8*/ BEQ         VI_DRV_SetPortInPutMode_x31df0
    /*00031ddc*/ CMP         R1, #2 
    /*00031de0*/ BEQ         VI_DRV_SetPortInPutMode_x31df0
    /*00031de4*/ CMP         R1, #4 
    /*00031de8*/ MOVNE       R1, #4 
    /*00031dec*/ BEQ         VI_DRV_SetPortInPutMode_x31e30
    VI_DRV_SetPortInPutMode_x31df0:
    /*00031df0*/ BL          0x0000000000031DF0          @ VI_HAL_SetPortInputMode [R_ARM_CALL: .text+0x366cc] 
    VI_DRV_SetPortInPutMode_x31df4:
    /*00031df4*/ LDR         R1, [R4] 
    /*00031df8*/ SUB         R3, R1, #9 
    /*00031dfc*/ CMP         R1, #5 
    /*00031e00*/ CMPNE       R3, #1 
    /*00031e04*/ MOVLS       R1, #0 
    /*00031e08*/ BLS         VI_DRV_SetPortInPutMode_x31e18
    /*00031e0c*/ CMP         R1, #4 
    /*00031e10*/ MOVHI       R1, #0 
    /*00031e14*/ MOVLS       R1, #1 
    VI_DRV_SetPortInPutMode_x31e18:
    /*00031e18*/ MOV         R0, R5 
    /*00031e1c*/ POP         {R4, R5, R6, LR} 
    VI_DRV_SetPortInPutMode_x31e20:
    /*00031e20*/ B           VI_DRV_SetPortInPutMode_x31e20@ VI_DRV_DevInputSel [R_ARM_JUMP24: .text+0x31b9c] 
    VI_DRV_SetPortInPutMode_x31e24:
    /*00031e24*/ MOV         R1, #0 
    /*00031e28*/ BL          0x0000000000031E28          @ VI_HAL_SetPortInputMode [R_ARM_CALL: .text+0x366cc] 
    /*00031e2c*/ B           VI_DRV_SetPortInPutMode_x31df4
    VI_DRV_SetPortInPutMode_x31e30:
    /*00031e30*/ MOV         R1, #3 
    /*00031e34*/ BL          0x0000000000031E34          @ VI_HAL_SetPortInputMode [R_ARM_CALL: .text+0x366cc] 
    /*00031e38*/ B           VI_DRV_SetPortInPutMode_x31df4
FUNC_END VI_DRV_SetPortInPutMode


FUNC_BEGIN VI_DRV_SetPortYUV444En
    /*00031e3c*/ LDR         R3, [R1, #100]              @ 0x64 
    /*00031e40*/ CMP         R3, #1 
    /*00031e44*/ BEQ         VI_DRV_SetPortYUV444En_x31e58
    /*00031e48*/ CMP         R3, #0 
    /*00031e4c*/ BXNE        LR 
    /*00031e50*/ MOV         R1, #1 
    VI_DRV_SetPortYUV444En_x31e54:
    /*00031e54*/ B           VI_DRV_SetPortYUV444En_x31e54@ VI_HAL_SetPortYUV444En [R_ARM_JUMP24: .text+0x35f9c] 
    VI_DRV_SetPortYUV444En_x31e58:
    /*00031e58*/ MOV         R1, #0 
    VI_DRV_SetPortYUV444En_x31e5c:
    /*00031e5c*/ B           VI_DRV_SetPortYUV444En_x31e5c@ VI_HAL_SetPortYUV444En [R_ARM_JUMP24: .text+0x35f9c] 
FUNC_END VI_DRV_SetPortYUV444En


FUNC_BEGIN VI_DRV_SetDevAttr
    /*00031e60*/ PUSH        {R4, R5, R6, LR} 
    /*00031e64*/ MOV         R5, R1 
    /*00031e68*/ MOV         R4, R0 
    /*00031e6c*/ MOV         R1, #1 
    /*00031e70*/ BL          0x0000000000031E70          @ VI_DRV_DevClockEnable [R_ARM_CALL: .text+0x255d0] 
    /*00031e74*/ MOV         R0, R4 
    /*00031e78*/ MOV         R1, #0 
    /*00031e7c*/ BL          0x0000000000031E7C          @ VI_DRV_DevReset [R_ARM_CALL: .text+0x25660] 
    /*00031e80*/ MOV         R1, R5 
    /*00031e84*/ MOV         R0, R4 
    /*00031e88*/ BL          0x0000000000031E88          @ VI_DRV_SetPortInPutMode [R_ARM_CALL: .text+0x31db8] 
    /*00031e8c*/ MOV         R1, R5 
    /*00031e90*/ MOV         R0, R4 
    /*00031e94*/ BL          0x0000000000031E94          @ VI_DRV_SetPortYUV444En [R_ARM_CALL: .text+0x31e3c] 
    /*00031e98*/ MOV         R1, R5 
    /*00031e9c*/ MOV         R0, R4 
    /*00031ea0*/ BL          0x0000000000031EA0          @ VI_DRV_SetDataLayout [R_ARM_CALL: .text+0x31614] 
    /*00031ea4*/ MOV         R1, R5 
    /*00031ea8*/ MOV         R0, R4 
    /*00031eac*/ BL          0x0000000000031EAC          @ VI_DRV_SetMipiYuvCfg [R_ARM_CALL: .text+0x31d64] 
    /*00031eb0*/ MOV         R3, #356                    @ 0x164 
    /*00031eb4*/ MUL         R3, R3, R4 
    /*00031eb8*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031ebc*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031ec0*/ MOV         LR, #1 
    /*00031ec4*/ MOV         R1, R5 
    /*00031ec8*/ MOV         R2, #144                    @ 0x90 
    /*00031ecc*/ ADD         R6, IP, R3 
    /*00031ed0*/ ADD         R0, R3, #36                 @ 0x24 
    /*00031ed4*/ ADD         R0, IP, R0 
    /*00031ed8*/ STR         LR, [IP, R3] 
    /*00031edc*/ MOV         R3, #0 
    /*00031ee0*/ STR         R3, [R6, #8] 
    /*00031ee4*/ BL          0x0000000000031EE4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00031ee8*/ LDR         R0, [R5, #8] 
    /*00031eec*/ BL          0x0000000000031EEC          @ VI_HAL_CalcDataBitWidthByPortMask [R_ARM_CALL: .text+0x35f74] 
    /*00031ef0*/ LDR         R3, [R6, #8] 
    /*00031ef4*/ CMP         R3, #0 
    /*00031ef8*/ STR         R0, [R6, #344]              @ 0x158 
    /*00031efc*/ BNE         VI_DRV_SetDevAttr_x31f08
    /*00031f00*/ MOV         R0, R4 
    /*00031f04*/ BL          0x000000000002522C 
    VI_DRV_SetDevAttr_x31f08:
    /*00031f08*/ LDR         R1, [R5, #132]              @ 0x84 
    /*00031f0c*/ MOV         R0, R4 
    /*00031f10*/ BL          0x0000000000031F10          @ VI_DRV_SetPortIdConfig [R_ARM_CALL: .text+0x37dd8] 
    /*00031f14*/ MOV         R0, R4 
    /*00031f18*/ LDR         R1, [R5, #132]              @ 0x84 
    /*00031f1c*/ BL          0x0000000000031F1C          @ VI_DRV_SetWDRLineAFifoEnable [R_ARM_CALL: .text+0x37e10] 
    /*00031f20*/ MOV         R0, #0 
    /*00031f24*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_SetDevAttr


FUNC_BEGIN VI_DRV_CheckDevBindPipe
    /*00031f28*/ PUSH        {R4, R5, LR} 
    /*00031f2c*/ SUB         SP, SP, #20 
    /*00031f30*/ LDR         R5, [R1] 
    /*00031f34*/ SUB         R3, R5, #1 
    /*00031f38*/ CMP         R3, #3 
    /*00031f3c*/ BHI         VI_DRV_CheckDevBindPipe_x3207c
    /*00031f40*/ LDR         R4, [R1, #4] 
    /*00031f44*/ CMP         R4, #3 
    /*00031f48*/ MOV         IP, R4 
    /*00031f4c*/ BHI         VI_DRV_CheckDevBindPipe_x32004
    /*00031f50*/ MOV         LR, #0 
    VI_DRV_CheckDevBindPipe_x31f54:
    /*00031f54*/ ADD         LR, LR, #1 
    /*00031f58*/ UXTB        LR, LR 
    /*00031f5c*/ CMP         R5, LR 
    /*00031f60*/ BLS         VI_DRV_CheckDevBindPipe_x31fdc
    /*00031f64*/ SXTH        R3, LR 
    /*00031f68*/ ADD         R2, R1, R3, LSL #2 
    /*00031f6c*/ LDR         IP, [R2, #4] 
    /*00031f70*/ CMP         IP, #3 
    /*00031f74*/ BHI         VI_DRV_CheckDevBindPipe_x32004
    /*00031f78*/ CMP         LR, #0 
    /*00031f7c*/ BEQ         VI_DRV_CheckDevBindPipe_x31f54
    /*00031f80*/ LDR         R3, [R1, R3, LSL #2] 
    /*00031f84*/ CMP         IP, R3 
    /*00031f88*/ BEQ         VI_DRV_CheckDevBindPipe_x31fa8
    /*00031f8c*/ SUB         R3, LR, #1 
    VI_DRV_CheckDevBindPipe_x31f90:
    /*00031f90*/ ANDS        R2, R3, #255                @ 0xff 
    /*00031f94*/ SUB         R3, R2, #1 
    /*00031f98*/ BEQ         VI_DRV_CheckDevBindPipe_x31f54
    /*00031f9c*/ LDR         R2, [R1, R2, LSL #2] 
    /*00031fa0*/ CMP         IP, R2 
    /*00031fa4*/ BNE         VI_DRV_CheckDevBindPipe_x31f90
    VI_DRV_CheckDevBindPipe_x31fa8:
    /*00031fa8*/ MOVW        R3, #10179                  @ 0x27c3 
    /*00031fac*/ STR         IP, [SP, #4] 
    /*00031fb0*/ STR         R3, [SP] 
    /*00031fb4*/ MOVW        R2, #0                      @ .LC326 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x105dc] 
    /*00031fb8*/ LDR         R3, [PC, #272]              @ 0x00000000000320d0 
    /*00031fbc*/ MOVT        R2, #0                      @ .LC326 [R_ARM_MOVT_ABS: .rodata.str1.4+0x105dc] 
    /*00031fc0*/ MOV         R1, #16 
    /*00031fc4*/ MOV         R0, #3 
    /*00031fc8*/ BL          0x0000000000031FC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00031fcc*/ MOVW        R0, #32840                  @ 0x8048 
    /*00031fd0*/ MOVT        R0, #40976                  @ 0xa010 
    VI_DRV_CheckDevBindPipe_x31fd4:
    /*00031fd4*/ ADD         SP, SP, #20 
    /*00031fd8*/ POP         {R4, R5, PC} 
    VI_DRV_CheckDevBindPipe_x31fdc:
    /*00031fdc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00031fe0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00031fe4*/ MOV         R2, #356                    @ 0x164 
    /*00031fe8*/ MLA         R0, R2, R0, R3 
    /*00031fec*/ LDR         R3, [R0, #168]              @ 0xa8 
    /*00031ff0*/ SUB         R3, R3, #3 
    /*00031ff4*/ CMP         R3, #1 
    /*00031ff8*/ BLS         VI_DRV_CheckDevBindPipe_x3203c
    VI_DRV_CheckDevBindPipe_x31ffc:
    /*00031ffc*/ MOV         R0, #0 
    /*00032000*/ B           VI_DRV_CheckDevBindPipe_x31fd4
    VI_DRV_CheckDevBindPipe_x32004:
    /*00032004*/ MOV         R2, #4 
    /*00032008*/ MOVW        R3, #10169                  @ 0x27b9 
    /*0003200c*/ STR         R2, [SP, #8] 
    /*00032010*/ MOV         R1, #16 
    /*00032014*/ STR         R3, [SP] 
    /*00032018*/ MOVW        R2, #0                      @ .LC325 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1058c] 
    /*0003201c*/ STR         IP, [SP, #4] 
    /*00032020*/ MOVT        R2, #0                      @ .LC325 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1058c] 
    /*00032024*/ LDR         R3, [PC, #164]              @ 0x00000000000320d0 
    /*00032028*/ MOV         R0, #3 
    /*0003202c*/ BL          0x000000000003202C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00032030*/ MOVW        R0, #32778                  @ 0x800a 
    /*00032034*/ MOVT        R0, #40976                  @ 0xa010 
    /*00032038*/ B           VI_DRV_CheckDevBindPipe_x31fd4
    VI_DRV_CheckDevBindPipe_x3203c:
    /*0003203c*/ CMP         R4, #0 
    /*00032040*/ BNE         VI_DRV_CheckDevBindPipe_x320b8
    /*00032044*/ LDR         R3, [R1, #8] 
    /*00032048*/ CMP         R3, #1 
    /*0003204c*/ BEQ         VI_DRV_CheckDevBindPipe_x31ffc
    VI_DRV_CheckDevBindPipe_x32050:
    /*00032050*/ MOVW        R3, #10192                  @ 0x27d0 
    /*00032054*/ MOVW        R2, #0                      @ .LC327 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10630] 
    /*00032058*/ STR         R3, [SP] 
    /*0003205c*/ MOVT        R2, #0                      @ .LC327 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10630] 
    /*00032060*/ LDR         R3, [PC, #104]              @ 0x00000000000320d0 
    /*00032064*/ MOV         R1, #16 
    /*00032068*/ MOV         R0, #3 
    /*0003206c*/ BL          0x000000000003206C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00032070*/ MOVW        R0, #32771                  @ 0x8003 
    /*00032074*/ MOVT        R0, #40976                  @ 0xa010 
    /*00032078*/ B           VI_DRV_CheckDevBindPipe_x31fd4
    VI_DRV_CheckDevBindPipe_x3207c:
    /*0003207c*/ MOV         R2, #4 
    /*00032080*/ STR         R0, [SP, #4] 
    /*00032084*/ MOVW        R3, #10161                  @ 0x27b1 
    /*00032088*/ STR         R2, [SP, #12] 
    /*0003208c*/ STR         R3, [SP] 
    /*00032090*/ MOVW        R2, #0                      @ .LC324 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1053c] 
    /*00032094*/ STR         R5, [SP, #8] 
    /*00032098*/ MOVT        R2, #0                      @ .LC324 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1053c] 
    /*0003209c*/ LDR         R3, [PC, #44]               @ 0x00000000000320d0 
    /*000320a0*/ MOV         R1, #16 
    /*000320a4*/ MOV         R0, #3 
    /*000320a8*/ BL          0x00000000000320A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000320ac*/ MOVW        R0, #32771                  @ 0x8003 
    /*000320b0*/ MOVT        R0, #40976                  @ 0xa010 
    /*000320b4*/ B           VI_DRV_CheckDevBindPipe_x31fd4
    VI_DRV_CheckDevBindPipe_x320b8:
    /*000320b8*/ CMP         R4, #2 
    /*000320bc*/ BNE         VI_DRV_CheckDevBindPipe_x32050
    /*000320c0*/ LDR         R3, [R1, #8] 
    /*000320c4*/ CMP         R3, #3 
    /*000320c8*/ BEQ         VI_DRV_CheckDevBindPipe_x31ffc
    /*000320cc*/ B           VI_DRV_CheckDevBindPipe_x32050
    /*000320d0*/ STRDEQ      R1, [R0], -R0 
FUNC_END VI_DRV_CheckDevBindPipe


FUNC_BEGIN VI_DRV_CheckInputDataType
    /*000320d4*/ CMP         R1, #1 
    /*000320d8*/ BHI         VI_DRV_CheckInputDataType_x320e4
    /*000320dc*/ MOV         R0, #0 
    /*000320e0*/ BX          LR 
    VI_DRV_CheckInputDataType_x320e4:
    /*000320e4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000320e8*/ SUB         SP, SP, #20 
    /*000320ec*/ MOVW        R3, #10345                  @ 0x2869 
    /*000320f0*/ MOVW        R2, #0                      @ .LC328 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x106b0] 
    /*000320f4*/ STR         R0, [SP, #8] 
    /*000320f8*/ MOVT        R2, #0                      @ .LC328 [R_ARM_MOVT_ABS: .rodata.str1.4+0x106b0] 
    /*000320fc*/ STR         R1, [SP, #4] 
    /*00032100*/ MOV         R0, #3 
    /*00032104*/ STR         R3, [SP] 
    /*00032108*/ MOV         R1, #16 
    /*0003210c*/ LDR         R3, [PC, #16]               @ 0x0000000000032124 
    /*00032110*/ BL          0x0000000000032110          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00032114*/ MOVW        R0, #32771                  @ 0x8003 
    /*00032118*/ MOVT        R0, #40976                  @ 0xa010 
    /*0003211c*/ ADD         SP, SP, #20 
    /*00032120*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00032124*/ ANDEQ       R1, R0, R8, LSL #30 
FUNC_END VI_DRV_CheckInputDataType


FUNC_BEGIN VI_DRV_CheckDataReverse
    /*00032128*/ CMP         R1, #1 
    /*0003212c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00032130*/ SUB         SP, SP, #20 
    /*00032134*/ BHI         VI_DRV_CheckDataReverse_x3215c
    /*00032138*/ SUB         R3, R2, #6 
    /*0003213c*/ CMP         R3, #2 
    /*00032140*/ MOVHI       R1, #0 
    /*00032144*/ ANDLS       R1, R1, #1 
    /*00032148*/ CMP         R1, #0 
    /*0003214c*/ MOVEQ       R0, R1 
    /*00032150*/ BNE         VI_DRV_CheckDataReverse_x32190
    VI_DRV_CheckDataReverse_x32154:
    /*00032154*/ ADD         SP, SP, #20 
    /*00032158*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckDataReverse_x3215c:
    /*0003215c*/ STR         R1, [SP, #8] 
    /*00032160*/ MOVW        R3, #10357                  @ 0x2875 
    /*00032164*/ STR         R0, [SP, #4] 
    /*00032168*/ MOVW        R2, #0                      @ .LC329 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10728] 
    /*0003216c*/ STR         R3, [SP] 
    /*00032170*/ MOVT        R2, #0                      @ .LC329 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10728] 
    /*00032174*/ LDR         R3, [PC, #80]               @ 0x00000000000321cc 
    /*00032178*/ MOV         R1, #16 
    /*0003217c*/ MOV         R0, #3 
    /*00032180*/ BL          0x0000000000032180          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00032184*/ MOVW        R0, #32771                  @ 0x8003 
    /*00032188*/ MOVT        R0, #40976                  @ 0xa010 
    /*0003218c*/ B           VI_DRV_CheckDataReverse_x32154
    VI_DRV_CheckDataReverse_x32190:
    /*00032190*/ STR         R2, [SP, #12] 
    /*00032194*/ MOV         R3, #10368                  @ 0x2880 
    /*00032198*/ MOV         R2, #1 
    /*0003219c*/ STR         R0, [SP, #4] 
    /*000321a0*/ STR         R2, [SP, #8] 
    /*000321a4*/ MOV         R1, #16 
    /*000321a8*/ STR         R3, [SP] 
    /*000321ac*/ MOVW        R2, #0                      @ .LC330 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10780] 
    /*000321b0*/ LDR         R3, [PC, #20]               @ 0x00000000000321cc 
    /*000321b4*/ MOVT        R2, #0                      @ .LC330 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10780] 
    /*000321b8*/ MOV         R0, #3 
    /*000321bc*/ BL          0x00000000000321BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000321c0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000321c4*/ MOVT        R0, #40976                  @ 0xa010 
    /*000321c8*/ B           VI_DRV_CheckDataReverse_x32154
    /*000321cc*/ ANDEQ       R1, R0, R4, LSR #30 
FUNC_END VI_DRV_CheckDataReverse


FUNC_BEGIN VI_DRV_CheckDevSize
    /*000321d0*/ PUSH        {R4, R5, R6, LR} 
    /*000321d4*/ MOV         R6, R1 
    /*000321d8*/ LDR         R1, [R1] 
    /*000321dc*/ SUB         SP, SP, #24 
    /*000321e0*/ LDR         R3, [R6, #4] 
    /*000321e4*/ TST         R1, #1 
    /*000321e8*/ BNE         VI_DRV_CheckDevSize_x3234c
    /*000321ec*/ TST         R3, #1 
    /*000321f0*/ BNE         VI_DRV_CheckDevSize_x3234c
    /*000321f4*/ MOVW        R5, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*000321f8*/ MOVT        R5, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*000321fc*/ MOV         R4, R0 
    /*00032200*/ LDR         R2, [R5] 
    /*00032204*/ LDRB        R2, [R2, #40]               @ 0x28 
    /*00032208*/ SUB         R0, R2, #1 
    /*0003220c*/ CMP         R0, #1 
    /*00032210*/ BLS         VI_DRV_CheckDevSize_x3232c
    /*00032214*/ SUB         R0, R2, #5 
    /*00032218*/ CMP         R0, #1 
    /*0003221c*/ MOVLS       R2, #2688                   @ 0xa80 
    /*00032220*/ BLS         VI_DRV_CheckDevSize_x32240
    /*00032224*/ CMP         R2, #12 
    /*00032228*/ BHI         VI_DRV_CheckDevSize_x32308
    /*0003222c*/ MOVW        R0, #4609                   @ 0x1201 
    /*00032230*/ MVN         R2, R0, LSR R2 
    /*00032234*/ TST         R2, #1 
    /*00032238*/ MOVEQ       R2, #4608                   @ 0x1200 
    /*0003223c*/ BNE         VI_DRV_CheckDevSize_x32308
    VI_DRV_CheckDevSize_x32240:
    /*00032240*/ CMP         R1, #119                    @ 0x77 
    /*00032244*/ BLS         VI_DRV_CheckDevSize_x32380
    /*00032248*/ CMP         R3, #119                    @ 0x77 
    /*0003224c*/ BLS         VI_DRV_CheckDevSize_x32380
    /*00032250*/ CMP         R2, R3 
    /*00032254*/ CMPCS       R2, R1 
    /*00032258*/ MOVCC       R0, #1 
    /*0003225c*/ MOVCS       R0, #0 
    /*00032260*/ BCC         VI_DRV_CheckDevSize_x323d0
    /*00032264*/ LDR         R2, [R5] 
    /*00032268*/ LDRB        R2, [R2, #40]               @ 0x28 
    /*0003226c*/ SUB         IP, R2, #1 
    /*00032270*/ CMP         IP, #1 
    /*00032274*/ BLS         VI_DRV_CheckDevSize_x322c4
    /*00032278*/ SUB         IP, R2, #5 
    /*0003227c*/ CMP         IP, #1 
    /*00032280*/ BLS         VI_DRV_CheckDevSize_x322a8
    /*00032284*/ CMP         R2, #12 
    /*00032288*/ BLS         VI_DRV_CheckDevSize_x32334
    VI_DRV_CheckDevSize_x3228c:
    /*0003228c*/ MUL         R3, R1, R3 
    /*00032290*/ MOV         R2, #36864                  @ 0x9000 
    /*00032294*/ MOVT        R2, #45                     @ 0x2d 
    /*00032298*/ CMP         R3, R2 
    /*0003229c*/ BHI         VI_DRV_CheckDevSize_x323c4
    /*000322a0*/ MOV         R0, #0 
    /*000322a4*/ B           VI_DRV_CheckDevSize_x322bc
    VI_DRV_CheckDevSize_x322a8:
    /*000322a8*/ MUL         R3, R1, R3 
    /*000322ac*/ MOV         R2, #48128                  @ 0xbc00 
    /*000322b0*/ MOVT        R2, #79                     @ 0x4f 
    /*000322b4*/ CMP         R3, R2 
    /*000322b8*/ BHI         VI_DRV_CheckDevSize_x32410
    VI_DRV_CheckDevSize_x322bc:
    /*000322bc*/ ADD         SP, SP, #24 
    /*000322c0*/ POP         {R4, R5, R6, PC} 
    VI_DRV_CheckDevSize_x322c4:
    /*000322c4*/ MUL         R3, R1, R3 
    /*000322c8*/ MOV         R2, #36864                  @ 0x9000 
    /*000322cc*/ MOVT        R2, #45                     @ 0x2d 
    /*000322d0*/ CMP         R3, R2 
    /*000322d4*/ BLS         VI_DRV_CheckDevSize_x322bc
    /*000322d8*/ MOVW        R3, #10431                  @ 0x28bf 
    /*000322dc*/ STR         R4, [SP, #4] 
    VI_DRV_CheckDevSize_x322e0:
    /*000322e0*/ MOVW        R2, #0                      @ .LC334 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x108f0] 
    /*000322e4*/ MOVT        R2, #0                      @ .LC334 [R_ARM_MOVT_ABS: .rodata.str1.4+0x108f0] 
    /*000322e8*/ STR         R3, [SP] 
    VI_DRV_CheckDevSize_x322ec:
    /*000322ec*/ LDR         R3, [PC, #308]              @ 0x0000000000032428 
    /*000322f0*/ MOV         R1, #16 
    /*000322f4*/ MOV         R0, #3 
    /*000322f8*/ BL          0x00000000000322F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000322fc*/ MOVW        R0, #32771                  @ 0x8003 
    /*00032300*/ MOVT        R0, #40976                  @ 0xa010 
    /*00032304*/ B           VI_DRV_CheckDevSize_x322bc
    VI_DRV_CheckDevSize_x32308:
    /*00032308*/ MOVW        R3, #10408                  @ 0x28a8 
    /*0003230c*/ MOV         R1, #16 
    /*00032310*/ STR         R3, [SP] 
    /*00032314*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xafa4] 
    /*00032318*/ LDR         R3, [PC, #264]              @ 0x0000000000032428 
    /*0003231c*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xafa4] 
    /*00032320*/ MOV         R0, #3 
    /*00032324*/ BL          0x0000000000032324          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00032328*/ LDM         R6, {R1, R3} 
    VI_DRV_CheckDevSize_x3232c:
    /*0003232c*/ MOV         R2, #2304                   @ 0x900 
    /*00032330*/ B           VI_DRV_CheckDevSize_x32240
    VI_DRV_CheckDevSize_x32334:
    /*00032334*/ MOVW        R0, #4609                   @ 0x1201 
    /*00032338*/ MVN         R0, R0, LSR R2 
    /*0003233c*/ ANDS        R0, R0, #1 
    /*00032340*/ BNE         VI_DRV_CheckDevSize_x3228c
    /*00032344*/ ADD         SP, SP, #24 
    /*00032348*/ POP         {R4, R5, R6, PC} 
    VI_DRV_CheckDevSize_x3234c:
    /*0003234c*/ STR         R3, [SP, #8] 
    /*00032350*/ MOVW        R2, #0                      @ .LC331 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x107e0] 
    /*00032354*/ MOVW        R3, #10385                  @ 0x2891 
    /*00032358*/ STR         R1, [SP, #4] 
    /*0003235c*/ STR         R3, [SP] 
    /*00032360*/ MOVT        R2, #0                      @ .LC331 [R_ARM_MOVT_ABS: .rodata.str1.4+0x107e0] 
    /*00032364*/ LDR         R3, [PC, #188]              @ 0x0000000000032428 
    /*00032368*/ MOV         R1, #16 
    /*0003236c*/ MOV         R0, #3 
    /*00032370*/ BL          0x0000000000032370          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00032374*/ MOVW        R0, #32771                  @ 0x8003 
    /*00032378*/ MOVT        R0, #40976                  @ 0xa010 
    /*0003237c*/ B           VI_DRV_CheckDevSize_x322bc
    VI_DRV_CheckDevSize_x32380:
    /*00032380*/ STR         R3, [SP, #12] 
    /*00032384*/ MOVW        R0, #10416                  @ 0x28b0 
    /*00032388*/ MOV         R3, #120                    @ 0x78 
    /*0003238c*/ STR         R1, [SP, #8] 
    /*00032390*/ STR         R3, [SP, #20] 
    /*00032394*/ MOVW        R2, #0                      @ .LC332 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1082c] 
    /*00032398*/ STR         R3, [SP, #16] 
    /*0003239c*/ MOVT        R2, #0                      @ .LC332 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1082c] 
    /*000323a0*/ STR         R0, [SP] 
    /*000323a4*/ MOV         R1, #16 
    /*000323a8*/ STR         R4, [SP, #4] 
    /*000323ac*/ MOV         R0, #3 
    /*000323b0*/ LDR         R3, [PC, #112]              @ 0x0000000000032428 
    /*000323b4*/ BL          0x00000000000323B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000323b8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000323bc*/ MOVT        R0, #40976                  @ 0xa010 
    /*000323c0*/ B           VI_DRV_CheckDevSize_x322bc
    VI_DRV_CheckDevSize_x323c4:
    /*000323c4*/ STR         R4, [SP, #4] 
    /*000323c8*/ MOVW        R3, #10452                  @ 0x28d4 
    /*000323cc*/ B           VI_DRV_CheckDevSize_x322e0
    VI_DRV_CheckDevSize_x323d0:
    /*000323d0*/ STR         R2, [SP, #20] 
    /*000323d4*/ MOVW        IP, #10423                  @ 0x28b7 
    /*000323d8*/ STR         R2, [SP, #16] 
    /*000323dc*/ MOV         R0, #3 
    /*000323e0*/ STR         R3, [SP, #12] 
    /*000323e4*/ MOVW        R2, #0                      @ .LC333 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10890] 
    /*000323e8*/ STR         R1, [SP, #8] 
    /*000323ec*/ MOVT        R2, #0                      @ .LC333 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10890] 
    /*000323f0*/ MOV         R1, #16 
    /*000323f4*/ STR         R4, [SP, #4] 
    /*000323f8*/ STR         IP, [SP] 
    /*000323fc*/ LDR         R3, [PC, #36]               @ 0x0000000000032428 
    /*00032400*/ BL          0x0000000000032400          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00032404*/ MOVW        R0, #32771                  @ 0x8003 
    /*00032408*/ MOVT        R0, #40976                  @ 0xa010 
    /*0003240c*/ B           VI_DRV_CheckDevSize_x322bc
    VI_DRV_CheckDevSize_x32410:
    /*00032410*/ MOVW        R3, #10439                  @ 0x28c7 
    /*00032414*/ MOVW        R2, #0                      @ .LC335 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10944] 
    /*00032418*/ STR         R4, [SP, #4] 
    /*0003241c*/ MOVT        R2, #0                      @ .LC335 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10944] 
    /*00032420*/ STR         R3, [SP] 
    /*00032424*/ B           VI_DRV_CheckDevSize_x322ec
    /*00032428*/ ANDEQ       R1, R0, IP, LSR PC 
FUNC_END VI_DRV_CheckDevSize


FUNC_BEGIN VI_DRV_CheckDataRate
    /*0003242c*/ CMP         R1, #0 
    /*00032430*/ BNE         VI_DRV_CheckDataRate_x3243c
    /*00032434*/ MOV         R0, R1 
    /*00032438*/ BX          LR 
    VI_DRV_CheckDataRate_x3243c:
    /*0003243c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00032440*/ SUB         SP, SP, #20 
    /*00032444*/ MOVW        R3, #10466                  @ 0x28e2 
    /*00032448*/ MOVW        R2, #0                      @ .LC336 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10998] 
    /*0003244c*/ STR         R1, [SP, #8] 
    /*00032450*/ MOVT        R2, #0                      @ .LC336 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10998] 
    /*00032454*/ STR         R0, [SP, #4] 
    /*00032458*/ MOV         R1, #16 
    /*0003245c*/ STR         R3, [SP] 
    /*00032460*/ MOV         R0, #3 
    /*00032464*/ LDR         R3, [PC, #16]               @ 0x000000000003247c 
    /*00032468*/ BL          0x0000000000032468          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003246c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00032470*/ MOVT        R0, #40976                  @ 0xa010 
    /*00032474*/ ADD         SP, SP, #20 
    /*00032478*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0003247c*/ ANDEQ       R1, R0, R0, ASR PC 
FUNC_END VI_DRV_CheckDataRate


FUNC_BEGIN VI_DRV_CheckIntfCfg
    /*00032480*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00032484*/ MOV         R4, R1 
    /*00032488*/ LDR         R2, [R1] 
    /*0003248c*/ SUB         SP, SP, #20 
    /*00032490*/ MOV         R6, R0 
    /*00032494*/ CMP         R2, #0 
    /*00032498*/ BNE         VI_DRV_CheckIntfCfg_x324a8
    /*0003249c*/ LDR         R3, [R1, #4] 
    /*000324a0*/ CMP         R3, #0 
    /*000324a4*/ BNE         VI_DRV_CheckIntfCfg_x32580
    VI_DRV_CheckIntfCfg_x324a8:
    /*000324a8*/ LDR         R3, [R4, #16] 
    /*000324ac*/ CMP         R3, #1 
    /*000324b0*/ BEQ         VI_DRV_CheckIntfCfg_x324f0
    /*000324b4*/ STR         R3, [SP, #4] 
    /*000324b8*/ MOVW        R2, #0                      @ .LC338 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10a4c] 
    /*000324bc*/ LDR         R3, [PC, #648]              @ 0x000000000003274c 
    /*000324c0*/ MOVT        R2, #0                      @ .LC338 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10a4c] 
    /*000324c4*/ MOVW        R1, #10248                  @ 0x2808 
    /*000324c8*/ STR         R6, [SP, #8] 
    /*000324cc*/ STR         R1, [SP] 
    VI_DRV_CheckIntfCfg_x324d0:
    /*000324d0*/ MOV         R1, #16 
    /*000324d4*/ MOV         R0, #3 
    /*000324d8*/ BL          0x00000000000324D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000324dc*/ MOVW        R5, #32771                  @ 0x8003 
    /*000324e0*/ MOVT        R5, #40976                  @ 0xa010 
    VI_DRV_CheckIntfCfg_x324e4:
    /*000324e4*/ MOV         R0, R5 
    /*000324e8*/ ADD         SP, SP, #20 
    /*000324ec*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_CheckIntfCfg_x324f0:
    /*000324f0*/ CMP         R2, #1 
    /*000324f4*/ LDR         R3, [R4, #36]               @ 0x24 
    /*000324f8*/ MOVLS       R1, #1 
    /*000324fc*/ MOVHI       R1, #0 
    /*00032500*/ CMP         R3, #5 
    /*00032504*/ MOVLS       R1, #0 
    /*00032508*/ CMP         R1, #0 
    /*0003250c*/ BNE         VI_DRV_CheckIntfCfg_x326a0
    /*00032510*/ SUB         R1, R2, #6 
    /*00032514*/ CMP         R2, #3 
    /*00032518*/ CMPNE       R1, #2 
    /*0003251c*/ BLS         VI_DRV_CheckIntfCfg_x32558
    VI_DRV_CheckIntfCfg_x32520:
    /*00032520*/ SUB         R3, R2, #1 
    /*00032524*/ CMP         R3, #1 
    /*00032528*/ BLS         VI_DRV_CheckIntfCfg_x32630
    VI_DRV_CheckIntfCfg_x3252c:
    /*0003252c*/ LDR         R3, [R4, #100]              @ 0x64 
    /*00032530*/ CMP         R3, #1 
    /*00032534*/ BLS         VI_DRV_CheckIntfCfg_x325a0
    /*00032538*/ MOVW        R1, #10345                  @ 0x2869 
    /*0003253c*/ STR         R3, [SP, #4] 
    /*00032540*/ MOVW        R2, #0                      @ .LC328 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x106b0] 
    /*00032544*/ STR         R6, [SP, #8] 
    /*00032548*/ STR         R1, [SP] 
    /*0003254c*/ MOVT        R2, #0                      @ .LC328 [R_ARM_MOVT_ABS: .rodata.str1.4+0x106b0] 
    /*00032550*/ LDR         R3, [PC, #504]              @ 0x0000000000032750 
    /*00032554*/ B           VI_DRV_CheckIntfCfg_x324d0
    VI_DRV_CheckIntfCfg_x32558:
    /*00032558*/ CMP         R3, #1 
    /*0003255c*/ BLS         VI_DRV_CheckIntfCfg_x32520
    /*00032560*/ MOVW        R1, #10273                  @ 0x2821 
    /*00032564*/ STR         R6, [SP, #8] 
    VI_DRV_CheckIntfCfg_x32568:
    /*00032568*/ STR         R3, [SP, #4] 
    /*0003256c*/ MOVW        R2, #0                      @ .LC339 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10a94] 
    /*00032570*/ STR         R1, [SP] 
    /*00032574*/ MOVT        R2, #0                      @ .LC339 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10a94] 
    /*00032578*/ LDR         R3, [PC, #468]              @ 0x0000000000032754 
    /*0003257c*/ B           VI_DRV_CheckIntfCfg_x324d0
    VI_DRV_CheckIntfCfg_x32580:
    /*00032580*/ MOVW        R1, #10236                  @ 0x27fc 
    /*00032584*/ STR         R3, [SP, #4] 
    /*00032588*/ MOVW        R2, #0                      @ .LC337 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x109ec] 
    /*0003258c*/ STR         R0, [SP, #8] 
    /*00032590*/ STR         R1, [SP] 
    /*00032594*/ MOVT        R2, #0                      @ .LC337 [R_ARM_MOVT_ABS: .rodata.str1.4+0x109ec] 
    /*00032598*/ LDR         R3, [PC, #440]              @ 0x0000000000032758 
    /*0003259c*/ B           VI_DRV_CheckIntfCfg_x324d0
    VI_DRV_CheckIntfCfg_x325a0:
    /*000325a0*/ LDR         R1, [R4, #104]              @ 0x68 
    /*000325a4*/ MOV         R0, R6 
    /*000325a8*/ BL          0x00000000000325A8          @ VI_DRV_CheckDataReverse [R_ARM_CALL: .text+0x32128] 
    /*000325ac*/ SUBS        R5, R0, #0 
    /*000325b0*/ BNE         VI_DRV_CheckIntfCfg_x324e4
    /*000325b4*/ ADD         R7, R4, #108                @ 0x6c 
    /*000325b8*/ MOV         R0, R6 
    /*000325bc*/ MOV         R1, R7 
    /*000325c0*/ BL          0x00000000000325C0          @ VI_DRV_CheckDevSize [R_ARM_CALL: .text+0x321d0] 
    /*000325c4*/ SUBS        R5, R0, #0 
    /*000325c8*/ BNE         VI_DRV_CheckIntfCfg_x324e4
    /*000325cc*/ LDR         R3, [R4] 
    /*000325d0*/ SUB         R3, R3, #2 
    /*000325d4*/ CMP         R3, #8 
    /*000325d8*/ BHI         VI_DRV_CheckIntfCfg_x32604
    /*000325dc*/ MOVW        R2, #393                    @ 0x189 
    /*000325e0*/ MVN         R3, R2, LSR R3 
    /*000325e4*/ TST         R3, #1 
    /*000325e8*/ BNE         VI_DRV_CheckIntfCfg_x32604
    /*000325ec*/ MOV         R2, R7 
    /*000325f0*/ ADD         R1, R4, #132                @ 0x84 
    /*000325f4*/ MOV         R0, R6 
    /*000325f8*/ BL          0x00000000000325F8          @ VI_DRV_CheckWDRAttr [R_ARM_CALL: .text+0x379f8] 
    /*000325fc*/ CMP         R0, #0 
    /*00032600*/ BNE         VI_DRV_CheckIntfCfg_x32698
    VI_DRV_CheckIntfCfg_x32604:
    /*00032604*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*00032608*/ CMP         R3, #0 
    /*0003260c*/ BEQ         VI_DRV_CheckIntfCfg_x324e4
    /*00032610*/ STR         R3, [SP, #8] 
    /*00032614*/ MOVW        R2, #0                      @ .LC336 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10998] 
    /*00032618*/ MOVW        R3, #10466                  @ 0x28e2 
    /*0003261c*/ STR         R6, [SP, #4] 
    /*00032620*/ STR         R3, [SP] 
    /*00032624*/ MOVT        R2, #0                      @ .LC336 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10998] 
    /*00032628*/ LDR         R3, [PC, #300]              @ 0x000000000003275c 
    /*0003262c*/ B           VI_DRV_CheckIntfCfg_x324d0
    VI_DRV_CheckIntfCfg_x32630:
    /*00032630*/ LDR         R3, [R4, #40]               @ 0x28 
    /*00032634*/ CMP         R3, #1 
    /*00032638*/ BHI         VI_DRV_CheckIntfCfg_x326cc
    /*0003263c*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*00032640*/ CMP         R3, #1 
    /*00032644*/ BHI         VI_DRV_CheckIntfCfg_x326ac
    /*00032648*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0003264c*/ CMP         R3, #1 
    /*00032650*/ BHI         VI_DRV_CheckIntfCfg_x3270c
    /*00032654*/ LDR         R3, [R4, #52]               @ 0x34 
    /*00032658*/ CMP         R3, #1 
    /*0003265c*/ BHI         VI_DRV_CheckIntfCfg_x326ec
    /*00032660*/ LDR         R3, [R4, #56]               @ 0x38 
    /*00032664*/ CMP         R3, #1 
    /*00032668*/ BHI         VI_DRV_CheckIntfCfg_x3272c
    /*0003266c*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*00032670*/ CMP         R3, #1 
    /*00032674*/ BLS         VI_DRV_CheckIntfCfg_x3252c
    /*00032678*/ MOVW        R1, #10332                  @ 0x285c 
    /*0003267c*/ STR         R3, [SP, #4] 
    /*00032680*/ MOVW        R2, #0                      @ .LC345 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10c38] 
    /*00032684*/ STR         R6, [SP, #8] 
    /*00032688*/ STR         R1, [SP] 
    /*0003268c*/ MOVT        R2, #0                      @ .LC345 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10c38] 
    /*00032690*/ LDR         R3, [PC, #200]              @ 0x0000000000032760 
    /*00032694*/ B           VI_DRV_CheckIntfCfg_x324d0
    VI_DRV_CheckIntfCfg_x32698:
    /*00032698*/ MOV         R5, R0 
    /*0003269c*/ B           VI_DRV_CheckIntfCfg_x324e4
    VI_DRV_CheckIntfCfg_x326a0:
    /*000326a0*/ STR         R6, [SP, #8] 
    /*000326a4*/ MOVW        R1, #10261                  @ 0x2815 
    /*000326a8*/ B           VI_DRV_CheckIntfCfg_x32568
    VI_DRV_CheckIntfCfg_x326ac:
    /*000326ac*/ MOVW        R1, #10297                  @ 0x2839 
    /*000326b0*/ STR         R3, [SP, #4] 
    /*000326b4*/ MOVW        R2, #0                      @ .LC341 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10b1c] 
    /*000326b8*/ STR         R6, [SP, #8] 
    /*000326bc*/ STR         R1, [SP] 
    /*000326c0*/ MOVT        R2, #0                      @ .LC341 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10b1c] 
    /*000326c4*/ LDR         R3, [PC, #148]              @ 0x0000000000032760 
    /*000326c8*/ B           VI_DRV_CheckIntfCfg_x324d0
    VI_DRV_CheckIntfCfg_x326cc:
    /*000326cc*/ MOVW        R1, #10288                  @ 0x2830 
    /*000326d0*/ STR         R3, [SP, #4] 
    /*000326d4*/ MOVW        R2, #0                      @ .LC340 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10ad8] 
    /*000326d8*/ STR         R6, [SP, #8] 
    /*000326dc*/ STR         R1, [SP] 
    /*000326e0*/ MOVT        R2, #0                      @ .LC340 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10ad8] 
    /*000326e4*/ LDR         R3, [PC, #116]              @ 0x0000000000032760 
    /*000326e8*/ B           VI_DRV_CheckIntfCfg_x324d0
    VI_DRV_CheckIntfCfg_x326ec:
    /*000326ec*/ MOVW        R1, #10315                  @ 0x284b 
    /*000326f0*/ STR         R3, [SP, #4] 
    /*000326f4*/ MOVW        R2, #0                      @ .LC343 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10ba8] 
    /*000326f8*/ STR         R6, [SP, #8] 
    /*000326fc*/ STR         R1, [SP] 
    /*00032700*/ MOVT        R2, #0                      @ .LC343 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10ba8] 
    /*00032704*/ LDR         R3, [PC, #84]               @ 0x0000000000032760 
    /*00032708*/ B           VI_DRV_CheckIntfCfg_x324d0
    VI_DRV_CheckIntfCfg_x3270c:
    /*0003270c*/ MOVW        R1, #10306                  @ 0x2842 
    /*00032710*/ STR         R3, [SP, #4] 
    /*00032714*/ MOVW        R2, #0                      @ .LC342 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10b64] 
    /*00032718*/ STR         R6, [SP, #8] 
    /*0003271c*/ STR         R1, [SP] 
    /*00032720*/ MOVT        R2, #0                      @ .LC342 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10b64] 
    /*00032724*/ LDR         R3, [PC, #52]               @ 0x0000000000032760 
    /*00032728*/ B           VI_DRV_CheckIntfCfg_x324d0
    VI_DRV_CheckIntfCfg_x3272c:
    /*0003272c*/ MOVW        R1, #10323                  @ 0x2853 
    /*00032730*/ STR         R3, [SP, #4] 
    /*00032734*/ MOVW        R2, #0                      @ .LC344 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10bf0] 
    /*00032738*/ STR         R6, [SP, #8] 
    /*0003273c*/ STR         R1, [SP] 
    /*00032740*/ MOVT        R2, #0                      @ .LC344 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10bf0] 
    /*00032744*/ LDR         R3, [PC, #20]               @ 0x0000000000032760 
    /*00032748*/ B           VI_DRV_CheckIntfCfg_x324d0
    /*0003274c*/ ANDEQ       R1, R0, R0, LSL #31 
    /*00032750*/ ANDEQ       R1, R0, R8, LSL #30 
    /*00032754*/ MULEQ       R0, R8, PC                  @ <UNPREDICTABLE> 
    /*00032758*/ ANDEQ       R1, R0, R8, ROR #30 
    /*0003275c*/ ANDEQ       R1, R0, R0, ASR PC 
    /*00032760*/ ANDEQ       R1, R0, IP, LSR #31 
FUNC_END VI_DRV_CheckIntfCfg


FUNC_BEGIN VI_DRV_CheckDevAttr
    /*00032764*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00032768*/ SUB         SP, SP, #20 
    /*0003276c*/ LDR         R3, [R1] 
    /*00032770*/ CMP         R3, #11 
    /*00032774*/ BHI         VI_DRV_CheckDevAttr_x327e8
    /*00032778*/ SUB         R2, R3, #7 
    /*0003277c*/ BIC         R2, R2, #4 
    /*00032780*/ CMP         R2, #0 
    /*00032784*/ CMPNE       R3, #4 
    /*00032788*/ STREQ       R3, [SP, #8] 
    /*0003278c*/ MOVWEQ      R3, #10213                  @ 0x27e5 
    /*00032790*/ BEQ         VI_DRV_CheckDevAttr_x327b8
    /*00032794*/ CMP         R0, #1 
    /*00032798*/ BEQ         VI_DRV_CheckDevAttr_x327a4
    /*0003279c*/ CMP         R3, #3 
    /*000327a0*/ BLS         VI_DRV_CheckDevAttr_x327b0
    VI_DRV_CheckDevAttr_x327a4:
    /*000327a4*/ ADD         SP, SP, #20 
    /*000327a8*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    VI_DRV_CheckDevAttr_x327ac:
    /*000327ac*/ B           VI_DRV_CheckDevAttr_x327ac  @ VI_DRV_CheckIntfCfg [R_ARM_JUMP24: .text+0x32480] 
    VI_DRV_CheckDevAttr_x327b0:
    /*000327b0*/ STR         R3, [SP, #8] 
    /*000327b4*/ MOVW        R3, #10223                  @ 0x27ef 
    VI_DRV_CheckDevAttr_x327b8:
    /*000327b8*/ MOVW        R2, #0                      @ .LC347 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10cc4] 
    /*000327bc*/ MOVT        R2, #0                      @ .LC347 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10cc4] 
    /*000327c0*/ STR         R0, [SP, #4] 
    /*000327c4*/ STR         R3, [SP] 
    VI_DRV_CheckDevAttr_x327c8:
    /*000327c8*/ LDR         R3, [PC, #52]               @ 0x0000000000032804 
    /*000327cc*/ MOV         R1, #16 
    /*000327d0*/ MOV         R0, #3 
    /*000327d4*/ BL          0x00000000000327D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000327d8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000327dc*/ MOVT        R0, #40976                  @ 0xa010 
    /*000327e0*/ ADD         SP, SP, #20 
    /*000327e4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckDevAttr_x327e8:
    /*000327e8*/ MOVW        R1, #10205                  @ 0x27dd 
    /*000327ec*/ MOVW        R2, #0                      @ .LC346 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10c84] 
    /*000327f0*/ STR         R0, [SP, #8] 
    /*000327f4*/ MOVT        R2, #0                      @ .LC346 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10c84] 
    /*000327f8*/ STR         R3, [SP, #4] 
    /*000327fc*/ STR         R1, [SP] 
    /*00032800*/ B           VI_DRV_CheckDevAttr_x327c8
    /*00032804*/ ANDEQ       R1, R0, R0, ASR #31 
FUNC_END VI_DRV_CheckDevAttr


FUNC_BEGIN VI_DRV_CapProcOnlineSel
    /*00032808*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0003280c*/ SUB         SP, SP, #28 
    /*00032810*/ MOV         R3, #16 
    /*00032814*/ STR         R0, [SP, #16] 
    /*00032818*/ MOV         R0, #2 
    /*0003281c*/ STR         R1, [SP, #4] 
    /*00032820*/ STR         R3, [SP, #12] 
    /*00032824*/ BL          0x0000000000032824          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00032828*/ ADD         R2, SP, #4 
    /*0003282c*/ MOV         R1, #62                     @ 0x3e 
    /*00032830*/ LDR         R3, [R0, #20] 
    /*00032834*/ ADD         R0, SP, #12 
    /*00032838*/ BLX         R3 
    /*0003283c*/ MOV         R0, #0 
    /*00032840*/ ADD         SP, SP, #28 
    /*00032844*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_CapProcOnlineSel


FUNC_BEGIN VI_DRV_ProcVpssOnlineSel
    /*00032848*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0003284c*/ SUB         SP, SP, #28 
    /*00032850*/ MOV         R3, #16 
    /*00032854*/ STR         R0, [SP, #16] 
    /*00032858*/ MOV         R0, #2 
    /*0003285c*/ STR         R1, [SP, #4] 
    /*00032860*/ STR         R3, [SP, #12] 
    /*00032864*/ BL          0x0000000000032864          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00032868*/ ADD         R2, SP, #4 
    /*0003286c*/ MOV         R1, #63                     @ 0x3f 
    /*00032870*/ LDR         R3, [R0, #20] 
    /*00032874*/ ADD         R0, SP, #12 
    /*00032878*/ BLX         R3 
    /*0003287c*/ MOV         R0, #0 
    /*00032880*/ ADD         SP, SP, #28 
    /*00032884*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_ProcVpssOnlineSel


FUNC_BEGIN VI_DRV_SetParallelMode
    /*00032888*/ MOV         R0, #0 
    /*0003288c*/ BX          LR 
FUNC_END VI_DRV_SetParallelMode


FUNC_BEGIN VI_DRV_SetViVpssMode
    /*00032890*/ PUSH        {R4, R5, R6, LR} 
    /*00032894*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00032898*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0003289c*/ MOV         R1, R0 
    /*000328a0*/ MOV         R2, #16 
    /*000328a4*/ ADD         R0, R4, #712                @ 0x2c8 
    /*000328a8*/ BL          0x00000000000328A8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000328ac*/ LDR         R3, [R4, #712]              @ 0x2c8 
    /*000328b0*/ MOV         R1, #0 
    /*000328b4*/ SUB         R5, R3, #2 
    /*000328b8*/ MOV         R0, R1 
    /*000328bc*/ CMP         R5, #1 
    /*000328c0*/ STR         R3, [R4, #744]              @ 0x2e8 
    /*000328c4*/ MOVHI       R5, #0 
    /*000328c8*/ MOVLS       R5, #1 
    /*000328cc*/ MOV         R2, R5 
    /*000328d0*/ BL          0x00000000000328D0          @ VI_HAL_SetPipeOnline [R_ARM_CALL: .text+0x35bfc] 
    /*000328d4*/ MOV         R1, R5 
    /*000328d8*/ MOV         R0, #0 
    /*000328dc*/ BL          0x00000000000328DC          @ VI_DRV_CapProcOnlineSel [R_ARM_CALL: .text+0x32808] 
    /*000328e0*/ LDR         R1, [R4, #744]              @ 0x2e8 
    /*000328e4*/ MOV         R0, #0 
    /*000328e8*/ BIC         R1, R1, #2 
    /*000328ec*/ SUB         R1, R1, #1 
    /*000328f0*/ CLZ         R1, R1 
    /*000328f4*/ LSR         R1, R1, #5 
    /*000328f8*/ BL          0x00000000000328F8          @ VI_DRV_ProcVpssOnlineSel [R_ARM_CALL: .text+0x32848] 
    /*000328fc*/ MOV         R0, #0 
    /*00032900*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_SetViVpssMode


FUNC_BEGIN VI_DRV_CheckViVpssMode
    /*00032904*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00032908*/ SUB         SP, SP, #28 
    /*0003290c*/ LDR         R3, [R0] 
    /*00032910*/ CMP         R3, #3 
    /*00032914*/ BHI         VI_DRV_CheckViVpssMode_x32998
    /*00032918*/ MOV         R2, #1 
    /*0003291c*/ MOV         R3, #0 
    VI_DRV_CheckViVpssMode_x32920:
    /*00032920*/ CMP         R3, #0 
    /*00032924*/ BEQ         VI_DRV_CheckViVpssMode_x32948
    /*00032928*/ LDR         R1, [R0, R3, LSL #2] 
    /*0003292c*/ CMP         R1, #1 
    /*00032930*/ BHI         VI_DRV_CheckViVpssMode_x32954
    /*00032934*/ CMP         R2, #4 
    /*00032938*/ BNE         VI_DRV_CheckViVpssMode_x32948
    /*0003293c*/ MOV         R0, #0 
    VI_DRV_CheckViVpssMode_x32940:
    /*00032940*/ ADD         SP, SP, #28 
    /*00032944*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckViVpssMode_x32948:
    /*00032948*/ ADD         R3, R3, #1 
    /*0003294c*/ ADD         R2, R2, #1 
    /*00032950*/ B           VI_DRV_CheckViVpssMode_x32920
    VI_DRV_CheckViVpssMode_x32954:
    /*00032954*/ STR         R1, [SP, #8] 
    /*00032958*/ MOV         R2, #0 
    /*0003295c*/ MOV         R1, #1 
    /*00032960*/ STR         R3, [SP, #4] 
    /*00032964*/ STR         R1, [SP, #16] 
    /*00032968*/ MOVW        R3, #10667                  @ 0x29ab 
    /*0003296c*/ STR         R2, [SP, #12] 
    /*00032970*/ MOV         R1, #16 
    /*00032974*/ STR         R3, [SP] 
    /*00032978*/ MOVW        R2, #0                      @ .LC349 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10d58] 
    /*0003297c*/ LDR         R3, [PC, #80]               @ 0x00000000000329d4 
    /*00032980*/ MOVT        R2, #0                      @ .LC349 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10d58] 
    /*00032984*/ MOV         R0, #3 
    /*00032988*/ BL          0x0000000000032988          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003298c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00032990*/ MOVT        R0, #40976                  @ 0xa010 
    /*00032994*/ B           VI_DRV_CheckViVpssMode_x32940
    VI_DRV_CheckViVpssMode_x32998:
    /*00032998*/ MOV         R0, #3 
    /*0003299c*/ STR         R3, [SP, #4] 
    /*000329a0*/ MOV         R2, #0 
    /*000329a4*/ MOVW        R3, #10651                  @ 0x299b 
    /*000329a8*/ STR         R2, [SP, #8] 
    /*000329ac*/ MOV         R1, #16 
    /*000329b0*/ STR         R3, [SP] 
    /*000329b4*/ MOVW        R2, #0                      @ .LC348 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10d04] 
    /*000329b8*/ STR         R0, [SP, #12] 
    /*000329bc*/ MOVT        R2, #0                      @ .LC348 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10d04] 
    /*000329c0*/ LDR         R3, [PC, #12]               @ 0x00000000000329d4 
    /*000329c4*/ BL          0x00000000000329C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000329c8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000329cc*/ MOVT        R0, #40976                  @ 0xa010 
    /*000329d0*/ B           VI_DRV_CheckViVpssMode_x32940
    /*000329d4*/ LDRDEQ      R1, [R0], -R8 
FUNC_END VI_DRV_CheckViVpssMode


FUNC_BEGIN VI_DRV_GetDefaultViVpssMode
    /*000329d8*/ MOV         R3, #0 
    /*000329dc*/ STR         R3, [R0] 
    /*000329e0*/ STR         R3, [R0, #4] 
    /*000329e4*/ STR         R3, [R0, #8] 
    /*000329e8*/ STR         R3, [R0, #12] 
    /*000329ec*/ BX          LR 
FUNC_END VI_DRV_GetDefaultViVpssMode


FUNC_BEGIN VI_DRV_CheckPipeDumpAttr
    /*000329f0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000329f4*/ SUB         SP, SP, #20 
    /*000329f8*/ LDR         R3, [R1] 
    /*000329fc*/ CMP         R3, #1 
    /*00032a00*/ BHI         VI_DRV_CheckPipeDumpAttr_x32a1c
    /*00032a04*/ LDR         R3, [R1, #4] 
    /*00032a08*/ CMP         R3, #8 
    /*00032a0c*/ MOVLS       R0, #0 
    /*00032a10*/ BHI         VI_DRV_CheckPipeDumpAttr_x32a4c
    VI_DRV_CheckPipeDumpAttr_x32a14:
    /*00032a14*/ ADD         SP, SP, #20 
    /*00032a18*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckPipeDumpAttr_x32a1c:
    /*00032a1c*/ STR         R3, [SP, #4] 
    /*00032a20*/ MOVW        R2, #0                      @ .LC350 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10db0] 
    /*00032a24*/ MOVW        R3, #10690                  @ 0x29c2 
    /*00032a28*/ MOVT        R2, #0                      @ .LC350 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10db0] 
    /*00032a2c*/ STR         R3, [SP] 
    /*00032a30*/ MOV         R1, #16 
    /*00032a34*/ LDR         R3, [PC, #68]               @ 0x0000000000032a80 
    /*00032a38*/ MOV         R0, #3 
    /*00032a3c*/ BL          0x0000000000032A3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00032a40*/ MOVW        R0, #32771                  @ 0x8003 
    /*00032a44*/ MOVT        R0, #40976                  @ 0xa010 
    /*00032a48*/ B           VI_DRV_CheckPipeDumpAttr_x32a14
    VI_DRV_CheckPipeDumpAttr_x32a4c:
    /*00032a4c*/ STR         R3, [SP, #8] 
    /*00032a50*/ MOVW        R2, #10697                  @ 0x29c9 
    /*00032a54*/ MOV         R3, #8 
    /*00032a58*/ MOV         R1, #16 
    /*00032a5c*/ STM         SP, {R2, R3} 
    /*00032a60*/ MOV         R0, #3 
    /*00032a64*/ MOVW        R2, #0                      @ .LC174 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd49c] 
    /*00032a68*/ LDR         R3, [PC, #16]               @ 0x0000000000032a80 
    /*00032a6c*/ MOVT        R2, #0                      @ .LC174 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd49c] 
    /*00032a70*/ BL          0x0000000000032A70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00032a74*/ MOVW        R0, #32771                  @ 0x8003 
    /*00032a78*/ MOVT        R0, #40976                  @ 0xa010 
    /*00032a7c*/ B           VI_DRV_CheckPipeDumpAttr_x32a14
    /*00032a80*/ STRDEQ      R1, [R0], -R0 
FUNC_END VI_DRV_CheckPipeDumpAttr


FUNC_BEGIN VI_DRV_SetPipeDumpAttr
    /*00032a84*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00032a88*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00032a8c*/ ADD         R0, R3, R0, LSL #2 
    /*00032a90*/ MOV         R2, #12 
    /*00032a94*/ PUSH        {R4, R5, R6, LR} 
    /*00032a98*/ MOV         R6, R1 
    /*00032a9c*/ LDR         R5, [R0, #728]              @ 0x2d8 
    /*00032aa0*/ ADD         R4, R5, #34048              @ 0x8500 
    /*00032aa4*/ ADD         R4, R4, #160                @ 0xa0 
    /*00032aa8*/ MOV         R0, R4 
    /*00032aac*/ BL          0x0000000000032AAC          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*00032ab0*/ CMP         R0, #0 
    /*00032ab4*/ BEQ         VI_DRV_SetPipeDumpAttr_x32ad4
    /*00032ab8*/ ADD         R5, R5, #32768              @ 0x8000 
    /*00032abc*/ MOV         R1, R6 
    /*00032ac0*/ MOV         R0, R4 
    /*00032ac4*/ MOV         R2, #12 
    /*00032ac8*/ BL          0x0000000000032AC8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00032acc*/ MOV         R3, #1 
    /*00032ad0*/ STR         R3, [R5, #2052]             @ 0x804 
    VI_DRV_SetPipeDumpAttr_x32ad4:
    /*00032ad4*/ MOV         R0, #0 
    /*00032ad8*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_SetPipeDumpAttr


FUNC_BEGIN VI_DRV_GetPipeDumpAttr
    /*00032adc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00032ae0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00032ae4*/ ADD         R3, R3, R0, LSL #2 
    /*00032ae8*/ MOV         R0, R1 
    /*00032aec*/ PUSH        {R4, LR} 
    /*00032af0*/ MOV         R2, #12 
    /*00032af4*/ LDR         R1, [R3, #728]              @ 0x2d8 
    /*00032af8*/ ADD         R1, R1, #34048              @ 0x8500 
    /*00032afc*/ ADD         R1, R1, #160                @ 0xa0 
    /*00032b00*/ BL          0x0000000000032B00          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00032b04*/ MOV         R0, #0 
    /*00032b08*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetPipeDumpAttr


FUNC_BEGIN VI_DRV_GetWorkingPipeDumpAttr
    /*00032b0c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00032b10*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00032b14*/ ADD         R3, R3, R0, LSL #2 
    /*00032b18*/ MOV         R0, R1 
    /*00032b1c*/ PUSH        {R4, LR} 
    /*00032b20*/ MOV         R2, #12 
    /*00032b24*/ LDR         R1, [R3, #728]              @ 0x2d8 
    /*00032b28*/ ADD         R1, R1, #68608              @ 0x10c00 
    /*00032b2c*/ ADD         R1, R1, #40                 @ 0x28 
    /*00032b30*/ BL          0x0000000000032B30          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00032b34*/ MOV         R0, #0 
    /*00032b38*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetWorkingPipeDumpAttr


FUNC_BEGIN VI_DRV_CheckPipeRfrCompressParam
    /*00032b3c*/ MOV         R0, #0 
    /*00032b40*/ BX          LR 
FUNC_END VI_DRV_CheckPipeRfrCompressParam


FUNC_BEGIN VI_DRV_CapRegInit
    VI_DRV_CapRegInit_x32b44:
    /*00032b44*/ B           VI_DRV_CapRegInit_x32b44    @ VI_HAL_CapRegInit [R_ARM_JUMP24: .text+0x37084] 
FUNC_END VI_DRV_CapRegInit


FUNC_BEGIN VI_DRV_CapRegExit
    VI_DRV_CapRegExit_x32b48:
    /*00032b48*/ B           VI_DRV_CapRegExit_x32b48    @ VI_HAL_CapRegExit [R_ARM_JUMP24: .text+0x370c8] 
FUNC_END VI_DRV_CapRegExit


FUNC_BEGIN VI_DRV_CapDevCtxInit
    /*00032b4c*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00032b50*/ MOV         R2, #712                    @ 0x2c8 
    /*00032b54*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00032b58*/ MOV         R1, #0 
    VI_DRV_CapDevCtxInit_x32b5c:
    /*00032b5c*/ B           VI_DRV_CapDevCtxInit_x32b5c @ osal_memset [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_CapDevCtxInit


FUNC_BEGIN VI_DRV_CapDevCtxExit
    /*00032b60*/ BX          LR 
FUNC_END VI_DRV_CapDevCtxExit


FUNC_BEGIN VI_DRV_GetAllCapIrqId
    /*00032b64*/ PUSH        {R4, LR} 
    /*00032b68*/ MOV         R4, R0 
    /*00032b6c*/ MOV         R0, #0 
    /*00032b70*/ BL          0x0000000000032B70          @ VI_HAL_GetCapIrqNum [R_ARM_CALL: .text+0x34788] 
    /*00032b74*/ STR         R0, [R4] 
    /*00032b78*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetAllCapIrqId


FUNC_BEGIN VI_DRV_SetFeWchPicConfig
    /*00032b7c*/ CMP         R1, #0 
    /*00032b80*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00032b84*/ MOV         R7, R0 
    /*00032b88*/ SUB         SP, SP, #108                @ 0x6c 
    /*00032b8c*/ MOV         R6, R2 
    /*00032b90*/ BEQ         VI_DRV_SetFeWchPicConfig_x32c54
    /*00032b94*/ LDRD        R0, [R2, #72]               @ 0x48 
    /*00032b98*/ LDRD        R2, [R2, #80]               @ 0x50 
    /*00032b9c*/ LDR         IP, [R6, #44]               @ 0x2c 
    /*00032ba0*/ STRD        R0, [SP, #24] 
    /*00032ba4*/ STRD        R2, [SP, #32] 
    /*00032ba8*/ LDRD        R4, [R6, #120]              @ 0x78 
    /*00032bac*/ LDR         R3, [R6, #4] 
    /*00032bb0*/ LDR         R2, [R6] 
    /*00032bb4*/ LDRD        R8, [R6, #128]              @ 0x80 
    /*00032bb8*/ LDR         R1, [R6, #48]               @ 0x30 
    /*00032bbc*/ LDR         R0, [R6, #12] 
    /*00032bc0*/ STR         R3, [SP, #68]               @ 0x44 
    /*00032bc4*/ STR         R2, [SP, #64]               @ 0x40 
    /*00032bc8*/ STRD        R4, [SP, #40]               @ 0x28 
    /*00032bcc*/ STR         IP, [SP, #56]               @ 0x38 
    /*00032bd0*/ STRD        R8, [SP, #48]               @ 0x30 
    /*00032bd4*/ STR         R1, [SP, #60]               @ 0x3c 
    /*00032bd8*/ BL          0x0000000000032BD8          @ VI_DRV_TransPixel [R_ARM_CALL: .text+0x2d654] 
    /*00032bdc*/ CMP         R0, #2 
    /*00032be0*/ LDR         R0, [R6, #12] 
    /*00032be4*/ MOVNE       R3, #1 
    /*00032be8*/ MOVEQ       R2, #1 
    /*00032bec*/ MOVEQ       R3, #0 
    /*00032bf0*/ STREQ       R2, [SP, #80]               @ 0x50 
    /*00032bf4*/ STRNE       R3, [SP, #80]               @ 0x50 
    /*00032bf8*/ CMP         R0, #25 
    /*00032bfc*/ STR         R3, [SP, #84]               @ 0x54 
    /*00032c00*/ BEQ         VI_DRV_SetFeWchPicConfig_x32cc0
    /*00032c04*/ CMP         R0, #26 
    /*00032c08*/ BEQ         VI_DRV_SetFeWchPicConfig_x32cd0
    /*00032c0c*/ MOV         R3, #0 
    /*00032c10*/ CMP         R0, #39                     @ 0x27 
    /*00032c14*/ STR         R3, [SP, #72]               @ 0x48 
    /*00032c18*/ STREQ       R3, [SP, #84]               @ 0x54 
    /*00032c1c*/ STR         R3, [SP, #76]               @ 0x4c 
    VI_DRV_SetFeWchPicConfig_x32c20:
    /*00032c20*/ LDR         R3, [R6, #20] 
    /*00032c24*/ ADD         R4, SP, #24 
    /*00032c28*/ ADDS        R3, R3, #0 
    /*00032c2c*/ MOVNE       R3, #1 
    /*00032c30*/ STR         R3, [SP, #92]               @ 0x5c 
    /*00032c34*/ BL          0x0000000000032C34          @ VI_DRV_WchTransBitWidth [R_ARM_CALL: .text+0x2db88] 
    /*00032c38*/ LDR         R3, [R6, #20] 
    /*00032c3c*/ SUB         R3, R3, #3 
    /*00032c40*/ CLZ         R3, R3 
    /*00032c44*/ LSR         R3, R3, #5 
    /*00032c48*/ STR         R3, [SP, #96]               @ 0x60 
    /*00032c4c*/ STR         R0, [SP, #88]               @ 0x58 
    /*00032c50*/ B           VI_DRV_SetFeWchPicConfig_x32c64
    VI_DRV_SetFeWchPicConfig_x32c54:
    /*00032c54*/ ADD         R4, SP, #24 
    /*00032c58*/ MOV         R2, #80                     @ 0x50 
    /*00032c5c*/ MOV         R0, R4 
    /*00032c60*/ BL          0x0000000000032C60          @ osal_memset [R_ARM_CALL: +0x0] 
    VI_DRV_SetFeWchPicConfig_x32c64:
    /*00032c64*/ MOV         R1, R4 
    /*00032c68*/ MOV         R0, R7 
    /*00032c6c*/ BL          0x0000000000032C6C          @ VI_HAL_SetFeWchPicConfig [R_ARM_CALL: .text+0x35518] 
    /*00032c70*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00032c74*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00032c78*/ LDR         LR, [SP, #64]               @ 0x40 
    /*00032c7c*/ ADD         R3, R3, R7, LSL #2 
    /*00032c80*/ LDR         IP, [SP, #72]               @ 0x48 
    /*00032c84*/ LDR         R1, [R6, #12] 
    /*00032c88*/ MOV         R0, R7 
    /*00032c8c*/ LDR         R2, [R3, #728]              @ 0x2d8 
    /*00032c90*/ ADD         R4, SP, #16 
    /*00032c94*/ ADD         R3, SP, #8 
    /*00032c98*/ STR         LR, [SP, #8] 
    /*00032c9c*/ ADD         R2, R2, #65536              @ 0x10000 
    /*00032ca0*/ STR         LR, [SP, #12] 
    /*00032ca4*/ STR         IP, [SP, #16] 
    /*00032ca8*/ LDR         R2, [R2, #3000]             @ 0xbb8 
    /*00032cac*/ STR         R4, [SP] 
    /*00032cb0*/ STR         IP, [SP, #20] 
    /*00032cb4*/ BL          0x0000000000032CB4          @ VI_HAL_SetChnSkipCfg [R_ARM_CALL: .text+0x355f4] 
    /*00032cb8*/ ADD         SP, SP, #108                @ 0x6c 
    /*00032cbc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_SetFeWchPicConfig_x32cc0:
    /*00032cc0*/ LDM         R6, {R2, R3} 
    /*00032cc4*/ STR         R2, [SP, #72]               @ 0x48 
    /*00032cc8*/ STR         R3, [SP, #76]               @ 0x4c 
    /*00032ccc*/ B           VI_DRV_SetFeWchPicConfig_x32c20
    VI_DRV_SetFeWchPicConfig_x32cd0:
    /*00032cd0*/ LDM         R6, {R2, R3} 
    /*00032cd4*/ LSR         R3, R3, #1 
    /*00032cd8*/ STR         R2, [SP, #72]               @ 0x48 
    /*00032cdc*/ STR         R3, [SP, #76]               @ 0x4c 
    /*00032ce0*/ B           VI_DRV_SetFeWchPicConfig_x32c20
FUNC_END VI_DRV_SetFeWchPicConfig


FUNC_BEGIN VI_DRV_GetPipeCmpParam
    /*00032ce4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00032ce8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00032cec*/ ADD         R3, R3, R0, LSL #2 
    /*00032cf0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00032cf4*/ MOV         R6, R0 
    /*00032cf8*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*00032cfc*/ SUB         SP, SP, #204                @ 0xcc 
    /*00032d00*/ ADD         R3, R3, #32768              @ 0x8000 
    /*00032d04*/ LDR         R3, [R3, #1348]             @ 0x544 
    /*00032d08*/ CMP         R3, #0 
    /*00032d0c*/ BEQ         VI_DRV_GetPipeCmpParam_x32da0
    /*00032d10*/ MOV         R7, R1 
    /*00032d14*/ LDR         R0, [R2, #12] 
    /*00032d18*/ LDR         R1, [R2, #24] 
    /*00032d1c*/ MOV         R5, R2 
    /*00032d20*/ MOV         R4, #0 
    /*00032d24*/ STR         R4, [SP, #36]               @ 0x24 
    /*00032d28*/ STR         R4, [SP, #40]               @ 0x28 
    /*00032d2c*/ BL          0x0000000000032D2C          @ VI_DRV_TransDynamicRange2BitWidthEn [R_ARM_CALL: .text+0x2dab0] 
    /*00032d30*/ LDR         R2, [R5, #20] 
    /*00032d34*/ ADD         R1, SP, #24 
    /*00032d38*/ LDR         R3, [R5, #332]              @ 0x14c 
    /*00032d3c*/ LDR         IP, [R5, #12] 
    /*00032d40*/ STR         R2, [SP, #16] 
    /*00032d44*/ STR         R3, [SP, #8] 
    /*00032d48*/ LDM         R5, {R2, R3} 
    /*00032d4c*/ STR         IP, [SP, #12] 
    /*00032d50*/ STR         R4, [SP, #44]               @ 0x2c 
    /*00032d54*/ STR         R2, [SP, #28] 
    /*00032d58*/ STR         R3, [SP, #32] 
    /*00032d5c*/ STR         R0, [SP, #20] 
    /*00032d60*/ MOV         R0, R6 
    /*00032d64*/ BL          0x0000000000032D64          @ VI_DRV_GetIspPubBayerFormat [R_ARM_CALL: .text+0x38d2c] 
    /*00032d68*/ MOV         R0, #2 
    /*00032d6c*/ BL          0x0000000000032D6C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00032d70*/ MOV         R2, R4 
    /*00032d74*/ ADD         R1, SP, #48                 @ 0x30 
    /*00032d78*/ LDR         R3, [R0, #132]              @ 0x84 
    /*00032d7c*/ ADD         R0, SP, #8 
    /*00032d80*/ BLX         R3 
    /*00032d84*/ ADD         R1, SP, #48                 @ 0x30 
    /*00032d88*/ MOV         R0, R7 
    /*00032d8c*/ MOV         R2, #152                    @ 0x98 
    /*00032d90*/ BL          0x0000000000032D90          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00032d94*/ MOV         R0, R4 
    VI_DRV_GetPipeCmpParam_x32d98:
    /*00032d98*/ ADD         SP, SP, #204                @ 0xcc 
    /*00032d9c*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_GetPipeCmpParam_x32da0:
    /*00032da0*/ STR         R0, [SP, #4] 
    /*00032da4*/ MOVW        R3, #10874                  @ 0x2a7a 
    /*00032da8*/ MOVW        R2, #0                      @ .LC351 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10e00] 
    /*00032dac*/ STR         R3, [SP] 
    /*00032db0*/ MOVT        R2, #0                      @ .LC351 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10e00] 
    /*00032db4*/ LDR         R3, [PC, #20]               @ 0x0000000000032dd0 
    /*00032db8*/ MOV         R1, #16 
    /*00032dbc*/ MOV         R0, #3 
    /*00032dc0*/ BL          0x0000000000032DC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00032dc4*/ MOVW        R0, #32776                  @ 0x8008 
    /*00032dc8*/ MOVT        R0, #40976                  @ 0xa010 
    /*00032dcc*/ B           VI_DRV_GetPipeCmpParam_x32d98
    /*00032dd0*/ ANDEQ       R2, R0, IP 
FUNC_END VI_DRV_GetPipeCmpParam


FUNC_BEGIN VI_DRV_UpdateWchCmpAttr
    /*00032dd4*/ PUSH        {R4, R5, R6, LR} 
    /*00032dd8*/ SUB         SP, SP, #192                @ 0xc0 
    /*00032ddc*/ MOV         R4, R1 
    /*00032de0*/ MOV         R6, R0 
    /*00032de4*/ MOV         R2, #152                    @ 0x98 
    /*00032de8*/ ADD         R0, SP, #40                 @ 0x28 
    /*00032dec*/ MOV         R1, #0 
    /*00032df0*/ MOV         R5, #0 
    /*00032df4*/ BL          0x0000000000032DF4          @ memset [R_ARM_CALL: +0x0] 
    /*00032df8*/ LDR         R1, [R4, #24] 
    /*00032dfc*/ LDR         R0, [R4, #12] 
    /*00032e00*/ STR         R5, [SP, #28] 
    /*00032e04*/ STR         R5, [SP, #32] 
    /*00032e08*/ BL          0x0000000000032E08          @ VI_DRV_TransDynamicRange2BitWidthEn [R_ARM_CALL: .text+0x2dab0] 
    /*00032e0c*/ LDR         R2, [R4, #20] 
    /*00032e10*/ ADD         R1, SP, #16 
    /*00032e14*/ LDR         R3, [R4, #332]              @ 0x14c 
    /*00032e18*/ LDR         IP, [R4, #12] 
    /*00032e1c*/ STR         R2, [SP, #8] 
    /*00032e20*/ STR         R3, [SP] 
    /*00032e24*/ LDM         R4, {R2, R3} 
    /*00032e28*/ STR         IP, [SP, #4] 
    /*00032e2c*/ STR         R5, [SP, #36]               @ 0x24 
    /*00032e30*/ STR         R2, [SP, #20] 
    /*00032e34*/ STR         R3, [SP, #24] 
    /*00032e38*/ STR         R0, [SP, #12] 
    /*00032e3c*/ MOV         R0, R6 
    /*00032e40*/ BL          0x0000000000032E40          @ VI_DRV_GetIspPubBayerFormat [R_ARM_CALL: .text+0x38d2c] 
    /*00032e44*/ MOV         R0, #2 
    /*00032e48*/ BL          0x0000000000032E48          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00032e4c*/ MOV         R2, R5 
    /*00032e50*/ ADD         R1, SP, #40                 @ 0x28 
    /*00032e54*/ LDR         R3, [R0, #132]              @ 0x84 
    /*00032e58*/ MOV         R0, SP 
    /*00032e5c*/ BLX         R3 
    /*00032e60*/ ADD         R1, SP, #40                 @ 0x28 
    /*00032e64*/ MOV         R0, R6 
    /*00032e68*/ BL          0x0000000000032E68          @ VI_HAL_SetWChCmpAttr [R_ARM_CALL: .text+0x356ac] 
    /*00032e6c*/ ADD         SP, SP, #192                @ 0xc0 
    /*00032e70*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_UpdateWchCmpAttr


FUNC_BEGIN VI_DRV_EnableSrc
    /*00032e74*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00032e78*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00032e7c*/ ADD         R0, R3, R0, LSL #2 
    /*00032e80*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*00032e84*/ LDR         R0, [R3, #8] 
    VI_DRV_EnableSrc_x32e88:
    /*00032e88*/ B           VI_DRV_EnableSrc_x32e88     @ VI_HAL_EnableSrc [R_ARM_JUMP24: .text+0x35900] 
FUNC_END VI_DRV_EnableSrc


FUNC_BEGIN VI_DRV_TransSrcPixelBitWidth
    /*00032e8c*/ SUB         R0, R0, #17 
    /*00032e90*/ CMP         R0, #4 
    /*00032e94*/ LDRLS       PC, [PC, R0, LSL #2] 
    /*00032e98*/ B           VI_DRV_TransSrcPixelBitWidth_x32ed8
    /*00032e9c*/ @           <UNDEFINED> instruction: 0x00032eb0 
    /*00032ea0*/ ANDEQ       R2, R3, R0, ASR #29 
    /*00032ea4*/ ANDEQ       R2, R3, R8, ASR #29 
    /*00032ea8*/ LDRDEQ      R2, [R3], -R0 
    /*00032eac*/ @           <UNDEFINED> instruction: 0x00032eb8 
    /*00032eb0*/ MOV         R0, #8 
    /*00032eb4*/ BX          LR 
    /*00032eb8*/ MOV         R0, #16 
    /*00032ebc*/ BX          LR 
    /*00032ec0*/ MOV         R0, #10 
    /*00032ec4*/ BX          LR 
    /*00032ec8*/ MOV         R0, #12 
    /*00032ecc*/ BX          LR 
    /*00032ed0*/ MOV         R0, #14 
    /*00032ed4*/ BX          LR 
    VI_DRV_TransSrcPixelBitWidth_x32ed8:
    /*00032ed8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00032edc*/ SUB         SP, SP, #12 
    /*00032ee0*/ MOVW        R3, #10953                  @ 0x2ac9 
    /*00032ee4*/ MOV         R1, #16 
    /*00032ee8*/ STR         R3, [SP] 
    /*00032eec*/ MOVW        R2, #0                      @ .LC248 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xed98] 
    /*00032ef0*/ LDR         R3, [PC, #20]               @ 0x0000000000032f0c 
    /*00032ef4*/ MOVT        R2, #0                      @ .LC248 [R_ARM_MOVT_ABS: .rodata.str1.4+0xed98] 
    /*00032ef8*/ MOV         R0, #3 
    /*00032efc*/ BL          0x0000000000032EFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00032f00*/ MOV         R0, #0 
    /*00032f04*/ ADD         SP, SP, #12 
    /*00032f08*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00032f0c*/ ANDEQ       R2, R0, R4, LSR #32 
FUNC_END VI_DRV_TransSrcPixelBitWidth


FUNC_BEGIN VI_DRV_SetSrcConfig
    /*00032f10*/ MOV         R0, #0 
    /*00032f14*/ BX          LR 
FUNC_END VI_DRV_SetSrcConfig


FUNC_BEGIN VI_DRV_SetSrcRegNew
    /*00032f18*/ BX          LR 
FUNC_END VI_DRV_SetSrcRegNew


FUNC_BEGIN VI_DRV_SetSrcUpdate
    /*00032f1c*/ BX          LR 
FUNC_END VI_DRV_SetSrcUpdate


FUNC_BEGIN VI_DRV_SetPortSelect
    /*00032f20*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00032f24*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00032f28*/ ADD         R3, R3, R0, LSL #2 
    /*00032f2c*/ LDR         R3, [R3, #728]              @ 0x2d8 
    /*00032f30*/ LDR         R2, [R3, #8] 
    /*00032f34*/ CMP         R2, #0 
    /*00032f38*/ BNE         VI_DRV_SetPortSelect_x32f50
    /*00032f3c*/ SUB         R1, R1, #1 
    /*00032f40*/ MOV         R0, R2 
    /*00032f44*/ CLZ         R1, R1 
    /*00032f48*/ LSR         R1, R1, #5 
    VI_DRV_SetPortSelect_x32f4c:
    /*00032f4c*/ B           VI_DRV_SetPortSelect_x32f4c @ VI_HAL_SetPortSelect [R_ARM_JUMP24: .text+0x3682c] 
    VI_DRV_SetPortSelect_x32f50:
    /*00032f50*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00032f54*/ SUB         SP, SP, #20 
    /*00032f58*/ MOVW        R1, #10993                  @ 0x2af1 
    /*00032f5c*/ LDR         R3, [PC, #36]               @ 0x0000000000032f88 
    /*00032f60*/ STR         R2, [SP, #8] 
    /*00032f64*/ MOVW        R2, #0                      @ .LC352 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10e38] 
    /*00032f68*/ STR         R0, [SP, #4] 
    /*00032f6c*/ MOVT        R2, #0                      @ .LC352 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10e38] 
    /*00032f70*/ STR         R1, [SP] 
    /*00032f74*/ MOV         R0, #3 
    /*00032f78*/ MOV         R1, #16 
    /*00032f7c*/ BL          0x0000000000032F7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00032f80*/ ADD         SP, SP, #20 
    /*00032f84*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00032f88*/ ANDEQ       R2, R0, R4, ASR #32 
FUNC_END VI_DRV_SetPortSelect


FUNC_BEGIN VI_DRV_SetOnlineSel
    VI_DRV_SetOnlineSel_x32f8c:
    /*00032f8c*/ B           VI_DRV_SetOnlineSel_x32f8c  @ VI_HAL_SetOnlineSel [R_ARM_JUMP24: .text+0x3489c] 
FUNC_END VI_DRV_SetOnlineSel


FUNC_BEGIN VI_DRV_SetParallelCrop
    /*00032f90*/ BX          LR 
FUNC_END VI_DRV_SetParallelCrop


FUNC_BEGIN VI_DRV_SetParallelNewer
    /*00032f94*/ BX          LR 
FUNC_END VI_DRV_SetParallelNewer


FUNC_BEGIN VI_DRV_SetWchRegNewer
    VI_DRV_SetWchRegNewer_x32f98:
    /*00032f98*/ B           VI_DRV_SetWchRegNewer_x32f98@ VI_HAL_SetWchRegNewer [R_ARM_JUMP24: .text+0x35c28] 
FUNC_END VI_DRV_SetWchRegNewer


FUNC_BEGIN VI_DRV_SetWchSttInfo
    /*00032f9c*/ BX          LR 
FUNC_END VI_DRV_SetWchSttInfo


FUNC_BEGIN VI_DRV_PrepareChnDsfPicInfo
    /*00032fa0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00032fa4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00032fa8*/ ADD         R0, R3, R0, LSL #2 
    /*00032fac*/ MOV         R3, #184                    @ 0xb8 
    /*00032fb0*/ PUSH        {R4, R5, R6, LR} 
    /*00032fb4*/ LDR         IP, [R0, #728]              @ 0x2d8 
    /*00032fb8*/ MOV         R0, #44                     @ 0x2c 
    /*00032fbc*/ LDR         LR, [R2, #4] 
    /*00032fc0*/ MLA         R3, R3, R1, IP 
    /*00032fc4*/ MLA         R0, R0, R1, IP 
    /*00032fc8*/ ADD         R3, R3, #88064              @ 0x15800 
    /*00032fcc*/ ADD         R6, R3, #712                @ 0x2c8 
    /*00032fd0*/ STR         LR, [R3, #736]              @ 0x2e0 
    /*00032fd4*/ ADD         R0, R0, #68608              @ 0x10c00 
    /*00032fd8*/ LDR         R4, [R2] 
    /*00032fdc*/ ADD         LR, R3, #720                @ 0x2d0 
    /*00032fe0*/ STR         R4, [R3, #732]              @ 0x2dc 
    /*00032fe4*/ LDR         R4, [R2, #44]               @ 0x2c 
    /*00032fe8*/ STR         R4, [R3, #728]              @ 0x2d8 
    /*00032fec*/ LDRD        R4, [R2, #120]              @ 0x78 
    /*00032ff0*/ STRD        R4, [R6] 
    /*00032ff4*/ LDRD        R4, [R2, #144]              @ 0x90 
    /*00032ff8*/ STRD        R4, [LR] 
    /*00032ffc*/ LDR         R2, [R0, #4] 
    /*00033000*/ MOV         R0, #0 
    /*00033004*/ CMP         R2, #0 
    /*00033008*/ MOVEQ       R2, #8 
    /*0003300c*/ MOVNE       R2, #10 
    /*00033010*/ STR         R2, [R3, #740]              @ 0x2e4 
    /*00033014*/ MOV         R2, #184                    @ 0xb8 
    /*00033018*/ MLA         R1, R2, R1, IP 
    /*0003301c*/ MOV         R3, #1 
    /*00033020*/ ADD         R1, R1, #88064              @ 0x15800 
    /*00033024*/ STR         R3, [R1, #744]              @ 0x2e8 
    /*00033028*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_PrepareChnDsfPicInfo


FUNC_BEGIN VI_DRV_SetDISDsfConfig
    /*0003302c*/ MOV         R3, #184                    @ 0xb8 
    /*00033030*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00033034*/ MUL         R3, R3, R1 
    /*00033038*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0003303c*/ ADD         R0, IP, R0, LSL #2 
    /*00033040*/ MOV         R1, R2 
    /*00033044*/ PUSH        {R4, LR} 
    /*00033048*/ ADD         R3, R3, #88064              @ 0x15800 
    /*0003304c*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*00033050*/ ADD         R3, R3, #596                @ 0x254 
    /*00033054*/ MOV         R2, #112                    @ 0x70 
    /*00033058*/ ADD         R0, R0, R3 
    /*0003305c*/ BL          0x000000000003305C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00033060*/ MOV         R0, #0 
    /*00033064*/ POP         {R4, PC} 
FUNC_END VI_DRV_SetDISDsfConfig


FUNC_BEGIN VI_DRV_SetDISen
    /*00033068*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0003306c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00033070*/ ADD         R0, R3, R0, LSL #2 
    /*00033074*/ MOV         R3, #184                    @ 0xb8 
    /*00033078*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*0003307c*/ MLA         R1, R3, R1, R0 
    /*00033080*/ ADD         R1, R1, #88064              @ 0x15800 
    /*00033084*/ STR         R2, [R1, #572]              @ 0x23c 
    /*00033088*/ BX          LR 
FUNC_END VI_DRV_SetDISen


FUNC_BEGIN VI_DRV_DIS_GetBufSize
    /*0003308c*/ MUL         R2, R2, R0 
    /*00033090*/ MOV         R0, #0 
    /*00033094*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00033098*/ MOV         LR, #4 
    /*0003309c*/ ADD         R2, R2, #7 
    /*000330a0*/ LSR         R2, R2, #3 
    /*000330a4*/ ADD         R2, R2, #15 
    /*000330a8*/ BIC         R2, R2, #15 
    VI_DRV_DIS_GetBufSize_x330ac:
    /*000330ac*/ ASR         R3, R1, #1 
    /*000330b0*/ ASR         IP, R2, #1 
    /*000330b4*/ ADD         R3, R3, #1 
    /*000330b8*/ SUBS        LR, LR, #1 
    /*000330bc*/ ADD         IP, IP, #15 
    /*000330c0*/ ADD         R3, R3, R3, LSR #31 
    /*000330c4*/ MLA         R0, R2, R1, R0 
    /*000330c8*/ BIC         R1, R3, #1 
    /*000330cc*/ BIC         R2, IP, #15 
    /*000330d0*/ BNE         VI_DRV_DIS_GetBufSize_x330ac
    /*000330d4*/ ADD         R0, R0, #13120              @ 0x3340 
    /*000330d8*/ ADD         R0, R0, #12 
    /*000330dc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_DRV_DIS_GetBufSize


FUNC_BEGIN VI_DRV_DISPoolInit
    /*000330e0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000330e4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000330e8*/ ADD         R3, R3, R0, LSL #2 
    /*000330ec*/ MOV         IP, #184                    @ 0xb8 
    /*000330f0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000330f4*/ MOV         R4, R1 
    /*000330f8*/ LDR         R7, [R3, #728]              @ 0x2d8 
    /*000330fc*/ MOV         R1, #44                     @ 0x2c 
    /*00033100*/ MOVW        LR, #34172                  @ 0x857c 
    /*00033104*/ SUB         SP, SP, #20 
    /*00033108*/ MVN         R3, #0 
    /*0003310c*/ MOV         R9, #4 
    /*00033110*/ MLA         R1, R1, R4, R7 
    /*00033114*/ STR         R3, [SP, #12] 
    /*00033118*/ MLA         IP, IP, R4, R7 
    /*0003311c*/ MOV         R3, #0 
    /*00033120*/ ADD         IP, IP, #88064              @ 0x15800 
    /*00033124*/ LDR         R1, [R1, LR] 
    /*00033128*/ LDR         R5, [IP, #632]              @ 0x278 
    /*0003312c*/ CMP         R1, R3 
    /*00033130*/ LDR         R6, [IP, #640]              @ 0x280 
    /*00033134*/ ADD         R5, R5, #1 
    /*00033138*/ MOVEQ       R1, #8 
    /*0003313c*/ MOVNE       R1, #10 
    /*00033140*/ ADD         R6, R6, #1 
    /*00033144*/ MUL         LR, R5, R1 
    /*00033148*/ MOV         R8, R6 
    /*0003314c*/ STR         R1, [IP, #740]              @ 0x2e4 
    /*00033150*/ ADD         LR, LR, #7 
    /*00033154*/ LSR         LR, LR, #3 
    /*00033158*/ ADD         LR, LR, #15 
    /*0003315c*/ BIC         LR, LR, #15 
    VI_DRV_DISPoolInit_x33160:
    /*00033160*/ ASR         IP, R8, #1 
    /*00033164*/ ASR         R1, LR, #1 
    /*00033168*/ ADD         IP, IP, #1 
    /*0003316c*/ SUBS        R9, R9, #1 
    /*00033170*/ ADD         R1, R1, #15 
    /*00033174*/ ADD         IP, IP, IP, LSR #31 
    /*00033178*/ MLA         R3, LR, R8, R3 
    /*0003317c*/ BIC         R8, IP, #1 
    /*00033180*/ BIC         LR, R1, #15 
    /*00033184*/ BNE         VI_DRV_DISPoolInit_x33160
    /*00033188*/ ADD         R8, R3, #13120              @ 0x3340 
    /*0003318c*/ MOVW        R1, #0                      @ .LC353 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10e8c] 
    /*00033190*/ ADD         R8, R8, #12 
    /*00033194*/ MOVT        R1, #0                      @ .LC353 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10e8c] 
    /*00033198*/ STR         R1, [SP] 
    /*0003319c*/ ADD         R1, SP, #12 
    /*000331a0*/ MOV         R3, R8 
    /*000331a4*/ BL          0x00000000000331A4          @ VI_WDR_CreatePool [R_ARM_CALL: .text+0x37524] 
    /*000331a8*/ SUBS        R9, R0, #0 
    /*000331ac*/ BNE         VI_DRV_DISPoolInit_x331dc
    /*000331b0*/ MOV         R2, #184                    @ 0xb8 
    /*000331b4*/ LDR         R3, [SP, #12] 
    /*000331b8*/ MLA         R4, R2, R4, R7 
    /*000331bc*/ MOV         R0, R9 
    /*000331c0*/ ADD         R4, R4, #88064              @ 0x15800 
    /*000331c4*/ STR         R6, [R4, #592]              @ 0x250 
    /*000331c8*/ STR         R5, [R4, #588]              @ 0x24c 
    /*000331cc*/ STR         R8, [R4, #584]              @ 0x248 
    /*000331d0*/ STR         R3, [R4, #580]              @ 0x244 
    /*000331d4*/ ADD         SP, SP, #20 
    /*000331d8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_DISPoolInit_x331dc:
    /*000331dc*/ MOVW        R3, #11141                  @ 0x2b85 
    /*000331e0*/ MOV         R1, #16 
    /*000331e4*/ STR         R3, [SP] 
    /*000331e8*/ MOVW        R2, #0                      @ .LC354 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10e90] 
    /*000331ec*/ LDR         R3, [PC, #20]               @ 0x0000000000033208 
    /*000331f0*/ MOVT        R2, #0                      @ .LC354 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10e90] 
    /*000331f4*/ MOV         R0, #3 
    /*000331f8*/ BL          0x00000000000331F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000331fc*/ MOV         R0, R9 
    /*00033200*/ ADD         SP, SP, #20 
    /*00033204*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    /*00033208*/ ANDEQ       R2, R0, IP, ASR R0 
FUNC_END VI_DRV_DISPoolInit


FUNC_BEGIN VI_DRV_DISPoolDeInit
    VI_DRV_DISPoolDeInit_x3320c:
    /*0003320c*/ B           VI_DRV_DISPoolDeInit_x3320c @ VI_WDR_DestoryPool [R_ARM_JUMP24: .text+0x37660] 
FUNC_END VI_DRV_DISPoolDeInit


FUNC_BEGIN VI_DRV_SetDISPoolId
    /*00033210*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00033214*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00033218*/ ADD         R0, R3, R0, LSL #2 
    /*0003321c*/ MOV         R3, #184                    @ 0xb8 
    /*00033220*/ LDR         R0, [R0, #728]              @ 0x2d8 
    /*00033224*/ MLA         R1, R3, R1, R0 
    /*00033228*/ ADD         R1, R1, #88064              @ 0x15800 
    /*0003322c*/ STR         R2, [R1, #580]              @ 0x244 
    /*00033230*/ BX          LR 
FUNC_END VI_DRV_SetDISPoolId


FUNC_BEGIN VI_DRV_GetDISPoolId
    /*00033234*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00033238*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0003323c*/ ADD         R0, R3, R0, LSL #2 
    /*00033240*/ MOV         R3, #184                    @ 0xb8 
    /*00033244*/ LDR         R2, [R0, #728]              @ 0x2d8 
    /*00033248*/ MLA         R1, R3, R1, R2 
    /*0003324c*/ ADD         R1, R1, #88064              @ 0x15800 
    /*00033250*/ LDR         R0, [R1, #580]              @ 0x244 
    /*00033254*/ BX          LR 
FUNC_END VI_DRV_GetDISPoolId


FUNC_BEGIN VI_DRV_DISGetVB
    /*00033258*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0003325c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00033260*/ ADD         IP, R3, R0, LSL #2 
    /*00033264*/ MOV         R3, #184                    @ 0xb8 
    /*00033268*/ PUSH        {R4, LR} 
    /*0003326c*/ SUB         SP, SP, #40                 @ 0x28 
    /*00033270*/ LDR         IP, [IP, #728]              @ 0x2d8 
    /*00033274*/ MOV         LR, #39                     @ 0x27 
    /*00033278*/ STR         LR, [SP, #36]               @ 0x24 
    /*0003327c*/ ADD         R0, SP, #16 
    /*00033280*/ MOV         R4, #0 
    /*00033284*/ STR         R4, [SP, #28] 
    /*00033288*/ MLA         R3, R3, R1, IP 
    /*0003328c*/ MOV         R1, R2 
    /*00033290*/ ADD         R3, R3, #88064              @ 0x15800 
    /*00033294*/ LDR         LR, [R3, #740]              @ 0x2e4 
    /*00033298*/ LDR         IP, [R3, #580]              @ 0x244 
    /*0003329c*/ LDR         R2, [R3, #592]              @ 0x250 
    /*000332a0*/ LDR         R3, [R3, #588]              @ 0x24c 
    /*000332a4*/ STR         LR, [SP, #32] 
    /*000332a8*/ STR         IP, [SP, #16] 
    /*000332ac*/ STR         R2, [SP, #24] 
    /*000332b0*/ STR         R3, [SP, #20] 
    /*000332b4*/ BL          0x00000000000332B4          @ VI_WDR_GetVb [R_ARM_CALL: .text+0x377a4] 
    /*000332b8*/ SUBS        R4, R0, #0 
    /*000332bc*/ BEQ         VI_DRV_DISGetVB_x332f0
    /*000332c0*/ LDR         R1, [SP, #24] 
    /*000332c4*/ MOVW        R0, #11190                  @ 0x2bb6 
    /*000332c8*/ LDR         R3, [SP, #20] 
    /*000332cc*/ MOVW        R2, #0                      @ .LC355 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10ec8] 
    /*000332d0*/ STR         R0, [SP] 
    /*000332d4*/ MOVT        R2, #0                      @ .LC355 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10ec8] 
    /*000332d8*/ STR         R1, [SP, #8] 
    /*000332dc*/ MOV         R0, #3 
    /*000332e0*/ STR         R3, [SP, #4] 
    /*000332e4*/ MOV         R1, #16 
    /*000332e8*/ LDR         R3, [PC, #12]               @ 0x00000000000332fc 
    /*000332ec*/ BL          0x00000000000332EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_DISGetVB_x332f0:
    /*000332f0*/ MOV         R0, R4 
    /*000332f4*/ ADD         SP, SP, #40                 @ 0x28 
    /*000332f8*/ POP         {R4, PC} 
    /*000332fc*/ ANDEQ       R2, R0, R0, ROR R0 
FUNC_END VI_DRV_DISGetVB


FUNC_BEGIN VI_DRV_GetHWCycleCnt
    VI_DRV_GetHWCycleCnt_x33300:
    /*00033300*/ B           VI_DRV_GetHWCycleCnt_x33300 @ VI_HAL_OfflineGetHWCycleCnt [R_ARM_JUMP24: .text+0x354a8] 
FUNC_END VI_DRV_GetHWCycleCnt


FUNC_BEGIN VI_DRV_CheckSendRawInlineMode
    /*00033304*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00033308*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0003330c*/ ADD         R3, R3, R0, LSL #2 
    /*00033310*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00033314*/ SUB         SP, SP, #20 
    /*00033318*/ LDR         R2, [R3, #728]              @ 0x2d8 
    /*0003331c*/ CMP         R2, #0 
    /*00033320*/ BEQ         VI_DRV_CheckSendRawInlineMode_x333a0
    /*00033324*/ ADD         R2, R2, #32768              @ 0x8000 
    /*00033328*/ LDR         R2, [R2, #1436]             @ 0x59c 
    /*0003332c*/ CMP         R2, #0 
    /*00033330*/ BEQ         VI_DRV_CheckSendRawInlineMode_x333a0
    /*00033334*/ LDR         R1, [R1] 
    /*00033338*/ CMP         R1, #1 
    /*0003333c*/ BHI         VI_DRV_CheckSendRawInlineMode_x3336c
    /*00033340*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*00033344*/ CMP         R3, #1 
    /*00033348*/ MOVLS       R3, #0 
    /*0003334c*/ MOVHI       R3, #1 
    /*00033350*/ CMP         R2, #2 
    /*00033354*/ MOVNE       R3, #0 
    /*00033358*/ CMP         R3, #0 
    /*0003335c*/ MOVEQ       R0, R3 
    /*00033360*/ BNE         VI_DRV_CheckSendRawInlineMode_x333d0
    VI_DRV_CheckSendRawInlineMode_x33364:
    /*00033364*/ ADD         SP, SP, #20 
    /*00033368*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckSendRawInlineMode_x3336c:
    /*0003336c*/ STR         R1, [SP, #8] 
    /*00033370*/ MOVW        R3, #11216                  @ 0x2bd0 
    /*00033374*/ STR         R0, [SP, #4] 
    /*00033378*/ MOVW        R2, #0                      @ .LC357 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10f4c] 
    /*0003337c*/ STR         R3, [SP] 
    /*00033380*/ MOVT        R2, #0                      @ .LC357 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10f4c] 
    /*00033384*/ LDR         R3, [PC, #92]               @ 0x00000000000333e8 
    /*00033388*/ MOV         R1, #16 
    /*0003338c*/ MOV         R0, #3 
    /*00033390*/ BL          0x0000000000033390          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00033394*/ MOVW        R0, #32771                  @ 0x8003 
    /*00033398*/ MOVT        R0, #40976                  @ 0xa010 
    /*0003339c*/ B           VI_DRV_CheckSendRawInlineMode_x33364
    VI_DRV_CheckSendRawInlineMode_x333a0:
    /*000333a0*/ MOVW        R2, #0                      @ .LC356 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10f04] 
    /*000333a4*/ MOVT        R2, #0                      @ .LC356 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10f04] 
    /*000333a8*/ MOVW        R3, #11210                  @ 0x2bca 
    /*000333ac*/ STR         R0, [SP, #4] 
    /*000333b0*/ STR         R3, [SP] 
    VI_DRV_CheckSendRawInlineMode_x333b4:
    /*000333b4*/ LDR         R3, [PC, #44]               @ 0x00000000000333e8 
    /*000333b8*/ MOV         R1, #16 
    /*000333bc*/ MOV         R0, #3 
    /*000333c0*/ BL          0x00000000000333C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000333c4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000333c8*/ MOVT        R0, #40976                  @ 0xa010 
    /*000333cc*/ B           VI_DRV_CheckSendRawInlineMode_x33364
    VI_DRV_CheckSendRawInlineMode_x333d0:
    /*000333d0*/ MOVW        R3, #11226                  @ 0x2bda 
    /*000333d4*/ MOVW        R2, #0                      @ .LC358 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10fa4] 
    /*000333d8*/ STR         R0, [SP, #4] 
    /*000333dc*/ MOVT        R2, #0                      @ .LC358 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10fa4] 
    /*000333e0*/ STR         R3, [SP] 
    /*000333e4*/ B           VI_DRV_CheckSendRawInlineMode_x333b4
    /*000333e8*/ ANDEQ       R2, R0, R0, LSL #1 
FUNC_END VI_DRV_CheckSendRawInlineMode


FUNC_BEGIN VI_DRV_CheckSendRawInWdrMode
    /*000333ec*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000333f0*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000333f4*/ LSL         R7, R0, #2 
    /*000333f8*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000333fc*/ MOV         R6, R0 
    /*00033400*/ ADD         R0, R5, R7 
    /*00033404*/ MOV         R4, R1 
    /*00033408*/ MOV         R3, #356                    @ 0x164 
    /*0003340c*/ LDR         R1, [R0, #728]              @ 0x2d8 
    /*00033410*/ SUB         SP, SP, #52                 @ 0x34 
    /*00033414*/ MOV         R2, #20 
    /*00033418*/ ADD         R0, SP, #28 
    /*0003341c*/ LDR         R1, [R1, #8] 
    /*00033420*/ MLA         R1, R3, R1, R5 
    /*00033424*/ ADD         R1, R1, #16 
    /*00033428*/ BL          0x0000000000033428          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0003342c*/ LDR         R3, [R4] 
    /*00033430*/ LDR         LR, [SP, #28] 
    /*00033434*/ CMP         LR, R3 
    /*00033438*/ BNE         VI_DRV_CheckSendRawInWdrMode_x334f0
    /*0003343c*/ CMP         LR, #0 
    /*00033440*/ BEQ         VI_DRV_CheckSendRawInWdrMode_x33480
    /*00033444*/ LDR         R2, [SP, #32] 
    /*00033448*/ LDR         R0, [R4, #24] 
    /*0003344c*/ CMP         R2, R0 
    /*00033450*/ ADDEQ       R1, R4, #28 
    /*00033454*/ ADDEQ       IP, SP, #36                 @ 0x24 
    /*00033458*/ MOVEQ       R3, #0 
    /*0003345c*/ BEQ         VI_DRV_CheckSendRawInWdrMode_x33474
    /*00033460*/ B           VI_DRV_CheckSendRawInWdrMode_x334ac
    VI_DRV_CheckSendRawInWdrMode_x33464:
    /*00033464*/ LDR         R2, [IP], #4 
    /*00033468*/ LDR         R0, [R1], #4 
    /*0003346c*/ CMP         R2, R0 
    /*00033470*/ BNE         VI_DRV_CheckSendRawInWdrMode_x334b0
    VI_DRV_CheckSendRawInWdrMode_x33474:
    /*00033474*/ ADD         R3, R3, #1 
    /*00033478*/ CMP         R3, LR 
    /*0003347c*/ BNE         VI_DRV_CheckSendRawInWdrMode_x33464
    VI_DRV_CheckSendRawInWdrMode_x33480:
    /*00033480*/ ADD         R5, R5, R7 
    /*00033484*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*00033488*/ CMP         R3, #0 
    /*0003348c*/ BEQ         VI_DRV_CheckSendRawInWdrMode_x33528
    /*00033490*/ ADD         R3, R3, #32768              @ 0x8000 
    /*00033494*/ LDR         R3, [R3, #1436]             @ 0x59c 
    /*00033498*/ CMP         R3, #2 
    /*0003349c*/ MOVEQ       R0, #0 
    /*000334a0*/ BNE         VI_DRV_CheckSendRawInWdrMode_x33528
    VI_DRV_CheckSendRawInWdrMode_x334a4:
    /*000334a4*/ ADD         SP, SP, #52                 @ 0x34 
    /*000334a8*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_CheckSendRawInWdrMode_x334ac:
    /*000334ac*/ MOV         R3, #0 
    VI_DRV_CheckSendRawInWdrMode_x334b0:
    /*000334b0*/ STR         R0, [SP, #16] 
    /*000334b4*/ MOV         R1, #16 
    /*000334b8*/ STR         R2, [SP, #12] 
    /*000334bc*/ MOVW        R0, #11254                  @ 0x2bf6 
    /*000334c0*/ STR         R3, [SP, #8] 
    /*000334c4*/ MOVW        R2, #0                      @ .LC360 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1104c] 
    /*000334c8*/ STR         R0, [SP] 
    /*000334cc*/ MOVT        R2, #0                      @ .LC360 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1104c] 
    /*000334d0*/ STR         R6, [SP, #4] 
    /*000334d4*/ MOV         R0, #3 
    /*000334d8*/ LDR         R3, [PC, #124]              @ 0x000000000003355c 
    /*000334dc*/ BL          0x00000000000334DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000334e0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000334e4*/ MOVT        R0, #40976                  @ 0xa010 
    /*000334e8*/ ADD         SP, SP, #52                 @ 0x34 
    /*000334ec*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_CheckSendRawInWdrMode_x334f0:
    /*000334f0*/ STR         R3, [SP, #12] 
    /*000334f4*/ MOVW        R2, #0                      @ .LC359 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10ff4] 
    /*000334f8*/ MOVW        R3, #11246                  @ 0x2bee 
    /*000334fc*/ STR         LR, [SP, #8] 
    /*00033500*/ STR         R3, [SP] 
    /*00033504*/ MOVT        R2, #0                      @ .LC359 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10ff4] 
    /*00033508*/ STR         R6, [SP, #4] 
    /*0003350c*/ MOV         R1, #16 
    /*00033510*/ LDR         R3, [PC, #68]               @ 0x000000000003355c 
    /*00033514*/ MOV         R0, #3 
    /*00033518*/ BL          0x0000000000033518          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003351c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00033520*/ MOVT        R0, #40976                  @ 0xa010 
    /*00033524*/ B           VI_DRV_CheckSendRawInWdrMode_x334a4
    VI_DRV_CheckSendRawInWdrMode_x33528:
    /*00033528*/ STR         R3, [SP, #8] 
    /*0003352c*/ MOVW        R2, #0                      @ .LC361 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x110a8] 
    /*00033530*/ MOVW        R3, #11263                  @ 0x2bff 
    /*00033534*/ STR         R6, [SP, #4] 
    /*00033538*/ STR         R3, [SP] 
    /*0003353c*/ MOVT        R2, #0                      @ .LC361 [R_ARM_MOVT_ABS: .rodata.str1.4+0x110a8] 
    /*00033540*/ LDR         R3, [PC, #20]               @ 0x000000000003355c 
    /*00033544*/ MOV         R1, #16 
    /*00033548*/ MOV         R0, #3 
    /*0003354c*/ BL          0x000000000003354C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00033550*/ MOVW        R0, #32771                  @ 0x8003 
    /*00033554*/ MOVT        R0, #40976                  @ 0xa010 
    /*00033558*/ B           VI_DRV_CheckSendRawInWdrMode_x334a4
    /*0003355c*/ ANDEQ       R2, R0, R0, LSR #1 
FUNC_END VI_DRV_CheckSendRawInWdrMode


FUNC_BEGIN VI_DRV_IsStitchGrpSetted
    /*00033560*/ MOV         R0, #0 
    /*00033564*/ BX          LR 
FUNC_END VI_DRV_IsStitchGrpSetted


FUNC_BEGIN VI_DRV_CheckStitchGrpAttr
    /*00033568*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0003356c*/ SUB         SP, SP, #12 
    /*00033570*/ MOVW        R3, #11277                  @ 0x2c0d 
    /*00033574*/ MOV         R1, #16 
    /*00033578*/ STR         R3, [SP] 
    /*0003357c*/ MOVW        R2, #0                      @ .LC362 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11100] 
    /*00033580*/ LDR         R3, [PC, #20]               @ 0x000000000003359c 
    /*00033584*/ MOVT        R2, #0                      @ .LC362 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11100] 
    /*00033588*/ MOV         R0, #3 
    /*0003358c*/ BL          0x000000000003358C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00033590*/ MVN         R0, #0 
    /*00033594*/ ADD         SP, SP, #12 
    /*00033598*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0003359c*/ ANDEQ       R2, R0, R0, ASR #1 
FUNC_END VI_DRV_CheckStitchGrpAttr


FUNC_BEGIN VI_DRV_SetStitchGrpAttr
    /*000335a0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000335a4*/ SUB         SP, SP, #12 
    /*000335a8*/ MOVW        R3, #11283                  @ 0x2c13 
    /*000335ac*/ MOV         R1, #16 
    /*000335b0*/ STR         R3, [SP] 
    /*000335b4*/ MOVW        R2, #0                      @ .LC362 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11100] 
    /*000335b8*/ LDR         R3, [PC, #20]               @ 0x00000000000335d4 
    /*000335bc*/ MOVT        R2, #0                      @ .LC362 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11100] 
    /*000335c0*/ MOV         R0, #3 
    /*000335c4*/ BL          0x00000000000335C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000335c8*/ MVN         R0, #0 
    /*000335cc*/ ADD         SP, SP, #12 
    /*000335d0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000335d4*/ LDRDEQ      R2, [R0], -IP 
FUNC_END VI_DRV_SetStitchGrpAttr


FUNC_BEGIN VI_DRV_GetStitchGrpAttr
    /*000335d8*/ MVN         R0, #0 
    /*000335dc*/ BX          LR 
FUNC_END VI_DRV_GetStitchGrpAttr


FUNC_BEGIN VI_DRV_GetPipeStitchAttr
    /*000335e0*/ MOV         R0, #0 
    /*000335e4*/ BX          LR 
FUNC_END VI_DRV_GetPipeStitchAttr


FUNC_BEGIN VI_DRV_DestroyStitchGrp
    /*000335e8*/ BX          LR 
FUNC_END VI_DRV_DestroyStitchGrp


FUNC_BEGIN VI_DRV_GetSingleAttr
    /*000335ec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000335f0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000335f4*/ ADD         R0, R3, R0, LSL #2 
    /*000335f8*/ MOV         IP, #0 
    /*000335fc*/ PUSH        {R4, LR} 
    /*00033600*/ MOV         R4, #104                    @ 0x68 
    /*00033604*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*00033608*/ MOV         LR, #1 
    /*0003360c*/ STR         R1, [R2] 
    /*00033610*/ MOV         R0, IP 
    /*00033614*/ ADD         R3, R3, #32768              @ 0x8000 
    /*00033618*/ STR         R4, [R2, #8] 
    /*0003361c*/ STR         LR, [R2, #4] 
    /*00033620*/ STR         IP, [R2, #12] 
    /*00033624*/ STR         IP, [R2, #16] 
    /*00033628*/ LDR         R1, [R3, #1336]             @ 0x538 
    /*0003362c*/ STR         R1, [R2, #20] 
    /*00033630*/ LDR         R3, [R3, #1340]             @ 0x53c 
    /*00033634*/ STR         R3, [R2, #24] 
    /*00033638*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetSingleAttr


FUNC_BEGIN VI_DRV_GetSplitAttr
    /*0003363c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00033640*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00033644*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00033648*/ ADD         R5, R3, R0, LSL #2 
    /*0003364c*/ SUB         SP, SP, #52                 @ 0x34 
    /*00033650*/ MOV         R8, R0 
    /*00033654*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*00033658*/ MOV         R4, R1 
    /*0003365c*/ LDR         R7, [R5, #712]              @ 0x2c8 
    /*00033660*/ ADD         R6, R3, #32768              @ 0x8000 
    /*00033664*/ LDR         R0, [R3, #320]              @ 0x140 
    /*00033668*/ BL          0x0000000000033668          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*0003366c*/ LDR         R3, [R6, #1336]             @ 0x538 
    /*00033670*/ STR         R3, [R4, #68]               @ 0x44 
    /*00033674*/ LDR         R3, [R6, #1340]             @ 0x53c 
    /*00033678*/ STR         R3, [R4, #72]               @ 0x48 
    /*0003367c*/ LDR         R3, [R6, #1344]             @ 0x540 
    /*00033680*/ STR         R3, [R4, #76]               @ 0x4c 
    /*00033684*/ CMP         R0, #1 
    /*00033688*/ MOVEQ       R9, #1920                   @ 0x780 
    /*0003368c*/ MOVNE       R9, #3840                   @ 0xf00 
    /*00033690*/ CMP         R7, #0 
    /*00033694*/ BEQ         VI_DRV_GetSplitAttr_x336fc
    /*00033698*/ CMP         R7, #1 
    /*0003369c*/ BEQ         VI_DRV_GetSplitAttr_x337bc
    /*000336a0*/ SUB         R3, R7, #2 
    /*000336a4*/ CMP         R3, #1 
    /*000336a8*/ BLS         VI_DRV_GetSplitAttr_x336b8
    VI_DRV_GetSplitAttr_x336ac:
    /*000336ac*/ MOV         R0, #0 
    /*000336b0*/ ADD         SP, SP, #52                 @ 0x34 
    /*000336b4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_GetSplitAttr_x336b8:
    /*000336b8*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*000336bc*/ MOV         R1, #104                    @ 0x68 
    /*000336c0*/ STR         R7, [R4] 
    /*000336c4*/ MOV         R2, #1 
    /*000336c8*/ ADD         R3, R3, #32768              @ 0x8000 
    /*000336cc*/ STR         R2, [R4, #4] 
    /*000336d0*/ STR         R1, [R4, #8] 
    /*000336d4*/ MOV         R2, #0 
    /*000336d8*/ STR         R2, [R4, #12] 
    /*000336dc*/ MOV         R0, #0 
    /*000336e0*/ STR         R2, [R4, #16] 
    /*000336e4*/ LDR         R2, [R3, #1336]             @ 0x538 
    /*000336e8*/ STR         R2, [R4, #20] 
    /*000336ec*/ LDR         R3, [R3, #1340]             @ 0x53c 
    /*000336f0*/ STR         R3, [R4, #24] 
    /*000336f4*/ ADD         SP, SP, #52                 @ 0x34 
    /*000336f8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_GetSplitAttr_x336fc:
    /*000336fc*/ MOV         R0, R8 
    /*00033700*/ BL          0x0000000000033700          @ VI_DRV_NeedSplit [R_ARM_CALL: .text+0x2f638] 
    /*00033704*/ CMP         R0, #0 
    /*00033708*/ BNE         VI_DRV_GetSplitAttr_x3374c
    /*0003370c*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*00033710*/ MOV         R1, #104                    @ 0x68 
    /*00033714*/ STR         R0, [R4] 
    /*00033718*/ MOV         R2, #1 
    /*0003371c*/ ADD         R3, R3, #32768              @ 0x8000 
    /*00033720*/ STR         R0, [R4, #12] 
    /*00033724*/ STR         R0, [R4, #16] 
    /*00033728*/ MOV         R0, #0 
    /*0003372c*/ STR         R1, [R4, #8] 
    /*00033730*/ STR         R2, [R4, #4] 
    /*00033734*/ LDR         R2, [R3, #1336]             @ 0x538 
    /*00033738*/ STR         R2, [R4, #20] 
    /*0003373c*/ LDR         R3, [R3, #1340]             @ 0x53c 
    /*00033740*/ STR         R3, [R4, #24] 
    /*00033744*/ ADD         SP, SP, #52                 @ 0x34 
    /*00033748*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_GetSplitAttr_x3374c:
    /*0003374c*/ LDR         IP, [R6, #1336]             @ 0x538 
    /*00033750*/ ADD         R3, SP, #12 
    /*00033754*/ MOV         R2, #104                    @ 0x68 
    /*00033758*/ STR         R9, [SP] 
    /*0003375c*/ ADD         R1, SP, #24 
    /*00033760*/ ADD         R0, SP, #16 
    /*00033764*/ STR         R7, [SP, #20] 
    /*00033768*/ STR         IP, [SP, #16] 
    /*0003376c*/ BL          0x000000000003376C          @ VIPROCSplitForIsp [R_ARM_CALL: .text+0x38d98] 
    /*00033770*/ LDR         R2, [SP, #12] 
    /*00033774*/ MOV         R3, #104                    @ 0x68 
    /*00033778*/ STR         R7, [R4] 
    /*0003377c*/ CMP         R2, #0 
    /*00033780*/ STMIB       R4, {R2, R3} 
    /*00033784*/ BEQ         VI_DRV_GetSplitAttr_x336ac
    /*00033788*/ ADD         R2, R4, R2, LSL #4 
    /*0003378c*/ ADD         R3, SP, #24 
    VI_DRV_GetSplitAttr_x33790:
    /*00033790*/ LDR         R0, [R3, #4] 
    /*00033794*/ ADD         R4, R4, #16 
    /*00033798*/ LDR         R1, [R3], #8 
    /*0003379c*/ STR         R7, [R4] 
    /*000337a0*/ STR         R0, [R4, #-4] 
    /*000337a4*/ STR         R1, [R4, #4] 
    /*000337a8*/ LDR         R1, [R6, #1340]             @ 0x53c 
    /*000337ac*/ STR         R1, [R4, #8] 
    /*000337b0*/ CMP         R4, R2 
    /*000337b4*/ BNE         VI_DRV_GetSplitAttr_x33790
    /*000337b8*/ B           VI_DRV_GetSplitAttr_x336ac
    VI_DRV_GetSplitAttr_x337bc:
    /*000337bc*/ MOV         R0, R8 
    /*000337c0*/ BL          0x00000000000337C0          @ VI_DRV_NeedSplit [R_ARM_CALL: .text+0x2f638] 
    /*000337c4*/ CMP         R0, #0 
    /*000337c8*/ BNE         VI_DRV_GetSplitAttr_x33800
    /*000337cc*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*000337d0*/ MOV         R2, #104                    @ 0x68 
    /*000337d4*/ STR         R7, [R4] 
    /*000337d8*/ ADD         R3, R3, #32768              @ 0x8000 
    /*000337dc*/ STR         R7, [R4, #4] 
    /*000337e0*/ STR         R0, [R4, #12] 
    /*000337e4*/ STR         R0, [R4, #16] 
    /*000337e8*/ STR         R2, [R4, #8] 
    /*000337ec*/ LDR         R2, [R3, #1336]             @ 0x538 
    /*000337f0*/ STR         R2, [R4, #20] 
    /*000337f4*/ LDR         R3, [R3, #1340]             @ 0x53c 
    /*000337f8*/ STR         R3, [R4, #24] 
    /*000337fc*/ B           VI_DRV_GetSplitAttr_x336ac
    VI_DRV_GetSplitAttr_x33800:
    /*00033800*/ ADD         R2, SP, #12 
    /*00033804*/ MOV         R0, R8 
    /*00033808*/ ADD         R1, SP, #24 
    /*0003380c*/ BL          0x000000000003380C          @ VI_DRV_CalcVpssSplit [R_ARM_CALL: .text+0x2ed14] 
    /*00033810*/ LDR         R3, [SP, #12] 
    /*00033814*/ MOV         R2, #104                    @ 0x68 
    /*00033818*/ STR         R7, [R4] 
    /*0003381c*/ CMP         R3, #0 
    /*00033820*/ STR         R2, [R4, #8] 
    /*00033824*/ STR         R3, [R4, #4] 
    /*00033828*/ BEQ         VI_DRV_GetSplitAttr_x336ac
    /*0003382c*/ ADD         R2, R4, R3, LSL #4 
    /*00033830*/ ADD         R3, SP, #24 
    /*00033834*/ MOV         IP, #0 
    VI_DRV_GetSplitAttr_x33838:
    /*00033838*/ LDR         R0, [R3, #4] 
    /*0003383c*/ ADD         R4, R4, #16 
    /*00033840*/ LDR         R1, [R3], #8 
    /*00033844*/ STR         IP, [R4] 
    /*00033848*/ STR         R0, [R4, #-4] 
    /*0003384c*/ STR         R1, [R4, #4] 
    /*00033850*/ LDR         R1, [R6, #1340]             @ 0x53c 
    /*00033854*/ STR         R1, [R4, #8] 
    /*00033858*/ CMP         R4, R2 
    /*0003385c*/ BNE         VI_DRV_GetSplitAttr_x33838
    /*00033860*/ B           VI_DRV_GetSplitAttr_x336ac
FUNC_END VI_DRV_GetSplitAttr


FUNC_BEGIN VI_DRV_GetBnrRawVbInfo
    /*00033864*/ MOV         R0, #0 
    /*00033868*/ BX          LR 
FUNC_END VI_DRV_GetBnrRawVbInfo


FUNC_BEGIN VI_DRV_SetBnrEnable
    /*0003386c*/ MOV         R0, #0 
    /*00033870*/ BX          LR 
FUNC_END VI_DRV_SetBnrEnable


FUNC_BEGIN VI_DRV_PrepareBnrRawPicInfo
    /*00033874*/ MOV         R0, #0 
    /*00033878*/ BX          LR 
FUNC_END VI_DRV_PrepareBnrRawPicInfo


FUNC_BEGIN VI_DRV_IsEarlyIntChn
    /*0003387c*/ MOV         R0, #0 
    /*00033880*/ BX          LR 
FUNC_END VI_DRV_IsEarlyIntChn


FUNC_BEGIN VI_DRV_CheckChnEarlyInterrupt
    /*00033884*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00033888*/ SUB         SP, SP, #12 
    /*0003388c*/ MOVW        R3, #11428                  @ 0x2ca4 
    /*00033890*/ MOV         R1, #16 
    /*00033894*/ STR         R3, [SP] 
    /*00033898*/ MOVW        R2, #0                      @ .LC363 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11138] 
    /*0003389c*/ LDR         R3, [PC, #24]               @ 0x00000000000338bc 
    /*000338a0*/ MOVT        R2, #0                      @ .LC363 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11138] 
    /*000338a4*/ MOV         R0, #3 
    /*000338a8*/ BL          0x00000000000338A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000338ac*/ MOVW        R0, #32776                  @ 0x8008 
    /*000338b0*/ MOVT        R0, #40976                  @ 0xa010 
    /*000338b4*/ ADD         SP, SP, #12 
    /*000338b8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000338bc*/ STRDEQ      R2, [R0], -R4 
FUNC_END VI_DRV_CheckChnEarlyInterrupt


FUNC_BEGIN VI_DRV_DISCheckConfig
    /*000338c0*/ LDR         R3, [R0, #4] 
    /*000338c4*/ SUB         R2, R3, #1 
    /*000338c8*/ CMP         R2, #1 
    /*000338cc*/ BHI         VI_DRV_DISCheckConfig_x338d8
    /*000338d0*/ MOV         R0, #0 
    /*000338d4*/ BX          LR 
    VI_DRV_DISCheckConfig_x338d8:
    /*000338d8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000338dc*/ SUB         SP, SP, #12 
    /*000338e0*/ MOV         R1, #16 
    /*000338e4*/ MOVW        R2, #0                      @ .LC364 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11178] 
    /*000338e8*/ STR         R3, [SP, #4] 
    /*000338ec*/ MOVT        R2, #0                      @ .LC364 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11178] 
    /*000338f0*/ MOVW        R3, #11436                  @ 0x2cac 
    /*000338f4*/ MOV         R0, #3 
    /*000338f8*/ STR         R3, [SP] 
    /*000338fc*/ LDR         R3, [PC, #16]               @ 0x0000000000033914 
    /*00033900*/ BL          0x0000000000033900          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00033904*/ MOVW        R0, #32776                  @ 0x8008 
    /*00033908*/ MOVT        R0, #40976                  @ 0xa010 
    /*0003390c*/ ADD         SP, SP, #12 
    /*00033910*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00033914*/ ANDEQ       R2, R0, R4, LSL R1 
FUNC_END VI_DRV_DISCheckConfig


FUNC_BEGIN VI_DRV_SetChnEarlyInterrupt
    /*00033918*/ BX          LR 
FUNC_END VI_DRV_SetChnEarlyInterrupt


FUNC_BEGIN VI_DRV_CheckPipeFrameInterruptAttr
    /*0003391c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00033920*/ MOV         R6, R1 
    /*00033924*/ LDR         R1, [R1] 
    /*00033928*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0003392c*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00033930*/ SUB         SP, SP, #20 
    /*00033934*/ ADD         R7, R5, R0, LSL #2 
    /*00033938*/ CMP         R1, #2 
    /*0003393c*/ LDR         IP, [R7, #728]              @ 0x2d8 
    /*00033940*/ BHI         VI_DRV_CheckPipeFrameInterruptAttr_x339fc
    /*00033944*/ ADD         R2, IP, #65536              @ 0x10000 
    /*00033948*/ LDR         R3, [R6, #4] 
    /*0003394c*/ LDR         R2, [R2, #3012]             @ 0xbc4 
    /*00033950*/ CMP         R3, R2 
    /*00033954*/ BCS         VI_DRV_CheckPipeFrameInterruptAttr_x33a14
    /*00033958*/ CMP         R3, #63                     @ 0x3f 
    /*0003395c*/ LDR         R4, [R7, #712]              @ 0x2c8 
    /*00033960*/ MOVHI       R3, #0 
    /*00033964*/ MOVLS       R3, #1 
    /*00033968*/ CMP         R1, #0 
    /*0003396c*/ SUB         R4, R4, #2 
    /*00033970*/ MOVEQ       R3, #0 
    /*00033974*/ CMP         R4, #1 
    /*00033978*/ MOVHI       R4, #0 
    /*0003397c*/ ANDLS       R4, R3, #1 
    /*00033980*/ CMP         R4, #0 
    /*00033984*/ BNE         VI_DRV_CheckPipeFrameInterruptAttr_x33a48
    /*00033988*/ LDR         R0, [IP, #320]              @ 0x140 
    /*0003398c*/ BL          0x000000000003398C          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*00033990*/ CMP         R0, #1 
    /*00033994*/ BEQ         VI_DRV_CheckPipeFrameInterruptAttr_x339a4
    VI_DRV_CheckPipeFrameInterruptAttr_x33998:
    /*00033998*/ MOV         R0, R4 
    VI_DRV_CheckPipeFrameInterruptAttr_x3399c:
    /*0003399c*/ ADD         SP, SP, #20 
    /*000339a0*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_CheckPipeFrameInterruptAttr_x339a4:
    /*000339a4*/ LDR         R0, [R6] 
    /*000339a8*/ CMP         R0, #0 
    /*000339ac*/ BEQ         VI_DRV_CheckPipeFrameInterruptAttr_x3399c
    /*000339b0*/ LDR         R3, [R7, #728]              @ 0x2d8 
    /*000339b4*/ LDR         R3, [R3, #4] 
    /*000339b8*/ ADD         R5, R5, R3, LSL #2 
    /*000339bc*/ LDR         R2, [R5, #712]              @ 0x2c8 
    /*000339c0*/ SUB         R2, R2, #2 
    /*000339c4*/ CMP         R2, #1 
    /*000339c8*/ BHI         VI_DRV_CheckPipeFrameInterruptAttr_x33998
    /*000339cc*/ MOVW        R2, #0                      @ .LC368 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1127c] 
    /*000339d0*/ MOVT        R2, #0                      @ .LC368 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1127c] 
    /*000339d4*/ MOVW        R3, #11494                  @ 0x2ce6 
    /*000339d8*/ STR         R0, [SP, #4] 
    /*000339dc*/ STR         R3, [SP] 
    VI_DRV_CheckPipeFrameInterruptAttr_x339e0:
    /*000339e0*/ LDR         R3, [PC, #132]              @ 0x0000000000033a6c 
    /*000339e4*/ MOV         R1, #16 
    /*000339e8*/ MOV         R0, #3 
    /*000339ec*/ BL          0x00000000000339EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000339f0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000339f4*/ MOVT        R0, #40976                  @ 0xa010 
    /*000339f8*/ B           VI_DRV_CheckPipeFrameInterruptAttr_x3399c
    VI_DRV_CheckPipeFrameInterruptAttr_x339fc:
    /*000339fc*/ MOVW        R3, #11458                  @ 0x2cc2 
    /*00033a00*/ MOVW        R2, #0                      @ .LC365 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x111ac] 
    /*00033a04*/ STR         R0, [SP, #4] 
    /*00033a08*/ MOVT        R2, #0                      @ .LC365 [R_ARM_MOVT_ABS: .rodata.str1.4+0x111ac] 
    /*00033a0c*/ STR         R3, [SP] 
    /*00033a10*/ B           VI_DRV_CheckPipeFrameInterruptAttr_x339e0
    VI_DRV_CheckPipeFrameInterruptAttr_x33a14:
    /*00033a14*/ MOVW        R3, #11464                  @ 0x2cc8 
    /*00033a18*/ STR         R3, [SP] 
    /*00033a1c*/ LDR         R3, [PC, #72]               @ 0x0000000000033a6c 
    /*00033a20*/ STR         R2, [SP, #8] 
    /*00033a24*/ MOVW        R2, #0                      @ .LC366 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x111ec] 
    /*00033a28*/ MOVT        R2, #0                      @ .LC366 [R_ARM_MOVT_ABS: .rodata.str1.4+0x111ec] 
    /*00033a2c*/ STR         R0, [SP, #4] 
    VI_DRV_CheckPipeFrameInterruptAttr_x33a30:
    /*00033a30*/ MOV         R1, #16 
    /*00033a34*/ MOV         R0, #3 
    /*00033a38*/ BL          0x0000000000033A38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00033a3c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00033a40*/ MOVT        R0, #40976                  @ 0xa010 
    /*00033a44*/ B           VI_DRV_CheckPipeFrameInterruptAttr_x3399c
    VI_DRV_CheckPipeFrameInterruptAttr_x33a48:
    /*00033a48*/ MOV         R2, #64                     @ 0x40 
    /*00033a4c*/ MOVW        R3, #11475                  @ 0x2cd3 
    /*00033a50*/ STR         R2, [SP, #8] 
    /*00033a54*/ MOVW        R2, #0                      @ .LC367 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11230] 
    /*00033a58*/ STR         R3, [SP] 
    /*00033a5c*/ MOVT        R2, #0                      @ .LC367 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11230] 
    /*00033a60*/ STR         R0, [SP, #4] 
    /*00033a64*/ LDR         R3, [PC]                    @ 0x0000000000033a6c 
    /*00033a68*/ B           VI_DRV_CheckPipeFrameInterruptAttr_x33a30
    /*00033a6c*/ ANDEQ       R2, R0, IP, LSR #2 
FUNC_END VI_DRV_CheckPipeFrameInterruptAttr


FUNC_BEGIN VI_DRV_SetPipeFrameInterruptAttr
    /*00033a70*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00033a74*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00033a78*/ ADD         R3, R3, R0, LSL #2 
    /*00033a7c*/ MOV         R2, #8 
    /*00033a80*/ PUSH        {R4, R5, R6, LR} 
    /*00033a84*/ MOV         R4, R0 
    /*00033a88*/ LDR         R0, [R3, #728]              @ 0x2d8 
    /*00033a8c*/ MOV         R5, R1 
    /*00033a90*/ ADD         R0, R0, #88064              @ 0x15800 
    /*00033a94*/ ADD         R0, R0, #756                @ 0x2f4 
    /*00033a98*/ BL          0x0000000000033A98          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00033a9c*/ LDR         R1, [R5] 
    /*00033aa0*/ CMP         R1, #0 
    /*00033aa4*/ BEQ         VI_DRV_SetPipeFrameInterruptAttr_x33ad4
    /*00033aa8*/ CMP         R1, #1 
    /*00033aac*/ BEQ         VI_DRV_SetPipeFrameInterruptAttr_x33aec
    /*00033ab0*/ CMP         R1, #2 
    /*00033ab4*/ POPNE       {R4, R5, R6, PC} 
    /*00033ab8*/ LDR         R1, [R5, #4] 
    /*00033abc*/ MOV         R0, R4 
    /*00033ac0*/ BL          0x0000000000033AC0          @ VI_HAL_SetWchDlyLine [R_ARM_CALL: .text+0x3525c] 
    /*00033ac4*/ MOV         R0, R4 
    /*00033ac8*/ MOVW        R1, #32771                  @ 0x8003 
    /*00033acc*/ POP         {R4, R5, R6, LR} 
    VI_DRV_SetPipeFrameInterruptAttr_x33ad0:
    /*00033ad0*/ B           VI_DRV_SetPipeFrameInterruptAttr_x33ad0@ VI_HAL_SetWchMask [R_ARM_JUMP24: .text+0x35960] 
    VI_DRV_SetPipeFrameInterruptAttr_x33ad4:
    /*00033ad4*/ MOV         R0, R4 
    /*00033ad8*/ BL          0x0000000000033AD8          @ VI_HAL_SetWchDlyLine [R_ARM_CALL: .text+0x3525c] 
    /*00033adc*/ MOV         R0, R4 
    /*00033ae0*/ MOV         R1, #1 
    /*00033ae4*/ POP         {R4, R5, R6, LR} 
    VI_DRV_SetPipeFrameInterruptAttr_x33ae8:
    /*00033ae8*/ B           VI_DRV_SetPipeFrameInterruptAttr_x33ae8@ VI_HAL_SetWchMask [R_ARM_JUMP24: .text+0x35960] 
    VI_DRV_SetPipeFrameInterruptAttr_x33aec:
    /*00033aec*/ LDR         R1, [R5, #4] 
    /*00033af0*/ MOV         R0, R4 
    /*00033af4*/ BL          0x0000000000033AF4          @ VI_HAL_SetWchDlyLine [R_ARM_CALL: .text+0x3525c] 
    /*00033af8*/ MOV         R0, R4 
    /*00033afc*/ MOVW        R1, #32769                  @ 0x8001 
    /*00033b00*/ POP         {R4, R5, R6, LR} 
    VI_DRV_SetPipeFrameInterruptAttr_x33b04:
    /*00033b04*/ B           VI_DRV_SetPipeFrameInterruptAttr_x33b04@ VI_HAL_SetWchMask [R_ARM_JUMP24: .text+0x35960] 
FUNC_END VI_DRV_SetPipeFrameInterruptAttr


FUNC_BEGIN VI_DRV_SetDefaultFrameInterruptAttr
    /*00033b08*/ CMP         R0, #3 
    /*00033b0c*/ BXGT        LR 
    /*00033b10*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00033b14*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00033b18*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00033b1c*/ MOV         R5, R0 
    /*00033b20*/ ADD         R7, R6, R0, LSL #2 
    /*00033b24*/ LDR         R3, [R7, #728]              @ 0x2d8 
    /*00033b28*/ LDR         R4, [R7, #712]              @ 0x2c8 
    /*00033b2c*/ LDR         R0, [R3, #320]              @ 0x140 
    /*00033b30*/ BL          0x0000000000033B30          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*00033b34*/ LDR         R3, [R7, #728]              @ 0x2d8 
    /*00033b38*/ CMP         R0, #1 
    /*00033b3c*/ BEQ         VI_DRV_SetDefaultFrameInterruptAttr_x33b64
    VI_DRV_SetDefaultFrameInterruptAttr_x33b40:
    /*00033b40*/ CMP         R4, #3 
    /*00033b44*/ CMPNE       R4, #1 
    /*00033b48*/ ADD         R3, R3, #86016              @ 0x15000 
    /*00033b4c*/ MOVLS       R4, #1 
    /*00033b50*/ MOVHI       R4, #0 
    /*00033b54*/ BLS         VI_DRV_SetDefaultFrameInterruptAttr_x33b80
    /*00033b58*/ STR         R4, [R3, #2804]             @ 0xaf4 
    /*00033b5c*/ STR         R4, [R3, #2808]             @ 0xaf8 
    /*00033b60*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_SetDefaultFrameInterruptAttr_x33b64:
    /*00033b64*/ LDR         R2, [R3, #4] 
    /*00033b68*/ ADD         R6, R6, R2, LSL #2 
    /*00033b6c*/ LDR         R2, [R6, #712]              @ 0x2c8 
    /*00033b70*/ SUB         R2, R2, #2 
    /*00033b74*/ CMP         R2, #1 
    /*00033b78*/ BHI         VI_DRV_SetDefaultFrameInterruptAttr_x33b40
    /*00033b7c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_DRV_SetDefaultFrameInterruptAttr_x33b80:
    /*00033b80*/ MOV         R1, #64                     @ 0x40 
    /*00033b84*/ MOV         R0, R5 
    /*00033b88*/ MOV         R2, #2 
    /*00033b8c*/ STR         R1, [R3, #2808]             @ 0xaf8 
    /*00033b90*/ STR         R2, [R3, #2804]             @ 0xaf4 
    /*00033b94*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_DRV_SetDefaultFrameInterruptAttr_x33b98:
    /*00033b98*/ B           VI_DRV_SetDefaultFrameInterruptAttr_x33b98@ VI_HAL_SetWchDlyLine [R_ARM_JUMP24: .text+0x3525c] 
FUNC_END VI_DRV_SetDefaultFrameInterruptAttr


FUNC_BEGIN VI_DRV_GetPipeFrameInterruptAttr
    /*00033b9c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00033ba0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00033ba4*/ ADD         R3, R3, R0, LSL #2 
    /*00033ba8*/ MOV         R0, R1 
    /*00033bac*/ MOV         R2, #8 
    /*00033bb0*/ LDR         R1, [R3, #728]              @ 0x2d8 
    /*00033bb4*/ ADD         R1, R1, #88064              @ 0x15800 
    /*00033bb8*/ ADD         R1, R1, #756                @ 0x2f4 
    VI_DRV_GetPipeFrameInterruptAttr_x33bbc:
    /*00033bbc*/ B           VI_DRV_GetPipeFrameInterruptAttr_x33bbc@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_GetPipeFrameInterruptAttr


FUNC_BEGIN PRINT_PIPEVIMODE
    /*00033bc0*/ CMP         R0, #1 
    /*00033bc4*/ BLS         PRINT_PIPEVIMODE_x33bf4
    /*00033bc8*/ SUB         R3, R0, #2 
    /*00033bcc*/ CMP         R3, #1 
    /*00033bd0*/ BLS         PRINT_PIPEVIMODE_x33c00
    /*00033bd4*/ SUB         R3, R0, #4 
    /*00033bd8*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaedc] 
    /*00033bdc*/ CMP         R3, #1 
    /*00033be0*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaedc] 
    /*00033be4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaed0] 
    /*00033be8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaed0] 
    /*00033bec*/ MOVHI       R0, R2 
    /*00033bf0*/ BX          LR 
    PRINT_PIPEVIMODE_x33bf4:
    /*00033bf4*/ MOVW        R0, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*00033bf8*/ MOVT        R0, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*00033bfc*/ BX          LR 
    PRINT_PIPEVIMODE_x33c00:
    /*00033c00*/ MOVW        R0, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaec8] 
    /*00033c04*/ MOVT        R0, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaec8] 
    /*00033c08*/ BX          LR 
FUNC_END PRINT_PIPEVIMODE


FUNC_BEGIN PRINT_PIPEVPSSMODE
    /*00033c0c*/ BIC         R3, R0, #2 
    /*00033c10*/ CMP         R3, #0 
    /*00033c14*/ CMPNE       R0, #4 
    /*00033c18*/ BEQ         PRINT_PIPEVPSSMODE_x33c20
    /*00033c1c*/ B           0x0000000000025474 
    PRINT_PIPEVPSSMODE_x33c20:
    /*00033c20*/ MOVW        R0, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*00033c24*/ MOVT        R0, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*00033c28*/ BX          LR 
FUNC_END PRINT_PIPEVPSSMODE


FUNC_BEGIN VI_DRV_ProcModParam
    /*00033c2c*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00033c30*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00033c34*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00033c38*/ MOV         R5, R0 
    /*00033c3c*/ LDR         R3, [R3] 
    /*00033c40*/ SUB         SP, SP, #12 
    /*00033c44*/ LDRB        R3, [R3, #40]               @ 0x28 
    /*00033c48*/ SUB         R3, R3, #1 
    /*00033c4c*/ CMP         R3, #1 
    /*00033c50*/ BLS         VI_DRV_ProcModParam_x33e88
    /*00033c54*/ MOVW        R1, #0                      @ .LC377 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11394] 
    /*00033c58*/ MOVT        R1, #0                      @ .LC377 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11394] 
    /*00033c5c*/ BL          0x0000000000033C5C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033c60*/ MOVW        R7, #0                      @ .LC376 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11388] 
    /*00033c64*/ MOVW        R6, #0                      @ .LC374 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11368] 
    /*00033c68*/ MOVT        R7, #0                      @ .LC376 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11388] 
    /*00033c6c*/ MOVT        R6, #0                      @ .LC374 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11368] 
    /*00033c70*/ MOVW        R3, #0                      @ .LC372 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11350] 
    /*00033c74*/ STM         SP, {R6, R7} 
    /*00033c78*/ MOVT        R3, #0                      @ .LC372 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11350] 
    /*00033c7c*/ MOVW        R2, #0                      @ .LC373 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1135c] 
    /*00033c80*/ MOVW        R1, #0                      @ .LC375 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11374] 
    /*00033c84*/ MOVT        R2, #0                      @ .LC373 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1135c] 
    /*00033c88*/ MOVT        R1, #0                      @ .LC375 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11374] 
    /*00033c8c*/ MOV         R0, R5 
    /*00033c90*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00033c94*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00033c98*/ BL          0x0000000000033C98          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033c9c*/ MOVW        R1, #0                      @ .LC311 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10210] 
    /*00033ca0*/ MOV         R0, R5 
    /*00033ca4*/ MOVT        R1, #0                      @ .LC311 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10210] 
    /*00033ca8*/ BL          0x0000000000033CA8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033cac*/ LDR         R2, [R4, #712]              @ 0x2c8 
    /*00033cb0*/ CMP         R2, #1 
    /*00033cb4*/ BLS         VI_DRV_ProcModParam_x34098
    /*00033cb8*/ SUB         R3, R2, #2 
    /*00033cbc*/ CMP         R3, #1 
    /*00033cc0*/ BLS         VI_DRV_ProcModParam_x3408c
    /*00033cc4*/ SUB         R2, R2, #4 
    /*00033cc8*/ MOVW        R1, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaed0] 
    /*00033ccc*/ CMP         R2, #1 
    /*00033cd0*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaedc] 
    /*00033cd4*/ MOVT        R1, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaed0] 
    /*00033cd8*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaedc] 
    /*00033cdc*/ MOVLS       R2, R1 
    /*00033ce0*/ MOVHI       R2, R3 
    VI_DRV_ProcModParam_x33ce4:
    /*00033ce4*/ LDR         R3, [R4, #716]              @ 0x2cc 
    /*00033ce8*/ CMP         R3, #1 
    /*00033cec*/ BLS         VI_DRV_ProcModParam_x340ac
    VI_DRV_ProcModParam_x33cf0:
    /*00033cf0*/ SUB         R1, R3, #2 
    /*00033cf4*/ CMP         R1, #1 
    /*00033cf8*/ BLS         VI_DRV_ProcModParam_x3414c
    /*00033cfc*/ SUB         R3, R3, #4 
    /*00033d00*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaed0] 
    /*00033d04*/ CMP         R3, #1 
    /*00033d08*/ MOVW        R1, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaedc] 
    /*00033d0c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaed0] 
    /*00033d10*/ MOVT        R1, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaedc] 
    /*00033d14*/ MOVLS       R3, R0 
    /*00033d18*/ MOVHI       R3, R1 
    VI_DRV_ProcModParam_x33d1c:
    /*00033d1c*/ LDR         R1, [R4, #720]              @ 0x2d0 
    /*00033d20*/ CMP         R1, #1 
    /*00033d24*/ BLS         VI_DRV_ProcModParam_x340c0
    VI_DRV_ProcModParam_x33d28:
    /*00033d28*/ SUB         R0, R1, #2 
    /*00033d2c*/ CMP         R0, #1 
    /*00033d30*/ BLS         VI_DRV_ProcModParam_x34140
    /*00033d34*/ SUB         R0, R1, #4 
    /*00033d38*/ MOVW        IP, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaedc] 
    /*00033d3c*/ CMP         R0, #1 
    /*00033d40*/ MOVT        IP, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaedc] 
    /*00033d44*/ MOVW        R1, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaed0] 
    /*00033d48*/ MOVT        R1, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaed0] 
    /*00033d4c*/ MOVHI       R1, IP 
    VI_DRV_ProcModParam_x33d50:
    /*00033d50*/ LDR         R0, [R4, #724]              @ 0x2d4 
    /*00033d54*/ CMP         R0, #1 
    /*00033d58*/ BLS         VI_DRV_ProcModParam_x340d4
    VI_DRV_ProcModParam_x33d5c:
    /*00033d5c*/ SUB         IP, R0, #2 
    /*00033d60*/ CMP         IP, #1 
    /*00033d64*/ BLS         VI_DRV_ProcModParam_x34134
    /*00033d68*/ SUB         IP, R0, #4 
    /*00033d6c*/ MOVW        LR, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaedc] 
    /*00033d70*/ CMP         IP, #1 
    /*00033d74*/ MOVT        LR, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaedc] 
    /*00033d78*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaed0] 
    /*00033d7c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaed0] 
    /*00033d80*/ MOVHI       R0, LR 
    VI_DRV_ProcModParam_x33d84:
    /*00033d84*/ STR         R0, [SP, #4] 
    /*00033d88*/ MOV         R0, R5 
    /*00033d8c*/ STR         R1, [SP] 
    /*00033d90*/ MOVW        R1, #0                      @ .LC375 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11374] 
    /*00033d94*/ MOVT        R1, #0                      @ .LC375 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11374] 
    /*00033d98*/ BL          0x0000000000033D98          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033d9c*/ MOVW        R1, #0                      @ .LC371 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112e8] 
    /*00033da0*/ MOV         R0, R5 
    /*00033da4*/ MOVT        R1, #0                      @ .LC371 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112e8] 
    /*00033da8*/ BL          0x0000000000033DA8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033dac*/ STM         SP, {R6, R7} 
    /*00033db0*/ MOVW        R3, #0                      @ .LC372 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11350] 
    /*00033db4*/ MOVW        R2, #0                      @ .LC373 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1135c] 
    /*00033db8*/ MOVT        R3, #0                      @ .LC372 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11350] 
    /*00033dbc*/ MOVT        R2, #0                      @ .LC373 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1135c] 
    /*00033dc0*/ MOVW        R1, #0                      @ .LC375 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11374] 
    /*00033dc4*/ MOV         R0, R5 
    /*00033dc8*/ MOVT        R1, #0                      @ .LC375 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11374] 
    /*00033dcc*/ BL          0x0000000000033DCC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033dd0*/ MOVW        R1, #0                      @ .LC311 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10210] 
    /*00033dd4*/ MOV         R0, R5 
    /*00033dd8*/ MOVT        R1, #0                      @ .LC311 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10210] 
    /*00033ddc*/ BL          0x0000000000033DDC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033de0*/ LDR         R0, [R4, #712]              @ 0x2c8 
    /*00033de4*/ BIC         R3, R0, #2 
    /*00033de8*/ CMP         R3, #0 
    /*00033dec*/ CMPNE       R0, #4 
    /*00033df0*/ BEQ         VI_DRV_ProcModParam_x3411c
    /*00033df4*/ BL          0x0000000000025474 
    /*00033df8*/ MOV         R1, R0 
    VI_DRV_ProcModParam_x33dfc:
    /*00033dfc*/ LDR         R0, [R4, #716]              @ 0x2cc 
    /*00033e00*/ BIC         R3, R0, #2 
    /*00033e04*/ CMP         R3, #0 
    /*00033e08*/ CMPNE       R0, #4 
    /*00033e0c*/ BEQ         VI_DRV_ProcModParam_x34110
    /*00033e10*/ BL          0x0000000000025474 
    /*00033e14*/ MOV         R7, R0 
    VI_DRV_ProcModParam_x33e18:
    /*00033e18*/ LDR         R0, [R4, #720]              @ 0x2d0 
    /*00033e1c*/ BIC         R3, R0, #2 
    /*00033e20*/ CMP         R3, #0 
    /*00033e24*/ CMPNE       R0, #4 
    /*00033e28*/ BEQ         VI_DRV_ProcModParam_x340f8
    /*00033e2c*/ BL          0x0000000000025474 
    /*00033e30*/ MOV         R6, R0 
    VI_DRV_ProcModParam_x33e34:
    /*00033e34*/ LDR         R0, [R4, #724]              @ 0x2d4 
    /*00033e38*/ BIC         R3, R0, #2 
    /*00033e3c*/ CMP         R3, #0 
    /*00033e40*/ CMPNE       R0, #4 
    /*00033e44*/ BEQ         VI_DRV_ProcModParam_x340ec
    /*00033e48*/ BL          0x0000000000025474 
    VI_DRV_ProcModParam_x33e4c:
    /*00033e4c*/ MOV         R2, R1 
    /*00033e50*/ STR         R0, [SP, #4] 
    /*00033e54*/ MOV         R3, R7 
    /*00033e58*/ STR         R6, [SP] 
    /*00033e5c*/ MOV         R0, R5 
    /*00033e60*/ MOVW        R1, #0                      @ .LC375 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11374] 
    /*00033e64*/ MOVT        R1, #0                      @ .LC375 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11374] 
    /*00033e68*/ BL          0x0000000000033E68          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033e6c*/ MOV         R0, R5 
    /*00033e70*/ MOVW        R1, #0                      @ .LC311 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10210] 
    /*00033e74*/ MOVT        R1, #0                      @ .LC311 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10210] 
    /*00033e78*/ BL          0x0000000000033E78          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033e7c*/ MOV         R0, #0 
    /*00033e80*/ ADD         SP, SP, #12 
    /*00033e84*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_ProcModParam_x33e88:
    /*00033e88*/ MOVW        R1, #0                      @ .LC377 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11394] 
    /*00033e8c*/ MOVT        R1, #0                      @ .LC377 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11394] 
    /*00033e90*/ BL          0x0000000000033E90          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033e94*/ MOVW        R6, #0                      @ .LC374 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11368] 
    /*00033e98*/ MOVW        R3, #0                      @ .LC372 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11350] 
    /*00033e9c*/ MOVT        R6, #0                      @ .LC374 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11368] 
    /*00033ea0*/ MOVT        R3, #0                      @ .LC372 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11350] 
    /*00033ea4*/ STR         R6, [SP] 
    /*00033ea8*/ MOVW        R2, #0                      @ .LC373 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1135c] 
    /*00033eac*/ MOVW        R1, #0                      @ .LC370 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d8] 
    /*00033eb0*/ MOVT        R2, #0                      @ .LC373 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1135c] 
    /*00033eb4*/ MOVT        R1, #0                      @ .LC370 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d8] 
    /*00033eb8*/ MOV         R0, R5 
    /*00033ebc*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00033ec0*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00033ec4*/ BL          0x0000000000033EC4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033ec8*/ MOVW        R1, #0                      @ .LC311 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10210] 
    /*00033ecc*/ MOV         R0, R5 
    /*00033ed0*/ MOVT        R1, #0                      @ .LC311 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10210] 
    /*00033ed4*/ BL          0x0000000000033ED4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033ed8*/ LDR         R2, [R4, #712]              @ 0x2c8 
    /*00033edc*/ CMP         R2, #1 
    /*00033ee0*/ BLS         VI_DRV_ProcModParam_x34058
    /*00033ee4*/ SUB         R3, R2, #2 
    /*00033ee8*/ CMP         R3, #1 
    /*00033eec*/ BLS         VI_DRV_ProcModParam_x34170
    /*00033ef0*/ SUB         R2, R2, #4 
    /*00033ef4*/ MOVW        R1, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaed0] 
    /*00033ef8*/ CMP         R2, #1 
    /*00033efc*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaedc] 
    /*00033f00*/ MOVT        R1, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaed0] 
    /*00033f04*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaedc] 
    /*00033f08*/ MOVLS       R2, R1 
    /*00033f0c*/ MOVHI       R2, R3 
    VI_DRV_ProcModParam_x33f10:
    /*00033f10*/ LDR         R3, [R4, #716]              @ 0x2cc 
    /*00033f14*/ CMP         R3, #1 
    /*00033f18*/ BLS         VI_DRV_ProcModParam_x3406c
    VI_DRV_ProcModParam_x33f1c:
    /*00033f1c*/ SUB         R1, R3, #2 
    /*00033f20*/ CMP         R1, #1 
    /*00033f24*/ BLS         VI_DRV_ProcModParam_x34164
    /*00033f28*/ SUB         R1, R3, #4 
    /*00033f2c*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaedc] 
    /*00033f30*/ CMP         R1, #1 
    /*00033f34*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaedc] 
    /*00033f38*/ MOVW        R3, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaed0] 
    /*00033f3c*/ MOVT        R3, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaed0] 
    /*00033f40*/ MOVHI       R3, R0 
    VI_DRV_ProcModParam_x33f44:
    /*00033f44*/ LDR         R1, [R4, #720]              @ 0x2d0 
    /*00033f48*/ CMP         R1, #1 
    /*00033f4c*/ BLS         VI_DRV_ProcModParam_x34080
    VI_DRV_ProcModParam_x33f50:
    /*00033f50*/ SUB         R0, R1, #2 
    /*00033f54*/ CMP         R0, #1 
    /*00033f58*/ BLS         VI_DRV_ProcModParam_x34158
    /*00033f5c*/ SUB         R0, R1, #4 
    /*00033f60*/ MOVW        IP, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaedc] 
    /*00033f64*/ CMP         R0, #1 
    /*00033f68*/ MOVT        IP, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaedc] 
    /*00033f6c*/ MOVW        R1, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaed0] 
    /*00033f70*/ MOVT        R1, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaed0] 
    /*00033f74*/ MOVHI       R1, IP 
    VI_DRV_ProcModParam_x33f78:
    /*00033f78*/ STR         R1, [SP] 
    /*00033f7c*/ MOV         R0, R5 
    /*00033f80*/ MOVW        R1, #0                      @ .LC370 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d8] 
    /*00033f84*/ MOVT        R1, #0                      @ .LC370 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d8] 
    /*00033f88*/ BL          0x0000000000033F88          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033f8c*/ MOVW        R1, #0                      @ .LC371 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112e8] 
    /*00033f90*/ MOV         R0, R5 
    /*00033f94*/ MOVT        R1, #0                      @ .LC371 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112e8] 
    /*00033f98*/ BL          0x0000000000033F98          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033f9c*/ STR         R6, [SP] 
    /*00033fa0*/ MOVW        R3, #0                      @ .LC372 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11350] 
    /*00033fa4*/ MOVW        R2, #0                      @ .LC373 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1135c] 
    /*00033fa8*/ MOVT        R3, #0                      @ .LC372 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11350] 
    /*00033fac*/ MOVT        R2, #0                      @ .LC373 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1135c] 
    /*00033fb0*/ MOVW        R1, #0                      @ .LC370 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d8] 
    /*00033fb4*/ MOV         R0, R5 
    /*00033fb8*/ MOVT        R1, #0                      @ .LC370 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d8] 
    /*00033fbc*/ BL          0x0000000000033FBC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033fc0*/ MOVW        R1, #0                      @ .LC311 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10210] 
    /*00033fc4*/ MOV         R0, R5 
    /*00033fc8*/ MOVT        R1, #0                      @ .LC311 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10210] 
    /*00033fcc*/ BL          0x0000000000033FCC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00033fd0*/ LDR         R0, [R4, #712]              @ 0x2c8 
    /*00033fd4*/ BIC         R3, R0, #2 
    /*00033fd8*/ CMP         R3, #0 
    /*00033fdc*/ CMPNE       R0, #4 
    /*00033fe0*/ BEQ         VI_DRV_ProcModParam_x34104
    /*00033fe4*/ BL          0x0000000000025474 
    /*00033fe8*/ MOV         R1, R0 
    VI_DRV_ProcModParam_x33fec:
    /*00033fec*/ LDR         R0, [R4, #716]              @ 0x2cc 
    /*00033ff0*/ BIC         R3, R0, #2 
    /*00033ff4*/ CMP         R3, #0 
    /*00033ff8*/ CMPNE       R0, #4 
    /*00033ffc*/ BEQ         VI_DRV_ProcModParam_x340e0
    /*00034000*/ BL          0x0000000000025474 
    /*00034004*/ MOV         R6, R0 
    VI_DRV_ProcModParam_x34008:
    /*00034008*/ LDR         R0, [R4, #720]              @ 0x2d0 
    /*0003400c*/ BIC         R3, R0, #2 
    /*00034010*/ CMP         R3, #0 
    /*00034014*/ CMPNE       R0, #4 
    /*00034018*/ BEQ         VI_DRV_ProcModParam_x34128
    /*0003401c*/ BL          0x0000000000025474 
    VI_DRV_ProcModParam_x34020:
    /*00034020*/ MOV         R2, R1 
    /*00034024*/ STR         R0, [SP] 
    /*00034028*/ MOV         R3, R6 
    /*0003402c*/ MOV         R0, R5 
    /*00034030*/ MOVW        R1, #0                      @ .LC370 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d8] 
    /*00034034*/ MOVT        R1, #0                      @ .LC370 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d8] 
    /*00034038*/ BL          0x0000000000034038          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0003403c*/ MOV         R0, R5 
    /*00034040*/ MOVW        R1, #0                      @ .LC311 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10210] 
    /*00034044*/ MOVT        R1, #0                      @ .LC311 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10210] 
    /*00034048*/ BL          0x0000000000034048          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0003404c*/ MOV         R0, #0 
    /*00034050*/ ADD         SP, SP, #12 
    /*00034054*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_ProcModParam_x34058:
    /*00034058*/ LDR         R3, [R4, #716]              @ 0x2cc 
    /*0003405c*/ MOVW        R2, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*00034060*/ MOVT        R2, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*00034064*/ CMP         R3, #1 
    /*00034068*/ BHI         VI_DRV_ProcModParam_x33f1c
    VI_DRV_ProcModParam_x3406c:
    /*0003406c*/ LDR         R1, [R4, #720]              @ 0x2d0 
    /*00034070*/ MOVW        R3, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*00034074*/ MOVT        R3, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*00034078*/ CMP         R1, #1 
    /*0003407c*/ BHI         VI_DRV_ProcModParam_x33f50
    VI_DRV_ProcModParam_x34080:
    /*00034080*/ MOVW        R1, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*00034084*/ MOVT        R1, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*00034088*/ B           VI_DRV_ProcModParam_x33f78
    VI_DRV_ProcModParam_x3408c:
    /*0003408c*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaec8] 
    /*00034090*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaec8] 
    /*00034094*/ B           VI_DRV_ProcModParam_x33ce4
    VI_DRV_ProcModParam_x34098:
    /*00034098*/ LDR         R3, [R4, #716]              @ 0x2cc 
    /*0003409c*/ MOVW        R2, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*000340a0*/ MOVT        R2, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*000340a4*/ CMP         R3, #1 
    /*000340a8*/ BHI         VI_DRV_ProcModParam_x33cf0
    VI_DRV_ProcModParam_x340ac:
    /*000340ac*/ LDR         R1, [R4, #720]              @ 0x2d0 
    /*000340b0*/ MOVW        R3, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*000340b4*/ MOVT        R3, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*000340b8*/ CMP         R1, #1 
    /*000340bc*/ BHI         VI_DRV_ProcModParam_x33d28
    VI_DRV_ProcModParam_x340c0:
    /*000340c0*/ LDR         R0, [R4, #724]              @ 0x2d4 
    /*000340c4*/ MOVW        R1, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*000340c8*/ MOVT        R1, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*000340cc*/ CMP         R0, #1 
    /*000340d0*/ BHI         VI_DRV_ProcModParam_x33d5c
    VI_DRV_ProcModParam_x340d4:
    /*000340d4*/ MOVW        R0, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*000340d8*/ MOVT        R0, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*000340dc*/ B           VI_DRV_ProcModParam_x33d84
    VI_DRV_ProcModParam_x340e0:
    /*000340e0*/ MOVW        R6, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*000340e4*/ MOVT        R6, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*000340e8*/ B           VI_DRV_ProcModParam_x34008
    VI_DRV_ProcModParam_x340ec:
    /*000340ec*/ MOVW        R0, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*000340f0*/ MOVT        R0, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*000340f4*/ B           VI_DRV_ProcModParam_x33e4c
    VI_DRV_ProcModParam_x340f8:
    /*000340f8*/ MOVW        R6, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*000340fc*/ MOVT        R6, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*00034100*/ B           VI_DRV_ProcModParam_x33e34
    VI_DRV_ProcModParam_x34104:
    /*00034104*/ MOVW        R1, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*00034108*/ MOVT        R1, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*0003410c*/ B           VI_DRV_ProcModParam_x33fec
    VI_DRV_ProcModParam_x34110:
    /*00034110*/ MOVW        R7, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*00034114*/ MOVT        R7, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*00034118*/ B           VI_DRV_ProcModParam_x33e18
    VI_DRV_ProcModParam_x3411c:
    /*0003411c*/ MOVW        R1, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*00034120*/ MOVT        R1, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*00034124*/ B           VI_DRV_ProcModParam_x33dfc
    VI_DRV_ProcModParam_x34128:
    /*00034128*/ MOVW        R0, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x112d0] 
    /*0003412c*/ MOVT        R0, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x112d0] 
    /*00034130*/ B           VI_DRV_ProcModParam_x34020
    VI_DRV_ProcModParam_x34134:
    /*00034134*/ MOVW        R0, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaec8] 
    /*00034138*/ MOVT        R0, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaec8] 
    /*0003413c*/ B           VI_DRV_ProcModParam_x33d84
    VI_DRV_ProcModParam_x34140:
    /*00034140*/ MOVW        R1, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaec8] 
    /*00034144*/ MOVT        R1, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaec8] 
    /*00034148*/ B           VI_DRV_ProcModParam_x33d50
    VI_DRV_ProcModParam_x3414c:
    /*0003414c*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaec8] 
    /*00034150*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaec8] 
    /*00034154*/ B           VI_DRV_ProcModParam_x33d1c
    VI_DRV_ProcModParam_x34158:
    /*00034158*/ MOVW        R1, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaec8] 
    /*0003415c*/ MOVT        R1, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaec8] 
    /*00034160*/ B           VI_DRV_ProcModParam_x33f78
    VI_DRV_ProcModParam_x34164:
    /*00034164*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaec8] 
    /*00034168*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaec8] 
    /*0003416c*/ B           VI_DRV_ProcModParam_x33f44
    VI_DRV_ProcModParam_x34170:
    /*00034170*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaec8] 
    /*00034174*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaec8] 
    /*00034178*/ B           VI_DRV_ProcModParam_x33f10
FUNC_END VI_DRV_ProcModParam


FUNC_BEGIN VI_DRV_ProcLDCV2Attr
    /*0003417c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00034180*/ SUB         SP, SP, #68                 @ 0x44 
    /*00034184*/ MOVW        R6, #0                      @ .LC311 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10210] 
    /*00034188*/ MOVT        R6, #0                      @ .LC311 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10210] 
    /*0003418c*/ MOV         R4, R1 
    /*00034190*/ MOV         R5, R0 
    /*00034194*/ MOVW        R2, #0                      @ .LC381 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1141c] 
    /*00034198*/ MOVW        R3, #0                      @ .LC378 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x113fc] 
    /*0003419c*/ MOVT        R2, #0                      @ .LC381 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1141c] 
    /*000341a0*/ MOVT        R3, #0                      @ .LC378 [R_ARM_MOVT_ABS: .rodata.str1.4+0x113fc] 
    /*000341a4*/ STR         R2, [SP] 
    /*000341a8*/ MOVW        R1, #0                      @ .LC380 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11410] 
    /*000341ac*/ MOVW        R2, #0                      @ .LC379 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11408] 
    /*000341b0*/ MOVT        R1, #0                      @ .LC380 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11410] 
    /*000341b4*/ MOVT        R2, #0                      @ .LC379 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11408] 
    /*000341b8*/ MOVW        SL, #0                      @ .LC383 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11434] 
    /*000341bc*/ BL          0x00000000000341BC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000341c0*/ MOV         R1, R6 
    /*000341c4*/ MOV         R0, R5 
    /*000341c8*/ MOVT        SL, #0                      @ .LC383 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11434] 
    /*000341cc*/ BL          0x00000000000341CC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000341d0*/ LDR         IP, [R4, #108]              @ 0x6c 
    /*000341d4*/ LDR         R2, [R4, #52]               @ 0x34 
    /*000341d8*/ MOV         R0, R5 
    /*000341dc*/ LDR         R3, [R4, #104]              @ 0x68 
    /*000341e0*/ MOVW        R1, #0                      @ .LC382 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11428] 
    /*000341e4*/ STR         IP, [SP] 
    /*000341e8*/ MOVT        R1, #0                      @ .LC382 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11428] 
    /*000341ec*/ BL          0x00000000000341EC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000341f0*/ MOVW        R3, #0                      @ .LC386 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11450] 
    /*000341f4*/ MOV         R1, SL 
    /*000341f8*/ MOV         R7, R3 
    /*000341fc*/ MOV         R0, R5 
    /*00034200*/ MOVW        R9, #0                      @ .LC385 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11448] 
    /*00034204*/ BL          0x0000000000034204          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00034208*/ MOV         R3, R7 
    /*0003420c*/ MOVT        R3, #0                      @ .LC386 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11450] 
    /*00034210*/ MOVT        R9, #0                      @ .LC385 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11448] 
    /*00034214*/ MOV         R0, R5 
    /*00034218*/ MOVW        R2, #0                      @ .LC384 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11438] 
    /*0003421c*/ MOV         R7, R3 
    /*00034220*/ MOVW        R3, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11458] 
    /*00034224*/ MOVT        R3, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11458] 
    /*00034228*/ MOV         R1, R9 
    /*0003422c*/ MOVT        R2, #0                      @ .LC384 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11438] 
    /*00034230*/ MOVW        R8, #0                      @ .LC389 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11484] 
    /*00034234*/ MOV         FP, R3 
    /*00034238*/ BL          0x0000000000034238          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0003423c*/ MOV         R1, R6 
    /*00034240*/ MOV         R0, R5 
    /*00034244*/ BL          0x0000000000034244          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00034248*/ MOVT        R8, #0                      @ .LC389 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11484] 
    /*0003424c*/ MOV         R3, R7 
    /*00034250*/ MOV         R2, FP 
    /*00034254*/ STR         FP, [SP, #44]               @ 0x2c 
    /*00034258*/ MOVW        R1, #0                      @ .LC391 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11494] 
    /*0003425c*/ STR         R8, [SP, #20] 
    /*00034260*/ MOVT        R1, #0                      @ .LC391 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11494] 
    /*00034264*/ MOVW        FP, #0                      @ .LC390 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1148c] 
    /*00034268*/ STR         R1, [SP, #48]               @ 0x30 
    /*0003426c*/ MOVT        FP, #0                      @ .LC390 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1148c] 
    /*00034270*/ STR         R1, [SP, #12] 
    /*00034274*/ STR         FP, [SP, #16] 
    /*00034278*/ MOVW        R0, #0                      @ .LC392 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1149c] 
    /*0003427c*/ MOVW        IP, #0                      @ .LC393 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x114a4] 
    /*00034280*/ MOVT        R0, #0                      @ .LC392 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1149c] 
    /*00034284*/ MOVT        IP, #0                      @ .LC393 [R_ARM_MOVT_ABS: .rodata.str1.4+0x114a4] 
    /*00034288*/ STR         R0, [SP, #52]               @ 0x34 
    /*0003428c*/ STR         IP, [SP, #4] 
    /*00034290*/ MOVW        LR, #0                      @ .LC394 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x114ac] 
    /*00034294*/ STR         R0, [SP, #8] 
    /*00034298*/ MOVT        LR, #0                      @ .LC394 [R_ARM_MOVT_ABS: .rodata.str1.4+0x114ac] 
    /*0003429c*/ MOV         R0, R5 
    /*000342a0*/ STR         LR, [SP] 
    /*000342a4*/ MOVW        R1, #0                      @ .LC388 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11460] 
    /*000342a8*/ MOVT        R1, #0                      @ .LC388 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11460] 
    /*000342ac*/ STR         IP, [SP, #56]               @ 0x38 
    /*000342b0*/ STR         LR, [SP, #60]               @ 0x3c 
    /*000342b4*/ STR         R7, [SP, #40]               @ 0x28 
    /*000342b8*/ BL          0x00000000000342B8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000342bc*/ MOV         R1, R6 
    /*000342c0*/ MOV         R0, R5 
    /*000342c4*/ BL          0x00000000000342C4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000342c8*/ LDR         LR, [R4, #44]               @ 0x2c 
    /*000342cc*/ LDR         R7, [R4, #48]               @ 0x30 
    /*000342d0*/ MOV         R0, R5 
    /*000342d4*/ LDR         R3, [R4, #24] 
    /*000342d8*/ MOVW        R1, #0                      @ .LC395 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x114b4] 
    /*000342dc*/ LDR         R2, [R4, #20] 
    /*000342e0*/ MOVT        R1, #0                      @ .LC395 [R_ARM_MOVT_ABS: .rodata.str1.4+0x114b4] 
    /*000342e4*/ LDR         IP, [R4, #40]               @ 0x28 
    /*000342e8*/ STR         R7, [SP, #20] 
    /*000342ec*/ STR         LR, [SP, #16] 
    /*000342f0*/ LDR         LR, [R4, #36]               @ 0x24 
    /*000342f4*/ STR         IP, [SP, #12] 
    /*000342f8*/ LDR         IP, [R4, #32] 
    /*000342fc*/ STR         LR, [SP, #8] 
    /*00034300*/ LDR         LR, [R4, #28] 
    /*00034304*/ STR         IP, [SP, #4] 
    /*00034308*/ STR         LR, [SP] 
    /*0003430c*/ BL          0x000000000003430C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00034310*/ MOV         R1, SL 
    /*00034314*/ MOV         R0, R5 
    /*00034318*/ BL          0x0000000000034318          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0003431c*/ MOV         R1, R9 
    /*00034320*/ MOV         R0, R5 
    /*00034324*/ MOVW        R2, #0                      @ .LC396 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x114d8] 
    /*00034328*/ MOVT        R2, #0                      @ .LC396 [R_ARM_MOVT_ABS: .rodata.str1.4+0x114d8] 
    /*0003432c*/ BL          0x000000000003432C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00034330*/ MOV         R1, R6 
    /*00034334*/ MOV         R0, R5 
    /*00034338*/ BL          0x0000000000034338          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0003433c*/ LDR         IP, [SP, #56]               @ 0x38 
    /*00034340*/ LDR         LR, [SP, #60]               @ 0x3c 
    /*00034344*/ LDR         R1, [SP, #48]               @ 0x30 
    /*00034348*/ LDR         R0, [SP, #52]               @ 0x34 
    /*0003434c*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00034350*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*00034354*/ STR         IP, [SP, #4] 
    /*00034358*/ STR         LR, [SP] 
    /*0003435c*/ STR         R8, [SP, #20] 
    /*00034360*/ ADD         R8, R4, #88                 @ 0x58 
    /*00034364*/ STR         FP, [SP, #16] 
    /*00034368*/ STR         R1, [SP, #12] 
    /*0003436c*/ MOVW        R1, #0                      @ .LC399 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11524] 
    /*00034370*/ STR         R0, [SP, #8] 
    /*00034374*/ MOVT        R1, #0                      @ .LC399 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11524] 
    /*00034378*/ MOVW        R0, #0                      @ .LC398 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1151c] 
    /*0003437c*/ STR         R1, [SP, #32] 
    /*00034380*/ MOVT        R0, #0                      @ .LC398 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1151c] 
    /*00034384*/ MOVW        R1, #0                      @ .LC401 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11534] 
    /*00034388*/ STR         R0, [SP, #36]               @ 0x24 
    /*0003438c*/ MOVT        R1, #0                      @ .LC401 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11534] 
    /*00034390*/ MOVW        R0, #0                      @ .LC400 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1152c] 
    /*00034394*/ STR         R1, [SP, #24] 
    /*00034398*/ MOVT        R0, #0                      @ .LC400 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1152c] 
    /*0003439c*/ MOVW        R1, #0                      @ .LC397 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x114e8] 
    /*000343a0*/ STR         R0, [SP, #28] 
    /*000343a4*/ MOVT        R1, #0                      @ .LC397 [R_ARM_MOVT_ABS: .rodata.str1.4+0x114e8] 
    /*000343a8*/ MOV         R0, R5 
    /*000343ac*/ BL          0x00000000000343AC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000343b0*/ MOV         R1, R6 
    /*000343b4*/ MOV         R0, R5 
    /*000343b8*/ BL          0x00000000000343B8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000343bc*/ LDR         IP, [R4, #80]               @ 0x50 
    /*000343c0*/ LDR         R7, [R4, #84]               @ 0x54 
    /*000343c4*/ MOV         R0, R5 
    /*000343c8*/ LDR         LR, [R4, #76]               @ 0x4c 
    /*000343cc*/ MOVW        R1, #0                      @ .LC402 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1153c] 
    /*000343d0*/ STR         IP, [SP, #40]               @ 0x28 
    /*000343d4*/ MOVT        R1, #0                      @ .LC402 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1153c] 
    /*000343d8*/ LDR         IP, [R4, #72]               @ 0x48 
    /*000343dc*/ LDM         R8, {R8, R9, SL} 
    /*000343e0*/ STR         IP, [SP, #44]               @ 0x2c 
    /*000343e4*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*000343e8*/ LDR         R2, [R4, #56]               @ 0x38 
    /*000343ec*/ LDR         IP, [R4, #68]               @ 0x44 
    /*000343f0*/ LDR         FP, [R4, #100]              @ 0x64 
    /*000343f4*/ LDR         R4, [R4, #64]               @ 0x40 
    /*000343f8*/ STR         R7, [SP, #20] 
    /*000343fc*/ STR         LR, [SP, #12] 
    /*00034400*/ LDR         R7, [SP, #40]               @ 0x28 
    /*00034404*/ LDR         LR, [SP, #44]               @ 0x2c 
    /*00034408*/ STR         FP, [SP, #36]               @ 0x24 
    /*0003440c*/ STR         R7, [SP, #16] 
    /*00034410*/ STM         SP, {R4, IP, LR} 
    /*00034414*/ STR         SL, [SP, #32] 
    /*00034418*/ STR         R9, [SP, #28] 
    /*0003441c*/ STR         R8, [SP, #24] 
    /*00034420*/ BL          0x0000000000034420          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00034424*/ MOV         R1, R6 
    /*00034428*/ MOV         R0, R5 
    /*0003442c*/ BL          0x000000000003442C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00034430*/ MOV         R0, #0 
    /*00034434*/ ADD         SP, SP, #68                 @ 0x44 
    /*00034438*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VI_DRV_ProcLDCV2Attr


FUNC_BEGIN VI_DRV_ChangeProcSeq
    /*0003443c*/ BX          LR 
FUNC_END VI_DRV_ChangeProcSeq


FUNC_BEGIN VI_DRV_GetViprocDebug
    /*00034440*/ PUSH        {R4, R5, LR} 
    /*00034444*/ MOV         R4, R0 
    /*00034448*/ SUB         SP, SP, #20 
    /*0003444c*/ MOV         R0, #0 
    /*00034450*/ BL          0x0000000000034450          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*00034454*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00034458*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0003445c*/ ADD         R3, R3, R4, LSL #2 
    /*00034460*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*00034464*/ CMP         R3, #1 
    /*00034468*/ BLS         VI_DRV_GetViprocDebug_x344a8
    /*0003446c*/ MOV         R5, R0 
    /*00034470*/ BL          0x0000000000034470          @ VI_HAL_GetViprocDebug12 [R_ARM_CALL: .text+0x36fd4] 
    /*00034474*/ MOV         R4, R0 
    /*00034478*/ MOV         R0, R5 
    /*0003447c*/ BL          0x000000000003447C          @ VI_HAL_GetViprocDebug13 [R_ARM_CALL: .text+0x36fe0] 
    /*00034480*/ MOVW        R3, #11738                  @ 0x2dda 
    /*00034484*/ MOVW        R2, #0                      @ .LC403 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11570] 
    /*00034488*/ STR         R3, [SP] 
    /*0003448c*/ STR         R4, [SP, #4] 
    /*00034490*/ MOVT        R2, #0                      @ .LC403 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11570] 
    /*00034494*/ LDR         R3, [PC, #20]               @ 0x00000000000344b0 
    /*00034498*/ MOV         R1, #16 
    /*0003449c*/ STR         R0, [SP, #8] 
    /*000344a0*/ MOV         R0, #3 
    /*000344a4*/ BL          0x00000000000344A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_GetViprocDebug_x344a8:
    /*000344a8*/ ADD         SP, SP, #20 
    /*000344ac*/ POP         {R4, R5, PC} 
    /*000344b0*/ ANDEQ       R2, R0, R0, ASR R1 
FUNC_END VI_DRV_GetViprocDebug


FUNC_BEGIN VI_DRV_GetProcModuleParam
    /*000344b4*/ MOV         R0, #0 
    /*000344b8*/ BX          LR 
FUNC_END VI_DRV_GetProcModuleParam


FUNC_BEGIN VI_DRV_EnablePipeInterrupt
    /*000344bc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000344c0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000344c4*/ ADD         R3, R3, R0, LSL #2 
    /*000344c8*/ PUSH        {R4, LR} 
    /*000344cc*/ MOV         R4, R0 
    /*000344d0*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*000344d4*/ CMP         R3, #2 
    /*000344d8*/ BEQ         VI_DRV_EnablePipeInterrupt_x344f4
    VI_DRV_EnablePipeInterrupt_x344dc:
    /*000344dc*/ MOV         R1, R4 
    /*000344e0*/ MOV         R2, #1 
    /*000344e4*/ MOV         R0, #0 
    /*000344e8*/ BL          0x00000000000344E8          @ VI_HAL_EnablePipeInterrupt [R_ARM_CALL: .text+0x35b50] 
    /*000344ec*/ MOV         R0, #0 
    /*000344f0*/ POP         {R4, PC} 
    VI_DRV_EnablePipeInterrupt_x344f4:
    /*000344f4*/ MOV         R0, #0 
    /*000344f8*/ BL          0x00000000000344F8          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*000344fc*/ MOV         R1, #1024                   @ 0x400 
    /*00034500*/ BL          0x0000000000034500          @ VI_HAL_SetMask [R_ARM_CALL: .text+0x3522c] 
    /*00034504*/ B           VI_DRV_EnablePipeInterrupt_x344dc
FUNC_END VI_DRV_EnablePipeInterrupt


FUNC_BEGIN VI_DRV_DisablePipeInterrupt
    /*00034508*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*0003450c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00034510*/ ADD         R3, R3, R0, LSL #2 
    /*00034514*/ PUSH        {R4, LR} 
    /*00034518*/ MOV         R4, R0 
    /*0003451c*/ LDR         R3, [R3, #712]              @ 0x2c8 
    /*00034520*/ CMP         R3, #2 
    /*00034524*/ BEQ         VI_DRV_DisablePipeInterrupt_x34540
    VI_DRV_DisablePipeInterrupt_x34528:
    /*00034528*/ MOV         R2, #0 
    /*0003452c*/ MOV         R1, R4 
    /*00034530*/ MOV         R0, R2 
    /*00034534*/ BL          0x0000000000034534          @ VI_HAL_EnablePipeInterrupt [R_ARM_CALL: .text+0x35b50] 
    /*00034538*/ MOV         R0, #0 
    /*0003453c*/ POP         {R4, PC} 
    VI_DRV_DisablePipeInterrupt_x34540:
    /*00034540*/ MOV         R0, #0 
    /*00034544*/ BL          0x0000000000034544          @ VI_HAL_GetProcReg [R_ARM_CALL: .text+0x34818] 
    /*00034548*/ MOV         R1, #0 
    /*0003454c*/ BL          0x000000000003454C          @ VI_HAL_SetMask [R_ARM_CALL: .text+0x3522c] 
    /*00034550*/ B           VI_DRV_DisablePipeInterrupt_x34528
FUNC_END VI_DRV_DisablePipeInterrupt


FUNC_BEGIN VI_DRV_CheckChnAlign
    /*00034554*/ CMP         R2, #1024                   @ 0x400 
    /*00034558*/ BHI         VI_DRV_CheckChnAlign_x34564
    /*0003455c*/ MOV         R0, #0 
    /*00034560*/ BX          LR 
    VI_DRV_CheckChnAlign_x34564:
    /*00034564*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00034568*/ SUB         SP, SP, #28 
    /*0003456c*/ MOVW        R3, #11798                  @ 0x2e16 
    /*00034570*/ STR         R2, [SP, #20] 
    /*00034574*/ MOV         R2, #1024                   @ 0x400 
    /*00034578*/ STR         R1, [SP, #8] 
    /*0003457c*/ MOV         R1, #0 
    /*00034580*/ STR         R0, [SP, #4] 
    /*00034584*/ MOV         R0, #3 
    /*00034588*/ STR         R2, [SP, #16] 
    /*0003458c*/ MOVW        R2, #0                      @ .LC404 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x115c0] 
    /*00034590*/ STR         R1, [SP, #12] 
    /*00034594*/ MOVT        R2, #0                      @ .LC404 [R_ARM_MOVT_ABS: .rodata.str1.4+0x115c0] 
    /*00034598*/ STR         R3, [SP] 
    /*0003459c*/ MOV         R1, #16 
    /*000345a0*/ LDR         R3, [PC, #16]               @ 0x00000000000345b8 
    /*000345a4*/ BL          0x00000000000345A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000345a8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000345ac*/ MOVT        R0, #40976                  @ 0xa010 
    /*000345b0*/ ADD         SP, SP, #28 
    /*000345b4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000345b8*/ ANDEQ       R2, R0, R8, ROR #2 
FUNC_END VI_DRV_CheckChnAlign


FUNC_BEGIN VI_DRV_CheckProcEnableModuleParam
    /*000345bc*/ MOV         R0, #0 
    /*000345c0*/ BX          LR 
FUNC_END VI_DRV_CheckProcEnableModuleParam


FUNC_BEGIN VI_DRV_SetProcPowerSwitch
    /*000345c4*/ MOV         R0, #0 
    /*000345c8*/ BX          LR 
FUNC_END VI_DRV_SetProcPowerSwitch


FUNC_BEGIN VI_DRV_CheckPipeChipLimit
    /*000345cc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*000345d0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*000345d4*/ ADD         R3, R3, R0, LSL #2 
    /*000345d8*/ PUSH        {R4, R5, LR} 
    /*000345dc*/ MOV         R5, R0 
    /*000345e0*/ LDR         R4, [R3, #728]              @ 0x2d8 
    /*000345e4*/ SUB         SP, SP, #20 
    /*000345e8*/ LDR         R0, [R4, #320]              @ 0x140 
    /*000345ec*/ BL          0x00000000000345EC          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*000345f0*/ CMP         R0, #0 
    /*000345f4*/ MOVNE       R0, #0 
    /*000345f8*/ BNE         VI_DRV_CheckPipeChipLimit_x34618
    /*000345fc*/ BIC         R3, R5, #2 
    /*00034600*/ CMP         R3, #1 
    /*00034604*/ BNE         VI_DRV_CheckPipeChipLimit_x34618
    /*00034608*/ ADD         R4, R4, #32768              @ 0x8000 
    /*0003460c*/ LDR         R3, [R4, #1436]             @ 0x59c 
    /*00034610*/ CMP         R3, #2 
    /*00034614*/ BNE         VI_DRV_CheckPipeChipLimit_x34620
    VI_DRV_CheckPipeChipLimit_x34618:
    /*00034618*/ ADD         SP, SP, #20 
    /*0003461c*/ POP         {R4, R5, PC} 
    VI_DRV_CheckPipeChipLimit_x34620:
    /*00034620*/ STR         R3, [SP, #8] 
    /*00034624*/ MOVW        R2, #0                      @ .LC405 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1161c] 
    /*00034628*/ MOVW        R3, #11830                  @ 0x2e36 
    /*0003462c*/ STR         R5, [SP, #4] 
    /*00034630*/ STR         R3, [SP] 
    /*00034634*/ MOVT        R2, #0                      @ .LC405 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1161c] 
    /*00034638*/ LDR         R3, [PC, #20]               @ 0x0000000000034654 
    /*0003463c*/ MOV         R1, #16 
    /*00034640*/ MOV         R0, #3 
    /*00034644*/ BL          0x0000000000034644          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00034648*/ MOVW        R0, #32771                  @ 0x8003 
    /*0003464c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00034650*/ B           VI_DRV_CheckPipeChipLimit_x34618
    /*00034654*/ ANDEQ       R2, R0, R0, LSL #3 
FUNC_END VI_DRV_CheckPipeChipLimit


FUNC_BEGIN VI_DRV_IsProcPowerOn
    /*00034658*/ MOV         R0, #1 
    /*0003465c*/ BX          LR 
FUNC_END VI_DRV_IsProcPowerOn


FUNC_BEGIN VI_DRV_GetDevDetectionSize
    /*00034660*/ PUSH        {R4, LR} 
    /*00034664*/ BL          0x0000000000034664          @ VI_HAL_GetDevDetectionSize [R_ARM_CALL: .text+0x37450] 
    /*00034668*/ MOV         R0, #0 
    /*0003466c*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetDevDetectionSize


FUNC_BEGIN VI_DRV_GetIspDetectionSize
    /*00034670*/ PUSH        {R4, LR} 
    /*00034674*/ BL          0x0000000000034674          @ VI_HAL_GetIspDetectionSize [R_ARM_CALL: .text+0x374c0] 
    /*00034678*/ MOV         R0, #0 
    /*0003467c*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetIspDetectionSize


FUNC_BEGIN VI_DRV_IsDevSupportBas
    /*00034680*/ MOV         R0, #0 
    /*00034684*/ BX          LR 
FUNC_END VI_DRV_IsDevSupportBas


FUNC_BEGIN VI_DRV_GetBasDetectionSize
    /*00034688*/ MOV         R0, #0 
    /*0003468c*/ BX          LR 
FUNC_END VI_DRV_GetBasDetectionSize


FUNC_BEGIN VI_DRV_CapIsWrongInt
    /*00034690*/ CMP         R1, #0 
    /*00034694*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00034698*/ SUB         SP, SP, #28 
    /*0003469c*/ BEQ         VI_DRV_CapIsWrongInt_x3472c
    /*000346a0*/ CMP         R1, #2 
    /*000346a4*/ BLS         VI_DRV_CapIsWrongInt_x346d8
    /*000346a8*/ MOVW        R3, #11898                  @ 0x2e7a 
    /*000346ac*/ STR         R1, [SP, #4] 
    /*000346b0*/ MOVW        R2, #0                      @ .LC406 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1168c] 
    /*000346b4*/ STR         R3, [SP] 
    /*000346b8*/ MOVT        R2, #0                      @ .LC406 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1168c] 
    /*000346bc*/ LDR         R3, [PC, #132]              @ 0x0000000000034748 
    /*000346c0*/ MOV         R1, #16 
    /*000346c4*/ MOV         R0, #3 
    /*000346c8*/ BL          0x00000000000346C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_CapIsWrongInt_x346cc:
    /*000346cc*/ MOV         R0, #0 
    /*000346d0*/ ADD         SP, SP, #28 
    /*000346d4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CapIsWrongInt_x346d8:
    /*000346d8*/ ANDS        R3, R2, #12 
    /*000346dc*/ ANDNE       R1, R2, #2 
    /*000346e0*/ BEQ         VI_DRV_CapIsWrongInt_x346cc
    VI_DRV_CapIsWrongInt_x346e4:
    /*000346e4*/ AND         IP, R2, #8 
    /*000346e8*/ STR         R1, [SP, #12] 
    /*000346ec*/ STR         R2, [SP, #8] 
    /*000346f0*/ AND         R3, R2, #4 
    /*000346f4*/ STR         R0, [SP, #4] 
    /*000346f8*/ MOVW        R1, #11905                  @ 0x2e81 
    /*000346fc*/ STR         R3, [SP, #16] 
    /*00034700*/ MOVW        R2, #0                      @ .LC407 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x116c0] 
    /*00034704*/ STR         R1, [SP] 
    /*00034708*/ MOVT        R2, #0                      @ .LC407 [R_ARM_MOVT_ABS: .rodata.str1.4+0x116c0] 
    /*0003470c*/ STR         IP, [SP, #20] 
    /*00034710*/ MOV         R1, #16 
    /*00034714*/ LDR         R3, [PC, #44]               @ 0x0000000000034748 
    /*00034718*/ MOV         R0, #3 
    /*0003471c*/ BL          0x000000000003471C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00034720*/ MOV         R0, #1 
    /*00034724*/ ADD         SP, SP, #28 
    /*00034728*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CapIsWrongInt_x3472c:
    /*0003472c*/ ANDS        R1, R2, #2 
    /*00034730*/ BEQ         VI_DRV_CapIsWrongInt_x346e4
    /*00034734*/ ANDS        R3, R2, #12 
    /*00034738*/ MOVEQ       R0, R3 
    /*0003473c*/ BNE         VI_DRV_CapIsWrongInt_x346e4
    /*00034740*/ ADD         SP, SP, #28 
    /*00034744*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00034748*/ MULEQ       R0, IP, R1 
FUNC_END VI_DRV_CapIsWrongInt


FUNC_BEGIN VI_HAL_GetPortReg.part.0
    /*0003474c*/ PUSH        {R4, LR} 
    /*00034750*/ MOVW        R2, #2817                   @ 0xb01 
    /*00034754*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11724] 
    /*00034758*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x21b4] 
    /*0003475c*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11724] 
    /*00034760*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x21b4] 
    /*00034764*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11728] 
    /*00034768*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11728] 
    /*0003476c*/ BL          0x000000000003476C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00034770*/ MOV         R0, #0 
    /*00034774*/ POP         {R4, PC} 
FUNC_END VI_HAL_GetPortReg.part.0


FUNC_BEGIN VI_HAL_GetProcIrqNum
    /*00034778*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0x128] 
    /*0003477c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0x128] 
    /*00034780*/ LDR         R0, [R3, R0, LSL #2] 
    /*00034784*/ BX          LR 
FUNC_END VI_HAL_GetProcIrqNum


FUNC_BEGIN VI_HAL_GetCapIrqNum
    /*00034788*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0x128] 
    /*0003478c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0x128] 
    /*00034790*/ ADD         R0, R3, R0, LSL #2 
    /*00034794*/ LDR         R0, [R0, #4] 
    /*00034798*/ BX          LR 
FUNC_END VI_HAL_GetCapIrqNum


FUNC_BEGIN VI_HAL_IspBeRegInit
    /*0003479c*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000347a0*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000347a4*/ LDR         R3, [R2, R0, LSL #2] 
    /*000347a8*/ ADD         R2, R2, R0, LSL #2 
    /*000347ac*/ ADD         R0, R3, #131072             @ 0x20000 
    /*000347b0*/ STR         R0, [R2, #4] 
    /*000347b4*/ CLZ         R0, R0 
    /*000347b8*/ LSR         R0, R0, #5 
    /*000347bc*/ RSB         R0, R0, #0 
    /*000347c0*/ BX          LR 
FUNC_END VI_HAL_IspBeRegInit


FUNC_BEGIN VI_HAL_ProcRegInit
    /*000347c4*/ PUSH        {R4, R5, R6, LR} 
    /*000347c8*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000347cc*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000347d0*/ MOV         R5, R0 
    /*000347d4*/ LDR         R0, [R4, R0, LSL #2] 
    /*000347d8*/ CMP         R0, #0 
    /*000347dc*/ BEQ         VI_HAL_ProcRegInit_x347f4
    VI_HAL_ProcRegInit_x347e0:
    /*000347e0*/ ADD         R4, R4, R5, LSL #2 
    /*000347e4*/ ADD         R3, R0, #131072             @ 0x20000 
    /*000347e8*/ MOV         R0, #0 
    /*000347ec*/ STR         R3, [R4, #4] 
    /*000347f0*/ POP         {R4, R5, R6, PC} 
    VI_HAL_ProcRegInit_x347f4:
    /*000347f4*/ MOV         R1, #5952                   @ 0x1740 
    /*000347f8*/ MOV         R0, #285212672              @ 0x11000000 
    /*000347fc*/ BL          0x00000000000347FC          @ osal_ioremap_nocache [R_ARM_CALL: +0x0] 
    /*00034800*/ CMP         R0, #0 
    /*00034804*/ STR         R0, [R4, R5, LSL #2] 
    /*00034808*/ BNE         VI_HAL_ProcRegInit_x347e0
    /*0003480c*/ MVN         R0, #0 
    /*00034810*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_HAL_ProcRegInit


FUNC_BEGIN VI_HAL_ProcRegExit
    /*00034814*/ BX          LR 
FUNC_END VI_HAL_ProcRegExit


FUNC_BEGIN VI_HAL_GetProcReg
    /*00034818*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*0003481c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00034820*/ LDR         R0, [R3, R0, LSL #2] 
    /*00034824*/ BX          LR 
FUNC_END VI_HAL_GetProcReg


FUNC_BEGIN VI_HAL_GetIspBeReg
    /*00034828*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*0003482c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00034830*/ ADD         R0, R3, R0, LSL #2 
    /*00034834*/ LDR         R0, [R0, #4] 
    /*00034838*/ BX          LR 
FUNC_END VI_HAL_GetIspBeReg


FUNC_BEGIN VI_HAL_ProcSetOutstanding
    /*0003483c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00034840*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00034844*/ SUB         R1, R1, #1 
    /*00034848*/ SUB         R2, R2, #1 
    /*0003484c*/ LDR         R0, [R3, R0, LSL #2] 
    /*00034850*/ LDR         R3, [R0, #772]              @ 0x304 
    /*00034854*/ BFI         R3, R1, #0, #4 
    /*00034858*/ BFI         R3, R2, #4, #4 
    /*0003485c*/ STR         R3, [R0, #772]              @ 0x304 
    /*00034860*/ BX          LR 
FUNC_END VI_HAL_ProcSetOutstanding


FUNC_BEGIN VI_HAL_ProcSetApbMuxCfg
    /*00034864*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00034868*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*0003486c*/ LDR         R2, [R3, R0, LSL #2] 
    /*00034870*/ LDR         R3, [R2, #992]              @ 0x3e0 
    /*00034874*/ BFI         R3, R1, #30, #2 
    /*00034878*/ STR         R3, [R2, #992]              @ 0x3e0 
    /*0003487c*/ BX          LR 
FUNC_END VI_HAL_ProcSetApbMuxCfg


FUNC_BEGIN VI_HAL_ProcLowPowerEnable
    /*00034880*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00034884*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00034888*/ LDR         R2, [R3, R0, LSL #2] 
    /*0003488c*/ LDR         R3, [R2, #772]              @ 0x304 
    /*00034890*/ BFI         R3, R1, #24, #1 
    /*00034894*/ STR         R3, [R2, #772]              @ 0x304 
    /*00034898*/ BX          LR 
FUNC_END VI_HAL_ProcLowPowerEnable


FUNC_BEGIN VI_HAL_SetOnlineSel
    /*0003489c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000348a0*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000348a4*/ SUB         SP, SP, #8 
    /*000348a8*/ CMP         R1, #0 
    /*000348ac*/ LDR         R3, [R3, #8] 
    /*000348b0*/ ADD         R0, R3, R0, LSL #3 
    /*000348b4*/ LDR         R3, [R0, #512]              @ 0x200 
    /*000348b8*/ STR         R3, [SP] 
    /*000348bc*/ LDR         R3, [SP] 
    /*000348c0*/ ORR         R3, R3, #-2147483648        @ 0x80000000 
    /*000348c4*/ STR         R3, [SP] 
    /*000348c8*/ LDR         R3, [R0, #516]              @ 0x204 
    /*000348cc*/ STR         R3, [SP, #4] 
    /*000348d0*/ LDREQ       R3, [SP, #4] 
    /*000348d4*/ BFIEQ       R3, R2, #0, #4 
    /*000348d8*/ STREQ       R3, [SP, #4] 
    /*000348dc*/ LDR         R3, [SP] 
    /*000348e0*/ STR         R3, [R0, #512]              @ 0x200 
    /*000348e4*/ LDR         R3, [SP, #4] 
    /*000348e8*/ STR         R3, [R0, #516]              @ 0x204 
    /*000348ec*/ ADD         SP, SP, #8 
    /*000348f0*/ BX          LR 
FUNC_END VI_HAL_SetOnlineSel


FUNC_BEGIN VI_HAL_SetWdrTunlCtrl
    /*000348f4*/ MOVW        IP, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000348f8*/ MOVT        IP, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000348fc*/ LDR         IP, [IP, R0, LSL #2] 
    /*00034900*/ LDR         R0, [IP, #1076]             @ 0x434 
    /*00034904*/ BFI         R0, R1, #2, #2 
    /*00034908*/ BFI         R0, R2, #0, #1 
    /*0003490c*/ BFI         R0, R3, #1, #1 
    /*00034910*/ STR         R0, [IP, #1076]             @ 0x434 
    /*00034914*/ BX          LR 
FUNC_END VI_HAL_SetWdrTunlCtrl


FUNC_BEGIN VI_HAL_SetCurPicConfig
    /*00034918*/ LDR         IP, [R1, #48]               @ 0x30 
    /*0003491c*/ LDR         R3, [R0, #1024]             @ 0x400 
    /*00034920*/ LDR         R2, [R1, #52]               @ 0x34 
    /*00034924*/ SUB         IP, IP, #1 
    /*00034928*/ BFI         R3, IP, #0, #16 
    /*0003492c*/ SUB         R2, R2, #1 
    /*00034930*/ BFI         R3, R2, #16, #16 
    /*00034934*/ STR         R3, [R0, #1024]             @ 0x400 
    /*00034938*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0003493c*/ LDR         R3, [R0, #1028]             @ 0x404 
    /*00034940*/ LDR         LR, [R1, #64]               @ 0x40 
    /*00034944*/ LDR         IP, [R1, #56]               @ 0x38 
    /*00034948*/ LDR         R2, [R1, #32] 
    /*0003494c*/ BFI         R3, LR, #0, #1 
    /*00034950*/ BFI         R3, IP, #3, #1 
    /*00034954*/ LDR         LR, [R1, #36]               @ 0x24 
    /*00034958*/ LDR         IP, [R1, #68]               @ 0x44 
    /*0003495c*/ BFI         R3, R2, #21, #2 
    /*00034960*/ BFI         R3, LR, #23, #2 
    /*00034964*/ LDR         R2, [R1, #72]               @ 0x48 
    /*00034968*/ BFI         R3, IP, #8, #4 
    /*0003496c*/ BFI         R3, R2, #12, #6 
    /*00034970*/ ORR         R3, R3, #-2147483648        @ 0x80000000 
    /*00034974*/ STR         R3, [R0, #1028]             @ 0x404 
    /*00034978*/ LDR         R3, [R0, #1032]             @ 0x408 
    /*0003497c*/ LDR         IP, [R1, #80]               @ 0x50 
    /*00034980*/ LDR         R2, [R1, #76]               @ 0x4c 
    /*00034984*/ BFI         R3, IP, #0, #16 
    /*00034988*/ BFI         R3, R2, #16, #16 
    /*0003498c*/ STR         R3, [R0, #1032]             @ 0x408 
    /*00034990*/ LDR         R3, [R0, #1072]             @ 0x430 
    /*00034994*/ LDR         IP, [R1, #40]               @ 0x28 
    /*00034998*/ LDR         R2, [R1, #44]               @ 0x2c 
    /*0003499c*/ BFI         R3, IP, #0, #16 
    /*000349a0*/ BFI         R3, R2, #16, #16 
    /*000349a4*/ STR         R3, [R0, #1072]             @ 0x430 
    /*000349a8*/ LDR         R3, [R1] 
    /*000349ac*/ STR         R3, [R0, #1040]             @ 0x410 
    /*000349b0*/ LDR         R3, [R1, #8] 
    /*000349b4*/ STR         R3, [R0, #1048]             @ 0x418 
    /*000349b8*/ LDR         R3, [R1, #16] 
    /*000349bc*/ STR         R3, [R0, #1056]             @ 0x420 
    /*000349c0*/ LDR         R3, [R1, #24] 
    /*000349c4*/ STR         R3, [R0, #1064]             @ 0x428 
    /*000349c8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_HAL_SetCurPicConfig


FUNC_BEGIN VI_HAL_SetCurDcmpAttr
    /*000349cc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000349d0*/ LDR         R3, [R0, #2048]             @ 0x800 
    /*000349d4*/ LDM         R1, {IP, LR} 
    /*000349d8*/ LDR         R2, [R1, #24] 
    /*000349dc*/ BFI         R3, LR, #16, #16 
    /*000349e0*/ LDR         LR, [R1, #20] 
    /*000349e4*/ BFI         R3, IP, #8, #1 
    /*000349e8*/ LDR         IP, [R1, #16] 
    /*000349ec*/ BFI         R3, R2, #5, #2 
    /*000349f0*/ LDR         R2, [R1, #12] 
    /*000349f4*/ BFI         R3, LR, #3, #2 
    /*000349f8*/ BFI         R3, IP, #2, #1 
    /*000349fc*/ BFI         R3, R2, #1, #1 
    /*00034a00*/ ORR         R3, R3, #1 
    /*00034a04*/ STR         R3, [R0, #2048]             @ 0x800 
    /*00034a08*/ LDR         IP, [R1, #28] 
    /*00034a0c*/ LDR         R2, [R1, #32] 
    /*00034a10*/ LDR         R3, [R0, #2052]             @ 0x804 
    /*00034a14*/ SUB         R1, IP, #1 
    /*00034a18*/ SUB         R2, R2, #1 
    /*00034a1c*/ BFI         R3, R1, #0, #14 
    /*00034a20*/ BFI         R3, R2, #16, #14 
    /*00034a24*/ STR         R3, [R0, #2052]             @ 0x804 
    /*00034a28*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_HAL_SetCurDcmpAttr


FUNC_BEGIN VI_HAL_SetWchBufferWrapLine
    /*00034a2c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00034a30*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00034a34*/ SUB         R1, R1, #1 
    /*00034a38*/ LDR         R3, [R3, #8] 
    /*00034a3c*/ ADD         R0, R3, R0, LSL #12 
    /*00034a40*/ ADD         R0, R0, #65536              @ 0x10000 
    /*00034a44*/ LDR         R3, [R0, #128]              @ 0x80 
    /*00034a48*/ BFI         R3, R1, #15, #14 
    /*00034a4c*/ STR         R3, [R0, #128]              @ 0x80 
    /*00034a50*/ BX          LR 
FUNC_END VI_HAL_SetWchBufferWrapLine


FUNC_BEGIN VI_HAL_SetWchBufferWrapEnable
    /*00034a54*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00034a58*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00034a5c*/ LDR         R3, [R3, #8] 
    /*00034a60*/ ADD         R0, R3, R0, LSL #12 
    /*00034a64*/ ADD         R0, R0, #65536              @ 0x10000 
    /*00034a68*/ LDR         R3, [R0, #128]              @ 0x80 
    /*00034a6c*/ BFI         R3, R1, #14, #1 
    /*00034a70*/ STR         R3, [R0, #128]              @ 0x80 
    /*00034a74*/ BX          LR 
FUNC_END VI_HAL_SetWchBufferWrapEnable


FUNC_BEGIN VI_HAL_SetWDRInputWrapLine
    /*00034a78*/ CMP         R1, #0 
    /*00034a7c*/ SUBEQ       R2, R2, #1 
    /*00034a80*/ LDREQ       R3, [R0, #1092]             @ 0x444 
    /*00034a84*/ BFIEQ       R3, R2, #0, #16 
    /*00034a88*/ STREQ       R3, [R0, #1092]             @ 0x444 
    /*00034a8c*/ BX          LR 
FUNC_END VI_HAL_SetWDRInputWrapLine


FUNC_BEGIN VI_HAL_SetWDRInputWrapEnable
    /*00034a90*/ CMP         R1, #0 
    /*00034a94*/ LDREQ       R3, [R0, #1084]             @ 0x43c 
    /*00034a98*/ BFIEQ       R3, R2, #1, #1 
    /*00034a9c*/ STREQ       R3, [R0, #1084]             @ 0x43c 
    /*00034aa0*/ BX          LR 
FUNC_END VI_HAL_SetWDRInputWrapEnable


FUNC_BEGIN VI_HAL_EnableWDRPic
    /*00034aa4*/ CMP         R1, #0 
    /*00034aa8*/ LDREQ       R3, [R0, #1084]             @ 0x43c 
    /*00034aac*/ BFIEQ       R3, R2, #31, #1 
    /*00034ab0*/ STREQ       R3, [R0, #1084]             @ 0x43c 
    /*00034ab4*/ BX          LR 
FUNC_END VI_HAL_EnableWDRPic


FUNC_BEGIN VI_HAL_SetWDRPicConfig
    /*00034ab8*/ CMP         R1, #0 
    /*00034abc*/ BXNE        LR 
    /*00034ac0*/ PUSH        {R4, LR} 
    /*00034ac4*/ LDR         LR, [R2, #48]               @ 0x30 
    /*00034ac8*/ LDR         R3, [R0, #1080]             @ 0x438 
    /*00034acc*/ LDR         IP, [R2, #52]               @ 0x34 
    /*00034ad0*/ SUB         LR, LR, #1 
    /*00034ad4*/ BFI         R3, LR, #0, #16 
    /*00034ad8*/ SUB         IP, IP, #1 
    /*00034adc*/ BFI         R3, IP, #16, #16 
    /*00034ae0*/ STR         R3, [R0, #1080]             @ 0x438 
    /*00034ae4*/ LDR         R3, [R0, #1084]             @ 0x43c 
    /*00034ae8*/ LDR         IP, [R2, #56]               @ 0x38 
    /*00034aec*/ LDR         R4, [R2, #64]               @ 0x40 
    /*00034af0*/ LDR         LR, [R2, #68]               @ 0x44 
    /*00034af4*/ BFI         R3, IP, #3, #1 
    /*00034af8*/ BFI         R3, R4, #0, #1 
    /*00034afc*/ LDR         IP, [R2, #72]               @ 0x48 
    /*00034b00*/ BFI         R3, LR, #8, #4 
    /*00034b04*/ BFI         R3, IP, #12, #6 
    /*00034b08*/ ORR         R3, R3, #-2147483648        @ 0x80000000 
    /*00034b0c*/ STR         R3, [R0, #1084]             @ 0x43c 
    /*00034b10*/ LDR         R3, [R0, #1112]             @ 0x458 
    /*00034b14*/ LDR         IP, [R2, #40]               @ 0x28 
    /*00034b18*/ BFI         R3, IP, #0, #16 
    /*00034b1c*/ STR         R3, [R0, #1112]             @ 0x458 
    /*00034b20*/ LDR         R3, [R0, #1088]             @ 0x440 
    /*00034b24*/ LDR         IP, [R2, #80]               @ 0x50 
    /*00034b28*/ BFI         R3, IP, #0, #16 
    /*00034b2c*/ BFI         R3, R1, #16, #16 
    /*00034b30*/ STR         R3, [R0, #1088]             @ 0x440 
    /*00034b34*/ LDR         R3, [R2] 
    /*00034b38*/ STR         R3, [R0, #1096]             @ 0x448 
    /*00034b3c*/ LDR         R3, [R2, #16] 
    /*00034b40*/ STR         R3, [R0, #1104]             @ 0x450 
    /*00034b44*/ POP         {R4, PC} 
FUNC_END VI_HAL_SetWDRPicConfig


FUNC_BEGIN VI_HAL_SetDWRCmpAttr
    /*00034b48*/ CMP         R1, #0 
    /*00034b4c*/ BXNE        LR 
    /*00034b50*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00034b54*/ LDR         R3, [R0, #2068]             @ 0x814 
    /*00034b58*/ LDM         R2, {IP, LR} 
    /*00034b5c*/ LDR         R1, [R2, #24] 
    /*00034b60*/ BFI         R3, LR, #16, #16 
    /*00034b64*/ LDR         LR, [R2, #20] 
    /*00034b68*/ BFI         R3, IP, #8, #1 
    /*00034b6c*/ LDR         IP, [R2, #16] 
    /*00034b70*/ BFI         R3, R1, #5, #2 
    /*00034b74*/ LDR         R1, [R2, #12] 
    /*00034b78*/ BFI         R3, LR, #3, #2 
    /*00034b7c*/ BFI         R3, IP, #2, #1 
    /*00034b80*/ BFI         R3, R1, #1, #1 
    /*00034b84*/ ORR         R3, R3, #1 
    /*00034b88*/ STR         R3, [R0, #2068]             @ 0x814 
    /*00034b8c*/ LDR         R1, [R2, #28] 
    /*00034b90*/ LDR         R3, [R0, #2072]             @ 0x818 
    /*00034b94*/ LDR         R2, [R2, #32] 
    /*00034b98*/ SUB         R1, R1, #1 
    /*00034b9c*/ BFI         R3, R1, #0, #14 
    /*00034ba0*/ SUB         R2, R2, #1 
    /*00034ba4*/ BFI         R3, R2, #16, #14 
    /*00034ba8*/ STR         R3, [R0, #2072]             @ 0x818 
    /*00034bac*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_HAL_SetDWRCmpAttr


FUNC_BEGIN VI_HAL_SetIspBypassMode
    /*00034bb0*/ LDR         R3, [R0] 
    /*00034bb4*/ BFI         R3, R1, #26, #2 
    /*00034bb8*/ STR         R3, [R0] 
    /*00034bbc*/ BX          LR 
FUNC_END VI_HAL_SetIspBypassMode


FUNC_BEGIN VI_HAL_Set3dnrParam
    /*00034bc0*/ ADD         R0, R0, #23552              @ 0x5c00 
    /*00034bc4*/ SUB         R3, R1, #4 
    /*00034bc8*/ ADD         R0, R0, #252                @ 0xfc 
    /*00034bcc*/ ADD         R1, R1, #284                @ 0x11c 
    VI_HAL_Set3dnrParam_x34bd0:
    /*00034bd0*/ LDR         R2, [R3, #4]! 
    /*00034bd4*/ CMP         R3, R1 
    /*00034bd8*/ STR         R2, [R0, #4]! 
    /*00034bdc*/ BNE         VI_HAL_Set3dnrParam_x34bd0
    /*00034be0*/ BX          LR 
FUNC_END VI_HAL_Set3dnrParam


FUNC_BEGIN VI_HAL_SetChnCrop
    /*00034be4*/ CMP         R1, #0 
    /*00034be8*/ BXNE        LR 
    /*00034bec*/ LDR         R3, [R0] 
    /*00034bf0*/ LDR         R1, [R2, #16] 
    /*00034bf4*/ BFI         R3, R1, #0, #1 
    /*00034bf8*/ STR         R3, [R0] 
    /*00034bfc*/ LDR         IP, [R2, #8] 
    /*00034c00*/ LDR         R3, [R0, #256]              @ 0x100 
    /*00034c04*/ LDR         R1, [R2, #12] 
    /*00034c08*/ SUB         IP, IP, #1 
    /*00034c0c*/ BFI         R3, IP, #0, #13 
    /*00034c10*/ SUB         R1, R1, #1 
    /*00034c14*/ BFI         R3, R1, #16, #13 
    /*00034c18*/ STR         R3, [R0, #256]              @ 0x100 
    /*00034c1c*/ LDM         R2, {R1, R2} 
    /*00034c20*/ LDR         R3, [R0, #260]              @ 0x104 
    /*00034c24*/ BFI         R3, R1, #0, #13 
    /*00034c28*/ BFI         R3, R2, #16, #13 
    /*00034c2c*/ STR         R3, [R0, #260]              @ 0x104 
    /*00034c30*/ BX          LR 
FUNC_END VI_HAL_SetChnCrop


FUNC_BEGIN VI_HAL_EnableChn
    /*00034c34*/ CMP         R1, #0 
    /*00034c38*/ LDREQ       R3, [R0, #1368]             @ 0x558 
    /*00034c3c*/ BFIEQ       R3, R2, #31, #1 
    /*00034c40*/ STREQ       R3, [R0, #1368]             @ 0x558 
    /*00034c44*/ BX          LR 
FUNC_END VI_HAL_EnableChn


FUNC_BEGIN VI_HAL_SetChnPicConfig
    /*00034c48*/ CMP         R1, #0 
    /*00034c4c*/ BXNE        LR 
    /*00034c50*/ PUSH        {R4, LR} 
    /*00034c54*/ LDR         LR, [R2, #48]               @ 0x30 
    /*00034c58*/ LDR         R3, [R0, #1364]             @ 0x554 
    /*00034c5c*/ LDR         IP, [R2, #52]               @ 0x34 
    /*00034c60*/ SUB         LR, LR, #1 
    /*00034c64*/ BFI         R3, LR, #0, #16 
    /*00034c68*/ SUB         IP, IP, #1 
    /*00034c6c*/ BFI         R3, IP, #16, #16 
    /*00034c70*/ STR         R3, [R0, #1364]             @ 0x554 
    /*00034c74*/ LDR         R3, [R0, #1368]             @ 0x558 
    /*00034c78*/ LDR         IP, [R2, #100]              @ 0x64 
    /*00034c7c*/ LDR         R4, [R2, #96]               @ 0x60 
    /*00034c80*/ LDR         LR, [R2, #32] 
    /*00034c84*/ BFI         R3, IP, #0, #1 
    /*00034c88*/ BFI         R3, R4, #1, #1 
    /*00034c8c*/ LDR         IP, [R2, #36]               @ 0x24 
    /*00034c90*/ LDR         R4, [R2, #92]               @ 0x5c 
    /*00034c94*/ BFI         R3, LR, #21, #2 
    /*00034c98*/ BFI         R3, IP, #23, #2 
    /*00034c9c*/ LDR         LR, [R2, #88]               @ 0x58 
    /*00034ca0*/ LDR         IP, [R2, #84]               @ 0x54 
    /*00034ca4*/ BFI         R3, R4, #4, #1 
    /*00034ca8*/ BFI         R3, LR, #5, #1 
    /*00034cac*/ LDR         R4, [R2, #76]               @ 0x4c 
    /*00034cb0*/ LDR         LR, [R2, #68]               @ 0x44 
    /*00034cb4*/ BFI         R3, IP, #6, #1 
    /*00034cb8*/ BFI         R3, R4, #8, #4 
    /*00034cbc*/ LDR         IP, [R2, #64]               @ 0x40 
    /*00034cc0*/ LDR         R4, [R2, #60]               @ 0x3c 
    /*00034cc4*/ BFI         R3, LR, #12, #6 
    /*00034cc8*/ BFI         R3, IP, #18, #1 
    /*00034ccc*/ LDR         LR, [R2, #56]               @ 0x38 
    /*00034cd0*/ LDR         IP, [R2, #72]               @ 0x48 
    /*00034cd4*/ BFI         R3, R4, #19, #1 
    /*00034cd8*/ BFI         R3, LR, #31, #1 
    /*00034cdc*/ BFI         R3, IP, #30, #1 
    /*00034ce0*/ STR         R3, [R0, #1368]             @ 0x558 
    /*00034ce4*/ LDR         R3, [R0, #1376]             @ 0x560 
    /*00034ce8*/ LDR         IP, [R2, #80]               @ 0x50 
    /*00034cec*/ BFI         R3, IP, #0, #16 
    /*00034cf0*/ BFI         R3, R1, #16, #16 
    /*00034cf4*/ STR         R3, [R0, #1376]             @ 0x560 
    /*00034cf8*/ LDR         R3, [R0, #1412]             @ 0x584 
    /*00034cfc*/ LDR         IP, [R2, #40]               @ 0x28 
    /*00034d00*/ LDR         R1, [R2, #44]               @ 0x2c 
    /*00034d04*/ BFI         R3, IP, #0, #16 
    /*00034d08*/ BFI         R3, R1, #16, #16 
    /*00034d0c*/ STR         R3, [R0, #1412]             @ 0x584 
    /*00034d10*/ LDR         R3, [R2] 
    /*00034d14*/ STR         R3, [R0, #1380]             @ 0x564 
    /*00034d18*/ LDR         R3, [R2, #8] 
    /*00034d1c*/ STR         R3, [R0, #1388]             @ 0x56c 
    /*00034d20*/ LDR         R3, [R2, #16] 
    /*00034d24*/ STR         R3, [R0, #1396]             @ 0x574 
    /*00034d28*/ LDR         R3, [R2, #24] 
    /*00034d2c*/ STR         R3, [R0, #1404]             @ 0x57c 
    /*00034d30*/ POP         {R4, PC} 
FUNC_END VI_HAL_SetChnPicConfig


FUNC_BEGIN VI_HAL_SetChnCmpAttr
    /*00034d34*/ PUSH        {R4, LR} 
    /*00034d38*/ LDR         R1, [R0, #2088]             @ 0x828 
    /*00034d3c*/ LDR         R4, [R2, #16] 
    /*00034d40*/ LDR         LR, [R2, #36]               @ 0x24 
    /*00034d44*/ LDR         IP, [R2, #20] 
    /*00034d48*/ BFI         R1, R4, #19, #3 
    /*00034d4c*/ BFI         R1, LR, #18, #1 
    /*00034d50*/ LDR         R4, [R2, #4] 
    /*00034d54*/ LDR         LR, [R2, #212]              @ 0xd4 
    /*00034d58*/ BFI         R1, IP, #17, #1 
    /*00034d5c*/ BFI         R1, R4, #16, #1 
    /*00034d60*/ LDR         IP, [R2, #208]              @ 0xd0 
    /*00034d64*/ LDR         R4, [R2, #32] 
    /*00034d68*/ BFI         R1, LR, #15, #1 
    /*00034d6c*/ BFI         R1, IP, #12, #3 
    /*00034d70*/ LDR         LR, [R2, #28] 
    /*00034d74*/ LDR         IP, [R2, #24] 
    /*00034d78*/ BFI         R1, R4, #11, #1 
    /*00034d7c*/ BFI         R1, LR, #6, #5 
    /*00034d80*/ LDR         R4, [R2] 
    /*00034d84*/ LDR         LR, [R2, #8] 
    /*00034d88*/ BFI         R1, IP, #5, #1 
    /*00034d8c*/ BFI         R1, R4, #4, #1 
    /*00034d90*/ LDR         IP, [R2, #12] 
    /*00034d94*/ BFI         R1, LR, #3, #1 
    /*00034d98*/ BFI         R1, IP, #1, #2 
    /*00034d9c*/ ORR         R1, R1, #1 
    /*00034da0*/ STR         R1, [R0, #2088]             @ 0x828 
    /*00034da4*/ LDR         LR, [R2, #40]               @ 0x28 
    /*00034da8*/ LDR         R1, [R0, #2092]             @ 0x82c 
    /*00034dac*/ LDR         IP, [R2, #44]               @ 0x2c 
    /*00034db0*/ SUB         LR, LR, #1 
    /*00034db4*/ BFI         R1, LR, #0, #14 
    /*00034db8*/ SUB         IP, IP, #1 
    /*00034dbc*/ BFI         R1, IP, #16, #14 
    /*00034dc0*/ STR         R1, [R0, #2092]             @ 0x82c 
    /*00034dc4*/ LDR         R1, [R0, #2096]             @ 0x830 
    /*00034dc8*/ LDR         R4, [R2, #160]              @ 0xa0 
    /*00034dcc*/ LDR         LR, [R2, #156]              @ 0x9c 
    /*00034dd0*/ LDR         IP, [R2, #152]              @ 0x98 
    /*00034dd4*/ BFI         R1, R4, #20, #10 
    /*00034dd8*/ BFI         R1, LR, #10, #10 
    /*00034ddc*/ BFI         R1, IP, #0, #10 
    /*00034de0*/ STR         R1, [R0, #2096]             @ 0x830 
    /*00034de4*/ LDR         IP, [R2, #144]              @ 0x90 
    /*00034de8*/ LDR         R1, [R0, #2100]             @ 0x834 
    /*00034dec*/ LDR         R4, [R2, #140]              @ 0x8c 
    /*00034df0*/ LDR         LR, [R2, #136]              @ 0x88 
    /*00034df4*/ BFI         R1, IP, #24, #4 
    /*00034df8*/ BFI         R1, R4, #16, #8 
    /*00034dfc*/ LDR         IP, [R2, #132]              @ 0x84 
    /*00034e00*/ BFI         R1, LR, #8, #6 
    /*00034e04*/ BFI         R1, IP, #0, #8 
    /*00034e08*/ STR         R1, [R0, #2100]             @ 0x834 
    /*00034e0c*/ LDR         IP, [R2, #64]               @ 0x40 
    /*00034e10*/ LDR         R1, [R0, #2104]             @ 0x838 
    /*00034e14*/ LDR         R4, [R2, #60]               @ 0x3c 
    /*00034e18*/ BFI         R1, IP, #24, #8 
    /*00034e1c*/ LDR         LR, [R2, #56]               @ 0x38 
    /*00034e20*/ LDR         IP, [R2, #52]               @ 0x34 
    /*00034e24*/ BFI         R1, R4, #16, #8 
    /*00034e28*/ BFI         R1, LR, #8, #8 
    /*00034e2c*/ BFI         R1, IP, #0, #8 
    /*00034e30*/ STR         R1, [R0, #2104]             @ 0x838 
    /*00034e34*/ LDR         R1, [R0, #2108]             @ 0x83c 
    /*00034e38*/ LDR         R4, [R2, #76]               @ 0x4c 
    /*00034e3c*/ LDR         LR, [R2, #72]               @ 0x48 
    /*00034e40*/ LDR         IP, [R2, #68]               @ 0x44 
    /*00034e44*/ BFI         R1, R4, #16, #6 
    /*00034e48*/ BFI         R1, LR, #8, #6 
    /*00034e4c*/ BFI         R1, IP, #0, #6 
    /*00034e50*/ STR         R1, [R0, #2108]             @ 0x83c 
    /*00034e54*/ LDR         R1, [R0, #2112]             @ 0x840 
    /*00034e58*/ LDR         LR, [R2, #84]               @ 0x54 
    /*00034e5c*/ LDR         IP, [R2, #80]               @ 0x50 
    /*00034e60*/ BFI         R1, LR, #8, #8 
    /*00034e64*/ BFI         R1, IP, #0, #8 
    /*00034e68*/ STR         R1, [R0, #2112]             @ 0x840 
    /*00034e6c*/ LDR         R1, [R2, #88]               @ 0x58 
    /*00034e70*/ LDR         IP, [R0, #2116]             @ 0x844 
    /*00034e74*/ STR         R1, [R0, #2116]             @ 0x844 
    /*00034e78*/ LDR         R1, [R2, #92]               @ 0x5c 
    /*00034e7c*/ LDR         IP, [R0, #2120]             @ 0x848 
    /*00034e80*/ STR         R1, [R0, #2120]             @ 0x848 
    /*00034e84*/ LDR         R1, [R2, #96]               @ 0x60 
    /*00034e88*/ LDR         IP, [R0, #2124]             @ 0x84c 
    /*00034e8c*/ STR         R1, [R0, #2124]             @ 0x84c 
    /*00034e90*/ LDR         R1, [R2, #100]              @ 0x64 
    /*00034e94*/ LDR         IP, [R0, #2128]             @ 0x850 
    /*00034e98*/ STR         R1, [R0, #2128]             @ 0x850 
    /*00034e9c*/ LDR         R1, [R2, #104]              @ 0x68 
    /*00034ea0*/ LDR         IP, [R0, #2132]             @ 0x854 
    /*00034ea4*/ STR         R1, [R0, #2132]             @ 0x854 
    /*00034ea8*/ LDR         R1, [R2, #108]              @ 0x6c 
    /*00034eac*/ LDR         IP, [R0, #2136]             @ 0x858 
    /*00034eb0*/ STR         R1, [R0, #2136]             @ 0x858 
    /*00034eb4*/ LDR         R1, [R2, #112]              @ 0x70 
    /*00034eb8*/ LDR         IP, [R0, #2140]             @ 0x85c 
    /*00034ebc*/ STR         R1, [R0, #2140]             @ 0x85c 
    /*00034ec0*/ LDR         R1, [R2, #116]              @ 0x74 
    /*00034ec4*/ LDR         IP, [R0, #2144]             @ 0x860 
    /*00034ec8*/ STR         R1, [R0, #2144]             @ 0x860 
    /*00034ecc*/ LDR         R1, [R2, #120]              @ 0x78 
    /*00034ed0*/ LDR         IP, [R0, #2148]             @ 0x864 
    /*00034ed4*/ STR         R1, [R0, #2148]             @ 0x864 
    /*00034ed8*/ LDR         R1, [R2, #124]              @ 0x7c 
    /*00034edc*/ LDR         IP, [R0, #2152]             @ 0x868 
    /*00034ee0*/ STR         R1, [R0, #2152]             @ 0x868 
    /*00034ee4*/ LDR         R1, [R0, #2156]             @ 0x86c 
    /*00034ee8*/ LDR         R4, [R2, #168]              @ 0xa8 
    /*00034eec*/ LDR         LR, [R2, #164]              @ 0xa4 
    /*00034ef0*/ LDR         IP, [R2, #128]              @ 0x80 
    /*00034ef4*/ BFI         R1, R4, #19, #3 
    /*00034ef8*/ BFI         R1, LR, #16, #3 
    /*00034efc*/ BFI         R1, IP, #0, #16 
    /*00034f00*/ STR         R1, [R0, #2156]             @ 0x86c 
    /*00034f04*/ LDR         R1, [R0, #2160]             @ 0x870 
    /*00034f08*/ LDR         IP, [R2, #148]              @ 0x94 
    /*00034f0c*/ BFI         R1, IP, #0, #16 
    /*00034f10*/ STR         R1, [R0, #2160]             @ 0x870 
    /*00034f14*/ LDR         R1, [R0, #2164]             @ 0x874 
    /*00034f18*/ LDR         IP, [R2, #184]              @ 0xb8 
    /*00034f1c*/ LDR         R4, [R2, #180]              @ 0xb4 
    /*00034f20*/ LDR         LR, [R2, #176]              @ 0xb0 
    /*00034f24*/ BFI         R1, IP, #24, #8 
    /*00034f28*/ BFI         R1, R4, #16, #8 
    /*00034f2c*/ LDR         IP, [R2, #172]              @ 0xac 
    /*00034f30*/ BFI         R1, LR, #8, #8 
    /*00034f34*/ BFI         R1, IP, #0, #8 
    /*00034f38*/ STR         R1, [R0, #2164]             @ 0x874 
    /*00034f3c*/ LDR         R4, [R2, #196]              @ 0xc4 
    /*00034f40*/ LDR         R1, [R0, #2168]             @ 0x878 
    /*00034f44*/ LDR         LR, [R2, #192]              @ 0xc0 
    /*00034f48*/ LDR         IP, [R2, #188]              @ 0xbc 
    /*00034f4c*/ BFI         R1, R4, #8, #4 
    /*00034f50*/ BFI         R1, LR, #4, #4 
    /*00034f54*/ BFI         R1, IP, #0, #4 
    /*00034f58*/ STR         R1, [R0, #2168]             @ 0x878 
    /*00034f5c*/ LDR         IP, [R2, #200]              @ 0xc8 
    /*00034f60*/ LDR         R1, [R0, #2172]             @ 0x87c 
    /*00034f64*/ LSR         R4, IP, #8 
    /*00034f68*/ BFI         R1, IP, #24, #8 
    /*00034f6c*/ LSR         LR, IP, #16 
    /*00034f70*/ BFI         R1, R4, #16, #8 
    /*00034f74*/ LSR         IP, IP, #24 
    /*00034f78*/ BFI         R1, LR, #8, #8 
    /*00034f7c*/ BFI         R1, IP, #0, #8 
    /*00034f80*/ STR         R1, [R0, #2172]             @ 0x87c 
    /*00034f84*/ LDR         R1, [R0, #2176]             @ 0x880 
    /*00034f88*/ LDR         IP, [R2, #204]              @ 0xcc 
    /*00034f8c*/ MOV         R2, R1 
    /*00034f90*/ BFI         R2, IP, #24, #8 
    /*00034f94*/ LSR         LR, IP, #8 
    /*00034f98*/ LSR         R1, IP, #16 
    /*00034f9c*/ BFI         R2, LR, #16, #8 
    /*00034fa0*/ LSR         IP, IP, #24 
    /*00034fa4*/ BFI         R2, R1, #8, #8 
    /*00034fa8*/ BFI         R2, IP, #0, #8 
    /*00034fac*/ STR         R2, [R0, #2176]             @ 0x880 
    /*00034fb0*/ LDR         R2, [R0, #2192]             @ 0x890 
    /*00034fb4*/ LDR         LR, [R3, #16] 
    /*00034fb8*/ LDR         IP, [R3, #36]               @ 0x24 
    /*00034fbc*/ LDR         R1, [R3, #20] 
    /*00034fc0*/ BFI         R2, LR, #19, #3 
    /*00034fc4*/ BFI         R2, IP, #18, #1 
    /*00034fc8*/ LDR         LR, [R3, #4] 
    /*00034fcc*/ LDR         IP, [R3, #212]              @ 0xd4 
    /*00034fd0*/ BFI         R2, R1, #17, #1 
    /*00034fd4*/ BFI         R2, LR, #16, #1 
    /*00034fd8*/ LDR         R1, [R3, #208]              @ 0xd0 
    /*00034fdc*/ LDR         LR, [R3, #32] 
    /*00034fe0*/ BFI         R2, IP, #15, #1 
    /*00034fe4*/ BFI         R2, R1, #12, #3 
    /*00034fe8*/ LDR         IP, [R3, #28] 
    /*00034fec*/ LDR         R1, [R3, #24] 
    /*00034ff0*/ BFI         R2, LR, #11, #1 
    /*00034ff4*/ BFI         R2, IP, #6, #5 
    /*00034ff8*/ LDR         LR, [R3] 
    /*00034ffc*/ LDR         IP, [R3, #8] 
    /*00035000*/ BFI         R2, R1, #5, #1 
    /*00035004*/ BFI         R2, LR, #4, #1 
    /*00035008*/ LDR         R1, [R3, #12] 
    /*0003500c*/ BFI         R2, IP, #3, #1 
    /*00035010*/ BFI         R2, R1, #1, #2 
    /*00035014*/ ORR         R2, R2, #1 
    /*00035018*/ STR         R2, [R0, #2192]             @ 0x890 
    /*0003501c*/ LDR         IP, [R3, #40]               @ 0x28 
    /*00035020*/ LDR         R2, [R0, #2196]             @ 0x894 
    /*00035024*/ LDR         R1, [R3, #44]               @ 0x2c 
    /*00035028*/ SUB         IP, IP, #1 
    /*0003502c*/ BFI         R2, IP, #0, #14 
    /*00035030*/ SUB         R1, R1, #1 
    /*00035034*/ BFI         R2, R1, #16, #14 
    /*00035038*/ ADD         R1, R3, #152                @ 0x98 
    /*0003503c*/ STR         R2, [R0, #2196]             @ 0x894 
    /*00035040*/ LDM         R1, {R1, IP, LR} 
    /*00035044*/ LDR         R2, [R0, #2200]             @ 0x898 
    /*00035048*/ BFI         R2, LR, #20, #10 
    /*0003504c*/ BFI         R2, IP, #10, #10 
    /*00035050*/ BFI         R2, R1, #0, #10 
    /*00035054*/ STR         R2, [R0, #2200]             @ 0x898 
    /*00035058*/ LDR         R1, [R3, #144]              @ 0x90 
    /*0003505c*/ LDR         R2, [R0, #2204]             @ 0x89c 
    /*00035060*/ LDR         LR, [R3, #140]              @ 0x8c 
    /*00035064*/ LDR         IP, [R3, #136]              @ 0x88 
    /*00035068*/ BFI         R2, R1, #24, #4 
    /*0003506c*/ BFI         R2, LR, #16, #8 
    /*00035070*/ LDR         R1, [R3, #132]              @ 0x84 
    /*00035074*/ BFI         R2, IP, #8, #6 
    /*00035078*/ BFI         R2, R1, #0, #8 
    /*0003507c*/ STR         R2, [R0, #2204]             @ 0x89c 
    /*00035080*/ LDR         R2, [R0, #2208]             @ 0x8a0 
    /*00035084*/ LDR         R1, [R3, #64]               @ 0x40 
    /*00035088*/ LDR         LR, [R3, #60]               @ 0x3c 
    /*0003508c*/ LDR         IP, [R3, #56]               @ 0x38 
    /*00035090*/ BFI         R2, R1, #24, #8 
    /*00035094*/ BFI         R2, LR, #16, #8 
    /*00035098*/ LDR         R1, [R3, #52]               @ 0x34 
    /*0003509c*/ BFI         R2, IP, #8, #8 
    /*000350a0*/ BFI         R2, R1, #0, #8 
    /*000350a4*/ ADD         R1, R3, #68                 @ 0x44 
    /*000350a8*/ STR         R2, [R0, #2208]             @ 0x8a0 
    /*000350ac*/ LDM         R1, {R1, IP, LR} 
    /*000350b0*/ LDR         R2, [R0, #2212]             @ 0x8a4 
    /*000350b4*/ BFI         R2, LR, #16, #6 
    /*000350b8*/ BFI         R2, IP, #8, #6 
    /*000350bc*/ BFI         R2, R1, #0, #6 
    /*000350c0*/ STR         R2, [R0, #2212]             @ 0x8a4 
    /*000350c4*/ LDR         R2, [R0, #2216]             @ 0x8a8 
    /*000350c8*/ LDR         IP, [R3, #84]               @ 0x54 
    /*000350cc*/ LDR         R1, [R3, #80]               @ 0x50 
    /*000350d0*/ BFI         R2, IP, #8, #8 
    /*000350d4*/ BFI         R2, R1, #0, #8 
    /*000350d8*/ STR         R2, [R0, #2216]             @ 0x8a8 
    /*000350dc*/ LDR         R2, [R3, #88]               @ 0x58 
    /*000350e0*/ LDR         R1, [R0, #2220]             @ 0x8ac 
    /*000350e4*/ STR         R2, [R0, #2220]             @ 0x8ac 
    /*000350e8*/ LDR         R2, [R3, #92]               @ 0x5c 
    /*000350ec*/ LDR         R1, [R0, #2224]             @ 0x8b0 
    /*000350f0*/ STR         R2, [R0, #2224]             @ 0x8b0 
    /*000350f4*/ LDR         R2, [R3, #96]               @ 0x60 
    /*000350f8*/ LDR         R1, [R0, #2228]             @ 0x8b4 
    /*000350fc*/ STR         R2, [R0, #2228]             @ 0x8b4 
    /*00035100*/ LDR         R2, [R3, #100]              @ 0x64 
    /*00035104*/ LDR         R1, [R0, #2232]             @ 0x8b8 
    /*00035108*/ STR         R2, [R0, #2232]             @ 0x8b8 
    /*0003510c*/ LDR         R2, [R3, #104]              @ 0x68 
    /*00035110*/ LDR         R1, [R0, #2236]             @ 0x8bc 
    /*00035114*/ STR         R2, [R0, #2236]             @ 0x8bc 
    /*00035118*/ LDR         R2, [R3, #108]              @ 0x6c 
    /*0003511c*/ LDR         R1, [R0, #2240]             @ 0x8c0 
    /*00035120*/ STR         R2, [R0, #2240]             @ 0x8c0 
    /*00035124*/ LDR         R2, [R0, #2244]             @ 0x8c4 
    /*00035128*/ LDR         R2, [R3, #112]              @ 0x70 
    /*0003512c*/ STR         R2, [R0, #2244]             @ 0x8c4 
    /*00035130*/ LDR         R2, [R3, #116]              @ 0x74 
    /*00035134*/ LDR         R1, [R0, #2248]             @ 0x8c8 
    /*00035138*/ STR         R2, [R0, #2248]             @ 0x8c8 
    /*0003513c*/ LDR         R2, [R3, #120]              @ 0x78 
    /*00035140*/ LDR         R1, [R0, #2252]             @ 0x8cc 
    /*00035144*/ STR         R2, [R0, #2252]             @ 0x8cc 
    /*00035148*/ LDR         R2, [R3, #124]              @ 0x7c 
    /*0003514c*/ LDR         R1, [R0, #2256]             @ 0x8d0 
    /*00035150*/ STR         R2, [R0, #2256]             @ 0x8d0 
    /*00035154*/ LDR         R2, [R0, #2260]             @ 0x8d4 
    /*00035158*/ LDR         LR, [R3, #168]              @ 0xa8 
    /*0003515c*/ LDR         IP, [R3, #164]              @ 0xa4 
    /*00035160*/ LDR         R1, [R3, #128]              @ 0x80 
    /*00035164*/ BFI         R2, LR, #19, #3 
    /*00035168*/ BFI         R2, IP, #16, #3 
    /*0003516c*/ BFI         R2, R1, #0, #16 
    /*00035170*/ STR         R2, [R0, #2260]             @ 0x8d4 
    /*00035174*/ LDR         R2, [R0, #2264]             @ 0x8d8 
    /*00035178*/ LDR         R1, [R3, #148]              @ 0x94 
    /*0003517c*/ BFI         R2, R1, #0, #16 
    /*00035180*/ STR         R2, [R0, #2264]             @ 0x8d8 
    /*00035184*/ LDR         R2, [R0, #2268]             @ 0x8dc 
    /*00035188*/ LDR         R1, [R3, #184]              @ 0xb8 
    /*0003518c*/ LDR         LR, [R3, #180]              @ 0xb4 
    /*00035190*/ LDR         IP, [R3, #176]              @ 0xb0 
    /*00035194*/ BFI         R2, R1, #24, #8 
    /*00035198*/ BFI         R2, LR, #16, #8 
    /*0003519c*/ LDR         R1, [R3, #172]              @ 0xac 
    /*000351a0*/ BFI         R2, IP, #8, #8 
    /*000351a4*/ BFI         R2, R1, #0, #8 
    /*000351a8*/ ADD         R1, R3, #188                @ 0xbc 
    /*000351ac*/ STR         R2, [R0, #2268]             @ 0x8dc 
    /*000351b0*/ LDM         R1, {R1, IP, LR} 
    /*000351b4*/ LDR         R2, [R0, #2272]             @ 0x8e0 
    /*000351b8*/ BFI         R2, LR, #8, #4 
    /*000351bc*/ BFI         R2, IP, #4, #4 
    /*000351c0*/ BFI         R2, R1, #0, #4 
    /*000351c4*/ STR         R2, [R0, #2272]             @ 0x8e0 
    /*000351c8*/ LDR         R2, [R0, #2276]             @ 0x8e4 
    /*000351cc*/ LDR         R1, [R3, #200]              @ 0xc8 
    /*000351d0*/ BFI         R2, R1, #24, #8 
    /*000351d4*/ LSR         LR, R1, #8 
    /*000351d8*/ LSR         IP, R1, #16 
    /*000351dc*/ BFI         R2, LR, #16, #8 
    /*000351e0*/ LSR         R1, R1, #24 
    /*000351e4*/ BFI         R2, IP, #8, #8 
    /*000351e8*/ BFI         R2, R1, #0, #8 
    /*000351ec*/ STR         R2, [R0, #2276]             @ 0x8e4 
    /*000351f0*/ LDR         R2, [R3, #204]              @ 0xcc 
    /*000351f4*/ LDR         R3, [R0, #2280]             @ 0x8e8 
    /*000351f8*/ LSR         IP, R2, #8 
    /*000351fc*/ BFI         R3, R2, #24, #8 
    /*00035200*/ LSR         R1, R2, #16 
    /*00035204*/ BFI         R3, IP, #16, #8 
    /*00035208*/ LSR         R2, R2, #24 
    /*0003520c*/ BFI         R3, R1, #8, #8 
    /*00035210*/ BFI         R3, R2, #0, #8 
    /*00035214*/ STR         R3, [R0, #2280]             @ 0x8e8 
    /*00035218*/ POP         {R4, PC} 
FUNC_END VI_HAL_SetChnCmpAttr


FUNC_BEGIN VI_HAL_SetNext
    /*0003521c*/ STR         R2, [R0, #760]              @ 0x2f8 
    /*00035220*/ BX          LR 
FUNC_END VI_HAL_SetNext


FUNC_BEGIN VI_HAL_SetNodeID
    /*00035224*/ STR         R1, [R0, #252]              @ 0xfc 
    /*00035228*/ BX          LR 
FUNC_END VI_HAL_SetNodeID


FUNC_BEGIN VI_HAL_SetMask
    /*0003522c*/ STR         R1, [R0, #240]              @ 0xf0 
    /*00035230*/ BX          LR 
FUNC_END VI_HAL_SetMask


FUNC_BEGIN VI_HAL_SetTunlMask
    /*00035234*/ LDR         R3, [R0, #240]              @ 0xf0 
    /*00035238*/ ORR         R3, R3, #2048               @ 0x800 
    /*0003523c*/ STR         R3, [R0, #240]              @ 0xf0 
    /*00035240*/ BX          LR 
FUNC_END VI_HAL_SetTunlMask


FUNC_BEGIN VI_HAL_ClearTunlMask
    /*00035244*/ LDR         R3, [R0, #240]              @ 0xf0 
    /*00035248*/ BIC         R3, R3, #2048               @ 0x800 
    /*0003524c*/ STR         R3, [R0, #240]              @ 0xf0 
    /*00035250*/ BX          LR 
FUNC_END VI_HAL_ClearTunlMask


FUNC_BEGIN VI_HAL_SetTunlLine
    /*00035254*/ STR         R2, [R0, #1784]             @ 0x6f8 
    /*00035258*/ BX          LR 
FUNC_END VI_HAL_SetTunlLine


FUNC_BEGIN VI_HAL_SetWchDlyLine
    /*0003525c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035260*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035264*/ LDR         R3, [R3, #8] 
    /*00035268*/ ADD         R0, R3, R0, LSL #12 
    /*0003526c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*00035270*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00035274*/ BFI         R3, R1, #16, #16 
    /*00035278*/ STR         R3, [R0, #52]               @ 0x34 
    /*0003527c*/ BX          LR 
FUNC_END VI_HAL_SetWchDlyLine


FUNC_BEGIN VI_HAL_Start
    /*00035280*/ MOVW        R1, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035284*/ MOVT        R1, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035288*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0003528c*/ SUB         SP, SP, #8 
    /*00035290*/ LDR         R4, [R1, R0, LSL #2] 
    /*00035294*/ MOV         R6, R0 
    /*00035298*/ MOV         R5, R2 
    /*0003529c*/ MOV         R8, R3 
    /*000352a0*/ CMP         R4, #0 
    /*000352a4*/ LDR         R7, [SP, #32] 
    /*000352a8*/ BEQ         VI_HAL_Start_x35308
    VI_HAL_Start_x352ac:
    /*000352ac*/ MOV         R3, #6 
    /*000352b0*/ STR         R3, [R4, #240]              @ 0xf0 
    /*000352b4*/ STR         R5, [R4, #760]              @ 0x2f8 
    /*000352b8*/ LDR         R3, [R4, #760]              @ 0x2f8 
    /*000352bc*/ CMP         R5, R3 
    /*000352c0*/ BEQ         VI_HAL_Start_x352e0
    /*000352c4*/ LDR         R2, [R4, #760]              @ 0x2f8 
    /*000352c8*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1177c] 
    /*000352cc*/ MOV         R1, R6 
    /*000352d0*/ STR         R5, [SP] 
    /*000352d4*/ STR         R8, [SP, #4] 
    /*000352d8*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1177c] 
    /*000352dc*/ BL          0x00000000000352DC          @ osal_printk [R_ARM_CALL: +0x0] 
    VI_HAL_Start_x352e0:
    /*000352e0*/ BL          0x00000000000352E0          @ osal_isb [R_ARM_CALL: +0x0] 
    /*000352e4*/ BL          0x00000000000352E4          @ osal_dsb [R_ARM_CALL: +0x0] 
    /*000352e8*/ BL          0x00000000000352E8          @ osal_dmb [R_ARM_CALL: +0x0] 
    /*000352ec*/ CMP         R7, #0 
    /*000352f0*/ MOV         R0, #0 
    /*000352f4*/ MOVNE       R3, #3 
    /*000352f8*/ MOVEQ       R3, #1 
    /*000352fc*/ STR         R3, [R4, #768]              @ 0x300 
    /*00035300*/ ADD         SP, SP, #8 
    /*00035304*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_HAL_Start_x35308:
    /*00035308*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11768] 
    /*0003530c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11728] 
    /*00035310*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11768] 
    /*00035314*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11728] 
    /*00035318*/ MOVW        R2, #1068                   @ 0x42c 
    /*0003531c*/ LDR         R1, [PC, #4]                @ 0x0000000000035328 
    /*00035320*/ BL          0x0000000000035320          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00035324*/ B           VI_HAL_Start_x352ac
    /*00035328*/ ANDEQ       R2, R0, R8, ASR #3 
FUNC_END VI_HAL_Start


FUNC_BEGIN VI_HAL_GetNodeID
    /*0003532c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035330*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035334*/ LDR         R3, [R3, R0, LSL #2] 
    /*00035338*/ LDR         R3, [R3, #252]              @ 0xfc 
    /*0003533c*/ STR         R3, [R1] 
    /*00035340*/ BX          LR 
FUNC_END VI_HAL_GetNodeID


FUNC_BEGIN VI_HAL_GetProcIrqStatus
    /*00035344*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035348*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*0003534c*/ LDR         R3, [R3, R0, LSL #2] 
    /*00035350*/ LDR         R0, [R3, #784]              @ 0x310 
    /*00035354*/ BX          LR 
FUNC_END VI_HAL_GetProcIrqStatus


FUNC_BEGIN VI_HAL_GetProcRdErrStatus
    /*00035358*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*0003535c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035360*/ LDR         R3, [R3, R0, LSL #2] 
    /*00035364*/ LDR         R0, [R3, #848]              @ 0x350 
    /*00035368*/ BX          LR 
FUNC_END VI_HAL_GetProcRdErrStatus


FUNC_BEGIN VI_HAL_ClearProcRdErrStatus
    /*0003536c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035370*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035374*/ MVN         R2, #0 
    /*00035378*/ LDR         R3, [R3, R0, LSL #2] 
    /*0003537c*/ STR         R2, [R3, #848]              @ 0x350 
    /*00035380*/ BX          LR 
FUNC_END VI_HAL_ClearProcRdErrStatus


FUNC_BEGIN VI_HAL_GetProcWrErrStatus
    /*00035384*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035388*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*0003538c*/ LDR         R3, [R3, R0, LSL #2] 
    /*00035390*/ LDR         R0, [R3, #852]              @ 0x354 
    /*00035394*/ BX          LR 
FUNC_END VI_HAL_GetProcWrErrStatus


FUNC_BEGIN VI_HAL_ClearProcWrErrStatus
    /*00035398*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*0003539c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000353a0*/ MVN         R2, #0 
    /*000353a4*/ LDR         R3, [R3, R0, LSL #2] 
    /*000353a8*/ STR         R2, [R3, #852]              @ 0x354 
    /*000353ac*/ BX          LR 
FUNC_END VI_HAL_ClearProcWrErrStatus


FUNC_BEGIN VI_HAL_IsProcIrqValid
    /*000353b0*/ ADDS        R0, R0, #0 
    /*000353b4*/ MOVNE       R0, #1 
    /*000353b8*/ BX          LR 
FUNC_END VI_HAL_IsProcIrqValid


FUNC_BEGIN VI_HAL_ClearAnyProcInt
    /*000353bc*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000353c0*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000353c4*/ MVN         R2, #0 
    /*000353c8*/ LDR         R3, [R3, R0, LSL #2] 
    /*000353cc*/ STR         R2, [R3, #784]              @ 0x310 
    /*000353d0*/ STR         R2, [R3, #792]              @ 0x318 
    /*000353d4*/ BX          LR 
FUNC_END VI_HAL_ClearAnyProcInt


FUNC_BEGIN VI_HAL_ProcRegNew
    /*000353d8*/ LDR         R3, [R0, #16] 
    /*000353dc*/ ORR         R3, R3, #1 
    /*000353e0*/ STR         R3, [R0, #16] 
    /*000353e4*/ BX          LR 
FUNC_END VI_HAL_ProcRegNew


FUNC_BEGIN VI_HAL_ProcRegNewManual
    /*000353e8*/ LDR         R3, [R0, #16] 
    /*000353ec*/ ORR         R3, R3, #256                @ 0x100 
    /*000353f0*/ STR         R3, [R0, #16] 
    /*000353f4*/ BX          LR 
FUNC_END VI_HAL_ProcRegNewManual


FUNC_BEGIN VI_HAL_SetProcVideoEnable
    /*000353f8*/ LDR         R3, [R0] 
    /*000353fc*/ BFI         R3, R1, #31, #1 
    /*00035400*/ STR         R3, [R0] 
    /*00035404*/ BX          LR 
FUNC_END VI_HAL_SetProcVideoEnable


FUNC_BEGIN VI_HAL_SetBeEnable
    /*00035408*/ LDR         R3, [R0] 
    /*0003540c*/ BFI         R3, R1, #13, #1 
    /*00035410*/ STR         R3, [R0] 
    /*00035414*/ BX          LR 
FUNC_END VI_HAL_SetBeEnable


FUNC_BEGIN VI_HAL_SetSFifoEnable
    /*00035418*/ LDR         R3, [R0] 
    /*0003541c*/ BFI         R3, R1, #18, #1 
    /*00035420*/ STR         R3, [R0] 
    /*00035424*/ BX          LR 
FUNC_END VI_HAL_SetSFifoEnable


FUNC_BEGIN VI_HAL_ProcSplitMode
    /*00035428*/ LDR         R3, [R0, #776]              @ 0x308 
    /*0003542c*/ ORR         R3, R3, #2 
    /*00035430*/ STR         R3, [R0, #776]              @ 0x308 
    /*00035434*/ BX          LR 
FUNC_END VI_HAL_ProcSplitMode


FUNC_BEGIN VI_HAL_SetImgProMode
    /*00035438*/ LDR         R3, [R0] 
    /*0003543c*/ BFI         R3, R1, #16, #2 
    /*00035440*/ STR         R3, [R0] 
    /*00035444*/ BX          LR 
FUNC_END VI_HAL_SetImgProMode


FUNC_BEGIN VI_HAL_SetDSFLoadAddr
    /*00035448*/ STR         R2, [R0, #544]              @ 0x220 
    /*0003544c*/ BX          LR 
FUNC_END VI_HAL_SetDSFLoadAddr


FUNC_BEGIN VI_HAL_SetBE0CFGLoadAddr
    /*00035450*/ STR         R2, [R0, #576]              @ 0x240 
    /*00035454*/ BX          LR 
FUNC_END VI_HAL_SetBE0CFGLoadAddr


FUNC_BEGIN VI_HAL_SetBE1CFGLoadAddr
    /*00035458*/ STR         R2, [R0, #584]              @ 0x248 
    /*0003545c*/ BX          LR 
FUNC_END VI_HAL_SetBE1CFGLoadAddr


FUNC_BEGIN VI_HAL_SetBEPARA0LoadAddr
    /*00035460*/ STR         R2, [R0, #592]              @ 0x250 
    /*00035464*/ BX          LR 
FUNC_END VI_HAL_SetBEPARA0LoadAddr


FUNC_BEGIN VI_HAL_SetBEPARA1LoadAddr
    /*00035468*/ STR         R2, [R0, #600]              @ 0x258 
    /*0003546c*/ BX          LR 
FUNC_END VI_HAL_SetBEPARA1LoadAddr


FUNC_BEGIN VI_HAL_SetBEPARA2LoadAddr
    /*00035470*/ STR         R2, [R0, #608]              @ 0x260 
    /*00035474*/ BX          LR 
FUNC_END VI_HAL_SetBEPARA2LoadAddr


FUNC_BEGIN VI_HAL_SetBEPARA3LoadAddr
    /*00035478*/ STR         R2, [R0, #616]              @ 0x268 
    /*0003547c*/ BX          LR 
FUNC_END VI_HAL_SetBEPARA3LoadAddr


FUNC_BEGIN VI_HAL_SetIspSttAddr
    /*00035480*/ STR         R2, [R0, #1488]             @ 0x5d0 
    /*00035484*/ BX          LR 
FUNC_END VI_HAL_SetIspSttAddr


FUNC_BEGIN VI_HAL_SetDRCParaAddr
    /*00035488*/ STR         R2, [R0, #1544]             @ 0x608 
    /*0003548c*/ BX          LR 
FUNC_END VI_HAL_SetDRCParaAddr


FUNC_BEGIN VI_HAL_SetDRCOutParaAddr
    /*00035490*/ STR         R2, [R0, #1560]             @ 0x618 
    /*00035494*/ BX          LR 
FUNC_END VI_HAL_SetDRCOutParaAddr


FUNC_BEGIN VI_HAL_SetLDCIParaAddr
    /*00035498*/ STR         R2, [R0, #1552]             @ 0x610 
    /*0003549c*/ BX          LR 
FUNC_END VI_HAL_SetLDCIParaAddr


FUNC_BEGIN VI_HAL_SetLDCIOutParaAddr
    /*000354a0*/ STR         R2, [R0, #1568]             @ 0x620 
    /*000354a4*/ BX          LR 
FUNC_END VI_HAL_SetLDCIOutParaAddr


FUNC_BEGIN VI_HAL_OfflineGetHWCycleCnt
    /*000354a8*/ MOV         R0, #0 
    /*000354ac*/ BX          LR 
FUNC_END VI_HAL_OfflineGetHWCycleCnt


FUNC_BEGIN VI_HAL_SetBeLut2SttAddr
    /*000354b0*/ PUSH        {R4, R5, R6, R7} 
    /*000354b4*/ ADDS        R6, R2, #30976              @ 0x7900 
    /*000354b8*/ ADDS        R4, R2, #27392              @ 0x6b00 
    /*000354bc*/ STR         R6, [R0, #1788]             @ 0x6fc 
    /*000354c0*/ STR         R4, [R0, #1800]             @ 0x708 
    /*000354c4*/ ADDS        R6, R2, #39168              @ 0x9900 
    /*000354c8*/ ADDS        R4, R2, #28672              @ 0x7000 
    /*000354cc*/ STR         R6, [R0, #1812]             @ 0x714 
    /*000354d0*/ STR         R2, [R0, #1836]             @ 0x72c 
    /*000354d4*/ ADDS        R6, R2, #22272              @ 0x5700 
    /*000354d8*/ STR         R4, [R0, #1848]             @ 0x738 
    /*000354dc*/ ADDS        R4, R2, #57344              @ 0xe000 
    /*000354e0*/ STR         R6, [R0, #1860]             @ 0x744 
    /*000354e4*/ ADDS        R6, R2, #56832              @ 0xde00 
    /*000354e8*/ STR         R4, [R0, #1872]             @ 0x750 
    /*000354ec*/ ADDS        R4, R2, #29952              @ 0x7500 
    /*000354f0*/ STR         R6, [R0, #1884]             @ 0x75c 
    /*000354f4*/ ADDS        R2, R2, #58624              @ 0xe500 
    /*000354f8*/ STR         R4, [R0, #1896]             @ 0x768 
    /*000354fc*/ STR         R2, [R0, #1908]             @ 0x774 
    /*00035500*/ POP         {R4, R5, R6, R7} 
    /*00035504*/ BX          LR 
FUNC_END VI_HAL_SetBeLut2SttAddr


FUNC_BEGIN VI_HAL_GetCapIdByDev
    /*00035508*/ MOV         R0, #0 
    /*0003550c*/ BX          LR 
FUNC_END VI_HAL_GetCapIdByDev


FUNC_BEGIN VI_HAL_GetCapIdByPipe
    /*00035510*/ MOV         R0, #0 
    /*00035514*/ BX          LR 
FUNC_END VI_HAL_GetCapIdByPipe


FUNC_BEGIN VI_HAL_SetFeWchPicConfig
    /*00035518*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*0003551c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035520*/ PUSH        {R4, LR} 
    /*00035524*/ LDR         R3, [R3, #8] 
    /*00035528*/ LDR         R4, [R1, #56]               @ 0x38 
    /*0003552c*/ ADD         R0, R3, R0, LSL #12 
    /*00035530*/ LDR         LR, [R1, #68]               @ 0x44 
    /*00035534*/ ADD         R0, R0, #65536              @ 0x10000 
    /*00035538*/ LDR         IP, [R1, #72]               @ 0x48 
    /*0003553c*/ LDR         R2, [R1, #64]               @ 0x40 
    /*00035540*/ LDR         R3, [R0, #128]              @ 0x80 
    /*00035544*/ BFI         R3, R4, #31, #1 
    /*00035548*/ BFI         R3, LR, #12, #1 
    /*0003554c*/ BFI         R3, IP, #13, #1 
    /*00035550*/ BFI         R3, R2, #0, #6 
    /*00035554*/ STR         R3, [R0, #128]              @ 0x80 
    /*00035558*/ LDR         IP, [R1, #40]               @ 0x28 
    /*0003555c*/ LDR         R3, [R0, #132]              @ 0x84 
    /*00035560*/ LDR         R2, [R1, #44]               @ 0x2c 
    /*00035564*/ SUB         IP, IP, #1 
    /*00035568*/ BFI         R3, IP, #0, #16 
    /*0003556c*/ SUB         R2, R2, #1 
    /*00035570*/ BFI         R3, R2, #16, #16 
    /*00035574*/ STR         R3, [R0, #132]              @ 0x84 
    /*00035578*/ LDR         R3, [R0, #160]              @ 0xa0 
    /*0003557c*/ LDR         R2, [R1, #32] 
    /*00035580*/ BFI         R3, R2, #0, #16 
    /*00035584*/ STR         R3, [R0, #160]              @ 0xa0 
    /*00035588*/ LDR         R3, [R0, #176]              @ 0xb0 
    /*0003558c*/ LDR         IP, [R1, #60]               @ 0x3c 
    /*00035590*/ LDR         R2, [R1, #64]               @ 0x40 
    /*00035594*/ BFI         R3, IP, #31, #1 
    /*00035598*/ BFI         R3, R2, #0, #6 
    /*0003559c*/ STR         R3, [R0, #176]              @ 0xb0 
    /*000355a0*/ LDR         IP, [R1, #48]               @ 0x30 
    /*000355a4*/ LDR         R3, [R0, #180]              @ 0xb4 
    /*000355a8*/ LDR         R2, [R1, #52]               @ 0x34 
    /*000355ac*/ SUB         IP, IP, #1 
    /*000355b0*/ BFI         R3, IP, #0, #16 
    /*000355b4*/ SUB         R2, R2, #1 
    /*000355b8*/ BFI         R3, R2, #16, #16 
    /*000355bc*/ STR         R3, [R0, #180]              @ 0xb4 
    /*000355c0*/ LDR         R3, [R0, #208]              @ 0xd0 
    /*000355c4*/ LDR         R2, [R1, #36]               @ 0x24 
    /*000355c8*/ BFI         R3, R2, #0, #16 
    /*000355cc*/ STR         R3, [R0, #208]              @ 0xd0 
    /*000355d0*/ LDR         R3, [R0, #112]              @ 0x70 
    /*000355d4*/ LDR         R2, [R1, #60]               @ 0x3c 
    /*000355d8*/ BFI         R3, R2, #31, #1 
    /*000355dc*/ STR         R3, [R0, #112]              @ 0x70 
    /*000355e0*/ LDR         R3, [R1, #16] 
    /*000355e4*/ STR         R3, [R0, #148]              @ 0x94 
    /*000355e8*/ LDR         R3, [R1, #24] 
    /*000355ec*/ STR         R3, [R0, #196]              @ 0xc4 
    /*000355f0*/ POP         {R4, PC} 
FUNC_END VI_HAL_SetFeWchPicConfig


FUNC_BEGIN VI_HAL_SetChnSkipCfg
    /*000355f4*/ PUSH        {R4, R5, LR} 
    /*000355f8*/ MOVW        LR, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000355fc*/ MOVT        LR, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035600*/ LSL         R0, R0, #12 
    /*00035604*/ CMP         R1, #26 
    /*00035608*/ MVN         R5, #0 
    /*0003560c*/ LDR         IP, [LR, #8] 
    /*00035610*/ LDR         R4, [SP, #12] 
    /*00035614*/ ADD         LR, IP, R0 
    /*00035618*/ ADD         LR, LR, #65536              @ 0x10000 
    /*0003561c*/ STR         R5, [LR, #80]               @ 0x50 
    /*00035620*/ BEQ         VI_HAL_SetChnSkipCfg_x35684
    /*00035624*/ CMP         R1, #25 
    /*00035628*/ BEQ         VI_HAL_SetChnSkipCfg_x3568c
    /*0003562c*/ CMP         R1, #39                     @ 0x27 
    /*00035630*/ MOVEQ       R2, #0 
    /*00035634*/ STREQ       R2, [LR, #88]               @ 0x58 
    VI_HAL_SetChnSkipCfg_x35638:
    /*00035638*/ LDR         R1, [R3] 
    /*0003563c*/ ADD         IP, IP, R0 
    /*00035640*/ LDR         R2, [R3, #4] 
    /*00035644*/ ADD         IP, IP, #65536              @ 0x10000 
    /*00035648*/ SUB         R1, R1, #1 
    /*0003564c*/ MOV         R3, #0 
    /*00035650*/ SUB         R2, R2, #1 
    /*00035654*/ BFI         R3, R1, #0, #3 
    /*00035658*/ BFI         R3, R2, #16, #2 
    /*0003565c*/ STR         R3, [IP, #84]               @ 0x54 
    /*00035660*/ LDR         R1, [R4] 
    /*00035664*/ MOV         R3, #0 
    /*00035668*/ LDR         R2, [R4, #4] 
    /*0003566c*/ SUB         R1, R1, #1 
    /*00035670*/ SUB         R2, R2, #1 
    /*00035674*/ BFI         R3, R1, #0, #3 
    /*00035678*/ BFI         R3, R2, #16, #2 
    /*0003567c*/ STR         R3, [IP, #92]               @ 0x5c 
    /*00035680*/ POP         {R4, R5, PC} 
    VI_HAL_SetChnSkipCfg_x35684:
    /*00035684*/ CMP         R2, #0 
    /*00035688*/ BNE         VI_HAL_SetChnSkipCfg_x3569c
    VI_HAL_SetChnSkipCfg_x3568c:
    /*0003568c*/ MOVW        R2, #43690                  @ 0xaaaa 
    /*00035690*/ MOVT        R2, #43690                  @ 0xaaaa 
    /*00035694*/ STR         R2, [LR, #88]               @ 0x58 
    /*00035698*/ B           VI_HAL_SetChnSkipCfg_x35638
    VI_HAL_SetChnSkipCfg_x3569c:
    /*0003569c*/ MOV         R2, #43520                  @ 0xaa00 
    /*000356a0*/ MOVT        R2, #43520                  @ 0xaa00 
    /*000356a4*/ STR         R2, [LR, #88]               @ 0x58 
    /*000356a8*/ B           VI_HAL_SetChnSkipCfg_x35638
FUNC_END VI_HAL_SetChnSkipCfg


FUNC_BEGIN VI_HAL_SetWChCmpAttr
    /*000356ac*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000356b0*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000356b4*/ PUSH        {R4, R5, LR} 
    /*000356b8*/ LDR         R3, [R3, #8] 
    /*000356bc*/ LDR         R5, [R1, #8] 
    /*000356c0*/ ADD         R0, R3, R0, LSL #12 
    /*000356c4*/ LDR         IP, [R1] 
    /*000356c8*/ ADD         R0, R0, #65536              @ 0x10000 
    /*000356cc*/ LDR         R2, [R1, #148]              @ 0x94 
    /*000356d0*/ LDR         R4, [R1, #24] 
    /*000356d4*/ LDR         R3, [R0, #256]              @ 0x100 
    /*000356d8*/ LDR         LR, [R1, #20] 
    /*000356dc*/ BFI         R3, R5, #9, #1 
    /*000356e0*/ BFI         R3, IP, #8, #1 
    /*000356e4*/ LDR         IP, [R1, #16] 
    /*000356e8*/ BFI         R3, R2, #7, #1 
    /*000356ec*/ LDR         R2, [R1, #12] 
    /*000356f0*/ BFI         R3, R4, #5, #2 
    /*000356f4*/ BFI         R3, LR, #3, #2 
    /*000356f8*/ BFI         R3, IP, #2, #1 
    /*000356fc*/ BFI         R3, R2, #1, #1 
    /*00035700*/ ORR         R3, R3, #1 
    /*00035704*/ STR         R3, [R0, #256]              @ 0x100 
    /*00035708*/ LDR         IP, [R1, #28] 
    /*0003570c*/ LDR         R3, [R0, #260]              @ 0x104 
    /*00035710*/ LDR         R2, [R1, #32] 
    /*00035714*/ SUB         IP, IP, #1 
    /*00035718*/ BFI         R3, IP, #0, #14 
    /*0003571c*/ SUB         R2, R2, #1 
    /*00035720*/ BFI         R3, R2, #16, #14 
    /*00035724*/ ADD         R2, R1, #132                @ 0x84 
    /*00035728*/ STR         R3, [R0, #260]              @ 0x104 
    /*0003572c*/ LDM         R2, {R2, IP, LR} 
    /*00035730*/ LDR         R3, [R0, #264]              @ 0x108 
    /*00035734*/ BFI         R3, LR, #20, #10 
    /*00035738*/ BFI         R3, IP, #10, #10 
    /*0003573c*/ BFI         R3, R2, #0, #10 
    /*00035740*/ STR         R3, [R0, #264]              @ 0x108 
    /*00035744*/ LDR         R3, [R0, #268]              @ 0x10c 
    /*00035748*/ LDR         R2, [R1, #128]              @ 0x80 
    /*0003574c*/ LDR         LR, [R1, #124]              @ 0x7c 
    /*00035750*/ LDR         IP, [R1, #120]              @ 0x78 
    /*00035754*/ BFI         R3, R2, #24, #4 
    /*00035758*/ BFI         R3, LR, #16, #8 
    /*0003575c*/ LDR         R2, [R1, #116]              @ 0x74 
    /*00035760*/ BFI         R3, IP, #8, #6 
    /*00035764*/ BFI         R3, R2, #0, #8 
    /*00035768*/ ADD         R2, R1, #40                 @ 0x28 
    /*0003576c*/ STR         R3, [R0, #268]              @ 0x10c 
    /*00035770*/ LDM         R2, {R2, IP, LR} 
    /*00035774*/ LDR         R3, [R0, #272]              @ 0x110 
    /*00035778*/ BFI         R3, LR, #16, #10 
    /*0003577c*/ BFI         R3, IP, #8, #8 
    /*00035780*/ BFI         R3, R2, #0, #8 
    /*00035784*/ ADD         R2, R1, #52                 @ 0x34 
    /*00035788*/ STR         R3, [R0, #272]              @ 0x110 
    /*0003578c*/ LDR         R3, [R0, #276]              @ 0x114 
    /*00035790*/ LDM         R2, {R2, IP, LR} 
    /*00035794*/ BFI         R3, LR, #16, #6 
    /*00035798*/ BFI         R3, IP, #8, #6 
    /*0003579c*/ BFI         R3, R2, #0, #6 
    /*000357a0*/ STR         R3, [R0, #276]              @ 0x114 
    /*000357a4*/ LDR         R3, [R0, #280]              @ 0x118 
    /*000357a8*/ LDR         IP, [R1, #68]               @ 0x44 
    /*000357ac*/ LDR         R2, [R1, #64]               @ 0x40 
    /*000357b0*/ BFI         R3, IP, #8, #8 
    /*000357b4*/ BFI         R3, R2, #0, #8 
    /*000357b8*/ STR         R3, [R0, #280]              @ 0x118 
    /*000357bc*/ LDR         R3, [R1, #72]               @ 0x48 
    /*000357c0*/ LDR         R2, [R0, #284]              @ 0x11c 
    /*000357c4*/ STR         R3, [R0, #284]              @ 0x11c 
    /*000357c8*/ LDR         R3, [R1, #76]               @ 0x4c 
    /*000357cc*/ LDR         R2, [R0, #288]              @ 0x120 
    /*000357d0*/ STR         R3, [R0, #288]              @ 0x120 
    /*000357d4*/ LDR         R3, [R1, #80]               @ 0x50 
    /*000357d8*/ LDR         R2, [R0, #292]              @ 0x124 
    /*000357dc*/ STR         R3, [R0, #292]              @ 0x124 
    /*000357e0*/ LDR         R3, [R1, #84]               @ 0x54 
    /*000357e4*/ LDR         R2, [R0, #296]              @ 0x128 
    /*000357e8*/ STR         R3, [R0, #296]              @ 0x128 
    /*000357ec*/ LDR         R3, [R1, #88]               @ 0x58 
    /*000357f0*/ LDR         R2, [R0, #300]              @ 0x12c 
    /*000357f4*/ STR         R3, [R0, #300]              @ 0x12c 
    /*000357f8*/ LDR         R3, [R1, #92]               @ 0x5c 
    /*000357fc*/ LDR         R2, [R0, #304]              @ 0x130 
    /*00035800*/ STR         R3, [R0, #304]              @ 0x130 
    /*00035804*/ LDR         R3, [R1, #96]               @ 0x60 
    /*00035808*/ LDR         R2, [R0, #308]              @ 0x134 
    /*0003580c*/ STR         R3, [R0, #308]              @ 0x134 
    /*00035810*/ LDR         R3, [R1, #100]              @ 0x64 
    /*00035814*/ LDR         R2, [R0, #312]              @ 0x138 
    /*00035818*/ STR         R3, [R0, #312]              @ 0x138 
    /*0003581c*/ LDR         R3, [R0, #316]              @ 0x13c 
    /*00035820*/ LDR         R3, [R1, #104]              @ 0x68 
    /*00035824*/ STR         R3, [R0, #316]              @ 0x13c 
    /*00035828*/ LDR         R3, [R1, #108]              @ 0x6c 
    /*0003582c*/ LDR         R2, [R0, #320]              @ 0x140 
    /*00035830*/ STR         R3, [R0, #320]              @ 0x140 
    /*00035834*/ LDR         R3, [R0, #324]              @ 0x144 
    /*00035838*/ LDR         IP, [R1, #144]              @ 0x90 
    /*0003583c*/ LDR         R2, [R1, #112]              @ 0x70 
    /*00035840*/ BFI         R3, IP, #16, #4 
    /*00035844*/ BFI         R3, R2, #0, #16 
    /*00035848*/ STR         R3, [R0, #324]              @ 0x144 
    /*0003584c*/ POP         {R4, R5, PC} 
FUNC_END VI_HAL_SetWChCmpAttr


FUNC_BEGIN VI_HAL_SetWchEn
    /*00035850*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035854*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035858*/ LDR         R3, [R3, #8] 
    /*0003585c*/ ADD         R0, R3, R0, LSL #12 
    /*00035860*/ ADD         R0, R0, #65536              @ 0x10000 
    /*00035864*/ LDR         R3, [R0] 
    /*00035868*/ BFI         R3, R1, #31, #1 
    /*0003586c*/ STR         R3, [R0] 
    /*00035870*/ LDR         R3, [R0, #128]              @ 0x80 
    /*00035874*/ BFC         R3, #31, #1 
    /*00035878*/ STR         R3, [R0, #128]              @ 0x80 
    /*0003587c*/ LDR         R3, [R0, #176]              @ 0xb0 
    /*00035880*/ BFC         R3, #31, #1 
    /*00035884*/ STR         R3, [R0, #176]              @ 0xb0 
    /*00035888*/ BX          LR 
FUNC_END VI_HAL_SetWchEn


FUNC_BEGIN VI_HAL_SetWchRegNewerMode
    /*0003588c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035890*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035894*/ LDR         R3, [R3, #8] 
    /*00035898*/ ADD         R0, R3, R0, LSL #12 
    /*0003589c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*000358a0*/ LDR         R3, [R0] 
    /*000358a4*/ BFI         R3, R1, #30, #1 
    /*000358a8*/ STR         R3, [R0] 
    /*000358ac*/ BX          LR 
FUNC_END VI_HAL_SetWchRegNewerMode


FUNC_BEGIN VI_HAL_SetWchFinishMode
    /*000358b0*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000358b4*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000358b8*/ LDR         R3, [R3, #8] 
    /*000358bc*/ ADD         R0, R3, R0, LSL #12 
    /*000358c0*/ ADD         R0, R0, #65536              @ 0x10000 
    /*000358c4*/ LDR         R3, [R0] 
    /*000358c8*/ BFI         R3, R1, #17, #1 
    /*000358cc*/ STR         R3, [R0] 
    /*000358d0*/ BX          LR 
FUNC_END VI_HAL_SetWchFinishMode


FUNC_BEGIN VI_HAL_SetWchUV2C
    /*000358d4*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000358d8*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000358dc*/ LDR         R3, [R3, #8] 
    /*000358e0*/ ADD         R0, R3, R0, LSL #12 
    /*000358e4*/ ADD         R0, R0, #65536              @ 0x10000 
    /*000358e8*/ LDR         R3, [R0, #112]              @ 0x70 
    /*000358ec*/ BFI         R3, R2, #30, #1 
    /*000358f0*/ BFI         R3, R1, #31, #1 
    /*000358f4*/ STR         R3, [R0, #112]              @ 0x70 
    /*000358f8*/ BX          LR 
FUNC_END VI_HAL_SetWchUV2C


FUNC_BEGIN VI_HAL_SetSrcConfig
    /*000358fc*/ BX          LR 
FUNC_END VI_HAL_SetSrcConfig


FUNC_BEGIN VI_HAL_EnableSrc
    /*00035900*/ BX          LR 
FUNC_END VI_HAL_EnableSrc


FUNC_BEGIN VI_HAL_SetSrcFinishMode
    /*00035904*/ BX          LR 
FUNC_END VI_HAL_SetSrcFinishMode


FUNC_BEGIN VI_HAL_SetSrcRegNew
    /*00035908*/ BX          LR 
FUNC_END VI_HAL_SetSrcRegNew


FUNC_BEGIN VI_HAL_SetSrcUpdate
    /*0003590c*/ BX          LR 
FUNC_END VI_HAL_SetSrcUpdate


FUNC_BEGIN VI_HAL_SetSrcMask
    /*00035910*/ BX          LR 
FUNC_END VI_HAL_SetSrcMask


FUNC_BEGIN VI_HAL_SetPipeCrop
    /*00035914*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035918*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*0003591c*/ LDR         IP, [R1] 
    /*00035920*/ LDR         R3, [R3, #8] 
    /*00035924*/ LDR         R2, [R1, #4] 
    /*00035928*/ ADD         R0, R3, R0, LSL #4 
    /*0003592c*/ LDR         R3, [R0, #776]              @ 0x308 
    /*00035930*/ BFI         R3, IP, #0, #16 
    /*00035934*/ BFI         R3, R2, #16, #16 
    /*00035938*/ STR         R3, [R0, #776]              @ 0x308 
    /*0003593c*/ LDR         IP, [R1, #8] 
    /*00035940*/ LDR         R2, [R1, #12] 
    /*00035944*/ LDR         R3, [R0, #780]              @ 0x30c 
    /*00035948*/ SUB         R1, IP, #1 
    /*0003594c*/ SUB         R2, R2, #1 
    /*00035950*/ BFI         R3, R1, #0, #16 
    /*00035954*/ BFI         R3, R2, #16, #16 
    /*00035958*/ STR         R3, [R0, #780]              @ 0x30c 
    /*0003595c*/ BX          LR 
FUNC_END VI_HAL_SetPipeCrop


FUNC_BEGIN VI_HAL_SetWchMask
    /*00035960*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035964*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035968*/ LDR         R3, [R3, #8] 
    /*0003596c*/ ADD         R0, R3, R0, LSL #12 
    /*00035970*/ ADD         R0, R0, #65536              @ 0x10000 
    /*00035974*/ STR         R1, [R0, #248]              @ 0xf8 
    /*00035978*/ BX          LR 
FUNC_END VI_HAL_SetWchMask


FUNC_BEGIN VI_HAL_ClearWchInt
    /*0003597c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035980*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035984*/ LDR         R3, [R3, #8] 
    /*00035988*/ ADD         R0, R3, R0, LSL #12 
    /*0003598c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*00035990*/ STR         R1, [R0, #240]              @ 0xf0 
    /*00035994*/ BX          LR 
FUNC_END VI_HAL_ClearWchInt


FUNC_BEGIN VI_HAL_ClearWchIntByMask
    /*00035998*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*0003599c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000359a0*/ LDR         R3, [R3, #8] 
    /*000359a4*/ ADD         R0, R3, R0, LSL #12 
    /*000359a8*/ ADD         R0, R0, #65536              @ 0x10000 
    /*000359ac*/ LDR         R3, [R0, #240]              @ 0xf0 
    /*000359b0*/ AND         R1, R1, R3 
    /*000359b4*/ STR         R1, [R0, #240]              @ 0xf0 
    /*000359b8*/ BX          LR 
FUNC_END VI_HAL_ClearWchIntByMask


FUNC_BEGIN VI_HAL_GetCapIntStatus
    /*000359bc*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000359c0*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000359c4*/ ADD         R0, R3, R0, LSL #2 
    /*000359c8*/ LDR         R3, [R0, #8] 
    /*000359cc*/ LDR         R0, [R3, #240]              @ 0xf0 
    /*000359d0*/ BX          LR 
FUNC_END VI_HAL_GetCapIntStatus


FUNC_BEGIN VI_HAL_GetDbgIntStatus
    /*000359d4*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000359d8*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000359dc*/ ADD         R0, R3, R0, LSL #2 
    /*000359e0*/ LDR         R3, [R0, #8] 
    /*000359e4*/ LDR         R0, [R3, #4080]             @ 0xff0 
    /*000359e8*/ BX          LR 
FUNC_END VI_HAL_GetDbgIntStatus


FUNC_BEGIN VI_HAL_ClearDbgIntStatus
    /*000359ec*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000359f0*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000359f4*/ ADD         R0, R3, R0, LSL #2 
    /*000359f8*/ MOV         R2, #3 
    /*000359fc*/ LDR         R3, [R0, #8] 
    /*00035a00*/ STR         R2, [R3, #4080]             @ 0xff0 
    /*00035a04*/ BX          LR 
FUNC_END VI_HAL_ClearDbgIntStatus


FUNC_BEGIN VI_HAL_GetWrErrIntStatus
    /*00035a08*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035a0c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035a10*/ ADD         R0, R3, R0, LSL #2 
    /*00035a14*/ LDR         R3, [R0, #8] 
    /*00035a18*/ LDR         R0, [R3, #4068]             @ 0xfe4 
    /*00035a1c*/ BX          LR 
FUNC_END VI_HAL_GetWrErrIntStatus


FUNC_BEGIN VI_HAL_ClearWrErrIntStatus
    /*00035a20*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035a24*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035a28*/ ADD         R0, R3, R0, LSL #2 
    /*00035a2c*/ MVN         R2, #0 
    /*00035a30*/ LDR         R3, [R0, #8] 
    /*00035a34*/ STR         R2, [R3, #4068]             @ 0xfe4 
    /*00035a38*/ BX          LR 
FUNC_END VI_HAL_ClearWrErrIntStatus


FUNC_BEGIN VI_HAL_SetIspMode
    /*00035a3c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035a40*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035a44*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00035a48*/ LDR         LR, [R3, #8] 
    /*00035a4c*/ LDR         R3, [LR, #88]               @ 0x58 
    /*00035a50*/ MOV         IP, R3 
    /*00035a54*/ CMP         R0, #3 
    /*00035a58*/ LDRLS       PC, [PC, R0, LSL #2] 
    /*00035a5c*/ B           VI_HAL_SetIspMode_x35a7c
    /*00035a60*/ ANDEQ       R5, R3, IP, LSR #21 
    /*00035a64*/ ANDEQ       R5, R3, R0, ROR SL 
    /*00035a68*/ MULEQ       R3, R8, SL 
    /*00035a6c*/ ANDEQ       R5, R3, R4, LSL #21 
    /*00035a70*/ BFI         IP, R1, #1, #1 
    /*00035a74*/ BFI         IP, R2, #17, #1 
    /*00035a78*/ MOV         R3, IP 
    VI_HAL_SetIspMode_x35a7c:
    /*00035a7c*/ STR         R3, [LR, #88]               @ 0x58 
    /*00035a80*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00035a84*/ BFI         IP, R1, #3, #1 
    /*00035a88*/ BFI         IP, R2, #19, #1 
    /*00035a8c*/ MOV         R3, IP 
    /*00035a90*/ STR         R3, [LR, #88]               @ 0x58 
    /*00035a94*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00035a98*/ BFI         IP, R1, #2, #1 
    /*00035a9c*/ BFI         IP, R2, #18, #1 
    /*00035aa0*/ MOV         R3, IP 
    /*00035aa4*/ STR         R3, [LR, #88]               @ 0x58 
    /*00035aa8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00035aac*/ BFI         IP, R1, #0, #1 
    /*00035ab0*/ BFI         IP, R2, #16, #1 
    /*00035ab4*/ MOV         R3, IP 
    /*00035ab8*/ STR         R3, [LR, #88]               @ 0x58 
    /*00035abc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_HAL_SetIspMode


FUNC_BEGIN VI_HAL_SetIspSel
    /*00035ac0*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035ac4*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035ac8*/ LDR         R2, [R3, #8] 
    /*00035acc*/ LDR         R3, [R2, #80]               @ 0x50 
    /*00035ad0*/ MOV         IP, R3 
    /*00035ad4*/ CMP         R0, #3 
    /*00035ad8*/ LDRLS       PC, [PC, R0, LSL #2] 
    /*00035adc*/ B           VI_HAL_SetIspSel_x35af8
    /*00035ae0*/ ANDEQ       R5, R3, R0, LSR #22 
    /*00035ae4*/ ANDEQ       R5, R3, R0, LSL FP 
    /*00035ae8*/ ANDEQ       R5, R3, R0, LSL #22 
    /*00035aec*/ STRDEQ      R5, [R3], -R0 
    /*00035af0*/ BFI         IP, R1, #12, #4 
    /*00035af4*/ MOV         R3, IP 
    VI_HAL_SetIspSel_x35af8:
    /*00035af8*/ STR         R3, [R2, #80]               @ 0x50 
    /*00035afc*/ BX          LR 
    /*00035b00*/ BFI         IP, R1, #8, #4 
    /*00035b04*/ MOV         R3, IP 
    /*00035b08*/ STR         R3, [R2, #80]               @ 0x50 
    /*00035b0c*/ BX          LR 
    /*00035b10*/ BFI         IP, R1, #4, #4 
    /*00035b14*/ MOV         R3, IP 
    /*00035b18*/ STR         R3, [R2, #80]               @ 0x50 
    /*00035b1c*/ BX          LR 
    /*00035b20*/ BFI         IP, R1, #0, #4 
    /*00035b24*/ MOV         R3, IP 
    /*00035b28*/ STR         R3, [R2, #80]               @ 0x50 
    /*00035b2c*/ BX          LR 
FUNC_END VI_HAL_SetIspSel


FUNC_BEGIN VI_HAL_SetVicapIntMask
    /*00035b30*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035b34*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035b38*/ ADD         R0, R3, R0, LSL #2 
    /*00035b3c*/ LDR         R2, [R0, #8] 
    /*00035b40*/ LDR         R3, [R2, #248]              @ 0xf8 
    /*00035b44*/ ORR         R1, R3, R1 
    /*00035b48*/ STR         R1, [R2, #248]              @ 0xf8 
    /*00035b4c*/ BX          LR 
FUNC_END VI_HAL_SetVicapIntMask


FUNC_BEGIN VI_HAL_EnablePipeInterrupt
    /*00035b50*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035b54*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035b58*/ ADD         R0, R3, R0, LSL #2 
    /*00035b5c*/ LDR         IP, [R0, #8] 
    /*00035b60*/ LDR         R3, [IP, #248]              @ 0xf8 
    /*00035b64*/ MOV         R0, R3 
    /*00035b68*/ CMP         R1, #3 
    /*00035b6c*/ LDRLS       PC, [PC, R1, LSL #2] 
    /*00035b70*/ B           VI_HAL_EnablePipeInterrupt_x35b94
    /*00035b74*/ ANDEQ       R5, R3, IP, ASR #23 
    /*00035b78*/ @           <UNDEFINED> instruction: 0x00035bb4 
    /*00035b7c*/ MULEQ       R3, IP, FP 
    /*00035b80*/ ANDEQ       R5, R3, R4, LSL #23 
    /*00035b84*/ AND         R2, R2, #1 
    /*00035b88*/ BFI         R0, R2, #11, #1 
    /*00035b8c*/ BFI         R0, R2, #19, #1 
    /*00035b90*/ MOV         R3, R0 
    VI_HAL_EnablePipeInterrupt_x35b94:
    /*00035b94*/ STR         R3, [IP, #248]              @ 0xf8 
    /*00035b98*/ BX          LR 
    /*00035b9c*/ AND         R2, R2, #1 
    /*00035ba0*/ BFI         R0, R2, #10, #1 
    /*00035ba4*/ BFI         R0, R2, #18, #1 
    /*00035ba8*/ MOV         R3, R0 
    /*00035bac*/ STR         R3, [IP, #248]              @ 0xf8 
    /*00035bb0*/ BX          LR 
    /*00035bb4*/ AND         R2, R2, #1 
    /*00035bb8*/ BFI         R0, R2, #9, #1 
    /*00035bbc*/ BFI         R0, R2, #17, #1 
    /*00035bc0*/ MOV         R3, R0 
    /*00035bc4*/ STR         R3, [IP, #248]              @ 0xf8 
    /*00035bc8*/ BX          LR 
    /*00035bcc*/ AND         R2, R2, #1 
    /*00035bd0*/ BFI         R0, R2, #8, #1 
    /*00035bd4*/ BFI         R0, R2, #16, #1 
    /*00035bd8*/ MOV         R3, R0 
    /*00035bdc*/ STR         R3, [IP, #248]              @ 0xf8 
    /*00035be0*/ BX          LR 
FUNC_END VI_HAL_EnablePipeInterrupt


FUNC_BEGIN VI_HAL_GetVicapIntMask
    /*00035be4*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035be8*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035bec*/ ADD         R0, R3, R0, LSL #2 
    /*00035bf0*/ LDR         R3, [R0, #8] 
    /*00035bf4*/ LDR         R0, [R3, #248]              @ 0xf8 
    /*00035bf8*/ BX          LR 
FUNC_END VI_HAL_GetVicapIntMask


FUNC_BEGIN VI_HAL_SetPipeOnline
    /*00035bfc*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035c00*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035c04*/ ADD         R0, R3, R0, LSL #2 
    /*00035c08*/ LDR         R3, [R0, #8] 
    /*00035c0c*/ ADD         R1, R3, R1, LSL #3 
    /*00035c10*/ LDR         R3, [R1, #512]              @ 0x200 
    /*00035c14*/ BFI         R3, R2, #31, #1 
    /*00035c18*/ STR         R3, [R1, #512]              @ 0x200 
    /*00035c1c*/ BX          LR 
FUNC_END VI_HAL_SetPipeOnline


FUNC_BEGIN VI_HAL_SetWchSttEnable
    /*00035c20*/ BX          LR 
FUNC_END VI_HAL_SetWchSttEnable


FUNC_BEGIN VI_HAL_SetCapDRCParaAddr
    /*00035c24*/ BX          LR 
FUNC_END VI_HAL_SetCapDRCParaAddr


FUNC_BEGIN VI_HAL_SetWchRegNewer
    /*00035c28*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035c2c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035c30*/ LDR         R3, [R3, #8] 
    /*00035c34*/ ADD         R0, R3, R0, LSL #12 
    /*00035c38*/ ADD         R0, R0, #65536              @ 0x10000 
    /*00035c3c*/ LDR         R3, [R0, #4] 
    /*00035c40*/ ORR         R3, R3, #1 
    /*00035c44*/ STR         R3, [R0, #4] 
    /*00035c48*/ BX          LR 
FUNC_END VI_HAL_SetWchRegNewer


FUNC_BEGIN VI_HAL_SetWchUpdate
    /*00035c4c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035c50*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035c54*/ LDR         R3, [R3, #8] 
    /*00035c58*/ ADD         R0, R3, R0, LSL #12 
    /*00035c5c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*00035c60*/ LDR         R3, [R0, #8] 
    /*00035c64*/ ORR         R3, R3, #1 
    /*00035c68*/ STR         R3, [R0, #8] 
    /*00035c6c*/ BX          LR 
FUNC_END VI_HAL_SetWchUpdate


FUNC_BEGIN VI_HAL_ClearPortInterrupt
    /*00035c70*/ CMP         R0, #2 
    /*00035c74*/ PUSH        {R4, LR} 
    /*00035c78*/ MOV         R4, R1 
    /*00035c7c*/ BHI         VI_HAL_ClearPortInterrupt_x35c9c
    /*00035c80*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035c84*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035c88*/ ADD         R0, R0, #16 
    /*00035c8c*/ LDR         R3, [R3, #8] 
    /*00035c90*/ ADD         R0, R3, R0, LSL #8 
    /*00035c94*/ STR         R4, [R0, #240]              @ 0xf0 
    /*00035c98*/ POP         {R4, PC} 
    VI_HAL_ClearPortInterrupt_x35c9c:
    /*00035c9c*/ BL          0x000000000003474C 
    /*00035ca0*/ STR         R4, [R0, #240]              @ 0xf0 
    /*00035ca4*/ POP         {R4, PC} 
FUNC_END VI_HAL_ClearPortInterrupt


FUNC_BEGIN VI_HAL_SetPortEn
    /*00035ca8*/ CMP         R0, #2 
    /*00035cac*/ BHI         VI_HAL_SetPortEn_x35ce4
    /*00035cb0*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035cb4*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035cb8*/ ADD         IP, R0, #16 
    /*00035cbc*/ LDR         R2, [R3, #8] 
    /*00035cc0*/ ADD         R3, R2, R0, LSL #8 
    /*00035cc4*/ ADD         R0, R2, IP, LSL #8 
    /*00035cc8*/ ADD         R3, R3, #4096               @ 0x1000 
    /*00035ccc*/ LDR         R2, [R3] 
    /*00035cd0*/ BFI         R2, R1, #31, #1 
    /*00035cd4*/ STR         R2, [R3] 
    /*00035cd8*/ MOV         R3, #7 
    /*00035cdc*/ STR         R3, [R0, #240]              @ 0xf0 
    /*00035ce0*/ BX          LR 
    VI_HAL_SetPortEn_x35ce4:
    /*00035ce4*/ PUSH        {R4, LR} 
    /*00035ce8*/ MOV         R4, R1 
    /*00035cec*/ BL          0x000000000003474C 
    /*00035cf0*/ LDR         R2, [R0] 
    /*00035cf4*/ BFI         R2, R4, #31, #1 
    /*00035cf8*/ STR         R2, [R0] 
    /*00035cfc*/ BL          0x000000000003474C 
    /*00035d00*/ MOV         R3, #7 
    /*00035d04*/ STR         R3, [R0, #240]              @ 0xf0 
    /*00035d08*/ POP         {R4, PC} 
FUNC_END VI_HAL_SetPortEn


FUNC_BEGIN VI_HAL_SetPortIdConfig
    /*00035d0c*/ CMP         R0, #2 
    /*00035d10*/ PUSH        {R4, R5, R6, LR} 
    /*00035d14*/ MOV         R4, R1 
    /*00035d18*/ MOV         R5, R2 
    /*00035d1c*/ BHI         VI_HAL_SetPortIdConfig_x35d58
    /*00035d20*/ MOVW        R1, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035d24*/ MOVT        R1, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035d28*/ ADD         R3, R0, #16 
    /*00035d2c*/ LDR         R0, [R1, #8] 
    /*00035d30*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetPortIdConfig_x35d34:
    /*00035d34*/ LDR         R3, [R0, #164]              @ 0xa4 
    /*00035d38*/ AND         R1, R4, #1 
    /*00035d3c*/ BFI         R3, R1, #31, #1 
    /*00035d40*/ BFC         R3, #30, #1 
    /*00035d44*/ BFC         R3, #0, #2 
    /*00035d48*/ BFI         R3, R5, #2, #2 
    /*00035d4c*/ BFI         R3, R1, #29, #1 
    /*00035d50*/ STR         R3, [R0, #164]              @ 0xa4 
    /*00035d54*/ POP         {R4, R5, R6, PC} 
    VI_HAL_SetPortIdConfig_x35d58:
    /*00035d58*/ BL          0x000000000003474C 
    /*00035d5c*/ B           VI_HAL_SetPortIdConfig_x35d34
FUNC_END VI_HAL_SetPortIdConfig


FUNC_BEGIN VI_HAL_SetPortCompMode
    /*00035d60*/ CMP         R0, #2 
    /*00035d64*/ PUSH        {R4, LR} 
    /*00035d68*/ MOV         R4, R1 
    /*00035d6c*/ BHI         VI_HAL_SetPortCompMode_x35d94
    /*00035d70*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035d74*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035d78*/ ADD         R3, R0, #16 
    /*00035d7c*/ LDR         R0, [R2, #8] 
    /*00035d80*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetPortCompMode_x35d84:
    /*00035d84*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00035d88*/ BFI         R3, R4, #0, #2 
    /*00035d8c*/ STR         R3, [R0, #64]               @ 0x40 
    /*00035d90*/ POP         {R4, PC} 
    VI_HAL_SetPortCompMode_x35d94:
    /*00035d94*/ BL          0x000000000003474C 
    /*00035d98*/ B           VI_HAL_SetPortCompMode_x35d84
FUNC_END VI_HAL_SetPortCompMode


FUNC_BEGIN VI_HAL_SetDataMask
    /*00035d9c*/ CMP         R0, #2 
    /*00035da0*/ PUSH        {R4, R5, R6, LR} 
    /*00035da4*/ MOV         R5, R1 
    /*00035da8*/ MOV         R4, R2 
    /*00035dac*/ BHI         VI_HAL_SetDataMask_x35e10
    /*00035db0*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035db4*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035db8*/ ADD         R0, R0, #16 
    /*00035dbc*/ LDR         R3, [R3, #8] 
    /*00035dc0*/ ADD         R0, R3, R0, LSL #8 
    VI_HAL_SetDataMask_x35dc4:
    /*00035dc4*/ CMP         R5, #0 
    /*00035dc8*/ LSR         R4, R4, #16 
    /*00035dcc*/ BEQ         VI_HAL_SetDataMask_x35e00
    /*00035dd0*/ CMP         R5, #1 
    /*00035dd4*/ BEQ         VI_HAL_SetDataMask_x35e18
    /*00035dd8*/ CMP         R5, #2 
    /*00035ddc*/ BEQ         VI_HAL_SetDataMask_x35e28
    /*00035de0*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11724] 
    /*00035de4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11728] 
    /*00035de8*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11724] 
    /*00035dec*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11728] 
    /*00035df0*/ MOVW        R2, #2136                   @ 0x858 
    /*00035df4*/ LDR         R1, [PC, #60]               @ 0x0000000000035e38 
    /*00035df8*/ POP         {R4, R5, R6, LR} 
    VI_HAL_SetDataMask_x35dfc:
    /*00035dfc*/ B           VI_HAL_SetDataMask_x35dfc   @ osal_panic [R_ARM_JUMP24: +0x0] 
    VI_HAL_SetDataMask_x35e00:
    /*00035e00*/ LDR         R3, [R0, #16] 
    /*00035e04*/ BFI         R3, R4, #16, #16 
    /*00035e08*/ STR         R3, [R0, #16] 
    /*00035e0c*/ POP         {R4, R5, R6, PC} 
    VI_HAL_SetDataMask_x35e10:
    /*00035e10*/ BL          0x000000000003474C 
    /*00035e14*/ B           VI_HAL_SetDataMask_x35dc4
    VI_HAL_SetDataMask_x35e18:
    /*00035e18*/ LDR         R3, [R0, #20] 
    /*00035e1c*/ BFI         R3, R4, #16, #16 
    /*00035e20*/ STR         R3, [R0, #20] 
    /*00035e24*/ POP         {R4, R5, R6, PC} 
    VI_HAL_SetDataMask_x35e28:
    /*00035e28*/ LDR         R3, [R0, #24] 
    /*00035e2c*/ BFI         R3, R4, #16, #16 
    /*00035e30*/ STR         R3, [R0, #24] 
    /*00035e34*/ POP         {R4, R5, R6, PC} 
    /*00035e38*/ LDRDEQ      R2, [R0], -R8 
FUNC_END VI_HAL_SetDataMask


FUNC_BEGIN VI_HAL_SetDataOffset
    /*00035e3c*/ CMP         R0, #2 
    /*00035e40*/ PUSH        {R4, R5, R6, LR} 
    /*00035e44*/ MOV         R4, R1 
    /*00035e48*/ MOV         R6, R2 
    /*00035e4c*/ MOV         R5, R3 
    /*00035e50*/ BHI         VI_HAL_SetDataOffset_x35eb4
    /*00035e54*/ MOVW        R1, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035e58*/ MOVT        R1, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035e5c*/ ADD         R0, R0, #16 
    /*00035e60*/ LDR         IP, [R1, #8] 
    /*00035e64*/ ADD         R0, IP, R0, LSL #8 
    VI_HAL_SetDataOffset_x35e68:
    /*00035e68*/ CMP         R4, #0 
    /*00035e6c*/ BEQ         VI_HAL_SetDataOffset_x35ea0
    /*00035e70*/ CMP         R4, #1 
    /*00035e74*/ BEQ         VI_HAL_SetDataOffset_x35ebc
    /*00035e78*/ CMP         R4, #2 
    /*00035e7c*/ BEQ         VI_HAL_SetDataOffset_x35ed0
    /*00035e80*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11724] 
    /*00035e84*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11728] 
    /*00035e88*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11724] 
    /*00035e8c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11728] 
    /*00035e90*/ MOVW        R2, #2181                   @ 0x885 
    /*00035e94*/ LDR         R1, [PC, #72]               @ 0x0000000000035ee4 
    /*00035e98*/ POP         {R4, R5, R6, LR} 
    VI_HAL_SetDataOffset_x35e9c:
    /*00035e9c*/ B           VI_HAL_SetDataOffset_x35e9c @ osal_panic [R_ARM_JUMP24: +0x0] 
    VI_HAL_SetDataOffset_x35ea0:
    /*00035ea0*/ LDR         R1, [R0, #16] 
    /*00035ea4*/ BFI         R1, R6, #0, #6 
    /*00035ea8*/ BFI         R1, R5, #15, #1 
    /*00035eac*/ STR         R1, [R0, #16] 
    /*00035eb0*/ POP         {R4, R5, R6, PC} 
    VI_HAL_SetDataOffset_x35eb4:
    /*00035eb4*/ BL          0x000000000003474C 
    /*00035eb8*/ B           VI_HAL_SetDataOffset_x35e68
    VI_HAL_SetDataOffset_x35ebc:
    /*00035ebc*/ LDR         R3, [R0, #20] 
    /*00035ec0*/ BFI         R3, R6, #0, #6 
    /*00035ec4*/ BFI         R3, R5, #15, #1 
    /*00035ec8*/ STR         R3, [R0, #20] 
    /*00035ecc*/ POP         {R4, R5, R6, PC} 
    VI_HAL_SetDataOffset_x35ed0:
    /*00035ed0*/ LDR         R3, [R0, #24] 
    /*00035ed4*/ BFI         R3, R6, #0, #6 
    /*00035ed8*/ BFI         R3, R5, #15, #1 
    /*00035edc*/ STR         R3, [R0, #24] 
    /*00035ee0*/ POP         {R4, R5, R6, PC} 
    /*00035ee4*/ ANDEQ       R2, R0, IP, ROR #3 
FUNC_END VI_HAL_SetDataOffset


FUNC_BEGIN VI_HAL_CalcMask
    /*00035ee8*/ CMP         R1, #0 
    /*00035eec*/ MOV         R3, R0 
    /*00035ef0*/ BEQ         VI_HAL_CalcMask_x35f1c
    /*00035ef4*/ MOV         R2, #0 
    /*00035ef8*/ MOV         R1, #1 
    /*00035efc*/ MOV         R0, R2 
    VI_HAL_CalcMask_x35f00:
    /*00035f00*/ CMP         R3, #0 
    /*00035f04*/ ORRLT       R0, R0, R1, LSL R2 
    /*00035f08*/ LSLGE       R0, R0, #1 
    /*00035f0c*/ LSLS        R3, R3, #1 
    /*00035f10*/ ADD         R2, R2, #1 
    /*00035f14*/ BNE         VI_HAL_CalcMask_x35f00
    /*00035f18*/ BX          LR 
    VI_HAL_CalcMask_x35f1c:
    /*00035f1c*/ BX          LR 
FUNC_END VI_HAL_CalcMask


FUNC_BEGIN VI_HAL_CalcOffset
    /*00035f20*/ CMP         R2, #0 
    /*00035f24*/ BEQ         VI_HAL_CalcOffset_x35f6c
    /*00035f28*/ MOV         IP, #0 
    VI_HAL_CalcOffset_x35f2c:
    /*00035f2c*/ LSRS        R2, R2, #1 
    /*00035f30*/ ADD         IP, IP, #1 
    /*00035f34*/ BNE         VI_HAL_CalcOffset_x35f2c
    VI_HAL_CalcOffset_x35f38:
    /*00035f38*/ SUB         R0, R0, #6 
    /*00035f3c*/ CMP         R0, #2 
    /*00035f40*/ BHI         VI_HAL_CalcOffset_x35f54
    /*00035f44*/ CMP         R1, #0 
    /*00035f48*/ BNE         VI_HAL_CalcOffset_x35f64
    VI_HAL_CalcOffset_x35f4c:
    /*00035f4c*/ RSB         R0, IP, #32 
    /*00035f50*/ BX          LR 
    VI_HAL_CalcOffset_x35f54:
    /*00035f54*/ CMP         R3, #0 
    /*00035f58*/ BEQ         VI_HAL_CalcOffset_x35f4c
    /*00035f5c*/ RSB         R0, IP, #20 
    /*00035f60*/ BX          LR 
    VI_HAL_CalcOffset_x35f64:
    /*00035f64*/ RSB         R0, IP, #34                 @ 0x22 
    /*00035f68*/ BX          LR 
    VI_HAL_CalcOffset_x35f6c:
    /*00035f6c*/ MOV         IP, R2 
    /*00035f70*/ B           VI_HAL_CalcOffset_x35f38
FUNC_END VI_HAL_CalcOffset


FUNC_BEGIN VI_HAL_CalcDataBitWidthByPortMask
    /*00035f74*/ SUBS        R3, R0, #0 
    /*00035f78*/ BEQ         VI_HAL_CalcDataBitWidthByPortMask_x35f94
    /*00035f7c*/ MOV         R0, #0 
    VI_HAL_CalcDataBitWidthByPortMask_x35f80:
    /*00035f80*/ CMP         R3, #0 
    /*00035f84*/ ADDLT       R0, R0, #1 
    /*00035f88*/ LSLS        R3, R3, #1 
    /*00035f8c*/ BNE         VI_HAL_CalcDataBitWidthByPortMask_x35f80
    /*00035f90*/ BX          LR 
    VI_HAL_CalcDataBitWidthByPortMask_x35f94:
    /*00035f94*/ MOV         R0, R3 
    /*00035f98*/ BX          LR 
FUNC_END VI_HAL_CalcDataBitWidthByPortMask


FUNC_BEGIN VI_HAL_SetPortYUV444En
    /*00035f9c*/ CMP         R0, #2 
    /*00035fa0*/ PUSH        {R4, LR} 
    /*00035fa4*/ MOV         R4, R1 
    /*00035fa8*/ BHI         VI_HAL_SetPortYUV444En_x35fd0
    /*00035fac*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035fb0*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035fb4*/ ADD         R3, R0, #16 
    /*00035fb8*/ LDR         R0, [R2, #8] 
    /*00035fbc*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetPortYUV444En_x35fc0:
    /*00035fc0*/ LDR         R3, [R0, #80]               @ 0x50 
    /*00035fc4*/ BFI         R3, R4, #31, #1 
    /*00035fc8*/ STR         R3, [R0, #80]               @ 0x50 
    /*00035fcc*/ POP         {R4, PC} 
    VI_HAL_SetPortYUV444En_x35fd0:
    /*00035fd0*/ BL          0x000000000003474C 
    /*00035fd4*/ B           VI_HAL_SetPortYUV444En_x35fc0
FUNC_END VI_HAL_SetPortYUV444En


FUNC_BEGIN VI_HAL_SetChnCombineMode
    /*00035fd8*/ CMP         R0, #2 
    /*00035fdc*/ PUSH        {R4, R5, R6, LR} 
    /*00035fe0*/ MOV         R4, R1 
    /*00035fe4*/ BHI         VI_HAL_SetChnCombineMode_x3603c
    /*00035fe8*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00035fec*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00035ff0*/ ADD         R0, R0, #16 
    /*00035ff4*/ LDR         R5, [R3, #8] 
    /*00035ff8*/ ADD         R5, R5, R0, LSL #8 
    VI_HAL_SetChnCombineMode_x35ffc:
    /*00035ffc*/ CMP         R4, #0 
    /*00036000*/ LDR         R6, [R5, #64]               @ 0x40 
    /*00036004*/ BEQ         VI_HAL_SetChnCombineMode_x36030
    /*00036008*/ CMP         R4, #1 
    /*0003600c*/ BEQ         VI_HAL_SetChnCombineMode_x36030
    /*00036010*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11724] 
    /*00036014*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11728] 
    /*00036018*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11724] 
    /*0003601c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11728] 
    /*00036020*/ MOVW        R2, #2326                   @ 0x916 
    /*00036024*/ LDR         R1, [PC, #28]               @ 0x0000000000036048 
    /*00036028*/ LSR         R4, R6, #31 
    /*0003602c*/ BL          0x000000000003602C          @ osal_panic [R_ARM_CALL: +0x0] 
    VI_HAL_SetChnCombineMode_x36030:
    /*00036030*/ BFI         R6, R4, #31, #1 
    /*00036034*/ STR         R6, [R5, #64]               @ 0x40 
    /*00036038*/ POP         {R4, R5, R6, PC} 
    VI_HAL_SetChnCombineMode_x3603c:
    /*0003603c*/ BL          0x000000000003474C 
    /*00036040*/ MOV         R5, R0 
    /*00036044*/ B           VI_HAL_SetChnCombineMode_x35ffc
    /*00036048*/ ANDEQ       R2, R0, R4, LSL #4 
FUNC_END VI_HAL_SetChnCombineMode


FUNC_BEGIN VI_HAL_SetChnCompMode
    /*0003604c*/ BX          LR 
FUNC_END VI_HAL_SetChnCompMode


FUNC_BEGIN VI_HAL_SetChnInputMode
    /*00036050*/ BX          LR 
FUNC_END VI_HAL_SetChnInputMode


FUNC_BEGIN VI_HAL_SetChnScanMode
    /*00036054*/ BX          LR 
FUNC_END VI_HAL_SetChnScanMode


FUNC_BEGIN VI_HAL_SetChnSync
    /*00036058*/ CMP         R0, #2 
    /*0003605c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00036060*/ MOV         R4, R1 
    /*00036064*/ MOV         R5, R2 
    /*00036068*/ MOV         R7, R3 
    /*0003606c*/ LDR         R6, [SP, #32] 
    /*00036070*/ BHI         VI_HAL_SetChnSync_x3619c
    /*00036074*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036078*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*0003607c*/ ADD         R0, R0, #16 
    /*00036080*/ LDR         R3, [R2, #8] 
    /*00036084*/ ADD         R0, R3, R0, LSL #8 
    VI_HAL_SetChnSync_x36088:
    /*00036088*/ SUB         LR, R4, #4 
    /*0003608c*/ LDR         IP, [R0, #56]               @ 0x38 
    /*00036090*/ CMP         LR, #2 
    /*00036094*/ MOVLS       IP, #0 
    /*00036098*/ BLS         VI_HAL_SetChnSync_x3615c
    /*0003609c*/ MOV         R3, #1 
    /*000360a0*/ BFI         IP, R3, #0, #2 
    /*000360a4*/ BFC         IP, #2, #1 
    /*000360a8*/ LDR         R2, [SP, #28] 
    /*000360ac*/ BFC         IP, #8, #2 
    /*000360b0*/ BFC         IP, #10, #1 
    /*000360b4*/ CMP         R2, R3 
    /*000360b8*/ BFC         IP, #11, #2 
    /*000360bc*/ BFI         IP, R3, #13, #2 
    /*000360c0*/ BFC         IP, #16, #2 
    /*000360c4*/ BFC         IP, #18, #1 
    /*000360c8*/ BFI         IP, R3, #19, #2 
    /*000360cc*/ SUB         R3, R6, #1 
    /*000360d0*/ BFC         IP, #24, #2 
    /*000360d4*/ CLZ         R3, R3 
    /*000360d8*/ BFC         IP, #26, #1 
    /*000360dc*/ ORREQ       IP, IP, #1024               @ 0x400 
    /*000360e0*/ CMP         R5, #1 
    /*000360e4*/ CMPEQ       R6, #1 
    /*000360e8*/ LSR         R3, R3, #5 
    /*000360ec*/ MOVEQ       R2, #1 
    /*000360f0*/ BFIEQ       IP, R2, #11, #2 
    /*000360f4*/ CMP         R4, #0 
    /*000360f8*/ MOVEQ       R2, #1 
    /*000360fc*/ BFIEQ       IP, R2, #11, #2 
    /*00036100*/ SUB         R2, R7, #1 
    /*00036104*/ CMP         R6, #0 
    /*00036108*/ CMPEQ       R7, #1 
    /*0003610c*/ CLZ         R2, R2 
    /*00036110*/ LSR         R2, R2, #5 
    /*00036114*/ BNE         VI_HAL_SetChnSync_x36164
    VI_HAL_SetChnSync_x36118:
    /*00036118*/ ORR         IP, IP, #262144             @ 0x40000 
    VI_HAL_SetChnSync_x3611c:
    /*0003611c*/ CLZ         R3, R5 
    /*00036120*/ CMP         R4, #1 
    /*00036124*/ CMPEQ       R5, #0 
    /*00036128*/ LSR         R3, R3, #5 
    /*0003612c*/ BNE         VI_HAL_SetChnSync_x36180
    /*00036130*/ CMP         R5, #1 
    /*00036134*/ MOV         R1, #2 
    /*00036138*/ BFI         IP, R1, #19, #2 
    /*0003613c*/ MOVNE       R1, #1 
    /*00036140*/ BFINE       IP, R1, #24, #2 
    /*00036144*/ BEQ         VI_HAL_SetChnSync_x36190
    VI_HAL_SetChnSync_x36148:
    /*00036148*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*0003614c*/ ORR         R1, R1, #-2147483648        @ 0x80000000 
    /*00036150*/ STR         R1, [R0, #60]               @ 0x3c 
    VI_HAL_SetChnSync_x36154:
    /*00036154*/ TST         R2, R3 
    /*00036158*/ ORRNE       IP, IP, #67108864           @ 0x4000000 
    VI_HAL_SetChnSync_x3615c:
    /*0003615c*/ STR         IP, [R0, #56]               @ 0x38 
    /*00036160*/ POP         {R4, R5, R6, R7, R8, PC} 
    VI_HAL_SetChnSync_x36164:
    /*00036164*/ LDR         R1, [SP, #36]               @ 0x24 
    /*00036168*/ CMP         R1, #1 
    /*0003616c*/ MOVNE       R3, #0 
    /*00036170*/ ANDEQ       R3, R3, #1 
    /*00036174*/ CMP         R3, #0 
    /*00036178*/ BNE         VI_HAL_SetChnSync_x36118
    /*0003617c*/ B           VI_HAL_SetChnSync_x3611c
    VI_HAL_SetChnSync_x36180:
    /*00036180*/ CMP         R4, #1 
    /*00036184*/ BNE         VI_HAL_SetChnSync_x36154
    /*00036188*/ CMP         R5, #1 
    /*0003618c*/ BNE         VI_HAL_SetChnSync_x36148
    VI_HAL_SetChnSync_x36190:
    /*00036190*/ MOV         R1, #2 
    /*00036194*/ BFI         IP, R1, #24, #2 
    /*00036198*/ B           VI_HAL_SetChnSync_x36148
    VI_HAL_SetChnSync_x3619c:
    /*0003619c*/ BL          0x000000000003474C 
    /*000361a0*/ B           VI_HAL_SetChnSync_x36088
FUNC_END VI_HAL_SetChnSync


FUNC_BEGIN VIU_HAL_SetChnHsync_hfb
    /*000361a4*/ CMP         R0, #2 
    /*000361a8*/ PUSH        {R4, LR} 
    /*000361ac*/ MOV         R4, R1 
    /*000361b0*/ BHI         VIU_HAL_SetChnHsync_hfb_x361d8
    /*000361b4*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000361b8*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000361bc*/ ADD         R3, R0, #16 
    /*000361c0*/ LDR         R0, [R2, #8] 
    /*000361c4*/ ADD         R0, R0, R3, LSL #8 
    VIU_HAL_SetChnHsync_hfb_x361c8:
    /*000361c8*/ LDR         R3, [R0, #128]              @ 0x80 
    /*000361cc*/ BFI         R3, R4, #0, #16 
    /*000361d0*/ STR         R3, [R0, #128]              @ 0x80 
    /*000361d4*/ POP         {R4, PC} 
    VIU_HAL_SetChnHsync_hfb_x361d8:
    /*000361d8*/ BL          0x000000000003474C 
    /*000361dc*/ B           VIU_HAL_SetChnHsync_hfb_x361c8
FUNC_END VIU_HAL_SetChnHsync_hfb


FUNC_BEGIN VIU_HAL_SetChnHsync_hact
    /*000361e0*/ CMP         R0, #2 
    /*000361e4*/ PUSH        {R4, LR} 
    /*000361e8*/ MOV         R4, R1 
    /*000361ec*/ BHI         VIU_HAL_SetChnHsync_hact_x36210
    /*000361f0*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000361f4*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000361f8*/ ADD         R3, R0, #16 
    /*000361fc*/ LDR         R0, [R2, #8] 
    /*00036200*/ ADD         R0, R0, R3, LSL #8 
    VIU_HAL_SetChnHsync_hact_x36204:
    /*00036204*/ LDR         R3, [R0, #132]              @ 0x84 
    /*00036208*/ STR         R4, [R0, #132]              @ 0x84 
    /*0003620c*/ POP         {R4, PC} 
    VIU_HAL_SetChnHsync_hact_x36210:
    /*00036210*/ BL          0x000000000003474C 
    /*00036214*/ B           VIU_HAL_SetChnHsync_hact_x36204
FUNC_END VIU_HAL_SetChnHsync_hact


FUNC_BEGIN VIU_HAL_SetChnHsync_hbb
    /*00036218*/ CMP         R0, #2 
    /*0003621c*/ PUSH        {R4, LR} 
    /*00036220*/ MOV         R4, R1 
    /*00036224*/ BHI         VIU_HAL_SetChnHsync_hbb_x3624c
    /*00036228*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*0003622c*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036230*/ ADD         R3, R0, #16 
    /*00036234*/ LDR         R0, [R2, #8] 
    /*00036238*/ ADD         R0, R0, R3, LSL #8 
    VIU_HAL_SetChnHsync_hbb_x3623c:
    /*0003623c*/ LDR         R3, [R0, #136]              @ 0x88 
    /*00036240*/ BFI         R3, R4, #0, #16 
    /*00036244*/ STR         R3, [R0, #136]              @ 0x88 
    /*00036248*/ POP         {R4, PC} 
    VIU_HAL_SetChnHsync_hbb_x3624c:
    /*0003624c*/ BL          0x000000000003474C 
    /*00036250*/ B           VIU_HAL_SetChnHsync_hbb_x3623c
FUNC_END VIU_HAL_SetChnHsync_hbb


FUNC_BEGIN VIU_HAL_SetChnVsync_Vfb
    /*00036254*/ CMP         R0, #2 
    /*00036258*/ PUSH        {R4, LR} 
    /*0003625c*/ MOV         R4, R1 
    /*00036260*/ BHI         VIU_HAL_SetChnVsync_Vfb_x36288
    /*00036264*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036268*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*0003626c*/ ADD         R3, R0, #16 
    /*00036270*/ LDR         R0, [R2, #8] 
    /*00036274*/ ADD         R0, R0, R3, LSL #8 
    VIU_HAL_SetChnVsync_Vfb_x36278:
    /*00036278*/ LDR         R3, [R0, #140]              @ 0x8c 
    /*0003627c*/ BFI         R3, R4, #0, #16 
    /*00036280*/ STR         R3, [R0, #140]              @ 0x8c 
    /*00036284*/ POP         {R4, PC} 
    VIU_HAL_SetChnVsync_Vfb_x36288:
    /*00036288*/ BL          0x000000000003474C 
    /*0003628c*/ B           VIU_HAL_SetChnVsync_Vfb_x36278
FUNC_END VIU_HAL_SetChnVsync_Vfb


FUNC_BEGIN VIU_HAL_SetChnVsync_Vact
    /*00036290*/ CMP         R0, #2 
    /*00036294*/ PUSH        {R4, LR} 
    /*00036298*/ MOV         R4, R1 
    /*0003629c*/ BHI         VIU_HAL_SetChnVsync_Vact_x362c4
    /*000362a0*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000362a4*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000362a8*/ ADD         R3, R0, #16 
    /*000362ac*/ LDR         R0, [R2, #8] 
    /*000362b0*/ ADD         R0, R0, R3, LSL #8 
    VIU_HAL_SetChnVsync_Vact_x362b4:
    /*000362b4*/ LDR         R3, [R0, #144]              @ 0x90 
    /*000362b8*/ BFI         R3, R4, #0, #16 
    /*000362bc*/ STR         R3, [R0, #144]              @ 0x90 
    /*000362c0*/ POP         {R4, PC} 
    VIU_HAL_SetChnVsync_Vact_x362c4:
    /*000362c4*/ BL          0x000000000003474C 
    /*000362c8*/ B           VIU_HAL_SetChnVsync_Vact_x362b4
FUNC_END VIU_HAL_SetChnVsync_Vact


FUNC_BEGIN VIU_HAL_SetChnVsync_Vbb
    /*000362cc*/ CMP         R0, #2 
    /*000362d0*/ PUSH        {R4, LR} 
    /*000362d4*/ MOV         R4, R1 
    /*000362d8*/ BHI         VIU_HAL_SetChnVsync_Vbb_x36300
    /*000362dc*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000362e0*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000362e4*/ ADD         R3, R0, #16 
    /*000362e8*/ LDR         R0, [R2, #8] 
    /*000362ec*/ ADD         R0, R0, R3, LSL #8 
    VIU_HAL_SetChnVsync_Vbb_x362f0:
    /*000362f0*/ LDR         R3, [R0, #148]              @ 0x94 
    /*000362f4*/ BFI         R3, R4, #0, #16 
    /*000362f8*/ STR         R3, [R0, #148]              @ 0x94 
    /*000362fc*/ POP         {R4, PC} 
    VIU_HAL_SetChnVsync_Vbb_x36300:
    /*00036300*/ BL          0x000000000003474C 
    /*00036304*/ B           VIU_HAL_SetChnVsync_Vbb_x362f0
FUNC_END VIU_HAL_SetChnVsync_Vbb


FUNC_BEGIN VIU_HAL_SetChnVsync_Vbfb
    /*00036308*/ CMP         R0, #2 
    /*0003630c*/ PUSH        {R4, LR} 
    /*00036310*/ MOV         R4, R1 
    /*00036314*/ BHI         VIU_HAL_SetChnVsync_Vbfb_x3633c
    /*00036318*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*0003631c*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036320*/ ADD         R3, R0, #16 
    /*00036324*/ LDR         R0, [R2, #8] 
    /*00036328*/ ADD         R0, R0, R3, LSL #8 
    VIU_HAL_SetChnVsync_Vbfb_x3632c:
    /*0003632c*/ LDR         R3, [R0, #152]              @ 0x98 
    /*00036330*/ BFI         R3, R4, #0, #16 
    /*00036334*/ STR         R3, [R0, #152]              @ 0x98 
    /*00036338*/ POP         {R4, PC} 
    VIU_HAL_SetChnVsync_Vbfb_x3633c:
    /*0003633c*/ BL          0x000000000003474C 
    /*00036340*/ B           VIU_HAL_SetChnVsync_Vbfb_x3632c
FUNC_END VIU_HAL_SetChnVsync_Vbfb


FUNC_BEGIN VIU_HAL_SetChnVsync_Vbact
    /*00036344*/ CMP         R0, #2 
    /*00036348*/ PUSH        {R4, LR} 
    /*0003634c*/ MOV         R4, R1 
    /*00036350*/ BHI         VIU_HAL_SetChnVsync_Vbact_x36378
    /*00036354*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036358*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*0003635c*/ ADD         R3, R0, #16 
    /*00036360*/ LDR         R0, [R2, #8] 
    /*00036364*/ ADD         R0, R0, R3, LSL #8 
    VIU_HAL_SetChnVsync_Vbact_x36368:
    /*00036368*/ LDR         R3, [R0, #156]              @ 0x9c 
    /*0003636c*/ BFI         R3, R4, #0, #16 
    /*00036370*/ STR         R3, [R0, #156]              @ 0x9c 
    /*00036374*/ POP         {R4, PC} 
    VIU_HAL_SetChnVsync_Vbact_x36378:
    /*00036378*/ BL          0x000000000003474C 
    /*0003637c*/ B           VIU_HAL_SetChnVsync_Vbact_x36368
FUNC_END VIU_HAL_SetChnVsync_Vbact


FUNC_BEGIN VIU_HAL_SetChnVsync_Vbbb
    /*00036380*/ CMP         R0, #2 
    /*00036384*/ PUSH        {R4, LR} 
    /*00036388*/ MOV         R4, R1 
    /*0003638c*/ BHI         VIU_HAL_SetChnVsync_Vbbb_x363b4
    /*00036390*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036394*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036398*/ ADD         R3, R0, #16 
    /*0003639c*/ LDR         R0, [R2, #8] 
    /*000363a0*/ ADD         R0, R0, R3, LSL #8 
    VIU_HAL_SetChnVsync_Vbbb_x363a4:
    /*000363a4*/ LDR         R3, [R0, #160]              @ 0xa0 
    /*000363a8*/ BFI         R3, R4, #0, #16 
    /*000363ac*/ STR         R3, [R0, #160]              @ 0xa0 
    /*000363b0*/ POP         {R4, PC} 
    VIU_HAL_SetChnVsync_Vbbb_x363b4:
    /*000363b4*/ BL          0x000000000003474C 
    /*000363b8*/ B           VIU_HAL_SetChnVsync_Vbbb_x363a4
FUNC_END VIU_HAL_SetChnVsync_Vbbb


FUNC_BEGIN VI_HAL_SetChnTimingBlank
    /*000363bc*/ CMP         R0, #2 
    /*000363c0*/ PUSH        {R4, R5, R6, LR} 
    /*000363c4*/ LDR         R5, [R1] 
    /*000363c8*/ BHI         VI_HAL_SetChnTimingBlank_x36490
    /*000363cc*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000363d0*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000363d4*/ ADD         IP, R0, #16 
    /*000363d8*/ MOVW        R6, #4228                   @ 0x1084 
    /*000363dc*/ LDR         R2, [R3, #8] 
    /*000363e0*/ MOVW        LR, #4232                   @ 0x1088 
    /*000363e4*/ ADD         R3, R2, R0, LSL #8 
    /*000363e8*/ ADD         R0, R2, IP, LSL #8 
    /*000363ec*/ ADD         R4, R3, #4224               @ 0x1080 
    /*000363f0*/ MOVW        IP, #4236                   @ 0x108c 
    /*000363f4*/ LDR         R2, [R4] 
    /*000363f8*/ BFI         R2, R5, #0, #16 
    /*000363fc*/ STR         R2, [R4] 
    /*00036400*/ LDR         R2, [R1, #4] 
    /*00036404*/ MOVW        R5, #4240                   @ 0x1090 
    /*00036408*/ LDR         R4, [R3, R6] 
    /*0003640c*/ MOVW        R4, #4244                   @ 0x1094 
    /*00036410*/ STR         R2, [R3, R6] 
    /*00036414*/ LDR         R2, [R3, LR] 
    /*00036418*/ LDR         R6, [R1, #8] 
    /*0003641c*/ BFI         R2, R6, #0, #16 
    /*00036420*/ STR         R2, [R3, LR] 
    /*00036424*/ LDR         R2, [R3, IP] 
    /*00036428*/ MOVW        LR, #4248                   @ 0x1098 
    /*0003642c*/ LDR         R6, [R1, #12] 
    /*00036430*/ BFI         R2, R6, #0, #16 
    /*00036434*/ STR         R2, [R3, IP] 
    /*00036438*/ LDR         R2, [R3, R5] 
    /*0003643c*/ MOVW        IP, #4252                   @ 0x109c 
    /*00036440*/ LDR         R6, [R1, #16] 
    /*00036444*/ BFI         R2, R6, #0, #16 
    /*00036448*/ STR         R2, [R3, R5] 
    /*0003644c*/ LDR         R2, [R3, R4] 
    /*00036450*/ LDR         R5, [R1, #20] 
    /*00036454*/ BFI         R2, R5, #0, #16 
    /*00036458*/ STR         R2, [R3, R4] 
    /*0003645c*/ LDR         R2, [R3, LR] 
    /*00036460*/ LDR         R4, [R1, #24] 
    /*00036464*/ BFI         R2, R4, #0, #16 
    /*00036468*/ STR         R2, [R3, LR] 
    /*0003646c*/ LDR         LR, [R1, #28] 
    /*00036470*/ LDR         R2, [R3, IP] 
    /*00036474*/ BFI         R2, LR, #0, #16 
    /*00036478*/ STR         R2, [R3, IP] 
    /*0003647c*/ LDR         R4, [R1, #32] 
    VI_HAL_SetChnTimingBlank_x36480:
    /*00036480*/ LDR         R3, [R0, #160]              @ 0xa0 
    /*00036484*/ BFI         R3, R4, #0, #16 
    /*00036488*/ STR         R3, [R0, #160]              @ 0xa0 
    /*0003648c*/ POP         {R4, R5, R6, PC} 
    VI_HAL_SetChnTimingBlank_x36490:
    /*00036490*/ MOV         R4, R1 
    /*00036494*/ BL          0x000000000003474C 
    /*00036498*/ LDR         R2, [R0, #128]              @ 0x80 
    /*0003649c*/ BFI         R2, R5, #0, #16 
    /*000364a0*/ STR         R2, [R0, #128]              @ 0x80 
    /*000364a4*/ LDR         R5, [R4, #4] 
    /*000364a8*/ BL          0x000000000003474C 
    /*000364ac*/ LDR         R3, [R0, #132]              @ 0x84 
    /*000364b0*/ STR         R5, [R0, #132]              @ 0x84 
    /*000364b4*/ LDR         R5, [R4, #8] 
    /*000364b8*/ BL          0x000000000003474C 
    /*000364bc*/ LDR         R2, [R0, #136]              @ 0x88 
    /*000364c0*/ BFI         R2, R5, #0, #16 
    /*000364c4*/ STR         R2, [R0, #136]              @ 0x88 
    /*000364c8*/ LDR         R5, [R4, #12] 
    /*000364cc*/ BL          0x000000000003474C 
    /*000364d0*/ LDR         R2, [R0, #140]              @ 0x8c 
    /*000364d4*/ BFI         R2, R5, #0, #16 
    /*000364d8*/ STR         R2, [R0, #140]              @ 0x8c 
    /*000364dc*/ LDR         R5, [R4, #16] 
    /*000364e0*/ BL          0x000000000003474C 
    /*000364e4*/ LDR         R2, [R0, #144]              @ 0x90 
    /*000364e8*/ BFI         R2, R5, #0, #16 
    /*000364ec*/ STR         R2, [R0, #144]              @ 0x90 
    /*000364f0*/ LDR         R5, [R4, #20] 
    /*000364f4*/ BL          0x000000000003474C 
    /*000364f8*/ LDR         R2, [R0, #148]              @ 0x94 
    /*000364fc*/ BFI         R2, R5, #0, #16 
    /*00036500*/ STR         R2, [R0, #148]              @ 0x94 
    /*00036504*/ LDR         R5, [R4, #24] 
    /*00036508*/ BL          0x000000000003474C 
    /*0003650c*/ LDR         R2, [R0, #152]              @ 0x98 
    /*00036510*/ BFI         R2, R5, #0, #16 
    /*00036514*/ STR         R2, [R0, #152]              @ 0x98 
    /*00036518*/ LDR         R5, [R4, #28] 
    /*0003651c*/ BL          0x000000000003474C 
    /*00036520*/ LDR         R2, [R0, #156]              @ 0x9c 
    /*00036524*/ BFI         R2, R5, #0, #16 
    /*00036528*/ STR         R2, [R0, #156]              @ 0x9c 
    /*0003652c*/ LDR         R4, [R4, #32] 
    /*00036530*/ BL          0x000000000003474C 
    /*00036534*/ B           VI_HAL_SetChnTimingBlank_x36480
FUNC_END VI_HAL_SetChnTimingBlank


FUNC_BEGIN VI_HAL_SetChnYUVInputSeq
    /*00036538*/ CMP         R0, #2 
    /*0003653c*/ PUSH        {R4, LR} 
    /*00036540*/ MOV         R4, R1 
    /*00036544*/ BHI         VI_HAL_SetChnYUVInputSeq_x365ac
    /*00036548*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*0003654c*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036550*/ ADD         R3, R0, #16 
    /*00036554*/ LDR         R0, [R2, #8] 
    /*00036558*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetChnYUVInputSeq_x3655c:
    /*0003655c*/ SUB         R2, R4, #4 
    /*00036560*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00036564*/ CMP         R2, #1 
    /*00036568*/ MOVHI       R2, #0 
    /*0003656c*/ MOVLS       R2, #1 
    /*00036570*/ ANDS        R1, R3, #3 
    /*00036574*/ BEQ         VI_HAL_SetChnYUVInputSeq_x36598
    /*00036578*/ CMP         R4, #0 
    /*0003657c*/ CMPEQ       R1, #1 
    /*00036580*/ MOVEQ       R4, #1 
    /*00036584*/ MOVNE       R4, #0 
    VI_HAL_SetChnYUVInputSeq_x36588:
    /*00036588*/ BFI         R3, R2, #2, #1 
    /*0003658c*/ BFI         R3, R4, #3, #1 
    /*00036590*/ STR         R3, [R0, #64]               @ 0x40 
    /*00036594*/ POP         {R4, PC} 
    VI_HAL_SetChnYUVInputSeq_x36598:
    /*00036598*/ SUB         R4, R4, #3 
    /*0003659c*/ BICS        R1, R4, #2 
    /*000365a0*/ MOVEQ       R4, #1 
    /*000365a4*/ MOVNE       R4, #0 
    /*000365a8*/ B           VI_HAL_SetChnYUVInputSeq_x36588
    VI_HAL_SetChnYUVInputSeq_x365ac:
    /*000365ac*/ BL          0x000000000003474C 
    /*000365b0*/ B           VI_HAL_SetChnYUVInputSeq_x3655c
FUNC_END VI_HAL_SetChnYUVInputSeq


FUNC_BEGIN VI_HAL_SetBT656En
    /*000365b4*/ CMP         R0, #2 
    /*000365b8*/ PUSH        {R4, LR} 
    /*000365bc*/ MOV         R4, R1 
    /*000365c0*/ BHI         VI_HAL_SetBT656En_x365e8
    /*000365c4*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000365c8*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000365cc*/ ADD         R3, R0, #16 
    /*000365d0*/ LDR         R0, [R2, #8] 
    /*000365d4*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetBT656En_x365d8:
    /*000365d8*/ LDR         R3, [R0, #32] 
    /*000365dc*/ BFI         R3, R4, #31, #1 
    /*000365e0*/ STR         R3, [R0, #32] 
    /*000365e4*/ POP         {R4, PC} 
    VI_HAL_SetBT656En_x365e8:
    /*000365e8*/ BL          0x000000000003474C 
    /*000365ec*/ B           VI_HAL_SetBT656En_x365d8
FUNC_END VI_HAL_SetBT656En


FUNC_BEGIN VI_HAL_SetChnFixcode
    /*000365f0*/ BX          LR 
FUNC_END VI_HAL_SetChnFixcode


FUNC_BEGIN VI_HAL_SetChnFtcPolar
    /*000365f4*/ CMP         R0, #2 
    /*000365f8*/ PUSH        {R4, LR} 
    /*000365fc*/ MOV         R4, R1 
    /*00036600*/ BHI         VI_HAL_SetChnFtcPolar_x36628
    /*00036604*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036608*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*0003660c*/ ADD         R3, R0, #16 
    /*00036610*/ LDR         R0, [R2, #8] 
    /*00036614*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetChnFtcPolar_x36618:
    /*00036618*/ LDR         R3, [R0, #32] 
    /*0003661c*/ BFI         R3, R4, #10, #1 
    /*00036620*/ STR         R3, [R0, #32] 
    /*00036624*/ POP         {R4, PC} 
    VI_HAL_SetChnFtcPolar_x36628:
    /*00036628*/ BL          0x000000000003474C 
    /*0003662c*/ B           VI_HAL_SetChnFtcPolar_x36618
FUNC_END VI_HAL_SetChnFtcPolar


FUNC_BEGIN VI_HAL_SetChnCorrectEn
    /*00036630*/ BX          LR 
FUNC_END VI_HAL_SetChnCorrectEn


FUNC_BEGIN VI_HAL_GetPortReg
    /*00036634*/ CMP         R1, #2 
    /*00036638*/ BHI         VI_HAL_GetPortReg_x36658
    /*0003663c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036640*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036644*/ ADD         R3, R3, R0, LSL #2 
    /*00036648*/ ADD         R1, R1, #16 
    /*0003664c*/ LDR         R0, [R3, #8] 
    /*00036650*/ ADD         R0, R0, R1, LSL #8 
    /*00036654*/ BX          LR 
    VI_HAL_GetPortReg_x36658:
    /*00036658*/ B           0x000000000003474C 
FUNC_END VI_HAL_GetPortReg


FUNC_BEGIN VI_HAL_SetIspIdSel
    /*0003665c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036660*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036664*/ LDR         R2, [R3, #8] 
    /*00036668*/ LDR         R3, [R2, #84]               @ 0x54 
    /*0003666c*/ MOV         IP, R3 
    /*00036670*/ CMP         R0, #3 
    /*00036674*/ LDRLS       PC, [PC, R0, LSL #2] 
    /*00036678*/ B           VI_HAL_SetIspIdSel_x36694
    /*0003667c*/ @           <UNDEFINED> instruction: 0x000366bc 
    /*00036680*/ ANDEQ       R6, R3, IP, LSR #13 
    /*00036684*/ MULEQ       R3, IP, R6 
    /*00036688*/ ANDEQ       R6, R3, IP, LSL #13 
    /*0003668c*/ BFI         IP, R1, #12, #4 
    /*00036690*/ MOV         R3, IP 
    VI_HAL_SetIspIdSel_x36694:
    /*00036694*/ STR         R3, [R2, #84]               @ 0x54 
    /*00036698*/ BX          LR 
    /*0003669c*/ BFI         IP, R1, #8, #4 
    /*000366a0*/ MOV         R3, IP 
    /*000366a4*/ STR         R3, [R2, #84]               @ 0x54 
    /*000366a8*/ BX          LR 
    /*000366ac*/ BFI         IP, R1, #4, #4 
    /*000366b0*/ MOV         R3, IP 
    /*000366b4*/ STR         R3, [R2, #84]               @ 0x54 
    /*000366b8*/ BX          LR 
    /*000366bc*/ BFI         IP, R1, #0, #4 
    /*000366c0*/ MOV         R3, IP 
    /*000366c4*/ STR         R3, [R2, #84]               @ 0x54 
    /*000366c8*/ BX          LR 
FUNC_END VI_HAL_SetIspIdSel


FUNC_BEGIN VI_HAL_SetPortInputMode
    /*000366cc*/ CMP         R0, #2 
    /*000366d0*/ PUSH        {R4, LR} 
    /*000366d4*/ MOV         R4, R1 
    /*000366d8*/ BHI         VI_HAL_SetPortInputMode_x36708
    /*000366dc*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000366e0*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000366e4*/ ADD         R3, R0, #16 
    /*000366e8*/ LDR         R0, [R2, #8] 
    /*000366ec*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetPortInputMode_x366f0:
    /*000366f0*/ CLZ         R1, R4 
    /*000366f4*/ LDR         R3, [R0] 
    /*000366f8*/ LSR         R1, R1, #5 
    /*000366fc*/ BFI         R3, R1, #0, #1 
    /*00036700*/ STR         R3, [R0] 
    /*00036704*/ POP         {R4, PC} 
    VI_HAL_SetPortInputMode_x36708:
    /*00036708*/ BL          0x000000000003474C 
    /*0003670c*/ B           VI_HAL_SetPortInputMode_x366f0
FUNC_END VI_HAL_SetPortInputMode


FUNC_BEGIN VI_HAL_SetMipiYuvCfg
    /*00036710*/ CMP         R0, #2 
    /*00036714*/ PUSH        {R4, LR} 
    /*00036718*/ MOV         R4, R1 
    /*0003671c*/ BHI         VI_HAL_SetMipiYuvCfg_x3675c
    /*00036720*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036724*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036728*/ ADD         R3, R0, #16 
    /*0003672c*/ LDR         R0, [R2, #8] 
    /*00036730*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetMipiYuvCfg_x36734:
    /*00036734*/ CMP         R4, #6 
    /*00036738*/ MOVEQ       R2, #1 
    /*0003673c*/ BEQ         VI_HAL_SetMipiYuvCfg_x3674c
    /*00036740*/ CMP         R4, #7 
    /*00036744*/ MOVNE       R2, #0 
    /*00036748*/ MOVEQ       R2, #2 
    VI_HAL_SetMipiYuvCfg_x3674c:
    /*0003674c*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*00036750*/ BFI         R3, R2, #0, #2 
    /*00036754*/ STR         R3, [R0, #44]               @ 0x2c 
    /*00036758*/ POP         {R4, PC} 
    VI_HAL_SetMipiYuvCfg_x3675c:
    /*0003675c*/ BL          0x000000000003474C 
    /*00036760*/ B           VI_HAL_SetMipiYuvCfg_x36734
FUNC_END VI_HAL_SetMipiYuvCfg


FUNC_BEGIN VI_HAL_SetMipiYuvSeq
    /*00036764*/ CMP         R0, #2 
    /*00036768*/ PUSH        {R4, LR} 
    /*0003676c*/ MOV         R4, R1 
    /*00036770*/ BHI         VI_HAL_SetMipiYuvSeq_x367a4
    /*00036774*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036778*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*0003677c*/ ADD         R3, R0, #16 
    /*00036780*/ LDR         R0, [R2, #8] 
    /*00036784*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetMipiYuvSeq_x36788:
    /*00036788*/ SUB         R4, R4, #5 
    /*0003678c*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*00036790*/ CLZ         R4, R4 
    /*00036794*/ LSR         R4, R4, #5 
    /*00036798*/ BFI         R3, R4, #2, #1 
    /*0003679c*/ STR         R3, [R0, #44]               @ 0x2c 
    /*000367a0*/ POP         {R4, PC} 
    VI_HAL_SetMipiYuvSeq_x367a4:
    /*000367a4*/ BL          0x000000000003474C 
    /*000367a8*/ B           VI_HAL_SetMipiYuvSeq_x36788
FUNC_END VI_HAL_SetMipiYuvSeq


FUNC_BEGIN VI_HAL_SetMipiYuvCrop
    /*000367ac*/ CMP         R0, #2 
    /*000367b0*/ PUSH        {R4, LR} 
    /*000367b4*/ MOV         R4, R1 
    /*000367b8*/ BHI         VI_HAL_SetMipiYuvCrop_x36808
    /*000367bc*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000367c0*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000367c4*/ ADD         R3, R0, #16 
    /*000367c8*/ LDR         R0, [R2, #8] 
    /*000367cc*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetMipiYuvCrop_x367d0:
    /*000367d0*/ LDM         R4, {R1, R2} 
    /*000367d4*/ LDR         R3, [R0, #48]               @ 0x30 
    /*000367d8*/ BFI         R3, R1, #0, #16 
    /*000367dc*/ BFI         R3, R2, #16, #16 
    /*000367e0*/ STR         R3, [R0, #48]               @ 0x30 
    /*000367e4*/ LDR         R1, [R4, #8] 
    /*000367e8*/ LDR         R3, [R0, #52]               @ 0x34 
    /*000367ec*/ LDR         R2, [R4, #12] 
    /*000367f0*/ SUB         R1, R1, #1 
    /*000367f4*/ BFI         R3, R1, #0, #16 
    /*000367f8*/ SUB         R2, R2, #1 
    /*000367fc*/ BFI         R3, R2, #16, #16 
    /*00036800*/ STR         R3, [R0, #52]               @ 0x34 
    /*00036804*/ POP         {R4, PC} 
    VI_HAL_SetMipiYuvCrop_x36808:
    /*00036808*/ BL          0x000000000003474C 
    /*0003680c*/ B           VI_HAL_SetMipiYuvCrop_x367d0
FUNC_END VI_HAL_SetMipiYuvCrop


FUNC_BEGIN VI_HAL_GetFeWchIntStatus
    /*00036810*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036814*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036818*/ LDR         R3, [R3, #8] 
    /*0003681c*/ ADD         R0, R3, R0, LSL #12 
    /*00036820*/ ADD         R0, R0, #65536              @ 0x10000 
    /*00036824*/ LDR         R0, [R0, #240]              @ 0xf0 
    /*00036828*/ BX          LR 
FUNC_END VI_HAL_GetFeWchIntStatus


FUNC_BEGIN VI_HAL_SetPortSelect
    /*0003682c*/ PUSH        {R4, R5, R6, LR} 
    /*00036830*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036834*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036838*/ CMP         R0, #0 
    /*0003683c*/ LDR         R3, [R4, #8] 
    /*00036840*/ LDR         R5, [R3, #32] 
    /*00036844*/ BNE         VI_HAL_SetPortSelect_x3685c
    /*00036848*/ MOV         R2, R5 
    /*0003684c*/ BFI         R2, R1, #0, #1 
    /*00036850*/ MOV         R5, R2 
    /*00036854*/ STR         R5, [R3, #32] 
    /*00036858*/ POP         {R4, R5, R6, PC} 
    VI_HAL_SetPortSelect_x3685c:
    /*0003685c*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11724] 
    /*00036860*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11728] 
    /*00036864*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11724] 
    /*00036868*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11728] 
    /*0003686c*/ MOVW        R2, #3002                   @ 0xbba 
    /*00036870*/ LDR         R1, [PC, #12]               @ 0x0000000000036884 
    /*00036874*/ BL          0x0000000000036874          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00036878*/ LDR         R3, [R4, #8] 
    /*0003687c*/ STR         R5, [R3, #32] 
    /*00036880*/ POP         {R4, R5, R6, PC} 
    /*00036884*/ ANDEQ       R2, R0, R0, LSR #4 
FUNC_END VI_HAL_SetPortSelect


FUNC_BEGIN VI_HAL_CapSetOutstanding
    /*00036888*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*0003688c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036890*/ ADD         R0, R3, R0, LSL #2 
    /*00036894*/ SUB         R1, R1, #1 
    /*00036898*/ SUB         R2, R2, #1 
    /*0003689c*/ LDR         R0, [R0, #8] 
    /*000368a0*/ LDR         R3, [R0, #16] 
    /*000368a4*/ BFI         R3, R1, #8, #4 
    /*000368a8*/ BFI         R3, R2, #4, #4 
    /*000368ac*/ STR         R3, [R0, #16] 
    /*000368b0*/ BX          LR 
FUNC_END VI_HAL_CapSetOutstanding


FUNC_BEGIN VI_HAL_CapMemPowerEnable
    /*000368b4*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000368b8*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000368bc*/ ADD         R0, R3, R0, LSL #2 
    /*000368c0*/ LDR         R2, [R0, #8] 
    /*000368c4*/ LDR         R3, [R2] 
    /*000368c8*/ BFI         R3, R1, #0, #1 
    /*000368cc*/ STR         R3, [R2] 
    /*000368d0*/ BX          LR 
FUNC_END VI_HAL_CapMemPowerEnable


FUNC_BEGIN VI_HAL_SetDSFConfig
    /*000368d4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000368d8*/ ADD         R3, R0, #4096               @ 0x1000 
    /*000368dc*/ LDR         R2, [R0] 
    /*000368e0*/ LDR         IP, [R1, #32] 
    /*000368e4*/ BFI         R2, IP, #19, #1 
    /*000368e8*/ STR         R2, [R0] 
    /*000368ec*/ LDR         IP, [R1, #24] 
    /*000368f0*/ LDR         R2, [R0, #1472]             @ 0x5c0 
    /*000368f4*/ SUBS        IP, IP, #8 
    /*000368f8*/ LDR         LR, [R1] 
    /*000368fc*/ MOVNE       IP, #1 
    /*00036900*/ BFI         R2, IP, #8, #4 
    /*00036904*/ BFI         R2, LR, #31, #1 
    /*00036908*/ STR         R2, [R0, #1472]             @ 0x5c0 
    /*0003690c*/ LDR         R2, [R0, #1484]             @ 0x5cc 
    /*00036910*/ LDRH        IP, [R1, #16] 
    /*00036914*/ BFI         R2, IP, #0, #16 
    /*00036918*/ STR         R2, [R0, #1484]             @ 0x5cc 
    /*0003691c*/ LDR         LR, [R1, #52]               @ 0x34 
    /*00036920*/ LDR         R2, [R0, #1468]             @ 0x5bc 
    /*00036924*/ LDR         IP, [R1, #68]               @ 0x44 
    /*00036928*/ SUB         LR, LR, #1 
    /*0003692c*/ BFI         R2, LR, #0, #16 
    /*00036930*/ SUB         IP, IP, #1 
    /*00036934*/ BFI         R2, IP, #16, #16 
    /*00036938*/ STR         R2, [R0, #1468]             @ 0x5bc 
    /*0003693c*/ LDR         R2, [R1, #8] 
    /*00036940*/ STR         R2, [R0, #1476]             @ 0x5c4 
    /*00036944*/ LDR         R2, [R3, #1808]             @ 0x710 
    /*00036948*/ BFC         R2, #0, #1 
    /*0003694c*/ STR         R2, [R3, #1808]             @ 0x710 
    /*00036950*/ LDR         R2, [R3, #1812]             @ 0x714 
    /*00036954*/ LDR         IP, [R1, #40]               @ 0x28 
    /*00036958*/ LDR         R0, [R1, #44]               @ 0x2c 
    /*0003695c*/ BFI         R2, IP, #0, #13 
    /*00036960*/ SUB         R0, R0, #1 
    /*00036964*/ BFI         R2, R0, #16, #13 
    /*00036968*/ STR         R2, [R3, #1812]             @ 0x714 
    /*0003696c*/ LDR         R2, [R3, #1816]             @ 0x718 
    /*00036970*/ LDR         IP, [R1, #48]               @ 0x30 
    /*00036974*/ LDR         R0, [R1, #52]               @ 0x34 
    /*00036978*/ BFI         R2, IP, #0, #13 
    /*0003697c*/ SUB         R0, R0, #1 
    /*00036980*/ BFI         R2, R0, #16, #13 
    /*00036984*/ STR         R2, [R3, #1816]             @ 0x718 
    /*00036988*/ LDR         R2, [R3, #1828]             @ 0x724 
    /*0003698c*/ LDR         IP, [R1, #56]               @ 0x38 
    /*00036990*/ LDR         R0, [R1, #60]               @ 0x3c 
    /*00036994*/ BFI         R2, IP, #0, #13 
    /*00036998*/ SUB         R0, R0, #1 
    /*0003699c*/ BFI         R2, R0, #16, #13 
    /*000369a0*/ STR         R2, [R3, #1828]             @ 0x724 
    /*000369a4*/ LDR         R2, [R3, #1832]             @ 0x728 
    /*000369a8*/ LDR         IP, [R1, #64]               @ 0x40 
    /*000369ac*/ LDR         R0, [R1, #68]               @ 0x44 
    /*000369b0*/ BFI         R2, IP, #0, #13 
    /*000369b4*/ SUB         R0, R0, #1 
    /*000369b8*/ BFI         R2, R0, #16, #13 
    /*000369bc*/ STR         R2, [R3, #1832]             @ 0x728 
    /*000369c0*/ LDR         R2, [R3, #1840]             @ 0x730 
    /*000369c4*/ LDR         R0, [R1, #72]               @ 0x48 
    /*000369c8*/ BFI         R2, R0, #0, #1 
    /*000369cc*/ STR         R2, [R3, #1840]             @ 0x730 
    /*000369d0*/ LDR         R2, [R3, #1844]             @ 0x734 
    /*000369d4*/ LDR         R0, [R1, #76]               @ 0x4c 
    /*000369d8*/ BFI         R2, R0, #0, #5 
    /*000369dc*/ STR         R2, [R3, #1844]             @ 0x734 
    /*000369e0*/ LDR         IP, [R1, #80]               @ 0x50 
    /*000369e4*/ LDR         R2, [R3, #1848]             @ 0x738 
    /*000369e8*/ LDR         R0, [R1, #84]               @ 0x54 
    /*000369ec*/ SUB         IP, IP, #1 
    /*000369f0*/ BFI         R2, IP, #0, #13 
    /*000369f4*/ SUB         R0, R0, #1 
    /*000369f8*/ BFI         R2, R0, #16, #13 
    /*000369fc*/ STR         R2, [R3, #1848]             @ 0x738 
    /*00036a00*/ LDR         R2, [R3, #1852]             @ 0x73c 
    /*00036a04*/ LDR         R1, [R1, #88]               @ 0x58 
    /*00036a08*/ BFI         R2, R1, #0, #1 
    /*00036a0c*/ STR         R2, [R3, #1852]             @ 0x73c 
    /*00036a10*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_HAL_SetDSFConfig


FUNC_BEGIN VI_HAL_SetDevAutoTimingEn
    /*00036a14*/ CMP         R0, #2 
    /*00036a18*/ PUSH        {R4, LR} 
    /*00036a1c*/ MOV         R4, R1 
    /*00036a20*/ BHI         VI_HAL_SetDevAutoTimingEn_x36a58
    /*00036a24*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036a28*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036a2c*/ ADD         R3, R0, #16 
    /*00036a30*/ LDR         R0, [R2, #8] 
    /*00036a34*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetDevAutoTimingEn_x36a38:
    /*00036a38*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*00036a3c*/ AND         R1, R4, #1 
    /*00036a40*/ BFI         R3, R1, #30, #1 
    /*00036a44*/ BFI         R3, R1, #1, #1 
    /*00036a48*/ BFI         R3, R1, #2, #1 
    /*00036a4c*/ BFI         R3, R1, #31, #1 
    /*00036a50*/ STR         R3, [R0, #60]               @ 0x3c 
    /*00036a54*/ POP         {R4, PC} 
    VI_HAL_SetDevAutoTimingEn_x36a58:
    /*00036a58*/ BL          0x000000000003474C 
    /*00036a5c*/ B           VI_HAL_SetDevAutoTimingEn_x36a38
FUNC_END VI_HAL_SetDevAutoTimingEn


FUNC_BEGIN VI_HAL_SetDevTimingHfb
    /*00036a60*/ CMP         R0, #2 
    /*00036a64*/ PUSH        {R4, LR} 
    /*00036a68*/ MOV         R4, R1 
    /*00036a6c*/ BHI         VI_HAL_SetDevTimingHfb_x36a94
    /*00036a70*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036a74*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036a78*/ ADD         R3, R0, #16 
    /*00036a7c*/ LDR         R0, [R2, #8] 
    /*00036a80*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetDevTimingHfb_x36a84:
    /*00036a84*/ LDR         R3, [R0, #128]              @ 0x80 
    /*00036a88*/ BFI         R3, R4, #0, #16 
    /*00036a8c*/ STR         R3, [R0, #128]              @ 0x80 
    /*00036a90*/ POP         {R4, PC} 
    VI_HAL_SetDevTimingHfb_x36a94:
    /*00036a94*/ BL          0x000000000003474C 
    /*00036a98*/ B           VI_HAL_SetDevTimingHfb_x36a84
FUNC_END VI_HAL_SetDevTimingHfb


FUNC_BEGIN VI_HAL_SetDevTimingHact
    /*00036a9c*/ CMP         R0, #2 
    /*00036aa0*/ PUSH        {R4, LR} 
    /*00036aa4*/ MOV         R4, R1 
    /*00036aa8*/ BHI         VI_HAL_SetDevTimingHact_x36ac8
    /*00036aac*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036ab0*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036ab4*/ ADD         R0, R0, #16 
    /*00036ab8*/ LDR         R3, [R3, #8] 
    /*00036abc*/ ADD         R0, R3, R0, LSL #8 
    /*00036ac0*/ STR         R4, [R0, #132]              @ 0x84 
    /*00036ac4*/ POP         {R4, PC} 
    VI_HAL_SetDevTimingHact_x36ac8:
    /*00036ac8*/ BL          0x000000000003474C 
    /*00036acc*/ STR         R4, [R0, #132]              @ 0x84 
    /*00036ad0*/ POP         {R4, PC} 
FUNC_END VI_HAL_SetDevTimingHact


FUNC_BEGIN VI_HAL_SetDevTimingHbb
    /*00036ad4*/ CMP         R0, #2 
    /*00036ad8*/ PUSH        {R4, LR} 
    /*00036adc*/ MOV         R4, R1 
    /*00036ae0*/ BHI         VI_HAL_SetDevTimingHbb_x36b08
    /*00036ae4*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036ae8*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036aec*/ ADD         R3, R0, #16 
    /*00036af0*/ LDR         R0, [R2, #8] 
    /*00036af4*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetDevTimingHbb_x36af8:
    /*00036af8*/ LDR         R3, [R0, #136]              @ 0x88 
    /*00036afc*/ BFI         R3, R4, #0, #16 
    /*00036b00*/ STR         R3, [R0, #136]              @ 0x88 
    /*00036b04*/ POP         {R4, PC} 
    VI_HAL_SetDevTimingHbb_x36b08:
    /*00036b08*/ BL          0x000000000003474C 
    /*00036b0c*/ B           VI_HAL_SetDevTimingHbb_x36af8
FUNC_END VI_HAL_SetDevTimingHbb


FUNC_BEGIN VI_HAL_SetDevTimingVfb
    /*00036b10*/ CMP         R0, #2 
    /*00036b14*/ PUSH        {R4, LR} 
    /*00036b18*/ MOV         R4, R1 
    /*00036b1c*/ BHI         VI_HAL_SetDevTimingVfb_x36b44
    /*00036b20*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036b24*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036b28*/ ADD         R3, R0, #16 
    /*00036b2c*/ LDR         R0, [R2, #8] 
    /*00036b30*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetDevTimingVfb_x36b34:
    /*00036b34*/ LDR         R3, [R0, #140]              @ 0x8c 
    /*00036b38*/ BFI         R3, R4, #0, #16 
    /*00036b3c*/ STR         R3, [R0, #140]              @ 0x8c 
    /*00036b40*/ POP         {R4, PC} 
    VI_HAL_SetDevTimingVfb_x36b44:
    /*00036b44*/ BL          0x000000000003474C 
    /*00036b48*/ B           VI_HAL_SetDevTimingVfb_x36b34
FUNC_END VI_HAL_SetDevTimingVfb


FUNC_BEGIN VI_HAL_SetDevTimingVact
    /*00036b4c*/ CMP         R0, #2 
    /*00036b50*/ PUSH        {R4, LR} 
    /*00036b54*/ MOV         R4, R1 
    /*00036b58*/ BHI         VI_HAL_SetDevTimingVact_x36b80
    /*00036b5c*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036b60*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036b64*/ ADD         R3, R0, #16 
    /*00036b68*/ LDR         R0, [R2, #8] 
    /*00036b6c*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetDevTimingVact_x36b70:
    /*00036b70*/ LDR         R3, [R0, #144]              @ 0x90 
    /*00036b74*/ BFI         R3, R4, #0, #16 
    /*00036b78*/ STR         R3, [R0, #144]              @ 0x90 
    /*00036b7c*/ POP         {R4, PC} 
    VI_HAL_SetDevTimingVact_x36b80:
    /*00036b80*/ BL          0x000000000003474C 
    /*00036b84*/ B           VI_HAL_SetDevTimingVact_x36b70
FUNC_END VI_HAL_SetDevTimingVact


FUNC_BEGIN VI_HAL_SetDevTimingVbb
    /*00036b88*/ CMP         R0, #2 
    /*00036b8c*/ PUSH        {R4, LR} 
    /*00036b90*/ MOV         R4, R1 
    /*00036b94*/ BHI         VI_HAL_SetDevTimingVbb_x36bbc
    /*00036b98*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036b9c*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036ba0*/ ADD         R3, R0, #16 
    /*00036ba4*/ LDR         R0, [R2, #8] 
    /*00036ba8*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_SetDevTimingVbb_x36bac:
    /*00036bac*/ LDR         R3, [R0, #148]              @ 0x94 
    /*00036bb0*/ BFI         R3, R4, #0, #16 
    /*00036bb4*/ STR         R3, [R0, #148]              @ 0x94 
    /*00036bb8*/ POP         {R4, PC} 
    VI_HAL_SetDevTimingVbb_x36bbc:
    /*00036bbc*/ BL          0x000000000003474C 
    /*00036bc0*/ B           VI_HAL_SetDevTimingVbb_x36bac
FUNC_END VI_HAL_SetDevTimingVbb


FUNC_BEGIN VI_HAL_SetAfifoCrop
    /*00036bc4*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00036bc8*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00036bcc*/ LDR         IP, [R1] 
    /*00036bd0*/ LDR         R3, [R3, #8] 
    /*00036bd4*/ LDR         R2, [R1, #4] 
    /*00036bd8*/ ADD         R0, R3, R0, LSL #4 
    /*00036bdc*/ LDR         R3, [R0, #776]              @ 0x308 
    /*00036be0*/ BFI         R3, IP, #0, #16 
    /*00036be4*/ BFI         R3, R2, #16, #16 
    /*00036be8*/ STR         R3, [R0, #776]              @ 0x308 
    /*00036bec*/ LDR         IP, [R1, #8] 
    /*00036bf0*/ LDR         R2, [R1, #12] 
    /*00036bf4*/ LDR         R3, [R0, #780]              @ 0x30c 
    /*00036bf8*/ SUB         R1, IP, #1 
    /*00036bfc*/ SUB         R2, R2, #1 
    /*00036c00*/ BFI         R3, R1, #0, #16 
    /*00036c04*/ BFI         R3, R2, #16, #16 
    /*00036c08*/ STR         R3, [R0, #780]              @ 0x30c 
    /*00036c0c*/ BX          LR 
FUNC_END VI_HAL_SetAfifoCrop


FUNC_BEGIN VI_HAL_SetFpnDataSource
    /*00036c10*/ LDR         R3, [R0] 
    /*00036c14*/ CMP         R1, #1 
    /*00036c18*/ AND         R1, R1, #1 
    /*00036c1c*/ BFI         R3, R1, #22, #1 
    /*00036c20*/ BFIEQ       R3, R1, #21, #1 
    /*00036c24*/ BFIEQ       R3, R1, #20, #1 
    /*00036c28*/ STR         R3, [R0] 
    /*00036c2c*/ BX          LR 
FUNC_END VI_HAL_SetFpnDataSource


FUNC_BEGIN VI_HAL_SetFpnCorrectDataSource
    /*00036c30*/ LDR         R3, [R0] 
    /*00036c34*/ CMP         R1, #1 
    /*00036c38*/ AND         R1, R1, #1 
    /*00036c3c*/ BFCEQ       R3, #22, #1 
    /*00036c40*/ BFI         R3, R1, #21, #1 
    /*00036c44*/ BFI         R3, R1, #20, #1 
    /*00036c48*/ STR         R3, [R0] 
    /*00036c4c*/ BX          LR 
FUNC_END VI_HAL_SetFpnCorrectDataSource


FUNC_BEGIN VI_HAL_SetFpnOutEnable
    /*00036c50*/ LDR         R3, [R0, #1368]             @ 0x558 
    /*00036c54*/ BFI         R3, R1, #31, #1 
    /*00036c58*/ STR         R3, [R0, #1368]             @ 0x558 
    /*00036c5c*/ BX          LR 
FUNC_END VI_HAL_SetFpnOutEnable


FUNC_BEGIN VI_HAL_SetFpnOutMemInfo
    /*00036c60*/ LDR         R3, [R1] 
    /*00036c64*/ STR         R3, [R0, #1396]             @ 0x574 
    /*00036c68*/ LDR         R3, [R0, #1412]             @ 0x584 
    /*00036c6c*/ LDR         R2, [R1, #12] 
    /*00036c70*/ BFI         R3, R2, #0, #16 
    /*00036c74*/ STR         R3, [R0, #1412]             @ 0x584 
    /*00036c78*/ BX          LR 
FUNC_END VI_HAL_SetFpnOutMemInfo


FUNC_BEGIN VI_HAL_SetFpnOutPackWidth
    /*00036c7c*/ CMP         R1, #8 
    /*00036c80*/ LDR         R3, [R0, #1368]             @ 0x558 
    /*00036c84*/ BEQ         VI_HAL_SetFpnOutPackWidth_x36cc0
    /*00036c88*/ CMP         R1, #10 
    /*00036c8c*/ MOVEQ       R2, #1 
    /*00036c90*/ BFIEQ       R3, R2, #8, #4 
    /*00036c94*/ BEQ         VI_HAL_SetFpnOutPackWidth_x36cc4
    /*00036c98*/ CMP         R1, #12 
    /*00036c9c*/ MOVEQ       R2, #2 
    /*00036ca0*/ BFIEQ       R3, R2, #8, #4 
    /*00036ca4*/ BEQ         VI_HAL_SetFpnOutPackWidth_x36cc4
    /*00036ca8*/ CMP         R1, #14 
    /*00036cac*/ MOVEQ       R2, #3 
    /*00036cb0*/ BFIEQ       R3, R2, #8, #4 
    /*00036cb4*/ BEQ         VI_HAL_SetFpnOutPackWidth_x36cc4
    /*00036cb8*/ CMP         R1, #16 
    /*00036cbc*/ BEQ         VI_HAL_SetFpnOutPackWidth_x36cd4
    VI_HAL_SetFpnOutPackWidth_x36cc0:
    /*00036cc0*/ BFC         R3, #8, #4 
    VI_HAL_SetFpnOutPackWidth_x36cc4:
    /*00036cc4*/ MOV         R2, #2 
    /*00036cc8*/ BFI         R3, R2, #12, #6 
    /*00036ccc*/ STR         R3, [R0, #1368]             @ 0x558 
    /*00036cd0*/ BX          LR 
    VI_HAL_SetFpnOutPackWidth_x36cd4:
    /*00036cd4*/ MOV         R2, #4 
    /*00036cd8*/ BFI         R3, R2, #8, #4 
    /*00036cdc*/ B           VI_HAL_SetFpnOutPackWidth_x36cc4
FUNC_END VI_HAL_SetFpnOutPackWidth


FUNC_BEGIN VI_HAL_SetFpnOutYCSize
    /*00036ce0*/ LDR         IP, [R2, #4] 
    /*00036ce4*/ CMP         R1, #8 
    /*00036ce8*/ LDR         R3, [R0, #1364]             @ 0x554 
    /*00036cec*/ LDR         R2, [R2] 
    /*00036cf0*/ SUB         IP, IP, #1 
    /*00036cf4*/ BFI         R3, IP, #16, #16 
    /*00036cf8*/ SUB         R2, R2, #1 
    /*00036cfc*/ BFI         R3, R2, #0, #16 
    /*00036d00*/ STR         R3, [R0, #1364]             @ 0x554 
    /*00036d04*/ LDR         R3, [R0, #1368]             @ 0x558 
    /*00036d08*/ BEQ         VI_HAL_SetFpnOutYCSize_x36d54
    /*00036d0c*/ CMP         R1, #10 
    /*00036d10*/ MOVEQ       R2, #1 
    /*00036d14*/ BFIEQ       R3, R2, #8, #4 
    /*00036d18*/ BEQ         VI_HAL_SetFpnOutYCSize_x36d58
    /*00036d1c*/ CMP         R1, #12 
    /*00036d20*/ MOVEQ       R2, #2 
    /*00036d24*/ BFIEQ       R3, R2, #8, #4 
    /*00036d28*/ BEQ         VI_HAL_SetFpnOutYCSize_x36d58
    /*00036d2c*/ CMP         R1, #14 
    /*00036d30*/ MOVEQ       R2, #3 
    /*00036d34*/ BFIEQ       R3, R2, #8, #4 
    /*00036d38*/ BEQ         VI_HAL_SetFpnOutYCSize_x36d58
    /*00036d3c*/ CMP         R1, #16 
    /*00036d40*/ MOVEQ       R2, #4 
    /*00036d44*/ BFIEQ       R3, R2, #8, #4 
    /*00036d48*/ BEQ         VI_HAL_SetFpnOutYCSize_x36d58
    /*00036d4c*/ CMP         R1, #32 
    /*00036d50*/ BEQ         VI_HAL_SetFpnOutYCSize_x36d60
    VI_HAL_SetFpnOutYCSize_x36d54:
    /*00036d54*/ BFC         R3, #8, #4 
    VI_HAL_SetFpnOutYCSize_x36d58:
    /*00036d58*/ STR         R3, [R0, #1368]             @ 0x558 
    /*00036d5c*/ BX          LR 
    VI_HAL_SetFpnOutYCSize_x36d60:
    /*00036d60*/ MOV         R2, #8 
    /*00036d64*/ BFI         R3, R2, #8, #4 
    /*00036d68*/ B           VI_HAL_SetFpnOutYCSize_x36d58
FUNC_END VI_HAL_SetFpnOutYCSize


FUNC_BEGIN VI_HAL_SetFpnOutCropEn
    /*00036d6c*/ LDR         R3, [R0] 
    /*00036d70*/ BFI         R3, R1, #0, #1 
    /*00036d74*/ STR         R3, [R0] 
    /*00036d78*/ BX          LR 
FUNC_END VI_HAL_SetFpnOutCropEn


FUNC_BEGIN VI_HAL_SetFpnInEnable
    /*00036d7c*/ LDR         R3, [R0, #1084]             @ 0x43c 
    /*00036d80*/ BFI         R3, R1, #31, #1 
    /*00036d84*/ STR         R3, [R0, #1084]             @ 0x43c 
    /*00036d88*/ BX          LR 
FUNC_END VI_HAL_SetFpnInEnable


FUNC_BEGIN VI_HAL_SetFpnInYCSize
    /*00036d8c*/ LDR         IP, [R2, #4] 
    /*00036d90*/ CMP         R1, #8 
    /*00036d94*/ LDR         R3, [R0, #1080]             @ 0x438 
    /*00036d98*/ LDR         R2, [R2] 
    /*00036d9c*/ SUB         IP, IP, #1 
    /*00036da0*/ BFI         R3, IP, #16, #16 
    /*00036da4*/ SUB         R2, R2, #1 
    /*00036da8*/ BFI         R3, R2, #0, #16 
    /*00036dac*/ STR         R3, [R0, #1080]             @ 0x438 
    /*00036db0*/ LDR         R3, [R0, #1084]             @ 0x43c 
    /*00036db4*/ BEQ         VI_HAL_SetFpnInYCSize_x36e00
    /*00036db8*/ CMP         R1, #10 
    /*00036dbc*/ MOVEQ       R2, #1 
    /*00036dc0*/ BFIEQ       R3, R2, #8, #4 
    /*00036dc4*/ BEQ         VI_HAL_SetFpnInYCSize_x36e04
    /*00036dc8*/ CMP         R1, #12 
    /*00036dcc*/ MOVEQ       R2, #2 
    /*00036dd0*/ BFIEQ       R3, R2, #8, #4 
    /*00036dd4*/ BEQ         VI_HAL_SetFpnInYCSize_x36e04
    /*00036dd8*/ CMP         R1, #14 
    /*00036ddc*/ MOVEQ       R2, #3 
    /*00036de0*/ BFIEQ       R3, R2, #8, #4 
    /*00036de4*/ BEQ         VI_HAL_SetFpnInYCSize_x36e04
    /*00036de8*/ CMP         R1, #16 
    /*00036dec*/ MOVEQ       R2, #4 
    /*00036df0*/ BFIEQ       R3, R2, #8, #4 
    /*00036df4*/ BEQ         VI_HAL_SetFpnInYCSize_x36e04
    /*00036df8*/ CMP         R1, #32 
    /*00036dfc*/ BEQ         VI_HAL_SetFpnInYCSize_x36e0c
    VI_HAL_SetFpnInYCSize_x36e00:
    /*00036e00*/ BFC         R3, #8, #4 
    VI_HAL_SetFpnInYCSize_x36e04:
    /*00036e04*/ STR         R3, [R0, #1084]             @ 0x43c 
    /*00036e08*/ BX          LR 
    VI_HAL_SetFpnInYCSize_x36e0c:
    /*00036e0c*/ MOV         R2, #8 
    /*00036e10*/ BFI         R3, R2, #8, #4 
    /*00036e14*/ B           VI_HAL_SetFpnInYCSize_x36e04
FUNC_END VI_HAL_SetFpnInYCSize


FUNC_BEGIN VI_HAL_SetFpnInMemInfo
    /*00036e18*/ LDR         R3, [R1] 
    /*00036e1c*/ STR         R3, [R0, #1104]             @ 0x450 
    /*00036e20*/ LDR         R3, [R0, #1112]             @ 0x458 
    /*00036e24*/ LDR         R2, [R1, #12] 
    /*00036e28*/ BFI         R3, R2, #0, #16 
    /*00036e2c*/ STR         R3, [R0, #1112]             @ 0x458 
    /*00036e30*/ BX          LR 
FUNC_END VI_HAL_SetFpnInMemInfo


FUNC_BEGIN VI_HAL_SetFpnCorrectEn
    /*00036e34*/ ADD         R0, R0, #12288              @ 0x3000 
    /*00036e38*/ LDR         R3, [R0, #2568]             @ 0xa08 
    /*00036e3c*/ BFI         R3, R1, #0, #1 
    /*00036e40*/ STR         R3, [R0, #2568]             @ 0xa08 
    /*00036e44*/ BX          LR 
FUNC_END VI_HAL_SetFpnCorrectEn


FUNC_BEGIN VI_HAL_SetFpnCfg
    /*00036e48*/ ADD         R0, R0, #12288              @ 0x3000 
    /*00036e4c*/ LDR         R3, [R0, #2560]             @ 0xa00 
    /*00036e50*/ BFC         R3, #10, #1 
    /*00036e54*/ STR         R3, [R0, #2560]             @ 0xa00 
    /*00036e58*/ BX          LR 
FUNC_END VI_HAL_SetFpnCfg


FUNC_BEGIN VI_HAL_SetFpnEn
    /*00036e5c*/ LDR         R3, [R0, #32] 
    /*00036e60*/ BFI         R3, R2, #1, #1 
    /*00036e64*/ BFI         R3, R1, #2, #1 
    /*00036e68*/ STR         R3, [R0, #32] 
    /*00036e6c*/ BX          LR 
FUNC_END VI_HAL_SetFpnEn


FUNC_BEGIN VI_HAL_SetFpnWhiteLevel
    /*00036e70*/ ADD         R0, R0, #12288              @ 0x3000 
    /*00036e74*/ LDR         R3, [R0, #2576]             @ 0xa10 
    /*00036e78*/ BFI         R3, R1, #0, #14 
    /*00036e7c*/ STR         R3, [R0, #2576]             @ 0xa10 
    /*00036e80*/ BX          LR 
FUNC_END VI_HAL_SetFpnWhiteLevel


FUNC_BEGIN VI_HAL_SetFpnFrameNum
    /*00036e84*/ ADD         R0, R0, #12288              @ 0x3000 
    /*00036e88*/ LDR         R3, [R0, #2588]             @ 0xa1c 
    /*00036e8c*/ BFI         R3, R1, #0, #3 
    /*00036e90*/ STR         R3, [R0, #2588]             @ 0xa1c 
    /*00036e94*/ BX          LR 
FUNC_END VI_HAL_SetFpnFrameNum


FUNC_BEGIN VI_HAL_GetIspFcnt
    /*00036e98*/ LDR         R0, [R0, #176]              @ 0xb0 
    /*00036e9c*/ BX          LR 
FUNC_END VI_HAL_GetIspFcnt


FUNC_BEGIN VI_HAL_SetFpnDarkFrameBitWidth
    /*00036ea0*/ ADD         R0, R0, #12288              @ 0x3000 
    /*00036ea4*/ CMP         R1, #0 
    /*00036ea8*/ PUSH        {R4, LR} 
    /*00036eac*/ LDR         IP, [R0, #2624]             @ 0xa40 
    /*00036eb0*/ LDR         LR, [R0, #2640]             @ 0xa50 
    /*00036eb4*/ BNE         VI_HAL_SetFpnDarkFrameBitWidth_x36ee8
    /*00036eb8*/ LDR         R4, [SP, #8] 
    /*00036ebc*/ CMP         R4, #21 
    /*00036ec0*/ BEQ         VI_HAL_SetFpnDarkFrameBitWidth_x36f08
    /*00036ec4*/ CMP         R2, #0 
    /*00036ec8*/ BNE         VI_HAL_SetFpnDarkFrameBitWidth_x36ef4
    /*00036ecc*/ MOV         R3, #4 
    /*00036ed0*/ BFI         IP, R3, #0, #4 
    /*00036ed4*/ BFI         IP, R2, #24, #4 
    VI_HAL_SetFpnDarkFrameBitWidth_x36ed8:
    /*00036ed8*/ BFC         IP, #8, #4 
    /*00036edc*/ MOVW        R3, #16383                  @ 0x3fff 
    /*00036ee0*/ BFC         IP, #16, #4 
    /*00036ee4*/ BFI         LR, R3, #0, #16 
    VI_HAL_SetFpnDarkFrameBitWidth_x36ee8:
    /*00036ee8*/ STR         IP, [R0, #2624]             @ 0xa40 
    /*00036eec*/ STR         LR, [R0, #2640]             @ 0xa50 
    /*00036ef0*/ POP         {R4, PC} 
    VI_HAL_SetFpnDarkFrameBitWidth_x36ef4:
    /*00036ef4*/ CMP         R2, #1 
    /*00036ef8*/ BFIEQ       IP, R1, #0, #4 
    /*00036efc*/ MOVEQ       R3, #4 
    /*00036f00*/ BFIEQ       IP, R3, #24, #4 
    /*00036f04*/ B           VI_HAL_SetFpnDarkFrameBitWidth_x36ed8
    VI_HAL_SetFpnDarkFrameBitWidth_x36f08:
    /*00036f08*/ CMP         R3, #14 
    /*00036f0c*/ BEQ         VI_HAL_SetFpnDarkFrameBitWidth_x36f90
    /*00036f10*/ CMP         R3, #12 
    /*00036f14*/ BEQ         VI_HAL_SetFpnDarkFrameBitWidth_x36f58
    /*00036f18*/ CMP         R3, #10 
    /*00036f1c*/ BNE         VI_HAL_SetFpnDarkFrameBitWidth_x36ee8
    /*00036f20*/ CMP         R2, #0 
    /*00036f24*/ BFIEQ       IP, R2, #0, #4 
    /*00036f28*/ BFINE       IP, R1, #0, #4 
    /*00036f2c*/ BFIEQ       IP, R2, #24, #4 
    /*00036f30*/ BFINE       IP, R1, #24, #4 
    /*00036f34*/ MOVEQ       R3, #4 
    /*00036f38*/ MOVNE       R3, #4 
    /*00036f3c*/ BFIEQ       IP, R3, #8, #4 
    /*00036f40*/ BFINE       IP, R3, #8, #4 
    /*00036f44*/ BFIEQ       IP, R3, #16, #4 
    /*00036f48*/ BFINE       IP, R1, #16, #4 
    /*00036f4c*/ MOVW        R3, #1023                   @ 0x3ff 
    /*00036f50*/ BFI         LR, R3, #0, #16 
    /*00036f54*/ B           VI_HAL_SetFpnDarkFrameBitWidth_x36ee8
    VI_HAL_SetFpnDarkFrameBitWidth_x36f58:
    /*00036f58*/ CMP         R2, #0 
    /*00036f5c*/ BFIEQ       IP, R2, #0, #4 
    /*00036f60*/ BFINE       IP, R1, #0, #4 
    /*00036f64*/ BFIEQ       IP, R2, #24, #4 
    /*00036f68*/ BFINE       IP, R1, #24, #4 
    /*00036f6c*/ MOVEQ       R3, #2 
    /*00036f70*/ MOVNE       R3, #2 
    /*00036f74*/ BFIEQ       IP, R3, #8, #4 
    /*00036f78*/ BFINE       IP, R3, #8, #4 
    /*00036f7c*/ BFIEQ       IP, R3, #16, #4 
    /*00036f80*/ BFINE       IP, R1, #16, #4 
    /*00036f84*/ MOVW        R3, #4095                   @ 0xfff 
    /*00036f88*/ BFI         LR, R3, #0, #16 
    /*00036f8c*/ B           VI_HAL_SetFpnDarkFrameBitWidth_x36ee8
    VI_HAL_SetFpnDarkFrameBitWidth_x36f90:
    /*00036f90*/ BFI         IP, R1, #0, #4 
    /*00036f94*/ MOV         R3, #2 
    /*00036f98*/ BFI         IP, R1, #24, #4 
    /*00036f9c*/ MOVW        R2, #16383                  @ 0x3fff 
    /*00036fa0*/ BFI         IP, R3, #8, #4 
    /*00036fa4*/ BFI         LR, R2, #0, #16 
    /*00036fa8*/ BFI         IP, R3, #16, #4 
    /*00036fac*/ B           VI_HAL_SetFpnDarkFrameBitWidth_x36ee8
FUNC_END VI_HAL_SetFpnDarkFrameBitWidth


FUNC_BEGIN VI_HAL_SetFpnCalibStart
    /*00036fb0*/ ADD         R0, R0, #12288              @ 0x3000 
    /*00036fb4*/ LDR         R3, [R0, #2564]             @ 0xa04 
    /*00036fb8*/ BFI         R3, R1, #0, #1 
    /*00036fbc*/ STR         R3, [R0, #2564]             @ 0xa04 
    /*00036fc0*/ BX          LR 
FUNC_END VI_HAL_SetFpnCalibStart


FUNC_BEGIN VI_HAL_GetFpnCalibStats
    /*00036fc4*/ ADD         R0, R0, #12288              @ 0x3000 
    /*00036fc8*/ LDR         R0, [R0, #2572]             @ 0xa0c 
    /*00036fcc*/ AND         R0, R0, #1 
    /*00036fd0*/ BX          LR 
FUNC_END VI_HAL_GetFpnCalibStats


FUNC_BEGIN VI_HAL_GetViprocDebug12
    /*00036fd4*/ ADD         R0, R0, #65536              @ 0x10000 
    /*00036fd8*/ LDR         R0, [R0, #192]              @ 0xc0 
    /*00036fdc*/ BX          LR 
FUNC_END VI_HAL_GetViprocDebug12


FUNC_BEGIN VI_HAL_GetViprocDebug13
    /*00036fe0*/ ADD         R0, R0, #65536              @ 0x10000 
    /*00036fe4*/ LDR         R0, [R0, #208]              @ 0xd0 
    /*00036fe8*/ BX          LR 
FUNC_END VI_HAL_GetViprocDebug13


FUNC_BEGIN VI_HAL_GetFpnCalibSum
    /*00036fec*/ ADD         R1, R0, #12288              @ 0x3000 
    /*00036ff0*/ MOV         R2, #0 
    /*00036ff4*/ LDR         R0, [R1, #2592]             @ 0xa20 
    /*00036ff8*/ LDR         R1, [R1, #2596]             @ 0xa24 
    /*00036ffc*/ MOV         R3, R1 
    /*00037000*/ ORR         R2, R2, R0 
    /*00037004*/ MOV         R0, R2 
    /*00037008*/ MOV         R1, R3 
    /*0003700c*/ BX          LR 
FUNC_END VI_HAL_GetFpnCalibSum


FUNC_BEGIN VI_HAL_GetBitWidthByPixFmt
    /*00037010*/ CMP         R0, #17 
    /*00037014*/ BEQ         VI_HAL_GetBitWidthByPixFmt_x3703c
    /*00037018*/ CMP         R0, #18 
    /*0003701c*/ BEQ         VI_HAL_GetBitWidthByPixFmt_x37048
    /*00037020*/ CMP         R0, #19 
    /*00037024*/ BEQ         VI_HAL_GetBitWidthByPixFmt_x37054
    /*00037028*/ CMP         R0, #20 
    /*0003702c*/ MOVEQ       R3, #14 
    /*00037030*/ MOVNE       R3, #16 
    /*00037034*/ STR         R3, [R1] 
    /*00037038*/ BX          LR 
    VI_HAL_GetBitWidthByPixFmt_x3703c:
    /*0003703c*/ MOV         R3, #8 
    /*00037040*/ STR         R3, [R1] 
    /*00037044*/ BX          LR 
    VI_HAL_GetBitWidthByPixFmt_x37048:
    /*00037048*/ MOV         R3, #10 
    /*0003704c*/ STR         R3, [R1] 
    /*00037050*/ BX          LR 
    VI_HAL_GetBitWidthByPixFmt_x37054:
    /*00037054*/ MOV         R3, #12 
    /*00037058*/ STR         R3, [R1] 
    /*0003705c*/ BX          LR 
FUNC_END VI_HAL_GetBitWidthByPixFmt


FUNC_BEGIN VI_HAL_SetFpnSrcCORR
    /*00037060*/ CMP         R1, #0 
    /*00037064*/ ADDEQ       R0, R0, #12288              @ 0x3000 
    /*00037068*/ LDREQ       R3, [R0, #2608]             @ 0xa30 
    /*0003706c*/ BFIEQ       R3, R2, #0, #12 
    /*00037070*/ STREQ       R3, [R0, #2608]             @ 0xa30 
    /*00037074*/ BX          LR 
FUNC_END VI_HAL_SetFpnSrcCORR


FUNC_BEGIN VI_HAL_GetViprocTimeoutFlag
    /*00037078*/ LDR         R0, [R0, #784]              @ 0x310 
    /*0003707c*/ UBFX        R0, R0, #2, #1 
    /*00037080*/ BX          LR 
FUNC_END VI_HAL_GetViprocTimeoutFlag


FUNC_BEGIN VI_HAL_CapRegInit
    /*00037084*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00037088*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*0003708c*/ PUSH        {R4, LR} 
    /*00037090*/ ADD         R4, R3, R0, LSL #2 
    /*00037094*/ MOV         R0, #0 
    /*00037098*/ LDR         R3, [R4, #8] 
    /*0003709c*/ CMP         R3, #0 
    /*000370a0*/ BEQ         VI_HAL_CapRegInit_x370a8
    /*000370a4*/ POP         {R4, PC} 
    VI_HAL_CapRegInit_x370a8:
    /*000370a8*/ MOV         R1, #131072                 @ 0x20000 
    /*000370ac*/ MOVT        R0, #4400                   @ 0x1130 
    /*000370b0*/ BL          0x00000000000370B0          @ osal_ioremap_nocache [R_ARM_CALL: +0x0] 
    /*000370b4*/ CLZ         R3, R0 
    /*000370b8*/ STR         R0, [R4, #8] 
    /*000370bc*/ LSR         R3, R3, #5 
    /*000370c0*/ RSB         R0, R3, #0 
    /*000370c4*/ POP         {R4, PC} 
FUNC_END VI_HAL_CapRegInit


FUNC_BEGIN VI_HAL_CapRegExit
    /*000370c8*/ BX          LR 
FUNC_END VI_HAL_CapRegExit


FUNC_BEGIN VI_HAL_PrintVcapRegStatus
    /*000370cc*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000370d0*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000370d4*/ ADD         R3, R3, R0, LSL #2 
    /*000370d8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000370dc*/ SUB         SP, SP, #8 
    /*000370e0*/ LDR         R6, [R3, #8] 
    /*000370e4*/ CMP         R6, #0 
    /*000370e8*/ BEQ         VI_HAL_PrintVcapRegStatus_x37164
    /*000370ec*/ MOV         R1, R0 
    /*000370f0*/ MOVW        R0, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x117b4] 
    /*000370f4*/ MOVT        R0, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x117b4] 
    /*000370f8*/ ADD         R8, R6, #65536              @ 0x10000 
    /*000370fc*/ BL          0x00000000000370FC          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00037100*/ MOVW        R7, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x117f0] 
    /*00037104*/ ADD         R8, R8, #512                @ 0x200 
    /*00037108*/ MOVT        R7, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x117f0] 
    /*0003710c*/ MOV         R4, R6 
    VI_HAL_PrintVcapRegStatus_x37110:
    /*00037110*/ ADD         R5, R4, #256                @ 0x100 
    VI_HAL_PrintVcapRegStatus_x37114:
    /*00037114*/ LDR         IP, [R4, #12] 
    /*00037118*/ SUB         R1, R4, R6 
    /*0003711c*/ LDR         R3, [R4, #4] 
    /*00037120*/ MOV         R0, R7 
    /*00037124*/ LDR         R2, [R4] 
    /*00037128*/ ADD         R4, R4, #16 
    /*0003712c*/ STR         IP, [SP, #4] 
    /*00037130*/ LDR         IP, [R4, #-8] 
    /*00037134*/ STR         IP, [SP] 
    /*00037138*/ BL          0x0000000000037138          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0003713c*/ CMP         R5, R4 
    /*00037140*/ BNE         VI_HAL_PrintVcapRegStatus_x37114
    /*00037144*/ CMP         R5, R8 
    /*00037148*/ MOV         R4, R5 
    /*0003714c*/ BNE         VI_HAL_PrintVcapRegStatus_x37110
    /*00037150*/ MOVW        R0, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1180c] 
    /*00037154*/ MOVT        R0, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1180c] 
    /*00037158*/ ADD         SP, SP, #8 
    /*0003715c*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_HAL_PrintVcapRegStatus_x37160:
    /*00037160*/ B           VI_HAL_PrintVcapRegStatus_x37160@ osal_printk [R_ARM_JUMP24: +0x0] 
    VI_HAL_PrintVcapRegStatus_x37164:
    /*00037164*/ ADD         SP, SP, #8 
    /*00037168*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_HAL_PrintVcapRegStatus


FUNC_BEGIN VI_HAL_PrintRegStatus
    /*0003716c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00037170*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00037174*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00037178*/ SUB         SP, SP, #8 
    /*0003717c*/ LDR         R6, [R3, R0, LSL #2] 
    /*00037180*/ CMP         R6, #0 
    /*00037184*/ BEQ         VI_HAL_PrintRegStatus_x371fc
    /*00037188*/ MOV         R1, R0 
    /*0003718c*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11810] 
    /*00037190*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11810] 
    /*00037194*/ MOVW        R7, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x117f0] 
    /*00037198*/ BL          0x0000000000037198          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0003719c*/ MOVT        R7, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x117f0] 
    /*000371a0*/ ADD         R8, R6, #20480              @ 0x5000 
    /*000371a4*/ MOV         R4, R6 
    VI_HAL_PrintRegStatus_x371a8:
    /*000371a8*/ ADD         R5, R4, #256                @ 0x100 
    VI_HAL_PrintRegStatus_x371ac:
    /*000371ac*/ LDR         IP, [R4, #12] 
    /*000371b0*/ SUB         R1, R4, R6 
    /*000371b4*/ LDR         R3, [R4, #4] 
    /*000371b8*/ MOV         R0, R7 
    /*000371bc*/ LDR         R2, [R4] 
    /*000371c0*/ ADD         R4, R4, #16 
    /*000371c4*/ STR         IP, [SP, #4] 
    /*000371c8*/ LDR         IP, [R4, #-8] 
    /*000371cc*/ STR         IP, [SP] 
    /*000371d0*/ BL          0x00000000000371D0          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000371d4*/ CMP         R5, R4 
    /*000371d8*/ BNE         VI_HAL_PrintRegStatus_x371ac
    /*000371dc*/ CMP         R5, R8 
    /*000371e0*/ MOV         R4, R5 
    /*000371e4*/ BNE         VI_HAL_PrintRegStatus_x371a8
    /*000371e8*/ MOVW        R0, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1180c] 
    /*000371ec*/ MOVT        R0, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1180c] 
    /*000371f0*/ ADD         SP, SP, #8 
    /*000371f4*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_HAL_PrintRegStatus_x371f8:
    /*000371f8*/ B           VI_HAL_PrintRegStatus_x371f8@ osal_printk [R_ARM_JUMP24: +0x0] 
    VI_HAL_PrintRegStatus_x371fc:
    /*000371fc*/ ADD         SP, SP, #8 
    /*00037200*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_HAL_PrintRegStatus


FUNC_BEGIN VI_HAL_SetWdrExporratio0
    /*00037204*/ ADD         R0, R0, #24576              @ 0x6000 
    /*00037208*/ LDR         R3, [R0, #48]               @ 0x30 
    /*0003720c*/ BFI         R3, R1, #0, #10 
    /*00037210*/ STR         R3, [R0, #48]               @ 0x30 
    /*00037214*/ BX          LR 
FUNC_END VI_HAL_SetWdrExporratio0


FUNC_BEGIN VI_HAL_SetFlickExporatio0
    /*00037218*/ ADD         R0, R0, #8192               @ 0x2000 
    /*0003721c*/ LDR         R3, [R0, #1568]             @ 0x620 
    /*00037220*/ BFI         R3, R1, #0, #14 
    /*00037224*/ STR         R3, [R0, #1568]             @ 0x620 
    /*00037228*/ BX          LR 
FUNC_END VI_HAL_SetFlickExporatio0


FUNC_BEGIN VI_HAL_SetWdrExpoValue0
    /*0003722c*/ ADD         R0, R0, #24576              @ 0x6000 
    /*00037230*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*00037234*/ BFI         R3, R1, #16, #14 
    /*00037238*/ STR         R3, [R0, #44]               @ 0x2c 
    /*0003723c*/ BX          LR 
FUNC_END VI_HAL_SetWdrExpoValue0


FUNC_BEGIN VI_HAL_SetWdrExpoValue1
    /*00037240*/ ADD         R0, R0, #24576              @ 0x6000 
    /*00037244*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*00037248*/ BFI         R3, R1, #0, #14 
    /*0003724c*/ STR         R3, [R0, #44]               @ 0x2c 
    /*00037250*/ BX          LR 
FUNC_END VI_HAL_SetWdrExpoValue1


FUNC_BEGIN VI_HAL_SetWdrBlcComp0
    /*00037254*/ ADD         R0, R0, #24576              @ 0x6000 
    /*00037258*/ LDR         R3, [R0, #52]               @ 0x34 
    /*0003725c*/ BFI         R3, R1, #0, #26 
    /*00037260*/ STR         R3, [R0, #52]               @ 0x34 
    /*00037264*/ BX          LR 
FUNC_END VI_HAL_SetWdrBlcComp0


FUNC_BEGIN VI_HAL_SetWdrLongThr
    /*00037268*/ ADD         R0, R0, #24576              @ 0x6000 
    /*0003726c*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00037270*/ BFI         R3, R1, #0, #12 
    /*00037274*/ STR         R3, [R0, #108]              @ 0x6c 
    /*00037278*/ BX          LR 
FUNC_END VI_HAL_SetWdrLongThr


FUNC_BEGIN VI_HAL_SetWdrShortThr
    /*0003727c*/ ADD         R0, R0, #24576              @ 0x6000 
    /*00037280*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00037284*/ BFI         R3, R1, #16, #12 
    /*00037288*/ STR         R3, [R0, #108]              @ 0x6c 
    /*0003728c*/ BX          LR 
FUNC_END VI_HAL_SetWdrShortThr


FUNC_BEGIN VI_HAL_SetWdrMdtEn
    /*00037290*/ ADD         R0, R0, #24576              @ 0x6000 
    /*00037294*/ LDR         R3, [R0, #16] 
    /*00037298*/ BFI         R3, R1, #20, #1 
    /*0003729c*/ STR         R3, [R0, #16] 
    /*000372a0*/ BX          LR 
FUNC_END VI_HAL_SetWdrMdtEn


FUNC_BEGIN VI_HAL_SetWdrFusionMode
    /*000372a4*/ ADD         R0, R0, #24576              @ 0x6000 
    /*000372a8*/ LDR         R3, [R0, #16] 
    /*000372ac*/ BFI         R3, R1, #4, #1 
    /*000372b0*/ STR         R3, [R0, #16] 
    /*000372b4*/ BX          LR 
FUNC_END VI_HAL_SetWdrFusionMode


FUNC_BEGIN VI_HAL_SetIsp4Dgain0
    /*000372b8*/ ADD         R0, R0, #4096               @ 0x1000 
    /*000372bc*/ UXTH        R1, R1 
    /*000372c0*/ LDR         R3, [R0, #3088]             @ 0xc10 
    /*000372c4*/ BFI         R3, R1, #16, #16 
    /*000372c8*/ BFI         R3, R1, #0, #16 
    /*000372cc*/ STR         R3, [R0, #3088]             @ 0xc10 
    /*000372d0*/ LDR         R3, [R0, #3092]             @ 0xc14 
    /*000372d4*/ BFI         R3, R1, #16, #16 
    /*000372d8*/ BFI         R3, R1, #0, #16 
    /*000372dc*/ STR         R3, [R0, #3092]             @ 0xc14 
    /*000372e0*/ BX          LR 
FUNC_END VI_HAL_SetIsp4Dgain0


FUNC_BEGIN VI_HAL_SetIsp4Dgain1
    /*000372e4*/ ADD         R0, R0, #4096               @ 0x1000 
    /*000372e8*/ UXTH        R1, R1 
    /*000372ec*/ LDR         R3, [R0, #3104]             @ 0xc20 
    /*000372f0*/ BFI         R3, R1, #16, #16 
    /*000372f4*/ BFI         R3, R1, #0, #16 
    /*000372f8*/ STR         R3, [R0, #3104]             @ 0xc20 
    /*000372fc*/ LDR         R3, [R0, #3108]             @ 0xc24 
    /*00037300*/ BFI         R3, R1, #16, #16 
    /*00037304*/ BFI         R3, R1, #0, #16 
    /*00037308*/ STR         R3, [R0, #3108]             @ 0xc24 
    /*0003730c*/ BX          LR 
FUNC_END VI_HAL_SetIsp4Dgain1


FUNC_BEGIN VI_HAL_SetWdrMaxRatio
    /*00037310*/ ADD         R0, R0, #24576              @ 0x6000 
    /*00037314*/ LDR         R3, [R0, #56]               @ 0x38 
    /*00037318*/ BFI         R3, R1, #0, #17 
    /*0003731c*/ STR         R3, [R0, #56]               @ 0x38 
    /*00037320*/ BX          LR 
FUNC_END VI_HAL_SetWdrMaxRatio


FUNC_BEGIN VI_HAL_SetIspDgain
    /*00037324*/ ADD         R0, R0, #4096               @ 0x1000 
    /*00037328*/ LDR         IP, [R1] 
    /*0003732c*/ LDR         R2, [R1, #4] 
    /*00037330*/ LDR         R3, [R0, #784]              @ 0x310 
    /*00037334*/ BFI         R3, IP, #16, #16 
    /*00037338*/ BFI         R3, R2, #0, #16 
    /*0003733c*/ STR         R3, [R0, #784]              @ 0x310 
    /*00037340*/ LDR         R3, [R0, #788]              @ 0x314 
    /*00037344*/ LDR         IP, [R1, #8] 
    /*00037348*/ LDR         R2, [R1, #12] 
    /*0003734c*/ BFI         R3, IP, #16, #16 
    /*00037350*/ BFI         R3, R2, #0, #16 
    /*00037354*/ STR         R3, [R0, #788]              @ 0x314 
    /*00037358*/ BX          LR 
FUNC_END VI_HAL_SetIspDgain


FUNC_BEGIN VI_HAL_SetDrcShpCfg
    /*0003735c*/ ADD         R0, R0, #28672              @ 0x7000 
    /*00037360*/ LDR         R3, [R0, #3696]             @ 0xe70 
    /*00037364*/ BFI         R3, R1, #0, #4 
    /*00037368*/ BFI         R3, R2, #8, #4 
    /*0003736c*/ STR         R3, [R0, #3696]             @ 0xe70 
    /*00037370*/ BX          LR 
FUNC_END VI_HAL_SetDrcShpCfg


FUNC_BEGIN VI_HAL_SetDrcDivDenomLog
    /*00037374*/ ADD         R0, R0, #28672              @ 0x7000 
    /*00037378*/ LDR         R3, [R0, #3700]             @ 0xe74 
    /*0003737c*/ BFI         R3, R1, #0, #18 
    /*00037380*/ STR         R3, [R0, #3700]             @ 0xe74 
    /*00037384*/ BX          LR 
FUNC_END VI_HAL_SetDrcDivDenomLog


FUNC_BEGIN VI_HAL_SetDrcDenomExp
    /*00037388*/ ADD         R0, R0, #28672              @ 0x7000 
    /*0003738c*/ LDR         R3, [R0, #3704]             @ 0xe78 
    /*00037390*/ BFI         R3, R1, #0, #21 
    /*00037394*/ STR         R3, [R0, #3704]             @ 0xe78 
    /*00037398*/ BX          LR 
FUNC_END VI_HAL_SetDrcDenomExp


FUNC_BEGIN VI_HAL_SetDrcPrevLuma0
    /*0003739c*/ ADD         R0, R0, #28672              @ 0x7000 
    /*000373a0*/ LDR         R3, [R0, #3388]             @ 0xd3c 
    /*000373a4*/ BFI         R3, R1, #0, #24 
    /*000373a8*/ STR         R3, [R0, #3388]             @ 0xd3c 
    /*000373ac*/ BX          LR 
FUNC_END VI_HAL_SetDrcPrevLuma0


FUNC_BEGIN VI_HAL_SetDrcPrevLuma1
    /*000373b0*/ ADD         R0, R0, #28672              @ 0x7000 
    /*000373b4*/ LDR         R3, [R0, #3392]             @ 0xd40 
    /*000373b8*/ BFI         R3, R1, #0, #24 
    /*000373bc*/ STR         R3, [R0, #3392]             @ 0xd40 
    /*000373c0*/ BX          LR 
FUNC_END VI_HAL_SetDrcPrevLuma1


FUNC_BEGIN VI_HAL_SetDrcPrevLuma2
    /*000373c4*/ ADD         R0, R0, #28672              @ 0x7000 
    /*000373c8*/ LDR         R3, [R0, #3396]             @ 0xd44 
    /*000373cc*/ BFI         R3, R1, #0, #24 
    /*000373d0*/ STR         R3, [R0, #3396]             @ 0xd44 
    /*000373d4*/ BX          LR 
FUNC_END VI_HAL_SetDrcPrevLuma2


FUNC_BEGIN VI_HAL_SetDrcPrevLuma3
    /*000373d8*/ ADD         R0, R0, #28672              @ 0x7000 
    /*000373dc*/ LDR         R3, [R0, #3400]             @ 0xd48 
    /*000373e0*/ BFI         R3, R1, #0, #24 
    /*000373e4*/ STR         R3, [R0, #3400]             @ 0xd48 
    /*000373e8*/ BX          LR 
FUNC_END VI_HAL_SetDrcPrevLuma3


FUNC_BEGIN VI_HAL_SetDrcPrevLuma4
    /*000373ec*/ ADD         R0, R0, #28672              @ 0x7000 
    /*000373f0*/ LDR         R3, [R0, #3404]             @ 0xd4c 
    /*000373f4*/ BFI         R3, R1, #0, #24 
    /*000373f8*/ STR         R3, [R0, #3404]             @ 0xd4c 
    /*000373fc*/ BX          LR 
FUNC_END VI_HAL_SetDrcPrevLuma4


FUNC_BEGIN VI_HAL_SetDrcPrevLuma5
    /*00037400*/ ADD         R0, R0, #28672              @ 0x7000 
    /*00037404*/ LDR         R3, [R0, #3408]             @ 0xd50 
    /*00037408*/ BFI         R3, R1, #0, #24 
    /*0003740c*/ STR         R3, [R0, #3408]             @ 0xd50 
    /*00037410*/ BX          LR 
FUNC_END VI_HAL_SetDrcPrevLuma5


FUNC_BEGIN VI_HAL_SetDrcPrevLuma6
    /*00037414*/ ADD         R0, R0, #28672              @ 0x7000 
    /*00037418*/ LDR         R3, [R0, #3412]             @ 0xd54 
    /*0003741c*/ BFI         R3, R1, #0, #24 
    /*00037420*/ STR         R3, [R0, #3412]             @ 0xd54 
    /*00037424*/ BX          LR 
FUNC_END VI_HAL_SetDrcPrevLuma6


FUNC_BEGIN VI_HAL_SetDrcPrevLuma7
    /*00037428*/ ADD         R0, R0, #28672              @ 0x7000 
    /*0003742c*/ LDR         R3, [R0, #3416]             @ 0xd58 
    /*00037430*/ BFI         R3, R1, #0, #24 
    /*00037434*/ STR         R3, [R0, #3416]             @ 0xd58 
    /*00037438*/ BX          LR 
FUNC_END VI_HAL_SetDrcPrevLuma7


FUNC_BEGIN VI_HAL_SetLdciStatEvratio
    /*0003743c*/ ADD         R0, R0, #28672              @ 0x7000 
    /*00037440*/ LDR         R3, [R0, #2344]             @ 0x928 
    /*00037444*/ BFI         R3, R1, #0, #16 
    /*00037448*/ STR         R3, [R0, #2344]             @ 0x928 
    /*0003744c*/ BX          LR 
FUNC_END VI_HAL_SetLdciStatEvratio


FUNC_BEGIN VI_HAL_GetDevDetectionSize
    /*00037450*/ CMP         R0, #2 
    /*00037454*/ PUSH        {R4, R5, R6, LR} 
    /*00037458*/ MOV         R4, R1 
    /*0003745c*/ MOV         R5, R2 
    /*00037460*/ BHI         VI_HAL_GetDevDetectionSize_x37498
    /*00037464*/ MOVW        R1, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00037468*/ MOVT        R1, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*0003746c*/ ADD         R3, R0, #16 
    /*00037470*/ LDR         R0, [R1, #8] 
    /*00037474*/ ADD         R0, R0, R3, LSL #8 
    VI_HAL_GetDevDetectionSize_x37478:
    /*00037478*/ LDR         R3, [R0, #236]              @ 0xec 
    /*0003747c*/ UXTH        R2, R3 
    /*00037480*/ LSR         R3, R3, #16 
    /*00037484*/ STM         R4, {R2, R3} 
    /*00037488*/ LDR         R3, [R0, #232]              @ 0xe8 
    /*0003748c*/ UXTH        R3, R3 
    /*00037490*/ STR         R3, [R5] 
    /*00037494*/ POP         {R4, R5, R6, PC} 
    VI_HAL_GetDevDetectionSize_x37498:
    /*00037498*/ BL          0x000000000003474C 
    /*0003749c*/ B           VI_HAL_GetDevDetectionSize_x37478
FUNC_END VI_HAL_GetDevDetectionSize


FUNC_BEGIN VI_HAL_SetIspMcdsVcdsEn
    /*000374a0*/ LDR         R3, [R0, #36]               @ 0x24 
    /*000374a4*/ BFI         R3, R1, #17, #1 
    /*000374a8*/ STR         R3, [R0, #36]               @ 0x24 
    /*000374ac*/ BX          LR 
FUNC_END VI_HAL_SetIspMcdsVcdsEn


FUNC_BEGIN VI_HAL_SetBeOutputPixel
    /*000374b0*/ LDR         R3, [R0, #180]              @ 0xb4 
    /*000374b4*/ BFI         R3, R1, #0, #2 
    /*000374b8*/ STR         R3, [R0, #180]              @ 0xb4 
    /*000374bc*/ BX          LR 
FUNC_END VI_HAL_SetBeOutputPixel


FUNC_BEGIN VI_HAL_GetIspDetectionSize
    /*000374c0*/ MOVW        IP, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*000374c4*/ MOVT        IP, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*000374c8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000374cc*/ ADD         R0, R0, #120                @ 0x78 
    /*000374d0*/ LDR         R3, [IP, #8] 
    /*000374d4*/ ADD         R3, R3, R0, LSL #3 
    /*000374d8*/ LDR         R3, [R3, #4] 
    /*000374dc*/ UXTH        LR, R3 
    /*000374e0*/ STR         LR, [R1] 
    /*000374e4*/ LDR         IP, [IP, #8] 
    /*000374e8*/ LSR         R3, R3, #16 
    /*000374ec*/ STR         R3, [R1, #4] 
    /*000374f0*/ LDR         R3, [IP, R0, LSL #3] 
    /*000374f4*/ UXTH        R3, R3 
    /*000374f8*/ STR         R3, [R2] 
    /*000374fc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VI_HAL_GetIspDetectionSize


FUNC_BEGIN VI_HAL_SetWDRLineAFifoEnable
    /*00037500*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*00037504*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*00037508*/ AND         R1, R1, #1 
    /*0003750c*/ LDR         R2, [R3, #8] 
    /*00037510*/ LDR         R3, [R2, #48]               @ 0x30 
    /*00037514*/ BFI         R3, R1, #8, #1 
    /*00037518*/ BFI         R3, R1, #9, #1 
    /*0003751c*/ STR         R3, [R2, #48]               @ 0x30 
    /*00037520*/ BX          LR 
FUNC_END VI_HAL_SetWDRLineAFifoEnable


FUNC_BEGIN VI_WDR_CreatePool
    /*00037524*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00037528*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0003752c*/ MOV         R7, R0 
    /*00037530*/ MOV         R0, #2 
    /*00037534*/ MOV         R4, #0 
    /*00037538*/ MOV         R8, R2 
    /*0003753c*/ MOV         R9, R1 
    /*00037540*/ MOV         FP, R3 
    /*00037544*/ MOV         R6, #16 
    /*00037548*/ STR         R4, [SP, #44]               @ 0x2c 
    /*0003754c*/ STR         R4, [SP, #24] 
    /*00037550*/ ADD         R5, SP, #40                 @ 0x28 
    /*00037554*/ STR         R4, [SP, #40]               @ 0x28 
    /*00037558*/ STR         R4, [SP, #48]               @ 0x30 
    /*0003755c*/ STR         R4, [SP, #52]               @ 0x34 
    /*00037560*/ STR         R4, [SP, #36]               @ 0x24 
    /*00037564*/ LDR         SL, [SP, #96]               @ 0x60 
    /*00037568*/ STR         R7, [SP, #32] 
    /*0003756c*/ STR         R6, [SP, #28] 
    /*00037570*/ BL          0x0000000000037570          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00037574*/ ADD         R1, SP, #24 
    /*00037578*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0003757c*/ ADD         R0, SP, #28 
    /*00037580*/ BLX         R3 
    /*00037584*/ MOV         R3, R7 
    /*00037588*/ MOV         R1, R6 
    /*0003758c*/ STR         SL, [SP] 
    /*00037590*/ MOV         R0, R5 
    /*00037594*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1184c] 
    /*00037598*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1184c] 
    /*0003759c*/ BL          0x000000000003759C          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*000375a0*/ MOV         R0, #1 
    /*000375a4*/ BL          0x00000000000375A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000375a8*/ LDR         R1, [SP, #24] 
    /*000375ac*/ STR         R5, [SP, #4] 
    /*000375b0*/ MOV         R3, R4 
    /*000375b4*/ MOV         IP, #1 
    /*000375b8*/ MOV         R2, FP 
    /*000375bc*/ STR         R1, [SP] 
    /*000375c0*/ MOV         R1, R8 
    /*000375c4*/ STR         IP, [SP, #8] 
    /*000375c8*/ LDR         R4, [R0] 
    /*000375cc*/ MOV         R0, R9 
    /*000375d0*/ BLX         R4 
    /*000375d4*/ SUBS        R4, R0, #0 
    /*000375d8*/ BNE         VI_WDR_CreatePool_x37618
    /*000375dc*/ LDR         R2, [R9] 
    /*000375e0*/ MOV         R0, #48                     @ 0x30 
    /*000375e4*/ MOV         R1, R6 
    /*000375e8*/ STR         R0, [SP] 
    /*000375ec*/ STR         R8, [SP, #4] 
    /*000375f0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2278] 
    /*000375f4*/ STR         R2, [SP, #8] 
    /*000375f8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2278] 
    /*000375fc*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x118b8] 
    /*00037600*/ MOV         R0, #5 
    /*00037604*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x118b8] 
    /*00037608*/ BL          0x0000000000037608          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003760c*/ MOV         R0, R4 
    VI_WDR_CreatePool_x37610:
    /*00037610*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00037614*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_WDR_CreatePool_x37618:
    /*00037618*/ STR         R8, [SP, #16] 
    /*0003761c*/ MVN         R0, #0 
    /*00037620*/ STR         FP, [SP, #12] 
    /*00037624*/ MOV         R2, #45                     @ 0x2d 
    /*00037628*/ STR         SL, [SP, #8] 
    /*0003762c*/ MOV         R1, R6 
    /*00037630*/ STR         R7, [SP, #4] 
    /*00037634*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2278] 
    /*00037638*/ STR         R0, [R9] 
    /*0003763c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2278] 
    /*00037640*/ STR         R2, [SP] 
    /*00037644*/ MOV         R0, #3 
    /*00037648*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11858] 
    /*0003764c*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11858] 
    /*00037650*/ BL          0x0000000000037650          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00037654*/ MOVW        R0, #32780                  @ 0x800c 
    /*00037658*/ MOVT        R0, #40976                  @ 0xa010 
    /*0003765c*/ B           VI_WDR_CreatePool_x37610
FUNC_END VI_WDR_CreatePool


FUNC_BEGIN VI_WDR_DestoryPool
    /*00037660*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00037664*/ CMN         R1, #1 
    /*00037668*/ SUB         SP, SP, #28 
    /*0003766c*/ MOV         R4, #0 
    /*00037670*/ MOV         R7, R0 
    /*00037674*/ STR         R4, [SP, #20] 
    /*00037678*/ BEQ         VI_WDR_DestoryPool_x37740
    /*0003767c*/ STR         R1, [SP, #4] 
    /*00037680*/ MOV         R3, #67                     @ 0x43 
    /*00037684*/ MOV         R5, R1 
    /*00037688*/ STR         R3, [SP] 
    /*0003768c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11938] 
    /*00037690*/ LDR         R3, [PC, #264]              @ 0x00000000000377a0 
    /*00037694*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11938] 
    /*00037698*/ MOV         R1, #16 
    /*0003769c*/ MOV         R0, #5 
    /*000376a0*/ MOV         R6, #21 
    /*000376a4*/ BL          0x00000000000376A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_WDR_DestoryPool_x376a8:
    /*000376a8*/ MOV         R4, #0 
    VI_WDR_DestoryPool_x376ac:
    /*000376ac*/ MOV         R0, #1 
    /*000376b0*/ BL          0x00000000000376B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000376b4*/ ADD         R2, SP, #20 
    /*000376b8*/ MOV         R1, R4 
    /*000376bc*/ LDR         R3, [R0, #96]               @ 0x60 
    /*000376c0*/ MOV         R0, R5 
    /*000376c4*/ BLX         R3 
    /*000376c8*/ CMP         R0, #0 
    /*000376cc*/ BNE         VI_WDR_DestoryPool_x376dc
    /*000376d0*/ LDR         R3, [SP, #20] 
    /*000376d4*/ CMP         R3, #0 
    /*000376d8*/ BNE         VI_WDR_DestoryPool_x3770c
    VI_WDR_DestoryPool_x376dc:
    /*000376dc*/ ADD         R4, R4, #1 
    /*000376e0*/ CMP         R4, #23 
    /*000376e4*/ BNE         VI_WDR_DestoryPool_x376ac
    VI_WDR_DestoryPool_x376e8:
    /*000376e8*/ MOV         R0, #1 
    /*000376ec*/ BL          0x00000000000376EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000376f0*/ LDR         R3, [R0, #4] 
    /*000376f4*/ MOV         R0, R5 
    /*000376f8*/ BLX         R3 
    /*000376fc*/ CMP         R0, #0 
    /*00037700*/ BNE         VI_WDR_DestoryPool_x37770
    VI_WDR_DestoryPool_x37704:
    /*00037704*/ ADD         SP, SP, #28 
    /*00037708*/ POP         {R4, R5, R6, R7, PC} 
    VI_WDR_DestoryPool_x3770c:
    /*0003770c*/ SUBS        R6, R6, #1 
    /*00037710*/ BNE         VI_WDR_DestoryPool_x376a8
    /*00037714*/ STR         R3, [SP, #8] 
    /*00037718*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1196c] 
    /*0003771c*/ MOV         R3, #96                     @ 0x60 
    /*00037720*/ STR         R4, [SP, #4] 
    /*00037724*/ STR         R3, [SP] 
    /*00037728*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1196c] 
    /*0003772c*/ LDR         R3, [PC, #108]              @ 0x00000000000377a0 
    /*00037730*/ MOV         R1, #16 
    /*00037734*/ MOV         R0, #3 
    /*00037738*/ BL          0x0000000000037738          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003773c*/ B           VI_WDR_DestoryPool_x376e8
    VI_WDR_DestoryPool_x37740:
    /*00037740*/ STR         R0, [SP, #4] 
    /*00037744*/ MOV         R3, #63                     @ 0x3f 
    /*00037748*/ MOV         R1, #16 
    /*0003774c*/ STR         R3, [SP] 
    /*00037750*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x118fc] 
    /*00037754*/ LDR         R3, [PC, #68]               @ 0x00000000000377a0 
    /*00037758*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x118fc] 
    /*0003775c*/ MOV         R0, #3 
    /*00037760*/ BL          0x0000000000037760          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00037764*/ MOV         R0, R4 
    /*00037768*/ ADD         SP, SP, #28 
    /*0003776c*/ POP         {R4, R5, R6, R7, PC} 
    VI_WDR_DestoryPool_x37770:
    /*00037770*/ MOV         R3, #102                    @ 0x66 
    /*00037774*/ STR         R7, [SP, #4] 
    /*00037778*/ STR         R3, [SP] 
    /*0003777c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x119b0] 
    /*00037780*/ LDR         R3, [PC, #24]               @ 0x00000000000377a0 
    /*00037784*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x119b0] 
    /*00037788*/ MOV         R1, #16 
    /*0003778c*/ MOV         R0, #3 
    /*00037790*/ BL          0x0000000000037790          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00037794*/ MOVW        R0, #32786                  @ 0x8012 
    /*00037798*/ MOVT        R0, #40961                  @ 0xa001 
    /*0003779c*/ B           VI_WDR_DestoryPool_x37704
    /*000377a0*/ ANDEQ       R2, R0, IP, LSL #5 
FUNC_END VI_WDR_DestoryPool


FUNC_BEGIN VI_WDR_GetVb
    /*000377a4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000377a8*/ SUB         SP, SP, #80                 @ 0x50 
    /*000377ac*/ LDR         R3, [R0] 
    /*000377b0*/ CMN         R3, #1 
    /*000377b4*/ BEQ         VI_WDR_GetVb_x37974
    /*000377b8*/ MOV         R6, R0 
    /*000377bc*/ MOV         R0, #1 
    /*000377c0*/ MOV         R4, R1 
    /*000377c4*/ BL          0x00000000000377C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000377c8*/ MOV         R1, #0 
    /*000377cc*/ LDR         R3, [R0, #8] 
    /*000377d0*/ LDR         R0, [R6] 
    /*000377d4*/ BLX         R3 
    /*000377d8*/ CMN         R0, #1 
    /*000377dc*/ MOV         R7, R0 
    /*000377e0*/ BEQ         VI_WDR_GetVb_x379a0
    /*000377e4*/ LDMIB       R6, {R1, R2} 
    /*000377e8*/ MOV         R0, #2 
    /*000377ec*/ LDR         LR, [R6, #12] 
    /*000377f0*/ MOV         R3, #0 
    /*000377f4*/ LDR         IP, [R6, #20] 
    /*000377f8*/ STR         R3, [SP, #28] 
    /*000377fc*/ STR         R3, [SP, #36]               @ 0x24 
    /*00037800*/ STR         R3, [SP, #40]               @ 0x28 
    /*00037804*/ STR         R3, [SP, #24] 
    /*00037808*/ STR         R3, [SP, #20] 
    /*0003780c*/ STR         LR, [SP, #32] 
    /*00037810*/ STR         IP, [SP, #8] 
    /*00037814*/ STR         R1, [SP, #12] 
    /*00037818*/ STR         R2, [SP, #16] 
    /*0003781c*/ BL          0x000000000003781C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00037820*/ LDR         R3, [R0, #120]              @ 0x78 
    /*00037824*/ CMP         R3, #0 
    /*00037828*/ BEQ         VI_WDR_GetVb_x379cc
    /*0003782c*/ MOV         R0, #2 
    /*00037830*/ BL          0x0000000000037830          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00037834*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00037838*/ LDR         R3, [R0, #120]              @ 0x78 
    /*0003783c*/ ADD         R0, SP, #8 
    /*00037840*/ BLX         R3 
    /*00037844*/ LDR         R3, [R6, #20] 
    /*00037848*/ CMP         R3, #39                     @ 0x27 
    /*0003784c*/ LDRNE       SL, [SP, #60]               @ 0x3c 
    /*00037850*/ BEQ         VI_WDR_GetVb_x3795c
    VI_WDR_GetVb_x37854:
    /*00037854*/ LDR         R3, [R6] 
    /*00037858*/ MOV         R2, #16 
    /*0003785c*/ STR         R2, [R4, #332]              @ 0x14c 
    /*00037860*/ MOV         R5, #0 
    /*00037864*/ MOV         R8, #0 
    /*00037868*/ MOV         R9, #0 
    /*0003786c*/ STR         R3, [R4, #328]              @ 0x148 
    /*00037870*/ MOV         R2, #4 
    /*00037874*/ LDR         R3, [R6, #4] 
    /*00037878*/ MOV         R0, #1 
    /*0003787c*/ STR         R3, [R4] 
    /*00037880*/ LDR         R3, [R6, #8] 
    /*00037884*/ STR         R2, [R4, #8] 
    /*00037888*/ STRD        R8, [R4, #72]               @ 0x48 
    /*0003788c*/ STR         R3, [R4, #4] 
    /*00037890*/ STRD        R8, [R4, #80]               @ 0x50 
    /*00037894*/ STRD        R8, [R4, #96]               @ 0x60 
    /*00037898*/ STRD        R8, [R4, #104]              @ 0x68 
    /*0003789c*/ STR         R5, [R4, #32] 
    /*000378a0*/ STR         R5, [R4, #36]               @ 0x24 
    /*000378a4*/ STR         R5, [R4, #40]               @ 0x28 
    /*000378a8*/ STR         R5, [R4, #16] 
    /*000378ac*/ LDR         R3, [R6, #12] 
    /*000378b0*/ STR         R3, [R4, #20] 
    /*000378b4*/ BL          0x00000000000378B4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000378b8*/ LDR         R3, [R0, #52]               @ 0x34 
    /*000378bc*/ MOV         R0, R7 
    /*000378c0*/ BLX         R3 
    /*000378c4*/ MOV         R2, R0 
    /*000378c8*/ MOV         R3, R1 
    /*000378cc*/ MOV         R0, #1 
    /*000378d0*/ STRD        R2, [R4, #120]              @ 0x78 
    /*000378d4*/ STRD        R2, [R4, #128]              @ 0x80 
    /*000378d8*/ STRD        R2, [R4, #136]              @ 0x88 
    /*000378dc*/ BL          0x00000000000378DC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000378e0*/ LDR         R3, [R0, #48]               @ 0x30 
    /*000378e4*/ MOV         R0, R7 
    /*000378e8*/ BLX         R3 
    /*000378ec*/ STR         R5, [R4, #48]               @ 0x30 
    /*000378f0*/ STR         R5, [R4, #52]               @ 0x34 
    /*000378f4*/ STR         SL, [R4, #44]               @ 0x2c 
    /*000378f8*/ MOV         R2, R0 
    /*000378fc*/ MOV         R3, R1 
    /*00037900*/ STRD        R2, [R4, #144]              @ 0x90 
    /*00037904*/ MOV         R0, R5 
    /*00037908*/ STRD        R2, [R4, #152]              @ 0x98 
    /*0003790c*/ STRD        R2, [R4, #160]              @ 0xa0 
    /*00037910*/ LDR         R3, [R6, #20] 
    /*00037914*/ STR         R5, [R4, #24] 
    /*00037918*/ STRD        R8, [R4, #168]              @ 0xa8 
    /*0003791c*/ STR         R3, [R4, #12] 
    /*00037920*/ STRD        R8, [R4, #176]              @ 0xb0 
    /*00037924*/ STRD        R8, [R4, #184]              @ 0xb8 
    /*00037928*/ STRD        R8, [R4, #192]              @ 0xc0 
    /*0003792c*/ STRD        R8, [R4, #200]              @ 0xc8 
    /*00037930*/ STRD        R8, [R4, #208]              @ 0xd0 
    /*00037934*/ STR         R5, [R4, #56]               @ 0x38 
    /*00037938*/ STR         R5, [R4, #60]               @ 0x3c 
    /*0003793c*/ STR         R5, [R4, #64]               @ 0x40 
    /*00037940*/ STRH        R5, [R4, #216]              @ 0xd8 
    /*00037944*/ STRH        R5, [R4, #218]              @ 0xda 
    /*00037948*/ STRH        R5, [R4, #220]              @ 0xdc 
    /*0003794c*/ STRH        R5, [R4, #222]              @ 0xde 
    /*00037950*/ STRD        R8, [R4, #240]              @ 0xf0 
    VI_WDR_GetVb_x37954:
    /*00037954*/ ADD         SP, SP, #80                 @ 0x50 
    /*00037958*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VI_WDR_GetVb_x3795c:
    /*0003795c*/ LDR         R2, [R6, #12] 
    /*00037960*/ MOV         R1, #8 
    /*00037964*/ LDR         R0, [R6, #4] 
    /*00037968*/ BL          0x0000000000037968          @ VI_DRV_GetYuvStrideByBitWidth [R_ARM_CALL: .text+0x2c8a4] 
    /*0003796c*/ MOV         SL, R0 
    /*00037970*/ B           VI_WDR_GetVb_x37854
    VI_WDR_GetVb_x37974:
    /*00037974*/ MOV         R3, #122                    @ 0x7a 
    /*00037978*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x119f0] 
    /*0003797c*/ STR         R3, [SP] 
    /*00037980*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x119f0] 
    /*00037984*/ LDR         R3, [PC, #104]              @ 0x00000000000379f4 
    /*00037988*/ MOV         R1, #16 
    /*0003798c*/ MOV         R0, #3 
    /*00037990*/ BL          0x0000000000037990          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00037994*/ MOVW        R0, #32780                  @ 0x800c 
    /*00037998*/ MOVT        R0, #40961                  @ 0xa001 
    /*0003799c*/ B           VI_WDR_GetVb_x37954
    VI_WDR_GetVb_x379a0:
    /*000379a0*/ MOV         R3, #130                    @ 0x82 
    /*000379a4*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11a24] 
    /*000379a8*/ STR         R3, [SP] 
    /*000379ac*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11a24] 
    /*000379b0*/ LDR         R3, [PC, #60]               @ 0x00000000000379f4 
    /*000379b4*/ MOV         R1, #16 
    /*000379b8*/ MOV         R0, #4 
    /*000379bc*/ BL          0x00000000000379BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000379c0*/ MOVW        R0, #32786                  @ 0x8012 
    /*000379c4*/ MOVT        R0, #40961                  @ 0xa001 
    /*000379c8*/ B           VI_WDR_GetVb_x37954
    VI_WDR_GetVb_x379cc:
    /*000379cc*/ MOV         R3, #146                    @ 0x92 
    /*000379d0*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11a5c] 
    /*000379d4*/ STR         R3, [SP] 
    /*000379d8*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11a5c] 
    /*000379dc*/ LDR         R3, [PC, #16]               @ 0x00000000000379f4 
    /*000379e0*/ MOV         R1, #16 
    /*000379e4*/ MOV         R0, #3 
    /*000379e8*/ BL          0x00000000000379E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000379ec*/ MVN         R0, #0 
    /*000379f0*/ B           VI_WDR_GetVb_x37954
    /*000379f4*/ ANDEQ       R2, R0, R0, LSR #5 
FUNC_END VI_WDR_GetVb


FUNC_BEGIN VI_DRV_CheckWDRAttr
    /*000379f8*/ PUSH        {R4, R5, LR} 
    /*000379fc*/ SUB         SP, SP, #36                 @ 0x24 
    /*00037a00*/ LDR         R3, [R1] 
    /*00037a04*/ MOV         R5, R2 
    /*00037a08*/ MOV         R4, R1 
    /*00037a0c*/ MOV         R2, #0 
    /*00037a10*/ CMP         R3, #4 
    /*00037a14*/ STR         R2, [SP, #16] 
    /*00037a18*/ BHI         VI_DRV_CheckWDRAttr_x37ae0
    /*00037a1c*/ CMP         R3, #2 
    /*00037a20*/ BEQ         VI_DRV_CheckWDRAttr_x37b20
    /*00037a24*/ CMP         R3, #3 
    /*00037a28*/ BEQ         VI_DRV_CheckWDRAttr_x37a38
    VI_DRV_CheckWDRAttr_x37a2c:
    /*00037a2c*/ MOV         R0, #0 
    VI_DRV_CheckWDRAttr_x37a30:
    /*00037a30*/ ADD         SP, SP, #36                 @ 0x24 
    /*00037a34*/ POP         {R4, R5, PC} 
    VI_DRV_CheckWDRAttr_x37a38:
    /*00037a38*/ MOV         R1, R0 
    /*00037a3c*/ MOV         R0, #2 
    /*00037a40*/ MOV         R3, #16 
    /*00037a44*/ STR         R1, [SP, #24] 
    /*00037a48*/ STR         R3, [SP, #20] 
    /*00037a4c*/ BL          0x0000000000037A4C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00037a50*/ ADD         R2, SP, #16 
    /*00037a54*/ MOV         R1, #61                     @ 0x3d 
    /*00037a58*/ LDR         R3, [R0, #20] 
    /*00037a5c*/ ADD         R0, SP, #20 
    /*00037a60*/ BLX         R3 
    /*00037a64*/ LDR         R3, [SP, #16] 
    /*00037a68*/ CMP         R3, #1 
    /*00037a6c*/ BNE         VI_DRV_CheckWDRAttr_x37a2c
    /*00037a70*/ LDR         R4, [R4, #4] 
    /*00037a74*/ LDR         R5, [R5, #4] 
    /*00037a78*/ CMP         R4, #100                    @ 0x64 
    /*00037a7c*/ MOVHI       R3, #0 
    /*00037a80*/ MOVLS       R3, #1 
    /*00037a84*/ CMP         R4, R5 
    /*00037a88*/ ORRHI       R3, R3, #1 
    /*00037a8c*/ CMP         R3, #0 
    /*00037a90*/ BNE         VI_DRV_CheckWDRAttr_x37aa8
    /*00037a94*/ MOV         R1, R4 
    /*00037a98*/ MOV         R0, R5 
    /*00037a9c*/ BL          0x0000000000037A9C          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*00037aa0*/ CMP         R1, #0 
    /*00037aa4*/ BEQ         VI_DRV_CheckWDRAttr_x37a2c
    VI_DRV_CheckWDRAttr_x37aa8:
    /*00037aa8*/ MOV         R2, #74                     @ 0x4a 
    /*00037aac*/ STR         R5, [SP, #8] 
    /*00037ab0*/ STR         R2, [SP] 
    /*00037ab4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x22b0] 
    /*00037ab8*/ STR         R4, [SP, #4] 
    /*00037abc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x22b0] 
    /*00037ac0*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11b08] 
    /*00037ac4*/ MOV         R1, #16 
    /*00037ac8*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11b08] 
    /*00037acc*/ MOV         R0, #3 
    /*00037ad0*/ BL          0x0000000000037AD0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00037ad4*/ MOVW        R0, #32771                  @ 0x8003 
    /*00037ad8*/ MOVT        R0, #40976                  @ 0xa010 
    /*00037adc*/ B           VI_DRV_CheckWDRAttr_x37a30
    VI_DRV_CheckWDRAttr_x37ae0:
    /*00037ae0*/ STR         R2, [SP, #8] 
    /*00037ae4*/ MOV         R1, #4 
    /*00037ae8*/ STR         R3, [SP, #4] 
    /*00037aec*/ MOV         R2, #50                     @ 0x32 
    /*00037af0*/ STR         R1, [SP, #12] 
    /*00037af4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x22b0] 
    /*00037af8*/ STR         R2, [SP] 
    /*00037afc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x22b0] 
    /*00037b00*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11a90] 
    /*00037b04*/ MOV         R1, #16 
    /*00037b08*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11a90] 
    /*00037b0c*/ MOV         R0, #3 
    /*00037b10*/ BL          0x0000000000037B10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00037b14*/ MOVW        R0, #32771                  @ 0x8003 
    /*00037b18*/ MOVT        R0, #40976                  @ 0xa010 
    /*00037b1c*/ B           VI_DRV_CheckWDRAttr_x37a30
    VI_DRV_CheckWDRAttr_x37b20:
    /*00037b20*/ MOV         R2, #56                     @ 0x38 
    /*00037b24*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x22b0] 
    /*00037b28*/ STR         R2, [SP] 
    /*00037b2c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x22b0] 
    /*00037b30*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11ad0] 
    /*00037b34*/ MOV         R1, #16 
    /*00037b38*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11ad0] 
    /*00037b3c*/ MOV         R0, #3 
    /*00037b40*/ BL          0x0000000000037B40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00037b44*/ MOVW        R0, #32771                  @ 0x8003 
    /*00037b48*/ MOVT        R0, #40976                  @ 0xa010 
    /*00037b4c*/ B           VI_DRV_CheckWDRAttr_x37a30
FUNC_END VI_DRV_CheckWDRAttr


FUNC_BEGIN VI_DRV_IsWDRMode
    /*00037b50*/ CMP         R0, #1 
    /*00037b54*/ MOVLS       R0, #0 
    /*00037b58*/ MOVHI       R0, #1 
    /*00037b5c*/ BX          LR 
FUNC_END VI_DRV_IsWDRMode


FUNC_BEGIN VI_DRV_GetWDRVcNum
    /*00037b60*/ SUBS        R0, R0, #1 
    /*00037b64*/ MOVNE       R0, #1 
    /*00037b68*/ BX          LR 
FUNC_END VI_DRV_GetWDRVcNum


FUNC_BEGIN VI_DRV_GetDevSize
    /*00037b6c*/ MOVW        R2, #0                      @ g_astViDrvDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00037b70*/ MOVT        R2, #0                      @ g_astViDrvDevCtx [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00037b74*/ MOV         R3, #356                    @ 0x164 
    /*00037b78*/ MLA         R0, R3, R0, R2 
    /*00037b7c*/ LDR         R3, [R0, #8] 
    /*00037b80*/ CMP         R3, #0 
    /*00037b84*/ LDRNE       R3, [R0, #308]              @ 0x134 
    /*00037b88*/ LDREQ       R3, [R0, #144]              @ 0x90 
    /*00037b8c*/ STRNE       R3, [R1] 
    /*00037b90*/ STREQ       R3, [R1] 
    /*00037b94*/ LDRNE       R3, [R0, #312]              @ 0x138 
    /*00037b98*/ LDREQ       R3, [R0, #148]              @ 0x94 
    /*00037b9c*/ STR         R3, [R1, #4] 
    /*00037ba0*/ BX          LR 
FUNC_END VI_DRV_GetDevSize


FUNC_BEGIN VI_DRV_SetIspIdSel
    VI_DRV_SetIspIdSel_x37ba4:
    /*00037ba4*/ B           VI_DRV_SetIspIdSel_x37ba4   @ VI_HAL_SetIspIdSel [R_ARM_JUMP24: .text+0x3665c] 
FUNC_END VI_DRV_SetIspIdSel


FUNC_BEGIN VI_DRV_SetWdrTunlCtrl
    VI_DRV_SetWdrTunlCtrl_x37ba8:
    /*00037ba8*/ B           VI_DRV_SetWdrTunlCtrl_x37ba8@ VI_HAL_SetWdrTunlCtrl [R_ARM_JUMP24: .text+0x348f4] 
FUNC_END VI_DRV_SetWdrTunlCtrl


FUNC_BEGIN VI_DRV_SetWdrBufferWrapCtrl
    /*00037bac*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00037bb0*/ MOV         R7, R1 
    /*00037bb4*/ MOV         R8, R0 
    /*00037bb8*/ MOV         R6, R2 
    /*00037bbc*/ BL          0x0000000000037BBC          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*00037bc0*/ MOVW        R9, #0                      @ g_astViDrvDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00037bc4*/ MOVT        R9, #0                      @ g_astViDrvDevCtx [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00037bc8*/ MOV         R5, R0 
    /*00037bcc*/ MOV         R0, R8 
    /*00037bd0*/ BL          0x0000000000037BD0          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*00037bd4*/ MOV         R3, #356                    @ 0x164 
    /*00037bd8*/ MUL         R0, R3, R0 
    /*00037bdc*/ ADD         R3, R9, R0 
    /*00037be0*/ LDR         R1, [R3, #16] 
    /*00037be4*/ CMP         R1, #0 
    /*00037be8*/ BEQ         VI_DRV_SetWdrBufferWrapCtrl_x37c20
    /*00037bec*/ LDR         R3, [R3, #20] 
    /*00037bf0*/ CMP         R8, R3 
    /*00037bf4*/ BEQ         VI_DRV_SetWdrBufferWrapCtrl_x37c8c
    /*00037bf8*/ ADD         R3, R0, #20 
    /*00037bfc*/ MOV         R4, #0 
    /*00037c00*/ ADD         R3, R9, R3 
    /*00037c04*/ B           VI_DRV_SetWdrBufferWrapCtrl_x37c14
    VI_DRV_SetWdrBufferWrapCtrl_x37c08:
    /*00037c08*/ LDR         R2, [R3, #4]! 
    /*00037c0c*/ CMP         R8, R2 
    /*00037c10*/ BEQ         VI_DRV_SetWdrBufferWrapCtrl_x37c24
    VI_DRV_SetWdrBufferWrapCtrl_x37c14:
    /*00037c14*/ ADD         R4, R4, #1 
    /*00037c18*/ CMP         R4, R1 
    /*00037c1c*/ BNE         VI_DRV_SetWdrBufferWrapCtrl_x37c08
    VI_DRV_SetWdrBufferWrapCtrl_x37c20:
    /*00037c20*/ MVN         R4, #0 
    VI_DRV_SetWdrBufferWrapCtrl_x37c24:
    /*00037c24*/ MOV         R0, R8 
    /*00037c28*/ BL          0x0000000000037C28          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*00037c2c*/ BL          0x0000000000037C2C          @ VI_DRV_GetOnlineProcIDByPipe [R_ARM_CALL: .text+0x27360] 
    /*00037c30*/ BL          0x0000000000037C30          @ VI_DRV_GetProcRegByProcId [R_ARM_CALL: .text+0x273a4] 
    /*00037c34*/ MOV         R1, R7 
    /*00037c38*/ MOV         SL, R0 
    /*00037c3c*/ MOV         R0, R8 
    /*00037c40*/ BL          0x0000000000037C40          @ VI_HAL_SetWchBufferWrapLine [R_ARM_CALL: .text+0x34a2c] 
    /*00037c44*/ MOV         R1, R6 
    /*00037c48*/ MOV         R0, R8 
    /*00037c4c*/ BL          0x0000000000037C4C          @ VI_HAL_SetWchBufferWrapEnable [R_ARM_CALL: .text+0x34a54] 
    /*00037c50*/ MOV         R3, #356                    @ 0x164 
    /*00037c54*/ MLA         R5, R3, R5, R9 
    /*00037c58*/ MOV         R2, R7 
    /*00037c5c*/ MOV         R0, SL 
    /*00037c60*/ LDR         R1, [R5, #16] 
    /*00037c64*/ SUB         R1, R1, #1 
    /*00037c68*/ SUB         R1, R1, R4 
    /*00037c6c*/ BL          0x0000000000037C6C          @ VI_HAL_SetWDRInputWrapLine [R_ARM_CALL: .text+0x34a78] 
    /*00037c70*/ LDR         R1, [R5, #16] 
    /*00037c74*/ MOV         R0, SL 
    /*00037c78*/ MOV         R2, R6 
    /*00037c7c*/ SUB         R1, R1, #1 
    /*00037c80*/ SUB         R1, R1, R4 
    /*00037c84*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    VI_DRV_SetWdrBufferWrapCtrl_x37c88:
    /*00037c88*/ B           VI_DRV_SetWdrBufferWrapCtrl_x37c88@ VI_HAL_SetWDRInputWrapEnable [R_ARM_JUMP24: .text+0x34a90] 
    VI_DRV_SetWdrBufferWrapCtrl_x37c8c:
    /*00037c8c*/ MOV         R4, #0 
    /*00037c90*/ B           VI_DRV_SetWdrBufferWrapCtrl_x37c24
FUNC_END VI_DRV_SetWdrBufferWrapCtrl


FUNC_BEGIN VI_DRV_GetPipeIdxFromBind
    /*00037c94*/ PUSH        {R4, LR} 
    /*00037c98*/ MOV         R4, R0 
    /*00037c9c*/ BL          0x0000000000037C9C          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*00037ca0*/ MOV         R3, #356                    @ 0x164 
    /*00037ca4*/ MOVW        R2, #0                      @ g_astViDrvDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00037ca8*/ MOVT        R2, #0                      @ g_astViDrvDevCtx [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00037cac*/ MUL         R0, R3, R0 
    /*00037cb0*/ ADD         R3, R2, R0 
    /*00037cb4*/ LDR         R1, [R3, #16] 
    /*00037cb8*/ CMP         R1, #0 
    /*00037cbc*/ BEQ         VI_DRV_GetPipeIdxFromBind_x37cf4
    /*00037cc0*/ LDR         R3, [R3, #20] 
    /*00037cc4*/ CMP         R4, R3 
    /*00037cc8*/ BEQ         VI_DRV_GetPipeIdxFromBind_x37cfc
    /*00037ccc*/ ADD         R3, R0, #20 
    /*00037cd0*/ MOV         R0, #0 
    /*00037cd4*/ ADD         R3, R3, R2 
    /*00037cd8*/ B           VI_DRV_GetPipeIdxFromBind_x37ce8
    VI_DRV_GetPipeIdxFromBind_x37cdc:
    /*00037cdc*/ LDR         R2, [R3, #4]! 
    /*00037ce0*/ CMP         R4, R2 
    /*00037ce4*/ POPEQ       {R4, PC} 
    VI_DRV_GetPipeIdxFromBind_x37ce8:
    /*00037ce8*/ ADD         R0, R0, #1 
    /*00037cec*/ CMP         R0, R1 
    /*00037cf0*/ BNE         VI_DRV_GetPipeIdxFromBind_x37cdc
    VI_DRV_GetPipeIdxFromBind_x37cf4:
    /*00037cf4*/ MVN         R0, #0 
    /*00037cf8*/ POP         {R4, PC} 
    VI_DRV_GetPipeIdxFromBind_x37cfc:
    /*00037cfc*/ MOV         R0, #0 
    /*00037d00*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetPipeIdxFromBind


FUNC_BEGIN VI_DRV_GetWDRModeFromDev
    /*00037d04*/ PUSH        {R4, LR} 
    /*00037d08*/ BL          0x0000000000037D08          @ VI_DRV_GetPipeBindDevIdBeforeInit [R_ARM_CALL: .text+0x317a4] 
    /*00037d0c*/ CMP         R0, #1 
    /*00037d10*/ MOVWLS      R3, #0                      @ g_astViDrvDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00037d14*/ MOVTLS      R3, #0                      @ g_astViDrvDevCtx [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00037d18*/ MOVLS       R2, #356                    @ 0x164 
    /*00037d1c*/ MLALS       R0, R2, R0, R3 
    /*00037d20*/ LDRLS       R0, [R0, #168]              @ 0xa8 
    /*00037d24*/ MOVHI       R0, #0 
    /*00037d28*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetWDRModeFromDev


FUNC_BEGIN VI_DRV_GetWDRMCacheLineByPipe
    /*00037d2c*/ PUSH        {R4, LR} 
    /*00037d30*/ BL          0x0000000000037D30          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*00037d34*/ MOVW        R2, #0                      @ g_astViDrvDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00037d38*/ MOVT        R2, #0                      @ g_astViDrvDevCtx [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00037d3c*/ MOV         R3, #356                    @ 0x164 
    /*00037d40*/ MLA         R0, R3, R0, R2 
    /*00037d44*/ LDR         R0, [R0, #172]              @ 0xac 
    /*00037d48*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetWDRMCacheLineByPipe


FUNC_BEGIN VI_DRV_GetPipeDefaultVCNumber
    /*00037d4c*/ PUSH        {R4, R5, R6, LR} 
    /*00037d50*/ MOV         R5, R0 
    /*00037d54*/ BL          0x0000000000037D54          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*00037d58*/ MOV         R3, #356                    @ 0x164 
    /*00037d5c*/ MOVW        R6, #0                      @ g_astViDrvDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00037d60*/ MOVT        R6, #0                      @ g_astViDrvDevCtx [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00037d64*/ MUL         R0, R3, R0 
    /*00037d68*/ ADD         R3, R6, R0 
    /*00037d6c*/ LDR         R2, [R3, #16] 
    /*00037d70*/ CMP         R2, #0 
    /*00037d74*/ BEQ         VI_DRV_GetPipeDefaultVCNumber_x37dac
    /*00037d78*/ LDR         R3, [R3, #20] 
    /*00037d7c*/ CMP         R5, R3 
    /*00037d80*/ BEQ         VI_DRV_GetPipeDefaultVCNumber_x37dd0
    /*00037d84*/ ADD         R0, R0, #20 
    /*00037d88*/ MOV         R4, #0 
    /*00037d8c*/ ADD         R0, R6, R0 
    /*00037d90*/ B           VI_DRV_GetPipeDefaultVCNumber_x37da0
    VI_DRV_GetPipeDefaultVCNumber_x37d94:
    /*00037d94*/ LDR         R3, [R0, #4]! 
    /*00037d98*/ CMP         R5, R3 
    /*00037d9c*/ BEQ         VI_DRV_GetPipeDefaultVCNumber_x37db0
    VI_DRV_GetPipeDefaultVCNumber_x37da0:
    /*00037da0*/ ADD         R4, R4, #1 
    /*00037da4*/ CMP         R4, R2 
    /*00037da8*/ BNE         VI_DRV_GetPipeDefaultVCNumber_x37d94
    VI_DRV_GetPipeDefaultVCNumber_x37dac:
    /*00037dac*/ MVN         R4, #0 
    VI_DRV_GetPipeDefaultVCNumber_x37db0:
    /*00037db0*/ MOV         R0, R5 
    /*00037db4*/ BL          0x0000000000037DB4          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*00037db8*/ MOV         R3, #356                    @ 0x164 
    /*00037dbc*/ MLA         R0, R3, R0, R6 
    /*00037dc0*/ LDR         R0, [R0, #16] 
    /*00037dc4*/ SUB         R0, R0, R4 
    /*00037dc8*/ SUB         R0, R0, #1 
    /*00037dcc*/ POP         {R4, R5, R6, PC} 
    VI_DRV_GetPipeDefaultVCNumber_x37dd0:
    /*00037dd0*/ MOV         R4, #0 
    /*00037dd4*/ B           VI_DRV_GetPipeDefaultVCNumber_x37db0
FUNC_END VI_DRV_GetPipeDefaultVCNumber


FUNC_BEGIN VI_DRV_SetPortIdConfig
    /*00037dd8*/ SUB         R3, R1, #3 
    /*00037ddc*/ CMP         R3, #1 
    /*00037de0*/ MOV         R3, R0 
    /*00037de4*/ BLS         VI_DRV_SetPortIdConfig_x37dfc
    /*00037de8*/ SUBS        R2, R1, #1 
    /*00037dec*/ MOVNE       R2, #1 
    VI_DRV_SetPortIdConfig_x37df0:
    /*00037df0*/ MOV         R0, R3 
    /*00037df4*/ MOV         R1, #0 
    VI_DRV_SetPortIdConfig_x37df8:
    /*00037df8*/ B           VI_DRV_SetPortIdConfig_x37df8@ VI_HAL_SetPortIdConfig [R_ARM_JUMP24: .text+0x35d0c] 
    VI_DRV_SetPortIdConfig_x37dfc:
    /*00037dfc*/ CMP         R1, #4 
    /*00037e00*/ MOV         R2, #1 
    /*00037e04*/ BNE         VI_DRV_SetPortIdConfig_x37df0
    /*00037e08*/ MOV         R1, R2 
    VI_DRV_SetPortIdConfig_x37e0c:
    /*00037e0c*/ B           VI_DRV_SetPortIdConfig_x37e0c@ VI_HAL_SetPortIdConfig [R_ARM_JUMP24: .text+0x35d0c] 
FUNC_END VI_DRV_SetPortIdConfig


FUNC_BEGIN VI_DRV_SetWDRLineAFifoEnable
    /*00037e10*/ SUBS        R3, R0, #0 
    /*00037e14*/ BNE         VI_DRV_SetWDRLineAFifoEnable_x37e24
    /*00037e18*/ SUB         R1, R1, #3 
    /*00037e1c*/ CMP         R1, #1 
    /*00037e20*/ BLS         VI_DRV_SetWDRLineAFifoEnable_x37e30
    VI_DRV_SetWDRLineAFifoEnable_x37e24:
    /*00037e24*/ MOV         R0, R3 
    /*00037e28*/ MOV         R1, #0 
    VI_DRV_SetWDRLineAFifoEnable_x37e2c:
    /*00037e2c*/ B           VI_DRV_SetWDRLineAFifoEnable_x37e2c@ VI_HAL_SetWDRLineAFifoEnable [R_ARM_JUMP24: .text+0x37500] 
    VI_DRV_SetWDRLineAFifoEnable_x37e30:
    /*00037e30*/ MOV         R1, #1 
    VI_DRV_SetWDRLineAFifoEnable_x37e34:
    /*00037e34*/ B           VI_DRV_SetWDRLineAFifoEnable_x37e34@ VI_HAL_SetWDRLineAFifoEnable [R_ARM_JUMP24: .text+0x37500] 
FUNC_END VI_DRV_SetWDRLineAFifoEnable


FUNC_BEGIN VI_DRV_GetMastPipeByDev
    /*00037e38*/ CMP         R1, #1 
    /*00037e3c*/ MOVWLS      R3, #0                      @ g_astViDrvDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00037e40*/ MOVTLS      R3, #0                      @ g_astViDrvDevCtx [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00037e44*/ MOVLS       R2, #356                    @ 0x164 
    /*00037e48*/ MLALS       R1, R2, R1, R3 
    /*00037e4c*/ LDRLS       R0, [R1, #20] 
    /*00037e50*/ BX          LR 
FUNC_END VI_DRV_GetMastPipeByDev


FUNC_BEGIN VI_DRV_OnlineEnableWDRPic
    /*00037e54*/ PUSH        {R4, R5, R6, LR} 
    /*00037e58*/ MOV         R5, R1 
    /*00037e5c*/ MOV         R4, R0 
    /*00037e60*/ BL          0x0000000000037E60          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00037e64*/ SUB         R0, R0, #2 
    /*00037e68*/ CMP         R0, #1 
    /*00037e6c*/ POPHI       {R4, R5, R6, PC} 
    /*00037e70*/ MOV         R0, R4 
    /*00037e74*/ MOV         R4, #0 
    /*00037e78*/ BL          0x0000000000037E78          @ VI_DRV_GetOnlineProcIDByPipe [R_ARM_CALL: .text+0x27360] 
    /*00037e7c*/ BL          0x0000000000037E7C          @ VI_DRV_GetProcRegByProcId [R_ARM_CALL: .text+0x273a4] 
    /*00037e80*/ MOV         R6, R0 
    VI_DRV_OnlineEnableWDRPic_x37e84:
    /*00037e84*/ MOV         R1, R4 
    /*00037e88*/ MOV         R2, R5 
    /*00037e8c*/ MOV         R0, R6 
    /*00037e90*/ ADD         R4, R4, #1 
    /*00037e94*/ BL          0x0000000000037E94          @ VI_HAL_EnableWDRPic [R_ARM_CALL: .text+0x34aa4] 
    /*00037e98*/ CMP         R4, #3 
    /*00037e9c*/ BNE         VI_DRV_OnlineEnableWDRPic_x37e84
    /*00037ea0*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_OnlineEnableWDRPic


FUNC_BEGIN VI_DRV_SetWDRPicConfig
    /*00037ea4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00037ea8*/ MOV         R9, R0 
    /*00037eac*/ SUB         SP, SP, #92                 @ 0x5c 
    /*00037eb0*/ LDR         R0, [R2, #12] 
    /*00037eb4*/ MOV         R4, R2 
    /*00037eb8*/ MOV         R5, R1 
    /*00037ebc*/ BL          0x0000000000037EBC          @ VI_DRV_TransPixel [R_ARM_CALL: .text+0x2d654] 
    /*00037ec0*/ LDR         R1, [R4, #24] 
    /*00037ec4*/ MOV         R8, #0 
    /*00037ec8*/ STR         R0, [SP, #72]               @ 0x48 
    /*00037ecc*/ LDR         R0, [R4, #12] 
    /*00037ed0*/ BL          0x0000000000037ED0          @ VI_DRV_TransBitWidth [R_ARM_CALL: .text+0x2d71c] 
    /*00037ed4*/ LDM         R4, {IP, LR} 
    /*00037ed8*/ LDR         R3, [R4, #20] 
    /*00037edc*/ MOV         R1, R5 
    /*00037ee0*/ LDRD        R6, [R4, #72]               @ 0x48 
    /*00037ee4*/ MOV         R2, SP 
    /*00037ee8*/ STR         IP, [SP, #48]               @ 0x30 
    /*00037eec*/ LDR         IP, [R4, #32] 
    /*00037ef0*/ STR         LR, [SP, #52]               @ 0x34 
    /*00037ef4*/ SUB         LR, R3, #3 
    /*00037ef8*/ CLZ         LR, LR 
    /*00037efc*/ STR         R8, [SP, #80]               @ 0x50 
    /*00037f00*/ STR         IP, [SP, #32] 
    /*00037f04*/ LDR         IP, [R4, #44]               @ 0x2c 
    /*00037f08*/ LSR         LR, LR, #5 
    /*00037f0c*/ LDRD        R4, [R4, #120]              @ 0x78 
    /*00037f10*/ STRD        R6, [SP] 
    /*00037f14*/ STR         IP, [SP, #40]               @ 0x28 
    /*00037f18*/ SUB         IP, R3, #1 
    /*00037f1c*/ CLZ         IP, IP 
    /*00037f20*/ SUBS        R3, R3, R8 
    /*00037f24*/ STR         LR, [SP, #56]               @ 0x38 
    /*00037f28*/ LSR         IP, IP, #5 
    /*00037f2c*/ MOVNE       R3, #1 
    /*00037f30*/ STR         R8, [SP, #76]               @ 0x4c 
    /*00037f34*/ STRD        R4, [SP, #16] 
    /*00037f38*/ STR         IP, [SP, #60]               @ 0x3c 
    /*00037f3c*/ STR         R3, [SP, #64]               @ 0x40 
    /*00037f40*/ STR         R0, [SP, #68]               @ 0x44 
    /*00037f44*/ MOV         R0, R9 
    /*00037f48*/ BL          0x0000000000037F48          @ VI_HAL_SetWDRPicConfig [R_ARM_CALL: .text+0x34ab8] 
    /*00037f4c*/ MOV         R0, R8 
    /*00037f50*/ ADD         SP, SP, #92                 @ 0x5c 
    /*00037f54*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
FUNC_END VI_DRV_SetWDRPicConfig


FUNC_BEGIN VI_DRV_UpdateWDRCmpAttr
    /*00037f58*/ PUSH        {R4, R5, R6, LR} 
    /*00037f5c*/ SUB         SP, SP, #200                @ 0xc8 
    /*00037f60*/ MOV         R4, R2 
    /*00037f64*/ MOV         R6, R0 
    /*00037f68*/ MOV         R2, #152                    @ 0x98 
    /*00037f6c*/ MOV         R5, R1 
    /*00037f70*/ ADD         R0, SP, #48                 @ 0x30 
    /*00037f74*/ MOV         R1, #0 
    /*00037f78*/ BL          0x0000000000037F78          @ memset [R_ARM_CALL: +0x0] 
    /*00037f7c*/ LDR         R2, [R4, #12] 
    /*00037f80*/ MOV         R0, #0 
    /*00037f84*/ LDR         R3, [R4, #24] 
    /*00037f88*/ SUB         R1, R2, #17 
    /*00037f8c*/ STR         R0, [SP, #36]               @ 0x24 
    /*00037f90*/ STR         R0, [SP, #40]               @ 0x28 
    /*00037f94*/ CMP         R1, #22 
    /*00037f98*/ LDRLS       PC, [PC, R1, LSL #2] 
    /*00037f9c*/ B           VI_DRV_UpdateWDRCmpAttr_x38070
    /*00037fa0*/ MULEQ       R3, R4, R0 
    /*00037fa4*/ MULEQ       R3, IP, R0 
    /*00037fa8*/ STRHEQ      R8, [R3], -R4 
    /*00037fac*/ ANDEQ       R8, R3, R4, LSR #1 
    /*00037fb0*/ ANDEQ       R8, R3, IP, LSR #1 
    /*00037fb4*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037fb8*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037fbc*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037fc0*/ STRDEQ      R7, [R3], -IP 
    /*00037fc4*/ STRDEQ      R7, [R3], -IP 
    /*00037fc8*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037fcc*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037fd0*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037fd4*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037fd8*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037fdc*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037fe0*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037fe4*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037fe8*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037fec*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037ff0*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037ff4*/ ANDEQ       R8, R3, R0, ROR R0 
    /*00037ff8*/ STRDEQ      R7, [R3], -IP 
    /*00037ffc*/ ADDS        R3, R3, #0 
    /*00038000*/ MOVNE       R3, #1 
    VI_DRV_UpdateWDRCmpAttr_x38004:
    /*00038004*/ LDR         LR, [R4, #20] 
    /*00038008*/ ADD         R1, SP, #24 
    /*0003800c*/ LDR         IP, [R4, #332]              @ 0x14c 
    /*00038010*/ MOV         R0, R5 
    /*00038014*/ STR         R3, [SP, #20] 
    /*00038018*/ STR         R2, [SP, #12] 
    /*0003801c*/ LDM         R4, {R2, R3} 
    /*00038020*/ MOV         R4, #0 
    /*00038024*/ STR         LR, [SP, #16] 
    /*00038028*/ STR         IP, [SP, #8] 
    /*0003802c*/ STR         R2, [SP, #28] 
    /*00038030*/ STR         R3, [SP, #32] 
    /*00038034*/ STR         R4, [SP, #44]               @ 0x2c 
    /*00038038*/ BL          0x0000000000038038          @ VI_DRV_GetIspPubBayerFormat [R_ARM_CALL: .text+0x38d2c] 
    /*0003803c*/ MOV         R0, #2 
    /*00038040*/ BL          0x0000000000038040          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038044*/ MOV         R2, R4 
    /*00038048*/ ADD         R1, SP, #48                 @ 0x30 
    /*0003804c*/ LDR         R3, [R0, #132]              @ 0x84 
    /*00038050*/ ADD         R0, SP, #8 
    /*00038054*/ BLX         R3 
    /*00038058*/ ADD         R2, SP, #48                 @ 0x30 
    /*0003805c*/ MOV         R1, R5 
    /*00038060*/ MOV         R0, R6 
    /*00038064*/ BL          0x0000000000038064          @ VI_HAL_SetDWRCmpAttr [R_ARM_CALL: .text+0x34b48] 
    /*00038068*/ ADD         SP, SP, #200                @ 0xc8 
    /*0003806c*/ POP         {R4, R5, R6, PC} 
    VI_DRV_UpdateWDRCmpAttr_x38070:
    /*00038070*/ MOVW        R3, #469                    @ 0x1d5 
    /*00038074*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11b68] 
    /*00038078*/ STR         R3, [SP] 
    /*0003807c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11b68] 
    /*00038080*/ LDR         R3, [PC, #52]               @ 0x00000000000380bc 
    /*00038084*/ MOV         R1, #16 
    /*00038088*/ MOV         R0, #6 
    /*0003808c*/ BL          0x000000000003808C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00038090*/ LDR         R2, [R4, #12] 
    /*00038094*/ MOV         R3, #0 
    /*00038098*/ B           VI_DRV_UpdateWDRCmpAttr_x38004
    /*0003809c*/ MOV         R3, #1 
    /*000380a0*/ B           VI_DRV_UpdateWDRCmpAttr_x38004
    /*000380a4*/ MOV         R3, #3 
    /*000380a8*/ B           VI_DRV_UpdateWDRCmpAttr_x38004
    /*000380ac*/ MOV         R3, #4 
    /*000380b0*/ B           VI_DRV_UpdateWDRCmpAttr_x38004
    /*000380b4*/ MOV         R3, #2 
    /*000380b8*/ B           VI_DRV_UpdateWDRCmpAttr_x38004
    /*000380bc*/ ANDEQ       R2, R0, R4, ASR #5 
FUNC_END VI_DRV_UpdateWDRCmpAttr


FUNC_BEGIN VI_DRV_GetWDRVB
    /*000380c0*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*000380c4*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*000380c8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000380cc*/ MOV         R7, R1 
    /*000380d0*/ LDR         R4, [R3, R0, LSL #2] 
    /*000380d4*/ SUB         SP, SP, #36                 @ 0x24 
    /*000380d8*/ ADD         R5, R4, #65536              @ 0x10000 
    /*000380dc*/ LDR         R3, [R5, #3016]             @ 0xbc8 
    /*000380e0*/ SUB         R2, R3, #17 
    /*000380e4*/ CMP         R2, #4 
    /*000380e8*/ LDRLS       PC, [PC, R2, LSL #2] 
    /*000380ec*/ B           VI_DRV_GetWDRVB_x38190
    /*000380f0*/ ANDEQ       R8, R3, R0, ROR R1 
    /*000380f4*/ ANDEQ       R8, R3, R4, LSL #2 
    /*000380f8*/ ANDEQ       R8, R3, R8, ROR R1 
    /*000380fc*/ ANDEQ       R8, R3, R0, LSL #3 
    /*00038100*/ ANDEQ       R8, R3, R8, LSL #3 
    /*00038104*/ MOV         R2, #10 
    VI_DRV_GetWDRVB_x38108:
    /*00038108*/ LDR         R6, [R5, #3020]             @ 0xbcc 
    /*0003810c*/ MOV         R1, R7 
    /*00038110*/ LDR         R5, [R4, #324]              @ 0x144 
    /*00038114*/ ADD         R0, SP, #8 
    /*00038118*/ LDR         LR, [R4, #336]              @ 0x150 
    /*0003811c*/ LDR         IP, [R4, #332]              @ 0x14c 
    /*00038120*/ STR         R6, [SP, #20] 
    /*00038124*/ STR         R2, [SP, #24] 
    /*00038128*/ STR         R3, [SP, #28] 
    /*0003812c*/ STR         R5, [SP, #8] 
    /*00038130*/ STR         LR, [SP, #16] 
    /*00038134*/ STR         IP, [SP, #12] 
    /*00038138*/ BL          0x0000000000038138          @ VI_WDR_GetVb [R_ARM_CALL: .text+0x377a4] 
    /*0003813c*/ SUBS        R4, R0, #0 
    /*00038140*/ BEQ         VI_DRV_GetWDRVB_x38164
    /*00038144*/ MOVW        R3, #529                    @ 0x211 
    /*00038148*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11be4] 
    /*0003814c*/ STR         R3, [SP] 
    /*00038150*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11be4] 
    /*00038154*/ LDR         R3, [PC, #100]              @ 0x00000000000381c0 
    /*00038158*/ MOV         R1, #16 
    /*0003815c*/ MOV         R0, #3 
    /*00038160*/ BL          0x0000000000038160          @ HI_LOG [R_ARM_CALL: +0x0] 
    VI_DRV_GetWDRVB_x38164:
    /*00038164*/ MOV         R0, R4 
    /*00038168*/ ADD         SP, SP, #36                 @ 0x24 
    /*0003816c*/ POP         {R4, R5, R6, R7, PC} 
    /*00038170*/ MOV         R2, #8 
    /*00038174*/ B           VI_DRV_GetWDRVB_x38108
    /*00038178*/ MOV         R2, #12 
    /*0003817c*/ B           VI_DRV_GetWDRVB_x38108
    /*00038180*/ MOV         R2, #14 
    /*00038184*/ B           VI_DRV_GetWDRVB_x38108
    /*00038188*/ MOV         R2, #16 
    /*0003818c*/ B           VI_DRV_GetWDRVB_x38108
    VI_DRV_GetWDRVB_x38190:
    /*00038190*/ STR         R3, [SP, #4] 
    /*00038194*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11ba4] 
    /*00038198*/ MOV         R3, #150                    @ 0x96 
    /*0003819c*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11ba4] 
    /*000381a0*/ STR         R3, [SP] 
    /*000381a4*/ MOV         R1, #16 
    /*000381a8*/ LDR         R3, [PC, #20]               @ 0x00000000000381c4 
    /*000381ac*/ MOV         R0, #7 
    /*000381b0*/ BL          0x00000000000381B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000381b4*/ LDR         R3, [R5, #3016]             @ 0xbc8 
    /*000381b8*/ MOV         R2, #0 
    /*000381bc*/ B           VI_DRV_GetWDRVB_x38108
    /*000381c0*/ ANDEQ       R2, R0, R0, LSL #6 
    /*000381c4*/ ANDEQ       R2, R0, R8, ROR #5 
FUNC_END VI_DRV_GetWDRVB


FUNC_BEGIN VI_DRV_WDRPoolInit
    /*000381c8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000381cc*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*000381d0*/ SUB         SP, SP, #92                 @ 0x5c 
    /*000381d4*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*000381d8*/ MVN         R2, #0 
    /*000381dc*/ MOV         R4, R0 
    /*000381e0*/ STR         R2, [SP, #12] 
    /*000381e4*/ LDR         R5, [R3, R0, LSL #2] 
    /*000381e8*/ BL          0x00000000000381E8          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*000381ec*/ MOV         R7, R0 
    /*000381f0*/ MOV         R0, R4 
    /*000381f4*/ BL          0x00000000000381F4          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*000381f8*/ ADD         R3, R5, #32768              @ 0x8000 
    /*000381fc*/ LDR         R8, [R3, #1348]             @ 0x544 
    /*00038200*/ LDR         R9, [R3, #1344]             @ 0x540 
    /*00038204*/ MOV         R6, R0 
    /*00038208*/ MOV         R0, R4 
    /*0003820c*/ BL          0x000000000003820C          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*00038210*/ MOV         SL, R0 
    /*00038214*/ MOV         R0, R6 
    /*00038218*/ BL          0x0000000000038218          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*0003821c*/ SUB         R0, R0, #2 
    /*00038220*/ CMP         R0, #1 
    /*00038224*/ MOVHI       R4, #0 
    /*00038228*/ BLS         VI_DRV_WDRPoolInit_x38238
    VI_DRV_WDRPoolInit_x3822c:
    /*0003822c*/ MOV         R0, R4 
    /*00038230*/ ADD         SP, SP, #92                 @ 0x5c 
    /*00038234*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_WDRPoolInit_x38238:
    /*00038238*/ MOV         R0, R4 
    /*0003823c*/ BL          0x000000000003823C          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00038240*/ SUB         R0, R0, #2 
    /*00038244*/ CMP         R0, #1 
    /*00038248*/ BLS         VI_DRV_WDRPoolInit_x38384
    /*0003824c*/ MOVW        R6, #0                      @ g_astViDrvDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00038250*/ MOVT        R6, #0                      @ g_astViDrvDevCtx [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*00038254*/ MOV         R3, #356                    @ 0x164 
    /*00038258*/ MOV         R0, #2 
    /*0003825c*/ MLA         R7, R3, R7, R6 
    /*00038260*/ STR         R8, [SP, #40]               @ 0x28 
    /*00038264*/ STR         R9, [SP, #16] 
    /*00038268*/ LDR         R3, [R7, #8] 
    /*0003826c*/ CMP         R3, #0 
    /*00038270*/ MOV         R3, #0 
    /*00038274*/ STR         R3, [SP, #36]               @ 0x24 
    /*00038278*/ LDRNE       FP, [R7, #308]              @ 0x134 
    /*0003827c*/ LDREQ       FP, [R7, #144]              @ 0x90 
    /*00038280*/ LDRNE       R7, [R7, #312]              @ 0x138 
    /*00038284*/ LDREQ       R7, [R7, #148]              @ 0x94 
    /*00038288*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0003828c*/ STR         R3, [SP, #48]               @ 0x30 
    /*00038290*/ STR         R3, [SP, #32] 
    /*00038294*/ STR         R3, [SP, #28] 
    /*00038298*/ STR         FP, [SP, #20] 
    /*0003829c*/ STR         R7, [SP, #24] 
    /*000382a0*/ BL          0x00000000000382A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000382a4*/ LDR         R3, [R0, #120]              @ 0x78 
    /*000382a8*/ CMP         R3, #0 
    /*000382ac*/ BEQ         VI_DRV_WDRPoolInit_x383a4
    /*000382b0*/ MOV         R0, #2 
    /*000382b4*/ BL          0x00000000000382B4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000382b8*/ ADD         R1, SP, #52                 @ 0x34 
    /*000382bc*/ LDR         R3, [R0, #120]              @ 0x78 
    /*000382c0*/ ADD         R0, SP, #16 
    /*000382c4*/ BLX         R3 
    /*000382c8*/ CMP         SL, #3 
    /*000382cc*/ LDR         R9, [SP, #52]               @ 0x34 
    /*000382d0*/ BEQ         VI_DRV_WDRPoolInit_x3831c
    VI_DRV_WDRPoolInit_x382d4:
    /*000382d4*/ MOV         R0, R4 
    /*000382d8*/ MOVW        R1, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11c4c] 
    /*000382dc*/ MOV         R3, R9 
    /*000382e0*/ MOVT        R1, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11c4c] 
    /*000382e4*/ MOV         R2, #1 
    /*000382e8*/ STR         R1, [SP] 
    /*000382ec*/ ADD         R1, SP, #12 
    /*000382f0*/ BL          0x00000000000382F0          @ VI_WDR_CreatePool [R_ARM_CALL: .text+0x37524] 
    /*000382f4*/ SUBS        R4, R0, #0 
    /*000382f8*/ BNE         VI_DRV_WDRPoolInit_x38360
    /*000382fc*/ LDR         R3, [SP, #12] 
    /*00038300*/ MOV         R0, R4 
    /*00038304*/ STR         R7, [R5, #336]              @ 0x150 
    /*00038308*/ STR         FP, [R5, #332]              @ 0x14c 
    /*0003830c*/ STR         R9, [R5, #328]              @ 0x148 
    /*00038310*/ STR         R3, [R5, #324]              @ 0x144 
    /*00038314*/ ADD         SP, SP, #92                 @ 0x5c 
    /*00038318*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_WDRPoolInit_x3831c:
    /*0003831c*/ CMP         R8, #0 
    /*00038320*/ CMPNE       R8, #3 
    /*00038324*/ BNE         VI_DRV_WDRPoolInit_x382d4
    /*00038328*/ MOV         R0, R4 
    /*0003832c*/ BL          0x000000000003832C          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*00038330*/ MOV         R3, #356                    @ 0x164 
    /*00038334*/ MOV         R2, #1 
    /*00038338*/ MLA         R6, R3, R0, R6 
    /*0003833c*/ MOV         R0, R4 
    /*00038340*/ LDR         R6, [R6, #172]              @ 0xac 
    /*00038344*/ MOV         R1, R6 
    /*00038348*/ BL          0x0000000000038348          @ VI_DRV_SetWdrBufferWrapCtrl [R_ARM_CALL: .text+0x37bac] 
    /*0003834c*/ MOV         R0, R9 
    /*00038350*/ MOV         R1, R7 
    /*00038354*/ BL          0x0000000000038354          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00038358*/ MUL         R9, R6, R0 
    /*0003835c*/ B           VI_DRV_WDRPoolInit_x382d4
    VI_DRV_WDRPoolInit_x38360:
    /*00038360*/ MOVW        R3, #626                    @ 0x272 
    /*00038364*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11c50] 
    /*00038368*/ STR         R3, [SP] 
    /*0003836c*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11c50] 
    /*00038370*/ LDR         R3, [PC, #84]               @ 0x00000000000383cc 
    /*00038374*/ MOV         R1, #16 
    /*00038378*/ MOV         R0, #3 
    /*0003837c*/ BL          0x000000000003837C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00038380*/ B           VI_DRV_WDRPoolInit_x3822c
    VI_DRV_WDRPoolInit_x38384:
    /*00038384*/ MOV         R0, R6 
    /*00038388*/ MOV         R4, #0 
    /*0003838c*/ BL          0x000000000003838C          @ VI_DRV_GetOnlineProcIDByPipe [R_ARM_CALL: .text+0x27360] 
    /*00038390*/ MOV         R2, #1 
    /*00038394*/ MOV         R1, R2 
    /*00038398*/ MOV         R3, R4 
    /*0003839c*/ BL          0x000000000003839C          @ VI_HAL_SetWdrTunlCtrl [R_ARM_CALL: .text+0x348f4] 
    /*000383a0*/ B           VI_DRV_WDRPoolInit_x3822c
    VI_DRV_WDRPoolInit_x383a4:
    /*000383a4*/ MOVW        R3, #606                    @ 0x25e 
    /*000383a8*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11c18] 
    /*000383ac*/ STR         R3, [SP] 
    /*000383b0*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11c18] 
    /*000383b4*/ LDR         R3, [PC, #16]               @ 0x00000000000383cc 
    /*000383b8*/ MOV         R1, #16 
    /*000383bc*/ MOV         R0, #3 
    /*000383c0*/ MVN         R4, #0 
    /*000383c4*/ BL          0x00000000000383C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000383c8*/ B           VI_DRV_WDRPoolInit_x3822c
    /*000383cc*/ ANDEQ       R2, R0, R0, LSL R3 
FUNC_END VI_DRV_WDRPoolInit


FUNC_BEGIN VI_DRV_WDRPoolDeInit
    /*000383d0*/ PUSH        {R4, R5, R6, LR} 
    /*000383d4*/ MOV         R4, R0 
    /*000383d8*/ BL          0x00000000000383D8          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*000383dc*/ CMP         R0, #1 
    /*000383e0*/ BLS         VI_DRV_WDRPoolDeInit_x38418
    /*000383e4*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*000383e8*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*000383ec*/ MOV         R0, R4 
    /*000383f0*/ LDR         R5, [R3, R4, LSL #2] 
    /*000383f4*/ BL          0x00000000000383F4          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*000383f8*/ LDR         R1, [R5, #324]              @ 0x144 
    /*000383fc*/ CMP         R0, #1 
    /*00038400*/ MOVHI       R0, #0 
    /*00038404*/ MOVLS       R0, #1 
    /*00038408*/ CMN         R1, #1 
    /*0003840c*/ MOVEQ       R0, #0 
    /*00038410*/ CMP         R0, #0 
    /*00038414*/ BNE         VI_DRV_WDRPoolDeInit_x38420
    VI_DRV_WDRPoolDeInit_x38418:
    /*00038418*/ MOV         R0, #0 
    /*0003841c*/ POP         {R4, R5, R6, PC} 
    VI_DRV_WDRPoolDeInit_x38420:
    /*00038420*/ MOV         R0, R4 
    /*00038424*/ BL          0x0000000000038424          @ VI_WDR_DestoryPool [R_ARM_CALL: .text+0x37660] 
    /*00038428*/ MVN         R3, #0 
    /*0003842c*/ STR         R3, [R5, #324]              @ 0x144 
    /*00038430*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_WDRPoolDeInit


FUNC_BEGIN VI_DRV_PreallocVB
    /*00038434*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00038438*/ MOV         R5, R0 
    /*0003843c*/ MOV         R6, R1 
    /*00038440*/ BL          0x0000000000038440          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*00038444*/ MOVW        R8, #0                      @ g_astViDrvDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x130d0] 
    /*00038448*/ MOVT        R8, #0                      @ g_astViDrvDevCtx [R_ARM_MOVT_ABS: .bss+0x130d0] 
    /*0003844c*/ MOV         R7, R0 
    /*00038450*/ MOV         R0, R5 
    /*00038454*/ BL          0x0000000000038454          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*00038458*/ MOV         R3, #356                    @ 0x164 
    /*0003845c*/ MUL         R0, R3, R0 
    /*00038460*/ ADD         R3, R8, R0 
    /*00038464*/ LDR         R2, [R3, #16] 
    /*00038468*/ CMP         R2, #0 
    /*0003846c*/ BEQ         VI_DRV_PreallocVB_x384a4
    /*00038470*/ LDR         R3, [R3, #20] 
    /*00038474*/ CMP         R5, R3 
    /*00038478*/ BEQ         VI_DRV_PreallocVB_x38590
    /*0003847c*/ ADD         R0, R0, #20 
    /*00038480*/ MOV         R4, #0 
    /*00038484*/ ADD         R0, R8, R0 
    /*00038488*/ B           VI_DRV_PreallocVB_x38498
    VI_DRV_PreallocVB_x3848c:
    /*0003848c*/ LDR         R3, [R0, #4]! 
    /*00038490*/ CMP         R5, R3 
    /*00038494*/ BEQ         VI_DRV_PreallocVB_x384a8
    VI_DRV_PreallocVB_x38498:
    /*00038498*/ ADD         R4, R4, #1 
    /*0003849c*/ CMP         R4, R2 
    /*000384a0*/ BNE         VI_DRV_PreallocVB_x3848c
    VI_DRV_PreallocVB_x384a4:
    /*000384a4*/ MVN         R4, #0 
    VI_DRV_PreallocVB_x384a8:
    /*000384a8*/ MOV         R0, R5 
    /*000384ac*/ BL          0x00000000000384AC          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*000384b0*/ MOV         R9, R0 
    /*000384b4*/ MOV         R0, R5 
    /*000384b8*/ BL          0x00000000000384B8          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*000384bc*/ CMP         R9, #1 
    /*000384c0*/ BLS         VI_DRV_PreallocVB_x384ec
    /*000384c4*/ SUB         R0, R0, #2 
    /*000384c8*/ CMP         R0, #1 
    /*000384cc*/ BLS         VI_DRV_PreallocVB_x384ec
    /*000384d0*/ MOV         R0, R5 
    /*000384d4*/ BL          0x00000000000384D4          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*000384d8*/ MOV         SL, R0 
    /*000384dc*/ BL          0x00000000000384DC          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*000384e0*/ SUB         R0, R0, #2 
    /*000384e4*/ CMP         R0, #1 
    /*000384e8*/ BLS         VI_DRV_PreallocVB_x384f8
    VI_DRV_PreallocVB_x384ec:
    /*000384ec*/ MOV         R9, #0 
    VI_DRV_PreallocVB_x384f0:
    /*000384f0*/ MOV         R0, R9 
    /*000384f4*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_PreallocVB_x384f8:
    /*000384f8*/ MOV         R1, R6 
    /*000384fc*/ MOV         R0, R5 
    /*00038500*/ BL          0x0000000000038500          @ VI_DRV_GetWDRVB [R_ARM_CALL: .text+0x380c0] 
    /*00038504*/ MOV         R2, R6 
    /*00038508*/ CLZ         R1, R0 
    /*0003850c*/ MOV         R9, R0 
    /*00038510*/ MOV         R0, R5 
    /*00038514*/ LSR         R1, R1, #5 
    /*00038518*/ BL          0x0000000000038518          @ VI_DRV_SetFeWchPicConfig [R_ARM_CALL: .text+0x32b7c] 
    /*0003851c*/ MOV         R1, R6 
    /*00038520*/ MOV         R0, R5 
    /*00038524*/ BL          0x0000000000038524          @ VI_DRV_UpdateWchCmpAttr [R_ARM_CALL: .text+0x32dd4] 
    /*00038528*/ MOV         R0, SL 
    /*0003852c*/ BL          0x000000000003852C          @ VI_DRV_GetOnlineProcIDByPipe [R_ARM_CALL: .text+0x27360] 
    /*00038530*/ MOV         FP, R0 
    /*00038534*/ BL          0x0000000000038534          @ VI_DRV_GetProcRegByProcId [R_ARM_CALL: .text+0x273a4] 
    /*00038538*/ MOV         R3, #356                    @ 0x164 
    /*0003853c*/ MOV         R2, R5 
    /*00038540*/ MLA         R7, R3, R7, R8 
    /*00038544*/ LDR         R1, [R7, #16] 
    /*00038548*/ SUB         R1, R1, #1 
    /*0003854c*/ SUB         R1, R1, R4 
    /*00038550*/ MOV         SL, R0 
    /*00038554*/ MOV         R0, FP 
    /*00038558*/ BL          0x0000000000038558          @ VI_DRV_SetOnlineSel [R_ARM_CALL: .text+0x32f8c] 
    /*0003855c*/ LDR         R1, [R7, #16] 
    /*00038560*/ MOV         R2, R6 
    /*00038564*/ MOV         R0, SL 
    /*00038568*/ SUB         R1, R1, #1 
    /*0003856c*/ SUB         R1, R1, R4 
    /*00038570*/ BL          0x0000000000038570          @ VI_DRV_SetWDRPicConfig [R_ARM_CALL: .text+0x37ea4] 
    /*00038574*/ LDR         R1, [R7, #16] 
    /*00038578*/ MOV         R0, SL 
    /*0003857c*/ MOV         R2, R6 
    /*00038580*/ SUB         R1, R1, #1 
    /*00038584*/ SUB         R1, R1, R4 
    /*00038588*/ BL          0x0000000000038588          @ VI_DRV_UpdateWDRCmpAttr [R_ARM_CALL: .text+0x37f58] 
    /*0003858c*/ B           VI_DRV_PreallocVB_x384f0
    VI_DRV_PreallocVB_x38590:
    /*00038590*/ MOV         R4, #0 
    /*00038594*/ B           VI_DRV_PreallocVB_x384a8
FUNC_END VI_DRV_PreallocVB


FUNC_BEGIN VI_DRV_GetIspBeBufNum
    /*00038598*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*0003859c*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*000385a0*/ LDR         R3, [R3, R0, LSL #2] 
    /*000385a4*/ ADD         R3, R3, #86016              @ 0x15000 
    /*000385a8*/ LDR         R0, [R3, #1708]             @ 0x6ac 
    /*000385ac*/ BX          LR 
FUNC_END VI_DRV_GetIspBeBufNum


FUNC_BEGIN VI_DRV_GetBeCfg
    /*000385b0*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*000385b4*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*000385b8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000385bc*/ MOV         R4, #0 
    /*000385c0*/ LDR         R6, [R3, R0, LSL #2] 
    /*000385c4*/ MOV         R5, #0 
    /*000385c8*/ MOV         R3, #0 
    /*000385cc*/ STRD        R4, [R1] 
    /*000385d0*/ ADD         IP, R6, #65536              @ 0x10000 
    /*000385d4*/ STR         R3, [R1, #16] 
    /*000385d8*/ SUB         SP, SP, #12 
    /*000385dc*/ LDR         LR, [IP, #3004]             @ 0xbbc 
    /*000385e0*/ CMP         LR, #1 
    /*000385e4*/ BEQ         VI_DRV_GetBeCfg_x38684
    /*000385e8*/ LDR         IP, [IP, #2996]             @ 0xbb4 
    /*000385ec*/ CMP         IP, #2 
    /*000385f0*/ BEQ         VI_DRV_GetBeCfg_x38684
    /*000385f4*/ MOV         R5, R0 
    /*000385f8*/ MOV         R0, #28 
    /*000385fc*/ MOV         R7, R2 
    /*00038600*/ MOV         R4, R1 
    /*00038604*/ BL          0x0000000000038604          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038608*/ LDR         R3, [R0, #68]               @ 0x44 
    /*0003860c*/ CMP         R3, #0 
    /*00038610*/ MOVEQ       R2, #65                     @ 0x41 
    /*00038614*/ BEQ         VI_DRV_GetBeCfg_x38694
    /*00038618*/ MOV         R0, #28 
    /*0003861c*/ BL          0x000000000003861C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038620*/ MOV         R1, R7 
    /*00038624*/ LDR         R3, [R0, #68]               @ 0x44 
    /*00038628*/ MOV         R0, R5 
    /*0003862c*/ BLX         R3 
    /*00038630*/ CMP         R0, #0 
    /*00038634*/ BNE         VI_DRV_GetBeCfg_x38690
    /*00038638*/ MOV         R0, #28 
    /*0003863c*/ BL          0x000000000003863C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038640*/ LDR         R3, [R0, #56]               @ 0x38 
    /*00038644*/ CMP         R3, #0 
    /*00038648*/ BEQ         VI_DRV_GetBeCfg_x386bc
    /*0003864c*/ MOV         R0, #28 
    /*00038650*/ BL          0x0000000000038650          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038654*/ MOV         R1, R4 
    /*00038658*/ LDR         R3, [R0, #56]               @ 0x38 
    /*0003865c*/ MOV         R0, R5 
    /*00038660*/ BLX         R3 
    /*00038664*/ CMP         R0, #0 
    /*00038668*/ BNE         VI_DRV_GetBeCfg_x38688
    /*0003866c*/ ADD         R6, R6, #86016              @ 0x15000 
    /*00038670*/ LDR         R3, [R6, #1708]             @ 0x6ac 
    /*00038674*/ ADD         R3, R3, #1 
    /*00038678*/ STR         R3, [R6, #1708]             @ 0x6ac 
    /*0003867c*/ ADD         SP, SP, #12 
    /*00038680*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_GetBeCfg_x38684:
    /*00038684*/ MOV         R0, R3 
    VI_DRV_GetBeCfg_x38688:
    /*00038688*/ ADD         SP, SP, #12 
    /*0003868c*/ POP         {R4, R5, R6, R7, PC} 
    VI_DRV_GetBeCfg_x38690:
    /*00038690*/ MOV         R2, #74                     @ 0x4a 
    VI_DRV_GetBeCfg_x38694:
    /*00038694*/ STR         R2, [SP] 
    /*00038698*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2324] 
    /*0003869c*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11c88] 
    /*000386a0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2324] 
    /*000386a4*/ MOV         R1, #16 
    /*000386a8*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11c88] 
    /*000386ac*/ MOV         R0, #3 
    /*000386b0*/ BL          0x00000000000386B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000386b4*/ MVN         R0, #0 
    /*000386b8*/ B           VI_DRV_GetBeCfg_x38688
    VI_DRV_GetBeCfg_x386bc:
    /*000386bc*/ MOV         R2, #82                     @ 0x52 
    /*000386c0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2324] 
    /*000386c4*/ STR         R2, [SP] 
    /*000386c8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2324] 
    /*000386cc*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11cc4] 
    /*000386d0*/ MOV         R1, #16 
    /*000386d4*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11cc4] 
    /*000386d8*/ MOV         R0, #3 
    /*000386dc*/ BL          0x00000000000386DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000386e0*/ MVN         R0, #0 
    /*000386e4*/ B           VI_DRV_GetBeCfg_x38688
FUNC_END VI_DRV_GetBeCfg


FUNC_BEGIN VI_DRV_HoldBeCfg
    /*000386e8*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*000386ec*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*000386f0*/ PUSH        {R4, R5, R6, LR} 
    /*000386f4*/ SUB         SP, SP, #8 
    /*000386f8*/ LDR         R5, [R3, R0, LSL #2] 
    /*000386fc*/ ADD         R3, R5, #65536              @ 0x10000 
    /*00038700*/ LDR         R2, [R3, #3004]             @ 0xbbc 
    /*00038704*/ CMP         R2, #1 
    /*00038708*/ BEQ         VI_DRV_HoldBeCfg_x3876c
    /*0003870c*/ LDR         R3, [R3, #2996]             @ 0xbb4 
    /*00038710*/ CMP         R3, #2 
    /*00038714*/ BEQ         VI_DRV_HoldBeCfg_x3876c
    /*00038718*/ MOV         R4, R0 
    /*0003871c*/ MOV         R0, #28 
    /*00038720*/ MOV         R6, R1 
    /*00038724*/ BL          0x0000000000038724          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038728*/ LDR         R3, [R0, #64]               @ 0x40 
    /*0003872c*/ CMP         R3, #0 
    /*00038730*/ BEQ         VI_DRV_HoldBeCfg_x38778
    /*00038734*/ MOV         R0, #28 
    /*00038738*/ BL          0x0000000000038738          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0003873c*/ MOV         R1, R6 
    /*00038740*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00038744*/ MOV         R0, R4 
    /*00038748*/ BLX         R3 
    /*0003874c*/ CMP         R0, #0 
    /*00038750*/ BNE         VI_DRV_HoldBeCfg_x38770
    /*00038754*/ ADD         R5, R5, #86016              @ 0x15000 
    /*00038758*/ LDR         R3, [R5, #1708]             @ 0x6ac 
    /*0003875c*/ ADD         R3, R3, #1 
    /*00038760*/ STR         R3, [R5, #1708]             @ 0x6ac 
    /*00038764*/ ADD         SP, SP, #8 
    /*00038768*/ POP         {R4, R5, R6, PC} 
    VI_DRV_HoldBeCfg_x3876c:
    /*0003876c*/ MOV         R0, #0 
    VI_DRV_HoldBeCfg_x38770:
    /*00038770*/ ADD         SP, SP, #8 
    /*00038774*/ POP         {R4, R5, R6, PC} 
    VI_DRV_HoldBeCfg_x38778:
    /*00038778*/ MOV         R3, #112                    @ 0x70 
    /*0003877c*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11d00] 
    /*00038780*/ STR         R3, [SP] 
    /*00038784*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11d00] 
    /*00038788*/ LDR         R3, [PC, #16]               @ 0x00000000000387a0 
    /*0003878c*/ MOV         R1, #16 
    /*00038790*/ MOV         R0, #3 
    /*00038794*/ BL          0x0000000000038794          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00038798*/ MVN         R0, #0 
    /*0003879c*/ B           VI_DRV_HoldBeCfg_x38770
    /*000387a0*/ ANDEQ       R2, R0, R4, LSR R3 
FUNC_END VI_DRV_HoldBeCfg


FUNC_BEGIN VI_DRV_GetBeCfgForSyncStitchGrp
    /*000387a4*/ BX          LR 
FUNC_END VI_DRV_GetBeCfgForSyncStitchGrp


FUNC_BEGIN VI_DRV_PutBeCfgForSyncStitchGrp
    /*000387a8*/ BX          LR 
FUNC_END VI_DRV_PutBeCfgForSyncStitchGrp


FUNC_BEGIN VI_DRV_GetBeSttInfo
    /*000387ac*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*000387b0*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*000387b4*/ LDR         IP, [R3, R0, LSL #2] 
    /*000387b8*/ ADD         R3, IP, #65536              @ 0x10000 
    /*000387bc*/ LDR         R3, [R3, #2996]             @ 0xbb4 
    /*000387c0*/ CMP         R3, #2 
    /*000387c4*/ BEQ         VI_DRV_GetBeSttInfo_x38800
    /*000387c8*/ ADD         R3, IP, #86016              @ 0x15000 
    /*000387cc*/ MOV         R0, R2 
    /*000387d0*/ PUSH        {R4, LR} 
    /*000387d4*/ MOV         LR, #12 
    /*000387d8*/ LDR         R3, [R3, #1464]             @ 0x5b8 
    /*000387dc*/ MOVW        R2, #42060                  @ 0xa44c 
    /*000387e0*/ RSB         R3, R3, #1 
    /*000387e4*/ MLA         R1, LR, R3, R1 
    /*000387e8*/ ADD         R1, R1, #21760              @ 0x5500 
    /*000387ec*/ ADD         R1, R1, #120                @ 0x78 
    /*000387f0*/ LDR         R1, [IP, R1, LSL #2] 
    /*000387f4*/ BL          0x00000000000387F4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000387f8*/ MOV         R0, #0 
    /*000387fc*/ POP         {R4, PC} 
    VI_DRV_GetBeSttInfo_x38800:
    /*00038800*/ MVN         R0, #0 
    /*00038804*/ BX          LR 
FUNC_END VI_DRV_GetBeSttInfo


FUNC_BEGIN VI_DRV_GetStitchSyncBeSttInfo
    /*00038808*/ MVN         R0, #0 
    /*0003880c*/ BX          LR 
FUNC_END VI_DRV_GetStitchSyncBeSttInfo


FUNC_BEGIN VI_DRV_SwitchBeSttInfo
    /*00038810*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*00038814*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*00038818*/ LDR         R3, [R3, R0, LSL #2] 
    /*0003881c*/ MOV         R0, #0 
    /*00038820*/ ADD         R3, R3, #86016              @ 0x15000 
    /*00038824*/ LDR         R2, [R3, #1464]             @ 0x5b8 
    /*00038828*/ RSB         R2, R2, #1 
    /*0003882c*/ STR         R2, [R3, #1464]             @ 0x5b8 
    /*00038830*/ BX          LR 
FUNC_END VI_DRV_SwitchBeSttInfo


FUNC_BEGIN VI_DRV_StitchSyncBeSttInfo
    /*00038834*/ MOV         R0, #0 
    /*00038838*/ BX          LR 
FUNC_END VI_DRV_StitchSyncBeSttInfo


FUNC_BEGIN VI_DRV_PutFreeBeBuf
    /*0003883c*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*00038840*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*00038844*/ PUSH        {R4, R5, R6, LR} 
    /*00038848*/ LDR         R6, [R3, R0, LSL #2] 
    /*0003884c*/ ADD         R3, R6, #65536              @ 0x10000 
    /*00038850*/ LDR         R2, [R3, #3004]             @ 0xbbc 
    /*00038854*/ CMP         R2, #1 
    /*00038858*/ BEQ         VI_DRV_PutFreeBeBuf_x38890
    /*0003885c*/ LDR         R3, [R3, #2996]             @ 0xbb4 
    /*00038860*/ CMP         R3, #2 
    /*00038864*/ BEQ         VI_DRV_PutFreeBeBuf_x38890
    /*00038868*/ MOV         R4, R0 
    /*0003886c*/ MOV         R0, #28 
    /*00038870*/ MOV         R5, R1 
    /*00038874*/ BL          0x0000000000038874          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038878*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0003887c*/ CMP         R3, #0 
    /*00038880*/ BEQ         VI_DRV_PutFreeBeBuf_x388c8
    /*00038884*/ LDRD        R2, [R5] 
    /*00038888*/ ORRS        R3, R2, R3 
    /*0003888c*/ BNE         VI_DRV_PutFreeBeBuf_x38898
    VI_DRV_PutFreeBeBuf_x38890:
    /*00038890*/ MOV         R0, #0 
    /*00038894*/ POP         {R4, R5, R6, PC} 
    VI_DRV_PutFreeBeBuf_x38898:
    /*00038898*/ MOV         R0, #28 
    /*0003889c*/ BL          0x000000000003889C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000388a0*/ MOV         R1, R5 
    /*000388a4*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*000388a8*/ MOV         R0, R4 
    /*000388ac*/ BLX         R3 
    /*000388b0*/ CMP         R0, #0 
    /*000388b4*/ ADDEQ       R6, R6, #86016              @ 0x15000 
    /*000388b8*/ LDREQ       R3, [R6, #1708]             @ 0x6ac 
    /*000388bc*/ SUBEQ       R3, R3, #1 
    /*000388c0*/ STREQ       R3, [R6, #1708]             @ 0x6ac 
    /*000388c4*/ POP         {R4, R5, R6, PC} 
    VI_DRV_PutFreeBeBuf_x388c8:
    /*000388c8*/ MVN         R0, #0 
    /*000388cc*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_PutFreeBeBuf


FUNC_BEGIN VI_DRV_IsStitchSyncLostFrame
    /*000388d0*/ MOV         R0, #0 
    /*000388d4*/ BX          LR 
FUNC_END VI_DRV_IsStitchSyncLostFrame


FUNC_BEGIN VI_DRV_GetFrameInfoFromIsp
    /*000388d8*/ PUSH        {R4, R5, R6, LR} 
    /*000388dc*/ MOV         R4, R0 
    /*000388e0*/ MOV         R0, #28 
    /*000388e4*/ MOV         R5, R1 
    /*000388e8*/ BL          0x00000000000388E8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000388ec*/ LDR         R3, [R0, #28] 
    /*000388f0*/ CMP         R3, #0 
    /*000388f4*/ BEQ         VI_DRV_GetFrameInfoFromIsp_x38914
    /*000388f8*/ MOV         R0, #28 
    /*000388fc*/ BL          0x00000000000388FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038900*/ MOV         R1, R5 
    /*00038904*/ LDR         R3, [R0, #28] 
    /*00038908*/ MOV         R0, R4 
    /*0003890c*/ POP         {R4, R5, R6, LR} 
    /*00038910*/ BX          R3 
    VI_DRV_GetFrameInfoFromIsp_x38914:
    /*00038914*/ MVN         R0, #0 
    /*00038918*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_GetFrameInfoFromIsp


FUNC_BEGIN VI_DRV_EnableIspAlgorithm
    /*0003891c*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*00038920*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*00038924*/ LDR         R3, [R3, R0, LSL #2] 
    /*00038928*/ ADD         R0, R3, #65536              @ 0x10000 
    /*0003892c*/ LDR         IP, [R0, #3004]             @ 0xbbc 
    /*00038930*/ CMP         IP, #0 
    /*00038934*/ BNE         VI_DRV_EnableIspAlgorithm_x38970
    /*00038938*/ LDR         R0, [R0, #2996]             @ 0xbb4 
    /*0003893c*/ CMP         R0, #2 
    /*00038940*/ BEQ         VI_DRV_EnableIspAlgorithm_x38970
    /*00038944*/ ADD         R3, R3, #86016              @ 0x15000 
    /*00038948*/ MOV         R0, #112640                 @ 0x1b800 
    /*0003894c*/ LDR         R3, [R3, #1592]             @ 0x638 
    /*00038950*/ MLA         R1, R0, R1, R3 
    /*00038954*/ ADD         R1, R1, #45056              @ 0xb000 
    /*00038958*/ LDR         R3, [R1, #592]              @ 0x250 
    /*0003895c*/ STR         R3, [R2, #32] 
    /*00038960*/ LDR         R3, [R1, #596]              @ 0x254 
    /*00038964*/ STR         R3, [R2, #36]               @ 0x24 
    /*00038968*/ LDR         R3, [R1, #604]              @ 0x25c 
    /*0003896c*/ STR         R3, [R2, #44]               @ 0x2c 
    VI_DRV_EnableIspAlgorithm_x38970:
    /*00038970*/ MOV         R0, #0 
    /*00038974*/ BX          LR 
FUNC_END VI_DRV_EnableIspAlgorithm


FUNC_BEGIN VI_DRV_SetBeLut2SttWidth
    /*00038978*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*0003897c*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*00038980*/ LDR         R3, [R3, R0, LSL #2] 
    /*00038984*/ ADD         R0, R3, #65536              @ 0x10000 
    /*00038988*/ LDR         R0, [R0, #3004]             @ 0xbbc 
    /*0003898c*/ CMP         R0, #0 
    /*00038990*/ BNE         VI_DRV_SetBeLut2SttWidth_x389f8
    /*00038994*/ ADD         R3, R3, #86016              @ 0x15000 
    /*00038998*/ MOV         R0, #112640                 @ 0x1b800 
    /*0003899c*/ LDR         R3, [R3, #1592]             @ 0x638 
    /*000389a0*/ MLA         R1, R0, R1, R3 
    /*000389a4*/ ADD         R1, R1, #45056              @ 0xb000 
    /*000389a8*/ LDR         R3, [R1, #2356]             @ 0x934 
    /*000389ac*/ STR         R3, [R2, #1796]             @ 0x704 
    /*000389b0*/ LDR         R3, [R1, #2368]             @ 0x940 
    /*000389b4*/ STR         R3, [R2, #1808]             @ 0x710 
    /*000389b8*/ LDR         R3, [R1, #2380]             @ 0x94c 
    /*000389bc*/ STR         R3, [R2, #1820]             @ 0x71c 
    /*000389c0*/ LDR         R3, [R1, #2404]             @ 0x964 
    /*000389c4*/ STR         R3, [R2, #1844]             @ 0x734 
    /*000389c8*/ LDR         R3, [R1, #2416]             @ 0x970 
    /*000389cc*/ STR         R3, [R2, #1856]             @ 0x740 
    /*000389d0*/ LDR         R3, [R1, #2428]             @ 0x97c 
    /*000389d4*/ STR         R3, [R2, #1868]             @ 0x74c 
    /*000389d8*/ LDR         R3, [R1, #2440]             @ 0x988 
    /*000389dc*/ STR         R3, [R2, #1880]             @ 0x758 
    /*000389e0*/ LDR         R3, [R1, #2452]             @ 0x994 
    /*000389e4*/ STR         R3, [R2, #1892]             @ 0x764 
    /*000389e8*/ LDR         R3, [R1, #2464]             @ 0x9a0 
    /*000389ec*/ STR         R3, [R2, #1904]             @ 0x770 
    /*000389f0*/ LDR         R3, [R1, #2476]             @ 0x9ac 
    /*000389f4*/ STR         R3, [R2, #1916]             @ 0x77c 
    VI_DRV_SetBeLut2SttWidth_x389f8:
    /*000389f8*/ MOV         R0, #0 
    /*000389fc*/ BX          LR 
FUNC_END VI_DRV_SetBeLut2SttWidth


FUNC_BEGIN VI_DRV_IspBeEndIntProc
    /*00038a00*/ PUSH        {R4, LR} 
    /*00038a04*/ MOV         R4, R0 
    /*00038a08*/ MOV         R0, #28 
    /*00038a0c*/ BL          0x0000000000038A0C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038a10*/ CMP         R0, #0 
    /*00038a14*/ BEQ         VI_DRV_IspBeEndIntProc_x38a44
    /*00038a18*/ MOV         R0, #28 
    /*00038a1c*/ BL          0x0000000000038A1C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038a20*/ LDR         R3, [R0, #96]               @ 0x60 
    /*00038a24*/ CMP         R3, #0 
    /*00038a28*/ BEQ         VI_DRV_IspBeEndIntProc_x38a44
    /*00038a2c*/ MOV         R0, #28 
    /*00038a30*/ BL          0x0000000000038A30          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038a34*/ LDR         R3, [R0, #96]               @ 0x60 
    /*00038a38*/ MOV         R0, R4 
    /*00038a3c*/ POP         {R4, LR} 
    /*00038a40*/ BX          R3 
    VI_DRV_IspBeEndIntProc_x38a44:
    /*00038a44*/ MVN         R0, #0 
    /*00038a48*/ POP         {R4, PC} 
FUNC_END VI_DRV_IspBeEndIntProc


FUNC_BEGIN VI_DRV_GetColorGamutFromIsp
    /*00038a4c*/ PUSH        {R4, LR} 
    /*00038a50*/ MOV         R4, R0 
    /*00038a54*/ SUB         SP, SP, #8 
    /*00038a58*/ MOV         R0, #28 
    /*00038a5c*/ BL          0x0000000000038A5C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038a60*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00038a64*/ CMP         R3, #0 
    /*00038a68*/ BEQ         VI_DRV_GetColorGamutFromIsp_x38a98
    /*00038a6c*/ MOV         R0, #28 
    /*00038a70*/ BL          0x0000000000038A70          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038a74*/ ADD         R1, SP, #4 
    /*00038a78*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00038a7c*/ MOV         R0, R4 
    /*00038a80*/ BLX         R3 
    /*00038a84*/ CMP         R0, #0 
    /*00038a88*/ BNE         VI_DRV_GetColorGamutFromIsp_x38a98
    /*00038a8c*/ LDR         R0, [SP, #4] 
    /*00038a90*/ ADD         SP, SP, #8 
    /*00038a94*/ POP         {R4, PC} 
    VI_DRV_GetColorGamutFromIsp_x38a98:
    /*00038a98*/ MOV         R0, #1 
    /*00038a9c*/ ADD         SP, SP, #8 
    /*00038aa0*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetColorGamutFromIsp


FUNC_BEGIN VI_DRV_UpdateIspSyncParam
    /*00038aa4*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*00038aa8*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*00038aac*/ LDR         R3, [R3, R0, LSL #2] 
    /*00038ab0*/ ADD         R2, R3, #65536              @ 0x10000 
    /*00038ab4*/ LDR         R0, [R2, #3004]             @ 0xbbc 
    /*00038ab8*/ CMP         R0, #0 
    /*00038abc*/ BNE         VI_DRV_UpdateIspSyncParam_x38c28
    /*00038ac0*/ LDR         R2, [R2, #2996]             @ 0xbb4 
    /*00038ac4*/ CMP         R2, #2 
    /*00038ac8*/ BEQ         VI_DRV_UpdateIspSyncParam_x38c28
    /*00038acc*/ PUSH        {R4, R5, R6, LR} 
    /*00038ad0*/ ADD         R5, R3, #86016              @ 0x15000 
    /*00038ad4*/ MOV         R4, R1 
    /*00038ad8*/ ADD         R1, R3, #87040              @ 0x15400 
    /*00038adc*/ LDR         R3, [R5, #1592]             @ 0x638 
    /*00038ae0*/ MOV         R2, #112640                 @ 0x1b800 
    /*00038ae4*/ ADD         R1, R1, #624                @ 0x270 
    /*00038ae8*/ MLA         R4, R2, R4, R3 
    /*00038aec*/ MOV         R0, R4 
    /*00038af0*/ BL          0x0000000000038AF0          @ VI_HAL_SetIspDgain [R_ARM_CALL: .text+0x37324] 
    /*00038af4*/ MOV         R0, R4 
    /*00038af8*/ LDR         R1, [R5, #1600]             @ 0x640 
    /*00038afc*/ BL          0x0000000000038AFC          @ VI_HAL_SetLdciStatEvratio [R_ARM_CALL: .text+0x3743c] 
    /*00038b00*/ LDRB        R2, [R5, #1604]             @ 0x644 
    /*00038b04*/ MOV         R0, R4 
    /*00038b08*/ MOV         R1, R2 
    /*00038b0c*/ BL          0x0000000000038B0C          @ VI_HAL_SetDrcShpCfg [R_ARM_CALL: .text+0x3735c] 
    /*00038b10*/ MOV         R0, R4 
    /*00038b14*/ LDR         R1, [R5, #1608]             @ 0x648 
    /*00038b18*/ BL          0x0000000000038B18          @ VI_HAL_SetDrcDivDenomLog [R_ARM_CALL: .text+0x37374] 
    /*00038b1c*/ MOV         R0, R4 
    /*00038b20*/ LDR         R1, [R5, #1612]             @ 0x64c 
    /*00038b24*/ BL          0x0000000000038B24          @ VI_HAL_SetDrcDenomExp [R_ARM_CALL: .text+0x37388] 
    /*00038b28*/ MOV         R0, R4 
    /*00038b2c*/ LDR         R1, [R5, #1616]             @ 0x650 
    /*00038b30*/ BL          0x0000000000038B30          @ VI_HAL_SetDrcPrevLuma0 [R_ARM_CALL: .text+0x3739c] 
    /*00038b34*/ MOV         R0, R4 
    /*00038b38*/ LDR         R1, [R5, #1620]             @ 0x654 
    /*00038b3c*/ BL          0x0000000000038B3C          @ VI_HAL_SetDrcPrevLuma1 [R_ARM_CALL: .text+0x373b0] 
    /*00038b40*/ MOV         R0, R4 
    /*00038b44*/ LDR         R1, [R5, #1624]             @ 0x658 
    /*00038b48*/ BL          0x0000000000038B48          @ VI_HAL_SetDrcPrevLuma2 [R_ARM_CALL: .text+0x373c4] 
    /*00038b4c*/ MOV         R0, R4 
    /*00038b50*/ LDR         R1, [R5, #1628]             @ 0x65c 
    /*00038b54*/ BL          0x0000000000038B54          @ VI_HAL_SetDrcPrevLuma3 [R_ARM_CALL: .text+0x373d8] 
    /*00038b58*/ MOV         R0, R4 
    /*00038b5c*/ LDR         R1, [R5, #1632]             @ 0x660 
    /*00038b60*/ BL          0x0000000000038B60          @ VI_HAL_SetDrcPrevLuma4 [R_ARM_CALL: .text+0x373ec] 
    /*00038b64*/ MOV         R0, R4 
    /*00038b68*/ LDR         R1, [R5, #1636]             @ 0x664 
    /*00038b6c*/ BL          0x0000000000038B6C          @ VI_HAL_SetDrcPrevLuma5 [R_ARM_CALL: .text+0x37400] 
    /*00038b70*/ MOV         R0, R4 
    /*00038b74*/ LDR         R1, [R5, #1640]             @ 0x668 
    /*00038b78*/ BL          0x0000000000038B78          @ VI_HAL_SetDrcPrevLuma6 [R_ARM_CALL: .text+0x37414] 
    /*00038b7c*/ MOV         R0, R4 
    /*00038b80*/ LDR         R1, [R5, #1644]             @ 0x66c 
    /*00038b84*/ BL          0x0000000000038B84          @ VI_HAL_SetDrcPrevLuma7 [R_ARM_CALL: .text+0x37428] 
    /*00038b88*/ MOV         R0, R4 
    /*00038b8c*/ LDR         R1, [R5, #1672]             @ 0x688 
    /*00038b90*/ BL          0x0000000000038B90          @ VI_HAL_SetWdrExporratio0 [R_ARM_CALL: .text+0x37204] 
    /*00038b94*/ MOV         R0, R4 
    /*00038b98*/ LDR         R1, [R5, #1676]             @ 0x68c 
    /*00038b9c*/ BL          0x0000000000038B9C          @ VI_HAL_SetFlickExporatio0 [R_ARM_CALL: .text+0x37218] 
    /*00038ba0*/ MOV         R0, R4 
    /*00038ba4*/ LDR         R1, [R5, #1680]             @ 0x690 
    /*00038ba8*/ BL          0x0000000000038BA8          @ VI_HAL_SetWdrExpoValue0 [R_ARM_CALL: .text+0x3722c] 
    /*00038bac*/ MOV         R0, R4 
    /*00038bb0*/ LDR         R1, [R5, #1684]             @ 0x694 
    /*00038bb4*/ BL          0x0000000000038BB4          @ VI_HAL_SetWdrExpoValue1 [R_ARM_CALL: .text+0x37240] 
    /*00038bb8*/ MOV         R0, R4 
    /*00038bbc*/ LDR         R1, [R5, #1688]             @ 0x698 
    /*00038bc0*/ BL          0x0000000000038BC0          @ VI_HAL_SetWdrBlcComp0 [R_ARM_CALL: .text+0x37254] 
    /*00038bc4*/ MOV         R0, R4 
    /*00038bc8*/ LDR         R1, [R5, #1704]             @ 0x6a8 
    /*00038bcc*/ BL          0x0000000000038BCC          @ VI_HAL_SetWdrMaxRatio [R_ARM_CALL: .text+0x37310] 
    /*00038bd0*/ MOVW        R3, #1702                   @ 0x6a6 
    /*00038bd4*/ LDRH        R1, [R5, R3] 
    /*00038bd8*/ MOV         R0, R4 
    /*00038bdc*/ BL          0x0000000000038BDC          @ VI_HAL_SetWdrLongThr [R_ARM_CALL: .text+0x37268] 
    /*00038be0*/ MOVW        R3, #1700                   @ 0x6a4 
    /*00038be4*/ LDRH        R1, [R5, R3] 
    /*00038be8*/ MOV         R0, R4 
    /*00038bec*/ BL          0x0000000000038BEC          @ VI_HAL_SetWdrShortThr [R_ARM_CALL: .text+0x3727c] 
    /*00038bf0*/ MOV         R0, R4 
    /*00038bf4*/ LDR         R1, [R5, #1692]             @ 0x69c 
    /*00038bf8*/ BL          0x0000000000038BF8          @ VI_HAL_SetWdrMdtEn [R_ARM_CALL: .text+0x37290] 
    /*00038bfc*/ MOV         R0, R4 
    /*00038c00*/ LDR         R1, [R5, #1696]             @ 0x6a0 
    /*00038c04*/ BL          0x0000000000038C04          @ VI_HAL_SetWdrFusionMode [R_ARM_CALL: .text+0x372a4] 
    /*00038c08*/ MOV         R0, R4 
    /*00038c0c*/ LDR         R1, [R5, #1664]             @ 0x680 
    /*00038c10*/ BL          0x0000000000038C10          @ VI_HAL_SetIsp4Dgain0 [R_ARM_CALL: .text+0x372b8] 
    /*00038c14*/ MOV         R0, R4 
    /*00038c18*/ LDR         R1, [R5, #1668]             @ 0x684 
    /*00038c1c*/ BL          0x0000000000038C1C          @ VI_HAL_SetIsp4Dgain1 [R_ARM_CALL: .text+0x372e4] 
    /*00038c20*/ MOV         R0, #0 
    /*00038c24*/ POP         {R4, R5, R6, PC} 
    VI_DRV_UpdateIspSyncParam_x38c28:
    /*00038c28*/ MOV         R0, #0 
    /*00038c2c*/ BX          LR 
FUNC_END VI_DRV_UpdateIspSyncParam


FUNC_BEGIN VI_DRV_IspIntBottomHalf
    /*00038c30*/ PUSH        {R4, R5, R6, LR} 
    /*00038c34*/ MOV         R4, R0 
    /*00038c38*/ MOV         R0, #28 
    /*00038c3c*/ MOV         R5, R1 
    /*00038c40*/ BL          0x0000000000038C40          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038c44*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00038c48*/ CMP         R3, #0 
    /*00038c4c*/ BEQ         VI_DRV_IspIntBottomHalf_x38c6c
    /*00038c50*/ MOV         R0, #28 
    /*00038c54*/ BL          0x0000000000038C54          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038c58*/ MOV         R1, R5 
    /*00038c5c*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00038c60*/ MOV         R0, R4 
    /*00038c64*/ POP         {R4, R5, R6, LR} 
    /*00038c68*/ BX          R3 
    VI_DRV_IspIntBottomHalf_x38c6c:
    /*00038c6c*/ MOV         R0, #1 
    /*00038c70*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_IspIntBottomHalf


FUNC_BEGIN VI_DRV_IspIsr
    /*00038c74*/ PUSH        {R4, R5, R6, LR} 
    /*00038c78*/ MOV         R4, R0 
    /*00038c7c*/ MOV         R0, #28 
    /*00038c80*/ MOV         R5, R1 
    /*00038c84*/ BL          0x0000000000038C84          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038c88*/ LDR         R3, [R0, #112]              @ 0x70 
    /*00038c8c*/ CMP         R3, #0 
    /*00038c90*/ BEQ         VI_DRV_IspIsr_x38cb0
    /*00038c94*/ MOV         R0, #28 
    /*00038c98*/ BL          0x0000000000038C98          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038c9c*/ MOV         R1, R5 
    /*00038ca0*/ LDR         R3, [R0, #112]              @ 0x70 
    /*00038ca4*/ MOV         R0, R4 
    /*00038ca8*/ POP         {R4, R5, R6, LR} 
    /*00038cac*/ BX          R3 
    VI_DRV_IspIsr_x38cb0:
    /*00038cb0*/ MOV         R0, #2 
    /*00038cb4*/ POP         {R4, R5, R6, PC} 
FUNC_END VI_DRV_IspIsr


FUNC_BEGIN VI_DRV_GetIspPubRect
    /*00038cb8*/ PUSH        {R4, R5, LR} 
    /*00038cbc*/ MOV         R5, R0 
    /*00038cc0*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00038cc4*/ MOV         R0, #28 
    /*00038cc8*/ MOV         R4, R1 
    /*00038ccc*/ BL          0x0000000000038CCC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038cd0*/ LDR         R3, [R0, #116]              @ 0x74 
    /*00038cd4*/ CMP         R3, #0 
    /*00038cd8*/ BEQ         VI_DRV_GetIspPubRect_x38d18
    /*00038cdc*/ MOV         R0, #28 
    /*00038ce0*/ BL          0x0000000000038CE0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038ce4*/ MOV         R1, SP 
    /*00038ce8*/ LDR         R3, [R0, #116]              @ 0x74 
    /*00038cec*/ MOV         R0, R5 
    /*00038cf0*/ BLX         R3 
    /*00038cf4*/ CMP         R0, #0 
    /*00038cf8*/ LDREQ       R2, [SP, #8] 
    /*00038cfc*/ MOVNE       R3, #0 
    /*00038d00*/ LDREQ       R3, [SP, #12] 
    /*00038d04*/ STRNE       R3, [R4] 
    /*00038d08*/ STRNE       R3, [R4, #4] 
    /*00038d0c*/ STMEQ       R4, {R2, R3} 
    /*00038d10*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00038d14*/ POP         {R4, R5, PC} 
    VI_DRV_GetIspPubRect_x38d18:
    /*00038d18*/ MOV         R0, R3 
    /*00038d1c*/ STR         R3, [R4] 
    /*00038d20*/ STR         R3, [R4, #4] 
    /*00038d24*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00038d28*/ POP         {R4, R5, PC} 
FUNC_END VI_DRV_GetIspPubRect


FUNC_BEGIN VI_DRV_GetIspPubBayerFormat
    /*00038d2c*/ PUSH        {R4, R5, LR} 
    /*00038d30*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00038d34*/ MOV         R4, R1 
    /*00038d38*/ BL          0x0000000000038D38          @ VI_DRV_GetMastPipeByPipe [R_ARM_CALL: .text+0x2606c] 
    /*00038d3c*/ MOV         R5, R0 
    /*00038d40*/ MOV         R0, #28 
    /*00038d44*/ BL          0x0000000000038D44          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038d48*/ LDR         R0, [R0, #116]              @ 0x74 
    /*00038d4c*/ CMP         R0, #0 
    /*00038d50*/ BEQ         VI_DRV_GetIspPubBayerFormat_x38d74
    /*00038d54*/ MOV         R0, #28 
    /*00038d58*/ BL          0x0000000000038D58          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00038d5c*/ MOV         R1, SP 
    /*00038d60*/ LDR         R3, [R0, #116]              @ 0x74 
    /*00038d64*/ MOV         R0, R5 
    /*00038d68*/ BLX         R3 
    /*00038d6c*/ CMP         R0, #0 
    /*00038d70*/ BEQ         VI_DRV_GetIspPubBayerFormat_x38d84
    VI_DRV_GetIspPubBayerFormat_x38d74:
    /*00038d74*/ MOV         R3, #2 
    /*00038d78*/ STR         R3, [R4] 
    /*00038d7c*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00038d80*/ POP         {R4, R5, PC} 
    VI_DRV_GetIspPubBayerFormat_x38d84:
    /*00038d84*/ LDR         R3, [SP, #28] 
    /*00038d88*/ STR         R3, [R4] 
    /*00038d8c*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00038d90*/ POP         {R4, R5, PC} 
FUNC_END VI_DRV_GetIspPubBayerFormat


FUNC_BEGIN VIPROCSplitForVicapAndIsp
    /*00038d94*/ BX          LR 
FUNC_END VIPROCSplitForVicapAndIsp


FUNC_BEGIN VIPROCSplitForIsp
    /*00038d98*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00038d9c*/ MOV         R5, R0 
    /*00038da0*/ LDR         IP, [SP, #32] 
    /*00038da4*/ MOV         R4, R1 
    /*00038da8*/ LDR         R8, [R0] 
    /*00038dac*/ MOV         R9, R3 
    /*00038db0*/ SUB         R0, IP, #1 
    /*00038db4*/ MOV         R6, R2 
    /*00038db8*/ MOV         R1, IP 
    /*00038dbc*/ ADD         R0, R0, R8 
    /*00038dc0*/ BL          0x0000000000038DC0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00038dc4*/ MOV         R7, R0 
    /*00038dc8*/ MOV         R1, R0 
    /*00038dcc*/ MOV         R0, R8 
    /*00038dd0*/ BL          0x0000000000038DD0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00038dd4*/ CMP         R7, #0 
    /*00038dd8*/ STR         R7, [R9] 
    /*00038ddc*/ POPEQ       {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*00038de0*/ ADD         R0, R0, #255                @ 0xff 
    /*00038de4*/ MOV         R2, #0 
    /*00038de8*/ BIC         R0, R0, #255                @ 0xff 
    /*00038dec*/ SUB         R8, R7, #1 
    /*00038df0*/ MOV         IP, R2 
    /*00038df4*/ MOV         LR, R4 
    /*00038df8*/ MOV         R1, #1 
    VIPROCSplitForIsp_x38dfc:
    /*00038dfc*/ LSR         R3, R1, #1 
    /*00038e00*/ CMP         R8, IP 
    /*00038e04*/ ADD         LR, LR, #8 
    /*00038e08*/ MLA         R3, R3, R6, R6 
    /*00038e0c*/ LDREQ       R3, [R5] 
    /*00038e10*/ ADDEQ       R3, R6, R3 
    /*00038e14*/ ADDNE       R3, R3, R0 
    /*00038e18*/ SUBEQ       R3, R3, R2 
    /*00038e1c*/ CMP         IP, #0 
    /*00038e20*/ STR         R3, [R4, IP, LSL #3] 
    /*00038e24*/ SUB         R3, R2, R6 
    /*00038e28*/ MOVEQ       R3, IP 
    /*00038e2c*/ CMP         R7, R1 
    /*00038e30*/ STR         R3, [LR, #-4] 
    /*00038e34*/ ADD         IP, IP, #1 
    /*00038e38*/ ADD         R1, R1, #1 
    /*00038e3c*/ ADD         R2, R2, R0 
    /*00038e40*/ BHI         VIPROCSplitForIsp_x38dfc
    /*00038e44*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VIPROCSplitForIsp


FUNC_BEGIN VIPROCSplitForViproc
    /*00038e48*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00038e4c*/ SUB         SP, SP, #68                 @ 0x44 
    /*00038e50*/ LDR         R7, [R0] 
    /*00038e54*/ MOV         R4, R0 
    /*00038e58*/ LDR         IP, [SP, #112]              @ 0x70 
    /*00038e5c*/ MOV         R6, R1 
    /*00038e60*/ MOV         R9, #0 
    /*00038e64*/ MOV         R8, R3 
    /*00038e68*/ SUB         R0, IP, #1 
    /*00038e6c*/ MOV         R5, R2 
    /*00038e70*/ MOV         R1, IP 
    /*00038e74*/ ADD         R0, R0, R7 
    /*00038e78*/ STR         R9, [SP, #28] 
    /*00038e7c*/ STR         R9, [SP, #24] 
    /*00038e80*/ STR         R9, [SP, #32] 
    /*00038e84*/ STR         R9, [SP, #48]               @ 0x30 
    /*00038e88*/ STR         R9, [SP, #36]               @ 0x24 
    /*00038e8c*/ STR         R9, [SP, #52]               @ 0x34 
    /*00038e90*/ STR         R9, [SP, #56]               @ 0x38 
    /*00038e94*/ STR         R9, [SP, #60]               @ 0x3c 
    /*00038e98*/ STR         R9, [SP, #40]               @ 0x28 
    /*00038e9c*/ STR         R9, [SP, #44]               @ 0x2c 
    /*00038ea0*/ BL          0x0000000000038EA0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00038ea4*/ MOV         SL, R0 
    /*00038ea8*/ MOV         R1, R0 
    /*00038eac*/ MOV         R0, R7 
    /*00038eb0*/ BL          0x0000000000038EB0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00038eb4*/ LDR         R3, [SP, #104]              @ 0x68 
    /*00038eb8*/ LDR         R7, [SP, #108]              @ 0x6c 
    /*00038ebc*/ CMP         R3, R9 
    /*00038ec0*/ MOVEQ       R7, SL 
    /*00038ec4*/ CMP         R7, R9 
    /*00038ec8*/ ADD         R0, R0, #255                @ 0xff 
    /*00038ecc*/ BIC         R3, R0, #255                @ 0xff 
    /*00038ed0*/ STR         R3, [SP, #4] 
    /*00038ed4*/ BEQ         VIPROCSplitForViproc_x390a4
    /*00038ed8*/ LSL         R3, R5, #1 
    /*00038edc*/ STR         R3, [SP, #12] 
    /*00038ee0*/ SUB         R3, R7, #1 
    /*00038ee4*/ STR         R3, [SP, #8] 
    /*00038ee8*/ MOV         R3, R8 
    /*00038eec*/ ADD         R8, SP, #24 
    /*00038ef0*/ MOV         R0, R9 
    /*00038ef4*/ MOV         IP, R9 
    /*00038ef8*/ MOV         LR, R9 
    /*00038efc*/ MOV         FP, R9 
    /*00038f00*/ MOV         R1, R6 
    /*00038f04*/ STR         R6, [SP, #20] 
    /*00038f08*/ STR         R6, [SP, #16] 
    /*00038f0c*/ STR         R7, [SP, #108]              @ 0x6c 
    VIPROCSplitForViproc_x38f10:
    /*00038f10*/ LDR         R2, [SP, #104]              @ 0x68 
    /*00038f14*/ CMP         R2, #0 
    /*00038f18*/ BEQ         VIPROCSplitForViproc_x391b4
    /*00038f1c*/ ADD         R2, SP, #48                 @ 0x30 
    /*00038f20*/ CMP         IP, #0 
    /*00038f24*/ STR         LR, [R2, IP, LSL #2] 
    /*00038f28*/ BEQ         VIPROCSplitForViproc_x392c4
    /*00038f2c*/ LDR         R2, [SP, #8] 
    /*00038f30*/ MOV         R6, #0 
    /*00038f34*/ CMP         R2, IP 
    /*00038f38*/ LDR         R2, [R3] 
    /*00038f3c*/ STR         R6, [R1, #64]               @ 0x40 
    /*00038f40*/ LDR         R6, [R3] 
    /*00038f44*/ BLS         VIPROCSplitForViproc_x39214
    /*00038f48*/ LDR         R7, [SP, #12] 
    /*00038f4c*/ SUB         R2, R2, R7 
    /*00038f50*/ STR         R2, [R8] 
    /*00038f54*/ STR         R6, [R1] 
    VIPROCSplitForViproc_x38f58:
    /*00038f58*/ SUB         R9, FP, R5 
    VIPROCSplitForViproc_x38f5c:
    /*00038f5c*/ ADD         R6, IP, #1 
    /*00038f60*/ ADD         R7, SP, #36                 @ 0x24 
    /*00038f64*/ ADD         LR, LR, R2 
    /*00038f68*/ STR         R9, [R1, #4] 
    /*00038f6c*/ MOV         SL, R6 
    /*00038f70*/ STR         LR, [R7, IP, LSL #2] 
    VIPROCSplitForViproc_x38f74:
    /*00038f74*/ LDR         IP, [R4, #72]               @ 0x48 
    /*00038f78*/ ADD         FP, FP, R2 
    /*00038f7c*/ STR         IP, [R1, #72]               @ 0x48 
    /*00038f80*/ LDR         R2, [R4, #76]               @ 0x4c 
    /*00038f84*/ STR         R2, [R1, #76]               @ 0x4c 
    /*00038f88*/ LDR         R2, [R4, #8] 
    /*00038f8c*/ CMP         R2, #0 
    /*00038f90*/ BEQ         VIPROCSplitForViproc_x38fb4
    /*00038f94*/ LDR         R2, [R4, #12] 
    /*00038f98*/ LDR         IP, [R1] 
    /*00038f9c*/ LDR         R9, [R1, #4] 
    /*00038fa0*/ STR         R2, [R1, #12] 
    /*00038fa4*/ LDR         R2, [R4, #8] 
    /*00038fa8*/ STR         IP, [R1, #16] 
    /*00038fac*/ STR         R9, [R1, #20] 
    /*00038fb0*/ STR         R2, [R1, #8] 
    VIPROCSplitForViproc_x38fb4:
    /*00038fb4*/ LDR         R2, [SP, #108]              @ 0x6c 
    /*00038fb8*/ MOV         IP, R6 
    /*00038fbc*/ ADD         R1, R1, #152                @ 0x98 
    /*00038fc0*/ ADD         R8, R8, #4 
    /*00038fc4*/ CMP         R2, SL 
    /*00038fc8*/ LDR         R2, [SP, #4] 
    /*00038fcc*/ ADD         R3, R3, #4 
    /*00038fd0*/ ADD         R0, R0, R2 
    /*00038fd4*/ BHI         VIPROCSplitForViproc_x38f10
    /*00038fd8*/ LDR         R0, [R4, #80]               @ 0x50 
    /*00038fdc*/ LDR         R6, [SP, #16] 
    /*00038fe0*/ CMP         R0, #0 
    /*00038fe4*/ LDR         R7, [SP, #108]              @ 0x6c 
    /*00038fe8*/ BEQ         VIPROCSplitForViproc_x39224
    /*00038fec*/ LDR         R8, [R4, #88]               @ 0x58 
    /*00038ff0*/ MOV         SL, #0 
    /*00038ff4*/ LDR         R0, [SP, #20] 
    /*00038ff8*/ ADD         R2, SP, #36                 @ 0x24 
    /*00038ffc*/ ADD         R3, SP, #48                 @ 0x30 
    /*00039000*/ MOV         R9, SL 
    /*00039004*/ MOV         R1, #1 
    /*00039008*/ STR         R6, [SP, #8] 
    VIPROCSplitForViproc_x3900c:
    /*0003900c*/ LDR         IP, [R2], #4 
    /*00039010*/ CMP         IP, R8 
    /*00039014*/ BLS         VIPROCSplitForViproc_x39280
    /*00039018*/ LDR         LR, [R3] 
    /*0003901c*/ CMP         LR, R8 
    /*00039020*/ BHI         VIPROCSplitForViproc_x39280
    /*00039024*/ LDR         R6, [R4, #80]               @ 0x50 
    /*00039028*/ CMP         R1, #1 
    /*0003902c*/ SUBEQ       LR, R8, LR 
    /*00039030*/ STR         R6, [R0, #80]               @ 0x50 
    /*00039034*/ ADDNE       R6, R5, R8 
    /*00039038*/ SUBNE       LR, R6, LR 
    /*0003903c*/ STR         LR, [R0, #88]               @ 0x58 
    /*00039040*/ LDR         LR, [R4, #88]               @ 0x58 
    /*00039044*/ LDR         FP, [R4, #84]               @ 0x54 
    /*00039048*/ LDR         R6, [R3, #4] 
    /*0003904c*/ ADD         LR, LR, FP 
    /*00039050*/ CMP         LR, IP 
    /*00039054*/ RSBLS       IP, R8, LR 
    /*00039058*/ RSBHI       IP, R8, IP 
    /*0003905c*/ STR         IP, [R0, #84]               @ 0x54 
    /*00039060*/ LDR         R8, [R4, #88]               @ 0x58 
    /*00039064*/ LDR         LR, [R4, #84]               @ 0x54 
    /*00039068*/ ADD         LR, R8, LR 
    /*0003906c*/ CMP         LR, R6 
    /*00039070*/ MOVLS       R8, #0 
    /*00039074*/ BHI         VIPROCSplitForViproc_x392b8
    VIPROCSplitForViproc_x39078:
    /*00039078*/ LDR         LR, [R4, #56]               @ 0x38 
    /*0003907c*/ STR         SL, [R0, #68]               @ 0x44 
    /*00039080*/ ADD         SL, SL, IP 
    /*00039084*/ STR         IP, [R0, #60]               @ 0x3c 
    /*00039088*/ STR         LR, [R0, #56]               @ 0x38 
    VIPROCSplitForViproc_x3908c:
    /*0003908c*/ CMP         R7, R1 
    /*00039090*/ ADD         R0, R0, #152                @ 0x98 
    /*00039094*/ ADD         R1, R1, #1 
    /*00039098*/ ADD         R3, R3, #4 
    /*0003909c*/ BHI         VIPROCSplitForViproc_x3900c
    /*000390a0*/ LDR         R6, [SP, #8] 
    VIPROCSplitForViproc_x390a4:
    /*000390a4*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*000390a8*/ CMP         R3, #8192                   @ 0x2000 
    /*000390ac*/ BHI         VIPROCSplitForViproc_x39164
    /*000390b0*/ LDR         R3, [R4, #92]               @ 0x5c 
    /*000390b4*/ CMP         R3, #0 
    /*000390b8*/ BEQ         VIPROCSplitForViproc_x39164
    /*000390bc*/ LDR         R7, [SP, #24] 
    /*000390c0*/ MOV         R8, #0 
    /*000390c4*/ LDR         R1, [R4, #112]              @ 0x70 
    /*000390c8*/ SUB         R0, R7, #1 
    /*000390cc*/ STR         R8, [R6, #104]              @ 0x68 
    /*000390d0*/ ADD         R0, R0, R1 
    /*000390d4*/ SUB         R7, R5, R7 
    /*000390d8*/ BL          0x00000000000390D8          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000390dc*/ STR         R8, [R6, #96]               @ 0x60 
    /*000390e0*/ ADD         R8, R0, #7 
    /*000390e4*/ BIC         R9, R8, #7 
    /*000390e8*/ STR         R9, [R6, #108]              @ 0x6c 
    /*000390ec*/ LDR         FP, [R4, #112]              @ 0x70 
    /*000390f0*/ MUL         FP, FP, R9 
    /*000390f4*/ STR         FP, [R6, #100]              @ 0x64 
    /*000390f8*/ MOV         R0, FP 
    /*000390fc*/ LDR         R1, [R4, #112]              @ 0x70 
    /*00039100*/ BL          0x0000000000039100          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*00039104*/ STR         R9, [R6, #120]              @ 0x78 
    /*00039108*/ MOV         R2, #2 
    /*0003910c*/ STR         R0, [R6, #116]              @ 0x74 
    /*00039110*/ LDR         SL, [R4, #128]              @ 0x80 
    /*00039114*/ STR         SL, [R6, #128]              @ 0x80 
    /*00039118*/ LDR         R3, [R4, #120]              @ 0x78 
    /*0003911c*/ STR         R2, [R6, #256]              @ 0x100 
    /*00039120*/ SUB         R9, R3, R9 
    /*00039124*/ STR         R9, [R6, #260]              @ 0x104 
    /*00039128*/ LDR         R2, [R4, #112]              @ 0x70 
    /*0003912c*/ ADD         R3, R9, #2 
    /*00039130*/ SUB         R7, R7, R2, LSL #1 
    /*00039134*/ ADD         R7, R7, FP 
    /*00039138*/ STR         R7, [R6, #248]              @ 0xf8 
    /*0003913c*/ LDR         R0, [R4, #112]              @ 0x70 
    /*00039140*/ MUL         R0, R0, R3 
    /*00039144*/ STR         R0, [R6, #252]              @ 0xfc 
    /*00039148*/ LDR         R1, [R4, #112]              @ 0x70 
    /*0003914c*/ BL          0x000000000003914C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*00039150*/ BIC         R3, R8, #-536870905         @ 0xe0000007 
    /*00039154*/ ADD         R3, R3, SL 
    /*00039158*/ STR         R9, [R6, #272]              @ 0x110 
    /*0003915c*/ STR         R3, [R6, #280]              @ 0x118 
    /*00039160*/ STR         R0, [R6, #268]              @ 0x10c 
    VIPROCSplitForViproc_x39164:
    /*00039164*/ LDR         R3, [SP, #4] 
    /*00039168*/ ADD         R1, R6, #304                @ 0x130 
    /*0003916c*/ LDR         R2, [R6] 
    /*00039170*/ SUB         R5, R3, R5 
    /*00039174*/ LDR         R3, [R6, #152]              @ 0x98 
    /*00039178*/ STR         R2, [R6, #140]              @ 0x8c 
    /*0003917c*/ STR         R3, [R6, #292]              @ 0x124 
    /*00039180*/ LDRD        R8, [R4, #144]              @ 0x90 
    /*00039184*/ STRD        R8, [R6, #144]              @ 0x90 
    /*00039188*/ LDR         R2, [R4, #136]              @ 0x88 
    /*0003918c*/ LDRD        R6, [R4, #144]              @ 0x90 
    /*00039190*/ UMULL       R2, R3, R5, R2 
    /*00039194*/ LSR         R0, R2, #3 
    /*00039198*/ ORR         R0, R0, R3, LSL #29 
    /*0003919c*/ LSR         R3, R3, #3 
    /*000391a0*/ ADDS        SL, R0, R6 
    /*000391a4*/ ADC         FP, R3, R7 
    /*000391a8*/ STRD        SL, [R1, #-8] 
    /*000391ac*/ ADD         SP, SP, #68                 @ 0x44 
    /*000391b0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VIPROCSplitForViproc_x391b4:
    /*000391b4*/ LDR         R2, [SP, #8] 
    /*000391b8*/ CMP         IP, R2 
    /*000391bc*/ ADD         R2, SP, #48                 @ 0x30 
    /*000391c0*/ STR         LR, [R2, IP, LSL #2] 
    /*000391c4*/ BEQ         VIPROCSplitForViproc_x3928c
    /*000391c8*/ ADD         R6, IP, #1 
    /*000391cc*/ MOV         R9, #1 
    /*000391d0*/ STR         R9, [R1, #64]               @ 0x40 
    /*000391d4*/ LSR         R9, R6, R9 
    /*000391d8*/ LDR         R7, [SP, #4] 
    /*000391dc*/ MOV         SL, R6 
    /*000391e0*/ MLA         R9, R9, R5, R5 
    /*000391e4*/ MOV         R2, R7 
    /*000391e8*/ STR         R7, [R8] 
    /*000391ec*/ ADD         R9, R9, R7 
    VIPROCSplitForViproc_x391f0:
    /*000391f0*/ CMP         IP, #0 
    /*000391f4*/ ADD         R7, SP, #36                 @ 0x24 
    /*000391f8*/ STR         R9, [R1] 
    /*000391fc*/ ADD         LR, LR, R2 
    /*00039200*/ SUBNE       R9, R0, R5 
    /*00039204*/ MOVEQ       R9, IP 
    /*00039208*/ STR         LR, [R7, IP, LSL #2] 
    /*0003920c*/ STR         R9, [R1, #4] 
    /*00039210*/ B           VIPROCSplitForViproc_x38f74
    VIPROCSplitForViproc_x39214:
    /*00039214*/ SUB         R2, R2, R5 
    /*00039218*/ STR         R2, [R8] 
    /*0003921c*/ STR         R6, [R1] 
    /*00039220*/ B           VIPROCSplitForViproc_x38f58
    VIPROCSplitForViproc_x39224:
    /*00039224*/ LDR         R1, [R4, #56]               @ 0x38 
    /*00039228*/ ADD         R3, R6, #152                @ 0x98 
    /*0003922c*/ MOV         R2, R0 
    /*00039230*/ MOV         IP, R0 
    /*00039234*/ STR         R1, [R6, #80]               @ 0x50 
    /*00039238*/ B           VIPROCSplitForViproc_x39248
    VIPROCSplitForViproc_x3923c:
    /*0003923c*/ LDR         R1, [R4, #56]               @ 0x38 
    /*00039240*/ ADD         R3, R3, #152                @ 0x98 
    /*00039244*/ STR         R1, [R3, #-72]              @ 0xffffffb8 
    VIPROCSplitForViproc_x39248:
    /*00039248*/ ADD         R1, SP, #24 
    /*0003924c*/ STR         R0, [R3, #-64]              @ 0xffffffc0 
    /*00039250*/ MOV         R0, R5 
    /*00039254*/ LDR         R1, [R1, R2, LSL #2] 
    /*00039258*/ ADD         R2, R2, #1 
    /*0003925c*/ CMP         R7, R2 
    /*00039260*/ STR         R1, [R3, #-68]              @ 0xffffffbc 
    /*00039264*/ LDR         LR, [R4, #56]               @ 0x38 
    /*00039268*/ STR         IP, [R3, #-84]              @ 0xffffffac 
    /*0003926c*/ ADD         IP, IP, R1 
    /*00039270*/ STR         R1, [R3, #-92]              @ 0xffffffa4 
    /*00039274*/ STR         LR, [R3, #-96]              @ 0xffffffa0 
    /*00039278*/ BNE         VIPROCSplitForViproc_x3923c
    /*0003927c*/ B           VIPROCSplitForViproc_x390a4
    VIPROCSplitForViproc_x39280:
    /*00039280*/ STR         R9, [R0, #80]               @ 0x50 
    /*00039284*/ STR         R9, [R0, #56]               @ 0x38 
    /*00039288*/ B           VIPROCSplitForViproc_x3908c
    VIPROCSplitForViproc_x3928c:
    /*0003928c*/ LDR         R2, [R4] 
    /*00039290*/ MOV         R6, #1 
    /*00039294*/ STR         R6, [R1, #64]               @ 0x40 
    /*00039298*/ ADD         R6, IP, R6 
    /*0003929c*/ LDR         R9, [R4] 
    /*000392a0*/ SUB         R2, R2, R0 
    /*000392a4*/ LDR         SL, [SP, #108]              @ 0x6c 
    /*000392a8*/ ADD         R9, R5, R9 
    /*000392ac*/ STR         R2, [R8] 
    /*000392b0*/ SUB         R9, R9, R0 
    /*000392b4*/ B           VIPROCSplitForViproc_x391f0
    VIPROCSplitForViproc_x392b8:
    /*000392b8*/ CMP         R8, R6 
    /*000392bc*/ MOVCC       R8, R6 
    /*000392c0*/ B           VIPROCSplitForViproc_x39078
    VIPROCSplitForViproc_x392c4:
    /*000392c4*/ LDR         R2, [R3] 
    /*000392c8*/ MOV         R9, IP 
    /*000392cc*/ STR         IP, [R1, #64]               @ 0x40 
    /*000392d0*/ LDR         R6, [R3] 
    /*000392d4*/ SUB         R2, R2, R5 
    /*000392d8*/ STR         R2, [R8] 
    /*000392dc*/ STR         R6, [R1] 
    /*000392e0*/ B           VIPROCSplitForViproc_x38f5c
FUNC_END VIPROCSplitForViproc


FUNC_BEGIN VpssSplitForIsp
    /*000392e4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000392e8*/ SUB         SP, SP, #84                 @ 0x54 
    /*000392ec*/ LDR         IP, [R0] 
    /*000392f0*/ MOV         R7, R0 
    /*000392f4*/ STR         R1, [SP, #48]               @ 0x30 
    /*000392f8*/ MOV         R6, R2 
    /*000392fc*/ LDR         R2, [R0, #16] 
    /*00039300*/ MOV         R3, #0 
    /*00039304*/ LSL         R0, IP, #20 
    /*00039308*/ LSR         R1, IP, #12 
    /*0003930c*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00039310*/ STR         R3, [SP, #56]               @ 0x38 
    /*00039314*/ STR         R3, [SP, #64]               @ 0x40 
    /*00039318*/ STR         R3, [SP, #68]               @ 0x44 
    /*0003931c*/ STR         R3, [SP, #72]               @ 0x48 
    /*00039320*/ STR         R3, [SP, #76]               @ 0x4c 
    /*00039324*/ BL          0x0000000000039324          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    /*00039328*/ LDR         R3, [R7, #4] 
    /*0003932c*/ LDR         R8, [R7] 
    /*00039330*/ LDR         R1, [R7, #8] 
    /*00039334*/ STR         R3, [SP, #28] 
    /*00039338*/ SUB         R3, R8, #3360               @ 0xd20 
    /*0003933c*/ SUB         R3, R3, #1 
    /*00039340*/ CMP         R3, #480                    @ 0x1e0 
    /*00039344*/ MOV         R4, R0 
    /*00039348*/ STR         R0, [SP, #16] 
    /*0003934c*/ BCS         VpssSplitForIsp_x3956c
    /*00039350*/ ADD         R0, R1, R8 
    /*00039354*/ MOV         R3, #4 
    /*00039358*/ SUB         R0, R0, #1 
    /*0003935c*/ STR         R3, [SP, #20] 
    /*00039360*/ BL          0x0000000000039360          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00039364*/ MOV         R1, R0 
    /*00039368*/ MOV         SL, R0 
    /*0003936c*/ MOV         R0, R8 
    /*00039370*/ BL          0x0000000000039370          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00039374*/ ADD         R0, R0, #1 
    /*00039378*/ BIC         R3, R0, #1 
    /*0003937c*/ STR         R3, [SP, #24] 
    VpssSplitForIsp_x39380:
    /*00039380*/ CMP         SL, #0 
    /*00039384*/ STR         SL, [R6] 
    /*00039388*/ BEQ         VpssSplitForIsp_x394f4
    /*0003938c*/ LDR         R1, [SP, #24] 
    /*00039390*/ MOV         R2, R4 
    /*00039394*/ MOV         R3, #0 
    /*00039398*/ STRD        R2, [SP] 
    /*0003939c*/ MOV         R3, #0 
    /*000393a0*/ STR         R3, [SP, #52]               @ 0x34 
    /*000393a4*/ MOV         R4, R3 
    /*000393a8*/ SUB         R3, SL, #1 
    /*000393ac*/ STR         R3, [SP, #12] 
    /*000393b0*/ ASR         R3, R1, #31 
    /*000393b4*/ LDR         R8, [SP, #48]               @ 0x30 
    /*000393b8*/ MOV         FP, R4 
    /*000393bc*/ LSL         R3, R3, #20 
    /*000393c0*/ STR         SL, [SP, #40]               @ 0x28 
    /*000393c4*/ MOV         R5, R4 
    /*000393c8*/ MOV         R6, R4 
    /*000393cc*/ MOV         R2, R3 
    /*000393d0*/ MOV         R3, R1 
    /*000393d4*/ ORR         R3, R2, R3, LSR #12 
    /*000393d8*/ STR         R3, [SP, #36]               @ 0x24 
    /*000393dc*/ LDR         R3, [SP, #28] 
    /*000393e0*/ MOV         SL, R7 
    /*000393e4*/ LSL         R1, R1, #20 
    /*000393e8*/ STR         R1, [SP, #32] 
    /*000393ec*/ ADD         R3, R3, #7 
    /*000393f0*/ STR         R3, [SP, #44]               @ 0x2c 
    VpssSplitForIsp_x393f4:
    /*000393f4*/ LDR         R3, [SP, #12] 
    /*000393f8*/ LDR         LR, [SL, #12] 
    /*000393fc*/ CMP         R3, R4 
    /*00039400*/ LDR         IP, [SP, #24] 
    /*00039404*/ LDR         R0, [SP, #32] 
    /*00039408*/ LDREQ       R2, [SL] 
    /*0003940c*/ LDR         R1, [SP, #36]               @ 0x24 
    /*00039410*/ SUBEQ       R3, R2, R5 
    /*00039414*/ STREQ       R3, [SP, #52]               @ 0x34 
    /*00039418*/ LDR         R2, [SP, #16] 
    /*0003941c*/ MOVEQ       IP, R3 
    /*00039420*/ CMP         LR, #0 
    /*00039424*/ BEQ         VpssSplitForIsp_x394fc
    /*00039428*/ BL          0x0000000000039428          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    /*0003942c*/ LDR         R7, [SP, #20] 
    /*00039430*/ MOV         R1, R7 
    /*00039434*/ BL          0x0000000000039434          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00039438*/ LDR         IP, [SL, #16] 
    /*0003943c*/ LDR         R3, [SP] 
    /*00039440*/ MOV         R2, #1048576                @ 0x100000 
    /*00039444*/ MUL         R7, R7, R0 
    /*00039448*/ SUB         IP, IP, R7 
    /*0003944c*/ STR         IP, [SP, #56]               @ 0x38 
    /*00039450*/ UMULL       R0, R1, IP, R3 
    /*00039454*/ LDR         R3, [SP, #4] 
    /*00039458*/ STR         R7, [SP, #60]               @ 0x3c 
    /*0003945c*/ MLA         R1, IP, R3, R1 
    /*00039460*/ BL          0x0000000000039460          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    /*00039464*/ LDR         R3, [SP] 
    /*00039468*/ MOV         R2, #1048576                @ 0x100000 
    /*0003946c*/ MOV         R9, R0 
    /*00039470*/ STR         R9, [SP, #68]               @ 0x44 
    /*00039474*/ UMULL       R0, R1, R7, R3 
    /*00039478*/ LDR         R3, [SP, #4] 
    /*0003947c*/ MLA         R1, R7, R3, R1 
    /*00039480*/ BL          0x0000000000039480          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    /*00039484*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00039488*/ ADD         R1, SP, #68                 @ 0x44 
    /*0003948c*/ ADD         R2, R6, R3 
    /*00039490*/ ADD         R9, R9, R3 
    /*00039494*/ LDR         R3, [SP, #48]               @ 0x30 
    /*00039498*/ SUB         R2, R2, R5 
    /*0003949c*/ BIC         R9, R9, #7 
    /*000394a0*/ STR         R9, [R3] 
    /*000394a4*/ ADD         R2, R2, R0 
    /*000394a8*/ STR         R0, [SP, #72]               @ 0x48 
    /*000394ac*/ BIC         R2, R2, #7 
    /*000394b0*/ STR         R2, [R3, #8] 
    /*000394b4*/ ADD         R3, SP, #56                 @ 0x38 
    /*000394b8*/ LDR         R0, [R1, R4, LSL #2] 
    /*000394bc*/ LDR         R7, [R3, R4, LSL #2] 
    /*000394c0*/ STR         R5, [R8, #4] 
    VpssSplitForIsp_x394c4:
    /*000394c4*/ LDR         R3, [SP, #40]               @ 0x28 
    /*000394c8*/ ADD         R0, R0, #1 
    /*000394cc*/ ADD         R4, R4, #1 
    /*000394d0*/ BIC         R0, R0, #1 
    /*000394d4*/ CMP         R4, R3 
    /*000394d8*/ LDR         R3, [SP, #28] 
    /*000394dc*/ ADD         R6, R6, R0 
    /*000394e0*/ ADD         FP, FP, R7 
    /*000394e4*/ SUB         R5, R6, R3 
    /*000394e8*/ ADD         R8, R8, #8 
    /*000394ec*/ BIC         R5, R5, #7 
    /*000394f0*/ BNE         VpssSplitForIsp_x393f4
    VpssSplitForIsp_x394f4:
    /*000394f4*/ ADD         SP, SP, #84                 @ 0x54 
    /*000394f8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssSplitForIsp_x394fc:
    /*000394fc*/ LDR         R2, [SP, #16] 
    /*00039500*/ LSL         R0, IP, #20 
    /*00039504*/ LSR         R1, IP, #12 
    /*00039508*/ BL          0x0000000000039508          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    /*0003950c*/ LDR         R3, [SP, #12] 
    /*00039510*/ LDR         R1, [SP, #20] 
    /*00039514*/ CMP         R3, R4 
    /*00039518*/ BEQ         VpssSplitForIsp_x395a0
    /*0003951c*/ BL          0x000000000003951C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00039520*/ LDR         R3, [SP, #20] 
    /*00039524*/ MOV         R2, #1048576                @ 0x100000 
    /*00039528*/ MUL         R7, R3, R0 
    /*0003952c*/ LDR         R3, [SP] 
    /*00039530*/ UMULL       R0, R1, R3, R7 
    /*00039534*/ ADD         R3, SP, #56                 @ 0x38 
    /*00039538*/ STR         R7, [R3, R4, LSL #2] 
    /*0003953c*/ LDR         R3, [SP, #4] 
    /*00039540*/ MLA         R1, R7, R3, R1 
    /*00039544*/ BL          0x0000000000039544          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    /*00039548*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0003954c*/ ADD         R2, R3, R6 
    /*00039550*/ ADD         R3, SP, #68                 @ 0x44 
    /*00039554*/ SUB         R2, R2, R5 
    /*00039558*/ ADD         R2, R2, R0 
    /*0003955c*/ STR         R0, [R3, R4, LSL #2] 
    /*00039560*/ BIC         R2, R2, #7 
    VpssSplitForIsp_x39564:
    /*00039564*/ STM         R8, {R2, R5} 
    /*00039568*/ B           VpssSplitForIsp_x394c4
    VpssSplitForIsp_x3956c:
    /*0003956c*/ ADD         R0, R1, R8 
    /*00039570*/ MOV         R3, #256                    @ 0x100 
    /*00039574*/ SUB         R0, R0, #1 
    /*00039578*/ STR         R3, [SP, #20] 
    /*0003957c*/ BL          0x000000000003957C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00039580*/ MOV         R1, R0 
    /*00039584*/ MOV         SL, R0 
    /*00039588*/ MOV         R0, R8 
    /*0003958c*/ BL          0x000000000003958C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00039590*/ ADD         R0, R0, #255                @ 0xff 
    /*00039594*/ BIC         R3, R0, #255                @ 0xff 
    /*00039598*/ STR         R3, [SP, #24] 
    /*0003959c*/ B           VpssSplitForIsp_x39380
    VpssSplitForIsp_x395a0:
    /*000395a0*/ LDR         R7, [SL, #16] 
    /*000395a4*/ ADD         R1, SP, #56                 @ 0x38 
    /*000395a8*/ MOV         R9, R3 
    /*000395ac*/ MOV         R2, #1048576                @ 0x100000 
    /*000395b0*/ SUB         R7, R7, FP 
    /*000395b4*/ STR         R7, [R1, R3, LSL #2] 
    /*000395b8*/ LDR         R3, [SP] 
    /*000395bc*/ UMULL       R0, R1, R3, R7 
    /*000395c0*/ LDR         R3, [SP, #4] 
    /*000395c4*/ MLA         R1, R7, R3, R1 
    /*000395c8*/ BL          0x00000000000395C8          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    /*000395cc*/ ADD         R1, SP, #68                 @ 0x44 
    /*000395d0*/ LDR         R2, [SP, #52]               @ 0x34 
    /*000395d4*/ STR         R0, [R1, R9, LSL #2] 
    /*000395d8*/ B           VpssSplitForIsp_x39564
FUNC_END VpssSplitForIsp


FUNC_BEGIN VpssSplitNum
    /*000395dc*/ PUSH        {R4, LR} 
    /*000395e0*/ LDR         R1, [R0, #8] 
    /*000395e4*/ LDR         R0, [R0] 
    /*000395e8*/ ADD         R0, R1, R0 
    /*000395ec*/ SUB         R0, R0, #1 
    /*000395f0*/ BL          0x00000000000395F0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000395f4*/ POP         {R4, PC} 
FUNC_END VpssSplitNum


FUNC_BEGIN GetSplitLineBufferSize
    /*000395f8*/ SUB         R0, R0, #3360               @ 0xd20 
    /*000395fc*/ SUB         R0, R0, #1 
    /*00039600*/ CMP         R0, #480                    @ 0x1e0 
    /*00039604*/ MOVCS       R0, #1792                   @ 0x700 
    /*00039608*/ MOVCC       R0, #1920                   @ 0x780 
    /*0003960c*/ BX          LR 
FUNC_END GetSplitLineBufferSize


FUNC_BEGIN VI_DRV_Check2Pow
    /*00039610*/ SUBS        R3, R0, #0 
    /*00039614*/ BEQ         VI_DRV_Check2Pow_x39664
    /*00039618*/ MOV         R2, #0 
    /*0003961c*/ B           VI_DRV_Check2Pow_x3963c
    VI_DRV_Check2Pow_x39620:
    /*00039620*/ LSRS        R3, R3, #2 
    /*00039624*/ MOV         R2, #1 
    /*00039628*/ BEQ         VI_DRV_Check2Pow_x39664
    /*0003962c*/ TST         R3, #1 
    /*00039630*/ BXNE        LR 
    VI_DRV_Check2Pow_x39634:
    /*00039634*/ LSRS        R3, R3, #1 
    /*00039638*/ BEQ         VI_DRV_Check2Pow_x39664
    VI_DRV_Check2Pow_x3963c:
    /*0003963c*/ TST         R3, #1 
    /*00039640*/ BEQ         VI_DRV_Check2Pow_x39634
    /*00039644*/ CMP         R2, #1 
    /*00039648*/ BEQ         VI_DRV_Check2Pow_x3965c
    /*0003964c*/ LSRS        R0, R3, #1 
    /*00039650*/ BEQ         VI_DRV_Check2Pow_x39664
    /*00039654*/ ANDS        R0, R0, #1 
    /*00039658*/ BEQ         VI_DRV_Check2Pow_x39620
    VI_DRV_Check2Pow_x3965c:
    /*0003965c*/ MOV         R0, #0 
    /*00039660*/ BX          LR 
    VI_DRV_Check2Pow_x39664:
    /*00039664*/ MOV         R0, #1 
    /*00039668*/ BX          LR 
FUNC_END VI_DRV_Check2Pow


FUNC_BEGIN VI_DRV_CheckVideoFrame
    /*0003966c*/ PUSH        {R4, R5, LR} 
    /*00039670*/ SUB         SP, SP, #36                 @ 0x24 
    /*00039674*/ LDR         R3, [R1, #328]              @ 0x148 
    /*00039678*/ CMN         R3, #1 
    /*0003967c*/ BEQ         VI_DRV_CheckVideoFrame_x399a0
    /*00039680*/ LDR         R3, [R1, #8] 
    /*00039684*/ MOV         R4, R1 
    /*00039688*/ CMP         R3, #4 
    /*0003968c*/ BNE         VI_DRV_CheckVideoFrame_x39814
    /*00039690*/ LDR         R3, [R1, #12] 
    /*00039694*/ SUB         R3, R3, #17 
    /*00039698*/ CMP         R3, #4 
    /*0003969c*/ BHI         VI_DRV_CheckVideoFrame_x398cc
    /*000396a0*/ LDR         R3, [R1] 
    /*000396a4*/ MOVW        R2, #3976                   @ 0xf88 
    /*000396a8*/ SUB         R1, R3, #120                @ 0x78 
    /*000396ac*/ CMP         R1, R2 
    /*000396b0*/ LDRHI       R2, [R4, #4] 
    /*000396b4*/ BHI         VI_DRV_CheckVideoFrame_x397c0
    /*000396b8*/ LDR         R2, [R4, #4] 
    /*000396bc*/ MOV         R5, R0 
    /*000396c0*/ MOVW        R1, #3336                   @ 0xd08 
    /*000396c4*/ SUB         R0, R2, #120                @ 0x78 
    /*000396c8*/ CMP         R0, R1 
    /*000396cc*/ BHI         VI_DRV_CheckVideoFrame_x397c0
    /*000396d0*/ ORR         R1, R3, R2 
    /*000396d4*/ TST         R1, #3 
    /*000396d8*/ BNE         VI_DRV_CheckVideoFrame_x39788
    /*000396dc*/ MOV         R0, #1 
    /*000396e0*/ BL          0x00000000000396E0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000396e4*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*000396e8*/ LDR         R1, [R0, #84]               @ 0x54 
    /*000396ec*/ LDR         R0, [R4, #328]              @ 0x148 
    /*000396f0*/ BLX         R1 
    /*000396f4*/ CMP         R0, #1 
    /*000396f8*/ BNE         VI_DRV_CheckVideoFrame_x39848
    /*000396fc*/ LDR         R3, [R4, #20] 
    /*00039700*/ CMP         R3, #0 
    /*00039704*/ BNE         VI_DRV_CheckVideoFrame_x398fc
    /*00039708*/ LDR         R2, [R4, #16] 
    /*0003970c*/ CMP         R2, #0 
    /*00039710*/ BNE         VI_DRV_CheckVideoFrame_x39930
    /*00039714*/ LDR         R3, [R4, #24] 
    /*00039718*/ CMP         R3, #0 
    /*0003971c*/ BNE         VI_DRV_CheckVideoFrame_x39968
    /*00039720*/ LDR         R3, [R4, #28] 
    /*00039724*/ CMP         R3, #3 
    /*00039728*/ BHI         VI_DRV_CheckVideoFrame_x39888
    /*0003972c*/ MOV         R0, R5 
    /*00039730*/ BL          0x0000000000039730          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*00039734*/ CMP         R0, #1 
    /*00039738*/ BLS         VI_DRV_CheckVideoFrame_x39748
    VI_DRV_CheckVideoFrame_x3973c:
    /*0003973c*/ MOV         R0, #0 
    VI_DRV_CheckVideoFrame_x39740:
    /*00039740*/ ADD         SP, SP, #36                 @ 0x24 
    /*00039744*/ POP         {R4, R5, PC} 
    VI_DRV_CheckVideoFrame_x39748:
    /*00039748*/ MOV         R0, R5 
    /*0003974c*/ BL          0x000000000003974C          @ VI_DRV_NeedSplit [R_ARM_CALL: .text+0x2f638] 
    /*00039750*/ CMP         R0, #1 
    /*00039754*/ BNE         VI_DRV_CheckVideoFrame_x3973c
    /*00039758*/ MOV         R2, #153                    @ 0x99 
    /*0003975c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2348] 
    /*00039760*/ STR         R2, [SP] 
    /*00039764*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2348] 
    /*00039768*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12050] 
    /*0003976c*/ MOV         R1, #16 
    /*00039770*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12050] 
    /*00039774*/ MOV         R0, #3 
    /*00039778*/ BL          0x0000000000039778          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003977c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00039780*/ MOVT        R0, #40976                  @ 0xa010 
    /*00039784*/ B           VI_DRV_CheckVideoFrame_x39740
    VI_DRV_CheckVideoFrame_x39788:
    /*00039788*/ STR         R2, [SP, #8] 
    /*0003978c*/ MOV         R1, #16 
    /*00039790*/ MOV         R2, #106                    @ 0x6a 
    /*00039794*/ STR         R3, [SP, #4] 
    /*00039798*/ STR         R2, [SP] 
    /*0003979c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2348] 
    /*000397a0*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11e6c] 
    /*000397a4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2348] 
    /*000397a8*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11e6c] 
    /*000397ac*/ MOV         R0, #3 
    /*000397b0*/ BL          0x00000000000397B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000397b4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000397b8*/ MOVT        R0, #40976                  @ 0xa010 
    /*000397bc*/ B           VI_DRV_CheckVideoFrame_x39740
    VI_DRV_CheckVideoFrame_x397c0:
    /*000397c0*/ STR         R2, [SP, #8] 
    /*000397c4*/ MOV         R1, #4096                   @ 0x1000 
    /*000397c8*/ MOV         R2, #3456                   @ 0xd80 
    /*000397cc*/ STR         R3, [SP, #4] 
    /*000397d0*/ STR         R2, [SP, #24] 
    /*000397d4*/ MOV         R3, #120                    @ 0x78 
    /*000397d8*/ MOV         R2, #99                     @ 0x63 
    /*000397dc*/ STR         R3, [SP, #20] 
    /*000397e0*/ STR         R3, [SP, #12] 
    /*000397e4*/ MOV         R0, #3 
    /*000397e8*/ STR         R1, [SP, #16] 
    /*000397ec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2348] 
    /*000397f0*/ STR         R2, [SP] 
    /*000397f4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2348] 
    /*000397f8*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11dfc] 
    /*000397fc*/ MOV         R1, #16 
    /*00039800*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11dfc] 
    /*00039804*/ BL          0x0000000000039804          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00039808*/ MOVW        R0, #32771                  @ 0x8003 
    /*0003980c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00039810*/ B           VI_DRV_CheckVideoFrame_x39740
    VI_DRV_CheckVideoFrame_x39814:
    /*00039814*/ STR         R3, [SP, #4] 
    /*00039818*/ MOV         R2, #78                     @ 0x4e 
    /*0003981c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2348] 
    /*00039820*/ STR         R2, [SP] 
    /*00039824*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2348] 
    /*00039828*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11d6c] 
    /*0003982c*/ MOV         R1, #16 
    /*00039830*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11d6c] 
    /*00039834*/ MOV         R0, #3 
    /*00039838*/ BL          0x0000000000039838          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003983c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00039840*/ MOVT        R0, #40976                  @ 0xa010 
    /*00039844*/ B           VI_DRV_CheckVideoFrame_x39740
    VI_DRV_CheckVideoFrame_x39848:
    /*00039848*/ LDR         R2, [R4, #120]              @ 0x78 
    /*0003984c*/ MOV         R0, #113                    @ 0x71 
    /*00039850*/ LDR         R1, [R4, #328]              @ 0x148 
    /*00039854*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2348] 
    /*00039858*/ STR         R0, [SP] 
    /*0003985c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2348] 
    /*00039860*/ STR         R2, [SP, #8] 
    /*00039864*/ MOV         R0, #3 
    /*00039868*/ STR         R1, [SP, #4] 
    /*0003986c*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11eb4] 
    /*00039870*/ MOV         R1, #16 
    /*00039874*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11eb4] 
    /*00039878*/ BL          0x0000000000039878          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003987c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00039880*/ MOVT        R0, #40976                  @ 0xa010 
    /*00039884*/ B           VI_DRV_CheckVideoFrame_x39740
    VI_DRV_CheckVideoFrame_x39888:
    /*00039888*/ MOV         R2, #3 
    /*0003988c*/ STR         R3, [SP, #8] 
    /*00039890*/ MOV         R0, R2 
    /*00039894*/ STR         R2, [SP, #16] 
    /*00039898*/ MOV         R3, #142                    @ 0x8e 
    /*0003989c*/ MOV         R2, #0 
    /*000398a0*/ STR         R3, [SP] 
    /*000398a4*/ MOV         R1, #16 
    /*000398a8*/ STR         R2, [SP, #12] 
    /*000398ac*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2348] 
    /*000398b0*/ STR         R5, [SP, #4] 
    /*000398b4*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11ff4] 
    /*000398b8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2348] 
    /*000398bc*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11ff4] 
    /*000398c0*/ BL          0x00000000000398C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000398c4*/ MVN         R0, #0 
    /*000398c8*/ B           VI_DRV_CheckVideoFrame_x39740
    VI_DRV_CheckVideoFrame_x398cc:
    /*000398cc*/ MOV         R2, #88                     @ 0x58 
    /*000398d0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2348] 
    /*000398d4*/ STR         R2, [SP] 
    /*000398d8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2348] 
    /*000398dc*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11db4] 
    /*000398e0*/ MOV         R1, #16 
    /*000398e4*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11db4] 
    /*000398e8*/ MOV         R0, #3 
    /*000398ec*/ BL          0x00000000000398EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000398f0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000398f4*/ MOVT        R0, #40976                  @ 0xa010 
    /*000398f8*/ B           VI_DRV_CheckVideoFrame_x39740
    VI_DRV_CheckVideoFrame_x398fc:
    /*000398fc*/ STR         R3, [SP, #4] 
    /*00039900*/ MOV         R2, #120                    @ 0x78 
    /*00039904*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2348] 
    /*00039908*/ STR         R2, [SP] 
    /*0003990c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2348] 
    /*00039910*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11ef8] 
    /*00039914*/ MOV         R1, #16 
    /*00039918*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11ef8] 
    /*0003991c*/ MOV         R0, #3 
    /*00039920*/ BL          0x0000000000039920          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00039924*/ MOVW        R0, #32771                  @ 0x8003 
    /*00039928*/ MOVT        R0, #40976                  @ 0xa010 
    /*0003992c*/ B           VI_DRV_CheckVideoFrame_x39740
    VI_DRV_CheckVideoFrame_x39930:
    /*00039930*/ STR         R3, [SP, #8] 
    /*00039934*/ MOV         R1, #127                    @ 0x7f 
    /*00039938*/ STR         R2, [SP, #4] 
    /*0003993c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2348] 
    /*00039940*/ STR         R1, [SP] 
    /*00039944*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2348] 
    /*00039948*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11f4c] 
    /*0003994c*/ MOV         R1, #16 
    /*00039950*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11f4c] 
    /*00039954*/ MOV         R0, #3 
    /*00039958*/ BL          0x0000000000039958          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003995c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00039960*/ MOVT        R0, #40976                  @ 0xa010 
    /*00039964*/ B           VI_DRV_CheckVideoFrame_x39740
    VI_DRV_CheckVideoFrame_x39968:
    /*00039968*/ STR         R3, [SP, #8] 
    /*0003996c*/ MOV         R2, #134                    @ 0x86 
    /*00039970*/ STR         R5, [SP, #4] 
    /*00039974*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2348] 
    /*00039978*/ STR         R2, [SP] 
    /*0003997c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2348] 
    /*00039980*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11f90] 
    /*00039984*/ MOV         R1, #16 
    /*00039988*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11f90] 
    /*0003998c*/ MOV         R0, #3 
    /*00039990*/ BL          0x0000000000039990          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00039994*/ MOVW        R0, #32771                  @ 0x8003 
    /*00039998*/ MOVT        R0, #40976                  @ 0xa010 
    /*0003999c*/ B           VI_DRV_CheckVideoFrame_x39740
    VI_DRV_CheckVideoFrame_x399a0:
    /*000399a0*/ STR         R3, [SP, #4] 
    /*000399a4*/ MOV         R2, #72                     @ 0x48 
    /*000399a8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x2348] 
    /*000399ac*/ STR         R2, [SP] 
    /*000399b0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x2348] 
    /*000399b4*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11d3c] 
    /*000399b8*/ MOV         R1, #16 
    /*000399bc*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11d3c] 
    /*000399c0*/ MOV         R0, #3 
    /*000399c4*/ BL          0x00000000000399C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000399c8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000399cc*/ MOVT        R0, #40976                  @ 0xa010 
    /*000399d0*/ B           VI_DRV_CheckVideoFrame_x39740
FUNC_END VI_DRV_CheckVideoFrame


FUNC_BEGIN VI_DRV_CheckCalibrateAttr
    /*000399d4*/ PUSH        {R4, R5, LR} 
    /*000399d8*/ SUB         SP, SP, #20 
    /*000399dc*/ MOV         R4, R1 
    /*000399e0*/ MOV         R5, R0 
    /*000399e4*/ BL          0x00000000000399E4          @ VI_DRV_GetPipeMode [R_ARM_CALL: .text+0x271fc] 
    /*000399e8*/ CMP         R0, #2 
    /*000399ec*/ BNE         VI_DRV_CheckCalibrateAttr_x39abc
    /*000399f0*/ MOV         R0, R5 
    /*000399f4*/ BL          0x00000000000399F4          @ VI_DRV_GetWDRModeByPipe [R_ARM_CALL: .text+0x317e4] 
    /*000399f8*/ BL          0x00000000000399F8          @ VI_DRV_IsWDRMode [R_ARM_CALL: .text+0x37b50] 
    /*000399fc*/ CMP         R0, #1 
    /*00039a00*/ BEQ         VI_DRV_CheckCalibrateAttr_x39b78
    /*00039a04*/ LDR         R2, [R4, #8] 
    /*00039a08*/ CMP         R2, #0 
    /*00039a0c*/ BNE         VI_DRV_CheckCalibrateAttr_x39af0
    /*00039a10*/ LDR         R0, [R4, #4] 
    /*00039a14*/ SUB         R3, R0, #1 
    /*00039a18*/ CMP         R3, #15 
    /*00039a1c*/ BHI         VI_DRV_CheckCalibrateAttr_x39b3c
    /*00039a20*/ LDR         R3, [R4] 
    /*00039a24*/ MOVW        R1, #4094                   @ 0xffe 
    /*00039a28*/ SUB         IP, R3, #1 
    /*00039a2c*/ CMP         IP, R1 
    /*00039a30*/ MOVLS       R3, R0 
    /*00039a34*/ BHI         VI_DRV_CheckCalibrateAttr_x39b24
    VI_DRV_CheckCalibrateAttr_x39a38:
    /*00039a38*/ TST         R3, #1 
    /*00039a3c*/ BEQ         VI_DRV_CheckCalibrateAttr_x39aa0
    /*00039a40*/ CMP         R2, #1 
    /*00039a44*/ BEQ         VI_DRV_CheckCalibrateAttr_x39a58
    /*00039a48*/ LSRS        R2, R3, #1 
    /*00039a4c*/ BEQ         VI_DRV_CheckCalibrateAttr_x39aa8
    /*00039a50*/ TST         R2, #1 
    /*00039a54*/ BEQ         VI_DRV_CheckCalibrateAttr_x39a8c
    VI_DRV_CheckCalibrateAttr_x39a58:
    /*00039a58*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12240] 
    /*00039a5c*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12240] 
    /*00039a60*/ MOV         R3, #207                    @ 0xcf 
    /*00039a64*/ STR         R0, [SP, #4] 
    /*00039a68*/ STR         R3, [SP] 
    VI_DRV_CheckCalibrateAttr_x39a6c:
    /*00039a6c*/ LDR         R3, [PC, #304]              @ 0x0000000000039ba4 
    /*00039a70*/ MOV         R1, #16 
    /*00039a74*/ MOV         R0, #3 
    /*00039a78*/ BL          0x0000000000039A78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00039a7c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00039a80*/ MOVT        R0, #40976                  @ 0xa010 
    VI_DRV_CheckCalibrateAttr_x39a84:
    /*00039a84*/ ADD         SP, SP, #20 
    /*00039a88*/ POP         {R4, R5, PC} 
    VI_DRV_CheckCalibrateAttr_x39a8c:
    /*00039a8c*/ LSRS        R3, R3, #2 
    /*00039a90*/ MOV         R2, #1 
    /*00039a94*/ BEQ         VI_DRV_CheckCalibrateAttr_x39aa8
    /*00039a98*/ TST         R3, #1 
    /*00039a9c*/ BNE         VI_DRV_CheckCalibrateAttr_x39a58
    VI_DRV_CheckCalibrateAttr_x39aa0:
    /*00039aa0*/ LSRS        R3, R3, #1 
    /*00039aa4*/ BNE         VI_DRV_CheckCalibrateAttr_x39a38
    VI_DRV_CheckCalibrateAttr_x39aa8:
    /*00039aa8*/ ADD         R1, R4, #40                 @ 0x28 
    /*00039aac*/ MOV         R0, R5 
    /*00039ab0*/ ADD         SP, SP, #20 
    /*00039ab4*/ POP         {R4, R5, LR} 
    VI_DRV_CheckCalibrateAttr_x39ab8:
    /*00039ab8*/ B           VI_DRV_CheckCalibrateAttr_x39ab8@ VI_DRV_CheckVideoFrame [R_ARM_JUMP24: .text+0x3966c] 
    VI_DRV_CheckCalibrateAttr_x39abc:
    /*00039abc*/ STR         R0, [SP, #8] 
    /*00039ac0*/ MOV         R3, #171                    @ 0xab 
    /*00039ac4*/ STR         R5, [SP, #4] 
    /*00039ac8*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1208c] 
    /*00039acc*/ STR         R3, [SP] 
    /*00039ad0*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1208c] 
    /*00039ad4*/ LDR         R3, [PC, #200]              @ 0x0000000000039ba4 
    /*00039ad8*/ MOV         R1, #16 
    /*00039adc*/ MOV         R0, #3 
    /*00039ae0*/ BL          0x0000000000039AE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00039ae4*/ MOVW        R0, #32776                  @ 0x8008 
    /*00039ae8*/ MOVT        R0, #40976                  @ 0xa010 
    /*00039aec*/ B           VI_DRV_CheckCalibrateAttr_x39a84
    VI_DRV_CheckCalibrateAttr_x39af0:
    /*00039af0*/ STR         R2, [SP, #8] 
    /*00039af4*/ MOV         R3, #184                    @ 0xb8 
    /*00039af8*/ STR         R5, [SP, #4] 
    /*00039afc*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12150] 
    /*00039b00*/ STR         R3, [SP] 
    /*00039b04*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12150] 
    /*00039b08*/ LDR         R3, [PC, #148]              @ 0x0000000000039ba4 
    /*00039b0c*/ MOV         R1, #16 
    /*00039b10*/ MOV         R0, #3 
    /*00039b14*/ BL          0x0000000000039B14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00039b18*/ MOVW        R0, #32771                  @ 0x8003 
    /*00039b1c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00039b20*/ B           VI_DRV_CheckCalibrateAttr_x39a84
    VI_DRV_CheckCalibrateAttr_x39b24:
    /*00039b24*/ STR         R3, [SP, #4] 
    /*00039b28*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x121f4] 
    /*00039b2c*/ MOV         R3, #199                    @ 0xc7 
    /*00039b30*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x121f4] 
    /*00039b34*/ STR         R3, [SP] 
    /*00039b38*/ B           VI_DRV_CheckCalibrateAttr_x39a6c
    VI_DRV_CheckCalibrateAttr_x39b3c:
    /*00039b3c*/ MOV         R1, #16 
    /*00039b40*/ STR         R0, [SP, #4] 
    /*00039b44*/ MOV         R2, #1 
    /*00039b48*/ MOV         R3, #193                    @ 0xc1 
    /*00039b4c*/ STR         R2, [SP, #8] 
    /*00039b50*/ MOV         R0, #3 
    /*00039b54*/ STR         R3, [SP] 
    /*00039b58*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x121a8] 
    /*00039b5c*/ STR         R1, [SP, #12] 
    /*00039b60*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x121a8] 
    /*00039b64*/ LDR         R3, [PC, #56]               @ 0x0000000000039ba4 
    /*00039b68*/ BL          0x0000000000039B68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00039b6c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00039b70*/ MOVT        R0, #40976                  @ 0xa010 
    /*00039b74*/ B           VI_DRV_CheckCalibrateAttr_x39a84
    VI_DRV_CheckCalibrateAttr_x39b78:
    /*00039b78*/ MOV         R3, #178                    @ 0xb2 
    /*00039b7c*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12100] 
    /*00039b80*/ STR         R3, [SP] 
    /*00039b84*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12100] 
    /*00039b88*/ LDR         R3, [PC, #20]               @ 0x0000000000039ba4 
    /*00039b8c*/ MOV         R1, #16 
    /*00039b90*/ MOV         R0, #3 
    /*00039b94*/ BL          0x0000000000039B94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00039b98*/ MOVW        R0, #32786                  @ 0x8012 
    /*00039b9c*/ MOVT        R0, #40976                  @ 0xa010 
    /*00039ba0*/ B           VI_DRV_CheckCalibrateAttr_x39a84
    /*00039ba4*/ ANDEQ       R2, R0, R0, ROR #6 
FUNC_END VI_DRV_CheckCalibrateAttr


FUNC_BEGIN VI_DRV_CheckCorrectionAttr
    /*00039ba8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00039bac*/ SUB         SP, SP, #20 
    /*00039bb0*/ LDR         R3, [R1] 
    /*00039bb4*/ CMP         R3, #1 
    /*00039bb8*/ BHI         VI_DRV_CheckCorrectionAttr_x39c80
    /*00039bbc*/ LDR         R3, [R1, #4] 
    /*00039bc0*/ CMP         R3, #1 
    /*00039bc4*/ BHI         VI_DRV_CheckCorrectionAttr_x39cb4
    /*00039bc8*/ LDR         R2, [R1, #8] 
    /*00039bcc*/ CMP         R2, #0 
    /*00039bd0*/ BNE         VI_DRV_CheckCorrectionAttr_x39ccc
    /*00039bd4*/ LDR         R2, [R1, #16] 
    /*00039bd8*/ CMP         R2, #0 
    /*00039bdc*/ BEQ         VI_DRV_CheckCorrectionAttr_x39ce4
    /*00039be0*/ LDR         R2, [R1, #20] 
    /*00039be4*/ LDR         IP, [R1, #24] 
    /*00039be8*/ CMP         R2, #4096                   @ 0x1000 
    /*00039bec*/ BCS         VI_DRV_CheckCorrectionAttr_x39c4c
    /*00039bf0*/ CMP         IP, #4096                   @ 0x1000 
    /*00039bf4*/ BCS         VI_DRV_CheckCorrectionAttr_x39c4c
    /*00039bf8*/ CMP         R3, #1 
    /*00039bfc*/ BEQ         VI_DRV_CheckCorrectionAttr_x39c10
    VI_DRV_CheckCorrectionAttr_x39c00:
    /*00039c00*/ ADD         R1, R1, #40                 @ 0x28 
    /*00039c04*/ ADD         SP, SP, #20 
    /*00039c08*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    VI_DRV_CheckCorrectionAttr_x39c0c:
    /*00039c0c*/ B           VI_DRV_CheckCorrectionAttr_x39c0c@ VI_DRV_CheckVideoFrame [R_ARM_JUMP24: .text+0x3966c] 
    VI_DRV_CheckCorrectionAttr_x39c10:
    /*00039c10*/ LDR         R3, [R1, #376]              @ 0x178 
    /*00039c14*/ CMP         R3, #1024                   @ 0x400 
    /*00039c18*/ BCC         VI_DRV_CheckCorrectionAttr_x39c00
    /*00039c1c*/ MOVW        R3, #258                    @ 0x102 
    /*00039c20*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1242c] 
    /*00039c24*/ STR         R3, [SP] 
    /*00039c28*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1242c] 
    /*00039c2c*/ LDR         R3, [PC, #200]              @ 0x0000000000039cfc 
    /*00039c30*/ MOV         R1, #16 
    /*00039c34*/ MOV         R0, #3 
    /*00039c38*/ BL          0x0000000000039C38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00039c3c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00039c40*/ MOVT        R0, #40976                  @ 0xa010 
    VI_DRV_CheckCorrectionAttr_x39c44:
    /*00039c44*/ ADD         SP, SP, #20 
    /*00039c48*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckCorrectionAttr_x39c4c:
    /*00039c4c*/ MOV         R3, #250                    @ 0xfa 
    /*00039c50*/ STR         R2, [SP, #4] 
    /*00039c54*/ STR         R3, [SP] 
    /*00039c58*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x123cc] 
    /*00039c5c*/ STR         IP, [SP, #8] 
    /*00039c60*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x123cc] 
    /*00039c64*/ LDR         R3, [PC, #144]              @ 0x0000000000039cfc 
    /*00039c68*/ MOV         R1, #16 
    /*00039c6c*/ MOV         R0, #3 
    /*00039c70*/ BL          0x0000000000039C70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00039c74*/ MOVW        R0, #32771                  @ 0x8003 
    /*00039c78*/ MOVT        R0, #40976                  @ 0xa010 
    /*00039c7c*/ B           VI_DRV_CheckCorrectionAttr_x39c44
    VI_DRV_CheckCorrectionAttr_x39c80:
    /*00039c80*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12284] 
    /*00039c84*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12284] 
    /*00039c88*/ STR         R3, [SP, #4] 
    /*00039c8c*/ MOV         R3, #225                    @ 0xe1 
    /*00039c90*/ STR         R3, [SP] 
    VI_DRV_CheckCorrectionAttr_x39c94:
    /*00039c94*/ LDR         R3, [PC, #96]               @ 0x0000000000039cfc 
    /*00039c98*/ MOV         R1, #16 
    /*00039c9c*/ MOV         R0, #3 
    /*00039ca0*/ BL          0x0000000000039CA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00039ca4*/ MOVW        R0, #32771                  @ 0x8003 
    /*00039ca8*/ MOVT        R0, #40976                  @ 0xa010 
    /*00039cac*/ ADD         SP, SP, #20 
    /*00039cb0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VI_DRV_CheckCorrectionAttr_x39cb4:
    /*00039cb4*/ STR         R3, [SP, #4] 
    /*00039cb8*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x122dc] 
    /*00039cbc*/ MOV         R3, #231                    @ 0xe7 
    /*00039cc0*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x122dc] 
    /*00039cc4*/ STR         R3, [SP] 
    /*00039cc8*/ B           VI_DRV_CheckCorrectionAttr_x39c94
    VI_DRV_CheckCorrectionAttr_x39ccc:
    /*00039ccc*/ STR         R2, [SP, #4] 
    /*00039cd0*/ MOV         R3, #237                    @ 0xed 
    /*00039cd4*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12340] 
    /*00039cd8*/ STR         R3, [SP] 
    /*00039cdc*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12340] 
    /*00039ce0*/ B           VI_DRV_CheckCorrectionAttr_x39c94
    VI_DRV_CheckCorrectionAttr_x39ce4:
    /*00039ce4*/ STR         R2, [SP, #4] 
    /*00039ce8*/ MOV         R3, #243                    @ 0xf3 
    /*00039cec*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12398] 
    /*00039cf0*/ STR         R3, [SP] 
    /*00039cf4*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12398] 
    /*00039cf8*/ B           VI_DRV_CheckCorrectionAttr_x39c94
    /*00039cfc*/ ANDEQ       R2, R0, IP, ROR R3 
FUNC_END VI_DRV_CheckCorrectionAttr


FUNC_BEGIN VI_DRV_CheckFPNAttr
    /*00039d00*/ LDR         R3, [R1] 
    /*00039d04*/ CMP         R3, #2 
    /*00039d08*/ BEQ         VI_DRV_CheckFPNAttr_x39d1c
    /*00039d0c*/ CMP         R3, #1 
    /*00039d10*/ BNE         VI_DRV_CheckFPNAttr_x39d24
    /*00039d14*/ ADD         R1, R1, #8 
    VI_DRV_CheckFPNAttr_x39d18:
    /*00039d18*/ B           VI_DRV_CheckFPNAttr_x39d18  @ VI_DRV_CheckCorrectionAttr [R_ARM_JUMP24: .text+0x39ba8] 
    VI_DRV_CheckFPNAttr_x39d1c:
    /*00039d1c*/ ADD         R1, R1, #8 
    VI_DRV_CheckFPNAttr_x39d20:
    /*00039d20*/ B           VI_DRV_CheckFPNAttr_x39d20  @ VI_DRV_CheckCalibrateAttr [R_ARM_JUMP24: .text+0x399d4] 
    VI_DRV_CheckFPNAttr_x39d24:
    /*00039d24*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00039d28*/ SUB         SP, SP, #12 
    /*00039d2c*/ MOV         R1, #16 
    /*00039d30*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1246c] 
    /*00039d34*/ STR         R3, [SP, #4] 
    /*00039d38*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1246c] 
    /*00039d3c*/ MOVW        R3, #286                    @ 0x11e 
    /*00039d40*/ MOV         R0, #3 
    /*00039d44*/ STR         R3, [SP] 
    /*00039d48*/ LDR         R3, [PC, #16]               @ 0x0000000000039d60 
    /*00039d4c*/ BL          0x0000000000039D4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00039d50*/ MOVW        R0, #32771                  @ 0x8003 
    /*00039d54*/ MOVT        R0, #40976                  @ 0xa010 
    /*00039d58*/ ADD         SP, SP, #12 
    /*00039d5c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00039d60*/ MULEQ       R0, R8, R3 
FUNC_END VI_DRV_CheckFPNAttr


FUNC_BEGIN VI_DRV_ModifyFPNFrameInfoWithBit
    /*00039d64*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00039d68*/ MOV         R7, R2 
    /*00039d6c*/ LDR         R4, [R3] 
    /*00039d70*/ MOV         R5, R0 
    /*00039d74*/ MOV         R6, R3 
    /*00039d78*/ MUL         R4, R4, R2 
    /*00039d7c*/ ADD         R4, R4, #127                @ 0x7f 
    /*00039d80*/ LSR         R4, R4, #3 
    /*00039d84*/ BIC         R4, R4, #-536870897         @ 0xe000000f 
    /*00039d88*/ STR         R4, [R1, #12] 
    /*00039d8c*/ BL          0x0000000000039D8C          @ VI_HAL_SetFpnOutMemInfo [R_ARM_CALL: .text+0x36c60] 
    /*00039d90*/ MOV         R0, R5 
    /*00039d94*/ MOV         R1, R7 
    /*00039d98*/ BL          0x0000000000039D98          @ VI_HAL_SetFpnOutPackWidth [R_ARM_CALL: .text+0x36c7c] 
    /*00039d9c*/ STR         R4, [R6, #44]               @ 0x2c 
    /*00039da0*/ MOV         R0, R5 
    /*00039da4*/ POP         {R4, R5, R6, R7, R8, LR} 
    VI_DRV_ModifyFPNFrameInfoWithBit_x39da8:
    /*00039da8*/ B           VI_DRV_ModifyFPNFrameInfoWithBit_x39da8@ VI_HAL_ProcRegNew [R_ARM_JUMP24: .text+0x353d8] 
FUNC_END VI_DRV_ModifyFPNFrameInfoWithBit


FUNC_BEGIN VI_FPN_SetFpnOutCtrl
    /*00039dac*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00039db0*/ SUB         SP, SP, #8 
    /*00039db4*/ MOV         R5, R3 
    /*00039db8*/ MOV         R8, R1 
    /*00039dbc*/ MOV         R1, R2 
    /*00039dc0*/ LDR         R7, [R3, #52]               @ 0x34 
    /*00039dc4*/ MOV         R6, R2 
    /*00039dc8*/ MOV         R3, #16 
    /*00039dcc*/ MOV         R4, R0 
    /*00039dd0*/ STR         R3, [SP, #4] 
    /*00039dd4*/ BL          0x0000000000039DD4          @ VI_HAL_SetFpnOutMemInfo [R_ARM_CALL: .text+0x36c60] 
    /*00039dd8*/ LDR         R1, [R5, #4] 
    /*00039ddc*/ CMP         R7, #21 
    /*00039de0*/ SUB         R1, R1, #1 
    /*00039de4*/ CLZ         R1, R1 
    /*00039de8*/ LSR         R1, R1, #5 
    /*00039dec*/ MOVEQ       R1, #0 
    /*00039df0*/ CMP         R1, #0 
    /*00039df4*/ BEQ         VI_FPN_SetFpnOutCtrl_x39e18
    /*00039df8*/ MOV         R0, R7 
    /*00039dfc*/ ADD         R1, SP, #4 
    /*00039e00*/ BL          0x0000000000039E00          @ VI_HAL_GetBitWidthByPixFmt [R_ARM_CALL: .text+0x37010] 
    /*00039e04*/ ADD         R3, R5, #40                 @ 0x28 
    /*00039e08*/ MOV         R1, R6 
    /*00039e0c*/ LDR         R2, [SP, #4] 
    /*00039e10*/ MOV         R0, R4 
    /*00039e14*/ BL          0x0000000000039E14          @ VI_DRV_ModifyFPNFrameInfoWithBit [R_ARM_CALL: .text+0x39d64] 
    VI_FPN_SetFpnOutCtrl_x39e18:
    /*00039e18*/ MOV         R2, R8 
    /*00039e1c*/ LDR         R1, [SP, #4] 
    /*00039e20*/ MOV         R0, R4 
    /*00039e24*/ BL          0x0000000000039E24          @ VI_HAL_SetFpnOutYCSize [R_ARM_CALL: .text+0x36ce0] 
    /*00039e28*/ MOV         R0, R4 
    /*00039e2c*/ MOV         R1, #0 
    /*00039e30*/ BL          0x0000000000039E30          @ VI_HAL_SetFpnOutCropEn [R_ARM_CALL: .text+0x36d6c] 
    /*00039e34*/ ADD         SP, SP, #8 
    /*00039e38*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_FPN_SetFpnOutCtrl


FUNC_BEGIN VI_FPN_SetFpnInCtrl
    /*00039e3c*/ PUSH        {R4, R5, R6, LR} 
    /*00039e40*/ MOV         R5, R2 
    /*00039e44*/ MOV         R4, R0 
    /*00039e48*/ MOV         R2, R1 
    /*00039e4c*/ MOV         R1, #16 
    /*00039e50*/ BL          0x0000000000039E50          @ VI_HAL_SetFpnInYCSize [R_ARM_CALL: .text+0x36d8c] 
    /*00039e54*/ MOV         R1, R5 
    /*00039e58*/ MOV         R0, R4 
    /*00039e5c*/ POP         {R4, R5, R6, LR} 
    VI_FPN_SetFpnInCtrl_x39e60:
    /*00039e60*/ B           VI_FPN_SetFpnInCtrl_x39e60  @ VI_HAL_SetFpnInMemInfo [R_ARM_JUMP24: .text+0x36e18] 
FUNC_END VI_FPN_SetFpnInCtrl


FUNC_BEGIN VI_FPN_SetCalibrateCtrl
    /*00039e64*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00039e68*/ MOV         R7, R0 
    /*00039e6c*/ LDR         R6, [R3, #8] 
    /*00039e70*/ SUB         SP, SP, #8 
    /*00039e74*/ MOV         R0, R1 
    /*00039e78*/ MOV         R4, R1 
    /*00039e7c*/ MOV         R5, R3 
    /*00039e80*/ MOV         R8, R2 
    /*00039e84*/ MOV         R1, R6 
    /*00039e88*/ BL          0x0000000000039E88          @ VI_HAL_SetFpnCfg [R_ARM_CALL: .text+0x36e48] 
    /*00039e8c*/ MOV         R2, #1 
    /*00039e90*/ MOV         R1, R2 
    /*00039e94*/ MOV         R0, R7 
    /*00039e98*/ BL          0x0000000000039E98          @ VI_HAL_SetFpnEn [R_ARM_CALL: .text+0x36e5c] 
    /*00039e9c*/ MOV         R0, R7 
    /*00039ea0*/ MOV         R1, #1 
    /*00039ea4*/ BL          0x0000000000039EA4          @ VI_HAL_SetFpnDataSource [R_ARM_CALL: .text+0x36c10] 
    /*00039ea8*/ LDR         R1, [R5] 
    /*00039eac*/ MOV         R0, R4 
    /*00039eb0*/ BL          0x0000000000039EB0          @ VI_HAL_SetFpnWhiteLevel [R_ARM_CALL: .text+0x36e70] 
    /*00039eb4*/ LDR         R1, [R5, #4] 
    /*00039eb8*/ CMP         R1, #0 
    /*00039ebc*/ MOVNE       R2, R1 
    /*00039ec0*/ MOVNE       R1, #0 
    /*00039ec4*/ BNE         VI_FPN_SetCalibrateCtrl_x39ed0
    /*00039ec8*/ B           VI_FPN_SetCalibrateCtrl_x39edc
    VI_FPN_SetCalibrateCtrl_x39ecc:
    /*00039ecc*/ MOV         R1, R0 
    VI_FPN_SetCalibrateCtrl_x39ed0:
    /*00039ed0*/ LSRS        R2, R2, #1 
    /*00039ed4*/ ADD         R0, R1, #1 
    /*00039ed8*/ BNE         VI_FPN_SetCalibrateCtrl_x39ecc
    VI_FPN_SetCalibrateCtrl_x39edc:
    /*00039edc*/ MOV         R0, R4 
    /*00039ee0*/ BL          0x0000000000039EE0          @ VI_HAL_SetFpnFrameNum [R_ARM_CALL: .text+0x36e84] 
    /*00039ee4*/ LDR         IP, [R5, #52]               @ 0x34 
    /*00039ee8*/ MOV         R3, R8 
    /*00039eec*/ MOV         R1, R6 
    /*00039ef0*/ MOV         R0, R4 
    /*00039ef4*/ MOV         R2, #1 
    /*00039ef8*/ STR         IP, [SP] 
    /*00039efc*/ BL          0x0000000000039EFC          @ VI_HAL_SetFpnDarkFrameBitWidth [R_ARM_CALL: .text+0x36ea0] 
    /*00039f00*/ ADD         SP, SP, #8 
    /*00039f04*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VI_FPN_SetCalibrateCtrl


FUNC_BEGIN VI_DRV_GetFpnCalibrateStartFlag
    /*00039f08*/ PUSH        {R4, LR} 
    /*00039f0c*/ BL          0x0000000000039F0C          @ VI_DRV_GetPipeByProcId [R_ARM_CALL: .text+0x27358] 
    /*00039f10*/ BL          0x0000000000039F10          @ VI_DRV_GetIspBeReg [R_ARM_CALL: .text+0x27368] 
    /*00039f14*/ SUBS        R3, R0, #0 
    /*00039f18*/ BEQ         VI_DRV_GetFpnCalibrateStartFlag_x39f2c
    /*00039f1c*/ BL          0x0000000000039F1C          @ VI_HAL_GetFpnCalibStats [R_ARM_CALL: .text+0x36fc4] 
    /*00039f20*/ ADDS        R0, R0, #0 
    /*00039f24*/ MOVNE       R0, #1 
    /*00039f28*/ POP         {R4, PC} 
    VI_DRV_GetFpnCalibrateStartFlag_x39f2c:
    /*00039f2c*/ MOV         R0, R3 
    /*00039f30*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetFpnCalibrateStartFlag


FUNC_BEGIN VI_FPN_CalibrateStart
    /*00039f34*/ MOV         R1, #1 
    VI_FPN_CalibrateStart_x39f38:
    /*00039f38*/ B           VI_FPN_CalibrateStart_x39f38@ VI_HAL_SetFpnCalibStart [R_ARM_JUMP24: .text+0x36fb0] 
FUNC_END VI_FPN_CalibrateStart


FUNC_BEGIN VI_DRV_SetFPNCalibrateAttr
    /*00039f3c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00039f40*/ SUB         SP, SP, #76                 @ 0x4c 
    /*00039f44*/ MOV         R8, R1 
    /*00039f48*/ MOV         R5, R0 
    /*00039f4c*/ BL          0x0000000000039F4C          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*00039f50*/ BL          0x0000000000039F50          @ VI_DRV_GetSensorBitWidth [R_ARM_CALL: .text+0x26084] 
    /*00039f54*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*00039f58*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*00039f5c*/ LDR         R4, [R3, R5, LSL #2] 
    /*00039f60*/ ADD         FP, R4, #86016              @ 0x15000 
    /*00039f64*/ LDR         R3, [FP, #1720]             @ 0x6b8 
    /*00039f68*/ CMP         R3, #1 
    /*00039f6c*/ MOV         R7, R0 
    /*00039f70*/ BEQ         VI_DRV_SetFPNCalibrateAttr_x3a278
    VI_DRV_SetFPNCalibrateAttr_x39f74:
    /*00039f74*/ MOVW        SL, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x13bc4] 
    /*00039f78*/ MOVT        SL, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x13bc4] 
    /*00039f7c*/ ADD         R3, SL, R5, LSL #2 
    /*00039f80*/ ADD         R4, R4, #87040              @ 0x15400 
    /*00039f84*/ ADD         R4, R4, #704                @ 0x2c0 
    /*00039f88*/ ADD         R1, SP, #16 
    /*00039f8c*/ MOV         R0, R3 
    /*00039f90*/ MOV         R6, R3 
    /*00039f94*/ STR         R3, [SP, #12] 
    /*00039f98*/ BL          0x0000000000039F98          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00039f9c*/ MOV         R3, #2 
    /*00039fa0*/ MOV         R2, #376                    @ 0x178 
    /*00039fa4*/ STR         R3, [FP, #1720]             @ 0x6b8 
    /*00039fa8*/ MOV         R0, R4 
    /*00039fac*/ MOV         R1, R8 
    /*00039fb0*/ BL          0x0000000000039FB0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00039fb4*/ MOV         R0, R6 
    /*00039fb8*/ ADD         R1, SP, #16 
    /*00039fbc*/ BL          0x0000000000039FBC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00039fc0*/ LDR         R3, [R8, #40]               @ 0x28 
    /*00039fc4*/ LDR         R2, [R8, #112]              @ 0x70 
    /*00039fc8*/ MOV         R0, R5 
    /*00039fcc*/ LDR         R1, [R8, #120]              @ 0x78 
    /*00039fd0*/ LSL         R3, R3, #4 
    /*00039fd4*/ LDR         IP, [R8, #160]              @ 0xa0 
    /*00039fd8*/ LDR         LR, [R8, #168]              @ 0xa8 
    /*00039fdc*/ ADD         R3, R3, #127                @ 0x7f 
    /*00039fe0*/ STR         R2, [SP, #60]               @ 0x3c 
    /*00039fe4*/ LDR         R2, [R8, #88]               @ 0x58 
    /*00039fe8*/ LSR         R3, R3, #3 
    /*00039fec*/ BIC         R3, R3, #-536870897         @ 0xe000000f 
    /*00039ff0*/ STR         R1, [SP, #64]               @ 0x40 
    /*00039ff4*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00039ff8*/ STR         IP, [SP, #32] 
    /*00039ffc*/ STR         LR, [SP, #36]               @ 0x24 
    /*0003a000*/ STR         R2, [SP, #52]               @ 0x34 
    /*0003a004*/ BL          0x000000000003A004          @ VI_DRV_GetProcReg [R_ARM_CALL: .text+0x2739c] 
    /*0003a008*/ MOV         R6, R0 
    /*0003a00c*/ MOV         R0, R5 
    /*0003a010*/ BL          0x000000000003A010          @ VI_DRV_GetIspBeReg [R_ARM_CALL: .text+0x27368] 
    /*0003a014*/ LDR         LR, [R8, #40]               @ 0x28 
    /*0003a018*/ LDR         IP, [R8, #44]               @ 0x2c 
    /*0003a01c*/ MOV         R2, R7 
    /*0003a020*/ MOV         R3, R4 
    /*0003a024*/ STR         LR, [SP, #24] 
    /*0003a028*/ STR         IP, [SP, #28] 
    /*0003a02c*/ MOV         R1, R0 
    /*0003a030*/ MOV         R5, R0 
    /*0003a034*/ MOV         R0, R6 
    /*0003a038*/ BL          0x000000000003A038          @ VI_FPN_SetCalibrateCtrl [R_ARM_CALL: .text+0x39e64] 
    /*0003a03c*/ MOV         R3, R4 
    /*0003a040*/ MOV         R0, R6 
    /*0003a044*/ ADD         R2, SP, #32 
    /*0003a048*/ ADD         R1, SP, #24 
    /*0003a04c*/ BL          0x000000000003A04C          @ VI_FPN_SetFpnOutCtrl [R_ARM_CALL: .text+0x39dac] 
    /*0003a050*/ ADD         R2, SP, #24 
    /*0003a054*/ MOV         R0, R6 
    /*0003a058*/ MOV         R1, #16 
    /*0003a05c*/ BL          0x000000000003A05C          @ VI_HAL_SetFpnInYCSize [R_ARM_CALL: .text+0x36d8c] 
    /*0003a060*/ ADD         R1, SP, #32 
    /*0003a064*/ MOV         R0, R6 
    /*0003a068*/ BL          0x000000000003A068          @ VI_HAL_SetFpnInMemInfo [R_ARM_CALL: .text+0x36e18] 
    /*0003a06c*/ MOV         R1, #0 
    /*0003a070*/ MOV         R0, R6 
    /*0003a074*/ MOV         R4, R1 
    /*0003a078*/ BL          0x000000000003A078          @ VI_HAL_SetFpnOutEnable [R_ARM_CALL: .text+0x36c50] 
    /*0003a07c*/ MOV         R2, #1 
    /*0003a080*/ MOV         R1, R2 
    /*0003a084*/ MOV         R0, R6 
    /*0003a088*/ BL          0x000000000003A088          @ VI_HAL_SetFpnEn [R_ARM_CALL: .text+0x36e5c] 
    /*0003a08c*/ MOV         R0, R6 
    /*0003a090*/ BL          0x000000000003A090          @ VI_HAL_ProcRegNew [R_ARM_CALL: .text+0x353d8] 
    /*0003a094*/ MOV         R0, R5 
    /*0003a098*/ LDR         R7, [R8, #4] 
    /*0003a09c*/ BL          0x000000000003A09C          @ VI_HAL_GetIspFcnt [R_ARM_CALL: .text+0x36e98] 
    /*0003a0a0*/ ADD         R7, R7, #6 
    /*0003a0a4*/ ADD         R7, R7, R0 
    /*0003a0a8*/ MOV         R9, R0 
    VI_DRV_SetFPNCalibrateAttr_x3a0ac:
    /*0003a0ac*/ MOV         R0, R5 
    /*0003a0b0*/ BL          0x000000000003A0B0          @ VI_HAL_GetIspFcnt [R_ARM_CALL: .text+0x36e98] 
    /*0003a0b4*/ CMP         R0, R7 
    /*0003a0b8*/ BCS         VI_DRV_SetFPNCalibrateAttr_x3a154
    VI_DRV_SetFPNCalibrateAttr_x3a0bc:
    /*0003a0bc*/ CMP         R4, #4 
    /*0003a0c0*/ LDRLS       PC, [PC, R4, LSL #2] 
    /*0003a0c4*/ B           VI_DRV_SetFPNCalibrateAttr_x3a0ac
    /*0003a0c8*/ ANDEQ       SL, R3, IP, LSL R2 
    /*0003a0cc*/ ANDEQ       SL, R3, R8, LSR R2 
    /*0003a0d0*/ ANDEQ       SL, R3, R4, ASR #3 
    /*0003a0d4*/ ANDEQ       SL, R3, R0, ROR #2 
    /*0003a0d8*/ LDRDEQ      SL, [R3], -IP 
    /*0003a0dc*/ MOV         R0, R6 
    /*0003a0e0*/ BL          0x000000000003A0E0          @ VI_HAL_GetViprocTimeoutFlag [R_ARM_CALL: .text+0x37078] 
    /*0003a0e4*/ CMP         R0, #0 
    /*0003a0e8*/ BNE         VI_DRV_SetFPNCalibrateAttr_x3a35c
    /*0003a0ec*/ MOV         R0, R5 
    /*0003a0f0*/ LDR         SL, [R8, #4] 
    /*0003a0f4*/ BL          0x000000000003A0F4          @ VI_HAL_GetIspFcnt [R_ARM_CALL: .text+0x36e98] 
    /*0003a0f8*/ ADD         SL, SL, #2 
    /*0003a0fc*/ ADD         SL, SL, R9 
    /*0003a100*/ CMP         SL, R0 
    /*0003a104*/ BNE         VI_DRV_SetFPNCalibrateAttr_x3a0ac
    /*0003a108*/ MOV         R0, R5 
    /*0003a10c*/ BL          0x000000000003A10C          @ VI_HAL_GetFpnCalibSum [R_ARM_CALL: .text+0x36fec] 
    /*0003a110*/ LDR         R3, [FP, #1736]             @ 0x6c8 
    /*0003a114*/ CMP         R3, #0 
    /*0003a118*/ BEQ         VI_DRV_SetFPNCalibrateAttr_x3a2fc
    VI_DRV_SetFPNCalibrateAttr_x3a11c:
    /*0003a11c*/ LDR         R4, [SP, #12] 
    /*0003a120*/ ADD         R1, SP, #16 
    /*0003a124*/ MOV         R0, R4 
    /*0003a128*/ BL          0x000000000003A128          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0003a12c*/ MOV         R3, #0 
    /*0003a130*/ MOV         R0, R4 
    /*0003a134*/ STR         R3, [FP, #1720]             @ 0x6b8 
    /*0003a138*/ ADD         R1, SP, #16 
    /*0003a13c*/ MOV         R4, #5 
    /*0003a140*/ BL          0x000000000003A140          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0003a144*/ MOV         R0, R5 
    /*0003a148*/ BL          0x000000000003A148          @ VI_HAL_GetIspFcnt [R_ARM_CALL: .text+0x36e98] 
    /*0003a14c*/ CMP         R0, R7 
    /*0003a150*/ BCC         VI_DRV_SetFPNCalibrateAttr_x3a0bc
    VI_DRV_SetFPNCalibrateAttr_x3a154:
    /*0003a154*/ MOV         R0, #0 
    VI_DRV_SetFPNCalibrateAttr_x3a158:
    /*0003a158*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0003a15c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0003a160*/ MOV         R0, R6 
    /*0003a164*/ BL          0x000000000003A164          @ VI_HAL_GetViprocTimeoutFlag [R_ARM_CALL: .text+0x37078] 
    /*0003a168*/ CMP         R0, #0 
    /*0003a16c*/ BNE         VI_DRV_SetFPNCalibrateAttr_x3a320
    /*0003a170*/ MOV         R0, R5 
    /*0003a174*/ LDR         SL, [R8, #4] 
    /*0003a178*/ BL          0x000000000003A178          @ VI_HAL_GetIspFcnt [R_ARM_CALL: .text+0x36e98] 
    /*0003a17c*/ ADD         SL, SL, #1 
    /*0003a180*/ ADD         SL, SL, R9 
    /*0003a184*/ CMP         SL, R0 
    /*0003a188*/ BNE         VI_DRV_SetFPNCalibrateAttr_x3a0ac
    /*0003a18c*/ LDR         R4, [FP, #1736]             @ 0x6c8 
    /*0003a190*/ CMP         R4, #0 
    /*0003a194*/ BEQ         VI_DRV_SetFPNCalibrateAttr_x3a2e0
    VI_DRV_SetFPNCalibrateAttr_x3a198:
    /*0003a198*/ MOV         R1, #0 
    /*0003a19c*/ MOV         R0, R6 
    /*0003a1a0*/ BL          0x000000000003A1A0          @ VI_HAL_SetFpnDataSource [R_ARM_CALL: .text+0x36c10] 
    /*0003a1a4*/ MOV         R2, #0 
    /*0003a1a8*/ MOV         R1, #1 
    /*0003a1ac*/ MOV         R0, R6 
    /*0003a1b0*/ BL          0x000000000003A1B0          @ VI_HAL_SetFpnEn [R_ARM_CALL: .text+0x36e5c] 
    /*0003a1b4*/ MOV         R0, R6 
    /*0003a1b8*/ BL          0x000000000003A1B8          @ VI_HAL_ProcRegNew [R_ARM_CALL: .text+0x353d8] 
    /*0003a1bc*/ MOV         R4, #4 
    /*0003a1c0*/ B           VI_DRV_SetFPNCalibrateAttr_x3a0ac
    /*0003a1c4*/ MOV         R0, R6 
    /*0003a1c8*/ BL          0x000000000003A1C8          @ VI_HAL_GetViprocTimeoutFlag [R_ARM_CALL: .text+0x37078] 
    /*0003a1cc*/ CMP         R0, #0 
    /*0003a1d0*/ BNE         VI_DRV_SetFPNCalibrateAttr_x3a354
    /*0003a1d4*/ MOV         R0, R5 
    /*0003a1d8*/ LDR         SL, [R8, #4] 
    /*0003a1dc*/ BL          0x000000000003A1DC          @ VI_HAL_GetIspFcnt [R_ARM_CALL: .text+0x36e98] 
    /*0003a1e0*/ ADD         SL, R9, SL 
    /*0003a1e4*/ CMP         SL, R0 
    /*0003a1e8*/ BNE         VI_DRV_SetFPNCalibrateAttr_x3a0ac
    /*0003a1ec*/ ADD         R1, SP, #72                 @ 0x48 
    /*0003a1f0*/ MOV         R3, #16 
    /*0003a1f4*/ LDR         R0, [R8, #52]               @ 0x34 
    /*0003a1f8*/ MOV         R4, #3 
    /*0003a1fc*/ STR         R3, [R1, #-52]!             @ 0xffffffcc 
    /*0003a200*/ BL          0x000000000003A200          @ VI_HAL_GetBitWidthByPixFmt [R_ARM_CALL: .text+0x37010] 
    /*0003a204*/ ADD         R3, R8, #40                 @ 0x28 
    /*0003a208*/ LDR         R2, [SP, #20] 
    /*0003a20c*/ ADD         R1, SP, #32 
    /*0003a210*/ MOV         R0, R6 
    /*0003a214*/ BL          0x000000000003A214          @ VI_DRV_ModifyFPNFrameInfoWithBit [R_ARM_CALL: .text+0x39d64] 
    /*0003a218*/ B           VI_DRV_SetFPNCalibrateAttr_x3a0ac
    /*0003a21c*/ MOV         R1, #1 
    /*0003a220*/ MOV         R0, R5 
    /*0003a224*/ BL          0x000000000003A224          @ VI_HAL_SetFpnCalibStart [R_ARM_CALL: .text+0x36fb0] 
    /*0003a228*/ MOV         R0, R6 
    /*0003a22c*/ BL          0x000000000003A22C          @ VI_HAL_ProcRegNew [R_ARM_CALL: .text+0x353d8] 
    /*0003a230*/ MOV         R4, #1 
    /*0003a234*/ B           VI_DRV_SetFPNCalibrateAttr_x3a0ac
    /*0003a238*/ MOV         R0, R6 
    /*0003a23c*/ BL          0x000000000003A23C          @ VI_HAL_GetViprocTimeoutFlag [R_ARM_CALL: .text+0x37078] 
    /*0003a240*/ CMP         R0, #0 
    /*0003a244*/ BNE         VI_DRV_SetFPNCalibrateAttr_x3a34c
    /*0003a248*/ MOV         R0, R5 
    /*0003a24c*/ BL          0x000000000003A24C          @ VI_HAL_GetIspFcnt [R_ARM_CALL: .text+0x36e98] 
    /*0003a250*/ ADD         R3, R9, #1 
    /*0003a254*/ CMP         R3, R0 
    /*0003a258*/ BNE         VI_DRV_SetFPNCalibrateAttr_x3a0ac
    /*0003a25c*/ LDR         R1, [FP, #1736]             @ 0x6c8 
    /*0003a260*/ CMP         R1, #0 
    /*0003a264*/ BEQ         VI_DRV_SetFPNCalibrateAttr_x3a2b0
    VI_DRV_SetFPNCalibrateAttr_x3a268:
    /*0003a268*/ MOV         R0, R6 
    /*0003a26c*/ MOV         R4, #2 
    /*0003a270*/ BL          0x000000000003A270          @ VI_HAL_ProcRegNew [R_ARM_CALL: .text+0x353d8] 
    /*0003a274*/ B           VI_DRV_SetFPNCalibrateAttr_x3a0ac
    VI_DRV_SetFPNCalibrateAttr_x3a278:
    /*0003a278*/ LDR         R3, [FP, #1728]             @ 0x6c0 
    /*0003a27c*/ CMP         R3, #1 
    /*0003a280*/ BNE         VI_DRV_SetFPNCalibrateAttr_x39f74
    /*0003a284*/ MOVW        R3, #499                    @ 0x1f3 
    /*0003a288*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x124a4] 
    /*0003a28c*/ STR         R3, [SP] 
    /*0003a290*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x124a4] 
    /*0003a294*/ LDR         R3, [PC, #200]              @ 0x000000000003a364 
    /*0003a298*/ MOV         R1, #16 
    /*0003a29c*/ MOV         R0, #3 
    /*0003a2a0*/ BL          0x000000000003A2A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003a2a4*/ MOVW        R0, #32777                  @ 0x8009 
    /*0003a2a8*/ MOVT        R0, #40976                  @ 0xa010 
    /*0003a2ac*/ B           VI_DRV_SetFPNCalibrateAttr_x3a158
    VI_DRV_SetFPNCalibrateAttr_x3a2b0:
    /*0003a2b0*/ MOV         R0, R5 
    /*0003a2b4*/ BL          0x000000000003A2B4          @ VI_HAL_SetFpnCalibStart [R_ARM_CALL: .text+0x36fb0] 
    /*0003a2b8*/ MOV         R0, R6 
    /*0003a2bc*/ MOV         R1, #1 
    /*0003a2c0*/ BL          0x000000000003A2C0          @ VI_HAL_SetFpnInEnable [R_ARM_CALL: .text+0x36d7c] 
    /*0003a2c4*/ MOV         R0, R6 
    /*0003a2c8*/ MOV         R1, #1 
    /*0003a2cc*/ BL          0x000000000003A2CC          @ VI_HAL_SetFpnOutEnable [R_ARM_CALL: .text+0x36c50] 
    /*0003a2d0*/ MOV         R1, #1 
    /*0003a2d4*/ MOV         R0, R6 
    /*0003a2d8*/ BL          0x000000000003A2D8          @ VI_HAL_SetFpnDataSource [R_ARM_CALL: .text+0x36c10] 
    /*0003a2dc*/ B           VI_DRV_SetFPNCalibrateAttr_x3a268
    VI_DRV_SetFPNCalibrateAttr_x3a2e0:
    /*0003a2e0*/ MOV         R1, R4 
    /*0003a2e4*/ MOV         R0, R6 
    /*0003a2e8*/ BL          0x000000000003A2E8          @ VI_HAL_SetFpnInEnable [R_ARM_CALL: .text+0x36d7c] 
    /*0003a2ec*/ MOV         R1, R4 
    /*0003a2f0*/ MOV         R0, R6 
    /*0003a2f4*/ BL          0x000000000003A2F4          @ VI_HAL_SetFpnOutEnable [R_ARM_CALL: .text+0x36c50] 
    /*0003a2f8*/ B           VI_DRV_SetFPNCalibrateAttr_x3a198
    VI_DRV_SetFPNCalibrateAttr_x3a2fc:
    /*0003a2fc*/ LDR         R2, [SP, #28] 
    /*0003a300*/ LDR         R3, [R8, #84]               @ 0x54 
    /*0003a304*/ LDR         IP, [SP, #24] 
    /*0003a308*/ MUL         R3, R2, R3 
    /*0003a30c*/ MUL         R2, IP, R2 
    /*0003a310*/ STR         R3, [R8, #32] 
    /*0003a314*/ BL          0x000000000003A314          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    /*0003a318*/ STR         R0, [R8, #20] 
    /*0003a31c*/ B           VI_DRV_SetFPNCalibrateAttr_x3a11c
    VI_DRV_SetFPNCalibrateAttr_x3a320:
    /*0003a320*/ MOVW        R3, #589                    @ 0x24d 
    VI_DRV_SetFPNCalibrateAttr_x3a324:
    /*0003a324*/ STR         R3, [SP] 
    /*0003a328*/ MOV         R1, #16 
    /*0003a32c*/ LDR         R3, [PC, #48]               @ 0x000000000003a364 
    /*0003a330*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x124fc] 
    /*0003a334*/ MOV         R0, #3 
    /*0003a338*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x124fc] 
    /*0003a33c*/ BL          0x000000000003A33C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0003a340*/ MOV         R0, #0 
    /*0003a344*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0003a348*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VI_DRV_SetFPNCalibrateAttr_x3a34c:
    /*0003a34c*/ MOVW        R3, #546                    @ 0x222 
    /*0003a350*/ B           VI_DRV_SetFPNCalibrateAttr_x3a324
    VI_DRV_SetFPNCalibrateAttr_x3a354:
    /*0003a354*/ MOVW        R3, #569                    @ 0x239 
    /*0003a358*/ B           VI_DRV_SetFPNCalibrateAttr_x3a324
    VI_DRV_SetFPNCalibrateAttr_x3a35c:
    /*0003a35c*/ MOV         R3, #612                    @ 0x264 
    /*0003a360*/ B           VI_DRV_SetFPNCalibrateAttr_x3a324
    /*0003a364*/ ANDEQ       R2, R0, IP, LSR #7 
FUNC_END VI_DRV_SetFPNCalibrateAttr


FUNC_BEGIN VI_DRV_GetFpnFrameAddr
    /*0003a368*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*0003a36c*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*0003a370*/ PUSH        {R4, R5, LR} 
    /*0003a374*/ SUB         SP, SP, #12 
    /*0003a378*/ LDR         R4, [R3, R0, LSL #2] 
    /*0003a37c*/ ADD         R4, R4, #86016              @ 0x15000 
    /*0003a380*/ LDR         R3, [R4, #1712]             @ 0x6b0 
    /*0003a384*/ CMP         R3, #0 
    /*0003a388*/ BEQ         VI_DRV_GetFpnFrameAddr_x3a3c4
    /*0003a38c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x13bc4] 
    /*0003a390*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x13bc4] 
    /*0003a394*/ ADD         R5, R3, R0, LSL #2 
    /*0003a398*/ ADD         R1, SP, #4 
    /*0003a39c*/ MOV         R0, R5 
    /*0003a3a0*/ BL          0x000000000003A3A0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0003a3a4*/ MOV         R0, R5 
    /*0003a3a8*/ LDR         R5, [R4, #1712]             @ 0x6b0 
    /*0003a3ac*/ MOV         R3, #0 
    /*0003a3b0*/ ADD         R1, SP, #4 
    /*0003a3b4*/ STR         R3, [R4, #1712]             @ 0x6b0 
    /*0003a3b8*/ BL          0x000000000003A3B8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0003a3bc*/ MOV         R0, R5 
    /*0003a3c0*/ BL          0x000000000003A3C0          @ CMPI_Unmap [R_ARM_CALL: +0x0] 
    VI_DRV_GetFpnFrameAddr_x3a3c4:
    /*0003a3c4*/ MOV         R0, #0 
    /*0003a3c8*/ ADD         SP, SP, #12 
    /*0003a3cc*/ POP         {R4, R5, PC} 
FUNC_END VI_DRV_GetFpnFrameAddr


FUNC_BEGIN VI_DRV_RelaseFpnFrameAddr
    /*0003a3d0*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*0003a3d4*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*0003a3d8*/ PUSH        {R4, R5, LR} 
    /*0003a3dc*/ SUB         SP, SP, #12 
    /*0003a3e0*/ LDR         R4, [R3, R0, LSL #2] 
    /*0003a3e4*/ ADD         R4, R4, #86016              @ 0x15000 
    /*0003a3e8*/ LDR         R3, [R4, #1712]             @ 0x6b0 
    /*0003a3ec*/ CMP         R3, #0 
    /*0003a3f0*/ BEQ         VI_DRV_RelaseFpnFrameAddr_x3a42c
    /*0003a3f4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x13bc4] 
    /*0003a3f8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x13bc4] 
    /*0003a3fc*/ ADD         R5, R3, R0, LSL #2 
    /*0003a400*/ ADD         R1, SP, #4 
    /*0003a404*/ MOV         R0, R5 
    /*0003a408*/ BL          0x000000000003A408          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0003a40c*/ MOV         R0, R5 
    /*0003a410*/ LDR         R5, [R4, #1712]             @ 0x6b0 
    /*0003a414*/ MOV         R3, #0 
    /*0003a418*/ ADD         R1, SP, #4 
    /*0003a41c*/ STR         R3, [R4, #1712]             @ 0x6b0 
    /*0003a420*/ BL          0x000000000003A420          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0003a424*/ MOV         R0, R5 
    /*0003a428*/ BL          0x000000000003A428          @ CMPI_Unmap [R_ARM_CALL: +0x0] 
    VI_DRV_RelaseFpnFrameAddr_x3a42c:
    /*0003a42c*/ ADD         SP, SP, #12 
    /*0003a430*/ POP         {R4, R5, PC} 
FUNC_END VI_DRV_RelaseFpnFrameAddr


FUNC_BEGIN VI_DRV_SetFPNCorrectionAttr
    /*0003a434*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*0003a438*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*0003a43c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0003a440*/ SUB         SP, SP, #12 
    /*0003a444*/ MOV         R4, R0 
    /*0003a448*/ MOV         R7, R1 
    /*0003a44c*/ LDR         R6, [R3, R0, LSL #2] 
    /*0003a450*/ BL          0x000000000003A450          @ VI_DRV_GetFpnFrameAddr [R_ARM_CALL: .text+0x3a368] 
    /*0003a454*/ SUBS        R5, R0, #0 
    /*0003a458*/ BNE         VI_DRV_SetFPNCorrectionAttr_x3a4a0
    /*0003a45c*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x13bc4] 
    /*0003a460*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x13bc4] 
    /*0003a464*/ ADD         R4, R0, R4, LSL #2 
    /*0003a468*/ ADD         R1, SP, #4 
    /*0003a46c*/ MOV         R0, R4 
    /*0003a470*/ BL          0x000000000003A470          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0003a474*/ ADD         R3, R6, #86016              @ 0x15000 
    /*0003a478*/ ADD         R0, R6, #87040              @ 0x15400 
    /*0003a47c*/ MOV         R1, R7 
    /*0003a480*/ MOV         R2, #1 
    /*0003a484*/ ADD         R0, R0, #704                @ 0x2c0 
    /*0003a488*/ STR         R2, [R3, #1720]             @ 0x6b8 
    /*0003a48c*/ MOV         R2, #384                    @ 0x180 
    /*0003a490*/ BL          0x000000000003A490          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0003a494*/ ADD         R1, SP, #4 
    /*0003a498*/ MOV         R0, R4 
    /*0003a49c*/ BL          0x000000000003A49C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VI_DRV_SetFPNCorrectionAttr_x3a4a0:
    /*0003a4a0*/ MOV         R0, R5 
    /*0003a4a4*/ ADD         SP, SP, #12 
    /*0003a4a8*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VI_DRV_SetFPNCorrectionAttr


FUNC_BEGIN VI_DRV_GetFPNAttr
    /*0003a4ac*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*0003a4b0*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*0003a4b4*/ PUSH        {R4, LR} 
    /*0003a4b8*/ MOV         R2, #392                    @ 0x188 
    /*0003a4bc*/ LDR         R3, [R3, R0, LSL #2] 
    /*0003a4c0*/ MOV         R0, R1 
    /*0003a4c4*/ ADD         R1, R3, #87040              @ 0x15400 
    /*0003a4c8*/ ADD         R1, R1, #696                @ 0x2b8 
    /*0003a4cc*/ BL          0x000000000003A4CC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0003a4d0*/ MOV         R0, #0 
    /*0003a4d4*/ POP         {R4, PC} 
FUNC_END VI_DRV_GetFPNAttr


FUNC_BEGIN VI_DRV_UpdateFpnCorrection
    /*0003a4d8*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*0003a4dc*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*0003a4e0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0003a4e4*/ SUB         SP, SP, #68                 @ 0x44 
    /*0003a4e8*/ LDR         R4, [R3, R0, LSL #2] 
    /*0003a4ec*/ MOV         R5, R0 
    /*0003a4f0*/ MOV         R3, #16 
    /*0003a4f4*/ MOV         R6, R1 
    /*0003a4f8*/ ADD         R4, R4, #86016              @ 0x15000 
    /*0003a4fc*/ STR         R3, [SP, #12] 
    /*0003a500*/ MOV         R7, R2 
    /*0003a504*/ BL          0x000000000003A504          @ VI_DRV_GetPipeBindDevId [R_ARM_CALL: .text+0x317b8] 
    /*0003a508*/ LDR         R3, [R4, #1720]             @ 0x6b8 
    /*0003a50c*/ CMP         R3, #1 
    /*0003a510*/ BEQ         VI_DRV_UpdateFpnCorrection_x3a520
    /*0003a514*/ MOV         R0, #0 
    /*0003a518*/ ADD         SP, SP, #68                 @ 0x44 
    /*0003a51c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_UpdateFpnCorrection_x3a520:
    /*0003a520*/ LDR         R9, [R4, #1728]             @ 0x6c0 
    /*0003a524*/ CMP         R9, #0 
    /*0003a528*/ BEQ         VI_DRV_UpdateFpnCorrection_x3a654
    /*0003a52c*/ MOV         R8, R0 
    /*0003a530*/ MOV         R0, R5 
    /*0003a534*/ BL          0x000000000003A534          @ VI_DRV_GetIspBeReg [R_ARM_CALL: .text+0x27368] 
    /*0003a538*/ MOV         R5, R0 
    /*0003a53c*/ MOV         R0, R8 
    /*0003a540*/ BL          0x000000000003A540          @ VI_DRV_GetSensorBitWidth [R_ARM_CALL: .text+0x26084] 
    /*0003a544*/ LDR         R2, [R4, #1768]             @ 0x6e8 
    /*0003a548*/ LDR         R3, [R4, #1772]             @ 0x6ec 
    /*0003a54c*/ ADD         R1, SP, #12 
    /*0003a550*/ STR         R2, [SP, #16] 
    /*0003a554*/ STR         R3, [SP, #20] 
    /*0003a558*/ MOV         R8, R0 
    /*0003a55c*/ LDR         R0, [R4, #1780]             @ 0x6f4 
    /*0003a560*/ BL          0x000000000003A560          @ VI_HAL_GetBitWidthByPixFmt [R_ARM_CALL: .text+0x37010] 
    /*0003a564*/ LDR         R3, [R4, #1840]             @ 0x730 
    /*0003a568*/ LDR         R2, [R4, #1896]             @ 0x768 
    /*0003a56c*/ CMP         R7, #0 
    /*0003a570*/ LDR         IP, [R4, #1848]             @ 0x738 
    /*0003a574*/ STR         R3, [SP, #52]               @ 0x34 
    /*0003a578*/ LDR         R3, [R4, #1816]             @ 0x718 
    /*0003a57c*/ LDR         R1, [R4, #1812]             @ 0x714 
    /*0003a580*/ LDR         R0, [R4, #1888]             @ 0x760 
    /*0003a584*/ STR         R2, [SP, #28] 
    /*0003a588*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0003a58c*/ LDRNE       R2, [R7, #140]              @ 0x8c 
    /*0003a590*/ LDRNE       R3, [R7, #144]              @ 0x90 
    /*0003a594*/ STR         IP, [SP, #56]               @ 0x38 
    /*0003a598*/ LDR         IP, [R4, #1780]             @ 0x6f4 
    /*0003a59c*/ STR         R0, [SP, #24] 
    /*0003a5a0*/ MOV         R0, R5 
    /*0003a5a4*/ STRNE       R2, [SP, #16] 
    /*0003a5a8*/ MOV         R2, #0 
    /*0003a5ac*/ STRNE       R3, [SP, #24] 
    /*0003a5b0*/ MOV         R3, R8 
    /*0003a5b4*/ STR         R1, [SP, #36]               @ 0x24 
    /*0003a5b8*/ LDR         R1, [R4, #1736]             @ 0x6c8 
    /*0003a5bc*/ STR         IP, [SP] 
    /*0003a5c0*/ BL          0x000000000003A5C0          @ VI_HAL_SetFpnDarkFrameBitWidth [R_ARM_CALL: .text+0x36ea0] 
    /*0003a5c4*/ LDR         R3, [R4, #1736]             @ 0x6c8 
    /*0003a5c8*/ CMP         R3, #0 
    /*0003a5cc*/ BEQ         VI_DRV_UpdateFpnCorrection_x3a628
    VI_DRV_UpdateFpnCorrection_x3a5d0:
    /*0003a5d0*/ MOV         R0, R5 
    /*0003a5d4*/ MOV         R1, #1 
    /*0003a5d8*/ BL          0x000000000003A5D8          @ VI_HAL_SetFpnCorrectEn [R_ARM_CALL: .text+0x36e34] 
    /*0003a5dc*/ MOV         R0, R6 
    /*0003a5e0*/ MOV         R1, #1 
    /*0003a5e4*/ BL          0x000000000003A5E4          @ VI_HAL_SetFpnCorrectDataSource [R_ARM_CALL: .text+0x36c30] 
    /*0003a5e8*/ MOV         R0, R6 
    /*0003a5ec*/ MOV         R2, #1 
    /*0003a5f0*/ MOV         R1, #0 
    /*0003a5f4*/ BL          0x000000000003A5F4          @ VI_HAL_SetFpnEn [R_ARM_CALL: .text+0x36e5c] 
    /*0003a5f8*/ LDR         R3, [R4, #1748]             @ 0x6d4 
    /*0003a5fc*/ MOV         R0, R5 
    /*0003a600*/ MOV         R1, #0 
    /*0003a604*/ STR         R3, [R4, #1752]             @ 0x6d8 
    /*0003a608*/ MOV         R2, R3 
    /*0003a60c*/ STR         R3, [R4, #1756]             @ 0x6dc 
    /*0003a610*/ BL          0x000000000003A610          @ VI_HAL_SetFpnSrcCORR [R_ARM_CALL: .text+0x37060] 
    /*0003a614*/ MOV         R0, R6 
    /*0003a618*/ BL          0x000000000003A618          @ VI_HAL_ProcRegNew [R_ARM_CALL: .text+0x353d8] 
    /*0003a61c*/ MOV         R0, #0 
    /*0003a620*/ ADD         SP, SP, #68                 @ 0x44 
    /*0003a624*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VI_DRV_UpdateFpnCorrection_x3a628:
    /*0003a628*/ ADD         R2, SP, #16 
    /*0003a62c*/ LDR         R1, [SP, #12] 
    /*0003a630*/ MOV         R0, R6 
    /*0003a634*/ BL          0x000000000003A634          @ VI_HAL_SetFpnInYCSize [R_ARM_CALL: .text+0x36d8c] 
    /*0003a638*/ ADD         R1, SP, #24 
    /*0003a63c*/ MOV         R0, R6 
    /*0003a640*/ BL          0x000000000003A640          @ VI_HAL_SetFpnInMemInfo [R_ARM_CALL: .text+0x36e18] 
    /*0003a644*/ MOV         R1, #1 
    /*0003a648*/ MOV         R0, R6 
    /*0003a64c*/ BL          0x000000000003A64C          @ VI_HAL_SetFpnInEnable [R_ARM_CALL: .text+0x36d7c] 
    /*0003a650*/ B           VI_DRV_UpdateFpnCorrection_x3a5d0
    VI_DRV_UpdateFpnCorrection_x3a654:
    /*0003a654*/ MOV         R1, R9 
    /*0003a658*/ MOV         R0, R6 
    /*0003a65c*/ BL          0x000000000003A65C          @ VI_HAL_SetFpnInEnable [R_ARM_CALL: .text+0x36d7c] 
    /*0003a660*/ MOV         R0, R6 
    /*0003a664*/ MOV         R2, R9 
    /*0003a668*/ MOV         R1, R9 
    /*0003a66c*/ BL          0x000000000003A66C          @ VI_HAL_SetFpnEn [R_ARM_CALL: .text+0x36e5c] 
    /*0003a670*/ MOV         R0, #0 
    /*0003a674*/ ADD         SP, SP, #68                 @ 0x44 
    /*0003a678*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
FUNC_END VI_DRV_UpdateFpnCorrection


FUNC_BEGIN VI_DRV_AfterUpdateFpn
    /*0003a67c*/ MOV         R0, #0 
    /*0003a680*/ BX          LR 
FUNC_END VI_DRV_AfterUpdateFpn


FUNC_BEGIN VI_DRV_FpnSpinLockInit
    /*0003a684*/ PUSH        {R4, LR} 
    /*0003a688*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x13bc4] 
    /*0003a68c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x13bc4] 
    /*0003a690*/ MOV         R0, R4 
    /*0003a694*/ BL          0x000000000003A694          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*0003a698*/ ADD         R0, R4, #4 
    /*0003a69c*/ BL          0x000000000003A69C          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*0003a6a0*/ ADD         R0, R4, #8 
    /*0003a6a4*/ BL          0x000000000003A6A4          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*0003a6a8*/ ADD         R0, R4, #12 
    /*0003a6ac*/ BL          0x000000000003A6AC          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*0003a6b0*/ MOV         R0, #0 
    /*0003a6b4*/ POP         {R4, PC} 
FUNC_END VI_DRV_FpnSpinLockInit


FUNC_BEGIN VI_DRV_DestroyFpnSpinLock
    /*0003a6b8*/ PUSH        {R4, LR} 
    /*0003a6bc*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x13bc4] 
    /*0003a6c0*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x13bc4] 
    /*0003a6c4*/ MOV         R0, R4 
    /*0003a6c8*/ BL          0x000000000003A6C8          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*0003a6cc*/ ADD         R0, R4, #4 
    /*0003a6d0*/ BL          0x000000000003A6D0          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*0003a6d4*/ ADD         R0, R4, #8 
    /*0003a6d8*/ BL          0x000000000003A6D8          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*0003a6dc*/ ADD         R0, R4, #12 
    /*0003a6e0*/ POP         {R4, LR} 
    VI_DRV_DestroyFpnSpinLock_x3a6e4:
    /*0003a6e4*/ B           VI_DRV_DestroyFpnSpinLock_x3a6e4@ osal_spin_lock_destory [R_ARM_JUMP24: +0x0] 
FUNC_END VI_DRV_DestroyFpnSpinLock


FUNC_BEGIN SetPE0Vi
    /*0003a6e8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0003a6ec*/ SUB         SP, SP, #196                @ 0xc4 
    /*0003a6f0*/ MOV         R4, R0 
    /*0003a6f4*/ MOV         R5, R1 
    /*0003a6f8*/ MOV         R6, R2 
    /*0003a6fc*/ MOV         R1, #0 
    /*0003a700*/ MOV         R2, #192                    @ 0xc0 
    /*0003a704*/ MOV         R0, SP 
    /*0003a708*/ BL          0x000000000003A708          @ memset [R_ARM_CALL: +0x0] 
    /*0003a70c*/ CMP         R5, #0 
    /*0003a710*/ CMPNE       R6, #0 
    /*0003a714*/ MOVNE       R3, #1 
    /*0003a718*/ MOVEQ       R3, #0 
    /*0003a71c*/ CMP         R4, #0 
    /*0003a720*/ MOVEQ       R3, #0 
    /*0003a724*/ ANDNE       R3, R3, #1 
    /*0003a728*/ CMP         R3, #0 
    /*0003a72c*/ BEQ         SetPE0Vi_x3ac38
    /*0003a730*/ LDRB        R3, [R5] 
    /*0003a734*/ TST         R3, #248                    @ 0xf8 
    /*0003a738*/ BNE         SetPE0Vi_x3a744
    SetPE0Vi_x3a73c:
    /*0003a73c*/ ADD         SP, SP, #196                @ 0xc4 
    /*0003a740*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    SetPE0Vi_x3a744:
    /*0003a744*/ LDRB        R3, [R5, #23] 
    /*0003a748*/ LDR         R2, [R4] 
    /*0003a74c*/ UBFX        R3, R3, #4, #1 
    /*0003a750*/ BFI         R2, R3, #22, #1 
    /*0003a754*/ STR         R2, [R4] 
    /*0003a758*/ LDRB        IP, [R5, #23] 
    /*0003a75c*/ ANDS        IP, IP, #16 
    /*0003a760*/ MOVEQ       R0, IP 
    /*0003a764*/ BNE         SetPE0Vi_x3ac60
    SetPE0Vi_x3a768:
    /*0003a768*/ LDRH        R3, [R5, #18] 
    /*0003a76c*/ MOVW        R2, #511                    @ 0x1ff 
    /*0003a770*/ UBFX        R3, R3, #0, #9 
    /*0003a774*/ CMP         R3, R2 
    /*0003a778*/ LDRBEQ      R3, [R6] 
    /*0003a77c*/ BEQ         SetPE0Vi_x3ac88
    /*0003a780*/ LDRB        R2, [R5, #19] 
    /*0003a784*/ MOV         R1, #1 
    /*0003a788*/ LDRB        R3, [R6] 
    /*0003a78c*/ LSR         R2, R2, #5 
    /*0003a790*/ ORR         R3, R3, R1, LSL R2 
    /*0003a794*/ UXTB        R3, R3 
    /*0003a798*/ STRB        R3, [R6] 
    /*0003a79c*/ LDRH        R2, [R5, #18] 
    /*0003a7a0*/ UBFX        R2, R2, #0, #9 
    /*0003a7a4*/ CMP         R2, #0 
    /*0003a7a8*/ BNE         SetPE0Vi_x3ac88
    SetPE0Vi_x3a7ac:
    /*0003a7ac*/ CMP         R0, #0 
    /*0003a7b0*/ BEQ         SetPE0Vi_x3a7e0
    /*0003a7b4*/ LDRB        R3, [R6] 
    SetPE0Vi_x3a7b8:
    /*0003a7b8*/ LDRH        R2, [R5, #22] 
    /*0003a7bc*/ MOVW        R1, #511                    @ 0x1ff 
    /*0003a7c0*/ UBFX        R2, R2, #0, #9 
    /*0003a7c4*/ CMP         R2, R1 
    /*0003a7c8*/ BEQ         SetPE0Vi_x3a7f4
    /*0003a7cc*/ LDRB        R1, [R5, #21] 
    /*0003a7d0*/ MOV         R2, #1 
    /*0003a7d4*/ UBFX        R1, R1, #1, #3 
    /*0003a7d8*/ ORR         R3, R3, R2, LSL R1 
    /*0003a7dc*/ STRB        R3, [R6] 
    SetPE0Vi_x3a7e0:
    /*0003a7e0*/ LDRH        R3, [R5, #22] 
    /*0003a7e4*/ UBFX        R3, R3, #0, #9 
    /*0003a7e8*/ CMP         R3, #0 
    /*0003a7ec*/ BEQ         SetPE0Vi_x3a810
    /*0003a7f0*/ LDRB        R3, [R6] 
    SetPE0Vi_x3a7f4:
    /*0003a7f4*/ LDRB        R2, [R5, #23] 
    /*0003a7f8*/ MOV         R1, #1 
    /*0003a7fc*/ UBFX        R2, R2, #1, #3 
    /*0003a800*/ ORR         R3, R3, R1, LSL R2 
    /*0003a804*/ STRB        R3, [R6] 
    /*0003a808*/ LDRH        R3, [R5, #22] 
    /*0003a80c*/ UBFX        R3, R3, #0, #9 
    SetPE0Vi_x3a810:
    /*0003a810*/ LDRH        R2, [R5, #18] 
    /*0003a814*/ ADD         R6, R3, R3, LSL #1 
    /*0003a818*/ LDRB        R8, [R5, #19] 
    /*0003a81c*/ MOVW        R7, #511                    @ 0x1ff 
    /*0003a820*/ UBFX        R2, R2, #0, #9 
    /*0003a824*/ LDR         R9, [R4, #88]               @ 0x58 
    /*0003a828*/ ASR         R6, R6, #1 
    /*0003a82c*/ SUB         R1, SP, #4 
    /*0003a830*/ SXTH        LR, R2 
    /*0003a834*/ LSR         R8, R8, #5 
    /*0003a838*/ BFI         R9, R8, #0, #4 
    /*0003a83c*/ STR         R9, [R4, #88]               @ 0x58 
    /*0003a840*/ ADD         LR, LR, LR, LSL #1 
    /*0003a844*/ LDRB        R8, [R5, #19] 
    /*0003a848*/ LDR         R9, [R4, #88]               @ 0x58 
    /*0003a84c*/ UXTH        R2, R2 
    /*0003a850*/ ASR         LR, LR, #1 
    /*0003a854*/ UBFX        R8, R8, #1, #3 
    /*0003a858*/ CMP         LR, R7 
    /*0003a85c*/ BFI         R9, R8, #4, #4 
    /*0003a860*/ STR         R9, [R4, #88]               @ 0x58 
    /*0003a864*/ MOVGE       LR, R7 
    /*0003a868*/ CMP         R6, R7 
    /*0003a86c*/ LDRB        R8, [R5, #21] 
    /*0003a870*/ MOVGE       R6, R7 
    /*0003a874*/ CMP         R2, LR 
    /*0003a878*/ LDR         R9, [R4, #88]               @ 0x58 
    /*0003a87c*/ UBFX        R7, R8, #1, #3 
    /*0003a880*/ MOVGE       R2, LR 
    /*0003a884*/ SUB         R8, LR, R2 
    /*0003a888*/ BFI         R9, R7, #8, #4 
    /*0003a88c*/ ADD         R2, R8, R2, LSL #4 
    /*0003a890*/ STR         R9, [R4, #88]               @ 0x58 
    /*0003a894*/ ADD         R2, R2, #8 
    /*0003a898*/ LDRB        LR, [R5, #23] 
    /*0003a89c*/ ADD         R7, SP, #60                 @ 0x3c 
    /*0003a8a0*/ LDR         R9, [R4, #88]               @ 0x58 
    /*0003a8a4*/ UBFX        LR, LR, #1, #3 
    /*0003a8a8*/ BFI         R9, LR, #12, #4 
    /*0003a8ac*/ STR         R9, [R4, #88]               @ 0x58 
    SetPE0Vi_x3a8b0:
    /*0003a8b0*/ ASR         LR, R2, #4 
    /*0003a8b4*/ STR         LR, [R1, #4]! 
    /*0003a8b8*/ CMP         R7, R1 
    /*0003a8bc*/ ADD         R2, R2, R8 
    /*0003a8c0*/ BNE         SetPE0Vi_x3a8b0
    /*0003a8c4*/ CMP         R6, R3 
    /*0003a8c8*/ ADD         LR, SP, #128                @ 0x80 
    /*0003a8cc*/ ADD         R7, SP, #192                @ 0xc0 
    /*0003a8d0*/ MOVLT       R3, R6 
    /*0003a8d4*/ SUB         R6, R6, R3 
    /*0003a8d8*/ ADD         R3, R6, R3, LSL #4 
    /*0003a8dc*/ MOV         R2, LR 
    /*0003a8e0*/ ADD         R3, R3, #8 
    SetPE0Vi_x3a8e4:
    /*0003a8e4*/ ASR         R1, R3, #4 
    /*0003a8e8*/ STR         R1, [R2], #4 
    /*0003a8ec*/ CMP         R7, R2 
    /*0003a8f0*/ ADD         R3, R3, R6 
    /*0003a8f4*/ BNE         SetPE0Vi_x3a8e4
    /*0003a8f8*/ LDR         R3, [R4, #88]               @ 0x58 
    /*0003a8fc*/ LDR         R2, [SP] 
    /*0003a900*/ LDR         R1, [SP, #128]              @ 0x80 
    /*0003a904*/ BFI         R3, R2, #16, #9 
    /*0003a908*/ STR         R3, [R4, #88]               @ 0x58 
    /*0003a90c*/ LDR         R3, [R4, #260]              @ 0x104 
    /*0003a910*/ LDR         R2, [SP, #4] 
    /*0003a914*/ BFI         R3, R1, #9, #9 
    /*0003a918*/ STR         R3, [R4, #260]              @ 0x104 
    /*0003a91c*/ LDR         R3, [R4, #92]               @ 0x5c 
    /*0003a920*/ LDR         R1, [SP, #132]              @ 0x84 
    /*0003a924*/ BFI         R3, R2, #0, #9 
    /*0003a928*/ STR         R3, [R4, #92]               @ 0x5c 
    /*0003a92c*/ LDR         R3, [R4, #260]              @ 0x104 
    /*0003a930*/ LDR         R2, [SP, #8] 
    /*0003a934*/ BFI         R3, R1, #18, #9 
    /*0003a938*/ STR         R3, [R4, #260]              @ 0x104 
    /*0003a93c*/ LDR         R3, [R4, #92]               @ 0x5c 
    /*0003a940*/ LDR         R1, [SP, #136]              @ 0x88 
    /*0003a944*/ BFI         R3, R2, #9, #9 
    /*0003a948*/ STR         R3, [R4, #92]               @ 0x5c 
    /*0003a94c*/ LDR         R3, [R4, #264]              @ 0x108 
    /*0003a950*/ LDR         R2, [SP, #12] 
    /*0003a954*/ BFI         R3, R1, #0, #9 
    /*0003a958*/ STR         R3, [R4, #264]              @ 0x108 
    /*0003a95c*/ LDR         R3, [R4, #92]               @ 0x5c 
    /*0003a960*/ LDR         R1, [SP, #140]              @ 0x8c 
    /*0003a964*/ BFI         R3, R2, #18, #9 
    /*0003a968*/ STR         R3, [R4, #92]               @ 0x5c 
    /*0003a96c*/ LDR         R3, [R4, #264]              @ 0x108 
    /*0003a970*/ LDR         R2, [SP, #16] 
    /*0003a974*/ BFI         R3, R1, #9, #9 
    /*0003a978*/ STR         R3, [R4, #264]              @ 0x108 
    /*0003a97c*/ LDR         R3, [R4, #96]               @ 0x60 
    /*0003a980*/ LDR         R1, [SP, #144]              @ 0x90 
    /*0003a984*/ BFI         R3, R2, #0, #9 
    /*0003a988*/ STR         R3, [R4, #96]               @ 0x60 
    /*0003a98c*/ LDR         R3, [R4, #264]              @ 0x108 
    /*0003a990*/ LDR         R2, [SP, #20] 
    /*0003a994*/ BFI         R3, R1, #18, #9 
    /*0003a998*/ STR         R3, [R4, #264]              @ 0x108 
    /*0003a99c*/ LDR         R3, [R4, #96]               @ 0x60 
    /*0003a9a0*/ BFI         R3, R2, #9, #9 
    /*0003a9a4*/ STR         R3, [R4, #96]               @ 0x60 
    /*0003a9a8*/ LDR         R3, [R4, #268]              @ 0x10c 
    /*0003a9ac*/ LDR         R2, [SP, #148]              @ 0x94 
    /*0003a9b0*/ LDR         R1, [SP, #24] 
    /*0003a9b4*/ BFI         R3, R2, #0, #9 
    /*0003a9b8*/ STR         R3, [R4, #268]              @ 0x10c 
    /*0003a9bc*/ LDR         R3, [R4, #96]               @ 0x60 
    /*0003a9c0*/ LDR         R2, [SP, #152]              @ 0x98 
    /*0003a9c4*/ BFI         R3, R1, #18, #9 
    /*0003a9c8*/ STR         R3, [R4, #96]               @ 0x60 
    /*0003a9cc*/ LDR         R3, [R4, #268]              @ 0x10c 
    /*0003a9d0*/ LDR         R1, [SP, #28] 
    /*0003a9d4*/ BFI         R3, R2, #9, #9 
    /*0003a9d8*/ STR         R3, [R4, #268]              @ 0x10c 
    /*0003a9dc*/ LDR         R3, [R4, #100]              @ 0x64 
    /*0003a9e0*/ LDR         R2, [SP, #156]              @ 0x9c 
    /*0003a9e4*/ BFI         R3, R1, #0, #9 
    /*0003a9e8*/ STR         R3, [R4, #100]              @ 0x64 
    /*0003a9ec*/ LDR         R3, [R4, #268]              @ 0x10c 
    /*0003a9f0*/ LDR         R1, [SP, #32] 
    /*0003a9f4*/ BFI         R3, R2, #18, #9 
    /*0003a9f8*/ STR         R3, [R4, #268]              @ 0x10c 
    /*0003a9fc*/ LDR         R3, [R4, #100]              @ 0x64 
    /*0003aa00*/ LDR         R2, [SP, #160]              @ 0xa0 
    /*0003aa04*/ BFI         R3, R1, #9, #9 
    /*0003aa08*/ STR         R3, [R4, #100]              @ 0x64 
    /*0003aa0c*/ LDR         R3, [R4, #272]              @ 0x110 
    /*0003aa10*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0003aa14*/ BFI         R3, R2, #0, #9 
    /*0003aa18*/ STR         R3, [R4, #272]              @ 0x110 
    /*0003aa1c*/ LDR         R3, [R4, #100]              @ 0x64 
    /*0003aa20*/ LDR         R2, [SP, #164]              @ 0xa4 
    /*0003aa24*/ BFI         R3, R1, #18, #9 
    /*0003aa28*/ STR         R3, [R4, #100]              @ 0x64 
    /*0003aa2c*/ LDR         R3, [R4, #272]              @ 0x110 
    /*0003aa30*/ LDR         R1, [SP, #40]               @ 0x28 
    /*0003aa34*/ BFI         R3, R2, #9, #9 
    /*0003aa38*/ STR         R3, [R4, #272]              @ 0x110 
    /*0003aa3c*/ LDR         R3, [R4, #104]              @ 0x68 
    /*0003aa40*/ LDR         R2, [SP, #168]              @ 0xa8 
    /*0003aa44*/ BFI         R3, R1, #0, #9 
    /*0003aa48*/ STR         R3, [R4, #104]              @ 0x68 
    /*0003aa4c*/ LDR         R3, [R4, #272]              @ 0x110 
    /*0003aa50*/ BFI         R3, R2, #18, #9 
    /*0003aa54*/ STR         R3, [R4, #272]              @ 0x110 
    /*0003aa58*/ LDR         R3, [R4, #104]              @ 0x68 
    /*0003aa5c*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0003aa60*/ LDR         R2, [SP, #172]              @ 0xac 
    /*0003aa64*/ BFI         R3, R1, #9, #9 
    /*0003aa68*/ STR         R3, [R4, #104]              @ 0x68 
    /*0003aa6c*/ LDR         R3, [R4, #276]              @ 0x114 
    /*0003aa70*/ LDR         R1, [SP, #48]               @ 0x30 
    /*0003aa74*/ BFI         R3, R2, #0, #9 
    /*0003aa78*/ STR         R3, [R4, #276]              @ 0x114 
    /*0003aa7c*/ LDR         R3, [R4, #104]              @ 0x68 
    /*0003aa80*/ LDR         R2, [SP, #176]              @ 0xb0 
    /*0003aa84*/ BFI         R3, R1, #18, #9 
    /*0003aa88*/ STR         R3, [R4, #104]              @ 0x68 
    /*0003aa8c*/ LDR         R3, [R4, #276]              @ 0x114 
    /*0003aa90*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0003aa94*/ BFI         R3, R2, #9, #9 
    /*0003aa98*/ STR         R3, [R4, #276]              @ 0x114 
    /*0003aa9c*/ LDR         R3, [R4, #108]              @ 0x6c 
    /*0003aaa0*/ LDR         R2, [SP, #180]              @ 0xb4 
    /*0003aaa4*/ BFI         R3, R1, #0, #9 
    /*0003aaa8*/ STR         R3, [R4, #108]              @ 0x6c 
    /*0003aaac*/ LDR         R3, [R4, #276]              @ 0x114 
    /*0003aab0*/ LDR         R1, [SP, #56]               @ 0x38 
    /*0003aab4*/ BFI         R3, R2, #18, #9 
    /*0003aab8*/ STR         R3, [R4, #276]              @ 0x114 
    /*0003aabc*/ LDR         R3, [R4, #108]              @ 0x6c 
    /*0003aac0*/ LDR         R2, [SP, #184]              @ 0xb8 
    /*0003aac4*/ BFI         R3, R1, #9, #9 
    /*0003aac8*/ STR         R3, [R4, #108]              @ 0x6c 
    /*0003aacc*/ LDR         R3, [R4, #280]              @ 0x118 
    /*0003aad0*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*0003aad4*/ BFI         R3, R2, #0, #9 
    /*0003aad8*/ STR         R3, [R4, #280]              @ 0x118 
    /*0003aadc*/ LDR         R3, [R4, #108]              @ 0x6c 
    /*0003aae0*/ LDR         R2, [SP, #188]              @ 0xbc 
    /*0003aae4*/ BFI         R3, R1, #18, #9 
    /*0003aae8*/ STR         R3, [R4, #108]              @ 0x6c 
    /*0003aaec*/ LDR         R3, [R4, #280]              @ 0x118 
    /*0003aaf0*/ BFI         R3, R2, #9, #9 
    /*0003aaf4*/ STR         R3, [R4, #280]              @ 0x118 
    /*0003aaf8*/ LDRB        R3, [R5, #23] 
    /*0003aafc*/ TST         R3, #16 
    /*0003ab00*/ BEQ         SetPE0Vi_x3a73c
    /*0003ab04*/ CMP         R0, IP 
    /*0003ab08*/ ADD         R2, SP, #64                 @ 0x40 
    /*0003ab0c*/ MOVGE       R0, IP 
    /*0003ab10*/ SUB         IP, IP, R0 
    /*0003ab14*/ ADD         R0, IP, R0, LSL #4 
    /*0003ab18*/ ADD         R3, R0, #8 
    SetPE0Vi_x3ab1c:
    /*0003ab1c*/ ASR         R1, R3, #4 
    /*0003ab20*/ STR         R1, [R2], #4 
    /*0003ab24*/ CMP         LR, R2 
    /*0003ab28*/ ADD         R3, R3, IP 
    /*0003ab2c*/ BNE         SetPE0Vi_x3ab1c
    /*0003ab30*/ LDR         R3, [R4, #112]              @ 0x70 
    /*0003ab34*/ LDR         R2, [SP, #64]               @ 0x40 
    /*0003ab38*/ LDR         R1, [SP, #68]               @ 0x44 
    /*0003ab3c*/ BFI         R3, R2, #0, #9 
    /*0003ab40*/ STR         R3, [R4, #112]              @ 0x70 
    /*0003ab44*/ LDR         R3, [R4, #112]              @ 0x70 
    /*0003ab48*/ LDR         R2, [SP, #72]               @ 0x48 
    /*0003ab4c*/ BFI         R3, R1, #9, #9 
    /*0003ab50*/ STR         R3, [R4, #112]              @ 0x70 
    /*0003ab54*/ LDR         R3, [R4, #112]              @ 0x70 
    /*0003ab58*/ LDR         R1, [SP, #76]               @ 0x4c 
    /*0003ab5c*/ BFI         R3, R2, #18, #9 
    /*0003ab60*/ STR         R3, [R4, #112]              @ 0x70 
    /*0003ab64*/ LDR         R3, [R4, #116]              @ 0x74 
    /*0003ab68*/ LDR         R2, [SP, #80]               @ 0x50 
    /*0003ab6c*/ BFI         R3, R1, #0, #9 
    /*0003ab70*/ STR         R3, [R4, #116]              @ 0x74 
    /*0003ab74*/ LDR         R3, [R4, #116]              @ 0x74 
    /*0003ab78*/ LDR         R1, [SP, #84]               @ 0x54 
    /*0003ab7c*/ BFI         R3, R2, #9, #9 
    /*0003ab80*/ STR         R3, [R4, #116]              @ 0x74 
    /*0003ab84*/ LDR         R3, [R4, #116]              @ 0x74 
    /*0003ab88*/ LDR         R2, [SP, #88]               @ 0x58 
    /*0003ab8c*/ BFI         R3, R1, #18, #9 
    /*0003ab90*/ STR         R3, [R4, #116]              @ 0x74 
    /*0003ab94*/ LDR         R3, [R4, #120]              @ 0x78 
    /*0003ab98*/ LDR         R1, [SP, #92]               @ 0x5c 
    /*0003ab9c*/ BFI         R3, R2, #0, #9 
    /*0003aba0*/ STR         R3, [R4, #120]              @ 0x78 
    /*0003aba4*/ LDR         R3, [R4, #120]              @ 0x78 
    /*0003aba8*/ LDR         R2, [SP, #96]               @ 0x60 
    /*0003abac*/ BFI         R3, R1, #9, #9 
    /*0003abb0*/ STR         R3, [R4, #120]              @ 0x78 
    /*0003abb4*/ LDR         R3, [R4, #120]              @ 0x78 
    /*0003abb8*/ LDR         R1, [SP, #100]              @ 0x64 
    /*0003abbc*/ BFI         R3, R2, #18, #9 
    /*0003abc0*/ STR         R3, [R4, #120]              @ 0x78 
    /*0003abc4*/ LDR         R3, [R4, #124]              @ 0x7c 
    /*0003abc8*/ LDR         R2, [SP, #104]              @ 0x68 
    /*0003abcc*/ BFI         R3, R1, #0, #9 
    /*0003abd0*/ STR         R3, [R4, #124]              @ 0x7c 
    /*0003abd4*/ LDR         R3, [R4, #124]              @ 0x7c 
    /*0003abd8*/ BFI         R3, R2, #9, #9 
    /*0003abdc*/ STR         R3, [R4, #124]              @ 0x7c 
    /*0003abe0*/ LDR         R3, [R4, #124]              @ 0x7c 
    /*0003abe4*/ LDR         R2, [SP, #108]              @ 0x6c 
    /*0003abe8*/ LDR         R1, [SP, #112]              @ 0x70 
    /*0003abec*/ BFI         R3, R2, #18, #9 
    /*0003abf0*/ STR         R3, [R4, #124]              @ 0x7c 
    /*0003abf4*/ LDR         R3, [R4, #256]              @ 0x100 
    /*0003abf8*/ LDR         R2, [SP, #116]              @ 0x74 
    /*0003abfc*/ BFI         R3, R1, #0, #9 
    /*0003ac00*/ STR         R3, [R4, #256]              @ 0x100 
    /*0003ac04*/ LDR         R3, [R4, #256]              @ 0x100 
    /*0003ac08*/ LDR         R1, [SP, #120]              @ 0x78 
    /*0003ac0c*/ BFI         R3, R2, #9, #9 
    /*0003ac10*/ STR         R3, [R4, #256]              @ 0x100 
    /*0003ac14*/ LDR         R3, [R4, #256]              @ 0x100 
    /*0003ac18*/ LDR         R2, [SP, #124]              @ 0x7c 
    /*0003ac1c*/ BFI         R3, R1, #18, #9 
    /*0003ac20*/ STR         R3, [R4, #256]              @ 0x100 
    /*0003ac24*/ LDR         R3, [R4, #260]              @ 0x104 
    /*0003ac28*/ BFI         R3, R2, #0, #9 
    /*0003ac2c*/ STR         R3, [R4, #260]              @ 0x104 
    /*0003ac30*/ ADD         SP, SP, #196                @ 0xc4 
    /*0003ac34*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    SetPE0Vi_x3ac38:
    /*0003ac38*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12544] 
    /*0003ac3c*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x23c8] 
    /*0003ac40*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12544] 
    /*0003ac44*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x23c8] 
    /*0003ac48*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12548] 
    /*0003ac4c*/ MOV         R2, #624                    @ 0x270 
    /*0003ac50*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12548] 
    /*0003ac54*/ ADD         SP, SP, #196                @ 0xc4 
    /*0003ac58*/ POP         {R4, R5, R6, R7, R8, R9, LR} 
    SetPE0Vi_x3ac5c:
    /*0003ac5c*/ B           SetPE0Vi_x3ac5c             @ osal_panic [R_ARM_JUMP24: +0x0] 
    SetPE0Vi_x3ac60:
    /*0003ac60*/ LDRH        R0, [R5, #20] 
    /*0003ac64*/ MOVW        R3, #511                    @ 0x1ff 
    /*0003ac68*/ UBFX        R0, R0, #0, #9 
    /*0003ac6c*/ SXTH        IP, R0 
    /*0003ac70*/ UXTH        R0, R0 
    /*0003ac74*/ ADD         IP, IP, IP, LSL #1 
    /*0003ac78*/ ASR         IP, IP, #1 
    /*0003ac7c*/ CMP         IP, R3 
    /*0003ac80*/ MOVGE       IP, R3 
    /*0003ac84*/ B           SetPE0Vi_x3a768
    SetPE0Vi_x3ac88:
    /*0003ac88*/ MOVW        R2, #511                    @ 0x1ff 
    /*0003ac8c*/ CMP         R0, R2 
    /*0003ac90*/ BEQ         SetPE0Vi_x3a7b8
    /*0003ac94*/ LDRB        R1, [R5, #19] 
    /*0003ac98*/ MOV         R2, #1 
    /*0003ac9c*/ UBFX        R1, R1, #1, #3 
    /*0003aca0*/ ORR         R3, R3, R2, LSL R1 
    /*0003aca4*/ STRB        R3, [R6] 
    /*0003aca8*/ B           SetPE0Vi_x3a7ac
FUNC_END SetPE0Vi


FUNC_BEGIN Interpulate.part.0
    /*0003acac*/ PUSH        {R4, LR} 
    /*0003acb0*/ SUB         LR, R0, R1 
    /*0003acb4*/ LDR         IP, [SP, #8] 
    /*0003acb8*/ SUB         R0, R3, R0 
    /*0003acbc*/ SUB         R1, R3, R1 
    /*0003acc0*/ MUL         IP, IP, LR 
    /*0003acc4*/ MLA         R0, R2, R0, IP 
    /*0003acc8*/ ADD         R0, R0, R1, LSR #1 
    /*0003accc*/ BL          0x000000000003ACCC          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0003acd0*/ POP         {R4, PC} 
FUNC_END Interpulate.part.0


FUNC_BEGIN ySetRanges.constprop.1
    /*0003acd4*/ CMP         R1, #254                    @ 0xfe 
    /*0003acd8*/ SUB         IP, R2, #32 
    /*0003acdc*/ PUSH        {R4, R5, R6, LR} 
    /*0003ace0*/ MOVLE       R3, R1 
    /*0003ace4*/ MOVGT       R3, #255                    @ 0xff 
    /*0003ace8*/ CMP         R2, #32 
    /*0003acec*/ MOVW        R6, #509                    @ 0x1fd 
    /*0003acf0*/ MOVW        R5, #510                    @ 0x1fe 
    /*0003acf4*/ MOVLT       LR, R2 
    /*0003acf8*/ MOVGE       LR, #32 
    /*0003acfc*/ BIC         LR, LR, LR, ASR #31 
    /*0003ad00*/ STR         R3, [R0] 
    /*0003ad04*/ SUB         R3, R2, #64                 @ 0x40 
    /*0003ad08*/ MOVW        R4, #2039                   @ 0x7f7 
    /*0003ad0c*/ MUL         LR, R1, LR 
    /*0003ad10*/ SUB         R2, R2, #96                 @ 0x60 
    /*0003ad14*/ ADD         LR, LR, #16 
    /*0003ad18*/ ADD         R1, R1, LR, ASR #5 
    /*0003ad1c*/ CMP         R1, R6 
    /*0003ad20*/ MOVLE       LR, R1 
    /*0003ad24*/ MOVGT       LR, R5 
    /*0003ad28*/ CMP         IP, #32 
    /*0003ad2c*/ STR         LR, [R0, #4] 
    /*0003ad30*/ MOVW        LR, #2040                   @ 0x7f8 
    /*0003ad34*/ MOVGE       IP, #32 
    /*0003ad38*/ BIC         IP, IP, IP, ASR #31 
    /*0003ad3c*/ MUL         IP, R1, IP 
    /*0003ad40*/ ADD         IP, IP, #16 
    /*0003ad44*/ ADD         R1, R1, IP, ASR #5 
    /*0003ad48*/ CMP         R1, #1020                   @ 0x3fc 
    /*0003ad4c*/ MOVLT       IP, R1 
    /*0003ad50*/ MOVGE       IP, #1020                   @ 0x3fc 
    /*0003ad54*/ CMP         R3, #32 
    /*0003ad58*/ STR         IP, [R0, #8] 
    /*0003ad5c*/ MOVGE       R3, #32 
    /*0003ad60*/ BIC         R3, R3, R3, ASR #31 
    /*0003ad64*/ MUL         R3, R1, R3 
    /*0003ad68*/ ADD         R3, R3, #16 
    /*0003ad6c*/ ADD         R1, R1, R3, ASR #5 
    /*0003ad70*/ CMP         R1, R4 
    /*0003ad74*/ MOVLE       R4, R1 
    /*0003ad78*/ MOVGT       R4, LR 
    /*0003ad7c*/ CMP         R2, #32 
    /*0003ad80*/ STR         R4, [R0, #12] 
    /*0003ad84*/ MOVGE       R2, #32 
    /*0003ad88*/ BIC         R2, R2, R2, ASR #31 
    /*0003ad8c*/ MUL         R2, R1, R2 
    /*0003ad90*/ ADD         R2, R2, #16 
    /*0003ad94*/ ADD         R1, R1, R2, ASR #5 
    /*0003ad98*/ CMP         R1, #4080                   @ 0xff0 
    /*0003ad9c*/ MOVGE       R1, #4080                   @ 0xff0 
    /*0003ada0*/ STR         R1, [R0, #16] 
    /*0003ada4*/ POP         {R4, R5, R6, PC} 
FUNC_END ySetRanges.constprop.1


FUNC_BEGIN SetSFiVi
    /*0003ada8*/ CMP         R1, #0 
    /*0003adac*/ CMPNE       R2, #0 
    /*0003adb0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0003adb4*/ MOVNE       R3, #1 
    /*0003adb8*/ MOVEQ       R3, #0 
    /*0003adbc*/ CMP         R0, #0 
    /*0003adc0*/ MOVEQ       R3, #0 
    /*0003adc4*/ ANDNE       R3, R3, #1 
    /*0003adc8*/ CMP         R3, #0 
    /*0003adcc*/ SUB         SP, SP, #180                @ 0xb4 
    /*0003add0*/ BEQ         SetSFiVi_x3ae04
    /*0003add4*/ LDRB        R3, [R2] 
    /*0003add8*/ TST         R3, #30 
    /*0003addc*/ BEQ         SetSFiVi_x3adfc
    /*0003ade0*/ LDRB        R5, [R1, #14] 
    /*0003ade4*/ MOV         R6, R1 
    /*0003ade8*/ LDRB        R3, [R1, #11] 
    /*0003adec*/ LDRB        IP, [R1, #8] 
    /*0003adf0*/ ORR         R2, R5, R3 
    /*0003adf4*/ ORRS        R2, IP, R2 
    /*0003adf8*/ BNE         SetSFiVi_x3ae28
    SetSFiVi_x3adfc:
    /*0003adfc*/ ADD         SP, SP, #180                @ 0xb4 
    /*0003ae00*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    SetSFiVi_x3ae04:
    /*0003ae04*/ MOV         R2, #448                    @ 0x1c0 
    /*0003ae08*/ LDR         R1, [PC, #1608]             @ 0x000000000003b458 
    /*0003ae0c*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12544] 
    /*0003ae10*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12548] 
    /*0003ae14*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12544] 
    /*0003ae18*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12548] 
    /*0003ae1c*/ BL          0x000000000003AE1C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0003ae20*/ ADD         SP, SP, #180                @ 0xb4 
    /*0003ae24*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    SetSFiVi_x3ae28:
    /*0003ae28*/ LDRB        R2, [R1, #10] 
    /*0003ae2c*/ MOV         R4, R0 
    /*0003ae30*/ CMP         R2, #127                    @ 0x7f 
    /*0003ae34*/ BGT         SetSFiVi_x3b408
    /*0003ae38*/ SMULBB      R2, IP, R2 
    /*0003ae3c*/ LSL         R1, IP, #2 
    /*0003ae40*/ STR         R1, [SP, #48]               @ 0x30 
    /*0003ae44*/ MOV         R8, R1 
    /*0003ae48*/ MOV         R1, IP 
    /*0003ae4c*/ ADD         IP, R2, #64                 @ 0x40 
    /*0003ae50*/ ASR         IP, IP, #7 
    SetSFiVi_x3ae54:
    /*0003ae54*/ LDRB        R2, [R6, #13] 
    /*0003ae58*/ CMP         R2, #127                    @ 0x7f 
    /*0003ae5c*/ BGT         SetSFiVi_x3b3dc
    /*0003ae60*/ SMULBB      R2, R3, R2 
    /*0003ae64*/ LSL         R0, R3, #3 
    /*0003ae68*/ MOV         R9, R3 
    /*0003ae6c*/ STR         R0, [SP, #52]               @ 0x34 
    /*0003ae70*/ MOV         R7, R0 
    /*0003ae74*/ ADD         R3, R2, #64                 @ 0x40 
    /*0003ae78*/ ASR         R3, R3, #7 
    SetSFiVi_x3ae7c:
    /*0003ae7c*/ LDRB        R2, [R6, #16] 
    /*0003ae80*/ STR         R1, [SP, #56]               @ 0x38 
    /*0003ae84*/ CMP         R2, #127                    @ 0x7f 
    /*0003ae88*/ BGT         SetSFiVi_x3b3c0
    /*0003ae8c*/ SMULBB      R2, R5, R2 
    /*0003ae90*/ MOV         R1, R5 
    /*0003ae94*/ ADD         R5, R2, #64                 @ 0x40 
    /*0003ae98*/ ASR         R5, R5, #7 
    SetSFiVi_x3ae9c:
    /*0003ae9c*/ LDRB        LR, [R6, #12] 
    /*0003aea0*/ ADD         R0, SP, #96                 @ 0x60 
    /*0003aea4*/ STR         IP, [SP, #116]              @ 0x74 
    /*0003aea8*/ LSL         IP, IP, #2 
    /*0003aeac*/ CMP         LR, #32 
    /*0003aeb0*/ STR         IP, [SP, #16] 
    /*0003aeb4*/ LDRB        R2, [R6, #15] 
    /*0003aeb8*/ LSL         SL, R3, #3 
    /*0003aebc*/ MOVGE       LR, #32 
    /*0003aec0*/ STR         R9, [SP, #76]               @ 0x4c 
    /*0003aec4*/ MUL         IP, R9, LR 
    /*0003aec8*/ STR         SL, [SP, #24] 
    /*0003aecc*/ MUL         LR, R3, LR 
    /*0003aed0*/ STR         R3, [SP, #136]              @ 0x88 
    /*0003aed4*/ ADD         IP, IP, #16 
    /*0003aed8*/ ADD         LR, LR, #16 
    /*0003aedc*/ ADD         IP, R9, IP, ASR #5 
    /*0003aee0*/ STR         IP, [SP, #80]               @ 0x50 
    /*0003aee4*/ ADD         LR, R3, LR, ASR #5 
    /*0003aee8*/ LSL         R3, IP, #3 
    /*0003aeec*/ STR         LR, [SP, #140]              @ 0x8c 
    /*0003aef0*/ STR         R3, [SP, #20] 
    /*0003aef4*/ LSL         LR, LR, #3 
    /*0003aef8*/ STR         LR, [SP, #28] 
    /*0003aefc*/ BL          0x000000000003ACD4 
    /*0003af00*/ LDR         R3, [SP, #100]              @ 0x64 
    /*0003af04*/ MOV         R1, R5 
    /*0003af08*/ LDRB        R2, [R6, #15] 
    /*0003af0c*/ ADD         R0, SP, #156                @ 0x9c 
    /*0003af10*/ LDR         R5, [SP, #96]               @ 0x60 
    /*0003af14*/ STR         R3, [SP] 
    /*0003af18*/ LDR         FP, [SP, #104]              @ 0x68 
    /*0003af1c*/ LDR         SL, [SP, #108]              @ 0x6c 
    /*0003af20*/ LDR         R9, [SP, #112]              @ 0x70 
    /*0003af24*/ BL          0x000000000003ACD4 
    /*0003af28*/ LDR         R1, [R4, #8] 
    /*0003af2c*/ UBFX        FP, FP, #0, #10 
    /*0003af30*/ LDR         R3, [SP, #20] 
    /*0003af34*/ UBFX        SL, SL, #0, #11 
    /*0003af38*/ LDR         LR, [SP, #160]              @ 0xa0 
    /*0003af3c*/ BFI         R1, R8, #20, #10 
    /*0003af40*/ STR         FP, [SP, #4] 
    /*0003af44*/ UBFX        R0, R3, #0, #12 
    /*0003af48*/ STR         SL, [SP, #32] 
    /*0003af4c*/ UBFX        R9, R9, #0, #12 
    /*0003af50*/ LDR         R2, [SP, #156]              @ 0x9c 
    /*0003af54*/ STR         R9, [SP, #36]               @ 0x24 
    /*0003af58*/ LDR         R3, [SP] 
    /*0003af5c*/ LDR         FP, [SP, #168]              @ 0xa8 
    /*0003af60*/ LDR         IP, [SP, #164]              @ 0xa4 
    /*0003af64*/ LDR         SL, [SP, #172]              @ 0xac 
    /*0003af68*/ UBFX        R9, FP, #0, #11 
    /*0003af6c*/ STR         R1, [R4, #8] 
    /*0003af70*/ UBFX        R1, LR, #0, #9 
    /*0003af74*/ STR         R1, [SP, #40]               @ 0x28 
    /*0003af78*/ UBFX        IP, IP, #0, #10 
    /*0003af7c*/ LDR         R1, [SP, #56]               @ 0x38 
    /*0003af80*/ UXTH        R3, R3 
    /*0003af84*/ STR         IP, [SP, #12] 
    /*0003af88*/ UXTB        IP, R5 
    /*0003af8c*/ UBFX        SL, SL, #0, #12 
    /*0003af90*/ MOV         LR, R1 
    /*0003af94*/ LDR         R1, [R4, #4] 
    /*0003af98*/ STR         LR, [SP] 
    /*0003af9c*/ LDRB        LR, [SP] 
    /*0003afa0*/ BFI         R1, LR, #16, #8 
    /*0003afa4*/ STR         R1, [R4, #4] 
    /*0003afa8*/ LDR         FP, [SP, #16] 
    /*0003afac*/ LDR         R1, [R4, #12] 
    /*0003afb0*/ AND         FP, FP, #1020               @ 0x3fc 
    /*0003afb4*/ STR         FP, [SP, #8] 
    /*0003afb8*/ BFI         R1, R8, #0, #10 
    /*0003afbc*/ STR         R1, [R4, #12] 
    /*0003afc0*/ LDR         R1, [R4, #4] 
    /*0003afc4*/ BFI         R1, LR, #24, #8 
    /*0003afc8*/ STR         R1, [R4, #4] 
    /*0003afcc*/ LDR         R1, [R4, #28] 
    /*0003afd0*/ BFI         R1, R7, #12, #11 
    /*0003afd4*/ STR         R1, [R4, #28] 
    /*0003afd8*/ LDR         R8, [SP, #76]               @ 0x4c 
    /*0003afdc*/ LDR         LR, [R4, #20] 
    /*0003afe0*/ UXTB        R1, R8 
    /*0003afe4*/ BFI         LR, R1, #0, #8 
    /*0003afe8*/ STR         LR, [R4, #20] 
    /*0003afec*/ LDR         LR, [R4, #32] 
    /*0003aff0*/ BFI         LR, R7, #0, #11 
    /*0003aff4*/ STR         LR, [R4, #32] 
    /*0003aff8*/ LDR         LR, [R4, #20] 
    /*0003affc*/ LDR         R7, [SP, #24] 
    /*0003b000*/ BFI         LR, R1, #8, #8 
    /*0003b004*/ STR         LR, [R4, #20] 
    /*0003b008*/ LDR         R1, [R4, #32] 
    /*0003b00c*/ UXTB        LR, R2 
    /*0003b010*/ UBFX        R7, R7, #0, #11 
    /*0003b014*/ BFI         R1, R0, #11, #12 
    /*0003b018*/ STR         R1, [R4, #32] 
    /*0003b01c*/ LDR         R1, [R4, #20] 
    /*0003b020*/ UXTH        R7, R7 
    /*0003b024*/ LDRH        FP, [SP, #80]               @ 0x50 
    /*0003b028*/ BFI         R1, FP, #16, #9 
    /*0003b02c*/ STR         R1, [R4, #20] 
    /*0003b030*/ LDR         R1, [R4, #64]               @ 0x40 
    /*0003b034*/ BFI         R1, IP, #12, #8 
    /*0003b038*/ STR         R1, [R4, #64]               @ 0x40 
    /*0003b03c*/ LDR         R1, [SP, #96]               @ 0x60 
    /*0003b040*/ LDR         R0, [SP, #28] 
    /*0003b044*/ ORR         R5, R1, R5 
    /*0003b048*/ UBFX        R0, R0, #0, #12 
    /*0003b04c*/ STR         R0, [SP, #44]               @ 0x2c 
    /*0003b050*/ LDR         R0, [R4, #48]               @ 0x30 
    /*0003b054*/ UXTB        R1, R1 
    /*0003b058*/ ORR         R5, R5, R2 
    /*0003b05c*/ BFI         R0, R1, #12, #8 
    /*0003b060*/ STR         R0, [R4, #48]               @ 0x30 
    /*0003b064*/ LDR         R2, [SP, #4] 
    /*0003b068*/ UXTB        R5, R5 
    /*0003b06c*/ LDR         R0, [R4, #64]               @ 0x40 
    /*0003b070*/ ORR         R5, R5, R2 
    /*0003b074*/ BFI         R0, IP, #20, #8 
    /*0003b078*/ STR         R0, [R4, #64]               @ 0x40 
    /*0003b07c*/ LDR         R2, [R4, #48]               @ 0x30 
    /*0003b080*/ BFI         R2, R1, #20, #8 
    /*0003b084*/ STR         R2, [R4, #48]               @ 0x30 
    /*0003b088*/ LDR         R2, [R4, #68]               @ 0x44 
    /*0003b08c*/ BFI         R2, R3, #0, #9 
    /*0003b090*/ STR         R2, [R4, #68]               @ 0x44 
    /*0003b094*/ LDR         R2, [R4, #52]               @ 0x34 
    /*0003b098*/ LDRH        R1, [SP, #100]              @ 0x64 
    /*0003b09c*/ BFI         R2, R1, #0, #9 
    /*0003b0a0*/ STR         R2, [R4, #52]               @ 0x34 
    /*0003b0a4*/ ORR         R3, R3, R1 
    /*0003b0a8*/ LDR         R2, [R4, #68]               @ 0x44 
    /*0003b0ac*/ LDR         R1, [SP, #4] 
    /*0003b0b0*/ UBFX        R3, R3, #0, #9 
    /*0003b0b4*/ BFI         R2, R1, #9, #10 
    /*0003b0b8*/ STR         R2, [R4, #68]               @ 0x44 
    /*0003b0bc*/ LDR         R2, [SP, #104]              @ 0x68 
    /*0003b0c0*/ LDR         R1, [R4, #52]               @ 0x34 
    /*0003b0c4*/ UBFX        R2, R2, #0, #10 
    /*0003b0c8*/ BFI         R1, R2, #9, #10 
    /*0003b0cc*/ STR         R1, [R4, #52]               @ 0x34 
    /*0003b0d0*/ ORR         R5, R5, R2 
    /*0003b0d4*/ LDR         R1, [R4, #68]               @ 0x44 
    /*0003b0d8*/ LDR         R2, [SP, #32] 
    /*0003b0dc*/ BFI         R1, R2, #19, #11 
    /*0003b0e0*/ STR         R1, [R4, #68]               @ 0x44 
    /*0003b0e4*/ ORR         R5, R5, R2 
    /*0003b0e8*/ LDR         R2, [SP, #108]              @ 0x6c 
    /*0003b0ec*/ LDR         R1, [R4, #52]               @ 0x34 
    /*0003b0f0*/ UBFX        R2, R2, #0, #11 
    /*0003b0f4*/ BFI         R1, R2, #19, #11 
    /*0003b0f8*/ STR         R1, [R4, #52]               @ 0x34 
    /*0003b0fc*/ ORR         R2, R5, R2 
    /*0003b100*/ LDR         R1, [R4, #72]               @ 0x48 
    /*0003b104*/ LDR         R5, [SP, #36]               @ 0x24 
    /*0003b108*/ BFI         R1, R5, #0, #12 
    /*0003b10c*/ STR         R1, [R4, #72]               @ 0x48 
    /*0003b110*/ LDR         R0, [SP, #112]              @ 0x70 
    /*0003b114*/ ORR         R2, R2, R5 
    /*0003b118*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0003b11c*/ UBFX        R0, R0, #0, #12 
    /*0003b120*/ BFI         R1, R0, #0, #12 
    /*0003b124*/ STR         R1, [R4, #56]               @ 0x38 
    /*0003b128*/ LDR         IP, [SP, #8] 
    /*0003b12c*/ ORR         R2, R2, R0 
    /*0003b130*/ LDR         R1, [R4, #8] 
    /*0003b134*/ LDR         R5, [SP, #40]               @ 0x28 
    /*0003b138*/ BFI         R1, IP, #0, #10 
    /*0003b13c*/ STR         R1, [R4, #8] 
    /*0003b140*/ LDR         IP, [SP, #12] 
    /*0003b144*/ ORR         R2, R2, R5 
    /*0003b148*/ LDR         R1, [SP, #116]              @ 0x74 
    /*0003b14c*/ ORR         R2, R2, IP 
    /*0003b150*/ LDR         IP, [SP] 
    /*0003b154*/ LDR         R0, [R4, #4] 
    /*0003b158*/ ORR         R2, R2, R9 
    /*0003b15c*/ ORR         IP, IP, R1 
    /*0003b160*/ UXTB        R1, R1 
    /*0003b164*/ BFI         R0, R1, #0, #8 
    /*0003b168*/ STR         R0, [R4, #4] 
    /*0003b16c*/ LDR         R0, [SP, #48]               @ 0x30 
    /*0003b170*/ ORR         R2, R2, SL 
    /*0003b174*/ UXTB        IP, IP 
    /*0003b178*/ ORR         R3, R2, R3 
    /*0003b17c*/ ORR         IP, IP, R0 
    /*0003b180*/ LDR         R2, [R4, #8] 
    /*0003b184*/ LDR         R0, [SP, #8] 
    /*0003b188*/ BFI         R2, R0, #10, #10 
    /*0003b18c*/ STR         R2, [R4, #8] 
    /*0003b190*/ LDR         R2, [R4, #4] 
    /*0003b194*/ LDR         R0, [SP, #16] 
    /*0003b198*/ BFI         R2, R1, #8, #8 
    /*0003b19c*/ STR         R2, [R4, #4] 
    /*0003b1a0*/ LDR         R2, [R4, #24] 
    /*0003b1a4*/ ORR         IP, IP, R0 
    /*0003b1a8*/ BFI         R2, R7, #0, #11 
    /*0003b1ac*/ STR         R2, [R4, #24] 
    /*0003b1b0*/ LDR         R2, [SP, #136]              @ 0x88 
    /*0003b1b4*/ LDR         R1, [R4, #16] 
    /*0003b1b8*/ ORR         R8, R8, R2 
    /*0003b1bc*/ UXTB        R2, R2 
    /*0003b1c0*/ BFI         R1, R2, #0, #8 
    /*0003b1c4*/ STR         R1, [R4, #16] 
    /*0003b1c8*/ LDR         R1, [R4, #24] 
    /*0003b1cc*/ UXTB        R8, R8 
    /*0003b1d0*/ BFI         R1, R7, #11, #11 
    /*0003b1d4*/ STR         R1, [R4, #24] 
    /*0003b1d8*/ LDR         R1, [R4, #16] 
    /*0003b1dc*/ BFI         R1, R2, #8, #8 
    /*0003b1e0*/ STR         R1, [R4, #16] 
    /*0003b1e4*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0003b1e8*/ LDR         R2, [R4, #28] 
    /*0003b1ec*/ BFI         R2, R1, #0, #12 
    /*0003b1f0*/ STR         R2, [R4, #28] 
    /*0003b1f4*/ LDR         R2, [R4, #16] 
    /*0003b1f8*/ LDRH        R1, [SP, #140]              @ 0x8c 
    /*0003b1fc*/ BFI         R2, R1, #16, #9 
    /*0003b200*/ STR         R2, [R4, #16] 
    /*0003b204*/ LDR         R2, [R4, #56]               @ 0x38 
    /*0003b208*/ ORR         FP, FP, R1 
    /*0003b20c*/ UBFX        FP, FP, #0, #9 
    /*0003b210*/ BFI         R2, LR, #12, #8 
    /*0003b214*/ STR         R2, [R4, #56]               @ 0x38 
    /*0003b218*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0003b21c*/ ORR         R8, R8, FP 
    /*0003b220*/ LDR         R2, [R4, #40]               @ 0x28 
    /*0003b224*/ LDR         R7, [SP, #24] 
    /*0003b228*/ ORR         R8, R8, R1 
    /*0003b22c*/ BFI         R2, LR, #0, #8 
    /*0003b230*/ STR         R2, [R4, #40]               @ 0x28 
    /*0003b234*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0003b238*/ ORR         R8, R8, R7 
    /*0003b23c*/ LDR         R2, [SP, #20] 
    /*0003b240*/ LDR         R7, [SP, #28] 
    /*0003b244*/ BFI         R1, LR, #20, #8 
    /*0003b248*/ STR         R1, [R4, #56]               @ 0x38 
    /*0003b24c*/ ORR         R2, R8, R2 
    /*0003b250*/ LDR         R1, [R4, #40]               @ 0x28 
    /*0003b254*/ ORR         R2, R2, R7 
    /*0003b258*/ BFI         R1, LR, #8, #8 
    /*0003b25c*/ STR         R1, [R4, #40]               @ 0x28 
    /*0003b260*/ LDR         R1, [R4, #60]               @ 0x3c 
    /*0003b264*/ BFI         R1, R5, #0, #9 
    /*0003b268*/ STR         R1, [R4, #60]               @ 0x3c 
    /*0003b26c*/ LDR         R1, [R4, #40]               @ 0x28 
    /*0003b270*/ BFI         R1, R5, #16, #9 
    /*0003b274*/ STR         R1, [R4, #40]               @ 0x28 
    /*0003b278*/ LDR         R0, [SP, #12] 
    /*0003b27c*/ LDR         R1, [R4, #60]               @ 0x3c 
    /*0003b280*/ BFI         R1, R0, #9, #10 
    /*0003b284*/ STR         R1, [R4, #60]               @ 0x3c 
    /*0003b288*/ LDR         R1, [R4, #44]               @ 0x2c 
    /*0003b28c*/ BFI         R1, R0, #0, #10 
    /*0003b290*/ STR         R1, [R4, #44]               @ 0x2c 
    /*0003b294*/ LDR         R1, [R4, #60]               @ 0x3c 
    /*0003b298*/ BFI         R1, R9, #19, #11 
    /*0003b29c*/ STR         R1, [R4, #60]               @ 0x3c 
    /*0003b2a0*/ LDR         R1, [R4, #44]               @ 0x2c 
    /*0003b2a4*/ BFI         R1, R9, #10, #11 
    /*0003b2a8*/ STR         R1, [R4, #44]               @ 0x2c 
    /*0003b2ac*/ LDR         R1, [R4, #64]               @ 0x40 
    /*0003b2b0*/ BFI         R1, SL, #0, #12 
    /*0003b2b4*/ STR         R1, [R4, #64]               @ 0x40 
    /*0003b2b8*/ LDR         R1, [R4, #48]               @ 0x30 
    /*0003b2bc*/ BFI         R1, SL, #0, #12 
    /*0003b2c0*/ STR         R1, [R4, #48]               @ 0x30 
    /*0003b2c4*/ LDRB        R1, [R6, #21] 
    /*0003b2c8*/ LDR         R0, [R4, #36]               @ 0x24 
    /*0003b2cc*/ UBFX        R1, R1, #4, #1 
    /*0003b2d0*/ ADD         R1, R1, #4 
    /*0003b2d4*/ BFI         R0, R1, #4, #3 
    /*0003b2d8*/ STR         R0, [R4, #36]               @ 0x24 
    /*0003b2dc*/ LDRB        R1, [R6, #21] 
    /*0003b2e0*/ LDRB        R0, [R6, #4] 
    /*0003b2e4*/ LDR         LR, [R4, #36]               @ 0x24 
    /*0003b2e8*/ CMP         R0, #0 
    /*0003b2ec*/ LSL         R0, R1, #27 
    /*0003b2f0*/ MOVEQ       R1, #3 
    /*0003b2f4*/ MOVNE       R1, #2 
    /*0003b2f8*/ ADD         R1, R1, R0, LSR #31 
    /*0003b2fc*/ BFI         LR, R1, #1, #3 
    /*0003b300*/ STR         LR, [R4, #36]               @ 0x24 
    /*0003b304*/ LDRB        R0, [R6, #4] 
    /*0003b308*/ LDR         R1, [R4] 
    /*0003b30c*/ BFI         R1, R0, #0, #8 
    /*0003b310*/ STR         R1, [R4] 
    /*0003b314*/ LDRB        R1, [R6, #3] 
    /*0003b318*/ LSR         R1, R1, #5 
    /*0003b31c*/ CMP         R1, #2 
    /*0003b320*/ MOVLE       LR, #0 
    /*0003b324*/ MOVLE       R1, #3 
    /*0003b328*/ BLE         SetSFiVi_x3b340
    /*0003b32c*/ CMP         R1, #7 
    /*0003b330*/ SUBNE       LR, R1, #3 
    /*0003b334*/ ANDNE       LR, LR, #3 
    /*0003b338*/ MOVEQ       LR, #3 
    /*0003b33c*/ MOVEQ       R1, #6 
    SetSFiVi_x3b340:
    /*0003b340*/ LDRB        R0, [R6, #3] 
    /*0003b344*/ ADDS        IP, IP, #0 
    /*0003b348*/ BFI         R0, R1, #5, #3 
    /*0003b34c*/ STRB        R0, [R6, #3] 
    /*0003b350*/ LDR         R1, [R4] 
    /*0003b354*/ MOVNE       IP, #1 
    /*0003b358*/ ADDS        R2, R2, #0 
    /*0003b35c*/ BFI         R1, LR, #8, #2 
    /*0003b360*/ STR         R1, [R4] 
    /*0003b364*/ LDR         R1, [R4] 
    /*0003b368*/ MOVNE       R2, #1 
    /*0003b36c*/ LDRB        R0, [R6, #2] 
    /*0003b370*/ ADDS        R3, R3, #0 
    /*0003b374*/ BFI         R1, R0, #12, #5 
    /*0003b378*/ STR         R1, [R4] 
    /*0003b37c*/ LDRH        R1, [R6, #2] 
    /*0003b380*/ MOVNE       R3, #1 
    /*0003b384*/ LDR         R0, [R4] 
    /*0003b388*/ UBFX        R1, R1, #5, #5 
    /*0003b38c*/ BFI         R0, R1, #17, #5 
    /*0003b390*/ STR         R0, [R4] 
    /*0003b394*/ LDR         R1, [R4] 
    /*0003b398*/ BFI         R1, IP, #10, #1 
    /*0003b39c*/ STR         R1, [R4] 
    /*0003b3a0*/ LDR         R1, [R4] 
    /*0003b3a4*/ BFI         R1, R2, #11, #1 
    /*0003b3a8*/ STR         R1, [R4] 
    /*0003b3ac*/ LDR         R1, [R4, #36]               @ 0x24 
    /*0003b3b0*/ BFI         R1, R3, #0, #1 
    /*0003b3b4*/ STR         R1, [R4, #36]               @ 0x24 
    /*0003b3b8*/ ADD         SP, SP, #180                @ 0xb4 
    /*0003b3bc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    SetSFiVi_x3b3c0:
    /*0003b3c0*/ CMP         R2, #255                    @ 0xff 
    /*0003b3c4*/ RSBNE       R1, R2, #256                @ 0x100 
    /*0003b3c8*/ MOVEQ       R1, #0 
    /*0003b3cc*/ MULNE       R1, R5, R1 
    /*0003b3d0*/ ADDNE       R1, R1, #64                 @ 0x40 
    /*0003b3d4*/ ASRNE       R1, R1, #7 
    /*0003b3d8*/ B           SetSFiVi_x3ae9c
    SetSFiVi_x3b3dc:
    /*0003b3dc*/ CMP         R2, #255                    @ 0xff 
    /*0003b3e0*/ BEQ         SetSFiVi_x3b444
    /*0003b3e4*/ RSB         R9, R2, #256                @ 0x100 
    /*0003b3e8*/ MUL         R9, R3, R9 
    /*0003b3ec*/ ADD         R9, R9, #64                 @ 0x40 
    /*0003b3f0*/ ASR         R9, R9, #7 
    /*0003b3f4*/ LSL         R2, R9, #3 
    /*0003b3f8*/ STR         R2, [SP, #52]               @ 0x34 
    /*0003b3fc*/ UBFX        R7, R2, #0, #11 
    /*0003b400*/ UXTH        R7, R7 
    /*0003b404*/ B           SetSFiVi_x3ae7c
    SetSFiVi_x3b408:
    /*0003b408*/ CMP         R2, #255                    @ 0xff 
    /*0003b40c*/ BEQ         SetSFiVi_x3b430
    /*0003b410*/ RSB         R1, R2, #256                @ 0x100 
    /*0003b414*/ MUL         R1, IP, R1 
    /*0003b418*/ ADD         R1, R1, #64                 @ 0x40 
    /*0003b41c*/ ASR         R1, R1, #7 
    /*0003b420*/ LSL         R2, R1, #2 
    /*0003b424*/ STR         R2, [SP, #48]               @ 0x30 
    /*0003b428*/ AND         R8, R2, #1020               @ 0x3fc 
    /*0003b42c*/ B           SetSFiVi_x3ae54
    SetSFiVi_x3b430:
    /*0003b430*/ MOV         R2, #0 
    /*0003b434*/ STR         R2, [SP, #48]               @ 0x30 
    /*0003b438*/ MOV         R1, R2 
    /*0003b43c*/ MOV         R8, R2 
    /*0003b440*/ B           SetSFiVi_x3ae54
    SetSFiVi_x3b444:
    /*0003b444*/ MOV         R2, #0 
    /*0003b448*/ STR         R2, [SP, #52]               @ 0x34 
    /*0003b44c*/ MOV         R9, R2 
    /*0003b450*/ MOV         R7, R2 
    /*0003b454*/ B           SetSFiVi_x3ae7c
    /*0003b458*/ LDRDEQ      R2, [R0], -R4 
FUNC_END SetSFiVi


FUNC_BEGIN V500SetDefaultNRx
    /*0003b45c*/ PUSH        {R4, R5, R6, LR} 
    /*0003b460*/ SUBS        R4, R0, #0 
    /*0003b464*/ POPEQ       {R4, R5, R6, PC} 
    /*0003b468*/ MOV         R2, #30 
    /*0003b46c*/ MOV         R1, #0 
    /*0003b470*/ BL          0x000000000003B470          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0003b474*/ LDRB        R3, [R4, #8] 
    /*0003b478*/ MOV         R1, #16 
    /*0003b47c*/ LDRB        R2, [R4, #27] 
    /*0003b480*/ BFI         R3, R1, #0, #5 
    /*0003b484*/ STRB        R3, [R4, #8] 
    /*0003b488*/ LDRH        IP, [R4, #8] 
    /*0003b48c*/ ORR         R2, R2, R1 
    /*0003b490*/ LDRB        R3, [R4, #25] 
    /*0003b494*/ MOV         R5, #4 
    /*0003b498*/ BFI         IP, R1, #5, #5 
    /*0003b49c*/ LDRB        LR, [R4, #29] 
    /*0003b4a0*/ LDRB        R0, [R4, #6] 
    /*0003b4a4*/ AND         R3, R3, #1 
    /*0003b4a8*/ LSR         R1, IP, #8 
    /*0003b4ac*/ STRH        IP, [R4, #8] 
    /*0003b4b0*/ LDRH        IP, [R4, #4] 
    /*0003b4b4*/ AND         R1, R1, #227                @ 0xe3 
    /*0003b4b8*/ BFI         R1, R5, #5, #3 
    /*0003b4bc*/ ORR         R3, R3, #18 
    /*0003b4c0*/ BFI         LR, R5, #1, #3 
    /*0003b4c4*/ STRB        R1, [R4, #9] 
    /*0003b4c8*/ STRB        R3, [R4, #25] 
    /*0003b4cc*/ MOV         R1, #2 
    /*0003b4d0*/ ORR         R3, R0, #248                @ 0xf8 
    /*0003b4d4*/ BFI         R2, R1, #1, #3 
    /*0003b4d8*/ STRB        R3, [R4, #6] 
    /*0003b4dc*/ MOV         R3, #64                     @ 0x40 
    /*0003b4e0*/ STRB        R2, [R4, #27] 
    /*0003b4e4*/ MOVW        R2, #999                    @ 0x3e7 
    /*0003b4e8*/ STRB        LR, [R4, #29] 
    /*0003b4ec*/ BFI         IP, R2, #0, #10 
    /*0003b4f0*/ STRB        R3, [R4] 
    /*0003b4f4*/ MVN         R2, #127                    @ 0x7f 
    /*0003b4f8*/ STRH        IP, [R4, #4] 
    /*0003b4fc*/ STRB        R2, [R4, #16] 
    /*0003b500*/ STRB        R2, [R4, #19] 
    /*0003b504*/ STRB        R2, [R4, #22] 
    /*0003b508*/ STRB        R3, [R4, #1] 
    /*0003b50c*/ STRB        R3, [R4, #2] 
    /*0003b510*/ STRB        R3, [R4, #3] 
    /*0003b514*/ POP         {R4, R5, R6, PC} 
FUNC_END V500SetDefaultNRx


FUNC_BEGIN V500UpdateNRx
    /*0003b518*/ CMP         R0, #0 
    /*0003b51c*/ BXEQ        LR 
    /*0003b520*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0003b524*/ LDRB        R2, [R0, #6] 
    /*0003b528*/ LDRB        R3, [R0, #7] 
    /*0003b52c*/ AND         IP, R2, #7 
    /*0003b530*/ LDRB        LR, [R0, #10] 
    /*0003b534*/ CMP         IP, #5 
    /*0003b538*/ AND         R1, R3, #7 
    /*0003b53c*/ MOVGE       IP, #5 
    /*0003b540*/ CMP         R1, #5 
    /*0003b544*/ BFI         R2, IP, #0, #3 
    /*0003b548*/ STRB        R2, [R0, #6] 
    /*0003b54c*/ MOVGE       R1, #5 
    /*0003b550*/ BFI         R3, R1, #0, #3 
    /*0003b554*/ UXTB        R3, R3 
    /*0003b558*/ LSR         R2, R3, #3 
    /*0003b55c*/ CMP         R2, #16 
    /*0003b560*/ MOVGE       R2, #16 
    /*0003b564*/ CMP         LR, #0 
    /*0003b568*/ BFI         R3, R2, #3, #5 
    /*0003b56c*/ STRB        R3, [R0, #7] 
    /*0003b570*/ POPNE       {PC}                        @ (ldrne pc, [sp], #4) 
    /*0003b574*/ LDRB        R3, [R0, #8] 
    /*0003b578*/ MOV         R2, #16 
    /*0003b57c*/ BFI         R3, R2, #0, #5 
    /*0003b580*/ STRB        R3, [R0, #8] 
    /*0003b584*/ LDRH        R3, [R0, #8] 
    /*0003b588*/ BFI         R3, R2, #5, #5 
    /*0003b58c*/ STRH        R3, [R0, #8] 
    /*0003b590*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END V500UpdateNRx


FUNC_BEGIN V500MapNRx
    /*0003b594*/ CMP         R0, #0 
    /*0003b598*/ CMPNE       R1, #0 
    /*0003b59c*/ BXEQ        LR 
    /*0003b5a0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0003b5a4*/ SUB         SP, SP, #12 
    /*0003b5a8*/ MOV         R5, R1 
    /*0003b5ac*/ MOV         R2, #288                    @ 0x120 
    /*0003b5b0*/ MOV         R1, #0 
    /*0003b5b4*/ MOV         R3, #1 
    /*0003b5b8*/ MOV         R4, R0 
    /*0003b5bc*/ STRB        R3, [SP, #7] 
    /*0003b5c0*/ BL          0x000000000003B5C0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0003b5c4*/ LDRB        R2, [R5, #6] 
    /*0003b5c8*/ LDRB        R3, [R5, #7] 
    /*0003b5cc*/ ADD         R6, R5, #6 
    /*0003b5d0*/ AND         R0, R2, #7 
    /*0003b5d4*/ LDRB        IP, [R5, #10] 
    /*0003b5d8*/ CMP         R0, #5 
    /*0003b5dc*/ AND         R1, R3, #7 
    /*0003b5e0*/ MOVGE       R0, #5 
    /*0003b5e4*/ CMP         R1, #5 
    /*0003b5e8*/ BFI         R2, R0, #0, #3 
    /*0003b5ec*/ STRB        R2, [R5, #6] 
    /*0003b5f0*/ MOVGE       R1, #5 
    /*0003b5f4*/ BFI         R3, R1, #0, #3 
    /*0003b5f8*/ UXTB        R3, R3 
    /*0003b5fc*/ LSR         R2, R3, #3 
    /*0003b600*/ CMP         R2, #16 
    /*0003b604*/ MOVGE       R2, #16 
    /*0003b608*/ CMP         IP, #0 
    /*0003b60c*/ BFI         R3, R2, #3, #5 
    /*0003b610*/ STRB        R3, [R5, #7] 
    /*0003b614*/ BNE         V500MapNRx_x3b858
    /*0003b618*/ LDRB        R3, [R5, #8] 
    /*0003b61c*/ MOV         R0, #16 
    /*0003b620*/ ADD         R7, SP, #7 
    /*0003b624*/ MOV         R1, R6 
    /*0003b628*/ BFI         R3, R0, #0, #5 
    /*0003b62c*/ STRB        R3, [R5, #8] 
    /*0003b630*/ LDRH        R3, [R5, #8] 
    /*0003b634*/ MOV         R2, R7 
    /*0003b638*/ BFI         R3, R0, #5, #5 
    /*0003b63c*/ MOV         R0, R4 
    /*0003b640*/ STRH        R3, [R5, #8] 
    /*0003b644*/ BL          0x000000000003A6E8 
    V500MapNRx_x3b648:
    /*0003b648*/ LDRB        R2, [SP, #7] 
    /*0003b64c*/ TST         R2, #64                     @ 0x40 
    /*0003b650*/ BEQ         V500MapNRx_x3b718
    /*0003b654*/ LDR         R3, [R4, #84]               @ 0x54 
    /*0003b658*/ MOV         R0, #1 
    /*0003b65c*/ LDRB        R1, [R5, #6] 
    /*0003b660*/ BFI         R3, R1, #6, #3 
    /*0003b664*/ STR         R3, [R4, #84]               @ 0x54 
    /*0003b668*/ LDRB        R3, [R5, #6] 
    /*0003b66c*/ LDR         R1, [R4, #84]               @ 0x54 
    /*0003b670*/ LDRB        IP, [R5, #7] 
    /*0003b674*/ AND         R3, R3, #7 
    /*0003b678*/ LSL         R3, R0, R3 
    /*0003b67c*/ BFI         R1, IP, #3, #3 
    /*0003b680*/ STR         R1, [R4, #84]               @ 0x54 
    /*0003b684*/ LDRB        R1, [R5, #7] 
    /*0003b688*/ SXTB        R3, R3 
    /*0003b68c*/ AND         IP, R1, #7 
    /*0003b690*/ ORR         R3, R3, R0, LSL IP 
    /*0003b694*/ LSR         R1, R1, #3 
    /*0003b698*/ ORR         R3, R3, R2 
    /*0003b69c*/ CMP         R1, #16 
    /*0003b6a0*/ UXTB        R2, R3 
    /*0003b6a4*/ STRB        R2, [SP, #7] 
    /*0003b6a8*/ LDR         R3, [R4, #84]               @ 0x54 
    /*0003b6ac*/ MOVGE       R1, #16 
    /*0003b6b0*/ BFI         R3, R1, #9, #5 
    /*0003b6b4*/ STR         R3, [R4, #84]               @ 0x54 
    /*0003b6b8*/ LDRB        R3, [R5, #9] 
    /*0003b6bc*/ LDR         R1, [R4, #84]               @ 0x54 
    /*0003b6c0*/ UBFX        R3, R3, #2, #3 
    /*0003b6c4*/ BFI         R1, R3, #0, #3 
    /*0003b6c8*/ STR         R1, [R4, #84]               @ 0x54 
    /*0003b6cc*/ LDR         R3, [R4, #84]               @ 0x54 
    /*0003b6d0*/ LDRB        R1, [R5, #11] 
    /*0003b6d4*/ BFI         R3, R1, #14, #5 
    /*0003b6d8*/ STR         R3, [R4, #84]               @ 0x54 
    /*0003b6dc*/ LDR         R3, [R4, #84]               @ 0x54 
    /*0003b6e0*/ LDRB        R1, [R5, #12] 
    /*0003b6e4*/ BFI         R3, R1, #19, #5 
    /*0003b6e8*/ STR         R3, [R4, #84]               @ 0x54 
    /*0003b6ec*/ LDR         R3, [R4, #84]               @ 0x54 
    /*0003b6f0*/ LDRB        R1, [R5, #13] 
    /*0003b6f4*/ BFI         R3, R1, #24, #5 
    /*0003b6f8*/ STR         R3, [R4, #84]               @ 0x54 
    /*0003b6fc*/ LDRB        R3, [R5, #13] 
    /*0003b700*/ CMP         R3, #0 
    /*0003b704*/ LDR         R3, [R4] 
    /*0003b708*/ LDRBEQ      R0, [R5, #29] 
    /*0003b70c*/ UBFXEQ      R0, R0, #4, #1 
    /*0003b710*/ BFI         R3, R0, #22, #1 
    /*0003b714*/ STR         R3, [R4] 
    V500MapNRx_x3b718:
    /*0003b718*/ TST         R2, #32 
    /*0003b71c*/ BEQ         V500MapNRx_x3b7b8
    /*0003b720*/ LDRH        R3, [R5, #4] 
    /*0003b724*/ MOVW        R0, #998                    @ 0x3e6 
    /*0003b728*/ LDRB        LR, [R5] 
    /*0003b72c*/ UBFX        R1, R3, #0, #10 
    /*0003b730*/ CMP         R1, R0 
    /*0003b734*/ MOVWGT      R1, #999                    @ 0x3e7 
    /*0003b738*/ BFIGT       R3, R1, #0, #10 
    /*0003b73c*/ STRHGT      R3, [R5, #4] 
    /*0003b740*/ ORR         R3, R2, #30 
    /*0003b744*/ LDR         R0, [R4, #76]               @ 0x4c 
    /*0003b748*/ MOV         R2, #7 
    /*0003b74c*/ MOVWGT      R1, #1023                   @ 0x3ff 
    /*0003b750*/ MOVLE       IP, #1 
    /*0003b754*/ BFI         R0, LR, #15, #8 
    /*0003b758*/ STR         R0, [R4, #76]               @ 0x4c 
    /*0003b75c*/ LDR         R0, [R4, #76]               @ 0x4c 
    /*0003b760*/ MOVGT       IP, #0 
    /*0003b764*/ LDRB        LR, [R5, #1] 
    /*0003b768*/ BFI         R0, LR, #23, #8 
    /*0003b76c*/ STR         R0, [R4, #76]               @ 0x4c 
    /*0003b770*/ LDR         R0, [R4, #80]               @ 0x50 
    /*0003b774*/ LDRB        LR, [R5, #2] 
    /*0003b778*/ BFI         R0, LR, #0, #8 
    /*0003b77c*/ STR         R0, [R4, #80]               @ 0x50 
    /*0003b780*/ LDR         R0, [R4, #80]               @ 0x50 
    /*0003b784*/ LDRB        LR, [R5, #3] 
    /*0003b788*/ BFI         R0, LR, #8, #8 
    /*0003b78c*/ STR         R0, [R4, #80]               @ 0x50 
    /*0003b790*/ LDR         R0, [R4, #76]               @ 0x4c 
    /*0003b794*/ BFI         R0, R2, #11, #4 
    /*0003b798*/ STR         R0, [R4, #76]               @ 0x4c 
    /*0003b79c*/ LDR         R0, [R4, #76]               @ 0x4c 
    /*0003b7a0*/ BFI         R0, R1, #1, #10 
    /*0003b7a4*/ STR         R0, [R4, #76]               @ 0x4c 
    /*0003b7a8*/ LDR         R1, [R4, #76]               @ 0x4c 
    /*0003b7ac*/ BFI         R1, IP, #0, #1 
    /*0003b7b0*/ STR         R1, [R4, #76]               @ 0x4c 
    /*0003b7b4*/ STRB        R3, [SP, #7] 
    V500MapNRx_x3b7b8:
    /*0003b7b8*/ MOV         R2, R7 
    /*0003b7bc*/ MOV         R1, R6 
    /*0003b7c0*/ MOV         R0, R4 
    /*0003b7c4*/ BL          0x000000000003ADA8 
    /*0003b7c8*/ LDRB        R3, [R5, #6] 
    /*0003b7cc*/ LDR         R2, [R4, #284]              @ 0x11c 
    /*0003b7d0*/ LSR         R3, R3, #3 
    /*0003b7d4*/ BFI         R2, R3, #6, #5 
    /*0003b7d8*/ STR         R2, [R4, #284]              @ 0x11c 
    /*0003b7dc*/ LDRB        R3, [R5, #6] 
    /*0003b7e0*/ LDR         R2, [R4, #284]              @ 0x11c 
    /*0003b7e4*/ LSR         R3, R3, #3 
    /*0003b7e8*/ BFI         R2, R3, #11, #5 
    /*0003b7ec*/ STR         R2, [R4, #284]              @ 0x11c 
    /*0003b7f0*/ LDRB        R3, [R5, #6] 
    /*0003b7f4*/ LDR         R2, [R4, #284]              @ 0x11c 
    /*0003b7f8*/ LSR         R3, R3, #3 
    /*0003b7fc*/ BFI         R2, R3, #16, #5 
    /*0003b800*/ STR         R2, [R4, #284]              @ 0x11c 
    /*0003b804*/ LDR         R3, [R4, #284]              @ 0x11c 
    /*0003b808*/ ORR         R3, R3, #7 
    /*0003b80c*/ STR         R3, [R4, #284]              @ 0x11c 
    /*0003b810*/ LDR         R3, [R4, #284]              @ 0x11c 
    /*0003b814*/ BFC         R3, #3, #3 
    /*0003b818*/ STR         R3, [R4, #284]              @ 0x11c 
    /*0003b81c*/ LDRB        R3, [R5, #6] 
    /*0003b820*/ TST         R3, #248                    @ 0xf8 
    /*0003b824*/ BNE         V500MapNRx_x3b850
    /*0003b828*/ LDRB        R3, [SP, #7] 
    /*0003b82c*/ CMP         R3, #1 
    /*0003b830*/ BEQ         V500MapNRx_x3b850
    /*0003b834*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12588] 
    /*0003b838*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12548] 
    /*0003b83c*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12588] 
    /*0003b840*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12548] 
    /*0003b844*/ MOV         R2, #660                    @ 0x294 
    /*0003b848*/ LDR         R1, [PC, #32]               @ 0x000000000003b870 
    /*0003b84c*/ BL          0x000000000003B84C          @ osal_panic [R_ARM_CALL: +0x0] 
    V500MapNRx_x3b850:
    /*0003b850*/ ADD         SP, SP, #12 
    /*0003b854*/ POP         {R4, R5, R6, R7, PC} 
    V500MapNRx_x3b858:
    /*0003b858*/ ADD         R7, SP, #7 
    /*0003b85c*/ MOV         R1, R6 
    /*0003b860*/ MOV         R0, R4 
    /*0003b864*/ MOV         R2, R7 
    /*0003b868*/ BL          0x000000000003A6E8 
    /*0003b86c*/ B           V500MapNRx_x3b648
    /*0003b870*/ ANDEQ       R2, R0, R0, ROR #7 
FUNC_END V500MapNRx


FUNC_BEGIN V500CalcNRXV2AutoParam
    /*0003b874*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0003b878*/ CMP         R0, R1 
    /*0003b87c*/ SUB         SP, SP, #20 
    /*0003b880*/ MOV         R5, R2 
    /*0003b884*/ MOV         R6, R0 
    /*0003b888*/ MOV         R8, R1 
    /*0003b88c*/ LDRB        R2, [R2] 
    /*0003b890*/ MOV         R9, R3 
    /*0003b894*/ LDR         R7, [SP, #56]               @ 0x38 
    /*0003b898*/ LDR         R4, [SP, #60]               @ 0x3c 
    /*0003b89c*/ BLS         V500CalcNRXV2AutoParam_x3b974
    /*0003b8a0*/ CMP         R0, R3 
    /*0003b8a4*/ LDRB        IP, [R7] 
    /*0003b8a8*/ BCC         V500CalcNRXV2AutoParam_x3bfa0
    /*0003b8ac*/ STRB        IP, [R4] 
    /*0003b8b0*/ LDRB        R1, [R7, #1] 
    /*0003b8b4*/ LDRH        R2, [R4, #4] 
    /*0003b8b8*/ LDRB        R3, [R4, #6] 
    /*0003b8bc*/ STRB        R1, [R4, #1] 
    /*0003b8c0*/ LDRB        R0, [R7, #2] 
    /*0003b8c4*/ LDRB        R1, [R4, #7] 
    /*0003b8c8*/ STRB        R0, [R4, #2] 
    /*0003b8cc*/ LDRB        R0, [R7, #3] 
    /*0003b8d0*/ STRB        R0, [R4, #3] 
    /*0003b8d4*/ LDRH        R0, [R7, #4] 
    /*0003b8d8*/ BFI         R2, R0, #0, #10 
    /*0003b8dc*/ STRH        R2, [R4, #4] 
    /*0003b8e0*/ LDRB        R2, [R7, #6] 
    /*0003b8e4*/ BFI         R3, R2, #0, #3 
    /*0003b8e8*/ STRB        R3, [R4, #6] 
    /*0003b8ec*/ LDRB        R3, [R7, #6] 
    /*0003b8f0*/ LDRB        R2, [R4, #6] 
    /*0003b8f4*/ LSR         R3, R3, #3 
    /*0003b8f8*/ BFI         R2, R3, #3, #5 
    /*0003b8fc*/ STRB        R2, [R4, #6] 
    /*0003b900*/ LDRB        R3, [R7, #7] 
    /*0003b904*/ LDRB        R2, [R4, #8] 
    /*0003b908*/ BFI         R1, R3, #0, #3 
    /*0003b90c*/ STRB        R1, [R4, #7] 
    /*0003b910*/ LDRB        R3, [R7, #7] 
    /*0003b914*/ UXTB        R1, R1 
    /*0003b918*/ LSR         R3, R3, #3 
    /*0003b91c*/ BFI         R1, R3, #3, #5 
    /*0003b920*/ STRB        R1, [R4, #7] 
    /*0003b924*/ LDRB        R3, [R7, #8] 
    /*0003b928*/ BFI         R2, R3, #0, #5 
    /*0003b92c*/ STRB        R2, [R4, #8] 
    /*0003b930*/ LDRH        R3, [R7, #8] 
    /*0003b934*/ LDRH        R2, [R4, #8] 
    /*0003b938*/ UBFX        R3, R3, #5, #5 
    /*0003b93c*/ BFI         R2, R3, #5, #5 
    /*0003b940*/ STRH        R2, [R4, #8] 
    /*0003b944*/ LDRB        R3, [R7, #9] 
    /*0003b948*/ LDRB        R2, [R4, #9] 
    /*0003b94c*/ UBFX        R3, R3, #2, #3 
    /*0003b950*/ BFI         R2, R3, #2, #3 
    /*0003b954*/ STRB        R2, [R4, #9] 
    /*0003b958*/ LDRB        R3, [R7, #9] 
    /*0003b95c*/ UXTB        R2, R2 
    /*0003b960*/ LSR         R3, R3, #5 
    /*0003b964*/ BFI         R2, R3, #5, #3 
    /*0003b968*/ STRB        R2, [R4, #9] 
    /*0003b96c*/ LDRB        R0, [R7, #10] 
    /*0003b970*/ B           V500CalcNRXV2AutoParam_x3ba38
    V500CalcNRXV2AutoParam_x3b974:
    /*0003b974*/ STRB        R2, [R4] 
    /*0003b978*/ LDRB        R1, [R5, #1] 
    /*0003b97c*/ LDRH        R2, [R4, #4] 
    /*0003b980*/ LDRB        R3, [R4, #6] 
    /*0003b984*/ STRB        R1, [R4, #1] 
    /*0003b988*/ LDRB        R0, [R5, #2] 
    /*0003b98c*/ LDRB        R1, [R4, #7] 
    /*0003b990*/ STRB        R0, [R4, #2] 
    /*0003b994*/ LDRB        R0, [R5, #3] 
    /*0003b998*/ STRB        R0, [R4, #3] 
    /*0003b99c*/ LDRH        R0, [R5, #4] 
    /*0003b9a0*/ BFI         R2, R0, #0, #10 
    /*0003b9a4*/ STRH        R2, [R4, #4] 
    /*0003b9a8*/ LDRB        R2, [R5, #6] 
    /*0003b9ac*/ BFI         R3, R2, #0, #3 
    /*0003b9b0*/ STRB        R3, [R4, #6] 
    /*0003b9b4*/ LDRB        R3, [R5, #6] 
    /*0003b9b8*/ LDRB        R2, [R4, #6] 
    /*0003b9bc*/ LSR         R3, R3, #3 
    /*0003b9c0*/ BFI         R2, R3, #3, #5 
    /*0003b9c4*/ STRB        R2, [R4, #6] 
    /*0003b9c8*/ LDRB        R3, [R5, #7] 
    /*0003b9cc*/ LDRB        R2, [R4, #8] 
    /*0003b9d0*/ BFI         R1, R3, #0, #3 
    /*0003b9d4*/ STRB        R1, [R4, #7] 
    /*0003b9d8*/ LDRB        R3, [R5, #7] 
    /*0003b9dc*/ UXTB        R1, R1 
    /*0003b9e0*/ LSR         R3, R3, #3 
    /*0003b9e4*/ BFI         R1, R3, #3, #5 
    /*0003b9e8*/ STRB        R1, [R4, #7] 
    /*0003b9ec*/ LDRB        R3, [R5, #8] 
    /*0003b9f0*/ BFI         R2, R3, #0, #5 
    /*0003b9f4*/ STRB        R2, [R4, #8] 
    /*0003b9f8*/ LDRH        R3, [R5, #8] 
    /*0003b9fc*/ LDRH        R2, [R4, #8] 
    /*0003ba00*/ UBFX        R3, R3, #5, #5 
    /*0003ba04*/ BFI         R2, R3, #5, #5 
    /*0003ba08*/ STRH        R2, [R4, #8] 
    /*0003ba0c*/ LDRB        R3, [R5, #9] 
    /*0003ba10*/ LDRB        R2, [R4, #9] 
    /*0003ba14*/ UBFX        R3, R3, #2, #3 
    /*0003ba18*/ BFI         R2, R3, #2, #3 
    /*0003ba1c*/ STRB        R2, [R4, #9] 
    /*0003ba20*/ LDRB        R3, [R5, #9] 
    /*0003ba24*/ UXTB        R2, R2 
    /*0003ba28*/ LSR         R3, R3, #5 
    /*0003ba2c*/ BFI         R2, R3, #5, #3 
    /*0003ba30*/ STRB        R2, [R4, #9] 
    /*0003ba34*/ LDRB        R0, [R5, #10] 
    V500CalcNRXV2AutoParam_x3ba38:
    /*0003ba38*/ ADD         R3, R4, #11 
    /*0003ba3c*/ ADD         SL, R5, #11 
    /*0003ba40*/ ADD         FP, R7, #11 
    /*0003ba44*/ STRB        R0, [R4, #10] 
    /*0003ba48*/ STR         R4, [SP, #60]               @ 0x3c 
    /*0003ba4c*/ MOV         R4, R3 
    /*0003ba50*/ ADD         R2, R5, #14 
    /*0003ba54*/ STR         R2, [SP, #12] 
    V500CalcNRXV2AutoParam_x3ba58:
    /*0003ba58*/ CMP         R6, R8 
    /*0003ba5c*/ LDRB        R2, [SL], #1 
    /*0003ba60*/ LDRB        IP, [FP], #1 
    /*0003ba64*/ BLS         V500CalcNRXV2AutoParam_x3ba8c
    /*0003ba68*/ CMP         R6, R9 
    /*0003ba6c*/ MOV         R3, R9 
    /*0003ba70*/ MOV         R1, R8 
    /*0003ba74*/ MOV         R0, R6 
    /*0003ba78*/ MOVCS       R2, IP 
    /*0003ba7c*/ BCS         V500CalcNRXV2AutoParam_x3ba8c
    /*0003ba80*/ STR         IP, [SP] 
    /*0003ba84*/ BL          0x000000000003ACAC 
    /*0003ba88*/ MOV         R2, R0 
    V500CalcNRXV2AutoParam_x3ba8c:
    /*0003ba8c*/ LDR         R3, [SP, #12] 
    /*0003ba90*/ STRB        R2, [R4], #1 
    /*0003ba94*/ CMP         SL, R3 
    /*0003ba98*/ BNE         V500CalcNRXV2AutoParam_x3ba58
    /*0003ba9c*/ CMP         R6, R8 
    /*0003baa0*/ LDR         R4, [SP, #60]               @ 0x3c 
    /*0003baa4*/ LDRB        R2, [R5, #14] 
    /*0003baa8*/ BLS         V500CalcNRXV2AutoParam_x3bbd4
    /*0003baac*/ CMP         R6, R9 
    /*0003bab0*/ LDRB        R3, [R7, #14] 
    /*0003bab4*/ BCC         V500CalcNRXV2AutoParam_x3bcf0
    /*0003bab8*/ STRB        R3, [R4, #14] 
    /*0003babc*/ CMP         R6, R8 
    /*0003bac0*/ LDRB        R3, [R7, #17] 
    /*0003bac4*/ LDRH        R2, [R4, #24] 
    /*0003bac8*/ LDRH        R1, [R4, #26] 
    /*0003bacc*/ STRB        R3, [R4, #17] 
    /*0003bad0*/ LDRB        R0, [R7, #20] 
    /*0003bad4*/ LDRH        R3, [R4, #28] 
    /*0003bad8*/ STRB        R0, [R4, #20] 
    /*0003badc*/ LDRB        R0, [R7, #15] 
    /*0003bae0*/ STRB        R0, [R4, #15] 
    /*0003bae4*/ LDRB        R0, [R7, #18] 
    /*0003bae8*/ STRB        R0, [R4, #18] 
    /*0003baec*/ LDRB        R0, [R7, #21] 
    /*0003baf0*/ STRB        R0, [R4, #21] 
    /*0003baf4*/ LDRB        R0, [R7, #16] 
    /*0003baf8*/ STRB        R0, [R4, #16] 
    /*0003bafc*/ LDRB        R0, [R7, #19] 
    /*0003bb00*/ STRB        R0, [R4, #19] 
    /*0003bb04*/ LDRB        R0, [R7, #22] 
    /*0003bb08*/ STRB        R0, [R4, #22] 
    /*0003bb0c*/ LDRH        R0, [R7, #24] 
    /*0003bb10*/ BFI         R2, R0, #0, #9 
    /*0003bb14*/ STRH        R2, [R4, #24] 
    /*0003bb18*/ LDRH        R0, [R7, #26] 
    /*0003bb1c*/ LDRB        R2, [R4, #25] 
    /*0003bb20*/ BFI         R1, R0, #0, #9 
    /*0003bb24*/ STRH        R1, [R4, #26] 
    /*0003bb28*/ LDRH        R1, [R7, #28] 
    /*0003bb2c*/ BFI         R3, R1, #0, #9 
    /*0003bb30*/ STRH        R3, [R4, #28] 
    /*0003bb34*/ LDRB        R3, [R5, #25] 
    /*0003bb38*/ LSR         R3, R3, #5 
    /*0003bb3c*/ BFI         R2, R3, #5, #3 
    /*0003bb40*/ STRB        R2, [R4, #25] 
    /*0003bb44*/ LDRB        R3, [R5, #25] 
    /*0003bb48*/ UXTB        R2, R2 
    /*0003bb4c*/ UBFX        R3, R3, #1, #3 
    /*0003bb50*/ BFI         R2, R3, #1, #3 
    /*0003bb54*/ STRB        R2, [R4, #25] 
    /*0003bb58*/ LDRB        R3, [R5, #27] 
    /*0003bb5c*/ LDRB        R1, [R4, #27] 
    /*0003bb60*/ UBFX        R3, R3, #1, #3 
    /*0003bb64*/ LDRB        R2, [R4, #29] 
    /*0003bb68*/ BFI         R1, R3, #1, #3 
    /*0003bb6c*/ STRB        R1, [R4, #27] 
    /*0003bb70*/ LDRB        R3, [R5, #29] 
    /*0003bb74*/ UBFX        R3, R3, #1, #3 
    /*0003bb78*/ BFI         R2, R3, #1, #3 
    /*0003bb7c*/ STRB        R2, [R4, #29] 
    /*0003bb80*/ LDRB        R3, [R5, #29] 
    /*0003bb84*/ UBFX        R3, R3, #4, #1 
    /*0003bb88*/ BLS         V500CalcNRXV2AutoParam_x3bca0
    /*0003bb8c*/ LDRB        IP, [R7, #29] 
    /*0003bb90*/ UXTB        R3, R2 
    /*0003bb94*/ LDRB        R1, [R4, #25] 
    /*0003bb98*/ UBFX        IP, IP, #4, #1 
    /*0003bb9c*/ LDRB        R2, [R4, #27] 
    /*0003bba0*/ BFI         R3, IP, #4, #1 
    /*0003bba4*/ STRB        R3, [R4, #29] 
    /*0003bba8*/ LDRB        R3, [R7, #25] 
    /*0003bbac*/ UBFX        R3, R3, #4, #1 
    /*0003bbb0*/ BFI         R1, R3, #4, #1 
    /*0003bbb4*/ STRB        R1, [R4, #25] 
    /*0003bbb8*/ LDRB        R3, [R7, #27] 
    /*0003bbbc*/ LSR         R3, R3, #5 
    /*0003bbc0*/ BFI         R2, R3, #5, #3 
    /*0003bbc4*/ STRB        R2, [R4, #27] 
    /*0003bbc8*/ LDRB        R0, [R7, #27] 
    /*0003bbcc*/ UBFX        R0, R0, #4, #1 
    /*0003bbd0*/ B           V500CalcNRXV2AutoParam_x3bcdc
    V500CalcNRXV2AutoParam_x3bbd4:
    /*0003bbd4*/ STRB        R2, [R4, #14] 
    /*0003bbd8*/ LDRB        R3, [R5, #17] 
    /*0003bbdc*/ LDRH        R2, [R4, #24] 
    /*0003bbe0*/ LDRH        R1, [R4, #26] 
    /*0003bbe4*/ STRB        R3, [R4, #17] 
    /*0003bbe8*/ LDRB        R0, [R5, #20] 
    /*0003bbec*/ LDRH        R3, [R4, #28] 
    /*0003bbf0*/ STRB        R0, [R4, #20] 
    /*0003bbf4*/ LDRB        R0, [R5, #15] 
    /*0003bbf8*/ STRB        R0, [R4, #15] 
    /*0003bbfc*/ LDRB        R0, [R5, #18] 
    /*0003bc00*/ STRB        R0, [R4, #18] 
    /*0003bc04*/ LDRB        R0, [R5, #21] 
    /*0003bc08*/ STRB        R0, [R4, #21] 
    /*0003bc0c*/ LDRB        R0, [R5, #16] 
    /*0003bc10*/ STRB        R0, [R4, #16] 
    /*0003bc14*/ LDRB        R0, [R5, #19] 
    /*0003bc18*/ STRB        R0, [R4, #19] 
    /*0003bc1c*/ LDRB        R0, [R5, #22] 
    /*0003bc20*/ STRB        R0, [R4, #22] 
    /*0003bc24*/ LDRH        R0, [R5, #24] 
    /*0003bc28*/ BFI         R2, R0, #0, #9 
    /*0003bc2c*/ STRH        R2, [R4, #24] 
    /*0003bc30*/ LDRH        R0, [R5, #26] 
    /*0003bc34*/ LDRB        R2, [R4, #25] 
    /*0003bc38*/ BFI         R1, R0, #0, #9 
    /*0003bc3c*/ STRH        R1, [R4, #26] 
    /*0003bc40*/ LDRH        R1, [R5, #28] 
    /*0003bc44*/ BFI         R3, R1, #0, #9 
    /*0003bc48*/ STRH        R3, [R4, #28] 
    /*0003bc4c*/ LDRB        R3, [R5, #25] 
    /*0003bc50*/ LSR         R3, R3, #5 
    /*0003bc54*/ BFI         R2, R3, #5, #3 
    /*0003bc58*/ STRB        R2, [R4, #25] 
    /*0003bc5c*/ LDRB        R3, [R5, #25] 
    /*0003bc60*/ UXTB        R2, R2 
    /*0003bc64*/ UBFX        R3, R3, #1, #3 
    /*0003bc68*/ BFI         R2, R3, #1, #3 
    /*0003bc6c*/ STRB        R2, [R4, #25] 
    /*0003bc70*/ LDRB        R3, [R5, #27] 
    /*0003bc74*/ LDRB        R1, [R4, #27] 
    /*0003bc78*/ UBFX        R3, R3, #1, #3 
    /*0003bc7c*/ LDRB        R2, [R4, #29] 
    /*0003bc80*/ BFI         R1, R3, #1, #3 
    /*0003bc84*/ STRB        R1, [R4, #27] 
    /*0003bc88*/ LDRB        R3, [R5, #29] 
    /*0003bc8c*/ UBFX        R3, R3, #1, #3 
    /*0003bc90*/ BFI         R2, R3, #1, #3 
    /*0003bc94*/ STRB        R2, [R4, #29] 
    /*0003bc98*/ LDRB        R3, [R5, #29] 
    /*0003bc9c*/ UBFX        R3, R3, #4, #1 
    V500CalcNRXV2AutoParam_x3bca0:
    /*0003bca0*/ LDRB        R2, [R4, #29] 
    /*0003bca4*/ LDRB        R1, [R4, #25] 
    /*0003bca8*/ BFI         R2, R3, #4, #1 
    /*0003bcac*/ STRB        R2, [R4, #29] 
    /*0003bcb0*/ LDRB        R3, [R5, #25] 
    /*0003bcb4*/ LDRB        R2, [R4, #27] 
    /*0003bcb8*/ UBFX        R3, R3, #4, #1 
    /*0003bcbc*/ BFI         R1, R3, #4, #1 
    /*0003bcc0*/ STRB        R1, [R4, #25] 
    /*0003bcc4*/ LDRB        R3, [R5, #27] 
    /*0003bcc8*/ LSR         R3, R3, #5 
    /*0003bccc*/ BFI         R2, R3, #5, #3 
    /*0003bcd0*/ STRB        R2, [R4, #27] 
    /*0003bcd4*/ LDRB        R0, [R5, #27] 
    /*0003bcd8*/ UBFX        R0, R0, #4, #1 
    V500CalcNRXV2AutoParam_x3bcdc:
    /*0003bcdc*/ LDRB        R3, [R4, #27] 
    /*0003bce0*/ BFI         R3, R0, #4, #1 
    /*0003bce4*/ STRB        R3, [R4, #27] 
    /*0003bce8*/ ADD         SP, SP, #20 
    /*0003bcec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    V500CalcNRXV2AutoParam_x3bcf0:
    /*0003bcf0*/ STR         R3, [SP] 
    /*0003bcf4*/ MOV         R1, R8 
    /*0003bcf8*/ MOV         R3, R9 
    /*0003bcfc*/ MOV         R0, R6 
    /*0003bd00*/ BL          0x000000000003ACAC 
    /*0003bd04*/ MOV         R3, R9 
    /*0003bd08*/ MOV         R1, R8 
    /*0003bd0c*/ STRB        R0, [R4, #14] 
    /*0003bd10*/ MOV         R0, R6 
    /*0003bd14*/ LDRB        IP, [R7, #17] 
    /*0003bd18*/ LDRB        R2, [R5, #17] 
    /*0003bd1c*/ STR         IP, [SP] 
    /*0003bd20*/ BL          0x000000000003ACAC 
    /*0003bd24*/ MOV         R3, R9 
    /*0003bd28*/ MOV         R1, R8 
    /*0003bd2c*/ STRB        R0, [R4, #17] 
    /*0003bd30*/ MOV         R0, R6 
    /*0003bd34*/ LDRB        IP, [R7, #20] 
    /*0003bd38*/ LDRB        R2, [R5, #20] 
    /*0003bd3c*/ STR         IP, [SP] 
    /*0003bd40*/ BL          0x000000000003ACAC 
    /*0003bd44*/ MOV         R3, R9 
    /*0003bd48*/ MOV         R1, R8 
    /*0003bd4c*/ STRB        R0, [R4, #20] 
    /*0003bd50*/ MOV         R0, R6 
    /*0003bd54*/ LDRB        IP, [R7, #15] 
    /*0003bd58*/ LDRB        R2, [R5, #15] 
    /*0003bd5c*/ STR         IP, [SP] 
    /*0003bd60*/ BL          0x000000000003ACAC 
    /*0003bd64*/ MOV         R3, R9 
    /*0003bd68*/ MOV         R1, R8 
    /*0003bd6c*/ STRB        R0, [R4, #15] 
    /*0003bd70*/ MOV         R0, R6 
    /*0003bd74*/ LDRB        IP, [R7, #18] 
    /*0003bd78*/ LDRB        R2, [R5, #18] 
    /*0003bd7c*/ STR         IP, [SP] 
    /*0003bd80*/ BL          0x000000000003ACAC 
    /*0003bd84*/ MOV         R3, R9 
    /*0003bd88*/ MOV         R1, R8 
    /*0003bd8c*/ STRB        R0, [R4, #18] 
    /*0003bd90*/ MOV         R0, R6 
    /*0003bd94*/ LDRB        IP, [R7, #21] 
    /*0003bd98*/ LDRB        R2, [R5, #21] 
    /*0003bd9c*/ STR         IP, [SP] 
    /*0003bda0*/ BL          0x000000000003ACAC 
    /*0003bda4*/ MOV         R3, R9 
    /*0003bda8*/ MOV         R1, R8 
    /*0003bdac*/ STRB        R0, [R4, #21] 
    /*0003bdb0*/ MOV         R0, R6 
    /*0003bdb4*/ LDRB        IP, [R7, #16] 
    /*0003bdb8*/ LDRB        R2, [R5, #16] 
    /*0003bdbc*/ STR         IP, [SP] 
    /*0003bdc0*/ BL          0x000000000003ACAC 
    /*0003bdc4*/ MOV         R3, R9 
    /*0003bdc8*/ MOV         R1, R8 
    /*0003bdcc*/ STRB        R0, [R4, #16] 
    /*0003bdd0*/ MOV         R0, R6 
    /*0003bdd4*/ LDRB        IP, [R7, #19] 
    /*0003bdd8*/ LDRB        R2, [R5, #19] 
    /*0003bddc*/ STR         IP, [SP] 
    /*0003bde0*/ BL          0x000000000003ACAC 
    /*0003bde4*/ MOV         R3, R9 
    /*0003bde8*/ MOV         R1, R8 
    /*0003bdec*/ STRB        R0, [R4, #19] 
    /*0003bdf0*/ MOV         R0, R6 
    /*0003bdf4*/ LDRB        R2, [R5, #22] 
    /*0003bdf8*/ LDRB        IP, [R7, #22] 
    /*0003bdfc*/ STR         IP, [SP] 
    /*0003be00*/ BL          0x000000000003ACAC 
    /*0003be04*/ MOV         R3, R9 
    /*0003be08*/ MOV         R1, R8 
    /*0003be0c*/ STRB        R0, [R4, #22] 
    /*0003be10*/ MOV         R0, R6 
    /*0003be14*/ LDRH        IP, [R7, #24] 
    /*0003be18*/ LDRH        R2, [R5, #24] 
    /*0003be1c*/ UBFX        IP, IP, #0, #9 
    /*0003be20*/ STR         IP, [SP] 
    /*0003be24*/ UBFX        R2, R2, #0, #9 
    /*0003be28*/ BL          0x000000000003ACAC 
    /*0003be2c*/ LDRH        R2, [R4, #24] 
    /*0003be30*/ MOV         R3, R9 
    /*0003be34*/ MOV         R1, R8 
    /*0003be38*/ BFI         R2, R0, #0, #9 
    /*0003be3c*/ STRH        R2, [R4, #24] 
    /*0003be40*/ LDRH        IP, [R7, #26] 
    /*0003be44*/ MOV         R0, R6 
    /*0003be48*/ LDRH        R2, [R5, #26] 
    /*0003be4c*/ UBFX        IP, IP, #0, #9 
    /*0003be50*/ STR         IP, [SP] 
    /*0003be54*/ UBFX        R2, R2, #0, #9 
    /*0003be58*/ BL          0x000000000003ACAC 
    /*0003be5c*/ LDRH        R2, [R4, #26] 
    /*0003be60*/ MOV         R3, R9 
    /*0003be64*/ MOV         R1, R8 
    /*0003be68*/ BFI         R2, R0, #0, #9 
    /*0003be6c*/ STRH        R2, [R4, #26] 
    /*0003be70*/ LDRH        IP, [R7, #28] 
    /*0003be74*/ MOV         R0, R6 
    /*0003be78*/ LDRH        R2, [R5, #28] 
    /*0003be7c*/ UBFX        IP, IP, #0, #9 
    /*0003be80*/ STR         IP, [SP] 
    /*0003be84*/ UBFX        R2, R2, #0, #9 
    /*0003be88*/ BL          0x000000000003ACAC 
    /*0003be8c*/ LDRH        R2, [R4, #28] 
    /*0003be90*/ LDRB        LR, [R4, #25] 
    /*0003be94*/ MOV         R3, R9 
    /*0003be98*/ LDRB        IP, [R4, #27] 
    /*0003be9c*/ MOV         R1, R8 
    /*0003bea0*/ BFI         R2, R0, #0, #9 
    /*0003bea4*/ STRH        R2, [R4, #28] 
    /*0003bea8*/ LDRB        R2, [R5, #25] 
    /*0003beac*/ MOV         R0, R6 
    /*0003beb0*/ LSR         R2, R2, #5 
    /*0003beb4*/ BFI         LR, R2, #5, #3 
    /*0003beb8*/ STRB        LR, [R4, #25] 
    /*0003bebc*/ LDRB        R2, [R5, #25] 
    /*0003bec0*/ UXTB        LR, LR 
    /*0003bec4*/ UBFX        R2, R2, #1, #3 
    /*0003bec8*/ BFI         LR, R2, #1, #3 
    /*0003becc*/ STRB        LR, [R4, #25] 
    /*0003bed0*/ LDRB        R2, [R5, #27] 
    /*0003bed4*/ UBFX        R2, R2, #1, #3 
    /*0003bed8*/ BFI         IP, R2, #1, #3 
    /*0003bedc*/ STRB        IP, [R4, #27] 
    /*0003bee0*/ LDRB        R2, [R5, #29] 
    /*0003bee4*/ LDRB        IP, [R4, #29] 
    /*0003bee8*/ UBFX        R2, R2, #1, #3 
    /*0003beec*/ BFI         IP, R2, #1, #3 
    /*0003bef0*/ STRB        IP, [R4, #29] 
    /*0003bef4*/ LDRB        R2, [R5, #29] 
    /*0003bef8*/ LDRB        IP, [R7, #29] 
    /*0003befc*/ UBFX        R2, R2, #4, #1 
    /*0003bf00*/ UBFX        IP, IP, #4, #1 
    /*0003bf04*/ STR         IP, [SP] 
    /*0003bf08*/ BL          0x000000000003ACAC 
    /*0003bf0c*/ LDRB        R2, [R4, #29] 
    /*0003bf10*/ MOV         R3, R9 
    /*0003bf14*/ MOV         R1, R8 
    /*0003bf18*/ BFI         R2, R0, #4, #1 
    /*0003bf1c*/ STRB        R2, [R4, #29] 
    /*0003bf20*/ LDRB        IP, [R7, #25] 
    /*0003bf24*/ MOV         R0, R6 
    /*0003bf28*/ LDRB        R2, [R5, #25] 
    /*0003bf2c*/ UBFX        IP, IP, #4, #1 
    /*0003bf30*/ STR         IP, [SP] 
    /*0003bf34*/ UBFX        R2, R2, #4, #1 
    /*0003bf38*/ BL          0x000000000003ACAC 
    /*0003bf3c*/ LDRB        R2, [R4, #25] 
    /*0003bf40*/ MOV         R3, R9 
    /*0003bf44*/ MOV         R1, R8 
    /*0003bf48*/ BFI         R2, R0, #4, #1 
    /*0003bf4c*/ STRB        R2, [R4, #25] 
    /*0003bf50*/ LDRB        IP, [R7, #27] 
    /*0003bf54*/ MOV         R0, R6 
    /*0003bf58*/ LDRB        R2, [R5, #27] 
    /*0003bf5c*/ LSR         IP, IP, #5 
    /*0003bf60*/ STR         IP, [SP] 
    /*0003bf64*/ LSR         R2, R2, #5 
    /*0003bf68*/ BL          0x000000000003ACAC 
    /*0003bf6c*/ LDRB        R2, [R4, #27] 
    /*0003bf70*/ MOV         R3, R9 
    /*0003bf74*/ MOV         R1, R8 
    /*0003bf78*/ BFI         R2, R0, #5, #3 
    /*0003bf7c*/ STRB        R2, [R4, #27] 
    /*0003bf80*/ LDRB        IP, [R7, #27] 
    /*0003bf84*/ MOV         R0, R6 
    /*0003bf88*/ LDRB        R2, [R5, #27] 
    /*0003bf8c*/ UBFX        IP, IP, #4, #1 
    /*0003bf90*/ STR         IP, [SP] 
    /*0003bf94*/ UBFX        R2, R2, #4, #1 
    /*0003bf98*/ BL          0x000000000003ACAC 
    /*0003bf9c*/ B           V500CalcNRXV2AutoParam_x3bcdc
    V500CalcNRXV2AutoParam_x3bfa0:
    /*0003bfa0*/ STR         IP, [SP] 
    /*0003bfa4*/ BL          0x000000000003ACAC 
    /*0003bfa8*/ MOV         R3, R9 
    /*0003bfac*/ MOV         R1, R8 
    /*0003bfb0*/ STRB        R0, [R4] 
    /*0003bfb4*/ MOV         R0, R6 
    /*0003bfb8*/ LDRB        IP, [R7, #1] 
    /*0003bfbc*/ LDRB        R2, [R5, #1] 
    /*0003bfc0*/ STR         IP, [SP] 
    /*0003bfc4*/ BL          0x000000000003ACAC 
    /*0003bfc8*/ MOV         R3, R9 
    /*0003bfcc*/ MOV         R1, R8 
    /*0003bfd0*/ STRB        R0, [R4, #1] 
    /*0003bfd4*/ MOV         R0, R6 
    /*0003bfd8*/ LDRB        IP, [R7, #2] 
    /*0003bfdc*/ LDRB        R2, [R5, #2] 
    /*0003bfe0*/ STR         IP, [SP] 
    /*0003bfe4*/ BL          0x000000000003ACAC 
    /*0003bfe8*/ MOV         R3, R9 
    /*0003bfec*/ MOV         R1, R8 
    /*0003bff0*/ STRB        R0, [R4, #2] 
    /*0003bff4*/ MOV         R0, R6 
    /*0003bff8*/ LDRB        IP, [R7, #3] 
    /*0003bffc*/ LDRB        R2, [R5, #3] 
    /*0003c000*/ STR         IP, [SP] 
    /*0003c004*/ BL          0x000000000003ACAC 
    /*0003c008*/ MOV         R3, R9 
    /*0003c00c*/ MOV         R1, R8 
    /*0003c010*/ STRB        R0, [R4, #3] 
    /*0003c014*/ MOV         R0, R6 
    /*0003c018*/ LDRH        IP, [R7, #4] 
    /*0003c01c*/ LDRH        R2, [R5, #4] 
    /*0003c020*/ UBFX        IP, IP, #0, #10 
    /*0003c024*/ STR         IP, [SP] 
    /*0003c028*/ UBFX        R2, R2, #0, #10 
    /*0003c02c*/ BL          0x000000000003ACAC 
    /*0003c030*/ LDRH        R2, [R4, #4] 
    /*0003c034*/ MOV         R3, R9 
    /*0003c038*/ MOV         R1, R8 
    /*0003c03c*/ BFI         R2, R0, #0, #10 
    /*0003c040*/ STRH        R2, [R4, #4] 
    /*0003c044*/ LDRB        IP, [R7, #6] 
    /*0003c048*/ MOV         R0, R6 
    /*0003c04c*/ LDRB        R2, [R5, #6] 
    /*0003c050*/ AND         IP, IP, #7 
    /*0003c054*/ STR         IP, [SP] 
    /*0003c058*/ AND         R2, R2, #7 
    /*0003c05c*/ BL          0x000000000003ACAC 
    /*0003c060*/ LDRB        R2, [R4, #6] 
    /*0003c064*/ MOV         R3, R9 
    /*0003c068*/ MOV         R1, R8 
    /*0003c06c*/ BFI         R2, R0, #0, #3 
    /*0003c070*/ STRB        R2, [R4, #6] 
    /*0003c074*/ LDRB        IP, [R7, #6] 
    /*0003c078*/ MOV         R0, R6 
    /*0003c07c*/ LDRB        R2, [R5, #6] 
    /*0003c080*/ LSR         IP, IP, #3 
    /*0003c084*/ STR         IP, [SP] 
    /*0003c088*/ LSR         R2, R2, #3 
    /*0003c08c*/ BL          0x000000000003ACAC 
    /*0003c090*/ LDRB        R2, [R4, #6] 
    /*0003c094*/ MOV         R3, R9 
    /*0003c098*/ MOV         R1, R8 
    /*0003c09c*/ BFI         R2, R0, #3, #5 
    /*0003c0a0*/ STRB        R2, [R4, #6] 
    /*0003c0a4*/ LDRB        R2, [R5, #7] 
    /*0003c0a8*/ MOV         R0, R6 
    /*0003c0ac*/ LDRB        IP, [R7, #7] 
    /*0003c0b0*/ AND         R2, R2, #7 
    /*0003c0b4*/ AND         IP, IP, #7 
    /*0003c0b8*/ STR         IP, [SP] 
    /*0003c0bc*/ BL          0x000000000003ACAC 
    /*0003c0c0*/ LDRB        R2, [R4, #7] 
    /*0003c0c4*/ MOV         R3, R9 
    /*0003c0c8*/ MOV         R1, R8 
    /*0003c0cc*/ BFI         R2, R0, #0, #3 
    /*0003c0d0*/ STRB        R2, [R4, #7] 
    /*0003c0d4*/ LDRB        IP, [R7, #7] 
    /*0003c0d8*/ MOV         R0, R6 
    /*0003c0dc*/ LDRB        R2, [R5, #7] 
    /*0003c0e0*/ LSR         IP, IP, #3 
    /*0003c0e4*/ STR         IP, [SP] 
    /*0003c0e8*/ LSR         R2, R2, #3 
    /*0003c0ec*/ BL          0x000000000003ACAC 
    /*0003c0f0*/ LDRB        R2, [R4, #7] 
    /*0003c0f4*/ MOV         R3, R9 
    /*0003c0f8*/ MOV         R1, R8 
    /*0003c0fc*/ BFI         R2, R0, #3, #5 
    /*0003c100*/ STRB        R2, [R4, #7] 
    /*0003c104*/ LDRB        IP, [R7, #8] 
    /*0003c108*/ MOV         R0, R6 
    /*0003c10c*/ LDRB        R2, [R5, #8] 
    /*0003c110*/ AND         IP, IP, #31 
    /*0003c114*/ STR         IP, [SP] 
    /*0003c118*/ AND         R2, R2, #31 
    /*0003c11c*/ BL          0x000000000003ACAC 
    /*0003c120*/ LDRB        R2, [R4, #8] 
    /*0003c124*/ MOV         R3, R9 
    /*0003c128*/ MOV         R1, R8 
    /*0003c12c*/ BFI         R2, R0, #0, #5 
    /*0003c130*/ STRB        R2, [R4, #8] 
    /*0003c134*/ LDRH        IP, [R7, #8] 
    /*0003c138*/ MOV         R0, R6 
    /*0003c13c*/ LDRH        R2, [R5, #8] 
    /*0003c140*/ UBFX        IP, IP, #5, #5 
    /*0003c144*/ STR         IP, [SP] 
    /*0003c148*/ UBFX        R2, R2, #5, #5 
    /*0003c14c*/ BL          0x000000000003ACAC 
    /*0003c150*/ LDRH        R2, [R4, #8] 
    /*0003c154*/ MOV         R3, R9 
    /*0003c158*/ MOV         R1, R8 
    /*0003c15c*/ BFI         R2, R0, #5, #5 
    /*0003c160*/ STRH        R2, [R4, #8] 
    /*0003c164*/ LDRB        IP, [R7, #9] 
    /*0003c168*/ MOV         R0, R6 
    /*0003c16c*/ LDRB        R2, [R5, #9] 
    /*0003c170*/ UBFX        IP, IP, #2, #3 
    /*0003c174*/ STR         IP, [SP] 
    /*0003c178*/ UBFX        R2, R2, #2, #3 
    /*0003c17c*/ BL          0x000000000003ACAC 
    /*0003c180*/ LDRB        R2, [R4, #9] 
    /*0003c184*/ MOV         R3, R9 
    /*0003c188*/ MOV         R1, R8 
    /*0003c18c*/ BFI         R2, R0, #2, #3 
    /*0003c190*/ STRB        R2, [R4, #9] 
    /*0003c194*/ LDRB        IP, [R7, #9] 
    /*0003c198*/ MOV         R0, R6 
    /*0003c19c*/ LDRB        R2, [R5, #9] 
    /*0003c1a0*/ LSR         IP, IP, #5 
    /*0003c1a4*/ STR         IP, [SP] 
    /*0003c1a8*/ LSR         R2, R2, #5 
    /*0003c1ac*/ BL          0x000000000003ACAC 
    /*0003c1b0*/ LDRB        R2, [R4, #9] 
    /*0003c1b4*/ MOV         R3, R9 
    /*0003c1b8*/ MOV         R1, R8 
    /*0003c1bc*/ BFI         R2, R0, #5, #3 
    /*0003c1c0*/ STRB        R2, [R4, #9] 
    /*0003c1c4*/ LDRB        IP, [R7, #10] 
    /*0003c1c8*/ MOV         R0, R6 
    /*0003c1cc*/ LDRB        R2, [R5, #10] 
    /*0003c1d0*/ STR         IP, [SP] 
    /*0003c1d4*/ BL          0x000000000003ACAC 
    /*0003c1d8*/ B           V500CalcNRXV2AutoParam_x3ba38
FUNC_END V500CalcNRXV2AutoParam


FUNC_BEGIN VI_DRV_SNAP_IsDiscardProFrame
    /*0003c1dc*/ MOVW        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVW_ABS_NC: .bss+0x133a8] 
    /*0003c1e0*/ MOVT        R3, #0                      @ g_pastPipeDrvCtx [R_ARM_MOVT_ABS: .bss+0x133a8] 
    /*0003c1e4*/ LDR         R0, [R3, R0, LSL #2] 
    /*0003c1e8*/ CMP         R0, #0 
    /*0003c1ec*/ ADDNE       R0, R0, #65536              @ 0x10000 
    /*0003c1f0*/ LDRNE       R0, [R0, #3060]             @ 0xbf4 
    /*0003c1f4*/ BX          LR 
FUNC_END VI_DRV_SNAP_IsDiscardProFrame


FUNC_BEGIN VI_DRV_SNAP_IsSendThisFrame
    /*0003c1f8*/ TST         R0, #6 
    /*0003c1fc*/ MOVNE       R0, #1 
    /*0003c200*/ MOVEQ       R0, #0 
    /*0003c204*/ BX          LR 
FUNC_END VI_DRV_SNAP_IsSendThisFrame


FUNC_BEGIN VI_DRV_SNAP_GetOnlineProDelayIntNum
    /*0003c208*/ ADD         R0, R0, #1 
    /*0003c20c*/ BX          LR 
FUNC_END VI_DRV_SNAP_GetOnlineProDelayIntNum


FUNC_BEGIN hi35xx_vi_remove
    /*0003c210*/ PUSH        {R4, LR} 
    /*0003c214*/ BL          0x000000000003C214          @ VI_ModExit [R_ARM_CALL: .text+0x12e4] 
    /*0003c218*/ MOVW        R1, #0                      @ g_pastViCapReg [R_ARM_MOVW_ABS_NC: .bss+0x13bc0] 
    /*0003c21c*/ MOVW        R3, #0                      @ g_pastViProcReg [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*0003c220*/ MOVT        R1, #0                      @ g_pastViCapReg [R_ARM_MOVT_ABS: .bss+0x13bc0] 
    /*0003c224*/ MOVT        R3, #0                      @ g_pastViProcReg [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*0003c228*/ MOV         R2, #0 
    /*0003c22c*/ MOV         R0, R2 
    /*0003c230*/ STR         R2, [R1] 
    /*0003c234*/ STR         R2, [R3] 
    /*0003c238*/ POP         {R4, PC} 
FUNC_END hi35xx_vi_remove


FUNC_BEGIN hi35xx_vi_probe
    /*0003c23c*/ PUSH        {R4, R5, LR} 
    /*0003c240*/ SUB         SP, SP, #28 
    /*0003c244*/ MOV         R3, #0 
    /*0003c248*/ MOV         R4, R0 
    /*0003c24c*/ MOV         R1, #10 
    /*0003c250*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12594] 
    /*0003c254*/ ADD         R0, SP, #4 
    /*0003c258*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12594] 
    /*0003c25c*/ BL          0x000000000003C25C          @ snprintf [R_ARM_CALL: +0x0] 
    /*0003c260*/ MOV         R1, #512                    @ 0x200 
    /*0003c264*/ MOV         R0, R4 
    /*0003c268*/ ADD         R5, R4, #16 
    /*0003c26c*/ ADD         R2, SP, #4 
    /*0003c270*/ BL          0x000000000003C270          @ osal_platform_get_resource_byname [R_ARM_CALL: +0x0] 
    /*0003c274*/ MOV         R1, R0 
    /*0003c278*/ MOV         R0, R5 
    /*0003c27c*/ BL          0x000000000003C27C          @ devm_ioremap_resource [R_ARM_CALL: +0x0] 
    /*0003c280*/ MOVW        R3, #0                      @ g_pastViCapReg [R_ARM_MOVW_ABS_NC: .bss+0x13bc0] 
    /*0003c284*/ MOVT        R3, #0                      @ g_pastViCapReg [R_ARM_MOVT_ABS: .bss+0x13bc0] 
    /*0003c288*/ CMN         R0, #4096                   @ 0x1000 
    /*0003c28c*/ STR         R0, [R3] 
    /*0003c290*/ BHI         hi35xx_vi_probe_x3c32c
    /*0003c294*/ ADD         R1, SP, #4 
    /*0003c298*/ MOV         R0, R4 
    /*0003c29c*/ BL          0x000000000003C29C          @ osal_platform_get_irq_byname [R_ARM_CALL: +0x0] 
    /*0003c2a0*/ MOVW        R3, #0                      @ g_astViCapIrqNum [R_ARM_MOVW_ABS_NC: .data+0x12c] 
    /*0003c2a4*/ MOVT        R3, #0                      @ g_astViCapIrqNum [R_ARM_MOVT_ABS: .data+0x12c] 
    /*0003c2a8*/ CMP         R0, #0 
    /*0003c2ac*/ STR         R0, [R3] 
    /*0003c2b0*/ BEQ         hi35xx_vi_probe_x3c350
    /*0003c2b4*/ MOV         R3, #0 
    /*0003c2b8*/ MOV         R1, #10 
    /*0003c2bc*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x125d8] 
    /*0003c2c0*/ ADD         R0, SP, #14 
    /*0003c2c4*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x125d8] 
    /*0003c2c8*/ BL          0x000000000003C2C8          @ snprintf [R_ARM_CALL: +0x0] 
    /*0003c2cc*/ MOV         R1, #512                    @ 0x200 
    /*0003c2d0*/ MOV         R0, R4 
    /*0003c2d4*/ ADD         R2, SP, #14 
    /*0003c2d8*/ BL          0x000000000003C2D8          @ osal_platform_get_resource_byname [R_ARM_CALL: +0x0] 
    /*0003c2dc*/ MOV         R1, R0 
    /*0003c2e0*/ MOV         R0, R5 
    /*0003c2e4*/ BL          0x000000000003C2E4          @ devm_ioremap_resource [R_ARM_CALL: +0x0] 
    /*0003c2e8*/ MOVW        R3, #0                      @ g_pastViProcReg [R_ARM_MOVW_ABS_NC: .bss+0x13bb8] 
    /*0003c2ec*/ MOVT        R3, #0                      @ g_pastViProcReg [R_ARM_MOVT_ABS: .bss+0x13bb8] 
    /*0003c2f0*/ CMN         R0, #4096                   @ 0x1000 
    /*0003c2f4*/ STR         R0, [R3] 
    /*0003c2f8*/ BHI         hi35xx_vi_probe_x3c32c
    /*0003c2fc*/ ADD         R1, SP, #14 
    /*0003c300*/ MOV         R0, R4 
    /*0003c304*/ BL          0x000000000003C304          @ osal_platform_get_irq_byname [R_ARM_CALL: +0x0] 
    /*0003c308*/ MOVW        R3, #0                      @ g_astViProcIrqNum [R_ARM_MOVW_ABS_NC: .data+0x128] 
    /*0003c30c*/ MOVT        R3, #0                      @ g_astViProcIrqNum [R_ARM_MOVT_ABS: .data+0x128] 
    /*0003c310*/ CMP         R0, #0 
    /*0003c314*/ STR         R0, [R3] 
    /*0003c318*/ BEQ         hi35xx_vi_probe_x3c334
    /*0003c31c*/ BL          0x000000000003C31C          @ VI_ModInit [R_ARM_CALL: .text+0x1164] 
    /*0003c320*/ ADDS        R0, R0, #0 
    /*0003c324*/ MOVNE       R0, #1 
    /*0003c328*/ RSB         R0, R0, #0 
    hi35xx_vi_probe_x3c32c:
    /*0003c32c*/ ADD         SP, SP, #28 
    /*0003c330*/ POP         {R4, R5, PC} 
    hi35xx_vi_probe_x3c334:
    /*0003c334*/ MOV         R0, R5 
    /*0003c338*/ MOVW        R1, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x125bc] 
    /*0003c33c*/ MOVT        R1, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x125bc] 
    /*0003c340*/ BL          0x000000000003C340          @ dev_err [R_ARM_CALL: +0x0] 
    /*0003c344*/ MVN         R0, #0 
    /*0003c348*/ ADD         SP, SP, #28 
    /*0003c34c*/ POP         {R4, R5, PC} 
    hi35xx_vi_probe_x3c350:
    /*0003c350*/ MOV         R0, R5 
    /*0003c354*/ MOVW        R1, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x125a0] 
    /*0003c358*/ MOVT        R1, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x125a0] 
    /*0003c35c*/ BL          0x000000000003C35C          @ dev_err [R_ARM_CALL: +0x0] 
    /*0003c360*/ MVN         R0, #0 
    /*0003c364*/ B           hi35xx_vi_probe_x3c32c
FUNC_END hi35xx_vi_probe


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .init.text
@ Size: 0xc
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN hi35xx_vi_driver_init
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x130] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x130] 
    hi35xx_vi_driver_init_x8:
    /*00000008*/ B           hi35xx_vi_driver_init_x8    @ osal_platform_driver_register [R_ARM_JUMP24: +0x0] 
FUNC_END hi35xx_vi_driver_init


FUNC_BEGIN init_module
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x130] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x130] 
    init_module_x8:
    /*00000008*/ B           init_module_x8              @ osal_platform_driver_register [R_ARM_JUMP24: +0x0] 
FUNC_END init_module


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .exit.text
@ Size: 0xc
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN hi35xx_vi_driver_exit
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x130] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x130] 
    hi35xx_vi_driver_exit_x8:
    /*00000008*/ B           hi35xx_vi_driver_exit_x8    @ osal_platform_driver_unregister [R_ARM_JUMP24: +0x0] 
FUNC_END hi35xx_vi_driver_exit


FUNC_BEGIN cleanup_module
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x130] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x130] 
    cleanup_module_x8:
    /*00000008*/ B           cleanup_module_x8           @ osal_platform_driver_unregister [R_ARM_JUMP24: +0x0] 
FUNC_END cleanup_module



@
@ -- FILES --
@

@ vpss.c
@ vpss_chn.c
@ vpss_ext.c
@ vpss_pic_queue.c
@ vpss_user.c
@ vpss_comm.c
@ vpss_hal_node_queue.c
@ vpss_drv.c
@ vpss_hal.c
@ vpss_split.c
@ vpss_3dnr.c
@ vpss_init.c
@ hi3516cv500_vpss.mod.c


unsigned char rodata[6224] = {
    /*0000*/ "VPSS_QueryVpssSelf\0\0",
    /*0014*/ "VPSS_CheckChnAttrForGdc\0",
    /*002c*/ "VPSS_WaitConditionCallBackEx\0\0\0\0",
    /*004c*/ "VpssDefCheckNullPtr\0",
    /*0060*/ "VpssDefCheckGrpId\0\0\0",
    /*0074*/ "VpssDefCheckChnId\0\0\0",
    /*0088*/ "VpssNotifyBind\0\0",
    /*0098*/ "VpssDefCheckExtChnId\0\0\0\0",
    /*00b0*/ "\x02\0\0\0",
    /*00b4*/ "\0\0\0\0",
    /*00b8*/ "\x01\0\0\0",
    /*00bc*/ "\0\0\0\0",
    /*00c0*/ "\x03\0\0\0",
    /*00c4*/ "VpssCheckBindInfo\0\0\0",
    /*00d8*/ "VpssPrepareHwInfo\0\0\0",
    /*00ec*/ "VpssCheckQueryRlt\0\0\0",
    /*0100*/ "VPSS_VI_PrepareTask\0",
    /*0114*/ "VPSS_VI_SubmitTask\0\0",
    /*0128*/ "VPSS_VI_StartTask\0\0\0",
    /*013c*/ "VPSS_GetChnVideoFormat\0\0",
    /*0154*/ "VpssNewUndo\0",
    /*0160*/ "VpssNewOrOldDo\0\0",
    /*0170*/ "VpssStartOneTask\0\0\0\0",
    /*0184*/ "VPSS_WakeUpCondition\0\0\0\0",
    /*019c*/ "VPSS_WaitConditionCallBack\0\0",
    /*01b8*/ "AbnormalVerifyAfterWait\0",
    /*01d0*/ "VpssReleaseCurResource\0\0",
    /*01e8*/ "VpssGrpIsr\0\0",
    /*01f4*/ "VPSS_LockInit\0\0\0",
    /*0204*/ "VPSS_GrpInit\0\0\0\0",
    /*0214*/ "VPSS_MkpCtxInit\0",
    /*0224*/ "VPSS_CreateGrp\0\0",
    /*0234*/ "VPSS_ReleaseOnlineVB\0\0\0\0",
    /*024c*/ "VPSS_DestroyGrp\0",
    /*025c*/ "VPSS_DestroyAllGdcChn\0\0\0",
    /*0274*/ "VPSS_ResetGrp\0\0\0",
    /*0284*/ "VpssIsLowDelayChn\0\0\0",
    /*0298*/ "VPSS_GetRegionLumaTimeout\0\0\0",
    /*02b4*/ "VPSS_IsPhyChnAttachFishEye\0\0",
    /*02d0*/ "VPSS_DestroyGdcChn\0\0",
    /*02e4*/ "VPSS_CreateGdcChn\0\0\0",
    /*02f8*/ "VPSS_EnableChn\0\0",
    /*0308*/ "VPSS_DisableChn\0",
    /*0318*/ "VPSS_SetGrpAttr\0",
    /*0328*/ "VPSS_GetGrpAttr\0",
    /*0338*/ "VPSS_SetChnAttr\0",
    /*0348*/ "VPSS_GetChnAttr\0",
    /*0358*/ "VPSS_SetGrpCropCfg\0\0",
    /*036c*/ "VPSS_GetGrpCropCfg\0\0",
    /*0380*/ "VPSS_SetChnCropCfg\0\0",
    /*0394*/ "VPSS_GetChnCropCfg\0\0",
    /*03a8*/ "VPSS_GetChnOutPutSize\0\0\0",
    /*03c0*/ "VPSS_SetChnRotationAttr\0",
    /*03d8*/ "VPSS_GetChnRotationAttr\0",
    /*03f0*/ "VPSS_SetChnRotationExAttr\0\0\0",
    /*040c*/ "VPSS_GetChnRotationExAttr\0\0\0",
    /*0428*/ "VPSS_SetChnLDCAttr\0\0",
    /*043c*/ "VPSS_GetChnLDCAttr\0\0",
    /*0450*/ "VPSS_SetChnSpreadAttr\0\0\0",
    /*0468*/ "VPSS_GetChnSpreadAttr\0\0\0",
    /*0480*/ "VPSS_CheckLowDelayInfo\0\0",
    /*0498*/ "VPSS_SetChnLowDelayAttr\0",
    /*04b0*/ "VPSS_GetChnLowDelayAttr\0",
    /*04c8*/ "VPSS_AttachVbPool\0\0\0",
    /*04dc*/ "VPSS_DetachVbPool\0\0\0",
    /*04f0*/ "VPSS_SetOnlineStartState\0\0\0\0",
    /*050c*/ "VPSS_StartGrp\0\0\0",
    /*051c*/ "VPSS_StopGrp\0\0\0\0",
    /*052c*/ "VPSS_GrpExit\0\0\0\0",
    /*053c*/ "VPSS_SetExtChnAttr\0\0",
    /*0550*/ "VPSS_GetExtChnAttr\0\0",
    /*0564*/ "VPSS_SetGrpNRXParam\0",
    /*0578*/ "VPSS_GetGrpNRXParam\0",
    /*058c*/ "VPSS_SetExtChnFisheyeAttr\0\0\0",
    /*05a8*/ "VPSS_GetExtChnFisheyeAttr\0\0\0",
    /*05c4*/ "VPSS_SetGrpFisheyeConfig\0\0\0\0",
    /*05e0*/ "VPSS_GetGrpFisheyeConfig\0\0\0\0",
    /*05fc*/ "VpssCheckFrameIntAttr\0\0\0",
    /*0614*/ "VPSS_SetGrpFrameInterruptAttr\0\0\0",
    /*0634*/ "VPSS_GetGrpFrameInterruptAttr\0\0\0",
    /*0654*/ "VPSS_EnableUserFrameRateCtrl\0\0\0\0",
    /*0674*/ "VPSS_DisableUserFrameRateCtrl\0\0\0",
    /*0694*/ "VPSS_SetChnAlign\0\0\0\0",
    /*06a8*/ "VPSS_GetChnAlign\0\0\0\0",
    /*06bc*/ "VpssFrmRateCtl\0\0",
    /*06cc*/ "VPSS_CheckDynamicRange\0\0",
    /*06e4*/ "VPSS_SendPic\0\0\0\0",
    /*06f4*/ "VPSS_RecvVpssSelfSendPic\0\0\0\0",
    /*0710*/ "VPSS_UserSendFrameTimeout\0\0\0",
    /*072c*/ "VPSS_CheckModParam\0\0",
    /*0740*/ "VPSS_SetModParam\0\0\0\0",
    /*0754*/ "VPSS_RegionLumaOSDTaskCallBack\0\0",
    /*0774*/ "VPSS_VgsJobCallBack\0",
    /*0788*/ "VPSS_VgsScaleBypassJobCallBack\0\0",
    /*07a8*/ "VpssChnSnapProc\0",
    /*07b8*/ "VPSS_CoverexTaskCallBack\0\0\0\0",
    /*07d4*/ "VPSS_MKP_PutVb\0\0",
    /*07e4*/ "VpssSendFail\0\0\0\0",
    /*07f4*/ "VpssSendLowDelayFrame\0\0\0",
    /*080c*/ "VpssGetTimeRef\0\0",
    /*081c*/ "VPSS_ProcSendPic\0\0\0\0",
    /*0830*/ "VPSS_VgsByPassTaskCallBack\0\0",
    /*084c*/ "VPSS_RegionLumaTaskCallBack\0",
    /*0868*/ "VPSS_GdcExtChnTaskCallBack\0\0",
    /*0884*/ "VPSS_IsVgsExist\0",
    /*0894*/ "VPSS_IsByPassVgs\0\0\0\0",
    /*08a8*/ "VPSS_AddByPassTask2Vgs\0\0",
    /*08c0*/ "VPSS_SubmitByPassJob2Vgs\0\0\0\0",
    /*08dc*/ "VPSS_AddCoverExTask\0",
    /*08f0*/ "VPSS_AddOSDTask\0",
    /*0900*/ "VPSS_AddGetRegionLumaTask\0\0\0",
    /*091c*/ "VPSS_SubmitSomeJob2Vgs\0\0",
    /*0934*/ "VPSS_SubmitFrame2Vgs\0\0\0\0",
    /*094c*/ "VPSS_GdcByPassTaskCallBack\0\0",
    /*0968*/ "VPSS_GdcLastTaskCallBack\0\0\0\0",
    /*0984*/ "VPSS_AddByPassTask2Gdc\0\0",
    /*099c*/ "VPSS_SubmitByPassJob2Gdc\0\0\0\0",
    /*09b8*/ "VPSS_SubmitSomeJob2Gdc\0\0",
    /*09d0*/ "VPSS_SubmitExtChnPic2Gdc\0\0\0\0",
    /*09ec*/ "VPSS_PreparePicInfo\0",
    /*0a00*/ "VPSS_ProcChnFrame\0\0\0",
    /*0a14*/ "VPSS_VgsScaleVgsByPassTaskCallBack\0\0",
    /*0a38*/ "VPSS_VgsScaleAddByPassTask2Vgs\0\0",
    /*0a58*/ "VPSS_VgsScaleSubmitByPassJob2Vgs\0\0\0\0",
    /*0a7c*/ "VPSS_VgsScale\0\0\0",
    /*0a8c*/ "VpssOnLineSendFrame\0",
    /*0aa0*/ "VpssPoll\0\0\0\0",
    /*0aac*/ "VpssIoctl\0\0\0",
    /*0ab8*/ "Vpss_Ioctl\0\0",
    /*0ac4*/ "\x84B\0\0",
    /*0ac8*/ "\x8cB\0\0",
    /*0acc*/ "\x94B\0\0",
    /*0ad0*/ "\x9cB\0\0",
    /*0ad4*/ "\xa0B\0\0",
    /*0ad8*/ "`B\0\0",
    /*0adc*/ "hB\0\0",
    /*0ae0*/ "tB\0\0",
    /*0ae4*/ "\x80B\0\0",
    /*0ae8*/ "Z\0\0\0",
    /*0aec*/ "\xb4\0\0\0",
    /*0af0*/ "\x0e\x01\0\0",
    /*0af4*/ "LB\0\0",
    /*0af8*/ "PB\0\0",
    /*0afc*/ "XB\0\0",
    /*0b00*/ "4B\0\0",
    /*0b04*/ "<B\0\0",
    /*0b08*/ "DB\0\0",
    /*0b0c*/ " B\0\0",
    /*0b10*/ "$B\0\0",
    /*0b14*/ "\x04,\0\0",
    /*0b18*/ "(B\0\0",
    /*0b1c*/ "VpssCleanPicQueue\0\0\0",
    /*0b30*/ "VpssReleaseBusyQueue\0\0\0\0",
    /*0b48*/ "VpssPutVb\0\0\0",
    /*0b54*/ "VpssGetVb\0\0\0",
    /*0b60*/ "VpssUserListCreate\0\0",
    /*0b74*/ "VpssUserListGetBusy\0",
    /*0b88*/ "VpssUserGetGrpFrame\0",
    /*0b9c*/ "VpssUserCurPicIsEmpty\0\0\0",
    /*0bb4*/ "VpssUserReleaseGrpFrame\0",
    /*0bcc*/ "VpssUserGetFrame\0\0\0\0",
    /*0be0*/ "VpssUserReleaseFrame\0\0\0\0",
    /*0bf8*/ "VpssFakeQuery\0\0\0",
    /*0c08*/ "VpssFakeQueryStep1\0\0",
    /*0c1c*/ "VpssFakeQueryStep2\0\0",
    /*0c30*/ "VPSS_GetVpssVgstScaleSize\0\0\0",
    /*0c4c*/ "VpssQuery\0\0\0",
    /*0c58*/ "Vpss_AddExtChnVGSTask\0\0\0",
    /*0c70*/ "VpssSendPicToExtChn\0",
    /*0c84*/ "VpssFakeSend\0\0\0\0",
    /*0c94*/ "VpssExtChnCallback\0\0",
    /*0ca8*/ "VpssOnLineCcIntErr\0\0",
    /*0cbc*/ "VpssOnLineEofIntErr\0",
    /*0cd0*/ "VpssCfgLostErrProcess\0\0\0",
    /*0ce8*/ "VPSS_COMM_DevInit\0\0\0",
    /*0cfc*/ "VPSS_COMM_StartWaitList\0",
    /*0d14*/ "VPSS_VI_ProcessNode\0",
    /*0d28*/ "VPSS_VI_ListInt\0",
    /*0d38*/ "VPSS_COMM_HalListInt\0\0\0\0",
    /*0d50*/ "VPSS_COMM_HalLowdelayInt\0\0\0\0",
    /*0d6c*/ "VPSS_COMM_OfflineIrqProc\0\0\0\0",
    /*0d88*/ "VPSS_HAL_NodeQueueGetBusy\0\0\0",
    /*0da4*/ "VPSS_HAL_NodeQueueGetProc\0\0\0",
    /*0dc0*/ "VPSS_DRV_CheckRgnChnCapa\0\0\0\0",
    /*0ddc*/ "VPSS_DRV_FuncPreFilter\0\0",
    /*0df4*/ "VPSS_IsReleaseBuffer\0\0\0\0",
    /*0e0c*/ "VPSS_DRV_PutVb\0\0",
    /*0e1c*/ "VPSS_DRV_GetVb\0\0",
    /*0e2c*/ "VPSS_DRV_GetOsd\0",
    /*0e3c*/ "VPSS_DRV_PutOsd\0",
    /*0e4c*/ "VPSS_DRV_GetCover\0\0\0",
    /*0e60*/ "VPSS_DRV_PutCover\0\0\0",
    /*0e74*/ "VPSS_DRV_CheckAspectRatio\0\0\0",
    /*0e90*/ "VPSS_DRV_CheckChnStaticAttrForGdc\0\0\0",
    /*0eb4*/ "VPSS_DRV_CheckChnLdcAttr\0\0\0\0",
    /*0ed0*/ "VPSS_DRV_GetChnLDCAttrUse\0\0\0",
    /*0eec*/ "VPSS_DRV_CheckChnRotateExAttr\0\0\0",
    /*0f0c*/ "VPSS_DRV_CheckChnSpreadAttr\0",
    /*0f28*/ "VPSS_DRV_CheckExtChnFishEyeAttr\0",
    /*0f48*/ "VPSS_DRV_GetExtChnFisheyeAttr\0\0\0",
    /*0f68*/ "VPSS_DRV_CheckExtFisheyeCapacity\0\0\0\0",
    /*0f8c*/ "VPSS_DRV_MallocNrBuffer\0",
    /*0fa4*/ "VPSS_DRV_MallocResourceBuffer\0\0\0",
    /*0fc4*/ "VPSS_DRV_CommCrop\0\0\0",
    /*0fd8*/ "VPSS_DRV_CheckCropPosition\0\0",
    /*0ff4*/ "VPSS_DRV_CheckFrameRate\0",
    /*100c*/ "VPSS_DRV_CheckGrpID\0",
    /*1020*/ "VPSS_DRV_CheckGrpAttr\0\0\0",
    /*1038*/ "VPSS_DRV_Check3DNRAttr\0\0",
    /*1050*/ "VPSS_DRV_CheckGrpStaticAttr\0",
    /*106c*/ "VPSS_DRV_CheckChnRotate\0",
    /*1084*/ "VPSS_DRV_CheckLuma\0\0",
    /*1098*/ "VPSS_DRV_CheckChnScale\0\0",
    /*10b0*/ "h\x9a\0\0",
    /*10b4*/ "t\x9a\0\0",
    /*10b8*/ "\x0cn\0\0",
    /*10bc*/ "\x80\x9a\0\0",
    /*10c0*/ "\x8c\x9a\0\0",
    /*10c4*/ "\x0cn\0\0",
    /*10c8*/ "\x0cn\0\0",
    /*10cc*/ "\x0cn\0\0",
    /*10d0*/ "\x0cn\0\0",
    /*10d4*/ "\x0cn\0\0",
    /*10d8*/ "\x0cn\0\0",
    /*10dc*/ "\x0cn\0\0",
    /*10e0*/ "\x0cn\0\0",
    /*10e4*/ "\x0cn\0\0",
    /*10e8*/ "\x98\x9a\0\0",
    /*10ec*/ "VPSS_DRV_CheckChnPixFormat\0\0",
    /*1108*/ "VPSS_DRV_CheckChnAttr\0\0\0",
    /*1120*/ "VPSS_DRV_CheckPixelFormat\0\0\0",
    /*113c*/ "VPSS_DRV_Check3dnrArea\0\0",
    /*1154*/ "VPSS_DRV_CheckSlaveSplitLimit\0\0\0",
    /*1174*/ "VPSS_DRV_GetIspRtISO\0\0\0\0",
    /*118c*/ "VPSS_DRV_PrepareNRxV2Param\0\0",
    /*11a8*/ "VPSS_DRV_Prepare3dnrInfo\0\0\0\0",
    /*11c4*/ "VPSS_DRV_CheckMosaicCfg\0",
    /*11dc*/ "VPSS_DRV_GetRgnGrpMosaic\0\0\0\0",
    /*11f8*/ "VPSS_DRV_CheckInputPixelFmt\0",
    /*1214*/ "VPSS_DRV_CheckImageAttr\0",
    /*122c*/ "VPSS_DRV_CheckGrpNRXVer\0",
    /*1244*/ "VPSS_DRV_CheckIEy\0\0\0",
    /*1258*/ "VPSS_DRV_CheckSFy\0\0\0",
    /*126c*/ "VPSS_DRV_CheckTFy\0\0\0",
    /*1280*/ "VPSS_DRV_CheckMDy\0\0\0",
    /*1294*/ "VPSS_DRV_CheckGrpNRXVideoParam\0\0",
    /*12b4*/ "VPSS_DRV_CopyNRXAutoParamFromUser\0\0\0",
    /*12d8*/ "VPSS_DRV_CheckGrpNRXParam\0\0\0",
    /*12f4*/ "VPSS_DRV_GetGrpNRXParam\0",
    /*130c*/ "VPSS_DRV_CheckExtChnAttr\0\0\0\0",
    /*1328*/ "VPSS_DRV_ChnCalcCrop\0\0\0\0",
    /*1340*/ "VPSS_DRV_GrpCalCrop\0",
    /*1354*/ "VPSS_DRV_CheckVpssCapa\0\0",
    /*136c*/ "VPSS_DRV_CaculateSplitCfg\0\0\0",
    /*1388*/ "VPSS_DRV_ReadBusErrProc\0",
    /*13a0*/ "VPSS_DRV_WriteBusErrProc\0\0\0\0",
    /*13bc*/ "VPSS_DRV_IsWrongInt\0",
    /*13d0*/ "VPSS_DRV_MallocModelBuf\0",
    /*13e8*/ "GenSclCfg\0\0\0",
    /*13f4*/ "VpssDrvGetFrmVbBlk\0\0",
    /*1408*/ "VPSS_DRV_PrepareVB\0\0",
    /*141c*/ "\x04\0\0\0",
    /*1420*/ "\x03\0\0\0",
    /*1424*/ "\0\0\0\0",
    /*1428*/ "\x04\0\0\0",
    /*142c*/ "\x03\0\0\0",
    /*1430*/ "\0\0\0\0",
    /*1434*/ "\0\0\0\0",
    /*1438*/ "\0\0\0\0",
    /*143c*/ "\0\0\0\0",
    /*1440*/ "\0\0\0\0",
    /*1444*/ "\0\0\0\0",
    /*1448*/ "\0\0\0\0",
    /*144c*/ "\0\0\0\0",
    /*1450*/ "\0\0\0\0",
    /*1454*/ "\x02\0\0\0",
    /*1458*/ "\x01\0\0\0",
    /*145c*/ "\0\0\0\0",
    /*1460*/ "\0\0\0\0",
    /*1464*/ "\x01\0\0\0",
    /*1468*/ "\0\0\0\0",
    /*146c*/ "\0\0\0\0",
    /*1470*/ "\0\0\0\0",
    /*1474*/ "\0\0\0\0",
    /*1478*/ "\0\0\0\0",
    /*147c*/ "\0\0\0\0",
    /*1480*/ "\0\0\0\0",
    /*1484*/ "\0\0\0\0",
    /*1488*/ "\0\0\0\0",
    /*148c*/ "\0\0\0\0",
    /*1490*/ "\x02\0\0\0",
    /*1494*/ "VPSS_DRV_RequestIrq\0",
    /*14a8*/ "VPSS_DRV_CheckQuadrangleAttr\0\0\0\0",
    /*14c8*/ "VPSS_DRV_CheckLowDelayInfo\0\0",
    /*14e4*/ "VPSS_DRV_CheckCoverAttr\0",
    /*14fc*/ "VPSS_DRV_CheckMosaicAttr\0\0\0\0",
    /*1518*/ "VpssDrvOnLinePremFrame\0\0",
    /*1530*/ "VpssDrvOfflinePremFrame\0",
    /*1548*/ "VPSS_DRV_GetRgnCapacity\0",
    /*1560*/ "VPSS_DRV_RegisterRgnCapacity\0\0\0\0",
    /*1580*/ "VPSS_DRV_IsChnSurpport\0\0",
    /*1598*/ "VPSS_DRV_IsIpAvailable\0\0",
    /*15b0*/ "VPSS_DRV_OnlineSetFrameIntAttr\0\0",
    /*15d0*/ "VPSS_DRV_IsGdcExist\0",
    /*15e4*/ "VPSS_DRV_Put_VbForVgs\0\0\0",
    /*15fc*/ "\0\0\0\0",
    /*1600*/ "\x01\0\0\0",
    /*1604*/ "\x02\0\0\0",
    /*1608*/ "\0\0\0\0",
    /*160c*/ "\x90\x08\0\0",
    /*1610*/ "\0\x18\0\0",
    /*1614*/ "\0!\0\0",
    /*1618*/ "\0$\0\0",
    /*161c*/ "\0%\0\0",
    /*1620*/ "\0&\0\0",
    /*1624*/ "\0*\0\0",
    /*1628*/ "\0@\0\0",
    /*162c*/ "\0A\0\0",
    /*1630*/ "VPSS_HAL_SetChnImgSize\0\0",
    /*1648*/ "VPSSSplitAndCrop\0\0\0\0",
    /*165c*/ "GetSADiThr\0\0",
    /*1668*/ "SetPE0\0\0",
    /*1670*/ "SetSFi\0\0",
    /*1678*/ "SetSFk\0\0",
    /*1680*/ "\0\x05\x06\x07\x05\x05\x05\x05V16cv500MapNRx\0\0",
    /*1698*/ "\x08\x08\x07\x06\x05\x04\x03\x02\x01\x01\x01\x01\x01\x01\x01\x01\x02\x01\x01\x01\x01\x01\0\0",
    /*16b0*/ "\0\0\0\0",
    /*16b4*/ "\0\0\0\0",
    /*16b8*/ "\xff\xff\0\0",
    /*16bc*/ "U\xff\0\0",
    /*16c0*/ "U\xfa\0\0",
    /*16c4*/ "P\xfa\0\0",
    /*16c8*/ "\0\0\0\0",
    /*16cc*/ "\0\0\0\0",
    /*16d0*/ "\0\0\0\0",
    /*16d4*/ "\0\0\0\0",
    /*16d8*/ "\0\0\0\0",
    /*16dc*/ "\0\0\0\0",
    /*16e0*/ "\0\0\0\0",
    /*16e4*/ "\0\0\0\0",
    /*16e8*/ "\0\0\0\0",
    /*16ec*/ "\0\0\0\0",
    /*16f0*/ "\0\0\0\0",
    /*16f4*/ "\0\0\0\0",
    /*16f8*/ "\0\0\0\0",
    /*16fc*/ "\0\0\0\0",
    /*1700*/ "\0\0\0\0",
    /*1704*/ "\0\0\0\0",
    /*1708*/ "hisilicon,hisi-vpss\0",
    /*171c*/ "\0\0\0\0",
    /*1720*/ "\0\0\0\0",
    /*1724*/ "\0\0\0\0",
    /*1728*/ "\0\0\0\0",
    /*172c*/ "\0\0\0\0",
    /*1730*/ "\0\0\0\0",
    /*1734*/ "\0\0\0\0",
    /*1738*/ "\0\0\0\0",
    /*173c*/ "\0\0\0\0",
    /*1740*/ "\0\0\0\0",
    /*1744*/ "\0\0\0\0",
    /*1748*/ "\0\0\0\0",
    /*174c*/ "\0\0\0\0",
    /*1750*/ "\0\0\0\0",
    /*1754*/ "\0\0\0\0",
    /*1758*/ "\0\0\0\0",
    /*175c*/ "\0\0\0\0",
    /*1760*/ "\0\0\0\0",
    /*1764*/ "\0\0\0\0",
    /*1768*/ "\0\0\0\0",
    /*176c*/ "\0\0\0\0",
    /*1770*/ "\0\0\0\0",
    /*1774*/ "\0\0\0\0",
    /*1778*/ "\0\0\0\0",
    /*177c*/ "\0\0\0\0",
    /*1780*/ "\0\0\0\0",
    /*1784*/ "\0\0\0\0",
    /*1788*/ "\0\0\0\0",
    /*178c*/ "\0\0\0\0",
    /*1790*/ "\0\0\0\0",
    /*1794*/ "\0\0\0\0",
    /*1798*/ "\0\0\0\0",
    /*179c*/ "\0\0\0\0",
    /*17a0*/ "\0\0\0\0",
    /*17a4*/ "\0\0\0\0",
    /*17a8*/ "\0\0\0\0",
    /*17ac*/ "\0\0\0\0",
    /*17b0*/ "\0\0\0\0",
    /*17b4*/ "\0\0\0\0",
    /*17b8*/ "\0\0\0\0",
    /*17bc*/ "\0\0\0\0",
    /*17c0*/ "\0\0\0\0",
    /*17c4*/ "\0\0\0\0",
    /*17c8*/ "\0\0\0\0",
    /*17cc*/ "\0\0\0\0",
    /*17d0*/ "\0\0\0\0",
    /*17d4*/ "\0\0\0\0",
    /*17d8*/ "\0\0\0\0",
    /*17dc*/ "\0\0\0\0",
    /*17e0*/ "\0\0\0\0",
    /*17e4*/ "\0\0\0\0",
    /*17e8*/ "\0\0\0\0",
    /*17ec*/ "\0\0\0\0",
    /*17f0*/ "\0\0\0\0",
    /*17f4*/ "\0\0\0\0",
    /*17f8*/ "\0\0\0\0",
    /*17fc*/ "\0\0\0\0",
    /*1800*/ "\0\0\0\0",
    /*1804*/ "\0\0\0\0",
    /*1808*/ "\0\0\0\0",
    /*180c*/ "\0\0\0\0",
    /*1810*/ "\0\0\0\0",
    /*1814*/ "\0\0\0\0",
    /*1818*/ "\0\0\0\0",
    /*181c*/ "\0\0\0\0",
    /*1820*/ "\0\0\0\0",
    /*1824*/ "\0\0\0\0",
    /*1828*/ "\0\0\0\0",
    /*182c*/ "\0\0\0\0",
    /*1830*/ "\0\0\0\0",
    /*1834*/ "\0\0\0\0",
    /*1838*/ "\0\0\0\0",
    /*183c*/ "\0\0\0\0",
    /*1840*/ "\0\0\0\0",
    /*1844*/ "\0\0\0\0",
    /*1848*/ "\0\0\0\0",
    /*184c*/ "\0\0\0\0",
    /*1850*/ ""
};

unsigned char rel.rodata[272] = {
    /*0000*/ "\xc4\n\0\0",
    /*0004*/ "\x02\x06\0\0",
    /*0008*/ "\xc8\n\0\0",
    /*000c*/ "\x02\x06\0\0",
    /*0010*/ "\xcc\n\0\0",
    /*0014*/ "\x02\x06\0\0",
    /*0018*/ "\xd0\n\0\0",
    /*001c*/ "\x02\x06\0\0",
    /*0020*/ "\xd4\n\0\0",
    /*0024*/ "\x02\x06\0\0",
    /*0028*/ "\xd8\n\0\0",
    /*002c*/ "\x02\x06\0\0",
    /*0030*/ "\xdc\n\0\0",
    /*0034*/ "\x02\x06\0\0",
    /*0038*/ "\xe0\n\0\0",
    /*003c*/ "\x02\x06\0\0",
    /*0040*/ "\xe4\n\0\0",
    /*0044*/ "\x02\x06\0\0",
    /*0048*/ "\xf4\n\0\0",
    /*004c*/ "\x02\x06\0\0",
    /*0050*/ "\xf8\n\0\0",
    /*0054*/ "\x02\x06\0\0",
    /*0058*/ "\xfc\n\0\0",
    /*005c*/ "\x02\x06\0\0",
    /*0060*/ "\0\x0b\0\0",
    /*0064*/ "\x02\x06\0\0",
    /*0068*/ "\x04\x0b\0\0",
    /*006c*/ "\x02\x06\0\0",
    /*0070*/ "\x08\x0b\0\0",
    /*0074*/ "\x02\x06\0\0",
    /*0078*/ "\x0c\x0b\0\0",
    /*007c*/ "\x02\x06\0\0",
    /*0080*/ "\x10\x0b\0\0",
    /*0084*/ "\x02\x06\0\0",
    /*0088*/ "\x14\x0b\0\0",
    /*008c*/ "\x02\x06\0\0",
    /*0090*/ "\x18\x0b\0\0",
    /*0094*/ "\x02\x06\0\0",
    /*0098*/ "\xb0\x10\0\0",
    /*009c*/ "\x02\x06\0\0",
    /*00a0*/ "\xb4\x10\0\0",
    /*00a4*/ "\x02\x06\0\0",
    /*00a8*/ "\xb8\x10\0\0",
    /*00ac*/ "\x02\x06\0\0",
    /*00b0*/ "\xbc\x10\0\0",
    /*00b4*/ "\x02\x06\0\0",
    /*00b8*/ "\xc0\x10\0\0",
    /*00bc*/ "\x02\x06\0\0",
    /*00c0*/ "\xc4\x10\0\0",
    /*00c4*/ "\x02\x06\0\0",
    /*00c8*/ "\xc8\x10\0\0",
    /*00cc*/ "\x02\x06\0\0",
    /*00d0*/ "\xcc\x10\0\0",
    /*00d4*/ "\x02\x06\0\0",
    /*00d8*/ "\xd0\x10\0\0",
    /*00dc*/ "\x02\x06\0\0",
    /*00e0*/ "\xd4\x10\0\0",
    /*00e4*/ "\x02\x06\0\0",
    /*00e8*/ "\xd8\x10\0\0",
    /*00ec*/ "\x02\x06\0\0",
    /*00f0*/ "\xdc\x10\0\0",
    /*00f4*/ "\x02\x06\0\0",
    /*00f8*/ "\xe0\x10\0\0",
    /*00fc*/ "\x02\x06\0\0",
    /*0100*/ "\xe4\x10\0\0",
    /*0104*/ "\x02\x06\0\0",
    /*0108*/ "\xe8\x10\0\0",
    /*010c*/ "\x02\x06\0\0",
    /*0110*/ ""
};

unsigned char rodata.str1.4[40188] = {
    /*0000*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:vpss only support bind to VPSS user mode chn!\n\0\0\0",
    /*0054*/ "[Func]:%s [Line]:%d [Info]:Grp(%d) Chn(%d) VideoFormat(%d) err!\n\0\0\0\0",
    /*0098*/ "[Func]:%s [Line]:%d [Info]:Grp(%d) Chn(%d) not support compress!\n\0\0\0",
    /*00dc*/ "[Func]:%s [Line]:%d [Info]:Null ptr!\n\0\0\0",
    /*0104*/ "[Func]:%s [Line]:%d [Info]:GrpId err!\n\0\0",
    /*012c*/ "[Func]:%s [Line]:%d [Info]:ChnId err!\n\0\0",
    /*0154*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:vpss unexist!\n\0\0\0",
    /*0188*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:no bind!!\n\0\0\0",
    /*01b8*/ "pstSelPic != HI_NULL\0\0\0\0",
    /*01d0*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*0210*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d]Check query failed!\n\0\0\0\0",
    /*0250*/ "pstNode\0",
    /*0258*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:vpss busy!\n\0\0",
    /*0288*/ "[Func]:%s [Line]:%d [Info]:work mode should be VI_OFFLINE_VPSS_ONLINE!\n\0",
    /*02d0*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:vpss destroying!\n\0\0\0\0",
    /*0308*/ "[Func]:%s [Line]:%d [Info]:New undo, return!\n\0\0\0",
    /*0338*/ "pstPic == pstCtx->pstCurPic[VPSSID][i]\0\0",
    /*0360*/ "HI_NULL != pstPic\0\0\0",
    /*0374*/ "[Func]:%s [Line]:%d [Info]:Sub VB fail!\n\0\0\0\0",
    /*03a0*/ "[Func]:%s [Line]:%d [Info]:[grp%d]No cur pic!\n\0\0",
    /*03d0*/ "[Func]:%s [Line]:%d [Info]:[grp%d]No cur pic or backup pic!\n\0\0\0\0",
    /*0410*/ "pstCtx->pstCurPic[VPSSID][i] == pstPicTmp\0\0\0",
    /*043c*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:work mode should be offline!\n\0\0\0\0",
    /*0480*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:vpss is destroying or resetting!\n\0\0\0\0",
    /*04c8*/ "[Func]:%s [Line]:%d [Info]:no hal node!\n\0\0\0\0",
    /*04f4*/ "[Func]:%s [Line]:%d [Info]:Get luma fail!\n\0\0",
    /*0520*/ "[Func]:%s [Line]:%d [Info]:Vpss destroying!\n\0\0\0\0",
    /*0550*/ "[Func]:%s [Line]:%d [Info]:Vpss resetting!\n\0",
    /*057c*/ "[Func]:%s [Line]:%d [Info]:Vpss not started!\n\0\0\0",
    /*05ac*/ "[Func]:%s [Line]:%d [Info]:Normal Wakeup\n\0\0\0",
    /*05d8*/ "[Func]:%s [Line]:%d [Info]:grp%d unexist!\n\0\0",
    /*0604*/ "[Func]:%s [Line]:%d [Info]:grp%d recreated!\n\0\0\0\0",
    /*0634*/ "[Func]:%s [Line]:%d [Info]:grp%d destroying!\n\0\0\0",
    /*0664*/ "[Func]:%s [Line]:%d [Info]:grp%d resetting!\n\0\0\0\0",
    /*0694*/ "[Func]:%s [Line]:%d [Info]:gpr%d not started!\n\0\0",
    /*06c4*/ "HI_TRUE == pstCtx->bDo[VPSSID]\0\0",
    /*06e4*/ "[Func]:%s [Line]:%d [Info]:Discard frame!\n\0\0",
    /*0710*/ "[Func]:%s [Line]:%d [Info]:Discard the ref snap frame when the 3dnr type is VPSS_NR_TYPE_SNAP. \n\0\0\0\0",
    /*0774*/ "vpss lock init failed!\n\0",
    /*078c*/ "0\0\0\0",
    /*0790*/ "[Func]:%s [Line]:%d [Info]:Init failed!\n\0\0\0\0",
    /*07bc*/ "[Func]:%s [Line]:%d [Info]:Register sender failed!\n\0",
    /*07f0*/ "[Func]:%s [Line]:%d [Info]:Register receiver failed!\n\0\0\0",
    /*0828*/ "[Func]:%s [Line]:%d [Info]:Register mod param failed!\n\0\0",
    /*0860*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:malloc fail!\n\0\0\0\0",
    /*0894*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:creat picQueue fail!\n\0\0\0\0",
    /*08d0*/ "[Func]:%s [Line]:%d [Info]:Vpss not init!\n\0\0",
    /*08fc*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:exist!\n\0\0",
    /*0928*/ "[Func]:%s [Line]:%d [Info]:No sys ko!\n\0\0",
    /*0950*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:init fail!\n\0\0",
    /*0980*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:creat Model fail!\n\0\0\0",
    /*09b8*/ "[Func]:%s [Line]:%d [Info]:Chn:%d release VB timeout!\n\0\0",
    /*09f0*/ "[Func]:%s [Line]:%d [Info]:grp %d must be stopped!\n\0",
    /*0a24*/ "[Func]:%s [Line]:%d [Info]:No gdc ko!\n\0\0",
    /*0a4c*/ "[Func]:%s [Line]:%d [Info]:Destroy GDC chn %d fail !\n\0\0\0",
    /*0a84*/ "[Func]:%s [Line]:%d [Info]:[Chn%d]:ChnId is error!\n\0",
    /*0ab8*/ "[Func]:%s [Line]:%d [Info]:grp %d chn %d is disabled!\n\0\0",
    /*0af0*/ "[Func]:%s [Line]:%d [Info]:grp %d chn %d can't be lowdelay chn!\n\0\0\0\0",
    /*0b34*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d]Get luma timeout.\n\0\0",
    /*0b70*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d]BusyQueue null\n\0",
    /*0ba8*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d is not phy chn!\n\0\0\0",
    /*0be4*/ "[Func]:%s [Line]:%d [Info]:Grp %d Extchn %d fishEye is enable which is binded to phychn %d!\n\0\0\0\0",
    /*0c44*/ "[Func]:%s [Line]:%d [Info]:GdcChn chn %d is not created !\n\0\0",
    /*0c80*/ "[Func]:%s [Line]:%d [Info]:Destroy GDC chn %d fail!\n\0\0\0\0",
    /*0cb8*/ "[Func]:%s [Line]:%d [Info]:Create GDC chn fail!\n\0\0\0\0",
    /*0cec*/ "[Func]:%s [Line]:%d [Info]:Set chn (%d, %d)'s attr before enable!\n\0\0",
    /*0d30*/ "[Func]:%s [Line]:%d [Info]:src vpss chn%d invalid\n\0\0",
    /*0d64*/ "[Func]:%s [Line]:%d [Info]:src vpss chn%d not enable\n\0\0\0",
    /*0d9c*/ "[Func]:%s [Line]:%d [Info]:grp%d,chn%d:creat user list failed\n\0\0",
    /*0ddc*/ "[Func]:%s [Line]:%d [Info]:bind ext chn%d still enable\n\0",
    /*0e14*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d can't change chn attr!\n\0\0\0\0",
    /*0e58*/ "[Func]:%s [Line]:%d [Info]:Set chn (%d, %d)'s attr before crop!\n\0\0\0\0",
    /*0e9c*/ "[Func]:%s [Line]:%d [Info]:grp(%d) chn(%d) not support crop when the aspect ratio is enable!\n\0\0\0",
    /*0efc*/ "[Func]:%s [Line]:%d [Info]:Grp %d Chn %d can't change chn crop when using GDC!!\n\0\0\0\0",
    /*0f50*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d can't change chn crop when enable fisheye!\n\0\0\0\0",
    /*0fa8*/ "[Func]:%s [Line]:%d [Info]:Set grp(%d) chn(%d) attr first\n\0\0",
    /*0fe4*/ "[Func]:%s [Line]:%d [Info]:[Chn%d]:ChnId err!\n\0\0",
    /*1014*/ "[Func]:%s [Line]:%d [Info]:Set grp(%d) chn(%d) attr first!\n\0",
    /*1050*/ "[Func]:%s [Line]:%d [Info]:Grp(%d) Chn(%d) enPixelFormat(%d) not support!\n\0\0",
    /*109c*/ "[Func]:%s [Line]:%d [Info]:grp %d chn %d can't change chn rotation because some extchn binded to this phychn enable fisheye!\n\0\0\0",
    /*111c*/ "[Func]:%s [Line]:%d [Info]:Rotate_Ex and Rotate can't enable at the same time!\n\0",
    /*116c*/ "[Func]:%s [Line]:%d [Info]:DynamicRange(%d) err\n\0\0\0\0",
    /*11a0*/ "[Func]:%s [Line]:%d [Info]:Grp(%d) Chn(%d): calculate rotation fail!\n\0\0\0",
    /*11e8*/ "[Func]:%s [Line]:%d [Info]:Set chn (%d, %d)'s attr first\n\0\0\0",
    /*1224*/ "[Func]:%s [Line]:%d [Info]: Rotate_Ex and Rotate can't enable at the same time\n\0",
    /*1274*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d :only phy chn support Rotation Ex!\n\0\0\0\0",
    /*12c4*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d :only phy chn support LDC!\n\0\0\0\0",
    /*130c*/ "[Func]:%s [Line]:%d [Info]:When Spread and LDC enable,LDC Ratio(%d) cannot smaller than 0.\n\0",
    /*1368*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d :only phy chn support spread!\n\0",
    /*13b0*/ "[Func]:%s [Line]:%d [Info]:please first set chn (%d, %d)'s attr\0",
    /*13f0*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d can't change chn spread attr because some extchn binded to this phychn enable fisheye!\n\0\0\0\0",
    /*1474*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d :only phy chn support Spread!\n\0",
    /*14bc*/ "[Func]:%s [Line]:%d [Info]:[grp %d,chn %d],lowdelay bEnable err!\n\0\0\0",
    /*1500*/ "[Func]:%s [Line]:%d [Info]:[grp %d,chn %d],u32LineCnt(%d) should between %d and %d!\n\0\0\0\0",
    /*1558*/ "[Func]:%s [Line]:%d [Info]:only one low delay channel was enabled, disable it first!\n\0\0\0",
    /*15b0*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:chn %d is not low delay chn!\n\0\0\0\0",
    /*15f4*/ "[Func]:%s [Line]:%d [Info]:Set chn %d's attr first!\n\0\0\0\0",
    /*162c*/ "[Func]:%s [Line]:%d [Info]:chn %d is not enabled!\n\0\0",
    /*1660*/ "[Func]:%s [Line]:%d [Info]:low delay channel unexist!\n\0\0",
    /*1698*/ "[Func]:%s [Line]:%d [Info]:grp %d not created!\n\0",
    /*16c8*/ "[Func]:%s [Line]:%d [Info]:grp %d, vbsource %d not support attach!\n\0",
    /*170c*/ "[Func]:%s [Line]:%d [Info]:invalid poolid!\n\0",
    /*1738*/ "[Func]:%s [Line]:%d [Info]:grp %d, vbsource %d not support detach!\n\0",
    /*177c*/ "pstDevCtx\0\0\0",
    /*1788*/ "[Func]:%s [Line]:%d [Info]:No region ko! \n\0\0",
    /*17b4*/ "[Func]:%s [Line]:%d [Info]:not support ext-chn\n\0",
    /*17e4*/ "[Func]:%s [Line]:%d [Info]:src chn%d is invalid\n\0\0\0\0",
    /*1818*/ "[Func]:%s [Line]:%d [Info]:Grp %d invalid\n\0\0",
    /*1844*/ "[Func]:%s [Line]:%d [Info]:src chn%d must be user mode!\n\0\0\0\0",
    /*1880*/ "u32OldSrcChn < VPSS_MAX_CHN_NUM\0",
    /*18a0*/ "u32BindTotal <= VPSS_INTER_BIND_MAX_NUM\0",
    /*18c8*/ "[Func]:%s [Line]:%d [Info]:[grp%d]: vpss not support ext-chn\n\0\0\0",
    /*1908*/ "[Func]:%s [Line]:%d [Info]:Grp %d unexist!\n\0",
    /*1934*/ "[Func]:%s [Line]:%d [Info]:can't get GDC export function, it may be GDC module has not been inserted!\n\0\0",
    /*199c*/ "[Func]:%s [Line]:%d [Info]:Grp %d Chn:%d pfnGdcFisheyFifoCalc failed!\n\0\0",
    /*19e4*/ "[Func]:%s [Line]:%d [Info]:work mode must be online!\n\0\0\0",
    /*1a1c*/ "[Func]:%s [Line]:%d [Info]:Can't change enIntType!\n\0",
    /*1a50*/ "[Func]:%s [Line]:%d [Info]:Align[%u] is illegal!\n\0\0\0",
    /*1a84*/ "s32DiffTR >= 0\0\0",
    /*1a94*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:The dynamic range of group attr should be DYNAMIC_RANGE_HDR10 or DYNAMIC_RANGE_XDR when HDR processing is needed!\n\0\0\0",
    /*1b2c*/ "[Func]:%s [Line]:%d [Info]:vpss not init!\n\0\0",
    /*1b58*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:vpss must be offline mode!\n\0\0",
    /*1b98*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:vpss s32PipeId(%d) unexist!\n\0",
    /*1bd8*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:start grp first!!\n\0\0\0",
    /*1c10*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:Illegal enDataType:%d!\n\0\0",
    /*1c4c*/ "[Func]:%s [Line]:%d [Info]:Vpss %d Timeref %d :lost frame because of frame ctrl.\n\0\0\0",
    /*1ca0*/ "[Func]:%s [Line]:%d [Info]:Pic Queue full!\n\0",
    /*1ccc*/ "HI_NULL != pstPicNode\0\0\0",
    /*1ce4*/ "[Func]:%s [Line]:%d [Info]:Pic Queue is full!\n\0\0",
    /*1d14*/ "[Func]:%s [Line]:%d [Info]:Add VB fail!\n\0\0\0\0",
    /*1d40*/ "s32Ret == HI_SUCCESS\0\0\0\0",
    /*1d58*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:not support send pic to itself!\n\0",
    /*1d9c*/ "[Func]:%s [Line]:%d [Info]:vpss not init !\n\0",
    /*1dc8*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:s32MilliSec %d err!\n\0",
    /*1e00*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:Start grp first!!\n\0\0\0",
    /*1e38*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:VpssGrpPipe %d err !\n\0\0\0\0",
    /*1e74*/ "[Func]:%s [Line]:%d [Info]:Invalid VB\n\0\0",
    /*1e9c*/ "[Func]:%s [Line]:%d [Info]:[grp%d]User pic queue full!\n\0",
    /*1ed4*/ "[Func]:%s [Line]:%d [Info]:[grp%d] has exited!\n\0",
    /*1f04*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:pic queue full!\n\0",
    /*1f38*/ "[Func]:%s [Line]:%d [Info]:bOneBufForLowDelay(%d) err!\n\0",
    /*1f70*/ "[Func]:%s [Line]:%d [Info]:vpss_vb_source %d must be 0 or 2\n\0\0\0\0",
    /*1fb0*/ "[Func]:%s [Line]:%d [Info]:u32VpssSplitNodeNum %d must be [1,16]\n\0\0\0",
    /*1ff4*/ "[Func]:%s [Line]:%d [Info]:bHdrSupport(%d) err!\n\0\0\0\0",
    /*2028*/ "[Func]:%s [Line]:%d [Info]:Set mod param before creating grp!\n\0\0",
    /*2068*/ "[Func]:%s [Line]:%d [Info]:grp%d unexist!\n\0\0",
    /*2094*/ "[Func]:%s [Line]:%d [Info]:VGS_luma task fail!\n\0",
    /*20c4*/ "[Func]:%s [Line]:%d [Info]:grp %d :job failed ,stat:%d !\n\0\0\0",
    /*2100*/ "[Func]:%s [Line]:%d [Info]:Group %d :VPSS_VgsJobCallBack failed -- stat:%d !\n\0\0\0",
    /*2150*/ "[Func]:%s [Line]:%d [Info]:Get snap status fail!\n\0\0\0",
    /*2184*/ "[Func]:%s [Line]:%d [Info]:HI_NULL == pstCtx \n\0\0",
    /*21b4*/ "[Func]:%s [Line]:%d [Info]:Sub VB Err!\n\0",
    /*21dc*/ "[Func]:%s [Line]:%d [Info]:Invalid VB!\n\0",
    /*2204*/ "[Func]:%s [Line]:%d [Info]:Sub VB fail!\n\0\0\0\0",
    /*2230*/ "[Func]:%s [Line]:%d [Info]:grp%d,VpssCheckBindInfo err!!!\n\0\0",
    /*226c*/ "[Func]:%s [Line]:%d [Info]:chn %d lost frame!\n\0\0",
    /*229c*/ "HI_NULL != pstCurPic\0\0\0\0",
    /*22b4*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*22f4*/ "[Func]:%s [Line]:%d [Info]:changed to not block send!\n\0\0",
    /*232c*/ "[Func]:%s [Line]:%d [Info]:grp%d, chn%d: discard frame!\n\0\0\0\0",
    /*2368*/ "[Func]:%s [Line]:%d [Info]:task fail!\n\0\0",
    /*2390*/ "[Func]:%s [Line]:%d [Info]:NULL Pointer:pstVgsTask!\n\0\0\0\0",
    /*23c8*/ "[Func]:%s [Line]:%d [Info]:FISHEYE task fail!\n\0\0",
    /*23f8*/ "[Func]:%s [Line]:%d [Info]:No vgs ko!\n\0\0",
    /*2420*/ "[Func]:%s [Line]:%d [Info]:16bpp not support COVEREX!\n\0\0",
    /*2458*/ "[Func]:%s [Line]:%d [Info]:16bpp not support OVERLAYEX!\n\0\0\0\0",
    /*2494*/ "[Func]:%s [Line]:%d [Info]:Get free task fail!\n\0",
    /*24c4*/ "[Func]:%s [Line]:%d [Info]:Begin job fail!\n\0",
    /*24f0*/ "[Func]:%s [Line]:%d [Info]:Add task fail!\n\0\0",
    /*251c*/ "[Func]:%s [Line]:%d [Info]:End job fail!\n\0\0\0",
    /*2548*/ "[Func]:%s [Line]:%d [Info]:Cancel job!\n\0",
    /*2570*/ "[Func]:%s [Line]:%d [Info]:VGS CoverEx task fail!\n\0\0",
    /*25a4*/ "[Func]:%s [Line]:%d [Info]:Add osd task fail!\n\0\0",
    /*25d4*/ "[Func]:%s [Line]:%d [Info]:Grp %d Chn %d, 16bpp not support VGS!\n\0\0\0",
    /*2618*/ "[Func]:%s [Line]:%d [Info]:GDC bypass task fail!\n\0\0\0",
    /*264c*/ "[Func]:%s [Line]:%d [Info]:GDC task fail!\n\0\0",
    /*2678*/ "[Func]:%s [Line]:%d [Info]:Add bypass task fail!\n\0\0\0",
    /*26ac*/ "[Func]:%s [Line]:%d [Info]:No gdc ko!\n\0\0",
    /*26d4*/ "[Func]:%s [Line]:%d [Info]:Get gdc param fail!\n\0",
    /*2704*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d get VB fail,width: %d, height: %d!\n\0\0\0\0",
    /*2754*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d]Gdc Proc failed!\n\0\0\0",
    /*2790*/ "[Func]:%s [Line]:%d [Info]:Get gdc task fail!\n\0\0",
    /*27c0*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d get VB fail, width: %d, height: %d!\n\0\0\0",
    /*2810*/ "[Func]:%s [Line]:%d [Info]:Grp:%d Chn:%d proccess fisheye task failed !\n\0\0\0\0",
    /*285c*/ "[Func]:%s [Line]:%d [Info]:Snap proc err!\n\0\0",
    /*2888*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn%d is disable!\n\0\0\0\0",
    /*28c0*/ "[Func]:%s [Line]:%d [Info]:VGS_bypass task fail!\n\0\0\0",
    /*28f4*/ "[Func]:%s [Line]:%d [Info]:Get vgs free task failure !\n\0",
    /*292c*/ "[Func]:%s [Line]:%d [Info]:begin bypass job fail with 0x%x!\n\0\0\0\0",
    /*296c*/ "[Func]:%s [Line]:%d [Info]:Add bypass task fail with 0x%x!\n\0",
    /*29a8*/ "[Func]:%s [Line]:%d [Info]:End job fail with 0x%x!\n\0",
    /*29dc*/ "[Func]:%s [Line]:%d [Info]:Add task or end job fail with 0x%x!\n\0",
    /*2a1c*/ "HI_NULL != pstGrpCtx\0\0\0\0",
    /*2a34*/ "HI_NULL != pstDevCtx\0\0\0\0",
    /*2a4c*/ "[Func]:%s [Line]:%d [Info]:grp%d chn%d id err!\n\0",
    /*2a7c*/ "[Func]:%s [Line]:%d [Info]:vpss not init !\n\0",
    /*2aa8*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d]:u32RegionNum(%d) must be [1,%d]\n\0\0\0",
    /*2af4*/ "[Func]:%s [Line]:%d [Info]:copy Luma fail!\n\0",
    /*2b20*/ "[Func]:%s [Line]:%d [Info]:ERR IOCTL CMD 0x%x\n\0\0",
    /*2b50*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d]:pstRegion invalid!\n\0\0\0\0",
    /*2b90*/ "Y\0\0\0",
    /*2b94*/ "N\0\0\0",
    /*2b98*/ "YVU-SP422\0\0\0",
    /*2ba4*/ "YVU-SP420\0\0\0",
    /*2bb0*/ "YUV-SP422\0\0\0",
    /*2bbc*/ "YUV400\0\0",
    /*2bc4*/ "YUV-SP420\0\0\0",
    /*2bd0*/ "UNKNOW\0\0",
    /*2bd8*/ "-\0\0\0",
    /*2bdc*/ "VIDEO\0\0\0",
    /*2be4*/ "SNAP\0\0\0\0",
    /*2bec*/ "VIDEO_SPA\0\0\0",
    /*2bf8*/ "VIDEO_ENH\0\0\0",
    /*2c04*/ "Normal\0\0",
    /*2c0c*/ "MC\0\0",
    /*2c10*/ "\n-------------------------------MODULE PARAM-----------------------------------------------------------------\n\0\0",
    /*2c80*/ "bOneBufferforLowDelay\0\0\0",
    /*2c98*/ "vpss_vb_source\0\0",
    /*2ca8*/ "%15s%25s%25s%25s\n\0\0\0",
    /*2cbc*/ "bHdrSupport\0",
    /*2cc8*/ "vpss_split_node_num\0",
    /*2cdc*/ "%15d%25d%25d%25d\n\0\0\0",
    /*2cf0*/ "\n-------------------------------VPSS GRP ATTR----------------------------------------------------------------\n\0\0",
    /*2d60*/ "MaxW\0\0\0\0",
    /*2d68*/ "GrpID\0\0\0",
    /*2d70*/ "%8s%8s%8s%12s%10s%10s%10s%10s%8s%10s%10s%12s\n\0\0\0",
    /*2da0*/ "MotionMode\0\0",
    /*2dac*/ "RefCmp\0\0",
    /*2db4*/ "NrType\0\0",
    /*2dbc*/ "NrEn\0\0\0\0",
    /*2dc4*/ "bUserCtrl\0\0\0",
    /*2dd0*/ "DstFRate\0\0\0\0",
    /*2ddc*/ "SrcFRate\0\0\0\0",
    /*2de8*/ "DRange\0\0",
    /*2df0*/ "PixFmt\0\0",
    /*2df8*/ "MaxH\0\0\0\0",
    /*2e00*/ "%8d%8u%8u%12s%10s%10d%10d%10s%8s%10s%10s%12s\n\0\0\0",
    /*2e30*/ "USER\0\0\0\0",
    /*2e38*/ "AUTO\0\0\0\0",
    /*2e40*/ "MANUAL\0\0",
    /*2e48*/ "NONE\0\0\0\0",
    /*2e50*/ "\n-------------------------------VPSS CHN ATTR----------------------------------------------------------------\n\0\0",
    /*2ec0*/ "PhyChnID\0\0\0\0",
    /*2ecc*/ "%8s%10s%8s%8s%10s%8s%10s%10s%6s%8s%8s%8s%8s%8s%12s\0\0",
    /*2f00*/ "BgColor\0",
    /*2f08*/ "videoH\0\0",
    /*2f10*/ "videoW\0\0",
    /*2f18*/ "videoY\0\0",
    /*2f20*/ "videoX\0\0",
    /*2f28*/ "Aspect\0\0",
    /*2f30*/ "Depth\0\0\0",
    /*2f38*/ "FlipEn\0\0",
    /*2f40*/ "MirrorEn\0\0\0\0",
    /*2f4c*/ "Mode\0\0\0\0",
    /*2f54*/ "Enable\0\0",
    /*2f5c*/ "\n\0\0\0",
    /*2f60*/ "%8d%10d%8s%8s%10s%8s%10d%10d%6u%8s%8d%8d%8d%8d%#12x\0",
    /*2f94*/ "\n-------------------------------VPSS EXT-CHN ATTR------------------------------------------------------------\n\0\0",
    /*3004*/ "ExtChnID\0\0\0\0",
    /*3010*/ "GrpID \0\0",
    /*3018*/ "%9s%10s%8s%8s%8s%8s%10s%10s%8s\n\0",
    /*3038*/ "Height\0\0",
    /*3040*/ "Width\0\0\0",
    /*3048*/ "SrcChn\0\0",
    /*3050*/ "%9d%10d%8s%8d%8u%8u%10d%10d%8d\n\0",
    /*3070*/ "\n-------------------------------VPSS CHN LOWDELAY ATTR-------------------------------------------------------\n\0\0",
    /*30e0*/ "ChnID\0\0\0",
    /*30e8*/ "%8s%8s%8s%10s%15s%13s\n\0\0",
    /*3100*/ "OneBufAddr\0\0",
    /*310c*/ "OneBufEnable\0\0\0\0",
    /*311c*/ "LineCnt\0",
    /*3124*/ "%8d%8d%8s%10u%15s%#13llx\0\0\0\0",
    /*3140*/ "RAT\0",
    /*3144*/ "ABS\0",
    /*3148*/ "\n-------------------------------VPSS GRP CROP INFO-----------------------------------------------------------\n\0\0",
    /*31b8*/ "CropEn\0\0",
    /*31c0*/ "%8s%8s%10s%8s%8s%8s%8s%8s%8s%8s%8s%8s%8s\n\0\0\0",
    /*31ec*/ "TrimHgt\0",
    /*31f4*/ "TrimWid\0",
    /*31fc*/ "TrimY\0\0\0",
    /*3204*/ "TrimX\0\0\0",
    /*320c*/ "OriH\0\0\0\0",
    /*3214*/ "OriW\0\0\0\0",
    /*321c*/ "CoorY\0\0\0",
    /*3224*/ "CoorX\0\0\0",
    /*322c*/ "CoorType\0\0\0\0",
    /*3238*/ "%8d%8s%10s%8d%8d%8u%8u\0\0",
    /*3250*/ "%8u%8u%8u%8u%8u%8u\0\0",
    /*3264*/ "\n-------------------------------VPSS CHN CROP INFO-----------------------------------------------------------\n\0\0",
    /*32d4*/ "%8s%8s%8s%10s%8s%8s%8s%8s%8s%8s%8s%8s\n\0\0",
    /*32fc*/ "%8d%8d%8s%10s%8d%8d%8u%8u\0\0\0",
    /*3318*/ "%8u%8u%8u%8u\0\0\0\0",
    /*3328*/ "\n-------------------------------VPSS GRP PIC QUEUE-----------------------------------------------------------\n\0\0",
    /*3398*/ "FreeLen0\0\0\0\0",
    /*33a4*/ "%8s%10s%10s%10s%10s\n\0\0\0\0",
    /*33bc*/ "Backup\0\0",
    /*33c4*/ "Delay\0\0\0",
    /*33cc*/ "BusyLen0\0\0\0\0",
    /*33d8*/ "%8d%10u%10u%10u%10u\n\0\0\0\0",
    /*33f0*/ "\n-------------------------------VPSS GRP WORK STATUS---------------------------------------------------------\n\0\0",
    /*3460*/ "RecvPic0\0\0\0\0",
    /*346c*/ "%8s%12s%8s%10s%12s%8s%8s%12s%12s%8s%8s%10s\n\0",
    /*3498*/ "MaxCostTm\0\0\0",
    /*34a4*/ "CostTm\0\0",
    /*34ac*/ "bStart\0\0",
    /*34b4*/ "StartFl\0",
    /*34bc*/ "OldUnDo\0",
    /*34c4*/ "NewUnDo\0",
    /*34cc*/ "OldDo\0\0\0",
    /*34d4*/ "NewDo\0\0\0",
    /*34dc*/ "VdecLost0\0\0\0",
    /*34e8*/ "ViLost0\0",
    /*34f0*/ "%8u%12u%8u%10u%12u%8u%8u%12u%12u%8s%8u%10u\n\0",
    /*351c*/ "\n-------------------------------VPSS CHN OUTPUT RESOLUTION---------------------------------------------------\n\0\0",
    /*358c*/ "%8s%8s%8s%8s%8s%12s%12s%12s%12s%8s%12s\n\0",
    /*35b4*/ "FrameRate\0\0\0",
    /*35c0*/ "SendOk\0\0",
    /*35c8*/ "Compress\0\0\0\0",
    /*35d4*/ "Videofmt\0\0\0\0",
    /*35e0*/ "Pixfmt\0\0",
    /*35e8*/ "%8d%8d%8s%8u%8u%12s%12s%12s%12s%8d%12u\0\0",
    /*3610*/ "N/A\0",
    /*3614*/ "\n-------------------------------VPSS 3DNR X PARAM------------------------------------------------------------\n\0\0",
    /*3684*/ "\n-------------------------------VPSS CHN ROTATE INFO---------------------------------------------------------\n\0\0",
    /*36f4*/ "%8s%8s%8s\n\0\0",
    /*3700*/ "Rotate\0\0",
    /*3708*/ "%8d%8d%8u\0\0\0",
    /*3714*/ "\n-------------------------------VPSS CHN ROTATIO_EX INFO-----------------------------------------------------\n\0\0",
    /*3784*/ "%8s%8s%8s%10s%8s%10s%10s%10s%10s\0\0\0\0",
    /*37a8*/ "YOffset\0",
    /*37b0*/ "XOffset\0",
    /*37b8*/ "Angle\0\0\0",
    /*37c0*/ "ViewType\0\0\0\0",
    /*37cc*/ "%8d%8d%8s%10s%8d%10d%10d%10d%10d\0\0\0\0",
    /*37f0*/ "\n-------------------------------VPSS CHN LDC INFO------------------------------------------------------------\n\0\0",
    /*3860*/ "%8s%8s%8s%8s%8s%8s%10s%10s%10s%20s\0\0",
    /*3884*/ "DistortionRatio\0",
    /*3894*/ "XYRatio\0",
    /*389c*/ "YRatio\0\0",
    /*38a4*/ "XRatio\0\0",
    /*38ac*/ "%8d%8d%8s%8s%8d%8d%10d%10d%10d%20d\0\0",
    /*38d0*/ "\n-------------------------------VPSS CHN SPREAD INFO---------------------------------------------------------\n\0\0",
    /*3940*/ "%8s%8s%8s%8s%8s%10s\0",
    /*3954*/ "Coef\0\0\0\0",
    /*395c*/ "OutH\0\0\0\0",
    /*3964*/ "OutW\0\0\0\0",
    /*396c*/ "%8d%8d%8s%8u%8u%10u\0",
    /*3980*/ "\n-------------------------------VPSS EXTCHN FISHEYE ATTR-----------------------------------------------------\n\0\0",
    /*39f0*/ "%8s%8s%8s%9s%8s%10s%9s%5s%9s%9s%7s%12s\0\0",
    /*3a18*/ "FStrength\0\0\0",
    /*3a24*/ "TCoef\0\0\0",
    /*3a2c*/ "VOffset\0",
    /*3a34*/ "HOffset\0",
    /*3a3c*/ "LMF\0",
    /*3a40*/ "BgEnable\0\0\0\0",
    /*3a4c*/ "RgnNum\0\0",
    /*3a54*/ "MntMode\0",
    /*3a5c*/ "%8d%8d%8s%9s%8u%10s%#9x%5s%9d%9d%7u%12d\0",
    /*3a84*/ "\n-------------------------------VPSS EXTCHN FISHEYE REGION ATTR----------------------------------------------\n\0\0",
    /*3af4*/ "%8s%8s%10s%10s%10s%11s%5s%6s%9s%9s%6s%6s%6s%6s\0\0",
    /*3b24*/ "OutY\0\0\0\0",
    /*3b2c*/ "OutX\0\0\0\0",
    /*3b34*/ "VerZoom\0",
    /*3b3c*/ "HorZoom\0",
    /*3b44*/ "Tilt\0\0\0\0",
    /*3b4c*/ "Pan\0",
    /*3b50*/ "OutRadius\0\0\0",
    /*3b5c*/ "InRadius\0\0\0\0",
    /*3b68*/ "ViewMode\0\0\0\0",
    /*3b74*/ "RgnIndex\0\0\0\0",
    /*3b80*/ "%8d%8d%10u%10s%10u%11u%5u%6u%9u%9u%6d%6d%6u%6u\0\0",
    /*3bb0*/ "START\0\0\0",
    /*3bb8*/ "EARLY\0\0\0",
    /*3bc0*/ "EARLY_END\0\0\0",
    /*3bcc*/ "\n-------------------------------FRAME INTERRUPT ATTR---------------------------------------------------------\n\0\0",
    /*3c3c*/ "IntType\0",
    /*3c44*/ "%8s%15s%15s\n\0\0\0\0",
    /*3c54*/ "EarlyLine\0\0\0",
    /*3c60*/ "%8d%15s%15d\n\0\0\0\0",
    /*3c70*/ "\n-------------------------------DRV WORK STATUS--------------------------------------------------------------\n\0\0",
    /*3ce0*/ "StartSuc1\0\0\0",
    /*3cec*/ "StartSuc0\0\0\0",
    /*3cf8*/ "%16s%16s%16s%12s%12s%12s%12s%12s\n\0\0\0",
    /*3d1c*/ "BusErr\0\0",
    /*3d24*/ "NodeIdErr1\0\0",
    /*3d30*/ "StartErr1\0\0\0",
    /*3d3c*/ "NodeIdErr0\0\0",
    /*3d48*/ "StartErr0\0\0\0",
    /*3d54*/ "LinkInt\0",
    /*3d5c*/ "%16d%16d%16d%12d%12d%12d%12d%12d\n\0\0\0",
    /*3d80*/ "\n-------------------------------DRV NODE QUEUE---------------------------------------------------------------\n\0\0",
    /*3df0*/ "WaitNum\0",
    /*3df8*/ "FreeNum\0",
    /*3e00*/ "%10s%10s%8s%8s%8s%8s%8s%8s%8s\n\0\0",
    /*3e20*/ "Proc\0\0\0\0",
    /*3e28*/ "Sel1\0\0\0\0",
    /*3e30*/ "Busy11\0\0",
    /*3e38*/ "Busy10\0\0",
    /*3e40*/ "Sel0\0\0\0\0",
    /*3e48*/ "Busy01\0\0",
    /*3e50*/ "Busy00\0\0",
    /*3e58*/ "%10u%10u%8u%8u%8u%8u%8u%8u%8u\n\0\0",
    /*3e78*/ "\n-------------------------------INT WORK STATUS--------------------------------------------------------------\n\0\0",
    /*3ee8*/ "MaxCntPerSec\0\0\0\0",
    /*3ef8*/ "CntPerSec\0\0\0",
    /*3f04*/ "%14s%14s%14s%14s%14s%14s\n\0\0\0",
    /*3f20*/ "MCostTmPerSec\0\0\0",
    /*3f30*/ "CostTmPerSec\0\0\0\0",
    /*3f40*/ "MostCostTm\0\0",
    /*3f4c*/ "%14d%14d%14d%14d%14d%14d\n\0\0\0",
    /*3f68*/ "\n[VPSS] Version: [Hi3516CV500_MPP_V2.0.1.0 B090 Release], Build Time[Jan 14 2019, 20:23:46]\n\n\0\0\0",
    /*3fc8*/ "-----ModuleParam: vpss_en[%d] = %d,it should be 0 or 1!\n\0\0\0\0",
    /*4004*/ "-----ModuleParam: vpss_en[0] = %d,it must be 1!\n\0\0\0\0",
    /*4038*/ "-----ModuleParam: bOneBufferforLowDelay = %d,it should be 0 or 1!\n\0\0",
    /*407c*/ "-----ModuleParam: vpss_vb_source = %d,it should be 2 or 0!\n\0",
    /*40b8*/ "-----ModuleParam: vpss_split_node_num = %d,it should be [1,16]!\n\0\0\0\0",
    /*40fc*/ "VPSS module param is illegal!\n\0\0",
    /*411c*/ "VPSS Lock  Init failed\n\0",
    /*4134*/ "vpss\0\0\0\0",
    /*413c*/ "vpss register failed\n\0\0\0",
    /*4154*/ "vpss register mod failed\n\0\0\0",
    /*4170*/ "Vpss module create proc failed\n\0",
    /*4190*/ "vpss atomic init failed\n\0\0\0\0",
    /*41ac*/ "Hi3516CV500\0",
    /*41b8*/ "load vpss.ko for %s...OK!\n\0\0",
    /*41d4*/ "vpss destroy dev failed\n\0\0\0\0",
    /*41f0*/ "load vpss.ko ....fail!\n\0",
    /*4208*/ "unload vpss.ko ....OK!\n\0",
    /*4220*/ "360\0",
    /*4224*/ "180\0",
    /*4228*/ "OriScale\0\0\0\0",
    /*4234*/ "Desktop\0",
    /*423c*/ "Ceiling\0",
    /*4244*/ "Wall\0\0\0\0",
    /*424c*/ "ALL\0",
    /*4250*/ "TYPICAL\0",
    /*4258*/ "INSIDE\0\0",
    /*4260*/ "LINEAR\0\0",
    /*4268*/ "TILE_64x16\0\0",
    /*4274*/ "TILE_16x8\0\0\0",
    /*4280*/ "GPU\0",
    /*4284*/ "SDR8\0\0\0\0",
    /*428c*/ "SDR10\0\0\0",
    /*4294*/ "HDR10\0\0\0",
    /*429c*/ "HLG\0",
    /*42a0*/ "SLF\0",
    /*42a4*/ "[Func]:%s [Line]:%d [Info]:Sub VB fail!\n\0\0\0\0",
    /*42d0*/ "[Func]:%s [Line]:%d [Info]:invalid VB\n\0\0",
    /*42f8*/ "[Func]:%s [Line]:%d [Info]:[grp%d]CreateUserList fail\n\0\0",
    /*4330*/ "[Func]:%s [Line]:%d [Info]:Null ptr\n\0\0\0\0",
    /*4358*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:vpss unexist!\n\0\0\0",
    /*438c*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:VpssGrpPipe %d err!\n\0",
    /*43c4*/ "[Func]:%s [Line]:%d [Info]:vpss(%d, %d) get grp frame fail!\n\0\0\0\0",
    /*4404*/ "[Func]:%s [Line]:%d [Info]:Func: %s, Line: %d ERESTARTSYS\n\0\0",
    /*4440*/ "[Func]:%s [Line]:%d [Info]:vpss(%d, %d) user get frame fail!\n\0\0\0",
    /*4480*/ "[Func]:%s [Line]:%d [Info]:copy stFrameInfo fail!\n\0\0",
    /*44b4*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:pstVideoFrame invalid!\n\0\0",
    /*44f0*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:cur null!\n\0\0\0",
    /*4520*/ "[Func]:%s [Line]:%d [Info]:[grp%d]vpss unexist!\n\0\0\0\0",
    /*4554*/ "[Func]:%s [Line]:%d [Info]:[grp%d]release VpssGrpPipe[%d] Frame fail!\n\0\0",
    /*459c*/ "[Func]:%s [Line]:%d [Info]:[grp%d]pstVideoFrame invalid!\n\0\0\0",
    /*45d8*/ "[Func]:%s [Line]:%d [Info]:s32MilliSec(%d) must be >= -1!\n\0\0",
    /*4614*/ "[Func]:%s [Line]:%d [Info]:Vpss%d chn%d not enable!!\n\0\0\0",
    /*464c*/ "[Func]:%s [Line]:%d [Info]:Vpss%d,ext chn%d should bind correct phy chn [0,%d] which is %d!\n\0\0\0\0",
    /*46ac*/ "[Func]:%s [Line]:%d [Info]:Vpss%d,chn%d:Only in user mode can get frame!\n\0\0\0",
    /*46f8*/ "[Func]:%s [Line]:%d [Info]:grp %d chn %d ,can't get frame from lowdelay chn!\n\0\0\0",
    /*4748*/ "[Func]:%s [Line]:%d [Info]:vpss(%d, %d) user get frame time out, s32MilliSec=%d\n\0\0\0\0",
    /*479c*/ "[Func]:%s [Line]:%d [Info]:Vpss%d chn%d pFrameInfo invalid!\n\0\0\0\0",
    /*47dc*/ "[Func]:%s [Line]:%d [Info]:[grp%d]release chn Frame fail!\n\0\0",
    /*4818*/ "[Func]:%s [Line]:%d [Info]:no bind and queue full\n\0\0",
    /*484c*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:no current picture !\n\0\0\0\0",
    /*4888*/ "pstCtx\0\0",
    /*4890*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*48d0*/ "[Func]:%s [Line]:%d [Info]:Vpss%d chn%d rate contral ignore this pic  bNew:%d !\n\0\0\0\0",
    /*4924*/ "HI_NULL != pstCtx\0\0\0",
    /*4938*/ "[Func]:%s [Line]:%d [Info]:[grp%d][bNew:%d][bDo:%d]new/do but no current picture or old/do but no backup picture!\n\0\0",
    /*49ac*/ "[Func]:%s [Line]:%d [Info]: Chn[%d] of group[%d] fake query failed!\n\0\0\0\0",
    /*49f4*/ "[Func]:%s [Line]:%d [Info]: Chn[%d] of group[%d] is disable, query failed!\n\0",
    /*4a40*/ "[Func]:%s [Line]:%d [Info]: Chn[%d] of group[%d] is disable or query step1 fail, query failed!\n\0",
    /*4aa0*/ "pstCtx != NULL\0\0",
    /*4ab0*/ "HI_NULL != pstDevCtx\0\0\0\0",
    /*4ac8*/ "[Func]:%s [Line]:%d [Info]:[grp%d Chn%d]:pic src pixl format(%s) and extchn pixl format(%s) is illegal!!\n\0\0\0",
    /*4b34*/ "[Func]:%s [Line]:%d [Info]:Wrong Crop Config and noneffective! \n\0\0\0\0",
    /*4b78*/ "[Func]:%s [Line]:%d [Info]:prescale beyond VGS scale capa (%d, %d)->(%d, %d)!\n\0\0",
    /*4bc8*/ "[Func]:%s [Line]:%d [Info]:No vgs ko!\n\0\0",
    /*4bf0*/ "[Func]:%s [Line]:%d [Info]:Get vgs free task fail!\n\0",
    /*4c24*/ "[Func]:%s [Line]:%d [Info]:Chn %d get vb fail,w:%d,h:%d\n\0\0\0\0",
    /*4c60*/ "HI_SUCCESS == s32Ret\0\0\0\0",
    /*4c78*/ "[Func]:%s [Line]:%d [Info]:Begin job fail!\n\0",
    /*4ca4*/ "[Func]:%s [Line]:%d [Info]:Add vgs task fail!\n\0\0",
    /*4cd4*/ "[Func]:%s [Line]:%d [Info]:End Vgs job fail!\n\0\0\0",
    /*4d04*/ "[Func]:%s [Line]:%d [Info]:[chn%d]: not enable!\n\0\0\0\0",
    /*4d38*/ "[Func]:%s [Line]:%d [Info]:Ext-Chn%d has no bind and user queue full!\n\0\0",
    /*4d80*/ "HI_NULL != pstSendInfo->pstDestPicInfo[0]\0\0\0",
    /*4dac*/ "[Func]:%s [Line]:%d [Info]:pVpssSend is NULL, reload ko!\n\0\0\0",
    /*4de8*/ "HI_NULL != pstPicNode\0\0\0",
    /*4e00*/ "[Func]:%s [Line]:%d [Info]:pstTask null! \n\0\0",
    /*4e2c*/ "[Func]:%s [Line]:%d [Info]:grp%d invalid\n\0\0\0",
    /*4e58*/ "[Func]:%s [Line]:%d [Info]:ext chn%d invalid\n\0\0\0",
    /*4e88*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:VGS task fail!\n\0\0",
    /*4ebc*/ "[Func]:%s [Line]:%d [Info]:grp%d unexist!\n\0\0",
    /*4ee8*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:destroyed/destroying/reseting!\n\0\0",
    /*4f2c*/ "[Func]:%s [Line]:%d [Info]:[chn%d]: disabled!\n\0\0",
    /*4f5c*/ "[Func]:%s [Line]:%d [Info]:[chn%d]: resolution changed!\n\0\0\0\0",
    /*4f98*/ "[Func]:%s [Line]:%d [Info]:orignal (%dX%d),now(%dX%d)\n\0\0",
    /*4fd0*/ "[Func]:%s [Line]:%d [Info]:Sub VB fail!\n\0\0\0\0",
    /*4ffc*/ "[Func]:%s [Line]:%d [Info]:frame err, u32RawIntStatus = 0x%x!!!\n\0\0\0\0",
    /*5040*/ "[Func]:%s [Line]:%d [Info]:No eof int!\n\0",
    /*5068*/ "[Func]:%s [Line]:%d [Info]:Grp %d Chn %d add VB fail!\n\0\0",
    /*50a0*/ "[Func]:%s [Line]:%d [Info]:Grp %d Chn %d sub VB failed!\n\0\0\0\0",
    /*50dc*/ "[Func]:%s [Line]:%d [Info]:map regbase fail!\n\0\0\0",
    /*510c*/ "[Func]:%s [Line]:%d [Info]:Create queue fail!\n\0\0",
    /*513c*/ "Can't get free node!\n\0\0\0",
    /*5154*/ "HI_NULL != pstCurNode\0\0\0",
    /*516c*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*51ac*/ "pstCurNode->u64PhyAddr[0][0] != 0\0\0\0",
    /*51d0*/ "[Func]:%s [Line]:%d [Info]:grp[%d] unexist!\n\0\0\0\0",
    /*5200*/ "[Func]:%s [Line]:%d [Info]:Discard the ref snap frame when the 3dnr type is VPSS_NR_TYPE_SNAP. \n\0\0\0\0",
    /*5264*/ "[Func]:%s [Line]:%d [Info]:Vpss:%d should be %d but actual %d\n\0\0",
    /*52a4*/ "HI_FALSE == bListEmpty\0\0",
    /*52bc*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*52fc*/ "grp attr\0\0\0\0",
    /*5308*/ "grp start/stop\0\0",
    /*5318*/ "grp reset\0\0\0",
    /*5324*/ "phy chn attr\0\0\0\0",
    /*5334*/ "chn attr\0\0\0\0",
    /*5340*/ "grp backup\0\0",
    /*534c*/ "grp creat/destroy\0\0\0",
    /*5360*/ "grp crop\0\0\0\0",
    /*536c*/ "grp user send frame\0",
    /*5380*/ "chn user get/release frame\0\0",
    /*539c*/ "grp user get/release frame\0\0",
    /*53b8*/ "grp set/get delay\0\0\0",
    /*53cc*/ "user frame rate ctrl\0\0\0\0",
    /*53e4*/ "ext chn attr\0\0\0\0",
    /*53f4*/ "phy chn get luma\0\0\0\0",
    /*5408*/ "phy chn crop\0\0\0\0",
    /*5418*/ "phy chn rotate\0\0",
    /*5428*/ "sharpen param\0\0\0",
    /*5438*/ "low delay attr\0\0",
    /*5448*/ "vbpool ctrl\0",
    /*5454*/ "set image quality\0\0\0",
    /*5468*/ "set NRX param\0\0\0",
    /*5478*/ "fisheys config0\0",
    /*5488*/ "ext chn fisheys attr\0\0\0\0",
    /*54a0*/ "chn rotation ex\0",
    /*54b0*/ "chn ldc\0",
    /*54b8*/ "chn spread\0\0",
    /*54c4*/ "chn align\0\0\0",
    /*54d0*/ "mod param\0\0\0",
    /*54dc*/ "buf wrap\0\0\0\0",
    /*54e8*/ "trig snap\0\0\0",
    /*54f4*/ "frame int\0\0\0",
    /*5500*/ "\0\0\0\0",
    /*5504*/ "[Func]:%s [Line]:%d [Info]:grp(%d) err\n\0",
    /*552c*/ "[Func]:%s [Line]:%d [Info]:chn(%d) err\n\0",
    /*5554*/ "[Func]:%s [Line]:%d [Info]:VPSS COVER/MOSAIC chn(%d) must be 0\n\0",
    /*5594*/ "[Func]:%s [Line]:%d [Info]:Not support this region type(%d)\n\0\0\0\0",
    /*55d4*/ "[Func]:%s [Line]:%d [Info]:Not support %s !\n\0\0\0\0",
    /*5604*/ "[Func]:%s [Line]:%d [Info]:Not support %s when vpss working in VI_OFFLINE_VPSS_ONLINE mode.\n\0\0\0\0",
    /*5664*/ "[Func]:%s [Line]:%d [Info]:Grp must be 0!\n\0\0",
    /*5690*/ "[Func]:%s [Line]:%d [Info]:Not support %s when vpss working in online mode.\n\0\0\0\0",
    /*56e0*/ "pstCtx\0\0",
    /*56e8*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*5728*/ "[Func]:%s [Line]:%d [Info]:Null ptr!\n\0\0\0",
    /*5750*/ "[Func]:%s [Line]:%d [Info]:Sub VB Err!\n\0",
    /*5778*/ "[Func]:%s [Line]:%d [Info]:Invalid VB!\n\0",
    /*57a0*/ "HI_NULL != pstVpssOsdInfo\0\0\0",
    /*57bc*/ "[Func]:%s [Line]:%d [Info]:Grp %d Chn %d Get osd err!\n\0\0",
    /*57f4*/ "HI_SUCCESS == s32Ret\0\0\0\0",
    /*580c*/ "[Func]:%s [Line]:%d [Info]:Get cover err.\n\0\0",
    /*5838*/ "[Func]:%s [Line]:%d [Info]:Cover color(0x%x) must be [0x0,0xffffff].\n\0\0\0",
    /*5880*/ "[Func]:%s [Line]:%d [Info]:Aspect Ratio Mode(%d) err!\n\0\0",
    /*58b8*/ "[Func]:%s [Line]:%d [Info]:Not support aspect ratio when chn crop is enable!\n\0\0\0",
    /*5908*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:LBA not support online mode!\n\0\0\0\0",
    /*594c*/ "[Func]:%s [Line]:%d [Info]:Aspect Ratio (X=%d, Y=%d, Width=%d, Height=%d) err,display size is(%d, %d)!\n\0",
    /*59b4*/ "[Func]:%s [Line]:%d [Info]:Aspect Ratio Color(0x%x) must be [0, 0xFFFFFF]!\n\0",
    /*5a00*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d Size can't change, old[%d,%d],new[%d,%d]!\n\0",
    /*5a54*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d Dynamic range can not change, old(%d),new(%d)!\n\0\0\0\0",
    /*5ab0*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d not support compress!\n\0",
    /*5af0*/ "[Func]:%s [Line]:%d [Info]:Grp %d chn %d not support VideoFormat(%d)!\n\0\0",
    /*5b38*/ "[Func]:%s [Line]:%d [Info]:LDC bEnable err!\n\0\0\0\0",
    /*5b68*/ "[Func]:%s [Line]:%d [Info]:No gdc ko!\n\0\0",
    /*5b90*/ "[Func]:%s [Line]:%d [Info]:Check Gdc info fail!\n\0\0\0\0",
    /*5bc4*/ "pstDevCtx\0\0\0",
    /*5bd0*/ "[Func]:%s [Line]:%d [Info]:RotationEx bEnable err!\n\0",
    /*5c04*/ "[Func]:%s [Line]:%d [Info]:Check GDC rotation attr failed\n\0\0",
    /*5c40*/ "[Func]:%s [Line]:%d [Info]:Please first set Grp %d  chn %d  attr\0\0\0\0",
    /*5c84*/ "[Func]:%s [Line]:%d [Info]:The fisheye module may be not existed\n\0\0\0",
    /*5cc8*/ "[Func]:%s [Line]:%d [Info]:check fisheye corrention attr failed\n\0\0\0\0",
    /*5d0c*/ "[Func]:%s [Line]:%d [Info]: Grp %d chn %d :the attribute of Fisheye is not allowed to get when it is not set!\n\0\0",
    /*5d7c*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d fisheye input image pixel format is not SEMIPLANAR_420 or PIXEL_FORMAT_YUV_400.\n\0\0",
    /*5df8*/ "[Func]:%s [Line]:%d [Info]:Pipe %d chn %d fisheye input image pixel format is SEMIPLANAR_420,output image pixel format is SEMIPLANAR_422.\n\0\0",
    /*5e84*/ "[Func]:%s [Line]:%d [Info]:Grp%d chn%d fisheye input image pixel format is PIXEL_FORMAT_YUV_400,output image pixel format is not PIXEL_FORMAT_YUV_400.\n\0",
    /*5f1c*/ "[Func]:%s [Line]:%d [Info]:Grp%d chn%d  fisheye input image Compress is not COMPRESS_MODE_NONE .\n\0\0\0",
    /*5f80*/ "[Func]:%s [Line]:%d [Info]:Grp%d chn%d  fisheye input image size width: %d, height: %d is small than %dX%d.\n\0\0\0\0",
    /*5ff0*/ "[Func]:%s [Line]:%d [Info]:Grp%d chn%d  fisheye input image size width: %d, height: %d is big than %dX%d.\n\0\0",
    /*605c*/ "[Func]:%s [Line]:%d [Info]:Grp%d chn%d  fisheye output image size width: %d, height: %d is big than %dX%d.\n\0",
    /*60c8*/ "[Func]:%s [Line]:%d [Info]:Grp%d chn%d  fisheye output image size width: %d, height: %d is small than %dX%d.\n\0\0\0",
    /*6138*/ "[Func]:%s [Line]:%d [Info]:Get mmz name fail!\n\0\0",
    /*6168*/ "VPSS\0\0\0\0",
    /*6170*/ "%s(%d) Ref\0\0",
    /*617c*/ "[Func]:%s [Line]:%d [Info]:malloc Ref&Mad buffer fail!\n\0",
    /*61b4*/ "%s(%d) Luma\0",
    /*61c0*/ "[Func]:%s [Line]:%d [Info]:malloc Luma buffer fail!\n\0\0\0\0",
    /*61f8*/ "[Func]:%s [Line]:%d [Info]:bCropEn(%d) err!\n\0\0\0\0",
    /*6228*/ "[Func]:%s [Line]:%d [Info]:Crop coordinate(%d) err!\n\0\0\0\0",
    /*6260*/ "[Func]:%s [Line]:%d [Info]:Crop start ratioX(%d) must be 0 to 999!\n\0",
    /*62a4*/ "[Func]:%s [Line]:%d [Info]:Crop start ratioY(%d) must be 0 to 999!\n\0",
    /*62e8*/ "[Func]:%s [Line]:%d [Info]:Crop start ratio Width(%d) must be 0 to 1000!\n\0\0\0",
    /*6334*/ "[Func]:%s [Line]:%d [Info]:Crop start ratio Height(%d) must be 0 to 1000!\n\0\0",
    /*6380*/ "[Func]:%s [Line]:%d [Info]:Crop X(%d) must align to 2!\n\0",
    /*63b8*/ "[Func]:%s [Line]:%d [Info]:Crop Y(%d) must align to 2!\n\0",
    /*63f0*/ "[Func]:%s [Line]:%d [Info]:Crop Width(%d) must align to %d!\n\0\0\0\0",
    /*6430*/ "[Func]:%s [Line]:%d [Info]:Crop Height(%d) must align to %d!\n\0\0\0",
    /*6470*/ "[Func]:%s [Line]:%d [Info]:Crop width(%d) must be %d to %d!\n\0\0\0\0",
    /*64b0*/ "[Func]:%s [Line]:%d [Info]:Crop height(%d) must be %d to %d!\n\0\0\0",
    /*64f0*/ "[Func]:%s [Line]:%d [Info]:Crop start absX(%d) must be 0 to %d!\n\0\0\0\0",
    /*6534*/ "[Func]:%s [Line]:%d [Info]:Crop start absY(%d) must be 0 to %d!\n\0\0\0\0",
    /*6578*/ "[Func]:%s [Line]:%d [Info]:s32SrcFrmRate(%d) must be the same as s32DstFrmRate(%d) when disable FRC.\n\0\0\0",
    /*65e0*/ "[Func]:%s [Line]:%d [Info]:s32SrcFrmRate(%d) must be [1, %d]\n\0\0\0",
    /*6620*/ "[Func]:%s [Line]:%d [Info]:s32DstFrmRate(%d) must be greater than 0\n\0\0\0\0",
    /*6668*/ "[Func]:%s [Line]:%d [Info]:s32SrcFrmRate(%d) can't be smaller than s32DstFrmRate(%d)\n\0\0\0",
    /*66c0*/ "[Func]:%s [Line]:%d [Info]:Only grp0 can be created in online mode!\n\0\0\0\0",
    /*6708*/ "[Func]:%s [Line]:%d [Info]:grp enDynamicRange(%d) must be 0!\n\0\0\0",
    /*6748*/ "[Func]:%s [Line]:%d [Info]:pix format must be 420/422/400!\n\0",
    /*6784*/ "[Func]:%s [Line]:%d [Info]:u32MaxW(%u) must be %d to %d in online mode!\n\0\0\0\0",
    /*67d0*/ "[Func]:%s [Line]:%d [Info]:u32MaxW(%u) must be %d to %d in non-online mode!\n\0\0\0\0",
    /*6820*/ "[Func]:%s [Line]:%d [Info]:u32MaxH(%u) must be %d to %d!\n\0\0\0",
    /*685c*/ "[Func]:%s [Line]:%d [Info]:u32MaxW(%u) must align to %d!\n\0\0\0",
    /*6898*/ "[Func]:%s [Line]:%d [Info]:u32MaxH(%u) must align to %d!\n\0\0\0",
    /*68d4*/ "[Func]:%s [Line]:%d [Info]:bNrEn(%d) err!\n\0\0",
    /*6900*/ "[Func]:%s [Line]:%d [Info]:Nr motion mode(%d) should be 0 or 1!\n\0\0\0\0",
    /*6944*/ "[Func]:%s [Line]:%d [Info]:Nr compress mode(%d) should be %d or %d!\n\0\0\0\0",
    /*698c*/ "[Func]:%s [Line]:%d [Info]:Nr type(%d) should be 0 , 1 or 2!\n\0\0\0",
    /*69cc*/ "[Func]:%s [Line]:%d [Info]:Only offline mode support snap!\n\0",
    /*6a08*/ "[Func]:%s [Line]:%d [Info]:MaxH can't change!\n \0",
    /*6a38*/ "[Func]:%s [Line]:%d [Info]:u32MaxW can't change!\n \0\0",
    /*6a6c*/ "[Func]:%s [Line]:%d [Info]:enPixelFormat can't change!\n \0\0\0\0",
    /*6aa8*/ "[Func]:%s [Line]:%d [Info]:enDynamicRange can't change!\n \0\0\0",
    /*6ae4*/ "[Func]:%s [Line]:%d [Info]:enCompressMode of nr can't change!\n \0",
    /*6b24*/ "[Func]:%s [Line]:%d [Info]:enNrMotionMode can't change from no-compensate to compensate when disable compress!\n \0\0\0\0",
    /*6b98*/ "[Func]:%s [Line]:%d [Info]:enRotate must <= %d !\n\0\0\0",
    /*6bcc*/ "[Func]:%s [Line]:%d [Info]:Grp%d Chn%d compress not support rotate!\n\0\0\0\0",
    /*6c14*/ "[Func]:%s [Line]:%d [Info]:(X=%d,Y=%d,Height=%d,Width=%d) is off-limits!\n\0\0\0",
    /*6c60*/ "[Func]:%s [Line]:%d [Info]:(X=%d,Y=%d,Height=%d,Width=%d)they all should be a multiple of 2!\n\0\0\0",
    /*6cc0*/ "[Func]:%s [Line]:%d [Info]:get luma s32MilliSec %d err!\n\0\0\0\0",
    /*6cfc*/ "[Func]:%s [Line]:%d [Info]:pu64LumaData 0x%p err!\n\0\0",
    /*6d30*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d]: grp size(%d, %d) and chn size(%d, %d) out of ZoomRatio[-15, 1]!\n\0\0",
    /*6d9c*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d]: grp size(%d, %d) and chn size(%d, %d) do out of ZoomRatio[-%d, 1]!\n\0\0\0",
    /*6e0c*/ "UNKNOW\0\0",
    /*6e14*/ "[Func]:%s [Line]:%d [Info]:Chn %d pixl format(%d) must be 420/422/400!\n\0",
    /*6e5c*/ "[Func]:%s [Line]:%d [Info]:Chn %d mode(%d) must be 0!\n\0\0",
    /*6e94*/ "[Func]:%s [Line]:%d [Info]:Chn %d bFlip(%d) err!\n\0\0\0",
    /*6ec8*/ "[Func]:%s [Line]:%d [Info]:Chn %d bMirror(%d) err!\n\0",
    /*6efc*/ "[Func]:%s [Line]:%d [Info]:Chn%d Depth(%d) should be 0 to %d\n\0\0\0",
    /*6f3c*/ "[Func]:%s [Line]:%d [Info]:Video format(%d) must be linear!\n\0\0\0\0",
    /*6f7c*/ "[Func]:%s [Line]:%d [Info]:Chn%d width(%u) must be %d to %d!\n\0\0\0",
    /*6fbc*/ "[Func]:%s [Line]:%d [Info]:Chn%d height(%u) must be %d to %d!\n\0\0",
    /*6ffc*/ "[Func]:%s [Line]:%d [Info]:Chn%d width(%u) must align to %d !\n\0\0",
    /*703c*/ "[Func]:%s [Line]:%d [Info]:Chn%d height(%u) must align to %d!\n\0\0",
    /*707c*/ "[Func]:%s [Line]:%d [Info]:Chn%d CompressMode(%d) must be %d to %d!\n\0\0\0\0",
    /*70c4*/ "[Func]:%s [Line]:%d [Info]:Only chn0 support compress!\n\0",
    /*70fc*/ "[Func]:%s [Line]:%d [Info]:Grp%d chn%d rotate not support compress!\n\0\0\0\0",
    /*7144*/ "[Func]:%s [Line]:%d [Info]:Aspect raito not support chn crop!\n\0\0",
    /*7184*/ "[Func]:%s [Line]:%d [Info]:Flip not support lowdelay!\n\0\0",
    /*71bc*/ "[Func]:%s [Line]:%d [Info]:Dynamic range(%d) must be SDR8!\n\0",
    /*71f8*/ "[Func]:%s [Line]:%d [Info]:[grp%d VpssChn%d]: pic src enpixeformat(%s) and chn enpixeformat(%s) illegal!\n\0\0\0",
    /*7264*/ "[Func]:%s [Line]:%d [Info]:[grp%d]: pic crop size(%dx%d=%d) is bigger than Nr ref size(%dx%d=%d)!\n\0\0",
    /*72c8*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:3DNR only support linear!\n\0\0\0",
    /*7308*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:Input img width can't bigger than grp u32MaxW!\n\0\0",
    /*735c*/ "[Func]:%s [Line]:%d [Info]:[grp%d]: pic crop size(w:%d,h:%d,p:%s,size=%d) is bigger than Nr ref size(w:%d h:%d p:%s,size=%d)!\n\0\0",
    /*73dc*/ "[Func]:%s [Line]:%d [Info]:[grp%d]: pic mad size(w:%d,h:%d,size=%d) is bigger than Nr mad size(w:%d,h:%d,size=%d)!\n\0",
    /*7450*/ "[Func]:%s [Line]:%d [Info]:Input width(%d) must be the same with chn0 width(%d) when need to split in slave mode!\n\0\0",
    /*74c4*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:chn0 not support LBA when need to split in offline salve mode!\n\0\0",
    /*7528*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:chn0 can't enable mirror and cmp at the same time when need split in slave mode!\n\0\0\0\0",
    /*75a0*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:chn0 not support cmp when input img widht(%d) is (3360,3840]!\n\0\0\0",
    /*7604*/ "[Func]:%s [Line]:%d [Info]:No bind!\n\0\0\0\0",
    /*762c*/ "[Func]:%s [Line]:%d [Info]:No motion data,enable the vb motion data supplement!\n\0\0\0\0",
    /*7680*/ "[Func]:%s [Line]:%d [Info]:Invalid motion data!\n\0\0\0\0",
    /*76b4*/ "[Func]:%s [Line]:%d [Info]:First ref frame(%d) or cfg lost(%d), disable 3dnr temporarily!\n\0\0",
    /*7710*/ "[Func]:%s [Line]:%d [Info]:Mosaic width %d, height %d must align to 4!\n\0",
    /*7758*/ "[Func]:%s [Line]:%d [Info]:Mosaic start point x:%d must align to 4!\n\0\0\0\0",
    /*77a0*/ "[Func]:%s [Line]:%d [Info]:Mosaic start point y:%d must align to 2!\n\0\0\0\0",
    /*77e8*/ "[Func]:%s [Line]:%d [Info]:No rgn ko!\n\0\0",
    /*7810*/ "[Func]:%s [Line]:%d [Info]:Get mosaic err!\n\0",
    /*783c*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:enPixelFormat(%d) err!\n\0\0",
    /*7878*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:Img pixl(%d) space can't be bigger than grp pixl(%d)!\n\0\0\0",
    /*78d4*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:pic width(%u) less than %d!\n\0",
    /*7914*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:pic height(%u) less than %d!\n\0\0\0\0",
    /*7958*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:width(%u) not aligned to %d, set to %u!!\n\0\0\0\0",
    /*79a8*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:height(%u) not aligned to %d, set to %u!!\n\0\0\0",
    /*79f8*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:width(%u) must align to %d !\n\0\0\0\0",
    /*7a3c*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:height(%u) must align to %d !\n\0\0\0",
    /*7a80*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:Stride[0](%u) Stride[1](%u) Stride[2](%u) must align to %d!\n\0",
    /*7ae0*/ "[Func]:%s [Line]:%d [Info]:CompressMode(%d) err!\n\0\0\0",
    /*7b14*/ "[Func]:%s [Line]:%d [Info]:Only linear support compress!\n\0\0\0",
    /*7b50*/ "[Func]:%s [Line]:%d [Info]:VideoFormat(%d) error, should be %d or %d \n\0\0",
    /*7b98*/ "[Func]:%s [Line]:%d [Info]:Video format is TILE_64x16,pixel format(%d) must be %d\n\0\0",
    /*7bec*/ "[Func]:%s [Line]:%d [Info]:Head addr(Y:0x%llx) err!\n\0\0\0\0",
    /*7c24*/ "[Func]:%s [Line]:%d [Info]:Head addr(C:0x%llx) err!\n\0\0\0\0",
    /*7c5c*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:color gamut(%d) err!\n\0\0\0\0",
    /*7c98*/ "[Func]:%s [Line]:%d [Info]:enNRVer(%d) must be VPSS_NR_V2!\n\0",
    /*7cd4*/ "[Func]:%s [Line]:%d [Info]:IEy[%d].IEDZ(%d) must be 0 to 999\n\0\0\0",
    /*7d14*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].SPN6(%d) must be 0 to 5\n\0",
    /*7d50*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].SBN6(%d) must be 0 to 5\n\0",
    /*7d8c*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].PBR6(%d) must be 0 to 16\n\0\0\0\0",
    /*7dcc*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].SRT0(%d) must be 0 to 16\n\0\0\0\0",
    /*7e0c*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].SRT1(%d) must be 0 to 16\n\0\0\0\0",
    /*7e4c*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].JMODE(%d) must be 0 to 4\n\0\0\0\0",
    /*7e8c*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].DeIdx(%d) must be 3 to 6\n\0\0\0\0",
    /*7ecc*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].kMode(%d) must be 0 to 3\n\0\0\0\0",
    /*7f0c*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].SFN0(%d) must be 0 to 6\n\0",
    /*7f48*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].SFN1(%d) must be 0 to 6\n\0",
    /*7f84*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].SFN2(%d) must be 0 to 6\n\0",
    /*7fc0*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].SFN3(%d) must be 0 to 6\n\0",
    /*7ffc*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].SFR6[%d] should be 0 to 31 which is %d\n\0\0",
    /*8048*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].SBSk[%d] should be 0 to 8191 which is %d\n\0\0\0\0",
    /*8098*/ "[Func]:%s [Line]:%d [Info]:SFy[%d].SDSk[%d] should be 0 to 8191 which is %d\n\0\0\0\0",
    /*80e8*/ "[Func]:%s [Line]:%d [Info]:TFy[%d].TFS0(%d) must be 0 to %d\n\0\0\0\0",
    /*8128*/ "[Func]:%s [Line]:%d [Info]:TFy[%d].TFS1(%d) must be 0 to %d\n\0\0\0\0",
    /*8168*/ "[Func]:%s [Line]:%d [Info]:TFy[%d].TDZ0(%d) must be 0 to 999\n\0\0\0",
    /*81a8*/ "[Func]:%s [Line]:%d [Info]:TFy[%d].TDZ1(%d) must be 0 to 999\n\0\0\0",
    /*81e8*/ "[Func]:%s [Line]:%d [Info]:TFy[%d].SDZ0(%d) must be 0 to 999\n\0\0\0",
    /*8228*/ "[Func]:%s [Line]:%d [Info]:TFy[%d].SDZ1(%d) must be 0 to 999\n\0\0\0",
    /*8268*/ "[Func]:%s [Line]:%d [Info]:TFy[%d].RFI(%d) must be 0 to 4\n\0\0",
    /*82a4*/ "[Func]:%s [Line]:%d [Info]:TFy[%d].TSI0(%d) must be 0 to 1\n\0",
    /*82e0*/ "[Func]:%s [Line]:%d [Info]:TFy[%d].TSI1(%d) must be 0 to 1\n\0",
    /*831c*/ "[Func]:%s [Line]:%d [Info]:TFy[%d].TFR0[%d](%d) must be 0 to 31\n\0\0\0\0",
    /*8360*/ "[Func]:%s [Line]:%d [Info]:TFy[%d].TFR1[%d](%d) must be 0 to 31\n\0\0\0\0",
    /*83a4*/ "[Func]:%s [Line]:%d [Info]:MDy[%d].MATH0(%d) must be 0 to %d\n\0\0\0",
    /*83e4*/ "[Func]:%s [Line]:%d [Info]:MDy[%d].MATH1(%d) must be 0 to %d\n\0\0\0",
    /*8424*/ "[Func]:%s [Line]:%d [Info]:MDy[%d].MATE0(%d) must be 0 to 8\n\0\0\0\0",
    /*8464*/ "[Func]:%s [Line]:%d [Info]:MDy[%d].MATE1(%d) must be 0 to 8 \n\0\0\0",
    /*84a4*/ "[Func]:%s [Line]:%d [Info]:MDy[%d].MABW0(%d) must be 0 to 9 \n\0\0\0",
    /*84e4*/ "[Func]:%s [Line]:%d [Info]:MDy[%d].MABW1(%d) must be 0 to 9 \n\0\0\0",
    /*8524*/ "[Func]:%s [Line]:%d [Info]:RFs.RFUI(%d) must be 0 to 4\n\0",
    /*855c*/ "[Func]:%s [Line]:%d [Info]:Grp %d NRX ISO addr invalid!\n\0\0\0\0",
    /*8598*/ "[Func]:%s [Line]:%d [Info]:Copy NRX ISO param fail!\n\0\0\0\0",
    /*85d0*/ "[Func]:%s [Line]:%d [Info]:Grp %d NRX auto param addr invalid!\n\0",
    /*8610*/ "[Func]:%s [Line]:%d [Info]:Copy NRX auto param fail!\n\0\0\0",
    /*8648*/ "[Func]:%s [Line]:%d [Info]:ISO(%u) must between [100, 3276800]!\n\0\0\0\0",
    /*868c*/ "[Func]:%s [Line]:%d [Info]:ISO must be arranged from small to large!\n\0\0\0",
    /*86d4*/ "[Func]:%s [Line]:%d [Info]:enOptMode(%d) err!\n\0\0",
    /*8704*/ "[Func]:%s [Line]:%d [Info]:pastNRXParam null!\n\0\0",
    /*8734*/ "[Func]:%s [Line]:%d [Info]:pau32ISO null!\n\0\0",
    /*8760*/ "[Func]:%s [Line]:%d [Info]:u32ParamNum(%u) must be [1, %d]!\n\0\0\0\0",
    /*87a0*/ "[Func]:%s [Line]:%d [Info]:Grp %d:pastNRXParam null!\n\0\0\0",
    /*87d8*/ "[Func]:%s [Line]:%d [Info]:Grp %d:pau32ISO null!\n\0\0\0",
    /*880c*/ "[Func]:%s [Line]:%d [Info]:Grp %d pastNRXParam addr invalid!\n\0\0\0",
    /*884c*/ "[Func]:%s [Line]:%d [Info]:Grp %d:copy NRX ISO param fail!\n\0",
    /*8888*/ "[Func]:%s [Line]:%d [Info]:Grp %d:copy NRX param fail!\n\0",
    /*88c0*/ "[Func]:%s [Line]:%d [Info]:Grp %d pau32ISO addr invalid!\n\0\0\0",
    /*88fc*/ "NR_S\0\0\0\0",
    /*8904*/ "NR_X\0\0\0\0",
    /*890c*/ "NR_B\0\0\0\0",
    /*8914*/ "VER_1\0\0\0",
    /*891c*/ "VER_2\0\0\0",
    /*8924*/ "VER_3\0\0\0",
    /*892c*/ "VER_4\0\0\0",
    /*8934*/ "AUTO\0\0\0\0",
    /*893c*/ "MANUAL\0\0",
    /*8944*/ "N/A\0",
    /*8948*/ "-------------------------------VPSS GPR%d 3DNR PARAM-------------------------------------\n\0\0",
    /*89a4*/ "Intf\0\0\0\0",
    /*89ac*/ "GrpID\0\0\0",
    /*89b4*/ "%8s%8s%10s%10s%10s%8s\n\0\0",
    /*89cc*/ "Ref\0",
    /*89d0*/ "ISO\0",
    /*89d4*/ "OptMode\0",
    /*89dc*/ "Version\0",
    /*89e4*/ "%8d%8s%10s%10s%10d%8d\n\0\0",
    /*89fc*/ "NRyEn_2\0",
    /*8a04*/ "NRyEn_1\0",
    /*8a0c*/ "%10s%26s%26s%26s\n\0\0\0",
    /*8a20*/ "NRyEn_4\0",
    /*8a28*/ "NRyEn_3\0",
    /*8a30*/ "%10d%26d%26d%26d\n\0\0\0",
    /*8a44*/ "SFS2_2\0\0",
    /*8a4c*/ "SFS2_1\0\0",
    /*8a54*/ "SFS2_4\0\0",
    /*8a5c*/ "SFS2_3\0\0",
    /*8a64*/ "SFS4_2\0\0",
    /*8a6c*/ "SFS4_1\0\0",
    /*8a74*/ "SFS4_4\0\0",
    /*8a7c*/ "SFS4_3\0\0",
    /*8a84*/ "TFS1_1\0\0",
    /*8a8c*/ "TFS0_1\0\0",
    /*8a94*/ "%10s%12s%14s%12s\n\0\0\0",
    /*8aa8*/ "TFS1_2\0\0",
    /*8ab0*/ "TFS0_2\0\0",
    /*8ab8*/ "%10d%12d%14d%12d\n\0\0\0",
    /*8acc*/ "MATH1_1\0",
    /*8ad4*/ "MATH0_1\0",
    /*8adc*/ "MATH1_2\0",
    /*8ae4*/ "MATH0_2\0",
    /*8aec*/ "[Func]:%s [Line]:%d [Info]:enCompressMode(%d) err!\n\0",
    /*8b20*/ "[Func]:%s [Line]:%d [Info]:dynamic range(%d) must be SDR8!\n\0",
    /*8b5c*/ "[Func]:%s [Line]:%d [Info]: pixl format(%d) must be 420/P422/400!\n\0\0",
    /*8ba0*/ "[Func]:%s [Line]:%d [Info]:video format(%d) must be linear!\n\0\0\0\0",
    /*8be0*/ "[Func]:%s [Line]:%d [Info]:width(%d) must be [%d,%d]!\n\0\0",
    /*8c18*/ "[Func]:%s [Line]:%d [Info]:Height(%d) must be [%d,%d]!\n\0",
    /*8c50*/ "[Func]:%s [Line]:%d [Info]:Width must align to 2!\n\0\0",
    /*8c84*/ "[Func]:%s [Line]:%d [Info]:Height must align to 2!\n\0",
    /*8cb8*/ "[Func]:%s [Line]:%d [Info]:Depth(%d) must be 0 to %d\n\0\0\0",
    /*8cf0*/ "[Func]:%s [Line]:%d [Info]:crop area(x:%d,y:%d) is out of picture(w:%d,h:%d)!\n\0\0",
    /*8d40*/ "[Func]:%s [Line]:%d [Info]:crop area(w:%d,h:%d) is too small! \n\0",
    /*8d80*/ "[Func]:%s [Line]:%d [Info]:VPSS_CROP_RATIO_COOR not support 2 axis stabilisation(s16OffsetLeft:%d,s16OffsetTop:%d)!\n\0\0\0\0",
    /*8df8*/ "[Func]:%s [Line]:%d [Info]:crop area(w:%d,h:%d) is too small!\n\0\0",
    /*8e38*/ "[Func]:%s [Line]:%d [Info]:[Grp%d]:Unsupported pixel format %d!\n\0\0\0\0",
    /*8e7c*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d] Dest width(%d) is out of [%d %d]!\n\0",
    /*8ec8*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d] Dest height(%d) is out of [%d %d]!\n\0\0\0\0",
    /*8f18*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d] dest addr null!\n\0\0\0",
    /*8f54*/ "[Func]:%s [Line]:%d [Info]:[grp%d] in_img [w,h]size [%d,%d] is out of max size [%d, %d]!\n\0\0\0",
    /*8fb0*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:Chn0 not support crop when need to split!\n\0\0\0",
    /*9000*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:Chn0 not support horizon scale when need to split in offline salve mode,in w:%d,out w:%d!\n\0\0\0",
    /*9080*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:chn0 can't enable mirror, lba and cmp at the same time when need split!\n\0",
    /*90ec*/ "[Func]:%s [Line]:%d [Info]:[grp:%d]Chn0 not support compress when vpss need split and output width less than 512!\n\0\0",
    /*9160*/ "[Func]:%s [Line]:%d [Info]:[grp:%d]Chn0 not support compress when input width(%d) is (3360,3840]!\n\0\0",
    /*91c4*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:Chn%d not support lowdelay when need to split!\n\0\0",
    /*9218*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d]: input size(%d, %d) and output size(%d, %d) out of ZoomRatio[1, %d]!!\n\0",
    /*9288*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn:%d]:input size(%d, %d) and output size(%d, %d) out of ZoomRatio[1, 1] in online mode!\n\0\0\0\0",
    /*9308*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn:%d]:input size(%d, %d) and output size(%d, %d) out of ZoomRatio[-%d, 1]!!\n\0\0\0\0",
    /*937c*/ "[Func]:%s [Line]:%d [Info]:[grp%d]:Not support frame cmp when pic w < 128!\n\0",
    /*93c8*/ "Split num(%d) less than 2!\n\0",
    /*93e4*/ "0\0\0\0",
    /*93e8*/ "Out of max split num!\n\0\0",
    /*9400*/ "[Func]:%s [Line]:%d [Info]:read bus error 0x%x !\n\0\0\0",
    /*9434*/ "[Func]:%s [Line]:%d [Info]:write bus error 0x%x !\n\0\0",
    /*9468*/ "[Func]:%s [Line]:%d [Info]:Unknown interrupt[0x%x]\n\0",
    /*949c*/ "[Func]:%s [Line]:%d [Info]:Read bus err[0x%x]\n\0\0",
    /*94cc*/ "[Func]:%s [Line]:%d [Info]:Write bus err[0x%x]\n\0",
    /*94fc*/ "[Func]:%s [Line]:%d [Info]:Decompress err[0x%x]\n\0\0\0\0",
    /*9530*/ "[Func]:%s [Line]:%d [Info]:Time out interrupt!\n\0",
    /*9560*/ "[Func]:%s [Line]:%d [Info]:get mmz name fail!\n\0\0",
    /*9590*/ "%s(%d) model\0\0\0\0",
    /*95a0*/ "HI_NULL != pSclCfg\0\0",
    /*95b4*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d]:Dest VB Width:%d  Height:%d illegal!\n\0\0",
    /*9604*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d]:get VB fail!\n\0\0",
    /*963c*/ "[Func]:%s [Line]:%d [Info]:grp %d, chn %d,invalid pool id\n\0\0",
    /*9678*/ "[Func]:%s [Line]:%d [Info]:[grp%d chn%d]:get VB fail!Size:%d\n\0\0\0",
    /*96b8*/ "[Func]:%s [Line]:%d [Info]:request irq fail!\n\0\0\0",
    /*96e8*/ "[Func]:%s [Line]:%d [Info]:region ([%d, %d], [%d, %d], [%d, %d], [%d, %d]) is on vertical or horizental line\n\0\0\0",
    /*9758*/ "[Func]:%s [Line]:%d [Info]:[Chn%d]Flip not support low delay!\n\0\0",
    /*9798*/ "[Func]:%s [Line]:%d [Info]:COVER Chn(%d) must be 0\n\0",
    /*97cc*/ "[Func]:%s [Line]:%d [Info]:Mosaic Chn(%d) must be 0\n\0\0\0\0",
    /*9804*/ "[Func]:%s [Line]:%d [Info]:Chn %d get vb fail\n\0\0",
    /*9834*/ "[Func]:%s [Line]:%d [Info]:Chn %d add VB fail!\n\0",
    /*9864*/ "[Func]:%s [Line]:%d [Info]:Chn %d add VB fail\n\0\0",
    /*9894*/ "[Func]:%s [Line]:%d [Info]:Chn %d VB will be overwirted!\n\0\0\0",
    /*98d0*/ "HI_NULL != pstCapacity\0\0",
    /*98e8*/ "[Func]:%s [Line]:%d [Info]:regist cover fail!\n\0\0",
    /*9918*/ "[Func]:%s [Line]:%d [Info]:regist coverex fail!\n\0\0\0\0",
    /*994c*/ "[Func]:%s [Line]:%d [Info]:regist overlayex fail!\n\0\0",
    /*9980*/ "[Func]:%s [Line]:%d [Info]:regist mosaic fail!\n\0",
    /*99b0*/ "[Func]:%s [Line]:%d [Info]:not support VPSS_CHN_PART_E(%d)\n\0",
    /*99ec*/ "[Func]:%s [Line]:%d [Info]:[grp%d]no hardware!\n\0",
    /*9a1c*/ "HI_NULL != pstDevCtx\0\0\0\0",
    /*9a34*/ "[Func]:%s [Line]:%d [Info]:NULL Pointer:pstPicInfo\n\0",
    /*9a68*/ "YVU-SP422\0\0\0",
    /*9a74*/ "YVU-SP420\0\0\0",
    /*9a80*/ "YUV-SP422\0\0\0",
    /*9a8c*/ "YUV-SP420\0\0\0",
    /*9a98*/ "Single\0\0",
    /*9aa0*/ " vpss:%d pVpss->VPSS_PNEXT:low(0x%x) u64NextPhyAddr:0x%llx\n\0",
    /*9adc*/ "================vpss %d debug info============= \n\0\0\0",
    /*9b10*/ "\n\0\0\0",
    /*9b14*/ "%04x :  %08x  %08x  %08x  %08x\n\0",
    /*9b34*/ "0\0\0\0",
    /*9b38*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*9b78*/ "ddr_short== 0\0\0\0",
    /*9b88*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*9bc8*/ "ddr_short== 1\0\0\0",
    /*9bd8*/ "cfg->out0_cmp_en == 0\0\0\0",
    /*9bf0*/ "out[i].out0_width%256 == 0\0\0",
    /*9c0c*/ "0\0\0\0",
    /*9c10*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*9c50*/ "( pR != ((void *)0) ) && ( pX != ((void *)0) ) && (Tab != ((void *)0))\0\0",
    /*9c98*/ "1 == tabVpss[0]\0",
    /*9ca8*/ "1 == tabVpss[1]\0",
    /*9cb8*/ "1 == tabVpss[2]\0",
    /*9cc8*/ "1 == tabVpss[3]\0",
    /*9cd8*/ "cannot find vpss IRQ\n\0\0\0",
    /*9cf0*/ "hi35xx_vpss\0",
    /*9cfc*/ ""
};

unsigned char data[340] = {
    /*0000*/ 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0010*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0020*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0030*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0040*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0050*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0060*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0070*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x70, 0x73, 0x73, 
    /*0080*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 
    /*0090*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00a0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00c0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00d0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00e0*/ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x4b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*00f0*/ 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0100*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x9c, 0x00, 0x00, 
    /*0110*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0120*/ 0x00, 0x00, 0x00, 0x00, 0xc8, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0130*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0140*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0150*/ 0x00, 0x00, 0x00, 0x00, 
};

unsigned char rel.data[224] = {
    /*0000*/ 0x04, 0x00, 0x00, 0x00, 0x02, 0x81, 0x02, 0x00, 0x14, 0x00, 0x00, 0x00, 0x02, 0x82, 0x02, 0x00, 
    /*0010*/ 0x18, 0x00, 0x00, 0x00, 0x02, 0x77, 0x02, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x02, 0x74, 0x02, 0x00, 
    /*0020*/ 0x34, 0x00, 0x00, 0x00, 0x02, 0x7f, 0x02, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x80, 0x02, 0x00, 
    /*0030*/ 0x90, 0x00, 0x00, 0x00, 0x02, 0x1b, 0x0a, 0x00, 0x94, 0x00, 0x00, 0x00, 0x02, 0xb9, 0x08, 0x00, 
    /*0040*/ 0x98, 0x00, 0x00, 0x00, 0x02, 0x72, 0x02, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x02, 0x71, 0x02, 0x00, 
    /*0050*/ 0xa0, 0x00, 0x00, 0x00, 0x02, 0x6e, 0x02, 0x00, 0xa8, 0x00, 0x00, 0x00, 0x02, 0x0d, 0x00, 0x00, 
    /*0060*/ 0xb4, 0x00, 0x00, 0x00, 0x02, 0x23, 0x08, 0x00, 0xb8, 0x00, 0x00, 0x00, 0x02, 0x09, 0x08, 0x00, 
    /*0070*/ 0xbc, 0x00, 0x00, 0x00, 0x02, 0x17, 0x08, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x02, 0x3d, 0x07, 0x00, 
    /*0080*/ 0xc4, 0x00, 0x00, 0x00, 0x02, 0x55, 0x08, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x02, 0x9f, 0x08, 0x00, 
    /*0090*/ 0xcc, 0x00, 0x00, 0x00, 0x02, 0x80, 0x08, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x02, 0x7c, 0x08, 0x00, 
    /*00a0*/ 0xd4, 0x00, 0x00, 0x00, 0x02, 0x0c, 0x08, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x02, 0xaf, 0x07, 0x00, 
    /*00b0*/ 0xdc, 0x00, 0x00, 0x00, 0x02, 0xed, 0x09, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x02, 0x21, 0x08, 0x00, 
    /*00c0*/ 0xf8, 0x00, 0x00, 0x00, 0x02, 0x20, 0x07, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x02, 0x1e, 0x07, 0x00, 
    /*00d0*/ 0x0c, 0x01, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0x24, 0x01, 0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 
};

unsigned char bss[27908];

@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text
@ Size: 0x32ff4
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN VPSS_QueryVpssSelf
    /*00000000*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00000004*/ SUB         SP, SP, #12 
    /*00000008*/ MOVW        R2, #7111                   @ 0x1bc7 
    /*0000000c*/ MOV         R1, #7 
    /*00000010*/ STR         R0, [SP, #4] 
    /*00000014*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00000018*/ STR         R2, [SP] 
    /*0000001c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00000020*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x0] 
    /*00000024*/ MOV         R0, #3 
    /*00000028*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x0] 
    /*0000002c*/ BL          0x000000000000002C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000030*/ MVN         R0, #0 
    /*00000034*/ ADD         SP, SP, #12 
    /*00000038*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VPSS_QueryVpssSelf


FUNC_BEGIN VPSS_CheckChnAttrForGdc
    /*0000003c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000040*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000044*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00000048*/ SUB         SP, SP, #20 
    /*0000004c*/ LDR         R2, [R3, R0, LSL #2] 
    /*00000050*/ MOV         R3, #72                     @ 0x48 
    /*00000054*/ MLA         R3, R3, R1, R2 
    /*00000058*/ LDR         R2, [R3, #824]              @ 0x338 
    /*0000005c*/ CMP         R2, #0 
    /*00000060*/ BNE         VPSS_CheckChnAttrForGdc_x7c
    /*00000064*/ LDR         R3, [R3, #836]              @ 0x344 
    /*00000068*/ CMP         R3, #0 
    /*0000006c*/ MOVEQ       R0, R3 
    /*00000070*/ BNE         VPSS_CheckChnAttrForGdc_xb4
    VPSS_CheckChnAttrForGdc_x74:
    /*00000074*/ ADD         SP, SP, #20 
    /*00000078*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_CheckChnAttrForGdc_x7c:
    /*0000007c*/ STR         R2, [SP, #12] 
    /*00000080*/ MOVW        R3, #4290                   @ 0x10c2 
    /*00000084*/ STR         R1, [SP, #8] 
    /*00000088*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x54] 
    /*0000008c*/ STR         R0, [SP, #4] 
    /*00000090*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x54] 
    /*00000094*/ STR         R3, [SP] 
    /*00000098*/ MOV         R1, #7 
    /*0000009c*/ LDR         R3, [PC, #68]               @ 0x00000000000000e8 
    /*000000a0*/ MOV         R0, #3 
    /*000000a4*/ BL          0x00000000000000A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000000a8*/ MOVW        R0, #32776                  @ 0x8008 
    /*000000ac*/ MOVT        R0, #40967                  @ 0xa007 
    /*000000b0*/ B           VPSS_CheckChnAttrForGdc_x74
    VPSS_CheckChnAttrForGdc_xb4:
    /*000000b4*/ STR         R1, [SP, #8] 
    /*000000b8*/ MOVW        R3, #4296                   @ 0x10c8 
    /*000000bc*/ STR         R0, [SP, #4] 
    /*000000c0*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x98] 
    /*000000c4*/ STR         R3, [SP] 
    /*000000c8*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x98] 
    /*000000cc*/ LDR         R3, [PC, #20]               @ 0x00000000000000e8 
    /*000000d0*/ MOV         R1, #7 
    /*000000d4*/ MOV         R0, #3 
    /*000000d8*/ BL          0x00000000000000D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000000dc*/ MOVW        R0, #32776                  @ 0x8008 
    /*000000e0*/ MOVT        R0, #40967                  @ 0xa007 
    /*000000e4*/ B           VPSS_CheckChnAttrForGdc_x74
    /*000000e8*/ ANDEQ       R0, R0, R4, LSL R0 
FUNC_END VPSS_CheckChnAttrForGdc


FUNC_BEGIN VPSS_WaitConditionCallBackEx
    /*000000ec*/ PUSH        {R4, LR} 
    /*000000f0*/ SUBS        R4, R0, #0 
    /*000000f4*/ SUB         SP, SP, #8 
    /*000000f8*/ BEQ         VPSS_WaitConditionCallBackEx_x148
    /*000000fc*/ LDR         R2, [R4] 
    /*00000100*/ MOV         R3, #92                     @ 0x5c 
    /*00000104*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000108*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000010c*/ MUL         R3, R3, R2 
    /*00000110*/ ADD         R2, R0, R3 
    /*00000114*/ LDR         R2, [R2, #72]               @ 0x48 
    /*00000118*/ CMP         R2, #0 
    /*0000011c*/ MOVNE       R0, #0 
    /*00000120*/ BEQ         VPSS_WaitConditionCallBackEx_x12c
    VPSS_WaitConditionCallBackEx_x124:
    /*00000124*/ ADD         SP, SP, #8 
    /*00000128*/ POP         {R4, PC} 
    VPSS_WaitConditionCallBackEx_x12c:
    /*0000012c*/ ADD         R0, R0, R3 
    /*00000130*/ ADD         R0, R0, #80                 @ 0x50 
    /*00000134*/ BL          0x0000000000000134          @ osal_atomic_read [R_ARM_CALL: +0x0] 
    /*00000138*/ CLZ         R0, R0 
    /*0000013c*/ LSR         R0, R0, #5 
    /*00000140*/ ADD         SP, SP, #8 
    /*00000144*/ POP         {R4, PC} 
    VPSS_WaitConditionCallBackEx_x148:
    /*00000148*/ MOVW        R3, #2729                   @ 0xaa9 
    /*0000014c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdc] 
    /*00000150*/ STR         R3, [SP] 
    /*00000154*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdc] 
    /*00000158*/ LDR         R3, [PC, #16]               @ 0x0000000000000170 
    /*0000015c*/ MOV         R1, #7 
    /*00000160*/ MOV         R0, #3 
    /*00000164*/ BL          0x0000000000000164          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000168*/ MOV         R0, R4 
    /*0000016c*/ B           VPSS_WaitConditionCallBackEx_x124
    /*00000170*/ ANDEQ       R0, R0, IP, LSR #32 
FUNC_END VPSS_WaitConditionCallBackEx


FUNC_BEGIN VpssDefCheckNullPtr.part.2
    /*00000174*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00000178*/ SUB         SP, SP, #12 
    /*0000017c*/ MOV         R3, #123                    @ 0x7b 
    /*00000180*/ MOV         R1, #7 
    /*00000184*/ STR         R3, [SP] 
    /*00000188*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdc] 
    /*0000018c*/ LDR         R3, [PC, #24]               @ 0x00000000000001ac 
    /*00000190*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdc] 
    /*00000194*/ MOV         R0, #3 
    /*00000198*/ BL          0x0000000000000198          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000019c*/ MOVW        R0, #32774                  @ 0x8006 
    /*000001a0*/ MOVT        R0, #40967                  @ 0xa007 
    /*000001a4*/ ADD         SP, SP, #12 
    /*000001a8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000001ac*/ ANDEQ       R0, R0, IP, ASR #32 
FUNC_END VpssDefCheckNullPtr.part.2


FUNC_BEGIN VpssDefCheckGrpId.part.3
    /*000001b0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000001b4*/ SUB         SP, SP, #12 
    /*000001b8*/ MOV         R3, #134                    @ 0x86 
    /*000001bc*/ MOV         R1, #7 
    /*000001c0*/ STR         R3, [SP] 
    /*000001c4*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x104] 
    /*000001c8*/ LDR         R3, [PC, #24]               @ 0x00000000000001e8 
    /*000001cc*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x104] 
    /*000001d0*/ MOV         R0, #3 
    /*000001d4*/ BL          0x00000000000001D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000001d8*/ MOVW        R0, #32769                  @ 0x8001 
    /*000001dc*/ MOVT        R0, #40967                  @ 0xa007 
    /*000001e0*/ ADD         SP, SP, #12 
    /*000001e4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000001e8*/ ANDEQ       R0, R0, R0, RRX 
FUNC_END VpssDefCheckGrpId.part.3


FUNC_BEGIN VpssDefCheckChnId.part.4
    /*000001ec*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000001f0*/ SUB         SP, SP, #12 
    /*000001f4*/ MOV         R3, #145                    @ 0x91 
    /*000001f8*/ MOV         R1, #7 
    /*000001fc*/ STR         R3, [SP] 
    /*00000200*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12c] 
    /*00000204*/ LDR         R3, [PC, #24]               @ 0x0000000000000224 
    /*00000208*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12c] 
    /*0000020c*/ MOV         R0, #3 
    /*00000210*/ BL          0x0000000000000210          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000214*/ MOVW        R0, #32770                  @ 0x8002 
    /*00000218*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000021c*/ ADD         SP, SP, #12 
    /*00000220*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00000224*/ ANDEQ       R0, R0, R4, ROR R0 
FUNC_END VpssDefCheckChnId.part.4


FUNC_BEGIN VpssNotifyBind
    /*00000228*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000022c*/ SUBS        R8, R2, #0 
    /*00000230*/ SUB         SP, SP, #16 
    /*00000234*/ MOV         R6, R0 
    /*00000238*/ MOV         R9, R1 
    /*0000023c*/ BEQ         VpssNotifyBind_x2f4
    VpssNotifyBind_x240:
    /*00000240*/ CMP         R6, #15 
    /*00000244*/ BHI         VpssNotifyBind_x2c4
    VpssNotifyBind_x248:
    /*00000248*/ CMP         R9, #10 
    /*0000024c*/ BHI         VpssNotifyBind_x2dc
    VpssNotifyBind_x250:
    /*00000250*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000254*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000258*/ MOV         R4, #92                     @ 0x5c 
    /*0000025c*/ MLA         R4, R4, R6, R7 
    /*00000260*/ ADD         R4, R4, #108                @ 0x6c 
    /*00000264*/ MOV         R0, R4 
    /*00000268*/ BL          0x0000000000000268          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000026c*/ SUBS        R5, R0, #0 
    /*00000270*/ BNE         VpssNotifyBind_x30c
    /*00000274*/ LDR         SL, [R7, R6, LSL #2] 
    /*00000278*/ CMP         SL, #0 
    /*0000027c*/ BEQ         VpssNotifyBind_x318
    /*00000280*/ ADD         R0, R7, #1536               @ 0x600 
    /*00000284*/ ADD         R1, SP, #12 
    /*00000288*/ BL          0x0000000000000288          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000028c*/ MOV         R2, #772                    @ 0x304 
    /*00000290*/ MLA         R0, R2, R9, SL 
    /*00000294*/ MOV         R1, R8 
    /*00000298*/ ADD         R0, R0, #19968              @ 0x4e00 
    /*0000029c*/ ADD         R0, R0, #80                 @ 0x50 
    /*000002a0*/ BL          0x00000000000002A0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000002a4*/ ADD         R1, SP, #12 
    /*000002a8*/ ADD         R0, R7, #1536               @ 0x600 
    /*000002ac*/ BL          0x00000000000002AC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000002b0*/ MOV         R0, R4 
    /*000002b4*/ BL          0x00000000000002B4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000002b8*/ MOV         R0, R5 
    VpssNotifyBind_x2bc:
    /*000002bc*/ ADD         SP, SP, #16 
    /*000002c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VpssNotifyBind_x2c4:
    /*000002c4*/ BL          0x00000000000001B0 
    /*000002c8*/ CMP         R0, #0 
    /*000002cc*/ BEQ         VpssNotifyBind_x248
    /*000002d0*/ MOVW        R0, #32769                  @ 0x8001 
    /*000002d4*/ MOVT        R0, #40967                  @ 0xa007 
    /*000002d8*/ B           VpssNotifyBind_x2bc
    VpssNotifyBind_x2dc:
    /*000002dc*/ BL          0x00000000000001EC 
    /*000002e0*/ CMP         R0, #0 
    /*000002e4*/ BEQ         VpssNotifyBind_x250
    /*000002e8*/ MOVW        R0, #32770                  @ 0x8002 
    /*000002ec*/ MOVT        R0, #40967                  @ 0xa007 
    /*000002f0*/ B           VpssNotifyBind_x2bc
    VpssNotifyBind_x2f4:
    /*000002f4*/ BL          0x0000000000000174 
    /*000002f8*/ CMP         R0, #0 
    /*000002fc*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*00000300*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*00000304*/ BNE         VpssNotifyBind_x2bc
    /*00000308*/ B           VpssNotifyBind_x240
    VpssNotifyBind_x30c:
    /*0000030c*/ MOV         R0, #65024                  @ 0xfe00 
    /*00000310*/ MOVT        R0, #65535                  @ 0xffff 
    /*00000314*/ B           VpssNotifyBind_x2bc
    VpssNotifyBind_x318:
    /*00000318*/ MOVW        R3, #295                    @ 0x127 
    /*0000031c*/ MOV         R1, #7 
    /*00000320*/ STR         R3, [SP] 
    /*00000324*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00000328*/ LDR         R3, [PC, #32]               @ 0x0000000000000350 
    /*0000032c*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00000330*/ STR         R6, [SP, #4] 
    /*00000334*/ MOV         R0, #3 
    /*00000338*/ BL          0x0000000000000338          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000033c*/ MOV         R0, R4 
    /*00000340*/ BL          0x0000000000000340          @ osal_up [R_ARM_CALL: +0x0] 
    /*00000344*/ MOVW        R0, #32773                  @ 0x8005 
    /*00000348*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000034c*/ B           VpssNotifyBind_x2bc
    /*00000350*/ ANDEQ       R0, R0, R8, LSL #1 
FUNC_END VpssNotifyBind


FUNC_BEGIN VpssDefCheckExtChnId.part.5
    /*00000354*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00000358*/ SUB         SP, SP, #12 
    /*0000035c*/ MOV         R3, #156                    @ 0x9c 
    /*00000360*/ MOV         R1, #7 
    /*00000364*/ STR         R3, [SP] 
    /*00000368*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12c] 
    /*0000036c*/ LDR         R3, [PC, #24]               @ 0x000000000000038c 
    /*00000370*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12c] 
    /*00000374*/ MOV         R0, #3 
    /*00000378*/ BL          0x0000000000000378          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000037c*/ MOVW        R0, #32770                  @ 0x8002 
    /*00000380*/ MOVT        R0, #40967                  @ 0xa007 
    /*00000384*/ ADD         SP, SP, #12 
    /*00000388*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000038c*/ MULEQ       R0, R8, R0 
FUNC_END VpssDefCheckExtChnId.part.5


FUNC_BEGIN VPSS_ChnWorkingNumAdd.part.13
    /*00000390*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000394*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000398*/ ADD         R2, R3, R0, LSL #2 
    /*0000039c*/ LDR         R2, [R2, #1540]             @ 0x604 
    /*000003a0*/ BICS        R2, R2, #2 
    /*000003a4*/ LDREQ       R3, [R3, R0, LSL #2] 
    /*000003a8*/ ADDEQ       R1, R3, R1, LSL #2 
    /*000003ac*/ LDREQ       R3, [R1, #1692]             @ 0x69c 
    /*000003b0*/ ADDEQ       R3, R3, #1 
    /*000003b4*/ STREQ       R3, [R1, #1692]             @ 0x69c 
    /*000003b8*/ BX          LR 
FUNC_END VPSS_ChnWorkingNumAdd.part.13


FUNC_BEGIN VPSS_ChnWorkingNumSub.part.15
    /*000003bc*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000003c0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000003c4*/ ADD         R2, R3, R0, LSL #2 
    /*000003c8*/ LDR         R2, [R2, #1540]             @ 0x604 
    /*000003cc*/ BICS        R2, R2, #2 
    /*000003d0*/ LDREQ       R3, [R3, R0, LSL #2] 
    /*000003d4*/ ADDEQ       R1, R3, R1, LSL #2 
    /*000003d8*/ LDREQ       R3, [R1, #1692]             @ 0x69c 
    /*000003dc*/ SUBEQ       R3, R3, #1 
    /*000003e0*/ STREQ       R3, [R1, #1692]             @ 0x69c 
    /*000003e4*/ BX          LR 
FUNC_END VPSS_ChnWorkingNumSub.part.15


FUNC_BEGIN VpssDefCheckNullPtr
    /*000003e8*/ CMP         R0, #0 
    /*000003ec*/ BEQ         VpssDefCheckNullPtr_x3f8
    /*000003f0*/ MOV         R0, #0 
    /*000003f4*/ BX          LR 
    VpssDefCheckNullPtr_x3f8:
    /*000003f8*/ B           0x0000000000000174 
FUNC_END VpssDefCheckNullPtr


FUNC_BEGIN VpssDefCheckGrpId
    /*000003fc*/ CMP         R0, #15 
    /*00000400*/ BHI         VpssDefCheckGrpId_x40c
    /*00000404*/ MOV         R0, #0 
    /*00000408*/ BX          LR 
    VpssDefCheckGrpId_x40c:
    /*0000040c*/ B           0x00000000000001B0 
FUNC_END VpssDefCheckGrpId


FUNC_BEGIN VpssDefCheckChnId
    /*00000410*/ CMP         R0, #10 
    /*00000414*/ BHI         VpssDefCheckChnId_x420
    /*00000418*/ MOV         R0, #0 
    /*0000041c*/ BX          LR 
    VpssDefCheckChnId_x420:
    /*00000420*/ B           0x00000000000001EC 
FUNC_END VpssDefCheckChnId


FUNC_BEGIN VpssDefCheckExtChnId
    /*00000424*/ SUB         R0, R0, #3 
    /*00000428*/ CMP         R0, #7 
    /*0000042c*/ BHI         VpssDefCheckExtChnId_x438
    /*00000430*/ MOV         R0, #0 
    /*00000434*/ BX          LR 
    VpssDefCheckExtChnId_x438:
    /*00000438*/ B           0x0000000000000354 
FUNC_END VpssDefCheckExtChnId


FUNC_BEGIN VPSS_RegistModParam
    /*0000043c*/ PUSH        {R4, R5, R6, LR} 
    /*00000440*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000444*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000448*/ SUB         SP, SP, #8 
    /*0000044c*/ ADD         R6, R4, #1600               @ 0x640 
    /*00000450*/ MOV         R5, R0 
    /*00000454*/ ADD         R6, R6, #4 
    /*00000458*/ ADD         R1, SP, #4 
    /*0000045c*/ MOV         R0, R6 
    /*00000460*/ BL          0x0000000000000460          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00000464*/ LDR         R3, [R5] 
    /*00000468*/ LDR         R2, [R5, #4] 
    /*0000046c*/ MOV         R0, R6 
    /*00000470*/ ADD         R1, SP, #4 
    /*00000474*/ ADD         R3, R4, R3, LSL #4 
    /*00000478*/ STR         R2, [R3, #1612]             @ 0x64c 
    /*0000047c*/ LDR         R3, [R5] 
    /*00000480*/ LDR         R2, [R5, #8] 
    /*00000484*/ ADD         R3, R4, R3, LSL #4 
    /*00000488*/ STR         R2, [R3, #1616]             @ 0x650 
    /*0000048c*/ LDR         R2, [R5] 
    /*00000490*/ LDR         R3, [R5, #12] 
    /*00000494*/ ADD         R4, R4, R2, LSL #4 
    /*00000498*/ STR         R3, [R4, #1620]             @ 0x654 
    /*0000049c*/ BL          0x000000000000049C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000004a0*/ MOV         R0, #0 
    /*000004a4*/ ADD         SP, SP, #8 
    /*000004a8*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_RegistModParam


FUNC_BEGIN VPSS_UnregistModParam
    /*000004ac*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000004b0*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000004b4*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000004b8*/ MOV         R7, R0 
    /*000004bc*/ ADD         R6, R4, #1600               @ 0x640 
    /*000004c0*/ SUB         SP, SP, #12 
    /*000004c4*/ ADD         R6, R6, #4 
    /*000004c8*/ ADD         R4, R4, R7, LSL #4 
    /*000004cc*/ ADD         R1, SP, #4 
    /*000004d0*/ MOV         R5, #0 
    /*000004d4*/ MOV         R0, R6 
    /*000004d8*/ BL          0x00000000000004D8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000004dc*/ MOV         R0, R6 
    /*000004e0*/ ADD         R1, SP, #4 
    /*000004e4*/ STR         R5, [R4, #1612]             @ 0x64c 
    /*000004e8*/ STR         R5, [R4, #1616]             @ 0x650 
    /*000004ec*/ STR         R5, [R4, #1620]             @ 0x654 
    /*000004f0*/ BL          0x00000000000004F0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000004f4*/ MOV         R0, R5 
    /*000004f8*/ ADD         SP, SP, #12 
    /*000004fc*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VPSS_UnregistModParam


FUNC_BEGIN VPSS_GetGrpMode
    /*00000500*/ SUB         R0, R0, #1 
    /*00000504*/ CMP         R0, #4 
    /*00000508*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*0000050c*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00000510*/ ADDLS       R3, R3, R0, LSL #2 
    /*00000514*/ LDRLS       R0, [R3, #176]              @ 0xb0 
    /*00000518*/ MOVHI       R0, #0 
    /*0000051c*/ BX          LR 
FUNC_END VPSS_GetGrpMode


FUNC_BEGIN VPSS_SetIPMode
    /*00000520*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000524*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000528*/ LDR         R2, [R3, #2568]             @ 0xa08 
    /*0000052c*/ CMP         R2, #5 
    /*00000530*/ STR         R2, [R3, #2584]             @ 0xa18 
    /*00000534*/ STREQ       R2, [R3, #2588]             @ 0xa1c 
    /*00000538*/ BX          LR 
FUNC_END VPSS_SetIPMode


FUNC_BEGIN VPSS_UpdateViVpssMode
    /*0000053c*/ PUSH        {R4, LR} 
    /*00000540*/ MOV         R1, R0 
    /*00000544*/ MOV         R2, #16 
    /*00000548*/ LDR         R0, [PC, #128]              @ 0x00000000000005d0 
    /*0000054c*/ BL          0x000000000000054C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00000550*/ LDR         R2, [PC, #120]              @ 0x00000000000005d0 
    /*00000554*/ LDR         R0, [PC, #120]              @ 0x00000000000005d4 
    /*00000558*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*0000055c*/ ADD         LR, R2, #16 
    /*00000560*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    VPSS_UpdateViVpssMode_x564:
    /*00000564*/ LDR         R3, [R2], #4 
    /*00000568*/ MOV         R1, #0 
    /*0000056c*/ SUB         R3, R3, #1 
    /*00000570*/ CMP         R3, #4 
    /*00000574*/ ADD         R3, IP, R3, LSL #2 
    /*00000578*/ LDRLS       R1, [R3, #176]              @ 0xb0 
    /*0000057c*/ CMP         R2, LR 
    /*00000580*/ STR         R1, [R0], #4 
    /*00000584*/ BNE         VPSS_UpdateViVpssMode_x564
    /*00000588*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000058c*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000590*/ MOV         R1, #0 
    /*00000594*/ LDR         R3, [R0, #1540]             @ 0x604 
    /*00000598*/ CMP         R3, #3 
    /*0000059c*/ STREQ       R3, [R0, #1556]             @ 0x614 
    /*000005a0*/ LDR         R3, [PC, #48]               @ 0x00000000000005d8 
    /*000005a4*/ ADD         R2, R3, #48                 @ 0x30 
    VPSS_UpdateViVpssMode_x5a8:
    /*000005a8*/ STR         R1, [R3, #4]! 
    /*000005ac*/ CMP         R2, R3 
    /*000005b0*/ BNE         VPSS_UpdateViVpssMode_x5a8
    /*000005b4*/ LDR         R3, [R0, #2568]             @ 0xa08 
    /*000005b8*/ CMP         R3, #5 
    /*000005bc*/ STR         R3, [R0, #2584]             @ 0xa18 
    /*000005c0*/ STREQ       R3, [R0, #2588]             @ 0xa1c 
    /*000005c4*/ BL          0x00000000000005C4          @ VPSS_COMM_IPWorkModeCnt [R_ARM_CALL: .text+0x1589c] 
    /*000005c8*/ MOV         R0, #0 
    /*000005cc*/ POP         {R4, PC} 
    /*000005d0*/ ANDEQ       R0, R0, R8, LSL #20 
    /*000005d4*/ ANDEQ       R0, R0, R4, LSL #12 
    /*000005d8*/ ANDEQ       R0, R0, R0, LSL R6 
FUNC_END VPSS_UpdateViVpssMode


FUNC_BEGIN VPSS_SetDefaultViVpssMode
    /*000005dc*/ LDR         R3, [PC, #48]               @ 0x0000000000000614 
    /*000005e0*/ MOV         R1, #0 
    /*000005e4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000005e8*/ ADD         R2, R3, #64                 @ 0x40 
    /*000005ec*/ SUB         SP, SP, #20 
    VPSS_SetDefaultViVpssMode_x5f0:
    /*000005f0*/ STR         R1, [R3, #4]! 
    /*000005f4*/ CMP         R3, R2 
    /*000005f8*/ BNE         VPSS_SetDefaultViVpssMode_x5f0
    /*000005fc*/ MOV         R0, SP 
    /*00000600*/ BL          0x0000000000000600          @ VPSS_DRV_GetDefaultViVpssMode [R_ARM_CALL: .text+0x25fe8] 
    /*00000604*/ MOV         R0, SP 
    /*00000608*/ BL          0x0000000000000608          @ VPSS_UpdateViVpssMode [R_ARM_CALL: .text+0x53c] 
    /*0000060c*/ ADD         SP, SP, #20 
    /*00000610*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00000614*/ ANDEQ       R0, R0, R0, LSL #12 
FUNC_END VPSS_SetDefaultViVpssMode


FUNC_BEGIN VpssGetBind
    /*00000618*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000061c*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000620*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000624*/ SUB         SP, SP, #8 
    /*00000628*/ ADD         R6, R4, #1536               @ 0x600 
    /*0000062c*/ MOV         R7, R0 
    /*00000630*/ MOV         R8, R1 
    /*00000634*/ ADD         R1, SP, #4 
    /*00000638*/ MOV         R0, R6 
    /*0000063c*/ MOV         R5, R2 
    /*00000640*/ BL          0x0000000000000640          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00000644*/ MOV         R3, #772                    @ 0x304 
    /*00000648*/ MUL         R3, R3, R8 
    /*0000064c*/ LDR         R1, [R4, R7, LSL #2] 
    /*00000650*/ MOVW        R2, #20048                  @ 0x4e50 
    /*00000654*/ MOV         R0, R5 
    /*00000658*/ MOV         IP, #12 
    /*0000065c*/ ADD         R1, R1, R3 
    /*00000660*/ ADD         R3, R3, #19968              @ 0x4e00 
    /*00000664*/ ADD         R3, R3, #84                 @ 0x54 
    /*00000668*/ LDR         R2, [R1, R2] 
    /*0000066c*/ STR         R2, [R0], #4 
    /*00000670*/ LDR         R1, [R4, R7, LSL #2] 
    /*00000674*/ MUL         R2, IP, R2 
    /*00000678*/ ADD         R1, R1, R3 
    /*0000067c*/ BL          0x000000000000067C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00000680*/ MOV         R0, R6 
    /*00000684*/ ADD         R1, SP, #4 
    /*00000688*/ BL          0x0000000000000688          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000068c*/ MOV         R0, #0 
    /*00000690*/ ADD         SP, SP, #8 
    /*00000694*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VpssGetBind


FUNC_BEGIN VpssCheckBindInfo
    /*00000698*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000069c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000006a0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000006a4*/ MOV         R8, R0 
    /*000006a8*/ LDR         R7, [R3, R0, LSL #2] 
    /*000006ac*/ SUB         SP, SP, #12 
    /*000006b0*/ MOV         R4, #0 
    /*000006b4*/ ADD         R9, R7, #11136              @ 0x2b80 
    /*000006b8*/ ADD         R6, R7, #28416              @ 0x6f00 
    /*000006bc*/ ADD         R9, R9, #24 
    /*000006c0*/ ADD         R6, R6, #120                @ 0x78 
    /*000006c4*/ MOV         R5, R9 
    /*000006c8*/ B           VpssCheckBindInfo_x6dc
    VpssCheckBindInfo_x6cc:
    /*000006cc*/ ADD         R4, R4, #1 
    /*000006d0*/ ADD         R5, R5, #772                @ 0x304 
    /*000006d4*/ CMP         R4, #11 
    /*000006d8*/ BEQ         VpssCheckBindInfo_x708
    VpssCheckBindInfo_x6dc:
    /*000006dc*/ LDR         R3, [R6, #4]! 
    /*000006e0*/ CMP         R3, #0 
    /*000006e4*/ BEQ         VpssCheckBindInfo_x6cc
    /*000006e8*/ MOV         R2, R5 
    /*000006ec*/ MOV         R1, R4 
    /*000006f0*/ MOV         R0, R8 
    /*000006f4*/ ADD         R4, R4, #1 
    /*000006f8*/ BL          0x00000000000006F8          @ VpssGetBind [R_ARM_CALL: .text+0x618] 
    /*000006fc*/ CMP         R4, #11 
    /*00000700*/ ADD         R5, R5, #772                @ 0x304 
    /*00000704*/ BNE         VpssCheckBindInfo_x6dc
    VpssCheckBindInfo_x708:
    /*00000708*/ ADD         R2, R7, #216                @ 0xd8 
    VpssCheckBindInfo_x70c:
    /*0000070c*/ LDR         R0, [R9] 
    /*00000710*/ CMP         R0, #0 
    /*00000714*/ BNE         VpssCheckBindInfo_x76c
    /*00000718*/ LDR         R3, [R7, #812]              @ 0x32c 
    /*0000071c*/ CMP         R3, #1 
    /*00000720*/ BEQ         VpssCheckBindInfo_x72c
    VpssCheckBindInfo_x724:
    /*00000724*/ ADD         SP, SP, #12 
    /*00000728*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssCheckBindInfo_x72c:
    /*0000072c*/ ADD         R7, R7, #72                 @ 0x48 
    /*00000730*/ ADD         R9, R9, #772                @ 0x304 
    /*00000734*/ CMP         R7, R2 
    /*00000738*/ BNE         VpssCheckBindInfo_x70c
    /*0000073c*/ STR         R8, [SP, #4] 
    /*00000740*/ MOV         R3, #352                    @ 0x160 
    /*00000744*/ MOV         R1, #7 
    /*00000748*/ STR         R3, [SP] 
    /*0000074c*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x188] 
    /*00000750*/ LDR         R3, [PC, #28]               @ 0x0000000000000774 
    /*00000754*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x188] 
    /*00000758*/ MOV         R0, #6 
    /*0000075c*/ BL          0x000000000000075C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000760*/ MVN         R0, #0 
    /*00000764*/ ADD         SP, SP, #12 
    /*00000768*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssCheckBindInfo_x76c:
    /*0000076c*/ MOV         R0, #0 
    /*00000770*/ B           VpssCheckBindInfo_x724
    /*00000774*/ ANDEQ       R0, R0, R4, ASR #1 
FUNC_END VpssCheckBindInfo


FUNC_BEGIN VpssPrepareHwInfo
    /*00000778*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000077c*/ MOV         R6, R1 
    /*00000780*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000784*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000788*/ MOVW        IP, #18748                  @ 0x493c 
    /*0000078c*/ MOV         R2, #72                     @ 0x48 
    /*00000790*/ MOVW        R4, #8536                   @ 0x2158 
    /*00000794*/ LDR         R8, [R1, R0, LSL #2] 
    /*00000798*/ MLA         R2, R2, R6, IP 
    /*0000079c*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000007a0*/ MUL         R4, R4, R6 
    /*000007a4*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000007a8*/ MOV         R7, R0 
    /*000007ac*/ SUB         SP, SP, #12 
    /*000007b0*/ LDR         R1, [R3, R0, LSL #2] 
    /*000007b4*/ ADD         R3, R8, #28416              @ 0x6f00 
    /*000007b8*/ ADD         R0, R6, #652                @ 0x28c 
    /*000007bc*/ MOV         IP, #0 
    /*000007c0*/ MOV         R5, R3 
    /*000007c4*/ ADD         R2, R1, R2 
    /*000007c8*/ ADD         R3, R3, #124                @ 0x7c 
    /*000007cc*/ ADD         R5, R5, #136                @ 0x88 
    /*000007d0*/ ADD         R1, R8, R4 
    /*000007d4*/ ADD         LR, R8, R0, LSL #2 
    VpssPrepareHwInfo_x7d8:
    /*000007d8*/ LDR         R0, [R3], #4 
    /*000007dc*/ CMP         R0, #1 
    /*000007e0*/ BEQ         VpssPrepareHwInfo_x884
    VpssPrepareHwInfo_x7e4:
    /*000007e4*/ STR         IP, [R2] 
    VpssPrepareHwInfo_x7e8:
    /*000007e8*/ CMP         R3, R5 
    /*000007ec*/ ADD         R2, R2, #24 
    /*000007f0*/ ADD         R1, R1, #776                @ 0x308 
    /*000007f4*/ BNE         VpssPrepareHwInfo_x7d8
    /*000007f8*/ LDR         R3, [R8, #2592]             @ 0xa20 
    /*000007fc*/ CMP         R3, #0 
    /*00000800*/ BGT         VpssPrepareHwInfo_x854
    VpssPrepareHwInfo_x804:
    /*00000804*/ MOV         R2, R6 
    /*00000808*/ ADD         R1, SP, #4 
    /*0000080c*/ MOV         R0, R7 
    /*00000810*/ ADD         R4, R4, #2640               @ 0xa50 
    /*00000814*/ BL          0x0000000000000814          @ VPSS_DRV_PrepareHwInfo [R_ARM_CALL: .text+0x215fc] 
    /*00000818*/ ADD         R4, R4, #8 
    /*0000081c*/ ADD         R4, R8, R4 
    /*00000820*/ MOV         R5, #0 
    VpssPrepareHwInfo_x824:
    /*00000824*/ MOV         R3, R4 
    /*00000828*/ MOV         R1, R5 
    /*0000082c*/ MOV         R2, R6 
    /*00000830*/ MOV         R0, R7 
    /*00000834*/ ADD         R5, R5, #1 
    /*00000838*/ BL          0x0000000000000838          @ VPSS_DRV_PutVideoFrameInfo [R_ARM_CALL: .text+0x21adc] 
    /*0000083c*/ CMP         R5, #3 
    /*00000840*/ ADD         R4, R4, #776                @ 0x308 
    /*00000844*/ BNE         VpssPrepareHwInfo_x824
    /*00000848*/ MOV         R0, #0 
    /*0000084c*/ ADD         SP, SP, #12 
    /*00000850*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssPrepareHwInfo_x854:
    /*00000854*/ ADD         R3, R8, R6, LSL #2 
    /*00000858*/ LDR         R3, [R3, #2612]             @ 0xa34 
    /*0000085c*/ CMP         R3, #1 
    /*00000860*/ ADDEQ       R3, R6, #548                @ 0x224 
    /*00000864*/ ADDEQ       R3, R3, #2 
    /*00000868*/ LDRNE       R5, [R8, #2196]             @ 0x894 
    /*0000086c*/ LDREQ       R5, [R8, R3, LSL #2] 
    /*00000870*/ CMP         R5, #0 
    /*00000874*/ BEQ         VpssPrepareHwInfo_x8c0
    VpssPrepareHwInfo_x878:
    /*00000878*/ ADD         R5, R5, #8 
    /*0000087c*/ STR         R5, [SP, #4] 
    /*00000880*/ B           VpssPrepareHwInfo_x804
    VpssPrepareHwInfo_x884:
    /*00000884*/ LDR         R9, [LR, #4] 
    /*00000888*/ LDR         R0, [R1, #2624]             @ 0xa40 
    /*0000088c*/ CMP         R9, R0 
    /*00000890*/ BNE         VpssPrepareHwInfo_x7e4
    /*00000894*/ LDR         R0, [R3, #84]               @ 0x54 
    /*00000898*/ CMP         R0, #1 
    /*0000089c*/ BNE         VpssPrepareHwInfo_x7e4
    /*000008a0*/ LDR         R0, [R1, #2628]             @ 0xa44 
    /*000008a4*/ CMP         R0, #1 
    /*000008a8*/ BNE         VpssPrepareHwInfo_x7e4
    /*000008ac*/ LDR         R0, [R3, #128]              @ 0x80 
    /*000008b0*/ CMP         R0, #1 
    /*000008b4*/ STREQ       R0, [R2] 
    /*000008b8*/ BNE         VpssPrepareHwInfo_x7e4
    /*000008bc*/ B           VpssPrepareHwInfo_x7e8
    VpssPrepareHwInfo_x8c0:
    /*000008c0*/ MOVW        R3, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b8] 
    /*000008c4*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*000008c8*/ MOVT        R3, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b8] 
    /*000008cc*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*000008d0*/ MOVW        R2, #399                    @ 0x18f 
    /*000008d4*/ LDR         R1, [PC, #4]                @ 0x00000000000008e0 
    /*000008d8*/ BL          0x00000000000008D8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000008dc*/ B           VpssPrepareHwInfo_x878
    /*000008e0*/ LDRDEQ      R0, [R0], -R8 
FUNC_END VpssPrepareHwInfo


FUNC_BEGIN VpssStartTimer
    /*000008e4*/ PUSH        {R4, LR} 
    /*000008e8*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000008ec*/ SUB         SP, SP, #8 
    /*000008f0*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000008f4*/ ADD         R0, R4, #2592               @ 0xa20 
    /*000008f8*/ ADD         R1, SP, #4 
    /*000008fc*/ BL          0x00000000000008FC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00000900*/ LDR         R3, [R4, #2596]             @ 0xa24 
    /*00000904*/ CMP         R3, #0 
    /*00000908*/ BNE         VpssStartTimer_x920
    /*0000090c*/ MOV         R1, #10 
    /*00000910*/ LDR         R0, [PC, #28]               @ 0x0000000000000934 
    /*00000914*/ BL          0x0000000000000914          @ osal_set_timer [R_ARM_CALL: +0x0] 
    /*00000918*/ MOV         R3, #1 
    /*0000091c*/ STR         R3, [R4, #2596]             @ 0xa24 
    VpssStartTimer_x920:
    /*00000920*/ ADD         R1, SP, #4 
    /*00000924*/ LDR         R0, [PC, #12]               @ 0x0000000000000938 
    /*00000928*/ BL          0x0000000000000928          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000092c*/ ADD         SP, SP, #8 
    /*00000930*/ POP         {R4, PC} 
    /*00000934*/ ANDEQ       R0, R0, R8, LSR #20 
    /*00000938*/ ANDEQ       R0, R0, R0, LSR #20 
FUNC_END VpssStartTimer


FUNC_BEGIN VpssCheckQueryRlt
    /*0000093c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000940*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000944*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00000948*/ MOV         R4, #776                    @ 0x308 
    /*0000094c*/ LDR         R5, [R3, R0, LSL #2] 
    /*00000950*/ SUB         SP, SP, #20 
    /*00000954*/ MOV         R9, R0 
    /*00000958*/ MOV         R8, R2 
    /*0000095c*/ ADD         FP, R5, R2, LSL #2 
    /*00000960*/ MOV         R6, R1 
    /*00000964*/ LDR         R3, [FP, #2612]             @ 0xa34 
    /*00000968*/ CMP         R3, #1 
    /*0000096c*/ MOVW        R3, #8536                   @ 0x2158 
    /*00000970*/ MUL         R3, R3, R2 
    /*00000974*/ LDREQ       SL, [FP, #2200]             @ 0x898 
    /*00000978*/ MLA         R4, R4, R1, R3 
    /*0000097c*/ LDRNE       SL, [R5, #2196]             @ 0x894 
    /*00000980*/ ADD         SL, SL, #8 
    /*00000984*/ ADD         R3, R4, #2624               @ 0xa40 
    /*00000988*/ ADD         R7, R4, #2640               @ 0xa50 
    /*0000098c*/ ADD         R3, R5, R3 
    /*00000990*/ ADD         R7, R7, #8 
    /*00000994*/ BL          0x0000000000000994          @ VPSS_DRV_CalcAspectRatio [R_ARM_CALL: .text+0x18c2c] 
    /*00000998*/ ADD         R7, R5, R7 
    /*0000099c*/ CMP         R0, #0 
    /*000009a0*/ BNE         VpssCheckQueryRlt_xa38
    /*000009a4*/ ADD         R4, R5, R4 
    /*000009a8*/ LDR         R3, [FP, #2612]             @ 0xa34 
    /*000009ac*/ LDR         R2, [R4, #2624]             @ 0xa40 
    /*000009b0*/ CMP         R2, R3 
    /*000009b4*/ BNE         VpssCheckQueryRlt_xa10
    /*000009b8*/ STR         R7, [SP] 
    /*000009bc*/ MOV         R3, SL 
    /*000009c0*/ MOV         R2, R8 
    /*000009c4*/ MOV         R1, R6 
    /*000009c8*/ MOV         R0, R9 
    /*000009cc*/ BL          0x00000000000009CC          @ VPSS_DRV_CheckVpssCapa [R_ARM_CALL: .text+0x1fcd0] 
    /*000009d0*/ SUBS        R4, R0, #0 
    /*000009d4*/ BNE         VpssCheckQueryRlt_xa38
    /*000009d8*/ ADD         R3, R6, #7168               @ 0x1c00 
    /*000009dc*/ CMP         R6, #2 
    /*000009e0*/ MOV         R2, #1 
    /*000009e4*/ STR         R2, [R5, R3, LSL #2] 
    /*000009e8*/ BLS         VpssCheckQueryRlt_x9f8
    /*000009ec*/ MOV         R0, R4 
    /*000009f0*/ ADD         SP, SP, #20 
    /*000009f4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssCheckQueryRlt_x9f8:
    /*000009f8*/ MOV         R0, R9 
    /*000009fc*/ MOV         R1, R6 
    /*00000a00*/ BL          0x0000000000000390 
    /*00000a04*/ MOV         R0, R4 
    /*00000a08*/ ADD         SP, SP, #20 
    /*00000a0c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssCheckQueryRlt_xa10:
    /*00000a10*/ MOVW        R3, #510                    @ 0x1fe 
    /*00000a14*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x210] 
    /*00000a18*/ STR         R3, [SP] 
    /*00000a1c*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x210] 
    /*00000a20*/ STR         R6, [SP, #8] 
    /*00000a24*/ MOV         R1, #7 
    /*00000a28*/ STR         R9, [SP, #4] 
    /*00000a2c*/ MOV         R0, #3 
    /*00000a30*/ LDR         R3, [PC, #28]               @ 0x0000000000000a54 
    /*00000a34*/ BL          0x0000000000000A34          @ HI_LOG [R_ARM_CALL: +0x0] 
    VpssCheckQueryRlt_xa38:
    /*00000a38*/ ADD         R6, R6, #7168               @ 0x1c00 
    /*00000a3c*/ MVN         R4, #0 
    /*00000a40*/ MOV         R3, #0 
    /*00000a44*/ MOV         R0, R4 
    /*00000a48*/ STR         R3, [R5, R6, LSL #2] 
    /*00000a4c*/ ADD         SP, SP, #20 
    /*00000a50*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00000a54*/ ANDEQ       R0, R0, IP, ROR #1 
FUNC_END VpssCheckQueryRlt


FUNC_BEGIN VPSS_VI_PrepareTask
    /*00000a58*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00000a5c*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00000a60*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00000a64*/ MOV         R4, #72                     @ 0x48 
    /*00000a68*/ LDR         R6, [R3, R0, LSL #2] 
    /*00000a6c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000a70*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000a74*/ SUB         SP, SP, #12 
    /*00000a78*/ MOV         R9, R0 
    /*00000a7c*/ MOV         R8, R1 
    /*00000a80*/ MLA         R4, R4, R1, R6 
    /*00000a84*/ LDR         SL, [R3, R0, LSL #2] 
    /*00000a88*/ MOV         R5, #0 
    /*00000a8c*/ MOV         R2, #1 
    /*00000a90*/ ADD         R7, SL, #28416              @ 0x6f00 
    /*00000a94*/ ADD         FP, SL, R1, LSL #2 
    /*00000a98*/ ADD         R4, R4, #18688              @ 0x4900 
    /*00000a9c*/ ADD         R7, R7, #124                @ 0x7c 
    /*00000aa0*/ ADD         R4, R4, #68                 @ 0x44 
    /*00000aa4*/ STR         R2, [FP, #2612]             @ 0xa34 
    VPSS_VI_PrepareTask_xaa8:
    /*00000aa8*/ LDR         R3, [R6, #80]               @ 0x50 
    /*00000aac*/ MOV         R1, R5 
    /*00000ab0*/ MOV         R2, R8 
    /*00000ab4*/ MOV         R0, R9 
    /*00000ab8*/ STR         R3, [R4] 
    /*00000abc*/ LDR         R3, [R7], #4 
    /*00000ac0*/ CMP         R3, #1 
    /*00000ac4*/ BNE         VPSS_VI_PrepareTask_xad4
    /*00000ac8*/ LDR         R3, [R7, #84]               @ 0x54 
    /*00000acc*/ CMP         R3, #1 
    /*00000ad0*/ BEQ         VPSS_VI_PrepareTask_xb60
    VPSS_VI_PrepareTask_xad4:
    /*00000ad4*/ BL          0x0000000000000AD4          @ VPSS_DRV_SetChnQueryFail [R_ARM_CALL: .text+0x1c72c] 
    VPSS_VI_PrepareTask_xad8:
    /*00000ad8*/ ADD         R5, R5, #1 
    /*00000adc*/ ADD         R6, R6, #72                 @ 0x48 
    /*00000ae0*/ CMP         R5, #3 
    /*00000ae4*/ ADD         R4, R4, #24 
    /*00000ae8*/ BNE         VPSS_VI_PrepareTask_xaa8
    /*00000aec*/ MOV         R1, R8 
    /*00000af0*/ MOV         R0, R9 
    /*00000af4*/ BL          0x0000000000000AF4          @ VpssPrepareHwInfo [R_ARM_CALL: .text+0x778] 
    /*00000af8*/ ADD         R1, SP, #4 
    /*00000afc*/ LDR         R0, [PC, #156]              @ 0x0000000000000ba0 
    /*00000b00*/ BL          0x0000000000000B00          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00000b04*/ MOV         R1, R8 
    /*00000b08*/ MOV         R0, R9 
    /*00000b0c*/ BL          0x0000000000000B0C          @ VPSS_COMM_CreateOneNode [R_ARM_CALL: .text+0x15454] 
    /*00000b10*/ SUBS        R4, R0, #0 
    /*00000b14*/ BEQ         VPSS_VI_PrepareTask_xb80
    VPSS_VI_PrepareTask_xb18:
    /*00000b18*/ MOV         R1, R8 
    /*00000b1c*/ MOV         R0, R4 
    /*00000b20*/ BL          0x0000000000000B20          @ VPSS_VI_COMM_PutWait [R_ARM_CALL: .text+0x15844] 
    /*00000b24*/ ADD         R1, SP, #4 
    /*00000b28*/ LDR         R0, [PC, #112]              @ 0x0000000000000ba0 
    /*00000b2c*/ ADD         SL, SL, #28672              @ 0x7000 
    /*00000b30*/ BL          0x0000000000000B30          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00000b34*/ LDR         R3, [FP, #2612]             @ 0xa34 
    /*00000b38*/ MOV         R0, #0 
    /*00000b3c*/ CMP         R3, #1 
    /*00000b40*/ LDREQ       R3, [SL, #3148]             @ 0xc4c 
    /*00000b44*/ LDRNE       R3, [SL, #3152]             @ 0xc50 
    /*00000b48*/ ADDEQ       R3, R3, #1 
    /*00000b4c*/ ADDNE       R3, R3, #1 
    /*00000b50*/ STREQ       R3, [SL, #3148]             @ 0xc4c 
    /*00000b54*/ STRNE       R3, [SL, #3152]             @ 0xc50 
    /*00000b58*/ ADD         SP, SP, #12 
    /*00000b5c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_VI_PrepareTask_xb60:
    /*00000b60*/ BL          0x0000000000000B60          @ VpssCheckQueryRlt [R_ARM_CALL: .text+0x93c] 
    /*00000b64*/ CMP         R0, #0 
    /*00000b68*/ BEQ         VPSS_VI_PrepareTask_xad8
    /*00000b6c*/ MOV         R2, R8 
    /*00000b70*/ MOV         R1, R5 
    /*00000b74*/ MOV         R0, R9 
    /*00000b78*/ BL          0x0000000000000B78          @ VpssSendFail [R_ARM_CALL: .text+0xa704] 
    /*00000b7c*/ B           VPSS_VI_PrepareTask_xad8
    VPSS_VI_PrepareTask_xb80:
    /*00000b80*/ MOVW        R3, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x250] 
    /*00000b84*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*00000b88*/ MOVT        R3, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x250] 
    /*00000b8c*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*00000b90*/ MOV         R2, #576                    @ 0x240 
    /*00000b94*/ LDR         R1, [PC, #8]                @ 0x0000000000000ba4 
    /*00000b98*/ BL          0x0000000000000B98          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00000b9c*/ B           VPSS_VI_PrepareTask_xb18
    /*00000ba0*/ ANDEQ       R0, R0, R4, LSR SL 
    /*00000ba4*/ ANDEQ       R0, R0, R0, LSL #2 
FUNC_END VPSS_VI_PrepareTask


FUNC_BEGIN VPSS_VI_SubmitTask
    /*00000ba8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00000bac*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00000bb0*/ MOV         R4, R0 
    /*00000bb4*/ MOV         FP, R1 
    /*00000bb8*/ STR         R2, [SP, #16] 
    /*00000bbc*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000bc0*/ STR         R3, [SP, #12] 
    /*00000bc4*/ BL          0x0000000000000BC4          @ VPSS_DRV_GetOfflineSlaveVpssId [R_ARM_CALL: .text+0x181e8] 
    /*00000bc8*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000bcc*/ ADD         R1, SP, #36                 @ 0x24 
    /*00000bd0*/ ADD         R2, R6, #64                 @ 0x40 
    /*00000bd4*/ MOV         R9, R0 
    /*00000bd8*/ MOV         R0, #92                     @ 0x5c 
    /*00000bdc*/ MUL         R3, R0, R4 
    /*00000be0*/ STR         R3, [SP, #20] 
    /*00000be4*/ ADD         R3, R3, #48                 @ 0x30 
    /*00000be8*/ ADD         R3, R2, R3 
    /*00000bec*/ STR         R3, [SP, #24] 
    /*00000bf0*/ MOV         R0, R3 
    /*00000bf4*/ BL          0x0000000000000BF4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00000bf8*/ LDR         R7, [R6, R4, LSL #2] 
    /*00000bfc*/ CMP         R7, #0 
    /*00000c00*/ STREQ       R4, [SP, #4] 
    /*00000c04*/ MOVEQ       R3, #616                    @ 0x268 
    /*00000c08*/ BEQ         VPSS_VI_SubmitTask_xe58
    /*00000c0c*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00000c10*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00000c14*/ LDR         R8, [R3, R4, LSL #2] 
    /*00000c18*/ CMP         R8, #0 
    /*00000c1c*/ BEQ         VPSS_VI_SubmitTask_xe50
    /*00000c20*/ LDR         R3, [SP, #20] 
    /*00000c24*/ ADD         R3, R6, R3 
    /*00000c28*/ LDR         R2, [R3, #64]               @ 0x40 
    /*00000c2c*/ CMP         R2, #0 
    /*00000c30*/ BNE         VPSS_VI_SubmitTask_xdb0
    /*00000c34*/ LDR         R3, [R3, #68]               @ 0x44 
    /*00000c38*/ CMP         R3, #0 
    /*00000c3c*/ BNE         VPSS_VI_SubmitTask_xdb0
    /*00000c40*/ MOV         R5, #23 
    /*00000c44*/ MLA         R5, R5, R4, R9 
    /*00000c48*/ ADD         R5, R5, #2 
    /*00000c4c*/ ADD         R5, R6, R5, LSL #2 
    /*00000c50*/ LDR         R3, [R5, #64]               @ 0x40 
    /*00000c54*/ CMP         R3, #0 
    /*00000c58*/ BNE         VPSS_VI_SubmitTask_xe10
    /*00000c5c*/ LDR         R2, [R8, #12] 
    /*00000c60*/ MOV         R0, R4 
    /*00000c64*/ LDR         R1, [SP, #12] 
    /*00000c68*/ BL          0x0000000000000C68          @ VPSS_DRV_CheckInputPixelFmt [R_ARM_CALL: .text+0x1db14] 
    /*00000c6c*/ CMP         R0, #0 
    /*00000c70*/ BNE         VPSS_VI_SubmitTask_xe34
    /*00000c74*/ LDR         R2, [SP, #12] 
    /*00000c78*/ MOV         R1, FP 
    /*00000c7c*/ MOV         R0, R4 
    /*00000c80*/ BL          0x0000000000000C80          @ VPSS_DRV_Check3dnrArea [R_ARM_CALL: .text+0x1c734] 
    /*00000c84*/ CMP         R0, #0 
    /*00000c88*/ BNE         VPSS_VI_SubmitTask_xe34
    /*00000c8c*/ MOV         R1, FP 
    /*00000c90*/ MOV         R0, R4 
    /*00000c94*/ BL          0x0000000000000C94          @ VPSS_DRV_CheckSlaveSplitLimit [R_ARM_CALL: .text+0x1c9dc] 
    /*00000c98*/ SUBS        SL, R0, #0 
    /*00000c9c*/ BNE         VPSS_VI_SubmitTask_xe34
    /*00000ca0*/ MOV         IP, #384                    @ 0x180 
    /*00000ca4*/ ADD         R3, R7, R9, LSL #2 
    /*00000ca8*/ MUL         IP, IP, R9 
    /*00000cac*/ MOV         R1, FP 
    /*00000cb0*/ MOV         R2, #336                    @ 0x150 
    /*00000cb4*/ MOV         FP, #1 
    /*00000cb8*/ STR         FP, [R5, #64]               @ 0x40 
    /*00000cbc*/ ADD         R0, IP, #2208               @ 0x8a0 
    /*00000cc0*/ STR         R3, [SP, #28] 
    /*00000cc4*/ MOV         IP, R0 
    /*00000cc8*/ ADD         R0, R0, #8 
    /*00000ccc*/ ADD         IP, R7, IP 
    /*00000cd0*/ ADD         R0, R7, R0 
    /*00000cd4*/ STR         IP, [R3, #2200]             @ 0x898 
    /*00000cd8*/ BL          0x0000000000000CD8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00000cdc*/ LDR         R3, [SP, #28] 
    /*00000ce0*/ LDR         IP, [SP, #12] 
    /*00000ce4*/ MOV         R2, #16 
    /*00000ce8*/ MOV         R0, R4 
    /*00000cec*/ LDR         R1, [R3, #2200]             @ 0x898 
    /*00000cf0*/ STR         IP, [R1, #20] 
    /*00000cf4*/ LDR         R1, [R3, #2200]             @ 0x898 
    /*00000cf8*/ LDR         IP, [R8, #16] 
    /*00000cfc*/ STR         IP, [R1, #32] 
    /*00000d00*/ STR         R2, [R7, #2128]             @ 0x850 
    /*00000d04*/ STR         SL, [R7, #2068]             @ 0x814 
    /*00000d08*/ LDR         R1, [R3, #2200]             @ 0x898 
    /*00000d0c*/ ADD         R1, R1, #8 
    /*00000d10*/ BL          0x0000000000000D10          @ VPSS_DRV_GrpCalCrop [R_ARM_CALL: .text+0x1f998] 
    /*00000d14*/ MOV         R1, SL 
    /*00000d18*/ MOV         R0, R4 
    /*00000d1c*/ BL          0x0000000000000D1C          @ VPSS_DRV_ChnCalcCrop [R_ARM_CALL: .text+0x1f718] 
    /*00000d20*/ MOV         R1, FP 
    /*00000d24*/ MOV         R0, R4 
    /*00000d28*/ BL          0x0000000000000D28          @ VPSS_DRV_ChnCalcCrop [R_ARM_CALL: .text+0x1f718] 
    /*00000d2c*/ MOV         R1, #2 
    /*00000d30*/ MOV         R0, R4 
    /*00000d34*/ BL          0x0000000000000D34          @ VPSS_DRV_ChnCalcCrop [R_ARM_CALL: .text+0x1f718] 
    /*00000d38*/ LDR         R3, [SP, #16] 
    /*00000d3c*/ CMP         R3, #0 
    /*00000d40*/ BEQ         VPSS_VI_SubmitTask_xd8c
    /*00000d44*/ ADD         R3, R7, #24576              @ 0x6000 
    /*00000d48*/ STR         SL, [R3, #4052]             @ 0xfd4 
    /*00000d4c*/ STR         SL, [R3, #4056]             @ 0xfd8 
    /*00000d50*/ STR         SL, [R3, #4060]             @ 0xfdc 
    VPSS_VI_SubmitTask_xd54:
    /*00000d54*/ LDR         R3, [SP, #16] 
    /*00000d58*/ ADD         R8, R8, #106496             @ 0x1a000 
    /*00000d5c*/ MOV         R1, R9 
    /*00000d60*/ MOV         R0, R4 
    /*00000d64*/ STR         R3, [R8, #712]              @ 0x2c8 
    /*00000d68*/ BL          0x0000000000000D68          @ VPSS_VI_PrepareTask [R_ARM_CALL: .text+0xa58] 
    /*00000d6c*/ SUBS        R5, R0, #0 
    /*00000d70*/ BNE         VPSS_VI_SubmitTask_xdb0
    /*00000d74*/ LDR         R0, [SP, #24] 
    /*00000d78*/ ADD         R1, SP, #36                 @ 0x24 
    /*00000d7c*/ BL          0x0000000000000D7C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00000d80*/ MOV         R0, R5 
    /*00000d84*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00000d88*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_VI_SubmitTask_xd8c:
    /*00000d8c*/ MOV         R1, R9 
    /*00000d90*/ MOV         R0, R4 
    /*00000d94*/ BL          0x0000000000000D94          @ VpssQuery [R_ARM_CALL: .text+0x12e3c] 
    /*00000d98*/ CMP         R0, #0 
    /*00000d9c*/ BEQ         VPSS_VI_SubmitTask_xd54
    /*00000da0*/ ADD         R2, R7, #28672              @ 0x7000 
    /*00000da4*/ LDR         R3, [R2, #3132]             @ 0xc3c 
    /*00000da8*/ ADD         R3, R3, #1 
    /*00000dac*/ STR         R3, [R2, #3132]             @ 0xc3c 
    VPSS_VI_SubmitTask_xdb0:
    /*00000db0*/ LDR         R3, [R7, #2592]             @ 0xa20 
    /*00000db4*/ CMP         R3, #0 
    /*00000db8*/ ADDGT       R3, R9, #548                @ 0x224 
    /*00000dbc*/ MOVGT       R2, #0 
    /*00000dc0*/ ADDGT       R3, R3, #2 
    /*00000dc4*/ STRGT       R2, [R7, R3, LSL #2] 
    /*00000dc8*/ MOV         R3, #23 
    /*00000dcc*/ ADD         R1, SP, #36                 @ 0x24 
    /*00000dd0*/ MLA         R4, R3, R4, R9 
    /*00000dd4*/ LDR         R0, [SP, #24] 
    /*00000dd8*/ MOV         R3, #0 
    /*00000ddc*/ MVN         R5, #0 
    /*00000de0*/ ADD         R4, R4, #2 
    /*00000de4*/ ADD         R4, R6, R4, LSL #2 
    /*00000de8*/ STR         R3, [R4, #64]               @ 0x40 
    /*00000dec*/ BL          0x0000000000000DEC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00000df0*/ LDR         R3, [SP, #20] 
    /*00000df4*/ ADD         R0, R3, #36                 @ 0x24 
    /*00000df8*/ LDR         R3, [PC, #116]              @ 0x0000000000000e74 
    /*00000dfc*/ ADD         R0, R3, R0 
    /*00000e00*/ BL          0x0000000000000E00          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00000e04*/ MOV         R0, R5 
    /*00000e08*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00000e0c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_VI_SubmitTask_xe10:
    /*00000e10*/ MOVW        R3, #643                    @ 0x283 
    /*00000e14*/ STR         R3, [SP] 
    /*00000e18*/ LDR         R3, [PC, #88]               @ 0x0000000000000e78 
    /*00000e1c*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x258] 
    /*00000e20*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x258] 
    /*00000e24*/ MOV         R1, #7 
    /*00000e28*/ MOV         R0, #6 
    /*00000e2c*/ STR         R4, [SP, #4] 
    VPSS_VI_SubmitTask_xe30:
    /*00000e30*/ BL          0x0000000000000E30          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_VI_SubmitTask_xe34:
    /*00000e34*/ LDR         R0, [SP, #24] 
    /*00000e38*/ ADD         R1, SP, #36                 @ 0x24 
    /*00000e3c*/ BL          0x0000000000000E3C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00000e40*/ MVN         R5, #0 
    /*00000e44*/ MOV         R0, R5 
    /*00000e48*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00000e4c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_VI_SubmitTask_xe50:
    /*00000e50*/ MOVW        R3, #625                    @ 0x271 
    /*00000e54*/ STR         R4, [SP, #4] 
    VPSS_VI_SubmitTask_xe58:
    /*00000e58*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00000e5c*/ STR         R3, [SP] 
    /*00000e60*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00000e64*/ LDR         R3, [PC, #12]               @ 0x0000000000000e78 
    /*00000e68*/ MOV         R1, #7 
    /*00000e6c*/ MOV         R0, #3 
    /*00000e70*/ B           VPSS_VI_SubmitTask_xe30
    /*00000e74*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00000e78*/ ANDEQ       R0, R0, R4, LSL R1 
FUNC_END VPSS_VI_SubmitTask


FUNC_BEGIN VPSS_VI_StartTask
    /*00000e7c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000e80*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000e84*/ ADD         R3, R3, R0, LSL #2 
    /*00000e88*/ PUSH        {R4, R5, LR} 
    /*00000e8c*/ SUB         SP, SP, #20 
    /*00000e90*/ LDR         R5, [R3, #2584]             @ 0xa18 
    /*00000e94*/ CMP         R5, #1 
    /*00000e98*/ BNE         VPSS_VI_StartTask_xf08
    /*00000e9c*/ MOV         R4, R0 
    /*00000ea0*/ ADD         R1, SP, #12 
    /*00000ea4*/ LDR         R0, [PC, #136]              @ 0x0000000000000f34 
    /*00000ea8*/ BL          0x0000000000000EA8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00000eac*/ MOVW        R0, #0                      @ g_stCommCtx [R_ARM_MOVW_ABS_NC: .bss+0x16c8] 
    /*00000eb0*/ MOVT        R0, #0                      @ g_stCommCtx [R_ARM_MOVT_ABS: .bss+0x16c8] 
    /*00000eb4*/ MOV         R1, R4 
    /*00000eb8*/ ADD         R3, R0, R4, LSL #2 
    /*00000ebc*/ LDR         R2, [R3, #124]              @ 0x7c 
    /*00000ec0*/ BL          0x0000000000000EC0          @ VPSS_HAL_GetBusyNum [R_ARM_CALL: .text+0x1727c] 
    /*00000ec4*/ CMP         R0, #0 
    /*00000ec8*/ BEQ         VPSS_VI_StartTask_xee4
    VPSS_VI_StartTask_xecc:
    /*00000ecc*/ LDR         R0, [PC, #96]               @ 0x0000000000000f34 
    /*00000ed0*/ ADD         R1, SP, #12 
    /*00000ed4*/ BL          0x0000000000000ED4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00000ed8*/ MOV         R0, #0 
    VPSS_VI_StartTask_xedc:
    /*00000edc*/ ADD         SP, SP, #20 
    /*00000ee0*/ POP         {R4, R5, PC} 
    VPSS_VI_StartTask_xee4:
    /*00000ee4*/ MOVW        R3, #0                      @ vpss_en [R_ARM_MOVW_ABS_NC: .data+0xec] 
    /*00000ee8*/ MOVT        R3, #0                      @ vpss_en [R_ARM_MOVT_ABS: .data+0xec] 
    /*00000eec*/ LDR         R3, [R3, R4, LSL #2] 
    /*00000ef0*/ CMP         R3, #0 
    /*00000ef4*/ BEQ         VPSS_VI_StartTask_xecc
    /*00000ef8*/ MOV         R1, R5 
    /*00000efc*/ MOV         R0, R4 
    /*00000f00*/ BL          0x0000000000000F00          @ VPSS_COMM_StartWaitList [R_ARM_CALL: .text+0x15910] 
    /*00000f04*/ B           VPSS_VI_StartTask_xecc
    VPSS_VI_StartTask_xf08:
    /*00000f08*/ MOVW        R3, #745                    @ 0x2e9 
    /*00000f0c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x288] 
    /*00000f10*/ STR         R3, [SP] 
    /*00000f14*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x288] 
    /*00000f18*/ LDR         R3, [PC, #24]               @ 0x0000000000000f38 
    /*00000f1c*/ MOV         R1, #7 
    /*00000f20*/ MOV         R0, #3 
    /*00000f24*/ BL          0x0000000000000F24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000f28*/ MOVW        R0, #32777                  @ 0x8009 
    /*00000f2c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00000f30*/ B           VPSS_VI_StartTask_xedc
    /*00000f34*/ ANDEQ       R0, R0, R4, LSR SL 
    /*00000f38*/ ANDEQ       R0, R0, R8, LSR #2 
FUNC_END VPSS_VI_StartTask


FUNC_BEGIN VPSS_VI_TaskDone
    /*00000f3c*/ PUSH        {R4, LR} 
    /*00000f40*/ BL          0x0000000000000F40          @ VPSS_VI_ListInt [R_ARM_CALL: .text+0x160b8] 
    /*00000f44*/ MOV         R0, #0 
    /*00000f48*/ POP         {R4, PC} 
FUNC_END VPSS_VI_TaskDone


FUNC_BEGIN VPSS_GetChnVideoFormat
    /*00000f4c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00000f50*/ MOV         R4, #92                     @ 0x5c 
    /*00000f54*/ MUL         R6, R4, R0 
    /*00000f58*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000f5c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000f60*/ SUB         SP, SP, #20 
    /*00000f64*/ MOV         R9, R0 
    /*00000f68*/ MOV         R7, R1 
    /*00000f6c*/ ADD         R5, R4, R6 
    /*00000f70*/ ADD         R1, SP, #12 
    /*00000f74*/ ADD         R5, R5, #112                @ 0x70 
    /*00000f78*/ MOV         R8, R2 
    /*00000f7c*/ MOV         R0, R5 
    /*00000f80*/ BL          0x0000000000000F80          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00000f84*/ LDR         R1, [R4, R9, LSL #2] 
    /*00000f88*/ CMP         R1, #0 
    /*00000f8c*/ BEQ         VPSS_GetChnVideoFormat_x1018
    /*00000f90*/ ADD         R4, R4, R6 
    /*00000f94*/ LDR         R3, [R4, #64]               @ 0x40 
    /*00000f98*/ CMP         R3, #1 
    /*00000f9c*/ BEQ         VPSS_GetChnVideoFormat_xfdc
    /*00000fa0*/ ADD         R3, R7, #7104               @ 0x1bc0 
    /*00000fa4*/ MOV         R0, R5 
    /*00000fa8*/ ADD         R3, R3, #30 
    /*00000fac*/ ADD         R3, R1, R3, LSL #2 
    /*00000fb0*/ LDR         R3, [R3, #4] 
    /*00000fb4*/ CMP         R3, #0 
    /*00000fb8*/ MOVNE       R3, #72                     @ 0x48 
    /*00000fbc*/ MLANE       R1, R3, R7, R1 
    /*00000fc0*/ LDRNE       R3, [R1, #824]              @ 0x338 
    /*00000fc4*/ ADD         R1, SP, #12 
    /*00000fc8*/ STR         R3, [R8] 
    /*00000fcc*/ BL          0x0000000000000FCC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00000fd0*/ MOV         R0, #0 
    VPSS_GetChnVideoFormat_xfd4:
    /*00000fd4*/ ADD         SP, SP, #20 
    /*00000fd8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_GetChnVideoFormat_xfdc:
    /*00000fdc*/ ADD         R1, SP, #12 
    /*00000fe0*/ MOV         R0, R5 
    /*00000fe4*/ BL          0x0000000000000FE4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00000fe8*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d0] 
    /*00000fec*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d0] 
    /*00000ff0*/ MOVW        R3, #790                    @ 0x316 
    /*00000ff4*/ STR         R9, [SP, #4] 
    /*00000ff8*/ STR         R3, [SP] 
    VPSS_GetChnVideoFormat_xffc:
    /*00000ffc*/ LDR         R3, [PC, #56]               @ 0x000000000000103c 
    /*00001000*/ MOV         R1, #7 
    /*00001004*/ MOV         R0, #3 
    /*00001008*/ BL          0x0000000000001008          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000100c*/ MOVW        R0, #32773                  @ 0x8005 
    /*00001010*/ MOVT        R0, #40967                  @ 0xa007 
    /*00001014*/ B           VPSS_GetChnVideoFormat_xfd4
    VPSS_GetChnVideoFormat_x1018:
    /*00001018*/ ADD         R1, SP, #12 
    /*0000101c*/ MOV         R0, R5 
    /*00001020*/ BL          0x0000000000001020          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001024*/ MOVW        R3, #783                    @ 0x30f 
    /*00001028*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*0000102c*/ STR         R9, [SP, #4] 
    /*00001030*/ STR         R3, [SP] 
    /*00001034*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00001038*/ B           VPSS_GetChnVideoFormat_xffc
    /*0000103c*/ ANDEQ       R0, R0, IP, LSR R1 
FUNC_END VPSS_GetChnVideoFormat


FUNC_BEGIN VpssGetAction
    /*00001040*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001044*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001048*/ PUSH        {R4, R5, LR} 
    /*0000104c*/ MOVW        LR, #8536                   @ 0x2158 
    /*00001050*/ LDR         R2, [R3, R0, LSL #2] 
    /*00001054*/ ADD         R3, R2, #28416              @ 0x6f00 
    /*00001058*/ ADD         IP, R2, #28416              @ 0x6f00 
    /*0000105c*/ LDR         R4, [R2, #2068]             @ 0x814 
    /*00001060*/ ADD         R3, R3, #124                @ 0x7c 
    /*00001064*/ MLA         LR, LR, R1, R2 
    /*00001068*/ CMP         R4, #0 
    /*0000106c*/ ADD         IP, IP, #136                @ 0x88 
    /*00001070*/ MOV         R0, R3 
    /*00001074*/ BNE         VpssGetAction_x10c4
    VpssGetAction_x1078:
    /*00001078*/ LDR         R5, [R0], #4 
    /*0000107c*/ CMP         R5, #1 
    /*00001080*/ BEQ         VpssGetAction_x1140
    VpssGetAction_x1084:
    /*00001084*/ CMP         R0, IP 
    /*00001088*/ ADD         LR, LR, #776                @ 0x308 
    /*0000108c*/ BNE         VpssGetAction_x1078
    VpssGetAction_x1090:
    /*00001090*/ MOVW        R0, #8536                   @ 0x2158 
    /*00001094*/ MLA         R0, R0, R1, R2 
    VpssGetAction_x1098:
    /*00001098*/ LDR         LR, [R3], #4 
    /*0000109c*/ CMP         LR, #1 
    /*000010a0*/ BEQ         VpssGetAction_x10e4
    VpssGetAction_x10a4:
    /*000010a4*/ CMP         IP, R3 
    /*000010a8*/ ADD         R0, R0, #776                @ 0x308 
    /*000010ac*/ BNE         VpssGetAction_x1098
    /*000010b0*/ MOV         LR, #0 
    VpssGetAction_x10b4:
    /*000010b4*/ ADD         R2, R2, R1, LSL #2 
    /*000010b8*/ STR         R4, [R2, #2612]             @ 0xa34 
    /*000010bc*/ STR         LR, [R2, #2616]             @ 0xa38 
    /*000010c0*/ POP         {R4, R5, PC} 
    VpssGetAction_x10c4:
    /*000010c4*/ LDR         R4, [R0], #4 
    /*000010c8*/ CMP         R4, #1 
    /*000010cc*/ BEQ         VpssGetAction_x1118
    VpssGetAction_x10d0:
    /*000010d0*/ CMP         R0, IP 
    /*000010d4*/ ADD         LR, LR, #776                @ 0x308 
    /*000010d8*/ BNE         VpssGetAction_x10c4
    /*000010dc*/ MOV         R4, #1 
    /*000010e0*/ B           VpssGetAction_x1090
    VpssGetAction_x10e4:
    /*000010e4*/ LDR         LR, [R3, #40]               @ 0x28 
    /*000010e8*/ CMP         LR, #1 
    /*000010ec*/ BNE         VpssGetAction_x10a4
    /*000010f0*/ LDR         LR, [R3, #84]               @ 0x54 
    /*000010f4*/ CMP         LR, #1 
    /*000010f8*/ BNE         VpssGetAction_x10a4
    /*000010fc*/ LDR         R5, [R0, #2624]             @ 0xa40 
    /*00001100*/ CMP         R4, R5 
    /*00001104*/ BNE         VpssGetAction_x10a4
    /*00001108*/ LDR         R5, [R0, #2628]             @ 0xa44 
    /*0000110c*/ CMP         R5, #0 
    /*00001110*/ BEQ         VpssGetAction_x10a4
    /*00001114*/ B           VpssGetAction_x10b4
    VpssGetAction_x1118:
    /*00001118*/ LDR         R4, [R0, #40]               @ 0x28 
    /*0000111c*/ CMP         R4, #1 
    /*00001120*/ BNE         VpssGetAction_x10d0
    /*00001124*/ LDR         R4, [R0, #84]               @ 0x54 
    /*00001128*/ CMP         R4, #1 
    /*0000112c*/ BNE         VpssGetAction_x10d0
    /*00001130*/ LDR         R4, [LR, #2624]             @ 0xa40 
    /*00001134*/ ANDS        R4, R4, #1 
    /*00001138*/ BNE         VpssGetAction_x10d0
    /*0000113c*/ B           VpssGetAction_x1090
    VpssGetAction_x1140:
    /*00001140*/ LDR         R5, [R0, #40]               @ 0x28 
    /*00001144*/ CMP         R5, #1 
    /*00001148*/ BNE         VpssGetAction_x1084
    /*0000114c*/ LDR         R5, [R0, #84]               @ 0x54 
    /*00001150*/ CMP         R5, #1 
    /*00001154*/ BNE         VpssGetAction_x1084
    /*00001158*/ LDR         R5, [LR, #2624]             @ 0xa40 
    /*0000115c*/ ORR         R4, R4, R5 
    /*00001160*/ CMP         R4, #1 
    /*00001164*/ BNE         VpssGetAction_x1084
    /*00001168*/ B           VpssGetAction_x1090
FUNC_END VpssGetAction


FUNC_BEGIN VpssNewUndo
    /*0000116c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00001170*/ MOVW        R8, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001174*/ MOVT        R8, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001178*/ MOVW        R9, #8536                   @ 0x2158 
    /*0000117c*/ MUL         R9, R9, R1 
    /*00001180*/ LDR         R5, [R8, R0, LSL #2] 
    /*00001184*/ SUB         SP, SP, #20 
    /*00001188*/ MOV         R6, R0 
    /*0000118c*/ ADD         R2, R5, #28672              @ 0x7000 
    /*00001190*/ MOV         R4, R1 
    /*00001194*/ MOV         R7, #0 
    /*00001198*/ MOV         SL, #776                    @ 0x308 
    /*0000119c*/ LDR         R3, [R2, #3156]             @ 0xc54 
    /*000011a0*/ ADD         R3, R3, #1 
    /*000011a4*/ STR         R3, [R2, #3156]             @ 0xc54 
    VpssNewUndo_x11a8:
    /*000011a8*/ LDR         R2, [R8, R6, LSL #2] 
    /*000011ac*/ ADD         R3, R2, R7, LSL #2 
    /*000011b0*/ ADD         R3, R3, #24576              @ 0x6000 
    /*000011b4*/ LDR         R1, [R3, #3964]             @ 0xf7c 
    /*000011b8*/ CMP         R1, #1 
    /*000011bc*/ BEQ         VpssNewUndo_x12ec
    VpssNewUndo_x11c0:
    /*000011c0*/ ADD         R7, R7, #1 
    /*000011c4*/ CMP         R7, #3 
    /*000011c8*/ BNE         VpssNewUndo_x11a8
    /*000011cc*/ LDR         R3, [R5, #2128]             @ 0x850 
    /*000011d0*/ CMP         R3, #30 
    /*000011d4*/ BEQ         VpssNewUndo_x143c
    VpssNewUndo_x11d8:
    /*000011d8*/ MOVW        R2, #8536                   @ 0x2158 
    /*000011dc*/ ADD         R3, R5, #28416              @ 0x6f00 
    /*000011e0*/ MLA         R2, R2, R4, R5 
    /*000011e4*/ MOV         R0, R3 
    /*000011e8*/ ADD         IP, R5, R4, LSL #2 
    /*000011ec*/ ADD         R3, R3, #124                @ 0x7c 
    /*000011f0*/ ADD         R0, R0, #136                @ 0x88 
    VpssNewUndo_x11f4:
    /*000011f4*/ LDR         R1, [R3], #4 
    /*000011f8*/ CMP         R1, #1 
    /*000011fc*/ BEQ         VpssNewUndo_x132c
    VpssNewUndo_x1200:
    /*00001200*/ CMP         R3, R0 
    /*00001204*/ ADD         R2, R2, #776                @ 0x308 
    /*00001208*/ BNE         VpssNewUndo_x11f4
    /*0000120c*/ LDR         R3, [R5, #2592]             @ 0xa20 
    /*00001210*/ CMP         R3, #0 
    /*00001214*/ BLE         VpssNewUndo_x12d0
    /*00001218*/ ADD         R4, R4, #548                @ 0x224 
    /*0000121c*/ ADD         R7, R5, #2160               @ 0x870 
    /*00001220*/ ADD         R4, R4, #2 
    /*00001224*/ MOVW        SL, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x338] 
    /*00001228*/ MOVW        R9, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*0000122c*/ ADD         R7, R7, #4 
    /*00001230*/ ADD         R4, R5, R4, LSL #2 
    /*00001234*/ MOVT        SL, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x338] 
    /*00001238*/ MOVT        R9, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*0000123c*/ MOV         R8, #0 
    VpssNewUndo_x1240:
    /*00001240*/ MOV         R0, R7 
    /*00001244*/ BL          0x0000000000001244          @ VPSS_PicQueueGetBusy [R_ARM_CALL: .text+0x10f14] 
    /*00001248*/ LDR         IP, [R4] 
    /*0000124c*/ LDR         R1, [PC, #680]              @ 0x00000000000014fc 
    /*00001250*/ MOV         R3, SL 
    /*00001254*/ MOVW        R2, #1236                   @ 0x4d4 
    /*00001258*/ MOV         FP, R0 
    /*0000125c*/ CMP         FP, IP 
    /*00001260*/ MOV         R0, R9 
    /*00001264*/ BEQ         VpssNewUndo_x126c
    /*00001268*/ BL          0x0000000000001268          @ osal_panic [R_ARM_CALL: +0x0] 
    VpssNewUndo_x126c:
    /*0000126c*/ CMP         FP, #0 
    /*00001270*/ MOV         R0, #1 
    /*00001274*/ BEQ         VpssNewUndo_x1494
    /*00001278*/ BL          0x0000000000001278          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000127c*/ LDR         R3, [R4] 
    /*00001280*/ MOV         R1, #10 
    /*00001284*/ LDR         IP, [R3, #336]              @ 0x150 
    /*00001288*/ LDRD        R2, [R3, #128]              @ 0x80 
    /*0000128c*/ STR         R1, [SP] 
    /*00001290*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00001294*/ MOV         R0, IP 
    /*00001298*/ BLX         R1 
    /*0000129c*/ CMP         R0, #0 
    /*000012a0*/ BNE         VpssNewUndo_x1470
    VpssNewUndo_x12a4:
    /*000012a4*/ LDR         R1, [R4] 
    /*000012a8*/ MOV         R0, R7 
    /*000012ac*/ BL          0x00000000000012AC          @ VPSS_PicQueuePutFree [R_ARM_CALL: .text+0x11034] 
    /*000012b0*/ MOV         R3, #0 
    /*000012b4*/ STR         R3, [R4] 
    VpssNewUndo_x12b8:
    /*000012b8*/ LDR         R3, [R5, #2592]             @ 0xa20 
    /*000012bc*/ ADD         R8, R8, #1 
    /*000012c0*/ ADD         R7, R7, #32 
    /*000012c4*/ ADD         R4, R4, #4 
    /*000012c8*/ CMP         R3, R8 
    /*000012cc*/ BGT         VpssNewUndo_x1240
    VpssNewUndo_x12d0:
    /*000012d0*/ LDR         R3, [PC, #552]              @ 0x0000000000001500 
    /*000012d4*/ MOV         R0, #92                     @ 0x5c 
    /*000012d8*/ MLA         R0, R0, R6, R3 
    /*000012dc*/ ADD         R0, R0, #28 
    /*000012e0*/ ADD         SP, SP, #20 
    /*000012e4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    VpssNewUndo_x12e8:
    /*000012e8*/ B           VpssNewUndo_x12e8           @ osal_wakeup [R_ARM_JUMP24: +0x0] 
    VpssNewUndo_x12ec:
    /*000012ec*/ LDR         R1, [R3, #4008]             @ 0xfa8 
    /*000012f0*/ CMP         R1, #1 
    /*000012f4*/ BNE         VpssNewUndo_x11c0
    /*000012f8*/ MLA         R1, SL, R7, R9 
    /*000012fc*/ ADD         R2, R2, R1 
    /*00001300*/ LDR         R2, [R2, #2628]             @ 0xa44 
    /*00001304*/ CMP         R2, #1 
    /*00001308*/ BNE         VpssNewUndo_x11c0
    /*0000130c*/ LDR         R3, [R3, #4052]             @ 0xfd4 
    /*00001310*/ CMP         R3, #1 
    /*00001314*/ BNE         VpssNewUndo_x11c0
    /*00001318*/ MOV         R2, R4 
    /*0000131c*/ MOV         R1, R7 
    /*00001320*/ MOV         R0, R6 
    /*00001324*/ BL          0x0000000000001324          @ VpssSendFail [R_ARM_CALL: .text+0xa704] 
    /*00001328*/ B           VpssNewUndo_x11c0
    VpssNewUndo_x132c:
    /*0000132c*/ LDR         R1, [R3, #40]               @ 0x28 
    /*00001330*/ CMP         R1, #1 
    /*00001334*/ BNE         VpssNewUndo_x1200
    /*00001338*/ LDR         R1, [R3, #84]               @ 0x54 
    /*0000133c*/ CMP         R1, #1 
    /*00001340*/ BNE         VpssNewUndo_x1200
    /*00001344*/ LDR         LR, [IP, #2612]             @ 0xa34 
    /*00001348*/ LDR         R1, [R2, #2624]             @ 0xa40 
    /*0000134c*/ CMP         LR, R1 
    /*00001350*/ BNE         VpssNewUndo_x1200
    /*00001354*/ LDR         LR, [IP, #2616]             @ 0xa38 
    /*00001358*/ LDR         R1, [R2, #2628]             @ 0xa44 
    /*0000135c*/ CMP         LR, R1 
    /*00001360*/ BNE         VpssNewUndo_x1200
    /*00001364*/ LDR         R1, [R2, #2636]             @ 0xa4c 
    /*00001368*/ CMP         R1, #1 
    /*0000136c*/ BNE         VpssNewUndo_x1200
    /*00001370*/ LDR         R3, [R5, #2592]             @ 0xa20 
    /*00001374*/ CMP         R3, #0 
    /*00001378*/ BLE         VpssNewUndo_x12d0
    /*0000137c*/ ADD         R4, R4, #548                @ 0x224 
    /*00001380*/ ADD         R7, R5, #2160               @ 0x870 
    /*00001384*/ ADD         R4, R4, #2 
    /*00001388*/ LDR         SL, [PC, #364]              @ 0x00000000000014fc 
    /*0000138c*/ MOVW        FP, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*00001390*/ ADD         R7, R7, #4 
    /*00001394*/ ADD         R4, R5, R4, LSL #2 
    /*00001398*/ MOVT        FP, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*0000139c*/ MOV         R8, #0 
    /*000013a0*/ MOVW        R3, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x338] 
    /*000013a4*/ MOVT        R3, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x338] 
    /*000013a8*/ STR         R3, [SP, #12] 
    VpssNewUndo_x13ac:
    /*000013ac*/ MOV         R0, R7 
    /*000013b0*/ ADD         R8, R8, #1 
    /*000013b4*/ BL          0x00000000000013B4          @ VPSS_PicQueueGetBusy [R_ARM_CALL: .text+0x10f14] 
    /*000013b8*/ LDR         IP, [R4] 
    /*000013bc*/ MOV         R1, SL 
    /*000013c0*/ LDR         R3, [SP, #12] 
    /*000013c4*/ MOVW        R2, #1190                   @ 0x4a6 
    /*000013c8*/ MOV         R9, R0 
    /*000013cc*/ CMP         R9, IP 
    /*000013d0*/ MOV         R0, FP 
    /*000013d4*/ BEQ         VpssNewUndo_x13dc
    /*000013d8*/ BL          0x00000000000013D8          @ osal_panic [R_ARM_CALL: +0x0] 
    VpssNewUndo_x13dc:
    /*000013dc*/ CMP         R9, #0 
    /*000013e0*/ BEQ         VpssNewUndo_x14e0
    VpssNewUndo_x13e4:
    /*000013e4*/ MOV         R0, #1 
    /*000013e8*/ BL          0x00000000000013E8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000013ec*/ LDR         R3, [R4], #4 
    /*000013f0*/ MOV         R1, #10 
    /*000013f4*/ LDR         IP, [R3, #336]              @ 0x150 
    /*000013f8*/ LDRD        R2, [R3, #128]              @ 0x80 
    /*000013fc*/ STR         R1, [SP] 
    /*00001400*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00001404*/ MOV         R0, IP 
    /*00001408*/ BLX         R1 
    /*0000140c*/ CMP         R0, #0 
    /*00001410*/ BNE         VpssNewUndo_x14bc
    VpssNewUndo_x1414:
    /*00001414*/ MOV         R0, R7 
    /*00001418*/ LDR         R1, [R4, #-4] 
    /*0000141c*/ BL          0x000000000000141C          @ VPSS_PicQueuePutFree [R_ARM_CALL: .text+0x11034] 
    /*00001420*/ MOV         R3, #0 
    /*00001424*/ STR         R3, [R4, #-4] 
    /*00001428*/ ADD         R7, R7, #32 
    /*0000142c*/ LDR         R3, [R5, #2592]             @ 0xa20 
    /*00001430*/ CMP         R3, R8 
    /*00001434*/ BGT         VpssNewUndo_x13ac
    /*00001438*/ B           VpssNewUndo_x12d0
    VpssNewUndo_x143c:
    /*0000143c*/ LDR         R3, [R5, #2068]             @ 0x814 
    /*00001440*/ CMP         R3, #0 
    /*00001444*/ BNE         VpssNewUndo_x11d8
    /*00001448*/ MOV         R1, #7 
    /*0000144c*/ MOVW        R3, #1165                   @ 0x48d 
    /*00001450*/ MOV         R0, R1 
    /*00001454*/ STR         R3, [SP] 
    /*00001458*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x308] 
    /*0000145c*/ LDR         R3, [PC, #152]              @ 0x00000000000014fc 
    /*00001460*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x308] 
    /*00001464*/ BL          0x0000000000001464          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001468*/ ADD         SP, SP, #20 
    /*0000146c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssNewUndo_x1470:
    /*00001470*/ MOVW        R3, #1249                   @ 0x4e1 
    /*00001474*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374] 
    /*00001478*/ STR         R3, [SP] 
    /*0000147c*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374] 
    /*00001480*/ LDR         R3, [PC, #116]              @ 0x00000000000014fc 
    /*00001484*/ MOV         R1, #7 
    /*00001488*/ MOV         R0, #3 
    /*0000148c*/ BL          0x000000000000148C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001490*/ B           VpssNewUndo_x12a4
    VpssNewUndo_x1494:
    /*00001494*/ MOVW        R3, #1240                   @ 0x4d8 
    /*00001498*/ STR         R6, [SP, #4] 
    /*0000149c*/ STR         R3, [SP] 
    /*000014a0*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a0] 
    /*000014a4*/ LDR         R3, [PC, #80]               @ 0x00000000000014fc 
    /*000014a8*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a0] 
    /*000014ac*/ MOV         R1, #7 
    /*000014b0*/ MOV         R0, #3 
    /*000014b4*/ BL          0x00000000000014B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000014b8*/ B           VpssNewUndo_x12b8
    VpssNewUndo_x14bc:
    /*000014bc*/ MOVW        R3, #1223                   @ 0x4c7 
    /*000014c0*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374] 
    /*000014c4*/ STR         R3, [SP] 
    /*000014c8*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374] 
    /*000014cc*/ MOV         R3, SL 
    /*000014d0*/ MOV         R1, #7 
    /*000014d4*/ MOV         R0, #3 
    /*000014d8*/ BL          0x00000000000014D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000014dc*/ B           VpssNewUndo_x1414
    VpssNewUndo_x14e0:
    /*000014e0*/ MOVW        R3, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x360] 
    /*000014e4*/ MOVW        R2, #1193                   @ 0x4a9 
    /*000014e8*/ MOVT        R3, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x360] 
    /*000014ec*/ MOV         R1, SL 
    /*000014f0*/ MOV         R0, FP 
    /*000014f4*/ BL          0x00000000000014F4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000014f8*/ B           VpssNewUndo_x13e4
    /*000014fc*/ ANDEQ       R0, R0, R4, ASR R1 
    /*00001500*/ ANDEQ       R0, R0, R0, ASR #32 
FUNC_END VpssNewUndo


FUNC_BEGIN VpssNewOrOldDo
    /*00001504*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00001508*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000150c*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001510*/ SUB         SP, SP, #36                 @ 0x24 
    /*00001514*/ MOV         R8, R0 
    /*00001518*/ MOV         R9, R1 
    /*0000151c*/ LDR         R6, [R5, R0, LSL #2] 
    /*00001520*/ ADD         SL, R6, R1, LSL #2 
    /*00001524*/ LDR         R3, [SL, #2612]             @ 0xa34 
    /*00001528*/ CMP         R3, #1 
    /*0000152c*/ BEQ         VpssNewOrOldDo_x1790
    /*00001530*/ CMP         R3, #0 
    /*00001534*/ BNE         VpssNewOrOldDo_x1544
    /*00001538*/ LDR         R2, [R6, #2196]             @ 0x894 
    /*0000153c*/ CMP         R2, #0 
    /*00001540*/ BEQ         VpssNewOrOldDo_x179c
    VpssNewOrOldDo_x1544:
    /*00001544*/ MOVW        R7, #8536                   @ 0x2158 
    /*00001548*/ MOV         FP, #0 
    /*0000154c*/ MUL         R7, R7, R9 
    /*00001550*/ MOV         R0, R6 
    /*00001554*/ MOV         R4, FP 
    VpssNewOrOldDo_x1558:
    /*00001558*/ ADD         R3, R0, R4, LSL #2 
    /*0000155c*/ ADD         R3, R3, #24576              @ 0x6000 
    /*00001560*/ LDR         R2, [R3, #3964]             @ 0xf7c 
    /*00001564*/ CMP         R2, #1 
    /*00001568*/ BEQ         VpssNewOrOldDo_x1654
    VpssNewOrOldDo_x156c:
    /*0000156c*/ MOV         R2, R9 
    /*00001570*/ MOV         R1, R4 
    /*00001574*/ MOV         R0, R8 
    /*00001578*/ ADD         FP, FP, #1 
    /*0000157c*/ BL          0x000000000000157C          @ VPSS_DRV_SetChnQueryFail [R_ARM_CALL: .text+0x1c72c] 
    VpssNewOrOldDo_x1580:
    /*00001580*/ ADD         R4, R4, #1 
    /*00001584*/ CMP         R4, #3 
    /*00001588*/ LDRNE       R0, [R5, R8, LSL #2] 
    /*0000158c*/ BNE         VpssNewOrOldDo_x1558
    /*00001590*/ CMP         FP, #2 
    /*00001594*/ BHI         VpssNewOrOldDo_x16b4
    /*00001598*/ LDR         R3, [R6, #2592]             @ 0xa20 
    /*0000159c*/ CMP         R3, #0 
    /*000015a0*/ BLE         VpssNewOrOldDo_x171c
    /*000015a4*/ LDR         R2, [PC, #720]              @ 0x000000000000187c 
    /*000015a8*/ MOV         R3, #92                     @ 0x5c 
    /*000015ac*/ ADD         R4, R9, #548                @ 0x224 
    /*000015b0*/ ADD         R7, R6, #2160               @ 0x870 
    /*000015b4*/ ADD         R4, R4, #2 
    /*000015b8*/ MOVW        R1, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*000015bc*/ MLA         R3, R3, R8, R2 
    /*000015c0*/ MOVT        R1, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*000015c4*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x410] 
    /*000015c8*/ ADD         R4, R6, R4, LSL #2 
    /*000015cc*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x410] 
    /*000015d0*/ ADD         R7, R7, #4 
    /*000015d4*/ ADD         R3, R3, #28 
    /*000015d8*/ STR         R2, [SP, #16] 
    /*000015dc*/ STR         R3, [SP, #12] 
    /*000015e0*/ MOV         R5, #0 
    /*000015e4*/ STR         R1, [SP, #20] 
    /*000015e8*/ B           VpssNewOrOldDo_x1604
    VpssNewOrOldDo_x15ec:
    /*000015ec*/ LDR         R3, [R6, #2592]             @ 0xa20 
    /*000015f0*/ ADD         R5, R5, #1 
    /*000015f4*/ ADD         R4, R4, #4 
    /*000015f8*/ ADD         R7, R7, #32 
    /*000015fc*/ CMP         R3, R5 
    /*00001600*/ BLE         VpssNewOrOldDo_x171c
    VpssNewOrOldDo_x1604:
    /*00001604*/ LDR         R3, [SL, #2612]             @ 0xa34 
    /*00001608*/ MOV         R2, #0 
    /*0000160c*/ CMP         R3, #1 
    /*00001610*/ STRNE       R2, [R4] 
    /*00001614*/ BNE         VpssNewOrOldDo_x15ec
    /*00001618*/ MOV         R0, R7 
    /*0000161c*/ BL          0x000000000000161C          @ VPSS_PicQueueGetBusy [R_ARM_CALL: .text+0x10f14] 
    /*00001620*/ LDR         IP, [R4] 
    /*00001624*/ LDR         R3, [SP, #16] 
    /*00001628*/ MOVW        R2, #1352                   @ 0x548 
    /*0000162c*/ LDR         R1, [PC, #588]              @ 0x0000000000001880 
    /*00001630*/ MOV         FP, R0 
    /*00001634*/ CMP         FP, IP 
    /*00001638*/ LDR         R0, [SP, #20] 
    /*0000163c*/ BEQ         VpssNewOrOldDo_x1644
    /*00001640*/ BL          0x0000000000001640          @ osal_panic [R_ARM_CALL: +0x0] 
    VpssNewOrOldDo_x1644:
    /*00001644*/ STR         FP, [R4] 
    /*00001648*/ LDR         R0, [SP, #12] 
    /*0000164c*/ BL          0x000000000000164C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00001650*/ B           VpssNewOrOldDo_x15ec
    VpssNewOrOldDo_x1654:
    /*00001654*/ LDR         R2, [R3, #4008]             @ 0xfa8 
    /*00001658*/ CMP         R2, #1 
    /*0000165c*/ BNE         VpssNewOrOldDo_x156c
    /*00001660*/ MOV         R2, #776                    @ 0x308 
    /*00001664*/ MLA         R2, R2, R4, R7 
    /*00001668*/ ADD         R0, R0, R2 
    /*0000166c*/ LDR         R2, [R0, #2628]             @ 0xa44 
    /*00001670*/ CMP         R2, #1 
    /*00001674*/ BNE         VpssNewOrOldDo_x156c
    /*00001678*/ LDR         R3, [R3, #4052]             @ 0xfd4 
    /*0000167c*/ CMP         R3, #1 
    /*00001680*/ BNE         VpssNewOrOldDo_x156c
    /*00001684*/ MOV         R2, R9 
    /*00001688*/ MOV         R1, R4 
    /*0000168c*/ MOV         R0, R8 
    /*00001690*/ BL          0x0000000000001690          @ VpssCheckQueryRlt [R_ARM_CALL: .text+0x93c] 
    /*00001694*/ CMP         R0, #0 
    /*00001698*/ BEQ         VpssNewOrOldDo_x1580
    /*0000169c*/ MOV         R2, R9 
    /*000016a0*/ MOV         R1, R4 
    /*000016a4*/ MOV         R0, R8 
    /*000016a8*/ ADD         FP, FP, #1 
    /*000016ac*/ BL          0x00000000000016AC          @ VpssSendFail [R_ARM_CALL: .text+0xa704] 
    /*000016b0*/ B           VpssNewOrOldDo_x1580
    VpssNewOrOldDo_x16b4:
    /*000016b4*/ LDR         R5, [SL, #2612]             @ 0xa34 
    /*000016b8*/ CMP         R5, #1 
    /*000016bc*/ BNE         VpssNewOrOldDo_x1710
    /*000016c0*/ ADD         R6, R6, #2160               @ 0x870 
    /*000016c4*/ ADD         R6, R6, #4 
    /*000016c8*/ MOV         R0, R6 
    /*000016cc*/ BL          0x00000000000016CC          @ VPSS_PicQueueGetBusy [R_ARM_CALL: .text+0x10f14] 
    /*000016d0*/ SUBS        R7, R0, #0 
    /*000016d4*/ BEQ         VpssNewOrOldDo_x1710
    /*000016d8*/ MOV         R0, R5 
    /*000016dc*/ BL          0x00000000000016DC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000016e0*/ LDR         IP, [R7, #336]              @ 0x150 
    /*000016e4*/ LDRD        R2, [R7, #128]              @ 0x80 
    /*000016e8*/ MOV         R1, #10 
    /*000016ec*/ STR         R1, [SP] 
    /*000016f0*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000016f4*/ MOV         R0, IP 
    /*000016f8*/ BLX         R1 
    /*000016fc*/ CMP         R0, #0 
    /*00001700*/ BNE         VpssNewOrOldDo_x17f8
    VpssNewOrOldDo_x1704:
    /*00001704*/ MOV         R1, R7 
    /*00001708*/ MOV         R0, R6 
    /*0000170c*/ BL          0x000000000000170C          @ VPSS_PicQueuePutFree [R_ARM_CALL: .text+0x11034] 
    VpssNewOrOldDo_x1710:
    /*00001710*/ MVN         R0, #0 
    /*00001714*/ ADD         SP, SP, #36                 @ 0x24 
    /*00001718*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssNewOrOldDo_x171c:
    /*0000171c*/ MOV         R1, R9 
    /*00001720*/ MOV         R0, R8 
    /*00001724*/ BL          0x0000000000001724          @ VpssPrepareHwInfo [R_ARM_CALL: .text+0x778] 
    /*00001728*/ ADD         R1, SP, #28 
    /*0000172c*/ LDR         R0, [PC, #336]              @ 0x0000000000001884 
    /*00001730*/ BL          0x0000000000001730          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00001734*/ MOV         R1, R9 
    /*00001738*/ MOV         R0, R8 
    /*0000173c*/ BL          0x000000000000173C          @ VPSS_COMM_CreateOneNode [R_ARM_CALL: .text+0x15454] 
    /*00001740*/ SUBS        R4, R0, #0 
    /*00001744*/ BEQ         VpssNewOrOldDo_x185c
    VpssNewOrOldDo_x1748:
    /*00001748*/ MOV         R1, R9 
    /*0000174c*/ MOV         R0, R4 
    /*00001750*/ BL          0x0000000000001750          @ VPSS_COMM_SubmitOneNode [R_ARM_CALL: .text+0x15df0] 
    /*00001754*/ ADD         R1, SP, #28 
    /*00001758*/ LDR         R0, [PC, #292]              @ 0x0000000000001884 
    /*0000175c*/ ADD         R6, R6, #28672              @ 0x7000 
    /*00001760*/ BL          0x0000000000001760          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001764*/ LDR         R3, [SL, #2612]             @ 0xa34 
    /*00001768*/ MOV         R0, #0 
    /*0000176c*/ CMP         R3, #1 
    /*00001770*/ LDREQ       R3, [R6, #3148]             @ 0xc4c 
    /*00001774*/ LDRNE       R3, [R6, #3152]             @ 0xc50 
    /*00001778*/ ADDEQ       R3, R3, #1 
    /*0000177c*/ ADDNE       R3, R3, #1 
    /*00001780*/ STREQ       R3, [R6, #3148]             @ 0xc4c 
    /*00001784*/ STRNE       R3, [R6, #3152]             @ 0xc50 
    /*00001788*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000178c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssNewOrOldDo_x1790:
    /*00001790*/ LDR         R3, [SL, #2200]             @ 0x898 
    /*00001794*/ CMP         R3, #0 
    /*00001798*/ BNE         VpssNewOrOldDo_x1544
    VpssNewOrOldDo_x179c:
    /*0000179c*/ MOVW        R3, #1282                   @ 0x502 
    /*000017a0*/ STR         R8, [SP, #4] 
    /*000017a4*/ STR         R3, [SP] 
    /*000017a8*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d0] 
    /*000017ac*/ LDR         R3, [PC, #204]              @ 0x0000000000001880 
    /*000017b0*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d0] 
    /*000017b4*/ MOV         R1, #7 
    /*000017b8*/ MOV         R0, #3 
    /*000017bc*/ BL          0x00000000000017BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000017c0*/ MOVW        R6, #8536                   @ 0x2158 
    /*000017c4*/ MUL         R6, R6, R9 
    /*000017c8*/ MOV         R4, #0 
    /*000017cc*/ MOV         R7, #776                    @ 0x308 
    VpssNewOrOldDo_x17d0:
    /*000017d0*/ LDR         R2, [R5, R8, LSL #2] 
    /*000017d4*/ ADD         R3, R2, R4, LSL #2 
    /*000017d8*/ ADD         R3, R3, #24576              @ 0x6000 
    /*000017dc*/ LDR         R1, [R3, #3964]             @ 0xf7c 
    /*000017e0*/ CMP         R1, #1 
    /*000017e4*/ BEQ         VpssNewOrOldDo_x181c
    VpssNewOrOldDo_x17e8:
    /*000017e8*/ ADD         R4, R4, #1 
    /*000017ec*/ CMP         R4, #3 
    /*000017f0*/ BNE         VpssNewOrOldDo_x17d0
    /*000017f4*/ B           VpssNewOrOldDo_x1710
    VpssNewOrOldDo_x17f8:
    /*000017f8*/ MOVW        R3, #1336                   @ 0x538 
    /*000017fc*/ MOV         R0, R4 
    /*00001800*/ STR         R3, [SP] 
    /*00001804*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374] 
    /*00001808*/ LDR         R3, [PC, #112]              @ 0x0000000000001880 
    /*0000180c*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374] 
    /*00001810*/ MOV         R1, #7 
    /*00001814*/ BL          0x0000000000001814          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001818*/ B           VpssNewOrOldDo_x1704
    VpssNewOrOldDo_x181c:
    /*0000181c*/ LDR         R1, [R3, #4008]             @ 0xfa8 
    /*00001820*/ CMP         R1, #1 
    /*00001824*/ BNE         VpssNewOrOldDo_x17e8
    /*00001828*/ MLA         R1, R7, R4, R6 
    /*0000182c*/ ADD         R2, R2, R1 
    /*00001830*/ LDR         R2, [R2, #2628]             @ 0xa44 
    /*00001834*/ CMP         R2, #1 
    /*00001838*/ BNE         VpssNewOrOldDo_x17e8
    /*0000183c*/ LDR         R3, [R3, #4052]             @ 0xfd4 
    /*00001840*/ CMP         R3, #1 
    /*00001844*/ BNE         VpssNewOrOldDo_x17e8
    /*00001848*/ MOV         R2, R9 
    /*0000184c*/ MOV         R1, R4 
    /*00001850*/ MOV         R0, R8 
    /*00001854*/ BL          0x0000000000001854          @ VpssSendFail [R_ARM_CALL: .text+0xa704] 
    /*00001858*/ B           VpssNewOrOldDo_x17e8
    VpssNewOrOldDo_x185c:
    /*0000185c*/ MOVW        R3, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x250] 
    /*00001860*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*00001864*/ MOVT        R3, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x250] 
    /*00001868*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*0000186c*/ MOVW        R2, #1422                   @ 0x58e 
    /*00001870*/ LDR         R1, [PC, #8]                @ 0x0000000000001880 
    /*00001874*/ BL          0x0000000000001874          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001878*/ B           VpssNewOrOldDo_x1748
    /*0000187c*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00001880*/ ANDEQ       R0, R0, R0, ROR #2 
    /*00001884*/ ANDEQ       R0, R0, R4, LSR SL 
FUNC_END VpssNewOrOldDo


FUNC_BEGIN VpssProcQueryRlt
    /*00001888*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000188c*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001890*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001894*/ MOV         R5, R0 
    /*00001898*/ MOV         R8, R1 
    /*0000189c*/ LDR         R9, [R4, R0, LSL #2] 
    /*000018a0*/ BL          0x00000000000018A0          @ VpssGetAction [R_ARM_CALL: .text+0x1040] 
    /*000018a4*/ ADD         R7, R9, R1, LSL #2 
    /*000018a8*/ LDR         R3, [R7, #2612]             @ 0xa34 
    /*000018ac*/ CMP         R3, #0 
    /*000018b0*/ BEQ         VpssProcQueryRlt_x18d8
    /*000018b4*/ LDR         R3, [R7, #2616]             @ 0xa38 
    /*000018b8*/ CMP         R3, #0 
    /*000018bc*/ BEQ         VpssProcQueryRlt_x19cc
    VpssProcQueryRlt_x18c0:
    /*000018c0*/ MOV         R1, R8 
    /*000018c4*/ MOV         R0, R5 
    /*000018c8*/ BL          0x00000000000018C8          @ VpssNewOrOldDo [R_ARM_CALL: .text+0x1504] 
    /*000018cc*/ CMP         R0, #0 
    /*000018d0*/ BNE         VpssProcQueryRlt_x1924
    /*000018d4*/ B           VpssProcQueryRlt_x1984
    VpssProcQueryRlt_x18d8:
    /*000018d8*/ LDR         R6, [R7, #2616]             @ 0xa38 
    /*000018dc*/ CMP         R6, #0 
    /*000018e0*/ BNE         VpssProcQueryRlt_x18c0
    /*000018e4*/ MOVW        SL, #8536                   @ 0x2158 
    /*000018e8*/ MOV         FP, #776                    @ 0x308 
    /*000018ec*/ MUL         SL, SL, R1 
    VpssProcQueryRlt_x18f0:
    /*000018f0*/ LDR         R3, [R4, R5, LSL #2] 
    /*000018f4*/ ADD         R2, R3, R6, LSL #2 
    /*000018f8*/ ADD         R2, R2, #24576              @ 0x6000 
    /*000018fc*/ LDR         R1, [R2, #3964]             @ 0xf7c 
    /*00001900*/ CMP         R1, #1 
    /*00001904*/ BEQ         VpssProcQueryRlt_x198c
    VpssProcQueryRlt_x1908:
    /*00001908*/ ADD         R6, R6, #1 
    /*0000190c*/ CMP         R6, #3 
    /*00001910*/ BNE         VpssProcQueryRlt_x18f0
    /*00001914*/ ADD         R2, R9, #28672              @ 0x7000 
    /*00001918*/ LDR         R3, [R2, #3160]             @ 0xc58 
    /*0000191c*/ ADD         R3, R3, #1 
    /*00001920*/ STR         R3, [R2, #3160]             @ 0xc58 
    VpssProcQueryRlt_x1924:
    /*00001924*/ LDR         R3, [R9, #2592]             @ 0xa20 
    /*00001928*/ MOV         R2, #92                     @ 0x5c 
    /*0000192c*/ MLA         R2, R2, R5, R4 
    /*00001930*/ CMP         R3, #0 
    /*00001934*/ MOV         R1, #0 
    /*00001938*/ MOVGT       R3, #0 
    /*0000193c*/ STRGT       R3, [R7, #2200]             @ 0x898 
    /*00001940*/ MOV         R3, #23 
    /*00001944*/ MLA         R3, R3, R5, R8 
    /*00001948*/ LDR         R0, [R2, #68]               @ 0x44 
    /*0000194c*/ CMP         R0, R1 
    /*00001950*/ ADD         R3, R3, #2 
    /*00001954*/ ADD         R3, R4, R3, LSL #2 
    /*00001958*/ STR         R1, [R3, #64]               @ 0x40 
    /*0000195c*/ BNE         VpssProcQueryRlt_x196c
    /*00001960*/ LDR         R3, [R2, #64]               @ 0x40 
    /*00001964*/ CMP         R3, R1 
    /*00001968*/ BEQ         VpssProcQueryRlt_x1980
    VpssProcQueryRlt_x196c:
    /*0000196c*/ LDR         R3, [PC, #100]              @ 0x00000000000019d8 
    /*00001970*/ MOV         R0, #92                     @ 0x5c 
    /*00001974*/ MLA         R0, R0, R5, R3 
    /*00001978*/ ADD         R0, R0, #36                 @ 0x24 
    /*0000197c*/ BL          0x000000000000197C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VpssProcQueryRlt_x1980:
    /*00001980*/ BL          0x0000000000001980          @ VpssStartTimer [R_ARM_CALL: .text+0x8e4] 
    VpssProcQueryRlt_x1984:
    /*00001984*/ MOV         R0, #0 
    /*00001988*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssProcQueryRlt_x198c:
    /*0000198c*/ LDR         R1, [R2, #4008]             @ 0xfa8 
    /*00001990*/ CMP         R1, #1 
    /*00001994*/ BNE         VpssProcQueryRlt_x1908
    /*00001998*/ MLA         R1, FP, R6, SL 
    /*0000199c*/ ADD         R3, R3, R1 
    /*000019a0*/ LDR         R3, [R3, #2628]             @ 0xa44 
    /*000019a4*/ CMP         R3, #1 
    /*000019a8*/ BNE         VpssProcQueryRlt_x1908
    /*000019ac*/ LDR         R3, [R2, #4052]             @ 0xfd4 
    /*000019b0*/ CMP         R3, #1 
    /*000019b4*/ BNE         VpssProcQueryRlt_x1908
    /*000019b8*/ MOV         R2, R8 
    /*000019bc*/ MOV         R1, R6 
    /*000019c0*/ MOV         R0, R5 
    /*000019c4*/ BL          0x00000000000019C4          @ VpssSendFail [R_ARM_CALL: .text+0xa704] 
    /*000019c8*/ B           VpssProcQueryRlt_x1908
    VpssProcQueryRlt_x19cc:
    /*000019cc*/ MOV         R0, R5 
    /*000019d0*/ BL          0x00000000000019D0          @ VpssNewUndo [R_ARM_CALL: .text+0x116c] 
    /*000019d4*/ B           VpssProcQueryRlt_x1924
    /*000019d8*/ ANDEQ       R0, R0, R0, ASR #32 
FUNC_END VpssProcQueryRlt


FUNC_BEGIN VpssStartOneTask
    /*000019dc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000019e0*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000019e4*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000019e8*/ MOV         R2, #0 
    /*000019ec*/ ADD         R3, R5, R0, LSL #2 
    /*000019f0*/ SUB         SP, SP, #20 
    /*000019f4*/ MOV         R4, R0 
    /*000019f8*/ LDR         R3, [R3, #1540]             @ 0x604 
    /*000019fc*/ STR         R2, [SP, #12] 
    /*00001a00*/ CMP         R3, R2 
    /*00001a04*/ BNE         VpssStartOneTask_x1c00
    /*00001a08*/ LDR         R6, [R5, R0, LSL #2] 
    /*00001a0c*/ CMP         R6, #0 
    /*00001a10*/ BEQ         VpssStartOneTask_x1c30
    /*00001a14*/ MOV         R3, #92                     @ 0x5c 
    /*00001a18*/ MLA         R3, R3, R0, R5 
    /*00001a1c*/ LDR         R2, [R3, #64]               @ 0x40 
    /*00001a20*/ CMP         R2, #0 
    /*00001a24*/ BNE         VpssStartOneTask_x1b90
    /*00001a28*/ LDR         R3, [R3, #68]               @ 0x44 
    /*00001a2c*/ CMP         R3, #0 
    /*00001a30*/ BNE         VpssStartOneTask_x1b90
    /*00001a34*/ ADD         R1, SP, #12 
    /*00001a38*/ BL          0x0000000000001A38          @ VPSS_DRV_IsIpAvailable [R_ARM_CALL: .text+0x26008] 
    /*00001a3c*/ CMP         R0, #0 
    /*00001a40*/ BNE         VpssStartOneTask_x1bd4
    /*00001a44*/ MOV         R0, R4 
    /*00001a48*/ BL          0x0000000000001A48          @ VpssCheckBindInfo [R_ARM_CALL: .text+0x698] 
    /*00001a4c*/ SUBS        R9, R0, #0 
    /*00001a50*/ BNE         VpssStartOneTask_x1b34
    /*00001a54*/ BL          0x0000000000001A54          @ VPSS_COMM_GetFreeNum [R_ARM_CALL: .text+0x15448] 
    /*00001a58*/ CMP         R0, #0 
    /*00001a5c*/ BEQ         VpssStartOneTask_x1bdc
    /*00001a60*/ LDR         R7, [SP, #12] 
    /*00001a64*/ MOV         R3, #23 
    /*00001a68*/ ADD         R0, R6, #2160               @ 0x870 
    /*00001a6c*/ MOV         R8, #1 
    /*00001a70*/ ADD         R0, R0, #4 
    /*00001a74*/ MLA         R3, R3, R4, R7 
    /*00001a78*/ ADD         R3, R5, R3, LSL #2 
    /*00001a7c*/ STR         R8, [R3, #72]               @ 0x48 
    /*00001a80*/ BL          0x0000000000001A80          @ VPSS_PicQueueQueryBusy [R_ARM_CALL: .text+0x10fd8] 
    /*00001a84*/ ADD         R3, R7, #548                @ 0x224 
    /*00001a88*/ ADD         R3, R3, #2 
    /*00001a8c*/ CMP         R0, #0 
    /*00001a90*/ MOV         R2, R0 
    /*00001a94*/ STR         R0, [R6, R3, LSL #2] 
    /*00001a98*/ BEQ         VpssStartOneTask_x1bc4
    /*00001a9c*/ LDR         R3, [R0, #344]              @ 0x158 
    /*00001aa0*/ ADD         R1, R0, #8 
    /*00001aa4*/ MOV         R0, R4 
    /*00001aa8*/ STR         R3, [R6, #2128]             @ 0x850 
    /*00001aac*/ LDR         R3, [R2, #348]              @ 0x15c 
    /*00001ab0*/ STR         R3, [R6, #2068]             @ 0x814 
    /*00001ab4*/ BL          0x0000000000001AB4          @ VPSS_DRV_GrpCalCrop [R_ARM_CALL: .text+0x1f998] 
    /*00001ab8*/ MOV         R1, R9 
    /*00001abc*/ MOV         R0, R4 
    /*00001ac0*/ BL          0x0000000000001AC0          @ VPSS_DRV_ChnCalcCrop [R_ARM_CALL: .text+0x1f718] 
    /*00001ac4*/ MOV         R1, R8 
    /*00001ac8*/ MOV         R0, R4 
    /*00001acc*/ BL          0x0000000000001ACC          @ VPSS_DRV_ChnCalcCrop [R_ARM_CALL: .text+0x1f718] 
    /*00001ad0*/ MOV         R1, #2 
    /*00001ad4*/ MOV         R0, R4 
    /*00001ad8*/ BL          0x0000000000001AD8          @ VPSS_DRV_ChnCalcCrop [R_ARM_CALL: .text+0x1f718] 
    VpssStartOneTask_x1adc:
    /*00001adc*/ LDR         R1, [SP, #12] 
    /*00001ae0*/ MOV         R0, R4 
    /*00001ae4*/ BL          0x0000000000001AE4          @ VpssQuery [R_ARM_CALL: .text+0x12e3c] 
    /*00001ae8*/ CMP         R0, #0 
    /*00001aec*/ BNE         VpssStartOneTask_x1b24
    /*00001af0*/ LDR         R1, [SP, #12] 
    /*00001af4*/ MOV         R0, R4 
    /*00001af8*/ BL          0x0000000000001AF8          @ VpssProcQueryRlt [R_ARM_CALL: .text+0x1888] 
    /*00001afc*/ SUBS        R7, R0, #0 
    /*00001b00*/ BNE         VpssStartOneTask_x1b34
    /*00001b04*/ LDR         R3, [PC, #340]              @ 0x0000000000001c60 
    /*00001b08*/ MOV         R0, #92                     @ 0x5c 
    /*00001b0c*/ MLA         R0, R0, R4, R3 
    /*00001b10*/ ADD         R0, R0, #24 
    /*00001b14*/ BL          0x0000000000001B14          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VpssStartOneTask_x1b18:
    /*00001b18*/ MOV         R0, R7 
    /*00001b1c*/ ADD         SP, SP, #20 
    /*00001b20*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssStartOneTask_x1b24:
    /*00001b24*/ ADD         R2, R6, #28672              @ 0x7000 
    /*00001b28*/ LDR         R3, [R2, #3132]             @ 0xc3c 
    /*00001b2c*/ ADD         R3, R3, #1 
    /*00001b30*/ STR         R3, [R2, #3132]             @ 0xc3c 
    VpssStartOneTask_x1b34:
    /*00001b34*/ LDR         R3, [R6, #2592]             @ 0xa20 
    /*00001b38*/ LDR         R1, [SP, #12] 
    /*00001b3c*/ CMP         R3, #0 
    /*00001b40*/ ADDGT       R2, R1, #548                @ 0x224 
    /*00001b44*/ MOVGT       R3, #0 
    /*00001b48*/ ADDGT       R2, R2, #2 
    /*00001b4c*/ STRGT       R3, [R6, R2, LSL #2] 
    /*00001b50*/ MOV         R3, #23 
    /*00001b54*/ LDR         R0, [PC, #260]              @ 0x0000000000001c60 
    /*00001b58*/ MLA         R3, R3, R4, R1 
    /*00001b5c*/ MOV         R2, #92                     @ 0x5c 
    /*00001b60*/ MLA         R0, R2, R4, R0 
    /*00001b64*/ MOV         R2, #0 
    /*00001b68*/ ADD         R3, R3, #2 
    /*00001b6c*/ MVN         R7, #0 
    /*00001b70*/ ADD         R5, R5, R3, LSL #2 
    /*00001b74*/ ADD         R0, R0, #36                 @ 0x24 
    /*00001b78*/ STR         R2, [R5, #64]               @ 0x40 
    /*00001b7c*/ BL          0x0000000000001B7C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00001b80*/ BL          0x0000000000001B80          @ VpssStartTimer [R_ARM_CALL: .text+0x8e4] 
    /*00001b84*/ MOV         R0, R7 
    /*00001b88*/ ADD         SP, SP, #20 
    /*00001b8c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssStartOneTask_x1b90:
    /*00001b90*/ STR         R4, [SP, #4] 
    /*00001b94*/ MOVW        R3, #837                    @ 0x345 
    /*00001b98*/ MOV         R1, #7 
    /*00001b9c*/ STR         R3, [SP] 
    /*00001ba0*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x480] 
    /*00001ba4*/ LDR         R3, [PC, #184]              @ 0x0000000000001c64 
    /*00001ba8*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x480] 
    /*00001bac*/ MOV         R0, #4 
    /*00001bb0*/ BL          0x0000000000001BB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001bb4*/ MVN         R7, #0 
    /*00001bb8*/ MOV         R0, R7 
    /*00001bbc*/ ADD         SP, SP, #20 
    /*00001bc0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssStartOneTask_x1bc4:
    /*00001bc4*/ LDR         R3, [R6, #2196]             @ 0x894 
    /*00001bc8*/ CMP         R3, #0 
    /*00001bcc*/ BNE         VpssStartOneTask_x1adc
    /*00001bd0*/ B           VpssStartOneTask_x1b34
    VpssStartOneTask_x1bd4:
    /*00001bd4*/ MVN         R7, #0 
    /*00001bd8*/ B           VpssStartOneTask_x1b18
    VpssStartOneTask_x1bdc:
    /*00001bdc*/ MOVW        R3, #859                    @ 0x35b 
    /*00001be0*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c8] 
    /*00001be4*/ STR         R3, [SP] 
    /*00001be8*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c8] 
    /*00001bec*/ LDR         R3, [PC, #112]              @ 0x0000000000001c64 
    /*00001bf0*/ MOV         R1, #7 
    /*00001bf4*/ MOV         R0, #3 
    /*00001bf8*/ BL          0x0000000000001BF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001bfc*/ B           VpssStartOneTask_x1b34
    VpssStartOneTask_x1c00:
    /*00001c00*/ STR         R0, [SP, #4] 
    /*00001c04*/ MOVW        R3, #818                    @ 0x332 
    /*00001c08*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43c] 
    /*00001c0c*/ STR         R3, [SP] 
    /*00001c10*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43c] 
    /*00001c14*/ LDR         R3, [PC, #72]               @ 0x0000000000001c64 
    /*00001c18*/ MOV         R1, #7 
    /*00001c1c*/ MOV         R0, #4 
    /*00001c20*/ MOVW        R7, #32777                  @ 0x8009 
    /*00001c24*/ BL          0x0000000000001C24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001c28*/ MOVT        R7, #40967                  @ 0xa007 
    /*00001c2c*/ B           VpssStartOneTask_x1b18
    VpssStartOneTask_x1c30:
    /*00001c30*/ STR         R0, [SP, #4] 
    /*00001c34*/ MOVW        R3, #827                    @ 0x33b 
    /*00001c38*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00001c3c*/ STR         R3, [SP] 
    /*00001c40*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00001c44*/ LDR         R3, [PC, #24]               @ 0x0000000000001c64 
    /*00001c48*/ MOV         R1, #7 
    /*00001c4c*/ MOV         R0, #3 
    /*00001c50*/ MOVW        R7, #32773                  @ 0x8005 
    /*00001c54*/ BL          0x0000000000001C54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001c58*/ MOVT        R7, #40967                  @ 0xa007 
    /*00001c5c*/ B           VpssStartOneTask_x1b18
    /*00001c60*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00001c64*/ ANDEQ       R0, R0, R0, ROR R1 
FUNC_END VpssStartOneTask


FUNC_BEGIN VpssTimerISR
    /*00001c68*/ PUSH        {R4, R5, R6, LR} 
    /*00001c6c*/ SUB         SP, SP, #24 
    /*00001c70*/ ADD         R0, SP, #8 
    /*00001c74*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001c78*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001c7c*/ BL          0x0000000000001C7C          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00001c80*/ ADD         R0, R6, #2592               @ 0xa20 
    /*00001c84*/ ADD         R1, SP, #4 
    /*00001c88*/ BL          0x0000000000001C88          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00001c8c*/ ADD         R0, R6, #2592               @ 0xa20 
    /*00001c90*/ ADD         R1, SP, #4 
    /*00001c94*/ MOV         R4, #0 
    /*00001c98*/ STR         R4, [R6, #2596]             @ 0xa24 
    /*00001c9c*/ BL          0x0000000000001C9C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001ca0*/ ADD         R5, R6, #112                @ 0x70 
    /*00001ca4*/ SUB         R6, R6, #4 
    VpssTimerISR_x1ca8:
    /*00001ca8*/ MOV         R0, R5 
    /*00001cac*/ ADD         R1, SP, #4 
    /*00001cb0*/ BL          0x0000000000001CB0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00001cb4*/ LDR         R3, [R6, #4]! 
    /*00001cb8*/ MOV         R0, R4 
    /*00001cbc*/ ADD         R4, R4, #1 
    /*00001cc0*/ CMP         R3, #0 
    /*00001cc4*/ BEQ         VpssTimerISR_x1ccc
    /*00001cc8*/ BL          0x0000000000001CC8          @ VpssStartOneTask [R_ARM_CALL: .text+0x19dc] 
    VpssTimerISR_x1ccc:
    /*00001ccc*/ MOV         R0, R5 
    /*00001cd0*/ ADD         R1, SP, #4 
    /*00001cd4*/ BL          0x0000000000001CD4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001cd8*/ CMP         R4, #16 
    /*00001cdc*/ ADD         R5, R5, #92                 @ 0x5c 
    /*00001ce0*/ BNE         VpssTimerISR_x1ca8
    /*00001ce4*/ ADD         R0, SP, #16 
    /*00001ce8*/ BL          0x0000000000001CE8          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00001cec*/ ADD         SP, SP, #24 
    /*00001cf0*/ POP         {R4, R5, R6, PC} 
FUNC_END VpssTimerISR


FUNC_BEGIN VPSS_WaitNormalWakeup
    /*00001cf4*/ PUSH        {R4, LR} 
    /*00001cf8*/ CMP         R3, #5 
    /*00001cfc*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*00001d00*/ B           VPSS_WaitNormalWakeup_x1de0
    /*00001d04*/ ANDEQ       R1, R0, R4, ASR #26 
    /*00001d08*/ ANDEQ       R1, R0, R0, ROR SP 
    /*00001d0c*/ ANDEQ       R1, R0, R0, ROR #27 
    /*00001d10*/ MULEQ       R0, R4, SP 
    /*00001d14*/ @           <UNDEFINED> instruction: 0x00001db4 
    /*00001d18*/ ANDEQ       R1, R0, IP, LSL SP 
    /*00001d1c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001d20*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001d24*/ ADD         R2, R2, #548                @ 0x224 
    /*00001d28*/ LDR         R3, [R3, R0, LSL #2] 
    /*00001d2c*/ ADD         R2, R2, #2 
    /*00001d30*/ LDR         R0, [R3, R2, LSL #2] 
    /*00001d34*/ CLZ         R0, R0 
    /*00001d38*/ LSR         R0, R0, #5 
    /*00001d3c*/ RSB         R0, R0, #0 
    /*00001d40*/ POP         {R4, PC} 
    /*00001d44*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001d48*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001d4c*/ MOVW        R3, #2164                   @ 0x874 
    /*00001d50*/ ADD         R2, R3, R2, LSL #5 
    /*00001d54*/ LDR         R0, [R1, R0, LSL #2] 
    /*00001d58*/ ADD         R0, R0, R2 
    /*00001d5c*/ BL          0x0000000000001D5C          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*00001d60*/ CMP         R0, #2 
    /*00001d64*/ MOVLS       R0, #0 
    /*00001d68*/ MVNHI       R0, #0 
    /*00001d6c*/ POP         {R4, PC} 
    /*00001d70*/ MOV         R2, #23 
    /*00001d74*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001d78*/ MLA         R0, R2, R0, R1 
    /*00001d7c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001d80*/ ADD         R3, R3, R0, LSL #2 
    /*00001d84*/ LDR         R0, [R3, #120]              @ 0x78 
    /*00001d88*/ SUBS        R0, R0, #1 
    /*00001d8c*/ MVNNE       R0, #0 
    /*00001d90*/ POP         {R4, PC} 
    /*00001d94*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001d98*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001d9c*/ MOV         R3, #92                     @ 0x5c 
    /*00001da0*/ MLA         R0, R3, R0, R2 
    /*00001da4*/ LDR         R0, [R0, #116]              @ 0x74 
    /*00001da8*/ SUBS        R0, R0, #1 
    /*00001dac*/ MVNNE       R0, #0 
    /*00001db0*/ POP         {R4, PC} 
    /*00001db4*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001db8*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001dbc*/ MOVW        R3, #1704                   @ 0x6a8 
    /*00001dc0*/ ADD         R1, R3, R1, LSL #5 
    /*00001dc4*/ LDR         R0, [R2, R0, LSL #2] 
    /*00001dc8*/ ADD         R0, R0, R1 
    /*00001dcc*/ BL          0x0000000000001DCC          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*00001dd0*/ CLZ         R0, R0 
    /*00001dd4*/ LSR         R0, R0, #5 
    /*00001dd8*/ RSB         R0, R0, #0 
    /*00001ddc*/ POP         {R4, PC} 
    VPSS_WaitNormalWakeup_x1de0:
    /*00001de0*/ MVN         R0, #0 
    /*00001de4*/ POP         {R4, PC} 
FUNC_END VPSS_WaitNormalWakeup


FUNC_BEGIN VPSS_WakeUpCondition
    /*00001de8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00001dec*/ MOV         R4, #92                     @ 0x5c 
    /*00001df0*/ MUL         R5, R4, R0 
    /*00001df4*/ SUB         SP, SP, #20 
    /*00001df8*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001dfc*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001e00*/ LDR         R8, [SP, #56]               @ 0x38 
    /*00001e04*/ MOV         R7, R0 
    /*00001e08*/ ADD         R6, R4, R5 
    /*00001e0c*/ ADD         R4, R4, R5 
    /*00001e10*/ ADD         R6, R6, #112                @ 0x70 
    /*00001e14*/ MOV         R9, R1 
    /*00001e18*/ MOV         R1, #0 
    /*00001e1c*/ STR         R1, [R8] 
    /*00001e20*/ MOV         R0, R6 
    /*00001e24*/ ADD         R1, SP, #12 
    /*00001e28*/ MOV         FP, R3 
    /*00001e2c*/ MOV         SL, R2 
    /*00001e30*/ BL          0x0000000000001E30          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00001e34*/ LDR         R3, [R4, #76]               @ 0x4c 
    /*00001e38*/ CMP         R3, FP 
    /*00001e3c*/ BNE         VPSS_WakeUpCondition_x1eb0
    /*00001e40*/ LDR         R5, [R4, #64]               @ 0x40 
    /*00001e44*/ CMP         R5, #1 
    /*00001e48*/ MOVWEQ      R3, #1606                   @ 0x646 
    /*00001e4c*/ MOVWEQ      R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x520] 
    /*00001e50*/ STREQ       R3, [SP] 
    /*00001e54*/ MOVTEQ      R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x520] 
    /*00001e58*/ BEQ         VPSS_WakeUpCondition_x1f3c
    /*00001e5c*/ LDR         R5, [R4, #68]               @ 0x44 
    /*00001e60*/ CMP         R5, #1 
    /*00001e64*/ BEQ         VPSS_WakeUpCondition_x1f2c
    /*00001e68*/ MOVW        R3, #0                      @ g_u32VpssState [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00001e6c*/ MOVT        R3, #0                      @ g_u32VpssState [R_ARM_MOVT_ABS: .data+0x0] 
    /*00001e70*/ LDR         R5, [R3] 
    /*00001e74*/ CMP         R5, #0 
    /*00001e78*/ BNE         VPSS_WakeUpCondition_x1f64
    /*00001e7c*/ MOV         R2, SL 
    /*00001e80*/ MOV         R1, R9 
    /*00001e84*/ MOV         R0, R7 
    /*00001e88*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*00001e8c*/ BL          0x0000000000001E8C          @ VPSS_WaitNormalWakeup [R_ARM_CALL: .text+0x1cf4] 
    /*00001e90*/ CMP         R0, #0 
    /*00001e94*/ BEQ         VPSS_WakeUpCondition_x1eec
    /*00001e98*/ MOV         R0, R6 
    /*00001e9c*/ ADD         R1, SP, #12 
    /*00001ea0*/ BL          0x0000000000001EA0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001ea4*/ MOV         R0, R5 
    /*00001ea8*/ ADD         SP, SP, #20 
    /*00001eac*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_WakeUpCondition_x1eb0:
    /*00001eb0*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f4] 
    /*00001eb4*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f4] 
    /*00001eb8*/ MOVW        R3, #1598                   @ 0x63e 
    /*00001ebc*/ STR         R3, [SP] 
    VPSS_WakeUpCondition_x1ec0:
    /*00001ec0*/ LDR         R3, [PC, #176]              @ 0x0000000000001f78 
    /*00001ec4*/ MOV         R1, #7 
    /*00001ec8*/ MOV         R0, #3 
    /*00001ecc*/ MOV         R5, #1 
    /*00001ed0*/ BL          0x0000000000001ED0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001ed4*/ MOV         R0, R6 
    /*00001ed8*/ ADD         R1, SP, #12 
    /*00001edc*/ BL          0x0000000000001EDC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001ee0*/ MOV         R0, R5 
    /*00001ee4*/ ADD         SP, SP, #20 
    /*00001ee8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_WakeUpCondition_x1eec:
    /*00001eec*/ MOV         R1, #7 
    /*00001ef0*/ MOVW        R3, #1630                   @ 0x65e 
    /*00001ef4*/ MOV         R0, R1 
    /*00001ef8*/ STR         R3, [SP] 
    /*00001efc*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ac] 
    /*00001f00*/ LDR         R3, [PC, #112]              @ 0x0000000000001f78 
    /*00001f04*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ac] 
    /*00001f08*/ MOV         R5, #1 
    /*00001f0c*/ BL          0x0000000000001F0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001f10*/ MOV         R0, R6 
    /*00001f14*/ ADD         R1, SP, #12 
    /*00001f18*/ STR         R5, [R8] 
    /*00001f1c*/ BL          0x0000000000001F1C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001f20*/ MOV         R0, R5 
    /*00001f24*/ ADD         SP, SP, #20 
    /*00001f28*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_WakeUpCondition_x1f2c:
    /*00001f2c*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x550] 
    /*00001f30*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x550] 
    /*00001f34*/ MOVW        R3, #1614                   @ 0x64e 
    /*00001f38*/ STR         R3, [SP] 
    VPSS_WakeUpCondition_x1f3c:
    /*00001f3c*/ LDR         R3, [PC, #52]               @ 0x0000000000001f78 
    /*00001f40*/ MOV         R1, #7 
    /*00001f44*/ MOV         R0, #3 
    /*00001f48*/ BL          0x0000000000001F48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001f4c*/ MOV         R0, R6 
    /*00001f50*/ ADD         R1, SP, #12 
    /*00001f54*/ BL          0x0000000000001F54          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001f58*/ MOV         R0, R5 
    /*00001f5c*/ ADD         SP, SP, #20 
    /*00001f60*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_WakeUpCondition_x1f64:
    /*00001f64*/ MOVW        R3, #1622                   @ 0x656 
    /*00001f68*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57c] 
    /*00001f6c*/ STR         R3, [SP] 
    /*00001f70*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57c] 
    /*00001f74*/ B           VPSS_WakeUpCondition_x1ec0
    /*00001f78*/ ANDEQ       R0, R0, R4, LSL #3 
FUNC_END VPSS_WakeUpCondition


FUNC_BEGIN VPSS_WaitConditionCallBack
    /*00001f7c*/ PUSH        {R4, LR} 
    /*00001f80*/ SUBS        R4, R0, #0 
    /*00001f84*/ SUB         SP, SP, #8 
    /*00001f88*/ BEQ         VPSS_WaitConditionCallBack_x1fc4
    /*00001f8c*/ LDR         IP, [R4, #20] 
    /*00001f90*/ ADD         LR, R4, #16 
    /*00001f94*/ LDR         R3, [R4, #12] 
    /*00001f98*/ LDR         R2, [R4, #4] 
    /*00001f9c*/ LDR         R1, [R4, #8] 
    /*00001fa0*/ LDR         R0, [R4] 
    /*00001fa4*/ STR         LR, [SP] 
    /*00001fa8*/ STR         IP, [SP, #4] 
    /*00001fac*/ BL          0x0000000000001FAC          @ VPSS_WakeUpCondition [R_ARM_CALL: .text+0x1de8] 
    /*00001fb0*/ SUB         R0, R0, #1 
    /*00001fb4*/ CLZ         R0, R0 
    /*00001fb8*/ LSR         R0, R0, #5 
    /*00001fbc*/ ADD         SP, SP, #8 
    /*00001fc0*/ POP         {R4, PC} 
    VPSS_WaitConditionCallBack_x1fc4:
    /*00001fc4*/ MOVW        R3, #1649                   @ 0x671 
    /*00001fc8*/ MOV         R1, #7 
    /*00001fcc*/ STR         R3, [SP] 
    /*00001fd0*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdc] 
    /*00001fd4*/ LDR         R3, [PC, #20]               @ 0x0000000000001ff0 
    /*00001fd8*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdc] 
    /*00001fdc*/ MOV         R0, #3 
    /*00001fe0*/ BL          0x0000000000001FE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001fe4*/ MOV         R0, R4 
    /*00001fe8*/ ADD         SP, SP, #8 
    /*00001fec*/ POP         {R4, PC} 
    /*00001ff0*/ MULEQ       R0, IP, R1 
FUNC_END VPSS_WaitConditionCallBack


FUNC_BEGIN AbnormalVerifyAfterWait
    /*00001ff4*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00001ff8*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00001ffc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00002000*/ SUB         SP, SP, #12 
    /*00002004*/ LDR         R3, [R3, R0, LSL #2] 
    /*00002008*/ CMP         R3, #0 
    /*0000200c*/ BEQ         AbnormalVerifyAfterWait_x20dc
    /*00002010*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002014*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002018*/ MOV         R3, #92                     @ 0x5c 
    /*0000201c*/ MLA         R3, R3, R0, R2 
    /*00002020*/ LDR         R2, [R3, #76]               @ 0x4c 
    /*00002024*/ CMP         R2, R1 
    /*00002028*/ BNE         AbnormalVerifyAfterWait_x2064
    /*0000202c*/ LDR         R2, [R3, #64]               @ 0x40 
    /*00002030*/ CMP         R2, #1 
    /*00002034*/ BEQ         AbnormalVerifyAfterWait_x20c4
    /*00002038*/ LDR         R3, [R3, #68]               @ 0x44 
    /*0000203c*/ CMP         R3, #1 
    /*00002040*/ BEQ         AbnormalVerifyAfterWait_x20ac
    /*00002044*/ MOVW        R3, #0                      @ g_u32VpssState [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00002048*/ MOVT        R3, #0                      @ g_u32VpssState [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000204c*/ LDR         R3, [R3] 
    /*00002050*/ CMP         R3, #0 
    /*00002054*/ MOVEQ       R0, R3 
    /*00002058*/ BNE         AbnormalVerifyAfterWait_x2094
    AbnormalVerifyAfterWait_x205c:
    /*0000205c*/ ADD         SP, SP, #12 
    /*00002060*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    AbnormalVerifyAfterWait_x2064:
    /*00002064*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x604] 
    /*00002068*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x604] 
    /*0000206c*/ MOV         R3, #1680                   @ 0x690 
    /*00002070*/ STR         R0, [SP, #4] 
    /*00002074*/ STR         R3, [SP] 
    AbnormalVerifyAfterWait_x2078:
    /*00002078*/ LDR         R3, [PC, #116]              @ 0x00000000000020f4 
    /*0000207c*/ MOV         R1, #7 
    /*00002080*/ MOV         R0, #3 
    /*00002084*/ BL          0x0000000000002084          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002088*/ MOVW        R0, #32784                  @ 0x8010 
    /*0000208c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00002090*/ B           AbnormalVerifyAfterWait_x205c
    AbnormalVerifyAfterWait_x2094:
    /*00002094*/ MOVW        R3, #1698                   @ 0x6a2 
    /*00002098*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x694] 
    /*0000209c*/ STR         R0, [SP, #4] 
    /*000020a0*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x694] 
    /*000020a4*/ STR         R3, [SP] 
    /*000020a8*/ B           AbnormalVerifyAfterWait_x2078
    AbnormalVerifyAfterWait_x20ac:
    /*000020ac*/ MOVW        R3, #1692                   @ 0x69c 
    /*000020b0*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x664] 
    /*000020b4*/ STR         R0, [SP, #4] 
    /*000020b8*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x664] 
    /*000020bc*/ STR         R3, [SP] 
    /*000020c0*/ B           AbnormalVerifyAfterWait_x2078
    AbnormalVerifyAfterWait_x20c4:
    /*000020c4*/ MOVW        R3, #1686                   @ 0x696 
    /*000020c8*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x634] 
    /*000020cc*/ STR         R0, [SP, #4] 
    /*000020d0*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x634] 
    /*000020d4*/ STR         R3, [SP] 
    /*000020d8*/ B           AbnormalVerifyAfterWait_x2078
    AbnormalVerifyAfterWait_x20dc:
    /*000020dc*/ MOVW        R3, #1674                   @ 0x68a 
    /*000020e0*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d8] 
    /*000020e4*/ STR         R0, [SP, #4] 
    /*000020e8*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d8] 
    /*000020ec*/ STR         R3, [SP] 
    /*000020f0*/ B           AbnormalVerifyAfterWait_x2078
    /*000020f4*/ @           <UNDEFINED> instruction: 0x000001b8 
FUNC_END AbnormalVerifyAfterWait


FUNC_BEGIN VpssCopyVBPrivateData
    /*000020f8*/ LDRD        R2, [R1, #248]              @ 0xf8 
    /*000020fc*/ STRD        R2, [R0, #248]              @ 0xf8 
    /*00002100*/ BX          LR 
FUNC_END VpssCopyVBPrivateData


FUNC_BEGIN VpssReleaseCurResource
    /*00002104*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00002108*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000210c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002110*/ SUB         SP, SP, #8 
    /*00002114*/ MOV         R5, R0 
    /*00002118*/ MOV         R8, R1 
    /*0000211c*/ LDR         R7, [R4, R0, LSL #2] 
    /*00002120*/ ADD         R6, R7, R1, LSL #2 
    /*00002124*/ LDR         R3, [R6, #2616]             @ 0xa38 
    /*00002128*/ CMP         R3, #1 
    /*0000212c*/ BEQ         VpssReleaseCurResource_x214c
    /*00002130*/ MOVW        R3, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c4] 
    /*00002134*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*00002138*/ MOVT        R3, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c4] 
    /*0000213c*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*00002140*/ MOVW        R2, #1723                   @ 0x6bb 
    /*00002144*/ LDR         R1, [PC, #236]              @ 0x0000000000002238 
    /*00002148*/ BL          0x0000000000002148          @ osal_panic [R_ARM_CALL: +0x0] 
    VpssReleaseCurResource_x214c:
    /*0000214c*/ LDR         R3, [R7, #2592]             @ 0xa20 
    /*00002150*/ CMP         R3, #0 
    /*00002154*/ BLE         VpssReleaseCurResource_x21bc
    /*00002158*/ LDR         R2, [R6, #2200]             @ 0x898 
    /*0000215c*/ CMP         R2, #0 
    /*00002160*/ BEQ         VpssReleaseCurResource_x21b0
    /*00002164*/ MOV         R0, #1 
    /*00002168*/ BL          0x0000000000002168          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000216c*/ LDR         R3, [R6, #2200]             @ 0x898 
    /*00002170*/ MOV         R1, #10 
    /*00002174*/ LDR         IP, [R3, #336]              @ 0x150 
    /*00002178*/ LDRD        R2, [R3, #128]              @ 0x80 
    /*0000217c*/ STR         R1, [SP] 
    /*00002180*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00002184*/ MOV         R0, IP 
    /*00002188*/ BLX         R1 
    /*0000218c*/ CMP         R0, #0 
    /*00002190*/ BNE         VpssReleaseCurResource_x2214
    VpssReleaseCurResource_x2194:
    /*00002194*/ ADD         R0, R7, #2160               @ 0x870 
    /*00002198*/ LDR         R1, [R6, #2200]             @ 0x898 
    /*0000219c*/ ADD         R0, R0, #4 
    /*000021a0*/ BL          0x00000000000021A0          @ VPSS_PicQueuePutFree [R_ARM_CALL: .text+0x11034] 
    /*000021a4*/ MOV         R3, #0 
    /*000021a8*/ STR         R3, [R6, #2200]             @ 0x898 
    /*000021ac*/ LDR         R3, [R7, #2592]             @ 0xa20 
    VpssReleaseCurResource_x21b0:
    /*000021b0*/ CMP         R3, #1 
    /*000021b4*/ MOVEQ       R3, #0 
    /*000021b8*/ STREQ       R3, [R6, #2200]             @ 0x898 
    VpssReleaseCurResource_x21bc:
    /*000021bc*/ MOV         R3, #92                     @ 0x5c 
    /*000021c0*/ MOV         R1, #23 
    /*000021c4*/ MLA         R3, R3, R5, R4 
    /*000021c8*/ MOV         R2, #0 
    /*000021cc*/ MLA         R1, R1, R5, R8 
    /*000021d0*/ LDR         R0, [R3, #68]               @ 0x44 
    /*000021d4*/ ADD         R1, R1, #2 
    /*000021d8*/ CMP         R0, R2 
    /*000021dc*/ ADD         R4, R4, R1, LSL #2 
    /*000021e0*/ STR         R2, [R4, #64]               @ 0x40 
    /*000021e4*/ BNE         VpssReleaseCurResource_x21f4
    /*000021e8*/ LDR         R3, [R3, #64]               @ 0x40 
    /*000021ec*/ CMP         R3, R2 
    /*000021f0*/ BEQ         VpssReleaseCurResource_x2208
    VpssReleaseCurResource_x21f4:
    /*000021f4*/ LDR         R0, [PC, #64]               @ 0x000000000000223c 
    /*000021f8*/ MOV         R3, #92                     @ 0x5c 
    /*000021fc*/ MLA         R0, R3, R5, R0 
    /*00002200*/ ADD         R0, R0, #36                 @ 0x24 
    /*00002204*/ BL          0x0000000000002204          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VpssReleaseCurResource_x2208:
    /*00002208*/ MOV         R0, #0 
    /*0000220c*/ ADD         SP, SP, #8 
    /*00002210*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssReleaseCurResource_x2214:
    /*00002214*/ MOVW        R3, #1735                   @ 0x6c7 
    /*00002218*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374] 
    /*0000221c*/ STR         R3, [SP] 
    /*00002220*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374] 
    /*00002224*/ LDR         R3, [PC, #12]               @ 0x0000000000002238 
    /*00002228*/ MOV         R1, #7 
    /*0000222c*/ MOV         R0, #3 
    /*00002230*/ BL          0x0000000000002230          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002234*/ B           VpssReleaseCurResource_x2194
    /*00002238*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
    /*0000223c*/ ANDEQ       R0, R0, R0, ASR #32 
FUNC_END VpssReleaseCurResource


FUNC_BEGIN VPSS_UpdateExtChnAttrFromUserSet
    /*00002240*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002244*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002248*/ PUSH        {R4, R5, R6, LR} 
    /*0000224c*/ LDR         R3, [R3, R0, LSL #2] 
    /*00002250*/ ADD         R6, R3, R1, LSL #2 
    /*00002254*/ LDR         R2, [R6, #768]              @ 0x300 
    /*00002258*/ CMP         R2, #1 
    /*0000225c*/ BEQ         VPSS_UpdateExtChnAttrFromUserSet_x2268
    VPSS_UpdateExtChnAttrFromUserSet_x2260:
    /*00002260*/ MOV         R0, #0 
    /*00002264*/ POP         {R4, R5, R6, PC} 
    VPSS_UpdateExtChnAttrFromUserSet_x2268:
    /*00002268*/ SUB         IP, R1, #3 
    /*0000226c*/ CMP         IP, #7 
    /*00002270*/ BHI         VPSS_UpdateExtChnAttrFromUserSet_x2260
    /*00002274*/ MOV         R2, #40                     @ 0x28 
    /*00002278*/ MOV         R4, R1 
    /*0000227c*/ MUL         IP, R2, IP 
    /*00002280*/ MOV         R5, R0 
    /*00002284*/ ADD         R1, IP, #128                @ 0x80 
    /*00002288*/ ADD         IP, IP, #448                @ 0x1c0 
    /*0000228c*/ ADD         R1, R3, R1 
    /*00002290*/ ADD         R0, R3, IP 
    /*00002294*/ BL          0x0000000000002294          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00002298*/ MOV         R1, R4 
    /*0000229c*/ MOV         R0, R5 
    /*000022a0*/ BL          0x00000000000022A0          @ VPSS_DRV_UpdateExtChnAttrFromUserSet [R_ARM_CALL: .text+0x19f3c] 
    /*000022a4*/ MOV         R3, #0 
    /*000022a8*/ MOV         R0, #0 
    /*000022ac*/ STR         R3, [R6, #768]              @ 0x300 
    /*000022b0*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_UpdateExtChnAttrFromUserSet


FUNC_BEGIN VPSS_UpdateAttrFromUserSet
    /*000022b4*/ PUSH        {R4, R5, R6, LR} 
    /*000022b8*/ MOV         R5, R0 
    /*000022bc*/ MOV         R4, #0 
    VPSS_UpdateAttrFromUserSet_x22c0:
    /*000022c0*/ MOV         R1, R4 
    /*000022c4*/ MOV         R0, R5 
    /*000022c8*/ ADD         R4, R4, #1 
    /*000022cc*/ BL          0x00000000000022CC          @ VPSS_DRV_UpdateChnCropInfoFromUserSet [R_ARM_CALL: .text+0x19edc] 
    /*000022d0*/ CMP         R4, #11 
    /*000022d4*/ BNE         VPSS_UpdateAttrFromUserSet_x22c0
    /*000022d8*/ MOV         R1, #0 
    /*000022dc*/ MOV         R0, R5 
    /*000022e0*/ BL          0x00000000000022E0          @ VPSS_DRV_UpdateGdcAttrFromUserSet [R_ARM_CALL: .text+0x19d20] 
    /*000022e4*/ MOV         R1, #1 
    /*000022e8*/ MOV         R0, R5 
    /*000022ec*/ MOV         R4, #3 
    /*000022f0*/ BL          0x00000000000022F0          @ VPSS_DRV_UpdateGdcAttrFromUserSet [R_ARM_CALL: .text+0x19d20] 
    /*000022f4*/ MOV         R1, #2 
    /*000022f8*/ MOV         R0, R5 
    /*000022fc*/ BL          0x00000000000022FC          @ VPSS_DRV_UpdateGdcAttrFromUserSet [R_ARM_CALL: .text+0x19d20] 
    VPSS_UpdateAttrFromUserSet_x2300:
    /*00002300*/ MOV         R1, R4 
    /*00002304*/ MOV         R0, R5 
    /*00002308*/ BL          0x0000000000002308          @ VPSS_UpdateExtChnAttrFromUserSet [R_ARM_CALL: .text+0x2240] 
    /*0000230c*/ MOV         R1, R4 
    /*00002310*/ MOV         R0, R5 
    /*00002314*/ ADD         R4, R4, #1 
    /*00002318*/ BL          0x0000000000002318          @ VPSS_DRV_UpdateExtChnFishEyeAttrFromUserSet [R_ARM_CALL: .text+0x19f7c] 
    /*0000231c*/ CMP         R4, #11 
    /*00002320*/ BNE         VPSS_UpdateAttrFromUserSet_x2300
    /*00002324*/ MOV         R0, #0 
    /*00002328*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_UpdateAttrFromUserSet


FUNC_BEGIN VpssGrpIsr
    /*0000232c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00002330*/ MOVW        FP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002334*/ SUB         SP, SP, #68                 @ 0x44 
    /*00002338*/ MOVT        FP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000233c*/ ADD         R8, SP, #52                 @ 0x34 
    /*00002340*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00002344*/ STR         R2, [SP, #16] 
    /*00002348*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0000234c*/ LDR         R2, [FP, R0, LSL #2] 
    /*00002350*/ CMP         R0, #15 
    /*00002354*/ LDR         R4, [R3, R0, LSL #2] 
    /*00002358*/ MOV         R5, R0 
    /*0000235c*/ MOV         R3, #0 
    /*00002360*/ STR         R1, [SP, #12] 
    /*00002364*/ STR         R2, [SP, #24] 
    /*00002368*/ STR         R3, [R8, #4] 
    /*0000236c*/ STR         R3, [SP, #52]               @ 0x34 
    /*00002370*/ STR         R3, [R8, #8] 
    /*00002374*/ BHI         VpssGrpIsr_x2644
    VpssGrpIsr_x2378:
    /*00002378*/ MOV         R0, #92                     @ 0x5c 
    /*0000237c*/ LDR         R2, [PC, #1088]             @ 0x00000000000027c4 
    /*00002380*/ MUL         R3, R0, R5 
    /*00002384*/ ADD         R1, SP, #48                 @ 0x30 
    /*00002388*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000238c*/ ADD         R3, R3, #48                 @ 0x30 
    /*00002390*/ ADD         R3, R2, R3 
    /*00002394*/ STR         R3, [SP, #20] 
    /*00002398*/ MOV         R0, R3 
    /*0000239c*/ BL          0x000000000000239C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000023a0*/ MOV         R0, R5 
    /*000023a4*/ BL          0x00000000000023A4          @ VPSS_UpdateAttrFromUserSet [R_ARM_CALL: .text+0x22b4] 
    /*000023a8*/ ADD         R1, R4, #15744              @ 0x3d80 
    /*000023ac*/ MOV         R0, R1 
    /*000023b0*/ ADD         R1, R1, #24 
    /*000023b4*/ ADD         R0, R0, #40                 @ 0x28 
    /*000023b8*/ BL          0x00000000000023B8          @ VPSS_DRV_UpdateLowDelayAttr [R_ARM_CALL: .text+0x214a0] 
    /*000023bc*/ LDR         R3, [SP, #16] 
    /*000023c0*/ CMP         R3, #1 
    /*000023c4*/ BEQ         VpssGrpIsr_x2740
    /*000023c8*/ MOV         R3, #0 
    /*000023cc*/ STR         R3, [SP, #16] 
    VpssGrpIsr_x23d0:
    /*000023d0*/ LDR         R1, [SP, #12] 
    /*000023d4*/ MOV         R3, #376                    @ 0x178 
    /*000023d8*/ MOVW        R2, #19132                  @ 0x4abc 
    /*000023dc*/ MLA         R3, R3, R1, R4 
    /*000023e0*/ LDR         R6, [R3, R2] 
    /*000023e4*/ CMP         R6, #1 
    /*000023e8*/ BEQ         VpssGrpIsr_x2764
    VpssGrpIsr_x23ec:
    /*000023ec*/ LDR         R3, [R4, #28] 
    /*000023f0*/ CMP         R3, #1 
    /*000023f4*/ BEQ         VpssGrpIsr_x26ec
    VpssGrpIsr_x23f8:
    /*000023f8*/ LDR         R2, [SP, #12] 
    /*000023fc*/ MOVW        R3, #8536                   @ 0x2158 
    /*00002400*/ MOV         R6, #72                     @ 0x48 
    /*00002404*/ ADD         R9, R4, #19456              @ 0x4c00 
    /*00002408*/ LDR         SL, [PC, #952]              @ 0x00000000000027c8 
    /*0000240c*/ ADD         R9, R9, #40                 @ 0x28 
    /*00002410*/ MUL         R3, R3, R2 
    /*00002414*/ MLA         R6, R6, R2, R4 
    /*00002418*/ ADD         R2, R4, #12288              @ 0x3000 
    /*0000241c*/ ADD         R7, R3, #2640               @ 0xa50 
    /*00002420*/ STR         R2, [SP, #28] 
    /*00002424*/ LDR         R2, [SP, #24] 
    /*00002428*/ ADD         R7, R7, #8 
    /*0000242c*/ ADD         R6, R6, #18688              @ 0x4900 
    /*00002430*/ MOV         R4, #0 
    /*00002434*/ ADD         R7, R2, R7 
    /*00002438*/ ADD         R6, R6, #60                 @ 0x3c 
    /*0000243c*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00002440*/ STR         SL, [SP, #32] 
    VpssGrpIsr_x2444:
    /*00002444*/ LDR         R3, [R6] 
    /*00002448*/ CMP         R3, #0 
    /*0000244c*/ BEQ         VpssGrpIsr_x25b4
    /*00002450*/ LDR         R3, [SP, #28] 
    /*00002454*/ LDR         R3, [R3, #3488]             @ 0xda0 
    /*00002458*/ CMP         R3, #1 
    /*0000245c*/ STR         R3, [SP, #40]               @ 0x28 
    /*00002460*/ BEQ         VpssGrpIsr_x25bc
    VpssGrpIsr_x2464:
    /*00002464*/ LDR         R3, [SP, #16] 
    /*00002468*/ CMP         R3, #0 
    /*0000246c*/ BEQ         VpssGrpIsr_x259c
    VpssGrpIsr_x2470:
    /*00002470*/ LDR         R2, [FP, R5, LSL #2] 
    /*00002474*/ MOV         R3, #0 
    /*00002478*/ STR         R3, [R8, R4, LSL #2] 
    /*0000247c*/ ADD         R3, R2, R4, LSL #2 
    /*00002480*/ ADD         R3, R3, #24576              @ 0x6000 
    /*00002484*/ LDR         R1, [R3, #3964]             @ 0xf7c 
    /*00002488*/ CMP         R1, #1 
    /*0000248c*/ BEQ         VpssGrpIsr_x265c
    VpssGrpIsr_x2490:
    /*00002490*/ MOV         R1, #10 
    /*00002494*/ MOV         R0, R7 
    /*00002498*/ BL          0x0000000000002498          @ VpssPutVb [R_ARM_CALL: .text+0x11378] 
    VpssGrpIsr_x249c:
    /*0000249c*/ MOV         R1, R4 
    /*000024a0*/ MOV         R0, R5 
    /*000024a4*/ BL          0x00000000000003BC 
    VpssGrpIsr_x24a8:
    /*000024a8*/ ADD         R4, R4, #1 
    /*000024ac*/ ADD         R6, R6, #24 
    /*000024b0*/ CMP         R4, #3 
    /*000024b4*/ ADD         SL, SL, #360                @ 0x168 
    /*000024b8*/ ADD         R9, R9, #752                @ 0x2f0 
    /*000024bc*/ ADD         R7, R7, #776                @ 0x308 
    /*000024c0*/ BNE         VpssGrpIsr_x2444
    /*000024c4*/ ADD         R1, SP, #48                 @ 0x30 
    /*000024c8*/ LDR         R0, [SP, #20] 
    /*000024cc*/ LDR         SL, [SP, #32] 
    /*000024d0*/ BL          0x00000000000024D0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000024d4*/ MOV         R4, #0 
    VpssGrpIsr_x24d8:
    /*000024d8*/ LDR         R3, [R8, R4, LSL #2] 
    /*000024dc*/ CMP         R3, #1 
    /*000024e0*/ BEQ         VpssGrpIsr_x262c
    VpssGrpIsr_x24e4:
    /*000024e4*/ ADD         R4, R4, #1 
    /*000024e8*/ ADD         SL, SL, #360                @ 0x168 
    /*000024ec*/ CMP         R4, #3 
    /*000024f0*/ BNE         VpssGrpIsr_x24d8
    /*000024f4*/ ADD         R1, SP, #48                 @ 0x30 
    /*000024f8*/ LDR         R0, [SP, #20] 
    /*000024fc*/ BL          0x00000000000024FC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002500*/ LDR         R2, [SP, #12] 
    /*00002504*/ LDR         R3, [SP, #24] 
    /*00002508*/ ADD         R3, R3, R2, LSL #2 
    /*0000250c*/ LDR         R2, [R3, #2612]             @ 0xa34 
    /*00002510*/ CMP         R2, #1 
    /*00002514*/ BEQ         VpssGrpIsr_x26a4
    VpssGrpIsr_x2518:
    /*00002518*/ ADD         R2, FP, R5, LSL #2 
    /*0000251c*/ LDR         R2, [R2, #1540]             @ 0x604 
    /*00002520*/ CMP         R2, #2 
    /*00002524*/ BEQ         VpssGrpIsr_x26c8
    VpssGrpIsr_x2528:
    /*00002528*/ CMP         R2, #0 
    /*0000252c*/ LDR         R2, [SP, #12] 
    /*00002530*/ MOV         R3, #23 
    /*00002534*/ MLA         R3, R3, R5, R2 
    /*00002538*/ MOV         R2, #0 
    /*0000253c*/ ADD         R3, R3, #2 
    /*00002540*/ ADD         R3, FP, R3, LSL #2 
    /*00002544*/ STR         R2, [R3, #64]               @ 0x40 
    /*00002548*/ BEQ         VpssGrpIsr_x26d4
    VpssGrpIsr_x254c:
    /*0000254c*/ MOV         R3, #92                     @ 0x5c 
    /*00002550*/ MLA         R5, R3, R5, FP 
    /*00002554*/ LDR         R3, [R5, #68]               @ 0x44 
    /*00002558*/ CMP         R3, #0 
    /*0000255c*/ BNE         VpssGrpIsr_x2584
    /*00002560*/ LDR         R3, [R5, #64]               @ 0x40 
    /*00002564*/ CMP         R3, #0 
    /*00002568*/ BNE         VpssGrpIsr_x2584
    VpssGrpIsr_x256c:
    /*0000256c*/ LDR         R0, [SP, #20] 
    /*00002570*/ ADD         R1, SP, #48                 @ 0x30 
    /*00002574*/ BL          0x0000000000002574          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002578*/ MOV         R0, #0 
    VpssGrpIsr_x257c:
    /*0000257c*/ ADD         SP, SP, #68                 @ 0x44 
    /*00002580*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssGrpIsr_x2584:
    /*00002584*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00002588*/ ADD         R0, R3, #36                 @ 0x24 
    /*0000258c*/ LDR         R3, [PC, #560]              @ 0x00000000000027c4 
    /*00002590*/ ADD         R0, R3, R0 
    /*00002594*/ BL          0x0000000000002594          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00002598*/ B           VpssGrpIsr_x256c
    VpssGrpIsr_x259c:
    /*0000259c*/ MOV         R3, SL 
    /*000025a0*/ LDR         R2, [SP, #12] 
    /*000025a4*/ MOV         R1, R4 
    /*000025a8*/ MOV         R0, R5 
    /*000025ac*/ BL          0x00000000000025AC          @ VPSS_PreparePicInfo [R_ARM_CALL: .text+0xcee8] 
    /*000025b0*/ MOV         R3, #1 
    VpssGrpIsr_x25b4:
    /*000025b4*/ STR         R3, [R8, R4, LSL #2] 
    /*000025b8*/ B           VpssGrpIsr_x24a8
    VpssGrpIsr_x25bc:
    /*000025bc*/ LDR         R3, [SP, #28] 
    /*000025c0*/ LDR         R3, [R3, #3484]             @ 0xd9c 
    /*000025c4*/ CMP         R3, R4 
    /*000025c8*/ BNE         VpssGrpIsr_x2464
    /*000025cc*/ LDR         R3, [SP, #16] 
    /*000025d0*/ CMP         R3, #0 
    /*000025d4*/ BNE         VpssGrpIsr_x2470
    /*000025d8*/ MOV         R3, SL 
    /*000025dc*/ LDR         R2, [SP, #12] 
    /*000025e0*/ MOV         R1, R4 
    /*000025e4*/ MOV         R0, R5 
    /*000025e8*/ BL          0x00000000000025E8          @ VPSS_PreparePicInfo [R_ARM_CALL: .text+0xcee8] 
    /*000025ec*/ LDR         R3, [R9] 
    /*000025f0*/ CMP         R3, #0 
    /*000025f4*/ BEQ         VpssGrpIsr_x27ac
    VpssGrpIsr_x25f8:
    /*000025f8*/ MOV         R1, R4 
    /*000025fc*/ MOV         R3, #2 
    /*00002600*/ MOV         R2, SL 
    /*00002604*/ MOV         R0, R5 
    /*00002608*/ BL          0x0000000000002608          @ VpssFakeSendLowDelayFrame [R_ARM_CALL: .text+0xa824] 
    /*0000260c*/ MOV         R3, #1 
    /*00002610*/ MOV         R1, #10 
    /*00002614*/ STR         R3, [R9] 
    /*00002618*/ MOV         R0, R7 
    /*0000261c*/ MOV         R3, #0 
    /*00002620*/ STR         R3, [R8, R4, LSL #2] 
    /*00002624*/ BL          0x0000000000002624          @ VpssPutVb [R_ARM_CALL: .text+0x11378] 
    /*00002628*/ B           VpssGrpIsr_x24a8
    VpssGrpIsr_x262c:
    /*0000262c*/ MOV         R3, SL 
    /*00002630*/ LDR         R2, [SP, #12] 
    /*00002634*/ MOV         R1, R4 
    /*00002638*/ MOV         R0, R5 
    /*0000263c*/ BL          0x000000000000263C          @ VPSS_VgsScale [R_ARM_CALL: .text+0xd4b8] 
    /*00002640*/ B           VpssGrpIsr_x24e4
    VpssGrpIsr_x2644:
    /*00002644*/ BL          0x00000000000001B0 
    /*00002648*/ CMP         R0, #0 
    /*0000264c*/ BEQ         VpssGrpIsr_x2378
    /*00002650*/ MOVW        R0, #32769                  @ 0x8001 
    /*00002654*/ MOVT        R0, #40967                  @ 0xa007 
    /*00002658*/ B           VpssGrpIsr_x257c
    VpssGrpIsr_x265c:
    /*0000265c*/ LDR         R1, [R3, #4008]             @ 0xfa8 
    /*00002660*/ CMP         R1, #1 
    /*00002664*/ BNE         VpssGrpIsr_x2490
    /*00002668*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000266c*/ MOV         R1, #776                    @ 0x308 
    /*00002670*/ MLA         R1, R1, R4, R0 
    /*00002674*/ ADD         R2, R2, R1 
    /*00002678*/ LDR         R2, [R2, #2628]             @ 0xa44 
    /*0000267c*/ CMP         R2, #1 
    /*00002680*/ BNE         VpssGrpIsr_x2490
    /*00002684*/ LDR         R3, [R3, #4052]             @ 0xfd4 
    /*00002688*/ CMP         R3, #1 
    /*0000268c*/ BNE         VpssGrpIsr_x2490
    /*00002690*/ LDR         R2, [SP, #12] 
    /*00002694*/ MOV         R1, R4 
    /*00002698*/ MOV         R0, R5 
    /*0000269c*/ BL          0x000000000000269C          @ VpssSendFail [R_ARM_CALL: .text+0xa704] 
    /*000026a0*/ B           VpssGrpIsr_x249c
    VpssGrpIsr_x26a4:
    /*000026a4*/ LDR         R2, [R3, #2616]             @ 0xa38 
    /*000026a8*/ CMP         R2, #1 
    /*000026ac*/ BNE         VpssGrpIsr_x2518
    /*000026b0*/ LDR         R2, [SP, #24] 
    /*000026b4*/ LDR         R2, [R2, #2060]             @ 0x80c 
    /*000026b8*/ CMP         R2, #1 
    /*000026bc*/ BNE         VpssGrpIsr_x2518
    /*000026c0*/ ADD         R2, FP, R5, LSL #2 
    /*000026c4*/ LDR         R2, [R2, #1540]             @ 0x604 
    VpssGrpIsr_x26c8:
    /*000026c8*/ MOV         R1, #0 
    /*000026cc*/ STR         R1, [R3, #2200]             @ 0x898 
    /*000026d0*/ B           VpssGrpIsr_x2528
    VpssGrpIsr_x26d4:
    /*000026d4*/ LDR         R1, [SP, #12] 
    /*000026d8*/ MOV         R0, R5 
    /*000026dc*/ BL          0x00000000000026DC          @ VpssReleaseCurResource [R_ARM_CALL: .text+0x2104] 
    /*000026e0*/ MOV         R0, R5 
    /*000026e4*/ BL          0x00000000000026E4          @ VpssStartOneTask [R_ARM_CALL: .text+0x19dc] 
    /*000026e8*/ B           VpssGrpIsr_x254c
    VpssGrpIsr_x26ec:
    /*000026ec*/ LDR         IP, [R4, #32] 
    /*000026f0*/ CMP         IP, #1 
    /*000026f4*/ BNE         VpssGrpIsr_x23f8
    /*000026f8*/ LDR         R3, [SP, #12] 
    /*000026fc*/ LDR         R2, [SP, #24] 
    /*00002700*/ ADD         R3, R3, #548                @ 0x224 
    /*00002704*/ ADD         R3, R3, #2 
    /*00002708*/ LDR         R3, [R2, R3, LSL #2] 
    /*0000270c*/ LDR         R3, [R3, #264]              @ 0x108 
    /*00002710*/ TST         R3, #4 
    /*00002714*/ BEQ         VpssGrpIsr_x23f8
    /*00002718*/ MOVW        R3, #1857                   @ 0x741 
    /*0000271c*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x710] 
    /*00002720*/ STR         R3, [SP] 
    /*00002724*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x710] 
    /*00002728*/ LDR         R3, [PC, #156]              @ 0x00000000000027cc 
    /*0000272c*/ MOV         R1, #7 
    /*00002730*/ MOV         R0, #4 
    /*00002734*/ STR         IP, [SP, #16] 
    /*00002738*/ BL          0x0000000000002738          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000273c*/ B           VpssGrpIsr_x23f8
    VpssGrpIsr_x2740:
    /*00002740*/ MOV         R3, #1840                   @ 0x730 
    /*00002744*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e4] 
    /*00002748*/ STR         R3, [SP] 
    /*0000274c*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e4] 
    /*00002750*/ LDR         R3, [PC, #116]              @ 0x00000000000027cc 
    /*00002754*/ MOV         R1, #7 
    /*00002758*/ MOV         R0, #4 
    /*0000275c*/ BL          0x000000000000275C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002760*/ B           VpssGrpIsr_x23d0
    VpssGrpIsr_x2764:
    /*00002764*/ ADD         R3, R1, #548                @ 0x224 
    /*00002768*/ LDR         R2, [SP, #24] 
    /*0000276c*/ ADD         R3, R3, #2 
    /*00002770*/ LDR         R0, [R2, R3, LSL #2] 
    /*00002774*/ ADD         R0, R0, #8 
    /*00002778*/ BL          0x0000000000002778          @ VPSS_DRV_IsTunlFrameOk [R_ARM_CALL: .text+0x1daf8] 
    /*0000277c*/ CMP         R0, #0 
    /*00002780*/ BNE         VpssGrpIsr_x23ec
    /*00002784*/ MOVW        R3, #1848                   @ 0x738 
    /*00002788*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e4] 
    /*0000278c*/ STR         R3, [SP] 
    /*00002790*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e4] 
    /*00002794*/ LDR         R3, [PC, #48]               @ 0x00000000000027cc 
    /*00002798*/ MOV         R1, #7 
    /*0000279c*/ MOV         R0, #4 
    /*000027a0*/ STR         R6, [SP, #16] 
    /*000027a4*/ BL          0x00000000000027A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000027a8*/ B           VpssGrpIsr_x23ec
    VpssGrpIsr_x27ac:
    /*000027ac*/ LDR         R3, [SP, #40]               @ 0x28 
    /*000027b0*/ MOV         R2, SL 
    /*000027b4*/ MOV         R1, R4 
    /*000027b8*/ MOV         R0, R5 
    /*000027bc*/ BL          0x00000000000027BC          @ VpssFakeSendLowDelayFrame [R_ARM_CALL: .text+0xa824] 
    /*000027c0*/ B           VpssGrpIsr_x25f8
    /*000027c4*/ ANDEQ       R0, R0, R0, ASR #32 
    /*000027c8*/ ANDEQ       R0, R0, R8, LSR SL 
    /*000027cc*/ ANDEQ       R0, R0, R8, ROR #3 
FUNC_END VpssGrpIsr


FUNC_BEGIN VPSS_LockInit
    /*000027d0*/ PUSH        {R4, R5, R6, LR} 
    /*000027d4*/ LDR         R0, [PC, #364]              @ 0x0000000000002948 
    /*000027d8*/ BL          0x00000000000027D8          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*000027dc*/ CMP         R0, #0 
    /*000027e0*/ BLT         VPSS_LockInit_x2940
    /*000027e4*/ LDR         R0, [PC, #352]              @ 0x000000000000294c 
    /*000027e8*/ BL          0x00000000000027E8          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*000027ec*/ CMP         R0, #0 
    /*000027f0*/ BLT         VPSS_LockInit_x2928
    /*000027f4*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000027f8*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000027fc*/ ADD         R0, R4, #2592               @ 0xa20 
    /*00002800*/ BL          0x0000000000002800          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*00002804*/ CMP         R0, #0 
    /*00002808*/ BLT         VPSS_LockInit_x2920
    /*0000280c*/ LDR         R0, [PC, #316]              @ 0x0000000000002950 
    /*00002810*/ BL          0x0000000000002810          @ osal_timer_init [R_ARM_CALL: +0x0] 
    /*00002814*/ CMP         R0, #0 
    /*00002818*/ BNE         VPSS_LockInit_x2938
    /*0000281c*/ MOVW        R3, #0                      @ VpssTimerISR [R_ARM_MOVW_ABS_NC: .text+0x1c68] 
    /*00002820*/ STR         R0, [R4, #2608]             @ 0xa30 
    /*00002824*/ MOVT        R3, #0                      @ VpssTimerISR [R_ARM_MOVT_ABS: .text+0x1c68] 
    /*00002828*/ STR         R3, [R4, #2604]             @ 0xa2c 
    VPSS_LockInit_x282c:
    /*0000282c*/ LDR         R4, [PC, #288]              @ 0x0000000000002954 
    /*00002830*/ ADD         R5, R4, #1472               @ 0x5c0 
    VPSS_LockInit_x2834:
    /*00002834*/ MOV         R0, R4 
    /*00002838*/ BL          0x0000000000002838          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*0000283c*/ CMP         R0, #0 
    /*00002840*/ ADD         R0, R4, #4 
    /*00002844*/ BLT         VPSS_LockInit_x28f0
    /*00002848*/ BL          0x0000000000002848          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*0000284c*/ CMP         R0, #0 
    /*00002850*/ ADD         R0, R4, #8 
    /*00002854*/ BLT         VPSS_LockInit_x28f0
    /*00002858*/ BL          0x0000000000002858          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*0000285c*/ CMP         R0, #0 
    /*00002860*/ ADD         R0, R4, #12 
    /*00002864*/ BLT         VPSS_LockInit_x28f0
    /*00002868*/ BL          0x0000000000002868          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*0000286c*/ CMP         R0, #0 
    /*00002870*/ ADD         R0, R4, #16 
    /*00002874*/ BLT         VPSS_LockInit_x28f0
    /*00002878*/ BL          0x0000000000002878          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*0000287c*/ MOV         R1, #1 
    /*00002880*/ CMP         R0, #0 
    /*00002884*/ ADD         R0, R4, #20 
    /*00002888*/ BLT         VPSS_LockInit_x28f0
    /*0000288c*/ BL          0x000000000000288C          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*00002890*/ MOV         R1, #1 
    /*00002894*/ CMP         R0, #0 
    /*00002898*/ ADD         R0, R4, #24 
    /*0000289c*/ BLT         VPSS_LockInit_x28f0
    /*000028a0*/ BL          0x00000000000028A0          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*000028a4*/ CMP         R0, #0 
    /*000028a8*/ SUB         R0, R4, #4 
    /*000028ac*/ BLT         VPSS_LockInit_x28f0
    /*000028b0*/ BL          0x00000000000028B0          @ osal_atomic_init [R_ARM_CALL: +0x0] 
    /*000028b4*/ CMP         R0, #0 
    /*000028b8*/ ADD         R0, R4, #28 
    /*000028bc*/ ADD         R4, R4, #92                 @ 0x5c 
    /*000028c0*/ BLT         VPSS_LockInit_x28f0
    /*000028c4*/ BL          0x00000000000028C4          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*000028c8*/ CMP         R0, #0 
    /*000028cc*/ BLT         VPSS_LockInit_x28f0
    /*000028d0*/ CMP         R5, R4 
    /*000028d4*/ BNE         VPSS_LockInit_x2834
    /*000028d8*/ LDR         R0, [PC, #120]              @ 0x0000000000002958 
    /*000028dc*/ BL          0x00000000000028DC          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*000028e0*/ CMP         R0, #0 
    /*000028e4*/ BLT         VPSS_LockInit_x28f0
    /*000028e8*/ MOV         R0, #0 
    /*000028ec*/ POP         {R4, R5, R6, PC} 
    VPSS_LockInit_x28f0:
    /*000028f0*/ MOVW        R0, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x774] 
    /*000028f4*/ MOVT        R0, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x774] 
    /*000028f8*/ BL          0x00000000000028F8          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000028fc*/ MOVW        R3, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78c] 
    /*00002900*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*00002904*/ MOVT        R3, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78c] 
    /*00002908*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*0000290c*/ MOVW        R2, #2095                   @ 0x82f 
    /*00002910*/ LDR         R1, [PC, #68]               @ 0x000000000000295c 
    /*00002914*/ BL          0x0000000000002914          @ osal_panic [R_ARM_CALL: +0x0] 
    VPSS_LockInit_x2918:
    /*00002918*/ LDR         R0, [PC, #64]               @ 0x0000000000002960 
    /*0000291c*/ BL          0x000000000000291C          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    VPSS_LockInit_x2920:
    /*00002920*/ LDR         R0, [PC, #36]               @ 0x000000000000294c 
    /*00002924*/ BL          0x0000000000002924          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    VPSS_LockInit_x2928:
    /*00002928*/ LDR         R0, [PC, #24]               @ 0x0000000000002948 
    /*0000292c*/ BL          0x000000000000292C          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00002930*/ MVN         R0, #0 
    /*00002934*/ POP         {R4, R5, R6, PC} 
    VPSS_LockInit_x2938:
    /*00002938*/ BGE         VPSS_LockInit_x282c
    /*0000293c*/ B           VPSS_LockInit_x2918
    VPSS_LockInit_x2940:
    /*00002940*/ MVN         R0, #0 
    /*00002944*/ POP         {R4, R5, R6, PC} 
    /*00002948*/ ANDEQ       R0, R0, R4, ASR #12 
    /*0000294c*/ ANDEQ       R0, R0, R4, LSR SL 
    /*00002950*/ ANDEQ       R0, R0, R8, LSR #20 
    /*00002954*/ ANDEQ       R0, R0, R4, ASR R0 
    /*00002958*/ ANDEQ       R0, R0, R0, LSL #12 
    /*0000295c*/ STRDEQ      R0, [R0], -R4 
    /*00002960*/ ANDEQ       R0, R0, R0, LSR #20 
FUNC_END VPSS_LockInit


FUNC_BEGIN VPSS_LockExit
    /*00002964*/ PUSH        {R4, R5, R6, LR} 
    /*00002968*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000296c*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002970*/ LDR         R0, [PC, #144]              @ 0x0000000000002a08 
    /*00002974*/ MOV         R3, #0 
    /*00002978*/ ADD         R4, R5, #84                 @ 0x54 
    /*0000297c*/ STR         R3, [R5, #2596]             @ 0xa24 
    /*00002980*/ BL          0x0000000000002980          @ osal_del_timer [R_ARM_CALL: +0x0] 
    /*00002984*/ LDR         R0, [PC, #124]              @ 0x0000000000002a08 
    /*00002988*/ BL          0x0000000000002988          @ osal_timer_destory [R_ARM_CALL: +0x0] 
    /*0000298c*/ ADD         R0, R5, #2592               @ 0xa20 
    /*00002990*/ BL          0x0000000000002990          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00002994*/ ADD         R0, R4, #1520               @ 0x5f0 
    /*00002998*/ BL          0x0000000000002998          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*0000299c*/ ADD         R0, R4, #2528               @ 0x9e0 
    /*000029a0*/ BL          0x00000000000029A0          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*000029a4*/ LDR         R5, [PC, #96]               @ 0x0000000000002a0c 
    VPSS_LockExit_x29a8:
    /*000029a8*/ MOV         R0, R4 
    /*000029ac*/ BL          0x00000000000029AC          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000029b0*/ ADD         R0, R4, #4 
    /*000029b4*/ BL          0x00000000000029B4          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000029b8*/ ADD         R0, R4, #8 
    /*000029bc*/ BL          0x00000000000029BC          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000029c0*/ ADD         R0, R4, #12 
    /*000029c4*/ BL          0x00000000000029C4          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000029c8*/ ADD         R0, R4, #16 
    /*000029cc*/ BL          0x00000000000029CC          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000029d0*/ ADD         R0, R4, #20 
    /*000029d4*/ BL          0x00000000000029D4          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    /*000029d8*/ ADD         R0, R4, #24 
    /*000029dc*/ BL          0x00000000000029DC          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    /*000029e0*/ SUB         R0, R4, #4 
    /*000029e4*/ BL          0x00000000000029E4          @ osal_atomic_destory [R_ARM_CALL: +0x0] 
    /*000029e8*/ ADD         R0, R4, #28 
    /*000029ec*/ ADD         R4, R4, #92                 @ 0x5c 
    /*000029f0*/ BL          0x00000000000029F0          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*000029f4*/ CMP         R5, R4 
    /*000029f8*/ BNE         VPSS_LockExit_x29a8
    /*000029fc*/ LDR         R0, [PC, #12]               @ 0x0000000000002a10 
    /*00002a00*/ POP         {R4, R5, R6, LR} 
    VPSS_LockExit_x2a04:
    /*00002a04*/ B           VPSS_LockExit_x2a04         @ osal_spin_lock_destory [R_ARM_JUMP24: +0x0] 
    /*00002a08*/ ANDEQ       R0, R0, R8, LSR #20 
    /*00002a0c*/ ANDEQ       R0, R0, R4, LSL R6 
    /*00002a10*/ ANDEQ       R0, R0, R0, LSL #12 
FUNC_END VPSS_LockExit


FUNC_BEGIN VpssOnlineAlternateChnBufId
    /*00002a14*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002a18*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002a1c*/ LDR         R3, [R3, R0, LSL #2] 
    /*00002a20*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00002a24*/ LDR         R3, [R3, #3684]             @ 0xe64 
    /*00002a28*/ CMP         R3, #1 
    /*00002a2c*/ CLZNE       R2, R2 
    /*00002a30*/ LSRNE       R2, R2, #5 
    /*00002a34*/ STR         R2, [R1] 
    /*00002a38*/ BX          LR 
FUNC_END VpssOnlineAlternateChnBufId


FUNC_BEGIN VpssOnLinePrepGrpHwInfo
    /*00002a3c*/ PUSH        {R4, LR} 
    /*00002a40*/ MOV         R4, R0 
    /*00002a44*/ BL          0x0000000000002A44          @ VPSS_DRV_GetOnlineVpssId [R_ARM_CALL: .text+0x262cc] 
    /*00002a48*/ MOV         R1, R0 
    /*00002a4c*/ MOV         R0, R4 
    /*00002a50*/ BL          0x0000000000002A50          @ VPSS_DRV_OnLinePrepGrpHwInfo [R_ARM_CALL: .text+0x24510] 
    /*00002a54*/ MOV         R0, #0 
    /*00002a58*/ POP         {R4, PC} 
FUNC_END VpssOnLinePrepGrpHwInfo


FUNC_BEGIN VpssOnlinePrepChnHwInfo
    /*00002a5c*/ MOVW        R2, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00002a60*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002a64*/ MOVT        R2, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00002a68*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002a6c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00002a70*/ MOV         R6, R1 
    /*00002a74*/ MOV         R7, R0 
    /*00002a78*/ LDR         R4, [R2, R0, LSL #2] 
    /*00002a7c*/ LDR         R5, [R3, R0, LSL #2] 
    /*00002a80*/ BL          0x0000000000002A80          @ VPSS_DRV_GetOnlineVpssId [R_ARM_CALL: .text+0x262cc] 
    /*00002a84*/ MOV         R3, #72                     @ 0x48 
    /*00002a88*/ ADD         R2, R6, #7104               @ 0x1bc0 
    /*00002a8c*/ ADD         R2, R2, #30 
    /*00002a90*/ ADD         R5, R5, R2, LSL #2 
    /*00002a94*/ MOV         R2, R6 
    /*00002a98*/ LDR         LR, [R5, #4] 
    /*00002a9c*/ MOV         R1, R0 
    /*00002aa0*/ MOV         R0, R7 
    /*00002aa4*/ MUL         IP, R3, R1 
    /*00002aa8*/ MOV         R3, #24 
    /*00002aac*/ MLA         R3, R3, R6, IP 
    /*00002ab0*/ MOVW        IP, #18748                  @ 0x493c 
    /*00002ab4*/ ADD         R4, R4, R3 
    /*00002ab8*/ STR         LR, [R4, IP] 
    /*00002abc*/ BL          0x0000000000002ABC          @ VPSS_DRV_OnLinePrepChnHwInfo [R_ARM_CALL: .text+0x2460c] 
    /*00002ac0*/ MOV         R0, #0 
    /*00002ac4*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VpssOnlinePrepChnHwInfo


FUNC_BEGIN VPSS_GrpInit
    /*00002ac8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00002acc*/ SUB         SP, SP, #76                 @ 0x4c 
    /*00002ad0*/ LDR         R4, [PC, #528]              @ 0x0000000000002ce8 
    /*00002ad4*/ MOV         R6, #0 
    /*00002ad8*/ ADD         R5, R4, #1472               @ 0x5c0 
    VPSS_GrpInit_x2adc:
    /*00002adc*/ MOV         R0, R4 
    /*00002ae0*/ ADD         R1, SP, #12 
    /*00002ae4*/ BL          0x0000000000002AE4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002ae8*/ STR         R6, [R4, #-36]              @ 0xffffffdc 
    /*00002aec*/ MOV         R0, R4 
    /*00002af0*/ ADD         R1, SP, #12 
    /*00002af4*/ ADD         R4, R4, #92                 @ 0x5c 
    /*00002af8*/ BL          0x0000000000002AF8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002afc*/ CMP         R4, R5 
    /*00002b00*/ BNE         VPSS_GrpInit_x2adc
    /*00002b04*/ BL          0x0000000000002B04          @ VPSS_COMM_DevInit [R_ARM_CALL: .text+0x152c8] 
    /*00002b08*/ SUBS        R4, R0, #0 
    /*00002b0c*/ BNE         VPSS_GrpInit_x2c48
    /*00002b10*/ MOV         R0, #2 
    /*00002b14*/ MOVW        R3, #0                      @ VpssNotifyBind [R_ARM_MOVW_ABS_NC: .text+0x228] 
    /*00002b18*/ MOV         R5, #7 
    /*00002b1c*/ MOVT        R3, #0                      @ VpssNotifyBind [R_ARM_MOVT_ABS: .text+0x228] 
    /*00002b20*/ STR         R5, [SP, #32] 
    /*00002b24*/ MOV         R7, #16 
    /*00002b28*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00002b2c*/ MOV         R6, #11 
    /*00002b30*/ STR         R7, [SP, #36]               @ 0x24 
    /*00002b34*/ STR         R6, [SP, #40]               @ 0x28 
    /*00002b38*/ BL          0x0000000000002B38          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00002b3c*/ LDR         R3, [R0, #24] 
    /*00002b40*/ ADD         R0, SP, #32 
    /*00002b44*/ BLX         R3 
    /*00002b48*/ SUBS        R4, R0, #0 
    /*00002b4c*/ BNE         VPSS_GrpInit_x2c18
    /*00002b50*/ MOV         R0, #2 
    /*00002b54*/ STR         R5, [SP, #48]               @ 0x30 
    /*00002b58*/ STR         R7, [SP, #52]               @ 0x34 
    /*00002b5c*/ MOVW        R2, #0                      @ VPSS_SendPic [R_ARM_MOVW_ABS_NC: .text+0x8f74] 
    /*00002b60*/ STR         R6, [SP, #56]               @ 0x38 
    /*00002b64*/ MOVT        R2, #0                      @ VPSS_SendPic [R_ARM_MOVT_ABS: .text+0x8f74] 
    /*00002b68*/ MOVW        R3, #0                      @ VPSS_SysResetGrp [R_ARM_MOVW_ABS_NC: .text+0x3cfc] 
    /*00002b6c*/ STR         R2, [SP, #60]               @ 0x3c 
    /*00002b70*/ MOVT        R3, #0                      @ VPSS_SysResetGrp [R_ARM_MOVT_ABS: .text+0x3cfc] 
    /*00002b74*/ MOV         R2, #1 
    /*00002b78*/ STR         R3, [SP, #64]               @ 0x40 
    /*00002b7c*/ STR         R2, [SP, #68]               @ 0x44 
    /*00002b80*/ BL          0x0000000000002B80          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00002b84*/ LDR         R3, [R0, #32] 
    /*00002b88*/ ADD         R0, SP, #48                 @ 0x30 
    /*00002b8c*/ BLX         R3 
    /*00002b90*/ SUBS        R4, R0, #0 
    /*00002b94*/ BNE         VPSS_GrpInit_x2cb8
    /*00002b98*/ ADD         R0, SP, #16 
    /*00002b9c*/ STR         R4, [SP, #28] 
    /*00002ba0*/ STR         R5, [SP, #16] 
    /*00002ba4*/ MOVW        R2, #0                      @ VPSS_QueryVpssSelf [R_ARM_MOVW_ABS_NC: .text+0x0] 
    /*00002ba8*/ MOVW        R3, #0                      @ VPSS_RecvVpssSelfSendPic [R_ARM_MOVW_ABS_NC: .text+0x96d8] 
    /*00002bac*/ MOVT        R2, #0                      @ VPSS_QueryVpssSelf [R_ARM_MOVT_ABS: .text+0x0] 
    /*00002bb0*/ MOVT        R3, #0                      @ VPSS_RecvVpssSelfSendPic [R_ARM_MOVT_ABS: .text+0x96d8] 
    /*00002bb4*/ STR         R2, [SP, #20] 
    /*00002bb8*/ STR         R3, [SP, #24] 
    /*00002bbc*/ BL          0x0000000000002BBC          @ VPSS_RegistModParam [R_ARM_CALL: .text+0x43c] 
    /*00002bc0*/ SUBS        R4, R0, #0 
    /*00002bc4*/ BNE         VPSS_GrpInit_x2c74
    /*00002bc8*/ MOV         R0, #3 
    /*00002bcc*/ BL          0x0000000000002BCC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00002bd0*/ CMP         R0, #0 
    /*00002bd4*/ BEQ         VPSS_GrpInit_x2c9c
    /*00002bd8*/ MOV         R0, #3 
    /*00002bdc*/ BL          0x0000000000002BDC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00002be0*/ LDR         R3, [R0] 
    /*00002be4*/ CMP         R3, #0 
    /*00002be8*/ BEQ         VPSS_GrpInit_x2c9c
    /*00002bec*/ MOV         R0, #3 
    /*00002bf0*/ BL          0x0000000000002BF0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00002bf4*/ LDR         R3, [R0, #4] 
    /*00002bf8*/ CMP         R3, #0 
    /*00002bfc*/ BEQ         VPSS_GrpInit_x2c9c
    /*00002c00*/ BL          0x0000000000002C00          @ VPSS_DRV_RegisterRgnCapacity [R_ARM_CALL: .text+0x25c90] 
    /*00002c04*/ SUBS        R5, R0, #0 
    /*00002c08*/ BEQ         VPSS_GrpInit_x2c9c
    /*00002c0c*/ BL          0x0000000000002C0C          @ VPSS_COMM_DevExit [R_ARM_CALL: .text+0x153d4] 
    /*00002c10*/ MOV         R4, R5 
    /*00002c14*/ B           VPSS_GrpInit_x2c3c
    VPSS_GrpInit_x2c18:
    /*00002c18*/ MOVW        R3, #2292                   @ 0x8f4 
    /*00002c1c*/ MOV         R1, R5 
    /*00002c20*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7bc] 
    /*00002c24*/ STR         R3, [SP] 
    /*00002c28*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7bc] 
    /*00002c2c*/ LDR         R3, [PC, #184]              @ 0x0000000000002cec 
    /*00002c30*/ MOV         R0, #3 
    /*00002c34*/ BL          0x0000000000002C34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002c38*/ BL          0x0000000000002C38          @ VPSS_COMM_DevExit [R_ARM_CALL: .text+0x153d4] 
    VPSS_GrpInit_x2c3c:
    /*00002c3c*/ MOV         R0, R4 
    /*00002c40*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00002c44*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_GrpInit_x2c48:
    /*00002c48*/ MOVW        R3, #2280                   @ 0x8e8 
    /*00002c4c*/ MOV         R1, #7 
    /*00002c50*/ STR         R3, [SP] 
    /*00002c54*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x790] 
    /*00002c58*/ LDR         R3, [PC, #140]              @ 0x0000000000002cec 
    /*00002c5c*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x790] 
    /*00002c60*/ MOV         R0, #3 
    /*00002c64*/ BL          0x0000000000002C64          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002c68*/ MOV         R0, R4 
    /*00002c6c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00002c70*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_GrpInit_x2c74:
    /*00002c74*/ MOV         R1, R5 
    /*00002c78*/ MOV         R3, #2320                   @ 0x910 
    /*00002c7c*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x828] 
    /*00002c80*/ STR         R3, [SP] 
    /*00002c84*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x828] 
    /*00002c88*/ LDR         R3, [PC, #92]               @ 0x0000000000002cec 
    /*00002c8c*/ MOV         R0, #3 
    /*00002c90*/ BL          0x0000000000002C90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002c94*/ BL          0x0000000000002C94          @ VPSS_COMM_DevExit [R_ARM_CALL: .text+0x153d4] 
    /*00002c98*/ B           VPSS_GrpInit_x2c3c
    VPSS_GrpInit_x2c9c:
    /*00002c9c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002ca0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002ca4*/ MOV         R2, #0 
    /*00002ca8*/ MOV         R0, R4 
    /*00002cac*/ STR         R2, [R3, #2596]             @ 0xa24 
    /*00002cb0*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00002cb4*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_GrpInit_x2cb8:
    /*00002cb8*/ MOV         R1, R5 
    /*00002cbc*/ MOVW        R3, #2306                   @ 0x902 
    /*00002cc0*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f0] 
    /*00002cc4*/ STR         R3, [SP] 
    /*00002cc8*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f0] 
    /*00002ccc*/ LDR         R3, [PC, #24]               @ 0x0000000000002cec 
    /*00002cd0*/ MOV         R0, #3 
    /*00002cd4*/ BL          0x0000000000002CD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002cd8*/ BL          0x0000000000002CD8          @ VPSS_COMM_DevExit [R_ARM_CALL: .text+0x153d4] 
    /*00002cdc*/ MOV         R0, R4 
    /*00002ce0*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00002ce4*/ POP         {R4, R5, R6, R7, PC} 
    /*00002ce8*/ ANDEQ       R0, R0, R0, ROR R0 
    /*00002cec*/ ANDEQ       R0, R0, R4, LSL #4 
FUNC_END VPSS_GrpInit


FUNC_BEGIN VPSS_MkpCtxDeinit
    /*00002cf0*/ PUSH        {R4, R5, R6, LR} 
    /*00002cf4*/ MOV         R6, R0 
    /*00002cf8*/ LDR         R3, [R0, #2592]             @ 0xa20 
    /*00002cfc*/ CMP         R3, #0 
    /*00002d00*/ BLE         VPSS_MkpCtxDeinit_x2d2c
    /*00002d04*/ ADD         R4, R0, #2160               @ 0x870 
    /*00002d08*/ MOV         R5, #0 
    /*00002d0c*/ ADD         R4, R4, #4 
    VPSS_MkpCtxDeinit_x2d10:
    /*00002d10*/ MOV         R0, R4 
    /*00002d14*/ ADD         R5, R5, #1 
    /*00002d18*/ BL          0x0000000000002D18          @ VPSS_DestroyPicQueue [R_ARM_CALL: .text+0x10e24] 
    /*00002d1c*/ LDR         R3, [R6, #2592]             @ 0xa20 
    /*00002d20*/ ADD         R4, R4, #32 
    /*00002d24*/ CMP         R3, R5 
    /*00002d28*/ BGT         VPSS_MkpCtxDeinit_x2d10
    VPSS_MkpCtxDeinit_x2d2c:
    /*00002d2c*/ MOV         R0, R6 
    /*00002d30*/ BL          0x0000000000002D30          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00002d34*/ MOV         R0, #0 
    /*00002d38*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_MkpCtxDeinit


FUNC_BEGIN VPSS_MkpCtxInit
    /*00002d3c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00002d40*/ MOV         R8, R0 
    /*00002d44*/ SUB         SP, SP, #20 
    /*00002d48*/ MOVW        R0, #32928                  @ 0x80a0 
    /*00002d4c*/ MOV         R9, R1 
    /*00002d50*/ MOV         R7, R2 
    /*00002d54*/ BL          0x0000000000002D54          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00002d58*/ SUBS        R6, R0, #0 
    /*00002d5c*/ BEQ         VPSS_MkpCtxInit_x2f0c
    /*00002d60*/ ADD         R4, R6, #2160               @ 0x870 
    /*00002d64*/ MOVW        R2, #32928                  @ 0x80a0 
    /*00002d68*/ MOV         R1, #0 
    /*00002d6c*/ ADD         R4, R4, #4 
    /*00002d70*/ BL          0x0000000000002D70          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00002d74*/ MOV         R5, #0 
    /*00002d78*/ STR         R6, [R7] 
    /*00002d7c*/ MOV         R3, #1 
    /*00002d80*/ STR         R3, [R6, #2592]             @ 0xa20 
    /*00002d84*/ B           VPSS_MkpCtxInit_x2d94
    VPSS_MkpCtxInit_x2d88:
    /*00002d88*/ LDR         R3, [R6, #2592]             @ 0xa20 
    /*00002d8c*/ CMP         R3, R5 
    /*00002d90*/ BLE         VPSS_MkpCtxInit_x2df0
    VPSS_MkpCtxInit_x2d94:
    /*00002d94*/ MOV         R0, R4 
    /*00002d98*/ MOV         R1, #9 
    /*00002d9c*/ BL          0x0000000000002D9C          @ VPSS_CreatPicQueue [R_ARM_CALL: .text+0x10d98] 
    /*00002da0*/ ADD         R5, R5, #1 
    /*00002da4*/ ADD         R4, R4, #32 
    /*00002da8*/ SUBS        R7, R0, #0 
    /*00002dac*/ BEQ         VPSS_MkpCtxInit_x2d88
    /*00002db0*/ MOV         R1, #7 
    /*00002db4*/ STR         R8, [SP, #4] 
    /*00002db8*/ MOVW        R3, #2426                   @ 0x97a 
    /*00002dbc*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x894] 
    /*00002dc0*/ STR         R3, [SP] 
    /*00002dc4*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x894] 
    /*00002dc8*/ LDR         R3, [PC, #364]              @ 0x0000000000002f3c 
    /*00002dcc*/ MOV         R0, #3 
    /*00002dd0*/ BL          0x0000000000002DD0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002dd4*/ MOV         R0, R6 
    /*00002dd8*/ BL          0x0000000000002DD8          @ VPSS_MkpCtxDeinit [R_ARM_CALL: .text+0x2cf0] 
    /*00002ddc*/ MOVW        R7, #32781                  @ 0x800d 
    /*00002de0*/ MOVT        R7, #40967                  @ 0xa007 
    /*00002de4*/ MOV         R0, R7 
    /*00002de8*/ ADD         SP, SP, #20 
    /*00002dec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_MkpCtxInit_x2df0:
    /*00002df0*/ MOV         R5, #92                     @ 0x5c 
    /*00002df4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002df8*/ MUL         R5, R5, R8 
    /*00002dfc*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002e00*/ ADD         FP, R3, #64                 @ 0x40 
    /*00002e04*/ ADD         R1, SP, #12 
    /*00002e08*/ ADD         SL, R5, #48                 @ 0x30 
    /*00002e0c*/ ADD         R4, R3, R5 
    /*00002e10*/ ADD         SL, FP, SL 
    /*00002e14*/ MOV         R0, SL 
    /*00002e18*/ BL          0x0000000000002E18          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002e1c*/ ADD         R0, R5, #16 
    /*00002e20*/ ADD         R0, FP, R0 
    /*00002e24*/ MOV         R1, R7 
    /*00002e28*/ STR         R7, [R4, #64]               @ 0x40 
    /*00002e2c*/ STR         R7, [R4, #68]               @ 0x44 
    /*00002e30*/ BL          0x0000000000002E30          @ osal_atomic_set [R_ARM_CALL: +0x0] 
    /*00002e34*/ MOV         R0, SL 
    /*00002e38*/ ADD         R1, SP, #12 
    /*00002e3c*/ STR         R7, [R4, #72]               @ 0x48 
    /*00002e40*/ BL          0x0000000000002E40          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002e44*/ STR         R7, [R6, #2060]             @ 0x80c 
    /*00002e48*/ MOV         IP, #1 
    /*00002e4c*/ STR         R7, [R6, #2056]             @ 0x808 
    /*00002e50*/ STR         R7, [R6, #2124]             @ 0x84c 
    /*00002e54*/ MOV         R1, #60                     @ 0x3c 
    /*00002e58*/ STR         IP, [R6, #2072]             @ 0x818 
    /*00002e5c*/ ADD         R3, R6, #32256              @ 0x7e00 
    /*00002e60*/ STR         R1, [R6, #2128]             @ 0x850 
    /*00002e64*/ ADD         R0, R6, #28672              @ 0x7000 
    /*00002e68*/ LDR         LR, [R9, #16] 
    /*00002e6c*/ MOV         R2, R3 
    /*00002e70*/ ADD         R3, R3, #52                 @ 0x34 
    /*00002e74*/ ADD         R2, R2, #96                 @ 0x60 
    /*00002e78*/ MVN         R1, #0 
    /*00002e7c*/ STR         LR, [R6, #2596]             @ 0xa24 
    /*00002e80*/ LDR         LR, [R9, #20] 
    /*00002e84*/ STR         IP, [R6, #2608]             @ 0xa30 
    /*00002e88*/ STR         R7, [R6, #2604]             @ 0xa2c 
    /*00002e8c*/ STR         LR, [R6, #2600]             @ 0xa28 
    /*00002e90*/ STR         IP, [R0, #3692]             @ 0xe6c 
    VPSS_MkpCtxInit_x2e94:
    /*00002e94*/ STR         R1, [R3, #4]! 
    /*00002e98*/ CMP         R3, R2 
    /*00002e9c*/ BNE         VPSS_MkpCtxInit_x2e94
    /*00002ea0*/ ADD         LR, R6, #128                @ 0x80 
    /*00002ea4*/ MOV         R1, R6 
    /*00002ea8*/ MOV         R3, R6 
    /*00002eac*/ MVN         R2, #0 
    /*00002eb0*/ MOV         IP, #0 
    /*00002eb4*/ MOV         R0, #1 
    VPSS_MkpCtxInit_x2eb8:
    /*00002eb8*/ STR         R2, [R1, #128]              @ 0x80 
    /*00002ebc*/ ADD         R3, R3, #16 
    /*00002ec0*/ STR         R2, [R3, #-12] 
    /*00002ec4*/ ADD         R1, R1, #40                 @ 0x28 
    /*00002ec8*/ STR         R2, [R3, #-16] 
    /*00002ecc*/ STR         IP, [R3, #-8] 
    /*00002ed0*/ STR         R0, [R3, #-4] 
    /*00002ed4*/ CMP         R3, LR 
    /*00002ed8*/ BNE         VPSS_MkpCtxInit_x2eb8
    /*00002edc*/ ADD         R1, R6, #32256              @ 0x7e00 
    /*00002ee0*/ MOV         R0, R8 
    /*00002ee4*/ ADD         R1, R1, #100                @ 0x64 
    /*00002ee8*/ BL          0x0000000000002EE8          @ VPSS_DRV_SetDefaultIntType [R_ARM_CALL: .text+0x262d4] 
    /*00002eec*/ ADD         R0, R6, #19456              @ 0x4c00 
    /*00002ef0*/ ADD         R0, R0, #196                @ 0xc4 
    /*00002ef4*/ MOV         R2, #396                    @ 0x18c 
    /*00002ef8*/ MOV         R1, #0 
    /*00002efc*/ BL          0x0000000000002EFC          @ osal_memset [R_ARM_CALL: +0x0] 
    VPSS_MkpCtxInit_x2f00:
    /*00002f00*/ MOV         R0, R7 
    /*00002f04*/ ADD         SP, SP, #20 
    /*00002f08*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_MkpCtxInit_x2f0c:
    /*00002f0c*/ MOVW        R3, #2407                   @ 0x967 
    /*00002f10*/ STR         R8, [SP, #4] 
    /*00002f14*/ STR         R3, [SP] 
    /*00002f18*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x860] 
    /*00002f1c*/ LDR         R3, [PC, #24]               @ 0x0000000000002f3c 
    /*00002f20*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x860] 
    /*00002f24*/ MOV         R1, #7 
    /*00002f28*/ MOV         R0, #3 
    /*00002f2c*/ MOVW        R7, #32780                  @ 0x800c 
    /*00002f30*/ BL          0x0000000000002F30          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002f34*/ MOVT        R7, #40967                  @ 0xa007 
    /*00002f38*/ B           VPSS_MkpCtxInit_x2f00
    /*00002f3c*/ ANDEQ       R0, R0, R4, LSL R2 
FUNC_END VPSS_MkpCtxInit


FUNC_BEGIN VPSS_IS_ONLINE_OR_PARALLEL
    /*00002f40*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002f44*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002f48*/ ADD         R0, R3, R0, LSL #2 
    /*00002f4c*/ LDR         R0, [R0, #1540]             @ 0x604 
    /*00002f50*/ BIC         R0, R0, #2 
    /*00002f54*/ SUB         R0, R0, #1 
    /*00002f58*/ CLZ         R0, R0 
    /*00002f5c*/ LSR         R0, R0, #5 
    /*00002f60*/ BX          LR 
FUNC_END VPSS_IS_ONLINE_OR_PARALLEL


FUNC_BEGIN VPSS_PreStopState
    /*00002f64*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00002f68*/ SUB         SP, SP, #20 
    /*00002f6c*/ LDR         R4, [PC, #256]              @ 0x0000000000003074 
    /*00002f70*/ LDR         R7, [PC, #256]              @ 0x0000000000003078 
    /*00002f74*/ LDR         R9, [PC, #256]              @ 0x000000000000307c 
    /*00002f78*/ SUB         R8, R4, #112                @ 0x70 
    /*00002f7c*/ ADD         SL, R4, #1472               @ 0x5c0 
    /*00002f80*/ B           VPSS_PreStopState_x2fbc
    VPSS_PreStopState_x2f84:
    /*00002f84*/ SUB         R0, R4, #24 
    /*00002f88*/ BL          0x0000000000002F88          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00002f8c*/ SUB         R0, R4, #20 
    /*00002f90*/ BL          0x0000000000002F90          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00002f94*/ SUB         R0, R4, #12 
    /*00002f98*/ BL          0x0000000000002F98          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00002f9c*/ SUB         R0, R4, #16 
    /*00002fa0*/ BL          0x0000000000002FA0          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VPSS_PreStopState_x2fa4:
    /*00002fa4*/ MOV         R0, R4 
    /*00002fa8*/ ADD         R4, R4, #92                 @ 0x5c 
    /*00002fac*/ BL          0x0000000000002FAC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00002fb0*/ CMP         R4, SL 
    /*00002fb4*/ ADD         R7, R7, #4 
    /*00002fb8*/ BEQ         VPSS_PreStopState_x3058
    VPSS_PreStopState_x2fbc:
    /*00002fbc*/ MOV         R0, R4 
    /*00002fc0*/ BL          0x0000000000002FC0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00002fc4*/ CMP         R0, #0 
    /*00002fc8*/ BNE         VPSS_PreStopState_x3064
    /*00002fcc*/ LDR         R5, [R8, #4]! 
    /*00002fd0*/ LDR         R3, [R9, #4]! 
    /*00002fd4*/ CMP         R3, #0 
    /*00002fd8*/ CMPNE       R5, #0 
    /*00002fdc*/ BEQ         VPSS_PreStopState_x2fa4
    /*00002fe0*/ LDR         R6, [R7] 
    /*00002fe4*/ BIC         R6, R6, #2 
    /*00002fe8*/ CMP         R6, #1 
    /*00002fec*/ BNE         VPSS_PreStopState_x2f84
    /*00002ff0*/ ADD         FP, R3, #16384              @ 0x4000 
    /*00002ff4*/ ADD         R2, R5, #28416              @ 0x6f00 
    /*00002ff8*/ ADD         FP, FP, #200                @ 0xc8 
    /*00002ffc*/ ADD         R2, R2, #136                @ 0x88 
    /*00003000*/ ADD         R5, R5, #28416              @ 0x6f00 
    /*00003004*/ ADD         R3, R4, #4 
    /*00003008*/ ADD         R5, R5, #124                @ 0x7c 
    /*0000300c*/ STM         SP, {R3, R4} 
    /*00003010*/ MOV         R4, FP 
    /*00003014*/ MOV         FP, R2 
    VPSS_PreStopState_x3018:
    /*00003018*/ LDR         R1, [R5], #4 
    /*0000301c*/ CMP         R1, #0 
    /*00003020*/ BNE         VPSS_PreStopState_x3038
    VPSS_PreStopState_x3024:
    /*00003024*/ CMP         FP, R5 
    /*00003028*/ ADD         R4, R4, #4 
    /*0000302c*/ BNE         VPSS_PreStopState_x3018
    /*00003030*/ LDR         R4, [SP, #4] 
    /*00003034*/ B           VPSS_PreStopState_x2f84
    VPSS_PreStopState_x3038:
    /*00003038*/ ADD         R1, SP, #12 
    /*0000303c*/ LDR         R0, [SP] 
    /*00003040*/ BL          0x0000000000003040          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003044*/ STR         R6, [R4] 
    /*00003048*/ ADD         R1, SP, #12 
    /*0000304c*/ LDR         R0, [SP] 
    /*00003050*/ BL          0x0000000000003050          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003054*/ B           VPSS_PreStopState_x3024
    VPSS_PreStopState_x3058:
    /*00003058*/ MOV         R0, #0 
    /*0000305c*/ ADD         SP, SP, #20 
    /*00003060*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_PreStopState_x3064:
    /*00003064*/ MOV         R0, #65024                  @ 0xfe00 
    /*00003068*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000306c*/ ADD         SP, SP, #20 
    /*00003070*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00003074*/ ANDEQ       R0, R0, IP, RRX 
    /*00003078*/ ANDEQ       R0, R0, R4, LSL #12 
    /*0000307c*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstDevCtx [R_ARM_ABS32: .bss+0x3560] 
FUNC_END VPSS_PreStopState


FUNC_BEGIN VPSS_GET_MODE_BY_GRP
    /*00003080*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003084*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003088*/ ADD         R0, R3, R0, LSL #2 
    /*0000308c*/ LDR         R0, [R0, #1540]             @ 0x604 
    /*00003090*/ BX          LR 
FUNC_END VPSS_GET_MODE_BY_GRP


FUNC_BEGIN VPSS_CreateGrp
    /*00003094*/ MOVW        R3, #0                      @ g_u32VpssState [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00003098*/ MOVT        R3, #0                      @ g_u32VpssState [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000309c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000030a0*/ MOV         R2, #0 
    /*000030a4*/ LDR         R3, [R3] 
    /*000030a8*/ SUB         SP, SP, #16 
    /*000030ac*/ CMP         R3, R2 
    /*000030b0*/ STR         R2, [SP, #12] 
    /*000030b4*/ BNE         VPSS_CreateGrp_x3234
    /*000030b8*/ CMP         R1, #0 
    /*000030bc*/ MOV         R4, R0 
    /*000030c0*/ MOV         R8, R1 
    /*000030c4*/ BEQ         VPSS_CreateGrp_x3210
    VPSS_CreateGrp_x30c8:
    /*000030c8*/ CMP         R4, #15 
    /*000030cc*/ BHI         VPSS_CreateGrp_x3148
    VPSS_CreateGrp_x30d0:
    /*000030d0*/ MOV         R7, #92                     @ 0x5c 
    /*000030d4*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000030d8*/ MUL         R7, R7, R4 
    /*000030dc*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000030e0*/ ADD         R9, R5, #64                 @ 0x40 
    /*000030e4*/ ADD         R6, R7, #44                 @ 0x2c 
    /*000030e8*/ ADD         R6, R9, R6 
    /*000030ec*/ MOV         R0, R6 
    /*000030f0*/ BL          0x00000000000030F0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000030f4*/ SUBS        SL, R0, #0 
    /*000030f8*/ BNE         VPSS_CreateGrp_x3228
    /*000030fc*/ LDR         R3, [R5, R4, LSL #2] 
    /*00003100*/ CMP         R3, #0 
    /*00003104*/ BEQ         VPSS_CreateGrp_x3160
    /*00003108*/ MOVW        R3, #2622                   @ 0xa3e 
    /*0000310c*/ STR         R4, [SP, #4] 
    /*00003110*/ STR         R3, [SP] 
    /*00003114*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8fc] 
    /*00003118*/ LDR         R3, [PC, #684]              @ 0x00000000000033cc 
    /*0000311c*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8fc] 
    /*00003120*/ MOV         R1, #7 
    /*00003124*/ MOV         R0, #3 
    /*00003128*/ BL          0x0000000000003128          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000312c*/ MOVW        R7, #32772                  @ 0x8004 
    /*00003130*/ MOVT        R7, #40967                  @ 0xa007 
    VPSS_CreateGrp_x3134:
    /*00003134*/ MOV         R0, R6 
    /*00003138*/ BL          0x0000000000003138          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_CreateGrp_x313c:
    /*0000313c*/ MOV         R0, R7 
    /*00003140*/ ADD         SP, SP, #16 
    /*00003144*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_CreateGrp_x3148:
    /*00003148*/ BL          0x00000000000001B0 
    /*0000314c*/ CMP         R0, #0 
    /*00003150*/ BEQ         VPSS_CreateGrp_x30d0
    /*00003154*/ MOVW        R7, #32769                  @ 0x8001 
    /*00003158*/ MOVT        R7, #40967                  @ 0xa007 
    /*0000315c*/ B           VPSS_CreateGrp_x313c
    VPSS_CreateGrp_x3160:
    /*00003160*/ MOV         R0, R4 
    /*00003164*/ BL          0x0000000000003164          @ VPSS_DRV_CheckGrpID [R_ARM_CALL: .text+0x1ba2c] 
    /*00003168*/ CMP         R0, #0 
    /*0000316c*/ MOVWNE      R7, #32777                  @ 0x8009 
    /*00003170*/ MOVTNE      R7, #40967                  @ 0xa007 
    /*00003174*/ BNE         VPSS_CreateGrp_x3134
    /*00003178*/ MOV         R1, R8 
    /*0000317c*/ MOV         R0, R4 
    /*00003180*/ BL          0x0000000000003180          @ VPSS_DRV_CheckGrpAttr [R_ARM_CALL: .text+0x1ba90] 
    /*00003184*/ CMP         R0, #0 
    /*00003188*/ MOVWNE      R7, #32771                  @ 0x8003 
    /*0000318c*/ MOVTNE      R7, #40967                  @ 0xa007 
    /*00003190*/ BNE         VPSS_CreateGrp_x3134
    /*00003194*/ MOV         R0, #2 
    /*00003198*/ BL          0x0000000000003198          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000319c*/ CMP         R0, #0 
    /*000031a0*/ BEQ         VPSS_CreateGrp_x3320
    /*000031a4*/ ADD         R3, R7, #48                 @ 0x30 
    /*000031a8*/ ADD         R7, R5, R7 
    /*000031ac*/ ADD         R9, R9, R3 
    /*000031b0*/ ADD         R1, SP, #8 
    /*000031b4*/ MOV         R0, R9 
    /*000031b8*/ BL          0x00000000000031B8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000031bc*/ LDR         R3, [R7, #76]               @ 0x4c 
    /*000031c0*/ MOV         R0, R9 
    /*000031c4*/ ADD         R1, SP, #8 
    /*000031c8*/ ADD         R3, R3, #1 
    /*000031cc*/ STR         R3, [R7, #76]               @ 0x4c 
    /*000031d0*/ BL          0x00000000000031D0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000031d4*/ MOV         R1, R8 
    /*000031d8*/ MOV         R0, R4 
    /*000031dc*/ BL          0x00000000000031DC          @ VPSS_DRV_CtxInit [R_ARM_CALL: .text+0x1b294] 
    /*000031e0*/ SUBS        R7, R0, #0 
    /*000031e4*/ BEQ         VPSS_CreateGrp_x3260
    /*000031e8*/ MOVW        R3, #2663                   @ 0xa67 
    /*000031ec*/ STR         R4, [SP, #4] 
    /*000031f0*/ STR         R3, [SP] 
    /*000031f4*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x950] 
    /*000031f8*/ LDR         R3, [PC, #460]              @ 0x00000000000033cc 
    /*000031fc*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x950] 
    /*00003200*/ MOV         R1, #7 
    /*00003204*/ MOV         R0, #3 
    /*00003208*/ BL          0x0000000000003208          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000320c*/ B           VPSS_CreateGrp_x3134
    VPSS_CreateGrp_x3210:
    /*00003210*/ BL          0x0000000000000174 
    /*00003214*/ CMP         R0, #0 
    /*00003218*/ MOVWNE      R7, #32774                  @ 0x8006 
    /*0000321c*/ MOVTNE      R7, #40967                  @ 0xa007 
    /*00003220*/ BNE         VPSS_CreateGrp_x313c
    /*00003224*/ B           VPSS_CreateGrp_x30c8
    VPSS_CreateGrp_x3228:
    /*00003228*/ MOV         R7, #65024                  @ 0xfe00 
    /*0000322c*/ MOVT        R7, #65535                  @ 0xffff 
    /*00003230*/ B           VPSS_CreateGrp_x313c
    VPSS_CreateGrp_x3234:
    /*00003234*/ MOVW        R3, #2609                   @ 0xa31 
    /*00003238*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d0] 
    /*0000323c*/ STR         R3, [SP] 
    /*00003240*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d0] 
    /*00003244*/ LDR         R3, [PC, #384]              @ 0x00000000000033cc 
    /*00003248*/ MOV         R1, #7 
    /*0000324c*/ MOV         R0, #3 
    /*00003250*/ MOVW        R7, #32784                  @ 0x8010 
    /*00003254*/ BL          0x0000000000003254          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003258*/ MOVT        R7, #40967                  @ 0xa007 
    /*0000325c*/ B           VPSS_CreateGrp_x313c
    VPSS_CreateGrp_x3260:
    /*00003260*/ MOV         R1, R8 
    /*00003264*/ ADD         R2, SP, #12 
    /*00003268*/ MOV         R0, R4 
    /*0000326c*/ BL          0x000000000000326C          @ VPSS_MkpCtxInit [R_ARM_CALL: .text+0x2d3c] 
    /*00003270*/ SUBS        R7, R0, #0 
    /*00003274*/ BNE         VPSS_CreateGrp_x334c
    /*00003278*/ LSL         R8, R4, #2 
    /*0000327c*/ ADD         R3, R5, R8 
    /*00003280*/ LDR         R3, [R3, #1540]             @ 0x604 
    /*00003284*/ CMP         R3, #1 
    /*00003288*/ BNE         VPSS_CreateGrp_x32e4
    VPSS_CreateGrp_x328c:
    /*0000328c*/ MOV         R0, R4 
    /*00003290*/ BL          0x0000000000003290          @ VPSS_DRV_GetOnlineVpssId [R_ARM_CALL: .text+0x262cc] 
    /*00003294*/ MOV         R8, R0 
    /*00003298*/ BL          0x0000000000003298          @ VPSS_DRV_ClkEnable [R_ARM_CALL: .text+0x1f588] 
    /*0000329c*/ MOV         R0, R8 
    /*000032a0*/ BL          0x00000000000032A0          @ VPSS_DRV_SetOutstanding [R_ARM_CALL: .text+0x1f66c] 
    VPSS_CreateGrp_x32a4:
    /*000032a4*/ MOV         R1, SL 
    /*000032a8*/ MOV         R2, #0 
    /*000032ac*/ MOV         R0, R4 
    /*000032b0*/ ADD         SL, SL, #1 
    /*000032b4*/ BL          0x00000000000032B4          @ VpssDrvSetChnEn [R_ARM_CALL: .text+0x2476c] 
    /*000032b8*/ CMP         SL, #3 
    /*000032bc*/ BNE         VPSS_CreateGrp_x32a4
    VPSS_CreateGrp_x32c0:
    /*000032c0*/ ADD         R1, SP, #8 
    /*000032c4*/ MOV         R0, R9 
    /*000032c8*/ BL          0x00000000000032C8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000032cc*/ LDR         R3, [SP, #12] 
    /*000032d0*/ ADD         R1, SP, #8 
    /*000032d4*/ MOV         R0, R9 
    /*000032d8*/ STR         R3, [R5, R4, LSL #2] 
    /*000032dc*/ BL          0x00000000000032DC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000032e0*/ B           VPSS_CreateGrp_x3134
    VPSS_CreateGrp_x32e4:
    /*000032e4*/ MOV         R0, R4 
    /*000032e8*/ BL          0x00000000000032E8          @ VPSS_DRV_IsVgsTaskGrp [R_ARM_CALL: .text+0x2636c] 
    /*000032ec*/ CMP         R0, #0 
    /*000032f0*/ BEQ         VPSS_CreateGrp_x337c
    VPSS_CreateGrp_x32f4:
    /*000032f4*/ ADD         R8, R5, R8 
    /*000032f8*/ LDR         R3, [R8, #1540]             @ 0x604 
    /*000032fc*/ CMP         R3, #1 
    /*00003300*/ BEQ         VPSS_CreateGrp_x328c
    /*00003304*/ CMP         R3, #3 
    /*00003308*/ BNE         VPSS_CreateGrp_x32c0
    /*0000330c*/ MOV         R0, #0 
    /*00003310*/ BL          0x0000000000003310          @ VPSS_DRV_ClkEnable [R_ARM_CALL: .text+0x1f588] 
    /*00003314*/ MOV         R0, #0 
    /*00003318*/ BL          0x0000000000003318          @ VPSS_DRV_SetOutstanding [R_ARM_CALL: .text+0x1f66c] 
    /*0000331c*/ B           VPSS_CreateGrp_x32c0
    VPSS_CreateGrp_x3320:
    /*00003320*/ MOVW        R3, #2646                   @ 0xa56 
    /*00003324*/ MOVW        R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x928] 
    /*00003328*/ STR         R3, [SP] 
    /*0000332c*/ MOVT        R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x928] 
    /*00003330*/ LDR         R3, [PC, #148]              @ 0x00000000000033cc 
    /*00003334*/ MOV         R1, #7 
    /*00003338*/ MOV         R0, #3 
    /*0000333c*/ MOVW        R7, #32784                  @ 0x8010 
    /*00003340*/ BL          0x0000000000003340          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003344*/ MOVT        R7, #40967                  @ 0xa007 
    /*00003348*/ B           VPSS_CreateGrp_x3134
    VPSS_CreateGrp_x334c:
    /*0000334c*/ STR         R4, [SP, #4] 
    /*00003350*/ MOVW        R3, #2670                   @ 0xa6e 
    /*00003354*/ MOV         R1, #7 
    /*00003358*/ STR         R3, [SP] 
    /*0000335c*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x950] 
    /*00003360*/ LDR         R3, [PC, #100]              @ 0x00000000000033cc 
    /*00003364*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x950] 
    /*00003368*/ MOV         R0, #3 
    /*0000336c*/ BL          0x000000000000336C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003370*/ MOV         R0, R4 
    /*00003374*/ BL          0x0000000000003374          @ VPSS_DRV_CtxDeinit [R_ARM_CALL: .text+0x1b4b8] 
    /*00003378*/ B           VPSS_CreateGrp_x3134
    VPSS_CreateGrp_x337c:
    /*0000337c*/ MOV         R0, R4 
    /*00003380*/ BL          0x0000000000003380          @ VPSS_COMM_CreatOneModel [R_ARM_CALL: .text+0x153f8] 
    /*00003384*/ CMP         R0, #0 
    /*00003388*/ BEQ         VPSS_CreateGrp_x32f4
    /*0000338c*/ MOV         R1, #7 
    /*00003390*/ MOVW        R3, #2681                   @ 0xa79 
    /*00003394*/ STR         R4, [SP, #4] 
    /*00003398*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x980] 
    /*0000339c*/ STR         R3, [SP] 
    /*000033a0*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x980] 
    /*000033a4*/ LDR         R3, [PC, #32]               @ 0x00000000000033cc 
    /*000033a8*/ MOV         R0, #3 
    /*000033ac*/ BL          0x00000000000033AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000033b0*/ MOV         R0, R4 
    /*000033b4*/ BL          0x00000000000033B4          @ VPSS_DRV_CtxDeinit [R_ARM_CALL: .text+0x1b4b8] 
    /*000033b8*/ LDR         R0, [SP, #12] 
    /*000033bc*/ MOVW        R7, #32781                  @ 0x800d 
    /*000033c0*/ BL          0x00000000000033C0          @ VPSS_MkpCtxDeinit [R_ARM_CALL: .text+0x2cf0] 
    /*000033c4*/ MOVT        R7, #40967                  @ 0xa007 
    /*000033c8*/ B           VPSS_CreateGrp_x3134
    /*000033cc*/ ANDEQ       R0, R0, R4, LSR #4 
FUNC_END VPSS_CreateGrp


FUNC_BEGIN VPSS_ReleaseOnlineVB
    /*000033d0*/ LDR         R2, [PC, #520]              @ 0x00000000000035e0 
    /*000033d4*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000033d8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000033dc*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000033e0*/ MOV         FP, #92                     @ 0x5c 
    /*000033e4*/ MOV         SL, R1 
    /*000033e8*/ MLA         FP, FP, R0, R2 
    /*000033ec*/ LDR         R3, [R3, R0, LSL #2] 
    /*000033f0*/ SUB         SP, SP, #36                 @ 0x24 
    /*000033f4*/ MOVW        R6, #16960                  @ 0x4240 
    /*000033f8*/ ADD         R1, SP, #20 
    /*000033fc*/ MOVT        R6, #15 
    /*00003400*/ MOV         R4, R3 
    /*00003404*/ ADD         FP, FP, #48                 @ 0x30 
    /*00003408*/ ADD         R7, R4, SL, LSL #2 
    /*0000340c*/ STR         R0, [SP, #8] 
    /*00003410*/ ADD         R7, R7, #16384              @ 0x4000 
    /*00003414*/ MOV         R0, FP 
    /*00003418*/ STR         R3, [SP, #12] 
    /*0000341c*/ BL          0x000000000000341C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003420*/ LDR         R3, [R7, #200]              @ 0xc8 
    /*00003424*/ ADD         R1, SP, #20 
    /*00003428*/ MOV         R0, FP 
    /*0000342c*/ CMP         R3, #3 
    /*00003430*/ MOVEQ       R3, #1 
    /*00003434*/ STREQ       R3, [R7, #200]              @ 0xc8 
    /*00003438*/ BL          0x0000000000003438          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000343c*/ ADD         R0, SP, #24 
    /*00003440*/ BL          0x0000000000003440          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00003444*/ LDR         R4, [SP, #28] 
    /*00003448*/ LDR         R2, [R7, #200]              @ 0xc8 
    /*0000344c*/ LDR         R3, [SP, #24] 
    /*00003450*/ ASR         R5, R4, #31 
    /*00003454*/ CMP         R2, #0 
    /*00003458*/ SMLAL       R4, R5, R6, R3 
    /*0000345c*/ BEQ         VPSS_ReleaseOnlineVB_x34d4
    /*00003460*/ MOVW        R8, #54463                  @ 0xd4bf 
    /*00003464*/ MOV         R9, #0 
    /*00003468*/ MOVT        R8, #1 
    /*0000346c*/ B           VPSS_ReleaseOnlineVB_x3480
    VPSS_ReleaseOnlineVB_x3470:
    /*00003470*/ BL          0x0000000000003470          @ osal_msleep [R_ARM_CALL: +0x0] 
    /*00003474*/ LDR         R3, [R7, #200]              @ 0xc8 
    /*00003478*/ CMP         R3, #0 
    /*0000347c*/ BEQ         VPSS_ReleaseOnlineVB_x34d4
    VPSS_ReleaseOnlineVB_x3480:
    /*00003480*/ ADD         R0, SP, #24 
    /*00003484*/ BL          0x0000000000003484          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00003488*/ LDR         R2, [SP, #28] 
    /*0000348c*/ LDR         R1, [SP, #24] 
    /*00003490*/ MOV         R0, #10 
    /*00003494*/ ASR         R3, R2, #31 
    /*00003498*/ SMLAL       R2, R3, R6, R1 
    /*0000349c*/ SUBS        R2, R2, R4 
    /*000034a0*/ SBC         R3, R3, R5 
    /*000034a4*/ CMP         R3, R9 
    /*000034a8*/ CMPEQ       R2, R8 
    /*000034ac*/ BLS         VPSS_ReleaseOnlineVB_x3470
    /*000034b0*/ MOVW        R3, #2782                   @ 0xade 
    /*000034b4*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b8] 
    /*000034b8*/ STR         R3, [SP] 
    /*000034bc*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b8] 
    /*000034c0*/ STR         SL, [SP, #4] 
    /*000034c4*/ MOV         R1, #7 
    /*000034c8*/ LDR         R3, [PC, #276]              @ 0x00000000000035e4 
    /*000034cc*/ MOV         R0, #3 
    /*000034d0*/ BL          0x00000000000034D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_ReleaseOnlineVB_x34d4:
    /*000034d4*/ ADD         R1, SP, #20 
    /*000034d8*/ MOV         R0, FP 
    /*000034dc*/ BL          0x00000000000034DC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000034e0*/ LDR         R2, [SP, #8] 
    /*000034e4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000034e8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000034ec*/ ADD         R4, SL, #2672               @ 0xa70 
    /*000034f0*/ ADD         R3, R3, R2, LSL #2 
    /*000034f4*/ LDR         R2, [SP, #12] 
    /*000034f8*/ ADD         R4, R4, #10 
    /*000034fc*/ LDR         R3, [R3, #1540]             @ 0x604 
    /*00003500*/ CMP         R3, #3 
    /*00003504*/ MOV         R3, #752                    @ 0x2f0 
    /*00003508*/ MLA         SL, R3, SL, R2 
    /*0000350c*/ BEQ         VPSS_ReleaseOnlineVB_x3558
    /*00003510*/ MOV         R5, #0 
    /*00003514*/ ADD         R4, R2, R4, LSL #3 
    /*00003518*/ ADD         SL, SL, #19200              @ 0x4b00 
    /*0000351c*/ MOV         R6, #10 
    /*00003520*/ MOV         R7, R5 
    VPSS_ReleaseOnlineVB_x3524:
    /*00003524*/ LDR         R0, [R4] 
    /*00003528*/ ADD         R5, R5, #1 
    /*0000352c*/ CMP         R0, #1 
    /*00003530*/ BEQ         VPSS_ReleaseOnlineVB_x35bc
    VPSS_ReleaseOnlineVB_x3534:
    /*00003534*/ CMP         R5, #2 
    /*00003538*/ ADD         R4, R4, #4 
    /*0000353c*/ ADD         SL, SL, #376                @ 0x178 
    /*00003540*/ BNE         VPSS_ReleaseOnlineVB_x3524
    VPSS_ReleaseOnlineVB_x3544:
    /*00003544*/ ADD         R1, SP, #20 
    /*00003548*/ MOV         R0, FP 
    /*0000354c*/ BL          0x000000000000354C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003550*/ ADD         SP, SP, #36                 @ 0x24 
    /*00003554*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ReleaseOnlineVB_x3558:
    /*00003558*/ ADD         R4, R2, R4, LSL #3 
    /*0000355c*/ MOV         R6, #0 
    /*00003560*/ MOV         R5, #10 
    /*00003564*/ MOV         R7, R6 
    /*00003568*/ LDR         R0, [R4] 
    /*0000356c*/ ADD         SL, SL, #19200              @ 0x4b00 
    /*00003570*/ CMP         R0, #1 
    /*00003574*/ BEQ         VPSS_ReleaseOnlineVB_x3598
    VPSS_ReleaseOnlineVB_x3578:
    /*00003578*/ ADD         R6, R6, #1 
    /*0000357c*/ ADD         R4, R4, #4 
    /*00003580*/ CMP         R6, #2 
    /*00003584*/ ADD         SL, SL, #376                @ 0x178 
    /*00003588*/ BEQ         VPSS_ReleaseOnlineVB_x3544
    /*0000358c*/ LDR         R0, [R4] 
    /*00003590*/ CMP         R0, #1 
    /*00003594*/ BNE         VPSS_ReleaseOnlineVB_x3578
    VPSS_ReleaseOnlineVB_x3598:
    /*00003598*/ BL          0x0000000000003598          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000359c*/ LDR         IP, [SL, #292]              @ 0x124 
    /*000035a0*/ LDRD        R2, [SL] 
    /*000035a4*/ STR         R5, [SP] 
    /*000035a8*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000035ac*/ MOV         R0, IP 
    /*000035b0*/ BLX         R1 
    /*000035b4*/ STR         R7, [R4] 
    /*000035b8*/ B           VPSS_ReleaseOnlineVB_x3578
    VPSS_ReleaseOnlineVB_x35bc:
    /*000035bc*/ BL          0x00000000000035BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000035c0*/ LDR         IP, [SL, #292]              @ 0x124 
    /*000035c4*/ LDRD        R2, [SL] 
    /*000035c8*/ STR         R6, [SP] 
    /*000035cc*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000035d0*/ MOV         R0, IP 
    /*000035d4*/ BLX         R1 
    /*000035d8*/ STR         R7, [R4] 
    /*000035dc*/ B           VPSS_ReleaseOnlineVB_x3534
    /*000035e0*/ ANDEQ       R0, R0, R0, ASR #32 
    /*000035e4*/ ANDEQ       R0, R0, R4, LSR R2 
FUNC_END VPSS_ReleaseOnlineVB


FUNC_BEGIN VPSS_DestroyGrp
    /*000035e8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000035ec*/ CMP         R0, #15 
    /*000035f0*/ SUB         SP, SP, #36                 @ 0x24 
    /*000035f4*/ MOVLS       R3, R0 
    /*000035f8*/ STR         R0, [SP, #20] 
    /*000035fc*/ BHI         VPSS_DestroyGrp_x3954
    VPSS_DestroyGrp_x3600:
    /*00003600*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003604*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003608*/ ADD         R4, R6, #64                 @ 0x40 
    /*0000360c*/ MOV         R0, #92                     @ 0x5c 
    /*00003610*/ MLA         R0, R0, R3, R4 
    /*00003614*/ ADD         R0, R0, #44                 @ 0x2c 
    /*00003618*/ BL          0x0000000000003618          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000361c*/ SUBS        FP, R0, #0 
    /*00003620*/ BNE         VPSS_DestroyGrp_x3a54
    /*00003624*/ LDR         R0, [SP, #20] 
    /*00003628*/ LDR         R5, [R6, R0, LSL #2] 
    /*0000362c*/ CMP         R5, #0 
    /*00003630*/ BEQ         VPSS_DestroyGrp_x3a24
    /*00003634*/ LDR         R3, [R5, #2056]             @ 0x808 
    /*00003638*/ CMP         R3, #1 
    /*0000363c*/ BEQ         VPSS_DestroyGrp_x39e4
    /*00003640*/ ADD         R3, R6, R0, LSL #2 
    /*00003644*/ LDR         R3, [R3, #1540]             @ 0x604 
    /*00003648*/ BIC         R2, R3, #2 
    /*0000364c*/ CMP         R2, #1 
    /*00003650*/ BEQ         VPSS_DestroyGrp_x3980
    VPSS_DestroyGrp_x3654:
    /*00003654*/ CMP         R3, #1 
    /*00003658*/ BEQ         VPSS_DestroyGrp_x3a14
    /*0000365c*/ CMP         R3, #3 
    /*00003660*/ BEQ         VPSS_DestroyGrp_x38fc
    VPSS_DestroyGrp_x3664:
    /*00003664*/ MOV         R7, #92                     @ 0x5c 
    /*00003668*/ ADD         R1, SP, #24 
    /*0000366c*/ MLA         R0, R7, R0, R4 
    /*00003670*/ ADD         R0, R0, #48                 @ 0x30 
    /*00003674*/ BL          0x0000000000003674          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003678*/ LDR         R0, [SP, #20] 
    /*0000367c*/ MOV         R2, #1 
    /*00003680*/ ADD         R1, SP, #24 
    /*00003684*/ MUL         R0, R7, R0 
    /*00003688*/ ADD         R3, R6, R0 
    /*0000368c*/ ADD         R0, R0, #48                 @ 0x30 
    /*00003690*/ ADD         R0, R4, R0 
    /*00003694*/ STR         R2, [R3, #64]               @ 0x40 
    /*00003698*/ BL          0x0000000000003698          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000369c*/ MOV         R0, #37                     @ 0x25 
    /*000036a0*/ LDR         R9, [SP, #20] 
    /*000036a4*/ BL          0x00000000000036A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000036a8*/ SUBS        SL, R0, #0 
    /*000036ac*/ BEQ         VPSS_DestroyGrp_x39c0
    /*000036b0*/ LDR         R3, [SL, #104]              @ 0x68 
    /*000036b4*/ CMP         R3, #0 
    /*000036b8*/ BEQ         VPSS_DestroyGrp_x39c0
    /*000036bc*/ LDR         R3, [SL, #108]              @ 0x6c 
    /*000036c0*/ CMP         R3, #0 
    /*000036c4*/ BEQ         VPSS_DestroyGrp_x39c0
    /*000036c8*/ MLA         R7, R7, R9, R4 
    /*000036cc*/ MOV         R8, #0 
    /*000036d0*/ MOVW        R3, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa4c] 
    /*000036d4*/ STR         R5, [SP, #12] 
    /*000036d8*/ MOVT        R3, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa4c] 
    /*000036dc*/ STR         R3, [SP, #16] 
    /*000036e0*/ ADD         R7, R7, #48                 @ 0x30 
    VPSS_DestroyGrp_x36e4:
    /*000036e4*/ ADD         R1, SP, #28 
    /*000036e8*/ MOV         R0, R7 
    /*000036ec*/ BL          0x00000000000036EC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000036f0*/ LDR         R3, [R6, R9, LSL #2] 
    /*000036f4*/ ADD         R1, SP, #28 
    /*000036f8*/ MOV         R0, R7 
    /*000036fc*/ ADD         R3, R3, R8, LSL #3 
    /*00003700*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00003704*/ LDR         R2, [R3, #100]              @ 0x64 
    /*00003708*/ CMP         R2, #0 
    /*0000370c*/ BNE         VPSS_DestroyGrp_x390c
    /*00003710*/ BL          0x0000000000003710          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VPSS_DestroyGrp_x3714:
    /*00003714*/ ADD         R8, R8, #1 
    /*00003718*/ CMP         R8, #3 
    /*0000371c*/ BNE         VPSS_DestroyGrp_x36e4
    /*00003720*/ LDR         R5, [SP, #12] 
    VPSS_DestroyGrp_x3724:
    /*00003724*/ MOVW        R7, #0                      @ VPSS_WaitConditionCallBackEx [R_ARM_MOVW_ABS_NC: .text+0xec] 
    /*00003728*/ MOV         R8, #92                     @ 0x5c 
    /*0000372c*/ MOVT        R7, #0                      @ VPSS_WaitConditionCallBackEx [R_ARM_MOVT_ABS: .text+0xec] 
    /*00003730*/ B           VPSS_DestroyGrp_x374c
    VPSS_DestroyGrp_x3734:
    /*00003734*/ LDR         R0, [SP, #20] 
    /*00003738*/ MLA         R0, R8, R0, R4 
    /*0000373c*/ ADD         R0, R0, #36                 @ 0x24 
    /*00003740*/ BL          0x0000000000003740          @ osal_wait_uninterruptible [R_ARM_CALL: +0x0] 
    /*00003744*/ CMP         R0, #0 
    /*00003748*/ BLT         VPSS_DestroyGrp_x3764
    VPSS_DestroyGrp_x374c:
    /*0000374c*/ ADD         R0, SP, #20 
    /*00003750*/ BL          0x0000000000003750          @ VPSS_WaitConditionCallBackEx [R_ARM_CALL: .text+0xec] 
    /*00003754*/ ADD         R2, SP, #20 
    /*00003758*/ MOV         R1, R7 
    /*0000375c*/ CMP         R0, #0 
    /*00003760*/ BEQ         VPSS_DestroyGrp_x3734
    VPSS_DestroyGrp_x3764:
    /*00003764*/ MOV         R8, R5 
    /*00003768*/ MOV         R7, #0 
    /*0000376c*/ MOV         R9, #92                     @ 0x5c 
    VPSS_DestroyGrp_x3770:
    /*00003770*/ LDR         R3, [R8, #1704]             @ 0x6a8 
    /*00003774*/ ADD         R1, SP, #24 
    /*00003778*/ ADD         R8, R8, #32 
    /*0000377c*/ CMP         R3, #0 
    /*00003780*/ BEQ         VPSS_DestroyGrp_x37c0
    /*00003784*/ LDR         R0, [SP, #20] 
    /*00003788*/ MLA         R0, R9, R0, R4 
    /*0000378c*/ ADD         R0, R0, #48                 @ 0x30 
    /*00003790*/ BL          0x0000000000003790          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003794*/ MOV         R1, R7 
    /*00003798*/ LDR         R0, [SP, #20] 
    /*0000379c*/ BL          0x000000000000379C          @ VpssCleanUserList [R_ARM_CALL: .text+0x12500] 
    /*000037a0*/ LDR         R0, [SP, #20] 
    /*000037a4*/ ADD         R1, SP, #24 
    /*000037a8*/ MLA         R0, R9, R0, R4 
    /*000037ac*/ ADD         R0, R0, #48                 @ 0x30 
    /*000037b0*/ BL          0x00000000000037B0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000037b4*/ MOV         R1, R7 
    /*000037b8*/ LDR         R0, [SP, #20] 
    /*000037bc*/ BL          0x00000000000037BC          @ VpssUserListDestroy [R_ARM_CALL: .text+0x11560] 
    VPSS_DestroyGrp_x37c0:
    /*000037c0*/ ADD         R7, R7, #1 
    /*000037c4*/ CMP         R7, #11 
    /*000037c8*/ BNE         VPSS_DestroyGrp_x3770
    /*000037cc*/ LDR         R0, [SP, #20] 
    /*000037d0*/ BL          0x00000000000037D0          @ VPSS_DRV_CtxDeinit [R_ARM_CALL: .text+0x1b4b8] 
    /*000037d4*/ LDR         R0, [SP, #20] 
    /*000037d8*/ ADD         R3, R6, R0, LSL #2 
    /*000037dc*/ LDR         R3, [R3, #1540]             @ 0x604 
    /*000037e0*/ CMP         R3, #1 
    /*000037e4*/ BEQ         VPSS_DestroyGrp_x37f8
    /*000037e8*/ BL          0x00000000000037E8          @ VPSS_DRV_IsVgsTaskGrp [R_ARM_CALL: .text+0x2636c] 
    /*000037ec*/ CMP         R0, #0 
    /*000037f0*/ LDR         R0, [SP, #20] 
    /*000037f4*/ BEQ         VPSS_DestroyGrp_x3968
    VPSS_DestroyGrp_x37f8:
    /*000037f8*/ LDR         R3, [R5, #2592]             @ 0xa20 
    /*000037fc*/ CMP         R3, #0 
    /*00003800*/ BLE         VPSS_DestroyGrp_x3864
    /*00003804*/ ADD         R7, R5, #2160               @ 0x870 
    /*00003808*/ MOV         R9, #0 
    /*0000380c*/ ADD         R7, R7, #4 
    /*00003810*/ MOV         R8, #92                     @ 0x5c 
    VPSS_DestroyGrp_x3814:
    /*00003814*/ MLA         R0, R8, R0, R4 
    /*00003818*/ ADD         R1, SP, #24 
    /*0000381c*/ ADD         R0, R0, #48                 @ 0x30 
    /*00003820*/ BL          0x0000000000003820          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003824*/ MOV         R1, R9 
    /*00003828*/ LDR         R0, [SP, #20] 
    /*0000382c*/ ADD         R9, R9, #1 
    /*00003830*/ BL          0x0000000000003830          @ VpssCleanPicQueue [R_ARM_CALL: .text+0x11068] 
    /*00003834*/ LDR         R0, [SP, #20] 
    /*00003838*/ ADD         R1, SP, #24 
    /*0000383c*/ MLA         R0, R8, R0, R4 
    /*00003840*/ ADD         R0, R0, #48                 @ 0x30 
    /*00003844*/ BL          0x0000000000003844          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003848*/ MOV         R0, R7 
    /*0000384c*/ BL          0x000000000000384C          @ VPSS_DestroyPicQueue [R_ARM_CALL: .text+0x10e24] 
    /*00003850*/ LDR         R3, [R5, #2592]             @ 0xa20 
    /*00003854*/ ADD         R7, R7, #32 
    /*00003858*/ LDR         R0, [SP, #20] 
    /*0000385c*/ CMP         R3, R9 
    /*00003860*/ BGT         VPSS_DestroyGrp_x3814
    VPSS_DestroyGrp_x3864:
    /*00003864*/ MOV         R7, #92                     @ 0x5c 
    /*00003868*/ ADD         R1, SP, #24 
    /*0000386c*/ MLA         R0, R7, R0, R4 
    /*00003870*/ ADD         R0, R0, #48                 @ 0x30 
    /*00003874*/ BL          0x0000000000003874          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003878*/ LDR         R3, [SP, #20] 
    /*0000387c*/ ADD         R1, SP, #24 
    /*00003880*/ MOV         R2, #0 
    /*00003884*/ MLA         R0, R7, R3, R4 
    /*00003888*/ STR         R2, [R6, R3, LSL #2] 
    /*0000388c*/ ADD         R0, R0, #48                 @ 0x30 
    /*00003890*/ BL          0x0000000000003890          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003894*/ LDR         R0, [SP, #20] 
    /*00003898*/ MLA         R0, R7, R0, R4 
    /*0000389c*/ ADD         R0, R0, #20 
    /*000038a0*/ BL          0x00000000000038A0          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000038a4*/ LDR         R0, [SP, #20] 
    /*000038a8*/ MLA         R0, R7, R0, R4 
    /*000038ac*/ ADD         R0, R0, #24 
    /*000038b0*/ BL          0x00000000000038B0          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000038b4*/ LDR         R0, [SP, #20] 
    /*000038b8*/ MLA         R0, R7, R0, R4 
    /*000038bc*/ ADD         R0, R0, #32 
    /*000038c0*/ BL          0x00000000000038C0          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000038c4*/ LDR         R0, [SP, #20] 
    /*000038c8*/ MLA         R0, R7, R0, R4 
    /*000038cc*/ ADD         R0, R0, #28 
    /*000038d0*/ BL          0x00000000000038D0          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000038d4*/ MOV         R0, R5 
    /*000038d8*/ BL          0x00000000000038D8          @ osal_vfree [R_ARM_CALL: +0x0] 
    VPSS_DestroyGrp_x38dc:
    /*000038dc*/ LDR         R0, [SP, #20] 
    /*000038e0*/ MOV         R3, #92                     @ 0x5c 
    /*000038e4*/ MLA         R0, R3, R0, R4 
    /*000038e8*/ ADD         R0, R0, #44                 @ 0x2c 
    /*000038ec*/ BL          0x00000000000038EC          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_DestroyGrp_x38f0:
    /*000038f0*/ MOV         R0, FP 
    /*000038f4*/ ADD         SP, SP, #36                 @ 0x24 
    /*000038f8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DestroyGrp_x38fc:
    /*000038fc*/ MOV         R0, #0 
    /*00003900*/ BL          0x0000000000003900          @ VPSS_DRV_ClkDisable [R_ARM_CALL: .text+0x1f600] 
    /*00003904*/ LDR         R0, [SP, #20] 
    /*00003908*/ B           VPSS_DestroyGrp_x3664
    VPSS_DestroyGrp_x390c:
    /*0000390c*/ LDR         R5, [R3, #96]               @ 0x60 
    /*00003910*/ MOV         R2, #0 
    /*00003914*/ STR         R2, [R3, #100]              @ 0x64 
    /*00003918*/ BL          0x0000000000003918          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000391c*/ LDR         R3, [SL, #108]              @ 0x6c 
    /*00003920*/ MOV         R0, R5 
    /*00003924*/ BLX         R3 
    /*00003928*/ CMP         R0, #0 
    /*0000392c*/ BEQ         VPSS_DestroyGrp_x3714
    /*00003930*/ MOVW        R2, #2866                   @ 0xb32 
    /*00003934*/ STR         R5, [SP, #4] 
    /*00003938*/ STR         R2, [SP] 
    /*0000393c*/ MOV         R1, #7 
    /*00003940*/ LDR         R3, [PC, #280]              @ 0x0000000000003a60 
    /*00003944*/ MOV         R0, #3 
    /*00003948*/ LDR         R2, [SP, #16] 
    /*0000394c*/ BL          0x000000000000394C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003950*/ B           VPSS_DestroyGrp_x3714
    VPSS_DestroyGrp_x3954:
    /*00003954*/ BL          0x00000000000001B0 
    /*00003958*/ CMP         R0, #0 
    /*0000395c*/ BNE         VPSS_DestroyGrp_x3974
    /*00003960*/ LDR         R3, [SP, #20] 
    /*00003964*/ B           VPSS_DestroyGrp_x3600
    VPSS_DestroyGrp_x3968:
    /*00003968*/ BL          0x0000000000003968          @ VPSS_COMM_DestroyOneModel [R_ARM_CALL: .text+0x15424] 
    /*0000396c*/ LDR         R0, [SP, #20] 
    /*00003970*/ B           VPSS_DestroyGrp_x37f8
    VPSS_DestroyGrp_x3974:
    /*00003974*/ MOVW        FP, #32769                  @ 0x8001 
    /*00003978*/ MOVT        FP, #40967                  @ 0xa007 
    /*0000397c*/ B           VPSS_DestroyGrp_x38f0
    VPSS_DestroyGrp_x3980:
    /*00003980*/ ADD         R8, R5, #28416              @ 0x6f00 
    /*00003984*/ MOV         R7, FP 
    /*00003988*/ ADD         R8, R8, #124                @ 0x7c 
    VPSS_DestroyGrp_x398c:
    /*0000398c*/ LDR         R3, [R8], #4 
    /*00003990*/ CMP         R3, #0 
    /*00003994*/ BNE         VPSS_DestroyGrp_x39b0
    VPSS_DestroyGrp_x3998:
    /*00003998*/ ADD         R7, R7, #1 
    /*0000399c*/ CMP         R7, #3 
    /*000039a0*/ BNE         VPSS_DestroyGrp_x398c
    /*000039a4*/ ADD         R3, R6, R0, LSL #2 
    /*000039a8*/ LDR         R3, [R3, #1540]             @ 0x604 
    /*000039ac*/ B           VPSS_DestroyGrp_x3654
    VPSS_DestroyGrp_x39b0:
    /*000039b0*/ MOV         R1, R7 
    /*000039b4*/ BL          0x00000000000039B4          @ VPSS_ReleaseOnlineVB [R_ARM_CALL: .text+0x33d0] 
    /*000039b8*/ LDR         R0, [SP, #20] 
    /*000039bc*/ B           VPSS_DestroyGrp_x3998
    VPSS_DestroyGrp_x39c0:
    /*000039c0*/ MOV         R1, #7 
    /*000039c4*/ MOVW        R3, #2843                   @ 0xb1b 
    /*000039c8*/ MOV         R0, R1 
    /*000039cc*/ STR         R3, [SP] 
    /*000039d0*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa24] 
    /*000039d4*/ LDR         R3, [PC, #132]              @ 0x0000000000003a60 
    /*000039d8*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa24] 
    /*000039dc*/ BL          0x00000000000039DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000039e0*/ B           VPSS_DestroyGrp_x3724
    VPSS_DestroyGrp_x39e4:
    /*000039e4*/ STR         R0, [SP, #4] 
    /*000039e8*/ MOVW        R3, #2897                   @ 0xb51 
    /*000039ec*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9f0] 
    /*000039f0*/ STR         R3, [SP] 
    /*000039f4*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9f0] 
    /*000039f8*/ LDR         R3, [PC, #100]              @ 0x0000000000003a64 
    /*000039fc*/ MOV         R1, #7 
    /*00003a00*/ MOV         R0, #3 
    /*00003a04*/ MOVW        FP, #32777                  @ 0x8009 
    /*00003a08*/ BL          0x0000000000003A08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003a0c*/ MOVT        FP, #40967                  @ 0xa007 
    /*00003a10*/ B           VPSS_DestroyGrp_x38dc
    VPSS_DestroyGrp_x3a14:
    /*00003a14*/ BL          0x0000000000003A14          @ VPSS_DRV_GetOnlineVpssId [R_ARM_CALL: .text+0x262cc] 
    /*00003a18*/ BL          0x0000000000003A18          @ VPSS_DRV_ClkDisable [R_ARM_CALL: .text+0x1f600] 
    /*00003a1c*/ LDR         R0, [SP, #20] 
    /*00003a20*/ B           VPSS_DestroyGrp_x3664
    VPSS_DestroyGrp_x3a24:
    /*00003a24*/ STR         R0, [SP, #4] 
    /*00003a28*/ MOVW        R3, #2890                   @ 0xb4a 
    /*00003a2c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00003a30*/ STR         R3, [SP] 
    /*00003a34*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00003a38*/ LDR         R3, [PC, #36]               @ 0x0000000000003a64 
    /*00003a3c*/ MOV         R1, #7 
    /*00003a40*/ MOV         R0, #3 
    /*00003a44*/ MOVW        FP, #32773                  @ 0x8005 
    /*00003a48*/ BL          0x0000000000003A48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003a4c*/ MOVT        FP, #40967                  @ 0xa007 
    /*00003a50*/ B           VPSS_DestroyGrp_x38dc
    VPSS_DestroyGrp_x3a54:
    /*00003a54*/ MOV         FP, #65024                  @ 0xfe00 
    /*00003a58*/ MOVT        FP, #65535                  @ 0xffff 
    /*00003a5c*/ B           VPSS_DestroyGrp_x38f0
    /*00003a60*/ ANDEQ       R0, R0, IP, ASR R2 
    /*00003a64*/ ANDEQ       R0, R0, IP, ASR #4 
FUNC_END VPSS_DestroyGrp


FUNC_BEGIN VPSS_ResetGrp
    /*00003a68*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00003a6c*/ CMP         R0, #15 
    /*00003a70*/ SUB         SP, SP, #28 
    /*00003a74*/ MOVLS       R3, R0 
    /*00003a78*/ STR         R0, [SP, #12] 
    /*00003a7c*/ BHI         VPSS_ResetGrp_x3c6c
    VPSS_ResetGrp_x3a80:
    /*00003a80*/ MOVW        SL, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003a84*/ MOVT        SL, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003a88*/ ADD         R7, SL, #64                 @ 0x40 
    /*00003a8c*/ MOV         FP, #92                     @ 0x5c 
    /*00003a90*/ MLA         R0, FP, R3, R7 
    /*00003a94*/ ADD         R0, R0, #44                 @ 0x2c 
    /*00003a98*/ BL          0x0000000000003A98          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00003a9c*/ SUBS        R4, R0, #0 
    /*00003aa0*/ BNE         VPSS_ResetGrp_x3c88
    /*00003aa4*/ LDR         R0, [SP, #12] 
    /*00003aa8*/ LDR         R6, [SL, R0, LSL #2] 
    /*00003aac*/ CMP         R6, #0 
    /*00003ab0*/ BEQ         VPSS_ResetGrp_x3cb8
    /*00003ab4*/ MLA         R0, FP, R0, R7 
    /*00003ab8*/ ADD         R1, SP, #20 
    /*00003abc*/ ADD         R0, R0, #48                 @ 0x30 
    /*00003ac0*/ BL          0x0000000000003AC0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003ac4*/ LDR         R0, [SP, #12] 
    /*00003ac8*/ MUL         R0, FP, R0 
    /*00003acc*/ ADD         R3, SL, R0 
    /*00003ad0*/ ADD         R0, R0, #48                 @ 0x30 
    /*00003ad4*/ LDR         R2, [R3, #64]               @ 0x40 
    /*00003ad8*/ CMP         R2, #0 
    /*00003adc*/ BNE         VPSS_ResetGrp_x3c94
    /*00003ae0*/ LDR         R2, [R6, #2056]             @ 0x808 
    /*00003ae4*/ ADD         R1, SP, #20 
    /*00003ae8*/ ADD         R0, R7, R0 
    /*00003aec*/ STR         R4, [R6, #2056]             @ 0x808 
    /*00003af0*/ ADD         R5, SP, #24 
    /*00003af4*/ MOVW        R8, #0                      @ VPSS_WaitConditionCallBackEx [R_ARM_MOVW_ABS_NC: .text+0xec] 
    /*00003af8*/ STR         R2, [SP, #8] 
    /*00003afc*/ MOV         R2, #1 
    /*00003b00*/ STR         R2, [R3, #68]               @ 0x44 
    /*00003b04*/ MOVT        R8, #0                      @ VPSS_WaitConditionCallBackEx [R_ARM_MOVT_ABS: .text+0xec] 
    /*00003b08*/ BL          0x0000000000003B08          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003b0c*/ LDR         R0, [SP, #12] 
    /*00003b10*/ MOV         R9, FP 
    /*00003b14*/ MLA         R0, FP, R0, R7 
    /*00003b18*/ ADD         R0, R0, #20 
    /*00003b1c*/ BL          0x0000000000003B1C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00003b20*/ LDR         R0, [SP, #12] 
    /*00003b24*/ MLA         R0, FP, R0, R7 
    /*00003b28*/ ADD         R0, R0, #24 
    /*00003b2c*/ BL          0x0000000000003B2C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00003b30*/ LDR         R0, [SP, #12] 
    /*00003b34*/ MLA         R0, FP, R0, R7 
    /*00003b38*/ ADD         R0, R0, #32 
    /*00003b3c*/ BL          0x0000000000003B3C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00003b40*/ LDR         R0, [R5, #-12]! 
    /*00003b44*/ MLA         R0, FP, R0, R7 
    /*00003b48*/ ADD         R0, R0, #28 
    /*00003b4c*/ BL          0x0000000000003B4C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00003b50*/ B           VPSS_ResetGrp_x3b6c
    VPSS_ResetGrp_x3b54:
    /*00003b54*/ LDR         R0, [SP, #12] 
    /*00003b58*/ MLA         R0, R9, R0, R7 
    /*00003b5c*/ ADD         R0, R0, #36                 @ 0x24 
    /*00003b60*/ BL          0x0000000000003B60          @ osal_wait_uninterruptible [R_ARM_CALL: +0x0] 
    /*00003b64*/ CMP         R0, #0 
    /*00003b68*/ BLT         VPSS_ResetGrp_x3b84
    VPSS_ResetGrp_x3b6c:
    /*00003b6c*/ MOV         R0, R5 
    /*00003b70*/ BL          0x0000000000003B70          @ VPSS_WaitConditionCallBackEx [R_ARM_CALL: .text+0xec] 
    /*00003b74*/ MOV         R2, R5 
    /*00003b78*/ MOV         R1, R8 
    /*00003b7c*/ CMP         R0, #0 
    /*00003b80*/ BEQ         VPSS_ResetGrp_x3b54
    VPSS_ResetGrp_x3b84:
    /*00003b84*/ LDR         R0, [SP, #12] 
    /*00003b88*/ MOV         R3, #92                     @ 0x5c 
    /*00003b8c*/ ADD         R1, SP, #20 
    /*00003b90*/ MLA         R0, R3, R0, R7 
    /*00003b94*/ ADD         R0, R0, #48                 @ 0x30 
    /*00003b98*/ BL          0x0000000000003B98          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003b9c*/ LDR         R3, [R6, #2592]             @ 0xa20 
    /*00003ba0*/ CMP         R3, #0 
    /*00003ba4*/ MOVGT       R5, #0 
    /*00003ba8*/ BLE         VPSS_ResetGrp_x3bc8
    VPSS_ResetGrp_x3bac:
    /*00003bac*/ MOV         R1, R5 
    /*00003bb0*/ LDR         R0, [SP, #12] 
    /*00003bb4*/ BL          0x0000000000003BB4          @ VpssCleanPicQueue [R_ARM_CALL: .text+0x11068] 
    /*00003bb8*/ LDR         R3, [R6, #2592]             @ 0xa20 
    /*00003bbc*/ ADD         R5, R5, #1 
    /*00003bc0*/ CMP         R3, R5 
    /*00003bc4*/ BGT         VPSS_ResetGrp_x3bac
    VPSS_ResetGrp_x3bc8:
    /*00003bc8*/ MOV         R5, R6 
    VPSS_ResetGrp_x3bcc:
    /*00003bcc*/ LDR         R3, [R5, #1704]             @ 0x6a8 
    /*00003bd0*/ MOV         R1, R4 
    /*00003bd4*/ ADD         R5, R5, #32 
    /*00003bd8*/ ADD         R4, R4, #1 
    /*00003bdc*/ CMP         R3, #0 
    /*00003be0*/ BEQ         VPSS_ResetGrp_x3bec
    /*00003be4*/ LDR         R0, [SP, #12] 
    /*00003be8*/ BL          0x0000000000003BE8          @ VpssCleanUserList [R_ARM_CALL: .text+0x12500] 
    VPSS_ResetGrp_x3bec:
    /*00003bec*/ CMP         R4, #11 
    /*00003bf0*/ BNE         VPSS_ResetGrp_x3bcc
    /*00003bf4*/ ADD         R3, R6, #28672              @ 0x7000 
    /*00003bf8*/ MOV         R2, #1 
    /*00003bfc*/ MOV         R4, #0 
    /*00003c00*/ STR         R2, [R6, #2072]             @ 0x818 
    /*00003c04*/ STR         R2, [R6, #2608]             @ 0xa30 
    /*00003c08*/ MOV         R5, #92                     @ 0x5c 
    /*00003c0c*/ STR         R4, [R6, #2604]             @ 0xa2c 
    /*00003c10*/ LDR         R0, [SP, #12] 
    /*00003c14*/ STR         R4, [R3, #88]               @ 0x58 
    /*00003c18*/ STR         R4, [R3, #92]               @ 0x5c 
    /*00003c1c*/ BL          0x0000000000003C1C          @ VPSS_DRV_ResetGrp [R_ARM_CALL: .text+0x25f7c] 
    /*00003c20*/ LDR         R0, [SP, #12] 
    /*00003c24*/ LDR         R3, [SP, #8] 
    /*00003c28*/ ADD         R1, SP, #20 
    /*00003c2c*/ MUL         R0, R5, R0 
    /*00003c30*/ STR         R3, [R6, #2056]             @ 0x808 
    /*00003c34*/ MOV         R3, #60                     @ 0x3c 
    /*00003c38*/ STR         R3, [R6, #2128]             @ 0x850 
    /*00003c3c*/ ADD         SL, SL, R0 
    /*00003c40*/ ADD         R0, R0, #48                 @ 0x30 
    /*00003c44*/ ADD         R0, R7, R0 
    /*00003c48*/ STR         R4, [SL, #68]               @ 0x44 
    /*00003c4c*/ BL          0x0000000000003C4C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003c50*/ LDR         R0, [SP, #12] 
    /*00003c54*/ MLA         R0, R5, R0, R7 
    /*00003c58*/ ADD         R0, R0, #44                 @ 0x2c 
    /*00003c5c*/ BL          0x0000000000003C5C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00003c60*/ MOV         R0, R4 
    VPSS_ResetGrp_x3c64:
    /*00003c64*/ ADD         SP, SP, #28 
    /*00003c68*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ResetGrp_x3c6c:
    /*00003c6c*/ BL          0x00000000000001B0 
    /*00003c70*/ CMP         R0, #0 
    /*00003c74*/ LDREQ       R3, [SP, #12] 
    /*00003c78*/ BEQ         VPSS_ResetGrp_x3a80
    /*00003c7c*/ MOVW        R0, #32769                  @ 0x8001 
    /*00003c80*/ MOVT        R0, #40967                  @ 0xa007 
    /*00003c84*/ B           VPSS_ResetGrp_x3c64
    VPSS_ResetGrp_x3c88:
    /*00003c88*/ MOV         R0, #65024                  @ 0xfe00 
    /*00003c8c*/ MOVT        R0, #65535                  @ 0xffff 
    /*00003c90*/ B           VPSS_ResetGrp_x3c64
    VPSS_ResetGrp_x3c94:
    /*00003c94*/ ADD         R1, SP, #20 
    /*00003c98*/ ADD         R0, R7, R0 
    /*00003c9c*/ BL          0x0000000000003C9C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003ca0*/ LDR         R0, [SP, #12] 
    /*00003ca4*/ MLA         R0, FP, R0, R7 
    /*00003ca8*/ ADD         R0, R0, #44                 @ 0x2c 
    /*00003cac*/ BL          0x0000000000003CAC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00003cb0*/ MVN         R0, #0 
    /*00003cb4*/ B           VPSS_ResetGrp_x3c64
    VPSS_ResetGrp_x3cb8:
    /*00003cb8*/ STR         R0, [SP, #4] 
    /*00003cbc*/ MOVW        R3, #3013                   @ 0xbc5 
    /*00003cc0*/ MOV         R1, #7 
    /*00003cc4*/ STR         R3, [SP] 
    /*00003cc8*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00003ccc*/ LDR         R3, [PC, #36]               @ 0x0000000000003cf8 
    /*00003cd0*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00003cd4*/ MOV         R0, #3 
    /*00003cd8*/ BL          0x0000000000003CD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003cdc*/ LDR         R0, [SP, #12] 
    /*00003ce0*/ MLA         R0, FP, R0, R7 
    /*00003ce4*/ ADD         R0, R0, #44                 @ 0x2c 
    /*00003ce8*/ BL          0x0000000000003CE8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00003cec*/ MOVW        R0, #32773                  @ 0x8005 
    /*00003cf0*/ MOVT        R0, #40967                  @ 0xa007 
    /*00003cf4*/ B           VPSS_ResetGrp_x3c64
    /*00003cf8*/ ANDEQ       R0, R0, R4, ROR R2 
FUNC_END VPSS_ResetGrp


FUNC_BEGIN VPSS_SysResetGrp
    VPSS_SysResetGrp_x3cfc:
    /*00003cfc*/ B           VPSS_SysResetGrp_x3cfc      @ VPSS_ResetGrp [R_ARM_JUMP24: .text+0x3a68] 
FUNC_END VPSS_SysResetGrp


FUNC_BEGIN VpssIsLowDelayChn
    /*00003d00*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003d04*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003d08*/ PUSH        {R4, LR} 
    /*00003d0c*/ SUB         SP, SP, #8 
    /*00003d10*/ LDR         R4, [R3, R0, LSL #2] 
    /*00003d14*/ CMP         R4, #0 
    /*00003d18*/ BEQ         VpssIsLowDelayChn_x3d5c
    /*00003d1c*/ ADD         R3, R3, R0, LSL #2 
    /*00003d20*/ LDR         R3, [R3, #1540]             @ 0x604 
    /*00003d24*/ CMP         R3, #1 
    /*00003d28*/ BEQ         VpssIsLowDelayChn_x3d38
    VpssIsLowDelayChn_x3d2c:
    /*00003d2c*/ MOV         R0, #0 
    VpssIsLowDelayChn_x3d30:
    /*00003d30*/ ADD         SP, SP, #8 
    /*00003d34*/ POP         {R4, PC} 
    VpssIsLowDelayChn_x3d38:
    /*00003d38*/ CMP         R1, #2 
    /*00003d3c*/ BHI         VpssIsLowDelayChn_x3d2c
    /*00003d40*/ LDR         R3, [R4, #2088]             @ 0x828 
    /*00003d44*/ CMP         R1, R3 
    /*00003d48*/ BNE         VpssIsLowDelayChn_x3d2c
    /*00003d4c*/ LDR         R0, [R4, #2092]             @ 0x82c 
    /*00003d50*/ ADDS        R0, R0, #0 
    /*00003d54*/ MOVNE       R0, #1 
    /*00003d58*/ B           VpssIsLowDelayChn_x3d30
    VpssIsLowDelayChn_x3d5c:
    /*00003d5c*/ MOVW        R3, #3206                   @ 0xc86 
    /*00003d60*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdc] 
    /*00003d64*/ STR         R3, [SP] 
    /*00003d68*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdc] 
    /*00003d6c*/ LDR         R3, [PC, #16]               @ 0x0000000000003d84 
    /*00003d70*/ MOV         R1, #7 
    /*00003d74*/ MOV         R0, #3 
    /*00003d78*/ BL          0x0000000000003D78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003d7c*/ MOV         R0, R4 
    /*00003d80*/ B           VpssIsLowDelayChn_x3d30
    /*00003d84*/ ANDEQ       R0, R0, R4, LSL #5 
FUNC_END VpssIsLowDelayChn


FUNC_BEGIN VPSS_GetRegionLumaTimeout
    /*00003d88*/ CMP         R0, #15 
    /*00003d8c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00003d90*/ MOV         R5, R0 
    /*00003d94*/ SUB         SP, SP, #76                 @ 0x4c 
    /*00003d98*/ MOV         SL, R1 
    /*00003d9c*/ MOV         R8, R2 
    /*00003da0*/ MOV         FP, R3 
    /*00003da4*/ BHI         VPSS_GetRegionLumaTimeout_x3f14
    VPSS_GetRegionLumaTimeout_x3da8:
    /*00003da8*/ CMP         SL, #10 
    /*00003dac*/ BHI         VPSS_GetRegionLumaTimeout_x3f2c
    VPSS_GetRegionLumaTimeout_x3db0:
    /*00003db0*/ CMP         R8, #0 
    /*00003db4*/ BEQ         VPSS_GetRegionLumaTimeout_x3fe0
    VPSS_GetRegionLumaTimeout_x3db8:
    /*00003db8*/ CMP         FP, #0 
    /*00003dbc*/ BEQ         VPSS_GetRegionLumaTimeout_x4000
    VPSS_GetRegionLumaTimeout_x3dc0:
    /*00003dc0*/ LDR         R3, [R8, #4] 
    /*00003dc4*/ CMP         R3, #0 
    /*00003dc8*/ BEQ         VPSS_GetRegionLumaTimeout_x4010
    VPSS_GetRegionLumaTimeout_x3dcc:
    /*00003dcc*/ CMP         SL, #2 
    /*00003dd0*/ BHI         VPSS_GetRegionLumaTimeout_x4064
    /*00003dd4*/ MOV         R4, #92                     @ 0x5c 
    /*00003dd8*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003ddc*/ MUL         R4, R4, R5 
    /*00003de0*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003de4*/ ADD         R3, R7, #64                 @ 0x40 
    /*00003de8*/ ADD         R6, R4, #40                 @ 0x28 
    /*00003dec*/ ADD         R6, R3, R6 
    /*00003df0*/ MOV         R0, R6 
    /*00003df4*/ BL          0x0000000000003DF4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00003df8*/ CMP         R0, #0 
    /*00003dfc*/ BNE         VPSS_GetRegionLumaTimeout_x3f88
    /*00003e00*/ LDR         R2, [SP, #112]              @ 0x70 
    /*00003e04*/ MOV         R1, FP 
    /*00003e08*/ MOV         R0, R8 
    /*00003e0c*/ BL          0x0000000000003E0C          @ VPSS_DRV_CheckLuma [R_ARM_CALL: .text+0x1bf5c] 
    /*00003e10*/ SUBS        R9, R0, #0 
    /*00003e14*/ BNE         VPSS_GetRegionLumaTimeout_x3f00
    /*00003e18*/ LDR         R2, [PC, #1408]             @ 0x00000000000043a0 
    /*00003e1c*/ ADD         R3, R4, #44                 @ 0x2c 
    /*00003e20*/ ADD         R3, R2, R3 
    /*00003e24*/ STR         R3, [SP, #16] 
    /*00003e28*/ MOV         R0, R3 
    /*00003e2c*/ BL          0x0000000000003E2C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00003e30*/ CMP         R0, #0 
    /*00003e34*/ BNE         VPSS_GetRegionLumaTimeout_x3f88
    /*00003e38*/ LDR         R2, [PC, #1376]             @ 0x00000000000043a0 
    /*00003e3c*/ ADD         R3, R4, #48                 @ 0x30 
    /*00003e40*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00003e44*/ ADD         R3, R2, R3 
    /*00003e48*/ STR         R3, [SP, #20] 
    /*00003e4c*/ MOV         R0, R3 
    /*00003e50*/ BL          0x0000000000003E50          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003e54*/ LDR         R3, [R7, R5, LSL #2] 
    /*00003e58*/ CMP         R3, #0 
    /*00003e5c*/ BEQ         VPSS_GetRegionLumaTimeout_x3f9c
    /*00003e60*/ MOVW        R2, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00003e64*/ MOVT        R2, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00003e68*/ STR         R2, [SP, #24] 
    /*00003e6c*/ LDR         R2, [R2, R5, LSL #2] 
    /*00003e70*/ CMP         R2, #0 
    /*00003e74*/ BEQ         VPSS_GetRegionLumaTimeout_x3f9c
    /*00003e78*/ ADD         R2, R7, R4 
    /*00003e7c*/ LDR         R1, [R2, #64]               @ 0x40 
    /*00003e80*/ CMP         R1, #0 
    /*00003e84*/ BNE         VPSS_GetRegionLumaTimeout_x3f44
    /*00003e88*/ LDR         R2, [R2, #68]               @ 0x44 
    /*00003e8c*/ CMP         R2, #0 
    /*00003e90*/ BNE         VPSS_GetRegionLumaTimeout_x3f44
    /*00003e94*/ ADD         R2, SL, #7104               @ 0x1bc0 
    /*00003e98*/ ADD         R2, R2, #30 
    /*00003e9c*/ ADD         R3, R3, R2, LSL #2 
    /*00003ea0*/ LDR         R3, [R3, #4] 
    /*00003ea4*/ CMP         R3, #0 
    /*00003ea8*/ BEQ         VPSS_GetRegionLumaTimeout_x4020
    /*00003eac*/ MOV         R1, SL 
    /*00003eb0*/ MOV         R0, R5 
    /*00003eb4*/ BL          0x0000000000003EB4          @ VpssIsLowDelayChn [R_ARM_CALL: .text+0x3d00] 
    /*00003eb8*/ CMP         R0, #0 
    /*00003ebc*/ BEQ         VPSS_GetRegionLumaTimeout_x4094
    /*00003ec0*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00003ec4*/ LDR         R0, [SP, #20] 
    /*00003ec8*/ BL          0x0000000000003EC8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003ecc*/ LDR         R0, [SP, #16] 
    /*00003ed0*/ BL          0x0000000000003ED0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00003ed4*/ MOVW        R3, #3293                   @ 0xcdd 
    /*00003ed8*/ STMIB       SP, {R5, SL} 
    /*00003edc*/ MOVW        R2, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaf0] 
    /*00003ee0*/ STR         R3, [SP] 
    /*00003ee4*/ MOVT        R2, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaf0] 
    /*00003ee8*/ LDR         R3, [PC, #1204]             @ 0x00000000000043a4 
    /*00003eec*/ MOV         R1, #7 
    /*00003ef0*/ MOV         R0, #3 
    /*00003ef4*/ MOVW        R9, #32776                  @ 0x8008 
    /*00003ef8*/ BL          0x0000000000003EF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003efc*/ MOVT        R9, #40967                  @ 0xa007 
    VPSS_GetRegionLumaTimeout_x3f00:
    /*00003f00*/ MOV         R0, R6 
    /*00003f04*/ BL          0x0000000000003F04          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_GetRegionLumaTimeout_x3f08:
    /*00003f08*/ MOV         R0, R9 
    /*00003f0c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00003f10*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_GetRegionLumaTimeout_x3f14:
    /*00003f14*/ BL          0x00000000000001B0 
    /*00003f18*/ CMP         R0, #0 
    /*00003f1c*/ BEQ         VPSS_GetRegionLumaTimeout_x3da8
    /*00003f20*/ MOVW        R9, #32769                  @ 0x8001 
    /*00003f24*/ MOVT        R9, #40967                  @ 0xa007 
    /*00003f28*/ B           VPSS_GetRegionLumaTimeout_x3f08
    VPSS_GetRegionLumaTimeout_x3f2c:
    /*00003f2c*/ BL          0x00000000000001EC 
    /*00003f30*/ CMP         R0, #0 
    /*00003f34*/ BEQ         VPSS_GetRegionLumaTimeout_x3db0
    /*00003f38*/ MOVW        R9, #32770                  @ 0x8002 
    /*00003f3c*/ MOVT        R9, #40967                  @ 0xa007 
    /*00003f40*/ B           VPSS_GetRegionLumaTimeout_x3f08
    VPSS_GetRegionLumaTimeout_x3f44:
    /*00003f44*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00003f48*/ LDR         R0, [SP, #20] 
    /*00003f4c*/ BL          0x0000000000003F4C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003f50*/ LDR         R0, [SP, #16] 
    /*00003f54*/ BL          0x0000000000003F54          @ osal_up [R_ARM_CALL: +0x0] 
    /*00003f58*/ MOVW        R3, #3275                   @ 0xccb 
    /*00003f5c*/ STR         R5, [SP, #4] 
    /*00003f60*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x480] 
    /*00003f64*/ STR         R3, [SP] 
    /*00003f68*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x480] 
    /*00003f6c*/ LDR         R3, [PC, #1072]             @ 0x00000000000043a4 
    /*00003f70*/ MOV         R1, #7 
    /*00003f74*/ MOV         R0, #3 
    /*00003f78*/ MOVW        R9, #32784                  @ 0x8010 
    /*00003f7c*/ BL          0x0000000000003F7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003f80*/ MOVT        R9, #40967                  @ 0xa007 
    /*00003f84*/ B           VPSS_GetRegionLumaTimeout_x3f00
    VPSS_GetRegionLumaTimeout_x3f88:
    /*00003f88*/ MOV         R9, #65024                  @ 0xfe00 
    /*00003f8c*/ MOVT        R9, #65535                  @ 0xffff 
    /*00003f90*/ MOV         R0, R9 
    /*00003f94*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00003f98*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_GetRegionLumaTimeout_x3f9c:
    /*00003f9c*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00003fa0*/ LDR         R0, [SP, #20] 
    /*00003fa4*/ BL          0x0000000000003FA4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003fa8*/ LDR         R0, [SP, #16] 
    /*00003fac*/ BL          0x0000000000003FAC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00003fb0*/ MOVW        R3, #3266                   @ 0xcc2 
    /*00003fb4*/ STR         R5, [SP, #4] 
    /*00003fb8*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00003fbc*/ STR         R3, [SP] 
    /*00003fc0*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00003fc4*/ LDR         R3, [PC, #984]              @ 0x00000000000043a4 
    /*00003fc8*/ MOV         R1, #7 
    /*00003fcc*/ MOV         R0, #3 
    /*00003fd0*/ MOVW        R9, #32773                  @ 0x8005 
    /*00003fd4*/ BL          0x0000000000003FD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003fd8*/ MOVT        R9, #40967                  @ 0xa007 
    /*00003fdc*/ B           VPSS_GetRegionLumaTimeout_x3f00
    VPSS_GetRegionLumaTimeout_x3fe0:
    /*00003fe0*/ BL          0x0000000000000174 
    /*00003fe4*/ CMP         R0, #0 
    /*00003fe8*/ BEQ         VPSS_GetRegionLumaTimeout_x3db8
    VPSS_GetRegionLumaTimeout_x3fec:
    /*00003fec*/ MOVW        R9, #32774                  @ 0x8006 
    /*00003ff0*/ MOVT        R9, #40967                  @ 0xa007 
    /*00003ff4*/ MOV         R0, R9 
    /*00003ff8*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00003ffc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_GetRegionLumaTimeout_x4000:
    /*00004000*/ BL          0x0000000000000174 
    /*00004004*/ CMP         R0, #0 
    /*00004008*/ BNE         VPSS_GetRegionLumaTimeout_x3fec
    /*0000400c*/ B           VPSS_GetRegionLumaTimeout_x3dc0
    VPSS_GetRegionLumaTimeout_x4010:
    /*00004010*/ BL          0x0000000000000174 
    /*00004014*/ CMP         R0, #0 
    /*00004018*/ BNE         VPSS_GetRegionLumaTimeout_x3fec
    /*0000401c*/ B           VPSS_GetRegionLumaTimeout_x3dcc
    VPSS_GetRegionLumaTimeout_x4020:
    /*00004020*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00004024*/ LDR         R0, [SP, #20] 
    /*00004028*/ BL          0x0000000000004028          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000402c*/ LDR         R0, [SP, #16] 
    /*00004030*/ BL          0x0000000000004030          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004034*/ MOVW        R3, #3284                   @ 0xcd4 
    /*00004038*/ STMIB       SP, {R5, SL} 
    /*0000403c*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xab8] 
    /*00004040*/ STR         R3, [SP] 
    /*00004044*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0xab8] 
    /*00004048*/ LDR         R3, [PC, #852]              @ 0x00000000000043a4 
    /*0000404c*/ MOV         R1, #7 
    /*00004050*/ MOV         R0, #3 
    /*00004054*/ MOVW        R9, #32777                  @ 0x8009 
    /*00004058*/ BL          0x0000000000004058          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000405c*/ MOVT        R9, #40967                  @ 0xa007 
    /*00004060*/ B           VPSS_GetRegionLumaTimeout_x3f00
    VPSS_GetRegionLumaTimeout_x4064:
    /*00004064*/ MOVW        R3, #3246                   @ 0xcae 
    /*00004068*/ STR         SL, [SP, #4] 
    /*0000406c*/ STR         R3, [SP] 
    /*00004070*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa84] 
    /*00004074*/ LDR         R3, [PC, #808]              @ 0x00000000000043a4 
    /*00004078*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa84] 
    /*0000407c*/ MOV         R1, #7 
    /*00004080*/ MOV         R0, #3 
    /*00004084*/ MOVW        R9, #32770                  @ 0x8002 
    /*00004088*/ BL          0x0000000000004088          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000408c*/ MOVT        R9, #40967                  @ 0xa007 
    /*00004090*/ B           VPSS_GetRegionLumaTimeout_x3f08
    VPSS_GetRegionLumaTimeout_x4094:
    /*00004094*/ ADD         R1, SP, #40                 @ 0x28 
    /*00004098*/ MOV         R0, R5 
    /*0000409c*/ BL          0x000000000000409C          @ VPSS_DRV_GetLumaAttr [R_ARM_CALL: .text+0x1a560] 
    /*000040a0*/ MOV         R2, #23 
    /*000040a4*/ MLA         R2, R2, R5, SL 
    /*000040a8*/ LDR         R1, [SP, #40]               @ 0x28 
    /*000040ac*/ MOV         IP, #1 
    /*000040b0*/ MOV         R3, #0 
    /*000040b4*/ ADD         R0, R1, #4 
    /*000040b8*/ STR         R3, [SP, #32] 
    /*000040bc*/ ADD         R2, R2, #14 
    /*000040c0*/ STR         FP, [R1, #1032]             @ 0x408 
    /*000040c4*/ STR         SL, [R1, #1040]             @ 0x410 
    /*000040c8*/ STR         IP, [R1, #1036]             @ 0x40c 
    /*000040cc*/ ADD         R2, R7, R2, LSL #2 
    /*000040d0*/ LDR         IP, [R8] 
    /*000040d4*/ STR         IP, [R1, #1028]             @ 0x404 
    /*000040d8*/ STR         R3, [R2, #64]               @ 0x40 
    /*000040dc*/ LDR         R2, [R1, #1028]             @ 0x404 
    /*000040e0*/ LDR         R1, [R8, #4] 
    /*000040e4*/ LSL         R2, R2, #4 
    /*000040e8*/ BL          0x00000000000040E8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000040ec*/ MOV         R2, #92                     @ 0x5c 
    /*000040f0*/ MLA         R2, R2, R5, R7 
    /*000040f4*/ ADD         R1, SP, #44                 @ 0x2c 
    /*000040f8*/ LDR         R0, [SP, #20] 
    /*000040fc*/ LDR         R3, [R2, #76]               @ 0x4c 
    /*00004100*/ STR         R3, [SP, #28] 
    /*00004104*/ BL          0x0000000000004104          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004108*/ LDR         R0, [SP, #16] 
    /*0000410c*/ BL          0x000000000000410C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004110*/ LDR         R1, [SP, #112]              @ 0x70 
    /*00004114*/ LDR         R3, [SP, #32] 
    /*00004118*/ CMP         R1, #0 
    /*0000411c*/ BLE         VPSS_GetRegionLumaTimeout_x4280
    /*00004120*/ LDR         R2, [SP, #28] 
    /*00004124*/ ADD         R9, SP, #48                 @ 0x30 
    /*00004128*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000412c*/ MOV         R1, #1 
    /*00004130*/ MOV         R0, R9 
    /*00004134*/ STR         R1, [SP, #68]               @ 0x44 
    /*00004138*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000413c*/ MOVW        R1, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x1f7c] 
    /*00004140*/ STR         R2, [SP, #60]               @ 0x3c 
    /*00004144*/ MOVT        R1, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x1f7c] 
    /*00004148*/ STR         R5, [SP, #48]               @ 0x30 
    /*0000414c*/ ADD         R4, R4, #32 
    /*00004150*/ STR         R1, [SP, #32] 
    /*00004154*/ STR         SL, [SP, #56]               @ 0x38 
    /*00004158*/ BL          0x0000000000004158          @ VPSS_WaitConditionCallBack [R_ARM_CALL: .text+0x1f7c] 
    /*0000415c*/ LDR         R3, [PC, #572]              @ 0x00000000000043a0 
    /*00004160*/ STR         R6, [SP, #36]               @ 0x24 
    /*00004164*/ ADD         R4, R3, R4 
    /*00004168*/ LDR         R6, [SP, #32] 
    /*0000416c*/ B           VPSS_GetRegionLumaTimeout_x4184
    VPSS_GetRegionLumaTimeout_x4170:
    /*00004170*/ BL          0x0000000000004170          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00004174*/ ADD         R3, R0, #512                @ 0x200 
    /*00004178*/ STR         R0, [SP, #112]              @ 0x70 
    /*0000417c*/ BICS        R3, R3, #512                @ 0x200 
    /*00004180*/ BEQ         VPSS_GetRegionLumaTimeout_x431c
    VPSS_GetRegionLumaTimeout_x4184:
    /*00004184*/ MOV         R0, R9 
    /*00004188*/ BL          0x0000000000004188          @ VPSS_WaitConditionCallBack [R_ARM_CALL: .text+0x1f7c] 
    /*0000418c*/ LDR         R3, [SP, #112]              @ 0x70 
    /*00004190*/ MOV         R2, R9 
    /*00004194*/ MOV         R1, R6 
    /*00004198*/ CMP         R0, #0 
    /*0000419c*/ MOV         R0, R4 
    /*000041a0*/ BEQ         VPSS_GetRegionLumaTimeout_x4170
    /*000041a4*/ MOV         R0, R3 
    /*000041a8*/ LDR         R6, [SP, #36]               @ 0x24 
    /*000041ac*/ BL          0x00000000000041AC          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*000041b0*/ STR         R0, [SP, #112]              @ 0x70 
    VPSS_GetRegionLumaTimeout_x41b4:
    /*000041b4*/ LDR         R3, [SP, #112]              @ 0x70 
    /*000041b8*/ CMP         R3, #0 
    /*000041bc*/ LDR         R3, [SP, #64]               @ 0x40 
    /*000041c0*/ BLE         VPSS_GetRegionLumaTimeout_x4358
    VPSS_GetRegionLumaTimeout_x41c4:
    /*000041c4*/ CMP         R3, #0 
    /*000041c8*/ BEQ         VPSS_GetRegionLumaTimeout_x438c
    /*000041cc*/ LDR         R0, [SP, #16] 
    /*000041d0*/ BL          0x00000000000041D0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000041d4*/ CMP         R0, #0 
    /*000041d8*/ BNE         VPSS_GetRegionLumaTimeout_x3f88
    /*000041dc*/ ADD         R1, SP, #44                 @ 0x2c 
    /*000041e0*/ LDR         R0, [SP, #20] 
    /*000041e4*/ BL          0x00000000000041E4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000041e8*/ LDR         R1, [SP, #28] 
    /*000041ec*/ MOV         R0, R5 
    /*000041f0*/ BL          0x00000000000041F0          @ AbnormalVerifyAfterWait [R_ARM_CALL: .text+0x1ff4] 
    /*000041f4*/ SUBS        R9, R0, #0 
    /*000041f8*/ BNE         VPSS_GetRegionLumaTimeout_x42fc
    /*000041fc*/ MOV         R3, #23 
    /*00004200*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00004204*/ MLA         R3, R3, R5, SL 
    /*00004208*/ LDR         R0, [SP, #20] 
    /*0000420c*/ ADD         R3, R3, #16 
    /*00004210*/ ADD         R7, R7, R3, LSL #2 
    /*00004214*/ LDR         R4, [R7, #68]               @ 0x44 
    /*00004218*/ STR         R9, [R7, #68]               @ 0x44 
    /*0000421c*/ BL          0x000000000000421C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004220*/ CMP         R4, #0 
    /*00004224*/ MOVWEQ      R9, #32782                  @ 0x800e 
    /*00004228*/ MOVTEQ      R9, #40967                  @ 0xa007 
    /*0000422c*/ BEQ         VPSS_GetRegionLumaTimeout_x4274
    /*00004230*/ LDR         R3, [R8] 
    /*00004234*/ CMP         R3, #0 
    /*00004238*/ BEQ         VPSS_GetRegionLumaTimeout_x4274
    /*0000423c*/ LDR         R4, [SP, #24] 
    VPSS_GetRegionLumaTimeout_x4240:
    /*00004240*/ LDR         R3, [R4, R5, LSL #2] 
    /*00004244*/ MOV         R2, #8 
    /*00004248*/ MOV         R0, FP 
    /*0000424c*/ ADD         FP, FP, R2 
    /*00004250*/ ADD         R3, R3, #16384              @ 0x4000 
    /*00004254*/ LDR         R1, [R3, #704]              @ 0x2c0 
    /*00004258*/ ADD         R1, R1, R9, LSL #4 
    /*0000425c*/ ADD         R9, R9, #1 
    /*00004260*/ BL          0x0000000000004260          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*00004264*/ LDR         R3, [R8] 
    /*00004268*/ CMP         R3, R9 
    /*0000426c*/ BHI         VPSS_GetRegionLumaTimeout_x4240
    /*00004270*/ MOV         R9, R0 
    VPSS_GetRegionLumaTimeout_x4274:
    /*00004274*/ LDR         R0, [SP, #16] 
    /*00004278*/ BL          0x0000000000004278          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000427c*/ B           VPSS_GetRegionLumaTimeout_x3f00
    VPSS_GetRegionLumaTimeout_x4280:
    /*00004280*/ LDR         R1, [PC, #280]              @ 0x00000000000043a0 
    /*00004284*/ ADD         R2, R4, #32 
    /*00004288*/ STR         R8, [SP, #32] 
    /*0000428c*/ MOVW        R4, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x1f7c] 
    /*00004290*/ ADD         R2, R1, R2 
    /*00004294*/ MOV         R1, #1 
    /*00004298*/ STR         R1, [SP, #68]               @ 0x44 
    /*0000429c*/ MOVT        R4, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x1f7c] 
    /*000042a0*/ LDR         R1, [SP, #28] 
    /*000042a4*/ ADD         R9, SP, #48                 @ 0x30 
    /*000042a8*/ STR         R3, [SP, #64]               @ 0x40 
    /*000042ac*/ MOV         R8, R2 
    /*000042b0*/ STR         R5, [SP, #48]               @ 0x30 
    /*000042b4*/ STR         R1, [SP, #60]               @ 0x3c 
    /*000042b8*/ STR         SL, [SP, #56]               @ 0x38 
    /*000042bc*/ STR         R3, [SP, #52]               @ 0x34 
    /*000042c0*/ B           VPSS_GetRegionLumaTimeout_x42d0
    VPSS_GetRegionLumaTimeout_x42c4:
    /*000042c4*/ BL          0x00000000000042C4          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*000042c8*/ CMP         R0, #0 
    /*000042cc*/ BLT         VPSS_GetRegionLumaTimeout_x4324
    VPSS_GetRegionLumaTimeout_x42d0:
    /*000042d0*/ MOV         R0, R9 
    /*000042d4*/ BL          0x00000000000042D4          @ VPSS_WaitConditionCallBack [R_ARM_CALL: .text+0x1f7c] 
    /*000042d8*/ MOV         R3, #100                    @ 0x64 
    /*000042dc*/ MOV         R2, R9 
    /*000042e0*/ MOV         R1, R4 
    /*000042e4*/ CMP         R0, #0 
    /*000042e8*/ MOV         R0, R8 
    /*000042ec*/ BEQ         VPSS_GetRegionLumaTimeout_x42c4
    /*000042f0*/ LDR         R8, [SP, #32] 
    /*000042f4*/ LDR         R3, [SP, #64]               @ 0x40 
    /*000042f8*/ B           VPSS_GetRegionLumaTimeout_x41c4
    VPSS_GetRegionLumaTimeout_x42fc:
    /*000042fc*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00004300*/ LDR         R0, [SP, #20] 
    /*00004304*/ BL          0x0000000000004304          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004308*/ LDR         R0, [SP, #16] 
    /*0000430c*/ BL          0x000000000000430C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004310*/ MOV         R0, R6 
    /*00004314*/ BL          0x0000000000004314          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004318*/ B           VPSS_GetRegionLumaTimeout_x3f08
    VPSS_GetRegionLumaTimeout_x431c:
    /*0000431c*/ LDR         R6, [SP, #36]               @ 0x24 
    /*00004320*/ B           VPSS_GetRegionLumaTimeout_x41b4
    VPSS_GetRegionLumaTimeout_x4324:
    /*00004324*/ MOVW        R3, #3371                   @ 0xd2b 
    /*00004328*/ STR         SL, [SP, #8] 
    /*0000432c*/ STR         R3, [SP] 
    /*00004330*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb70] 
    /*00004334*/ STR         R5, [SP, #4] 
    /*00004338*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb70] 
    /*0000433c*/ LDR         R3, [PC, #96]               @ 0x00000000000043a4 
    /*00004340*/ MOV         R1, #7 
    /*00004344*/ MOV         R0, #4 
    /*00004348*/ MOV         R9, #65024                  @ 0xfe00 
    /*0000434c*/ BL          0x000000000000434C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004350*/ MOVT        R9, #65535                  @ 0xffff 
    /*00004354*/ B           VPSS_GetRegionLumaTimeout_x3f00
    VPSS_GetRegionLumaTimeout_x4358:
    /*00004358*/ MOVW        R3, #3334                   @ 0xd06 
    /*0000435c*/ STR         SL, [SP, #8] 
    /*00004360*/ STR         R3, [SP] 
    /*00004364*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb34] 
    /*00004368*/ STR         R5, [SP, #4] 
    /*0000436c*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb34] 
    /*00004370*/ LDR         R3, [PC, #44]               @ 0x00000000000043a4 
    /*00004374*/ MOV         R1, #7 
    /*00004378*/ MOV         R0, #3 
    /*0000437c*/ MOVW        R9, #32784                  @ 0x8010 
    /*00004380*/ BL          0x0000000000004380          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004384*/ MOVT        R9, #40967                  @ 0xa007 
    /*00004388*/ B           VPSS_GetRegionLumaTimeout_x3f00
    VPSS_GetRegionLumaTimeout_x438c:
    /*0000438c*/ MOV         R0, R6 
    /*00004390*/ MOVW        R9, #32784                  @ 0x8010 
    /*00004394*/ BL          0x0000000000004394          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004398*/ MOVT        R9, #40967                  @ 0xa007 
    /*0000439c*/ B           VPSS_GetRegionLumaTimeout_x3f08
    /*000043a0*/ ANDEQ       R0, R0, R0, ASR #32 
    /*000043a4*/ MULEQ       R0, R8, R2 
FUNC_END VPSS_GetRegionLumaTimeout


FUNC_BEGIN VPSS_IsPhyChnAttachFishEye
    /*000043a8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000043ac*/ CMP         R1, #2 
    /*000043b0*/ SUB         SP, SP, #28 
    /*000043b4*/ MOV         R9, R0 
    /*000043b8*/ STR         R1, [SP, #20] 
    /*000043bc*/ BHI         VPSS_IsPhyChnAttachFishEye_x448c
    /*000043c0*/ LDR         R2, [SP, #20] 
    /*000043c4*/ MOV         R6, #36                     @ 0x24 
    /*000043c8*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000043cc*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000043d0*/ MUL         R6, R6, R2 
    /*000043d4*/ LDR         R7, [R3, R0, LSL #2] 
    /*000043d8*/ MOVW        R2, #19652                  @ 0x4cc4 
    /*000043dc*/ ADD         R3, R7, R6 
    /*000043e0*/ LDR         R8, [R3, R2] 
    /*000043e4*/ CMP         R8, #0 
    /*000043e8*/ ADDNE       R6, R6, R2 
    /*000043ec*/ MOVNE       R5, #0 
    /*000043f0*/ ADDNE       R6, R7, R6 
    /*000043f4*/ MOVWNE      SL, #7134                   @ 0x1bde 
    /*000043f8*/ BNE         VPSS_IsPhyChnAttachFishEye_x4408
    /*000043fc*/ B           VPSS_IsPhyChnAttachFishEye_x447c
    VPSS_IsPhyChnAttachFishEye_x4400:
    /*00004400*/ CMP         R8, R5 
    /*00004404*/ BEQ         VPSS_IsPhyChnAttachFishEye_x447c
    VPSS_IsPhyChnAttachFishEye_x4408:
    /*00004408*/ LDR         R4, [R6, #4]! 
    /*0000440c*/ ADD         R5, R5, #1 
    /*00004410*/ SUB         R1, R4, #3 
    /*00004414*/ ADD         R3, R4, SL 
    /*00004418*/ CMP         R1, #7 
    /*0000441c*/ ADD         R3, R7, R3, LSL #2 
    /*00004420*/ BHI         VPSS_IsPhyChnAttachFishEye_x4400
    /*00004424*/ LDR         R3, [R3, #4] 
    /*00004428*/ CMP         R3, #0 
    /*0000442c*/ BEQ         VPSS_IsPhyChnAttachFishEye_x4400
    /*00004430*/ MOV         R1, R4 
    /*00004434*/ MOV         R0, R9 
    /*00004438*/ BL          0x0000000000004438          @ VPSS_DRV_IsExtChnFisheyeEnable [R_ARM_CALL: .text+0x1a270] 
    /*0000443c*/ CMP         R0, #1 
    /*00004440*/ MOV         FP, R0 
    /*00004444*/ BNE         VPSS_IsPhyChnAttachFishEye_x4400
    /*00004448*/ LDR         R3, [SP, #20] 
    /*0000444c*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbe4] 
    /*00004450*/ STR         R4, [SP, #8] 
    /*00004454*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbe4] 
    /*00004458*/ STR         R9, [SP, #4] 
    /*0000445c*/ MOV         R1, #7 
    /*00004460*/ STR         R3, [SP, #12] 
    /*00004464*/ MOV         R0, #6 
    /*00004468*/ MOVW        R3, #3465                   @ 0xd89 
    /*0000446c*/ STR         R3, [SP] 
    /*00004470*/ LDR         R3, [PC, #76]               @ 0x00000000000044c4 
    /*00004474*/ BL          0x0000000000004474          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004478*/ B           VPSS_IsPhyChnAttachFishEye_x4480
    VPSS_IsPhyChnAttachFishEye_x447c:
    /*0000447c*/ MOV         FP, #0 
    VPSS_IsPhyChnAttachFishEye_x4480:
    /*00004480*/ MOV         R0, FP 
    /*00004484*/ ADD         SP, SP, #28 
    /*00004488*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_IsPhyChnAttachFishEye_x448c:
    /*0000448c*/ STR         R1, [SP, #8] 
    /*00004490*/ MOVW        R3, #3442                   @ 0xd72 
    /*00004494*/ STR         R0, [SP, #4] 
    /*00004498*/ MOV         R1, #7 
    /*0000449c*/ STR         R3, [SP] 
    /*000044a0*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xba8] 
    /*000044a4*/ LDR         R3, [PC, #24]               @ 0x00000000000044c4 
    /*000044a8*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0xba8] 
    /*000044ac*/ MOV         R0, #3 
    /*000044b0*/ MOV         FP, #0 
    /*000044b4*/ BL          0x00000000000044B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000044b8*/ MOV         R0, FP 
    /*000044bc*/ ADD         SP, SP, #28 
    /*000044c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*000044c4*/ @           <UNDEFINED> instruction: 0x000002b4 
FUNC_END VPSS_IsPhyChnAttachFishEye


FUNC_BEGIN VPSS_DestroyGdcChn
    /*000044c8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000044cc*/ MOV         R7, R0 
    /*000044d0*/ SUB         SP, SP, #16 
    /*000044d4*/ MOV         R0, #37                     @ 0x25 
    /*000044d8*/ MOV         R8, R1 
    /*000044dc*/ BL          0x00000000000044DC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000044e0*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000044e4*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000044e8*/ MOV         R4, #92                     @ 0x5c 
    /*000044ec*/ ADD         R1, SP, #12 
    /*000044f0*/ MLA         R4, R4, R7, R5 
    /*000044f4*/ ADD         R4, R4, #112                @ 0x70 
    /*000044f8*/ MOV         R6, R0 
    /*000044fc*/ MOV         R0, R4 
    /*00004500*/ BL          0x0000000000004500          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004504*/ LDR         R3, [R5, R7, LSL #2] 
    /*00004508*/ ADD         R3, R3, R8, LSL #3 
    /*0000450c*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00004510*/ LDR         R5, [R3, #100]              @ 0x64 
    /*00004514*/ LDR         R7, [R3, #96]               @ 0x60 
    /*00004518*/ CMP         R5, #0 
    /*0000451c*/ BEQ         VPSS_DestroyGdcChn_x4584
    /*00004520*/ MOV         R2, #0 
    /*00004524*/ ADD         R1, SP, #12 
    /*00004528*/ STR         R2, [R3, #100]              @ 0x64 
    /*0000452c*/ MOV         R0, R4 
    /*00004530*/ BL          0x0000000000004530          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004534*/ LDR         R3, [R6, #108]              @ 0x6c 
    /*00004538*/ MOV         R0, R7 
    /*0000453c*/ BLX         R3 
    /*00004540*/ SUBS        R5, R0, #0 
    /*00004544*/ BNE         VPSS_DestroyGdcChn_x4554
    /*00004548*/ MOV         R0, R5 
    /*0000454c*/ ADD         SP, SP, #16 
    /*00004550*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DestroyGdcChn_x4554:
    /*00004554*/ STR         R7, [SP, #4] 
    /*00004558*/ MOV         R3, #3504                   @ 0xdb0 
    /*0000455c*/ MOV         R1, #7 
    /*00004560*/ STR         R3, [SP] 
    /*00004564*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc80] 
    /*00004568*/ LDR         R3, [PC, #80]               @ 0x00000000000045c0 
    /*0000456c*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc80] 
    /*00004570*/ MOV         R0, #3 
    /*00004574*/ BL          0x0000000000004574          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004578*/ MOV         R0, R5 
    /*0000457c*/ ADD         SP, SP, #16 
    /*00004580*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DestroyGdcChn_x4584:
    /*00004584*/ MOV         R1, #7 
    /*00004588*/ STR         R7, [SP, #4] 
    /*0000458c*/ MOV         R0, R1 
    /*00004590*/ MOVW        R3, #3492                   @ 0xda4 
    /*00004594*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc44] 
    /*00004598*/ STR         R3, [SP] 
    /*0000459c*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc44] 
    /*000045a0*/ LDR         R3, [PC, #24]               @ 0x00000000000045c0 
    /*000045a4*/ BL          0x00000000000045A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000045a8*/ MOV         R0, R4 
    /*000045ac*/ ADD         R1, SP, #12 
    /*000045b0*/ BL          0x00000000000045B0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000045b4*/ MOV         R0, R5 
    /*000045b8*/ ADD         SP, SP, #16 
    /*000045bc*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*000045c0*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VPSS_DestroyGdcChn


FUNC_BEGIN VPSS_CreateGdcChn
    /*000045c4*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000045c8*/ MOV         R5, R0 
    /*000045cc*/ SUB         SP, SP, #20 
    /*000045d0*/ MOV         R0, #37                     @ 0x25 
    /*000045d4*/ MOV         R4, R1 
    /*000045d8*/ BL          0x00000000000045D8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000045dc*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000045e0*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000045e4*/ ADD         R1, R4, #3584               @ 0xe00 
    /*000045e8*/ ADD         R1, R1, #12 
    /*000045ec*/ LDR         R4, [R6, R5, LSL #2] 
    /*000045f0*/ ADD         R4, R4, R1, LSL #3 
    /*000045f4*/ LDR         R3, [R0, #104]              @ 0x68 
    /*000045f8*/ MOV         R0, R4 
    /*000045fc*/ BLX         R3 
    /*00004600*/ SUBS        R7, R0, #0 
    /*00004604*/ BNE         VPSS_CreateGdcChn_x4640
    /*00004608*/ MOV         R3, #92                     @ 0x5c 
    /*0000460c*/ ADD         R1, SP, #12 
    /*00004610*/ MLA         R5, R3, R5, R6 
    /*00004614*/ ADD         R5, R5, #112                @ 0x70 
    /*00004618*/ MOV         R0, R5 
    /*0000461c*/ BL          0x000000000000461C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004620*/ MOV         R0, R5 
    /*00004624*/ MOV         R3, #1 
    /*00004628*/ ADD         R1, SP, #12 
    /*0000462c*/ STR         R3, [R4, #4] 
    /*00004630*/ BL          0x0000000000004630          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004634*/ MOV         R0, R7 
    /*00004638*/ ADD         SP, SP, #20 
    /*0000463c*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_CreateGdcChn_x4640:
    /*00004640*/ MOVW        R3, #3529                   @ 0xdc9 
    /*00004644*/ MOV         R1, #7 
    /*00004648*/ STR         R3, [SP] 
    /*0000464c*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcb8] 
    /*00004650*/ LDR         R3, [PC, #20]               @ 0x000000000000466c 
    /*00004654*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcb8] 
    /*00004658*/ MOV         R0, #3 
    /*0000465c*/ BL          0x000000000000465C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004660*/ MOV         R0, R7 
    /*00004664*/ ADD         SP, SP, #20 
    /*00004668*/ POP         {R4, R5, R6, R7, PC} 
    /*0000466c*/ ANDEQ       R0, R0, R4, ROR #5 
FUNC_END VPSS_CreateGdcChn


FUNC_BEGIN VPSS_EnableChn
    /*00004670*/ CMP         R0, #15 
    /*00004674*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00004678*/ MOV         R7, R0 
    /*0000467c*/ SUB         SP, SP, #52                 @ 0x34 
    /*00004680*/ MOV         R5, R1 
    /*00004684*/ BHI         VPSS_EnableChn_x4850
    VPSS_EnableChn_x4688:
    /*00004688*/ CMP         R5, #10 
    /*0000468c*/ BHI         VPSS_EnableChn_x4868
    VPSS_EnableChn_x4690:
    /*00004690*/ MOV         R4, #92                     @ 0x5c 
    /*00004694*/ MOVW        R8, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00004698*/ MUL         R4, R4, R7 
    /*0000469c*/ MOVT        R8, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000046a0*/ ADD         FP, R8, #64                 @ 0x40 
    /*000046a4*/ ADD         R9, R4, #44                 @ 0x2c 
    /*000046a8*/ ADD         R9, FP, R9 
    /*000046ac*/ MOV         R0, R9 
    /*000046b0*/ BL          0x00000000000046B0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000046b4*/ SUBS        R3, R0, #0 
    /*000046b8*/ BNE         VPSS_EnableChn_x49a8
    /*000046bc*/ MOV         R1, R3 
    /*000046c0*/ MOV         R2, #772                    @ 0x304 
    /*000046c4*/ ADD         R0, R8, #3696               @ 0xe70 
    /*000046c8*/ STR         R3, [SP, #16] 
    /*000046cc*/ BL          0x00000000000046CC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000046d0*/ LDR         R6, [R8, R7, LSL #2] 
    /*000046d4*/ LDR         R3, [SP, #16] 
    /*000046d8*/ CMP         R6, #0 
    /*000046dc*/ BEQ         VPSS_EnableChn_x4ac0
    /*000046e0*/ ADD         R2, R6, R5, LSL #2 
    /*000046e4*/ ADD         SL, R2, #24576              @ 0x6000 
    /*000046e8*/ LDR         R1, [SL, #3964]             @ 0xf7c 
    /*000046ec*/ CMP         R1, #1 
    /*000046f0*/ BEQ         VPSS_EnableChn_x49b4
    /*000046f4*/ LDR         R3, [R2, #1604]             @ 0x644 
    /*000046f8*/ CMP         R3, #0 
    /*000046fc*/ BEQ         VPSS_EnableChn_x4a30
    /*00004700*/ BL          0x0000000000004700          @ VPSS_DRV_IsSupportExtChn [R_ARM_CALL: .text+0x20220] 
    /*00004704*/ CMP         R0, #0 
    /*00004708*/ BNE         VPSS_EnableChn_x47e0
    VPSS_EnableChn_x470c:
    /*0000470c*/ ADD         R3, R6, R5, LSL #5 
    /*00004710*/ LDR         R3, [R3, #1704]             @ 0x6a8 
    /*00004714*/ CMP         R3, #0 
    /*00004718*/ BEQ         VPSS_EnableChn_x49dc
    VPSS_EnableChn_x471c:
    /*0000471c*/ CMP         R5, #2 
    /*00004720*/ BLS         VPSS_EnableChn_x4880
    /*00004724*/ ADD         R4, R4, #48                 @ 0x30 
    /*00004728*/ ADD         R3, SP, #28 
    /*0000472c*/ ADD         R4, FP, R4 
    /*00004730*/ STR         R3, [SP, #16] 
    /*00004734*/ MOV         R1, R3 
    /*00004738*/ MOV         R0, R4 
    /*0000473c*/ BL          0x000000000000473C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004740*/ MOVW        R1, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00004744*/ MOVT        R1, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00004748*/ ADD         R2, R5, #4096               @ 0x1000 
    /*0000474c*/ LDR         R3, [SP, #16] 
    /*00004750*/ ADD         R2, R2, #50                 @ 0x32 
    /*00004754*/ LDR         R0, [R1, R7, LSL #2] 
    /*00004758*/ MOV         IP, #3 
    /*0000475c*/ MOV         R1, #1 
    /*00004760*/ STR         IP, [R0, R2, LSL #2] 
    /*00004764*/ STR         R1, [SL, #3964]             @ 0xf7c 
    VPSS_EnableChn_x4768:
    /*00004768*/ MOV         R1, R3 
    /*0000476c*/ MOV         R0, R4 
    /*00004770*/ BL          0x0000000000004770          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004774*/ MOV         R0, #2 
    /*00004778*/ MOV         R3, #7 
    /*0000477c*/ STR         R7, [SP, #40]               @ 0x28 
    /*00004780*/ STR         R3, [SP, #36]               @ 0x24 
    /*00004784*/ STR         R5, [SP, #44]               @ 0x2c 
    /*00004788*/ BL          0x0000000000004788          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000478c*/ LDR         R1, [PC, #868]              @ 0x0000000000004af8 
    /*00004790*/ LDR         R3, [R0, #48]               @ 0x30 
    /*00004794*/ ADD         R0, SP, #36                 @ 0x24 
    /*00004798*/ BLX         R3 
    /*0000479c*/ ADD         R1, SP, #32 
    /*000047a0*/ LDR         R0, [PC, #852]              @ 0x0000000000004afc 
    /*000047a4*/ BL          0x00000000000047A4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000047a8*/ MOV         R2, #772                    @ 0x304 
    /*000047ac*/ MLA         R0, R2, R5, R6 
    /*000047b0*/ LDR         R1, [PC, #832]              @ 0x0000000000004af8 
    /*000047b4*/ ADD         R0, R0, #19968              @ 0x4e00 
    /*000047b8*/ ADD         R0, R0, #80                 @ 0x50 
    /*000047bc*/ BL          0x00000000000047BC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000047c0*/ ADD         R1, SP, #32 
    /*000047c4*/ LDR         R0, [PC, #816]              @ 0x0000000000004afc 
    /*000047c8*/ BL          0x00000000000047C8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000047cc*/ MOV         R0, R9 
    /*000047d0*/ BL          0x00000000000047D0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000047d4*/ MOV         R0, #0 
    VPSS_EnableChn_x47d8:
    /*000047d8*/ ADD         SP, SP, #52                 @ 0x34 
    /*000047dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_EnableChn_x47e0:
    /*000047e0*/ SUB         R3, R5, #3 
    /*000047e4*/ CMP         R3, #7 
    /*000047e8*/ BHI         VPSS_EnableChn_x470c
    /*000047ec*/ MOV         R2, #40                     @ 0x28 
    /*000047f0*/ MLA         R3, R2, R3, R6 
    /*000047f4*/ LDR         R2, [R3, #128]              @ 0x80 
    /*000047f8*/ CMP         R2, #2 
    /*000047fc*/ BHI         VPSS_EnableChn_x4a88
    /*00004800*/ ADD         R3, R2, #7104               @ 0x1bc0 
    /*00004804*/ ADD         R3, R3, #30 
    /*00004808*/ ADD         R3, R6, R3, LSL #2 
    /*0000480c*/ LDR         R3, [R3, #4] 
    /*00004810*/ CMP         R3, #0 
    /*00004814*/ BNE         VPSS_EnableChn_x470c
    /*00004818*/ STR         R2, [SP, #4] 
    /*0000481c*/ MOV         R3, #3600                   @ 0xe10 
    /*00004820*/ MOV         R1, #7 
    /*00004824*/ STR         R3, [SP] 
    /*00004828*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd64] 
    /*0000482c*/ LDR         R3, [PC, #716]              @ 0x0000000000004b00 
    /*00004830*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd64] 
    /*00004834*/ MOV         R0, #3 
    /*00004838*/ BL          0x0000000000004838          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000483c*/ MOV         R0, R9 
    /*00004840*/ BL          0x0000000000004840          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004844*/ MOVW        R0, #32784                  @ 0x8010 
    /*00004848*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000484c*/ B           VPSS_EnableChn_x47d8
    VPSS_EnableChn_x4850:
    /*00004850*/ BL          0x00000000000001B0 
    /*00004854*/ CMP         R0, #0 
    /*00004858*/ BEQ         VPSS_EnableChn_x4688
    /*0000485c*/ MOVW        R0, #32769                  @ 0x8001 
    /*00004860*/ MOVT        R0, #40967                  @ 0xa007 
    /*00004864*/ B           VPSS_EnableChn_x47d8
    VPSS_EnableChn_x4868:
    /*00004868*/ BL          0x00000000000001EC 
    /*0000486c*/ CMP         R0, #0 
    /*00004870*/ BEQ         VPSS_EnableChn_x4690
    /*00004874*/ MOVW        R0, #32770                  @ 0x8002 
    /*00004878*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000487c*/ B           VPSS_EnableChn_x47d8
    VPSS_EnableChn_x4880:
    /*00004880*/ BL          0x0000000000004880          @ VPSS_IsGdcExist [R_ARM_CALL: .text+0xc320] 
    /*00004884*/ CMP         R0, #0 
    /*00004888*/ BNE         VPSS_EnableChn_x49cc
    VPSS_EnableChn_x488c:
    /*0000488c*/ ADD         R4, R4, #48                 @ 0x30 
    /*00004890*/ ADD         R3, SP, #28 
    /*00004894*/ ADD         R4, FP, R4 
    /*00004898*/ STR         R3, [SP, #16] 
    /*0000489c*/ MOV         R1, R3 
    /*000048a0*/ MOV         R0, R4 
    /*000048a4*/ BL          0x00000000000048A4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000048a8*/ MOVW        R1, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000048ac*/ MOVT        R1, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000048b0*/ ADD         R2, R5, #4096               @ 0x1000 
    /*000048b4*/ ADD         R2, R2, #50                 @ 0x32 
    /*000048b8*/ MOV         R0, #3 
    /*000048bc*/ LDR         FP, [R1, R7, LSL #2] 
    /*000048c0*/ MOV         R1, #1 
    /*000048c4*/ LDR         R3, [SP, #16] 
    /*000048c8*/ STR         R0, [FP, R2, LSL #2] 
    /*000048cc*/ STR         R1, [SL, #3964]             @ 0xf7c 
    /*000048d0*/ LDR         R2, [R6, #2084]             @ 0x824 
    /*000048d4*/ CMP         R2, #0 
    /*000048d8*/ BNE         VPSS_EnableChn_x4980
    VPSS_EnableChn_x48dc:
    /*000048dc*/ ADD         R2, FP, #12288              @ 0x3000 
    /*000048e0*/ LSL         SL, R7, #2 
    /*000048e4*/ LDR         R1, [R2, #3480]             @ 0xd98 
    /*000048e8*/ CMP         R1, #0 
    /*000048ec*/ BEQ         VPSS_EnableChn_x4908
    /*000048f0*/ ADD         R1, R8, SL 
    /*000048f4*/ LDR         R1, [R1, #1540]             @ 0x604 
    /*000048f8*/ CMP         R1, #1 
    /*000048fc*/ BEQ         VPSS_EnableChn_x4a6c
    VPSS_EnableChn_x4900:
    /*00004900*/ MOV         R1, #2 
    /*00004904*/ STR         R1, [R6, #2076]             @ 0x81c 
    VPSS_EnableChn_x4908:
    /*00004908*/ ADD         R8, R8, SL 
    /*0000490c*/ LDR         R1, [R8, #1540]             @ 0x604 
    /*00004910*/ CMP         R1, #1 
    /*00004914*/ BNE         VPSS_EnableChn_x4768
    /*00004918*/ MOV         R1, R5 
    /*0000491c*/ MOV         R0, R7 
    /*00004920*/ STR         R3, [SP, #20] 
    /*00004924*/ STR         R2, [SP, #16] 
    /*00004928*/ BL          0x0000000000004928          @ VpssOnlinePrepChnHwInfo [R_ARM_CALL: .text+0x2a5c] 
    /*0000492c*/ MOV         R1, R5 
    /*00004930*/ MOV         R0, R7 
    /*00004934*/ BL          0x0000000000004934          @ VpssDrvOnLinePremFrame [R_ARM_CALL: .text+0x24878] 
    /*00004938*/ MOV         R1, R5 
    /*0000493c*/ MOV         R0, R7 
    /*00004940*/ BL          0x0000000000004940          @ VpssDrvOnLineStartCap [R_ARM_CALL: .text+0x256bc] 
    /*00004944*/ MOV         R0, R7 
    /*00004948*/ BL          0x0000000000004948          @ VpssDrvOnLineRegup [R_ARM_CALL: .text+0x24670] 
    /*0000494c*/ LDR         R2, [SP, #16] 
    /*00004950*/ MOV         R0, R7 
    /*00004954*/ LDR         R1, [R2, #3484]             @ 0xd9c 
    /*00004958*/ BL          0x0000000000004958          @ VPSS_DRV_IsChnOneBuffer [R_ARM_CALL: .text+0x2482c] 
    /*0000495c*/ LDR         R2, [SP, #16] 
    /*00004960*/ LDR         R3, [SP, #20] 
    /*00004964*/ CMP         R0, #1 
    /*00004968*/ LDREQ       R2, [R2, #3484]             @ 0xd9c 
    /*0000496c*/ MOVEQ       R1, #0 
    /*00004970*/ ADDEQ       R2, R2, #4096               @ 0x1000 
    /*00004974*/ ADDEQ       R2, R2, #38                 @ 0x26 
    /*00004978*/ STREQ       R1, [FP, R2, LSL #2] 
    /*0000497c*/ B           VPSS_EnableChn_x4768
    VPSS_EnableChn_x4980:
    /*00004980*/ ADD         R1, R6, #2080               @ 0x820 
    /*00004984*/ ADD         R0, FP, #15744              @ 0x3d80 
    /*00004988*/ ADD         R1, R1, #4 
    /*0000498c*/ ADD         R0, R0, #24 
    /*00004990*/ STR         R3, [SP, #16] 
    /*00004994*/ BL          0x0000000000004994          @ VPSS_DRV_UpdateLowDelayAttr [R_ARM_CALL: .text+0x214a0] 
    /*00004998*/ MOV         R2, #0 
    /*0000499c*/ LDR         R3, [SP, #16] 
    /*000049a0*/ STR         R2, [R6, #2084]             @ 0x824 
    /*000049a4*/ B           VPSS_EnableChn_x48dc
    VPSS_EnableChn_x49a8:
    /*000049a8*/ MOV         R0, #65024                  @ 0xfe00 
    /*000049ac*/ MOVT        R0, #65535                  @ 0xffff 
    /*000049b0*/ B           VPSS_EnableChn_x47d8
    VPSS_EnableChn_x49b4:
    /*000049b4*/ MOV         R0, R9 
    /*000049b8*/ STR         R3, [SP, #16] 
    /*000049bc*/ BL          0x00000000000049BC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000049c0*/ LDR         R3, [SP, #16] 
    /*000049c4*/ MOV         R0, R3 
    /*000049c8*/ B           VPSS_EnableChn_x47d8
    VPSS_EnableChn_x49cc:
    /*000049cc*/ MOV         R1, R5 
    /*000049d0*/ MOV         R0, R7 
    /*000049d4*/ BL          0x00000000000049D4          @ VPSS_CreateGdcChn [R_ARM_CALL: .text+0x45c4] 
    /*000049d8*/ B           VPSS_EnableChn_x488c
    VPSS_EnableChn_x49dc:
    /*000049dc*/ MOV         R2, #8 
    /*000049e0*/ MOV         R1, R5 
    /*000049e4*/ MOV         R0, R7 
    /*000049e8*/ BL          0x00000000000049E8          @ VpssUserListCreate [R_ARM_CALL: .text+0x114d0] 
    /*000049ec*/ CMP         R0, #0 
    /*000049f0*/ BEQ         VPSS_EnableChn_x471c
    /*000049f4*/ MOVW        R3, #3611                   @ 0xe1b 
    /*000049f8*/ MOV         R1, #7 
    /*000049fc*/ STR         R3, [SP] 
    /*00004a00*/ MOVW        R2, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd9c] 
    /*00004a04*/ LDR         R3, [PC, #244]              @ 0x0000000000004b00 
    /*00004a08*/ MOVT        R2, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd9c] 
    /*00004a0c*/ STR         R5, [SP, #8] 
    /*00004a10*/ MOV         R0, #3 
    /*00004a14*/ STR         R7, [SP, #4] 
    /*00004a18*/ BL          0x0000000000004A18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004a1c*/ MOV         R0, R9 
    /*00004a20*/ BL          0x0000000000004A20          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004a24*/ MOVW        R0, #32781                  @ 0x800d 
    /*00004a28*/ MOVT        R0, #40967                  @ 0xa007 
    /*00004a2c*/ B           VPSS_EnableChn_x47d8
    VPSS_EnableChn_x4a30:
    /*00004a30*/ MOVW        R3, #3578                   @ 0xdfa 
    /*00004a34*/ MOV         R1, #7 
    /*00004a38*/ STR         R3, [SP] 
    /*00004a3c*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcec] 
    /*00004a40*/ LDR         R3, [PC, #184]              @ 0x0000000000004b00 
    /*00004a44*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcec] 
    /*00004a48*/ STR         R5, [SP, #8] 
    /*00004a4c*/ MOV         R0, #3 
    /*00004a50*/ STR         R7, [SP, #4] 
    /*00004a54*/ BL          0x0000000000004A54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004a58*/ MOV         R0, R9 
    /*00004a5c*/ BL          0x0000000000004A5C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004a60*/ MOVW        R0, #32784                  @ 0x8010 
    /*00004a64*/ MOVT        R0, #40967                  @ 0xa007 
    /*00004a68*/ B           VPSS_EnableChn_x47d8
    VPSS_EnableChn_x4a6c:
    /*00004a6c*/ MOV         R0, R7 
    /*00004a70*/ STR         R2, [SP, #20] 
    /*00004a74*/ STR         R3, [SP, #16] 
    /*00004a78*/ BL          0x0000000000004A78          @ VpssDrvSetLowDelayAttr [R_ARM_CALL: .text+0x214b4] 
    /*00004a7c*/ LDR         R2, [SP, #20] 
    /*00004a80*/ LDR         R3, [SP, #16] 
    /*00004a84*/ B           VPSS_EnableChn_x4900
    VPSS_EnableChn_x4a88:
    /*00004a88*/ STR         R2, [SP, #4] 
    /*00004a8c*/ MOVW        R3, #3593                   @ 0xe09 
    /*00004a90*/ MOV         R1, #7 
    /*00004a94*/ STR         R3, [SP] 
    /*00004a98*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd30] 
    /*00004a9c*/ LDR         R3, [PC, #92]               @ 0x0000000000004b00 
    /*00004aa0*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd30] 
    /*00004aa4*/ MOV         R0, #3 
    /*00004aa8*/ BL          0x0000000000004AA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004aac*/ MOV         R0, R9 
    /*00004ab0*/ BL          0x0000000000004AB0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004ab4*/ MOVW        R0, #32770                  @ 0x8002 
    /*00004ab8*/ MOVT        R0, #40967                  @ 0xa007 
    /*00004abc*/ B           VPSS_EnableChn_x47d8
    VPSS_EnableChn_x4ac0:
    /*00004ac0*/ MOVW        R3, #3564                   @ 0xdec 
    /*00004ac4*/ MOV         R1, #7 
    /*00004ac8*/ STR         R3, [SP] 
    /*00004acc*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00004ad0*/ LDR         R3, [PC, #40]               @ 0x0000000000004b00 
    /*00004ad4*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00004ad8*/ STR         R7, [SP, #4] 
    /*00004adc*/ MOV         R0, #3 
    /*00004ae0*/ BL          0x0000000000004AE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004ae4*/ MOV         R0, R9 
    /*00004ae8*/ BL          0x0000000000004AE8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004aec*/ MOVW        R0, #32773                  @ 0x8005 
    /*00004af0*/ MOVT        R0, #40967                  @ 0xa007 
    /*00004af4*/ B           VPSS_EnableChn_x47d8
    /*00004af8*/ ANDEQ       R0, R0, R0, ROR LR 
    /*00004afc*/ ANDEQ       R0, R0, R0, LSL #12 
    /*00004b00*/ STRDEQ      R0, [R0], -R8 
FUNC_END VPSS_EnableChn


FUNC_BEGIN VPSS_DisableChn
    /*00004b04*/ CMP         R0, #15 
    /*00004b08*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00004b0c*/ MOV         R6, R0 
    /*00004b10*/ SUB         SP, SP, #20 
    /*00004b14*/ MOV         R5, R1 
    /*00004b18*/ BHI         VPSS_DisableChn_x4ca4
    VPSS_DisableChn_x4b1c:
    /*00004b1c*/ CMP         R5, #10 
    /*00004b20*/ BHI         VPSS_DisableChn_x4cbc
    VPSS_DisableChn_x4b24:
    /*00004b24*/ MOV         R4, #92                     @ 0x5c 
    /*00004b28*/ MOVW        FP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00004b2c*/ MUL         R4, R4, R6 
    /*00004b30*/ MOVT        FP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00004b34*/ ADD         R8, FP, #64                 @ 0x40 
    /*00004b38*/ ADD         R7, R4, #44                 @ 0x2c 
    /*00004b3c*/ ADD         R7, R8, R7 
    /*00004b40*/ MOV         R0, R7 
    /*00004b44*/ BL          0x0000000000004B44          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00004b48*/ SUBS        R9, R0, #0 
    /*00004b4c*/ BNE         VPSS_DisableChn_x4d88
    /*00004b50*/ LDR         SL, [FP, R6, LSL #2] 
    /*00004b54*/ CMP         SL, #0 
    /*00004b58*/ BEQ         VPSS_DisableChn_x4d94
    /*00004b5c*/ BL          0x0000000000004B5C          @ VPSS_DRV_IsSupportExtChn [R_ARM_CALL: .text+0x20220] 
    /*00004b60*/ CMP         R0, #0 
    /*00004b64*/ BEQ         VPSS_DisableChn_x4bc4
    /*00004b68*/ MOV         R0, #36                     @ 0x24 
    /*00004b6c*/ MOVW        R3, #19652                  @ 0x4cc4 
    /*00004b70*/ MUL         R0, R0, R5 
    /*00004b74*/ ADD         R2, SL, R0 
    /*00004b78*/ LDR         IP, [R2, R3] 
    /*00004b7c*/ CMP         IP, #0 
    /*00004b80*/ BEQ         VPSS_DisableChn_x4bc4
    /*00004b84*/ ADD         R0, R0, R3 
    /*00004b88*/ MOV         R2, R9 
    /*00004b8c*/ ADD         R0, SL, R0 
    /*00004b90*/ MOVW        LR, #7134                   @ 0x1bde 
    VPSS_DisableChn_x4b94:
    /*00004b94*/ LDR         R1, [R0, #4]! 
    /*00004b98*/ ADD         R2, R2, #1 
    /*00004b9c*/ SUB         R9, R1, #3 
    /*00004ba0*/ ADD         R3, R1, LR 
    /*00004ba4*/ CMP         R9, #7 
    /*00004ba8*/ ADD         R3, SL, R3, LSL #2 
    /*00004bac*/ BHI         VPSS_DisableChn_x4bbc
    /*00004bb0*/ LDR         R3, [R3, #4] 
    /*00004bb4*/ CMP         R3, #0 
    /*00004bb8*/ BNE         VPSS_DisableChn_x4cf8
    VPSS_DisableChn_x4bbc:
    /*00004bbc*/ CMP         IP, R2 
    /*00004bc0*/ BNE         VPSS_DisableChn_x4b94
    VPSS_DisableChn_x4bc4:
    /*00004bc4*/ ADD         FP, FP, R6, LSL #2 
    /*00004bc8*/ LDR         R3, [FP, #1540]             @ 0x604 
    /*00004bcc*/ BIC         R3, R3, #2 
    /*00004bd0*/ CMP         R3, #1 
    /*00004bd4*/ BEQ         VPSS_DisableChn_x4c54
    /*00004bd8*/ ADD         R4, R4, #48                 @ 0x30 
    /*00004bdc*/ ADD         R9, SP, #12 
    /*00004be0*/ ADD         R8, R8, R4 
    /*00004be4*/ MOV         R1, R9 
    /*00004be8*/ MOV         R0, R8 
    /*00004bec*/ BL          0x0000000000004BEC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004bf0*/ ADD         R3, SL, R5, LSL #5 
    /*00004bf4*/ LDR         R3, [R3, #1704]             @ 0x6a8 
    /*00004bf8*/ CMP         R3, #0 
    /*00004bfc*/ BEQ         VPSS_DisableChn_x4c0c
    VPSS_DisableChn_x4c00:
    /*00004c00*/ MOV         R1, R5 
    /*00004c04*/ MOV         R0, R6 
    /*00004c08*/ BL          0x0000000000004C08          @ VpssCleanUserList [R_ARM_CALL: .text+0x12500] 
    VPSS_DisableChn_x4c0c:
    /*00004c0c*/ ADD         R3, R5, #7104               @ 0x1bc0 
    /*00004c10*/ MOV         R2, #0 
    /*00004c14*/ ADD         R3, R3, #30 
    /*00004c18*/ MOV         R1, R9 
    /*00004c1c*/ MOV         R0, R8 
    /*00004c20*/ ADD         SL, SL, R3, LSL #2 
    /*00004c24*/ STR         R2, [SL, #4] 
    /*00004c28*/ BL          0x0000000000004C28          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004c2c*/ CMP         R5, #2 
    /*00004c30*/ BHI         VPSS_DisableChn_x4c40
    VPSS_DisableChn_x4c34:
    /*00004c34*/ BL          0x0000000000004C34          @ VPSS_IsGdcExist [R_ARM_CALL: .text+0xc320] 
    /*00004c38*/ CMP         R0, #0 
    /*00004c3c*/ BNE         VPSS_DisableChn_x4cd4
    VPSS_DisableChn_x4c40:
    /*00004c40*/ MOV         R0, R7 
    /*00004c44*/ BL          0x0000000000004C44          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004c48*/ MOV         R0, #0 
    VPSS_DisableChn_x4c4c:
    /*00004c4c*/ ADD         SP, SP, #20 
    /*00004c50*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DisableChn_x4c54:
    /*00004c54*/ CMP         R5, #2 
    /*00004c58*/ BLS         VPSS_DisableChn_x4d34
    /*00004c5c*/ ADD         R4, R4, #48                 @ 0x30 
    /*00004c60*/ ADD         R9, SP, #12 
    /*00004c64*/ ADD         R8, R8, R4 
    /*00004c68*/ MOV         R1, R9 
    /*00004c6c*/ MOV         R0, R8 
    /*00004c70*/ BL          0x0000000000004C70          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004c74*/ ADD         R3, SL, R5, LSL #5 
    /*00004c78*/ LDR         R3, [R3, #1704]             @ 0x6a8 
    /*00004c7c*/ CMP         R3, #0 
    /*00004c80*/ BNE         VPSS_DisableChn_x4c00
    /*00004c84*/ ADD         R5, R5, #7104               @ 0x1bc0 
    /*00004c88*/ MOV         R1, R9 
    /*00004c8c*/ ADD         R5, R5, #30 
    /*00004c90*/ MOV         R0, R8 
    /*00004c94*/ ADD         R5, SL, R5, LSL #2 
    /*00004c98*/ STR         R3, [R5, #4] 
    /*00004c9c*/ BL          0x0000000000004C9C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004ca0*/ B           VPSS_DisableChn_x4c40
    VPSS_DisableChn_x4ca4:
    /*00004ca4*/ BL          0x00000000000001B0 
    /*00004ca8*/ CMP         R0, #0 
    /*00004cac*/ BEQ         VPSS_DisableChn_x4b1c
    /*00004cb0*/ MOVW        R0, #32769                  @ 0x8001 
    /*00004cb4*/ MOVT        R0, #40967                  @ 0xa007 
    /*00004cb8*/ B           VPSS_DisableChn_x4c4c
    VPSS_DisableChn_x4cbc:
    /*00004cbc*/ BL          0x00000000000001EC 
    /*00004cc0*/ CMP         R0, #0 
    /*00004cc4*/ BEQ         VPSS_DisableChn_x4b24
    /*00004cc8*/ MOVW        R0, #32770                  @ 0x8002 
    /*00004ccc*/ MOVT        R0, #40967                  @ 0xa007 
    /*00004cd0*/ B           VPSS_DisableChn_x4c4c
    VPSS_DisableChn_x4cd4:
    /*00004cd4*/ MOV         R1, R5 
    /*00004cd8*/ MOV         R0, R6 
    /*00004cdc*/ BL          0x0000000000004CDC          @ VPSS_DestroyGdcChn [R_ARM_CALL: .text+0x44c8] 
    /*00004ce0*/ CMP         R0, #0 
    /*00004ce4*/ BEQ         VPSS_DisableChn_x4c40
    /*00004ce8*/ MOV         R0, R7 
    /*00004cec*/ BL          0x0000000000004CEC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004cf0*/ MVN         R0, #0 
    /*00004cf4*/ B           VPSS_DisableChn_x4c4c
    VPSS_DisableChn_x4cf8:
    /*00004cf8*/ STR         R1, [SP, #4] 
    /*00004cfc*/ MOVW        R3, #3739                   @ 0xe9b 
    /*00004d00*/ MOV         R1, #7 
    /*00004d04*/ STR         R3, [SP] 
    /*00004d08*/ MOVW        R2, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xddc] 
    /*00004d0c*/ LDR         R3, [PC, #184]              @ 0x0000000000004dcc 
    /*00004d10*/ MOVT        R2, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0xddc] 
    /*00004d14*/ MOV         R0, #3 
    /*00004d18*/ BL          0x0000000000004D18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004d1c*/ MOV         R0, R7 
    /*00004d20*/ BL          0x0000000000004D20          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004d24*/ MOVW        R0, #32784                  @ 0x8010 
    /*00004d28*/ MOVT        R0, #40967                  @ 0xa007 
    /*00004d2c*/ ADD         SP, SP, #20 
    /*00004d30*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DisableChn_x4d34:
    /*00004d34*/ ADD         R4, R4, #48                 @ 0x30 
    /*00004d38*/ ADD         R9, SP, #12 
    /*00004d3c*/ ADD         R8, R8, R4 
    /*00004d40*/ MOV         R1, R5 
    /*00004d44*/ MOV         R0, R6 
    /*00004d48*/ BL          0x0000000000004D48          @ VPSS_ReleaseOnlineVB [R_ARM_CALL: .text+0x33d0] 
    /*00004d4c*/ MOV         R0, R8 
    /*00004d50*/ MOV         R1, R9 
    /*00004d54*/ BL          0x0000000000004D54          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004d58*/ ADD         R3, SL, R5, LSL #5 
    /*00004d5c*/ LDR         R3, [R3, #1704]             @ 0x6a8 
    /*00004d60*/ CMP         R3, #0 
    /*00004d64*/ BNE         VPSS_DisableChn_x4c00
    /*00004d68*/ ADD         R2, R5, #7104               @ 0x1bc0 
    /*00004d6c*/ MOV         R1, R9 
    /*00004d70*/ ADD         R2, R2, #30 
    /*00004d74*/ MOV         R0, R8 
    /*00004d78*/ ADD         SL, SL, R2, LSL #2 
    /*00004d7c*/ STR         R3, [SL, #4] 
    /*00004d80*/ BL          0x0000000000004D80          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004d84*/ B           VPSS_DisableChn_x4c34
    VPSS_DisableChn_x4d88:
    /*00004d88*/ MOV         R0, #65024                  @ 0xfe00 
    /*00004d8c*/ MOVT        R0, #65535                  @ 0xffff 
    /*00004d90*/ B           VPSS_DisableChn_x4c4c
    VPSS_DisableChn_x4d94:
    /*00004d94*/ MOVW        R3, #3717                   @ 0xe85 
    /*00004d98*/ MOV         R1, #7 
    /*00004d9c*/ STR         R3, [SP] 
    /*00004da0*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00004da4*/ LDR         R3, [PC, #32]               @ 0x0000000000004dcc 
    /*00004da8*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00004dac*/ STR         R6, [SP, #4] 
    /*00004db0*/ MOV         R0, #3 
    /*00004db4*/ BL          0x0000000000004DB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004db8*/ MOV         R0, R7 
    /*00004dbc*/ BL          0x0000000000004DBC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004dc0*/ MOVW        R0, #32773                  @ 0x8005 
    /*00004dc4*/ MOVT        R0, #40967                  @ 0xa007 
    /*00004dc8*/ B           VPSS_DisableChn_x4c4c
    /*00004dcc*/ ANDEQ       R0, R0, R8, LSL #6 
FUNC_END VPSS_DisableChn


FUNC_BEGIN VPSS_SetGrpAttr
    /*00004dd0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00004dd4*/ SUBS        R6, R1, #0 
    /*00004dd8*/ SUB         SP, SP, #16 
    /*00004ddc*/ MOV         R4, R0 
    /*00004de0*/ BEQ         VPSS_SetGrpAttr_x4efc
    VPSS_SetGrpAttr_x4de4:
    /*00004de4*/ CMP         R4, #15 
    /*00004de8*/ BHI         VPSS_SetGrpAttr_x4ec4
    VPSS_SetGrpAttr_x4dec:
    /*00004dec*/ MOV         R1, R6 
    /*00004df0*/ MOV         R0, R4 
    /*00004df4*/ BL          0x0000000000004DF4          @ VPSS_DRV_CheckGrpAttr [R_ARM_CALL: .text+0x1ba90] 
    /*00004df8*/ CMP         R0, #0 
    /*00004dfc*/ BNE         VPSS_SetGrpAttr_x4ef0
    /*00004e00*/ MOV         R5, #92                     @ 0x5c 
    /*00004e04*/ MOVW        R8, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00004e08*/ MUL         R5, R5, R4 
    /*00004e0c*/ MOVT        R8, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00004e10*/ ADD         R9, R8, #64                 @ 0x40 
    /*00004e14*/ ADD         R7, R5, #44                 @ 0x2c 
    /*00004e18*/ ADD         R7, R9, R7 
    /*00004e1c*/ MOV         R0, R7 
    /*00004e20*/ BL          0x0000000000004E20          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00004e24*/ CMP         R0, #0 
    /*00004e28*/ BNE         VPSS_SetGrpAttr_x4f14
    /*00004e2c*/ LDR         R8, [R8, R4, LSL #2] 
    /*00004e30*/ CMP         R8, #0 
    /*00004e34*/ BEQ         VPSS_SetGrpAttr_x4f34
    /*00004e38*/ MOV         R1, R6 
    /*00004e3c*/ MOV         R0, R4 
    /*00004e40*/ BL          0x0000000000004E40          @ VPSS_DRV_CheckGrpStaticAttr [R_ARM_CALL: .text+0x1bd94] 
    /*00004e44*/ CMP         R0, #0 
    /*00004e48*/ BNE         VPSS_SetGrpAttr_x4f20
    /*00004e4c*/ MOV         R1, R6 
    /*00004e50*/ MOV         R0, R4 
    /*00004e54*/ BL          0x0000000000004E54          @ VPSS_DRV_HwResourceCreate [R_ARM_CALL: .text+0x1b17c] 
    /*00004e58*/ SUBS        SL, R0, #0 
    /*00004e5c*/ BNE         VPSS_SetGrpAttr_x4eb0
    /*00004e60*/ ADD         R5, R5, #48                 @ 0x30 
    /*00004e64*/ ADD         R8, R8, #2592               @ 0xa20 
    /*00004e68*/ ADD         R9, R9, R5 
    /*00004e6c*/ ADD         R8, R8, #4 
    /*00004e70*/ ADD         R5, R6, #16 
    /*00004e74*/ ADD         R1, SP, #12 
    /*00004e78*/ MOV         R0, R9 
    /*00004e7c*/ BL          0x0000000000004E7C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004e80*/ MOV         R0, R8 
    /*00004e84*/ MOV         R1, R5 
    /*00004e88*/ MOV         R2, #8 
    /*00004e8c*/ BL          0x0000000000004E8C          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*00004e90*/ CMP         R0, #0 
    /*00004e94*/ BNE         VPSS_SetGrpAttr_x4edc
    VPSS_SetGrpAttr_x4e98:
    /*00004e98*/ MOV         R1, R6 
    /*00004e9c*/ MOV         R0, R4 
    /*00004ea0*/ BL          0x0000000000004EA0          @ VPSS_DRV_SetGrpAttr [R_ARM_CALL: .text+0x18434] 
    /*00004ea4*/ ADD         R1, SP, #12 
    /*00004ea8*/ MOV         R0, R9 
    /*00004eac*/ BL          0x0000000000004EAC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VPSS_SetGrpAttr_x4eb0:
    /*00004eb0*/ MOV         R0, R7 
    /*00004eb4*/ BL          0x0000000000004EB4          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_SetGrpAttr_x4eb8:
    /*00004eb8*/ MOV         R0, SL 
    /*00004ebc*/ ADD         SP, SP, #16 
    /*00004ec0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_SetGrpAttr_x4ec4:
    /*00004ec4*/ BL          0x00000000000001B0 
    /*00004ec8*/ CMP         R0, #0 
    /*00004ecc*/ BEQ         VPSS_SetGrpAttr_x4dec
    /*00004ed0*/ MOVW        SL, #32769                  @ 0x8001 
    /*00004ed4*/ MOVT        SL, #40967                  @ 0xa007 
    /*00004ed8*/ B           VPSS_SetGrpAttr_x4eb8
    VPSS_SetGrpAttr_x4edc:
    /*00004edc*/ MOV         R1, R5 
    /*00004ee0*/ MOV         R0, R8 
    /*00004ee4*/ MOV         R2, #8 
    /*00004ee8*/ BL          0x0000000000004EE8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004eec*/ B           VPSS_SetGrpAttr_x4e98
    VPSS_SetGrpAttr_x4ef0:
    /*00004ef0*/ MOVW        SL, #32771                  @ 0x8003 
    /*00004ef4*/ MOVT        SL, #40967                  @ 0xa007 
    /*00004ef8*/ B           VPSS_SetGrpAttr_x4eb8
    VPSS_SetGrpAttr_x4efc:
    /*00004efc*/ BL          0x0000000000000174 
    /*00004f00*/ CMP         R0, #0 
    /*00004f04*/ MOVWNE      SL, #32774                  @ 0x8006 
    /*00004f08*/ MOVTNE      SL, #40967                  @ 0xa007 
    /*00004f0c*/ BNE         VPSS_SetGrpAttr_x4eb8
    /*00004f10*/ B           VPSS_SetGrpAttr_x4de4
    VPSS_SetGrpAttr_x4f14:
    /*00004f14*/ MOV         SL, #65024                  @ 0xfe00 
    /*00004f18*/ MOVT        SL, #65535                  @ 0xffff 
    /*00004f1c*/ B           VPSS_SetGrpAttr_x4eb8
    VPSS_SetGrpAttr_x4f20:
    /*00004f20*/ MOV         R0, R7 
    /*00004f24*/ MOVW        SL, #32777                  @ 0x8009 
    /*00004f28*/ BL          0x0000000000004F28          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004f2c*/ MOVT        SL, #40967                  @ 0xa007 
    /*00004f30*/ B           VPSS_SetGrpAttr_x4eb8
    VPSS_SetGrpAttr_x4f34:
    /*00004f34*/ MOVW        R3, #3860                   @ 0xf14 
    /*00004f38*/ MOV         R1, #7 
    /*00004f3c*/ STR         R3, [SP] 
    /*00004f40*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00004f44*/ LDR         R3, [PC, #32]               @ 0x0000000000004f6c 
    /*00004f48*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00004f4c*/ STR         R4, [SP, #4] 
    /*00004f50*/ MOV         R0, #3 
    /*00004f54*/ BL          0x0000000000004F54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004f58*/ MOV         R0, R7 
    /*00004f5c*/ MOVW        SL, #32773                  @ 0x8005 
    /*00004f60*/ BL          0x0000000000004F60          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004f64*/ MOVT        SL, #40967                  @ 0xa007 
    /*00004f68*/ B           VPSS_SetGrpAttr_x4eb8
    /*00004f6c*/ ANDEQ       R0, R0, R8, LSL R3 
FUNC_END VPSS_SetGrpAttr


FUNC_BEGIN VPSS_GetGrpAttr
    /*00004f70*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00004f74*/ SUBS        R8, R1, #0 
    /*00004f78*/ SUB         SP, SP, #8 
    /*00004f7c*/ MOV         R5, R0 
    /*00004f80*/ BEQ         VPSS_GetGrpAttr_x4ff4
    VPSS_GetGrpAttr_x4f84:
    /*00004f84*/ CMP         R5, #15 
    /*00004f88*/ BHI         VPSS_GetGrpAttr_x4fdc
    VPSS_GetGrpAttr_x4f8c:
    /*00004f8c*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00004f90*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00004f94*/ MOV         R4, #92                     @ 0x5c 
    /*00004f98*/ MLA         R4, R4, R5, R6 
    /*00004f9c*/ ADD         R4, R4, #108                @ 0x6c 
    /*00004fa0*/ MOV         R0, R4 
    /*00004fa4*/ BL          0x0000000000004FA4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00004fa8*/ SUBS        R7, R0, #0 
    /*00004fac*/ BNE         VPSS_GetGrpAttr_x500c
    /*00004fb0*/ LDR         R3, [R6, R5, LSL #2] 
    /*00004fb4*/ CMP         R3, #0 
    /*00004fb8*/ BEQ         VPSS_GetGrpAttr_x5018
    /*00004fbc*/ MOV         R1, R8 
    /*00004fc0*/ MOV         R0, R5 
    /*00004fc4*/ BL          0x0000000000004FC4          @ VPSS_DRV_GetGrpAttr [R_ARM_CALL: .text+0x184d0] 
    /*00004fc8*/ MOV         R0, R4 
    /*00004fcc*/ BL          0x0000000000004FCC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00004fd0*/ MOV         R0, R7 
    VPSS_GetGrpAttr_x4fd4:
    /*00004fd4*/ ADD         SP, SP, #8 
    /*00004fd8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_GetGrpAttr_x4fdc:
    /*00004fdc*/ BL          0x00000000000001B0 
    /*00004fe0*/ CMP         R0, #0 
    /*00004fe4*/ BEQ         VPSS_GetGrpAttr_x4f8c
    /*00004fe8*/ MOVW        R0, #32769                  @ 0x8001 
    /*00004fec*/ MOVT        R0, #40967                  @ 0xa007 
    /*00004ff0*/ B           VPSS_GetGrpAttr_x4fd4
    VPSS_GetGrpAttr_x4ff4:
    /*00004ff4*/ BL          0x0000000000000174 
    /*00004ff8*/ CMP         R0, #0 
    /*00004ffc*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*00005000*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*00005004*/ BNE         VPSS_GetGrpAttr_x4fd4
    /*00005008*/ B           VPSS_GetGrpAttr_x4f84
    VPSS_GetGrpAttr_x500c:
    /*0000500c*/ MOV         R0, #65024                  @ 0xfe00 
    /*00005010*/ MOVT        R0, #65535                  @ 0xffff 
    /*00005014*/ B           VPSS_GetGrpAttr_x4fd4
    VPSS_GetGrpAttr_x5018:
    /*00005018*/ MOVW        R3, #3913                   @ 0xf49 
    /*0000501c*/ MOV         R1, #7 
    /*00005020*/ STR         R3, [SP] 
    /*00005024*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00005028*/ LDR         R3, [PC, #32]               @ 0x0000000000005050 
    /*0000502c*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00005030*/ STR         R5, [SP, #4] 
    /*00005034*/ MOV         R0, #3 
    /*00005038*/ BL          0x0000000000005038          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000503c*/ MOV         R0, R4 
    /*00005040*/ BL          0x0000000000005040          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005044*/ MOVW        R0, #32773                  @ 0x8005 
    /*00005048*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000504c*/ B           VPSS_GetGrpAttr_x4fd4
    /*00005050*/ ANDEQ       R0, R0, R8, LSR #6 
FUNC_END VPSS_GetGrpAttr


FUNC_BEGIN VPSS_SetChnAttr
    /*00005054*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00005058*/ SUBS        R9, R2, #0 
    /*0000505c*/ SUB         SP, SP, #100                @ 0x64 
    /*00005060*/ MOV         R5, R0 
    /*00005064*/ MOV         R4, R1 
    /*00005068*/ BEQ         VPSS_SetChnAttr_x5278
    VPSS_SetChnAttr_x506c:
    /*0000506c*/ CMP         R5, #15 
    /*00005070*/ BHI         VPSS_SetChnAttr_x5224
    VPSS_SetChnAttr_x5074:
    /*00005074*/ CMP         R4, #10 
    /*00005078*/ BHI         VPSS_SetChnAttr_x523c
    /*0000507c*/ CMP         R4, #2 
    /*00005080*/ BHI         VPSS_SetChnAttr_x5248
    /*00005084*/ MOV         R6, #92                     @ 0x5c 
    /*00005088*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000508c*/ MUL         R6, R6, R5 
    /*00005090*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005094*/ ADD         FP, R7, #64                 @ 0x40 
    /*00005098*/ ADD         R8, R6, #44                 @ 0x2c 
    /*0000509c*/ ADD         R8, FP, R8 
    /*000050a0*/ MOV         R0, R8 
    /*000050a4*/ BL          0x00000000000050A4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000050a8*/ CMP         R0, #0 
    /*000050ac*/ BNE         VPSS_SetChnAttr_x529c
    /*000050b0*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000050b4*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000050b8*/ LDR         R7, [R7, R5, LSL #2] 
    /*000050bc*/ LDR         SL, [R3, R5, LSL #2] 
    /*000050c0*/ CMP         SL, #0 
    /*000050c4*/ BEQ         VPSS_SetChnAttr_x52bc
    /*000050c8*/ MOV         R1, R9 
    /*000050cc*/ MOV         R2, #72                     @ 0x48 
    /*000050d0*/ ADD         R0, SP, #24 
    /*000050d4*/ BL          0x00000000000050D4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000050d8*/ ADD         R2, SP, #24 
    /*000050dc*/ MOV         R1, R4 
    /*000050e0*/ MOV         R0, R5 
    /*000050e4*/ BL          0x00000000000050E4          @ VPSS_DRV_CheckChnAttr [R_ARM_CALL: .text+0x1c2a8] 
    /*000050e8*/ SUBS        R9, R0, #0 
    /*000050ec*/ BNE         VPSS_SetChnAttr_x52a8
    /*000050f0*/ MOV         R1, R4 
    /*000050f4*/ MOV         R0, R5 
    /*000050f8*/ BL          0x00000000000050F8          @ VPSS_DRV_NeedCallGDCFunction [R_ARM_CALL: .text+0x19acc] 
    /*000050fc*/ CMP         R0, #1 
    /*00005100*/ BEQ         VPSS_SetChnAttr_x51d0
    /*00005104*/ MOV         R1, R4 
    /*00005108*/ MOV         R0, R5 
    /*0000510c*/ BL          0x000000000000510C          @ VPSS_IsPhyChnAttachFishEye [R_ARM_CALL: .text+0x43a8] 
    /*00005110*/ CMP         R0, #1 
    /*00005114*/ BEQ         VPSS_SetChnAttr_x51d0
    VPSS_SetChnAttr_x5118:
    /*00005118*/ ADD         R6, R6, #48                 @ 0x30 
    /*0000511c*/ ADD         R1, SP, #20 
    /*00005120*/ ADD         R6, FP, R6 
    /*00005124*/ MOV         R0, R6 
    /*00005128*/ BL          0x0000000000005128          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000512c*/ MOV         R3, #72                     @ 0x48 
    /*00005130*/ MLA         SL, R3, R4, SL 
    /*00005134*/ LDR         R3, [SL, #44]               @ 0x2c 
    /*00005138*/ CMP         R3, #0 
    /*0000513c*/ BNE         VPSS_SetChnAttr_x514c
    /*00005140*/ LDR         R3, [SP, #24] 
    /*00005144*/ CMP         R3, #1 
    /*00005148*/ BEQ         VPSS_SetChnAttr_x5158
    VPSS_SetChnAttr_x514c:
    /*0000514c*/ LDR         R3, [SP, #68]               @ 0x44 
    /*00005150*/ CMP         R3, #0 
    /*00005154*/ BNE         VPSS_SetChnAttr_x5174
    VPSS_SetChnAttr_x5158:
    /*00005158*/ ADD         R3, R7, R4, LSL #5 
    /*0000515c*/ LDR         R3, [R3, #1704]             @ 0x6a8 
    /*00005160*/ CMP         R3, #0 
    /*00005164*/ BEQ         VPSS_SetChnAttr_x5174
    /*00005168*/ MOV         R1, R4 
    /*0000516c*/ MOV         R0, R5 
    /*00005170*/ BL          0x0000000000005170          @ VpssCleanUserList [R_ARM_CALL: .text+0x12500] 
    VPSS_SetChnAttr_x5174:
    /*00005174*/ MOV         R2, #72                     @ 0x48 
    /*00005178*/ ADD         SL, R7, R4, LSL #2 
    /*0000517c*/ MLA         R0, R2, R4, R7 
    /*00005180*/ ADD         R1, SP, #24 
    /*00005184*/ MOV         R7, #1 
    /*00005188*/ ADD         R0, R0, #812                @ 0x32c 
    /*0000518c*/ BL          0x000000000000518C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005190*/ ADD         R2, SP, #24 
    /*00005194*/ MOV         R1, R4 
    /*00005198*/ MOV         R0, R5 
    /*0000519c*/ STR         R7, [SL, #768]              @ 0x300 
    /*000051a0*/ BL          0x00000000000051A0          @ VPSS_DRV_SetChnAttr [R_ARM_CALL: .text+0x18e5c] 
    /*000051a4*/ LDR         R3, [SP, #68]               @ 0x44 
    /*000051a8*/ MOV         R0, R6 
    /*000051ac*/ STR         R7, [SL, #1604]             @ 0x644 
    /*000051b0*/ ADD         R1, SP, #20 
    /*000051b4*/ STR         R3, [SL, #1648]             @ 0x670 
    /*000051b8*/ BL          0x00000000000051B8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000051bc*/ MOV         R0, R8 
    /*000051c0*/ BL          0x00000000000051C0          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_SetChnAttr_x51c4:
    /*000051c4*/ MOV         R0, R9 
    /*000051c8*/ ADD         SP, SP, #100                @ 0x64 
    /*000051cc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_SetChnAttr_x51d0:
    /*000051d0*/ ADD         R2, SP, #24 
    /*000051d4*/ MOV         R1, R4 
    /*000051d8*/ MOV         R0, R5 
    /*000051dc*/ BL          0x00000000000051DC          @ VPSS_DRV_CheckChnStaticAttrForGdc [R_ARM_CALL: .text+0x190c8] 
    /*000051e0*/ CMP         R0, #0 
    /*000051e4*/ BEQ         VPSS_SetChnAttr_x5118
    /*000051e8*/ MOVW        R3, #3975                   @ 0xf87 
    /*000051ec*/ MOV         R1, #7 
    /*000051f0*/ STR         R3, [SP] 
    /*000051f4*/ MOVW        R2, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe14] 
    /*000051f8*/ LDR         R3, [PC, #244]              @ 0x00000000000052f4 
    /*000051fc*/ MOVT        R2, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe14] 
    /*00005200*/ STR         R4, [SP, #8] 
    /*00005204*/ MOV         R0, #3 
    /*00005208*/ STR         R5, [SP, #4] 
    /*0000520c*/ MOVW        R9, #32777                  @ 0x8009 
    /*00005210*/ BL          0x0000000000005210          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005214*/ MOV         R0, R8 
    /*00005218*/ BL          0x0000000000005218          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000521c*/ MOVT        R9, #40967                  @ 0xa007 
    /*00005220*/ B           VPSS_SetChnAttr_x51c4
    VPSS_SetChnAttr_x5224:
    /*00005224*/ BL          0x00000000000001B0 
    /*00005228*/ CMP         R0, #0 
    /*0000522c*/ BEQ         VPSS_SetChnAttr_x5074
    /*00005230*/ MOVW        R9, #32769                  @ 0x8001 
    /*00005234*/ MOVT        R9, #40967                  @ 0xa007 
    /*00005238*/ B           VPSS_SetChnAttr_x51c4
    VPSS_SetChnAttr_x523c:
    /*0000523c*/ BL          0x00000000000001EC 
    /*00005240*/ CMP         R0, #0 
    /*00005244*/ BNE         VPSS_SetChnAttr_x5290
    VPSS_SetChnAttr_x5248:
    /*00005248*/ MOVW        R3, #3942                   @ 0xf66 
    /*0000524c*/ STR         R4, [SP, #4] 
    /*00005250*/ STR         R3, [SP] 
    /*00005254*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa84] 
    /*00005258*/ LDR         R3, [PC, #148]              @ 0x00000000000052f4 
    /*0000525c*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa84] 
    /*00005260*/ MOV         R1, #7 
    /*00005264*/ MOV         R0, #3 
    /*00005268*/ MOVW        R9, #32770                  @ 0x8002 
    /*0000526c*/ BL          0x000000000000526C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005270*/ MOVT        R9, #40967                  @ 0xa007 
    /*00005274*/ B           VPSS_SetChnAttr_x51c4
    VPSS_SetChnAttr_x5278:
    /*00005278*/ BL          0x0000000000000174 
    /*0000527c*/ CMP         R0, #0 
    /*00005280*/ MOVWNE      R9, #32774                  @ 0x8006 
    /*00005284*/ MOVTNE      R9, #40967                  @ 0xa007 
    /*00005288*/ BNE         VPSS_SetChnAttr_x51c4
    /*0000528c*/ B           VPSS_SetChnAttr_x506c
    VPSS_SetChnAttr_x5290:
    /*00005290*/ MOVW        R9, #32770                  @ 0x8002 
    /*00005294*/ MOVT        R9, #40967                  @ 0xa007 
    /*00005298*/ B           VPSS_SetChnAttr_x51c4
    VPSS_SetChnAttr_x529c:
    /*0000529c*/ MOV         R9, #65024                  @ 0xfe00 
    /*000052a0*/ MOVT        R9, #65535                  @ 0xffff 
    /*000052a4*/ B           VPSS_SetChnAttr_x51c4
    VPSS_SetChnAttr_x52a8:
    /*000052a8*/ MOV         R0, R8 
    /*000052ac*/ MOVW        R9, #32771                  @ 0x8003 
    /*000052b0*/ BL          0x00000000000052B0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000052b4*/ MOVT        R9, #40967                  @ 0xa007 
    /*000052b8*/ B           VPSS_SetChnAttr_x51c4
    VPSS_SetChnAttr_x52bc:
    /*000052bc*/ MOVW        R3, #3953                   @ 0xf71 
    /*000052c0*/ MOV         R1, #7 
    /*000052c4*/ STR         R3, [SP] 
    /*000052c8*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*000052cc*/ LDR         R3, [PC, #32]               @ 0x00000000000052f4 
    /*000052d0*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*000052d4*/ STR         R5, [SP, #4] 
    /*000052d8*/ MOV         R0, #3 
    /*000052dc*/ BL          0x00000000000052DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000052e0*/ MOV         R0, R8 
    /*000052e4*/ MOVW        R9, #32773                  @ 0x8005 
    /*000052e8*/ BL          0x00000000000052E8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000052ec*/ MOVT        R9, #40967                  @ 0xa007 
    /*000052f0*/ B           VPSS_SetChnAttr_x51c4
    /*000052f4*/ ANDEQ       R0, R0, R8, LSR R3 
FUNC_END VPSS_SetChnAttr


FUNC_BEGIN VPSS_GetChnAttr
    /*000052f8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000052fc*/ SUBS        R8, R2, #0 
    /*00005300*/ SUB         SP, SP, #20 
    /*00005304*/ MOV         R6, R0 
    /*00005308*/ MOV         R7, R1 
    /*0000530c*/ BEQ         VPSS_GetChnAttr_x53f8
    VPSS_GetChnAttr_x5310:
    /*00005310*/ CMP         R6, #15 
    /*00005314*/ BHI         VPSS_GetChnAttr_x53a4
    VPSS_GetChnAttr_x5318:
    /*00005318*/ CMP         R7, #10 
    /*0000531c*/ BHI         VPSS_GetChnAttr_x53bc
    /*00005320*/ CMP         R7, #2 
    /*00005324*/ BHI         VPSS_GetChnAttr_x53c8
    /*00005328*/ MOV         R4, #92                     @ 0x5c 
    /*0000532c*/ MOVW        FP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005330*/ MUL         R4, R4, R6 
    /*00005334*/ MOVT        FP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005338*/ ADD         R5, FP, #64                 @ 0x40 
    /*0000533c*/ ADD         R9, R4, #44                 @ 0x2c 
    /*00005340*/ ADD         R9, R5, R9 
    /*00005344*/ MOV         R0, R9 
    /*00005348*/ BL          0x0000000000005348          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000534c*/ SUBS        SL, R0, #0 
    /*00005350*/ BNE         VPSS_GetChnAttr_x541c
    /*00005354*/ LDR         R3, [FP, R6, LSL #2] 
    /*00005358*/ CMP         R3, #0 
    /*0000535c*/ BEQ         VPSS_GetChnAttr_x5428
    /*00005360*/ ADD         R4, R4, #48                 @ 0x30 
    /*00005364*/ ADD         R1, SP, #12 
    /*00005368*/ ADD         R4, R5, R4 
    /*0000536c*/ MOV         R0, R4 
    /*00005370*/ BL          0x0000000000005370          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00005374*/ MOV         R2, R8 
    /*00005378*/ MOV         R1, R7 
    /*0000537c*/ MOV         R0, R6 
    /*00005380*/ BL          0x0000000000005380          @ VPSS_DRV_GetChnAttr [R_ARM_CALL: .text+0x18fa4] 
    /*00005384*/ ADD         R1, SP, #12 
    /*00005388*/ MOV         R0, R4 
    /*0000538c*/ BL          0x000000000000538C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00005390*/ MOV         R0, R9 
    /*00005394*/ BL          0x0000000000005394          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005398*/ MOV         R0, SL 
    VPSS_GetChnAttr_x539c:
    /*0000539c*/ ADD         SP, SP, #20 
    /*000053a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_GetChnAttr_x53a4:
    /*000053a4*/ BL          0x00000000000001B0 
    /*000053a8*/ CMP         R0, #0 
    /*000053ac*/ BEQ         VPSS_GetChnAttr_x5318
    /*000053b0*/ MOVW        R0, #32769                  @ 0x8001 
    /*000053b4*/ MOVT        R0, #40967                  @ 0xa007 
    /*000053b8*/ B           VPSS_GetChnAttr_x539c
    VPSS_GetChnAttr_x53bc:
    /*000053bc*/ BL          0x00000000000001EC 
    /*000053c0*/ CMP         R0, #0 
    /*000053c4*/ BNE         VPSS_GetChnAttr_x5410
    VPSS_GetChnAttr_x53c8:
    /*000053c8*/ MOVW        R3, #4037                   @ 0xfc5 
    /*000053cc*/ STR         R7, [SP, #4] 
    /*000053d0*/ STR         R3, [SP] 
    /*000053d4*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa84] 
    /*000053d8*/ LDR         R3, [PC, #128]              @ 0x0000000000005460 
    /*000053dc*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa84] 
    /*000053e0*/ MOV         R1, #7 
    /*000053e4*/ MOV         R0, #3 
    /*000053e8*/ BL          0x00000000000053E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000053ec*/ MOVW        R0, #32770                  @ 0x8002 
    /*000053f0*/ MOVT        R0, #40967                  @ 0xa007 
    /*000053f4*/ B           VPSS_GetChnAttr_x539c
    VPSS_GetChnAttr_x53f8:
    /*000053f8*/ BL          0x0000000000000174 
    /*000053fc*/ CMP         R0, #0 
    /*00005400*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*00005404*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*00005408*/ BNE         VPSS_GetChnAttr_x539c
    /*0000540c*/ B           VPSS_GetChnAttr_x5310
    VPSS_GetChnAttr_x5410:
    /*00005410*/ MOVW        R0, #32770                  @ 0x8002 
    /*00005414*/ MOVT        R0, #40967                  @ 0xa007 
    /*00005418*/ B           VPSS_GetChnAttr_x539c
    VPSS_GetChnAttr_x541c:
    /*0000541c*/ MOV         R0, #65024                  @ 0xfe00 
    /*00005420*/ MOVT        R0, #65535                  @ 0xffff 
    /*00005424*/ B           VPSS_GetChnAttr_x539c
    VPSS_GetChnAttr_x5428:
    /*00005428*/ MOVW        R3, #4046                   @ 0xfce 
    /*0000542c*/ MOV         R1, #7 
    /*00005430*/ STR         R3, [SP] 
    /*00005434*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00005438*/ LDR         R3, [PC, #32]               @ 0x0000000000005460 
    /*0000543c*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00005440*/ STR         R6, [SP, #4] 
    /*00005444*/ MOV         R0, #3 
    /*00005448*/ BL          0x0000000000005448          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000544c*/ MOV         R0, R9 
    /*00005450*/ BL          0x0000000000005450          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005454*/ MOVW        R0, #32773                  @ 0x8005 
    /*00005458*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000545c*/ B           VPSS_GetChnAttr_x539c
    /*00005460*/ ANDEQ       R0, R0, R8, ASR #6 
FUNC_END VPSS_GetChnAttr


FUNC_BEGIN VPSS_SetGrpCropCfg
    /*00005464*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00005468*/ SUBS        R9, R1, #0 
    /*0000546c*/ SUB         SP, SP, #20 
    /*00005470*/ MOV         R4, R0 
    /*00005474*/ BEQ         VPSS_SetGrpCropCfg_x5540
    VPSS_SetGrpCropCfg_x5478:
    /*00005478*/ CMP         R4, #15 
    /*0000547c*/ BHI         VPSS_SetGrpCropCfg_x5528
    VPSS_SetGrpCropCfg_x5480:
    /*00005480*/ MOV         R5, #92                     @ 0x5c 
    /*00005484*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005488*/ MUL         R5, R5, R4 
    /*0000548c*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005490*/ ADD         R7, R6, #64                 @ 0x40 
    /*00005494*/ ADD         R8, R5, #44                 @ 0x2c 
    /*00005498*/ ADD         R8, R7, R8 
    /*0000549c*/ MOV         R0, R8 
    /*000054a0*/ BL          0x00000000000054A0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000054a4*/ CMP         R0, #0 
    /*000054a8*/ BNE         VPSS_SetGrpCropCfg_x5558
    /*000054ac*/ LDR         R3, [R6, R4, LSL #2] 
    /*000054b0*/ CMP         R3, #0 
    /*000054b4*/ STREQ       R4, [SP, #4] 
    /*000054b8*/ MOVWEQ      R3, #4077                   @ 0xfed 
    /*000054bc*/ BEQ         VPSS_SetGrpCropCfg_x5580
    /*000054c0*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000054c4*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000054c8*/ LDR         R3, [R3, R4, LSL #2] 
    /*000054cc*/ CMP         R3, #0 
    /*000054d0*/ BEQ         VPSS_SetGrpCropCfg_x5578
    /*000054d4*/ MOV         R1, R9 
    /*000054d8*/ MOV         R0, R4 
    /*000054dc*/ BL          0x00000000000054DC          @ VPSS_DRV_CheckGrpCropCfg [R_ARM_CALL: .text+0x1b848] 
    /*000054e0*/ SUBS        R6, R0, #0 
    /*000054e4*/ BNE         VPSS_SetGrpCropCfg_x5564
    /*000054e8*/ ADD         R5, R5, #48                 @ 0x30 
    /*000054ec*/ ADD         R1, SP, #12 
    /*000054f0*/ ADD         R5, R7, R5 
    /*000054f4*/ MOV         R0, R5 
    /*000054f8*/ BL          0x00000000000054F8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000054fc*/ MOV         R1, R9 
    /*00005500*/ MOV         R0, R4 
    /*00005504*/ BL          0x0000000000005504          @ VPSS_DRV_SetGrpCrop [R_ARM_CALL: .text+0x18fdc] 
    /*00005508*/ MOV         R0, R5 
    /*0000550c*/ ADD         R1, SP, #12 
    /*00005510*/ BL          0x0000000000005510          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00005514*/ MOV         R0, R8 
    /*00005518*/ BL          0x0000000000005518          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_SetGrpCropCfg_x551c:
    /*0000551c*/ MOV         R0, R6 
    /*00005520*/ ADD         SP, SP, #20 
    /*00005524*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_SetGrpCropCfg_x5528:
    /*00005528*/ BL          0x00000000000001B0 
    /*0000552c*/ CMP         R0, #0 
    /*00005530*/ BEQ         VPSS_SetGrpCropCfg_x5480
    /*00005534*/ MOVW        R6, #32769                  @ 0x8001 
    /*00005538*/ MOVT        R6, #40967                  @ 0xa007 
    /*0000553c*/ B           VPSS_SetGrpCropCfg_x551c
    VPSS_SetGrpCropCfg_x5540:
    /*00005540*/ BL          0x0000000000000174 
    /*00005544*/ CMP         R0, #0 
    /*00005548*/ MOVWNE      R6, #32774                  @ 0x8006 
    /*0000554c*/ MOVTNE      R6, #40967                  @ 0xa007 
    /*00005550*/ BNE         VPSS_SetGrpCropCfg_x551c
    /*00005554*/ B           VPSS_SetGrpCropCfg_x5478
    VPSS_SetGrpCropCfg_x5558:
    /*00005558*/ MOV         R6, #65024                  @ 0xfe00 
    /*0000555c*/ MOVT        R6, #65535                  @ 0xffff 
    /*00005560*/ B           VPSS_SetGrpCropCfg_x551c
    VPSS_SetGrpCropCfg_x5564:
    /*00005564*/ MOV         R0, R8 
    /*00005568*/ MOVW        R6, #32771                  @ 0x8003 
    /*0000556c*/ BL          0x000000000000556C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005570*/ MOVT        R6, #40967                  @ 0xa007 
    /*00005574*/ B           VPSS_SetGrpCropCfg_x551c
    VPSS_SetGrpCropCfg_x5578:
    /*00005578*/ MOVW        R3, #4085                   @ 0xff5 
    /*0000557c*/ STR         R4, [SP, #4] 
    VPSS_SetGrpCropCfg_x5580:
    /*00005580*/ STR         R3, [SP] 
    /*00005584*/ MOV         R1, #7 
    /*00005588*/ LDR         R3, [PC, #32]               @ 0x00000000000055b0 
    /*0000558c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00005590*/ MOV         R0, #3 
    /*00005594*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00005598*/ BL          0x0000000000005598          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000559c*/ MOV         R0, R8 
    /*000055a0*/ MOVW        R6, #32773                  @ 0x8005 
    /*000055a4*/ BL          0x00000000000055A4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000055a8*/ MOVT        R6, #40967                  @ 0xa007 
    /*000055ac*/ B           VPSS_SetGrpCropCfg_x551c
    /*000055b0*/ ANDEQ       R0, R0, R8, ASR R3 
FUNC_END VPSS_SetGrpCropCfg


FUNC_BEGIN VPSS_GetGrpCropCfg
    /*000055b4*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000055b8*/ SUBS        R7, R1, #0 
    /*000055bc*/ SUB         SP, SP, #12 
    /*000055c0*/ MOV         R5, R0 
    /*000055c4*/ BEQ         VPSS_GetGrpCropCfg_x563c
    VPSS_GetGrpCropCfg_x55c8:
    /*000055c8*/ CMP         R5, #15 
    /*000055cc*/ BHI         VPSS_GetGrpCropCfg_x5624
    VPSS_GetGrpCropCfg_x55d0:
    /*000055d0*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000055d4*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000055d8*/ MOV         R4, #92                     @ 0x5c 
    /*000055dc*/ MLA         R4, R4, R5, R6 
    /*000055e0*/ ADD         R4, R4, #108                @ 0x6c 
    /*000055e4*/ MOV         R0, R4 
    /*000055e8*/ BL          0x00000000000055E8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000055ec*/ CMP         R0, #0 
    /*000055f0*/ BNE         VPSS_GetGrpCropCfg_x5654
    /*000055f4*/ LDR         R3, [R6, R5, LSL #2] 
    /*000055f8*/ CMP         R3, #0 
    /*000055fc*/ BEQ         VPSS_GetGrpCropCfg_x5660
    /*00005600*/ MOV         R0, R5 
    /*00005604*/ MOV         R1, R7 
    /*00005608*/ BL          0x0000000000005608          @ VPSS_DRV_GetGrpCrop [R_ARM_CALL: .text+0x1a57c] 
    /*0000560c*/ MOV         R5, R0 
    /*00005610*/ MOV         R0, R4 
    /*00005614*/ BL          0x0000000000005614          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_GetGrpCropCfg_x5618:
    /*00005618*/ MOV         R0, R5 
    /*0000561c*/ ADD         SP, SP, #12 
    /*00005620*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_GetGrpCropCfg_x5624:
    /*00005624*/ BL          0x00000000000001B0 
    /*00005628*/ CMP         R0, #0 
    /*0000562c*/ BEQ         VPSS_GetGrpCropCfg_x55d0
    /*00005630*/ MOVW        R5, #32769                  @ 0x8001 
    /*00005634*/ MOVT        R5, #40967                  @ 0xa007 
    /*00005638*/ B           VPSS_GetGrpCropCfg_x5618
    VPSS_GetGrpCropCfg_x563c:
    /*0000563c*/ BL          0x0000000000000174 
    /*00005640*/ CMP         R0, #0 
    /*00005644*/ MOVWNE      R5, #32774                  @ 0x8006 
    /*00005648*/ MOVTNE      R5, #40967                  @ 0xa007 
    /*0000564c*/ BNE         VPSS_GetGrpCropCfg_x5618
    /*00005650*/ B           VPSS_GetGrpCropCfg_x55c8
    VPSS_GetGrpCropCfg_x5654:
    /*00005654*/ MOV         R5, #65024                  @ 0xfe00 
    /*00005658*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000565c*/ B           VPSS_GetGrpCropCfg_x5618
    VPSS_GetGrpCropCfg_x5660:
    /*00005660*/ STR         R5, [SP, #4] 
    /*00005664*/ MOVW        R3, #4122                   @ 0x101a 
    /*00005668*/ MOV         R1, #7 
    /*0000566c*/ STR         R3, [SP] 
    /*00005670*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00005674*/ LDR         R3, [PC, #28]               @ 0x0000000000005698 
    /*00005678*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*0000567c*/ MOV         R0, #3 
    /*00005680*/ BL          0x0000000000005680          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005684*/ MOV         R0, R4 
    /*00005688*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000568c*/ BL          0x000000000000568C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005690*/ MOVT        R5, #40967                  @ 0xa007 
    /*00005694*/ B           VPSS_GetGrpCropCfg_x5618
    /*00005698*/ ANDEQ       R0, R0, IP, ROR #6 
FUNC_END VPSS_GetGrpCropCfg


FUNC_BEGIN VPSS_SetChnCropCfg
    /*0000569c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000056a0*/ SUBS        R7, R2, #0 
    /*000056a4*/ SUB         SP, SP, #24 
    /*000056a8*/ MOV         R4, R0 
    /*000056ac*/ MOV         R6, R1 
    /*000056b0*/ BEQ         VPSS_SetChnCropCfg_x5718
    VPSS_SetChnCropCfg_x56b4:
    /*000056b4*/ CMP         R4, #15 
    /*000056b8*/ BHI         VPSS_SetChnCropCfg_x5700
    VPSS_SetChnCropCfg_x56bc:
    /*000056bc*/ CMP         R6, #10 
    /*000056c0*/ BHI         VPSS_SetChnCropCfg_x5730
    VPSS_SetChnCropCfg_x56c4:
    /*000056c4*/ MOV         R9, #92                     @ 0x5c 
    /*000056c8*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000056cc*/ MUL         R9, R9, R4 
    /*000056d0*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000056d4*/ ADD         SL, R5, #64                 @ 0x40 
    /*000056d8*/ ADD         R8, R9, #44                 @ 0x2c 
    /*000056dc*/ ADD         R8, SL, R8 
    /*000056e0*/ MOV         R0, R8 
    /*000056e4*/ BL          0x00000000000056E4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000056e8*/ CMP         R0, #0 
    /*000056ec*/ MOVNE       R0, #65024                  @ 0xfe00 
    /*000056f0*/ MOVTNE      R0, #65535                  @ 0xffff 
    /*000056f4*/ BEQ         VPSS_SetChnCropCfg_x5748
    VPSS_SetChnCropCfg_x56f8:
    /*000056f8*/ ADD         SP, SP, #24 
    /*000056fc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_SetChnCropCfg_x5700:
    /*00005700*/ BL          0x00000000000001B0 
    /*00005704*/ CMP         R0, #0 
    /*00005708*/ MOVWNE      R0, #32769                  @ 0x8001 
    /*0000570c*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*00005710*/ BNE         VPSS_SetChnCropCfg_x56f8
    /*00005714*/ B           VPSS_SetChnCropCfg_x56bc
    VPSS_SetChnCropCfg_x5718:
    /*00005718*/ BL          0x0000000000000174 
    /*0000571c*/ CMP         R0, #0 
    /*00005720*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*00005724*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*00005728*/ BNE         VPSS_SetChnCropCfg_x56f8
    /*0000572c*/ B           VPSS_SetChnCropCfg_x56b4
    VPSS_SetChnCropCfg_x5730:
    /*00005730*/ BL          0x00000000000001EC 
    /*00005734*/ CMP         R0, #0 
    /*00005738*/ MOVWNE      R0, #32770                  @ 0x8002 
    /*0000573c*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*00005740*/ BNE         VPSS_SetChnCropCfg_x56f8
    /*00005744*/ B           VPSS_SetChnCropCfg_x56c4
    VPSS_SetChnCropCfg_x5748:
    /*00005748*/ LDR         R3, [R5, R4, LSL #2] 
    /*0000574c*/ CMP         R3, #0 
    /*00005750*/ BEQ         VPSS_SetChnCropCfg_x57f8
    /*00005754*/ ADD         R2, R3, R6, LSL #2 
    /*00005758*/ LDR         R2, [R2, #1604]             @ 0x644 
    /*0000575c*/ CMP         R2, #0 
    /*00005760*/ BEQ         VPSS_SetChnCropCfg_x57bc
    /*00005764*/ CMP         R6, #2 
    /*00005768*/ BHI         VPSS_SetChnCropCfg_x5830
    /*0000576c*/ MOV         R2, #72                     @ 0x48 
    /*00005770*/ MLA         R3, R2, R6, R3 
    /*00005774*/ LDR         R3, [R3, #860]              @ 0x35c 
    /*00005778*/ CMP         R3, #0 
    /*0000577c*/ BEQ         VPSS_SetChnCropCfg_x5860
    /*00005780*/ MOVW        R2, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe9c] 
    /*00005784*/ MOVT        R2, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe9c] 
    /*00005788*/ MOVW        R3, #4177                   @ 0x1051 
    /*0000578c*/ STR         R6, [SP, #8] 
    /*00005790*/ STR         R4, [SP, #4] 
    /*00005794*/ STR         R3, [SP] 
    VPSS_SetChnCropCfg_x5798:
    /*00005798*/ LDR         R3, [PC, #376]              @ 0x0000000000005918 
    /*0000579c*/ MOV         R1, #7 
    /*000057a0*/ MOV         R0, #3 
    /*000057a4*/ BL          0x00000000000057A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000057a8*/ MOV         R0, R8 
    /*000057ac*/ BL          0x00000000000057AC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000057b0*/ MOVW        R0, #32777                  @ 0x8009 
    /*000057b4*/ MOVT        R0, #40967                  @ 0xa007 
    /*000057b8*/ B           VPSS_SetChnCropCfg_x56f8
    VPSS_SetChnCropCfg_x57bc:
    /*000057bc*/ MOVW        R3, #4158                   @ 0x103e 
    /*000057c0*/ MOV         R1, #7 
    /*000057c4*/ STR         R3, [SP] 
    /*000057c8*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe58] 
    /*000057cc*/ LDR         R3, [PC, #324]              @ 0x0000000000005918 
    /*000057d0*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe58] 
    /*000057d4*/ STR         R6, [SP, #8] 
    /*000057d8*/ MOV         R0, #3 
    /*000057dc*/ STR         R4, [SP, #4] 
    /*000057e0*/ BL          0x00000000000057E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000057e4*/ MOV         R0, R8 
    /*000057e8*/ BL          0x00000000000057E8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000057ec*/ MOVW        R0, #32784                  @ 0x8010 
    /*000057f0*/ MOVT        R0, #40967                  @ 0xa007 
    /*000057f4*/ B           VPSS_SetChnCropCfg_x56f8
    VPSS_SetChnCropCfg_x57f8:
    /*000057f8*/ MOVW        R3, #4151                   @ 0x1037 
    /*000057fc*/ MOV         R1, #7 
    /*00005800*/ STR         R3, [SP] 
    /*00005804*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00005808*/ LDR         R3, [PC, #264]              @ 0x0000000000005918 
    /*0000580c*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00005810*/ STR         R4, [SP, #4] 
    /*00005814*/ MOV         R0, #3 
    /*00005818*/ BL          0x0000000000005818          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000581c*/ MOV         R0, R8 
    /*00005820*/ BL          0x0000000000005820          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005824*/ MOVW        R0, #32773                  @ 0x8005 
    /*00005828*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000582c*/ B           VPSS_SetChnCropCfg_x56f8
    VPSS_SetChnCropCfg_x5830:
    /*00005830*/ MOV         R2, R7 
    /*00005834*/ MOV         R1, R6 
    /*00005838*/ MOV         R0, R4 
    /*0000583c*/ BL          0x000000000000583C          @ VPSS_DRV_CheckExtChnCrop [R_ARM_CALL: .text+0x1b8ac] 
    /*00005840*/ MOV         R5, R0 
    VPSS_SetChnCropCfg_x5844:
    /*00005844*/ CMP         R5, #0 
    /*00005848*/ BEQ         VPSS_SetChnCropCfg_x58a0
    /*0000584c*/ MOV         R0, R8 
    /*00005850*/ BL          0x0000000000005850          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005854*/ MOVW        R0, #32771                  @ 0x8003 
    /*00005858*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000585c*/ B           VPSS_SetChnCropCfg_x56f8
    VPSS_SetChnCropCfg_x5860:
    /*00005860*/ MOV         R1, R6 
    /*00005864*/ MOV         R0, R4 
    /*00005868*/ BL          0x0000000000005868          @ VPSS_DRV_NeedCallGDCFunction [R_ARM_CALL: .text+0x19acc] 
    /*0000586c*/ CMP         R0, #1 
    /*00005870*/ BEQ         VPSS_SetChnCropCfg_x58e0
    /*00005874*/ MOV         R1, R6 
    /*00005878*/ MOV         R0, R4 
    /*0000587c*/ BL          0x000000000000587C          @ VPSS_IsPhyChnAttachFishEye [R_ARM_CALL: .text+0x43a8] 
    /*00005880*/ CMP         R0, #1 
    /*00005884*/ BEQ         VPSS_SetChnCropCfg_x58fc
    /*00005888*/ MOV         R2, R7 
    /*0000588c*/ MOV         R1, R6 
    /*00005890*/ MOV         R0, R4 
    /*00005894*/ BL          0x0000000000005894          @ VPSS_DRV_CheckChnCropCfg [R_ARM_CALL: .text+0x1b8f0] 
    /*00005898*/ MOV         R5, R0 
    /*0000589c*/ B           VPSS_SetChnCropCfg_x5844
    VPSS_SetChnCropCfg_x58a0:
    /*000058a0*/ ADD         R9, R9, #48                 @ 0x30 
    /*000058a4*/ ADD         R1, SP, #20 
    /*000058a8*/ ADD         SL, SL, R9 
    /*000058ac*/ MOV         R0, SL 
    /*000058b0*/ BL          0x00000000000058B0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000058b4*/ MOV         R2, R7 
    /*000058b8*/ MOV         R1, R6 
    /*000058bc*/ MOV         R0, R4 
    /*000058c0*/ BL          0x00000000000058C0          @ VPSS_DRV_SetChnCrop [R_ARM_CALL: .text+0x19024] 
    /*000058c4*/ ADD         R1, SP, #20 
    /*000058c8*/ MOV         R0, SL 
    /*000058cc*/ BL          0x00000000000058CC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000058d0*/ MOV         R0, R8 
    /*000058d4*/ BL          0x00000000000058D4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000058d8*/ MOV         R0, R5 
    /*000058dc*/ B           VPSS_SetChnCropCfg_x56f8
    VPSS_SetChnCropCfg_x58e0:
    /*000058e0*/ MOVW        R3, #4185                   @ 0x1059 
    /*000058e4*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xefc] 
    /*000058e8*/ STR         R6, [SP, #8] 
    /*000058ec*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0xefc] 
    /*000058f0*/ STR         R4, [SP, #4] 
    /*000058f4*/ STR         R3, [SP] 
    /*000058f8*/ B           VPSS_SetChnCropCfg_x5798
    VPSS_SetChnCropCfg_x58fc:
    /*000058fc*/ MOVW        R3, #4193                   @ 0x1061 
    /*00005900*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf50] 
    /*00005904*/ STR         R6, [SP, #8] 
    /*00005908*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf50] 
    /*0000590c*/ STR         R4, [SP, #4] 
    /*00005910*/ STR         R3, [SP] 
    /*00005914*/ B           VPSS_SetChnCropCfg_x5798
    /*00005918*/ ANDEQ       R0, R0, R0, LSL #7 
FUNC_END VPSS_SetChnCropCfg


FUNC_BEGIN VPSS_GetChnCropCfg
    /*0000591c*/ CMP         R0, #15 
    /*00005920*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00005924*/ MOV         R4, R0 
    /*00005928*/ SUB         SP, SP, #12 
    /*0000592c*/ MOV         R6, R1 
    /*00005930*/ MOV         R7, R2 
    /*00005934*/ BHI         VPSS_GetChnCropCfg_x59a0
    VPSS_GetChnCropCfg_x5938:
    /*00005938*/ CMP         R6, #10 
    /*0000593c*/ BHI         VPSS_GetChnCropCfg_x59bc
    VPSS_GetChnCropCfg_x5940:
    /*00005940*/ CMP         R7, #0 
    /*00005944*/ BEQ         VPSS_GetChnCropCfg_x59d4
    VPSS_GetChnCropCfg_x5948:
    /*00005948*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000594c*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005950*/ MOV         R8, #92                     @ 0x5c 
    /*00005954*/ MLA         R8, R8, R4, R9 
    /*00005958*/ ADD         R8, R8, #108                @ 0x6c 
    /*0000595c*/ MOV         R0, R8 
    /*00005960*/ BL          0x0000000000005960          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00005964*/ SUBS        R5, R0, #0 
    /*00005968*/ MOVNE       R0, #65024                  @ 0xfe00 
    /*0000596c*/ MOVTNE      R0, #65535                  @ 0xffff 
    /*00005970*/ BNE         VPSS_GetChnCropCfg_x59b4
    /*00005974*/ LDR         R3, [R9, R4, LSL #2] 
    /*00005978*/ CMP         R3, #0 
    /*0000597c*/ BEQ         VPSS_GetChnCropCfg_x59ec
    /*00005980*/ MOV         R2, R7 
    /*00005984*/ MOV         R1, R6 
    /*00005988*/ MOV         R0, R4 
    /*0000598c*/ BL          0x000000000000598C          @ VPSS_DRV_GetChnCrop [R_ARM_CALL: .text+0x1908c] 
    /*00005990*/ MOV         R0, R8 
    /*00005994*/ BL          0x0000000000005994          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005998*/ MOV         R0, R5 
    /*0000599c*/ B           VPSS_GetChnCropCfg_x59b4
    VPSS_GetChnCropCfg_x59a0:
    /*000059a0*/ BL          0x00000000000001B0 
    /*000059a4*/ CMP         R0, #0 
    /*000059a8*/ MOVWNE      R0, #32769                  @ 0x8001 
    /*000059ac*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*000059b0*/ BEQ         VPSS_GetChnCropCfg_x5938
    VPSS_GetChnCropCfg_x59b4:
    /*000059b4*/ ADD         SP, SP, #12 
    /*000059b8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_GetChnCropCfg_x59bc:
    /*000059bc*/ BL          0x00000000000001EC 
    /*000059c0*/ CMP         R0, #0 
    /*000059c4*/ MOVWNE      R0, #32770                  @ 0x8002 
    /*000059c8*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*000059cc*/ BNE         VPSS_GetChnCropCfg_x59b4
    /*000059d0*/ B           VPSS_GetChnCropCfg_x5940
    VPSS_GetChnCropCfg_x59d4:
    /*000059d4*/ BL          0x0000000000000174 
    /*000059d8*/ CMP         R0, #0 
    /*000059dc*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*000059e0*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*000059e4*/ BNE         VPSS_GetChnCropCfg_x59b4
    /*000059e8*/ B           VPSS_GetChnCropCfg_x5948
    VPSS_GetChnCropCfg_x59ec:
    /*000059ec*/ MOVW        R3, #4235                   @ 0x108b 
    /*000059f0*/ MOV         R1, #7 
    /*000059f4*/ STR         R3, [SP] 
    /*000059f8*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*000059fc*/ LDR         R3, [PC, #32]               @ 0x0000000000005a24 
    /*00005a00*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00005a04*/ STR         R4, [SP, #4] 
    /*00005a08*/ MOV         R0, #3 
    /*00005a0c*/ BL          0x0000000000005A0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005a10*/ MOV         R0, R8 
    /*00005a14*/ BL          0x0000000000005A14          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005a18*/ MOVW        R0, #32773                  @ 0x8005 
    /*00005a1c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00005a20*/ B           VPSS_GetChnCropCfg_x59b4
    /*00005a24*/ MULEQ       R0, R4, R3 
FUNC_END VPSS_GetChnCropCfg


FUNC_BEGIN VPSS_GetChnOutPutSize
    /*00005a28*/ CMP         R0, #15 
    /*00005a2c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00005a30*/ MOV         R6, R0 
    /*00005a34*/ SUB         SP, SP, #28 
    /*00005a38*/ MOV         R9, R1 
    /*00005a3c*/ MOV         R8, R2 
    /*00005a40*/ BHI         VPSS_GetChnOutPutSize_x5ad8
    VPSS_GetChnOutPutSize_x5a44:
    /*00005a44*/ CMP         R8, #0 
    /*00005a48*/ BEQ         VPSS_GetChnOutPutSize_x5af0
    VPSS_GetChnOutPutSize_x5a4c:
    /*00005a4c*/ MOV         R4, #92                     @ 0x5c 
    /*00005a50*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005a54*/ MUL         R4, R4, R6 
    /*00005a58*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005a5c*/ ADD         FP, R5, #64                 @ 0x40 
    /*00005a60*/ ADD         R7, R4, #44                 @ 0x2c 
    /*00005a64*/ ADD         R7, FP, R7 
    /*00005a68*/ MOV         R0, R7 
    /*00005a6c*/ BL          0x0000000000005A6C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00005a70*/ SUBS        SL, R0, #0 
    /*00005a74*/ BNE         VPSS_GetChnOutPutSize_x5b08
    /*00005a78*/ LDR         R3, [R5, R6, LSL #2] 
    /*00005a7c*/ CMP         R3, #0 
    /*00005a80*/ BEQ         VPSS_GetChnOutPutSize_x5b4c
    /*00005a84*/ ADD         R3, R3, R9, LSL #2 
    /*00005a88*/ LDR         R3, [R3, #1604]             @ 0x644 
    /*00005a8c*/ CMP         R3, #0 
    /*00005a90*/ BEQ         VPSS_GetChnOutPutSize_x5b14
    /*00005a94*/ ADD         R4, R4, #48                 @ 0x30 
    /*00005a98*/ ADD         R1, SP, #20 
    /*00005a9c*/ ADD         R4, FP, R4 
    /*00005aa0*/ MOV         R0, R4 
    /*00005aa4*/ BL          0x0000000000005AA4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00005aa8*/ MOV         R2, R8 
    /*00005aac*/ MOV         R1, R9 
    /*00005ab0*/ MOV         R0, R6 
    /*00005ab4*/ BL          0x0000000000005AB4          @ VPSS_DRV_GetChnOutPutSize [R_ARM_CALL: .text+0x1f954] 
    /*00005ab8*/ ADD         R1, SP, #20 
    /*00005abc*/ MOV         R0, R4 
    /*00005ac0*/ BL          0x0000000000005AC0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00005ac4*/ MOV         R0, R7 
    /*00005ac8*/ BL          0x0000000000005AC8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005acc*/ MOV         R0, SL 
    VPSS_GetChnOutPutSize_x5ad0:
    /*00005ad0*/ ADD         SP, SP, #28 
    /*00005ad4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_GetChnOutPutSize_x5ad8:
    /*00005ad8*/ BL          0x00000000000001B0 
    /*00005adc*/ CMP         R0, #0 
    /*00005ae0*/ BEQ         VPSS_GetChnOutPutSize_x5a44
    /*00005ae4*/ MOVW        R0, #32769                  @ 0x8001 
    /*00005ae8*/ MOVT        R0, #40967                  @ 0xa007 
    /*00005aec*/ B           VPSS_GetChnOutPutSize_x5ad0
    VPSS_GetChnOutPutSize_x5af0:
    /*00005af0*/ BL          0x0000000000000174 
    /*00005af4*/ CMP         R0, #0 
    /*00005af8*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*00005afc*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*00005b00*/ BNE         VPSS_GetChnOutPutSize_x5ad0
    /*00005b04*/ B           VPSS_GetChnOutPutSize_x5a4c
    VPSS_GetChnOutPutSize_x5b08:
    /*00005b08*/ MOV         R0, #65024                  @ 0xfe00 
    /*00005b0c*/ MOVT        R0, #65535                  @ 0xffff 
    /*00005b10*/ B           VPSS_GetChnOutPutSize_x5ad0
    VPSS_GetChnOutPutSize_x5b14:
    /*00005b14*/ MOV         R0, R7 
    /*00005b18*/ BL          0x0000000000005B18          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005b1c*/ MOVW        R3, #4269                   @ 0x10ad 
    /*00005b20*/ STMIB       SP, {R6, R9} 
    /*00005b24*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfa8] 
    /*00005b28*/ STR         R3, [SP] 
    /*00005b2c*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfa8] 
    /*00005b30*/ LDR         R3, [PC, #76]               @ 0x0000000000005b84 
    /*00005b34*/ MOV         R1, #7 
    /*00005b38*/ MOV         R0, #3 
    /*00005b3c*/ BL          0x0000000000005B3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005b40*/ MOVW        R0, #32784                  @ 0x8010 
    /*00005b44*/ MOVT        R0, #40967                  @ 0xa007 
    /*00005b48*/ B           VPSS_GetChnOutPutSize_x5ad0
    VPSS_GetChnOutPutSize_x5b4c:
    /*00005b4c*/ MOVW        R3, #4261                   @ 0x10a5 
    /*00005b50*/ MOV         R1, #7 
    /*00005b54*/ STR         R3, [SP] 
    /*00005b58*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00005b5c*/ LDR         R3, [PC, #32]               @ 0x0000000000005b84 
    /*00005b60*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00005b64*/ STR         R6, [SP, #4] 
    /*00005b68*/ MOV         R0, #3 
    /*00005b6c*/ BL          0x0000000000005B6C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005b70*/ MOV         R0, R7 
    /*00005b74*/ BL          0x0000000000005B74          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005b78*/ MOVW        R0, #32773                  @ 0x8005 
    /*00005b7c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00005b80*/ B           VPSS_GetChnOutPutSize_x5ad0
    /*00005b84*/ ANDEQ       R0, R0, R8, LSR #7 
FUNC_END VPSS_GetChnOutPutSize


FUNC_BEGIN VPSS_SetChnRotationAttr
    /*00005b88*/ CMP         R0, #15 
    /*00005b8c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00005b90*/ MOV         R5, R0 
    /*00005b94*/ SUB         SP, SP, #164                @ 0xa4 
    /*00005b98*/ MOV         R4, R1 
    /*00005b9c*/ MOV         R6, R2 
    /*00005ba0*/ BHI         VPSS_SetChnRotationAttr_x5dec
    VPSS_SetChnRotationAttr_x5ba4:
    /*00005ba4*/ CMP         R4, #2 
    /*00005ba8*/ BHI         VPSS_SetChnRotationAttr_x5e04
    /*00005bac*/ MOV         R0, #37                     @ 0x25 
    /*00005bb0*/ BL          0x0000000000005BB0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005bb4*/ SUBS        FP, R0, #0 
    /*00005bb8*/ BEQ         VPSS_SetChnRotationAttr_x5ecc
    /*00005bbc*/ MOV         R8, #92                     @ 0x5c 
    /*00005bc0*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005bc4*/ MUL         R8, R8, R5 
    /*00005bc8*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005bcc*/ ADD         R3, R9, #64                 @ 0x40 
    /*00005bd0*/ ADD         R7, R8, #44                 @ 0x2c 
    /*00005bd4*/ ADD         R7, R3, R7 
    /*00005bd8*/ MOV         R0, R7 
    /*00005bdc*/ BL          0x0000000000005BDC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00005be0*/ CMP         R0, #0 
    /*00005be4*/ BNE         VPSS_SetChnRotationAttr_x5e34
    /*00005be8*/ LDR         R9, [R9, R5, LSL #2] 
    /*00005bec*/ CMP         R9, #0 
    /*00005bf0*/ BEQ         VPSS_SetChnRotationAttr_x5ef8
    /*00005bf4*/ LDR         R2, [R6] 
    /*00005bf8*/ MOV         R1, R4 
    /*00005bfc*/ MOV         R0, R5 
    /*00005c00*/ BL          0x0000000000005C00          @ VPSS_DRV_CheckChnRotate [R_ARM_CALL: .text+0x1beb4] 
    /*00005c04*/ CMP         R0, #0 
    /*00005c08*/ BNE         VPSS_SetChnRotationAttr_x5e7c
    /*00005c0c*/ ADD         R3, R9, R4, LSL #2 
    /*00005c10*/ LDR         R3, [R3, #1604]             @ 0x644 
    /*00005c14*/ CMP         R3, #0 
    /*00005c18*/ BEQ         VPSS_SetChnRotationAttr_x5e90
    /*00005c1c*/ LDR         R3, [R6] 
    /*00005c20*/ CMP         R3, #0 
    /*00005c24*/ BNE         VPSS_SetChnRotationAttr_x5d48
    VPSS_SetChnRotationAttr_x5c28:
    /*00005c28*/ MOV         R1, R4 
    /*00005c2c*/ MOV         R0, R5 
    /*00005c30*/ BL          0x0000000000005C30          @ VPSS_IsPhyChnAttachFishEye [R_ARM_CALL: .text+0x43a8] 
    /*00005c34*/ CMP         R0, #0 
    /*00005c38*/ BNE         VPSS_SetChnRotationAttr_x5e40
    /*00005c3c*/ ADD         R2, SP, #44                 @ 0x2c 
    /*00005c40*/ MOV         R1, R4 
    /*00005c44*/ MOV         R0, R5 
    /*00005c48*/ BL          0x0000000000005C48          @ VPSS_DRV_GetChnRotationExAttrSet [R_ARM_CALL: .text+0x196f8] 
    /*00005c4c*/ LDR         R3, [R6] 
    /*00005c50*/ CMP         R3, #0 
    /*00005c54*/ BEQ         VPSS_SetChnRotationAttr_x5c64
    /*00005c58*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00005c5c*/ CMP         R3, #1 
    /*00005c60*/ BEQ         VPSS_SetChnRotationAttr_x5f68
    VPSS_SetChnRotationAttr_x5c64:
    /*00005c64*/ MOV         R1, R4 
    /*00005c68*/ MOV         R0, R5 
    /*00005c6c*/ ADD         R2, SP, #32 
    /*00005c70*/ BL          0x0000000000005C70          @ VPSS_DRV_GetChnOutPutSize [R_ARM_CALL: .text+0x1f954] 
    /*00005c74*/ MOV         R3, #72                     @ 0x48 
    /*00005c78*/ MLA         R9, R3, R4, R9 
    /*00005c7c*/ LDR         R3, [R9, #832]              @ 0x340 
    /*00005c80*/ CMP         R3, #0 
    /*00005c84*/ MOVEQ       R3, #8 
    /*00005c88*/ STREQ       R3, [SP, #40]               @ 0x28 
    /*00005c8c*/ BEQ         VPSS_SetChnRotationAttr_x5ca4
    /*00005c90*/ SUB         R2, R3, #1 
    /*00005c94*/ CMP         R2, #4 
    /*00005c98*/ BHI         VPSS_SetChnRotationAttr_x5f30
    /*00005c9c*/ MOV         R3, #10 
    /*00005ca0*/ STR         R3, [SP, #40]               @ 0x28 
    VPSS_SetChnRotationAttr_x5ca4:
    /*00005ca4*/ MOV         R1, R6 
    /*00005ca8*/ ADD         R9, SP, #160                @ 0xa0 
    /*00005cac*/ LDR         R2, [R1], #80               @ 0x50 
    /*00005cb0*/ MOV         IP, #0 
    /*00005cb4*/ STR         IP, [R9, #-88]!             @ 0xffffffa8 
    /*00005cb8*/ ADD         R3, R6, #168                @ 0xa8 
    /*00005cbc*/ ADD         R0, SP, #32 
    /*00005cc0*/ STR         R3, [SP, #20] 
    /*00005cc4*/ STR         R1, [SP] 
    /*00005cc8*/ MOV         R1, R9 
    /*00005ccc*/ LDR         SL, [FP, #64]               @ 0x40 
    /*00005cd0*/ BLX         SL 
    /*00005cd4*/ SUBS        SL, R0, #0 
    /*00005cd8*/ STRNE       R4, [SP, #8] 
    /*00005cdc*/ MOVWNE      R3, #4424                   @ 0x1148 
    /*00005ce0*/ BNE         VPSS_SetChnRotationAttr_x5dc8
    /*00005ce4*/ LDR         R3, [FP, #84]               @ 0x54 
    /*00005ce8*/ MOV         R1, R9 
    /*00005cec*/ LDR         R2, [SP, #20] 
    /*00005cf0*/ LDR         R0, [R6] 
    /*00005cf4*/ BLX         R3 
    /*00005cf8*/ SUBS        SL, R0, #0 
    /*00005cfc*/ BNE         VPSS_SetChnRotationAttr_x5dc0
    /*00005d00*/ LDR         R3, [PC, #660]              @ 0x0000000000005f9c 
    /*00005d04*/ ADD         R8, R8, #48                 @ 0x30 
    /*00005d08*/ ADD         R1, SP, #28 
    /*00005d0c*/ ADD         R8, R3, R8 
    /*00005d10*/ MOV         R0, R8 
    /*00005d14*/ BL          0x0000000000005D14          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00005d18*/ MOV         R1, R4 
    /*00005d1c*/ MOV         R0, R5 
    /*00005d20*/ MOV         R2, R6 
    /*00005d24*/ BL          0x0000000000005D24          @ VPSS_DRV_SetChnRotationAttr [R_ARM_CALL: .text+0x19298] 
    /*00005d28*/ ADD         R1, SP, #28 
    /*00005d2c*/ MOV         R0, R8 
    /*00005d30*/ BL          0x0000000000005D30          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VPSS_SetChnRotationAttr_x5d34:
    /*00005d34*/ MOV         R0, R7 
    /*00005d38*/ BL          0x0000000000005D38          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_SetChnRotationAttr_x5d3c:
    /*00005d3c*/ MOV         R0, SL 
    /*00005d40*/ ADD         SP, SP, #164                @ 0xa4 
    /*00005d44*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_SetChnRotationAttr_x5d48:
    /*00005d48*/ MOV         R1, R4 
    /*00005d4c*/ MOV         R0, R5 
    /*00005d50*/ BL          0x000000000000003C 
    /*00005d54*/ SUBS        SL, R0, #0 
    /*00005d58*/ BNE         VPSS_SetChnRotationAttr_x5d34
    /*00005d5c*/ MOV         R3, #72                     @ 0x48 
    /*00005d60*/ MLA         R3, R3, R4, R9 
    /*00005d64*/ LDR         R2, [R3, #828]              @ 0x33c 
    /*00005d68*/ CMP         R2, #26 
    /*00005d6c*/ CMPNE       R2, #39                     @ 0x27 
    /*00005d70*/ BEQ         VPSS_SetChnRotationAttr_x5c28
    /*00005d74*/ MOV         R0, R7 
    /*00005d78*/ STR         R3, [SP, #20] 
    /*00005d7c*/ BL          0x0000000000005D7C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005d80*/ LDR         R3, [SP, #20] 
    /*00005d84*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1050] 
    /*00005d88*/ MOV         R0, #3 
    /*00005d8c*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1050] 
    /*00005d90*/ MOVW        SL, #32776                  @ 0x8008 
    /*00005d94*/ LDR         R1, [R3, #828]              @ 0x33c 
    /*00005d98*/ MOVW        R3, #4378                   @ 0x111a 
    /*00005d9c*/ STR         R4, [SP, #8] 
    /*00005da0*/ MOVT        SL, #40967                  @ 0xa007 
    /*00005da4*/ STR         R3, [SP] 
    /*00005da8*/ STR         R1, [SP, #12] 
    /*00005dac*/ MOV         R1, #7 
    /*00005db0*/ STR         R5, [SP, #4] 
    /*00005db4*/ LDR         R3, [PC, #484]              @ 0x0000000000005fa0 
    /*00005db8*/ BL          0x0000000000005DB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005dbc*/ B           VPSS_SetChnRotationAttr_x5d3c
    VPSS_SetChnRotationAttr_x5dc0:
    /*00005dc0*/ MOVW        R3, #4433                   @ 0x1151 
    /*00005dc4*/ STR         R4, [SP, #8] 
    VPSS_SetChnRotationAttr_x5dc8:
    /*00005dc8*/ STR         R3, [SP] 
    /*00005dcc*/ MOVW        R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11a0] 
    /*00005dd0*/ STR         R5, [SP, #4] 
    /*00005dd4*/ MOVT        R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11a0] 
    /*00005dd8*/ LDR         R3, [PC, #448]              @ 0x0000000000005fa0 
    /*00005ddc*/ MOV         R1, #7 
    /*00005de0*/ MOV         R0, #3 
    /*00005de4*/ BL          0x0000000000005DE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005de8*/ B           VPSS_SetChnRotationAttr_x5d34
    VPSS_SetChnRotationAttr_x5dec:
    /*00005dec*/ BL          0x00000000000001B0 
    /*00005df0*/ CMP         R0, #0 
    /*00005df4*/ BEQ         VPSS_SetChnRotationAttr_x5ba4
    /*00005df8*/ MOVW        SL, #32769                  @ 0x8001 
    /*00005dfc*/ MOVT        SL, #40967                  @ 0xa007 
    /*00005e00*/ B           VPSS_SetChnRotationAttr_x5d3c
    VPSS_SetChnRotationAttr_x5e04:
    /*00005e04*/ MOVW        R3, #4318                   @ 0x10de 
    /*00005e08*/ STR         R4, [SP, #4] 
    /*00005e0c*/ STR         R3, [SP] 
    /*00005e10*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfe4] 
    /*00005e14*/ LDR         R3, [PC, #388]              @ 0x0000000000005fa0 
    /*00005e18*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfe4] 
    /*00005e1c*/ MOV         R1, #7 
    /*00005e20*/ MOV         R0, #3 
    /*00005e24*/ MOVW        SL, #32770                  @ 0x8002 
    /*00005e28*/ BL          0x0000000000005E28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005e2c*/ MOVT        SL, #40967                  @ 0xa007 
    /*00005e30*/ B           VPSS_SetChnRotationAttr_x5d3c
    VPSS_SetChnRotationAttr_x5e34:
    /*00005e34*/ MOV         SL, #65024                  @ 0xfe00 
    /*00005e38*/ MOVT        SL, #65535                  @ 0xffff 
    /*00005e3c*/ B           VPSS_SetChnRotationAttr_x5d3c
    VPSS_SetChnRotationAttr_x5e40:
    /*00005e40*/ MOV         R0, R7 
    /*00005e44*/ MOVW        SL, #32777                  @ 0x8009 
    /*00005e48*/ BL          0x0000000000005E48          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005e4c*/ MOVW        R3, #4387                   @ 0x1123 
    /*00005e50*/ STR         R4, [SP, #8] 
    /*00005e54*/ MOVW        R2, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x109c] 
    /*00005e58*/ STR         R3, [SP] 
    /*00005e5c*/ MOVT        R2, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x109c] 
    /*00005e60*/ STR         R5, [SP, #4] 
    /*00005e64*/ MOV         R1, #7 
    /*00005e68*/ LDR         R3, [PC, #304]              @ 0x0000000000005fa0 
    /*00005e6c*/ MOV         R0, #3 
    /*00005e70*/ BL          0x0000000000005E70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005e74*/ MOVT        SL, #40967                  @ 0xa007 
    /*00005e78*/ B           VPSS_SetChnRotationAttr_x5d3c
    VPSS_SetChnRotationAttr_x5e7c:
    /*00005e7c*/ MOV         R0, R7 
    /*00005e80*/ MOVW        SL, #32771                  @ 0x8003 
    /*00005e84*/ BL          0x0000000000005E84          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005e88*/ MOVT        SL, #40967                  @ 0xa007 
    /*00005e8c*/ B           VPSS_SetChnRotationAttr_x5d3c
    VPSS_SetChnRotationAttr_x5e90:
    /*00005e90*/ MOVW        R3, #4348                   @ 0x10fc 
    /*00005e94*/ MOV         R1, #7 
    /*00005e98*/ STR         R3, [SP] 
    /*00005e9c*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1014] 
    /*00005ea0*/ LDR         R3, [PC, #248]              @ 0x0000000000005fa0 
    /*00005ea4*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1014] 
    /*00005ea8*/ STR         R4, [SP, #8] 
    /*00005eac*/ MOV         R0, #3 
    /*00005eb0*/ STR         R5, [SP, #4] 
    /*00005eb4*/ MOVW        SL, #32784                  @ 0x8010 
    /*00005eb8*/ BL          0x0000000000005EB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005ebc*/ MOV         R0, R7 
    /*00005ec0*/ BL          0x0000000000005EC0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005ec4*/ MOVT        SL, #40967                  @ 0xa007 
    /*00005ec8*/ B           VPSS_SetChnRotationAttr_x5d3c
    VPSS_SetChnRotationAttr_x5ecc:
    /*00005ecc*/ MOVW        R3, #4325                   @ 0x10e5 
    /*00005ed0*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa24] 
    /*00005ed4*/ STR         R3, [SP] 
    /*00005ed8*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa24] 
    /*00005edc*/ LDR         R3, [PC, #188]              @ 0x0000000000005fa0 
    /*00005ee0*/ MOV         R1, #7 
    /*00005ee4*/ MOV         R0, #3 
    /*00005ee8*/ MOVW        SL, #32777                  @ 0x8009 
    /*00005eec*/ BL          0x0000000000005EEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005ef0*/ MOVT        SL, #40967                  @ 0xa007 
    /*00005ef4*/ B           VPSS_SetChnRotationAttr_x5d3c
    VPSS_SetChnRotationAttr_x5ef8:
    /*00005ef8*/ MOVW        R3, #4334                   @ 0x10ee 
    /*00005efc*/ MOV         R1, #7 
    /*00005f00*/ STR         R3, [SP] 
    /*00005f04*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00005f08*/ LDR         R3, [PC, #144]              @ 0x0000000000005fa0 
    /*00005f0c*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00005f10*/ STR         R5, [SP, #4] 
    /*00005f14*/ MOV         R0, #3 
    /*00005f18*/ BL          0x0000000000005F18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005f1c*/ MOV         R0, R7 
    /*00005f20*/ MOVW        SL, #32773                  @ 0x8005 
    /*00005f24*/ BL          0x0000000000005F24          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005f28*/ MOVT        SL, #40967                  @ 0xa007 
    /*00005f2c*/ B           VPSS_SetChnRotationAttr_x5d3c
    VPSS_SetChnRotationAttr_x5f30:
    /*00005f30*/ STR         R3, [SP, #4] 
    /*00005f34*/ MOV         R1, #7 
    /*00005f38*/ MOVW        R3, #4412                   @ 0x113c 
    /*00005f3c*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x116c] 
    /*00005f40*/ STR         R3, [SP] 
    /*00005f44*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x116c] 
    /*00005f48*/ LDR         R3, [PC, #80]               @ 0x0000000000005fa0 
    /*00005f4c*/ MOV         R0, #3 
    /*00005f50*/ BL          0x0000000000005F50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005f54*/ MOV         R0, R7 
    /*00005f58*/ MOVW        SL, #32771                  @ 0x8003 
    /*00005f5c*/ BL          0x0000000000005F5C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005f60*/ MOVT        SL, #40967                  @ 0xa007 
    /*00005f64*/ B           VPSS_SetChnRotationAttr_x5d3c
    VPSS_SetChnRotationAttr_x5f68:
    /*00005f68*/ MOVW        R3, #4395                   @ 0x112b 
    /*00005f6c*/ MOV         R1, #7 
    /*00005f70*/ STR         R3, [SP] 
    /*00005f74*/ MOVW        R2, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x111c] 
    /*00005f78*/ LDR         R3, [PC, #32]               @ 0x0000000000005fa0 
    /*00005f7c*/ MOVT        R2, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x111c] 
    /*00005f80*/ MOV         R0, #3 
    /*00005f84*/ MOVW        SL, #32777                  @ 0x8009 
    /*00005f88*/ BL          0x0000000000005F88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005f8c*/ MOV         R0, R7 
    /*00005f90*/ BL          0x0000000000005F90          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005f94*/ MOVT        SL, #40967                  @ 0xa007 
    /*00005f98*/ B           VPSS_SetChnRotationAttr_x5d3c
    /*00005f9c*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00005fa0*/ ANDEQ       R0, R0, R0, ASR #7 
FUNC_END VPSS_SetChnRotationAttr


FUNC_BEGIN VPSS_GetChnRotationAttr
    /*00005fa4*/ CMP         R0, #15 
    /*00005fa8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00005fac*/ MOV         R5, R0 
    /*00005fb0*/ SUB         SP, SP, #12 
    /*00005fb4*/ MOV         R9, R1 
    /*00005fb8*/ MOV         R8, R2 
    /*00005fbc*/ BHI         VPSS_GetChnRotationAttr_x6024
    VPSS_GetChnRotationAttr_x5fc0:
    /*00005fc0*/ CMP         R8, #0 
    /*00005fc4*/ BEQ         VPSS_GetChnRotationAttr_x603c
    VPSS_GetChnRotationAttr_x5fc8:
    /*00005fc8*/ CMP         R9, #2 
    /*00005fcc*/ BHI         VPSS_GetChnRotationAttr_x6054
    /*00005fd0*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005fd4*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005fd8*/ MOV         R4, #92                     @ 0x5c 
    /*00005fdc*/ MLA         R4, R4, R5, R6 
    /*00005fe0*/ ADD         R4, R4, #108                @ 0x6c 
    /*00005fe4*/ MOV         R0, R4 
    /*00005fe8*/ BL          0x0000000000005FE8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00005fec*/ SUBS        R7, R0, #0 
    /*00005ff0*/ BNE         VPSS_GetChnRotationAttr_x6084
    /*00005ff4*/ LDR         R3, [R6, R5, LSL #2] 
    /*00005ff8*/ CMP         R3, #0 
    /*00005ffc*/ BEQ         VPSS_GetChnRotationAttr_x6090
    /*00006000*/ MOV         R2, R8 
    /*00006004*/ MOV         R1, R9 
    /*00006008*/ MOV         R0, R5 
    /*0000600c*/ BL          0x000000000000600C          @ VPSS_DRV_GetChnRotationAttrSet [R_ARM_CALL: .text+0x19348] 
    /*00006010*/ MOV         R0, R4 
    /*00006014*/ BL          0x0000000000006014          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006018*/ MOV         R0, R7 
    VPSS_GetChnRotationAttr_x601c:
    /*0000601c*/ ADD         SP, SP, #12 
    /*00006020*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_GetChnRotationAttr_x6024:
    /*00006024*/ BL          0x00000000000001B0 
    /*00006028*/ CMP         R0, #0 
    /*0000602c*/ BEQ         VPSS_GetChnRotationAttr_x5fc0
    /*00006030*/ MOVW        R0, #32769                  @ 0x8001 
    /*00006034*/ MOVT        R0, #40967                  @ 0xa007 
    /*00006038*/ B           VPSS_GetChnRotationAttr_x601c
    VPSS_GetChnRotationAttr_x603c:
    /*0000603c*/ BL          0x0000000000000174 
    /*00006040*/ CMP         R0, #0 
    /*00006044*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*00006048*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*0000604c*/ BNE         VPSS_GetChnRotationAttr_x601c
    /*00006050*/ B           VPSS_GetChnRotationAttr_x5fc8
    VPSS_GetChnRotationAttr_x6054:
    /*00006054*/ MOVW        R3, #4459                   @ 0x116b 
    /*00006058*/ STR         R9, [SP, #4] 
    /*0000605c*/ STR         R3, [SP] 
    /*00006060*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfe4] 
    /*00006064*/ LDR         R3, [PC, #92]               @ 0x00000000000060c8 
    /*00006068*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfe4] 
    /*0000606c*/ MOV         R1, #7 
    /*00006070*/ MOV         R0, #3 
    /*00006074*/ BL          0x0000000000006074          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006078*/ MOVW        R0, #32770                  @ 0x8002 
    /*0000607c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00006080*/ B           VPSS_GetChnRotationAttr_x601c
    VPSS_GetChnRotationAttr_x6084:
    /*00006084*/ MOV         R0, #65024                  @ 0xfe00 
    /*00006088*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000608c*/ B           VPSS_GetChnRotationAttr_x601c
    VPSS_GetChnRotationAttr_x6090:
    /*00006090*/ MOVW        R3, #4469                   @ 0x1175 
    /*00006094*/ MOV         R1, #7 
    /*00006098*/ STR         R3, [SP] 
    /*0000609c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*000060a0*/ LDR         R3, [PC, #32]               @ 0x00000000000060c8 
    /*000060a4*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*000060a8*/ STR         R5, [SP, #4] 
    /*000060ac*/ MOV         R0, #3 
    /*000060b0*/ BL          0x00000000000060B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000060b4*/ MOV         R0, R4 
    /*000060b8*/ BL          0x00000000000060B8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000060bc*/ MOVW        R0, #32773                  @ 0x8005 
    /*000060c0*/ MOVT        R0, #40967                  @ 0xa007 
    /*000060c4*/ B           VPSS_GetChnRotationAttr_x601c
    /*000060c8*/ LDRDEQ      R0, [R0], -R8 
FUNC_END VPSS_GetChnRotationAttr


FUNC_BEGIN VPSS_SetChnRotationExAttr
    /*000060cc*/ CMP         R0, #15 
    /*000060d0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000060d4*/ MOV         R4, R0 
    /*000060d8*/ SUB         SP, SP, #24 
    /*000060dc*/ MOV         R6, R1 
    /*000060e0*/ MOV         R7, R2 
    /*000060e4*/ BHI         VPSS_SetChnRotationExAttr_x61e8
    VPSS_SetChnRotationExAttr_x60e8:
    /*000060e8*/ CMP         R7, #0 
    /*000060ec*/ BEQ         VPSS_SetChnRotationExAttr_x6200
    VPSS_SetChnRotationExAttr_x60f0:
    /*000060f0*/ CMP         R6, #2 
    /*000060f4*/ BHI         VPSS_SetChnRotationExAttr_x6218
    /*000060f8*/ MOV         R5, #92                     @ 0x5c 
    /*000060fc*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006100*/ MUL         R5, R5, R4 
    /*00006104*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006108*/ ADD         R8, R9, #64                 @ 0x40 
    /*0000610c*/ ADD         SL, R5, #44                 @ 0x2c 
    /*00006110*/ ADD         SL, R8, SL 
    /*00006114*/ MOV         R0, SL 
    /*00006118*/ BL          0x0000000000006118          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000611c*/ CMP         R0, #0 
    /*00006120*/ BNE         VPSS_SetChnRotationExAttr_x6248
    /*00006124*/ LDR         R3, [R9, R4, LSL #2] 
    /*00006128*/ CMP         R3, #0 
    /*0000612c*/ BEQ         VPSS_SetChnRotationExAttr_x62d4
    /*00006130*/ ADD         R3, R3, R6, LSL #2 
    /*00006134*/ LDR         R3, [R3, #1604]             @ 0x644 
    /*00006138*/ CMP         R3, #0 
    /*0000613c*/ BEQ         VPSS_SetChnRotationExAttr_x6268
    /*00006140*/ LDR         R3, [R7] 
    /*00006144*/ CMP         R3, #0 
    /*00006148*/ BNE         VPSS_SetChnRotationExAttr_x61d0
    VPSS_SetChnRotationExAttr_x614c:
    /*0000614c*/ MOV         R2, R7 
    /*00006150*/ MOV         R1, R6 
    /*00006154*/ MOV         R0, R4 
    /*00006158*/ BL          0x0000000000006158          @ VPSS_DRV_CheckChnRotateExAttr [R_ARM_CALL: .text+0x195c8] 
    /*0000615c*/ SUBS        R9, R0, #0 
    /*00006160*/ BNE         VPSS_SetChnRotationExAttr_x6254
    /*00006164*/ ADD         R2, SP, #20 
    /*00006168*/ MOV         R1, R6 
    /*0000616c*/ MOV         R0, R4 
    /*00006170*/ BL          0x0000000000006170          @ VPSS_DRV_GetChnRotationAttrSet [R_ARM_CALL: .text+0x19348] 
    /*00006174*/ LDR         R3, [SP, #20] 
    /*00006178*/ CMP         R3, #0 
    /*0000617c*/ BEQ         VPSS_SetChnRotationExAttr_x618c
    /*00006180*/ LDR         R3, [R7] 
    /*00006184*/ CMP         R3, #1 
    /*00006188*/ BEQ         VPSS_SetChnRotationExAttr_x62a0
    VPSS_SetChnRotationExAttr_x618c:
    /*0000618c*/ ADD         R5, R5, #48                 @ 0x30 
    /*00006190*/ ADD         R1, SP, #16 
    /*00006194*/ ADD         R8, R8, R5 
    /*00006198*/ MOV         R0, R8 
    /*0000619c*/ BL          0x000000000000619C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000061a0*/ MOV         R1, R6 
    /*000061a4*/ MOV         R0, R4 
    /*000061a8*/ MOV         R2, R7 
    /*000061ac*/ BL          0x00000000000061AC          @ VPSS_DRV_SetChnRotationExAttr [R_ARM_CALL: .text+0x196b4] 
    /*000061b0*/ ADD         R1, SP, #16 
    /*000061b4*/ MOV         R0, R8 
    /*000061b8*/ BL          0x00000000000061B8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VPSS_SetChnRotationExAttr_x61bc:
    /*000061bc*/ MOV         R0, SL 
    /*000061c0*/ BL          0x00000000000061C0          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_SetChnRotationExAttr_x61c4:
    /*000061c4*/ MOV         R0, R9 
    /*000061c8*/ ADD         SP, SP, #24 
    /*000061cc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_SetChnRotationExAttr_x61d0:
    /*000061d0*/ MOV         R1, R6 
    /*000061d4*/ MOV         R0, R4 
    /*000061d8*/ BL          0x000000000000003C 
    /*000061dc*/ SUBS        R9, R0, #0 
    /*000061e0*/ BEQ         VPSS_SetChnRotationExAttr_x614c
    /*000061e4*/ B           VPSS_SetChnRotationExAttr_x61bc
    VPSS_SetChnRotationExAttr_x61e8:
    /*000061e8*/ BL          0x00000000000001B0 
    /*000061ec*/ CMP         R0, #0 
    /*000061f0*/ BEQ         VPSS_SetChnRotationExAttr_x60e8
    /*000061f4*/ MOVW        R9, #32769                  @ 0x8001 
    /*000061f8*/ MOVT        R9, #40967                  @ 0xa007 
    /*000061fc*/ B           VPSS_SetChnRotationExAttr_x61c4
    VPSS_SetChnRotationExAttr_x6200:
    /*00006200*/ BL          0x0000000000000174 
    /*00006204*/ CMP         R0, #0 
    /*00006208*/ MOVWNE      R9, #32774                  @ 0x8006 
    /*0000620c*/ MOVTNE      R9, #40967                  @ 0xa007 
    /*00006210*/ BNE         VPSS_SetChnRotationExAttr_x61c4
    /*00006214*/ B           VPSS_SetChnRotationExAttr_x60f0
    VPSS_SetChnRotationExAttr_x6218:
    /*00006218*/ MOVW        R3, #4494                   @ 0x118e 
    /*0000621c*/ STR         R6, [SP, #4] 
    /*00006220*/ STR         R3, [SP] 
    /*00006224*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfe4] 
    /*00006228*/ LDR         R3, [PC, #220]              @ 0x000000000000630c 
    /*0000622c*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfe4] 
    /*00006230*/ MOV         R1, #7 
    /*00006234*/ MOV         R0, #3 
    /*00006238*/ MOVW        R9, #32770                  @ 0x8002 
    /*0000623c*/ BL          0x000000000000623C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006240*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006244*/ B           VPSS_SetChnRotationExAttr_x61c4
    VPSS_SetChnRotationExAttr_x6248:
    /*00006248*/ MOV         R9, #65024                  @ 0xfe00 
    /*0000624c*/ MOVT        R9, #65535                  @ 0xffff 
    /*00006250*/ B           VPSS_SetChnRotationExAttr_x61c4
    VPSS_SetChnRotationExAttr_x6254:
    /*00006254*/ MOV         R0, SL 
    /*00006258*/ MOVW        R9, #32771                  @ 0x8003 
    /*0000625c*/ BL          0x000000000000625C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006260*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006264*/ B           VPSS_SetChnRotationExAttr_x61c4
    VPSS_SetChnRotationExAttr_x6268:
    /*00006268*/ MOV         R0, SL 
    /*0000626c*/ MOVW        R9, #32784                  @ 0x8010 
    /*00006270*/ BL          0x0000000000006270          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006274*/ MOVW        R3, #4511                   @ 0x119f 
    /*00006278*/ STMIB       SP, {R4, R6} 
    /*0000627c*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11e8] 
    /*00006280*/ STR         R3, [SP] 
    /*00006284*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11e8] 
    /*00006288*/ LDR         R3, [PC, #124]              @ 0x000000000000630c 
    /*0000628c*/ MOV         R1, #7 
    /*00006290*/ MOV         R0, #3 
    /*00006294*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006298*/ BL          0x0000000000006298          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000629c*/ B           VPSS_SetChnRotationExAttr_x61c4
    VPSS_SetChnRotationExAttr_x62a0:
    /*000062a0*/ MOVW        R3, #4549                   @ 0x11c5 
    /*000062a4*/ MOV         R1, #7 
    /*000062a8*/ STR         R3, [SP] 
    /*000062ac*/ MOVW        R2, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1224] 
    /*000062b0*/ LDR         R3, [PC, #84]               @ 0x000000000000630c 
    /*000062b4*/ MOVT        R2, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1224] 
    /*000062b8*/ MOV         R0, #3 
    /*000062bc*/ MOVW        R9, #32777                  @ 0x8009 
    /*000062c0*/ BL          0x00000000000062C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000062c4*/ MOV         R0, SL 
    /*000062c8*/ BL          0x00000000000062C8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000062cc*/ MOVT        R9, #40967                  @ 0xa007 
    /*000062d0*/ B           VPSS_SetChnRotationExAttr_x61c4
    VPSS_SetChnRotationExAttr_x62d4:
    /*000062d4*/ MOVW        R3, #4503                   @ 0x1197 
    /*000062d8*/ MOV         R1, #7 
    /*000062dc*/ STR         R3, [SP] 
    /*000062e0*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*000062e4*/ LDR         R3, [PC, #32]               @ 0x000000000000630c 
    /*000062e8*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*000062ec*/ STR         R4, [SP, #4] 
    /*000062f0*/ MOV         R0, #3 
    /*000062f4*/ BL          0x00000000000062F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000062f8*/ MOV         R0, SL 
    /*000062fc*/ MOVW        R9, #32773                  @ 0x8005 
    /*00006300*/ BL          0x0000000000006300          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006304*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006308*/ B           VPSS_SetChnRotationExAttr_x61c4
    /*0000630c*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VPSS_SetChnRotationExAttr


FUNC_BEGIN VPSS_GetChnRotationExAttr
    /*00006310*/ CMP         R0, #15 
    /*00006314*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00006318*/ MOV         R5, R0 
    /*0000631c*/ SUB         SP, SP, #20 
    /*00006320*/ MOV         R9, R1 
    /*00006324*/ MOV         R8, R2 
    /*00006328*/ BHI         VPSS_GetChnRotationExAttr_x6390
    VPSS_GetChnRotationExAttr_x632c:
    /*0000632c*/ CMP         R8, #0 
    /*00006330*/ BEQ         VPSS_GetChnRotationExAttr_x63a8
    VPSS_GetChnRotationExAttr_x6334:
    /*00006334*/ CMP         R9, #2 
    /*00006338*/ BHI         VPSS_GetChnRotationExAttr_x63c0
    /*0000633c*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006340*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006344*/ MOV         R4, #92                     @ 0x5c 
    /*00006348*/ MLA         R4, R4, R5, R6 
    /*0000634c*/ ADD         R4, R4, #108                @ 0x6c 
    /*00006350*/ MOV         R0, R4 
    /*00006354*/ BL          0x0000000000006354          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00006358*/ SUBS        R7, R0, #0 
    /*0000635c*/ BNE         VPSS_GetChnRotationExAttr_x63f4
    /*00006360*/ LDR         R3, [R6, R5, LSL #2] 
    /*00006364*/ CMP         R3, #0 
    /*00006368*/ BEQ         VPSS_GetChnRotationExAttr_x6400
    /*0000636c*/ MOV         R2, R8 
    /*00006370*/ MOV         R1, R9 
    /*00006374*/ MOV         R0, R5 
    /*00006378*/ BL          0x0000000000006378          @ VPSS_DRV_GetChnRotationExAttrSet [R_ARM_CALL: .text+0x196f8] 
    /*0000637c*/ MOV         R0, R4 
    /*00006380*/ BL          0x0000000000006380          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006384*/ MOV         R0, R7 
    VPSS_GetChnRotationExAttr_x6388:
    /*00006388*/ ADD         SP, SP, #20 
    /*0000638c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_GetChnRotationExAttr_x6390:
    /*00006390*/ BL          0x00000000000001B0 
    /*00006394*/ CMP         R0, #0 
    /*00006398*/ BEQ         VPSS_GetChnRotationExAttr_x632c
    /*0000639c*/ MOVW        R0, #32769                  @ 0x8001 
    /*000063a0*/ MOVT        R0, #40967                  @ 0xa007 
    /*000063a4*/ B           VPSS_GetChnRotationExAttr_x6388
    VPSS_GetChnRotationExAttr_x63a8:
    /*000063a8*/ BL          0x0000000000000174 
    /*000063ac*/ CMP         R0, #0 
    /*000063b0*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*000063b4*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*000063b8*/ BNE         VPSS_GetChnRotationExAttr_x6388
    /*000063bc*/ B           VPSS_GetChnRotationExAttr_x6334
    VPSS_GetChnRotationExAttr_x63c0:
    /*000063c0*/ MOVW        R3, #4572                   @ 0x11dc 
    /*000063c4*/ STR         R9, [SP, #8] 
    /*000063c8*/ STR         R3, [SP] 
    /*000063cc*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1274] 
    /*000063d0*/ STR         R5, [SP, #4] 
    /*000063d4*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1274] 
    /*000063d8*/ LDR         R3, [PC, #88]               @ 0x0000000000006438 
    /*000063dc*/ MOV         R1, #7 
    /*000063e0*/ MOV         R0, #3 
    /*000063e4*/ BL          0x00000000000063E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000063e8*/ MOVW        R0, #32770                  @ 0x8002 
    /*000063ec*/ MOVT        R0, #40967                  @ 0xa007 
    /*000063f0*/ B           VPSS_GetChnRotationExAttr_x6388
    VPSS_GetChnRotationExAttr_x63f4:
    /*000063f4*/ MOV         R0, #65024                  @ 0xfe00 
    /*000063f8*/ MOVT        R0, #65535                  @ 0xffff 
    /*000063fc*/ B           VPSS_GetChnRotationExAttr_x6388
    VPSS_GetChnRotationExAttr_x6400:
    /*00006400*/ MOVW        R3, #4581                   @ 0x11e5 
    /*00006404*/ MOV         R1, #7 
    /*00006408*/ STR         R3, [SP] 
    /*0000640c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00006410*/ LDR         R3, [PC, #32]               @ 0x0000000000006438 
    /*00006414*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00006418*/ STR         R5, [SP, #4] 
    /*0000641c*/ MOV         R0, #3 
    /*00006420*/ BL          0x0000000000006420          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006424*/ MOV         R0, R4 
    /*00006428*/ BL          0x0000000000006428          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000642c*/ MOVW        R0, #32773                  @ 0x8005 
    /*00006430*/ MOVT        R0, #40967                  @ 0xa007 
    /*00006434*/ B           VPSS_GetChnRotationExAttr_x6388
    /*00006438*/ ANDEQ       R0, R0, IP, LSL #8 
FUNC_END VPSS_GetChnRotationExAttr


FUNC_BEGIN VPSS_SetChnLDCAttr
    /*0000643c*/ CMP         R0, #15 
    /*00006440*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00006444*/ MOV         R4, R0 
    /*00006448*/ SUB         SP, SP, #40                 @ 0x28 
    /*0000644c*/ MOV         R6, R1 
    /*00006450*/ MOV         R7, R2 
    /*00006454*/ BHI         VPSS_SetChnLDCAttr_x659c
    VPSS_SetChnLDCAttr_x6458:
    /*00006458*/ CMP         R7, #0 
    /*0000645c*/ BEQ         VPSS_SetChnLDCAttr_x65b4
    VPSS_SetChnLDCAttr_x6460:
    /*00006460*/ CMP         R6, #2 
    /*00006464*/ BHI         VPSS_SetChnLDCAttr_x65cc
    /*00006468*/ MOV         R5, #92                     @ 0x5c 
    /*0000646c*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006470*/ MUL         R5, R5, R4 
    /*00006474*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006478*/ ADD         R8, R9, #64                 @ 0x40 
    /*0000647c*/ ADD         SL, R5, #44                 @ 0x2c 
    /*00006480*/ ADD         SL, R8, SL 
    /*00006484*/ MOV         R0, SL 
    /*00006488*/ BL          0x0000000000006488          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000648c*/ CMP         R0, #0 
    /*00006490*/ BNE         VPSS_SetChnLDCAttr_x6600
    /*00006494*/ LDR         R3, [R9, R4, LSL #2] 
    /*00006498*/ CMP         R3, #0 
    /*0000649c*/ BEQ         VPSS_SetChnLDCAttr_x6658
    /*000064a0*/ ADD         R3, R3, R6, LSL #2 
    /*000064a4*/ LDR         R3, [R3, #1604]             @ 0x644 
    /*000064a8*/ CMP         R3, #0 
    /*000064ac*/ BEQ         VPSS_SetChnLDCAttr_x6620
    /*000064b0*/ LDR         R3, [R7] 
    /*000064b4*/ CMP         R3, #0 
    /*000064b8*/ BNE         VPSS_SetChnLDCAttr_x6534
    VPSS_SetChnLDCAttr_x64bc:
    /*000064bc*/ MOV         R2, R7 
    /*000064c0*/ MOV         R1, R6 
    /*000064c4*/ MOV         R0, R4 
    /*000064c8*/ BL          0x00000000000064C8          @ VPSS_DRV_CheckChnLdcAttr [R_ARM_CALL: .text+0x19394] 
    /*000064cc*/ SUBS        R9, R0, #0 
    /*000064d0*/ BNE         VPSS_SetChnLDCAttr_x660c
    /*000064d4*/ ADD         R2, SP, #24 
    /*000064d8*/ MOV         R1, R6 
    /*000064dc*/ MOV         R0, R4 
    /*000064e0*/ BL          0x00000000000064E0          @ VPSS_DRV_GetChnSpreadAttrSet [R_ARM_CALL: .text+0x198b8] 
    /*000064e4*/ LDR         R3, [SP, #24] 
    /*000064e8*/ CMP         R3, #1 
    /*000064ec*/ BEQ         VPSS_SetChnLDCAttr_x654c
    VPSS_SetChnLDCAttr_x64f0:
    /*000064f0*/ ADD         R5, R5, #48                 @ 0x30 
    /*000064f4*/ ADD         R1, SP, #20 
    /*000064f8*/ ADD         R8, R8, R5 
    /*000064fc*/ MOV         R0, R8 
    /*00006500*/ BL          0x0000000000006500          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006504*/ MOV         R1, R6 
    /*00006508*/ MOV         R0, R4 
    /*0000650c*/ MOV         R2, R7 
    /*00006510*/ BL          0x0000000000006510          @ VPSS_DRV_SetChnLDCAttr [R_ARM_CALL: .text+0x19480] 
    /*00006514*/ ADD         R1, SP, #20 
    /*00006518*/ MOV         R0, R8 
    /*0000651c*/ BL          0x000000000000651C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VPSS_SetChnLDCAttr_x6520:
    /*00006520*/ MOV         R0, SL 
    /*00006524*/ BL          0x0000000000006524          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_SetChnLDCAttr_x6528:
    /*00006528*/ MOV         R0, R9 
    /*0000652c*/ ADD         SP, SP, #40                 @ 0x28 
    /*00006530*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_SetChnLDCAttr_x6534:
    /*00006534*/ MOV         R1, R6 
    /*00006538*/ MOV         R0, R4 
    /*0000653c*/ BL          0x000000000000003C 
    /*00006540*/ SUBS        R9, R0, #0 
    /*00006544*/ BEQ         VPSS_SetChnLDCAttr_x64bc
    /*00006548*/ B           VPSS_SetChnLDCAttr_x6520
    VPSS_SetChnLDCAttr_x654c:
    /*0000654c*/ LDR         R3, [R7] 
    /*00006550*/ CMP         R3, #1 
    /*00006554*/ BNE         VPSS_SetChnLDCAttr_x64f0
    /*00006558*/ LDR         R3, [R7, #28] 
    /*0000655c*/ CMP         R3, #0 
    /*00006560*/ BGE         VPSS_SetChnLDCAttr_x64f0
    /*00006564*/ STR         R3, [SP, #4] 
    /*00006568*/ MOV         R1, #7 
    /*0000656c*/ MOVW        R3, #4667                   @ 0x123b 
    /*00006570*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x130c] 
    /*00006574*/ STR         R3, [SP] 
    /*00006578*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x130c] 
    /*0000657c*/ LDR         R3, [PC, #268]              @ 0x0000000000006690 
    /*00006580*/ MOV         R0, #3 
    /*00006584*/ BL          0x0000000000006584          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006588*/ MOV         R0, SL 
    /*0000658c*/ MOVW        R9, #32771                  @ 0x8003 
    /*00006590*/ BL          0x0000000000006590          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006594*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006598*/ B           VPSS_SetChnLDCAttr_x6528
    VPSS_SetChnLDCAttr_x659c:
    /*0000659c*/ BL          0x00000000000001B0 
    /*000065a0*/ CMP         R0, #0 
    /*000065a4*/ BEQ         VPSS_SetChnLDCAttr_x6458
    /*000065a8*/ MOVW        R9, #32769                  @ 0x8001 
    /*000065ac*/ MOVT        R9, #40967                  @ 0xa007 
    /*000065b0*/ B           VPSS_SetChnLDCAttr_x6528
    VPSS_SetChnLDCAttr_x65b4:
    /*000065b4*/ BL          0x0000000000000174 
    /*000065b8*/ CMP         R0, #0 
    /*000065bc*/ MOVWNE      R9, #32774                  @ 0x8006 
    /*000065c0*/ MOVTNE      R9, #40967                  @ 0xa007 
    /*000065c4*/ BNE         VPSS_SetChnLDCAttr_x6528
    /*000065c8*/ B           VPSS_SetChnLDCAttr_x6460
    VPSS_SetChnLDCAttr_x65cc:
    /*000065cc*/ MOVW        R3, #4606                   @ 0x11fe 
    /*000065d0*/ STR         R6, [SP, #8] 
    /*000065d4*/ STR         R3, [SP] 
    /*000065d8*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12c4] 
    /*000065dc*/ STR         R4, [SP, #4] 
    /*000065e0*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12c4] 
    /*000065e4*/ LDR         R3, [PC, #164]              @ 0x0000000000006690 
    /*000065e8*/ MOV         R1, #7 
    /*000065ec*/ MOV         R0, #3 
    /*000065f0*/ MOVW        R9, #32770                  @ 0x8002 
    /*000065f4*/ BL          0x00000000000065F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000065f8*/ MOVT        R9, #40967                  @ 0xa007 
    /*000065fc*/ B           VPSS_SetChnLDCAttr_x6528
    VPSS_SetChnLDCAttr_x6600:
    /*00006600*/ MOV         R9, #65024                  @ 0xfe00 
    /*00006604*/ MOVT        R9, #65535                  @ 0xffff 
    /*00006608*/ B           VPSS_SetChnLDCAttr_x6528
    VPSS_SetChnLDCAttr_x660c:
    /*0000660c*/ MOV         R0, SL 
    /*00006610*/ MOVW        R9, #32771                  @ 0x8003 
    /*00006614*/ BL          0x0000000000006614          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006618*/ MOVT        R9, #40967                  @ 0xa007 
    /*0000661c*/ B           VPSS_SetChnLDCAttr_x6528
    VPSS_SetChnLDCAttr_x6620:
    /*00006620*/ MOV         R0, SL 
    /*00006624*/ MOVW        R9, #32784                  @ 0x8010 
    /*00006628*/ BL          0x0000000000006628          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000662c*/ MOVW        R3, #4624                   @ 0x1210 
    /*00006630*/ STMIB       SP, {R4, R6} 
    /*00006634*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11e8] 
    /*00006638*/ STR         R3, [SP] 
    /*0000663c*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11e8] 
    /*00006640*/ LDR         R3, [PC, #72]               @ 0x0000000000006690 
    /*00006644*/ MOV         R1, #7 
    /*00006648*/ MOV         R0, #3 
    /*0000664c*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006650*/ BL          0x0000000000006650          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006654*/ B           VPSS_SetChnLDCAttr_x6528
    VPSS_SetChnLDCAttr_x6658:
    /*00006658*/ MOVW        R3, #4615                   @ 0x1207 
    /*0000665c*/ MOV         R1, #7 
    /*00006660*/ STR         R3, [SP] 
    /*00006664*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00006668*/ LDR         R3, [PC, #32]               @ 0x0000000000006690 
    /*0000666c*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00006670*/ STR         R4, [SP, #4] 
    /*00006674*/ MOV         R0, #3 
    /*00006678*/ BL          0x0000000000006678          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000667c*/ MOV         R0, SL 
    /*00006680*/ MOVW        R9, #32773                  @ 0x8005 
    /*00006684*/ BL          0x0000000000006684          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006688*/ MOVT        R9, #40967                  @ 0xa007 
    /*0000668c*/ B           VPSS_SetChnLDCAttr_x6528
    /*00006690*/ ANDEQ       R0, R0, R8, LSR #8 
FUNC_END VPSS_SetChnLDCAttr


FUNC_BEGIN VPSS_GetChnLDCAttr
    /*00006694*/ CMP         R0, #15 
    /*00006698*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000669c*/ MOV         R5, R0 
    /*000066a0*/ SUB         SP, SP, #20 
    /*000066a4*/ MOV         R9, R1 
    /*000066a8*/ MOV         R8, R2 
    /*000066ac*/ BHI         VPSS_GetChnLDCAttr_x6714
    VPSS_GetChnLDCAttr_x66b0:
    /*000066b0*/ CMP         R8, #0 
    /*000066b4*/ BEQ         VPSS_GetChnLDCAttr_x672c
    VPSS_GetChnLDCAttr_x66b8:
    /*000066b8*/ CMP         R9, #2 
    /*000066bc*/ BHI         VPSS_GetChnLDCAttr_x6744
    /*000066c0*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000066c4*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000066c8*/ MOV         R4, #92                     @ 0x5c 
    /*000066cc*/ MLA         R4, R4, R5, R6 
    /*000066d0*/ ADD         R4, R4, #108                @ 0x6c 
    /*000066d4*/ MOV         R0, R4 
    /*000066d8*/ BL          0x00000000000066D8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000066dc*/ SUBS        R7, R0, #0 
    /*000066e0*/ BNE         VPSS_GetChnLDCAttr_x6778
    /*000066e4*/ LDR         R3, [R6, R5, LSL #2] 
    /*000066e8*/ CMP         R3, #0 
    /*000066ec*/ BEQ         VPSS_GetChnLDCAttr_x6784
    /*000066f0*/ MOV         R2, R8 
    /*000066f4*/ MOV         R1, R9 
    /*000066f8*/ MOV         R0, R5 
    /*000066fc*/ BL          0x00000000000066FC          @ VPSS_DRV_GetChnLDCAttrSet [R_ARM_CALL: .text+0x194c0] 
    /*00006700*/ MOV         R0, R4 
    /*00006704*/ BL          0x0000000000006704          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006708*/ MOV         R0, R7 
    VPSS_GetChnLDCAttr_x670c:
    /*0000670c*/ ADD         SP, SP, #20 
    /*00006710*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_GetChnLDCAttr_x6714:
    /*00006714*/ BL          0x00000000000001B0 
    /*00006718*/ CMP         R0, #0 
    /*0000671c*/ BEQ         VPSS_GetChnLDCAttr_x66b0
    /*00006720*/ MOVW        R0, #32769                  @ 0x8001 
    /*00006724*/ MOVT        R0, #40967                  @ 0xa007 
    /*00006728*/ B           VPSS_GetChnLDCAttr_x670c
    VPSS_GetChnLDCAttr_x672c:
    /*0000672c*/ BL          0x0000000000000174 
    /*00006730*/ CMP         R0, #0 
    /*00006734*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*00006738*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*0000673c*/ BNE         VPSS_GetChnLDCAttr_x670c
    /*00006740*/ B           VPSS_GetChnLDCAttr_x66b8
    VPSS_GetChnLDCAttr_x6744:
    /*00006744*/ MOVW        R3, #4691                   @ 0x1253 
    /*00006748*/ STR         R9, [SP, #8] 
    /*0000674c*/ STR         R3, [SP] 
    /*00006750*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12c4] 
    /*00006754*/ STR         R5, [SP, #4] 
    /*00006758*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12c4] 
    /*0000675c*/ LDR         R3, [PC, #88]               @ 0x00000000000067bc 
    /*00006760*/ MOV         R1, #7 
    /*00006764*/ MOV         R0, #3 
    /*00006768*/ BL          0x0000000000006768          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000676c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00006770*/ MOVT        R0, #40967                  @ 0xa007 
    /*00006774*/ B           VPSS_GetChnLDCAttr_x670c
    VPSS_GetChnLDCAttr_x6778:
    /*00006778*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000677c*/ MOVT        R0, #65535                  @ 0xffff 
    /*00006780*/ B           VPSS_GetChnLDCAttr_x670c
    VPSS_GetChnLDCAttr_x6784:
    /*00006784*/ MOVW        R3, #4700                   @ 0x125c 
    /*00006788*/ MOV         R1, #7 
    /*0000678c*/ STR         R3, [SP] 
    /*00006790*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00006794*/ LDR         R3, [PC, #32]               @ 0x00000000000067bc 
    /*00006798*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*0000679c*/ STR         R5, [SP, #4] 
    /*000067a0*/ MOV         R0, #3 
    /*000067a4*/ BL          0x00000000000067A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000067a8*/ MOV         R0, R4 
    /*000067ac*/ BL          0x00000000000067AC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000067b0*/ MOVW        R0, #32773                  @ 0x8005 
    /*000067b4*/ MOVT        R0, #40967                  @ 0xa007 
    /*000067b8*/ B           VPSS_GetChnLDCAttr_x670c
    /*000067bc*/ ANDEQ       R0, R0, IP, LSR R4 
FUNC_END VPSS_GetChnLDCAttr


FUNC_BEGIN VPSS_SetChnSpreadAttr
    /*000067c0*/ CMP         R0, #15 
    /*000067c4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000067c8*/ MOV         R4, R0 
    /*000067cc*/ SUB         SP, SP, #56                 @ 0x38 
    /*000067d0*/ MOV         R5, R1 
    /*000067d4*/ MOV         R7, R2 
    /*000067d8*/ BHI         VPSS_SetChnSpreadAttr_x6934
    VPSS_SetChnSpreadAttr_x67dc:
    /*000067dc*/ CMP         R7, #0 
    /*000067e0*/ BEQ         VPSS_SetChnSpreadAttr_x694c
    VPSS_SetChnSpreadAttr_x67e4:
    /*000067e4*/ CMP         R5, #2 
    /*000067e8*/ BHI         VPSS_SetChnSpreadAttr_x6964
    /*000067ec*/ MOV         R6, #92                     @ 0x5c 
    /*000067f0*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000067f4*/ MUL         R6, R6, R4 
    /*000067f8*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000067fc*/ ADD         R8, R9, #64                 @ 0x40 
    /*00006800*/ ADD         SL, R6, #44                 @ 0x2c 
    /*00006804*/ ADD         SL, R8, SL 
    /*00006808*/ MOV         R0, SL 
    /*0000680c*/ BL          0x000000000000680C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00006810*/ CMP         R0, #0 
    /*00006814*/ BNE         VPSS_SetChnSpreadAttr_x6998
    /*00006818*/ LDR         R3, [R9, R4, LSL #2] 
    /*0000681c*/ CMP         R3, #0 
    /*00006820*/ BEQ         VPSS_SetChnSpreadAttr_x6a14
    /*00006824*/ ADD         R3, R3, R5, LSL #2 
    /*00006828*/ LDR         R3, [R3, #1604]             @ 0x644 
    /*0000682c*/ CMP         R3, #0 
    /*00006830*/ BEQ         VPSS_SetChnSpreadAttr_x69f0
    /*00006834*/ LDR         R3, [R7] 
    /*00006838*/ CMP         R3, #0 
    /*0000683c*/ BNE         VPSS_SetChnSpreadAttr_x68cc
    VPSS_SetChnSpreadAttr_x6840:
    /*00006840*/ MOV         R1, R5 
    /*00006844*/ MOV         R0, R4 
    /*00006848*/ BL          0x0000000000006848          @ VPSS_IsPhyChnAttachFishEye [R_ARM_CALL: .text+0x43a8] 
    /*0000684c*/ CMP         R0, #0 
    /*00006850*/ BNE         VPSS_SetChnSpreadAttr_x69a4
    /*00006854*/ MOV         R2, R7 
    /*00006858*/ MOV         R1, R5 
    /*0000685c*/ MOV         R0, R4 
    /*00006860*/ BL          0x0000000000006860          @ VPSS_DRV_CheckChnSpreadAttr [R_ARM_CALL: .text+0x197fc] 
    /*00006864*/ SUBS        R9, R0, #0 
    /*00006868*/ BNE         VPSS_SetChnSpreadAttr_x69dc
    /*0000686c*/ ADD         R2, SP, #24 
    /*00006870*/ MOV         R1, R5 
    /*00006874*/ MOV         R0, R4 
    /*00006878*/ BL          0x0000000000006878          @ VPSS_DRV_GetChnLDCAttrSet [R_ARM_CALL: .text+0x194c0] 
    /*0000687c*/ LDR         R3, [SP, #24] 
    /*00006880*/ CMP         R3, #1 
    /*00006884*/ BEQ         VPSS_SetChnSpreadAttr_x68e4
    VPSS_SetChnSpreadAttr_x6888:
    /*00006888*/ ADD         R6, R6, #48                 @ 0x30 
    /*0000688c*/ ADD         R1, SP, #20 
    /*00006890*/ ADD         R8, R8, R6 
    /*00006894*/ MOV         R0, R8 
    /*00006898*/ BL          0x0000000000006898          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000689c*/ MOV         R1, R5 
    /*000068a0*/ MOV         R0, R4 
    /*000068a4*/ MOV         R2, R7 
    /*000068a8*/ BL          0x00000000000068A8          @ VPSS_DRV_SetChnSpreadAttr [R_ARM_CALL: .text+0x19870] 
    /*000068ac*/ ADD         R1, SP, #20 
    /*000068b0*/ MOV         R0, R8 
    /*000068b4*/ BL          0x00000000000068B4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VPSS_SetChnSpreadAttr_x68b8:
    /*000068b8*/ MOV         R0, SL 
    /*000068bc*/ BL          0x00000000000068BC          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_SetChnSpreadAttr_x68c0:
    /*000068c0*/ MOV         R0, R9 
    /*000068c4*/ ADD         SP, SP, #56                 @ 0x38 
    /*000068c8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_SetChnSpreadAttr_x68cc:
    /*000068cc*/ MOV         R1, R5 
    /*000068d0*/ MOV         R0, R4 
    /*000068d4*/ BL          0x000000000000003C 
    /*000068d8*/ SUBS        R9, R0, #0 
    /*000068dc*/ BEQ         VPSS_SetChnSpreadAttr_x6840
    /*000068e0*/ B           VPSS_SetChnSpreadAttr_x68b8
    VPSS_SetChnSpreadAttr_x68e4:
    /*000068e4*/ LDR         R3, [R7] 
    /*000068e8*/ CMP         R3, #1 
    /*000068ec*/ BNE         VPSS_SetChnSpreadAttr_x6888
    /*000068f0*/ LDR         R3, [SP, #52]               @ 0x34 
    /*000068f4*/ CMP         R3, #0 
    /*000068f8*/ BGE         VPSS_SetChnSpreadAttr_x6888
    /*000068fc*/ STR         R3, [SP, #4] 
    /*00006900*/ MOV         R1, #7 
    /*00006904*/ MOVW        R3, #4794                   @ 0x12ba 
    /*00006908*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x130c] 
    /*0000690c*/ STR         R3, [SP] 
    /*00006910*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x130c] 
    /*00006914*/ LDR         R3, [PC, #304]              @ 0x0000000000006a4c 
    /*00006918*/ MOV         R0, #3 
    /*0000691c*/ BL          0x000000000000691C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006920*/ MOV         R0, SL 
    /*00006924*/ MOVW        R9, #32771                  @ 0x8003 
    /*00006928*/ BL          0x0000000000006928          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000692c*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006930*/ B           VPSS_SetChnSpreadAttr_x68c0
    VPSS_SetChnSpreadAttr_x6934:
    /*00006934*/ BL          0x00000000000001B0 
    /*00006938*/ CMP         R0, #0 
    /*0000693c*/ BEQ         VPSS_SetChnSpreadAttr_x67dc
    /*00006940*/ MOVW        R9, #32769                  @ 0x8001 
    /*00006944*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006948*/ B           VPSS_SetChnSpreadAttr_x68c0
    VPSS_SetChnSpreadAttr_x694c:
    /*0000694c*/ BL          0x0000000000000174 
    /*00006950*/ CMP         R0, #0 
    /*00006954*/ MOVWNE      R9, #32774                  @ 0x8006 
    /*00006958*/ MOVTNE      R9, #40967                  @ 0xa007 
    /*0000695c*/ BNE         VPSS_SetChnSpreadAttr_x68c0
    /*00006960*/ B           VPSS_SetChnSpreadAttr_x67e4
    VPSS_SetChnSpreadAttr_x6964:
    /*00006964*/ MOVW        R3, #4726                   @ 0x1276 
    /*00006968*/ STR         R5, [SP, #8] 
    /*0000696c*/ STR         R3, [SP] 
    /*00006970*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1368] 
    /*00006974*/ STR         R4, [SP, #4] 
    /*00006978*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1368] 
    /*0000697c*/ LDR         R3, [PC, #200]              @ 0x0000000000006a4c 
    /*00006980*/ MOV         R1, #7 
    /*00006984*/ MOV         R0, #3 
    /*00006988*/ MOVW        R9, #32770                  @ 0x8002 
    /*0000698c*/ BL          0x000000000000698C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006990*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006994*/ B           VPSS_SetChnSpreadAttr_x68c0
    VPSS_SetChnSpreadAttr_x6998:
    /*00006998*/ MOV         R9, #65024                  @ 0xfe00 
    /*0000699c*/ MOVT        R9, #65535                  @ 0xffff 
    /*000069a0*/ B           VPSS_SetChnSpreadAttr_x68c0
    VPSS_SetChnSpreadAttr_x69a4:
    /*000069a4*/ MOV         R0, SL 
    /*000069a8*/ MOVW        R9, #32777                  @ 0x8009 
    /*000069ac*/ BL          0x00000000000069AC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000069b0*/ MOVW        R2, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13f0] 
    /*000069b4*/ MOVT        R2, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13f0] 
    /*000069b8*/ MOVW        R3, #4774                   @ 0x12a6 
    /*000069bc*/ STMIB       SP, {R4, R5} 
    /*000069c0*/ STR         R3, [SP] 
    VPSS_SetChnSpreadAttr_x69c4:
    /*000069c4*/ LDR         R3, [PC, #128]              @ 0x0000000000006a4c 
    /*000069c8*/ MOV         R1, #7 
    /*000069cc*/ MOV         R0, #3 
    /*000069d0*/ MOVT        R9, #40967                  @ 0xa007 
    /*000069d4*/ BL          0x00000000000069D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000069d8*/ B           VPSS_SetChnSpreadAttr_x68c0
    VPSS_SetChnSpreadAttr_x69dc:
    /*000069dc*/ MOV         R0, SL 
    /*000069e0*/ MOVW        R9, #32771                  @ 0x8003 
    /*000069e4*/ BL          0x00000000000069E4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000069e8*/ MOVT        R9, #40967                  @ 0xa007 
    /*000069ec*/ B           VPSS_SetChnSpreadAttr_x68c0
    VPSS_SetChnSpreadAttr_x69f0:
    /*000069f0*/ MOV         R0, SL 
    /*000069f4*/ MOVW        R9, #32784                  @ 0x8010 
    /*000069f8*/ BL          0x00000000000069F8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000069fc*/ MOVW        R3, #4744                   @ 0x1288 
    /*00006a00*/ MOVW        R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13b0] 
    /*00006a04*/ STMIB       SP, {R4, R5} 
    /*00006a08*/ STR         R3, [SP] 
    /*00006a0c*/ MOVT        R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13b0] 
    /*00006a10*/ B           VPSS_SetChnSpreadAttr_x69c4
    VPSS_SetChnSpreadAttr_x6a14:
    /*00006a14*/ MOVW        R3, #4735                   @ 0x127f 
    /*00006a18*/ MOV         R1, #7 
    /*00006a1c*/ STR         R3, [SP] 
    /*00006a20*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00006a24*/ LDR         R3, [PC, #32]               @ 0x0000000000006a4c 
    /*00006a28*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00006a2c*/ STR         R4, [SP, #4] 
    /*00006a30*/ MOV         R0, #3 
    /*00006a34*/ BL          0x0000000000006A34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006a38*/ MOV         R0, SL 
    /*00006a3c*/ MOVW        R9, #32773                  @ 0x8005 
    /*00006a40*/ BL          0x0000000000006A40          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006a44*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006a48*/ B           VPSS_SetChnSpreadAttr_x68c0
    /*00006a4c*/ ANDEQ       R0, R0, R0, ASR R4 
FUNC_END VPSS_SetChnSpreadAttr


FUNC_BEGIN VPSS_GetChnSpreadAttr
    /*00006a50*/ CMP         R0, #15 
    /*00006a54*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00006a58*/ MOV         R5, R0 
    /*00006a5c*/ SUB         SP, SP, #20 
    /*00006a60*/ MOV         R9, R1 
    /*00006a64*/ MOV         R8, R2 
    /*00006a68*/ BHI         VPSS_GetChnSpreadAttr_x6ad0
    VPSS_GetChnSpreadAttr_x6a6c:
    /*00006a6c*/ CMP         R8, #0 
    /*00006a70*/ BEQ         VPSS_GetChnSpreadAttr_x6ae8
    VPSS_GetChnSpreadAttr_x6a74:
    /*00006a74*/ CMP         R9, #2 
    /*00006a78*/ BHI         VPSS_GetChnSpreadAttr_x6b00
    /*00006a7c*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006a80*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006a84*/ MOV         R4, #92                     @ 0x5c 
    /*00006a88*/ MLA         R4, R4, R5, R6 
    /*00006a8c*/ ADD         R4, R4, #108                @ 0x6c 
    /*00006a90*/ MOV         R0, R4 
    /*00006a94*/ BL          0x0000000000006A94          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00006a98*/ SUBS        R7, R0, #0 
    /*00006a9c*/ BNE         VPSS_GetChnSpreadAttr_x6b34
    /*00006aa0*/ LDR         R3, [R6, R5, LSL #2] 
    /*00006aa4*/ CMP         R3, #0 
    /*00006aa8*/ BEQ         VPSS_GetChnSpreadAttr_x6b40
    /*00006aac*/ MOV         R2, R8 
    /*00006ab0*/ MOV         R1, R9 
    /*00006ab4*/ MOV         R0, R5 
    /*00006ab8*/ BL          0x0000000000006AB8          @ VPSS_DRV_GetChnSpreadAttrSet [R_ARM_CALL: .text+0x198b8] 
    /*00006abc*/ MOV         R0, R4 
    /*00006ac0*/ BL          0x0000000000006AC0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006ac4*/ MOV         R0, R7 
    VPSS_GetChnSpreadAttr_x6ac8:
    /*00006ac8*/ ADD         SP, SP, #20 
    /*00006acc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_GetChnSpreadAttr_x6ad0:
    /*00006ad0*/ BL          0x00000000000001B0 
    /*00006ad4*/ CMP         R0, #0 
    /*00006ad8*/ BEQ         VPSS_GetChnSpreadAttr_x6a6c
    /*00006adc*/ MOVW        R0, #32769                  @ 0x8001 
    /*00006ae0*/ MOVT        R0, #40967                  @ 0xa007 
    /*00006ae4*/ B           VPSS_GetChnSpreadAttr_x6ac8
    VPSS_GetChnSpreadAttr_x6ae8:
    /*00006ae8*/ BL          0x0000000000000174 
    /*00006aec*/ CMP         R0, #0 
    /*00006af0*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*00006af4*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*00006af8*/ BNE         VPSS_GetChnSpreadAttr_x6ac8
    /*00006afc*/ B           VPSS_GetChnSpreadAttr_x6a74
    VPSS_GetChnSpreadAttr_x6b00:
    /*00006b00*/ MOVW        R3, #4818                   @ 0x12d2 
    /*00006b04*/ STR         R9, [SP, #8] 
    /*00006b08*/ STR         R3, [SP] 
    /*00006b0c*/ MOVW        R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1474] 
    /*00006b10*/ STR         R5, [SP, #4] 
    /*00006b14*/ MOVT        R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1474] 
    /*00006b18*/ LDR         R3, [PC, #88]               @ 0x0000000000006b78 
    /*00006b1c*/ MOV         R1, #7 
    /*00006b20*/ MOV         R0, #3 
    /*00006b24*/ BL          0x0000000000006B24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006b28*/ MOVW        R0, #32770                  @ 0x8002 
    /*00006b2c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00006b30*/ B           VPSS_GetChnSpreadAttr_x6ac8
    VPSS_GetChnSpreadAttr_x6b34:
    /*00006b34*/ MOV         R0, #65024                  @ 0xfe00 
    /*00006b38*/ MOVT        R0, #65535                  @ 0xffff 
    /*00006b3c*/ B           VPSS_GetChnSpreadAttr_x6ac8
    VPSS_GetChnSpreadAttr_x6b40:
    /*00006b40*/ MOVW        R3, #4827                   @ 0x12db 
    /*00006b44*/ MOV         R1, #7 
    /*00006b48*/ STR         R3, [SP] 
    /*00006b4c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00006b50*/ LDR         R3, [PC, #32]               @ 0x0000000000006b78 
    /*00006b54*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00006b58*/ STR         R5, [SP, #4] 
    /*00006b5c*/ MOV         R0, #3 
    /*00006b60*/ BL          0x0000000000006B60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006b64*/ MOV         R0, R4 
    /*00006b68*/ BL          0x0000000000006B68          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006b6c*/ MOVW        R0, #32773                  @ 0x8005 
    /*00006b70*/ MOVT        R0, #40967                  @ 0xa007 
    /*00006b74*/ B           VPSS_GetChnSpreadAttr_x6ac8
    /*00006b78*/ ANDEQ       R0, R0, R8, ROR #8 
FUNC_END VPSS_GetChnSpreadAttr


FUNC_BEGIN VPSS_LowDelayCheckEnable
    /*00006b7c*/ LDR         R3, [R2] 
    /*00006b80*/ CMP         R3, #1 
    /*00006b84*/ BEQ         VPSS_LowDelayCheckEnable_x6b90
    VPSS_LowDelayCheckEnable_x6b88:
    /*00006b88*/ MOV         R0, #0 
    /*00006b8c*/ BX          LR 
    VPSS_LowDelayCheckEnable_x6b90:
    /*00006b90*/ LDR         R3, [R0, #2092]             @ 0x82c 
    /*00006b94*/ CMP         R3, #1 
    /*00006b98*/ BNE         VPSS_LowDelayCheckEnable_x6b88
    /*00006b9c*/ LDR         R0, [R0, #2088]             @ 0x828 
    /*00006ba0*/ SUBS        R0, R0, R1 
    /*00006ba4*/ MVNNE       R0, #0 
    /*00006ba8*/ BX          LR 
FUNC_END VPSS_LowDelayCheckEnable


FUNC_BEGIN VPSS_CheckLowDelayInfo
    /*00006bac*/ PUSH        {R4, LR} 
    /*00006bb0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006bb4*/ LDR         LR, [R2] 
    /*00006bb8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006bbc*/ SUB         SP, SP, #24 
    /*00006bc0*/ CMP         LR, #1 
    /*00006bc4*/ LDR         IP, [R3, R0, LSL #2] 
    /*00006bc8*/ BHI         VPSS_CheckLowDelayInfo_x6cc0
    /*00006bcc*/ LDR         R4, [R2, #4] 
    /*00006bd0*/ MOV         R3, #72                     @ 0x48 
    /*00006bd4*/ CMP         R4, #15 
    /*00006bd8*/ MLALS       IP, R3, R1, IP 
    /*00006bdc*/ LDRLS       R3, [IP, #820]              @ 0x334 
    /*00006be0*/ BLS         VPSS_CheckLowDelayInfo_x6c78
    /*00006be4*/ MLA         R3, R3, R1, IP 
    /*00006be8*/ LDR         R3, [R3, #820]              @ 0x334 
    /*00006bec*/ CMP         R4, R3 
    /*00006bf0*/ BHI         VPSS_CheckLowDelayInfo_x6c78
    /*00006bf4*/ LDR         R3, [IP, #2092]             @ 0x82c 
    /*00006bf8*/ CMP         LR, R3 
    /*00006bfc*/ BEQ         VPSS_CheckLowDelayInfo_x6c44
    /*00006c00*/ CMP         LR, #1 
    /*00006c04*/ CMPEQ       R3, #1 
    /*00006c08*/ BNE         VPSS_CheckLowDelayInfo_x6c58
    /*00006c0c*/ LDR         R3, [IP, #2088]             @ 0x828 
    /*00006c10*/ CMP         R3, R1 
    /*00006c14*/ BEQ         VPSS_CheckLowDelayInfo_x6c58
    VPSS_CheckLowDelayInfo_x6c18:
    /*00006c18*/ MOVW        R3, #5089                   @ 0x13e1 
    /*00006c1c*/ MOVW        R2, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1558] 
    /*00006c20*/ STR         R3, [SP] 
    /*00006c24*/ MOVT        R2, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1558] 
    /*00006c28*/ LDR         R3, [PC, #196]              @ 0x0000000000006cf4 
    /*00006c2c*/ MOV         R1, #7 
    /*00006c30*/ MOV         R0, #3 
    /*00006c34*/ BL          0x0000000000006C34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006c38*/ MOVW        R0, #32777                  @ 0x8009 
    /*00006c3c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00006c40*/ B           VPSS_CheckLowDelayInfo_x6cb8
    VPSS_CheckLowDelayInfo_x6c44:
    /*00006c44*/ LDR         R3, [IP, #2088]             @ 0x828 
    /*00006c48*/ CMP         R3, R1 
    /*00006c4c*/ BEQ         VPSS_CheckLowDelayInfo_x6c64
    /*00006c50*/ CMP         LR, #1 
    /*00006c54*/ BEQ         VPSS_CheckLowDelayInfo_x6c18
    VPSS_CheckLowDelayInfo_x6c58:
    /*00006c58*/ ADD         SP, SP, #24 
    /*00006c5c*/ POP         {R4, LR} 
    VPSS_CheckLowDelayInfo_x6c60:
    /*00006c60*/ B           VPSS_CheckLowDelayInfo_x6c60@ VPSS_DRV_CheckLowDelayInfo [R_ARM_JUMP24: .text+0x24080] 
    VPSS_CheckLowDelayInfo_x6c64:
    /*00006c64*/ LDR         R3, [IP, #2096]             @ 0x830 
    /*00006c68*/ CMP         R4, R3 
    /*00006c6c*/ BNE         VPSS_CheckLowDelayInfo_x6c58
    /*00006c70*/ MOV         R0, #0 
    /*00006c74*/ B           VPSS_CheckLowDelayInfo_x6cb8
    VPSS_CheckLowDelayInfo_x6c78:
    /*00006c78*/ STR         R3, [SP, #20] 
    /*00006c7c*/ MOV         IP, #16 
    /*00006c80*/ MOVW        R3, #5076                   @ 0x13d4 
    /*00006c84*/ STR         R1, [SP, #8] 
    /*00006c88*/ STR         R0, [SP, #4] 
    /*00006c8c*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1500] 
    /*00006c90*/ STR         R3, [SP] 
    /*00006c94*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1500] 
    /*00006c98*/ STR         R4, [SP, #12] 
    /*00006c9c*/ MOV         R1, #7 
    /*00006ca0*/ STR         IP, [SP, #16] 
    /*00006ca4*/ MOV         R0, #3 
    /*00006ca8*/ LDR         R3, [PC, #68]               @ 0x0000000000006cf4 
    /*00006cac*/ BL          0x0000000000006CAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006cb0*/ MOVW        R0, #32771                  @ 0x8003 
    /*00006cb4*/ MOVT        R0, #40967                  @ 0xa007 
    VPSS_CheckLowDelayInfo_x6cb8:
    /*00006cb8*/ ADD         SP, SP, #24 
    /*00006cbc*/ POP         {R4, PC} 
    VPSS_CheckLowDelayInfo_x6cc0:
    /*00006cc0*/ STR         R1, [SP, #8] 
    /*00006cc4*/ MOVW        R3, #5068                   @ 0x13cc 
    /*00006cc8*/ STR         R0, [SP, #4] 
    /*00006ccc*/ MOVW        R2, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14bc] 
    /*00006cd0*/ STR         R3, [SP] 
    /*00006cd4*/ MOVT        R2, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14bc] 
    /*00006cd8*/ LDR         R3, [PC, #20]               @ 0x0000000000006cf4 
    /*00006cdc*/ MOV         R1, #7 
    /*00006ce0*/ MOV         R0, #3 
    /*00006ce4*/ BL          0x0000000000006CE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006ce8*/ MOVW        R0, #32771                  @ 0x8003 
    /*00006cec*/ MOVT        R0, #40967                  @ 0xa007 
    /*00006cf0*/ B           VPSS_CheckLowDelayInfo_x6cb8
    /*00006cf4*/ ANDEQ       R0, R0, R0, LSL #9 
FUNC_END VPSS_CheckLowDelayInfo


FUNC_BEGIN VPSS_SetChnLowDelayAttr
    /*00006cf8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00006cfc*/ SUB         SP, SP, #36                 @ 0x24 
    /*00006d00*/ ADD         SL, SP, #16 
    /*00006d04*/ CMP         R0, #15 
    /*00006d08*/ MOV         R7, R0 
    /*00006d0c*/ MOV         R6, R1 
    /*00006d10*/ STM         SL, {R2, R3} 
    /*00006d14*/ BHI         VPSS_SetChnLowDelayAttr_x6e34
    VPSS_SetChnLowDelayAttr_x6d18:
    /*00006d18*/ CMP         R6, #10 
    /*00006d1c*/ BHI         VPSS_SetChnLowDelayAttr_x6e4c
    /*00006d20*/ CMP         R6, #2 
    /*00006d24*/ BHI         VPSS_SetChnLowDelayAttr_x6e58
    /*00006d28*/ MOV         R5, #92                     @ 0x5c 
    /*00006d2c*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006d30*/ MUL         R5, R5, R7 
    /*00006d34*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006d38*/ ADD         FP, R4, #64                 @ 0x40 
    /*00006d3c*/ ADD         R8, R5, #44                 @ 0x2c 
    /*00006d40*/ ADD         R8, FP, R8 
    /*00006d44*/ MOV         R0, R8 
    /*00006d48*/ BL          0x0000000000006D48          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00006d4c*/ SUBS        R9, R0, #0 
    /*00006d50*/ BNE         VPSS_SetChnLowDelayAttr_x6ef4
    /*00006d54*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00006d58*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00006d5c*/ LDR         R4, [R4, R7, LSL #2] 
    /*00006d60*/ LDR         R3, [R3, R7, LSL #2] 
    /*00006d64*/ CMP         R4, #0 
    /*00006d68*/ CMPNE       R3, #0 
    /*00006d6c*/ BEQ         VPSS_SetChnLowDelayAttr_x6f38
    /*00006d70*/ ADD         R3, R4, R6, LSL #2 
    /*00006d74*/ LDR         R3, [R3, #1604]             @ 0x644 
    /*00006d78*/ CMP         R3, #0 
    /*00006d7c*/ BEQ         VPSS_SetChnLowDelayAttr_x6f00
    /*00006d80*/ MOV         R2, SL 
    /*00006d84*/ MOV         R0, R7 
    /*00006d88*/ MOV         R1, R6 
    /*00006d8c*/ BL          0x0000000000006D8C          @ VPSS_CheckLowDelayInfo [R_ARM_CALL: .text+0x6bac] 
    /*00006d90*/ SUBS        R3, R0, #0 
    /*00006d94*/ BNE         VPSS_SetChnLowDelayAttr_x6e1c
    /*00006d98*/ ADD         R5, R5, #48                 @ 0x30 
    /*00006d9c*/ ADD         R1, SP, #28 
    /*00006da0*/ ADD         R5, FP, R5 
    /*00006da4*/ MOV         R0, R5 
    /*00006da8*/ BL          0x0000000000006DA8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006dac*/ LDR         R3, [SP, #16] 
    /*00006db0*/ CMP         R3, #0 
    /*00006db4*/ BNE         VPSS_SetChnLowDelayAttr_x6dd8
    /*00006db8*/ LDR         R2, [R4, #2088]             @ 0x828 
    /*00006dbc*/ CMP         R2, R6 
    /*00006dc0*/ LDR         R2, [R4, #2092]             @ 0x82c 
    /*00006dc4*/ BEQ         VPSS_SetChnLowDelayAttr_x6dd0
    /*00006dc8*/ CMP         R2, #1 
    /*00006dcc*/ BEQ         VPSS_SetChnLowDelayAttr_x6eb8
    VPSS_SetChnLowDelayAttr_x6dd0:
    /*00006dd0*/ CMP         R2, #0 
    /*00006dd4*/ BEQ         VPSS_SetChnLowDelayAttr_x6e8c
    VPSS_SetChnLowDelayAttr_x6dd8:
    /*00006dd8*/ LDR         R2, [SP, #20] 
    /*00006ddc*/ MOV         R1, #1 
    /*00006de0*/ STR         R3, [R4, #2092]             @ 0x82c 
    /*00006de4*/ STR         R6, [R4, #2088]             @ 0x828 
    /*00006de8*/ STR         R2, [R4, #2096]             @ 0x830 
    /*00006dec*/ STR         R1, [R4, #2084]             @ 0x824 
    VPSS_SetChnLowDelayAttr_x6df0:
    /*00006df0*/ ADD         R4, R4, R6, LSL #3 
    /*00006df4*/ ADD         R1, SP, #28 
    /*00006df8*/ MOV         R0, R5 
    /*00006dfc*/ STR         R3, [R4, #2100]             @ 0x834 
    /*00006e00*/ STR         R2, [R4, #2104]             @ 0x838 
    /*00006e04*/ BL          0x0000000000006E04          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006e08*/ MOV         R0, R8 
    /*00006e0c*/ BL          0x0000000000006E0C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006e10*/ MOV         R0, R9 
    /*00006e14*/ ADD         SP, SP, #36                 @ 0x24 
    /*00006e18*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_SetChnLowDelayAttr_x6e1c:
    /*00006e1c*/ MOV         R0, R8 
    /*00006e20*/ MOV         R9, R3 
    /*00006e24*/ BL          0x0000000000006E24          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_SetChnLowDelayAttr_x6e28:
    /*00006e28*/ MOV         R0, R9 
    /*00006e2c*/ ADD         SP, SP, #36                 @ 0x24 
    /*00006e30*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_SetChnLowDelayAttr_x6e34:
    /*00006e34*/ BL          0x00000000000001B0 
    /*00006e38*/ CMP         R0, #0 
    /*00006e3c*/ BEQ         VPSS_SetChnLowDelayAttr_x6d18
    /*00006e40*/ MOVW        R9, #32769                  @ 0x8001 
    /*00006e44*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006e48*/ B           VPSS_SetChnLowDelayAttr_x6e28
    VPSS_SetChnLowDelayAttr_x6e4c:
    /*00006e4c*/ BL          0x00000000000001EC 
    /*00006e50*/ CMP         R0, #0 
    /*00006e54*/ BNE         VPSS_SetChnLowDelayAttr_x6ee8
    VPSS_SetChnLowDelayAttr_x6e58:
    /*00006e58*/ MOVW        R3, #5112                   @ 0x13f8 
    /*00006e5c*/ STR         R6, [SP, #8] 
    /*00006e60*/ STR         R3, [SP] 
    /*00006e64*/ MOVW        R2, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15b0] 
    /*00006e68*/ STR         R7, [SP, #4] 
    /*00006e6c*/ MOVT        R2, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15b0] 
    /*00006e70*/ LDR         R3, [PC, #248]              @ 0x0000000000006f70 
    /*00006e74*/ MOV         R1, #7 
    /*00006e78*/ MOV         R0, #3 
    /*00006e7c*/ MOVW        R9, #32776                  @ 0x8008 
    /*00006e80*/ BL          0x0000000000006E80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006e84*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006e88*/ B           VPSS_SetChnLowDelayAttr_x6e28
    VPSS_SetChnLowDelayAttr_x6e8c:
    /*00006e8c*/ MOVW        R3, #5165                   @ 0x142d 
    /*00006e90*/ MOVW        R2, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1660] 
    /*00006e94*/ STR         R3, [SP] 
    /*00006e98*/ MOVT        R2, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1660] 
    /*00006e9c*/ LDR         R3, [PC, #204]              @ 0x0000000000006f70 
    /*00006ea0*/ MOV         R1, #7 
    /*00006ea4*/ MOV         R0, #4 
    /*00006ea8*/ BL          0x0000000000006EA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006eac*/ LDR         R3, [SP, #16] 
    /*00006eb0*/ LDR         R2, [SP, #20] 
    /*00006eb4*/ B           VPSS_SetChnLowDelayAttr_x6df0
    VPSS_SetChnLowDelayAttr_x6eb8:
    /*00006eb8*/ MOVW        R3, #5159                   @ 0x1427 
    /*00006ebc*/ STR         R6, [SP, #4] 
    /*00006ec0*/ STR         R3, [SP] 
    /*00006ec4*/ MOVW        R2, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x162c] 
    /*00006ec8*/ LDR         R3, [PC, #160]              @ 0x0000000000006f70 
    /*00006ecc*/ MOVT        R2, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x162c] 
    /*00006ed0*/ MOV         R1, #7 
    /*00006ed4*/ MOV         R0, #4 
    /*00006ed8*/ BL          0x0000000000006ED8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006edc*/ LDR         R3, [SP, #16] 
    /*00006ee0*/ LDR         R2, [SP, #20] 
    /*00006ee4*/ B           VPSS_SetChnLowDelayAttr_x6df0
    VPSS_SetChnLowDelayAttr_x6ee8:
    /*00006ee8*/ MOVW        R9, #32770                  @ 0x8002 
    /*00006eec*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006ef0*/ B           VPSS_SetChnLowDelayAttr_x6e28
    VPSS_SetChnLowDelayAttr_x6ef4:
    /*00006ef4*/ MOV         R9, #65024                  @ 0xfe00 
    /*00006ef8*/ MOVT        R9, #65535                  @ 0xffff 
    /*00006efc*/ B           VPSS_SetChnLowDelayAttr_x6e28
    VPSS_SetChnLowDelayAttr_x6f00:
    /*00006f00*/ MOVW        R3, #5138                   @ 0x1412 
    /*00006f04*/ MOV         R1, #7 
    /*00006f08*/ STR         R3, [SP] 
    /*00006f0c*/ MOVW        R2, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15f4] 
    /*00006f10*/ LDR         R3, [PC, #88]               @ 0x0000000000006f70 
    /*00006f14*/ MOVT        R2, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15f4] 
    /*00006f18*/ STR         R6, [SP, #4] 
    /*00006f1c*/ MOV         R0, #3 
    /*00006f20*/ BL          0x0000000000006F20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006f24*/ MOV         R0, R8 
    /*00006f28*/ MOVW        R9, #32784                  @ 0x8010 
    /*00006f2c*/ BL          0x0000000000006F2C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006f30*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006f34*/ B           VPSS_SetChnLowDelayAttr_x6e28
    VPSS_SetChnLowDelayAttr_x6f38:
    /*00006f38*/ MOVW        R3, #5131                   @ 0x140b 
    /*00006f3c*/ MOV         R1, #7 
    /*00006f40*/ STR         R3, [SP] 
    /*00006f44*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00006f48*/ LDR         R3, [PC, #32]               @ 0x0000000000006f70 
    /*00006f4c*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00006f50*/ STR         R7, [SP, #4] 
    /*00006f54*/ MOV         R0, #3 
    /*00006f58*/ BL          0x0000000000006F58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006f5c*/ MOV         R0, R8 
    /*00006f60*/ MOVW        R9, #32773                  @ 0x8005 
    /*00006f64*/ BL          0x0000000000006F64          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006f68*/ MOVT        R9, #40967                  @ 0xa007 
    /*00006f6c*/ B           VPSS_SetChnLowDelayAttr_x6e28
    /*00006f70*/ MULEQ       R0, R8, R4 
FUNC_END VPSS_SetChnLowDelayAttr


FUNC_BEGIN VPSS_GetChnLowDelayAttr
    /*00006f74*/ CMP         R0, #15 
    /*00006f78*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00006f7c*/ MOV         R7, R0 
    /*00006f80*/ SUB         SP, SP, #20 
    /*00006f84*/ MOV         R6, R1 
    /*00006f88*/ MOV         R9, R2 
    /*00006f8c*/ BHI         VPSS_GetChnLowDelayAttr_x7038
    VPSS_GetChnLowDelayAttr_x6f90:
    /*00006f90*/ CMP         R6, #10 
    /*00006f94*/ BHI         VPSS_GetChnLowDelayAttr_x7050
    VPSS_GetChnLowDelayAttr_x6f98:
    /*00006f98*/ CMP         R9, #0 
    /*00006f9c*/ BEQ         VPSS_GetChnLowDelayAttr_x7068
    VPSS_GetChnLowDelayAttr_x6fa0:
    /*00006fa0*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006fa4*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006fa8*/ MOV         R4, #92                     @ 0x5c 
    /*00006fac*/ MLA         R4, R4, R7, R5 
    /*00006fb0*/ ADD         R4, R4, #108                @ 0x6c 
    /*00006fb4*/ MOV         R0, R4 
    /*00006fb8*/ BL          0x0000000000006FB8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00006fbc*/ SUBS        R8, R0, #0 
    /*00006fc0*/ BNE         VPSS_GetChnLowDelayAttr_x70b0
    /*00006fc4*/ LDR         R1, [R5, R7, LSL #2] 
    /*00006fc8*/ CMP         R1, #0 
    /*00006fcc*/ BEQ         VPSS_GetChnLowDelayAttr_x7080
    /*00006fd0*/ CMP         R6, #2 
    /*00006fd4*/ BHI         VPSS_GetChnLowDelayAttr_x7004
    /*00006fd8*/ ADD         R1, R1, R6, LSL #3 
    /*00006fdc*/ MOV         R0, R9 
    /*00006fe0*/ ADD         R1, R1, #2096               @ 0x830 
    /*00006fe4*/ MOV         R2, #8 
    /*00006fe8*/ ADD         R1, R1, #4 
    /*00006fec*/ BL          0x0000000000006FEC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VPSS_GetChnLowDelayAttr_x6ff0:
    /*00006ff0*/ MOV         R0, R4 
    /*00006ff4*/ BL          0x0000000000006FF4          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_GetChnLowDelayAttr_x6ff8:
    /*00006ff8*/ MOV         R0, R8 
    /*00006ffc*/ ADD         SP, SP, #20 
    /*00007000*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_GetChnLowDelayAttr_x7004:
    /*00007004*/ MOVW        R3, #5220                   @ 0x1464 
    /*00007008*/ STR         R6, [SP, #8] 
    /*0000700c*/ STR         R3, [SP] 
    /*00007010*/ MOVW        R2, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15b0] 
    /*00007014*/ STR         R7, [SP, #4] 
    /*00007018*/ MOVT        R2, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15b0] 
    /*0000701c*/ LDR         R3, [PC, #152]              @ 0x00000000000070bc 
    /*00007020*/ MOV         R1, #7 
    /*00007024*/ MOV         R0, #3 
    /*00007028*/ MOVW        R8, #32776                  @ 0x8008 
    /*0000702c*/ BL          0x000000000000702C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007030*/ MOVT        R8, #40967                  @ 0xa007 
    /*00007034*/ B           VPSS_GetChnLowDelayAttr_x6ff0
    VPSS_GetChnLowDelayAttr_x7038:
    /*00007038*/ BL          0x00000000000001B0 
    /*0000703c*/ CMP         R0, #0 
    /*00007040*/ BEQ         VPSS_GetChnLowDelayAttr_x6f90
    /*00007044*/ MOVW        R8, #32769                  @ 0x8001 
    /*00007048*/ MOVT        R8, #40967                  @ 0xa007 
    /*0000704c*/ B           VPSS_GetChnLowDelayAttr_x6ff8
    VPSS_GetChnLowDelayAttr_x7050:
    /*00007050*/ BL          0x00000000000001EC 
    /*00007054*/ CMP         R0, #0 
    /*00007058*/ BEQ         VPSS_GetChnLowDelayAttr_x6f98
    /*0000705c*/ MOVW        R8, #32770                  @ 0x8002 
    /*00007060*/ MOVT        R8, #40967                  @ 0xa007 
    /*00007064*/ B           VPSS_GetChnLowDelayAttr_x6ff8
    VPSS_GetChnLowDelayAttr_x7068:
    /*00007068*/ BL          0x0000000000000174 
    /*0000706c*/ CMP         R0, #0 
    /*00007070*/ MOVWNE      R8, #32774                  @ 0x8006 
    /*00007074*/ MOVTNE      R8, #40967                  @ 0xa007 
    /*00007078*/ BNE         VPSS_GetChnLowDelayAttr_x6ff8
    /*0000707c*/ B           VPSS_GetChnLowDelayAttr_x6fa0
    VPSS_GetChnLowDelayAttr_x7080:
    /*00007080*/ MOVW        R3, #5203                   @ 0x1453 
    /*00007084*/ STR         R7, [SP, #4] 
    /*00007088*/ STR         R3, [SP] 
    /*0000708c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00007090*/ LDR         R3, [PC, #36]               @ 0x00000000000070bc 
    /*00007094*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00007098*/ MOV         R1, #7 
    /*0000709c*/ MOV         R0, #3 
    /*000070a0*/ MOVW        R8, #32773                  @ 0x8005 
    /*000070a4*/ BL          0x00000000000070A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000070a8*/ MOVT        R8, #40967                  @ 0xa007 
    /*000070ac*/ B           VPSS_GetChnLowDelayAttr_x6ff0
    VPSS_GetChnLowDelayAttr_x70b0:
    /*000070b0*/ MOV         R8, #65024                  @ 0xfe00 
    /*000070b4*/ MOVT        R8, #65535                  @ 0xffff 
    /*000070b8*/ B           VPSS_GetChnLowDelayAttr_x6ff8
    /*000070bc*/ @           <UNDEFINED> instruction: 0x000004b0 
FUNC_END VPSS_GetChnLowDelayAttr


FUNC_BEGIN VPSS_AttachVbPool
    /*000070c0*/ CMP         R0, #15 
    /*000070c4*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000070c8*/ MOV         R4, R0 
    /*000070cc*/ SUB         SP, SP, #24 
    /*000070d0*/ MOV         R5, R1 
    /*000070d4*/ MOV         R8, R2 
    /*000070d8*/ BHI         VPSS_AttachVbPool_x7178
    VPSS_AttachVbPool_x70dc:
    /*000070dc*/ CMP         R5, #10 
    /*000070e0*/ BHI         VPSS_AttachVbPool_x7190
    VPSS_AttachVbPool_x70e4:
    /*000070e4*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000070e8*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000070ec*/ LDR         R7, [R6, R4, LSL #2] 
    /*000070f0*/ CMP         R7, #0 
    /*000070f4*/ BEQ         VPSS_AttachVbPool_x7208
    /*000070f8*/ MOVW        R3, #0                      @ vpss_vb_source [R_ARM_MOVW_ABS_NC: .bss+0x678c] 
    /*000070fc*/ MOVT        R3, #0                      @ vpss_vb_source [R_ARM_MOVT_ABS: .bss+0x678c] 
    /*00007100*/ LDR         R3, [R3] 
    /*00007104*/ CMP         R3, #2 
    /*00007108*/ BNE         VPSS_AttachVbPool_x71a8
    /*0000710c*/ MOV         R0, #1 
    /*00007110*/ BL          0x0000000000007110          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007114*/ LDR         R3, [R0, #88]               @ 0x58 
    /*00007118*/ CMP         R3, #0 
    /*0000711c*/ BEQ         VPSS_AttachVbPool_x71dc
    /*00007120*/ MOV         R0, #1 
    /*00007124*/ BL          0x0000000000007124          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007128*/ LDR         R3, [R0, #88]               @ 0x58 
    /*0000712c*/ MOV         R0, R8 
    /*00007130*/ BLX         R3 
    /*00007134*/ CMP         R0, #0 
    /*00007138*/ BEQ         VPSS_AttachVbPool_x71dc
    /*0000713c*/ MOV         R3, #92                     @ 0x5c 
    /*00007140*/ ADD         R1, SP, #20 
    /*00007144*/ MLA         R4, R3, R4, R6 
    /*00007148*/ ADD         R4, R4, #112                @ 0x70 
    /*0000714c*/ MOV         R0, R4 
    /*00007150*/ BL          0x0000000000007150          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007154*/ ADD         R3, R5, #8064               @ 0x1f80 
    /*00007158*/ ADD         R3, R3, #14 
    /*0000715c*/ MOV         R0, R4 
    /*00007160*/ ADD         R1, SP, #20 
    /*00007164*/ STR         R8, [R7, R3, LSL #2] 
    /*00007168*/ BL          0x0000000000007168          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000716c*/ MOV         R0, #0 
    VPSS_AttachVbPool_x7170:
    /*00007170*/ ADD         SP, SP, #24 
    /*00007174*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_AttachVbPool_x7178:
    /*00007178*/ BL          0x00000000000001B0 
    /*0000717c*/ CMP         R0, #0 
    /*00007180*/ BEQ         VPSS_AttachVbPool_x70dc
    /*00007184*/ MOVW        R0, #32769                  @ 0x8001 
    /*00007188*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000718c*/ B           VPSS_AttachVbPool_x7170
    VPSS_AttachVbPool_x7190:
    /*00007190*/ BL          0x00000000000001EC 
    /*00007194*/ CMP         R0, #0 
    /*00007198*/ BEQ         VPSS_AttachVbPool_x70e4
    /*0000719c*/ MOVW        R0, #32770                  @ 0x8002 
    /*000071a0*/ MOVT        R0, #40967                  @ 0xa007 
    /*000071a4*/ B           VPSS_AttachVbPool_x7170
    VPSS_AttachVbPool_x71a8:
    /*000071a8*/ STR         R3, [SP, #8] 
    /*000071ac*/ MOVW        R2, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16c8] 
    /*000071b0*/ MOVW        R3, #5375                   @ 0x14ff 
    /*000071b4*/ STR         R4, [SP, #4] 
    /*000071b8*/ STR         R3, [SP] 
    /*000071bc*/ MOVT        R2, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16c8] 
    /*000071c0*/ LDR         R3, [PC, #112]              @ 0x0000000000007238 
    /*000071c4*/ MOV         R1, #7 
    /*000071c8*/ MOV         R0, #3 
    /*000071cc*/ BL          0x00000000000071CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000071d0*/ MOVW        R0, #32776                  @ 0x8008 
    /*000071d4*/ MOVT        R0, #40967                  @ 0xa007 
    /*000071d8*/ B           VPSS_AttachVbPool_x7170
    VPSS_AttachVbPool_x71dc:
    /*000071dc*/ MOVW        R3, #5381                   @ 0x1505 
    /*000071e0*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x170c] 
    /*000071e4*/ STR         R3, [SP] 
    /*000071e8*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x170c] 
    /*000071ec*/ LDR         R3, [PC, #68]               @ 0x0000000000007238 
    /*000071f0*/ MOV         R1, #7 
    /*000071f4*/ MOV         R0, #3 
    /*000071f8*/ BL          0x00000000000071F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000071fc*/ MOVW        R0, #32771                  @ 0x8003 
    /*00007200*/ MOVT        R0, #40967                  @ 0xa007 
    /*00007204*/ B           VPSS_AttachVbPool_x7170
    VPSS_AttachVbPool_x7208:
    /*00007208*/ MOVW        R3, #5369                   @ 0x14f9 
    /*0000720c*/ STR         R4, [SP, #4] 
    /*00007210*/ STR         R3, [SP] 
    /*00007214*/ MOVW        R2, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1698] 
    /*00007218*/ LDR         R3, [PC, #24]               @ 0x0000000000007238 
    /*0000721c*/ MOVT        R2, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1698] 
    /*00007220*/ MOV         R1, #7 
    /*00007224*/ MOV         R0, #3 
    /*00007228*/ BL          0x0000000000007228          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000722c*/ MOVW        R0, #32773                  @ 0x8005 
    /*00007230*/ MOVT        R0, #40967                  @ 0xa007 
    /*00007234*/ B           VPSS_AttachVbPool_x7170
    /*00007238*/ ANDEQ       R0, R0, R8, ASR #9 
FUNC_END VPSS_AttachVbPool


FUNC_BEGIN VPSS_DetachVbPool
    /*0000723c*/ CMP         R0, #15 
    /*00007240*/ PUSH        {R4, R5, R6, LR} 
    /*00007244*/ MOV         R4, R0 
    /*00007248*/ SUB         SP, SP, #24 
    /*0000724c*/ MOV         R5, R1 
    /*00007250*/ BHI         VPSS_DetachVbPool_x72c4
    VPSS_DetachVbPool_x7254:
    /*00007254*/ CMP         R5, #10 
    /*00007258*/ BHI         VPSS_DetachVbPool_x72dc
    VPSS_DetachVbPool_x725c:
    /*0000725c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007260*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007264*/ LDR         R6, [R3, R4, LSL #2] 
    /*00007268*/ CMP         R6, #0 
    /*0000726c*/ BEQ         VPSS_DetachVbPool_x7328
    /*00007270*/ MOVW        R2, #0                      @ vpss_vb_source [R_ARM_MOVW_ABS_NC: .bss+0x678c] 
    /*00007274*/ MOVT        R2, #0                      @ vpss_vb_source [R_ARM_MOVT_ABS: .bss+0x678c] 
    /*00007278*/ LDR         R2, [R2] 
    /*0000727c*/ CMP         R2, #2 
    /*00007280*/ BNE         VPSS_DetachVbPool_x72f4
    /*00007284*/ MOV         R2, #92                     @ 0x5c 
    /*00007288*/ ADD         R1, SP, #20 
    /*0000728c*/ MLA         R4, R2, R4, R3 
    /*00007290*/ ADD         R4, R4, #112                @ 0x70 
    /*00007294*/ MOV         R0, R4 
    /*00007298*/ BL          0x0000000000007298          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000729c*/ ADD         R3, R5, #8064               @ 0x1f80 
    /*000072a0*/ ADD         R3, R3, #14 
    /*000072a4*/ MOV         R0, R4 
    /*000072a8*/ MVN         R2, #0 
    /*000072ac*/ ADD         R1, SP, #20 
    /*000072b0*/ STR         R2, [R6, R3, LSL #2] 
    /*000072b4*/ BL          0x00000000000072B4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000072b8*/ MOV         R0, #0 
    VPSS_DetachVbPool_x72bc:
    /*000072bc*/ ADD         SP, SP, #24 
    /*000072c0*/ POP         {R4, R5, R6, PC} 
    VPSS_DetachVbPool_x72c4:
    /*000072c4*/ BL          0x00000000000001B0 
    /*000072c8*/ CMP         R0, #0 
    /*000072cc*/ BEQ         VPSS_DetachVbPool_x7254
    /*000072d0*/ MOVW        R0, #32769                  @ 0x8001 
    /*000072d4*/ MOVT        R0, #40967                  @ 0xa007 
    /*000072d8*/ B           VPSS_DetachVbPool_x72bc
    VPSS_DetachVbPool_x72dc:
    /*000072dc*/ BL          0x00000000000001EC 
    /*000072e0*/ CMP         R0, #0 
    /*000072e4*/ BEQ         VPSS_DetachVbPool_x725c
    /*000072e8*/ MOVW        R0, #32770                  @ 0x8002 
    /*000072ec*/ MOVT        R0, #40967                  @ 0xa007 
    /*000072f0*/ B           VPSS_DetachVbPool_x72bc
    VPSS_DetachVbPool_x72f4:
    /*000072f4*/ STR         R2, [SP, #8] 
    /*000072f8*/ MOVW        R3, #5412                   @ 0x1524 
    /*000072fc*/ STR         R4, [SP, #4] 
    /*00007300*/ MOVW        R2, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1738] 
    /*00007304*/ STR         R3, [SP] 
    /*00007308*/ MOVT        R2, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1738] 
    /*0000730c*/ LDR         R3, [PC, #68]               @ 0x0000000000007358 
    /*00007310*/ MOV         R1, #7 
    /*00007314*/ MOV         R0, #3 
    /*00007318*/ BL          0x0000000000007318          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000731c*/ MOVW        R0, #32776                  @ 0x8008 
    /*00007320*/ MOVT        R0, #40967                  @ 0xa007 
    /*00007324*/ B           VPSS_DetachVbPool_x72bc
    VPSS_DetachVbPool_x7328:
    /*00007328*/ MOVW        R3, #5406                   @ 0x151e 
    /*0000732c*/ STR         R4, [SP, #4] 
    /*00007330*/ STR         R3, [SP] 
    /*00007334*/ MOVW        R2, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1698] 
    /*00007338*/ LDR         R3, [PC, #24]               @ 0x0000000000007358 
    /*0000733c*/ MOVT        R2, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1698] 
    /*00007340*/ MOV         R1, #7 
    /*00007344*/ MOV         R0, #3 
    /*00007348*/ BL          0x0000000000007348          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000734c*/ MOVW        R0, #32773                  @ 0x8005 
    /*00007350*/ MOVT        R0, #40967                  @ 0xa007 
    /*00007354*/ B           VPSS_DetachVbPool_x72bc
    /*00007358*/ LDRDEQ      R0, [R0], -IP 
FUNC_END VPSS_DetachVbPool


FUNC_BEGIN VPSS_SetOnlineStartState
    /*0000735c*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00007360*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00007364*/ PUSH        {R4, R5, R6, LR} 
    /*00007368*/ MOV         R5, R1 
    /*0000736c*/ LDR         R4, [R3, R0, LSL #2] 
    /*00007370*/ CMP         R4, #0 
    /*00007374*/ BEQ         VPSS_SetOnlineStartState_x7398
    VPSS_SetOnlineStartState_x7378:
    /*00007378*/ ADD         R3, R4, #16384              @ 0x4000 
    /*0000737c*/ CMP         R5, #1 
    /*00007380*/ MOVEQ       R2, #3 
    /*00007384*/ MOVNE       R2, #1 
    /*00007388*/ STR         R2, [R3, #200]              @ 0xc8 
    /*0000738c*/ STR         R2, [R3, #204]              @ 0xcc 
    /*00007390*/ STR         R2, [R3, #208]              @ 0xd0 
    /*00007394*/ POP         {R4, R5, R6, PC} 
    VPSS_SetOnlineStartState_x7398:
    /*00007398*/ MOVW        R3, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x177c] 
    /*0000739c*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*000073a0*/ MOVT        R3, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x177c] 
    /*000073a4*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*000073a8*/ MOVW        R2, #5431                   @ 0x1537 
    /*000073ac*/ LDR         R1, [PC, #4]                @ 0x00000000000073b8 
    /*000073b0*/ BL          0x00000000000073B0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000073b4*/ B           VPSS_SetOnlineStartState_x7378
    /*000073b8*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VPSS_SetOnlineStartState


FUNC_BEGIN VPSS_OnlineEn
    /*000073bc*/ PUSH        {R4, LR} 
    /*000073c0*/ MOV         R1, #1 
    /*000073c4*/ MOV         R4, R0 
    /*000073c8*/ BL          0x00000000000073C8          @ VPSS_DRV_OnLineSetMask [R_ARM_CALL: .text+0x181f0] 
    /*000073cc*/ MOV         R0, R4 
    /*000073d0*/ MOV         R1, #1 
    /*000073d4*/ POP         {R4, LR} 
    VPSS_OnlineEn_x73d8:
    /*000073d8*/ B           VPSS_OnlineEn_x73d8         @ VPSS_DRV_SetVideoEn [R_ARM_JUMP24: .text+0x254fc] 
FUNC_END VPSS_OnlineEn


FUNC_BEGIN VPSS_StartGrp
    /*000073dc*/ CMP         R0, #15 
    /*000073e0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000073e4*/ MOV         R9, R0 
    /*000073e8*/ SUB         SP, SP, #16 
    /*000073ec*/ BHI         VPSS_StartGrp_x7494
    VPSS_StartGrp_x73f0:
    /*000073f0*/ MOV         R5, #92                     @ 0x5c 
    /*000073f4*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000073f8*/ MUL         R5, R5, R9 
    /*000073fc*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007400*/ ADD         R6, R4, #64                 @ 0x40 
    /*00007404*/ ADD         R8, R5, #44                 @ 0x2c 
    /*00007408*/ ADD         R8, R6, R8 
    /*0000740c*/ MOV         R0, R8 
    /*00007410*/ BL          0x0000000000007410          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007414*/ SUBS        R7, R0, #0 
    /*00007418*/ BNE         VPSS_StartGrp_x74fc
    /*0000741c*/ LDR         SL, [R4, R9, LSL #2] 
    /*00007420*/ CMP         SL, #0 
    /*00007424*/ BEQ         VPSS_StartGrp_x7508
    /*00007428*/ ADD         R5, R5, #48                 @ 0x30 
    /*0000742c*/ ADD         R1, SP, #12 
    /*00007430*/ ADD         R5, R6, R5 
    /*00007434*/ ADD         R4, R4, R9, LSL #2 
    /*00007438*/ MOV         R6, #1 
    /*0000743c*/ MOV         R0, R5 
    /*00007440*/ BL          0x0000000000007440          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007444*/ MOV         R0, R5 
    /*00007448*/ ADD         R1, SP, #12 
    /*0000744c*/ STR         R6, [SL, #2056]             @ 0x808 
    /*00007450*/ BL          0x0000000000007450          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007454*/ LDR         R4, [R4, #1540]             @ 0x604 
    /*00007458*/ CMP         R4, R6 
    /*0000745c*/ BEQ         VPSS_StartGrp_x74ac
    /*00007460*/ CMP         R4, #3 
    /*00007464*/ BNE         VPSS_StartGrp_x7480
    /*00007468*/ MOV         R1, R6 
    /*0000746c*/ MOV         R0, R7 
    /*00007470*/ BL          0x0000000000007470          @ VPSS_DRV_OnLineSetMask [R_ARM_CALL: .text+0x181f0] 
    /*00007474*/ MOV         R1, R6 
    /*00007478*/ MOV         R0, R7 
    /*0000747c*/ BL          0x000000000000747C          @ VPSS_DRV_SetVideoEn [R_ARM_CALL: .text+0x254fc] 
    VPSS_StartGrp_x7480:
    /*00007480*/ MOV         R0, R8 
    /*00007484*/ BL          0x0000000000007484          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007488*/ MOV         R0, #0 
    VPSS_StartGrp_x748c:
    /*0000748c*/ ADD         SP, SP, #16 
    /*00007490*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_StartGrp_x7494:
    /*00007494*/ BL          0x00000000000001B0 
    /*00007498*/ CMP         R0, #0 
    /*0000749c*/ BEQ         VPSS_StartGrp_x73f0
    /*000074a0*/ MOVW        R0, #32769                  @ 0x8001 
    /*000074a4*/ MOVT        R0, #40967                  @ 0xa007 
    /*000074a8*/ B           VPSS_StartGrp_x748c
    VPSS_StartGrp_x74ac:
    /*000074ac*/ MOV         R1, R4 
    /*000074b0*/ MOV         R0, R9 
    /*000074b4*/ BL          0x00000000000074B4          @ VPSS_SetOnlineStartState [R_ARM_CALL: .text+0x735c] 
    /*000074b8*/ MOV         R0, R9 
    /*000074bc*/ BL          0x00000000000074BC          @ VPSS_DRV_GetOnlineVpssId [R_ARM_CALL: .text+0x262cc] 
    /*000074c0*/ MOV         R5, R0 
    /*000074c4*/ MOV         R0, R9 
    /*000074c8*/ BL          0x00000000000074C8          @ VPSS_DRV_GetOnlineVpssId [R_ARM_CALL: .text+0x262cc] 
    /*000074cc*/ MOV         R1, R0 
    /*000074d0*/ MOV         R0, R9 
    /*000074d4*/ BL          0x00000000000074D4          @ VPSS_DRV_OnLinePrepGrpHwInfo [R_ARM_CALL: .text+0x24510] 
    /*000074d8*/ MOV         R0, R9 
    /*000074dc*/ BL          0x00000000000074DC          @ VpssOnlineUpdateGrpAttr [R_ARM_CALL: .text+0x147dc] 
    /*000074e0*/ MOV         R1, R4 
    /*000074e4*/ MOV         R0, R5 
    /*000074e8*/ BL          0x00000000000074E8          @ VPSS_DRV_OnLineSetMask [R_ARM_CALL: .text+0x181f0] 
    /*000074ec*/ MOV         R1, R4 
    /*000074f0*/ MOV         R0, R5 
    /*000074f4*/ BL          0x00000000000074F4          @ VPSS_DRV_SetVideoEn [R_ARM_CALL: .text+0x254fc] 
    /*000074f8*/ B           VPSS_StartGrp_x7480
    VPSS_StartGrp_x74fc:
    /*000074fc*/ MOV         R0, #65024                  @ 0xfe00 
    /*00007500*/ MOVT        R0, #65535                  @ 0xffff 
    /*00007504*/ B           VPSS_StartGrp_x748c
    VPSS_StartGrp_x7508:
    /*00007508*/ MOVW        R3, #5463                   @ 0x1557 
    /*0000750c*/ MOV         R1, #7 
    /*00007510*/ STR         R3, [SP] 
    /*00007514*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00007518*/ LDR         R3, [PC, #32]               @ 0x0000000000007540 
    /*0000751c*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00007520*/ STR         R9, [SP, #4] 
    /*00007524*/ MOV         R0, #3 
    /*00007528*/ BL          0x0000000000007528          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000752c*/ MOV         R0, R8 
    /*00007530*/ BL          0x0000000000007530          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007534*/ MOVW        R0, #32773                  @ 0x8005 
    /*00007538*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000753c*/ B           VPSS_StartGrp_x748c
    /*00007540*/ ANDEQ       R0, R0, IP, LSL #10 
FUNC_END VPSS_StartGrp


FUNC_BEGIN VPSS_StopGrp
    /*00007544*/ CMP         R0, #15 
    /*00007548*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000754c*/ MOV         R7, R0 
    /*00007550*/ SUB         SP, SP, #16 
    /*00007554*/ BHI         VPSS_StopGrp_x7608
    VPSS_StopGrp_x7558:
    /*00007558*/ MOV         R5, #92                     @ 0x5c 
    /*0000755c*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007560*/ MUL         R5, R5, R7 
    /*00007564*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007568*/ ADD         R9, R4, #64                 @ 0x40 
    /*0000756c*/ ADD         R6, R5, #44                 @ 0x2c 
    /*00007570*/ ADD         R6, R9, R6 
    /*00007574*/ MOV         R0, R6 
    /*00007578*/ BL          0x0000000000007578          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000757c*/ SUBS        R8, R0, #0 
    /*00007580*/ BNE         VPSS_StopGrp_x7640
    /*00007584*/ LDR         SL, [R4, R7, LSL #2] 
    /*00007588*/ CMP         SL, #0 
    /*0000758c*/ BEQ         VPSS_StopGrp_x764c
    /*00007590*/ LDR         R3, [SL, #2056]             @ 0x808 
    /*00007594*/ CMP         R3, #1 
    /*00007598*/ BEQ         VPSS_StopGrp_x75b0
    VPSS_StopGrp_x759c:
    /*0000759c*/ MOV         R0, R6 
    /*000075a0*/ BL          0x00000000000075A0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000075a4*/ MOV         R0, #0 
    VPSS_StopGrp_x75a8:
    /*000075a8*/ ADD         SP, SP, #16 
    /*000075ac*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_StopGrp_x75b0:
    /*000075b0*/ ADD         R5, R5, #48                 @ 0x30 
    /*000075b4*/ ADD         R1, SP, #12 
    /*000075b8*/ ADD         R5, R9, R5 
    /*000075bc*/ ADD         R4, R4, R7, LSL #2 
    /*000075c0*/ MOV         R0, R5 
    /*000075c4*/ BL          0x00000000000075C4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000075c8*/ MOV         R0, R5 
    /*000075cc*/ ADD         R1, SP, #12 
    /*000075d0*/ STR         R8, [SL, #2056]             @ 0x808 
    /*000075d4*/ BL          0x00000000000075D4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000075d8*/ LDR         R3, [R4, #1540]             @ 0x604 
    /*000075dc*/ CMP         R3, #1 
    /*000075e0*/ BEQ         VPSS_StopGrp_x7620
    /*000075e4*/ CMP         R3, #3 
    /*000075e8*/ BNE         VPSS_StopGrp_x759c
    /*000075ec*/ MOV         R0, R7 
    /*000075f0*/ MOV         R1, R8 
    /*000075f4*/ BL          0x00000000000075F4          @ VPSS_SetOnlineStartState [R_ARM_CALL: .text+0x735c] 
    /*000075f8*/ MOV         R1, R8 
    /*000075fc*/ MOV         R0, R8 
    /*00007600*/ BL          0x0000000000007600          @ VPSS_DRV_SetVideoEn [R_ARM_CALL: .text+0x254fc] 
    /*00007604*/ B           VPSS_StopGrp_x759c
    VPSS_StopGrp_x7608:
    /*00007608*/ BL          0x00000000000001B0 
    /*0000760c*/ CMP         R0, #0 
    /*00007610*/ BEQ         VPSS_StopGrp_x7558
    /*00007614*/ MOVW        R0, #32769                  @ 0x8001 
    /*00007618*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000761c*/ B           VPSS_StopGrp_x75a8
    VPSS_StopGrp_x7620:
    /*00007620*/ MOV         R1, R8 
    /*00007624*/ MOV         R0, R7 
    /*00007628*/ BL          0x0000000000007628          @ VPSS_SetOnlineStartState [R_ARM_CALL: .text+0x735c] 
    /*0000762c*/ MOV         R0, R7 
    /*00007630*/ BL          0x0000000000007630          @ VPSS_DRV_GetOnlineVpssId [R_ARM_CALL: .text+0x262cc] 
    /*00007634*/ MOV         R1, R8 
    /*00007638*/ BL          0x0000000000007638          @ VPSS_DRV_SetVideoEn [R_ARM_CALL: .text+0x254fc] 
    /*0000763c*/ B           VPSS_StopGrp_x759c
    VPSS_StopGrp_x7640:
    /*00007640*/ MOV         R0, #65024                  @ 0xfe00 
    /*00007644*/ MOVT        R0, #65535                  @ 0xffff 
    /*00007648*/ B           VPSS_StopGrp_x75a8
    VPSS_StopGrp_x764c:
    /*0000764c*/ MOVW        R3, #5516                   @ 0x158c 
    /*00007650*/ MOV         R1, #7 
    /*00007654*/ STR         R3, [SP] 
    /*00007658*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*0000765c*/ LDR         R3, [PC, #32]               @ 0x0000000000007684 
    /*00007660*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00007664*/ STR         R7, [SP, #4] 
    /*00007668*/ MOV         R0, #3 
    /*0000766c*/ BL          0x000000000000766C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007670*/ MOV         R0, R6 
    /*00007674*/ BL          0x0000000000007674          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007678*/ MOVW        R0, #32773                  @ 0x8005 
    /*0000767c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00007680*/ B           VPSS_StopGrp_x75a8
    /*00007684*/ ANDEQ       R0, R0, IP, LSL R5 
FUNC_END VPSS_StopGrp


FUNC_BEGIN VPSS_GrpExit
    /*00007688*/ PUSH        {R4, R5, R6, LR} 
    /*0000768c*/ SUB         SP, SP, #8 
    /*00007690*/ LDR         R5, [PC, #288]              @ 0x00000000000077b8 
    /*00007694*/ MOV         R4, #0 
    /*00007698*/ ADD         R6, R5, #64                 @ 0x40 
    VPSS_GrpExit_x769c:
    /*0000769c*/ LDR         R3, [R5, #4]! 
    /*000076a0*/ MOV         R0, R4 
    /*000076a4*/ CMP         R3, #0 
    /*000076a8*/ BEQ         VPSS_GrpExit_x76b8
    /*000076ac*/ BL          0x00000000000076AC          @ VPSS_StopGrp [R_ARM_CALL: .text+0x7544] 
    /*000076b0*/ MOV         R0, R4 
    /*000076b4*/ BL          0x00000000000076B4          @ VPSS_DestroyGrp [R_ARM_CALL: .text+0x35e8] 
    VPSS_GrpExit_x76b8:
    /*000076b8*/ CMP         R5, R6 
    /*000076bc*/ ADD         R4, R4, #1 
    /*000076c0*/ BNE         VPSS_GrpExit_x769c
    /*000076c4*/ BL          0x00000000000076C4          @ VPSS_COMM_DevExit [R_ARM_CALL: .text+0x153d4] 
    /*000076c8*/ MOV         R0, #2 
    /*000076cc*/ BL          0x00000000000076CC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000076d0*/ CMP         R0, #0 
    /*000076d4*/ MOVWEQ      R3, #2362                   @ 0x93a 
    /*000076d8*/ MOVWEQ      R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x928] 
    /*000076dc*/ STREQ       R3, [SP] 
    /*000076e0*/ MOVTEQ      R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x928] 
    /*000076e4*/ BEQ         VPSS_GrpExit_x779c
    /*000076e8*/ MOV         R0, #2 
    /*000076ec*/ BL          0x00000000000076EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000076f0*/ LDR         R3, [R0, #28] 
    /*000076f4*/ CMP         R3, #0 
    /*000076f8*/ MOVEQ       R3, #2368                   @ 0x940 
    /*000076fc*/ MOVWEQ      R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x928] 
    /*00007700*/ STREQ       R3, [SP] 
    /*00007704*/ MOVTEQ      R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x928] 
    /*00007708*/ BEQ         VPSS_GrpExit_x779c
    /*0000770c*/ MOV         R0, #2 
    /*00007710*/ BL          0x0000000000007710          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007714*/ LDR         R3, [R0, #28] 
    /*00007718*/ MOV         R0, #7 
    /*0000771c*/ BLX         R3 
    /*00007720*/ MOV         R0, #2 
    /*00007724*/ BL          0x0000000000007724          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007728*/ LDR         R3, [R0, #36]               @ 0x24 
    /*0000772c*/ CMP         R3, #0 
    /*00007730*/ MOVWEQ      R3, #2376                   @ 0x948 
    /*00007734*/ MOVWEQ      R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x928] 
    /*00007738*/ STREQ       R3, [SP] 
    /*0000773c*/ MOVTEQ      R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x928] 
    /*00007740*/ BEQ         VPSS_GrpExit_x779c
    /*00007744*/ MOV         R0, #2 
    /*00007748*/ BL          0x0000000000007748          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000774c*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00007750*/ MOV         R0, #7 
    /*00007754*/ BLX         R3 
    /*00007758*/ MOV         R0, #3 
    /*0000775c*/ BL          0x000000000000775C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007760*/ CMP         R0, #0 
    /*00007764*/ BEQ         VPSS_GrpExit_x778c
    /*00007768*/ MOV         R0, #3 
    /*0000776c*/ BL          0x000000000000776C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007770*/ LDR         R3, [R0, #4] 
    /*00007774*/ CMP         R3, #0 
    /*00007778*/ BEQ         VPSS_GrpExit_x778c
    /*0000777c*/ BL          0x000000000000777C          @ VPSS_DRV_UnRegisterRgnCapacity [R_ARM_CALL: .text+0x25e7c] 
    /*00007780*/ MOV         R0, #0 
    VPSS_GrpExit_x7784:
    /*00007784*/ ADD         SP, SP, #8 
    /*00007788*/ POP         {R4, R5, R6, PC} 
    VPSS_GrpExit_x778c:
    /*0000778c*/ MOVW        R2, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1788] 
    /*00007790*/ MOVT        R2, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1788] 
    /*00007794*/ MOV         R3, #2384                   @ 0x950 
    /*00007798*/ STR         R3, [SP] 
    VPSS_GrpExit_x779c:
    /*0000779c*/ LDR         R3, [PC, #24]               @ 0x00000000000077bc 
    /*000077a0*/ MOV         R1, #7 
    /*000077a4*/ MOV         R0, #3 
    /*000077a8*/ BL          0x00000000000077A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000077ac*/ MOVW        R0, #32784                  @ 0x8010 
    /*000077b0*/ MOVT        R0, #40967                  @ 0xa007 
    /*000077b4*/ B           VPSS_GrpExit_x7784
    /*000077b8*/ @           <UNDEFINED> instruction: 0xfffffffc 
    /*000077bc*/ ANDEQ       R0, R0, IP, LSR #10 
FUNC_END VPSS_GrpExit


FUNC_BEGIN VPSS_SetExtChnAttr
    /*000077c0*/ CMP         R0, #15 
    /*000077c4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000077c8*/ MOV         R6, R0 
    /*000077cc*/ SUB         SP, SP, #36                 @ 0x24 
    /*000077d0*/ MOV         R4, R1 
    /*000077d4*/ MOV         R5, R2 
    /*000077d8*/ BHI         VPSS_SetExtChnAttr_x78a8
    VPSS_SetExtChnAttr_x77dc:
    /*000077dc*/ SUB         FP, R4, #3 
    /*000077e0*/ CMP         FP, #7 
    /*000077e4*/ BHI         VPSS_SetExtChnAttr_x78c0
    VPSS_SetExtChnAttr_x77e8:
    /*000077e8*/ CMP         R5, #0 
    /*000077ec*/ BEQ         VPSS_SetExtChnAttr_x7a98
    VPSS_SetExtChnAttr_x77f0:
    /*000077f0*/ BL          0x00000000000077F0          @ VPSS_DRV_IsSupportExtChn [R_ARM_CALL: .text+0x20220] 
    /*000077f4*/ CMP         R0, #0 
    /*000077f8*/ BEQ         VPSS_SetExtChnAttr_x7af0
    /*000077fc*/ MOV         R0, R5 
    /*00007800*/ BL          0x0000000000007800          @ VPSS_DRV_CheckExtChnAttr [R_ARM_CALL: .text+0x1f360] 
    /*00007804*/ SUBS        R8, R0, #0 
    /*00007808*/ BNE         VPSS_SetExtChnAttr_x789c
    /*0000780c*/ LDR         SL, [R5] 
    /*00007810*/ CMP         SL, #2 
    /*00007814*/ BHI         VPSS_SetExtChnAttr_x7b68
    /*00007818*/ MOV         R9, #92                     @ 0x5c 
    /*0000781c*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007820*/ MUL         R9, R9, R6 
    /*00007824*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007828*/ ADD         R2, R7, #64                 @ 0x40 
    /*0000782c*/ ADD         R3, R9, #44                 @ 0x2c 
    /*00007830*/ ADD         R3, R2, R3 
    /*00007834*/ STR         R3, [SP, #8] 
    /*00007838*/ MOV         R0, R3 
    /*0000783c*/ BL          0x000000000000783C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007840*/ CMP         R0, #0 
    /*00007844*/ BNE         VPSS_SetExtChnAttr_x7b98
    /*00007848*/ LDR         R7, [R7, R6, LSL #2] 
    /*0000784c*/ CMP         R7, #0 
    /*00007850*/ BEQ         VPSS_SetExtChnAttr_x7be4
    /*00007854*/ MOV         R3, #72                     @ 0x48 
    /*00007858*/ MLA         R3, R3, SL, R7 
    /*0000785c*/ LDR         R3, [R3, #812]              @ 0x32c 
    /*00007860*/ CMP         R3, #0 
    /*00007864*/ BNE         VPSS_SetExtChnAttr_x7ba4
    /*00007868*/ MOV         R2, #40                     @ 0x28 
    /*0000786c*/ MOV         R1, R5 
    /*00007870*/ MUL         R3, R2, FP 
    /*00007874*/ STR         R3, [SP, #16] 
    /*00007878*/ ADD         R3, R3, #128                @ 0x80 
    /*0000787c*/ ADD         R3, R7, R3 
    /*00007880*/ STR         R3, [SP, #12] 
    /*00007884*/ MOV         R0, R3 
    /*00007888*/ BL          0x0000000000007888          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*0000788c*/ CMP         R0, #0 
    /*00007890*/ BNE         VPSS_SetExtChnAttr_x78d8
    VPSS_SetExtChnAttr_x7894:
    /*00007894*/ LDR         R0, [SP, #8] 
    /*00007898*/ BL          0x0000000000007898          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_SetExtChnAttr_x789c:
    /*0000789c*/ MOV         R0, R8 
    /*000078a0*/ ADD         SP, SP, #36                 @ 0x24 
    /*000078a4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_SetExtChnAttr_x78a8:
    /*000078a8*/ BL          0x00000000000001B0 
    /*000078ac*/ CMP         R0, #0 
    /*000078b0*/ BEQ         VPSS_SetExtChnAttr_x77dc
    /*000078b4*/ MOVW        R8, #32769                  @ 0x8001 
    /*000078b8*/ MOVT        R8, #40967                  @ 0xa007 
    /*000078bc*/ B           VPSS_SetExtChnAttr_x789c
    VPSS_SetExtChnAttr_x78c0:
    /*000078c0*/ BL          0x0000000000000354 
    /*000078c4*/ CMP         R0, #0 
    /*000078c8*/ BEQ         VPSS_SetExtChnAttr_x77e8
    /*000078cc*/ MOVW        R8, #32770                  @ 0x8002 
    /*000078d0*/ MOVT        R8, #40967                  @ 0xa007 
    /*000078d4*/ B           VPSS_SetExtChnAttr_x789c
    VPSS_SetExtChnAttr_x78d8:
    /*000078d8*/ LDR         R3, [PC, #808]              @ 0x0000000000007c08 
    /*000078dc*/ ADD         R9, R9, #48                 @ 0x30 
    /*000078e0*/ ADD         R1, SP, #28 
    /*000078e4*/ ADD         R3, R3, R9 
    /*000078e8*/ STR         R3, [SP, #20] 
    /*000078ec*/ MOV         R0, R3 
    /*000078f0*/ BL          0x00000000000078F0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000078f4*/ LDR         R3, [SP, #16] 
    /*000078f8*/ ADD         R3, R7, R3 
    /*000078fc*/ LDR         R9, [R3, #128]              @ 0x80 
    /*00007900*/ CMP         R9, #0 
    /*00007904*/ BLT         VPSS_SetExtChnAttr_x7970
    /*00007908*/ LDR         R3, [R5] 
    /*0000790c*/ CMP         R9, R3 
    /*00007910*/ BEQ         VPSS_SetExtChnAttr_x7970
    /*00007914*/ CMP         R9, #10 
    /*00007918*/ BHI         VPSS_SetExtChnAttr_x7ab0
    VPSS_SetExtChnAttr_x791c:
    /*0000791c*/ MOV         R2, #36                     @ 0x24 
    /*00007920*/ MOVW        R1, #19652                  @ 0x4cc4 
    /*00007924*/ MUL         R2, R2, R9 
    /*00007928*/ ADD         R3, R7, R2 
    /*0000792c*/ LDR         R0, [R3, R1] 
    /*00007930*/ CMP         R0, #0 
    /*00007934*/ BEQ         VPSS_SetExtChnAttr_x7970
    /*00007938*/ MOVW        R1, #19656                  @ 0x4cc8 
    /*0000793c*/ LDR         R3, [R3, R1] 
    /*00007940*/ CMP         R4, R3 
    /*00007944*/ ADDNE       R2, R2, R1 
    /*00007948*/ MOVNE       R3, #0 
    /*0000794c*/ ADDNE       R2, R7, R2 
    /*00007950*/ BNE         VPSS_SetExtChnAttr_x7964
    /*00007954*/ B           VPSS_SetExtChnAttr_x7b1c
    VPSS_SetExtChnAttr_x7958:
    /*00007958*/ LDR         R1, [R2, #4]! 
    /*0000795c*/ CMP         R4, R1 
    /*00007960*/ BEQ         VPSS_SetExtChnAttr_x7b20
    VPSS_SetExtChnAttr_x7964:
    /*00007964*/ ADD         R3, R3, #1 
    /*00007968*/ CMP         R0, R3 
    /*0000796c*/ BNE         VPSS_SetExtChnAttr_x7958
    VPSS_SetExtChnAttr_x7970:
    /*00007970*/ MOV         R2, #36                     @ 0x24 
    /*00007974*/ MOVW        R1, #19652                  @ 0x4cc4 
    /*00007978*/ MUL         R2, R2, SL 
    /*0000797c*/ ADD         R3, R7, R2 
    /*00007980*/ LDR         R0, [R3, R1] 
    /*00007984*/ CMP         R0, #0 
    /*00007988*/ BEQ         VPSS_SetExtChnAttr_x7bdc
    /*0000798c*/ MOVW        R1, #19656                  @ 0x4cc8 
    /*00007990*/ LDR         R3, [R3, R1] 
    /*00007994*/ CMP         R4, R3 
    /*00007998*/ ADDNE       R2, R2, R1 
    /*0000799c*/ MOVNE       R3, #0 
    /*000079a0*/ ADDNE       R2, R7, R2 
    /*000079a4*/ BNE         VPSS_SetExtChnAttr_x79b8
    /*000079a8*/ B           VPSS_SetExtChnAttr_x79f4
    VPSS_SetExtChnAttr_x79ac:
    /*000079ac*/ LDR         R1, [R2, #4]! 
    /*000079b0*/ CMP         R4, R1 
    /*000079b4*/ BEQ         VPSS_SetExtChnAttr_x79f4
    VPSS_SetExtChnAttr_x79b8:
    /*000079b8*/ ADD         R3, R3, #1 
    /*000079bc*/ CMP         R0, R3 
    /*000079c0*/ BNE         VPSS_SetExtChnAttr_x79ac
    VPSS_SetExtChnAttr_x79c4:
    /*000079c4*/ ADD         R2, SL, SL, LSL #3 
    /*000079c8*/ MOV         R0, #36                     @ 0x24 
    /*000079cc*/ ADD         R3, R2, R3 
    /*000079d0*/ MOVW        R1, #19652                  @ 0x4cc4 
    /*000079d4*/ MLA         R2, R0, SL, R7 
    /*000079d8*/ ADD         R3, R3, #4864               @ 0x1300 
    /*000079dc*/ ADD         R3, R3, #48                 @ 0x30 
    /*000079e0*/ ADD         R3, R7, R3, LSL #2 
    /*000079e4*/ STR         R4, [R3, #8] 
    /*000079e8*/ LDR         R3, [R2, R1] 
    /*000079ec*/ ADD         R3, R3, #1 
    /*000079f0*/ STR         R3, [R2, R1] 
    VPSS_SetExtChnAttr_x79f4:
    /*000079f4*/ MOV         R2, #40                     @ 0x28 
    /*000079f8*/ MOV         R1, R5 
    /*000079fc*/ LDR         R0, [SP, #12] 
    /*00007a00*/ BL          0x0000000000007A00          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00007a04*/ LDR         R0, [R5, #32] 
    /*00007a08*/ ADD         R3, R7, R4, LSL #4 
    /*00007a0c*/ ADD         R1, R7, FP, LSL #4 
    /*00007a10*/ ADD         R2, R7, R4, LSL #5 
    /*00007a14*/ MOV         IP, #0 
    /*00007a18*/ STR         R0, [R3, #-48]              @ 0xffffffd0 
    /*00007a1c*/ MOV         R0, #1 
    /*00007a20*/ LDR         LR, [R5, #36]               @ 0x24 
    /*00007a24*/ STR         LR, [R3, #-44]              @ 0xffffffd4 
    /*00007a28*/ STR         IP, [R1, #8] 
    /*00007a2c*/ STR         R0, [R1, #12] 
    /*00007a30*/ LDR         R3, [R2, #1704]             @ 0x6a8 
    /*00007a34*/ CMP         R3, IP 
    /*00007a38*/ BEQ         VPSS_SetExtChnAttr_x7a48
    /*00007a3c*/ MOV         R1, R4 
    /*00007a40*/ MOV         R0, R6 
    /*00007a44*/ BL          0x0000000000007A44          @ VpssCleanUserList [R_ARM_CALL: .text+0x12500] 
    VPSS_SetExtChnAttr_x7a48:
    /*00007a48*/ MOV         R2, #36                     @ 0x24 
    /*00007a4c*/ ADD         R3, R7, R4, LSL #2 
    /*00007a50*/ MLA         R7, R2, SL, R7 
    /*00007a54*/ MOV         R2, #1 
    /*00007a58*/ STR         R2, [R3, #768]              @ 0x300 
    /*00007a5c*/ MOVW        R1, #19652                  @ 0x4cc4 
    /*00007a60*/ LDR         R0, [R5, #28] 
    /*00007a64*/ STR         R2, [R3, #1604]             @ 0x644 
    /*00007a68*/ STR         R0, [R3, #1648]             @ 0x670 
    /*00007a6c*/ LDR         R3, [R7, R1] 
    /*00007a70*/ CMP         R3, #8 
    /*00007a74*/ BHI         VPSS_SetExtChnAttr_x7ad0
    VPSS_SetExtChnAttr_x7a78:
    /*00007a78*/ MOV         R1, R4 
    /*00007a7c*/ MOV         R2, R5 
    /*00007a80*/ MOV         R0, R6 
    /*00007a84*/ BL          0x0000000000007A84          @ VPSS_DRV_SetExtChnAttr [R_ARM_CALL: .text+0x1924c] 
    /*00007a88*/ ADD         R1, SP, #28 
    /*00007a8c*/ LDR         R0, [SP, #20] 
    /*00007a90*/ BL          0x0000000000007A90          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007a94*/ B           VPSS_SetExtChnAttr_x7894
    VPSS_SetExtChnAttr_x7a98:
    /*00007a98*/ BL          0x0000000000000174 
    /*00007a9c*/ CMP         R0, #0 
    /*00007aa0*/ MOVWNE      R8, #32774                  @ 0x8006 
    /*00007aa4*/ MOVTNE      R8, #40967                  @ 0xa007 
    /*00007aa8*/ BNE         VPSS_SetExtChnAttr_x789c
    /*00007aac*/ B           VPSS_SetExtChnAttr_x77f0
    VPSS_SetExtChnAttr_x7ab0:
    /*00007ab0*/ MOVW        R3, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1880] 
    /*00007ab4*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*00007ab8*/ MOVT        R3, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1880] 
    /*00007abc*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*00007ac0*/ MOVW        R2, #5618                   @ 0x15f2 
    /*00007ac4*/ LDR         R1, [PC, #320]              @ 0x0000000000007c0c 
    /*00007ac8*/ BL          0x0000000000007AC8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00007acc*/ B           VPSS_SetExtChnAttr_x791c
    VPSS_SetExtChnAttr_x7ad0:
    /*00007ad0*/ MOVW        R3, #0                      @ .LC110 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18a0] 
    /*00007ad4*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*00007ad8*/ MOVT        R3, #0                      @ .LC110 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18a0] 
    /*00007adc*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*00007ae0*/ MOVW        R2, #5676                   @ 0x162c 
    /*00007ae4*/ LDR         R1, [PC, #288]              @ 0x0000000000007c0c 
    /*00007ae8*/ BL          0x0000000000007AE8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00007aec*/ B           VPSS_SetExtChnAttr_x7a78
    VPSS_SetExtChnAttr_x7af0:
    /*00007af0*/ MOVW        R3, #5567                   @ 0x15bf 
    /*00007af4*/ MOVW        R2, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x17b4] 
    /*00007af8*/ STR         R3, [SP] 
    /*00007afc*/ MOVT        R2, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0x17b4] 
    /*00007b00*/ LDR         R3, [PC, #260]              @ 0x0000000000007c0c 
    /*00007b04*/ MOV         R1, #7 
    /*00007b08*/ MOV         R0, #3 
    /*00007b0c*/ MOVW        R8, #32776                  @ 0x8008 
    /*00007b10*/ BL          0x0000000000007B10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007b14*/ MOVT        R8, #40967                  @ 0xa007 
    /*00007b18*/ B           VPSS_SetExtChnAttr_x789c
    VPSS_SetExtChnAttr_x7b1c:
    /*00007b1c*/ MOV         R3, #0 
    VPSS_SetExtChnAttr_x7b20:
    /*00007b20*/ ADD         R1, R9, R9, LSL #3 
    /*00007b24*/ MOV         R2, #36                     @ 0x24 
    /*00007b28*/ ADD         R0, R1, R0 
    /*00007b2c*/ ADD         R3, R1, R3 
    /*00007b30*/ ADD         R0, R0, #4864               @ 0x1300 
    /*00007b34*/ ADD         R3, R3, #4864               @ 0x1300 
    /*00007b38*/ ADD         R0, R0, #47                 @ 0x2f 
    /*00007b3c*/ ADD         R3, R3, #48                 @ 0x30 
    /*00007b40*/ MLA         R9, R2, R9, R7 
    /*00007b44*/ ADD         R0, R7, R0, LSL #2 
    /*00007b48*/ ADD         R3, R7, R3, LSL #2 
    /*00007b4c*/ MOVW        R2, #19652                  @ 0x4cc4 
    /*00007b50*/ LDR         R1, [R0, #8] 
    /*00007b54*/ STR         R1, [R3, #8] 
    /*00007b58*/ LDR         R3, [R9, R2] 
    /*00007b5c*/ SUB         R3, R3, #1 
    /*00007b60*/ STR         R3, [R9, R2] 
    /*00007b64*/ B           VPSS_SetExtChnAttr_x7970
    VPSS_SetExtChnAttr_x7b68:
    /*00007b68*/ MOVW        R3, #5583                   @ 0x15cf 
    /*00007b6c*/ STR         SL, [SP, #4] 
    /*00007b70*/ STR         R3, [SP] 
    /*00007b74*/ MOVW        R2, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x17e4] 
    /*00007b78*/ LDR         R3, [PC, #140]              @ 0x0000000000007c0c 
    /*00007b7c*/ MOVT        R2, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x17e4] 
    /*00007b80*/ MOV         R1, #7 
    /*00007b84*/ MOV         R0, #3 
    /*00007b88*/ MOVW        R8, #32770                  @ 0x8002 
    /*00007b8c*/ BL          0x0000000000007B8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007b90*/ MOVT        R8, #40967                  @ 0xa007 
    /*00007b94*/ B           VPSS_SetExtChnAttr_x789c
    VPSS_SetExtChnAttr_x7b98:
    /*00007b98*/ MOV         R8, #65024                  @ 0xfe00 
    /*00007b9c*/ MOVT        R8, #65535                  @ 0xffff 
    /*00007ba0*/ B           VPSS_SetExtChnAttr_x789c
    VPSS_SetExtChnAttr_x7ba4:
    /*00007ba4*/ LDR         R0, [SP, #8] 
    /*00007ba8*/ MOVW        R8, #32777                  @ 0x8009 
    /*00007bac*/ BL          0x0000000000007BAC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007bb0*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1844] 
    /*00007bb4*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1844] 
    /*00007bb8*/ MOVW        R3, #5600                   @ 0x15e0 
    /*00007bbc*/ STR         SL, [SP, #4] 
    /*00007bc0*/ STR         R3, [SP] 
    VPSS_SetExtChnAttr_x7bc4:
    /*00007bc4*/ LDR         R3, [PC, #64]               @ 0x0000000000007c0c 
    /*00007bc8*/ MOV         R1, #7 
    /*00007bcc*/ MOV         R0, #3 
    /*00007bd0*/ MOVT        R8, #40967                  @ 0xa007 
    /*00007bd4*/ BL          0x0000000000007BD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007bd8*/ B           VPSS_SetExtChnAttr_x789c
    VPSS_SetExtChnAttr_x7bdc:
    /*00007bdc*/ MOV         R3, R0 
    /*00007be0*/ B           VPSS_SetExtChnAttr_x79c4
    VPSS_SetExtChnAttr_x7be4:
    /*00007be4*/ LDR         R0, [SP, #8] 
    /*00007be8*/ MOVW        R8, #32773                  @ 0x8005 
    /*00007bec*/ BL          0x0000000000007BEC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007bf0*/ MOVW        R3, #5593                   @ 0x15d9 
    /*00007bf4*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1818] 
    /*00007bf8*/ STR         R6, [SP, #4] 
    /*00007bfc*/ STR         R3, [SP] 
    /*00007c00*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1818] 
    /*00007c04*/ B           VPSS_SetExtChnAttr_x7bc4
    /*00007c08*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00007c0c*/ ANDEQ       R0, R0, IP, LSR R5 
FUNC_END VPSS_SetExtChnAttr


FUNC_BEGIN VPSS_GetExtChnAttr
    /*00007c10*/ CMP         R0, #15 
    /*00007c14*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00007c18*/ MOV         R8, R0 
    /*00007c1c*/ SUB         SP, SP, #12 
    /*00007c20*/ MOV         R4, R1 
    /*00007c24*/ MOV         R9, R2 
    /*00007c28*/ BHI         VPSS_GetExtChnAttr_x7ca4
    VPSS_GetExtChnAttr_x7c2c:
    /*00007c2c*/ SUB         R4, R4, #3 
    /*00007c30*/ CMP         R4, #7 
    /*00007c34*/ BHI         VPSS_GetExtChnAttr_x7cbc
    VPSS_GetExtChnAttr_x7c38:
    /*00007c38*/ CMP         R9, #0 
    /*00007c3c*/ BEQ         VPSS_GetExtChnAttr_x7cd4
    VPSS_GetExtChnAttr_x7c40:
    /*00007c40*/ BL          0x0000000000007C40          @ VPSS_DRV_IsSupportExtChn [R_ARM_CALL: .text+0x20220] 
    /*00007c44*/ CMP         R0, #0 
    /*00007c48*/ BEQ         VPSS_GetExtChnAttr_x7cec
    /*00007c4c*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007c50*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007c54*/ MOV         R5, #92                     @ 0x5c 
    /*00007c58*/ MLA         R5, R5, R8, R6 
    /*00007c5c*/ ADD         R5, R5, #108                @ 0x6c 
    /*00007c60*/ MOV         R0, R5 
    /*00007c64*/ BL          0x0000000000007C64          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007c68*/ SUBS        R7, R0, #0 
    /*00007c6c*/ BNE         VPSS_GetExtChnAttr_x7d1c
    /*00007c70*/ LDR         R1, [R6, R8, LSL #2] 
    /*00007c74*/ CMP         R1, #0 
    /*00007c78*/ BEQ         VPSS_GetExtChnAttr_x7d28
    /*00007c7c*/ MOV         R2, #40                     @ 0x28 
    /*00007c80*/ MOV         R0, R9 
    /*00007c84*/ MLA         R1, R2, R4, R1 
    /*00007c88*/ ADD         R1, R1, #128                @ 0x80 
    /*00007c8c*/ BL          0x0000000000007C8C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00007c90*/ MOV         R0, R5 
    /*00007c94*/ BL          0x0000000000007C94          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007c98*/ MOV         R0, R7 
    VPSS_GetExtChnAttr_x7c9c:
    /*00007c9c*/ ADD         SP, SP, #12 
    /*00007ca0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_GetExtChnAttr_x7ca4:
    /*00007ca4*/ BL          0x00000000000001B0 
    /*00007ca8*/ CMP         R0, #0 
    /*00007cac*/ BEQ         VPSS_GetExtChnAttr_x7c2c
    /*00007cb0*/ MOVW        R0, #32769                  @ 0x8001 
    /*00007cb4*/ MOVT        R0, #40967                  @ 0xa007 
    /*00007cb8*/ B           VPSS_GetExtChnAttr_x7c9c
    VPSS_GetExtChnAttr_x7cbc:
    /*00007cbc*/ BL          0x0000000000000354 
    /*00007cc0*/ CMP         R0, #0 
    /*00007cc4*/ BEQ         VPSS_GetExtChnAttr_x7c38
    /*00007cc8*/ MOVW        R0, #32770                  @ 0x8002 
    /*00007ccc*/ MOVT        R0, #40967                  @ 0xa007 
    /*00007cd0*/ B           VPSS_GetExtChnAttr_x7c9c
    VPSS_GetExtChnAttr_x7cd4:
    /*00007cd4*/ BL          0x0000000000000174 
    /*00007cd8*/ CMP         R0, #0 
    /*00007cdc*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*00007ce0*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*00007ce4*/ BNE         VPSS_GetExtChnAttr_x7c9c
    /*00007ce8*/ B           VPSS_GetExtChnAttr_x7c40
    VPSS_GetExtChnAttr_x7cec:
    /*00007cec*/ MOVW        R3, #5698                   @ 0x1642 
    /*00007cf0*/ STR         R8, [SP, #4] 
    /*00007cf4*/ STR         R3, [SP] 
    /*00007cf8*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18c8] 
    /*00007cfc*/ LDR         R3, [PC, #92]               @ 0x0000000000007d60 
    /*00007d00*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18c8] 
    /*00007d04*/ MOV         R1, #7 
    /*00007d08*/ MOV         R0, #3 
    /*00007d0c*/ BL          0x0000000000007D0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007d10*/ MOVW        R0, #32776                  @ 0x8008 
    /*00007d14*/ MOVT        R0, #40967                  @ 0xa007 
    /*00007d18*/ B           VPSS_GetExtChnAttr_x7c9c
    VPSS_GetExtChnAttr_x7d1c:
    /*00007d1c*/ MOV         R0, #65024                  @ 0xfe00 
    /*00007d20*/ MOVT        R0, #65535                  @ 0xffff 
    /*00007d24*/ B           VPSS_GetExtChnAttr_x7c9c
    VPSS_GetExtChnAttr_x7d28:
    /*00007d28*/ MOVW        R3, #5707                   @ 0x164b 
    /*00007d2c*/ MOV         R1, #7 
    /*00007d30*/ STR         R3, [SP] 
    /*00007d34*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00007d38*/ LDR         R3, [PC, #32]               @ 0x0000000000007d60 
    /*00007d3c*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00007d40*/ STR         R8, [SP, #4] 
    /*00007d44*/ MOV         R0, #3 
    /*00007d48*/ BL          0x0000000000007D48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007d4c*/ MOV         R0, R5 
    /*00007d50*/ BL          0x0000000000007D50          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007d54*/ MOVW        R0, #32773                  @ 0x8005 
    /*00007d58*/ MOVT        R0, #40967                  @ 0xa007 
    /*00007d5c*/ B           VPSS_GetExtChnAttr_x7c9c
    /*00007d60*/ ANDEQ       R0, R0, R0, ASR R5 
FUNC_END VPSS_GetExtChnAttr


FUNC_BEGIN VPSS_SetGrpNRXParam
    /*00007d64*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00007d68*/ SUBS        R8, R1, #0 
    /*00007d6c*/ SUB         SP, SP, #20 
    /*00007d70*/ MOV         R6, R0 
    /*00007d74*/ BEQ         VPSS_SetGrpNRXParam_x7e30
    VPSS_SetGrpNRXParam_x7d78:
    /*00007d78*/ CMP         R6, #15 
    /*00007d7c*/ BHI         VPSS_SetGrpNRXParam_x7e0c
    VPSS_SetGrpNRXParam_x7d80:
    /*00007d80*/ MOV         R0, R8 
    /*00007d84*/ BL          0x0000000000007D84          @ VPSS_DRV_CheckGrpNRXParam [R_ARM_CALL: .text+0x1ec00] 
    /*00007d88*/ CMP         R0, #0 
    /*00007d8c*/ BNE         VPSS_SetGrpNRXParam_x7e24
    /*00007d90*/ MOV         R4, #92                     @ 0x5c 
    /*00007d94*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007d98*/ MUL         R4, R4, R6 
    /*00007d9c*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007da0*/ ADD         R5, R9, #64                 @ 0x40 
    /*00007da4*/ ADD         R7, R4, #44                 @ 0x2c 
    /*00007da8*/ ADD         R7, R5, R7 
    /*00007dac*/ MOV         R0, R7 
    /*00007db0*/ BL          0x0000000000007DB0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007db4*/ CMP         R0, #0 
    /*00007db8*/ BNE         VPSS_SetGrpNRXParam_x7e48
    /*00007dbc*/ LDR         R3, [R9, R6, LSL #2] 
    /*00007dc0*/ CMP         R3, #0 
    /*00007dc4*/ BEQ         VPSS_SetGrpNRXParam_x7e54
    /*00007dc8*/ ADD         R4, R4, #48                 @ 0x30 
    /*00007dcc*/ ADD         R1, SP, #12 
    /*00007dd0*/ ADD         R4, R5, R4 
    /*00007dd4*/ MOV         R0, R4 
    /*00007dd8*/ BL          0x0000000000007DD8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007ddc*/ MOV         R1, R8 
    /*00007de0*/ MOV         R0, R6 
    /*00007de4*/ BL          0x0000000000007DE4          @ VPSS_DRV_SetGrpNRXParam [R_ARM_CALL: .text+0x1ed2c] 
    /*00007de8*/ ADD         R1, SP, #12 
    /*00007dec*/ MOV         R5, R0 
    /*00007df0*/ MOV         R0, R4 
    /*00007df4*/ BL          0x0000000000007DF4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007df8*/ MOV         R0, R7 
    /*00007dfc*/ BL          0x0000000000007DFC          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_SetGrpNRXParam_x7e00:
    /*00007e00*/ MOV         R0, R5 
    /*00007e04*/ ADD         SP, SP, #20 
    /*00007e08*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_SetGrpNRXParam_x7e0c:
    /*00007e0c*/ BL          0x00000000000001B0 
    /*00007e10*/ CMP         R0, #0 
    /*00007e14*/ BEQ         VPSS_SetGrpNRXParam_x7d80
    /*00007e18*/ MOVW        R5, #32769                  @ 0x8001 
    /*00007e1c*/ MOVT        R5, #40967                  @ 0xa007 
    /*00007e20*/ B           VPSS_SetGrpNRXParam_x7e00
    VPSS_SetGrpNRXParam_x7e24:
    /*00007e24*/ MOVW        R5, #32771                  @ 0x8003 
    /*00007e28*/ MOVT        R5, #40967                  @ 0xa007 
    /*00007e2c*/ B           VPSS_SetGrpNRXParam_x7e00
    VPSS_SetGrpNRXParam_x7e30:
    /*00007e30*/ BL          0x0000000000000174 
    /*00007e34*/ CMP         R0, #0 
    /*00007e38*/ MOVWNE      R5, #32774                  @ 0x8006 
    /*00007e3c*/ MOVTNE      R5, #40967                  @ 0xa007 
    /*00007e40*/ BNE         VPSS_SetGrpNRXParam_x7e00
    /*00007e44*/ B           VPSS_SetGrpNRXParam_x7d78
    VPSS_SetGrpNRXParam_x7e48:
    /*00007e48*/ MOV         R5, #65024                  @ 0xfe00 
    /*00007e4c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00007e50*/ B           VPSS_SetGrpNRXParam_x7e00
    VPSS_SetGrpNRXParam_x7e54:
    /*00007e54*/ MOVW        R3, #5864                   @ 0x16e8 
    /*00007e58*/ MOV         R1, #7 
    /*00007e5c*/ STR         R3, [SP] 
    /*00007e60*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00007e64*/ LDR         R3, [PC, #32]               @ 0x0000000000007e8c 
    /*00007e68*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00007e6c*/ STR         R6, [SP, #4] 
    /*00007e70*/ MOV         R0, #3 
    /*00007e74*/ BL          0x0000000000007E74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007e78*/ MOV         R0, R7 
    /*00007e7c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00007e80*/ BL          0x0000000000007E80          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007e84*/ MOVT        R5, #40967                  @ 0xa007 
    /*00007e88*/ B           VPSS_SetGrpNRXParam_x7e00
    /*00007e8c*/ ANDEQ       R0, R0, R4, ROR #10 
FUNC_END VPSS_SetGrpNRXParam


FUNC_BEGIN VPSS_GetGrpNRXParam
    /*00007e90*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00007e94*/ SUBS        R7, R1, #0 
    /*00007e98*/ SUB         SP, SP, #8 
    /*00007e9c*/ MOV         R5, R0 
    /*00007ea0*/ BEQ         VPSS_GetGrpNRXParam_x7f30
    VPSS_GetGrpNRXParam_x7ea4:
    /*00007ea4*/ CMP         R5, #15 
    /*00007ea8*/ BHI         VPSS_GetGrpNRXParam_x7f0c
    VPSS_GetGrpNRXParam_x7eac:
    /*00007eac*/ LDR         R0, [R7] 
    /*00007eb0*/ BL          0x0000000000007EB0          @ VPSS_DRV_CheckGrpNRXVer [R_ARM_CALL: .text+0x1e01c] 
    /*00007eb4*/ SUBS        R8, R0, #0 
    /*00007eb8*/ BNE         VPSS_GetGrpNRXParam_x7f24
    /*00007ebc*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007ec0*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007ec4*/ MOV         R4, #92                     @ 0x5c 
    /*00007ec8*/ MLA         R4, R4, R5, R6 
    /*00007ecc*/ ADD         R4, R4, #108                @ 0x6c 
    /*00007ed0*/ MOV         R0, R4 
    /*00007ed4*/ BL          0x0000000000007ED4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007ed8*/ CMP         R0, #0 
    /*00007edc*/ BNE         VPSS_GetGrpNRXParam_x7f48
    /*00007ee0*/ LDR         R3, [R6, R5, LSL #2] 
    /*00007ee4*/ CMP         R3, #0 
    /*00007ee8*/ BEQ         VPSS_GetGrpNRXParam_x7f54
    /*00007eec*/ MOV         R1, R7 
    /*00007ef0*/ MOV         R0, R5 
    /*00007ef4*/ BL          0x0000000000007EF4          @ VPSS_DRV_GetGrpNRXParam [R_ARM_CALL: .text+0x1edb0] 
    /*00007ef8*/ MOV         R0, R4 
    /*00007efc*/ BL          0x0000000000007EFC          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_GetGrpNRXParam_x7f00:
    /*00007f00*/ MOV         R0, R8 
    /*00007f04*/ ADD         SP, SP, #8 
    /*00007f08*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_GetGrpNRXParam_x7f0c:
    /*00007f0c*/ BL          0x00000000000001B0 
    /*00007f10*/ CMP         R0, #0 
    /*00007f14*/ BEQ         VPSS_GetGrpNRXParam_x7eac
    /*00007f18*/ MOVW        R8, #32769                  @ 0x8001 
    /*00007f1c*/ MOVT        R8, #40967                  @ 0xa007 
    /*00007f20*/ B           VPSS_GetGrpNRXParam_x7f00
    VPSS_GetGrpNRXParam_x7f24:
    /*00007f24*/ MOVW        R8, #32771                  @ 0x8003 
    /*00007f28*/ MOVT        R8, #40967                  @ 0xa007 
    /*00007f2c*/ B           VPSS_GetGrpNRXParam_x7f00
    VPSS_GetGrpNRXParam_x7f30:
    /*00007f30*/ BL          0x0000000000000174 
    /*00007f34*/ CMP         R0, #0 
    /*00007f38*/ MOVWNE      R8, #32774                  @ 0x8006 
    /*00007f3c*/ MOVTNE      R8, #40967                  @ 0xa007 
    /*00007f40*/ BNE         VPSS_GetGrpNRXParam_x7f00
    /*00007f44*/ B           VPSS_GetGrpNRXParam_x7ea4
    VPSS_GetGrpNRXParam_x7f48:
    /*00007f48*/ MOV         R8, #65024                  @ 0xfe00 
    /*00007f4c*/ MOVT        R8, #65535                  @ 0xffff 
    /*00007f50*/ B           VPSS_GetGrpNRXParam_x7f00
    VPSS_GetGrpNRXParam_x7f54:
    /*00007f54*/ MOVW        R3, #5900                   @ 0x170c 
    /*00007f58*/ MOV         R1, #7 
    /*00007f5c*/ STR         R3, [SP] 
    /*00007f60*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00007f64*/ LDR         R3, [PC, #32]               @ 0x0000000000007f8c 
    /*00007f68*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00007f6c*/ STR         R5, [SP, #4] 
    /*00007f70*/ MOV         R0, #3 
    /*00007f74*/ BL          0x0000000000007F74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007f78*/ MOV         R0, R4 
    /*00007f7c*/ MOVW        R8, #32773                  @ 0x8005 
    /*00007f80*/ BL          0x0000000000007F80          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007f84*/ MOVT        R8, #40967                  @ 0xa007 
    /*00007f88*/ B           VPSS_GetGrpNRXParam_x7f00
    /*00007f8c*/ ANDEQ       R0, R0, R8, ROR R5 
FUNC_END VPSS_GetGrpNRXParam


FUNC_BEGIN VPSS_SetExtChnFisheyeAttr
    /*00007f90*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00007f94*/ CMP         R0, #15 
    /*00007f98*/ SUB         SP, SP, #156                @ 0x9c 
    /*00007f9c*/ MOV         R6, R2 
    /*00007fa0*/ STR         R0, [SP, #28] 
    /*00007fa4*/ STR         R1, [SP, #32] 
    /*00007fa8*/ BHI         VPSS_SetExtChnFisheyeAttr_x817c
    VPSS_SetExtChnFisheyeAttr_x7fac:
    /*00007fac*/ LDR         R3, [SP, #32] 
    /*00007fb0*/ SUB         R3, R3, #3 
    /*00007fb4*/ CMP         R3, #7 
    /*00007fb8*/ BHI         VPSS_SetExtChnFisheyeAttr_x8198
    VPSS_SetExtChnFisheyeAttr_x7fbc:
    /*00007fbc*/ CMP         R6, #0 
    /*00007fc0*/ BEQ         VPSS_SetExtChnFisheyeAttr_x8220
    VPSS_SetExtChnFisheyeAttr_x7fc4:
    /*00007fc4*/ LDR         R2, [SP, #28] 
    /*00007fc8*/ MOV         R3, #92                     @ 0x5c 
    /*00007fcc*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007fd0*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007fd4*/ MUL         R3, R3, R2 
    /*00007fd8*/ ADD         R2, R5, #64                 @ 0x40 
    /*00007fdc*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00007fe0*/ ADD         R3, R3, #44                 @ 0x2c 
    /*00007fe4*/ ADD         R3, R2, R3 
    /*00007fe8*/ STR         R3, [SP, #40]               @ 0x28 
    /*00007fec*/ MOV         R0, R3 
    /*00007ff0*/ BL          0x0000000000007FF0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007ff4*/ SUBS        R4, R0, #0 
    /*00007ff8*/ BNE         VPSS_SetExtChnFisheyeAttr_x823c
    /*00007ffc*/ LDR         R3, [SP, #28] 
    /*00008000*/ LDR         R3, [R5, R3, LSL #2] 
    /*00008004*/ CMP         R3, #0 
    /*00008008*/ STR         R3, [SP, #20] 
    /*0000800c*/ BEQ         VPSS_SetExtChnFisheyeAttr_x8278
    /*00008010*/ MOV         R0, #37                     @ 0x25 
    /*00008014*/ BL          0x0000000000008014          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008018*/ SUBS        FP, R0, #0 
    /*0000801c*/ BEQ         VPSS_SetExtChnFisheyeAttr_x824c
    /*00008020*/ MOV         R2, R6 
    /*00008024*/ LDR         R1, [SP, #32] 
    /*00008028*/ LDR         R0, [SP, #28] 
    /*0000802c*/ BL          0x000000000000802C          @ VPSS_DRV_CheckExtChnFishEyeAttr [R_ARM_CALL: .text+0x19fe0] 
    /*00008030*/ SUBS        R3, R0, #0 
    /*00008034*/ STR         R3, [SP, #36]               @ 0x24 
    /*00008038*/ BNE         VPSS_SetExtChnFisheyeAttr_x820c
    /*0000803c*/ LDR         R3, [R6, #3624]             @ 0xe28 
    /*00008040*/ CMP         R3, #0 
    /*00008044*/ BEQ         VPSS_SetExtChnFisheyeAttr_x8130
    /*00008048*/ LDR         R3, [SP, #20] 
    /*0000804c*/ ADD         R5, R6, #1312               @ 0x520 
    /*00008050*/ ADD         SL, R6, #1600               @ 0x640 
    /*00008054*/ ADD         R7, R6, #3072               @ 0xc00 
    /*00008058*/ ADD         R8, R3, #32256              @ 0x7e00 
    /*0000805c*/ MOV         R9, R6 
    /*00008060*/ MOV         R3, R8 
    /*00008064*/ ADD         R8, R8, #112                @ 0x70 
    /*00008068*/ ADD         R3, R3, #184                @ 0xb8 
    /*0000806c*/ STR         R3, [SP, #24] 
    VPSS_SetExtChnFisheyeAttr_x8070:
    /*00008070*/ MOV         R3, #44                     @ 0x2c 
    /*00008074*/ MOV         IP, #0 
    /*00008078*/ MLA         R3, R3, R4, R6 
    /*0000807c*/ MOV         R1, R5 
    /*00008080*/ MOV         R2, #72                     @ 0x48 
    /*00008084*/ MOV         R0, R8 
    /*00008088*/ STR         IP, [SP, #64]               @ 0x40 
    /*0000808c*/ ADD         R4, R4, #1 
    /*00008090*/ LDR         R3, [R3, #3628]             @ 0xe2c 
    /*00008094*/ CMP         R3, #3 
    /*00008098*/ BEQ         VPSS_SetExtChnFisheyeAttr_x8104
    /*0000809c*/ BL          0x000000000000809C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000080a0*/ MOV         R2, #368                    @ 0x170 
    /*000080a4*/ MOV         R1, SL 
    /*000080a8*/ LDR         R0, [SP, #24] 
    /*000080ac*/ BL          0x00000000000080AC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000080b0*/ LDR         R3, [SP, #20] 
    /*000080b4*/ MOV         R2, #32 
    /*000080b8*/ MOV         R1, R7 
    /*000080bc*/ ADD         R0, R3, #32768              @ 0x8000 
    /*000080c0*/ ADD         R0, R0, #128                @ 0x80 
    /*000080c4*/ BL          0x00000000000080C4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000080c8*/ ADD         R1, R6, #3568               @ 0xdf0 
    /*000080cc*/ ADD         R1, R1, #8 
    /*000080d0*/ MOV         R2, #12 
    /*000080d4*/ ADD         R0, SP, #52                 @ 0x34 
    /*000080d8*/ BL          0x00000000000080D8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000080dc*/ STR         R7, [SP, #4] 
    /*000080e0*/ STR         R8, [SP] 
    /*000080e4*/ ADD         R0, SP, #52                 @ 0x34 
    /*000080e8*/ MOV         R3, #0 
    /*000080ec*/ ADD         R2, SP, #64                 @ 0x40 
    /*000080f0*/ MOV         R1, R9 
    /*000080f4*/ LDR         IP, [FP, #68]               @ 0x44 
    /*000080f8*/ BLX         IP 
    /*000080fc*/ CMP         R0, #0 
    /*00008100*/ BNE         VPSS_SetExtChnFisheyeAttr_x81b4
    VPSS_SetExtChnFisheyeAttr_x8104:
    /*00008104*/ MOV         R0, R5 
    /*00008108*/ MOV         R2, #72                     @ 0x48 
    /*0000810c*/ MOV         R1, R8 
    /*00008110*/ ADD         SL, SL, #368                @ 0x170 
    /*00008114*/ BL          0x0000000000008114          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008118*/ LDR         R3, [R6, #3624]             @ 0xe28 
    /*0000811c*/ ADD         R7, R7, #32 
    /*00008120*/ ADD         R9, R9, #328                @ 0x148 
    /*00008124*/ CMP         R3, R4 
    /*00008128*/ ADD         R5, R5, #72                 @ 0x48 
    /*0000812c*/ BHI         VPSS_SetExtChnFisheyeAttr_x8070
    VPSS_SetExtChnFisheyeAttr_x8130:
    /*00008130*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00008134*/ ADD         R1, SP, #48                 @ 0x30 
    /*00008138*/ ADD         R4, R3, #48                 @ 0x30 
    /*0000813c*/ LDR         R3, [PC, #372]              @ 0x00000000000082b8 
    /*00008140*/ ADD         R4, R3, R4 
    /*00008144*/ MOV         R0, R4 
    /*00008148*/ BL          0x0000000000008148          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000814c*/ MOV         R2, R6 
    /*00008150*/ LDR         R1, [SP, #32] 
    /*00008154*/ LDR         R0, [SP, #28] 
    /*00008158*/ BL          0x0000000000008158          @ VPSS_DRV_SetExtChnFisheyeAttr [R_ARM_CALL: .text+0x1a150] 
    /*0000815c*/ MOV         R0, R4 
    /*00008160*/ ADD         R1, SP, #48                 @ 0x30 
    /*00008164*/ BL          0x0000000000008164          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008168*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000816c*/ BL          0x000000000000816C          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_SetExtChnFisheyeAttr_x8170:
    /*00008170*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00008174*/ ADD         SP, SP, #156                @ 0x9c 
    /*00008178*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_SetExtChnFisheyeAttr_x817c:
    /*0000817c*/ BL          0x00000000000001B0 
    /*00008180*/ CMP         R0, #0 
    /*00008184*/ BEQ         VPSS_SetExtChnFisheyeAttr_x7fac
    /*00008188*/ MOVW        R3, #32769                  @ 0x8001 
    /*0000818c*/ MOVT        R3, #40967                  @ 0xa007 
    /*00008190*/ STR         R3, [SP, #36]               @ 0x24 
    /*00008194*/ B           VPSS_SetExtChnFisheyeAttr_x8170
    VPSS_SetExtChnFisheyeAttr_x8198:
    /*00008198*/ BL          0x0000000000000354 
    /*0000819c*/ CMP         R0, #0 
    /*000081a0*/ BEQ         VPSS_SetExtChnFisheyeAttr_x7fbc
    /*000081a4*/ MOVW        R3, #32770                  @ 0x8002 
    /*000081a8*/ MOVT        R3, #40967                  @ 0xa007 
    /*000081ac*/ STR         R3, [SP, #36]               @ 0x24 
    /*000081b0*/ B           VPSS_SetExtChnFisheyeAttr_x8170
    VPSS_SetExtChnFisheyeAttr_x81b4:
    /*000081b4*/ LDR         R3, [SP, #32] 
    /*000081b8*/ MOVW        IP, #32771                  @ 0x8003 
    /*000081bc*/ LDR         R2, [SP, #28] 
    /*000081c0*/ MOV         R1, #7 
    /*000081c4*/ MOV         R0, #3 
    /*000081c8*/ MOV         R4, IP 
    /*000081cc*/ STR         R3, [SP, #8] 
    /*000081d0*/ MOVW        R3, #6039                   @ 0x1797 
    /*000081d4*/ STR         R2, [SP, #4] 
    /*000081d8*/ MOVW        R2, #0                      @ .LC114 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x199c] 
    /*000081dc*/ STR         R3, [SP] 
    /*000081e0*/ MOVT        R2, #0                      @ .LC114 [R_ARM_MOVT_ABS: .rodata.str1.4+0x199c] 
    /*000081e4*/ LDR         R3, [PC, #208]              @ 0x00000000000082bc 
    /*000081e8*/ BL          0x00000000000081E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_SetExtChnFisheyeAttr_x81ec:
    /*000081ec*/ LDR         R0, [SP, #40]               @ 0x28 
    /*000081f0*/ BL          0x00000000000081F0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000081f4*/ MOV         IP, R4 
    /*000081f8*/ MOVT        IP, #40967                  @ 0xa007 
    /*000081fc*/ STR         IP, [SP, #36]               @ 0x24 
    /*00008200*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00008204*/ ADD         SP, SP, #156                @ 0x9c 
    /*00008208*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_SetExtChnFisheyeAttr_x820c:
    /*0000820c*/ LDR         R0, [SP, #40]               @ 0x28 
    /*00008210*/ BL          0x0000000000008210          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008214*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00008218*/ ADD         SP, SP, #156                @ 0x9c 
    /*0000821c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_SetExtChnFisheyeAttr_x8220:
    /*00008220*/ BL          0x0000000000000174 
    /*00008224*/ CMP         R0, #0 
    /*00008228*/ MOVWNE      R3, #32774                  @ 0x8006 
    /*0000822c*/ MOVTNE      R3, #40967                  @ 0xa007 
    /*00008230*/ STRNE       R3, [SP, #36]               @ 0x24 
    /*00008234*/ BNE         VPSS_SetExtChnFisheyeAttr_x8170
    /*00008238*/ B           VPSS_SetExtChnFisheyeAttr_x7fc4
    VPSS_SetExtChnFisheyeAttr_x823c:
    /*0000823c*/ MOV         R3, #65024                  @ 0xfe00 
    /*00008240*/ MOVT        R3, #65535                  @ 0xffff 
    /*00008244*/ STR         R3, [SP, #36]               @ 0x24 
    /*00008248*/ B           VPSS_SetExtChnFisheyeAttr_x8170
    VPSS_SetExtChnFisheyeAttr_x824c:
    /*0000824c*/ MOVW        R3, #6012                   @ 0x177c 
    /*00008250*/ MOVW        IP, #32777                  @ 0x8009 
    /*00008254*/ STR         R3, [SP] 
    /*00008258*/ MOVW        R2, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1934] 
    /*0000825c*/ LDR         R3, [PC, #88]               @ 0x00000000000082bc 
    /*00008260*/ MOVT        R2, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1934] 
    /*00008264*/ MOV         R1, #7 
    /*00008268*/ MOV         R0, #3 
    /*0000826c*/ MOV         R4, IP 
    /*00008270*/ BL          0x0000000000008270          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008274*/ B           VPSS_SetExtChnFisheyeAttr_x81ec
    VPSS_SetExtChnFisheyeAttr_x8278:
    /*00008278*/ LDR         R3, [SP, #28] 
    /*0000827c*/ MOV         R1, #7 
    /*00008280*/ MOVW        R2, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1908] 
    /*00008284*/ MOV         R0, #3 
    /*00008288*/ MOVT        R2, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1908] 
    /*0000828c*/ STR         R3, [SP, #4] 
    /*00008290*/ MOVW        R3, #6004                   @ 0x1774 
    /*00008294*/ STR         R3, [SP] 
    /*00008298*/ LDR         R3, [PC, #28]               @ 0x00000000000082bc 
    /*0000829c*/ BL          0x000000000000829C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000082a0*/ LDR         R0, [SP, #40]               @ 0x28 
    /*000082a4*/ BL          0x00000000000082A4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000082a8*/ MOVW        R3, #32773                  @ 0x8005 
    /*000082ac*/ MOVT        R3, #40967                  @ 0xa007 
    /*000082b0*/ STR         R3, [SP, #36]               @ 0x24 
    /*000082b4*/ B           VPSS_SetExtChnFisheyeAttr_x8170
    /*000082b8*/ ANDEQ       R0, R0, R0, ASR #32 
    /*000082bc*/ ANDEQ       R0, R0, IP, LSL #11 
FUNC_END VPSS_SetExtChnFisheyeAttr


FUNC_BEGIN VPSS_GetExtChnFisheyeAttr
    /*000082c0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000082c4*/ SUBS        R8, R2, #0 
    /*000082c8*/ SUB         SP, SP, #8 
    /*000082cc*/ MOV         R5, R0 
    /*000082d0*/ MOV         R7, R1 
    /*000082d4*/ BEQ         VPSS_GetExtChnFisheyeAttr_x8374
    VPSS_GetExtChnFisheyeAttr_x82d8:
    /*000082d8*/ CMP         R5, #15 
    /*000082dc*/ BHI         VPSS_GetExtChnFisheyeAttr_x8344
    VPSS_GetExtChnFisheyeAttr_x82e0:
    /*000082e0*/ SUB         R3, R7, #3 
    /*000082e4*/ CMP         R3, #7 
    /*000082e8*/ BHI         VPSS_GetExtChnFisheyeAttr_x835c
    VPSS_GetExtChnFisheyeAttr_x82ec:
    /*000082ec*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000082f0*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000082f4*/ MOV         R4, #92                     @ 0x5c 
    /*000082f8*/ MLA         R4, R4, R5, R6 
    /*000082fc*/ ADD         R4, R4, #108                @ 0x6c 
    /*00008300*/ MOV         R0, R4 
    /*00008304*/ BL          0x0000000000008304          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008308*/ CMP         R0, #0 
    /*0000830c*/ BNE         VPSS_GetExtChnFisheyeAttr_x838c
    /*00008310*/ LDR         R3, [R6, R5, LSL #2] 
    /*00008314*/ CMP         R3, #0 
    /*00008318*/ BEQ         VPSS_GetExtChnFisheyeAttr_x8398
    /*0000831c*/ MOV         R0, R5 
    /*00008320*/ MOV         R2, R8 
    /*00008324*/ MOV         R1, R7 
    /*00008328*/ BL          0x0000000000008328          @ VPSS_DRV_GetExtChnFisheyeAttr [R_ARM_CALL: .text+0x1a1ac] 
    /*0000832c*/ SUBS        R5, R0, #0 
    /*00008330*/ MOV         R0, R4 
    /*00008334*/ BL          0x0000000000008334          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_GetExtChnFisheyeAttr_x8338:
    /*00008338*/ MOV         R0, R5 
    /*0000833c*/ ADD         SP, SP, #8 
    /*00008340*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_GetExtChnFisheyeAttr_x8344:
    /*00008344*/ BL          0x00000000000001B0 
    /*00008348*/ CMP         R0, #0 
    /*0000834c*/ BEQ         VPSS_GetExtChnFisheyeAttr_x82e0
    /*00008350*/ MOVW        R5, #32769                  @ 0x8001 
    /*00008354*/ MOVT        R5, #40967                  @ 0xa007 
    /*00008358*/ B           VPSS_GetExtChnFisheyeAttr_x8338
    VPSS_GetExtChnFisheyeAttr_x835c:
    /*0000835c*/ BL          0x0000000000000354 
    /*00008360*/ CMP         R0, #0 
    /*00008364*/ BEQ         VPSS_GetExtChnFisheyeAttr_x82ec
    /*00008368*/ MOVW        R5, #32770                  @ 0x8002 
    /*0000836c*/ MOVT        R5, #40967                  @ 0xa007 
    /*00008370*/ B           VPSS_GetExtChnFisheyeAttr_x8338
    VPSS_GetExtChnFisheyeAttr_x8374:
    /*00008374*/ BL          0x0000000000000174 
    /*00008378*/ CMP         R0, #0 
    /*0000837c*/ MOVWNE      R5, #32774                  @ 0x8006 
    /*00008380*/ MOVTNE      R5, #40967                  @ 0xa007 
    /*00008384*/ BNE         VPSS_GetExtChnFisheyeAttr_x8338
    /*00008388*/ B           VPSS_GetExtChnFisheyeAttr_x82d8
    VPSS_GetExtChnFisheyeAttr_x838c:
    /*0000838c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00008390*/ MOVT        R5, #65535                  @ 0xffff 
    /*00008394*/ B           VPSS_GetExtChnFisheyeAttr_x8338
    VPSS_GetExtChnFisheyeAttr_x8398:
    /*00008398*/ STR         R5, [SP, #4] 
    /*0000839c*/ MOVW        R3, #6072                   @ 0x17b8 
    /*000083a0*/ MOV         R1, #7 
    /*000083a4*/ STR         R3, [SP] 
    /*000083a8*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*000083ac*/ LDR         R3, [PC, #28]               @ 0x00000000000083d0 
    /*000083b0*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*000083b4*/ MOV         R0, #3 
    /*000083b8*/ BL          0x00000000000083B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000083bc*/ MOV         R0, R4 
    /*000083c0*/ MOVW        R5, #32773                  @ 0x8005 
    /*000083c4*/ BL          0x00000000000083C4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000083c8*/ MOVT        R5, #40967                  @ 0xa007 
    /*000083cc*/ B           VPSS_GetExtChnFisheyeAttr_x8338
    /*000083d0*/ ANDEQ       R0, R0, R8, LSR #11 
FUNC_END VPSS_GetExtChnFisheyeAttr


FUNC_BEGIN VPSS_SetGrpFisheyeConfig
    /*000083d4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000083d8*/ SUBS        R9, R1, #0 
    /*000083dc*/ SUB         SP, SP, #20 
    /*000083e0*/ MOV         R4, R0 
    /*000083e4*/ BEQ         VPSS_SetGrpFisheyeConfig_x8498
    VPSS_SetGrpFisheyeConfig_x83e8:
    /*000083e8*/ CMP         R4, #15 
    /*000083ec*/ BHI         VPSS_SetGrpFisheyeConfig_x8480
    VPSS_SetGrpFisheyeConfig_x83f0:
    /*000083f0*/ MOV         R5, #92                     @ 0x5c 
    /*000083f4*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000083f8*/ MUL         R5, R5, R4 
    /*000083fc*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00008400*/ ADD         R8, R6, #64                 @ 0x40 
    /*00008404*/ ADD         R7, R5, #44                 @ 0x2c 
    /*00008408*/ ADD         R7, R8, R7 
    /*0000840c*/ MOV         R0, R7 
    /*00008410*/ BL          0x0000000000008410          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008414*/ CMP         R0, #0 
    /*00008418*/ BNE         VPSS_SetGrpFisheyeConfig_x84b0
    /*0000841c*/ LDR         R3, [R6, R4, LSL #2] 
    /*00008420*/ CMP         R3, #0 
    /*00008424*/ BEQ         VPSS_SetGrpFisheyeConfig_x84bc
    /*00008428*/ MOV         R1, R9 
    /*0000842c*/ MOV         R0, R4 
    /*00008430*/ BL          0x0000000000008430          @ VPSS_DRV_CheckFisheyeConfig [R_ARM_CALL: .text+0x1a2d4] 
    /*00008434*/ SUBS        R6, R0, #0 
    /*00008438*/ BNE         VPSS_SetGrpFisheyeConfig_x846c
    /*0000843c*/ ADD         R5, R5, #48                 @ 0x30 
    /*00008440*/ ADD         R1, SP, #12 
    /*00008444*/ ADD         R5, R8, R5 
    /*00008448*/ MOV         R0, R5 
    /*0000844c*/ BL          0x000000000000844C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008450*/ MOV         R1, R9 
    /*00008454*/ MOV         R0, R4 
    /*00008458*/ BL          0x0000000000008458          @ VPSS_DRV_SetFisheyeConfig [R_ARM_CALL: .text+0x1a2dc] 
    /*0000845c*/ ADD         R1, SP, #12 
    /*00008460*/ MOV         R6, R0 
    /*00008464*/ MOV         R0, R5 
    /*00008468*/ BL          0x0000000000008468          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VPSS_SetGrpFisheyeConfig_x846c:
    /*0000846c*/ MOV         R0, R7 
    /*00008470*/ BL          0x0000000000008470          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_SetGrpFisheyeConfig_x8474:
    /*00008474*/ MOV         R0, R6 
    /*00008478*/ ADD         SP, SP, #20 
    /*0000847c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_SetGrpFisheyeConfig_x8480:
    /*00008480*/ BL          0x00000000000001B0 
    /*00008484*/ CMP         R0, #0 
    /*00008488*/ BEQ         VPSS_SetGrpFisheyeConfig_x83f0
    /*0000848c*/ MOVW        R6, #32769                  @ 0x8001 
    /*00008490*/ MOVT        R6, #40967                  @ 0xa007 
    /*00008494*/ B           VPSS_SetGrpFisheyeConfig_x8474
    VPSS_SetGrpFisheyeConfig_x8498:
    /*00008498*/ BL          0x0000000000000174 
    /*0000849c*/ CMP         R0, #0 
    /*000084a0*/ MOVWNE      R6, #32774                  @ 0x8006 
    /*000084a4*/ MOVTNE      R6, #40967                  @ 0xa007 
    /*000084a8*/ BNE         VPSS_SetGrpFisheyeConfig_x8474
    /*000084ac*/ B           VPSS_SetGrpFisheyeConfig_x83e8
    VPSS_SetGrpFisheyeConfig_x84b0:
    /*000084b0*/ MOV         R6, #65024                  @ 0xfe00 
    /*000084b4*/ MOVT        R6, #65535                  @ 0xffff 
    /*000084b8*/ B           VPSS_SetGrpFisheyeConfig_x8474
    VPSS_SetGrpFisheyeConfig_x84bc:
    /*000084bc*/ MOVW        R3, #6103                   @ 0x17d7 
    /*000084c0*/ MOV         R1, #7 
    /*000084c4*/ STR         R3, [SP] 
    /*000084c8*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*000084cc*/ LDR         R3, [PC, #32]               @ 0x00000000000084f4 
    /*000084d0*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*000084d4*/ STR         R4, [SP, #4] 
    /*000084d8*/ MOV         R0, #3 
    /*000084dc*/ BL          0x00000000000084DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000084e0*/ MOV         R0, R7 
    /*000084e4*/ MOVW        R6, #32773                  @ 0x8005 
    /*000084e8*/ BL          0x00000000000084E8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000084ec*/ MOVT        R6, #40967                  @ 0xa007 
    /*000084f0*/ B           VPSS_SetGrpFisheyeConfig_x8474
    /*000084f4*/ ANDEQ       R0, R0, R4, ASR #11 
FUNC_END VPSS_SetGrpFisheyeConfig


FUNC_BEGIN VPSS_GetGrpFisheyeConfig
    /*000084f8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000084fc*/ SUBS        R8, R1, #0 
    /*00008500*/ SUB         SP, SP, #8 
    /*00008504*/ MOV         R5, R0 
    /*00008508*/ BEQ         VPSS_GetGrpFisheyeConfig_x857c
    VPSS_GetGrpFisheyeConfig_x850c:
    /*0000850c*/ CMP         R5, #15 
    /*00008510*/ BHI         VPSS_GetGrpFisheyeConfig_x8564
    VPSS_GetGrpFisheyeConfig_x8514:
    /*00008514*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00008518*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000851c*/ MOV         R4, #92                     @ 0x5c 
    /*00008520*/ MLA         R4, R4, R5, R6 
    /*00008524*/ ADD         R4, R4, #108                @ 0x6c 
    /*00008528*/ MOV         R0, R4 
    /*0000852c*/ BL          0x000000000000852C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008530*/ SUBS        R7, R0, #0 
    /*00008534*/ BNE         VPSS_GetGrpFisheyeConfig_x8594
    /*00008538*/ LDR         R3, [R6, R5, LSL #2] 
    /*0000853c*/ CMP         R3, #0 
    /*00008540*/ BEQ         VPSS_GetGrpFisheyeConfig_x85a0
    /*00008544*/ MOV         R1, R8 
    /*00008548*/ MOV         R0, R5 
    /*0000854c*/ BL          0x000000000000854C          @ VPSS_DRV_GetFisheyeConfig [R_ARM_CALL: .text+0x1a2e4] 
    /*00008550*/ MOV         R0, R4 
    /*00008554*/ BL          0x0000000000008554          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008558*/ MOV         R0, R7 
    VPSS_GetGrpFisheyeConfig_x855c:
    /*0000855c*/ ADD         SP, SP, #8 
    /*00008560*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_GetGrpFisheyeConfig_x8564:
    /*00008564*/ BL          0x00000000000001B0 
    /*00008568*/ CMP         R0, #0 
    /*0000856c*/ BEQ         VPSS_GetGrpFisheyeConfig_x8514
    /*00008570*/ MOVW        R0, #32769                  @ 0x8001 
    /*00008574*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008578*/ B           VPSS_GetGrpFisheyeConfig_x855c
    VPSS_GetGrpFisheyeConfig_x857c:
    /*0000857c*/ BL          0x0000000000000174 
    /*00008580*/ CMP         R0, #0 
    /*00008584*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*00008588*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*0000858c*/ BNE         VPSS_GetGrpFisheyeConfig_x855c
    /*00008590*/ B           VPSS_GetGrpFisheyeConfig_x850c
    VPSS_GetGrpFisheyeConfig_x8594:
    /*00008594*/ MOV         R0, #65024                  @ 0xfe00 
    /*00008598*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000859c*/ B           VPSS_GetGrpFisheyeConfig_x855c
    VPSS_GetGrpFisheyeConfig_x85a0:
    /*000085a0*/ MOVW        R3, #6136                   @ 0x17f8 
    /*000085a4*/ MOV         R1, #7 
    /*000085a8*/ STR         R3, [SP] 
    /*000085ac*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*000085b0*/ LDR         R3, [PC, #32]               @ 0x00000000000085d8 
    /*000085b4*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*000085b8*/ STR         R5, [SP, #4] 
    /*000085bc*/ MOV         R0, #3 
    /*000085c0*/ BL          0x00000000000085C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000085c4*/ MOV         R0, R4 
    /*000085c8*/ BL          0x00000000000085C8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000085cc*/ MOVW        R0, #32773                  @ 0x8005 
    /*000085d0*/ MOVT        R0, #40967                  @ 0xa007 
    /*000085d4*/ B           VPSS_GetGrpFisheyeConfig_x855c
    /*000085d8*/ ANDEQ       R0, R0, R0, ROR #11 
FUNC_END VPSS_GetGrpFisheyeConfig


FUNC_BEGIN VpssCheckFrameIntAttr
    /*000085dc*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000085e0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000085e4*/ ADD         R2, R3, R0, LSL #2 
    /*000085e8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000085ec*/ SUB         SP, SP, #12 
    /*000085f0*/ LDR         R2, [R2, #1540]             @ 0x604 
    /*000085f4*/ LDR         R3, [R3, R0, LSL #2] 
    /*000085f8*/ CMP         R2, #1 
    /*000085fc*/ MOVWNE      R3, #6157                   @ 0x180d 
    /*00008600*/ MOVWNE      R2, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x19e4] 
    /*00008604*/ STRNE       R3, [SP] 
    /*00008608*/ MOVTNE      R2, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0x19e4] 
    /*0000860c*/ BNE         VpssCheckFrameIntAttr_x864c
    /*00008610*/ LDR         R2, [R3, #2056]             @ 0x808 
    /*00008614*/ CMP         R2, #1 
    /*00008618*/ BEQ         VpssCheckFrameIntAttr_x8628
    VpssCheckFrameIntAttr_x861c:
    /*0000861c*/ MOV         R0, #0 
    VpssCheckFrameIntAttr_x8620:
    /*00008620*/ ADD         SP, SP, #12 
    /*00008624*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VpssCheckFrameIntAttr_x8628:
    /*00008628*/ ADD         R3, R3, #28672              @ 0x7000 
    /*0000862c*/ LDR         R2, [R1] 
    /*00008630*/ LDR         R3, [R3, #3684]             @ 0xe64 
    /*00008634*/ CMP         R2, R3 
    /*00008638*/ BEQ         VpssCheckFrameIntAttr_x861c
    /*0000863c*/ MOVW        R2, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a1c] 
    /*00008640*/ MOVT        R2, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a1c] 
    /*00008644*/ MOVW        R3, #6165                   @ 0x1815 
    /*00008648*/ STR         R3, [SP] 
    VpssCheckFrameIntAttr_x864c:
    /*0000864c*/ LDR         R3, [PC, #20]               @ 0x0000000000008668 
    /*00008650*/ MOV         R1, #7 
    /*00008654*/ MOV         R0, #3 
    /*00008658*/ BL          0x0000000000008658          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000865c*/ MOVW        R0, #32777                  @ 0x8009 
    /*00008660*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008664*/ B           VpssCheckFrameIntAttr_x8620
    /*00008668*/ STRDEQ      R0, [R0], -IP 
FUNC_END VpssCheckFrameIntAttr


FUNC_BEGIN VpssSetViFrameIntAttr
    /*0000866c*/ PUSH        {R4, R5, R6, LR} 
    /*00008670*/ MOV         R4, R0 
    /*00008674*/ MOV         R0, #16 
    /*00008678*/ MOV         R5, R1 
    /*0000867c*/ BL          0x000000000000867C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008680*/ LDR         R3, [R0, #68]               @ 0x44 
    /*00008684*/ CMP         R3, #0 
    /*00008688*/ BEQ         VpssSetViFrameIntAttr_x86a8
    /*0000868c*/ MOV         R0, #16 
    /*00008690*/ BL          0x0000000000008690          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008694*/ MOV         R1, R5 
    /*00008698*/ LDR         R3, [R0, #68]               @ 0x44 
    /*0000869c*/ MOV         R0, R4 
    /*000086a0*/ POP         {R4, R5, R6, LR} 
    /*000086a4*/ BX          R3 
    VpssSetViFrameIntAttr_x86a8:
    /*000086a8*/ MVN         R0, #0 
    /*000086ac*/ POP         {R4, R5, R6, PC} 
FUNC_END VpssSetViFrameIntAttr


FUNC_BEGIN VpssSetFrameIntAttr
    /*000086b0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000086b4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000086b8*/ PUSH        {R4, R5, R6, LR} 
    /*000086bc*/ MOV         R4, R0 
    /*000086c0*/ LDR         R0, [R3, R0, LSL #2] 
    /*000086c4*/ MOV         R5, R1 
    /*000086c8*/ MOV         R2, #8 
    /*000086cc*/ ADD         R0, R0, #32256              @ 0x7e00 
    /*000086d0*/ ADD         R0, R0, #100                @ 0x64 
    /*000086d4*/ BL          0x00000000000086D4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000086d8*/ MOV         R1, R5 
    /*000086dc*/ MOV         R0, R4 
    /*000086e0*/ BL          0x00000000000086E0          @ VPSS_DRV_OnlineSetFrameIntAttr [R_ARM_CALL: .text+0x261cc] 
    /*000086e4*/ CMP         R0, #0 
    /*000086e8*/ BNE         VpssSetFrameIntAttr_x8710
    /*000086ec*/ MOV         R1, R5 
    /*000086f0*/ MOV         R0, R4 
    /*000086f4*/ BL          0x00000000000086F4          @ VpssSetViFrameIntAttr [R_ARM_CALL: .text+0x866c] 
    /*000086f8*/ MOVW        R3, #32776                  @ 0x8008 
    /*000086fc*/ MOVT        R3, #40967                  @ 0xa007 
    /*00008700*/ CMP         R0, #0 
    /*00008704*/ MOVNE       R0, R3 
    /*00008708*/ MOVEQ       R0, #0 
    /*0000870c*/ POP         {R4, R5, R6, PC} 
    VpssSetFrameIntAttr_x8710:
    /*00008710*/ MOVW        R0, #32771                  @ 0x8003 
    /*00008714*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008718*/ POP         {R4, R5, R6, PC} 
FUNC_END VpssSetFrameIntAttr


FUNC_BEGIN VpssGetFrameIntAttr
    /*0000871c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00008720*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00008724*/ PUSH        {R4, LR} 
    /*00008728*/ MOV         R2, #8 
    /*0000872c*/ LDR         R3, [R3, R0, LSL #2] 
    /*00008730*/ MOV         R0, R1 
    /*00008734*/ ADD         R1, R3, #32256              @ 0x7e00 
    /*00008738*/ ADD         R1, R1, #100                @ 0x64 
    /*0000873c*/ BL          0x000000000000873C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008740*/ MOV         R0, #0 
    /*00008744*/ POP         {R4, PC} 
FUNC_END VpssGetFrameIntAttr


FUNC_BEGIN VPSS_SetGrpFrameInterruptAttr
    /*00008748*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000874c*/ SUBS        R7, R1, #0 
    /*00008750*/ SUB         SP, SP, #12 
    /*00008754*/ MOV         R5, R0 
    /*00008758*/ BEQ         VPSS_SetGrpFrameInterruptAttr_x87e4
    VPSS_SetGrpFrameInterruptAttr_x875c:
    /*0000875c*/ CMP         R5, #15 
    /*00008760*/ BHI         VPSS_SetGrpFrameInterruptAttr_x87cc
    VPSS_SetGrpFrameInterruptAttr_x8764:
    /*00008764*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00008768*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000876c*/ MOV         R4, #92                     @ 0x5c 
    /*00008770*/ MLA         R4, R4, R5, R6 
    /*00008774*/ ADD         R4, R4, #108                @ 0x6c 
    /*00008778*/ MOV         R0, R4 
    /*0000877c*/ BL          0x000000000000877C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008780*/ CMP         R0, #0 
    /*00008784*/ BNE         VPSS_SetGrpFrameInterruptAttr_x87fc
    /*00008788*/ LDR         R3, [R6, R5, LSL #2] 
    /*0000878c*/ CMP         R3, #0 
    /*00008790*/ BEQ         VPSS_SetGrpFrameInterruptAttr_x8808
    /*00008794*/ MOV         R1, R7 
    /*00008798*/ MOV         R0, R5 
    /*0000879c*/ BL          0x000000000000879C          @ VpssCheckFrameIntAttr [R_ARM_CALL: .text+0x85dc] 
    /*000087a0*/ SUBS        R6, R0, #0 
    /*000087a4*/ BNE         VPSS_SetGrpFrameInterruptAttr_x87b8
    /*000087a8*/ MOV         R1, R7 
    /*000087ac*/ MOV         R0, R5 
    /*000087b0*/ BL          0x00000000000087B0          @ VpssSetFrameIntAttr [R_ARM_CALL: .text+0x86b0] 
    /*000087b4*/ MOV         R6, R0 
    VPSS_SetGrpFrameInterruptAttr_x87b8:
    /*000087b8*/ MOV         R0, R4 
    /*000087bc*/ BL          0x00000000000087BC          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_SetGrpFrameInterruptAttr_x87c0:
    /*000087c0*/ MOV         R0, R6 
    /*000087c4*/ ADD         SP, SP, #12 
    /*000087c8*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_SetGrpFrameInterruptAttr_x87cc:
    /*000087cc*/ BL          0x00000000000001B0 
    /*000087d0*/ CMP         R0, #0 
    /*000087d4*/ BEQ         VPSS_SetGrpFrameInterruptAttr_x8764
    /*000087d8*/ MOVW        R6, #32769                  @ 0x8001 
    /*000087dc*/ MOVT        R6, #40967                  @ 0xa007 
    /*000087e0*/ B           VPSS_SetGrpFrameInterruptAttr_x87c0
    VPSS_SetGrpFrameInterruptAttr_x87e4:
    /*000087e4*/ BL          0x0000000000000174 
    /*000087e8*/ CMP         R0, #0 
    /*000087ec*/ MOVWNE      R6, #32774                  @ 0x8006 
    /*000087f0*/ MOVTNE      R6, #40967                  @ 0xa007 
    /*000087f4*/ BNE         VPSS_SetGrpFrameInterruptAttr_x87c0
    /*000087f8*/ B           VPSS_SetGrpFrameInterruptAttr_x875c
    VPSS_SetGrpFrameInterruptAttr_x87fc:
    /*000087fc*/ MOV         R6, #65024                  @ 0xfe00 
    /*00008800*/ MOVT        R6, #65535                  @ 0xffff 
    /*00008804*/ B           VPSS_SetGrpFrameInterruptAttr_x87c0
    VPSS_SetGrpFrameInterruptAttr_x8808:
    /*00008808*/ MOVW        R3, #6232                   @ 0x1858 
    /*0000880c*/ MOV         R1, #7 
    /*00008810*/ STR         R3, [SP] 
    /*00008814*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00008818*/ LDR         R3, [PC, #32]               @ 0x0000000000008840 
    /*0000881c*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00008820*/ STR         R5, [SP, #4] 
    /*00008824*/ MOV         R0, #3 
    /*00008828*/ BL          0x0000000000008828          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000882c*/ MOV         R0, R4 
    /*00008830*/ MOVW        R6, #32773                  @ 0x8005 
    /*00008834*/ BL          0x0000000000008834          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008838*/ MOVT        R6, #40967                  @ 0xa007 
    /*0000883c*/ B           VPSS_SetGrpFrameInterruptAttr_x87c0
    /*00008840*/ ANDEQ       R0, R0, R4, LSL R6 
FUNC_END VPSS_SetGrpFrameInterruptAttr


FUNC_BEGIN VPSS_GetGrpFrameInterruptAttr
    /*00008844*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00008848*/ SUBS        R8, R1, #0 
    /*0000884c*/ SUB         SP, SP, #8 
    /*00008850*/ MOV         R7, R0 
    /*00008854*/ BEQ         VPSS_GetGrpFrameInterruptAttr_x88d0
    VPSS_GetGrpFrameInterruptAttr_x8858:
    /*00008858*/ CMP         R7, #15 
    /*0000885c*/ BHI         VPSS_GetGrpFrameInterruptAttr_x88b8
    VPSS_GetGrpFrameInterruptAttr_x8860:
    /*00008860*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00008864*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00008868*/ MOV         R4, #92                     @ 0x5c 
    /*0000886c*/ MLA         R4, R4, R7, R5 
    /*00008870*/ ADD         R4, R4, #108                @ 0x6c 
    /*00008874*/ MOV         R0, R4 
    /*00008878*/ BL          0x0000000000008878          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000887c*/ SUBS        R6, R0, #0 
    /*00008880*/ BNE         VPSS_GetGrpFrameInterruptAttr_x88e8
    /*00008884*/ LDR         R1, [R5, R7, LSL #2] 
    /*00008888*/ CMP         R1, #0 
    /*0000888c*/ BEQ         VPSS_GetGrpFrameInterruptAttr_x88f4
    /*00008890*/ ADD         R1, R1, #32256              @ 0x7e00 
    /*00008894*/ MOV         R2, #8 
    /*00008898*/ ADD         R1, R1, #100                @ 0x64 
    /*0000889c*/ MOV         R0, R8 
    /*000088a0*/ BL          0x00000000000088A0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000088a4*/ MOV         R0, R4 
    /*000088a8*/ BL          0x00000000000088A8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000088ac*/ MOV         R0, R6 
    VPSS_GetGrpFrameInterruptAttr_x88b0:
    /*000088b0*/ ADD         SP, SP, #8 
    /*000088b4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_GetGrpFrameInterruptAttr_x88b8:
    /*000088b8*/ BL          0x00000000000001B0 
    /*000088bc*/ CMP         R0, #0 
    /*000088c0*/ BEQ         VPSS_GetGrpFrameInterruptAttr_x8860
    /*000088c4*/ MOVW        R0, #32769                  @ 0x8001 
    /*000088c8*/ MOVT        R0, #40967                  @ 0xa007 
    /*000088cc*/ B           VPSS_GetGrpFrameInterruptAttr_x88b0
    VPSS_GetGrpFrameInterruptAttr_x88d0:
    /*000088d0*/ BL          0x0000000000000174 
    /*000088d4*/ CMP         R0, #0 
    /*000088d8*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*000088dc*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*000088e0*/ BNE         VPSS_GetGrpFrameInterruptAttr_x88b0
    /*000088e4*/ B           VPSS_GetGrpFrameInterruptAttr_x8858
    VPSS_GetGrpFrameInterruptAttr_x88e8:
    /*000088e8*/ MOV         R0, #65024                  @ 0xfe00 
    /*000088ec*/ MOVT        R0, #65535                  @ 0xffff 
    /*000088f0*/ B           VPSS_GetGrpFrameInterruptAttr_x88b0
    VPSS_GetGrpFrameInterruptAttr_x88f4:
    /*000088f4*/ MOVW        R3, #6262                   @ 0x1876 
    /*000088f8*/ MOV         R1, #7 
    /*000088fc*/ STR         R3, [SP] 
    /*00008900*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00008904*/ LDR         R3, [PC, #32]               @ 0x000000000000892c 
    /*00008908*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*0000890c*/ STR         R7, [SP, #4] 
    /*00008910*/ MOV         R0, #3 
    /*00008914*/ BL          0x0000000000008914          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008918*/ MOV         R0, R4 
    /*0000891c*/ BL          0x000000000000891C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008920*/ MOVW        R0, #32773                  @ 0x8005 
    /*00008924*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008928*/ B           VPSS_GetGrpFrameInterruptAttr_x88b0
    /*0000892c*/ ANDEQ       R0, R0, R4, LSR R6 
FUNC_END VPSS_GetGrpFrameInterruptAttr


FUNC_BEGIN VPSS_EnableUserFrameRateCtrl
    /*00008930*/ CMP         R0, #15 
    /*00008934*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00008938*/ MOV         R7, R0 
    /*0000893c*/ SUB         SP, SP, #12 
    /*00008940*/ BHI         VPSS_EnableUserFrameRateCtrl_x8994
    VPSS_EnableUserFrameRateCtrl_x8944:
    /*00008944*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00008948*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000894c*/ MOV         R4, #92                     @ 0x5c 
    /*00008950*/ MLA         R4, R4, R7, R5 
    /*00008954*/ ADD         R4, R4, #108                @ 0x6c 
    /*00008958*/ MOV         R0, R4 
    /*0000895c*/ BL          0x000000000000895C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008960*/ SUBS        R6, R0, #0 
    /*00008964*/ BNE         VPSS_EnableUserFrameRateCtrl_x89ac
    /*00008968*/ LDR         R3, [R5, R7, LSL #2] 
    /*0000896c*/ CMP         R3, #0 
    /*00008970*/ BEQ         VPSS_EnableUserFrameRateCtrl_x89b8
    /*00008974*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00008978*/ MOV         R0, R4 
    /*0000897c*/ MOV         R2, #1 
    /*00008980*/ STR         R2, [R3, #3692]             @ 0xe6c 
    /*00008984*/ BL          0x0000000000008984          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008988*/ MOV         R0, R6 
    VPSS_EnableUserFrameRateCtrl_x898c:
    /*0000898c*/ ADD         SP, SP, #12 
    /*00008990*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_EnableUserFrameRateCtrl_x8994:
    /*00008994*/ BL          0x00000000000001B0 
    /*00008998*/ CMP         R0, #0 
    /*0000899c*/ BEQ         VPSS_EnableUserFrameRateCtrl_x8944
    /*000089a0*/ MOVW        R0, #32769                  @ 0x8001 
    /*000089a4*/ MOVT        R0, #40967                  @ 0xa007 
    /*000089a8*/ B           VPSS_EnableUserFrameRateCtrl_x898c
    VPSS_EnableUserFrameRateCtrl_x89ac:
    /*000089ac*/ MOV         R0, #65024                  @ 0xfe00 
    /*000089b0*/ MOVT        R0, #65535                  @ 0xffff 
    /*000089b4*/ B           VPSS_EnableUserFrameRateCtrl_x898c
    VPSS_EnableUserFrameRateCtrl_x89b8:
    /*000089b8*/ MOVW        R3, #6286                   @ 0x188e 
    /*000089bc*/ MOV         R1, #7 
    /*000089c0*/ STR         R3, [SP] 
    /*000089c4*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*000089c8*/ LDR         R3, [PC, #32]               @ 0x00000000000089f0 
    /*000089cc*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*000089d0*/ STR         R7, [SP, #4] 
    /*000089d4*/ MOV         R0, #3 
    /*000089d8*/ BL          0x00000000000089D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000089dc*/ MOV         R0, R4 
    /*000089e0*/ BL          0x00000000000089E0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000089e4*/ MOVW        R0, #32773                  @ 0x8005 
    /*000089e8*/ MOVT        R0, #40967                  @ 0xa007 
    /*000089ec*/ B           VPSS_EnableUserFrameRateCtrl_x898c
    /*000089f0*/ ANDEQ       R0, R0, R4, ASR R6 
FUNC_END VPSS_EnableUserFrameRateCtrl


FUNC_BEGIN VPSS_DisableUserFrameRateCtrl
    /*000089f4*/ CMP         R0, #15 
    /*000089f8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000089fc*/ MOV         R7, R0 
    /*00008a00*/ SUB         SP, SP, #12 
    /*00008a04*/ BHI         VPSS_DisableUserFrameRateCtrl_x8a54
    VPSS_DisableUserFrameRateCtrl_x8a08:
    /*00008a08*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00008a0c*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00008a10*/ MOV         R4, #92                     @ 0x5c 
    /*00008a14*/ MLA         R4, R4, R7, R6 
    /*00008a18*/ ADD         R4, R4, #108                @ 0x6c 
    /*00008a1c*/ MOV         R0, R4 
    /*00008a20*/ BL          0x0000000000008A20          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008a24*/ SUBS        R5, R0, #0 
    /*00008a28*/ BNE         VPSS_DisableUserFrameRateCtrl_x8a6c
    /*00008a2c*/ LDR         R3, [R6, R7, LSL #2] 
    /*00008a30*/ CMP         R3, #0 
    /*00008a34*/ BEQ         VPSS_DisableUserFrameRateCtrl_x8a78
    /*00008a38*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00008a3c*/ MOV         R0, R4 
    /*00008a40*/ STR         R5, [R3, #3692]             @ 0xe6c 
    /*00008a44*/ BL          0x0000000000008A44          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008a48*/ MOV         R0, R5 
    VPSS_DisableUserFrameRateCtrl_x8a4c:
    /*00008a4c*/ ADD         SP, SP, #12 
    /*00008a50*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_DisableUserFrameRateCtrl_x8a54:
    /*00008a54*/ BL          0x00000000000001B0 
    /*00008a58*/ CMP         R0, #0 
    /*00008a5c*/ BEQ         VPSS_DisableUserFrameRateCtrl_x8a08
    /*00008a60*/ MOVW        R0, #32769                  @ 0x8001 
    /*00008a64*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008a68*/ B           VPSS_DisableUserFrameRateCtrl_x8a4c
    VPSS_DisableUserFrameRateCtrl_x8a6c:
    /*00008a6c*/ MOV         R0, #65024                  @ 0xfe00 
    /*00008a70*/ MOVT        R0, #65535                  @ 0xffff 
    /*00008a74*/ B           VPSS_DisableUserFrameRateCtrl_x8a4c
    VPSS_DisableUserFrameRateCtrl_x8a78:
    /*00008a78*/ MOVW        R3, #6310                   @ 0x18a6 
    /*00008a7c*/ MOV         R1, #7 
    /*00008a80*/ STR         R3, [SP] 
    /*00008a84*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00008a88*/ LDR         R3, [PC, #32]               @ 0x0000000000008ab0 
    /*00008a8c*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00008a90*/ STR         R7, [SP, #4] 
    /*00008a94*/ MOV         R0, #3 
    /*00008a98*/ BL          0x0000000000008A98          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008a9c*/ MOV         R0, R4 
    /*00008aa0*/ BL          0x0000000000008AA0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008aa4*/ MOVW        R0, #32773                  @ 0x8005 
    /*00008aa8*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008aac*/ B           VPSS_DisableUserFrameRateCtrl_x8a4c
    /*00008ab0*/ ANDEQ       R0, R0, R4, ROR R6 
FUNC_END VPSS_DisableUserFrameRateCtrl


FUNC_BEGIN VPSS_SetChnAlign
    /*00008ab4*/ CMP         R0, #15 
    /*00008ab8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00008abc*/ MOV         R7, R0 
    /*00008ac0*/ SUB         SP, SP, #8 
    /*00008ac4*/ MOV         R4, R1 
    /*00008ac8*/ MOV         R8, R2 
    /*00008acc*/ BHI         VPSS_SetChnAlign_x8b34
    VPSS_SetChnAlign_x8ad0:
    /*00008ad0*/ CMP         R4, #10 
    /*00008ad4*/ BHI         VPSS_SetChnAlign_x8b4c
    VPSS_SetChnAlign_x8ad8:
    /*00008ad8*/ CMP         R8, #1024                   @ 0x400 
    /*00008adc*/ BHI         VPSS_SetChnAlign_x8b64
    /*00008ae0*/ LDR         R3, [PC, #240]              @ 0x0000000000008bd8 
    /*00008ae4*/ MOV         R5, #92                     @ 0x5c 
    /*00008ae8*/ MLA         R5, R5, R7, R3 
    /*00008aec*/ ADD         R5, R5, #44                 @ 0x2c 
    /*00008af0*/ MOV         R0, R5 
    /*00008af4*/ BL          0x0000000000008AF4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008af8*/ SUBS        R6, R0, #0 
    /*00008afc*/ BNE         VPSS_SetChnAlign_x8b94
    /*00008b00*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00008b04*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00008b08*/ LDR         R3, [R3, R7, LSL #2] 
    /*00008b0c*/ CMP         R3, #0 
    /*00008b10*/ BEQ         VPSS_SetChnAlign_x8ba0
    /*00008b14*/ ADD         R1, R4, #6848               @ 0x1ac0 
    /*00008b18*/ MOV         R0, R5 
    /*00008b1c*/ ADD         R1, R1, #62                 @ 0x3e 
    /*00008b20*/ STR         R8, [R3, R1, LSL #2] 
    /*00008b24*/ BL          0x0000000000008B24          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008b28*/ MOV         R0, R6 
    VPSS_SetChnAlign_x8b2c:
    /*00008b2c*/ ADD         SP, SP, #8 
    /*00008b30*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_SetChnAlign_x8b34:
    /*00008b34*/ BL          0x00000000000001B0 
    /*00008b38*/ CMP         R0, #0 
    /*00008b3c*/ BEQ         VPSS_SetChnAlign_x8ad0
    /*00008b40*/ MOVW        R0, #32769                  @ 0x8001 
    /*00008b44*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008b48*/ B           VPSS_SetChnAlign_x8b2c
    VPSS_SetChnAlign_x8b4c:
    /*00008b4c*/ BL          0x00000000000001EC 
    /*00008b50*/ CMP         R0, #0 
    /*00008b54*/ BEQ         VPSS_SetChnAlign_x8ad8
    /*00008b58*/ MOVW        R0, #32770                  @ 0x8002 
    /*00008b5c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008b60*/ B           VPSS_SetChnAlign_x8b2c
    VPSS_SetChnAlign_x8b64:
    /*00008b64*/ MOVW        R3, #6513                   @ 0x1971 
    /*00008b68*/ STR         R8, [SP, #4] 
    /*00008b6c*/ STR         R3, [SP] 
    /*00008b70*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a50] 
    /*00008b74*/ LDR         R3, [PC, #96]               @ 0x0000000000008bdc 
    /*00008b78*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a50] 
    /*00008b7c*/ MOV         R1, #7 
    /*00008b80*/ MOV         R0, #3 
    /*00008b84*/ BL          0x0000000000008B84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008b88*/ MOVW        R0, #32771                  @ 0x8003 
    /*00008b8c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008b90*/ B           VPSS_SetChnAlign_x8b2c
    VPSS_SetChnAlign_x8b94:
    /*00008b94*/ MOV         R0, #65024                  @ 0xfe00 
    /*00008b98*/ MOVT        R0, #65535                  @ 0xffff 
    /*00008b9c*/ B           VPSS_SetChnAlign_x8b2c
    VPSS_SetChnAlign_x8ba0:
    /*00008ba0*/ MOVW        R3, #6522                   @ 0x197a 
    /*00008ba4*/ MOV         R1, #7 
    /*00008ba8*/ STR         R3, [SP] 
    /*00008bac*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00008bb0*/ LDR         R3, [PC, #36]               @ 0x0000000000008bdc 
    /*00008bb4*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00008bb8*/ STR         R7, [SP, #4] 
    /*00008bbc*/ MOV         R0, #3 
    /*00008bc0*/ BL          0x0000000000008BC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008bc4*/ MOV         R0, R5 
    /*00008bc8*/ BL          0x0000000000008BC8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008bcc*/ MOVW        R0, #32773                  @ 0x8005 
    /*00008bd0*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008bd4*/ B           VPSS_SetChnAlign_x8b2c
    /*00008bd8*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00008bdc*/ MULEQ       R0, R4, R6 
FUNC_END VPSS_SetChnAlign


FUNC_BEGIN VPSS_GetChnAlign
    /*00008be0*/ CMP         R0, #15 
    /*00008be4*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00008be8*/ MOV         R7, R0 
    /*00008bec*/ SUB         SP, SP, #8 
    /*00008bf0*/ MOV         R6, R1 
    /*00008bf4*/ MOV         R8, R2 
    /*00008bf8*/ BHI         VPSS_GetChnAlign_x8c64
    VPSS_GetChnAlign_x8bfc:
    /*00008bfc*/ CMP         R6, #10 
    /*00008c00*/ BHI         VPSS_GetChnAlign_x8c7c
    VPSS_GetChnAlign_x8c04:
    /*00008c04*/ CMP         R8, #0 
    /*00008c08*/ BEQ         VPSS_GetChnAlign_x8c94
    VPSS_GetChnAlign_x8c0c:
    /*00008c0c*/ LDR         R3, [PC, #220]              @ 0x0000000000008cf0 
    /*00008c10*/ MOV         R4, #92                     @ 0x5c 
    /*00008c14*/ MLA         R4, R4, R7, R3 
    /*00008c18*/ ADD         R4, R4, #44                 @ 0x2c 
    /*00008c1c*/ MOV         R0, R4 
    /*00008c20*/ BL          0x0000000000008C20          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008c24*/ SUBS        R5, R0, #0 
    /*00008c28*/ BNE         VPSS_GetChnAlign_x8cac
    /*00008c2c*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00008c30*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00008c34*/ LDR         R3, [R3, R7, LSL #2] 
    /*00008c38*/ CMP         R3, #0 
    /*00008c3c*/ BEQ         VPSS_GetChnAlign_x8cb8
    /*00008c40*/ ADD         R1, R6, #6848               @ 0x1ac0 
    /*00008c44*/ MOV         R0, R4 
    /*00008c48*/ ADD         R1, R1, #62                 @ 0x3e 
    /*00008c4c*/ LDR         R3, [R3, R1, LSL #2] 
    /*00008c50*/ STR         R3, [R8] 
    /*00008c54*/ BL          0x0000000000008C54          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008c58*/ MOV         R0, R5 
    VPSS_GetChnAlign_x8c5c:
    /*00008c5c*/ ADD         SP, SP, #8 
    /*00008c60*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_GetChnAlign_x8c64:
    /*00008c64*/ BL          0x00000000000001B0 
    /*00008c68*/ CMP         R0, #0 
    /*00008c6c*/ BEQ         VPSS_GetChnAlign_x8bfc
    /*00008c70*/ MOVW        R0, #32769                  @ 0x8001 
    /*00008c74*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008c78*/ B           VPSS_GetChnAlign_x8c5c
    VPSS_GetChnAlign_x8c7c:
    /*00008c7c*/ BL          0x00000000000001EC 
    /*00008c80*/ CMP         R0, #0 
    /*00008c84*/ BEQ         VPSS_GetChnAlign_x8c04
    /*00008c88*/ MOVW        R0, #32770                  @ 0x8002 
    /*00008c8c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008c90*/ B           VPSS_GetChnAlign_x8c5c
    VPSS_GetChnAlign_x8c94:
    /*00008c94*/ BL          0x0000000000000174 
    /*00008c98*/ CMP         R0, #0 
    /*00008c9c*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*00008ca0*/ MOVTNE      R0, #40967                  @ 0xa007 
    /*00008ca4*/ BNE         VPSS_GetChnAlign_x8c5c
    /*00008ca8*/ B           VPSS_GetChnAlign_x8c0c
    VPSS_GetChnAlign_x8cac:
    /*00008cac*/ MOV         R0, #65024                  @ 0xfe00 
    /*00008cb0*/ MOVT        R0, #65535                  @ 0xffff 
    /*00008cb4*/ B           VPSS_GetChnAlign_x8c5c
    VPSS_GetChnAlign_x8cb8:
    /*00008cb8*/ MOVW        R3, #6551                   @ 0x1997 
    /*00008cbc*/ MOV         R1, #7 
    /*00008cc0*/ STR         R3, [SP] 
    /*00008cc4*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00008cc8*/ LDR         R3, [PC, #36]               @ 0x0000000000008cf4 
    /*00008ccc*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00008cd0*/ STR         R7, [SP, #4] 
    /*00008cd4*/ MOV         R0, #3 
    /*00008cd8*/ BL          0x0000000000008CD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008cdc*/ MOV         R0, R4 
    /*00008ce0*/ BL          0x0000000000008CE0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008ce4*/ MOVW        R0, #32773                  @ 0x8005 
    /*00008ce8*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008cec*/ B           VPSS_GetChnAlign_x8c5c
    /*00008cf0*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00008cf4*/ ANDEQ       R0, R0, R8, LSR #13 
FUNC_END VPSS_GetChnAlign


FUNC_BEGIN VpssFrmRateCtl
    /*00008cf8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00008cfc*/ LDR         R4, [R0, #2596]             @ 0xa24 
    /*00008d00*/ LDR         R6, [R0, #2600]             @ 0xa28 
    /*00008d04*/ CMN         R6, #1 
    /*00008d08*/ CMNEQ       R4, #1 
    /*00008d0c*/ MOVEQ       R3, #1 
    /*00008d10*/ MOVNE       R3, #0 
    /*00008d14*/ CMP         R4, R6 
    /*00008d18*/ ORREQ       R3, R3, #1 
    /*00008d1c*/ CMP         R3, #0 
    /*00008d20*/ BNE         VpssFrmRateCtl_x8dd4
    /*00008d24*/ LDR         R3, [R0, #2608]             @ 0xa30 
    /*00008d28*/ MOV         R5, R0 
    /*00008d2c*/ MOV         R8, R1 
    /*00008d30*/ CMP         R3, #1 
    /*00008d34*/ ASREQ       R0, R1, #1 
    /*00008d38*/ BEQ         VpssFrmRateCtl_x8d54
    /*00008d3c*/ CMP         R1, R3 
    /*00008d40*/ BCC         VpssFrmRateCtl_x8dc4
    /*00008d44*/ SUBS        R7, R1, R3 
    /*00008d48*/ BMI         VpssFrmRateCtl_x8ddc
    VpssFrmRateCtl_x8d4c:
    /*00008d4c*/ ASR         R0, R7, #1 
    /*00008d50*/ SUB         R0, R0, #1 
    VpssFrmRateCtl_x8d54:
    /*00008d54*/ CMP         R0, #960                    @ 0x3c0 
    /*00008d58*/ STR         R8, [R5, #2608]             @ 0xa30 
    /*00008d5c*/ LDR         R3, [R5, #2604]             @ 0xa2c 
    /*00008d60*/ MOVGE       R0, #960                    @ 0x3c0 
    /*00008d64*/ CMP         R0, #0 
    /*00008d68*/ BLE         VpssFrmRateCtl_x8da4
    /*00008d6c*/ MOV         R1, #0 
    /*00008d70*/ MOV         IP, R1 
    VpssFrmRateCtl_x8d74:
    /*00008d74*/ ADD         R2, R3, R6 
    /*00008d78*/ ADD         R1, R1, #1 
    /*00008d7c*/ CMP         R4, R2 
    /*00008d80*/ SUB         R3, R2, R4 
    /*00008d84*/ ADDLS       IP, IP, #1 
    /*00008d88*/ MOVHI       R3, R2 
    /*00008d8c*/ CMP         R1, R0 
    /*00008d90*/ STR         R3, [R5, #2604]             @ 0xa2c 
    /*00008d94*/ BNE         VpssFrmRateCtl_x8d74
    /*00008d98*/ CMP         IP, #0 
    /*00008d9c*/ ADDGT       R3, R3, R4 
    /*00008da0*/ STRGT       R3, [R5, #2604]             @ 0xa2c 
    VpssFrmRateCtl_x8da4:
    /*00008da4*/ ADD         R3, R3, R6 
    /*00008da8*/ CMP         R4, R3 
    /*00008dac*/ STRHI       R3, [R5, #2604]             @ 0xa2c 
    /*00008db0*/ SUBLS       R3, R3, R4 
    /*00008db4*/ STRLS       R3, [R5, #2604]             @ 0xa2c 
    /*00008db8*/ MOVHI       R0, #0 
    /*00008dbc*/ MOVLS       R0, #1 
    /*00008dc0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssFrmRateCtl_x8dc4:
    /*00008dc4*/ SUB         R0, R1, R3 
    /*00008dc8*/ ASR         R0, R0, #1 
    /*00008dcc*/ SUB         R0, R0, #1 
    /*00008dd0*/ B           VpssFrmRateCtl_x8d54
    VpssFrmRateCtl_x8dd4:
    /*00008dd4*/ MOV         R0, #1 
    /*00008dd8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssFrmRateCtl_x8ddc:
    /*00008ddc*/ MOVW        R3, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a84] 
    /*00008de0*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*00008de4*/ MOVT        R3, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a84] 
    /*00008de8*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*00008dec*/ MOVW        R2, #6605                   @ 0x19cd 
    /*00008df0*/ LDR         R1, [PC, #4]                @ 0x0000000000008dfc 
    /*00008df4*/ BL          0x0000000000008DF4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008df8*/ B           VpssFrmRateCtl_x8d4c
    /*00008dfc*/ @           <UNDEFINED> instruction: 0x000006bc 
FUNC_END VpssFrmRateCtl


FUNC_BEGIN VpssNormFrmRateCtl
    /*00008e00*/ LDR         R1, [R0, #2596]             @ 0xa24 
    /*00008e04*/ LDR         R2, [R0, #2600]             @ 0xa28 
    /*00008e08*/ CMN         R2, #1 
    /*00008e0c*/ CMNEQ       R1, #1 
    /*00008e10*/ MOVEQ       R3, #1 
    /*00008e14*/ MOVNE       R3, #0 
    /*00008e18*/ CMP         R1, R2 
    /*00008e1c*/ ORREQ       R3, R3, #1 
    /*00008e20*/ CMP         R3, #0 
    /*00008e24*/ MOVNE       R3, #1 
    /*00008e28*/ BNE         VpssNormFrmRateCtl_x8e44
    /*00008e2c*/ LDR         IP, [R0, #2604]             @ 0xa2c 
    /*00008e30*/ ADD         R2, R2, IP 
    /*00008e34*/ CMP         R1, R2 
    /*00008e38*/ SUBLS       R2, R2, R1 
    /*00008e3c*/ STR         R2, [R0, #2604]             @ 0xa2c 
    /*00008e40*/ MOVLS       R3, #1 
    VpssNormFrmRateCtl_x8e44:
    /*00008e44*/ MOV         R0, R3 
    /*00008e48*/ BX          LR 
FUNC_END VpssNormFrmRateCtl


FUNC_BEGIN VPSS_CheckDynamicRange
    /*00008e4c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00008e50*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00008e54*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00008e58*/ SUB         SP, SP, #12 
    /*00008e5c*/ LDR         IP, [R3, R0, LSL #2] 
    /*00008e60*/ CMP         IP, #0 
    /*00008e64*/ STREQ       R0, [SP, #4] 
    /*00008e68*/ MOVWEQ      R3, #6686                   @ 0x1a1e 
    /*00008e6c*/ BEQ         VPSS_CheckDynamicRange_x8f48
    /*00008e70*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00008e74*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00008e78*/ LDR         R3, [R3, R0, LSL #2] 
    /*00008e7c*/ CMP         R3, #0 
    /*00008e80*/ BEQ         VPSS_CheckDynamicRange_x8f40
    /*00008e84*/ CMP         R2, #2 
    /*00008e88*/ BEQ         VPSS_CheckDynamicRange_x8ec0
    /*00008e8c*/ CMP         R1, #2 
    /*00008e90*/ CMPNE       R1, #5 
    /*00008e94*/ MOVNE       R1, #1 
    /*00008e98*/ MOVEQ       R1, #0 
    /*00008e9c*/ BEQ         VPSS_CheckDynamicRange_x8eb4
    /*00008ea0*/ CMP         R2, #5 
    /*00008ea4*/ BEQ         VPSS_CheckDynamicRange_x8f14
    VPSS_CheckDynamicRange_x8ea8:
    /*00008ea8*/ MOV         R0, #0 
    VPSS_CheckDynamicRange_x8eac:
    /*00008eac*/ ADD         SP, SP, #12 
    /*00008eb0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_CheckDynamicRange_x8eb4:
    /*00008eb4*/ MOV         R0, R1 
    /*00008eb8*/ ADD         SP, SP, #12 
    /*00008ebc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_CheckDynamicRange_x8ec0:
    /*00008ec0*/ ADD         R2, IP, #28416              @ 0x6f00 
    /*00008ec4*/ MOV         IP, R2 
    /*00008ec8*/ ADD         R2, R2, #124                @ 0x7c 
    /*00008ecc*/ ADD         IP, IP, #136                @ 0x88 
    /*00008ed0*/ LDR         LR, [R2], #4 
    /*00008ed4*/ CMP         LR, #1 
    /*00008ed8*/ BEQ         VPSS_CheckDynamicRange_x8ef4
    VPSS_CheckDynamicRange_x8edc:
    /*00008edc*/ CMP         R2, IP 
    /*00008ee0*/ ADD         R3, R3, #72                 @ 0x48 
    /*00008ee4*/ BEQ         VPSS_CheckDynamicRange_x8ea8
    /*00008ee8*/ LDR         LR, [R2], #4 
    /*00008eec*/ CMP         LR, #1 
    /*00008ef0*/ BNE         VPSS_CheckDynamicRange_x8edc
    VPSS_CheckDynamicRange_x8ef4:
    /*00008ef4*/ LDR         LR, [R3, #64]               @ 0x40 
    /*00008ef8*/ CMP         LR, #2 
    /*00008efc*/ BEQ         VPSS_CheckDynamicRange_x8edc
    /*00008f00*/ CMP         R1, #2 
    /*00008f04*/ CMPNE       R1, #5 
    /*00008f08*/ MOVNE       R1, #1 
    /*00008f0c*/ MOVEQ       R1, #0 
    /*00008f10*/ BEQ         VPSS_CheckDynamicRange_x8eb4
    VPSS_CheckDynamicRange_x8f14:
    /*00008f14*/ STR         R0, [SP, #4] 
    /*00008f18*/ MOVW        R3, #6717                   @ 0x1a3d 
    /*00008f1c*/ MOVW        R2, #0                      @ .LC119 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a94] 
    /*00008f20*/ STR         R3, [SP] 
    /*00008f24*/ MOVT        R2, #0                      @ .LC119 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a94] 
    /*00008f28*/ LDR         R3, [PC, #64]               @ 0x0000000000008f70 
    /*00008f2c*/ MOV         R1, #7 
    /*00008f30*/ MOV         R0, #3 
    /*00008f34*/ BL          0x0000000000008F34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008f38*/ MVN         R0, #0 
    /*00008f3c*/ B           VPSS_CheckDynamicRange_x8eac
    VPSS_CheckDynamicRange_x8f40:
    /*00008f40*/ MOVW        R3, #6694                   @ 0x1a26 
    /*00008f44*/ STR         R0, [SP, #4] 
    VPSS_CheckDynamicRange_x8f48:
    /*00008f48*/ STR         R3, [SP] 
    /*00008f4c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00008f50*/ LDR         R3, [PC, #24]               @ 0x0000000000008f70 
    /*00008f54*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00008f58*/ MOV         R1, #7 
    /*00008f5c*/ MOV         R0, #3 
    /*00008f60*/ BL          0x0000000000008F60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008f64*/ MOVW        R0, #32773                  @ 0x8005 
    /*00008f68*/ MOVT        R0, #40967                  @ 0xa007 
    /*00008f6c*/ B           VPSS_CheckDynamicRange_x8eac
    /*00008f70*/ ANDEQ       R0, R0, IP, ASR #13 
FUNC_END VPSS_CheckDynamicRange


FUNC_BEGIN VPSS_SendPic
    /*00008f74*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00008f78*/ SUB         SP, SP, #36                 @ 0x24 
    /*00008f7c*/ MOV         R6, R2 
    /*00008f80*/ MOV         R5, R0 
    /*00008f84*/ LDR         R2, [SP, #72]               @ 0x48 
    /*00008f88*/ MOV         R8, R1 
    /*00008f8c*/ MOV         R9, R3 
    /*00008f90*/ CMP         R2, #0 
    /*00008f94*/ BEQ         VPSS_SendPic_x9180
    VPSS_SendPic_x8f98:
    /*00008f98*/ CMP         R5, #15 
    /*00008f9c*/ BHI         VPSS_SendPic_x90d0
    VPSS_SendPic_x8fa0:
    /*00008fa0*/ MOVW        R3, #0                      @ g_u32VpssState [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00008fa4*/ MOVT        R3, #0                      @ g_u32VpssState [R_ARM_MOVT_ABS: .data+0x0] 
    /*00008fa8*/ LDR         R3, [R3] 
    /*00008fac*/ CMP         R3, #0 
    /*00008fb0*/ BNE         VPSS_SendPic_x9098
    /*00008fb4*/ MOV         R0, #2 
    /*00008fb8*/ BL          0x0000000000008FB8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008fbc*/ CMP         R0, #0 
    /*00008fc0*/ MOVWEQ      R3, #6753                   @ 0x1a61 
    /*00008fc4*/ BEQ         VPSS_SendPic_x912c
    /*00008fc8*/ MOV         R0, #2 
    /*00008fcc*/ BL          0x0000000000008FCC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008fd0*/ LDR         R3, [R0, #48]               @ 0x30 
    /*00008fd4*/ CMP         R3, #0 
    /*00008fd8*/ BEQ         VPSS_SendPic_x9128
    /*00008fdc*/ MOV         R3, #92                     @ 0x5c 
    /*00008fe0*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00008fe4*/ MUL         FP, R3, R5 
    /*00008fe8*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00008fec*/ ADD         R1, SP, #28 
    /*00008ff0*/ ADD         R7, R4, FP 
    /*00008ff4*/ ADD         R7, R7, #112                @ 0x70 
    /*00008ff8*/ MOV         R0, R7 
    /*00008ffc*/ BL          0x0000000000008FFC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009000*/ LDR         SL, [R4, R5, LSL #2] 
    /*00009004*/ CMP         SL, #0 
    /*00009008*/ STREQ       R5, [SP, #4] 
    /*0000900c*/ MOVWEQ      R3, #6772                   @ 0x1a74 
    /*00009010*/ BEQ         VPSS_SendPic_x91b8
    /*00009014*/ MOVW        R2, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00009018*/ MOVT        R2, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0000901c*/ LDR         R3, [R2, R5, LSL #2] 
    /*00009020*/ CMP         R3, #0 
    /*00009024*/ STR         R3, [SP, #16] 
    /*00009028*/ BEQ         VPSS_SendPic_x91b0
    /*0000902c*/ ADD         R2, R4, R5, LSL #2 
    /*00009030*/ LDR         R2, [R2, #1540]             @ 0x604 
    /*00009034*/ CMP         R2, #0 
    /*00009038*/ BNE         VPSS_SendPic_x9150
    /*0000903c*/ LDR         R2, [SL, #2592]             @ 0xa20 
    /*00009040*/ CMP         R2, R8 
    /*00009044*/ MOVGT       R2, #0 
    /*00009048*/ MOVLE       R2, #1 
    /*0000904c*/ ORRS        R3, R2, R8, LSR #31 
    /*00009050*/ BNE         VPSS_SendPic_x90e8
    /*00009054*/ ADD         R4, R4, FP 
    /*00009058*/ LDR         R3, [R4, #64]               @ 0x40 
    /*0000905c*/ CMP         R3, #1 
    /*00009060*/ BEQ         VPSS_SendPic_x91e0
    /*00009064*/ LDR         R3, [SL, #2056]             @ 0x808 
    /*00009068*/ CMP         R3, #0 
    /*0000906c*/ BNE         VPSS_SendPic_x9198
    /*00009070*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1bd8] 
    /*00009074*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1bd8] 
    /*00009078*/ MOVW        R3, #6812                   @ 0x1a9c 
    /*0000907c*/ STR         R5, [SP, #4] 
    /*00009080*/ STR         R3, [SP] 
    VPSS_SendPic_x9084:
    /*00009084*/ LDR         R3, [PC, #1608]             @ 0x00000000000096d4 
    /*00009088*/ MOV         R1, #7 
    /*0000908c*/ MOV         R0, #3 
    /*00009090*/ BL          0x0000000000009090          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009094*/ B           VPSS_SendPic_x91a8
    VPSS_SendPic_x9098:
    /*00009098*/ MOVW        R3, #6746                   @ 0x1a5a 
    /*0000909c*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b2c] 
    /*000090a0*/ STR         R3, [SP] 
    /*000090a4*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b2c] 
    /*000090a8*/ LDR         R3, [PC, #1572]             @ 0x00000000000096d4 
    /*000090ac*/ MOV         R1, #7 
    /*000090b0*/ MOV         R0, #6 
    /*000090b4*/ MVN         R4, #0 
    /*000090b8*/ BL          0x00000000000090B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_SendPic_x90bc:
    /*000090bc*/ CMP         R6, #0 
    /*000090c0*/ MOVEQ       R4, #0 
    VPSS_SendPic_x90c4:
    /*000090c4*/ MOV         R0, R4 
    /*000090c8*/ ADD         SP, SP, #36                 @ 0x24 
    /*000090cc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_SendPic_x90d0:
    /*000090d0*/ BL          0x00000000000001B0 
    /*000090d4*/ CMP         R0, #0 
    /*000090d8*/ BEQ         VPSS_SendPic_x8fa0
    /*000090dc*/ MOVW        R4, #32769                  @ 0x8001 
    /*000090e0*/ MOVT        R4, #40967                  @ 0xa007 
    /*000090e4*/ B           VPSS_SendPic_x90c4
    VPSS_SendPic_x90e8:
    /*000090e8*/ MOVW        R3, #6796                   @ 0x1a8c 
    /*000090ec*/ STR         R8, [SP, #8] 
    /*000090f0*/ STR         R3, [SP] 
    /*000090f4*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b98] 
    /*000090f8*/ STR         R5, [SP, #4] 
    /*000090fc*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b98] 
    /*00009100*/ LDR         R3, [PC, #1484]             @ 0x00000000000096d4 
    /*00009104*/ MOV         R1, #7 
    /*00009108*/ MOV         R0, #3 
    /*0000910c*/ MOVW        R4, #32773                  @ 0x8005 
    /*00009110*/ BL          0x0000000000009110          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009114*/ MOVT        R4, #40967                  @ 0xa007 
    VPSS_SendPic_x9118:
    /*00009118*/ ADD         R1, SP, #28 
    /*0000911c*/ MOV         R0, R7 
    /*00009120*/ BL          0x0000000000009120          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009124*/ B           VPSS_SendPic_x90bc
    VPSS_SendPic_x9128:
    /*00009128*/ MOVW        R3, #6760                   @ 0x1a68 
    VPSS_SendPic_x912c:
    /*0000912c*/ STR         R3, [SP] 
    /*00009130*/ MOVW        R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x928] 
    /*00009134*/ LDR         R3, [PC, #1432]             @ 0x00000000000096d4 
    /*00009138*/ MOVT        R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x928] 
    /*0000913c*/ MOV         R1, #7 
    /*00009140*/ MOV         R0, #3 
    /*00009144*/ MVN         R4, #0 
    /*00009148*/ BL          0x0000000000009148          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000914c*/ B           VPSS_SendPic_x90bc
    VPSS_SendPic_x9150:
    /*00009150*/ MOVW        R3, #6788                   @ 0x1a84 
    /*00009154*/ STR         R5, [SP, #4] 
    /*00009158*/ STR         R3, [SP] 
    /*0000915c*/ MOVW        R2, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b58] 
    /*00009160*/ LDR         R3, [PC, #1388]             @ 0x00000000000096d4 
    /*00009164*/ MOVT        R2, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b58] 
    /*00009168*/ MOV         R1, #7 
    /*0000916c*/ MOV         R0, #3 
    /*00009170*/ MOVW        R4, #32777                  @ 0x8009 
    /*00009174*/ BL          0x0000000000009174          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009178*/ MOVT        R4, #40967                  @ 0xa007 
    /*0000917c*/ B           VPSS_SendPic_x9118
    VPSS_SendPic_x9180:
    /*00009180*/ BL          0x0000000000000174 
    /*00009184*/ CMP         R0, #0 
    /*00009188*/ MOVWNE      R4, #32774                  @ 0x8006 
    /*0000918c*/ MOVTNE      R4, #40967                  @ 0xa007 
    /*00009190*/ BNE         VPSS_SendPic_x90c4
    /*00009194*/ B           VPSS_SendPic_x8f98
    VPSS_SendPic_x9198:
    /*00009198*/ MOV         R0, R5 
    /*0000919c*/ BL          0x000000000000919C          @ VpssCheckBindInfo [R_ARM_CALL: .text+0x698] 
    /*000091a0*/ CMP         R0, #0 
    /*000091a4*/ BEQ         VPSS_SendPic_x91f8
    VPSS_SendPic_x91a8:
    /*000091a8*/ MVN         R4, #0 
    /*000091ac*/ B           VPSS_SendPic_x9118
    VPSS_SendPic_x91b0:
    /*000091b0*/ MOVW        R3, #6781                   @ 0x1a7d 
    /*000091b4*/ STR         R5, [SP, #4] 
    VPSS_SendPic_x91b8:
    /*000091b8*/ STR         R3, [SP] 
    /*000091bc*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*000091c0*/ LDR         R3, [PC, #1292]             @ 0x00000000000096d4 
    /*000091c4*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*000091c8*/ MOV         R1, #7 
    /*000091cc*/ MOV         R0, #3 
    /*000091d0*/ MOVW        R4, #32773                  @ 0x8005 
    /*000091d4*/ BL          0x00000000000091D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000091d8*/ MOVT        R4, #40967                  @ 0xa007 
    /*000091dc*/ B           VPSS_SendPic_x9118
    VPSS_SendPic_x91e0:
    /*000091e0*/ MOVW        R3, #6804                   @ 0x1a94 
    /*000091e4*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d0] 
    /*000091e8*/ STR         R5, [SP, #4] 
    /*000091ec*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d0] 
    /*000091f0*/ STR         R3, [SP] 
    /*000091f4*/ B           VPSS_SendPic_x9084
    VPSS_SendPic_x91f8:
    /*000091f8*/ LDR         R3, [SP, #72]               @ 0x48 
    /*000091fc*/ MOV         R0, R5 
    /*00009200*/ LDR         R2, [R3, #24] 
    /*00009204*/ LDR         R3, [SP, #16] 
    /*00009208*/ LDR         R1, [R3, #16] 
    /*0000920c*/ BL          0x000000000000920C          @ VPSS_CheckDynamicRange [R_ARM_CALL: .text+0x8e4c] 
    /*00009210*/ SUBS        R4, R0, #0 
    /*00009214*/ BNE         VPSS_SendPic_x9118
    /*00009218*/ CMP         R9, #0 
    /*0000921c*/ BEQ         VPSS_SendPic_x9268
    /*00009220*/ LDR         R3, [SP, #16] 
    /*00009224*/ LDR         R3, [R3, #28] 
    /*00009228*/ CMP         R3, #1 
    /*0000922c*/ MOVNE       R3, R4 
    /*00009230*/ BEQ         VPSS_SendPic_x938c
    VPSS_SendPic_x9234:
    /*00009234*/ CMP         R9, #8 
    /*00009238*/ BLS         VPSS_SendPic_x935c
    VPSS_SendPic_x923c:
    /*0000923c*/ MOVW        R3, #6876                   @ 0x1adc 
    /*00009240*/ STR         R9, [SP, #8] 
    /*00009244*/ STR         R3, [SP] 
    /*00009248*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c10] 
    /*0000924c*/ STR         R5, [SP, #4] 
    /*00009250*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c10] 
    /*00009254*/ LDR         R3, [PC, #1144]             @ 0x00000000000096d4 
    /*00009258*/ MOV         R1, #7 
    /*0000925c*/ MOV         R0, #3 
    /*00009260*/ BL          0x0000000000009260          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009264*/ B           VPSS_SendPic_x9118
    VPSS_SendPic_x9268:
    /*00009268*/ LDR         R0, [SP, #72]               @ 0x48 
    /*0000926c*/ BL          0x000000000000926C          @ VPSS_DRV_IsTunlFrame [R_ARM_CALL: .text+0x1dadc] 
    /*00009270*/ LDR         R3, [SP, #16] 
    /*00009274*/ LDR         R2, [R3, #28] 
    /*00009278*/ ADDS        R3, R0, #0 
    /*0000927c*/ MOVNE       R3, #1 
    /*00009280*/ CMP         R2, #1 
    /*00009284*/ BEQ         VPSS_SendPic_x934c
    VPSS_SendPic_x9288:
    /*00009288*/ MOV         R2, #16 
    /*0000928c*/ STR         R2, [SP, #16] 
    VPSS_SendPic_x9290:
    /*00009290*/ CMP         R6, #0 
    /*00009294*/ MOV         R2, R8 
    /*00009298*/ MOV         R1, R5 
    /*0000929c*/ LDR         R0, [SP, #72]               @ 0x48 
    /*000092a0*/ MOVNE       R4, #6 
    /*000092a4*/ MOVEQ       R4, #3 
    /*000092a8*/ STR         R3, [SP, #20] 
    /*000092ac*/ BL          0x00000000000092AC          @ VPSS_DRV_CheckImageAttr [R_ARM_CALL: .text+0x1dbe0] 
    /*000092b0*/ CMP         R0, #0 
    /*000092b4*/ MOVNE       R4, #0 
    /*000092b8*/ BNE         VPSS_SendPic_x9118
    /*000092bc*/ LDR         R3, [SP, #20] 
    /*000092c0*/ CMP         R3, #1 
    /*000092c4*/ BEQ         VPSS_SendPic_x9598
    /*000092c8*/ CMP         R9, #0 
    /*000092cc*/ BEQ         VPSS_SendPic_x93e0
    /*000092d0*/ LDR         R2, [SL, #2596]             @ 0xa24 
    /*000092d4*/ LDR         R3, [SL, #2600]             @ 0xa28 
    /*000092d8*/ CMN         R3, #1 
    /*000092dc*/ CMNEQ       R2, #1 
    /*000092e0*/ MOVEQ       R1, #1 
    /*000092e4*/ MOVNE       R1, #0 
    /*000092e8*/ CMP         R2, R3 
    /*000092ec*/ ORREQ       R1, R1, #1 
    /*000092f0*/ CMP         R1, #0 
    /*000092f4*/ BNE         VPSS_SendPic_x93f8
    /*000092f8*/ LDR         R1, [SL, #2604]             @ 0xa2c 
    /*000092fc*/ ADD         R3, R3, R1 
    /*00009300*/ CMP         R2, R3 
    /*00009304*/ STRHI       R3, [SL, #2604]             @ 0xa2c 
    /*00009308*/ SUBLS       R3, R3, R2 
    /*0000930c*/ STRLS       R3, [SL, #2604]             @ 0xa2c 
    /*00009310*/ BLS         VPSS_SendPic_x93f8
    VPSS_SendPic_x9314:
    /*00009314*/ LDR         R3, [SP, #72]               @ 0x48 
    /*00009318*/ MOVW        R1, #6945                   @ 0x1b21 
    /*0000931c*/ MOVW        R2, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c4c] 
    /*00009320*/ MOV         R0, #6 
    /*00009324*/ MOVT        R2, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c4c] 
    /*00009328*/ MOV         R4, #0 
    /*0000932c*/ LDR         R3, [R3, #232]              @ 0xe8 
    /*00009330*/ STR         R1, [SP] 
    /*00009334*/ MOV         R1, #7 
    /*00009338*/ STR         R5, [SP, #4] 
    /*0000933c*/ STR         R3, [SP, #8] 
    /*00009340*/ LDR         R3, [PC, #908]              @ 0x00000000000096d4 
    /*00009344*/ BL          0x0000000000009344          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009348*/ B           VPSS_SendPic_x9118
    VPSS_SendPic_x934c:
    /*0000934c*/ LDR         R2, [SP, #16] 
    /*00009350*/ LDR         R2, [R2, #32] 
    /*00009354*/ CMP         R2, #1 
    /*00009358*/ BEQ         VPSS_SendPic_x93a0
    VPSS_SendPic_x935c:
    /*0000935c*/ MOV         R2, #1 
    /*00009360*/ MOVW        R1, #321                    @ 0x141 
    /*00009364*/ LSL         R2, R2, R9 
    /*00009368*/ TST         R2, R1 
    /*0000936c*/ BNE         VPSS_SendPic_x9288
    /*00009370*/ TST         R2, #18 
    /*00009374*/ BNE         VPSS_SendPic_x93d4
    /*00009378*/ TST         R2, #4 
    /*0000937c*/ MOVNE       R2, #5 
    /*00009380*/ STRNE       R2, [SP, #16] 
    /*00009384*/ BNE         VPSS_SendPic_x9290
    /*00009388*/ B           VPSS_SendPic_x923c
    VPSS_SendPic_x938c:
    /*0000938c*/ LDR         R3, [SP, #16] 
    /*00009390*/ LDR         R3, [R3, #32] 
    /*00009394*/ CMP         R3, #1 
    /*00009398*/ MOV         R3, R4 
    /*0000939c*/ BNE         VPSS_SendPic_x9234
    VPSS_SendPic_x93a0:
    /*000093a0*/ LDR         R2, [SP, #72]               @ 0x48 
    /*000093a4*/ LDR         R2, [R2, #256]              @ 0x100 
    /*000093a8*/ TST         R2, #4 
    /*000093ac*/ BEQ         VPSS_SendPic_x9234
    /*000093b0*/ MOVW        R3, #6852                   @ 0x1ac4 
    /*000093b4*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x710] 
    /*000093b8*/ STR         R3, [SP] 
    /*000093bc*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x710] 
    /*000093c0*/ LDR         R3, [PC, #780]              @ 0x00000000000096d4 
    /*000093c4*/ MOV         R1, #7 
    /*000093c8*/ MOV         R0, #4 
    /*000093cc*/ BL          0x00000000000093CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000093d0*/ B           VPSS_SendPic_x9118
    VPSS_SendPic_x93d4:
    /*000093d4*/ MOV         R2, #15 
    /*000093d8*/ STR         R2, [SP, #16] 
    /*000093dc*/ B           VPSS_SendPic_x9290
    VPSS_SendPic_x93e0:
    /*000093e0*/ LDR         R3, [SP, #72]               @ 0x48 
    /*000093e4*/ MOV         R0, SL 
    /*000093e8*/ LDR         R1, [R3, #232]              @ 0xe8 
    /*000093ec*/ BL          0x00000000000093EC          @ VpssFrmRateCtl [R_ARM_CALL: .text+0x8cf8] 
    /*000093f0*/ CMP         R0, #0 
    /*000093f4*/ BEQ         VPSS_SendPic_x9314
    VPSS_SendPic_x93f8:
    /*000093f8*/ LSL         R3, R8, #5 
    /*000093fc*/ STR         R3, [SP, #20] 
    /*00009400*/ ADD         R9, R3, #2160               @ 0x870 
    /*00009404*/ ADD         R9, R9, #4 
    /*00009408*/ ADD         R9, SL, R9 
    /*0000940c*/ MOV         R0, R9 
    /*00009410*/ BL          0x0000000000009410          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*00009414*/ CMP         R4, R0 
    /*00009418*/ BHI         VPSS_SendPic_x94d8
    /*0000941c*/ CMP         R6, #0 
    /*00009420*/ BEQ         VPSS_SendPic_x9460
    /*00009424*/ ADD         R0, SL, R8, LSL #2 
    /*00009428*/ MOVW        LR, #6957                   @ 0x1b2d 
    /*0000942c*/ ADD         R0, R0, #28672              @ 0x7000 
    /*00009430*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ca0] 
    /*00009434*/ LDR         R3, [PC, #664]              @ 0x00000000000096d4 
    /*00009438*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ca0] 
    /*0000943c*/ LDR         IP, [R0, #3144]             @ 0xc48 
    /*00009440*/ MOV         R1, #7 
    /*00009444*/ MVN         R4, #0 
    /*00009448*/ ADD         IP, IP, #1 
    /*0000944c*/ STR         IP, [R0, #3144]             @ 0xc48 
    /*00009450*/ STR         LR, [SP] 
    /*00009454*/ MOV         R0, #4 
    /*00009458*/ BL          0x0000000000009458          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000945c*/ B           VPSS_SendPic_x9118
    VPSS_SendPic_x9460:
    /*00009460*/ MOV         R0, R9 
    /*00009464*/ BL          0x0000000000009464          @ VPSS_PicQueueGetBusy [R_ARM_CALL: .text+0x10f14] 
    /*00009468*/ SUBS        R4, R0, #0 
    /*0000946c*/ BEQ         VPSS_SendPic_x9690
    VPSS_SendPic_x9470:
    /*00009470*/ MOV         R0, #1 
    /*00009474*/ BL          0x0000000000009474          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009478*/ LDRD        R2, [R4, #128]              @ 0x80 
    /*0000947c*/ MOV         R1, #10 
    /*00009480*/ STR         R1, [SP] 
    /*00009484*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00009488*/ LDR         R0, [R4, #336]              @ 0x150 
    /*0000948c*/ BLX         R1 
    /*00009490*/ CMP         R0, #0 
    /*00009494*/ BNE         VPSS_SendPic_x96b0
    VPSS_SendPic_x9498:
    /*00009498*/ MOV         R1, R4 
    /*0000949c*/ MOV         R0, R9 
    /*000094a0*/ BL          0x00000000000094A0          @ VPSS_PicQueuePutFree [R_ARM_CALL: .text+0x11034] 
    /*000094a4*/ ADD         R0, SL, R8, LSL #2 
    /*000094a8*/ ADD         R0, R0, #28672              @ 0x7000 
    /*000094ac*/ MOVW        LR, #6978                   @ 0x1b42 
    /*000094b0*/ MOVW        R2, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ce4] 
    /*000094b4*/ MOV         R1, #7 
    /*000094b8*/ LDR         IP, [R0, #3140]             @ 0xc44 
    /*000094bc*/ MOVT        R2, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ce4] 
    /*000094c0*/ LDR         R3, [PC, #524]              @ 0x00000000000096d4 
    /*000094c4*/ ADD         IP, IP, #1 
    /*000094c8*/ STR         IP, [R0, #3140]             @ 0xc44 
    /*000094cc*/ STR         LR, [SP] 
    /*000094d0*/ MOV         R0, #4 
    /*000094d4*/ BL          0x00000000000094D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_SendPic_x94d8:
    /*000094d8*/ LDR         R3, [SP, #20] 
    /*000094dc*/ ADD         R3, R3, #2160               @ 0x870 
    /*000094e0*/ ADD         R3, R3, #4 
    /*000094e4*/ ADD         R4, SL, R3 
    /*000094e8*/ MOV         R0, R4 
    /*000094ec*/ BL          0x00000000000094EC          @ VPSS_PicQueueGetFree [R_ARM_CALL: .text+0x10e70] 
    /*000094f0*/ SUBS        R9, R0, #0 
    /*000094f4*/ BEQ         VPSS_SendPic_x9668
    /*000094f8*/ MOV         R2, #336                    @ 0x150 
    /*000094fc*/ LDR         R1, [SP, #72]               @ 0x48 
    /*00009500*/ ADD         R0, R9, #8 
    /*00009504*/ BL          0x0000000000009504          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009508*/ LDR         R3, [SP, #16] 
    /*0000950c*/ MOV         R1, R9 
    /*00009510*/ MOV         R0, R4 
    /*00009514*/ STR         R6, [R9, #348]              @ 0x15c 
    /*00009518*/ STR         R3, [R9, #344]              @ 0x158 
    /*0000951c*/ BL          0x000000000000951C          @ VPSS_PicQueuePutBusy [R_ARM_CALL: .text+0x10ecc] 
    /*00009520*/ ADD         R0, R9, #368                @ 0x170 
    /*00009524*/ BL          0x0000000000009524          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00009528*/ MOV         R0, #1 
    /*0000952c*/ BL          0x000000000000952C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009530*/ LDR         R3, [SP, #72]               @ 0x48 
    /*00009534*/ MOV         R1, #10 
    /*00009538*/ LDRD        R2, [R3, #120]              @ 0x78 
    /*0000953c*/ STR         R1, [SP] 
    /*00009540*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00009544*/ LDR         R0, [SP, #72]               @ 0x48 
    /*00009548*/ LDR         R0, [R0, #328]              @ 0x148 
    /*0000954c*/ BLX         R1 
    /*00009550*/ CMP         R0, #0 
    /*00009554*/ BNE         VPSS_SendPic_x9604
    VPSS_SendPic_x9558:
    /*00009558*/ LDR         R3, [SP, #72]               @ 0x48 
    /*0000955c*/ ADD         R2, SL, #28672              @ 0x7000 
    /*00009560*/ MOV         R0, R5 
    /*00009564*/ MOV         R4, #0 
    /*00009568*/ LDR         R1, [R3, #4] 
    /*0000956c*/ ADD         R3, SL, R8, LSL #2 
    /*00009570*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00009574*/ STR         R1, [R2, #92]               @ 0x5c 
    /*00009578*/ LDR         R1, [SP, #72]               @ 0x48 
    /*0000957c*/ LDR         R1, [R1] 
    /*00009580*/ STR         R1, [R2, #88]               @ 0x58 
    /*00009584*/ LDR         R2, [R3, #3136]             @ 0xc40 
    /*00009588*/ ADD         R2, R2, #1 
    /*0000958c*/ STR         R2, [R3, #3136]             @ 0xc40 
    /*00009590*/ BL          0x0000000000009590          @ VpssStartOneTask [R_ARM_CALL: .text+0x19dc] 
    /*00009594*/ B           VPSS_SendPic_x9118
    VPSS_SendPic_x9598:
    /*00009598*/ LSL         R3, R8, #5 
    /*0000959c*/ MOV         FP, #10 
    /*000095a0*/ ADD         R9, R3, #2160               @ 0x870 
    /*000095a4*/ STR         R3, [SP, #20] 
    /*000095a8*/ ADD         R9, R9, #4 
    /*000095ac*/ ADD         R9, SL, R9 
    /*000095b0*/ B           VPSS_SendPic_x95ec
    VPSS_SendPic_x95b4:
    /*000095b4*/ BL          0x00000000000095B4          @ VPSS_PicQueueGetBusy [R_ARM_CALL: .text+0x10f14] 
    /*000095b8*/ SUBS        R4, R0, #0 
    /*000095bc*/ MOV         R0, #1 
    /*000095c0*/ BEQ         VPSS_SendPic_x9644
    /*000095c4*/ BL          0x00000000000095C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000095c8*/ LDR         IP, [R4, #336]              @ 0x150 
    /*000095cc*/ LDRD        R2, [R4, #128]              @ 0x80 
    /*000095d0*/ STR         FP, [SP] 
    /*000095d4*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000095d8*/ MOV         R0, IP 
    /*000095dc*/ BLX         R1 
    /*000095e0*/ MOV         R1, R4 
    /*000095e4*/ MOV         R0, R9 
    /*000095e8*/ BL          0x00000000000095E8          @ VPSS_PicQueuePutFree [R_ARM_CALL: .text+0x11034] 
    VPSS_SendPic_x95ec:
    /*000095ec*/ MOV         R0, R9 
    /*000095f0*/ BL          0x00000000000095F0          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*000095f4*/ CMP         R0, #0 
    /*000095f8*/ MOV         R0, R9 
    /*000095fc*/ BNE         VPSS_SendPic_x95b4
    /*00009600*/ B           VPSS_SendPic_x94d8
    VPSS_SendPic_x9604:
    /*00009604*/ MOVW        R3, #7071                   @ 0x1b9f 
    /*00009608*/ MOV         R1, #7 
    /*0000960c*/ STR         R3, [SP] 
    /*00009610*/ MOVW        R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d14] 
    /*00009614*/ LDR         R3, [PC, #184]              @ 0x00000000000096d4 
    /*00009618*/ MOVT        R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d14] 
    /*0000961c*/ MOV         R0, #3 
    /*00009620*/ BL          0x0000000000009620          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009624*/ MOVW        R3, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d40] 
    /*00009628*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*0000962c*/ MOVT        R3, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d40] 
    /*00009630*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*00009634*/ MOVW        R2, #7074                   @ 0x1ba2 
    /*00009638*/ LDR         R1, [PC, #148]              @ 0x00000000000096d4 
    /*0000963c*/ BL          0x000000000000963C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00009640*/ B           VPSS_SendPic_x9558
    VPSS_SendPic_x9644:
    /*00009644*/ MOVW        R3, #6906                   @ 0x1afa 
    /*00009648*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdc] 
    /*0000964c*/ STR         R3, [SP] 
    /*00009650*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdc] 
    /*00009654*/ LDR         R3, [PC, #120]              @ 0x00000000000096d4 
    /*00009658*/ MOV         R1, #7 
    /*0000965c*/ MOV         R0, #3 
    /*00009660*/ BL          0x0000000000009660          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009664*/ B           VPSS_SendPic_x94d8
    VPSS_SendPic_x9668:
    /*00009668*/ MOVW        R3, #7053                   @ 0x1b8d 
    /*0000966c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdc] 
    /*00009670*/ STR         R3, [SP] 
    /*00009674*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdc] 
    /*00009678*/ LDR         R3, [PC, #84]               @ 0x00000000000096d4 
    /*0000967c*/ MOV         R1, #7 
    /*00009680*/ MOV         R0, #4 
    /*00009684*/ MVN         R4, #0 
    /*00009688*/ BL          0x0000000000009688          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000968c*/ B           VPSS_SendPic_x9118
    VPSS_SendPic_x9690:
    /*00009690*/ MOVW        R3, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ccc] 
    /*00009694*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*00009698*/ MOVT        R3, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ccc] 
    /*0000969c*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*000096a0*/ MOVW        R2, #6966                   @ 0x1b36 
    /*000096a4*/ LDR         R1, [PC, #40]               @ 0x00000000000096d4 
    /*000096a8*/ BL          0x00000000000096A8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000096ac*/ B           VPSS_SendPic_x9470
    VPSS_SendPic_x96b0:
    /*000096b0*/ MOVW        R3, #6972                   @ 0x1b3c 
    /*000096b4*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374] 
    /*000096b8*/ STR         R3, [SP] 
    /*000096bc*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374] 
    /*000096c0*/ LDR         R3, [PC, #12]               @ 0x00000000000096d4 
    /*000096c4*/ MOV         R1, #7 
    /*000096c8*/ MOV         R0, #3 
    /*000096cc*/ BL          0x00000000000096CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000096d0*/ B           VPSS_SendPic_x9498
    /*000096d4*/ ANDEQ       R0, R0, R4, ROR #13 
FUNC_END VPSS_SendPic


FUNC_BEGIN VPSS_RecvVpssSelfSendPic
    /*000096d8*/ PUSH        {R4, R5, LR} 
    /*000096dc*/ SUBS        R4, R2, #0 
    /*000096e0*/ SUB         SP, SP, #20 
    /*000096e4*/ MOV         R5, R0 
    /*000096e8*/ BEQ         VPSS_RecvVpssSelfSendPic_x9724
    VPSS_RecvVpssSelfSendPic_x96ec:
    /*000096ec*/ LDR         R3, [R4, #12] 
    /*000096f0*/ CMP         R3, #0 
    /*000096f4*/ BEQ         VPSS_RecvVpssSelfSendPic_x9744
    VPSS_RecvVpssSelfSendPic_x96f8:
    /*000096f8*/ LDR         R3, [R4, #4] 
    /*000096fc*/ CMP         R3, R5 
    /*00009700*/ BEQ         VPSS_RecvVpssSelfSendPic_x975c
    /*00009704*/ LDR         IP, [R4, #12] 
    /*00009708*/ MOV         R0, R5 
    /*0000970c*/ MOV         R3, #6 
    /*00009710*/ LDR         R2, [IP, #340]              @ 0x154 
    /*00009714*/ STR         IP, [SP] 
    /*00009718*/ BL          0x0000000000009718          @ VPSS_SendPic [R_ARM_CALL: .text+0x8f74] 
    VPSS_RecvVpssSelfSendPic_x971c:
    /*0000971c*/ ADD         SP, SP, #20 
    /*00009720*/ POP         {R4, R5, PC} 
    VPSS_RecvVpssSelfSendPic_x9724:
    /*00009724*/ STR         R1, [SP, #12] 
    /*00009728*/ BL          0x0000000000000174 
    /*0000972c*/ LDR         R1, [SP, #12] 
    /*00009730*/ CMP         R0, #0 
    /*00009734*/ BEQ         VPSS_RecvVpssSelfSendPic_x96ec
    VPSS_RecvVpssSelfSendPic_x9738:
    /*00009738*/ MOVW        R0, #32774                  @ 0x8006 
    /*0000973c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00009740*/ B           VPSS_RecvVpssSelfSendPic_x971c
    VPSS_RecvVpssSelfSendPic_x9744:
    /*00009744*/ STR         R1, [SP, #12] 
    /*00009748*/ BL          0x0000000000000174 
    /*0000974c*/ CMP         R0, #0 
    /*00009750*/ LDREQ       R1, [SP, #12] 
    /*00009754*/ BNE         VPSS_RecvVpssSelfSendPic_x9738
    /*00009758*/ B           VPSS_RecvVpssSelfSendPic_x96f8
    VPSS_RecvVpssSelfSendPic_x975c:
    /*0000975c*/ MOVW        R3, #7132                   @ 0x1bdc 
    /*00009760*/ STR         R5, [SP, #4] 
    /*00009764*/ STR         R3, [SP] 
    /*00009768*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d58] 
    /*0000976c*/ LDR         R3, [PC, #24]               @ 0x000000000000978c 
    /*00009770*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d58] 
    /*00009774*/ MOV         R1, #7 
    /*00009778*/ MOV         R0, #3 
    /*0000977c*/ BL          0x000000000000977C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009780*/ MOVW        R0, #32777                  @ 0x8009 
    /*00009784*/ MOVT        R0, #40967                  @ 0xa007 
    /*00009788*/ B           VPSS_RecvVpssSelfSendPic_x971c
    /*0000978c*/ STRDEQ      R0, [R0], -R4 
FUNC_END VPSS_RecvVpssSelfSendPic


FUNC_BEGIN VPSS_UserSendFrameTimeout
    /*00009790*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00009794*/ MOVW        IP, #0                      @ g_u32VpssState [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00009798*/ SUB         SP, SP, #428                @ 0x1ac 
    /*0000979c*/ MOVT        IP, #0                      @ g_u32VpssState [R_ARM_MOVT_ABS: .data+0x0] 
    /*000097a0*/ STR         R1, [SP, #16] 
    /*000097a4*/ LDR         R1, [IP] 
    /*000097a8*/ CMP         R1, #0 
    /*000097ac*/ BNE         VPSS_UserSendFrameTimeout_x9a70
    /*000097b0*/ CMP         R2, #0 
    /*000097b4*/ MOV         R4, R0 
    /*000097b8*/ MOV         R9, R2 
    /*000097bc*/ MOV         SL, R3 
    /*000097c0*/ BEQ         VPSS_UserSendFrameTimeout_x9958
    VPSS_UserSendFrameTimeout_x97c4:
    /*000097c4*/ CMP         R4, #15 
    /*000097c8*/ BHI         VPSS_UserSendFrameTimeout_x9884
    VPSS_UserSendFrameTimeout_x97cc:
    /*000097cc*/ MOV         R7, #92                     @ 0x5c 
    /*000097d0*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000097d4*/ MUL         R7, R7, R4 
    /*000097d8*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000097dc*/ ADD         FP, R5, #64                 @ 0x40 
    /*000097e0*/ ADD         R6, R7, #44                 @ 0x2c 
    /*000097e4*/ ADD         R6, FP, R6 
    /*000097e8*/ MOV         R0, R6 
    /*000097ec*/ BL          0x00000000000097EC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000097f0*/ CMP         R0, #0 
    /*000097f4*/ BNE         VPSS_UserSendFrameTimeout_x9a64
    /*000097f8*/ LDR         R2, [R5, R4, LSL #2] 
    /*000097fc*/ CMP         R2, #0 
    /*00009800*/ STREQ       R4, [SP, #4] 
    /*00009804*/ MOVWEQ      R3, #7184                   @ 0x1c10 
    /*00009808*/ BEQ         VPSS_UserSendFrameTimeout_x9914
    /*0000980c*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00009810*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00009814*/ LDR         R8, [R3, R4, LSL #2] 
    /*00009818*/ CMP         R8, #0 
    /*0000981c*/ BEQ         VPSS_UserSendFrameTimeout_x990c
    /*00009820*/ CMN         SL, #1 
    /*00009824*/ BLT         VPSS_UserSendFrameTimeout_x993c
    /*00009828*/ ADD         R3, R5, R7 
    /*0000982c*/ LDR         R3, [R3, #64]               @ 0x40 
    /*00009830*/ CMP         R3, #1 
    /*00009834*/ BEQ         VPSS_UserSendFrameTimeout_x9900
    /*00009838*/ LDR         R3, [R2, #2056]             @ 0x808 
    /*0000983c*/ CMP         R3, #0 
    /*00009840*/ BNE         VPSS_UserSendFrameTimeout_x989c
    /*00009844*/ MOVW        R3, #7213                   @ 0x1c2d 
    /*00009848*/ STR         R4, [SP, #4] 
    /*0000984c*/ STR         R3, [SP] 
    /*00009850*/ MOVW        R2, #0                      @ .LC134 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e00] 
    /*00009854*/ LDR         R3, [PC, #1688]             @ 0x0000000000009ef4 
    /*00009858*/ MOVT        R2, #0                      @ .LC134 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e00] 
    /*0000985c*/ MOV         R1, #7 
    /*00009860*/ MOV         R0, #3 
    /*00009864*/ BL          0x0000000000009864          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009868*/ MOVW        R8, #32784                  @ 0x8010 
    /*0000986c*/ MOVT        R8, #40967                  @ 0xa007 
    VPSS_UserSendFrameTimeout_x9870:
    /*00009870*/ MOV         R0, R6 
    /*00009874*/ BL          0x0000000000009874          @ osal_up [R_ARM_CALL: +0x0] 
    VPSS_UserSendFrameTimeout_x9878:
    /*00009878*/ MOV         R0, R8 
    /*0000987c*/ ADD         SP, SP, #428                @ 0x1ac 
    /*00009880*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_UserSendFrameTimeout_x9884:
    /*00009884*/ BL          0x00000000000001B0 
    /*00009888*/ CMP         R0, #0 
    /*0000988c*/ BEQ         VPSS_UserSendFrameTimeout_x97cc
    /*00009890*/ MOVW        R8, #32769                  @ 0x8001 
    /*00009894*/ MOVT        R8, #40967                  @ 0xa007 
    /*00009898*/ B           VPSS_UserSendFrameTimeout_x9878
    VPSS_UserSendFrameTimeout_x989c:
    /*0000989c*/ MOV         R0, #2 
    /*000098a0*/ BL          0x00000000000098A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000098a4*/ CMP         R0, #0 
    /*000098a8*/ BEQ         VPSS_UserSendFrameTimeout_x9a9c
    /*000098ac*/ LDR         R2, [SP, #16] 
    /*000098b0*/ CMP         R2, #0 
    /*000098b4*/ BLT         VPSS_UserSendFrameTimeout_x98c8
    /*000098b8*/ LDR         R3, [R5, R4, LSL #2] 
    /*000098bc*/ LDR         R3, [R3, #2592]             @ 0xa20 
    /*000098c0*/ CMP         R2, R3 
    /*000098c4*/ BLT         VPSS_UserSendFrameTimeout_x9970
    VPSS_UserSendFrameTimeout_x98c8:
    /*000098c8*/ LDR         R3, [SP, #16] 
    /*000098cc*/ MOVW        R2, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e38] 
    /*000098d0*/ MOVT        R2, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e38] 
    /*000098d4*/ STR         R4, [SP, #4] 
    /*000098d8*/ STR         R3, [SP, #8] 
    /*000098dc*/ MOVW        R3, #7227                   @ 0x1c3b 
    /*000098e0*/ STR         R3, [SP] 
    VPSS_UserSendFrameTimeout_x98e4:
    /*000098e4*/ LDR         R3, [PC, #1544]             @ 0x0000000000009ef4 
    /*000098e8*/ MOV         R1, #7 
    /*000098ec*/ MOV         R0, #3 
    /*000098f0*/ MOVW        R8, #32771                  @ 0x8003 
    /*000098f4*/ BL          0x00000000000098F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000098f8*/ MOVT        R8, #40967                  @ 0xa007 
    /*000098fc*/ B           VPSS_UserSendFrameTimeout_x9870
    VPSS_UserSendFrameTimeout_x9900:
    /*00009900*/ MOVW        R8, #32786                  @ 0x8012 
    /*00009904*/ MOVT        R8, #40967                  @ 0xa007 
    /*00009908*/ B           VPSS_UserSendFrameTimeout_x9870
    VPSS_UserSendFrameTimeout_x990c:
    /*0000990c*/ MOVW        R3, #7193                   @ 0x1c19 
    /*00009910*/ STR         R4, [SP, #4] 
    VPSS_UserSendFrameTimeout_x9914:
    /*00009914*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00009918*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*0000991c*/ STR         R3, [SP] 
    VPSS_UserSendFrameTimeout_x9920:
    /*00009920*/ LDR         R3, [PC, #1484]             @ 0x0000000000009ef4 
    /*00009924*/ MOV         R1, #7 
    /*00009928*/ MOV         R0, #3 
    /*0000992c*/ MOVW        R8, #32773                  @ 0x8005 
    /*00009930*/ BL          0x0000000000009930          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009934*/ MOVT        R8, #40967                  @ 0xa007 
    /*00009938*/ B           VPSS_UserSendFrameTimeout_x9870
    VPSS_UserSendFrameTimeout_x993c:
    /*0000993c*/ MOVW        R3, #7200                   @ 0x1c20 
    /*00009940*/ MOVW        R2, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1dc8] 
    /*00009944*/ STR         SL, [SP, #8] 
    /*00009948*/ MOVT        R2, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1dc8] 
    /*0000994c*/ STR         R4, [SP, #4] 
    /*00009950*/ STR         R3, [SP] 
    /*00009954*/ B           VPSS_UserSendFrameTimeout_x98e4
    VPSS_UserSendFrameTimeout_x9958:
    /*00009958*/ BL          0x0000000000000174 
    /*0000995c*/ CMP         R0, #0 
    /*00009960*/ MOVWNE      R8, #32774                  @ 0x8006 
    /*00009964*/ MOVTNE      R8, #40967                  @ 0xa007 
    /*00009968*/ BNE         VPSS_UserSendFrameTimeout_x9878
    /*0000996c*/ B           VPSS_UserSendFrameTimeout_x97c4
    VPSS_UserSendFrameTimeout_x9970:
    /*00009970*/ MOV         R0, R4 
    /*00009974*/ BL          0x0000000000009974          @ VpssCheckBindInfo [R_ARM_CALL: .text+0x698] 
    /*00009978*/ CMP         R0, #0 
    /*0000997c*/ MOVWNE      R8, #32784                  @ 0x8010 
    /*00009980*/ MOVTNE      R8, #40967                  @ 0xa007 
    /*00009984*/ BNE         VPSS_UserSendFrameTimeout_x9870
    /*00009988*/ LDR         R3, [R9, #328]              @ 0x148 
    /*0000998c*/ MOV         R0, #1 
    /*00009990*/ STR         R3, [SP, #20] 
    /*00009994*/ LDRD        R2, [R9, #120]              @ 0x78 
    /*00009998*/ STRD        R2, [SP, #24] 
    /*0000999c*/ BL          0x000000000000999C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000099a0*/ LDRD        R2, [SP, #24] 
    /*000099a4*/ LDR         R1, [R0, #84]               @ 0x54 
    /*000099a8*/ LDR         R0, [SP, #20] 
    /*000099ac*/ BLX         R1 
    /*000099b0*/ CMP         R0, #0 
    /*000099b4*/ BNE         VPSS_UserSendFrameTimeout_x9ac8
    /*000099b8*/ MOVW        R3, #7244                   @ 0x1c4c 
    /*000099bc*/ MOVW        R2, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e74] 
    /*000099c0*/ STR         R3, [SP] 
    /*000099c4*/ MOVT        R2, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e74] 
    /*000099c8*/ LDR         R3, [PC, #1316]             @ 0x0000000000009ef4 
    /*000099cc*/ MOV         R1, #7 
    /*000099d0*/ MOV         R0, #3 
    /*000099d4*/ MOVW        R8, #32771                  @ 0x8003 
    /*000099d8*/ BL          0x00000000000099D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000099dc*/ MOVT        R8, #40967                  @ 0xa007 
    /*000099e0*/ B           VPSS_UserSendFrameTimeout_x9870
    VPSS_UserSendFrameTimeout_x99e4:
    /*000099e4*/ MOV         R0, R6 
    /*000099e8*/ ADD         R7, R7, #28 
    /*000099ec*/ BL          0x00000000000099EC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000099f0*/ LDR         R3, [SP, #24] 
    /*000099f4*/ MOVW        SL, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x1f7c] 
    /*000099f8*/ ADD         FP, FP, R7 
    /*000099fc*/ MOVT        SL, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x1f7c] 
    /*00009a00*/ ADD         R8, SP, #40                 @ 0x28 
    /*00009a04*/ STR         R3, [SP, #52]               @ 0x34 
    /*00009a08*/ LDR         R3, [SP, #16] 
    /*00009a0c*/ STR         R9, [SP, #56]               @ 0x38 
    /*00009a10*/ STR         R9, [SP, #60]               @ 0x3c 
    /*00009a14*/ STR         R4, [SP, #40]               @ 0x28 
    /*00009a18*/ STR         R9, [SP, #48]               @ 0x30 
    /*00009a1c*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00009a20*/ B           VPSS_UserSendFrameTimeout_x9a30
    VPSS_UserSendFrameTimeout_x9a24:
    /*00009a24*/ BL          0x0000000000009A24          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00009a28*/ CMP         R0, #0 
    /*00009a2c*/ BLT         VPSS_UserSendFrameTimeout_x9d34
    VPSS_UserSendFrameTimeout_x9a30:
    /*00009a30*/ MOV         R0, R8 
    /*00009a34*/ BL          0x0000000000009A34          @ VPSS_WaitConditionCallBack [R_ARM_CALL: .text+0x1f7c] 
    /*00009a38*/ MOV         R3, #100                    @ 0x64 
    /*00009a3c*/ MOV         R2, R8 
    /*00009a40*/ MOV         R1, SL 
    /*00009a44*/ CMP         R0, #0 
    /*00009a48*/ MOV         R0, FP 
    /*00009a4c*/ BEQ         VPSS_UserSendFrameTimeout_x9a24
    /*00009a50*/ MOV         R0, R6 
    /*00009a54*/ LDR         R7, [SP, #56]               @ 0x38 
    /*00009a58*/ BL          0x0000000000009A58          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00009a5c*/ CMP         R0, #0 
    /*00009a60*/ BEQ         VPSS_UserSendFrameTimeout_x9c70
    VPSS_UserSendFrameTimeout_x9a64:
    /*00009a64*/ MOV         R8, #65024                  @ 0xfe00 
    /*00009a68*/ MOVT        R8, #65535                  @ 0xffff 
    /*00009a6c*/ B           VPSS_UserSendFrameTimeout_x9878
    VPSS_UserSendFrameTimeout_x9a70:
    /*00009a70*/ MOVW        R3, #7172                   @ 0x1c04 
    /*00009a74*/ MOVW        R2, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d9c] 
    /*00009a78*/ STR         R3, [SP] 
    /*00009a7c*/ MOVT        R2, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d9c] 
    /*00009a80*/ LDR         R3, [PC, #1132]             @ 0x0000000000009ef4 
    /*00009a84*/ MOV         R1, #7 
    /*00009a88*/ MOV         R0, #3 
    /*00009a8c*/ MOVW        R8, #32784                  @ 0x8010 
    /*00009a90*/ BL          0x0000000000009A90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009a94*/ MOVT        R8, #40967                  @ 0xa007 
    /*00009a98*/ B           VPSS_UserSendFrameTimeout_x9878
    VPSS_UserSendFrameTimeout_x9a9c:
    /*00009a9c*/ MOVW        R3, #7220                   @ 0x1c34 
    /*00009aa0*/ MOVW        R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x928] 
    /*00009aa4*/ STR         R3, [SP] 
    /*00009aa8*/ MOVT        R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x928] 
    /*00009aac*/ LDR         R3, [PC, #1088]             @ 0x0000000000009ef4 
    /*00009ab0*/ MOV         R1, #7 
    /*00009ab4*/ MOV         R0, #3 
    /*00009ab8*/ MOVW        R8, #32777                  @ 0x8009 
    /*00009abc*/ BL          0x0000000000009ABC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009ac0*/ MOVT        R8, #40967                  @ 0xa007 
    /*00009ac4*/ B           VPSS_UserSendFrameTimeout_x9870
    VPSS_UserSendFrameTimeout_x9ac8:
    /*00009ac8*/ ADD         R3, R7, #48                 @ 0x30 
    /*00009acc*/ LDR         R2, [R9, #24] 
    /*00009ad0*/ ADD         R3, FP, R3 
    /*00009ad4*/ ADD         R1, SP, #36                 @ 0x24 
    /*00009ad8*/ STR         R3, [SP, #20] 
    /*00009adc*/ MOV         R0, R3 
    /*00009ae0*/ STR         R2, [SP, #24] 
    /*00009ae4*/ BL          0x0000000000009AE4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009ae8*/ LDR         R1, [R8, #16] 
    /*00009aec*/ LDR         R2, [SP, #24] 
    /*00009af0*/ MOV         R0, R4 
    /*00009af4*/ BL          0x0000000000009AF4          @ VPSS_CheckDynamicRange [R_ARM_CALL: .text+0x8e4c] 
    /*00009af8*/ ADD         R1, SP, #36                 @ 0x24 
    /*00009afc*/ MOV         R8, R0 
    /*00009b00*/ LDR         R0, [SP, #20] 
    /*00009b04*/ BL          0x0000000000009B04          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009b08*/ CMP         R8, #0 
    /*00009b0c*/ BNE         VPSS_UserSendFrameTimeout_x9870
    /*00009b10*/ MOV         R2, #336                    @ 0x150 
    /*00009b14*/ MOV         R8, #1 
    /*00009b18*/ MOV         R1, R9 
    /*00009b1c*/ ADD         R0, SP, #64                 @ 0x40 
    /*00009b20*/ MOV         R3, #30 
    /*00009b24*/ STR         R8, [SP, #404]              @ 0x194 
    /*00009b28*/ STR         R3, [SP, #400]              @ 0x190 
    /*00009b2c*/ BL          0x0000000000009B2C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009b30*/ MOV         R0, R8 
    /*00009b34*/ BL          0x0000000000009B34          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009b38*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00009b3c*/ LDRD        R0, [SP, #184]              @ 0xb8 
    /*00009b40*/ BLX         R3 
    /*00009b44*/ MOV         R9, R0 
    /*00009b48*/ MOV         R0, R8 
    /*00009b4c*/ BL          0x0000000000009B4C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009b50*/ LDR         R3, [R0, #100]              @ 0x64 
    /*00009b54*/ MOV         R0, R9 
    /*00009b58*/ BLX         R3 
    /*00009b5c*/ MOV         R2, #64                     @ 0x40 
    /*00009b60*/ MOV         R1, R0 
    /*00009b64*/ ADD         R0, SP, #328                @ 0x148 
    /*00009b68*/ BL          0x0000000000009B68          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009b6c*/ LDR         R2, [SP, #16] 
    /*00009b70*/ MOV         R1, R4 
    /*00009b74*/ ADD         R0, SP, #64                 @ 0x40 
    /*00009b78*/ BL          0x0000000000009B78          @ VPSS_DRV_CheckImageAttr [R_ARM_CALL: .text+0x1dbe0] 
    /*00009b7c*/ SUBS        R9, R0, #0 
    /*00009b80*/ MOVWNE      R8, #32771                  @ 0x8003 
    /*00009b84*/ MOVTNE      R8, #40967                  @ 0xa007 
    /*00009b88*/ BNE         VPSS_UserSendFrameTimeout_x9870
    /*00009b8c*/ LDR         R8, [SP, #20] 
    /*00009b90*/ ADD         R1, SP, #36                 @ 0x24 
    /*00009b94*/ MOV         R0, R8 
    /*00009b98*/ BL          0x0000000000009B98          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009b9c*/ MOV         R2, #92                     @ 0x5c 
    /*00009ba0*/ MLA         R2, R2, R4, R5 
    /*00009ba4*/ ADD         R1, SP, #36                 @ 0x24 
    /*00009ba8*/ MOV         R0, R8 
    /*00009bac*/ LDR         R3, [R2, #76]               @ 0x4c 
    /*00009bb0*/ STR         R3, [SP, #24] 
    /*00009bb4*/ BL          0x0000000000009BB4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009bb8*/ CMP         SL, #0 
    /*00009bbc*/ BLE         VPSS_UserSendFrameTimeout_x9ce0
    /*00009bc0*/ MOV         R0, R6 
    /*00009bc4*/ ADD         R8, SP, #40                 @ 0x28 
    /*00009bc8*/ BL          0x0000000000009BC8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009bcc*/ LDR         R3, [SP, #24] 
    /*00009bd0*/ MOV         R0, R8 
    /*00009bd4*/ ADD         R7, R7, #28 
    /*00009bd8*/ STR         R9, [SP, #56]               @ 0x38 
    /*00009bdc*/ ADD         FP, FP, R7 
    /*00009be0*/ STR         R3, [SP, #52]               @ 0x34 
    /*00009be4*/ LDR         R3, [SP, #16] 
    /*00009be8*/ STR         R9, [SP, #60]               @ 0x3c 
    /*00009bec*/ STR         R9, [SP, #48]               @ 0x30 
    /*00009bf0*/ MOVW        R9, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x1f7c] 
    /*00009bf4*/ STR         R4, [SP, #40]               @ 0x28 
    /*00009bf8*/ MOVT        R9, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x1f7c] 
    /*00009bfc*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00009c00*/ BL          0x0000000000009C00          @ VPSS_WaitConditionCallBack [R_ARM_CALL: .text+0x1f7c] 
    /*00009c04*/ B           VPSS_UserSendFrameTimeout_x9c1c
    VPSS_UserSendFrameTimeout_x9c08:
    /*00009c08*/ BL          0x0000000000009C08          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00009c0c*/ ADD         R3, R0, #512                @ 0x200 
    /*00009c10*/ MOV         SL, R0 
    /*00009c14*/ BICS        R3, R3, #512                @ 0x200 
    /*00009c18*/ BEQ         VPSS_UserSendFrameTimeout_x9c48
    VPSS_UserSendFrameTimeout_x9c1c:
    /*00009c1c*/ MOV         R0, R8 
    /*00009c20*/ BL          0x0000000000009C20          @ VPSS_WaitConditionCallBack [R_ARM_CALL: .text+0x1f7c] 
    /*00009c24*/ MOV         R3, SL 
    /*00009c28*/ MOV         R2, R8 
    /*00009c2c*/ MOV         R1, R9 
    /*00009c30*/ CMP         R0, #0 
    /*00009c34*/ MOV         R0, FP 
    /*00009c38*/ BEQ         VPSS_UserSendFrameTimeout_x9c08
    /*00009c3c*/ MOV         R0, SL 
    /*00009c40*/ BL          0x0000000000009C40          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*00009c44*/ MOV         SL, R0 
    VPSS_UserSendFrameTimeout_x9c48:
    /*00009c48*/ MOV         R0, R6 
    /*00009c4c*/ LDR         R7, [SP, #56]               @ 0x38 
    /*00009c50*/ BL          0x0000000000009C50          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00009c54*/ CMP         R0, #0 
    /*00009c58*/ BNE         VPSS_UserSendFrameTimeout_x9a64
    /*00009c5c*/ CMP         SL, #0 
    /*00009c60*/ BLT         VPSS_UserSendFrameTimeout_x9d44
    /*00009c64*/ STREQ       R4, [SP, #4] 
    /*00009c68*/ MOVWEQ      R3, #7335                   @ 0x1ca7 
    /*00009c6c*/ BEQ         VPSS_UserSendFrameTimeout_x9d0c
    VPSS_UserSendFrameTimeout_x9c70:
    /*00009c70*/ CMP         R7, #0 
    /*00009c74*/ BEQ         VPSS_UserSendFrameTimeout_x9e4c
    VPSS_UserSendFrameTimeout_x9c78:
    /*00009c78*/ LDR         R3, [R5, R4, LSL #2] 
    /*00009c7c*/ CMP         R3, #0 
    /*00009c80*/ BEQ         VPSS_UserSendFrameTimeout_x9e04
    /*00009c84*/ ADD         R1, SP, #36                 @ 0x24 
    /*00009c88*/ LDR         R0, [SP, #20] 
    /*00009c8c*/ BL          0x0000000000009C8C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009c90*/ LDR         R1, [SP, #24] 
    /*00009c94*/ MOV         R0, R4 
    /*00009c98*/ BL          0x0000000000009C98          @ AbnormalVerifyAfterWait [R_ARM_CALL: .text+0x1ff4] 
    /*00009c9c*/ SUBS        R8, R0, #0 
    /*00009ca0*/ BNE         VPSS_UserSendFrameTimeout_x9dec
    /*00009ca4*/ LDR         R3, [SP, #16] 
    /*00009ca8*/ MOVW        R9, #2164                   @ 0x874 
    /*00009cac*/ LDR         R0, [R5, R4, LSL #2] 
    /*00009cb0*/ ADD         R9, R9, R3, LSL #5 
    /*00009cb4*/ ADD         R0, R0, R9 
    /*00009cb8*/ BL          0x0000000000009CB8          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*00009cbc*/ CMP         R0, #2 
    /*00009cc0*/ BLS         VPSS_UserSendFrameTimeout_x9d50
    /*00009cc4*/ LDR         R3, [SP, #404]              @ 0x194 
    /*00009cc8*/ CMP         R3, #0 
    /*00009ccc*/ BNE         VPSS_UserSendFrameTimeout_x9e1c
    VPSS_UserSendFrameTimeout_x9cd0:
    /*00009cd0*/ ADD         R1, SP, #36                 @ 0x24 
    /*00009cd4*/ LDR         R0, [SP, #20] 
    /*00009cd8*/ BL          0x0000000000009CD8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009cdc*/ B           VPSS_UserSendFrameTimeout_x9870
    VPSS_UserSendFrameTimeout_x9ce0:
    /*00009ce0*/ BNE         VPSS_UserSendFrameTimeout_x99e4
    /*00009ce4*/ LDR         R2, [SP, #16] 
    /*00009ce8*/ MOVW        R3, #2164                   @ 0x874 
    /*00009cec*/ LDR         R0, [R5, R4, LSL #2] 
    /*00009cf0*/ ADD         R3, R3, R2, LSL #5 
    /*00009cf4*/ ADD         R0, R0, R3 
    /*00009cf8*/ BL          0x0000000000009CF8          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*00009cfc*/ CMP         R0, #2 
    /*00009d00*/ BLS         VPSS_UserSendFrameTimeout_x9c78
    /*00009d04*/ MOVW        R3, #7358                   @ 0x1cbe 
    /*00009d08*/ STR         R4, [SP, #4] 
    VPSS_UserSendFrameTimeout_x9d0c:
    /*00009d0c*/ STR         R3, [SP] 
    /*00009d10*/ MOVW        R2, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e9c] 
    /*00009d14*/ LDR         R3, [PC, #472]              @ 0x0000000000009ef4 
    /*00009d18*/ MOVT        R2, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e9c] 
    /*00009d1c*/ MOV         R1, #7 
    /*00009d20*/ MOV         R0, #3 
    /*00009d24*/ MOVW        R8, #32781                  @ 0x800d 
    /*00009d28*/ BL          0x0000000000009D28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009d2c*/ MOVT        R8, #40967                  @ 0xa007 
    /*00009d30*/ B           VPSS_UserSendFrameTimeout_x9870
    VPSS_UserSendFrameTimeout_x9d34:
    /*00009d34*/ MOV         R0, R6 
    /*00009d38*/ BL          0x0000000000009D38          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00009d3c*/ CMP         R0, #0 
    /*00009d40*/ BNE         VPSS_UserSendFrameTimeout_x9a64
    VPSS_UserSendFrameTimeout_x9d44:
    /*00009d44*/ MOV         R8, #65024                  @ 0xfe00 
    /*00009d48*/ MOVT        R8, #65535                  @ 0xffff 
    /*00009d4c*/ B           VPSS_UserSendFrameTimeout_x9870
    VPSS_UserSendFrameTimeout_x9d50:
    /*00009d50*/ LDR         R0, [R5, R4, LSL #2] 
    /*00009d54*/ ADD         R0, R0, R9 
    /*00009d58*/ BL          0x0000000000009D58          @ VPSS_PicQueueGetFree [R_ARM_CALL: .text+0x10e70] 
    /*00009d5c*/ SUBS        R7, R0, #0 
    /*00009d60*/ BEQ         VPSS_UserSendFrameTimeout_x9eb4
    /*00009d64*/ ADD         R1, SP, #64                 @ 0x40 
    /*00009d68*/ MOV         R2, #360                    @ 0x168 
    /*00009d6c*/ ADD         R0, R7, #8 
    /*00009d70*/ BL          0x0000000000009D70          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009d74*/ LDR         R3, [R5, R4, LSL #2] 
    /*00009d78*/ MOV         R0, #1 
    /*00009d7c*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00009d80*/ LDR         R3, [R3, #3692]             @ 0xe6c 
    /*00009d84*/ CMP         R3, #1 
    /*00009d88*/ STREQ       R8, [R7, #348]              @ 0x15c 
    /*00009d8c*/ MOVNE       R3, #1 
    /*00009d90*/ STRNE       R3, [R7, #348]              @ 0x15c 
    /*00009d94*/ BL          0x0000000000009D94          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009d98*/ MOV         R1, #10 
    /*00009d9c*/ LDRD        R2, [SP, #184]              @ 0xb8 
    /*00009da0*/ STR         R1, [SP] 
    /*00009da4*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00009da8*/ LDR         R0, [SP, #392]              @ 0x188 
    /*00009dac*/ BLX         R1 
    /*00009db0*/ SUBS        R8, R0, #0 
    /*00009db4*/ BEQ         VPSS_UserSendFrameTimeout_x9e60
    /*00009db8*/ MOVW        R3, #7472                   @ 0x1d30 
    /*00009dbc*/ MOV         R1, #7 
    /*00009dc0*/ STR         R3, [SP] 
    /*00009dc4*/ MOVW        R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d14] 
    /*00009dc8*/ LDR         R3, [PC, #292]              @ 0x0000000000009ef4 
    /*00009dcc*/ MOVT        R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d14] 
    /*00009dd0*/ MOV         R0, #3 
    /*00009dd4*/ BL          0x0000000000009DD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009dd8*/ LDR         R0, [R5, R4, LSL #2] 
    /*00009ddc*/ MOV         R1, R7 
    /*00009de0*/ ADD         R0, R0, R9 
    /*00009de4*/ BL          0x0000000000009DE4          @ VPSS_PicQueuePutFree [R_ARM_CALL: .text+0x11034] 
    /*00009de8*/ B           VPSS_UserSendFrameTimeout_x9cd0
    VPSS_UserSendFrameTimeout_x9dec:
    /*00009dec*/ LDR         R0, [SP, #20] 
    /*00009df0*/ ADD         R1, SP, #36                 @ 0x24 
    /*00009df4*/ BL          0x0000000000009DF4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009df8*/ MOV         R0, R6 
    /*00009dfc*/ BL          0x0000000000009DFC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009e00*/ B           VPSS_UserSendFrameTimeout_x9878
    VPSS_UserSendFrameTimeout_x9e04:
    /*00009e04*/ MOVW        R3, #7401                   @ 0x1ce9 
    /*00009e08*/ MOVW        R2, #0                      @ .LC138 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ed4] 
    /*00009e0c*/ STR         R4, [SP, #4] 
    /*00009e10*/ MOVT        R2, #0                      @ .LC138 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ed4] 
    /*00009e14*/ STR         R3, [SP] 
    /*00009e18*/ B           VPSS_UserSendFrameTimeout_x9920
    VPSS_UserSendFrameTimeout_x9e1c:
    /*00009e1c*/ MOVW        R3, #7423                   @ 0x1cff 
    /*00009e20*/ STR         R4, [SP, #4] 
    /*00009e24*/ STR         R3, [SP] 
    /*00009e28*/ MOVW        R2, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f04] 
    /*00009e2c*/ LDR         R3, [PC, #192]              @ 0x0000000000009ef4 
    /*00009e30*/ MOVT        R2, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f04] 
    /*00009e34*/ MOV         R1, #7 
    /*00009e38*/ MOV         R0, #3 
    /*00009e3c*/ MOVW        R8, #32781                  @ 0x800d 
    /*00009e40*/ BL          0x0000000000009E40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009e44*/ MOVT        R8, #40967                  @ 0xa007 
    /*00009e48*/ B           VPSS_UserSendFrameTimeout_x9cd0
    VPSS_UserSendFrameTimeout_x9e4c:
    /*00009e4c*/ MOV         R0, R6 
    /*00009e50*/ MOVW        R8, #32784                  @ 0x8010 
    /*00009e54*/ BL          0x0000000000009E54          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009e58*/ MOVT        R8, #40967                  @ 0xa007 
    /*00009e5c*/ B           VPSS_UserSendFrameTimeout_x9878
    VPSS_UserSendFrameTimeout_x9e60:
    /*00009e60*/ LDR         R0, [R5, R4, LSL #2] 
    /*00009e64*/ MOV         R1, R7 
    /*00009e68*/ ADD         R0, R0, R9 
    /*00009e6c*/ BL          0x0000000000009E6C          @ VPSS_PicQueuePutBusy [R_ARM_CALL: .text+0x10ecc] 
    /*00009e70*/ LDR         R2, [SP, #16] 
    /*00009e74*/ LDR         R3, [R5, R4, LSL #2] 
    /*00009e78*/ ADD         R0, R7, #368                @ 0x170 
    /*00009e7c*/ LDR         IP, [SP, #68]               @ 0x44 
    /*00009e80*/ LDR         R1, [SP, #64]               @ 0x40 
    /*00009e84*/ ADD         R2, R3, R2, LSL #2 
    /*00009e88*/ ADD         R2, R2, #28672              @ 0x7000 
    /*00009e8c*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00009e90*/ STR         IP, [R3, #92]               @ 0x5c 
    /*00009e94*/ STR         R1, [R3, #88]               @ 0x58 
    /*00009e98*/ LDR         R3, [R2, #3136]             @ 0xc40 
    /*00009e9c*/ ADD         R3, R3, #1 
    /*00009ea0*/ STR         R3, [R2, #3136]             @ 0xc40 
    /*00009ea4*/ BL          0x0000000000009EA4          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00009ea8*/ MOV         R0, R4 
    /*00009eac*/ BL          0x0000000000009EAC          @ VpssStartOneTask [R_ARM_CALL: .text+0x19dc] 
    /*00009eb0*/ B           VPSS_UserSendFrameTimeout_x9cd0
    VPSS_UserSendFrameTimeout_x9eb4:
    /*00009eb4*/ MOVW        R3, #7440                   @ 0x1d10 
    /*00009eb8*/ MOV         R1, #7 
    /*00009ebc*/ STR         R3, [SP] 
    /*00009ec0*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdc] 
    /*00009ec4*/ LDR         R3, [PC, #40]               @ 0x0000000000009ef4 
    /*00009ec8*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdc] 
    /*00009ecc*/ MOV         R0, #3 
    /*00009ed0*/ MOVW        R8, #32774                  @ 0x8006 
    /*00009ed4*/ BL          0x0000000000009ED4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009ed8*/ ADD         R1, SP, #36                 @ 0x24 
    /*00009edc*/ LDR         R0, [SP, #20] 
    /*00009ee0*/ MOVT        R8, #40967                  @ 0xa007 
    /*00009ee4*/ BL          0x0000000000009EE4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009ee8*/ MOV         R0, R6 
    /*00009eec*/ BL          0x0000000000009EEC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009ef0*/ B           VPSS_UserSendFrameTimeout_x9878
    /*00009ef4*/ ANDEQ       R0, R0, R0, LSL R7 
FUNC_END VPSS_UserSendFrameTimeout


FUNC_BEGIN VPSS_GetIpEn
    VPSS_GetIpEn_x9ef8:
    /*00009ef8*/ B           VPSS_GetIpEn_x9ef8          @ VPSS_DRV_GetIpEn [R_ARM_JUMP24: .text+0x25fe0] 
FUNC_END VPSS_GetIpEn


FUNC_BEGIN VPSS_DownSemaphore
    /*00009efc*/ LDR         R2, [PC, #40]               @ 0x0000000000009f2c 
    /*00009f00*/ MOV         R3, #92                     @ 0x5c 
    /*00009f04*/ PUSH        {R4, LR} 
    /*00009f08*/ MLA         R0, R3, R0, R2 
    /*00009f0c*/ ADD         R0, R0, #44                 @ 0x2c 
    /*00009f10*/ BL          0x0000000000009F10          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00009f14*/ MOV         R3, #65024                  @ 0xfe00 
    /*00009f18*/ MOVT        R3, #65535                  @ 0xffff 
    /*00009f1c*/ CMP         R0, #0 
    /*00009f20*/ MOVNE       R0, R3 
    /*00009f24*/ MOVEQ       R0, #0 
    /*00009f28*/ POP         {R4, PC} 
    /*00009f2c*/ ANDEQ       R0, R0, R0, ASR #32 
FUNC_END VPSS_DownSemaphore


FUNC_BEGIN VPSS_UpSemaphore
    /*00009f30*/ LDR         R2, [PC, #24]               @ 0x0000000000009f50 
    /*00009f34*/ MOV         R3, #92                     @ 0x5c 
    /*00009f38*/ PUSH        {R4, LR} 
    /*00009f3c*/ MLA         R0, R3, R0, R2 
    /*00009f40*/ ADD         R0, R0, #44                 @ 0x2c 
    /*00009f44*/ BL          0x0000000000009F44          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009f48*/ MOV         R0, #0 
    /*00009f4c*/ POP         {R4, PC} 
    /*00009f50*/ ANDEQ       R0, R0, R0, ASR #32 
FUNC_END VPSS_UpSemaphore


FUNC_BEGIN VPSS_IsGrpExisted
    /*00009f54*/ PUSH        {R4, R5, R6, LR} 
    /*00009f58*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00009f5c*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00009f60*/ MOV         R4, #92                     @ 0x5c 
    /*00009f64*/ SUB         SP, SP, #8 
    /*00009f68*/ MOV         R6, R0 
    /*00009f6c*/ MLA         R4, R4, R0, R5 
    /*00009f70*/ ADD         R1, SP, #4 
    /*00009f74*/ ADD         R4, R4, #112                @ 0x70 
    /*00009f78*/ MOV         R0, R4 
    /*00009f7c*/ BL          0x0000000000009F7C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009f80*/ LDR         R3, [R5, R6, LSL #2] 
    /*00009f84*/ MOV         R0, R4 
    /*00009f88*/ ADD         R1, SP, #4 
    /*00009f8c*/ ADDS        R4, R3, #0 
    /*00009f90*/ MOVNE       R4, #1 
    /*00009f94*/ BL          0x0000000000009F94          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009f98*/ MOV         R0, R4 
    /*00009f9c*/ ADD         SP, SP, #8 
    /*00009fa0*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_IsGrpExisted


FUNC_BEGIN VPSS_CheckModParam
    /*00009fa4*/ PUSH        {R4, LR} 
    /*00009fa8*/ MOV         R4, R0 
    /*00009fac*/ LDR         R3, [R0] 
    /*00009fb0*/ SUB         SP, SP, #8 
    /*00009fb4*/ CMP         R3, #1 
    /*00009fb8*/ MOVLS       R0, #0 
    /*00009fbc*/ BLS         VPSS_CheckModParam_x9fec
    /*00009fc0*/ STR         R3, [SP, #4] 
    /*00009fc4*/ MOVW        R2, #0                      @ .LC140 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f38] 
    /*00009fc8*/ MOVW        R3, #7542                   @ 0x1d76 
    /*00009fcc*/ MOVT        R2, #0                      @ .LC140 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f38] 
    /*00009fd0*/ STR         R3, [SP] 
    /*00009fd4*/ MOV         R1, #7 
    /*00009fd8*/ LDR         R3, [PC, #156]              @ 0x000000000000a07c 
    /*00009fdc*/ MOV         R0, #3 
    /*00009fe0*/ BL          0x0000000000009FE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009fe4*/ MOVW        R0, #32771                  @ 0x8003 
    /*00009fe8*/ MOVT        R0, #40967                  @ 0xa007 
    VPSS_CheckModParam_x9fec:
    /*00009fec*/ LDR         R3, [R4, #4] 
    /*00009ff0*/ BICS        R2, R3, #2 
    /*00009ff4*/ BNE         VPSS_CheckModParam_xa04c
    /*00009ff8*/ LDR         R3, [R4, #8] 
    /*00009ffc*/ SUB         R2, R3, #1 
    /*0000a000*/ CMP         R2, #15 
    /*0000a004*/ BHI         VPSS_CheckModParam_xa064
    /*0000a008*/ LDR         R3, [R4, #12] 
    /*0000a00c*/ CMP         R3, #1 
    /*0000a010*/ BHI         VPSS_CheckModParam_xa01c
    VPSS_CheckModParam_xa014:
    /*0000a014*/ ADD         SP, SP, #8 
    /*0000a018*/ POP         {R4, PC} 
    VPSS_CheckModParam_xa01c:
    /*0000a01c*/ MOVW        R2, #0                      @ .LC143 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ff4] 
    /*0000a020*/ MOVT        R2, #0                      @ .LC143 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ff4] 
    /*0000a024*/ STR         R3, [SP, #4] 
    /*0000a028*/ MOVW        R3, #7560                   @ 0x1d88 
    /*0000a02c*/ STR         R3, [SP] 
    VPSS_CheckModParam_xa030:
    /*0000a030*/ LDR         R3, [PC, #68]               @ 0x000000000000a07c 
    /*0000a034*/ MOV         R1, #7 
    /*0000a038*/ MOV         R0, #3 
    /*0000a03c*/ BL          0x000000000000A03C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a040*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000a044*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000a048*/ B           VPSS_CheckModParam_xa014
    VPSS_CheckModParam_xa04c:
    /*0000a04c*/ STR         R3, [SP, #4] 
    /*0000a050*/ MOVW        R2, #0                      @ .LC141 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f70] 
    /*0000a054*/ MOVW        R3, #7548                   @ 0x1d7c 
    /*0000a058*/ MOVT        R2, #0                      @ .LC141 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f70] 
    /*0000a05c*/ STR         R3, [SP] 
    /*0000a060*/ B           VPSS_CheckModParam_xa030
    VPSS_CheckModParam_xa064:
    /*0000a064*/ STR         R3, [SP, #4] 
    /*0000a068*/ MOVW        R2, #0                      @ .LC142 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fb0] 
    /*0000a06c*/ MOVW        R3, #7554                   @ 0x1d82 
    /*0000a070*/ MOVT        R2, #0                      @ .LC142 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fb0] 
    /*0000a074*/ STR         R3, [SP] 
    /*0000a078*/ B           VPSS_CheckModParam_xa030
    /*0000a07c*/ ANDEQ       R0, R0, IP, LSR #14 
FUNC_END VPSS_CheckModParam


FUNC_BEGIN VPSS_SetModParam
    /*0000a080*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000a084*/ SUB         SP, SP, #16 
    /*0000a088*/ MOV         R8, R0 
    /*0000a08c*/ BL          0x000000000000A08C          @ VPSS_CheckModParam [R_ARM_CALL: .text+0x9fa4] 
    /*0000a090*/ SUBS        R7, R0, #0 
    /*0000a094*/ BNE         VPSS_SetModParam_xa140
    /*0000a098*/ LDR         R5, [PC, #284]              @ 0x000000000000a1bc 
    /*0000a09c*/ MOV         R4, R7 
    /*0000a0a0*/ SUB         R6, R5, #112                @ 0x70 
    VPSS_SetModParam_xa0a4:
    /*0000a0a4*/ MOV         R0, R5 
    /*0000a0a8*/ ADD         R5, R5, #92                 @ 0x5c 
    /*0000a0ac*/ BL          0x000000000000A0AC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a0b0*/ SUBS        R7, R0, #0 
    /*0000a0b4*/ BNE         VPSS_SetModParam_xa1a8
    /*0000a0b8*/ LDR         R3, [R6, #4]! 
    /*0000a0bc*/ CMP         R3, #0 
    /*0000a0c0*/ BNE         VPSS_SetModParam_xa14c
    /*0000a0c4*/ ADD         R4, R4, #1 
    /*0000a0c8*/ CMP         R4, #16 
    /*0000a0cc*/ BNE         VPSS_SetModParam_xa0a4
    /*0000a0d0*/ LDR         R0, [PC, #232]              @ 0x000000000000a1c0 
    /*0000a0d4*/ ADD         R1, SP, #12 
    /*0000a0d8*/ SUB         R4, R0, #4 
    /*0000a0dc*/ BL          0x000000000000A0DC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a0e0*/ LDM         R8, {R2, R5} 
    /*0000a0e4*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x1ff8] 
    /*0000a0e8*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x1ff8] 
    /*0000a0ec*/ LDR         LR, [R8, #8] 
    /*0000a0f0*/ LDR         IP, [R8, #12] 
    /*0000a0f4*/ MOVW        R0, #0                      @ vpss_vb_source [R_ARM_MOVW_ABS_NC: .bss+0x678c] 
    /*0000a0f8*/ MOVT        R0, #0                      @ vpss_vb_source [R_ARM_MOVT_ABS: .bss+0x678c] 
    /*0000a0fc*/ STR         R2, [R3, #-3716]            @ 0xfffff17c 
    /*0000a100*/ MOVW        R2, #0                      @ vpss_split_node_num [R_ARM_MOVW_ABS_NC: .data+0xf4] 
    /*0000a104*/ MOVW        R3, #0                      @ bHdrSupport [R_ARM_MOVW_ABS_NC: .bss+0x6a5c] 
    /*0000a108*/ MOVT        R2, #0                      @ vpss_split_node_num [R_ARM_MOVT_ABS: .data+0xf4] 
    /*0000a10c*/ MOVT        R3, #0                      @ bHdrSupport [R_ARM_MOVT_ABS: .bss+0x6a5c] 
    /*0000a110*/ STR         R5, [R0] 
    /*0000a114*/ ADD         R1, SP, #12 
    /*0000a118*/ ADD         R0, R4, #4 
    /*0000a11c*/ STR         LR, [R2] 
    /*0000a120*/ SUB         R5, R4, #1472               @ 0x5c0 
    /*0000a124*/ STR         IP, [R3] 
    /*0000a128*/ BL          0x000000000000A128          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VPSS_SetModParam_xa12c:
    /*0000a12c*/ MOV         R0, R4 
    /*0000a130*/ SUB         R4, R4, #92                 @ 0x5c 
    /*0000a134*/ BL          0x000000000000A134          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a138*/ CMP         R5, R4 
    /*0000a13c*/ BNE         VPSS_SetModParam_xa12c
    VPSS_SetModParam_xa140:
    /*0000a140*/ MOV         R0, R7 
    /*0000a144*/ ADD         SP, SP, #16 
    /*0000a148*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_SetModParam_xa14c:
    /*0000a14c*/ MOVW        R3, #7612                   @ 0x1dbc 
    /*0000a150*/ MOVW        R2, #0                      @ .LC144 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2028] 
    /*0000a154*/ STR         R3, [SP] 
    /*0000a158*/ MOVT        R2, #0                      @ .LC144 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2028] 
    /*0000a15c*/ LDR         R3, [PC, #96]               @ 0x000000000000a1c4 
    /*0000a160*/ MOV         R1, #7 
    /*0000a164*/ MOV         R0, #3 
    /*0000a168*/ BL          0x000000000000A168          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a16c*/ LDR         R3, [PC, #84]               @ 0x000000000000a1c8 
    /*0000a170*/ MOV         R2, #92                     @ 0x5c 
    /*0000a174*/ SUB         R5, R3, #48                 @ 0x30 
    /*0000a178*/ MLA         R4, R2, R4, R3 
    /*0000a17c*/ ADD         R4, R4, #44                 @ 0x2c 
    VPSS_SetModParam_xa180:
    /*0000a180*/ MOV         R0, R4 
    /*0000a184*/ SUB         R4, R4, #92                 @ 0x5c 
    /*0000a188*/ BL          0x000000000000A188          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a18c*/ CMP         R4, R5 
    /*0000a190*/ BNE         VPSS_SetModParam_xa180
    /*0000a194*/ MOVW        R7, #32777                  @ 0x8009 
    /*0000a198*/ MOVT        R7, #40967                  @ 0xa007 
    /*0000a19c*/ MOV         R0, R7 
    /*0000a1a0*/ ADD         SP, SP, #16 
    /*0000a1a4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_SetModParam_xa1a8:
    /*0000a1a8*/ MOV         R7, #65024                  @ 0xfe00 
    /*0000a1ac*/ MOVT        R7, #65535                  @ 0xffff 
    /*0000a1b0*/ MOV         R0, R7 
    /*0000a1b4*/ ADD         SP, SP, #16 
    /*0000a1b8*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*0000a1bc*/ ANDEQ       R0, R0, IP, RRX 
    /*0000a1c0*/ LDRDEQ      R0, [R0], -R4 
    /*0000a1c4*/ ANDEQ       R0, R0, R0, ASR #14 
    /*0000a1c8*/ ANDEQ       R0, R0, R0, ASR #32 
FUNC_END VPSS_SetModParam


FUNC_BEGIN VPSS_GetModParam
    /*0000a1cc*/ PUSH        {R4, R5, R6, LR} 
    /*0000a1d0*/ MOV         R4, R0 
    /*0000a1d4*/ LDR         R0, [PC, #92]               @ 0x000000000000a238 
    /*0000a1d8*/ BL          0x000000000000A1D8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a1dc*/ SUBS        R5, R0, #0 
    /*0000a1e0*/ BNE         VPSS_GetModParam_xa22c
    /*0000a1e4*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x1ff8] 
    /*0000a1e8*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x1ff8] 
    /*0000a1ec*/ MOVW        R1, #0                      @ vpss_vb_source [R_ARM_MOVW_ABS_NC: .bss+0x678c] 
    /*0000a1f0*/ MOVW        R2, #0                      @ vpss_split_node_num [R_ARM_MOVW_ABS_NC: .data+0xf4] 
    /*0000a1f4*/ LDR         IP, [R3, #-3716]            @ 0xfffff17c 
    /*0000a1f8*/ MOVT        R1, #0                      @ vpss_vb_source [R_ARM_MOVT_ABS: .bss+0x678c] 
    /*0000a1fc*/ MOVT        R2, #0                      @ vpss_split_node_num [R_ARM_MOVT_ABS: .data+0xf4] 
    /*0000a200*/ MOVW        R3, #0                      @ bHdrSupport [R_ARM_MOVW_ABS_NC: .bss+0x6a5c] 
    /*0000a204*/ MOVT        R3, #0                      @ bHdrSupport [R_ARM_MOVT_ABS: .bss+0x6a5c] 
    /*0000a208*/ LDR         R0, [PC, #40]               @ 0x000000000000a238 
    /*0000a20c*/ STR         IP, [R4] 
    /*0000a210*/ LDR         R1, [R1] 
    /*0000a214*/ LDR         R2, [R2] 
    /*0000a218*/ LDR         R3, [R3] 
    /*0000a21c*/ STMIB       R4, {R1, R2, R3} 
    /*0000a220*/ BL          0x000000000000A220          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a224*/ MOV         R0, R5 
    /*0000a228*/ POP         {R4, R5, R6, PC} 
    VPSS_GetModParam_xa22c:
    /*0000a22c*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000a230*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000a234*/ POP         {R4, R5, R6, PC} 
    /*0000a238*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VPSS_GetModParam


FUNC_BEGIN VPSS_ChnWorkingNumAdd
    /*0000a23c*/ CMP         R1, #2 
    /*0000a240*/ BXHI        LR 
    /*0000a244*/ B           0x0000000000000390 
FUNC_END VPSS_ChnWorkingNumAdd


FUNC_BEGIN VPSS_ChnWorkingNumSub
    /*0000a248*/ CMP         R1, #2 
    /*0000a24c*/ BXHI        LR 
    /*0000a250*/ B           0x00000000000003BC 
FUNC_END VPSS_ChnWorkingNumSub


FUNC_BEGIN VPSS_RegionLumaOSDTaskCallBack
    /*0000a254*/ MOVW        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000a258*/ MOVW        R0, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0000a25c*/ MOVT        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000a260*/ MOVT        R0, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0000a264*/ PUSH        {R4, R5, R6, LR} 
    /*0000a268*/ MOV         R4, R1 
    /*0000a26c*/ MOV         R5, R2 
    /*0000a270*/ LDR         R1, [IP, R1, LSL #2] 
    /*0000a274*/ LDR         R2, [R0, R4, LSL #2] 
    /*0000a278*/ SUB         SP, SP, #8 
    /*0000a27c*/ CMP         R2, #0 
    /*0000a280*/ CMPNE       R1, #0 
    /*0000a284*/ MOVEQ       R6, #1 
    /*0000a288*/ MOVNE       R6, #0 
    /*0000a28c*/ BEQ         VPSS_RegionLumaOSDTaskCallBack_xa320
    /*0000a290*/ LDR         R1, [R3, #736]              @ 0x2e0 
    /*0000a294*/ CMP         R1, #1 
    /*0000a298*/ BNE         VPSS_RegionLumaOSDTaskCallBack_xa2e0
    /*0000a29c*/ MOV         R2, #23 
    /*0000a2a0*/ MOVW        R3, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000a2a4*/ MLA         R2, R2, R4, R5 
    /*0000a2a8*/ MOVT        R3, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000a2ac*/ ADD         R2, R3, R2, LSL #2 
    /*0000a2b0*/ STR         R1, [R2, #68]               @ 0x44 
    VPSS_RegionLumaOSDTaskCallBack_xa2b4:
    /*0000a2b4*/ MOV         R2, #23 
    /*0000a2b8*/ MOV         R0, #92                     @ 0x5c 
    /*0000a2bc*/ MLA         R2, R2, R4, R5 
    /*0000a2c0*/ MOV         R1, #1 
    /*0000a2c4*/ MLA         R0, R0, R4, R3 
    /*0000a2c8*/ ADD         R2, R2, #14 
    /*0000a2cc*/ ADD         R0, R0, #32 
    /*0000a2d0*/ STR         R1, [R3, R2, LSL #2] 
    /*0000a2d4*/ ADD         SP, SP, #8 
    /*0000a2d8*/ POP         {R4, R5, R6, LR} 
    VPSS_RegionLumaOSDTaskCallBack_xa2dc:
    /*0000a2dc*/ B           VPSS_RegionLumaOSDTaskCallBack_xa2dc@ osal_wakeup [R_ARM_JUMP24: +0x0] 
    VPSS_RegionLumaOSDTaskCallBack_xa2e0:
    /*0000a2e0*/ MOVW        R2, #1409                   @ 0x581 
    /*0000a2e4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x754] 
    /*0000a2e8*/ STR         R2, [SP] 
    /*0000a2ec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x754] 
    /*0000a2f0*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2094] 
    /*0000a2f4*/ MOV         R1, #7 
    /*0000a2f8*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2094] 
    /*0000a2fc*/ MOV         R0, #3 
    /*0000a300*/ BL          0x000000000000A300          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a304*/ MOV         R2, #23 
    /*0000a308*/ MLA         R2, R2, R4, R5 
    /*0000a30c*/ MOVW        R3, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000a310*/ MOVT        R3, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000a314*/ ADD         R2, R3, R2, LSL #2 
    /*0000a318*/ STR         R6, [R2, #68]               @ 0x44 
    /*0000a31c*/ B           VPSS_RegionLumaOSDTaskCallBack_xa2b4
    VPSS_RegionLumaOSDTaskCallBack_xa320:
    /*0000a320*/ MOVW        R2, #1402                   @ 0x57a 
    /*0000a324*/ MOV         R1, #7 
    /*0000a328*/ STR         R2, [SP] 
    /*0000a32c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x754] 
    /*0000a330*/ STR         R4, [SP, #4] 
    /*0000a334*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x754] 
    /*0000a338*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2068] 
    /*0000a33c*/ MOV         R0, #3 
    /*0000a340*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2068] 
    /*0000a344*/ BL          0x000000000000A344          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a348*/ MOV         R2, #23 
    /*0000a34c*/ MLA         R2, R2, R4, R5 
    /*0000a350*/ MOVW        R3, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000a354*/ MOVT        R3, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000a358*/ MOV         R1, #0 
    /*0000a35c*/ ADD         R2, R2, #16 
    /*0000a360*/ ADD         R2, R3, R2, LSL #2 
    /*0000a364*/ STR         R1, [R2, #4] 
    /*0000a368*/ B           VPSS_RegionLumaOSDTaskCallBack_xa2b4
FUNC_END VPSS_RegionLumaOSDTaskCallBack


FUNC_BEGIN VPSS_VgsJobCallBack
    /*0000a36c*/ PUSH        {R4, R5, R6, LR} 
    /*0000a370*/ SUB         SP, SP, #352                @ 0x160 
    /*0000a374*/ MOV         R5, R3 
    /*0000a378*/ MOV         R6, R1 
    /*0000a37c*/ MOV         R4, R2 
    /*0000a380*/ MOV         R1, #0 
    /*0000a384*/ MOV         R2, #336                    @ 0x150 
    /*0000a388*/ ADD         R0, SP, #16 
    /*0000a38c*/ BL          0x000000000000A38C          @ memset [R_ARM_CALL: +0x0] 
    /*0000a390*/ LDR         R0, [R5, #48]               @ 0x30 
    /*0000a394*/ LDRD        R2, [R5, #8] 
    /*0000a398*/ LDR         R1, [R5] 
    /*0000a39c*/ CMP         R0, #1 
    /*0000a3a0*/ STRD        R2, [SP, #136]              @ 0x88 
    /*0000a3a4*/ STR         R1, [SP, #344]              @ 0x158 
    /*0000a3a8*/ BEQ         VPSS_VgsJobCallBack_xa3e4
    /*0000a3ac*/ MOV         R1, R4 
    /*0000a3b0*/ MOV         R0, R6 
    /*0000a3b4*/ BL          0x000000000000A3B4          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*0000a3b8*/ LDR         R3, [R5, #48]               @ 0x30 
    /*0000a3bc*/ MOVW        R1, #981                    @ 0x3d5 
    /*0000a3c0*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20c4] 
    /*0000a3c4*/ STR         R1, [SP] 
    /*0000a3c8*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20c4] 
    /*0000a3cc*/ STR         R3, [SP, #8] 
    /*0000a3d0*/ MOV         R1, #7 
    /*0000a3d4*/ STR         R6, [SP, #4] 
    /*0000a3d8*/ MOV         R0, #3 
    /*0000a3dc*/ LDR         R3, [PC, #60]               @ 0x000000000000a420 
    /*0000a3e0*/ BL          0x000000000000A3E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_VgsJobCallBack_xa3e4:
    /*0000a3e4*/ MOV         R4, #92                     @ 0x5c 
    /*0000a3e8*/ MOV         R1, #10 
    /*0000a3ec*/ MUL         R4, R4, R6 
    /*0000a3f0*/ ADD         R0, SP, #16 
    /*0000a3f4*/ BL          0x000000000000A3F4          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000a3f8*/ MOVW        R5, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000a3fc*/ MOVT        R5, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000a400*/ ADD         R0, R4, #16 
    /*0000a404*/ ADD         R0, R5, R0 
    /*0000a408*/ BL          0x000000000000A408          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0000a40c*/ ADD         R0, R4, #36                 @ 0x24 
    /*0000a410*/ ADD         R0, R5, R0 
    /*0000a414*/ BL          0x000000000000A414          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000a418*/ ADD         SP, SP, #352                @ 0x160 
    /*0000a41c*/ POP         {R4, R5, R6, PC} 
    /*0000a420*/ ANDEQ       R0, R0, R4, ROR R7 
FUNC_END VPSS_VgsJobCallBack


FUNC_BEGIN VPSS_VgsScaleBypassJobCallBack
    /*0000a424*/ PUSH        {R4, R5, R6, LR} 
    /*0000a428*/ MOV         R4, R3 
    /*0000a42c*/ LDR         R3, [R3, #48]               @ 0x30 
    /*0000a430*/ SUB         SP, SP, #16 
    /*0000a434*/ MOV         R6, R1 
    /*0000a438*/ CMP         R3, #1 
    /*0000a43c*/ BEQ         VPSS_VgsScaleBypassJobCallBack_xa478
    /*0000a440*/ MOV         R1, R2 
    /*0000a444*/ MOV         R0, R6 
    /*0000a448*/ BL          0x000000000000A448          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*0000a44c*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0000a450*/ MOVW        R1, #2407                   @ 0x967 
    /*0000a454*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2100] 
    /*0000a458*/ STR         R1, [SP] 
    /*0000a45c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2100] 
    /*0000a460*/ STR         R3, [SP, #8] 
    /*0000a464*/ MOV         R1, #7 
    /*0000a468*/ STR         R6, [SP, #4] 
    /*0000a46c*/ MOV         R0, #3 
    /*0000a470*/ LDR         R3, [PC, #48]               @ 0x000000000000a4a8 
    /*0000a474*/ BL          0x000000000000A474          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_VgsScaleBypassJobCallBack_xa478:
    /*0000a478*/ MOV         R4, #92                     @ 0x5c 
    /*0000a47c*/ MOVW        R5, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000a480*/ MUL         R4, R4, R6 
    /*0000a484*/ MOVT        R5, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000a488*/ ADD         R0, R4, #16 
    /*0000a48c*/ ADD         R0, R5, R0 
    /*0000a490*/ BL          0x000000000000A490          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0000a494*/ ADD         R0, R4, #36                 @ 0x24 
    /*0000a498*/ ADD         R0, R5, R0 
    /*0000a49c*/ ADD         SP, SP, #16 
    /*0000a4a0*/ POP         {R4, R5, R6, LR} 
    VPSS_VgsScaleBypassJobCallBack_xa4a4:
    /*0000a4a4*/ B           VPSS_VgsScaleBypassJobCallBack_xa4a4@ osal_wakeup [R_ARM_JUMP24: +0x0] 
    /*0000a4a8*/ ANDEQ       R0, R0, R8, LSL #15 
FUNC_END VPSS_VgsScaleBypassJobCallBack


FUNC_BEGIN VPSS_PackageVgsTaskData
    /*0000a4ac*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000a4b0*/ MOV         R4, R3 
    /*0000a4b4*/ MOV         R5, R2 
    /*0000a4b8*/ STR         R0, [R3, #728]              @ 0x2d8 
    /*0000a4bc*/ MOV         R2, #0 
    /*0000a4c0*/ STR         R1, [R4, #732]              @ 0x2dc 
    /*0000a4c4*/ STR         R2, [R4, #720]              @ 0x2d0 
    /*0000a4c8*/ MOV         R3, #7 
    /*0000a4cc*/ STR         R3, [R4, #724]              @ 0x2d4 
    /*0000a4d0*/ ADD         IP, R5, #352                @ 0x160 
    /*0000a4d4*/ LDR         R6, [R5, #340]              @ 0x154 
    /*0000a4d8*/ ADD         R3, R4, #688                @ 0x2b0 
    /*0000a4dc*/ STR         R2, [R4, #676]              @ 0x2a4 
    /*0000a4e0*/ ADD         LR, R4, #704                @ 0x2c0 
    /*0000a4e4*/ MOV         R1, R5 
    /*0000a4e8*/ MOV         R0, R4 
    /*0000a4ec*/ STR         R6, [R4, #672]              @ 0x2a0 
    /*0000a4f0*/ LDR         R6, [R5, #336]              @ 0x150 
    /*0000a4f4*/ STR         R2, [R4, #684]              @ 0x2ac 
    /*0000a4f8*/ MOV         R2, #336                    @ 0x150 
    /*0000a4fc*/ STR         R6, [R4, #680]              @ 0x2a8 
    /*0000a500*/ LDRD        R6, [IP, #-8] 
    /*0000a504*/ STRD        R6, [R3] 
    /*0000a508*/ LDRD        R6, [IP] 
    /*0000a50c*/ STRD        R6, [LR, #-8] 
    /*0000a510*/ BL          0x000000000000A510          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000a514*/ MOV         R1, R5 
    /*0000a518*/ ADD         R0, R4, #336                @ 0x150 
    /*0000a51c*/ MOV         R2, #336                    @ 0x150 
    /*0000a520*/ POP         {R4, R5, R6, R7, R8, LR} 
    VPSS_PackageVgsTaskData_xa524:
    /*0000a524*/ B           VPSS_PackageVgsTaskData_xa524@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VPSS_PackageVgsTaskData


FUNC_BEGIN VpssChnSnapProc
    /*0000a528*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000a52c*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000a530*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000a534*/ SUB         SP, SP, #16 
    /*0000a538*/ LDR         R5, [R3, R0, LSL #2] 
    /*0000a53c*/ MOV         R3, #0 
    /*0000a540*/ MOV         R6, R0 
    /*0000a544*/ MOV         R7, R1 
    /*0000a548*/ ADD         R4, R5, R1, LSL #2 
    /*0000a54c*/ MOV         R8, R2 
    /*0000a550*/ ADD         R4, R4, #28672              @ 0x7000 
    /*0000a554*/ STR         R3, [SP, #8] 
    /*0000a558*/ STR         R3, [SP, #12] 
    /*0000a55c*/ STR         R3, [R4, #3112]             @ 0xc28 
    /*0000a560*/ BL          0x000000000000A560          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0000a564*/ CMP         R0, #0 
    /*0000a568*/ BNE         VpssChnSnapProc_xa578
    VpssChnSnapProc_xa56c:
    /*0000a56c*/ MOV         R0, #0 
    /*0000a570*/ ADD         SP, SP, #16 
    /*0000a574*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssChnSnapProc_xa578:
    /*0000a578*/ MOV         R0, R6 
    /*0000a57c*/ BL          0x000000000000A57C          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0000a580*/ CMP         R0, #2 
    /*0000a584*/ BEQ         VpssChnSnapProc_xa56c
    /*0000a588*/ MOV         R0, #16 
    /*0000a58c*/ BL          0x000000000000A58C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a590*/ LDR         R3, [R0, #32] 
    /*0000a594*/ CMP         R3, #0 
    /*0000a598*/ BEQ         VpssChnSnapProc_xa5fc
    /*0000a59c*/ MOV         R0, #16 
    /*0000a5a0*/ BL          0x000000000000A5A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a5a4*/ ADD         R1, SP, #8 
    /*0000a5a8*/ LDR         R3, [R0, #32] 
    /*0000a5ac*/ MOV         R0, R6 
    /*0000a5b0*/ BLX         R3 
    /*0000a5b4*/ CMP         R0, #0 
    /*0000a5b8*/ BNE         VpssChnSnapProc_xa5fc
    /*0000a5bc*/ LDR         R3, [SP, #8] 
    /*0000a5c0*/ MOVW        R1, #8536                   @ 0x2158 
    /*0000a5c4*/ MUL         R1, R1, R8 
    /*0000a5c8*/ CMP         R3, #0 
    /*0000a5cc*/ LDR         R2, [SP, #12] 
    /*0000a5d0*/ MOV         R0, #0 
    /*0000a5d4*/ MOVNE       R3, #1 
    /*0000a5d8*/ STRNE       R3, [R4, #3112]             @ 0xc28 
    /*0000a5dc*/ MOV         R3, #776                    @ 0x308 
    /*0000a5e0*/ MLA         R1, R3, R7, R1 
    /*0000a5e4*/ ADD         R1, R5, R1 
    /*0000a5e8*/ LDR         R3, [R1, #2904]             @ 0xb58 
    /*0000a5ec*/ ORR         R3, R3, R2 
    /*0000a5f0*/ STR         R3, [R1, #2904]             @ 0xb58 
    /*0000a5f4*/ ADD         SP, SP, #16 
    /*0000a5f8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssChnSnapProc_xa5fc:
    /*0000a5fc*/ MOV         R3, #118                    @ 0x76 
    /*0000a600*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2150] 
    /*0000a604*/ STR         R3, [SP] 
    /*0000a608*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2150] 
    /*0000a60c*/ LDR         R3, [PC, #12]               @ 0x000000000000a620 
    /*0000a610*/ MOV         R1, #7 
    /*0000a614*/ MOV         R0, #6 
    /*0000a618*/ BL          0x000000000000A618          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a61c*/ B           VpssChnSnapProc_xa56c
    /*0000a620*/ ANDEQ       R0, R0, R8, LSR #15 
FUNC_END VpssChnSnapProc


FUNC_BEGIN VPSS_CoverexTaskCallBack.part.2
    /*0000a624*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000a628*/ SUB         SP, SP, #12 
    /*0000a62c*/ MOVW        R3, #1209                   @ 0x4b9 
    /*0000a630*/ MOV         R1, #7 
    /*0000a634*/ STR         R3, [SP] 
    /*0000a638*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2184] 
    /*0000a63c*/ LDR         R3, [PC, #16]               @ 0x000000000000a654 
    /*0000a640*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2184] 
    /*0000a644*/ MOV         R0, #3 
    /*0000a648*/ BL          0x000000000000A648          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a64c*/ ADD         SP, SP, #12 
    /*0000a650*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000a654*/ @           <UNDEFINED> instruction: 0x000007b8 
FUNC_END VPSS_CoverexTaskCallBack.part.2


FUNC_BEGIN VPSS_MKP_PutVb
    /*0000a658*/ PUSH        {R4, R6, R7, LR} 
    /*0000a65c*/ MOV         R4, R0 
    /*0000a660*/ SUB         SP, SP, #8 
    /*0000a664*/ MOV         R0, #1 
    /*0000a668*/ MOV         R6, R2 
    /*0000a66c*/ MOV         R7, R3 
    /*0000a670*/ BL          0x000000000000A670          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a674*/ MOV         R2, R6 
    /*0000a678*/ MOV         R3, R7 
    /*0000a67c*/ LDR         R1, [R0, #84]               @ 0x54 
    /*0000a680*/ MOV         R0, R4 
    /*0000a684*/ BLX         R1 
    /*0000a688*/ CMP         R0, #0 
    /*0000a68c*/ BEQ         VPSS_MKP_PutVb_xa6d4
    /*0000a690*/ MOV         R0, #1 
    /*0000a694*/ BL          0x000000000000A694          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a698*/ LDR         R3, [SP, #24] 
    /*0000a69c*/ MOV         R2, R6 
    /*0000a6a0*/ STR         R3, [SP] 
    /*0000a6a4*/ MOV         R3, R7 
    /*0000a6a8*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000a6ac*/ MOV         R0, R4 
    /*0000a6b0*/ BLX         R1 
    /*0000a6b4*/ CMP         R0, #0 
    /*0000a6b8*/ MOVNE       R3, #84                     @ 0x54 
    /*0000a6bc*/ MOVWNE      R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x21b4] 
    /*0000a6c0*/ STRNE       R3, [SP] 
    /*0000a6c4*/ MOVTNE      R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x21b4] 
    /*0000a6c8*/ BNE         VPSS_MKP_PutVb_xa6e4
    VPSS_MKP_PutVb_xa6cc:
    /*0000a6cc*/ ADD         SP, SP, #8 
    /*0000a6d0*/ POP         {R4, R6, R7, PC} 
    VPSS_MKP_PutVb_xa6d4:
    /*0000a6d4*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x21dc] 
    /*0000a6d8*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x21dc] 
    /*0000a6dc*/ MOV         R3, #90                     @ 0x5a 
    /*0000a6e0*/ STR         R3, [SP] 
    VPSS_MKP_PutVb_xa6e4:
    /*0000a6e4*/ LDR         R3, [PC, #20]               @ 0x000000000000a700 
    /*0000a6e8*/ MOV         R1, #7 
    /*0000a6ec*/ MOV         R0, #3 
    /*0000a6f0*/ BL          0x000000000000A6F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a6f4*/ MOVW        R0, #32777                  @ 0x8009 
    /*0000a6f8*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000a6fc*/ B           VPSS_MKP_PutVb_xa6cc
    /*0000a700*/ LDRDEQ      R0, [R0], -R4 
FUNC_END VPSS_MKP_PutVb


FUNC_BEGIN VpssSendFail
    /*0000a704*/ MOVW        R3, #8536                   @ 0x2158 
    /*0000a708*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000a70c*/ MOV         R7, R2 
    /*0000a710*/ MOV         R4, #776                    @ 0x308 
    /*0000a714*/ SUB         SP, SP, #8 
    /*0000a718*/ MUL         R2, R3, R2 
    /*0000a71c*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000a720*/ MLA         R4, R4, R1, R2 
    /*0000a724*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000a728*/ MOV         R6, R1 
    /*0000a72c*/ LDR         R5, [R3, R0, LSL #2] 
    /*0000a730*/ ADD         R4, R5, R4 
    /*0000a734*/ ADD         R8, R4, #2768               @ 0xad0 
    /*0000a738*/ LDRD        R2, [R8] 
    /*0000a73c*/ ORRS        R3, R2, R3 
    /*0000a740*/ BNE         VpssSendFail_xa7d0
    VpssSendFail_xa744:
    /*0000a744*/ MOVW        R4, #8536                   @ 0x2158 
    /*0000a748*/ MOV         R3, #776                    @ 0x308 
    /*0000a74c*/ MUL         R4, R4, R7 
    /*0000a750*/ MOVW        R7, #3128                   @ 0xc38 
    /*0000a754*/ MLA         R4, R3, R6, R4 
    /*0000a758*/ ADD         R4, R5, R4 
    /*0000a75c*/ LDRD        R2, [R4, R7] 
    /*0000a760*/ ORRS        R3, R2, R3 
    /*0000a764*/ BEQ         VpssSendFail_xa774
    /*0000a768*/ LDR         R3, [R4, #2632]             @ 0xa48 
    /*0000a76c*/ CMP         R3, #0 
    /*0000a770*/ BNE         VpssSendFail_xa780
    VpssSendFail_xa774:
    /*0000a774*/ MOV         R0, #0 
    /*0000a778*/ ADD         SP, SP, #8 
    /*0000a77c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssSendFail_xa780:
    /*0000a780*/ MOV         R0, #1 
    /*0000a784*/ BL          0x000000000000A784          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a788*/ LDR         IP, [R4, #3336]             @ 0xd08 
    /*0000a78c*/ LDRD        R2, [R4, R7] 
    /*0000a790*/ MOV         R1, #10 
    /*0000a794*/ STR         R1, [SP] 
    /*0000a798*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000a79c*/ MOV         R0, IP 
    /*0000a7a0*/ BLX         R1 
    /*0000a7a4*/ CMP         R0, #0 
    /*0000a7a8*/ BEQ         VpssSendFail_xa774
    /*0000a7ac*/ MOV         R3, #194                    @ 0xc2 
    /*0000a7b0*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2204] 
    /*0000a7b4*/ STR         R3, [SP] 
    /*0000a7b8*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2204] 
    /*0000a7bc*/ LDR         R3, [PC, #92]               @ 0x000000000000a820 
    /*0000a7c0*/ MOV         R1, #7 
    /*0000a7c4*/ MOV         R0, #3 
    /*0000a7c8*/ BL          0x000000000000A7C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a7cc*/ B           VpssSendFail_xa774
    VpssSendFail_xa7d0:
    /*0000a7d0*/ MOV         R0, #1 
    /*0000a7d4*/ BL          0x000000000000A7D4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a7d8*/ LDR         IP, [R4, #2976]             @ 0xba0 
    /*0000a7dc*/ LDRD        R2, [R8] 
    /*0000a7e0*/ MOV         R1, #10 
    /*0000a7e4*/ STR         R1, [SP] 
    /*0000a7e8*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000a7ec*/ MOV         R0, IP 
    /*0000a7f0*/ BLX         R1 
    /*0000a7f4*/ CMP         R0, #0 
    /*0000a7f8*/ BEQ         VpssSendFail_xa744
    /*0000a7fc*/ MOV         R3, #181                    @ 0xb5 
    /*0000a800*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2204] 
    /*0000a804*/ STR         R3, [SP] 
    /*0000a808*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2204] 
    /*0000a80c*/ LDR         R3, [PC, #12]               @ 0x000000000000a820 
    /*0000a810*/ MOV         R1, #7 
    /*0000a814*/ MOV         R0, #3 
    /*0000a818*/ BL          0x000000000000A818          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a81c*/ B           VpssSendFail_xa744
    /*0000a820*/ ANDEQ       R0, R0, R4, ROR #15 
FUNC_END VpssSendFail


FUNC_BEGIN VpssFakeSendLowDelayFrame
    /*0000a824*/ MOVW        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000a828*/ CMP         R3, #2 
    /*0000a82c*/ MOVT        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000a830*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000a834*/ MOV         R4, R0 
    /*0000a838*/ SUB         SP, SP, #20 
    /*0000a83c*/ MOV         R6, R1 
    /*0000a840*/ MOV         R5, R2 
    /*0000a844*/ LDR         R7, [IP, R0, LSL #2] 
    /*0000a848*/ BEQ         VpssFakeSendLowDelayFrame_xa954
    /*0000a84c*/ CMP         R3, #1 
    /*0000a850*/ BEQ         VpssFakeSendLowDelayFrame_xa8dc
    /*0000a854*/ LDR         R2, [R5, #312]              @ 0x138 
    /*0000a858*/ MOV         R1, #0 
    /*0000a85c*/ MOV         R9, R1 
    /*0000a860*/ CMP         R2, #0 
    /*0000a864*/ BEQ         VpssFakeSendLowDelayFrame_xa968
    VpssFakeSendLowDelayFrame_xa868:
    /*0000a868*/ UXTB        R1, R1 
    /*0000a86c*/ AND         R8, R9, #2 
    VpssFakeSendLowDelayFrame_xa870:
    /*0000a870*/ STRB        R1, [R2, #65]               @ 0x41 
    /*0000a874*/ MOV         R3, #1 
    /*0000a878*/ STRB        R3, [R2, #64]               @ 0x40 
    /*0000a87c*/ MOV         R0, #2 
    /*0000a880*/ LDR         R3, [R5, #12] 
    /*0000a884*/ CMP         R3, #39                     @ 0x27 
    /*0000a888*/ LDREQ       R3, [R5, #4] 
    /*0000a88c*/ LSREQ       R3, R3, #1 
    /*0000a890*/ STRHEQ      R3, [R2, #32] 
    /*0000a894*/ BL          0x000000000000A894          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a898*/ STR         R5, [SP, #4] 
    /*0000a89c*/ MOV         R1, #6 
    /*0000a8a0*/ MOV         R3, R9 
    /*0000a8a4*/ STR         R1, [SP] 
    /*0000a8a8*/ MOV         R2, R6 
    /*0000a8ac*/ MOV         R1, R4 
    /*0000a8b0*/ LDR         R5, [R0, #40]               @ 0x28 
    /*0000a8b4*/ MOV         R0, #7 
    /*0000a8b8*/ BLX         R5 
    /*0000a8bc*/ CMP         R8, #0 
    /*0000a8c0*/ BNE         VpssFakeSendLowDelayFrame_xa920
    VpssFakeSendLowDelayFrame_xa8c4:
    /*0000a8c4*/ MOV         R0, R4 
    /*0000a8c8*/ MOV         R1, R6 
    /*0000a8cc*/ BL          0x000000000000A8CC          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*0000a8d0*/ MOV         R0, #0 
    /*0000a8d4*/ ADD         SP, SP, #20 
    /*0000a8d8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssFakeSendLowDelayFrame_xa8dc:
    /*0000a8dc*/ LDR         R2, [R2, #312]              @ 0x138 
    /*0000a8e0*/ CMP         R2, #0 
    /*0000a8e4*/ MOVNE       R8, #2 
    /*0000a8e8*/ MOVNE       R1, R3 
    /*0000a8ec*/ MOVNE       R9, R8 
    /*0000a8f0*/ BNE         VpssFakeSendLowDelayFrame_xa870
    /*0000a8f4*/ MOV         R0, #2 
    /*0000a8f8*/ BL          0x000000000000A8F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a8fc*/ MOV         R2, #6 
    /*0000a900*/ STR         R5, [SP, #4] 
    /*0000a904*/ MOV         R3, #2 
    /*0000a908*/ STR         R2, [SP] 
    /*0000a90c*/ MOV         R1, R4 
    /*0000a910*/ MOV         R2, R6 
    /*0000a914*/ LDR         R5, [R0, #40]               @ 0x28 
    /*0000a918*/ MOV         R0, #7 
    /*0000a91c*/ BLX         R5 
    VpssFakeSendLowDelayFrame_xa920:
    /*0000a920*/ ADD         R5, SP, #8 
    /*0000a924*/ ADD         R7, R7, R6, LSL #2 
    /*0000a928*/ ADD         R7, R7, #28672              @ 0x7000 
    /*0000a92c*/ MOV         R0, R5 
    /*0000a930*/ BL          0x000000000000A930          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*0000a934*/ LDM         R5, {R2, R3} 
    /*0000a938*/ MOV         R1, R6 
    /*0000a93c*/ MOV         R0, R4 
    /*0000a940*/ BL          0x000000000000A940          @ VpssChnFrameRateStatistic [R_ARM_CALL: .text+0x168a0] 
    /*0000a944*/ LDR         R3, [R7, #3164]             @ 0xc5c 
    /*0000a948*/ ADD         R3, R3, #1 
    /*0000a94c*/ STR         R3, [R7, #3164]             @ 0xc5c 
    /*0000a950*/ B           VpssFakeSendLowDelayFrame_xa8c4
    VpssFakeSendLowDelayFrame_xa954:
    /*0000a954*/ LDR         R2, [R5, #312]              @ 0x138 
    /*0000a958*/ MOV         R1, #1 
    /*0000a95c*/ MOV         R9, #4 
    /*0000a960*/ CMP         R2, #0 
    /*0000a964*/ BNE         VpssFakeSendLowDelayFrame_xa868
    VpssFakeSendLowDelayFrame_xa968:
    /*0000a968*/ MOV         R0, #2 
    /*0000a96c*/ BL          0x000000000000A96C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a970*/ STR         R5, [SP, #4] 
    /*0000a974*/ MOV         R1, #6 
    /*0000a978*/ MOV         R3, R9 
    /*0000a97c*/ STR         R1, [SP] 
    /*0000a980*/ MOV         R2, R6 
    /*0000a984*/ MOV         R1, R4 
    /*0000a988*/ LDR         R5, [R0, #40]               @ 0x28 
    /*0000a98c*/ MOV         R0, #7 
    /*0000a990*/ BLX         R5 
    /*0000a994*/ B           VpssFakeSendLowDelayFrame_xa8c4
FUNC_END VpssFakeSendLowDelayFrame


FUNC_BEGIN VpssSendLowDelayFrame
    /*0000a998*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000a99c*/ MOV         R6, #92                     @ 0x5c 
    /*0000a9a0*/ MUL         R6, R6, R0 
    /*0000a9a4*/ MOVW        R5, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000a9a8*/ MOVT        R5, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000a9ac*/ SUB         SP, SP, #36                 @ 0x24 
    /*0000a9b0*/ MOVW        R8, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000a9b4*/ MOVT        R8, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000a9b8*/ ADD         R7, R6, #48                 @ 0x30 
    /*0000a9bc*/ MOV         R4, R0 
    /*0000a9c0*/ ADD         R7, R5, R7 
    /*0000a9c4*/ MOV         R9, R1 
    /*0000a9c8*/ ADD         R1, SP, #28 
    /*0000a9cc*/ MOV         FP, R2 
    /*0000a9d0*/ MOV         R0, R7 
    /*0000a9d4*/ BL          0x000000000000A9D4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a9d8*/ LDR         R2, [R8, R4, LSL #2] 
    /*0000a9dc*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0000a9e0*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0000a9e4*/ MOV         R0, R4 
    /*0000a9e8*/ STR         R2, [SP, #8] 
    /*0000a9ec*/ LDR         SL, [R3, R4, LSL #2] 
    /*0000a9f0*/ BL          0x000000000000A9F0          @ VpssCheckBindInfo [R_ARM_CALL: .text+0x698] 
    /*0000a9f4*/ CMP         R0, #0 
    /*0000a9f8*/ BNE         VpssSendLowDelayFrame_xaa6c
    VpssSendLowDelayFrame_xa9fc:
    /*0000a9fc*/ MOV         R2, #72                     @ 0x48 
    /*0000aa00*/ MOV         R3, #24 
    /*0000aa04*/ MUL         R2, R2, FP 
    /*0000aa08*/ MOVW        R1, #18748                  @ 0x493c 
    /*0000aa0c*/ MLA         R3, R3, R9, R2 
    /*0000aa10*/ ADD         R3, SL, R3 
    /*0000aa14*/ LDR         R3, [R3, R1] 
    /*0000aa18*/ CMP         R3, #1 
    /*0000aa1c*/ BEQ         VpssSendLowDelayFrame_xaa94
    VpssSendLowDelayFrame_xaa20:
    /*0000aa20*/ MVN         R8, #0 
    VpssSendLowDelayFrame_xaa24:
    /*0000aa24*/ ADD         R1, SP, #28 
    /*0000aa28*/ MOV         R0, R7 
    /*0000aa2c*/ BL          0x000000000000AA2C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000aa30*/ MOV         R3, #92                     @ 0x5c 
    /*0000aa34*/ MUL         R4, R3, R4 
    /*0000aa38*/ ADD         R3, R5, R4 
    /*0000aa3c*/ LDR         R3, [R3, #4] 
    /*0000aa40*/ CMP         R3, #0 
    /*0000aa44*/ BNE         VpssSendLowDelayFrame_xaa54
    /*0000aa48*/ LDR         R3, [R5, R4] 
    /*0000aa4c*/ CMP         R3, #0 
    /*0000aa50*/ BEQ         VpssSendLowDelayFrame_xaa60
    VpssSendLowDelayFrame_xaa54:
    /*0000aa54*/ ADD         R0, R6, #36                 @ 0x24 
    /*0000aa58*/ ADD         R0, R5, R0 
    /*0000aa5c*/ BL          0x000000000000AA5C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VpssSendLowDelayFrame_xaa60:
    /*0000aa60*/ MOV         R0, R8 
    /*0000aa64*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000aa68*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssSendLowDelayFrame_xaa6c:
    /*0000aa6c*/ MOV         R3, #520                    @ 0x208 
    /*0000aa70*/ STR         R4, [SP, #4] 
    /*0000aa74*/ STR         R3, [SP] 
    /*0000aa78*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2230] 
    /*0000aa7c*/ LDR         R3, [PC, #668]              @ 0x000000000000ad20 
    /*0000aa80*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2230] 
    /*0000aa84*/ MOV         R1, #7 
    /*0000aa88*/ MOV         R0, #6 
    /*0000aa8c*/ BL          0x000000000000AA8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000aa90*/ B           VpssSendLowDelayFrame_xa9fc
    VpssSendLowDelayFrame_xaa94:
    /*0000aa94*/ MOV         R0, R4 
    /*0000aa98*/ BL          0x000000000000AA98          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0000aa9c*/ CMP         R0, #1 
    /*0000aaa0*/ BEQ         VpssSendLowDelayFrame_xabfc
    /*0000aaa4*/ MOV         R0, R4 
    /*0000aaa8*/ BL          0x000000000000AAA8          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0000aaac*/ CMP         R0, #3 
    /*0000aab0*/ BEQ         VpssSendLowDelayFrame_xabfc
    /*0000aab4*/ MOV         R3, #0 
    /*0000aab8*/ STR         R3, [SP, #12] 
    VpssSendLowDelayFrame_xaabc:
    /*0000aabc*/ LDR         R0, [SP, #12] 
    /*0000aac0*/ MOV         R2, #752                    @ 0x2f0 
    /*0000aac4*/ MOV         R3, #376                    @ 0x178 
    /*0000aac8*/ MOVW        R1, #19496                  @ 0x4c28 
    /*0000aacc*/ MUL         R2, R2, R9 
    /*0000aad0*/ MLA         R3, R3, R0, R2 
    /*0000aad4*/ ADD         R3, SL, R3 
    /*0000aad8*/ LDR         R3, [R3, R1] 
    /*0000aadc*/ CMP         R3, #0 
    /*0000aae0*/ STR         R3, [SP, #16] 
    /*0000aae4*/ BNE         VpssSendLowDelayFrame_xaa20
    /*0000aae8*/ ADD         R3, R0, R9, LSL #1 
    /*0000aaec*/ ADD         R3, R3, #5312               @ 0x14c0 
    /*0000aaf0*/ ADD         R3, R3, #52                 @ 0x34 
    /*0000aaf4*/ LDR         R3, [SL, R3, LSL #2] 
    /*0000aaf8*/ CMP         R3, #1 
    /*0000aafc*/ BNE         VpssSendLowDelayFrame_xaa20
    /*0000ab00*/ MOV         R3, #776                    @ 0x308 
    /*0000ab04*/ MOVW        IP, #2648                   @ 0xa58 
    /*0000ab08*/ MLA         IP, R3, R9, IP 
    /*0000ab0c*/ MOVW        R3, #8536                   @ 0x2158 
    /*0000ab10*/ MOV         R2, R0 
    /*0000ab14*/ MOV         R1, R9 
    /*0000ab18*/ MOV         R0, R4 
    /*0000ab1c*/ MLA         R3, R3, FP, IP 
    /*0000ab20*/ LDR         IP, [SP, #8] 
    /*0000ab24*/ ADD         R3, IP, R3 
    /*0000ab28*/ STR         R3, [SP, #20] 
    /*0000ab2c*/ BL          0x000000000000AB2C          @ VPSS_DRV_GetVideoFrameInfo [R_ARM_CALL: .text+0x24354] 
    /*0000ab30*/ MOV         R0, R4 
    /*0000ab34*/ LDR         R8, [R8, R4, LSL #2] 
    /*0000ab38*/ BL          0x000000000000AB38          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0000ab3c*/ CMP         R0, #1 
    /*0000ab40*/ BNE         VpssSendLowDelayFrame_xac14
    /*0000ab44*/ ADD         R3, R8, #28672              @ 0x7000 
    /*0000ab48*/ LDR         IP, [R3, #3216]             @ 0xc90 
    /*0000ab4c*/ CMP         IP, #0 
    /*0000ab50*/ BEQ         VpssSendLowDelayFrame_xab60
    /*0000ab54*/ LDR         R2, [R3, #3220]             @ 0xc94 
    /*0000ab58*/ CMP         IP, R2 
    /*0000ab5c*/ BLS         VpssSendLowDelayFrame_xaca8
    VpssSendLowDelayFrame_xab60:
    /*0000ab60*/ STR         IP, [R3, #3220]             @ 0xc94 
    VpssSendLowDelayFrame_xab64:
    /*0000ab64*/ MOVW        R1, #8536                   @ 0x2158 
    /*0000ab68*/ MOV         R3, #776                    @ 0x308 
    /*0000ab6c*/ MUL         R1, R1, FP 
    /*0000ab70*/ MOV         R2, FP 
    /*0000ab74*/ MLA         FP, R3, R9, R1 
    /*0000ab78*/ LDR         R3, [SP, #8] 
    /*0000ab7c*/ MOV         R1, R9 
    /*0000ab80*/ MOV         R0, R4 
    /*0000ab84*/ MOV         R8, #0 
    /*0000ab88*/ ADD         FP, R3, FP 
    /*0000ab8c*/ STR         IP, [FP, #2880]             @ 0xb40 
    /*0000ab90*/ BL          0x000000000000A528 
    /*0000ab94*/ LDR         R1, [SP, #12] 
    /*0000ab98*/ MOV         R3, #752                    @ 0x2f0 
    /*0000ab9c*/ MOV         R2, #376                    @ 0x178 
    /*0000aba0*/ MUL         R3, R3, R9 
    /*0000aba4*/ MOV         R0, #2 
    /*0000aba8*/ MLA         R3, R2, R1, R3 
    /*0000abac*/ MOVW        R1, #19324                  @ 0x4b7c 
    /*0000abb0*/ MOV         R2, #4 
    /*0000abb4*/ ADD         SL, SL, R3 
    /*0000abb8*/ LDR         R3, [SL, R1] 
    /*0000abbc*/ STR         R2, [FP, #2656]             @ 0xa60 
    /*0000abc0*/ STR         R3, [FP, #2668]             @ 0xa6c 
    /*0000abc4*/ BL          0x000000000000ABC4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000abc8*/ LDR         R3, [R0] 
    /*0000abcc*/ BLX         R3 
    /*0000abd0*/ MOVW        IP, #2888                   @ 0xb48 
    /*0000abd4*/ LDR         R2, [SP, #20] 
    /*0000abd8*/ MOV         R3, #1 
    /*0000abdc*/ STRD        R0, [FP, IP] 
    /*0000abe0*/ MOV         R1, R9 
    /*0000abe4*/ MOV         R0, R4 
    /*0000abe8*/ BL          0x000000000000ABE8          @ VpssFakeSendLowDelayFrame [R_ARM_CALL: .text+0xa824] 
    /*0000abec*/ MOVW        R3, #19496                  @ 0x4c28 
    /*0000abf0*/ MOV         R2, #1 
    /*0000abf4*/ STR         R2, [SL, R3] 
    /*0000abf8*/ B           VpssSendLowDelayFrame_xaa24
    VpssSendLowDelayFrame_xabfc:
    /*0000abfc*/ ADD         R3, R9, #5312               @ 0x14c0 
    /*0000ac00*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000ac04*/ ADD         R3, SL, R3, LSL #2 
    /*0000ac08*/ LDR         R3, [R3, #4] 
    /*0000ac0c*/ STR         R3, [SP, #12] 
    /*0000ac10*/ B           VpssSendLowDelayFrame_xaabc
    VpssSendLowDelayFrame_xac14:
    /*0000ac14*/ MOV         R0, R4 
    /*0000ac18*/ BL          0x000000000000AC18          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0000ac1c*/ CMP         R0, #3 
    /*0000ac20*/ ADDEQ       R8, R8, #28672              @ 0x7000 
    /*0000ac24*/ LDREQ       IP, [R8, #3216]             @ 0xc90 
    /*0000ac28*/ BEQ         VpssSendLowDelayFrame_xab64
    /*0000ac2c*/ MOV         R0, R4 
    /*0000ac30*/ BL          0x000000000000AC30          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0000ac34*/ CMP         R0, #0 
    /*0000ac38*/ BNE         VpssSendLowDelayFrame_xac60
    /*0000ac3c*/ ADD         R3, R8, FP, LSL #2 
    /*0000ac40*/ LDR         R2, [R3, #2612]             @ 0xa34 
    /*0000ac44*/ CMP         R2, #1 
    /*0000ac48*/ LDREQ       R8, [R3, #2200]             @ 0x898 
    /*0000ac4c*/ LDRNE       R8, [R8, #2196]             @ 0x894 
    /*0000ac50*/ CMP         R8, #0 
    /*0000ac54*/ BEQ         VpssSendLowDelayFrame_xad00
    VpssSendLowDelayFrame_xac58:
    /*0000ac58*/ LDR         IP, [R8, #240]              @ 0xf0 
    /*0000ac5c*/ B           VpssSendLowDelayFrame_xab64
    VpssSendLowDelayFrame_xac60:
    /*0000ac60*/ MOV         R0, R4 
    /*0000ac64*/ BL          0x000000000000AC64          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0000ac68*/ CMP         R0, #2 
    /*0000ac6c*/ LDRNE       IP, [SP, #16] 
    /*0000ac70*/ BNE         VpssSendLowDelayFrame_xab64
    /*0000ac74*/ ADD         R3, FP, #548                @ 0x224 
    /*0000ac78*/ ADD         R3, R3, #2 
    /*0000ac7c*/ LDR         R8, [R8, R3, LSL #2] 
    /*0000ac80*/ CMP         R8, #0 
    /*0000ac84*/ BNE         VpssSendLowDelayFrame_xac58
    /*0000ac88*/ MOVW        R3, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x229c] 
    /*0000ac8c*/ MOVW        R0, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22b4] 
    /*0000ac90*/ MOVT        R3, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x229c] 
    /*0000ac94*/ MOVT        R0, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22b4] 
    /*0000ac98*/ MOV         R2, #237                    @ 0xed 
    /*0000ac9c*/ LDR         R1, [PC, #128]              @ 0x000000000000ad24 
    /*0000aca0*/ BL          0x000000000000ACA0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000aca4*/ B           VpssSendLowDelayFrame_xac58
    VpssSendLowDelayFrame_xaca8:
    /*0000aca8*/ ADD         R0, R8, R9, LSL #2 
    /*0000acac*/ MOV         LR, #218                    @ 0xda 
    /*0000acb0*/ ADD         R0, R0, #28672              @ 0x7000 
    /*0000acb4*/ LDR         R3, [PC, #104]              @ 0x000000000000ad24 
    /*0000acb8*/ MOV         R1, #7 
    /*0000acbc*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x226c] 
    /*0000acc0*/ LDR         IP, [R0, #3224]             @ 0xc98 
    /*0000acc4*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x226c] 
    /*0000acc8*/ MVN         R8, #0 
    /*0000accc*/ ADD         IP, IP, #1 
    /*0000acd0*/ STR         IP, [R0, #3224]             @ 0xc98 
    /*0000acd4*/ STR         LR, [SP] 
    /*0000acd8*/ MOV         R0, #4 
    /*0000acdc*/ STR         R9, [SP, #4] 
    /*0000ace0*/ BL          0x000000000000ACE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ace4*/ MOV         R1, R9 
    /*0000ace8*/ MOV         R0, R4 
    /*0000acec*/ BL          0x000000000000ACEC          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*0000acf0*/ ADD         R1, SP, #28 
    /*0000acf4*/ MOV         R0, R7 
    /*0000acf8*/ BL          0x000000000000ACF8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000acfc*/ B           VpssSendLowDelayFrame_xaa60
    VpssSendLowDelayFrame_xad00:
    /*0000ad00*/ MOVW        R3, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x229c] 
    /*0000ad04*/ MOVW        R0, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22b4] 
    /*0000ad08*/ MOVT        R3, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x229c] 
    /*0000ad0c*/ MOVT        R0, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22b4] 
    /*0000ad10*/ MOV         R2, #231                    @ 0xe7 
    /*0000ad14*/ LDR         R1, [PC, #8]                @ 0x000000000000ad24 
    /*0000ad18*/ BL          0x000000000000AD18          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000ad1c*/ B           VpssSendLowDelayFrame_xac58
    /*0000ad20*/ STRDEQ      R0, [R0], -R4 
    /*0000ad24*/ ANDEQ       R0, R0, IP, LSL #16 
FUNC_END VpssSendLowDelayFrame


FUNC_BEGIN VPSS_ProcSendFail
    /*0000ad28*/ MOV         R0, #0 
    /*0000ad2c*/ BX          LR 
FUNC_END VPSS_ProcSendFail


FUNC_BEGIN VPSS_ProcSendPic
    /*0000ad30*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000ad34*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000ad38*/ MOV         R4, R0 
    /*0000ad3c*/ MOV         R5, R1 
    /*0000ad40*/ MOV         R8, R2 
    /*0000ad44*/ MOV         R1, #0 
    /*0000ad48*/ MOV         R2, #32 
    /*0000ad4c*/ ADD         R0, SP, #32 
    /*0000ad50*/ BL          0x000000000000AD50          @ memset [R_ARM_CALL: +0x0] 
    /*0000ad54*/ LDR         R3, [PC, #444]              @ 0x000000000000af18 
    /*0000ad58*/ MOV         R6, #92                     @ 0x5c 
    /*0000ad5c*/ MOVW        R7, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000ad60*/ MOVT        R7, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000ad64*/ ADD         R1, SP, #20 
    /*0000ad68*/ MLA         R6, R6, R4, R3 
    /*0000ad6c*/ LDR         R9, [R7, R4, LSL #2] 
    /*0000ad70*/ MOV         R0, R6 
    /*0000ad74*/ BL          0x000000000000AD74          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000ad78*/ MOV         R0, R4 
    /*0000ad7c*/ BL          0x000000000000AD7C          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0000ad80*/ CMP         R0, #0 
    /*0000ad84*/ BEQ         VPSS_ProcSendPic_xaea4
    VPSS_ProcSendPic_xad88:
    /*0000ad88*/ MOV         R0, R4 
    /*0000ad8c*/ BL          0x000000000000AD8C          @ VpssCheckBindInfo [R_ARM_CALL: .text+0x698] 
    /*0000ad90*/ CMP         R0, #0 
    /*0000ad94*/ BNE         VPSS_ProcSendPic_xae7c
    VPSS_ProcSendPic_xad98:
    /*0000ad98*/ MOV         R0, R4 
    /*0000ad9c*/ LDR         R7, [R7, R4, LSL #2] 
    /*0000ada0*/ BL          0x000000000000ADA0          @ VPSS_DRV_DidcardFirstFrame [R_ARM_CALL: .text+0x1f678] 
    /*0000ada4*/ CMP         R0, #0 
    /*0000ada8*/ BNE         VPSS_ProcSendPic_xae30
    /*0000adac*/ CMP         R5, #2 
    /*0000adb0*/ BLS         VPSS_ProcSendPic_xae1c
    VPSS_ProcSendPic_xadb4:
    /*0000adb4*/ LDR         R3, [R8, #340]              @ 0x154 
    /*0000adb8*/ MOV         R2, #1 
    /*0000adbc*/ STR         R4, [SP, #36]               @ 0x24 
    /*0000adc0*/ CMP         R3, #0 
    /*0000adc4*/ STR         R5, [SP, #40]               @ 0x28 
    /*0000adc8*/ MOV         R3, #0 
    /*0000adcc*/ STR         R8, [SP, #44]               @ 0x2c 
    /*0000add0*/ STR         R2, [SP, #32] 
    /*0000add4*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000add8*/ BNE         VPSS_ProcSendPic_xaee0
    VPSS_ProcSendPic_xaddc:
    /*0000addc*/ MOV         R7, #0 
    /*0000ade0*/ MOV         R2, R8 
    /*0000ade4*/ MOV         R1, R5 
    /*0000ade8*/ STR         R7, [R8, #340]              @ 0x154 
    /*0000adec*/ MOV         R0, R4 
    /*0000adf0*/ BL          0x000000000000ADF0          @ VPSS_DRV_SnapProc [R_ARM_CALL: .text+0x26364] 
    /*0000adf4*/ ADD         R2, SP, #32 
    /*0000adf8*/ MOV         R1, R5 
    /*0000adfc*/ MOV         R0, R4 
    /*0000ae00*/ BL          0x000000000000AE00          @ VpssFakeSend [R_ARM_CALL: .text+0x13940] 
    /*0000ae04*/ MOV         R0, R6 
    /*0000ae08*/ ADD         R1, SP, #20 
    /*0000ae0c*/ BL          0x000000000000AE0C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000ae10*/ MOV         R0, R7 
    /*0000ae14*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000ae18*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_ProcSendPic_xae1c:
    /*0000ae1c*/ ADD         R7, R7, R5, LSL #2 
    /*0000ae20*/ ADD         R7, R7, #28672              @ 0x7000 
    /*0000ae24*/ LDR         R3, [R7, #3096]             @ 0xc18 
    /*0000ae28*/ CMP         R3, #0 
    /*0000ae2c*/ BEQ         VPSS_ProcSendPic_xaf08
    VPSS_ProcSendPic_xae30:
    /*0000ae30*/ STR         R5, [SP, #8] 
    /*0000ae34*/ MOVW        R3, #731                    @ 0x2db 
    /*0000ae38*/ STR         R4, [SP, #4] 
    /*0000ae3c*/ MOV         R1, #7 
    /*0000ae40*/ STR         R3, [SP] 
    /*0000ae44*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x232c] 
    /*0000ae48*/ LDR         R3, [PC, #204]              @ 0x000000000000af1c 
    /*0000ae4c*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x232c] 
    /*0000ae50*/ MOV         R0, #6 
    /*0000ae54*/ BL          0x000000000000AE54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ae58*/ ADD         R1, SP, #20 
    /*0000ae5c*/ MOV         R0, R6 
    /*0000ae60*/ BL          0x000000000000AE60          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000ae64*/ MOV         R0, R4 
    /*0000ae68*/ MOV         R1, R5 
    /*0000ae6c*/ BL          0x000000000000AE6C          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*0000ae70*/ MVN         R0, #0 
    /*0000ae74*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000ae78*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_ProcSendPic_xae7c:
    /*0000ae7c*/ MOVW        R3, #726                    @ 0x2d6 
    /*0000ae80*/ STR         R4, [SP, #4] 
    /*0000ae84*/ STR         R3, [SP] 
    /*0000ae88*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2230] 
    /*0000ae8c*/ LDR         R3, [PC, #136]              @ 0x000000000000af1c 
    /*0000ae90*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2230] 
    /*0000ae94*/ MOV         R1, #7 
    /*0000ae98*/ MOV         R0, #6 
    /*0000ae9c*/ BL          0x000000000000AE9C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000aea0*/ B           VPSS_ProcSendPic_xad98
    VPSS_ProcSendPic_xaea4:
    /*0000aea4*/ ADD         R0, SP, #24 
    /*0000aea8*/ ADD         R9, R9, #28672              @ 0x7000 
    /*0000aeac*/ BL          0x000000000000AEAC          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*0000aeb0*/ LDR         R3, [SP, #24] 
    /*0000aeb4*/ LDR         R0, [SP, #28] 
    /*0000aeb8*/ MOVW        R2, #16960                  @ 0x4240 
    /*0000aebc*/ MOVT        R2, #15 
    /*0000aec0*/ LDR         R1, [R8, #344]              @ 0x158 
    /*0000aec4*/ MLA         R3, R2, R3, R0 
    /*0000aec8*/ LDR         R2, [R9, #3212]             @ 0xc8c 
    /*0000aecc*/ SUB         R3, R3, R1 
    /*0000aed0*/ STR         R3, [R9, #3208]             @ 0xc88 
    /*0000aed4*/ CMP         R3, R2 
    /*0000aed8*/ STRHI       R3, [R9, #3212]             @ 0xc8c 
    /*0000aedc*/ B           VPSS_ProcSendPic_xad88
    VPSS_ProcSendPic_xaee0:
    /*0000aee0*/ MOV         R1, #7 
    /*0000aee4*/ MOVW        R3, #773                    @ 0x305 
    /*0000aee8*/ MOV         R0, R1 
    /*0000aeec*/ STR         R3, [SP] 
    /*0000aef0*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22f4] 
    /*0000aef4*/ LDR         R3, [PC, #32]               @ 0x000000000000af1c 
    /*0000aef8*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22f4] 
    /*0000aefc*/ BL          0x000000000000AEFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000af00*/ LDR         R8, [SP, #44]               @ 0x2c 
    /*0000af04*/ B           VPSS_ProcSendPic_xaddc
    VPSS_ProcSendPic_xaf08:
    /*0000af08*/ LDR         R3, [R7, #3112]             @ 0xc28 
    /*0000af0c*/ CMP         R3, #0 
    /*0000af10*/ BEQ         VPSS_ProcSendPic_xadb4
    /*0000af14*/ B           VPSS_ProcSendPic_xae30
    /*0000af18*/ ANDEQ       R0, R0, R0, LSR R0          @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000af1c*/ ANDEQ       R0, R0, IP, LSL R8 
FUNC_END VPSS_ProcSendPic


FUNC_BEGIN VPSS_VgsByPassTaskCallBack
    /*0000af20*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000af24*/ ADD         R0, R3, #688                @ 0x2b0 
    /*0000af28*/ LDR         IP, [R3, #680]              @ 0x2a8 
    /*0000af2c*/ SUB         SP, SP, #372                @ 0x174 
    /*0000af30*/ LDR         R7, [R3, #736]              @ 0x2e0 
    /*0000af34*/ ADD         LR, R3, #704                @ 0x2c0 
    /*0000af38*/ LDRD        R4, [R0] 
    /*0000af3c*/ MOV         R6, R1 
    /*0000af40*/ STR         IP, [SP, #344]              @ 0x158 
    /*0000af44*/ ADD         IP, SP, #352                @ 0x160 
    /*0000af48*/ CMP         R7, #1 
    /*0000af4c*/ LDRD        R0, [LR, #-8] 
    /*0000af50*/ MOV         R7, R2 
    /*0000af54*/ LDR         R2, [R3, #672]              @ 0x2a0 
    /*0000af58*/ STRD        R4, [IP] 
    /*0000af5c*/ ADD         IP, SP, #360                @ 0x168 
    /*0000af60*/ STR         R2, [SP, #348]              @ 0x15c 
    /*0000af64*/ STRD        R0, [IP] 
    /*0000af68*/ BEQ         VPSS_VgsByPassTaskCallBack_xaf94
    /*0000af6c*/ MOVW        R3, #1015                   @ 0x3f7 
    /*0000af70*/ MOV         R1, #7 
    /*0000af74*/ STR         R3, [SP] 
    /*0000af78*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2368] 
    /*0000af7c*/ LDR         R3, [PC, #56]               @ 0x000000000000afbc 
    /*0000af80*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2368] 
    /*0000af84*/ MOV         R0, #3 
    /*0000af88*/ BL          0x000000000000AF88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000af8c*/ ADD         SP, SP, #372                @ 0x174 
    /*0000af90*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_VgsByPassTaskCallBack_xaf94:
    /*0000af94*/ ADD         R1, R3, #336                @ 0x150 
    /*0000af98*/ MOV         R2, #336                    @ 0x150 
    /*0000af9c*/ ADD         R0, SP, #8 
    /*0000afa0*/ BL          0x000000000000AFA0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000afa4*/ ADD         R2, SP, #8 
    /*0000afa8*/ MOV         R1, R7 
    /*0000afac*/ MOV         R0, R6 
    /*0000afb0*/ BL          0x000000000000AFB0          @ VPSS_ProcSendPic [R_ARM_CALL: .text+0xad30] 
    /*0000afb4*/ ADD         SP, SP, #372                @ 0x174 
    /*0000afb8*/ POP         {R4, R5, R6, R7, PC} 
    /*0000afbc*/ ANDEQ       R0, R0, R0, LSR R8 
FUNC_END VPSS_VgsByPassTaskCallBack


FUNC_BEGIN VPSS_CoverexTaskCallBack
    /*0000afc0*/ MOVW        R0, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000afc4*/ CMP         R3, #0 
    /*0000afc8*/ MOVT        R0, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000afcc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000afd0*/ MOV         R7, R2 
    /*0000afd4*/ SUB         SP, SP, #372                @ 0x174 
    /*0000afd8*/ LDR         R2, [R0, R1, LSL #2] 
    /*0000afdc*/ BEQ         VPSS_CoverexTaskCallBack_xb058
    /*0000afe0*/ CMP         R2, #0 
    /*0000afe4*/ BEQ         VPSS_CoverexTaskCallBack_xb07c
    /*0000afe8*/ ADD         R2, R3, #688                @ 0x2b0 
    /*0000afec*/ LDR         IP, [R3, #680]              @ 0x2a8 
    /*0000aff0*/ LDR         R0, [R3, #736]              @ 0x2e0 
    /*0000aff4*/ MOV         R6, R1 
    /*0000aff8*/ LDRD        R4, [R2] 
    /*0000affc*/ ADD         R1, R3, #704                @ 0x2c0 
    /*0000b000*/ STR         IP, [SP, #344]              @ 0x158 
    /*0000b004*/ ADD         IP, SP, #352                @ 0x160 
    /*0000b008*/ CMP         R0, #1 
    /*0000b00c*/ LDR         R2, [R3, #672]              @ 0x2a0 
    /*0000b010*/ LDRD        R0, [R1, #-8] 
    /*0000b014*/ STRD        R4, [IP] 
    /*0000b018*/ ADD         IP, SP, #360                @ 0x168 
    /*0000b01c*/ STR         R2, [SP, #348]              @ 0x15c 
    /*0000b020*/ STRD        R0, [IP] 
    /*0000b024*/ BEQ         VPSS_CoverexTaskCallBack_xb030
    VPSS_CoverexTaskCallBack_xb028:
    /*0000b028*/ ADD         SP, SP, #372                @ 0x174 
    /*0000b02c*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_CoverexTaskCallBack_xb030:
    /*0000b030*/ ADD         R1, R3, #336                @ 0x150 
    /*0000b034*/ MOV         R2, #336                    @ 0x150 
    /*0000b038*/ ADD         R0, SP, #8 
    /*0000b03c*/ BL          0x000000000000B03C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000b040*/ ADD         R2, SP, #8 
    /*0000b044*/ MOV         R1, R7 
    /*0000b048*/ MOV         R0, R6 
    /*0000b04c*/ BL          0x000000000000B04C          @ VPSS_ProcSendPic [R_ARM_CALL: .text+0xad30] 
    /*0000b050*/ ADD         SP, SP, #372                @ 0x174 
    /*0000b054*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_CoverexTaskCallBack_xb058:
    /*0000b058*/ MOVW        R3, #1204                   @ 0x4b4 
    /*0000b05c*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2390] 
    /*0000b060*/ STR         R3, [SP] 
    /*0000b064*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2390] 
    /*0000b068*/ LDR         R3, [PC, #20]               @ 0x000000000000b084 
    /*0000b06c*/ MOV         R1, #7 
    /*0000b070*/ MOV         R0, #3 
    /*0000b074*/ BL          0x000000000000B074          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b078*/ B           VPSS_CoverexTaskCallBack_xb028
    VPSS_CoverexTaskCallBack_xb07c:
    /*0000b07c*/ BL          0x000000000000A624 
    /*0000b080*/ B           VPSS_CoverexTaskCallBack_xb028
    /*0000b084*/ @           <UNDEFINED> instruction: 0x000007b8 
FUNC_END VPSS_CoverexTaskCallBack


FUNC_BEGIN VPSS_OverlayexTaskCallBack
    /*0000b088*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000b08c*/ MOV         R4, R1 
    /*0000b090*/ MOV         R5, R2 
    /*0000b094*/ MOV         R6, R0 
    /*0000b098*/ MOV         R7, R3 
    /*0000b09c*/ MOV         R1, R2 
    /*0000b0a0*/ MOV         R0, R4 
    /*0000b0a4*/ MOV         R2, #3 
    /*0000b0a8*/ BL          0x000000000000B0A8          @ VPSS_DRV_PutOsd [R_ARM_CALL: .text+0x18680] 
    /*0000b0ac*/ MOV         R3, R7 
    /*0000b0b0*/ MOV         R2, R5 
    /*0000b0b4*/ MOV         R1, R4 
    /*0000b0b8*/ MOV         R0, R6 
    /*0000b0bc*/ POP         {R4, R5, R6, R7, R8, LR} 
    VPSS_OverlayexTaskCallBack_xb0c0:
    /*0000b0c0*/ B           VPSS_OverlayexTaskCallBack_xb0c0@ VPSS_CoverexTaskCallBack [R_ARM_JUMP24: .text+0xafc0] 
FUNC_END VPSS_OverlayexTaskCallBack


FUNC_BEGIN VPSS_RegionLumaTaskCallBack
    /*0000b0c4*/ MOVW        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000b0c8*/ MOVW        R0, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0000b0cc*/ MOVT        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000b0d0*/ MOVT        R0, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0000b0d4*/ PUSH        {R4, R5, R6, R8, R9, LR} 
    /*0000b0d8*/ MOV         R4, R1 
    /*0000b0dc*/ MOV         R5, R2 
    /*0000b0e0*/ LDR         R2, [IP, R1, LSL #2] 
    /*0000b0e4*/ MOV         R1, R3 
    /*0000b0e8*/ LDR         R3, [R0, R4, LSL #2] 
    /*0000b0ec*/ SUB         SP, SP, #368                @ 0x170 
    /*0000b0f0*/ CMP         R3, #0 
    /*0000b0f4*/ CMPNE       R2, #0 
    /*0000b0f8*/ BEQ         VPSS_RegionLumaTaskCallBack_xb16c
    /*0000b0fc*/ ADD         R3, R1, #688                @ 0x2b0 
    /*0000b100*/ LDR         LR, [R1, #680]              @ 0x2a8 
    /*0000b104*/ ADD         R2, R1, #704                @ 0x2c0 
    /*0000b108*/ ADD         R0, SP, #352                @ 0x160 
    /*0000b10c*/ LDRD        R8, [R3] 
    /*0000b110*/ LDR         R6, [R1, #736]              @ 0x2e0 
    /*0000b114*/ LDRD        R2, [R2, #-8] 
    /*0000b118*/ STR         LR, [SP, #344]              @ 0x158 
    /*0000b11c*/ CMP         R6, #1 
    /*0000b120*/ LDR         LR, [R1, #672]              @ 0x2a0 
    /*0000b124*/ STRD        R8, [R0] 
    /*0000b128*/ ADD         R0, SP, #360                @ 0x168 
    /*0000b12c*/ STR         LR, [SP, #348]              @ 0x15c 
    /*0000b130*/ STRD        R2, [R0] 
    /*0000b134*/ BEQ         VPSS_RegionLumaTaskCallBack_xb1b4
    /*0000b138*/ MOVW        R3, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000b13c*/ MOVT        R3, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    VPSS_RegionLumaTaskCallBack_xb140:
    /*0000b140*/ MOV         R2, #23 
    /*0000b144*/ MOV         R0, #92                     @ 0x5c 
    /*0000b148*/ MLA         R2, R2, R4, R5 
    /*0000b14c*/ MOV         R1, #1 
    /*0000b150*/ MLA         R0, R0, R4, R3 
    /*0000b154*/ ADD         R2, R2, #14 
    /*0000b158*/ ADD         R0, R0, #32 
    /*0000b15c*/ STR         R1, [R3, R2, LSL #2] 
    /*0000b160*/ BL          0x000000000000B160          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000b164*/ ADD         SP, SP, #368                @ 0x170 
    /*0000b168*/ POP         {R4, R5, R6, R8, R9, PC} 
    VPSS_RegionLumaTaskCallBack_xb16c:
    /*0000b16c*/ MOVW        R3, #1363                   @ 0x553 
    /*0000b170*/ MOV         R1, #7 
    /*0000b174*/ STR         R3, [SP] 
    /*0000b178*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2068] 
    /*0000b17c*/ LDR         R3, [PC, #108]              @ 0x000000000000b1f0 
    /*0000b180*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2068] 
    /*0000b184*/ STR         R4, [SP, #4] 
    /*0000b188*/ MOV         R0, #3 
    /*0000b18c*/ BL          0x000000000000B18C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b190*/ MOV         R2, #23 
    /*0000b194*/ MLA         R2, R2, R4, R5 
    /*0000b198*/ MOVW        R3, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000b19c*/ MOVT        R3, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000b1a0*/ MOV         R1, #0 
    /*0000b1a4*/ ADD         R2, R2, #16 
    /*0000b1a8*/ ADD         R2, R3, R2, LSL #2 
    /*0000b1ac*/ STR         R1, [R2, #4] 
    /*0000b1b0*/ B           VPSS_RegionLumaTaskCallBack_xb140
    VPSS_RegionLumaTaskCallBack_xb1b4:
    /*0000b1b4*/ ADD         R1, R1, #336                @ 0x150 
    /*0000b1b8*/ MOV         R2, #336                    @ 0x150 
    /*0000b1bc*/ ADD         R0, SP, #8 
    /*0000b1c0*/ BL          0x000000000000B1C0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000b1c4*/ ADD         R2, SP, #8 
    /*0000b1c8*/ MOV         R1, R5 
    /*0000b1cc*/ MOV         R0, R4 
    /*0000b1d0*/ BL          0x000000000000B1D0          @ VPSS_ProcSendPic [R_ARM_CALL: .text+0xad30] 
    /*0000b1d4*/ MOV         R2, #23 
    /*0000b1d8*/ MLA         R2, R2, R4, R5 
    /*0000b1dc*/ MOVW        R3, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000b1e0*/ MOVT        R3, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000b1e4*/ ADD         R2, R3, R2, LSL #2 
    /*0000b1e8*/ STR         R6, [R2, #68]               @ 0x44 
    /*0000b1ec*/ B           VPSS_RegionLumaTaskCallBack_xb140
    /*0000b1f0*/ ANDEQ       R0, R0, IP, ASR #16 
FUNC_END VPSS_RegionLumaTaskCallBack


FUNC_BEGIN VPSS_GdcExtChnTaskCallBack
    /*0000b1f4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000b1f8*/ MOV         R0, R3 
    /*0000b1fc*/ MOV         R5, R3 
    /*0000b200*/ SUB         SP, SP, #368                @ 0x170 
    /*0000b204*/ MOV         SL, R1 
    /*0000b208*/ MOV         R1, #10 
    /*0000b20c*/ MOV         R6, R2 
    /*0000b210*/ BL          0x000000000000B210          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000b214*/ LDR         R3, [R5, #764]              @ 0x2fc 
    /*0000b218*/ CMP         R3, #1 
    /*0000b21c*/ BEQ         VPSS_GdcExtChnTaskCallBack_xb280
    /*0000b220*/ MOV         R3, #2096                   @ 0x830 
    /*0000b224*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23c8] 
    /*0000b228*/ STR         R3, [SP] 
    /*0000b22c*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23c8] 
    /*0000b230*/ LDR         R3, [PC, #160]              @ 0x000000000000b2d8 
    /*0000b234*/ MOV         R1, #7 
    /*0000b238*/ MOV         R0, #3 
    /*0000b23c*/ ADD         R4, R5, #336                @ 0x150 
    /*0000b240*/ BL          0x000000000000B240          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_GdcExtChnTaskCallBack_xb244:
    /*0000b244*/ MOV         R0, R4 
    /*0000b248*/ MOV         R4, #92                     @ 0x5c 
    /*0000b24c*/ MUL         R4, R4, SL 
    /*0000b250*/ MOV         R1, #10 
    /*0000b254*/ BL          0x000000000000B254          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000b258*/ MOVW        R5, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000b25c*/ MOVT        R5, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000b260*/ ADD         R0, R4, #16 
    /*0000b264*/ ADD         R0, R5, R0 
    /*0000b268*/ BL          0x000000000000B268          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0000b26c*/ ADD         R0, R4, #36                 @ 0x24 
    /*0000b270*/ ADD         R0, R5, R0 
    /*0000b274*/ BL          0x000000000000B274          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000b278*/ ADD         SP, SP, #368                @ 0x170 
    /*0000b27c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_GdcExtChnTaskCallBack_xb280:
    /*0000b280*/ ADD         R4, R5, #336                @ 0x150 
    /*0000b284*/ MOV         R2, #336                    @ 0x150 
    /*0000b288*/ ADD         R0, SP, #8 
    /*0000b28c*/ MOV         R1, R4 
    /*0000b290*/ BL          0x000000000000B290          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000b294*/ ADD         R3, R5, #688                @ 0x2b0 
    /*0000b298*/ ADD         LR, R5, #704                @ 0x2c0 
    /*0000b29c*/ LDR         R0, [R5, #680]              @ 0x2a8 
    /*0000b2a0*/ LDRD        R8, [R3] 
    /*0000b2a4*/ ADD         R3, SP, #352                @ 0x160 
    /*0000b2a8*/ LDR         IP, [R5, #672]              @ 0x2a0 
    /*0000b2ac*/ MOV         R1, R6 
    /*0000b2b0*/ LDRD        R6, [LR, #-8] 
    /*0000b2b4*/ ADD         R2, SP, #8 
    /*0000b2b8*/ STRD        R8, [R3] 
    /*0000b2bc*/ ADD         R3, SP, #360                @ 0x168 
    /*0000b2c0*/ STR         R0, [SP, #344]              @ 0x158 
    /*0000b2c4*/ MOV         R0, SL 
    /*0000b2c8*/ STR         IP, [SP, #348]              @ 0x15c 
    /*0000b2cc*/ STRD        R6, [R3] 
    /*0000b2d0*/ BL          0x000000000000B2D0          @ VPSS_ProcSendPic [R_ARM_CALL: .text+0xad30] 
    /*0000b2d4*/ B           VPSS_GdcExtChnTaskCallBack_xb244
    /*0000b2d8*/ ANDEQ       R0, R0, R8, ROR #16 
FUNC_END VPSS_GdcExtChnTaskCallBack


FUNC_BEGIN VPSS_IsVgsExist
    /*0000b2dc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000b2e0*/ MOV         R0, #45                     @ 0x2d 
    /*0000b2e4*/ SUB         SP, SP, #12 
    /*0000b2e8*/ BL          0x000000000000B2E8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b2ec*/ CMP         R0, #0 
    /*0000b2f0*/ BEQ         VPSS_IsVgsExist_xb340
    /*0000b2f4*/ LDR         R3, [R0] 
    /*0000b2f8*/ CMP         R3, #0 
    /*0000b2fc*/ BEQ         VPSS_IsVgsExist_xb340
    /*0000b300*/ LDR         R3, [R0, #24] 
    /*0000b304*/ CMP         R3, #0 
    /*0000b308*/ BEQ         VPSS_IsVgsExist_xb340
    /*0000b30c*/ LDR         R3, [R0, #16] 
    /*0000b310*/ CMP         R3, #0 
    /*0000b314*/ BEQ         VPSS_IsVgsExist_xb340
    /*0000b318*/ LDR         R3, [R0, #20] 
    /*0000b31c*/ CMP         R3, #0 
    /*0000b320*/ BEQ         VPSS_IsVgsExist_xb340
    /*0000b324*/ LDR         R3, [R0, #28] 
    /*0000b328*/ CMP         R3, #0 
    /*0000b32c*/ BEQ         VPSS_IsVgsExist_xb340
    /*0000b330*/ LDR         R3, [R0, #12] 
    /*0000b334*/ CMP         R3, #0 
    /*0000b338*/ MOVNE       R0, #1 
    /*0000b33c*/ BNE         VPSS_IsVgsExist_xb364
    VPSS_IsVgsExist_xb340:
    /*0000b340*/ MOV         R1, #7 
    /*0000b344*/ MOVW        R3, #803                    @ 0x323 
    /*0000b348*/ MOV         R0, R1 
    /*0000b34c*/ STR         R3, [SP] 
    /*0000b350*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23f8] 
    /*0000b354*/ LDR         R3, [PC, #16]               @ 0x000000000000b36c 
    /*0000b358*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23f8] 
    /*0000b35c*/ BL          0x000000000000B35C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b360*/ MOV         R0, #0 
    VPSS_IsVgsExist_xb364:
    /*0000b364*/ ADD         SP, SP, #12 
    /*0000b368*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000b36c*/ ANDEQ       R0, R0, R4, LSL #17 
FUNC_END VPSS_IsVgsExist


FUNC_BEGIN VPSS_IsByPassVgs
    /*0000b370*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000b374*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000b378*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000b37c*/ MOV         R2, #464                    @ 0x1d0 
    /*0000b380*/ LDR         R5, [R3, R0, LSL #2] 
    /*0000b384*/ MOV         R6, #24 
    /*0000b388*/ MUL         R2, R2, R1 
    /*0000b38c*/ MOVW        LR, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0000b390*/ MLA         R6, R6, R1, R5 
    /*0000b394*/ MOVT        LR, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0000b398*/ ADD         R9, R5, R2 
    /*0000b39c*/ ADD         R2, R2, #30208              @ 0x7600 
    /*0000b3a0*/ LDR         R8, [LR, R0, LSL #2] 
    /*0000b3a4*/ MOVW        R3, #32064                  @ 0x7d40 
    /*0000b3a8*/ MOVW        IP, #32060                  @ 0x7d3c 
    /*0000b3ac*/ MOVW        LR, #30388                  @ 0x76b4 
    /*0000b3b0*/ ADD         R2, R2, #168                @ 0xa8 
    /*0000b3b4*/ MOV         SL, #0 
    /*0000b3b8*/ SUB         SP, SP, #16 
    /*0000b3bc*/ STR         SL, [R6, R3] 
    /*0000b3c0*/ ADD         R2, R5, R2 
    /*0000b3c4*/ MOV         R3, #2 
    /*0000b3c8*/ STR         SL, [R6, IP] 
    /*0000b3cc*/ MOV         R4, R1 
    /*0000b3d0*/ STR         R3, [R9, LR] 
    /*0000b3d4*/ MOV         R7, R0 
    /*0000b3d8*/ BL          0x000000000000B3D8          @ VPSS_DRV_GetCover [R_ARM_CALL: .text+0x18714] 
    /*0000b3dc*/ MOV         R3, #72                     @ 0x48 
    /*0000b3e0*/ MLA         R3, R3, R4, R8 
    /*0000b3e4*/ LDR         R3, [R3, #56]               @ 0x38 
    /*0000b3e8*/ CMP         R3, #2 
    /*0000b3ec*/ BEQ         VPSS_IsByPassVgs_xb590
    /*0000b3f0*/ MOVW        R3, #30380                  @ 0x76ac 
    /*0000b3f4*/ MOVW        R2, #32048                  @ 0x7d30 
    /*0000b3f8*/ LDR         R3, [R9, R3] 
    /*0000b3fc*/ ADDS        R3, R3, #0 
    /*0000b400*/ MOVNE       R3, #1 
    /*0000b404*/ STR         R3, [R6, R2] 
    VPSS_IsByPassVgs_xb408:
    /*0000b408*/ MOV         R2, #2 
    /*0000b40c*/ MOV         R1, R4 
    /*0000b410*/ MOV         R0, R7 
    /*0000b414*/ BL          0x000000000000B414          @ VPSS_DRV_PutCover [R_ARM_CALL: .text+0x18910] 
    /*0000b418*/ ADD         R1, SP, #12 
    /*0000b41c*/ MOV         R0, R7 
    /*0000b420*/ BL          0x000000000000B420          @ VPSS_DRV_GetLumaAttr [R_ARM_CALL: .text+0x1a560] 
    /*0000b424*/ LDR         R3, [SP, #12] 
    /*0000b428*/ LDR         R2, [R3, #1036]             @ 0x40c 
    /*0000b42c*/ CMP         R2, #0 
    /*0000b430*/ BEQ         VPSS_IsByPassVgs_xb440
    /*0000b434*/ LDR         R3, [R3, #1040]             @ 0x410 
    /*0000b438*/ CMP         R3, R4 
    /*0000b43c*/ BEQ         VPSS_IsByPassVgs_xb5cc
    VPSS_IsByPassVgs_xb440:
    /*0000b440*/ MOV         R3, #24 
    /*0000b444*/ MOVW        R2, #32052                  @ 0x7d34 
    /*0000b448*/ MLA         R3, R3, R4, R5 
    /*0000b44c*/ MOV         R1, #0 
    /*0000b450*/ STR         R1, [R3, R2] 
    VPSS_IsByPassVgs_xb454:
    /*0000b454*/ MOV         R6, #528                    @ 0x210 
    /*0000b458*/ MOVW        R3, #28804                  @ 0x7084 
    /*0000b45c*/ MUL         R6, R6, R4 
    /*0000b460*/ MOV         R9, #3 
    /*0000b464*/ MOV         R1, R4 
    /*0000b468*/ MOV         R0, R7 
    /*0000b46c*/ ADD         R2, R6, #28672              @ 0x7000 
    /*0000b470*/ ADD         R6, R5, R6 
    /*0000b474*/ ADD         R2, R2, #120                @ 0x78 
    /*0000b478*/ STR         R9, [R6, R3] 
    /*0000b47c*/ ADD         R2, R5, R2 
    /*0000b480*/ BL          0x000000000000B480          @ VPSS_DRV_GetOsd [R_ARM_CALL: .text+0x184f8] 
    /*0000b484*/ MOV         R3, #72                     @ 0x48 
    /*0000b488*/ MLA         R8, R3, R4, R8 
    /*0000b48c*/ LDR         R3, [R8, #56]               @ 0x38 
    /*0000b490*/ CMP         R3, #2 
    /*0000b494*/ BEQ         VPSS_IsByPassVgs_xb558
    /*0000b498*/ MOV         R2, #24 
    /*0000b49c*/ MOVW        R3, #28796                  @ 0x707c 
    /*0000b4a0*/ MLA         R2, R2, R4, R5 
    /*0000b4a4*/ LDR         R3, [R6, R3] 
    /*0000b4a8*/ MOVW        R1, #32056                  @ 0x7d38 
    /*0000b4ac*/ ADDS        R3, R3, #0 
    /*0000b4b0*/ MOVNE       R3, #1 
    /*0000b4b4*/ STR         R3, [R2, R1] 
    VPSS_IsByPassVgs_xb4b8:
    /*0000b4b8*/ CMP         R3, #0 
    /*0000b4bc*/ BEQ         VPSS_IsByPassVgs_xb57c
    VPSS_IsByPassVgs_xb4c0:
    /*0000b4c0*/ SUB         R3, R4, #3 
    /*0000b4c4*/ MOVW        R2, #32068                  @ 0x7d44 
    /*0000b4c8*/ CMP         R3, #7 
    /*0000b4cc*/ MOV         R3, #24 
    /*0000b4d0*/ MLA         R3, R3, R4, R5 
    /*0000b4d4*/ MOVLS       R1, #1 
    /*0000b4d8*/ MOVHI       R1, #0 
    /*0000b4dc*/ STR         R1, [R3, R2] 
    /*0000b4e0*/ MOV         R2, #24 
    /*0000b4e4*/ MLA         R4, R2, R4, R5 
    /*0000b4e8*/ MOVW        R3, #32064                  @ 0x7d40 
    /*0000b4ec*/ LDR         R0, [R4, R3] 
    /*0000b4f0*/ CMP         R0, #0 
    /*0000b4f4*/ MOVNE       R0, #0 
    /*0000b4f8*/ BNE         VPSS_IsByPassVgs_xb50c
    /*0000b4fc*/ MOVW        R3, #32060                  @ 0x7d3c 
    /*0000b500*/ LDR         R3, [R4, R3] 
    /*0000b504*/ CMP         R3, #0 
    /*0000b508*/ BEQ         VPSS_IsByPassVgs_xb514
    VPSS_IsByPassVgs_xb50c:
    /*0000b50c*/ ADD         SP, SP, #16 
    /*0000b510*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_IsByPassVgs_xb514:
    /*0000b514*/ MOVW        R2, #32048                  @ 0x7d30 
    /*0000b518*/ LDR         R0, [R4, R2] 
    /*0000b51c*/ CMP         R0, #0 
    /*0000b520*/ MOVNE       R0, R3 
    /*0000b524*/ BNE         VPSS_IsByPassVgs_xb50c
    /*0000b528*/ MOVW        R3, #32052                  @ 0x7d34 
    /*0000b52c*/ LDR         R3, [R4, R3] 
    /*0000b530*/ CMP         R3, #0 
    /*0000b534*/ BNE         VPSS_IsByPassVgs_xb50c
    /*0000b538*/ MOVW        R3, #32056                  @ 0x7d38 
    /*0000b53c*/ LDR         R3, [R4, R3] 
    /*0000b540*/ CMP         R3, #0 
    /*0000b544*/ MOVWEQ      R3, #32068                  @ 0x7d44 
    /*0000b548*/ LDREQ       R0, [R4, R3] 
    /*0000b54c*/ CLZEQ       R0, R0 
    /*0000b550*/ LSREQ       R0, R0, #5 
    /*0000b554*/ B           VPSS_IsByPassVgs_xb50c
    VPSS_IsByPassVgs_xb558:
    /*0000b558*/ MOV         R8, #24 
    /*0000b55c*/ MOVW        SL, #32056                  @ 0x7d38 
    /*0000b560*/ MLA         R8, R8, R4, R5 
    /*0000b564*/ MOVW        R3, #28796                  @ 0x707c 
    /*0000b568*/ MOV         R2, #0 
    /*0000b56c*/ STR         R2, [R8, SL] 
    /*0000b570*/ LDR         R3, [R6, R3] 
    /*0000b574*/ CMP         R3, R2 
    /*0000b578*/ BNE         VPSS_IsByPassVgs_xb5e4
    VPSS_IsByPassVgs_xb57c:
    /*0000b57c*/ MOV         R0, R7 
    /*0000b580*/ MOV         R2, #3 
    /*0000b584*/ MOV         R1, R4 
    /*0000b588*/ BL          0x000000000000B588          @ VPSS_DRV_PutOsd [R_ARM_CALL: .text+0x18680] 
    /*0000b58c*/ B           VPSS_IsByPassVgs_xb4c0
    VPSS_IsByPassVgs_xb590:
    /*0000b590*/ MOVW        R2, #32048                  @ 0x7d30 
    /*0000b594*/ MOVW        R3, #30380                  @ 0x76ac 
    /*0000b598*/ STR         SL, [R6, R2] 
    /*0000b59c*/ LDR         R3, [R9, R3] 
    /*0000b5a0*/ CMP         R3, SL 
    /*0000b5a4*/ BEQ         VPSS_IsByPassVgs_xb408
    /*0000b5a8*/ MOVW        R3, #857                    @ 0x359 
    /*0000b5ac*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2420] 
    /*0000b5b0*/ STR         R3, [SP] 
    /*0000b5b4*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2420] 
    /*0000b5b8*/ LDR         R3, [PC, #76]               @ 0x000000000000b60c 
    /*0000b5bc*/ MOV         R1, #7 
    /*0000b5c0*/ MOV         R0, #3 
    /*0000b5c4*/ BL          0x000000000000B5C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b5c8*/ B           VPSS_IsByPassVgs_xb408
    VPSS_IsByPassVgs_xb5cc:
    /*0000b5cc*/ MOV         R3, #24 
    /*0000b5d0*/ MOVW        R2, #32052                  @ 0x7d34 
    /*0000b5d4*/ MLA         R3, R3, R4, R5 
    /*0000b5d8*/ MOV         R1, #1 
    /*0000b5dc*/ STR         R1, [R3, R2] 
    /*0000b5e0*/ B           VPSS_IsByPassVgs_xb454
    VPSS_IsByPassVgs_xb5e4:
    /*0000b5e4*/ MOV         R3, #892                    @ 0x37c 
    /*0000b5e8*/ MOV         R0, R9 
    /*0000b5ec*/ STR         R3, [SP] 
    /*0000b5f0*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2458] 
    /*0000b5f4*/ LDR         R3, [PC, #16]               @ 0x000000000000b60c 
    /*0000b5f8*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2458] 
    /*0000b5fc*/ MOV         R1, #7 
    /*0000b600*/ BL          0x000000000000B600          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b604*/ LDR         R3, [R8, SL] 
    /*0000b608*/ B           VPSS_IsByPassVgs_xb4b8
    /*0000b60c*/ MULEQ       R0, R4, R8 
FUNC_END VPSS_IsByPassVgs


FUNC_BEGIN VPSS_AddByPassTask2Vgs
    /*0000b610*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000b614*/ MOV         R6, R0 
    /*0000b618*/ SUB         SP, SP, #12 
    /*0000b61c*/ MOV         R0, #45                     @ 0x2d 
    /*0000b620*/ MOV         R7, R1 
    /*0000b624*/ MOV         R8, R2 
    /*0000b628*/ MOV         R9, R3 
    /*0000b62c*/ BL          0x000000000000B62C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b630*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000b634*/ MOV         R5, R0 
    /*0000b638*/ BLX         R1 
    /*0000b63c*/ SUBS        R4, R0, #0 
    /*0000b640*/ BEQ         VPSS_AddByPassTask2Vgs_xb6a4
    /*0000b644*/ MOV         R2, R9 
    /*0000b648*/ MOV         R3, R4 
    /*0000b64c*/ MOV         R1, R7 
    /*0000b650*/ MOV         R0, R6 
    /*0000b654*/ BL          0x000000000000A4AC 
    /*0000b658*/ MOV         R0, R8 
    /*0000b65c*/ MOVW        R3, #0                      @ VPSS_VgsByPassTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0xaf20] 
    /*0000b660*/ MOV         R1, R4 
    /*0000b664*/ MOVT        R3, #0                      @ VPSS_VgsByPassTaskCallBack [R_ARM_MOVT_ABS: .text+0xaf20] 
    /*0000b668*/ STR         R3, [R4, #720]              @ 0x2d0 
    /*0000b66c*/ LDR         R3, [R5, #24] 
    /*0000b670*/ BLX         R3 
    /*0000b674*/ SUBS        R5, R0, #0 
    /*0000b678*/ BEQ         VPSS_AddByPassTask2Vgs_xb698
    /*0000b67c*/ MOV         R0, #2 
    /*0000b680*/ MOV         R2, R7 
    /*0000b684*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*0000b688*/ MOV         R1, R6 
    /*0000b68c*/ MOV         R3, R4 
    /*0000b690*/ MOV         R0, #7 
    /*0000b694*/ BL          0x000000000000B694          @ VPSS_VgsByPassTaskCallBack [R_ARM_CALL: .text+0xaf20] 
    VPSS_AddByPassTask2Vgs_xb698:
    /*0000b698*/ MOV         R0, R5 
    /*0000b69c*/ ADD         SP, SP, #12 
    /*0000b6a0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_AddByPassTask2Vgs_xb6a4:
    /*0000b6a4*/ MOVW        R3, #1030                   @ 0x406 
    /*0000b6a8*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2494] 
    /*0000b6ac*/ STR         R3, [SP] 
    /*0000b6b0*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2494] 
    /*0000b6b4*/ LDR         R3, [PC, #16]               @ 0x000000000000b6cc 
    /*0000b6b8*/ MOV         R1, #7 
    /*0000b6bc*/ MOV         R0, #3 
    /*0000b6c0*/ MVN         R5, #0 
    /*0000b6c4*/ BL          0x000000000000B6C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b6c8*/ B           VPSS_AddByPassTask2Vgs_xb698
    /*0000b6cc*/ ANDEQ       R0, R0, R8, LSR #17 
FUNC_END VPSS_AddByPassTask2Vgs


FUNC_BEGIN VPSS_SubmitByPassJob2Vgs
    /*0000b6d0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000b6d4*/ MOV         R5, R0 
    /*0000b6d8*/ SUB         SP, SP, #80                 @ 0x50 
    /*0000b6dc*/ MOV         R0, #45                     @ 0x2d 
    /*0000b6e0*/ MOV         R4, R2 
    /*0000b6e4*/ MOV         R6, R1 
    /*0000b6e8*/ BL          0x000000000000B6E8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b6ec*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*0000b6f0*/ LDR         R1, [R4, #328]              @ 0x148 
    /*0000b6f4*/ ADD         LR, SP, #16 
    /*0000b6f8*/ STR         R6, [SP] 
    /*0000b6fc*/ MOVW        IP, #0                      @ VPSS_VgsJobCallBack [R_ARM_MOVW_ABS_NC: .text+0xa36c] 
    /*0000b700*/ STRD        R2, [SP, #24] 
    /*0000b704*/ MOVT        IP, #0                      @ VPSS_VgsJobCallBack [R_ARM_MOVT_ABS: .text+0xa36c] 
    /*0000b708*/ STR         R1, [SP, #16] 
    /*0000b70c*/ MOV         R3, R5 
    /*0000b710*/ STR         IP, [SP, #72]               @ 0x48 
    /*0000b714*/ MOV         R2, #7 
    /*0000b718*/ STR         LR, [SP, #4] 
    /*0000b71c*/ MOV         R7, R0 
    /*0000b720*/ MOV         R0, #0 
    /*0000b724*/ MOV         R1, R0 
    /*0000b728*/ STR         R0, [SP, #68]               @ 0x44 
    /*0000b72c*/ STR         R0, [SP, #20] 
    /*0000b730*/ ADD         R0, SP, #12 
    /*0000b734*/ LDR         R8, [R7] 
    /*0000b738*/ BLX         R8 
    /*0000b73c*/ SUBS        R8, R0, #0 
    /*0000b740*/ BNE         VPSS_SubmitByPassJob2Vgs_xb808
    /*0000b744*/ LDR         R3, [PC, #256]              @ 0x000000000000b84c 
    /*0000b748*/ MOV         R0, #92                     @ 0x5c 
    /*0000b74c*/ MLA         R0, R0, R5, R3 
    /*0000b750*/ BL          0x000000000000B750          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0000b754*/ MOV         R3, R4 
    /*0000b758*/ MOV         R1, R6 
    /*0000b75c*/ MOV         R0, R5 
    /*0000b760*/ LDR         R2, [SP, #12] 
    /*0000b764*/ BL          0x000000000000B764          @ VPSS_AddByPassTask2Vgs [R_ARM_CALL: .text+0xb610] 
    /*0000b768*/ SUBS        R8, R0, #0 
    /*0000b76c*/ BEQ         VPSS_SubmitByPassJob2Vgs_xb7c8
    /*0000b770*/ MOVW        R3, #1080                   @ 0x438 
    /*0000b774*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24f0] 
    /*0000b778*/ STR         R3, [SP] 
    /*0000b77c*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24f0] 
    /*0000b780*/ LDR         R3, [PC, #200]              @ 0x000000000000b850 
    /*0000b784*/ MOV         R1, #7 
    /*0000b788*/ MOV         R0, #3 
    /*0000b78c*/ BL          0x000000000000B78C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_SubmitByPassJob2Vgs_xb790:
    /*0000b790*/ LDR         R3, [R7, #4] 
    /*0000b794*/ LDR         R0, [SP, #12] 
    /*0000b798*/ BLX         R3 
    /*0000b79c*/ MOVW        R3, #1096                   @ 0x448 
    /*0000b7a0*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2548] 
    /*0000b7a4*/ STR         R3, [SP] 
    /*0000b7a8*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2548] 
    /*0000b7ac*/ LDR         R3, [PC, #156]              @ 0x000000000000b850 
    /*0000b7b0*/ MOV         R1, #7 
    /*0000b7b4*/ MOV         R0, #6 
    /*0000b7b8*/ BL          0x000000000000B7B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_SubmitByPassJob2Vgs_xb7bc:
    /*0000b7bc*/ MOV         R0, R8 
    /*0000b7c0*/ ADD         SP, SP, #80                 @ 0x50 
    /*0000b7c4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_SubmitByPassJob2Vgs_xb7c8:
    /*0000b7c8*/ MOV         R2, R8 
    /*0000b7cc*/ LDR         R3, [R7, #12] 
    /*0000b7d0*/ MOV         R1, #1 
    /*0000b7d4*/ LDR         R0, [SP, #12] 
    /*0000b7d8*/ BLX         R3 
    /*0000b7dc*/ SUBS        R8, R0, #0 
    /*0000b7e0*/ BEQ         VPSS_SubmitByPassJob2Vgs_xb7bc
    /*0000b7e4*/ MOVW        R3, #1087                   @ 0x43f 
    /*0000b7e8*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x251c] 
    /*0000b7ec*/ STR         R3, [SP] 
    /*0000b7f0*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x251c] 
    /*0000b7f4*/ LDR         R3, [PC, #84]               @ 0x000000000000b850 
    /*0000b7f8*/ MOV         R1, #7 
    /*0000b7fc*/ MOV         R0, #3 
    /*0000b800*/ BL          0x000000000000B800          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b804*/ B           VPSS_SubmitByPassJob2Vgs_xb790
    VPSS_SubmitByPassJob2Vgs_xb808:
    /*0000b808*/ MOV         R1, R6 
    /*0000b80c*/ MOV         R0, R5 
    /*0000b810*/ BL          0x000000000000B810          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*0000b814*/ MOV         R0, R4 
    /*0000b818*/ MOV         R1, #10 
    /*0000b81c*/ BL          0x000000000000B81C          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000b820*/ MOVW        R3, #1070                   @ 0x42e 
    /*0000b824*/ MOV         R1, #7 
    /*0000b828*/ STR         R3, [SP] 
    /*0000b82c*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24c4] 
    /*0000b830*/ LDR         R3, [PC, #24]               @ 0x000000000000b850 
    /*0000b834*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24c4] 
    /*0000b838*/ MOV         R0, #3 
    /*0000b83c*/ BL          0x000000000000B83C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b840*/ MOV         R0, R8 
    /*0000b844*/ ADD         SP, SP, #80                 @ 0x50 
    /*0000b848*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*0000b84c*/ ANDEQ       R0, R0, R0, LSL R0          @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000b850*/ ANDEQ       R0, R0, R0, ASR #17 
FUNC_END VPSS_SubmitByPassJob2Vgs


FUNC_BEGIN VPSS_AddCoverExTask
    /*0000b854*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000b858*/ SUB         SP, SP, #28 
    /*0000b85c*/ MOV         R5, R1 
    /*0000b860*/ MOV         FP, R2 
    /*0000b864*/ STR         R0, [SP, #16] 
    /*0000b868*/ MOV         R0, #45                     @ 0x2d 
    /*0000b86c*/ STR         R1, [SP, #12] 
    /*0000b870*/ MOV         R4, R3 
    /*0000b874*/ BL          0x000000000000B874          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b878*/ MOV         R3, #464                    @ 0x1d0 
    /*0000b87c*/ MOVW        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000b880*/ MOVT        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000b884*/ MUL         R3, R3, FP 
    /*0000b888*/ LDR         R7, [R2, R5, LSL #2] 
    /*0000b88c*/ MOVW        R1, #30380                  @ 0x76ac 
    /*0000b890*/ ADD         R9, R7, R3 
    /*0000b894*/ LDR         R2, [R9, R1] 
    /*0000b898*/ CMP         R2, #0 
    /*0000b89c*/ MOV         SL, R0 
    /*0000b8a0*/ BEQ         VPSS_AddCoverExTask_xb9ac
    /*0000b8a4*/ MOV         R2, #24 
    /*0000b8a8*/ ADD         R5, R3, #30208              @ 0x7600 
    /*0000b8ac*/ MLA         R2, R2, FP, R7 
    /*0000b8b0*/ MOV         R3, R5 
    /*0000b8b4*/ ADD         R5, R5, #188                @ 0xbc 
    /*0000b8b8*/ ADD         R3, R3, #196                @ 0xc4 
    /*0000b8bc*/ ADD         R5, R7, R5 
    /*0000b8c0*/ MOV         R6, #0 
    /*0000b8c4*/ ADD         R7, R7, R3 
    /*0000b8c8*/ STR         R2, [SP, #20] 
    /*0000b8cc*/ B           VPSS_AddCoverExTask_xb8f0
    VPSS_AddCoverExTask_xb8d0:
    /*0000b8d0*/ LDR         R3, [SL, #16] 
    /*0000b8d4*/ BLX         R3 
    /*0000b8d8*/ MOVW        R3, #30380                  @ 0x76ac 
    /*0000b8dc*/ CMP         R0, #0 
    /*0000b8e0*/ BNE         VPSS_AddCoverExTask_xb9e4
    /*0000b8e4*/ LDR         R3, [R9, R3] 
    /*0000b8e8*/ CMP         R3, R6 
    /*0000b8ec*/ BLS         VPSS_AddCoverExTask_xb9ac
    VPSS_AddCoverExTask_xb8f0:
    /*0000b8f0*/ LDR         R3, [SL, #64]               @ 0x40 
    /*0000b8f4*/ BLX         R3 
    /*0000b8f8*/ LDR         R2, [SP, #64]               @ 0x40 
    /*0000b8fc*/ MOV         R1, FP 
    /*0000b900*/ SUBS        R8, R0, #0 
    /*0000b904*/ LDR         R0, [SP, #12] 
    /*0000b908*/ MOV         R3, R8 
    /*0000b90c*/ BEQ         VPSS_AddCoverExTask_xb9b8
    /*0000b910*/ BL          0x000000000000A4AC 
    /*0000b914*/ MOV         R3, #1 
    /*0000b918*/ STR         R3, [R4] 
    /*0000b91c*/ MOV         R1, R7 
    /*0000b920*/ LDR         R3, [R5] 
    /*0000b924*/ MOV         R2, #40                     @ 0x28 
    /*0000b928*/ ADD         R0, R4, #8 
    /*0000b92c*/ ADD         R7, R7, #56                 @ 0x38 
    /*0000b930*/ ADD         R5, R5, #56                 @ 0x38 
    /*0000b934*/ STR         R3, [R4, #4] 
    /*0000b938*/ LDR         R3, [R5, #-52]              @ 0xffffffcc 
    /*0000b93c*/ STR         R3, [R4, #48]               @ 0x30 
    /*0000b940*/ BL          0x000000000000B940          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000b944*/ MOVW        R3, #30380                  @ 0x76ac 
    /*0000b948*/ LDR         R3, [R9, R3] 
    /*0000b94c*/ MOV         R2, R4 
    /*0000b950*/ MOV         R1, R8 
    /*0000b954*/ LDR         R0, [SP, #16] 
    /*0000b958*/ SUB         R3, R3, #1 
    /*0000b95c*/ CMP         R3, R6 
    /*0000b960*/ ADD         R6, R6, #1 
    /*0000b964*/ BNE         VPSS_AddCoverExTask_xb8d0
    /*0000b968*/ LDR         IP, [SP, #20] 
    /*0000b96c*/ MOVW        R3, #32048                  @ 0x7d30 
    /*0000b970*/ LDR         R3, [IP, R3] 
    /*0000b974*/ CMP         R3, #1 
    /*0000b978*/ BNE         VPSS_AddCoverExTask_xb8d0
    /*0000b97c*/ LDR         LR, [SP, #20] 
    /*0000b980*/ MOVW        R3, #32052                  @ 0x7d34 
    /*0000b984*/ MOVW        IP, #32056                  @ 0x7d38 
    /*0000b988*/ LDR         R3, [LR, R3] 
    /*0000b98c*/ CMP         R3, #0 
    /*0000b990*/ BNE         VPSS_AddCoverExTask_xb8d0
    /*0000b994*/ LDR         IP, [LR, IP] 
    /*0000b998*/ MOVW        R3, #0                      @ VPSS_CoverexTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0xafc0] 
    /*0000b99c*/ MOVT        R3, #0                      @ VPSS_CoverexTaskCallBack [R_ARM_MOVT_ABS: .text+0xafc0] 
    /*0000b9a0*/ CMP         IP, #0 
    /*0000b9a4*/ STREQ       R3, [R8, #720]              @ 0x2d0 
    /*0000b9a8*/ B           VPSS_AddCoverExTask_xb8d0
    VPSS_AddCoverExTask_xb9ac:
    /*0000b9ac*/ MOV         R0, #0 
    /*0000b9b0*/ ADD         SP, SP, #28 
    /*0000b9b4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_AddCoverExTask_xb9b8:
    /*0000b9b8*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2494] 
    /*0000b9bc*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2494] 
    /*0000b9c0*/ MOVW        R3, #1243                   @ 0x4db 
    /*0000b9c4*/ STR         R3, [SP] 
    VPSS_AddCoverExTask_xb9c8:
    /*0000b9c8*/ LDR         R3, [PC, #40]               @ 0x000000000000b9f8 
    /*0000b9cc*/ MOV         R1, #7 
    /*0000b9d0*/ MOV         R0, #3 
    /*0000b9d4*/ BL          0x000000000000B9D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b9d8*/ MVN         R0, #0 
    /*0000b9dc*/ ADD         SP, SP, #28 
    /*0000b9e0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_AddCoverExTask_xb9e4:
    /*0000b9e4*/ MOVW        R3, #1268                   @ 0x4f4 
    /*0000b9e8*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2570] 
    /*0000b9ec*/ STR         R3, [SP] 
    /*0000b9f0*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2570] 
    /*0000b9f4*/ B           VPSS_AddCoverExTask_xb9c8
    /*0000b9f8*/ LDRDEQ      R0, [R0], -IP 
FUNC_END VPSS_AddCoverExTask


FUNC_BEGIN VPSS_AddOSDTask
    /*0000b9fc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ba00*/ SUB         SP, SP, #28 
    /*0000ba04*/ MOV         FP, R1 
    /*0000ba08*/ MOV         SL, R2 
    /*0000ba0c*/ STR         R0, [SP, #16] 
    /*0000ba10*/ MOV         R0, #45                     @ 0x2d 
    /*0000ba14*/ MOV         R5, R3 
    /*0000ba18*/ BL          0x000000000000BA18          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ba1c*/ MOV         R3, #528                    @ 0x210 
    /*0000ba20*/ MOVW        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000ba24*/ MUL         R3, R3, SL 
    /*0000ba28*/ MOVT        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000ba2c*/ MOVW        R1, #28796                  @ 0x707c 
    /*0000ba30*/ LDR         R4, [R2, FP, LSL #2] 
    /*0000ba34*/ ADD         R8, R4, R3 
    /*0000ba38*/ LDR         R2, [R8, R1] 
    /*0000ba3c*/ CMP         R2, #0 
    /*0000ba40*/ BEQ         VPSS_AddOSDTask_xbb54
    /*0000ba44*/ MOV         R2, #24 
    /*0000ba48*/ ADD         R3, R3, #28672              @ 0x7000 
    /*0000ba4c*/ MLA         R2, R2, SL, R4 
    /*0000ba50*/ ADD         R3, R3, #136                @ 0x88 
    /*0000ba54*/ MOV         R9, R0 
    /*0000ba58*/ ADD         R4, R4, R3 
    /*0000ba5c*/ MOV         R6, #0 
    /*0000ba60*/ STR         FP, [SP, #8] 
    /*0000ba64*/ STR         SL, [SP, #12] 
    /*0000ba68*/ STR         R2, [SP, #20] 
    /*0000ba6c*/ B           VPSS_AddOSDTask_xba90
    VPSS_AddOSDTask_xba70:
    /*0000ba70*/ LDR         R3, [R9, #20] 
    /*0000ba74*/ BLX         R3 
    /*0000ba78*/ MOVW        R3, #28796                  @ 0x707c 
    /*0000ba7c*/ CMP         R0, #0 
    /*0000ba80*/ BNE         VPSS_AddOSDTask_xbb8c
    /*0000ba84*/ LDR         R3, [R8, R3] 
    /*0000ba88*/ CMP         R3, R6 
    /*0000ba8c*/ BLS         VPSS_AddOSDTask_xbb54
    VPSS_AddOSDTask_xba90:
    /*0000ba90*/ LDR         R3, [R9, #64]               @ 0x40 
    /*0000ba94*/ BLX         R3 
    /*0000ba98*/ LDR         R2, [SP, #64]               @ 0x40 
    /*0000ba9c*/ LDR         R1, [SP, #12] 
    /*0000baa0*/ SUBS        R7, R0, #0 
    /*0000baa4*/ LDR         R0, [SP, #8] 
    /*0000baa8*/ MOV         R3, R7 
    /*0000baac*/ BEQ         VPSS_AddOSDTask_xbb60
    /*0000bab0*/ BL          0x000000000000A4AC 
    /*0000bab4*/ MOV         R3, #1 
    /*0000bab8*/ STR         R3, [R5] 
    /*0000babc*/ MOVW        R3, #28796                  @ 0x707c 
    /*0000bac0*/ LDR         IP, [R4] 
    /*0000bac4*/ MOV         R2, R5 
    /*0000bac8*/ MOV         R1, R7 
    /*0000bacc*/ LDR         R0, [SP, #16] 
    /*0000bad0*/ ADD         R4, R4, #64                 @ 0x40 
    /*0000bad4*/ STR         IP, [R5, #32] 
    /*0000bad8*/ LDR         IP, [R4, #-60]              @ 0xffffffc4 
    /*0000badc*/ STR         IP, [R5, #36]               @ 0x24 
    /*0000bae0*/ LDR         IP, [R4, #-56]              @ 0xffffffc8 
    /*0000bae4*/ STR         IP, [R5, #40]               @ 0x28 
    /*0000bae8*/ LDR         IP, [R4, #-52]              @ 0xffffffcc 
    /*0000baec*/ STR         IP, [R5, #44]               @ 0x2c 
    /*0000baf0*/ LDR         IP, [R4, #-8] 
    /*0000baf4*/ STR         IP, [R5, #16] 
    /*0000baf8*/ LDR         IP, [R4, #-40]              @ 0xffffffd8 
    /*0000bafc*/ STRB        IP, [R5, #28] 
    /*0000bb00*/ LDR         IP, [R4, #-36]              @ 0xffffffdc 
    /*0000bb04*/ STRB        IP, [R5, #29] 
    /*0000bb08*/ LDRD        SL, [R4, #-32]              @ 0xffffffe0 
    /*0000bb0c*/ STRD        SL, [R5, #8] 
    /*0000bb10*/ LDR         IP, [R4, #-12] 
    /*0000bb14*/ STR         IP, [R5, #20] 
    /*0000bb18*/ LDR         IP, [R4, #-44]              @ 0xffffffd4 
    /*0000bb1c*/ STRB        IP, [R5, #4] 
    /*0000bb20*/ LDR         R3, [R8, R3] 
    /*0000bb24*/ SUB         R3, R3, #1 
    /*0000bb28*/ CMP         R3, R6 
    /*0000bb2c*/ ADD         R6, R6, #1 
    /*0000bb30*/ BNE         VPSS_AddOSDTask_xba70
    /*0000bb34*/ LDR         IP, [SP, #20] 
    /*0000bb38*/ MOVW        R3, #32056                  @ 0x7d38 
    /*0000bb3c*/ LDR         R3, [IP, R3] 
    /*0000bb40*/ CMP         R3, #1 
    /*0000bb44*/ MOVWEQ      R3, #0                      @ VPSS_OverlayexTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0xb088] 
    /*0000bb48*/ MOVTEQ      R3, #0                      @ VPSS_OverlayexTaskCallBack [R_ARM_MOVT_ABS: .text+0xb088] 
    /*0000bb4c*/ STREQ       R3, [R7, #720]              @ 0x2d0 
    /*0000bb50*/ B           VPSS_AddOSDTask_xba70
    VPSS_AddOSDTask_xbb54:
    /*0000bb54*/ MOV         R0, #0 
    /*0000bb58*/ ADD         SP, SP, #28 
    /*0000bb5c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_AddOSDTask_xbb60:
    /*0000bb60*/ MOVW        R3, #1307                   @ 0x51b 
    /*0000bb64*/ MOV         R1, #7 
    /*0000bb68*/ STR         R3, [SP] 
    /*0000bb6c*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2494] 
    /*0000bb70*/ LDR         R3, [PC, #88]               @ 0x000000000000bbd0 
    /*0000bb74*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2494] 
    /*0000bb78*/ MOV         R0, #3 
    /*0000bb7c*/ BL          0x000000000000BB7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bb80*/ MVN         R0, #0 
    /*0000bb84*/ ADD         SP, SP, #28 
    /*0000bb88*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_AddOSDTask_xbb8c:
    /*0000bb8c*/ LDR         FP, [SP, #8] 
    /*0000bb90*/ MOVW        R3, #1337                   @ 0x539 
    /*0000bb94*/ LDR         SL, [SP, #12] 
    /*0000bb98*/ MOV         R1, #7 
    /*0000bb9c*/ STR         R3, [SP] 
    /*0000bba0*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25a4] 
    /*0000bba4*/ LDR         R3, [PC, #36]               @ 0x000000000000bbd0 
    /*0000bba8*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25a4] 
    /*0000bbac*/ MOV         R0, #3 
    /*0000bbb0*/ BL          0x000000000000BBB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bbb4*/ MOV         R0, FP 
    /*0000bbb8*/ MOV         R1, SL 
    /*0000bbbc*/ MOV         R2, #3 
    /*0000bbc0*/ BL          0x000000000000BBC0          @ VPSS_DRV_PutOsd [R_ARM_CALL: .text+0x18680] 
    /*0000bbc4*/ MVN         R0, #0 
    /*0000bbc8*/ ADD         SP, SP, #28 
    /*0000bbcc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000bbd0*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VPSS_AddOSDTask


FUNC_BEGIN VPSS_AddGetRegionLumaTask
    /*0000bbd4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000bbd8*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0000bbdc*/ MOV         R4, R1 
    /*0000bbe0*/ MOV         R7, R3 
    /*0000bbe4*/ STR         R0, [SP, #16] 
    /*0000bbe8*/ MOV         R0, #45                     @ 0x2d 
    /*0000bbec*/ STR         R1, [SP, #12] 
    /*0000bbf0*/ STR         R2, [SP, #8] 
    /*0000bbf4*/ BL          0x000000000000BBF4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000bbf8*/ MOV         R2, #32 
    /*0000bbfc*/ MOV         R1, #0 
    /*0000bc00*/ MOV         R8, R0 
    /*0000bc04*/ ADD         R0, SP, #24 
    /*0000bc08*/ BL          0x000000000000BC08          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000bc0c*/ LDR         R1, [R7, #1028]             @ 0x404 
    /*0000bc10*/ MOVW        R2, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0000bc14*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000bc18*/ MOVT        R2, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0000bc1c*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000bc20*/ CMP         R1, #0 
    /*0000bc24*/ LDR         R9, [R2, R4, LSL #2] 
    /*0000bc28*/ LDR         R3, [R3, R4, LSL #2] 
    /*0000bc2c*/ BEQ         VPSS_AddGetRegionLumaTask_xbd4c
    /*0000bc30*/ LDR         R1, [SP, #8] 
    /*0000bc34*/ MOV         R2, #24 
    /*0000bc38*/ MOV         SL, #0 
    /*0000bc3c*/ MOV         FP, #0 
    /*0000bc40*/ MOV         R4, R7 
    /*0000bc44*/ MOV         R6, #0 
    /*0000bc48*/ MLA         R3, R2, R1, R3 
    /*0000bc4c*/ STR         R3, [SP, #20] 
    /*0000bc50*/ B           VPSS_AddGetRegionLumaTask_xbc8c
    VPSS_AddGetRegionLumaTask_xbc54:
    /*0000bc54*/ MOV         R1, R5 
    /*0000bc58*/ LDR         R3, [R8, #28] 
    /*0000bc5c*/ ADD         R2, SP, #24 
    /*0000bc60*/ LDR         R0, [SP, #16] 
    /*0000bc64*/ BLX         R3 
    /*0000bc68*/ ADD         R6, R6, #1 
    /*0000bc6c*/ ADD         R4, R4, #16 
    /*0000bc70*/ CMP         R0, #0 
    /*0000bc74*/ BNE         VPSS_AddGetRegionLumaTask_xbd8c
    /*0000bc78*/ LDR         R3, [R7, #1028]             @ 0x404 
    /*0000bc7c*/ ADDS        SL, SL, #16 
    /*0000bc80*/ ADC         FP, FP, #0 
    /*0000bc84*/ CMP         R3, R6 
    /*0000bc88*/ BLS         VPSS_AddGetRegionLumaTask_xbd4c
    VPSS_AddGetRegionLumaTask_xbc8c:
    /*0000bc8c*/ LDR         R3, [R8, #64]               @ 0x40 
    /*0000bc90*/ BLX         R3 
    /*0000bc94*/ LDR         R2, [SP, #96]               @ 0x60 
    /*0000bc98*/ LDR         R1, [SP, #8] 
    /*0000bc9c*/ SUBS        R5, R0, #0 
    /*0000bca0*/ LDR         R0, [SP, #12] 
    /*0000bca4*/ MOV         R3, R5 
    /*0000bca8*/ BEQ         VPSS_AddGetRegionLumaTask_xbd5c
    /*0000bcac*/ BL          0x000000000000A4AC 
    /*0000bcb0*/ ADD         R1, R9, #16896              @ 0x4200 
    /*0000bcb4*/ ADD         R1, R1, #192                @ 0xc0 
    /*0000bcb8*/ STR         R5, [R7] 
    /*0000bcbc*/ LDR         R3, [R7, #1028]             @ 0x404 
    /*0000bcc0*/ ADD         R2, R9, #16384              @ 0x4000 
    /*0000bcc4*/ LDRD        R0, [R1, #-8] 
    /*0000bcc8*/ SUB         R3, R3, #1 
    /*0000bccc*/ LDR         IP, [R4, #4] 
    /*0000bcd0*/ ADDS        R0, R0, SL 
    /*0000bcd4*/ LDR         LR, [R4, #8] 
    /*0000bcd8*/ ADC         R1, R1, FP 
    /*0000bcdc*/ CMP         R3, R6 
    /*0000bce0*/ STRD        R0, [SP, #48]               @ 0x30 
    /*0000bce4*/ LDR         R3, [R4, #12] 
    /*0000bce8*/ LDR         R1, [R4, #16] 
    /*0000bcec*/ LDR         R2, [R2, #704]              @ 0x2c0 
    /*0000bcf0*/ STR         IP, [SP, #24] 
    /*0000bcf4*/ ADD         R2, R2, SL 
    /*0000bcf8*/ STR         LR, [SP, #28] 
    /*0000bcfc*/ STR         R2, [SP, #40]               @ 0x28 
    /*0000bd00*/ STR         R3, [SP, #32] 
    /*0000bd04*/ STR         R1, [SP, #36]               @ 0x24 
    /*0000bd08*/ BNE         VPSS_AddGetRegionLumaTask_xbc54
    /*0000bd0c*/ LDR         R2, [SP, #20] 
    /*0000bd10*/ MOVW        R3, #32052                  @ 0x7d34 
    /*0000bd14*/ LDR         R3, [R2, R3] 
    /*0000bd18*/ CMP         R3, #1 
    /*0000bd1c*/ BNE         VPSS_AddGetRegionLumaTask_xbc54
    /*0000bd20*/ LDR         R1, [SP, #20] 
    /*0000bd24*/ MOVW        R3, #32056                  @ 0x7d38 
    /*0000bd28*/ MOVW        R2, #0                      @ VPSS_RegionLumaTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0xb0c4] 
    /*0000bd2c*/ MOVT        R2, #0                      @ VPSS_RegionLumaTaskCallBack [R_ARM_MOVT_ABS: .text+0xb0c4] 
    /*0000bd30*/ LDR         R1, [R1, R3] 
    /*0000bd34*/ MOVW        R3, #0                      @ VPSS_RegionLumaOSDTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0xa254] 
    /*0000bd38*/ MOVT        R3, #0                      @ VPSS_RegionLumaOSDTaskCallBack [R_ARM_MOVT_ABS: .text+0xa254] 
    /*0000bd3c*/ CMP         R1, #0 
    /*0000bd40*/ STREQ       R2, [R5, #720]              @ 0x2d0 
    /*0000bd44*/ STRNE       R3, [R5, #720]              @ 0x2d0 
    /*0000bd48*/ B           VPSS_AddGetRegionLumaTask_xbc54
    VPSS_AddGetRegionLumaTask_xbd4c:
    /*0000bd4c*/ MOV         R5, #0 
    /*0000bd50*/ MOV         R0, R5 
    /*0000bd54*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000bd58*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_AddGetRegionLumaTask_xbd5c:
    /*0000bd5c*/ MOVW        R3, #1443                   @ 0x5a3 
    /*0000bd60*/ MOV         R1, #7 
    /*0000bd64*/ STR         R3, [SP] 
    /*0000bd68*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2494] 
    /*0000bd6c*/ LDR         R3, [PC, #112]              @ 0x000000000000bde4 
    /*0000bd70*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2494] 
    /*0000bd74*/ MOV         R0, #3 
    /*0000bd78*/ MVN         R5, #0 
    /*0000bd7c*/ BL          0x000000000000BD7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bd80*/ MOV         R0, R5 
    /*0000bd84*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000bd88*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_AddGetRegionLumaTask_xbd8c:
    /*0000bd8c*/ MOV         R5, R0 
    /*0000bd90*/ MOVW        R3, #1481                   @ 0x5c9 
    /*0000bd94*/ MOV         R1, #7 
    /*0000bd98*/ STR         R3, [SP] 
    /*0000bd9c*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2094] 
    /*0000bda0*/ LDR         R3, [PC, #60]               @ 0x000000000000bde4 
    /*0000bda4*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2094] 
    /*0000bda8*/ MOV         R0, #3 
    /*0000bdac*/ BL          0x000000000000BDAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bdb0*/ LDR         R2, [SP, #12] 
    /*0000bdb4*/ LDR         R1, [SP, #8] 
    /*0000bdb8*/ MOV         R3, #23 
    /*0000bdbc*/ MOV         R0, R5 
    /*0000bdc0*/ MLA         SL, R3, R2, R1 
    /*0000bdc4*/ MOVW        R3, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000bdc8*/ MOVT        R3, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000bdcc*/ MOV         R2, #0 
    /*0000bdd0*/ ADD         SL, SL, #16 
    /*0000bdd4*/ ADD         SL, R3, SL, LSL #2 
    /*0000bdd8*/ STR         R2, [SL, #4] 
    /*0000bddc*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000bde0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000bde4*/ ANDEQ       R0, R0, R0, LSL #18 
FUNC_END VPSS_AddGetRegionLumaTask


FUNC_BEGIN VPSS_SubmitSomeJob2Vgs
    /*0000bde8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000bdec*/ MOV         R4, R0 
    /*0000bdf0*/ SUB         SP, SP, #212                @ 0xd4 
    /*0000bdf4*/ MOV         R0, #45                     @ 0x2d 
    /*0000bdf8*/ MOV         R6, R2 
    /*0000bdfc*/ MOV         R5, R1 
    /*0000be00*/ BL          0x000000000000BE00          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000be04*/ LDRD        R2, [R6, #120]              @ 0x78 
    /*0000be08*/ LDR         R1, [R6, #328]              @ 0x148 
    /*0000be0c*/ MOV         IP, #0 
    /*0000be10*/ STR         R5, [SP] 
    /*0000be14*/ STRD        R2, [SP, #72]               @ 0x48 
    /*0000be18*/ MOV         R2, #1 
    /*0000be1c*/ STR         R1, [SP, #64]               @ 0x40 
    /*0000be20*/ MOV         R3, R4 
    /*0000be24*/ STR         R2, [SP, #116]              @ 0x74 
    /*0000be28*/ MOV         R1, IP 
    /*0000be2c*/ STR         IP, [SP, #68]               @ 0x44 
    /*0000be30*/ MOV         R2, #7 
    /*0000be34*/ MOV         R7, R0 
    /*0000be38*/ MOVW        R0, #0                      @ VPSS_VgsJobCallBack [R_ARM_MOVW_ABS_NC: .text+0xa36c] 
    /*0000be3c*/ MOVT        R0, #0                      @ VPSS_VgsJobCallBack [R_ARM_MOVT_ABS: .text+0xa36c] 
    /*0000be40*/ STR         R0, [SP, #120]              @ 0x78 
    /*0000be44*/ ADD         R0, SP, #64                 @ 0x40 
    /*0000be48*/ STR         R0, [SP, #4] 
    /*0000be4c*/ ADD         R0, SP, #8 
    /*0000be50*/ LDR         R8, [R7] 
    /*0000be54*/ BLX         R8 
    /*0000be58*/ SUBS        R8, R0, #0 
    /*0000be5c*/ BNE         VPSS_SubmitSomeJob2Vgs_xbf88
    /*0000be60*/ LDR         R3, [PC, #480]              @ 0x000000000000c048 
    /*0000be64*/ MOV         R0, #92                     @ 0x5c 
    /*0000be68*/ MLA         R0, R0, R4, R3 
    /*0000be6c*/ BL          0x000000000000BE6C          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0000be70*/ MOVW        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000be74*/ MOVT        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000be78*/ MOV         R3, #464                    @ 0x1d0 
    /*0000be7c*/ MOVW        R1, #30380                  @ 0x76ac 
    /*0000be80*/ LDR         R9, [R2, R4, LSL #2] 
    /*0000be84*/ MLA         R3, R3, R5, R9 
    /*0000be88*/ LDR         R2, [R3, R1] 
    /*0000be8c*/ CMP         R2, #0 
    /*0000be90*/ BEQ         VPSS_SubmitSomeJob2Vgs_xbed0
    /*0000be94*/ MOVW        R2, #30388                  @ 0x76b4 
    /*0000be98*/ MOV         IP, #2 
    /*0000be9c*/ MOV         R1, R8 
    /*0000bea0*/ STR         IP, [R3, R2] 
    /*0000bea4*/ ADD         R0, SP, #12 
    /*0000bea8*/ MOV         R2, #52                     @ 0x34 
    /*0000beac*/ BL          0x000000000000BEAC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000beb0*/ LDR         R0, [SP, #8] 
    /*0000beb4*/ ADD         R3, SP, #12 
    /*0000beb8*/ STR         R6, [SP] 
    /*0000bebc*/ MOV         R2, R5 
    /*0000bec0*/ MOV         R1, R4 
    /*0000bec4*/ BL          0x000000000000BEC4          @ VPSS_AddCoverExTask [R_ARM_CALL: .text+0xb854] 
    /*0000bec8*/ CMP         R0, #0 
    /*0000becc*/ BNE         VPSS_SubmitSomeJob2Vgs_xbfd4
    VPSS_SubmitSomeJob2Vgs_xbed0:
    /*0000bed0*/ MOV         R0, R4 
    /*0000bed4*/ ADD         R1, SP, #128                @ 0x80 
    /*0000bed8*/ BL          0x000000000000BED8          @ VPSS_DRV_GetLumaAttr [R_ARM_CALL: .text+0x1a560] 
    /*0000bedc*/ LDR         R2, [SP, #128]              @ 0x80 
    /*0000bee0*/ LDR         R3, [R2, #1036]             @ 0x40c 
    /*0000bee4*/ CMP         R3, #0 
    /*0000bee8*/ BEQ         VPSS_SubmitSomeJob2Vgs_xbef8
    /*0000beec*/ LDR         R3, [R2, #1040]             @ 0x410 
    /*0000bef0*/ CMP         R5, R3 
    /*0000bef4*/ BEQ         VPSS_SubmitSomeJob2Vgs_xbfac
    VPSS_SubmitSomeJob2Vgs_xbef8:
    /*0000bef8*/ MOV         R3, #528                    @ 0x210 
    /*0000befc*/ MOVW        R2, #28796                  @ 0x707c 
    /*0000bf00*/ MLA         R3, R3, R5, R9 
    /*0000bf04*/ LDR         R2, [R3, R2] 
    /*0000bf08*/ CMP         R2, #0 
    /*0000bf0c*/ BNE         VPSS_SubmitSomeJob2Vgs_xbf48
    VPSS_SubmitSomeJob2Vgs_xbf10:
    /*0000bf10*/ MOV         R2, R6 
    /*0000bf14*/ MOV         R1, R5 
    /*0000bf18*/ MOV         R0, R4 
    /*0000bf1c*/ BL          0x000000000000BF1C          @ VPSS_DRV_Put_VbForVgs [R_ARM_CALL: .text+0x262e8] 
    /*0000bf20*/ LDR         R3, [R7, #12] 
    /*0000bf24*/ MOV         R2, #0 
    /*0000bf28*/ MOV         R1, #1 
    /*0000bf2c*/ LDR         R0, [SP, #8] 
    /*0000bf30*/ BLX         R3 
    /*0000bf34*/ SUBS        R8, R0, #0 
    /*0000bf38*/ BNE         VPSS_SubmitSomeJob2Vgs_xc018
    VPSS_SubmitSomeJob2Vgs_xbf3c:
    /*0000bf3c*/ MOV         R0, R8 
    /*0000bf40*/ ADD         SP, SP, #212                @ 0xd4 
    /*0000bf44*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_SubmitSomeJob2Vgs_xbf48:
    /*0000bf48*/ MOVW        R1, #28804                  @ 0x7084 
    /*0000bf4c*/ MOV         R0, #3 
    /*0000bf50*/ MOV         R2, #80                     @ 0x50 
    /*0000bf54*/ STR         R0, [R3, R1] 
    /*0000bf58*/ MOV         R1, #0 
    /*0000bf5c*/ ADD         R0, SP, #128                @ 0x80 
    /*0000bf60*/ BL          0x000000000000BF60          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000bf64*/ LDR         R0, [SP, #8] 
    /*0000bf68*/ STR         R6, [SP] 
    /*0000bf6c*/ ADD         R3, SP, #128                @ 0x80 
    /*0000bf70*/ MOV         R2, R5 
    /*0000bf74*/ MOV         R1, R4 
    /*0000bf78*/ BL          0x000000000000BF78          @ VPSS_AddOSDTask [R_ARM_CALL: .text+0xb9fc] 
    /*0000bf7c*/ CMP         R0, #0 
    /*0000bf80*/ BEQ         VPSS_SubmitSomeJob2Vgs_xbf10
    /*0000bf84*/ B           VPSS_SubmitSomeJob2Vgs_xbfd4
    VPSS_SubmitSomeJob2Vgs_xbf88:
    /*0000bf88*/ MOV         R1, R5 
    /*0000bf8c*/ MOV         R0, R4 
    /*0000bf90*/ BL          0x000000000000BF90          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*0000bf94*/ MOV         R0, R6 
    /*0000bf98*/ MOV         R1, #10 
    /*0000bf9c*/ BL          0x000000000000BF9C          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000bfa0*/ MOV         R0, R8 
    /*0000bfa4*/ ADD         SP, SP, #212                @ 0xd4 
    /*0000bfa8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_SubmitSomeJob2Vgs_xbfac:
    /*0000bfac*/ MOV         R1, #0 
    /*0000bfb0*/ MOV         R3, R2 
    /*0000bfb4*/ STR         R1, [R2, #1036]             @ 0x40c 
    /*0000bfb8*/ MOV         R2, R5 
    /*0000bfbc*/ LDR         R0, [SP, #8] 
    /*0000bfc0*/ MOV         R1, R4 
    /*0000bfc4*/ STR         R6, [SP] 
    /*0000bfc8*/ BL          0x000000000000BFC8          @ VPSS_AddGetRegionLumaTask [R_ARM_CALL: .text+0xbbd4] 
    /*0000bfcc*/ CMP         R0, #0 
    /*0000bfd0*/ BEQ         VPSS_SubmitSomeJob2Vgs_xbef8
    VPSS_SubmitSomeJob2Vgs_xbfd4:
    /*0000bfd4*/ MOV         R2, R6 
    /*0000bfd8*/ MOV         R1, R5 
    /*0000bfdc*/ MOV         R0, R4 
    /*0000bfe0*/ BL          0x000000000000BFE0          @ VPSS_DRV_Put_VbForVgs [R_ARM_CALL: .text+0x262e8] 
    VPSS_SubmitSomeJob2Vgs_xbfe4:
    /*0000bfe4*/ MOVW        R3, #1611                   @ 0x64b 
    /*0000bfe8*/ MOV         R1, #7 
    /*0000bfec*/ STR         R3, [SP] 
    /*0000bff0*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2548] 
    /*0000bff4*/ LDR         R3, [PC, #80]               @ 0x000000000000c04c 
    /*0000bff8*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2548] 
    /*0000bffc*/ MOV         R0, #3 
    /*0000c000*/ MVN         R8, #0 
    /*0000c004*/ BL          0x000000000000C004          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c008*/ LDR         R3, [R7, #4] 
    /*0000c00c*/ LDR         R0, [SP, #8] 
    /*0000c010*/ BLX         R3 
    /*0000c014*/ B           VPSS_SubmitSomeJob2Vgs_xbf3c
    VPSS_SubmitSomeJob2Vgs_xc018:
    /*0000c018*/ ADD         R9, R9, #28672              @ 0x7000 
    /*0000c01c*/ MOV         R1, #1 
    /*0000c020*/ MOVW        R3, #1602                   @ 0x642 
    /*0000c024*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x251c] 
    /*0000c028*/ STR         R1, [R9, #3108]             @ 0xc24 
    /*0000c02c*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x251c] 
    /*0000c030*/ STR         R3, [SP] 
    /*0000c034*/ MOV         R1, #7 
    /*0000c038*/ LDR         R3, [PC, #12]               @ 0x000000000000c04c 
    /*0000c03c*/ MOV         R0, #3 
    /*0000c040*/ BL          0x000000000000C040          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c044*/ B           VPSS_SubmitSomeJob2Vgs_xbfe4
    /*0000c048*/ ANDEQ       R0, R0, R0, LSL R0          @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000c04c*/ ANDEQ       R0, R0, IP, LSL R9 
FUNC_END VPSS_SubmitSomeJob2Vgs


FUNC_BEGIN VPSS_SubmitFrame2Vgs
    /*0000c050*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000c054*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000c058*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000c05c*/ SUB         SP, SP, #20 
    /*0000c060*/ MOV         R4, R0 
    /*0000c064*/ MOV         R6, R2 
    /*0000c068*/ LDR         R7, [R3, R0, LSL #2] 
    /*0000c06c*/ MOV         R5, R1 
    /*0000c070*/ BL          0x000000000000C070          @ VPSS_IsByPassVgs [R_ARM_CALL: .text+0xb370] 
    /*0000c074*/ CMP         R0, #1 
    /*0000c078*/ BEQ         VPSS_SubmitFrame2Vgs_xc0b8
    /*0000c07c*/ MOV         R3, #72                     @ 0x48 
    /*0000c080*/ MLA         R3, R3, R5, R7 
    /*0000c084*/ LDR         R3, [R3, #824]              @ 0x338 
    /*0000c088*/ CMP         R3, #2 
    /*0000c08c*/ BEQ         VPSS_SubmitFrame2Vgs_xc0d0
    /*0000c090*/ MOV         R0, R6 
    /*0000c094*/ BL          0x000000000000C094          @ VPSS_DRV_CheckPicForVGS [R_ARM_CALL: .text+0x190c0] 
    /*0000c098*/ CMN         R0, #1 
    /*0000c09c*/ BEQ         VPSS_SubmitFrame2Vgs_xc0f8
    /*0000c0a0*/ MOV         R2, R6 
    /*0000c0a4*/ MOV         R1, R5 
    /*0000c0a8*/ MOV         R0, R4 
    /*0000c0ac*/ ADD         SP, SP, #20 
    /*0000c0b0*/ POP         {R4, R5, R6, R7, LR} 
    VPSS_SubmitFrame2Vgs_xc0b4:
    /*0000c0b4*/ B           VPSS_SubmitFrame2Vgs_xc0b4  @ VPSS_SubmitSomeJob2Vgs [R_ARM_JUMP24: .text+0xbde8] 
    VPSS_SubmitFrame2Vgs_xc0b8:
    /*0000c0b8*/ MOV         R2, R6 
    /*0000c0bc*/ MOV         R1, R5 
    /*0000c0c0*/ MOV         R0, R4 
    /*0000c0c4*/ ADD         SP, SP, #20 
    /*0000c0c8*/ POP         {R4, R5, R6, R7, LR} 
    VPSS_SubmitFrame2Vgs_xc0cc:
    /*0000c0cc*/ B           VPSS_SubmitFrame2Vgs_xc0cc  @ VPSS_SubmitByPassJob2Vgs [R_ARM_JUMP24: .text+0xb6d0] 
    VPSS_SubmitFrame2Vgs_xc0d0:
    /*0000c0d0*/ MOVW        R3, #1628                   @ 0x65c 
    /*0000c0d4*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25d4] 
    /*0000c0d8*/ STR         R3, [SP] 
    /*0000c0dc*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25d4] 
    /*0000c0e0*/ STR         R5, [SP, #8] 
    /*0000c0e4*/ MOV         R1, #7 
    /*0000c0e8*/ STR         R4, [SP, #4] 
    /*0000c0ec*/ MOV         R0, #3 
    /*0000c0f0*/ LDR         R3, [PC, #36]               @ 0x000000000000c11c 
    /*0000c0f4*/ BL          0x000000000000C0F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_SubmitFrame2Vgs_xc0f8:
    /*0000c0f8*/ MOV         R0, R6 
    /*0000c0fc*/ MOV         R1, #10 
    /*0000c100*/ BL          0x000000000000C100          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000c104*/ MOV         R0, R4 
    /*0000c108*/ MOV         R1, R5 
    /*0000c10c*/ BL          0x000000000000C10C          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*0000c110*/ MVN         R0, #0 
    /*0000c114*/ ADD         SP, SP, #20 
    /*0000c118*/ POP         {R4, R5, R6, R7, PC} 
    /*0000c11c*/ ANDEQ       R0, R0, R4, LSR R9 
FUNC_END VPSS_SubmitFrame2Vgs


FUNC_BEGIN VPSS_GdcByPassTaskCallBack
    /*0000c120*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000c124*/ MOV         R5, R3 
    /*0000c128*/ ADD         R3, R3, #688                @ 0x2b0 
    /*0000c12c*/ SUB         SP, SP, #368                @ 0x170 
    /*0000c130*/ ADD         IP, R5, #704                @ 0x2c0 
    /*0000c134*/ LDR         LR, [R5, #764]              @ 0x2fc 
    /*0000c138*/ LDRD        R8, [R3] 
    /*0000c13c*/ MOV         R4, R2 
    /*0000c140*/ ADD         R2, SP, #352                @ 0x160 
    /*0000c144*/ LDR         R0, [R5, #680]              @ 0x2a8 
    /*0000c148*/ LDRD        R6, [IP, #-8] 
    /*0000c14c*/ CMP         LR, #1 
    /*0000c150*/ LDR         R3, [R5, #672]              @ 0x2a0 
    /*0000c154*/ MOV         SL, R1 
    /*0000c158*/ STRD        R8, [R2] 
    /*0000c15c*/ ADD         R2, SP, #360                @ 0x168 
    /*0000c160*/ STR         R0, [SP, #344]              @ 0x158 
    /*0000c164*/ STRD        R6, [R2] 
    /*0000c168*/ STR         R3, [SP, #348]              @ 0x15c 
    /*0000c16c*/ BEQ         VPSS_GdcByPassTaskCallBack_xc1d8
    /*0000c170*/ MOV         R1, R4 
    /*0000c174*/ MOV         R0, SL 
    /*0000c178*/ BL          0x000000000000C178          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*0000c17c*/ MOV         R1, #10 
    /*0000c180*/ ADD         R0, R5, #336                @ 0x150 
    /*0000c184*/ BL          0x000000000000C184          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000c188*/ MOVW        R3, #1759                   @ 0x6df 
    /*0000c18c*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2618] 
    /*0000c190*/ STR         R3, [SP] 
    /*0000c194*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2618] 
    /*0000c198*/ LDR         R3, [PC, #128]              @ 0x000000000000c220 
    /*0000c19c*/ MOV         R1, #7 
    /*0000c1a0*/ MOV         R0, #3 
    /*0000c1a4*/ BL          0x000000000000C1A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_GdcByPassTaskCallBack_xc1a8:
    /*0000c1a8*/ MOV         R4, #92                     @ 0x5c 
    /*0000c1ac*/ MOVW        R5, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000c1b0*/ MUL         R4, R4, SL 
    /*0000c1b4*/ MOVT        R5, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000c1b8*/ ADD         R0, R4, #16 
    /*0000c1bc*/ ADD         R0, R5, R0 
    /*0000c1c0*/ BL          0x000000000000C1C0          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0000c1c4*/ ADD         R0, R4, #36                 @ 0x24 
    /*0000c1c8*/ ADD         R0, R5, R0 
    /*0000c1cc*/ BL          0x000000000000C1CC          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000c1d0*/ ADD         SP, SP, #368                @ 0x170 
    /*0000c1d4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_GdcByPassTaskCallBack_xc1d8:
    /*0000c1d8*/ ADD         R5, R5, #336                @ 0x150 
    /*0000c1dc*/ MOV         R2, #336                    @ 0x150 
    /*0000c1e0*/ ADD         R0, SP, #8 
    /*0000c1e4*/ MOV         R1, R5 
    /*0000c1e8*/ BL          0x000000000000C1E8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000c1ec*/ BL          0x000000000000C1EC          @ VPSS_IsVgsExist [R_ARM_CALL: .text+0xb2dc] 
    /*0000c1f0*/ ADD         R2, SP, #8 
    /*0000c1f4*/ MOV         R1, R4 
    /*0000c1f8*/ CMP         R0, #0 
    /*0000c1fc*/ MOV         R0, SL 
    /*0000c200*/ BEQ         VPSS_GdcByPassTaskCallBack_xc20c
    /*0000c204*/ BL          0x000000000000C204          @ VPSS_SubmitFrame2Vgs [R_ARM_CALL: .text+0xc050] 
    /*0000c208*/ B           VPSS_GdcByPassTaskCallBack_xc1a8
    VPSS_GdcByPassTaskCallBack_xc20c:
    /*0000c20c*/ BL          0x000000000000C20C          @ VPSS_ProcSendPic [R_ARM_CALL: .text+0xad30] 
    /*0000c210*/ MOV         R0, R5 
    /*0000c214*/ MOV         R1, #10 
    /*0000c218*/ BL          0x000000000000C218          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000c21c*/ B           VPSS_GdcByPassTaskCallBack_xc1a8
    /*0000c220*/ ANDEQ       R0, R0, IP, ASR #18 
FUNC_END VPSS_GdcByPassTaskCallBack


FUNC_BEGIN VPSS_GdcLastTaskCallBack
    /*0000c224*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000c228*/ MOV         R8, R3 
    /*0000c22c*/ ADD         R3, R3, #688                @ 0x2b0 
    /*0000c230*/ SUB         SP, SP, #368                @ 0x170 
    /*0000c234*/ ADD         IP, R8, #704                @ 0x2c0 
    /*0000c238*/ LDR         LR, [R8, #764]              @ 0x2fc 
    /*0000c23c*/ LDRD        R6, [R3] 
    /*0000c240*/ MOV         SL, R2 
    /*0000c244*/ ADD         R2, SP, #352                @ 0x160 
    /*0000c248*/ LDR         R0, [R8, #680]              @ 0x2a8 
    /*0000c24c*/ LDRD        R4, [IP, #-8] 
    /*0000c250*/ CMP         LR, #1 
    /*0000c254*/ LDR         R3, [R8, #672]              @ 0x2a0 
    /*0000c258*/ MOV         R9, R1 
    /*0000c25c*/ STRD        R6, [R2] 
    /*0000c260*/ ADD         R2, SP, #360                @ 0x168 
    /*0000c264*/ STR         R0, [SP, #344]              @ 0x158 
    /*0000c268*/ STRD        R4, [R2] 
    /*0000c26c*/ STR         R3, [SP, #348]              @ 0x15c 
    /*0000c270*/ BEQ         VPSS_GdcLastTaskCallBack_xc2e0
    /*0000c274*/ MOV         R1, SL 
    /*0000c278*/ MOV         R0, R9 
    /*0000c27c*/ BL          0x000000000000C27C          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*0000c280*/ MOVW        R3, #1864                   @ 0x748 
    /*0000c284*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x264c] 
    /*0000c288*/ STR         R3, [SP] 
    /*0000c28c*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x264c] 
    /*0000c290*/ LDR         R3, [PC, #132]              @ 0x000000000000c31c 
    /*0000c294*/ MOV         R1, #7 
    /*0000c298*/ MOV         R0, #3 
    /*0000c29c*/ BL          0x000000000000C29C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c2a0*/ ADD         R8, R8, #336                @ 0x150 
    VPSS_GdcLastTaskCallBack_xc2a4:
    /*0000c2a4*/ MOV         R0, R8 
    /*0000c2a8*/ MOV         R1, #10 
    /*0000c2ac*/ BL          0x000000000000C2AC          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    VPSS_GdcLastTaskCallBack_xc2b0:
    /*0000c2b0*/ MOV         R4, #92                     @ 0x5c 
    /*0000c2b4*/ MOVW        R5, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000c2b8*/ MUL         R4, R4, R9 
    /*0000c2bc*/ MOVT        R5, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000c2c0*/ ADD         R0, R4, #16 
    /*0000c2c4*/ ADD         R0, R5, R0 
    /*0000c2c8*/ BL          0x000000000000C2C8          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0000c2cc*/ ADD         R0, R4, #36                 @ 0x24 
    /*0000c2d0*/ ADD         R0, R5, R0 
    /*0000c2d4*/ BL          0x000000000000C2D4          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000c2d8*/ ADD         SP, SP, #368                @ 0x170 
    /*0000c2dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_GdcLastTaskCallBack_xc2e0:
    /*0000c2e0*/ ADD         R8, R8, #336                @ 0x150 
    /*0000c2e4*/ MOV         R2, #336                    @ 0x150 
    /*0000c2e8*/ ADD         R0, SP, #8 
    /*0000c2ec*/ MOV         R1, R8 
    /*0000c2f0*/ BL          0x000000000000C2F0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000c2f4*/ BL          0x000000000000C2F4          @ VPSS_IsVgsExist [R_ARM_CALL: .text+0xb2dc] 
    /*0000c2f8*/ ADD         R2, SP, #8 
    /*0000c2fc*/ MOV         R1, SL 
    /*0000c300*/ CMP         R0, #0 
    /*0000c304*/ MOV         R0, R9 
    /*0000c308*/ BNE         VPSS_GdcLastTaskCallBack_xc314
    /*0000c30c*/ BL          0x000000000000C30C          @ VPSS_ProcSendPic [R_ARM_CALL: .text+0xad30] 
    /*0000c310*/ B           VPSS_GdcLastTaskCallBack_xc2a4
    VPSS_GdcLastTaskCallBack_xc314:
    /*0000c314*/ BL          0x000000000000C314          @ VPSS_SubmitFrame2Vgs [R_ARM_CALL: .text+0xc050] 
    /*0000c318*/ B           VPSS_GdcLastTaskCallBack_xc2b0
    /*0000c31c*/ ANDEQ       R0, R0, R8, ROR #18 
FUNC_END VPSS_GdcLastTaskCallBack


FUNC_BEGIN VPSS_IsGdcExist
    VPSS_IsGdcExist_xc320:
    /*0000c320*/ B           VPSS_IsGdcExist_xc320       @ VPSS_DRV_IsGdcExist [R_ARM_JUMP24: .text+0x26260] 
FUNC_END VPSS_IsGdcExist


FUNC_BEGIN VPSS_IsNeedRotationFun
    /*0000c324*/ PUSH        {R4, R5, LR} 
    /*0000c328*/ SUB         SP, SP, #36                 @ 0x24 
    /*0000c32c*/ MOV         R4, R0 
    /*0000c330*/ MOV         R5, R1 
    /*0000c334*/ MOV         R2, SP 
    /*0000c338*/ BL          0x000000000000C338          @ VPSS_DRV_GetChnRotationAttrUse [R_ARM_CALL: .text+0x19370] 
    /*0000c33c*/ MOV         R0, R4 
    /*0000c340*/ MOV         R1, R5 
    /*0000c344*/ ADD         R2, SP, #4 
    /*0000c348*/ BL          0x000000000000C348          @ VPSS_DRV_GetChnRotationExAttrUse [R_ARM_CALL: .text+0x19728] 
    /*0000c34c*/ LDR         R3, [SP] 
    /*0000c350*/ CMP         R3, #0 
    /*0000c354*/ LDREQ       R0, [SP, #4] 
    /*0000c358*/ MOVNE       R0, #1 
    /*0000c35c*/ SUBEQ       R0, R0, #1 
    /*0000c360*/ CLZEQ       R0, R0 
    /*0000c364*/ LSREQ       R0, R0, #5 
    /*0000c368*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000c36c*/ POP         {R4, R5, PC} 
FUNC_END VPSS_IsNeedRotationFun


FUNC_BEGIN VPSS_IsByPassGdc
    /*0000c370*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000c374*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000c378*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000c37c*/ MOV         R6, R1 
    /*0000c380*/ LDR         R8, [R3, R0, LSL #2] 
    /*0000c384*/ MOV         R4, #24 
    /*0000c388*/ SUB         SP, SP, #56                 @ 0x38 
    /*0000c38c*/ MOV         R5, R0 
    /*0000c390*/ ADD         R2, SP, #24 
    /*0000c394*/ MOVW        R7, #32060                  @ 0x7d3c 
    /*0000c398*/ MLA         R4, R4, R6, R8 
    /*0000c39c*/ BL          0x000000000000C39C          @ VPSS_DRV_GetChnLDCAttrUse [R_ARM_CALL: .text+0x194f0] 
    /*0000c3a0*/ LDR         R3, [SP, #24] 
    /*0000c3a4*/ MOV         R1, R6 
    /*0000c3a8*/ MOV         R0, R5 
    /*0000c3ac*/ ADD         R2, SP, #4 
    /*0000c3b0*/ STR         R3, [R4, R7] 
    /*0000c3b4*/ BL          0x000000000000C3B4          @ VPSS_DRV_GetChnRotationAttrUse [R_ARM_CALL: .text+0x19370] 
    /*0000c3b8*/ ADD         R2, SP, #8 
    /*0000c3bc*/ MOV         R1, R6 
    /*0000c3c0*/ MOV         R0, R5 
    /*0000c3c4*/ BL          0x000000000000C3C4          @ VPSS_DRV_GetChnSpreadAttrUse [R_ARM_CALL: .text+0x198e8] 
    /*0000c3c8*/ MOV         R1, R6 
    /*0000c3cc*/ MOV         R0, R5 
    /*0000c3d0*/ BL          0x000000000000C3D0          @ VPSS_IsNeedRotationFun [R_ARM_CALL: .text+0xc324] 
    /*0000c3d4*/ LDR         R3, [R4, R7] 
    /*0000c3d8*/ MOVW        R2, #32064                  @ 0x7d40 
    /*0000c3dc*/ ORRS        R3, R0, R3 
    /*0000c3e0*/ STR         R0, [R4, R2] 
    /*0000c3e4*/ LDREQ       R0, [SP, #8] 
    /*0000c3e8*/ MOVNE       R0, #0 
    /*0000c3ec*/ CLZEQ       R0, R0 
    /*0000c3f0*/ LSREQ       R0, R0, #5 
    /*0000c3f4*/ ADD         SP, SP, #56                 @ 0x38 
    /*0000c3f8*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VPSS_IsByPassGdc


FUNC_BEGIN VPSS_AddByPassTask2Gdc
    /*0000c3fc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000c400*/ MOV         R4, #0 
    /*0000c404*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000c408*/ MOV         R6, R0 
    /*0000c40c*/ MOV         R8, R1 
    /*0000c410*/ MOV         R9, R2 
    /*0000c414*/ MOV         R1, R4 
    /*0000c418*/ MOV         R2, #36                     @ 0x24 
    /*0000c41c*/ ADD         R0, SP, #28 
    /*0000c420*/ STR         R4, [SP, #12] 
    /*0000c424*/ STR         R4, [SP, #8] 
    /*0000c428*/ STR         R4, [SP, #16] 
    /*0000c42c*/ STR         R4, [SP, #20] 
    /*0000c430*/ STR         R4, [SP, #24] 
    /*0000c434*/ BL          0x000000000000C434          @ memset [R_ARM_CALL: +0x0] 
    /*0000c438*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000c43c*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000c440*/ MOV         R0, #37                     @ 0x25 
    /*0000c444*/ LDR         FP, [R3, R6, LSL #2] 
    /*0000c448*/ BL          0x000000000000C448          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c44c*/ MOV         SL, R0 
    /*0000c450*/ MOV         R0, R4 
    /*0000c454*/ LDR         R3, [SL, #92]               @ 0x5c 
    /*0000c458*/ BLX         R3 
    /*0000c45c*/ SUBS        R5, R0, #0 
    /*0000c460*/ BEQ         VPSS_AddByPassTask2Gdc_xc510
    /*0000c464*/ STR         R8, [R5, #760]              @ 0x2f8 
    /*0000c468*/ MOV         R2, #7 
    /*0000c46c*/ STR         R6, [R5, #756]              @ 0x2f4 
    /*0000c470*/ MOVW        R3, #0                      @ VPSS_GdcByPassTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0xc120] 
    /*0000c474*/ STR         R2, [R5, #752]              @ 0x2f0 
    /*0000c478*/ MOVT        R3, #0                      @ VPSS_GdcByPassTaskCallBack [R_ARM_MOVT_ABS: .text+0xc120] 
    /*0000c47c*/ STR         R3, [R5, #748]              @ 0x2ec 
    /*0000c480*/ ADD         LR, R9, #352                @ 0x160 
    /*0000c484*/ LDR         R1, [R9, #340]              @ 0x154 
    /*0000c488*/ ADD         IP, R5, #688                @ 0x2b0 
    /*0000c48c*/ STR         R4, [R5, #676]              @ 0x2a4 
    /*0000c490*/ ADD         R3, R5, #704                @ 0x2c0 
    /*0000c494*/ ADD         R8, R8, #3584               @ 0xe00 
    /*0000c498*/ MOV         R2, #336                    @ 0x150 
    /*0000c49c*/ STR         R1, [R5, #672]              @ 0x2a0 
    /*0000c4a0*/ ADD         R8, R8, #12 
    /*0000c4a4*/ LDR         R1, [R9, #336]              @ 0x150 
    /*0000c4a8*/ STR         R4, [R5, #684]              @ 0x2ac 
    /*0000c4ac*/ STR         R1, [R5, #680]              @ 0x2a8 
    /*0000c4b0*/ MOV         R1, R9 
    /*0000c4b4*/ LDRD        R6, [LR, #-8] 
    /*0000c4b8*/ STRD        R6, [IP] 
    /*0000c4bc*/ LDRD        R6, [LR] 
    /*0000c4c0*/ STRD        R6, [R3, #-8] 
    /*0000c4c4*/ BL          0x000000000000C4C4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000c4c8*/ MOV         R2, #336                    @ 0x150 
    /*0000c4cc*/ MOV         R1, R9 
    /*0000c4d0*/ ADD         R0, R5, R2 
    /*0000c4d4*/ BL          0x000000000000C4D4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000c4d8*/ LDR         LR, [FP, R8, LSL #3] 
    /*0000c4dc*/ STR         R4, [SP, #32] 
    /*0000c4e0*/ MOV         R3, R4 
    /*0000c4e4*/ STR         R4, [SP] 
    /*0000c4e8*/ MOV         IP, #1 
    /*0000c4ec*/ ADD         R2, SP, #28 
    /*0000c4f0*/ ADD         R1, SP, #8 
    /*0000c4f4*/ MOV         R0, R5 
    /*0000c4f8*/ LDR         R4, [SL, #100]              @ 0x64 
    /*0000c4fc*/ STR         LR, [SP, #20] 
    /*0000c500*/ STR         IP, [SP, #60]               @ 0x3c 
    /*0000c504*/ BLX         R4 
    VPSS_AddByPassTask2Gdc_xc508:
    /*0000c508*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000c50c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_AddByPassTask2Gdc_xc510:
    /*0000c510*/ MOVW        R3, #1783                   @ 0x6f7 
    /*0000c514*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2494] 
    /*0000c518*/ STR         R3, [SP] 
    /*0000c51c*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2494] 
    /*0000c520*/ LDR         R3, [PC, #20]               @ 0x000000000000c53c 
    /*0000c524*/ MOV         R1, #7 
    /*0000c528*/ MOV         R0, #3 
    /*0000c52c*/ BL          0x000000000000C52C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c530*/ MOVW        R0, #32782                  @ 0x800e 
    /*0000c534*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000c538*/ B           VPSS_AddByPassTask2Gdc_xc508
    /*0000c53c*/ ANDEQ       R0, R0, R4, LSL #19 
FUNC_END VPSS_AddByPassTask2Gdc


FUNC_BEGIN VPSS_SubmitByPassJob2Gdc
    /*0000c540*/ PUSH        {R4, R5, R6, LR} 
    /*0000c544*/ SUB         SP, SP, #8 
    /*0000c548*/ MOV         R5, R0 
    /*0000c54c*/ MOV         R6, R2 
    /*0000c550*/ BL          0x000000000000C550          @ VPSS_AddByPassTask2Gdc [R_ARM_CALL: .text+0xc3fc] 
    /*0000c554*/ SUBS        R4, R0, #0 
    /*0000c558*/ BNE         VPSS_SubmitByPassJob2Gdc_xc578
    /*0000c55c*/ LDR         R3, [PC, #108]              @ 0x000000000000c5d0 
    /*0000c560*/ MOV         R0, #92                     @ 0x5c 
    /*0000c564*/ MLA         R0, R0, R5, R3 
    /*0000c568*/ BL          0x000000000000C568          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0000c56c*/ MOV         R0, R4 
    /*0000c570*/ ADD         SP, SP, #8 
    /*0000c574*/ POP         {R4, R5, R6, PC} 
    VPSS_SubmitByPassJob2Gdc_xc578:
    /*0000c578*/ MOVW        R3, #1814                   @ 0x716 
    /*0000c57c*/ MOV         R1, #7 
    /*0000c580*/ STR         R3, [SP] 
    /*0000c584*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2678] 
    /*0000c588*/ LDR         R3, [PC, #68]               @ 0x000000000000c5d4 
    /*0000c58c*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2678] 
    /*0000c590*/ MOV         R0, #3 
    /*0000c594*/ BL          0x000000000000C594          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c598*/ MOV         R0, R6 
    /*0000c59c*/ MOV         R1, #10 
    /*0000c5a0*/ BL          0x000000000000C5A0          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000c5a4*/ MOVW        R3, #1826                   @ 0x722 
    /*0000c5a8*/ MOV         R1, #7 
    /*0000c5ac*/ STR         R3, [SP] 
    /*0000c5b0*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24f0] 
    /*0000c5b4*/ LDR         R3, [PC, #24]               @ 0x000000000000c5d4 
    /*0000c5b8*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24f0] 
    /*0000c5bc*/ MOV         R0, #6 
    /*0000c5c0*/ BL          0x000000000000C5C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c5c4*/ MOV         R0, R4 
    /*0000c5c8*/ ADD         SP, SP, #8 
    /*0000c5cc*/ POP         {R4, R5, R6, PC} 
    /*0000c5d0*/ ANDEQ       R0, R0, R0, LSL R0          @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000c5d4*/ MULEQ       R0, IP, R9 
FUNC_END VPSS_SubmitByPassJob2Gdc


FUNC_BEGIN VPSS_SubmitSomeJob2Gdc
    /*0000c5d8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000c5dc*/ MOV         R6, R1 
    /*0000c5e0*/ SUB         SP, SP, #452                @ 0x1c4 
    /*0000c5e4*/ MOV         R1, #0 
    /*0000c5e8*/ MOV         R4, R1 
    /*0000c5ec*/ MOV         R5, R0 
    /*0000c5f0*/ MOV         R8, R2 
    /*0000c5f4*/ ADD         R0, SP, #148                @ 0x94 
    /*0000c5f8*/ MOV         R2, #36                     @ 0x24 
    /*0000c5fc*/ BL          0x000000000000C5FC          @ memset [R_ARM_CALL: +0x0] 
    /*0000c600*/ MOV         R1, R4 
    /*0000c604*/ MOV         R2, #32 
    /*0000c608*/ ADD         R0, SP, #116                @ 0x74 
    /*0000c60c*/ STR         R4, [SP, #44]               @ 0x2c 
    /*0000c610*/ STR         R4, [SP, #68]               @ 0x44 
    /*0000c614*/ STR         R4, [SP, #72]               @ 0x48 
    /*0000c618*/ STR         R4, [SP, #76]               @ 0x4c 
    /*0000c61c*/ STR         R4, [SP, #80]               @ 0x50 
    /*0000c620*/ STR         R4, [SP, #84]               @ 0x54 
    /*0000c624*/ BL          0x000000000000C624          @ memset [R_ARM_CALL: +0x0] 
    /*0000c628*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000c62c*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000c630*/ MOV         R0, #37                     @ 0x25 
    /*0000c634*/ STR         R4, [SP, #52]               @ 0x34 
    /*0000c638*/ STR         R4, [SP, #48]               @ 0x30 
    /*0000c63c*/ LDR         R7, [R3, R5, LSL #2] 
    /*0000c640*/ STR         R4, [SP, #56]               @ 0x38 
    /*0000c644*/ STR         R4, [SP, #60]               @ 0x3c 
    /*0000c648*/ STR         R4, [SP, #64]               @ 0x40 
    /*0000c64c*/ BL          0x000000000000C64C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c650*/ SUBS        R9, R0, #0 
    /*0000c654*/ BEQ         VPSS_SubmitSomeJob2Gdc_xca78
    /*0000c658*/ LDR         R3, [R9, #88]               @ 0x58 
    /*0000c65c*/ CMP         R3, R4 
    /*0000c660*/ BEQ         VPSS_SubmitSomeJob2Gdc_xca78
    /*0000c664*/ LDR         R2, [R9, #100]              @ 0x64 
    /*0000c668*/ CMP         R2, R4 
    /*0000c66c*/ BEQ         VPSS_SubmitSomeJob2Gdc_xca78
    /*0000c670*/ ADD         R7, R7, R6, LSL #3 
    /*0000c674*/ ADD         R1, SP, #44                 @ 0x2c 
    /*0000c678*/ ADD         R7, R7, #28672              @ 0x7000 
    /*0000c67c*/ LDR         R0, [R7, #96]               @ 0x60 
    /*0000c680*/ BLX         R3 
    /*0000c684*/ CMP         R0, #0 
    /*0000c688*/ BNE         VPSS_SubmitSomeJob2Gdc_xca44
    /*0000c68c*/ LDR         R3, [R9, #92]               @ 0x5c 
    /*0000c690*/ BLX         R3 
    /*0000c694*/ SUBS        R4, R0, #0 
    /*0000c698*/ BEQ         VPSS_SubmitSomeJob2Gdc_xca98
    /*0000c69c*/ ADD         R3, R4, #336                @ 0x150 
    /*0000c6a0*/ ADD         R2, SP, #48                 @ 0x30 
    /*0000c6a4*/ MOV         R1, R6 
    /*0000c6a8*/ MOV         R0, R5 
    /*0000c6ac*/ MOV         SL, R3 
    /*0000c6b0*/ STR         R3, [SP, #24] 
    /*0000c6b4*/ BL          0x000000000000C6B4          @ VPSS_DRV_GetChnRotationAttrUse [R_ARM_CALL: .text+0x19370] 
    /*0000c6b8*/ ADD         R2, SP, #88                 @ 0x58 
    /*0000c6bc*/ MOV         R1, R6 
    /*0000c6c0*/ MOV         R0, R5 
    /*0000c6c4*/ BL          0x000000000000C6C4          @ VPSS_DRV_GetChnRotationExAttrUse [R_ARM_CALL: .text+0x19728] 
    /*0000c6c8*/ ADD         R2, SP, #116                @ 0x74 
    /*0000c6cc*/ MOV         R1, R6 
    /*0000c6d0*/ MOV         R0, R5 
    /*0000c6d4*/ BL          0x000000000000C6D4          @ VPSS_DRV_GetChnLDCAttrUse [R_ARM_CALL: .text+0x194f0] 
    /*0000c6d8*/ ADD         R2, SP, #52                 @ 0x34 
    /*0000c6dc*/ MOV         R1, R6 
    /*0000c6e0*/ MOV         R0, R5 
    /*0000c6e4*/ BL          0x000000000000C6E4          @ VPSS_DRV_GetChnSpreadAttrUse [R_ARM_CALL: .text+0x198e8] 
    /*0000c6e8*/ MOV         R2, #336                    @ 0x150 
    /*0000c6ec*/ MOV         R1, R8 
    /*0000c6f0*/ MOV         R0, R4 
    /*0000c6f4*/ BL          0x000000000000C6F4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000c6f8*/ MOV         R2, #336                    @ 0x150 
    /*0000c6fc*/ MOV         R1, R8 
    /*0000c700*/ MOV         R0, SL 
    /*0000c704*/ BL          0x000000000000C704          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000c708*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000c70c*/ LDR         R0, [R4, #20] 
    /*0000c710*/ BIC         R3, R3, #2 
    /*0000c714*/ CMP         R3, #1 
    /*0000c718*/ LDREQ       R3, [R4] 
    /*0000c71c*/ LDREQ       R2, [R4, #4] 
    /*0000c720*/ STR         R0, [SP, #208]              @ 0xd0 
    /*0000c724*/ MOV         R0, R5 
    /*0000c728*/ STREQ       R3, [R4, #340]              @ 0x154 
    /*0000c72c*/ LDR         R3, [SP, #88]               @ 0x58 
    /*0000c730*/ LDR         IP, [R4, #24] 
    /*0000c734*/ STR         IP, [SP, #204]              @ 0xcc 
    /*0000c738*/ LDR         LR, [R4, #12] 
    /*0000c73c*/ LDR         IP, [R4, #16] 
    /*0000c740*/ STR         LR, [SP, #184]              @ 0xb8 
    /*0000c744*/ STR         IP, [SP, #212]              @ 0xd4 
    /*0000c748*/ STREQ       R2, [R4, #336]              @ 0x150 
    /*0000c74c*/ CMP         R3, #1 
    /*0000c750*/ LDR         R3, [SP, #24] 
    /*0000c754*/ LDREQ       R2, [SP, #108]              @ 0x6c 
    /*0000c758*/ LDREQ       R1, [SP, #112]              @ 0x70 
    /*0000c75c*/ LDRNE       R2, [R4, #336]              @ 0x150 
    /*0000c760*/ LDRNE       R1, [R4, #340]              @ 0x154 
    /*0000c764*/ STREQ       R2, [R4, #336]              @ 0x150 
    /*0000c768*/ STREQ       R1, [R4, #340]              @ 0x154 
    /*0000c76c*/ STR         R2, [SP, #188]              @ 0xbc 
    /*0000c770*/ ADD         R2, SP, #184                @ 0xb8 
    /*0000c774*/ STR         R1, [SP, #192]              @ 0xc0 
    /*0000c778*/ MOV         R1, R6 
    /*0000c77c*/ BL          0x000000000000C77C          @ VPSS_DRV_PrepareVB [R_ARM_CALL: .text+0x23338] 
    /*0000c780*/ SUBS        FP, R0, #0 
    /*0000c784*/ BNE         VPSS_SubmitSomeJob2Gdc_xc8f0
    /*0000c788*/ MOVW        R3, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000c78c*/ MOV         R0, #1 
    /*0000c790*/ MOV         SL, R3 
    /*0000c794*/ BL          0x000000000000C794          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c798*/ MOV         R3, SL 
    /*0000c79c*/ MOVT        R3, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000c7a0*/ MOV         R1, R4 
    /*0000c7a4*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000c7a8*/ MOV         SL, R3 
    /*0000c7ac*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*0000c7b0*/ LDR         R0, [SP, #24] 
    /*0000c7b4*/ BLX         R3 
    /*0000c7b8*/ MOV         R3, #23 
    /*0000c7bc*/ MLA         R3, R3, R5, R6 
    /*0000c7c0*/ MOV         R2, #37                     @ 0x25 
    /*0000c7c4*/ STR         R2, [R4, #668]              @ 0x29c 
    /*0000c7c8*/ MOV         R2, #7 
    /*0000c7cc*/ LDR         R1, [R7, #96]               @ 0x60 
    /*0000c7d0*/ ADD         R3, R3, #20 
    /*0000c7d4*/ STR         R5, [SP, #72]               @ 0x48 
    /*0000c7d8*/ STR         R6, [SP, #76]               @ 0x4c 
    /*0000c7dc*/ LDR         R3, [SL, R3, LSL #2] 
    /*0000c7e0*/ STR         FP, [SP, #148]              @ 0x94 
    /*0000c7e4*/ CMP         R3, #0 
    /*0000c7e8*/ STR         R1, [SP, #80]               @ 0x50 
    /*0000c7ec*/ STR         R2, [SP, #68]               @ 0x44 
    /*0000c7f0*/ BNE         VPSS_SubmitSomeJob2Gdc_xc998
    /*0000c7f4*/ ADD         R3, SP, #220                @ 0xdc 
    /*0000c7f8*/ STR         R3, [SP, #32] 
    VPSS_SubmitSomeJob2Gdc_xc7fc:
    /*0000c7fc*/ STR         R5, [R4, #756]              @ 0x2f4 
    /*0000c800*/ MOVW        R3, #0                      @ VPSS_GdcLastTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0xc224] 
    /*0000c804*/ STR         R6, [R4, #760]              @ 0x2f8 
    /*0000c808*/ MOVT        R3, #0                      @ VPSS_GdcLastTaskCallBack [R_ARM_MOVT_ABS: .text+0xc224] 
    /*0000c80c*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000c810*/ MOV         IP, #0 
    /*0000c814*/ LDR         R3, [R8, #340]              @ 0x154 
    /*0000c818*/ ADD         R7, R8, #352                @ 0x160 
    /*0000c81c*/ STR         IP, [R4, #676]              @ 0x2a4 
    /*0000c820*/ ADD         LR, R4, #688                @ 0x2b0 
    /*0000c824*/ STR         IP, [SP, #432]              @ 0x1b0 
    /*0000c828*/ ADD         R1, SP, #68                 @ 0x44 
    /*0000c82c*/ STR         R3, [R4, #672]              @ 0x2a0 
    /*0000c830*/ MOV         R3, IP 
    /*0000c834*/ LDR         R0, [R8, #336]              @ 0x150 
    /*0000c838*/ ADD         R2, SP, #148                @ 0x94 
    /*0000c83c*/ STR         IP, [R4, #684]              @ 0x2ac 
    /*0000c840*/ STR         IP, [SP, #152]              @ 0x98 
    /*0000c844*/ STR         R0, [R4, #680]              @ 0x2a8 
    /*0000c848*/ MOV         R0, R4 
    /*0000c84c*/ LDRD        SL, [R7, #-8] 
    /*0000c850*/ STR         IP, [SP, #176]              @ 0xb0 
    /*0000c854*/ STR         IP, [SP, #156]              @ 0x9c 
    /*0000c858*/ STRD        SL, [LR] 
    /*0000c85c*/ LDRD        SL, [R7] 
    /*0000c860*/ STR         IP, [SP, #180]              @ 0xb4 
    /*0000c864*/ ADD         IP, R4, #704                @ 0x2c0 
    /*0000c868*/ LDR         LR, [SP, #116]              @ 0x74 
    /*0000c86c*/ STRD        SL, [IP, #-8] 
    /*0000c870*/ LDR         IP, [SP, #48]               @ 0x30 
    /*0000c874*/ LDR         SL, [SP, #24] 
    /*0000c878*/ LDR         R7, [SP, #52]               @ 0x34 
    /*0000c87c*/ STR         LR, [SP, #172]              @ 0xac 
    /*0000c880*/ LDR         LR, [SP, #32] 
    /*0000c884*/ LDRD        SL, [SL, #120]              @ 0x78 
    /*0000c888*/ STR         IP, [SP, #164]              @ 0xa4 
    /*0000c88c*/ LDR         IP, [SP, #88]               @ 0x58 
    /*0000c890*/ LDR         R4, [R4, #664]              @ 0x298 
    /*0000c894*/ STR         R7, [SP, #160]              @ 0xa0 
    /*0000c898*/ STR         LR, [SP] 
    /*0000c89c*/ LDR         R7, [R9, #100]              @ 0x64 
    /*0000c8a0*/ STRD        SL, [SP, #24] 
    /*0000c8a4*/ STR         IP, [SP, #168]              @ 0xa8 
    /*0000c8a8*/ BLX         R7 
    /*0000c8ac*/ MOV         R1, #10 
    /*0000c8b0*/ SUBS        FP, R0, #0 
    /*0000c8b4*/ MOV         R0, R8 
    /*0000c8b8*/ BNE         VPSS_SubmitSomeJob2Gdc_xc950
    /*0000c8bc*/ BL          0x000000000000C8BC          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000c8c0*/ MOV         R3, #23 
    /*0000c8c4*/ MLA         R6, R3, R5, R6 
    /*0000c8c8*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000c8cc*/ MOV         R0, #92                     @ 0x5c 
    /*0000c8d0*/ MLA         R0, R0, R5, R3 
    /*0000c8d4*/ ADD         R6, R6, #20 
    /*0000c8d8*/ STR         FP, [R3, R6, LSL #2] 
    /*0000c8dc*/ ADD         R0, R0, #16 
    /*0000c8e0*/ BL          0x000000000000C8E0          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    VPSS_SubmitSomeJob2Gdc_xc8e4:
    /*0000c8e4*/ MOV         R0, FP 
    /*0000c8e8*/ ADD         SP, SP, #452                @ 0x1c4 
    /*0000c8ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_SubmitSomeJob2Gdc_xc8f0:
    /*0000c8f0*/ LDR         R1, [SP, #192]              @ 0xc0 
    /*0000c8f4*/ MOVW        R3, #1971                   @ 0x7b3 
    /*0000c8f8*/ LDR         R0, [SP, #188]              @ 0xbc 
    /*0000c8fc*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2704] 
    /*0000c900*/ STR         R3, [SP] 
    /*0000c904*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2704] 
    /*0000c908*/ STR         R1, [SP, #16] 
    /*0000c90c*/ MOV         R1, #7 
    /*0000c910*/ STR         R0, [SP, #12] 
    /*0000c914*/ MOV         R0, #3 
    /*0000c918*/ LDR         R3, [PC, #432]              @ 0x000000000000cad0 
    /*0000c91c*/ STR         R6, [SP, #8] 
    /*0000c920*/ STR         R5, [SP, #4] 
    /*0000c924*/ BL          0x000000000000C924          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c928*/ MOV         R1, #10 
    /*0000c92c*/ MOV         R0, R4 
    /*0000c930*/ BL          0x000000000000C930          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000c934*/ LDR         R3, [R9, #96]               @ 0x60 
    /*0000c938*/ MOV         R1, R4 
    /*0000c93c*/ MOV         R0, #0 
    /*0000c940*/ BLX         R3 
    /*0000c944*/ MOV         R0, FP 
    /*0000c948*/ ADD         SP, SP, #452                @ 0x1c4 
    /*0000c94c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_SubmitSomeJob2Gdc_xc950:
    /*0000c950*/ BL          0x000000000000C950          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000c954*/ LDRD        R2, [SP, #24] 
    /*0000c958*/ MOV         R1, #10 
    /*0000c95c*/ MOV         R0, R4 
    /*0000c960*/ STR         R1, [SP] 
    /*0000c964*/ BL          0x000000000000C964          @ VPSS_MKP_PutVb [R_ARM_CALL: .text+0xa658] 
    /*0000c968*/ STMIB       SP, {R5, R6} 
    /*0000c96c*/ MOVW        R3, #2047                   @ 0x7ff 
    /*0000c970*/ MOV         R1, #7 
    /*0000c974*/ STR         R3, [SP] 
    /*0000c978*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2754] 
    /*0000c97c*/ LDR         R3, [PC, #332]              @ 0x000000000000cad0 
    /*0000c980*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2754] 
    /*0000c984*/ MOV         R0, #3 
    /*0000c988*/ BL          0x000000000000C988          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c98c*/ MOV         R0, FP 
    /*0000c990*/ ADD         SP, SP, #452                @ 0x1c4 
    /*0000c994*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_SubmitSomeJob2Gdc_xc998:
    /*0000c998*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000c99c*/ MOV         R1, R6 
    /*0000c9a0*/ MOV         R0, R5 
    /*0000c9a4*/ MOV         R3, #1 
    /*0000c9a8*/ ADD         R2, R2, #8 
    /*0000c9ac*/ STR         R3, [SP, #148]              @ 0x94 
    /*0000c9b0*/ BL          0x000000000000C9B0          @ VPSS_DRV_GetLDCOperationAttr [R_ARM_CALL: .text+0x19554] 
    /*0000c9b4*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000c9b8*/ CMP         R3, #0 
    /*0000c9bc*/ BNE         VPSS_SubmitSomeJob2Gdc_xca28
    /*0000c9c0*/ LDR         R1, [SP, #88]               @ 0x58 
    /*0000c9c4*/ CMP         R1, #0 
    /*0000c9c8*/ BEQ         VPSS_SubmitSomeJob2Gdc_xca10
    /*0000c9cc*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000c9d0*/ MOV         R1, R6 
    /*0000c9d4*/ MOV         R0, R5 
    /*0000c9d8*/ ADD         R2, R2, #1136               @ 0x470 
    /*0000c9dc*/ ADD         R2, R2, #8 
    /*0000c9e0*/ BL          0x000000000000C9E0          @ VPSS_DRV_GetRotationExOperationAttr [R_ARM_CALL: .text+0x19760] 
    VPSS_SubmitSomeJob2Gdc_xc9e4:
    /*0000c9e4*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000c9e8*/ ADD         R2, SP, #220                @ 0xdc 
    /*0000c9ec*/ MOV         R1, R6 
    /*0000c9f0*/ MOV         R0, R5 
    /*0000c9f4*/ ADD         R3, R3, #936                @ 0x3a8 
    /*0000c9f8*/ STR         R2, [SP, #32] 
    /*0000c9fc*/ BL          0x000000000000C9FC          @ VPSS_DRV_GetSpreadOperationAttr [R_ARM_CALL: .text+0x19920] 
    /*0000ca00*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000ca04*/ ADD         R0, R0, #936                @ 0x3a8 
    /*0000ca08*/ BL          0x000000000000CA08          @ VPSS_DRV_SetSpreadOperationPointer [R_ARM_CALL: .text+0x1999c] 
    /*0000ca0c*/ B           VPSS_SubmitSomeJob2Gdc_xc7fc
    VPSS_SubmitSomeJob2Gdc_xca10:
    /*0000ca10*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000ca14*/ MOV         R2, #208                    @ 0xd0 
    /*0000ca18*/ ADD         R0, R0, #1136               @ 0x470 
    /*0000ca1c*/ ADD         R0, R0, #8 
    /*0000ca20*/ BL          0x000000000000CA20          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000ca24*/ B           VPSS_SubmitSomeJob2Gdc_xc9e4
    VPSS_SubmitSomeJob2Gdc_xca28:
    /*0000ca28*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000ca2c*/ MOV         R1, R6 
    /*0000ca30*/ MOV         R0, R5 
    /*0000ca34*/ ADD         R2, R2, #1136               @ 0x470 
    /*0000ca38*/ ADD         R2, R2, #8 
    /*0000ca3c*/ BL          0x000000000000CA3C          @ VPSS_DRV_GetRotationOperationAttr [R_ARM_CALL: .text+0x192e0] 
    /*0000ca40*/ B           VPSS_SubmitSomeJob2Gdc_xc9e4
    VPSS_SubmitSomeJob2Gdc_xca44:
    /*0000ca44*/ MOVW        R3, #1917                   @ 0x77d 
    /*0000ca48*/ STR         R3, [SP] 
    /*0000ca4c*/ LDR         R3, [PC, #124]              @ 0x000000000000cad0 
    /*0000ca50*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26d4] 
    /*0000ca54*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26d4] 
    /*0000ca58*/ MOV         R1, #7 
    /*0000ca5c*/ MOV         R0, #4 
    VPSS_SubmitSomeJob2Gdc_xca60:
    /*0000ca60*/ BL          0x000000000000CA60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ca64*/ MOV         R0, R8 
    /*0000ca68*/ MOV         R1, #10 
    /*0000ca6c*/ MVN         FP, #0 
    /*0000ca70*/ BL          0x000000000000CA70          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000ca74*/ B           VPSS_SubmitSomeJob2Gdc_xc8e4
    VPSS_SubmitSomeJob2Gdc_xca78:
    /*0000ca78*/ MOVW        R3, #1909                   @ 0x775 
    /*0000ca7c*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26ac] 
    /*0000ca80*/ STR         R3, [SP] 
    /*0000ca84*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26ac] 
    /*0000ca88*/ LDR         R3, [PC, #64]               @ 0x000000000000cad0 
    /*0000ca8c*/ MOV         R1, #7 
    /*0000ca90*/ MOV         R0, #3 
    /*0000ca94*/ B           VPSS_SubmitSomeJob2Gdc_xca60
    VPSS_SubmitSomeJob2Gdc_xca98:
    /*0000ca98*/ MOVW        R3, #1925                   @ 0x785 
    /*0000ca9c*/ MOV         R1, #7 
    /*0000caa0*/ STR         R3, [SP] 
    /*0000caa4*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2494] 
    /*0000caa8*/ LDR         R3, [PC, #32]               @ 0x000000000000cad0 
    /*0000caac*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2494] 
    /*0000cab0*/ MOV         R0, #3 
    /*0000cab4*/ MOVW        FP, #32782                  @ 0x800e 
    /*0000cab8*/ BL          0x000000000000CAB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cabc*/ MOV         R0, R8 
    /*0000cac0*/ MOV         R1, #10 
    /*0000cac4*/ MOVT        FP, #40967                  @ 0xa007 
    /*0000cac8*/ BL          0x000000000000CAC8          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000cacc*/ B           VPSS_SubmitSomeJob2Gdc_xc8e4
    /*0000cad0*/ @           <UNDEFINED> instruction: 0x000009b8 
FUNC_END VPSS_SubmitSomeJob2Gdc


FUNC_BEGIN VPSS_SubmitFrame2Gdc
    /*0000cad4*/ PUSH        {R4, R5, R6, LR} 
    /*0000cad8*/ MOV         R6, R2 
    /*0000cadc*/ MOV         R4, R0 
    /*0000cae0*/ MOV         R5, R1 
    /*0000cae4*/ BL          0x000000000000CAE4          @ VPSS_IsByPassGdc [R_ARM_CALL: .text+0xc370] 
    /*0000cae8*/ MOV         R2, R6 
    /*0000caec*/ MOV         R1, R5 
    /*0000caf0*/ CMP         R0, #0 
    /*0000caf4*/ MOV         R0, R4 
    /*0000caf8*/ BNE         VPSS_SubmitFrame2Gdc_xcb04
    /*0000cafc*/ POP         {R4, R5, R6, LR} 
    VPSS_SubmitFrame2Gdc_xcb00:
    /*0000cb00*/ B           VPSS_SubmitFrame2Gdc_xcb00  @ VPSS_SubmitSomeJob2Gdc [R_ARM_JUMP24: .text+0xc5d8] 
    VPSS_SubmitFrame2Gdc_xcb04:
    /*0000cb04*/ POP         {R4, R5, R6, LR} 
    VPSS_SubmitFrame2Gdc_xcb08:
    /*0000cb08*/ B           VPSS_SubmitFrame2Gdc_xcb08  @ VPSS_SubmitByPassJob2Gdc [R_ARM_JUMP24: .text+0xc540] 
FUNC_END VPSS_SubmitFrame2Gdc


FUNC_BEGIN VPSS_SubmitExtChnPic2Gdc
    /*0000cb0c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000cb10*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000cb14*/ ADD         R7, SP, #72                 @ 0x48 
    /*0000cb18*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000cb1c*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000cb20*/ MOV         R5, R0 
    /*0000cb24*/ MOV         R0, #37                     @ 0x25 
    /*0000cb28*/ MOV         R4, R2 
    /*0000cb2c*/ MOV         R6, R1 
    /*0000cb30*/ LDR         FP, [R3, R5, LSL #2] 
    /*0000cb34*/ MOV         R3, #0 
    /*0000cb38*/ STR         R3, [R7, #-40]!             @ 0xffffffd8 
    /*0000cb3c*/ BL          0x000000000000CB3C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000cb40*/ MOV         R1, #10 
    /*0000cb44*/ MOV         R8, R0 
    /*0000cb48*/ MOV         R0, R4 
    /*0000cb4c*/ BL          0x000000000000CB4C          @ VPSS_DRV_GetVb [R_ARM_CALL: .text+0x18370] 
    /*0000cb50*/ MOV         R2, R7 
    /*0000cb54*/ MOV         R1, R6 
    /*0000cb58*/ MOV         R0, R5 
    /*0000cb5c*/ BL          0x000000000000CB5C          @ VPSS_DRV_GetExtChnFisheyeWorkingAttr [R_ARM_CALL: .text+0x1a2a4] 
    /*0000cb60*/ LDR         R1, [SP, #32] 
    /*0000cb64*/ MOV         R0, R5 
    /*0000cb68*/ BL          0x000000000000CB68          @ VPSS_DRV_GetFisheyeWorkingConfig [R_ARM_CALL: .text+0x1a2ec] 
    /*0000cb6c*/ MOV         R2, R4 
    /*0000cb70*/ MOV         R1, R6 
    /*0000cb74*/ MOV         R0, R5 
    /*0000cb78*/ BL          0x000000000000CB78          @ VPSS_DRV_CheckExtFisheyeCapacity [R_ARM_CALL: .text+0x1a2f4] 
    /*0000cb7c*/ SUBS        SL, R0, #0 
    /*0000cb80*/ BNE         VPSS_SubmitExtChnPic2Gdc_xcc60
    /*0000cb84*/ LDR         R3, [R8, #92]               @ 0x5c 
    /*0000cb88*/ MOV         R0, #1 
    /*0000cb8c*/ BLX         R3 
    /*0000cb90*/ SUB         R3, R6, #3 
    /*0000cb94*/ SUBS        R7, R0, #0 
    /*0000cb98*/ BEQ         VPSS_SubmitExtChnPic2Gdc_xcd6c
    /*0000cb9c*/ ADD         R9, R7, #336                @ 0x150 
    /*0000cba0*/ MOV         R2, #336                    @ 0x150 
    /*0000cba4*/ MOV         R1, R4 
    /*0000cba8*/ STR         R3, [SP, #28] 
    /*0000cbac*/ BL          0x000000000000CBAC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000cbb0*/ MOV         R2, #336                    @ 0x150 
    /*0000cbb4*/ MOV         R1, R4 
    /*0000cbb8*/ MOV         R0, R9 
    /*0000cbbc*/ BL          0x000000000000CBBC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000cbc0*/ LDR         R3, [SP, #28] 
    /*0000cbc4*/ MOV         R2, #40                     @ 0x28 
    /*0000cbc8*/ LDR         IP, [R4, #16] 
    /*0000cbcc*/ LDR         R0, [R4, #24] 
    /*0000cbd0*/ MOV         R1, R6 
    /*0000cbd4*/ MLA         FP, R2, R3, FP 
    /*0000cbd8*/ STR         IP, [SP, #64]               @ 0x40 
    /*0000cbdc*/ STR         R0, [SP, #56]               @ 0x38 
    /*0000cbe0*/ MOV         R3, R9 
    /*0000cbe4*/ ADD         R2, SP, #36                 @ 0x24 
    /*0000cbe8*/ MOV         R0, R5 
    /*0000cbec*/ LDR         IP, [FP, #464]              @ 0x1d0 
    /*0000cbf0*/ LDR         SL, [FP, #472]              @ 0x1d8 
    /*0000cbf4*/ LDR         LR, [FP, #452]              @ 0x1c4 
    /*0000cbf8*/ STR         IP, [SP, #36]               @ 0x24 
    /*0000cbfc*/ LDR         IP, [FP, #456]              @ 0x1c8 
    /*0000cc00*/ STR         SL, [SP, #60]               @ 0x3c 
    /*0000cc04*/ STR         LR, [SP, #40]               @ 0x28 
    /*0000cc08*/ STR         IP, [SP, #44]               @ 0x2c 
    /*0000cc0c*/ BL          0x000000000000CC0C          @ VPSS_DRV_PrepareVB [R_ARM_CALL: .text+0x23338] 
    /*0000cc10*/ SUBS        SL, R0, #0 
    /*0000cc14*/ BEQ         VPSS_SubmitExtChnPic2Gdc_xcc78
    /*0000cc18*/ LDR         R1, [FP, #456]              @ 0x1c8 
    /*0000cc1c*/ MOVW        R3, #2165                   @ 0x875 
    /*0000cc20*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x27c0] 
    /*0000cc24*/ MOV         R0, #3 
    /*0000cc28*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x27c0] 
    /*0000cc2c*/ STR         R1, [SP, #16] 
    /*0000cc30*/ MOV         R1, #7 
    /*0000cc34*/ LDR         IP, [FP, #452]              @ 0x1c4 
    /*0000cc38*/ STR         R3, [SP] 
    /*0000cc3c*/ STR         R6, [SP, #8] 
    /*0000cc40*/ LDR         R3, [PC, #328]              @ 0x000000000000cd90 
    /*0000cc44*/ STR         R5, [SP, #4] 
    /*0000cc48*/ STR         IP, [SP, #12] 
    /*0000cc4c*/ BL          0x000000000000CC4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cc50*/ LDR         R3, [R8, #96]               @ 0x60 
    /*0000cc54*/ MOV         R1, R7 
    /*0000cc58*/ MOV         R0, #1 
    /*0000cc5c*/ BLX         R3 
    VPSS_SubmitExtChnPic2Gdc_xcc60:
    /*0000cc60*/ MOV         R0, R4 
    /*0000cc64*/ MOV         R1, #10 
    /*0000cc68*/ BL          0x000000000000CC68          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    VPSS_SubmitExtChnPic2Gdc_xcc6c:
    /*0000cc6c*/ MOV         R0, SL 
    /*0000cc70*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000cc74*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_SubmitExtChnPic2Gdc_xcc78:
    /*0000cc78*/ MOV         R0, #1 
    /*0000cc7c*/ MOV         FP, #7 
    /*0000cc80*/ BL          0x000000000000CC80          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000cc84*/ MOV         R1, R4 
    /*0000cc88*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*0000cc8c*/ MOV         R0, R9 
    /*0000cc90*/ BLX         R3 
    /*0000cc94*/ MOV         R0, R9 
    /*0000cc98*/ MOV         R1, R4 
    /*0000cc9c*/ ADD         R9, R4, #352                @ 0x160 
    /*0000cca0*/ BL          0x000000000000CCA0          @ VpssCopyVBPrivateData [R_ARM_CALL: .text+0x20f8] 
    /*0000cca4*/ STR         R5, [R7, #756]              @ 0x2f4 
    /*0000cca8*/ STR         R6, [R7, #760]              @ 0x2f8 
    /*0000ccac*/ MOV         R2, #37                     @ 0x25 
    /*0000ccb0*/ STR         FP, [R7, #752]              @ 0x2f0 
    /*0000ccb4*/ MOVW        R3, #0                      @ VPSS_GdcExtChnTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0xb1f4] 
    /*0000ccb8*/ STR         R2, [R7, #668]              @ 0x29c 
    /*0000ccbc*/ MOVT        R3, #0                      @ VPSS_GdcExtChnTaskCallBack [R_ARM_MOVT_ABS: .text+0xb1f4] 
    /*0000ccc0*/ STR         R3, [R7, #748]              @ 0x2ec 
    /*0000ccc4*/ ADD         R1, R7, #688                @ 0x2b0 
    /*0000ccc8*/ LDR         R3, [R4, #340]              @ 0x154 
    /*0000cccc*/ ADD         LR, R7, #704                @ 0x2c0 
    /*0000ccd0*/ STR         SL, [R7, #676]              @ 0x2a4 
    /*0000ccd4*/ ADD         IP, R7, #464                @ 0x1d0 
    /*0000ccd8*/ MOV         R0, R7 
    /*0000ccdc*/ STR         R3, [R7, #672]              @ 0x2a0 
    /*0000cce0*/ LDR         R3, [R4, #336]              @ 0x150 
    /*0000cce4*/ STR         SL, [R7, #684]              @ 0x2ac 
    /*0000cce8*/ STR         R3, [R7, #680]              @ 0x2a8 
    /*0000ccec*/ LDRD        R2, [R9, #-8] 
    /*0000ccf0*/ STRD        R2, [R1] 
    /*0000ccf4*/ LDRD        R2, [R9] 
    /*0000ccf8*/ LDR         R1, [SP, #32] 
    /*0000ccfc*/ STRD        R2, [LR, #-8] 
    /*0000cd00*/ LDR         R3, [R8, #28] 
    /*0000cd04*/ LDR         R7, [R7, #664]              @ 0x298 
    /*0000cd08*/ LDRD        R8, [IP, #-8] 
    /*0000cd0c*/ BLX         R3 
    /*0000cd10*/ SUBS        SL, R0, #0 
    /*0000cd14*/ BEQ         VPSS_SubmitExtChnPic2Gdc_xcd58
    /*0000cd18*/ MOV         R2, R8 
    /*0000cd1c*/ MOV         R3, R9 
    /*0000cd20*/ MOV         R1, #10 
    /*0000cd24*/ MOV         R0, R7 
    /*0000cd28*/ STR         R1, [SP] 
    /*0000cd2c*/ BL          0x000000000000CD2C          @ VPSS_MKP_PutVb [R_ARM_CALL: .text+0xa658] 
    /*0000cd30*/ MOVW        R3, #2190                   @ 0x88e 
    /*0000cd34*/ STMIB       SP, {R5, R6} 
    /*0000cd38*/ MOV         R1, FP 
    /*0000cd3c*/ STR         R3, [SP] 
    /*0000cd40*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2810] 
    /*0000cd44*/ LDR         R3, [PC, #68]               @ 0x000000000000cd90 
    /*0000cd48*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2810] 
    /*0000cd4c*/ MOV         R0, #3 
    /*0000cd50*/ BL          0x000000000000CD50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cd54*/ B           VPSS_SubmitExtChnPic2Gdc_xcc60
    VPSS_SubmitExtChnPic2Gdc_xcd58:
    /*0000cd58*/ LDR         R3, [PC, #52]               @ 0x000000000000cd94 
    /*0000cd5c*/ MOV         R0, #92                     @ 0x5c 
    /*0000cd60*/ MLA         R0, R0, R5, R3 
    /*0000cd64*/ BL          0x000000000000CD64          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0000cd68*/ B           VPSS_SubmitExtChnPic2Gdc_xcc6c
    VPSS_SubmitExtChnPic2Gdc_xcd6c:
    /*0000cd6c*/ MOV         R3, #2144                   @ 0x860 
    /*0000cd70*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2790] 
    /*0000cd74*/ STR         R3, [SP] 
    /*0000cd78*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2790] 
    /*0000cd7c*/ LDR         R3, [PC, #12]               @ 0x000000000000cd90 
    /*0000cd80*/ MOV         R1, #7 
    /*0000cd84*/ MOV         R0, #3 
    /*0000cd88*/ BL          0x000000000000CD88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cd8c*/ B           VPSS_SubmitExtChnPic2Gdc_xcc60
    /*0000cd90*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
    /*0000cd94*/ ANDEQ       R0, R0, R0, LSL R0          @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
FUNC_END VPSS_SubmitExtChnPic2Gdc


FUNC_BEGIN VPSS_OnlineFillDestPicInfo
    /*0000cd98*/ MOVW        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000cd9c*/ MOVT        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000cda0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000cda4*/ MOV         R4, R1 
    /*0000cda8*/ LDR         R5, [IP, R0, LSL #2] 
    /*0000cdac*/ MOV         R8, R2 
    /*0000cdb0*/ BL          0x000000000000CDB0          @ VPSS_DRV_GetOnlineVpssId [R_ARM_CALL: .text+0x262cc] 
    /*0000cdb4*/ MOV         R3, #776                    @ 0x308 
    /*0000cdb8*/ MOVW        LR, #8536                   @ 0x2158 
    /*0000cdbc*/ MOV         R7, #4 
    /*0000cdc0*/ MUL         R3, R3, R4 
    /*0000cdc4*/ MOV         R6, #0 
    /*0000cdc8*/ MOV         R4, #7 
    /*0000cdcc*/ MOV         R2, #360                    @ 0x168 
    /*0000cdd0*/ ADD         IP, R3, #2640               @ 0xa50 
    /*0000cdd4*/ ADD         IP, IP, #8 
    /*0000cdd8*/ MUL         LR, LR, R0 
    /*0000cddc*/ MOV         R0, R8 
    /*0000cde0*/ ADD         R3, R3, LR 
    /*0000cde4*/ ADD         IP, IP, LR 
    /*0000cde8*/ ADD         R3, R5, R3 
    /*0000cdec*/ ADD         R1, R5, IP 
    /*0000cdf0*/ STR         R7, [R3, #2656]             @ 0xa60 
    /*0000cdf4*/ STR         R6, [R3, #2988]             @ 0xbac 
    /*0000cdf8*/ STR         R4, [R3, #2980]             @ 0xba4 
    /*0000cdfc*/ STR         R4, [R3, #2984]             @ 0xba8 
    /*0000ce00*/ POP         {R4, R5, R6, R7, R8, LR} 
    VPSS_OnlineFillDestPicInfo_xce04:
    /*0000ce04*/ B           VPSS_OnlineFillDestPicInfo_xce04@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VPSS_OnlineFillDestPicInfo


FUNC_BEGIN VPSS_OfflineFillDestPicInfo
    /*0000ce08*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000ce0c*/ MOV         IP, #776                    @ 0x308 
    /*0000ce10*/ MOVW        LR, #2648                   @ 0xa58 
    /*0000ce14*/ MOVW        R4, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000ce18*/ MLA         LR, IP, R1, LR 
    /*0000ce1c*/ MOVT        R4, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000ce20*/ MOV         R5, R2 
    /*0000ce24*/ MOVW        IP, #8536                   @ 0x2158 
    /*0000ce28*/ LDR         R0, [R4, R0, LSL #2] 
    /*0000ce2c*/ MOV         R6, #7 
    /*0000ce30*/ ADD         R2, R0, R3, LSL #2 
    /*0000ce34*/ MLA         IP, IP, R3, LR 
    /*0000ce38*/ LDR         LR, [R2, #2612]             @ 0xa34 
    /*0000ce3c*/ CMP         LR, #1 
    /*0000ce40*/ MOV         LR, #776                    @ 0x308 
    /*0000ce44*/ ADD         IP, R0, IP 
    /*0000ce48*/ LDREQ       R4, [R2, #2200]             @ 0x898 
    /*0000ce4c*/ MOVW        R2, #8536                   @ 0x2158 
    /*0000ce50*/ MUL         R3, R2, R3 
    /*0000ce54*/ LDRNE       R4, [R0, #2196]             @ 0x894 
    /*0000ce58*/ MLA         R3, LR, R1, R3 
    /*0000ce5c*/ MOV         R1, IP 
    /*0000ce60*/ MOVW        LR, #16960                  @ 0x4240 
    /*0000ce64*/ MOVT        LR, #15 
    /*0000ce68*/ MOV         R2, #360                    @ 0x168 
    /*0000ce6c*/ ADD         R8, R4, #8 
    /*0000ce70*/ ADD         R3, R0, R3 
    /*0000ce74*/ MOV         R0, R5 
    /*0000ce78*/ ADD         IP, R3, #2992               @ 0xbb0 
    /*0000ce7c*/ STR         R6, [R3, #2980]             @ 0xba4 
    /*0000ce80*/ LDR         R6, [R4, #344]              @ 0x158 
    /*0000ce84*/ STR         R6, [R3, #2984]             @ 0xba8 
    /*0000ce88*/ LDR         R6, [R4, #348]              @ 0x15c 
    /*0000ce8c*/ STR         R6, [R3, #2988]             @ 0xbac 
    /*0000ce90*/ LDR         R6, [R4, #372]              @ 0x174 
    /*0000ce94*/ LDR         R3, [R4, #368]              @ 0x170 
    /*0000ce98*/ ASR         R7, R6, #31 
    /*0000ce9c*/ SMLAL       R6, R7, LR, R3 
    /*0000cea0*/ STRD        R6, [IP] 
    /*0000cea4*/ BL          0x000000000000CEA4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000cea8*/ LDRD        R2, [R4, #248]              @ 0xf8 
    /*0000ceac*/ MOV         R0, #1 
    /*0000ceb0*/ STRD        R2, [R5, #240]              @ 0xf0 
    /*0000ceb4*/ LDR         R3, [R4, #240]              @ 0xf0 
    /*0000ceb8*/ STR         R3, [R5, #232]              @ 0xe8 
    /*0000cebc*/ LDR         R3, [R4, #264]              @ 0x108 
    /*0000cec0*/ STR         R3, [R5, #256]              @ 0x100 
    /*0000cec4*/ BL          0x000000000000CEC4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000cec8*/ MOV         R1, R8 
    /*0000cecc*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*0000ced0*/ MOV         R0, R5 
    /*0000ced4*/ BLX         R3 
    /*0000ced8*/ MOV         R1, R8 
    /*0000cedc*/ MOV         R0, R5 
    /*0000cee0*/ POP         {R4, R5, R6, R7, R8, LR} 
    VPSS_OfflineFillDestPicInfo_xcee4:
    /*0000cee4*/ B           VPSS_OfflineFillDestPicInfo_xcee4@ VpssCopyVBPrivateData [R_ARM_JUMP24: .text+0x20f8] 
FUNC_END VPSS_OfflineFillDestPicInfo


FUNC_BEGIN VPSS_PreparePicInfo
    /*0000cee8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000ceec*/ SUB         SP, SP, #12 
    /*0000cef0*/ MOV         R5, R3 
    /*0000cef4*/ MOV         R4, R0 
    /*0000cef8*/ MOV         R6, R1 
    /*0000cefc*/ MOV         R7, R2 
    /*0000cf00*/ BL          0x000000000000A528 
    /*0000cf04*/ CMP         R0, #0 
    /*0000cf08*/ BNE         VPSS_PreparePicInfo_xcf6c
    VPSS_PreparePicInfo_xcf0c:
    /*0000cf0c*/ MOV         R0, R4 
    /*0000cf10*/ BL          0x000000000000CF10          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0000cf14*/ CMP         R0, #1 
    /*0000cf18*/ BEQ         VPSS_PreparePicInfo_xcf44
    /*0000cf1c*/ MOV         R0, R4 
    /*0000cf20*/ BL          0x000000000000CF20          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0000cf24*/ CMP         R0, #3 
    /*0000cf28*/ BEQ         VPSS_PreparePicInfo_xcf44
    /*0000cf2c*/ MOV         R3, R7 
    /*0000cf30*/ MOV         R1, R6 
    /*0000cf34*/ MOV         R0, R4 
    /*0000cf38*/ MOV         R2, R5 
    /*0000cf3c*/ BL          0x000000000000CF3C          @ VPSS_OfflineFillDestPicInfo [R_ARM_CALL: .text+0xce08] 
    /*0000cf40*/ B           VPSS_PreparePicInfo_xcf54
    VPSS_PreparePicInfo_xcf44:
    /*0000cf44*/ MOV         R1, R6 
    /*0000cf48*/ MOV         R0, R4 
    /*0000cf4c*/ MOV         R2, R5 
    /*0000cf50*/ BL          0x000000000000CF50          @ VPSS_OnlineFillDestPicInfo [R_ARM_CALL: .text+0xcd98] 
    VPSS_PreparePicInfo_xcf54:
    /*0000cf54*/ LDR         R3, [R5, #312]              @ 0x138 
    /*0000cf58*/ CMP         R3, #0 
    /*0000cf5c*/ MOVNE       R2, #0 
    /*0000cf60*/ STRBNE      R2, [R3, #65]               @ 0x41 
    /*0000cf64*/ ADD         SP, SP, #12 
    /*0000cf68*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_PreparePicInfo_xcf6c:
    /*0000cf6c*/ MOVW        R3, #2270                   @ 0x8de 
    /*0000cf70*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x285c] 
    /*0000cf74*/ STR         R3, [SP] 
    /*0000cf78*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x285c] 
    /*0000cf7c*/ LDR         R3, [PC, #12]               @ 0x000000000000cf90 
    /*0000cf80*/ MOV         R1, #7 
    /*0000cf84*/ MOV         R0, #3 
    /*0000cf88*/ BL          0x000000000000CF88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cf8c*/ B           VPSS_PreparePicInfo_xcf0c
    /*0000cf90*/ ANDEQ       R0, R0, IP, ROR #19 
FUNC_END VPSS_PreparePicInfo


FUNC_BEGIN VpssOfflineSendLowDelayFrame
    /*0000cf94*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000cf98*/ MOV         R5, #92                     @ 0x5c 
    /*0000cf9c*/ MUL         R5, R5, R0 
    /*0000cfa0*/ MOVW        R4, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000cfa4*/ MOVT        R4, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000cfa8*/ SUB         SP, SP, #380                @ 0x17c 
    /*0000cfac*/ MOV         R7, R0 
    /*0000cfb0*/ MOV         R8, R1 
    /*0000cfb4*/ ADD         R6, R5, #48                 @ 0x30 
    /*0000cfb8*/ ADD         R1, SP, #12 
    /*0000cfbc*/ ADD         R6, R4, R6 
    /*0000cfc0*/ MOV         FP, R2 
    /*0000cfc4*/ MOV         R0, R6 
    /*0000cfc8*/ BL          0x000000000000CFC8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000cfcc*/ MOV         R3, #72                     @ 0x48 
    /*0000cfd0*/ MUL         R1, R3, FP 
    /*0000cfd4*/ MOV         R3, #24 
    /*0000cfd8*/ MLA         R3, R3, R8, R1 
    /*0000cfdc*/ MOVW        R1, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0000cfe0*/ MOVT        R1, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0000cfe4*/ MOVW        R0, #18748                  @ 0x493c 
    /*0000cfe8*/ LDR         R1, [R1, R7, LSL #2] 
    /*0000cfec*/ ADD         R3, R1, R3 
    /*0000cff0*/ LDR         R3, [R3, R0] 
    /*0000cff4*/ CMP         R3, #1 
    /*0000cff8*/ BEQ         VpssOfflineSendLowDelayFrame_xd044
    VpssOfflineSendLowDelayFrame_xcffc:
    /*0000cffc*/ ADD         R1, SP, #12 
    /*0000d000*/ MOV         R0, R6 
    /*0000d004*/ BL          0x000000000000D004          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000d008*/ MOV         R3, #92                     @ 0x5c 
    /*0000d00c*/ MUL         R7, R3, R7 
    /*0000d010*/ ADD         R3, R4, R7 
    /*0000d014*/ LDR         R3, [R3, #4] 
    /*0000d018*/ CMP         R3, #0 
    /*0000d01c*/ BNE         VpssOfflineSendLowDelayFrame_xd02c
    /*0000d020*/ LDR         R3, [R4, R7] 
    /*0000d024*/ CMP         R3, #0 
    /*0000d028*/ BEQ         VpssOfflineSendLowDelayFrame_xd038
    VpssOfflineSendLowDelayFrame_xd02c:
    /*0000d02c*/ ADD         R0, R5, #36                 @ 0x24 
    /*0000d030*/ ADD         R0, R4, R0 
    /*0000d034*/ BL          0x000000000000D034          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VpssOfflineSendLowDelayFrame_xd038:
    /*0000d038*/ MOV         R0, #0 
    /*0000d03c*/ ADD         SP, SP, #380                @ 0x17c 
    /*0000d040*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssOfflineSendLowDelayFrame_xd044:
    /*0000d044*/ MOV         R9, #752                    @ 0x2f0 
    /*0000d048*/ MOVW        SL, #19496                  @ 0x4c28 
    /*0000d04c*/ MLA         R9, R9, R8, R1 
    /*0000d050*/ LDR         R3, [R9, SL] 
    /*0000d054*/ CMP         R3, #0 
    /*0000d058*/ BNE         VpssOfflineSendLowDelayFrame_xcffc
    /*0000d05c*/ ADD         R3, R8, #2672               @ 0xa70 
    /*0000d060*/ ADD         R3, R3, #10 
    /*0000d064*/ LDR         R3, [R1, R3, LSL #3] 
    /*0000d068*/ CMP         R3, #1 
    /*0000d06c*/ STR         R3, [SP, #4] 
    /*0000d070*/ BNE         VpssOfflineSendLowDelayFrame_xcffc
    /*0000d074*/ MOV         R2, FP 
    /*0000d078*/ MOV         R1, R8 
    /*0000d07c*/ MOV         R0, R7 
    /*0000d080*/ ADD         R3, SP, #16 
    /*0000d084*/ BL          0x000000000000D084          @ VPSS_PreparePicInfo [R_ARM_CALL: .text+0xcee8] 
    /*0000d088*/ LDR         FP, [SP, #4] 
    /*0000d08c*/ ADD         R2, SP, #16 
    /*0000d090*/ MOV         R1, R8 
    /*0000d094*/ MOV         R0, R7 
    /*0000d098*/ MOV         R3, FP 
    /*0000d09c*/ BL          0x000000000000D09C          @ VpssFakeSendLowDelayFrame [R_ARM_CALL: .text+0xa824] 
    /*0000d0a0*/ STR         FP, [R9, SL] 
    /*0000d0a4*/ B           VpssOfflineSendLowDelayFrame_xcffc
FUNC_END VpssOfflineSendLowDelayFrame


FUNC_BEGIN VPSS_ProcChnFrame
    /*0000d0a8*/ MOV         R3, #92                     @ 0x5c 
    /*0000d0ac*/ MUL         R3, R3, R0 
    /*0000d0b0*/ PUSH        {R4, R5, R6, LR} 
    /*0000d0b4*/ MOV         R4, R0 
    /*0000d0b8*/ MOVW        R0, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000d0bc*/ MOVT        R0, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000d0c0*/ MOV         R6, R2 
    /*0000d0c4*/ ADD         R2, R0, R3 
    /*0000d0c8*/ LDR         R3, [R0, R3] 
    /*0000d0cc*/ SUB         SP, SP, #16 
    /*0000d0d0*/ MOV         R5, R1 
    /*0000d0d4*/ CMP         R3, #1 
    /*0000d0d8*/ BEQ         VPSS_ProcChnFrame_xd10c
    /*0000d0dc*/ LDR         R3, [R2, #4] 
    /*0000d0e0*/ CMP         R3, #1 
    /*0000d0e4*/ BEQ         VPSS_ProcChnFrame_xd10c
    /*0000d0e8*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000d0ec*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000d0f0*/ ADD         R2, R1, #7104               @ 0x1bc0 
    /*0000d0f4*/ LDR         R3, [R3, R4, LSL #2] 
    /*0000d0f8*/ ADD         R2, R2, #30 
    /*0000d0fc*/ ADD         R3, R3, R2, LSL #2 
    /*0000d100*/ LDR         R3, [R3, #4] 
    /*0000d104*/ CMP         R3, #0 
    /*0000d108*/ BNE         VPSS_ProcChnFrame_xd158
    VPSS_ProcChnFrame_xd10c:
    /*0000d10c*/ MOVW        R3, #2300                   @ 0x8fc 
    /*0000d110*/ MOV         R1, #7 
    /*0000d114*/ STR         R3, [SP] 
    /*0000d118*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2888] 
    /*0000d11c*/ STR         R5, [SP, #8] 
    /*0000d120*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2888] 
    /*0000d124*/ STR         R4, [SP, #4] 
    /*0000d128*/ MOV         R0, #4 
    /*0000d12c*/ LDR         R3, [PC, #140]              @ 0x000000000000d1c0 
    /*0000d130*/ BL          0x000000000000D130          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d134*/ MOV         R0, R6 
    /*0000d138*/ MOV         R1, #10 
    /*0000d13c*/ BL          0x000000000000D13C          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    VPSS_ProcChnFrame_xd140:
    /*0000d140*/ MOV         R1, R5 
    /*0000d144*/ MOV         R0, R4 
    /*0000d148*/ BL          0x000000000000D148          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    VPSS_ProcChnFrame_xd14c:
    /*0000d14c*/ MOV         R0, #0 
    /*0000d150*/ ADD         SP, SP, #16 
    /*0000d154*/ POP         {R4, R5, R6, PC} 
    VPSS_ProcChnFrame_xd158:
    /*0000d158*/ BL          0x000000000000D158          @ VPSS_DRV_IsGdcExist [R_ARM_CALL: .text+0x26260] 
    /*0000d15c*/ CMP         R0, #0 
    /*0000d160*/ BEQ         VPSS_ProcChnFrame_xd180
    /*0000d164*/ MOV         R2, R6 
    /*0000d168*/ MOV         R1, R5 
    /*0000d16c*/ MOV         R0, R4 
    /*0000d170*/ BL          0x000000000000D170          @ VPSS_SubmitFrame2Gdc [R_ARM_CALL: .text+0xcad4] 
    /*0000d174*/ CMP         R0, #0 
    /*0000d178*/ BNE         VPSS_ProcChnFrame_xd140
    /*0000d17c*/ B           VPSS_ProcChnFrame_xd14c
    VPSS_ProcChnFrame_xd180:
    /*0000d180*/ BL          0x000000000000D180          @ VPSS_IsVgsExist [R_ARM_CALL: .text+0xb2dc] 
    /*0000d184*/ CMP         R0, #0 
    /*0000d188*/ BEQ         VPSS_ProcChnFrame_xd1a0
    /*0000d18c*/ MOV         R2, R6 
    /*0000d190*/ MOV         R1, R5 
    /*0000d194*/ MOV         R0, R4 
    /*0000d198*/ BL          0x000000000000D198          @ VPSS_SubmitFrame2Vgs [R_ARM_CALL: .text+0xc050] 
    /*0000d19c*/ B           VPSS_ProcChnFrame_xd14c
    VPSS_ProcChnFrame_xd1a0:
    /*0000d1a0*/ MOV         R1, R5 
    /*0000d1a4*/ MOV         R0, R4 
    /*0000d1a8*/ MOV         R2, R6 
    /*0000d1ac*/ BL          0x000000000000D1AC          @ VPSS_ProcSendPic [R_ARM_CALL: .text+0xad30] 
    /*0000d1b0*/ MOV         R0, R6 
    /*0000d1b4*/ MOV         R1, #10 
    /*0000d1b8*/ BL          0x000000000000D1B8          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000d1bc*/ B           VPSS_ProcChnFrame_xd14c
    /*0000d1c0*/ ANDEQ       R0, R0, R0, LSL #20 
FUNC_END VPSS_ProcChnFrame


FUNC_BEGIN VPSS_VgsScaleVgsByPassTaskCallBack
    /*0000d1c4*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000d1c8*/ ADD         R0, R3, #688                @ 0x2b0 
    /*0000d1cc*/ LDR         IP, [R3, #680]              @ 0x2a8 
    /*0000d1d0*/ SUB         SP, SP, #372                @ 0x174 
    /*0000d1d4*/ LDR         R7, [R3, #736]              @ 0x2e0 
    /*0000d1d8*/ ADD         LR, R3, #704                @ 0x2c0 
    /*0000d1dc*/ LDRD        R4, [R0] 
    /*0000d1e0*/ MOV         R6, R1 
    /*0000d1e4*/ STR         IP, [SP, #344]              @ 0x158 
    /*0000d1e8*/ ADD         IP, SP, #352                @ 0x160 
    /*0000d1ec*/ CMP         R7, #1 
    /*0000d1f0*/ LDRD        R0, [LR, #-8] 
    /*0000d1f4*/ MOV         R7, R2 
    /*0000d1f8*/ LDR         R2, [R3, #672]              @ 0x2a0 
    /*0000d1fc*/ STRD        R4, [IP] 
    /*0000d200*/ ADD         IP, SP, #360                @ 0x168 
    /*0000d204*/ STR         R2, [SP, #348]              @ 0x15c 
    /*0000d208*/ STRD        R0, [IP] 
    /*0000d20c*/ BEQ         VPSS_VgsScaleVgsByPassTaskCallBack_xd238
    /*0000d210*/ MOVW        R3, #2359                   @ 0x937 
    /*0000d214*/ MOV         R1, #7 
    /*0000d218*/ STR         R3, [SP] 
    /*0000d21c*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28c0] 
    /*0000d220*/ LDR         R3, [PC, #56]               @ 0x000000000000d260 
    /*0000d224*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28c0] 
    /*0000d228*/ MOV         R0, #3 
    /*0000d22c*/ BL          0x000000000000D22C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d230*/ ADD         SP, SP, #372                @ 0x174 
    /*0000d234*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_VgsScaleVgsByPassTaskCallBack_xd238:
    /*0000d238*/ ADD         R1, R3, #336                @ 0x150 
    /*0000d23c*/ MOV         R2, #336                    @ 0x150 
    /*0000d240*/ ADD         R0, SP, #8 
    /*0000d244*/ BL          0x000000000000D244          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000d248*/ ADD         R2, SP, #8 
    /*0000d24c*/ MOV         R1, R7 
    /*0000d250*/ MOV         R0, R6 
    /*0000d254*/ BL          0x000000000000D254          @ VPSS_ProcChnFrame [R_ARM_CALL: .text+0xd0a8] 
    /*0000d258*/ ADD         SP, SP, #372                @ 0x174 
    /*0000d25c*/ POP         {R4, R5, R6, R7, PC} 
    /*0000d260*/ ANDEQ       R0, R0, R4, LSL SL 
FUNC_END VPSS_VgsScaleVgsByPassTaskCallBack


FUNC_BEGIN VPSS_VgsScaleAddByPassTask2Vgs
    /*0000d264*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000d268*/ MOV         R6, R0 
    /*0000d26c*/ SUB         SP, SP, #12 
    /*0000d270*/ MOV         R0, #45                     @ 0x2d 
    /*0000d274*/ MOV         R7, R1 
    /*0000d278*/ MOV         R8, R2 
    /*0000d27c*/ MOV         R9, R3 
    /*0000d280*/ BL          0x000000000000D280          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000d284*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000d288*/ MOV         R5, R0 
    /*0000d28c*/ BLX         R1 
    /*0000d290*/ SUBS        R4, R0, #0 
    /*0000d294*/ BEQ         VPSS_VgsScaleAddByPassTask2Vgs_xd2f8
    /*0000d298*/ MOV         R2, R9 
    /*0000d29c*/ MOV         R3, R4 
    /*0000d2a0*/ MOV         R1, R7 
    /*0000d2a4*/ MOV         R0, R6 
    /*0000d2a8*/ BL          0x000000000000A4AC 
    /*0000d2ac*/ MOV         R0, R8 
    /*0000d2b0*/ MOVW        R3, #0                      @ VPSS_VgsScaleVgsByPassTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0xd1c4] 
    /*0000d2b4*/ MOV         R1, R4 
    /*0000d2b8*/ MOVT        R3, #0                      @ VPSS_VgsScaleVgsByPassTaskCallBack [R_ARM_MOVT_ABS: .text+0xd1c4] 
    /*0000d2bc*/ STR         R3, [R4, #720]              @ 0x2d0 
    /*0000d2c0*/ LDR         R3, [R5, #24] 
    /*0000d2c4*/ BLX         R3 
    /*0000d2c8*/ SUBS        R5, R0, #0 
    /*0000d2cc*/ BEQ         VPSS_VgsScaleAddByPassTask2Vgs_xd2ec
    /*0000d2d0*/ MOV         R0, #2 
    /*0000d2d4*/ MOV         R2, R7 
    /*0000d2d8*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*0000d2dc*/ MOV         R1, R6 
    /*0000d2e0*/ MOV         R3, R4 
    /*0000d2e4*/ MOV         R0, #7 
    /*0000d2e8*/ BL          0x000000000000D2E8          @ VPSS_VgsScaleVgsByPassTaskCallBack [R_ARM_CALL: .text+0xd1c4] 
    VPSS_VgsScaleAddByPassTask2Vgs_xd2ec:
    /*0000d2ec*/ MOV         R0, R5 
    /*0000d2f0*/ ADD         SP, SP, #12 
    /*0000d2f4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_VgsScaleAddByPassTask2Vgs_xd2f8:
    /*0000d2f8*/ MOVW        R3, #2375                   @ 0x947 
    /*0000d2fc*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28f4] 
    /*0000d300*/ STR         R3, [SP] 
    /*0000d304*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28f4] 
    /*0000d308*/ LDR         R3, [PC, #16]               @ 0x000000000000d320 
    /*0000d30c*/ MOV         R1, #7 
    /*0000d310*/ MOV         R0, #3 
    /*0000d314*/ MVN         R5, #0 
    /*0000d318*/ BL          0x000000000000D318          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d31c*/ B           VPSS_VgsScaleAddByPassTask2Vgs_xd2ec
    /*0000d320*/ ANDEQ       R0, R0, R8, LSR SL 
FUNC_END VPSS_VgsScaleAddByPassTask2Vgs


FUNC_BEGIN VPSS_VgsScaleSubmitByPassJob2Vgs
    /*0000d324*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000d328*/ MOV         R6, R0 
    /*0000d32c*/ SUB         SP, SP, #80                 @ 0x50 
    /*0000d330*/ MOV         R0, #45                     @ 0x2d 
    /*0000d334*/ MOV         R5, R2 
    /*0000d338*/ MOV         R7, R1 
    /*0000d33c*/ BL          0x000000000000D33C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000d340*/ LDRD        R2, [R5, #120]              @ 0x78 
    /*0000d344*/ LDR         R1, [R5, #328]              @ 0x148 
    /*0000d348*/ ADD         LR, SP, #16 
    /*0000d34c*/ STR         R7, [SP] 
    /*0000d350*/ MOVW        IP, #0                      @ VPSS_VgsScaleBypassJobCallBack [R_ARM_MOVW_ABS_NC: .text+0xa424] 
    /*0000d354*/ STRD        R2, [SP, #24] 
    /*0000d358*/ MOVT        IP, #0                      @ VPSS_VgsScaleBypassJobCallBack [R_ARM_MOVT_ABS: .text+0xa424] 
    /*0000d35c*/ STR         R1, [SP, #16] 
    /*0000d360*/ MOV         R3, R6 
    /*0000d364*/ STR         IP, [SP, #72]               @ 0x48 
    /*0000d368*/ MOV         R2, #7 
    /*0000d36c*/ STR         LR, [SP, #4] 
    /*0000d370*/ MOV         R8, R0 
    /*0000d374*/ MOV         R0, #0 
    /*0000d378*/ MOV         R1, R0 
    /*0000d37c*/ STR         R0, [SP, #68]               @ 0x44 
    /*0000d380*/ STR         R0, [SP, #20] 
    /*0000d384*/ ADD         R0, SP, #12 
    /*0000d388*/ LDR         R4, [R8] 
    /*0000d38c*/ BLX         R4 
    /*0000d390*/ SUBS        R4, R0, #0 
    /*0000d394*/ BNE         VPSS_VgsScaleSubmitByPassJob2Vgs_xd468
    /*0000d398*/ LDR         R3, [PC, #272]              @ 0x000000000000d4b0 
    /*0000d39c*/ MOV         R0, #92                     @ 0x5c 
    /*0000d3a0*/ MLA         R0, R0, R6, R3 
    /*0000d3a4*/ BL          0x000000000000D3A4          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0000d3a8*/ MOV         R3, R5 
    /*0000d3ac*/ MOV         R1, R7 
    /*0000d3b0*/ MOV         R0, R6 
    /*0000d3b4*/ LDR         R2, [SP, #12] 
    /*0000d3b8*/ BL          0x000000000000D3B8          @ VPSS_VgsScaleAddByPassTask2Vgs [R_ARM_CALL: .text+0xd264] 
    /*0000d3bc*/ SUBS        R4, R0, #0 
    /*0000d3c0*/ BEQ         VPSS_VgsScaleSubmitByPassJob2Vgs_xd424
    /*0000d3c4*/ MOVW        R3, #2449                   @ 0x991 
    /*0000d3c8*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x296c] 
    /*0000d3cc*/ STR         R3, [SP] 
    /*0000d3d0*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x296c] 
    /*0000d3d4*/ STR         R4, [SP, #4] 
    /*0000d3d8*/ MOV         R1, #7 
    /*0000d3dc*/ LDR         R3, [PC, #208]              @ 0x000000000000d4b4 
    /*0000d3e0*/ MOV         R0, #3 
    /*0000d3e4*/ BL          0x000000000000D3E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_VgsScaleSubmitByPassJob2Vgs_xd3e8:
    /*0000d3e8*/ LDR         R3, [R8, #4] 
    /*0000d3ec*/ LDR         R0, [SP, #12] 
    /*0000d3f0*/ BLX         R3 
    /*0000d3f4*/ MOVW        R3, #2465                   @ 0x9a1 
    /*0000d3f8*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x29dc] 
    /*0000d3fc*/ STR         R3, [SP] 
    /*0000d400*/ STR         R4, [SP, #4] 
    /*0000d404*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x29dc] 
    /*0000d408*/ LDR         R3, [PC, #164]              @ 0x000000000000d4b4 
    /*0000d40c*/ MOV         R1, #7 
    /*0000d410*/ MOV         R0, #6 
    /*0000d414*/ BL          0x000000000000D414          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_VgsScaleSubmitByPassJob2Vgs_xd418:
    /*0000d418*/ MOV         R0, R4 
    /*0000d41c*/ ADD         SP, SP, #80                 @ 0x50 
    /*0000d420*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_VgsScaleSubmitByPassJob2Vgs_xd424:
    /*0000d424*/ MOV         R2, R4 
    /*0000d428*/ LDR         R3, [R8, #12] 
    /*0000d42c*/ MOV         R1, #1 
    /*0000d430*/ LDR         R0, [SP, #12] 
    /*0000d434*/ BLX         R3 
    /*0000d438*/ SUBS        R4, R0, #0 
    /*0000d43c*/ BEQ         VPSS_VgsScaleSubmitByPassJob2Vgs_xd418
    /*0000d440*/ MOVW        R3, #2456                   @ 0x998 
    /*0000d444*/ STR         R4, [SP, #4] 
    /*0000d448*/ STR         R3, [SP] 
    /*0000d44c*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x29a8] 
    /*0000d450*/ LDR         R3, [PC, #92]               @ 0x000000000000d4b4 
    /*0000d454*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x29a8] 
    /*0000d458*/ MOV         R1, #7 
    /*0000d45c*/ MOV         R0, #3 
    /*0000d460*/ BL          0x000000000000D460          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d464*/ B           VPSS_VgsScaleSubmitByPassJob2Vgs_xd3e8
    VPSS_VgsScaleSubmitByPassJob2Vgs_xd468:
    /*0000d468*/ MOV         R1, R7 
    /*0000d46c*/ MOV         R0, R6 
    /*0000d470*/ BL          0x000000000000D470          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*0000d474*/ MOV         R0, R5 
    /*0000d478*/ MOV         R1, #10 
    /*0000d47c*/ BL          0x000000000000D47C          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000d480*/ STR         R4, [SP, #4] 
    /*0000d484*/ MOVW        R3, #2439                   @ 0x987 
    /*0000d488*/ MOV         R1, #7 
    /*0000d48c*/ STR         R3, [SP] 
    /*0000d490*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x292c] 
    /*0000d494*/ LDR         R3, [PC, #24]               @ 0x000000000000d4b4 
    /*0000d498*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x292c] 
    /*0000d49c*/ MOV         R0, #3 
    /*0000d4a0*/ BL          0x000000000000D4A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d4a4*/ MOV         R0, R4 
    /*0000d4a8*/ ADD         SP, SP, #80                 @ 0x50 
    /*0000d4ac*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*0000d4b0*/ ANDEQ       R0, R0, R0, LSL R0          @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000d4b4*/ ANDEQ       R0, R0, R8, ASR SL 
FUNC_END VPSS_VgsScaleSubmitByPassJob2Vgs


FUNC_BEGIN VPSS_VgsScale
    /*0000d4b8*/ MOVW        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000d4bc*/ MOVT        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000d4c0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000d4c4*/ MOV         R6, R1 
    /*0000d4c8*/ LDR         R1, [IP, R0, LSL #2] 
    /*0000d4cc*/ MOV         R5, R0 
    /*0000d4d0*/ MOV         R8, R2 
    /*0000d4d4*/ MOV         R7, R3 
    /*0000d4d8*/ CMP         R1, #0 
    /*0000d4dc*/ BEQ         VPSS_VgsScale_xd588
    VPSS_VgsScale_xd4e0:
    /*0000d4e0*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0000d4e4*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0000d4e8*/ LDR         R4, [R3, R5, LSL #2] 
    /*0000d4ec*/ CMP         R4, #0 
    /*0000d4f0*/ BEQ         VPSS_VgsScale_xd5a8
    VPSS_VgsScale_xd4f4:
    /*0000d4f4*/ BL          0x000000000000D4F4          @ VPSS_IsVgsExist [R_ARM_CALL: .text+0xb2dc] 
    /*0000d4f8*/ MOVW        R2, #1080                   @ 0x438 
    /*0000d4fc*/ MOV         R3, #360                    @ 0x168 
    /*0000d500*/ MOVW        R1, #26576                  @ 0x67d0 
    /*0000d504*/ MUL         R2, R2, R8 
    /*0000d508*/ MLA         R3, R3, R6, R2 
    /*0000d50c*/ ADD         R4, R4, R3 
    /*0000d510*/ CMP         R0, #0 
    /*0000d514*/ BNE         VPSS_VgsScale_xd53c
    /*0000d518*/ LDR         R3, [R4, R1] 
    /*0000d51c*/ CMP         R3, #0 
    /*0000d520*/ BNE         VPSS_VgsScale_xd550
    /*0000d524*/ MOV         R2, R7 
    /*0000d528*/ MOV         R1, R6 
    /*0000d52c*/ MOV         R0, R5 
    /*0000d530*/ BL          0x000000000000D530          @ VPSS_ProcChnFrame [R_ARM_CALL: .text+0xd0a8] 
    /*0000d534*/ MVN         R0, #0 
    /*0000d538*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_VgsScale_xd53c:
    /*0000d53c*/ LDR         R4, [R4, R1] 
    /*0000d540*/ CMP         R4, #0 
    /*0000d544*/ BEQ         VPSS_VgsScale_xd570
    /*0000d548*/ MOV         R0, #0 
    /*0000d54c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_VgsScale_xd550:
    /*0000d550*/ MOV         R1, R6 
    /*0000d554*/ MOV         R0, R5 
    /*0000d558*/ BL          0x000000000000D558          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*0000d55c*/ MOV         R0, R7 
    /*0000d560*/ MOV         R1, #10 
    /*0000d564*/ BL          0x000000000000D564          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000d568*/ MVN         R0, #0 
    /*0000d56c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_VgsScale_xd570:
    /*0000d570*/ MOV         R2, R7 
    /*0000d574*/ MOV         R1, R6 
    /*0000d578*/ MOV         R0, R5 
    /*0000d57c*/ BL          0x000000000000D57C          @ VPSS_VgsScaleSubmitByPassJob2Vgs [R_ARM_CALL: .text+0xd324] 
    /*0000d580*/ MOV         R0, R4 
    /*0000d584*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_VgsScale_xd588:
    /*0000d588*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a1c] 
    /*0000d58c*/ MOVW        R0, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22b4] 
    /*0000d590*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a1c] 
    /*0000d594*/ MOVT        R0, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22b4] 
    /*0000d598*/ MOVW        R2, #2622                   @ 0xa3e 
    /*0000d59c*/ LDR         R1, [PC, #36]               @ 0x000000000000d5c8 
    /*0000d5a0*/ BL          0x000000000000D5A0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000d5a4*/ B           VPSS_VgsScale_xd4e0
    VPSS_VgsScale_xd5a8:
    /*0000d5a8*/ MOVW        R3, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a34] 
    /*0000d5ac*/ MOVW        R0, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22b4] 
    /*0000d5b0*/ MOVT        R3, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a34] 
    /*0000d5b4*/ MOVT        R0, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22b4] 
    /*0000d5b8*/ MOVW        R2, #2625                   @ 0xa41 
    /*0000d5bc*/ LDR         R1, [PC, #4]                @ 0x000000000000d5c8 
    /*0000d5c0*/ BL          0x000000000000D5C0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000d5c4*/ B           VPSS_VgsScale_xd4f4
    /*0000d5c8*/ ANDEQ       R0, R0, IP, ROR SL 
FUNC_END VPSS_VgsScale


FUNC_BEGIN VpssOnLineSendFrame
    /*0000d5cc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000d5d0*/ SUB         SP, SP, #396                @ 0x18c 
    /*0000d5d4*/ MOV         R4, R0 
    /*0000d5d8*/ MOV         R8, R1 
    /*0000d5dc*/ STR         R3, [SP, #12] 
    /*0000d5e0*/ BL          0x000000000000D5E0          @ VPSS_DRV_GetOnlineVpssId [R_ARM_CALL: .text+0x262cc] 
    /*0000d5e4*/ MOV         R6, #92                     @ 0x5c 
    /*0000d5e8*/ MOVW        R5, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000d5ec*/ MUL         R6, R6, R4 
    /*0000d5f0*/ MOVT        R5, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000d5f4*/ MOVW        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000d5f8*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0000d5fc*/ MOVT        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000d600*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0000d604*/ ADD         R7, R6, #48                 @ 0x30 
    /*0000d608*/ ADD         R1, SP, #24 
    /*0000d60c*/ ADD         R7, R5, R7 
    /*0000d610*/ LDR         SL, [R2, R4, LSL #2] 
    /*0000d614*/ LDR         R9, [R3, R4, LSL #2] 
    /*0000d618*/ MOV         FP, R0 
    /*0000d61c*/ MOV         R0, R7 
    /*0000d620*/ BL          0x000000000000D620          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000d624*/ MOV         R0, R4 
    /*0000d628*/ BL          0x000000000000D628          @ VpssCheckBindInfo [R_ARM_CALL: .text+0x698] 
    /*0000d62c*/ CMP         R0, #0 
    /*0000d630*/ BNE         VpssOnLineSendFrame_xd784
    VpssOnLineSendFrame_xd634:
    /*0000d634*/ MOV         R1, #72                     @ 0x48 
    /*0000d638*/ MOV         R2, #24 
    /*0000d63c*/ MUL         R1, R1, FP 
    /*0000d640*/ ADD         R3, R9, #16384              @ 0x4000 
    /*0000d644*/ MLA         R2, R2, R8, R1 
    /*0000d648*/ ADD         R3, R3, R2 
    /*0000d64c*/ LDR         R3, [R3, #2364]             @ 0x93c 
    /*0000d650*/ CMP         R3, #0 
    /*0000d654*/ BEQ         VpssOnLineSendFrame_xd76c
    /*0000d658*/ ADD         R3, R9, R8, LSL #2 
    /*0000d65c*/ ADD         R1, SP, #28 
    /*0000d660*/ ADD         R3, R3, #20480              @ 0x5000 
    /*0000d664*/ MOV         R0, R4 
    /*0000d668*/ STR         R3, [SP, #16] 
    /*0000d66c*/ LDR         R2, [R3, #1000]             @ 0x3e8 
    /*0000d670*/ BL          0x000000000000D670          @ VpssOnlineAlternateChnBufId [R_ARM_CALL: .text+0x2a14] 
    /*0000d674*/ LDR         R0, [SP, #28] 
    /*0000d678*/ LDR         R3, [SP, #16] 
    /*0000d67c*/ LSL         R1, R8, #1 
    /*0000d680*/ ADD         R1, R1, R0 
    /*0000d684*/ LDR         R2, [R3, #1000]             @ 0x3e8 
    /*0000d688*/ ADD         R1, R9, R1, LSL #2 
    /*0000d68c*/ ADD         R1, R1, #20480              @ 0x5000 
    /*0000d690*/ STR         R2, [R3, #1012]             @ 0x3f4 
    /*0000d694*/ LDR         R3, [R1, #976]              @ 0x3d0 
    /*0000d698*/ CMP         R3, #0 
    /*0000d69c*/ BEQ         VpssOnLineSendFrame_xd76c
    /*0000d6a0*/ MOV         R2, #376                    @ 0x178 
    /*0000d6a4*/ MOV         R3, #752                    @ 0x2f0 
    /*0000d6a8*/ MUL         R3, R3, R8 
    /*0000d6ac*/ MOVW        IP, #19496                  @ 0x4c28 
    /*0000d6b0*/ MUL         R0, R2, R0 
    /*0000d6b4*/ ADD         R2, R0, R3 
    /*0000d6b8*/ ADD         R2, R9, R2 
    /*0000d6bc*/ LDR         R2, [R2, IP] 
    /*0000d6c0*/ CMP         R2, #0 
    /*0000d6c4*/ MOVNE       R3, #0 
    /*0000d6c8*/ STRNE       R3, [R1, #976]              @ 0x3d0 
    /*0000d6cc*/ BEQ         VpssOnLineSendFrame_xd7ac
    VpssOnLineSendFrame_xd6d0:
    /*0000d6d0*/ MOV         R2, FP 
    /*0000d6d4*/ MOV         R1, R8 
    /*0000d6d8*/ ADD         R3, SP, #32 
    /*0000d6dc*/ MOV         R0, R4 
    /*0000d6e0*/ BL          0x000000000000D6E0          @ VPSS_PreparePicInfo [R_ARM_CALL: .text+0xcee8] 
    /*0000d6e4*/ ADD         R3, SL, #31744              @ 0x7c00 
    /*0000d6e8*/ LDR         R2, [SP, #12] 
    /*0000d6ec*/ ADD         R3, R3, #208                @ 0xd0 
    /*0000d6f0*/ ADD         R1, SP, #272                @ 0x110 
    /*0000d6f4*/ CMP         R2, #0 
    /*0000d6f8*/ LDRD        R2, [R3, #-8] 
    /*0000d6fc*/ STRD        R2, [R1] 
    /*0000d700*/ BNE         VpssOnLineSendFrame_xd818
    /*0000d704*/ ADD         SL, SL, #28672              @ 0x7000 
    /*0000d708*/ ADD         R1, SP, #24 
    /*0000d70c*/ MOV         R0, R7 
    /*0000d710*/ BL          0x000000000000D710          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000d714*/ LDR         IP, [SL, #3216]             @ 0xc90 
    /*0000d718*/ ADD         R3, SP, #32 
    /*0000d71c*/ MOV         R2, FP 
    /*0000d720*/ MOV         R1, R8 
    /*0000d724*/ MOV         R0, R4 
    /*0000d728*/ STR         IP, [SP, #264]              @ 0x108 
    /*0000d72c*/ BL          0x000000000000D72C          @ VPSS_VgsScale [R_ARM_CALL: .text+0xd4b8] 
    VpssOnLineSendFrame_xd730:
    /*0000d730*/ MOV         R3, #92                     @ 0x5c 
    /*0000d734*/ MUL         R4, R3, R4 
    /*0000d738*/ ADD         R3, R5, R4 
    /*0000d73c*/ LDR         R3, [R3, #4] 
    /*0000d740*/ CMP         R3, #0 
    /*0000d744*/ BNE         VpssOnLineSendFrame_xd754
    /*0000d748*/ LDR         R3, [R5, R4] 
    /*0000d74c*/ CMP         R3, #0 
    /*0000d750*/ BEQ         VpssOnLineSendFrame_xd778
    VpssOnLineSendFrame_xd754:
    /*0000d754*/ ADD         R0, R6, #36                 @ 0x24 
    /*0000d758*/ ADD         R0, R5, R0 
    /*0000d75c*/ BL          0x000000000000D75C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000d760*/ MOV         R0, #0 
    /*0000d764*/ ADD         SP, SP, #396                @ 0x18c 
    /*0000d768*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssOnLineSendFrame_xd76c:
    /*0000d76c*/ ADD         R1, SP, #24 
    /*0000d770*/ MOV         R0, R7 
    /*0000d774*/ BL          0x000000000000D774          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VpssOnLineSendFrame_xd778:
    /*0000d778*/ MOV         R0, #0 
    /*0000d77c*/ ADD         SP, SP, #396                @ 0x18c 
    /*0000d780*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssOnLineSendFrame_xd784:
    /*0000d784*/ MOV         R3, #340                    @ 0x154 
    /*0000d788*/ STR         R4, [SP, #4] 
    /*0000d78c*/ STR         R3, [SP] 
    /*0000d790*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2230] 
    /*0000d794*/ LDR         R3, [PC, #184]              @ 0x000000000000d854 
    /*0000d798*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2230] 
    /*0000d79c*/ MOV         R1, #7 
    /*0000d7a0*/ MOV         R0, #6 
    /*0000d7a4*/ BL          0x000000000000D7A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d7a8*/ B           VpssOnLineSendFrame_xd634
    VpssOnLineSendFrame_xd7ac:
    /*0000d7ac*/ MOVW        R1, #2648                   @ 0xa58 
    /*0000d7b0*/ MOV         IP, #776                    @ 0x308 
    /*0000d7b4*/ MLA         IP, IP, R8, R1 
    /*0000d7b8*/ MOVW        R1, #8536                   @ 0x2158 
    /*0000d7bc*/ ADD         R0, R0, #19200              @ 0x4b00 
    /*0000d7c0*/ STR         R2, [SP, #20] 
    /*0000d7c4*/ ADD         R0, R0, R3 
    /*0000d7c8*/ STR         R3, [SP, #16] 
    /*0000d7cc*/ ADD         R0, R9, R0 
    /*0000d7d0*/ MLA         R1, R1, FP, IP 
    /*0000d7d4*/ ADD         R1, SL, R1 
    /*0000d7d8*/ BL          0x000000000000D7D8          @ VpssDrvTransHalImageToVideo [R_ARM_CALL: .text+0x2423c] 
    /*0000d7dc*/ LDR         R0, [SP, #28] 
    /*0000d7e0*/ MOV         IP, #1 
    /*0000d7e4*/ LSL         R3, R8, IP 
    /*0000d7e8*/ ADD         R1, R3, R0 
    /*0000d7ec*/ LDR         R3, [SP, #16] 
    /*0000d7f0*/ MOV         R2, #376                    @ 0x178 
    /*0000d7f4*/ ADD         R1, R1, #5312               @ 0x14c0 
    /*0000d7f8*/ ADD         R1, R1, #52                 @ 0x34 
    /*0000d7fc*/ MLA         R3, R2, R0, R3 
    /*0000d800*/ MOVW        R2, #19496                  @ 0x4c28 
    /*0000d804*/ ADD         R3, R9, R3 
    /*0000d808*/ STR         IP, [R3, R2] 
    /*0000d80c*/ LDR         R2, [SP, #20] 
    /*0000d810*/ STR         R2, [R9, R1, LSL #2] 
    /*0000d814*/ B           VpssOnLineSendFrame_xd6d0
    VpssOnLineSendFrame_xd818:
    /*0000d818*/ ADD         SL, SL, #28672              @ 0x7000 
    /*0000d81c*/ MOV         R1, R8 
    /*0000d820*/ MOV         R3, #2 
    /*0000d824*/ ADD         R2, SP, #32 
    /*0000d828*/ LDR         IP, [SL, #3216]             @ 0xc90 
    /*0000d82c*/ MOV         R0, R4 
    /*0000d830*/ STR         IP, [SP, #264]              @ 0x108 
    /*0000d834*/ BL          0x000000000000D834          @ VpssFakeSendLowDelayFrame [R_ARM_CALL: .text+0xa824] 
    /*0000d838*/ ADD         R0, SP, #32 
    /*0000d83c*/ MOV         R1, #10 
    /*0000d840*/ BL          0x000000000000D840          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*0000d844*/ ADD         R1, SP, #24 
    /*0000d848*/ MOV         R0, R7 
    /*0000d84c*/ BL          0x000000000000D84C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000d850*/ B           VpssOnLineSendFrame_xd730
    /*0000d854*/ ANDEQ       R0, R0, IP, LSL #21 
FUNC_END VpssOnLineSendFrame


FUNC_BEGIN VPSS_GetVerMagic
    /*0000d858*/ MOVW        R0, #61479                  @ 0xf027 
    /*0000d85c*/ MOVT        R0, #307                    @ 0x133 
    /*0000d860*/ BX          LR 
FUNC_END VPSS_GetVerMagic


FUNC_BEGIN VPSS_Exit
    /*0000d864*/ PUSH        {R4, LR} 
    /*0000d868*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000d86c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000d870*/ LDR         R3, [R4] 
    /*0000d874*/ CMP         R3, #2 
    /*0000d878*/ POPEQ       {R4, PC} 
    /*0000d87c*/ BL          0x000000000000D87C          @ VPSS_GrpExit [R_ARM_CALL: .text+0x7688] 
    /*0000d880*/ MOV         R3, #2 
    /*0000d884*/ STR         R3, [R4] 
    /*0000d888*/ POP         {R4, PC} 
FUNC_END VPSS_Exit


FUNC_BEGIN VPSS_Notify
    /*0000d88c*/ CMP         R0, #17 
    /*0000d890*/ BXNE        LR 
    /*0000d894*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000d898*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000d89c*/ MOV         R2, #1 
    /*0000d8a0*/ STR         R2, [R3] 
    VPSS_Notify_xd8a4:
    /*0000d8a4*/ B           VPSS_Notify_xd8a4           @ VPSS_PreStopState [R_ARM_JUMP24: .text+0x2f64] 
FUNC_END VPSS_Notify


FUNC_BEGIN VPSS_QueryState
    /*0000d8a8*/ PUSH        {R4, LR} 
    /*0000d8ac*/ MOV         R4, R0 
    /*0000d8b0*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1178] 
    /*0000d8b4*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1178] 
    /*0000d8b8*/ BL          0x000000000000D8B8          @ osal_atomic_read [R_ARM_CALL: +0x0] 
    /*0000d8bc*/ CMP         R0, #0 
    /*0000d8c0*/ MOVEQ       R3, #17 
    /*0000d8c4*/ MOVNE       R3, #34                     @ 0x22 
    /*0000d8c8*/ STR         R3, [R4] 
    /*0000d8cc*/ POP         {R4, PC} 
FUNC_END VPSS_QueryState


FUNC_BEGIN VpssPoll
    /*0000d8d0*/ PUSH        {R4, R5, R6, LR} 
    /*0000d8d4*/ SUB         SP, SP, #16 
    /*0000d8d8*/ LDR         R4, [R1] 
    /*0000d8dc*/ UBFX        R5, R4, #16, #8 
    /*0000d8e0*/ UXTB        R4, R4 
    /*0000d8e4*/ CMP         R4, #10 
    /*0000d8e8*/ CMPLE       R5, #15 
    /*0000d8ec*/ BGT         VpssPoll_xd92c
    /*0000d8f0*/ MOV         R6, R0 
    /*0000d8f4*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1178] 
    /*0000d8f8*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1178] 
    /*0000d8fc*/ BL          0x000000000000D8FC          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0000d900*/ MOV         R1, R4 
    /*0000d904*/ MOV         R2, R6 
    /*0000d908*/ MOV         R0, R5 
    /*0000d90c*/ BL          0x000000000000D90C          @ VpssUserPoll [R_ARM_CALL: .text+0x14078] 
    /*0000d910*/ MOV         R4, R0 
    /*0000d914*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1178] 
    /*0000d918*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1178] 
    /*0000d91c*/ BL          0x000000000000D91C          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0000d920*/ MOV         R0, R4 
    /*0000d924*/ ADD         SP, SP, #16 
    /*0000d928*/ POP         {R4, R5, R6, PC} 
    VpssPoll_xd92c:
    /*0000d92c*/ STR         R4, [SP, #8] 
    /*0000d930*/ MOV         R2, #792                    @ 0x318 
    /*0000d934*/ STR         R5, [SP, #4] 
    /*0000d938*/ MOV         R1, #7 
    /*0000d93c*/ STR         R2, [SP] 
    /*0000d940*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .rodata+0xaa0] 
    /*0000d944*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a4c] 
    /*0000d948*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .rodata+0xaa0] 
    /*0000d94c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a4c] 
    /*0000d950*/ MOV         R0, #3 
    /*0000d954*/ BL          0x000000000000D954          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d958*/ MOV         R4, #0 
    /*0000d95c*/ MOV         R0, R4 
    /*0000d960*/ ADD         SP, SP, #16 
    /*0000d964*/ POP         {R4, R5, R6, PC} 
FUNC_END VpssPoll


FUNC_BEGIN VPSS_Init
    /*0000d968*/ PUSH        {R4, R5, R6, LR} 
    /*0000d96c*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000d970*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000d974*/ LDR         R0, [R5] 
    /*0000d978*/ CMP         R0, #0 
    /*0000d97c*/ MOVEQ       R4, R0 
    /*0000d980*/ BEQ         VPSS_Init_xd998
    /*0000d984*/ CMP         R0, #1 
    /*0000d988*/ BEQ         VPSS_Init_xd9c0
    /*0000d98c*/ BL          0x000000000000D98C          @ VPSS_GrpInit [R_ARM_CALL: .text+0x2ac8] 
    /*0000d990*/ SUBS        R4, R0, #0 
    /*0000d994*/ BEQ         VPSS_Init_xd9a0
    VPSS_Init_xd998:
    /*0000d998*/ MOV         R0, R4 
    /*0000d99c*/ POP         {R4, R5, R6, PC} 
    VPSS_Init_xd9a0:
    /*0000d9a0*/ BL          0x000000000000D9A0          @ VPSS_SetDefaultViVpssMode [R_ARM_CALL: .text+0x5dc] 
    /*0000d9a4*/ MOV         R0, #2 
    /*0000d9a8*/ STR         R4, [R5] 
    /*0000d9ac*/ BL          0x000000000000D9AC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000d9b0*/ LDR         R3, [R0, #12] 
    /*0000d9b4*/ BLX         R3 
    /*0000d9b8*/ MOV         R0, R4 
    /*0000d9bc*/ POP         {R4, R5, R6, PC} 
    VPSS_Init_xd9c0:
    /*0000d9c0*/ MOVW        R4, #32786                  @ 0x8012 
    /*0000d9c4*/ MOVT        R4, #40967                  @ 0xa007 
    /*0000d9c8*/ B           VPSS_Init_xd998
FUNC_END VPSS_Init


FUNC_BEGIN VpssIoctl
    /*0000d9cc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000d9d0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000d9d4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000d9d8*/ SUB         SP, SP, #36                 @ 0x24 
    /*0000d9dc*/ LDR         R3, [R3] 
    /*0000d9e0*/ CMP         R3, #0 
    /*0000d9e4*/ BNE         VpssIoctl_xde74
    /*0000d9e8*/ MOV         R9, R2 
    /*0000d9ec*/ MOV         R6, R0 
    /*0000d9f0*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1178] 
    /*0000d9f4*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1178] 
    /*0000d9f8*/ MOV         R8, R1 
    /*0000d9fc*/ BL          0x000000000000D9FC          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0000da00*/ LDR         R1, [R9] 
    /*0000da04*/ MOV         R2, R6 
    /*0000da08*/ UBFX        R7, R1, #16, #8 
    /*0000da0c*/ UXTB        R5, R1 
    /*0000da10*/ MOV         R0, R7 
    /*0000da14*/ MOV         R1, R5 
    /*0000da18*/ BL          0x000000000000DA18          @ VPSS_DRV_FuncPreFilter [R_ARM_CALL: .text+0x17e18] 
    /*0000da1c*/ SUBS        R4, R0, #0 
    /*0000da20*/ BNE         VpssIoctl_xdab4
    /*0000da24*/ MOVW        R3, #20532                  @ 0x5034 
    /*0000da28*/ MOVT        R3, #16960                  @ 0x4240 
    /*0000da2c*/ CMP         R6, R3 
    /*0000da30*/ BEQ         VpssIoctl_xe034
    /*0000da34*/ BHI         VpssIoctl_xdacc
    /*0000da38*/ MOVW        R3, #20507                  @ 0x501b 
    /*0000da3c*/ MOVT        R3, #16392                  @ 0x4008 
    /*0000da40*/ CMP         R6, R3 
    /*0000da44*/ BEQ         VpssIoctl_xe0c4
    /*0000da48*/ BLS         VpssIoctl_xdb4c
    /*0000da4c*/ MOV         R3, #20480                  @ 0x5000 
    /*0000da50*/ MOVT        R3, #16424                  @ 0x4028 
    /*0000da54*/ CMP         R6, R3 
    /*0000da58*/ BEQ         VpssIoctl_xe078
    /*0000da5c*/ BLS         VpssIoctl_xdc04
    /*0000da60*/ MOVW        R3, #20504                  @ 0x5018 
    /*0000da64*/ MOVT        R3, #16640                  @ 0x4100 
    /*0000da68*/ CMP         R6, R3 
    /*0000da6c*/ BEQ         VpssIoctl_xe064
    /*0000da70*/ BHI         VpssIoctl_xdd44
    /*0000da74*/ MOVW        R3, #20511                  @ 0x501f 
    /*0000da78*/ MOVT        R3, #16424                  @ 0x4028 
    /*0000da7c*/ CMP         R6, R3 
    /*0000da80*/ BEQ         VpssIoctl_xe274
    /*0000da84*/ MOVW        R3, #20485                  @ 0x5005 
    /*0000da88*/ MOVT        R3, #16456                  @ 0x4048 
    /*0000da8c*/ CMP         R6, R3 
    /*0000da90*/ BEQ         VpssIoctl_xe25c
    /*0000da94*/ MOVW        R3, #20489                  @ 0x5009 
    /*0000da98*/ MOVT        R3, #16424                  @ 0x4028 
    /*0000da9c*/ CMP         R6, R3 
    /*0000daa0*/ BNE         VpssIoctl_xe218
    /*0000daa4*/ MOV         R1, R8 
    /*0000daa8*/ MOV         R0, R7 
    /*0000daac*/ BL          0x000000000000DAAC          @ VPSS_CreateGrp [R_ARM_CALL: .text+0x3094] 
    /*0000dab0*/ MOV         R4, R0 
    VpssIoctl_xdab4:
    /*0000dab4*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1178] 
    /*0000dab8*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1178] 
    /*0000dabc*/ BL          0x000000000000DABC          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0000dac0*/ MOV         R0, R4 
    VpssIoctl_xdac4:
    /*0000dac4*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000dac8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssIoctl_xdacc:
    /*0000dacc*/ MOVW        R3, #20492                  @ 0x500c 
    /*0000dad0*/ MOVT        R3, #32792                  @ 0x8018 
    /*0000dad4*/ CMP         R6, R3 
    /*0000dad8*/ BEQ         VpssIoctl_xe0b0
    /*0000dadc*/ BLS         VpssIoctl_xdba4
    /*0000dae0*/ MOVW        R3, #20514                  @ 0x5022 
    /*0000dae4*/ MOVT        R3, #32984                  @ 0x80d8 
    /*0000dae8*/ CMP         R6, R3 
    /*0000daec*/ BEQ         VpssIoctl_xe13c
    /*0000daf0*/ BHI         VpssIoctl_xdc58
    /*0000daf4*/ MOVW        R3, #20531                  @ 0x5033 
    /*0000daf8*/ MOVT        R3, #32800                  @ 0x8020 
    /*0000dafc*/ CMP         R6, R3 
    /*0000db00*/ BEQ         VpssIoctl_xe124
    /*0000db04*/ BLS         VpssIoctl_xddec
    /*0000db08*/ MOVW        R3, #20512                  @ 0x5020 
    /*0000db0c*/ MOVT        R3, #32808                  @ 0x8028 
    /*0000db10*/ CMP         R6, R3 
    /*0000db14*/ BEQ         VpssIoctl_xe1a0
    /*0000db18*/ MOVW        R3, #20486                  @ 0x5006 
    /*0000db1c*/ MOVT        R3, #32840                  @ 0x8048 
    /*0000db20*/ CMP         R6, R3 
    /*0000db24*/ BEQ         VpssIoctl_xe188
    /*0000db28*/ MOVW        R3, #20481                  @ 0x5001 
    /*0000db2c*/ MOVT        R3, #32808                  @ 0x8028 
    /*0000db30*/ CMP         R6, R3 
    /*0000db34*/ BNE         VpssIoctl_xe218
    /*0000db38*/ MOV         R1, R8 
    /*0000db3c*/ MOV         R0, R7 
    /*0000db40*/ BL          0x000000000000DB40          @ VPSS_GetGrpAttr [R_ARM_CALL: .text+0x4f70] 
    /*0000db44*/ MOV         R4, R0 
    /*0000db48*/ B           VpssIoctl_xdab4
    VpssIoctl_xdb4c:
    /*0000db4c*/ MOVW        R3, #20509                  @ 0x501d 
    /*0000db50*/ CMP         R6, R3 
    /*0000db54*/ BEQ         VpssIoctl_xe0e8
    /*0000db58*/ BHI         VpssIoctl_xdcb8
    /*0000db5c*/ MOVW        R3, #20484                  @ 0x5004 
    /*0000db60*/ CMP         R6, R3 
    /*0000db64*/ BEQ         VpssIoctl_xe0d8
    /*0000db68*/ BLS         VpssIoctl_xddc4
    /*0000db6c*/ MOVW        R3, #20488                  @ 0x5008 
    /*0000db70*/ CMP         R6, R3 
    /*0000db74*/ BEQ         VpssIoctl_xe09c
    /*0000db78*/ MOVW        R3, #20490                  @ 0x500a 
    /*0000db7c*/ CMP         R6, R3 
    /*0000db80*/ BEQ         VpssIoctl_xe08c
    /*0000db84*/ MOVW        R3, #20487                  @ 0x5007 
    /*0000db88*/ CMP         R6, R3 
    /*0000db8c*/ BNE         VpssIoctl_xe218
    /*0000db90*/ MOV         R1, R5 
    /*0000db94*/ MOV         R0, R7 
    /*0000db98*/ BL          0x000000000000DB98          @ VPSS_EnableChn [R_ARM_CALL: .text+0x4670] 
    /*0000db9c*/ MOV         R4, R0 
    /*0000dba0*/ B           VpssIoctl_xdab4
    VpssIoctl_xdba4:
    /*0000dba4*/ MOVW        R3, #20543                  @ 0x503f 
    /*0000dba8*/ MOVT        R3, #32772                  @ 0x8004 
    /*0000dbac*/ CMP         R6, R3 
    /*0000dbb0*/ BEQ         VpssIoctl_xe2a4
    /*0000dbb4*/ BHI         VpssIoctl_xdcf8
    /*0000dbb8*/ MOVW        R3, #20546                  @ 0x5042 
    /*0000dbbc*/ MOVT        R3, #17308                  @ 0x439c 
    /*0000dbc0*/ CMP         R6, R3 
    /*0000dbc4*/ BEQ         VpssIoctl_xde24
    /*0000dbc8*/ BHI         VpssIoctl_xdea0
    /*0000dbcc*/ MOVW        R3, #20526                  @ 0x502e 
    /*0000dbd0*/ MOVT        R3, #17024                  @ 0x4280 
    /*0000dbd4*/ CMP         R6, R3 
    /*0000dbd8*/ BEQ         VpssIoctl_xe04c
    /*0000dbdc*/ MOVW        R3, #20528                  @ 0x5030 
    /*0000dbe0*/ MOVT        R3, #17048                  @ 0x4298 
    /*0000dbe4*/ CMP         R6, R3 
    /*0000dbe8*/ BNE         VpssIoctl_xe218
    /*0000dbec*/ MOV         R2, R8 
    /*0000dbf0*/ MOV         R1, R5 
    /*0000dbf4*/ MOV         R0, R7 
    /*0000dbf8*/ BL          0x000000000000DBF8          @ VPSS_SetChnRotationExAttr [R_ARM_CALL: .text+0x60cc] 
    /*0000dbfc*/ MOV         R4, R0 
    /*0000dc00*/ B           VpssIoctl_xdab4
    VpssIoctl_xdc04:
    /*0000dc04*/ MOVW        R3, #20519                  @ 0x5027 
    /*0000dc08*/ MOVT        R3, #16396                  @ 0x400c 
    /*0000dc0c*/ CMP         R6, R3 
    /*0000dc10*/ BEQ         VpssIoctl_xe1c8
    /*0000dc14*/ BLS         VpssIoctl_xdd8c
    /*0000dc18*/ MOVW        R3, #20491                  @ 0x500b 
    /*0000dc1c*/ MOVT        R3, #16408                  @ 0x4018 
    /*0000dc20*/ CMP         R6, R3 
    /*0000dc24*/ BEQ         VpssIoctl_xe110
    /*0000dc28*/ MOVW        R3, #20524                  @ 0x502c 
    /*0000dc2c*/ MOVT        R3, #16408                  @ 0x4018 
    /*0000dc30*/ CMP         R6, R3 
    /*0000dc34*/ BEQ         VpssIoctl_xe0f8
    /*0000dc38*/ MOVW        R3, #20550                  @ 0x5046 
    /*0000dc3c*/ MOVT        R3, #16400                  @ 0x4010 
    /*0000dc40*/ CMP         R6, R3 
    /*0000dc44*/ BNE         VpssIoctl_xe218
    /*0000dc48*/ MOV         R0, R8 
    /*0000dc4c*/ BL          0x000000000000DC4C          @ VPSS_SetModParam [R_ARM_CALL: .text+0xa080] 
    /*0000dc50*/ MOV         R4, R0 
    /*0000dc54*/ B           VpssIoctl_xdab4
    VpssIoctl_xdc58:
    /*0000dc58*/ MOVW        R3, #20496                  @ 0x5010 
    /*0000dc5c*/ MOVT        R3, #49164                  @ 0xc00c 
    /*0000dc60*/ CMP         R6, R3 
    /*0000dc64*/ BEQ         VpssIoctl_xde5c
    /*0000dc68*/ BHI         VpssIoctl_xdf40
    /*0000dc6c*/ MOVW        R3, #20505                  @ 0x5019 
    /*0000dc70*/ MOVT        R3, #33024                  @ 0x8100 
    /*0000dc74*/ CMP         R6, R3 
    /*0000dc78*/ BCC         VpssIoctl_xe218
    /*0000dc7c*/ MOVW        R3, #20506                  @ 0x501a 
    /*0000dc80*/ MOVT        R3, #33024                  @ 0x8100 
    /*0000dc84*/ CMP         R6, R3 
    /*0000dc88*/ BLS         VpssIoctl_xdfe8
    /*0000dc8c*/ MOVW        R3, #20494                  @ 0x500e 
    /*0000dc90*/ MOVT        R3, #49160                  @ 0xc008 
    /*0000dc94*/ CMP         R6, R3 
    /*0000dc98*/ BNE         VpssIoctl_xe218
    /*0000dc9c*/ MOV         R1, R5 
    /*0000dca0*/ MOV         R0, R7 
    /*0000dca4*/ LDR         R3, [R8] 
    /*0000dca8*/ LDR         R2, [R8, #4] 
    /*0000dcac*/ BL          0x000000000000DCAC          @ VpssUserGetFrame [R_ARM_CALL: .text+0x11ca0] 
    /*0000dcb0*/ MOV         R4, R0 
    /*0000dcb4*/ B           VpssIoctl_xdab4
    VpssIoctl_xdcb8:
    /*0000dcb8*/ MOVW        R3, #20515                  @ 0x5023 
    /*0000dcbc*/ MOVT        R3, #16388                  @ 0x4004 
    /*0000dcc0*/ CMP         R6, R3 
    /*0000dcc4*/ BEQ         VpssIoctl_xde38
    /*0000dcc8*/ BHI         VpssIoctl_xdf08
    /*0000dccc*/ MOVW        R3, #20510                  @ 0x501e 
    /*0000dcd0*/ CMP         R6, R3 
    /*0000dcd4*/ BEQ         VpssIoctl_xe024
    /*0000dcd8*/ MOVW        R3, #20523                  @ 0x502b 
    /*0000dcdc*/ CMP         R6, R3 
    /*0000dce0*/ BNE         VpssIoctl_xe218
    /*0000dce4*/ MOV         R1, R5 
    /*0000dce8*/ MOV         R0, R7 
    /*0000dcec*/ BL          0x000000000000DCEC          @ VPSS_DetachVbPool [R_ARM_CALL: .text+0x723c] 
    /*0000dcf0*/ MOV         R4, R0 
    /*0000dcf4*/ B           VpssIoctl_xdab4
    VpssIoctl_xdcf8:
    /*0000dcf8*/ MOVW        R3, #20552                  @ 0x5048 
    /*0000dcfc*/ MOVT        R3, #32776                  @ 0x8008 
    /*0000dd00*/ CMP         R6, R3 
    /*0000dd04*/ BEQ         VpssIoctl_xde44
    /*0000dd08*/ BHI         VpssIoctl_xded8
    /*0000dd0c*/ MOVW        R3, #20508                  @ 0x501c 
    /*0000dd10*/ MOVT        R3, #32776                  @ 0x8008 
    /*0000dd14*/ CMP         R6, R3 
    /*0000dd18*/ BEQ         VpssIoctl_xe010
    /*0000dd1c*/ MOVW        R3, #20518                  @ 0x5026 
    /*0000dd20*/ MOVT        R3, #32776                  @ 0x8008 
    /*0000dd24*/ CMP         R6, R3 
    /*0000dd28*/ BNE         VpssIoctl_xe218
    /*0000dd2c*/ MOV         R2, R8 
    /*0000dd30*/ MOV         R1, R5 
    /*0000dd34*/ MOV         R0, R7 
    /*0000dd38*/ BL          0x000000000000DD38          @ VPSS_GetChnLowDelayAttr [R_ARM_CALL: .text+0x6f74] 
    /*0000dd3c*/ MOV         R4, R0 
    /*0000dd40*/ B           VpssIoctl_xdab4
    VpssIoctl_xdd44:
    /*0000dd44*/ MOVW        R3, #20493                  @ 0x500d 
    /*0000dd48*/ MOVT        R3, #16728                  @ 0x4158 
    /*0000dd4c*/ CMP         R6, R3 
    /*0000dd50*/ BEQ         VpssIoctl_xe16c
    /*0000dd54*/ MOVW        R3, #20530                  @ 0x5032 
    /*0000dd58*/ MOVT        R3, #16888                  @ 0x41f8 
    /*0000dd5c*/ CMP         R6, R3 
    /*0000dd60*/ BEQ         VpssIoctl_xe154
    /*0000dd64*/ MOVW        R3, #20495                  @ 0x500f 
    /*0000dd68*/ MOVT        R3, #16720                  @ 0x4150 
    /*0000dd6c*/ CMP         R6, R3 
    /*0000dd70*/ BNE         VpssIoctl_xe218
    /*0000dd74*/ MOV         R2, R8 
    /*0000dd78*/ MOV         R1, R5 
    /*0000dd7c*/ MOV         R0, R7 
    /*0000dd80*/ BL          0x000000000000DD80          @ VpssUserReleaseFrame [R_ARM_CALL: .text+0x123ec] 
    /*0000dd84*/ MOV         R4, R0 
    /*0000dd88*/ B           VpssIoctl_xdab4
    VpssIoctl_xdd8c:
    /*0000dd8c*/ MOVW        R3, #20517                  @ 0x5025 
    /*0000dd90*/ MOVT        R3, #16392                  @ 0x4008 
    /*0000dd94*/ CMP         R6, R3 
    /*0000dd98*/ BEQ         VpssIoctl_xe1e4
    /*0000dd9c*/ MOVW        R3, #20497                  @ 0x5011 
    /*0000dda0*/ MOVT        R3, #16396                  @ 0x400c 
    /*0000dda4*/ CMP         R6, R3 
    /*0000dda8*/ BNE         VpssIoctl_xe218
    /*0000ddac*/ MOV         R0, R7 
    /*0000ddb0*/ MOV         R2, R8 
    /*0000ddb4*/ LDR         R1, [R8, #4] 
    /*0000ddb8*/ BL          0x000000000000DDB8          @ VpssUserReleaseGrpFrame [R_ARM_CALL: .text+0x11b18] 
    /*0000ddbc*/ MOV         R4, R0 
    /*0000ddc0*/ B           VpssIoctl_xdab4
    VpssIoctl_xddc4:
    /*0000ddc4*/ MOVW        R3, #20482                  @ 0x5002 
    /*0000ddc8*/ CMP         R6, R3 
    /*0000ddcc*/ BEQ         VpssIoctl_xe1d4
    /*0000ddd0*/ MOVW        R3, #20483                  @ 0x5003 
    /*0000ddd4*/ CMP         R6, R3 
    /*0000ddd8*/ BNE         VpssIoctl_xe218
    /*0000dddc*/ MOV         R0, R7 
    /*0000dde0*/ BL          0x000000000000DDE0          @ VPSS_StopGrp [R_ARM_CALL: .text+0x7544] 
    /*0000dde4*/ MOV         R4, R0 
    /*0000dde8*/ B           VpssIoctl_xdab4
    VpssIoctl_xddec:
    /*0000ddec*/ MOVW        R3, #20525                  @ 0x502d 
    /*0000ddf0*/ MOVT        R3, #32792                  @ 0x8018 
    /*0000ddf4*/ CMP         R6, R3 
    /*0000ddf8*/ BEQ         VpssIoctl_xe2bc
    /*0000ddfc*/ MOVW        R3, #20529                  @ 0x5031 
    /*0000de00*/ MOVT        R3, #32796                  @ 0x801c 
    /*0000de04*/ CMP         R6, R3 
    /*0000de08*/ BNE         VpssIoctl_xe218
    /*0000de0c*/ MOV         R2, R8 
    /*0000de10*/ MOV         R1, R5 
    /*0000de14*/ MOV         R0, R7 
    /*0000de18*/ BL          0x000000000000DE18          @ VPSS_GetChnRotationExAttr [R_ARM_CALL: .text+0x6310] 
    /*0000de1c*/ MOV         R4, R0 
    /*0000de20*/ B           VpssIoctl_xdab4
    VpssIoctl_xde24:
    /*0000de24*/ MOV         R1, R8 
    /*0000de28*/ MOV         R0, R7 
    /*0000de2c*/ BL          0x000000000000DE2C          @ VPSS_SetGrpNRXParam [R_ARM_CALL: .text+0x7d64] 
    /*0000de30*/ MOV         R4, R0 
    /*0000de34*/ B           VpssIoctl_xdab4
    VpssIoctl_xde38:
    /*0000de38*/ LDR         R3, [R8] 
    /*0000de3c*/ STR         R3, [R9] 
    /*0000de40*/ B           VpssIoctl_xdab4
    VpssIoctl_xde44:
    /*0000de44*/ MOV         R2, R8 
    /*0000de48*/ MOV         R1, R5 
    /*0000de4c*/ MOV         R0, R7 
    /*0000de50*/ BL          0x000000000000DE50          @ VPSS_GetChnOutPutSize [R_ARM_CALL: .text+0x5a28] 
    /*0000de54*/ MOV         R4, R0 
    /*0000de58*/ B           VpssIoctl_xdab4
    VpssIoctl_xde5c:
    /*0000de5c*/ MOV         R0, R7 
    /*0000de60*/ MOV         R2, R8 
    /*0000de64*/ LDR         R1, [R8, #4] 
    /*0000de68*/ BL          0x000000000000DE68          @ VpssUserGetGrpFrame [R_ARM_CALL: .text+0x116a0] 
    /*0000de6c*/ MOV         R4, R0 
    /*0000de70*/ B           VpssIoctl_xdab4
    VpssIoctl_xde74:
    /*0000de74*/ MOVW        R3, #810                    @ 0x32a 
    /*0000de78*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a7c] 
    /*0000de7c*/ STR         R3, [SP] 
    /*0000de80*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a7c] 
    /*0000de84*/ LDR         R3, [PC, #1344]             @ 0x000000000000e3cc 
    /*0000de88*/ MOV         R1, #7 
    /*0000de8c*/ MOV         R0, #3 
    /*0000de90*/ BL          0x000000000000DE90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000de94*/ MOVW        R0, #32784                  @ 0x8010 
    /*0000de98*/ MOVT        R0, #40967                  @ 0xa007 
    /*0000de9c*/ B           VpssIoctl_xdac4
    VpssIoctl_xdea0:
    /*0000dea0*/ MOVW        R3, #20513                  @ 0x5021 
    /*0000dea4*/ MOVT        R3, #20192                  @ 0x4ee0 
    /*0000dea8*/ CMP         R6, R3 
    /*0000deac*/ BEQ         VpssIoctl_xe244
    /*0000deb0*/ MOVW        R3, #20527                  @ 0x502f 
    /*0000deb4*/ MOVT        R3, #32772                  @ 0x8004 
    /*0000deb8*/ CMP         R6, R3 
    /*0000debc*/ BNE         VpssIoctl_xe1b8
    /*0000dec0*/ MOV         R2, R8 
    /*0000dec4*/ MOV         R1, R5 
    /*0000dec8*/ MOV         R0, R7 
    /*0000decc*/ BL          0x000000000000DECC          @ VPSS_GetChnRotationAttr [R_ARM_CALL: .text+0x5fa4] 
    /*0000ded0*/ MOV         R4, R0 
    /*0000ded4*/ B           VpssIoctl_xdab4
    VpssIoctl_xded8:
    /*0000ded8*/ MOVW        R3, #20533                  @ 0x5035 
    /*0000dedc*/ MOVT        R3, #32784                  @ 0x8010 
    /*0000dee0*/ CMP         R6, R3 
    /*0000dee4*/ BEQ         VpssIoctl_xe28c
    /*0000dee8*/ MOVW        R3, #20551                  @ 0x5047 
    /*0000deec*/ MOVT        R3, #32784                  @ 0x8010 
    /*0000def0*/ CMP         R6, R3 
    /*0000def4*/ BNE         VpssIoctl_xe2ec
    /*0000def8*/ MOV         R0, R8 
    /*0000defc*/ BL          0x000000000000DEFC          @ VPSS_GetModParam [R_ARM_CALL: .text+0xa1cc] 
    /*0000df00*/ MOV         R4, R0 
    /*0000df04*/ B           VpssIoctl_xdab4
    VpssIoctl_xdf08:
    /*0000df08*/ MOVW        R3, #20522                  @ 0x502a 
    /*0000df0c*/ MOVT        R3, #16388                  @ 0x4004 
    /*0000df10*/ CMP         R6, R3 
    /*0000df14*/ BEQ         VpssIoctl_xe2d4
    /*0000df18*/ MOVW        R3, #20542                  @ 0x503e 
    /*0000df1c*/ MOVT        R3, #16388                  @ 0x4004 
    /*0000df20*/ CMP         R6, R3 
    /*0000df24*/ BNE         VpssIoctl_xe208
    /*0000df28*/ LDR         R2, [R8] 
    /*0000df2c*/ MOV         R1, R5 
    /*0000df30*/ MOV         R0, R7 
    /*0000df34*/ BL          0x000000000000DF34          @ VPSS_SetChnAlign [R_ARM_CALL: .text+0x8ab4] 
    /*0000df38*/ MOV         R4, R0 
    /*0000df3c*/ B           VpssIoctl_xdab4
    VpssIoctl_xdf40:
    /*0000df40*/ MOVW        R3, #20547                  @ 0x5043 
    /*0000df44*/ MOVT        R3, #50076                  @ 0xc39c 
    /*0000df48*/ CMP         R6, R3 
    /*0000df4c*/ BEQ         VpssIoctl_xdffc
    /*0000df50*/ MOVW        R3, #20549                  @ 0x5045 
    /*0000df54*/ MOVT        R3, #50264                  @ 0xc458 
    /*0000df58*/ CMP         R6, R3 
    /*0000df5c*/ BEQ         VpssIoctl_xe1c8
    /*0000df60*/ MOVW        R3, #20516                  @ 0x5024 
    /*0000df64*/ MOVT        R3, #49168                  @ 0xc010 
    /*0000df68*/ CMP         R6, R3 
    /*0000df6c*/ BNE         VpssIoctl_xe218
    /*0000df70*/ LDR         R6, [PC, #1112]             @ 0x000000000000e3d0 
    /*0000df74*/ MOV         R2, #1024                   @ 0x400 
    /*0000df78*/ MOV         R1, #0 
    /*0000df7c*/ MOV         R0, R6 
    /*0000df80*/ BL          0x000000000000DF80          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000df84*/ LDR         R3, [R8, #4] 
    /*0000df88*/ SUB         R2, R3, #1 
    /*0000df8c*/ CMP         R2, #63                     @ 0x3f 
    /*0000df90*/ BHI         VpssIoctl_xe360
    /*0000df94*/ LDR         R9, [R8, #8] 
    /*0000df98*/ LSL         R4, R3, #4 
    /*0000df9c*/ MOV         R0, #0 
    /*0000dfa0*/ MOV         R2, R4 
    /*0000dfa4*/ MOV         R1, R9 
    /*0000dfa8*/ BL          0x000000000000DFA8          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*0000dfac*/ CMP         R0, #0 
    /*0000dfb0*/ BNE         VpssIoctl_xe300
    VpssIoctl_xdfb4:
    /*0000dfb4*/ MOVW        R3, #355                    @ 0x163 
    /*0000dfb8*/ STR         R5, [SP, #8] 
    /*0000dfbc*/ STR         R3, [SP] 
    /*0000dfc0*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b50] 
    /*0000dfc4*/ STR         R7, [SP, #4] 
    /*0000dfc8*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b50] 
    /*0000dfcc*/ LDR         R3, [PC, #1024]             @ 0x000000000000e3d4 
    /*0000dfd0*/ MOV         R1, #7 
    /*0000dfd4*/ MOV         R0, #3 
    /*0000dfd8*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000dfdc*/ BL          0x000000000000DFDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000dfe0*/ MOVT        R4, #40967                  @ 0xa007 
    /*0000dfe4*/ B           VpssIoctl_xdab4
    VpssIoctl_xdfe8:
    /*0000dfe8*/ MOV         R1, R8 
    /*0000dfec*/ MOV         R0, R7 
    /*0000dff0*/ BL          0x000000000000DFF0          @ VPSS_GetGrpFisheyeConfig [R_ARM_CALL: .text+0x84f8] 
    /*0000dff4*/ MOV         R4, R0 
    /*0000dff8*/ B           VpssIoctl_xdab4
    VpssIoctl_xdffc:
    /*0000dffc*/ MOV         R1, R8 
    /*0000e000*/ MOV         R0, R7 
    /*0000e004*/ BL          0x000000000000E004          @ VPSS_GetGrpNRXParam [R_ARM_CALL: .text+0x7e90] 
    /*0000e008*/ MOV         R4, R0 
    /*0000e00c*/ B           VpssIoctl_xdab4
    VpssIoctl_xe010:
    /*0000e010*/ MOV         R1, R8 
    /*0000e014*/ MOV         R0, R7 
    /*0000e018*/ BL          0x000000000000E018          @ VPSS_GetGrpFrameInterruptAttr [R_ARM_CALL: .text+0x8844] 
    /*0000e01c*/ MOV         R4, R0 
    /*0000e020*/ B           VpssIoctl_xdab4
    VpssIoctl_xe024:
    /*0000e024*/ MOV         R0, R7 
    /*0000e028*/ BL          0x000000000000E028          @ VPSS_DisableUserFrameRateCtrl [R_ARM_CALL: .text+0x89f4] 
    /*0000e02c*/ MOV         R4, R0 
    /*0000e030*/ B           VpssIoctl_xdab4
    VpssIoctl_xe034:
    /*0000e034*/ MOV         R2, R8 
    /*0000e038*/ MOV         R1, R5 
    /*0000e03c*/ MOV         R0, R7 
    /*0000e040*/ BL          0x000000000000E040          @ VPSS_SetChnSpreadAttr [R_ARM_CALL: .text+0x67c0] 
    /*0000e044*/ MOV         R4, R0 
    /*0000e048*/ B           VpssIoctl_xdab4
    VpssIoctl_xe04c:
    /*0000e04c*/ MOV         R2, R8 
    /*0000e050*/ MOV         R1, R5 
    /*0000e054*/ MOV         R0, R7 
    /*0000e058*/ BL          0x000000000000E058          @ VPSS_SetChnRotationAttr [R_ARM_CALL: .text+0x5b88] 
    /*0000e05c*/ MOV         R4, R0 
    /*0000e060*/ B           VpssIoctl_xdab4
    VpssIoctl_xe064:
    /*0000e064*/ MOV         R1, R8 
    /*0000e068*/ MOV         R0, R7 
    /*0000e06c*/ BL          0x000000000000E06C          @ VPSS_SetGrpFisheyeConfig [R_ARM_CALL: .text+0x83d4] 
    /*0000e070*/ MOV         R4, R0 
    /*0000e074*/ B           VpssIoctl_xdab4
    VpssIoctl_xe078:
    /*0000e078*/ MOV         R1, R8 
    /*0000e07c*/ MOV         R0, R7 
    /*0000e080*/ BL          0x000000000000E080          @ VPSS_SetGrpAttr [R_ARM_CALL: .text+0x4dd0] 
    /*0000e084*/ MOV         R4, R0 
    /*0000e088*/ B           VpssIoctl_xdab4
    VpssIoctl_xe08c:
    /*0000e08c*/ MOV         R0, R7 
    /*0000e090*/ BL          0x000000000000E090          @ VPSS_DestroyGrp [R_ARM_CALL: .text+0x35e8] 
    /*0000e094*/ MOV         R4, R0 
    /*0000e098*/ B           VpssIoctl_xdab4
    VpssIoctl_xe09c:
    /*0000e09c*/ MOV         R1, R5 
    /*0000e0a0*/ MOV         R0, R7 
    /*0000e0a4*/ BL          0x000000000000E0A4          @ VPSS_DisableChn [R_ARM_CALL: .text+0x4b04] 
    /*0000e0a8*/ MOV         R4, R0 
    /*0000e0ac*/ B           VpssIoctl_xdab4
    VpssIoctl_xe0b0:
    /*0000e0b0*/ MOV         R1, R8 
    /*0000e0b4*/ MOV         R0, R7 
    /*0000e0b8*/ BL          0x000000000000E0B8          @ VPSS_GetGrpCropCfg [R_ARM_CALL: .text+0x55b4] 
    /*0000e0bc*/ MOV         R4, R0 
    /*0000e0c0*/ B           VpssIoctl_xdab4
    VpssIoctl_xe0c4:
    /*0000e0c4*/ MOV         R1, R8 
    /*0000e0c8*/ MOV         R0, R7 
    /*0000e0cc*/ BL          0x000000000000E0CC          @ VPSS_SetGrpFrameInterruptAttr [R_ARM_CALL: .text+0x8748] 
    /*0000e0d0*/ MOV         R4, R0 
    /*0000e0d4*/ B           VpssIoctl_xdab4
    VpssIoctl_xe0d8:
    /*0000e0d8*/ MOV         R0, R7 
    /*0000e0dc*/ BL          0x000000000000E0DC          @ VPSS_ResetGrp [R_ARM_CALL: .text+0x3a68] 
    /*0000e0e0*/ MOV         R4, R0 
    /*0000e0e4*/ B           VpssIoctl_xdab4
    VpssIoctl_xe0e8:
    /*0000e0e8*/ MOV         R0, R7 
    /*0000e0ec*/ BL          0x000000000000E0EC          @ VPSS_EnableUserFrameRateCtrl [R_ARM_CALL: .text+0x8930] 
    /*0000e0f0*/ MOV         R4, R0 
    /*0000e0f4*/ B           VpssIoctl_xdab4
    VpssIoctl_xe0f8:
    /*0000e0f8*/ MOV         R2, R8 
    /*0000e0fc*/ MOV         R1, R5 
    /*0000e100*/ MOV         R0, R7 
    /*0000e104*/ BL          0x000000000000E104          @ VPSS_SetChnCropCfg [R_ARM_CALL: .text+0x569c] 
    /*0000e108*/ MOV         R4, R0 
    /*0000e10c*/ B           VpssIoctl_xdab4
    VpssIoctl_xe110:
    /*0000e110*/ MOV         R1, R8 
    /*0000e114*/ MOV         R0, R7 
    /*0000e118*/ BL          0x000000000000E118          @ VPSS_SetGrpCropCfg [R_ARM_CALL: .text+0x5464] 
    /*0000e11c*/ MOV         R4, R0 
    /*0000e120*/ B           VpssIoctl_xdab4
    VpssIoctl_xe124:
    /*0000e124*/ MOV         R2, R8 
    /*0000e128*/ MOV         R1, R5 
    /*0000e12c*/ MOV         R0, R7 
    /*0000e130*/ BL          0x000000000000E130          @ VPSS_GetChnLDCAttr [R_ARM_CALL: .text+0x6694] 
    /*0000e134*/ MOV         R4, R0 
    /*0000e138*/ B           VpssIoctl_xdab4
    VpssIoctl_xe13c:
    /*0000e13c*/ MOV         R2, R8 
    /*0000e140*/ MOV         R1, R5 
    /*0000e144*/ MOV         R0, R7 
    /*0000e148*/ BL          0x000000000000E148          @ VPSS_GetExtChnFisheyeAttr [R_ARM_CALL: .text+0x82c0] 
    /*0000e14c*/ MOV         R4, R0 
    /*0000e150*/ B           VpssIoctl_xdab4
    VpssIoctl_xe154:
    /*0000e154*/ MOV         R2, R8 
    /*0000e158*/ MOV         R1, R5 
    /*0000e15c*/ MOV         R0, R7 
    /*0000e160*/ BL          0x000000000000E160          @ VPSS_SetChnLDCAttr [R_ARM_CALL: .text+0x643c] 
    /*0000e164*/ MOV         R4, R0 
    /*0000e168*/ B           VpssIoctl_xdab4
    VpssIoctl_xe16c:
    /*0000e16c*/ MOV         R0, R7 
    /*0000e170*/ LDR         R3, [R8, #340]              @ 0x154 
    /*0000e174*/ MOV         R2, R8 
    /*0000e178*/ LDR         R1, [R8, #336]              @ 0x150 
    /*0000e17c*/ BL          0x000000000000E17C          @ VPSS_UserSendFrameTimeout [R_ARM_CALL: .text+0x9790] 
    /*0000e180*/ MOV         R4, R0 
    /*0000e184*/ B           VpssIoctl_xdab4
    VpssIoctl_xe188:
    /*0000e188*/ MOV         R2, R8 
    /*0000e18c*/ MOV         R1, R5 
    /*0000e190*/ MOV         R0, R7 
    /*0000e194*/ BL          0x000000000000E194          @ VPSS_GetChnAttr [R_ARM_CALL: .text+0x52f8] 
    /*0000e198*/ MOV         R4, R0 
    /*0000e19c*/ B           VpssIoctl_xdab4
    VpssIoctl_xe1a0:
    /*0000e1a0*/ MOV         R2, R8 
    /*0000e1a4*/ MOV         R1, R5 
    /*0000e1a8*/ MOV         R0, R7 
    /*0000e1ac*/ BL          0x000000000000E1AC          @ VPSS_GetExtChnAttr [R_ARM_CALL: .text+0x7c10] 
    /*0000e1b0*/ MOV         R4, R0 
    /*0000e1b4*/ B           VpssIoctl_xdab4
    VpssIoctl_xe1b8:
    /*0000e1b8*/ MOVW        R3, #20548                  @ 0x5044 
    /*0000e1bc*/ MOVT        R3, #17496                  @ 0x4458 
    /*0000e1c0*/ CMP         R6, R3 
    /*0000e1c4*/ BNE         VpssIoctl_xe218
    VpssIoctl_xe1c8:
    /*0000e1c8*/ MOVW        R4, #32776                  @ 0x8008 
    /*0000e1cc*/ MOVT        R4, #40967                  @ 0xa007 
    /*0000e1d0*/ B           VpssIoctl_xdab4
    VpssIoctl_xe1d4:
    /*0000e1d4*/ MOV         R0, R7 
    /*0000e1d8*/ BL          0x000000000000E1D8          @ VPSS_StartGrp [R_ARM_CALL: .text+0x73dc] 
    /*0000e1dc*/ MOV         R4, R0 
    /*0000e1e0*/ B           VpssIoctl_xdab4
    VpssIoctl_xe1e4:
    /*0000e1e4*/ LDM         R8, {R0, R1} 
    /*0000e1e8*/ ADD         R3, SP, #24 
    /*0000e1ec*/ STM         R3, {R0, R1} 
    /*0000e1f0*/ MOV         R1, R5 
    /*0000e1f4*/ MOV         R0, R7 
    /*0000e1f8*/ LDM         R3, {R2, R3} 
    /*0000e1fc*/ BL          0x000000000000E1FC          @ VPSS_SetChnLowDelayAttr [R_ARM_CALL: .text+0x6cf8] 
    /*0000e200*/ MOV         R4, R0 
    /*0000e204*/ B           VpssIoctl_xdab4
    VpssIoctl_xe208:
    /*0000e208*/ MOVW        R3, #20521                  @ 0x5029 
    /*0000e20c*/ MOVT        R3, #16388                  @ 0x4004 
    /*0000e210*/ CMP         R6, R3 
    /*0000e214*/ BEQ         VpssIoctl_xe1c8
    VpssIoctl_xe218:
    /*0000e218*/ MOVW        R3, #761                    @ 0x2f9 
    /*0000e21c*/ STR         R6, [SP, #4] 
    /*0000e220*/ STR         R3, [SP] 
    /*0000e224*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b20] 
    /*0000e228*/ LDR         R3, [PC, #420]              @ 0x000000000000e3d4 
    /*0000e22c*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b20] 
    /*0000e230*/ MOV         R1, #7 
    /*0000e234*/ MOV         R0, #3 
    /*0000e238*/ BL          0x000000000000E238          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e23c*/ MVN         R4, #0 
    /*0000e240*/ B           VpssIoctl_xdab4
    VpssIoctl_xe244:
    /*0000e244*/ MOV         R2, R8 
    /*0000e248*/ MOV         R1, R5 
    /*0000e24c*/ MOV         R0, R7 
    /*0000e250*/ BL          0x000000000000E250          @ VPSS_SetExtChnFisheyeAttr [R_ARM_CALL: .text+0x7f90] 
    /*0000e254*/ MOV         R4, R0 
    /*0000e258*/ B           VpssIoctl_xdab4
    VpssIoctl_xe25c:
    /*0000e25c*/ MOV         R2, R8 
    /*0000e260*/ MOV         R1, R5 
    /*0000e264*/ MOV         R0, R7 
    /*0000e268*/ BL          0x000000000000E268          @ VPSS_SetChnAttr [R_ARM_CALL: .text+0x5054] 
    /*0000e26c*/ MOV         R4, R0 
    /*0000e270*/ B           VpssIoctl_xdab4
    VpssIoctl_xe274:
    /*0000e274*/ MOV         R2, R8 
    /*0000e278*/ MOV         R1, R5 
    /*0000e27c*/ MOV         R0, R7 
    /*0000e280*/ BL          0x000000000000E280          @ VPSS_SetExtChnAttr [R_ARM_CALL: .text+0x77c0] 
    /*0000e284*/ MOV         R4, R0 
    /*0000e288*/ B           VpssIoctl_xdab4
    VpssIoctl_xe28c:
    /*0000e28c*/ MOV         R2, R8 
    /*0000e290*/ MOV         R1, R5 
    /*0000e294*/ MOV         R0, R7 
    /*0000e298*/ BL          0x000000000000E298          @ VPSS_GetChnSpreadAttr [R_ARM_CALL: .text+0x6a50] 
    /*0000e29c*/ MOV         R4, R0 
    /*0000e2a0*/ B           VpssIoctl_xdab4
    VpssIoctl_xe2a4:
    /*0000e2a4*/ MOV         R2, R8 
    /*0000e2a8*/ MOV         R1, R5 
    /*0000e2ac*/ MOV         R0, R7 
    /*0000e2b0*/ BL          0x000000000000E2B0          @ VPSS_GetChnAlign [R_ARM_CALL: .text+0x8be0] 
    /*0000e2b4*/ MOV         R4, R0 
    /*0000e2b8*/ B           VpssIoctl_xdab4
    VpssIoctl_xe2bc:
    /*0000e2bc*/ MOV         R2, R8 
    /*0000e2c0*/ MOV         R1, R5 
    /*0000e2c4*/ MOV         R0, R7 
    /*0000e2c8*/ BL          0x000000000000E2C8          @ VPSS_GetChnCropCfg [R_ARM_CALL: .text+0x591c] 
    /*0000e2cc*/ MOV         R4, R0 
    /*0000e2d0*/ B           VpssIoctl_xdab4
    VpssIoctl_xe2d4:
    /*0000e2d4*/ LDR         R2, [R8] 
    /*0000e2d8*/ MOV         R1, R5 
    /*0000e2dc*/ MOV         R0, R7 
    /*0000e2e0*/ BL          0x000000000000E2E0          @ VPSS_AttachVbPool [R_ARM_CALL: .text+0x70c0] 
    /*0000e2e4*/ MOV         R4, R0 
    /*0000e2e8*/ B           VpssIoctl_xdab4
    VpssIoctl_xe2ec:
    /*0000e2ec*/ MOVW        R3, #20520                  @ 0x5028 
    /*0000e2f0*/ MOVT        R3, #32780                  @ 0x800c 
    /*0000e2f4*/ CMP         R6, R3 
    /*0000e2f8*/ BNE         VpssIoctl_xe218
    /*0000e2fc*/ B           VpssIoctl_xe1c8
    VpssIoctl_xe300:
    /*0000e300*/ SUB         R1, R4, #1 
    /*0000e304*/ MOV         R2, #1 
    /*0000e308*/ ADD         R1, R9, R1 
    /*0000e30c*/ ADD         R0, SP, #24 
    /*0000e310*/ BL          0x000000000000E310          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0000e314*/ CMP         R0, #0 
    /*0000e318*/ BNE         VpssIoctl_xdfb4
    /*0000e31c*/ LDR         R2, [R8, #4] 
    /*0000e320*/ MOV         R0, R6 
    /*0000e324*/ LDR         R1, [R8, #8] 
    /*0000e328*/ LSL         R2, R2, #4 
    /*0000e32c*/ BL          0x000000000000E32C          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0000e330*/ CMP         R0, #0 
    /*0000e334*/ BNE         VpssIoctl_xe3a0
    /*0000e338*/ LDR         IP, [R8] 
    /*0000e33c*/ MOV         R1, R5 
    /*0000e340*/ LDR         R3, [R8, #12] 
    /*0000e344*/ MOV         R0, R7 
    /*0000e348*/ STR         R6, [R8, #8] 
    /*0000e34c*/ ADD         R2, R8, #4 
    /*0000e350*/ STR         IP, [SP] 
    /*0000e354*/ BL          0x000000000000E354          @ VPSS_GetRegionLumaTimeout [R_ARM_CALL: .text+0x3d88] 
    /*0000e358*/ MOV         R4, R0 
    /*0000e35c*/ B           VpssIoctl_xdab4
    VpssIoctl_xe360:
    /*0000e360*/ STR         R3, [SP, #12] 
    /*0000e364*/ MOV         R1, #64                     @ 0x40 
    /*0000e368*/ MOVW        R3, #349                    @ 0x15d 
    /*0000e36c*/ STR         R1, [SP, #16] 
    /*0000e370*/ STR         R3, [SP] 
    /*0000e374*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2aa8] 
    /*0000e378*/ STR         R5, [SP, #8] 
    /*0000e37c*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2aa8] 
    /*0000e380*/ STR         R7, [SP, #4] 
    /*0000e384*/ MOV         R1, #7 
    /*0000e388*/ LDR         R3, [PC, #68]               @ 0x000000000000e3d4 
    /*0000e38c*/ MOV         R0, #3 
    /*0000e390*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000e394*/ BL          0x000000000000E394          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e398*/ MOVT        R4, #40967                  @ 0xa007 
    /*0000e39c*/ B           VpssIoctl_xdab4
    VpssIoctl_xe3a0:
    /*0000e3a0*/ MOV         R3, #364                    @ 0x16c 
    /*0000e3a4*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2af4] 
    /*0000e3a8*/ STR         R3, [SP] 
    /*0000e3ac*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2af4] 
    /*0000e3b0*/ LDR         R3, [PC, #28]               @ 0x000000000000e3d4 
    /*0000e3b4*/ MOV         R1, #7 
    /*0000e3b8*/ MOV         R0, #3 
    /*0000e3bc*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000e3c0*/ BL          0x000000000000E3C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e3c4*/ MOVT        R4, #40967                  @ 0xa007 
    /*0000e3c8*/ B           VpssIoctl_xdab4
    /*0000e3cc*/ ANDEQ       R0, R0, IP, LSR #21 
    /*0000e3d0*/ ANDEQ       R1, R0, IP, ROR R1 
    /*0000e3d4*/ @           <UNDEFINED> instruction: 0x00000ab8 
FUNC_END VpssIoctl


FUNC_BEGIN Vpss_Freeze
    /*0000e3d8*/ MOV         R0, #0 
    /*0000e3dc*/ BX          LR 
FUNC_END Vpss_Freeze


FUNC_BEGIN Vpss_Restore
    /*0000e3e0*/ MOV         R0, #0 
    /*0000e3e4*/ BX          LR 
FUNC_END Vpss_Restore


FUNC_BEGIN VpssOpen
    /*0000e3e8*/ MOV         R0, #0 
    /*0000e3ec*/ BX          LR 
FUNC_END VpssOpen


FUNC_BEGIN VpssClose
    /*0000e3f0*/ MOV         R0, #0 
    /*0000e3f4*/ BX          LR 
FUNC_END VpssClose


FUNC_BEGIN VPSS_BoolToStr
    /*0000e3f8*/ CMP         R0, #1 
    /*0000e3fc*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b90] 
    /*0000e400*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b94] 
    /*0000e404*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b90] 
    /*0000e408*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b94] 
    /*0000e40c*/ MOVEQ       R0, R2 
    /*0000e410*/ MOVNE       R0, R3 
    /*0000e414*/ BX          LR 
FUNC_END VPSS_BoolToStr


FUNC_BEGIN VPSS_ProcGrpAttr
    /*0000e418*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000e41c*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000e420*/ MOV         R5, R0 
    /*0000e424*/ MOVW        R1, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c10] 
    /*0000e428*/ MOVT        R1, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c10] 
    /*0000e42c*/ STR         R0, [SP, #64]               @ 0x40 
    /*0000e430*/ BL          0x000000000000E430          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e434*/ MOV         R0, R5 
    /*0000e438*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2cbc] 
    /*0000e43c*/ MOVW        R3, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2cc8] 
    /*0000e440*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2cbc] 
    /*0000e444*/ MOVT        R3, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2cc8] 
    /*0000e448*/ STR         R2, [SP, #4] 
    /*0000e44c*/ MOVW        R1, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ca8] 
    /*0000e450*/ STR         R3, [SP] 
    /*0000e454*/ MOVT        R1, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ca8] 
    /*0000e458*/ MOVW        R3, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c80] 
    /*0000e45c*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c98] 
    /*0000e460*/ MOVT        R3, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c80] 
    /*0000e464*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c98] 
    /*0000e468*/ BL          0x000000000000E468          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e46c*/ MOVW        R1, #0                      @ bHdrSupport [R_ARM_MOVW_ABS_NC: .bss+0x6a5c] 
    /*0000e470*/ MOVW        IP, #0                      @ vpss_split_node_num [R_ARM_MOVW_ABS_NC: .data+0xf4] 
    /*0000e474*/ MOVT        R1, #0                      @ bHdrSupport [R_ARM_MOVT_ABS: .bss+0x6a5c] 
    /*0000e478*/ MOVT        IP, #0                      @ vpss_split_node_num [R_ARM_MOVT_ABS: .data+0xf4] 
    /*0000e47c*/ MOVW        R3, #0                      @ bOneBufferforLowDelay [R_ARM_MOVW_ABS_NC: .bss+0x1174] 
    /*0000e480*/ LDR         LR, [R1] 
    /*0000e484*/ MOVW        R2, #0                      @ vpss_vb_source [R_ARM_MOVW_ABS_NC: .bss+0x678c] 
    /*0000e488*/ LDR         IP, [IP] 
    /*0000e48c*/ MOVT        R3, #0                      @ bOneBufferforLowDelay [R_ARM_MOVT_ABS: .bss+0x1174] 
    /*0000e490*/ MOVT        R2, #0                      @ vpss_vb_source [R_ARM_MOVT_ABS: .bss+0x678c] 
    /*0000e494*/ MOV         R0, R5 
    /*0000e498*/ LDR         R3, [R3] 
    /*0000e49c*/ MOVW        R1, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2cdc] 
    /*0000e4a0*/ LDR         R2, [R2] 
    /*0000e4a4*/ MOVT        R1, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2cdc] 
    /*0000e4a8*/ STR         LR, [SP, #4] 
    /*0000e4ac*/ MOVW        R8, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b90] 
    /*0000e4b0*/ STR         IP, [SP] 
    /*0000e4b4*/ MOVW        R7, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b94] 
    /*0000e4b8*/ BL          0x000000000000E4B8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e4bc*/ MOV         R0, R5 
    /*0000e4c0*/ MOVW        R1, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2cf0] 
    /*0000e4c4*/ MOVT        R1, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2cf0] 
    /*0000e4c8*/ BL          0x000000000000E4C8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e4cc*/ MOV         R0, R5 
    /*0000e4d0*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2da0] 
    /*0000e4d4*/ MOVW        R3, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2dac] 
    /*0000e4d8*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2da0] 
    /*0000e4dc*/ MOVT        R3, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2dac] 
    /*0000e4e0*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000e4e4*/ MOVW        R1, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d70] 
    /*0000e4e8*/ STR         R3, [SP, #32] 
    /*0000e4ec*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2db4] 
    /*0000e4f0*/ MOVW        R3, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2dbc] 
    /*0000e4f4*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2db4] 
    /*0000e4f8*/ MOVT        R3, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2dbc] 
    /*0000e4fc*/ STR         R2, [SP, #28] 
    /*0000e500*/ STR         R3, [SP, #24] 
    /*0000e504*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2dc4] 
    /*0000e508*/ MOVW        R3, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2dd0] 
    /*0000e50c*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2dc4] 
    /*0000e510*/ MOVT        R3, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2dd0] 
    /*0000e514*/ STR         R2, [SP, #20] 
    /*0000e518*/ STR         R3, [SP, #16] 
    /*0000e51c*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ddc] 
    /*0000e520*/ MOVW        R3, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2de8] 
    /*0000e524*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ddc] 
    /*0000e528*/ MOVT        R3, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2de8] 
    /*0000e52c*/ STR         R2, [SP, #12] 
    /*0000e530*/ STR         R3, [SP, #8] 
    /*0000e534*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2df0] 
    /*0000e538*/ MOVW        R3, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2df8] 
    /*0000e53c*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2df0] 
    /*0000e540*/ MOVT        R3, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2df8] 
    /*0000e544*/ STR         R2, [SP, #4] 
    /*0000e548*/ STR         R3, [SP] 
    /*0000e54c*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*0000e550*/ MOVW        R3, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d60] 
    /*0000e554*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*0000e558*/ MOVT        R3, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d60] 
    /*0000e55c*/ MOVT        R1, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d70] 
    /*0000e560*/ BL          0x000000000000E560          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e564*/ LDR         R3, [PC, #548]              @ 0x000000000000e790 
    /*0000e568*/ LDR         R4, [PC, #548]              @ 0x000000000000e794 
    /*0000e56c*/ MOVT        R8, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b90] 
    /*0000e570*/ LDR         R9, [PC, #544]              @ 0x000000000000e798 
    /*0000e574*/ MOVT        R7, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b94] 
    /*0000e578*/ MOV         R5, R3 
    /*0000e57c*/ MOV         R6, #0 
    /*0000e580*/ MOVW        R3, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e00] 
    /*0000e584*/ MOVT        R3, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e00] 
    /*0000e588*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000e58c*/ B           VPSS_ProcGrpAttr_xe6f4
    VPSS_ProcGrpAttr_xe590:
    /*0000e590*/ CMP         R0, #26 
    /*0000e594*/ BEQ         VPSS_ProcGrpAttr_xe738
    /*0000e598*/ CMP         R0, #28 
    /*0000e59c*/ BEQ         VPSS_ProcGrpAttr_xe744
    /*0000e5a0*/ CMP         R0, #29 
    /*0000e5a4*/ BEQ         VPSS_ProcGrpAttr_xe774
    /*0000e5a8*/ MOVW        LR, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bbc] 
    /*0000e5ac*/ CMP         R0, #39                     @ 0x27 
    /*0000e5b0*/ MOVT        LR, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bbc] 
    /*0000e5b4*/ MOVW        IP, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd0] 
    /*0000e5b8*/ MOVT        IP, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd0] 
    /*0000e5bc*/ MOVEQ       IP, LR 
    VPSS_ProcGrpAttr_xe5c0:
    /*0000e5c0*/ LDR         LR, [R2, #16] 
    /*0000e5c4*/ ADD         R1, R1, #28672              @ 0x7000 
    /*0000e5c8*/ LDR         SL, [R2, #28] 
    /*0000e5cc*/ CMP         LR, #4 
    /*0000e5d0*/ LDR         R1, [R1, #3692]             @ 0xe6c 
    /*0000e5d4*/ MOVWLS      R0, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .rodata+0xaa0] 
    /*0000e5d8*/ MOVTLS      R0, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .rodata+0xaa0] 
    /*0000e5dc*/ ADDLS       R0, R0, LR, LSL #2 
    /*0000e5e0*/ MOVWHI      LR, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd8] 
    /*0000e5e4*/ MOVTHI      LR, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd8] 
    /*0000e5e8*/ LDRLS       LR, [R0, #36]               @ 0x24 
    /*0000e5ec*/ CMP         SL, #1 
    /*0000e5f0*/ LDR         R0, [R2, #32] 
    /*0000e5f4*/ MOVEQ       SL, R8 
    /*0000e5f8*/ MOVNE       SL, R7 
    /*0000e5fc*/ CMP         R1, #1 
    /*0000e600*/ STR         SL, [SP, #60]               @ 0x3c 
    /*0000e604*/ LDR         SL, [R2, #20] 
    /*0000e608*/ MOVEQ       R1, R8 
    /*0000e60c*/ MOVNE       R1, R7 
    /*0000e610*/ STR         R1, [SP, #44]               @ 0x2c 
    /*0000e614*/ CMP         R0, #0 
    /*0000e618*/ LDR         R1, [R2, #24] 
    /*0000e61c*/ STR         SL, [SP, #52]               @ 0x34 
    /*0000e620*/ STR         R1, [SP, #56]               @ 0x38 
    /*0000e624*/ MOVWEQ      R1, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bdc] 
    /*0000e628*/ MOVTEQ      R1, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bdc] 
    /*0000e62c*/ BEQ         VPSS_ProcGrpAttr_xe658
    /*0000e630*/ CMP         R0, #1 
    /*0000e634*/ BEQ         VPSS_ProcGrpAttr_xe750
    /*0000e638*/ CMP         R0, #2 
    /*0000e63c*/ BEQ         VPSS_ProcGrpAttr_xe75c
    /*0000e640*/ MOVW        SL, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bf8] 
    /*0000e644*/ CMP         R0, #3 
    /*0000e648*/ MOVT        SL, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bf8] 
    /*0000e64c*/ MOVW        R1, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd0] 
    /*0000e650*/ MOVT        R1, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd0] 
    /*0000e654*/ MOVEQ       R1, SL 
    VPSS_ProcGrpAttr_xe658:
    /*0000e658*/ LDR         R0, [R2, #36]               @ 0x24 
    /*0000e65c*/ LDR         SL, [R2, #40]               @ 0x28 
    /*0000e660*/ CMP         R0, #0 
    /*0000e664*/ MOVNE       R0, R8 
    /*0000e668*/ MOVEQ       R0, R7 
    /*0000e66c*/ CMP         SL, #0 
    /*0000e670*/ MOVWEQ      R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c04] 
    /*0000e674*/ MOVTEQ      R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c04] 
    /*0000e678*/ BEQ         VPSS_ProcGrpAttr_xe694
    /*0000e67c*/ MOVW        FP, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd0] 
    /*0000e680*/ CMP         SL, #1 
    /*0000e684*/ MOVT        FP, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd0] 
    /*0000e688*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c0c] 
    /*0000e68c*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c0c] 
    /*0000e690*/ MOVNE       R2, FP 
    VPSS_ProcGrpAttr_xe694:
    /*0000e694*/ LDR         SL, [SP, #44]               @ 0x2c 
    /*0000e698*/ STR         R0, [SP, #32] 
    /*0000e69c*/ STMIB       SP, {IP, LR} 
    /*0000e6a0*/ STR         SL, [SP, #20] 
    /*0000e6a4*/ LDR         SL, [SP, #56]               @ 0x38 
    /*0000e6a8*/ LDR         R0, [SP, #60]               @ 0x3c 
    /*0000e6ac*/ LDR         IP, [SP, #48]               @ 0x30 
    /*0000e6b0*/ STR         SL, [SP, #16] 
    /*0000e6b4*/ LDR         SL, [SP, #52]               @ 0x34 
    /*0000e6b8*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000e6bc*/ MOV         R2, R6 
    /*0000e6c0*/ STR         R1, [SP, #28] 
    /*0000e6c4*/ STR         R0, [SP, #24] 
    /*0000e6c8*/ LDR         R1, [SP, #68]               @ 0x44 
    /*0000e6cc*/ LDR         R0, [SP, #64]               @ 0x40 
    /*0000e6d0*/ STR         SL, [SP, #12] 
    /*0000e6d4*/ STR         IP, [SP] 
    /*0000e6d8*/ BL          0x000000000000E6D8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VPSS_ProcGrpAttr_xe6dc:
    /*0000e6dc*/ MOV         R0, R4 
    /*0000e6e0*/ ADD         R6, R6, #1 
    /*0000e6e4*/ BL          0x000000000000E6E4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e6e8*/ CMP         R6, #16 
    /*0000e6ec*/ ADD         R4, R4, #92                 @ 0x5c 
    /*0000e6f0*/ BEQ         VPSS_ProcGrpAttr_xe768
    VPSS_ProcGrpAttr_xe6f4:
    /*0000e6f4*/ MOV         R0, R4 
    /*0000e6f8*/ BL          0x000000000000E6F8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000e6fc*/ CMP         R0, #0 
    /*0000e700*/ BNE         VPSS_ProcGrpAttr_xe780
    /*0000e704*/ LDR         R2, [R9, #4]! 
    /*0000e708*/ LDR         R1, [R5, #4]! 
    /*0000e70c*/ CMP         R2, #0 
    /*0000e710*/ BEQ         VPSS_ProcGrpAttr_xe6dc
    /*0000e714*/ LDR         R0, [R2, #12] 
    /*0000e718*/ LDR         IP, [R2, #8] 
    /*0000e71c*/ CMP         R0, #25 
    /*0000e720*/ LDR         R3, [R2, #4] 
    /*0000e724*/ STR         IP, [SP, #48]               @ 0x30 
    /*0000e728*/ BNE         VPSS_ProcGrpAttr_xe590
    /*0000e72c*/ MOVW        IP, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b98] 
    /*0000e730*/ MOVT        IP, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b98] 
    /*0000e734*/ B           VPSS_ProcGrpAttr_xe5c0
    VPSS_ProcGrpAttr_xe738:
    /*0000e738*/ MOVW        IP, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ba4] 
    /*0000e73c*/ MOVT        IP, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ba4] 
    /*0000e740*/ B           VPSS_ProcGrpAttr_xe5c0
    VPSS_ProcGrpAttr_xe744:
    /*0000e744*/ MOVW        IP, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bb0] 
    /*0000e748*/ MOVT        IP, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bb0] 
    /*0000e74c*/ B           VPSS_ProcGrpAttr_xe5c0
    VPSS_ProcGrpAttr_xe750:
    /*0000e750*/ MOVW        R1, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2be4] 
    /*0000e754*/ MOVT        R1, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2be4] 
    /*0000e758*/ B           VPSS_ProcGrpAttr_xe658
    VPSS_ProcGrpAttr_xe75c:
    /*0000e75c*/ MOVW        R1, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bec] 
    /*0000e760*/ MOVT        R1, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bec] 
    /*0000e764*/ B           VPSS_ProcGrpAttr_xe658
    VPSS_ProcGrpAttr_xe768:
    /*0000e768*/ MOV         R0, #0 
    /*0000e76c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000e770*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcGrpAttr_xe774:
    /*0000e774*/ MOVW        IP, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bc4] 
    /*0000e778*/ MOVT        IP, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bc4] 
    /*0000e77c*/ B           VPSS_ProcGrpAttr_xe5c0
    VPSS_ProcGrpAttr_xe780:
    /*0000e780*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000e784*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000e788*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000e78c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000e790*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
    /*0000e794*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000e798*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstDevCtx [R_ARM_ABS32: .bss+0x3560] 
FUNC_END VPSS_ProcGrpAttr


FUNC_BEGIN VPSS_ProcChnAttr
    /*0000e79c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000e7a0*/ SUB         SP, SP, #108                @ 0x6c 
    /*0000e7a4*/ MOVW        R1, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e50] 
    /*0000e7a8*/ MOVT        R1, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e50] 
    /*0000e7ac*/ MOV         R4, R0 
    /*0000e7b0*/ STR         R0, [SP, #92]               @ 0x5c 
    /*0000e7b4*/ BL          0x000000000000E7B4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e7b8*/ LDR         IP, [PC, #724]              @ 0x000000000000ea94 
    /*0000e7bc*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f00] 
    /*0000e7c0*/ MOVW        R3, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f08] 
    /*0000e7c4*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f00] 
    /*0000e7c8*/ MOVT        R3, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f08] 
    /*0000e7cc*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000e7d0*/ MOV         R0, R4 
    /*0000e7d4*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000e7d8*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f10] 
    /*0000e7dc*/ MOVW        R3, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f18] 
    /*0000e7e0*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f10] 
    /*0000e7e4*/ MOVT        R3, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f18] 
    /*0000e7e8*/ STR         R2, [SP, #40]               @ 0x28 
    /*0000e7ec*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000e7f0*/ MOVW        R2, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f20] 
    /*0000e7f4*/ MOVW        R3, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f28] 
    /*0000e7f8*/ MOVT        R2, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f20] 
    /*0000e7fc*/ MOVT        R3, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f28] 
    /*0000e800*/ STR         R2, [SP, #32] 
    /*0000e804*/ STR         R3, [SP, #28] 
    /*0000e808*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f30] 
    /*0000e80c*/ MOVW        R3, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2dd0] 
    /*0000e810*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f30] 
    /*0000e814*/ MOVT        R3, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2dd0] 
    /*0000e818*/ STR         R2, [SP, #24] 
    /*0000e81c*/ STR         R3, [SP, #20] 
    /*0000e820*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ddc] 
    /*0000e824*/ MOVW        R3, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f38] 
    /*0000e828*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ddc] 
    /*0000e82c*/ MOVT        R3, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f38] 
    /*0000e830*/ STR         R2, [SP, #16] 
    /*0000e834*/ STR         R3, [SP, #12] 
    /*0000e838*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f40] 
    /*0000e83c*/ MOVW        R3, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f4c] 
    /*0000e840*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f40] 
    /*0000e844*/ MOVT        R3, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f4c] 
    /*0000e848*/ STR         R2, [SP, #8] 
    /*0000e84c*/ STR         R3, [SP, #4] 
    /*0000e850*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f54] 
    /*0000e854*/ MOVW        R3, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ec0] 
    /*0000e858*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f54] 
    /*0000e85c*/ MOVT        R3, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ec0] 
    /*0000e860*/ STR         R2, [SP] 
    /*0000e864*/ MOVW        R1, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ecc] 
    /*0000e868*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*0000e86c*/ MOVT        R1, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ecc] 
    /*0000e870*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*0000e874*/ STR         IP, [SP, #56]               @ 0x38 
    /*0000e878*/ BL          0x000000000000E878          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e87c*/ MOV         R0, R4 
    /*0000e880*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0000e884*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*0000e888*/ LDR         R9, [PC, #520]              @ 0x000000000000ea98 
    /*0000e88c*/ BL          0x000000000000E88C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e890*/ LDR         R3, [PC, #516]              @ 0x000000000000ea9c 
    /*0000e894*/ MOVW        FP, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b94] 
    /*0000e898*/ MOVT        FP, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b94] 
    /*0000e89c*/ MOV         SL, #0 
    /*0000e8a0*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e38] 
    /*0000e8a4*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0000e8a8*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b90] 
    /*0000e8ac*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b90] 
    /*0000e8b0*/ STR         R3, [SP, #96]               @ 0x60 
    /*0000e8b4*/ MOVW        R3, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e30] 
    /*0000e8b8*/ MOVT        R3, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e30] 
    /*0000e8bc*/ STR         R3, [SP, #100]              @ 0x64 
    /*0000e8c0*/ MOV         R3, R9 
    /*0000e8c4*/ MOV         R7, FP 
    /*0000e8c8*/ MOV         R9, SL 
    /*0000e8cc*/ MOV         SL, R3 
    /*0000e8d0*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e38] 
    /*0000e8d4*/ STR         R2, [SP, #84]               @ 0x54 
    VPSS_ProcChnAttr_xe8d8:
    /*0000e8d8*/ MOV         R0, SL 
    /*0000e8dc*/ BL          0x000000000000E8DC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000e8e0*/ SUBS        R6, R0, #0 
    /*0000e8e4*/ BNE         VPSS_ProcChnAttr_xea84
    /*0000e8e8*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0000e8ec*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*0000e8f0*/ LDR         R4, [R3, #4]! 
    /*0000e8f4*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000e8f8*/ LDR         R3, [R2, #4]! 
    /*0000e8fc*/ CMP         R4, #0 
    /*0000e900*/ CMPNE       R3, #0 
    /*0000e904*/ STR         R2, [SP, #60]               @ 0x3c 
    /*0000e908*/ BEQ         VPSS_ProcChnAttr_xea58
    /*0000e90c*/ ADD         R8, R3, #28416              @ 0x6f00 
    /*0000e910*/ MOV         R5, R4 
    /*0000e914*/ ADD         R8, R8, #124                @ 0x7c 
    /*0000e918*/ MOV         FP, R3 
    /*0000e91c*/ STR         SL, [SP, #88]               @ 0x58 
    VPSS_ProcChnAttr_xe920:
    /*0000e920*/ LDR         R3, [R8], #4 
    /*0000e924*/ CMP         R3, #0 
    /*0000e928*/ BEQ         VPSS_ProcChnAttr_xea3c
    /*0000e92c*/ LDR         LR, [SP, #96]               @ 0x60 
    /*0000e930*/ CMP         R3, #1 
    /*0000e934*/ LDR         R2, [R5, #44]               @ 0x2c 
    /*0000e938*/ MOVW        IP, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e40] 
    /*0000e93c*/ LDR         SL, [SP, #84]               @ 0x54 
    /*0000e940*/ MOVT        IP, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e40] 
    /*0000e944*/ MOV         R1, LR 
    /*0000e948*/ LDR         R3, [R5, #80]               @ 0x50 
    /*0000e94c*/ MOVNE       R1, R7 
    /*0000e950*/ CMP         R2, #0 
    /*0000e954*/ STR         R1, [SP, #80]               @ 0x50 
    /*0000e958*/ LDR         R1, [SP, #100]              @ 0x64 
    /*0000e95c*/ MOVNE       R1, SL 
    /*0000e960*/ LDR         R0, [R5, #84]               @ 0x54 
    /*0000e964*/ CMP         R3, #1 
    /*0000e968*/ LDR         R2, [FP, #3368]             @ 0xd28 
    /*0000e96c*/ MOVW        R3, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e48] 
    /*0000e970*/ STR         R1, [SP, #64]               @ 0x40 
    /*0000e974*/ MOV         R1, LR 
    /*0000e978*/ MOVNE       LR, R7 
    /*0000e97c*/ CMP         R0, #1 
    /*0000e980*/ STR         LR, [SP, #68]               @ 0x44 
    /*0000e984*/ MOV         LR, R1 
    /*0000e988*/ LDR         R1, [R5, #88]               @ 0x58 
    /*0000e98c*/ MOVNE       LR, R7 
    /*0000e990*/ CMP         R2, #1 
    /*0000e994*/ STR         LR, [SP, #72]               @ 0x48 
    /*0000e998*/ MOVT        R3, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e48] 
    /*0000e99c*/ LDR         LR, [R5, #72]               @ 0x48 
    /*0000e9a0*/ LDR         SL, [R5, #76]               @ 0x4c 
    /*0000e9a4*/ STR         R1, [SP, #76]               @ 0x4c 
    /*0000e9a8*/ BEQ         VPSS_ProcChnAttr_xea7c
    /*0000e9ac*/ CMP         R2, #2 
    /*0000e9b0*/ MOVNE       IP, R3 
    VPSS_ProcChnAttr_xe9b4:
    /*0000e9b4*/ LDR         R2, [R4, #876]              @ 0x36c 
    /*0000e9b8*/ MOVW        R1, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f60] 
    /*0000e9bc*/ MOV         R3, R6 
    /*0000e9c0*/ MOVT        R1, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f60] 
    /*0000e9c4*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000e9c8*/ MOV         R2, R9 
    /*0000e9cc*/ LDR         R0, [R4, #860]              @ 0x35c 
    /*0000e9d0*/ STR         R0, [SP, #44]               @ 0x2c 
    /*0000e9d4*/ LDR         R0, [R4, #856]              @ 0x358 
    /*0000e9d8*/ STR         R0, [SP, #40]               @ 0x28 
    /*0000e9dc*/ LDR         R0, [R4, #852]              @ 0x354 
    /*0000e9e0*/ STR         R0, [SP, #36]               @ 0x24 
    /*0000e9e4*/ LDR         R0, [R4, #848]              @ 0x350 
    /*0000e9e8*/ STR         LR, [SP, #16] 
    /*0000e9ec*/ LDR         LR, [SP, #68]               @ 0x44 
    /*0000e9f0*/ STR         R0, [SP, #32] 
    /*0000e9f4*/ STR         SL, [SP, #20] 
    /*0000e9f8*/ STR         LR, [SP, #8] 
    /*0000e9fc*/ LDR         LR, [SP, #64]               @ 0x40 
    /*0000ea00*/ LDR         R0, [SP, #72]               @ 0x48 
    /*0000ea04*/ LDR         SL, [SP, #92]               @ 0x5c 
    /*0000ea08*/ STR         LR, [SP, #4] 
    /*0000ea0c*/ STR         IP, [SP, #28] 
    /*0000ea10*/ LDR         LR, [SP, #80]               @ 0x50 
    /*0000ea14*/ LDR         IP, [SP, #76]               @ 0x4c 
    /*0000ea18*/ STR         R0, [SP, #12] 
    /*0000ea1c*/ MOV         R0, SL 
    /*0000ea20*/ STR         LR, [SP] 
    /*0000ea24*/ STR         IP, [SP, #24] 
    /*0000ea28*/ BL          0x000000000000EA28          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ea2c*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0000ea30*/ MOV         R0, SL 
    /*0000ea34*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*0000ea38*/ BL          0x000000000000EA38          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VPSS_ProcChnAttr_xea3c:
    /*0000ea3c*/ ADD         R6, R6, #1 
    /*0000ea40*/ ADD         R4, R4, #44                 @ 0x2c 
    /*0000ea44*/ CMP         R6, #3 
    /*0000ea48*/ ADD         R5, R5, #72                 @ 0x48 
    /*0000ea4c*/ ADD         FP, FP, #776                @ 0x308 
    /*0000ea50*/ BNE         VPSS_ProcChnAttr_xe920
    /*0000ea54*/ LDR         SL, [SP, #88]               @ 0x58 
    VPSS_ProcChnAttr_xea58:
    /*0000ea58*/ MOV         R0, SL 
    /*0000ea5c*/ ADD         R9, R9, #1 
    /*0000ea60*/ BL          0x000000000000EA60          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ea64*/ CMP         R9, #16 
    /*0000ea68*/ ADD         SL, SL, #92                 @ 0x5c 
    /*0000ea6c*/ BNE         VPSS_ProcChnAttr_xe8d8
    /*0000ea70*/ MOV         R0, #0 
    /*0000ea74*/ ADD         SP, SP, #108                @ 0x6c 
    /*0000ea78*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcChnAttr_xea7c:
    /*0000ea7c*/ LDR         IP, [SP, #84]               @ 0x54 
    /*0000ea80*/ B           VPSS_ProcChnAttr_xe9b4
    VPSS_ProcChnAttr_xea84:
    /*0000ea84*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000ea88*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000ea8c*/ ADD         SP, SP, #108                @ 0x6c 
    /*0000ea90*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000ea94*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstDevCtx [R_ARM_ABS32: .bss+0x3560] 
    /*0000ea98*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000ea9c*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
FUNC_END VPSS_ProcChnAttr


FUNC_BEGIN VPSS_ProcExtChnAttr
    /*0000eaa0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000eaa4*/ SUB         SP, SP, #52                 @ 0x34 
    /*0000eaa8*/ MOV         R9, R0 
    /*0000eaac*/ BL          0x000000000000EAAC          @ VPSS_DRV_IsSupportExtChn [R_ARM_CALL: .text+0x20220] 
    /*0000eab0*/ CMP         R0, #0 
    /*0000eab4*/ BNE         VPSS_ProcExtChnAttr_xeac4
    VPSS_ProcExtChnAttr_xeab8:
    /*0000eab8*/ MOV         R0, #0 
    /*0000eabc*/ ADD         SP, SP, #52                 @ 0x34 
    /*0000eac0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcExtChnAttr_xeac4:
    /*0000eac4*/ MOVW        R1, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f94] 
    /*0000eac8*/ MOV         R0, R9 
    /*0000eacc*/ MOVT        R1, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f94] 
    /*0000ead0*/ LDR         SL, [PC, #404]              @ 0x000000000000ec6c 
    /*0000ead4*/ BL          0x000000000000EAD4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ead8*/ LDR         IP, [PC, #400]              @ 0x000000000000ec70 
    /*0000eadc*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f30] 
    /*0000eae0*/ MOVW        R3, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2dd0] 
    /*0000eae4*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f30] 
    /*0000eae8*/ MOVT        R3, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2dd0] 
    /*0000eaec*/ STR         R2, [SP, #24] 
    /*0000eaf0*/ MOVW        R1, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3018] 
    /*0000eaf4*/ STR         R3, [SP, #20] 
    /*0000eaf8*/ MOVT        R1, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3018] 
    /*0000eafc*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ddc] 
    /*0000eb00*/ MOVW        R3, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3038] 
    /*0000eb04*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ddc] 
    /*0000eb08*/ MOVT        R3, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3038] 
    /*0000eb0c*/ STR         R2, [SP, #16] 
    /*0000eb10*/ MOV         R0, R9 
    /*0000eb14*/ STR         R3, [SP, #12] 
    /*0000eb18*/ MOVW        R2, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3040] 
    /*0000eb1c*/ MOVW        R3, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3048] 
    /*0000eb20*/ MOVT        R2, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3040] 
    /*0000eb24*/ MOVT        R3, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3048] 
    /*0000eb28*/ STR         R2, [SP, #8] 
    /*0000eb2c*/ STR         R3, [SP, #4] 
    /*0000eb30*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f54] 
    /*0000eb34*/ MOVW        R3, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3004] 
    /*0000eb38*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f54] 
    /*0000eb3c*/ MOVT        R3, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3004] 
    /*0000eb40*/ STR         R2, [SP] 
    /*0000eb44*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3010] 
    /*0000eb48*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3010] 
    /*0000eb4c*/ STR         IP, [SP, #32] 
    /*0000eb50*/ BL          0x000000000000EB50          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000eb54*/ LDR         R3, [PC, #280]              @ 0x000000000000ec74 
    /*0000eb58*/ MOV         R0, SL 
    /*0000eb5c*/ MOVW        FP, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b90] 
    /*0000eb60*/ MOV         R7, #0 
    /*0000eb64*/ MOVT        FP, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b90] 
    /*0000eb68*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000eb6c*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b94] 
    /*0000eb70*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b94] 
    /*0000eb74*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000eb78*/ BL          0x000000000000EB78          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000eb7c*/ CMP         R0, #0 
    /*0000eb80*/ BNE         VPSS_ProcExtChnAttr_xec5c
    VPSS_ProcExtChnAttr_xeb84:
    /*0000eb84*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000eb88*/ LDR         R2, [SP, #32] 
    /*0000eb8c*/ LDR         R4, [R3, #4]! 
    /*0000eb90*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000eb94*/ LDR         R3, [R2, #4]! 
    /*0000eb98*/ CMP         R3, #0 
    /*0000eb9c*/ CMPNE       R4, #0 
    /*0000eba0*/ STR         R2, [SP, #32] 
    /*0000eba4*/ BEQ         VPSS_ProcExtChnAttr_xec34
    /*0000eba8*/ ADD         R6, R4, #28416              @ 0x6f00 
    /*0000ebac*/ MOVW        R8, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3050] 
    /*0000ebb0*/ ADD         R6, R6, #136                @ 0x88 
    /*0000ebb4*/ MOVT        R8, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3050] 
    /*0000ebb8*/ MOV         R5, #3 
    /*0000ebbc*/ STR         SL, [SP, #44]               @ 0x2c 
    VPSS_ProcExtChnAttr_xebc0:
    /*0000ebc0*/ LDR         IP, [R6], #4 
    /*0000ebc4*/ MOV         R3, R5 
    /*0000ebc8*/ MOV         R2, R7 
    /*0000ebcc*/ MOV         R1, R8 
    /*0000ebd0*/ CMP         IP, #0 
    /*0000ebd4*/ MOV         R0, R9 
    /*0000ebd8*/ ADD         R5, R5, #1 
    /*0000ebdc*/ BEQ         VPSS_ProcExtChnAttr_xec24
    /*0000ebe0*/ LDR         LR, [R4, #156]              @ 0x9c 
    /*0000ebe4*/ CMP         IP, #1 
    /*0000ebe8*/ LDR         SL, [SP, #40]               @ 0x28 
    /*0000ebec*/ MOVEQ       SL, FP 
    /*0000ebf0*/ STR         LR, [SP, #24] 
    /*0000ebf4*/ LDR         LR, [R4, #164]              @ 0xa4 
    /*0000ebf8*/ MOV         IP, SL 
    /*0000ebfc*/ STR         LR, [SP, #20] 
    /*0000ec00*/ LDR         LR, [R4, #160]              @ 0xa0 
    /*0000ec04*/ STR         LR, [SP, #16] 
    /*0000ec08*/ LDR         LR, [R4, #136]              @ 0x88 
    /*0000ec0c*/ STR         LR, [SP, #12] 
    /*0000ec10*/ LDR         LR, [R4, #132]              @ 0x84 
    /*0000ec14*/ STR         LR, [SP, #8] 
    /*0000ec18*/ LDR         LR, [R4, #128]              @ 0x80 
    /*0000ec1c*/ STM         SP, {IP, LR} 
    /*0000ec20*/ BL          0x000000000000EC20          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VPSS_ProcExtChnAttr_xec24:
    /*0000ec24*/ CMP         R5, #11 
    /*0000ec28*/ ADD         R4, R4, #40                 @ 0x28 
    /*0000ec2c*/ BNE         VPSS_ProcExtChnAttr_xebc0
    /*0000ec30*/ LDR         SL, [SP, #44]               @ 0x2c 
    VPSS_ProcExtChnAttr_xec34:
    /*0000ec34*/ MOV         R0, SL 
    /*0000ec38*/ ADD         R7, R7, #1 
    /*0000ec3c*/ BL          0x000000000000EC3C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ec40*/ CMP         R7, #16 
    /*0000ec44*/ ADD         SL, SL, #92                 @ 0x5c 
    /*0000ec48*/ BEQ         VPSS_ProcExtChnAttr_xeab8
    /*0000ec4c*/ MOV         R0, SL 
    /*0000ec50*/ BL          0x000000000000EC50          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000ec54*/ CMP         R0, #0 
    /*0000ec58*/ BEQ         VPSS_ProcExtChnAttr_xeb84
    VPSS_ProcExtChnAttr_xec5c:
    /*0000ec5c*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000ec60*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000ec64*/ ADD         SP, SP, #52                 @ 0x34 
    /*0000ec68*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000ec6c*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000ec70*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstDevCtx [R_ARM_ABS32: .bss+0x3560] 
    /*0000ec74*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
FUNC_END VPSS_ProcExtChnAttr


FUNC_BEGIN VPSS_ProcChnLowdelayAttr
    /*0000ec78*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ec7c*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0000ec80*/ LDR         R6, [PC, #384]              @ 0x000000000000ee08 
    /*0000ec84*/ MOV         R4, R0 
    /*0000ec88*/ LDR         SL, [PC, #380]              @ 0x000000000000ee0c 
    /*0000ec8c*/ MOVW        R1, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3070] 
    /*0000ec90*/ LDR         R9, [PC, #376]              @ 0x000000000000ee10 
    /*0000ec94*/ MOVT        R1, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3070] 
    /*0000ec98*/ STR         R0, [SP, #24] 
    /*0000ec9c*/ MOV         R8, #0 
    /*0000eca0*/ BL          0x000000000000ECA0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000eca4*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3100] 
    /*0000eca8*/ MOVW        R3, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x310c] 
    /*0000ecac*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3100] 
    /*0000ecb0*/ MOVT        R3, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x310c] 
    /*0000ecb4*/ STR         R2, [SP, #12] 
    /*0000ecb8*/ STR         R3, [SP, #8] 
    /*0000ecbc*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x311c] 
    /*0000ecc0*/ MOVW        R3, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f54] 
    /*0000ecc4*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x311c] 
    /*0000ecc8*/ MOVT        R3, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f54] 
    /*0000eccc*/ STR         R2, [SP, #4] 
    /*0000ecd0*/ STR         R3, [SP] 
    /*0000ecd4*/ MOV         R0, R4 
    /*0000ecd8*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30e0] 
    /*0000ecdc*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*0000ece0*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30e0] 
    /*0000ece4*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*0000ece8*/ MOVW        R1, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30e8] 
    /*0000ecec*/ MOVT        R1, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30e8] 
    /*0000ecf0*/ BL          0x000000000000ECF0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ecf4*/ MOVW        R3, #0                      @ bOneBufferforLowDelay [R_ARM_MOVW_ABS_NC: .bss+0x1174] 
    /*0000ecf8*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b90] 
    /*0000ecfc*/ MOVT        R3, #0                      @ bOneBufferforLowDelay [R_ARM_MOVT_ABS: .bss+0x1174] 
    /*0000ed00*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b90] 
    /*0000ed04*/ STR         R3, [SP, #28] 
    /*0000ed08*/ STR         R2, [SP, #32] 
    /*0000ed0c*/ MOVW        R3, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3124] 
    /*0000ed10*/ MOVT        R3, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3124] 
    /*0000ed14*/ STR         R3, [SP, #36]               @ 0x24 
    VPSS_ProcChnLowdelayAttr_xed18:
    /*0000ed18*/ MOV         R0, R6 
    /*0000ed1c*/ BL          0x000000000000ED1C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000ed20*/ SUBS        R4, R0, #0 
    /*0000ed24*/ BNE         VPSS_ProcChnLowdelayAttr_xedf8
    /*0000ed28*/ LDR         R7, [SL, #4]! 
    /*0000ed2c*/ LDR         FP, [R9, #4]! 
    /*0000ed30*/ CMP         R7, #0 
    /*0000ed34*/ CMPNE       FP, #0 
    /*0000ed38*/ BEQ         VPSS_ProcChnLowdelayAttr_xed68
    /*0000ed3c*/ ADD         R5, R7, #28416              @ 0x6f00 
    /*0000ed40*/ ADD         R5, R5, #124                @ 0x7c 
    VPSS_ProcChnLowdelayAttr_xed44:
    /*0000ed44*/ LDR         R3, [R5], #4 
    /*0000ed48*/ CMP         R3, #0 
    /*0000ed4c*/ BEQ         VPSS_ProcChnLowdelayAttr_xed5c
    /*0000ed50*/ LDR         R3, [R7, #2088]             @ 0x828 
    /*0000ed54*/ CMP         R3, R4 
    /*0000ed58*/ BEQ         VPSS_ProcChnLowdelayAttr_xed8c
    VPSS_ProcChnLowdelayAttr_xed5c:
    /*0000ed5c*/ ADD         R4, R4, #1 
    /*0000ed60*/ CMP         R4, #3 
    /*0000ed64*/ BNE         VPSS_ProcChnLowdelayAttr_xed44
    VPSS_ProcChnLowdelayAttr_xed68:
    /*0000ed68*/ MOV         R0, R6 
    /*0000ed6c*/ ADD         R8, R8, #1 
    /*0000ed70*/ BL          0x000000000000ED70          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ed74*/ CMP         R8, #16 
    /*0000ed78*/ ADD         R6, R6, #92                 @ 0x5c 
    /*0000ed7c*/ BNE         VPSS_ProcChnLowdelayAttr_xed18
    /*0000ed80*/ MOV         R0, #0 
    /*0000ed84*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0000ed88*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcChnLowdelayAttr_xed8c:
    /*0000ed8c*/ LDR         R3, [R7, #2092]             @ 0x82c 
    /*0000ed90*/ CMP         R3, #1 
    /*0000ed94*/ BNE         VPSS_ProcChnLowdelayAttr_xed5c
    /*0000ed98*/ LDR         R2, [SP, #28] 
    /*0000ed9c*/ MOVW        R3, #15984                  @ 0x3e70 
    /*0000eda0*/ LDRD        R0, [FP, R3] 
    /*0000eda4*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b94] 
    /*0000eda8*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b94] 
    /*0000edac*/ LDR         IP, [R2] 
    /*0000edb0*/ LDR         R2, [R7, #2096]             @ 0x830 
    /*0000edb4*/ CMP         IP, #1 
    /*0000edb8*/ LDR         IP, [SP, #32] 
    /*0000edbc*/ STRD        R0, [SP, #16] 
    /*0000edc0*/ STR         R2, [SP, #4] 
    /*0000edc4*/ MOV         R2, R8 
    /*0000edc8*/ MOVEQ       R3, IP 
    /*0000edcc*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000edd0*/ STR         R3, [SP, #8] 
    /*0000edd4*/ MOV         R3, R4 
    /*0000edd8*/ STR         IP, [SP] 
    /*0000eddc*/ LDR         R0, [SP, #24] 
    /*0000ede0*/ BL          0x000000000000EDE0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ede4*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0000ede8*/ LDR         R0, [SP, #24] 
    /*0000edec*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*0000edf0*/ BL          0x000000000000EDF0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000edf4*/ B           VPSS_ProcChnLowdelayAttr_xed5c
    VPSS_ProcChnLowdelayAttr_xedf8:
    /*0000edf8*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000edfc*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000ee00*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0000ee04*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000ee08*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000ee0c*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
    /*0000ee10*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstDevCtx [R_ARM_ABS32: .bss+0x3560] 
FUNC_END VPSS_ProcChnLowdelayAttr


FUNC_BEGIN VPSS_ProcGrpCrop
    /*0000ee14*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ee18*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000ee1c*/ MOV         SL, R0 
    /*0000ee20*/ MOVW        R1, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3148] 
    /*0000ee24*/ MOVT        R1, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3148] 
    /*0000ee28*/ MOVW        FP, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b90] 
    /*0000ee2c*/ BL          0x000000000000EE2C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ee30*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31ec] 
    /*0000ee34*/ MOVW        R3, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31f4] 
    /*0000ee38*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31ec] 
    /*0000ee3c*/ MOVT        R3, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31f4] 
    /*0000ee40*/ STR         R2, [SP, #40]               @ 0x28 
    /*0000ee44*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000ee48*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31fc] 
    /*0000ee4c*/ MOVW        R3, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3204] 
    /*0000ee50*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31fc] 
    /*0000ee54*/ MOVT        R3, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3204] 
    /*0000ee58*/ STR         R2, [SP, #32] 
    /*0000ee5c*/ STR         R3, [SP, #28] 
    /*0000ee60*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x320c] 
    /*0000ee64*/ MOVW        R3, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3214] 
    /*0000ee68*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x320c] 
    /*0000ee6c*/ MOVT        R3, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3214] 
    /*0000ee70*/ STR         R2, [SP, #24] 
    /*0000ee74*/ STR         R3, [SP, #20] 
    /*0000ee78*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3038] 
    /*0000ee7c*/ MOVW        R3, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3040] 
    /*0000ee80*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3038] 
    /*0000ee84*/ MOVT        R3, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3040] 
    /*0000ee88*/ STR         R2, [SP, #16] 
    /*0000ee8c*/ STR         R3, [SP, #12] 
    /*0000ee90*/ MOVW        R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x321c] 
    /*0000ee94*/ MOVW        R3, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3224] 
    /*0000ee98*/ MOVT        R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x321c] 
    /*0000ee9c*/ MOVT        R3, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3224] 
    /*0000eea0*/ STR         R2, [SP, #8] 
    /*0000eea4*/ STR         R3, [SP, #4] 
    /*0000eea8*/ MOVW        R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x322c] 
    /*0000eeac*/ MOV         R0, SL 
    /*0000eeb0*/ MOVT        R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x322c] 
    /*0000eeb4*/ MOVW        R3, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31b8] 
    /*0000eeb8*/ STR         R2, [SP] 
    /*0000eebc*/ MOVT        R3, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31b8] 
    /*0000eec0*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*0000eec4*/ MOVW        R1, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31c0] 
    /*0000eec8*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*0000eecc*/ MOVT        R1, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31c0] 
    /*0000eed0*/ MOVT        FP, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b90] 
    /*0000eed4*/ BL          0x000000000000EED4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000eed8*/ LDR         R6, [PC, #332]              @ 0x000000000000f02c 
    /*0000eedc*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b94] 
    /*0000eee0*/ LDR         R9, [PC, #328]              @ 0x000000000000f030 
    /*0000eee4*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b94] 
    /*0000eee8*/ LDR         R8, [PC, #324]              @ 0x000000000000f034 
    /*0000eeec*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000eef0*/ MOV         R5, #0 
    /*0000eef4*/ MOVW        R3, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3140] 
    /*0000eef8*/ STR         FP, [SP, #60]               @ 0x3c 
    /*0000eefc*/ MOVT        R3, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3140] 
    /*0000ef00*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000ef04*/ B           VPSS_ProcGrpCrop_xef2c
    VPSS_ProcGrpCrop_xef08:
    /*0000ef08*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0000ef0c*/ MOV         R0, SL 
    /*0000ef10*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*0000ef14*/ BL          0x000000000000EF14          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VPSS_ProcGrpCrop_xef18:
    /*0000ef18*/ MOV         R0, R6 
    /*0000ef1c*/ ADD         R6, R6, #92                 @ 0x5c 
    /*0000ef20*/ BL          0x000000000000EF20          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ef24*/ CMP         R5, #16 
    /*0000ef28*/ BEQ         VPSS_ProcGrpCrop_xf010
    VPSS_ProcGrpCrop_xef2c:
    /*0000ef2c*/ MOV         R0, R6 
    /*0000ef30*/ BL          0x000000000000EF30          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000ef34*/ MOVW        IP, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000ef38*/ MOV         R2, R5 
    /*0000ef3c*/ MOVW        R1, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3238] 
    /*0000ef40*/ MOVT        IP, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000ef44*/ MOVT        R1, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3238] 
    /*0000ef48*/ ADD         R5, R5, #1 
    /*0000ef4c*/ CMP         R0, #0 
    /*0000ef50*/ MOV         R0, SL 
    /*0000ef54*/ BNE         VPSS_ProcGrpCrop_xf01c
    /*0000ef58*/ LDR         R3, [R9, #4]! 
    /*0000ef5c*/ LDR         R7, [R8, #4]! 
    /*0000ef60*/ ADD         R4, R3, #12288              @ 0x3000 
    /*0000ef64*/ CMP         R3, #0 
    /*0000ef68*/ CMPNE       R7, #0 
    /*0000ef6c*/ BEQ         VPSS_ProcGrpCrop_xef18
    /*0000ef70*/ LDR         FP, [R4, #3148]             @ 0xc4c 
    /*0000ef74*/ LDR         LR, [R4, #3164]             @ 0xc5c 
    /*0000ef78*/ LDR         R3, [R4, #3144]             @ 0xc48 
    /*0000ef7c*/ STR         FP, [SP, #48]               @ 0x30 
    /*0000ef80*/ LDR         FP, [SP, #60]               @ 0x3c 
    /*0000ef84*/ CMP         R3, #1 
    /*0000ef88*/ STR         LR, [SP, #16] 
    /*0000ef8c*/ LDR         LR, [SP, #52]               @ 0x34 
    /*0000ef90*/ MOVEQ       LR, FP 
    /*0000ef94*/ LDR         FP, [SP, #48]               @ 0x30 
    /*0000ef98*/ MOV         R3, LR 
    /*0000ef9c*/ LDR         LR, [SP, #56]               @ 0x38 
    /*0000efa0*/ CMP         FP, #0 
    /*0000efa4*/ MOVEQ       IP, LR 
    /*0000efa8*/ LDR         LR, [R4, #3160]             @ 0xc58 
    /*0000efac*/ STR         LR, [SP, #12] 
    /*0000efb0*/ LDR         LR, [R4, #3156]             @ 0xc54 
    /*0000efb4*/ STR         LR, [SP, #8] 
    /*0000efb8*/ LDR         LR, [R4, #3152]             @ 0xc50 
    /*0000efbc*/ STM         SP, {IP, LR} 
    /*0000efc0*/ BL          0x000000000000EFC0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000efc4*/ LDR         R3, [R4, #3144]             @ 0xc48 
    /*0000efc8*/ CMP         R3, #0 
    /*0000efcc*/ BEQ         VPSS_ProcGrpCrop_xef08
    /*0000efd0*/ LDR         R0, [R4, #3180]             @ 0xc6c 
    /*0000efd4*/ ADD         R7, R7, #28672              @ 0x7000 
    /*0000efd8*/ MOVW        R1, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3250] 
    /*0000efdc*/ MOVT        R1, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3250] 
    /*0000efe0*/ LDR         R3, [R7, #92]               @ 0x5c 
    /*0000efe4*/ LDR         R2, [R7, #88]               @ 0x58 
    /*0000efe8*/ STR         R0, [SP, #12] 
    /*0000efec*/ MOV         R0, SL 
    /*0000eff0*/ LDR         IP, [R4, #3176]             @ 0xc68 
    /*0000eff4*/ STR         IP, [SP, #8] 
    /*0000eff8*/ LDR         IP, [R4, #3172]             @ 0xc64 
    /*0000effc*/ STR         IP, [SP, #4] 
    /*0000f000*/ LDR         IP, [R4, #3168]             @ 0xc60 
    /*0000f004*/ STR         IP, [SP] 
    /*0000f008*/ BL          0x000000000000F008          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f00c*/ B           VPSS_ProcGrpCrop_xef08
    VPSS_ProcGrpCrop_xf010:
    /*0000f010*/ MOV         R0, #0 
    /*0000f014*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000f018*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcGrpCrop_xf01c:
    /*0000f01c*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000f020*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000f024*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000f028*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000f02c*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000f030*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstDevCtx [R_ARM_ABS32: .bss+0x3560] 
    /*0000f034*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
FUNC_END VPSS_ProcGrpCrop


FUNC_BEGIN VPSS_ProcChnCrop
    /*0000f038*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000f03c*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000f040*/ MOV         R8, R0 
    /*0000f044*/ MOVW        R1, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3264] 
    /*0000f048*/ MOVT        R1, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3264] 
    /*0000f04c*/ LDR         SL, [PC, #580]              @ 0x000000000000f298 
    /*0000f050*/ BL          0x000000000000F050          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f054*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31ec] 
    /*0000f058*/ MOVW        R3, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31f4] 
    /*0000f05c*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31ec] 
    /*0000f060*/ MOVT        R3, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31f4] 
    /*0000f064*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000f068*/ STR         R3, [SP, #32] 
    /*0000f06c*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31fc] 
    /*0000f070*/ MOVW        R3, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3204] 
    /*0000f074*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31fc] 
    /*0000f078*/ MOVT        R3, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3204] 
    /*0000f07c*/ STR         R2, [SP, #28] 
    /*0000f080*/ STR         R3, [SP, #24] 
    /*0000f084*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3038] 
    /*0000f088*/ MOVW        R3, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3040] 
    /*0000f08c*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3038] 
    /*0000f090*/ MOVT        R3, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3040] 
    /*0000f094*/ STR         R2, [SP, #20] 
    /*0000f098*/ STR         R3, [SP, #16] 
    /*0000f09c*/ MOVW        R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x321c] 
    /*0000f0a0*/ MOVW        R3, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3224] 
    /*0000f0a4*/ MOVT        R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x321c] 
    /*0000f0a8*/ MOVT        R3, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3224] 
    /*0000f0ac*/ STR         R2, [SP, #12] 
    /*0000f0b0*/ STR         R3, [SP, #8] 
    /*0000f0b4*/ MOVW        R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x322c] 
    /*0000f0b8*/ MOVW        R3, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31b8] 
    /*0000f0bc*/ MOVT        R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x322c] 
    /*0000f0c0*/ MOVT        R3, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31b8] 
    /*0000f0c4*/ STR         R2, [SP, #4] 
    /*0000f0c8*/ STR         R3, [SP] 
    /*0000f0cc*/ MOV         R0, R8 
    /*0000f0d0*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30e0] 
    /*0000f0d4*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*0000f0d8*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30e0] 
    /*0000f0dc*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*0000f0e0*/ MOVW        R1, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32d4] 
    /*0000f0e4*/ MOVT        R1, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32d4] 
    /*0000f0e8*/ BL          0x000000000000F0E8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f0ec*/ LDR         R3, [PC, #424]              @ 0x000000000000f29c 
    /*0000f0f0*/ MOVW        FP, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b90] 
    /*0000f0f4*/ MOVT        FP, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b90] 
    /*0000f0f8*/ MOV         R9, #0 
    /*0000f0fc*/ MOVW        R2, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000f100*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000f104*/ MOVT        R2, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000f108*/ LDR         R3, [PC, #400]              @ 0x000000000000f2a0 
    /*0000f10c*/ STR         R2, [SP, #52]               @ 0x34 
    /*0000f110*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0000f114*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b94] 
    /*0000f118*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b94] 
    /*0000f11c*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000f120*/ MOVW        R3, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3140] 
    /*0000f124*/ MOVT        R3, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3140] 
    /*0000f128*/ STR         R3, [SP, #48]               @ 0x30 
    VPSS_ProcChnCrop_xf12c:
    /*0000f12c*/ MOV         R0, SL 
    /*0000f130*/ BL          0x000000000000F130          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f134*/ SUBS        R5, R0, #0 
    /*0000f138*/ BNE         VPSS_ProcChnCrop_xf288
    /*0000f13c*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0000f140*/ LDR         R4, [R3, #4]! 
    /*0000f144*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000f148*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*0000f14c*/ LDR         R7, [R3, #4]! 
    /*0000f150*/ CMP         R4, #0 
    /*0000f154*/ CMPNE       R7, #0 
    /*0000f158*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0000f15c*/ BEQ         VPSS_ProcChnCrop_xf264
    /*0000f160*/ LDR         R3, [SP, #68]               @ 0x44 
    /*0000f164*/ ADD         R6, R4, #15488              @ 0x3c80 
    /*0000f168*/ ADD         R7, R7, #28416              @ 0x6f00 
    /*0000f16c*/ ADD         R4, R4, #37632              @ 0x9300 
    /*0000f170*/ ADD         R7, R7, #120                @ 0x78 
    /*0000f174*/ ADD         R6, R6, #16 
    /*0000f178*/ ADD         R4, R4, #184                @ 0xb8 
    /*0000f17c*/ STR         SL, [SP, #64]               @ 0x40 
    /*0000f180*/ STR         FP, [SP, #40]               @ 0x28 
    /*0000f184*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000f188*/ B           VPSS_ProcChnCrop_xf1ac
    VPSS_ProcChnCrop_xf18c:
    /*0000f18c*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0000f190*/ MOV         R0, R8 
    /*0000f194*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*0000f198*/ BL          0x000000000000F198          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VPSS_ProcChnCrop_xf19c:
    /*0000f19c*/ CMP         R5, #11 
    /*0000f1a0*/ ADD         R6, R6, #24 
    /*0000f1a4*/ ADD         R4, R4, #24 
    /*0000f1a8*/ BEQ         VPSS_ProcChnCrop_xf25c
    VPSS_ProcChnCrop_xf1ac:
    /*0000f1ac*/ LDR         IP, [R7, #4]! 
    /*0000f1b0*/ MOV         R3, R5 
    /*0000f1b4*/ MOVW        R1, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32fc] 
    /*0000f1b8*/ MOV         R2, R9 
    /*0000f1bc*/ CMP         IP, #0 
    /*0000f1c0*/ MOV         R0, R8 
    /*0000f1c4*/ MOVT        R1, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32fc] 
    /*0000f1c8*/ ADD         R5, R5, #1 
    /*0000f1cc*/ BEQ         VPSS_ProcChnCrop_xf19c
    /*0000f1d0*/ LDR         SL, [R4, #20] 
    /*0000f1d4*/ LDM         R4, {IP, LR} 
    /*0000f1d8*/ LDR         FP, [SP, #44]               @ 0x2c 
    /*0000f1dc*/ STR         SL, [SP, #20] 
    /*0000f1e0*/ CMP         IP, #1 
    /*0000f1e4*/ LDR         SL, [SP, #40]               @ 0x28 
    /*0000f1e8*/ MOVNE       SL, FP 
    /*0000f1ec*/ LDR         FP, [SP, #52]               @ 0x34 
    /*0000f1f0*/ CMP         LR, #0 
    /*0000f1f4*/ MOV         IP, SL 
    /*0000f1f8*/ LDR         SL, [SP, #48]               @ 0x30 
    /*0000f1fc*/ MOVNE       SL, FP 
    /*0000f200*/ MOV         LR, SL 
    /*0000f204*/ LDR         SL, [R4, #16] 
    /*0000f208*/ STR         SL, [SP, #16] 
    /*0000f20c*/ LDR         SL, [R4, #12] 
    /*0000f210*/ STR         SL, [SP, #12] 
    /*0000f214*/ LDR         SL, [R4, #8] 
    /*0000f218*/ STM         SP, {IP, LR} 
    /*0000f21c*/ STR         SL, [SP, #8] 
    /*0000f220*/ BL          0x000000000000F220          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f224*/ LDR         R3, [R4] 
    /*0000f228*/ CMP         R3, #0 
    /*0000f22c*/ BEQ         VPSS_ProcChnCrop_xf18c
    /*0000f230*/ LDR         IP, [R6, #12] 
    /*0000f234*/ MOVW        R1, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3318] 
    /*0000f238*/ LDR         R3, [R6, #4] 
    /*0000f23c*/ MOVT        R1, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3318] 
    /*0000f240*/ LDR         R2, [R6] 
    /*0000f244*/ MOV         R0, R8 
    /*0000f248*/ STR         IP, [SP, #4] 
    /*0000f24c*/ LDR         IP, [R6, #8] 
    /*0000f250*/ STR         IP, [SP] 
    /*0000f254*/ BL          0x000000000000F254          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f258*/ B           VPSS_ProcChnCrop_xf18c
    VPSS_ProcChnCrop_xf25c:
    /*0000f25c*/ LDR         SL, [SP, #64]               @ 0x40 
    /*0000f260*/ LDR         FP, [SP, #40]               @ 0x28 
    VPSS_ProcChnCrop_xf264:
    /*0000f264*/ MOV         R0, SL 
    /*0000f268*/ ADD         R9, R9, #1 
    /*0000f26c*/ BL          0x000000000000F26C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f270*/ CMP         R9, #16 
    /*0000f274*/ ADD         SL, SL, #92                 @ 0x5c 
    /*0000f278*/ BNE         VPSS_ProcChnCrop_xf12c
    /*0000f27c*/ MOV         R0, #0 
    /*0000f280*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000f284*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcChnCrop_xf288:
    /*0000f288*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000f28c*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000f290*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000f294*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000f298*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000f29c*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstDevCtx [R_ARM_ABS32: .bss+0x3560] 
    /*0000f2a0*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
FUNC_END VPSS_ProcChnCrop


FUNC_BEGIN VPSS_ProcGrpPicQueue
    /*0000f2a4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000f2a8*/ SUB         SP, SP, #28 
    /*0000f2ac*/ MOVW        R1, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3328] 
    /*0000f2b0*/ MOVT        R1, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3328] 
    /*0000f2b4*/ STR         R0, [SP, #20] 
    /*0000f2b8*/ BL          0x000000000000F2B8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f2bc*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33bc] 
    /*0000f2c0*/ MOVW        R3, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33c4] 
    /*0000f2c4*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33bc] 
    /*0000f2c8*/ MOVT        R3, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33c4] 
    /*0000f2cc*/ STR         R2, [SP, #8] 
    /*0000f2d0*/ MOVW        R1, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33a4] 
    /*0000f2d4*/ STR         R3, [SP, #4] 
    /*0000f2d8*/ MOVW        R2, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33cc] 
    /*0000f2dc*/ LDR         R0, [SP, #20] 
    /*0000f2e0*/ MOVT        R2, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33cc] 
    /*0000f2e4*/ MOVW        R3, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3398] 
    /*0000f2e8*/ STR         R2, [SP] 
    /*0000f2ec*/ MOVT        R3, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3398] 
    /*0000f2f0*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*0000f2f4*/ MOVT        R1, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33a4] 
    /*0000f2f8*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*0000f2fc*/ BL          0x000000000000F2FC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f300*/ LDR         R5, [PC, #156]              @ 0x000000000000f3a4 
    /*0000f304*/ LDR         R8, [PC, #156]              @ 0x000000000000f3a8 
    /*0000f308*/ MOVW        SL, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33d8] 
    /*0000f30c*/ MOVT        SL, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33d8] 
    /*0000f310*/ MOV         R6, #0 
    /*0000f314*/ MOVW        R9, #2164                   @ 0x874 
    VPSS_ProcGrpPicQueue_xf318:
    /*0000f318*/ MOV         R0, R5 
    /*0000f31c*/ BL          0x000000000000F31C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f320*/ CMP         R0, #0 
    /*0000f324*/ BNE         VPSS_ProcGrpPicQueue_xf394
    /*0000f328*/ LDR         R4, [R8, #4]! 
    /*0000f32c*/ ADD         R7, R4, R9 
    /*0000f330*/ CMP         R4, #0 
    /*0000f334*/ MOV         R0, R7 
    /*0000f338*/ BEQ         VPSS_ProcGrpPicQueue_xf370
    /*0000f33c*/ BL          0x000000000000F33C          @ VPSS_PicQueueGetFreeNum [R_ARM_CALL: .text+0x11058] 
    /*0000f340*/ MOV         FP, R0 
    /*0000f344*/ MOV         R0, R7 
    /*0000f348*/ BL          0x000000000000F348          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*0000f34c*/ LDR         IP, [R4, #2060]             @ 0x80c 
    /*0000f350*/ MOV         R3, FP 
    /*0000f354*/ MOV         R2, R6 
    /*0000f358*/ MOV         R1, SL 
    /*0000f35c*/ STR         IP, [SP, #8] 
    /*0000f360*/ LDR         IP, [R4, #2124]             @ 0x84c 
    /*0000f364*/ STM         SP, {R0, IP} 
    /*0000f368*/ LDR         R0, [SP, #20] 
    /*0000f36c*/ BL          0x000000000000F36C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VPSS_ProcGrpPicQueue_xf370:
    /*0000f370*/ MOV         R0, R5 
    /*0000f374*/ ADD         R6, R6, #1 
    /*0000f378*/ BL          0x000000000000F378          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f37c*/ CMP         R6, #16 
    /*0000f380*/ ADD         R5, R5, #92                 @ 0x5c 
    /*0000f384*/ BNE         VPSS_ProcGrpPicQueue_xf318
    /*0000f388*/ MOV         R0, #0 
    /*0000f38c*/ ADD         SP, SP, #28 
    /*0000f390*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcGrpPicQueue_xf394:
    /*0000f394*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000f398*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000f39c*/ ADD         SP, SP, #28 
    /*0000f3a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000f3a4*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000f3a8*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
FUNC_END VPSS_ProcGrpPicQueue


FUNC_BEGIN VPSS_ProcGrpWorkStatus
    /*0000f3ac*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000f3b0*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000f3b4*/ LDR         R5, [PC, #440]              @ 0x000000000000f574 
    /*0000f3b8*/ MOV         R4, R0 
    /*0000f3bc*/ LDR         R6, [PC, #436]              @ 0x000000000000f578 
    /*0000f3c0*/ MOVW        R1, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33f0] 
    /*0000f3c4*/ MOVT        R1, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33f0] 
    /*0000f3c8*/ STR         R0, [SP, #56]               @ 0x38 
    /*0000f3cc*/ BL          0x000000000000F3CC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f3d0*/ MOV         R0, R4 
    /*0000f3d4*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3498] 
    /*0000f3d8*/ MOVW        R3, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34a4] 
    /*0000f3dc*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3498] 
    /*0000f3e0*/ MOVT        R3, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34a4] 
    /*0000f3e4*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000f3e8*/ MOVW        R1, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x346c] 
    /*0000f3ec*/ STR         R3, [SP, #32] 
    /*0000f3f0*/ MOVW        R2, #0                      @ .LC110 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34ac] 
    /*0000f3f4*/ MOVW        R3, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34b4] 
    /*0000f3f8*/ MOVT        R2, #0                      @ .LC110 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34ac] 
    /*0000f3fc*/ MOVT        R3, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34b4] 
    /*0000f400*/ STR         R2, [SP, #28] 
    /*0000f404*/ STR         R3, [SP, #24] 
    /*0000f408*/ MOVW        R2, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34bc] 
    /*0000f40c*/ MOVW        R3, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34c4] 
    /*0000f410*/ MOVT        R2, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34bc] 
    /*0000f414*/ MOVT        R3, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34c4] 
    /*0000f418*/ STR         R2, [SP, #20] 
    /*0000f41c*/ STR         R3, [SP, #16] 
    /*0000f420*/ MOVW        R2, #0                      @ .LC114 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34cc] 
    /*0000f424*/ MOVW        R3, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34d4] 
    /*0000f428*/ MOVT        R2, #0                      @ .LC114 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34cc] 
    /*0000f42c*/ MOVT        R3, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34d4] 
    /*0000f430*/ STR         R2, [SP, #12] 
    /*0000f434*/ STR         R3, [SP, #8] 
    /*0000f438*/ MOVW        R2, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34dc] 
    /*0000f43c*/ MOVW        R3, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34e8] 
    /*0000f440*/ MOVT        R2, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34dc] 
    /*0000f444*/ MOVT        R3, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34e8] 
    /*0000f448*/ STR         R2, [SP, #4] 
    /*0000f44c*/ STR         R3, [SP] 
    /*0000f450*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*0000f454*/ MOVW        R3, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3460] 
    /*0000f458*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*0000f45c*/ MOVT        R3, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3460] 
    /*0000f460*/ MOVT        R1, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x346c] 
    /*0000f464*/ MOV         R4, #0 
    /*0000f468*/ BL          0x000000000000F468          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f46c*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b90] 
    /*0000f470*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b94] 
    /*0000f474*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b90] 
    /*0000f478*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b94] 
    /*0000f47c*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000f480*/ MOVW        R3, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34f0] 
    /*0000f484*/ STR         R2, [SP, #68]               @ 0x44 
    /*0000f488*/ MOVT        R3, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34f0] 
    /*0000f48c*/ STR         R5, [SP, #44]               @ 0x2c 
    /*0000f490*/ STR         R3, [SP, #60]               @ 0x3c 
    VPSS_ProcGrpWorkStatus_xf494:
    /*0000f494*/ MOV         R0, R6 
    /*0000f498*/ BL          0x000000000000F498          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f49c*/ MOV         R2, R4 
    /*0000f4a0*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*0000f4a4*/ ADD         R4, R4, #1 
    /*0000f4a8*/ CMP         R0, #0 
    /*0000f4ac*/ LDR         R0, [SP, #56]               @ 0x38 
    /*0000f4b0*/ BNE         VPSS_ProcGrpWorkStatus_xf564
    /*0000f4b4*/ LDR         IP, [SP, #44]               @ 0x2c 
    /*0000f4b8*/ LDR         R3, [IP, #4]! 
    /*0000f4bc*/ CMP         R3, #0 
    /*0000f4c0*/ STR         IP, [SP, #44]               @ 0x2c 
    /*0000f4c4*/ ADD         IP, R3, #28672              @ 0x7000 
    /*0000f4c8*/ BEQ         VPSS_ProcGrpWorkStatus_xf544
    /*0000f4cc*/ LDR         LR, [R3, #2056]             @ 0x808 
    /*0000f4d0*/ LDR         R7, [IP, #3140]             @ 0xc44 
    /*0000f4d4*/ LDR         R8, [SP, #68]               @ 0x44 
    /*0000f4d8*/ CMP         LR, #1 
    /*0000f4dc*/ LDR         R5, [IP, #3212]             @ 0xc8c 
    /*0000f4e0*/ STR         R7, [SP, #48]               @ 0x30 
    /*0000f4e4*/ LDR         R7, [SP, #64]               @ 0x40 
    /*0000f4e8*/ MOVNE       R7, R8 
    /*0000f4ec*/ LDR         R8, [IP, #3144]             @ 0xc48 
    /*0000f4f0*/ LDR         R3, [IP, #3136]             @ 0xc40 
    /*0000f4f4*/ MOV         LR, R7 
    /*0000f4f8*/ LDR         R7, [IP, #3148]             @ 0xc4c 
    /*0000f4fc*/ STR         R8, [SP, #52]               @ 0x34 
    /*0000f500*/ ADD         R8, IP, #3152               @ 0xc50 
    /*0000f504*/ LDR         FP, [IP, #3132]             @ 0xc3c 
    /*0000f508*/ LDM         R8, {R8, R9, SL} 
    /*0000f50c*/ STR         R5, [SP, #36]               @ 0x24 
    /*0000f510*/ LDR         IP, [IP, #3208]             @ 0xc88 
    /*0000f514*/ STR         R7, [SP, #8] 
    /*0000f518*/ STR         R8, [SP, #12] 
    /*0000f51c*/ LDR         R7, [SP, #48]               @ 0x30 
    /*0000f520*/ LDR         R8, [SP, #52]               @ 0x34 
    /*0000f524*/ STR         R9, [SP, #16] 
    /*0000f528*/ STR         R7, [SP] 
    /*0000f52c*/ STR         R8, [SP, #4] 
    /*0000f530*/ STR         LR, [SP, #28] 
    /*0000f534*/ STR         FP, [SP, #24] 
    /*0000f538*/ STR         IP, [SP, #32] 
    /*0000f53c*/ STR         SL, [SP, #20] 
    /*0000f540*/ BL          0x000000000000F540          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VPSS_ProcGrpWorkStatus_xf544:
    /*0000f544*/ MOV         R0, R6 
    /*0000f548*/ ADD         R6, R6, #92                 @ 0x5c 
    /*0000f54c*/ BL          0x000000000000F54C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f550*/ CMP         R4, #16 
    /*0000f554*/ BNE         VPSS_ProcGrpWorkStatus_xf494
    /*0000f558*/ MOV         R0, #0 
    /*0000f55c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000f560*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcGrpWorkStatus_xf564:
    /*0000f564*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000f568*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000f56c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000f570*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000f574*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
    /*0000f578*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
FUNC_END VPSS_ProcGrpWorkStatus


FUNC_BEGIN VPSS_ProcChnOutputResolution
    /*0000f57c*/ LDR         R3, [PC, #1268]             @ 0x000000000000fa78 
    /*0000f580*/ MOVW        R1, #0                      @ .LC119 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x351c] 
    /*0000f584*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000f588*/ SUB         SP, SP, #100                @ 0x64 
    /*0000f58c*/ MOVT        R1, #0                      @ .LC119 [R_ARM_MOVT_ABS: .rodata.str1.4+0x351c] 
    /*0000f590*/ MOV         R4, R0 
    /*0000f594*/ MOV         R9, R3 
    /*0000f598*/ STR         R0, [SP, #68]               @ 0x44 
    /*0000f59c*/ BL          0x000000000000F59C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f5a0*/ LDR         IP, [PC, #1236]             @ 0x000000000000fa7c 
    /*0000f5a4*/ MOVW        R2, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35b4] 
    /*0000f5a8*/ MOVW        R3, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c0] 
    /*0000f5ac*/ MOVT        R2, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35b4] 
    /*0000f5b0*/ MOVT        R3, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c0] 
    /*0000f5b4*/ STR         R2, [SP, #32] 
    /*0000f5b8*/ MOV         R0, R4 
    /*0000f5bc*/ STR         R3, [SP, #28] 
    /*0000f5c0*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c8] 
    /*0000f5c4*/ MOVW        R3, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2de8] 
    /*0000f5c8*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c8] 
    /*0000f5cc*/ MOVT        R3, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2de8] 
    /*0000f5d0*/ STR         R2, [SP, #24] 
    /*0000f5d4*/ STR         R3, [SP, #20] 
    /*0000f5d8*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35d4] 
    /*0000f5dc*/ MOVW        R3, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35e0] 
    /*0000f5e0*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35d4] 
    /*0000f5e4*/ MOVT        R3, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35e0] 
    /*0000f5e8*/ STR         R2, [SP, #16] 
    /*0000f5ec*/ STR         R3, [SP, #12] 
    /*0000f5f0*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3038] 
    /*0000f5f4*/ MOVW        R3, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3040] 
    /*0000f5f8*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3038] 
    /*0000f5fc*/ MOVT        R3, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3040] 
    /*0000f600*/ STR         R2, [SP, #8] 
    /*0000f604*/ STR         R3, [SP, #4] 
    /*0000f608*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f54] 
    /*0000f60c*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30e0] 
    /*0000f610*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f54] 
    /*0000f614*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30e0] 
    /*0000f618*/ STR         R2, [SP] 
    /*0000f61c*/ MOVW        R1, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x358c] 
    /*0000f620*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*0000f624*/ MOVT        R1, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0x358c] 
    /*0000f628*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*0000f62c*/ STR         IP, [SP, #60]               @ 0x3c 
    /*0000f630*/ BL          0x000000000000F630          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f634*/ LDR         R3, [PC, #1092]             @ 0x000000000000fa80 
    /*0000f638*/ MOV         FP, #0 
    /*0000f63c*/ MOV         SL, FP 
    /*0000f640*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b90] 
    /*0000f644*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b90] 
    /*0000f648*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000f64c*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000f650*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0000f654*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0000f658*/ STR         R3, [SP, #92]               @ 0x5c 
    /*0000f65c*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b94] 
    /*0000f660*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b94] 
    /*0000f664*/ STR         R3, [SP, #52]               @ 0x34 
    VPSS_ProcChnOutputResolution_xf668:
    /*0000f668*/ MOV         R0, R9 
    /*0000f66c*/ BL          0x000000000000F66C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f670*/ SUBS        R4, R0, #0 
    /*0000f674*/ BNE         VPSS_ProcChnOutputResolution_xfa68
    /*0000f678*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*0000f67c*/ LDR         R2, [R3, #4]! 
    /*0000f680*/ MOV         R1, R2 
    /*0000f684*/ STR         R2, [SP, #56]               @ 0x38 
    /*0000f688*/ LDR         R2, [SP, #92]               @ 0x5c 
    /*0000f68c*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0000f690*/ MOVW        R3, #0                      @ g_stCommCtx [R_ARM_MOVW_ABS_NC: .bss+0x16c8] 
    /*0000f694*/ MOVT        R3, #0                      @ g_stCommCtx [R_ARM_MOVT_ABS: .bss+0x16c8] 
    /*0000f698*/ LDR         R5, [R2, SL, LSL #2] 
    /*0000f69c*/ MOV         R2, #1 
    /*0000f6a0*/ CMP         R1, #0 
    /*0000f6a4*/ CMPNE       R5, #0 
    /*0000f6a8*/ MOVNE       R1, #1 
    /*0000f6ac*/ MOVEQ       R1, #0 
    /*0000f6b0*/ CMP         R3, #0 
    /*0000f6b4*/ MOVEQ       R2, R4 
    /*0000f6b8*/ TST         R1, R2 
    /*0000f6bc*/ BEQ         VPSS_ProcChnOutputResolution_xf9e4
    /*0000f6c0*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000f6c4*/ ADD         R6, R5, #19200              @ 0x4b00 
    /*0000f6c8*/ ADD         R8, R5, #15488              @ 0x3c80 
    /*0000f6cc*/ ADD         R5, R5, #31744              @ 0x7c00 
    /*0000f6d0*/ ADD         R6, R6, #84                 @ 0x54 
    /*0000f6d4*/ ADD         R8, R8, #24 
    /*0000f6d8*/ ADD         R5, R5, #112                @ 0x70 
    /*0000f6dc*/ SUB         FP, R2, #12 
    /*0000f6e0*/ MOVW        R3, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35e8] 
    /*0000f6e4*/ STR         SL, [SP, #64]               @ 0x40 
    /*0000f6e8*/ MOVT        R3, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35e8] 
    /*0000f6ec*/ STR         R9, [SP, #88]               @ 0x58 
    /*0000f6f0*/ STR         R3, [SP, #72]               @ 0x48 
    VPSS_ProcChnOutputResolution_xf6f4:
    /*0000f6f4*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0000f6f8*/ MOVW        R2, #28540                  @ 0x6f7c 
    /*0000f6fc*/ ADD         R3, R3, R4, LSL #2 
    /*0000f700*/ LDR         LR, [R3, R2] 
    /*0000f704*/ CMP         LR, #0 
    /*0000f708*/ BEQ         VPSS_ProcChnOutputResolution_xf858
    /*0000f70c*/ MOV         R1, #68                     @ 0x44 
    /*0000f710*/ LDR         IP, [R5] 
    /*0000f714*/ MLA         R1, R1, R4, R3 
    /*0000f718*/ LDR         R9, [SP, #52]               @ 0x34 
    /*0000f71c*/ BIC         IP, IP, #2 
    /*0000f720*/ LDR         R7, [SP, #48]               @ 0x30 
    /*0000f724*/ LDR         R3, [R1, #812]              @ 0x32c 
    /*0000f728*/ CMP         R3, #0 
    /*0000f72c*/ LDR         R3, [R6, #200]              @ 0xc8 
    /*0000f730*/ LDMNE       R6, {R0, R2} 
    /*0000f734*/ LDMEQ       R8, {R0, R2} 
    /*0000f738*/ CMP         LR, #1 
    /*0000f73c*/ MOVNE       R7, R9 
    /*0000f740*/ CMP         IP, #1 
    /*0000f744*/ STR         R7, [SP, #76]               @ 0x4c 
    /*0000f748*/ MOVNE       IP, R2 
    /*0000f74c*/ MOVEQ       IP, R0 
    /*0000f750*/ MOVNE       R2, R0 
    /*0000f754*/ CMP         R3, #25 
    /*0000f758*/ STR         IP, [SP, #80]               @ 0x50 
    /*0000f75c*/ STR         R2, [SP, #84]               @ 0x54 
    /*0000f760*/ BEQ         VPSS_ProcChnOutputResolution_xfa14
    /*0000f764*/ CMP         R3, #26 
    /*0000f768*/ BEQ         VPSS_ProcChnOutputResolution_xfa2c
    /*0000f76c*/ CMP         R3, #28 
    /*0000f770*/ BEQ         VPSS_ProcChnOutputResolution_xfa44
    /*0000f774*/ CMP         R3, #29 
    /*0000f778*/ BEQ         VPSS_ProcChnOutputResolution_xfa5c
    /*0000f77c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd0] 
    /*0000f780*/ CMP         R3, #39                     @ 0x27 
    /*0000f784*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd0] 
    /*0000f788*/ MOVW        IP, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bbc] 
    /*0000f78c*/ MOVT        IP, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bbc] 
    /*0000f790*/ MOVNE       IP, R2 
    VPSS_ProcChnOutputResolution_xf794:
    /*0000f794*/ LDR         R2, [R6, #36]               @ 0x24 
    /*0000f798*/ MVN         R9, #67                     @ 0x43 
    /*0000f79c*/ LDR         R0, [R6, #40]               @ 0x28 
    /*0000f7a0*/ CMP         R2, #3 
    /*0000f7a4*/ LDR         SL, [SP, #48]               @ 0x30 
    /*0000f7a8*/ MOVWLS      R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .rodata+0xaa0] 
    /*0000f7ac*/ MOVTLS      R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .rodata+0xaa0] 
    /*0000f7b0*/ ADDLS       R3, R3, R2, LSL #2 
    /*0000f7b4*/ LDR         R2, [R6, #28] 
    /*0000f7b8*/ MOVWHI      LR, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd8] 
    /*0000f7bc*/ MOVTHI      LR, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd8] 
    /*0000f7c0*/ LDRLS       LR, [R3, #56]               @ 0x38 
    /*0000f7c4*/ CMP         R2, #4 
    /*0000f7c8*/ MOVWLS      R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .rodata+0xaa0] 
    /*0000f7cc*/ MOVTLS      R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .rodata+0xaa0] 
    /*0000f7d0*/ ADDLS       R3, R3, R2, LSL #2 
    /*0000f7d4*/ LDR         R2, [FP] 
    /*0000f7d8*/ MOVWHI      R7, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd8] 
    /*0000f7dc*/ MOVTHI      R7, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd8] 
    /*0000f7e0*/ LDRLS       R7, [R3, #36]               @ 0x24 
    /*0000f7e4*/ MOVW        R3, #31836                  @ 0x7c5c 
    /*0000f7e8*/ MLA         R9, R9, R4, R3 
    /*0000f7ec*/ STR         R2, [SP, #32] 
    /*0000f7f0*/ CMP         R0, #0 
    /*0000f7f4*/ LDR         R2, [SP, #52]               @ 0x34 
    /*0000f7f8*/ MOV         R3, R4 
    /*0000f7fc*/ MOVNE       R2, SL 
    /*0000f800*/ LDR         SL, [SP, #68]               @ 0x44 
    /*0000f804*/ MOV         R0, R2 
    /*0000f808*/ LDR         R2, [SP, #64]               @ 0x40 
    /*0000f80c*/ LDR         R9, [R1, R9] 
    /*0000f810*/ STR         IP, [SP, #12] 
    /*0000f814*/ LDR         IP, [SP, #80]               @ 0x50 
    /*0000f818*/ LDR         R1, [SP, #72]               @ 0x48 
    /*0000f81c*/ STR         R0, [SP, #24] 
    /*0000f820*/ MOV         R0, SL 
    /*0000f824*/ STR         IP, [SP, #8] 
    /*0000f828*/ LDR         IP, [SP, #84]               @ 0x54 
    /*0000f82c*/ STR         R7, [SP, #20] 
    /*0000f830*/ STR         R9, [SP, #28] 
    /*0000f834*/ STR         IP, [SP, #4] 
    /*0000f838*/ LDR         IP, [SP, #76]               @ 0x4c 
    /*0000f83c*/ STR         LR, [SP, #16] 
    /*0000f840*/ STR         IP, [SP] 
    /*0000f844*/ BL          0x000000000000F844          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f848*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0000f84c*/ MOV         R0, SL 
    /*0000f850*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*0000f854*/ BL          0x000000000000F854          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VPSS_ProcChnOutputResolution_xf858:
    /*0000f858*/ ADD         R4, R4, #1 
    /*0000f85c*/ ADD         FP, FP, #4 
    /*0000f860*/ CMP         R4, #3 
    /*0000f864*/ ADD         R6, R6, #752                @ 0x2f0 
    /*0000f868*/ ADD         R8, R8, #24 
    /*0000f86c*/ ADD         R5, R5, #640                @ 0x280 
    /*0000f870*/ BNE         VPSS_ProcChnOutputResolution_xf6f4
    /*0000f874*/ LDR         SL, [SP, #64]               @ 0x40 
    /*0000f878*/ LDR         R9, [SP, #88]               @ 0x58 
    /*0000f87c*/ BL          0x000000000000F87C          @ VPSS_DRV_IsSupportExtChn [R_ARM_CALL: .text+0x20220] 
    /*0000f880*/ CMP         R0, #0 
    /*0000f884*/ BEQ         VPSS_ProcChnOutputResolution_xf9e4
    /*0000f888*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0000f88c*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35e8] 
    /*0000f890*/ LDR         R7, [SP, #44]               @ 0x2c 
    /*0000f894*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35e8] 
    /*0000f898*/ ADD         R6, R3, #28416              @ 0x6f00 
    /*0000f89c*/ STR         R2, [SP, #72]               @ 0x48 
    /*0000f8a0*/ ADD         R6, R6, #136                @ 0x88 
    /*0000f8a4*/ MOV         R5, R3 
    /*0000f8a8*/ STR         SL, [SP, #64]               @ 0x40 
    /*0000f8ac*/ STR         R9, [SP, #76]               @ 0x4c 
    /*0000f8b0*/ B           VPSS_ProcChnOutputResolution_xf99c
    VPSS_ProcChnOutputResolution_xf8b4:
    /*0000f8b4*/ CMP         R3, #26 
    /*0000f8b8*/ BEQ         VPSS_ProcChnOutputResolution_xfa20
    /*0000f8bc*/ CMP         R3, #28 
    /*0000f8c0*/ BEQ         VPSS_ProcChnOutputResolution_xfa38
    /*0000f8c4*/ CMP         R3, #29 
    /*0000f8c8*/ BEQ         VPSS_ProcChnOutputResolution_xfa50
    /*0000f8cc*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd0] 
    /*0000f8d0*/ CMP         R3, #39                     @ 0x27 
    /*0000f8d4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd0] 
    /*0000f8d8*/ MOVW        LR, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bbc] 
    /*0000f8dc*/ MOVT        LR, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bbc] 
    /*0000f8e0*/ MOVNE       LR, R2 
    VPSS_ProcChnOutputResolution_xf8e4:
    /*0000f8e4*/ LDR         R2, [R5, #140]              @ 0x8c 
    /*0000f8e8*/ LDR         R1, [R5, #152]              @ 0x98 
    /*0000f8ec*/ CMP         R2, #3 
    /*0000f8f0*/ LDR         SL, [R7] 
    /*0000f8f4*/ LDR         IP, [SP, #48]               @ 0x30 
    /*0000f8f8*/ MOVWLS      R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .rodata+0xaa0] 
    /*0000f8fc*/ MOVTLS      R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .rodata+0xaa0] 
    /*0000f900*/ ADDLS       R3, R3, R2, LSL #2 
    /*0000f904*/ LDR         R2, [R5, #148]              @ 0x94 
    /*0000f908*/ MOVWHI      R8, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd8] 
    /*0000f90c*/ MOVTHI      R8, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd8] 
    /*0000f910*/ LDRLS       R8, [R3, #56]               @ 0x38 
    /*0000f914*/ CMP         R2, #4 
    /*0000f918*/ STR         SL, [SP, #32] 
    /*0000f91c*/ MOVWLS      R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .rodata+0xaa0] 
    /*0000f920*/ MOVTLS      R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .rodata+0xaa0] 
    /*0000f924*/ ADDLS       R3, R3, R2, LSL #2 
    /*0000f928*/ MOVWHI      R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd8] 
    /*0000f92c*/ MOVTHI      R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd8] 
    /*0000f930*/ LDR         SL, [SP, #52]               @ 0x34 
    /*0000f934*/ LDRLS       R0, [R3, #36]               @ 0x24 
    /*0000f938*/ CMP         R1, #0 
    /*0000f93c*/ MOV         R3, R4 
    /*0000f940*/ LDR         R1, [SP, #72]               @ 0x48 
    /*0000f944*/ MOVNE       SL, IP 
    /*0000f948*/ LDR         IP, [R6, #3292]             @ 0xcdc 
    /*0000f94c*/ STR         SL, [SP, #24] 
    /*0000f950*/ LDR         SL, [SP, #68]               @ 0x44 
    /*0000f954*/ STR         IP, [SP, #28] 
    /*0000f958*/ LDR         IP, [SP, #56]               @ 0x38 
    /*0000f95c*/ STR         R0, [SP, #20] 
    /*0000f960*/ MOV         R0, SL 
    /*0000f964*/ LDR         R2, [SP, #64]               @ 0x40 
    /*0000f968*/ STR         R8, [SP, #16] 
    /*0000f96c*/ STMIB       SP, {R9, FP, LR} 
    /*0000f970*/ STR         IP, [SP] 
    /*0000f974*/ BL          0x000000000000F974          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000f978*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0000f97c*/ MOV         R0, SL 
    /*0000f980*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*0000f984*/ BL          0x000000000000F984          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VPSS_ProcChnOutputResolution_xf988:
    /*0000f988*/ ADD         R4, R4, #1 
    /*0000f98c*/ ADD         R7, R7, #4 
    /*0000f990*/ CMP         R4, #11 
    /*0000f994*/ ADD         R5, R5, #40                 @ 0x28 
    /*0000f998*/ BEQ         VPSS_ProcChnOutputResolution_xf9dc
    VPSS_ProcChnOutputResolution_xf99c:
    /*0000f99c*/ LDR         IP, [R6], #4 
    /*0000f9a0*/ CMP         IP, #0 
    /*0000f9a4*/ BEQ         VPSS_ProcChnOutputResolution_xf988
    /*0000f9a8*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0000f9ac*/ CMP         IP, #1 
    /*0000f9b0*/ LDR         R3, [R5, #144]              @ 0x90 
    /*0000f9b4*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0000f9b8*/ MOVNE       R2, R1 
    /*0000f9bc*/ CMP         R3, #25 
    /*0000f9c0*/ LDR         R9, [R5, #132]              @ 0x84 
    /*0000f9c4*/ STR         R2, [SP, #56]               @ 0x38 
    /*0000f9c8*/ LDR         FP, [R5, #136]              @ 0x88 
    /*0000f9cc*/ BNE         VPSS_ProcChnOutputResolution_xf8b4
    /*0000f9d0*/ MOVW        LR, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b98] 
    /*0000f9d4*/ MOVT        LR, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b98] 
    /*0000f9d8*/ B           VPSS_ProcChnOutputResolution_xf8e4
    VPSS_ProcChnOutputResolution_xf9dc:
    /*0000f9dc*/ LDR         SL, [SP, #64]               @ 0x40 
    /*0000f9e0*/ LDR         R9, [SP, #76]               @ 0x4c 
    VPSS_ProcChnOutputResolution_xf9e4:
    /*0000f9e4*/ MOV         R0, R9 
    /*0000f9e8*/ ADD         SL, SL, #1 
    /*0000f9ec*/ BL          0x000000000000F9EC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f9f0*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000f9f4*/ CMP         SL, #16 
    /*0000f9f8*/ ADD         R9, R9, #92                 @ 0x5c 
    /*0000f9fc*/ ADD         R3, R3, #44                 @ 0x2c 
    /*0000fa00*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000fa04*/ BNE         VPSS_ProcChnOutputResolution_xf668
    /*0000fa08*/ MOV         R0, #0 
    /*0000fa0c*/ ADD         SP, SP, #100                @ 0x64 
    /*0000fa10*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcChnOutputResolution_xfa14:
    /*0000fa14*/ MOVW        IP, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b98] 
    /*0000fa18*/ MOVT        IP, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b98] 
    /*0000fa1c*/ B           VPSS_ProcChnOutputResolution_xf794
    VPSS_ProcChnOutputResolution_xfa20:
    /*0000fa20*/ MOVW        LR, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ba4] 
    /*0000fa24*/ MOVT        LR, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ba4] 
    /*0000fa28*/ B           VPSS_ProcChnOutputResolution_xf8e4
    VPSS_ProcChnOutputResolution_xfa2c:
    /*0000fa2c*/ MOVW        IP, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ba4] 
    /*0000fa30*/ MOVT        IP, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ba4] 
    /*0000fa34*/ B           VPSS_ProcChnOutputResolution_xf794
    VPSS_ProcChnOutputResolution_xfa38:
    /*0000fa38*/ MOVW        LR, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bb0] 
    /*0000fa3c*/ MOVT        LR, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bb0] 
    /*0000fa40*/ B           VPSS_ProcChnOutputResolution_xf8e4
    VPSS_ProcChnOutputResolution_xfa44:
    /*0000fa44*/ MOVW        IP, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bb0] 
    /*0000fa48*/ MOVT        IP, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bb0] 
    /*0000fa4c*/ B           VPSS_ProcChnOutputResolution_xf794
    VPSS_ProcChnOutputResolution_xfa50:
    /*0000fa50*/ MOVW        LR, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bc4] 
    /*0000fa54*/ MOVT        LR, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bc4] 
    /*0000fa58*/ B           VPSS_ProcChnOutputResolution_xf8e4
    VPSS_ProcChnOutputResolution_xfa5c:
    /*0000fa5c*/ MOVW        IP, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bc4] 
    /*0000fa60*/ MOVT        IP, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bc4] 
    /*0000fa64*/ B           VPSS_ProcChnOutputResolution_xf794
    VPSS_ProcChnOutputResolution_xfa68:
    /*0000fa68*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000fa6c*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000fa70*/ ADD         SP, SP, #100                @ 0x64 
    /*0000fa74*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000fa78*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000fa7c*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
    /*0000fa80*/ ANDEQ       R1, R0, R4, LSR #2          @ g_stCommCtx [R_ARM_ABS32: .bss+0x16c8] 
FUNC_END VPSS_ProcChnOutputResolution


FUNC_BEGIN VPSS_PrintOperationMode
    /*0000fa84*/ CMP         R0, #0 
    /*0000fa88*/ BEQ         VPSS_PrintOperationMode_xfaac
    /*0000fa8c*/ CMP         R0, #1 
    /*0000fa90*/ MOVW        R3, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e40] 
    /*0000fa94*/ MOVW        R2, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3610] 
    /*0000fa98*/ MOVT        R3, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e40] 
    /*0000fa9c*/ MOVT        R2, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3610] 
    /*0000faa0*/ MOVEQ       R0, R3 
    /*0000faa4*/ MOVNE       R0, R2 
    /*0000faa8*/ BX          LR 
    VPSS_PrintOperationMode_xfaac:
    /*0000faac*/ MOVW        R0, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e38] 
    /*0000fab0*/ MOVT        R0, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e38] 
    /*0000fab4*/ BX          LR 
FUNC_END VPSS_PrintOperationMode


FUNC_BEGIN VPSS_GrpProcNrXAttr
    /*0000fab8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000fabc*/ MOVW        R1, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3614] 
    /*0000fac0*/ MOVT        R1, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3614] 
    /*0000fac4*/ MOV         R7, R0 
    /*0000fac8*/ BL          0x000000000000FAC8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000facc*/ LDR         R5, [PC, #72]               @ 0x000000000000fb1c 
    /*0000fad0*/ MOV         R4, #0 
    VPSS_GrpProcNrXAttr_xfad4:
    /*0000fad4*/ MOV         R0, R5 
    /*0000fad8*/ BL          0x000000000000FAD8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000fadc*/ MOV         R1, R7 
    /*0000fae0*/ SUBS        R6, R0, #0 
    /*0000fae4*/ MOV         R0, R4 
    /*0000fae8*/ ADD         R4, R4, #1 
    /*0000faec*/ BNE         VPSS_GrpProcNrXAttr_xfb10
    /*0000faf0*/ BL          0x000000000000FAF0          @ VPSS_DRV_ProcNRXParam [R_ARM_CALL: .text+0x1ef8c] 
    /*0000faf4*/ MOV         R0, R5 
    /*0000faf8*/ BL          0x000000000000FAF8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fafc*/ CMP         R4, #16 
    /*0000fb00*/ ADD         R5, R5, #92                 @ 0x5c 
    /*0000fb04*/ BNE         VPSS_GrpProcNrXAttr_xfad4
    /*0000fb08*/ MOV         R0, R6 
    /*0000fb0c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_GrpProcNrXAttr_xfb10:
    /*0000fb10*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000fb14*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000fb18*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*0000fb1c*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
FUNC_END VPSS_GrpProcNrXAttr


FUNC_BEGIN VPSS_ProcChnRotate
    /*0000fb20*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000fb24*/ SUB         SP, SP, #28 
    /*0000fb28*/ LDR         R7, [PC, #312]              @ 0x000000000000fc68 
    /*0000fb2c*/ MOV         R4, R0 
    /*0000fb30*/ LDR         SL, [PC, #308]              @ 0x000000000000fc6c 
    /*0000fb34*/ MOVW        R1, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3684] 
    /*0000fb38*/ LDR         R9, [PC, #304]              @ 0x000000000000fc70 
    /*0000fb3c*/ MOVT        R1, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3684] 
    /*0000fb40*/ STR         R0, [SP, #12] 
    /*0000fb44*/ MOV         R8, #0 
    /*0000fb48*/ BL          0x000000000000FB48          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fb4c*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3700] 
    /*0000fb50*/ MOV         R0, R4 
    /*0000fb54*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3700] 
    /*0000fb58*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30e0] 
    /*0000fb5c*/ STR         R2, [SP] 
    /*0000fb60*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30e0] 
    /*0000fb64*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*0000fb68*/ MOVW        R1, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x36f4] 
    /*0000fb6c*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*0000fb70*/ MOVT        R1, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0x36f4] 
    /*0000fb74*/ BL          0x000000000000FB74          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fb78*/ MOVW        R3, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3708] 
    /*0000fb7c*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .rodata+0xaa0] 
    /*0000fb80*/ MOVT        R3, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3708] 
    /*0000fb84*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .rodata+0xaa0] 
    /*0000fb88*/ STR         R3, [SP, #16] 
    /*0000fb8c*/ STR         R2, [SP, #20] 
    VPSS_ProcChnRotate_xfb90:
    /*0000fb90*/ MOV         R0, R7 
    /*0000fb94*/ BL          0x000000000000FB94          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000fb98*/ SUBS        R6, R0, #0 
    /*0000fb9c*/ BNE         VPSS_ProcChnRotate_xfc58
    /*0000fba0*/ LDR         R5, [SL, #4]! 
    /*0000fba4*/ LDR         R4, [R9, #4]! 
    /*0000fba8*/ CMP         R5, #0 
    /*0000fbac*/ CMPNE       R4, #0 
    /*0000fbb0*/ BEQ         VPSS_ProcChnRotate_xfbe8
    /*0000fbb4*/ ADD         R5, R5, #28416              @ 0x6f00 
    /*0000fbb8*/ ADD         R4, R4, #31744              @ 0x7c00 
    /*0000fbbc*/ MOVW        FP, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0000fbc0*/ ADD         R5, R5, #124                @ 0x7c 
    /*0000fbc4*/ ADD         R4, R4, #112                @ 0x70 
    /*0000fbc8*/ MOVT        FP, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    VPSS_ProcChnRotate_xfbcc:
    /*0000fbcc*/ LDR         R3, [R5], #4 
    /*0000fbd0*/ CMP         R3, #1 
    /*0000fbd4*/ BEQ         VPSS_ProcChnRotate_xfc0c
    VPSS_ProcChnRotate_xfbd8:
    /*0000fbd8*/ ADD         R6, R6, #1 
    /*0000fbdc*/ ADD         R4, R4, #640                @ 0x280 
    /*0000fbe0*/ CMP         R6, #3 
    /*0000fbe4*/ BNE         VPSS_ProcChnRotate_xfbcc
    VPSS_ProcChnRotate_xfbe8:
    /*0000fbe8*/ MOV         R0, R7 
    /*0000fbec*/ ADD         R8, R8, #1 
    /*0000fbf0*/ BL          0x000000000000FBF0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fbf4*/ CMP         R8, #16 
    /*0000fbf8*/ ADD         R7, R7, #92                 @ 0x5c 
    /*0000fbfc*/ BNE         VPSS_ProcChnRotate_xfb90
    /*0000fc00*/ MOV         R0, #0 
    /*0000fc04*/ ADD         SP, SP, #28 
    /*0000fc08*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcChnRotate_xfc0c:
    /*0000fc0c*/ LDR         R3, [R4] 
    /*0000fc10*/ CMP         R3, #0 
    /*0000fc14*/ SUB         R2, R3, #1 
    /*0000fc18*/ BEQ         VPSS_ProcChnRotate_xfbd8
    /*0000fc1c*/ LDR         R3, [SP, #20] 
    /*0000fc20*/ CMP         R2, #2 
    /*0000fc24*/ LDR         R1, [SP, #16] 
    /*0000fc28*/ ADD         R2, R3, R2, LSL #2 
    /*0000fc2c*/ MOV         R3, #0 
    /*0000fc30*/ LDR         R0, [SP, #12] 
    /*0000fc34*/ LDRLS       R3, [R2, #72]               @ 0x48 
    /*0000fc38*/ MOV         R2, R8 
    /*0000fc3c*/ STR         R3, [SP] 
    /*0000fc40*/ MOV         R3, R6 
    /*0000fc44*/ BL          0x000000000000FC44          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fc48*/ MOV         R1, FP 
    /*0000fc4c*/ LDR         R0, [SP, #12] 
    /*0000fc50*/ BL          0x000000000000FC50          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fc54*/ B           VPSS_ProcChnRotate_xfbd8
    VPSS_ProcChnRotate_xfc58:
    /*0000fc58*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000fc5c*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000fc60*/ ADD         SP, SP, #28 
    /*0000fc64*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000fc68*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000fc6c*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
    /*0000fc70*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstDevCtx [R_ARM_ABS32: .bss+0x3560] 
FUNC_END VPSS_ProcChnRotate


FUNC_BEGIN VPSS_ProcChnRotationExAttr
    /*0000fc74*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000fc78*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000fc7c*/ MOV         SL, R0 
    /*0000fc80*/ MOVW        R1, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3714] 
    /*0000fc84*/ LDR         R6, [PC, #424]              @ 0x000000000000fe34 
    /*0000fc88*/ MOVT        R1, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3714] 
    /*0000fc8c*/ LDR         R9, [PC, #420]              @ 0x000000000000fe38 
    /*0000fc90*/ BL          0x000000000000FC90          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fc94*/ MOVW        FP, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b90] 
    /*0000fc98*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3038] 
    /*0000fc9c*/ MOVW        R3, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3040] 
    /*0000fca0*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3038] 
    /*0000fca4*/ MOVT        R3, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3040] 
    /*0000fca8*/ STR         R2, [SP, #24] 
    /*0000fcac*/ STR         R3, [SP, #20] 
    /*0000fcb0*/ MOVW        R2, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37a8] 
    /*0000fcb4*/ MOVW        R3, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37b0] 
    /*0000fcb8*/ MOVT        R2, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37a8] 
    /*0000fcbc*/ MOVT        R3, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37b0] 
    /*0000fcc0*/ STR         R2, [SP, #16] 
    /*0000fcc4*/ STR         R3, [SP, #12] 
    /*0000fcc8*/ MOVW        R2, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37b8] 
    /*0000fccc*/ MOVW        R3, #0                      @ .LC138 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37c0] 
    /*0000fcd0*/ MOVT        R2, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37b8] 
    /*0000fcd4*/ MOVT        R3, #0                      @ .LC138 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37c0] 
    /*0000fcd8*/ STR         R2, [SP, #8] 
    /*0000fcdc*/ STR         R3, [SP, #4] 
    /*0000fce0*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f54] 
    /*0000fce4*/ MOV         R0, SL 
    /*0000fce8*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f54] 
    /*0000fcec*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30e0] 
    /*0000fcf0*/ STR         R2, [SP] 
    /*0000fcf4*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30e0] 
    /*0000fcf8*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*0000fcfc*/ MOVW        R1, #0                      @ .LC134 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3784] 
    /*0000fd00*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*0000fd04*/ MOVT        R1, #0                      @ .LC134 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3784] 
    /*0000fd08*/ MOVT        FP, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b90] 
    /*0000fd0c*/ BL          0x000000000000FD0C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fd10*/ MOV         R7, #0 
    /*0000fd14*/ MOV         R0, SL 
    /*0000fd18*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0000fd1c*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*0000fd20*/ BL          0x000000000000FD20          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fd24*/ MOVW        R3, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37cc] 
    /*0000fd28*/ MOVT        R3, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37cc] 
    /*0000fd2c*/ STR         R3, [SP, #36]               @ 0x24 
    VPSS_ProcChnRotationExAttr_xfd30:
    /*0000fd30*/ MOV         R0, R6 
    /*0000fd34*/ BL          0x000000000000FD34          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000fd38*/ SUBS        R5, R0, #0 
    /*0000fd3c*/ BNE         VPSS_ProcChnRotationExAttr_xfe24
    /*0000fd40*/ LDR         R4, [R9, #4]! 
    /*0000fd44*/ CMP         R4, #0 
    /*0000fd48*/ BEQ         VPSS_ProcChnRotationExAttr_xfd74
    /*0000fd4c*/ ADD         R4, R4, #28416              @ 0x6f00 
    /*0000fd50*/ MOVW        R8, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0000fd54*/ ADD         R4, R4, #124                @ 0x7c 
    /*0000fd58*/ MOVT        R8, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    VPSS_ProcChnRotationExAttr_xfd5c:
    /*0000fd5c*/ LDR         R3, [R4], #4 
    /*0000fd60*/ CMP         R3, #1 
    /*0000fd64*/ BEQ         VPSS_ProcChnRotationExAttr_xfd98
    VPSS_ProcChnRotationExAttr_xfd68:
    /*0000fd68*/ ADD         R5, R5, #1 
    /*0000fd6c*/ CMP         R5, #3 
    /*0000fd70*/ BNE         VPSS_ProcChnRotationExAttr_xfd5c
    VPSS_ProcChnRotationExAttr_xfd74:
    /*0000fd74*/ MOV         R0, R6 
    /*0000fd78*/ ADD         R7, R7, #1 
    /*0000fd7c*/ BL          0x000000000000FD7C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fd80*/ CMP         R7, #16 
    /*0000fd84*/ ADD         R6, R6, #92                 @ 0x5c 
    /*0000fd88*/ BNE         VPSS_ProcChnRotationExAttr_xfd30
    /*0000fd8c*/ MOV         R0, #0 
    /*0000fd90*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000fd94*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcChnRotationExAttr_xfd98:
    /*0000fd98*/ ADD         R2, SP, #44                 @ 0x2c 
    /*0000fd9c*/ MOV         R1, R5 
    /*0000fda0*/ MOV         R0, R7 
    /*0000fda4*/ BL          0x000000000000FDA4          @ VPSS_DRV_GetChnRotationExAttrSet [R_ARM_CALL: .text+0x196f8] 
    /*0000fda8*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000fdac*/ CMP         R3, #1 
    /*0000fdb0*/ BNE         VPSS_ProcChnRotationExAttr_xfd68
    /*0000fdb4*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0000fdb8*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .rodata+0xaa0] 
    /*0000fdbc*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .rodata+0xaa0] 
    /*0000fdc0*/ LDR         IP, [SP, #68]               @ 0x44 
    /*0000fdc4*/ CMP         R2, #2 
    /*0000fdc8*/ MOV         R0, #0 
    /*0000fdcc*/ ADD         R3, R3, R2, LSL #2 
    /*0000fdd0*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*0000fdd4*/ LDR         LR, [SP, #64]               @ 0x40 
    /*0000fdd8*/ MOV         R2, R7 
    /*0000fddc*/ LDRLS       R0, [R3, #84]               @ 0x54 
    /*0000fde0*/ MOV         R3, R5 
    /*0000fde4*/ STR         IP, [SP, #24] 
    /*0000fde8*/ LDR         IP, [SP, #52]               @ 0x34 
    /*0000fdec*/ STR         R0, [SP, #4] 
    /*0000fdf0*/ LDR         R0, [SP, #56]               @ 0x38 
    /*0000fdf4*/ STR         R1, [SP, #16] 
    /*0000fdf8*/ STR         FP, [SP] 
    /*0000fdfc*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000fe00*/ STR         R0, [SP, #12] 
    /*0000fe04*/ MOV         R0, SL 
    /*0000fe08*/ STR         LR, [SP, #20] 
    /*0000fe0c*/ STR         IP, [SP, #8] 
    /*0000fe10*/ BL          0x000000000000FE10          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fe14*/ MOV         R1, R8 
    /*0000fe18*/ MOV         R0, SL 
    /*0000fe1c*/ BL          0x000000000000FE1C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fe20*/ B           VPSS_ProcChnRotationExAttr_xfd68
    VPSS_ProcChnRotationExAttr_xfe24:
    /*0000fe24*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000fe28*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000fe2c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000fe30*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000fe34*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0000fe38*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
FUNC_END VPSS_ProcChnRotationExAttr


FUNC_BEGIN VPSS_ProcChnLDCAttr
    /*0000fe3c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000fe40*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000fe44*/ MOV         FP, R0 
    /*0000fe48*/ MOVW        R1, #0                      @ .LC140 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37f0] 
    /*0000fe4c*/ MOVT        R1, #0                      @ .LC140 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37f0] 
    /*0000fe50*/ LDR         R6, [PC, #424]              @ 0x0000000000010000 
    /*0000fe54*/ BL          0x000000000000FE54          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fe58*/ MOVW        R2, #0                      @ .LC142 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000fe5c*/ MOVW        R3, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37a8] 
    /*0000fe60*/ MOVT        R2, #0                      @ .LC142 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*0000fe64*/ MOVT        R3, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37a8] 
    /*0000fe68*/ STR         R2, [SP, #28] 
    /*0000fe6c*/ STR         R3, [SP, #24] 
    /*0000fe70*/ MOVW        R2, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37b0] 
    /*0000fe74*/ MOVW        R3, #0                      @ .LC143 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3894] 
    /*0000fe78*/ MOVT        R2, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37b0] 
    /*0000fe7c*/ MOVT        R3, #0                      @ .LC143 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3894] 
    /*0000fe80*/ STR         R2, [SP, #20] 
    /*0000fe84*/ STR         R3, [SP, #16] 
    /*0000fe88*/ MOVW        R2, #0                      @ .LC144 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x389c] 
    /*0000fe8c*/ MOVW        R3, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38a4] 
    /*0000fe90*/ MOVT        R2, #0                      @ .LC144 [R_ARM_MOVT_ABS: .rodata.str1.4+0x389c] 
    /*0000fe94*/ MOVT        R3, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38a4] 
    /*0000fe98*/ STR         R2, [SP, #12] 
    /*0000fe9c*/ STR         R3, [SP, #8] 
    /*0000fea0*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f28] 
    /*0000fea4*/ MOVW        R3, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f54] 
    /*0000fea8*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f28] 
    /*0000feac*/ MOVT        R3, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f54] 
    /*0000feb0*/ STR         R2, [SP, #4] 
    /*0000feb4*/ STR         R3, [SP] 
    /*0000feb8*/ MOV         R0, FP 
    /*0000febc*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30e0] 
    /*0000fec0*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*0000fec4*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30e0] 
    /*0000fec8*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*0000fecc*/ MOVW        R1, #0                      @ .LC141 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3860] 
    /*0000fed0*/ MOVT        R1, #0                      @ .LC141 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3860] 
    /*0000fed4*/ BL          0x000000000000FED4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fed8*/ MOV         R0, FP 
    /*0000fedc*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0000fee0*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*0000fee4*/ BL          0x000000000000FEE4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000fee8*/ LDR         R9, [PC, #276]              @ 0x0000000000010004 
    /*0000feec*/ MOVW        SL, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b90] 
    /*0000fef0*/ MOVT        SL, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b90] 
    /*0000fef4*/ MOV         R7, #0 
    VPSS_ProcChnLDCAttr_xfef8:
    /*0000fef8*/ MOV         R0, R6 
    /*0000fefc*/ BL          0x000000000000FEFC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000ff00*/ SUBS        R5, R0, #0 
    /*0000ff04*/ BNE         VPSS_ProcChnLDCAttr_xfff0
    /*0000ff08*/ LDR         R4, [R9, #4]! 
    /*0000ff0c*/ CMP         R4, #0 
    /*0000ff10*/ BEQ         VPSS_ProcChnLDCAttr_xff3c
    /*0000ff14*/ ADD         R4, R4, #28416              @ 0x6f00 
    /*0000ff18*/ MOVW        R8, #0                      @ .LC146 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38ac] 
    /*0000ff1c*/ ADD         R4, R4, #124                @ 0x7c 
    /*0000ff20*/ MOVT        R8, #0                      @ .LC146 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38ac] 
    VPSS_ProcChnLDCAttr_xff24:
    /*0000ff24*/ LDR         R3, [R4], #4 
    /*0000ff28*/ CMP         R3, #1 
    /*0000ff2c*/ BEQ         VPSS_ProcChnLDCAttr_xff60
    VPSS_ProcChnLDCAttr_xff30:
    /*0000ff30*/ ADD         R5, R5, #1 
    /*0000ff34*/ CMP         R5, #3 
    /*0000ff38*/ BNE         VPSS_ProcChnLDCAttr_xff24
    VPSS_ProcChnLDCAttr_xff3c:
    /*0000ff3c*/ MOV         R0, R6 
    /*0000ff40*/ ADD         R7, R7, #1 
    /*0000ff44*/ BL          0x000000000000FF44          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ff48*/ CMP         R7, #16 
    /*0000ff4c*/ ADD         R6, R6, #92                 @ 0x5c 
    /*0000ff50*/ BNE         VPSS_ProcChnLDCAttr_xfef8
    /*0000ff54*/ MOV         R0, #0 
    /*0000ff58*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000ff5c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcChnLDCAttr_xff60:
    /*0000ff60*/ ADD         R2, SP, #32 
    /*0000ff64*/ MOV         R1, R5 
    /*0000ff68*/ MOV         R0, R7 
    /*0000ff6c*/ BL          0x000000000000FF6C          @ VPSS_DRV_GetChnLDCAttrSet [R_ARM_CALL: .text+0x194c0] 
    /*0000ff70*/ LDR         R3, [SP, #32] 
    /*0000ff74*/ CMP         R3, #1 
    /*0000ff78*/ BNE         VPSS_ProcChnLDCAttr_xff30
    /*0000ff7c*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0000ff80*/ MOVW        R1, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b94] 
    /*0000ff84*/ MOVT        R1, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b94] 
    /*0000ff88*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0000ff8c*/ CMP         R2, #1 
    /*0000ff90*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000ff94*/ LDR         R2, [SP, #52]               @ 0x34 
    /*0000ff98*/ MOVNE       IP, R1 
    /*0000ff9c*/ MOVEQ       IP, SL 
    /*0000ffa0*/ LDR         R1, [SP, #48]               @ 0x30 
    /*0000ffa4*/ LDR         LR, [SP, #60]               @ 0x3c 
    /*0000ffa8*/ STM         SP, {SL, IP} 
    /*0000ffac*/ LDR         IP, [SP, #40]               @ 0x28 
    /*0000ffb0*/ STR         R3, [SP, #24] 
    /*0000ffb4*/ MOV         R3, R5 
    /*0000ffb8*/ STR         R2, [SP, #20] 
    /*0000ffbc*/ MOV         R2, R7 
    /*0000ffc0*/ STR         R1, [SP, #16] 
    /*0000ffc4*/ MOV         R1, R8 
    /*0000ffc8*/ STR         R0, [SP, #12] 
    /*0000ffcc*/ MOV         R0, FP 
    /*0000ffd0*/ STR         LR, [SP, #28] 
    /*0000ffd4*/ STR         IP, [SP, #8] 
    /*0000ffd8*/ BL          0x000000000000FFD8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ffdc*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0000ffe0*/ MOV         R0, FP 
    /*0000ffe4*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*0000ffe8*/ BL          0x000000000000FFE8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000ffec*/ B           VPSS_ProcChnLDCAttr_xff30
    VPSS_ProcChnLDCAttr_xfff0:
    /*0000fff0*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000fff4*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000fff8*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000fffc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00010000*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*00010004*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
FUNC_END VPSS_ProcChnLDCAttr


FUNC_BEGIN VPSS_ProcChnSpreadAttr
    /*00010008*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001000c*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00010010*/ MOV         SL, R0 
    /*00010014*/ MOVW        R1, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38d0] 
    /*00010018*/ LDR         R6, [PC, #340]              @ 0x0000000000010174 
    /*0001001c*/ MOVT        R1, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38d0] 
    /*00010020*/ LDR         R9, [PC, #336]              @ 0x0000000000010178 
    /*00010024*/ BL          0x0000000000010024          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010028*/ MOVW        FP, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b90] 
    /*0001002c*/ MOVW        R2, #0                      @ .LC149 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3954] 
    /*00010030*/ MOVW        R3, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x395c] 
    /*00010034*/ MOVT        R2, #0                      @ .LC149 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3954] 
    /*00010038*/ MOVT        R3, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0x395c] 
    /*0001003c*/ STR         R2, [SP, #12] 
    /*00010040*/ STR         R3, [SP, #8] 
    /*00010044*/ MOVW        R2, #0                      @ .LC151 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3964] 
    /*00010048*/ MOVW        R3, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f54] 
    /*0001004c*/ MOVT        R2, #0                      @ .LC151 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3964] 
    /*00010050*/ MOVT        R3, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f54] 
    /*00010054*/ STR         R2, [SP, #4] 
    /*00010058*/ STR         R3, [SP] 
    /*0001005c*/ MOV         R0, SL 
    /*00010060*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30e0] 
    /*00010064*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*00010068*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30e0] 
    /*0001006c*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*00010070*/ MOVW        R1, #0                      @ .LC148 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3940] 
    /*00010074*/ MOVT        FP, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b90] 
    /*00010078*/ MOVT        R1, #0                      @ .LC148 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3940] 
    /*0001007c*/ MOV         R7, #0 
    /*00010080*/ BL          0x0000000000010080          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010084*/ MOV         R0, SL 
    /*00010088*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0001008c*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*00010090*/ BL          0x0000000000010090          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010094*/ MOVW        R3, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x396c] 
    /*00010098*/ MOVT        R3, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0x396c] 
    /*0001009c*/ STR         R3, [SP, #20] 
    VPSS_ProcChnSpreadAttr_x100a0:
    /*000100a0*/ MOV         R0, R6 
    /*000100a4*/ BL          0x00000000000100A4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000100a8*/ SUBS        R5, R0, #0 
    /*000100ac*/ BNE         VPSS_ProcChnSpreadAttr_x10164
    /*000100b0*/ LDR         R4, [R9, #4]! 
    /*000100b4*/ CMP         R4, #0 
    /*000100b8*/ BEQ         VPSS_ProcChnSpreadAttr_x100e4
    /*000100bc*/ ADD         R4, R4, #28416              @ 0x6f00 
    /*000100c0*/ MOVW        R8, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*000100c4*/ ADD         R4, R4, #124                @ 0x7c 
    /*000100c8*/ MOVT        R8, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    VPSS_ProcChnSpreadAttr_x100cc:
    /*000100cc*/ LDR         R3, [R4], #4 
    /*000100d0*/ CMP         R3, #1 
    /*000100d4*/ BEQ         VPSS_ProcChnSpreadAttr_x10108
    VPSS_ProcChnSpreadAttr_x100d8:
    /*000100d8*/ ADD         R5, R5, #1 
    /*000100dc*/ CMP         R5, #3 
    /*000100e0*/ BNE         VPSS_ProcChnSpreadAttr_x100cc
    VPSS_ProcChnSpreadAttr_x100e4:
    /*000100e4*/ MOV         R0, R6 
    /*000100e8*/ ADD         R7, R7, #1 
    /*000100ec*/ BL          0x00000000000100EC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000100f0*/ CMP         R7, #16 
    /*000100f4*/ ADD         R6, R6, #92                 @ 0x5c 
    /*000100f8*/ BNE         VPSS_ProcChnSpreadAttr_x100a0
    /*000100fc*/ MOV         R0, #0 
    /*00010100*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00010104*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcChnSpreadAttr_x10108:
    /*00010108*/ ADD         R2, SP, #24 
    /*0001010c*/ MOV         R1, R5 
    /*00010110*/ MOV         R0, R7 
    /*00010114*/ BL          0x0000000000010114          @ VPSS_DRV_GetChnSpreadAttrSet [R_ARM_CALL: .text+0x198b8] 
    /*00010118*/ LDR         R3, [SP, #24] 
    /*0001011c*/ CMP         R3, #1 
    /*00010120*/ BNE         VPSS_ProcChnSpreadAttr_x100d8
    /*00010124*/ LDR         R1, [SP, #28] 
    /*00010128*/ MOV         R3, R5 
    /*0001012c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00010130*/ MOV         R2, R7 
    /*00010134*/ LDR         IP, [SP, #32] 
    /*00010138*/ STR         R1, [SP, #12] 
    /*0001013c*/ STR         R0, [SP, #8] 
    /*00010140*/ MOV         R0, SL 
    /*00010144*/ LDR         R1, [SP, #20] 
    /*00010148*/ STR         FP, [SP] 
    /*0001014c*/ STR         IP, [SP, #4] 
    /*00010150*/ BL          0x0000000000010150          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010154*/ MOV         R1, R8 
    /*00010158*/ MOV         R0, SL 
    /*0001015c*/ BL          0x000000000001015C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010160*/ B           VPSS_ProcChnSpreadAttr_x100d8
    VPSS_ProcChnSpreadAttr_x10164:
    /*00010164*/ MOV         R0, #65024                  @ 0xfe00 
    /*00010168*/ MOVT        R0, #65535                  @ 0xffff 
    /*0001016c*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00010170*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00010174*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*00010178*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
FUNC_END VPSS_ProcChnSpreadAttr


FUNC_BEGIN VPSS_ProcExtChnFishEye
    /*0001017c*/ LDR         R3, [PC, #1264]             @ 0x0000000000010674 
    /*00010180*/ MOVW        R1, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3980] 
    /*00010184*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00010188*/ SUB         SP, SP, #100                @ 0x64 
    /*0001018c*/ MOV         R9, R0 
    /*00010190*/ MOVT        R1, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3980] 
    /*00010194*/ MOV         R7, R3 
    /*00010198*/ STR         R3, [SP, #92]               @ 0x5c 
    /*0001019c*/ BL          0x000000000001019C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000101a0*/ MOV         R0, R9 
    /*000101a4*/ MOVW        R2, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a18] 
    /*000101a8*/ MOVW        R3, #0                      @ .LC156 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a24] 
    /*000101ac*/ MOVT        R2, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a18] 
    /*000101b0*/ MOVT        R3, #0                      @ .LC156 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a24] 
    /*000101b4*/ STR         R2, [SP, #36]               @ 0x24 
    /*000101b8*/ MOVW        R1, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x39f0] 
    /*000101bc*/ STR         R3, [SP, #32] 
    /*000101c0*/ MOVT        R1, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0x39f0] 
    /*000101c4*/ MOVW        R2, #0                      @ .LC157 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a2c] 
    /*000101c8*/ MOVW        R3, #0                      @ .LC158 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a34] 
    /*000101cc*/ MOVT        R2, #0                      @ .LC157 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a2c] 
    /*000101d0*/ MOVT        R3, #0                      @ .LC158 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a34] 
    /*000101d4*/ STR         R2, [SP, #28] 
    /*000101d8*/ MOVW        R2, #0                      @ .LC159 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a3c] 
    /*000101dc*/ STR         R3, [SP, #24] 
    /*000101e0*/ MOVT        R2, #0                      @ .LC159 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a3c] 
    /*000101e4*/ MOVW        R3, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f00] 
    /*000101e8*/ STR         R2, [SP, #20] 
    /*000101ec*/ MOVT        R3, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f00] 
    /*000101f0*/ MOVW        R2, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a40] 
    /*000101f4*/ STR         R3, [SP, #16] 
    /*000101f8*/ MOVT        R2, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a40] 
    /*000101fc*/ MOVW        R3, #0                      @ .LC161 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a4c] 
    /*00010200*/ STR         R2, [SP, #12] 
    /*00010204*/ MOVT        R3, #0                      @ .LC161 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a4c] 
    /*00010208*/ MOVW        R2, #0                      @ .LC162 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a54] 
    /*0001020c*/ STR         R3, [SP, #8] 
    /*00010210*/ MOVT        R2, #0                      @ .LC162 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a54] 
    /*00010214*/ MOVW        R3, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f54] 
    /*00010218*/ STR         R2, [SP, #4] 
    /*0001021c*/ MOVT        R3, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f54] 
    /*00010220*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*00010224*/ STR         R3, [SP] 
    /*00010228*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*0001022c*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30e0] 
    /*00010230*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30e0] 
    /*00010234*/ BL          0x0000000000010234          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010238*/ MOV         R0, R9 
    /*0001023c*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*00010240*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*00010244*/ BL          0x0000000000010244          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010248*/ LDR         R3, [PC, #1064]             @ 0x0000000000010678 
    /*0001024c*/ LDR         R2, [PC, #1064]             @ 0x000000000001067c 
    /*00010250*/ MOV         FP, #0 
    /*00010254*/ STR         R9, [SP, #88]               @ 0x58 
    /*00010258*/ MOVW        R1, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b90] 
    /*0001025c*/ MOV         R8, R3 
    /*00010260*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b94] 
    /*00010264*/ MOV         R9, R2 
    /*00010268*/ MOVT        R1, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b90] 
    /*0001026c*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b94] 
    /*00010270*/ STR         R3, [SP, #56]               @ 0x38 
    /*00010274*/ STR         R2, [SP, #60]               @ 0x3c 
    /*00010278*/ STR         R1, [SP, #52]               @ 0x34 
    /*0001027c*/ STR         R0, [SP, #72]               @ 0x48 
    VPSS_ProcExtChnFishEye_x10280:
    /*00010280*/ MOV         R0, R7 
    /*00010284*/ BL          0x0000000000010284          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00010288*/ SUBS        R3, R0, #0 
    /*0001028c*/ STR         R3, [SP, #68]               @ 0x44 
    /*00010290*/ BNE         VPSS_ProcExtChnFishEye_x10664
    /*00010294*/ LDR         R6, [R8, #4]! 
    /*00010298*/ LDR         R4, [R9, #4]! 
    /*0001029c*/ CMP         R4, #0 
    /*000102a0*/ CMPNE       R6, #0 
    /*000102a4*/ BEQ         VPSS_ProcExtChnFishEye_x103d8
    /*000102a8*/ ADD         R6, R6, #28416              @ 0x6f00 
    /*000102ac*/ ADD         R4, R4, #37888              @ 0x9400 
    /*000102b0*/ MOVW        SL, #0                      @ .LC163 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a5c] 
    /*000102b4*/ ADD         R6, R6, #136                @ 0x88 
    /*000102b8*/ MOVT        SL, #0                      @ .LC163 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a5c] 
    /*000102bc*/ ADD         R4, R4, #192                @ 0xc0 
    /*000102c0*/ MOV         R5, #3 
    /*000102c4*/ STR         SL, [SP, #64]               @ 0x40 
    /*000102c8*/ B           VPSS_ProcExtChnFishEye_x102e0
    VPSS_ProcExtChnFishEye_x102cc:
    /*000102cc*/ ADD         R5, R5, #1 
    /*000102d0*/ ADD         R4, R4, #3808               @ 0xee0 
    /*000102d4*/ CMP         R5, #11 
    /*000102d8*/ ADD         R4, R4, #8 
    /*000102dc*/ BEQ         VPSS_ProcExtChnFishEye_x103d8
    VPSS_ProcExtChnFishEye_x102e0:
    /*000102e0*/ LDR         R3, [R6], #4 
    /*000102e4*/ CMP         R3, #1 
    /*000102e8*/ BNE         VPSS_ProcExtChnFishEye_x102cc
    /*000102ec*/ LDR         R3, [R4] 
    /*000102f0*/ CMP         R3, #1 
    /*000102f4*/ BNE         VPSS_ProcExtChnFishEye_x102cc
    /*000102f8*/ LDR         R1, [R4, #3596]             @ 0xe0c 
    /*000102fc*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .rodata+0xaa0] 
    /*00010300*/ LDR         R2, [R4, #3628]             @ 0xe2c 
    /*00010304*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .rodata+0xaa0] 
    /*00010308*/ LDR         R0, [SP, #52]               @ 0x34 
    /*0001030c*/ CMP         R1, #1 
    /*00010310*/ LDR         IP, [SP, #72]               @ 0x48 
    /*00010314*/ LDR         LR, [R4, #3608]             @ 0xe18 
    /*00010318*/ ADD         R3, R3, R2, LSL #2 
    /*0001031c*/ LDR         R1, [R4, #3632]             @ 0xe30 
    /*00010320*/ MOVNE       R0, IP 
    /*00010324*/ CMP         R2, #2 
    /*00010328*/ STR         R0, [SP, #84]               @ 0x54 
    /*0001032c*/ MOVW        IP, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd8] 
    /*00010330*/ LDR         R0, [R4, #3604]             @ 0xe14 
    /*00010334*/ MOVT        IP, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd8] 
    /*00010338*/ STR         LR, [SP, #80]               @ 0x50 
    /*0001033c*/ LDR         LR, [SP, #72]               @ 0x48 
    /*00010340*/ LDR         R2, [R4, #3624]             @ 0xe28 
    /*00010344*/ LDRLS       IP, [R3, #96]               @ 0x60 
    /*00010348*/ CMP         R0, #1 
    /*0001034c*/ STR         R1, [SP, #76]               @ 0x4c 
    /*00010350*/ MOV         R3, R5 
    /*00010354*/ LDR         R1, [SP, #52]               @ 0x34 
    /*00010358*/ MOVNE       R1, LR 
    /*0001035c*/ LDR         SL, [R4, #3600]             @ 0xe10 
    /*00010360*/ STR         R2, [SP, #36]               @ 0x24 
    /*00010364*/ MOV         R0, R1 
    /*00010368*/ LDR         R1, [R4, #3620]             @ 0xe24 
    /*0001036c*/ CMP         SL, #1 
    /*00010370*/ LDR         R2, [SP, #52]               @ 0x34 
    /*00010374*/ STR         R1, [SP, #32] 
    /*00010378*/ MOVNE       R2, LR 
    /*0001037c*/ LDR         LR, [R4, #3616]             @ 0xe20 
    /*00010380*/ MOV         SL, R2 
    /*00010384*/ LDR         R1, [SP, #64]               @ 0x40 
    /*00010388*/ MOV         R2, FP 
    /*0001038c*/ STR         LR, [SP, #28] 
    /*00010390*/ LDR         LR, [R4, #3612]             @ 0xe1c 
    /*00010394*/ STR         SL, [SP, #20] 
    /*00010398*/ STR         R0, [SP, #12] 
    /*0001039c*/ STR         LR, [SP, #24] 
    /*000103a0*/ LDR         LR, [SP, #80]               @ 0x50 
    /*000103a4*/ LDR         SL, [SP, #88]               @ 0x58 
    /*000103a8*/ STR         LR, [SP, #16] 
    /*000103ac*/ LDR         LR, [SP, #76]               @ 0x4c 
    /*000103b0*/ MOV         R0, SL 
    /*000103b4*/ STMIB       SP, {IP, LR} 
    /*000103b8*/ LDR         IP, [SP, #84]               @ 0x54 
    /*000103bc*/ STR         IP, [SP] 
    /*000103c0*/ BL          0x00000000000103C0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000103c4*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*000103c8*/ MOV         R0, SL 
    /*000103cc*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*000103d0*/ BL          0x00000000000103D0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000103d4*/ B           VPSS_ProcExtChnFishEye_x102cc
    VPSS_ProcExtChnFishEye_x103d8:
    /*000103d8*/ MOV         R0, R7 
    /*000103dc*/ ADD         FP, FP, #1 
    /*000103e0*/ BL          0x00000000000103E0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000103e4*/ CMP         FP, #16 
    /*000103e8*/ ADD         R7, R7, #92                 @ 0x5c 
    /*000103ec*/ BNE         VPSS_ProcExtChnFishEye_x10280
    /*000103f0*/ LDR         R9, [SP, #88]               @ 0x58 
    /*000103f4*/ MOVW        R3, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd8] 
    /*000103f8*/ MOVW        R1, #0                      @ .LC164 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a84] 
    /*000103fc*/ MOVT        R1, #0                      @ .LC164 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a84] 
    /*00010400*/ MOV         R4, R3 
    /*00010404*/ LDR         SL, [SP, #68]               @ 0x44 
    /*00010408*/ MOV         R0, R9 
    /*0001040c*/ MOVW        FP, #0                      @ .LC176 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b80] 
    /*00010410*/ BL          0x0000000000010410          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010414*/ MOVW        R2, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x395c] 
    /*00010418*/ MOVW        R3, #0                      @ .LC151 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3964] 
    /*0001041c*/ MOVT        R2, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0x395c] 
    /*00010420*/ MOVT        R3, #0                      @ .LC151 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3964] 
    /*00010424*/ STR         R2, [SP, #44]               @ 0x2c 
    /*00010428*/ STR         R3, [SP, #40]               @ 0x28 
    /*0001042c*/ MOVW        R2, #0                      @ .LC166 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b24] 
    /*00010430*/ MOVW        R3, #0                      @ .LC167 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b2c] 
    /*00010434*/ MOVT        R2, #0                      @ .LC166 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b24] 
    /*00010438*/ MOVT        R3, #0                      @ .LC167 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b2c] 
    /*0001043c*/ STR         R2, [SP, #36]               @ 0x24 
    /*00010440*/ STR         R3, [SP, #32] 
    /*00010444*/ MOVW        R2, #0                      @ .LC168 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b34] 
    /*00010448*/ MOVW        R3, #0                      @ .LC169 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b3c] 
    /*0001044c*/ MOVT        R2, #0                      @ .LC168 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b34] 
    /*00010450*/ MOVT        R3, #0                      @ .LC169 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b3c] 
    /*00010454*/ STR         R2, [SP, #28] 
    /*00010458*/ STR         R3, [SP, #24] 
    /*0001045c*/ MOVW        R2, #0                      @ .LC170 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b44] 
    /*00010460*/ MOVW        R3, #0                      @ .LC171 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b4c] 
    /*00010464*/ MOVT        R2, #0                      @ .LC170 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b44] 
    /*00010468*/ MOVT        R3, #0                      @ .LC171 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b4c] 
    /*0001046c*/ STR         R2, [SP, #20] 
    /*00010470*/ STR         R3, [SP, #16] 
    /*00010474*/ MOVW        R2, #0                      @ .LC172 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b50] 
    /*00010478*/ MOVW        R3, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b5c] 
    /*0001047c*/ MOVT        R2, #0                      @ .LC172 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b50] 
    /*00010480*/ MOVT        R3, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b5c] 
    /*00010484*/ STR         R2, [SP, #12] 
    /*00010488*/ STR         R3, [SP, #8] 
    /*0001048c*/ MOVW        R2, #0                      @ .LC174 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b68] 
    /*00010490*/ MOVW        R3, #0                      @ .LC175 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b74] 
    /*00010494*/ MOVT        R2, #0                      @ .LC174 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b68] 
    /*00010498*/ MOVT        R3, #0                      @ .LC175 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b74] 
    /*0001049c*/ STR         R2, [SP, #4] 
    /*000104a0*/ STR         R3, [SP] 
    /*000104a4*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*000104a8*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30e0] 
    /*000104ac*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*000104b0*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30e0] 
    /*000104b4*/ MOVW        R1, #0                      @ .LC165 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3af4] 
    /*000104b8*/ MOV         R0, R9 
    /*000104bc*/ MOVT        R1, #0                      @ .LC165 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3af4] 
    /*000104c0*/ BL          0x00000000000104C0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000104c4*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*000104c8*/ MOV         R0, R9 
    /*000104cc*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*000104d0*/ BL          0x00000000000104D0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000104d4*/ MOVT        FP, #0                      @ .LC176 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b80] 
    /*000104d8*/ STR         FP, [SP, #52]               @ 0x34 
    /*000104dc*/ MOV         R3, R4 
    /*000104e0*/ LDR         FP, [SP, #92]               @ 0x5c 
    /*000104e4*/ MOVT        R3, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd8] 
    /*000104e8*/ STR         R3, [SP, #72]               @ 0x48 
    /*000104ec*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .rodata+0xaa0] 
    /*000104f0*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .rodata+0xaa0] 
    /*000104f4*/ STR         R3, [SP, #76]               @ 0x4c 
    VPSS_ProcExtChnFishEye_x104f8:
    /*000104f8*/ MOV         R0, FP 
    /*000104fc*/ BL          0x00000000000104FC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00010500*/ CMP         R0, #0 
    /*00010504*/ BNE         VPSS_ProcExtChnFishEye_x10664
    /*00010508*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0001050c*/ LDR         R7, [R3, #4]! 
    /*00010510*/ STR         R3, [SP, #56]               @ 0x38 
    /*00010514*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*00010518*/ LDR         R4, [R3, #4]! 
    /*0001051c*/ CMP         R4, #0 
    /*00010520*/ CMPNE       R7, #0 
    /*00010524*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00010528*/ BEQ         VPSS_ProcExtChnFishEye_x10640
    /*0001052c*/ ADD         R7, R7, #28416              @ 0x6f00 
    /*00010530*/ ADD         R4, R4, #41472              @ 0xa200 
    /*00010534*/ ADD         R7, R7, #136                @ 0x88 
    /*00010538*/ ADD         R4, R4, #244                @ 0xf4 
    /*0001053c*/ MOV         R6, #3 
    /*00010540*/ B           VPSS_ProcExtChnFishEye_x10558
    VPSS_ProcExtChnFishEye_x10544:
    /*00010544*/ ADD         R6, R6, #1 
    /*00010548*/ ADD         R4, R4, #3808               @ 0xee0 
    /*0001054c*/ CMP         R6, #11 
    /*00010550*/ ADD         R4, R4, #8 
    /*00010554*/ BEQ         VPSS_ProcExtChnFishEye_x10640
    VPSS_ProcExtChnFishEye_x10558:
    /*00010558*/ LDR         R3, [R7], #4 
    /*0001055c*/ CMP         R3, #1 
    /*00010560*/ BNE         VPSS_ProcExtChnFishEye_x10544
    /*00010564*/ LDR         R3, [R4, #-3636]            @ 0xfffff1cc 
    /*00010568*/ CMP         R3, #1 
    /*0001056c*/ BNE         VPSS_ProcExtChnFishEye_x10544
    /*00010570*/ LDR         R3, [R4, #-4] 
    /*00010574*/ CMP         R3, #0 
    /*00010578*/ BEQ         VPSS_ProcExtChnFishEye_x10544
    /*0001057c*/ STR         R7, [SP, #64]               @ 0x40 
    /*00010580*/ MOV         R5, R4 
    /*00010584*/ STR         FP, [SP, #68]               @ 0x44 
    /*00010588*/ MOV         R8, #0 
    /*0001058c*/ LDR         R7, [SP, #72]               @ 0x48 
    /*00010590*/ LDR         FP, [SP, #76]               @ 0x4c 
    VPSS_ProcExtChnFishEye_x10594:
    /*00010594*/ LDR         R0, [R5, #40]               @ 0x28 
    /*00010598*/ MOV         IP, R7 
    /*0001059c*/ LDR         R3, [R5] 
    /*000105a0*/ MOV         R2, SL 
    /*000105a4*/ LDR         R1, [SP, #52]               @ 0x34 
    /*000105a8*/ ADD         R5, R5, #44                 @ 0x2c 
    /*000105ac*/ STR         R0, [SP, #44]               @ 0x2c 
    /*000105b0*/ CMP         R3, #3 
    /*000105b4*/ LDR         LR, [R5, #-8] 
    /*000105b8*/ ADD         R3, FP, R3, LSL #2 
    /*000105bc*/ MOV         R0, R9 
    /*000105c0*/ LDRLS       IP, [R3, #108]              @ 0x6c 
    /*000105c4*/ MOV         R3, R6 
    /*000105c8*/ STR         LR, [SP, #40]               @ 0x28 
    /*000105cc*/ LDR         LR, [R5, #-12] 
    /*000105d0*/ STR         LR, [SP, #36]               @ 0x24 
    /*000105d4*/ LDR         LR, [R5, #-16] 
    /*000105d8*/ STR         LR, [SP, #32] 
    /*000105dc*/ LDR         LR, [R5, #-20]              @ 0xffffffec 
    /*000105e0*/ STR         LR, [SP, #28] 
    /*000105e4*/ LDR         LR, [R5, #-24]              @ 0xffffffe8 
    /*000105e8*/ STR         LR, [SP, #24] 
    /*000105ec*/ LDR         LR, [R5, #-28]              @ 0xffffffe4 
    /*000105f0*/ STR         LR, [SP, #20] 
    /*000105f4*/ LDR         LR, [R5, #-32]              @ 0xffffffe0 
    /*000105f8*/ STR         LR, [SP, #16] 
    /*000105fc*/ LDR         LR, [R5, #-36]              @ 0xffffffdc 
    /*00010600*/ STR         LR, [SP, #12] 
    /*00010604*/ LDR         LR, [R5, #-40]              @ 0xffffffd8 
    /*00010608*/ STM         SP, {R8, IP} 
    /*0001060c*/ ADD         R8, R8, #1 
    /*00010610*/ STR         LR, [SP, #8] 
    /*00010614*/ BL          0x0000000000010614          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010618*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*0001061c*/ MOV         R0, R9 
    /*00010620*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*00010624*/ BL          0x0000000000010624          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010628*/ LDR         R3, [R4, #-4] 
    /*0001062c*/ CMP         R3, R8 
    /*00010630*/ BHI         VPSS_ProcExtChnFishEye_x10594
    /*00010634*/ LDR         R7, [SP, #64]               @ 0x40 
    /*00010638*/ LDR         FP, [SP, #68]               @ 0x44 
    /*0001063c*/ B           VPSS_ProcExtChnFishEye_x10544
    VPSS_ProcExtChnFishEye_x10640:
    /*00010640*/ MOV         R0, FP 
    /*00010644*/ ADD         SL, SL, #1 
    /*00010648*/ BL          0x0000000000010648          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001064c*/ CMP         SL, #16 
    /*00010650*/ ADD         FP, FP, #92                 @ 0x5c 
    /*00010654*/ BNE         VPSS_ProcExtChnFishEye_x104f8
    /*00010658*/ MOV         R0, #0 
    /*0001065c*/ ADD         SP, SP, #100                @ 0x64 
    /*00010660*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_ProcExtChnFishEye_x10664:
    /*00010664*/ MOV         R0, #65024                  @ 0xfe00 
    /*00010668*/ MOVT        R0, #65535                  @ 0xffff 
    /*0001066c*/ ADD         SP, SP, #100                @ 0x64 
    /*00010670*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00010674*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*00010678*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
    /*0001067c*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstDevCtx [R_ARM_ABS32: .bss+0x3560] 
FUNC_END VPSS_ProcExtChnFishEye


FUNC_BEGIN VPSS_ProcFrameInterruptAttr
    /*00010680*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00010684*/ SUB         SP, SP, #8 
    /*00010688*/ MOV         R9, R0 
    /*0001068c*/ MOVW        R1, #0                      @ .LC180 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bcc] 
    /*00010690*/ MOVT        R1, #0                      @ .LC180 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bcc] 
    /*00010694*/ LDR         R4, [PC, #236]              @ 0x0000000000010788 
    /*00010698*/ BL          0x0000000000010698          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001069c*/ MOVW        R2, #0                      @ .LC183 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c54] 
    /*000106a0*/ MOV         R0, R9 
    /*000106a4*/ MOVT        R2, #0                      @ .LC183 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c54] 
    /*000106a8*/ MOVW        R3, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c3c] 
    /*000106ac*/ STR         R2, [SP] 
    /*000106b0*/ MOVT        R3, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c3c] 
    /*000106b4*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d68] 
    /*000106b8*/ MOVW        R1, #0                      @ .LC182 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c44] 
    /*000106bc*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d68] 
    /*000106c0*/ MOVT        R1, #0                      @ .LC182 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c44] 
    /*000106c4*/ LDR         R6, [PC, #192]              @ 0x000000000001078c 
    /*000106c8*/ BL          0x00000000000106C8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000106cc*/ MOVW        R8, #0                      @ .LC184 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c60] 
    /*000106d0*/ MOVW        R7, #0                      @ .LC177 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bb0] 
    /*000106d4*/ MOVW        SL, #0                      @ .LC178 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bb8] 
    /*000106d8*/ MOVT        R8, #0                      @ .LC184 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c60] 
    /*000106dc*/ MOVT        R7, #0                      @ .LC177 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bb0] 
    /*000106e0*/ MOVT        SL, #0                      @ .LC178 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bb8] 
    /*000106e4*/ MOV         R5, #0 
    VPSS_ProcFrameInterruptAttr_x106e8:
    /*000106e8*/ MOV         R0, R4 
    /*000106ec*/ BL          0x00000000000106EC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000106f0*/ MOV         R3, R7 
    /*000106f4*/ CMP         R0, #0 
    /*000106f8*/ BNE         VPSS_ProcFrameInterruptAttr_x10778
    /*000106fc*/ LDR         R2, [R6, #4]! 
    /*00010700*/ CMP         R2, #0 
    /*00010704*/ ADD         R1, R2, #28672              @ 0x7000 
    /*00010708*/ BEQ         VPSS_ProcFrameInterruptAttr_x10754
    /*0001070c*/ LDR         R2, [R1, #3684]             @ 0xe64 
    /*00010710*/ CMP         R2, #0 
    /*00010714*/ BEQ         VPSS_ProcFrameInterruptAttr_x1073c
    /*00010718*/ CMP         R2, #1 
    /*0001071c*/ MOVW        R3, #0                      @ .LC179 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bc0] 
    /*00010720*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd8] 
    /*00010724*/ MOVT        R3, #0                      @ .LC179 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bc0] 
    /*00010728*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd8] 
    /*0001072c*/ MOVEQ       R3, SL 
    /*00010730*/ BEQ         VPSS_ProcFrameInterruptAttr_x1073c
    /*00010734*/ CMP         R2, #2 
    /*00010738*/ MOVNE       R3, R0 
    VPSS_ProcFrameInterruptAttr_x1073c:
    /*0001073c*/ LDR         IP, [R1, #3688]             @ 0xe68 
    /*00010740*/ MOV         R2, R5 
    /*00010744*/ MOV         R1, R8 
    /*00010748*/ MOV         R0, R9 
    /*0001074c*/ STR         IP, [SP] 
    /*00010750*/ BL          0x0000000000010750          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VPSS_ProcFrameInterruptAttr_x10754:
    /*00010754*/ MOV         R0, R4 
    /*00010758*/ ADD         R5, R5, #1 
    /*0001075c*/ BL          0x000000000001075C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010760*/ CMP         R5, #16 
    /*00010764*/ ADD         R4, R4, #92                 @ 0x5c 
    /*00010768*/ BNE         VPSS_ProcFrameInterruptAttr_x106e8
    /*0001076c*/ MOV         R0, #0 
    /*00010770*/ ADD         SP, SP, #8 
    /*00010774*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_ProcFrameInterruptAttr_x10778:
    /*00010778*/ MOV         R0, #65024                  @ 0xfe00 
    /*0001077c*/ MOVT        R0, #65535                  @ 0xffff 
    /*00010780*/ ADD         SP, SP, #8 
    /*00010784*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*00010788*/ ANDEQ       R0, R0, IP, LSR #32         @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*0001078c*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGrpCtx [R_ARM_ABS32: .bss+0x0] 
FUNC_END VPSS_ProcFrameInterruptAttr


FUNC_BEGIN VPSS_GrpProc
    /*00010790*/ PUSH        {R4, LR} 
    /*00010794*/ MOV         R4, R0 
    /*00010798*/ BL          0x0000000000010798          @ VPSS_ProcGrpAttr [R_ARM_CALL: .text+0xe418] 
    /*0001079c*/ MOV         R0, R4 
    /*000107a0*/ BL          0x00000000000107A0          @ VPSS_ProcChnAttr [R_ARM_CALL: .text+0xe79c] 
    /*000107a4*/ MOV         R0, R4 
    /*000107a8*/ BL          0x00000000000107A8          @ VPSS_ProcExtChnAttr [R_ARM_CALL: .text+0xeaa0] 
    /*000107ac*/ MOV         R0, R4 
    /*000107b0*/ BL          0x00000000000107B0          @ VPSS_ProcGrpCrop [R_ARM_CALL: .text+0xee14] 
    /*000107b4*/ MOV         R0, R4 
    /*000107b8*/ BL          0x00000000000107B8          @ VPSS_ProcChnCrop [R_ARM_CALL: .text+0xf038] 
    /*000107bc*/ MOV         R0, R4 
    /*000107c0*/ BL          0x00000000000107C0          @ VPSS_ProcGrpPicQueue [R_ARM_CALL: .text+0xf2a4] 
    /*000107c4*/ MOV         R0, R4 
    /*000107c8*/ BL          0x00000000000107C8          @ VPSS_ProcGrpWorkStatus [R_ARM_CALL: .text+0xf3ac] 
    /*000107cc*/ MOV         R0, R4 
    /*000107d0*/ BL          0x00000000000107D0          @ VPSS_ProcChnOutputResolution [R_ARM_CALL: .text+0xf57c] 
    /*000107d4*/ MOV         R0, R4 
    /*000107d8*/ BL          0x00000000000107D8          @ VPSS_GrpProcNrXAttr [R_ARM_CALL: .text+0xfab8] 
    /*000107dc*/ MOV         R0, R4 
    /*000107e0*/ BL          0x00000000000107E0          @ VPSS_ProcChnRotate [R_ARM_CALL: .text+0xfb20] 
    /*000107e4*/ MOV         R0, R4 
    /*000107e8*/ BL          0x00000000000107E8          @ VPSS_ProcChnLDCAttr [R_ARM_CALL: .text+0xfe3c] 
    /*000107ec*/ MOV         R0, R4 
    /*000107f0*/ BL          0x00000000000107F0          @ VPSS_ProcChnRotationExAttr [R_ARM_CALL: .text+0xfc74] 
    /*000107f4*/ MOV         R0, R4 
    /*000107f8*/ BL          0x00000000000107F8          @ VPSS_ProcChnSpreadAttr [R_ARM_CALL: .text+0x10008] 
    /*000107fc*/ MOV         R0, R4 
    /*00010800*/ BL          0x0000000000010800          @ VPSS_ProcExtChnFishEye [R_ARM_CALL: .text+0x1017c] 
    /*00010804*/ MOV         R0, R4 
    /*00010808*/ BL          0x0000000000010808          @ VPSS_ProcChnLowdelayAttr [R_ARM_CALL: .text+0xec78] 
    /*0001080c*/ MOV         R0, R4 
    /*00010810*/ BL          0x0000000000010810          @ VPSS_ProcFrameInterruptAttr [R_ARM_CALL: .text+0x10680] 
    /*00010814*/ MOV         R0, #0 
    /*00010818*/ POP         {R4, PC} 
FUNC_END VPSS_GrpProc


FUNC_BEGIN VPSS_GrpProcEx
    /*0001081c*/ MOV         R0, #0 
    /*00010820*/ BX          LR 
FUNC_END VPSS_GrpProcEx


FUNC_BEGIN VPSS_COMM_Proc
    /*00010824*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00010828*/ MOV         R5, R0 
    /*0001082c*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00010830*/ MOVW        R4, #0                      @ g_stCommCtx [R_ARM_MOVW_ABS_NC: .bss+0x16c8] 
    /*00010834*/ BL          0x0000000000010834          @ VPSS_DRV_PrintWorkStatus [R_ARM_CALL: .text+0x25ee8] 
    /*00010838*/ MOVT        R4, #0                      @ g_stCommCtx [R_ARM_MOVT_ABS: .bss+0x16c8] 
    /*0001083c*/ MOV         R0, R5 
    /*00010840*/ MOVW        R1, #0                      @ .LC185 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c70] 
    /*00010844*/ MOVT        R1, #0                      @ .LC185 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c70] 
    /*00010848*/ BL          0x0000000000010848          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001084c*/ MOV         R0, R5 
    /*00010850*/ MOVW        R2, #0                      @ .LC189 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d1c] 
    /*00010854*/ MOVW        R3, #0                      @ .LC190 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d24] 
    /*00010858*/ MOVT        R2, #0                      @ .LC189 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d1c] 
    /*0001085c*/ MOVT        R3, #0                      @ .LC190 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d24] 
    /*00010860*/ STR         R2, [SP, #20] 
    /*00010864*/ MOVW        R1, #0                      @ .LC188 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cf8] 
    /*00010868*/ STR         R3, [SP, #16] 
    /*0001086c*/ MOVT        R1, #0                      @ .LC188 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cf8] 
    /*00010870*/ MOVW        R2, #0                      @ .LC191 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d30] 
    /*00010874*/ MOVW        R3, #0                      @ .LC192 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d3c] 
    /*00010878*/ MOVT        R2, #0                      @ .LC191 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d30] 
    /*0001087c*/ MOVT        R3, #0                      @ .LC192 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d3c] 
    /*00010880*/ STR         R2, [SP, #12] 
    /*00010884*/ MOVW        R2, #0                      @ .LC193 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d48] 
    /*00010888*/ STR         R3, [SP, #8] 
    /*0001088c*/ MOVT        R2, #0                      @ .LC193 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d48] 
    /*00010890*/ MOVW        R3, #0                      @ .LC194 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d54] 
    /*00010894*/ STR         R2, [SP, #4] 
    /*00010898*/ MOVT        R3, #0                      @ .LC194 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d54] 
    /*0001089c*/ MOVW        R2, #0                      @ .LC187 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cec] 
    /*000108a0*/ STR         R3, [SP] 
    /*000108a4*/ MOVT        R2, #0                      @ .LC187 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cec] 
    /*000108a8*/ MOVW        R3, #0                      @ .LC186 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ce0] 
    /*000108ac*/ MOVT        R3, #0                      @ .LC186 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ce0] 
    /*000108b0*/ BL          0x00000000000108B0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000108b4*/ LDR         LR, [R4, #2952]             @ 0xb88 
    /*000108b8*/ LDR         IP, [R4, #2940]             @ 0xb7c 
    /*000108bc*/ MOV         R0, R5 
    /*000108c0*/ LDR         R9, [R4, #2948]             @ 0xb84 
    /*000108c4*/ MOVW        R1, #0                      @ .LC195 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d5c] 
    /*000108c8*/ LDR         R8, [R4, #2964]             @ 0xb94 
    /*000108cc*/ MOVT        R1, #0                      @ .LC195 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d5c] 
    /*000108d0*/ LDR         R7, [R4, #2956]             @ 0xb8c 
    /*000108d4*/ LDR         R6, [R4, #2960]             @ 0xb90 
    /*000108d8*/ LDR         R3, [R4, #2932]             @ 0xb74 
    /*000108dc*/ LDR         R2, [R4, #2928]             @ 0xb70 
    /*000108e0*/ STM         SP, {IP, LR} 
    /*000108e4*/ STR         R9, [SP, #20] 
    /*000108e8*/ STR         R8, [SP, #16] 
    /*000108ec*/ STR         R7, [SP, #12] 
    /*000108f0*/ STR         R6, [SP, #8] 
    /*000108f4*/ BL          0x00000000000108F4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000108f8*/ MOV         R0, R5 
    /*000108fc*/ MOVW        R1, #0                      @ .LC196 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d80] 
    /*00010900*/ MOVT        R1, #0                      @ .LC196 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d80] 
    /*00010904*/ BL          0x0000000000010904          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010908*/ MOV         R0, R5 
    /*0001090c*/ MOVW        R2, #0                      @ .LC200 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e20] 
    /*00010910*/ MOVW        R3, #0                      @ .LC201 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e28] 
    /*00010914*/ MOVT        R2, #0                      @ .LC200 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e20] 
    /*00010918*/ MOVT        R3, #0                      @ .LC201 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e28] 
    /*0001091c*/ STR         R2, [SP, #24] 
    /*00010920*/ MOVW        R1, #0                      @ .LC199 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e00] 
    /*00010924*/ STR         R3, [SP, #20] 
    /*00010928*/ MOVT        R1, #0                      @ .LC199 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e00] 
    /*0001092c*/ MOVW        R2, #0                      @ .LC202 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e30] 
    /*00010930*/ MOVW        R3, #0                      @ .LC203 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e38] 
    /*00010934*/ MOVT        R2, #0                      @ .LC202 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e30] 
    /*00010938*/ MOVT        R3, #0                      @ .LC203 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e38] 
    /*0001093c*/ STR         R2, [SP, #16] 
    /*00010940*/ MOVW        R2, #0                      @ .LC204 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e40] 
    /*00010944*/ STR         R3, [SP, #12] 
    /*00010948*/ MOVT        R2, #0                      @ .LC204 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e40] 
    /*0001094c*/ MOVW        R3, #0                      @ .LC205 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e48] 
    /*00010950*/ STR         R2, [SP, #8] 
    /*00010954*/ MOVT        R3, #0                      @ .LC205 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e48] 
    /*00010958*/ MOVW        R2, #0                      @ .LC206 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e50] 
    /*0001095c*/ STR         R3, [SP, #4] 
    /*00010960*/ MOVT        R2, #0                      @ .LC206 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e50] 
    /*00010964*/ MOVW        R3, #0                      @ .LC197 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3df0] 
    /*00010968*/ STR         R2, [SP] 
    /*0001096c*/ MOVT        R3, #0                      @ .LC197 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3df0] 
    /*00010970*/ MOVW        R2, #0                      @ .LC198 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3df8] 
    /*00010974*/ MOVT        R2, #0                      @ .LC198 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3df8] 
    /*00010978*/ BL          0x0000000000010978          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001097c*/ MOV         R0, R4 
    /*00010980*/ BL          0x0000000000010980          @ VPSS_HAL_GetFreeNum [R_ARM_CALL: .text+0x17260] 
    /*00010984*/ MOV         R1, #0 
    /*00010988*/ MOV         R9, R0 
    /*0001098c*/ MOV         R0, R4 
    /*00010990*/ BL          0x0000000000010990          @ VPSS_HAL_GetWaitNum [R_ARM_CALL: .text+0x17268] 
    /*00010994*/ MOV         R2, #0 
    /*00010998*/ MOV         R1, R2 
    /*0001099c*/ MOV         SL, R0 
    /*000109a0*/ MOV         R0, R4 
    /*000109a4*/ BL          0x00000000000109A4          @ VPSS_HAL_GetBusyNum [R_ARM_CALL: .text+0x1727c] 
    /*000109a8*/ MOV         R2, #1 
    /*000109ac*/ MOV         R1, #0 
    /*000109b0*/ STR         R0, [SP, #36]               @ 0x24 
    /*000109b4*/ MOV         R0, R4 
    /*000109b8*/ BL          0x00000000000109B8          @ VPSS_HAL_GetBusyNum [R_ARM_CALL: .text+0x1727c] 
    /*000109bc*/ MOV         R2, #0 
    /*000109c0*/ MOV         R1, #1 
    /*000109c4*/ LDR         FP, [R4, #124]              @ 0x7c 
    /*000109c8*/ MOV         R6, R0 
    /*000109cc*/ MOV         R0, R4 
    /*000109d0*/ BL          0x00000000000109D0          @ VPSS_HAL_GetBusyNum [R_ARM_CALL: .text+0x1727c] 
    /*000109d4*/ MOV         R2, #1 
    /*000109d8*/ MOV         R1, R2 
    /*000109dc*/ MOV         R7, R0 
    /*000109e0*/ MOV         R0, R4 
    /*000109e4*/ BL          0x00000000000109E4          @ VPSS_HAL_GetBusyNum [R_ARM_CALL: .text+0x1727c] 
    /*000109e8*/ LDR         R2, [R4, #128]              @ 0x80 
    /*000109ec*/ STR         R2, [SP, #32] 
    /*000109f0*/ MOV         R8, R0 
    /*000109f4*/ MOV         R0, R4 
    /*000109f8*/ BL          0x00000000000109F8          @ VPSS_HAL_GetProcNum [R_ARM_CALL: .text+0x1728c] 
    /*000109fc*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00010a00*/ LDR         R2, [SP, #32] 
    /*00010a04*/ MOVW        R1, #0                      @ .LC207 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e58] 
    /*00010a08*/ STR         R6, [SP, #4] 
    /*00010a0c*/ MOVT        R1, #0                      @ .LC207 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e58] 
    /*00010a10*/ STR         R3, [SP] 
    /*00010a14*/ MOV         R3, SL 
    /*00010a18*/ STR         R2, [SP, #20] 
    /*00010a1c*/ MOV         R2, R9 
    /*00010a20*/ STR         FP, [SP, #8] 
    /*00010a24*/ ADD         R4, R4, #4096               @ 0x1000 
    /*00010a28*/ STR         R8, [SP, #16] 
    /*00010a2c*/ STR         R7, [SP, #12] 
    /*00010a30*/ STR         R0, [SP, #24] 
    /*00010a34*/ MOV         R0, R5 
    /*00010a38*/ BL          0x0000000000010A38          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010a3c*/ MOV         R0, R5 
    /*00010a40*/ MOVW        R1, #0                      @ .LC208 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e78] 
    /*00010a44*/ MOVT        R1, #0                      @ .LC208 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e78] 
    /*00010a48*/ BL          0x0000000000010A48          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010a4c*/ MOV         R0, R5 
    /*00010a50*/ MOVW        R2, #0                      @ .LC212 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f20] 
    /*00010a54*/ MOVW        R3, #0                      @ .LC213 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f30] 
    /*00010a58*/ MOVT        R2, #0                      @ .LC212 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f20] 
    /*00010a5c*/ MOVT        R3, #0                      @ .LC213 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f30] 
    /*00010a60*/ STR         R2, [SP, #12] 
    /*00010a64*/ MOVW        R1, #0                      @ .LC211 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f04] 
    /*00010a68*/ STR         R3, [SP, #8] 
    /*00010a6c*/ MOVT        R1, #0                      @ .LC211 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f04] 
    /*00010a70*/ MOVW        R2, #0                      @ .LC214 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f40] 
    /*00010a74*/ MOVW        R3, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34a4] 
    /*00010a78*/ MOVT        R2, #0                      @ .LC214 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f40] 
    /*00010a7c*/ MOVT        R3, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34a4] 
    /*00010a80*/ STR         R2, [SP, #4] 
    /*00010a84*/ MOVW        R2, #0                      @ .LC210 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ef8] 
    /*00010a88*/ STR         R3, [SP] 
    /*00010a8c*/ MOVT        R2, #0                      @ .LC210 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ef8] 
    /*00010a90*/ MOVW        R3, #0                      @ .LC209 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ee8] 
    /*00010a94*/ MOVT        R3, #0                      @ .LC209 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ee8] 
    /*00010a98*/ BL          0x0000000000010A98          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010a9c*/ LDR         R6, [R4, #2464]             @ 0x9a0 
    /*00010aa0*/ LDR         LR, [R4, #2456]             @ 0x998 
    /*00010aa4*/ MOV         R0, R5 
    /*00010aa8*/ LDR         IP, [R4, #2452]             @ 0x994 
    /*00010aac*/ MOVW        R1, #0                      @ .LC215 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f4c] 
    /*00010ab0*/ LDR         R5, [R4, #2460]             @ 0x99c 
    /*00010ab4*/ MOVT        R1, #0                      @ .LC215 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f4c] 
    /*00010ab8*/ LDR         R3, [R4, #2440]             @ 0x988 
    /*00010abc*/ LDR         R2, [R4, #2436]             @ 0x984 
    /*00010ac0*/ STR         R6, [SP, #12] 
    /*00010ac4*/ STR         R5, [SP, #8] 
    /*00010ac8*/ STM         SP, {IP, LR} 
    /*00010acc*/ BL          0x0000000000010ACC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010ad0*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00010ad4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VPSS_COMM_Proc


FUNC_BEGIN VpssProc
    /*00010ad8*/ PUSH        {R4, LR} 
    /*00010adc*/ MOVW        R1, #0                      @ .LC216 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f68] 
    /*00010ae0*/ MOV         R4, R0 
    /*00010ae4*/ MOVT        R1, #0                      @ .LC216 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f68] 
    /*00010ae8*/ BL          0x0000000000010AE8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00010aec*/ MOV         R0, R4 
    /*00010af0*/ BL          0x0000000000010AF0          @ VPSS_GrpProc [R_ARM_CALL: .text+0x10790] 
    /*00010af4*/ MOV         R0, R4 
    /*00010af8*/ BL          0x0000000000010AF8          @ VPSS_COMM_Proc [R_ARM_CALL: .text+0x10824] 
    /*00010afc*/ MOV         R0, #0 
    /*00010b00*/ POP         {R4, PC} 
FUNC_END VpssProc


FUNC_BEGIN VPSS_CheckModuleParam
    /*00010b04*/ MOVW        R3, #0                      @ vpss_en [R_ARM_MOVW_ABS_NC: .data+0xec] 
    /*00010b08*/ MOVT        R3, #0                      @ vpss_en [R_ARM_MOVT_ABS: .data+0xec] 
    /*00010b0c*/ PUSH        {R4, LR} 
    /*00010b10*/ LDR         R2, [R3] 
    /*00010b14*/ CMP         R2, #1 
    /*00010b18*/ BHI         VPSS_CheckModuleParam_x10b74
    /*00010b1c*/ BNE         VPSS_CheckModuleParam_x10ba0
    /*00010b20*/ MOVW        R3, #0                      @ bOneBufferforLowDelay [R_ARM_MOVW_ABS_NC: .bss+0x1174] 
    /*00010b24*/ MOVT        R3, #0                      @ bOneBufferforLowDelay [R_ARM_MOVT_ABS: .bss+0x1174] 
    /*00010b28*/ LDR         R1, [R3] 
    /*00010b2c*/ CMP         R1, #1 
    /*00010b30*/ BHI         VPSS_CheckModuleParam_x10b8c
    /*00010b34*/ MOVW        R3, #0                      @ vpss_vb_source [R_ARM_MOVW_ABS_NC: .bss+0x678c] 
    /*00010b38*/ MOVT        R3, #0                      @ vpss_vb_source [R_ARM_MOVT_ABS: .bss+0x678c] 
    /*00010b3c*/ LDR         R1, [R3] 
    /*00010b40*/ BICS        R0, R1, #2 
    /*00010b44*/ BNE         VPSS_CheckModuleParam_x10bb8
    /*00010b48*/ MOVW        R3, #0                      @ vpss_split_node_num [R_ARM_MOVW_ABS_NC: .data+0xf4] 
    /*00010b4c*/ MOVT        R3, #0                      @ vpss_split_node_num [R_ARM_MOVT_ABS: .data+0xf4] 
    /*00010b50*/ LDR         R1, [R3] 
    /*00010b54*/ SUB         R3, R1, #1 
    /*00010b58*/ CMP         R3, #15 
    /*00010b5c*/ POPLS       {R4, PC} 
    /*00010b60*/ MOVW        R0, #0                      @ .LC221 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x40b8] 
    /*00010b64*/ MOVT        R0, #0                      @ .LC221 [R_ARM_MOVT_ABS: .rodata.str1.4+0x40b8] 
    /*00010b68*/ BL          0x0000000000010B68          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00010b6c*/ MVN         R0, #0 
    /*00010b70*/ POP         {R4, PC} 
    VPSS_CheckModuleParam_x10b74:
    /*00010b74*/ MOV         R1, #0 
    /*00010b78*/ MOVW        R0, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3fc8] 
    /*00010b7c*/ MOVT        R0, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3fc8] 
    /*00010b80*/ BL          0x0000000000010B80          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00010b84*/ MVN         R0, #0 
    /*00010b88*/ POP         {R4, PC} 
    VPSS_CheckModuleParam_x10b8c:
    /*00010b8c*/ MOVW        R0, #0                      @ .LC219 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4038] 
    /*00010b90*/ MOVT        R0, #0                      @ .LC219 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4038] 
    /*00010b94*/ BL          0x0000000000010B94          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00010b98*/ MVN         R0, #0 
    /*00010b9c*/ POP         {R4, PC} 
    VPSS_CheckModuleParam_x10ba0:
    /*00010ba0*/ MOV         R1, #0 
    /*00010ba4*/ MOVW        R0, #0                      @ .LC218 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4004] 
    /*00010ba8*/ MOVT        R0, #0                      @ .LC218 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4004] 
    /*00010bac*/ BL          0x0000000000010BAC          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00010bb0*/ MVN         R0, #0 
    /*00010bb4*/ POP         {R4, PC} 
    VPSS_CheckModuleParam_x10bb8:
    /*00010bb8*/ MOVW        R0, #0                      @ .LC220 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x407c] 
    /*00010bbc*/ MOVT        R0, #0                      @ .LC220 [R_ARM_MOVT_ABS: .rodata.str1.4+0x407c] 
    /*00010bc0*/ BL          0x0000000000010BC0          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00010bc4*/ MVN         R0, #0 
    /*00010bc8*/ POP         {R4, PC} 
FUNC_END VPSS_CheckModuleParam


FUNC_BEGIN VPSS_ModInit
    /*00010bcc*/ PUSH        {R4, R5, R6, LR} 
    /*00010bd0*/ BL          0x0000000000010BD0          @ VPSS_CheckModuleParam [R_ARM_CALL: .text+0x10b04] 
    /*00010bd4*/ CMN         R0, #1 
    /*00010bd8*/ BEQ         VPSS_ModInit_x10cb4
    /*00010bdc*/ BL          0x0000000000010BDC          @ VPSS_LockInit [R_ARM_CALL: .text+0x27d0] 
    /*00010be0*/ SUBS        R4, R0, #0 
    /*00010be4*/ BNE         VPSS_ModInit_x10c94
    /*00010be8*/ MOVW        R0, #0                      @ .LC224 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4134] 
    /*00010bec*/ MOVT        R0, #0                      @ .LC224 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4134] 
    /*00010bf0*/ BL          0x0000000000010BF0          @ osal_createdev [R_ARM_CALL: +0x0] 
    /*00010bf4*/ LDR         R6, [PC, #316]              @ 0x0000000000010d38 
    /*00010bf8*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1178] 
    /*00010bfc*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1178] 
    /*00010c00*/ ADD         R1, R6, #32 
    /*00010c04*/ MOV         R2, #10 
    /*00010c08*/ STR         R6, [R0, #56]               @ 0x38 
    /*00010c0c*/ STR         R1, [R0, #60]               @ 0x3c 
    /*00010c10*/ STR         R2, [R0, #52]               @ 0x34 
    /*00010c14*/ STR         R0, [R5, #1028]             @ 0x404 
    /*00010c18*/ BL          0x0000000000010C18          @ osal_registerdevice [R_ARM_CALL: +0x0] 
    /*00010c1c*/ CMP         R0, #0 
    /*00010c20*/ BLT         VPSS_ModInit_x10cc4
    /*00010c24*/ ADD         R0, R6, #112                @ 0x70 
    /*00010c28*/ BL          0x0000000000010C28          @ CMPI_RegisterModule [R_ARM_CALL: +0x0] 
    /*00010c2c*/ CMP         R0, #0 
    /*00010c30*/ BLT         VPSS_ModInit_x10ce8
    /*00010c34*/ MOVW        R0, #0                      @ .LC224 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4134] 
    /*00010c38*/ MOV         R1, R4 
    /*00010c3c*/ MOVT        R0, #0                      @ .LC224 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4134] 
    /*00010c40*/ BL          0x0000000000010C40          @ osal_create_proc_entry [R_ARM_CALL: +0x0] 
    /*00010c44*/ SUBS        R2, R0, #0 
    /*00010c48*/ BEQ         VPSS_ModInit_x10d18
    /*00010c4c*/ MOVW        R3, #0                      @ VpssProc [R_ARM_MOVW_ABS_NC: .text+0x10ad8] 
    /*00010c50*/ MOV         R0, R5 
    /*00010c54*/ MOVT        R3, #0                      @ VpssProc [R_ARM_MOVT_ABS: .text+0x10ad8] 
    /*00010c58*/ STR         R3, [R2, #60]               @ 0x3c 
    /*00010c5c*/ BL          0x0000000000010C5C          @ osal_atomic_init [R_ARM_CALL: +0x0] 
    /*00010c60*/ CMP         R0, #0 
    /*00010c64*/ BLT         VPSS_ModInit_x10d00
    /*00010c68*/ MOV         R0, R5 
    /*00010c6c*/ MOV         R1, R4 
    /*00010c70*/ BL          0x0000000000010C70          @ osal_atomic_set [R_ARM_CALL: +0x0] 
    /*00010c74*/ BL          0x0000000000010C74          @ VPSS_DRV_PwrCtrl [R_ARM_CALL: .text+0x1f584] 
    /*00010c78*/ MOVW        R1, #0                      @ .LC229 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41ac] 
    /*00010c7c*/ MOVW        R0, #0                      @ .LC230 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41b8] 
    /*00010c80*/ MOVT        R1, #0                      @ .LC229 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41ac] 
    /*00010c84*/ MOVT        R0, #0                      @ .LC230 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41b8] 
    /*00010c88*/ BL          0x0000000000010C88          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00010c8c*/ MOV         R0, R4 
    /*00010c90*/ POP         {R4, R5, R6, PC} 
    VPSS_ModInit_x10c94:
    /*00010c94*/ MOVW        R0, #0                      @ .LC223 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x411c] 
    /*00010c98*/ MOVT        R0, #0                      @ .LC223 [R_ARM_MOVT_ABS: .rodata.str1.4+0x411c] 
    /*00010c9c*/ BL          0x0000000000010C9C          @ osal_printk [R_ARM_CALL: +0x0] 
    VPSS_ModInit_x10ca0:
    /*00010ca0*/ MOVW        R0, #0                      @ .LC232 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41f0] 
    /*00010ca4*/ MOVT        R0, #0                      @ .LC232 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41f0] 
    /*00010ca8*/ BL          0x0000000000010CA8          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00010cac*/ MVN         R0, #0 
    /*00010cb0*/ POP         {R4, R5, R6, PC} 
    VPSS_ModInit_x10cb4:
    /*00010cb4*/ MOVW        R0, #0                      @ .LC222 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x40fc] 
    /*00010cb8*/ MOVT        R0, #0                      @ .LC222 [R_ARM_MOVT_ABS: .rodata.str1.4+0x40fc] 
    /*00010cbc*/ BL          0x0000000000010CBC          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00010cc0*/ B           VPSS_ModInit_x10ca0
    VPSS_ModInit_x10cc4:
    /*00010cc4*/ MOVW        R0, #0                      @ .LC225 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x413c] 
    /*00010cc8*/ MOVT        R0, #0                      @ .LC225 [R_ARM_MOVT_ABS: .rodata.str1.4+0x413c] 
    /*00010ccc*/ BL          0x0000000000010CCC          @ osal_printk [R_ARM_CALL: +0x0] 
    VPSS_ModInit_x10cd0:
    /*00010cd0*/ LDR         R0, [R5, #1028]             @ 0x404 
    /*00010cd4*/ BL          0x0000000000010CD4          @ osal_destroydev [R_ARM_CALL: +0x0] 
    /*00010cd8*/ CMP         R0, #0 
    /*00010cdc*/ BLT         VPSS_ModInit_x10d28
    VPSS_ModInit_x10ce0:
    /*00010ce0*/ BL          0x0000000000010CE0          @ VPSS_LockExit [R_ARM_CALL: .text+0x2964] 
    /*00010ce4*/ B           VPSS_ModInit_x10ca0
    VPSS_ModInit_x10ce8:
    /*00010ce8*/ MOVW        R0, #0                      @ .LC226 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4154] 
    /*00010cec*/ MOVT        R0, #0                      @ .LC226 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4154] 
    /*00010cf0*/ BL          0x0000000000010CF0          @ osal_printk [R_ARM_CALL: +0x0] 
    VPSS_ModInit_x10cf4:
    /*00010cf4*/ LDR         R0, [R5, #1028]             @ 0x404 
    /*00010cf8*/ BL          0x0000000000010CF8          @ osal_deregisterdevice [R_ARM_CALL: +0x0] 
    /*00010cfc*/ B           VPSS_ModInit_x10cd0
    VPSS_ModInit_x10d00:
    /*00010d00*/ MOVW        R0, #0                      @ .LC228 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4190] 
    /*00010d04*/ MOVT        R0, #0                      @ .LC228 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4190] 
    /*00010d08*/ BL          0x0000000000010D08          @ osal_printk [R_ARM_CALL: +0x0] 
    VPSS_ModInit_x10d0c:
    /*00010d0c*/ MOV         R0, #7 
    /*00010d10*/ BL          0x0000000000010D10          @ CMPI_UnRegisterModule [R_ARM_CALL: +0x0] 
    /*00010d14*/ B           VPSS_ModInit_x10cf4
    VPSS_ModInit_x10d18:
    /*00010d18*/ MOVW        R0, #0                      @ .LC227 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4170] 
    /*00010d1c*/ MOVT        R0, #0                      @ .LC227 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4170] 
    /*00010d20*/ BL          0x0000000000010D20          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00010d24*/ B           VPSS_ModInit_x10d0c
    VPSS_ModInit_x10d28:
    /*00010d28*/ MOVW        R0, #0                      @ .LC231 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41d4] 
    /*00010d2c*/ MOVT        R0, #0                      @ .LC231 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41d4] 
    /*00010d30*/ BL          0x0000000000010D30          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00010d34*/ B           VPSS_ModInit_x10ce0
    /*00010d38*/ ANDEQ       R0, R0, R4 
FUNC_END VPSS_ModInit


FUNC_BEGIN VPSS_ModExit
    /*00010d3c*/ PUSH        {R4, LR} 
    /*00010d40*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1178] 
    /*00010d44*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1178] 
    /*00010d48*/ LDR         R3, [R4, #1028]             @ 0x404 
    /*00010d4c*/ CMP         R3, #0 
    /*00010d50*/ POPEQ       {R4, PC} 
    /*00010d54*/ MOV         R0, R4 
    /*00010d58*/ BL          0x0000000000010D58          @ osal_atomic_destory [R_ARM_CALL: +0x0] 
    /*00010d5c*/ MOV         R1, #0 
    /*00010d60*/ MOVW        R0, #0                      @ .LC224 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4134] 
    /*00010d64*/ MOVT        R0, #0                      @ .LC224 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4134] 
    /*00010d68*/ BL          0x0000000000010D68          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    /*00010d6c*/ MOV         R0, #7 
    /*00010d70*/ BL          0x0000000000010D70          @ CMPI_UnRegisterModule [R_ARM_CALL: +0x0] 
    /*00010d74*/ LDR         R0, [R4, #1028]             @ 0x404 
    /*00010d78*/ BL          0x0000000000010D78          @ osal_deregisterdevice [R_ARM_CALL: +0x0] 
    /*00010d7c*/ LDR         R0, [R4, #1028]             @ 0x404 
    /*00010d80*/ BL          0x0000000000010D80          @ osal_destroydev [R_ARM_CALL: +0x0] 
    /*00010d84*/ BL          0x0000000000010D84          @ VPSS_LockExit [R_ARM_CALL: .text+0x2964] 
    /*00010d88*/ MOVW        R0, #0                      @ .LC233 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4208] 
    /*00010d8c*/ POP         {R4, LR} 
    /*00010d90*/ MOVT        R0, #0                      @ .LC233 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4208] 
    VPSS_ModExit_x10d94:
    /*00010d94*/ B           VPSS_ModExit_x10d94         @ osal_printk [R_ARM_JUMP24: +0x0] 
FUNC_END VPSS_ModExit


FUNC_BEGIN VPSS_CreatPicQueue
    /*00010d98*/ PUSH        {R4, R5, R6, LR} 
    /*00010d9c*/ MOV         R4, R0 
    /*00010da0*/ MOV         R0, #384                    @ 0x180 
    /*00010da4*/ ADD         R3, R4, #12 
    /*00010da8*/ ADD         R6, R4, #4 
    /*00010dac*/ STR         R3, [R4, #12] 
    /*00010db0*/ STR         R6, [R4, #4] 
    /*00010db4*/ MOV         R5, R1 
    /*00010db8*/ STR         R6, [R4, #8] 
    /*00010dbc*/ STR         R3, [R4, #16] 
    /*00010dc0*/ MUL         R0, R0, R1 
    /*00010dc4*/ BL          0x0000000000010DC4          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00010dc8*/ CMP         R0, #0 
    /*00010dcc*/ STR         R0, [R4] 
    /*00010dd0*/ BEQ         VPSS_CreatPicQueue_x10e1c
    /*00010dd4*/ CMP         R5, #0 
    /*00010dd8*/ MOVNE       R3, #0 
    /*00010ddc*/ BEQ         VPSS_CreatPicQueue_x10e04
    VPSS_CreatPicQueue_x10de0:
    /*00010de0*/ LDR         R2, [R4, #8] 
    /*00010de4*/ ADD         R3, R3, #1 
    /*00010de8*/ CMP         R5, R3 
    /*00010dec*/ STR         R0, [R4, #8] 
    /*00010df0*/ STR         R6, [R0] 
    /*00010df4*/ STR         R2, [R0, #4] 
    /*00010df8*/ STR         R0, [R2] 
    /*00010dfc*/ ADD         R0, R0, #384                @ 0x180 
    /*00010e00*/ BNE         VPSS_CreatPicQueue_x10de0
    VPSS_CreatPicQueue_x10e04:
    /*00010e04*/ MOV         R3, #0 
    /*00010e08*/ STR         R5, [R4, #20] 
    /*00010e0c*/ STR         R5, [R4, #28] 
    /*00010e10*/ MOV         R0, R3 
    /*00010e14*/ STR         R3, [R4, #24] 
    /*00010e18*/ POP         {R4, R5, R6, PC} 
    VPSS_CreatPicQueue_x10e1c:
    /*00010e1c*/ MVN         R0, #0 
    /*00010e20*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_CreatPicQueue


FUNC_BEGIN VPSS_DestroyPicQueue
    /*00010e24*/ PUSH        {R4, R5, R6, LR} 
    /*00010e28*/ MOV         R5, #0 
    /*00010e2c*/ LDR         R1, [R0] 
    /*00010e30*/ ADD         R2, R0, #4 
    /*00010e34*/ ADD         R3, R0, #12 
    /*00010e38*/ STR         R2, [R0, #4] 
    /*00010e3c*/ CMP         R1, R5 
    /*00010e40*/ STR         R2, [R0, #8] 
    /*00010e44*/ STR         R3, [R0, #12] 
    /*00010e48*/ STR         R3, [R0, #16] 
    /*00010e4c*/ STR         R5, [R0, #20] 
    /*00010e50*/ STR         R5, [R0, #24] 
    /*00010e54*/ STR         R5, [R0, #28] 
    /*00010e58*/ POPEQ       {R4, R5, R6, PC} 
    /*00010e5c*/ MOV         R4, R0 
    /*00010e60*/ MOV         R0, R1 
    /*00010e64*/ BL          0x0000000000010E64          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00010e68*/ STR         R5, [R4] 
    /*00010e6c*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DestroyPicQueue


FUNC_BEGIN VPSS_PicQueueGetFree
    /*00010e70*/ MOV         R2, R0 
    /*00010e74*/ LDR         R3, [R2, #4]! 
    /*00010e78*/ CMP         R3, R2 
    /*00010e7c*/ BEQ         VPSS_PicQueueGetFree_x10ec4
    /*00010e80*/ PUSH        {R4, LR} 
    /*00010e84*/ MOV         R1, R0 
    /*00010e88*/ LDR         LR, [R3, #4] 
    /*00010e8c*/ MOV         R0, R3 
    /*00010e90*/ LDR         R4, [R3] 
    /*00010e94*/ MOV         IP, #256                    @ 0x100 
    /*00010e98*/ MOV         R2, #512                    @ 0x200 
    /*00010e9c*/ MOVT        IP, #16 
    /*00010ea0*/ MOVT        R2, #32 
    /*00010ea4*/ STR         LR, [R4, #4] 
    /*00010ea8*/ STR         R4, [LR] 
    /*00010eac*/ STR         IP, [R3] 
    /*00010eb0*/ STR         R2, [R3, #4] 
    /*00010eb4*/ LDR         R3, [R1, #20] 
    /*00010eb8*/ SUB         R3, R3, #1 
    /*00010ebc*/ STR         R3, [R1, #20] 
    /*00010ec0*/ POP         {R4, PC} 
    VPSS_PicQueueGetFree_x10ec4:
    /*00010ec4*/ MOV         R0, #0 
    /*00010ec8*/ BX          LR 
FUNC_END VPSS_PicQueueGetFree


FUNC_BEGIN VPSS_PicQueuePutBusy
    /*00010ecc*/ LDR         R3, [R0, #16] 
    /*00010ed0*/ ADD         R2, R0, #12 
    /*00010ed4*/ STR         R1, [R0, #16] 
    /*00010ed8*/ STM         R1, {R2, R3} 
    /*00010edc*/ STR         R1, [R3] 
    /*00010ee0*/ LDR         R3, [R0, #24] 
    /*00010ee4*/ ADD         R3, R3, #1 
    /*00010ee8*/ STR         R3, [R0, #24] 
    /*00010eec*/ BX          LR 
FUNC_END VPSS_PicQueuePutBusy


FUNC_BEGIN VPSS_PicQueuePutBusyHead
    /*00010ef0*/ MOV         R3, R0 
    /*00010ef4*/ LDR         R2, [R3, #12]! 
    /*00010ef8*/ STR         R1, [R2, #4] 
    /*00010efc*/ STM         R1, {R2, R3} 
    /*00010f00*/ LDR         R3, [R0, #24] 
    /*00010f04*/ STR         R1, [R0, #12] 
    /*00010f08*/ ADD         R3, R3, #1 
    /*00010f0c*/ STR         R3, [R0, #24] 
    /*00010f10*/ BX          LR 
FUNC_END VPSS_PicQueuePutBusyHead


FUNC_BEGIN VPSS_PicQueueGetBusy
    /*00010f14*/ MOV         R2, R0 
    /*00010f18*/ LDR         R3, [R2, #12]! 
    /*00010f1c*/ CMP         R3, R2 
    /*00010f20*/ BEQ         VPSS_PicQueueGetBusy_x10f68
    /*00010f24*/ PUSH        {R4, LR} 
    /*00010f28*/ MOV         R1, R0 
    /*00010f2c*/ LDR         LR, [R3, #4] 
    /*00010f30*/ MOV         R0, R3 
    /*00010f34*/ LDR         R4, [R3] 
    /*00010f38*/ MOV         IP, #256                    @ 0x100 
    /*00010f3c*/ MOV         R2, #512                    @ 0x200 
    /*00010f40*/ MOVT        IP, #16 
    /*00010f44*/ MOVT        R2, #32 
    /*00010f48*/ STR         LR, [R4, #4] 
    /*00010f4c*/ STR         R4, [LR] 
    /*00010f50*/ STR         IP, [R3] 
    /*00010f54*/ STR         R2, [R3, #4] 
    /*00010f58*/ LDR         R3, [R1, #24] 
    /*00010f5c*/ SUB         R3, R3, #1 
    /*00010f60*/ STR         R3, [R1, #24] 
    /*00010f64*/ POP         {R4, PC} 
    VPSS_PicQueueGetBusy_x10f68:
    /*00010f68*/ MOV         R0, #0 
    /*00010f6c*/ BX          LR 
FUNC_END VPSS_PicQueueGetBusy


FUNC_BEGIN VPSS_PicQueueGetBusyTail
    /*00010f70*/ LDR         R1, [R0, #12] 
    /*00010f74*/ ADD         R3, R0, #12 
    /*00010f78*/ CMP         R1, R3 
    /*00010f7c*/ BEQ         VPSS_PicQueueGetBusyTail_x10fd0
    /*00010f80*/ LDR         R3, [R0, #16] 
    /*00010f84*/ MOV         R2, R0 
    /*00010f88*/ CMP         R3, #0 
    /*00010f8c*/ BEQ         VPSS_PicQueueGetBusyTail_x10fd0
    /*00010f90*/ PUSH        {R4, LR} 
    /*00010f94*/ MOV         R0, R3 
    /*00010f98*/ LDR         LR, [R3, #4] 
    /*00010f9c*/ MOV         IP, #256                    @ 0x100 
    /*00010fa0*/ LDR         R4, [R3] 
    /*00010fa4*/ MOVT        IP, #16 
    /*00010fa8*/ MOV         R1, #512                    @ 0x200 
    /*00010fac*/ MOVT        R1, #32 
    /*00010fb0*/ STR         LR, [R4, #4] 
    /*00010fb4*/ STR         R4, [LR] 
    /*00010fb8*/ STR         IP, [R3] 
    /*00010fbc*/ STR         R1, [R3, #4] 
    /*00010fc0*/ LDR         R3, [R2, #24] 
    /*00010fc4*/ SUB         R3, R3, #1 
    /*00010fc8*/ STR         R3, [R2, #24] 
    /*00010fcc*/ POP         {R4, PC} 
    VPSS_PicQueueGetBusyTail_x10fd0:
    /*00010fd0*/ MOV         R0, #0 
    /*00010fd4*/ BX          LR 
FUNC_END VPSS_PicQueueGetBusyTail


FUNC_BEGIN VPSS_PicQueueQueryBusy
    /*00010fd8*/ LDR         R3, [R0, #12]! 
    /*00010fdc*/ CMP         R3, R0 
    /*00010fe0*/ MOVNE       R0, R3 
    /*00010fe4*/ MOVEQ       R0, #0 
    /*00010fe8*/ BX          LR 
FUNC_END VPSS_PicQueueQueryBusy


FUNC_BEGIN VPSS_PicQueueQueryBusyNext
    /*00010fec*/ MOV         R3, R0 
    /*00010ff0*/ LDR         R2, [R3, #12]! 
    /*00010ff4*/ CMP         R2, R3 
    /*00010ff8*/ BEQ         VPSS_PicQueueQueryBusyNext_x11010
    /*00010ffc*/ LDR         R3, [R0, #24] 
    /*00011000*/ CMP         R3, #1 
    /*00011004*/ BLS         VPSS_PicQueueQueryBusyNext_x11010
    /*00011008*/ LDR         R0, [R2] 
    /*0001100c*/ BX          LR 
    VPSS_PicQueueQueryBusyNext_x11010:
    /*00011010*/ MOV         R0, #0 
    /*00011014*/ BX          LR 
FUNC_END VPSS_PicQueueQueryBusyNext


FUNC_BEGIN VPSS_PicQueueQueryBusyTail
    /*00011018*/ LDR         R2, [R0, #12] 
    /*0001101c*/ ADD         R3, R0, #12 
    /*00011020*/ CMP         R2, R3 
    /*00011024*/ LDRNE       R0, [R0, #16] 
    /*00011028*/ MOVEQ       R0, #0 
    /*0001102c*/ BX          LR 
FUNC_END VPSS_PicQueueQueryBusyTail


FUNC_BEGIN VPSS_QueryPicQueueTail
    VPSS_QueryPicQueueTail_x11030:
    /*00011030*/ B           VPSS_QueryPicQueueTail_x11030@ VPSS_PicQueueQueryBusyTail [R_ARM_JUMP24: .text+0x11018] 
FUNC_END VPSS_QueryPicQueueTail


FUNC_BEGIN VPSS_PicQueuePutFree
    /*00011034*/ LDR         R3, [R0, #8] 
    /*00011038*/ ADD         R2, R0, #4 
    /*0001103c*/ STR         R1, [R0, #8] 
    /*00011040*/ STM         R1, {R2, R3} 
    /*00011044*/ STR         R1, [R3] 
    /*00011048*/ LDR         R3, [R0, #20] 
    /*0001104c*/ ADD         R3, R3, #1 
    /*00011050*/ STR         R3, [R0, #20] 
    /*00011054*/ BX          LR 
FUNC_END VPSS_PicQueuePutFree


FUNC_BEGIN VPSS_PicQueueGetFreeNum
    /*00011058*/ LDR         R0, [R0, #20] 
    /*0001105c*/ BX          LR 
FUNC_END VPSS_PicQueueGetFreeNum


FUNC_BEGIN VPSS_PicQueueGetBusyNum
    /*00011060*/ LDR         R0, [R0, #24] 
    /*00011064*/ BX          LR 
FUNC_END VPSS_PicQueueGetBusyNum


FUNC_BEGIN VpssCleanPicQueue
    /*00011068*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001106c*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00011070*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00011074*/ MOV         R6, R1 
    /*00011078*/ LDR         R7, [R3, R0, LSL #2] 
    /*0001107c*/ SUB         SP, SP, #12 
    /*00011080*/ ADD         R4, R7, R1, LSL #2 
    /*00011084*/ LDR         R3, [R4, #2200]             @ 0x898 
    /*00011088*/ CMP         R3, #0 
    /*0001108c*/ LSLEQ       R6, R1, #5 
    /*00011090*/ BEQ         VpssCleanPicQueue_x1110c
    /*00011094*/ MOV         R0, #1 
    /*00011098*/ BL          0x0000000000011098          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001109c*/ LDR         R3, [R4, #2200]             @ 0x898 
    /*000110a0*/ MOV         R1, #10 
    /*000110a4*/ LDR         IP, [R3, #336]              @ 0x150 
    /*000110a8*/ LDRD        R2, [R3, #128]              @ 0x80 
    /*000110ac*/ STR         R1, [SP] 
    /*000110b0*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000110b4*/ MOV         R0, IP 
    /*000110b8*/ BLX         R1 
    /*000110bc*/ CMP         R0, #0 
    /*000110c0*/ BNE         VpssCleanPicQueue_x11224
    VpssCleanPicQueue_x110c4:
    /*000110c4*/ LSL         R6, R6, #5 
    /*000110c8*/ LDR         R1, [R4, #2200]             @ 0x898 
    /*000110cc*/ ADD         R3, R6, #2160               @ 0x870 
    /*000110d0*/ ADD         R0, R7, R6 
    /*000110d4*/ MOV         LR, #0 
    /*000110d8*/ MOV         R2, R3 
    /*000110dc*/ ADD         R3, R3, #4 
    /*000110e0*/ ADD         R3, R7, R3 
    /*000110e4*/ ADD         R2, R2, #8 
    /*000110e8*/ ADD         R2, R7, R2 
    /*000110ec*/ LDR         IP, [R3, #8] 
    /*000110f0*/ STR         R1, [R3, #8] 
    /*000110f4*/ STM         R1, {R2, IP} 
    /*000110f8*/ STR         R1, [IP] 
    /*000110fc*/ LDR         R3, [R0, #2184]             @ 0x888 
    /*00011100*/ ADD         R3, R3, #1 
    /*00011104*/ STR         R3, [R0, #2184]             @ 0x888 
    /*00011108*/ STR         LR, [R4, #2200]             @ 0x898 
    VpssCleanPicQueue_x1110c:
    /*0001110c*/ ADD         R3, R7, R6 
    /*00011110*/ LDR         R3, [R3, #2188]             @ 0x88c 
    /*00011114*/ CMP         R3, #0 
    /*00011118*/ BEQ         VpssCleanPicQueue_x11218
    /*0001111c*/ ADD         R5, R6, #2160               @ 0x870 
    /*00011120*/ ADD         R8, R6, #2176               @ 0x880 
    /*00011124*/ ADD         R8, R7, R8 
    /*00011128*/ MOV         R9, R5 
    /*0001112c*/ ADD         R5, R5, #4 
    /*00011130*/ ADD         R9, R9, #8 
    /*00011134*/ ADD         R5, R7, R5 
    /*00011138*/ ADD         R9, R7, R9 
    /*0001113c*/ B           VpssCleanPicQueue_x11170
    VpssCleanPicQueue_x11140:
    /*00011140*/ LDR         R2, [R5, #8] 
    /*00011144*/ ADD         R3, R7, R6 
    /*00011148*/ STR         R4, [R5, #8] 
    /*0001114c*/ STR         R9, [R4] 
    /*00011150*/ STR         R2, [R4, #4] 
    /*00011154*/ STR         R4, [R2] 
    /*00011158*/ LDR         R1, [R3, #2188]             @ 0x88c 
    /*0001115c*/ LDR         R2, [R3, #2184]             @ 0x888 
    /*00011160*/ CMP         R1, #0 
    /*00011164*/ ADD         R2, R2, #1 
    /*00011168*/ STR         R2, [R3, #2184]             @ 0x888 
    /*0001116c*/ BEQ         VpssCleanPicQueue_x11218
    VpssCleanPicQueue_x11170:
    /*00011170*/ LDR         R3, [R5, #12] 
    /*00011174*/ ADD         R0, R7, R6 
    /*00011178*/ MOV         R1, #256                    @ 0x100 
    /*0001117c*/ MOV         R2, #512                    @ 0x200 
    /*00011180*/ CMP         R3, R8 
    /*00011184*/ MOVT        R1, #16 
    /*00011188*/ MOV         R4, R3 
    /*0001118c*/ MOVT        R2, #32 
    /*00011190*/ LDRNE       IP, [R3, #4] 
    /*00011194*/ MOVEQ       R4, #0 
    /*00011198*/ LDRNE       LR, [R3] 
    /*0001119c*/ STRNE       IP, [LR, #4] 
    /*000111a0*/ STRNE       LR, [IP] 
    /*000111a4*/ STMNE       R3, {R1, R2} 
    /*000111a8*/ LDRNE       R3, [R0, #2188]             @ 0x88c 
    /*000111ac*/ SUBNE       R3, R3, #1 
    /*000111b0*/ STRNE       R3, [R0, #2188]             @ 0x88c 
    /*000111b4*/ MOV         R0, R4 
    /*000111b8*/ BL          0x00000000000111B8          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*000111bc*/ CMP         R0, #0 
    /*000111c0*/ MOV         R0, #1 
    /*000111c4*/ BNE         VpssCleanPicQueue_x1124c
    /*000111c8*/ BL          0x00000000000111C8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000111cc*/ LDR         IP, [R4, #336]              @ 0x150 
    /*000111d0*/ LDRD        R2, [R4, #128]              @ 0x80 
    /*000111d4*/ MOV         R1, #10 
    /*000111d8*/ STR         R1, [SP] 
    /*000111dc*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000111e0*/ MOV         R0, IP 
    /*000111e4*/ BLX         R1 
    /*000111e8*/ CMP         R0, #0 
    /*000111ec*/ BEQ         VpssCleanPicQueue_x11140
    /*000111f0*/ MOVW        R2, #299                    @ 0x12b 
    /*000111f4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xb1c] 
    /*000111f8*/ STR         R2, [SP] 
    /*000111fc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xb1c] 
    /*00011200*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42a4] 
    /*00011204*/ MOV         R1, #7 
    /*00011208*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42a4] 
    /*0001120c*/ MOV         R0, #3 
    /*00011210*/ BL          0x0000000000011210          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011214*/ B           VpssCleanPicQueue_x11140
    VpssCleanPicQueue_x11218:
    /*00011218*/ MOV         R0, #0 
    /*0001121c*/ ADD         SP, SP, #12 
    /*00011220*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssCleanPicQueue_x11224:
    /*00011224*/ MOVW        R2, #266                    @ 0x10a 
    /*00011228*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xb1c] 
    /*0001122c*/ STR         R2, [SP] 
    /*00011230*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xb1c] 
    /*00011234*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42a4] 
    /*00011238*/ MOV         R1, #7 
    /*0001123c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42a4] 
    /*00011240*/ MOV         R0, #3 
    /*00011244*/ BL          0x0000000000011244          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011248*/ B           VpssCleanPicQueue_x110c4
    VpssCleanPicQueue_x1124c:
    /*0001124c*/ MOVW        R0, #32774                  @ 0x8006 
    /*00011250*/ MOVT        R0, #40967                  @ 0xa007 
    /*00011254*/ ADD         SP, SP, #12 
    /*00011258*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
FUNC_END VpssCleanPicQueue


FUNC_BEGIN VpssReleaseBusyQueue
    /*0001125c*/ LDR         R3, [R0, #24] 
    /*00011260*/ CMP         R3, #0 
    /*00011264*/ BEQ         VpssReleaseBusyQueue_x1136c
    /*00011268*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001126c*/ MOV         R8, #256                    @ 0x100 
    /*00011270*/ MOV         R7, #512                    @ 0x200 
    /*00011274*/ SUB         SP, SP, #12 
    /*00011278*/ MOV         R4, R0 
    /*0001127c*/ LDR         R9, [PC, #240]              @ 0x0000000000011374 
    /*00011280*/ MOVT        R8, #16 
    /*00011284*/ MOVT        R7, #32 
    /*00011288*/ ADD         R6, R0, #12 
    /*0001128c*/ B           VpssReleaseBusyQueue_x112c0
    VpssReleaseBusyQueue_x11290:
    /*00011290*/ LDR         R2, [R4, #8] 
    /*00011294*/ ADD         R3, R4, #4 
    /*00011298*/ STR         R5, [R4, #8] 
    /*0001129c*/ STR         R3, [R5] 
    /*000112a0*/ STR         R2, [R5, #4] 
    /*000112a4*/ STR         R5, [R2] 
    /*000112a8*/ LDR         R2, [R4, #24] 
    /*000112ac*/ LDR         R3, [R4, #20] 
    /*000112b0*/ CMP         R2, #0 
    /*000112b4*/ ADD         R3, R3, #1 
    /*000112b8*/ STR         R3, [R4, #20] 
    /*000112bc*/ BEQ         VpssReleaseBusyQueue_x11360
    VpssReleaseBusyQueue_x112c0:
    /*000112c0*/ LDR         R3, [R4, #12] 
    /*000112c4*/ CMP         R6, R3 
    /*000112c8*/ MOV         R5, R3 
    /*000112cc*/ LDMNE       R3, {R1, R2} 
    /*000112d0*/ MOVEQ       R5, #0 
    /*000112d4*/ MOV         R0, R5 
    /*000112d8*/ STRNE       R2, [R1, #4] 
    /*000112dc*/ STRNE       R1, [R2] 
    /*000112e0*/ STRNE       R8, [R3] 
    /*000112e4*/ STRNE       R7, [R3, #4] 
    /*000112e8*/ LDRNE       R3, [R4, #24] 
    /*000112ec*/ SUBNE       R3, R3, #1 
    /*000112f0*/ STRNE       R3, [R4, #24] 
    /*000112f4*/ BL          0x00000000000112F4          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*000112f8*/ CMP         R0, #0 
    /*000112fc*/ MOV         R0, #1 
    /*00011300*/ BNE         VpssReleaseBusyQueue_x11350
    /*00011304*/ BL          0x0000000000011304          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011308*/ LDR         IP, [R5, #336]              @ 0x150 
    /*0001130c*/ LDRD        R2, [R5, #128]              @ 0x80 
    /*00011310*/ MOV         R1, #10 
    /*00011314*/ STR         R1, [SP] 
    /*00011318*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0001131c*/ MOV         R0, IP 
    /*00011320*/ BLX         R1 
    /*00011324*/ CMP         R0, #0 
    /*00011328*/ BEQ         VpssReleaseBusyQueue_x11290
    /*0001132c*/ MOVW        R3, #338                    @ 0x152 
    /*00011330*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42a4] 
    /*00011334*/ STR         R3, [SP] 
    /*00011338*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42a4] 
    /*0001133c*/ MOV         R3, R9 
    /*00011340*/ MOV         R1, #7 
    /*00011344*/ MOV         R0, #3 
    /*00011348*/ BL          0x0000000000011348          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001134c*/ B           VpssReleaseBusyQueue_x11290
    VpssReleaseBusyQueue_x11350:
    /*00011350*/ MOVW        R0, #32774                  @ 0x8006 
    /*00011354*/ MOVT        R0, #40967                  @ 0xa007 
    /*00011358*/ ADD         SP, SP, #12 
    /*0001135c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssReleaseBusyQueue_x11360:
    /*00011360*/ MOV         R0, #0 
    /*00011364*/ ADD         SP, SP, #12 
    /*00011368*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssReleaseBusyQueue_x1136c:
    /*0001136c*/ MOV         R0, #0 
    /*00011370*/ BX          LR 
    /*00011374*/ ANDEQ       R0, R0, R0, LSR FP 
FUNC_END VpssReleaseBusyQueue


FUNC_BEGIN VpssPutVb
    /*00011378*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001137c*/ SUB         SP, SP, #8 
    /*00011380*/ MOV         R8, R1 
    /*00011384*/ MOV         R4, R0 
    /*00011388*/ BL          0x0000000000011388          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*0001138c*/ CMP         R0, #0 
    /*00011390*/ BNE         VpssPutVb_x113e8
    /*00011394*/ MOV         R0, #1 
    /*00011398*/ LDRD        R6, [R4, #120]              @ 0x78 
    /*0001139c*/ LDR         R5, [R4, #328]              @ 0x148 
    /*000113a0*/ BL          0x00000000000113A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000113a4*/ MOV         R2, R6 
    /*000113a8*/ MOV         R3, R7 
    /*000113ac*/ LDR         R1, [R0, #84]               @ 0x54 
    /*000113b0*/ MOV         R0, R5 
    /*000113b4*/ BLX         R1 
    /*000113b8*/ CMP         R0, #0 
    /*000113bc*/ BEQ         VpssPutVb_x113f4
    /*000113c0*/ MOV         R0, #1 
    /*000113c4*/ BL          0x00000000000113C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000113c8*/ STR         R8, [SP] 
    /*000113cc*/ MOV         R2, R6 
    /*000113d0*/ MOV         R3, R7 
    /*000113d4*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000113d8*/ MOV         R0, R5 
    /*000113dc*/ BLX         R1 
    VpssPutVb_x113e0:
    /*000113e0*/ ADD         SP, SP, #8 
    /*000113e4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssPutVb_x113e8:
    /*000113e8*/ MOVW        R0, #32774                  @ 0x8006 
    /*000113ec*/ MOVT        R0, #40967                  @ 0xa007 
    /*000113f0*/ B           VpssPutVb_x113e0
    VpssPutVb_x113f4:
    /*000113f4*/ MOV         R2, #68                     @ 0x44 
    /*000113f8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xb48] 
    /*000113fc*/ STR         R2, [SP] 
    /*00011400*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xb48] 
    /*00011404*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42d0] 
    /*00011408*/ MOV         R1, #7 
    /*0001140c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42d0] 
    /*00011410*/ MOV         R0, #3 
    /*00011414*/ BL          0x0000000000011414          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011418*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001141c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00011420*/ B           VpssPutVb_x113e0
FUNC_END VpssPutVb


FUNC_BEGIN VpssGetVb
    /*00011424*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00011428*/ SUB         SP, SP, #8 
    /*0001142c*/ MOV         R8, R1 
    /*00011430*/ MOV         R4, R0 
    /*00011434*/ BL          0x0000000000011434          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*00011438*/ CMP         R0, #0 
    /*0001143c*/ BNE         VpssGetVb_x11494
    /*00011440*/ MOV         R0, #1 
    /*00011444*/ LDRD        R6, [R4, #120]              @ 0x78 
    /*00011448*/ LDR         R5, [R4, #328]              @ 0x148 
    /*0001144c*/ BL          0x000000000001144C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011450*/ MOV         R2, R6 
    /*00011454*/ MOV         R3, R7 
    /*00011458*/ LDR         R1, [R0, #84]               @ 0x54 
    /*0001145c*/ MOV         R0, R5 
    /*00011460*/ BLX         R1 
    /*00011464*/ CMP         R0, #0 
    /*00011468*/ BEQ         VpssGetVb_x114a0
    /*0001146c*/ MOV         R0, #1 
    /*00011470*/ BL          0x0000000000011470          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011474*/ STR         R8, [SP] 
    /*00011478*/ MOV         R2, R6 
    /*0001147c*/ MOV         R3, R7 
    /*00011480*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00011484*/ MOV         R0, R5 
    /*00011488*/ BLX         R1 
    VpssGetVb_x1148c:
    /*0001148c*/ ADD         SP, SP, #8 
    /*00011490*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssGetVb_x11494:
    /*00011494*/ MOVW        R0, #32774                  @ 0x8006 
    /*00011498*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001149c*/ B           VpssGetVb_x1148c
    VpssGetVb_x114a0:
    /*000114a0*/ MOV         R3, #91                     @ 0x5b 
    /*000114a4*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42d0] 
    /*000114a8*/ STR         R3, [SP] 
    /*000114ac*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42d0] 
    /*000114b0*/ LDR         R3, [PC, #20]               @ 0x00000000000114cc 
    /*000114b4*/ MOV         R1, #7 
    /*000114b8*/ MOV         R0, #3 
    /*000114bc*/ BL          0x00000000000114BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000114c0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000114c4*/ MOVT        R0, #40967                  @ 0xa007 
    /*000114c8*/ B           VpssGetVb_x1148c
    /*000114cc*/ ANDEQ       R0, R0, R4, ASR FP 
FUNC_END VpssGetVb


FUNC_BEGIN VpssUserListCreate
    /*000114d0*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000114d4*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000114d8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000114dc*/ MOV         R5, R0 
    /*000114e0*/ LDR         R4, [R3, R0, LSL #2] 
    /*000114e4*/ SUB         SP, SP, #12 
    /*000114e8*/ MOV         R7, R1 
    /*000114ec*/ MOV         R6, R2 
    /*000114f0*/ MOV         R0, R4 
    /*000114f4*/ BL          0x00000000000114F4          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*000114f8*/ CMP         R0, #0 
    /*000114fc*/ BNE         VpssUserListCreate_x11524
    /*00011500*/ ADD         R0, R4, R7, LSL #5 
    /*00011504*/ MOV         R1, R6 
    /*00011508*/ ADD         R0, R0, #1696               @ 0x6a0 
    /*0001150c*/ ADD         R0, R0, #8 
    /*00011510*/ BL          0x0000000000011510          @ VPSS_CreatPicQueue [R_ARM_CALL: .text+0x10d98] 
    /*00011514*/ CMP         R0, #0 
    /*00011518*/ BNE         VpssUserListCreate_x11530
    VpssUserListCreate_x1151c:
    /*0001151c*/ ADD         SP, SP, #12 
    /*00011520*/ POP         {R4, R5, R6, R7, PC} 
    VpssUserListCreate_x11524:
    /*00011524*/ MOVW        R0, #32774                  @ 0x8006 
    /*00011528*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001152c*/ B           VpssUserListCreate_x1151c
    VpssUserListCreate_x11530:
    /*00011530*/ MOV         R3, #108                    @ 0x6c 
    /*00011534*/ STR         R5, [SP, #4] 
    /*00011538*/ STR         R3, [SP] 
    /*0001153c*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42f8] 
    /*00011540*/ LDR         R3, [PC, #20]               @ 0x000000000001155c 
    /*00011544*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42f8] 
    /*00011548*/ MOV         R1, #7 
    /*0001154c*/ MOV         R0, #3 
    /*00011550*/ BL          0x0000000000011550          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011554*/ MVN         R0, #0 
    /*00011558*/ B           VpssUserListCreate_x1151c
    /*0001155c*/ ANDEQ       R0, R0, R0, ROR #22 
FUNC_END VpssUserListCreate


FUNC_BEGIN VpssUserListDestroy
    /*00011560*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00011564*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00011568*/ PUSH        {R4, R5, R6, LR} 
    /*0001156c*/ MOV         R6, R1 
    /*00011570*/ LDR         R4, [R3, R0, LSL #2] 
    /*00011574*/ MOV         R0, R4 
    /*00011578*/ BL          0x0000000000011578          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*0001157c*/ SUBS        R5, R0, #0 
    /*00011580*/ BNE         VpssUserListDestroy_x1159c
    /*00011584*/ ADD         R0, R4, R6, LSL #5 
    /*00011588*/ ADD         R0, R0, #1696               @ 0x6a0 
    /*0001158c*/ ADD         R0, R0, #8 
    /*00011590*/ BL          0x0000000000011590          @ VPSS_DestroyPicQueue [R_ARM_CALL: .text+0x10e24] 
    VpssUserListDestroy_x11594:
    /*00011594*/ MOV         R0, R5 
    /*00011598*/ POP         {R4, R5, R6, PC} 
    VpssUserListDestroy_x1159c:
    /*0001159c*/ MOVW        R5, #32774                  @ 0x8006 
    /*000115a0*/ MOVT        R5, #40967                  @ 0xa007 
    /*000115a4*/ B           VpssUserListDestroy_x11594
FUNC_END VpssUserListDestroy


FUNC_BEGIN VpssUserListGetBusy
    /*000115a8*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000115ac*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000115b0*/ PUSH        {R4, LR} 
    /*000115b4*/ SUB         SP, SP, #8 
    /*000115b8*/ LDR         R4, [R3, R0, LSL #2] 
    /*000115bc*/ CMP         R4, #0 
    /*000115c0*/ BEQ         VpssUserListGetBusy_x115dc
    /*000115c4*/ ADD         R0, R4, R1, LSL #5 
    /*000115c8*/ ADD         R0, R0, #1696               @ 0x6a0 
    /*000115cc*/ ADD         R0, R0, #8 
    /*000115d0*/ ADD         SP, SP, #8 
    /*000115d4*/ POP         {R4, LR} 
    VpssUserListGetBusy_x115d8:
    /*000115d8*/ B           VpssUserListGetBusy_x115d8  @ VPSS_PicQueueGetBusy [R_ARM_JUMP24: .text+0x10f14] 
    VpssUserListGetBusy_x115dc:
    /*000115dc*/ MOV         R3, #136                    @ 0x88 
    /*000115e0*/ MOV         R1, #7 
    /*000115e4*/ STR         R3, [SP] 
    /*000115e8*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4330] 
    /*000115ec*/ LDR         R3, [PC, #20]               @ 0x0000000000011608 
    /*000115f0*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4330] 
    /*000115f4*/ MOV         R0, #3 
    /*000115f8*/ BL          0x00000000000115F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000115fc*/ MOV         R0, R4 
    /*00011600*/ ADD         SP, SP, #8 
    /*00011604*/ POP         {R4, PC} 
    /*00011608*/ ANDEQ       R0, R0, R4, ROR FP 
FUNC_END VpssUserListGetBusy


FUNC_BEGIN VpssUserListPutFree
    /*0001160c*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00011610*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00011614*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00011618*/ MOV         R7, R1 
    /*0001161c*/ LDR         R4, [R3, R0, LSL #2] 
    /*00011620*/ MOV         R6, R2 
    /*00011624*/ MOV         R0, R4 
    /*00011628*/ BL          0x0000000000011628          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*0001162c*/ SUBS        R5, R0, #0 
    /*00011630*/ BNE         VpssUserListPutFree_x11650
    /*00011634*/ ADD         R0, R4, R7, LSL #5 
    /*00011638*/ MOV         R1, R6 
    /*0001163c*/ ADD         R0, R0, #1696               @ 0x6a0 
    /*00011640*/ ADD         R0, R0, #8 
    /*00011644*/ BL          0x0000000000011644          @ VPSS_PicQueuePutFree [R_ARM_CALL: .text+0x11034] 
    VpssUserListPutFree_x11648:
    /*00011648*/ MOV         R0, R5 
    /*0001164c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssUserListPutFree_x11650:
    /*00011650*/ MOVW        R5, #32774                  @ 0x8006 
    /*00011654*/ MOVT        R5, #40967                  @ 0xa007 
    /*00011658*/ B           VpssUserListPutFree_x11648
FUNC_END VpssUserListPutFree


FUNC_BEGIN VpssUserListGetBusyNum
    /*0001165c*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00011660*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00011664*/ PUSH        {R4, R5, R6, LR} 
    /*00011668*/ MOV         R5, R1 
    /*0001166c*/ LDR         R4, [R3, R0, LSL #2] 
    /*00011670*/ MOV         R0, R4 
    /*00011674*/ BL          0x0000000000011674          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*00011678*/ CMP         R0, #0 
    /*0001167c*/ BEQ         VpssUserListGetBusyNum_x1168c
    /*00011680*/ MOVW        R0, #32774                  @ 0x8006 
    /*00011684*/ MOVT        R0, #40967                  @ 0xa007 
    /*00011688*/ POP         {R4, R5, R6, PC} 
    VpssUserListGetBusyNum_x1168c:
    /*0001168c*/ ADD         R0, R4, R5, LSL #5 
    /*00011690*/ ADD         R0, R0, #1696               @ 0x6a0 
    /*00011694*/ ADD         R0, R0, #8 
    /*00011698*/ POP         {R4, R5, R6, LR} 
    VpssUserListGetBusyNum_x1169c:
    /*0001169c*/ B           VpssUserListGetBusyNum_x1169c@ VPSS_PicQueueGetBusyNum [R_ARM_JUMP24: .text+0x11060] 
FUNC_END VpssUserListGetBusyNum


FUNC_BEGIN VpssUserGetGrpFrame
    /*000116a0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000116a4*/ SUB         SP, SP, #404                @ 0x194 
    /*000116a8*/ MOV         R7, R0 
    /*000116ac*/ MOV         R0, R2 
    /*000116b0*/ STR         R2, [SP, #28] 
    /*000116b4*/ MOV         R9, R1 
    /*000116b8*/ BL          0x00000000000116B8          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*000116bc*/ CMP         R0, #0 
    /*000116c0*/ BNE         VpssUserGetGrpFrame_x119b0
    /*000116c4*/ MOV         R0, R7 
    /*000116c8*/ BL          0x00000000000116C8          @ VpssDefCheckGrpId [R_ARM_CALL: .text+0x3fc] 
    /*000116cc*/ SUBS        R6, R0, #0 
    /*000116d0*/ BNE         VpssUserGetGrpFrame_x119bc
    /*000116d4*/ MOV         R4, #92                     @ 0x5c 
    /*000116d8*/ MOVW        R5, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000116dc*/ MUL         R4, R4, R7 
    /*000116e0*/ MOVT        R5, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000116e4*/ MOVW        SL, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000116e8*/ MOVT        SL, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000116ec*/ ADD         R1, SP, #36                 @ 0x24 
    /*000116f0*/ ADD         R8, R4, #48                 @ 0x30 
    /*000116f4*/ ADD         R8, R5, R8 
    /*000116f8*/ MOV         R0, R8 
    /*000116fc*/ BL          0x00000000000116FC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011700*/ LDR         R3, [SL, R7, LSL #2] 
    /*00011704*/ CMP         R3, #0 
    /*00011708*/ STREQ       R7, [SP, #4] 
    /*0001170c*/ STR         R3, [SP, #24] 
    /*00011710*/ MOVEQ       R3, #213                    @ 0xd5 
    /*00011714*/ BEQ         VpssUserGetGrpFrame_x11904
    /*00011718*/ CMP         R9, #0 
    /*0001171c*/ BLT         VpssUserGetGrpFrame_x119c8
    /*00011720*/ LDR         R3, [SP, #24] 
    /*00011724*/ LDR         R3, [R3, #2592]             @ 0xa20 
    /*00011728*/ CMP         R9, R3 
    /*0001172c*/ BGE         VpssUserGetGrpFrame_x119c8
    /*00011730*/ LDR         R3, [SP, #28] 
    /*00011734*/ MOV         R2, #336                    @ 0x150 
    /*00011738*/ MOV         R0, #1 
    /*0001173c*/ STRB        R6, [SP, #64]               @ 0x40 
    /*00011740*/ LDR         FP, [R3, #8] 
    /*00011744*/ MOV         R1, FP 
    /*00011748*/ BL          0x0000000000011748          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*0001174c*/ CMP         R0, #0 
    /*00011750*/ BNE         VpssUserGetGrpFrame_x11798
    VpssUserGetGrpFrame_x11754:
    /*00011754*/ MOV         R3, #227                    @ 0xe3 
    /*00011758*/ MOV         R1, #7 
    /*0001175c*/ STR         R3, [SP] 
    /*00011760*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x44b4] 
    /*00011764*/ LDR         R3, [PC, #932]              @ 0x0000000000011b10 
    /*00011768*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x44b4] 
    /*0001176c*/ STR         R7, [SP, #4] 
    /*00011770*/ MOV         R0, #3 
    /*00011774*/ BL          0x0000000000011774          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011778*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001177c*/ MOV         R0, R8 
    /*00011780*/ MOVW        R4, #32771                  @ 0x8003 
    /*00011784*/ BL          0x0000000000011784          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011788*/ MOVT        R4, #40967                  @ 0xa007 
    VpssUserGetGrpFrame_x1178c:
    /*0001178c*/ MOV         R0, R4 
    /*00011790*/ ADD         SP, SP, #404                @ 0x194 
    /*00011794*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssUserGetGrpFrame_x11798:
    /*00011798*/ ADD         R0, FP, #332                @ 0x14c 
    /*0001179c*/ MOV         R2, #1 
    /*000117a0*/ ADD         R0, R0, #3 
    /*000117a4*/ ADD         R1, SP, #64                 @ 0x40 
    /*000117a8*/ BL          0x00000000000117A8          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*000117ac*/ SUBS        R6, R0, #0 
    /*000117b0*/ BNE         VpssUserGetGrpFrame_x11754
    /*000117b4*/ ADD         R1, R5, R4 
    /*000117b8*/ LDR         R2, [SL, R7, LSL #2] 
    /*000117bc*/ LDR         R1, [R1, #12] 
    /*000117c0*/ CMP         R2, #0 
    /*000117c4*/ STR         R1, [SP, #20] 
    /*000117c8*/ BEQ         VpssUserGetGrpFrame_x11938
    /*000117cc*/ ADD         FP, R9, #548                @ 0x224 
    /*000117d0*/ ADD         R4, R4, #24 
    /*000117d4*/ ADD         FP, FP, #2 
    /*000117d8*/ ADD         R5, R5, R4 
    /*000117dc*/ MOV         R4, R6 
    VpssUserGetGrpFrame_x117e0:
    /*000117e0*/ LDR         R3, [R2, FP, LSL #2] 
    /*000117e4*/ CMP         R3, #0 
    /*000117e8*/ BNE         VpssUserGetGrpFrame_x11964
    /*000117ec*/ ADD         R1, SP, #36                 @ 0x24 
    /*000117f0*/ MOV         R0, R8 
    /*000117f4*/ BL          0x00000000000117F4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000117f8*/ CMP         R4, #0 
    /*000117fc*/ BEQ         VpssUserGetGrpFrame_x1183c
    /*00011800*/ STR         R9, [SP, #8] 
    /*00011804*/ MOVW        R3, #258                    @ 0x102 
    /*00011808*/ STR         R7, [SP, #4] 
    /*0001180c*/ MOV         R1, #7 
    /*00011810*/ STR         R3, [SP] 
    /*00011814*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43c4] 
    /*00011818*/ LDR         R3, [PC, #752]              @ 0x0000000000011b10 
    /*0001181c*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43c4] 
    /*00011820*/ MOV         R0, #3 
    /*00011824*/ MOVW        R4, #32782                  @ 0x800e 
    /*00011828*/ BL          0x0000000000011828          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001182c*/ MOVT        R4, #40967                  @ 0xa007 
    /*00011830*/ MOV         R0, R4 
    /*00011834*/ ADD         SP, SP, #404                @ 0x194 
    /*00011838*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssUserGetGrpFrame_x1183c:
    /*0001183c*/ LDR         R3, [SP, #20] 
    /*00011840*/ ADD         R0, SP, #40                 @ 0x28 
    /*00011844*/ STR         R6, [SP, #56]               @ 0x38 
    /*00011848*/ MOVW        R6, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x1f7c] 
    /*0001184c*/ STR         R4, [SP, #48]               @ 0x30 
    /*00011850*/ MOVT        R6, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x1f7c] 
    /*00011854*/ STR         R3, [SP, #52]               @ 0x34 
    /*00011858*/ MOV         R4, #1000                   @ 0x3e8 
    /*0001185c*/ MOV         R3, #5 
    /*00011860*/ STR         R7, [SP, #40]               @ 0x28 
    /*00011864*/ STR         R9, [SP, #44]               @ 0x2c 
    /*00011868*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0001186c*/ BL          0x000000000001186C          @ VPSS_WaitConditionCallBack [R_ARM_CALL: .text+0x1f7c] 
    /*00011870*/ B           VpssUserGetGrpFrame_x11888
    VpssUserGetGrpFrame_x11874:
    /*00011874*/ BL          0x0000000000011874          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00011878*/ ADD         R3, R0, #512                @ 0x200 
    /*0001187c*/ MOV         R4, R0 
    /*00011880*/ BICS        R3, R3, #512                @ 0x200 
    /*00011884*/ BEQ         VpssUserGetGrpFrame_x118b4
    VpssUserGetGrpFrame_x11888:
    /*00011888*/ ADD         R0, SP, #40                 @ 0x28 
    /*0001188c*/ BL          0x000000000001188C          @ VPSS_WaitConditionCallBack [R_ARM_CALL: .text+0x1f7c] 
    /*00011890*/ MOV         R3, R4 
    /*00011894*/ ADD         R2, SP, #40                 @ 0x28 
    /*00011898*/ MOV         R1, R6 
    /*0001189c*/ CMP         R0, #0 
    /*000118a0*/ MOV         R0, R5 
    /*000118a4*/ BEQ         VpssUserGetGrpFrame_x11874
    /*000118a8*/ MOV         R0, R4 
    /*000118ac*/ BL          0x00000000000118AC          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*000118b0*/ MOV         R4, R0 
    VpssUserGetGrpFrame_x118b4:
    /*000118b4*/ ADD         R1, SP, #36                 @ 0x24 
    /*000118b8*/ MOV         R0, R8 
    /*000118bc*/ LDR         R6, [SP, #56]               @ 0x38 
    /*000118c0*/ BL          0x00000000000118C0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000118c4*/ CMP         R4, #0 
    /*000118c8*/ BLT         VpssUserGetGrpFrame_x11a80
    /*000118cc*/ BEQ         VpssUserGetGrpFrame_x11ac0
    /*000118d0*/ CMP         R6, #0 
    /*000118d4*/ BEQ         VpssUserGetGrpFrame_x11998
    /*000118d8*/ LDR         R1, [SP, #20] 
    /*000118dc*/ MOV         R0, R7 
    /*000118e0*/ BL          0x00000000000118E0          @ AbnormalVerifyAfterWait [R_ARM_CALL: .text+0x1ff4] 
    /*000118e4*/ CMP         R0, #0 
    /*000118e8*/ BNE         VpssUserGetGrpFrame_x11aec
    /*000118ec*/ LDR         R2, [SL, R7, LSL #2] 
    /*000118f0*/ MOV         R4, #1 
    /*000118f4*/ CMP         R2, #0 
    /*000118f8*/ BNE         VpssUserGetGrpFrame_x117e0
    /*000118fc*/ MOVW        R3, #315                    @ 0x13b 
    /*00011900*/ STR         R7, [SP, #4] 
    VpssUserGetGrpFrame_x11904:
    /*00011904*/ STR         R3, [SP] 
    /*00011908*/ MOV         R1, #7 
    /*0001190c*/ LDR         R3, [PC, #508]              @ 0x0000000000011b10 
    /*00011910*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4358] 
    /*00011914*/ MOV         R0, #3 
    /*00011918*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4358] 
    /*0001191c*/ BL          0x000000000001191C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011920*/ ADD         R1, SP, #36                 @ 0x24 
    /*00011924*/ MOV         R0, R8 
    /*00011928*/ MOVW        R4, #32773                  @ 0x8005 
    /*0001192c*/ BL          0x000000000001192C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011930*/ MOVT        R4, #40967                  @ 0xa007 
    /*00011934*/ B           VpssUserGetGrpFrame_x1178c
    VpssUserGetGrpFrame_x11938:
    /*00011938*/ MOV         R3, #175                    @ 0xaf 
    /*0001193c*/ ADD         FP, R9, #548                @ 0x224 
    /*00011940*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4358] 
    /*00011944*/ STR         R3, [SP] 
    /*00011948*/ STR         R7, [SP, #4] 
    /*0001194c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4358] 
    /*00011950*/ LDR         R3, [PC, #444]              @ 0x0000000000011b14 
    /*00011954*/ MOV         R1, #7 
    /*00011958*/ MOV         R0, #3 
    /*0001195c*/ ADD         FP, FP, #2 
    /*00011960*/ BL          0x0000000000011960          @ HI_LOG [R_ARM_CALL: +0x0] 
    VpssUserGetGrpFrame_x11964:
    /*00011964*/ LDR         R3, [SP, #24] 
    /*00011968*/ LDR         R1, [R3, FP, LSL #2] 
    /*0001196c*/ CMP         R1, #0 
    /*00011970*/ BNE         VpssUserGetGrpFrame_x11a08
    /*00011974*/ MOV         R3, #332                    @ 0x14c 
    /*00011978*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x44f0] 
    /*0001197c*/ STR         R3, [SP] 
    /*00011980*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x44f0] 
    /*00011984*/ STR         R7, [SP, #4] 
    /*00011988*/ MOV         R1, #7 
    /*0001198c*/ LDR         R3, [PC, #380]              @ 0x0000000000011b10 
    /*00011990*/ MOV         R0, #3 
    /*00011994*/ BL          0x0000000000011994          @ HI_LOG [R_ARM_CALL: +0x0] 
    VpssUserGetGrpFrame_x11998:
    /*00011998*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001199c*/ MOV         R0, R8 
    /*000119a0*/ MOVW        R4, #32784                  @ 0x8010 
    /*000119a4*/ BL          0x00000000000119A4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000119a8*/ MOVT        R4, #40967                  @ 0xa007 
    /*000119ac*/ B           VpssUserGetGrpFrame_x1178c
    VpssUserGetGrpFrame_x119b0:
    /*000119b0*/ MOVW        R4, #32774                  @ 0x8006 
    /*000119b4*/ MOVT        R4, #40967                  @ 0xa007 
    /*000119b8*/ B           VpssUserGetGrpFrame_x1178c
    VpssUserGetGrpFrame_x119bc:
    /*000119bc*/ MOVW        R4, #32769                  @ 0x8001 
    /*000119c0*/ MOVT        R4, #40967                  @ 0xa007 
    /*000119c4*/ B           VpssUserGetGrpFrame_x1178c
    VpssUserGetGrpFrame_x119c8:
    /*000119c8*/ MOV         R3, #220                    @ 0xdc 
    /*000119cc*/ STR         R3, [SP] 
    /*000119d0*/ LDR         R3, [PC, #312]              @ 0x0000000000011b10 
    /*000119d4*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x438c] 
    /*000119d8*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x438c] 
    /*000119dc*/ MOV         R1, #7 
    /*000119e0*/ MOV         R0, #3 
    /*000119e4*/ MOVW        R4, #32771                  @ 0x8003 
    /*000119e8*/ STR         R9, [SP, #8] 
    /*000119ec*/ STR         R7, [SP, #4] 
    VpssUserGetGrpFrame_x119f0:
    /*000119f0*/ BL          0x00000000000119F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000119f4*/ ADD         R1, SP, #36                 @ 0x24 
    /*000119f8*/ MOV         R0, R8 
    /*000119fc*/ MOVT        R4, #40967                  @ 0xa007 
    /*00011a00*/ BL          0x0000000000011A00          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011a04*/ B           VpssUserGetGrpFrame_x1178c
    VpssUserGetGrpFrame_x11a08:
    /*00011a08*/ ADD         R1, R1, #8 
    /*00011a0c*/ MOV         R2, #336                    @ 0x150 
    /*00011a10*/ ADD         R0, SP, #64                 @ 0x40 
    /*00011a14*/ BL          0x0000000000011A14          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011a18*/ MOV         R1, #12 
    /*00011a1c*/ ADD         R0, SP, #64                 @ 0x40 
    /*00011a20*/ BL          0x0000000000011A20          @ VpssGetVb [R_ARM_CALL: .text+0x11424] 
    /*00011a24*/ SUBS        R4, R0, #0 
    /*00011a28*/ BNE         VpssUserGetGrpFrame_x11b00
    /*00011a2c*/ ADD         R1, SP, #36                 @ 0x24 
    /*00011a30*/ MOV         R0, R8 
    /*00011a34*/ BL          0x0000000000011A34          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011a38*/ LDR         R3, [SP, #28] 
    /*00011a3c*/ ADD         R1, SP, #64                 @ 0x40 
    /*00011a40*/ MOV         R2, #336                    @ 0x150 
    /*00011a44*/ LDR         R0, [R3, #8] 
    /*00011a48*/ BL          0x0000000000011A48          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*00011a4c*/ CMP         R0, #0 
    /*00011a50*/ BEQ         VpssUserGetGrpFrame_x1178c
    /*00011a54*/ MOVW        R3, #354                    @ 0x162 
    /*00011a58*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4480] 
    /*00011a5c*/ STR         R3, [SP] 
    /*00011a60*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4480] 
    /*00011a64*/ LDR         R3, [PC, #164]              @ 0x0000000000011b10 
    /*00011a68*/ MOV         R1, #7 
    /*00011a6c*/ MOV         R0, #3 
    /*00011a70*/ MOVW        R4, #32784                  @ 0x8010 
    /*00011a74*/ BL          0x0000000000011A74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011a78*/ MOVT        R4, #40967                  @ 0xa007 
    /*00011a7c*/ B           VpssUserGetGrpFrame_x1178c
    VpssUserGetGrpFrame_x11a80:
    /*00011a80*/ LDR         R3, [PC, #136]              @ 0x0000000000011b10 
    /*00011a84*/ MOV         R1, #280                    @ 0x118 
    /*00011a88*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4404] 
    /*00011a8c*/ STR         R1, [SP, #8] 
    /*00011a90*/ STR         R1, [SP] 
    /*00011a94*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4404] 
    /*00011a98*/ STR         R3, [SP, #4] 
    /*00011a9c*/ MOV         R1, #7 
    /*00011aa0*/ MOV         R0, #4 
    /*00011aa4*/ MOV         R4, #65024                  @ 0xfe00 
    /*00011aa8*/ BL          0x0000000000011AA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011aac*/ ADD         R1, SP, #36                 @ 0x24 
    /*00011ab0*/ MOV         R0, R8 
    /*00011ab4*/ MOVT        R4, #65535                  @ 0xffff 
    /*00011ab8*/ BL          0x0000000000011AB8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011abc*/ B           VpssUserGetGrpFrame_x1178c
    VpssUserGetGrpFrame_x11ac0:
    /*00011ac0*/ MOV         R3, #288                    @ 0x120 
    /*00011ac4*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4440] 
    /*00011ac8*/ STR         R3, [SP] 
    /*00011acc*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4440] 
    /*00011ad0*/ STR         R9, [SP, #8] 
    /*00011ad4*/ MOV         R1, #7 
    /*00011ad8*/ STR         R7, [SP, #4] 
    /*00011adc*/ MOV         R0, #3 
    /*00011ae0*/ LDR         R3, [PC, #40]               @ 0x0000000000011b10 
    /*00011ae4*/ MOVW        R4, #32782                  @ 0x800e 
    /*00011ae8*/ B           VpssUserGetGrpFrame_x119f0
    VpssUserGetGrpFrame_x11aec:
    /*00011aec*/ MOV         R4, R0 
    /*00011af0*/ ADD         R1, SP, #36                 @ 0x24 
    /*00011af4*/ MOV         R0, R8 
    /*00011af8*/ BL          0x0000000000011AF8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011afc*/ B           VpssUserGetGrpFrame_x1178c
    VpssUserGetGrpFrame_x11b00:
    /*00011b00*/ ADD         R1, SP, #36                 @ 0x24 
    /*00011b04*/ MOV         R0, R8 
    /*00011b08*/ BL          0x0000000000011B08          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011b0c*/ B           VpssUserGetGrpFrame_x1178c
    /*00011b10*/ ANDEQ       R0, R0, R8, LSL #23 
    /*00011b14*/ MULEQ       R0, IP, FP 
FUNC_END VpssUserGetGrpFrame


FUNC_BEGIN VpssUserReleaseGrpFrame
    /*00011b18*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00011b1c*/ SUB         SP, SP, #364                @ 0x16c 
    /*00011b20*/ MOV         R7, R1 
    /*00011b24*/ MOV         R4, R2 
    /*00011b28*/ MOV         R6, R0 
    /*00011b2c*/ BL          0x0000000000011B2C          @ VpssDefCheckGrpId [R_ARM_CALL: .text+0x3fc] 
    /*00011b30*/ CMP         R0, #0 
    /*00011b34*/ BNE         VpssUserReleaseGrpFrame_x11c50
    /*00011b38*/ MOV         R0, R4 
    /*00011b3c*/ BL          0x0000000000011B3C          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*00011b40*/ CMP         R0, #0 
    /*00011b44*/ BNE         VpssUserReleaseGrpFrame_x11c5c
    /*00011b48*/ LDR         R5, [R4, #8] 
    /*00011b4c*/ MOV         R2, #336                    @ 0x150 
    /*00011b50*/ MOV         R1, R5 
    /*00011b54*/ BL          0x0000000000011B54          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*00011b58*/ CMP         R0, #0 
    /*00011b5c*/ BNE         VpssUserReleaseGrpFrame_x11b98
    VpssUserReleaseGrpFrame_x11b60:
    /*00011b60*/ MOV         R3, #376                    @ 0x178 
    /*00011b64*/ STR         R6, [SP, #4] 
    /*00011b68*/ STR         R3, [SP] 
    /*00011b6c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x459c] 
    /*00011b70*/ LDR         R3, [PC, #288]              @ 0x0000000000011c98 
    /*00011b74*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x459c] 
    /*00011b78*/ MOV         R1, #7 
    /*00011b7c*/ MOV         R0, #3 
    /*00011b80*/ BL          0x0000000000011B80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011b84*/ MOVW        R5, #32771                  @ 0x8003 
    /*00011b88*/ MOVT        R5, #40967                  @ 0xa007 
    VpssUserReleaseGrpFrame_x11b8c:
    /*00011b8c*/ MOV         R0, R5 
    /*00011b90*/ ADD         SP, SP, #364                @ 0x16c 
    /*00011b94*/ POP         {R4, R5, R6, R7, PC} 
    VpssUserReleaseGrpFrame_x11b98:
    /*00011b98*/ ADD         R1, R5, #332                @ 0x14c 
    /*00011b9c*/ MOV         R2, #1 
    /*00011ba0*/ ADD         R1, R1, #3 
    /*00011ba4*/ ADD         R0, SP, #24 
    /*00011ba8*/ BL          0x0000000000011BA8          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*00011bac*/ CMP         R0, #0 
    /*00011bb0*/ BNE         VpssUserReleaseGrpFrame_x11b60
    /*00011bb4*/ LDR         R1, [R4, #8] 
    /*00011bb8*/ MOV         R2, #336                    @ 0x150 
    /*00011bbc*/ ADD         R0, SP, #24 
    /*00011bc0*/ BL          0x0000000000011BC0          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*00011bc4*/ CMP         R0, #0 
    /*00011bc8*/ BNE         VpssUserReleaseGrpFrame_x11c68
    /*00011bcc*/ LDR         R3, [PC, #200]              @ 0x0000000000011c9c 
    /*00011bd0*/ MOV         R4, #92                     @ 0x5c 
    /*00011bd4*/ ADD         R1, SP, #20 
    /*00011bd8*/ MLA         R4, R4, R6, R3 
    /*00011bdc*/ MOV         R0, R4 
    /*00011be0*/ BL          0x0000000000011BE0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011be4*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00011be8*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00011bec*/ LDR         R3, [R3, R6, LSL #2] 
    /*00011bf0*/ CMP         R3, #0 
    /*00011bf4*/ BEQ         VpssUserReleaseGrpFrame_x11c70
    VpssUserReleaseGrpFrame_x11bf8:
    /*00011bf8*/ ADD         R0, SP, #24 
    /*00011bfc*/ MOV         R1, #12 
    /*00011c00*/ BL          0x0000000000011C00          @ VpssPutVb [R_ARM_CALL: .text+0x11378] 
    /*00011c04*/ SUBS        R5, R0, #0 
    /*00011c08*/ BNE         VpssUserReleaseGrpFrame_x11c24
    VpssUserReleaseGrpFrame_x11c0c:
    /*00011c0c*/ MOV         R0, R4 
    /*00011c10*/ ADD         R1, SP, #20 
    /*00011c14*/ BL          0x0000000000011C14          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011c18*/ MOV         R0, R5 
    /*00011c1c*/ ADD         SP, SP, #364                @ 0x16c 
    /*00011c20*/ POP         {R4, R5, R6, R7, PC} 
    VpssUserReleaseGrpFrame_x11c24:
    /*00011c24*/ MOVW        R3, #397                    @ 0x18d 
    /*00011c28*/ STR         R7, [SP, #8] 
    /*00011c2c*/ STR         R3, [SP] 
    /*00011c30*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4554] 
    /*00011c34*/ STR         R6, [SP, #4] 
    /*00011c38*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4554] 
    /*00011c3c*/ LDR         R3, [PC, #84]               @ 0x0000000000011c98 
    /*00011c40*/ MOV         R1, #7 
    /*00011c44*/ MOV         R0, #3 
    /*00011c48*/ BL          0x0000000000011C48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011c4c*/ B           VpssUserReleaseGrpFrame_x11c0c
    VpssUserReleaseGrpFrame_x11c50:
    /*00011c50*/ MOVW        R5, #32769                  @ 0x8001 
    /*00011c54*/ MOVT        R5, #40967                  @ 0xa007 
    /*00011c58*/ B           VpssUserReleaseGrpFrame_x11b8c
    VpssUserReleaseGrpFrame_x11c5c:
    /*00011c5c*/ MOVW        R5, #32774                  @ 0x8006 
    /*00011c60*/ MOVT        R5, #40967                  @ 0xa007 
    /*00011c64*/ B           VpssUserReleaseGrpFrame_x11b8c
    VpssUserReleaseGrpFrame_x11c68:
    /*00011c68*/ MVN         R5, #0 
    /*00011c6c*/ B           VpssUserReleaseGrpFrame_x11b8c
    VpssUserReleaseGrpFrame_x11c70:
    /*00011c70*/ MOVW        R3, #391                    @ 0x187 
    /*00011c74*/ STR         R6, [SP, #4] 
    /*00011c78*/ STR         R3, [SP] 
    /*00011c7c*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4520] 
    /*00011c80*/ LDR         R3, [PC, #16]               @ 0x0000000000011c98 
    /*00011c84*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4520] 
    /*00011c88*/ MOV         R1, #7 
    /*00011c8c*/ MOV         R0, #6 
    /*00011c90*/ BL          0x0000000000011C90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011c94*/ B           VpssUserReleaseGrpFrame_x11bf8
    /*00011c98*/ @           <UNDEFINED> instruction: 0x00000bb4 
    /*00011c9c*/ ANDEQ       R0, R0, R0, LSR R0          @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
FUNC_END VpssUserReleaseGrpFrame


FUNC_BEGIN VpssUserGetFrame
    /*00011ca0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00011ca4*/ SUB         SP, SP, #412                @ 0x19c 
    /*00011ca8*/ MOV         R8, R0 
    /*00011cac*/ MOV         R0, R2 
    /*00011cb0*/ STR         R2, [SP, #36]               @ 0x24 
    /*00011cb4*/ MOV         SL, R1 
    /*00011cb8*/ MOV         R4, R3 
    /*00011cbc*/ STR         R3, [SP, #24] 
    /*00011cc0*/ BL          0x0000000000011CC0          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*00011cc4*/ CMP         R0, #0 
    /*00011cc8*/ BNE         VpssUserGetFrame_x121fc
    /*00011ccc*/ MOV         R0, R8 
    /*00011cd0*/ BL          0x0000000000011CD0          @ VpssDefCheckGrpId [R_ARM_CALL: .text+0x3fc] 
    /*00011cd4*/ CMP         R0, #0 
    /*00011cd8*/ BNE         VpssUserGetFrame_x12220
    /*00011cdc*/ MOV         R0, SL 
    /*00011ce0*/ BL          0x0000000000011CE0          @ VpssDefCheckChnId [R_ARM_CALL: .text+0x410] 
    /*00011ce4*/ SUBS        R3, R0, #0 
    /*00011ce8*/ BNE         VpssUserGetFrame_x122f0
    /*00011cec*/ CMN         R4, #1 
    /*00011cf0*/ BLT         VpssUserGetFrame_x12354
    /*00011cf4*/ MOV         R2, #336                    @ 0x150 
    /*00011cf8*/ LDR         R1, [SP, #36]               @ 0x24 
    /*00011cfc*/ MOV         R0, #1 
    /*00011d00*/ STRB        R3, [SP, #72]               @ 0x48 
    /*00011d04*/ BL          0x0000000000011D04          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*00011d08*/ CMP         R0, #0 
    /*00011d0c*/ BNE         VpssUserGetFrame_x11d4c
    VpssUserGetFrame_x11d10:
    /*00011d10*/ MOV         R3, #432                    @ 0x1b0 
    /*00011d14*/ STR         SL, [SP, #8] 
    /*00011d18*/ STR         R3, [SP] 
    /*00011d1c*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x479c] 
    /*00011d20*/ STR         R8, [SP, #4] 
    /*00011d24*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x479c] 
    /*00011d28*/ LDR         R3, [PC, #1720]             @ 0x00000000000123e8 
    /*00011d2c*/ MOV         R1, #7 
    /*00011d30*/ MOV         R0, #3 
    /*00011d34*/ MOVW        R4, #32771                  @ 0x8003 
    /*00011d38*/ BL          0x0000000000011D38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011d3c*/ MOVT        R4, #40967                  @ 0xa007 
    VpssUserGetFrame_x11d40:
    /*00011d40*/ MOV         R0, R4 
    /*00011d44*/ ADD         SP, SP, #412                @ 0x19c 
    /*00011d48*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssUserGetFrame_x11d4c:
    /*00011d4c*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00011d50*/ MOV         R2, #1 
    /*00011d54*/ ADD         R1, SP, #72                 @ 0x48 
    /*00011d58*/ ADD         R0, R3, #332                @ 0x14c 
    /*00011d5c*/ ADD         R0, R0, #3 
    /*00011d60*/ BL          0x0000000000011D60          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*00011d64*/ CMP         R0, #0 
    /*00011d68*/ BNE         VpssUserGetFrame_x11d10
    /*00011d6c*/ MOV         R4, #92                     @ 0x5c 
    /*00011d70*/ MOVW        R6, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011d74*/ MUL         R4, R4, R8 
    /*00011d78*/ MOVT        R6, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011d7c*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00011d80*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00011d84*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00011d88*/ STR         R3, [SP, #28] 
    /*00011d8c*/ ADD         R9, R4, #48                 @ 0x30 
    /*00011d90*/ MOV         R5, R3 
    /*00011d94*/ ADD         R9, R6, R9 
    /*00011d98*/ MOV         R0, R9 
    /*00011d9c*/ BL          0x0000000000011D9C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011da0*/ LDR         R5, [R5, R8, LSL #2] 
    /*00011da4*/ ADD         R3, R6, R4 
    /*00011da8*/ CMP         R5, #0 
    /*00011dac*/ LDR         FP, [R3, #12] 
    /*00011db0*/ BEQ         VpssUserGetFrame_x12388
    /*00011db4*/ ADD         R3, SL, #7104               @ 0x1bc0 
    /*00011db8*/ ADD         R3, R3, #30 
    /*00011dbc*/ ADD         R3, R5, R3, LSL #2 
    /*00011dc0*/ LDR         R3, [R3, #4] 
    /*00011dc4*/ CMP         R3, #0 
    /*00011dc8*/ BEQ         VpssUserGetFrame_x122fc
    /*00011dcc*/ CMP         SL, #2 
    /*00011dd0*/ BLS         VpssUserGetFrame_x11f68
    /*00011dd4*/ SUB         R7, SL, #3 
    /*00011dd8*/ MOV         R3, #40                     @ 0x28 
    /*00011ddc*/ MLA         R3, R3, R7, R5 
    /*00011de0*/ LDR         R3, [R3, #128]              @ 0x80 
    /*00011de4*/ CMP         R3, #2 
    /*00011de8*/ BHI         VpssUserGetFrame_x12394
    VpssUserGetFrame_x11dec:
    /*00011dec*/ MOV         R1, SL 
    /*00011df0*/ MOV         R0, R8 
    /*00011df4*/ BL          0x0000000000011DF4          @ VpssIsLowDelayChn [R_ARM_CALL: .text+0x3d00] 
    /*00011df8*/ SUBS        R5, R0, #0 
    /*00011dfc*/ BNE         VpssUserGetFrame_x12318
    /*00011e00*/ LDR         R3, [SP, #24] 
    /*00011e04*/ CMP         R3, #0 
    /*00011e08*/ BLE         VpssUserGetFrame_x120b0
    /*00011e0c*/ LDR         R3, [SP, #28] 
    /*00011e10*/ LDR         R0, [R3, R8, LSL #2] 
    /*00011e14*/ MOVW        R3, #1704                   @ 0x6a8 
    /*00011e18*/ ADD         R3, R3, SL, LSL #5 
    /*00011e1c*/ STR         R3, [SP, #32] 
    /*00011e20*/ ADD         R0, R0, R3 
    /*00011e24*/ BL          0x0000000000011E24          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*00011e28*/ SUBS        R7, R0, #0 
    /*00011e2c*/ BNE         VpssUserGetFrame_x11fe0
    /*00011e30*/ ADD         R5, SP, #48                 @ 0x30 
    /*00011e34*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00011e38*/ MOV         R0, R9 
    /*00011e3c*/ ADD         R4, R4, #20 
    /*00011e40*/ BL          0x0000000000011E40          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011e44*/ MOV         R0, R5 
    /*00011e48*/ STR         R7, [SP, #64]               @ 0x40 
    /*00011e4c*/ MOV         R3, #4 
    /*00011e50*/ STR         R7, [SP, #52]               @ 0x34 
    /*00011e54*/ ADD         R6, R6, R4 
    /*00011e58*/ STR         FP, [SP, #60]               @ 0x3c 
    /*00011e5c*/ MOVW        R7, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x1f7c] 
    /*00011e60*/ STR         R8, [SP, #48]               @ 0x30 
    /*00011e64*/ MOVT        R7, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x1f7c] 
    /*00011e68*/ STR         SL, [SP, #56]               @ 0x38 
    /*00011e6c*/ STR         R3, [SP, #68]               @ 0x44 
    /*00011e70*/ BL          0x0000000000011E70          @ VPSS_WaitConditionCallBack [R_ARM_CALL: .text+0x1f7c] 
    /*00011e74*/ LDR         R4, [SP, #24] 
    /*00011e78*/ B           VpssUserGetFrame_x11e90
    VpssUserGetFrame_x11e7c:
    /*00011e7c*/ BL          0x0000000000011E7C          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00011e80*/ ADD         R3, R0, #512                @ 0x200 
    /*00011e84*/ MOV         R4, R0 
    /*00011e88*/ BICS        R3, R3, #512                @ 0x200 
    /*00011e8c*/ BEQ         VpssUserGetFrame_x11ebc
    VpssUserGetFrame_x11e90:
    /*00011e90*/ MOV         R0, R5 
    /*00011e94*/ BL          0x0000000000011E94          @ VPSS_WaitConditionCallBack [R_ARM_CALL: .text+0x1f7c] 
    /*00011e98*/ MOV         R3, R4 
    /*00011e9c*/ MOV         R2, R5 
    /*00011ea0*/ MOV         R1, R7 
    /*00011ea4*/ CMP         R0, #0 
    /*00011ea8*/ MOV         R0, R6 
    /*00011eac*/ BEQ         VpssUserGetFrame_x11e7c
    /*00011eb0*/ MOV         R0, R4 
    /*00011eb4*/ BL          0x0000000000011EB4          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*00011eb8*/ MOV         R4, R0 
    VpssUserGetFrame_x11ebc:
    /*00011ebc*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00011ec0*/ MOV         R0, R9 
    /*00011ec4*/ LDR         R5, [SP, #64]               @ 0x40 
    /*00011ec8*/ BL          0x0000000000011EC8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011ecc*/ CMP         R4, #0 
    /*00011ed0*/ BLT         VpssUserGetFrame_x1222c
    /*00011ed4*/ BEQ         VpssUserGetFrame_x1226c
    /*00011ed8*/ CMP         R5, #0 
    /*00011edc*/ BEQ         VpssUserGetFrame_x12208
    /*00011ee0*/ MOV         R1, FP 
    /*00011ee4*/ MOV         R0, R8 
    /*00011ee8*/ BL          0x0000000000011EE8          @ AbnormalVerifyAfterWait [R_ARM_CALL: .text+0x1ff4] 
    /*00011eec*/ SUBS        R4, R0, #0 
    /*00011ef0*/ BNE         VpssUserGetFrame_x121ec
    /*00011ef4*/ LDR         R3, [SP, #28] 
    /*00011ef8*/ LDR         R0, [R3, R8, LSL #2] 
    /*00011efc*/ CMP         R0, #0 
    /*00011f00*/ BEQ         VpssUserGetFrame_x122b4
    /*00011f04*/ LDR         R3, [SP, #32] 
    /*00011f08*/ ADD         R0, R0, R3 
    /*00011f0c*/ BL          0x0000000000011F0C          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*00011f10*/ CMP         R0, #0 
    /*00011f14*/ BNE         VpssUserGetFrame_x11fe0
    /*00011f18*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00011f1c*/ MOV         R0, R9 
    /*00011f20*/ BL          0x0000000000011F20          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011f24*/ LDR         R3, [SP, #24] 
    /*00011f28*/ STR         SL, [SP, #8] 
    /*00011f2c*/ MOV         R1, #7 
    /*00011f30*/ STR         R8, [SP, #4] 
    /*00011f34*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4748] 
    /*00011f38*/ STR         R3, [SP, #12] 
    /*00011f3c*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4748] 
    /*00011f40*/ MOVW        R3, #491                    @ 0x1eb 
    /*00011f44*/ MOV         R0, #3 
    /*00011f48*/ STR         R3, [SP] 
    /*00011f4c*/ MOVW        R4, #32782                  @ 0x800e 
    /*00011f50*/ LDR         R3, [PC, #1168]             @ 0x00000000000123e8 
    /*00011f54*/ MOVT        R4, #40967                  @ 0xa007 
    /*00011f58*/ BL          0x0000000000011F58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011f5c*/ MOV         R0, R4 
    /*00011f60*/ ADD         SP, SP, #412                @ 0x19c 
    /*00011f64*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssUserGetFrame_x11f68:
    /*00011f68*/ MOV         R3, #72                     @ 0x48 
    /*00011f6c*/ MLA         R5, R3, SL, R5 
    /*00011f70*/ LDR         R3, [R5, #812]              @ 0x32c 
    /*00011f74*/ CMP         R3, #0 
    /*00011f78*/ BEQ         VpssUserGetFrame_x11dec
    /*00011f7c*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x46ac] 
    /*00011f80*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x46ac] 
    /*00011f84*/ MOVW        R3, #467                    @ 0x1d3 
    /*00011f88*/ STR         SL, [SP, #8] 
    /*00011f8c*/ STR         R8, [SP, #4] 
    /*00011f90*/ STR         R3, [SP] 
    VpssUserGetFrame_x11f94:
    /*00011f94*/ LDR         R3, [PC, #1100]             @ 0x00000000000123e8 
    /*00011f98*/ MOV         R1, #7 
    /*00011f9c*/ MOV         R0, #3 
    /*00011fa0*/ MOVW        R4, #32777                  @ 0x8009 
    /*00011fa4*/ BL          0x0000000000011FA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011fa8*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00011fac*/ MOV         R0, R9 
    /*00011fb0*/ MOVT        R4, #40967                  @ 0xa007 
    /*00011fb4*/ BL          0x0000000000011FB4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011fb8*/ B           VpssUserGetFrame_x11d40
    VpssUserGetFrame_x11fbc:
    /*00011fbc*/ LDR         R3, [SP, #28] 
    /*00011fc0*/ LDR         R0, [R3, R8, LSL #2] 
    /*00011fc4*/ MOVW        R3, #1704                   @ 0x6a8 
    /*00011fc8*/ ADD         R3, R3, SL, LSL #5 
    /*00011fcc*/ STR         R3, [SP, #32] 
    /*00011fd0*/ ADD         R0, R0, R3 
    /*00011fd4*/ BL          0x0000000000011FD4          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*00011fd8*/ CMP         R0, #0 
    /*00011fdc*/ BEQ         VpssUserGetFrame_x1229c
    VpssUserGetFrame_x11fe0:
    /*00011fe0*/ LDR         R3, [SP, #28] 
    /*00011fe4*/ LDR         R0, [R3, R8, LSL #2] 
    /*00011fe8*/ LDR         R3, [SP, #32] 
    /*00011fec*/ ADD         R0, R0, R3 
    /*00011ff0*/ BL          0x0000000000011FF0          @ VPSS_PicQueueGetBusy [R_ARM_CALL: .text+0x10f14] 
    /*00011ff4*/ SUBS        R6, R0, #0 
    /*00011ff8*/ BEQ         VpssUserGetFrame_x1229c
    /*00011ffc*/ ADD         R5, R6, #8 
    /*00012000*/ MOV         R1, #12 
    /*00012004*/ MOV         R0, R5 
    /*00012008*/ BL          0x0000000000012008          @ VpssGetVb [R_ARM_CALL: .text+0x11424] 
    /*0001200c*/ SUBS        R4, R0, #0 
    /*00012010*/ BNE         VpssUserGetFrame_x121ec
    /*00012014*/ MOV         R1, #10 
    /*00012018*/ MOV         R0, R5 
    /*0001201c*/ BL          0x000000000001201C          @ VpssPutVb [R_ARM_CALL: .text+0x11378] 
    /*00012020*/ MOV         R2, #336                    @ 0x150 
    /*00012024*/ MOV         R1, R5 
    /*00012028*/ ADD         R0, SP, #72                 @ 0x48 
    /*0001202c*/ BL          0x000000000001202C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00012030*/ LDR         R3, [SP, #28] 
    /*00012034*/ MOV         R1, R6 
    /*00012038*/ LDR         R0, [R3, R8, LSL #2] 
    /*0001203c*/ LDR         R3, [SP, #32] 
    /*00012040*/ ADD         R0, R0, R3 
    /*00012044*/ BL          0x0000000000012044          @ VPSS_PicQueuePutFree [R_ARM_CALL: .text+0x11034] 
    /*00012048*/ MOV         R0, R9 
    /*0001204c*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00012050*/ BL          0x0000000000012050          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012054*/ LDR         R0, [SP, #380]              @ 0x17c 
    /*00012058*/ CMP         R0, #0 
    /*0001205c*/ BEQ         VpssUserGetFrame_x1206c
    /*00012060*/ MOV         R2, #56                     @ 0x38 
    /*00012064*/ LDR         R1, [SP, #344]              @ 0x158 
    /*00012068*/ BL          0x0000000000012068          @ osal_flush_dcache_area [R_ARM_CALL: +0x0] 
    VpssUserGetFrame_x1206c:
    /*0001206c*/ ADD         R1, SP, #72                 @ 0x48 
    /*00012070*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00012074*/ MOV         R2, #336                    @ 0x150 
    /*00012078*/ BL          0x0000000000012078          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0001207c*/ CMP         R0, #0 
    /*00012080*/ BEQ         VpssUserGetFrame_x11d40
    /*00012084*/ MOVW        R3, #654                    @ 0x28e 
    /*00012088*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4480] 
    /*0001208c*/ STR         R3, [SP] 
    /*00012090*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4480] 
    /*00012094*/ LDR         R3, [PC, #844]              @ 0x00000000000123e8 
    /*00012098*/ MOV         R1, #7 
    /*0001209c*/ MOV         R0, #3 
    /*000120a0*/ MOVW        R4, #32784                  @ 0x8010 
    /*000120a4*/ BL          0x00000000000120A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000120a8*/ MOVT        R4, #40967                  @ 0xa007 
    /*000120ac*/ B           VpssUserGetFrame_x11d40
    VpssUserGetFrame_x120b0:
    /*000120b0*/ LDR         R3, [SP, #24] 
    /*000120b4*/ CMN         R3, #1 
    /*000120b8*/ BNE         VpssUserGetFrame_x11fbc
    /*000120bc*/ LDR         R3, [SP, #28] 
    /*000120c0*/ ADD         R4, R4, #20 
    /*000120c4*/ ADD         R6, R6, R4 
    /*000120c8*/ STR         SL, [SP, #24] 
    /*000120cc*/ LDR         R0, [R3, R8, LSL #2] 
    /*000120d0*/ MOVW        R3, #1704                   @ 0x6a8 
    /*000120d4*/ ADD         R3, R3, SL, LSL #5 
    /*000120d8*/ STR         R3, [SP, #32] 
    VpssUserGetFrame_x120dc:
    /*000120dc*/ LDR         R3, [SP, #32] 
    /*000120e0*/ ADD         R0, R0, R3 
    /*000120e4*/ BL          0x00000000000120E4          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*000120e8*/ SUBS        SL, R0, #0 
    /*000120ec*/ BNE         VpssUserGetFrame_x11fe0
    /*000120f0*/ ADD         R1, SP, #44                 @ 0x2c 
    /*000120f4*/ MOV         R0, R9 
    /*000120f8*/ BL          0x00000000000120F8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000120fc*/ LDR         R3, [SP, #24] 
    /*00012100*/ MOVW        R7, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0x1f7c] 
    /*00012104*/ MOV         R2, #4 
    /*00012108*/ MOVT        R7, #0                      @ VPSS_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0x1f7c] 
    /*0001210c*/ ADD         R4, SP, #48                 @ 0x30 
    /*00012110*/ STR         R5, [SP, #64]               @ 0x40 
    /*00012114*/ STR         FP, [SP, #60]               @ 0x3c 
    /*00012118*/ STR         R8, [SP, #48]               @ 0x30 
    /*0001211c*/ STR         R3, [SP, #56]               @ 0x38 
    /*00012120*/ STR         SL, [SP, #52]               @ 0x34 
    /*00012124*/ STR         R2, [SP, #68]               @ 0x44 
    /*00012128*/ B           VpssUserGetFrame_x12138
    VpssUserGetFrame_x1212c:
    /*0001212c*/ BL          0x000000000001212C          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00012130*/ CMP         R0, #0 
    /*00012134*/ BLT         VpssUserGetFrame_x121a0
    VpssUserGetFrame_x12138:
    /*00012138*/ MOV         R0, R4 
    /*0001213c*/ BL          0x000000000001213C          @ VPSS_WaitConditionCallBack [R_ARM_CALL: .text+0x1f7c] 
    /*00012140*/ MOV         R3, #100                    @ 0x64 
    /*00012144*/ MOV         R2, R4 
    /*00012148*/ MOV         R1, R7 
    /*0001214c*/ CMP         R0, #0 
    /*00012150*/ MOV         R0, R6 
    /*00012154*/ BEQ         VpssUserGetFrame_x1212c
    /*00012158*/ LDR         R5, [SP, #64]               @ 0x40 
    /*0001215c*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00012160*/ MOV         R0, R9 
    /*00012164*/ BL          0x0000000000012164          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00012168*/ CMP         R5, #0 
    /*0001216c*/ BEQ         VpssUserGetFrame_x12208
    /*00012170*/ MOV         R1, FP 
    /*00012174*/ MOV         R0, R8 
    /*00012178*/ BL          0x0000000000012178          @ AbnormalVerifyAfterWait [R_ARM_CALL: .text+0x1ff4] 
    /*0001217c*/ CMP         R0, #0 
    /*00012180*/ BNE         VpssUserGetFrame_x121e8
    /*00012184*/ LDR         R3, [SP, #28] 
    /*00012188*/ LDR         R0, [R3, R8, LSL #2] 
    /*0001218c*/ CMP         R0, #0 
    /*00012190*/ BNE         VpssUserGetFrame_x120dc
    /*00012194*/ STR         R8, [SP, #4] 
    /*00012198*/ MOV         R3, #608                    @ 0x260 
    /*0001219c*/ B           VpssUserGetFrame_x122bc
    VpssUserGetFrame_x121a0:
    /*000121a0*/ ADD         R1, SP, #44                 @ 0x2c 
    /*000121a4*/ MOV         R0, R9 
    /*000121a8*/ BL          0x00000000000121A8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000121ac*/ LDR         R3, [PC, #564]              @ 0x00000000000123e8 
    /*000121b0*/ MOVW        R1, #579                    @ 0x243 
    /*000121b4*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4404] 
    /*000121b8*/ STR         R1, [SP, #8] 
    /*000121bc*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4404] 
    /*000121c0*/ STM         SP, {R1, R3} 
    /*000121c4*/ MOV         R0, #4 
    /*000121c8*/ MOV         R1, #7 
    /*000121cc*/ MOV         R4, #65024                  @ 0xfe00 
    /*000121d0*/ BL          0x00000000000121D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000121d4*/ ADD         R1, SP, #44                 @ 0x2c 
    /*000121d8*/ MOV         R0, R9 
    /*000121dc*/ MOVT        R4, #65535                  @ 0xffff 
    /*000121e0*/ BL          0x00000000000121E0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000121e4*/ B           VpssUserGetFrame_x11d40
    VpssUserGetFrame_x121e8:
    /*000121e8*/ MOV         R4, R0 
    VpssUserGetFrame_x121ec:
    /*000121ec*/ ADD         R1, SP, #44                 @ 0x2c 
    /*000121f0*/ MOV         R0, R9 
    /*000121f4*/ BL          0x00000000000121F4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000121f8*/ B           VpssUserGetFrame_x11d40
    VpssUserGetFrame_x121fc:
    /*000121fc*/ MOVW        R4, #32774                  @ 0x8006 
    /*00012200*/ MOVT        R4, #40967                  @ 0xa007 
    /*00012204*/ B           VpssUserGetFrame_x11d40
    VpssUserGetFrame_x12208:
    /*00012208*/ ADD         R1, SP, #44                 @ 0x2c 
    /*0001220c*/ MOV         R0, R9 
    /*00012210*/ MOVW        R4, #32784                  @ 0x8010 
    /*00012214*/ BL          0x0000000000012214          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012218*/ MOVT        R4, #40967                  @ 0xa007 
    /*0001221c*/ B           VpssUserGetFrame_x11d40
    VpssUserGetFrame_x12220:
    /*00012220*/ MOVW        R4, #32769                  @ 0x8001 
    /*00012224*/ MOVT        R4, #40967                  @ 0xa007 
    /*00012228*/ B           VpssUserGetFrame_x11d40
    VpssUserGetFrame_x1222c:
    /*0001222c*/ LDR         R3, [PC, #436]              @ 0x00000000000123e8 
    /*00012230*/ MOVW        R1, #514                    @ 0x202 
    /*00012234*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4404] 
    /*00012238*/ STR         R1, [SP, #8] 
    /*0001223c*/ STR         R1, [SP] 
    /*00012240*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4404] 
    /*00012244*/ STR         R3, [SP, #4] 
    /*00012248*/ MOV         R1, #7 
    /*0001224c*/ MOV         R0, #4 
    /*00012250*/ MOV         R4, #65024                  @ 0xfe00 
    /*00012254*/ BL          0x0000000000012254          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012258*/ ADD         R1, SP, #44                 @ 0x2c 
    /*0001225c*/ MOV         R0, R9 
    /*00012260*/ MOVT        R4, #65535                  @ 0xffff 
    /*00012264*/ BL          0x0000000000012264          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012268*/ B           VpssUserGetFrame_x11d40
    VpssUserGetFrame_x1226c:
    /*0001226c*/ LDR         R3, [SP, #24] 
    /*00012270*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4748] 
    /*00012274*/ STR         SL, [SP, #8] 
    /*00012278*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4748] 
    /*0001227c*/ STR         R8, [SP, #4] 
    /*00012280*/ MOV         R1, #7 
    /*00012284*/ STR         R3, [SP, #12] 
    /*00012288*/ MOV         R0, #3 
    /*0001228c*/ MOVW        R3, #522                    @ 0x20a 
    /*00012290*/ STR         R3, [SP] 
    /*00012294*/ LDR         R3, [PC, #332]              @ 0x00000000000123e8 
    /*00012298*/ BL          0x0000000000012298          @ HI_LOG [R_ARM_CALL: +0x0] 
    VpssUserGetFrame_x1229c:
    /*0001229c*/ ADD         R1, SP, #44                 @ 0x2c 
    /*000122a0*/ MOV         R0, R9 
    /*000122a4*/ MOVW        R4, #32782                  @ 0x800e 
    /*000122a8*/ BL          0x00000000000122A8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000122ac*/ MOVT        R4, #40967                  @ 0xa007 
    /*000122b0*/ B           VpssUserGetFrame_x11d40
    VpssUserGetFrame_x122b4:
    /*000122b4*/ MOVW        R3, #550                    @ 0x226 
    /*000122b8*/ STR         R8, [SP, #4] 
    VpssUserGetFrame_x122bc:
    /*000122bc*/ STR         R3, [SP] 
    /*000122c0*/ MOV         R1, #7 
    /*000122c4*/ LDR         R3, [PC, #284]              @ 0x00000000000123e8 
    /*000122c8*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4358] 
    /*000122cc*/ MOV         R0, #3 
    /*000122d0*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4358] 
    /*000122d4*/ BL          0x00000000000122D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000122d8*/ ADD         R1, SP, #44                 @ 0x2c 
    /*000122dc*/ MOV         R0, R9 
    /*000122e0*/ MOVW        R4, #32773                  @ 0x8005 
    /*000122e4*/ BL          0x00000000000122E4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000122e8*/ MOVT        R4, #40967                  @ 0xa007 
    /*000122ec*/ B           VpssUserGetFrame_x11d40
    VpssUserGetFrame_x122f0:
    /*000122f0*/ MOVW        R4, #32770                  @ 0x8002 
    /*000122f4*/ MOVT        R4, #40967                  @ 0xa007 
    /*000122f8*/ B           VpssUserGetFrame_x11d40
    VpssUserGetFrame_x122fc:
    /*000122fc*/ MOVW        R3, #449                    @ 0x1c1 
    /*00012300*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4614] 
    /*00012304*/ STR         SL, [SP, #8] 
    /*00012308*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4614] 
    /*0001230c*/ STR         R8, [SP, #4] 
    /*00012310*/ STR         R3, [SP] 
    /*00012314*/ B           VpssUserGetFrame_x11f94
    VpssUserGetFrame_x12318:
    /*00012318*/ ADD         R1, SP, #44                 @ 0x2c 
    /*0001231c*/ MOV         R0, R9 
    /*00012320*/ BL          0x0000000000012320          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012324*/ MOVW        R3, #475                    @ 0x1db 
    /*00012328*/ STMIB       SP, {R8, SL} 
    /*0001232c*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x46f8] 
    /*00012330*/ STR         R3, [SP] 
    /*00012334*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x46f8] 
    /*00012338*/ LDR         R3, [PC, #168]              @ 0x00000000000123e8 
    /*0001233c*/ MOV         R1, #7 
    /*00012340*/ MOV         R0, #3 
    /*00012344*/ MOVW        R4, #32776                  @ 0x8008 
    /*00012348*/ BL          0x0000000000012348          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001234c*/ MOVT        R4, #40967                  @ 0xa007 
    /*00012350*/ B           VpssUserGetFrame_x11d40
    VpssUserGetFrame_x12354:
    /*00012354*/ LDR         R3, [SP, #24] 
    /*00012358*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45d8] 
    /*0001235c*/ MOV         R1, #7 
    /*00012360*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45d8] 
    /*00012364*/ MOV         R0, #3 
    /*00012368*/ MOVW        R4, #32771                  @ 0x8003 
    /*0001236c*/ STR         R3, [SP, #4] 
    /*00012370*/ MOVW        R3, #426                    @ 0x1aa 
    /*00012374*/ STR         R3, [SP] 
    /*00012378*/ MOVT        R4, #40967                  @ 0xa007 
    /*0001237c*/ LDR         R3, [PC, #100]              @ 0x00000000000123e8 
    /*00012380*/ BL          0x0000000000012380          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012384*/ B           VpssUserGetFrame_x11d40
    VpssUserGetFrame_x12388:
    /*00012388*/ STR         R8, [SP, #4] 
    /*0001238c*/ MOVW        R3, #442                    @ 0x1ba 
    /*00012390*/ B           VpssUserGetFrame_x122bc
    VpssUserGetFrame_x12394:
    /*00012394*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00012398*/ MOV         R0, R9 
    /*0001239c*/ BL          0x000000000001239C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000123a0*/ MOV         R3, #40                     @ 0x28 
    /*000123a4*/ MLA         R5, R3, R7, R5 
    /*000123a8*/ MOV         LR, #2 
    /*000123ac*/ MOVW        IP, #461                    @ 0x1cd 
    /*000123b0*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x464c] 
    /*000123b4*/ LDR         R3, [PC, #44]               @ 0x00000000000123e8 
    /*000123b8*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x464c] 
    /*000123bc*/ MOV         R1, #7 
    /*000123c0*/ MOV         R0, #3 
    /*000123c4*/ MOVW        R4, #32777                  @ 0x8009 
    /*000123c8*/ MOVT        R4, #40967                  @ 0xa007 
    /*000123cc*/ LDR         R5, [R5, #128]              @ 0x80 
    /*000123d0*/ STMIB       SP, {R8, SL} 
    /*000123d4*/ STR         LR, [SP, #12] 
    /*000123d8*/ STR         R5, [SP, #16] 
    /*000123dc*/ STR         IP, [SP] 
    /*000123e0*/ BL          0x00000000000123E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000123e4*/ B           VpssUserGetFrame_x11d40
    /*000123e8*/ ANDEQ       R0, R0, IP, ASR #23 
FUNC_END VpssUserGetFrame


FUNC_BEGIN VpssUserReleaseFrame
    /*000123ec*/ PUSH        {R4, R5, R6, LR} 
    /*000123f0*/ SUB         SP, SP, #16 
    /*000123f4*/ MOV         R4, R1 
    /*000123f8*/ MOV         R6, R2 
    /*000123fc*/ MOV         R5, R0 
    /*00012400*/ BL          0x0000000000012400          @ VpssDefCheckGrpId [R_ARM_CALL: .text+0x3fc] 
    /*00012404*/ CMP         R0, #0 
    /*00012408*/ BNE         VpssUserReleaseFrame_x124ac
    /*0001240c*/ MOV         R0, R4 
    /*00012410*/ BL          0x0000000000012410          @ VpssDefCheckChnId [R_ARM_CALL: .text+0x410] 
    /*00012414*/ CMP         R0, #0 
    /*00012418*/ BNE         VpssUserReleaseFrame_x124b8
    /*0001241c*/ MOV         R0, R6 
    /*00012420*/ BL          0x0000000000012420          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*00012424*/ CMP         R0, #0 
    /*00012428*/ BNE         VpssUserReleaseFrame_x124c4
    /*0001242c*/ LDR         R3, [PC, #196]              @ 0x00000000000124f8 
    /*00012430*/ MOV         R4, #92                     @ 0x5c 
    /*00012434*/ ADD         R1, SP, #12 
    /*00012438*/ MLA         R4, R4, R5, R3 
    /*0001243c*/ MOV         R0, R4 
    /*00012440*/ BL          0x0000000000012440          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00012444*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00012448*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001244c*/ LDR         R3, [R3, R5, LSL #2] 
    /*00012450*/ CMP         R3, #0 
    /*00012454*/ BEQ         VpssUserReleaseFrame_x124d0
    VpssUserReleaseFrame_x12458:
    /*00012458*/ MOV         R0, R6 
    /*0001245c*/ MOV         R1, #12 
    /*00012460*/ BL          0x0000000000012460          @ VpssPutVb [R_ARM_CALL: .text+0x11378] 
    /*00012464*/ SUBS        R6, R0, #0 
    /*00012468*/ BNE         VpssUserReleaseFrame_x12484
    VpssUserReleaseFrame_x1246c:
    /*0001246c*/ ADD         R1, SP, #12 
    /*00012470*/ MOV         R0, R4 
    /*00012474*/ BL          0x0000000000012474          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VpssUserReleaseFrame_x12478:
    /*00012478*/ MOV         R0, R6 
    /*0001247c*/ ADD         SP, SP, #16 
    /*00012480*/ POP         {R4, R5, R6, PC} 
    VpssUserReleaseFrame_x12484:
    /*00012484*/ MOVW        R3, #686                    @ 0x2ae 
    /*00012488*/ STR         R5, [SP, #4] 
    /*0001248c*/ STR         R3, [SP] 
    /*00012490*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47dc] 
    /*00012494*/ LDR         R3, [PC, #96]               @ 0x00000000000124fc 
    /*00012498*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47dc] 
    /*0001249c*/ MOV         R1, #7 
    /*000124a0*/ MOV         R0, #3 
    /*000124a4*/ BL          0x00000000000124A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000124a8*/ B           VpssUserReleaseFrame_x1246c
    VpssUserReleaseFrame_x124ac:
    /*000124ac*/ MOVW        R6, #32769                  @ 0x8001 
    /*000124b0*/ MOVT        R6, #40967                  @ 0xa007 
    /*000124b4*/ B           VpssUserReleaseFrame_x12478
    VpssUserReleaseFrame_x124b8:
    /*000124b8*/ MOVW        R6, #32770                  @ 0x8002 
    /*000124bc*/ MOVT        R6, #40967                  @ 0xa007 
    /*000124c0*/ B           VpssUserReleaseFrame_x12478
    VpssUserReleaseFrame_x124c4:
    /*000124c4*/ MOVW        R6, #32774                  @ 0x8006 
    /*000124c8*/ MOVT        R6, #40967                  @ 0xa007 
    /*000124cc*/ B           VpssUserReleaseFrame_x12478
    VpssUserReleaseFrame_x124d0:
    /*000124d0*/ MOVW        R3, #679                    @ 0x2a7 
    /*000124d4*/ STR         R5, [SP, #4] 
    /*000124d8*/ STR         R3, [SP] 
    /*000124dc*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4520] 
    /*000124e0*/ LDR         R3, [PC, #20]               @ 0x00000000000124fc 
    /*000124e4*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4520] 
    /*000124e8*/ MOV         R1, #7 
    /*000124ec*/ MOV         R0, #6 
    /*000124f0*/ BL          0x00000000000124F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000124f4*/ B           VpssUserReleaseFrame_x12458
    /*000124f8*/ ANDEQ       R0, R0, R0, LSR R0          @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*000124fc*/ ANDEQ       R0, R0, R0, ROR #23 
FUNC_END VpssUserReleaseFrame


FUNC_BEGIN VpssCleanUserList
    /*00012500*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00012504*/ MOVW        R8, #1704                   @ 0x6a8 
    /*00012508*/ MOVW        R7, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001250c*/ MOVW        R9, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4330] 
    /*00012510*/ SUB         SP, SP, #8 
    /*00012514*/ MOV         R6, R1 
    /*00012518*/ MOV         R5, R0 
    /*0001251c*/ ADD         R8, R8, R1, LSL #5 
    /*00012520*/ MOVT        R7, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00012524*/ LDR         SL, [PC, #140]              @ 0x00000000000125b8 
    /*00012528*/ MOVT        R9, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4330] 
    /*0001252c*/ B           VpssCleanUserList_x12564
    VpssCleanUserList_x12530:
    /*00012530*/ BL          0x0000000000012530          @ VPSS_PicQueueGetBusy [R_ARM_CALL: .text+0x10f14] 
    /*00012534*/ MOV         R4, R0 
    VpssCleanUserList_x12538:
    /*00012538*/ MOV         R0, R4 
    /*0001253c*/ BL          0x000000000001253C          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*00012540*/ MOV         R1, #10 
    /*00012544*/ CMP         R0, #0 
    /*00012548*/ ADD         R0, R4, #8 
    /*0001254c*/ BNE         VpssCleanUserList_x125a8
    /*00012550*/ BL          0x0000000000012550          @ VpssPutVb [R_ARM_CALL: .text+0x11378] 
    /*00012554*/ MOV         R2, R4 
    /*00012558*/ MOV         R1, R6 
    /*0001255c*/ MOV         R0, R5 
    /*00012560*/ BL          0x0000000000012560          @ VpssUserListPutFree [R_ARM_CALL: .text+0x1160c] 
    VpssCleanUserList_x12564:
    /*00012564*/ MOV         R1, R6 
    /*00012568*/ MOV         R0, R5 
    /*0001256c*/ BL          0x000000000001256C          @ VpssUserListGetBusyNum [R_ARM_CALL: .text+0x1165c] 
    /*00012570*/ CMP         R0, #0 
    /*00012574*/ BEQ         VpssCleanUserList_x125b0
    /*00012578*/ LDR         R4, [R7, R5, LSL #2] 
    /*0001257c*/ CMP         R4, #0 
    /*00012580*/ ADD         R0, R4, R8 
    /*00012584*/ BNE         VpssCleanUserList_x12530
    /*00012588*/ MOV         R2, #136                    @ 0x88 
    /*0001258c*/ MOV         R3, SL 
    /*00012590*/ STR         R2, [SP] 
    /*00012594*/ MOV         R1, #7 
    /*00012598*/ MOV         R2, R9 
    /*0001259c*/ MOV         R0, #3 
    /*000125a0*/ BL          0x00000000000125A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000125a4*/ B           VpssCleanUserList_x12538
    VpssCleanUserList_x125a8:
    /*000125a8*/ MOVW        R0, #32774                  @ 0x8006 
    /*000125ac*/ MOVT        R0, #40967                  @ 0xa007 
    VpssCleanUserList_x125b0:
    /*000125b0*/ ADD         SP, SP, #8 
    /*000125b4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*000125b8*/ ANDEQ       R0, R0, R4, ROR FP 
FUNC_END VpssCleanUserList


FUNC_BEGIN VpssFakeQuery
    /*000125bc*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000125c0*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000125c4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000125c8*/ MOV         IP, #1 
    /*000125cc*/ LDR         R5, [R3, R0, LSL #2] 
    /*000125d0*/ SUB         SP, SP, #68                 @ 0x44 
    /*000125d4*/ ADD         R8, R5, R1, LSL #2 
    /*000125d8*/ ADD         R9, R5, R2, LSL #2 
    /*000125dc*/ ADD         R3, R8, #24576              @ 0x6000 
    /*000125e0*/ STR         IP, [R3, #4008]             @ 0xfa8 
    /*000125e4*/ LDR         R3, [R9, #2200]             @ 0x898 
    /*000125e8*/ CMP         R3, #0 
    /*000125ec*/ BEQ         VpssFakeQuery_x12840
    /*000125f0*/ MOV         R3, #772                    @ 0x304 
    /*000125f4*/ MOV         R7, R2 
    /*000125f8*/ MLA         R3, R3, R1, R5 
    /*000125fc*/ MOVW        R2, #11160                  @ 0x2b98 
    /*00012600*/ MOV         R4, R1 
    /*00012604*/ MOV         R6, R0 
    /*00012608*/ LDR         R3, [R3, R2] 
    /*0001260c*/ CMP         R3, #0 
    /*00012610*/ BEQ         VpssFakeQuery_x1279c
    VpssFakeQuery_x12614:
    /*00012614*/ MOV         R1, R4 
    /*00012618*/ MOV         R0, R6 
    /*0001261c*/ BL          0x000000000001261C          @ VpssDrvFrmRateCtl [R_ARM_CALL: .text+0x21d14] 
    /*00012620*/ CMP         R0, #0 
    /*00012624*/ BNE         VpssFakeQuery_x12658
    /*00012628*/ MOVW        R2, #8536                   @ 0x2158 
    /*0001262c*/ MOV         R1, #776                    @ 0x308 
    /*00012630*/ MUL         R7, R2, R7 
    /*00012634*/ MOV         SL, R0 
    /*00012638*/ MLA         R4, R1, R4, R7 
    /*0001263c*/ MOV         R3, #1 
    /*00012640*/ ADD         R5, R5, R4 
    /*00012644*/ STR         R0, [R5, #2628]             @ 0xa44 
    /*00012648*/ STR         R3, [R5, #2624]             @ 0xa40 
    VpssFakeQuery_x1264c:
    /*0001264c*/ MOV         R0, SL 
    /*00012650*/ ADD         SP, SP, #68                 @ 0x44 
    /*00012654*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssFakeQuery_x12658:
    /*00012658*/ ADD         R8, SP, #24 
    /*0001265c*/ ADD         R1, SP, #20 
    /*00012660*/ MOV         R0, R6 
    /*00012664*/ MOV         FP, #72                     @ 0x48 
    /*00012668*/ MOV         R2, R8 
    /*0001266c*/ BL          0x000000000001266C          @ VPSS_DRV_GetGroupCropCfgSize [R_ARM_CALL: .text+0x1f6f0] 
    /*00012670*/ MLA         FP, FP, R4, R5 
    /*00012674*/ STR         R8, [SP] 
    /*00012678*/ ADD         R3, SP, #20 
    /*0001267c*/ MOV         R2, R7 
    /*00012680*/ MOV         R1, R4 
    /*00012684*/ MOV         R0, R6 
    /*00012688*/ BL          0x0000000000012688          @ VPSS_DRV_GetDestSize [R_ARM_CALL: .text+0x1f680] 
    /*0001268c*/ MOV         R8, #776                    @ 0x308 
    /*00012690*/ MOVW        LR, #8536                   @ 0x2158 
    /*00012694*/ LDR         R3, [SP, #20] 
    /*00012698*/ MUL         R8, R8, R4 
    /*0001269c*/ ADD         SL, FP, #860                @ 0x35c 
    /*000126a0*/ MUL         LR, LR, R7 
    /*000126a4*/ STR         R3, [SP, #32] 
    /*000126a8*/ LDM         SL!, {R0, R1, R2, R3} 
    /*000126ac*/ ADD         IP, R8, LR 
    /*000126b0*/ ADD         LR, LR, #2640               @ 0xa50 
    /*000126b4*/ ADD         IP, R5, IP 
    /*000126b8*/ STR         IP, [SP, #12] 
    /*000126bc*/ ADD         IP, IP, #3360               @ 0xd20 
    /*000126c0*/ ADD         LR, LR, #8 
    /*000126c4*/ ADD         IP, IP, #8 
    /*000126c8*/ ADD         R8, LR, R8 
    /*000126cc*/ LDR         LR, [SP, #24] 
    /*000126d0*/ ADD         R8, R5, R8 
    /*000126d4*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*000126d8*/ ADD         R3, SP, #28 
    /*000126dc*/ LDM         SL, {R0, R1} 
    /*000126e0*/ MOV         R2, R7 
    /*000126e4*/ STR         LR, [SP, #36]               @ 0x24 
    /*000126e8*/ STM         IP, {R0, R1} 
    /*000126ec*/ MOV         R1, R4 
    /*000126f0*/ LDR         SL, [FP, #828]              @ 0x33c 
    /*000126f4*/ MOV         R0, R6 
    /*000126f8*/ LDR         LR, [FP, #836]              @ 0x344 
    /*000126fc*/ LDR         IP, [FP, #832]              @ 0x340 
    /*00012700*/ LDR         FP, [FP, #824]              @ 0x338 
    /*00012704*/ STR         R8, [SP] 
    /*00012708*/ STR         SL, [SP, #28] 
    /*0001270c*/ STR         LR, [SP, #52]               @ 0x34 
    /*00012710*/ STR         IP, [SP, #48]               @ 0x30 
    /*00012714*/ STR         FP, [SP, #56]               @ 0x38 
    /*00012718*/ BL          0x0000000000012718          @ VpssDrvPrepareVB [R_ARM_CALL: .text+0x25010] 
    /*0001271c*/ SUBS        SL, R0, #0 
    /*00012720*/ BNE         VpssFakeQuery_x1289c
    /*00012724*/ MOV         R2, R8 
    /*00012728*/ MOV         R1, R4 
    /*0001272c*/ MOV         R0, R6 
    /*00012730*/ BL          0x0000000000012730          @ VPSS_DRV_GetHDRInfo [R_ARM_CALL: .text+0x23330] 
    /*00012734*/ CMP         R0, #0 
    /*00012738*/ BEQ         VpssFakeQuery_x12764
    /*0001273c*/ LDR         R3, [R9, #2200]             @ 0x898 
    /*00012740*/ CMP         R3, #0 
    /*00012744*/ BEQ         VpssFakeQuery_x128a4
    /*00012748*/ LDR         R2, [R3, #36]               @ 0x24 
    /*0001274c*/ LDR         IP, [SP, #12] 
    /*00012750*/ STR         R2, [IP, #2676]             @ 0xa74 
    /*00012754*/ LDR         R2, [R3, #232]              @ 0xe8 
    /*00012758*/ STR         R2, [IP, #2872]             @ 0xb38 
    /*0001275c*/ LDR         R3, [R3, #236]              @ 0xec 
    /*00012760*/ STR         R3, [IP, #2876]             @ 0xb3c 
    VpssFakeQuery_x12764:
    /*00012764*/ MOVW        R2, #8536                   @ 0x2158 
    /*00012768*/ MOV         R1, #776                    @ 0x308 
    /*0001276c*/ MUL         R7, R2, R7 
    /*00012770*/ MOV         R3, #0 
    /*00012774*/ MLA         R4, R1, R4, R7 
    /*00012778*/ MOV         R2, #1 
    /*0001277c*/ MOV         R0, SL 
    /*00012780*/ ADD         R5, R5, R4 
    /*00012784*/ STR         R2, [R5, #2628]             @ 0xa44 
    /*00012788*/ STR         R2, [R5, #2624]             @ 0xa40 
    /*0001278c*/ STR         R3, [R5, #2636]             @ 0xa4c 
    /*00012790*/ STR         R3, [R5, #2632]             @ 0xa48 
    /*00012794*/ ADD         SP, SP, #68                 @ 0x44 
    /*00012798*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssFakeQuery_x1279c:
    /*0001279c*/ LDR         SL, [R8, #1648]             @ 0x670 
    /*000127a0*/ BL          0x00000000000127A0          @ VPSS_DRV_IsSupportExtChn [R_ARM_CALL: .text+0x20220] 
    /*000127a4*/ CMP         R0, #0 
    /*000127a8*/ BNE         VpssFakeQuery_x12824
    VpssFakeQuery_x127ac:
    /*000127ac*/ ADD         R0, R5, R4, LSL #5 
    /*000127b0*/ ADD         R0, R0, #1696               @ 0x6a0 
    /*000127b4*/ ADD         R0, R0, #8 
    /*000127b8*/ BL          0x00000000000127B8          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*000127bc*/ LDR         R3, [R8, #1692]             @ 0x69c 
    /*000127c0*/ ADD         R0, R0, R3 
    /*000127c4*/ CMP         SL, R0 
    /*000127c8*/ BHI         VpssFakeQuery_x12614
    /*000127cc*/ MOVW        R3, #777                    @ 0x309 
    /*000127d0*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4818] 
    /*000127d4*/ STR         R3, [SP] 
    /*000127d8*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4818] 
    /*000127dc*/ LDR         R3, [PC, #248]              @ 0x00000000000128dc 
    /*000127e0*/ MOV         R1, #7 
    /*000127e4*/ MOV         R0, #4 
    /*000127e8*/ BL          0x00000000000127E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000127ec*/ LDR         R2, [R5, #2068]             @ 0x814 
    /*000127f0*/ CMP         R2, #0 
    /*000127f4*/ BNE         VpssFakeQuery_x1286c
    /*000127f8*/ MOVW        R1, #8536                   @ 0x2158 
    /*000127fc*/ MOV         R3, #776                    @ 0x308 
    /*00012800*/ MUL         R1, R1, R7 
    /*00012804*/ MOV         R0, #1 
    /*00012808*/ MLA         R3, R3, R4, R1 
    /*0001280c*/ ADD         R3, R5, R3 
    /*00012810*/ STR         R2, [R3, #2636]             @ 0xa4c 
    /*00012814*/ STR         R2, [R3, #2632]             @ 0xa48 
    /*00012818*/ STR         R0, [R3, #2628]             @ 0xa44 
    /*0001281c*/ STR         R0, [R3, #2624]             @ 0xa40 
    /*00012820*/ B           VpssFakeQuery_x12614
    VpssFakeQuery_x12824:
    /*00012824*/ MOV         R3, #36                     @ 0x24 
    /*00012828*/ MOVW        R2, #19652                  @ 0x4cc4 
    /*0001282c*/ MLA         R3, R3, R4, R5 
    /*00012830*/ LDR         R3, [R3, R2] 
    /*00012834*/ CMP         R3, #0 
    /*00012838*/ BEQ         VpssFakeQuery_x127ac
    /*0001283c*/ B           VpssFakeQuery_x12614
    VpssFakeQuery_x12840:
    /*00012840*/ MOVW        R7, #8536                   @ 0x2158 
    /*00012844*/ MOV         R4, #776                    @ 0x308 
    /*00012848*/ MUL         R2, R7, R2 
    /*0001284c*/ MOV         SL, R3 
    /*00012850*/ MLA         R1, R4, R1, R2 
    /*00012854*/ MOV         R0, SL 
    /*00012858*/ ADD         R5, R5, R1 
    /*0001285c*/ STR         R3, [R5, #2628]             @ 0xa44 
    /*00012860*/ STR         R3, [R5, #2624]             @ 0xa40 
    /*00012864*/ ADD         SP, SP, #68                 @ 0x44 
    /*00012868*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssFakeQuery_x1286c:
    /*0001286c*/ MOVW        R2, #8536                   @ 0x2158 
    /*00012870*/ MOV         R3, #776                    @ 0x308 
    /*00012874*/ MUL         R7, R2, R7 
    /*00012878*/ MOV         R2, #0 
    /*0001287c*/ MLA         R4, R3, R4, R7 
    /*00012880*/ MOV         SL, R2 
    /*00012884*/ ADD         R5, R5, R4 
    /*00012888*/ STR         R2, [R5, #2628]             @ 0xa44 
    /*0001288c*/ STR         R2, [R5, #2624]             @ 0xa40 
    /*00012890*/ STR         R2, [R5, #2636]             @ 0xa4c 
    /*00012894*/ STR         R2, [R5, #2632]             @ 0xa48 
    /*00012898*/ B           VpssFakeQuery_x1264c
    VpssFakeQuery_x1289c:
    /*0001289c*/ MVN         SL, #0 
    /*000128a0*/ B           VpssFakeQuery_x1264c
    VpssFakeQuery_x128a4:
    /*000128a4*/ MOV         R0, R8 
    /*000128a8*/ MOV         R1, #10 
    /*000128ac*/ BL          0x00000000000128AC          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*000128b0*/ MOVW        R3, #842                    @ 0x34a 
    /*000128b4*/ STR         R6, [SP, #4] 
    /*000128b8*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x484c] 
    /*000128bc*/ STR         R3, [SP] 
    /*000128c0*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x484c] 
    /*000128c4*/ LDR         R3, [PC, #16]               @ 0x00000000000128dc 
    /*000128c8*/ MOV         R1, #7 
    /*000128cc*/ MOV         R0, #3 
    /*000128d0*/ MVN         SL, #0 
    /*000128d4*/ BL          0x00000000000128D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000128d8*/ B           VpssFakeQuery_x1264c
    /*000128dc*/ STRDEQ      R0, [R0], -R8 
FUNC_END VpssFakeQuery


FUNC_BEGIN VpssFakeQueryStep1
    /*000128e0*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000128e4*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000128e8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000128ec*/ MOV         R7, R0 
    /*000128f0*/ LDR         R4, [R3, R0, LSL #2] 
    /*000128f4*/ SUB         SP, SP, #16 
    /*000128f8*/ MOV         R5, R1 
    /*000128fc*/ MOV         R6, R2 
    /*00012900*/ CMP         R4, #0 
    /*00012904*/ BEQ         VpssFakeQueryStep1_x12ab0
    VpssFakeQueryStep1_x12908:
    /*00012908*/ ADD         R2, R4, R5, LSL #2 
    /*0001290c*/ ADD         R3, R6, #548                @ 0x224 
    /*00012910*/ ADD         R1, R2, #24576              @ 0x6000 
    /*00012914*/ ADD         R3, R3, #2 
    /*00012918*/ MOV         R0, #1 
    /*0001291c*/ STR         R0, [R1, #4008]             @ 0xfa8 
    /*00012920*/ LDR         R3, [R4, R3, LSL #2] 
    /*00012924*/ CMP         R3, #0 
    /*00012928*/ BEQ         VpssFakeQueryStep1_x12a88
    /*0001292c*/ MOV         R3, #772                    @ 0x304 
    /*00012930*/ MOVW        R1, #11160                  @ 0x2b98 
    /*00012934*/ MLA         R3, R3, R5, R4 
    /*00012938*/ LDR         R3, [R3, R1] 
    /*0001293c*/ CMP         R3, #0 
    /*00012940*/ BEQ         VpssFakeQueryStep1_x12990
    VpssFakeQueryStep1_x12944:
    /*00012944*/ MOV         R1, R5 
    /*00012948*/ MOV         R0, R7 
    /*0001294c*/ BL          0x000000000001294C          @ VpssDrvFrmRateCtl [R_ARM_CALL: .text+0x21d14] 
    /*00012950*/ SUBS        R8, R0, #0 
    /*00012954*/ BEQ         VpssFakeQueryStep1_x12a2c
    /*00012958*/ MOVW        R3, #8536                   @ 0x2158 
    /*0001295c*/ MOV         R1, #776                    @ 0x308 
    /*00012960*/ MUL         R6, R3, R6 
    /*00012964*/ MOV         R2, #1 
    /*00012968*/ MLA         R1, R1, R5, R6 
    /*0001296c*/ MOV         R3, #0 
    /*00012970*/ ADD         R4, R4, R1 
    /*00012974*/ STR         R2, [R4, #2628]             @ 0xa44 
    /*00012978*/ STR         R2, [R4, #2624]             @ 0xa40 
    /*0001297c*/ STR         R3, [R4, #2636]             @ 0xa4c 
    /*00012980*/ STR         R3, [R4, #2632]             @ 0xa48 
    VpssFakeQueryStep1_x12984:
    /*00012984*/ MOV         R0, #0 
    /*00012988*/ ADD         SP, SP, #16 
    /*0001298c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssFakeQueryStep1_x12990:
    /*00012990*/ LDR         R8, [R2, #1648]             @ 0x670 
    /*00012994*/ BL          0x0000000000012994          @ VPSS_DRV_IsSupportExtChn [R_ARM_CALL: .text+0x20220] 
    /*00012998*/ CMP         R0, #0 
    /*0001299c*/ BNE         VpssFakeQueryStep1_x12a10
    VpssFakeQueryStep1_x129a0:
    /*000129a0*/ ADD         R0, R4, R5, LSL #5 
    /*000129a4*/ ADD         R0, R0, #1696               @ 0x6a0 
    /*000129a8*/ ADD         R0, R0, #8 
    /*000129ac*/ BL          0x00000000000129AC          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*000129b0*/ CMP         R8, R0 
    /*000129b4*/ BHI         VpssFakeQueryStep1_x12944
    /*000129b8*/ MOVW        R3, #1079                   @ 0x437 
    /*000129bc*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4818] 
    /*000129c0*/ STR         R3, [SP] 
    /*000129c4*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4818] 
    /*000129c8*/ LDR         R3, [PC, #300]              @ 0x0000000000012afc 
    /*000129cc*/ MOV         R1, #7 
    /*000129d0*/ MOV         R0, #4 
    /*000129d4*/ BL          0x00000000000129D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000129d8*/ LDR         R2, [R4, #2068]             @ 0x814 
    /*000129dc*/ CMP         R2, #0 
    /*000129e0*/ BNE         VpssFakeQueryStep1_x12ad0
    /*000129e4*/ MOVW        R1, #8536                   @ 0x2158 
    /*000129e8*/ MOV         R3, #776                    @ 0x308 
    /*000129ec*/ MUL         R1, R1, R6 
    /*000129f0*/ MOV         R0, #1 
    /*000129f4*/ MLA         R3, R3, R5, R1 
    /*000129f8*/ ADD         R3, R4, R3 
    /*000129fc*/ STR         R2, [R3, #2636]             @ 0xa4c 
    /*00012a00*/ STR         R2, [R3, #2632]             @ 0xa48 
    /*00012a04*/ STR         R0, [R3, #2628]             @ 0xa44 
    /*00012a08*/ STR         R0, [R3, #2624]             @ 0xa40 
    /*00012a0c*/ B           VpssFakeQueryStep1_x12944
    VpssFakeQueryStep1_x12a10:
    /*00012a10*/ MOV         R3, #36                     @ 0x24 
    /*00012a14*/ MOVW        R2, #19652                  @ 0x4cc4 
    /*00012a18*/ MLA         R3, R3, R5, R4 
    /*00012a1c*/ LDR         R3, [R3, R2] 
    /*00012a20*/ CMP         R3, #0 
    /*00012a24*/ BEQ         VpssFakeQueryStep1_x129a0
    /*00012a28*/ B           VpssFakeQueryStep1_x12944
    VpssFakeQueryStep1_x12a2c:
    /*00012a2c*/ MOVW        R1, #8536                   @ 0x2158 
    /*00012a30*/ MOV         R3, #776                    @ 0x308 
    /*00012a34*/ MUL         R6, R1, R6 
    /*00012a38*/ MOVW        IP, #1106                   @ 0x452 
    /*00012a3c*/ MLA         R6, R3, R5, R6 
    /*00012a40*/ MOV         R1, #7 
    /*00012a44*/ LDR         R3, [PC, #176]              @ 0x0000000000012afc 
    /*00012a48*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x48d0] 
    /*00012a4c*/ MOV         R0, #6 
    /*00012a50*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x48d0] 
    /*00012a54*/ ADD         R4, R4, R6 
    /*00012a58*/ LDR         LR, [R4, #2624]             @ 0xa40 
    /*00012a5c*/ STR         R5, [SP, #8] 
    /*00012a60*/ STR         R7, [SP, #4] 
    /*00012a64*/ STR         LR, [SP, #12] 
    /*00012a68*/ STR         IP, [SP] 
    /*00012a6c*/ BL          0x0000000000012A6C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012a70*/ MOV         R3, #1 
    /*00012a74*/ MOV         R0, #0 
    /*00012a78*/ STR         R8, [R4, #2628]             @ 0xa44 
    /*00012a7c*/ STR         R3, [R4, #2624]             @ 0xa40 
    /*00012a80*/ ADD         SP, SP, #16 
    /*00012a84*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssFakeQueryStep1_x12a88:
    /*00012a88*/ MOVW        R2, #8536                   @ 0x2158 
    /*00012a8c*/ MOV         R1, #776                    @ 0x308 
    /*00012a90*/ MUL         R6, R2, R6 
    /*00012a94*/ MOV         R0, #0 
    /*00012a98*/ MLA         R1, R1, R5, R6 
    /*00012a9c*/ ADD         R4, R4, R1 
    /*00012aa0*/ STR         R3, [R4, #2628]             @ 0xa44 
    /*00012aa4*/ STR         R3, [R4, #2624]             @ 0xa40 
    /*00012aa8*/ ADD         SP, SP, #16 
    /*00012aac*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssFakeQueryStep1_x12ab0:
    /*00012ab0*/ MOVW        R3, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4888] 
    /*00012ab4*/ MOVW        R0, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4890] 
    /*00012ab8*/ MOVT        R3, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4888] 
    /*00012abc*/ MOVT        R0, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4890] 
    /*00012ac0*/ MOVW        R2, #1030                   @ 0x406 
    /*00012ac4*/ LDR         R1, [PC, #48]               @ 0x0000000000012afc 
    /*00012ac8*/ BL          0x0000000000012AC8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00012acc*/ B           VpssFakeQueryStep1_x12908
    VpssFakeQueryStep1_x12ad0:
    /*00012ad0*/ MOVW        R3, #8536                   @ 0x2158 
    /*00012ad4*/ MOV         R1, #776                    @ 0x308 
    /*00012ad8*/ MUL         R6, R3, R6 
    /*00012adc*/ MOV         R3, #0 
    /*00012ae0*/ MLA         R1, R1, R5, R6 
    /*00012ae4*/ ADD         R4, R4, R1 
    /*00012ae8*/ STR         R3, [R4, #2628]             @ 0xa44 
    /*00012aec*/ STR         R3, [R4, #2624]             @ 0xa40 
    /*00012af0*/ STR         R3, [R4, #2636]             @ 0xa4c 
    /*00012af4*/ STR         R3, [R4, #2632]             @ 0xa48 
    /*00012af8*/ B           VpssFakeQueryStep1_x12984
    /*00012afc*/ ANDEQ       R0, R0, R8, LSL #24 
FUNC_END VpssFakeQueryStep1


FUNC_BEGIN VpssFakeQueryStep2
    /*00012b00*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00012b04*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00012b08*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00012b0c*/ MOV         R9, R0 
    /*00012b10*/ LDR         R6, [R3, R0, LSL #2] 
    /*00012b14*/ SUB         SP, SP, #60                 @ 0x3c 
    /*00012b18*/ MOV         R8, R1 
    /*00012b1c*/ MOV         SL, R2 
    /*00012b20*/ CMP         R6, #0 
    /*00012b24*/ BEQ         VpssFakeQueryStep2_x12c8c
    VpssFakeQueryStep2_x12b28:
    /*00012b28*/ MOV         R4, #776                    @ 0x308 
    /*00012b2c*/ MOVW        R7, #8536                   @ 0x2158 
    /*00012b30*/ MUL         R4, R4, R8 
    /*00012b34*/ MUL         R7, R7, SL 
    /*00012b38*/ ADD         R5, R4, R7 
    /*00012b3c*/ ADD         R5, R6, R5 
    /*00012b40*/ LDR         R3, [R5, #2628]             @ 0xa44 
    /*00012b44*/ CMP         R3, #0 
    /*00012b48*/ BNE         VpssFakeQueryStep2_x12b58
    VpssFakeQueryStep2_x12b4c:
    /*00012b4c*/ MOV         R0, #0 
    /*00012b50*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00012b54*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssFakeQueryStep2_x12b58:
    /*00012b58*/ ADD         FP, SP, #16 
    /*00012b5c*/ ADD         R1, SP, #12 
    /*00012b60*/ MOV         R0, R9 
    /*00012b64*/ ADD         R4, R4, #2640               @ 0xa50 
    /*00012b68*/ MOV         R2, FP 
    /*00012b6c*/ ADD         R4, R4, #8 
    /*00012b70*/ BL          0x0000000000012B70          @ VPSS_DRV_GetGroupCropCfgSize [R_ARM_CALL: .text+0x1f6f0] 
    /*00012b74*/ STR         FP, [SP] 
    /*00012b78*/ ADD         R3, SP, #12 
    /*00012b7c*/ MOV         R2, SL 
    /*00012b80*/ MOV         R1, R8 
    /*00012b84*/ MOV         R0, R9 
    /*00012b88*/ BL          0x0000000000012B88          @ VPSS_DRV_GetDestSize [R_ARM_CALL: .text+0x1f680] 
    /*00012b8c*/ MOV         LR, #72                     @ 0x48 
    /*00012b90*/ MLA         LR, LR, R8, R6 
    /*00012b94*/ ADD         R4, R4, R7 
    /*00012b98*/ ADD         IP, R5, #3360               @ 0xd20 
    /*00012b9c*/ LDR         R7, [SP, #12] 
    /*00012ba0*/ ADD         IP, IP, #8 
    /*00012ba4*/ ADD         R4, R6, R4 
    /*00012ba8*/ ADD         FP, LR, #860                @ 0x35c 
    /*00012bac*/ STR         R7, [SP, #24] 
    /*00012bb0*/ LDM         FP!, {R0, R1, R2, R3} 
    /*00012bb4*/ LDR         R7, [SP, #16] 
    /*00012bb8*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*00012bbc*/ ADD         R3, SP, #20 
    /*00012bc0*/ LDM         FP, {R0, R1} 
    /*00012bc4*/ MOV         R2, SL 
    /*00012bc8*/ STR         R7, [SP, #28] 
    /*00012bcc*/ STM         IP, {R0, R1} 
    /*00012bd0*/ MOV         R1, R8 
    /*00012bd4*/ LDR         FP, [LR, #836]              @ 0x344 
    /*00012bd8*/ MOV         R0, R9 
    /*00012bdc*/ LDR         R7, [LR, #832]              @ 0x340 
    /*00012be0*/ LDR         IP, [LR, #828]              @ 0x33c 
    /*00012be4*/ LDR         LR, [LR, #824]              @ 0x338 
    /*00012be8*/ STR         R4, [SP] 
    /*00012bec*/ STR         FP, [SP, #44]               @ 0x2c 
    /*00012bf0*/ STR         R7, [SP, #40]               @ 0x28 
    /*00012bf4*/ STR         IP, [SP, #20] 
    /*00012bf8*/ STR         LR, [SP, #48]               @ 0x30 
    /*00012bfc*/ BL          0x0000000000012BFC          @ VpssDrvPrepareVB [R_ARM_CALL: .text+0x25010] 
    /*00012c00*/ CMP         R0, #0 
    /*00012c04*/ MOVNE       R3, #0 
    /*00012c08*/ STRNE       R3, [R5, #2628]             @ 0xa44 
    /*00012c0c*/ BNE         VpssFakeQueryStep2_x12b4c
    /*00012c10*/ MOV         R2, R4 
    /*00012c14*/ MOV         R1, R8 
    /*00012c18*/ MOV         R0, R9 
    /*00012c1c*/ BL          0x0000000000012C1C          @ VPSS_DRV_GetHDRInfo [R_ARM_CALL: .text+0x23330] 
    /*00012c20*/ CMP         R0, #0 
    /*00012c24*/ BEQ         VpssFakeQueryStep2_x12c54
    /*00012c28*/ ADD         R3, SL, #548                @ 0x224 
    /*00012c2c*/ ADD         R3, R3, #2 
    /*00012c30*/ LDR         R3, [R6, R3, LSL #2] 
    /*00012c34*/ CMP         R3, #0 
    /*00012c38*/ BEQ         VpssFakeQueryStep2_x12cac
    /*00012c3c*/ LDR         R2, [R3, #36]               @ 0x24 
    /*00012c40*/ STR         R2, [R5, #2676]             @ 0xa74 
    /*00012c44*/ LDR         R2, [R3, #232]              @ 0xe8 
    /*00012c48*/ STR         R2, [R5, #2872]             @ 0xb38 
    /*00012c4c*/ LDR         R3, [R3, #236]              @ 0xec 
    /*00012c50*/ STR         R3, [R5, #2876]             @ 0xb3c 
    VpssFakeQueryStep2_x12c54:
    /*00012c54*/ MOVW        R3, #8536                   @ 0x2158 
    /*00012c58*/ MOV         R1, #776                    @ 0x308 
    /*00012c5c*/ MUL         SL, R3, SL 
    /*00012c60*/ MOV         R2, #1 
    /*00012c64*/ MLA         R8, R1, R8, SL 
    /*00012c68*/ MOV         R3, #0 
    /*00012c6c*/ MOV         R0, #0 
    /*00012c70*/ ADD         R6, R6, R8 
    /*00012c74*/ STR         R2, [R6, #2628]             @ 0xa44 
    /*00012c78*/ STR         R2, [R6, #2624]             @ 0xa40 
    /*00012c7c*/ STR         R3, [R6, #2636]             @ 0xa4c 
    /*00012c80*/ STR         R3, [R6, #2632]             @ 0xa48 
    /*00012c84*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00012c88*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssFakeQueryStep2_x12c8c:
    /*00012c8c*/ MOVW        R3, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4888] 
    /*00012c90*/ MOVW        R0, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4890] 
    /*00012c94*/ MOVT        R3, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4888] 
    /*00012c98*/ MOVT        R0, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4890] 
    /*00012c9c*/ MOVW        R2, #1135                   @ 0x46f 
    /*00012ca0*/ LDR         R1, [PC, #60]               @ 0x0000000000012ce4 
    /*00012ca4*/ BL          0x0000000000012CA4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00012ca8*/ B           VpssFakeQueryStep2_x12b28
    VpssFakeQueryStep2_x12cac:
    /*00012cac*/ STR         R3, [R5, #2628]             @ 0xa44 
    /*00012cb0*/ MOV         R0, R4 
    /*00012cb4*/ MOV         R1, #10 
    /*00012cb8*/ BL          0x0000000000012CB8          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*00012cbc*/ MOVW        R3, #1182                   @ 0x49e 
    /*00012cc0*/ STR         R9, [SP, #4] 
    /*00012cc4*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x484c] 
    /*00012cc8*/ STR         R3, [SP] 
    /*00012ccc*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x484c] 
    /*00012cd0*/ LDR         R3, [PC, #12]               @ 0x0000000000012ce4 
    /*00012cd4*/ MOV         R1, #7 
    /*00012cd8*/ MOV         R0, #3 
    /*00012cdc*/ BL          0x0000000000012CDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012ce0*/ B           VpssFakeQueryStep2_x12b4c
    /*00012ce4*/ ANDEQ       R0, R0, IP, LSL IP 
FUNC_END VpssFakeQueryStep2


FUNC_BEGIN VPSS_GetVpssVgstScaleSize
    /*00012ce8*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00012cec*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00012cf0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00012cf4*/ MOV         R9, R0 
    /*00012cf8*/ LDR         SL, [R3, R0, LSL #2] 
    /*00012cfc*/ SUB         SP, SP, #16 
    /*00012d00*/ MOV         R8, R1 
    /*00012d04*/ CMP         SL, #0 
    /*00012d08*/ BEQ         VPSS_GetVpssVgstScaleSize_x12e18
    VPSS_GetVpssVgstScaleSize_x12d0c:
    /*00012d0c*/ ADD         R3, SL, R8, LSL #2 
    /*00012d10*/ LDR         R2, [R3, #2616]             @ 0xa38 
    /*00012d14*/ LDR         R1, [R3, #2612]             @ 0xa34 
    /*00012d18*/ CMP         R2, #1 
    /*00012d1c*/ BEQ         VPSS_GetVpssVgstScaleSize_x12db0
    /*00012d20*/ CMP         R1, #1 
    /*00012d24*/ BEQ         VPSS_GetVpssVgstScaleSize_x12e00
    VPSS_GetVpssVgstScaleSize_x12d28:
    /*00012d28*/ LDR         R7, [SL, #2196]             @ 0x894 
    VPSS_GetVpssVgstScaleSize_x12d2c:
    /*00012d2c*/ CMP         R2, #1 
    /*00012d30*/ ADD         R7, R7, #8 
    /*00012d34*/ BEQ         VPSS_GetVpssVgstScaleSize_x12d40
    VPSS_GetVpssVgstScaleSize_x12d38:
    /*00012d38*/ ADD         SP, SP, #16 
    /*00012d3c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_GetVpssVgstScaleSize_x12d40:
    /*00012d40*/ MOVW        R4, #8536                   @ 0x2158 
    /*00012d44*/ ADD         R6, SL, #28416              @ 0x6f00 
    /*00012d48*/ MUL         R4, R4, R8 
    /*00012d4c*/ ADD         R6, R6, #212                @ 0xd4 
    /*00012d50*/ MOV         R5, #0 
    /*00012d54*/ LDR         R3, [R6], #4 
    /*00012d58*/ ADD         R4, R4, #2640               @ 0xa50 
    /*00012d5c*/ CMP         R3, #1 
    /*00012d60*/ ADD         R4, R4, #8 
    /*00012d64*/ ADD         R4, SL, R4 
    /*00012d68*/ BEQ         VPSS_GetVpssVgstScaleSize_x12d88
    VPSS_GetVpssVgstScaleSize_x12d6c:
    /*00012d6c*/ ADD         R5, R5, #1 
    /*00012d70*/ ADD         R4, R4, #776                @ 0x308 
    /*00012d74*/ CMP         R5, #3 
    /*00012d78*/ BEQ         VPSS_GetVpssVgstScaleSize_x12d38
    /*00012d7c*/ LDR         R3, [R6], #4 
    /*00012d80*/ CMP         R3, #1 
    /*00012d84*/ BNE         VPSS_GetVpssVgstScaleSize_x12d6c
    VPSS_GetVpssVgstScaleSize_x12d88:
    /*00012d88*/ LDR         R3, [R4, #-20]              @ 0xffffffec 
    /*00012d8c*/ CMP         R3, #1 
    /*00012d90*/ BNE         VPSS_GetVpssVgstScaleSize_x12d6c
    /*00012d94*/ STR         R4, [SP] 
    /*00012d98*/ MOV         R3, R7 
    /*00012d9c*/ MOV         R2, R8 
    /*00012da0*/ MOV         R1, R5 
    /*00012da4*/ MOV         R0, R9 
    /*00012da8*/ BL          0x0000000000012DA8          @ VPSS_DRV_GetChnActScaleSize [R_ARM_CALL: .text+0x2039c] 
    /*00012dac*/ B           VPSS_GetVpssVgstScaleSize_x12d6c
    VPSS_GetVpssVgstScaleSize_x12db0:
    /*00012db0*/ CMP         R1, #1 
    /*00012db4*/ BEQ         VPSS_GetVpssVgstScaleSize_x12e08
    /*00012db8*/ CMP         R1, #0 
    /*00012dbc*/ BNE         VPSS_GetVpssVgstScaleSize_x12d28
    /*00012dc0*/ LDR         R7, [SL, #2196]             @ 0x894 
    /*00012dc4*/ CMP         R7, #0 
    /*00012dc8*/ BNE         VPSS_GetVpssVgstScaleSize_x12d2c
    VPSS_GetVpssVgstScaleSize_x12dcc:
    /*00012dcc*/ STR         R1, [SP, #8] 
    /*00012dd0*/ MOV         R2, #1 
    /*00012dd4*/ MOVW        R3, #1418                   @ 0x58a 
    /*00012dd8*/ STR         R2, [SP, #12] 
    /*00012ddc*/ STR         R3, [SP] 
    /*00012de0*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4938] 
    /*00012de4*/ STR         R9, [SP, #4] 
    /*00012de8*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4938] 
    /*00012dec*/ LDR         R3, [PC, #68]               @ 0x0000000000012e38 
    /*00012df0*/ MOV         R1, #7 
    /*00012df4*/ MOV         R0, #3 
    /*00012df8*/ BL          0x0000000000012DF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012dfc*/ B           VPSS_GetVpssVgstScaleSize_x12d38
    VPSS_GetVpssVgstScaleSize_x12e00:
    /*00012e00*/ LDR         R7, [R3, #2200]             @ 0x898 
    /*00012e04*/ B           VPSS_GetVpssVgstScaleSize_x12d2c
    VPSS_GetVpssVgstScaleSize_x12e08:
    /*00012e08*/ LDR         R7, [R3, #2200]             @ 0x898 
    /*00012e0c*/ CMP         R7, #0 
    /*00012e10*/ BNE         VPSS_GetVpssVgstScaleSize_x12d2c
    /*00012e14*/ B           VPSS_GetVpssVgstScaleSize_x12dcc
    VPSS_GetVpssVgstScaleSize_x12e18:
    /*00012e18*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4924] 
    /*00012e1c*/ MOVW        R0, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4890] 
    /*00012e20*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4924] 
    /*00012e24*/ MOVT        R0, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4890] 
    /*00012e28*/ MOVW        R2, #1411                   @ 0x583 
    /*00012e2c*/ LDR         R1, [PC, #4]                @ 0x0000000000012e38 
    /*00012e30*/ BL          0x0000000000012E30          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00012e34*/ B           VPSS_GetVpssVgstScaleSize_x12d0c
    /*00012e38*/ ANDEQ       R0, R0, R0, LSR IP 
FUNC_END VPSS_GetVpssVgstScaleSize


FUNC_BEGIN VpssQuery
    /*00012e3c*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00012e40*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00012e44*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00012e48*/ MOVW        R8, #8536                   @ 0x2158 
    /*00012e4c*/ LDR         R3, [R3, R0, LSL #2] 
    /*00012e50*/ SUB         SP, SP, #28 
    /*00012e54*/ MOVW        FP, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49f4] 
    /*00012e58*/ MOVT        FP, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49f4] 
    /*00012e5c*/ ADD         R4, R3, #28416              @ 0x6f00 
    /*00012e60*/ MOV         R7, R0 
    /*00012e64*/ MLA         R8, R8, R1, R3 
    /*00012e68*/ ADD         R4, R4, #212                @ 0xd4 
    /*00012e6c*/ MOV         R5, #0 
    /*00012e70*/ MOVW        R3, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49ac] 
    /*00012e74*/ MOV         R6, R4 
    /*00012e78*/ MOVT        R3, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49ac] 
    /*00012e7c*/ STR         R1, [SP, #16] 
    /*00012e80*/ STR         R3, [SP, #20] 
    /*00012e84*/ MOV         R9, R8 
    VpssQuery_x12e88:
    /*00012e88*/ LDR         SL, [R6, #-88]              @ 0xffffffa8 
    /*00012e8c*/ MOV         R1, #7 
    /*00012e90*/ MOVW        IP, #1497                   @ 0x5d9 
    /*00012e94*/ LDR         R3, [PC, #380]              @ 0x0000000000013018 
    /*00012e98*/ CMP         SL, #1 
    /*00012e9c*/ MOV         R2, FP 
    /*00012ea0*/ MOV         R0, R1 
    /*00012ea4*/ BEQ         VpssQuery_x12f74
    /*00012ea8*/ STMIB       SP, {R5, R7} 
    /*00012eac*/ STR         IP, [SP] 
    /*00012eb0*/ BL          0x0000000000012EB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012eb4*/ MOV         R3, #0 
    /*00012eb8*/ STR         R3, [R6] 
    VpssQuery_x12ebc:
    /*00012ebc*/ ADD         R5, R5, #1 
    /*00012ec0*/ ADD         R9, R9, #776                @ 0x308 
    /*00012ec4*/ CMP         R5, #3 
    /*00012ec8*/ ADD         R6, R6, #4 
    /*00012ecc*/ BNE         VpssQuery_x12e88
    /*00012ed0*/ LDR         R5, [SP, #16] 
    /*00012ed4*/ MOV         R0, R7 
    /*00012ed8*/ LDR         SL, [PC, #312]              @ 0x0000000000013018 
    /*00012edc*/ MOV         R6, #0 
    /*00012ee0*/ MOVW        R9, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a40] 
    /*00012ee4*/ MOVT        R9, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a40] 
    /*00012ee8*/ MOV         R1, R5 
    /*00012eec*/ BL          0x0000000000012EEC          @ VpssGetAction [R_ARM_CALL: .text+0x1040] 
    /*00012ef0*/ MOV         R1, R5 
    /*00012ef4*/ MOV         R0, R7 
    /*00012ef8*/ MOV         R5, R6 
    /*00012efc*/ BL          0x0000000000012EFC          @ VPSS_GetVpssVgstScaleSize [R_ARM_CALL: .text+0x12ce8] 
    /*00012f00*/ MOVW        R3, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49ac] 
    /*00012f04*/ MOVT        R3, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49ac] 
    /*00012f08*/ STR         R3, [SP, #20] 
    VpssQuery_x12f0c:
    /*00012f0c*/ LDR         IP, [R4, #-88]              @ 0xffffffa8 
    /*00012f10*/ MOV         R1, #7 
    /*00012f14*/ MOVW        LR, #1549                   @ 0x60d 
    /*00012f18*/ MOV         R3, SL 
    /*00012f1c*/ CMP         IP, #1 
    /*00012f20*/ MOV         R2, R9 
    /*00012f24*/ MOV         R0, R1 
    /*00012f28*/ BNE         VpssQuery_x12f38
    /*00012f2c*/ LDR         FP, [R4] 
    /*00012f30*/ CMP         FP, #1 
    /*00012f34*/ BEQ         VpssQuery_x12fc4
    VpssQuery_x12f38:
    /*00012f38*/ STR         R7, [SP, #8] 
    /*00012f3c*/ ADD         R6, R6, #1 
    /*00012f40*/ STR         R5, [SP, #4] 
    /*00012f44*/ STR         LR, [SP] 
    /*00012f48*/ BL          0x0000000000012F48          @ HI_LOG [R_ARM_CALL: +0x0] 
    VpssQuery_x12f4c:
    /*00012f4c*/ ADD         R5, R5, #1 
    /*00012f50*/ ADD         R8, R8, #776                @ 0x308 
    /*00012f54*/ CMP         R5, #3 
    /*00012f58*/ ADD         R4, R4, #4 
    /*00012f5c*/ BNE         VpssQuery_x12f0c
    /*00012f60*/ CMP         R6, #3 
    /*00012f64*/ MOVNE       R0, #0 
    /*00012f68*/ MVNEQ       R0, #0 
    /*00012f6c*/ ADD         SP, SP, #28 
    /*00012f70*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssQuery_x12f74:
    /*00012f74*/ LDR         R2, [SP, #16] 
    /*00012f78*/ MOV         R1, R5 
    /*00012f7c*/ MOV         R0, R7 
    /*00012f80*/ BL          0x0000000000012F80          @ VpssFakeQueryStep1 [R_ARM_CALL: .text+0x128e0] 
    /*00012f84*/ MOV         R3, #7 
    /*00012f88*/ CMP         R0, #0 
    /*00012f8c*/ STREQ       SL, [R6] 
    /*00012f90*/ STREQ       R3, [R9, #2984]             @ 0xba8 
    /*00012f94*/ BEQ         VpssQuery_x12ebc
    /*00012f98*/ MOV         R1, R3 
    /*00012f9c*/ MOV         R0, R3 
    /*00012fa0*/ MOVW        R2, #1485                   @ 0x5cd 
    /*00012fa4*/ LDR         R3, [PC, #108]              @ 0x0000000000013018 
    /*00012fa8*/ STR         R2, [SP] 
    /*00012fac*/ STMIB       SP, {R5, R7} 
    /*00012fb0*/ LDR         R2, [SP, #20] 
    /*00012fb4*/ BL          0x0000000000012FB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012fb8*/ MOV         R3, #0 
    /*00012fbc*/ STR         R3, [R6] 
    /*00012fc0*/ B           VpssQuery_x12ebc
    VpssQuery_x12fc4:
    /*00012fc4*/ LDR         R2, [SP, #16] 
    /*00012fc8*/ MOV         R1, R5 
    /*00012fcc*/ MOV         R0, R7 
    /*00012fd0*/ BL          0x0000000000012FD0          @ VpssFakeQueryStep2 [R_ARM_CALL: .text+0x12b00] 
    /*00012fd4*/ MOV         R3, #7 
    /*00012fd8*/ CMP         R0, #0 
    /*00012fdc*/ STREQ       FP, [R4] 
    /*00012fe0*/ STREQ       R3, [R8, #2984]             @ 0xba8 
    /*00012fe4*/ BEQ         VpssQuery_x12f4c
    /*00012fe8*/ MOV         R1, R3 
    /*00012fec*/ MOV         R0, R3 
    /*00012ff0*/ MOVW        R2, #1535                   @ 0x5ff 
    /*00012ff4*/ MOV         R3, SL 
    /*00012ff8*/ STR         R2, [SP] 
    /*00012ffc*/ ADD         R6, R6, #1 
    /*00013000*/ STMIB       SP, {R5, R7} 
    /*00013004*/ LDR         R2, [SP, #20] 
    /*00013008*/ BL          0x0000000000013008          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001300c*/ MOV         R3, #0 
    /*00013010*/ STR         R3, [R4] 
    /*00013014*/ B           VpssQuery_x12f4c
    /*00013018*/ ANDEQ       R0, R0, IP, ASR #24 
FUNC_END VpssQuery


FUNC_BEGIN VpssPicNeedDiscard
    /*0001301c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00013020*/ LDR         R6, [R0] 
    /*00013024*/ LDR         R4, [R0, #4] 
    /*00013028*/ LDR         R3, [R0, #8] 
    /*0001302c*/ SUBS        R4, R6, R4 
    /*00013030*/ ADD         R2, R3, #1 
    /*00013034*/ STR         R2, [R0, #8] 
    /*00013038*/ BEQ         VpssPicNeedDiscard_x13070
    /*0001303c*/ MOV         R5, R0 
    /*00013040*/ MOV         R1, R6 
    /*00013044*/ MOV         R0, R3 
    /*00013048*/ BL          0x0000000000013048          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*0001304c*/ LDR         R7, [R5, #12] 
    /*00013050*/ LSR         R0, R4, #1 
    /*00013054*/ MLA         R0, R7, R6, R0 
    /*00013058*/ ADD         R6, R1, #1 
    /*0001305c*/ MOV         R1, R4 
    /*00013060*/ BL          0x0000000000013060          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00013064*/ CMP         R6, R0 
    /*00013068*/ MOVNE       R4, #0 
    /*0001306c*/ BEQ         VpssPicNeedDiscard_x13078
    VpssPicNeedDiscard_x13070:
    /*00013070*/ MOV         R0, R4 
    /*00013074*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssPicNeedDiscard_x13078:
    /*00013078*/ ADD         R0, R7, #1 
    /*0001307c*/ MOV         R1, R4 
    /*00013080*/ BL          0x0000000000013080          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*00013084*/ CMP         R1, #0 
    /*00013088*/ MOVEQ       R1, R4 
    /*0001308c*/ MOV         R4, #1 
    /*00013090*/ STR         R1, [R5, #12] 
    /*00013094*/ MOV         R0, R4 
    /*00013098*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VpssPicNeedDiscard


FUNC_BEGIN Vpss_AddExtChnVGSTask
    /*0001309c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000130a0*/ SUB         SP, SP, #132                @ 0x84 
    /*000130a4*/ MOV         R5, R1 
    /*000130a8*/ MOV         R4, R2 
    /*000130ac*/ MOV         R7, R0 
    /*000130b0*/ BL          0x00000000000130B0          @ VpssDefCheckGrpId [R_ARM_CALL: .text+0x3fc] 
    /*000130b4*/ CMP         R0, #0 
    /*000130b8*/ BNE         Vpss_AddExtChnVGSTask_x135e4
    /*000130bc*/ MOV         R0, R5 
    /*000130c0*/ BL          0x00000000000130C0          @ VpssDefCheckExtChnId [R_ARM_CALL: .text+0x424] 
    /*000130c4*/ CMP         R0, #0 
    /*000130c8*/ BNE         Vpss_AddExtChnVGSTask_x135f0
    /*000130cc*/ MOV         R0, R4 
    /*000130d0*/ BL          0x00000000000130D0          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*000130d4*/ CMP         R0, #0 
    /*000130d8*/ BNE         Vpss_AddExtChnVGSTask_x1363c
    /*000130dc*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000130e0*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000130e4*/ LDR         R8, [R3, R7, LSL #2] 
    /*000130e8*/ CMP         R8, #0 
    /*000130ec*/ BEQ         Vpss_AddExtChnVGSTask_x135fc
    Vpss_AddExtChnVGSTask_x130f0:
    /*000130f0*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000130f4*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000130f8*/ LDR         R9, [R3, R7, LSL #2] 
    /*000130fc*/ CMP         R9, #0 
    /*00013100*/ BEQ         Vpss_AddExtChnVGSTask_x1361c
    Vpss_AddExtChnVGSTask_x13104:
    /*00013104*/ SUB         R2, R5, #3 
    /*00013108*/ MOV         R3, #40                     @ 0x28 
    /*0001310c*/ STR         R2, [SP, #24] 
    /*00013110*/ MLA         R3, R3, R2, R8 
    /*00013114*/ LDR         R0, [R4, #12] 
    /*00013118*/ LDR         SL, [R3, #464]              @ 0x1d0 
    /*0001311c*/ LDR         R2, [R3, #452]              @ 0x1c4 
    /*00013120*/ LDR         R3, [R3, #456]              @ 0x1c8 
    /*00013124*/ MOV         R1, SL 
    /*00013128*/ STR         R2, [SP, #56]               @ 0x38 
    /*0001312c*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00013130*/ BL          0x0000000000013130          @ VPSS_DRV_CheckExtChnPixformatTransform [R_ARM_CALL: .text+0x1f568] 
    /*00013134*/ CMN         R0, #1 
    /*00013138*/ MOV         R6, R0 
    /*0001313c*/ BEQ         Vpss_AddExtChnVGSTask_x13758
    /*00013140*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1580] 
    /*00013144*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1580] 
    /*00013148*/ MOV         R2, #320                    @ 0x140 
    /*0001314c*/ MOV         R1, #0 
    /*00013150*/ MOV         R0, R6 
    /*00013154*/ BL          0x0000000000013154          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00013158*/ MOV         R3, #24 
    /*0001315c*/ MLA         R3, R3, R5, R9 
    /*00013160*/ MOVW        R2, #37816                  @ 0x93b8 
    /*00013164*/ LDR         R2, [R3, R2] 
    /*00013168*/ CMP         R2, #0 
    /*0001316c*/ BNE         Vpss_AddExtChnVGSTask_x133b8
    /*00013170*/ LDR         R3, [R4] 
    /*00013174*/ LDR         R1, [R4, #4] 
    Vpss_AddExtChnVGSTask_x13178:
    /*00013178*/ LDR         R0, [SP, #56]               @ 0x38 
    /*0001317c*/ MOV         R2, #30 
    /*00013180*/ MUL         IP, R2, R0 
    /*00013184*/ CMP         R3, IP 
    /*00013188*/ LDR         IP, [SP, #60]               @ 0x3c 
    /*0001318c*/ BHI         Vpss_AddExtChnVGSTask_x13558
    /*00013190*/ MUL         R2, R2, IP 
    /*00013194*/ CMP         R1, R2 
    /*00013198*/ BHI         Vpss_AddExtChnVGSTask_x13558
    /*0001319c*/ CMP         R0, R3, LSL #4 
    /*000131a0*/ BHI         Vpss_AddExtChnVGSTask_x13558
    /*000131a4*/ CMP         IP, R1, LSL #4 
    /*000131a8*/ BHI         Vpss_AddExtChnVGSTask_x13558
    /*000131ac*/ MOV         R0, #45                     @ 0x2d 
    /*000131b0*/ BL          0x00000000000131B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000131b4*/ SUBS        R9, R0, #0 
    /*000131b8*/ BEQ         Vpss_AddExtChnVGSTask_x13700
    /*000131bc*/ LDR         R3, [R9] 
    /*000131c0*/ CMP         R3, #0 
    /*000131c4*/ BEQ         Vpss_AddExtChnVGSTask_x13700
    /*000131c8*/ LDR         R3, [R9, #12] 
    /*000131cc*/ CMP         R3, #0 
    /*000131d0*/ BEQ         Vpss_AddExtChnVGSTask_x13700
    /*000131d4*/ LDR         R3, [R9, #4] 
    /*000131d8*/ CMP         R3, #0 
    /*000131dc*/ BEQ         Vpss_AddExtChnVGSTask_x13700
    /*000131e0*/ LDR         R3, [R9, #64]               @ 0x40 
    /*000131e4*/ BLX         R3 
    /*000131e8*/ SUBS        R6, R0, #0 
    /*000131ec*/ BEQ         Vpss_AddExtChnVGSTask_x137a0
    /*000131f0*/ LDR         R2, [SP, #24] 
    /*000131f4*/ MOV         R3, #40                     @ 0x28 
    /*000131f8*/ STR         R7, [R6, #728]              @ 0x2d8 
    /*000131fc*/ MOV         R0, #0 
    /*00013200*/ STR         R5, [R6, #732]              @ 0x2dc 
    /*00013204*/ MOV         LR, #45                     @ 0x2d 
    /*00013208*/ MLA         R8, R3, R2, R8 
    /*0001320c*/ LDR         IP, [SP, #56]               @ 0x38 
    /*00013210*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*00013214*/ MOV         R3, #7 
    /*00013218*/ STR         R3, [R6, #724]              @ 0x2d4 
    /*0001321c*/ ADD         R2, R6, #672                @ 0x2a0 
    /*00013220*/ LDR         R3, [R4, #336]              @ 0x150 
    /*00013224*/ ORR         R3, R3, R5, LSL #8 
    /*00013228*/ ORR         R3, R3, R7, LSL #16 
    /*0001322c*/ STR         R3, [R6, #672]              @ 0x2a0 
    /*00013230*/ STR         R0, [R2, #4] 
    /*00013234*/ MOVW        R3, #0                      @ VpssExtChnCallback [R_ARM_MOVW_ABS_NC: .text+0x13c20] 
    /*00013238*/ STR         R0, [R6, #740]              @ 0x2e4 
    /*0001323c*/ MOVT        R3, #0                      @ VpssExtChnCallback [R_ARM_MOVT_ABS: .text+0x13c20] 
    /*00013240*/ STR         SL, [R6, #348]              @ 0x15c 
    /*00013244*/ MOV         R2, R0 
    /*00013248*/ STR         IP, [R6, #336]              @ 0x150 
    /*0001324c*/ ADD         SL, R6, #336                @ 0x150 
    /*00013250*/ STR         R3, [R6, #720]              @ 0x2d0 
    /*00013254*/ ADD         IP, SP, #60                 @ 0x3c 
    /*00013258*/ STR         R1, [R6, #340]              @ 0x154 
    /*0001325c*/ LDR         R3, [R8, #472]              @ 0x1d8 
    /*00013260*/ STR         R3, [R6, #356]              @ 0x164 
    /*00013264*/ ADD         R3, SP, #56                 @ 0x38 
    /*00013268*/ LDR         R1, [R4, #16] 
    /*0001326c*/ STR         R1, [R6, #352]              @ 0x160 
    /*00013270*/ MOV         R1, R5 
    /*00013274*/ LDR         R8, [R8, #468]              @ 0x1d4 
    /*00013278*/ STR         LR, [R6, #668]              @ 0x29c 
    /*0001327c*/ STR         R8, [R6, #360]              @ 0x168 
    /*00013280*/ STR         R0, [SP, #8] 
    /*00013284*/ MOV         R0, R7 
    /*00013288*/ STR         SL, [SP, #4] 
    /*0001328c*/ STR         IP, [SP] 
    /*00013290*/ BL          0x0000000000013290          @ VpssDrvGetFrmVbBlk [R_ARM_CALL: .text+0x22f68] 
    /*00013294*/ CMP         R0, #0 
    /*00013298*/ BNE         Vpss_AddExtChnVGSTask_x13648
    /*0001329c*/ LDRD        R2, [R4, #240]              @ 0xf0 
    /*000132a0*/ MOV         R0, #1 
    /*000132a4*/ STRD        R2, [SL, #240]              @ 0xf0 
    /*000132a8*/ LDR         R3, [R4, #232]              @ 0xe8 
    /*000132ac*/ STR         R3, [R6, #568]              @ 0x238 
    /*000132b0*/ LDR         R3, [R4, #224]              @ 0xe0 
    /*000132b4*/ STR         R3, [R6, #560]              @ 0x230 
    /*000132b8*/ LDR         R3, [R4, #228]              @ 0xe4 
    /*000132bc*/ STR         R3, [R6, #564]              @ 0x234 
    /*000132c0*/ LDR         R3, [R4, #28] 
    /*000132c4*/ STR         R3, [R6, #364]              @ 0x16c 
    /*000132c8*/ LDR         R3, [R4, #256]              @ 0x100 
    /*000132cc*/ STR         R3, [R6, #592]              @ 0x250 
    /*000132d0*/ BL          0x00000000000132D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000132d4*/ MOV         R1, R4 
    /*000132d8*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*000132dc*/ MOV         R0, SL 
    /*000132e0*/ BLX         R3 
    /*000132e4*/ MOV         R1, R4 
    /*000132e8*/ MOV         R0, SL 
    /*000132ec*/ BL          0x00000000000132EC          @ VpssCopyVBPrivateData [R_ARM_CALL: .text+0x20f8] 
    /*000132f0*/ MOV         R2, #336                    @ 0x150 
    /*000132f4*/ MOV         R1, R4 
    /*000132f8*/ MOV         R0, R6 
    /*000132fc*/ BL          0x00000000000132FC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00013300*/ MOV         R0, #1 
    /*00013304*/ BL          0x0000000000013304          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013308*/ LDR         IP, [R4, #328]              @ 0x148 
    /*0001330c*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*00013310*/ MOV         R1, #10 
    /*00013314*/ STR         R1, [SP] 
    /*00013318*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*0001331c*/ MOV         R0, IP 
    /*00013320*/ BLX         R1 
    /*00013324*/ CMP         R0, #0 
    /*00013328*/ BNE         Vpss_AddExtChnVGSTask_x13538
    Vpss_AddExtChnVGSTask_x1332c:
    /*0001332c*/ STR         R5, [SP] 
    /*00013330*/ MOV         R1, #0 
    /*00013334*/ ADD         R2, SP, #64                 @ 0x40 
    /*00013338*/ STR         R1, [SP, #120]              @ 0x78 
    /*0001333c*/ STR         R2, [SP, #4] 
    /*00013340*/ MOV         R5, #1 
    /*00013344*/ MOV         R3, R7 
    /*00013348*/ STR         R5, [SP, #116]              @ 0x74 
    /*0001334c*/ MOV         R2, #7 
    /*00013350*/ LDR         R8, [R9] 
    /*00013354*/ ADD         R0, SP, #52                 @ 0x34 
    /*00013358*/ BLX         R8 
    /*0001335c*/ CMP         R0, #0 
    /*00013360*/ BNE         Vpss_AddExtChnVGSTask_x13690
    /*00013364*/ MOV         R1, R6 
    /*00013368*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x1580] 
    /*0001336c*/ LDR         R3, [R9, #32] 
    /*00013370*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x1580] 
    /*00013374*/ LDR         R0, [SP, #52]               @ 0x34 
    /*00013378*/ BLX         R3 
    /*0001337c*/ SUBS        R2, R0, #0 
    /*00013380*/ BNE         Vpss_AddExtChnVGSTask_x136d0
    /*00013384*/ MOV         R1, R5 
    /*00013388*/ LDR         R3, [R9, #12] 
    /*0001338c*/ LDR         R0, [SP, #52]               @ 0x34 
    /*00013390*/ BLX         R3 
    /*00013394*/ SUBS        R6, R0, #0 
    /*00013398*/ BNE         Vpss_AddExtChnVGSTask_x13728
    /*0001339c*/ LDR         R3, [PC, #1040]             @ 0x00000000000137b4 
    /*000133a0*/ MOV         R0, #92                     @ 0x5c 
    /*000133a4*/ MLA         R0, R0, R7, R3 
    /*000133a8*/ BL          0x00000000000133A8          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    Vpss_AddExtChnVGSTask_x133ac:
    /*000133ac*/ MOV         R0, R6 
    /*000133b0*/ ADD         SP, SP, #132                @ 0x84 
    /*000133b4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Vpss_AddExtChnVGSTask_x133b8:
    /*000133b8*/ MOVW        R2, #37820                  @ 0x93bc 
    /*000133bc*/ MOV         R1, #1 
    /*000133c0*/ LDR         R2, [R3, R2] 
    /*000133c4*/ STR         R1, [R6] 
    /*000133c8*/ CMP         R2, #0 
    /*000133cc*/ LDR         R2, [R4, #4] 
    /*000133d0*/ LDR         FP, [R4] 
    /*000133d4*/ STR         R2, [SP, #28] 
    /*000133d8*/ MOVW        R2, #37824                  @ 0x93c0 
    /*000133dc*/ BEQ         Vpss_AddExtChnVGSTask_x134cc
    /*000133e0*/ LDR         R0, [R3, R2] 
    /*000133e4*/ CMP         FP, R0 
    /*000133e8*/ BCC         Vpss_AddExtChnVGSTask_x13598
    /*000133ec*/ MOVW        R2, #37828                  @ 0x93c4 
    /*000133f0*/ LDR         R1, [SP, #28] 
    /*000133f4*/ LDR         R2, [R3, R2] 
    /*000133f8*/ CMP         R1, R2 
    /*000133fc*/ BCC         Vpss_AddExtChnVGSTask_x13598
    /*00013400*/ MOVW        IP, #37832                  @ 0x93c8 
    /*00013404*/ MOVW        R1, #37836                  @ 0x93cc 
    /*00013408*/ LDR         IP, [R3, IP] 
    /*0001340c*/ LDR         R1, [R3, R1] 
    Vpss_AddExtChnVGSTask_x13410:
    /*00013410*/ BIC         R0, R0, #1 
    /*00013414*/ LDR         LR, [SP, #28] 
    /*00013418*/ SUB         R3, FP, R0 
    /*0001341c*/ BIC         R2, R2, #1 
    /*00013420*/ CMP         R3, IP 
    /*00013424*/ SUB         LR, LR, R2 
    /*00013428*/ STR         R0, [R6, #4] 
    /*0001342c*/ MOVCS       R3, IP 
    /*00013430*/ CMP         LR, R1 
    /*00013434*/ BIC         R3, R3, #1 
    /*00013438*/ STR         R2, [R6, #8] 
    /*0001343c*/ MOVCC       R1, LR 
    /*00013440*/ BIC         R1, R1, #1 
    /*00013444*/ CMP         R1, #63                     @ 0x3f 
    /*00013448*/ CMPHI       R3, #63                     @ 0x3f 
    /*0001344c*/ STR         R3, [R6, #12] 
    /*00013450*/ STR         R1, [R6, #16] 
    /*00013454*/ BHI         Vpss_AddExtChnVGSTask_x134a0
    /*00013458*/ MOVW        R3, #1868                   @ 0x74c 
    /*0001345c*/ MOV         R1, #7 
    /*00013460*/ STR         R3, [SP] 
    /*00013464*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b34] 
    /*00013468*/ LDR         R3, [PC, #840]              @ 0x00000000000137b8 
    /*0001346c*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b34] 
    /*00013470*/ MOV         R0, #3 
    /*00013474*/ BL          0x0000000000013474          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013478*/ MOV         IP, #0 
    /*0001347c*/ LDR         LR, [SP, #28] 
    /*00013480*/ MOV         R2, IP 
    /*00013484*/ MOV         R0, IP 
    /*00013488*/ BIC         R3, FP, #1 
    /*0001348c*/ BIC         R1, LR, #1 
    /*00013490*/ STR         R3, [R6, #12] 
    /*00013494*/ STR         IP, [R6, #4] 
    /*00013498*/ STR         R1, [R6, #16] 
    /*0001349c*/ STR         IP, [R6, #8] 
    Vpss_AddExtChnVGSTask_x134a0:
    /*000134a0*/ MOV         IP, #24 
    /*000134a4*/ MOVW        R6, #15504                  @ 0x3c90 
    /*000134a8*/ MLA         R9, IP, R5, R9 
    /*000134ac*/ MOVW        FP, #15508                  @ 0x3c94 
    /*000134b0*/ MOVW        LR, #15512                  @ 0x3c98 
    /*000134b4*/ MOVW        IP, #15516                  @ 0x3c9c 
    /*000134b8*/ STR         R0, [R9, R6] 
    /*000134bc*/ STR         R2, [R9, FP] 
    /*000134c0*/ STR         R3, [R9, LR] 
    /*000134c4*/ STR         R1, [R9, IP] 
    /*000134c8*/ B           Vpss_AddExtChnVGSTask_x13178
    Vpss_AddExtChnVGSTask_x134cc:
    /*000134cc*/ LDR         R2, [R3, R2] 
    /*000134d0*/ MOVW        R1, #37828                  @ 0x93c4 
    /*000134d4*/ MOVW        R0, #37832                  @ 0x93c8 
    /*000134d8*/ MOVW        IP, #37836                  @ 0x93cc 
    /*000134dc*/ LDR         R1, [R3, R1] 
    /*000134e0*/ MOVW        LR, #19923                  @ 0x4dd3 
    /*000134e4*/ LDR         R0, [R3, R0] 
    /*000134e8*/ MOVT        LR, #4194                   @ 0x1062 
    /*000134ec*/ LDR         IP, [R3, IP] 
    /*000134f0*/ MUL         R3, R2, FP 
    /*000134f4*/ LDR         R2, [SP, #28] 
    /*000134f8*/ MUL         R0, R0, FP 
    /*000134fc*/ MUL         R1, R1, R2 
    /*00013500*/ MUL         IP, IP, R2 
    /*00013504*/ UMULL       R2, R3, R3, LR 
    /*00013508*/ STRD        R2, [SP, #32] 
    /*0001350c*/ UMULL       R2, R3, R1, LR 
    /*00013510*/ UMULL       R0, R1, R0, LR 
    /*00013514*/ STRD        R2, [SP, #40]               @ 0x28 
    /*00013518*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001351c*/ LSR         R0, R3, #6 
    /*00013520*/ UMULL       R2, R3, IP, LR 
    /*00013524*/ LDR         IP, [SP, #44]               @ 0x2c 
    /*00013528*/ LSR         R2, IP, #6 
    /*0001352c*/ LSR         IP, R1, #6 
    /*00013530*/ LSR         R1, R3, #6 
    /*00013534*/ B           Vpss_AddExtChnVGSTask_x13410
    Vpss_AddExtChnVGSTask_x13538:
    /*00013538*/ MOVW        R3, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c60] 
    /*0001353c*/ MOVW        R0, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4890] 
    /*00013540*/ MOVT        R3, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c60] 
    /*00013544*/ MOVT        R0, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4890] 
    /*00013548*/ MOVW        R2, #1957                   @ 0x7a5 
    /*0001354c*/ LDR         R1, [PC, #612]              @ 0x00000000000137b8 
    /*00013550*/ BL          0x0000000000013550          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00013554*/ B           Vpss_AddExtChnVGSTask_x1332c
    Vpss_AddExtChnVGSTask_x13558:
    /*00013558*/ STR         IP, [SP, #16] 
    /*0001355c*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b78] 
    /*00013560*/ MOVW        IP, #1892                   @ 0x764 
    /*00013564*/ STR         R0, [SP, #12] 
    /*00013568*/ STR         R1, [SP, #8] 
    /*0001356c*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b78] 
    /*00013570*/ STR         R3, [SP, #4] 
    /*00013574*/ MOV         R1, #7 
    /*00013578*/ STR         IP, [SP] 
    /*0001357c*/ MOV         R0, #3 
    /*00013580*/ LDR         R3, [PC, #560]              @ 0x00000000000137b8 
    /*00013584*/ MVN         R6, #0 
    /*00013588*/ BL          0x0000000000013588          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001358c*/ MOV         R0, R6 
    /*00013590*/ ADD         SP, SP, #132                @ 0x84 
    /*00013594*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Vpss_AddExtChnVGSTask_x13598:
    /*00013598*/ MOVW        R3, #1831                   @ 0x727 
    /*0001359c*/ MOV         R1, #7 
    /*000135a0*/ STR         R3, [SP] 
    /*000135a4*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b34] 
    /*000135a8*/ LDR         R3, [PC, #520]              @ 0x00000000000137b8 
    /*000135ac*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b34] 
    /*000135b0*/ MOV         R0, #3 
    /*000135b4*/ BL          0x00000000000135B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000135b8*/ LDR         R1, [SP, #28] 
    /*000135bc*/ MOV         IP, #0 
    /*000135c0*/ BIC         R3, FP, #1 
    /*000135c4*/ BIC         R1, R1, #1 
    /*000135c8*/ MOV         R2, IP 
    /*000135cc*/ STR         R3, [R6, #12] 
    /*000135d0*/ MOV         R0, IP 
    /*000135d4*/ STR         R1, [R6, #16] 
    /*000135d8*/ STR         IP, [R6, #4] 
    /*000135dc*/ STR         IP, [R6, #8] 
    /*000135e0*/ B           Vpss_AddExtChnVGSTask_x134a0
    Vpss_AddExtChnVGSTask_x135e4:
    /*000135e4*/ MOVW        R6, #32769                  @ 0x8001 
    /*000135e8*/ MOVT        R6, #40967                  @ 0xa007 
    /*000135ec*/ B           Vpss_AddExtChnVGSTask_x133ac
    Vpss_AddExtChnVGSTask_x135f0:
    /*000135f0*/ MOVW        R6, #32770                  @ 0x8002 
    /*000135f4*/ MOVT        R6, #40967                  @ 0xa007 
    /*000135f8*/ B           Vpss_AddExtChnVGSTask_x133ac
    Vpss_AddExtChnVGSTask_x135fc:
    /*000135fc*/ MOVW        R3, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4aa0] 
    /*00013600*/ MOVW        R0, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4890] 
    /*00013604*/ MOVT        R3, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4aa0] 
    /*00013608*/ MOVT        R0, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4890] 
    /*0001360c*/ MOV         R2, #1776                   @ 0x6f0 
    /*00013610*/ LDR         R1, [PC, #416]              @ 0x00000000000137b8 
    /*00013614*/ BL          0x0000000000013614          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00013618*/ B           Vpss_AddExtChnVGSTask_x130f0
    Vpss_AddExtChnVGSTask_x1361c:
    /*0001361c*/ MOVW        R3, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ab0] 
    /*00013620*/ MOVW        R0, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4890] 
    /*00013624*/ MOVT        R3, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ab0] 
    /*00013628*/ MOVT        R0, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4890] 
    /*0001362c*/ MOVW        R2, #1779                   @ 0x6f3 
    /*00013630*/ LDR         R1, [PC, #384]              @ 0x00000000000137b8 
    /*00013634*/ BL          0x0000000000013634          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00013638*/ B           Vpss_AddExtChnVGSTask_x13104
    Vpss_AddExtChnVGSTask_x1363c:
    /*0001363c*/ MOVW        R6, #32774                  @ 0x8006 
    /*00013640*/ MOVT        R6, #40967                  @ 0xa007 
    /*00013644*/ B           Vpss_AddExtChnVGSTask_x133ac
    Vpss_AddExtChnVGSTask_x13648:
    /*00013648*/ LDR         R3, [R9, #68]               @ 0x44 
    /*0001364c*/ MOV         R0, R6 
    /*00013650*/ BLX         R3 
    /*00013654*/ LDR         R0, [SP, #60]               @ 0x3c 
    /*00013658*/ LDR         R1, [SP, #56]               @ 0x38 
    /*0001365c*/ MOVW        R3, #1935                   @ 0x78f 
    /*00013660*/ STR         R5, [SP, #4] 
    /*00013664*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c24] 
    /*00013668*/ STR         R0, [SP, #12] 
    /*0001366c*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c24] 
    /*00013670*/ STR         R1, [SP, #8] 
    /*00013674*/ MOV         R0, #3 
    /*00013678*/ STR         R3, [SP] 
    /*0001367c*/ MOV         R1, #7 
    /*00013680*/ LDR         R3, [PC, #304]              @ 0x00000000000137b8 
    /*00013684*/ MVN         R6, #0 
    /*00013688*/ BL          0x0000000000013688          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001368c*/ B           Vpss_AddExtChnVGSTask_x133ac
    Vpss_AddExtChnVGSTask_x13690:
    /*00013690*/ MOVW        R3, #1965                   @ 0x7ad 
    /*00013694*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c78] 
    /*00013698*/ STR         R3, [SP] 
    /*0001369c*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c78] 
    /*000136a0*/ LDR         R3, [PC, #272]              @ 0x00000000000137b8 
    /*000136a4*/ MOV         R1, #7 
    /*000136a8*/ MOV         R0, #3 
    /*000136ac*/ BL          0x00000000000136AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    Vpss_AddExtChnVGSTask_x136b0:
    /*000136b0*/ MOV         R0, SL 
    /*000136b4*/ MOV         R1, #10 
    /*000136b8*/ BL          0x00000000000136B8          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*000136bc*/ MOV         R0, R4 
    /*000136c0*/ MOV         R1, #10 
    /*000136c4*/ MVN         R6, #0 
    /*000136c8*/ BL          0x00000000000136C8          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*000136cc*/ B           Vpss_AddExtChnVGSTask_x133ac
    Vpss_AddExtChnVGSTask_x136d0:
    /*000136d0*/ LDR         R3, [R9, #4] 
    /*000136d4*/ LDR         R0, [SP, #52]               @ 0x34 
    /*000136d8*/ BLX         R3 
    /*000136dc*/ MOVW        R3, #1973                   @ 0x7b5 
    /*000136e0*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ca4] 
    /*000136e4*/ STR         R3, [SP] 
    /*000136e8*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ca4] 
    /*000136ec*/ LDR         R3, [PC, #196]              @ 0x00000000000137b8 
    /*000136f0*/ MOV         R1, #7 
    /*000136f4*/ MOV         R0, #3 
    /*000136f8*/ BL          0x00000000000136F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000136fc*/ B           Vpss_AddExtChnVGSTask_x136b0
    Vpss_AddExtChnVGSTask_x13700:
    /*00013700*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bc8] 
    /*00013704*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bc8] 
    /*00013708*/ MOVW        R3, #1900                   @ 0x76c 
    /*0001370c*/ STR         R3, [SP] 
    Vpss_AddExtChnVGSTask_x13710:
    /*00013710*/ LDR         R3, [PC, #160]              @ 0x00000000000137b8 
    /*00013714*/ MOV         R1, #7 
    /*00013718*/ MOV         R0, #3 
    /*0001371c*/ MVN         R6, #0 
    /*00013720*/ BL          0x0000000000013720          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013724*/ B           Vpss_AddExtChnVGSTask_x133ac
    Vpss_AddExtChnVGSTask_x13728:
    /*00013728*/ LDR         R3, [R9, #4] 
    /*0001372c*/ LDR         R0, [SP, #52]               @ 0x34 
    /*00013730*/ BLX         R3 
    /*00013734*/ MOVW        R3, #1981                   @ 0x7bd 
    /*00013738*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4cd4] 
    /*0001373c*/ STR         R3, [SP] 
    /*00013740*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4cd4] 
    /*00013744*/ LDR         R3, [PC, #108]              @ 0x00000000000137b8 
    /*00013748*/ MOV         R1, #7 
    /*0001374c*/ MOV         R0, #3 
    /*00013750*/ BL          0x0000000000013750          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013754*/ B           Vpss_AddExtChnVGSTask_x136b0
    Vpss_AddExtChnVGSTask_x13758:
    /*00013758*/ LDR         R0, [R4, #12] 
    /*0001375c*/ BL          0x000000000001375C          @ VPSS_DRV_PixelToStr [R_ARM_CALL: .text+0x1c21c] 
    /*00013760*/ MOV         R4, R0 
    /*00013764*/ MOV         R0, SL 
    /*00013768*/ BL          0x0000000000013768          @ VPSS_DRV_PixelToStr [R_ARM_CALL: .text+0x1c21c] 
    /*0001376c*/ MOVW        R3, #1797                   @ 0x705 
    /*00013770*/ STR         R4, [SP, #12] 
    /*00013774*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ac8] 
    /*00013778*/ STR         R3, [SP] 
    /*0001377c*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ac8] 
    /*00013780*/ STR         R5, [SP, #8] 
    /*00013784*/ MOV         R1, #7 
    /*00013788*/ STR         R7, [SP, #4] 
    /*0001378c*/ LDR         R3, [PC, #36]               @ 0x00000000000137b8 
    /*00013790*/ STR         R0, [SP, #16] 
    /*00013794*/ MOV         R0, #3 
    /*00013798*/ BL          0x0000000000013798          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001379c*/ B           Vpss_AddExtChnVGSTask_x133ac
    Vpss_AddExtChnVGSTask_x137a0:
    /*000137a0*/ MOVW        R3, #1907                   @ 0x773 
    /*000137a4*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bf0] 
    /*000137a8*/ STR         R3, [SP] 
    /*000137ac*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bf0] 
    /*000137b0*/ B           Vpss_AddExtChnVGSTask_x13710
    /*000137b4*/ ANDEQ       R0, R0, R0, LSL R0          @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
    /*000137b8*/ ANDEQ       R0, R0, R8, ASR IP 
FUNC_END Vpss_AddExtChnVGSTask


FUNC_BEGIN VpssSendPicToExtChn
    /*000137bc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000137c0*/ SUB         SP, SP, #12 
    /*000137c4*/ MOV         R4, R1 
    /*000137c8*/ MOV         R7, R2 
    /*000137cc*/ MOV         R6, R0 
    /*000137d0*/ BL          0x00000000000137D0          @ VpssDefCheckGrpId [R_ARM_CALL: .text+0x3fc] 
    /*000137d4*/ CMP         R0, #0 
    /*000137d8*/ BNE         VpssSendPicToExtChn_x138c0
    /*000137dc*/ MOV         R0, R4 
    /*000137e0*/ BL          0x00000000000137E0          @ VpssDefCheckExtChnId [R_ARM_CALL: .text+0x424] 
    /*000137e4*/ CMP         R0, #0 
    /*000137e8*/ BNE         VpssSendPicToExtChn_x138d0
    /*000137ec*/ MOV         R0, R7 
    /*000137f0*/ BL          0x00000000000137F0          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*000137f4*/ CMP         R0, #0 
    /*000137f8*/ BNE         VpssSendPicToExtChn_x13904
    /*000137fc*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00013800*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00013804*/ LDR         R5, [R3, R6, LSL #2] 
    /*00013808*/ CMP         R5, #0 
    /*0001380c*/ BEQ         VpssSendPicToExtChn_x138e4
    VpssSendPicToExtChn_x13810:
    /*00013810*/ ADD         R2, R5, R4, LSL #2 
    /*00013814*/ ADD         R3, R2, #24576              @ 0x6000 
    /*00013818*/ LDR         R3, [R3, #3964]             @ 0xf7c 
    /*0001381c*/ CMP         R3, #0 
    /*00013820*/ BEQ         VpssSendPicToExtChn_x13910
    /*00013824*/ MOV         R3, #772                    @ 0x304 
    /*00013828*/ MOVW        R1, #11160                  @ 0x2b98 
    /*0001382c*/ MLA         R3, R3, R4, R5 
    /*00013830*/ LDR         R3, [R3, R1] 
    /*00013834*/ CMP         R3, #0 
    /*00013838*/ BEQ         VpssSendPicToExtChn_x1387c
    VpssSendPicToExtChn_x1383c:
    /*0001383c*/ SUB         R0, R4, #3 
    /*00013840*/ ADD         R0, R5, R0, LSL #4 
    /*00013844*/ BL          0x0000000000013844          @ VpssPicNeedDiscard [R_ARM_CALL: .text+0x1301c] 
    /*00013848*/ CMP         R0, #0 
    /*0001384c*/ BNE         VpssSendPicToExtChn_x138dc
    /*00013850*/ MOV         R1, R4 
    /*00013854*/ MOV         R0, R6 
    /*00013858*/ BL          0x0000000000013858          @ VPSS_DRV_NeedDoExtChnFisheye [R_ARM_CALL: .text+0x1a23c] 
    /*0001385c*/ LDR         R2, [R7, #12] 
    /*00013860*/ MOV         R1, R4 
    /*00013864*/ CMP         R0, #1 
    /*00013868*/ MOV         R0, R6 
    /*0001386c*/ BEQ         VpssSendPicToExtChn_x138b4
    /*00013870*/ ADD         SP, SP, #12 
    /*00013874*/ POP         {R4, R5, R6, R7, LR} 
    VpssSendPicToExtChn_x13878:
    /*00013878*/ B           VpssSendPicToExtChn_x13878  @ Vpss_AddExtChnVGSTask [R_ARM_JUMP24: .text+0x1309c] 
    VpssSendPicToExtChn_x1387c:
    /*0001387c*/ LDR         R3, [R2, #1648]             @ 0x670 
    /*00013880*/ CMP         R3, #0 
    /*00013884*/ BNE         VpssSendPicToExtChn_x1383c
    /*00013888*/ MOV         R1, #7 
    /*0001388c*/ MOVW        R3, #2035                   @ 0x7f3 
    /*00013890*/ STR         R4, [SP, #4] 
    /*00013894*/ MOV         R0, R1 
    /*00013898*/ STR         R3, [SP] 
    /*0001389c*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d38] 
    /*000138a0*/ LDR         R3, [PC, #148]              @ 0x000000000001393c 
    /*000138a4*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d38] 
    /*000138a8*/ BL          0x00000000000138A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000138ac*/ MVN         R0, #0 
    /*000138b0*/ B           VpssSendPicToExtChn_x138c8
    VpssSendPicToExtChn_x138b4:
    /*000138b4*/ ADD         SP, SP, #12 
    /*000138b8*/ POP         {R4, R5, R6, R7, LR} 
    VpssSendPicToExtChn_x138bc:
    /*000138bc*/ B           VpssSendPicToExtChn_x138bc  @ VPSS_SubmitExtChnPic2Gdc [R_ARM_JUMP24: .text+0xcb0c] 
    VpssSendPicToExtChn_x138c0:
    /*000138c0*/ MOVW        R0, #32769                  @ 0x8001 
    /*000138c4*/ MOVT        R0, #40967                  @ 0xa007 
    VpssSendPicToExtChn_x138c8:
    /*000138c8*/ ADD         SP, SP, #12 
    /*000138cc*/ POP         {R4, R5, R6, R7, PC} 
    VpssSendPicToExtChn_x138d0:
    /*000138d0*/ MOVW        R0, #32770                  @ 0x8002 
    /*000138d4*/ MOVT        R0, #40967                  @ 0xa007 
    /*000138d8*/ B           VpssSendPicToExtChn_x138c8
    VpssSendPicToExtChn_x138dc:
    /*000138dc*/ MVN         R0, #0 
    /*000138e0*/ B           VpssSendPicToExtChn_x138c8
    VpssSendPicToExtChn_x138e4:
    /*000138e4*/ MOVW        R3, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4aa0] 
    /*000138e8*/ MOVW        R0, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4890] 
    /*000138ec*/ MOVT        R3, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4aa0] 
    /*000138f0*/ MOVT        R0, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4890] 
    /*000138f4*/ MOVW        R2, #2014                   @ 0x7de 
    /*000138f8*/ LDR         R1, [PC, #60]               @ 0x000000000001393c 
    /*000138fc*/ BL          0x00000000000138FC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00013900*/ B           VpssSendPicToExtChn_x13810
    VpssSendPicToExtChn_x13904:
    /*00013904*/ MOVW        R0, #32774                  @ 0x8006 
    /*00013908*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001390c*/ B           VpssSendPicToExtChn_x138c8
    VpssSendPicToExtChn_x13910:
    /*00013910*/ MOVW        R3, #2019                   @ 0x7e3 
    /*00013914*/ STR         R4, [SP, #4] 
    /*00013918*/ STR         R3, [SP] 
    /*0001391c*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d04] 
    /*00013920*/ LDR         R3, [PC, #20]               @ 0x000000000001393c 
    /*00013924*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d04] 
    /*00013928*/ MOV         R1, #7 
    /*0001392c*/ MOV         R0, #3 
    /*00013930*/ BL          0x0000000000013930          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013934*/ MVN         R0, #0 
    /*00013938*/ B           VpssSendPicToExtChn_x138c8
    /*0001393c*/ ANDEQ       R0, R0, R0, ROR IP 
FUNC_END VpssSendPicToExtChn


FUNC_BEGIN VpssFakeSend
    /*00013940*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00013944*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00013948*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001394c*/ SUB         SP, SP, #36                 @ 0x24 
    /*00013950*/ LDR         R9, [R3, R0, LSL #2] 
    /*00013954*/ MOV         R7, R2 
    /*00013958*/ STR         R0, [SP, #12] 
    /*0001395c*/ STR         R1, [SP, #8] 
    /*00013960*/ MOV         R0, R9 
    /*00013964*/ BL          0x0000000000013964          @ VpssDefCheckNullPtr [R_ARM_CALL: .text+0x3e8] 
    /*00013968*/ SUBS        R3, R0, #0 
    /*0001396c*/ STR         R3, [SP, #20] 
    /*00013970*/ BNE         VpssFakeSend_x13bd0
    /*00013974*/ LDR         R3, [R7] 
    /*00013978*/ CMP         R3, #0 
    /*0001397c*/ BEQ         VpssFakeSend_x13be0
    /*00013980*/ LDR         R3, [R7, #12] 
    /*00013984*/ CMP         R3, #0 
    /*00013988*/ BEQ         VpssFakeSend_x13bb0
    VpssFakeSend_x1398c:
    /*0001398c*/ LDR         R5, [SP, #8] 
    /*00013990*/ ADD         R4, SP, #24 
    /*00013994*/ MOV         R0, R4 
    /*00013998*/ ADD         SL, R9, R5, LSL #2 
    /*0001399c*/ LDR         R3, [SL, #1648]             @ 0x670 
    /*000139a0*/ STR         R3, [SP, #16] 
    /*000139a4*/ BL          0x00000000000139A4          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*000139a8*/ LDM         R4, {R2, R3} 
    /*000139ac*/ MOV         R4, #772                    @ 0x304 
    /*000139b0*/ MUL         R4, R4, R5 
    /*000139b4*/ MOV         R1, R5 
    /*000139b8*/ LDR         R0, [SP, #12] 
    /*000139bc*/ BL          0x00000000000139BC          @ VpssChnFrameRateStatistic [R_ARM_CALL: .text+0x168a0] 
    /*000139c0*/ MOVW        R3, #11160                  @ 0x2b98 
    /*000139c4*/ ADD         R6, R9, R4 
    /*000139c8*/ LDR         R2, [R6, R3] 
    /*000139cc*/ CMP         R2, #0 
    /*000139d0*/ BEQ         VpssFakeSend_x13a68
    /*000139d4*/ ADD         R4, R4, #11136              @ 0x2b80 
    /*000139d8*/ MOVW        R8, #0                      @ g_stModelParam [R_ARM_MOVW_ABS_NC: .bss+0x648] 
    /*000139dc*/ ADD         R4, R4, #28 
    /*000139e0*/ LDR         FP, [PC, #560]              @ 0x0000000000013c18 
    /*000139e4*/ ADD         R6, R6, R3 
    /*000139e8*/ ADD         R4, R9, R4 
    /*000139ec*/ MOVT        R8, #0                      @ g_stModelParam [R_ARM_MOVT_ABS: .bss+0x648] 
    /*000139f0*/ MOV         R5, #0 
    /*000139f4*/ B           VpssFakeSend_x13a0c
    VpssFakeSend_x139f8:
    /*000139f8*/ LDR         R3, [R6] 
    /*000139fc*/ ADD         R5, R5, #1 
    /*00013a00*/ ADD         R4, R4, #12 
    /*00013a04*/ CMP         R3, R5 
    /*00013a08*/ BLS         VpssFakeSend_x13a68
    VpssFakeSend_x13a0c:
    /*00013a0c*/ LDR         R3, [R4] 
    /*00013a10*/ MOV         R2, R7 
    /*00013a14*/ LDMIB       R4, {R0, R1} 
    /*00013a18*/ ADD         R3, R8, R3, LSL #4 
    /*00013a1c*/ LDR         R3, [R3, #8] 
    /*00013a20*/ CMP         R3, #0 
    /*00013a24*/ BEQ         VpssFakeSend_x13a44
    /*00013a28*/ BLX         R3 
    /*00013a2c*/ CMP         R5, #0 
    /*00013a30*/ ADDEQ       R2, SL, #28672              @ 0x7000 
    /*00013a34*/ LDREQ       R3, [R2, #3164]             @ 0xc5c 
    /*00013a38*/ ADDEQ       R3, R3, #1 
    /*00013a3c*/ STREQ       R3, [R2, #3164]             @ 0xc5c 
    /*00013a40*/ B           VpssFakeSend_x139f8
    VpssFakeSend_x13a44:
    /*00013a44*/ MOVW        R3, #2113                   @ 0x841 
    /*00013a48*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4dac] 
    /*00013a4c*/ STR         R3, [SP] 
    /*00013a50*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4dac] 
    /*00013a54*/ MOV         R3, FP 
    /*00013a58*/ MOV         R1, #7 
    /*00013a5c*/ MOV         R0, #3 
    /*00013a60*/ BL          0x0000000000013A60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013a64*/ B           VpssFakeSend_x139f8
    VpssFakeSend_x13a68:
    /*00013a68*/ BL          0x0000000000013A68          @ VPSS_DRV_IsSupportExtChn [R_ARM_CALL: .text+0x20220] 
    /*00013a6c*/ CMP         R0, #0 
    /*00013a70*/ BEQ         VpssFakeSend_x13aec
    /*00013a74*/ LDR         R2, [SP, #8] 
    /*00013a78*/ MOV         R3, #36                     @ 0x24 
    /*00013a7c*/ MOVW        R5, #19652                  @ 0x4cc4 
    /*00013a80*/ MUL         R3, R3, R2 
    /*00013a84*/ ADD         R2, R9, R3 
    /*00013a88*/ LDR         R6, [R2, R5] 
    /*00013a8c*/ CMP         R6, #0 
    /*00013a90*/ BEQ         VpssFakeSend_x13aec
    /*00013a94*/ ADD         R3, R3, R5 
    /*00013a98*/ MOV         R4, #0 
    /*00013a9c*/ ADD         R5, R9, R3 
    /*00013aa0*/ MOVW        R8, #7134                   @ 0x1bde 
    /*00013aa4*/ B           VpssFakeSend_x13ab0
    VpssFakeSend_x13aa8:
    /*00013aa8*/ CMP         R4, R6 
    /*00013aac*/ BEQ         VpssFakeSend_x13aec
    VpssFakeSend_x13ab0:
    /*00013ab0*/ LDR         R1, [R5, #4]! 
    /*00013ab4*/ ADD         R4, R4, #1 
    /*00013ab8*/ SUB         R2, R1, #3 
    /*00013abc*/ ADD         R3, R1, R8 
    /*00013ac0*/ CMP         R2, #7 
    /*00013ac4*/ ADD         R3, R9, R3, LSL #2 
    /*00013ac8*/ BHI         VpssFakeSend_x13aa8
    /*00013acc*/ LDR         R3, [R3, #4] 
    /*00013ad0*/ CMP         R3, #0 
    /*00013ad4*/ BEQ         VpssFakeSend_x13aa8
    /*00013ad8*/ MOV         R2, R7 
    /*00013adc*/ LDR         R0, [SP, #12] 
    /*00013ae0*/ BL          0x0000000000013AE0          @ VpssSendPicToExtChn [R_ARM_CALL: .text+0x137bc] 
    /*00013ae4*/ CMP         R4, R6 
    /*00013ae8*/ BNE         VpssFakeSend_x13ab0
    VpssFakeSend_x13aec:
    /*00013aec*/ LDR         R3, [SP, #16] 
    /*00013af0*/ CMP         R3, #0 
    /*00013af4*/ BEQ         VpssFakeSend_x13ba4
    /*00013af8*/ LDR         R3, [SP, #8] 
    /*00013afc*/ LDR         R6, [SP, #16] 
    /*00013b00*/ ADD         R4, R9, R3, LSL #5 
    /*00013b04*/ ADD         R4, R4, #1696               @ 0x6a0 
    /*00013b08*/ ADD         R4, R4, #8 
    /*00013b0c*/ B           VpssFakeSend_x13b34
    VpssFakeSend_x13b10:
    /*00013b10*/ BL          0x0000000000013B10          @ VPSS_PicQueueGetBusy [R_ARM_CALL: .text+0x10f14] 
    /*00013b14*/ SUBS        R5, R0, #0 
    /*00013b18*/ MOV         R0, R4 
    /*00013b1c*/ MOV         R1, R5 
    /*00013b20*/ BEQ         VpssFakeSend_x13ba4
    /*00013b24*/ BL          0x0000000000013B24          @ VPSS_PicQueuePutFree [R_ARM_CALL: .text+0x11034] 
    /*00013b28*/ ADD         R0, R5, #8 
    /*00013b2c*/ MOV         R1, #10 
    /*00013b30*/ BL          0x0000000000013B30          @ VpssPutVb [R_ARM_CALL: .text+0x11378] 
    VpssFakeSend_x13b34:
    /*00013b34*/ MOV         R0, R4 
    /*00013b38*/ BL          0x0000000000013B38          @ VPSS_PicQueueGetBusyNum [R_ARM_CALL: .text+0x11060] 
    /*00013b3c*/ CMP         R6, R0 
    /*00013b40*/ MOV         R0, R4 
    /*00013b44*/ BLS         VpssFakeSend_x13b10
    /*00013b48*/ BL          0x0000000000013B48          @ VPSS_PicQueueGetFree [R_ARM_CALL: .text+0x10e70] 
    /*00013b4c*/ SUBS        R6, R0, #0 
    /*00013b50*/ BEQ         VpssFakeSend_x13bf8
    VpssFakeSend_x13b54:
    /*00013b54*/ ADD         R5, R6, #8 
    /*00013b58*/ MOV         R2, #360                    @ 0x168 
    /*00013b5c*/ LDR         R1, [R7, #12] 
    /*00013b60*/ MOV         R0, R5 
    /*00013b64*/ BL          0x0000000000013B64          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00013b68*/ MOV         R0, R4 
    /*00013b6c*/ MOV         R1, R6 
    /*00013b70*/ BL          0x0000000000013B70          @ VPSS_PicQueuePutBusy [R_ARM_CALL: .text+0x10ecc] 
    /*00013b74*/ LDR         R4, [SP, #12] 
    /*00013b78*/ LDR         R1, [SP, #8] 
    /*00013b7c*/ MOV         R0, R4 
    /*00013b80*/ BL          0x0000000000013B80          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*00013b84*/ LDR         R3, [PC, #144]              @ 0x0000000000013c1c 
    /*00013b88*/ MOV         R0, #92                     @ 0x5c 
    /*00013b8c*/ MLA         R0, R0, R4, R3 
    /*00013b90*/ BL          0x0000000000013B90          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00013b94*/ MOV         R0, R5 
    /*00013b98*/ MOV         R1, #10 
    /*00013b9c*/ BL          0x0000000000013B9C          @ VpssGetVb [R_ARM_CALL: .text+0x11424] 
    /*00013ba0*/ STR         R0, [SP, #20] 
    VpssFakeSend_x13ba4:
    /*00013ba4*/ LDR         R0, [SP, #20] 
    /*00013ba8*/ ADD         SP, SP, #36                 @ 0x24 
    /*00013bac*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssFakeSend_x13bb0:
    /*00013bb0*/ MOVW        R3, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d80] 
    /*00013bb4*/ MOVW        R0, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4890] 
    /*00013bb8*/ MOVT        R3, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d80] 
    /*00013bbc*/ MOVT        R0, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4890] 
    /*00013bc0*/ MOVW        R2, #2088                   @ 0x828 
    /*00013bc4*/ LDR         R1, [PC, #76]               @ 0x0000000000013c18 
    /*00013bc8*/ BL          0x0000000000013BC8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00013bcc*/ B           VpssFakeSend_x1398c
    VpssFakeSend_x13bd0:
    /*00013bd0*/ MOVW        R3, #32774                  @ 0x8006 
    /*00013bd4*/ MOVT        R3, #40967                  @ 0xa007 
    /*00013bd8*/ STR         R3, [SP, #20] 
    /*00013bdc*/ B           VpssFakeSend_x13ba4
    VpssFakeSend_x13be0:
    /*00013be0*/ LDR         R1, [SP, #8] 
    /*00013be4*/ LDR         R0, [SP, #12] 
    /*00013be8*/ BL          0x0000000000013BE8          @ VPSS_ChnWorkingNumSub [R_ARM_CALL: .text+0xa248] 
    /*00013bec*/ MVN         R3, #0 
    /*00013bf0*/ STR         R3, [SP, #20] 
    /*00013bf4*/ B           VpssFakeSend_x13ba4
    VpssFakeSend_x13bf8:
    /*00013bf8*/ MOVW        R3, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4de8] 
    /*00013bfc*/ MOVW        R0, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4890] 
    /*00013c00*/ MOVT        R3, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4de8] 
    /*00013c04*/ MOVT        R0, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4890] 
    /*00013c08*/ MOVW        R2, #2158                   @ 0x86e 
    /*00013c0c*/ LDR         R1, [PC, #4]                @ 0x0000000000013c18 
    /*00013c10*/ BL          0x0000000000013C10          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00013c14*/ B           VpssFakeSend_x13b54
    /*00013c18*/ ANDEQ       R0, R0, R4, LSL #25 
    /*00013c1c*/ ANDEQ       R0, R0, R4, LSL R0          @ g_stSynchCtx [R_ARM_ABS32: .bss+0x40] 
FUNC_END VpssFakeSend


FUNC_BEGIN VpssExtChnCallback
    /*00013c20*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00013c24*/ SUBS        R4, R3, #0 
    /*00013c28*/ SUB         SP, SP, #76                 @ 0x4c 
    /*00013c2c*/ BEQ         VpssExtChnCallback_x13f40
    /*00013c30*/ LDR         FP, [R4, #672]              @ 0x2a0 
    /*00013c34*/ LSR         R5, FP, #16 
    /*00013c38*/ CMP         R5, #15 
    /*00013c3c*/ BGT         VpssExtChnCallback_x13d04
    /*00013c40*/ UBFX        R7, FP, #8, #8 
    /*00013c44*/ SUB         R8, R7, #3 
    /*00013c48*/ CMP         R8, #7 
    /*00013c4c*/ BHI         VpssExtChnCallback_x13e6c
    /*00013c50*/ LDR         R3, [R4, #736]              @ 0x2e0 
    /*00013c54*/ CMP         R3, #1 
    /*00013c58*/ BEQ         VpssExtChnCallback_x13d2c
    /*00013c5c*/ MOVW        R3, #1609                   @ 0x649 
    /*00013c60*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4e88] 
    /*00013c64*/ STR         R3, [SP] 
    /*00013c68*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4e88] 
    /*00013c6c*/ STR         R5, [SP, #4] 
    /*00013c70*/ MOV         R1, #7 
    /*00013c74*/ LDR         R3, [PC, #1016]             @ 0x0000000000014074 
    /*00013c78*/ MOV         R0, #3 
    /*00013c7c*/ BL          0x0000000000013C7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VpssExtChnCallback_x13c80:
    /*00013c80*/ MOV         R0, #1 
    /*00013c84*/ BL          0x0000000000013C84          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013c88*/ LDR         IP, [R4, #328]              @ 0x148 
    /*00013c8c*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*00013c90*/ MOV         R1, #10 
    /*00013c94*/ STR         R1, [SP] 
    /*00013c98*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00013c9c*/ MOV         R0, IP 
    /*00013ca0*/ BLX         R1 
    /*00013ca4*/ CMP         R0, #0 
    /*00013ca8*/ BNE         VpssExtChnCallback_x13e48
    VpssExtChnCallback_x13cac:
    /*00013cac*/ MOV         R0, #1 
    /*00013cb0*/ BL          0x0000000000013CB0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013cb4*/ LDR         IP, [R4, #664]              @ 0x298 
    /*00013cb8*/ ADD         R3, R4, #336                @ 0x150 
    /*00013cbc*/ MOV         R1, #10 
    /*00013cc0*/ LDRD        R2, [R3, #120]              @ 0x78 
    /*00013cc4*/ STR         R1, [SP] 
    /*00013cc8*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00013ccc*/ MOV         R0, IP 
    /*00013cd0*/ BLX         R1 
    /*00013cd4*/ CMP         R0, #0 
    /*00013cd8*/ BEQ         VpssExtChnCallback_x13cfc
    /*00013cdc*/ MOVW        R3, #1700                   @ 0x6a4 
    /*00013ce0*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fd0] 
    /*00013ce4*/ STR         R3, [SP] 
    /*00013ce8*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fd0] 
    /*00013cec*/ LDR         R3, [PC, #896]              @ 0x0000000000014074 
    /*00013cf0*/ MOV         R1, #7 
    /*00013cf4*/ MOV         R0, #3 
    /*00013cf8*/ BL          0x0000000000013CF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VpssExtChnCallback_x13cfc:
    /*00013cfc*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00013d00*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssExtChnCallback_x13d04:
    /*00013d04*/ MOVW        R3, #1596                   @ 0x63c 
    /*00013d08*/ STR         R5, [SP, #4] 
    /*00013d0c*/ STR         R3, [SP] 
    /*00013d10*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4e2c] 
    /*00013d14*/ LDR         R3, [PC, #856]              @ 0x0000000000014074 
    /*00013d18*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4e2c] 
    /*00013d1c*/ MOV         R1, #7 
    /*00013d20*/ MOV         R0, #3 
    /*00013d24*/ BL          0x0000000000013D24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013d28*/ B           VpssExtChnCallback_x13c80
    VpssExtChnCallback_x13d2c:
    /*00013d2c*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00013d30*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00013d34*/ LDR         SL, [R3, R5, LSL #2] 
    /*00013d38*/ CMP         SL, #0 
    /*00013d3c*/ BEQ         VpssExtChnCallback_x13fac
    /*00013d40*/ MOV         R6, #92                     @ 0x5c 
    /*00013d44*/ MOVW        R9, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013d48*/ MUL         R6, R6, R5 
    /*00013d4c*/ MOVT        R9, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013d50*/ ADD         R1, SP, #36                 @ 0x24 
    /*00013d54*/ ADD         R3, R6, #48                 @ 0x30 
    /*00013d58*/ ADD         R3, R9, R3 
    /*00013d5c*/ STR         R3, [SP, #28] 
    /*00013d60*/ MOV         R0, R3 
    /*00013d64*/ BL          0x0000000000013D64          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013d68*/ LDR         R2, [R9, R6] 
    /*00013d6c*/ ADD         R1, R9, R6 
    /*00013d70*/ LDR         R3, [SP, #28] 
    /*00013d74*/ CMP         R2, #0 
    /*00013d78*/ BNE         VpssExtChnCallback_x13e94
    /*00013d7c*/ LDR         R2, [R1, #4] 
    /*00013d80*/ CMP         R2, #0 
    /*00013d84*/ BNE         VpssExtChnCallback_x13e94
    /*00013d88*/ ADD         R2, R7, #7104               @ 0x1bc0 
    /*00013d8c*/ ADD         R2, R2, #30 
    /*00013d90*/ ADD         R2, SL, R2, LSL #2 
    /*00013d94*/ LDR         R2, [R2, #4] 
    /*00013d98*/ CMP         R2, #0 
    /*00013d9c*/ BEQ         VpssExtChnCallback_x13fd4
    /*00013da0*/ MOV         R2, #40                     @ 0x28 
    /*00013da4*/ LDR         R1, [R4, #336]              @ 0x150 
    /*00013da8*/ MLA         R2, R2, R8, SL 
    /*00013dac*/ LDR         R0, [R2, #452]              @ 0x1c4 
    /*00013db0*/ CMP         R0, R1 
    /*00013db4*/ BNE         VpssExtChnCallback_x13dc8
    /*00013db8*/ LDR         R1, [R2, #456]              @ 0x1c8 
    /*00013dbc*/ LDR         R2, [R4, #340]              @ 0x154 
    /*00013dc0*/ CMP         R1, R2 
    /*00013dc4*/ BEQ         VpssExtChnCallback_x13ff8
    VpssExtChnCallback_x13dc8:
    /*00013dc8*/ ADD         R1, SP, #36                 @ 0x24 
    /*00013dcc*/ MOV         R0, R3 
    /*00013dd0*/ BL          0x0000000000013DD0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013dd4*/ STR         R7, [SP, #4] 
    /*00013dd8*/ MOVW        R3, #1643                   @ 0x66b 
    /*00013ddc*/ MOV         R1, #7 
    /*00013de0*/ STR         R3, [SP] 
    /*00013de4*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f5c] 
    /*00013de8*/ LDR         R3, [PC, #644]              @ 0x0000000000014074 
    /*00013dec*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f5c] 
    /*00013df0*/ MOV         R0, #3 
    /*00013df4*/ MOV         FP, R4 
    /*00013df8*/ BL          0x0000000000013DF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013dfc*/ LDR         R3, [R4, #340]              @ 0x154 
    /*00013e00*/ MOV         R2, #40                     @ 0x28 
    /*00013e04*/ MOVW        LR, #1646                   @ 0x66e 
    /*00013e08*/ MLA         R8, R2, R8, SL 
    /*00013e0c*/ STR         R3, [SP, #16] 
    /*00013e10*/ LDR         IP, [FP, #336]!             @ 0x150 
    /*00013e14*/ MOVW        R2, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f98] 
    /*00013e18*/ MOV         R1, #7 
    /*00013e1c*/ MOVT        R2, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f98] 
    /*00013e20*/ LDR         R3, [PC, #588]              @ 0x0000000000014074 
    /*00013e24*/ MOV         R0, #3 
    /*00013e28*/ STR         IP, [SP, #12] 
    /*00013e2c*/ LDR         IP, [R8, #456]              @ 0x1c8 
    /*00013e30*/ STR         IP, [SP, #8] 
    /*00013e34*/ LDR         IP, [R8, #452]              @ 0x1c4 
    /*00013e38*/ STR         LR, [SP] 
    /*00013e3c*/ STR         IP, [SP, #4] 
    /*00013e40*/ BL          0x0000000000013E40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013e44*/ B           VpssExtChnCallback_x13ec8
    VpssExtChnCallback_x13e48:
    /*00013e48*/ MOVW        R3, #1693                   @ 0x69d 
    /*00013e4c*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fd0] 
    /*00013e50*/ STR         R3, [SP] 
    /*00013e54*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fd0] 
    /*00013e58*/ LDR         R3, [PC, #532]              @ 0x0000000000014074 
    /*00013e5c*/ MOV         R1, #7 
    /*00013e60*/ MOV         R0, #3 
    /*00013e64*/ BL          0x0000000000013E64          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013e68*/ B           VpssExtChnCallback_x13cac
    VpssExtChnCallback_x13e6c:
    /*00013e6c*/ MOVW        R3, #1602                   @ 0x642 
    /*00013e70*/ STR         R7, [SP, #4] 
    /*00013e74*/ STR         R3, [SP] 
    /*00013e78*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4e58] 
    /*00013e7c*/ LDR         R3, [PC, #496]              @ 0x0000000000014074 
    /*00013e80*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4e58] 
    /*00013e84*/ MOV         R1, #7 
    /*00013e88*/ MOV         R0, #3 
    /*00013e8c*/ BL          0x0000000000013E8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013e90*/ B           VpssExtChnCallback_x13c80
    VpssExtChnCallback_x13e94:
    /*00013e94*/ MOV         R0, R3 
    /*00013e98*/ ADD         R1, SP, #36                 @ 0x24 
    /*00013e9c*/ BL          0x0000000000013E9C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013ea0*/ MOVW        R2, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ee8] 
    /*00013ea4*/ MOVT        R2, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ee8] 
    /*00013ea8*/ MOVW        R3, #1627                   @ 0x65b 
    /*00013eac*/ STR         R5, [SP, #4] 
    /*00013eb0*/ STR         R3, [SP] 
    VpssExtChnCallback_x13eb4:
    /*00013eb4*/ LDR         R3, [PC, #440]              @ 0x0000000000014074 
    /*00013eb8*/ MOV         R1, #7 
    /*00013ebc*/ MOV         R0, #4 
    /*00013ec0*/ ADD         FP, R4, #336                @ 0x150 
    /*00013ec4*/ BL          0x0000000000013EC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VpssExtChnCallback_x13ec8:
    /*00013ec8*/ MOV         R0, #1 
    /*00013ecc*/ BL          0x0000000000013ECC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013ed0*/ LDR         IP, [R4, #328]              @ 0x148 
    /*00013ed4*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*00013ed8*/ MOV         R1, #10 
    /*00013edc*/ STR         R1, [SP] 
    /*00013ee0*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00013ee4*/ MOV         R0, IP 
    /*00013ee8*/ BLX         R1 
    /*00013eec*/ CMP         R0, #0 
    /*00013ef0*/ BNE         VpssExtChnCallback_x13f88
    VpssExtChnCallback_x13ef4:
    /*00013ef4*/ MOV         R0, #1 
    /*00013ef8*/ BL          0x0000000000013EF8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013efc*/ LDR         IP, [R4, #664]              @ 0x298 
    /*00013f00*/ LDRD        R2, [FP, #120]              @ 0x78 
    /*00013f04*/ MOV         R1, #10 
    /*00013f08*/ STR         R1, [SP] 
    /*00013f0c*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00013f10*/ MOV         R0, IP 
    /*00013f14*/ BLX         R1 
    /*00013f18*/ CMP         R0, #0 
    /*00013f1c*/ BNE         VpssExtChnCallback_x13f64
    VpssExtChnCallback_x13f20:
    /*00013f20*/ ADD         R0, R6, #16 
    /*00013f24*/ ADD         R0, R9, R0 
    /*00013f28*/ BL          0x0000000000013F28          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*00013f2c*/ ADD         R0, R6, #36                 @ 0x24 
    /*00013f30*/ ADD         R0, R9, R0 
    /*00013f34*/ BL          0x0000000000013F34          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00013f38*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00013f3c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssExtChnCallback_x13f40:
    /*00013f40*/ MOVW        R3, #1583                   @ 0x62f 
    /*00013f44*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4e00] 
    /*00013f48*/ STR         R3, [SP] 
    /*00013f4c*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4e00] 
    /*00013f50*/ LDR         R3, [PC, #284]              @ 0x0000000000014074 
    /*00013f54*/ MOV         R1, #7 
    /*00013f58*/ MOV         R0, #3 
    /*00013f5c*/ BL          0x0000000000013F5C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013f60*/ B           VpssExtChnCallback_x13cfc
    VpssExtChnCallback_x13f64:
    /*00013f64*/ MOVW        R3, #1678                   @ 0x68e 
    /*00013f68*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fd0] 
    /*00013f6c*/ STR         R3, [SP] 
    /*00013f70*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fd0] 
    /*00013f74*/ LDR         R3, [PC, #248]              @ 0x0000000000014074 
    /*00013f78*/ MOV         R1, #7 
    /*00013f7c*/ MOV         R0, #3 
    /*00013f80*/ BL          0x0000000000013F80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013f84*/ B           VpssExtChnCallback_x13f20
    VpssExtChnCallback_x13f88:
    /*00013f88*/ MOVW        R3, #1671                   @ 0x687 
    /*00013f8c*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fd0] 
    /*00013f90*/ STR         R3, [SP] 
    /*00013f94*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fd0] 
    /*00013f98*/ LDR         R3, [PC, #212]              @ 0x0000000000014074 
    /*00013f9c*/ MOV         R1, #7 
    /*00013fa0*/ MOV         R0, #3 
    /*00013fa4*/ BL          0x0000000000013FA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013fa8*/ B           VpssExtChnCallback_x13ef4
    VpssExtChnCallback_x13fac:
    /*00013fac*/ MOVW        R3, #1617                   @ 0x651 
    /*00013fb0*/ STR         R5, [SP, #4] 
    /*00013fb4*/ STR         R3, [SP] 
    /*00013fb8*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ebc] 
    /*00013fbc*/ LDR         R3, [PC, #176]              @ 0x0000000000014074 
    /*00013fc0*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ebc] 
    /*00013fc4*/ MOV         R1, #7 
    /*00013fc8*/ MOV         R0, #3 
    /*00013fcc*/ BL          0x0000000000013FCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013fd0*/ B           VpssExtChnCallback_x13c80
    VpssExtChnCallback_x13fd4:
    /*00013fd4*/ MOV         R0, R3 
    /*00013fd8*/ ADD         R1, SP, #36                 @ 0x24 
    /*00013fdc*/ BL          0x0000000000013FDC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013fe0*/ MOVW        R3, #1633                   @ 0x661 
    /*00013fe4*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f2c] 
    /*00013fe8*/ STR         R7, [SP, #4] 
    /*00013fec*/ STR         R3, [SP] 
    /*00013ff0*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f2c] 
    /*00013ff4*/ B           VpssExtChnCallback_x13eb4
    VpssExtChnCallback_x13ff8:
    /*00013ff8*/ MOV         R1, #776                    @ 0x308 
    /*00013ffc*/ UXTB        R2, FP 
    /*00014000*/ MUL         R1, R1, R7 
    /*00014004*/ ADD         FP, R4, #336                @ 0x150 
    /*00014008*/ MOV         IP, #0 
    /*0001400c*/ STR         R3, [SP, #28] 
    /*00014010*/ STR         IP, [SP, #56]               @ 0x38 
    /*00014014*/ ADD         R0, R1, #2640               @ 0xa50 
    /*00014018*/ ADD         R1, SL, R1 
    /*0001401c*/ ADD         R0, R0, #8 
    /*00014020*/ STR         R5, [SP, #44]               @ 0x2c 
    /*00014024*/ ADD         SL, SL, R0 
    /*00014028*/ STR         R2, [R1, #2984]             @ 0xba8 
    /*0001402c*/ STR         IP, [R1, #2988]             @ 0xbac 
    /*00014030*/ MOV         R2, #336                    @ 0x150 
    /*00014034*/ MOV         R1, FP 
    /*00014038*/ MOV         R0, SL 
    /*0001403c*/ MOV         IP, #1 
    /*00014040*/ STR         R7, [SP, #48]               @ 0x30 
    /*00014044*/ STR         IP, [SP, #40]               @ 0x28 
    /*00014048*/ STR         SL, [SP, #52]               @ 0x34 
    /*0001404c*/ BL          0x000000000001404C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00014050*/ MOV         R1, R7 
    /*00014054*/ MOV         R0, R5 
    /*00014058*/ ADD         R2, SP, #40                 @ 0x28 
    /*0001405c*/ BL          0x000000000001405C          @ VpssFakeSend [R_ARM_CALL: .text+0x13940] 
    /*00014060*/ LDR         R3, [SP, #28] 
    /*00014064*/ ADD         R1, SP, #36                 @ 0x24 
    /*00014068*/ MOV         R0, R3 
    /*0001406c*/ BL          0x000000000001406C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014070*/ B           VpssExtChnCallback_x13ec8
    /*00014074*/ MULEQ       R0, R4, IP 
FUNC_END VpssExtChnCallback


FUNC_BEGIN VpssUserPoll
    /*00014078*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001407c*/ MOV         R4, #92                     @ 0x5c 
    /*00014080*/ MUL         R4, R4, R0 
    /*00014084*/ SUB         SP, SP, #8 
    /*00014088*/ MOVW        R6, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001408c*/ MOV         R7, R1 
    /*00014090*/ MOVT        R6, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00014094*/ ADD         R5, SP, #8 
    /*00014098*/ ADD         R1, R4, #20 
    /*0001409c*/ ADD         R4, R4, #48                 @ 0x30 
    /*000140a0*/ ADD         R4, R4, R6 
    /*000140a4*/ MOV         R8, R0 
    /*000140a8*/ ADD         R1, R6, R1 
    /*000140ac*/ MOV         R0, R2 
    /*000140b0*/ MOV         R3, #0 
    /*000140b4*/ STR         R3, [R5, #-4]! 
    /*000140b8*/ BL          0x00000000000140B8          @ osal_poll_wait [R_ARM_CALL: +0x0] 
    /*000140bc*/ MOV         R0, R4 
    /*000140c0*/ MOV         R1, R5 
    /*000140c4*/ BL          0x00000000000140C4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000140c8*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000140cc*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000140d0*/ LDR         R0, [R3, R8, LSL #2] 
    /*000140d4*/ CMP         R0, #0 
    /*000140d8*/ BEQ         VpssUserPoll_x14110
    /*000140dc*/ ADD         R0, R0, R7, LSL #5 
    /*000140e0*/ ADD         R0, R0, #1696               @ 0x6a0 
    /*000140e4*/ ADD         R0, R0, #8 
    /*000140e8*/ BL          0x00000000000140E8          @ VPSS_PicQueueQueryBusy [R_ARM_CALL: .text+0x10fd8] 
    /*000140ec*/ CMP         R0, #0 
    /*000140f0*/ BEQ         VpssUserPoll_x14110
    /*000140f4*/ MOV         R6, #65                     @ 0x41 
    VpssUserPoll_x140f8:
    /*000140f8*/ MOV         R0, R4 
    /*000140fc*/ MOV         R1, R5 
    /*00014100*/ BL          0x0000000000014100          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014104*/ MOV         R0, R6 
    /*00014108*/ ADD         SP, SP, #8 
    /*0001410c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssUserPoll_x14110:
    /*00014110*/ MOV         R6, #0 
    /*00014114*/ B           VpssUserPoll_x140f8
FUNC_END VpssUserPoll


FUNC_BEGIN VPSS_COMM_VpssIsOn
    /*00014118*/ MOVW        R3, #0                      @ vpss_en [R_ARM_MOVW_ABS_NC: .data+0xec] 
    /*0001411c*/ MOVT        R3, #0                      @ vpss_en [R_ARM_MOVT_ABS: .data+0xec] 
    /*00014120*/ LDR         R0, [R3, R0, LSL #2] 
    /*00014124*/ ADDS        R0, R0, #0 
    /*00014128*/ MOVNE       R0, #1 
    /*0001412c*/ BX          LR 
FUNC_END VPSS_COMM_VpssIsOn


FUNC_BEGIN VPSS_IP_WORK_MODE
    /*00014130*/ CMP         R0, #0 
    /*00014134*/ BNE         VPSS_IP_WORK_MODE_x14164
    /*00014138*/ MOVW        R3, #0                      @ g_aenVPSSGrpMode [R_ARM_MOVW_ABS_NC: .bss+0x604] 
    /*0001413c*/ MOVT        R3, #0                      @ g_aenVPSSGrpMode [R_ARM_MOVT_ABS: .bss+0x604] 
    /*00014140*/ LDR         R0, [R3] 
    /*00014144*/ CMP         R0, #1 
    /*00014148*/ BEQ         VPSS_IP_WORK_MODE_x14194
    /*0001414c*/ CMP         R0, #2 
    /*00014150*/ BXEQ        LR 
    VPSS_IP_WORK_MODE_x14154:
    /*00014154*/ CMP         R0, #3 
    /*00014158*/ MOVNE       R0, #0 
    /*0001415c*/ MOVEQ       R0, #3 
    /*00014160*/ BX          LR 
    VPSS_IP_WORK_MODE_x14164:
    /*00014164*/ CMP         R0, #1 
    /*00014168*/ BEQ         VPSS_IP_WORK_MODE_x14174
    /*0001416c*/ MOV         R0, #0 
    /*00014170*/ BX          LR 
    VPSS_IP_WORK_MODE_x14174:
    /*00014174*/ MOVW        R3, #0                      @ g_aenVPSSGrpMode [R_ARM_MOVW_ABS_NC: .bss+0x604] 
    /*00014178*/ MOVT        R3, #0                      @ g_aenVPSSGrpMode [R_ARM_MOVT_ABS: .bss+0x604] 
    /*0001417c*/ LDR         R0, [R3, #16] 
    /*00014180*/ CMP         R0, #1 
    /*00014184*/ BXEQ        LR 
    /*00014188*/ CMP         R0, #2 
    /*0001418c*/ BNE         VPSS_IP_WORK_MODE_x14154
    /*00014190*/ BX          LR 
    VPSS_IP_WORK_MODE_x14194:
    /*00014194*/ BX          LR 
FUNC_END VPSS_IP_WORK_MODE


FUNC_BEGIN VPSS_COMM_GetNodeWeight
    /*00014198*/ LDR         R1, [R0, #100]              @ 0x64 
    /*0001419c*/ MOVW        R3, #46339                  @ 0xb503 
    /*000141a0*/ LDR         R2, [R0, #96]               @ 0x60 
    /*000141a4*/ MOVT        R3, #42366                  @ 0xa57e 
    /*000141a8*/ MUL         R2, R2, R1 
    /*000141ac*/ UMULL       R2, R3, R2, R3 
    /*000141b0*/ LSR         R0, R3, #16 
    /*000141b4*/ BX          LR 
FUNC_END VPSS_COMM_GetNodeWeight


FUNC_BEGIN VpssOnlineCheckState
    /*000141b8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000141bc*/ MOV         R4, #92                     @ 0x5c 
    /*000141c0*/ MUL         R5, R4, R1 
    /*000141c4*/ MOVW        R4, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000141c8*/ MOVT        R4, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000141cc*/ SUB         SP, SP, #8 
    /*000141d0*/ MOV         R8, R1 
    /*000141d4*/ MOV         R7, R0 
    /*000141d8*/ ADD         R6, R5, #48                 @ 0x30 
    /*000141dc*/ ADD         R1, SP, #4 
    /*000141e0*/ ADD         R6, R6, R4 
    /*000141e4*/ MOV         R0, R6 
    /*000141e8*/ BL          0x00000000000141E8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000141ec*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000141f0*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000141f4*/ LDR         R3, [R3, R8, LSL #2] 
    /*000141f8*/ CMP         R3, #0 
    /*000141fc*/ BEQ         VpssOnlineCheckState_x14234
    /*00014200*/ LDR         R3, [R4, R5] 
    /*00014204*/ ADD         R4, R4, R5 
    /*00014208*/ CMP         R3, #0 
    /*0001420c*/ BNE         VpssOnlineCheckState_x14234
    /*00014210*/ LDR         R4, [R4, #4] 
    /*00014214*/ CMP         R4, #0 
    /*00014218*/ BNE         VpssOnlineCheckState_x14234
    /*0001421c*/ MOV         R0, R6 
    /*00014220*/ ADD         R1, SP, #4 
    /*00014224*/ BL          0x0000000000014224          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014228*/ MOV         R0, R4 
    /*0001422c*/ ADD         SP, SP, #8 
    /*00014230*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssOnlineCheckState_x14234:
    /*00014234*/ MOV         R0, R7 
    /*00014238*/ BL          0x0000000000014238          @ VPSS_HAL_ClrInt [R_ARM_CALL: .text+0x26580] 
    /*0001423c*/ MOV         R0, R6 
    /*00014240*/ ADD         R1, SP, #4 
    /*00014244*/ BL          0x0000000000014244          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014248*/ MVN         R0, #0 
    /*0001424c*/ ADD         SP, SP, #8 
    /*00014250*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VpssOnlineCheckState


FUNC_BEGIN VpssOnlineSetGlobleParam
    /*00014254*/ MOVW        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014258*/ MOVT        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001425c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00014260*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00014264*/ LDR         R2, [R2, R0, LSL #2] 
    /*00014268*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001426c*/ LDR         R3, [R3, R0, LSL #2] 
    /*00014270*/ LDR         R2, [R2, #2072]             @ 0x818 
    /*00014274*/ CMP         R2, #1 
    /*00014278*/ BEQ         VpssOnlineSetGlobleParam_x142ec
    VpssOnlineSetGlobleParam_x1427c:
    /*0001427c*/ TST         R1, #1024                   @ 0x400 
    /*00014280*/ BEQ         VpssOnlineSetGlobleParam_x142b0
    /*00014284*/ ADD         R2, R3, #12288              @ 0x3000 
    /*00014288*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*0001428c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*00014290*/ LDR         R0, [R2, #3504]             @ 0xdb0 
    /*00014294*/ LDR         R2, [R3] 
    /*00014298*/ CMP         R0, #1 
    /*0001429c*/ ADD         R2, R2, #1 
    /*000142a0*/ STR         R2, [R3] 
    /*000142a4*/ LDREQ       R2, [R3, #4] 
    /*000142a8*/ ADDEQ       R2, R2, #1 
    /*000142ac*/ STREQ       R2, [R3, #4] 
    VpssOnlineSetGlobleParam_x142b0:
    /*000142b0*/ TST         R1, #1 
    /*000142b4*/ MOVWNE      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*000142b8*/ MOVTNE      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*000142bc*/ LDRNE       R2, [R3] 
    /*000142c0*/ SUBNE       R2, R2, #1 
    /*000142c4*/ STRNE       R2, [R3] 
    /*000142c8*/ TST         R1, #28672                  @ 0x7000 
    /*000142cc*/ POPEQ       {PC}                        @ (ldreq pc, [sp], #4) 
    /*000142d0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*000142d4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*000142d8*/ LDR         R2, [R3, #4] 
    /*000142dc*/ CMP         R2, #0 
    /*000142e0*/ SUBGT       R2, R2, #1 
    /*000142e4*/ STRGT       R2, [R3, #4] 
    /*000142e8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VpssOnlineSetGlobleParam_x142ec:
    /*000142ec*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*000142f0*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xe4] 
    /*000142f4*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*000142f8*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xe4] 
    /*000142fc*/ MOV         IP, #0 
    /*00014300*/ MVN         LR, #0 
    /*00014304*/ STR         IP, [R2] 
    /*00014308*/ STR         IP, [R2, #4] 
    /*0001430c*/ STR         LR, [R0] 
    /*00014310*/ B           VpssOnlineSetGlobleParam_x1427c
FUNC_END VpssOnlineSetGlobleParam


FUNC_BEGIN VpssOnLineCcIntErr
    /*00014314*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014318*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001431c*/ PUSH        {R4, R5, LR} 
    /*00014320*/ MOVW        R2, #2712                   @ 0xa98 
    /*00014324*/ LDR         R4, [R3, R0, LSL #2] 
    /*00014328*/ TST         R1, R2 
    /*0001432c*/ SUB         SP, SP, #12 
    /*00014330*/ ADD         R4, R4, #28672              @ 0x7000 
    /*00014334*/ LDR         R3, [R4, #3284]             @ 0xcd4 
    /*00014338*/ ADD         R3, R3, #1 
    /*0001433c*/ STR         R3, [R4, #3284]             @ 0xcd4 
    /*00014340*/ BNE         VpssOnLineCcIntErr_x14364
    VpssOnLineCcIntErr_x14344:
    /*00014344*/ LDR         R3, [R4, #3280]             @ 0xcd0 
    /*00014348*/ MOV         R0, #0 
    /*0001434c*/ CMP         R3, #1 
    /*00014350*/ LDREQ       R3, [R4, #3336]             @ 0xd08 
    /*00014354*/ ADDEQ       R3, R3, #1 
    /*00014358*/ STREQ       R3, [R4, #3336]             @ 0xd08 
    /*0001435c*/ ADD         SP, SP, #12 
    /*00014360*/ POP         {R4, R5, PC} 
    VpssOnLineCcIntErr_x14364:
    /*00014364*/ MOV         R5, R1 
    /*00014368*/ MOV         R3, #1 
    /*0001436c*/ MOV         R2, #228                    @ 0xe4 
    /*00014370*/ STR         R3, [R4, #3280]             @ 0xcd0 
    /*00014374*/ MOV         R0, #3 
    /*00014378*/ STR         R1, [SP, #4] 
    /*0001437c*/ STR         R2, [SP] 
    /*00014380*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .rodata+0xca8] 
    /*00014384*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ffc] 
    /*00014388*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .rodata+0xca8] 
    /*0001438c*/ MOV         R1, #7 
    /*00014390*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ffc] 
    /*00014394*/ BL          0x0000000000014394          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014398*/ TST         R5, #16 
    /*0001439c*/ BNE         VpssOnLineCcIntErr_x143b4
    VpssOnLineCcIntErr_x143a0:
    /*000143a0*/ TST         R5, #8 
    /*000143a4*/ BEQ         VpssOnLineCcIntErr_x14344
    /*000143a8*/ MOV         R0, #8 
    /*000143ac*/ BL          0x00000000000143AC          @ VPSS_DRV_BusErrCount [R_ARM_CALL: .text+0x20a14] 
    /*000143b0*/ B           VpssOnLineCcIntErr_x14344
    VpssOnLineCcIntErr_x143b4:
    /*000143b4*/ MOV         R0, #16 
    /*000143b8*/ BL          0x00000000000143B8          @ VPSS_DRV_BusErrCount [R_ARM_CALL: .text+0x20a14] 
    /*000143bc*/ B           VpssOnLineCcIntErr_x143a0
FUNC_END VpssOnLineCcIntErr


FUNC_BEGIN VpssOnLineEofIntErr
    /*000143c0*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*000143c4*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*000143c8*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000143cc*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000143d0*/ LDR         R2, [IP] 
    /*000143d4*/ LDR         R3, [R3, R0, LSL #2] 
    /*000143d8*/ CMP         R2, #2 
    /*000143dc*/ BEQ         VpssOnLineEofIntErr_x143f4
    /*000143e0*/ ADD         R3, R3, #28672              @ 0x7000 
    /*000143e4*/ MOV         R2, #0 
    /*000143e8*/ MOV         R0, #0 
    /*000143ec*/ STR         R2, [R3, #3280]             @ 0xcd0 
    /*000143f0*/ BX          LR 
    VpssOnLineEofIntErr_x143f4:
    /*000143f4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000143f8*/ ADD         R3, R3, #28672              @ 0x7000 
    /*000143fc*/ SUB         SP, SP, #12 
    /*00014400*/ MOV         LR, #1 
    /*00014404*/ MOV         R1, #260                    @ 0x104 
    /*00014408*/ STR         LR, [R3, #3280]             @ 0xcd0 
    /*0001440c*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5040] 
    /*00014410*/ STR         R1, [SP] 
    /*00014414*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5040] 
    /*00014418*/ MOV         R1, #7 
    /*0001441c*/ LDR         R3, [PC, #20]               @ 0x0000000000014438 
    /*00014420*/ MOV         R0, #3 
    /*00014424*/ STR         LR, [IP] 
    /*00014428*/ BL          0x0000000000014428          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001442c*/ MOV         R0, #0 
    /*00014430*/ ADD         SP, SP, #12 
    /*00014434*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00014438*/ @           <UNDEFINED> instruction: 0x00000cbc 
FUNC_END VpssOnLineEofIntErr


FUNC_BEGIN VpssLowDelayErrProcess
    /*0001443c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00014440*/ MOVW        R4, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00014444*/ MOVT        R4, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00014448*/ MOV         R5, R0 
    /*0001444c*/ SUB         SP, SP, #12 
    /*00014450*/ MOV         R6, R1 
    /*00014454*/ MOV         R7, R2 
    /*00014458*/ LDR         R8, [R4, R0, LSL #2] 
    /*0001445c*/ BL          0x000000000001445C          @ VPSS_DRV_GetOnlineVpssId [R_ARM_CALL: .text+0x262cc] 
    /*00014460*/ LDR         R3, [R4, R5, LSL #2] 
    /*00014464*/ ADD         R3, R3, #16384              @ 0x4000 
    /*00014468*/ LDR         R3, [R3, #692]              @ 0x2b4 
    /*0001446c*/ CMP         R3, #1 
    /*00014470*/ BEQ         VpssLowDelayErrProcess_x14484
    /*00014474*/ CMP         R6, #2 
    /*00014478*/ BHI         VpssLowDelayErrProcess_x14484
    /*0001447c*/ TST         R7, #512                    @ 0x200 
    /*00014480*/ BNE         VpssLowDelayErrProcess_x14490
    VpssLowDelayErrProcess_x14484:
    /*00014484*/ MOV         R0, #0 
    /*00014488*/ ADD         SP, SP, #12 
    /*0001448c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssLowDelayErrProcess_x14490:
    /*00014490*/ ADD         R2, R6, #5312               @ 0x14c0 
    /*00014494*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014498*/ ADD         R2, R2, #58                 @ 0x3a 
    /*0001449c*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000144a0*/ MOV         R9, R0 
    /*000144a4*/ ADD         R1, SP, #4 
    /*000144a8*/ LDR         R2, [R8, R2, LSL #2] 
    /*000144ac*/ MOV         R0, R5 
    /*000144b0*/ LDR         R4, [R3, R5, LSL #2] 
    /*000144b4*/ BL          0x00000000000144B4          @ VpssOnlineAlternateChnBufId [R_ARM_CALL: .text+0x2a14] 
    /*000144b8*/ MOVW        R2, #8536                   @ 0x2158 
    /*000144bc*/ MOV         R3, #776                    @ 0x308 
    /*000144c0*/ MUL         R9, R2, R9 
    /*000144c4*/ MLA         R9, R3, R6, R9 
    /*000144c8*/ ADD         R9, R4, R9 
    /*000144cc*/ LDR         R2, [R9, #2960]             @ 0xb90 
    /*000144d0*/ CMP         R2, #0 
    /*000144d4*/ BEQ         VpssLowDelayErrProcess_x14484
    /*000144d8*/ LDR         R3, [SP, #4] 
    /*000144dc*/ ADD         R6, R3, R6, LSL #1 
    /*000144e0*/ ADD         R6, R6, #5312               @ 0x14c0 
    /*000144e4*/ ADD         R6, R6, #52                 @ 0x34 
    /*000144e8*/ LDR         R3, [R8, R6, LSL #2] 
    /*000144ec*/ CMP         R3, #1 
    /*000144f0*/ BNE         VpssLowDelayErrProcess_x14484
    /*000144f4*/ MOV         R3, #0 
    /*000144f8*/ STRB        R3, [R2, #64]               @ 0x40 
    /*000144fc*/ LDR         R3, [R9, #2652]             @ 0xa5c 
    /*00014500*/ STRH        R3, [R2] 
    /*00014504*/ LDR         R3, [R9, #2660]             @ 0xa64 
    /*00014508*/ LDR         R1, [R9, #2652]             @ 0xa5c 
    /*0001450c*/ CMP         R3, #25 
    /*00014510*/ CMPNE       R3, #28 
    /*00014514*/ MOVNE       R3, #1 
    /*00014518*/ MOVEQ       R3, #0 
    /*0001451c*/ LSR         R3, R1, R3 
    /*00014520*/ STRH        R3, [R2, #32] 
    /*00014524*/ B           VpssLowDelayErrProcess_x14484
FUNC_END VpssLowDelayErrProcess


FUNC_BEGIN VpssCfgLostErrProcess
    /*00014528*/ MOVW        R2, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001452c*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014530*/ MOVT        R2, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00014534*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00014538*/ CMP         R1, #1 
    /*0001453c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00014540*/ MOV         R5, R0 
    /*00014544*/ SUB         SP, SP, #28 
    /*00014548*/ LDR         R4, [R2, R0, LSL #2] 
    /*0001454c*/ LDR         R3, [R3, R0, LSL #2] 
    /*00014550*/ BEQ         VpssCfgLostErrProcess_x14610
    /*00014554*/ ADD         R4, R4, #106496             @ 0x1a000 
    /*00014558*/ LDR         R2, [R4, #632]              @ 0x278 
    /*0001455c*/ CMP         R2, #1 
    /*00014560*/ BEQ         VpssCfgLostErrProcess_x1456c
    VpssCfgLostErrProcess_x14564:
    /*00014564*/ ADD         SP, SP, #28 
    /*00014568*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssCfgLostErrProcess_x1456c:
    /*0001456c*/ ADD         R6, R4, #640                @ 0x280 
    /*00014570*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00014574*/ MOV         R1, #0 
    /*00014578*/ STR         R1, [R4, #632]              @ 0x278 
    /*0001457c*/ STR         R2, [R3, #3280]             @ 0xcd0 
    /*00014580*/ MOVW        R8, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x50a0] 
    /*00014584*/ LDR         R0, [R6, #16] 
    /*00014588*/ MOVT        R8, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x50a0] 
    /*0001458c*/ LDR         R7, [PC, #376]              @ 0x000000000001470c 
    /*00014590*/ MOV         R4, R1 
    /*00014594*/ CMP         R0, #1 
    /*00014598*/ BEQ         VpssCfgLostErrProcess_x145b8
    VpssCfgLostErrProcess_x1459c:
    /*0001459c*/ ADD         R4, R4, #1 
    /*000145a0*/ ADD         R6, R6, #24 
    /*000145a4*/ CMP         R4, #3 
    /*000145a8*/ BEQ         VpssCfgLostErrProcess_x14564
    /*000145ac*/ LDR         R0, [R6, #16] 
    /*000145b0*/ CMP         R0, #1 
    /*000145b4*/ BNE         VpssCfgLostErrProcess_x1459c
    VpssCfgLostErrProcess_x145b8:
    /*000145b8*/ BL          0x00000000000145B8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000145bc*/ LDR         IP, [R6] 
    /*000145c0*/ LDRD        R2, [R6, #8] 
    /*000145c4*/ MOV         R1, #10 
    /*000145c8*/ STR         R1, [SP] 
    /*000145cc*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000145d0*/ MOV         R0, IP 
    /*000145d4*/ BLX         R1 
    /*000145d8*/ MOV         R3, #0 
    /*000145dc*/ STR         R3, [R6, #16] 
    /*000145e0*/ CMP         R0, R3 
    /*000145e4*/ BEQ         VpssCfgLostErrProcess_x1459c
    /*000145e8*/ MOVW        R2, #437                    @ 0x1b5 
    /*000145ec*/ STR         R4, [SP, #8] 
    /*000145f0*/ STR         R2, [SP] 
    /*000145f4*/ MOV         R3, R7 
    /*000145f8*/ STR         R5, [SP, #4] 
    /*000145fc*/ MOV         R2, R8 
    /*00014600*/ MOV         R1, #7 
    /*00014604*/ MOV         R0, #3 
    /*00014608*/ BL          0x0000000000014608          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001460c*/ B           VpssCfgLostErrProcess_x1459c
    VpssCfgLostErrProcess_x14610:
    /*00014610*/ ADD         R9, R4, #106496             @ 0x1a000 
    /*00014614*/ LDR         R6, [R9, #632]              @ 0x278 
    /*00014618*/ CMP         R6, #0 
    /*0001461c*/ BNE         VpssCfgLostErrProcess_x146a4
    /*00014620*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00014624*/ MOVW        FP, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5068] 
    /*00014628*/ ADD         R7, R9, #640                @ 0x280 
    /*0001462c*/ MOVT        FP, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5068] 
    /*00014630*/ ADD         R8, R4, #19200              @ 0x4b00 
    /*00014634*/ MOVW        SL, #21480                  @ 0x53e8 
    /*00014638*/ STR         R1, [R3, #3280]             @ 0xcd0 
    VpssCfgLostErrProcess_x1463c:
    /*0001463c*/ ADD         R3, SL, R6, LSL #2 
    /*00014640*/ MOV         R0, R5 
    /*00014644*/ ADD         R1, SP, #20 
    /*00014648*/ LDR         R2, [R4, R3] 
    /*0001464c*/ BL          0x000000000001464C          @ VpssOnlineAlternateChnBufId [R_ARM_CALL: .text+0x2a14] 
    /*00014650*/ LDR         R3, [SP, #20] 
    /*00014654*/ ADD         R3, R3, R6, LSL #1 
    /*00014658*/ ADD         R3, R3, #5312               @ 0x14c0 
    /*0001465c*/ ADD         R3, R3, #52                 @ 0x34 
    /*00014660*/ LDR         R0, [R4, R3, LSL #2] 
    /*00014664*/ CMP         R0, #1 
    /*00014668*/ STR         R0, [R7, #16] 
    /*0001466c*/ LDR         R3, [R8, #292]              @ 0x124 
    /*00014670*/ STR         R3, [R7] 
    /*00014674*/ LDRD        R2, [R8] 
    /*00014678*/ ADD         R8, R8, #752                @ 0x2f0 
    /*0001467c*/ STRD        R2, [R7, #8] 
    /*00014680*/ BEQ         VpssCfgLostErrProcess_x146bc
    VpssCfgLostErrProcess_x14684:
    /*00014684*/ ADD         R6, R6, #1 
    /*00014688*/ ADD         R7, R7, #24 
    /*0001468c*/ CMP         R6, #3 
    /*00014690*/ BNE         VpssCfgLostErrProcess_x1463c
    /*00014694*/ MOV         R3, #1 
    /*00014698*/ STR         R3, [R9, #632]              @ 0x278 
    /*0001469c*/ ADD         SP, SP, #28 
    /*000146a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssCfgLostErrProcess_x146a4:
    /*000146a4*/ CMP         R6, #1 
    /*000146a8*/ ADDEQ       R3, R3, #28672              @ 0x7000 
    /*000146ac*/ STREQ       R6, [R3, #3280]             @ 0xcd0 
    /*000146b0*/ STREQ       R6, [R9, #632]              @ 0x278 
    /*000146b4*/ ADD         SP, SP, #28 
    /*000146b8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssCfgLostErrProcess_x146bc:
    /*000146bc*/ BL          0x00000000000146BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000146c0*/ LDR         IP, [R7] 
    /*000146c4*/ LDRD        R2, [R7, #8] 
    /*000146c8*/ MOV         R1, #10 
    /*000146cc*/ STR         R1, [SP] 
    /*000146d0*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*000146d4*/ MOV         R0, IP 
    /*000146d8*/ BLX         R1 
    /*000146dc*/ CMP         R0, #0 
    /*000146e0*/ BEQ         VpssCfgLostErrProcess_x14684
    /*000146e4*/ MOVW        R2, #399                    @ 0x18f 
    /*000146e8*/ STR         R6, [SP, #8] 
    /*000146ec*/ STR         R2, [SP] 
    /*000146f0*/ MOV         R1, #7 
    /*000146f4*/ STR         R5, [SP, #4] 
    /*000146f8*/ MOV         R2, FP 
    /*000146fc*/ LDR         R3, [PC, #8]                @ 0x000000000001470c 
    /*00014700*/ MOV         R0, #3 
    /*00014704*/ BL          0x0000000000014704          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014708*/ B           VpssCfgLostErrProcess_x14684
    /*0001470c*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VpssCfgLostErrProcess


FUNC_BEGIN VpssOnlineSendLastFrame
    /*00014710*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00014714*/ MOV         R7, R0 
    /*00014718*/ MOV         R6, R1 
    /*0001471c*/ MOV         R5, R2 
    /*00014720*/ MOV         R4, #0 
    VpssOnlineSendLastFrame_x14724:
    /*00014724*/ CMP         R6, R4 
    /*00014728*/ MOV         R1, R4 
    /*0001472c*/ MOV         R2, R5 
    /*00014730*/ MOV         R0, R7 
    /*00014734*/ MOVEQ       R3, #2 
    /*00014738*/ MOVNE       R3, #0 
    /*0001473c*/ ADD         R4, R4, #1 
    /*00014740*/ BL          0x0000000000014740          @ VpssOnLineSendFrame [R_ARM_CALL: .text+0xd5cc] 
    /*00014744*/ CMP         R4, #3 
    /*00014748*/ BNE         VpssOnlineSendLastFrame_x14724
    /*0001474c*/ MOV         R0, #0 
    /*00014750*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VpssOnlineSendLastFrame


FUNC_BEGIN VPSS_COMM_UpdateLowdelay
    /*00014754*/ MOVW        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014758*/ MOVT        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001475c*/ PUSH        {R4, R5, R6, LR} 
    /*00014760*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00014764*/ LDR         R4, [R2, R0, LSL #2] 
    /*00014768*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001476c*/ MOV         R5, R0 
    /*00014770*/ LDR         R6, [R3, R0, LSL #2] 
    /*00014774*/ LDR         R3, [R4, #2076]             @ 0x81c 
    /*00014778*/ CMP         R3, #2 
    /*0001477c*/ BEQ         VPSS_COMM_UpdateLowdelay_x147bc
    VPSS_COMM_UpdateLowdelay_x14780:
    /*00014780*/ LDR         R3, [R4, #2084]             @ 0x824 
    /*00014784*/ CMP         R3, #0 
    /*00014788*/ POPEQ       {R4, R5, R6, PC} 
    /*0001478c*/ ADD         R0, R6, #15744              @ 0x3d80 
    /*00014790*/ ADD         R1, R4, #2080               @ 0x820 
    /*00014794*/ ADD         R1, R1, #4 
    /*00014798*/ ADD         R0, R0, #24 
    /*0001479c*/ BL          0x000000000001479C          @ VPSS_DRV_UpdateLowDelayAttr [R_ARM_CALL: .text+0x214a0] 
    /*000147a0*/ MOV         R0, R5 
    /*000147a4*/ BL          0x00000000000147A4          @ VpssDrvSetLowDelayAttr [R_ARM_CALL: .text+0x214b4] 
    /*000147a8*/ MOV         R2, #2 
    /*000147ac*/ MOV         R3, #0 
    /*000147b0*/ STR         R2, [R4, #2076]             @ 0x81c 
    /*000147b4*/ STR         R3, [R4, #2084]             @ 0x824 
    /*000147b8*/ POP         {R4, R5, R6, PC} 
    VPSS_COMM_UpdateLowdelay_x147bc:
    /*000147bc*/ ADD         R1, R6, #15744              @ 0x3d80 
    /*000147c0*/ MOV         R0, R1 
    /*000147c4*/ ADD         R1, R1, #24 
    /*000147c8*/ ADD         R0, R0, #40                 @ 0x28 
    /*000147cc*/ BL          0x00000000000147CC          @ VPSS_DRV_UpdateLowDelayAttr [R_ARM_CALL: .text+0x214a0] 
    /*000147d0*/ MOV         R3, #0 
    /*000147d4*/ STR         R3, [R4, #2076]             @ 0x81c 
    /*000147d8*/ B           VPSS_COMM_UpdateLowdelay_x14780
FUNC_END VPSS_COMM_UpdateLowdelay


FUNC_BEGIN VpssOnlineUpdateGrpAttr
    /*000147dc*/ PUSH        {R4, LR} 
    /*000147e0*/ BL          0x00000000000147E0          @ VpssDrvOnlineUpdateGrpAttr [R_ARM_CALL: .text+0x2470c] 
    /*000147e4*/ MOV         R0, #0 
    /*000147e8*/ POP         {R4, PC} 
FUNC_END VpssOnlineUpdateGrpAttr


FUNC_BEGIN VpssOnlinePrepareUpdateOneBuf
    /*000147ec*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000147f0*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000147f4*/ PUSH        {R4, R5, R6, LR} 
    /*000147f8*/ SUB         SP, SP, #8 
    /*000147fc*/ LDR         R5, [R3, R0, LSL #2] 
    /*00014800*/ ADD         R4, R5, #12288              @ 0x3000 
    /*00014804*/ LDR         R1, [R4, #3484]             @ 0xd9c 
    /*00014808*/ BL          0x0000000000014808          @ VPSS_DRV_IsChnOneBuffer [R_ARM_CALL: .text+0x2482c] 
    /*0001480c*/ CMP         R0, #0 
    /*00014810*/ BEQ         VpssOnlinePrepareUpdateOneBuf_x148b4
    /*00014814*/ ADD         R6, R5, #16384              @ 0x4000 
    /*00014818*/ LDR         R3, [R6, #144]              @ 0x90 
    /*0001481c*/ CMN         R3, #1 
    /*00014820*/ BEQ         VpssOnlinePrepareUpdateOneBuf_x14854
    /*00014824*/ MOV         R0, #1 
    /*00014828*/ BL          0x0000000000014828          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001482c*/ LDR         IP, [R6, #144]              @ 0x90 
    /*00014830*/ ADD         R3, R5, #16320              @ 0x3fc0 
    /*00014834*/ MOV         R1, #10 
    /*00014838*/ LDRD        R2, [R3] 
    /*0001483c*/ STR         R1, [SP] 
    /*00014840*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00014844*/ MOV         R0, IP 
    /*00014848*/ BLX         R1 
    /*0001484c*/ MVN         R3, #0 
    /*00014850*/ STR         R3, [R6, #144]              @ 0x90 
    VpssOnlinePrepareUpdateOneBuf_x14854:
    /*00014854*/ LDR         R3, [R4, #3904]             @ 0xf40 
    /*00014858*/ CMN         R3, #1 
    /*0001485c*/ BEQ         VpssOnlinePrepareUpdateOneBuf_x148b4
    /*00014860*/ LDR         R3, [R4, #3484]             @ 0xd9c 
    /*00014864*/ LDR         R2, [R4, #3500]             @ 0xdac 
    /*00014868*/ CMP         R3, R2 
    /*0001486c*/ BNE         VpssOnlinePrepareUpdateOneBuf_x14880
    /*00014870*/ LDR         R1, [R4, #3488]             @ 0xda0 
    /*00014874*/ LDR         R2, [R4, #3504]             @ 0xdb0 
    /*00014878*/ CMP         R1, R2 
    /*0001487c*/ BEQ         VpssOnlinePrepareUpdateOneBuf_x148c0
    VpssOnlinePrepareUpdateOneBuf_x14880:
    /*00014880*/ ADD         R1, R5, #15808              @ 0x3dc0 
    /*00014884*/ ADD         R0, R5, #16192              @ 0x3f40 
    /*00014888*/ ADD         R1, R1, #56                 @ 0x38 
    /*0001488c*/ MOV         R2, #336                    @ 0x150 
    /*00014890*/ ADD         R0, R0, #8 
    /*00014894*/ BL          0x0000000000014894          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00014898*/ LDR         R3, [R4, #3484]             @ 0xd9c 
    /*0001489c*/ MVN         R1, #0 
    /*000148a0*/ MOV         R2, #0 
    /*000148a4*/ ADD         R3, R3, #4096               @ 0x1000 
    /*000148a8*/ STR         R1, [R4, #3904]             @ 0xf40 
    /*000148ac*/ ADD         R3, R3, #38                 @ 0x26 
    /*000148b0*/ STR         R2, [R5, R3, LSL #2] 
    VpssOnlinePrepareUpdateOneBuf_x148b4:
    /*000148b4*/ MOV         R0, #0 
    /*000148b8*/ ADD         SP, SP, #8 
    /*000148bc*/ POP         {R4, R5, R6, PC} 
    VpssOnlinePrepareUpdateOneBuf_x148c0:
    /*000148c0*/ ADD         R3, R3, #4096               @ 0x1000 
    /*000148c4*/ ADD         R3, R3, #38                 @ 0x26 
    /*000148c8*/ LDR         R3, [R5, R3, LSL #2] 
    /*000148cc*/ CMP         R3, #1 
    /*000148d0*/ BNE         VpssOnlinePrepareUpdateOneBuf_x148b4
    /*000148d4*/ B           VpssOnlinePrepareUpdateOneBuf_x14880
FUNC_END VpssOnlinePrepareUpdateOneBuf


FUNC_BEGIN VpssOnlinePrepareNextFrame
    /*000148d8*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000148dc*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000148e0*/ PUSH        {R4, R5, R6, LR} 
    /*000148e4*/ MOV         R5, R0 
    /*000148e8*/ LDR         R6, [R3, R0, LSL #2] 
    /*000148ec*/ BL          0x00000000000148EC          @ VpssOnlinePrepareUpdateOneBuf [R_ARM_CALL: .text+0x147ec] 
    /*000148f0*/ MOV         R0, #2 
    /*000148f4*/ MOV         R4, #0 
    /*000148f8*/ ADD         R2, R6, #28672              @ 0x7000 
    /*000148fc*/ LDR         R3, [R2, #3216]             @ 0xc90 
    /*00014900*/ ADD         R3, R3, R0 
    /*00014904*/ STR         R3, [R2, #3216]             @ 0xc90 
    /*00014908*/ BL          0x0000000000014908          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001490c*/ LDR         R3, [R0] 
    /*00014910*/ BLX         R3 
    /*00014914*/ ADD         R3, R6, #31744              @ 0x7c00 
    /*00014918*/ STRD        R0, [R3, #200]              @ 0xc8 
    VpssOnlinePrepareNextFrame_x1491c:
    /*0001491c*/ MOV         R1, R4 
    /*00014920*/ MOV         R0, R5 
    /*00014924*/ BL          0x0000000000014924          @ VpssDrvOnLineIsWaitStop [R_ARM_CALL: .text+0x247a8] 
    /*00014928*/ MOV         R1, R4 
    /*0001492c*/ CMP         R0, #1 
    /*00014930*/ MOV         R0, R5 
    /*00014934*/ BEQ         VpssOnlinePrepareNextFrame_x14944
    /*00014938*/ BL          0x0000000000014938          @ VpssDrvOnlineGetChnEn [R_ARM_CALL: .text+0x24788] 
    /*0001493c*/ CMP         R0, #0 
    /*00014940*/ BNE         VpssOnlinePrepareNextFrame_x14958
    VpssOnlinePrepareNextFrame_x14944:
    /*00014944*/ ADD         R4, R4, #1 
    /*00014948*/ CMP         R4, #3 
    /*0001494c*/ BNE         VpssOnlinePrepareNextFrame_x1491c
    /*00014950*/ MOV         R0, #0 
    /*00014954*/ POP         {R4, R5, R6, PC} 
    VpssOnlinePrepareNextFrame_x14958:
    /*00014958*/ MOV         R1, R4 
    /*0001495c*/ MOV         R0, R5 
    /*00014960*/ BL          0x0000000000014960          @ VpssDrvOnLinePremFrame [R_ARM_CALL: .text+0x24878] 
    /*00014964*/ MOV         R1, R4 
    /*00014968*/ MOV         R0, R5 
    /*0001496c*/ BL          0x000000000001496C          @ VpssDrvOnLineStartCap [R_ARM_CALL: .text+0x256bc] 
    /*00014970*/ B           VpssOnlinePrepareNextFrame_x14944
FUNC_END VpssOnlinePrepareNextFrame


FUNC_BEGIN VpssOnLineLowDelayState
    /*00014974*/ CMP         R0, #2 
    /*00014978*/ BHI         VpssOnLineLowDelayState_x149a0
    /*0001497c*/ CMP         R0, #1 
    /*00014980*/ ANDEQ       R0, R1, #8192               @ 0x2000 
    /*00014984*/ BEQ         VpssOnLineLowDelayState_x14994
    /*00014988*/ CMP         R0, #2 
    /*0001498c*/ ANDNE       R0, R1, #4096               @ 0x1000 
    /*00014990*/ ANDEQ       R0, R1, #16384              @ 0x4000 
    VpssOnLineLowDelayState_x14994:
    /*00014994*/ ADDS        R0, R0, #0 
    /*00014998*/ MOVNE       R0, #1 
    /*0001499c*/ BX          LR 
    VpssOnLineLowDelayState_x149a0:
    /*000149a0*/ MOV         R0, #0 
    /*000149a4*/ BX          LR 
FUNC_END VpssOnLineLowDelayState


FUNC_BEGIN VpssOnlineIntCntStatistic
    /*000149a8*/ SUB         SP, SP, #8 
    /*000149ac*/ TST         R0, #1024                   @ 0x400 
    /*000149b0*/ PUSH        {R4, LR} 
    /*000149b4*/ SUB         SP, SP, #8 
    /*000149b8*/ ADD         IP, SP, #8 
    /*000149bc*/ STR         R3, [SP, #20] 
    /*000149c0*/ LDR         R3, [PC, #176]              @ 0x0000000000014a78 
    /*000149c4*/ STMDB       IP, {R1, R2} 
    /*000149c8*/ MOVW        IP, #16960                  @ 0x4240 
    /*000149cc*/ LDR         R1, [SP, #4] 
    /*000149d0*/ MOVT        IP, #15 
    /*000149d4*/ LDRNE       R2, [R3, #2400]             @ 0x960 
    /*000149d8*/ LDR         R4, [R3, #2476]             @ 0x9ac 
    /*000149dc*/ ADDNE       R2, R2, #1 
    /*000149e0*/ LDR         LR, [R3, #2480]             @ 0x9b0 
    /*000149e4*/ STRNE       R2, [R3, #2400]             @ 0x960 
    /*000149e8*/ TST         R0, #512                    @ 0x200 
    /*000149ec*/ SUB         R1, R1, LR 
    /*000149f0*/ LDRNE       R2, [R3, #2404]             @ 0x964 
    /*000149f4*/ ADDNE       R2, R2, #1 
    /*000149f8*/ STRNE       R2, [R3, #2404]             @ 0x964 
    /*000149fc*/ TST         R0, #4096                   @ 0x1000 
    /*00014a00*/ LDRNE       R2, [R3, #2412]             @ 0x96c 
    /*00014a04*/ ADDNE       R2, R2, #1 
    /*00014a08*/ STRNE       R2, [R3, #2412]             @ 0x96c 
    /*00014a0c*/ TST         R0, #8192                   @ 0x2000 
    /*00014a10*/ LDRNE       R2, [R3, #2416]             @ 0x970 
    /*00014a14*/ ADDNE       R2, R2, #1 
    /*00014a18*/ STRNE       R2, [R3, #2416]             @ 0x970 
    /*00014a1c*/ TST         R0, #16384                  @ 0x4000 
    /*00014a20*/ LDRNE       R2, [R3, #2420]             @ 0x974 
    /*00014a24*/ ADDNE       R2, R2, #1 
    /*00014a28*/ STRNE       R2, [R3, #2420]             @ 0x974 
    /*00014a2c*/ TST         R0, #1 
    /*00014a30*/ MOVW        R0, #16959                  @ 0x423f 
    /*00014a34*/ MOVT        R0, #15 
    /*00014a38*/ LDRNE       R2, [R3, #2424]             @ 0x978 
    /*00014a3c*/ ADDNE       R2, R2, #1 
    /*00014a40*/ STRNE       R2, [R3, #2424]             @ 0x978 
    /*00014a44*/ LDR         R2, [SP] 
    /*00014a48*/ SUB         R2, R2, R4 
    /*00014a4c*/ MLA         R2, IP, R2, R1 
    /*00014a50*/ CMP         R2, R0 
    /*00014a54*/ LDRHI       R2, [R3, #2424]             @ 0x978 
    /*00014a58*/ LDRHI       R1, [R3, #2428]             @ 0x97c 
    /*00014a5c*/ STRHI       R2, [R3, #2428]             @ 0x97c 
    /*00014a60*/ SUBHI       R2, R2, R1 
    /*00014a64*/ STRHI       R2, [R3, #2432]             @ 0x980 
    /*00014a68*/ ADD         SP, SP, #8 
    /*00014a6c*/ POP         {R4, LR} 
    /*00014a70*/ ADD         SP, SP, #8 
    /*00014a74*/ BX          LR 
    /*00014a78*/ ANDEQ       R2, R0, R0, ASR #13 
FUNC_END VpssOnlineIntCntStatistic


FUNC_BEGIN VpssIntStatistic
    /*00014a7c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00014a80*/ SUB         SP, SP, #20 
    /*00014a84*/ ADD         R4, SP, #8 
    /*00014a88*/ LDR         IP, [PC, #200]              @ 0x0000000000014b58 
    /*00014a8c*/ STM         SP, {R2, R3} 
    /*00014a90*/ MOV         R3, R2 
    /*00014a94*/ STM         R4, {R0, R1} 
    /*00014a98*/ MOV         R1, R0 
    /*00014a9c*/ LDR         R2, [SP, #12] 
    /*00014aa0*/ SUB         R3, R3, R1 
    /*00014aa4*/ LDR         R0, [SP, #4] 
    /*00014aa8*/ MOVW        LR, #16960                  @ 0x4240 
    /*00014aac*/ LDR         R7, [IP, #2476]             @ 0x9ac 
    /*00014ab0*/ MOVT        LR, #15 
    /*00014ab4*/ SUB         R0, R0, R2 
    /*00014ab8*/ LDR         R6, [IP, #2480]             @ 0x9b0 
    /*00014abc*/ SUB         R1, R1, R7 
    /*00014ac0*/ MOVW        R5, #16959                  @ 0x423f 
    /*00014ac4*/ MLA         R3, LR, R3, R0 
    /*00014ac8*/ SUB         R2, R2, R6 
    /*00014acc*/ LDR         R0, [IP, #2464]             @ 0x9a0 
    /*00014ad0*/ MOVT        R5, #15 
    /*00014ad4*/ MLA         R1, LR, R1, R2 
    /*00014ad8*/ CMP         R0, R3 
    /*00014adc*/ LDR         LR, [IP, #2452]             @ 0x994 
    /*00014ae0*/ MOVCC       R0, R3 
    /*00014ae4*/ LDR         R2, [IP, #2436]             @ 0x984 
    /*00014ae8*/ CMP         R1, R5 
    /*00014aec*/ ADD         LR, R3, LR 
    /*00014af0*/ STR         R3, [IP, #2460]             @ 0x99c 
    /*00014af4*/ ADD         R3, R2, #1 
    /*00014af8*/ STR         R0, [IP, #2464]             @ 0x9a0 
    /*00014afc*/ STR         LR, [IP, #2452]             @ 0x994 
    /*00014b00*/ STR         R3, [IP, #2436]             @ 0x984 
    /*00014b04*/ BLS         VpssIntStatistic_x14b50
    /*00014b08*/ LDR         R2, [IP, #2440]             @ 0x988 
    /*00014b0c*/ LDR         R1, [IP, #2448]             @ 0x990 
    /*00014b10*/ SUB         R2, R3, R2 
    /*00014b14*/ STR         R2, [IP, #2444]             @ 0x98c 
    /*00014b18*/ CMP         R2, R1 
    /*00014b1c*/ STRHI       R2, [IP, #2448]             @ 0x990 
    /*00014b20*/ LDR         R2, [IP, #2456]             @ 0x998 
    /*00014b24*/ LDR         R1, [IP, #2472]             @ 0x9a8 
    /*00014b28*/ SUB         R2, LR, R2 
    /*00014b2c*/ LDR         R0, [PC, #40]               @ 0x0000000000014b5c 
    /*00014b30*/ CMP         R2, R1 
    /*00014b34*/ STR         R2, [IP, #2468]             @ 0x9a4 
    /*00014b38*/ STRHI       R2, [IP, #2472]             @ 0x9a8 
    /*00014b3c*/ MOV         R1, R4 
    /*00014b40*/ MOV         R2, #8 
    /*00014b44*/ STR         R3, [IP, #2440]             @ 0x988 
    /*00014b48*/ STR         LR, [IP, #2456]             @ 0x998 
    /*00014b4c*/ BL          0x0000000000014B4C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VpssIntStatistic_x14b50:
    /*00014b50*/ ADD         SP, SP, #20 
    /*00014b54*/ POP         {R4, R5, R6, R7, PC} 
    /*00014b58*/ ANDEQ       R2, R0, R0, ASR #13 
    /*00014b5c*/ ANDEQ       R3, R0, IP, RRX 
FUNC_END VpssIntStatistic


FUNC_BEGIN VpssOnlineIsCheckEofInt
    /*00014b60*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014b64*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00014b68*/ LDR         R3, [R3, R0, LSL #2] 
    /*00014b6c*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00014b70*/ LDR         R3, [R3, #3684]             @ 0xe64 
    /*00014b74*/ CMP         R3, #2 
    /*00014b78*/ ANDEQ       R0, R1, #1 
    /*00014b7c*/ ANDNE       R0, R1, #1024               @ 0x400 
    /*00014b80*/ BX          LR 
FUNC_END VpssOnlineIsCheckEofInt


FUNC_BEGIN VpssOnlineGetTunlChnId
    /*00014b84*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00014b88*/ MOV         R5, R1 
    /*00014b8c*/ MOV         R6, R2 
    /*00014b90*/ MOV         R7, R0 
    /*00014b94*/ BL          0x0000000000014B94          @ VpssDrvGetLowDeLayChnId [R_ARM_CALL: .text+0x24050] 
    /*00014b98*/ MOV         R4, R0 
    /*00014b9c*/ BL          0x0000000000014B9C          @ VPSS_DRV_CheckLowDelayChn [R_ARM_CALL: .text+0x240f4] 
    /*00014ba0*/ CMP         R0, #0 
    /*00014ba4*/ MOVWNE      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xe4] 
    /*00014ba8*/ MOVTNE      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xe4] 
    /*00014bac*/ STRNE       R4, [R3] 
    /*00014bb0*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014bb4*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00014bb8*/ LDR         R3, [R3, R7, LSL #2] 
    /*00014bbc*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00014bc0*/ LDR         R3, [R3, #3684]             @ 0xe64 
    /*00014bc4*/ CMP         R3, #2 
    /*00014bc8*/ ANDEQ       R3, R5, #1 
    /*00014bcc*/ ANDNE       R3, R5, #1024               @ 0x400 
    /*00014bd0*/ CMP         R3, #0 
    /*00014bd4*/ BEQ         VpssOnlineGetTunlChnId_x14bf0
    /*00014bd8*/ TST         R5, #28672                  @ 0x7000 
    /*00014bdc*/ LSR         R3, R4, #31 
    /*00014be0*/ ANDEQ       R3, R3, #1 
    /*00014be4*/ MOVNE       R3, #0 
    /*00014be8*/ CMP         R3, #0 
    /*00014bec*/ BNE         VpssOnlineGetTunlChnId_x14bf8
    VpssOnlineGetTunlChnId_x14bf0:
    /*00014bf0*/ STR         R4, [R6] 
    /*00014bf4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssOnlineGetTunlChnId_x14bf8:
    /*00014bf8*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xe4] 
    /*00014bfc*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xe4] 
    /*00014c00*/ LDR         R0, [R5] 
    /*00014c04*/ BL          0x0000000000014C04          @ VPSS_DRV_CheckLowDelayChn [R_ARM_CALL: .text+0x240f4] 
    /*00014c08*/ CMP         R0, #0 
    /*00014c0c*/ LDRNE       R4, [R5] 
    /*00014c10*/ MVNNE       R3, #0 
    /*00014c14*/ STRNE       R3, [R5] 
    /*00014c18*/ B           VpssOnlineGetTunlChnId_x14bf0
FUNC_END VpssOnlineGetTunlChnId


FUNC_BEGIN VpssOnlineCommonIntDeal
    /*00014c1c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00014c20*/ ANDS        R7, R3, #1024               @ 0x400 
    /*00014c24*/ MOV         R4, R3 
    /*00014c28*/ MOV         R5, R1 
    /*00014c2c*/ MOV         R8, R0 
    /*00014c30*/ LDR         R6, [SP, #32] 
    /*00014c34*/ BNE         VpssOnlineCommonIntDeal_x14cac
    VpssOnlineCommonIntDeal_x14c38:
    /*00014c38*/ TST         R4, #1 
    /*00014c3c*/ BNE         VpssOnlineCommonIntDeal_x14c7c
    /*00014c40*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014c44*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00014c48*/ LDR         R3, [R3, R5, LSL #2] 
    /*00014c4c*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00014c50*/ LDR         R3, [R3, #3684]             @ 0xe64 
    /*00014c54*/ CMP         R3, #2 
    /*00014c58*/ BEQ         VpssOnlineCommonIntDeal_x14c74
    /*00014c5c*/ CMP         R7, #0 
    /*00014c60*/ BEQ         VpssOnlineCommonIntDeal_x14c78
    VpssOnlineCommonIntDeal_x14c64:
    /*00014c64*/ MOV         R1, R6 
    /*00014c68*/ MOV         R0, R5 
    /*00014c6c*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    VpssOnlineCommonIntDeal_x14c70:
    /*00014c70*/ B           VpssOnlineCommonIntDeal_x14c70@ VpssOnLineEofIntErr [R_ARM_JUMP24: .text+0x143c0] 
    VpssOnlineCommonIntDeal_x14c74:
    /*00014c74*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VpssOnlineCommonIntDeal_x14c78:
    /*00014c78*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VpssOnlineCommonIntDeal_x14c7c:
    /*00014c7c*/ MOV         R0, R8 
    /*00014c80*/ BL          0x0000000000014C80          @ VPSS_HAL_ClrEofInt [R_ARM_CALL: .text+0x265c8] 
    /*00014c84*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014c88*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00014c8c*/ LDR         R3, [R3, R5, LSL #2] 
    /*00014c90*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00014c94*/ LDR         R3, [R3, #3684]             @ 0xe64 
    /*00014c98*/ CMP         R3, #2 
    /*00014c9c*/ BEQ         VpssOnlineCommonIntDeal_x14c64
    /*00014ca0*/ CMP         R7, #0 
    /*00014ca4*/ BNE         VpssOnlineCommonIntDeal_x14c64
    /*00014ca8*/ B           VpssOnlineCommonIntDeal_x14c78
    VpssOnlineCommonIntDeal_x14cac:
    /*00014cac*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00014cb0*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00014cb4*/ MOV         R9, R2 
    /*00014cb8*/ LDR         SL, [R3, R1, LSL #2] 
    /*00014cbc*/ BL          0x0000000000014CBC          @ VPSS_HAL_ClrStartInt [R_ARM_CALL: .text+0x265b0] 
    /*00014cc0*/ MOV         R0, R8 
    /*00014cc4*/ BL          0x0000000000014CC4          @ VPSS_HAL_ClrErrInt [R_ARM_CALL: .text+0x26618] 
    /*00014cc8*/ ADD         R3, SL, #16384              @ 0x4000 
    /*00014ccc*/ MOV         R1, R6 
    /*00014cd0*/ MOV         R0, R5 
    /*00014cd4*/ LDR         R2, [R3, #692]              @ 0x2b4 
    /*00014cd8*/ CMP         R2, #1 
    /*00014cdc*/ MOVEQ       R2, #0 
    /*00014ce0*/ STREQ       R2, [R3, #692]              @ 0x2b4 
    /*00014ce4*/ BL          0x0000000000014CE4          @ VpssOnLineCcIntErr [R_ARM_CALL: .text+0x14314] 
    /*00014ce8*/ MOV         R1, R9 
    /*00014cec*/ MOV         R2, R6 
    /*00014cf0*/ MOV         R0, R5 
    /*00014cf4*/ BL          0x0000000000014CF4          @ VpssLowDelayErrProcess [R_ARM_CALL: .text+0x1443c] 
    /*00014cf8*/ UBFX        R1, R6, #11, #1 
    /*00014cfc*/ MOV         R0, R5 
    /*00014d00*/ BL          0x0000000000014D00          @ VpssCfgLostErrProcess [R_ARM_CALL: .text+0x14528] 
    /*00014d04*/ B           VpssOnlineCommonIntDeal_x14c38
FUNC_END VpssOnlineCommonIntDeal


FUNC_BEGIN VpssOnlineLowdelayProgress
    /*00014d08*/ CMP         R2, #2 
    /*00014d0c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00014d10*/ LDR         R7, [SP, #24] 
    /*00014d14*/ POPHI       {R4, R5, R6, R7, R8, PC} 
    /*00014d18*/ CMP         R2, #1 
    /*00014d1c*/ ANDEQ       R3, R3, #8192               @ 0x2000 
    /*00014d20*/ BEQ         VpssOnlineLowdelayProgress_x14d30
    /*00014d24*/ CMP         R2, #2 
    /*00014d28*/ ANDNE       R3, R3, #4096               @ 0x1000 
    /*00014d2c*/ ANDEQ       R3, R3, #16384              @ 0x4000 
    VpssOnlineLowdelayProgress_x14d30:
    /*00014d30*/ CMP         R3, #0 
    /*00014d34*/ POPEQ       {R4, R5, R6, R7, R8, PC} 
    /*00014d38*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014d3c*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00014d40*/ MOV         R6, R1 
    /*00014d44*/ MOV         R1, R2 
    /*00014d48*/ LDR         R8, [R3, R6, LSL #2] 
    /*00014d4c*/ MOV         R5, R0 
    /*00014d50*/ MOV         R4, R2 
    /*00014d54*/ BL          0x0000000000014D54          @ VPSS_HAL_ClrLowdelayInt [R_ARM_CALL: .text+0x265e0] 
    /*00014d58*/ LDR         R3, [R8, #2080]             @ 0x820 
    /*00014d5c*/ CMP         R3, #0 
    /*00014d60*/ MOVNE       R3, #0 
    /*00014d64*/ STRNE       R3, [R8, #2080]             @ 0x820 
    /*00014d68*/ BEQ         VpssOnlineLowdelayProgress_x14d80
    VpssOnlineLowdelayProgress_x14d6c:
    /*00014d6c*/ MOV         R2, R7 
    /*00014d70*/ MOV         R1, R4 
    /*00014d74*/ MOV         R0, R6 
    /*00014d78*/ POP         {R4, R5, R6, R7, R8, LR} 
    VpssOnlineLowdelayProgress_x14d7c:
    /*00014d7c*/ B           VpssOnlineLowdelayProgress_x14d7c@ VpssLowDelayErrProcess [R_ARM_JUMP24: .text+0x1443c] 
    VpssOnlineLowdelayProgress_x14d80:
    /*00014d80*/ MOV         R2, R5 
    /*00014d84*/ MOV         R1, R4 
    /*00014d88*/ MOV         R0, R6 
    /*00014d8c*/ BL          0x0000000000014D8C          @ VpssSendLowDelayFrame [R_ARM_CALL: .text+0xa998] 
    /*00014d90*/ B           VpssOnlineLowdelayProgress_x14d6c
FUNC_END VpssOnlineLowdelayProgress


FUNC_BEGIN VpssOnlineReleaseErrorFrame
    /*00014d94*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00014d98*/ MOV         R8, R0 
    /*00014d9c*/ MOV         R0, #92                     @ 0x5c 
    /*00014da0*/ SUB         SP, SP, #28 
    /*00014da4*/ MUL         R3, R0, R8 
    /*00014da8*/ MOVW        SL, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00014dac*/ MOVT        SL, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00014db0*/ ADD         R1, SP, #20 
    /*00014db4*/ MOV         R5, #0 
    /*00014db8*/ MOVW        R9, #5364                   @ 0x14f4 
    /*00014dbc*/ MOV         FP, #376                    @ 0x178 
    /*00014dc0*/ STR         R3, [SP, #12] 
    /*00014dc4*/ ADD         R3, R3, #48                 @ 0x30 
    /*00014dc8*/ ADD         R3, SL, R3 
    /*00014dcc*/ STR         R3, [SP, #8] 
    /*00014dd0*/ MOV         R0, R3 
    /*00014dd4*/ BL          0x0000000000014DD4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00014dd8*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00014ddc*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00014de0*/ LDR         R6, [R3, R8, LSL #2] 
    /*00014de4*/ ADD         R7, R6, #21248              @ 0x5300 
    /*00014de8*/ ADD         R7, R7, #232                @ 0xe8 
    VpssOnlineReleaseErrorFrame_x14dec:
    /*00014dec*/ LDR         R2, [R7], #4 
    /*00014df0*/ MOV         R0, R8 
    /*00014df4*/ ADD         R1, SP, #16 
    /*00014df8*/ LSL         R4, R5, #1 
    /*00014dfc*/ BL          0x0000000000014DFC          @ VpssOnlineAlternateChnBufId [R_ARM_CALL: .text+0x2a14] 
    /*00014e00*/ LDR         R3, [SP, #16] 
    /*00014e04*/ ADD         R2, R4, R3 
    /*00014e08*/ ADD         R2, R2, R9 
    /*00014e0c*/ LDR         R0, [R6, R2, LSL #2] 
    /*00014e10*/ CMP         R0, #1 
    /*00014e14*/ BEQ         VpssOnlineReleaseErrorFrame_x14e98
    VpssOnlineReleaseErrorFrame_x14e18:
    /*00014e18*/ MOV         R1, #752                    @ 0x2f0 
    /*00014e1c*/ ADD         R4, R4, R3 
    /*00014e20*/ MUL         R1, R1, R5 
    /*00014e24*/ ADD         R5, R5, #1 
    /*00014e28*/ MLA         R3, FP, R3, R1 
    /*00014e2c*/ ADD         R4, R4, R9 
    /*00014e30*/ CMP         R5, #3 
    /*00014e34*/ MOVW        R2, #19496                  @ 0x4c28 
    /*00014e38*/ MOV         R1, #0 
    /*00014e3c*/ MOV         R0, #1 
    /*00014e40*/ ADD         R3, R6, R3 
    /*00014e44*/ STR         R0, [R3, R2] 
    /*00014e48*/ STR         R1, [R6, R4, LSL #2] 
    /*00014e4c*/ BNE         VpssOnlineReleaseErrorFrame_x14dec
    /*00014e50*/ ADD         R1, SP, #20 
    /*00014e54*/ LDR         R0, [SP, #8] 
    /*00014e58*/ BL          0x0000000000014E58          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014e5c*/ MOV         R3, #92                     @ 0x5c 
    /*00014e60*/ MUL         R8, R3, R8 
    /*00014e64*/ ADD         R3, SL, R8 
    /*00014e68*/ LDR         R3, [R3, #4] 
    /*00014e6c*/ CMP         R3, #0 
    /*00014e70*/ BNE         VpssOnlineReleaseErrorFrame_x14e80
    /*00014e74*/ LDR         R3, [SL, R8] 
    /*00014e78*/ CMP         R3, #0 
    /*00014e7c*/ BEQ         VpssOnlineReleaseErrorFrame_x14e90
    VpssOnlineReleaseErrorFrame_x14e80:
    /*00014e80*/ LDR         R3, [SP, #12] 
    /*00014e84*/ ADD         R0, R3, #36                 @ 0x24 
    /*00014e88*/ ADD         R0, SL, R0 
    /*00014e8c*/ BL          0x0000000000014E8C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VpssOnlineReleaseErrorFrame_x14e90:
    /*00014e90*/ ADD         SP, SP, #28 
    /*00014e94*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssOnlineReleaseErrorFrame_x14e98:
    /*00014e98*/ BL          0x0000000000014E98          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014e9c*/ LDR         R3, [SP, #16] 
    /*00014ea0*/ MOV         IP, #752                    @ 0x2f0 
    /*00014ea4*/ MOVW        R2, #19492                  @ 0x4c24 
    /*00014ea8*/ MUL         IP, IP, R5 
    /*00014eac*/ MOV         R1, #10 
    /*00014eb0*/ MLA         R3, FP, R3, IP 
    /*00014eb4*/ ADD         R3, R6, R3 
    /*00014eb8*/ ADD         LR, R3, #19200              @ 0x4b00 
    /*00014ebc*/ LDR         IP, [R3, R2] 
    /*00014ec0*/ LDRD        R2, [LR] 
    /*00014ec4*/ STR         R1, [SP] 
    /*00014ec8*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00014ecc*/ MOV         R0, IP 
    /*00014ed0*/ BLX         R1 
    /*00014ed4*/ LDR         R3, [SP, #16] 
    /*00014ed8*/ B           VpssOnlineReleaseErrorFrame_x14e18
FUNC_END VpssOnlineReleaseErrorFrame


FUNC_BEGIN VpssOnlineEarlyEndModeISR
    /*00014edc*/ MOVW        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014ee0*/ MOVT        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00014ee4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00014ee8*/ MOV         R5, R1 
    /*00014eec*/ LDR         R1, [IP, R1, LSL #2] 
    /*00014ef0*/ MOV         R6, R3 
    /*00014ef4*/ MOV         R8, R0 
    /*00014ef8*/ MOV         R7, R2 
    /*00014efc*/ ADD         R1, R1, #28672              @ 0x7000 
    /*00014f00*/ LDR         R9, [SP, #32] 
    /*00014f04*/ LDR         R3, [R1, #3280]             @ 0xcd0 
    /*00014f08*/ CMP         R3, #1 
    /*00014f0c*/ BEQ         VpssOnlineEarlyEndModeISR_x14f60
    /*00014f10*/ TST         R6, #1 
    /*00014f14*/ BEQ         VpssOnlineEarlyEndModeISR_x14f44
    /*00014f18*/ MOV         R4, #0 
    VpssOnlineEarlyEndModeISR_x14f1c:
    /*00014f1c*/ CMP         R7, R4 
    /*00014f20*/ MOV         R1, R4 
    /*00014f24*/ MOV         R2, R6 
    /*00014f28*/ MOV         R0, R5 
    /*00014f2c*/ MOVEQ       R3, #2 
    /*00014f30*/ MOVNE       R3, #0 
    /*00014f34*/ ADD         R4, R4, #1 
    /*00014f38*/ BL          0x0000000000014F38          @ VpssOnLineSendFrame [R_ARM_CALL: .text+0xd5cc] 
    /*00014f3c*/ CMP         R4, #3 
    /*00014f40*/ BNE         VpssOnlineEarlyEndModeISR_x14f1c
    VpssOnlineEarlyEndModeISR_x14f44:
    /*00014f44*/ STR         R9, [SP, #32] 
    /*00014f48*/ MOV         R3, R6 
    /*00014f4c*/ MOV         R2, R7 
    /*00014f50*/ MOV         R1, R5 
    /*00014f54*/ MOV         R0, R8 
    /*00014f58*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    VpssOnlineEarlyEndModeISR_x14f5c:
    /*00014f5c*/ B           VpssOnlineEarlyEndModeISR_x14f5c@ VpssOnlineLowdelayProgress [R_ARM_JUMP24: .text+0x14d08] 
    VpssOnlineEarlyEndModeISR_x14f60:
    /*00014f60*/ MOV         R0, R5 
    /*00014f64*/ BL          0x0000000000014F64          @ VpssOnlineReleaseErrorFrame [R_ARM_CALL: .text+0x14d94] 
    /*00014f68*/ B           VpssOnlineEarlyEndModeISR_x14f44
FUNC_END VpssOnlineEarlyEndModeISR


FUNC_BEGIN VpssOnlineEarlyModeISR
    VpssOnlineEarlyModeISR_x14f6c:
    /*00014f6c*/ B           VpssOnlineEarlyModeISR_x14f6c@ VpssOnlineLowdelayProgress [R_ARM_JUMP24: .text+0x14d08] 
FUNC_END VpssOnlineEarlyModeISR


FUNC_BEGIN VpssOnlineFrameStartModeISR
    /*00014f70*/ TST         R3, #1024                   @ 0x400 
    /*00014f74*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00014f78*/ MOV         R6, R3 
    /*00014f7c*/ MOV         R8, R0 
    /*00014f80*/ MOV         R4, R1 
    /*00014f84*/ MOV         R7, R2 
    /*00014f88*/ LDR         R9, [SP, #32] 
    /*00014f8c*/ BEQ         VpssOnlineFrameStartModeISR_x1503c
    /*00014f90*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*00014f94*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*00014f98*/ MOVW        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014f9c*/ MOVT        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00014fa0*/ LDR         R1, [R3, #4] 
    /*00014fa4*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00014fa8*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00014fac*/ LDR         R5, [R2, R4, LSL #2] 
    /*00014fb0*/ CMP         R1, #1 
    /*00014fb4*/ LDR         SL, [R3, R4, LSL #2] 
    /*00014fb8*/ BEQ         VpssOnlineFrameStartModeISR_x15084
    VpssOnlineFrameStartModeISR_x14fbc:
    /*00014fbc*/ ADD         R5, R5, #28672              @ 0x7000 
    /*00014fc0*/ LDR         R3, [R5, #3280]             @ 0xcd0 
    /*00014fc4*/ CMP         R3, #1 
    /*00014fc8*/ BEQ         VpssOnlineFrameStartModeISR_x150c8
    /*00014fcc*/ ADD         SL, SL, #16384              @ 0x4000 
    /*00014fd0*/ LDR         R5, [SL, #692]              @ 0x2b4 
    /*00014fd4*/ CMP         R5, #0 
    /*00014fd8*/ BEQ         VpssOnlineFrameStartModeISR_x15058
    VpssOnlineFrameStartModeISR_x14fdc:
    /*00014fdc*/ MOV         R0, R4 
    /*00014fe0*/ BL          0x0000000000014FE0          @ VPSS_COMM_UpdateLowdelay [R_ARM_CALL: .text+0x14754] 
    /*00014fe4*/ MOV         R0, R4 
    /*00014fe8*/ BL          0x0000000000014FE8          @ VPSS_UpdateAttrFromUserSet [R_ARM_CALL: .text+0x22b4] 
    /*00014fec*/ MOV         R0, R4 
    /*00014ff0*/ BL          0x0000000000014FF0          @ VpssOnLinePrepGrpHwInfo [R_ARM_CALL: .text+0x2a3c] 
    /*00014ff4*/ MOV         R1, #0 
    /*00014ff8*/ MOV         R0, R4 
    /*00014ffc*/ BL          0x0000000000014FFC          @ VpssOnlinePrepChnHwInfo [R_ARM_CALL: .text+0x2a5c] 
    /*00015000*/ MOV         R1, #1 
    /*00015004*/ MOV         R0, R4 
    /*00015008*/ BL          0x0000000000015008          @ VpssOnlinePrepChnHwInfo [R_ARM_CALL: .text+0x2a5c] 
    /*0001500c*/ MOV         R1, #2 
    /*00015010*/ MOV         R0, R4 
    /*00015014*/ BL          0x0000000000015014          @ VpssOnlinePrepChnHwInfo [R_ARM_CALL: .text+0x2a5c] 
    /*00015018*/ MOV         R0, R4 
    /*0001501c*/ BL          0x000000000001501C          @ VpssDrvOnlineUpdateGrpAttr [R_ARM_CALL: .text+0x2470c] 
    /*00015020*/ MOV         R1, #0 
    /*00015024*/ MOV         R0, R4 
    /*00015028*/ BL          0x0000000000015028          @ VPSS_DRV_OUT_32B_Align [R_ARM_CALL: .text+0x214ec] 
    /*0001502c*/ MOV         R0, R4 
    /*00015030*/ BL          0x0000000000015030          @ VpssOnlinePrepareNextFrame [R_ARM_CALL: .text+0x148d8] 
    /*00015034*/ MOV         R0, R4 
    /*00015038*/ BL          0x0000000000015038          @ VpssDrvOnLineRegup [R_ARM_CALL: .text+0x24670] 
    VpssOnlineFrameStartModeISR_x1503c:
    /*0001503c*/ STR         R9, [SP, #32] 
    /*00015040*/ MOV         R3, R6 
    /*00015044*/ MOV         R2, R7 
    /*00015048*/ MOV         R1, R4 
    /*0001504c*/ MOV         R0, R8 
    /*00015050*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    VpssOnlineFrameStartModeISR_x15054:
    /*00015054*/ B           VpssOnlineFrameStartModeISR_x15054@ VpssOnlineLowdelayProgress [R_ARM_JUMP24: .text+0x14d08] 
    VpssOnlineFrameStartModeISR_x15058:
    /*00015058*/ CMP         R7, R5 
    /*0001505c*/ MOV         R1, R5 
    /*00015060*/ MOV         R2, R6 
    /*00015064*/ MOV         R0, R4 
    /*00015068*/ MOVEQ       R3, #2 
    /*0001506c*/ MOVNE       R3, #0 
    /*00015070*/ ADD         R5, R5, #1 
    /*00015074*/ BL          0x0000000000015074          @ VpssOnLineSendFrame [R_ARM_CALL: .text+0xd5cc] 
    /*00015078*/ CMP         R5, #3 
    /*0001507c*/ BNE         VpssOnlineFrameStartModeISR_x15058
    /*00015080*/ B           VpssOnlineFrameStartModeISR_x14fdc
    VpssOnlineFrameStartModeISR_x15084:
    /*00015084*/ CMP         R7, #2 
    /*00015088*/ BHI         VpssOnlineFrameStartModeISR_x14fbc
    /*0001508c*/ CMP         R7, #1 
    /*00015090*/ ANDEQ       R3, R6, #8192               @ 0x2000 
    /*00015094*/ BEQ         VpssOnlineFrameStartModeISR_x150a4
    /*00015098*/ CMP         R7, #2 
    /*0001509c*/ ANDNE       R3, R6, #4096               @ 0x1000 
    /*000150a0*/ ANDEQ       R3, R6, #16384              @ 0x4000 
    VpssOnlineFrameStartModeISR_x150a4:
    /*000150a4*/ CMP         R3, #0 
    /*000150a8*/ BEQ         VpssOnlineFrameStartModeISR_x14fbc
    /*000150ac*/ MOV         R2, R8 
    /*000150b0*/ MOV         R1, R7 
    /*000150b4*/ MOV         R0, R4 
    /*000150b8*/ BL          0x00000000000150B8          @ VpssSendLowDelayFrame [R_ARM_CALL: .text+0xa998] 
    /*000150bc*/ MOV         R3, #1 
    /*000150c0*/ STR         R3, [R5, #2080]             @ 0x820 
    /*000150c4*/ B           VpssOnlineFrameStartModeISR_x14fbc
    VpssOnlineFrameStartModeISR_x150c8:
    /*000150c8*/ MOV         R0, R4 
    /*000150cc*/ BL          0x00000000000150CC          @ VpssOnlineReleaseErrorFrame [R_ARM_CALL: .text+0x14d94] 
    /*000150d0*/ B           VpssOnlineFrameStartModeISR_x14fdc
FUNC_END VpssOnlineFrameStartModeISR


FUNC_BEGIN VPSS_COMM_OnLineIrqProc
    /*000150d4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000150d8*/ SUB         SP, SP, #40                 @ 0x28 
    /*000150dc*/ ADD         R9, SP, #24 
    /*000150e0*/ MOV         R5, R0 
    /*000150e4*/ MOV         R3, #0 
    /*000150e8*/ MVN         R2, #0 
    /*000150ec*/ MOV         R0, R9 
    /*000150f0*/ STR         R3, [SP, #8] 
    /*000150f4*/ STR         R3, [SP, #12] 
    /*000150f8*/ STR         R2, [SP, #16] 
    /*000150fc*/ BL          0x00000000000150FC          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00015100*/ MOV         R0, R5 
    /*00015104*/ BL          0x0000000000015104          @ VPSS_DRV_GetOnlineGrpById [R_ARM_CALL: .text+0x181e0] 
    /*00015108*/ MOV         R1, R0 
    /*0001510c*/ MOV         R4, R0 
    /*00015110*/ MOV         R0, R5 
    /*00015114*/ BL          0x0000000000015114          @ VpssOnlineCheckState [R_ARM_CALL: .text+0x141b8] 
    /*00015118*/ CMN         R0, #1 
    /*0001511c*/ BEQ         VPSS_COMM_OnLineIrqProc_x15244
    /*00015120*/ MOV         R6, #92                     @ 0x5c 
    /*00015124*/ MOVW        R7, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015128*/ MUL         R6, R6, R4 
    /*0001512c*/ MOVT        R7, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015130*/ ADD         R1, SP, #20 
    /*00015134*/ ADD         R8, R6, #48                 @ 0x30 
    /*00015138*/ ADD         R8, R7, R8 
    /*0001513c*/ MOV         R0, R8 
    /*00015140*/ BL          0x0000000000015140          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00015144*/ MOV         R3, #23 
    /*00015148*/ MLA         R3, R3, R4, R5 
    /*0001514c*/ MOV         R0, R8 
    /*00015150*/ ADD         R1, SP, #20 
    /*00015154*/ MOV         R2, #1 
    /*00015158*/ ADD         R3, R3, #2 
    /*0001515c*/ STR         R2, [R7, R3, LSL #2] 
    /*00015160*/ BL          0x0000000000015160          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015164*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00015168*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001516c*/ ADD         R1, SP, #8 
    /*00015170*/ MOV         R0, R5 
    /*00015174*/ LDR         SL, [R3, R4, LSL #2] 
    /*00015178*/ BL          0x0000000000015178          @ VPSS_HAL_GetIntStatus [R_ARM_CALL: .text+0x266f8] 
    /*0001517c*/ ADD         R1, SP, #12 
    /*00015180*/ MOV         R0, R5 
    /*00015184*/ BL          0x0000000000015184          @ VPSS_HAL_GetRawIntStatus [R_ARM_CALL: .text+0x26710] 
    /*00015188*/ LDR         R1, [SP, #12] 
    /*0001518c*/ MOV         R0, R4 
    /*00015190*/ BL          0x0000000000015190          @ VpssOnlineSetGlobleParam [R_ARM_CALL: .text+0x14254] 
    /*00015194*/ ADD         R2, SP, #16 
    /*00015198*/ LDR         R1, [SP, #8] 
    /*0001519c*/ MOV         R0, R4 
    /*000151a0*/ BL          0x00000000000151A0          @ VpssOnlineGetTunlChnId [R_ARM_CALL: .text+0x14b84] 
    /*000151a4*/ LDR         IP, [SP, #12] 
    /*000151a8*/ LDR         R3, [SP, #8] 
    /*000151ac*/ MOV         R1, R4 
    /*000151b0*/ LDR         R2, [SP, #16] 
    /*000151b4*/ MOV         R0, R5 
    /*000151b8*/ STR         IP, [SP] 
    /*000151bc*/ BL          0x00000000000151BC          @ VpssOnlineCommonIntDeal [R_ARM_CALL: .text+0x14c1c] 
    /*000151c0*/ ADD         R3, SL, #28672              @ 0x7000 
    /*000151c4*/ LDR         R3, [R3, #3684]             @ 0xe64 
    /*000151c8*/ CMP         R3, #0 
    /*000151cc*/ BEQ         VPSS_COMM_OnLineIrqProc_x15250
    /*000151d0*/ CMP         R3, #1 
    /*000151d4*/ BEQ         VPSS_COMM_OnLineIrqProc_x15288
    /*000151d8*/ CMP         R3, #2 
    /*000151dc*/ BEQ         VPSS_COMM_OnLineIrqProc_x152a8
    VPSS_COMM_OnLineIrqProc_x151e0:
    /*000151e0*/ LDR         R3, [SL, #2072]             @ 0x818 
    /*000151e4*/ CMP         R3, #1 
    /*000151e8*/ BEQ         VPSS_COMM_OnLineIrqProc_x15278
    VPSS_COMM_OnLineIrqProc_x151ec:
    /*000151ec*/ ADD         R1, SP, #20 
    /*000151f0*/ MOV         R0, R8 
    /*000151f4*/ BL          0x00000000000151F4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000151f8*/ MOV         R3, #23 
    /*000151fc*/ MLA         R4, R3, R4, R5 
    /*00015200*/ ADD         R1, SP, #20 
    /*00015204*/ MOV         R0, R8 
    /*00015208*/ MOV         R3, #0 
    /*0001520c*/ ADD         R4, R4, #2 
    /*00015210*/ STR         R3, [R7, R4, LSL #2] 
    /*00015214*/ BL          0x0000000000015214          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015218*/ ADD         R0, R6, #36                 @ 0x24 
    /*0001521c*/ ADD         R0, R7, R0 
    /*00015220*/ BL          0x0000000000015220          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00015224*/ ADD         R0, SP, #32 
    /*00015228*/ BL          0x0000000000015228          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*0001522c*/ LDR         IP, [SP, #36]               @ 0x24 
    /*00015230*/ LDM         R9, {R1, R2} 
    /*00015234*/ LDR         R0, [SP, #12] 
    /*00015238*/ LDR         R3, [SP, #32] 
    /*0001523c*/ STR         IP, [SP] 
    /*00015240*/ BL          0x0000000000015240          @ VpssOnlineIntCntStatistic [R_ARM_CALL: .text+0x149a8] 
    VPSS_COMM_OnLineIrqProc_x15244:
    /*00015244*/ MOV         R0, #1 
    /*00015248*/ ADD         SP, SP, #40                 @ 0x28 
    /*0001524c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_COMM_OnLineIrqProc_x15250:
    /*00015250*/ LDR         IP, [SP, #12] 
    /*00015254*/ MOV         R1, R4 
    /*00015258*/ LDR         R3, [SP, #8] 
    /*0001525c*/ MOV         R0, R5 
    /*00015260*/ LDR         R2, [SP, #16] 
    /*00015264*/ STR         IP, [SP] 
    /*00015268*/ BL          0x0000000000015268          @ VpssOnlineFrameStartModeISR [R_ARM_CALL: .text+0x14f70] 
    /*0001526c*/ LDR         R3, [SL, #2072]             @ 0x818 
    /*00015270*/ CMP         R3, #1 
    /*00015274*/ BNE         VPSS_COMM_OnLineIrqProc_x151ec
    VPSS_COMM_OnLineIrqProc_x15278:
    /*00015278*/ LDR         R3, [SP, #12] 
    /*0001527c*/ ANDS        R3, R3, #2048               @ 0x800 
    /*00015280*/ STREQ       R3, [SL, #2072]             @ 0x818 
    /*00015284*/ B           VPSS_COMM_OnLineIrqProc_x151ec
    VPSS_COMM_OnLineIrqProc_x15288:
    /*00015288*/ LDR         IP, [SP, #12] 
    /*0001528c*/ MOV         R1, R4 
    /*00015290*/ LDR         R3, [SP, #8] 
    /*00015294*/ MOV         R0, R5 
    /*00015298*/ LDR         R2, [SP, #16] 
    /*0001529c*/ STR         IP, [SP] 
    /*000152a0*/ BL          0x00000000000152A0          @ VpssOnlineLowdelayProgress [R_ARM_CALL: .text+0x14d08] 
    /*000152a4*/ B           VPSS_COMM_OnLineIrqProc_x151e0
    VPSS_COMM_OnLineIrqProc_x152a8:
    /*000152a8*/ LDR         IP, [SP, #12] 
    /*000152ac*/ MOV         R1, R4 
    /*000152b0*/ LDR         R3, [SP, #8] 
    /*000152b4*/ MOV         R0, R5 
    /*000152b8*/ LDR         R2, [SP, #16] 
    /*000152bc*/ STR         IP, [SP] 
    /*000152c0*/ BL          0x00000000000152C0          @ VpssOnlineEarlyEndModeISR [R_ARM_CALL: .text+0x14edc] 
    /*000152c4*/ B           VPSS_COMM_OnLineIrqProc_x151e0
FUNC_END VPSS_COMM_OnLineIrqProc


FUNC_BEGIN VPSS_COMM_DevInit
    /*000152c8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000152cc*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*000152d0*/ SUB         SP, SP, #12 
    /*000152d4*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*000152d8*/ BL          0x00000000000152D8          @ VPSS_InitDefaultStitchParam [R_ARM_CALL: .text+0x181d4] 
    /*000152dc*/ ADD         R0, R4, #156                @ 0x9c 
    /*000152e0*/ BL          0x00000000000152E0          @ VPSS_DRV_GetIrqId [R_ARM_CALL: .text+0x23e54] 
    /*000152e4*/ BL          0x00000000000152E4          @ VPSS_HAL_Init [R_ARM_CALL: .text+0x26378] 
    /*000152e8*/ CMP         R0, #0 
    /*000152ec*/ BEQ         VPSS_COMM_DevInit_x15320
    /*000152f0*/ MOVW        R3, #1277                   @ 0x4fd 
    /*000152f4*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x50dc] 
    /*000152f8*/ STR         R3, [SP] 
    /*000152fc*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x50dc] 
    /*00015300*/ LDR         R3, [PC, #192]              @ 0x00000000000153c8 
    /*00015304*/ MOV         R1, #7 
    /*00015308*/ MOV         R0, #0 
    /*0001530c*/ MVN         R5, #0 
    /*00015310*/ BL          0x0000000000015310          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_COMM_DevInit_x15314:
    /*00015314*/ MOV         R0, R5 
    /*00015318*/ ADD         SP, SP, #12 
    /*0001531c*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_COMM_DevInit_x15320:
    /*00015320*/ MOVW        R3, #0                      @ vpss_en [R_ARM_MOVW_ABS_NC: .data+0xec] 
    /*00015324*/ MOVT        R3, #0                      @ vpss_en [R_ARM_MOVT_ABS: .data+0xec] 
    /*00015328*/ STR         R0, [R4, #2916]             @ 0xb64 
    /*0001532c*/ LDR         R3, [R3] 
    /*00015330*/ CMP         R3, #0 
    /*00015334*/ MOVNE       R3, #1 
    /*00015338*/ STRNE       R3, [R4, #2916]             @ 0xb64 
    /*0001533c*/ BL          0x000000000001533C          @ VPSS_DRV_RequestIrq [R_ARM_CALL: .text+0x23e68] 
    /*00015340*/ SUBS        R7, R0, #0 
    /*00015344*/ BNE         VPSS_COMM_DevInit_x15388
    /*00015348*/ LDR         R6, [PC, #124]              @ 0x00000000000153cc 
    /*0001534c*/ MOV         R1, #17 
    /*00015350*/ MOV         R0, R6 
    /*00015354*/ BL          0x0000000000015354          @ VPSS_HAL_CreatNodeQueue [R_ARM_CALL: .text+0x16d2c] 
    /*00015358*/ SUBS        R5, R0, #0 
    /*0001535c*/ BEQ         VPSS_COMM_DevInit_x15390
    /*00015360*/ MOVW        R3, #1301                   @ 0x515 
    /*00015364*/ MOV         R0, R7 
    /*00015368*/ STR         R3, [SP] 
    /*0001536c*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x510c] 
    /*00015370*/ LDR         R3, [PC, #80]               @ 0x00000000000153c8 
    /*00015374*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x510c] 
    /*00015378*/ MOV         R1, #7 
    /*0001537c*/ MVN         R5, #0 
    /*00015380*/ BL          0x0000000000015380          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015384*/ B           VPSS_COMM_DevInit_x15314
    VPSS_COMM_DevInit_x15388:
    /*00015388*/ MVN         R5, #0 
    /*0001538c*/ B           VPSS_COMM_DevInit_x15314
    VPSS_COMM_DevInit_x15390:
    /*00015390*/ MOV         R1, R5 
    /*00015394*/ MOV         R2, #64                     @ 0x40 
    /*00015398*/ LDR         R0, [PC, #48]               @ 0x00000000000153d0 
    /*0001539c*/ STR         R5, [R4, #140]              @ 0x8c 
    /*000153a0*/ STR         R5, [R4, #148]              @ 0x94 
    /*000153a4*/ STR         R5, [R4, #132]              @ 0x84 
    /*000153a8*/ BL          0x00000000000153A8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000153ac*/ MOV         R2, #3664                   @ 0xe50 
    /*000153b0*/ MOV         R1, R5 
    /*000153b4*/ ADD         R0, R6, #2928               @ 0xb70 
    /*000153b8*/ BL          0x00000000000153B8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000153bc*/ BL          0x00000000000153BC          @ VPSS_DRV_AbolishReset [R_ARM_CALL: .text+0x23f0c] 
    /*000153c0*/ BL          0x00000000000153C0          @ VPSS_DRV_PerformanceRestriction [R_ARM_CALL: .text+0x26250] 
    /*000153c4*/ B           VPSS_COMM_DevInit_x15314
    /*000153c8*/ ANDEQ       R0, R0, R8, ROR #25 
    /*000153cc*/ ANDEQ       R1, R0, R8, ASR #13 
    /*000153d0*/ ANDEQ       R2, R0, R0, ROR #3 
FUNC_END VPSS_COMM_DevInit


FUNC_BEGIN VPSS_COMM_DevExit
    /*000153d4*/ PUSH        {R4, LR} 
    /*000153d8*/ BL          0x00000000000153D8          @ VPSS_DRV_Reset [R_ARM_CALL: .text+0x23f54] 
    /*000153dc*/ BL          0x00000000000153DC          @ VPSS_DRV_FreetIrq [R_ARM_CALL: .text+0x23ed4] 
    /*000153e0*/ BL          0x00000000000153E0          @ VPSS_HAL_Exit [R_ARM_CALL: .text+0x263b8] 
    /*000153e4*/ LDR         R0, [PC, #8]                @ 0x00000000000153f4 
    /*000153e8*/ BL          0x00000000000153E8          @ VPSS_HAL_DestroyNodeQueue [R_ARM_CALL: .text+0x16e24] 
    /*000153ec*/ MOV         R0, #0 
    /*000153f0*/ POP         {R4, PC} 
    /*000153f4*/ ANDEQ       R1, R0, R8, ASR #13 
FUNC_END VPSS_COMM_DevExit


FUNC_BEGIN VPSS_COMM_CreatOneModel
    /*000153f8*/ LDR         R3, [PC, #32]               @ 0x0000000000015420 
    /*000153fc*/ MOV         R1, #168                    @ 0xa8 
    /*00015400*/ PUSH        {R4, LR} 
    /*00015404*/ MLA         R1, R1, R0, R3 
    /*00015408*/ ADD         R1, R1, #152                @ 0x98 
    /*0001540c*/ BL          0x000000000001540C          @ VPSS_DRV_MallocModelBuf [R_ARM_CALL: .text+0x20bc8] 
    /*00015410*/ ADDS        R0, R0, #0 
    /*00015414*/ MOVNE       R0, #1 
    /*00015418*/ RSB         R0, R0, #0 
    /*0001541c*/ POP         {R4, PC} 
    /*00015420*/ ANDEQ       R1, R0, R8, ASR #13 
FUNC_END VPSS_COMM_CreatOneModel


FUNC_BEGIN VPSS_COMM_DestroyOneModel
    /*00015424*/ LDR         R2, [PC, #24]               @ 0x0000000000015444 
    /*00015428*/ MOV         R3, #168                    @ 0xa8 
    /*0001542c*/ PUSH        {R4, LR} 
    /*00015430*/ MLA         R0, R3, R0, R2 
    /*00015434*/ ADD         R0, R0, #152                @ 0x98 
    /*00015438*/ BL          0x0000000000015438          @ VPSS_DRV_FreeModelBuf [R_ARM_CALL: .text+0x20d50] 
    /*0001543c*/ MOV         R0, #0 
    /*00015440*/ POP         {R4, PC} 
    /*00015444*/ ANDEQ       R1, R0, R8, ASR #13 
FUNC_END VPSS_COMM_DestroyOneModel


FUNC_BEGIN VPSS_COMM_GetFreeNum
    /*00015448*/ LDR         R0, [PC]                    @ 0x0000000000015450 
    VPSS_COMM_GetFreeNum_x1544c:
    /*0001544c*/ B           VPSS_COMM_GetFreeNum_x1544c @ VPSS_HAL_GetFreeNum [R_ARM_JUMP24: .text+0x17260] 
    /*00015450*/ ANDEQ       R1, R0, R8, ASR #13 
FUNC_END VPSS_COMM_GetFreeNum


FUNC_BEGIN VPSS_COMM_CreateOneNode
    /*00015454*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00015458*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001545c*/ MOV         R2, R0 
    /*00015460*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00015464*/ SUB         SP, SP, #100                @ 0x64 
    /*00015468*/ LDR         R3, [R3, R2, LSL #2] 
    /*0001546c*/ MOV         SL, #0 
    /*00015470*/ STR         R0, [SP, #32] 
    /*00015474*/ LDR         R0, [PC, #960]              @ 0x000000000001583c 
    /*00015478*/ STR         R3, [SP, #72]               @ 0x48 
    /*0001547c*/ STR         R1, [SP, #36]               @ 0x24 
    /*00015480*/ STR         SL, [SP, #92]               @ 0x5c 
    /*00015484*/ BL          0x0000000000015484          @ VPSS_HAL_NodeQueueGetFree [R_ARM_CALL: .text+0x16ec0] 
    /*00015488*/ SUBS        R3, R0, #0 
    /*0001548c*/ STR         R3, [SP, #28] 
    /*00015490*/ BEQ         VPSS_COMM_CreateOneNode_x1582c
    /*00015494*/ LDR         R4, [SP, #32] 
    /*00015498*/ ADD         R2, SP, #92                 @ 0x5c 
    /*0001549c*/ LDR         R6, [SP, #28] 
    /*000154a0*/ LDR         R3, [PC, #920]              @ 0x0000000000015840 
    /*000154a4*/ ADD         R1, R6, #92                 @ 0x5c 
    /*000154a8*/ MOV         R0, R4 
    /*000154ac*/ SUB         R5, R3, #8 
    /*000154b0*/ BL          0x00000000000154B0          @ VPSS_DRV_Get3dnrProcState [R_ARM_CALL: .text+0x225e4] 
    /*000154b4*/ LDR         R7, [SP, #36]               @ 0x24 
    /*000154b8*/ MOV         R2, R6 
    /*000154bc*/ LDR         IP, [SP, #72]               @ 0x48 
    /*000154c0*/ MOV         R1, SL 
    /*000154c4*/ STR         R4, [R2] 
    /*000154c8*/ MOV         R0, R4 
    /*000154cc*/ ADD         IP, IP, #24576              @ 0x6000 
    /*000154d0*/ MOV         R3, R7 
    /*000154d4*/ MOV         R2, R5 
    /*000154d8*/ STR         IP, [SP, #60]               @ 0x3c 
    /*000154dc*/ MOV         R8, IP 
    /*000154e0*/ BL          0x00000000000154E0          @ VPSS_DRV_GenSclCfg [R_ARM_CALL: .text+0x22db0] 
    /*000154e4*/ MOV         R3, R7 
    /*000154e8*/ ADD         R2, R5, #96                 @ 0x60 
    /*000154ec*/ MOV         R1, #1 
    /*000154f0*/ MOV         R0, R4 
    /*000154f4*/ BL          0x00000000000154F4          @ VPSS_DRV_GenSclCfg [R_ARM_CALL: .text+0x22db0] 
    /*000154f8*/ MOV         R3, R7 
    /*000154fc*/ ADD         R2, R5, #192                @ 0xc0 
    /*00015500*/ MOV         R1, #2 
    /*00015504*/ MOV         R0, R4 
    /*00015508*/ BL          0x0000000000015508          @ VPSS_DRV_GenSclCfg [R_ARM_CALL: .text+0x22db0] 
    /*0001550c*/ LDR         R2, [SP, #92]               @ 0x5c 
    /*00015510*/ ADD         R1, R5, #288                @ 0x120 
    /*00015514*/ MOV         R3, SL 
    /*00015518*/ STR         R1, [SP, #4] 
    /*0001551c*/ MOV         R0, R4 
    /*00015520*/ MOV         R1, R7 
    /*00015524*/ STR         R5, [SP] 
    /*00015528*/ BL          0x0000000000015528          @ VPSS_DRV_SplitProc [R_ARM_CALL: .text+0x208c0] 
    /*0001552c*/ LDR         R3, [R8, #3112]             @ 0xc28 
    /*00015530*/ MOV         R0, R4 
    /*00015534*/ STR         R3, [R6, #88]               @ 0x58 
    /*00015538*/ BL          0x0000000000015538          @ VPSS_DRV_Prepare3dnrInfo [R_ARM_CALL: .text+0x1d58c] 
    /*0001553c*/ LDR         R1, [R6, #92]               @ 0x5c 
    /*00015540*/ CMP         R1, #0 
    /*00015544*/ BEQ         VPSS_COMM_CreateOneNode_x15808
    /*00015548*/ LDR         LR, [SP, #32] 
    /*0001554c*/ MOV         R3, #168                    @ 0xa8 
    /*00015550*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00015554*/ MOV         R2, #144                    @ 0x90 
    /*00015558*/ MOV         FP, SL 
    /*0001555c*/ MUL         R3, R3, LR 
    /*00015560*/ MUL         R2, R2, R0 
    /*00015564*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*00015568*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*0001556c*/ STR         R0, [SP, #68]               @ 0x44 
    /*00015570*/ LDR         R0, [SP, #28] 
    /*00015574*/ MOV         IP, R3 
    /*00015578*/ STR         R3, [SP, #80]               @ 0x50 
    /*0001557c*/ ADD         R3, LR, #708                @ 0x2c4 
    /*00015580*/ STR         R2, [SP, #76]               @ 0x4c 
    /*00015584*/ ADD         R2, R2, #152                @ 0x98 
    /*00015588*/ MOV         LR, R3 
    /*0001558c*/ ADD         R2, R2, IP 
    /*00015590*/ LDR         R3, [R0, #88]               @ 0x58 
    /*00015594*/ STR         R2, [SP, #84]               @ 0x54 
    /*00015598*/ ADD         R2, LR, #2 
    /*0001559c*/ STR         R2, [SP, #64]               @ 0x40 
    /*000155a0*/ MOV         R2, R0 
    /*000155a4*/ ADD         R0, R0, #60                 @ 0x3c 
    /*000155a8*/ ADD         R2, R2, #8 
    /*000155ac*/ STR         R0, [SP, #44]               @ 0x2c 
    /*000155b0*/ STR         R2, [SP, #48]               @ 0x30 
    VPSS_COMM_CreateOneNode_x155b4:
    /*000155b4*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*000155b8*/ LDR         R2, [R2, #3112]             @ 0xc28 
    /*000155bc*/ CMP         R2, #1 
    /*000155c0*/ BEQ         VPSS_COMM_CreateOneNode_x1573c
    /*000155c4*/ CMP         R3, #0 
    /*000155c8*/ BEQ         VPSS_COMM_CreateOneNode_x156b8
    /*000155cc*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*000155d0*/ MOV         R5, #24 
    /*000155d4*/ LDR         R2, [SP, #80]               @ 0x50 
    /*000155d8*/ MOV         R6, #0 
    /*000155dc*/ MUL         R5, R5, FP 
    /*000155e0*/ ADD         R4, R3, R2 
    /*000155e4*/ LDR         R3, [SP, #72]               @ 0x48 
    /*000155e8*/ LDR         R2, [SP, #64]               @ 0x40 
    /*000155ec*/ ADD         R7, R3, #27648              @ 0x6c00 
    /*000155f0*/ LDR         R3, [PC, #584]              @ 0x0000000000015840 
    /*000155f4*/ ADD         R4, R4, R5 
    /*000155f8*/ LDR         R8, [SP, #44]               @ 0x2c 
    /*000155fc*/ SUB         R3, R3, #8 
    /*00015600*/ STR         R3, [SP, #52]               @ 0x34 
    /*00015604*/ LDR         R3, [SP, #68]               @ 0x44 
    /*00015608*/ ADD         R7, R7, #48                 @ 0x30 
    /*0001560c*/ LDR         R9, [SP, #48]               @ 0x30 
    /*00015610*/ ADD         R3, R3, R2, LSL #2 
    /*00015614*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00015618*/ STR         SL, [SP, #40]               @ 0x28 
    /*0001561c*/ MOV         SL, R8 
    /*00015620*/ ADD         R5, R2, R5 
    /*00015624*/ LDR         R2, [PC, #528]              @ 0x000000000001583c 
    /*00015628*/ STR         R9, [SP, #24] 
    /*0001562c*/ ADD         R4, R2, R4 
    /*00015630*/ ADD         R5, R2, R5 
    /*00015634*/ STR         R3, [SP, #56]               @ 0x38 
    VPSS_COMM_CreateOneNode_x15638:
    /*00015638*/ LDR         R2, [R4, #152]              @ 0x98 
    /*0001563c*/ MOV         R0, R5 
    /*00015640*/ LDR         LR, [SP, #36]               @ 0x24 
    /*00015644*/ ADD         FP, FP, #1 
    /*00015648*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0001564c*/ ADD         R5, R5, #24 
    /*00015650*/ STR         R2, [SL, #4]! 
    /*00015654*/ ADD         R4, R4, #24 
    /*00015658*/ LDRD        R8, [R4, #136]              @ 0x88 
    /*0001565c*/ LDR         R2, [SP, #24] 
    /*00015660*/ LDR         R1, [SP, #32] 
    /*00015664*/ STRD        R8, [R2, #8]! 
    /*00015668*/ STR         R2, [SP, #24] 
    /*0001566c*/ LDR         R2, [SP, #56]               @ 0x38 
    /*00015670*/ LDR         IP, [SP, #92]               @ 0x5c 
    /*00015674*/ LDR         R2, [R2, #8] 
    /*00015678*/ STR         LR, [SP, #16] 
    /*0001567c*/ LDR         LR, [SP, #40]               @ 0x28 
    /*00015680*/ STR         R6, [SP, #12] 
    /*00015684*/ ADD         R6, R6, #1 
    /*00015688*/ STR         R7, [SP] 
    /*0001568c*/ ADD         R7, R7, #856                @ 0x358 
    /*00015690*/ STR         LR, [SP, #8] 
    /*00015694*/ STR         IP, [SP, #4] 
    /*00015698*/ BL          0x0000000000015698          @ VPSS_DRV_MULTI_SetModelCfg [R_ARM_CALL: .text+0x228b8] 
    /*0001569c*/ LDR         R3, [SP, #28] 
    /*000156a0*/ LDR         R3, [R3, #88]               @ 0x58 
    /*000156a4*/ CMP         R3, R6 
    /*000156a8*/ BHI         VPSS_COMM_CreateOneNode_x15638
    /*000156ac*/ LDR         SL, [SP, #40]               @ 0x28 
    VPSS_COMM_CreateOneNode_x156b0:
    /*000156b0*/ LDR         R2, [SP, #28] 
    /*000156b4*/ LDR         R1, [R2, #92]               @ 0x5c 
    VPSS_COMM_CreateOneNode_x156b8:
    /*000156b8*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*000156bc*/ ADD         SL, SL, #1 
    /*000156c0*/ CMP         R1, SL 
    /*000156c4*/ ADD         R2, R2, #12 
    /*000156c8*/ STR         R2, [SP, #44]               @ 0x2c 
    /*000156cc*/ LDR         R2, [SP, #48]               @ 0x30 
    /*000156d0*/ ADD         R2, R2, #24 
    /*000156d4*/ STR         R2, [SP, #48]               @ 0x30 
    /*000156d8*/ BHI         VPSS_COMM_CreateOneNode_x155b4
    VPSS_COMM_CreateOneNode_x156dc:
    /*000156dc*/ LDR         R3, [SP, #72]               @ 0x48 
    /*000156e0*/ MOV         R2, #0 
    /*000156e4*/ LDR         R1, [SP, #28] 
    /*000156e8*/ ADD         R3, R3, #16384              @ 0x4000 
    /*000156ec*/ STR         R2, [R1, #96]               @ 0x60 
    /*000156f0*/ STR         R2, [R1, #100]              @ 0x64 
    /*000156f4*/ LDR         R2, [R3, #196]              @ 0xc4 
    /*000156f8*/ CMP         R2, #0 
    /*000156fc*/ BNE         VPSS_COMM_CreateOneNode_x15724
    VPSS_COMM_CreateOneNode_x15700:
    /*00015700*/ LDR         R2, [SP, #64]               @ 0x40 
    /*00015704*/ LDR         R3, [SP, #68]               @ 0x44 
    /*00015708*/ ADD         R3, R3, R2, LSL #2 
    /*0001570c*/ LDR         R2, [R3, #8] 
    /*00015710*/ ADD         R2, R2, #1 
    /*00015714*/ STR         R2, [R3, #8] 
    VPSS_COMM_CreateOneNode_x15718:
    /*00015718*/ LDR         R0, [SP, #28] 
    /*0001571c*/ ADD         SP, SP, #100                @ 0x64 
    /*00015720*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_COMM_CreateOneNode_x15724:
    /*00015724*/ LDR         R2, [R3, #2524]             @ 0x9dc 
    /*00015728*/ LDR         R1, [SP, #28] 
    /*0001572c*/ STR         R2, [R1, #96]               @ 0x60 
    /*00015730*/ LDR         R3, [R3, #2528]             @ 0x9e0 
    /*00015734*/ STR         R3, [R1, #100]              @ 0x64 
    /*00015738*/ B           VPSS_COMM_CreateOneNode_x15700
    VPSS_COMM_CreateOneNode_x1573c:
    /*0001573c*/ CMP         R3, #0 
    /*00015740*/ BEQ         VPSS_COMM_CreateOneNode_x156b8
    /*00015744*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*00015748*/ MOV         R5, #24 
    /*0001574c*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00015750*/ MOV         R6, #0 
    /*00015754*/ MUL         R5, R5, FP 
    /*00015758*/ ADD         R4, R3, R2 
    /*0001575c*/ LDR         R3, [PC, #220]              @ 0x0000000000015840 
    /*00015760*/ LDR         R2, [SP, #64]               @ 0x40 
    /*00015764*/ SUB         R3, R3, #8 
    /*00015768*/ STR         R3, [SP, #40]               @ 0x28 
    /*0001576c*/ LDR         R3, [SP, #68]               @ 0x44 
    /*00015770*/ ADD         R4, R4, R5 
    /*00015774*/ LDR         R8, [SP, #48]               @ 0x30 
    /*00015778*/ ADD         R9, R3, R2, LSL #2 
    /*0001577c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00015780*/ LDR         R7, [SP, #44]               @ 0x2c 
    /*00015784*/ ADD         R5, R3, R5 
    /*00015788*/ LDR         R3, [PC, #172]              @ 0x000000000001583c 
    /*0001578c*/ STR         R8, [SP, #24] 
    /*00015790*/ ADD         R4, R3, R4 
    /*00015794*/ ADD         R5, R3, R5 
    /*00015798*/ STR         R9, [SP, #52]               @ 0x34 
    VPSS_COMM_CreateOneNode_x1579c:
    /*0001579c*/ LDR         R2, [R4, #152]              @ 0x98 
    /*000157a0*/ MOV         R0, R5 
    /*000157a4*/ LDR         LR, [SP, #36]               @ 0x24 
    /*000157a8*/ ADD         FP, FP, #1 
    /*000157ac*/ LDR         R3, [SP, #40]               @ 0x28 
    /*000157b0*/ ADD         R5, R5, #24 
    /*000157b4*/ STR         R2, [R7, #4]! 
    /*000157b8*/ ADD         R4, R4, #24 
    /*000157bc*/ LDRD        R8, [R4, #136]              @ 0x88 
    /*000157c0*/ LDR         R2, [SP, #24] 
    /*000157c4*/ LDR         R1, [SP, #32] 
    /*000157c8*/ STRD        R8, [R2, #8]! 
    /*000157cc*/ LDR         IP, [SP, #92]               @ 0x5c 
    /*000157d0*/ STR         R2, [SP, #24] 
    /*000157d4*/ LDR         R2, [SP, #52]               @ 0x34 
    /*000157d8*/ LDR         R2, [R2, #8] 
    /*000157dc*/ STR         R6, [SP, #8] 
    /*000157e0*/ ADD         R6, R6, #1 
    /*000157e4*/ STR         LR, [SP, #12] 
    /*000157e8*/ STR         SL, [SP, #4] 
    /*000157ec*/ STR         IP, [SP] 
    /*000157f0*/ BL          0x00000000000157F0          @ VPSS_DRV_MONO_SetModelCfg [R_ARM_CALL: .text+0x238bc] 
    /*000157f4*/ LDR         R3, [SP, #28] 
    /*000157f8*/ LDR         R3, [R3, #88]               @ 0x58 
    /*000157fc*/ CMP         R3, R6 
    /*00015800*/ BHI         VPSS_COMM_CreateOneNode_x1579c
    /*00015804*/ B           VPSS_COMM_CreateOneNode_x156b0
    VPSS_COMM_CreateOneNode_x15808:
    /*00015808*/ LDR         R3, [SP, #32] 
    /*0001580c*/ ADD         R3, R3, #708                @ 0x2c4 
    /*00015810*/ MOV         R2, R3 
    /*00015814*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*00015818*/ ADD         R2, R2, #2 
    /*0001581c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*00015820*/ STR         R2, [SP, #64]               @ 0x40 
    /*00015824*/ STR         R3, [SP, #68]               @ 0x44 
    /*00015828*/ B           VPSS_COMM_CreateOneNode_x156dc
    VPSS_COMM_CreateOneNode_x1582c:
    /*0001582c*/ MOVW        R0, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x513c] 
    /*00015830*/ MOVT        R0, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x513c] 
    /*00015834*/ BL          0x0000000000015834          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00015838*/ B           VPSS_COMM_CreateOneNode_x15718
    /*0001583c*/ ANDEQ       R1, R0, R8, ASR #13 
    /*00015840*/ MULEQ       R0, R8, R0 
FUNC_END VPSS_COMM_CreateOneNode


FUNC_BEGIN VPSS_VI_COMM_PutWait
    /*00015844*/ PUSH        {R4, R5, R6, LR} 
    /*00015848*/ MOVW        R5, #46339                  @ 0xb503 
    /*0001584c*/ LDR         R2, [R0, #100]              @ 0x64 
    /*00015850*/ MOVT        R5, #42366                  @ 0xa57e 
    /*00015854*/ LDR         R4, [R0, #96]               @ 0x60 
    /*00015858*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*0001585c*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*00015860*/ STR         R1, [R0, #108]              @ 0x6c 
    /*00015864*/ MOV         R3, R0 
    /*00015868*/ MOV         R6, #1 
    /*0001586c*/ MUL         R4, R4, R2 
    /*00015870*/ LDR         LR, [IP, #148]              @ 0x94 
    /*00015874*/ ADD         R0, IP, #8 
    /*00015878*/ MOV         R2, R6 
    /*0001587c*/ MOV         R1, R3 
    /*00015880*/ UMULL       R4, R5, R4, R5 
    /*00015884*/ ADD         LR, LR, R5, LSR #16 
    /*00015888*/ STR         LR, [IP, #148]              @ 0x94 
    /*0001588c*/ STR         R6, [R3, #104]              @ 0x68 
    /*00015890*/ BL          0x0000000000015890          @ VPSS_HAL_NodeQueuePutWait [R_ARM_CALL: .text+0x17058] 
    /*00015894*/ MOV         R0, #0 
    /*00015898*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_VI_COMM_PutWait


FUNC_BEGIN VPSS_COMM_IPWorkModeCnt
    /*0001589c*/ MOVW        R2, #0                      @ g_aenVpssIpMode [R_ARM_MOVW_ABS_NC: .bss+0xa18] 
    /*000158a0*/ MOVT        R2, #0                      @ g_aenVpssIpMode [R_ARM_MOVT_ABS: .bss+0xa18] 
    /*000158a4*/ MOV         R1, #0 
    /*000158a8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*000158ac*/ LDR         R0, [R2] 
    /*000158b0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*000158b4*/ MOV         R2, #1 
    /*000158b8*/ CMP         R0, R1 
    /*000158bc*/ STR         R1, [R3, #2920]             @ 0xb68 
    /*000158c0*/ STR         R1, [R3, #2924]             @ 0xb6c 
    /*000158c4*/ STR         R2, [R3, #2928]             @ 0xb70 
    /*000158c8*/ STR         R2, [R3, #2932]             @ 0xb74 
    /*000158cc*/ BNE         VPSS_COMM_IPWorkModeCnt_x158ec
    /*000158d0*/ MOVW        R1, #0                      @ vpss_en [R_ARM_MOVW_ABS_NC: .data+0xec] 
    /*000158d4*/ MOVT        R1, #0                      @ vpss_en [R_ARM_MOVT_ABS: .data+0xec] 
    /*000158d8*/ LDR         R1, [R1] 
    /*000158dc*/ CMP         R1, #0 
    /*000158e0*/ STRNE       R2, [R3, #2920]             @ 0xb68 
    /*000158e4*/ STRNE       R0, [R3, #2928]             @ 0xb70 
    /*000158e8*/ BX          LR 
    VPSS_COMM_IPWorkModeCnt_x158ec:
    /*000158ec*/ CMP         R0, #1 
    /*000158f0*/ BXNE        LR 
    /*000158f4*/ MOVW        R2, #0                      @ vpss_en [R_ARM_MOVW_ABS_NC: .data+0xec] 
    /*000158f8*/ MOVT        R2, #0                      @ vpss_en [R_ARM_MOVT_ABS: .data+0xec] 
    /*000158fc*/ LDR         R2, [R2] 
    /*00015900*/ CMP         R2, #0 
    /*00015904*/ STRNE       R0, [R3, #2924]             @ 0xb6c 
    /*00015908*/ STRNE       R1, [R3, #2932]             @ 0xb74 
    /*0001590c*/ BX          LR 
FUNC_END VPSS_COMM_IPWorkModeCnt


FUNC_BEGIN VPSS_COMM_StartWaitList
    /*00015910*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00015914*/ SUBS        R3, R1, #0 
    /*00015918*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0001591c*/ STR         R3, [SP, #20] 
    /*00015920*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*00015924*/ STR         R0, [SP, #28] 
    /*00015928*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*0001592c*/ STR         R3, [SP, #24] 
    /*00015930*/ BEQ         VPSS_COMM_StartWaitList_x15d48
    /*00015934*/ LDR         R3, [R3, #2932]             @ 0xb74 
    /*00015938*/ CMP         R0, R3 
    /*0001593c*/ MOVNE       R3, #0 
    /*00015940*/ STRNE       R3, [SP, #32] 
    /*00015944*/ STRNE       R3, [SP, #36]               @ 0x24 
    /*00015948*/ BEQ         VPSS_COMM_StartWaitList_x15d84
    VPSS_COMM_StartWaitList_x1594c:
    /*0001594c*/ MOV         R3, #0 
    /*00015950*/ MOV         R4, #1 
    /*00015954*/ STR         R3, [SP, #16] 
    /*00015958*/ MOV         R5, R3 
    /*0001595c*/ STR         R3, [SP, #48]               @ 0x30 
    /*00015960*/ MOVW        R2, #46339                  @ 0xb503 
    /*00015964*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5154] 
    /*00015968*/ MOVT        R2, #42366                  @ 0xa57e 
    /*0001596c*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5154] 
    /*00015970*/ STR         R2, [SP, #40]               @ 0x28 
    /*00015974*/ STR         R3, [SP, #52]               @ 0x34 
    VPSS_COMM_StartWaitList_x15978:
    /*00015978*/ LDR         R1, [SP, #20] 
    /*0001597c*/ LDR         R0, [PC, #1120]             @ 0x0000000000015de4 
    /*00015980*/ BL          0x0000000000015980          @ VPSS_HAL_GetWaitNum [R_ARM_CALL: .text+0x17268] 
    /*00015984*/ CMP         R0, #0 
    /*00015988*/ BEQ         VPSS_COMM_StartWaitList_x15b98
    /*0001598c*/ LDR         R1, [SP, #20] 
    /*00015990*/ LDR         R0, [PC, #1100]             @ 0x0000000000015de4 
    /*00015994*/ BL          0x0000000000015994          @ VPSS_HAL_NodeQueueGetWait [R_ARM_CALL: .text+0x170b8] 
    /*00015998*/ SUBS        FP, R0, #0 
    /*0001599c*/ BEQ         VPSS_COMM_StartWaitList_x15b7c
    VPSS_COMM_StartWaitList_x159a0:
    /*000159a0*/ LDR         R3, [FP, #100]              @ 0x64 
    /*000159a4*/ MOV         R1, #2 
    /*000159a8*/ LDR         R2, [FP, #96]               @ 0x60 
    /*000159ac*/ STR         R1, [FP, #104]              @ 0x68 
    /*000159b0*/ LDR         R1, [SP, #16] 
    /*000159b4*/ MUL         R2, R2, R3 
    /*000159b8*/ LDR         R3, [SP, #40]               @ 0x28 
    /*000159bc*/ LDR         R0, [PC, #1056]             @ 0x0000000000015de4 
    /*000159c0*/ UMULL       R2, R3, R2, R3 
    /*000159c4*/ ADD         R3, R1, R3, LSR #16 
    /*000159c8*/ STR         R3, [SP, #16] 
    /*000159cc*/ BL          0x00000000000159CC          @ VPSS_HAL_NodeQueueGetProcFree [R_ARM_CALL: .text+0x16f1c] 
    /*000159d0*/ SUBS        R6, R0, #0 
    /*000159d4*/ BEQ         VPSS_COMM_StartWaitList_x159f0
    /*000159d8*/ MOV         R1, FP 
    /*000159dc*/ MOV         R2, #128                    @ 0x80 
    /*000159e0*/ BL          0x00000000000159E0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000159e4*/ MOV         R1, R6 
    /*000159e8*/ LDR         R0, [PC, #1012]             @ 0x0000000000015de4 
    /*000159ec*/ BL          0x00000000000159EC          @ VPSS_HAL_NodeQueuePutProc [R_ARM_CALL: .text+0x17164] 
    VPSS_COMM_StartWaitList_x159f0:
    /*000159f0*/ LDR         R1, [SP, #28] 
    /*000159f4*/ LDR         IP, [SP, #24] 
    /*000159f8*/ ADD         R3, R1, #30 
    /*000159fc*/ LDR         R0, [PC, #992]              @ 0x0000000000015de4 
    /*00015a00*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00015a04*/ MOV         R2, R3 
    /*00015a08*/ MOV         R3, FP 
    /*00015a0c*/ ADD         R2, IP, R2, LSL #2 
    /*00015a10*/ LDR         R2, [R2, #12] 
    /*00015a14*/ BL          0x0000000000015A14          @ VPSS_HAL_NodeQueuePutBusy [R_ARM_CALL: .text+0x16f78] 
    /*00015a18*/ CMP         R5, #0 
    /*00015a1c*/ STREQ       FP, [SP, #48]               @ 0x30 
    /*00015a20*/ BEQ         VPSS_COMM_StartWaitList_x15a54
    /*00015a24*/ LDR         R1, [R5, #92]               @ 0x5c 
    /*00015a28*/ LDR         R0, [R5, #88]               @ 0x58 
    /*00015a2c*/ SUB         R1, R1, #1 
    /*00015a30*/ LDRD        R2, [FP, #16] 
    /*00015a34*/ ADD         R1, R1, R1, LSL #1 
    /*00015a38*/ ADD         R1, R1, R0 
    /*00015a3c*/ ADD         R1, R1, #15 
    /*00015a40*/ LDR         R0, [R5, R1, LSL #2] 
    /*00015a44*/ BL          0x0000000000015A44          @ VPSS_HAL_SetNext [R_ARM_CALL: .text+0x264a8] 
    /*00015a48*/ LDRD        R2, [FP, #16] 
    /*00015a4c*/ ORRS        R3, R2, R3 
    /*00015a50*/ BEQ         VPSS_COMM_StartWaitList_x15b5c
    VPSS_COMM_StartWaitList_x15a54:
    /*00015a54*/ LDR         R2, [FP, #92]               @ 0x5c 
    /*00015a58*/ CMP         R2, #0 
    /*00015a5c*/ BEQ         VPSS_COMM_StartWaitList_x15b14
    /*00015a60*/ LDR         R3, [FP, #88]               @ 0x58 
    /*00015a64*/ ADD         SL, FP, #16 
    /*00015a68*/ LDR         R9, [SP, #36]               @ 0x24 
    /*00015a6c*/ ADD         R1, FP, #60                 @ 0x3c 
    /*00015a70*/ MOV         R8, #0 
    /*00015a74*/ STR         R1, [SP, #8] 
    /*00015a78*/ MOV         R1, R2 
    VPSS_COMM_StartWaitList_x15a7c:
    /*00015a7c*/ CMP         R3, #0 
    /*00015a80*/ BEQ         VPSS_COMM_StartWaitList_x15af4
    /*00015a84*/ LDR         R6, [SP, #8] 
    /*00015a88*/ SUB         R3, R8, #1 
    /*00015a8c*/ MOV         R7, SL 
    /*00015a90*/ MOV         R5, #0 
    /*00015a94*/ ADD         R3, R3, R3, LSL #1 
    /*00015a98*/ STR         R3, [SP, #12] 
    VPSS_COMM_StartWaitList_x15a9c:
    /*00015a9c*/ STR         R4, [FP, #8] 
    /*00015aa0*/ MOV         R1, R4 
    /*00015aa4*/ LDR         R0, [R6, #4] 
    /*00015aa8*/ ADD         R4, R4, #1 
    /*00015aac*/ BL          0x0000000000015AAC          @ VPSS_HAL_SetNodeID [R_ARM_CALL: .text+0x264b0] 
    /*00015ab0*/ MOV         R1, R9 
    /*00015ab4*/ LDR         R0, [R6, #4]! 
    /*00015ab8*/ BL          0x0000000000015AB8          @ VPSS_HAL_SetMask [R_ARM_CALL: .text+0x26490] 
    /*00015abc*/ CMP         R5, #0 
    /*00015ac0*/ BNE         VPSS_COMM_StartWaitList_x15b2c
    /*00015ac4*/ CMP         R8, #0 
    /*00015ac8*/ BEQ         VPSS_COMM_StartWaitList_x15ad8
    /*00015acc*/ LDR         R3, [FP, #92]               @ 0x5c 
    /*00015ad0*/ CMP         R3, #2 
    /*00015ad4*/ BLS         VPSS_COMM_StartWaitList_x15b3c
    VPSS_COMM_StartWaitList_x15ad8:
    /*00015ad8*/ LDR         R3, [FP, #88]               @ 0x58 
    /*00015adc*/ ADD         R5, R5, #1 
    /*00015ae0*/ ADD         R7, R7, #8 
    /*00015ae4*/ CMP         R3, R5 
    /*00015ae8*/ BHI         VPSS_COMM_StartWaitList_x15a9c
    /*00015aec*/ LDR         R2, [FP, #92]               @ 0x5c 
    /*00015af0*/ MOV         R1, R2 
    VPSS_COMM_StartWaitList_x15af4:
    /*00015af4*/ ADD         R8, R8, #1 
    /*00015af8*/ LDR         R2, [SP, #8] 
    /*00015afc*/ CMP         R1, R8 
    /*00015b00*/ ADD         SL, SL, #24 
    /*00015b04*/ ADD         R2, R2, #12 
    /*00015b08*/ STR         R2, [SP, #8] 
    /*00015b0c*/ BHI         VPSS_COMM_StartWaitList_x15a7c
    /*00015b10*/ MOV         R2, R1 
    VPSS_COMM_StartWaitList_x15b14:
    /*00015b14*/ LDR         R3, [SP, #16] 
    /*00015b18*/ LDR         R1, [SP, #32] 
    /*00015b1c*/ CMP         R3, R1 
    /*00015b20*/ BCS         VPSS_COMM_StartWaitList_x15c84
    /*00015b24*/ MOV         R5, FP 
    /*00015b28*/ B           VPSS_COMM_StartWaitList_x15978
    VPSS_COMM_StartWaitList_x15b2c:
    /*00015b2c*/ LDRD        R2, [R7] 
    /*00015b30*/ LDR         R0, [R6, #-4] 
    /*00015b34*/ BL          0x0000000000015B34          @ VPSS_HAL_SetNext [R_ARM_CALL: .text+0x264a8] 
    /*00015b38*/ B           VPSS_COMM_StartWaitList_x15ad8
    VPSS_COMM_StartWaitList_x15b3c:
    /*00015b3c*/ LDR         R0, [SP, #12] 
    /*00015b40*/ LDR         R1, [FP, #88]               @ 0x58 
    /*00015b44*/ LDRD        R2, [SL] 
    /*00015b48*/ ADD         R1, R0, R1 
    /*00015b4c*/ ADD         R1, R1, #15 
    /*00015b50*/ LDR         R0, [FP, R1, LSL #2] 
    /*00015b54*/ BL          0x0000000000015B54          @ VPSS_HAL_SetNext [R_ARM_CALL: .text+0x264a8] 
    /*00015b58*/ B           VPSS_COMM_StartWaitList_x15ad8
    VPSS_COMM_StartWaitList_x15b5c:
    /*00015b5c*/ MOVW        R3, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x51ac] 
    /*00015b60*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x516c] 
    /*00015b64*/ MOVT        R3, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x51ac] 
    /*00015b68*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x516c] 
    /*00015b6c*/ MOVW        R2, #1649                   @ 0x671 
    /*00015b70*/ LDR         R1, [PC, #624]              @ 0x0000000000015de8 
    /*00015b74*/ BL          0x0000000000015B74          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00015b78*/ B           VPSS_COMM_StartWaitList_x15a54
    VPSS_COMM_StartWaitList_x15b7c:
    /*00015b7c*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x516c] 
    /*00015b80*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00015b84*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x516c] 
    /*00015b88*/ MOVW        R2, #1625                   @ 0x659 
    /*00015b8c*/ LDR         R1, [PC, #596]              @ 0x0000000000015de8 
    /*00015b90*/ BL          0x0000000000015B90          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00015b94*/ B           VPSS_COMM_StartWaitList_x159a0
    VPSS_COMM_StartWaitList_x15b98:
    /*00015b98*/ CMP         R5, #0 
    /*00015b9c*/ BEQ         VPSS_COMM_StartWaitList_x15c7c
    /*00015ba0*/ LDR         R3, [R5, #92]               @ 0x5c 
    /*00015ba4*/ LDR         R2, [R5, #88]               @ 0x58 
    /*00015ba8*/ SUB         R3, R3, #1 
    /*00015bac*/ LDR         R1, [SP, #36]               @ 0x24 
    /*00015bb0*/ ADD         R3, R3, R3, LSL #1 
    /*00015bb4*/ ADD         R3, R3, R2 
    /*00015bb8*/ ADD         R3, R3, #15 
    /*00015bbc*/ LDR         R0, [R5, R3, LSL #2] 
    /*00015bc0*/ BL          0x0000000000015BC0          @ VPSS_HAL_SetMask [R_ARM_CALL: .text+0x26490] 
    /*00015bc4*/ LDR         R1, [R5, #92]               @ 0x5c 
    /*00015bc8*/ LDR         R0, [R5, #88]               @ 0x58 
    /*00015bcc*/ MOV         R2, #0 
    /*00015bd0*/ SUB         R1, R1, #1 
    /*00015bd4*/ MOV         R3, #0 
    /*00015bd8*/ ADD         R1, R1, R1, LSL #1 
    /*00015bdc*/ ADD         R1, R1, R0 
    /*00015be0*/ ADD         R1, R1, #15 
    /*00015be4*/ LDR         R0, [R5, R1, LSL #2] 
    /*00015be8*/ BL          0x0000000000015BE8          @ VPSS_HAL_SetNext [R_ARM_CALL: .text+0x264a8] 
    /*00015bec*/ LDR         R4, [SP, #28] 
    /*00015bf0*/ LDR         R6, [SP, #24] 
    /*00015bf4*/ ADD         R3, R6, R4, LSL #2 
    /*00015bf8*/ MOV         R0, R4 
    /*00015bfc*/ STR         R5, [R3, #128]              @ 0x80 
    /*00015c00*/ BL          0x0000000000015C00          @ VPSS_DRV_ClkEnable [R_ARM_CALL: .text+0x1f588] 
    /*00015c04*/ MOV         R0, #2 
    /*00015c08*/ BL          0x0000000000015C08          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015c0c*/ LDR         R3, [R0] 
    /*00015c10*/ BLX         R3 
    /*00015c14*/ LDR         R3, [PC, #464]              @ 0x0000000000015dec 
    /*00015c18*/ ADD         IP, R4, #736                @ 0x2e0 
    /*00015c1c*/ LDR         LR, [PC, #448]              @ 0x0000000000015de4 
    /*00015c20*/ ADD         IP, IP, #2 
    /*00015c24*/ ADD         IP, LR, IP, LSL #2 
    /*00015c28*/ STRD        R0, [R3, #-8] 
    /*00015c2c*/ MOV         R0, R4 
    /*00015c30*/ LDR         R3, [SP, #48]               @ 0x30 
    /*00015c34*/ LDR         R4, [SP, #20] 
    /*00015c38*/ LDRD        R2, [R3, #16] 
    /*00015c3c*/ MOV         R1, R4 
    /*00015c40*/ STM         SP, {R1, IP} 
    /*00015c44*/ BL          0x0000000000015C44          @ VPSS_HAL_Start [R_ARM_CALL: .text+0x264b8] 
    /*00015c48*/ CMP         R4, #0 
    /*00015c4c*/ BEQ         VPSS_COMM_StartWaitList_x15d6c
    /*00015c50*/ LDR         R3, [R6, #148]              @ 0x94 
    /*00015c54*/ LDR         R2, [SP, #16] 
    /*00015c58*/ SUB         R3, R3, R2 
    /*00015c5c*/ STR         R3, [R6, #148]              @ 0x94 
    VPSS_COMM_StartWaitList_x15c60:
    /*00015c60*/ LDR         R3, [SP, #28] 
    /*00015c64*/ LDR         R2, [SP, #24] 
    /*00015c68*/ ADD         R3, R3, #732                @ 0x2dc 
    /*00015c6c*/ ADD         R3, R2, R3, LSL #2 
    /*00015c70*/ LDR         R2, [R3, #8] 
    /*00015c74*/ ADD         R2, R2, #1 
    /*00015c78*/ STR         R2, [R3, #8] 
    VPSS_COMM_StartWaitList_x15c7c:
    /*00015c7c*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00015c80*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_COMM_StartWaitList_x15c84:
    /*00015c84*/ SUB         R2, R2, #1 
    /*00015c88*/ LDR         R3, [FP, #88]               @ 0x58 
    /*00015c8c*/ LDR         R1, [SP, #36]               @ 0x24 
    /*00015c90*/ ADD         R2, R2, R2, LSL #1 
    /*00015c94*/ ADD         R3, R2, R3 
    /*00015c98*/ ADD         R3, R3, #15 
    /*00015c9c*/ LDR         R0, [FP, R3, LSL #2] 
    /*00015ca0*/ BL          0x0000000000015CA0          @ VPSS_HAL_SetMask [R_ARM_CALL: .text+0x26490] 
    /*00015ca4*/ LDR         R1, [FP, #92]               @ 0x5c 
    /*00015ca8*/ LDR         R0, [FP, #88]               @ 0x58 
    /*00015cac*/ MOV         R2, #0 
    /*00015cb0*/ SUB         R1, R1, #1 
    /*00015cb4*/ MOV         R3, #0 
    /*00015cb8*/ ADD         R1, R1, R1, LSL #1 
    /*00015cbc*/ ADD         R1, R1, R0 
    /*00015cc0*/ ADD         R1, R1, #15 
    /*00015cc4*/ LDR         R0, [FP, R1, LSL #2] 
    /*00015cc8*/ BL          0x0000000000015CC8          @ VPSS_HAL_SetNext [R_ARM_CALL: .text+0x264a8] 
    /*00015ccc*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*00015cd0*/ LDR         R5, [SP, #28] 
    /*00015cd4*/ LDR         R4, [SP, #24] 
    /*00015cd8*/ ADD         R3, R4, R2, LSL #2 
    /*00015cdc*/ MOV         R0, R5 
    /*00015ce0*/ STR         FP, [R3, #8] 
    /*00015ce4*/ BL          0x0000000000015CE4          @ VPSS_DRV_ClkEnable [R_ARM_CALL: .text+0x1f588] 
    /*00015ce8*/ MOV         R0, #2 
    /*00015cec*/ BL          0x0000000000015CEC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015cf0*/ LDR         R3, [R0] 
    /*00015cf4*/ BLX         R3 
    /*00015cf8*/ LDR         R2, [PC, #236]              @ 0x0000000000015dec 
    /*00015cfc*/ ADD         R3, R5, #736                @ 0x2e0 
    /*00015d00*/ LDR         IP, [PC, #220]              @ 0x0000000000015de4 
    /*00015d04*/ ADD         R3, R3, #2 
    /*00015d08*/ ADD         IP, IP, R3, LSL #2 
    /*00015d0c*/ LDR         R3, [SP, #48]               @ 0x30 
    /*00015d10*/ STRD        R0, [R2, #-8] 
    /*00015d14*/ MOV         R0, R5 
    /*00015d18*/ LDR         R5, [SP, #20] 
    /*00015d1c*/ LDRD        R2, [R3, #16] 
    /*00015d20*/ MOV         R1, R5 
    /*00015d24*/ STM         SP, {R1, IP} 
    /*00015d28*/ BL          0x0000000000015D28          @ VPSS_HAL_Start [R_ARM_CALL: .text+0x264b8] 
    /*00015d2c*/ CMP         R5, #0 
    /*00015d30*/ BEQ         VPSS_COMM_StartWaitList_x15d6c
    /*00015d34*/ LDR         R3, [R4, #148]              @ 0x94 
    /*00015d38*/ LDR         R1, [SP, #16] 
    /*00015d3c*/ SUB         R3, R3, R1 
    /*00015d40*/ STR         R3, [R4, #148]              @ 0x94 
    /*00015d44*/ B           VPSS_COMM_StartWaitList_x15c60
    VPSS_COMM_StartWaitList_x15d48:
    /*00015d48*/ LDR         R3, [R3, #2928]             @ 0xb70 
    /*00015d4c*/ LDR         R2, [SP, #28] 
    /*00015d50*/ CMP         R3, R2 
    /*00015d54*/ BEQ         VPSS_COMM_StartWaitList_x15db4
    /*00015d58*/ LDR         R3, [SP, #20] 
    /*00015d5c*/ STR         R3, [SP, #32] 
    /*00015d60*/ MOVW        R3, #28814                  @ 0x708e 
    /*00015d64*/ STR         R3, [SP, #36]               @ 0x24 
    /*00015d68*/ B           VPSS_COMM_StartWaitList_x1594c
    VPSS_COMM_StartWaitList_x15d6c:
    /*00015d6c*/ LDR         R2, [SP, #24] 
    /*00015d70*/ LDR         R1, [SP, #16] 
    /*00015d74*/ LDR         R3, [R2, #140]              @ 0x8c 
    /*00015d78*/ SUB         R3, R3, R1 
    /*00015d7c*/ STR         R3, [R2, #140]              @ 0x8c 
    /*00015d80*/ B           VPSS_COMM_StartWaitList_x15c60
    VPSS_COMM_StartWaitList_x15d84:
    /*00015d84*/ LDR         R4, [SP, #24] 
    /*00015d88*/ MOV         R2, #1 
    /*00015d8c*/ MOV         R3, #0 
    /*00015d90*/ STR         R2, [SP, #32] 
    /*00015d94*/ STR         R3, [SP, #36]               @ 0x24 
    /*00015d98*/ LDR         R1, [R4, #2924]             @ 0xb6c 
    /*00015d9c*/ LDR         R0, [R4, #148]              @ 0x94 
    /*00015da0*/ ADD         R0, R1, R0 
    /*00015da4*/ SUB         R0, R0, #1 
    /*00015da8*/ BL          0x0000000000015DA8          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00015dac*/ STR         R0, [R4, #152]              @ 0x98 
    /*00015db0*/ B           VPSS_COMM_StartWaitList_x1594c
    VPSS_COMM_StartWaitList_x15db4:
    /*00015db4*/ LDR         R4, [SP, #24] 
    /*00015db8*/ MOVW        R2, #28814                  @ 0x708e 
    /*00015dbc*/ STR         R2, [SP, #36]               @ 0x24 
    /*00015dc0*/ LDR         R1, [R4, #2920]             @ 0xb68 
    /*00015dc4*/ LDR         R0, [R4, #140]              @ 0x8c 
    /*00015dc8*/ ADD         R0, R1, R0 
    /*00015dcc*/ SUB         R0, R0, #1 
    /*00015dd0*/ BL          0x0000000000015DD0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00015dd4*/ MOV         R3, R4 
    /*00015dd8*/ STR         R0, [SP, #32] 
    /*00015ddc*/ STR         R0, [R3, #144]              @ 0x90 
    /*00015de0*/ B           VPSS_COMM_StartWaitList_x1594c
    /*00015de4*/ ANDEQ       R1, R0, R8, ASR #13 
    /*00015de8*/ STRDEQ      R0, [R0], -IP 
    /*00015dec*/ ANDEQ       R3, R0, R0, LSL #1 
FUNC_END VPSS_COMM_StartWaitList


FUNC_BEGIN VPSS_COMM_SubmitOneNode
    /*00015df0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00015df4*/ MOVW        LR, #46339                  @ 0xb503 
    /*00015df8*/ LDR         R2, [R0, #100]              @ 0x64 
    /*00015dfc*/ MOVT        LR, #42366                  @ 0xa57e 
    /*00015e00*/ LDR         R6, [R0, #96]               @ 0x60 
    /*00015e04*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*00015e08*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*00015e0c*/ STR         R1, [R0, #108]              @ 0x6c 
    /*00015e10*/ MOV         R3, R0 
    /*00015e14*/ MOV         R5, R1 
    /*00015e18*/ MUL         R6, R6, R2 
    /*00015e1c*/ LDR         IP, [R4, #140]              @ 0x8c 
    /*00015e20*/ MOV         R1, R0 
    /*00015e24*/ MOV         R2, #0 
    /*00015e28*/ ADD         R0, R4, #8 
    /*00015e2c*/ MOV         R8, #1 
    /*00015e30*/ UMULL       R6, R7, R6, LR 
    /*00015e34*/ ADD         IP, IP, R7, LSR #16 
    /*00015e38*/ STR         IP, [R4, #140]              @ 0x8c 
    /*00015e3c*/ STR         R8, [R3, #104]              @ 0x68 
    /*00015e40*/ BL          0x0000000000015E40          @ VPSS_HAL_NodeQueuePutWait [R_ARM_CALL: .text+0x17058] 
    /*00015e44*/ ADD         R3, R4, R5, LSL #2 
    /*00015e48*/ MOV         R1, R5 
    /*00015e4c*/ ADD         R0, R4, #8 
    /*00015e50*/ LDR         R2, [R3, #132]              @ 0x84 
    /*00015e54*/ BL          0x0000000000015E54          @ VPSS_HAL_GetBusyNum [R_ARM_CALL: .text+0x1727c] 
    /*00015e58*/ SUBS        R1, R0, #0 
    /*00015e5c*/ BNE         VPSS_COMM_SubmitOneNode_x15e74
    /*00015e60*/ MOVW        R3, #0                      @ vpss_en [R_ARM_MOVW_ABS_NC: .data+0xec] 
    /*00015e64*/ MOVT        R3, #0                      @ vpss_en [R_ARM_MOVT_ABS: .data+0xec] 
    /*00015e68*/ LDR         R3, [R3, R5, LSL #2] 
    /*00015e6c*/ CMP         R3, #0 
    /*00015e70*/ BNE         VPSS_COMM_SubmitOneNode_x15e88
    VPSS_COMM_SubmitOneNode_x15e74:
    /*00015e74*/ LDR         R3, [R4, #2944]             @ 0xb80 
    /*00015e78*/ MOV         R0, #0 
    /*00015e7c*/ ADD         R3, R3, #1 
    /*00015e80*/ STR         R3, [R4, #2944]             @ 0xb80 
    /*00015e84*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_COMM_SubmitOneNode_x15e88:
    /*00015e88*/ MOV         R0, R5 
    /*00015e8c*/ BL          0x0000000000015E8C          @ VPSS_COMM_StartWaitList [R_ARM_CALL: .text+0x15910] 
    /*00015e90*/ B           VPSS_COMM_SubmitOneNode_x15e74
FUNC_END VPSS_COMM_SubmitOneNode


FUNC_BEGIN VPSS_VI_ProcessNode
    /*00015e94*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00015e98*/ MOV         R4, R0 
    /*00015e9c*/ MOV         R0, #92                     @ 0x5c 
    /*00015ea0*/ SUB         SP, SP, #396                @ 0x18c 
    /*00015ea4*/ MUL         R3, R0, R4 
    /*00015ea8*/ MOVW        R6, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015eac*/ MOVW        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00015eb0*/ MOVT        R6, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015eb4*/ MOVT        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00015eb8*/ MOV         SL, R1 
    /*00015ebc*/ ADD         R1, SP, #28 
    /*00015ec0*/ LDR         FP, [R2, R4, LSL #2] 
    /*00015ec4*/ MOV         R0, R3 
    /*00015ec8*/ STR         R3, [SP, #16] 
    /*00015ecc*/ ADD         R9, R0, #48                 @ 0x30 
    /*00015ed0*/ MOVW        R3, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00015ed4*/ MOVT        R3, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00015ed8*/ ADD         R9, R6, R9 
    /*00015edc*/ LDR         R5, [R3, R4, LSL #2] 
    /*00015ee0*/ MOV         R0, R9 
    /*00015ee4*/ BL          0x0000000000015EE4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00015ee8*/ CMP         FP, #0 
    /*00015eec*/ CMPNE       R5, #0 
    /*00015ef0*/ MOVEQ       R7, #1 
    /*00015ef4*/ MOVNE       R7, #0 
    /*00015ef8*/ BNE         VPSS_VI_ProcessNode_x15f80
    /*00015efc*/ MOVW        R3, #1788                   @ 0x6fc 
    /*00015f00*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x51d0] 
    /*00015f04*/ STR         R3, [SP] 
    /*00015f08*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x51d0] 
    /*00015f0c*/ STR         R4, [SP, #4] 
    /*00015f10*/ MOV         R1, #7 
    /*00015f14*/ LDR         R3, [PC, #408]              @ 0x00000000000160b4 
    /*00015f18*/ MOV         R0, #6 
    /*00015f1c*/ BL          0x0000000000015F1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_VI_ProcessNode_x15f20:
    /*00015f20*/ MOV         R3, #92                     @ 0x5c 
    /*00015f24*/ MOV         R2, #23 
    /*00015f28*/ MUL         R3, R3, R4 
    /*00015f2c*/ MLA         R4, R2, R4, SL 
    /*00015f30*/ MOV         R2, #0 
    /*00015f34*/ ADD         R1, R6, R3 
    /*00015f38*/ LDR         R1, [R1, #4] 
    /*00015f3c*/ ADD         R4, R4, #2 
    /*00015f40*/ CMP         R1, R2 
    /*00015f44*/ STR         R2, [R6, R4, LSL #2] 
    /*00015f48*/ BNE         VPSS_VI_ProcessNode_x15f58
    /*00015f4c*/ LDR         R3, [R6, R3] 
    /*00015f50*/ CMP         R3, R2 
    /*00015f54*/ BEQ         VPSS_VI_ProcessNode_x15f68
    VPSS_VI_ProcessNode_x15f58:
    /*00015f58*/ LDR         R3, [SP, #16] 
    /*00015f5c*/ ADD         R0, R3, #36                 @ 0x24 
    /*00015f60*/ ADD         R0, R6, R0 
    /*00015f64*/ BL          0x0000000000015F64          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VPSS_VI_ProcessNode_x15f68:
    /*00015f68*/ MOV         R0, R9 
    /*00015f6c*/ ADD         R1, SP, #28 
    /*00015f70*/ BL          0x0000000000015F70          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015f74*/ MOV         R0, #0 
    /*00015f78*/ ADD         SP, SP, #396                @ 0x18c 
    /*00015f7c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_VI_ProcessNode_x15f80:
    /*00015f80*/ MOV         R0, R4 
    /*00015f84*/ BL          0x0000000000015F84          @ VPSS_UpdateAttrFromUserSet [R_ARM_CALL: .text+0x22b4] 
    /*00015f88*/ LDR         R3, [R5, #28] 
    /*00015f8c*/ CMP         R3, #1 
    /*00015f90*/ STR         R3, [SP, #12] 
    /*00015f94*/ BEQ         VPSS_VI_ProcessNode_x16058
    /*00015f98*/ ADD         R3, SL, #548                @ 0x224 
    /*00015f9c*/ STR         R7, [SP, #12] 
    /*00015fa0*/ ADD         R3, R3, #2 
    /*00015fa4*/ STR         R3, [SP, #20] 
    VPSS_VI_ProcessNode_x15fa8:
    /*00015fa8*/ ADD         R1, SP, #28 
    /*00015fac*/ MOV         R0, R9 
    /*00015fb0*/ BL          0x0000000000015FB0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015fb4*/ MOVW        R7, #8536                   @ 0x2158 
    /*00015fb8*/ MOV         R3, #72                     @ 0x48 
    /*00015fbc*/ MOV         R8, #0 
    /*00015fc0*/ MLA         R5, R3, SL, R5 
    /*00015fc4*/ MLA         R7, R7, SL, FP 
    /*00015fc8*/ ADD         R5, R5, #18688              @ 0x4900 
    /*00015fcc*/ ADD         R5, R5, #60                 @ 0x3c 
    /*00015fd0*/ ADD         R7, R7, #2640               @ 0xa50 
    /*00015fd4*/ ADD         R7, R7, #8 
    VPSS_VI_ProcessNode_x15fd8:
    /*00015fd8*/ LDR         R3, [R5] 
    /*00015fdc*/ CMP         R3, #0 
    /*00015fe0*/ BEQ         VPSS_VI_ProcessNode_x16018
    /*00015fe4*/ LDR         IP, [SP, #12] 
    /*00015fe8*/ MOV         R1, R8 
    /*00015fec*/ ADD         R3, SP, #32 
    /*00015ff0*/ MOV         R2, SL 
    /*00015ff4*/ CMP         IP, #1 
    /*00015ff8*/ MOV         R0, R4 
    /*00015ffc*/ BEQ         VPSS_VI_ProcessNode_x16048
    /*00016000*/ BL          0x0000000000016000          @ VPSS_PreparePicInfo [R_ARM_CALL: .text+0xcee8] 
    /*00016004*/ ADD         R3, SP, #32 
    /*00016008*/ MOV         R2, SL 
    /*0001600c*/ MOV         R1, R8 
    /*00016010*/ MOV         R0, R4 
    /*00016014*/ BL          0x0000000000016014          @ VPSS_VgsScale [R_ARM_CALL: .text+0xd4b8] 
    VPSS_VI_ProcessNode_x16018:
    /*00016018*/ ADD         R8, R8, #1 
    /*0001601c*/ ADD         R5, R5, #24 
    /*00016020*/ CMP         R8, #3 
    /*00016024*/ ADD         R7, R7, #776                @ 0x308 
    /*00016028*/ BNE         VPSS_VI_ProcessNode_x15fd8
    /*0001602c*/ ADD         R1, SP, #28 
    /*00016030*/ MOV         R0, R9 
    /*00016034*/ BL          0x0000000000016034          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016038*/ LDR         R2, [SP, #20] 
    /*0001603c*/ MOV         R3, #0 
    /*00016040*/ STR         R3, [FP, R2, LSL #2] 
    /*00016044*/ B           VPSS_VI_ProcessNode_x15f20
    VPSS_VI_ProcessNode_x16048:
    /*00016048*/ MOV         R1, #10 
    /*0001604c*/ MOV         R0, R7 
    /*00016050*/ BL          0x0000000000016050          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*00016054*/ B           VPSS_VI_ProcessNode_x16018
    VPSS_VI_ProcessNode_x16058:
    /*00016058*/ LDR         R3, [R5, #32] 
    /*0001605c*/ CMP         R3, #1 
    /*00016060*/ ADD         R3, SL, #548                @ 0x224 
    /*00016064*/ ADDNE       R3, R3, #2 
    /*00016068*/ STRNE       R7, [SP, #12] 
    /*0001606c*/ STRNE       R3, [SP, #20] 
    /*00016070*/ BNE         VPSS_VI_ProcessNode_x15fa8
    /*00016074*/ ADD         R3, R3, #2 
    /*00016078*/ STR         R3, [SP, #20] 
    /*0001607c*/ LDR         R3, [FP, R3, LSL #2] 
    /*00016080*/ LDR         R3, [R3, #264]              @ 0x108 
    /*00016084*/ ANDS        R3, R3, #4 
    /*00016088*/ STREQ       R3, [SP, #12] 
    /*0001608c*/ BEQ         VPSS_VI_ProcessNode_x15fa8
    /*00016090*/ MOVW        R3, #1799                   @ 0x707 
    /*00016094*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5200] 
    /*00016098*/ STR         R3, [SP] 
    /*0001609c*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5200] 
    /*000160a0*/ LDR         R3, [PC, #12]               @ 0x00000000000160b4 
    /*000160a4*/ MOV         R1, #7 
    /*000160a8*/ MOV         R0, #4 
    /*000160ac*/ BL          0x00000000000160AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000160b0*/ B           VPSS_VI_ProcessNode_x15fa8
    /*000160b4*/ ANDEQ       R0, R0, R4, LSL SP 
FUNC_END VPSS_VI_ProcessNode


FUNC_BEGIN VPSS_VI_ListInt
    /*000160b8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000160bc*/ SUB         SP, SP, #36                 @ 0x24 
    /*000160c0*/ MOV         R4, R0 
    /*000160c4*/ MOVW        SL, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*000160c8*/ STM         SP, {R0, R1} 
    /*000160cc*/ ADD         R1, SP, #24 
    /*000160d0*/ MOVW        R0, #0                      @ g_VpssCommLock [R_ARM_MOVW_ABS_NC: .bss+0xa34] 
    /*000160d4*/ MOVT        R0, #0                      @ g_VpssCommLock [R_ARM_MOVT_ABS: .bss+0xa34] 
    /*000160d8*/ BL          0x00000000000160D8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000160dc*/ ADD         R3, R4, #30 
    /*000160e0*/ MOVT        SL, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*000160e4*/ MOV         R0, R4 
    /*000160e8*/ ADD         R3, SL, R3, LSL #2 
    /*000160ec*/ ADD         R8, SL, #8 
    /*000160f0*/ LDR         R2, [SL, #2948]             @ 0xb84 
    /*000160f4*/ LDR         FP, [R3, #12] 
    /*000160f8*/ ADD         R2, R2, #1 
    /*000160fc*/ STR         R2, [SL, #2948]             @ 0xb84 
    /*00016100*/ CLZ         R2, FP 
    /*00016104*/ ADDS        FP, FP, #0 
    /*00016108*/ LSR         R2, R2, #5 
    /*0001610c*/ MOVNE       FP, #1 
    /*00016110*/ STR         R2, [R3, #12] 
    /*00016114*/ BL          0x0000000000016114          @ VPSS_DRV_ClkDisable [R_ARM_CALL: .text+0x1f600] 
    /*00016118*/ ADD         R1, SP, #24 
    /*0001611c*/ MOVW        R0, #0                      @ g_VpssCommLock [R_ARM_MOVW_ABS_NC: .bss+0xa34] 
    /*00016120*/ MOVT        R0, #0                      @ g_VpssCommLock [R_ARM_MOVT_ABS: .bss+0xa34] 
    /*00016124*/ BL          0x0000000000016124          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016128*/ LSL         R3, R4, #1 
    /*0001612c*/ ADD         R2, R3, FP 
    /*00016130*/ ADD         R9, R3, #3 
    /*00016134*/ ADD         R9, R9, FP 
    /*00016138*/ ADD         R3, SL, R2, LSL #3 
    /*0001613c*/ ADD         R9, R8, R9, LSL #3 
    /*00016140*/ LDR         R3, [R3, #36]               @ 0x24 
    /*00016144*/ ADD         R9, R9, #4 
    /*00016148*/ CMP         R9, R3 
    /*0001614c*/ LDR         R7, [R3] 
    /*00016150*/ BEQ         VPSS_VI_ListInt_x16458
    /*00016154*/ MOVW        R6, #0                      @ g_VpssCommLock [R_ARM_MOVW_ABS_NC: .bss+0xa34] 
    /*00016158*/ SUB         R7, R7, #116                @ 0x74 
    /*0001615c*/ MOVT        R6, #0                      @ g_VpssCommLock [R_ARM_MOVT_ABS: .bss+0xa34] 
    /*00016160*/ ADD         R5, SL, #76                 @ 0x4c 
    /*00016164*/ SUB         R4, R3, #116                @ 0x74 
    /*00016168*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5154] 
    /*0001616c*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5154] 
    /*00016170*/ STR         R3, [SP, #8] 
    VPSS_VI_ListInt_x16174:
    /*00016174*/ ADD         R1, SP, #24 
    /*00016178*/ MOV         R0, R6 
    /*0001617c*/ BL          0x000000000001617C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016180*/ MOV         R3, FP 
    /*00016184*/ LDR         R2, [SP] 
    /*00016188*/ MOV         R1, R4 
    /*0001618c*/ MOV         R0, R8 
    /*00016190*/ BL          0x0000000000016190          @ VPSS_HAL_NodeQueueGetBusy [R_ARM_CALL: .text+0x16fc4] 
    /*00016194*/ ADD         R1, SP, #24 
    /*00016198*/ MOV         R0, R6 
    /*0001619c*/ BL          0x000000000001619C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000161a0*/ LDR         R3, [SL, #76]               @ 0x4c 
    /*000161a4*/ CMP         R3, R5 
    /*000161a8*/ SUB         R1, R3, #116                @ 0x74 
    /*000161ac*/ LDR         R2, [R3] 
    /*000161b0*/ MOVNE       IP, #3 
    /*000161b4*/ SUB         R2, R2, #116                @ 0x74 
    /*000161b8*/ BEQ         VPSS_VI_ListInt_x161e4
    VPSS_VI_ListInt_x161bc:
    /*000161bc*/ LDR         R0, [R1, #112]              @ 0x70 
    /*000161c0*/ MOV         R3, R2 
    /*000161c4*/ LDR         LR, [R4, #112]              @ 0x70 
    /*000161c8*/ CMP         LR, R0 
    /*000161cc*/ STREQ       IP, [R1, #104]              @ 0x68 
    /*000161d0*/ LDR         R0, [R3, #116]!             @ 0x74 
    /*000161d4*/ MOV         R1, R2 
    /*000161d8*/ CMP         R3, R5 
    /*000161dc*/ SUB         R2, R0, #116                @ 0x74 
    /*000161e0*/ BNE         VPSS_VI_ListInt_x161bc
    VPSS_VI_ListInt_x161e4:
    /*000161e4*/ CMP         R4, #0 
    /*000161e8*/ BEQ         VPSS_VI_ListInt_x16430
    VPSS_VI_ListInt_x161ec:
    /*000161ec*/ ADD         R1, SP, #24 
    /*000161f0*/ MOV         R0, R6 
    /*000161f4*/ BL          0x00000000000161F4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000161f8*/ MOV         R1, R4 
    /*000161fc*/ MOV         R0, R8 
    /*00016200*/ MOV         R4, R7 
    /*00016204*/ BL          0x0000000000016204          @ VPSS_HAL_NodeQueuePutFree [R_ARM_CALL: .text+0x17208] 
    /*00016208*/ ADD         R1, SP, #24 
    /*0001620c*/ MOV         R0, R6 
    /*00016210*/ BL          0x0000000000016210          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016214*/ MOV         R3, R7 
    /*00016218*/ LDR         R2, [R3, #116]!             @ 0x74 
    /*0001621c*/ CMP         R3, R9 
    /*00016220*/ SUB         R7, R2, #116                @ 0x74 
    /*00016224*/ BNE         VPSS_VI_ListInt_x16174
    VPSS_VI_ListInt_x16228:
    /*00016228*/ MOV         R2, #64                     @ 0x40 
    /*0001622c*/ MOV         R1, #0 
    /*00016230*/ LDR         R0, [PC, #552]              @ 0x0000000000016460 
    /*00016234*/ BL          0x0000000000016234          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00016238*/ LDR         R3, [SL, #76]               @ 0x4c 
    /*0001623c*/ CMP         R3, R5 
    /*00016240*/ SUB         R6, R3, #116                @ 0x74 
    /*00016244*/ LDR         R4, [R3] 
    /*00016248*/ SUB         R4, R4, #116                @ 0x74 
    /*0001624c*/ BEQ         VPSS_VI_ListInt_x163e8
    /*00016250*/ MOVW        R8, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x36b8] 
    /*00016254*/ MOVW        SL, #0                      @ g_VpssCommLock [R_ARM_MOVW_ABS_NC: .bss+0xa34] 
    /*00016258*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001625c*/ MOVT        R8, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x36b8] 
    /*00016260*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00016264*/ MOVT        SL, #0                      @ g_VpssCommLock [R_ARM_MOVT_ABS: .bss+0xa34] 
    /*00016268*/ STR         R3, [SP, #8] 
    /*0001626c*/ B           VPSS_VI_ListInt_x16294
    VPSS_VI_ListInt_x16270:
    /*00016270*/ LDR         R3, [R6] 
    /*00016274*/ MOV         R2, #1 
    /*00016278*/ ADD         R3, R8, R3, LSL #2 
    /*0001627c*/ STR         R2, [R3, #-432]             @ 0xfffffe50 
    VPSS_VI_ListInt_x16280:
    /*00016280*/ MOV         R6, R4 
    /*00016284*/ LDR         R3, [R4, #116]!             @ 0x74 
    /*00016288*/ CMP         R4, R5 
    /*0001628c*/ SUB         R4, R3, #116                @ 0x74 
    /*00016290*/ BEQ         VPSS_VI_ListInt_x163e8
    VPSS_VI_ListInt_x16294:
    /*00016294*/ LDR         R3, [R6, #104]              @ 0x68 
    /*00016298*/ CMP         R3, #3 
    /*0001629c*/ BNE         VPSS_VI_ListInt_x16270
    /*000162a0*/ LDR         R0, [R6] 
    /*000162a4*/ ADD         R3, R8, R0, LSL #2 
    /*000162a8*/ LDR         R3, [R3, #-432]             @ 0xfffffe50 
    /*000162ac*/ CMP         R3, #0 
    /*000162b0*/ BNE         VPSS_VI_ListInt_x16280
    /*000162b4*/ LDR         R2, [SP, #4] 
    /*000162b8*/ CMP         R2, #0 
    /*000162bc*/ BEQ         VPSS_VI_ListInt_x1644c
    /*000162c0*/ LDR         R2, [SP, #8] 
    /*000162c4*/ MOVW        R9, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000162c8*/ MOVT        R9, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000162cc*/ MOV         R7, R3 
    /*000162d0*/ MOVW        FP, #18748                  @ 0x493c 
    /*000162d4*/ LDR         R2, [R2, R0, LSL #2] 
    /*000162d8*/ MOV         R1, R2 
    /*000162dc*/ STR         R2, [SP, #12] 
    /*000162e0*/ LDR         R2, [SP] 
    /*000162e4*/ ADD         R2, R2, #548                @ 0x224 
    /*000162e8*/ ADD         R2, R2, #2 
    /*000162ec*/ STR         R3, [R1, R2, LSL #2] 
    /*000162f0*/ MOV         R2, #24 
    /*000162f4*/ LDR         IP, [R6] 
    /*000162f8*/ MOV         R3, #72                     @ 0x48 
    VPSS_VI_ListInt_x162fc:
    /*000162fc*/ LDR         R0, [R6, #108]              @ 0x6c 
    /*00016300*/ LDR         R1, [R9, IP, LSL #2] 
    /*00016304*/ MUL         LR, R3, R0 
    /*00016308*/ MLA         LR, R2, R7, LR 
    /*0001630c*/ ADD         R1, R1, LR 
    /*00016310*/ LDR         R1, [R1, FP] 
    /*00016314*/ CMP         R1, #0 
    /*00016318*/ BNE         VPSS_VI_ListInt_x163f4
    VPSS_VI_ListInt_x1631c:
    /*0001631c*/ ADD         R7, R7, #1 
    /*00016320*/ CMP         R7, #3 
    /*00016324*/ BNE         VPSS_VI_ListInt_x162fc
    /*00016328*/ MOV         R7, #92                     @ 0x5c 
    /*0001632c*/ MOVW        R9, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00016330*/ MUL         R0, R7, IP 
    /*00016334*/ MOVT        R9, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00016338*/ ADD         R1, SP, #28 
    /*0001633c*/ ADD         R0, R0, #48                 @ 0x30 
    /*00016340*/ ADD         R0, R9, R0 
    /*00016344*/ BL          0x0000000000016344          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016348*/ LDR         R3, [R6] 
    /*0001634c*/ LDR         R0, [SP] 
    /*00016350*/ MOV         R1, #23 
    /*00016354*/ MOV         R2, #0 
    /*00016358*/ MLA         R3, R1, R3, R0 
    /*0001635c*/ ADD         R3, R3, #2 
    /*00016360*/ STR         R2, [R9, R3, LSL #2] 
    /*00016364*/ LDR         R3, [R6] 
    /*00016368*/ MUL         R7, R7, R3 
    /*0001636c*/ ADD         R2, R9, R7 
    /*00016370*/ LDR         R2, [R2, #4] 
    /*00016374*/ CMP         R2, #0 
    /*00016378*/ BNE         VPSS_VI_ListInt_x163d0
    /*0001637c*/ LDR         R2, [R9, R7] 
    /*00016380*/ CMP         R2, #0 
    /*00016384*/ BNE         VPSS_VI_ListInt_x163d0
    VPSS_VI_ListInt_x16388:
    /*00016388*/ MOV         R2, #92                     @ 0x5c 
    /*0001638c*/ ADD         R1, SP, #28 
    /*00016390*/ MLA         R3, R2, R3, R9 
    /*00016394*/ ADD         R0, R3, #48                 @ 0x30 
    /*00016398*/ BL          0x0000000000016398          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VPSS_VI_ListInt_x1639c:
    /*0001639c*/ ADD         R1, SP, #24 
    /*000163a0*/ MOV         R0, SL 
    /*000163a4*/ BL          0x00000000000163A4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000163a8*/ MOV         R1, R6 
    /*000163ac*/ LDR         R0, [PC, #176]              @ 0x0000000000016464 
    /*000163b0*/ BL          0x00000000000163B0          @ VPSS_HAL_NodeQueueGetProc [R_ARM_CALL: .text+0x17190] 
    /*000163b4*/ MOV         R1, R6 
    /*000163b8*/ LDR         R0, [PC, #164]              @ 0x0000000000016464 
    /*000163bc*/ BL          0x00000000000163BC          @ VPSS_HAL_NodeQueuePutProcFree [R_ARM_CALL: .text+0x17234] 
    /*000163c0*/ ADD         R1, SP, #24 
    /*000163c4*/ MOV         R0, SL 
    /*000163c8*/ BL          0x00000000000163C8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000163cc*/ B           VPSS_VI_ListInt_x16280
    VPSS_VI_ListInt_x163d0:
    /*000163d0*/ MOV         R2, #92                     @ 0x5c 
    /*000163d4*/ MLA         R3, R2, R3, R9 
    /*000163d8*/ ADD         R0, R3, #36                 @ 0x24 
    /*000163dc*/ BL          0x00000000000163DC          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000163e0*/ LDR         R3, [R6] 
    /*000163e4*/ B           VPSS_VI_ListInt_x16388
    VPSS_VI_ListInt_x163e8:
    /*000163e8*/ MOV         R0, #0 
    /*000163ec*/ ADD         SP, SP, #36                 @ 0x24 
    /*000163f0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_VI_ListInt_x163f4:
    /*000163f4*/ MOVW        IP, #8536                   @ 0x2158 
    /*000163f8*/ MOVW        R1, #2648                   @ 0xa58 
    /*000163fc*/ MLA         R0, IP, R0, R1 
    /*00016400*/ MOV         IP, #776                    @ 0x308 
    /*00016404*/ STR         R3, [SP, #20] 
    /*00016408*/ MOV         R1, #10 
    /*0001640c*/ LDR         R3, [SP, #12] 
    /*00016410*/ STR         R2, [SP, #16] 
    /*00016414*/ MLA         R0, IP, R7, R0 
    /*00016418*/ ADD         R0, R3, R0 
    /*0001641c*/ BL          0x000000000001641C          @ VPSS_DRV_PutVb [R_ARM_CALL: .text+0x18278] 
    /*00016420*/ LDR         IP, [R6] 
    /*00016424*/ LDR         R3, [SP, #20] 
    /*00016428*/ LDR         R2, [SP, #16] 
    /*0001642c*/ B           VPSS_VI_ListInt_x1631c
    VPSS_VI_ListInt_x16430:
    /*00016430*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x516c] 
    /*00016434*/ LDR         R3, [SP, #8] 
    /*00016438*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x516c] 
    /*0001643c*/ MOV         R2, #1904                   @ 0x770 
    /*00016440*/ LDR         R1, [PC, #32]               @ 0x0000000000016468 
    /*00016444*/ BL          0x0000000000016444          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016448*/ B           VPSS_VI_ListInt_x161ec
    VPSS_VI_ListInt_x1644c:
    /*0001644c*/ LDR         R1, [R6, #108]              @ 0x6c 
    /*00016450*/ BL          0x0000000000016450          @ VpssGrpIsr [R_ARM_CALL: .text+0x232c] 
    /*00016454*/ B           VPSS_VI_ListInt_x1639c
    VPSS_VI_ListInt_x16458:
    /*00016458*/ ADD         R5, SL, #76                 @ 0x4c 
    /*0001645c*/ B           VPSS_VI_ListInt_x16228
    /*00016460*/ ANDEQ       R3, R0, R8, LSL #10 
    /*00016464*/ ANDEQ       R1, R0, R8, ASR #13 
    /*00016468*/ ANDEQ       R0, R0, R8, LSR #26 
FUNC_END VPSS_VI_ListInt


FUNC_BEGIN VPSS_COMM_HalListInt
    /*0001646c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00016470*/ SUB         SP, SP, #28 
    /*00016474*/ MOV         FP, R0 
    /*00016478*/ MOVW        R0, #0                      @ g_VpssCommLock [R_ARM_MOVW_ABS_NC: .bss+0xa34] 
    /*0001647c*/ STR         R1, [SP, #8] 
    /*00016480*/ MOVT        R0, #0                      @ g_VpssCommLock [R_ARM_MOVT_ABS: .bss+0xa34] 
    /*00016484*/ ADD         R1, SP, #20 
    /*00016488*/ MOVW        R9, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*0001648c*/ BL          0x000000000001648C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016490*/ ADD         R3, FP, #30 
    /*00016494*/ MOVT        R9, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*00016498*/ MOV         R0, FP 
    /*0001649c*/ ADD         R3, R9, R3, LSL #2 
    /*000164a0*/ ADD         R8, R9, #8 
    /*000164a4*/ LDR         R2, [R9, #2948]             @ 0xb84 
    /*000164a8*/ LDR         SL, [R3, #12] 
    /*000164ac*/ ADD         R2, R2, #1 
    /*000164b0*/ STR         R2, [R9, #2948]             @ 0xb84 
    /*000164b4*/ CLZ         R2, SL 
    /*000164b8*/ ADDS        SL, SL, #0 
    /*000164bc*/ LSR         R2, R2, #5 
    /*000164c0*/ MOVNE       SL, #1 
    /*000164c4*/ STR         R2, [R3, #12] 
    /*000164c8*/ BL          0x00000000000164C8          @ VPSS_DRV_ClkDisable [R_ARM_CALL: .text+0x1f600] 
    /*000164cc*/ MOV         R0, FP 
    /*000164d0*/ MOV         R1, #0 
    /*000164d4*/ BL          0x00000000000164D4          @ VPSS_COMM_StartWaitList [R_ARM_CALL: .text+0x15910] 
    /*000164d8*/ ADD         R1, SP, #20 
    /*000164dc*/ MOVW        R0, #0                      @ g_VpssCommLock [R_ARM_MOVW_ABS_NC: .bss+0xa34] 
    /*000164e0*/ MOVT        R0, #0                      @ g_VpssCommLock [R_ARM_MOVT_ABS: .bss+0xa34] 
    /*000164e4*/ BL          0x00000000000164E4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000164e8*/ LSL         R3, FP, #1 
    /*000164ec*/ ADD         R2, R3, SL 
    /*000164f0*/ ADD         R3, R3, #3 
    /*000164f4*/ ADD         R3, R3, SL 
    /*000164f8*/ ADD         R2, R9, R2, LSL #3 
    /*000164fc*/ ADD         R3, R8, R3, LSL #3 
    /*00016500*/ LDR         R2, [R2, #36]               @ 0x24 
    /*00016504*/ ADD         R3, R3, #4 
    /*00016508*/ STR         R3, [SP, #4] 
    /*0001650c*/ CMP         R3, R2 
    /*00016510*/ LDR         R7, [R2] 
    /*00016514*/ BEQ         VPSS_COMM_HalListInt_x166e4
    /*00016518*/ MOVW        R6, #0                      @ g_VpssCommLock [R_ARM_MOVW_ABS_NC: .bss+0xa34] 
    /*0001651c*/ SUB         R4, R2, #116                @ 0x74 
    /*00016520*/ SUB         R7, R7, #116                @ 0x74 
    /*00016524*/ MOVT        R6, #0                      @ g_VpssCommLock [R_ARM_MOVT_ABS: .bss+0xa34] 
    /*00016528*/ ADD         R5, R9, #76                 @ 0x4c 
    /*0001652c*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5154] 
    /*00016530*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5154] 
    /*00016534*/ STR         R3, [SP, #12] 
    VPSS_COMM_HalListInt_x16538:
    /*00016538*/ ADD         R1, SP, #20 
    /*0001653c*/ MOV         R0, R6 
    /*00016540*/ BL          0x0000000000016540          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016544*/ MOV         R3, SL 
    /*00016548*/ MOV         R2, FP 
    /*0001654c*/ MOV         R1, R4 
    /*00016550*/ MOV         R0, R8 
    /*00016554*/ BL          0x0000000000016554          @ VPSS_HAL_NodeQueueGetBusy [R_ARM_CALL: .text+0x16fc4] 
    /*00016558*/ ADD         R1, SP, #20 
    /*0001655c*/ MOV         R0, R6 
    /*00016560*/ BL          0x0000000000016560          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016564*/ LDR         R3, [R9, #76]               @ 0x4c 
    /*00016568*/ CMP         R3, R5 
    /*0001656c*/ SUB         R1, R3, #116                @ 0x74 
    /*00016570*/ LDR         R2, [R3] 
    /*00016574*/ MOVNE       IP, #3 
    /*00016578*/ SUB         R2, R2, #116                @ 0x74 
    /*0001657c*/ BEQ         VPSS_COMM_HalListInt_x165a8
    VPSS_COMM_HalListInt_x16580:
    /*00016580*/ LDR         R0, [R1, #112]              @ 0x70 
    /*00016584*/ MOV         R3, R2 
    /*00016588*/ LDR         LR, [R4, #112]              @ 0x70 
    /*0001658c*/ CMP         LR, R0 
    /*00016590*/ STREQ       IP, [R1, #104]              @ 0x68 
    /*00016594*/ LDR         R0, [R3, #116]!             @ 0x74 
    /*00016598*/ MOV         R1, R2 
    /*0001659c*/ CMP         R3, R5 
    /*000165a0*/ SUB         R2, R0, #116                @ 0x74 
    /*000165a4*/ BNE         VPSS_COMM_HalListInt_x16580
    VPSS_COMM_HalListInt_x165a8:
    /*000165a8*/ CMP         R4, #0 
    /*000165ac*/ BEQ         VPSS_COMM_HalListInt_x166c8
    VPSS_COMM_HalListInt_x165b0:
    /*000165b0*/ ADD         R1, SP, #20 
    /*000165b4*/ MOV         R0, R6 
    /*000165b8*/ BL          0x00000000000165B8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000165bc*/ MOV         R1, R4 
    /*000165c0*/ MOV         R0, R8 
    /*000165c4*/ MOV         R4, R7 
    /*000165c8*/ BL          0x00000000000165C8          @ VPSS_HAL_NodeQueuePutFree [R_ARM_CALL: .text+0x17208] 
    /*000165cc*/ ADD         R1, SP, #20 
    /*000165d0*/ MOV         R0, R6 
    /*000165d4*/ BL          0x00000000000165D4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000165d8*/ MOV         R3, R7 
    /*000165dc*/ LDR         R2, [R3, #116]!             @ 0x74 
    /*000165e0*/ LDR         R1, [SP, #4] 
    /*000165e4*/ SUB         R7, R2, #116                @ 0x74 
    /*000165e8*/ CMP         R3, R1 
    /*000165ec*/ BNE         VPSS_COMM_HalListInt_x16538
    VPSS_COMM_HalListInt_x165f0:
    /*000165f0*/ MOV         R2, #64                     @ 0x40 
    /*000165f4*/ MOV         R1, #0 
    /*000165f8*/ LDR         R0, [PC, #236]              @ 0x00000000000166ec 
    /*000165fc*/ BL          0x00000000000165FC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00016600*/ LDR         R3, [R9, #76]               @ 0x4c 
    /*00016604*/ CMP         R3, R5 
    /*00016608*/ SUB         R4, R3, #116                @ 0x74 
    /*0001660c*/ LDR         R3, [R3] 
    /*00016610*/ SUB         R3, R3, #116                @ 0x74 
    /*00016614*/ BEQ         VPSS_COMM_HalListInt_x166bc
    /*00016618*/ MOVW        R6, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x36b8] 
    /*0001661c*/ MOVW        R7, #0                      @ g_VpssCommLock [R_ARM_MOVW_ABS_NC: .bss+0xa34] 
    /*00016620*/ LDR         R8, [PC, #200]              @ 0x00000000000166f0 
    /*00016624*/ MOVT        R6, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x36b8] 
    /*00016628*/ MOVT        R7, #0                      @ g_VpssCommLock [R_ARM_MOVT_ABS: .bss+0xa34] 
    /*0001662c*/ MOV         R9, #1 
    /*00016630*/ B           VPSS_COMM_HalListInt_x16654
    VPSS_COMM_HalListInt_x16634:
    /*00016634*/ LDR         R2, [R4] 
    /*00016638*/ ADD         R2, R6, R2, LSL #2 
    /*0001663c*/ STR         R9, [R2, #-432]             @ 0xfffffe50 
    VPSS_COMM_HalListInt_x16640:
    /*00016640*/ MOV         R4, R3 
    /*00016644*/ LDR         R2, [R3, #116]!             @ 0x74 
    /*00016648*/ CMP         R3, R5 
    /*0001664c*/ SUB         R3, R2, #116                @ 0x74 
    /*00016650*/ BEQ         VPSS_COMM_HalListInt_x166bc
    VPSS_COMM_HalListInt_x16654:
    /*00016654*/ LDR         R2, [R4, #104]              @ 0x68 
    /*00016658*/ CMP         R2, #3 
    /*0001665c*/ BNE         VPSS_COMM_HalListInt_x16634
    /*00016660*/ LDR         R0, [R4] 
    /*00016664*/ ADD         R2, R6, R0, LSL #2 
    /*00016668*/ LDR         R2, [R2, #-432]             @ 0xfffffe50 
    /*0001666c*/ CMP         R2, #0 
    /*00016670*/ BNE         VPSS_COMM_HalListInt_x16640
    /*00016674*/ LDR         R2, [SP, #8] 
    /*00016678*/ LDR         R1, [R4, #108]              @ 0x6c 
    /*0001667c*/ STR         R3, [SP, #4] 
    /*00016680*/ BL          0x0000000000016680          @ VpssGrpIsr [R_ARM_CALL: .text+0x232c] 
    /*00016684*/ ADD         R1, SP, #20 
    /*00016688*/ MOV         R0, R7 
    /*0001668c*/ BL          0x000000000001668C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016690*/ MOV         R1, R4 
    /*00016694*/ MOV         R0, R8 
    /*00016698*/ BL          0x0000000000016698          @ VPSS_HAL_NodeQueueGetProc [R_ARM_CALL: .text+0x17190] 
    /*0001669c*/ MOV         R1, R4 
    /*000166a0*/ MOV         R0, R8 
    /*000166a4*/ BL          0x00000000000166A4          @ VPSS_HAL_NodeQueuePutProcFree [R_ARM_CALL: .text+0x17234] 
    /*000166a8*/ ADD         R1, SP, #20 
    /*000166ac*/ MOV         R0, R7 
    /*000166b0*/ BL          0x00000000000166B0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000166b4*/ LDR         R3, [SP, #4] 
    /*000166b8*/ B           VPSS_COMM_HalListInt_x16640
    VPSS_COMM_HalListInt_x166bc:
    /*000166bc*/ MOV         R0, #0 
    /*000166c0*/ ADD         SP, SP, #28 
    /*000166c4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_COMM_HalListInt_x166c8:
    /*000166c8*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x516c] 
    /*000166cc*/ LDR         R3, [SP, #12] 
    /*000166d0*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x516c] 
    /*000166d4*/ MOVW        R2, #2030                   @ 0x7ee 
    /*000166d8*/ LDR         R1, [PC, #20]               @ 0x00000000000166f4 
    /*000166dc*/ BL          0x00000000000166DC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000166e0*/ B           VPSS_COMM_HalListInt_x165b0
    VPSS_COMM_HalListInt_x166e4:
    /*000166e4*/ ADD         R5, R9, #76                 @ 0x4c 
    /*000166e8*/ B           VPSS_COMM_HalListInt_x165f0
    /*000166ec*/ ANDEQ       R3, R0, R8, LSL #10 
    /*000166f0*/ ANDEQ       R1, R0, R8, ASR #13 
    /*000166f4*/ ANDEQ       R0, R0, R8, LSR SP 
FUNC_END VPSS_COMM_HalListInt


FUNC_BEGIN VPSS_COMM_HalLowdelayInt
    /*000166f8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000166fc*/ SUB         SP, SP, #28 
    /*00016700*/ MOV         R5, R0 
    /*00016704*/ ADD         R1, SP, #20 
    /*00016708*/ STR         R0, [SP, #4] 
    /*0001670c*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*00016710*/ MOVW        R0, #0                      @ g_VpssCommLock [R_ARM_MOVW_ABS_NC: .bss+0xa34] 
    /*00016714*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*00016718*/ MOVT        R0, #0                      @ g_VpssCommLock [R_ARM_MOVT_ABS: .bss+0xa34] 
    /*0001671c*/ LSL         R7, R5, #1 
    /*00016720*/ BL          0x0000000000016720          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00016724*/ ADD         R3, R6, R5, LSL #2 
    /*00016728*/ ADD         R1, SP, #20 
    /*0001672c*/ MOVW        R0, #0                      @ g_VpssCommLock [R_ARM_MOVW_ABS_NC: .bss+0xa34] 
    /*00016730*/ LDR         R4, [R3, #132]              @ 0x84 
    /*00016734*/ MOVT        R0, #0                      @ g_VpssCommLock [R_ARM_MOVT_ABS: .bss+0xa34] 
    /*00016738*/ BL          0x0000000000016738          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001673c*/ ADD         R3, R7, R4 
    /*00016740*/ ADD         R4, R4, #3 
    /*00016744*/ ADD         R7, R7, R4 
    /*00016748*/ ADD         R3, R6, R3, LSL #3 
    /*0001674c*/ ADD         R7, R6, R7, LSL #3 
    /*00016750*/ LDR         R3, [R3, #36]               @ 0x24 
    /*00016754*/ ADD         R7, R7, #12 
    /*00016758*/ CMP         R7, R3 
    /*0001675c*/ LDR         R4, [R3] 
    /*00016760*/ BEQ         VPSS_COMM_HalLowdelayInt_x16878
    /*00016764*/ SUB         R5, R3, #116                @ 0x74 
    /*00016768*/ MOVW        R8, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001676c*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5154] 
    /*00016770*/ SUB         R4, R4, #116                @ 0x74 
    /*00016774*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5154] 
    /*00016778*/ MOVT        R8, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001677c*/ STR         R3, [SP, #8] 
    /*00016780*/ MOVW        R3, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x516c] 
    /*00016784*/ MOVT        R3, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x516c] 
    /*00016788*/ STR         R3, [SP, #12] 
    /*0001678c*/ B           VPSS_COMM_HalLowdelayInt_x167d0
    VPSS_COMM_HalLowdelayInt_x16790:
    /*00016790*/ LDR         R9, [R8, SL, LSL #2] 
    /*00016794*/ ADD         R1, SP, #20 
    /*00016798*/ MOVW        R0, #0                      @ g_VpssCommLock [R_ARM_MOVW_ABS_NC: .bss+0xa34] 
    /*0001679c*/ MOVT        R0, #0                      @ g_VpssCommLock [R_ARM_MOVT_ABS: .bss+0xa34] 
    /*000167a0*/ ADD         R9, R9, #12288              @ 0x3000 
    /*000167a4*/ LDR         FP, [R9, #3484]             @ 0xd9c 
    /*000167a8*/ BL          0x00000000000167A8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000167ac*/ LDR         R1, [R5, #8] 
    /*000167b0*/ LDR         R2, [R6, #2912]             @ 0xb60 
    /*000167b4*/ CMP         R1, R2 
    /*000167b8*/ BCC         VPSS_COMM_HalLowdelayInt_x16858
    VPSS_COMM_HalLowdelayInt_x167bc:
    /*000167bc*/ MOV         R5, R4 
    /*000167c0*/ LDR         R3, [R4, #116]!             @ 0x74 
    /*000167c4*/ CMP         R4, R7 
    /*000167c8*/ SUB         R4, R3, #116                @ 0x74 
    /*000167cc*/ BEQ         VPSS_COMM_HalLowdelayInt_x16878
    VPSS_COMM_HalLowdelayInt_x167d0:
    /*000167d0*/ CMP         R5, #0 
    /*000167d4*/ BEQ         VPSS_COMM_HalLowdelayInt_x16884
    VPSS_COMM_HalLowdelayInt_x167d8:
    /*000167d8*/ ADD         R1, SP, #20 
    /*000167dc*/ MOVW        R0, #0                      @ g_VpssCommLock [R_ARM_MOVW_ABS_NC: .bss+0xa34] 
    /*000167e0*/ MOVT        R0, #0                      @ g_VpssCommLock [R_ARM_MOVT_ABS: .bss+0xa34] 
    /*000167e4*/ BL          0x00000000000167E4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000167e8*/ LDR         R1, [R5, #8] 
    /*000167ec*/ LDR         R2, [R6, #2912]             @ 0xb60 
    /*000167f0*/ LDR         SL, [R5] 
    /*000167f4*/ CMP         R1, R2 
    /*000167f8*/ BNE         VPSS_COMM_HalLowdelayInt_x16790
    /*000167fc*/ LDR         FP, [R8, SL, LSL #2] 
    /*00016800*/ ADD         R1, SP, #20 
    /*00016804*/ MOVW        R0, #0                      @ g_VpssCommLock [R_ARM_MOVW_ABS_NC: .bss+0xa34] 
    /*00016808*/ MOVT        R0, #0                      @ g_VpssCommLock [R_ARM_MOVT_ABS: .bss+0xa34] 
    /*0001680c*/ ADD         FP, FP, #12288              @ 0x3000 
    /*00016810*/ LDR         R9, [FP, #3484]             @ 0xd9c 
    /*00016814*/ BL          0x0000000000016814          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016818*/ LDR         R1, [R5, #8] 
    /*0001681c*/ LDR         R2, [R6, #2912]             @ 0xb60 
    /*00016820*/ CMP         R1, R2 
    /*00016824*/ BCS         VPSS_COMM_HalLowdelayInt_x16844
    /*00016828*/ LDR         R2, [FP, #3488]             @ 0xda0 
    /*0001682c*/ CMP         R2, #1 
    /*00016830*/ BNE         VPSS_COMM_HalLowdelayInt_x16844
    /*00016834*/ LDR         R2, [SP, #4] 
    /*00016838*/ MOV         R1, R9 
    /*0001683c*/ MOV         R0, SL 
    /*00016840*/ BL          0x0000000000016840          @ VpssOfflineSendLowDelayFrame [R_ARM_CALL: .text+0xcf94] 
    VPSS_COMM_HalLowdelayInt_x16844:
    /*00016844*/ MOV         R1, R9 
    /*00016848*/ MOV         R0, SL 
    /*0001684c*/ LDR         R2, [SP, #4] 
    /*00016850*/ BL          0x0000000000016850          @ VpssSendLowDelayFrame [R_ARM_CALL: .text+0xa998] 
    /*00016854*/ B           VPSS_COMM_HalLowdelayInt_x167bc
    VPSS_COMM_HalLowdelayInt_x16858:
    /*00016858*/ LDR         R2, [R9, #3488]             @ 0xda0 
    /*0001685c*/ CMP         R2, #1 
    /*00016860*/ BNE         VPSS_COMM_HalLowdelayInt_x167bc
    /*00016864*/ MOV         R1, FP 
    /*00016868*/ MOV         R0, SL 
    /*0001686c*/ LDR         R2, [SP, #4] 
    /*00016870*/ BL          0x0000000000016870          @ VpssOfflineSendLowDelayFrame [R_ARM_CALL: .text+0xcf94] 
    /*00016874*/ B           VPSS_COMM_HalLowdelayInt_x167bc
    VPSS_COMM_HalLowdelayInt_x16878:
    /*00016878*/ MOV         R0, #0 
    /*0001687c*/ ADD         SP, SP, #28 
    /*00016880*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_COMM_HalLowdelayInt_x16884:
    /*00016884*/ LDR         R3, [SP, #8] 
    /*00016888*/ MOVW        R2, #2091                   @ 0x82b 
    /*0001688c*/ LDR         R1, [PC, #8]                @ 0x000000000001689c 
    /*00016890*/ LDR         R0, [SP, #12] 
    /*00016894*/ BL          0x0000000000016894          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016898*/ B           VPSS_COMM_HalLowdelayInt_x167d8
    /*0001689c*/ ANDEQ       R0, R0, R0, ASR SP 
FUNC_END VPSS_COMM_HalLowdelayInt


FUNC_BEGIN VpssChnFrameRateStatistic
    /*000168a0*/ MOV         IP, #11 
    /*000168a4*/ MUL         R0, IP, R0 
    /*000168a8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000168ac*/ SUB         SP, SP, #12 
    /*000168b0*/ ADD         IP, R0, R1 
    /*000168b4*/ MOVW        LR, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*000168b8*/ STM         SP, {R2, R3} 
    /*000168bc*/ ADD         R3, IP, #268                @ 0x10c 
    /*000168c0*/ ADD         R3, R3, #1 
    /*000168c4*/ MOVT        LR, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*000168c8*/ MOV         R4, R2 
    /*000168cc*/ LDR         R2, [SP, #4] 
    /*000168d0*/ ADD         R3, LR, R3, LSL #3 
    /*000168d4*/ MOVW        R8, #16960                  @ 0x4240 
    /*000168d8*/ MOVT        R8, #15 
    /*000168dc*/ ADD         R7, IP, #10 
    /*000168e0*/ LDR         R9, [R3, #2940]             @ 0xb7c 
    /*000168e4*/ LDR         R6, [R3, #2936]             @ 0xb78 
    /*000168e8*/ ADD         R7, LR, R7, LSL #2 
    /*000168ec*/ SUB         R2, R2, R9 
    /*000168f0*/ MOVW        R9, #16959                  @ 0x423f 
    /*000168f4*/ SUB         R4, R4, R6 
    /*000168f8*/ MOVT        R9, #15 
    /*000168fc*/ MLA         R2, R8, R4, R2 
    /*00016900*/ LDR         R4, [R7, #2936]             @ 0xb78 
    /*00016904*/ ADD         R4, R4, #1 
    /*00016908*/ STR         R4, [R7, #2936]             @ 0xb78 
    /*0001690c*/ CMP         R2, R9 
    /*00016910*/ BLS         VpssChnFrameRateStatistic_x16950
    /*00016914*/ ADD         R7, IP, #186                @ 0xba 
    /*00016918*/ ADD         IP, IP, #360                @ 0x168 
    /*0001691c*/ ADD         IP, IP, #2 
    /*00016920*/ MOVW        R8, #33919                  @ 0x847f 
    /*00016924*/ ADD         R7, LR, R7, LSL #2 
    /*00016928*/ MOVT        R8, #30 
    /*0001692c*/ CMP         R2, R8 
    /*00016930*/ ADD         IP, LR, IP, LSL #2 
    /*00016934*/ LDR         R2, [R7, #2936]             @ 0xb78 
    /*00016938*/ ADDLS       R6, R6, #1 
    /*0001693c*/ STR         R4, [R7, #2936]             @ 0xb78 
    /*00016940*/ STRLS       R6, [R3, #2936]             @ 0xb78 
    /*00016944*/ SUB         R4, R4, R2 
    /*00016948*/ STR         R4, [IP, #2936]             @ 0xb78 
    /*0001694c*/ BHI         VpssChnFrameRateStatistic_x16958
    VpssChnFrameRateStatistic_x16950:
    /*00016950*/ ADD         SP, SP, #12 
    /*00016954*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssChnFrameRateStatistic_x16958:
    /*00016958*/ ADD         R3, R1, #632                @ 0x278 
    /*0001695c*/ ADD         LR, LR, #8 
    /*00016960*/ ADD         R3, R3, #3 
    /*00016964*/ MOV         R1, SP 
    /*00016968*/ ADD         R0, R0, R3 
    /*0001696c*/ MOV         R2, #8 
    /*00016970*/ ADD         R0, LR, R0, LSL #3 
    /*00016974*/ BL          0x0000000000016974          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00016978*/ ADD         SP, SP, #12 
    /*0001697c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
FUNC_END VpssChnFrameRateStatistic


FUNC_BEGIN VPSS_COMM_VI_EarlyIrqProc
    /*00016980*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00016984*/ MOV         R4, #92                     @ 0x5c 
    /*00016988*/ MUL         R6, R4, R0 
    /*0001698c*/ MOVW        R4, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00016990*/ MOVT        R4, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00016994*/ SUB         SP, SP, #8 
    /*00016998*/ MOV         R5, R0 
    /*0001699c*/ ADD         R1, SP, #4 
    /*000169a0*/ ADD         R8, R6, #48                 @ 0x30 
    /*000169a4*/ ADD         R8, R8, R4 
    /*000169a8*/ MOV         R0, R8 
    /*000169ac*/ BL          0x00000000000169AC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000169b0*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000169b4*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000169b8*/ LDR         R7, [R3, R5, LSL #2] 
    /*000169bc*/ CMP         R7, #0 
    /*000169c0*/ BEQ         VPSS_COMM_VI_EarlyIrqProc_x16ad0
    /*000169c4*/ MOV         R0, R5 
    /*000169c8*/ BL          0x00000000000169C8          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*000169cc*/ CMP         R0, #1 
    /*000169d0*/ BNE         VPSS_COMM_VI_EarlyIrqProc_x16ad0
    /*000169d4*/ LDR         R3, [R7, #2056]             @ 0x808 
    /*000169d8*/ CMP         R3, #0 
    /*000169dc*/ BEQ         VPSS_COMM_VI_EarlyIrqProc_x16ad0
    /*000169e0*/ LDR         R3, [R4, R6] 
    /*000169e4*/ ADD         R4, R4, R6 
    /*000169e8*/ CMP         R3, #0 
    /*000169ec*/ BNE         VPSS_COMM_VI_EarlyIrqProc_x16ad0
    /*000169f0*/ LDR         R4, [R4, #4] 
    /*000169f4*/ CMP         R4, #0 
    /*000169f8*/ BNE         VPSS_COMM_VI_EarlyIrqProc_x16ad0
    /*000169fc*/ ADD         R7, R7, #28672              @ 0x7000 
    /*00016a00*/ LDR         R3, [R7, #3684]             @ 0xe64 
    /*00016a04*/ CMP         R3, #1 
    /*00016a08*/ BEQ         VPSS_COMM_VI_EarlyIrqProc_x16a34
    /*00016a0c*/ SUB         R3, R3, #1 
    /*00016a10*/ CMP         R3, #1 
    /*00016a14*/ MOVHI       R4, #0 
    /*00016a18*/ BLS         VPSS_COMM_VI_EarlyIrqProc_x16a68
    VPSS_COMM_VI_EarlyIrqProc_x16a1c:
    /*00016a1c*/ MOV         R0, R8 
    /*00016a20*/ ADD         R1, SP, #4 
    /*00016a24*/ BL          0x0000000000016A24          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00016a28*/ MOV         R0, R4 
    /*00016a2c*/ ADD         SP, SP, #8 
    /*00016a30*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_COMM_VI_EarlyIrqProc_x16a34:
    /*00016a34*/ MOV         R3, #0 
    /*00016a38*/ MOV         R1, R4 
    /*00016a3c*/ MOV         R2, R3 
    /*00016a40*/ ADD         R4, R4, #1 
    /*00016a44*/ MOV         R0, R5 
    /*00016a48*/ BL          0x0000000000016A48          @ VpssOnLineSendFrame [R_ARM_CALL: .text+0xd5cc] 
    /*00016a4c*/ CMP         R4, #3 
    /*00016a50*/ BNE         VPSS_COMM_VI_EarlyIrqProc_x16a34
    /*00016a54*/ LDR         R3, [R7, #3684]             @ 0xe64 
    /*00016a58*/ SUB         R3, R3, #1 
    /*00016a5c*/ CMP         R3, #1 
    /*00016a60*/ MOVHI       R4, #0 
    /*00016a64*/ BHI         VPSS_COMM_VI_EarlyIrqProc_x16a1c
    VPSS_COMM_VI_EarlyIrqProc_x16a68:
    /*00016a68*/ MOV         R0, R5 
    /*00016a6c*/ MOV         R4, #0 
    /*00016a70*/ BL          0x0000000000016A70          @ VPSS_COMM_UpdateLowdelay [R_ARM_CALL: .text+0x14754] 
    /*00016a74*/ MOV         R0, R5 
    /*00016a78*/ BL          0x0000000000016A78          @ VPSS_UpdateAttrFromUserSet [R_ARM_CALL: .text+0x22b4] 
    /*00016a7c*/ MOV         R0, R5 
    /*00016a80*/ BL          0x0000000000016A80          @ VpssOnLinePrepGrpHwInfo [R_ARM_CALL: .text+0x2a3c] 
    /*00016a84*/ MOV         R1, R4 
    /*00016a88*/ MOV         R0, R5 
    /*00016a8c*/ BL          0x0000000000016A8C          @ VpssOnlinePrepChnHwInfo [R_ARM_CALL: .text+0x2a5c] 
    /*00016a90*/ MOV         R1, #1 
    /*00016a94*/ MOV         R0, R5 
    /*00016a98*/ BL          0x0000000000016A98          @ VpssOnlinePrepChnHwInfo [R_ARM_CALL: .text+0x2a5c] 
    /*00016a9c*/ MOV         R1, #2 
    /*00016aa0*/ MOV         R0, R5 
    /*00016aa4*/ BL          0x0000000000016AA4          @ VpssOnlinePrepChnHwInfo [R_ARM_CALL: .text+0x2a5c] 
    /*00016aa8*/ MOV         R0, R5 
    /*00016aac*/ BL          0x0000000000016AAC          @ VpssDrvOnlineUpdateGrpAttr [R_ARM_CALL: .text+0x2470c] 
    /*00016ab0*/ MOV         R1, R4 
    /*00016ab4*/ MOV         R0, R5 
    /*00016ab8*/ BL          0x0000000000016AB8          @ VPSS_DRV_OUT_32B_Align [R_ARM_CALL: .text+0x214ec] 
    /*00016abc*/ MOV         R0, R5 
    /*00016ac0*/ BL          0x0000000000016AC0          @ VpssOnlinePrepareNextFrame [R_ARM_CALL: .text+0x148d8] 
    /*00016ac4*/ MOV         R0, R5 
    /*00016ac8*/ BL          0x0000000000016AC8          @ VpssDrvOnLineRegup [R_ARM_CALL: .text+0x24670] 
    /*00016acc*/ B           VPSS_COMM_VI_EarlyIrqProc_x16a1c
    VPSS_COMM_VI_EarlyIrqProc_x16ad0:
    /*00016ad0*/ MVN         R4, #0 
    /*00016ad4*/ B           VPSS_COMM_VI_EarlyIrqProc_x16a1c
FUNC_END VPSS_COMM_VI_EarlyIrqProc


FUNC_BEGIN VPSS_COMM_OfflineIrqProc
    /*00016ad8*/ PUSH        {R4, R5, R6, LR} 
    /*00016adc*/ SUB         SP, SP, #40                 @ 0x28 
    /*00016ae0*/ ADD         R5, SP, #24 
    /*00016ae4*/ MOV         R4, R0 
    /*00016ae8*/ MOV         R0, R5 
    /*00016aec*/ BL          0x0000000000016AEC          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00016af0*/ ADD         R1, SP, #20 
    /*00016af4*/ MOV         R0, R4 
    /*00016af8*/ BL          0x0000000000016AF8          @ VPSS_HAL_GetIntStatus [R_ARM_CALL: .text+0x266f8] 
    /*00016afc*/ MOV         R0, R4 
    /*00016b00*/ BL          0x0000000000016B00          @ VPSS_HAL_ClrInt [R_ARM_CALL: .text+0x26580] 
    /*00016b04*/ MOV         R1, R4 
    /*00016b08*/ LDR         R0, [SP, #20] 
    /*00016b0c*/ BL          0x0000000000016B0C          @ VPSS_DRV_IsWrongInt [R_ARM_CALL: .text+0x20a60] 
    /*00016b10*/ MOV         R6, R0 
    /*00016b14*/ BL          0x0000000000016B14          @ VPSS_DRV_BusErrCount [R_ARM_CALL: .text+0x20a14] 
    /*00016b18*/ CMP         R6, #0 
    /*00016b1c*/ BNE         VPSS_COMM_OfflineIrqProc_x16bf8
    /*00016b20*/ LDR         R1, [PC, #256]              @ 0x0000000000016c28 
    /*00016b24*/ MOV         R0, R4 
    /*00016b28*/ BL          0x0000000000016B28          @ VPSS_HAL_GetNodeID [R_ARM_CALL: .text+0x266e0] 
    /*00016b2c*/ LDR         R3, [SP, #20] 
    /*00016b30*/ TST         R3, #28672                  @ 0x7000 
    /*00016b34*/ BNE         VPSS_COMM_OfflineIrqProc_x16c10
    /*00016b38*/ TST         R3, #3 
    /*00016b3c*/ BNE         VPSS_COMM_OfflineIrqProc_x16b64
    VPSS_COMM_OfflineIrqProc_x16b40:
    /*00016b40*/ ADD         R4, SP, #32 
    /*00016b44*/ MOV         R0, R4 
    /*00016b48*/ BL          0x0000000000016B48          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00016b4c*/ LDM         R5, {R0, R1} 
    /*00016b50*/ LDM         R4, {R2, R3} 
    /*00016b54*/ BL          0x0000000000016B54          @ VpssIntStatistic [R_ARM_CALL: .text+0x14a7c] 
    /*00016b58*/ MOV         R0, #1 
    /*00016b5c*/ ADD         SP, SP, #40                 @ 0x28 
    /*00016b60*/ POP         {R4, R5, R6, PC} 
    VPSS_COMM_OfflineIrqProc_x16b64:
    /*00016b64*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x16c0] 
    /*00016b68*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x16c0] 
    /*00016b6c*/ ADD         R3, R6, R4, LSL #2 
    /*00016b70*/ LDR         R2, [R6, #2912]             @ 0xb60 
    /*00016b74*/ LDR         R3, [R3, #128]              @ 0x80 
    /*00016b78*/ LDR         R3, [R3, #8] 
    /*00016b7c*/ CMP         R3, R2 
    /*00016b80*/ BEQ         VPSS_COMM_OfflineIrqProc_x16bc4
    /*00016b84*/ STR         R2, [SP, #12] 
    /*00016b88*/ MOVW        R1, #2281                   @ 0x8e9 
    /*00016b8c*/ STR         R3, [SP, #8] 
    /*00016b90*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5264] 
    /*00016b94*/ STR         R1, [SP] 
    /*00016b98*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5264] 
    /*00016b9c*/ LDR         R3, [PC, #136]              @ 0x0000000000016c2c 
    /*00016ba0*/ MOV         R1, #7 
    /*00016ba4*/ STR         R4, [SP, #4] 
    /*00016ba8*/ MOV         R0, #3 
    /*00016bac*/ BL          0x0000000000016BAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016bb0*/ ADD         R3, R4, #740                @ 0x2e4 
    /*00016bb4*/ ADD         R6, R6, R3, LSL #2 
    /*00016bb8*/ LDR         R3, [R6, #8] 
    /*00016bbc*/ ADD         R3, R3, #1 
    /*00016bc0*/ STR         R3, [R6, #8] 
    VPSS_COMM_OfflineIrqProc_x16bc4:
    /*00016bc4*/ MOV         R0, #2 
    /*00016bc8*/ BL          0x0000000000016BC8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016bcc*/ LDR         R3, [R0] 
    /*00016bd0*/ BLX         R3 
    /*00016bd4*/ LDR         IP, [PC, #84]               @ 0x0000000000016c30 
    /*00016bd8*/ LDRD        R2, [IP, #-8] 
    /*00016bdc*/ SUBS        R2, R0, R2 
    /*00016be0*/ MOV         R0, R4 
    /*00016be4*/ SBC         R3, R1, R3 
    /*00016be8*/ MOV         R1, #0 
    /*00016bec*/ STRD        R2, [IP] 
    /*00016bf0*/ BL          0x0000000000016BF0          @ VPSS_COMM_HalListInt [R_ARM_CALL: .text+0x1646c] 
    /*00016bf4*/ B           VPSS_COMM_OfflineIrqProc_x16b40
    VPSS_COMM_OfflineIrqProc_x16bf8:
    /*00016bf8*/ MOV         R0, R4 
    /*00016bfc*/ MOV         R1, #1 
    /*00016c00*/ BL          0x0000000000016C00          @ VPSS_COMM_HalListInt [R_ARM_CALL: .text+0x1646c] 
    /*00016c04*/ MOV         R0, #1 
    /*00016c08*/ ADD         SP, SP, #40                 @ 0x28 
    /*00016c0c*/ POP         {R4, R5, R6, PC} 
    VPSS_COMM_OfflineIrqProc_x16c10:
    /*00016c10*/ MOV         R0, R4 
    /*00016c14*/ BL          0x0000000000016C14          @ VPSS_COMM_HalLowdelayInt [R_ARM_CALL: .text+0x166f8] 
    /*00016c18*/ LDR         R3, [SP, #20] 
    /*00016c1c*/ TST         R3, #3 
    /*00016c20*/ BEQ         VPSS_COMM_OfflineIrqProc_x16b40
    /*00016c24*/ B           VPSS_COMM_OfflineIrqProc_x16b64
    /*00016c28*/ ANDEQ       R2, R0, R0, LSR #4 
    /*00016c2c*/ ANDEQ       R0, R0, IP, ROR #26 
    /*00016c30*/ ANDEQ       R3, R0, R0, LSL #1 
FUNC_END VPSS_COMM_OfflineIrqProc


FUNC_BEGIN VPSS_COMM_SlaveIrqProc
    /*00016c34*/ PUSH        {R4, LR} 
    /*00016c38*/ SUB         SP, SP, #8 
    /*00016c3c*/ MOV         R4, R0 
    /*00016c40*/ MOV         R3, #0 
    /*00016c44*/ MOV         R1, SP 
    /*00016c48*/ STR         R3, [SP] 
    /*00016c4c*/ STR         R3, [SP, #4] 
    /*00016c50*/ BL          0x0000000000016C50          @ VPSS_HAL_GetIntStatus [R_ARM_CALL: .text+0x266f8] 
    /*00016c54*/ ADD         R1, SP, #4 
    /*00016c58*/ MOV         R0, R4 
    /*00016c5c*/ BL          0x0000000000016C5C          @ VPSS_HAL_GetRawIntStatus [R_ARM_CALL: .text+0x26710] 
    /*00016c60*/ MOV         R0, R4 
    /*00016c64*/ BL          0x0000000000016C64          @ VPSS_HAL_ClrInt [R_ARM_CALL: .text+0x26580] 
    /*00016c68*/ MOV         R1, R4 
    /*00016c6c*/ LDR         R0, [SP] 
    /*00016c70*/ BL          0x0000000000016C70          @ VPSS_DRV_IsVencMissInt [R_ARM_CALL: .text+0x20b88] 
    /*00016c74*/ CMP         R0, #0 
    /*00016c78*/ BNE         VPSS_COMM_SlaveIrqProc_x16cb8
    VPSS_COMM_SlaveIrqProc_x16c7c:
    /*00016c7c*/ MOV         R1, R4 
    /*00016c80*/ LDR         R0, [SP] 
    /*00016c84*/ BL          0x0000000000016C84          @ VPSS_DRV_IsWrongInt [R_ARM_CALL: .text+0x20a60] 
    /*00016c88*/ BL          0x0000000000016C88          @ VPSS_DRV_BusErrCount [R_ARM_CALL: .text+0x20a14] 
    /*00016c8c*/ LDR         R3, [SP] 
    /*00016c90*/ TST         R3, #28672                  @ 0x7000 
    /*00016c94*/ BEQ         VPSS_COMM_SlaveIrqProc_x16cac
    /*00016c98*/ MOV         R0, R4 
    /*00016c9c*/ LDR         R1, [PC, #36]               @ 0x0000000000016cc8 
    /*00016ca0*/ BL          0x0000000000016CA0          @ VPSS_HAL_GetNodeID [R_ARM_CALL: .text+0x266e0] 
    /*00016ca4*/ MOV         R0, R4 
    /*00016ca8*/ BL          0x0000000000016CA8          @ VPSS_COMM_HalLowdelayInt [R_ARM_CALL: .text+0x166f8] 
    VPSS_COMM_SlaveIrqProc_x16cac:
    /*00016cac*/ MOV         R0, #1 
    /*00016cb0*/ ADD         SP, SP, #8 
    /*00016cb4*/ POP         {R4, PC} 
    VPSS_COMM_SlaveIrqProc_x16cb8:
    /*00016cb8*/ MOV         R1, R4 
    /*00016cbc*/ LDR         R0, [SP] 
    /*00016cc0*/ BL          0x0000000000016CC0          @ VPSS_DRV_HalMissInt [R_ARM_CALL: .text+0x20b90] 
    /*00016cc4*/ B           VPSS_COMM_SlaveIrqProc_x16c7c
    /*00016cc8*/ ANDEQ       R2, R0, R0, LSR #4 
FUNC_END VPSS_COMM_SlaveIrqProc


FUNC_BEGIN VPSS_COMM_IrqProc
    /*00016ccc*/ PUSH        {R4, LR} 
    /*00016cd0*/ MOV         R4, R1 
    /*00016cd4*/ BL          0x0000000000016CD4          @ VPSS_DRV_GetIdByIrq [R_ARM_CALL: .text+0x181d8] 
    /*00016cd8*/ MOV         R2, R0 
    /*00016cdc*/ BL          0x0000000000016CDC          @ VPSS_IP_WORK_MODE [R_ARM_CALL: .text+0x14130] 
    /*00016ce0*/ CMP         R0, #1 
    /*00016ce4*/ BEQ         VPSS_COMM_IrqProc_x16d1c
    /*00016ce8*/ BCC         VPSS_COMM_IrqProc_x16d0c
    /*00016cec*/ CMP         R0, #2 
    /*00016cf0*/ BNE         VPSS_COMM_IrqProc_x16d04
    /*00016cf4*/ MOV         R1, R4 
    /*00016cf8*/ MOV         R0, R2 
    /*00016cfc*/ POP         {R4, LR} 
    VPSS_COMM_IrqProc_x16d00:
    /*00016d00*/ B           VPSS_COMM_IrqProc_x16d00    @ VPSS_COMM_SlaveIrqProc [R_ARM_JUMP24: .text+0x16c34] 
    VPSS_COMM_IrqProc_x16d04:
    /*00016d04*/ MOV         R0, #1 
    /*00016d08*/ POP         {R4, PC} 
    VPSS_COMM_IrqProc_x16d0c:
    /*00016d0c*/ MOV         R1, R4 
    /*00016d10*/ MOV         R0, R2 
    /*00016d14*/ POP         {R4, LR} 
    VPSS_COMM_IrqProc_x16d18:
    /*00016d18*/ B           VPSS_COMM_IrqProc_x16d18    @ VPSS_COMM_OfflineIrqProc [R_ARM_JUMP24: .text+0x16ad8] 
    VPSS_COMM_IrqProc_x16d1c:
    /*00016d1c*/ MOV         R1, R4 
    /*00016d20*/ MOV         R0, R2 
    /*00016d24*/ POP         {R4, LR} 
    VPSS_COMM_IrqProc_x16d28:
    /*00016d28*/ B           VPSS_COMM_IrqProc_x16d28    @ VPSS_COMM_OnLineIrqProc [R_ARM_JUMP24: .text+0x150d4] 
FUNC_END VPSS_COMM_IrqProc


FUNC_BEGIN VPSS_HAL_CreatNodeQueue
    /*00016d2c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00016d30*/ MOV         R4, R0 
    /*00016d34*/ MOV         R5, R1 
    /*00016d38*/ ADD         R3, R0, #68                 @ 0x44 
    /*00016d3c*/ ADD         R6, R0, #4 
    /*00016d40*/ ADD         R7, R0, #60                 @ 0x3c 
    /*00016d44*/ STR         R6, [R0, #4] 
    /*00016d48*/ ADD         R1, R4, #20 
    /*00016d4c*/ STR         R6, [R0, #8] 
    /*00016d50*/ ADD         R2, R4, #28 
    /*00016d54*/ ADD         R0, R0, #12 
    /*00016d58*/ STR         R3, [R4, #68]               @ 0x44 
    /*00016d5c*/ STR         R3, [R4, #72]               @ 0x48 
    /*00016d60*/ ADD         R3, R4, #36                 @ 0x24 
    /*00016d64*/ STR         R0, [R4, #12] 
    /*00016d68*/ STR         R0, [R4, #16] 
    /*00016d6c*/ LSL         R0, R5, #8 
    /*00016d70*/ STR         R7, [R4, #60]               @ 0x3c 
    /*00016d74*/ STR         R7, [R4, #64]               @ 0x40 
    /*00016d78*/ STR         R1, [R4, #20] 
    /*00016d7c*/ STR         R1, [R4, #24] 
    /*00016d80*/ STR         R2, [R4, #28] 
    /*00016d84*/ STR         R2, [R4, #32] 
    /*00016d88*/ STR         R3, [R4, #36]               @ 0x24 
    /*00016d8c*/ STR         R3, [R4, #40]               @ 0x28 
    /*00016d90*/ BL          0x0000000000016D90          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00016d94*/ CMP         R0, #0 
    /*00016d98*/ STR         R0, [R4] 
    /*00016d9c*/ BEQ         VPSS_HAL_CreatNodeQueue_x16e1c
    /*00016da0*/ CMP         R5, #0 
    /*00016da4*/ ADDNE       R0, R0, #244                @ 0xf4 
    /*00016da8*/ MOVNE       R3, #0 
    /*00016dac*/ BEQ         VPSS_HAL_CreatNodeQueue_x16df0
    VPSS_HAL_CreatNodeQueue_x16db0:
    /*00016db0*/ STR         R3, [R0, #-132]             @ 0xffffff7c 
    /*00016db4*/ SUB         IP, R0, #128                @ 0x80 
    /*00016db8*/ LDR         R2, [R4, #8] 
    /*00016dbc*/ ADD         R3, R3, #1 
    /*00016dc0*/ STR         IP, [R4, #8] 
    /*00016dc4*/ CMP         R5, R3 
    /*00016dc8*/ STR         R6, [R0, #-128]             @ 0xffffff80 
    /*00016dcc*/ STR         R2, [R0, #-124]             @ 0xffffff84 
    /*00016dd0*/ STR         IP, [R2] 
    /*00016dd4*/ LDR         R2, [R4, #64]               @ 0x40 
    /*00016dd8*/ STR         R0, [R4, #64]               @ 0x40 
    /*00016ddc*/ STR         R7, [R0] 
    /*00016de0*/ STR         R2, [R0, #4] 
    /*00016de4*/ STR         R0, [R2] 
    /*00016de8*/ ADD         R0, R0, #256                @ 0x100 
    /*00016dec*/ BNE         VPSS_HAL_CreatNodeQueue_x16db0
    VPSS_HAL_CreatNodeQueue_x16df0:
    /*00016df0*/ MOV         R3, #0 
    /*00016df4*/ STR         R5, [R4, #76]               @ 0x4c 
    /*00016df8*/ STR         R5, [R4, #80]               @ 0x50 
    /*00016dfc*/ MOV         R0, R3 
    /*00016e00*/ STR         R3, [R4, #108]              @ 0x6c 
    /*00016e04*/ STR         R3, [R4, #84]               @ 0x54 
    /*00016e08*/ STR         R3, [R4, #88]               @ 0x58 
    /*00016e0c*/ STR         R3, [R4, #92]               @ 0x5c 
    /*00016e10*/ STR         R3, [R4, #96]               @ 0x60 
    /*00016e14*/ STR         R3, [R4, #112]              @ 0x70 
    /*00016e18*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_HAL_CreatNodeQueue_x16e1c:
    /*00016e1c*/ MVN         R0, #0 
    /*00016e20*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VPSS_HAL_CreatNodeQueue


FUNC_BEGIN VPSS_HAL_DestroyNodeQueue
    /*00016e24*/ PUSH        {R4, R5, R6, LR} 
    /*00016e28*/ MOV         R5, #0 
    /*00016e2c*/ LDR         LR, [R0] 
    /*00016e30*/ ADD         R3, R0, #4 
    /*00016e34*/ ADD         R2, R0, #60                 @ 0x3c 
    /*00016e38*/ ADD         IP, R0, #12 
    /*00016e3c*/ CMP         LR, R5 
    /*00016e40*/ ADD         R1, R0, #20 
    /*00016e44*/ STR         R3, [R0, #4] 
    /*00016e48*/ STR         R3, [R0, #8] 
    /*00016e4c*/ ADD         R3, R0, #68                 @ 0x44 
    /*00016e50*/ STR         R2, [R0, #60]               @ 0x3c 
    /*00016e54*/ STR         R2, [R0, #64]               @ 0x40 
    /*00016e58*/ ADD         R2, R0, #28 
    /*00016e5c*/ STR         R3, [R0, #68]               @ 0x44 
    /*00016e60*/ STR         R3, [R0, #72]               @ 0x48 
    /*00016e64*/ ADD         R3, R0, #36                 @ 0x24 
    /*00016e68*/ STR         IP, [R0, #12] 
    /*00016e6c*/ STR         IP, [R0, #16] 
    /*00016e70*/ STR         R1, [R0, #20] 
    /*00016e74*/ STR         R1, [R0, #24] 
    /*00016e78*/ STR         R2, [R0, #28] 
    /*00016e7c*/ STR         R2, [R0, #32] 
    /*00016e80*/ STR         R3, [R0, #36]               @ 0x24 
    /*00016e84*/ STR         R3, [R0, #40]               @ 0x28 
    /*00016e88*/ STR         R5, [R0, #76]               @ 0x4c 
    /*00016e8c*/ STR         R5, [R0, #80]               @ 0x50 
    /*00016e90*/ STR         R5, [R0, #108]              @ 0x6c 
    /*00016e94*/ STR         R5, [R0, #84]               @ 0x54 
    /*00016e98*/ STR         R5, [R0, #88]               @ 0x58 
    /*00016e9c*/ STR         R5, [R0, #92]               @ 0x5c 
    /*00016ea0*/ STR         R5, [R0, #96]               @ 0x60 
    /*00016ea4*/ STR         R5, [R0, #112]              @ 0x70 
    /*00016ea8*/ POPEQ       {R4, R5, R6, PC} 
    /*00016eac*/ MOV         R4, R0 
    /*00016eb0*/ MOV         R0, LR 
    /*00016eb4*/ BL          0x0000000000016EB4          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00016eb8*/ STR         R5, [R4] 
    /*00016ebc*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_HAL_DestroyNodeQueue


FUNC_BEGIN VPSS_HAL_NodeQueueGetFree
    /*00016ec0*/ MOV         R2, R0 
    /*00016ec4*/ LDR         R3, [R2, #4]! 
    /*00016ec8*/ CMP         R3, R2 
    /*00016ecc*/ BEQ         VPSS_HAL_NodeQueueGetFree_x16f14
    /*00016ed0*/ PUSH        {R4, LR} 
    /*00016ed4*/ MOV         R1, R0 
    /*00016ed8*/ LDR         LR, [R3, #4] 
    /*00016edc*/ SUB         R0, R3, #116                @ 0x74 
    /*00016ee0*/ LDR         R4, [R3] 
    /*00016ee4*/ MOV         IP, #256                    @ 0x100 
    /*00016ee8*/ MOV         R2, #512                    @ 0x200 
    /*00016eec*/ MOVT        IP, #16 
    /*00016ef0*/ MOVT        R2, #32 
    /*00016ef4*/ STR         LR, [R4, #4] 
    /*00016ef8*/ STR         R4, [LR] 
    /*00016efc*/ STR         IP, [R3] 
    /*00016f00*/ STR         R2, [R3, #4] 
    /*00016f04*/ LDR         R3, [R1, #76]               @ 0x4c 
    /*00016f08*/ SUB         R3, R3, #1 
    /*00016f0c*/ STR         R3, [R1, #76]               @ 0x4c 
    /*00016f10*/ POP         {R4, PC} 
    VPSS_HAL_NodeQueueGetFree_x16f14:
    /*00016f14*/ MOV         R0, #0 
    /*00016f18*/ BX          LR 
FUNC_END VPSS_HAL_NodeQueueGetFree


FUNC_BEGIN VPSS_HAL_NodeQueueGetProcFree
    /*00016f1c*/ MOV         R2, R0 
    /*00016f20*/ LDR         R3, [R2, #60]!              @ 0x3c 
    /*00016f24*/ CMP         R3, R2 
    /*00016f28*/ BEQ         VPSS_HAL_NodeQueueGetProcFree_x16f70
    /*00016f2c*/ PUSH        {R4, LR} 
    /*00016f30*/ MOV         R1, R0 
    /*00016f34*/ LDR         LR, [R3, #4] 
    /*00016f38*/ SUB         R0, R3, #116                @ 0x74 
    /*00016f3c*/ LDR         R4, [R3] 
    /*00016f40*/ MOV         IP, #256                    @ 0x100 
    /*00016f44*/ MOV         R2, #512                    @ 0x200 
    /*00016f48*/ MOVT        IP, #16 
    /*00016f4c*/ MOVT        R2, #32 
    /*00016f50*/ STR         LR, [R4, #4] 
    /*00016f54*/ STR         R4, [LR] 
    /*00016f58*/ STR         IP, [R3] 
    /*00016f5c*/ STR         R2, [R3, #4] 
    /*00016f60*/ LDR         R3, [R1, #80]               @ 0x50 
    /*00016f64*/ SUB         R3, R3, #1 
    /*00016f68*/ STR         R3, [R1, #80]               @ 0x50 
    /*00016f6c*/ POP         {R4, PC} 
    VPSS_HAL_NodeQueueGetProcFree_x16f70:
    /*00016f70*/ MOV         R0, #0 
    /*00016f74*/ BX          LR 
FUNC_END VPSS_HAL_NodeQueueGetProcFree


FUNC_BEGIN VPSS_HAL_NodeQueuePutBusy
    /*00016f78*/ LSL         R1, R1, #1 
    /*00016f7c*/ ADD         IP, R2, R1 
    /*00016f80*/ ADD         R2, R2, #3 
    /*00016f84*/ PUSH        {R4, LR} 
    /*00016f88*/ ADD         R4, R0, IP, LSL #3 
    /*00016f8c*/ ADD         R2, R2, R1 
    /*00016f90*/ ADD         IP, R0, IP, LSL #2 
    /*00016f94*/ LDR         R1, [R4, #32] 
    /*00016f98*/ ADD         LR, R3, #116                @ 0x74 
    /*00016f9c*/ ADD         R0, R0, R2, LSL #3 
    /*00016fa0*/ STR         LR, [R4, #32] 
    /*00016fa4*/ ADD         R0, R0, #4 
    /*00016fa8*/ STR         R0, [R3, #116]              @ 0x74 
    /*00016fac*/ STR         R1, [R3, #120]              @ 0x78 
    /*00016fb0*/ STR         LR, [R1] 
    /*00016fb4*/ LDR         R3, [IP, #92]               @ 0x5c 
    /*00016fb8*/ ADD         R3, R3, #1 
    /*00016fbc*/ STR         R3, [IP, #92]               @ 0x5c 
    /*00016fc0*/ POP         {R4, PC} 
FUNC_END VPSS_HAL_NodeQueuePutBusy


FUNC_BEGIN VPSS_HAL_NodeQueueGetBusy
    /*00016fc4*/ LSL         R2, R2, #1 
    /*00016fc8*/ PUSH        {R4, R5, R6, LR} 
    /*00016fcc*/ ADD         R6, R2, R3 
    /*00016fd0*/ ADD         R3, R3, #3 
    /*00016fd4*/ MOV         R4, R0 
    /*00016fd8*/ ADD         R3, R3, R2 
    /*00016fdc*/ ADD         R2, R0, R6, LSL #3 
    /*00016fe0*/ MOV         R5, R1 
    /*00016fe4*/ ADD         R3, R0, R3, LSL #3 
    /*00016fe8*/ LDR         R2, [R2, #28] 
    /*00016fec*/ ADD         R3, R3, #4 
    /*00016ff0*/ CMP         R2, R3 
    /*00016ff4*/ BEQ         VPSS_HAL_NodeQueueGetBusy_x17034
    VPSS_HAL_NodeQueueGetBusy_x16ff8:
    /*00016ff8*/ LDR         R1, [R5, #120]              @ 0x78 
    /*00016ffc*/ ADD         R4, R4, R6, LSL #2 
    /*00017000*/ LDR         R0, [R5, #116]              @ 0x74 
    /*00017004*/ MOV         R2, #256                    @ 0x100 
    /*00017008*/ MOV         R3, #512                    @ 0x200 
    /*0001700c*/ MOVT        R2, #16 
    /*00017010*/ MOVT        R3, #32 
    /*00017014*/ STR         R1, [R0, #4] 
    /*00017018*/ STR         R0, [R1] 
    /*0001701c*/ STR         R2, [R5, #116]              @ 0x74 
    /*00017020*/ STR         R3, [R5, #120]              @ 0x78 
    /*00017024*/ LDR         R3, [R4, #92]               @ 0x5c 
    /*00017028*/ SUB         R3, R3, #1 
    /*0001702c*/ STR         R3, [R4, #92]               @ 0x5c 
    /*00017030*/ POP         {R4, R5, R6, PC} 
    VPSS_HAL_NodeQueueGetBusy_x17034:
    /*00017034*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52a4] 
    /*00017038*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xd88] 
    /*0001703c*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52a4] 
    /*00017040*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xd88] 
    /*00017044*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52bc] 
    /*00017048*/ MOV         R2, #181                    @ 0xb5 
    /*0001704c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52bc] 
    /*00017050*/ BL          0x0000000000017050          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00017054*/ B           VPSS_HAL_NodeQueueGetBusy_x16ff8
FUNC_END VPSS_HAL_NodeQueueGetBusy


FUNC_BEGIN VPSS_HAL_NodeQueuePutWait
    /*00017058*/ CMP         R2, #0 
    /*0001705c*/ BNE         VPSS_HAL_NodeQueuePutWait_x1708c
    /*00017060*/ LDR         R3, [R0, #16] 
    /*00017064*/ ADD         R2, R1, #116                @ 0x74 
    /*00017068*/ ADD         IP, R0, #12 
    /*0001706c*/ STR         R2, [R0, #16] 
    /*00017070*/ STR         IP, [R1, #116]              @ 0x74 
    /*00017074*/ STR         R3, [R1, #120]              @ 0x78 
    /*00017078*/ STR         R2, [R3] 
    /*0001707c*/ LDR         R3, [R0, #84]               @ 0x54 
    /*00017080*/ ADD         R3, R3, #1 
    /*00017084*/ STR         R3, [R0, #84]               @ 0x54 
    /*00017088*/ BX          LR 
    VPSS_HAL_NodeQueuePutWait_x1708c:
    /*0001708c*/ LDR         R3, [R0, #24] 
    /*00017090*/ ADD         R2, R1, #116                @ 0x74 
    /*00017094*/ ADD         IP, R0, #20 
    /*00017098*/ STR         R2, [R0, #24] 
    /*0001709c*/ STR         IP, [R1, #116]              @ 0x74 
    /*000170a0*/ STR         R3, [R1, #120]              @ 0x78 
    /*000170a4*/ STR         R2, [R3] 
    /*000170a8*/ LDR         R3, [R0, #88]               @ 0x58 
    /*000170ac*/ ADD         R3, R3, #1 
    /*000170b0*/ STR         R3, [R0, #88]               @ 0x58 
    /*000170b4*/ BX          LR 
FUNC_END VPSS_HAL_NodeQueuePutWait


FUNC_BEGIN VPSS_HAL_NodeQueueGetWait
    /*000170b8*/ CMP         R1, #0 
    /*000170bc*/ MOV         R3, R0 
    /*000170c0*/ PUSH        {R4, LR} 
    /*000170c4*/ BEQ         VPSS_HAL_NodeQueueGetWait_x17114
    /*000170c8*/ MOV         R1, R0 
    /*000170cc*/ LDR         R2, [R1, #20]! 
    /*000170d0*/ CMP         R2, R1 
    /*000170d4*/ BEQ         VPSS_HAL_NodeQueueGetWait_x1715c
    /*000170d8*/ LDR         LR, [R2, #4] 
    /*000170dc*/ SUB         R0, R2, #116                @ 0x74 
    /*000170e0*/ LDR         R4, [R2] 
    /*000170e4*/ MOV         IP, #256                    @ 0x100 
    /*000170e8*/ MOV         R1, #512                    @ 0x200 
    /*000170ec*/ MOVT        IP, #16 
    /*000170f0*/ MOVT        R1, #32 
    /*000170f4*/ STR         LR, [R4, #4] 
    /*000170f8*/ STR         R4, [LR] 
    /*000170fc*/ STR         IP, [R2] 
    /*00017100*/ STR         R1, [R2, #4] 
    /*00017104*/ LDR         R2, [R3, #88]               @ 0x58 
    /*00017108*/ SUB         R2, R2, #1 
    /*0001710c*/ STR         R2, [R3, #88]               @ 0x58 
    /*00017110*/ POP         {R4, PC} 
    VPSS_HAL_NodeQueueGetWait_x17114:
    /*00017114*/ LDR         R2, [R0, #12]! 
    /*00017118*/ CMP         R2, R0 
    /*0001711c*/ BEQ         VPSS_HAL_NodeQueueGetWait_x1715c
    /*00017120*/ LDR         LR, [R2, #4] 
    /*00017124*/ SUB         R0, R2, #116                @ 0x74 
    /*00017128*/ LDR         R4, [R2] 
    /*0001712c*/ MOV         IP, #256                    @ 0x100 
    /*00017130*/ MOV         R1, #512                    @ 0x200 
    /*00017134*/ MOVT        IP, #16 
    /*00017138*/ MOVT        R1, #32 
    /*0001713c*/ STR         LR, [R4, #4] 
    /*00017140*/ STR         R4, [LR] 
    /*00017144*/ STR         IP, [R2] 
    /*00017148*/ STR         R1, [R2, #4] 
    /*0001714c*/ LDR         R2, [R3, #84]               @ 0x54 
    /*00017150*/ SUB         R2, R2, #1 
    /*00017154*/ STR         R2, [R3, #84]               @ 0x54 
    /*00017158*/ POP         {R4, PC} 
    VPSS_HAL_NodeQueueGetWait_x1715c:
    /*0001715c*/ MOV         R0, #0 
    /*00017160*/ POP         {R4, PC} 
FUNC_END VPSS_HAL_NodeQueueGetWait


FUNC_BEGIN VPSS_HAL_NodeQueuePutProc
    /*00017164*/ LDR         R3, [R0, #72]               @ 0x48 
    /*00017168*/ ADD         R2, R1, #116                @ 0x74 
    /*0001716c*/ ADD         IP, R0, #68                 @ 0x44 
    /*00017170*/ STR         R2, [R0, #72]               @ 0x48 
    /*00017174*/ STR         IP, [R1, #116]              @ 0x74 
    /*00017178*/ STR         R3, [R1, #120]              @ 0x78 
    /*0001717c*/ STR         R2, [R3] 
    /*00017180*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00017184*/ ADD         R3, R3, #1 
    /*00017188*/ STR         R3, [R0, #108]              @ 0x6c 
    /*0001718c*/ BX          LR 
FUNC_END VPSS_HAL_NodeQueuePutProc


FUNC_BEGIN VPSS_HAL_NodeQueueGetProc
    /*00017190*/ PUSH        {R4, R5, R6, LR} 
    /*00017194*/ ADD         R3, R0, #68                 @ 0x44 
    /*00017198*/ LDR         R2, [R0, #68]               @ 0x44 
    /*0001719c*/ MOV         R4, R0 
    /*000171a0*/ MOV         R5, R1 
    /*000171a4*/ CMP         R2, R3 
    /*000171a8*/ BEQ         VPSS_HAL_NodeQueueGetProc_x171e4
    VPSS_HAL_NodeQueueGetProc_x171ac:
    /*000171ac*/ LDR         R1, [R5, #120]              @ 0x78 
    /*000171b0*/ MOV         R2, #256                    @ 0x100 
    /*000171b4*/ LDR         R0, [R5, #116]              @ 0x74 
    /*000171b8*/ MOVT        R2, #16 
    /*000171bc*/ MOV         R3, #512                    @ 0x200 
    /*000171c0*/ MOVT        R3, #32 
    /*000171c4*/ STR         R1, [R0, #4] 
    /*000171c8*/ STR         R0, [R1] 
    /*000171cc*/ STR         R2, [R5, #116]              @ 0x74 
    /*000171d0*/ STR         R3, [R5, #120]              @ 0x78 
    /*000171d4*/ LDR         R3, [R4, #108]              @ 0x6c 
    /*000171d8*/ SUB         R3, R3, #1 
    /*000171dc*/ STR         R3, [R4, #108]              @ 0x6c 
    /*000171e0*/ POP         {R4, R5, R6, PC} 
    VPSS_HAL_NodeQueueGetProc_x171e4:
    /*000171e4*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52a4] 
    /*000171e8*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52bc] 
    /*000171ec*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52a4] 
    /*000171f0*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52bc] 
    /*000171f4*/ MOVW        R2, #258                    @ 0x102 
    /*000171f8*/ LDR         R1, [PC, #4]                @ 0x0000000000017204 
    /*000171fc*/ BL          0x00000000000171FC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00017200*/ B           VPSS_HAL_NodeQueueGetProc_x171ac
    /*00017204*/ ANDEQ       R0, R0, R4, LSR #27 
FUNC_END VPSS_HAL_NodeQueueGetProc


FUNC_BEGIN VPSS_HAL_NodeQueuePutFree
    /*00017208*/ LDR         R3, [R0, #8] 
    /*0001720c*/ ADD         R2, R1, #116                @ 0x74 
    /*00017210*/ ADD         IP, R0, #4 
    /*00017214*/ STR         R2, [R0, #8] 
    /*00017218*/ STR         IP, [R1, #116]              @ 0x74 
    /*0001721c*/ STR         R3, [R1, #120]              @ 0x78 
    /*00017220*/ STR         R2, [R3] 
    /*00017224*/ LDR         R3, [R0, #76]               @ 0x4c 
    /*00017228*/ ADD         R3, R3, #1 
    /*0001722c*/ STR         R3, [R0, #76]               @ 0x4c 
    /*00017230*/ BX          LR 
FUNC_END VPSS_HAL_NodeQueuePutFree


FUNC_BEGIN VPSS_HAL_NodeQueuePutProcFree
    /*00017234*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00017238*/ ADD         R2, R1, #116                @ 0x74 
    /*0001723c*/ ADD         IP, R0, #60                 @ 0x3c 
    /*00017240*/ STR         R2, [R0, #64]               @ 0x40 
    /*00017244*/ STR         IP, [R1, #116]              @ 0x74 
    /*00017248*/ STR         R3, [R1, #120]              @ 0x78 
    /*0001724c*/ STR         R2, [R3] 
    /*00017250*/ LDR         R3, [R0, #80]               @ 0x50 
    /*00017254*/ ADD         R3, R3, #1 
    /*00017258*/ STR         R3, [R0, #80]               @ 0x50 
    /*0001725c*/ BX          LR 
FUNC_END VPSS_HAL_NodeQueuePutProcFree


FUNC_BEGIN VPSS_HAL_GetFreeNum
    /*00017260*/ LDR         R0, [R0, #76]               @ 0x4c 
    /*00017264*/ BX          LR 
FUNC_END VPSS_HAL_GetFreeNum


FUNC_BEGIN VPSS_HAL_GetWaitNum
    /*00017268*/ LDR         R3, [R0, #84]               @ 0x54 
    /*0001726c*/ CMP         R1, #0 
    /*00017270*/ LDR         R0, [R0, #88]               @ 0x58 
    /*00017274*/ MOVEQ       R0, R3 
    /*00017278*/ BX          LR 
FUNC_END VPSS_HAL_GetWaitNum


FUNC_BEGIN VPSS_HAL_GetBusyNum
    /*0001727c*/ ADD         R2, R2, R1, LSL #1 
    /*00017280*/ ADD         R2, R0, R2, LSL #2 
    /*00017284*/ LDR         R0, [R2, #92]               @ 0x5c 
    /*00017288*/ BX          LR 
FUNC_END VPSS_HAL_GetBusyNum


FUNC_BEGIN VPSS_HAL_GetProcNum
    /*0001728c*/ LDR         R0, [R0, #108]              @ 0x6c 
    /*00017290*/ BX          LR 
FUNC_END VPSS_HAL_GetProcNum


FUNC_BEGIN VPSS_DRV_GetCmdName
    /*00017294*/ MOVW        R3, #20530                  @ 0x5032 
    /*00017298*/ MOVT        R3, #16888                  @ 0x41f8 
    /*0001729c*/ CMP         R0, R3 
    /*000172a0*/ BEQ         VPSS_DRV_GetCmdName_x177a8
    /*000172a4*/ BHI         VPSS_DRV_GetCmdName_x1735c
    /*000172a8*/ MOVW        R3, #20542                  @ 0x503e 
    /*000172ac*/ MOVT        R3, #16388                  @ 0x4004 
    /*000172b0*/ CMP         R0, R3 
    /*000172b4*/ BEQ         VPSS_DRV_GetCmdName_x1779c
    /*000172b8*/ BHI         VPSS_DRV_GetCmdName_x17308
    /*000172bc*/ MOVW        R3, #20499                  @ 0x5013 
    /*000172c0*/ CMP         R0, R3 
    /*000172c4*/ BHI         VPSS_DRV_GetCmdName_x17438
    /*000172c8*/ MOVW        R3, #20498                  @ 0x5012 
    /*000172cc*/ CMP         R0, R3 
    /*000172d0*/ BCS         VPSS_DRV_GetCmdName_x17754
    /*000172d4*/ MOVW        R3, #20484                  @ 0x5004 
    /*000172d8*/ CMP         R0, R3 
    /*000172dc*/ BEQ         VPSS_DRV_GetCmdName_x17748
    /*000172e0*/ BLS         VPSS_DRV_GetCmdName_x176bc
    /*000172e4*/ MOVW        R3, #20487                  @ 0x5007 
    /*000172e8*/ CMP         R0, R3 
    /*000172ec*/ BCC         VPSS_DRV_GetCmdName_x17568
    /*000172f0*/ MOVW        R3, #20488                  @ 0x5008 
    /*000172f4*/ CMP         R0, R3 
    /*000172f8*/ BHI         VPSS_DRV_GetCmdName_x17664
    /*000172fc*/ MOVW        R0, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5334] 
    /*00017300*/ MOVT        R0, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5334] 
    /*00017304*/ BX          LR 
    VPSS_DRV_GetCmdName_x17308:
    /*00017308*/ MOVW        R3, #20524                  @ 0x502c 
    /*0001730c*/ MOVT        R3, #16408                  @ 0x4018 
    /*00017310*/ CMP         R0, R3 
    /*00017314*/ BEQ         VPSS_DRV_GetCmdName_x177c0
    /*00017318*/ BLS         VPSS_DRV_GetCmdName_x17484
    /*0001731c*/ MOVW        R3, #20485                  @ 0x5005 
    /*00017320*/ MOVT        R3, #16456                  @ 0x4048 
    /*00017324*/ CMP         R0, R3 
    /*00017328*/ BEQ         VPSS_DRV_GetCmdName_x17760
    /*0001732c*/ BLS         VPSS_DRV_GetCmdName_x17688
    /*00017330*/ MOVW        R3, #20495                  @ 0x500f 
    /*00017334*/ MOVT        R3, #16720                  @ 0x4150 
    /*00017338*/ CMP         R0, R3 
    /*0001733c*/ BEQ         VPSS_DRV_GetCmdName_x1767c
    /*00017340*/ MOVW        R3, #20493                  @ 0x500d 
    /*00017344*/ MOVT        R3, #16728                  @ 0x4158 
    /*00017348*/ CMP         R0, R3 
    /*0001734c*/ BNE         VPSS_DRV_GetCmdName_x1772c
    /*00017350*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x536c] 
    /*00017354*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x536c] 
    /*00017358*/ BX          LR 
    VPSS_DRV_GetCmdName_x1735c:
    /*0001735c*/ MOVW        R3, #20551                  @ 0x5047 
    /*00017360*/ MOVT        R3, #32784                  @ 0x8010 
    /*00017364*/ CMP         R0, R3 
    /*00017368*/ BEQ         VPSS_DRV_GetCmdName_x177b4
    /*0001736c*/ BHI         VPSS_DRV_GetCmdName_x173d4
    /*00017370*/ MOVW        R3, #20501                  @ 0x5015 
    /*00017374*/ MOVT        R3, #32772                  @ 0x8004 
    /*00017378*/ CMP         R0, R3 
    /*0001737c*/ BEQ         VPSS_DRV_GetCmdName_x17478
    /*00017380*/ BLS         VPSS_DRV_GetCmdName_x17524
    /*00017384*/ MOVW        R3, #20518                  @ 0x5026 
    /*00017388*/ MOVT        R3, #32776                  @ 0x8008 
    /*0001738c*/ CMP         R0, R3 
    /*00017390*/ BEQ         VPSS_DRV_GetCmdName_x17784
    /*00017394*/ BHI         VPSS_DRV_GetCmdName_x17574
    /*00017398*/ MOVW        R3, #20543                  @ 0x503f 
    /*0001739c*/ MOVT        R3, #32772                  @ 0x8004 
    /*000173a0*/ CMP         R0, R3 
    /*000173a4*/ BEQ         VPSS_DRV_GetCmdName_x1779c
    /*000173a8*/ MOVW        R3, #20508                  @ 0x501c 
    /*000173ac*/ MOVT        R3, #32776                  @ 0x8008 
    /*000173b0*/ CMP         R0, R3 
    /*000173b4*/ BEQ         VPSS_DRV_GetCmdName_x174c8
    /*000173b8*/ MOVW        R3, #20527                  @ 0x502f 
    /*000173bc*/ MOVT        R3, #32772                  @ 0x8004 
    /*000173c0*/ CMP         R0, R3 
    /*000173c4*/ BNE         VPSS_DRV_GetCmdName_x17568
    VPSS_DRV_GetCmdName_x173c8:
    /*000173c8*/ MOVW        R0, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5418] 
    /*000173cc*/ MOVT        R0, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5418] 
    /*000173d0*/ BX          LR 
    VPSS_DRV_GetCmdName_x173d4:
    /*000173d4*/ MOVW        R3, #20514                  @ 0x5022 
    /*000173d8*/ MOVT        R3, #32984                  @ 0x80d8 
    /*000173dc*/ CMP         R0, R3 
    /*000173e0*/ BEQ         VPSS_DRV_GetCmdName_x177cc
    /*000173e4*/ BLS         VPSS_DRV_GetCmdName_x174d4
    /*000173e8*/ MOVW        R3, #20494                  @ 0x500e 
    /*000173ec*/ MOVT        R3, #49160                  @ 0xc008 
    /*000173f0*/ CMP         R0, R3 
    /*000173f4*/ BEQ         VPSS_DRV_GetCmdName_x1767c
    /*000173f8*/ BLS         VPSS_DRV_GetCmdName_x176f0
    /*000173fc*/ MOVW        R3, #20516                  @ 0x5024 
    /*00017400*/ MOVT        R3, #49168                  @ 0xc010 
    /*00017404*/ CMP         R0, R3 
    /*00017408*/ BEQ         VPSS_DRV_GetCmdName_x17658
    /*0001740c*/ MOVW        R3, #20547                  @ 0x5043 
    /*00017410*/ MOVT        R3, #50076                  @ 0xc39c 
    /*00017414*/ CMP         R0, R3 
    /*00017418*/ BEQ         VPSS_DRV_GetCmdName_x17778
    /*0001741c*/ MOVW        R3, #20496                  @ 0x5010 
    /*00017420*/ MOVT        R3, #49164                  @ 0xc00c 
    /*00017424*/ CMP         R0, R3 
    /*00017428*/ BNE         VPSS_DRV_GetCmdName_x17568
    VPSS_DRV_GetCmdName_x1742c:
    /*0001742c*/ MOVW        R0, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x539c] 
    /*00017430*/ MOVT        R0, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x539c] 
    /*00017434*/ BX          LR 
    VPSS_DRV_GetCmdName_x17438:
    /*00017438*/ MOVW        R3, #20523                  @ 0x502b 
    /*0001743c*/ CMP         R0, R3 
    /*00017440*/ BEQ         VPSS_DRV_GetCmdName_x1776c
    /*00017444*/ BLS         VPSS_DRV_GetCmdName_x176d4
    /*00017448*/ MOVW        R3, #20521                  @ 0x5029 
    /*0001744c*/ MOVT        R3, #16388                  @ 0x4004 
    /*00017450*/ CMP         R0, R3 
    /*00017454*/ BEQ         VPSS_DRV_GetCmdName_x1764c
    /*00017458*/ MOVW        R3, #20522                  @ 0x502a 
    /*0001745c*/ MOVT        R3, #16388                  @ 0x4004 
    /*00017460*/ CMP         R0, R3 
    /*00017464*/ BEQ         VPSS_DRV_GetCmdName_x1776c
    /*00017468*/ MOVW        R3, #20500                  @ 0x5014 
    /*0001746c*/ MOVT        R3, #16388                  @ 0x4004 
    /*00017470*/ CMP         R0, R3 
    /*00017474*/ BNE         VPSS_DRV_GetCmdName_x17568
    VPSS_DRV_GetCmdName_x17478:
    /*00017478*/ MOVW        R0, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x53b8] 
    /*0001747c*/ MOVT        R0, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x53b8] 
    /*00017480*/ BX          LR 
    VPSS_DRV_GetCmdName_x17484:
    /*00017484*/ MOVW        R3, #20519                  @ 0x5027 
    /*00017488*/ MOVT        R3, #16396                  @ 0x400c 
    /*0001748c*/ CMP         R0, R3 
    /*00017490*/ BEQ         VPSS_DRV_GetCmdName_x175a4
    /*00017494*/ BHI         VPSS_DRV_GetCmdName_x175ec
    /*00017498*/ MOVW        R3, #20517                  @ 0x5025 
    /*0001749c*/ MOVT        R3, #16392                  @ 0x4008 
    /*000174a0*/ CMP         R0, R3 
    /*000174a4*/ BEQ         VPSS_DRV_GetCmdName_x17784
    /*000174a8*/ MOVW        R3, #20497                  @ 0x5011 
    /*000174ac*/ MOVT        R3, #16396                  @ 0x400c 
    /*000174b0*/ CMP         R0, R3 
    /*000174b4*/ BEQ         VPSS_DRV_GetCmdName_x1742c
    /*000174b8*/ MOVW        R3, #20507                  @ 0x501b 
    /*000174bc*/ MOVT        R3, #16392                  @ 0x4008 
    /*000174c0*/ CMP         R0, R3 
    /*000174c4*/ BNE         VPSS_DRV_GetCmdName_x17568
    VPSS_DRV_GetCmdName_x174c8:
    /*000174c8*/ MOVW        R0, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x54f4] 
    /*000174cc*/ MOVT        R0, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x54f4] 
    /*000174d0*/ BX          LR 
    VPSS_DRV_GetCmdName_x174d4:
    /*000174d4*/ MOVW        R3, #20531                  @ 0x5033 
    /*000174d8*/ MOVT        R3, #32800                  @ 0x8020 
    /*000174dc*/ CMP         R0, R3 
    /*000174e0*/ BEQ         VPSS_DRV_GetCmdName_x177a8
    /*000174e4*/ BHI         VPSS_DRV_GetCmdName_x175b0
    /*000174e8*/ MOVW        R3, #20525                  @ 0x502d 
    /*000174ec*/ MOVT        R3, #32792                  @ 0x8018 
    /*000174f0*/ CMP         R0, R3 
    /*000174f4*/ BEQ         VPSS_DRV_GetCmdName_x177c0
    /*000174f8*/ MOVW        R3, #20529                  @ 0x5031 
    /*000174fc*/ MOVT        R3, #32796                  @ 0x801c 
    /*00017500*/ CMP         R0, R3 
    /*00017504*/ BEQ         VPSS_DRV_GetCmdName_x17790
    /*00017508*/ MOVW        R3, #20492                  @ 0x500c 
    /*0001750c*/ MOVT        R3, #32792                  @ 0x8018 
    /*00017510*/ CMP         R0, R3 
    /*00017514*/ BNE         VPSS_DRV_GetCmdName_x17568
    VPSS_DRV_GetCmdName_x17518:
    /*00017518*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5360] 
    /*0001751c*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5360] 
    /*00017520*/ BX          LR 
    VPSS_DRV_GetCmdName_x17524:
    /*00017524*/ MOVW        R3, #20528                  @ 0x5030 
    /*00017528*/ MOVT        R3, #17048                  @ 0x4298 
    /*0001752c*/ CMP         R0, R3 
    /*00017530*/ BEQ         VPSS_DRV_GetCmdName_x17790
    /*00017534*/ BLS         VPSS_DRV_GetCmdName_x17628
    /*00017538*/ MOVW        R3, #20502                  @ 0x5016 
    /*0001753c*/ MOVT        R3, #18736                  @ 0x4930 
    /*00017540*/ CMP         R0, R3 
    /*00017544*/ BEQ         VPSS_DRV_GetCmdName_x17720
    /*00017548*/ MOVW        R3, #20513                  @ 0x5021 
    /*0001754c*/ MOVT        R3, #20192                  @ 0x4ee0 
    /*00017550*/ CMP         R0, R3 
    /*00017554*/ BEQ         VPSS_DRV_GetCmdName_x177cc
    /*00017558*/ MOVW        R3, #20546                  @ 0x5042 
    /*0001755c*/ MOVT        R3, #17308                  @ 0x439c 
    /*00017560*/ CMP         R0, R3 
    /*00017564*/ BEQ         VPSS_DRV_GetCmdName_x17778
    VPSS_DRV_GetCmdName_x17568:
    /*00017568*/ MOVW        R0, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5500] 
    /*0001756c*/ MOVT        R0, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5500] 
    /*00017570*/ BX          LR 
    VPSS_DRV_GetCmdName_x17574:
    /*00017574*/ MOVW        R3, #20545                  @ 0x5041 
    /*00017578*/ MOVT        R3, #32780                  @ 0x800c 
    /*0001757c*/ CMP         R0, R3 
    /*00017580*/ BEQ         VPSS_DRV_GetCmdName_x1761c
    /*00017584*/ MOVW        R3, #20533                  @ 0x5035 
    /*00017588*/ MOVT        R3, #32784                  @ 0x8010 
    /*0001758c*/ CMP         R0, R3 
    /*00017590*/ BEQ         VPSS_DRV_GetCmdName_x177d8
    /*00017594*/ MOVW        R3, #20520                  @ 0x5028 
    /*00017598*/ MOVT        R3, #32780                  @ 0x800c 
    /*0001759c*/ CMP         R0, R3 
    /*000175a0*/ BNE         VPSS_DRV_GetCmdName_x17568
    VPSS_DRV_GetCmdName_x175a4:
    /*000175a4*/ MOVW        R0, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x54dc] 
    /*000175a8*/ MOVT        R0, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x54dc] 
    /*000175ac*/ BX          LR 
    VPSS_DRV_GetCmdName_x175b0:
    /*000175b0*/ MOVW        R3, #20512                  @ 0x5020 
    /*000175b4*/ MOVT        R3, #32808                  @ 0x8028 
    /*000175b8*/ CMP         R0, R3 
    /*000175bc*/ BEQ         VPSS_DRV_GetCmdName_x177e4
    /*000175c0*/ MOVW        R3, #20486                  @ 0x5006 
    /*000175c4*/ MOVT        R3, #32840                  @ 0x8048 
    /*000175c8*/ CMP         R0, R3 
    /*000175cc*/ BEQ         VPSS_DRV_GetCmdName_x17760
    /*000175d0*/ MOVW        R3, #20481                  @ 0x5001 
    /*000175d4*/ MOVT        R3, #32808                  @ 0x8028 
    /*000175d8*/ CMP         R0, R3 
    /*000175dc*/ BNE         VPSS_DRV_GetCmdName_x17568
    VPSS_DRV_GetCmdName_x175e0:
    /*000175e0*/ MOVW        R0, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52fc] 
    /*000175e4*/ MOVT        R0, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52fc] 
    /*000175e8*/ BX          LR 
    VPSS_DRV_GetCmdName_x175ec:
    /*000175ec*/ MOVW        R3, #20550                  @ 0x5046 
    /*000175f0*/ MOVT        R3, #16400                  @ 0x4010 
    /*000175f4*/ CMP         R0, R3 
    /*000175f8*/ BEQ         VPSS_DRV_GetCmdName_x177b4
    /*000175fc*/ MOVW        R3, #20491                  @ 0x500b 
    /*00017600*/ MOVT        R3, #16408                  @ 0x4018 
    /*00017604*/ CMP         R0, R3 
    /*00017608*/ BEQ         VPSS_DRV_GetCmdName_x17518
    /*0001760c*/ MOVW        R3, #20544                  @ 0x5040 
    /*00017610*/ MOVT        R3, #16396                  @ 0x400c 
    /*00017614*/ CMP         R0, R3 
    /*00017618*/ BNE         VPSS_DRV_GetCmdName_x17568
    VPSS_DRV_GetCmdName_x1761c:
    /*0001761c*/ MOVW        R0, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5454] 
    /*00017620*/ MOVT        R0, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5454] 
    /*00017624*/ BX          LR 
    VPSS_DRV_GetCmdName_x17628:
    /*00017628*/ MOVW        R3, #20532                  @ 0x5034 
    /*0001762c*/ MOVT        R3, #16960                  @ 0x4240 
    /*00017630*/ CMP         R0, R3 
    /*00017634*/ BEQ         VPSS_DRV_GetCmdName_x177d8
    /*00017638*/ MOVW        R3, #20526                  @ 0x502e 
    /*0001763c*/ MOVT        R3, #17024                  @ 0x4280 
    /*00017640*/ CMP         R0, R3 
    /*00017644*/ BEQ         VPSS_DRV_GetCmdName_x173c8
    /*00017648*/ B           VPSS_DRV_GetCmdName_x17568
    VPSS_DRV_GetCmdName_x1764c:
    /*0001764c*/ MOVW        R0, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x54e8] 
    /*00017650*/ MOVT        R0, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x54e8] 
    /*00017654*/ BX          LR 
    VPSS_DRV_GetCmdName_x17658:
    /*00017658*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x53f4] 
    /*0001765c*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x53f4] 
    /*00017660*/ BX          LR 
    VPSS_DRV_GetCmdName_x17664:
    /*00017664*/ MOVW        R3, #20490                  @ 0x500a 
    /*00017668*/ CMP         R0, R3 
    /*0001766c*/ BNE         VPSS_DRV_GetCmdName_x17568
    VPSS_DRV_GetCmdName_x17670:
    /*00017670*/ MOVW        R0, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x534c] 
    /*00017674*/ MOVT        R0, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x534c] 
    /*00017678*/ BX          LR 
    VPSS_DRV_GetCmdName_x1767c:
    /*0001767c*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5380] 
    /*00017680*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5380] 
    /*00017684*/ BX          LR 
    VPSS_DRV_GetCmdName_x17688:
    /*00017688*/ MOVW        R3, #20489                  @ 0x5009 
    /*0001768c*/ MOVT        R3, #16424                  @ 0x4028 
    /*00017690*/ CMP         R0, R3 
    /*00017694*/ BEQ         VPSS_DRV_GetCmdName_x17670
    /*00017698*/ MOVW        R3, #20511                  @ 0x501f 
    /*0001769c*/ MOVT        R3, #16424                  @ 0x4028 
    /*000176a0*/ CMP         R0, R3 
    /*000176a4*/ BEQ         VPSS_DRV_GetCmdName_x177e4
    /*000176a8*/ MOV         R3, #20480                  @ 0x5000 
    /*000176ac*/ MOVT        R3, #16424                  @ 0x4028 
    /*000176b0*/ CMP         R0, R3 
    /*000176b4*/ BNE         VPSS_DRV_GetCmdName_x17568
    /*000176b8*/ B           VPSS_DRV_GetCmdName_x175e0
    VPSS_DRV_GetCmdName_x176bc:
    /*000176bc*/ MOVW        R3, #20482                  @ 0x5002 
    /*000176c0*/ CMP         R0, R3 
    /*000176c4*/ BCC         VPSS_DRV_GetCmdName_x17568
    /*000176c8*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5308] 
    /*000176cc*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5308] 
    /*000176d0*/ BX          LR 
    VPSS_DRV_GetCmdName_x176d4:
    /*000176d4*/ SUB         R0, R0, #20480              @ 0x5000 
    /*000176d8*/ SUB         R0, R0, #29 
    /*000176dc*/ CMP         R0, #1 
    /*000176e0*/ BHI         VPSS_DRV_GetCmdName_x17568
    /*000176e4*/ MOVW        R0, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x53cc] 
    /*000176e8*/ MOVT        R0, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x53cc] 
    /*000176ec*/ BX          LR 
    VPSS_DRV_GetCmdName_x176f0:
    /*000176f0*/ MOVW        R3, #20505                  @ 0x5019 
    /*000176f4*/ MOVT        R3, #33024                  @ 0x8100 
    /*000176f8*/ CMP         R0, R3 
    /*000176fc*/ BCC         VPSS_DRV_GetCmdName_x17568
    /*00017700*/ MOVW        R3, #20506                  @ 0x501a 
    /*00017704*/ MOVT        R3, #33024                  @ 0x8100 
    /*00017708*/ CMP         R0, R3 
    /*0001770c*/ BLS         VPSS_DRV_GetCmdName_x1773c
    /*00017710*/ MOVW        R3, #20503                  @ 0x5017 
    /*00017714*/ MOVT        R3, #35120                  @ 0x8930 
    /*00017718*/ CMP         R0, R3 
    /*0001771c*/ BNE         VPSS_DRV_GetCmdName_x17568
    VPSS_DRV_GetCmdName_x17720:
    /*00017720*/ MOVW        R0, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5428] 
    /*00017724*/ MOVT        R0, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5428] 
    /*00017728*/ BX          LR 
    VPSS_DRV_GetCmdName_x1772c:
    /*0001772c*/ MOVW        R3, #20504                  @ 0x5018 
    /*00017730*/ MOVT        R3, #16640                  @ 0x4100 
    /*00017734*/ CMP         R0, R3 
    /*00017738*/ BNE         VPSS_DRV_GetCmdName_x17568
    VPSS_DRV_GetCmdName_x1773c:
    /*0001773c*/ MOVW        R0, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5478] 
    /*00017740*/ MOVT        R0, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5478] 
    /*00017744*/ BX          LR 
    VPSS_DRV_GetCmdName_x17748:
    /*00017748*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5318] 
    /*0001774c*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5318] 
    /*00017750*/ BX          LR 
    VPSS_DRV_GetCmdName_x17754:
    /*00017754*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5340] 
    /*00017758*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5340] 
    /*0001775c*/ BX          LR 
    VPSS_DRV_GetCmdName_x17760:
    /*00017760*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5324] 
    /*00017764*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5324] 
    /*00017768*/ BX          LR 
    VPSS_DRV_GetCmdName_x1776c:
    /*0001776c*/ MOVW        R0, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5448] 
    /*00017770*/ MOVT        R0, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5448] 
    /*00017774*/ BX          LR 
    VPSS_DRV_GetCmdName_x17778:
    /*00017778*/ MOVW        R0, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5468] 
    /*0001777c*/ MOVT        R0, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5468] 
    /*00017780*/ BX          LR 
    VPSS_DRV_GetCmdName_x17784:
    /*00017784*/ MOVW        R0, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5438] 
    /*00017788*/ MOVT        R0, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5438] 
    /*0001778c*/ BX          LR 
    VPSS_DRV_GetCmdName_x17790:
    /*00017790*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x54a0] 
    /*00017794*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x54a0] 
    /*00017798*/ BX          LR 
    VPSS_DRV_GetCmdName_x1779c:
    /*0001779c*/ MOVW        R0, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x54c4] 
    /*000177a0*/ MOVT        R0, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x54c4] 
    /*000177a4*/ BX          LR 
    VPSS_DRV_GetCmdName_x177a8:
    /*000177a8*/ MOVW        R0, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x54b0] 
    /*000177ac*/ MOVT        R0, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x54b0] 
    /*000177b0*/ BX          LR 
    VPSS_DRV_GetCmdName_x177b4:
    /*000177b4*/ MOVW        R0, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x54d0] 
    /*000177b8*/ MOVT        R0, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x54d0] 
    /*000177bc*/ BX          LR 
    VPSS_DRV_GetCmdName_x177c0:
    /*000177c0*/ MOVW        R0, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5408] 
    /*000177c4*/ MOVT        R0, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5408] 
    /*000177c8*/ BX          LR 
    VPSS_DRV_GetCmdName_x177cc:
    /*000177cc*/ MOVW        R0, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5488] 
    /*000177d0*/ MOVT        R0, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5488] 
    /*000177d4*/ BX          LR 
    VPSS_DRV_GetCmdName_x177d8:
    /*000177d8*/ MOVW        R0, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x54b8] 
    /*000177dc*/ MOVT        R0, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x54b8] 
    /*000177e0*/ BX          LR 
    VPSS_DRV_GetCmdName_x177e4:
    /*000177e4*/ MOVW        R0, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x53e4] 
    /*000177e8*/ MOVT        R0, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x53e4] 
    /*000177ec*/ BX          LR 
FUNC_END VPSS_DRV_GetCmdName


FUNC_BEGIN VPSS_DRV_MULTI_SetScale
    /*000177f0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000177f4*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000177f8*/ SUB         SP, SP, #164                @ 0xa4 
    /*000177fc*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00017800*/ MOV         FP, R3 
    /*00017804*/ MOV         R6, #72                     @ 0x48 
    /*00017808*/ LDR         SL, [IP, R0, LSL #2] 
    /*0001780c*/ MOVW        R7, #1080                   @ 0x438 
    /*00017810*/ LDR         R3, [SP, #200]              @ 0xc8 
    /*00017814*/ MOV         R4, #0 
    /*00017818*/ MOV         R9, R2 
    /*0001781c*/ MOV         R8, R4 
    /*00017820*/ MOV         R5, #1 
    /*00017824*/ STR         IP, [SP, #12] 
    /*00017828*/ MLA         R6, R6, R3, SL 
    /*0001782c*/ STR         R0, [SP, #8] 
    /*00017830*/ MLA         R7, R7, R3, SL 
    /*00017834*/ MOV         R3, SL 
    /*00017838*/ ADD         R6, R6, #18688              @ 0x4900 
    /*0001783c*/ STR         R1, [SP, #4] 
    /*00017840*/ ADD         R6, R6, #60                 @ 0x3c 
    /*00017844*/ STR         SL, [SP] 
    /*00017848*/ ADD         R7, R7, #26368              @ 0x6700 
    /*0001784c*/ STR         FP, [SP, #16] 
    /*00017850*/ ADD         R7, R7, #196                @ 0xc4 
    VPSS_DRV_MULTI_SetScale_x17854:
    /*00017854*/ ADD         R2, R3, #12288              @ 0x3000 
    /*00017858*/ ADD         R3, R3, #16384              @ 0x4000 
    /*0001785c*/ MOV         R0, R4 
    /*00017860*/ MOV         IP, #1048576                @ 0x100000 
    /*00017864*/ LDR         R3, [R3, #2724]             @ 0xaa4 
    /*00017868*/ LDR         R1, [R2, #3176]             @ 0xc68 
    /*0001786c*/ LDR         R2, [R2, #3180]             @ 0xc6c 
    /*00017870*/ SUBS        R3, R3, #25 
    /*00017874*/ STR         R5, [SP, #60]               @ 0x3c 
    /*00017878*/ MOVNE       R3, #1 
    /*0001787c*/ STR         R8, [SP, #88]               @ 0x58 
    /*00017880*/ STR         R3, [SP, #96]               @ 0x60 
    /*00017884*/ STR         R3, [SP, #100]              @ 0x64 
    /*00017888*/ STR         R2, [SP, #156]              @ 0x9c 
    /*0001788c*/ STR         R2, [SP, #148]              @ 0x94 
    /*00017890*/ STR         R8, [SP, #92]               @ 0x5c 
    /*00017894*/ STR         IP, [SP, #56]               @ 0x38 
    /*00017898*/ STR         R5, [SP, #80]               @ 0x50 
    /*0001789c*/ STR         R5, [SP, #84]               @ 0x54 
    /*000178a0*/ STR         R8, [SP, #136]              @ 0x88 
    /*000178a4*/ STR         R8, [SP, #140]              @ 0x8c 
    /*000178a8*/ STR         IP, [SP, #132]              @ 0x84 
    /*000178ac*/ STR         R5, [SP, #128]              @ 0x80 
    /*000178b0*/ STR         R5, [SP, #124]              @ 0x7c 
    /*000178b4*/ STR         R1, [SP, #152]              @ 0x98 
    /*000178b8*/ STR         R1, [SP, #144]              @ 0x90 
    /*000178bc*/ BL          0x00000000000178BC          @ VPSS_HAL_GetHalChn [R_ARM_CALL: .text+0x263bc] 
    /*000178c0*/ LDR         R2, [R6] 
    /*000178c4*/ CMP         R2, #1 
    /*000178c8*/ MOV         R3, R0 
    /*000178cc*/ BEQ         VPSS_DRV_MULTI_SetScale_x1794c
    VPSS_DRV_MULTI_SetScale_x178d0:
    /*000178d0*/ MOV         R1, R3 
    /*000178d4*/ LDR         R3, [SP] 
    /*000178d8*/ MOVW        R2, #15848                  @ 0x3de8 
    /*000178dc*/ ADD         R2, R2, R4, LSL #2 
    /*000178e0*/ LDR         R0, [SP, #4] 
    /*000178e4*/ ADD         R4, R4, #1 
    /*000178e8*/ LDR         R2, [R3, R2] 
    /*000178ec*/ ADD         R6, R6, #24 
    /*000178f0*/ BL          0x00000000000178F0          @ VPSS_HAL_SetChnScaleEn [R_ARM_CALL: .text+0x267f8] 
    /*000178f4*/ CMP         R4, #3 
    /*000178f8*/ ADD         R9, R9, #96                 @ 0x60 
    /*000178fc*/ ADD         R7, R7, #360                @ 0x168 
    /*00017900*/ LDRNE       R3, [SP, #12] 
    /*00017904*/ LDRNE       R2, [SP, #8] 
    /*00017908*/ LDRNE       R3, [R3, R2, LSL #2] 
    /*0001790c*/ BNE         VPSS_DRV_MULTI_SetScale_x17854
    /*00017910*/ LDR         SL, [SP] 
    /*00017914*/ MOV         R3, #72                     @ 0x48 
    /*00017918*/ LDR         R1, [SP, #200]              @ 0xc8 
    /*0001791c*/ MOVW        R2, #18748                  @ 0x493c 
    /*00017920*/ LDR         FP, [SP, #16] 
    /*00017924*/ MLA         R3, R3, R1, SL 
    /*00017928*/ LDR         R4, [R3, R2] 
    /*0001792c*/ CMP         R4, #0 
    /*00017930*/ BNE         VPSS_DRV_MULTI_SetScale_x17944
    /*00017934*/ ADD         SL, SL, #12288              @ 0x3000 
    /*00017938*/ LDR         R5, [SL, #3560]             @ 0xde8 
    /*0001793c*/ CMP         R5, #1 
    /*00017940*/ BEQ         VPSS_DRV_MULTI_SetScale_x17aac
    VPSS_DRV_MULTI_SetScale_x17944:
    /*00017944*/ ADD         SP, SP, #164                @ 0xa4 
    /*00017948*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_MULTI_SetScale_x1794c:
    /*0001794c*/ LDR         R2, [R9, #64]               @ 0x40 
    /*00017950*/ CMP         R4, #1 
    /*00017954*/ STR         R2, [SP, #56]               @ 0x38 
    /*00017958*/ LDR         R2, [SP] 
    /*0001795c*/ BEQ         VPSS_DRV_MULTI_SetScale_x17a64
    /*00017960*/ CMP         R4, #2 
    /*00017964*/ BEQ         VPSS_DRV_MULTI_SetScale_x17a1c
    /*00017968*/ LDR         IP, [SP, #16] 
    /*0001796c*/ ADD         R2, R2, #16384              @ 0x4000 
    /*00017970*/ LDR         R2, [R2, #3100]             @ 0xc1c 
    /*00017974*/ LDR         R0, [IP, #596]              @ 0x254 
    /*00017978*/ LDR         R1, [IP, #600]              @ 0x258 
    /*0001797c*/ CMP         R2, #28 
    /*00017980*/ CMPNE       R2, #25 
    /*00017984*/ STR         R0, [SP, #88]               @ 0x58 
    /*00017988*/ MOVEQ       R2, #1 
    /*0001798c*/ LDR         R0, [IP, #604]              @ 0x25c 
    /*00017990*/ MOVNE       R2, #0 
    /*00017994*/ STR         R1, [SP, #92]               @ 0x5c 
    /*00017998*/ EOR         R2, R2, #1 
    /*0001799c*/ LDR         R1, [IP, #608]              @ 0x260 
    /*000179a0*/ STR         R2, [SP, #100]              @ 0x64 
    /*000179a4*/ STR         R0, [SP, #152]              @ 0x98 
    /*000179a8*/ STR         R1, [SP, #144]              @ 0x90 
    VPSS_DRV_MULTI_SetScale_x179ac:
    /*000179ac*/ LDR         R2, [SP] 
    /*000179b0*/ MOV         R1, R3 
    /*000179b4*/ LDR         IP, [R9, #68]               @ 0x44 
    /*000179b8*/ ADD         R0, R2, #12288              @ 0x3000 
    /*000179bc*/ ADD         R2, SP, #56                 @ 0x38 
    /*000179c0*/ STR         R3, [SP, #20] 
    /*000179c4*/ LDR         LR, [R0, #3180]             @ 0xc6c 
    /*000179c8*/ STR         IP, [SP, #132]              @ 0x84 
    /*000179cc*/ LDR         IP, [R7] 
    /*000179d0*/ LDR         R0, [SP, #4] 
    /*000179d4*/ STR         LR, [SP, #156]              @ 0x9c 
    /*000179d8*/ STR         IP, [SP, #148]              @ 0x94 
    /*000179dc*/ BL          0x00000000000179DC          @ VPSS_HAL_SetChnSclCfg [R_ARM_CALL: .text+0x274d4] 
    /*000179e0*/ LDRD        SL, [R9] 
    /*000179e4*/ ADD         R2, SP, #24 
    /*000179e8*/ LDR         R3, [SP, #20] 
    /*000179ec*/ LDR         R0, [SP, #4] 
    /*000179f0*/ STRD        SL, [SP, #24] 
    /*000179f4*/ LDRD        SL, [R9, #8] 
    /*000179f8*/ MOV         R1, R3 
    /*000179fc*/ STRD        SL, [SP, #32] 
    /*00017a00*/ LDRD        SL, [R9, #16] 
    /*00017a04*/ STRD        SL, [SP, #40]               @ 0x28 
    /*00017a08*/ LDRD        SL, [R9, #24] 
    /*00017a0c*/ STRD        SL, [SP, #48]               @ 0x30 
    /*00017a10*/ BL          0x0000000000017A10          @ VPSS_HAL_SetChnSclCoeff [R_ARM_CALL: .text+0x27644] 
    /*00017a14*/ LDR         R3, [SP, #20] 
    /*00017a18*/ B           VPSS_DRV_MULTI_SetScale_x178d0
    VPSS_DRV_MULTI_SetScale_x17a1c:
    /*00017a1c*/ LDR         IP, [SP, #16] 
    /*00017a20*/ ADD         R2, R2, #20480              @ 0x5000 
    /*00017a24*/ LDR         R2, [R2, #508]              @ 0x1fc 
    /*00017a28*/ LDR         R0, [IP, #644]              @ 0x284 
    /*00017a2c*/ LDR         R1, [IP, #648]              @ 0x288 
    /*00017a30*/ CMP         R2, #28 
    /*00017a34*/ CMPNE       R2, #25 
    /*00017a38*/ STR         R0, [SP, #88]               @ 0x58 
    /*00017a3c*/ MOVEQ       R2, #1 
    /*00017a40*/ LDR         R0, [IP, #604]              @ 0x25c 
    /*00017a44*/ MOVNE       R2, #0 
    /*00017a48*/ STR         R1, [SP, #92]               @ 0x5c 
    /*00017a4c*/ EOR         R2, R2, #1 
    /*00017a50*/ LDR         R1, [IP, #656]              @ 0x290 
    /*00017a54*/ STR         R2, [SP, #100]              @ 0x64 
    /*00017a58*/ STR         R0, [SP, #152]              @ 0x98 
    /*00017a5c*/ STR         R1, [SP, #144]              @ 0x90 
    /*00017a60*/ B           VPSS_DRV_MULTI_SetScale_x179ac
    VPSS_DRV_MULTI_SetScale_x17a64:
    /*00017a64*/ LDR         IP, [SP, #16] 
    /*00017a68*/ ADD         R2, R2, #16384              @ 0x4000 
    /*00017a6c*/ LDR         R2, [R2, #3852]             @ 0xf0c 
    /*00017a70*/ LDR         R0, [IP, #620]              @ 0x26c 
    /*00017a74*/ LDR         R1, [IP, #624]              @ 0x270 
    /*00017a78*/ CMP         R2, #28 
    /*00017a7c*/ CMPNE       R2, #25 
    /*00017a80*/ STR         R0, [SP, #88]               @ 0x58 
    /*00017a84*/ MOVEQ       R2, #1 
    /*00017a88*/ LDR         R0, [IP, #604]              @ 0x25c 
    /*00017a8c*/ MOVNE       R2, #0 
    /*00017a90*/ STR         R1, [SP, #92]               @ 0x5c 
    /*00017a94*/ EOR         R2, R2, #1 
    /*00017a98*/ LDR         R1, [IP, #632]              @ 0x278 
    /*00017a9c*/ STR         R2, [SP, #100]              @ 0x64 
    /*00017aa0*/ STR         R0, [SP, #152]              @ 0x98 
    /*00017aa4*/ STR         R1, [SP, #144]              @ 0x90 
    /*00017aa8*/ B           VPSS_DRV_MULTI_SetScale_x179ac
    VPSS_DRV_MULTI_SetScale_x17aac:
    /*00017aac*/ LDR         R2, [SP, #8] 
    /*00017ab0*/ MOV         R1, R4 
    /*00017ab4*/ LDR         R3, [SP, #12] 
    /*00017ab8*/ LDR         LR, [FP, #596]              @ 0x254 
    /*00017abc*/ LDR         R7, [SP, #4] 
    /*00017ac0*/ LDR         R3, [R3, R2, LSL #2] 
    /*00017ac4*/ ADD         R2, SP, #56                 @ 0x38 
    /*00017ac8*/ LDR         R6, [FP, #600]              @ 0x258 
    /*00017acc*/ ADD         R0, R3, #16384              @ 0x4000 
    /*00017ad0*/ ADD         R3, R3, #12288              @ 0x3000 
    /*00017ad4*/ STR         LR, [SP, #88]               @ 0x58 
    /*00017ad8*/ LDR         IP, [R3, #3180]             @ 0xc6c 
    /*00017adc*/ LDR         R3, [R0, #2724]             @ 0xaa4 
    /*00017ae0*/ MOV         R0, R7 
    /*00017ae4*/ LDR         LR, [FP, #604]              @ 0x25c 
    /*00017ae8*/ STR         IP, [SP, #156]              @ 0x9c 
    /*00017aec*/ SUBS        R3, R3, #25 
    /*00017af0*/ STR         IP, [SP, #148]              @ 0x94 
    /*00017af4*/ LDR         IP, [FP, #608]              @ 0x260 
    /*00017af8*/ MOVNE       R3, #1 
    /*00017afc*/ STR         LR, [SP, #152]              @ 0x98 
    /*00017b00*/ STR         R3, [SP, #96]               @ 0x60 
    /*00017b04*/ STR         R3, [SP, #100]              @ 0x64 
    /*00017b08*/ MOV         R3, #1048576                @ 0x100000 
    /*00017b0c*/ STR         IP, [SP, #144]              @ 0x90 
    /*00017b10*/ STR         R3, [SP, #56]               @ 0x38 
    /*00017b14*/ STR         R3, [SP, #132]              @ 0x84 
    /*00017b18*/ STR         R5, [SP, #60]               @ 0x3c 
    /*00017b1c*/ STR         R5, [SP, #80]               @ 0x50 
    /*00017b20*/ STR         R5, [SP, #84]               @ 0x54 
    /*00017b24*/ STR         R4, [SP, #136]              @ 0x88 
    /*00017b28*/ STR         R4, [SP, #140]              @ 0x8c 
    /*00017b2c*/ STR         R5, [SP, #128]              @ 0x80 
    /*00017b30*/ STR         R5, [SP, #124]              @ 0x7c 
    /*00017b34*/ STR         R6, [SP, #92]               @ 0x5c 
    /*00017b38*/ BL          0x0000000000017B38          @ VPSS_HAL_SetChnSclCfg [R_ARM_CALL: .text+0x274d4] 
    /*00017b3c*/ MOV         R2, R5 
    /*00017b40*/ MOV         R1, R4 
    /*00017b44*/ MOV         R0, R7 
    /*00017b48*/ BL          0x0000000000017B48          @ VPSS_HAL_SetChnScaleEn [R_ARM_CALL: .text+0x267f8] 
    /*00017b4c*/ ADD         SP, SP, #164                @ 0xa4 
    /*00017b50*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VPSS_DRV_MULTI_SetScale


FUNC_BEGIN VPSS_DRV_MULTI_SetCurCtrl
    /*00017b54*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00017b58*/ SUB         SP, SP, #200                @ 0xc8 
    /*00017b5c*/ LDRD        R4, [R3, #136]              @ 0x88 
    /*00017b60*/ MOV         R9, R1 
    /*00017b64*/ LDRD        R6, [R3, #144]              @ 0x90 
    /*00017b68*/ MOV         R8, R2 
    /*00017b6c*/ LDR         LR, [R3, #68]               @ 0x44 
    /*00017b70*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00017b74*/ STRD        R4, [SP, #32] 
    /*00017b78*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00017b7c*/ LDRD        R4, [R3] 
    /*00017b80*/ STRD        R6, [SP, #40]               @ 0x28 
    /*00017b84*/ LDRD        R6, [R3, #8] 
    /*00017b88*/ STRD        R4, [SP, #48]               @ 0x30 
    /*00017b8c*/ LDRD        R4, [R3, #200]              @ 0xc8 
    /*00017b90*/ STRD        R6, [SP, #56]               @ 0x38 
    /*00017b94*/ LDRD        R6, [R3, #208]              @ 0xd0 
    /*00017b98*/ STRD        R4, [SP, #64]               @ 0x40 
    /*00017b9c*/ LDRD        R4, [R3, #240]              @ 0xf0 
    /*00017ba0*/ STRD        R6, [SP, #72]               @ 0x48 
    /*00017ba4*/ LDRD        R6, [R3, #248]              @ 0xf8 
    /*00017ba8*/ LDR         R1, [R3, #268]              @ 0x10c 
    /*00017bac*/ LDR         SL, [R3, #64]               @ 0x40 
    /*00017bb0*/ LDR         R2, [R3, #264]              @ 0x108 
    /*00017bb4*/ STR         LR, [SP, #100]              @ 0x64 
    /*00017bb8*/ STRD        R4, [SP, #112]              @ 0x70 
    /*00017bbc*/ LDR         LR, [R3, #224]              @ 0xe0 
    /*00017bc0*/ LDRD        R4, [R3, #24] 
    /*00017bc4*/ STRD        R6, [SP, #120]              @ 0x78 
    /*00017bc8*/ LDRD        R6, [R3, #32] 
    /*00017bcc*/ STR         R1, [SP, #132]              @ 0x84 
    /*00017bd0*/ STRD        R4, [SP, #80]               @ 0x50 
    /*00017bd4*/ STR         SL, [SP, #96]               @ 0x60 
    /*00017bd8*/ LDR         R4, [IP, R0, LSL #2] 
    /*00017bdc*/ LDR         SL, [R3, #76]               @ 0x4c 
    /*00017be0*/ STR         R2, [SP, #128]              @ 0x80 
    /*00017be4*/ STR         LR, [SP, #104]              @ 0x68 
    /*00017be8*/ STRD        R6, [SP, #88]               @ 0x58 
    /*00017bec*/ LDR         IP, [R3, #112]              @ 0x70 
    /*00017bf0*/ LDR         R2, [R3, #120]              @ 0x78 
    /*00017bf4*/ LDR         R0, [R3, #124]              @ 0x7c 
    /*00017bf8*/ ADDS        R6, IP, #0 
    /*00017bfc*/ SUB         R5, R2, #1 
    /*00017c00*/ LDR         LR, [R3, #80]               @ 0x50 
    /*00017c04*/ MOVNE       R6, #1 
    /*00017c08*/ CLZ         R5, R5 
    /*00017c0c*/ CMP         R0, #0 
    /*00017c10*/ STR         SL, [SP, #144]              @ 0x90 
    /*00017c14*/ LSR         R5, R5, #5 
    /*00017c18*/ STR         R5, [SP, #160]              @ 0xa0 
    /*00017c1c*/ MOVEQ       R1, #1 
    /*00017c20*/ MOVNE       R5, #1 
    /*00017c24*/ MOVEQ       R5, #0 
    /*00017c28*/ MOVNE       R1, #0 
    /*00017c2c*/ CMP         R2, #0 
    /*00017c30*/ MOVNE       R1, #0 
    /*00017c34*/ ANDEQ       R1, R1, #1 
    /*00017c38*/ STR         R2, [SP, #176]              @ 0xb0 
    /*00017c3c*/ CMP         R1, #0 
    /*00017c40*/ LDR         R1, [R3, #160]              @ 0xa0 
    /*00017c44*/ LDR         R3, [R3, #164]              @ 0xa4 
    /*00017c48*/ STR         R6, [SP, #152]              @ 0x98 
    /*00017c4c*/ STR         R0, [SP, #164]              @ 0xa4 
    /*00017c50*/ STR         R5, [SP, #168]              @ 0xa8 
    /*00017c54*/ STR         LR, [SP, #148]              @ 0x94 
    /*00017c58*/ STR         R1, [SP, #140]              @ 0x8c 
    /*00017c5c*/ STR         R3, [SP, #136]              @ 0x88 
    /*00017c60*/ BEQ         VPSS_DRV_MULTI_SetCurCtrl_x17cc0
    /*00017c64*/ LDR         R3, [R8, #24] 
    /*00017c68*/ ADD         R4, R4, #12288              @ 0x3000 
    /*00017c6c*/ MOV         R2, #0 
    /*00017c70*/ STR         R3, [SP, #192]              @ 0xc0 
    VPSS_DRV_MULTI_SetCurCtrl_x17c74:
    /*00017c74*/ ADD         R1, SP, #24 
    /*00017c78*/ MOV         R0, R9 
    /*00017c7c*/ STR         R2, [SP, #188]              @ 0xbc 
    /*00017c80*/ STR         IP, [SP, #180]              @ 0xb4 
    /*00017c84*/ BL          0x0000000000017C84          @ VPSS_HAL_SetCurCtrl [R_ARM_CALL: .text+0x26af4] 
    /*00017c88*/ LDR         R5, [R8, #44]               @ 0x2c 
    /*00017c8c*/ MOV         R0, R9 
    /*00017c90*/ LDR         LR, [R4, #3196]             @ 0xc7c 
    /*00017c94*/ ADD         R1, SP, #4 
    /*00017c98*/ LDR         IP, [R4, #3180]             @ 0xc6c 
    /*00017c9c*/ LDR         R2, [R8, #48]               @ 0x30 
    /*00017ca0*/ LDR         R3, [R8, #40]               @ 0x28 
    /*00017ca4*/ STMIB       SP, {R5, LR} 
    /*00017ca8*/ STR         IP, [SP, #16] 
    /*00017cac*/ STR         R2, [SP, #12] 
    /*00017cb0*/ STR         R3, [SP, #20] 
    /*00017cb4*/ BL          0x0000000000017CB4          @ VPSS_HAL_SetGrpCropAttr [R_ARM_CALL: .text+0x26bc4] 
    /*00017cb8*/ ADD         SP, SP, #200                @ 0xc8 
    /*00017cbc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_DRV_MULTI_SetCurCtrl_x17cc0:
    /*00017cc0*/ ADD         R4, R4, #12288              @ 0x3000 
    /*00017cc4*/ LDR         R3, [R8, #24] 
    /*00017cc8*/ CMP         R0, #0 
    /*00017ccc*/ LDR         R1, [R4, #3208]             @ 0xc88 
    /*00017cd0*/ ADD         R3, R3, R1 
    /*00017cd4*/ STR         R3, [SP, #192]              @ 0xc0 
    /*00017cd8*/ BEQ         VPSS_DRV_MULTI_SetCurCtrl_x17ce4
    VPSS_DRV_MULTI_SetCurCtrl_x17cdc:
    /*00017cdc*/ LDR         R2, [R4, #3212]             @ 0xc8c 
    /*00017ce0*/ B           VPSS_DRV_MULTI_SetCurCtrl_x17c74
    VPSS_DRV_MULTI_SetCurCtrl_x17ce4:
    /*00017ce4*/ CMP         R2, #0 
    /*00017ce8*/ BNE         VPSS_DRV_MULTI_SetCurCtrl_x17cdc
    /*00017cec*/ B           VPSS_DRV_MULTI_SetCurCtrl_x17c74
FUNC_END VPSS_DRV_MULTI_SetCurCtrl


FUNC_BEGIN VPSS_DRV_CheckRgnChnCapa
    /*00017cf0*/ LDR         R3, [R1] 
    /*00017cf4*/ CMP         R3, #7 
    /*00017cf8*/ BEQ         VPSS_DRV_CheckRgnChnCapa_x17d04
    /*00017cfc*/ MOV         R0, #0 
    /*00017d00*/ BX          LR 
    VPSS_DRV_CheckRgnChnCapa_x17d04:
    /*00017d04*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00017d08*/ SUB         SP, SP, #12 
    /*00017d0c*/ LDR         R2, [R1, #4] 
    /*00017d10*/ CMP         R2, #16 
    /*00017d14*/ BGT         VPSS_DRV_CheckRgnChnCapa_x17d88
    /*00017d18*/ LDR         R2, [R1, #8] 
    /*00017d1c*/ CMP         R2, #10 
    /*00017d20*/ BGT         VPSS_DRV_CheckRgnChnCapa_x17db8
    /*00017d24*/ SUB         R3, R0, #1 
    /*00017d28*/ CMP         R3, #3 
    /*00017d2c*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*00017d30*/ B           VPSS_DRV_CheckRgnChnCapa_x17d58
    /*00017d34*/ ANDEQ       R7, R1, R4, ASR #26 
    /*00017d38*/ ANDEQ       R7, R1, IP, ASR #26 
    /*00017d3c*/ ANDEQ       R7, R1, IP, ASR #26 
    /*00017d40*/ ANDEQ       R7, R1, R4, ASR #26 
    /*00017d44*/ CMP         R2, #0 
    /*00017d48*/ BNE         VPSS_DRV_CheckRgnChnCapa_x17de8
    /*00017d4c*/ MOV         R0, #1 
    VPSS_DRV_CheckRgnChnCapa_x17d50:
    /*00017d50*/ ADD         SP, SP, #12 
    /*00017d54*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckRgnChnCapa_x17d58:
    /*00017d58*/ STR         R0, [SP, #4] 
    /*00017d5c*/ MOVW        R2, #10317                  @ 0x284d 
    /*00017d60*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xdc0] 
    /*00017d64*/ STR         R2, [SP] 
    /*00017d68*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xdc0] 
    /*00017d6c*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5594] 
    /*00017d70*/ MOV         R1, #7 
    /*00017d74*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5594] 
    /*00017d78*/ MOV         R0, #3 
    /*00017d7c*/ BL          0x0000000000017D7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017d80*/ MOV         R0, #0 
    /*00017d84*/ B           VPSS_DRV_CheckRgnChnCapa_x17d50
    VPSS_DRV_CheckRgnChnCapa_x17d88:
    /*00017d88*/ STR         R2, [SP, #4] 
    /*00017d8c*/ MOV         R1, R3 
    /*00017d90*/ MOVW        R2, #10287                  @ 0x282f 
    /*00017d94*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xdc0] 
    /*00017d98*/ STR         R2, [SP] 
    /*00017d9c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xdc0] 
    /*00017da0*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5504] 
    /*00017da4*/ MOV         R0, #3 
    /*00017da8*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5504] 
    /*00017dac*/ BL          0x0000000000017DAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017db0*/ MOV         R0, #0 
    /*00017db4*/ B           VPSS_DRV_CheckRgnChnCapa_x17d50
    VPSS_DRV_CheckRgnChnCapa_x17db8:
    /*00017db8*/ STR         R2, [SP, #4] 
    /*00017dbc*/ MOV         R1, R3 
    /*00017dc0*/ MOVW        R2, #10294                  @ 0x2836 
    /*00017dc4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xdc0] 
    /*00017dc8*/ STR         R2, [SP] 
    /*00017dcc*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xdc0] 
    /*00017dd0*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x552c] 
    /*00017dd4*/ MOV         R0, #3 
    /*00017dd8*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x552c] 
    /*00017ddc*/ BL          0x0000000000017DDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017de0*/ MOV         R0, #0 
    /*00017de4*/ B           VPSS_DRV_CheckRgnChnCapa_x17d50
    VPSS_DRV_CheckRgnChnCapa_x17de8:
    /*00017de8*/ STR         R2, [SP, #4] 
    /*00017dec*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xdc0] 
    /*00017df0*/ MOV         R2, #10304                  @ 0x2840 
    /*00017df4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xdc0] 
    /*00017df8*/ STR         R2, [SP] 
    /*00017dfc*/ MOV         R1, #7 
    /*00017e00*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5554] 
    /*00017e04*/ MOV         R0, #3 
    /*00017e08*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5554] 
    /*00017e0c*/ BL          0x0000000000017E0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017e10*/ MOV         R0, #0 
    /*00017e14*/ B           VPSS_DRV_CheckRgnChnCapa_x17d50
FUNC_END VPSS_DRV_CheckRgnChnCapa


FUNC_BEGIN VPSS_DRV_FuncPreFilter
    /*00017e18*/ MOVW        R3, #20507                  @ 0x501b 
    /*00017e1c*/ MOVT        R3, #16392                  @ 0x4008 
    /*00017e20*/ CMP         R2, R3 
    /*00017e24*/ PUSH        {R4, R5, LR} 
    /*00017e28*/ MOV         R4, R2 
    /*00017e2c*/ SUB         SP, SP, #12 
    /*00017e30*/ BEQ         VPSS_DRV_FuncPreFilter_x17efc
    /*00017e34*/ MOV         R5, R0 
    /*00017e38*/ BLS         VPSS_DRV_FuncPreFilter_x17f18
    /*00017e3c*/ MOVW        R3, #20543                  @ 0x503f 
    /*00017e40*/ MOVT        R3, #32772                  @ 0x8004 
    /*00017e44*/ CMP         R2, R3 
    /*00017e48*/ BEQ         VPSS_DRV_FuncPreFilter_x17efc
    /*00017e4c*/ BLS         VPSS_DRV_FuncPreFilter_x17ec8
    /*00017e50*/ MOVW        R3, #20520                  @ 0x5028 
    /*00017e54*/ MOVT        R3, #32780                  @ 0x800c 
    /*00017e58*/ CMP         R2, R3 
    /*00017e5c*/ BEQ         VPSS_DRV_FuncPreFilter_x17efc
    /*00017e60*/ BLS         VPSS_DRV_FuncPreFilter_x18030
    /*00017e64*/ MOVW        R3, #20505                  @ 0x5019 
    /*00017e68*/ MOVT        R3, #33024                  @ 0x8100 
    /*00017e6c*/ CMP         R2, R3 
    /*00017e70*/ BEQ         VPSS_DRV_FuncPreFilter_x17efc
    /*00017e74*/ MOVW        R3, #20503                  @ 0x5017 
    /*00017e78*/ MOVT        R3, #35120                  @ 0x8930 
    /*00017e7c*/ CMP         R2, R3 
    /*00017e80*/ BEQ         VPSS_DRV_FuncPreFilter_x17efc
    VPSS_DRV_FuncPreFilter_x17e84:
    /*00017e84*/ MOVW        R3, #20516                  @ 0x5024 
    /*00017e88*/ MOVT        R3, #49168                  @ 0xc010 
    /*00017e8c*/ CMP         R4, R3 
    /*00017e90*/ BNE         VPSS_DRV_FuncPreFilter_x17eb0
    /*00017e94*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00017e98*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00017e9c*/ LDR         R3, [R3] 
    /*00017ea0*/ LDRB        R3, [R3, #40]               @ 0x28 
    /*00017ea4*/ CMP         R3, #9 
    /*00017ea8*/ CMPNE       R3, #12 
    /*00017eac*/ BEQ         VPSS_DRV_FuncPreFilter_x18194
    VPSS_DRV_FuncPreFilter_x17eb0:
    /*00017eb0*/ MOV         R0, R5 
    /*00017eb4*/ BL          0x0000000000017EB4          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*00017eb8*/ CMP         R0, #0 
    /*00017ebc*/ BNE         VPSS_DRV_FuncPreFilter_x17f54
    VPSS_DRV_FuncPreFilter_x17ec0:
    /*00017ec0*/ ADD         SP, SP, #12 
    /*00017ec4*/ POP         {R4, R5, PC} 
    VPSS_DRV_FuncPreFilter_x17ec8:
    /*00017ec8*/ MOVW        R3, #20504                  @ 0x5018 
    /*00017ecc*/ MOVT        R3, #16640                  @ 0x4100 
    /*00017ed0*/ CMP         R2, R3 
    /*00017ed4*/ BEQ         VPSS_DRV_FuncPreFilter_x17efc
    /*00017ed8*/ BLS         VPSS_DRV_FuncPreFilter_x18044
    /*00017edc*/ MOVW        R3, #20502                  @ 0x5016 
    /*00017ee0*/ MOVT        R3, #18736                  @ 0x4930 
    /*00017ee4*/ CMP         R2, R3 
    /*00017ee8*/ BEQ         VPSS_DRV_FuncPreFilter_x17efc
    /*00017eec*/ MOVW        R3, #20501                  @ 0x5015 
    /*00017ef0*/ MOVT        R3, #32772                  @ 0x8004 
    /*00017ef4*/ CMP         R2, R3 
    /*00017ef8*/ BNE         VPSS_DRV_FuncPreFilter_x17e84
    VPSS_DRV_FuncPreFilter_x17efc:
    /*00017efc*/ MOV         R0, R4 
    /*00017f00*/ BL          0x0000000000017294 
    /*00017f04*/ MOVW        R3, #293                    @ 0x125 
    VPSS_DRV_FuncPreFilter_x17f08:
    /*00017f08*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55d4] 
    /*00017f0c*/ STR         R3, [SP] 
    /*00017f10*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55d4] 
    /*00017f14*/ B           VPSS_DRV_FuncPreFilter_x1813c
    VPSS_DRV_FuncPreFilter_x17f18:
    /*00017f18*/ MOVW        R3, #20523                  @ 0x502b 
    /*00017f1c*/ CMP         R2, R3 
    /*00017f20*/ BEQ         VPSS_DRV_FuncPreFilter_x17efc
    /*00017f24*/ BHI         VPSS_DRV_FuncPreFilter_x17fbc
    /*00017f28*/ MOVW        R3, #20498                  @ 0x5012 
    /*00017f2c*/ CMP         R2, R3 
    /*00017f30*/ BCC         VPSS_DRV_FuncPreFilter_x17e84
    /*00017f34*/ MOVW        R3, #20499                  @ 0x5013 
    /*00017f38*/ CMP         R2, R3 
    /*00017f3c*/ BLS         VPSS_DRV_FuncPreFilter_x17efc
    /*00017f40*/ SUB         R3, R2, #20480              @ 0x5000 
    /*00017f44*/ SUB         R3, R3, #29 
    /*00017f48*/ CMP         R3, #1 
    /*00017f4c*/ BHI         VPSS_DRV_FuncPreFilter_x17e84
    /*00017f50*/ B           VPSS_DRV_FuncPreFilter_x17efc
    VPSS_DRV_FuncPreFilter_x17f54:
    /*00017f54*/ MOV         R0, R5 
    /*00017f58*/ BL          0x0000000000017F58          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*00017f5c*/ CMP         R0, #2 
    /*00017f60*/ BEQ         VPSS_DRV_FuncPreFilter_x1806c
    /*00017f64*/ MOVW        R3, #20515                  @ 0x5023 
    /*00017f68*/ MOVT        R3, #16388                  @ 0x4004 
    /*00017f6c*/ CMP         R4, R3 
    /*00017f70*/ CMPNE       R5, #0 
    /*00017f74*/ BNE         VPSS_DRV_FuncPreFilter_x181a4
    /*00017f78*/ MOVW        R3, #20491                  @ 0x500b 
    /*00017f7c*/ MOVT        R3, #16408                  @ 0x4018 
    /*00017f80*/ CMP         R4, R3 
    /*00017f84*/ BEQ         VPSS_DRV_FuncPreFilter_x18014
    /*00017f88*/ BLS         VPSS_DRV_FuncPreFilter_x17ff0
    /*00017f8c*/ MOVW        R3, #20501                  @ 0x5015 
    /*00017f90*/ MOVT        R3, #32772                  @ 0x8004 
    /*00017f94*/ CMP         R4, R3 
    /*00017f98*/ BEQ         VPSS_DRV_FuncPreFilter_x18014
    /*00017f9c*/ BHI         VPSS_DRV_FuncPreFilter_x180b8
    /*00017fa0*/ MOVW        R3, #20493                  @ 0x500d 
    /*00017fa4*/ MOVT        R3, #16728                  @ 0x4158 
    /*00017fa8*/ CMP         R4, R3 
    /*00017fac*/ BEQ         VPSS_DRV_FuncPreFilter_x18014
    VPSS_DRV_FuncPreFilter_x17fb0:
    /*00017fb0*/ MOV         R0, #0 
    /*00017fb4*/ ADD         SP, SP, #12 
    /*00017fb8*/ POP         {R4, R5, PC} 
    VPSS_DRV_FuncPreFilter_x17fbc:
    /*00017fbc*/ MOVW        R3, #20522                  @ 0x502a 
    /*00017fc0*/ MOVT        R3, #16388                  @ 0x4004 
    /*00017fc4*/ CMP         R2, R3 
    /*00017fc8*/ BHI         VPSS_DRV_FuncPreFilter_x18058
    /*00017fcc*/ MOVW        R3, #20521                  @ 0x5029 
    /*00017fd0*/ MOVT        R3, #16388                  @ 0x4004 
    /*00017fd4*/ CMP         R2, R3 
    /*00017fd8*/ BCS         VPSS_DRV_FuncPreFilter_x17efc
    /*00017fdc*/ MOVW        R3, #20500                  @ 0x5014 
    /*00017fe0*/ MOVT        R3, #16388                  @ 0x4004 
    /*00017fe4*/ CMP         R2, R3 
    /*00017fe8*/ BNE         VPSS_DRV_FuncPreFilter_x17e84
    /*00017fec*/ B           VPSS_DRV_FuncPreFilter_x17efc
    VPSS_DRV_FuncPreFilter_x17ff0:
    /*00017ff0*/ MOVW        R3, #20500                  @ 0x5014 
    /*00017ff4*/ MOVT        R3, #16388                  @ 0x4004 
    /*00017ff8*/ CMP         R4, R3 
    /*00017ffc*/ BEQ         VPSS_DRV_FuncPreFilter_x18014
    /*00018000*/ BHI         VPSS_DRV_FuncPreFilter_x180dc
    /*00018004*/ SUB         R3, R4, #20480              @ 0x5000 
    /*00018008*/ SUB         R3, R3, #18 
    /*0001800c*/ CMP         R3, #1 
    /*00018010*/ BHI         VPSS_DRV_FuncPreFilter_x17fb0
    VPSS_DRV_FuncPreFilter_x18014:
    /*00018014*/ MOV         R0, R4 
    /*00018018*/ BL          0x0000000000017294 
    /*0001801c*/ MOVW        R3, #377                    @ 0x179 
    /*00018020*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5690] 
    /*00018024*/ STR         R3, [SP] 
    /*00018028*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5690] 
    /*0001802c*/ B           VPSS_DRV_FuncPreFilter_x1813c
    VPSS_DRV_FuncPreFilter_x18030:
    /*00018030*/ MOVW        R3, #20508                  @ 0x501c 
    /*00018034*/ MOVT        R3, #32776                  @ 0x8008 
    /*00018038*/ CMP         R2, R3 
    /*0001803c*/ BNE         VPSS_DRV_FuncPreFilter_x17e84
    /*00018040*/ B           VPSS_DRV_FuncPreFilter_x17efc
    VPSS_DRV_FuncPreFilter_x18044:
    /*00018044*/ MOVW        R3, #20519                  @ 0x5027 
    /*00018048*/ MOVT        R3, #16396                  @ 0x400c 
    /*0001804c*/ CMP         R2, R3 
    /*00018050*/ BNE         VPSS_DRV_FuncPreFilter_x17e84
    /*00018054*/ B           VPSS_DRV_FuncPreFilter_x17efc
    VPSS_DRV_FuncPreFilter_x18058:
    /*00018058*/ MOVW        R3, #20542                  @ 0x503e 
    /*0001805c*/ MOVT        R3, #16388                  @ 0x4004 
    /*00018060*/ CMP         R2, R3 
    /*00018064*/ BNE         VPSS_DRV_FuncPreFilter_x17e84
    /*00018068*/ B           VPSS_DRV_FuncPreFilter_x17efc
    VPSS_DRV_FuncPreFilter_x1806c:
    /*0001806c*/ MOVW        R3, #20491                  @ 0x500b 
    /*00018070*/ MOVT        R3, #16408                  @ 0x4018 
    /*00018074*/ CMP         R4, R3 
    /*00018078*/ BEQ         VPSS_DRV_FuncPreFilter_x18124
    /*0001807c*/ BHI         VPSS_DRV_FuncPreFilter_x180f0
    /*00018080*/ MOVW        R3, #20500                  @ 0x5014 
    /*00018084*/ MOVT        R3, #16388                  @ 0x4004 
    /*00018088*/ CMP         R4, R3 
    /*0001808c*/ BEQ         VPSS_DRV_FuncPreFilter_x18124
    /*00018090*/ BLS         VPSS_DRV_FuncPreFilter_x18180
    /*00018094*/ MOVW        R3, #20517                  @ 0x5025 
    /*00018098*/ MOVT        R3, #16392                  @ 0x4008 
    /*0001809c*/ CMP         R4, R3 
    /*000180a0*/ BEQ         VPSS_DRV_FuncPreFilter_x18124
    /*000180a4*/ MOVW        R3, #20497                  @ 0x5011 
    /*000180a8*/ MOVT        R3, #16396                  @ 0x400c 
    /*000180ac*/ CMP         R4, R3 
    /*000180b0*/ BNE         VPSS_DRV_FuncPreFilter_x17fb0
    /*000180b4*/ B           VPSS_DRV_FuncPreFilter_x18124
    VPSS_DRV_FuncPreFilter_x180b8:
    /*000180b8*/ MOVW        R3, #20492                  @ 0x500c 
    /*000180bc*/ MOVT        R3, #32792                  @ 0x8018 
    /*000180c0*/ CMP         R4, R3 
    /*000180c4*/ BEQ         VPSS_DRV_FuncPreFilter_x18014
    /*000180c8*/ MOVW        R3, #20496                  @ 0x5010 
    /*000180cc*/ MOVT        R3, #49164                  @ 0xc00c 
    /*000180d0*/ CMP         R4, R3 
    /*000180d4*/ BNE         VPSS_DRV_FuncPreFilter_x17fb0
    /*000180d8*/ B           VPSS_DRV_FuncPreFilter_x18014
    VPSS_DRV_FuncPreFilter_x180dc:
    /*000180dc*/ MOVW        R3, #20497                  @ 0x5011 
    /*000180e0*/ MOVT        R3, #16396                  @ 0x400c 
    /*000180e4*/ CMP         R4, R3 
    /*000180e8*/ BNE         VPSS_DRV_FuncPreFilter_x17fb0
    /*000180ec*/ B           VPSS_DRV_FuncPreFilter_x18014
    VPSS_DRV_FuncPreFilter_x180f0:
    /*000180f0*/ MOVW        R3, #20518                  @ 0x5026 
    /*000180f4*/ MOVT        R3, #32776                  @ 0x8008 
    /*000180f8*/ CMP         R4, R3 
    /*000180fc*/ BEQ         VPSS_DRV_FuncPreFilter_x18124
    /*00018100*/ BHI         VPSS_DRV_FuncPreFilter_x1815c
    /*00018104*/ MOVW        R3, #20493                  @ 0x500d 
    /*00018108*/ MOVT        R3, #16728                  @ 0x4158 
    /*0001810c*/ CMP         R4, R3 
    /*00018110*/ BEQ         VPSS_DRV_FuncPreFilter_x18124
    /*00018114*/ MOVW        R3, #20501                  @ 0x5015 
    /*00018118*/ MOVT        R3, #32772                  @ 0x8004 
    /*0001811c*/ CMP         R4, R3 
    /*00018120*/ BNE         VPSS_DRV_FuncPreFilter_x17fb0
    VPSS_DRV_FuncPreFilter_x18124:
    /*00018124*/ MOV         R0, R4 
    /*00018128*/ BL          0x0000000000017294 
    /*0001812c*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5604] 
    /*00018130*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5604] 
    /*00018134*/ MOVW        R3, #346                    @ 0x15a 
    /*00018138*/ STR         R3, [SP] 
    VPSS_DRV_FuncPreFilter_x1813c:
    /*0001813c*/ STR         R0, [SP, #4] 
    /*00018140*/ MOV         R1, #7 
    /*00018144*/ LDR         R3, [PC, #132]              @ 0x00000000000181d0 
    /*00018148*/ MOV         R0, #3 
    /*0001814c*/ BL          0x000000000001814C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018150*/ MOVW        R0, #32776                  @ 0x8008 
    /*00018154*/ MOVT        R0, #40967                  @ 0xa007 
    /*00018158*/ B           VPSS_DRV_FuncPreFilter_x17ec0
    VPSS_DRV_FuncPreFilter_x1815c:
    /*0001815c*/ MOVW        R3, #20492                  @ 0x500c 
    /*00018160*/ MOVT        R3, #32792                  @ 0x8018 
    /*00018164*/ CMP         R4, R3 
    /*00018168*/ BEQ         VPSS_DRV_FuncPreFilter_x18124
    /*0001816c*/ MOVW        R3, #20496                  @ 0x5010 
    /*00018170*/ MOVT        R3, #49164                  @ 0xc00c 
    /*00018174*/ CMP         R4, R3 
    /*00018178*/ BNE         VPSS_DRV_FuncPreFilter_x17fb0
    /*0001817c*/ B           VPSS_DRV_FuncPreFilter_x18124
    VPSS_DRV_FuncPreFilter_x18180:
    /*00018180*/ SUB         R3, R4, #20480              @ 0x5000 
    /*00018184*/ SUB         R3, R3, #18 
    /*00018188*/ CMP         R3, #1 
    /*0001818c*/ BHI         VPSS_DRV_FuncPreFilter_x17fb0
    /*00018190*/ B           VPSS_DRV_FuncPreFilter_x18124
    VPSS_DRV_FuncPreFilter_x18194:
    /*00018194*/ MOV         R0, R4 
    /*00018198*/ BL          0x0000000000017294 
    /*0001819c*/ MOVW        R3, #305                    @ 0x131 
    /*000181a0*/ B           VPSS_DRV_FuncPreFilter_x17f08
    VPSS_DRV_FuncPreFilter_x181a4:
    /*000181a4*/ MOVW        R3, #359                    @ 0x167 
    /*000181a8*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5664] 
    /*000181ac*/ STR         R3, [SP] 
    /*000181b0*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5664] 
    /*000181b4*/ LDR         R3, [PC, #20]               @ 0x00000000000181d0 
    /*000181b8*/ MOV         R1, #7 
    /*000181bc*/ MOV         R0, #3 
    /*000181c0*/ BL          0x00000000000181C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000181c4*/ MOVW        R0, #32776                  @ 0x8008 
    /*000181c8*/ MOVT        R0, #40967                  @ 0xa007 
    /*000181cc*/ B           VPSS_DRV_FuncPreFilter_x17ec0
    /*000181d0*/ LDRDEQ      R0, [R0], -IP 
FUNC_END VPSS_DRV_FuncPreFilter


FUNC_BEGIN VPSS_InitDefaultStitchParam
    /*000181d4*/ BX          LR 
FUNC_END VPSS_InitDefaultStitchParam


FUNC_BEGIN VPSS_DRV_GetIdByIrq
    /*000181d8*/ MOV         R0, #0 
    /*000181dc*/ BX          LR 
FUNC_END VPSS_DRV_GetIdByIrq


FUNC_BEGIN VPSS_DRV_GetOnlineGrpById
    /*000181e0*/ MOV         R0, #0 
    /*000181e4*/ BX          LR 
FUNC_END VPSS_DRV_GetOnlineGrpById


FUNC_BEGIN VPSS_DRV_GetOfflineSlaveVpssId
    /*000181e8*/ MOV         R0, #0 
    /*000181ec*/ BX          LR 
FUNC_END VPSS_DRV_GetOfflineSlaveVpssId


FUNC_BEGIN VPSS_DRV_OnLineSetMask
    /*000181f0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000181f4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000181f8*/ MOVW        R2, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*000181fc*/ MOVT        R2, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00018200*/ PUSH        {R4, LR} 
    /*00018204*/ LDR         R3, [R3] 
    /*00018208*/ LDR         R4, [R2, R0, LSL #2] 
    /*0001820c*/ ADD         R3, R3, #28672              @ 0x7000 
    /*00018210*/ MOV         R0, R4 
    /*00018214*/ LDR         R1, [R3, #1664]             @ 0x680 
    /*00018218*/ BL          0x0000000000018218          @ VPSS_HAL_SetMask [R_ARM_CALL: .text+0x26490] 
    /*0001821c*/ MOV         R0, R4 
    /*00018220*/ MOV         R1, #0 
    /*00018224*/ BL          0x0000000000018224          @ VPSS_HAL_SetMode [R_ARM_CALL: .text+0x26498] 
    /*00018228*/ MOV         R0, #0 
    /*0001822c*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_OnLineSetMask


FUNC_BEGIN VPSS_IsReleaseBuffer
    /*00018230*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00018234*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00018238*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001823c*/ CMP         R3, #0 
    /*00018240*/ BEQ         VPSS_IsReleaseBuffer_x1824c
    /*00018244*/ MOV         R0, #0 
    /*00018248*/ BX          LR 
    VPSS_IsReleaseBuffer_x1824c:
    /*0001824c*/ PUSH        {R4, LR} 
    /*00018250*/ MOVW        R2, #486                    @ 0x1e6 
    /*00018254*/ LDR         R1, [PC, #24]               @ 0x0000000000018274 
    /*00018258*/ MOVW        R3, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e0] 
    /*0001825c*/ MOVW        R0, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e8] 
    /*00018260*/ MOVT        R3, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e0] 
    /*00018264*/ MOVT        R0, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e8] 
    /*00018268*/ BL          0x0000000000018268          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001826c*/ MOV         R0, #0 
    /*00018270*/ POP         {R4, PC} 
    /*00018274*/ STRDEQ      R0, [R0], -R4 
FUNC_END VPSS_IsReleaseBuffer


FUNC_BEGIN VPSS_DRV_PutVb
    /*00018278*/ SUBS        R3, R0, #0 
    /*0001827c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00018280*/ SUB         SP, SP, #12 
    /*00018284*/ BEQ         VPSS_DRV_PutVb_x18340
    /*00018288*/ MOV         R0, #1 
    /*0001828c*/ LDR         R4, [R3, #328]              @ 0x148 
    /*00018290*/ LDRD        R6, [R3, #120]              @ 0x78 
    /*00018294*/ MOV         R5, R1 
    /*00018298*/ BL          0x0000000000018298          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001829c*/ MOV         R2, R6 
    /*000182a0*/ MOV         R3, R7 
    /*000182a4*/ LDR         R1, [R0, #84]               @ 0x54 
    /*000182a8*/ MOV         R0, R4 
    /*000182ac*/ BLX         R1 
    /*000182b0*/ CMP         R0, #0 
    /*000182b4*/ BEQ         VPSS_DRV_PutVb_x182e8
    /*000182b8*/ MOV         R0, #1 
    /*000182bc*/ BL          0x00000000000182BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000182c0*/ STR         R5, [SP] 
    /*000182c4*/ MOV         R2, R6 
    /*000182c8*/ MOV         R3, R7 
    /*000182cc*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000182d0*/ MOV         R0, R4 
    /*000182d4*/ BLX         R1 
    /*000182d8*/ CMP         R0, #0 
    /*000182dc*/ BNE         VPSS_DRV_PutVb_x18314
    VPSS_DRV_PutVb_x182e0:
    /*000182e0*/ ADD         SP, SP, #12 
    /*000182e4*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_DRV_PutVb_x182e8:
    /*000182e8*/ MOVW        R3, #518                    @ 0x206 
    /*000182ec*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5778] 
    /*000182f0*/ STR         R3, [SP] 
    /*000182f4*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5778] 
    /*000182f8*/ LDR         R3, [PC, #108]              @ 0x000000000001836c 
    /*000182fc*/ MOV         R1, #7 
    /*00018300*/ MOV         R0, #3 
    /*00018304*/ BL          0x0000000000018304          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018308*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001830c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00018310*/ B           VPSS_DRV_PutVb_x182e0
    VPSS_DRV_PutVb_x18314:
    /*00018314*/ MOV         R3, #512                    @ 0x200 
    /*00018318*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5750] 
    /*0001831c*/ STR         R3, [SP] 
    /*00018320*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5750] 
    /*00018324*/ LDR         R3, [PC, #64]               @ 0x000000000001836c 
    /*00018328*/ MOV         R1, #7 
    /*0001832c*/ MOV         R0, #3 
    /*00018330*/ BL          0x0000000000018330          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018334*/ MOVW        R0, #32777                  @ 0x8009 
    /*00018338*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001833c*/ B           VPSS_DRV_PutVb_x182e0
    VPSS_DRV_PutVb_x18340:
    /*00018340*/ MOVW        R3, #499                    @ 0x1f3 
    /*00018344*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5728] 
    /*00018348*/ STR         R3, [SP] 
    /*0001834c*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5728] 
    /*00018350*/ LDR         R3, [PC, #20]               @ 0x000000000001836c 
    /*00018354*/ MOV         R1, #7 
    /*00018358*/ MOV         R0, #3 
    /*0001835c*/ BL          0x000000000001835C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018360*/ MOVW        R0, #32774                  @ 0x8006 
    /*00018364*/ MOVT        R0, #40967                  @ 0xa007 
    /*00018368*/ B           VPSS_DRV_PutVb_x182e0
    /*0001836c*/ ANDEQ       R0, R0, IP, LSL #28 
FUNC_END VPSS_DRV_PutVb


FUNC_BEGIN VPSS_DRV_GetVb
    /*00018370*/ SUBS        R3, R0, #0 
    /*00018374*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00018378*/ SUB         SP, SP, #12 
    /*0001837c*/ BEQ         VPSS_DRV_GetVb_x18404
    /*00018380*/ MOV         R0, #1 
    /*00018384*/ LDR         R4, [R3, #328]              @ 0x148 
    /*00018388*/ LDRD        R6, [R3, #120]              @ 0x78 
    /*0001838c*/ MOV         R5, R1 
    /*00018390*/ BL          0x0000000000018390          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018394*/ MOV         R2, R6 
    /*00018398*/ MOV         R3, R7 
    /*0001839c*/ LDR         R1, [R0, #84]               @ 0x54 
    /*000183a0*/ MOV         R0, R4 
    /*000183a4*/ BLX         R1 
    /*000183a8*/ CMP         R0, #0 
    /*000183ac*/ BEQ         VPSS_DRV_GetVb_x183d8
    /*000183b0*/ MOV         R0, #1 
    /*000183b4*/ BL          0x00000000000183B4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000183b8*/ STR         R5, [SP] 
    /*000183bc*/ MOV         R2, R6 
    /*000183c0*/ MOV         R3, R7 
    /*000183c4*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*000183c8*/ MOV         R0, R4 
    /*000183cc*/ BLX         R1 
    VPSS_DRV_GetVb_x183d0:
    /*000183d0*/ ADD         SP, SP, #12 
    /*000183d4*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_DRV_GetVb_x183d8:
    /*000183d8*/ MOVW        R3, #546                    @ 0x222 
    /*000183dc*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5778] 
    /*000183e0*/ STR         R3, [SP] 
    /*000183e4*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5778] 
    /*000183e8*/ LDR         R3, [PC, #64]               @ 0x0000000000018430 
    /*000183ec*/ MOV         R1, #7 
    /*000183f0*/ MOV         R0, #3 
    /*000183f4*/ BL          0x00000000000183F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000183f8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000183fc*/ MOVT        R0, #40967                  @ 0xa007 
    /*00018400*/ B           VPSS_DRV_GetVb_x183d0
    VPSS_DRV_GetVb_x18404:
    /*00018404*/ MOV         R3, #532                    @ 0x214 
    /*00018408*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5728] 
    /*0001840c*/ STR         R3, [SP] 
    /*00018410*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5728] 
    /*00018414*/ LDR         R3, [PC, #20]               @ 0x0000000000018430 
    /*00018418*/ MOV         R1, #7 
    /*0001841c*/ MOV         R0, #3 
    /*00018420*/ BL          0x0000000000018420          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018424*/ MOVW        R0, #32774                  @ 0x8006 
    /*00018428*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001842c*/ B           VPSS_DRV_GetVb_x183d0
    /*00018430*/ ANDEQ       R0, R0, IP, LSL LR 
FUNC_END VPSS_DRV_GetVb


FUNC_BEGIN VPSS_DRV_SetGrpAttr
    /*00018434*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00018438*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001843c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00018440*/ MOV         R8, R0 
    /*00018444*/ MOV         R2, #40                     @ 0x28 
    /*00018448*/ MOV         R6, R1 
    /*0001844c*/ LDR         R5, [R4, R0, LSL #2] 
    /*00018450*/ ADD         R7, R5, #4 
    /*00018454*/ MOV         R0, R7 
    /*00018458*/ BL          0x0000000000018458          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*0001845c*/ CMP         R0, #0 
    /*00018460*/ BEQ         VPSS_DRV_SetGrpAttr_x184b8
    /*00018464*/ LDR         R3, [R5, #28] 
    /*00018468*/ CMP         R3, #0 
    /*0001846c*/ BEQ         VPSS_DRV_SetGrpAttr_x184c0
    VPSS_DRV_SetGrpAttr_x18470:
    /*00018470*/ LDR         R2, [R5, #40]               @ 0x28 
    /*00018474*/ LDR         R3, [R6, #36]               @ 0x24 
    /*00018478*/ CMP         R2, R3 
    /*0001847c*/ BEQ         VPSS_DRV_SetGrpAttr_x18488
    VPSS_DRV_SetGrpAttr_x18480:
    /*00018480*/ MOV         R3, #1 
    /*00018484*/ STR         R3, [R5, #980]              @ 0x3d4 
    VPSS_DRV_SetGrpAttr_x18488:
    /*00018488*/ LDR         R2, [R6, #28] 
    /*0001848c*/ MOV         R1, R6 
    /*00018490*/ LDR         R3, [R5, #32] 
    /*00018494*/ MOV         R0, R7 
    /*00018498*/ CMP         R2, R3 
    /*0001849c*/ LDRNE       R3, [R4, R8, LSL #2] 
    /*000184a0*/ MOVNE       R2, #1 
    /*000184a4*/ STRNE       R2, [R3, #968]              @ 0x3c8 
    /*000184a8*/ STRNE       R2, [R3, #972]              @ 0x3cc 
    /*000184ac*/ STRNE       R2, [R3, #976]              @ 0x3d0 
    /*000184b0*/ MOV         R2, #40                     @ 0x28 
    /*000184b4*/ BL          0x00000000000184B4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VPSS_DRV_SetGrpAttr_x184b8:
    /*000184b8*/ MOV         R0, #0 
    /*000184bc*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_SetGrpAttr_x184c0:
    /*000184c0*/ LDR         R3, [R6, #24] 
    /*000184c4*/ CMP         R3, #0 
    /*000184c8*/ BNE         VPSS_DRV_SetGrpAttr_x18480
    /*000184cc*/ B           VPSS_DRV_SetGrpAttr_x18470
FUNC_END VPSS_DRV_SetGrpAttr


FUNC_BEGIN VPSS_DRV_GetGrpAttr
    /*000184d0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000184d4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000184d8*/ PUSH        {R4, LR} 
    /*000184dc*/ MOV         R2, #40                     @ 0x28 
    /*000184e0*/ LDR         R3, [R3, R0, LSL #2] 
    /*000184e4*/ MOV         R0, R1 
    /*000184e8*/ ADD         R1, R3, #4 
    /*000184ec*/ BL          0x00000000000184EC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000184f0*/ MOV         R0, #0 
    /*000184f4*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_GetGrpAttr


FUNC_BEGIN VPSS_DRV_GetOsd
    /*000184f8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000184fc*/ SUBS        R4, R2, #0 
    /*00018500*/ SUB         SP, SP, #40                 @ 0x28 
    /*00018504*/ MOV         R5, R0 
    /*00018508*/ MOV         R6, R1 
    /*0001850c*/ BEQ         VPSS_DRV_GetOsd_x1865c
    VPSS_DRV_GetOsd_x18510:
    /*00018510*/ MOV         R0, #3 
    /*00018514*/ LDR         R7, [R4, #12] 
    /*00018518*/ BL          0x0000000000018518          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001851c*/ CMP         R0, #0 
    /*00018520*/ BEQ         VPSS_DRV_GetOsd_x18624
    /*00018524*/ MOV         R0, #3 
    /*00018528*/ BL          0x0000000000018528          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001852c*/ LDR         R3, [R0, #8] 
    /*00018530*/ CMP         R3, #0 
    /*00018534*/ BEQ         VPSS_DRV_GetOsd_x18624
    /*00018538*/ MOV         R0, #3 
    /*0001853c*/ STR         R6, [SP, #24] 
    /*00018540*/ STR         R5, [SP, #20] 
    /*00018544*/ MOV         R8, #7 
    /*00018548*/ STR         R8, [SP, #16] 
    /*0001854c*/ BL          0x000000000001854C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018550*/ ADD         R2, SP, #28 
    /*00018554*/ ADD         R1, SP, #16 
    /*00018558*/ LDR         R3, [R0, #8] 
    /*0001855c*/ MOV         R0, R7 
    /*00018560*/ BLX         R3 
    /*00018564*/ CMP         R0, #0 
    /*00018568*/ BNE         VPSS_DRV_GetOsd_x1862c
    /*0001856c*/ LDR         IP, [SP, #28] 
    /*00018570*/ LDR         R3, [SP, #32] 
    /*00018574*/ CMP         IP, #0 
    /*00018578*/ STM         R4, {R3, IP} 
    /*0001857c*/ BEQ         VPSS_DRV_GetOsd_x18624
    /*00018580*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00018584*/ MOV         R1, #12 
    /*00018588*/ MOV         R2, R4 
    /*0001858c*/ MLA         IP, R1, IP, R3 
    VPSS_DRV_GetOsd_x18590:
    /*00018590*/ LDR         R1, [R3, #8] 
    /*00018594*/ ADD         R3, R3, #12 
    /*00018598*/ ADD         R2, R2, #64                 @ 0x40 
    /*0001859c*/ LDR         R1, [R1, #8] 
    /*000185a0*/ STR         R1, [R2, #-48]              @ 0xffffffd0 
    /*000185a4*/ LDR         R1, [R3, #-4] 
    /*000185a8*/ LDR         R1, [R1, #12] 
    /*000185ac*/ STR         R1, [R2, #-44]              @ 0xffffffd4 
    /*000185b0*/ LDR         R1, [R3, #-4] 
    /*000185b4*/ LDR         R1, [R1, #16] 
    /*000185b8*/ STR         R1, [R2, #-40]              @ 0xffffffd8 
    /*000185bc*/ LDR         R1, [R3, #-4] 
    /*000185c0*/ LDR         R1, [R1, #20] 
    /*000185c4*/ STR         R1, [R2, #-36]              @ 0xffffffdc 
    /*000185c8*/ LDR         R1, [R3, #-4] 
    /*000185cc*/ LDR         R1, [R1, #76]               @ 0x4c 
    /*000185d0*/ STR         R1, [R2, #-20]              @ 0xffffffec 
    /*000185d4*/ LDR         R1, [R3, #-4] 
    /*000185d8*/ LDR         R1, [R1, #80]               @ 0x50 
    /*000185dc*/ STR         R1, [R2, #-24]              @ 0xffffffe8 
    /*000185e0*/ LDR         R1, [R3, #-4] 
    /*000185e4*/ LDR         R1, [R1, #72]               @ 0x48 
    /*000185e8*/ STR         R1, [R2, #-28]              @ 0xffffffe4 
    /*000185ec*/ LDR         R1, [R3, #-4] 
    /*000185f0*/ LDR         R1, [R1, #64]               @ 0x40 
    /*000185f4*/ STR         R1, [R2, #-32]              @ 0xffffffe0 
    /*000185f8*/ LDR         R1, [R3, #-4] 
    /*000185fc*/ LDRD        R0, [R1, #88]               @ 0x58 
    /*00018600*/ STRD        R0, [R2, #-16] 
    /*00018604*/ LDR         R1, [R3, #-4] 
    /*00018608*/ LDR         R1, [R1, #104]              @ 0x68 
    /*0001860c*/ STR         R1, [R2, #4] 
    /*00018610*/ LDR         R1, [R3, #-4] 
    /*00018614*/ CMP         R3, IP 
    /*00018618*/ LDR         R1, [R1, #112]              @ 0x70 
    /*0001861c*/ STR         R1, [R2, #8] 
    /*00018620*/ BNE         VPSS_DRV_GetOsd_x18590
    VPSS_DRV_GetOsd_x18624:
    /*00018624*/ ADD         SP, SP, #40                 @ 0x28 
    /*00018628*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_GetOsd_x1862c:
    /*0001862c*/ STR         R6, [SP, #8] 
    /*00018630*/ MOV         R1, R8 
    /*00018634*/ STR         R5, [SP, #4] 
    /*00018638*/ MOVW        R3, #619                    @ 0x26b 
    /*0001863c*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57bc] 
    /*00018640*/ STR         R3, [SP] 
    /*00018644*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57bc] 
    /*00018648*/ LDR         R3, [PC, #44]               @ 0x000000000001867c 
    /*0001864c*/ MOV         R0, #3 
    /*00018650*/ BL          0x0000000000018650          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018654*/ ADD         SP, SP, #40                 @ 0x28 
    /*00018658*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_GetOsd_x1865c:
    /*0001865c*/ MOVW        R3, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57a0] 
    /*00018660*/ MOVW        R0, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e8] 
    /*00018664*/ MOVT        R3, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57a0] 
    /*00018668*/ MOVT        R0, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e8] 
    /*0001866c*/ MOVW        R2, #603                    @ 0x25b 
    /*00018670*/ LDR         R1, [PC, #4]                @ 0x000000000001867c 
    /*00018674*/ BL          0x0000000000018674          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00018678*/ B           VPSS_DRV_GetOsd_x18510
    /*0001867c*/ ANDEQ       R0, R0, IP, LSR #28 
FUNC_END VPSS_DRV_GetOsd


FUNC_BEGIN VPSS_DRV_PutOsd
    /*00018680*/ PUSH        {R4, LR} 
    /*00018684*/ SUB         SP, SP, #16 
    /*00018688*/ MOV         R3, #7 
    /*0001868c*/ MOV         R4, R2 
    /*00018690*/ STR         R0, [SP, #8] 
    /*00018694*/ MOV         R0, #3 
    /*00018698*/ STR         R1, [SP, #12] 
    /*0001869c*/ STR         R3, [SP, #4] 
    /*000186a0*/ BL          0x00000000000186A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000186a4*/ CMP         R0, #0 
    /*000186a8*/ BEQ         VPSS_DRV_PutOsd_x186e4
    /*000186ac*/ MOV         R0, #3 
    /*000186b0*/ BL          0x00000000000186B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000186b4*/ LDR         R3, [R0, #12] 
    /*000186b8*/ CMP         R3, #0 
    /*000186bc*/ BEQ         VPSS_DRV_PutOsd_x186e4
    /*000186c0*/ MOV         R0, #3 
    /*000186c4*/ BL          0x00000000000186C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000186c8*/ MOV         R2, #0 
    /*000186cc*/ ADD         R1, SP, #4 
    /*000186d0*/ LDR         R3, [R0, #12] 
    /*000186d4*/ MOV         R0, R4 
    /*000186d8*/ BLX         R3 
    /*000186dc*/ CMP         R0, #0 
    /*000186e0*/ BNE         VPSS_DRV_PutOsd_x186ec
    VPSS_DRV_PutOsd_x186e4:
    /*000186e4*/ ADD         SP, SP, #16 
    /*000186e8*/ POP         {R4, PC} 
    VPSS_DRV_PutOsd_x186ec:
    /*000186ec*/ MOV         R2, #664                    @ 0x298 
    /*000186f0*/ LDR         R1, [PC, #24]               @ 0x0000000000018710 
    /*000186f4*/ MOVW        R3, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57f4] 
    /*000186f8*/ MOVW        R0, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e8] 
    /*000186fc*/ MOVT        R3, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57f4] 
    /*00018700*/ MOVT        R0, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e8] 
    /*00018704*/ BL          0x0000000000018704          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00018708*/ ADD         SP, SP, #16 
    /*0001870c*/ POP         {R4, PC} 
    /*00018710*/ ANDEQ       R0, R0, IP, LSR LR 
FUNC_END VPSS_DRV_PutOsd


FUNC_BEGIN VPSS_DRV_GetCover
    /*00018714*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00018718*/ MOV         R6, R0 
    /*0001871c*/ SUB         SP, SP, #36                 @ 0x24 
    /*00018720*/ MOV         R0, #3 
    /*00018724*/ MOV         R4, R2 
    /*00018728*/ MOV         R7, R1 
    /*0001872c*/ LDR         R5, [R2, #12] 
    /*00018730*/ BL          0x0000000000018730          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018734*/ CMP         R0, #0 
    /*00018738*/ BEQ         VPSS_DRV_GetCover_x188f0
    /*0001873c*/ MOV         R0, #3 
    /*00018740*/ BL          0x0000000000018740          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018744*/ LDR         R3, [R0, #8] 
    /*00018748*/ CMP         R3, #0 
    /*0001874c*/ BEQ         VPSS_DRV_GetCover_x188f0
    /*00018750*/ MOV         R0, #3 
    /*00018754*/ STR         R6, [SP, #12] 
    /*00018758*/ STR         R7, [SP, #16] 
    /*0001875c*/ MOV         R6, #7 
    /*00018760*/ STR         R6, [SP, #8] 
    /*00018764*/ BL          0x0000000000018764          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018768*/ ADD         R2, SP, #20 
    /*0001876c*/ ADD         R1, SP, #8 
    /*00018770*/ LDR         R3, [R0, #8] 
    /*00018774*/ MOV         R0, R5 
    /*00018778*/ BLX         R3 
    /*0001877c*/ SUBS        R5, R0, #0 
    /*00018780*/ BNE         VPSS_DRV_GetCover_x188d0
    /*00018784*/ LDR         R3, [SP, #20] 
    /*00018788*/ LDR         R2, [SP, #24] 
    /*0001878c*/ CMP         R3, #0 
    /*00018790*/ STM         R4, {R2, R3} 
    /*00018794*/ BEQ         VPSS_DRV_GetCover_x188f0
    /*00018798*/ MOVW        R7, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5838] 
    /*0001879c*/ LDR         R9, [PC, #360]              @ 0x000000000001890c 
    /*000187a0*/ ADD         R4, R4, #28 
    /*000187a4*/ MOVT        R7, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5838] 
    /*000187a8*/ MOV         R6, R5 
    /*000187ac*/ MOVW        R8, #706                    @ 0x2c2 
    /*000187b0*/ B           VPSS_DRV_GetCover_x1888c
    VPSS_DRV_GetCover_x187b4:
    /*000187b4*/ LDR         R2, [R3, #8] 
    /*000187b8*/ MOV         R0, #1 
    /*000187bc*/ LDR         R2, [R2, #4] 
    /*000187c0*/ STR         R2, [R4, #-8] 
    /*000187c4*/ LDR         R2, [R3, #8] 
    /*000187c8*/ LDR         R2, [R2, #64]               @ 0x40 
    /*000187cc*/ STR         R2, [R4, #-12] 
    /*000187d0*/ LDR         R2, [R3, #8] 
    /*000187d4*/ LDR         R2, [R2, #160]              @ 0xa0 
    /*000187d8*/ STR         R2, [R4, #40]               @ 0x28 
    /*000187dc*/ LDR         R1, [R3, #8] 
    /*000187e0*/ LDR         R2, [R1, #4] 
    /*000187e4*/ CMP         R2, #0 
    /*000187e8*/ BNE         VPSS_DRV_GetCover_x188f8
    /*000187ec*/ STR         R0, [R4, #-8] 
    /*000187f0*/ STM         R4, {R0, R2} 
    /*000187f4*/ LDR         R2, [R3, #8] 
    /*000187f8*/ LDR         R2, [R2, #8] 
    /*000187fc*/ STR         R2, [R4, #8] 
    /*00018800*/ LDR         R2, [R3, #8] 
    /*00018804*/ LDR         R2, [R2, #12] 
    /*00018808*/ STR         R2, [R4, #12] 
    /*0001880c*/ LDR         R1, [R3, #8] 
    /*00018810*/ LDR         R2, [R1, #8] 
    /*00018814*/ LDR         R1, [R1, #16] 
    /*00018818*/ ADD         R2, R2, R1 
    /*0001881c*/ STR         R2, [R4, #16] 
    /*00018820*/ LDR         R2, [R3, #8] 
    /*00018824*/ LDR         R2, [R2, #12] 
    /*00018828*/ STR         R2, [R4, #20] 
    /*0001882c*/ LDR         R2, [R3, #8] 
    /*00018830*/ LDR         R2, [R2, #8] 
    /*00018834*/ STR         R2, [R4, #24] 
    /*00018838*/ LDR         R1, [R3, #8] 
    /*0001883c*/ LDR         R2, [R1, #12] 
    /*00018840*/ LDR         R1, [R1, #20] 
    /*00018844*/ ADD         R2, R2, R1 
    /*00018848*/ STR         R2, [R4, #28] 
    /*0001884c*/ LDR         R1, [R3, #8] 
    /*00018850*/ LDR         R2, [R1, #8] 
    /*00018854*/ LDR         R1, [R1, #16] 
    /*00018858*/ ADD         R2, R2, R1 
    /*0001885c*/ STR         R2, [R4, #32] 
    /*00018860*/ LDR         R2, [R3, #8] 
    /*00018864*/ LDR         R3, [R2, #12] 
    /*00018868*/ LDR         R2, [R2, #20] 
    /*0001886c*/ ADD         R3, R3, R2 
    /*00018870*/ STR         R3, [R4, #36]               @ 0x24 
    VPSS_DRV_GetCover_x18874:
    /*00018874*/ LDR         R3, [SP, #20] 
    /*00018878*/ ADD         R6, R6, #1 
    /*0001887c*/ ADD         R5, R5, #12 
    /*00018880*/ ADD         R4, R4, #56                 @ 0x38 
    /*00018884*/ CMP         R3, R6 
    /*00018888*/ BLS         VPSS_DRV_GetCover_x188f0
    VPSS_DRV_GetCover_x1888c:
    /*0001888c*/ LDR         R3, [SP, #28] 
    /*00018890*/ ADD         R3, R3, R5 
    /*00018894*/ LDR         R2, [R3, #8] 
    /*00018898*/ LDR         R2, [R2, #68]               @ 0x44 
    /*0001889c*/ CMP         R2, #16777216               @ 0x1000000 
    /*000188a0*/ STR         R2, [R4, #-4] 
    /*000188a4*/ BCC         VPSS_DRV_GetCover_x187b4
    /*000188a8*/ STR         R2, [SP, #4] 
    /*000188ac*/ MOV         R3, R9 
    /*000188b0*/ STR         R8, [SP] 
    /*000188b4*/ MOV         R2, R7 
    /*000188b8*/ MOV         R1, #7 
    /*000188bc*/ MOV         R0, #4 
    /*000188c0*/ BL          0x00000000000188C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000188c4*/ LDR         R3, [SP, #28] 
    /*000188c8*/ ADD         R3, R3, R5 
    /*000188cc*/ B           VPSS_DRV_GetCover_x187b4
    VPSS_DRV_GetCover_x188d0:
    /*000188d0*/ MOVW        R3, #693                    @ 0x2b5 
    /*000188d4*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x580c] 
    /*000188d8*/ STR         R3, [SP] 
    /*000188dc*/ MOV         R1, R6 
    /*000188e0*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x580c] 
    /*000188e4*/ LDR         R3, [PC, #32]               @ 0x000000000001890c 
    /*000188e8*/ MOV         R0, #3 
    /*000188ec*/ BL          0x00000000000188EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_DRV_GetCover_x188f0:
    /*000188f0*/ ADD         SP, SP, #36                 @ 0x24 
    /*000188f4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_DRV_GetCover_x188f8:
    /*000188f8*/ ADD         R1, R1, #24 
    /*000188fc*/ MOV         R2, #40                     @ 0x28 
    /*00018900*/ MOV         R0, R4 
    /*00018904*/ BL          0x0000000000018904          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018908*/ B           VPSS_DRV_GetCover_x18874
    /*0001890c*/ ANDEQ       R0, R0, IP, ASR #28 
FUNC_END VPSS_DRV_GetCover


FUNC_BEGIN VPSS_DRV_PutCover
    /*00018910*/ PUSH        {R4, LR} 
    /*00018914*/ SUB         SP, SP, #16 
    /*00018918*/ MOV         R3, #7 
    /*0001891c*/ MOV         R4, R2 
    /*00018920*/ STR         R0, [SP, #8] 
    /*00018924*/ MOV         R0, #3 
    /*00018928*/ STR         R1, [SP, #12] 
    /*0001892c*/ STR         R3, [SP, #4] 
    /*00018930*/ BL          0x0000000000018930          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018934*/ CMP         R0, #0 
    /*00018938*/ BEQ         VPSS_DRV_PutCover_x18974
    /*0001893c*/ MOV         R0, #3 
    /*00018940*/ BL          0x0000000000018940          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018944*/ LDR         R3, [R0, #12] 
    /*00018948*/ CMP         R3, #0 
    /*0001894c*/ BEQ         VPSS_DRV_PutCover_x18974
    /*00018950*/ MOV         R0, #3 
    /*00018954*/ BL          0x0000000000018954          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018958*/ MOV         R2, #0 
    /*0001895c*/ ADD         R1, SP, #4 
    /*00018960*/ LDR         R3, [R0, #12] 
    /*00018964*/ MOV         R0, R4 
    /*00018968*/ BLX         R3 
    /*0001896c*/ CMP         R0, #0 
    /*00018970*/ BNE         VPSS_DRV_PutCover_x1897c
    VPSS_DRV_PutCover_x18974:
    /*00018974*/ ADD         SP, SP, #16 
    /*00018978*/ POP         {R4, PC} 
    VPSS_DRV_PutCover_x1897c:
    /*0001897c*/ MOV         R2, #760                    @ 0x2f8 
    /*00018980*/ LDR         R1, [PC, #24]               @ 0x00000000000189a0 
    /*00018984*/ MOVW        R3, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57f4] 
    /*00018988*/ MOVW        R0, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e8] 
    /*0001898c*/ MOVT        R3, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57f4] 
    /*00018990*/ MOVT        R0, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e8] 
    /*00018994*/ BL          0x0000000000018994          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00018998*/ ADD         SP, SP, #16 
    /*0001899c*/ POP         {R4, PC} 
    /*000189a0*/ ANDEQ       R0, R0, R0, ROR #28 
FUNC_END VPSS_DRV_PutCover


FUNC_BEGIN VPSS_DRV_CalcAutoLBA
    /*000189a4*/ PUSH        {R4, R5, R6, LR} 
    /*000189a8*/ MOV         R4, R2 
    /*000189ac*/ LDR         R3, [R0, #8] 
    /*000189b0*/ LDR         IP, [R0, #12] 
    /*000189b4*/ LDR         R5, [R1, #28] 
    /*000189b8*/ LDR         R6, [R1, #24] 
    /*000189bc*/ MUL         R2, R5, R3 
    /*000189c0*/ MUL         R0, R6, IP 
    /*000189c4*/ CMP         R2, R0 
    /*000189c8*/ BCC         VPSS_DRV_CalcAutoLBA_x189fc
    /*000189cc*/ STR         R6, [R4, #20] 
    /*000189d0*/ BEQ         VPSS_DRV_CalcAutoLBA_x18a2c
    /*000189d4*/ MOV         R1, R3 
    /*000189d8*/ MOV         R3, #0 
    /*000189dc*/ STR         R3, [R4, #12] 
    /*000189e0*/ BL          0x00000000000189E0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000189e4*/ SUB         R5, R5, R0 
    /*000189e8*/ STR         R0, [R4, #24] 
    /*000189ec*/ MOV         R0, #0 
    /*000189f0*/ LSR         R5, R5, #1 
    /*000189f4*/ STR         R5, [R4, #16] 
    /*000189f8*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_CalcAutoLBA_x189fc:
    /*000189fc*/ MOV         R3, #0 
    /*00018a00*/ MOV         R1, IP 
    /*00018a04*/ MOV         R0, R2 
    /*00018a08*/ STR         R3, [R4, #16] 
    /*00018a0c*/ BL          0x0000000000018A0C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00018a10*/ STR         R5, [R4, #24] 
    /*00018a14*/ SUB         R6, R6, R0 
    /*00018a18*/ STR         R0, [R4, #20] 
    /*00018a1c*/ MOV         R0, #0 
    /*00018a20*/ LSR         R6, R6, #1 
    /*00018a24*/ STR         R6, [R4, #12] 
    /*00018a28*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_CalcAutoLBA_x18a2c:
    /*00018a2c*/ MOV         R3, #0 
    /*00018a30*/ STR         R5, [R4, #24] 
    /*00018a34*/ STR         R3, [R4, #12] 
    /*00018a38*/ MOV         R0, #0 
    /*00018a3c*/ STR         R3, [R4, #16] 
    /*00018a40*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_CalcAutoLBA


FUNC_BEGIN VPSS_DRV_CheckAspectRatio
    /*00018a44*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00018a48*/ SUB         SP, SP, #36                 @ 0x24 
    /*00018a4c*/ LDR         R4, [SP, #56]               @ 0x38 
    /*00018a50*/ LDR         IP, [R4] 
    /*00018a54*/ CMP         IP, #2 
    /*00018a58*/ BHI         VPSS_DRV_CheckAspectRatio_x18bcc
    /*00018a5c*/ CMP         IP, #0 
    /*00018a60*/ BEQ         VPSS_DRV_CheckAspectRatio_x18b28
    /*00018a64*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00018a68*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00018a6c*/ MOV         R5, R2 
    /*00018a70*/ MOV         LR, #24 
    /*00018a74*/ LDR         R2, [IP, R0, LSL #2] 
    /*00018a78*/ MOV         R6, R3 
    /*00018a7c*/ MOVW        R3, #37816                  @ 0x93b8 
    /*00018a80*/ MOV         R7, R0 
    /*00018a84*/ MLA         R1, LR, R1, R2 
    /*00018a88*/ LDR         R3, [R1, R3] 
    /*00018a8c*/ CMP         R3, #1 
    /*00018a90*/ BEQ         VPSS_DRV_CheckAspectRatio_x18be4
    /*00018a94*/ BL          0x0000000000018A94          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*00018a98*/ CMP         R0, #1 
    /*00018a9c*/ BEQ         VPSS_DRV_CheckAspectRatio_x18c10
    /*00018aa0*/ LDR         R3, [R4] 
    /*00018aa4*/ CMP         R3, #2 
    /*00018aa8*/ BNE         VPSS_DRV_CheckAspectRatio_x18b34
    /*00018aac*/ LDR         R3, [R4, #8] 
    /*00018ab0*/ LDR         R0, [R4, #12] 
    /*00018ab4*/ CMP         R3, #0 
    /*00018ab8*/ BLT         VPSS_DRV_CheckAspectRatio_x18b50
    /*00018abc*/ CMP         R0, #0 
    /*00018ac0*/ BLT         VPSS_DRV_CheckAspectRatio_x18b50
    /*00018ac4*/ CMP         R3, R5 
    /*00018ac8*/ BHI         VPSS_DRV_CheckAspectRatio_x18b50
    /*00018acc*/ CMP         R0, R6 
    /*00018ad0*/ LDR         R1, [R4, #16] 
    /*00018ad4*/ LDR         IP, [R4, #20] 
    /*00018ad8*/ BHI         VPSS_DRV_CheckAspectRatio_x18b58
    /*00018adc*/ CMP         R1, #63                     @ 0x3f 
    /*00018ae0*/ BLS         VPSS_DRV_CheckAspectRatio_x18b58
    /*00018ae4*/ CMP         R5, R1 
    /*00018ae8*/ CMPCS       IP, #63                     @ 0x3f 
    /*00018aec*/ MOVLS       R2, #1 
    /*00018af0*/ MOVHI       R2, #0 
    /*00018af4*/ CMP         R6, IP 
    /*00018af8*/ ORRCC       R2, R2, #1 
    /*00018afc*/ CMP         R2, #0 
    /*00018b00*/ BNE         VPSS_DRV_CheckAspectRatio_x18b58
    /*00018b04*/ ADD         R2, R3, R1 
    /*00018b08*/ CMP         R5, R2 
    /*00018b0c*/ BCC         VPSS_DRV_CheckAspectRatio_x18b58
    /*00018b10*/ ADD         R2, R0, IP 
    /*00018b14*/ CMP         R6, R2 
    /*00018b18*/ BCC         VPSS_DRV_CheckAspectRatio_x18b58
    /*00018b1c*/ LDR         R3, [R4, #4] 
    /*00018b20*/ CMP         R3, #16777216               @ 0x1000000 
    /*00018b24*/ BCS         VPSS_DRV_CheckAspectRatio_x18b9c
    VPSS_DRV_CheckAspectRatio_x18b28:
    /*00018b28*/ MOV         R0, #0 
    VPSS_DRV_CheckAspectRatio_x18b2c:
    /*00018b2c*/ ADD         SP, SP, #36                 @ 0x24 
    /*00018b30*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_DRV_CheckAspectRatio_x18b34:
    /*00018b34*/ SUB         R3, R3, #1 
    /*00018b38*/ CMP         R3, #1 
    /*00018b3c*/ BHI         VPSS_DRV_CheckAspectRatio_x18b28
    /*00018b40*/ LDR         R3, [R4, #4] 
    /*00018b44*/ CMP         R3, #16777216               @ 0x1000000 
    /*00018b48*/ BCC         VPSS_DRV_CheckAspectRatio_x18b28
    /*00018b4c*/ B           VPSS_DRV_CheckAspectRatio_x18b9c
    VPSS_DRV_CheckAspectRatio_x18b50:
    /*00018b50*/ LDR         R1, [R4, #16] 
    /*00018b54*/ LDR         IP, [R4, #20] 
    VPSS_DRV_CheckAspectRatio_x18b58:
    /*00018b58*/ MOVW        LR, #847                    @ 0x34f 
    /*00018b5c*/ STR         R1, [SP, #12] 
    /*00018b60*/ STR         R0, [SP, #8] 
    /*00018b64*/ MOVW        R2, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x594c] 
    /*00018b68*/ STR         R3, [SP, #4] 
    /*00018b6c*/ MOVT        R2, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x594c] 
    /*00018b70*/ STR         R6, [SP, #24] 
    /*00018b74*/ MOV         R1, #7 
    /*00018b78*/ STR         R5, [SP, #20] 
    /*00018b7c*/ MOV         R0, #3 
    /*00018b80*/ STR         IP, [SP, #16] 
    /*00018b84*/ STR         LR, [SP] 
    /*00018b88*/ LDR         R3, [PC, #152]              @ 0x0000000000018c28 
    /*00018b8c*/ BL          0x0000000000018B8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018b90*/ MOVW        R0, #32771                  @ 0x8003 
    /*00018b94*/ MOVT        R0, #40967                  @ 0xa007 
    /*00018b98*/ B           VPSS_DRV_CheckAspectRatio_x18b2c
    VPSS_DRV_CheckAspectRatio_x18b9c:
    /*00018b9c*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x59b4] 
    /*00018ba0*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x59b4] 
    /*00018ba4*/ STR         R3, [SP, #4] 
    /*00018ba8*/ MOV         R3, #856                    @ 0x358 
    /*00018bac*/ STR         R3, [SP] 
    VPSS_DRV_CheckAspectRatio_x18bb0:
    /*00018bb0*/ LDR         R3, [PC, #112]              @ 0x0000000000018c28 
    /*00018bb4*/ MOV         R1, #7 
    /*00018bb8*/ MOV         R0, #3 
    /*00018bbc*/ BL          0x0000000000018BBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018bc0*/ MOVW        R0, #32771                  @ 0x8003 
    /*00018bc4*/ MOVT        R0, #40967                  @ 0xa007 
    /*00018bc8*/ B           VPSS_DRV_CheckAspectRatio_x18b2c
    VPSS_DRV_CheckAspectRatio_x18bcc:
    /*00018bcc*/ MOVW        R3, #815                    @ 0x32f 
    /*00018bd0*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5880] 
    /*00018bd4*/ STR         IP, [SP, #4] 
    /*00018bd8*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5880] 
    /*00018bdc*/ STR         R3, [SP] 
    /*00018be0*/ B           VPSS_DRV_CheckAspectRatio_x18bb0
    VPSS_DRV_CheckAspectRatio_x18be4:
    /*00018be4*/ MOVW        R3, #822                    @ 0x336 
    /*00018be8*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x58b8] 
    /*00018bec*/ STR         R3, [SP] 
    /*00018bf0*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x58b8] 
    /*00018bf4*/ LDR         R3, [PC, #44]               @ 0x0000000000018c28 
    /*00018bf8*/ MOV         R1, #7 
    /*00018bfc*/ MOV         R0, #3 
    /*00018c00*/ BL          0x0000000000018C00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018c04*/ MOVW        R0, #32771                  @ 0x8003 
    /*00018c08*/ MOVT        R0, #40967                  @ 0xa007 
    /*00018c0c*/ B           VPSS_DRV_CheckAspectRatio_x18b2c
    VPSS_DRV_CheckAspectRatio_x18c10:
    /*00018c10*/ MOV         R3, #828                    @ 0x33c 
    /*00018c14*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5908] 
    /*00018c18*/ STR         R7, [SP, #4] 
    /*00018c1c*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5908] 
    /*00018c20*/ STR         R3, [SP] 
    /*00018c24*/ B           VPSS_DRV_CheckAspectRatio_x18bb0
    /*00018c28*/ ANDEQ       R0, R0, R4, ROR LR 
FUNC_END VPSS_DRV_CheckAspectRatio


FUNC_BEGIN VPSS_DRV_CalcAspectRatio
    /*00018c2c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00018c30*/ MOV         IP, #44                     @ 0x2c 
    /*00018c34*/ MOV         R6, R1 
    /*00018c38*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00018c3c*/ MUL         IP, IP, R6 
    /*00018c40*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00018c44*/ LDR         SL, [R3, #24] 
    /*00018c48*/ MOV         R5, R3 
    /*00018c4c*/ LDR         R7, [R1, R0, LSL #2] 
    /*00018c50*/ SUB         SP, SP, #36                 @ 0x24 
    /*00018c54*/ LDR         FP, [R3, #28] 
    /*00018c58*/ MOV         R9, R0 
    /*00018c5c*/ ADD         R1, R7, IP 
    /*00018c60*/ MOV         R8, R2 
    /*00018c64*/ STR         SL, [R1, #840]              @ 0x348 
    /*00018c68*/ STR         FP, [R1, #844]              @ 0x34c 
    /*00018c6c*/ LDR         R3, [R3, #744]              @ 0x2e8 
    /*00018c70*/ CMP         R3, #1 
    /*00018c74*/ BEQ         VPSS_DRV_CalcAspectRatio_x18e3c
    /*00018c78*/ BCC         VPSS_DRV_CalcAspectRatio_x18dfc
    /*00018c7c*/ CMP         R3, #2 
    /*00018c80*/ BEQ         VPSS_DRV_CalcAspectRatio_x18dd0
    VPSS_DRV_CalcAspectRatio_x18c84:
    /*00018c84*/ MOV         R4, #44                     @ 0x2c 
    /*00018c88*/ MOV         R2, SL 
    /*00018c8c*/ MLA         R4, R4, R6, R7 
    /*00018c90*/ MOV         R0, R9 
    /*00018c94*/ ADD         R9, SP, #8 
    /*00018c98*/ MOV         R3, FP 
    /*00018c9c*/ MOV         R1, R6 
    /*00018ca0*/ LDR         IP, [R4, #848]              @ 0x350 
    /*00018ca4*/ LDR         SL, [R4, #852]              @ 0x354 
    /*00018ca8*/ LDR         LR, [R4, #856]              @ 0x358 
    /*00018cac*/ BIC         IP, IP, #1 
    /*00018cb0*/ STR         IP, [R4, #848]              @ 0x350 
    /*00018cb4*/ BIC         SL, SL, #1 
    /*00018cb8*/ STR         IP, [SP, #16] 
    /*00018cbc*/ BIC         LR, LR, #1 
    /*00018cc0*/ LDR         IP, [R4, #860]              @ 0x35c 
    /*00018cc4*/ STR         SL, [R4, #852]              @ 0x354 
    /*00018cc8*/ STR         LR, [R4, #856]              @ 0x358 
    /*00018ccc*/ BIC         IP, IP, #1 
    /*00018cd0*/ STR         LR, [SP, #24] 
    /*00018cd4*/ STR         IP, [R4, #860]              @ 0x35c 
    /*00018cd8*/ STR         IP, [SP, #28] 
    /*00018cdc*/ STR         R9, [SP] 
    /*00018ce0*/ LDR         LR, [R5, #744]              @ 0x2e8 
    /*00018ce4*/ LDR         IP, [R5, #748]              @ 0x2ec 
    /*00018ce8*/ STR         SL, [SP, #20] 
    /*00018cec*/ STR         LR, [SP, #8] 
    /*00018cf0*/ STR         IP, [SP, #12] 
    /*00018cf4*/ BL          0x0000000000018CF4          @ VPSS_DRV_CheckAspectRatio [R_ARM_CALL: .text+0x18a44] 
    /*00018cf8*/ CMP         R0, #0 
    /*00018cfc*/ MOVNE       R3, #0 
    /*00018d00*/ STRNE       R3, [R4, #836]              @ 0x344 
    /*00018d04*/ BNE         VPSS_DRV_CalcAspectRatio_x18dc8
    /*00018d08*/ MOVW        R3, #1080                   @ 0x438 
    /*00018d0c*/ MOV         R2, #360                    @ 0x168 
    /*00018d10*/ MUL         R8, R3, R8 
    /*00018d14*/ LDR         R1, [R4, #856]              @ 0x358 
    /*00018d18*/ MLA         R6, R2, R6, R8 
    /*00018d1c*/ MOVW        R3, #26560                  @ 0x67c0 
    /*00018d20*/ MOVW        R2, #26564                  @ 0x67c4 
    /*00018d24*/ MVN         R8, #43                     @ 0x2b 
    /*00018d28*/ MVN         LR, #108                    @ 0x6c 
    /*00018d2c*/ ADD         R6, R7, R6 
    /*00018d30*/ MOV         R7, #130                    @ 0x82 
    /*00018d34*/ STR         R1, [R6, R3] 
    /*00018d38*/ MOV         R3, #150                    @ 0x96 
    /*00018d3c*/ LDR         R1, [R4, #860]              @ 0x35c 
    /*00018d40*/ STR         R1, [R6, R2] 
    /*00018d44*/ MVN         R6, #85                     @ 0x55 
    /*00018d48*/ LDR         R1, [R5, #748]              @ 0x2ec 
    /*00018d4c*/ MOV         R5, #76                     @ 0x4c 
    /*00018d50*/ UBFX        R2, R1, #8, #8 
    /*00018d54*/ UBFX        IP, R1, #16, #8 
    /*00018d58*/ STR         R1, [R4, #876]              @ 0x36c 
    /*00018d5c*/ UXTB        R1, R1 
    /*00018d60*/ MUL         R8, R8, IP 
    /*00018d64*/ MUL         LR, LR, R2 
    /*00018d68*/ MUL         R3, R3, R2 
    /*00018d6c*/ MLA         R8, R7, R1, R8 
    /*00018d70*/ MLA         LR, R7, IP, LR 
    /*00018d74*/ MLA         IP, R5, IP, R3 
    /*00018d78*/ MVN         R3, #20 
    /*00018d7c*/ MLA         R2, R6, R2, R8 
    /*00018d80*/ MOV         R5, #29 
    /*00018d84*/ MLA         R3, R3, R1, LR 
    /*00018d88*/ MLA         R1, R5, R1, IP 
    /*00018d8c*/ ASR         R2, R2, #8 
    /*00018d90*/ ADD         R2, R2, #128                @ 0x80 
    /*00018d94*/ ASR         R3, R3, #8 
    /*00018d98*/ USAT        R2, #8, R2 
    /*00018d9c*/ ADD         R3, R3, #128                @ 0x80 
    /*00018da0*/ ASR         R1, R1, #8 
    /*00018da4*/ USAT        R3, #8, R3 
    /*00018da8*/ ORR         R3, R3, R1, LSL #16 
    /*00018dac*/ ORR         R3, R3, R2, LSL #8 
    /*00018db0*/ UBFX        R2, R3, #8, #8 
    /*00018db4*/ STR         R2, [R4, #868]              @ 0x364 
    /*00018db8*/ LSR         R2, R3, #16 
    /*00018dbc*/ UXTB        R3, R3 
    /*00018dc0*/ STR         R2, [R4, #872]              @ 0x368 
    /*00018dc4*/ STR         R3, [R4, #864]              @ 0x360 
    VPSS_DRV_CalcAspectRatio_x18dc8:
    /*00018dc8*/ ADD         SP, SP, #36                 @ 0x24 
    /*00018dcc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_CalcAspectRatio_x18dd0:
    /*00018dd0*/ MOV         R3, #1 
    /*00018dd4*/ STR         R3, [R1, #836]              @ 0x344 
    /*00018dd8*/ LDR         R3, [R5, #752]              @ 0x2f0 
    /*00018ddc*/ STR         R3, [R1, #848]              @ 0x350 
    /*00018de0*/ LDR         R3, [R5, #756]              @ 0x2f4 
    /*00018de4*/ STR         R3, [R1, #852]              @ 0x354 
    /*00018de8*/ LDR         R3, [R5, #760]              @ 0x2f8 
    /*00018dec*/ STR         R3, [R1, #856]              @ 0x358 
    /*00018df0*/ LDR         R3, [R5, #764]              @ 0x2fc 
    /*00018df4*/ STR         R3, [R1, #860]              @ 0x35c 
    /*00018df8*/ B           VPSS_DRV_CalcAspectRatio_x18c84
    VPSS_DRV_CalcAspectRatio_x18dfc:
    /*00018dfc*/ MOVW        R2, #1080                   @ 0x438 
    /*00018e00*/ MOV         R3, #360                    @ 0x168 
    /*00018e04*/ MUL         R2, R2, R8 
    /*00018e08*/ MOVW        R0, #26560                  @ 0x67c0 
    /*00018e0c*/ MLA         R3, R3, R6, R2 
    /*00018e10*/ MOV         R2, #0 
    /*00018e14*/ STR         R2, [R1, #836]              @ 0x344 
    /*00018e18*/ STR         R2, [R1, #848]              @ 0x350 
    /*00018e1c*/ ADD         R3, R7, R3 
    /*00018e20*/ STR         R2, [R1, #852]              @ 0x354 
    /*00018e24*/ MOVW        R2, #26564                  @ 0x67c4 
    /*00018e28*/ LDR         R0, [R3, R0] 
    /*00018e2c*/ STR         R0, [R1, #856]              @ 0x358 
    /*00018e30*/ LDR         R3, [R3, R2] 
    /*00018e34*/ STR         R3, [R1, #860]              @ 0x35c 
    /*00018e38*/ B           VPSS_DRV_CalcAspectRatio_x18c84
    VPSS_DRV_CalcAspectRatio_x18e3c:
    /*00018e3c*/ ADD         R2, IP, #836                @ 0x344 
    /*00018e40*/ ADD         R0, R7, #15424              @ 0x3c40 
    /*00018e44*/ STR         R3, [R1, #836]              @ 0x344 
    /*00018e48*/ ADD         R2, R7, R2 
    /*00018e4c*/ MOV         R1, R5 
    /*00018e50*/ ADD         R0, R0, #32 
    /*00018e54*/ BL          0x0000000000018E54          @ VPSS_DRV_CalcAutoLBA [R_ARM_CALL: .text+0x189a4] 
    /*00018e58*/ B           VPSS_DRV_CalcAspectRatio_x18c84
FUNC_END VPSS_DRV_CalcAspectRatio


FUNC_BEGIN VPSS_DRV_SetChnAttr
    /*00018e5c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00018e60*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00018e64*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00018e68*/ MOV         R4, R1 
    /*00018e6c*/ MOV         R6, R2 
    /*00018e70*/ LDR         R7, [R3, R0, LSL #2] 
    /*00018e74*/ BL          0x0000000000018E74          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*00018e78*/ MOV         R2, #72                     @ 0x48 
    /*00018e7c*/ MOV         R1, R6 
    /*00018e80*/ MLA         R5, R2, R4, R7 
    /*00018e84*/ ADD         R5, R5, #44                 @ 0x2c 
    /*00018e88*/ MOV         R8, R0 
    /*00018e8c*/ MOV         R0, R5 
    /*00018e90*/ BL          0x0000000000018E90          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*00018e94*/ CMP         R0, #0 
    /*00018e98*/ BEQ         VPSS_DRV_SetChnAttr_x18ef8
    /*00018e9c*/ CMP         R4, #0 
    /*00018ea0*/ BEQ         VPSS_DRV_SetChnAttr_x18f00
    VPSS_DRV_SetChnAttr_x18ea4:
    /*00018ea4*/ MOV         R2, #72                     @ 0x48 
    /*00018ea8*/ MOV         R1, R6 
    /*00018eac*/ MOV         R0, R5 
    /*00018eb0*/ BL          0x0000000000018EB0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018eb4*/ MOV         R1, #360                    @ 0x168 
    /*00018eb8*/ ADD         R3, R7, R4, LSL #2 
    /*00018ebc*/ LDR         R2, [R6, #28] 
    /*00018ec0*/ MLA         R4, R1, R4, R7 
    /*00018ec4*/ ADD         R0, R3, #12288              @ 0x3000 
    /*00018ec8*/ ADD         R3, R3, #16384              @ 0x4000 
    /*00018ecc*/ MOV         R1, #1 
    /*00018ed0*/ SUB         R2, R2, #1 
    /*00018ed4*/ STR         R1, [R0, #3100]             @ 0xc1c 
    /*00018ed8*/ STR         R2, [R0, #3056]             @ 0xbf0 
    /*00018edc*/ MOVW        R2, #26560                  @ 0x67c0 
    /*00018ee0*/ STR         R1, [R3, #152]              @ 0x98 
    /*00018ee4*/ MOVW        R3, #26564                  @ 0x67c4 
    /*00018ee8*/ LDR         R1, [R6, #4] 
    /*00018eec*/ STR         R1, [R4, R2] 
    /*00018ef0*/ LDR         R2, [R6, #8] 
    /*00018ef4*/ STR         R2, [R4, R3] 
    VPSS_DRV_SetChnAttr_x18ef8:
    /*00018ef8*/ MOV         R0, #0 
    /*00018efc*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_SetChnAttr_x18f00:
    /*00018f00*/ ADD         R3, R7, #24576              @ 0x6000 
    /*00018f04*/ LDR         R3, [R3, #3108]             @ 0xc24 
    /*00018f08*/ CMP         R3, #1 
    /*00018f0c*/ BNE         VPSS_DRV_SetChnAttr_x18ea4
    /*00018f10*/ BICS        R3, R8, #2 
    /*00018f14*/ BNE         VPSS_DRV_SetChnAttr_x18ea4
    /*00018f18*/ LDR         R2, [R6, #4] 
    /*00018f1c*/ LDR         R3, [R7, #48]               @ 0x30 
    /*00018f20*/ CMP         R2, R3 
    /*00018f24*/ BEQ         VPSS_DRV_SetChnAttr_x18f38
    VPSS_DRV_SetChnAttr_x18f28:
    /*00018f28*/ ADD         R3, R7, #16384              @ 0x4000 
    /*00018f2c*/ MOV         R2, #1 
    /*00018f30*/ STR         R2, [R3, #684]              @ 0x2ac 
    /*00018f34*/ B           VPSS_DRV_SetChnAttr_x18ea4
    VPSS_DRV_SetChnAttr_x18f38:
    /*00018f38*/ LDR         R3, [R7, #80]               @ 0x50 
    /*00018f3c*/ LDR         R2, [R6, #36]               @ 0x24 
    /*00018f40*/ CMP         R2, R3 
    /*00018f44*/ LDR         R3, [R7, #68]               @ 0x44 
    /*00018f48*/ BEQ         VPSS_DRV_SetChnAttr_x18f54
    /*00018f4c*/ CMP         R3, #1 
    /*00018f50*/ BEQ         VPSS_DRV_SetChnAttr_x18f28
    VPSS_DRV_SetChnAttr_x18f54:
    /*00018f54*/ LDR         R2, [R6, #24] 
    /*00018f58*/ CMP         R2, R3 
    /*00018f5c*/ BNE         VPSS_DRV_SetChnAttr_x18f28
    /*00018f60*/ LDR         R2, [R6, #48]               @ 0x30 
    /*00018f64*/ LDR         R3, [R7, #92]               @ 0x5c 
    /*00018f68*/ CMP         R2, R3 
    /*00018f6c*/ BNE         VPSS_DRV_SetChnAttr_x18f28
    /*00018f70*/ LDR         R2, [R6, #56]               @ 0x38 
    /*00018f74*/ LDR         R3, [R7, #100]              @ 0x64 
    /*00018f78*/ CMP         R2, R3 
    /*00018f7c*/ BNE         VPSS_DRV_SetChnAttr_x18f28
    /*00018f80*/ LDR         R2, [R6, #64]               @ 0x40 
    /*00018f84*/ LDR         R3, [R7, #108]              @ 0x6c 
    /*00018f88*/ CMP         R2, R3 
    /*00018f8c*/ BNE         VPSS_DRV_SetChnAttr_x18f28
    /*00018f90*/ LDR         R2, [R6, #68]               @ 0x44 
    /*00018f94*/ LDR         R3, [R7, #112]              @ 0x70 
    /*00018f98*/ CMP         R2, R3 
    /*00018f9c*/ BNE         VPSS_DRV_SetChnAttr_x18f28
    /*00018fa0*/ B           VPSS_DRV_SetChnAttr_x18ea4
FUNC_END VPSS_DRV_SetChnAttr


FUNC_BEGIN VPSS_DRV_GetChnAttr
    /*00018fa4*/ MOV         IP, #72                     @ 0x48 
    /*00018fa8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00018fac*/ MUL         R1, IP, R1 
    /*00018fb0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00018fb4*/ PUSH        {R4, LR} 
    /*00018fb8*/ MOV         LR, R2 
    /*00018fbc*/ LDR         R3, [R3, R0, LSL #2] 
    /*00018fc0*/ ADD         R1, R1, #44                 @ 0x2c 
    /*00018fc4*/ MOV         R2, IP 
    /*00018fc8*/ MOV         R0, LR 
    /*00018fcc*/ ADD         R1, R3, R1 
    /*00018fd0*/ BL          0x0000000000018FD0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018fd4*/ MOV         R0, #0 
    /*00018fd8*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_GetChnAttr


FUNC_BEGIN VPSS_DRV_SetGrpCrop
    /*00018fdc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00018fe0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00018fe4*/ PUSH        {R4, R5, R6, LR} 
    /*00018fe8*/ MOV         R2, #24 
    /*00018fec*/ LDR         R4, [R3, R0, LSL #2] 
    /*00018ff0*/ MOV         R5, R1 
    /*00018ff4*/ ADD         R4, R4, #15424              @ 0x3c40 
    /*00018ff8*/ ADD         R4, R4, #8 
    /*00018ffc*/ MOV         R0, R4 
    /*00019000*/ BL          0x0000000000019000          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*00019004*/ CMP         R0, #0 
    /*00019008*/ BEQ         VPSS_DRV_SetGrpCrop_x1901c
    /*0001900c*/ MOV         R1, R5 
    /*00019010*/ MOV         R0, R4 
    /*00019014*/ MOV         R2, #24 
    /*00019018*/ BL          0x0000000000019018          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VPSS_DRV_SetGrpCrop_x1901c:
    /*0001901c*/ MOV         R0, #0 
    /*00019020*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_SetGrpCrop


FUNC_BEGIN VPSS_DRV_SetChnCrop
    /*00019024*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019028*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001902c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00019030*/ MOV         R5, R1 
    /*00019034*/ LDR         R7, [R3, R0, LSL #2] 
    /*00019038*/ MOV         R6, #24 
    /*0001903c*/ MOV         R1, R2 
    /*00019040*/ MOV         R8, R2 
    /*00019044*/ MOV         R2, R6 
    /*00019048*/ MLA         R4, R6, R5, R7 
    /*0001904c*/ ADD         R4, R4, #37632              @ 0x9300 
    /*00019050*/ ADD         R4, R4, #184                @ 0xb8 
    /*00019054*/ MOV         R0, R4 
    /*00019058*/ BL          0x0000000000019058          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*0001905c*/ CMP         R0, #0 
    /*00019060*/ BEQ         VPSS_DRV_SetChnCrop_x19084
    /*00019064*/ ADD         R5, R5, #4096               @ 0x1000 
    /*00019068*/ MOV         R2, R6 
    /*0001906c*/ ADD         R5, R5, #38                 @ 0x26 
    /*00019070*/ MOV         R1, R8 
    /*00019074*/ MOV         R0, R4 
    /*00019078*/ BL          0x0000000000019078          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001907c*/ MOV         R3, #1 
    /*00019080*/ STR         R3, [R7, R5, LSL #2] 
    VPSS_DRV_SetChnCrop_x19084:
    /*00019084*/ MOV         R0, #0 
    /*00019088*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VPSS_DRV_SetChnCrop


FUNC_BEGIN VPSS_DRV_GetChnCrop
    /*0001908c*/ PUSH        {R4, LR} 
    /*00019090*/ MOVW        R3, #37816                  @ 0x93b8 
    /*00019094*/ MOV         LR, #24 
    /*00019098*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001909c*/ MLA         R1, LR, R1, R3 
    /*000190a0*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000190a4*/ LDR         R3, [IP, R0, LSL #2] 
    /*000190a8*/ MOV         R0, R2 
    /*000190ac*/ MOV         R2, LR 
    /*000190b0*/ ADD         R1, R3, R1 
    /*000190b4*/ BL          0x00000000000190B4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000190b8*/ MOV         R0, #0 
    /*000190bc*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_GetChnCrop


FUNC_BEGIN VPSS_DRV_CheckPicForVGS
    /*000190c0*/ MOV         R0, #0 
    /*000190c4*/ BX          LR 
FUNC_END VPSS_DRV_CheckPicForVGS


FUNC_BEGIN VPSS_DRV_CheckChnStaticAttrForGdc
    /*000190c8*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000190cc*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000190d0*/ ADD         R3, R1, #3840               @ 0xf00 
    /*000190d4*/ LDR         IP, [IP, R0, LSL #2] 
    /*000190d8*/ ADD         R3, R3, #6 
    /*000190dc*/ ADD         R3, IP, R3, LSL #2 
    /*000190e0*/ LDR         R3, [R3, #4] 
    /*000190e4*/ CMP         R3, #0 
    /*000190e8*/ BEQ         VPSS_DRV_CheckChnStaticAttrForGdc_x19158
    /*000190ec*/ MOV         R3, #72                     @ 0x48 
    /*000190f0*/ MLA         R3, R3, R1, IP 
    /*000190f4*/ PUSH        {R4, R5, LR} 
    /*000190f8*/ MOV         LR, R0 
    /*000190fc*/ LDR         R4, [R2, #4] 
    /*00019100*/ MOV         R0, R1 
    /*00019104*/ SUB         SP, SP, #36                 @ 0x24 
    /*00019108*/ LDR         R5, [R2, #8] 
    /*0001910c*/ LDR         R1, [R3, #48]               @ 0x30 
    /*00019110*/ LDR         IP, [R3, #52]               @ 0x34 
    /*00019114*/ CMP         R1, R4 
    /*00019118*/ BNE         VPSS_DRV_CheckChnStaticAttrForGdc_x19160
    /*0001911c*/ CMP         IP, R5 
    /*00019120*/ BNE         VPSS_DRV_CheckChnStaticAttrForGdc_x19160
    /*00019124*/ LDR         R3, [R3, #64]               @ 0x40 
    /*00019128*/ LDR         R1, [R2, #20] 
    /*0001912c*/ CMP         R3, R1 
    /*00019130*/ BNE         VPSS_DRV_CheckChnStaticAttrForGdc_x191d4
    /*00019134*/ LDR         R3, [R2, #24] 
    /*00019138*/ CMP         R3, #0 
    /*0001913c*/ BNE         VPSS_DRV_CheckChnStaticAttrForGdc_x191a0
    /*00019140*/ LDR         R3, [R2, #12] 
    /*00019144*/ CMP         R3, #0 
    /*00019148*/ MOVEQ       R0, R3 
    /*0001914c*/ BNE         VPSS_DRV_CheckChnStaticAttrForGdc_x19210
    VPSS_DRV_CheckChnStaticAttrForGdc_x19150:
    /*00019150*/ ADD         SP, SP, #36                 @ 0x24 
    /*00019154*/ POP         {R4, R5, PC} 
    VPSS_DRV_CheckChnStaticAttrForGdc_x19158:
    /*00019158*/ MOV         R0, R3 
    /*0001915c*/ BX          LR 
    VPSS_DRV_CheckChnStaticAttrForGdc_x19160:
    /*00019160*/ MOVW        R3, #1069                   @ 0x42d 
    /*00019164*/ STR         R1, [SP, #12] 
    /*00019168*/ STR         R0, [SP, #8] 
    /*0001916c*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a00] 
    /*00019170*/ STM         SP, {R3, LR} 
    /*00019174*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a00] 
    /*00019178*/ STR         R5, [SP, #24] 
    /*0001917c*/ MOV         R1, #7 
    /*00019180*/ STR         R4, [SP, #20] 
    /*00019184*/ MOV         R0, #3 
    /*00019188*/ STR         IP, [SP, #16] 
    /*0001918c*/ LDR         R3, [PC, #180]              @ 0x0000000000019248 
    /*00019190*/ BL          0x0000000000019190          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019194*/ MOVW        R0, #32771                  @ 0x8003 
    /*00019198*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001919c*/ B           VPSS_DRV_CheckChnStaticAttrForGdc_x19150
    VPSS_DRV_CheckChnStaticAttrForGdc_x191a0:
    /*000191a0*/ STR         R0, [SP, #8] 
    /*000191a4*/ MOVW        R3, #1082                   @ 0x43a 
    /*000191a8*/ STR         LR, [SP, #4] 
    /*000191ac*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ab0] 
    /*000191b0*/ STR         R3, [SP] 
    /*000191b4*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ab0] 
    /*000191b8*/ LDR         R3, [PC, #136]              @ 0x0000000000019248 
    /*000191bc*/ MOV         R1, #7 
    /*000191c0*/ MOV         R0, #3 
    /*000191c4*/ BL          0x00000000000191C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000191c8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000191cc*/ MOVT        R0, #40967                  @ 0xa007 
    /*000191d0*/ B           VPSS_DRV_CheckChnStaticAttrForGdc_x19150
    VPSS_DRV_CheckChnStaticAttrForGdc_x191d4:
    /*000191d4*/ STR         R1, [SP, #16] 
    /*000191d8*/ MOVW        IP, #1076                   @ 0x434 
    /*000191dc*/ STR         R3, [SP, #12] 
    /*000191e0*/ MOVW        R2, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a54] 
    /*000191e4*/ STR         R0, [SP, #8] 
    /*000191e8*/ MOVT        R2, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a54] 
    /*000191ec*/ STR         LR, [SP, #4] 
    /*000191f0*/ MOV         R1, #7 
    /*000191f4*/ STR         IP, [SP] 
    /*000191f8*/ MOV         R0, #3 
    /*000191fc*/ LDR         R3, [PC, #68]               @ 0x0000000000019248 
    /*00019200*/ BL          0x0000000000019200          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019204*/ MOVW        R0, #32771                  @ 0x8003 
    /*00019208*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001920c*/ B           VPSS_DRV_CheckChnStaticAttrForGdc_x19150
    VPSS_DRV_CheckChnStaticAttrForGdc_x19210:
    /*00019210*/ STR         R3, [SP, #12] 
    /*00019214*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5af0] 
    /*00019218*/ MOV         R3, #1088                   @ 0x440 
    /*0001921c*/ STR         R0, [SP, #8] 
    /*00019220*/ STR         R3, [SP] 
    /*00019224*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5af0] 
    /*00019228*/ STR         LR, [SP, #4] 
    /*0001922c*/ MOV         R1, #7 
    /*00019230*/ LDR         R3, [PC, #16]               @ 0x0000000000019248 
    /*00019234*/ MOV         R0, #3 
    /*00019238*/ BL          0x0000000000019238          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001923c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00019240*/ MOVT        R0, #40967                  @ 0xa007 
    /*00019244*/ B           VPSS_DRV_CheckChnStaticAttrForGdc_x19150
    /*00019248*/ MULEQ       R0, R0, LR 
FUNC_END VPSS_DRV_CheckChnStaticAttrForGdc


FUNC_BEGIN VPSS_DRV_SetExtChnAttr
    /*0001924c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019250*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019254*/ PUSH        {R4, LR} 
    /*00019258*/ SUB         LR, R1, #3 
    /*0001925c*/ LDR         IP, [R3, R0, LSL #2] 
    /*00019260*/ MOV         R4, #40                     @ 0x28 
    /*00019264*/ ADD         R3, R1, #3840               @ 0xf00 
    /*00019268*/ MOV         R1, R2 
    /*0001926c*/ ADD         R3, R3, #6 
    /*00019270*/ MOV         R2, R4 
    /*00019274*/ MLA         R0, R4, LR, IP 
    /*00019278*/ ADD         R3, IP, R3, LSL #2 
    /*0001927c*/ MOV         IP, #1 
    /*00019280*/ STR         IP, [R3, #4] 
    /*00019284*/ ADD         R0, R0, #37376              @ 0x9200 
    /*00019288*/ ADD         R0, R0, #120                @ 0x78 
    /*0001928c*/ BL          0x000000000001928C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019290*/ MOV         R0, #0 
    /*00019294*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_SetExtChnAttr


FUNC_BEGIN VPSS_DRV_SetChnRotationAttr
    /*00019298*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001929c*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000192a0*/ PUSH        {R4, R5, R6, LR} 
    /*000192a4*/ MOV         R3, #640                    @ 0x280 
    /*000192a8*/ LDR         R5, [IP, R0, LSL #2] 
    /*000192ac*/ MOV         R4, R1 
    /*000192b0*/ MOV         R1, R2 
    /*000192b4*/ MOV         R2, R3 
    /*000192b8*/ MLA         R0, R3, R4, R5 
    /*000192bc*/ ADD         R0, R0, #31744              @ 0x7c00 
    /*000192c0*/ ADD         R0, R0, #112                @ 0x70 
    /*000192c4*/ BL          0x00000000000192C4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000192c8*/ ADD         R1, R4, #17152              @ 0x4300 
    /*000192cc*/ ADD         R1, R1, #2 
    /*000192d0*/ MOV         R3, #1 
    /*000192d4*/ ADD         R1, R5, R1, LSL #2 
    /*000192d8*/ STR         R3, [R1, #4] 
    /*000192dc*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_SetChnRotationAttr


FUNC_BEGIN VPSS_DRV_GetRotationOperationAttr
    /*000192e0*/ MOV         R3, #640                    @ 0x280 
    /*000192e4*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000192e8*/ MUL         R3, R3, R1 
    /*000192ec*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000192f0*/ PUSH        {R4, R5, R6, LR} 
    /*000192f4*/ MOV         R6, R2 
    /*000192f8*/ LDR         R5, [IP, R0, LSL #2] 
    /*000192fc*/ ADD         R4, R3, #69632              @ 0x11000 
    /*00019300*/ MOV         R0, R6 
    /*00019304*/ ADD         R1, R4, #696                @ 0x2b8 
    /*00019308*/ ADD         R3, R5, R3 
    /*0001930c*/ ADD         R1, R5, R1 
    /*00019310*/ ADD         R3, R3, #69632              @ 0x11000 
    /*00019314*/ MOV         R2, #88                     @ 0x58 
    /*00019318*/ LDR         R3, [R3, #616]              @ 0x268 
    /*0001931c*/ ADDS        R3, R3, #0 
    /*00019320*/ MOVNE       R3, #1 
    /*00019324*/ STR         R3, [R0], #16 
    /*00019328*/ BL          0x0000000000019328          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001932c*/ ADD         R1, R4, #784                @ 0x310 
    /*00019330*/ ADD         R1, R5, R1 
    /*00019334*/ ADD         R0, R6, #104                @ 0x68 
    /*00019338*/ MOV         R2, #72                     @ 0x48 
    /*0001933c*/ BL          0x000000000001933C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019340*/ MOV         R0, #0 
    /*00019344*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_GetRotationOperationAttr


FUNC_BEGIN VPSS_DRV_GetChnRotationAttrSet
    /*00019348*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001934c*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019350*/ MOV         R3, #640                    @ 0x280 
    /*00019354*/ LDR         R0, [IP, R0, LSL #2] 
    /*00019358*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001935c*/ MOVW        LR, #31856                  @ 0x7c70 
    /*00019360*/ MLA         R1, R3, R1, R0 
    /*00019364*/ LDR         R3, [R1, LR] 
    /*00019368*/ STR         R3, [R2] 
    /*0001936c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VPSS_DRV_GetChnRotationAttrSet


FUNC_BEGIN VPSS_DRV_GetChnRotationAttrUse
    /*00019370*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019374*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019378*/ MOV         R3, #640                    @ 0x280 
    /*0001937c*/ LDR         R0, [IP, R0, LSL #2] 
    /*00019380*/ MLA         R1, R3, R1, R0 
    /*00019384*/ ADD         R1, R1, #69632              @ 0x11000 
    /*00019388*/ LDR         R3, [R1, #616]              @ 0x268 
    /*0001938c*/ STR         R3, [R2] 
    /*00019390*/ BX          LR 
FUNC_END VPSS_DRV_GetChnRotationAttrUse


FUNC_BEGIN VPSS_DRV_CheckChnLdcAttr
    /*00019394*/ PUSH        {R4, R5, R6, LR} 
    /*00019398*/ MOV         R5, R2 
    /*0001939c*/ LDR         R2, [R2] 
    /*000193a0*/ SUB         SP, SP, #32 
    /*000193a4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000193a8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000193ac*/ CMP         R2, #1 
    /*000193b0*/ LDR         R6, [R3, R0, LSL #2] 
    /*000193b4*/ MOVWHI      R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b38] 
    /*000193b8*/ MOVWHI      R3, #1167                   @ 0x48f 
    /*000193bc*/ MOVTHI      R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b38] 
    /*000193c0*/ STRHI       R3, [SP] 
    /*000193c4*/ BHI         VPSS_DRV_CheckChnLdcAttr_x1944c
    /*000193c8*/ MOV         R0, #37                     @ 0x25 
    /*000193cc*/ MOV         R4, R1 
    /*000193d0*/ BL          0x00000000000193D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000193d4*/ CMP         R0, #0 
    /*000193d8*/ BEQ         VPSS_DRV_CheckChnLdcAttr_x19468
    /*000193dc*/ LDR         R2, [R0, #40]               @ 0x28 
    /*000193e0*/ CMP         R2, #0 
    /*000193e4*/ BEQ         VPSS_DRV_CheckChnLdcAttr_x19468
    /*000193e8*/ MOV         R1, #72                     @ 0x48 
    /*000193ec*/ MOV         R3, #24 
    /*000193f0*/ MLA         R3, R3, R4, R6 
    /*000193f4*/ MOVW        LR, #15512                  @ 0x3c98 
    /*000193f8*/ MLA         R4, R1, R4, R6 
    /*000193fc*/ MOVW        IP, #15516                  @ 0x3c9c 
    /*00019400*/ ADD         R1, R5, #4 
    /*00019404*/ ADD         R0, SP, #12 
    /*00019408*/ LDR         R5, [R3, LR] 
    /*0001940c*/ LDR         LR, [R3, IP] 
    /*00019410*/ LDR         IP, [R4, #60]               @ 0x3c 
    /*00019414*/ LDR         R3, [R4, #68]               @ 0x44 
    /*00019418*/ STR         R5, [SP, #12] 
    /*0001941c*/ STR         LR, [SP, #16] 
    /*00019420*/ STR         IP, [SP, #20] 
    /*00019424*/ STR         R3, [SP, #24] 
    /*00019428*/ BLX         R2 
    /*0001942c*/ CMP         R0, #0 
    /*00019430*/ BNE         VPSS_DRV_CheckChnLdcAttr_x1943c
    /*00019434*/ ADD         SP, SP, #32 
    /*00019438*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_CheckChnLdcAttr_x1943c:
    /*0001943c*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b90] 
    /*00019440*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b90] 
    /*00019444*/ MOV         R3, #1184                   @ 0x4a0 
    /*00019448*/ STR         R3, [SP] 
    VPSS_DRV_CheckChnLdcAttr_x1944c:
    /*0001944c*/ LDR         R3, [PC, #40]               @ 0x000000000001947c 
    /*00019450*/ MOV         R1, #7 
    /*00019454*/ MOV         R0, #3 
    /*00019458*/ BL          0x0000000000019458          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001945c*/ MVN         R0, #0 
    /*00019460*/ ADD         SP, SP, #32 
    /*00019464*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_CheckChnLdcAttr_x19468:
    /*00019468*/ MOVW        R3, #1173                   @ 0x495 
    /*0001946c*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b68] 
    /*00019470*/ STR         R3, [SP] 
    /*00019474*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b68] 
    /*00019478*/ B           VPSS_DRV_CheckChnLdcAttr_x1944c
    /*0001947c*/ @           <UNDEFINED> instruction: 0x00000eb4 
FUNC_END VPSS_DRV_CheckChnLdcAttr


FUNC_BEGIN VPSS_DRV_SetChnLDCAttr
    /*00019480*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019484*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019488*/ PUSH        {R4, R5, R6, LR} 
    /*0001948c*/ MOV         R3, #504                    @ 0x1f8 
    /*00019490*/ LDR         R5, [IP, R0, LSL #2] 
    /*00019494*/ MOV         R4, R1 
    /*00019498*/ MOV         R1, R2 
    /*0001949c*/ MOV         R2, R3 
    /*000194a0*/ MLA         R0, R3, R4, R5 
    /*000194a4*/ ADD         R4, R4, #17152              @ 0x4300 
    /*000194a8*/ ADD         R0, R0, #30208              @ 0x7600 
    /*000194ac*/ ADD         R0, R0, #136                @ 0x88 
    /*000194b0*/ BL          0x00000000000194B0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000194b4*/ MOV         R3, #1 
    /*000194b8*/ STR         R3, [R5, R4, LSL #2] 
    /*000194bc*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_SetChnLDCAttr


FUNC_BEGIN VPSS_DRV_GetChnLDCAttrSet
    /*000194c0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000194c4*/ MOV         R3, #504                    @ 0x1f8 
    /*000194c8*/ MOVW        LR, #30344                  @ 0x7688 
    /*000194cc*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000194d0*/ MLA         R1, R3, R1, LR 
    /*000194d4*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000194d8*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    /*000194dc*/ LDR         R3, [IP, R0, LSL #2] 
    /*000194e0*/ MOV         R0, R2 
    /*000194e4*/ MOV         R2, #32 
    /*000194e8*/ ADD         R1, R3, R1 
    VPSS_DRV_GetChnLDCAttrSet_x194ec:
    /*000194ec*/ B           VPSS_DRV_GetChnLDCAttrSet_x194ec@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VPSS_DRV_GetChnLDCAttrSet


FUNC_BEGIN VPSS_DRV_GetChnLDCAttrUse
    /*000194f0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000194f4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000194f8*/ PUSH        {R4, R5, R6, LR} 
    /*000194fc*/ MOV         R4, R1 
    /*00019500*/ LDR         R5, [R3, R0, LSL #2] 
    /*00019504*/ MOV         R6, R2 
    /*00019508*/ CMP         R5, #0 
    /*0001950c*/ BEQ         VPSS_DRV_GetChnLDCAttrUse_x19530
    VPSS_DRV_GetChnLDCAttrUse_x19510:
    /*00019510*/ MOV         R1, #504                    @ 0x1f8 
    /*00019514*/ MOV         R0, R6 
    /*00019518*/ MLA         R1, R1, R4, R5 
    /*0001951c*/ MOV         R2, #32 
    /*00019520*/ POP         {R4, R5, R6, LR} 
    /*00019524*/ ADD         R1, R1, #68608              @ 0x10c00 
    /*00019528*/ ADD         R1, R1, #128                @ 0x80 
    VPSS_DRV_GetChnLDCAttrUse_x1952c:
    /*0001952c*/ B           VPSS_DRV_GetChnLDCAttrUse_x1952c@ osal_memcpy [R_ARM_JUMP24: +0x0] 
    VPSS_DRV_GetChnLDCAttrUse_x19530:
    /*00019530*/ MOVW        R3, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5bc4] 
    /*00019534*/ MOVW        R0, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e8] 
    /*00019538*/ MOVT        R3, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5bc4] 
    /*0001953c*/ MOVT        R0, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e8] 
    /*00019540*/ MOVW        R2, #1215                   @ 0x4bf 
    /*00019544*/ LDR         R1, [PC, #4]                @ 0x0000000000019550 
    /*00019548*/ BL          0x0000000000019548          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001954c*/ B           VPSS_DRV_GetChnLDCAttrUse_x19510
    /*00019550*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VPSS_DRV_GetChnLDCAttrUse


FUNC_BEGIN VPSS_DRV_GetLDCOperationAttr
    /*00019554*/ MOV         R3, #504                    @ 0x1f8 
    /*00019558*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001955c*/ MUL         R3, R3, R1 
    /*00019560*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019564*/ PUSH        {R4, R5, R6, LR} 
    /*00019568*/ MOV         R6, R2 
    /*0001956c*/ LDR         R5, [IP, R0, LSL #2] 
    /*00019570*/ ADD         R4, R3, #68608              @ 0x10c00 
    /*00019574*/ MOV         R0, R6 
    /*00019578*/ ADD         R1, R4, #132                @ 0x84 
    /*0001957c*/ ADD         R3, R5, R3 
    /*00019580*/ ADD         R1, R5, R1 
    /*00019584*/ ADD         R3, R3, #68608              @ 0x10c00 
    /*00019588*/ MOV         R2, #28 
    /*0001958c*/ LDR         R3, [R3, #128]              @ 0x80 
    /*00019590*/ STR         R3, [R0], #16 
    /*00019594*/ BL          0x0000000000019594          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019598*/ ADD         R1, R4, #160                @ 0xa0 
    /*0001959c*/ ADD         R1, R5, R1 
    /*000195a0*/ ADD         R0, R6, #248                @ 0xf8 
    /*000195a4*/ MOV         R2, #72                     @ 0x48 
    /*000195a8*/ BL          0x00000000000195A8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000195ac*/ ADD         R1, R4, #232                @ 0xe8 
    /*000195b0*/ ADD         R1, R5, R1 
    /*000195b4*/ ADD         R0, R6, #320                @ 0x140 
    /*000195b8*/ MOV         R2, #368                    @ 0x170 
    /*000195bc*/ BL          0x00000000000195BC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000195c0*/ MOV         R0, #0 
    /*000195c4*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_GetLDCOperationAttr


FUNC_BEGIN VPSS_DRV_CheckChnRotateExAttr
    /*000195c8*/ PUSH        {R4, R5, R6, LR} 
    /*000195cc*/ MOV         R5, R2 
    /*000195d0*/ LDR         R2, [R2] 
    /*000195d4*/ SUB         SP, SP, #32 
    /*000195d8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000195dc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000195e0*/ CMP         R2, #1 
    /*000195e4*/ LDR         R6, [R3, R0, LSL #2] 
    /*000195e8*/ MOVWHI      R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5bd0] 
    /*000195ec*/ MOVWHI      R3, #1249                   @ 0x4e1 
    /*000195f0*/ MOVTHI      R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5bd0] 
    /*000195f4*/ STRHI       R3, [SP] 
    /*000195f8*/ BHI         VPSS_DRV_CheckChnRotateExAttr_x19680
    /*000195fc*/ MOV         R0, #37                     @ 0x25 
    /*00019600*/ MOV         R4, R1 
    /*00019604*/ BL          0x0000000000019604          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019608*/ CMP         R0, #0 
    /*0001960c*/ BEQ         VPSS_DRV_CheckChnRotateExAttr_x1969c
    /*00019610*/ LDR         R2, [R0, #56]               @ 0x38 
    /*00019614*/ CMP         R2, #0 
    /*00019618*/ BEQ         VPSS_DRV_CheckChnRotateExAttr_x1969c
    /*0001961c*/ MOV         R1, #72                     @ 0x48 
    /*00019620*/ MOV         R3, #24 
    /*00019624*/ MLA         R3, R3, R4, R6 
    /*00019628*/ MOVW        LR, #15512                  @ 0x3c98 
    /*0001962c*/ MLA         R4, R1, R4, R6 
    /*00019630*/ MOVW        IP, #15516                  @ 0x3c9c 
    /*00019634*/ ADD         R1, R5, #4 
    /*00019638*/ ADD         R0, SP, #12 
    /*0001963c*/ LDR         R5, [R3, LR] 
    /*00019640*/ LDR         LR, [R3, IP] 
    /*00019644*/ LDR         IP, [R4, #60]               @ 0x3c 
    /*00019648*/ LDR         R3, [R4, #68]               @ 0x44 
    /*0001964c*/ STR         R5, [SP, #12] 
    /*00019650*/ STR         LR, [SP, #16] 
    /*00019654*/ STR         IP, [SP, #20] 
    /*00019658*/ STR         R3, [SP, #24] 
    /*0001965c*/ BLX         R2 
    /*00019660*/ CMP         R0, #0 
    /*00019664*/ BNE         VPSS_DRV_CheckChnRotateExAttr_x19670
    /*00019668*/ ADD         SP, SP, #32 
    /*0001966c*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_CheckChnRotateExAttr_x19670:
    /*00019670*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c04] 
    /*00019674*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c04] 
    /*00019678*/ MOVW        R3, #1268                   @ 0x4f4 
    /*0001967c*/ STR         R3, [SP] 
    VPSS_DRV_CheckChnRotateExAttr_x19680:
    /*00019680*/ LDR         R3, [PC, #40]               @ 0x00000000000196b0 
    /*00019684*/ MOV         R1, #7 
    /*00019688*/ MOV         R0, #3 
    /*0001968c*/ BL          0x000000000001968C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019690*/ MVN         R0, #0 
    /*00019694*/ ADD         SP, SP, #32 
    /*00019698*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_CheckChnRotateExAttr_x1969c:
    /*0001969c*/ MOVW        R3, #1255                   @ 0x4e7 
    /*000196a0*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b68] 
    /*000196a4*/ STR         R3, [SP] 
    /*000196a8*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b68] 
    /*000196ac*/ B           VPSS_DRV_CheckChnRotateExAttr_x19680
    /*000196b0*/ ANDEQ       R0, R0, IP, ROR #29 
FUNC_END VPSS_DRV_CheckChnRotateExAttr


FUNC_BEGIN VPSS_DRV_SetChnRotationExAttr
    /*000196b4*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000196b8*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000196bc*/ PUSH        {R4, R5, R6, LR} 
    /*000196c0*/ MOV         R3, #664                    @ 0x298 
    /*000196c4*/ LDR         R5, [IP, R0, LSL #2] 
    /*000196c8*/ MOV         R4, R1 
    /*000196cc*/ MOV         R1, R2 
    /*000196d0*/ MOV         R2, R3 
    /*000196d4*/ MLA         R0, R3, R4, R5 
    /*000196d8*/ ADD         R0, R0, #33536              @ 0x8300 
    /*000196dc*/ ADD         R0, R0, #240                @ 0xf0 
    /*000196e0*/ BL          0x00000000000196E0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000196e4*/ ADD         R1, R4, #17152              @ 0x4300 
    /*000196e8*/ ADD         R1, R1, #6 
    /*000196ec*/ MOV         R3, #1 
    /*000196f0*/ STR         R3, [R5, R1, LSL #2] 
    /*000196f4*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_SetChnRotationExAttr


FUNC_BEGIN VPSS_DRV_GetChnRotationExAttrSet
    /*000196f8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000196fc*/ MOV         R3, #664                    @ 0x298 
    /*00019700*/ MOVW        LR, #33776                  @ 0x83f0 
    /*00019704*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019708*/ MLA         R1, R3, R1, LR 
    /*0001970c*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019710*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    /*00019714*/ LDR         R3, [IP, R0, LSL #2] 
    /*00019718*/ MOV         R0, R2 
    /*0001971c*/ MOV         R2, #28 
    /*00019720*/ ADD         R1, R3, R1 
    VPSS_DRV_GetChnRotationExAttrSet_x19724:
    /*00019724*/ B           VPSS_DRV_GetChnRotationExAttrSet_x19724@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VPSS_DRV_GetChnRotationExAttrSet


FUNC_BEGIN VPSS_DRV_GetChnRotationExAttrUse
    /*00019728*/ MOV         R3, #664                    @ 0x298 
    /*0001972c*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019730*/ MUL         R1, R3, R1 
    /*00019734*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019738*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001973c*/ MOV         LR, R2 
    /*00019740*/ LDR         R3, [IP, R0, LSL #2] 
    /*00019744*/ ADD         R1, R1, #71680              @ 0x11800 
    /*00019748*/ ADD         R1, R1, #488                @ 0x1e8 
    /*0001974c*/ MOV         R0, LR 
    /*00019750*/ MOV         R2, #28 
    /*00019754*/ ADD         R1, R3, R1 
    /*00019758*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    VPSS_DRV_GetChnRotationExAttrUse_x1975c:
    /*0001975c*/ B           VPSS_DRV_GetChnRotationExAttrUse_x1975c@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VPSS_DRV_GetChnRotationExAttrUse


FUNC_BEGIN VPSS_DRV_GetRotationExOperationAttr
    /*00019760*/ MOV         R3, #664                    @ 0x298 
    /*00019764*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019768*/ MUL         R3, R3, R1 
    /*0001976c*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019770*/ PUSH        {R4, R5, R6, LR} 
    /*00019774*/ MOV         R6, R2 
    /*00019778*/ LDR         R5, [IP, R0, LSL #2] 
    /*0001977c*/ ADD         R4, R3, #71680              @ 0x11800 
    /*00019780*/ MOV         R0, R6 
    /*00019784*/ ADD         R1, R4, #592                @ 0x250 
    /*00019788*/ ADD         R3, R5, R3 
    /*0001978c*/ ADD         R1, R5, R1 
    /*00019790*/ ADD         R3, R3, #71680              @ 0x11800 
    /*00019794*/ MOV         R2, #88                     @ 0x58 
    /*00019798*/ LDR         R3, [R3, #488]              @ 0x1e8 
    /*0001979c*/ STR         R3, [R0], #16 
    /*000197a0*/ BL          0x00000000000197A0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000197a4*/ ADD         R1, R4, #680                @ 0x2a8 
    /*000197a8*/ ADD         R1, R5, R1 
    /*000197ac*/ ADD         R0, R6, #104                @ 0x68 
    /*000197b0*/ MOV         R2, #72                     @ 0x48 
    /*000197b4*/ BL          0x00000000000197B4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000197b8*/ MOV         R0, #0 
    /*000197bc*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_GetRotationExOperationAttr


FUNC_BEGIN VPSS_DRV_GetRotationExOutSize
    /*000197c0*/ MOV         R3, #664                    @ 0x298 
    /*000197c4*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000197c8*/ MUL         R1, R3, R1 
    /*000197cc*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000197d0*/ PUSH        {R4, LR} 
    /*000197d4*/ MOV         LR, R2 
    /*000197d8*/ LDR         R3, [IP, R0, LSL #2] 
    /*000197dc*/ ADD         R1, R1, #71680              @ 0x11800 
    /*000197e0*/ ADD         R1, R1, #508                @ 0x1fc 
    /*000197e4*/ MOV         R2, #8 
    /*000197e8*/ MOV         R0, LR 
    /*000197ec*/ ADD         R1, R3, R1 
    /*000197f0*/ BL          0x00000000000197F0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000197f4*/ MOV         R0, #0 
    /*000197f8*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_GetRotationExOutSize


FUNC_BEGIN VPSS_DRV_CheckChnSpreadAttr
    /*000197fc*/ PUSH        {R4, LR} 
    /*00019800*/ MOV         R0, #37                     @ 0x25 
    /*00019804*/ SUB         SP, SP, #8 
    /*00019808*/ MOV         R4, R2 
    /*0001980c*/ BL          0x000000000001980C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019810*/ CMP         R0, #0 
    /*00019814*/ BEQ         VPSS_DRV_CheckChnSpreadAttr_x1983c
    /*00019818*/ LDR         R3, [R0, #48]               @ 0x30 
    /*0001981c*/ CMP         R3, #0 
    /*00019820*/ BEQ         VPSS_DRV_CheckChnSpreadAttr_x1983c
    /*00019824*/ MOV         R0, R4 
    /*00019828*/ BLX         R3 
    /*0001982c*/ CMP         R0, #0 
    /*00019830*/ BNE         VPSS_DRV_CheckChnSpreadAttr_x19864
    VPSS_DRV_CheckChnSpreadAttr_x19834:
    /*00019834*/ ADD         SP, SP, #8 
    /*00019838*/ POP         {R4, PC} 
    VPSS_DRV_CheckChnSpreadAttr_x1983c:
    /*0001983c*/ MOVW        R3, #1340                   @ 0x53c 
    VPSS_DRV_CheckChnSpreadAttr_x19840:
    /*00019840*/ STR         R3, [SP] 
    /*00019844*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b68] 
    /*00019848*/ LDR         R3, [PC, #28]               @ 0x000000000001986c 
    /*0001984c*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b68] 
    /*00019850*/ MOV         R1, #7 
    /*00019854*/ MOV         R0, #3 
    /*00019858*/ BL          0x0000000000019858          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001985c*/ MVN         R0, #0 
    /*00019860*/ B           VPSS_DRV_CheckChnSpreadAttr_x19834
    VPSS_DRV_CheckChnSpreadAttr_x19864:
    /*00019864*/ MOVW        R3, #1346                   @ 0x542 
    /*00019868*/ B           VPSS_DRV_CheckChnSpreadAttr_x19840
    /*0001986c*/ ANDEQ       R0, R0, IP, LSL #30 
FUNC_END VPSS_DRV_CheckChnSpreadAttr


FUNC_BEGIN VPSS_DRV_SetChnSpreadAttr
    /*00019870*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019874*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019878*/ PUSH        {R4, R5, R6, LR} 
    /*0001987c*/ MOV         R3, #576                    @ 0x240 
    /*00019880*/ LDR         R5, [IP, R0, LSL #2] 
    /*00019884*/ MOV         R4, R1 
    /*00019888*/ MOV         R1, R2 
    /*0001988c*/ MOV         R2, R3 
    /*00019890*/ MLA         R0, R3, R4, R5 
    /*00019894*/ ADD         R0, R0, #35584              @ 0x8b00 
    /*00019898*/ ADD         R0, R0, #184                @ 0xb8 
    /*0001989c*/ BL          0x000000000001989C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000198a0*/ ADD         R1, R4, #17152              @ 0x4300 
    /*000198a4*/ ADD         R1, R1, #8 
    /*000198a8*/ MOV         R3, #1 
    /*000198ac*/ ADD         R1, R5, R1, LSL #2 
    /*000198b0*/ STR         R3, [R1, #4] 
    /*000198b4*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_SetChnSpreadAttr


FUNC_BEGIN VPSS_DRV_GetChnSpreadAttrSet
    /*000198b8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000198bc*/ MOV         R3, #576                    @ 0x240 
    /*000198c0*/ MOVW        LR, #35768                  @ 0x8bb8 
    /*000198c4*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000198c8*/ MLA         R1, R3, R1, LR 
    /*000198cc*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000198d0*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    /*000198d4*/ LDR         R3, [IP, R0, LSL #2] 
    /*000198d8*/ MOV         R0, R2 
    /*000198dc*/ MOV         R2, #16 
    /*000198e0*/ ADD         R1, R3, R1 
    VPSS_DRV_GetChnSpreadAttrSet_x198e4:
    /*000198e4*/ B           VPSS_DRV_GetChnSpreadAttrSet_x198e4@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VPSS_DRV_GetChnSpreadAttrSet


FUNC_BEGIN VPSS_DRV_GetChnSpreadAttrUse
    /*000198e8*/ MOV         R3, #576                    @ 0x240 
    /*000198ec*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000198f0*/ MUL         R1, R3, R1 
    /*000198f4*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000198f8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000198fc*/ MOV         LR, R2 
    /*00019900*/ LDR         R3, [IP, R0, LSL #2] 
    /*00019904*/ ADD         R1, R1, #73728              @ 0x12000 
    /*00019908*/ ADD         R1, R1, #432                @ 0x1b0 
    /*0001990c*/ MOV         R0, LR 
    /*00019910*/ MOV         R2, #16 
    /*00019914*/ ADD         R1, R3, R1 
    /*00019918*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    VPSS_DRV_GetChnSpreadAttrUse_x1991c:
    /*0001991c*/ B           VPSS_DRV_GetChnSpreadAttrUse_x1991c@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VPSS_DRV_GetChnSpreadAttrUse


FUNC_BEGIN VPSS_DRV_GetSpreadOperationAttr
    /*00019920*/ PUSH        {R4, R5, R6, LR} 
    /*00019924*/ MOV         R4, #576                    @ 0x240 
    /*00019928*/ MUL         R4, R4, R1 
    /*0001992c*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019930*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019934*/ MOV         R1, R2 
    /*00019938*/ MOV         R2, #16 
    /*0001993c*/ MOV         R6, R3 
    /*00019940*/ LDR         R5, [IP, R0, LSL #2] 
    /*00019944*/ ADD         R4, R4, #73728              @ 0x12000 
    /*00019948*/ MOV         R0, R1 
    /*0001994c*/ ADD         R1, R4, #432                @ 0x1b0 
    /*00019950*/ ADD         R1, R5, R1 
    /*00019954*/ BL          0x0000000000019954          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019958*/ ADD         R1, R4, #448                @ 0x1c0 
    /*0001995c*/ ADD         R1, R5, R1 
    /*00019960*/ ADD         R0, R6, #16 
    /*00019964*/ MOV         R2, #88                     @ 0x58 
    /*00019968*/ BL          0x0000000000019968          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001996c*/ ADD         R1, R4, #536                @ 0x218 
    /*00019970*/ ADD         R1, R5, R1 
    /*00019974*/ ADD         R0, R6, #104                @ 0x68 
    /*00019978*/ MOV         R2, #72                     @ 0x48 
    /*0001997c*/ BL          0x000000000001997C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019980*/ ADD         R1, R4, #976                @ 0x3d0 
    /*00019984*/ ADD         R1, R5, R1 
    /*00019988*/ ADD         R0, R6, #176                @ 0xb0 
    /*0001998c*/ MOV         R2, #32 
    /*00019990*/ BL          0x0000000000019990          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019994*/ MOV         R0, #0 
    /*00019998*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_GetSpreadOperationAttr


FUNC_BEGIN VPSS_DRV_SetSpreadOperationPointer
    /*0001999c*/ MOV         R3, #0 
    /*000199a0*/ STR         R3, [R0, #160]              @ 0xa0 
    /*000199a4*/ STR         R3, [R0, #164]              @ 0xa4 
    /*000199a8*/ STR         R3, [R0, #152]              @ 0x98 
    /*000199ac*/ STR         R3, [R0, #156]              @ 0x9c 
    /*000199b0*/ BX          LR 
FUNC_END VPSS_DRV_SetSpreadOperationPointer


FUNC_BEGIN VPSS_DRV_GetSpreadOutSize
    /*000199b4*/ MOV         R3, #576                    @ 0x240 
    /*000199b8*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000199bc*/ MUL         R1, R3, R1 
    /*000199c0*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000199c4*/ PUSH        {R4, LR} 
    /*000199c8*/ MOV         LR, R2 
    /*000199cc*/ LDR         R3, [IP, R0, LSL #2] 
    /*000199d0*/ ADD         R1, R1, #73728              @ 0x12000 
    /*000199d4*/ ADD         R1, R1, #440                @ 0x1b8 
    /*000199d8*/ MOV         R2, #8 
    /*000199dc*/ MOV         R0, LR 
    /*000199e0*/ ADD         R1, R3, R1 
    /*000199e4*/ BL          0x00000000000199E4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000199e8*/ MOV         R0, #0 
    /*000199ec*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_GetSpreadOutSize


FUNC_BEGIN VPSS_DRV_GetSpreadAndLDCOperationAttr
    /*000199f0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000199f4*/ MOV         R4, #504                    @ 0x1f8 
    /*000199f8*/ MUL         R4, R4, R1 
    /*000199fc*/ MOV         R8, R1 
    /*00019a00*/ MOV         R5, #576                    @ 0x240 
    /*00019a04*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019a08*/ MUL         R5, R5, R8 
    /*00019a0c*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019a10*/ ADD         R4, R4, #68608              @ 0x10c00 
    /*00019a14*/ MOV         R6, R2 
    /*00019a18*/ LDR         R7, [IP, R0, LSL #2] 
    /*00019a1c*/ ADD         R1, R4, #132                @ 0x84 
    /*00019a20*/ ADD         R5, R5, #73728              @ 0x12000 
    /*00019a24*/ MOV         R2, #28 
    /*00019a28*/ ADD         R1, R7, R1 
    /*00019a2c*/ ADD         R0, R6, #16 
    /*00019a30*/ MOV         R9, R3 
    /*00019a34*/ BL          0x0000000000019A34          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019a38*/ ADD         R1, R5, #432                @ 0x1b0 
    /*00019a3c*/ MOV         R0, R9 
    /*00019a40*/ ADD         R1, R7, R1 
    /*00019a44*/ MOV         R2, #16 
    /*00019a48*/ BL          0x0000000000019A48          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019a4c*/ ADD         R1, R5, #448                @ 0x1c0 
    /*00019a50*/ ADD         R1, R7, R1 
    /*00019a54*/ ADD         R0, R6, #160                @ 0xa0 
    /*00019a58*/ MOV         R2, #88                     @ 0x58 
    /*00019a5c*/ BL          0x0000000000019A5C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019a60*/ ADD         R1, R4, #160                @ 0xa0 
    /*00019a64*/ ADD         R1, R7, R1 
    /*00019a68*/ ADD         R0, R6, #248                @ 0xf8 
    /*00019a6c*/ MOV         R2, #72                     @ 0x48 
    /*00019a70*/ BL          0x0000000000019A70          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019a74*/ ADD         R1, R4, #232                @ 0xe8 
    /*00019a78*/ ADD         R1, R7, R1 
    /*00019a7c*/ ADD         R0, R6, #320                @ 0x140 
    /*00019a80*/ MOV         R2, #368                    @ 0x170 
    /*00019a84*/ BL          0x0000000000019A84          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019a88*/ MOV         R0, #0 
    /*00019a8c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VPSS_DRV_GetSpreadAndLDCOperationAttr


FUNC_BEGIN VPSS_DRV_GetSpreadAndLDCOperationOutSize
    /*00019a90*/ MOV         R3, #576                    @ 0x240 
    /*00019a94*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019a98*/ MUL         R1, R3, R1 
    /*00019a9c*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019aa0*/ PUSH        {R4, LR} 
    /*00019aa4*/ MOV         LR, R2 
    /*00019aa8*/ LDR         R3, [IP, R0, LSL #2] 
    /*00019aac*/ ADD         R1, R1, #73728              @ 0x12000 
    /*00019ab0*/ ADD         R1, R1, #440                @ 0x1b8 
    /*00019ab4*/ MOV         R2, #8 
    /*00019ab8*/ MOV         R0, LR 
    /*00019abc*/ ADD         R1, R3, R1 
    /*00019ac0*/ BL          0x0000000000019AC0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019ac4*/ MOV         R0, #0 
    /*00019ac8*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_GetSpreadAndLDCOperationOutSize


FUNC_BEGIN VPSS_DRV_NeedCallGDCFunction
    /*00019acc*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019ad0*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019ad4*/ PUSH        {R4, R5, LR} 
    /*00019ad8*/ MOV         R3, #504                    @ 0x1f8 
    /*00019adc*/ LDR         R0, [R2, R0, LSL #2] 
    /*00019ae0*/ MOV         R2, #664                    @ 0x298 
    /*00019ae4*/ MOV         R5, #576                    @ 0x240 
    /*00019ae8*/ MOVW        R4, #30344                  @ 0x7688 
    /*00019aec*/ MOVW        LR, #33776                  @ 0x83f0 
    /*00019af0*/ MOVW        IP, #35768                  @ 0x8bb8 
    /*00019af4*/ MLA         R3, R3, R1, R0 
    /*00019af8*/ MLA         R2, R2, R1, R0 
    /*00019afc*/ MLA         R1, R5, R1, R0 
    /*00019b00*/ LDR         R3, [R3, R4] 
    /*00019b04*/ LDR         R0, [R2, LR] 
    /*00019b08*/ LDR         R2, [R1, IP] 
    /*00019b0c*/ ORR         R3, R3, R0 
    /*00019b10*/ ORRS        R3, R3, R2 
    /*00019b14*/ MOVNE       R0, #1 
    /*00019b18*/ MOVEQ       R0, #0 
    /*00019b1c*/ POP         {R4, R5, PC} 
FUNC_END VPSS_DRV_NeedCallGDCFunction


FUNC_BEGIN VPSS_DRV_UpdateLDCAttrFromUserSet
    /*00019b20*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019b24*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019b28*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00019b2c*/ LDR         R3, [R3, R0, LSL #2] 
    /*00019b30*/ ADD         R4, R3, R1, LSL #2 
    /*00019b34*/ ADD         R4, R4, #65536              @ 0x10000 
    /*00019b38*/ LDR         R6, [R4, #3072]             @ 0xc00 
    /*00019b3c*/ CMP         R6, #1 
    /*00019b40*/ BEQ         VPSS_DRV_UpdateLDCAttrFromUserSet_x19b4c
    /*00019b44*/ MOV         R0, #0 
    /*00019b48*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_UpdateLDCAttrFromUserSet_x19b4c:
    /*00019b4c*/ MOV         R2, #504                    @ 0x1f8 
    /*00019b50*/ MOV         R5, R0 
    /*00019b54*/ MUL         R0, R2, R1 
    /*00019b58*/ MOV         R7, R1 
    /*00019b5c*/ ADD         R1, R0, #30208              @ 0x7600 
    /*00019b60*/ ADD         R0, R0, #68608              @ 0x10c00 
    /*00019b64*/ ADD         R1, R1, #136                @ 0x88 
    /*00019b68*/ ADD         R0, R0, #128                @ 0x80 
    /*00019b6c*/ ADD         R1, R3, R1 
    /*00019b70*/ ADD         R0, R3, R0 
    /*00019b74*/ BL          0x0000000000019B74          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019b78*/ MOV         R0, #23 
    /*00019b7c*/ MLA         R0, R0, R5, R7 
    /*00019b80*/ MOVW        R3, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00019b84*/ MOVT        R3, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00019b88*/ MOV         R2, #0 
    /*00019b8c*/ STR         R2, [R4, #3072]             @ 0xc00 
    /*00019b90*/ ADD         R0, R0, #20 
    /*00019b94*/ STR         R6, [R3, R0, LSL #2] 
    /*00019b98*/ MOV         R0, #0 
    /*00019b9c*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VPSS_DRV_UpdateLDCAttrFromUserSet


FUNC_BEGIN VPSS_DRV_UpdateRotationAttrFromUserSet
    /*00019ba0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019ba4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019ba8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00019bac*/ LDR         R3, [R3, R0, LSL #2] 
    /*00019bb0*/ ADD         R4, R3, R1, LSL #2 
    /*00019bb4*/ ADD         R4, R4, #65536              @ 0x10000 
    /*00019bb8*/ LDR         R6, [R4, #3084]             @ 0xc0c 
    /*00019bbc*/ CMP         R6, #1 
    /*00019bc0*/ BEQ         VPSS_DRV_UpdateRotationAttrFromUserSet_x19bcc
    /*00019bc4*/ MOV         R0, #0 
    /*00019bc8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_UpdateRotationAttrFromUserSet_x19bcc:
    /*00019bcc*/ MOV         R2, #640                    @ 0x280 
    /*00019bd0*/ MOV         R5, R0 
    /*00019bd4*/ MUL         R0, R2, R1 
    /*00019bd8*/ MOV         R7, R1 
    /*00019bdc*/ ADD         R1, R0, #31744              @ 0x7c00 
    /*00019be0*/ ADD         R0, R0, #69632              @ 0x11000 
    /*00019be4*/ ADD         R1, R1, #112                @ 0x70 
    /*00019be8*/ ADD         R0, R0, #616                @ 0x268 
    /*00019bec*/ ADD         R1, R3, R1 
    /*00019bf0*/ ADD         R0, R3, R0 
    /*00019bf4*/ BL          0x0000000000019BF4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019bf8*/ MOV         R0, #23 
    /*00019bfc*/ MLA         R0, R0, R5, R7 
    /*00019c00*/ MOVW        R3, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00019c04*/ MOVT        R3, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00019c08*/ MOV         R2, #0 
    /*00019c0c*/ STR         R2, [R4, #3084]             @ 0xc0c 
    /*00019c10*/ ADD         R0, R0, #20 
    /*00019c14*/ STR         R6, [R3, R0, LSL #2] 
    /*00019c18*/ MOV         R0, #0 
    /*00019c1c*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VPSS_DRV_UpdateRotationAttrFromUserSet


FUNC_BEGIN VPSS_DRV_UpdateRotationAttrExFromUserSet
    /*00019c20*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019c24*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019c28*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00019c2c*/ LDR         R3, [R3, R0, LSL #2] 
    /*00019c30*/ ADD         R4, R3, R1, LSL #2 
    /*00019c34*/ ADD         R4, R4, #65536              @ 0x10000 
    /*00019c38*/ LDR         R6, [R4, #3096]             @ 0xc18 
    /*00019c3c*/ CMP         R6, #1 
    /*00019c40*/ BEQ         VPSS_DRV_UpdateRotationAttrExFromUserSet_x19c4c
    /*00019c44*/ MOV         R0, #0 
    /*00019c48*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_UpdateRotationAttrExFromUserSet_x19c4c:
    /*00019c4c*/ MOV         R2, #664                    @ 0x298 
    /*00019c50*/ MOV         R5, R0 
    /*00019c54*/ MUL         R0, R2, R1 
    /*00019c58*/ MOV         R7, R1 
    /*00019c5c*/ ADD         R1, R0, #33536              @ 0x8300 
    /*00019c60*/ ADD         R0, R0, #71680              @ 0x11800 
    /*00019c64*/ ADD         R1, R1, #240                @ 0xf0 
    /*00019c68*/ ADD         R0, R0, #488                @ 0x1e8 
    /*00019c6c*/ ADD         R1, R3, R1 
    /*00019c70*/ ADD         R0, R3, R0 
    /*00019c74*/ BL          0x0000000000019C74          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019c78*/ MOV         R0, #23 
    /*00019c7c*/ MLA         R0, R0, R5, R7 
    /*00019c80*/ MOVW        R3, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00019c84*/ MOVT        R3, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00019c88*/ MOV         R2, #0 
    /*00019c8c*/ STR         R2, [R4, #3096]             @ 0xc18 
    /*00019c90*/ ADD         R0, R0, #20 
    /*00019c94*/ STR         R6, [R3, R0, LSL #2] 
    /*00019c98*/ MOV         R0, #0 
    /*00019c9c*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VPSS_DRV_UpdateRotationAttrExFromUserSet


FUNC_BEGIN VPSS_DRV_UpdateSpreadAttrFromUserSet
    /*00019ca0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019ca4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019ca8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00019cac*/ LDR         R3, [R3, R0, LSL #2] 
    /*00019cb0*/ ADD         R4, R3, R1, LSL #2 
    /*00019cb4*/ ADD         R4, R4, #65536              @ 0x10000 
    /*00019cb8*/ LDR         R6, [R4, #3108]             @ 0xc24 
    /*00019cbc*/ CMP         R6, #1 
    /*00019cc0*/ BEQ         VPSS_DRV_UpdateSpreadAttrFromUserSet_x19ccc
    /*00019cc4*/ MOV         R0, #0 
    /*00019cc8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_UpdateSpreadAttrFromUserSet_x19ccc:
    /*00019ccc*/ MOV         R2, #576                    @ 0x240 
    /*00019cd0*/ MOV         R5, R0 
    /*00019cd4*/ MUL         R0, R2, R1 
    /*00019cd8*/ MOV         R7, R1 
    /*00019cdc*/ ADD         R1, R0, #35584              @ 0x8b00 
    /*00019ce0*/ ADD         R0, R0, #73728              @ 0x12000 
    /*00019ce4*/ ADD         R1, R1, #184                @ 0xb8 
    /*00019ce8*/ ADD         R0, R0, #432                @ 0x1b0 
    /*00019cec*/ ADD         R1, R3, R1 
    /*00019cf0*/ ADD         R0, R3, R0 
    /*00019cf4*/ BL          0x0000000000019CF4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019cf8*/ MOV         R0, #23 
    /*00019cfc*/ MLA         R0, R0, R5, R7 
    /*00019d00*/ MOVW        R3, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00019d04*/ MOVT        R3, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00019d08*/ MOV         R2, #0 
    /*00019d0c*/ STR         R2, [R4, #3108]             @ 0xc24 
    /*00019d10*/ ADD         R0, R0, #20 
    /*00019d14*/ STR         R6, [R3, R0, LSL #2] 
    /*00019d18*/ MOV         R0, #0 
    /*00019d1c*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VPSS_DRV_UpdateSpreadAttrFromUserSet


FUNC_BEGIN VPSS_DRV_UpdateGdcAttrFromUserSet
    /*00019d20*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00019d24*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019d28*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019d2c*/ LSL         R5, R1, #2 
    /*00019d30*/ MOV         R6, R0 
    /*00019d34*/ MOV         R7, R1 
    /*00019d38*/ LDR         IP, [R4, R0, LSL #2] 
    /*00019d3c*/ ADD         R3, IP, R5 
    /*00019d40*/ ADD         R9, R3, #65536              @ 0x10000 
    /*00019d44*/ LDR         R8, [R9, #3072]             @ 0xc00 
    /*00019d48*/ CMP         R8, #1 
    /*00019d4c*/ BEQ         VPSS_DRV_UpdateGdcAttrFromUserSet_x19dd4
    /*00019d50*/ ADD         R9, R3, #65536              @ 0x10000 
    /*00019d54*/ LDR         R8, [R9, #3084]             @ 0xc0c 
    /*00019d58*/ CMP         R8, #1 
    /*00019d5c*/ BEQ         VPSS_DRV_UpdateGdcAttrFromUserSet_x19e30
    VPSS_DRV_UpdateGdcAttrFromUserSet_x19d60:
    /*00019d60*/ ADD         R9, R3, #65536              @ 0x10000 
    /*00019d64*/ LDR         R8, [R9, #3096]             @ 0xc18 
    /*00019d68*/ CMP         R8, #1 
    /*00019d6c*/ BEQ         VPSS_DRV_UpdateGdcAttrFromUserSet_x19e8c
    VPSS_DRV_UpdateGdcAttrFromUserSet_x19d70:
    /*00019d70*/ ADD         R5, R3, #65536              @ 0x10000 
    /*00019d74*/ LDR         R4, [R5, #3108]             @ 0xc24 
    /*00019d78*/ CMP         R4, #1 
    /*00019d7c*/ BEQ         VPSS_DRV_UpdateGdcAttrFromUserSet_x19d88
    /*00019d80*/ MOV         R0, #0 
    /*00019d84*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_DRV_UpdateGdcAttrFromUserSet_x19d88:
    /*00019d88*/ MOV         R2, #576                    @ 0x240 
    /*00019d8c*/ MUL         R0, R2, R7 
    /*00019d90*/ ADD         R1, R0, #35584              @ 0x8b00 
    /*00019d94*/ ADD         R0, R0, #73728              @ 0x12000 
    /*00019d98*/ ADD         R1, R1, #184                @ 0xb8 
    /*00019d9c*/ ADD         R0, R0, #432                @ 0x1b0 
    /*00019da0*/ ADD         R1, IP, R1 
    /*00019da4*/ ADD         R0, IP, R0 
    /*00019da8*/ BL          0x0000000000019DA8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019dac*/ MOV         R1, #23 
    /*00019db0*/ MLA         R1, R1, R6, R7 
    /*00019db4*/ MOVW        R3, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00019db8*/ MOVT        R3, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00019dbc*/ MOV         R2, #0 
    /*00019dc0*/ MOV         R0, #0 
    /*00019dc4*/ STR         R2, [R5, #3108]             @ 0xc24 
    /*00019dc8*/ ADD         R1, R1, #20 
    /*00019dcc*/ STR         R4, [R3, R1, LSL #2] 
    /*00019dd0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_DRV_UpdateGdcAttrFromUserSet_x19dd4:
    /*00019dd4*/ MOV         R2, #504                    @ 0x1f8 
    /*00019dd8*/ MUL         R0, R2, R1 
    /*00019ddc*/ ADD         R1, R0, #30208              @ 0x7600 
    /*00019de0*/ ADD         R0, R0, #68608              @ 0x10c00 
    /*00019de4*/ ADD         R1, R1, #136                @ 0x88 
    /*00019de8*/ ADD         R0, R0, #128                @ 0x80 
    /*00019dec*/ ADD         R1, IP, R1 
    /*00019df0*/ ADD         R0, IP, R0 
    /*00019df4*/ BL          0x0000000000019DF4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019df8*/ MOV         R2, #23 
    /*00019dfc*/ MLA         R2, R2, R6, R7 
    /*00019e00*/ LDR         IP, [R4, R6, LSL #2] 
    /*00019e04*/ MOVW        R1, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00019e08*/ MOV         R0, #0 
    /*00019e0c*/ ADD         R3, IP, R5 
    /*00019e10*/ MOVT        R1, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00019e14*/ ADD         R2, R2, #20 
    /*00019e18*/ STR         R0, [R9, #3072]             @ 0xc00 
    /*00019e1c*/ ADD         R9, R3, #65536              @ 0x10000 
    /*00019e20*/ STR         R8, [R1, R2, LSL #2] 
    /*00019e24*/ LDR         R8, [R9, #3084]             @ 0xc0c 
    /*00019e28*/ CMP         R8, #1 
    /*00019e2c*/ BNE         VPSS_DRV_UpdateGdcAttrFromUserSet_x19d60
    VPSS_DRV_UpdateGdcAttrFromUserSet_x19e30:
    /*00019e30*/ MOV         R2, #640                    @ 0x280 
    /*00019e34*/ MUL         R0, R2, R7 
    /*00019e38*/ ADD         R1, R0, #31744              @ 0x7c00 
    /*00019e3c*/ ADD         R0, R0, #69632              @ 0x11000 
    /*00019e40*/ ADD         R1, R1, #112                @ 0x70 
    /*00019e44*/ ADD         R0, R0, #616                @ 0x268 
    /*00019e48*/ ADD         R1, IP, R1 
    /*00019e4c*/ ADD         R0, IP, R0 
    /*00019e50*/ BL          0x0000000000019E50          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019e54*/ MOV         R2, #23 
    /*00019e58*/ MLA         R2, R2, R6, R7 
    /*00019e5c*/ LDR         IP, [R4, R6, LSL #2] 
    /*00019e60*/ MOVW        R1, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00019e64*/ MOV         R0, #0 
    /*00019e68*/ ADD         R3, IP, R5 
    /*00019e6c*/ MOVT        R1, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00019e70*/ ADD         R2, R2, #20 
    /*00019e74*/ STR         R0, [R9, #3084]             @ 0xc0c 
    /*00019e78*/ ADD         R9, R3, #65536              @ 0x10000 
    /*00019e7c*/ STR         R8, [R1, R2, LSL #2] 
    /*00019e80*/ LDR         R8, [R9, #3096]             @ 0xc18 
    /*00019e84*/ CMP         R8, #1 
    /*00019e88*/ BNE         VPSS_DRV_UpdateGdcAttrFromUserSet_x19d70
    VPSS_DRV_UpdateGdcAttrFromUserSet_x19e8c:
    /*00019e8c*/ MOV         R2, #664                    @ 0x298 
    /*00019e90*/ MUL         R0, R2, R7 
    /*00019e94*/ ADD         R1, R0, #33536              @ 0x8300 
    /*00019e98*/ ADD         R0, R0, #71680              @ 0x11800 
    /*00019e9c*/ ADD         R1, R1, #240                @ 0xf0 
    /*00019ea0*/ ADD         R0, R0, #488                @ 0x1e8 
    /*00019ea4*/ ADD         R1, IP, R1 
    /*00019ea8*/ ADD         R0, IP, R0 
    /*00019eac*/ BL          0x0000000000019EAC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019eb0*/ MOV         R2, #23 
    /*00019eb4*/ MLA         R2, R2, R6, R7 
    /*00019eb8*/ LDR         IP, [R4, R6, LSL #2] 
    /*00019ebc*/ MOVW        R1, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00019ec0*/ MOVT        R1, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00019ec4*/ MOV         R0, #0 
    /*00019ec8*/ ADD         R3, IP, R5 
    /*00019ecc*/ ADD         R2, R2, #20 
    /*00019ed0*/ STR         R0, [R9, #3096]             @ 0xc18 
    /*00019ed4*/ STR         R8, [R1, R2, LSL #2] 
    /*00019ed8*/ B           VPSS_DRV_UpdateGdcAttrFromUserSet_x19d70
FUNC_END VPSS_DRV_UpdateGdcAttrFromUserSet


FUNC_BEGIN VPSS_DRV_UpdateChnCropInfoFromUserSet
    /*00019edc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019ee0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019ee4*/ PUSH        {R4, LR} 
    /*00019ee8*/ LDR         R0, [R3, R0, LSL #2] 
    /*00019eec*/ ADD         R4, R0, R1, LSL #2 
    /*00019ef0*/ ADD         R4, R4, #65536              @ 0x10000 
    /*00019ef4*/ LDR         R3, [R4, #3120]             @ 0xc30 
    /*00019ef8*/ CMP         R3, #1 
    /*00019efc*/ BEQ         VPSS_DRV_UpdateChnCropInfoFromUserSet_x19f08
    /*00019f00*/ MOV         R0, #0 
    /*00019f04*/ POP         {R4, PC} 
    VPSS_DRV_UpdateChnCropInfoFromUserSet_x19f08:
    /*00019f08*/ MOV         R2, #24 
    /*00019f0c*/ MUL         R3, R2, R1 
    /*00019f10*/ ADD         R1, R3, #37632              @ 0x9300 
    /*00019f14*/ ADD         R3, R3, #75776              @ 0x12800 
    /*00019f18*/ ADD         R3, R3, #432                @ 0x1b0 
    /*00019f1c*/ ADD         R1, R1, #184                @ 0xb8 
    /*00019f20*/ ADD         R1, R0, R1 
    /*00019f24*/ ADD         R0, R0, R3 
    /*00019f28*/ BL          0x0000000000019F28          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019f2c*/ MOV         R3, #0 
    /*00019f30*/ MOV         R0, #0 
    /*00019f34*/ STR         R3, [R4, #3120]             @ 0xc30 
    /*00019f38*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_UpdateChnCropInfoFromUserSet


FUNC_BEGIN VPSS_DRV_UpdateExtChnAttrFromUserSet
    /*00019f3c*/ SUB         R3, R1, #3 
    /*00019f40*/ MOV         R2, #40                     @ 0x28 
    /*00019f44*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019f48*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019f4c*/ MUL         R3, R2, R3 
    /*00019f50*/ PUSH        {R4, LR} 
    /*00019f54*/ LDR         R0, [R1, R0, LSL #2] 
    /*00019f58*/ ADD         R1, R3, #37376              @ 0x9200 
    /*00019f5c*/ ADD         R3, R3, #75776              @ 0x12800 
    /*00019f60*/ ADD         R1, R1, #120                @ 0x78 
    /*00019f64*/ ADD         R3, R3, #112                @ 0x70 
    /*00019f68*/ ADD         R1, R0, R1 
    /*00019f6c*/ ADD         R0, R0, R3 
    /*00019f70*/ BL          0x0000000000019F70          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019f74*/ MOV         R0, #0 
    /*00019f78*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_UpdateExtChnAttrFromUserSet


FUNC_BEGIN VPSS_DRV_UpdateExtChnFishEyeAttrFromUserSet
    /*00019f7c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019f80*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019f84*/ PUSH        {R4, LR} 
    /*00019f88*/ SUB         IP, R1, #3 
    /*00019f8c*/ LDR         R0, [R3, R0, LSL #2] 
    /*00019f90*/ ADD         R1, R0, R1, LSL #2 
    /*00019f94*/ ADD         R4, R1, #65536              @ 0x10000 
    /*00019f98*/ LDR         R3, [R4, #3152]             @ 0xc50 
    /*00019f9c*/ CMP         R3, #1 
    /*00019fa0*/ BEQ         VPSS_DRV_UpdateExtChnFishEyeAttrFromUserSet_x19fac
    /*00019fa4*/ MOV         R0, #0 
    /*00019fa8*/ POP         {R4, PC} 
    VPSS_DRV_UpdateExtChnFishEyeAttrFromUserSet_x19fac:
    /*00019fac*/ MOVW        R2, #3816                   @ 0xee8 
    /*00019fb0*/ MUL         IP, R2, IP 
    /*00019fb4*/ ADD         R1, IP, #37888              @ 0x9400 
    /*00019fb8*/ ADD         IP, IP, #75776              @ 0x12800 
    /*00019fbc*/ ADD         IP, IP, #696                @ 0x2b8 
    /*00019fc0*/ ADD         R1, R1, #192                @ 0xc0 
    /*00019fc4*/ ADD         R1, R0, R1 
    /*00019fc8*/ ADD         R0, R0, IP 
    /*00019fcc*/ BL          0x0000000000019FCC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019fd0*/ MOV         R3, #0 
    /*00019fd4*/ MOV         R0, #0 
    /*00019fd8*/ STR         R3, [R4, #3152]             @ 0xc50 
    /*00019fdc*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_UpdateExtChnFishEyeAttrFromUserSet


FUNC_BEGIN VPSS_DRV_CheckExtChnFishEyeAttr
    /*00019fe0*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00019fe4*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00019fe8*/ ADD         R3, R1, #3840               @ 0xf00 
    /*00019fec*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00019ff0*/ ADD         R3, R3, #6 
    /*00019ff4*/ LDR         IP, [IP, R0, LSL #2] 
    /*00019ff8*/ SUB         SP, SP, #60                 @ 0x3c 
    /*00019ffc*/ ADD         R3, IP, R3, LSL #2 
    /*0001a000*/ LDR         R3, [R3, #4] 
    /*0001a004*/ CMP         R3, #0 
    /*0001a008*/ BEQ         VPSS_DRV_CheckExtChnFishEyeAttr_x1a0d8
    /*0001a00c*/ SUB         R1, R1, #3 
    /*0001a010*/ MOV         R0, #40                     @ 0x28 
    /*0001a014*/ MOVW        R3, #37496                  @ 0x9278 
    /*0001a018*/ MOV         R5, #24 
    /*0001a01c*/ MLA         R1, R0, R1, IP 
    /*0001a020*/ ADD         R4, R2, #3584               @ 0xe00 
    /*0001a024*/ MOVW        R2, #37500                  @ 0x927c 
    /*0001a028*/ MOV         R0, #72                     @ 0x48 
    /*0001a02c*/ MOVW        R7, #15512                  @ 0x3c98 
    /*0001a030*/ MOVW        R6, #15516                  @ 0x3c9c 
    /*0001a034*/ ADD         R4, R4, #4 
    /*0001a038*/ LDR         R3, [R1, R3] 
    /*0001a03c*/ LDR         LR, [R1, R2] 
    /*0001a040*/ MLA         R2, R5, R3, IP 
    /*0001a044*/ STR         LR, [SP, #36]               @ 0x24 
    /*0001a048*/ MLA         R3, R0, R3, IP 
    /*0001a04c*/ MOVW        R0, #37512                  @ 0x9288 
    /*0001a050*/ LDR         LR, [R1, R0] 
    /*0001a054*/ MOVW        IP, #37504                  @ 0x9280 
    /*0001a058*/ MOVW        R0, #37520                  @ 0x9290 
    /*0001a05c*/ LDR         R5, [R1, IP] 
    /*0001a060*/ LDR         R7, [R2, R7] 
    /*0001a064*/ LDR         R6, [R2, R6] 
    /*0001a068*/ MOVW        R2, #37516                  @ 0x928c 
    /*0001a06c*/ LDR         IP, [R1, R0] 
    /*0001a070*/ MOV         R0, #37                     @ 0x25 
    /*0001a074*/ LDR         R2, [R1, R2] 
    /*0001a078*/ LDR         R1, [R3, #60]               @ 0x3c 
    /*0001a07c*/ LDR         R3, [R3, #68]               @ 0x44 
    /*0001a080*/ STR         R7, [SP, #16] 
    /*0001a084*/ STR         R6, [SP, #20] 
    /*0001a088*/ STR         R1, [SP, #24] 
    /*0001a08c*/ STR         R3, [SP, #28] 
    /*0001a090*/ STR         R5, [SP, #40]               @ 0x28 
    /*0001a094*/ STR         LR, [SP, #44]               @ 0x2c 
    /*0001a098*/ STR         IP, [SP, #48]               @ 0x30 
    /*0001a09c*/ STR         R2, [SP, #52]               @ 0x34 
    /*0001a0a0*/ BL          0x000000000001A0A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a0a4*/ CMP         R0, #0 
    /*0001a0a8*/ BEQ         VPSS_DRV_CheckExtChnFishEyeAttr_x1a10c
    /*0001a0ac*/ LDR         R3, [R0, #36]               @ 0x24 
    /*0001a0b0*/ CMP         R3, #0 
    /*0001a0b4*/ BEQ         VPSS_DRV_CheckExtChnFishEyeAttr_x1a10c
    /*0001a0b8*/ MOV         R2, R4 
    /*0001a0bc*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001a0c0*/ ADD         R0, SP, #16 
    /*0001a0c4*/ BLX         R3 
    /*0001a0c8*/ CMP         R0, #0 
    /*0001a0cc*/ BNE         VPSS_DRV_CheckExtChnFishEyeAttr_x1a138
    VPSS_DRV_CheckExtChnFishEyeAttr_x1a0d0:
    /*0001a0d0*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0001a0d4*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_DRV_CheckExtChnFishEyeAttr_x1a0d8:
    /*0001a0d8*/ STR         R1, [SP, #8] 
    /*0001a0dc*/ MOVW        R3, #1628                   @ 0x65c 
    /*0001a0e0*/ STR         R0, [SP, #4] 
    /*0001a0e4*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c40] 
    /*0001a0e8*/ STR         R3, [SP] 
    /*0001a0ec*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c40] 
    /*0001a0f0*/ LDR         R3, [PC, #84]               @ 0x000000000001a14c 
    /*0001a0f4*/ MOV         R1, #7 
    /*0001a0f8*/ MOV         R0, #3 
    /*0001a0fc*/ BL          0x000000000001A0FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a100*/ MOVW        R0, #32777                  @ 0x8009 
    /*0001a104*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001a108*/ B           VPSS_DRV_CheckExtChnFishEyeAttr_x1a0d0
    VPSS_DRV_CheckExtChnFishEyeAttr_x1a10c:
    /*0001a10c*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c84] 
    /*0001a110*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c84] 
    /*0001a114*/ MOVW        R3, #1654                   @ 0x676 
    /*0001a118*/ STR         R3, [SP] 
    VPSS_DRV_CheckExtChnFishEyeAttr_x1a11c:
    /*0001a11c*/ LDR         R3, [PC, #40]               @ 0x000000000001a14c 
    /*0001a120*/ MOV         R1, #7 
    /*0001a124*/ MOV         R0, #3 
    /*0001a128*/ BL          0x000000000001A128          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a12c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001a130*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001a134*/ B           VPSS_DRV_CheckExtChnFishEyeAttr_x1a0d0
    VPSS_DRV_CheckExtChnFishEyeAttr_x1a138:
    /*0001a138*/ MOVW        R3, #1662                   @ 0x67e 
    /*0001a13c*/ MOVW        R2, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5cc8] 
    /*0001a140*/ STR         R3, [SP] 
    /*0001a144*/ MOVT        R2, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5cc8] 
    /*0001a148*/ B           VPSS_DRV_CheckExtChnFishEyeAttr_x1a11c
    /*0001a14c*/ ANDEQ       R0, R0, R8, LSR #30 
FUNC_END VPSS_DRV_CheckExtChnFishEyeAttr


FUNC_BEGIN VPSS_DRV_SetExtChnFisheyeAttr
    /*0001a150*/ PUSH        {R4, R5, R6, LR} 
    /*0001a154*/ SUB         R5, R1, #3 
    /*0001a158*/ MOVW        R4, #3816                   @ 0xee8 
    /*0001a15c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001a160*/ MUL         R4, R4, R5 
    /*0001a164*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001a168*/ MOV         R1, R2 
    /*0001a16c*/ MOV         R2, #3808                   @ 0xee0 
    /*0001a170*/ LDR         R6, [R3, R0, LSL #2] 
    /*0001a174*/ ADD         R0, R4, #37888              @ 0x9400 
    /*0001a178*/ ADD         R0, R0, #200                @ 0xc8 
    /*0001a17c*/ ADD         R4, R6, R4 
    /*0001a180*/ ADD         R0, R6, R0 
    /*0001a184*/ BL          0x000000000001A184          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001a188*/ ADD         R1, R5, #17152              @ 0x4300 
    /*0001a18c*/ ADD         R1, R1, #22 
    /*0001a190*/ MOVW        R2, #38080                  @ 0x94c0 
    /*0001a194*/ MOV         R3, #1 
    /*0001a198*/ MOV         R0, #0 
    /*0001a19c*/ ADD         R1, R6, R1, LSL #2 
    /*0001a1a0*/ STR         R3, [R4, R2] 
    /*0001a1a4*/ STR         R3, [R1, #4] 
    /*0001a1a8*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_SetExtChnFisheyeAttr


FUNC_BEGIN VPSS_DRV_GetExtChnFisheyeAttr
    /*0001a1ac*/ PUSH        {R4, LR} 
    /*0001a1b0*/ SUB         LR, R1, #3 
    /*0001a1b4*/ MOVW        R3, #3816                   @ 0xee8 
    /*0001a1b8*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001a1bc*/ MUL         R3, R3, LR 
    /*0001a1c0*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001a1c4*/ MOVW        LR, #38080                  @ 0x94c0 
    /*0001a1c8*/ SUB         SP, SP, #16 
    /*0001a1cc*/ LDR         IP, [IP, R0, LSL #2] 
    /*0001a1d0*/ ADD         R4, IP, R3 
    /*0001a1d4*/ LDR         LR, [R4, LR] 
    /*0001a1d8*/ CMP         LR, #1 
    /*0001a1dc*/ BNE         VPSS_DRV_GetExtChnFisheyeAttr_x1a204
    /*0001a1e0*/ ADD         R3, R3, #41472              @ 0xa200 
    /*0001a1e4*/ MOV         R0, R2 
    /*0001a1e8*/ ADD         R3, R3, #204                @ 0xcc 
    /*0001a1ec*/ MOV         R2, #216                    @ 0xd8 
    /*0001a1f0*/ ADD         R1, IP, R3 
    /*0001a1f4*/ BL          0x000000000001A1F4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001a1f8*/ MOV         R0, #0 
    VPSS_DRV_GetExtChnFisheyeAttr_x1a1fc:
    /*0001a1fc*/ ADD         SP, SP, #16 
    /*0001a200*/ POP         {R4, PC} 
    VPSS_DRV_GetExtChnFisheyeAttr_x1a204:
    /*0001a204*/ STR         R1, [SP, #8] 
    /*0001a208*/ MOV         R3, #1696                   @ 0x6a0 
    /*0001a20c*/ STR         R0, [SP, #4] 
    /*0001a210*/ MOVW        R2, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d0c] 
    /*0001a214*/ STR         R3, [SP] 
    /*0001a218*/ MOVT        R2, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d0c] 
    /*0001a21c*/ LDR         R3, [PC, #20]               @ 0x000000000001a238 
    /*0001a220*/ MOV         R1, #7 
    /*0001a224*/ MOV         R0, #3 
    /*0001a228*/ BL          0x000000000001A228          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a22c*/ MOVW        R0, #32777                  @ 0x8009 
    /*0001a230*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001a234*/ B           VPSS_DRV_GetExtChnFisheyeAttr_x1a1fc
    /*0001a238*/ ANDEQ       R0, R0, R8, ASR #30 
FUNC_END VPSS_DRV_GetExtChnFisheyeAttr


FUNC_BEGIN VPSS_DRV_NeedDoExtChnFisheye
    /*0001a23c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001a240*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001a244*/ SUB         R1, R1, #3 
    /*0001a248*/ MOVW        R2, #3816                   @ 0xee8 
    /*0001a24c*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001a250*/ MLA         R1, R2, R1, R3 
    /*0001a254*/ ADD         R3, R1, #75776              @ 0x12800 
    /*0001a258*/ LDR         R3, [R3, #696]              @ 0x2b8 
    /*0001a25c*/ CMP         R3, #1 
    /*0001a260*/ ADDEQ       R1, R1, #79872              @ 0x13800 
    /*0001a264*/ LDREQ       R0, [R1, #196]              @ 0xc4 
    /*0001a268*/ MOVNE       R0, #0 
    /*0001a26c*/ BX          LR 
FUNC_END VPSS_DRV_NeedDoExtChnFisheye


FUNC_BEGIN VPSS_DRV_IsExtChnFisheyeEnable
    /*0001a270*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001a274*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001a278*/ SUB         R1, R1, #3 
    /*0001a27c*/ MOVW        IP, #3816                   @ 0xee8 
    /*0001a280*/ LDR         R2, [R3, R0, LSL #2] 
    /*0001a284*/ MOVW        R3, #38080                  @ 0x94c0 
    /*0001a288*/ MLA         R1, IP, R1, R2 
    /*0001a28c*/ LDR         R3, [R1, R3] 
    /*0001a290*/ CMP         R3, #1 
    /*0001a294*/ MOVWEQ      R3, #41676                  @ 0xa2cc 
    /*0001a298*/ LDREQ       R0, [R1, R3] 
    /*0001a29c*/ MOVNE       R0, #0 
    /*0001a2a0*/ BX          LR 
FUNC_END VPSS_DRV_IsExtChnFisheyeEnable


FUNC_BEGIN VPSS_DRV_GetExtChnFisheyeWorkingAttr
    /*0001a2a4*/ SUB         IP, R1, #3 
    /*0001a2a8*/ MOVW        R1, #3816                   @ 0xee8 
    /*0001a2ac*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001a2b0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001a2b4*/ MUL         R1, R1, IP 
    /*0001a2b8*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001a2bc*/ MOV         R0, #0 
    /*0001a2c0*/ ADD         R1, R1, #75776              @ 0x12800 
    /*0001a2c4*/ ADD         R1, R1, #704                @ 0x2c0 
    /*0001a2c8*/ ADD         R1, R3, R1 
    /*0001a2cc*/ STR         R1, [R2] 
    /*0001a2d0*/ BX          LR 
FUNC_END VPSS_DRV_GetExtChnFisheyeWorkingAttr


FUNC_BEGIN VPSS_DRV_CheckFisheyeConfig
    /*0001a2d4*/ MOV         R0, #0 
    /*0001a2d8*/ BX          LR 
FUNC_END VPSS_DRV_CheckFisheyeConfig


FUNC_BEGIN VPSS_DRV_SetFisheyeConfig
    /*0001a2dc*/ MOV         R0, #0 
    /*0001a2e0*/ BX          LR 
FUNC_END VPSS_DRV_SetFisheyeConfig


FUNC_BEGIN VPSS_DRV_GetFisheyeConfig
    /*0001a2e4*/ MOV         R0, #0 
    /*0001a2e8*/ BX          LR 
FUNC_END VPSS_DRV_GetFisheyeConfig


FUNC_BEGIN VPSS_DRV_GetFisheyeWorkingConfig
    /*0001a2ec*/ MOV         R0, #0 
    /*0001a2f0*/ BX          LR 
FUNC_END VPSS_DRV_GetFisheyeWorkingConfig


FUNC_BEGIN VPSS_DRV_CheckExtFisheyeCapacity
    /*0001a2f4*/ PUSH        {R4, R5, R6, LR} 
    /*0001a2f8*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001a2fc*/ LDR         LR, [R2, #12] 
    /*0001a300*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001a304*/ SUB         SP, SP, #32 
    /*0001a308*/ MOV         R4, R0 
    /*0001a30c*/ CMP         LR, #26 
    /*0001a310*/ CMPNE       LR, #39                     @ 0x27 
    /*0001a314*/ MOV         R5, R1 
    /*0001a318*/ LDR         R6, [IP, R0, LSL #2] 
    /*0001a31c*/ BNE         VPSS_DRV_CheckExtFisheyeCapacity_x1a524
    /*0001a320*/ CMP         LR, #26 
    /*0001a324*/ SUB         R3, R1, #3 
    /*0001a328*/ BEQ         VPSS_DRV_CheckExtFisheyeCapacity_x1a3b4
    /*0001a32c*/ CMP         LR, #39                     @ 0x27 
    /*0001a330*/ BEQ         VPSS_DRV_CheckExtFisheyeCapacity_x1a3e8
    VPSS_DRV_CheckExtFisheyeCapacity_x1a334:
    /*0001a334*/ LDR         R1, [R2, #20] 
    /*0001a338*/ CMP         R1, #0 
    /*0001a33c*/ BNE         VPSS_DRV_CheckExtFisheyeCapacity_x1a540
    /*0001a340*/ LDR         R1, [R2] 
    /*0001a344*/ LDR         R0, [R2, #4] 
    /*0001a348*/ CMP         R1, #1920                   @ 0x780 
    /*0001a34c*/ BCC         VPSS_DRV_CheckExtFisheyeCapacity_x1a430
    /*0001a350*/ MOVW        R2, #1079                   @ 0x437 
    /*0001a354*/ CMP         R0, R2 
    /*0001a358*/ BLS         VPSS_DRV_CheckExtFisheyeCapacity_x1a430
    /*0001a35c*/ LDR         R2, [IP, #64]               @ 0x40 
    /*0001a360*/ LDR         IP, [IP, #68]               @ 0x44 
    /*0001a364*/ CMP         R1, R2 
    /*0001a368*/ BHI         VPSS_DRV_CheckExtFisheyeCapacity_x1a478
    /*0001a36c*/ CMP         R0, IP 
    /*0001a370*/ BHI         VPSS_DRV_CheckExtFisheyeCapacity_x1a478
    /*0001a374*/ MOV         R2, #40                     @ 0x28 
    /*0001a378*/ MLA         R3, R2, R3, R6 
    /*0001a37c*/ ADD         R3, R3, #75776              @ 0x12800 
    /*0001a380*/ LDR         R2, [R3, #116]              @ 0x74 
    /*0001a384*/ LDR         R3, [R3, #120]              @ 0x78 
    /*0001a388*/ CMP         R2, #4608                   @ 0x1200 
    /*0001a38c*/ BHI         VPSS_DRV_CheckExtFisheyeCapacity_x1a4b4
    /*0001a390*/ CMP         R3, #4608                   @ 0x1200 
    /*0001a394*/ BHI         VPSS_DRV_CheckExtFisheyeCapacity_x1a4b4
    /*0001a398*/ CMP         R3, #360                    @ 0x168 
    /*0001a39c*/ CMPCS       R2, #640                    @ 0x280 
    /*0001a3a0*/ MOVCC       R0, #1 
    /*0001a3a4*/ MOVCS       R0, #0 
    /*0001a3a8*/ BCC         VPSS_DRV_CheckExtFisheyeCapacity_x1a4f8
    VPSS_DRV_CheckExtFisheyeCapacity_x1a3ac:
    /*0001a3ac*/ ADD         SP, SP, #32 
    /*0001a3b0*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_CheckExtFisheyeCapacity_x1a3b4:
    /*0001a3b4*/ MOV         R1, #40                     @ 0x28 
    /*0001a3b8*/ MLA         R1, R1, R3, R6 
    /*0001a3bc*/ ADD         R1, R1, #75776              @ 0x12800 
    /*0001a3c0*/ LDR         R1, [R1, #128]              @ 0x80 
    /*0001a3c4*/ CMP         R1, #25 
    /*0001a3c8*/ BNE         VPSS_DRV_CheckExtFisheyeCapacity_x1a334
    /*0001a3cc*/ MOVW        R3, #1787                   @ 0x6fb 
    /*0001a3d0*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5df8] 
    /*0001a3d4*/ STR         R5, [SP, #8] 
    /*0001a3d8*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5df8] 
    /*0001a3dc*/ STR         R0, [SP, #4] 
    /*0001a3e0*/ STR         R3, [SP] 
    /*0001a3e4*/ B           VPSS_DRV_CheckExtFisheyeCapacity_x1a418
    VPSS_DRV_CheckExtFisheyeCapacity_x1a3e8:
    /*0001a3e8*/ MOV         R1, #40                     @ 0x28 
    /*0001a3ec*/ MLA         R1, R1, R3, R6 
    /*0001a3f0*/ ADD         R1, R1, #75776              @ 0x12800 
    /*0001a3f4*/ LDR         R1, [R1, #128]              @ 0x80 
    /*0001a3f8*/ CMP         R1, #39                     @ 0x27 
    /*0001a3fc*/ BEQ         VPSS_DRV_CheckExtFisheyeCapacity_x1a334
    /*0001a400*/ MOVW        R2, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e84] 
    /*0001a404*/ MOVT        R2, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e84] 
    /*0001a408*/ MOVW        R3, #1795                   @ 0x703 
    /*0001a40c*/ STR         R5, [SP, #8] 
    /*0001a410*/ STR         R0, [SP, #4] 
    /*0001a414*/ STR         R3, [SP] 
    VPSS_DRV_CheckExtFisheyeCapacity_x1a418:
    /*0001a418*/ LDR         R3, [PC, #316]              @ 0x000000000001a55c 
    /*0001a41c*/ MOV         R1, #7 
    /*0001a420*/ MOV         R0, #3 
    /*0001a424*/ BL          0x000000000001A424          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a428*/ MVN         R0, #0 
    /*0001a42c*/ B           VPSS_DRV_CheckExtFisheyeCapacity_x1a3ac
    VPSS_DRV_CheckExtFisheyeCapacity_x1a430:
    /*0001a430*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f80] 
    /*0001a434*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f80] 
    /*0001a438*/ STR         R1, [SP, #12] 
    /*0001a43c*/ MOVW        R3, #1812                   @ 0x714 
    /*0001a440*/ MOV         R1, #1920                   @ 0x780 
    /*0001a444*/ STR         R0, [SP, #16] 
    /*0001a448*/ STR         R5, [SP, #8] 
    /*0001a44c*/ MOVW        R0, #1080                   @ 0x438 
    /*0001a450*/ STR         R4, [SP, #4] 
    /*0001a454*/ STR         R0, [SP, #24] 
    VPSS_DRV_CheckExtFisheyeCapacity_x1a458:
    /*0001a458*/ STR         R1, [SP, #20] 
    /*0001a45c*/ MOV         R0, #3 
    /*0001a460*/ STR         R3, [SP] 
    /*0001a464*/ MOV         R1, #7 
    /*0001a468*/ LDR         R3, [PC, #236]              @ 0x000000000001a55c 
    /*0001a46c*/ BL          0x000000000001A46C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a470*/ MVN         R0, #0 
    /*0001a474*/ B           VPSS_DRV_CheckExtFisheyeCapacity_x1a3ac
    VPSS_DRV_CheckExtFisheyeCapacity_x1a478:
    /*0001a478*/ MOVW        R3, #1821                   @ 0x71d 
    /*0001a47c*/ STR         R2, [SP, #20] 
    /*0001a480*/ STR         R0, [SP, #16] 
    /*0001a484*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ff0] 
    /*0001a488*/ STR         R1, [SP, #12] 
    /*0001a48c*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ff0] 
    /*0001a490*/ STM         SP, {R3, R4} 
    /*0001a494*/ MOV         R1, #7 
    /*0001a498*/ STR         IP, [SP, #24] 
    /*0001a49c*/ MOV         R0, #3 
    /*0001a4a0*/ STR         R5, [SP, #8] 
    /*0001a4a4*/ LDR         R3, [PC, #176]              @ 0x000000000001a55c 
    /*0001a4a8*/ BL          0x000000000001A4A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a4ac*/ MVN         R0, #0 
    /*0001a4b0*/ B           VPSS_DRV_CheckExtFisheyeCapacity_x1a3ac
    VPSS_DRV_CheckExtFisheyeCapacity_x1a4b4:
    /*0001a4b4*/ STR         R3, [SP, #16] 
    /*0001a4b8*/ MOVW        IP, #1830                   @ 0x726 
    /*0001a4bc*/ MOV         R3, #4608                   @ 0x1200 
    /*0001a4c0*/ STR         R2, [SP, #12] 
    /*0001a4c4*/ STR         R3, [SP, #24] 
    /*0001a4c8*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x605c] 
    /*0001a4cc*/ STR         R3, [SP, #20] 
    /*0001a4d0*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x605c] 
    /*0001a4d4*/ STR         R5, [SP, #8] 
    /*0001a4d8*/ MOV         R1, #7 
    /*0001a4dc*/ STR         R4, [SP, #4] 
    /*0001a4e0*/ MOV         R0, #3 
    /*0001a4e4*/ STR         IP, [SP] 
    /*0001a4e8*/ LDR         R3, [PC, #108]              @ 0x000000000001a55c 
    /*0001a4ec*/ BL          0x000000000001A4EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a4f0*/ MVN         R0, #0 
    /*0001a4f4*/ B           VPSS_DRV_CheckExtFisheyeCapacity_x1a3ac
    VPSS_DRV_CheckExtFisheyeCapacity_x1a4f8:
    /*0001a4f8*/ STR         R3, [SP, #16] 
    /*0001a4fc*/ MOV         R0, #360                    @ 0x168 
    /*0001a500*/ STR         R2, [SP, #12] 
    /*0001a504*/ MOV         R1, #640                    @ 0x280 
    /*0001a508*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60c8] 
    /*0001a50c*/ STR         R5, [SP, #8] 
    /*0001a510*/ MOVW        R3, #1839                   @ 0x72f 
    /*0001a514*/ STR         R4, [SP, #4] 
    /*0001a518*/ STR         R0, [SP, #24] 
    /*0001a51c*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60c8] 
    /*0001a520*/ B           VPSS_DRV_CheckExtFisheyeCapacity_x1a458
    VPSS_DRV_CheckExtFisheyeCapacity_x1a524:
    /*0001a524*/ MOVW        R3, #1779                   @ 0x6f3 
    /*0001a528*/ MOVW        R2, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d7c] 
    /*0001a52c*/ STR         R1, [SP, #8] 
    /*0001a530*/ MOVT        R2, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d7c] 
    /*0001a534*/ STR         R0, [SP, #4] 
    /*0001a538*/ STR         R3, [SP] 
    /*0001a53c*/ B           VPSS_DRV_CheckExtFisheyeCapacity_x1a418
    VPSS_DRV_CheckExtFisheyeCapacity_x1a540:
    /*0001a540*/ MOVW        R3, #1802                   @ 0x70a 
    /*0001a544*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f1c] 
    /*0001a548*/ STR         R5, [SP, #8] 
    /*0001a54c*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f1c] 
    /*0001a550*/ STR         R4, [SP, #4] 
    /*0001a554*/ STR         R3, [SP] 
    /*0001a558*/ B           VPSS_DRV_CheckExtFisheyeCapacity_x1a418
    /*0001a55c*/ ANDEQ       R0, R0, R8, ROR #30 
FUNC_END VPSS_DRV_CheckExtFisheyeCapacity


FUNC_BEGIN VPSS_DRV_GetLumaAttr
    /*0001a560*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001a564*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001a568*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001a56c*/ ADD         R3, R3, #16896              @ 0x4200 
    /*0001a570*/ ADD         R3, R3, #196                @ 0xc4 
    /*0001a574*/ STR         R3, [R1] 
    /*0001a578*/ BX          LR 
FUNC_END VPSS_DRV_GetLumaAttr


FUNC_BEGIN VPSS_DRV_GetGrpCrop
    /*0001a57c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001a580*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001a584*/ PUSH        {R4, LR} 
    /*0001a588*/ MOV         R2, #24 
    /*0001a58c*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001a590*/ MOV         R0, R1 
    /*0001a594*/ ADD         R1, R3, #15424              @ 0x3c40 
    /*0001a598*/ ADD         R1, R1, #8 
    /*0001a59c*/ BL          0x000000000001A59C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001a5a0*/ MOV         R0, #0 
    /*0001a5a4*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_GetGrpCrop


FUNC_BEGIN VPSS_DRV_GetSplitNum
    /*0001a5a8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001a5ac*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001a5b0*/ PUSH        {R4, LR} 
    /*0001a5b4*/ LDR         R4, [R3, R0, LSL #2] 
    /*0001a5b8*/ BL          0x000000000001A5B8          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0001a5bc*/ CMP         R0, #1 
    /*0001a5c0*/ POPEQ       {R4, PC} 
    /*0001a5c4*/ LDR         R3, [R4, #4] 
    /*0001a5c8*/ CMP         R3, #2048                   @ 0x800 
    /*0001a5cc*/ BLS         VPSS_DRV_GetSplitNum_x1a5e0
    /*0001a5d0*/ CMP         R3, #3840                   @ 0xf00 
    /*0001a5d4*/ MOVLS       R0, #2 
    /*0001a5d8*/ MOVHI       R0, #3 
    /*0001a5dc*/ POP         {R4, PC} 
    VPSS_DRV_GetSplitNum_x1a5e0:
    /*0001a5e0*/ MOV         R0, #1 
    /*0001a5e4*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_GetSplitNum


FUNC_BEGIN VPSS_DRV_3DnrBufferMultiplexing
    /*0001a5e8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001a5ec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001a5f0*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001a5f4*/ LDR         R2, [R3, #40]               @ 0x28 
    /*0001a5f8*/ CMP         R2, #0 
    /*0001a5fc*/ BEQ         VPSS_DRV_3DnrBufferMultiplexing_x1a614
    /*0001a600*/ LDR         R3, [R3, #36]               @ 0x24 
    /*0001a604*/ CMP         R3, #0 
    /*0001a608*/ MOVNE       R0, #1 
    /*0001a60c*/ MOVEQ       R0, #2 
    /*0001a610*/ BX          LR 
    VPSS_DRV_3DnrBufferMultiplexing_x1a614:
    /*0001a614*/ MOV         R0, #1 
    /*0001a618*/ BX          LR 
FUNC_END VPSS_DRV_3DnrBufferMultiplexing


FUNC_BEGIN VPSS_DRV_3DnrMadBufferSize
    /*0001a61c*/ ADD         R0, R0, #3 
    /*0001a620*/ ADD         R1, R1, #3 
    /*0001a624*/ LSR         R0, R0, #4 
    /*0001a628*/ LSR         R1, R1, #2 
    /*0001a62c*/ ADD         R0, R0, #15 
    /*0001a630*/ BIC         R0, R0, #15 
    /*0001a634*/ MUL         R0, R1, R0 
    /*0001a638*/ BX          LR 
FUNC_END VPSS_DRV_3DnrMadBufferSize


FUNC_BEGIN VPSS_DRV_3DnrVbSize
    /*0001a63c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001a640*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0001a644*/ STR         R0, [SP, #4] 
    /*0001a648*/ MOV         R0, #2 
    /*0001a64c*/ STR         R2, [SP, #24] 
    /*0001a650*/ MOV         R2, #0 
    /*0001a654*/ STR         R3, [SP] 
    /*0001a658*/ MOV         R3, #1 
    /*0001a65c*/ STR         R1, [SP, #8] 
    /*0001a660*/ STR         R2, [SP, #20] 
    /*0001a664*/ STR         R2, [SP, #28] 
    /*0001a668*/ STR         R2, [SP, #16] 
    /*0001a66c*/ STR         R2, [SP, #12] 
    /*0001a670*/ STR         R3, [SP, #32] 
    /*0001a674*/ BL          0x000000000001A674          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a678*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001a67c*/ LDR         R3, [R0, #120]              @ 0x78 
    /*0001a680*/ MOV         R0, SP 
    /*0001a684*/ BLX         R3 
    /*0001a688*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001a68c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0001a690*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VPSS_DRV_3DnrVbSize


FUNC_BEGIN VPSS_DRV_CalNrBufferSize
    /*0001a694*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001a698*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001a69c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001a6a0*/ SUB         SP, SP, #12 
    /*0001a6a4*/ LDR         R9, [R3, R0, LSL #2] 
    /*0001a6a8*/ BL          0x000000000001A6A8          @ VPSS_DRV_GetSplitNum [R_ARM_CALL: .text+0x1a5a8] 
    /*0001a6ac*/ ADD         SL, R9, #12288              @ 0x3000 
    /*0001a6b0*/ LDR         R2, [SL, #3048]             @ 0xbe8 
    /*0001a6b4*/ LDR         R3, [SL, #3180]             @ 0xc6c 
    /*0001a6b8*/ CMP         R2, #1 
    /*0001a6bc*/ MOVNE       R8, #0 
    /*0001a6c0*/ MOVEQ       R8, #64                     @ 0x40 
    /*0001a6c4*/ ADD         R8, R8, R3 
    /*0001a6c8*/ SUBS        R7, R0, #0 
    /*0001a6cc*/ BEQ         VPSS_DRV_CalNrBufferSize_x1a75c
    /*0001a6d0*/ ADD         R2, R9, #16384              @ 0x4000 
    /*0001a6d4*/ ADD         R6, R9, #15296              @ 0x3bc0 
    /*0001a6d8*/ LDR         FP, [R9, #36]               @ 0x24 
    /*0001a6dc*/ ADD         R3, R8, #3 
    /*0001a6e0*/ LDR         R2, [R2, #2724]             @ 0xaa4 
    /*0001a6e4*/ ADD         R6, R6, #16 
    /*0001a6e8*/ STR         SL, [SP, #4] 
    /*0001a6ec*/ MOV         R5, #0 
    /*0001a6f0*/ LSR         R3, R3, #2 
    /*0001a6f4*/ STR         R3, [SP] 
    /*0001a6f8*/ MOV         SL, R2 
    VPSS_DRV_CalNrBufferSize_x1a6fc:
    /*0001a6fc*/ MOVW        R2, #27700                  @ 0x6c34 
    /*0001a700*/ MOV         R3, #856                    @ 0x358 
    /*0001a704*/ MLA         R3, R3, R5, R2 
    /*0001a708*/ CMP         R7, #1 
    /*0001a70c*/ MOV         R2, FP 
    /*0001a710*/ MOV         R1, R8 
    /*0001a714*/ LDREQ       R3, [SP, #4] 
    /*0001a718*/ ADD         R5, R5, #1 
    /*0001a71c*/ LDREQ       R4, [R3, #3176]             @ 0xc68 
    /*0001a720*/ LDRNE       R4, [R9, R3] 
    /*0001a724*/ MOV         R3, SL 
    /*0001a728*/ MOV         R0, R4 
    /*0001a72c*/ BL          0x000000000001A72C          @ VPSS_DRV_3DnrVbSize [R_ARM_CALL: .text+0x1a63c] 
    /*0001a730*/ ADD         R3, R4, #3 
    /*0001a734*/ LDR         R2, [SP] 
    /*0001a738*/ CMP         R5, R7 
    /*0001a73c*/ LSR         R3, R3, #4 
    /*0001a740*/ ADD         R3, R3, #15 
    /*0001a744*/ BIC         R3, R3, #15 
    /*0001a748*/ MUL         R3, R2, R3 
    /*0001a74c*/ STR         R3, [R6, #12] 
    /*0001a750*/ ADD         R0, R0, R3, LSL #1 
    /*0001a754*/ STR         R0, [R6], #4 
    /*0001a758*/ BNE         VPSS_DRV_CalNrBufferSize_x1a6fc
    VPSS_DRV_CalNrBufferSize_x1a75c:
    /*0001a75c*/ ADD         SP, SP, #12 
    /*0001a760*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VPSS_DRV_CalNrBufferSize


FUNC_BEGIN VPSS_DRV_CalNrBufferCfg
    /*0001a764*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001a768*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001a76c*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001a770*/ CMP         R2, #0 
    /*0001a774*/ SUB         SP, SP, #164                @ 0xa4 
    /*0001a778*/ MOV         R7, R0 
    /*0001a77c*/ LDR         R4, [R5, R0, LSL #2] 
    /*0001a780*/ MOV         R6, R1 
    /*0001a784*/ LDRNE       R3, [R2, #4] 
    /*0001a788*/ ADDEQ       R8, R4, #12288              @ 0x3000 
    /*0001a78c*/ ADDNE       R8, R4, #12288              @ 0x3000 
    /*0001a790*/ LDR         R2, [R4, #36]               @ 0x24 
    /*0001a794*/ LDREQ       R3, [R8, #3176]             @ 0xc68 
    /*0001a798*/ LDR         R0, [R8, #3048]             @ 0xbe8 
    /*0001a79c*/ STRNE       R3, [SP, #8] 
    /*0001a7a0*/ STREQ       R3, [SP, #8] 
    /*0001a7a4*/ ADD         R3, R4, #16384              @ 0x4000 
    /*0001a7a8*/ CMP         R0, #1 
    /*0001a7ac*/ LDR         R0, [SP, #8] 
    /*0001a7b0*/ LDR         R1, [R3, #2724]             @ 0xaa4 
    /*0001a7b4*/ LDR         R3, [R8, #3180]             @ 0xc6c 
    /*0001a7b8*/ MOVNE       IP, #0 
    /*0001a7bc*/ STR         R0, [SP, #92]               @ 0x5c 
    /*0001a7c0*/ MOV         R0, #2 
    /*0001a7c4*/ MOVEQ       IP, #64                     @ 0x40 
    /*0001a7c8*/ STR         R1, [SP, #88]               @ 0x58 
    /*0001a7cc*/ ADD         R3, R3, IP 
    /*0001a7d0*/ STR         R2, [SP, #112]              @ 0x70 
    /*0001a7d4*/ STR         R3, [SP, #96]               @ 0x60 
    /*0001a7d8*/ MOV         R2, #1 
    /*0001a7dc*/ MOV         R3, #0 
    /*0001a7e0*/ STR         R2, [SP, #120]              @ 0x78 
    /*0001a7e4*/ STR         R3, [SP, #108]              @ 0x6c 
    /*0001a7e8*/ STR         R3, [SP, #116]              @ 0x74 
    /*0001a7ec*/ STR         R3, [SP, #104]              @ 0x68 
    /*0001a7f0*/ STR         R3, [SP, #100]              @ 0x64 
    /*0001a7f4*/ BL          0x000000000001A7F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a7f8*/ ADD         R1, SP, #124                @ 0x7c 
    /*0001a7fc*/ LDR         R3, [R0, #120]              @ 0x78 
    /*0001a800*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a804*/ BLX         R3 
    /*0001a808*/ ADD         R3, R4, #14080              @ 0x3700 
    /*0001a80c*/ ADD         R3, R3, #16 
    /*0001a810*/ CMP         R6, #0 
    /*0001a814*/ LDRD        R2, [R3, #-8] 
    /*0001a818*/ MOV         SL, R2 
    /*0001a81c*/ MOV         FP, R3 
    /*0001a820*/ STRD        SL, [SP] 
    /*0001a824*/ BEQ         VPSS_DRV_CalNrBufferCfg_x1a854
    /*0001a828*/ ADD         R2, R6, #3824               @ 0xef0 
    /*0001a82c*/ ADD         R3, R4, #15296              @ 0x3bc0 
    /*0001a830*/ ADD         R2, R2, #4 
    /*0001a834*/ ADD         R3, R3, #16 
    /*0001a838*/ ADD         R2, R4, R2, LSL #2 
    VPSS_DRV_CalNrBufferCfg_x1a83c:
    /*0001a83c*/ LDR         R1, [R3], #4 
    /*0001a840*/ ADDS        SL, SL, R1 
    /*0001a844*/ ADC         FP, FP, #0 
    /*0001a848*/ CMP         R3, R2 
    /*0001a84c*/ BNE         VPSS_DRV_CalNrBufferCfg_x1a83c
    /*0001a850*/ STRD        SL, [SP] 
    VPSS_DRV_CalNrBufferCfg_x1a854:
    /*0001a854*/ LDR         R3, [R5, R7, LSL #2] 
    /*0001a858*/ LDR         R2, [R3, #40]               @ 0x28 
    /*0001a85c*/ CMP         R2, #0 
    /*0001a860*/ MOVEQ       R3, #1 
    /*0001a864*/ STREQ       R3, [SP, #68]               @ 0x44 
    /*0001a868*/ BEQ         VPSS_DRV_CalNrBufferCfg_x1a880
    /*0001a86c*/ LDR         R3, [R3, #36]               @ 0x24 
    /*0001a870*/ CMP         R3, #0 
    /*0001a874*/ MOVNE       R3, #1 
    /*0001a878*/ MOVEQ       R3, #2 
    /*0001a87c*/ STR         R3, [SP, #68]               @ 0x44 
    VPSS_DRV_CalNrBufferCfg_x1a880:
    /*0001a880*/ MOV         R2, #160                    @ 0xa0 
    /*0001a884*/ MOVW        R3, #14064                  @ 0x36f0 
    /*0001a888*/ MLA         R3, R2, R6, R3 
    /*0001a88c*/ ADD         R2, R6, #3824               @ 0xef0 
    /*0001a890*/ ADD         R2, R2, #6 
    /*0001a894*/ MOV         R0, #48                     @ 0x30 
    /*0001a898*/ MUL         R1, R0, R6 
    /*0001a89c*/ ADD         R2, R4, R2, LSL #2 
    /*0001a8a0*/ MOV         R5, #376                    @ 0x178 
    /*0001a8a4*/ LDR         R0, [SP, #132]              @ 0x84 
    /*0001a8a8*/ LDR         R2, [R2, #4] 
    /*0001a8ac*/ MOV         SL, R3 
    /*0001a8b0*/ MLA         R5, R5, R6, R4 
    /*0001a8b4*/ LDR         R7, [SP, #68]               @ 0x44 
    /*0001a8b8*/ STR         R2, [SP, #12] 
    /*0001a8bc*/ MOV         LR, #80                     @ 0x50 
    /*0001a8c0*/ LDR         R2, [SP, #148]              @ 0x94 
    /*0001a8c4*/ MOV         FP, #0 
    /*0001a8c8*/ STR         R1, [SP, #72]               @ 0x48 
    /*0001a8cc*/ MOV         R1, #0 
    /*0001a8d0*/ STRD        R0, [SP, #16] 
    /*0001a8d4*/ MOV         R9, R2 
    /*0001a8d8*/ LDRD        R2, [SP] 
    /*0001a8dc*/ LDR         R6, [SP, #136]              @ 0x88 
    /*0001a8e0*/ ADDS        R2, R2, R0 
    /*0001a8e4*/ STR         SL, [SP, #80]               @ 0x50 
    /*0001a8e8*/ ADC         R3, R3, R1 
    /*0001a8ec*/ LDR         IP, [SP, #128]              @ 0x80 
    /*0001a8f0*/ MOV         R0, R2 
    /*0001a8f4*/ MOVW        R2, #24304                  @ 0x5ef0 
    /*0001a8f8*/ MOV         R1, R3 
    /*0001a8fc*/ STRD        R0, [R5, R2] 
    /*0001a900*/ STRD        R0, [SP, #32] 
    /*0001a904*/ MOVW        R3, #24440                  @ 0x5f78 
    /*0001a908*/ LDRD        R0, [SP] 
    /*0001a90c*/ MOVW        R2, #24388                  @ 0x5f44 
    /*0001a910*/ MLA         LR, LR, R7, SL 
    /*0001a914*/ MOV         SL, R6 
    /*0001a918*/ STRD        R0, [R5, R3] 
    /*0001a91c*/ ADDS        R0, R0, SL 
    /*0001a920*/ ADC         R1, R1, FP 
    /*0001a924*/ MOVW        R3, #24448                  @ 0x5f80 
    /*0001a928*/ STRD        SL, [SP, #24] 
    /*0001a92c*/ MOV         SL, R0 
    /*0001a930*/ MOV         FP, R1 
    /*0001a934*/ LDRD        R0, [SP, #32] 
    /*0001a938*/ STRD        SL, [R5, R3] 
    /*0001a93c*/ MOV         R6, R9 
    /*0001a940*/ LDR         SL, [SP, #72]               @ 0x48 
    /*0001a944*/ ADDS        R0, R0, R6 
    /*0001a948*/ MOV         R7, #0 
    /*0001a94c*/ ADC         R1, R1, R7 
    /*0001a950*/ ADD         R3, SL, #14976              @ 0x3a80 
    /*0001a954*/ MOVW        SL, #24312                  @ 0x5ef8 
    /*0001a958*/ STRD        R0, [R5, SL] 
    /*0001a95c*/ MOV         FP, #0 
    /*0001a960*/ LDR         R1, [SP, #12] 
    /*0001a964*/ STR         LR, [SP, #84]               @ 0x54 
    /*0001a968*/ MOVW        LR, #24468                  @ 0x5f94 
    /*0001a96c*/ STR         R9, [SP, #64]               @ 0x40 
    /*0001a970*/ MOVW        R9, #24464                  @ 0x5f90 
    /*0001a974*/ LSL         R0, R1, #1 
    /*0001a978*/ LDR         R1, [SP, #8] 
    /*0001a97c*/ STR         IP, [R5, R9] 
    /*0001a980*/ LDR         SL, [SP, #124]              @ 0x7c 
    /*0001a984*/ STR         IP, [R5, LR] 
    /*0001a988*/ ADD         LR, R3, #48                 @ 0x30 
    /*0001a98c*/ STR         R1, [R5, R2] 
    /*0001a990*/ STR         LR, [SP, #76]               @ 0x4c 
    /*0001a994*/ LDR         LR, [R8, #3180]             @ 0xc6c 
    /*0001a998*/ LDRD        R8, [SP, #16] 
    /*0001a99c*/ STRD        SL, [SP, #32] 
    /*0001a9a0*/ ADDS        R8, R8, R6 
    /*0001a9a4*/ ADC         R9, R9, R7 
    /*0001a9a8*/ ADDS        R6, SL, R0 
    /*0001a9ac*/ STRD        R8, [SP, #40]               @ 0x28 
    /*0001a9b0*/ ADC         R7, FP, #0 
    /*0001a9b4*/ LDR         R2, [SP, #12] 
    /*0001a9b8*/ LDR         R0, [SP, #84]               @ 0x54 
    /*0001a9bc*/ STRD        R6, [SP, #56]               @ 0x38 
    /*0001a9c0*/ ADDS        R6, SL, R2 
    /*0001a9c4*/ ADD         R3, R4, R0 
    /*0001a9c8*/ ADC         R7, FP, #0 
    /*0001a9cc*/ LDR         R8, [SP, #64]               @ 0x40 
    /*0001a9d0*/ STRD        R6, [SP, #48]               @ 0x30 
    /*0001a9d4*/ MOV         R9, R3 
    /*0001a9d8*/ LDR         R6, [SP, #124]              @ 0x7c 
    /*0001a9dc*/ LDR         R1, [SP, #140]              @ 0x8c 
    /*0001a9e0*/ LDR         R3, [SP, #80]               @ 0x50 
    /*0001a9e4*/ SUB         R0, R6, R8 
    /*0001a9e8*/ LDR         R7, [SP, #132]              @ 0x84 
    /*0001a9ec*/ MOVW        R6, #24584                  @ 0x6008 
    /*0001a9f0*/ LDR         R2, [SP, #76]               @ 0x4c 
    /*0001a9f4*/ ADD         R3, R4, R3 
    /*0001a9f8*/ LDRD        SL, [SP] 
    /*0001a9fc*/ SUB         R0, R0, R7 
    /*0001aa00*/ ADD         R2, R4, R2 
    /*0001aa04*/ STR         R0, [R5, R6] 
    /*0001aa08*/ MOVW        R7, #24392                  @ 0x5f48 
    /*0001aa0c*/ MOVW        R6, #24368                  @ 0x5f30 
    /*0001aa10*/ STR         LR, [R5, R7] 
    /*0001aa14*/ MOVW        R7, #24372                  @ 0x5f34 
    /*0001aa18*/ STR         R1, [R5, R6] 
    /*0001aa1c*/ MOVW        R6, #24580                  @ 0x6004 
    /*0001aa20*/ STR         R1, [R5, R7] 
    /*0001aa24*/ STR         R4, [SP, #80]               @ 0x50 
    /*0001aa28*/ STR         R8, [R5, R6] 
    VPSS_DRV_CalNrBufferCfg_x1aa2c:
    /*0001aa2c*/ LDRD        R4, [SP, #24] 
    /*0001aa30*/ LDRD        R6, [SP, #16] 
    /*0001aa34*/ ADDS        R4, R4, SL 
    /*0001aa38*/ LDR         R8, [SP, #8] 
    /*0001aa3c*/ ADC         R5, R5, FP 
    /*0001aa40*/ ADDS        R6, R6, SL 
    /*0001aa44*/ STRD        R4, [R3, #32] 
    /*0001aa48*/ ADC         R7, R7, FP 
    /*0001aa4c*/ LDRD        R4, [SP, #40]               @ 0x28 
    /*0001aa50*/ STRD        R6, [R3, #48]               @ 0x30 
    /*0001aa54*/ LDRD        R6, [SP, #32] 
    /*0001aa58*/ ADDS        R4, R4, SL 
    /*0001aa5c*/ ADC         R5, R5, FP 
    /*0001aa60*/ STRD        R4, [R3, #56]               @ 0x38 
    /*0001aa64*/ ADDS        R6, R6, SL 
    /*0001aa68*/ LDRD        R4, [SP, #48]               @ 0x30 
    /*0001aa6c*/ ADC         R7, R7, FP 
    /*0001aa70*/ STRD        R6, [SP] 
    /*0001aa74*/ LDRD        R6, [SP, #56]               @ 0x38 
    /*0001aa78*/ ADDS        R4, R4, SL 
    /*0001aa7c*/ STM         R3, {R8, LR} 
    /*0001aa80*/ ADC         R5, R5, FP 
    /*0001aa84*/ LDR         R8, [SP, #64]               @ 0x40 
    /*0001aa88*/ ADDS        R6, R6, SL 
    /*0001aa8c*/ ADC         R7, R7, FP 
    /*0001aa90*/ STRD        SL, [R3, #24] 
    /*0001aa94*/ STR         IP, [R3, #40]               @ 0x28 
    /*0001aa98*/ MOV         SL, R6 
    /*0001aa9c*/ STR         IP, [R3, #44]               @ 0x2c 
    /*0001aaa0*/ MOV         FP, R7 
    /*0001aaa4*/ STR         R1, [R3, #64]               @ 0x40 
    /*0001aaa8*/ ADD         R3, R3, #80                 @ 0x50 
    /*0001aaac*/ STR         R1, [R3, #-12] 
    /*0001aab0*/ STR         R8, [R3, #-8] 
    /*0001aab4*/ STR         R0, [R3, #-4] 
    /*0001aab8*/ CMP         R3, R9 
    /*0001aabc*/ STRD        R4, [R2, #16] 
    /*0001aac0*/ LDRD        R6, [SP] 
    /*0001aac4*/ LDR         R4, [SP, #12] 
    /*0001aac8*/ STRD        R6, [R2, #8] 
    /*0001aacc*/ STR         R4, [R2], #24 
    /*0001aad0*/ BNE         VPSS_DRV_CalNrBufferCfg_x1aa2c
    /*0001aad4*/ LDR         R3, [SP, #68]               @ 0x44 
    /*0001aad8*/ LDR         R4, [SP, #80]               @ 0x50 
    /*0001aadc*/ CMP         R3, #1 
    /*0001aae0*/ BEQ         VPSS_DRV_CalNrBufferCfg_x1aaec
    /*0001aae4*/ ADD         SP, SP, #164                @ 0xa4 
    /*0001aae8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_CalNrBufferCfg_x1aaec:
    /*0001aaec*/ LDR         R3, [SP, #72]               @ 0x48 
    /*0001aaf0*/ MOV         R2, #24 
    /*0001aaf4*/ ADD         R0, R3, #15040              @ 0x3ac0 
    /*0001aaf8*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*0001aafc*/ ADD         R0, R0, #8 
    /*0001ab00*/ ADD         R1, R4, R3 
    /*0001ab04*/ ADD         R0, R4, R0 
    /*0001ab08*/ BL          0x000000000001AB08          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001ab0c*/ ADD         SP, SP, #164                @ 0xa4 
    /*0001ab10*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VPSS_DRV_CalNrBufferCfg


FUNC_BEGIN VPSS_DRV_MallocNrBuffer
    /*0001ab14*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001ab18*/ SUB         SP, SP, #228                @ 0xe4 
    /*0001ab1c*/ LDR         R2, [R1, #24] 
    /*0001ab20*/ MOV         R3, #0 
    /*0001ab24*/ STR         R3, [SP, #140]              @ 0x8c 
    /*0001ab28*/ CMP         R2, #1 
    /*0001ab2c*/ STR         R3, [SP, #136]              @ 0x88 
    /*0001ab30*/ STR         R3, [SP, #144]              @ 0x90 
    /*0001ab34*/ STR         R3, [SP, #148]              @ 0x94 
    /*0001ab38*/ STR         R3, [SP, #120]              @ 0x78 
    /*0001ab3c*/ BEQ         VPSS_DRV_MallocNrBuffer_x1ab4c
    VPSS_DRV_MallocNrBuffer_x1ab40:
    /*0001ab40*/ MOV         R0, #0 
    VPSS_DRV_MallocNrBuffer_x1ab44:
    /*0001ab44*/ ADD         SP, SP, #228                @ 0xe4 
    /*0001ab48*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_MallocNrBuffer_x1ab4c:
    /*0001ab4c*/ LDR         R7, [R1, #28] 
    /*0001ab50*/ CMP         R7, #0 
    /*0001ab54*/ BNE         VPSS_DRV_MallocNrBuffer_x1ab40
    /*0001ab58*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001ab5c*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001ab60*/ MOV         R4, R0 
    /*0001ab64*/ LDR         R6, [R5, R0, LSL #2] 
    /*0001ab68*/ ADD         R3, R6, #14080              @ 0x3700 
    /*0001ab6c*/ ADD         R3, R3, #16 
    /*0001ab70*/ LDRD        R2, [R3, #-8] 
    /*0001ab74*/ ORRS        R3, R2, R3 
    /*0001ab78*/ BNE         VPSS_DRV_MallocNrBuffer_x1ab40
    /*0001ab7c*/ MOV         FP, R1 
    /*0001ab80*/ BL          0x000000000001AB80          @ VPSS_DRV_GetSplitNum [R_ARM_CALL: .text+0x1a5a8] 
    /*0001ab84*/ LDR         R2, [FP, #32] 
    /*0001ab88*/ LDR         R3, [FP, #8] 
    /*0001ab8c*/ STR         R7, [SP, #172]              @ 0xac 
    /*0001ab90*/ STR         R7, [SP, #180]              @ 0xb4 
    /*0001ab94*/ STR         R2, [SP, #176]              @ 0xb0 
    /*0001ab98*/ STR         R3, [SP, #152]              @ 0x98 
    /*0001ab9c*/ CMP         R0, #3 
    /*0001aba0*/ STR         R0, [SP, #92]               @ 0x5c 
    /*0001aba4*/ BEQ         VPSS_DRV_MallocNrBuffer_x1af3c
    /*0001aba8*/ LDR         R3, [SP, #92]               @ 0x5c 
    /*0001abac*/ CMP         R3, #2 
    /*0001abb0*/ LDREQ       R2, [FP] 
    /*0001abb4*/ ADDEQ       R2, R2, #512                @ 0x200 
    /*0001abb8*/ BEQ         VPSS_DRV_MallocNrBuffer_x1abcc
    /*0001abbc*/ LDR         R3, [SP, #92]               @ 0x5c 
    /*0001abc0*/ CMP         R3, #1 
    /*0001abc4*/ LDRNE       R2, [SP, #156]              @ 0x9c 
    /*0001abc8*/ LDREQ       R2, [FP] 
    VPSS_DRV_MallocNrBuffer_x1abcc:
    /*0001abcc*/ ADD         R1, R6, #12288              @ 0x3000 
    /*0001abd0*/ LDR         R3, [FP, #4] 
    /*0001abd4*/ ADD         R2, R2, #15 
    /*0001abd8*/ MOV         R0, #2 
    /*0001abdc*/ LDR         R1, [R1, #3048]             @ 0xbe8 
    /*0001abe0*/ BIC         R2, R2, #15 
    /*0001abe4*/ ADD         R3, R3, #15 
    /*0001abe8*/ STR         R2, [SP, #156]              @ 0x9c 
    /*0001abec*/ CMP         R1, #1 
    /*0001abf0*/ MOV         R1, #1 
    /*0001abf4*/ STR         R1, [SP, #184]              @ 0xb8 
    /*0001abf8*/ MOVNE       R2, #0 
    /*0001abfc*/ MOVEQ       R2, #64                     @ 0x40 
    /*0001ac00*/ ADD         R3, R3, R2 
    /*0001ac04*/ MOV         R2, #0 
    /*0001ac08*/ BIC         R3, R3, #15 
    /*0001ac0c*/ STR         R2, [SP, #168]              @ 0xa8 
    /*0001ac10*/ STR         R2, [SP, #164]              @ 0xa4 
    /*0001ac14*/ STR         R3, [SP, #160]              @ 0xa0 
    /*0001ac18*/ BL          0x000000000001AC18          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001ac1c*/ ADD         R1, SP, #188                @ 0xbc 
    /*0001ac20*/ LDR         R3, [R0, #120]              @ 0x78 
    /*0001ac24*/ ADD         R0, SP, #152                @ 0x98 
    /*0001ac28*/ BLX         R3 
    /*0001ac2c*/ LDR         R3, [SP, #156]              @ 0x9c 
    /*0001ac30*/ LDR         R2, [SP, #160]              @ 0xa0 
    /*0001ac34*/ ADD         R3, R3, #3 
    /*0001ac38*/ LDR         R1, [R5, R4, LSL #2] 
    /*0001ac3c*/ ADD         R2, R2, #3 
    /*0001ac40*/ LSR         R3, R3, #4 
    /*0001ac44*/ ADD         R3, R3, #15 
    /*0001ac48*/ LSR         R2, R2, #2 
    /*0001ac4c*/ BIC         R3, R3, #15 
    /*0001ac50*/ LDR         R0, [R1, #40]               @ 0x28 
    /*0001ac54*/ MUL         R3, R2, R3 
    /*0001ac58*/ CMP         R0, #0 
    /*0001ac5c*/ STR         R3, [SP, #72]               @ 0x48 
    /*0001ac60*/ BEQ         VPSS_DRV_MallocNrBuffer_x1af2c
    /*0001ac64*/ LDR         R3, [R1, #36]               @ 0x24 
    /*0001ac68*/ CMP         R3, #0 
    /*0001ac6c*/ BNE         VPSS_DRV_MallocNrBuffer_x1af2c
    /*0001ac70*/ STR         R3, [R6, #984]              @ 0x3d8 
    /*0001ac74*/ MOV         R3, #2 
    /*0001ac78*/ STR         R3, [SP, #88]               @ 0x58 
    VPSS_DRV_MallocNrBuffer_x1ac7c:
    /*0001ac7c*/ MOV         R0, #2 
    /*0001ac80*/ MOV         R3, #0 
    /*0001ac84*/ STR         R4, [SP, #128]              @ 0x80 
    /*0001ac88*/ MOV         R7, #7 
    /*0001ac8c*/ STR         R3, [SP, #132]              @ 0x84 
    /*0001ac90*/ STR         R7, [SP, #124]              @ 0x7c 
    /*0001ac94*/ BL          0x000000000001AC94          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001ac98*/ ADD         R1, SP, #120                @ 0x78 
    /*0001ac9c*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0001aca0*/ ADD         R0, SP, #124                @ 0x7c 
    /*0001aca4*/ BLX         R3 
    /*0001aca8*/ SUBS        R5, R0, #0 
    /*0001acac*/ BNE         VPSS_DRV_MallocNrBuffer_x1af48
    /*0001acb0*/ LDR         IP, [SP, #72]               @ 0x48 
    /*0001acb4*/ MOV         R1, #16 
    /*0001acb8*/ STR         R4, [SP] 
    /*0001acbc*/ MOVW        R3, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6168] 
    /*0001acc0*/ MOVW        R2, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6170] 
    /*0001acc4*/ MOVT        R3, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6168] 
    /*0001acc8*/ MOVT        R2, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6170] 
    /*0001accc*/ ADD         R0, SP, #136                @ 0x88 
    /*0001acd0*/ LSL         R4, IP, #1 
    /*0001acd4*/ BL          0x000000000001ACD4          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*0001acd8*/ LDR         R2, [SP, #188]              @ 0xbc 
    /*0001acdc*/ ADD         R1, SP, #136                @ 0x88 
    /*0001ace0*/ LDR         R3, [SP, #88]               @ 0x58 
    /*0001ace4*/ ADD         R2, R4, R2 
    /*0001ace8*/ LDR         R0, [SP, #120]              @ 0x78 
    /*0001acec*/ MUL         R2, R3, R2 
    /*0001acf0*/ BL          0x000000000001ACF0          @ CMPI_MmzMalloc [R_ARM_CALL: +0x0] 
    /*0001acf4*/ MOV         R2, R0 
    /*0001acf8*/ MOV         R3, R1 
    /*0001acfc*/ STRD        R2, [SP, #32] 
    /*0001ad00*/ ORRS        R3, R2, R3 
    /*0001ad04*/ BEQ         VPSS_DRV_MallocNrBuffer_x1af74
    /*0001ad08*/ LDR         R3, [SP, #92]               @ 0x5c 
    /*0001ad0c*/ CMP         R3, #0 
    /*0001ad10*/ BEQ         VPSS_DRV_MallocNrBuffer_x1ab40
    /*0001ad14*/ LDR         R1, [SP, #88]               @ 0x58 
    /*0001ad18*/ MOV         R3, #80                     @ 0x50 
    /*0001ad1c*/ ADD         R2, R6, #14976              @ 0x3a80 
    /*0001ad20*/ STR         R5, [SP, #76]               @ 0x4c 
    /*0001ad24*/ MUL         R3, R3, R1 
    /*0001ad28*/ MOV         R0, R2 
    /*0001ad2c*/ ADD         R2, R0, #48                 @ 0x30 
    /*0001ad30*/ MOV         SL, R2 
    /*0001ad34*/ MOV         R2, R4 
    /*0001ad38*/ STR         R3, [SP, #112]              @ 0x70 
    /*0001ad3c*/ ADD         R3, R6, #14016              @ 0x36c0 
    /*0001ad40*/ ADD         R3, R3, #56                 @ 0x38 
    /*0001ad44*/ MOV         R9, R3 
    /*0001ad48*/ MOV         R3, #0 
    /*0001ad4c*/ STRD        R2, [SP, #96]               @ 0x60 
    /*0001ad50*/ MOV         R3, #0 
    /*0001ad54*/ LDR         R2, [SP, #72]               @ 0x48 
    /*0001ad58*/ STRD        R2, [SP, #104]              @ 0x68 
    /*0001ad5c*/ SUB         R3, R1, #1 
    /*0001ad60*/ STR         R3, [SP, #116]              @ 0x74 
    /*0001ad64*/ B           VPSS_DRV_MallocNrBuffer_x1ad88
    VPSS_DRV_MallocNrBuffer_x1ad68:
    /*0001ad68*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*0001ad6c*/ ADD         SL, SL, #48                 @ 0x30 
    /*0001ad70*/ LDR         R2, [SP, #92]               @ 0x5c 
    /*0001ad74*/ ADD         R9, R9, #160                @ 0xa0 
    /*0001ad78*/ ADD         R3, R3, #1 
    /*0001ad7c*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0001ad80*/ CMP         R3, R2 
    /*0001ad84*/ BEQ         VPSS_DRV_MallocNrBuffer_x1ab40
    VPSS_DRV_MallocNrBuffer_x1ad88:
    /*0001ad88*/ LDR         IP, [SP, #196]              @ 0xc4 
    /*0001ad8c*/ MOV         R1, #0 
    /*0001ad90*/ LDR         R8, [SP, #212]              @ 0xd4 
    /*0001ad94*/ LDR         R2, [SP, #188]              @ 0xbc 
    /*0001ad98*/ LDR         R3, [SP, #112]              @ 0x70 
    /*0001ad9c*/ MOV         R0, IP 
    /*0001ada0*/ STRD        R0, [SP, #48]               @ 0x30 
    /*0001ada4*/ ADDS        R0, IP, R8 
    /*0001ada8*/ ADC         R1, R1, #0 
    /*0001adac*/ ADD         LR, R3, R9 
    /*0001adb0*/ STRD        R0, [SP, #56]               @ 0x38 
    /*0001adb4*/ SUB         R3, R2, R8 
    /*0001adb8*/ MOV         R0, R2 
    /*0001adbc*/ MOV         R1, #0 
    /*0001adc0*/ STRD        R0, [SP, #24] 
    /*0001adc4*/ SUB         IP, R3, IP 
    /*0001adc8*/ LDRD        R4, [SP, #104]              @ 0x68 
    /*0001adcc*/ LDRD        R2, [SP, #24] 
    /*0001add0*/ LDRD        R6, [SP, #32] 
    /*0001add4*/ ADDS        R4, R4, R2 
    /*0001add8*/ LDR         R0, [SP, #192]              @ 0xc0 
    /*0001addc*/ ADC         R5, R5, R3 
    /*0001ade0*/ STRD        R4, [SP, #64]               @ 0x40 
    /*0001ade4*/ LDRD        R4, [SP, #96]               @ 0x60 
    /*0001ade8*/ LDR         R1, [SP, #204]              @ 0xcc 
    /*0001adec*/ ADDS        R4, R4, R2 
    /*0001adf0*/ LDR         R2, [SP, #200]              @ 0xc8 
    /*0001adf4*/ ADC         R5, R5, R3 
    /*0001adf8*/ STR         SL, [SP, #80]               @ 0x50 
    /*0001adfc*/ MOV         R3, #0 
    /*0001ae00*/ STRD        R4, [SP, #16] 
    /*0001ae04*/ STRD        R2, [SP, #40]               @ 0x28 
    /*0001ae08*/ MOV         R2, SL 
    /*0001ae0c*/ MOV         R3, R9 
    /*0001ae10*/ MOV         SL, R8 
    /*0001ae14*/ STR         R9, [SP, #84]               @ 0x54 
    VPSS_DRV_MallocNrBuffer_x1ae18:
    /*0001ae18*/ LDR         R8, [FP, #32] 
    /*0001ae1c*/ MOV         R9, #0 
    /*0001ae20*/ LDRD        R4, [SP, #40]               @ 0x28 
    /*0001ae24*/ ADD         R3, R3, #80                 @ 0x50 
    /*0001ae28*/ STR         R8, [R3, #-76]              @ 0xffffffb4 
    /*0001ae2c*/ ADDS        R4, R4, R6 
    /*0001ae30*/ LDR         R8, [FP, #8] 
    /*0001ae34*/ ADC         R5, R5, R7 
    /*0001ae38*/ STR         R9, [R3, #-68]              @ 0xffffffbc 
    /*0001ae3c*/ STRD        R4, [R3, #-56]              @ 0xffffffc8 
    /*0001ae40*/ STR         R8, [R3, #-80]              @ 0xffffffb0 
    /*0001ae44*/ LDRD        R8, [SP, #48]               @ 0x30 
    /*0001ae48*/ LDRD        R4, [SP, #56]               @ 0x38 
    /*0001ae4c*/ ADDS        R8, R8, R6 
    /*0001ae50*/ STRD        R6, [R3, #-64]              @ 0xffffffc0 
    /*0001ae54*/ ADC         R9, R9, R7 
    /*0001ae58*/ ADDS        R4, R4, R6 
    /*0001ae5c*/ STRD        R8, [R3, #-40]              @ 0xffffffd8 
    /*0001ae60*/ ADC         R5, R5, R7 
    /*0001ae64*/ LDRD        R8, [SP, #24] 
    /*0001ae68*/ STRD        R4, [R3, #-32]              @ 0xffffffe0 
    /*0001ae6c*/ LDRD        R4, [SP, #64]               @ 0x40 
    /*0001ae70*/ ADDS        R8, R8, R6 
    /*0001ae74*/ ADC         R9, R9, R7 
    /*0001ae78*/ STR         R0, [R3, #-48]              @ 0xffffffd0 
    /*0001ae7c*/ ADDS        R4, R4, R6 
    /*0001ae80*/ STR         R0, [R3, #-44]              @ 0xffffffd4 
    /*0001ae84*/ ADC         R5, R5, R7 
    /*0001ae88*/ STRD        R4, [SP, #8] 
    /*0001ae8c*/ LDRD        R4, [SP, #16] 
    /*0001ae90*/ STR         R1, [R3, #-24]              @ 0xffffffe8 
    /*0001ae94*/ ADDS        R4, R4, R6 
    /*0001ae98*/ STR         R1, [R3, #-20]              @ 0xffffffec 
    /*0001ae9c*/ ADC         R5, R5, R7 
    /*0001aea0*/ STR         SL, [R3, #-16] 
    /*0001aea4*/ MOV         R6, R4 
    /*0001aea8*/ STR         IP, [R3, #-12] 
    /*0001aeac*/ MOV         R7, R5 
    /*0001aeb0*/ LDRD        R4, [SP, #8] 
    /*0001aeb4*/ CMP         R3, LR 
    /*0001aeb8*/ STRD        R8, [R2, #8] 
    /*0001aebc*/ STRD        R4, [R2, #16] 
    /*0001aec0*/ LDR         R5, [SP, #72]               @ 0x48 
    /*0001aec4*/ STR         R5, [R2], #24 
    /*0001aec8*/ BNE         VPSS_DRV_MallocNrBuffer_x1ae18
    /*0001aecc*/ LDRD        R4, [SP, #16] 
    /*0001aed0*/ LDR         R1, [SP, #116]              @ 0x74 
    /*0001aed4*/ LDR         SL, [SP, #80]               @ 0x50 
    /*0001aed8*/ LDR         R9, [SP, #84]               @ 0x54 
    /*0001aedc*/ UMULL       R2, R3, R1, R4 
    /*0001aee0*/ ADDS        R4, R4, R2 
    /*0001aee4*/ MLA         R3, R1, R5, R3 
    /*0001aee8*/ LDRD        R0, [SP, #32] 
    /*0001aeec*/ ADC         R5, R5, R3 
    /*0001aef0*/ LDR         R3, [SP, #88]               @ 0x58 
    /*0001aef4*/ ADDS        R0, R0, R4 
    /*0001aef8*/ ADC         R1, R1, R5 
    /*0001aefc*/ CMP         R3, #1 
    /*0001af00*/ STRD        R0, [SP, #32] 
    /*0001af04*/ BNE         VPSS_DRV_MallocNrBuffer_x1ad68
    /*0001af08*/ SUB         R1, R9, #8 
    /*0001af0c*/ MOV         R2, #80                     @ 0x50 
    /*0001af10*/ ADD         R0, R9, #72                 @ 0x48 
    /*0001af14*/ BL          0x000000000001AF14          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001af18*/ MOV         R2, #24 
    /*0001af1c*/ MOV         R1, SL 
    /*0001af20*/ ADD         R0, SL, R2 
    /*0001af24*/ BL          0x000000000001AF24          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001af28*/ B           VPSS_DRV_MallocNrBuffer_x1ad68
    VPSS_DRV_MallocNrBuffer_x1af2c:
    /*0001af2c*/ MOV         R3, #1 
    /*0001af30*/ STR         R3, [R6, #984]              @ 0x3d8 
    /*0001af34*/ STR         R3, [SP, #88]               @ 0x58 
    /*0001af38*/ B           VPSS_DRV_MallocNrBuffer_x1ac7c
    VPSS_DRV_MallocNrBuffer_x1af3c:
    /*0001af3c*/ LDR         R2, [FP] 
    /*0001af40*/ ADD         R2, R2, #1024               @ 0x400 
    /*0001af44*/ B           VPSS_DRV_MallocNrBuffer_x1abcc
    VPSS_DRV_MallocNrBuffer_x1af48:
    /*0001af48*/ MOVW        R3, #2210                   @ 0x8a2 
    /*0001af4c*/ MOV         R1, R7 
    /*0001af50*/ STR         R3, [SP] 
    /*0001af54*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6138] 
    /*0001af58*/ LDR         R3, [PC, #64]               @ 0x000000000001afa0 
    /*0001af5c*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6138] 
    /*0001af60*/ MOV         R0, #3 
    /*0001af64*/ BL          0x000000000001AF64          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001af68*/ MOVW        R0, #32784                  @ 0x8010 
    /*0001af6c*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001af70*/ B           VPSS_DRV_MallocNrBuffer_x1ab44
    VPSS_DRV_MallocNrBuffer_x1af74:
    /*0001af74*/ MOVW        R3, #2222                   @ 0x8ae 
    /*0001af78*/ MOV         R1, R7 
    /*0001af7c*/ STR         R3, [SP] 
    /*0001af80*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x617c] 
    /*0001af84*/ LDR         R3, [PC, #20]               @ 0x000000000001afa0 
    /*0001af88*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x617c] 
    /*0001af8c*/ MOV         R0, #3 
    /*0001af90*/ BL          0x000000000001AF90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001af94*/ MOVW        R0, #32780                  @ 0x800c 
    /*0001af98*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001af9c*/ B           VPSS_DRV_MallocNrBuffer_x1ab44
    /*0001afa0*/ ANDEQ       R0, R0, IP, LSL #31 
FUNC_END VPSS_DRV_MallocNrBuffer


FUNC_BEGIN VPSS_DRV_FreeNrBuffer
    /*0001afa4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001afa8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001afac*/ PUSH        {R4, LR} 
    /*0001afb0*/ LDR         R4, [R3, R0, LSL #2] 
    /*0001afb4*/ ADD         R4, R4, #14080              @ 0x3700 
    /*0001afb8*/ LDRD        R0, [R4, #8] 
    /*0001afbc*/ ORRS        R3, R0, R1 
    /*0001afc0*/ BEQ         VPSS_DRV_FreeNrBuffer_x1afdc
    /*0001afc4*/ ADD         R4, R4, #16 
    /*0001afc8*/ MOV         R2, #0 
    /*0001afcc*/ BL          0x000000000001AFCC          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*0001afd0*/ MOV         R2, #0 
    /*0001afd4*/ MOV         R3, #0 
    /*0001afd8*/ STRD        R2, [R4, #-8] 
    VPSS_DRV_FreeNrBuffer_x1afdc:
    /*0001afdc*/ MOV         R0, #0 
    /*0001afe0*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_FreeNrBuffer


FUNC_BEGIN VPSS_DRV_MallocResourceBuffer
    /*0001afe4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001afe8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001afec*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001aff0*/ SUB         SP, SP, #52                 @ 0x34 
    /*0001aff4*/ LDR         R5, [R3, R0, LSL #2] 
    /*0001aff8*/ MOV         R3, #0 
    /*0001affc*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001b000*/ ADD         R2, R5, #16896              @ 0x4200 
    /*0001b004*/ STR         R3, [SP, #12] 
    /*0001b008*/ STR         R3, [SP, #32] 
    /*0001b00c*/ LDRD        R6, [R2, #184]              @ 0xb8 
    /*0001b010*/ STR         R3, [SP, #40]               @ 0x28 
    /*0001b014*/ ORRS        R2, R6, R7 
    /*0001b018*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0001b01c*/ STR         R3, [SP, #16] 
    /*0001b020*/ MOVNE       R4, R3 
    /*0001b024*/ BEQ         VPSS_DRV_MallocResourceBuffer_x1b034
    VPSS_DRV_MallocResourceBuffer_x1b028:
    /*0001b028*/ MOV         R0, R4 
    /*0001b02c*/ ADD         SP, SP, #52                 @ 0x34 
    /*0001b030*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_DRV_MallocResourceBuffer_x1b034:
    /*0001b034*/ MOV         R4, R0 
    /*0001b038*/ MOV         R0, #2 
    /*0001b03c*/ STR         R3, [SP, #28] 
    /*0001b040*/ MOV         R6, #7 
    /*0001b044*/ STR         R4, [SP, #24] 
    /*0001b048*/ STR         R6, [SP, #20] 
    /*0001b04c*/ BL          0x000000000001B04C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b050*/ ADD         R1, SP, #12 
    /*0001b054*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0001b058*/ ADD         R0, SP, #20 
    /*0001b05c*/ BLX         R3 
    /*0001b060*/ CMP         R0, #0 
    /*0001b064*/ BNE         VPSS_DRV_MallocResourceBuffer_x1b100
    /*0001b068*/ STR         R4, [SP] 
    /*0001b06c*/ MOV         R1, #16 
    /*0001b070*/ MOVW        R3, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6168] 
    /*0001b074*/ MOVW        R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61b4] 
    /*0001b078*/ MOVT        R3, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6168] 
    /*0001b07c*/ MOVT        R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61b4] 
    /*0001b080*/ ADD         R0, SP, #32 
    /*0001b084*/ BL          0x000000000001B084          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*0001b088*/ ADD         R2, R5, #16896              @ 0x4200 
    /*0001b08c*/ MOV         R3, #1024                   @ 0x400 
    /*0001b090*/ LDR         R0, [SP, #12] 
    /*0001b094*/ STR         R3, [SP] 
    /*0001b098*/ ADD         R1, SP, #32 
    /*0001b09c*/ ADD         R2, R2, #184                @ 0xb8 
    /*0001b0a0*/ ADD         R3, SP, #16 
    /*0001b0a4*/ BL          0x000000000001B0A4          @ CMPI_MmzMallocNocache [R_ARM_CALL: +0x0] 
    /*0001b0a8*/ SUBS        R4, R0, #0 
    /*0001b0ac*/ BNE         VPSS_DRV_MallocResourceBuffer_x1b0d4
    VPSS_DRV_MallocResourceBuffer_x1b0b0:
    /*0001b0b0*/ LDR         R0, [SP, #16] 
    /*0001b0b4*/ ADD         R5, R5, #16384              @ 0x4000 
    /*0001b0b8*/ MOV         R2, #1024                   @ 0x400 
    /*0001b0bc*/ MOV         R1, #0 
    /*0001b0c0*/ STR         R0, [R5, #704]              @ 0x2c0 
    /*0001b0c4*/ BL          0x000000000001B0C4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0001b0c8*/ MOV         R0, R4 
    /*0001b0cc*/ ADD         SP, SP, #52                 @ 0x34 
    /*0001b0d0*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_DRV_MallocResourceBuffer_x1b0d4:
    /*0001b0d4*/ MOVW        R3, #2316                   @ 0x90c 
    /*0001b0d8*/ MOV         R1, R6 
    /*0001b0dc*/ STR         R3, [SP] 
    /*0001b0e0*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61c0] 
    /*0001b0e4*/ LDR         R3, [PC, #64]               @ 0x000000000001b12c 
    /*0001b0e8*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61c0] 
    /*0001b0ec*/ MOV         R0, #3 
    /*0001b0f0*/ MOVW        R4, #32780                  @ 0x800c 
    /*0001b0f4*/ BL          0x000000000001B0F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b0f8*/ MOVT        R4, #40967                  @ 0xa007 
    /*0001b0fc*/ B           VPSS_DRV_MallocResourceBuffer_x1b0b0
    VPSS_DRV_MallocResourceBuffer_x1b100:
    /*0001b100*/ MOVW        R3, #2307                   @ 0x903 
    /*0001b104*/ MOV         R1, R6 
    /*0001b108*/ STR         R3, [SP] 
    /*0001b10c*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6138] 
    /*0001b110*/ LDR         R3, [PC, #20]               @ 0x000000000001b12c 
    /*0001b114*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6138] 
    /*0001b118*/ MOV         R0, #3 
    /*0001b11c*/ MOVW        R4, #32784                  @ 0x8010 
    /*0001b120*/ BL          0x000000000001B120          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b124*/ MOVT        R4, #40967                  @ 0xa007 
    /*0001b128*/ B           VPSS_DRV_MallocResourceBuffer_x1b028
    /*0001b12c*/ ANDEQ       R0, R0, R4, LSR #31 
FUNC_END VPSS_DRV_MallocResourceBuffer


FUNC_BEGIN VPSS_DRV_FreeResourceBuffer
    /*0001b130*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001b134*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001b138*/ PUSH        {R4, R5, R6, LR} 
    /*0001b13c*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001b140*/ ADD         R4, R3, #16896              @ 0x4200 
    /*0001b144*/ LDRD        R0, [R4, #184]              @ 0xb8 
    /*0001b148*/ ORRS        R2, R0, R1 
    /*0001b14c*/ BEQ         VPSS_DRV_FreeResourceBuffer_x1b174
    /*0001b150*/ ADD         R5, R3, #16384              @ 0x4000 
    /*0001b154*/ ADD         R4, R4, #192                @ 0xc0 
    /*0001b158*/ LDR         R2, [R5, #704]              @ 0x2c0 
    /*0001b15c*/ BL          0x000000000001B15C          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*0001b160*/ MOV         R0, #0 
    /*0001b164*/ MOV         R1, #0 
    /*0001b168*/ MOV         R3, #0 
    /*0001b16c*/ STRD        R0, [R4, #-8] 
    /*0001b170*/ STR         R3, [R5, #704]              @ 0x2c0 
    VPSS_DRV_FreeResourceBuffer_x1b174:
    /*0001b174*/ MOV         R0, #0 
    /*0001b178*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_FreeResourceBuffer


FUNC_BEGIN VPSS_DRV_HwResourceCreate
    /*0001b17c*/ PUSH        {R4, R5, R6, LR} 
    /*0001b180*/ MOV         R5, R0 
    /*0001b184*/ BL          0x000000000001B184          @ VPSS_DRV_MallocNrBuffer [R_ARM_CALL: .text+0x1ab14] 
    /*0001b188*/ SUBS        R4, R0, #0 
    /*0001b18c*/ BEQ         VPSS_DRV_HwResourceCreate_x1b198
    VPSS_DRV_HwResourceCreate_x1b190:
    /*0001b190*/ MOV         R0, R4 
    /*0001b194*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_HwResourceCreate_x1b198:
    /*0001b198*/ MOV         R0, R5 
    /*0001b19c*/ BL          0x000000000001B19C          @ VPSS_DRV_MallocResourceBuffer [R_ARM_CALL: .text+0x1afe4] 
    /*0001b1a0*/ SUBS        R4, R0, #0 
    /*0001b1a4*/ BEQ         VPSS_DRV_HwResourceCreate_x1b190
    /*0001b1a8*/ MOV         R0, R5 
    /*0001b1ac*/ BL          0x000000000001B1AC          @ VPSS_DRV_FreeNrBuffer [R_ARM_CALL: .text+0x1afa4] 
    /*0001b1b0*/ MOV         R0, R4 
    /*0001b1b4*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_HwResourceCreate


FUNC_BEGIN VPSS_DRV_HwResourceDestroy
    /*0001b1b8*/ PUSH        {R4, LR} 
    /*0001b1bc*/ MOV         R4, R0 
    /*0001b1c0*/ BL          0x000000000001B1C0          @ VPSS_DRV_FreeResourceBuffer [R_ARM_CALL: .text+0x1b130] 
    /*0001b1c4*/ MOV         R0, R4 
    /*0001b1c8*/ BL          0x000000000001B1C8          @ VPSS_DRV_FreeNrBuffer [R_ARM_CALL: .text+0x1afa4] 
    /*0001b1cc*/ MOV         R0, #0 
    /*0001b1d0*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_HwResourceDestroy


FUNC_BEGIN VPSS_DRV_CleanLowDelay
    /*0001b1d4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001b1d8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001b1dc*/ PUSH        {R4, R5, LR} 
    /*0001b1e0*/ SUB         SP, SP, #12 
    /*0001b1e4*/ LDR         R4, [R3, R0, LSL #2] 
    /*0001b1e8*/ ADD         R5, R4, #12288              @ 0x3000 
    /*0001b1ec*/ LDR         R3, [R5, #3904]             @ 0xf40 
    /*0001b1f0*/ CMN         R3, #1 
    /*0001b1f4*/ BEQ         VPSS_DRV_CleanLowDelay_x1b228
    /*0001b1f8*/ MOV         R0, #1 
    /*0001b1fc*/ BL          0x000000000001B1FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b200*/ LDR         IP, [R5, #3904]             @ 0xf40 
    /*0001b204*/ MOVW        R3, #15984                  @ 0x3e70 
    /*0001b208*/ MOV         R1, #10 
    /*0001b20c*/ LDRD        R2, [R3, R4] 
    /*0001b210*/ STR         R1, [SP] 
    /*0001b214*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0001b218*/ MOV         R0, IP 
    /*0001b21c*/ BLX         R1 
    /*0001b220*/ MVN         R3, #0 
    /*0001b224*/ STR         R3, [R5, #3904]             @ 0xf40 
    VPSS_DRV_CleanLowDelay_x1b228:
    /*0001b228*/ ADD         R5, R4, #16384              @ 0x4000 
    /*0001b22c*/ LDR         R3, [R5, #144]              @ 0x90 
    /*0001b230*/ CMN         R3, #1 
    /*0001b234*/ BEQ         VPSS_DRV_CleanLowDelay_x1b268
    /*0001b238*/ MOV         R0, #1 
    /*0001b23c*/ ADD         R4, R4, #16320              @ 0x3fc0 
    /*0001b240*/ BL          0x000000000001B240          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b244*/ LDR         IP, [R5, #144]              @ 0x90 
    /*0001b248*/ LDRD        R2, [R4] 
    /*0001b24c*/ MOV         R1, #10 
    /*0001b250*/ STR         R1, [SP] 
    /*0001b254*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0001b258*/ MOV         R0, IP 
    /*0001b25c*/ BLX         R1 
    /*0001b260*/ MVN         R3, #0 
    /*0001b264*/ STR         R3, [R5, #144]              @ 0x90 
    VPSS_DRV_CleanLowDelay_x1b268:
    /*0001b268*/ MOV         R0, #0 
    /*0001b26c*/ ADD         SP, SP, #12 
    /*0001b270*/ POP         {R4, R5, PC} 
FUNC_END VPSS_DRV_CleanLowDelay


FUNC_BEGIN VPSS_DRV_SetNRxParamUpdateFlag
    /*0001b274*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001b278*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001b27c*/ MOV         R2, #1 
    /*0001b280*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001b284*/ STR         R2, [R3, #968]              @ 0x3c8 
    /*0001b288*/ STR         R2, [R3, #972]              @ 0x3cc 
    /*0001b28c*/ STR         R2, [R3, #976]              @ 0x3d0 
    /*0001b290*/ BX          LR 
FUNC_END VPSS_DRV_SetNRxParamUpdateFlag


FUNC_BEGIN VPSS_DRV_CtxInit
    /*0001b294*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001b298*/ MOV         R8, R0 
    /*0001b29c*/ SUB         SP, SP, #12 
    /*0001b2a0*/ MOVW        R0, #41680                  @ 0xa2d0 
    /*0001b2a4*/ MOVT        R0, #1 
    /*0001b2a8*/ MOV         FP, R1 
    /*0001b2ac*/ BL          0x000000000001B2AC          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*0001b2b0*/ SUBS        R4, R0, #0 
    /*0001b2b4*/ BEQ         VPSS_DRV_CtxInit_x1b464
    /*0001b2b8*/ MOVW        SL, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001b2bc*/ MOVT        SL, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001b2c0*/ MOV         R1, #0 
    /*0001b2c4*/ MOVW        R2, #41680                  @ 0xa2d0 
    /*0001b2c8*/ MOVT        R2, #1 
    /*0001b2cc*/ ADD         R9, R4, #16384              @ 0x4000 
    /*0001b2d0*/ BL          0x000000000001B2D0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0001b2d4*/ STR         R4, [SL, R8, LSL #2] 
    /*0001b2d8*/ STR         R8, [R4] 
    /*0001b2dc*/ ADD         R2, R4, #28672              @ 0x7000 
    /*0001b2e0*/ LDR         R3, [SL, R8, LSL #2] 
    /*0001b2e4*/ MOV         R7, #0 
    /*0001b2e8*/ MOV         R5, #1 
    /*0001b2ec*/ MOV         R1, #29696                  @ 0x7400 
    /*0001b2f0*/ STR         R5, [R9, #196]              @ 0xc4 
    /*0001b2f4*/ MOV         R0, #1016                   @ 0x3f8 
    /*0001b2f8*/ STR         R1, [R2, #1664]             @ 0x680 
    /*0001b2fc*/ MOV         R1, R7 
    /*0001b300*/ STR         R5, [R9, #692]              @ 0x2b4 
    /*0001b304*/ ADD         R6, R4, #12288              @ 0x3000 
    /*0001b308*/ STR         R5, [R4, #980]              @ 0x3d4 
    /*0001b30c*/ STR         R7, [R9, #684]              @ 0x2ac 
    /*0001b310*/ STR         R7, [R4, #984]              @ 0x3d8 
    /*0001b314*/ STR         R7, [R9, #688]              @ 0x2b0 
    /*0001b318*/ STR         R5, [R3, #968]              @ 0x3c8 
    /*0001b31c*/ STR         R5, [R3, #972]              @ 0x3cc 
    /*0001b320*/ STR         R5, [R3, #976]              @ 0x3d0 
    /*0001b324*/ BL          0x000000000001B324          @ osal_kmalloc [R_ARM_CALL: +0x0] 
    /*0001b328*/ CMP         R0, R7 
    /*0001b32c*/ STR         R0, [R6, #1720]             @ 0x6b8 
    /*0001b330*/ BEQ         VPSS_DRV_CtxInit_x1b498
    /*0001b334*/ MOV         R1, R7 
    /*0001b338*/ MOV         R0, #400                    @ 0x190 
    /*0001b33c*/ BL          0x000000000001B33C          @ osal_kmalloc [R_ARM_CALL: +0x0] 
    /*0001b340*/ CMP         R0, #0 
    /*0001b344*/ STR         R0, [R6, #1724]             @ 0x6bc 
    /*0001b348*/ BEQ         VPSS_DRV_CtxInit_x1b470
    /*0001b34c*/ MOV         R3, #2 
    /*0001b350*/ ADD         R0, R4, #1000               @ 0x3e8 
    /*0001b354*/ STR         R3, [R4, #992]              @ 0x3e0 
    /*0001b358*/ STR         R5, [R4, #988]              @ 0x3dc 
    /*0001b35c*/ STR         R5, [R4, #996]              @ 0x3e4 
    /*0001b360*/ BL          0x000000000001B360          @ V16cv500SetDefaultNRx [R_ARM_CALL: .text+0x2d4dc] 
    /*0001b364*/ ADD         R0, R4, #13184              @ 0x3380 
    /*0001b368*/ ADD         R0, R0, #24 
    /*0001b36c*/ BL          0x000000000001B36C          @ V16cv500SetDefaultNRx [R_ARM_CALL: .text+0x2d4dc] 
    /*0001b370*/ MOV         R3, #110                    @ 0x6e 
    /*0001b374*/ MOV         R2, #40                     @ 0x28 
    /*0001b378*/ STR         R3, [R6, #3052]             @ 0xbec 
    /*0001b37c*/ MOV         R1, FP 
    /*0001b380*/ ADD         R0, R4, #4 
    /*0001b384*/ BL          0x000000000001B384          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001b388*/ MOV         R0, R8 
    /*0001b38c*/ BL          0x000000000001B38C          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0001b390*/ CMP         R0, #1 
    /*0001b394*/ BEQ         VPSS_DRV_CtxInit_x1b3f0
    VPSS_DRV_CtxInit_x1b398:
    /*0001b398*/ LDR         R3, [R4, #40]               @ 0x28 
    /*0001b39c*/ MOV         R1, FP 
    /*0001b3a0*/ MOV         R0, R8 
    /*0001b3a4*/ SUB         R3, R3, #1 
    /*0001b3a8*/ CLZ         R3, R3 
    /*0001b3ac*/ LSR         R3, R3, #5 
    /*0001b3b0*/ STR         R3, [R6, #3048]             @ 0xbe8 
    /*0001b3b4*/ BL          0x000000000001B3B4          @ VPSS_DRV_HwResourceCreate [R_ARM_CALL: .text+0x1b17c] 
    /*0001b3b8*/ SUBS        R5, R0, #0 
    /*0001b3bc*/ BNE         VPSS_DRV_CtxInit_x1b438
    /*0001b3c0*/ MVN         R3, #0 
    /*0001b3c4*/ STR         R3, [R4, #72]               @ 0x48 
    /*0001b3c8*/ STR         R3, [R4, #76]               @ 0x4c 
    /*0001b3cc*/ STR         R3, [R4, #144]              @ 0x90 
    /*0001b3d0*/ STR         R3, [R4, #148]              @ 0x94 
    /*0001b3d4*/ STR         R3, [R4, #216]              @ 0xd8 
    /*0001b3d8*/ STR         R3, [R4, #220]              @ 0xdc 
    /*0001b3dc*/ STR         R3, [R6, #3904]             @ 0xf40 
    /*0001b3e0*/ STR         R3, [R9, #144]              @ 0x90 
    VPSS_DRV_CtxInit_x1b3e4:
    /*0001b3e4*/ MOV         R0, R5 
    /*0001b3e8*/ ADD         SP, SP, #12 
    /*0001b3ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_CtxInit_x1b3f0:
    /*0001b3f0*/ STR         R7, [R6, #3168]             @ 0xc60 
    /*0001b3f4*/ STR         R7, [R6, #3172]             @ 0xc64 
    /*0001b3f8*/ LDR         R3, [R4, #4] 
    /*0001b3fc*/ LDR         R2, [SL, R8, LSL #2] 
    /*0001b400*/ STR         R3, [R6, #3176]             @ 0xc68 
    /*0001b404*/ ADD         R1, R2, #12288              @ 0x3000 
    /*0001b408*/ LDR         R0, [R4, #8] 
    /*0001b40c*/ ADD         R3, R2, #16384              @ 0x4000 
    /*0001b410*/ STR         R0, [R6, #3180]             @ 0xc6c 
    /*0001b414*/ LDR         R0, [R2, #12] 
    /*0001b418*/ STR         R0, [R3, #2724]             @ 0xaa4 
    /*0001b41c*/ LDR         R0, [R1, #3176]             @ 0xc68 
    /*0001b420*/ STR         R0, [R3, #2524]             @ 0x9dc 
    /*0001b424*/ LDR         R1, [R1, #3180]             @ 0xc6c 
    /*0001b428*/ STR         R1, [R3, #2528]             @ 0x9e0 
    /*0001b42c*/ LDR         R2, [R2, #16] 
    /*0001b430*/ STR         R2, [R3, #2552]             @ 0x9f8 
    /*0001b434*/ B           VPSS_DRV_CtxInit_x1b398
    VPSS_DRV_CtxInit_x1b438:
    /*0001b438*/ LDR         R0, [R6, #1724]             @ 0x6bc 
    /*0001b43c*/ BL          0x000000000001B43C          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001b440*/ LDR         R0, [R6, #1720]             @ 0x6b8 
    /*0001b444*/ BL          0x000000000001B444          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001b448*/ MOV         R0, R4 
    /*0001b44c*/ BL          0x000000000001B44C          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0001b450*/ MOV         R3, #0 
    /*0001b454*/ MOV         R0, R5 
    /*0001b458*/ STR         R3, [SL, R8, LSL #2] 
    /*0001b45c*/ ADD         SP, SP, #12 
    /*0001b460*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_CtxInit_x1b464:
    /*0001b464*/ MOVW        R5, #32780                  @ 0x800c 
    /*0001b468*/ MOVT        R5, #40967                  @ 0xa007 
    /*0001b46c*/ B           VPSS_DRV_CtxInit_x1b3e4
    VPSS_DRV_CtxInit_x1b470:
    /*0001b470*/ STR         R0, [SP, #4] 
    /*0001b474*/ MOVW        R5, #32780                  @ 0x800c 
    /*0001b478*/ LDR         R0, [R6, #1720]             @ 0x6b8 
    /*0001b47c*/ MOVT        R5, #40967                  @ 0xa007 
    /*0001b480*/ BL          0x000000000001B480          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001b484*/ MOV         R0, R4 
    /*0001b488*/ BL          0x000000000001B488          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0001b48c*/ LDR         R3, [SP, #4] 
    /*0001b490*/ STR         R3, [SL, R8, LSL #2] 
    /*0001b494*/ B           VPSS_DRV_CtxInit_x1b3e4
    VPSS_DRV_CtxInit_x1b498:
    /*0001b498*/ STR         R0, [SP, #4] 
    /*0001b49c*/ MOV         R0, R4 
    /*0001b4a0*/ BL          0x000000000001B4A0          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0001b4a4*/ LDR         R3, [SP, #4] 
    /*0001b4a8*/ MOVW        R5, #32780                  @ 0x800c 
    /*0001b4ac*/ MOVT        R5, #40967                  @ 0xa007 
    /*0001b4b0*/ STR         R3, [SL, R8, LSL #2] 
    /*0001b4b4*/ B           VPSS_DRV_CtxInit_x1b3e4
FUNC_END VPSS_DRV_CtxInit


FUNC_BEGIN VPSS_DRV_CtxDeinit
    /*0001b4b8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001b4bc*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001b4c0*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001b4c4*/ MOV         R5, R0 
    /*0001b4c8*/ LDR         R6, [R4, R0, LSL #2] 
    /*0001b4cc*/ BL          0x000000000001B4CC          @ VPSS_DRV_FreeResourceBuffer [R_ARM_CALL: .text+0x1b130] 
    /*0001b4d0*/ MOV         R0, R5 
    /*0001b4d4*/ ADD         R7, R6, #12288              @ 0x3000 
    /*0001b4d8*/ BL          0x000000000001B4D8          @ VPSS_DRV_FreeNrBuffer [R_ARM_CALL: .text+0x1afa4] 
    /*0001b4dc*/ MOV         R0, R5 
    /*0001b4e0*/ BL          0x000000000001B4E0          @ VPSS_DRV_CleanLowDelay [R_ARM_CALL: .text+0x1b1d4] 
    /*0001b4e4*/ LDR         R0, [R7, #1724]             @ 0x6bc 
    /*0001b4e8*/ BL          0x000000000001B4E8          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001b4ec*/ LDR         R0, [R7, #1720]             @ 0x6b8 
    /*0001b4f0*/ BL          0x000000000001B4F0          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001b4f4*/ MOV         R0, R6 
    /*0001b4f8*/ BL          0x000000000001B4F8          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0001b4fc*/ MOV         R3, #0 
    /*0001b500*/ MOV         R0, R3 
    /*0001b504*/ STR         R3, [R4, R5, LSL #2] 
    /*0001b508*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VPSS_DRV_CtxDeinit


FUNC_BEGIN VPSS_DRV_CommCrop
    /*0001b50c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001b510*/ SUB         SP, SP, #20 
    /*0001b514*/ LDR         R3, [R0] 
    /*0001b518*/ CMP         R3, #1 
    /*0001b51c*/ BHI         VPSS_DRV_CommCrop_x1b5d4
    /*0001b520*/ LDR         R3, [R0, #4] 
    /*0001b524*/ CMP         R3, #1 
    /*0001b528*/ BHI         VPSS_DRV_CommCrop_x1b5ec
    /*0001b52c*/ CMP         R3, #0 
    /*0001b530*/ BEQ         VPSS_DRV_CommCrop_x1b56c
    /*0001b534*/ LDR         R3, [R0, #8] 
    /*0001b538*/ TST         R3, #1 
    /*0001b53c*/ BNE         VPSS_DRV_CommCrop_x1b61c
    /*0001b540*/ LDR         R3, [R0, #12] 
    /*0001b544*/ TST         R3, #1 
    /*0001b548*/ BNE         VPSS_DRV_CommCrop_x1b648
    /*0001b54c*/ LDR         R3, [R0, #16] 
    /*0001b550*/ TST         R3, #1 
    /*0001b554*/ BNE         VPSS_DRV_CommCrop_x1b678
    /*0001b558*/ LDR         R3, [R0, #20] 
    /*0001b55c*/ ANDS        R0, R3, #1 
    /*0001b560*/ BNE         VPSS_DRV_CommCrop_x1b6c4
    VPSS_DRV_CommCrop_x1b564:
    /*0001b564*/ ADD         SP, SP, #20 
    /*0001b568*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CommCrop_x1b56c:
    /*0001b56c*/ LDR         R2, [R0, #8] 
    /*0001b570*/ CMP         R2, #1000                   @ 0x3e8 
    /*0001b574*/ BCS         VPSS_DRV_CommCrop_x1b604
    /*0001b578*/ LDR         R2, [R0, #12] 
    /*0001b57c*/ CMP         R2, #1000                   @ 0x3e8 
    /*0001b580*/ BCS         VPSS_DRV_CommCrop_x1b660
    /*0001b584*/ LDR         R2, [R0, #16] 
    /*0001b588*/ CMP         R2, #1000                   @ 0x3e8 
    /*0001b58c*/ BHI         VPSS_DRV_CommCrop_x1b6ac
    /*0001b590*/ LDR         R2, [R0, #20] 
    /*0001b594*/ CMP         R2, #1000                   @ 0x3e8 
    /*0001b598*/ MOVLS       R0, R3 
    /*0001b59c*/ BLS         VPSS_DRV_CommCrop_x1b564
    /*0001b5a0*/ STR         R2, [SP, #4] 
    /*0001b5a4*/ MOVW        R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6334] 
    /*0001b5a8*/ MOVT        R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6334] 
    /*0001b5ac*/ MOVW        R3, #2585                   @ 0xa19 
    /*0001b5b0*/ STR         R3, [SP] 
    VPSS_DRV_CommCrop_x1b5b4:
    /*0001b5b4*/ LDR         R3, [PC, #316]              @ 0x000000000001b6f8 
    /*0001b5b8*/ MOV         R1, #7 
    /*0001b5bc*/ MOV         R0, #3 
    /*0001b5c0*/ BL          0x000000000001B5C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b5c4*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001b5c8*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001b5cc*/ ADD         SP, SP, #20 
    /*0001b5d0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CommCrop_x1b5d4:
    /*0001b5d4*/ STR         R3, [SP, #4] 
    /*0001b5d8*/ MOVW        R2, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61f8] 
    /*0001b5dc*/ MOVW        R3, #2553                   @ 0x9f9 
    /*0001b5e0*/ MOVT        R2, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61f8] 
    /*0001b5e4*/ STR         R3, [SP] 
    /*0001b5e8*/ B           VPSS_DRV_CommCrop_x1b5b4
    VPSS_DRV_CommCrop_x1b5ec:
    /*0001b5ec*/ STR         R3, [SP, #4] 
    /*0001b5f0*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6228] 
    /*0001b5f4*/ MOVW        R3, #2559                   @ 0x9ff 
    /*0001b5f8*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6228] 
    /*0001b5fc*/ STR         R3, [SP] 
    /*0001b600*/ B           VPSS_DRV_CommCrop_x1b5b4
    VPSS_DRV_CommCrop_x1b604:
    /*0001b604*/ STR         R2, [SP, #4] 
    /*0001b608*/ MOVW        R3, #2567                   @ 0xa07 
    /*0001b60c*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6260] 
    /*0001b610*/ STR         R3, [SP] 
    /*0001b614*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6260] 
    /*0001b618*/ B           VPSS_DRV_CommCrop_x1b5b4
    VPSS_DRV_CommCrop_x1b61c:
    /*0001b61c*/ MOVW        R2, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6380] 
    /*0001b620*/ MOVT        R2, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6380] 
    /*0001b624*/ STR         R3, [SP, #4] 
    /*0001b628*/ MOVW        R3, #2593                   @ 0xa21 
    /*0001b62c*/ STR         R3, [SP] 
    VPSS_DRV_CommCrop_x1b630:
    /*0001b630*/ LDR         R3, [PC, #192]              @ 0x000000000001b6f8 
    /*0001b634*/ MOV         R1, #7 
    /*0001b638*/ MOV         R0, #3 
    /*0001b63c*/ BL          0x000000000001B63C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b640*/ MVN         R0, #0 
    /*0001b644*/ B           VPSS_DRV_CommCrop_x1b564
    VPSS_DRV_CommCrop_x1b648:
    /*0001b648*/ STR         R3, [SP, #4] 
    /*0001b64c*/ MOVW        R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x63b8] 
    /*0001b650*/ MOVW        R3, #2599                   @ 0xa27 
    /*0001b654*/ MOVT        R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x63b8] 
    /*0001b658*/ STR         R3, [SP] 
    /*0001b65c*/ B           VPSS_DRV_CommCrop_x1b630
    VPSS_DRV_CommCrop_x1b660:
    /*0001b660*/ STR         R2, [SP, #4] 
    /*0001b664*/ MOVW        R3, #2573                   @ 0xa0d 
    /*0001b668*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62a4] 
    /*0001b66c*/ STR         R3, [SP] 
    /*0001b670*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62a4] 
    /*0001b674*/ B           VPSS_DRV_CommCrop_x1b5b4
    VPSS_DRV_CommCrop_x1b678:
    /*0001b678*/ STR         R3, [SP, #4] 
    /*0001b67c*/ MOV         R2, #2 
    /*0001b680*/ MOVW        R3, #2605                   @ 0xa2d 
    /*0001b684*/ STR         R2, [SP, #8] 
    /*0001b688*/ STR         R3, [SP] 
    /*0001b68c*/ MOVW        R2, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x63f0] 
    /*0001b690*/ LDR         R3, [PC, #96]               @ 0x000000000001b6f8 
    /*0001b694*/ MOVT        R2, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x63f0] 
    /*0001b698*/ MOV         R1, #7 
    /*0001b69c*/ MOV         R0, #3 
    /*0001b6a0*/ BL          0x000000000001B6A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b6a4*/ MVN         R0, #0 
    /*0001b6a8*/ B           VPSS_DRV_CommCrop_x1b564
    VPSS_DRV_CommCrop_x1b6ac:
    /*0001b6ac*/ STR         R2, [SP, #4] 
    /*0001b6b0*/ MOVW        R3, #2579                   @ 0xa13 
    /*0001b6b4*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62e8] 
    /*0001b6b8*/ STR         R3, [SP] 
    /*0001b6bc*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62e8] 
    /*0001b6c0*/ B           VPSS_DRV_CommCrop_x1b5b4
    VPSS_DRV_CommCrop_x1b6c4:
    /*0001b6c4*/ STR         R3, [SP, #4] 
    /*0001b6c8*/ MOV         R2, #2 
    /*0001b6cc*/ MOVW        R3, #2611                   @ 0xa33 
    /*0001b6d0*/ STR         R2, [SP, #8] 
    /*0001b6d4*/ STR         R3, [SP] 
    /*0001b6d8*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6430] 
    /*0001b6dc*/ LDR         R3, [PC, #20]               @ 0x000000000001b6f8 
    /*0001b6e0*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6430] 
    /*0001b6e4*/ MOV         R1, #7 
    /*0001b6e8*/ MOV         R0, #3 
    /*0001b6ec*/ BL          0x000000000001B6EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b6f0*/ MVN         R0, #0 
    /*0001b6f4*/ B           VPSS_DRV_CommCrop_x1b564
    /*0001b6f8*/ ANDEQ       R0, R0, R4, ASR #31 
FUNC_END VPSS_DRV_CommCrop


FUNC_BEGIN VPSS_DRV_CheckCropPosition
    /*0001b6fc*/ LDR         IP, [R0, #4] 
    /*0001b700*/ CMP         IP, #1 
    /*0001b704*/ BEQ         VPSS_DRV_CheckCropPosition_x1b710
    /*0001b708*/ MOV         R0, #0 
    /*0001b70c*/ BX          LR 
    VPSS_DRV_CheckCropPosition_x1b710:
    /*0001b710*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001b714*/ SUB         SP, SP, #20 
    /*0001b718*/ LDR         LR, [R0, #16] 
    /*0001b71c*/ CMP         LR, #63                     @ 0x3f 
    /*0001b720*/ MOVHI       IP, #0 
    /*0001b724*/ MOVLS       IP, #1 
    /*0001b728*/ CMP         LR, R1 
    /*0001b72c*/ ORRHI       IP, IP, #1 
    /*0001b730*/ CMP         IP, #0 
    /*0001b734*/ BNE         VPSS_DRV_CheckCropPosition_x1b790
    /*0001b738*/ LDR         IP, [R0, #20] 
    /*0001b73c*/ CMP         IP, #63                     @ 0x3f 
    /*0001b740*/ MOVHI       R1, #0 
    /*0001b744*/ MOVLS       R1, #1 
    /*0001b748*/ CMP         IP, R2 
    /*0001b74c*/ ORRHI       R1, R1, #1 
    /*0001b750*/ CMP         R1, #0 
    /*0001b754*/ BNE         VPSS_DRV_CheckCropPosition_x1b7cc
    /*0001b758*/ LDR         R2, [R0, #8] 
    /*0001b75c*/ CMP         R2, #0 
    /*0001b760*/ BLT         VPSS_DRV_CheckCropPosition_x1b7f0
    /*0001b764*/ CMP         R3, R2 
    /*0001b768*/ BCC         VPSS_DRV_CheckCropPosition_x1b7f0
    /*0001b76c*/ LDR         R3, [R0, #12] 
    /*0001b770*/ CMP         R3, #0 
    /*0001b774*/ BLT         VPSS_DRV_CheckCropPosition_x1b824
    /*0001b778*/ LDR         R2, [SP, #24] 
    /*0001b77c*/ CMP         R2, R3 
    /*0001b780*/ MOVCS       R0, R1 
    /*0001b784*/ BCC         VPSS_DRV_CheckCropPosition_x1b824
    VPSS_DRV_CheckCropPosition_x1b788:
    /*0001b788*/ ADD         SP, SP, #20 
    /*0001b78c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckCropPosition_x1b790:
    /*0001b790*/ MOV         R2, #64                     @ 0x40 
    /*0001b794*/ STR         R2, [SP, #8] 
    /*0001b798*/ MOVW        R2, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6470] 
    /*0001b79c*/ MOVT        R2, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6470] 
    /*0001b7a0*/ MOVW        R3, #2626                   @ 0xa42 
    /*0001b7a4*/ STR         R1, [SP, #12] 
    /*0001b7a8*/ STR         LR, [SP, #4] 
    /*0001b7ac*/ STR         R3, [SP] 
    VPSS_DRV_CheckCropPosition_x1b7b0:
    /*0001b7b0*/ LDR         R3, [PC, #140]              @ 0x000000000001b844 
    /*0001b7b4*/ MOV         R1, #7 
    /*0001b7b8*/ MOV         R0, #3 
    /*0001b7bc*/ BL          0x000000000001B7BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b7c0*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001b7c4*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001b7c8*/ B           VPSS_DRV_CheckCropPosition_x1b788
    VPSS_DRV_CheckCropPosition_x1b7cc:
    /*0001b7cc*/ STR         R2, [SP, #12] 
    /*0001b7d0*/ MOVW        R3, #2633                   @ 0xa49 
    /*0001b7d4*/ MOV         R2, #64                     @ 0x40 
    /*0001b7d8*/ STR         IP, [SP, #4] 
    /*0001b7dc*/ STR         R2, [SP, #8] 
    /*0001b7e0*/ MOVW        R2, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x64b0] 
    /*0001b7e4*/ STR         R3, [SP] 
    /*0001b7e8*/ MOVT        R2, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x64b0] 
    /*0001b7ec*/ B           VPSS_DRV_CheckCropPosition_x1b7b0
    VPSS_DRV_CheckCropPosition_x1b7f0:
    /*0001b7f0*/ STR         R2, [SP, #4] 
    /*0001b7f4*/ MOVW        R2, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x64f0] 
    /*0001b7f8*/ MOVT        R2, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x64f0] 
    /*0001b7fc*/ STR         R3, [SP, #8] 
    /*0001b800*/ MOV         R3, #2640                   @ 0xa50 
    /*0001b804*/ STR         R3, [SP] 
    VPSS_DRV_CheckCropPosition_x1b808:
    /*0001b808*/ LDR         R3, [PC, #52]               @ 0x000000000001b844 
    /*0001b80c*/ MOV         R1, #7 
    /*0001b810*/ MOV         R0, #3 
    /*0001b814*/ BL          0x000000000001B814          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b818*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001b81c*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001b820*/ B           VPSS_DRV_CheckCropPosition_x1b788
    VPSS_DRV_CheckCropPosition_x1b824:
    /*0001b824*/ LDR         R2, [SP, #24] 
    /*0001b828*/ MOVW        R1, #2647                   @ 0xa57 
    /*0001b82c*/ STR         R3, [SP, #4] 
    /*0001b830*/ STR         R1, [SP] 
    /*0001b834*/ STR         R2, [SP, #8] 
    /*0001b838*/ MOVW        R2, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6534] 
    /*0001b83c*/ MOVT        R2, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6534] 
    /*0001b840*/ B           VPSS_DRV_CheckCropPosition_x1b808
    /*0001b844*/ LDRDEQ      R0, [R0], -R8 
FUNC_END VPSS_DRV_CheckCropPosition


FUNC_BEGIN VPSS_DRV_CheckGrpCropCfg
    /*0001b848*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001b84c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001b850*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001b854*/ MOV         R0, R1 
    /*0001b858*/ LDR         R7, [R3, #64]               @ 0x40 
    /*0001b85c*/ SUB         SP, SP, #8 
    /*0001b860*/ LDR         R8, [R3, #68]               @ 0x44 
    /*0001b864*/ MOV         R4, R1 
    /*0001b868*/ LDR         R3, [R1, #16] 
    /*0001b86c*/ LDR         IP, [R1, #20] 
    /*0001b870*/ SUB         R5, R7, R3 
    /*0001b874*/ SUB         R6, R8, IP 
    /*0001b878*/ BL          0x000000000001B878          @ VPSS_DRV_CommCrop [R_ARM_CALL: .text+0x1b50c] 
    /*0001b87c*/ CMP         R0, #0 
    /*0001b880*/ BNE         VPSS_DRV_CheckGrpCropCfg_x1b8a4
    /*0001b884*/ STR         R6, [SP] 
    /*0001b888*/ MOV         R3, R5 
    /*0001b88c*/ MOV         R2, R8 
    /*0001b890*/ MOV         R1, R7 
    /*0001b894*/ MOV         R0, R4 
    /*0001b898*/ BL          0x000000000001B898          @ VPSS_DRV_CheckCropPosition [R_ARM_CALL: .text+0x1b6fc] 
    VPSS_DRV_CheckGrpCropCfg_x1b89c:
    /*0001b89c*/ ADD         SP, SP, #8 
    /*0001b8a0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_CheckGrpCropCfg_x1b8a4:
    /*0001b8a4*/ MVN         R0, #0 
    /*0001b8a8*/ B           VPSS_DRV_CheckGrpCropCfg_x1b89c
FUNC_END VPSS_DRV_CheckGrpCropCfg


FUNC_BEGIN VPSS_DRV_CheckExtChnCrop
    /*0001b8ac*/ PUSH        {R4, LR} 
    /*0001b8b0*/ MOV         R0, R2 
    /*0001b8b4*/ SUB         SP, SP, #8 
    /*0001b8b8*/ MOV         R4, R2 
    /*0001b8bc*/ BL          0x000000000001B8BC          @ VPSS_DRV_CommCrop [R_ARM_CALL: .text+0x1b50c] 
    /*0001b8c0*/ CMP         R0, #0 
    /*0001b8c4*/ BNE         VPSS_DRV_CheckExtChnCrop_x1b8e8
    /*0001b8c8*/ MOV         R3, #8192                   @ 0x2000 
    /*0001b8cc*/ MOV         R0, R4 
    /*0001b8d0*/ STR         R3, [SP] 
    /*0001b8d4*/ MOV         R2, R3 
    /*0001b8d8*/ MOV         R1, R3 
    /*0001b8dc*/ BL          0x000000000001B8DC          @ VPSS_DRV_CheckCropPosition [R_ARM_CALL: .text+0x1b6fc] 
    VPSS_DRV_CheckExtChnCrop_x1b8e0:
    /*0001b8e0*/ ADD         SP, SP, #8 
    /*0001b8e4*/ POP         {R4, PC} 
    VPSS_DRV_CheckExtChnCrop_x1b8e8:
    /*0001b8e8*/ MVN         R0, #0 
    /*0001b8ec*/ B           VPSS_DRV_CheckExtChnCrop_x1b8e0
FUNC_END VPSS_DRV_CheckExtChnCrop


FUNC_BEGIN VPSS_DRV_CheckChnCropCfg
    VPSS_DRV_CheckChnCropCfg_x1b8f0:
    /*0001b8f0*/ B           VPSS_DRV_CheckChnCropCfg_x1b8f0@ VPSS_DRV_CheckExtChnCrop [R_ARM_JUMP24: .text+0x1b8ac] 
FUNC_END VPSS_DRV_CheckChnCropCfg


FUNC_BEGIN VPSS_DRV_CheckFrameRate
    /*0001b8f4*/ CMN         R0, #1 
    /*0001b8f8*/ MOVNE       R3, #0 
    /*0001b8fc*/ MOVEQ       R3, #1 
    /*0001b900*/ CMN         R1, #1 
    /*0001b904*/ MOVNE       IP, #0 
    /*0001b908*/ MOVEQ       IP, #1 
    /*0001b90c*/ TST         R3, IP 
    /*0001b910*/ BNE         VPSS_DRV_CheckFrameRate_x1b95c
    /*0001b914*/ ORR         R3, R3, IP 
    /*0001b918*/ MOV         R2, R0 
    /*0001b91c*/ CMP         R0, R1 
    /*0001b920*/ MOVEQ       R0, #0 
    /*0001b924*/ ANDNE       R0, R3, #1 
    /*0001b928*/ CMP         R0, #0 
    /*0001b92c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001b930*/ SUB         SP, SP, #20 
    /*0001b934*/ BNE         VPSS_DRV_CheckFrameRate_x1b964
    /*0001b938*/ SUB         R3, R2, #1 
    /*0001b93c*/ CMP         R3, #239                    @ 0xef 
    /*0001b940*/ BHI         VPSS_DRV_CheckFrameRate_x1b998
    /*0001b944*/ CMP         R1, #0 
    /*0001b948*/ BLT         VPSS_DRV_CheckFrameRate_x1b9fc
    /*0001b94c*/ CMP         R2, R1 
    /*0001b950*/ BLT         VPSS_DRV_CheckFrameRate_x1b9cc
    VPSS_DRV_CheckFrameRate_x1b954:
    /*0001b954*/ ADD         SP, SP, #20 
    /*0001b958*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckFrameRate_x1b95c:
    /*0001b95c*/ MOV         R0, #0 
    /*0001b960*/ BX          LR 
    VPSS_DRV_CheckFrameRate_x1b964:
    /*0001b964*/ STR         R2, [SP, #4] 
    /*0001b968*/ MOVW        R3, #2733                   @ 0xaad 
    /*0001b96c*/ MOV         R2, #240                    @ 0xf0 
    /*0001b970*/ STR         R3, [SP] 
    /*0001b974*/ STR         R2, [SP, #8] 
    /*0001b978*/ MOV         R1, #7 
    /*0001b97c*/ MOVW        R2, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6578] 
    /*0001b980*/ LDR         R3, [PC, #160]              @ 0x000000000001ba28 
    /*0001b984*/ MOVT        R2, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6578] 
    /*0001b988*/ MOV         R0, #3 
    /*0001b98c*/ BL          0x000000000001B98C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b990*/ MVN         R0, #0 
    /*0001b994*/ B           VPSS_DRV_CheckFrameRate_x1b954
    VPSS_DRV_CheckFrameRate_x1b998:
    /*0001b998*/ STR         R2, [SP, #4] 
    /*0001b99c*/ MOVW        R3, #2739                   @ 0xab3 
    /*0001b9a0*/ MOV         R2, #240                    @ 0xf0 
    /*0001b9a4*/ STR         R3, [SP] 
    /*0001b9a8*/ STR         R2, [SP, #8] 
    /*0001b9ac*/ MOV         R1, #7 
    /*0001b9b0*/ MOVW        R2, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x65e0] 
    /*0001b9b4*/ LDR         R3, [PC, #108]              @ 0x000000000001ba28 
    /*0001b9b8*/ MOVT        R2, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x65e0] 
    /*0001b9bc*/ MOV         R0, #3 
    /*0001b9c0*/ BL          0x000000000001B9C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b9c4*/ MVN         R0, #0 
    /*0001b9c8*/ B           VPSS_DRV_CheckFrameRate_x1b954
    VPSS_DRV_CheckFrameRate_x1b9cc:
    /*0001b9cc*/ STR         R1, [SP, #8] 
    /*0001b9d0*/ MOVW        R3, #2753                   @ 0xac1 
    /*0001b9d4*/ STR         R2, [SP, #4] 
    /*0001b9d8*/ MOV         R1, #7 
    /*0001b9dc*/ STR         R3, [SP] 
    /*0001b9e0*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6668] 
    /*0001b9e4*/ LDR         R3, [PC, #60]               @ 0x000000000001ba28 
    /*0001b9e8*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6668] 
    /*0001b9ec*/ MOV         R0, #3 
    /*0001b9f0*/ BL          0x000000000001B9F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b9f4*/ MVN         R0, #0 
    /*0001b9f8*/ B           VPSS_DRV_CheckFrameRate_x1b954
    VPSS_DRV_CheckFrameRate_x1b9fc:
    /*0001b9fc*/ STR         R1, [SP, #4] 
    /*0001ba00*/ MOVW        R3, #2746                   @ 0xaba 
    /*0001ba04*/ MOVW        R2, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6620] 
    /*0001ba08*/ STR         R3, [SP] 
    /*0001ba0c*/ MOVT        R2, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6620] 
    /*0001ba10*/ LDR         R3, [PC, #16]               @ 0x000000000001ba28 
    /*0001ba14*/ MOV         R1, #7 
    /*0001ba18*/ MOV         R0, #3 
    /*0001ba1c*/ BL          0x000000000001BA1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ba20*/ MVN         R0, #0 
    /*0001ba24*/ B           VPSS_DRV_CheckFrameRate_x1b954
    /*0001ba28*/ STRDEQ      R0, [R0], -R4 
FUNC_END VPSS_DRV_CheckFrameRate


FUNC_BEGIN VPSS_DRV_CheckGrpID
    /*0001ba2c*/ PUSH        {R4, LR} 
    /*0001ba30*/ MOV         R4, R0 
    /*0001ba34*/ SUB         SP, SP, #8 
    /*0001ba38*/ MOV         R0, #0 
    /*0001ba3c*/ BL          0x000000000001BA3C          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0001ba40*/ ADDS        R3, R4, #0 
    /*0001ba44*/ MOVNE       R3, #1 
    /*0001ba48*/ CMP         R0, #1 
    /*0001ba4c*/ MOVNE       R3, #0 
    /*0001ba50*/ CMP         R3, #0 
    /*0001ba54*/ MOVEQ       R0, R3 
    /*0001ba58*/ BNE         VPSS_DRV_CheckGrpID_x1ba64
    VPSS_DRV_CheckGrpID_x1ba5c:
    /*0001ba5c*/ ADD         SP, SP, #8 
    /*0001ba60*/ POP         {R4, PC} 
    VPSS_DRV_CheckGrpID_x1ba64:
    /*0001ba64*/ MOVW        R3, #2799                   @ 0xaef 
    /*0001ba68*/ MOVW        R2, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x66c0] 
    /*0001ba6c*/ STR         R3, [SP] 
    /*0001ba70*/ MOVT        R2, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x66c0] 
    /*0001ba74*/ LDR         R3, [PC, #16]               @ 0x000000000001ba8c 
    /*0001ba78*/ MOV         R1, #7 
    /*0001ba7c*/ MOV         R0, #3 
    /*0001ba80*/ BL          0x000000000001BA80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ba84*/ MVN         R0, #0 
    /*0001ba88*/ B           VPSS_DRV_CheckGrpID_x1ba5c
    /*0001ba8c*/ ANDEQ       R1, R0, IP 
FUNC_END VPSS_DRV_CheckGrpID


FUNC_BEGIN VPSS_DRV_CheckGrpAttr
    /*0001ba90*/ PUSH        {R4, R5, R6, LR} 
    /*0001ba94*/ MOV         R4, R1 
    /*0001ba98*/ SUB         SP, SP, #16 
    /*0001ba9c*/ MOV         R6, R0 
    /*0001baa0*/ LDR         R1, [R1, #20] 
    /*0001baa4*/ LDR         R0, [R4, #16] 
    /*0001baa8*/ BL          0x000000000001BAA8          @ VPSS_DRV_CheckFrameRate [R_ARM_CALL: .text+0x1b8f4] 
    /*0001baac*/ SUBS        R5, R0, #0 
    /*0001bab0*/ BNE         VPSS_DRV_CheckGrpAttr_x1bc08
    /*0001bab4*/ LDR         R3, [R4, #12] 
    /*0001bab8*/ CMP         R3, #0 
    /*0001babc*/ BNE         VPSS_DRV_CheckGrpAttr_x1bc80
    /*0001bac0*/ LDR         R3, [R4, #8] 
    /*0001bac4*/ SUB         R2, R3, #25 
    /*0001bac8*/ CMP         R3, #39                     @ 0x27 
    /*0001bacc*/ CMPNE       R2, #1 
    /*0001bad0*/ MOVWHI      R3, #2827                   @ 0xb0b 
    /*0001bad4*/ MOVWHI      R2, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6748] 
    /*0001bad8*/ STRHI       R3, [SP] 
    /*0001badc*/ MOVTHI      R2, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6748] 
    /*0001bae0*/ BHI         VPSS_DRV_CheckGrpAttr_x1bbc8
    /*0001bae4*/ MOV         R0, R6 
    /*0001bae8*/ BL          0x000000000001BAE8          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0001baec*/ LDR         R1, [R4] 
    /*0001baf0*/ CMP         R0, #1 
    /*0001baf4*/ BEQ         VPSS_DRV_CheckGrpAttr_x1bb64
    /*0001baf8*/ CMP         R1, #63                     @ 0x3f 
    /*0001bafc*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001bb00*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001bb04*/ LDRLS       R3, [R3, #64]               @ 0x40 
    /*0001bb08*/ BLS         VPSS_DRV_CheckGrpAttr_x1bc58
    /*0001bb0c*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001bb10*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001bb14*/ LDR         R3, [R2, #64]               @ 0x40 
    /*0001bb18*/ CMP         R1, R3 
    /*0001bb1c*/ BHI         VPSS_DRV_CheckGrpAttr_x1bc58
    VPSS_DRV_CheckGrpAttr_x1bb20:
    /*0001bb20*/ LDR         R3, [R4, #4] 
    /*0001bb24*/ LDR         R2, [R2, #68]               @ 0x44 
    /*0001bb28*/ CMP         R3, #63                     @ 0x3f 
    /*0001bb2c*/ BLS         VPSS_DRV_CheckGrpAttr_x1bc1c
    /*0001bb30*/ CMP         R3, R2 
    /*0001bb34*/ BHI         VPSS_DRV_CheckGrpAttr_x1bc1c
    /*0001bb38*/ TST         R1, #1 
    /*0001bb3c*/ BNE         VPSS_DRV_CheckGrpAttr_x1bc98
    /*0001bb40*/ ANDS        R2, R3, #1 
    /*0001bb44*/ BNE         VPSS_DRV_CheckGrpAttr_x1bcc8
    /*0001bb48*/ LDR         R3, [R4, #24] 
    /*0001bb4c*/ CMP         R3, #1 
    /*0001bb50*/ BHI         VPSS_DRV_CheckGrpAttr_x1bbe4
    /*0001bb54*/ BEQ         VPSS_DRV_CheckGrpAttr_x1bb7c
    VPSS_DRV_CheckGrpAttr_x1bb58:
    /*0001bb58*/ MOV         R0, R5 
    /*0001bb5c*/ ADD         SP, SP, #16 
    /*0001bb60*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_CheckGrpAttr_x1bb64:
    /*0001bb64*/ SUB         R3, R1, #64                 @ 0x40 
    /*0001bb68*/ CMP         R3, #1984                   @ 0x7c0 
    /*0001bb6c*/ BHI         VPSS_DRV_CheckGrpAttr_x1bd08
    /*0001bb70*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001bb74*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001bb78*/ B           VPSS_DRV_CheckGrpAttr_x1bb20
    VPSS_DRV_CheckGrpAttr_x1bb7c:
    /*0001bb7c*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0001bb80*/ CMP         R3, #1 
    /*0001bb84*/ BHI         VPSS_DRV_CheckGrpAttr_x1bcec
    /*0001bb88*/ LDR         R3, [R4, #32] 
    /*0001bb8c*/ BICS        R1, R3, #4 
    /*0001bb90*/ BNE         VPSS_DRV_CheckGrpAttr_x1bd48
    /*0001bb94*/ LDR         R3, [R4, #28] 
    /*0001bb98*/ CMP         R3, #2 
    /*0001bb9c*/ BHI         VPSS_DRV_CheckGrpAttr_x1bd70
    /*0001bba0*/ CMP         R3, #1 
    /*0001bba4*/ BNE         VPSS_DRV_CheckGrpAttr_x1bb58
    /*0001bba8*/ MOV         R0, R6 
    /*0001bbac*/ BL          0x000000000001BBAC          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0001bbb0*/ CMP         R0, #0 
    /*0001bbb4*/ BEQ         VPSS_DRV_CheckGrpAttr_x1bb58
    /*0001bbb8*/ MOVW        R2, #0                      @ .LC114 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x69cc] 
    /*0001bbbc*/ MOVT        R2, #0                      @ .LC114 [R_ARM_MOVT_ABS: .rodata.str1.4+0x69cc] 
    /*0001bbc0*/ MOVW        R3, #2886                   @ 0xb46 
    /*0001bbc4*/ STR         R3, [SP] 
    VPSS_DRV_CheckGrpAttr_x1bbc8:
    /*0001bbc8*/ LDR         R3, [PC, #444]              @ 0x000000000001bd8c 
    /*0001bbcc*/ MOV         R1, #7 
    /*0001bbd0*/ MOV         R0, #3 
    /*0001bbd4*/ MOVW        R5, #32771                  @ 0x8003 
    /*0001bbd8*/ BL          0x000000000001BBD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001bbdc*/ MOVT        R5, #40967                  @ 0xa007 
    /*0001bbe0*/ B           VPSS_DRV_CheckGrpAttr_x1bb58
    VPSS_DRV_CheckGrpAttr_x1bbe4:
    /*0001bbe4*/ MOVW        R2, #0                      @ .LC110 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68d4] 
    /*0001bbe8*/ MOVT        R2, #0                      @ .LC110 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68d4] 
    /*0001bbec*/ STR         R3, [SP, #4] 
    /*0001bbf0*/ MOVW        R3, #2871                   @ 0xb37 
    /*0001bbf4*/ STR         R3, [SP] 
    VPSS_DRV_CheckGrpAttr_x1bbf8:
    /*0001bbf8*/ LDR         R3, [PC, #396]              @ 0x000000000001bd8c 
    VPSS_DRV_CheckGrpAttr_x1bbfc:
    /*0001bbfc*/ MOV         R1, #7 
    /*0001bc00*/ MOV         R0, #3 
    /*0001bc04*/ BL          0x000000000001BC04          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_DRV_CheckGrpAttr_x1bc08:
    /*0001bc08*/ MOVW        R5, #32771                  @ 0x8003 
    /*0001bc0c*/ MOVT        R5, #40967                  @ 0xa007 
    /*0001bc10*/ MOV         R0, R5 
    /*0001bc14*/ ADD         SP, SP, #16 
    /*0001bc18*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_CheckGrpAttr_x1bc1c:
    /*0001bc1c*/ STR         R3, [SP, #4] 
    /*0001bc20*/ MOVW        R3, #2853                   @ 0xb25 
    /*0001bc24*/ STR         R3, [SP] 
    /*0001bc28*/ LDR         R3, [PC, #348]              @ 0x000000000001bd8c 
    /*0001bc2c*/ STR         R2, [SP, #12] 
    /*0001bc30*/ MOV         R2, #64                     @ 0x40 
    /*0001bc34*/ STR         R2, [SP, #8] 
    /*0001bc38*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6820] 
    /*0001bc3c*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6820] 
    VPSS_DRV_CheckGrpAttr_x1bc40:
    /*0001bc40*/ MOV         R1, #7 
    /*0001bc44*/ MOV         R0, #3 
    /*0001bc48*/ MOVW        R5, #32771                  @ 0x8003 
    /*0001bc4c*/ BL          0x000000000001BC4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001bc50*/ MOVT        R5, #40967                  @ 0xa007 
    /*0001bc54*/ B           VPSS_DRV_CheckGrpAttr_x1bb58
    VPSS_DRV_CheckGrpAttr_x1bc58:
    /*0001bc58*/ MOV         R2, #64                     @ 0x40 
    /*0001bc5c*/ STR         R3, [SP, #12] 
    /*0001bc60*/ STR         R2, [SP, #8] 
    /*0001bc64*/ MOVW        R3, #2845                   @ 0xb1d 
    /*0001bc68*/ MOVW        R2, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x67d0] 
    /*0001bc6c*/ STR         R3, [SP] 
    /*0001bc70*/ STR         R1, [SP, #4] 
    /*0001bc74*/ MOVT        R2, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x67d0] 
    /*0001bc78*/ LDR         R3, [PC, #268]              @ 0x000000000001bd8c 
    /*0001bc7c*/ B           VPSS_DRV_CheckGrpAttr_x1bc40
    VPSS_DRV_CheckGrpAttr_x1bc80:
    /*0001bc80*/ STR         R3, [SP, #4] 
    /*0001bc84*/ MOVW        R2, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6708] 
    /*0001bc88*/ MOVW        R3, #2819                   @ 0xb03 
    /*0001bc8c*/ MOVT        R2, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6708] 
    /*0001bc90*/ STR         R3, [SP] 
    /*0001bc94*/ B           VPSS_DRV_CheckGrpAttr_x1bbf8
    VPSS_DRV_CheckGrpAttr_x1bc98:
    /*0001bc98*/ MOVW        R3, #2859                   @ 0xb2b 
    /*0001bc9c*/ STR         R3, [SP] 
    /*0001bca0*/ LDR         R3, [PC, #228]              @ 0x000000000001bd8c 
    /*0001bca4*/ MOV         R2, #2 
    /*0001bca8*/ STR         R2, [SP, #8] 
    /*0001bcac*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x685c] 
    /*0001bcb0*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x685c] 
    /*0001bcb4*/ STR         R1, [SP, #4] 
    VPSS_DRV_CheckGrpAttr_x1bcb8:
    /*0001bcb8*/ MOV         R1, #7 
    /*0001bcbc*/ MOV         R0, #3 
    /*0001bcc0*/ BL          0x000000000001BCC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001bcc4*/ B           VPSS_DRV_CheckGrpAttr_x1bc08
    VPSS_DRV_CheckGrpAttr_x1bcc8:
    /*0001bcc8*/ MOV         R2, #2 
    /*0001bccc*/ STR         R3, [SP, #4] 
    /*0001bcd0*/ STR         R2, [SP, #8] 
    /*0001bcd4*/ MOVW        R3, #2865                   @ 0xb31 
    /*0001bcd8*/ MOVW        R2, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6898] 
    /*0001bcdc*/ STR         R3, [SP] 
    /*0001bce0*/ MOVT        R2, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6898] 
    /*0001bce4*/ LDR         R3, [PC, #160]              @ 0x000000000001bd8c 
    /*0001bce8*/ B           VPSS_DRV_CheckGrpAttr_x1bcb8
    VPSS_DRV_CheckGrpAttr_x1bcec:
    /*0001bcec*/ STR         R3, [SP, #4] 
    /*0001bcf0*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6900] 
    /*0001bcf4*/ MOVW        R3, #2766                   @ 0xace 
    /*0001bcf8*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6900] 
    /*0001bcfc*/ STR         R3, [SP] 
    /*0001bd00*/ LDR         R3, [PC, #136]              @ 0x000000000001bd90 
    /*0001bd04*/ B           VPSS_DRV_CheckGrpAttr_x1bbfc
    VPSS_DRV_CheckGrpAttr_x1bd08:
    /*0001bd08*/ STR         R1, [SP, #4] 
    /*0001bd0c*/ MOV         R2, #2048                   @ 0x800 
    /*0001bd10*/ MOV         R3, #64                     @ 0x40 
    /*0001bd14*/ STR         R2, [SP, #12] 
    /*0001bd18*/ STR         R3, [SP, #8] 
    /*0001bd1c*/ MOVW        R2, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6784] 
    /*0001bd20*/ MOVW        R3, #2836                   @ 0xb14 
    /*0001bd24*/ MOVT        R2, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6784] 
    /*0001bd28*/ STR         R3, [SP] 
    /*0001bd2c*/ MOV         R1, #7 
    /*0001bd30*/ LDR         R3, [PC, #84]               @ 0x000000000001bd8c 
    /*0001bd34*/ MOV         R0, #3 
    /*0001bd38*/ MOVW        R5, #32771                  @ 0x8003 
    /*0001bd3c*/ BL          0x000000000001BD3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001bd40*/ MOVT        R5, #40967                  @ 0xa007 
    /*0001bd44*/ B           VPSS_DRV_CheckGrpAttr_x1bb58
    VPSS_DRV_CheckGrpAttr_x1bd48:
    /*0001bd48*/ STR         R2, [SP, #8] 
    /*0001bd4c*/ MOV         R2, #4 
    /*0001bd50*/ STR         R3, [SP, #4] 
    /*0001bd54*/ MOVW        R3, #2776                   @ 0xad8 
    /*0001bd58*/ STR         R2, [SP, #12] 
    /*0001bd5c*/ MOVW        R2, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6944] 
    /*0001bd60*/ STR         R3, [SP] 
    /*0001bd64*/ MOVT        R2, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6944] 
    /*0001bd68*/ LDR         R3, [PC, #32]               @ 0x000000000001bd90 
    /*0001bd6c*/ B           VPSS_DRV_CheckGrpAttr_x1bc40
    VPSS_DRV_CheckGrpAttr_x1bd70:
    /*0001bd70*/ STR         R3, [SP, #4] 
    /*0001bd74*/ MOVW        R2, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x698c] 
    /*0001bd78*/ MOVW        R3, #2785                   @ 0xae1 
    /*0001bd7c*/ MOVT        R2, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x698c] 
    /*0001bd80*/ STR         R3, [SP] 
    /*0001bd84*/ LDR         R3, [PC, #4]                @ 0x000000000001bd90 
    /*0001bd88*/ B           VPSS_DRV_CheckGrpAttr_x1bbfc
    /*0001bd8c*/ ANDEQ       R1, R0, R0, LSR #32 
    /*0001bd90*/ ANDEQ       R1, R0, R8, LSR R0 
FUNC_END VPSS_DRV_CheckGrpAttr


FUNC_BEGIN VPSS_DRV_CheckGrpStaticAttr
    /*0001bd94*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001bd98*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001bd9c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001bda0*/ SUB         SP, SP, #12 
    /*0001bda4*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001bda8*/ LDR         R0, [R1, #4] 
    /*0001bdac*/ LDR         R2, [R3, #8] 
    /*0001bdb0*/ CMP         R0, R2 
    /*0001bdb4*/ MOVWNE      R3, #2904                   @ 0xb58 
    /*0001bdb8*/ MOVWNE      R2, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a08] 
    /*0001bdbc*/ STRNE       R3, [SP] 
    /*0001bdc0*/ MOVTNE      R2, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a08] 
    /*0001bdc4*/ BNE         VPSS_DRV_CheckGrpStaticAttr_x1be94
    /*0001bdc8*/ LDR         R0, [R1] 
    /*0001bdcc*/ LDR         R2, [R3, #4] 
    /*0001bdd0*/ CMP         R0, R2 
    /*0001bdd4*/ BNE         VPSS_DRV_CheckGrpStaticAttr_x1be84
    /*0001bdd8*/ LDR         R2, [R3, #12] 
    /*0001bddc*/ LDR         R0, [R1, #8] 
    /*0001bde0*/ CMP         R0, R2 
    /*0001bde4*/ MOVWNE      R3, #2916                   @ 0xb64 
    /*0001bde8*/ MOVWNE      R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a6c] 
    /*0001bdec*/ STRNE       R3, [SP] 
    /*0001bdf0*/ MOVTNE      R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a6c] 
    /*0001bdf4*/ BNE         VPSS_DRV_CheckGrpStaticAttr_x1be94
    /*0001bdf8*/ LDR         R2, [R3, #16] 
    /*0001bdfc*/ LDR         R0, [R1, #12] 
    /*0001be00*/ CMP         R0, R2 
    /*0001be04*/ MOVWNE      R3, #2922                   @ 0xb6a 
    /*0001be08*/ MOVWNE      R2, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6aa8] 
    /*0001be0c*/ STRNE       R3, [SP] 
    /*0001be10*/ MOVTNE      R2, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6aa8] 
    /*0001be14*/ BNE         VPSS_DRV_CheckGrpStaticAttr_x1be94
    /*0001be18*/ LDR         R2, [R1, #32] 
    /*0001be1c*/ LDR         R0, [R3, #36]               @ 0x24 
    /*0001be20*/ CMP         R2, R0 
    /*0001be24*/ MOVNE       R3, #2928                   @ 0xb70 
    /*0001be28*/ MOVWNE      R2, #0                      @ .LC119 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ae4] 
    /*0001be2c*/ STRNE       R3, [SP] 
    /*0001be30*/ MOVTNE      R2, #0                      @ .LC119 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ae4] 
    /*0001be34*/ BNE         VPSS_DRV_CheckGrpStaticAttr_x1be94
    /*0001be38*/ LDR         R0, [R3, #984]              @ 0x3d8 
    /*0001be3c*/ CMP         R0, #1 
    /*0001be40*/ CMPEQ       R2, #0 
    /*0001be44*/ MOVEQ       R0, #1 
    /*0001be48*/ MOVNE       R0, #0 
    /*0001be4c*/ BNE         VPSS_DRV_CheckGrpStaticAttr_x1be7c
    /*0001be50*/ LDR         R0, [R1, #36]               @ 0x24 
    /*0001be54*/ CMP         R0, #0 
    /*0001be58*/ BEQ         VPSS_DRV_CheckGrpStaticAttr_x1be7c
    /*0001be5c*/ LDR         R3, [R3, #40]               @ 0x28 
    /*0001be60*/ CMP         R3, #0 
    /*0001be64*/ MOVWEQ      R3, #2938                   @ 0xb7a 
    /*0001be68*/ MOVWEQ      R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b24] 
    /*0001be6c*/ STREQ       R3, [SP] 
    /*0001be70*/ MOVTEQ      R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b24] 
    /*0001be74*/ BEQ         VPSS_DRV_CheckGrpStaticAttr_x1be94
    /*0001be78*/ MOV         R0, #0 
    VPSS_DRV_CheckGrpStaticAttr_x1be7c:
    /*0001be7c*/ ADD         SP, SP, #12 
    /*0001be80*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckGrpStaticAttr_x1be84:
    /*0001be84*/ MOVW        R2, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a38] 
    /*0001be88*/ MOVT        R2, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a38] 
    /*0001be8c*/ MOVW        R3, #2910                   @ 0xb5e 
    /*0001be90*/ STR         R3, [SP] 
    VPSS_DRV_CheckGrpStaticAttr_x1be94:
    /*0001be94*/ LDR         R3, [PC, #20]               @ 0x000000000001beb0 
    /*0001be98*/ MOV         R1, #7 
    /*0001be9c*/ MOV         R0, #3 
    /*0001bea0*/ BL          0x000000000001BEA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001bea4*/ MVN         R0, #0 
    /*0001bea8*/ ADD         SP, SP, #12 
    /*0001beac*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0001beb0*/ ANDEQ       R1, R0, R0, ASR R0 
FUNC_END VPSS_DRV_CheckGrpStaticAttr


FUNC_BEGIN VPSS_DRV_CheckChnRotate
    /*0001beb4*/ CMP         R2, #3 
    /*0001beb8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001bebc*/ SUB         SP, SP, #20 
    /*0001bec0*/ BHI         VPSS_DRV_CheckChnRotate_x1bef8
    /*0001bec4*/ CMP         R2, #0 
    /*0001bec8*/ BEQ         VPSS_DRV_CheckChnRotate_x1beec
    /*0001becc*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001bed0*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001bed4*/ MOV         R3, #72                     @ 0x48 
    /*0001bed8*/ LDR         R2, [R2, R0, LSL #2] 
    /*0001bedc*/ MLA         R3, R3, R1, R2 
    /*0001bee0*/ LDR         R2, [R3, #68]               @ 0x44 
    /*0001bee4*/ CMP         R2, #0 
    /*0001bee8*/ BNE         VPSS_DRV_CheckChnRotate_x1bf28
    VPSS_DRV_CheckChnRotate_x1beec:
    /*0001beec*/ MOV         R0, R2 
    VPSS_DRV_CheckChnRotate_x1bef0:
    /*0001bef0*/ ADD         SP, SP, #20 
    /*0001bef4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckChnRotate_x1bef8:
    /*0001bef8*/ MOV         R2, #4 
    /*0001befc*/ MOVW        R3, #2961                   @ 0xb91 
    /*0001bf00*/ STR         R2, [SP, #4] 
    /*0001bf04*/ MOV         R1, #7 
    /*0001bf08*/ STR         R3, [SP] 
    /*0001bf0c*/ MOVW        R2, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b98] 
    /*0001bf10*/ LDR         R3, [PC, #64]               @ 0x000000000001bf58 
    /*0001bf14*/ MOVT        R2, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b98] 
    /*0001bf18*/ MOV         R0, #3 
    /*0001bf1c*/ BL          0x000000000001BF1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001bf20*/ MVN         R0, #0 
    /*0001bf24*/ B           VPSS_DRV_CheckChnRotate_x1bef0
    VPSS_DRV_CheckChnRotate_x1bf28:
    /*0001bf28*/ STR         R1, [SP, #8] 
    /*0001bf2c*/ MOVW        R3, #2967                   @ 0xb97 
    /*0001bf30*/ STR         R0, [SP, #4] 
    /*0001bf34*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6bcc] 
    /*0001bf38*/ STR         R3, [SP] 
    /*0001bf3c*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6bcc] 
    /*0001bf40*/ LDR         R3, [PC, #16]               @ 0x000000000001bf58 
    /*0001bf44*/ MOV         R1, #7 
    /*0001bf48*/ MOV         R0, #3 
    /*0001bf4c*/ BL          0x000000000001BF4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001bf50*/ MVN         R0, #0 
    /*0001bf54*/ B           VPSS_DRV_CheckChnRotate_x1bef0
    /*0001bf58*/ ANDEQ       R1, R0, IP, RRX 
FUNC_END VPSS_DRV_CheckChnRotate


FUNC_BEGIN VPSS_DRV_CheckLuma
    /*0001bf5c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0001bf60*/ MOV         R4, R2 
    /*0001bf64*/ LDR         R2, [R0] 
    /*0001bf68*/ SUB         SP, SP, #32 
    /*0001bf6c*/ MOV         R3, #0 
    /*0001bf70*/ MOV         R7, R1 
    /*0001bf74*/ STRB        R3, [SP, #31] 
    /*0001bf78*/ LSLS        R5, R2, #3 
    /*0001bf7c*/ BNE         VPSS_DRV_CheckLuma_x1bfb4
    VPSS_DRV_CheckLuma_x1bf80:
    /*0001bf80*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6cfc] 
    /*0001bf84*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6cfc] 
    /*0001bf88*/ MOVW        R3, #2983                   @ 0xba7 
    /*0001bf8c*/ STR         R7, [SP, #4] 
    /*0001bf90*/ STR         R3, [SP] 
    VPSS_DRV_CheckLuma_x1bf94:
    /*0001bf94*/ LDR         R3, [PC, #396]              @ 0x000000000001c128 
    /*0001bf98*/ MOV         R1, #7 
    /*0001bf9c*/ MOV         R0, #3 
    /*0001bfa0*/ BL          0x000000000001BFA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001bfa4*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001bfa8*/ MOVT        R0, #40967                  @ 0xa007 
    VPSS_DRV_CheckLuma_x1bfac:
    /*0001bfac*/ ADD         SP, SP, #32 
    /*0001bfb0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_DRV_CheckLuma_x1bfb4:
    /*0001bfb4*/ MOV         R6, R0 
    /*0001bfb8*/ MOV         R2, R5 
    /*0001bfbc*/ MOV         R0, #1 
    /*0001bfc0*/ BL          0x000000000001BFC0          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*0001bfc4*/ CMP         R0, #0 
    /*0001bfc8*/ BEQ         VPSS_DRV_CheckLuma_x1bf80
    /*0001bfcc*/ SUB         R0, R5, #1 
    /*0001bfd0*/ MOV         R2, #1 
    /*0001bfd4*/ ADD         R0, R7, R0 
    /*0001bfd8*/ ADD         R1, SP, #31 
    /*0001bfdc*/ BL          0x000000000001BFDC          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0001bfe0*/ CMP         R0, #0 
    /*0001bfe4*/ BNE         VPSS_DRV_CheckLuma_x1bf80
    /*0001bfe8*/ LDR         R9, [R6] 
    /*0001bfec*/ CMP         R9, #0 
    /*0001bff0*/ BEQ         VPSS_DRV_CheckLuma_x1c0f4
    /*0001bff4*/ LDR         R3, [R6, #4] 
    /*0001bff8*/ LDR         R1, [R3] 
    /*0001bffc*/ CMP         R1, #0 
    /*0001c000*/ BLT         VPSS_DRV_CheckLuma_x1c118
    /*0001c004*/ LDR         IP, [R3, #4] 
    /*0001c008*/ LDR         R2, [R3, #12] 
    /*0001c00c*/ CMP         IP, #0 
    /*0001c010*/ BLT         VPSS_DRV_CheckLuma_x1c0ec
    /*0001c014*/ CMP         R2, #0 
    /*0001c018*/ MOVWNE      SL, #8191                   @ 0x1fff 
    /*0001c01c*/ BNE         VPSS_DRV_CheckLuma_x1c064
    /*0001c020*/ B           VPSS_DRV_CheckLuma_x1c0ec
    VPSS_DRV_CheckLuma_x1c024:
    /*0001c024*/ TST         R7, #1 
    /*0001c028*/ ADD         R3, R3, #16 
    /*0001c02c*/ BNE         VPSS_DRV_CheckLuma_x1c0d0
    /*0001c030*/ TST         R8, #1 
    /*0001c034*/ BNE         VPSS_DRV_CheckLuma_x1c0d0
    /*0001c038*/ CMP         R0, R9 
    /*0001c03c*/ BEQ         VPSS_DRV_CheckLuma_x1c0f4
    /*0001c040*/ LDR         R1, [R5, #16] 
    /*0001c044*/ CMP         R1, #0 
    /*0001c048*/ BLT         VPSS_DRV_CheckLuma_x1c118
    /*0001c04c*/ LDR         IP, [R5, #20] 
    /*0001c050*/ LDR         R2, [R3, #12] 
    /*0001c054*/ CMP         IP, #0 
    /*0001c058*/ BLT         VPSS_DRV_CheckLuma_x1c0ec
    /*0001c05c*/ CMP         R2, #0 
    /*0001c060*/ BEQ         VPSS_DRV_CheckLuma_x1c0ec
    VPSS_DRV_CheckLuma_x1c064:
    /*0001c064*/ LDR         LR, [R3, #8] 
    /*0001c068*/ ORR         R7, R1, IP 
    /*0001c06c*/ ADD         R0, R0, #1 
    /*0001c070*/ MOV         R5, R3 
    /*0001c074*/ SUB         R6, LR, #1 
    /*0001c078*/ ORR         R8, LR, R2 
    /*0001c07c*/ CMP         R2, #8192                   @ 0x2000 
    /*0001c080*/ CMPLS       R6, SL 
    /*0001c084*/ BLS         VPSS_DRV_CheckLuma_x1c024
    /*0001c088*/ LDR         IP, [R3, #4] 
    /*0001c08c*/ LDR         R2, [R3, #12] 
    VPSS_DRV_CheckLuma_x1c090:
    /*0001c090*/ STR         R2, [SP, #12] 
    /*0001c094*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c14] 
    /*0001c098*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c14] 
    /*0001c09c*/ MOVW        R3, #2998                   @ 0xbb6 
    /*0001c0a0*/ STR         LR, [SP, #16] 
    /*0001c0a4*/ STR         IP, [SP, #8] 
    VPSS_DRV_CheckLuma_x1c0a8:
    /*0001c0a8*/ STR         R1, [SP, #4] 
    /*0001c0ac*/ MOV         R0, #3 
    /*0001c0b0*/ STR         R3, [SP] 
    /*0001c0b4*/ MOV         R1, #7 
    /*0001c0b8*/ LDR         R3, [PC, #104]              @ 0x000000000001c128 
    /*0001c0bc*/ BL          0x000000000001C0BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c0c0*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001c0c4*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001c0c8*/ ADD         SP, SP, #32 
    /*0001c0cc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_DRV_CheckLuma_x1c0d0:
    /*0001c0d0*/ STR         R2, [SP, #12] 
    /*0001c0d4*/ MOVW        R3, #3009                   @ 0xbc1 
    /*0001c0d8*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c60] 
    /*0001c0dc*/ STR         LR, [SP, #16] 
    /*0001c0e0*/ STR         IP, [SP, #8] 
    /*0001c0e4*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c60] 
    /*0001c0e8*/ B           VPSS_DRV_CheckLuma_x1c0a8
    VPSS_DRV_CheckLuma_x1c0ec:
    /*0001c0ec*/ LDR         LR, [R3, #8] 
    /*0001c0f0*/ B           VPSS_DRV_CheckLuma_x1c090
    VPSS_DRV_CheckLuma_x1c0f4:
    /*0001c0f4*/ CMN         R4, #1 
    /*0001c0f8*/ MOVGE       R0, #0 
    /*0001c0fc*/ BGE         VPSS_DRV_CheckLuma_x1bfac
    /*0001c100*/ MOVW        R3, #3016                   @ 0xbc8 
    /*0001c104*/ MOVW        R2, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6cc0] 
    /*0001c108*/ STR         R4, [SP, #4] 
    /*0001c10c*/ MOVT        R2, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6cc0] 
    /*0001c110*/ STR         R3, [SP] 
    /*0001c114*/ B           VPSS_DRV_CheckLuma_x1bf94
    VPSS_DRV_CheckLuma_x1c118:
    /*0001c118*/ LDR         IP, [R3, #4] 
    /*0001c11c*/ LDR         R2, [R3, #12] 
    /*0001c120*/ LDR         LR, [R3, #8] 
    /*0001c124*/ B           VPSS_DRV_CheckLuma_x1c090
    /*0001c128*/ ANDEQ       R1, R0, R4, LSL #1 
FUNC_END VPSS_DRV_CheckLuma


FUNC_BEGIN VPSS_DRV_CheckChnScale
    /*0001c12c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001c130*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001c134*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001c138*/ SUB         SP, SP, #36                 @ 0x24 
    /*0001c13c*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001c140*/ MOV         R7, R0 
    /*0001c144*/ MOV         R8, R1 
    /*0001c148*/ LDMIB       R2, {R4, R5} 
    /*0001c14c*/ LDMIB       R3, {R6, R9} 
    /*0001c150*/ BL          0x000000000001C150          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0001c154*/ CMP         R0, #1 
    /*0001c158*/ MOVNE       R0, #0 
    /*0001c15c*/ BEQ         VPSS_DRV_CheckChnScale_x1c168
    VPSS_DRV_CheckChnScale_x1c160:
    /*0001c160*/ ADD         SP, SP, #36                 @ 0x24 
    /*0001c164*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_DRV_CheckChnScale_x1c168:
    /*0001c168*/ CMP         R5, R9 
    /*0001c16c*/ CMPLS       R4, R6 
    /*0001c170*/ MOVHI       R0, #1 
    /*0001c174*/ MOVLS       R0, #0 
    /*0001c178*/ BHI         VPSS_DRV_CheckChnScale_x1c1dc
    /*0001c17c*/ RSB         R3, R4, R4, LSL #4 
    /*0001c180*/ CMP         R6, R3 
    /*0001c184*/ BHI         VPSS_DRV_CheckChnScale_x1c194
    /*0001c188*/ RSB         R3, R5, R5, LSL #4 
    /*0001c18c*/ CMP         R9, R3 
    /*0001c190*/ BLS         VPSS_DRV_CheckChnScale_x1c160
    VPSS_DRV_CheckChnScale_x1c194:
    /*0001c194*/ MOV         IP, #15 
    /*0001c198*/ MOV         R3, #3056                   @ 0xbf0 
    /*0001c19c*/ STR         R5, [SP, #24] 
    /*0001c1a0*/ MOVW        R2, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d9c] 
    /*0001c1a4*/ STR         R3, [SP] 
    /*0001c1a8*/ MOVT        R2, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d9c] 
    /*0001c1ac*/ STR         R4, [SP, #20] 
    /*0001c1b0*/ MOV         R1, #7 
    /*0001c1b4*/ STR         R9, [SP, #16] 
    /*0001c1b8*/ MOV         R0, #3 
    /*0001c1bc*/ STR         R6, [SP, #12] 
    /*0001c1c0*/ STR         R8, [SP, #8] 
    /*0001c1c4*/ STR         R7, [SP, #4] 
    /*0001c1c8*/ STR         IP, [SP, #28] 
    /*0001c1cc*/ LDR         R3, [PC, #68]               @ 0x000000000001c218 
    /*0001c1d0*/ BL          0x000000000001C1D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c1d4*/ MVN         R0, #0 
    /*0001c1d8*/ B           VPSS_DRV_CheckChnScale_x1c160
    VPSS_DRV_CheckChnScale_x1c1dc:
    /*0001c1dc*/ MOVW        R3, #3048                   @ 0xbe8 
    /*0001c1e0*/ STR         R5, [SP, #24] 
    /*0001c1e4*/ STM         SP, {R3, R7} 
    /*0001c1e8*/ MOVW        R2, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d30] 
    /*0001c1ec*/ STR         R4, [SP, #20] 
    /*0001c1f0*/ MOVT        R2, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d30] 
    /*0001c1f4*/ STR         R9, [SP, #16] 
    /*0001c1f8*/ MOV         R1, #7 
    /*0001c1fc*/ STR         R6, [SP, #12] 
    /*0001c200*/ MOV         R0, #3 
    /*0001c204*/ STR         R8, [SP, #8] 
    /*0001c208*/ LDR         R3, [PC, #8]                @ 0x000000000001c218 
    /*0001c20c*/ BL          0x000000000001C20C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c210*/ MVN         R0, #0 
    /*0001c214*/ B           VPSS_DRV_CheckChnScale_x1c160
    /*0001c218*/ MULEQ       R0, R8, R0 
FUNC_END VPSS_DRV_CheckChnScale


FUNC_BEGIN VPSS_DRV_PixelToStr
    /*0001c21c*/ SUB         R0, R0, #25 
    /*0001c220*/ CMP         R0, #14 
    /*0001c224*/ MOVWLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xdc0] 
    /*0001c228*/ MOVTLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xdc0] 
    /*0001c22c*/ ADDLS       R3, R3, R0, LSL #2 
    /*0001c230*/ LDRLS       R0, [R3, #752]              @ 0x2f0 
    /*0001c234*/ MOVWHI      R0, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e0c] 
    /*0001c238*/ MOVTHI      R0, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e0c] 
    /*0001c23c*/ BX          LR 
FUNC_END VPSS_DRV_PixelToStr


FUNC_BEGIN VPSS_DRV_CheckChnPixFormat
    /*0001c240*/ LDR         R2, [R2, #16] 
    /*0001c244*/ SUB         R3, R2, #25 
    /*0001c248*/ CMP         R3, #14 
    /*0001c24c*/ BLS         VPSS_DRV_CheckChnPixFormat_x1c290
    VPSS_DRV_CheckChnPixFormat_x1c250:
    /*0001c250*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001c254*/ SUB         SP, SP, #20 
    /*0001c258*/ MOVW        R3, #3112                   @ 0xc28 
    /*0001c25c*/ MOV         R0, #3 
    /*0001c260*/ STR         R2, [SP, #8] 
    /*0001c264*/ MOVW        R2, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e14] 
    /*0001c268*/ STR         R1, [SP, #4] 
    /*0001c26c*/ MOVT        R2, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e14] 
    /*0001c270*/ STR         R3, [SP] 
    /*0001c274*/ MOV         R1, #7 
    /*0001c278*/ LDR         R3, [PC, #36]               @ 0x000000000001c2a4 
    /*0001c27c*/ BL          0x000000000001C27C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c280*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001c284*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001c288*/ ADD         SP, SP, #20 
    /*0001c28c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckChnPixFormat_x1c290:
    /*0001c290*/ MOVW        R0, #16411                  @ 0x401b 
    /*0001c294*/ MVN         R0, R0, LSR R3 
    /*0001c298*/ ANDS        R0, R0, #1 
    /*0001c29c*/ BXEQ        LR 
    /*0001c2a0*/ B           VPSS_DRV_CheckChnPixFormat_x1c250
    /*0001c2a4*/ ANDEQ       R1, R0, IP, ROR #1 
FUNC_END VPSS_DRV_CheckChnPixFormat


FUNC_BEGIN VPSS_DRV_CheckChnAttr
    /*0001c2a8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001c2ac*/ MOV         R6, R1 
    /*0001c2b0*/ LDR         R3, [R2] 
    /*0001c2b4*/ SUB         SP, SP, #28 
    /*0001c2b8*/ CMP         R3, #0 
    /*0001c2bc*/ BNE         VPSS_DRV_CheckChnAttr_x1c568
    /*0001c2c0*/ LDR         R3, [R2, #40]               @ 0x28 
    /*0001c2c4*/ MOV         R4, R2 
    /*0001c2c8*/ CMP         R3, #1 
    /*0001c2cc*/ BHI         VPSS_DRV_CheckChnAttr_x1c4cc
    /*0001c2d0*/ LDR         R3, [R2, #36]               @ 0x24 
    /*0001c2d4*/ CMP         R3, #1 
    /*0001c2d8*/ BHI         VPSS_DRV_CheckChnAttr_x1c4e8
    /*0001c2dc*/ LDR         R3, [R2, #44]               @ 0x2c 
    /*0001c2e0*/ CMP         R3, #8 
    /*0001c2e4*/ BHI         VPSS_DRV_CheckChnAttr_x1c584
    /*0001c2e8*/ LDR         R3, [R2, #12] 
    /*0001c2ec*/ CMP         R3, #0 
    /*0001c2f0*/ BNE         VPSS_DRV_CheckChnAttr_x1c5a8
    /*0001c2f4*/ LDR         R3, [R2, #4] 
    /*0001c2f8*/ SUB         IP, R3, #64                 @ 0x40 
    /*0001c2fc*/ CMP         IP, #8128                   @ 0x1fc0 
    /*0001c300*/ BHI         VPSS_DRV_CheckChnAttr_x1c5c0
    /*0001c304*/ LDR         IP, [R2, #8] 
    /*0001c308*/ SUB         LR, IP, #64                 @ 0x40 
    /*0001c30c*/ CMP         LR, #8128                   @ 0x1fc0 
    /*0001c310*/ BHI         VPSS_DRV_CheckChnAttr_x1c5ec
    /*0001c314*/ TST         R3, #1 
    /*0001c318*/ BNE         VPSS_DRV_CheckChnAttr_x1c618
    /*0001c31c*/ TST         IP, #1 
    /*0001c320*/ BNE         VPSS_DRV_CheckChnAttr_x1c504
    /*0001c324*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001c328*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001c32c*/ MOV         R7, R0 
    /*0001c330*/ LDR         R5, [R3, R0, LSL #2] 
    /*0001c334*/ BL          0x000000000001C334          @ VPSS_DRV_CheckChnScale [R_ARM_CALL: .text+0x1c12c] 
    /*0001c338*/ CMP         R0, #0 
    /*0001c33c*/ BNE         VPSS_DRV_CheckChnAttr_x1c46c
    /*0001c340*/ LDR         R3, [R4, #24] 
    /*0001c344*/ CMP         R3, #1 
    /*0001c348*/ BHI         VPSS_DRV_CheckChnAttr_x1c434
    /*0001c34c*/ BEQ         VPSS_DRV_CheckChnAttr_x1c3d4
    VPSS_DRV_CheckChnAttr_x1c350:
    /*0001c350*/ MOV         R2, R4 
    /*0001c354*/ MOV         R1, R6 
    /*0001c358*/ MOV         R0, R7 
    /*0001c35c*/ BL          0x000000000001C35C          @ VPSS_DRV_CheckChnPixFormat [R_ARM_CALL: .text+0x1c240] 
    /*0001c360*/ CMP         R0, #0 
    /*0001c364*/ BNE         VPSS_DRV_CheckChnAttr_x1c46c
    /*0001c368*/ LDR         R1, [R4, #32] 
    /*0001c36c*/ LDR         R0, [R4, #28] 
    /*0001c370*/ BL          0x000000000001C370          @ VPSS_DRV_CheckFrameRate [R_ARM_CALL: .text+0x1b8f4] 
    /*0001c374*/ CMP         R0, #0 
    /*0001c378*/ BNE         VPSS_DRV_CheckChnAttr_x1c46c
    /*0001c37c*/ MOV         R3, #24 
    /*0001c380*/ MOVW        R2, #37816                  @ 0x93b8 
    /*0001c384*/ MLA         R3, R3, R6, R5 
    /*0001c388*/ LDR         R3, [R3, R2] 
    /*0001c38c*/ CMP         R3, #1 
    /*0001c390*/ BEQ         VPSS_DRV_CheckChnAttr_x1c47c
    VPSS_DRV_CheckChnAttr_x1c394:
    /*0001c394*/ ADD         R5, R5, #12288              @ 0x3000 
    /*0001c398*/ LDR         R3, [R5, #3504]             @ 0xdb0 
    /*0001c39c*/ CMP         R3, #1 
    /*0001c3a0*/ BEQ         VPSS_DRV_CheckChnAttr_x1c4ac
    VPSS_DRV_CheckChnAttr_x1c3a4:
    /*0001c3a4*/ LDR         R3, [R4, #20] 
    /*0001c3a8*/ CMP         R3, #0 
    /*0001c3ac*/ BNE         VPSS_DRV_CheckChnAttr_x1c540
    /*0001c3b0*/ LDR         R3, [R4, #8] 
    /*0001c3b4*/ MOV         R1, R6 
    /*0001c3b8*/ LDR         R2, [R4, #4] 
    /*0001c3bc*/ MOV         R0, R7 
    /*0001c3c0*/ ADD         R4, R4, #48                 @ 0x30 
    /*0001c3c4*/ STR         R4, [SP] 
    /*0001c3c8*/ BL          0x000000000001C3C8          @ VPSS_DRV_CheckAspectRatio [R_ARM_CALL: .text+0x18a44] 
    VPSS_DRV_CheckChnAttr_x1c3cc:
    /*0001c3cc*/ ADD         SP, SP, #28 
    /*0001c3d0*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_DRV_CheckChnAttr_x1c3d4:
    /*0001c3d4*/ CMP         R6, #0 
    /*0001c3d8*/ MOVWNE      R3, #3203                   @ 0xc83 
    /*0001c3dc*/ MOVWNE      R2, #0                      @ .LC141 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x70c4] 
    /*0001c3e0*/ STRNE       R3, [SP] 
    /*0001c3e4*/ MOVTNE      R2, #0                      @ .LC141 [R_ARM_MOVT_ABS: .rodata.str1.4+0x70c4] 
    /*0001c3e8*/ BNE         VPSS_DRV_CheckChnAttr_x1c498
    /*0001c3ec*/ ADD         R3, R5, #28672              @ 0x7000 
    /*0001c3f0*/ LDR         R3, [R3, #3184]             @ 0xc70 
    /*0001c3f4*/ CMP         R3, #0 
    /*0001c3f8*/ BEQ         VPSS_DRV_CheckChnAttr_x1c350
    /*0001c3fc*/ MOVW        R2, #0                      @ .LC142 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x70fc] 
    /*0001c400*/ MOVT        R2, #0                      @ .LC142 [R_ARM_MOVT_ABS: .rodata.str1.4+0x70fc] 
    /*0001c404*/ MOVW        R3, #3210                   @ 0xc8a 
    /*0001c408*/ STR         R6, [SP, #8] 
    /*0001c40c*/ STR         R7, [SP, #4] 
    /*0001c410*/ STR         R3, [SP] 
    VPSS_DRV_CheckChnAttr_x1c414:
    /*0001c414*/ LDR         R3, [PC, #544]              @ 0x000000000001c63c 
    /*0001c418*/ MOV         R1, #7 
    /*0001c41c*/ MOV         R0, #3 
    /*0001c420*/ BL          0x000000000001C420          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c424*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001c428*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001c42c*/ ADD         SP, SP, #28 
    /*0001c430*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_DRV_CheckChnAttr_x1c434:
    /*0001c434*/ MOV         R2, #0 
    /*0001c438*/ STR         R2, [SP, #12] 
    /*0001c43c*/ MOVW        R2, #0                      @ .LC140 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x707c] 
    /*0001c440*/ MOVT        R2, #0                      @ .LC140 [R_ARM_MOVT_ABS: .rodata.str1.4+0x707c] 
    /*0001c444*/ STR         R3, [SP, #8] 
    /*0001c448*/ MOV         R3, #1 
    /*0001c44c*/ STR         R6, [SP, #4] 
    /*0001c450*/ STR         R3, [SP, #16] 
    /*0001c454*/ MOVW        R3, #3195                   @ 0xc7b 
    /*0001c458*/ STR         R3, [SP] 
    VPSS_DRV_CheckChnAttr_x1c45c:
    /*0001c45c*/ LDR         R3, [PC, #472]              @ 0x000000000001c63c 
    /*0001c460*/ MOV         R1, #7 
    /*0001c464*/ MOV         R0, #3 
    /*0001c468*/ BL          0x000000000001C468          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_DRV_CheckChnAttr_x1c46c:
    /*0001c46c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001c470*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001c474*/ ADD         SP, SP, #28 
    /*0001c478*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_DRV_CheckChnAttr_x1c47c:
    /*0001c47c*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0001c480*/ CMP         R3, #0 
    /*0001c484*/ MOVWNE      R3, #3230                   @ 0xc9e 
    /*0001c488*/ MOVWNE      R2, #0                      @ .LC143 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7144] 
    /*0001c48c*/ STRNE       R3, [SP] 
    /*0001c490*/ MOVTNE      R2, #0                      @ .LC143 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7144] 
    /*0001c494*/ BEQ         VPSS_DRV_CheckChnAttr_x1c394
    VPSS_DRV_CheckChnAttr_x1c498:
    /*0001c498*/ LDR         R3, [PC, #412]              @ 0x000000000001c63c 
    /*0001c49c*/ MOV         R1, #7 
    /*0001c4a0*/ MOV         R0, #3 
    /*0001c4a4*/ BL          0x000000000001C4A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c4a8*/ B           VPSS_DRV_CheckChnAttr_x1c46c
    VPSS_DRV_CheckChnAttr_x1c4ac:
    /*0001c4ac*/ LDR         R3, [R4, #40]               @ 0x28 
    /*0001c4b0*/ CMP         R3, #1 
    /*0001c4b4*/ BNE         VPSS_DRV_CheckChnAttr_x1c3a4
    /*0001c4b8*/ MOVW        R3, #3237                   @ 0xca5 
    /*0001c4bc*/ MOVW        R2, #0                      @ .LC144 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7184] 
    /*0001c4c0*/ STR         R3, [SP] 
    /*0001c4c4*/ MOVT        R2, #0                      @ .LC144 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7184] 
    /*0001c4c8*/ B           VPSS_DRV_CheckChnAttr_x1c498
    VPSS_DRV_CheckChnAttr_x1c4cc:
    /*0001c4cc*/ STR         R3, [SP, #8] 
    /*0001c4d0*/ MOVW        R2, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e94] 
    /*0001c4d4*/ MOVW        R3, #3135                   @ 0xc3f 
    /*0001c4d8*/ STR         R1, [SP, #4] 
    /*0001c4dc*/ STR         R3, [SP] 
    /*0001c4e0*/ MOVT        R2, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e94] 
    /*0001c4e4*/ B           VPSS_DRV_CheckChnAttr_x1c414
    VPSS_DRV_CheckChnAttr_x1c4e8:
    /*0001c4e8*/ STR         R3, [SP, #8] 
    /*0001c4ec*/ MOVW        R2, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ec8] 
    /*0001c4f0*/ MOVW        R3, #3141                   @ 0xc45 
    /*0001c4f4*/ STR         R1, [SP, #4] 
    /*0001c4f8*/ STR         R3, [SP] 
    /*0001c4fc*/ MOVT        R2, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ec8] 
    /*0001c500*/ B           VPSS_DRV_CheckChnAttr_x1c414
    VPSS_DRV_CheckChnAttr_x1c504:
    /*0001c504*/ MOV         R2, #2 
    /*0001c508*/ STR         R2, [SP, #12] 
    /*0001c50c*/ MOVW        R2, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x703c] 
    /*0001c510*/ MOVT        R2, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0x703c] 
    /*0001c514*/ MOVW        R3, #3182                   @ 0xc6e 
    /*0001c518*/ STR         IP, [SP, #8] 
    /*0001c51c*/ STR         R1, [SP, #4] 
    /*0001c520*/ STR         R3, [SP] 
    VPSS_DRV_CheckChnAttr_x1c524:
    /*0001c524*/ LDR         R3, [PC, #272]              @ 0x000000000001c63c 
    /*0001c528*/ MOV         R1, #7 
    /*0001c52c*/ MOV         R0, #3 
    /*0001c530*/ BL          0x000000000001C530          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c534*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001c538*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001c53c*/ B           VPSS_DRV_CheckChnAttr_x1c3cc
    VPSS_DRV_CheckChnAttr_x1c540:
    /*0001c540*/ MOVW        R2, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x71bc] 
    /*0001c544*/ MOVT        R2, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0x71bc] 
    /*0001c548*/ STR         R3, [SP, #4] 
    /*0001c54c*/ MOVW        R3, #3252                   @ 0xcb4 
    /*0001c550*/ STR         R3, [SP] 
    VPSS_DRV_CheckChnAttr_x1c554:
    /*0001c554*/ LDR         R3, [PC, #224]              @ 0x000000000001c63c 
    /*0001c558*/ MOV         R1, #7 
    /*0001c55c*/ MOV         R0, #3 
    /*0001c560*/ BL          0x000000000001C560          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c564*/ B           VPSS_DRV_CheckChnAttr_x1c46c
    VPSS_DRV_CheckChnAttr_x1c568:
    /*0001c568*/ STR         R3, [SP, #8] 
    /*0001c56c*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e5c] 
    /*0001c570*/ MOVW        R3, #3129                   @ 0xc39 
    /*0001c574*/ STR         R1, [SP, #4] 
    /*0001c578*/ STR         R3, [SP] 
    /*0001c57c*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e5c] 
    /*0001c580*/ B           VPSS_DRV_CheckChnAttr_x1c414
    VPSS_DRV_CheckChnAttr_x1c584:
    /*0001c584*/ MOV         R2, #8 
    /*0001c588*/ STR         R3, [SP, #8] 
    /*0001c58c*/ STR         R2, [SP, #12] 
    /*0001c590*/ MOVW        R3, #3147                   @ 0xc4b 
    /*0001c594*/ MOVW        R2, #0                      @ .LC134 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6efc] 
    /*0001c598*/ STR         R1, [SP, #4] 
    /*0001c59c*/ STR         R3, [SP] 
    /*0001c5a0*/ MOVT        R2, #0                      @ .LC134 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6efc] 
    /*0001c5a4*/ B           VPSS_DRV_CheckChnAttr_x1c524
    VPSS_DRV_CheckChnAttr_x1c5a8:
    /*0001c5a8*/ STR         R3, [SP, #4] 
    /*0001c5ac*/ MOVW        R2, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f3c] 
    /*0001c5b0*/ MOVW        R3, #3156                   @ 0xc54 
    /*0001c5b4*/ MOVT        R2, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f3c] 
    /*0001c5b8*/ STR         R3, [SP] 
    /*0001c5bc*/ B           VPSS_DRV_CheckChnAttr_x1c554
    VPSS_DRV_CheckChnAttr_x1c5c0:
    /*0001c5c0*/ MOV         R2, #64                     @ 0x40 
    /*0001c5c4*/ STR         R3, [SP, #8] 
    /*0001c5c8*/ STR         R2, [SP, #12] 
    /*0001c5cc*/ MOV         R3, #8192                   @ 0x2000 
    /*0001c5d0*/ MOVW        R2, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f7c] 
    /*0001c5d4*/ STR         R3, [SP, #16] 
    /*0001c5d8*/ STR         R1, [SP, #4] 
    /*0001c5dc*/ MOVW        R3, #3163                   @ 0xc5b 
    /*0001c5e0*/ MOVT        R2, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f7c] 
    /*0001c5e4*/ STR         R3, [SP] 
    /*0001c5e8*/ B           VPSS_DRV_CheckChnAttr_x1c45c
    VPSS_DRV_CheckChnAttr_x1c5ec:
    /*0001c5ec*/ MOV         R3, #8192                   @ 0x2000 
    /*0001c5f0*/ MOV         R2, #64                     @ 0x40 
    /*0001c5f4*/ STR         R3, [SP, #16] 
    /*0001c5f8*/ MOVW        R3, #3170                   @ 0xc62 
    /*0001c5fc*/ STR         R2, [SP, #12] 
    /*0001c600*/ MOVW        R2, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6fbc] 
    /*0001c604*/ STR         IP, [SP, #8] 
    /*0001c608*/ MOVT        R2, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6fbc] 
    /*0001c60c*/ STR         R1, [SP, #4] 
    /*0001c610*/ STR         R3, [SP] 
    /*0001c614*/ B           VPSS_DRV_CheckChnAttr_x1c45c
    VPSS_DRV_CheckChnAttr_x1c618:
    /*0001c618*/ MOV         R2, #2 
    /*0001c61c*/ STR         R3, [SP, #8] 
    /*0001c620*/ STR         R2, [SP, #12] 
    /*0001c624*/ MOVW        R3, #3176                   @ 0xc68 
    /*0001c628*/ MOVW        R2, #0                      @ .LC138 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ffc] 
    /*0001c62c*/ STR         R1, [SP, #4] 
    /*0001c630*/ STR         R3, [SP] 
    /*0001c634*/ MOVT        R2, #0                      @ .LC138 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ffc] 
    /*0001c638*/ B           VPSS_DRV_CheckChnAttr_x1c524
    /*0001c63c*/ ANDEQ       R1, R0, R8, LSL #2 
FUNC_END VPSS_DRV_CheckChnAttr


FUNC_BEGIN VPSS_DRV_CheckPixelFormat
    /*0001c640*/ CMP         R2, #39                     @ 0x27 
    /*0001c644*/ BEQ         VPSS_DRV_CheckPixelFormat_x1c6dc
    /*0001c648*/ CMP         R3, #39                     @ 0x27 
    /*0001c64c*/ BEQ         VPSS_DRV_CheckPixelFormat_x1c6ec
    /*0001c650*/ CMP         R2, #26 
    /*0001c654*/ BEQ         VPSS_DRV_CheckPixelFormat_x1c660
    VPSS_DRV_CheckPixelFormat_x1c658:
    /*0001c658*/ MOV         R0, #0 
    /*0001c65c*/ BX          LR 
    VPSS_DRV_CheckPixelFormat_x1c660:
    /*0001c660*/ CMP         R3, #26 
    /*0001c664*/ CMPNE       R3, #29 
    /*0001c668*/ BEQ         VPSS_DRV_CheckPixelFormat_x1c658
    VPSS_DRV_CheckPixelFormat_x1c66c:
    /*0001c66c*/ SUB         R3, R3, #25 
    /*0001c670*/ MOVW        IP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xdc0] 
    /*0001c674*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xdc0] 
    /*0001c678*/ CMP         R3, #14 
    /*0001c67c*/ ADD         R2, IP, R2, LSL #2 
    /*0001c680*/ MOVWHI      R3, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e0c] 
    /*0001c684*/ MOVTHI      R3, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e0c] 
    /*0001c688*/ LDR         R2, [R2, #652]              @ 0x28c 
    /*0001c68c*/ BHI         VPSS_DRV_CheckPixelFormat_x1c698
    VPSS_DRV_CheckPixelFormat_x1c690:
    /*0001c690*/ ADD         R3, IP, R3, LSL #2 
    /*0001c694*/ LDR         R3, [R3, #752]              @ 0x2f0 
    VPSS_DRV_CheckPixelFormat_x1c698:
    /*0001c698*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001c69c*/ SUB         SP, SP, #28 
    /*0001c6a0*/ STR         R3, [SP, #16] 
    /*0001c6a4*/ MOVW        R3, #3295                   @ 0xcdf 
    /*0001c6a8*/ STR         R2, [SP, #12] 
    /*0001c6ac*/ MOVW        R2, #0                      @ .LC146 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x71f8] 
    /*0001c6b0*/ STR         R1, [SP, #8] 
    /*0001c6b4*/ MOVT        R2, #0                      @ .LC146 [R_ARM_MOVT_ABS: .rodata.str1.4+0x71f8] 
    /*0001c6b8*/ STR         R0, [SP, #4] 
    /*0001c6bc*/ MOV         R1, #7 
    /*0001c6c0*/ STR         R3, [SP] 
    /*0001c6c4*/ MOV         R0, #3 
    /*0001c6c8*/ LDR         R3, [PC, #88]               @ 0x000000000001c728 
    /*0001c6cc*/ BL          0x000000000001C6CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c6d0*/ MVN         R0, #0 
    /*0001c6d4*/ ADD         SP, SP, #28 
    /*0001c6d8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckPixelFormat_x1c6dc:
    /*0001c6dc*/ CMP         R3, #39                     @ 0x27 
    /*0001c6e0*/ BNE         VPSS_DRV_CheckPixelFormat_x1c66c
    /*0001c6e4*/ MOV         R0, #0 
    /*0001c6e8*/ BX          LR 
    VPSS_DRV_CheckPixelFormat_x1c6ec:
    /*0001c6ec*/ SUB         R2, R2, #25 
    /*0001c6f0*/ CMP         R2, #14 
    /*0001c6f4*/ BLS         VPSS_DRV_CheckPixelFormat_x1c710
    /*0001c6f8*/ MOVW        R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e0c] 
    /*0001c6fc*/ MOVW        IP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xdc0] 
    /*0001c700*/ MOVT        R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e0c] 
    /*0001c704*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xdc0] 
    /*0001c708*/ MOV         R3, #14 
    /*0001c70c*/ B           VPSS_DRV_CheckPixelFormat_x1c690
    VPSS_DRV_CheckPixelFormat_x1c710:
    /*0001c710*/ MOVW        IP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xdc0] 
    /*0001c714*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xdc0] 
    /*0001c718*/ ADD         R2, IP, R2, LSL #2 
    /*0001c71c*/ MOV         R3, #14 
    /*0001c720*/ LDR         R2, [R2, #752]              @ 0x2f0 
    /*0001c724*/ B           VPSS_DRV_CheckPixelFormat_x1c690
    /*0001c728*/ ANDEQ       R1, R0, R0, LSR #2 
FUNC_END VPSS_DRV_CheckPixelFormat


FUNC_BEGIN VPSS_DRV_SetChnQueryFail
    /*0001c72c*/ MOV         R0, #0 
    /*0001c730*/ BX          LR 
FUNC_END VPSS_DRV_SetChnQueryFail


FUNC_BEGIN VPSS_DRV_Check3dnrArea
    /*0001c734*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001c738*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001c73c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001c740*/ SUB         SP, SP, #124                @ 0x7c 
    /*0001c744*/ LDR         R5, [R3, R0, LSL #2] 
    /*0001c748*/ LDR         R3, [R5, #28] 
    /*0001c74c*/ CMP         R3, #0 
    /*0001c750*/ BEQ         VPSS_DRV_Check3dnrArea_x1c888
    /*0001c754*/ ADD         R3, R5, #12288              @ 0x3000 
    /*0001c758*/ LDMIB       R5, {R8, SL} 
    /*0001c75c*/ MOV         FP, R2 
    /*0001c760*/ STR         R0, [SP, #44]               @ 0x2c 
    /*0001c764*/ LDR         R7, [R3, #3176]             @ 0xc68 
    /*0001c768*/ ADD         R0, R8, #15 
    /*0001c76c*/ LDR         R9, [R3, #3180]             @ 0xc6c 
    /*0001c770*/ ADD         R2, SL, #15 
    /*0001c774*/ ADD         IP, R7, #15 
    /*0001c778*/ BIC         R0, R0, #15 
    /*0001c77c*/ ADD         R3, R9, #15 
    /*0001c780*/ BIC         IP, IP, #15 
    /*0001c784*/ BIC         R3, R3, #15 
    /*0001c788*/ BIC         R2, R2, #15 
    /*0001c78c*/ MUL         R3, R3, IP 
    /*0001c790*/ MUL         R2, R2, R0 
    /*0001c794*/ CMP         R2, R3 
    /*0001c798*/ BCC         VPSS_DRV_Check3dnrArea_x1c958
    /*0001c79c*/ LDR         R4, [R1, #16] 
    /*0001c7a0*/ CMP         R4, #0 
    /*0001c7a4*/ BNE         VPSS_DRV_Check3dnrArea_x1c9a0
    /*0001c7a8*/ CMP         R8, R7 
    /*0001c7ac*/ BCC         VPSS_DRV_Check3dnrArea_x1c894
    /*0001c7b0*/ LDR         R2, [R5, #36]               @ 0x24 
    /*0001c7b4*/ MOV         R0, #2 
    /*0001c7b8*/ STR         R4, [SP, #68]               @ 0x44 
    /*0001c7bc*/ MOV         R6, #1 
    /*0001c7c0*/ STR         R8, [SP, #52]               @ 0x34 
    /*0001c7c4*/ STR         R2, [SP, #72]               @ 0x48 
    /*0001c7c8*/ LDR         R2, [R5, #12] 
    /*0001c7cc*/ STR         SL, [SP, #56]               @ 0x38 
    /*0001c7d0*/ STR         R4, [SP, #76]               @ 0x4c 
    /*0001c7d4*/ STR         R2, [SP, #48]               @ 0x30 
    /*0001c7d8*/ STR         R4, [SP, #64]               @ 0x40 
    /*0001c7dc*/ STR         R4, [SP, #60]               @ 0x3c 
    /*0001c7e0*/ STR         R6, [SP, #80]               @ 0x50 
    /*0001c7e4*/ BL          0x000000000001C7E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c7e8*/ ADD         R1, SP, #84                 @ 0x54 
    /*0001c7ec*/ LDR         R2, [R0, #120]              @ 0x78 
    /*0001c7f0*/ ADD         R0, SP, #48                 @ 0x30 
    /*0001c7f4*/ BLX         R2 
    /*0001c7f8*/ LDR         R2, [R5, #36]               @ 0x24 
    /*0001c7fc*/ MOV         R0, #2 
    /*0001c800*/ STR         R4, [SP, #68]               @ 0x44 
    /*0001c804*/ STR         R4, [SP, #76]               @ 0x4c 
    /*0001c808*/ STR         R4, [SP, #64]               @ 0x40 
    /*0001c80c*/ STR         R4, [SP, #60]               @ 0x3c 
    /*0001c810*/ STR         R2, [SP, #72]               @ 0x48 
    /*0001c814*/ LDR         R4, [SP, #84]               @ 0x54 
    /*0001c818*/ STR         R6, [SP, #80]               @ 0x50 
    /*0001c81c*/ STR         FP, [SP, #48]               @ 0x30 
    /*0001c820*/ STR         R7, [SP, #52]               @ 0x34 
    /*0001c824*/ STR         R9, [SP, #56]               @ 0x38 
    /*0001c828*/ BL          0x000000000001C828          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c82c*/ ADD         R1, SP, #84                 @ 0x54 
    /*0001c830*/ LDR         R3, [R0, #120]              @ 0x78 
    /*0001c834*/ ADD         R0, SP, #48                 @ 0x30 
    /*0001c838*/ BLX         R3 
    /*0001c83c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0001c840*/ CMP         R4, R3 
    /*0001c844*/ BCC         VPSS_DRV_Check3dnrArea_x1c8c4
    /*0001c848*/ ADD         R2, R8, #3 
    /*0001c84c*/ ADD         R3, R7, #3 
    /*0001c850*/ ADD         R0, SL, #3 
    /*0001c854*/ ADD         R1, R9, #3 
    /*0001c858*/ LSR         R2, R2, #4 
    /*0001c85c*/ LSR         R3, R3, #4 
    /*0001c860*/ ADD         R2, R2, #15 
    /*0001c864*/ ADD         R3, R3, #15 
    /*0001c868*/ BIC         R2, R2, #15 
    /*0001c86c*/ LSR         R0, R0, #2 
    /*0001c870*/ BIC         R3, R3, #15 
    /*0001c874*/ LSR         R1, R1, #2 
    /*0001c878*/ MUL         R2, R0, R2 
    /*0001c87c*/ MUL         R3, R1, R3 
    /*0001c880*/ CMP         R3, R2 
    /*0001c884*/ BHI         VPSS_DRV_Check3dnrArea_x1c9bc
    VPSS_DRV_Check3dnrArea_x1c888:
    /*0001c888*/ MOV         R0, #0 
    VPSS_DRV_Check3dnrArea_x1c88c:
    /*0001c88c*/ ADD         SP, SP, #124                @ 0x7c 
    /*0001c890*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_Check3dnrArea_x1c894:
    /*0001c894*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0001c898*/ MOVW        R2, #0                      @ .LC149 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7308] 
    /*0001c89c*/ MOVT        R2, #0                      @ .LC149 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7308] 
    /*0001c8a0*/ STR         R3, [SP, #4] 
    /*0001c8a4*/ MOVW        R3, #3374                   @ 0xd2e 
    /*0001c8a8*/ STR         R3, [SP] 
    VPSS_DRV_Check3dnrArea_x1c8ac:
    /*0001c8ac*/ LDR         R3, [PC, #292]              @ 0x000000000001c9d8 
    /*0001c8b0*/ MOV         R1, #7 
    /*0001c8b4*/ MOV         R0, #3 
    /*0001c8b8*/ BL          0x000000000001C8B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c8bc*/ MVN         R0, #0 
    /*0001c8c0*/ B           VPSS_DRV_Check3dnrArea_x1c88c
    VPSS_DRV_Check3dnrArea_x1c8c4:
    /*0001c8c4*/ SUB         FP, FP, #25 
    /*0001c8c8*/ MOVW        LR, #3412                   @ 0xd54 
    /*0001c8cc*/ CMP         FP, #14 
    /*0001c8d0*/ MOV         R0, #3 
    /*0001c8d4*/ MOVWLS      R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xdc0] 
    /*0001c8d8*/ MOVTLS      R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xdc0] 
    /*0001c8dc*/ ADDLS       FP, R2, FP, LSL #2 
    /*0001c8e0*/ LDR         R2, [R5, #12] 
    /*0001c8e4*/ MOVWHI      IP, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e0c] 
    /*0001c8e8*/ MOVTHI      IP, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e0c] 
    /*0001c8ec*/ SUB         R2, R2, #25 
    /*0001c8f0*/ LDRLS       IP, [FP, #752]              @ 0x2f0 
    /*0001c8f4*/ CMP         R2, #14 
    /*0001c8f8*/ STR         R3, [SP, #20] 
    /*0001c8fc*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0001c900*/ MOVWLS      R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xdc0] 
    /*0001c904*/ MOVTLS      R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xdc0] 
    /*0001c908*/ ADDLS       R2, R1, R2, LSL #2 
    /*0001c90c*/ MOVWHI      R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e0c] 
    /*0001c910*/ STR         R3, [SP, #4] 
    /*0001c914*/ MOVTHI      R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e0c] 
    /*0001c918*/ LDRLS       R2, [R2, #752]              @ 0x2f0 
    /*0001c91c*/ MOV         R1, #7 
    /*0001c920*/ STR         R4, [SP, #36]               @ 0x24 
    /*0001c924*/ STR         SL, [SP, #28] 
    /*0001c928*/ STR         R2, [SP, #32] 
    /*0001c92c*/ MOVW        R2, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x735c] 
    /*0001c930*/ STR         R8, [SP, #24] 
    /*0001c934*/ MOVT        R2, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0x735c] 
    /*0001c938*/ STR         IP, [SP, #16] 
    /*0001c93c*/ STR         R9, [SP, #12] 
    /*0001c940*/ STR         R7, [SP, #8] 
    /*0001c944*/ STR         LR, [SP] 
    /*0001c948*/ LDR         R3, [PC, #136]              @ 0x000000000001c9d8 
    /*0001c94c*/ BL          0x000000000001C94C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c950*/ MVN         R0, #0 
    /*0001c954*/ B           VPSS_DRV_Check3dnrArea_x1c88c
    VPSS_DRV_Check3dnrArea_x1c958:
    /*0001c958*/ STR         R2, [SP, #28] 
    /*0001c95c*/ MOVW        R2, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7264] 
    /*0001c960*/ MOVT        R2, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7264] 
    /*0001c964*/ MOVW        IP, #3357                   @ 0xd1d 
    /*0001c968*/ STR         SL, [SP, #24] 
    /*0001c96c*/ STR         R8, [SP, #20] 
    VPSS_DRV_Check3dnrArea_x1c970:
    /*0001c970*/ STR         R3, [SP, #16] 
    /*0001c974*/ MOV         R1, #7 
    /*0001c978*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0001c97c*/ MOV         R0, #3 
    /*0001c980*/ STR         R9, [SP, #12] 
    /*0001c984*/ STR         R7, [SP, #8] 
    /*0001c988*/ STR         R3, [SP, #4] 
    /*0001c98c*/ STR         IP, [SP] 
    /*0001c990*/ LDR         R3, [PC, #64]               @ 0x000000000001c9d8 
    /*0001c994*/ BL          0x000000000001C994          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c998*/ MVN         R0, #0 
    /*0001c99c*/ B           VPSS_DRV_Check3dnrArea_x1c88c
    VPSS_DRV_Check3dnrArea_x1c9a0:
    /*0001c9a0*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0001c9a4*/ MOVW        R2, #0                      @ .LC148 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x72c8] 
    /*0001c9a8*/ MOVT        R2, #0                      @ .LC148 [R_ARM_MOVT_ABS: .rodata.str1.4+0x72c8] 
    /*0001c9ac*/ STR         R3, [SP, #4] 
    /*0001c9b0*/ MOVW        R3, #3368                   @ 0xd28 
    /*0001c9b4*/ STR         R3, [SP] 
    /*0001c9b8*/ B           VPSS_DRV_Check3dnrArea_x1c8ac
    VPSS_DRV_Check3dnrArea_x1c9bc:
    /*0001c9bc*/ STR         R2, [SP, #28] 
    /*0001c9c0*/ MOVW        IP, #3434                   @ 0xd6a 
    /*0001c9c4*/ MOVW        R2, #0                      @ .LC151 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x73dc] 
    /*0001c9c8*/ STR         SL, [SP, #24] 
    /*0001c9cc*/ STR         R8, [SP, #20] 
    /*0001c9d0*/ MOVT        R2, #0                      @ .LC151 [R_ARM_MOVT_ABS: .rodata.str1.4+0x73dc] 
    /*0001c9d4*/ B           VPSS_DRV_Check3dnrArea_x1c970
    /*0001c9d8*/ ANDEQ       R1, R0, IP, LSR R1 
FUNC_END VPSS_DRV_Check3dnrArea


FUNC_BEGIN VPSS_DRV_CheckSlaveSplitLimit
    /*0001c9dc*/ LDR         IP, [R1] 
    /*0001c9e0*/ CMP         IP, #2048                   @ 0x800 
    /*0001c9e4*/ BLS         VPSS_DRV_CheckSlaveSplitLimit_x1ca74
    /*0001c9e8*/ MOVW        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001c9ec*/ MOVT        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001c9f0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001c9f4*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001c9f8*/ LDR         R2, [R2, R0, LSL #2] 
    /*0001c9fc*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001ca00*/ SUB         SP, SP, #20 
    /*0001ca04*/ MOV         R3, R0 
    /*0001ca08*/ ADD         R2, R2, #24576              @ 0x6000 
    /*0001ca0c*/ LDR         R1, [R1, R0, LSL #2] 
    /*0001ca10*/ LDR         R2, [R2, #3964]             @ 0xf7c 
    /*0001ca14*/ CMP         R2, #1 
    /*0001ca18*/ BEQ         VPSS_DRV_CheckSlaveSplitLimit_x1ca7c
    VPSS_DRV_CheckSlaveSplitLimit_x1ca1c:
    /*0001ca1c*/ LDR         R0, [R1, #92]               @ 0x5c 
    /*0001ca20*/ CMP         R0, #0 
    /*0001ca24*/ BNE         VPSS_DRV_CheckSlaveSplitLimit_x1cab8
    /*0001ca28*/ LDR         R2, [R1, #68]               @ 0x44 
    /*0001ca2c*/ CMP         R2, #1 
    /*0001ca30*/ BEQ         VPSS_DRV_CheckSlaveSplitLimit_x1ca3c
    VPSS_DRV_CheckSlaveSplitLimit_x1ca34:
    /*0001ca34*/ ADD         SP, SP, #20 
    /*0001ca38*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckSlaveSplitLimit_x1ca3c:
    /*0001ca3c*/ LDR         R2, [R1, #80]               @ 0x50 
    /*0001ca40*/ CMP         R2, #1 
    /*0001ca44*/ BEQ         VPSS_DRV_CheckSlaveSplitLimit_x1cae4
    /*0001ca48*/ SUB         R2, IP, #3360               @ 0xd20 
    /*0001ca4c*/ SUB         R2, R2, #1 
    /*0001ca50*/ CMP         R2, #480                    @ 0x1e0 
    /*0001ca54*/ BCS         VPSS_DRV_CheckSlaveSplitLimit_x1ca34
    /*0001ca58*/ MOVW        R1, #3483                   @ 0xd9b 
    /*0001ca5c*/ MOVW        R2, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x75a0] 
    /*0001ca60*/ STR         IP, [SP, #8] 
    /*0001ca64*/ MOVT        R2, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0x75a0] 
    /*0001ca68*/ STR         R3, [SP, #4] 
    /*0001ca6c*/ STR         R1, [SP] 
    /*0001ca70*/ B           VPSS_DRV_CheckSlaveSplitLimit_x1caa0
    VPSS_DRV_CheckSlaveSplitLimit_x1ca74:
    /*0001ca74*/ MOV         R0, #0 
    /*0001ca78*/ BX          LR 
    VPSS_DRV_CheckSlaveSplitLimit_x1ca7c:
    /*0001ca7c*/ LDR         R2, [R1, #48]               @ 0x30 
    /*0001ca80*/ CMP         IP, R2 
    /*0001ca84*/ BEQ         VPSS_DRV_CheckSlaveSplitLimit_x1ca1c
    /*0001ca88*/ STR         R2, [SP, #8] 
    /*0001ca8c*/ MOVW        R2, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7450] 
    /*0001ca90*/ MOVT        R2, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7450] 
    /*0001ca94*/ MOVW        R3, #3459                   @ 0xd83 
    /*0001ca98*/ STR         IP, [SP, #4] 
    /*0001ca9c*/ STR         R3, [SP] 
    VPSS_DRV_CheckSlaveSplitLimit_x1caa0:
    /*0001caa0*/ LDR         R3, [PC, #84]               @ 0x000000000001cafc 
    /*0001caa4*/ MOV         R1, #7 
    /*0001caa8*/ MOV         R0, #3 
    /*0001caac*/ BL          0x000000000001CAAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001cab0*/ MVN         R0, #0 
    /*0001cab4*/ B           VPSS_DRV_CheckSlaveSplitLimit_x1ca34
    VPSS_DRV_CheckSlaveSplitLimit_x1cab8:
    /*0001cab8*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74c4] 
    /*0001cabc*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74c4] 
    /*0001cac0*/ STR         R3, [SP, #4] 
    /*0001cac4*/ MOVW        R3, #3467                   @ 0xd8b 
    /*0001cac8*/ STR         R3, [SP] 
    VPSS_DRV_CheckSlaveSplitLimit_x1cacc:
    /*0001cacc*/ LDR         R3, [PC, #40]               @ 0x000000000001cafc 
    /*0001cad0*/ MOV         R1, #7 
    /*0001cad4*/ MOV         R0, #3 
    /*0001cad8*/ BL          0x000000000001CAD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001cadc*/ MVN         R0, #0 
    /*0001cae0*/ B           VPSS_DRV_CheckSlaveSplitLimit_x1ca34
    VPSS_DRV_CheckSlaveSplitLimit_x1cae4:
    /*0001cae4*/ STR         R3, [SP, #4] 
    /*0001cae8*/ MOVW        R2, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7528] 
    /*0001caec*/ MOVW        R3, #3476                   @ 0xd94 
    /*0001caf0*/ MOVT        R2, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7528] 
    /*0001caf4*/ STR         R3, [SP] 
    /*0001caf8*/ B           VPSS_DRV_CheckSlaveSplitLimit_x1cacc
    /*0001cafc*/ ANDEQ       R1, R0, R4, ASR R1 
FUNC_END VPSS_DRV_CheckSlaveSplitLimit


FUNC_BEGIN VPSS_DRV_GetMaxCoordinate
    /*0001cb00*/ CMP         R2, R3 
    /*0001cb04*/ MOVGE       R3, R2 
    /*0001cb08*/ CMP         R3, R1 
    /*0001cb0c*/ MOVLT       R3, R1 
    /*0001cb10*/ CMP         R3, R0 
    /*0001cb14*/ MOVGE       R0, R3 
    /*0001cb18*/ BX          LR 
FUNC_END VPSS_DRV_GetMaxCoordinate


FUNC_BEGIN VPSS_DRV_PrepareMosaicInfo
    /*0001cb1c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001cb20*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001cb24*/ LDR         R1, [R3, R0, LSL #2] 
    /*0001cb28*/ ADD         R3, R1, #16384              @ 0x4000 
    /*0001cb2c*/ LDR         R0, [R3, #1760]             @ 0x6e0 
    /*0001cb30*/ CMP         R0, #0 
    /*0001cb34*/ BEQ         VPSS_DRV_PrepareMosaicInfo_x1cbd0
    /*0001cb38*/ MOVW        R2, #21980                  @ 0x55dc 
    /*0001cb3c*/ ADD         R3, R1, #17920              @ 0x4600 
    /*0001cb40*/ PUSH        {R4, LR} 
    /*0001cb44*/ ADD         IP, R1, #21760              @ 0x5500 
    /*0001cb48*/ ADD         R4, R2, R0, LSL #4 
    /*0001cb4c*/ ADD         R3, R3, #228                @ 0xe4 
    /*0001cb50*/ ADD         R4, R1, R4 
    /*0001cb54*/ ADD         R2, R1, R2 
    /*0001cb58*/ ADD         IP, IP, #200                @ 0xc8 
    VPSS_DRV_PrepareMosaicInfo_x1cb5c:
    /*0001cb5c*/ LDR         LR, [R3, #16] 
    /*0001cb60*/ ADD         R2, R2, #16 
    /*0001cb64*/ ADD         R3, R3, #24 
    /*0001cb68*/ STR         LR, [R2, #-16] 
    /*0001cb6c*/ LDR         LR, [R3, #-4] 
    /*0001cb70*/ STR         LR, [R2, #-12] 
    /*0001cb74*/ LDR         LR, [R3, #-12] 
    /*0001cb78*/ STR         LR, [R2, #-4] 
    /*0001cb7c*/ LDR         LR, [R3, #-16] 
    /*0001cb80*/ STR         LR, [R2, #-8] 
    /*0001cb84*/ CMP         R2, R4 
    /*0001cb88*/ LDR         LR, [R3, #-24]              @ 0xffffffe8 
    /*0001cb8c*/ STR         LR, [IP], #4 
    /*0001cb90*/ LDR         LR, [R3, #-20]              @ 0xffffffec 
    /*0001cb94*/ BNE         VPSS_DRV_PrepareMosaicInfo_x1cb5c
    /*0001cb98*/ ADD         R2, R1, #20480              @ 0x5000 
    /*0001cb9c*/ CMP         R0, #4 
    /*0001cba0*/ MOV         R3, R0 
    /*0001cba4*/ STR         LR, [R2, #1496]             @ 0x5d8 
    /*0001cba8*/ BEQ         VPSS_DRV_PrepareMosaicInfo_x1cbf8
    /*0001cbac*/ ADD         R0, R0, #5440               @ 0x1540 
    /*0001cbb0*/ MOV         R2, #0 
    /*0001cbb4*/ ADD         R0, R0, #50                 @ 0x32 
    /*0001cbb8*/ ADD         R1, R1, R0, LSL #2 
    VPSS_DRV_PrepareMosaicInfo_x1cbbc:
    /*0001cbbc*/ ADD         R3, R3, #1 
    /*0001cbc0*/ STR         R2, [R1], #4 
    /*0001cbc4*/ CMP         R3, #4 
    /*0001cbc8*/ BNE         VPSS_DRV_PrepareMosaicInfo_x1cbbc
    /*0001cbcc*/ POP         {R4, PC} 
    VPSS_DRV_PrepareMosaicInfo_x1cbd0:
    /*0001cbd0*/ MOV         R3, R0 
    /*0001cbd4*/ ADD         R0, R0, #5440               @ 0x1540 
    /*0001cbd8*/ ADD         R0, R0, #50                 @ 0x32 
    /*0001cbdc*/ MOV         R2, #0 
    /*0001cbe0*/ ADD         R1, R1, R0, LSL #2 
    VPSS_DRV_PrepareMosaicInfo_x1cbe4:
    /*0001cbe4*/ ADD         R3, R3, #1 
    /*0001cbe8*/ STR         R2, [R1], #4 
    /*0001cbec*/ CMP         R3, #4 
    /*0001cbf0*/ BNE         VPSS_DRV_PrepareMosaicInfo_x1cbe4
    /*0001cbf4*/ BX          LR 
    VPSS_DRV_PrepareMosaicInfo_x1cbf8:
    /*0001cbf8*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_PrepareMosaicInfo


FUNC_BEGIN VPSS_DRV_UpdateRegion
    /*0001cbfc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001cc00*/ MOVW        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001cc04*/ MOVW        LR, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001cc08*/ MOVT        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001cc0c*/ MOVT        LR, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001cc10*/ SUB         SP, SP, #52                 @ 0x34 
    /*0001cc14*/ MOV         R7, R0 
    /*0001cc18*/ MOV         R6, R1 
    /*0001cc1c*/ MOV         R5, R2 
    /*0001cc20*/ MOV         R4, R3 
    /*0001cc24*/ LDR         R8, [LR, R0, LSL #2] 
    /*0001cc28*/ LDR         R9, [IP, R0, LSL #2] 
    /*0001cc2c*/ BL          0x000000000001CC2C          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0001cc30*/ CMP         R0, #0 
    /*0001cc34*/ BNE         VPSS_DRV_UpdateRegion_x1cdb8
    VPSS_DRV_UpdateRegion_x1cc38:
    /*0001cc38*/ ADD         R3, R4, #548                @ 0x224 
    /*0001cc3c*/ ADD         R3, R3, #2 
    /*0001cc40*/ LDR         R3, [R9, R3, LSL #2] 
    /*0001cc44*/ LDR         SL, [R3, #8] 
    /*0001cc48*/ LDR         R1, [R3, #12] 
    /*0001cc4c*/ LDR         FP, [R3, #32] 
    VPSS_DRV_UpdateRegion_x1cc50:
    /*0001cc50*/ MOV         R3, #52                     @ 0x34 
    /*0001cc54*/ MOV         R2, #416                    @ 0x1a0 
    /*0001cc58*/ MUL         R3, R3, R5 
    /*0001cc5c*/ CMP         FP, #0 
    /*0001cc60*/ MUL         R2, R2, R6 
    /*0001cc64*/ ADD         LR, SP, #16 
    /*0001cc68*/ ADD         R6, SP, #32 
    /*0001cc6c*/ MOVW        R7, #19923                  @ 0x4dd3 
    /*0001cc70*/ BICEQ       SL, SL, #1 
    /*0001cc74*/ BICNE       SL, SL, #3 
    /*0001cc78*/ MOV         R0, R3 
    /*0001cc7c*/ STR         R3, [SP, #4] 
    /*0001cc80*/ ADD         R3, R2, #21504              @ 0x5400 
    /*0001cc84*/ MOVT        R7, #4194                   @ 0x1062 
    /*0001cc88*/ ADD         R3, R3, #44                 @ 0x2c 
    /*0001cc8c*/ STR         R2, [SP, #8] 
    /*0001cc90*/ ADD         R3, R3, R0 
    /*0001cc94*/ BIC         R2, R1, #1 
    /*0001cc98*/ ADD         R3, R8, R3 
    /*0001cc9c*/ MOV         R9, R6 
    /*0001cca0*/ MOV         R1, R2 
    /*0001cca4*/ STR         R3, [SP, #12] 
    /*0001cca8*/ MOV         IP, R3 
    /*0001ccac*/ MOV         R2, LR 
    /*0001ccb0*/ MOV         R3, R1 
    VPSS_DRV_UpdateRegion_x1ccb4:
    /*0001ccb4*/ LDR         R4, [IP] 
    /*0001ccb8*/ ADD         IP, IP, #8 
    /*0001ccbc*/ LDR         R0, [IP, #-4] 
    /*0001ccc0*/ MUL         R4, R4, SL 
    /*0001ccc4*/ MUL         R0, R0, R3 
    /*0001ccc8*/ UMULL       R4, R5, R4, R7 
    /*0001cccc*/ UMULL       R0, R1, R0, R7 
    /*0001ccd0*/ LSR         R0, R5, #6 
    /*0001ccd4*/ STR         R0, [R2], #4 
    /*0001ccd8*/ CMP         R2, R6 
    /*0001ccdc*/ LSR         R1, R1, #6 
    /*0001cce0*/ STR         R1, [R9], #4 
    /*0001cce4*/ BNE         VPSS_DRV_UpdateRegion_x1ccb4
    /*0001cce8*/ ADD         R1, R8, #12288              @ 0x3000 
    /*0001ccec*/ LDR         R3, [SP, #12] 
    /*0001ccf0*/ LDR         R0, [R1, #3144]             @ 0xc48 
    /*0001ccf4*/ CMP         R0, #0 
    /*0001ccf8*/ BEQ         VPSS_DRV_UpdateRegion_x1cd84
    /*0001ccfc*/ LDR         IP, [R1, #3168]             @ 0xc60 
    /*0001cd00*/ LDR         R4, [R1, #3172]             @ 0xc64 
    VPSS_DRV_UpdateRegion_x1cd04:
    /*0001cd04*/ LDR         R0, [LR], #4 
    /*0001cd08*/ LDR         R1, [R6], #4 
    /*0001cd0c*/ CMP         LR, R2 
    /*0001cd10*/ SUB         R0, R0, IP 
    /*0001cd14*/ SUB         R1, R1, R4 
    /*0001cd18*/ STM         R3, {R0, R1} 
    /*0001cd1c*/ ADD         R3, R3, #8 
    /*0001cd20*/ BNE         VPSS_DRV_UpdateRegion_x1cd04
    VPSS_DRV_UpdateRegion_x1cd24:
    /*0001cd24*/ LDR         R2, [SP, #8] 
    /*0001cd28*/ LDR         R1, [SP, #4] 
    /*0001cd2c*/ ADD         R3, R2, #21504              @ 0x5400 
    /*0001cd30*/ MOV         R2, R3 
    /*0001cd34*/ ADD         R3, R3, #48                 @ 0x30 
    /*0001cd38*/ ADD         R2, R2, #80                 @ 0x50 
    /*0001cd3c*/ ADD         R3, R3, R1 
    /*0001cd40*/ ADD         R2, R2, R1 
    /*0001cd44*/ ADD         R3, R8, R3 
    /*0001cd48*/ ADD         R8, R8, R2 
    VPSS_DRV_UpdateRegion_x1cd4c:
    /*0001cd4c*/ CMP         FP, #0 
    /*0001cd50*/ LDR         R2, [R3, #-4] 
    /*0001cd54*/ BNE         VPSS_DRV_UpdateRegion_x1cda0
    /*0001cd58*/ ADD         R2, R2, R2, LSR #31 
    /*0001cd5c*/ BIC         R2, R2, #1 
    /*0001cd60*/ STR         R2, [R3, #-4] 
    VPSS_DRV_UpdateRegion_x1cd64:
    /*0001cd64*/ LDR         R2, [R3] 
    /*0001cd68*/ ADD         R2, R2, R2, LSR #31 
    /*0001cd6c*/ BIC         R2, R2, #1 
    /*0001cd70*/ STR         R2, [R3], #8 
    /*0001cd74*/ CMP         R8, R3 
    /*0001cd78*/ BNE         VPSS_DRV_UpdateRegion_x1cd4c
    /*0001cd7c*/ ADD         SP, SP, #52                 @ 0x34 
    /*0001cd80*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_UpdateRegion_x1cd84:
    /*0001cd84*/ LDR         R0, [LR], #4 
    /*0001cd88*/ LDR         R1, [R6], #4 
    /*0001cd8c*/ CMP         LR, R2 
    /*0001cd90*/ STM         R3, {R0, R1} 
    /*0001cd94*/ ADD         R3, R3, #8 
    /*0001cd98*/ BNE         VPSS_DRV_UpdateRegion_x1cd84
    /*0001cd9c*/ B           VPSS_DRV_UpdateRegion_x1cd24
    VPSS_DRV_UpdateRegion_x1cda0:
    /*0001cda0*/ ADD         R1, R2, #3 
    /*0001cda4*/ CMP         R2, #0 
    /*0001cda8*/ MOVLT       R2, R1 
    /*0001cdac*/ BIC         R2, R2, #3 
    /*0001cdb0*/ STR         R2, [R3, #-4] 
    /*0001cdb4*/ B           VPSS_DRV_UpdateRegion_x1cd64
    VPSS_DRV_UpdateRegion_x1cdb8:
    /*0001cdb8*/ MOV         R0, R7 
    /*0001cdbc*/ BL          0x000000000001CDBC          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0001cdc0*/ CMP         R0, #2 
    /*0001cdc4*/ BEQ         VPSS_DRV_UpdateRegion_x1cc38
    /*0001cdc8*/ LDR         SL, [R8, #4] 
    /*0001cdcc*/ LDR         R1, [R8, #8] 
    /*0001cdd0*/ LDR         FP, [R8, #16] 
    /*0001cdd4*/ B           VPSS_DRV_UpdateRegion_x1cc50
FUNC_END VPSS_DRV_UpdateRegion


FUNC_BEGIN VPSS_DRV_PrepareRegionInfo
    /*0001cdd8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001cddc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001cde0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001cde4*/ SUB         R2, R2, #1 
    /*0001cde8*/ LDR         R4, [R3, R0, LSL #2] 
    /*0001cdec*/ CLZ         R2, R2 
    /*0001cdf0*/ SUB         SP, SP, #20 
    /*0001cdf4*/ ADD         R7, R4, #16384              @ 0x4000 
    /*0001cdf8*/ LSR         R2, R2, #5 
    /*0001cdfc*/ LDR         R3, [R7, #1860]             @ 0x744 
    /*0001ce00*/ CMP         R3, #0 
    /*0001ce04*/ ORRNE       R2, R2, #1 
    /*0001ce08*/ CMP         R2, #0 
    /*0001ce0c*/ BNE         VPSS_DRV_PrepareRegionInfo_x1ce18
    VPSS_DRV_PrepareRegionInfo_x1ce10:
    /*0001ce10*/ ADD         SP, SP, #20 
    /*0001ce14*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_PrepareRegionInfo_x1ce18:
    /*0001ce18*/ ADD         R6, R4, #21504              @ 0x5400 
    /*0001ce1c*/ STR         R1, [SP, #12] 
    /*0001ce20*/ ADD         R6, R6, #4 
    /*0001ce24*/ STR         R0, [SP, #8] 
    /*0001ce28*/ MOV         R2, #32 
    /*0001ce2c*/ MOV         R1, #0 
    /*0001ce30*/ MOV         R0, R6 
    /*0001ce34*/ BL          0x000000000001CE34          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0001ce38*/ LDR         R3, [R7, #1864]             @ 0x748 
    /*0001ce3c*/ CMP         R3, #0 
    /*0001ce40*/ BEQ         VPSS_DRV_PrepareRegionInfo_x1ce10
    /*0001ce44*/ ADD         R5, R4, #21504              @ 0x5400 
    /*0001ce48*/ ADD         R4, R4, #18176              @ 0x4700 
    /*0001ce4c*/ ADD         R5, R5, #76                 @ 0x4c 
    /*0001ce50*/ ADD         R4, R4, #112                @ 0x70 
    /*0001ce54*/ STR         R6, [SP, #4] 
    /*0001ce58*/ MOV         R6, #0 
    VPSS_DRV_PrepareRegionInfo_x1ce5c:
    /*0001ce5c*/ LDR         IP, [R4] 
    /*0001ce60*/ SUB         R3, R5, #32 
    /*0001ce64*/ LDR         R8, [R4, #-8] 
    /*0001ce68*/ SUB         R2, R5, #28 
    /*0001ce6c*/ LDR         R9, [R4, #8] 
    /*0001ce70*/ MOV         LR, R4 
    /*0001ce74*/ CMP         R8, IP 
    /*0001ce78*/ LDR         FP, [R4, #16] 
    /*0001ce7c*/ LDR         R0, [R4, #4] 
    /*0001ce80*/ MOVGE       IP, R8 
    /*0001ce84*/ CMP         IP, R9 
    /*0001ce88*/ LDR         R1, [R4, #-4] 
    /*0001ce8c*/ MOVLT       IP, R9 
    /*0001ce90*/ CMP         IP, FP 
    /*0001ce94*/ LDR         SL, [R4, #12] 
    /*0001ce98*/ MOVLT       IP, FP 
    /*0001ce9c*/ CMP         R1, R0 
    /*0001cea0*/ LDR         R9, [R4, #20] 
    /*0001cea4*/ SUB         FP, IP, #1 
    /*0001cea8*/ MOVGE       R0, R1 
    /*0001ceac*/ CMP         R0, SL 
    /*0001ceb0*/ MOVLT       R0, SL 
    /*0001ceb4*/ CMP         R0, R9 
    /*0001ceb8*/ MOVGE       R9, R0 
    /*0001cebc*/ SUB         R0, R9, #1 
    VPSS_DRV_PrepareRegionInfo_x1cec0:
    /*0001cec0*/ STR         R8, [R2, #-4] 
    /*0001cec4*/ ADD         R3, R3, #8 
    /*0001cec8*/ STR         R1, [R3, #-4] 
    /*0001cecc*/ ADD         LR, LR, #8 
    /*0001ced0*/ LDR         R8, [R2, #-4] 
    /*0001ced4*/ ADD         R2, R2, #8 
    /*0001ced8*/ CMP         R8, IP 
    /*0001cedc*/ STREQ       FP, [R2, #-12] 
    /*0001cee0*/ LDREQ       R1, [R3, #-4] 
    /*0001cee4*/ CMP         R9, R1 
    /*0001cee8*/ STREQ       R0, [R3, #-4] 
    /*0001ceec*/ CMP         R5, R3 
    /*0001cef0*/ LDRNE       R8, [LR, #-8] 
    /*0001cef4*/ LDRNE       R1, [LR, #-4] 
    /*0001cef8*/ BNE         VPSS_DRV_PrepareRegionInfo_x1cec0
    /*0001cefc*/ LDR         R3, [R4, #-16] 
    /*0001cf00*/ MVN         R2, #43                     @ 0x2b 
    /*0001cf04*/ MOV         R1, #150                    @ 0x96 
    /*0001cf08*/ MOV         SL, #76                     @ 0x4c 
    /*0001cf0c*/ MVN         R9, #85                     @ 0x55 
    /*0001cf10*/ MOV         R8, #29 
    /*0001cf14*/ STR         R3, [R5, #-40]              @ 0xffffffd8 
    /*0001cf18*/ LDR         R3, [R4, #-12] 
    /*0001cf1c*/ STR         R3, [R5, #-36]              @ 0xffffffdc 
    /*0001cf20*/ MOV         R3, #130                    @ 0x82 
    /*0001cf24*/ LDR         R0, [R4, #-20]              @ 0xffffffec 
    /*0001cf28*/ UBFX        LR, R0, #16, #8 
    /*0001cf2c*/ UBFX        IP, R0, #8, #8 
    /*0001cf30*/ UXTB        R0, R0 
    /*0001cf34*/ MUL         R2, R2, LR 
    /*0001cf38*/ MLA         R2, R3, R0, R2 
    /*0001cf3c*/ MVN         R3, #108                    @ 0x6c 
    /*0001cf40*/ MUL         R1, R1, IP 
    /*0001cf44*/ MLA         R1, SL, LR, R1 
    /*0001cf48*/ MOV         SL, #130                    @ 0x82 
    /*0001cf4c*/ MUL         R3, R3, IP 
    /*0001cf50*/ MLA         R3, SL, LR, R3 
    /*0001cf54*/ MOV         SL, #1 
    /*0001cf58*/ MLA         R2, R9, IP, R2 
    /*0001cf5c*/ MVN         IP, #20 
    /*0001cf60*/ MLA         R1, R8, R0, R1 
    /*0001cf64*/ MLA         R3, IP, R0, R3 
    /*0001cf68*/ ASR         R2, R2, #8 
    /*0001cf6c*/ ADD         R2, R2, #128                @ 0x80 
    /*0001cf70*/ ASR         R1, R1, #8 
    /*0001cf74*/ USAT        R2, #8, R2 
    /*0001cf78*/ ASR         R3, R3, #8 
    /*0001cf7c*/ ADD         R3, R3, #128                @ 0x80 
    /*0001cf80*/ USAT        R3, #8, R3 
    /*0001cf84*/ ORR         R3, R3, R1, LSL #16 
    /*0001cf88*/ ORR         R3, R3, R2, LSL #8 
    /*0001cf8c*/ UBFX        R2, R3, #8, #8 
    /*0001cf90*/ STR         R2, [R5, #4] 
    /*0001cf94*/ LSR         R2, R3, #16 
    /*0001cf98*/ UXTB        R3, R3 
    /*0001cf9c*/ STR         R3, [R5] 
    /*0001cfa0*/ LDR         R3, [SP, #4] 
    /*0001cfa4*/ STR         R2, [R5, #8] 
    /*0001cfa8*/ STR         SL, [R3], #4 
    /*0001cfac*/ STR         R3, [SP, #4] 
    /*0001cfb0*/ LDR         R3, [R4, #24] 
    /*0001cfb4*/ CMP         R3, SL 
    /*0001cfb8*/ BEQ         VPSS_DRV_PrepareRegionInfo_x1cfdc
    VPSS_DRV_PrepareRegionInfo_x1cfbc:
    /*0001cfbc*/ LDR         R3, [R7, #1864]             @ 0x748 
    /*0001cfc0*/ ADD         R6, R6, #1 
    /*0001cfc4*/ ADD         R5, R5, #52                 @ 0x34 
    /*0001cfc8*/ ADD         R4, R4, #56                 @ 0x38 
    /*0001cfcc*/ CMP         R3, R6 
    /*0001cfd0*/ BHI         VPSS_DRV_PrepareRegionInfo_x1ce5c
    /*0001cfd4*/ ADD         SP, SP, #20 
    /*0001cfd8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_PrepareRegionInfo_x1cfdc:
    /*0001cfdc*/ LDR         R3, [SP, #12] 
    /*0001cfe0*/ MOV         R2, R6 
    /*0001cfe4*/ MOV         R1, #0 
    /*0001cfe8*/ LDR         R0, [SP, #8] 
    /*0001cfec*/ BL          0x000000000001CFEC          @ VPSS_DRV_UpdateRegion [R_ARM_CALL: .text+0x1cbfc] 
    /*0001cff0*/ B           VPSS_DRV_PrepareRegionInfo_x1cfbc
FUNC_END VPSS_DRV_PrepareRegionInfo


FUNC_BEGIN VPSS_DRV_PrepareRefInfo
    /*0001cff4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001cff8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001cffc*/ PUSH        {R4, R5, R6, LR} 
    /*0001d000*/ LDR         R4, [R3, R0, LSL #2] 
    /*0001d004*/ ADD         R3, R4, #16384              @ 0x4000 
    /*0001d008*/ LDR         R3, [R3, #2340]             @ 0x924 
    /*0001d00c*/ CMP         R3, #0 
    /*0001d010*/ BEQ         VPSS_DRV_PrepareRefInfo_x1d04c
    /*0001d014*/ CMP         R1, #0 
    /*0001d018*/ BLE         VPSS_DRV_PrepareRefInfo_x1d04c
    /*0001d01c*/ ADD         R4, R4, #22016              @ 0x5600 
    /*0001d020*/ MOV         R6, R1 
    /*0001d024*/ ADD         R4, R4, #32 
    /*0001d028*/ MOV         R5, #0 
    VPSS_DRV_PrepareRefInfo_x1d02c:
    /*0001d02c*/ ADD         R1, R4, #2256               @ 0x8d0 
    /*0001d030*/ MOV         R0, R4 
    /*0001d034*/ ADD         R5, R5, #1 
    /*0001d038*/ MOV         R2, #376                    @ 0x178 
    /*0001d03c*/ BL          0x000000000001D03C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001d040*/ CMP         R6, R5 
    /*0001d044*/ ADD         R4, R4, #376                @ 0x178 
    /*0001d048*/ BNE         VPSS_DRV_PrepareRefInfo_x1d02c
    VPSS_DRV_PrepareRefInfo_x1d04c:
    /*0001d04c*/ MOV         R0, #0 
    /*0001d050*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_PrepareRefInfo


FUNC_BEGIN VPSS_DRV_PrepareRfrInfo
    /*0001d054*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001d058*/ CMP         R1, #0 
    /*0001d05c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001d060*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001d064*/ SUB         SP, SP, #12 
    /*0001d068*/ LDR         R6, [R3, R0, LSL #2] 
    /*0001d06c*/ BLE         VPSS_DRV_PrepareRfrInfo_x1d188
    /*0001d070*/ ADD         FP, R6, #16384              @ 0x4000 
    /*0001d074*/ ADD         R7, R6, #12288              @ 0x3000 
    /*0001d078*/ ADD         R3, R6, #24064              @ 0x5e00 
    /*0001d07c*/ ADD         IP, R6, #14016              @ 0x36c0 
    /*0001d080*/ ADD         R3, R3, #240                @ 0xf0 
    /*0001d084*/ LDR         LR, [FP, #2348]             @ 0x92c 
    /*0001d088*/ MOV         R0, #0 
    /*0001d08c*/ MOVW        R5, #14140                  @ 0x373c 
    /*0001d090*/ STR         R6, [SP, #4] 
    /*0001d094*/ MOV         R4, R7 
    /*0001d098*/ B           VPSS_DRV_PrepareRfrInfo_x1d0b0
    VPSS_DRV_PrepareRfrInfo_x1d09c:
    /*0001d09c*/ ADD         R0, R0, #1 
    /*0001d0a0*/ ADD         IP, IP, #4 
    /*0001d0a4*/ CMP         R1, R0 
    /*0001d0a8*/ ADD         R3, R3, #376                @ 0x178 
    /*0001d0ac*/ BEQ         VPSS_DRV_PrepareRfrInfo_x1d188
    VPSS_DRV_PrepareRfrInfo_x1d0b0:
    /*0001d0b0*/ CMP         LR, #1 
    /*0001d0b4*/ BNE         VPSS_DRV_PrepareRfrInfo_x1d09c
    /*0001d0b8*/ LDR         R7, [IP] 
    /*0001d0bc*/ MOV         R2, #160                    @ 0xa0 
    /*0001d0c0*/ MOV         R8, #80                     @ 0x50 
    /*0001d0c4*/ MOVW        SL, #14104                  @ 0x3718 
    /*0001d0c8*/ CLZ         R6, R7 
    /*0001d0cc*/ MOVW        R9, #14108                  @ 0x371c 
    /*0001d0d0*/ MUL         R2, R2, R0 
    /*0001d0d4*/ LSR         R6, R6, #5 
    /*0001d0d8*/ STR         R6, [IP] 
    /*0001d0dc*/ LDR         R7, [R4, #3176]             @ 0xc68 
    /*0001d0e0*/ MLA         R2, R8, R6, R2 
    /*0001d0e4*/ LDR         R8, [SP, #4] 
    /*0001d0e8*/ STR         R7, [R3, #84]               @ 0x54 
    /*0001d0ec*/ ADD         R6, R7, #15 
    /*0001d0f0*/ LDR         R7, [R4, #3180]             @ 0xc6c 
    /*0001d0f4*/ BIC         R6, R6, #15 
    /*0001d0f8*/ ADD         R2, R8, R2 
    /*0001d0fc*/ MOVW        R8, #14088                  @ 0x3708 
    /*0001d100*/ STR         R7, [R3, #88]               @ 0x58 
    /*0001d104*/ MOVW        R7, #14076                  @ 0x36fc 
    /*0001d108*/ LDR         R7, [R2, R7] 
    /*0001d10c*/ STR         R7, [R3, #124]              @ 0x7c 
    /*0001d110*/ LDR         R7, [FP, #2724]             @ 0xaa4 
    /*0001d114*/ STR         R7, [R3, #284]              @ 0x11c 
    /*0001d118*/ MOVW        R7, #14084                  @ 0x3704 
    /*0001d11c*/ LDR         R7, [R2, R7] 
    /*0001d120*/ STR         R6, [R3, #64]               @ 0x40 
    /*0001d124*/ STR         R6, [R3, #68]               @ 0x44 
    /*0001d128*/ STR         R6, [R3, #72]               @ 0x48 
    /*0001d12c*/ MOVW        R6, #14112                  @ 0x3720 
    /*0001d130*/ STR         R7, [R3, #100]              @ 0x64 
    /*0001d134*/ LDRD        R6, [R6, R2] 
    /*0001d138*/ STRD        R6, [R3] 
    /*0001d13c*/ MOVW        R6, #14120                  @ 0x3728 
    /*0001d140*/ LDRD        R6, [R6, R2] 
    /*0001d144*/ STRD        R6, [R3, #8] 
    /*0001d148*/ STRD        R6, [R3, #16] 
    /*0001d14c*/ MOVW        R6, #14136                  @ 0x3738 
    /*0001d150*/ LDR         R7, [R2, R6] 
    /*0001d154*/ MOVW        R6, #14096                  @ 0x3710 
    /*0001d158*/ STR         R7, [R3, #276]              @ 0x114 
    /*0001d15c*/ LDR         R7, [R2, R5] 
    /*0001d160*/ STR         R7, [R3, #280]              @ 0x118 
    /*0001d164*/ LDR         R7, [R2, SL] 
    /*0001d168*/ STR         R7, [R3, #160]              @ 0xa0 
    /*0001d16c*/ LDR         R7, [R2, R9] 
    /*0001d170*/ STR         R7, [R3, #164]              @ 0xa4 
    /*0001d174*/ LDRD        R8, [R8, R2] 
    /*0001d178*/ STRD        R8, [R3, #136]              @ 0x88 
    /*0001d17c*/ LDRD        R6, [R6, R2] 
    /*0001d180*/ STRD        R6, [R3, #144]              @ 0x90 
    /*0001d184*/ B           VPSS_DRV_PrepareRfrInfo_x1d09c
    VPSS_DRV_PrepareRfrInfo_x1d188:
    /*0001d188*/ MOV         R0, #0 
    /*0001d18c*/ ADD         SP, SP, #12 
    /*0001d190*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VPSS_DRV_PrepareRfrInfo


FUNC_BEGIN VPSS_DRV_GetIspRtISO
    /*0001d194*/ PUSH        {R4, R5, R6, LR} 
    /*0001d198*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001d19c*/ SUB         SP, SP, #88                 @ 0x58 
    /*0001d1a0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001d1a4*/ MOV         R4, R0 
    /*0001d1a8*/ MOV         R6, #7 
    /*0001d1ac*/ LDR         R5, [R3, R0, LSL #2] 
    /*0001d1b0*/ MOV         R3, #0 
    /*0001d1b4*/ STR         R0, [SP, #24] 
    /*0001d1b8*/ STR         R6, [SP, #20] 
    /*0001d1bc*/ STR         R3, [SP, #28] 
    /*0001d1c0*/ BL          0x000000000001D1C0          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0001d1c4*/ CMP         R0, #0 
    /*0001d1c8*/ BNE         VPSS_DRV_GetIspRtISO_x1d1e8
    /*0001d1cc*/ ADD         R5, R5, #16384              @ 0x4000 
    /*0001d1d0*/ LDR         R3, [R5, #2792]             @ 0xae8 
    /*0001d1d4*/ CMP         R3, #0 
    /*0001d1d8*/ BEQ         VPSS_DRV_GetIspRtISO_x1d234
    /*0001d1dc*/ LDR         R0, [R3, #176]              @ 0xb0 
    VPSS_DRV_GetIspRtISO_x1d1e0:
    /*0001d1e0*/ ADD         SP, SP, #88                 @ 0x58 
    /*0001d1e4*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_GetIspRtISO_x1d1e8:
    /*0001d1e8*/ STR         R4, [SP, #12] 
    VPSS_DRV_GetIspRtISO_x1d1ec:
    /*0001d1ec*/ MOV         R0, #28 
    /*0001d1f0*/ BL          0x000000000001D1F0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d1f4*/ LDR         R3, [R0, #28] 
    /*0001d1f8*/ CMP         R3, #0 
    /*0001d1fc*/ BEQ         VPSS_DRV_GetIspRtISO_x1d220
    /*0001d200*/ MOV         R0, #28 
    /*0001d204*/ BL          0x000000000001D204          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d208*/ ADD         R1, SP, #32 
    /*0001d20c*/ LDR         R3, [R0, #28] 
    /*0001d210*/ LDR         R0, [SP, #12] 
    /*0001d214*/ BLX         R3 
    /*0001d218*/ CMP         R0, #0 
    /*0001d21c*/ BEQ         VPSS_DRV_GetIspRtISO_x1d22c
    VPSS_DRV_GetIspRtISO_x1d220:
    /*0001d220*/ MOV         R0, #110                    @ 0x6e 
    /*0001d224*/ ADD         SP, SP, #88                 @ 0x58 
    /*0001d228*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_GetIspRtISO_x1d22c:
    /*0001d22c*/ LDR         R0, [SP, #32] 
    /*0001d230*/ B           VPSS_DRV_GetIspRtISO_x1d1e0
    VPSS_DRV_GetIspRtISO_x1d234:
    /*0001d234*/ MOV         R0, #2 
    /*0001d238*/ BL          0x000000000001D238          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d23c*/ LDR         R3, [R0, #56]               @ 0x38 
    /*0001d240*/ CMP         R3, #0 
    /*0001d244*/ BEQ         VPSS_DRV_GetIspRtISO_x1d220
    /*0001d248*/ MOV         R0, #2 
    /*0001d24c*/ BL          0x000000000001D24C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d250*/ ADD         R1, SP, #8 
    /*0001d254*/ LDR         R3, [R0, #56]               @ 0x38 
    /*0001d258*/ ADD         R0, SP, #20 
    /*0001d25c*/ BLX         R3 
    /*0001d260*/ CMP         R0, #0 
    /*0001d264*/ BEQ         VPSS_DRV_GetIspRtISO_x1d1ec
    /*0001d268*/ MOVW        R3, #4035                   @ 0xfc3 
    /*0001d26c*/ MOV         R1, R6 
    /*0001d270*/ STR         R3, [SP] 
    /*0001d274*/ MOVW        R2, #0                      @ .LC156 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7604] 
    /*0001d278*/ LDR         R3, [PC, #12]               @ 0x000000000001d28c 
    /*0001d27c*/ MOVT        R2, #0                      @ .LC156 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7604] 
    /*0001d280*/ MOV         R0, #6 
    /*0001d284*/ BL          0x000000000001D284          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d288*/ B           VPSS_DRV_GetIspRtISO_x1d220
    /*0001d28c*/ ANDEQ       R1, R0, R4, ROR R1 
FUNC_END VPSS_DRV_GetIspRtISO


FUNC_BEGIN VPSS_DRV_CalcNrDomainEnable
    /*0001d290*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001d294*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001d298*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001d29c*/ LDR         R2, [R3, #996]              @ 0x3e4 
    /*0001d2a0*/ CMP         R2, #0 
    /*0001d2a4*/ ADDEQ       R2, R3, #13184              @ 0x3380 
    /*0001d2a8*/ ADDNE       R2, R3, #1000               @ 0x3e8 
    /*0001d2ac*/ ADDEQ       R2, R2, #24 
    /*0001d2b0*/ LDRB        R2, [R2, #524]              @ 0x20c 
    /*0001d2b4*/ TST         R2, #32 
    /*0001d2b8*/ BEQ         VPSS_DRV_CalcNrDomainEnable_x1d2dc
    /*0001d2bc*/ LDR         R2, [R3, #32] 
    /*0001d2c0*/ SUB         R2, R2, #1 
    /*0001d2c4*/ CMP         R2, #1 
    /*0001d2c8*/ BLS         VPSS_DRV_CalcNrDomainEnable_x1d2dc
    /*0001d2cc*/ ADD         R3, R3, #12288              @ 0x3000 
    /*0001d2d0*/ MOV         R2, #1 
    /*0001d2d4*/ STR         R2, [R3, #1636]             @ 0x664 
    /*0001d2d8*/ BX          LR 
    VPSS_DRV_CalcNrDomainEnable_x1d2dc:
    /*0001d2dc*/ ADD         R3, R3, #12288              @ 0x3000 
    /*0001d2e0*/ MOV         R2, #0 
    /*0001d2e4*/ STR         R2, [R3, #1636]             @ 0x664 
    /*0001d2e8*/ BX          LR 
FUNC_END VPSS_DRV_CalcNrDomainEnable


FUNC_BEGIN VpssDrvInterpolation
    /*0001d2ec*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001d2f0*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001d2f4*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001d2f8*/ SUB         SP, SP, #12 
    /*0001d2fc*/ LDR         R5, [R4, R0, LSL #2] 
    /*0001d300*/ LDR         R2, [R5, #996]              @ 0x3e4 
    /*0001d304*/ CMP         R2, #0 
    /*0001d308*/ BEQ         VpssDrvInterpolation_x1d314
    VpssDrvInterpolation_x1d30c:
    /*0001d30c*/ ADD         SP, SP, #12 
    /*0001d310*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssDrvInterpolation_x1d314:
    /*0001d314*/ MOV         R7, R0 
    /*0001d318*/ BL          0x000000000001D318          @ VPSS_DRV_GetIspRtISO [R_ARM_CALL: .text+0x1d194] 
    /*0001d31c*/ ADD         R8, R5, #12288              @ 0x3000 
    /*0001d320*/ LDR         R3, [R8, #3052]             @ 0xbec 
    /*0001d324*/ CMP         R0, R3 
    /*0001d328*/ MOV         R6, R0 
    /*0001d32c*/ BEQ         VpssDrvInterpolation_x1d30c
    /*0001d330*/ LDR         R1, [R5, #1720]             @ 0x6b8 
    /*0001d334*/ ADD         R9, R5, #13184              @ 0x3380 
    /*0001d338*/ ADD         R9, R9, #24 
    /*0001d33c*/ CMP         R0, R1 
    /*0001d340*/ BLS         VpssDrvInterpolation_x1d3a0
    /*0001d344*/ LDR         LR, [R5, #1716]             @ 0x6b4 
    /*0001d348*/ ADD         R3, R5, LR, LSL #2 
    /*0001d34c*/ LDR         R3, [R3, #1716]             @ 0x6b4 
    /*0001d350*/ CMP         R0, R3 
    /*0001d354*/ BHI         VpssDrvInterpolation_x1d3e0
    /*0001d358*/ CMP         LR, #1 
    /*0001d35c*/ BLS         VpssDrvInterpolation_x1d3a0
    /*0001d360*/ LDR         R3, [R5, #1724]             @ 0x6bc 
    /*0001d364*/ CMP         R0, R3 
    /*0001d368*/ BEQ         VpssDrvInterpolation_x1d458
    /*0001d36c*/ ADDCS       R2, R5, #1712               @ 0x6b0 
    /*0001d370*/ MOVCS       R0, #1 
    /*0001d374*/ ADDCS       R2, R2, #12 
    /*0001d378*/ BCS         VpssDrvInterpolation_x1d394
    /*0001d37c*/ B           VpssDrvInterpolation_x1d44c
    VpssDrvInterpolation_x1d380:
    /*0001d380*/ LDR         IP, [R2, #4]! 
    /*0001d384*/ CMP         R6, IP 
    /*0001d388*/ BEQ         VpssDrvInterpolation_x1d404
    /*0001d38c*/ BCC         VpssDrvInterpolation_x1d424
    /*0001d390*/ MOV         R0, R3 
    VpssDrvInterpolation_x1d394:
    /*0001d394*/ ADD         R3, R0, #1 
    /*0001d398*/ CMP         LR, R3 
    /*0001d39c*/ BNE         VpssDrvInterpolation_x1d380
    VpssDrvInterpolation_x1d3a0:
    /*0001d3a0*/ MOVW        R2, #1784                   @ 0x6f8 
    /*0001d3a4*/ MOV         R3, R1 
    /*0001d3a8*/ MOV         R0, R2 
    VpssDrvInterpolation_x1d3ac:
    /*0001d3ac*/ ADD         R0, R5, R0 
    /*0001d3b0*/ ADD         R2, R5, R2 
    /*0001d3b4*/ STM         SP, {R0, R9} 
    /*0001d3b8*/ MOV         R0, R6 
    /*0001d3bc*/ BL          0x000000000001D3BC          @ V16cv500CalcNRxV2AotoParam [R_ARM_CALL: .text+0x31284] 
    /*0001d3c0*/ LDR         R3, [R4, R7, LSL #2] 
    /*0001d3c4*/ MOV         R2, #1 
    /*0001d3c8*/ STR         R2, [R3, #968]              @ 0x3c8 
    /*0001d3cc*/ STR         R2, [R3, #972]              @ 0x3cc 
    /*0001d3d0*/ STR         R2, [R3, #976]              @ 0x3d0 
    /*0001d3d4*/ STR         R6, [R8, #3052]             @ 0xbec 
    /*0001d3d8*/ ADD         SP, SP, #12 
    /*0001d3dc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VpssDrvInterpolation_x1d3e0:
    /*0001d3e0*/ SUB         LR, LR, #1 
    /*0001d3e4*/ MOVW        R3, #1784                   @ 0x6f8 
    /*0001d3e8*/ MOVW        R0, #714                    @ 0x2ca 
    /*0001d3ec*/ MLA         R0, R0, LR, R3 
    /*0001d3f0*/ ADD         LR, R5, LR, LSL #2 
    /*0001d3f4*/ LDR         R1, [LR, #1720]             @ 0x6b8 
    /*0001d3f8*/ MOV         R2, R0 
    /*0001d3fc*/ MOV         R3, R1 
    /*0001d400*/ B           VpssDrvInterpolation_x1d3ac
    VpssDrvInterpolation_x1d404:
    /*0001d404*/ MOVW        R2, #1784                   @ 0x6f8 
    /*0001d408*/ MOVW        R0, #714                    @ 0x2ca 
    /*0001d40c*/ MLA         R0, R0, R3, R2 
    /*0001d410*/ ADD         R3, R5, R3, LSL #2 
    /*0001d414*/ LDR         R1, [R3, #1720]             @ 0x6b8 
    /*0001d418*/ MOV         R2, R0 
    /*0001d41c*/ MOV         R3, R1 
    /*0001d420*/ B           VpssDrvInterpolation_x1d3ac
    VpssDrvInterpolation_x1d424:
    /*0001d424*/ MOVW        R2, #714                    @ 0x2ca 
    /*0001d428*/ ADD         R3, R5, R3, LSL #2 
    /*0001d42c*/ MUL         R0, R2, R0 
    /*0001d430*/ LDR         R1, [R3, #1716]             @ 0x6b4 
    /*0001d434*/ LDR         R3, [R3, #1720]             @ 0x6b8 
    /*0001d438*/ ADD         R2, R0, #1776               @ 0x6f0 
    /*0001d43c*/ ADD         R0, R0, #2496               @ 0x9c0 
    /*0001d440*/ ADD         R2, R2, #8 
    /*0001d444*/ ADD         R0, R0, #2 
    /*0001d448*/ B           VpssDrvInterpolation_x1d3ac
    VpssDrvInterpolation_x1d44c:
    /*0001d44c*/ MOVW        R0, #2498                   @ 0x9c2 
    /*0001d450*/ MOVW        R2, #1784                   @ 0x6f8 
    /*0001d454*/ B           VpssDrvInterpolation_x1d3ac
    VpssDrvInterpolation_x1d458:
    /*0001d458*/ MOVW        R2, #2498                   @ 0x9c2 
    /*0001d45c*/ MOV         R1, R0 
    /*0001d460*/ MOV         R0, R2 
    /*0001d464*/ B           VpssDrvInterpolation_x1d3ac
FUNC_END VpssDrvInterpolation


FUNC_BEGIN VPSS_DRV_PrepareNRxV2Param
    /*0001d468*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001d46c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001d470*/ PUSH        {R4, R5, LR} 
    /*0001d474*/ SUB         SP, SP, #12 
    /*0001d478*/ LDR         R4, [R3, R0, LSL #2] 
    /*0001d47c*/ LDR         R3, [R4, #996]              @ 0x3e4 
    /*0001d480*/ CMP         R3, #0 
    /*0001d484*/ ADD         R3, R4, #16384              @ 0x4000 
    /*0001d488*/ ADDEQ       R1, R4, #13184              @ 0x3380 
    /*0001d48c*/ ADDNE       R1, R4, #1000               @ 0x3e8 
    /*0001d490*/ LDR         R5, [R3, #2352]             @ 0x930 
    /*0001d494*/ ADDEQ       R1, R1, #24 
    /*0001d498*/ CMP         R5, #0 
    /*0001d49c*/ BEQ         VPSS_DRV_PrepareNRxV2Param_x1d4ec
    /*0001d4a0*/ LDR         R5, [R3, #2804]             @ 0xaf4 
    /*0001d4a4*/ CMP         R5, #0 
    /*0001d4a8*/ BEQ         VPSS_DRV_PrepareNRxV2Param_x1d508
    /*0001d4ac*/ LDR         R3, [R5, #72]               @ 0x48 
    /*0001d4b0*/ CMP         R3, #0 
    /*0001d4b4*/ BEQ         VPSS_DRV_PrepareNRxV2Param_x1d530
    /*0001d4b8*/ MOV         R3, #1 
    /*0001d4bc*/ STR         R3, [R4, #968]              @ 0x3c8 
    /*0001d4c0*/ STR         R3, [R4, #972]              @ 0x3cc 
    /*0001d4c4*/ STR         R3, [R4, #976]              @ 0x3d0 
    /*0001d4c8*/ BL          0x000000000001D4C8          @ V16cv500MapNRx [R_ARM_CALL: .text+0x2da60] 
    /*0001d4cc*/ ADD         R0, R4, #13888              @ 0x3640 
    /*0001d4d0*/ ADD         R0, R0, #40                 @ 0x28 
    /*0001d4d4*/ ADD         R1, R5, #80                 @ 0x50 
    /*0001d4d8*/ MOV         R2, #80                     @ 0x50 
    /*0001d4dc*/ BL          0x000000000001D4DC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001d4e0*/ MOV         R0, #0 
    VPSS_DRV_PrepareNRxV2Param_x1d4e4:
    /*0001d4e4*/ ADD         SP, SP, #12 
    /*0001d4e8*/ POP         {R4, R5, PC} 
    VPSS_DRV_PrepareNRxV2Param_x1d4ec:
    /*0001d4ec*/ LDR         R3, [R4, #968]              @ 0x3c8 
    /*0001d4f0*/ CMP         R3, #1 
    /*0001d4f4*/ MOVNE       R0, R5 
    /*0001d4f8*/ BNE         VPSS_DRV_PrepareNRxV2Param_x1d4e4
    /*0001d4fc*/ BL          0x000000000001D4FC          @ V16cv500MapNRx [R_ARM_CALL: .text+0x2da60] 
    /*0001d500*/ MOV         R0, R5 
    /*0001d504*/ B           VPSS_DRV_PrepareNRxV2Param_x1d4e4
    VPSS_DRV_PrepareNRxV2Param_x1d508:
    /*0001d508*/ MOVW        R3, #4195                   @ 0x1063 
    /*0001d50c*/ MOVW        R2, #0                      @ .LC157 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x762c] 
    /*0001d510*/ STR         R3, [SP] 
    /*0001d514*/ MOVT        R2, #0                      @ .LC157 [R_ARM_MOVT_ABS: .rodata.str1.4+0x762c] 
    /*0001d518*/ LDR         R3, [PC, #56]               @ 0x000000000001d558 
    /*0001d51c*/ MOV         R1, #7 
    /*0001d520*/ MOV         R0, #3 
    /*0001d524*/ BL          0x000000000001D524          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d528*/ MVN         R0, #0 
    /*0001d52c*/ B           VPSS_DRV_PrepareNRxV2Param_x1d4e4
    VPSS_DRV_PrepareNRxV2Param_x1d530:
    /*0001d530*/ MOVW        R3, #4207                   @ 0x106f 
    /*0001d534*/ MOVW        R2, #0                      @ .LC158 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7680] 
    /*0001d538*/ STR         R3, [SP] 
    /*0001d53c*/ MOVT        R2, #0                      @ .LC158 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7680] 
    /*0001d540*/ LDR         R3, [PC, #16]               @ 0x000000000001d558 
    /*0001d544*/ MOV         R1, #7 
    /*0001d548*/ MOV         R0, #4 
    /*0001d54c*/ BL          0x000000000001D54C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d550*/ MVN         R0, #0 
    /*0001d554*/ B           VPSS_DRV_PrepareNRxV2Param_x1d4e4
    /*0001d558*/ ANDEQ       R1, R0, IP, LSL #3 
FUNC_END VPSS_DRV_PrepareNRxV2Param


FUNC_BEGIN VPSS_DRV_Prepare3dnrParam
    /*0001d55c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001d560*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001d564*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001d568*/ LDR         R2, [R3, #988]              @ 0x3dc 
    /*0001d56c*/ CMP         R2, #1 
    /*0001d570*/ BEQ         VPSS_DRV_Prepare3dnrParam_x1d57c
    VPSS_DRV_Prepare3dnrParam_x1d574:
    /*0001d574*/ MOV         R0, #0 
    /*0001d578*/ BX          LR 
    VPSS_DRV_Prepare3dnrParam_x1d57c:
    /*0001d57c*/ LDR         R3, [R3, #992]              @ 0x3e0 
    /*0001d580*/ CMP         R3, #2 
    /*0001d584*/ BNE         VPSS_DRV_Prepare3dnrParam_x1d574
    VPSS_DRV_Prepare3dnrParam_x1d588:
    /*0001d588*/ B           VPSS_DRV_Prepare3dnrParam_x1d588@ VPSS_DRV_PrepareNRxV2Param [R_ARM_JUMP24: .text+0x1d468] 
FUNC_END VPSS_DRV_Prepare3dnrParam


FUNC_BEGIN VPSS_DRV_Prepare3dnrInfo
    /*0001d58c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001d590*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001d594*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001d598*/ SUB         SP, SP, #16 
    /*0001d59c*/ MOV         R4, R0 
    /*0001d5a0*/ LDR         R7, [R6, R0, LSL #2] 
    /*0001d5a4*/ BL          0x000000000001D5A4          @ VPSS_DRV_GetSplitNum [R_ARM_CALL: .text+0x1a5a8] 
    /*0001d5a8*/ ADD         R5, R7, #16384              @ 0x4000 
    /*0001d5ac*/ LDR         R3, [R7, #28] 
    /*0001d5b0*/ STR         R3, [R5, #2340]             @ 0x924 
    /*0001d5b4*/ MOV         R8, R0 
    /*0001d5b8*/ MOV         R0, R4 
    /*0001d5bc*/ BL          0x000000000001D5BC          @ VpssDrvInterpolation [R_ARM_CALL: .text+0x1d2ec] 
    /*0001d5c0*/ LDR         R3, [R6, R4, LSL #2] 
    /*0001d5c4*/ LDR         R2, [R3, #996]              @ 0x3e4 
    /*0001d5c8*/ CMP         R2, #0 
    /*0001d5cc*/ ADDEQ       R2, R3, #13184              @ 0x3380 
    /*0001d5d0*/ ADDNE       R2, R3, #1000               @ 0x3e8 
    /*0001d5d4*/ ADDEQ       R2, R2, #24 
    /*0001d5d8*/ LDRB        R2, [R2, #524]              @ 0x20c 
    /*0001d5dc*/ TST         R2, #32 
    /*0001d5e0*/ BEQ         VPSS_DRV_Prepare3dnrInfo_x1d648
    /*0001d5e4*/ LDR         R2, [R3, #32] 
    /*0001d5e8*/ SUB         R2, R2, #1 
    /*0001d5ec*/ CMP         R2, #1 
    /*0001d5f0*/ ADDHI       R3, R3, #12288              @ 0x3000 
    /*0001d5f4*/ MOVHI       R2, #1 
    /*0001d5f8*/ STRHI       R2, [R3, #1636]             @ 0x664 
    /*0001d5fc*/ BLS         VPSS_DRV_Prepare3dnrInfo_x1d648
    /*0001d600*/ LDR         R3, [R7, #28] 
    /*0001d604*/ CMP         R3, #1 
    /*0001d608*/ BEQ         VPSS_DRV_Prepare3dnrInfo_x1d660
    VPSS_DRV_Prepare3dnrInfo_x1d60c:
    /*0001d60c*/ MOV         R3, #0 
    /*0001d610*/ STR         R3, [R5, #2340]             @ 0x924 
    /*0001d614*/ STR         R3, [R5, #2344]             @ 0x928 
    /*0001d618*/ STR         R3, [R5, #2348]             @ 0x92c 
    VPSS_DRV_Prepare3dnrInfo_x1d61c:
    /*0001d61c*/ MOV         R1, R8 
    /*0001d620*/ MOV         R0, R4 
    /*0001d624*/ BL          0x000000000001D624          @ VPSS_DRV_PrepareRefInfo [R_ARM_CALL: .text+0x1cff4] 
    /*0001d628*/ MOV         R1, R8 
    /*0001d62c*/ MOV         R0, R4 
    /*0001d630*/ BL          0x000000000001D630          @ VPSS_DRV_PrepareRfrInfo [R_ARM_CALL: .text+0x1d054] 
    /*0001d634*/ MOV         R0, R4 
    /*0001d638*/ BL          0x000000000001D638          @ VPSS_DRV_Prepare3dnrParam [R_ARM_CALL: .text+0x1d55c] 
    /*0001d63c*/ MOV         R0, #0 
    /*0001d640*/ ADD         SP, SP, #16 
    /*0001d644*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_Prepare3dnrInfo_x1d648:
    /*0001d648*/ ADD         R3, R3, #12288              @ 0x3000 
    /*0001d64c*/ MOV         R2, #0 
    /*0001d650*/ STR         R2, [R3, #1636]             @ 0x664 
    /*0001d654*/ LDR         R3, [R7, #28] 
    /*0001d658*/ CMP         R3, #1 
    /*0001d65c*/ BNE         VPSS_DRV_Prepare3dnrInfo_x1d60c
    VPSS_DRV_Prepare3dnrInfo_x1d660:
    /*0001d660*/ ADD         R2, R7, #106496             @ 0x1a000 
    /*0001d664*/ LDR         R1, [R2, #712]              @ 0x2c8 
    /*0001d668*/ CMP         R1, #0 
    /*0001d66c*/ BNE         VPSS_DRV_Prepare3dnrInfo_x1d60c
    /*0001d670*/ LDR         R0, [R7, #40]               @ 0x28 
    /*0001d674*/ STR         R0, [R5, #2352]             @ 0x930 
    /*0001d678*/ LDR         R0, [R7, #980]              @ 0x3d4 
    /*0001d67c*/ LDR         R2, [R2, #632]              @ 0x278 
    /*0001d680*/ CMP         R0, #1 
    /*0001d684*/ BEQ         VPSS_DRV_Prepare3dnrInfo_x1d6b4
    /*0001d688*/ CMP         R2, #1 
    /*0001d68c*/ BEQ         VPSS_DRV_Prepare3dnrInfo_x1d6b4
    /*0001d690*/ ADD         R7, R7, #12288              @ 0x3000 
    /*0001d694*/ STR         R3, [R5, #2340]             @ 0x924 
    /*0001d698*/ LDR         R3, [R7, #1636]             @ 0x664 
    /*0001d69c*/ CMP         R3, #1 
    /*0001d6a0*/ STRNE       R1, [R5, #2348]             @ 0x92c 
    /*0001d6a4*/ STREQ       R3, [R5, #2348]             @ 0x92c 
    /*0001d6a8*/ STREQ       R3, [R5, #2344]             @ 0x928 
    /*0001d6ac*/ STRNE       R1, [R5, #2344]             @ 0x928 
    /*0001d6b0*/ B           VPSS_DRV_Prepare3dnrInfo_x1d61c
    VPSS_DRV_Prepare3dnrInfo_x1d6b4:
    /*0001d6b4*/ MOV         R1, #7 
    /*0001d6b8*/ STMIB       SP, {R0, R2} 
    /*0001d6bc*/ MOVW        R3, #4276                   @ 0x10b4 
    /*0001d6c0*/ MOV         R0, R1 
    /*0001d6c4*/ STR         R3, [SP] 
    /*0001d6c8*/ MOVW        R2, #0                      @ .LC159 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x76b4] 
    /*0001d6cc*/ LDR         R3, [PC, #52]               @ 0x000000000001d708 
    /*0001d6d0*/ MOVT        R2, #0                      @ .LC159 [R_ARM_MOVT_ABS: .rodata.str1.4+0x76b4] 
    /*0001d6d4*/ BL          0x000000000001D6D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d6d8*/ LDR         R1, [R6, R4, LSL #2] 
    /*0001d6dc*/ MOV         R2, #0 
    /*0001d6e0*/ MOV         R3, #1 
    /*0001d6e4*/ STR         R2, [R5, #2340]             @ 0x924 
    /*0001d6e8*/ STR         R2, [R5, #2344]             @ 0x928 
    /*0001d6ec*/ STR         R3, [R5, #2348]             @ 0x92c 
    /*0001d6f0*/ STR         R2, [R7, #980]              @ 0x3d4 
    /*0001d6f4*/ STR         R2, [R5, #684]              @ 0x2ac 
    /*0001d6f8*/ STR         R3, [R1, #968]              @ 0x3c8 
    /*0001d6fc*/ STR         R3, [R1, #972]              @ 0x3cc 
    /*0001d700*/ STR         R3, [R1, #976]              @ 0x3d0 
    /*0001d704*/ B           VPSS_DRV_Prepare3dnrInfo_x1d61c
    /*0001d708*/ ANDEQ       R1, R0, R8, LSR #3 
FUNC_END VPSS_DRV_Prepare3dnrInfo


FUNC_BEGIN VPSS_DRV_CheckMosaicCfg
    /*0001d70c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001d710*/ SUB         SP, SP, #20 
    /*0001d714*/ LDR         R3, [R1, #8] 
    /*0001d718*/ LDR         R2, [R1, #12] 
    /*0001d71c*/ TST         R3, #3 
    /*0001d720*/ BNE         VPSS_DRV_CheckMosaicCfg_x1d74c
    /*0001d724*/ TST         R2, #3 
    /*0001d728*/ BNE         VPSS_DRV_CheckMosaicCfg_x1d74c
    /*0001d72c*/ LDR         R3, [R1, #16] 
    /*0001d730*/ TST         R3, #3 
    /*0001d734*/ BNE         VPSS_DRV_CheckMosaicCfg_x1d77c
    /*0001d738*/ LDR         R3, [R1, #20] 
    /*0001d73c*/ ANDS        R0, R3, #1 
    /*0001d740*/ BNE         VPSS_DRV_CheckMosaicCfg_x1d7a8
    VPSS_DRV_CheckMosaicCfg_x1d744:
    /*0001d744*/ ADD         SP, SP, #20 
    /*0001d748*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckMosaicCfg_x1d74c:
    /*0001d74c*/ STR         R2, [SP, #8] 
    /*0001d750*/ MOVW        R1, #4325                   @ 0x10e5 
    /*0001d754*/ STR         R3, [SP, #4] 
    /*0001d758*/ MOVW        R2, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7710] 
    /*0001d75c*/ STR         R1, [SP] 
    /*0001d760*/ MOVT        R2, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7710] 
    /*0001d764*/ LDR         R3, [PC, #84]               @ 0x000000000001d7c0 
    /*0001d768*/ MOV         R1, #7 
    /*0001d76c*/ MOV         R0, #3 
    /*0001d770*/ BL          0x000000000001D770          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d774*/ MVN         R0, #0 
    /*0001d778*/ B           VPSS_DRV_CheckMosaicCfg_x1d744
    VPSS_DRV_CheckMosaicCfg_x1d77c:
    /*0001d77c*/ MOVW        R2, #0                      @ .LC161 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7758] 
    /*0001d780*/ MOVT        R2, #0                      @ .LC161 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7758] 
    /*0001d784*/ STR         R3, [SP, #4] 
    /*0001d788*/ MOVW        R3, #4332                   @ 0x10ec 
    /*0001d78c*/ STR         R3, [SP] 
    VPSS_DRV_CheckMosaicCfg_x1d790:
    /*0001d790*/ LDR         R3, [PC, #40]               @ 0x000000000001d7c0 
    /*0001d794*/ MOV         R1, #7 
    /*0001d798*/ MOV         R0, #3 
    /*0001d79c*/ BL          0x000000000001D79C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d7a0*/ MVN         R0, #0 
    /*0001d7a4*/ B           VPSS_DRV_CheckMosaicCfg_x1d744
    VPSS_DRV_CheckMosaicCfg_x1d7a8:
    /*0001d7a8*/ STR         R3, [SP, #4] 
    /*0001d7ac*/ MOVW        R2, #0                      @ .LC162 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77a0] 
    /*0001d7b0*/ MOVW        R3, #4339                   @ 0x10f3 
    /*0001d7b4*/ MOVT        R2, #0                      @ .LC162 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77a0] 
    /*0001d7b8*/ STR         R3, [SP] 
    /*0001d7bc*/ B           VPSS_DRV_CheckMosaicCfg_x1d790
    /*0001d7c0*/ ANDEQ       R1, R0, R4, ASR #3 
FUNC_END VPSS_DRV_CheckMosaicCfg


FUNC_BEGIN VPSS_DRV_GetRgnGrpMosaic
    /*0001d7c4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001d7c8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001d7cc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001d7d0*/ MOV         R5, R0 
    /*0001d7d4*/ SUB         SP, SP, #36                 @ 0x24 
    /*0001d7d8*/ MOV         R0, #3 
    /*0001d7dc*/ LDR         R4, [R3, R5, LSL #2] 
    /*0001d7e0*/ BL          0x000000000001D7E0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d7e4*/ CMP         R0, #0 
    /*0001d7e8*/ BEQ         VPSS_DRV_GetRgnGrpMosaic_x1da84
    /*0001d7ec*/ MOV         R0, #3 
    /*0001d7f0*/ BL          0x000000000001D7F0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d7f4*/ LDR         R3, [R0, #8] 
    /*0001d7f8*/ CMP         R3, #0 
    /*0001d7fc*/ BEQ         VPSS_DRV_GetRgnGrpMosaic_x1d8d8
    /*0001d800*/ MOV         R0, #3 
    /*0001d804*/ MOV         R3, #0 
    /*0001d808*/ STR         R5, [SP, #12] 
    /*0001d80c*/ MOV         R6, #7 
    /*0001d810*/ STR         R3, [SP, #16] 
    /*0001d814*/ STR         R6, [SP, #8] 
    /*0001d818*/ BL          0x000000000001D818          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d81c*/ ADD         R2, SP, #20 
    /*0001d820*/ ADD         R1, SP, #8 
    /*0001d824*/ LDR         R3, [R0, #8] 
    /*0001d828*/ MOV         R0, #4 
    /*0001d82c*/ BLX         R3 
    /*0001d830*/ CMP         R0, #0 
    /*0001d834*/ BNE         VPSS_DRV_GetRgnGrpMosaic_x1daa8
    /*0001d838*/ LDR         R1, [SP, #20] 
    /*0001d83c*/ ADD         R7, R4, #16384              @ 0x4000 
    /*0001d840*/ LDR         R8, [SP, #24] 
    /*0001d844*/ CMP         R1, #0 
    /*0001d848*/ STR         R1, [R7, #1760]             @ 0x6e0 
    /*0001d84c*/ STR         R8, [R7, #1752]             @ 0x6d8 
    /*0001d850*/ BEQ         VPSS_DRV_GetRgnGrpMosaic_x1dacc
    /*0001d854*/ ADD         R6, R4, #12288              @ 0x3000 
    /*0001d858*/ LDR         R3, [R7, #1780]             @ 0x6f4 
    /*0001d85c*/ LDR         R2, [R7, #1772]             @ 0x6ec 
    /*0001d860*/ LDR         IP, [R6, #3176]             @ 0xc68 
    /*0001d864*/ ADD         R3, R3, R2 
    /*0001d868*/ CMP         IP, R3 
    /*0001d86c*/ BCC         VPSS_DRV_GetRgnGrpMosaic_x1d918
    /*0001d870*/ LDR         R3, [R7, #1784]             @ 0x6f8 
    /*0001d874*/ LDR         R2, [R7, #1776]             @ 0x6f0 
    /*0001d878*/ LDR         LR, [R6, #3180]             @ 0xc6c 
    /*0001d87c*/ ADD         R3, R3, R2 
    /*0001d880*/ CMP         LR, R3 
    /*0001d884*/ ADDCS       R3, R4, #18176              @ 0x4700 
    /*0001d888*/ ADDCS       R3, R3, #4 
    /*0001d88c*/ BCS         VPSS_DRV_GetRgnGrpMosaic_x1d8c0
    /*0001d890*/ B           VPSS_DRV_GetRgnGrpMosaic_x1d918
    VPSS_DRV_GetRgnGrpMosaic_x1d894:
    /*0001d894*/ LDR         R2, [R3, #8] 
    /*0001d898*/ ADD         R3, R3, #24 
    /*0001d89c*/ LDR         SL, [R3, #-24]              @ 0xffffffe8 
    /*0001d8a0*/ ADD         R2, R2, SL 
    /*0001d8a4*/ CMP         IP, R2 
    /*0001d8a8*/ BCC         VPSS_DRV_GetRgnGrpMosaic_x1d918
    /*0001d8ac*/ LDR         R2, [R9, #12] 
    /*0001d8b0*/ LDR         R9, [R9, #4] 
    /*0001d8b4*/ ADD         R2, R2, R9 
    /*0001d8b8*/ CMP         R2, LR 
    /*0001d8bc*/ BHI         VPSS_DRV_GetRgnGrpMosaic_x1d918
    VPSS_DRV_GetRgnGrpMosaic_x1d8c0:
    /*0001d8c0*/ ADD         R0, R0, #1 
    /*0001d8c4*/ MOV         R9, R3 
    /*0001d8c8*/ CMP         R0, R1 
    /*0001d8cc*/ BNE         VPSS_DRV_GetRgnGrpMosaic_x1d894
    /*0001d8d0*/ CMP         R8, #0 
    /*0001d8d4*/ BNE         VPSS_DRV_GetRgnGrpMosaic_x1d920
    VPSS_DRV_GetRgnGrpMosaic_x1d8d8:
    /*0001d8d8*/ MOV         R0, #3 
    /*0001d8dc*/ BL          0x000000000001D8DC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d8e0*/ LDR         R3, [R0, #12] 
    /*0001d8e4*/ CMP         R3, #0 
    /*0001d8e8*/ BEQ         VPSS_DRV_GetRgnGrpMosaic_x1d910
    /*0001d8ec*/ MOV         R0, #3 
    /*0001d8f0*/ BL          0x000000000001D8F0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d8f4*/ MOV         R2, #0 
    /*0001d8f8*/ ADD         R1, SP, #8 
    /*0001d8fc*/ LDR         R3, [R0, #12] 
    /*0001d900*/ MOV         R0, #4 
    /*0001d904*/ BLX         R3 
    /*0001d908*/ CMP         R0, #0 
    /*0001d90c*/ BNE         VPSS_DRV_GetRgnGrpMosaic_x1da60
    VPSS_DRV_GetRgnGrpMosaic_x1d910:
    /*0001d910*/ ADD         SP, SP, #36                 @ 0x24 
    /*0001d914*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_GetRgnGrpMosaic_x1d918:
    /*0001d918*/ MOV         R3, #1 
    /*0001d91c*/ STR         R3, [R7, #1752]             @ 0x6d8 
    VPSS_DRV_GetRgnGrpMosaic_x1d920:
    /*0001d920*/ ADD         R7, R4, #17920              @ 0x4600 
    /*0001d924*/ ADD         R9, R4, #18176              @ 0x4700 
    /*0001d928*/ MOV         R8, #0 
    /*0001d92c*/ ADD         R7, R7, #228                @ 0xe4 
    /*0001d930*/ ADD         R9, R9, #72                 @ 0x48 
    /*0001d934*/ MOV         FP, R8 
    VPSS_DRV_GetRgnGrpMosaic_x1d938:
    /*0001d938*/ MOV         R3, #1 
    /*0001d93c*/ STR         R3, [R7] 
    /*0001d940*/ LDR         R2, [SP, #28] 
    /*0001d944*/ MOV         R1, R7 
    /*0001d948*/ LDR         SL, [R7, #4] 
    /*0001d94c*/ MOV         R0, R5 
    /*0001d950*/ ADD         R2, R2, R8 
    /*0001d954*/ LDR         IP, [R2, #8] 
    /*0001d958*/ LDR         IP, [IP, #156]              @ 0x9c 
    /*0001d95c*/ STR         IP, [R7, #4] 
    /*0001d960*/ LDR         IP, [R2, #8] 
    /*0001d964*/ LDR         IP, [IP, #16] 
    /*0001d968*/ STR         IP, [R7, #8] 
    /*0001d96c*/ LDR         IP, [R2, #8] 
    /*0001d970*/ LDR         IP, [IP, #20] 
    /*0001d974*/ STR         IP, [R7, #12] 
    /*0001d978*/ LDR         IP, [R2, #8] 
    /*0001d97c*/ LDR         IP, [IP, #8] 
    /*0001d980*/ STR         IP, [R7, #16] 
    /*0001d984*/ LDR         R2, [R2, #8] 
    /*0001d988*/ LDR         R2, [R2, #12] 
    /*0001d98c*/ STR         R2, [R7, #20] 
    /*0001d990*/ BL          0x000000000001D990          @ VPSS_DRV_CheckMosaicCfg [R_ARM_CALL: .text+0x1d70c] 
    /*0001d994*/ CMP         R0, #0 
    /*0001d998*/ BNE         VPSS_DRV_GetRgnGrpMosaic_x1da48
    /*0001d99c*/ LDR         R0, [R7, #16] 
    /*0001d9a0*/ LDR         R1, [R7, #8] 
    /*0001d9a4*/ LDR         R2, [R6, #3176]             @ 0xc68 
    /*0001d9a8*/ ADD         R1, R0, R1 
    /*0001d9ac*/ CMP         R1, R2 
    /*0001d9b0*/ LDR         R1, [R7, #12] 
    /*0001d9b4*/ SUBHI       R2, R2, R0 
    /*0001d9b8*/ LDR         R0, [R7, #20] 
    /*0001d9bc*/ BICHI       R2, R2, #3 
    /*0001d9c0*/ STRHI       R2, [R7, #8] 
    /*0001d9c4*/ LDR         R2, [R6, #3180]             @ 0xc6c 
    /*0001d9c8*/ ADD         R1, R0, R1 
    /*0001d9cc*/ CMP         R1, R2 
    /*0001d9d0*/ SUBHI       R2, R2, R0 
    /*0001d9d4*/ BICHI       R2, R2, #3 
    /*0001d9d8*/ STRHI       R2, [R7, #12] 
    /*0001d9dc*/ LDR         R0, [SP, #28] 
    /*0001d9e0*/ ADD         R2, R4, #17920              @ 0x4600 
    /*0001d9e4*/ ADD         R2, R2, #232                @ 0xe8 
    /*0001d9e8*/ ADD         R0, R0, R8 
    VPSS_DRV_GetRgnGrpMosaic_x1d9ec:
    /*0001d9ec*/ LDR         R1, [R0, #8] 
    /*0001d9f0*/ LDR         R1, [R1, #156]              @ 0x9c 
    /*0001d9f4*/ STR         R1, [R2], #24 
    /*0001d9f8*/ CMP         R2, R9 
    /*0001d9fc*/ BNE         VPSS_DRV_GetRgnGrpMosaic_x1d9ec
    VPSS_DRV_GetRgnGrpMosaic_x1da00:
    /*0001da00*/ LDR         R0, [SP, #20] 
    /*0001da04*/ ADD         FP, FP, #1 
    /*0001da08*/ ADD         R7, R7, #24 
    /*0001da0c*/ ADD         R8, R8, #12 
    /*0001da10*/ CMP         R0, FP 
    /*0001da14*/ BHI         VPSS_DRV_GetRgnGrpMosaic_x1d938
    /*0001da18*/ CMP         R0, #4 
    /*0001da1c*/ BEQ         VPSS_DRV_GetRgnGrpMosaic_x1d8d8
    VPSS_DRV_GetRgnGrpMosaic_x1da20:
    /*0001da20*/ MOV         R3, #24 
    /*0001da24*/ MOV         R2, #0 
    /*0001da28*/ MLA         R4, R3, R0, R4 
    /*0001da2c*/ ADD         R4, R4, #17920              @ 0x4600 
    /*0001da30*/ ADD         R4, R4, #228                @ 0xe4 
    VPSS_DRV_GetRgnGrpMosaic_x1da34:
    /*0001da34*/ ADD         R0, R0, #1 
    /*0001da38*/ STR         R2, [R4], #24 
    /*0001da3c*/ CMP         R0, #4 
    /*0001da40*/ BNE         VPSS_DRV_GetRgnGrpMosaic_x1da34
    /*0001da44*/ B           VPSS_DRV_GetRgnGrpMosaic_x1d8d8
    VPSS_DRV_GetRgnGrpMosaic_x1da48:
    /*0001da48*/ MOV         R2, #24 
    /*0001da4c*/ MOV         R1, #0 
    /*0001da50*/ MOV         R0, R7 
    /*0001da54*/ BL          0x000000000001DA54          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0001da58*/ STR         SL, [R7, #4] 
    /*0001da5c*/ B           VPSS_DRV_GetRgnGrpMosaic_x1da00
    VPSS_DRV_GetRgnGrpMosaic_x1da60:
    /*0001da60*/ MOVW        R2, #4454                   @ 0x1166 
    /*0001da64*/ LDR         R1, [PC, #108]              @ 0x000000000001dad8 
    /*0001da68*/ MOVW        R3, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57f4] 
    /*0001da6c*/ MOVW        R0, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e8] 
    /*0001da70*/ MOVT        R3, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57f4] 
    /*0001da74*/ MOVT        R0, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e8] 
    /*0001da78*/ BL          0x000000000001DA78          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001da7c*/ ADD         SP, SP, #36                 @ 0x24 
    /*0001da80*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_GetRgnGrpMosaic_x1da84:
    /*0001da84*/ MOVW        R3, #4364                   @ 0x110c 
    /*0001da88*/ MOVW        R2, #0                      @ .LC163 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77e8] 
    /*0001da8c*/ STR         R3, [SP] 
    /*0001da90*/ MOVT        R2, #0                      @ .LC163 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77e8] 
    /*0001da94*/ LDR         R3, [PC, #60]               @ 0x000000000001dad8 
    /*0001da98*/ MOV         R1, #7 
    /*0001da9c*/ MOV         R0, #4 
    /*0001daa0*/ BL          0x000000000001DAA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001daa4*/ B           VPSS_DRV_GetRgnGrpMosaic_x1d910
    VPSS_DRV_GetRgnGrpMosaic_x1daa8:
    /*0001daa8*/ MOVW        R3, #4377                   @ 0x1119 
    /*0001daac*/ MOV         R1, R6 
    /*0001dab0*/ STR         R3, [SP] 
    /*0001dab4*/ MOVW        R2, #0                      @ .LC164 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7810] 
    /*0001dab8*/ LDR         R3, [PC, #24]               @ 0x000000000001dad8 
    /*0001dabc*/ MOVT        R2, #0                      @ .LC164 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7810] 
    /*0001dac0*/ MOV         R0, #3 
    /*0001dac4*/ BL          0x000000000001DAC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001dac8*/ B           VPSS_DRV_GetRgnGrpMosaic_x1d910
    VPSS_DRV_GetRgnGrpMosaic_x1dacc:
    /*0001dacc*/ CMP         R8, #0 
    /*0001dad0*/ BEQ         VPSS_DRV_GetRgnGrpMosaic_x1d8d8
    /*0001dad4*/ B           VPSS_DRV_GetRgnGrpMosaic_x1da20
    /*0001dad8*/ LDRDEQ      R1, [R0], -IP 
FUNC_END VPSS_DRV_GetRgnGrpMosaic


FUNC_BEGIN VPSS_DRV_IsTunlFrame
    /*0001dadc*/ LDR         R0, [R0, #312]              @ 0x138 
    /*0001dae0*/ CMP         R0, #0 
    /*0001dae4*/ LDRBNE      R0, [R0, #65]               @ 0x41 
    /*0001dae8*/ SUBNE       R0, R0, #1 
    /*0001daec*/ CLZNE       R0, R0 
    /*0001daf0*/ LSRNE       R0, R0, #5 
    /*0001daf4*/ BX          LR 
FUNC_END VPSS_DRV_IsTunlFrame


FUNC_BEGIN VPSS_DRV_IsTunlFrameOk
    /*0001daf8*/ LDR         R0, [R0, #312]              @ 0x138 
    /*0001dafc*/ CMP         R0, #0 
    /*0001db00*/ LDRBNE      R0, [R0, #64]               @ 0x40 
    /*0001db04*/ SUBNE       R0, R0, #1 
    /*0001db08*/ CLZNE       R0, R0 
    /*0001db0c*/ LSRNE       R0, R0, #5 
    /*0001db10*/ BX          LR 
FUNC_END VPSS_DRV_IsTunlFrameOk


FUNC_BEGIN VPSS_DRV_CheckInputPixelFmt
    /*0001db14*/ SUBS        IP, R1, #39                 @ 0x27 
    /*0001db18*/ SUB         R3, R1, #25 
    /*0001db1c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001db20*/ MOVNE       IP, #1 
    /*0001db24*/ CMP         R3, #1 
    /*0001db28*/ MOVLS       R3, #0 
    /*0001db2c*/ ANDHI       R3, IP, #1 
    /*0001db30*/ SUB         SP, SP, #20 
    /*0001db34*/ CMP         R3, #0 
    /*0001db38*/ BNE         VPSS_DRV_CheckInputPixelFmt_x1dbac
    /*0001db3c*/ CMP         R2, #39                     @ 0x27 
    /*0001db40*/ BEQ         VPSS_DRV_CheckInputPixelFmt_x1dba0
    /*0001db44*/ CMP         R2, #26 
    /*0001db48*/ BEQ         VPSS_DRV_CheckInputPixelFmt_x1db58
    VPSS_DRV_CheckInputPixelFmt_x1db4c:
    /*0001db4c*/ MOV         R0, R3 
    VPSS_DRV_CheckInputPixelFmt_x1db50:
    /*0001db50*/ ADD         SP, SP, #20 
    /*0001db54*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckInputPixelFmt_x1db58:
    /*0001db58*/ CMP         R1, #26 
    /*0001db5c*/ MOVEQ       R3, #0 
    /*0001db60*/ ANDNE       R3, IP, #1 
    /*0001db64*/ CMP         R3, #0 
    /*0001db68*/ BEQ         VPSS_DRV_CheckInputPixelFmt_x1db4c
    VPSS_DRV_CheckInputPixelFmt_x1db6c:
    /*0001db6c*/ STR         R2, [SP, #12] 
    /*0001db70*/ MOVW        R3, #4845                   @ 0x12ed 
    /*0001db74*/ STR         R1, [SP, #8] 
    /*0001db78*/ MOVW        R2, #0                      @ .LC166 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7878] 
    /*0001db7c*/ STR         R0, [SP, #4] 
    /*0001db80*/ MOVT        R2, #0                      @ .LC166 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7878] 
    /*0001db84*/ STR         R3, [SP] 
    /*0001db88*/ MOV         R1, #7 
    /*0001db8c*/ LDR         R3, [PC, #72]               @ 0x000000000001dbdc 
    /*0001db90*/ MOV         R0, #3 
    /*0001db94*/ BL          0x000000000001DB94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001db98*/ MVN         R0, #0 
    /*0001db9c*/ B           VPSS_DRV_CheckInputPixelFmt_x1db50
    VPSS_DRV_CheckInputPixelFmt_x1dba0:
    /*0001dba0*/ CMP         R1, #39                     @ 0x27 
    /*0001dba4*/ BEQ         VPSS_DRV_CheckInputPixelFmt_x1db4c
    /*0001dba8*/ B           VPSS_DRV_CheckInputPixelFmt_x1db6c
    VPSS_DRV_CheckInputPixelFmt_x1dbac:
    /*0001dbac*/ STR         R1, [SP, #8] 
    /*0001dbb0*/ MOVW        R3, #4811                   @ 0x12cb 
    /*0001dbb4*/ STR         R0, [SP, #4] 
    /*0001dbb8*/ MOVW        R2, #0                      @ .LC165 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x783c] 
    /*0001dbbc*/ STR         R3, [SP] 
    /*0001dbc0*/ MOVT        R2, #0                      @ .LC165 [R_ARM_MOVT_ABS: .rodata.str1.4+0x783c] 
    /*0001dbc4*/ LDR         R3, [PC, #16]               @ 0x000000000001dbdc 
    /*0001dbc8*/ MOV         R1, #7 
    /*0001dbcc*/ MOV         R0, #3 
    /*0001dbd0*/ BL          0x000000000001DBD0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001dbd4*/ MVN         R0, #0 
    /*0001dbd8*/ B           VPSS_DRV_CheckInputPixelFmt_x1db50
    /*0001dbdc*/ STRDEQ      R1, [R0], -R8 
FUNC_END VPSS_DRV_CheckInputPixelFmt


FUNC_BEGIN VPSS_DRV_CheckImageAttr
    /*0001dbe0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001dbe4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001dbe8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001dbec*/ MOV         R7, R1 
    /*0001dbf0*/ LDR         R9, [R3, R1, LSL #2] 
    /*0001dbf4*/ SUB         SP, SP, #28 
    /*0001dbf8*/ LDR         R8, [R0] 
    /*0001dbfc*/ LDR         R3, [R9, #28] 
    /*0001dc00*/ CMP         R3, #1 
    /*0001dc04*/ MOVNE       R5, #2 
    /*0001dc08*/ MOVEQ       R5, #4 
    /*0001dc0c*/ CMP         R8, #63                     @ 0x3f 
    /*0001dc10*/ BLS         VPSS_DRV_CheckImageAttr_x1def8
    /*0001dc14*/ LDR         R6, [R0, #4] 
    /*0001dc18*/ MOV         R4, R0 
    /*0001dc1c*/ CMP         R6, #63                     @ 0x3f 
    /*0001dc20*/ BLS         VPSS_DRV_CheckImageAttr_x1df1c
    /*0001dc24*/ LDR         R3, [R0, #20] 
    /*0001dc28*/ MOV         R1, R5 
    /*0001dc2c*/ MOV         R0, R8 
    /*0001dc30*/ CMP         R3, #0 
    /*0001dc34*/ BEQ         VPSS_DRV_CheckImageAttr_x1dd2c
    /*0001dc38*/ BL          0x000000000001DC38          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*0001dc3c*/ CMP         R1, #0 
    /*0001dc40*/ BNE         VPSS_DRV_CheckImageAttr_x1dfa0
    /*0001dc44*/ MOV         R1, R5 
    /*0001dc48*/ MOV         R0, R6 
    /*0001dc4c*/ BL          0x000000000001DC4C          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*0001dc50*/ CMP         R1, #0 
    /*0001dc54*/ BNE         VPSS_DRV_CheckImageAttr_x1dfd4
    VPSS_DRV_CheckImageAttr_x1dc58:
    /*0001dc58*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*0001dc5c*/ LDR         R2, [R4, #48]               @ 0x30 
    /*0001dc60*/ TST         R3, #15 
    /*0001dc64*/ LDR         R1, [R4, #52]               @ 0x34 
    /*0001dc68*/ BNE         VPSS_DRV_CheckImageAttr_x1de1c
    /*0001dc6c*/ TST         R2, #15 
    /*0001dc70*/ BNE         VPSS_DRV_CheckImageAttr_x1de1c
    /*0001dc74*/ TST         R1, #15 
    /*0001dc78*/ BNE         VPSS_DRV_CheckImageAttr_x1de1c
    /*0001dc7c*/ LDR         R2, [R9, #12] 
    /*0001dc80*/ MOV         R0, R7 
    /*0001dc84*/ LDR         R1, [R4, #12] 
    /*0001dc88*/ BL          0x000000000001DC88          @ VPSS_DRV_CheckInputPixelFmt [R_ARM_CALL: .text+0x1db14] 
    /*0001dc8c*/ CMP         R0, #0 
    /*0001dc90*/ BNE         VPSS_DRV_CheckImageAttr_x1dec4
    /*0001dc94*/ LDR         R3, [R4, #20] 
    /*0001dc98*/ CMP         R3, #1 
    /*0001dc9c*/ BHI         VPSS_DRV_CheckImageAttr_x1de60
    /*0001dca0*/ CMP         R3, #0 
    /*0001dca4*/ LDR         R3, [R4, #16] 
    /*0001dca8*/ BEQ         VPSS_DRV_CheckImageAttr_x1dd8c
    /*0001dcac*/ CMP         R3, #0 
    /*0001dcb0*/ BNE         VPSS_DRV_CheckImageAttr_x1dff0
    /*0001dcb4*/ LDRD        R2, [R4, #72]               @ 0x48 
    /*0001dcb8*/ ORRS        R1, R2, R3 
    /*0001dcbc*/ BEQ         VPSS_DRV_CheckImageAttr_x1decc
    /*0001dcc0*/ AND         R8, R2, #1 
    /*0001dcc4*/ MOV         R9, #0 
    /*0001dcc8*/ ORRS        R1, R8, R9 
    /*0001dccc*/ BNE         VPSS_DRV_CheckImageAttr_x1decc
    /*0001dcd0*/ LDR         R3, [R4, #12] 
    /*0001dcd4*/ CMP         R3, #39                     @ 0x27 
    /*0001dcd8*/ BEQ         VPSS_DRV_CheckImageAttr_x1dcf8
    /*0001dcdc*/ LDRD        R2, [R4, #80]               @ 0x50 
    /*0001dce0*/ ORRS        R1, R2, R3 
    /*0001dce4*/ BEQ         VPSS_DRV_CheckImageAttr_x1df40
    /*0001dce8*/ AND         R8, R2, #1 
    /*0001dcec*/ MOV         R9, #0 
    /*0001dcf0*/ ORRS        R1, R8, R9 
    /*0001dcf4*/ BNE         VPSS_DRV_CheckImageAttr_x1df40
    VPSS_DRV_CheckImageAttr_x1dcf8:
    /*0001dcf8*/ LDR         R3, [R4, #24] 
    /*0001dcfc*/ CMP         R3, #0 
    /*0001dd00*/ BNE         VPSS_DRV_CheckImageAttr_x1df58
    /*0001dd04*/ LDR         R2, [R4, #28] 
    /*0001dd08*/ SUB         R3, R2, #2 
    /*0001dd0c*/ CLZ         R3, R3 
    /*0001dd10*/ LSR         R3, R3, #5 
    /*0001dd14*/ CMP         R2, #3 
    /*0001dd18*/ ORRHI       R3, R3, #1 
    /*0001dd1c*/ CMP         R3, #0 
    /*0001dd20*/ BNE         VPSS_DRV_CheckImageAttr_x1df70
    VPSS_DRV_CheckImageAttr_x1dd24:
    /*0001dd24*/ ADD         SP, SP, #28 
    /*0001dd28*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_DRV_CheckImageAttr_x1dd2c:
    /*0001dd2c*/ BL          0x000000000001DD2C          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*0001dd30*/ CMP         R1, #0 
    /*0001dd34*/ BNE         VPSS_DRV_CheckImageAttr_x1ddd8
    VPSS_DRV_CheckImageAttr_x1dd38:
    /*0001dd38*/ MOV         R1, R5 
    /*0001dd3c*/ MOV         R0, R6 
    /*0001dd40*/ BL          0x000000000001DD40          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*0001dd44*/ CMP         R1, #0 
    /*0001dd48*/ BEQ         VPSS_DRV_CheckImageAttr_x1dc58
    /*0001dd4c*/ RSB         R3, R5, #0 
    /*0001dd50*/ STR         R5, [SP, #12] 
    /*0001dd54*/ AND         R3, R3, R6 
    /*0001dd58*/ STR         R6, [SP, #8] 
    /*0001dd5c*/ MOVW        R1, #4898                   @ 0x1322 
    /*0001dd60*/ STR         R3, [R4, #4] 
    /*0001dd64*/ MOVW        R2, #0                      @ .LC170 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x79a8] 
    /*0001dd68*/ STR         R3, [SP, #16] 
    /*0001dd6c*/ STR         R1, [SP] 
    /*0001dd70*/ MOVT        R2, #0                      @ .LC170 [R_ARM_MOVT_ABS: .rodata.str1.4+0x79a8] 
    /*0001dd74*/ STR         R7, [SP, #4] 
    /*0001dd78*/ MOV         R1, #7 
    /*0001dd7c*/ LDR         R3, [PC, #660]              @ 0x000000000001e018 
    /*0001dd80*/ MOV         R0, #4 
    /*0001dd84*/ BL          0x000000000001DD84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001dd88*/ B           VPSS_DRV_CheckImageAttr_x1dc58
    VPSS_DRV_CheckImageAttr_x1dd8c:
    /*0001dd8c*/ CMP         R3, #1 
    /*0001dd90*/ BHI         VPSS_DRV_CheckImageAttr_x1de8c
    /*0001dd94*/ BNE         VPSS_DRV_CheckImageAttr_x1dcf8
    /*0001dd98*/ LDR         R3, [R4, #12] 
    /*0001dd9c*/ CMP         R3, #26 
    /*0001dda0*/ BEQ         VPSS_DRV_CheckImageAttr_x1dcf8
    /*0001dda4*/ STR         R3, [SP, #4] 
    /*0001dda8*/ MOV         R2, #26 
    /*0001ddac*/ MOVW        R3, #4980                   @ 0x1374 
    /*0001ddb0*/ STR         R2, [SP, #8] 
    /*0001ddb4*/ STR         R3, [SP] 
    /*0001ddb8*/ MOVW        R2, #0                      @ .LC177 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7b98] 
    /*0001ddbc*/ LDR         R3, [PC, #596]              @ 0x000000000001e018 
    /*0001ddc0*/ MOVT        R2, #0                      @ .LC177 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7b98] 
    /*0001ddc4*/ MOV         R1, #7 
    /*0001ddc8*/ MOV         R0, #3 
    /*0001ddcc*/ BL          0x000000000001DDCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ddd0*/ MVN         R0, #0 
    /*0001ddd4*/ B           VPSS_DRV_CheckImageAttr_x1dd24
    VPSS_DRV_CheckImageAttr_x1ddd8:
    /*0001ddd8*/ RSB         R3, R5, #0 
    /*0001dddc*/ STR         R8, [SP, #8] 
    /*0001dde0*/ STR         R5, [SP, #12] 
    /*0001dde4*/ AND         R8, R8, R3 
    /*0001dde8*/ STR         R7, [SP, #4] 
    /*0001ddec*/ MOVW        R3, #4887                   @ 0x1317 
    /*0001ddf0*/ STR         R8, [R4] 
    /*0001ddf4*/ MOVW        R2, #0                      @ .LC169 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7958] 
    /*0001ddf8*/ STR         R3, [SP] 
    /*0001ddfc*/ MOVT        R2, #0                      @ .LC169 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7958] 
    /*0001de00*/ STR         R8, [SP, #16] 
    /*0001de04*/ MOV         R1, #7 
    /*0001de08*/ LDR         R3, [PC, #520]              @ 0x000000000001e018 
    /*0001de0c*/ MOV         R0, #4 
    /*0001de10*/ BL          0x000000000001DE10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001de14*/ LDR         R6, [R4, #4] 
    /*0001de18*/ B           VPSS_DRV_CheckImageAttr_x1dd38
    VPSS_DRV_CheckImageAttr_x1de1c:
    /*0001de1c*/ STR         R1, [SP, #16] 
    /*0001de20*/ MOVW        R0, #4926                   @ 0x133e 
    /*0001de24*/ STR         R2, [SP, #12] 
    /*0001de28*/ MOV         R1, #16 
    /*0001de2c*/ STR         R3, [SP, #8] 
    /*0001de30*/ MOVW        R2, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7a80] 
    /*0001de34*/ STR         R1, [SP, #20] 
    /*0001de38*/ MOVT        R2, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7a80] 
    /*0001de3c*/ STR         R0, [SP] 
    /*0001de40*/ MOV         R1, #7 
    /*0001de44*/ STR         R7, [SP, #4] 
    /*0001de48*/ MOV         R0, #3 
    /*0001de4c*/ LDR         R3, [PC, #452]              @ 0x000000000001e018 
    /*0001de50*/ BL          0x000000000001DE50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001de54*/ MVN         R0, #0 
    /*0001de58*/ ADD         SP, SP, #28 
    /*0001de5c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_DRV_CheckImageAttr_x1de60:
    /*0001de60*/ MOVW        R2, #0                      @ .LC174 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ae0] 
    /*0001de64*/ MOVT        R2, #0                      @ .LC174 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ae0] 
    /*0001de68*/ STR         R3, [SP, #4] 
    /*0001de6c*/ MOVW        R3, #4952                   @ 0x1358 
    /*0001de70*/ STR         R3, [SP] 
    VPSS_DRV_CheckImageAttr_x1de74:
    /*0001de74*/ LDR         R3, [PC, #412]              @ 0x000000000001e018 
    /*0001de78*/ MOV         R1, #7 
    /*0001de7c*/ MOV         R0, #3 
    /*0001de80*/ BL          0x000000000001DE80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001de84*/ MVN         R0, #0 
    /*0001de88*/ B           VPSS_DRV_CheckImageAttr_x1dd24
    VPSS_DRV_CheckImageAttr_x1de8c:
    /*0001de8c*/ MOV         R2, #1 
    /*0001de90*/ STR         R2, [SP, #12] 
    /*0001de94*/ MOVW        R2, #0                      @ .LC176 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7b50] 
    /*0001de98*/ MOVT        R2, #0                      @ .LC176 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7b50] 
    /*0001de9c*/ STR         R3, [SP, #4] 
    /*0001dea0*/ MOVW        R3, #4971                   @ 0x136b 
    /*0001dea4*/ STR         R0, [SP, #8] 
    /*0001dea8*/ STR         R3, [SP] 
    VPSS_DRV_CheckImageAttr_x1deac:
    /*0001deac*/ LDR         R3, [PC, #356]              @ 0x000000000001e018 
    /*0001deb0*/ MOV         R1, #7 
    /*0001deb4*/ MOV         R0, #3 
    /*0001deb8*/ BL          0x000000000001DEB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001debc*/ MVN         R0, #0 
    /*0001dec0*/ B           VPSS_DRV_CheckImageAttr_x1dd24
    VPSS_DRV_CheckImageAttr_x1dec4:
    /*0001dec4*/ MVN         R0, #0 
    /*0001dec8*/ B           VPSS_DRV_CheckImageAttr_x1dd24
    VPSS_DRV_CheckImageAttr_x1decc:
    /*0001decc*/ STRD        R2, [SP, #8] 
    /*0001ded0*/ MOVW        R2, #0                      @ .LC178 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7bec] 
    /*0001ded4*/ MOVT        R2, #0                      @ .LC178 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7bec] 
    /*0001ded8*/ MOVW        R3, #4989                   @ 0x137d 
    /*0001dedc*/ STR         R3, [SP] 
    VPSS_DRV_CheckImageAttr_x1dee0:
    /*0001dee0*/ LDR         R3, [PC, #304]              @ 0x000000000001e018 
    /*0001dee4*/ MOV         R1, #7 
    /*0001dee8*/ MOV         R0, #3 
    /*0001deec*/ BL          0x000000000001DEEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001def0*/ MVN         R0, #0 
    /*0001def4*/ B           VPSS_DRV_CheckImageAttr_x1dd24
    VPSS_DRV_CheckImageAttr_x1def8:
    /*0001def8*/ MOV         R2, #64                     @ 0x40 
    /*0001defc*/ MOVW        R3, #4866                   @ 0x1302 
    /*0001df00*/ STR         R2, [SP, #12] 
    /*0001df04*/ MOVW        R2, #0                      @ .LC167 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78d4] 
    /*0001df08*/ STR         R8, [SP, #8] 
    /*0001df0c*/ MOVT        R2, #0                      @ .LC167 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78d4] 
    /*0001df10*/ STR         R1, [SP, #4] 
    /*0001df14*/ STR         R3, [SP] 
    /*0001df18*/ B           VPSS_DRV_CheckImageAttr_x1deac
    VPSS_DRV_CheckImageAttr_x1df1c:
    /*0001df1c*/ MOV         R2, #64                     @ 0x40 
    /*0001df20*/ MOVW        R3, #4873                   @ 0x1309 
    /*0001df24*/ STR         R2, [SP, #12] 
    /*0001df28*/ MOVW        R2, #0                      @ .LC168 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7914] 
    /*0001df2c*/ STR         R6, [SP, #8] 
    /*0001df30*/ MOVT        R2, #0                      @ .LC168 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7914] 
    /*0001df34*/ STR         R1, [SP, #4] 
    /*0001df38*/ STR         R3, [SP] 
    /*0001df3c*/ B           VPSS_DRV_CheckImageAttr_x1deac
    VPSS_DRV_CheckImageAttr_x1df40:
    /*0001df40*/ STRD        R2, [SP, #8] 
    /*0001df44*/ MOVW        R3, #4998                   @ 0x1386 
    /*0001df48*/ MOVW        R2, #0                      @ .LC179 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c24] 
    /*0001df4c*/ STR         R3, [SP] 
    /*0001df50*/ MOVT        R2, #0                      @ .LC179 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c24] 
    /*0001df54*/ B           VPSS_DRV_CheckImageAttr_x1dee0
    VPSS_DRV_CheckImageAttr_x1df58:
    /*0001df58*/ STR         R3, [SP, #4] 
    /*0001df5c*/ MOVW        R2, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x71bc] 
    /*0001df60*/ MOVW        R3, #5006                   @ 0x138e 
    /*0001df64*/ MOVT        R2, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0x71bc] 
    /*0001df68*/ STR         R3, [SP] 
    /*0001df6c*/ B           VPSS_DRV_CheckImageAttr_x1de74
    VPSS_DRV_CheckImageAttr_x1df70:
    /*0001df70*/ STR         R2, [SP, #8] 
    /*0001df74*/ MOVW        R3, #5012                   @ 0x1394 
    /*0001df78*/ STR         R7, [SP, #4] 
    /*0001df7c*/ MOVW        R2, #0                      @ .LC180 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c5c] 
    /*0001df80*/ STR         R3, [SP] 
    /*0001df84*/ MOVT        R2, #0                      @ .LC180 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c5c] 
    /*0001df88*/ LDR         R3, [PC, #136]              @ 0x000000000001e018 
    /*0001df8c*/ MOV         R1, #7 
    /*0001df90*/ MOV         R0, #3 
    /*0001df94*/ BL          0x000000000001DF94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001df98*/ MVN         R0, #0 
    /*0001df9c*/ B           VPSS_DRV_CheckImageAttr_x1dd24
    VPSS_DRV_CheckImageAttr_x1dfa0:
    /*0001dfa0*/ MOVW        R2, #0                      @ .LC171 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x79f8] 
    /*0001dfa4*/ MOVT        R2, #0                      @ .LC171 [R_ARM_MOVT_ABS: .rodata.str1.4+0x79f8] 
    /*0001dfa8*/ MOVW        R3, #4907                   @ 0x132b 
    /*0001dfac*/ STR         R5, [SP, #12] 
    /*0001dfb0*/ STR         R8, [SP, #8] 
    /*0001dfb4*/ STR         R7, [SP, #4] 
    VPSS_DRV_CheckImageAttr_x1dfb8:
    /*0001dfb8*/ STR         R3, [SP] 
    /*0001dfbc*/ MOV         R1, #7 
    /*0001dfc0*/ LDR         R3, [PC, #80]               @ 0x000000000001e018 
    /*0001dfc4*/ MOV         R0, #3 
    /*0001dfc8*/ BL          0x000000000001DFC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001dfcc*/ MVN         R0, #0 
    /*0001dfd0*/ B           VPSS_DRV_CheckImageAttr_x1dd24
    VPSS_DRV_CheckImageAttr_x1dfd4:
    /*0001dfd4*/ MOVW        R2, #0                      @ .LC172 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7a3c] 
    /*0001dfd8*/ STR         R5, [SP, #12] 
    /*0001dfdc*/ MOVW        R3, #4914                   @ 0x1332 
    /*0001dfe0*/ STR         R6, [SP, #8] 
    /*0001dfe4*/ STR         R7, [SP, #4] 
    /*0001dfe8*/ MOVT        R2, #0                      @ .LC172 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7a3c] 
    /*0001dfec*/ B           VPSS_DRV_CheckImageAttr_x1dfb8
    VPSS_DRV_CheckImageAttr_x1dff0:
    /*0001dff0*/ MOVW        R3, #4961                   @ 0x1361 
    /*0001dff4*/ MOVW        R2, #0                      @ .LC175 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7b14] 
    /*0001dff8*/ STR         R3, [SP] 
    /*0001dffc*/ MOVT        R2, #0                      @ .LC175 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7b14] 
    /*0001e000*/ LDR         R3, [PC, #16]               @ 0x000000000001e018 
    /*0001e004*/ MOV         R1, #7 
    /*0001e008*/ MOV         R0, #3 
    /*0001e00c*/ BL          0x000000000001E00C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e010*/ MVN         R0, #0 
    /*0001e014*/ B           VPSS_DRV_CheckImageAttr_x1dd24
    /*0001e018*/ ANDEQ       R1, R0, R4, LSL R2 
FUNC_END VPSS_DRV_CheckImageAttr


FUNC_BEGIN VPSS_DRV_CheckGrpNRXVer
    /*0001e01c*/ CMP         R0, #2 
    /*0001e020*/ BNE         VPSS_DRV_CheckGrpNRXVer_x1e02c
    /*0001e024*/ MOV         R0, #0 
    /*0001e028*/ BX          LR 
    VPSS_DRV_CheckGrpNRXVer_x1e02c:
    /*0001e02c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001e030*/ SUB         SP, SP, #12 
    /*0001e034*/ MOVW        R3, #5043                   @ 0x13b3 
    /*0001e038*/ MOV         R1, #7 
    /*0001e03c*/ STR         R0, [SP, #4] 
    /*0001e040*/ MOVW        R2, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c98] 
    /*0001e044*/ STR         R3, [SP] 
    /*0001e048*/ MOVT        R2, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c98] 
    /*0001e04c*/ LDR         R3, [PC, #16]               @ 0x000000000001e064 
    /*0001e050*/ MOV         R0, #3 
    /*0001e054*/ BL          0x000000000001E054          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e058*/ MVN         R0, #0 
    /*0001e05c*/ ADD         SP, SP, #12 
    /*0001e060*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0001e064*/ ANDEQ       R1, R0, IP, LSR #4 
FUNC_END VPSS_DRV_CheckGrpNRXVer


FUNC_BEGIN VPSS_DRV_CheckIEy
    /*0001e068*/ LDRH        R3, [R0, #4] 
    /*0001e06c*/ UBFX        R3, R3, #0, #10 
    /*0001e070*/ CMP         R3, #1000                   @ 0x3e8 
    /*0001e074*/ BGE         VPSS_DRV_CheckIEy_x1e080
    /*0001e078*/ MOV         R0, #0 
    /*0001e07c*/ BX          LR 
    VPSS_DRV_CheckIEy_x1e080:
    /*0001e080*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001e084*/ SUB         SP, SP, #20 
    /*0001e088*/ MOVW        R2, #0                      @ .LC182 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7cd4] 
    /*0001e08c*/ MOV         R0, #3 
    /*0001e090*/ STR         R3, [SP, #8] 
    /*0001e094*/ MOVT        R2, #0                      @ .LC182 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7cd4] 
    /*0001e098*/ STR         R1, [SP, #4] 
    /*0001e09c*/ MOVW        R3, #5053                   @ 0x13bd 
    /*0001e0a0*/ MOV         R1, #7 
    /*0001e0a4*/ STR         R3, [SP] 
    /*0001e0a8*/ LDR         R3, [PC, #16]               @ 0x000000000001e0c0 
    /*0001e0ac*/ BL          0x000000000001E0AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e0b0*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001e0b4*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001e0b8*/ ADD         SP, SP, #20 
    /*0001e0bc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0001e0c0*/ ANDEQ       R1, R0, R4, ASR #4 
FUNC_END VPSS_DRV_CheckIEy


FUNC_BEGIN VPSS_DRV_CheckSFy
    /*0001e0c4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001e0c8*/ MOV         IP, R1 
    /*0001e0cc*/ LDRB        R3, [R0] 
    /*0001e0d0*/ SUB         SP, SP, #20 
    /*0001e0d4*/ AND         R3, R3, #7 
    /*0001e0d8*/ CMP         R3, #5 
    /*0001e0dc*/ BGT         VPSS_DRV_CheckSFy_x1e2a8
    /*0001e0e0*/ LDRB        R3, [R0, #1] 
    /*0001e0e4*/ AND         R2, R3, #7 
    /*0001e0e8*/ CMP         R2, #5 
    /*0001e0ec*/ BGT         VPSS_DRV_CheckSFy_x1e270
    /*0001e0f0*/ LSR         R3, R3, #3 
    /*0001e0f4*/ CMP         R3, #16 
    /*0001e0f8*/ BGT         VPSS_DRV_CheckSFy_x1e2c4
    /*0001e0fc*/ LDRB        R3, [R0, #2] 
    /*0001e100*/ AND         R3, R3, #31 
    /*0001e104*/ CMP         R3, #16 
    /*0001e108*/ BGT         VPSS_DRV_CheckSFy_x1e318
    /*0001e10c*/ LDRH        R3, [R0, #2] 
    /*0001e110*/ UBFX        R3, R3, #5, #5 
    /*0001e114*/ CMP         R3, #16 
    /*0001e118*/ BGT         VPSS_DRV_CheckSFy_x1e2fc
    /*0001e11c*/ LDRB        R3, [R0, #3] 
    /*0001e120*/ UBFX        R2, R3, #2, #3 
    /*0001e124*/ CMP         R2, #4 
    /*0001e128*/ BGT         VPSS_DRV_CheckSFy_x1e2e0
    /*0001e12c*/ LSR         R3, R3, #5 
    /*0001e130*/ ADD         R2, R3, #5 
    /*0001e134*/ AND         R2, R2, #7 
    /*0001e138*/ CMP         R2, #3 
    /*0001e13c*/ BHI         VPSS_DRV_CheckSFy_x1e384
    /*0001e140*/ LDRB        R1, [R0, #21] 
    /*0001e144*/ LSR         R3, R1, #5 
    /*0001e148*/ CMP         R3, #3 
    /*0001e14c*/ BGT         VPSS_DRV_CheckSFy_x1e368
    /*0001e150*/ LDRB        R3, [R0, #19] 
    /*0001e154*/ UBFX        R2, R3, #4, #3 
    /*0001e158*/ CMP         R2, #7 
    /*0001e15c*/ BEQ         VPSS_DRV_CheckSFy_x1e334
    /*0001e160*/ UBFX        R3, R3, #1, #3 
    /*0001e164*/ CMP         R3, #7 
    /*0001e168*/ BEQ         VPSS_DRV_CheckSFy_x1e3d8
    /*0001e16c*/ UBFX        R1, R1, #1, #3 
    /*0001e170*/ CMP         R1, #7 
    /*0001e174*/ BEQ         VPSS_DRV_CheckSFy_x1e3bc
    /*0001e178*/ LDRB        R1, [R0, #23] 
    /*0001e17c*/ UBFX        R1, R1, #1, #3 
    /*0001e180*/ CMP         R1, #7 
    /*0001e184*/ BEQ         VPSS_DRV_CheckSFy_x1e3a0
    /*0001e188*/ LDRB        R3, [R0, #5] 
    /*0001e18c*/ CMP         R3, #31 
    /*0001e190*/ BHI         VPSS_DRV_CheckSFy_x1e268
    /*0001e194*/ LDRB        R3, [R0, #6] 
    /*0001e198*/ CMP         R3, #31 
    /*0001e19c*/ BHI         VPSS_DRV_CheckSFy_x1e244
    /*0001e1a0*/ LDRB        R3, [R0, #7] 
    /*0001e1a4*/ CMP         R3, #31 
    /*0001e1a8*/ MOVHI       R2, #2 
    /*0001e1ac*/ BHI         VPSS_DRV_CheckSFy_x1e248
    /*0001e1b0*/ ADD         R2, R0, #22 
    /*0001e1b4*/ ADD         R0, R0, #86                 @ 0x56 
    /*0001e1b8*/ MOV         R3, #0 
    VPSS_DRV_CheckSFy_x1e1bc:
    /*0001e1bc*/ LDRH        R1, [R2, #2]! 
    /*0001e1c0*/ CMP         R1, #8192                   @ 0x2000 
    /*0001e1c4*/ BCS         VPSS_DRV_CheckSFy_x1e1ec
    /*0001e1c8*/ LDRH        R1, [R0, #2]! 
    /*0001e1cc*/ CMP         R1, #8192                   @ 0x2000 
    /*0001e1d0*/ BCS         VPSS_DRV_CheckSFy_x1e228
    /*0001e1d4*/ ADD         R3, R3, #1 
    /*0001e1d8*/ CMP         R3, #32 
    /*0001e1dc*/ BNE         VPSS_DRV_CheckSFy_x1e1bc
    /*0001e1e0*/ MOV         R0, #0 
    VPSS_DRV_CheckSFy_x1e1e4:
    /*0001e1e4*/ ADD         SP, SP, #20 
    /*0001e1e8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckSFy_x1e1ec:
    /*0001e1ec*/ MOVW        R2, #0                      @ .LC196 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8048] 
    /*0001e1f0*/ MOVT        R2, #0                      @ .LC196 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8048] 
    /*0001e1f4*/ STR         R1, [SP, #12] 
    /*0001e1f8*/ MOVW        R1, #5150                   @ 0x141e 
    /*0001e1fc*/ STR         R3, [SP, #8] 
    /*0001e200*/ STR         IP, [SP, #4] 
    VPSS_DRV_CheckSFy_x1e204:
    /*0001e204*/ STR         R1, [SP] 
    VPSS_DRV_CheckSFy_x1e208:
    /*0001e208*/ MOV         R1, #7 
    /*0001e20c*/ LDR         R3, [PC, #484]              @ 0x000000000001e3f8 
    /*0001e210*/ MOV         R0, #3 
    /*0001e214*/ BL          0x000000000001E214          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e218*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001e21c*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001e220*/ ADD         SP, SP, #20 
    /*0001e224*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckSFy_x1e228:
    /*0001e228*/ STR         R1, [SP, #12] 
    /*0001e22c*/ MOVW        R2, #0                      @ .LC197 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8098] 
    /*0001e230*/ MOVW        R1, #5156                   @ 0x1424 
    /*0001e234*/ STR         R3, [SP, #8] 
    /*0001e238*/ STR         IP, [SP, #4] 
    /*0001e23c*/ MOVT        R2, #0                      @ .LC197 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8098] 
    /*0001e240*/ B           VPSS_DRV_CheckSFy_x1e204
    VPSS_DRV_CheckSFy_x1e244:
    /*0001e244*/ MOV         R2, #1 
    VPSS_DRV_CheckSFy_x1e248:
    /*0001e248*/ STR         R3, [SP, #12] 
    /*0001e24c*/ MOVW        R3, #5140                   @ 0x1414 
    /*0001e250*/ STR         R2, [SP, #8] 
    /*0001e254*/ MOVW        R2, #0                      @ .LC195 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ffc] 
    /*0001e258*/ STR         IP, [SP, #4] 
    /*0001e25c*/ MOVT        R2, #0                      @ .LC195 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ffc] 
    /*0001e260*/ STR         R3, [SP] 
    /*0001e264*/ B           VPSS_DRV_CheckSFy_x1e208
    VPSS_DRV_CheckSFy_x1e268:
    /*0001e268*/ MOV         R2, #0 
    /*0001e26c*/ B           VPSS_DRV_CheckSFy_x1e248
    VPSS_DRV_CheckSFy_x1e270:
    /*0001e270*/ STR         R2, [SP, #8] 
    /*0001e274*/ MOVW        R2, #0                      @ .LC184 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d50] 
    /*0001e278*/ MOVT        R2, #0                      @ .LC184 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d50] 
    /*0001e27c*/ MOVW        R3, #5072                   @ 0x13d0 
    /*0001e280*/ STR         R1, [SP, #4] 
    /*0001e284*/ STR         R3, [SP] 
    VPSS_DRV_CheckSFy_x1e288:
    /*0001e288*/ LDR         R3, [PC, #360]              @ 0x000000000001e3f8 
    /*0001e28c*/ MOV         R1, #7 
    /*0001e290*/ MOV         R0, #3 
    /*0001e294*/ BL          0x000000000001E294          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e298*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001e29c*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001e2a0*/ ADD         SP, SP, #20 
    /*0001e2a4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckSFy_x1e2a8:
    /*0001e2a8*/ STR         R3, [SP, #8] 
    /*0001e2ac*/ MOVW        R2, #0                      @ .LC183 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d14] 
    /*0001e2b0*/ MOVW        R3, #5066                   @ 0x13ca 
    /*0001e2b4*/ STR         R1, [SP, #4] 
    /*0001e2b8*/ STR         R3, [SP] 
    /*0001e2bc*/ MOVT        R2, #0                      @ .LC183 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d14] 
    /*0001e2c0*/ B           VPSS_DRV_CheckSFy_x1e288
    VPSS_DRV_CheckSFy_x1e2c4:
    /*0001e2c4*/ STR         R3, [SP, #8] 
    /*0001e2c8*/ MOVW        R2, #0                      @ .LC185 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d8c] 
    /*0001e2cc*/ MOVW        R3, #5078                   @ 0x13d6 
    /*0001e2d0*/ STR         R1, [SP, #4] 
    /*0001e2d4*/ STR         R3, [SP] 
    /*0001e2d8*/ MOVT        R2, #0                      @ .LC185 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d8c] 
    /*0001e2dc*/ B           VPSS_DRV_CheckSFy_x1e288
    VPSS_DRV_CheckSFy_x1e2e0:
    /*0001e2e0*/ STR         R2, [SP, #8] 
    /*0001e2e4*/ MOVW        R3, #5096                   @ 0x13e8 
    /*0001e2e8*/ MOVW        R2, #0                      @ .LC188 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e4c] 
    /*0001e2ec*/ STR         R1, [SP, #4] 
    /*0001e2f0*/ STR         R3, [SP] 
    /*0001e2f4*/ MOVT        R2, #0                      @ .LC188 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e4c] 
    /*0001e2f8*/ B           VPSS_DRV_CheckSFy_x1e288
    VPSS_DRV_CheckSFy_x1e2fc:
    /*0001e2fc*/ STR         R3, [SP, #8] 
    /*0001e300*/ MOVW        R2, #0                      @ .LC187 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e0c] 
    /*0001e304*/ MOVW        R3, #5090                   @ 0x13e2 
    /*0001e308*/ STR         R1, [SP, #4] 
    /*0001e30c*/ STR         R3, [SP] 
    /*0001e310*/ MOVT        R2, #0                      @ .LC187 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e0c] 
    /*0001e314*/ B           VPSS_DRV_CheckSFy_x1e288
    VPSS_DRV_CheckSFy_x1e318:
    /*0001e318*/ STR         R3, [SP, #8] 
    /*0001e31c*/ MOVW        R2, #0                      @ .LC186 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7dcc] 
    /*0001e320*/ MOVW        R3, #5084                   @ 0x13dc 
    /*0001e324*/ STR         R1, [SP, #4] 
    /*0001e328*/ STR         R3, [SP] 
    /*0001e32c*/ MOVT        R2, #0                      @ .LC186 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7dcc] 
    /*0001e330*/ B           VPSS_DRV_CheckSFy_x1e288
    VPSS_DRV_CheckSFy_x1e334:
    /*0001e334*/ STR         R2, [SP, #8] 
    /*0001e338*/ MOV         R1, R2 
    /*0001e33c*/ MOVW        R2, #0                      @ .LC191 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f0c] 
    /*0001e340*/ MOVT        R2, #0                      @ .LC191 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f0c] 
    /*0001e344*/ MOVW        R3, #5114                   @ 0x13fa 
    /*0001e348*/ STR         IP, [SP, #4] 
    /*0001e34c*/ STR         R3, [SP] 
    VPSS_DRV_CheckSFy_x1e350:
    /*0001e350*/ LDR         R3, [PC, #160]              @ 0x000000000001e3f8 
    /*0001e354*/ MOV         R0, #3 
    /*0001e358*/ BL          0x000000000001E358          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e35c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001e360*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001e364*/ B           VPSS_DRV_CheckSFy_x1e1e4
    VPSS_DRV_CheckSFy_x1e368:
    /*0001e368*/ STR         R3, [SP, #8] 
    /*0001e36c*/ MOVW        R2, #0                      @ .LC190 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ecc] 
    /*0001e370*/ MOVW        R3, #5108                   @ 0x13f4 
    /*0001e374*/ STR         IP, [SP, #4] 
    /*0001e378*/ STR         R3, [SP] 
    /*0001e37c*/ MOVT        R2, #0                      @ .LC190 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ecc] 
    /*0001e380*/ B           VPSS_DRV_CheckSFy_x1e288
    VPSS_DRV_CheckSFy_x1e384:
    /*0001e384*/ STR         R3, [SP, #8] 
    /*0001e388*/ MOVW        R2, #0                      @ .LC189 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e8c] 
    /*0001e38c*/ MOVW        R3, #5102                   @ 0x13ee 
    /*0001e390*/ STR         R1, [SP, #4] 
    /*0001e394*/ STR         R3, [SP] 
    /*0001e398*/ MOVT        R2, #0                      @ .LC189 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e8c] 
    /*0001e39c*/ B           VPSS_DRV_CheckSFy_x1e288
    VPSS_DRV_CheckSFy_x1e3a0:
    /*0001e3a0*/ MOVW        R3, #5132                   @ 0x140c 
    /*0001e3a4*/ MOVW        R2, #0                      @ .LC194 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7fc0] 
    /*0001e3a8*/ STR         R1, [SP, #8] 
    /*0001e3ac*/ MOVT        R2, #0                      @ .LC194 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7fc0] 
    /*0001e3b0*/ STR         IP, [SP, #4] 
    /*0001e3b4*/ STR         R3, [SP] 
    /*0001e3b8*/ B           VPSS_DRV_CheckSFy_x1e350
    VPSS_DRV_CheckSFy_x1e3bc:
    /*0001e3bc*/ MOVW        R3, #5126                   @ 0x1406 
    /*0001e3c0*/ MOVW        R2, #0                      @ .LC193 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f84] 
    /*0001e3c4*/ STR         R1, [SP, #8] 
    /*0001e3c8*/ MOVT        R2, #0                      @ .LC193 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f84] 
    /*0001e3cc*/ STR         IP, [SP, #4] 
    /*0001e3d0*/ STR         R3, [SP] 
    /*0001e3d4*/ B           VPSS_DRV_CheckSFy_x1e350
    VPSS_DRV_CheckSFy_x1e3d8:
    /*0001e3d8*/ MOV         R1, #7 
    /*0001e3dc*/ MOV         R3, #5120                   @ 0x1400 
    /*0001e3e0*/ MOVW        R2, #0                      @ .LC192 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f48] 
    /*0001e3e4*/ STR         IP, [SP, #4] 
    /*0001e3e8*/ STR         R1, [SP, #8] 
    /*0001e3ec*/ MOVT        R2, #0                      @ .LC192 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f48] 
    /*0001e3f0*/ STR         R3, [SP] 
    /*0001e3f4*/ B           VPSS_DRV_CheckSFy_x1e350
    /*0001e3f8*/ ANDEQ       R1, R0, R8, ASR R2 
FUNC_END VPSS_DRV_CheckSFy


FUNC_BEGIN VPSS_DRV_CheckTFy
    /*0001e3fc*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*0001e400*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*0001e404*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001e408*/ SUB         SP, SP, #20 
    /*0001e40c*/ LDR         R3, [R3] 
    /*0001e410*/ LDRB        R3, [R3, #40]               @ 0x28 
    /*0001e414*/ SUB         R2, R3, #5 
    /*0001e418*/ CMP         R3, #2 
    /*0001e41c*/ CMPHI       R2, #1 
    /*0001e420*/ BLS         VPSS_DRV_CheckTFy_x1e4f4
    /*0001e424*/ LDRB        R3, [R0] 
    /*0001e428*/ AND         R3, R3, #15 
    /*0001e42c*/ CMP         R3, #10 
    /*0001e430*/ MOVLS       R2, #10 
    /*0001e434*/ BHI         VPSS_DRV_CheckTFy_x1e554
    VPSS_DRV_CheckTFy_x1e438:
    /*0001e438*/ LDRB        R3, [R0, #2] 
    /*0001e43c*/ AND         R3, R3, #15 
    /*0001e440*/ CMP         R3, R2 
    /*0001e444*/ BHI         VPSS_DRV_CheckTFy_x1e5e4
    /*0001e448*/ LDRH        R3, [R0] 
    /*0001e44c*/ UBFX        R3, R3, #4, #10 
    /*0001e450*/ CMP         R3, #1000                   @ 0x3e8 
    /*0001e454*/ BGE         VPSS_DRV_CheckTFy_x1e600
    /*0001e458*/ LDRH        R3, [R0, #2] 
    /*0001e45c*/ UBFX        R3, R3, #4, #10 
    /*0001e460*/ CMP         R3, #1000                   @ 0x3e8 
    /*0001e464*/ BGE         VPSS_DRV_CheckTFy_x1e61c
    /*0001e468*/ LDRH        R3, [R0, #4] 
    /*0001e46c*/ UBFX        R3, R3, #0, #10 
    /*0001e470*/ CMP         R3, #1000                   @ 0x3e8 
    /*0001e474*/ BGE         VPSS_DRV_CheckTFy_x1e638
    /*0001e478*/ LDRH        R3, [R0, #6] 
    /*0001e47c*/ UBFX        R3, R3, #0, #10 
    /*0001e480*/ CMP         R3, #1000                   @ 0x3e8 
    /*0001e484*/ BGE         VPSS_DRV_CheckTFy_x1e654
    /*0001e488*/ LDRB        R3, [R0, #22] 
    /*0001e48c*/ AND         R3, R3, #7 
    /*0001e490*/ CMP         R3, #4 
    /*0001e494*/ BGT         VPSS_DRV_CheckTFy_x1e670
    /*0001e498*/ LDRB        R3, [R0, #14] 
    /*0001e49c*/ LSR         R3, R3, #4 
    /*0001e4a0*/ CMP         R3, #1 
    /*0001e4a4*/ BGT         VPSS_DRV_CheckTFy_x1e590
    /*0001e4a8*/ LDRB        R3, [R0, #21] 
    /*0001e4ac*/ LSR         R3, R3, #4 
    /*0001e4b0*/ CMP         R3, #1 
    /*0001e4b4*/ ADDLE       R2, R0, #8 
    /*0001e4b8*/ ADDLE       R0, R0, #15 
    /*0001e4bc*/ MOVLE       R3, #0 
    /*0001e4c0*/ BGT         VPSS_DRV_CheckTFy_x1e5c8
    VPSS_DRV_CheckTFy_x1e4c4:
    /*0001e4c4*/ LDRB        IP, [R2], #1 
    /*0001e4c8*/ CMP         IP, #31 
    /*0001e4cc*/ BHI         VPSS_DRV_CheckTFy_x1e4fc
    /*0001e4d0*/ LDRB        IP, [R0], #1 
    /*0001e4d4*/ CMP         IP, #31 
    /*0001e4d8*/ BHI         VPSS_DRV_CheckTFy_x1e538
    /*0001e4dc*/ ADD         R3, R3, #1 
    /*0001e4e0*/ CMP         R3, #6 
    /*0001e4e4*/ BNE         VPSS_DRV_CheckTFy_x1e4c4
    /*0001e4e8*/ MOV         R0, #0 
    VPSS_DRV_CheckTFy_x1e4ec:
    /*0001e4ec*/ ADD         SP, SP, #20 
    /*0001e4f0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckTFy_x1e4f4:
    /*0001e4f4*/ MOV         R2, #15 
    /*0001e4f8*/ B           VPSS_DRV_CheckTFy_x1e438
    VPSS_DRV_CheckTFy_x1e4fc:
    /*0001e4fc*/ MOVW        R2, #0                      @ .LC207 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x831c] 
    /*0001e500*/ MOVT        R2, #0                      @ .LC207 [R_ARM_MOVT_ABS: .rodata.str1.4+0x831c] 
    /*0001e504*/ MOVW        R0, #5236                   @ 0x1474 
    /*0001e508*/ STR         IP, [SP, #12] 
    /*0001e50c*/ STR         R3, [SP, #8] 
    /*0001e510*/ STR         R1, [SP, #4] 
    VPSS_DRV_CheckTFy_x1e514:
    /*0001e514*/ STR         R0, [SP] 
    /*0001e518*/ MOV         R1, #7 
    /*0001e51c*/ LDR         R3, [PC, #360]              @ 0x000000000001e68c 
    /*0001e520*/ MOV         R0, #3 
    /*0001e524*/ BL          0x000000000001E524          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e528*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001e52c*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001e530*/ ADD         SP, SP, #20 
    /*0001e534*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckTFy_x1e538:
    /*0001e538*/ MOVW        R2, #0                      @ .LC208 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8360] 
    /*0001e53c*/ STR         IP, [SP, #12] 
    /*0001e540*/ MOVW        R0, #5242                   @ 0x147a 
    /*0001e544*/ STR         R3, [SP, #8] 
    /*0001e548*/ STR         R1, [SP, #4] 
    /*0001e54c*/ MOVT        R2, #0                      @ .LC208 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8360] 
    /*0001e550*/ B           VPSS_DRV_CheckTFy_x1e514
    VPSS_DRV_CheckTFy_x1e554:
    /*0001e554*/ STR         R3, [SP, #8] 
    /*0001e558*/ MOV         R2, #10 
    /*0001e55c*/ STR         R1, [SP, #4] 
    /*0001e560*/ MOVW        R3, #5180                   @ 0x143c 
    /*0001e564*/ STR         R2, [SP, #12] 
    /*0001e568*/ MOV         R1, #7 
    /*0001e56c*/ STR         R3, [SP] 
    /*0001e570*/ MOVW        R2, #0                      @ .LC198 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x80e8] 
    /*0001e574*/ LDR         R3, [PC, #272]              @ 0x000000000001e68c 
    /*0001e578*/ MOVT        R2, #0                      @ .LC198 [R_ARM_MOVT_ABS: .rodata.str1.4+0x80e8] 
    /*0001e57c*/ MOV         R0, #3 
    /*0001e580*/ BL          0x000000000001E580          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e584*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001e588*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001e58c*/ B           VPSS_DRV_CheckTFy_x1e4ec
    VPSS_DRV_CheckTFy_x1e590:
    /*0001e590*/ MOVW        R2, #0                      @ .LC205 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x82a4] 
    /*0001e594*/ MOVT        R2, #0                      @ .LC205 [R_ARM_MOVT_ABS: .rodata.str1.4+0x82a4] 
    /*0001e598*/ STR         R3, [SP, #8] 
    /*0001e59c*/ MOVW        R3, #5222                   @ 0x1466 
    /*0001e5a0*/ STR         R1, [SP, #4] 
    /*0001e5a4*/ STR         R3, [SP] 
    VPSS_DRV_CheckTFy_x1e5a8:
    /*0001e5a8*/ LDR         R3, [PC, #220]              @ 0x000000000001e68c 
    /*0001e5ac*/ MOV         R1, #7 
    /*0001e5b0*/ MOV         R0, #3 
    /*0001e5b4*/ BL          0x000000000001E5B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e5b8*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001e5bc*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001e5c0*/ ADD         SP, SP, #20 
    /*0001e5c4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckTFy_x1e5c8:
    /*0001e5c8*/ STR         R3, [SP, #8] 
    /*0001e5cc*/ MOVW        R2, #0                      @ .LC206 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x82e0] 
    /*0001e5d0*/ MOVW        R3, #5228                   @ 0x146c 
    /*0001e5d4*/ STR         R1, [SP, #4] 
    /*0001e5d8*/ STR         R3, [SP] 
    /*0001e5dc*/ MOVT        R2, #0                      @ .LC206 [R_ARM_MOVT_ABS: .rodata.str1.4+0x82e0] 
    /*0001e5e0*/ B           VPSS_DRV_CheckTFy_x1e5a8
    VPSS_DRV_CheckTFy_x1e5e4:
    /*0001e5e4*/ STR         R2, [SP, #12] 
    /*0001e5e8*/ MOVW        R0, #5186                   @ 0x1442 
    /*0001e5ec*/ MOVW        R2, #0                      @ .LC199 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8128] 
    /*0001e5f0*/ STR         R3, [SP, #8] 
    /*0001e5f4*/ STR         R1, [SP, #4] 
    /*0001e5f8*/ MOVT        R2, #0                      @ .LC199 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8128] 
    /*0001e5fc*/ B           VPSS_DRV_CheckTFy_x1e514
    VPSS_DRV_CheckTFy_x1e600:
    /*0001e600*/ STR         R3, [SP, #8] 
    /*0001e604*/ MOVW        R2, #0                      @ .LC200 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8168] 
    /*0001e608*/ MOVW        R3, #5192                   @ 0x1448 
    /*0001e60c*/ STR         R1, [SP, #4] 
    /*0001e610*/ STR         R3, [SP] 
    /*0001e614*/ MOVT        R2, #0                      @ .LC200 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8168] 
    /*0001e618*/ B           VPSS_DRV_CheckTFy_x1e5a8
    VPSS_DRV_CheckTFy_x1e61c:
    /*0001e61c*/ STR         R3, [SP, #8] 
    /*0001e620*/ MOVW        R2, #0                      @ .LC201 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x81a8] 
    /*0001e624*/ MOVW        R3, #5198                   @ 0x144e 
    /*0001e628*/ STR         R1, [SP, #4] 
    /*0001e62c*/ STR         R3, [SP] 
    /*0001e630*/ MOVT        R2, #0                      @ .LC201 [R_ARM_MOVT_ABS: .rodata.str1.4+0x81a8] 
    /*0001e634*/ B           VPSS_DRV_CheckTFy_x1e5a8
    VPSS_DRV_CheckTFy_x1e638:
    /*0001e638*/ STR         R3, [SP, #8] 
    /*0001e63c*/ MOVW        R2, #0                      @ .LC202 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x81e8] 
    /*0001e640*/ MOVW        R3, #5204                   @ 0x1454 
    /*0001e644*/ STR         R1, [SP, #4] 
    /*0001e648*/ STR         R3, [SP] 
    /*0001e64c*/ MOVT        R2, #0                      @ .LC202 [R_ARM_MOVT_ABS: .rodata.str1.4+0x81e8] 
    /*0001e650*/ B           VPSS_DRV_CheckTFy_x1e5a8
    VPSS_DRV_CheckTFy_x1e654:
    /*0001e654*/ STR         R3, [SP, #8] 
    /*0001e658*/ MOVW        R2, #0                      @ .LC203 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8228] 
    /*0001e65c*/ MOVW        R3, #5210                   @ 0x145a 
    /*0001e660*/ STR         R1, [SP, #4] 
    /*0001e664*/ STR         R3, [SP] 
    /*0001e668*/ MOVT        R2, #0                      @ .LC203 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8228] 
    /*0001e66c*/ B           VPSS_DRV_CheckTFy_x1e5a8
    VPSS_DRV_CheckTFy_x1e670:
    /*0001e670*/ STR         R3, [SP, #8] 
    /*0001e674*/ MOVW        R2, #0                      @ .LC204 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8268] 
    /*0001e678*/ MOVW        R3, #5216                   @ 0x1460 
    /*0001e67c*/ STR         R1, [SP, #4] 
    /*0001e680*/ STR         R3, [SP] 
    /*0001e684*/ MOVT        R2, #0                      @ .LC204 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8268] 
    /*0001e688*/ B           VPSS_DRV_CheckTFy_x1e5a8
    /*0001e68c*/ ANDEQ       R1, R0, IP, ROR #4 
FUNC_END VPSS_DRV_CheckTFy


FUNC_BEGIN VPSS_DRV_CheckMDy
    /*0001e690*/ MOVW        R2, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*0001e694*/ MOVT        R2, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*0001e698*/ PUSH        {R4, LR} 
    /*0001e69c*/ MOVW        LR, #511                    @ 0x1ff 
    /*0001e6a0*/ LDR         IP, [R2] 
    /*0001e6a4*/ MOVW        R3, #999                    @ 0x3e7 
    /*0001e6a8*/ LDRH        R2, [R0, #6] 
    /*0001e6ac*/ SUB         SP, SP, #16 
    /*0001e6b0*/ LDRB        IP, [IP, #40]               @ 0x28 
    /*0001e6b4*/ UBFX        R2, R2, #0, #10 
    /*0001e6b8*/ SUB         R4, IP, #5 
    /*0001e6bc*/ CMP         IP, #2 
    /*0001e6c0*/ CMPHI       R4, #1 
    /*0001e6c4*/ MOVHI       R3, LR 
    /*0001e6c8*/ CMP         R3, R2 
    /*0001e6cc*/ BCC         VPSS_DRV_CheckMDy_x1e728
    /*0001e6d0*/ LDRH        R2, [R0, #8] 
    /*0001e6d4*/ UBFX        R2, R2, #0, #10 
    /*0001e6d8*/ CMP         R3, R2 
    /*0001e6dc*/ BCC         VPSS_DRV_CheckMDy_x1e760
    /*0001e6e0*/ LDRB        R3, [R0, #7] 
    /*0001e6e4*/ UBFX        R3, R3, #2, #4 
    /*0001e6e8*/ CMP         R3, #8 
    /*0001e6ec*/ BGT         VPSS_DRV_CheckMDy_x1e77c
    /*0001e6f0*/ LDRB        R3, [R0, #9] 
    /*0001e6f4*/ UBFX        R3, R3, #2, #4 
    /*0001e6f8*/ CMP         R3, #8 
    /*0001e6fc*/ BGT         VPSS_DRV_CheckMDy_x1e7b0
    /*0001e700*/ LDRB        R3, [R0, #11] 
    /*0001e704*/ AND         R2, R3, #15 
    /*0001e708*/ CMP         R2, #9 
    /*0001e70c*/ BGT         VPSS_DRV_CheckMDy_x1e7cc
    /*0001e710*/ LSR         R3, R3, #4 
    /*0001e714*/ CMP         R3, #9 
    /*0001e718*/ MOVLE       R0, #0 
    /*0001e71c*/ BGT         VPSS_DRV_CheckMDy_x1e7e8
    VPSS_DRV_CheckMDy_x1e720:
    /*0001e720*/ ADD         SP, SP, #16 
    /*0001e724*/ POP         {R4, PC} 
    VPSS_DRV_CheckMDy_x1e728:
    /*0001e728*/ STR         R2, [SP, #8] 
    /*0001e72c*/ MOVW        R2, #0                      @ .LC209 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x83a4] 
    /*0001e730*/ MOVT        R2, #0                      @ .LC209 [R_ARM_MOVT_ABS: .rodata.str1.4+0x83a4] 
    /*0001e734*/ STR         R3, [SP, #12] 
    /*0001e738*/ MOVW        R3, #5265                   @ 0x1491 
    /*0001e73c*/ STR         R1, [SP, #4] 
    VPSS_DRV_CheckMDy_x1e740:
    /*0001e740*/ STR         R3, [SP] 
    /*0001e744*/ MOV         R1, #7 
    /*0001e748*/ LDR         R3, [PC, #180]              @ 0x000000000001e804 
    /*0001e74c*/ MOV         R0, #3 
    /*0001e750*/ BL          0x000000000001E750          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e754*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001e758*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001e75c*/ B           VPSS_DRV_CheckMDy_x1e720
    VPSS_DRV_CheckMDy_x1e760:
    /*0001e760*/ STR         R3, [SP, #12] 
    /*0001e764*/ MOVW        R3, #5271                   @ 0x1497 
    /*0001e768*/ STR         R2, [SP, #8] 
    /*0001e76c*/ MOVW        R2, #0                      @ .LC210 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x83e4] 
    /*0001e770*/ STR         R1, [SP, #4] 
    /*0001e774*/ MOVT        R2, #0                      @ .LC210 [R_ARM_MOVT_ABS: .rodata.str1.4+0x83e4] 
    /*0001e778*/ B           VPSS_DRV_CheckMDy_x1e740
    VPSS_DRV_CheckMDy_x1e77c:
    /*0001e77c*/ MOVW        R2, #0                      @ .LC211 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8424] 
    /*0001e780*/ MOVT        R2, #0                      @ .LC211 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8424] 
    /*0001e784*/ STR         R3, [SP, #8] 
    /*0001e788*/ MOVW        R3, #5277                   @ 0x149d 
    /*0001e78c*/ STR         R1, [SP, #4] 
    /*0001e790*/ STR         R3, [SP] 
    VPSS_DRV_CheckMDy_x1e794:
    /*0001e794*/ LDR         R3, [PC, #104]              @ 0x000000000001e804 
    /*0001e798*/ MOV         R1, #7 
    /*0001e79c*/ MOV         R0, #3 
    /*0001e7a0*/ BL          0x000000000001E7A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e7a4*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001e7a8*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001e7ac*/ B           VPSS_DRV_CheckMDy_x1e720
    VPSS_DRV_CheckMDy_x1e7b0:
    /*0001e7b0*/ STR         R3, [SP, #8] 
    /*0001e7b4*/ MOVW        R2, #0                      @ .LC212 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8464] 
    /*0001e7b8*/ MOVW        R3, #5283                   @ 0x14a3 
    /*0001e7bc*/ STR         R1, [SP, #4] 
    /*0001e7c0*/ STR         R3, [SP] 
    /*0001e7c4*/ MOVT        R2, #0                      @ .LC212 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8464] 
    /*0001e7c8*/ B           VPSS_DRV_CheckMDy_x1e794
    VPSS_DRV_CheckMDy_x1e7cc:
    /*0001e7cc*/ STR         R2, [SP, #8] 
    /*0001e7d0*/ MOVW        R3, #5289                   @ 0x14a9 
    /*0001e7d4*/ MOVW        R2, #0                      @ .LC213 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84a4] 
    /*0001e7d8*/ STR         R1, [SP, #4] 
    /*0001e7dc*/ STR         R3, [SP] 
    /*0001e7e0*/ MOVT        R2, #0                      @ .LC213 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84a4] 
    /*0001e7e4*/ B           VPSS_DRV_CheckMDy_x1e794
    VPSS_DRV_CheckMDy_x1e7e8:
    /*0001e7e8*/ STR         R3, [SP, #8] 
    /*0001e7ec*/ MOVW        R2, #0                      @ .LC214 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84e4] 
    /*0001e7f0*/ MOVW        R3, #5295                   @ 0x14af 
    /*0001e7f4*/ STR         R1, [SP, #4] 
    /*0001e7f8*/ STR         R3, [SP] 
    /*0001e7fc*/ MOVT        R2, #0                      @ .LC214 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84e4] 
    /*0001e800*/ B           VPSS_DRV_CheckMDy_x1e794
    /*0001e804*/ ANDEQ       R1, R0, R0, LSL #5 
FUNC_END VPSS_DRV_CheckMDy


FUNC_BEGIN VPSS_DRV_CheckGrpNRXVideoParam
    /*0001e808*/ PUSH        {R4, R5, R6, LR} 
    /*0001e80c*/ SUB         SP, SP, #16 
    /*0001e810*/ LDRH        R3, [R0, #4] 
    /*0001e814*/ UBFX        R3, R3, #0, #10 
    /*0001e818*/ CMP         R3, #1000                   @ 0x3e8 
    /*0001e81c*/ BGE         VPSS_DRV_CheckGrpNRXVideoParam_x1e940
    /*0001e820*/ LDRH        R3, [R0, #10] 
    /*0001e824*/ MOV         R5, R0 
    /*0001e828*/ UBFX        R3, R3, #0, #10 
    /*0001e82c*/ CMP         R3, #1000                   @ 0x3e8 
    /*0001e830*/ BGE         VPSS_DRV_CheckGrpNRXVideoParam_x1e900
    /*0001e834*/ LDRH        R3, [R0, #16] 
    /*0001e838*/ UBFX        R3, R3, #0, #10 
    /*0001e83c*/ CMP         R3, #1000                   @ 0x3e8 
    /*0001e840*/ MOVGE       R2, #2 
    /*0001e844*/ BGE         VPSS_DRV_CheckGrpNRXVideoParam_x1e904
    /*0001e848*/ ADD         R6, R0, #18 
    /*0001e84c*/ MOV         R4, #0 
    VPSS_DRV_CheckGrpNRXVideoParam_x1e850:
    /*0001e850*/ MOV         R1, R4 
    /*0001e854*/ MOV         R0, R6 
    /*0001e858*/ BL          0x000000000001E858          @ VPSS_DRV_CheckSFy [R_ARM_CALL: .text+0x1e0c4] 
    /*0001e85c*/ ADD         R4, R4, #1 
    /*0001e860*/ ADD         R6, R6, #152                @ 0x98 
    /*0001e864*/ SUBS        R1, R0, #0 
    /*0001e868*/ BNE         VPSS_DRV_CheckGrpNRXVideoParam_x1e934
    /*0001e86c*/ CMP         R4, #3 
    /*0001e870*/ BNE         VPSS_DRV_CheckGrpNRXVideoParam_x1e850
    /*0001e874*/ ADD         R0, R5, #500                @ 0x1f4 
    /*0001e878*/ ADD         R0, R0, #2 
    /*0001e87c*/ BL          0x000000000001E87C          @ VPSS_DRV_CheckTFy [R_ARM_CALL: .text+0x1e3fc] 
    /*0001e880*/ SUBS        R1, R0, #0 
    /*0001e884*/ BNE         VPSS_DRV_CheckGrpNRXVideoParam_x1e934
    /*0001e888*/ ADD         R0, R5, #524                @ 0x20c 
    /*0001e88c*/ MOV         R1, #1 
    /*0001e890*/ ADD         R0, R0, #2 
    /*0001e894*/ BL          0x000000000001E894          @ VPSS_DRV_CheckTFy [R_ARM_CALL: .text+0x1e3fc] 
    /*0001e898*/ SUBS        R1, R0, #0 
    /*0001e89c*/ BNE         VPSS_DRV_CheckGrpNRXVideoParam_x1e934
    /*0001e8a0*/ ADD         R0, R5, #472                @ 0x1d8 
    /*0001e8a4*/ ADD         R0, R0, #2 
    /*0001e8a8*/ BL          0x000000000001E8A8          @ VPSS_DRV_CheckMDy [R_ARM_CALL: .text+0x1e690] 
    /*0001e8ac*/ SUBS        R1, R0, #0 
    /*0001e8b0*/ BNE         VPSS_DRV_CheckGrpNRXVideoParam_x1e934
    /*0001e8b4*/ ADD         R0, R5, #484                @ 0x1e4 
    /*0001e8b8*/ MOV         R1, #1 
    /*0001e8bc*/ ADD         R0, R0, #2 
    /*0001e8c0*/ BL          0x000000000001E8C0          @ VPSS_DRV_CheckMDy [R_ARM_CALL: .text+0x1e690] 
    /*0001e8c4*/ SUBS        R1, R0, #0 
    /*0001e8c8*/ BNE         VPSS_DRV_CheckGrpNRXVideoParam_x1e934
    /*0001e8cc*/ LDRB        R3, [R5, #500]              @ 0x1f4 
    /*0001e8d0*/ AND         R3, R3, #7 
    /*0001e8d4*/ CMP         R3, #4 
    /*0001e8d8*/ BGT         VPSS_DRV_CheckGrpNRXVideoParam_x1e984
    /*0001e8dc*/ MOVW        R3, #558                    @ 0x22e 
    /*0001e8e0*/ LDRH        R3, [R5, R3] 
    /*0001e8e4*/ UBFX        R3, R3, #0, #10 
    /*0001e8e8*/ CMP         R3, #1000                   @ 0x3e8 
    /*0001e8ec*/ BGE         VPSS_DRV_CheckGrpNRXVideoParam_x1e948
    /*0001e8f0*/ ADD         R0, R5, #560                @ 0x230 
    /*0001e8f4*/ ADD         SP, SP, #16 
    /*0001e8f8*/ POP         {R4, R5, R6, LR} 
    VPSS_DRV_CheckGrpNRXVideoParam_x1e8fc:
    /*0001e8fc*/ B           VPSS_DRV_CheckGrpNRXVideoParam_x1e8fc@ VPSS_DRV_CheckSFy [R_ARM_JUMP24: .text+0x1e0c4] 
    VPSS_DRV_CheckGrpNRXVideoParam_x1e900:
    /*0001e900*/ MOV         R2, #1 
    VPSS_DRV_CheckGrpNRXVideoParam_x1e904:
    /*0001e904*/ STR         R3, [SP, #8] 
    /*0001e908*/ MOV         R1, #7 
    /*0001e90c*/ MOVW        R3, #5053                   @ 0x13bd 
    /*0001e910*/ STR         R2, [SP, #4] 
    /*0001e914*/ STR         R3, [SP] 
    /*0001e918*/ MOVW        R2, #0                      @ .LC182 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7cd4] 
    /*0001e91c*/ LDR         R3, [PC, #144]              @ 0x000000000001e9b4 
    /*0001e920*/ MOVT        R2, #0                      @ .LC182 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7cd4] 
    /*0001e924*/ MOV         R0, #3 
    /*0001e928*/ BL          0x000000000001E928          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e92c*/ MOVW        R1, #32771                  @ 0x8003 
    /*0001e930*/ MOVT        R1, #40967                  @ 0xa007 
    VPSS_DRV_CheckGrpNRXVideoParam_x1e934:
    /*0001e934*/ MOV         R0, R1 
    /*0001e938*/ ADD         SP, SP, #16 
    /*0001e93c*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_CheckGrpNRXVideoParam_x1e940:
    /*0001e940*/ MOV         R2, #0 
    /*0001e944*/ B           VPSS_DRV_CheckGrpNRXVideoParam_x1e904
    VPSS_DRV_CheckGrpNRXVideoParam_x1e948:
    /*0001e948*/ STR         R3, [SP, #8] 
    /*0001e94c*/ MOV         R0, R4 
    /*0001e950*/ STR         R1, [SP, #4] 
    /*0001e954*/ MOVW        R3, #5053                   @ 0x13bd 
    /*0001e958*/ MOV         R1, #7 
    /*0001e95c*/ STR         R3, [SP] 
    /*0001e960*/ MOVW        R2, #0                      @ .LC182 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7cd4] 
    /*0001e964*/ LDR         R3, [PC, #72]               @ 0x000000000001e9b4 
    /*0001e968*/ MOVT        R2, #0                      @ .LC182 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7cd4] 
    /*0001e96c*/ BL          0x000000000001E96C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e970*/ MOVW        R1, #32771                  @ 0x8003 
    /*0001e974*/ MOVT        R1, #40967                  @ 0xa007 
    /*0001e978*/ MOV         R0, R1 
    /*0001e97c*/ ADD         SP, SP, #16 
    /*0001e980*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_CheckGrpNRXVideoParam_x1e984:
    /*0001e984*/ STR         R3, [SP, #4] 
    /*0001e988*/ MOV         R1, #7 
    /*0001e98c*/ MOVW        R3, #5352                   @ 0x14e8 
    /*0001e990*/ MOV         R0, R4 
    /*0001e994*/ STR         R3, [SP] 
    /*0001e998*/ MOVW        R2, #0                      @ .LC215 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8524] 
    /*0001e99c*/ LDR         R3, [PC, #20]               @ 0x000000000001e9b8 
    /*0001e9a0*/ MOVT        R2, #0                      @ .LC215 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8524] 
    /*0001e9a4*/ BL          0x000000000001E9A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e9a8*/ MOVW        R1, #32771                  @ 0x8003 
    /*0001e9ac*/ MOVT        R1, #40967                  @ 0xa007 
    /*0001e9b0*/ B           VPSS_DRV_CheckGrpNRXVideoParam_x1e934
    /*0001e9b4*/ ANDEQ       R1, R0, R4, ASR #4 
    /*0001e9b8*/ MULEQ       R0, R4, R2 
FUNC_END VPSS_DRV_CheckGrpNRXVideoParam


FUNC_BEGIN VPSS_DRV_CopyNRXAutoParamFromUser
    /*0001e9bc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0001e9c0*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001e9c4*/ LDR         R3, [R1] 
    /*0001e9c8*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001e9cc*/ SUB         SP, SP, #16 
    /*0001e9d0*/ MOV         R5, R0 
    /*0001e9d4*/ LDR         R9, [R6, R0, LSL #2] 
    /*0001e9d8*/ STR         R3, [R6, #72]               @ 0x48 
    /*0001e9dc*/ LDR         R2, [R1] 
    /*0001e9e0*/ LSLS        R4, R2, #2 
    /*0001e9e4*/ BNE         VPSS_DRV_CopyNRXAutoParamFromUser_x1ea18
    VPSS_DRV_CopyNRXAutoParamFromUser_x1e9e8:
    /*0001e9e8*/ MOVW        R2, #0                      @ .LC216 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x855c] 
    /*0001e9ec*/ MOVT        R2, #0                      @ .LC216 [R_ARM_MOVT_ABS: .rodata.str1.4+0x855c] 
    /*0001e9f0*/ MOVW        R3, #5387                   @ 0x150b 
    /*0001e9f4*/ STR         R5, [SP, #4] 
    /*0001e9f8*/ STR         R3, [SP] 
    VPSS_DRV_CopyNRXAutoParamFromUser_x1e9fc:
    /*0001e9fc*/ LDR         R3, [PC, #500]              @ 0x000000000001ebf8 
    /*0001ea00*/ MOV         R1, #7 
    /*0001ea04*/ MOV         R0, #3 
    /*0001ea08*/ BL          0x000000000001EA08          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_DRV_CopyNRXAutoParamFromUser_x1ea0c:
    /*0001ea0c*/ MVN         R0, #0 
    /*0001ea10*/ ADD         SP, SP, #16 
    /*0001ea14*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_DRV_CopyNRXAutoParamFromUser_x1ea18:
    /*0001ea18*/ LDR         R7, [R1, #4] 
    /*0001ea1c*/ MOV         SL, R1 
    /*0001ea20*/ MOV         R2, R4 
    /*0001ea24*/ MOV         R0, #0 
    /*0001ea28*/ MOV         R1, R7 
    /*0001ea2c*/ BL          0x000000000001EA2C          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*0001ea30*/ CMP         R0, #0 
    /*0001ea34*/ BEQ         VPSS_DRV_CopyNRXAutoParamFromUser_x1e9e8
    /*0001ea38*/ SUB         R1, R4, #1 
    /*0001ea3c*/ MOV         R2, #1 
    /*0001ea40*/ ADD         R1, R7, R1 
    /*0001ea44*/ ADD         R0, SP, #15 
    /*0001ea48*/ BL          0x000000000001EA48          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0001ea4c*/ CMP         R0, #0 
    /*0001ea50*/ BNE         VPSS_DRV_CopyNRXAutoParamFromUser_x1e9e8
    /*0001ea54*/ LDR         R2, [SL] 
    /*0001ea58*/ ADD         R0, R6, #76                 @ 0x4c 
    /*0001ea5c*/ LDR         R1, [SL, #4] 
    /*0001ea60*/ LSL         R2, R2, #2 
    /*0001ea64*/ BL          0x000000000001EA64          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0001ea68*/ CMP         R0, #0 
    /*0001ea6c*/ MOVWNE      R3, #5394                   @ 0x1512 
    /*0001ea70*/ MOVWNE      R2, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8598] 
    /*0001ea74*/ STRNE       R3, [SP] 
    /*0001ea78*/ MOVTNE      R2, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8598] 
    /*0001ea7c*/ BNE         VPSS_DRV_CopyNRXAutoParamFromUser_x1eba4
    /*0001ea80*/ LDR         R4, [SL] 
    /*0001ea84*/ MOVW        R7, #714                    @ 0x2ca 
    /*0001ea88*/ MUL         R4, R7, R4 
    /*0001ea8c*/ CMP         R4, #0 
    /*0001ea90*/ BNE         VPSS_DRV_CopyNRXAutoParamFromUser_x1eac4
    VPSS_DRV_CopyNRXAutoParamFromUser_x1ea94:
    /*0001ea94*/ STR         R5, [SP, #4] 
    /*0001ea98*/ MOVW        R3, #5400                   @ 0x1518 
    /*0001ea9c*/ MOV         R1, #7 
    /*0001eaa0*/ STR         R3, [SP] 
    /*0001eaa4*/ MOVW        R2, #0                      @ .LC218 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x85d0] 
    /*0001eaa8*/ LDR         R3, [PC, #328]              @ 0x000000000001ebf8 
    /*0001eaac*/ MOVT        R2, #0                      @ .LC218 [R_ARM_MOVT_ABS: .rodata.str1.4+0x85d0] 
    /*0001eab0*/ MOV         R0, #3 
    /*0001eab4*/ BL          0x000000000001EAB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001eab8*/ MVN         R0, #0 
    /*0001eabc*/ ADD         SP, SP, #16 
    /*0001eac0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_DRV_CopyNRXAutoParamFromUser_x1eac4:
    /*0001eac4*/ LDR         R8, [SL, #8] 
    /*0001eac8*/ MOV         R2, R4 
    /*0001eacc*/ MOV         R1, R8 
    /*0001ead0*/ BL          0x000000000001EAD0          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*0001ead4*/ CMP         R0, #0 
    /*0001ead8*/ BEQ         VPSS_DRV_CopyNRXAutoParamFromUser_x1ea94
    /*0001eadc*/ SUB         R1, R4, #1 
    /*0001eae0*/ ADD         R0, SP, #15 
    /*0001eae4*/ ADD         R1, R8, R1 
    /*0001eae8*/ MOV         R2, #1 
    /*0001eaec*/ BL          0x000000000001EAEC          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0001eaf0*/ CMP         R0, #0 
    /*0001eaf4*/ BNE         VPSS_DRV_CopyNRXAutoParamFromUser_x1ea94
    /*0001eaf8*/ LDR         R2, [SL] 
    /*0001eafc*/ ADD         R0, R6, #140                @ 0x8c 
    /*0001eb00*/ LDR         R1, [SL, #8] 
    /*0001eb04*/ MUL         R2, R7, R2 
    /*0001eb08*/ BL          0x000000000001EB08          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0001eb0c*/ SUBS        R4, R0, #0 
    /*0001eb10*/ BNE         VPSS_DRV_CopyNRXAutoParamFromUser_x1ebe4
    /*0001eb14*/ LDR         R3, [SL] 
    /*0001eb18*/ CMP         R3, #0 
    /*0001eb1c*/ BEQ         VPSS_DRV_CopyNRXAutoParamFromUser_x1ebb8
    /*0001eb20*/ ADD         R5, R6, #140                @ 0x8c 
    /*0001eb24*/ LDR         R3, [R6, #76]               @ 0x4c 
    /*0001eb28*/ MOVW        R8, #65436                  @ 0xff9c 
    /*0001eb2c*/ MOV         R1, R4 
    /*0001eb30*/ SUB         R6, R5, #64                 @ 0x40 
    /*0001eb34*/ MOVT        R8, #49                     @ 0x31 
    /*0001eb38*/ B           VPSS_DRV_CopyNRXAutoParamFromUser_x1eb64
    VPSS_DRV_CopyNRXAutoParamFromUser_x1eb3c:
    /*0001eb3c*/ CMP         R1, R3 
    /*0001eb40*/ BCS         VPSS_DRV_CopyNRXAutoParamFromUser_x1eb94
    /*0001eb44*/ BL          0x000000000001EB44          @ VPSS_DRV_CheckGrpNRXVideoParam [R_ARM_CALL: .text+0x1e808] 
    /*0001eb48*/ CMP         R0, #0 
    /*0001eb4c*/ BNE         VPSS_DRV_CopyNRXAutoParamFromUser_x1ea0c
    /*0001eb50*/ LDR         R3, [SL] 
    /*0001eb54*/ CMP         R3, R4 
    /*0001eb58*/ BLS         VPSS_DRV_CopyNRXAutoParamFromUser_x1ebb8
    /*0001eb5c*/ LDR         R3, [R6, #4]! 
    /*0001eb60*/ LDR         R1, [R6, #-4] 
    VPSS_DRV_CopyNRXAutoParamFromUser_x1eb64:
    /*0001eb64*/ SUB         R2, R3, #100                @ 0x64 
    /*0001eb68*/ MOV         R0, R5 
    /*0001eb6c*/ CMP         R2, R8 
    /*0001eb70*/ ADD         R4, R4, #1 
    /*0001eb74*/ ADD         R5, R5, R7 
    /*0001eb78*/ BLS         VPSS_DRV_CopyNRXAutoParamFromUser_x1eb3c
    /*0001eb7c*/ STR         R3, [SP, #4] 
    /*0001eb80*/ MOVW        R2, #0                      @ .LC220 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8648] 
    /*0001eb84*/ MOVW        R3, #5421                   @ 0x152d 
    /*0001eb88*/ MOVT        R2, #0                      @ .LC220 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8648] 
    /*0001eb8c*/ STR         R3, [SP] 
    /*0001eb90*/ B           VPSS_DRV_CopyNRXAutoParamFromUser_x1e9fc
    VPSS_DRV_CopyNRXAutoParamFromUser_x1eb94:
    /*0001eb94*/ MOVW        R2, #0                      @ .LC221 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x868c] 
    /*0001eb98*/ MOVT        R2, #0                      @ .LC221 [R_ARM_MOVT_ABS: .rodata.str1.4+0x868c] 
    /*0001eb9c*/ MOVW        R3, #5427                   @ 0x1533 
    /*0001eba0*/ STR         R3, [SP] 
    VPSS_DRV_CopyNRXAutoParamFromUser_x1eba4:
    /*0001eba4*/ LDR         R3, [PC, #76]               @ 0x000000000001ebf8 
    /*0001eba8*/ MOV         R1, #7 
    /*0001ebac*/ MOV         R0, #3 
    /*0001ebb0*/ BL          0x000000000001EBB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ebb4*/ B           VPSS_DRV_CopyNRXAutoParamFromUser_x1ea0c
    VPSS_DRV_CopyNRXAutoParamFromUser_x1ebb8:
    /*0001ebb8*/ ADD         R0, R9, #1712               @ 0x6b0 
    /*0001ebbc*/ MOVW        R2, #11492                  @ 0x2ce4 
    /*0001ebc0*/ LDR         R1, [PC, #52]               @ 0x000000000001ebfc 
    /*0001ebc4*/ ADD         R0, R0, #4 
    /*0001ebc8*/ BL          0x000000000001EBC8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001ebcc*/ ADD         R9, R9, #12288              @ 0x3000 
    /*0001ebd0*/ MOV         R3, #0 
    /*0001ebd4*/ MOV         R0, R3 
    /*0001ebd8*/ STR         R3, [R9, #3052]             @ 0xbec 
    /*0001ebdc*/ ADD         SP, SP, #16 
    /*0001ebe0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_DRV_CopyNRXAutoParamFromUser_x1ebe4:
    /*0001ebe4*/ MOVW        R3, #5407                   @ 0x151f 
    /*0001ebe8*/ MOVW        R2, #0                      @ .LC219 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8610] 
    /*0001ebec*/ STR         R3, [SP] 
    /*0001ebf0*/ MOVT        R2, #0                      @ .LC219 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8610] 
    /*0001ebf4*/ B           VPSS_DRV_CopyNRXAutoParamFromUser_x1eba4
    /*0001ebf8*/ @           <UNDEFINED> instruction: 0x000012b4 
    /*0001ebfc*/ ANDEQ       R3, R0, R8, LSR #11 
FUNC_END VPSS_DRV_CopyNRXAutoParamFromUser


FUNC_BEGIN VPSS_DRV_CheckGrpNRXParam
    /*0001ec00*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001ec04*/ SUB         SP, SP, #20 
    /*0001ec08*/ LDR         R3, [R0] 
    /*0001ec0c*/ CMP         R3, #2 
    /*0001ec10*/ BEQ         VPSS_DRV_CheckGrpNRXParam_x1ec48
    /*0001ec14*/ STR         R3, [SP, #4] 
    /*0001ec18*/ MOVW        R3, #5043                   @ 0x13b3 
    /*0001ec1c*/ STR         R3, [SP] 
    /*0001ec20*/ MOVW        R2, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c98] 
    /*0001ec24*/ LDR         R3, [PC, #248]              @ 0x000000000001ed24 
    /*0001ec28*/ MOVT        R2, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c98] 
    VPSS_DRV_CheckGrpNRXParam_x1ec2c:
    /*0001ec2c*/ MOV         R1, #7 
    /*0001ec30*/ MOV         R0, #3 
    /*0001ec34*/ BL          0x000000000001EC34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ec38*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001ec3c*/ MOVT        R0, #40967                  @ 0xa007 
    VPSS_DRV_CheckGrpNRXParam_x1ec40:
    /*0001ec40*/ ADD         SP, SP, #20 
    /*0001ec44*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckGrpNRXParam_x1ec48:
    /*0001ec48*/ LDR         R3, [R0, #4] 
    /*0001ec4c*/ CMP         R3, #1 
    /*0001ec50*/ BHI         VPSS_DRV_CheckGrpNRXParam_x1ecdc
    /*0001ec54*/ BEQ         VPSS_DRV_CheckGrpNRXParam_x1eccc
    /*0001ec58*/ LDR         R3, [R0, #732]              @ 0x2dc 
    /*0001ec5c*/ CMP         R3, #0 
    /*0001ec60*/ MOVWEQ      R3, #5473                   @ 0x1561 
    /*0001ec64*/ MOVWEQ      R2, #0                      @ .LC223 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8704] 
    /*0001ec68*/ STREQ       R3, [SP] 
    /*0001ec6c*/ MOVTEQ      R2, #0                      @ .LC223 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8704] 
    /*0001ec70*/ BEQ         VPSS_DRV_CheckGrpNRXParam_x1ed08
    /*0001ec74*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*0001ec78*/ CMP         R3, #0 
    /*0001ec7c*/ BEQ         VPSS_DRV_CheckGrpNRXParam_x1ecf8
    /*0001ec80*/ LDR         R3, [R0, #724]              @ 0x2d4 
    /*0001ec84*/ SUB         R2, R3, #1 
    /*0001ec88*/ CMP         R2, #15 
    /*0001ec8c*/ MOVLS       R0, #0 
    /*0001ec90*/ BLS         VPSS_DRV_CheckGrpNRXParam_x1ec40
    /*0001ec94*/ STR         R3, [SP, #4] 
    /*0001ec98*/ MOV         R2, #16 
    /*0001ec9c*/ MOVW        R3, #5486                   @ 0x156e 
    /*0001eca0*/ STR         R2, [SP, #8] 
    /*0001eca4*/ STR         R3, [SP] 
    /*0001eca8*/ MOVW        R2, #0                      @ .LC225 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8760] 
    /*0001ecac*/ LDR         R3, [PC, #116]              @ 0x000000000001ed28 
    /*0001ecb0*/ MOVT        R2, #0                      @ .LC225 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8760] 
    /*0001ecb4*/ MOV         R1, #7 
    /*0001ecb8*/ MOV         R0, #3 
    /*0001ecbc*/ BL          0x000000000001ECBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ecc0*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001ecc4*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001ecc8*/ B           VPSS_DRV_CheckGrpNRXParam_x1ec40
    VPSS_DRV_CheckGrpNRXParam_x1eccc:
    /*0001eccc*/ ADD         R0, R0, #8 
    /*0001ecd0*/ ADD         SP, SP, #20 
    /*0001ecd4*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    VPSS_DRV_CheckGrpNRXParam_x1ecd8:
    /*0001ecd8*/ B           VPSS_DRV_CheckGrpNRXParam_x1ecd8@ VPSS_DRV_CheckGrpNRXVideoParam [R_ARM_JUMP24: .text+0x1e808] 
    VPSS_DRV_CheckGrpNRXParam_x1ecdc:
    /*0001ecdc*/ STR         R3, [SP, #4] 
    /*0001ece0*/ MOVW        R2, #0                      @ .LC222 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x86d4] 
    /*0001ece4*/ MOVW        R3, #5461                   @ 0x1555 
    /*0001ece8*/ MOVT        R2, #0                      @ .LC222 [R_ARM_MOVT_ABS: .rodata.str1.4+0x86d4] 
    /*0001ecec*/ STR         R3, [SP] 
    /*0001ecf0*/ LDR         R3, [PC, #48]               @ 0x000000000001ed28 
    /*0001ecf4*/ B           VPSS_DRV_CheckGrpNRXParam_x1ec2c
    VPSS_DRV_CheckGrpNRXParam_x1ecf8:
    /*0001ecf8*/ MOVW        R2, #0                      @ .LC224 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8734] 
    /*0001ecfc*/ MOVT        R2, #0                      @ .LC224 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8734] 
    /*0001ed00*/ MOVW        R3, #5479                   @ 0x1567 
    /*0001ed04*/ STR         R3, [SP] 
    VPSS_DRV_CheckGrpNRXParam_x1ed08:
    /*0001ed08*/ LDR         R3, [PC, #24]               @ 0x000000000001ed28 
    /*0001ed0c*/ MOV         R1, #7 
    /*0001ed10*/ MOV         R0, #3 
    /*0001ed14*/ BL          0x000000000001ED14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ed18*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001ed1c*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001ed20*/ B           VPSS_DRV_CheckGrpNRXParam_x1ec40
    /*0001ed24*/ ANDEQ       R1, R0, IP, LSR #4 
    /*0001ed28*/ LDRDEQ      R1, [R0], -R8 
FUNC_END VPSS_DRV_CheckGrpNRXParam


FUNC_BEGIN VPSS_DRV_SetGrpNRXParam
    /*0001ed2c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001ed30*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001ed34*/ LDR         R3, [R1, #4] 
    /*0001ed38*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001ed3c*/ MOV         R5, R1 
    /*0001ed40*/ MOV         R7, R0 
    /*0001ed44*/ CMP         R3, #0 
    /*0001ed48*/ LDR         R6, [R4, R0, LSL #2] 
    /*0001ed4c*/ BNE         VPSS_DRV_SetGrpNRXParam_x1ed90
    /*0001ed50*/ ADD         R1, R1, #724                @ 0x2d4 
    /*0001ed54*/ BL          0x000000000001ED54          @ VPSS_DRV_CopyNRXAutoParamFromUser [R_ARM_CALL: .text+0x1e9bc] 
    /*0001ed58*/ CMP         R0, #0 
    /*0001ed5c*/ BNE         VPSS_DRV_SetGrpNRXParam_x1eda4
    VPSS_DRV_SetGrpNRXParam_x1ed60:
    /*0001ed60*/ MOV         R3, #1 
    /*0001ed64*/ STR         R3, [R6, #988]              @ 0x3dc 
    /*0001ed68*/ LDR         R1, [R5] 
    /*0001ed6c*/ MOV         R0, #0 
    /*0001ed70*/ LDR         R2, [R4, R7, LSL #2] 
    /*0001ed74*/ STR         R1, [R6, #992]              @ 0x3e0 
    /*0001ed78*/ LDR         R1, [R5, #4] 
    /*0001ed7c*/ STR         R1, [R6, #996]              @ 0x3e4 
    /*0001ed80*/ STR         R3, [R2, #968]              @ 0x3c8 
    /*0001ed84*/ STR         R3, [R2, #972]              @ 0x3cc 
    /*0001ed88*/ STR         R3, [R2, #976]              @ 0x3d0 
    /*0001ed8c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_SetGrpNRXParam_x1ed90:
    /*0001ed90*/ MOVW        R2, #714                    @ 0x2ca 
    /*0001ed94*/ ADD         R1, R1, #8 
    /*0001ed98*/ ADD         R0, R6, #1000               @ 0x3e8 
    /*0001ed9c*/ BL          0x000000000001ED9C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001eda0*/ B           VPSS_DRV_SetGrpNRXParam_x1ed60
    VPSS_DRV_SetGrpNRXParam_x1eda4:
    /*0001eda4*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001eda8*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001edac*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VPSS_DRV_SetGrpNRXParam


FUNC_BEGIN VPSS_DRV_GetGrpNRXParam
    /*0001edb0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001edb4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001edb8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001edbc*/ MOV         R4, R1 
    /*0001edc0*/ LDR         R6, [R3, R0, LSL #2] 
    /*0001edc4*/ SUB         SP, SP, #20 
    /*0001edc8*/ LDR         R3, [R6, #996]              @ 0x3e4 
    /*0001edcc*/ STR         R3, [R1, #4] 
    /*0001edd0*/ LDR         R5, [R6, #1716]             @ 0x6b4 
    /*0001edd4*/ CMP         R5, #0 
    /*0001edd8*/ STR         R5, [R1, #724]              @ 0x2d4 
    /*0001eddc*/ BEQ         VPSS_DRV_GetGrpNRXParam_x1eea8
    /*0001ede0*/ LDR         R3, [R1, #732]              @ 0x2dc 
    /*0001ede4*/ MOV         R7, R0 
    /*0001ede8*/ CMP         R3, #0 
    /*0001edec*/ BEQ         VPSS_DRV_GetGrpNRXParam_x1ef70
    /*0001edf0*/ LDR         R8, [R1, #728]              @ 0x2d8 
    /*0001edf4*/ CMP         R8, #0 
    /*0001edf8*/ BEQ         VPSS_DRV_GetGrpNRXParam_x1ef58
    /*0001edfc*/ LSLS        R9, R5, #2 
    /*0001ee00*/ MOV         R3, #0 
    /*0001ee04*/ STRB        R3, [SP, #15] 
    /*0001ee08*/ BNE         VPSS_DRV_GetGrpNRXParam_x1eec4
    VPSS_DRV_GetGrpNRXParam_x1ee0c:
    /*0001ee0c*/ MOVW        R2, #0                      @ .LC231 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x88c0] 
    /*0001ee10*/ MOVT        R2, #0                      @ .LC231 [R_ARM_MOVT_ABS: .rodata.str1.4+0x88c0] 
    /*0001ee14*/ MOVW        R3, #5558                   @ 0x15b6 
    /*0001ee18*/ STR         R7, [SP, #4] 
    /*0001ee1c*/ STR         R3, [SP] 
    VPSS_DRV_GetGrpNRXParam_x1ee20:
    /*0001ee20*/ LDR         R3, [PC, #352]              @ 0x000000000001ef88 
    /*0001ee24*/ MOV         R1, #7 
    /*0001ee28*/ MOV         R0, #3 
    /*0001ee2c*/ BL          0x000000000001EE2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ee30*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001ee34*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001ee38*/ ADD         SP, SP, #20 
    /*0001ee3c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_DRV_GetGrpNRXParam_x1ee40:
    /*0001ee40*/ MOV         R2, R5 
    /*0001ee44*/ MOV         R1, R8 
    /*0001ee48*/ MOV         R0, #1 
    /*0001ee4c*/ BL          0x000000000001EE4C          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*0001ee50*/ CMP         R0, #0 
    /*0001ee54*/ BEQ         VPSS_DRV_GetGrpNRXParam_x1ef10
    /*0001ee58*/ SUB         R0, R5, #1 
    /*0001ee5c*/ ADD         R1, SP, #15 
    /*0001ee60*/ ADD         R0, R8, R0 
    /*0001ee64*/ MOV         R2, #1 
    /*0001ee68*/ BL          0x000000000001EE68          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0001ee6c*/ CMP         R0, #0 
    /*0001ee70*/ BNE         VPSS_DRV_GetGrpNRXParam_x1ef10
    /*0001ee74*/ ADD         R8, R6, #992                @ 0x3e0 
    /*0001ee78*/ MOV         R2, R9 
    /*0001ee7c*/ ADD         R1, R8, #728                @ 0x2d8 
    /*0001ee80*/ LDR         R0, [R4, #728]              @ 0x2d8 
    /*0001ee84*/ BL          0x000000000001EE84          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0001ee88*/ CMP         R0, #0 
    /*0001ee8c*/ BNE         VPSS_DRV_GetGrpNRXParam_x1ef40
    /*0001ee90*/ MOV         R2, R5 
    /*0001ee94*/ ADD         R1, R8, #792                @ 0x318 
    /*0001ee98*/ LDR         R0, [R4, #732]              @ 0x2dc 
    /*0001ee9c*/ BL          0x000000000001EE9C          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0001eea0*/ CMP         R0, #0 
    /*0001eea4*/ BNE         VPSS_DRV_GetGrpNRXParam_x1ef28
    VPSS_DRV_GetGrpNRXParam_x1eea8:
    /*0001eea8*/ ADD         R1, R6, #1000               @ 0x3e8 
    /*0001eeac*/ ADD         R0, R4, #8 
    /*0001eeb0*/ MOVW        R2, #714                    @ 0x2ca 
    /*0001eeb4*/ BL          0x000000000001EEB4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001eeb8*/ MOV         R0, #0 
    /*0001eebc*/ ADD         SP, SP, #20 
    /*0001eec0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_DRV_GetGrpNRXParam_x1eec4:
    /*0001eec4*/ MOV         R2, R9 
    /*0001eec8*/ MOV         R1, R8 
    /*0001eecc*/ MOV         R0, #1 
    /*0001eed0*/ BL          0x000000000001EED0          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*0001eed4*/ CMP         R0, #0 
    /*0001eed8*/ BEQ         VPSS_DRV_GetGrpNRXParam_x1ee0c
    /*0001eedc*/ SUB         R0, R9, #1 
    /*0001eee0*/ MOV         R2, #1 
    /*0001eee4*/ ADD         R0, R8, R0 
    /*0001eee8*/ ADD         R1, SP, #15 
    /*0001eeec*/ BL          0x000000000001EEEC          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*0001eef0*/ CMP         R0, #0 
    /*0001eef4*/ BNE         VPSS_DRV_GetGrpNRXParam_x1ee0c
    /*0001eef8*/ MOVW        R3, #714                    @ 0x2ca 
    /*0001eefc*/ STRB        R0, [SP, #15] 
    /*0001ef00*/ MUL         R5, R3, R5 
    /*0001ef04*/ LDR         R8, [R4, #732]              @ 0x2dc 
    /*0001ef08*/ CMP         R5, #0 
    /*0001ef0c*/ BNE         VPSS_DRV_GetGrpNRXParam_x1ee40
    VPSS_DRV_GetGrpNRXParam_x1ef10:
    /*0001ef10*/ MOVW        R3, #5564                   @ 0x15bc 
    /*0001ef14*/ MOVW        R2, #0                      @ .LC228 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x880c] 
    /*0001ef18*/ STR         R7, [SP, #4] 
    /*0001ef1c*/ MOVT        R2, #0                      @ .LC228 [R_ARM_MOVT_ABS: .rodata.str1.4+0x880c] 
    /*0001ef20*/ STR         R3, [SP] 
    /*0001ef24*/ B           VPSS_DRV_GetGrpNRXParam_x1ee20
    VPSS_DRV_GetGrpNRXParam_x1ef28:
    /*0001ef28*/ MOVW        R3, #5576                   @ 0x15c8 
    /*0001ef2c*/ MOVW        R2, #0                      @ .LC230 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8888] 
    /*0001ef30*/ STR         R7, [SP, #4] 
    /*0001ef34*/ MOVT        R2, #0                      @ .LC230 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8888] 
    /*0001ef38*/ STR         R3, [SP] 
    /*0001ef3c*/ B           VPSS_DRV_GetGrpNRXParam_x1ee20
    VPSS_DRV_GetGrpNRXParam_x1ef40:
    /*0001ef40*/ MOVW        R3, #5570                   @ 0x15c2 
    /*0001ef44*/ MOVW        R2, #0                      @ .LC229 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x884c] 
    /*0001ef48*/ STR         R7, [SP, #4] 
    /*0001ef4c*/ MOVT        R2, #0                      @ .LC229 [R_ARM_MOVT_ABS: .rodata.str1.4+0x884c] 
    /*0001ef50*/ STR         R3, [SP] 
    /*0001ef54*/ B           VPSS_DRV_GetGrpNRXParam_x1ee20
    VPSS_DRV_GetGrpNRXParam_x1ef58:
    /*0001ef58*/ MOVW        R3, #5552                   @ 0x15b0 
    /*0001ef5c*/ MOVW        R2, #0                      @ .LC227 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x87d8] 
    /*0001ef60*/ STR         R0, [SP, #4] 
    /*0001ef64*/ MOVT        R2, #0                      @ .LC227 [R_ARM_MOVT_ABS: .rodata.str1.4+0x87d8] 
    /*0001ef68*/ STR         R3, [SP] 
    /*0001ef6c*/ B           VPSS_DRV_GetGrpNRXParam_x1ee20
    VPSS_DRV_GetGrpNRXParam_x1ef70:
    /*0001ef70*/ MOVW        R3, #5546                   @ 0x15aa 
    /*0001ef74*/ MOVW        R2, #0                      @ .LC226 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x87a0] 
    /*0001ef78*/ STR         R0, [SP, #4] 
    /*0001ef7c*/ MOVT        R2, #0                      @ .LC226 [R_ARM_MOVT_ABS: .rodata.str1.4+0x87a0] 
    /*0001ef80*/ STR         R3, [SP] 
    /*0001ef84*/ B           VPSS_DRV_GetGrpNRXParam_x1ee20
    /*0001ef88*/ STRDEQ      R1, [R0], -R4 
FUNC_END VPSS_DRV_GetGrpNRXParam


FUNC_BEGIN VPSS_DRV_ProcNRXParam
    /*0001ef8c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001ef90*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001ef94*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001ef98*/ SUB         SP, SP, #20 
    /*0001ef9c*/ LDR         R6, [R3, R0, LSL #2] 
    /*0001efa0*/ CMP         R6, #0 
    /*0001efa4*/ BEQ         VPSS_DRV_ProcNRXParam_x1f2fc
    /*0001efa8*/ LDR         R3, [R6, #28] 
    /*0001efac*/ CMP         R3, #0 
    /*0001efb0*/ BEQ         VPSS_DRV_ProcNRXParam_x1f2fc
    /*0001efb4*/ LDR         R3, [R6, #996]              @ 0x3e4 
    /*0001efb8*/ MOV         R5, R1 
    /*0001efbc*/ MOV         R2, R0 
    /*0001efc0*/ MOV         R7, R0 
    /*0001efc4*/ CMP         R3, #0 
    /*0001efc8*/ MOVW        R1, #0                      @ .LC242 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8948] 
    /*0001efcc*/ ADDEQ       R4, R6, #13184              @ 0x3380 
    /*0001efd0*/ MOVT        R1, #0                      @ .LC242 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8948] 
    /*0001efd4*/ MOV         R0, R5 
    /*0001efd8*/ ADDEQ       R4, R4, #24 
    /*0001efdc*/ ADDNE       R4, R6, #1000               @ 0x3e8 
    /*0001efe0*/ BL          0x000000000001EFE0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001efe4*/ MOVW        R2, #0                      @ .LC246 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89cc] 
    /*0001efe8*/ MOVW        R3, #0                      @ .LC247 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89d0] 
    /*0001efec*/ MOVT        R2, #0                      @ .LC246 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89cc] 
    /*0001eff0*/ MOVT        R3, #0                      @ .LC247 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89d0] 
    /*0001eff4*/ STR         R2, [SP, #12] 
    /*0001eff8*/ MOVW        R1, #0                      @ .LC245 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89b4] 
    /*0001effc*/ STR         R3, [SP, #8] 
    /*0001f000*/ MOVW        R2, #0                      @ .LC248 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89d4] 
    /*0001f004*/ MOVW        R3, #0                      @ .LC249 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89dc] 
    /*0001f008*/ MOVT        R2, #0                      @ .LC248 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89d4] 
    /*0001f00c*/ MOVT        R3, #0                      @ .LC249 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89dc] 
    /*0001f010*/ STR         R2, [SP, #4] 
    /*0001f014*/ STR         R3, [SP] 
    /*0001f018*/ MOVW        R2, #0                      @ .LC244 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89ac] 
    /*0001f01c*/ MOVW        R3, #0                      @ .LC243 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89a4] 
    /*0001f020*/ MOVT        R2, #0                      @ .LC244 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89ac] 
    /*0001f024*/ MOVT        R3, #0                      @ .LC243 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89a4] 
    /*0001f028*/ MOV         R0, R5 
    /*0001f02c*/ MOVT        R1, #0                      @ .LC245 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89b4] 
    /*0001f030*/ BL          0x000000000001F030          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001f034*/ LDR         R2, [R6, #988]              @ 0x3dc 
    /*0001f038*/ CMP         R2, #0 
    /*0001f03c*/ MOVWEQ      R3, #0                      @ .LC232 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x88fc] 
    /*0001f040*/ MOVTEQ      R3, #0                      @ .LC232 [R_ARM_MOVT_ABS: .rodata.str1.4+0x88fc] 
    /*0001f044*/ BNE         VPSS_DRV_ProcNRXParam_x1f304
    VPSS_DRV_ProcNRXParam_x1f048:
    /*0001f048*/ LDR         R2, [R6, #992]              @ 0x3e0 
    /*0001f04c*/ CMP         R2, #1 
    /*0001f050*/ BEQ         VPSS_DRV_ProcNRXParam_x1f330
    VPSS_DRV_ProcNRXParam_x1f054:
    /*0001f054*/ CMP         R2, #2 
    /*0001f058*/ BEQ         VPSS_DRV_ProcNRXParam_x1f348
    /*0001f05c*/ CMP         R2, #3 
    /*0001f060*/ BEQ         VPSS_DRV_ProcNRXParam_x1f354
    /*0001f064*/ MOVW        R1, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e0c] 
    /*0001f068*/ CMP         R2, #4 
    /*0001f06c*/ MOVT        R1, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e0c] 
    /*0001f070*/ MOVW        IP, #0                      @ .LC238 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x892c] 
    /*0001f074*/ MOVT        IP, #0                      @ .LC238 [R_ARM_MOVT_ABS: .rodata.str1.4+0x892c] 
    /*0001f078*/ MOVNE       IP, R1 
    VPSS_DRV_ProcNRXParam_x1f07c:
    /*0001f07c*/ LDR         R2, [R6, #996]              @ 0x3e4 
    /*0001f080*/ CMP         R2, #0 
    /*0001f084*/ MOVWEQ      R0, #0                      @ .LC239 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8934] 
    /*0001f088*/ MOVTEQ      R0, #0                      @ .LC239 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8934] 
    /*0001f08c*/ BEQ         VPSS_DRV_ProcNRXParam_x1f0a8
    /*0001f090*/ MOVW        R1, #0                      @ .LC241 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8944] 
    /*0001f094*/ CMP         R2, #1 
    /*0001f098*/ MOVT        R1, #0                      @ .LC241 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8944] 
    /*0001f09c*/ MOVW        R0, #0                      @ .LC240 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x893c] 
    /*0001f0a0*/ MOVT        R0, #0                      @ .LC240 [R_ARM_MOVT_ABS: .rodata.str1.4+0x893c] 
    /*0001f0a4*/ MOVNE       R0, R1 
    VPSS_DRV_ProcNRXParam_x1f0a8:
    /*0001f0a8*/ LDRB        R1, [R4, #524]              @ 0x20c 
    /*0001f0ac*/ ADD         R6, R6, #12288              @ 0x3000 
    /*0001f0b0*/ MOV         R2, R7 
    /*0001f0b4*/ UBFX        R1, R1, #5, #1 
    /*0001f0b8*/ STR         R1, [SP, #12] 
    /*0001f0bc*/ LDR         LR, [R6, #3052]             @ 0xbec 
    /*0001f0c0*/ MOVW        R1, #0                      @ .LC250 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89e4] 
    /*0001f0c4*/ STR         IP, [SP] 
    /*0001f0c8*/ MOVT        R1, #0                      @ .LC250 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89e4] 
    /*0001f0cc*/ STR         R0, [SP, #4] 
    /*0001f0d0*/ MOV         R0, R5 
    /*0001f0d4*/ STR         LR, [SP, #8] 
    /*0001f0d8*/ BL          0x000000000001F0D8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001f0dc*/ MOVW        R2, #0                      @ .LC254 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a20] 
    /*0001f0e0*/ MOVW        R3, #0                      @ .LC255 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a28] 
    /*0001f0e4*/ MOVT        R2, #0                      @ .LC254 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a20] 
    /*0001f0e8*/ MOVT        R3, #0                      @ .LC255 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a28] 
    /*0001f0ec*/ STR         R2, [SP, #4] 
    /*0001f0f0*/ STR         R3, [SP] 
    /*0001f0f4*/ MOVW        R2, #0                      @ .LC252 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a04] 
    /*0001f0f8*/ MOVW        R3, #0                      @ .LC251 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89fc] 
    /*0001f0fc*/ MOVT        R2, #0                      @ .LC252 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a04] 
    /*0001f100*/ MOVT        R3, #0                      @ .LC251 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89fc] 
    /*0001f104*/ MOVW        R1, #0                      @ .LC253 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a0c] 
    /*0001f108*/ MOV         R0, R5 
    /*0001f10c*/ MOVT        R1, #0                      @ .LC253 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a0c] 
    /*0001f110*/ BL          0x000000000001F110          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001f114*/ LDRB        R0, [R4, #712]              @ 0x2c8 
    /*0001f118*/ LDRB        R3, [R4, #189]              @ 0xbd 
    /*0001f11c*/ MOVW        R1, #0                      @ .LC256 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a30] 
    /*0001f120*/ LDRB        R2, [R4, #37]               @ 0x25 
    /*0001f124*/ AND         R0, R0, #1 
    /*0001f128*/ STR         R0, [SP, #4] 
    /*0001f12c*/ MOVT        R1, #0                      @ .LC256 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a30] 
    /*0001f130*/ LDRB        IP, [R4, #341]              @ 0x155 
    /*0001f134*/ LSR         R3, R3, #7 
    /*0001f138*/ LSR         R2, R2, #7 
    /*0001f13c*/ MOV         R0, R5 
    /*0001f140*/ LSR         IP, IP, #7 
    /*0001f144*/ STR         IP, [SP] 
    /*0001f148*/ BL          0x000000000001F148          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001f14c*/ MOVW        R2, #0                      @ .LC259 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a54] 
    /*0001f150*/ MOVW        R3, #0                      @ .LC260 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a5c] 
    /*0001f154*/ MOVT        R2, #0                      @ .LC259 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a54] 
    /*0001f158*/ MOVT        R3, #0                      @ .LC260 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a5c] 
    /*0001f15c*/ STR         R2, [SP, #4] 
    /*0001f160*/ STR         R3, [SP] 
    /*0001f164*/ MOVW        R2, #0                      @ .LC258 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4c] 
    /*0001f168*/ MOVW        R3, #0                      @ .LC257 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a44] 
    /*0001f16c*/ MOVT        R2, #0                      @ .LC258 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4c] 
    /*0001f170*/ MOVT        R3, #0                      @ .LC257 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a44] 
    /*0001f174*/ MOVW        R1, #0                      @ .LC253 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a0c] 
    /*0001f178*/ MOV         R0, R5 
    /*0001f17c*/ MOVT        R1, #0                      @ .LC253 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a0c] 
    /*0001f180*/ BL          0x000000000001F180          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001f184*/ LDRB        R0, [R4, #571]              @ 0x23b 
    /*0001f188*/ LDRB        R3, [R4, #181]              @ 0xb5 
    /*0001f18c*/ MOVW        R1, #0                      @ .LC256 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a30] 
    /*0001f190*/ LDRB        R2, [R4, #29] 
    /*0001f194*/ MOVT        R1, #0                      @ .LC256 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a30] 
    /*0001f198*/ STR         R0, [SP, #4] 
    /*0001f19c*/ MOV         R0, R5 
    /*0001f1a0*/ LDRB        IP, [R4, #333]              @ 0x14d 
    /*0001f1a4*/ STR         IP, [SP] 
    /*0001f1a8*/ BL          0x000000000001F1A8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001f1ac*/ MOVW        R2, #0                      @ .LC263 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a74] 
    /*0001f1b0*/ MOVW        R3, #0                      @ .LC264 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a7c] 
    /*0001f1b4*/ MOVT        R2, #0                      @ .LC263 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a74] 
    /*0001f1b8*/ MOVT        R3, #0                      @ .LC264 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a7c] 
    /*0001f1bc*/ STR         R2, [SP, #4] 
    /*0001f1c0*/ STR         R3, [SP] 
    /*0001f1c4*/ MOVW        R2, #0                      @ .LC262 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a6c] 
    /*0001f1c8*/ MOVW        R3, #0                      @ .LC261 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a64] 
    /*0001f1cc*/ MOVT        R2, #0                      @ .LC262 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a6c] 
    /*0001f1d0*/ MOVT        R3, #0                      @ .LC261 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a64] 
    /*0001f1d4*/ MOVW        R1, #0                      @ .LC253 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a0c] 
    /*0001f1d8*/ MOV         R0, R5 
    /*0001f1dc*/ MOVT        R1, #0                      @ .LC253 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a0c] 
    /*0001f1e0*/ BL          0x000000000001F1E0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001f1e4*/ LDRB        R0, [R4, #574]              @ 0x23e 
    /*0001f1e8*/ LDRB        R3, [R4, #184]              @ 0xb8 
    /*0001f1ec*/ MOVW        R1, #0                      @ .LC256 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a30] 
    /*0001f1f0*/ LDRB        R2, [R4, #32] 
    /*0001f1f4*/ MOVT        R1, #0                      @ .LC256 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a30] 
    /*0001f1f8*/ STR         R0, [SP, #4] 
    /*0001f1fc*/ MOV         R0, R5 
    /*0001f200*/ LDRB        IP, [R4, #336]              @ 0x150 
    /*0001f204*/ STR         IP, [SP] 
    /*0001f208*/ BL          0x000000000001F208          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001f20c*/ MOVW        R2, #0                      @ .LC268 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8aa8] 
    /*0001f210*/ MOVW        R3, #0                      @ .LC269 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ab0] 
    /*0001f214*/ MOVT        R2, #0                      @ .LC268 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8aa8] 
    /*0001f218*/ MOVT        R3, #0                      @ .LC269 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ab0] 
    /*0001f21c*/ STR         R2, [SP, #4] 
    /*0001f220*/ STR         R3, [SP] 
    /*0001f224*/ MOVW        R2, #0                      @ .LC266 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a8c] 
    /*0001f228*/ MOVW        R3, #0                      @ .LC265 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a84] 
    /*0001f22c*/ MOVT        R2, #0                      @ .LC266 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a8c] 
    /*0001f230*/ MOVT        R3, #0                      @ .LC265 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a84] 
    /*0001f234*/ MOVW        R1, #0                      @ .LC267 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a94] 
    /*0001f238*/ MOV         R0, R5 
    /*0001f23c*/ MOVT        R1, #0                      @ .LC267 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a94] 
    /*0001f240*/ BL          0x000000000001F240          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001f244*/ LDRB        R0, [R4, #528]              @ 0x210 
    /*0001f248*/ LDRB        R3, [R4, #504]              @ 0x1f8 
    /*0001f24c*/ MOVW        R1, #0                      @ .LC270 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ab8] 
    /*0001f250*/ LDRB        R2, [R4, #502]              @ 0x1f6 
    /*0001f254*/ AND         R0, R0, #15 
    /*0001f258*/ STR         R0, [SP, #4] 
    /*0001f25c*/ AND         R3, R3, #15 
    /*0001f260*/ LDRB        IP, [R4, #526]              @ 0x20e 
    /*0001f264*/ AND         R2, R2, #15 
    /*0001f268*/ MOVT        R1, #0                      @ .LC270 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ab8] 
    /*0001f26c*/ MOV         R0, R5 
    /*0001f270*/ AND         IP, IP, #15 
    /*0001f274*/ STR         IP, [SP] 
    /*0001f278*/ BL          0x000000000001F278          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001f27c*/ MOVW        R2, #0                      @ .LC273 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8adc] 
    /*0001f280*/ MOVW        R3, #0                      @ .LC274 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ae4] 
    /*0001f284*/ MOVT        R2, #0                      @ .LC273 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8adc] 
    /*0001f288*/ MOVT        R3, #0                      @ .LC274 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ae4] 
    /*0001f28c*/ STR         R2, [SP, #4] 
    /*0001f290*/ STR         R3, [SP] 
    /*0001f294*/ MOVW        R2, #0                      @ .LC272 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ad4] 
    /*0001f298*/ MOVW        R3, #0                      @ .LC271 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8acc] 
    /*0001f29c*/ MOVT        R2, #0                      @ .LC272 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ad4] 
    /*0001f2a0*/ MOVT        R3, #0                      @ .LC271 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8acc] 
    /*0001f2a4*/ MOVW        R1, #0                      @ .LC267 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a94] 
    /*0001f2a8*/ MOV         R0, R5 
    /*0001f2ac*/ MOVT        R1, #0                      @ .LC267 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a94] 
    /*0001f2b0*/ BL          0x000000000001F2B0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001f2b4*/ MOVW        R3, #494                    @ 0x1ee 
    /*0001f2b8*/ LDRH        R1, [R4, R3] 
    /*0001f2bc*/ ADD         R2, R4, #480                @ 0x1e0 
    /*0001f2c0*/ ADD         IP, R4, #492                @ 0x1ec 
    /*0001f2c4*/ MOVW        R3, #482                    @ 0x1e2 
    /*0001f2c8*/ LDRH        R2, [R2] 
    /*0001f2cc*/ UBFX        R1, R1, #0, #10 
    /*0001f2d0*/ LDRH        R3, [R4, R3] 
    /*0001f2d4*/ MOV         R0, R5 
    /*0001f2d8*/ STR         R1, [SP, #4] 
    /*0001f2dc*/ UBFX        R2, R2, #0, #10 
    /*0001f2e0*/ LDRH        IP, [IP] 
    /*0001f2e4*/ MOVW        R1, #0                      @ .LC270 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ab8] 
    /*0001f2e8*/ UBFX        R3, R3, #0, #10 
    /*0001f2ec*/ MOVT        R1, #0                      @ .LC270 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ab8] 
    /*0001f2f0*/ UBFX        IP, IP, #0, #10 
    /*0001f2f4*/ STR         IP, [SP] 
    /*0001f2f8*/ BL          0x000000000001F2F8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VPSS_DRV_ProcNRXParam_x1f2fc:
    /*0001f2fc*/ ADD         SP, SP, #20 
    /*0001f300*/ POP         {R4, R5, R6, R7, PC} 
    VPSS_DRV_ProcNRXParam_x1f304:
    /*0001f304*/ CMP         R2, #1 
    /*0001f308*/ BEQ         VPSS_DRV_ProcNRXParam_x1f33c
    /*0001f30c*/ CMP         R2, #2 
    /*0001f310*/ MOVW        R1, #0                      @ .LC234 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x890c] 
    /*0001f314*/ LDR         R2, [R6, #992]              @ 0x3e0 
    /*0001f318*/ MOVT        R1, #0                      @ .LC234 [R_ARM_MOVT_ABS: .rodata.str1.4+0x890c] 
    /*0001f31c*/ MOVW        R3, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e0c] 
    /*0001f320*/ MOVT        R3, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e0c] 
    /*0001f324*/ MOVEQ       R3, R1 
    /*0001f328*/ CMP         R2, #1 
    /*0001f32c*/ BNE         VPSS_DRV_ProcNRXParam_x1f054
    VPSS_DRV_ProcNRXParam_x1f330:
    /*0001f330*/ MOVW        IP, #0                      @ .LC235 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8914] 
    /*0001f334*/ MOVT        IP, #0                      @ .LC235 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8914] 
    /*0001f338*/ B           VPSS_DRV_ProcNRXParam_x1f07c
    VPSS_DRV_ProcNRXParam_x1f33c:
    /*0001f33c*/ MOVW        R3, #0                      @ .LC233 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8904] 
    /*0001f340*/ MOVT        R3, #0                      @ .LC233 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8904] 
    /*0001f344*/ B           VPSS_DRV_ProcNRXParam_x1f048
    VPSS_DRV_ProcNRXParam_x1f348:
    /*0001f348*/ MOVW        IP, #0                      @ .LC236 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x891c] 
    /*0001f34c*/ MOVT        IP, #0                      @ .LC236 [R_ARM_MOVT_ABS: .rodata.str1.4+0x891c] 
    /*0001f350*/ B           VPSS_DRV_ProcNRXParam_x1f07c
    VPSS_DRV_ProcNRXParam_x1f354:
    /*0001f354*/ MOVW        IP, #0                      @ .LC237 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8924] 
    /*0001f358*/ MOVT        IP, #0                      @ .LC237 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8924] 
    /*0001f35c*/ B           VPSS_DRV_ProcNRXParam_x1f07c
FUNC_END VPSS_DRV_ProcNRXParam


FUNC_BEGIN VPSS_DRV_CheckExtChnAttr
    /*0001f360*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001f364*/ SUB         SP, SP, #20 
    /*0001f368*/ LDR         R3, [R0, #24] 
    /*0001f36c*/ CMP         R3, #1 
    /*0001f370*/ BHI         VPSS_DRV_CheckExtChnAttr_x1f450
    /*0001f374*/ LDR         R3, [R0, #20] 
    /*0001f378*/ CMP         R3, #0 
    /*0001f37c*/ BNE         VPSS_DRV_CheckExtChnAttr_x1f4cc
    /*0001f380*/ LDR         R1, [R0, #16] 
    /*0001f384*/ SUB         R2, R1, #25 
    /*0001f388*/ CMP         R2, #14 
    /*0001f38c*/ BHI         VPSS_DRV_CheckExtChnAttr_x1f420
    /*0001f390*/ MOVW        R3, #16411                  @ 0x401b 
    /*0001f394*/ MVN         R3, R3, LSR R2 
    /*0001f398*/ TST         R3, #1 
    /*0001f39c*/ BNE         VPSS_DRV_CheckExtChnAttr_x1f420
    /*0001f3a0*/ LDR         R3, [R0, #12] 
    /*0001f3a4*/ CMP         R3, #0 
    /*0001f3a8*/ BNE         VPSS_DRV_CheckExtChnAttr_x1f4e4
    /*0001f3ac*/ LDR         R3, [R0, #4] 
    /*0001f3b0*/ SUB         R2, R3, #64                 @ 0x40 
    /*0001f3b4*/ CMP         R2, #8128                   @ 0x1fc0 
    /*0001f3b8*/ BHI         VPSS_DRV_CheckExtChnAttr_x1f4fc
    /*0001f3bc*/ LDR         R2, [R0, #8] 
    /*0001f3c0*/ SUB         R1, R2, #64                 @ 0x40 
    /*0001f3c4*/ CMP         R1, #8128                   @ 0x1fc0 
    /*0001f3c8*/ BHI         VPSS_DRV_CheckExtChnAttr_x1f53c
    /*0001f3cc*/ TST         R3, #1 
    /*0001f3d0*/ MOVWNE      R3, #5884                   @ 0x16fc 
    /*0001f3d4*/ MOVWNE      R2, #0                      @ .LC281 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c50] 
    /*0001f3d8*/ STRNE       R3, [SP] 
    /*0001f3dc*/ MOVTNE      R2, #0                      @ .LC281 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c50] 
    /*0001f3e0*/ BNE         VPSS_DRV_CheckExtChnAttr_x1f4b0
    /*0001f3e4*/ TST         R2, #1 
    /*0001f3e8*/ BNE         VPSS_DRV_CheckExtChnAttr_x1f4a0
    /*0001f3ec*/ LDR         R3, [R0, #28] 
    /*0001f3f0*/ CMP         R3, #8 
    /*0001f3f4*/ BHI         VPSS_DRV_CheckExtChnAttr_x1f468
    /*0001f3f8*/ LDR         R1, [R0, #36]               @ 0x24 
    /*0001f3fc*/ LDR         R0, [R0, #32] 
    /*0001f400*/ BL          0x000000000001F400          @ VPSS_DRV_CheckFrameRate [R_ARM_CALL: .text+0x1b8f4] 
    /*0001f404*/ MOVW        R3, #32771                  @ 0x8003 
    /*0001f408*/ MOVT        R3, #40967                  @ 0xa007 
    /*0001f40c*/ CMP         R0, #0 
    /*0001f410*/ MOVNE       R0, R3 
    /*0001f414*/ MOVEQ       R0, #0 
    VPSS_DRV_CheckExtChnAttr_x1f418:
    /*0001f418*/ ADD         SP, SP, #20 
    /*0001f41c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckExtChnAttr_x1f420:
    /*0001f420*/ MOVW        R2, #0                      @ .LC277 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8b5c] 
    /*0001f424*/ MOVT        R2, #0                      @ .LC277 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8b5c] 
    /*0001f428*/ MOVW        R3, #5857                   @ 0x16e1 
    /*0001f42c*/ STR         R1, [SP, #4] 
    /*0001f430*/ STR         R3, [SP] 
    VPSS_DRV_CheckExtChnAttr_x1f434:
    /*0001f434*/ LDR         R3, [PC, #296]              @ 0x000000000001f564 
    /*0001f438*/ MOV         R1, #7 
    /*0001f43c*/ MOV         R0, #3 
    /*0001f440*/ BL          0x000000000001F440          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f444*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001f448*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001f44c*/ B           VPSS_DRV_CheckExtChnAttr_x1f418
    VPSS_DRV_CheckExtChnAttr_x1f450:
    /*0001f450*/ STR         R3, [SP, #4] 
    /*0001f454*/ MOVW        R2, #0                      @ .LC275 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8aec] 
    /*0001f458*/ MOVW        R3, #5841                   @ 0x16d1 
    /*0001f45c*/ MOVT        R2, #0                      @ .LC275 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8aec] 
    /*0001f460*/ STR         R3, [SP] 
    /*0001f464*/ B           VPSS_DRV_CheckExtChnAttr_x1f434
    VPSS_DRV_CheckExtChnAttr_x1f468:
    /*0001f468*/ STR         R3, [SP, #4] 
    /*0001f46c*/ MOV         R2, #8 
    /*0001f470*/ MOVW        R3, #5896                   @ 0x1708 
    /*0001f474*/ STR         R2, [SP, #8] 
    /*0001f478*/ STR         R3, [SP] 
    /*0001f47c*/ MOVW        R2, #0                      @ .LC283 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8cb8] 
    /*0001f480*/ LDR         R3, [PC, #220]              @ 0x000000000001f564 
    /*0001f484*/ MOVT        R2, #0                      @ .LC283 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8cb8] 
    /*0001f488*/ MOV         R1, #7 
    /*0001f48c*/ MOV         R0, #3 
    /*0001f490*/ BL          0x000000000001F490          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f494*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001f498*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001f49c*/ B           VPSS_DRV_CheckExtChnAttr_x1f418
    VPSS_DRV_CheckExtChnAttr_x1f4a0:
    /*0001f4a0*/ MOVW        R2, #0                      @ .LC282 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c84] 
    /*0001f4a4*/ MOVT        R2, #0                      @ .LC282 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c84] 
    /*0001f4a8*/ MOVW        R3, #5890                   @ 0x1702 
    /*0001f4ac*/ STR         R3, [SP] 
    VPSS_DRV_CheckExtChnAttr_x1f4b0:
    /*0001f4b0*/ LDR         R3, [PC, #172]              @ 0x000000000001f564 
    /*0001f4b4*/ MOV         R1, #7 
    /*0001f4b8*/ MOV         R0, #3 
    /*0001f4bc*/ BL          0x000000000001F4BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f4c0*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001f4c4*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001f4c8*/ B           VPSS_DRV_CheckExtChnAttr_x1f418
    VPSS_DRV_CheckExtChnAttr_x1f4cc:
    /*0001f4cc*/ STR         R3, [SP, #4] 
    /*0001f4d0*/ MOVW        R2, #0                      @ .LC276 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8b20] 
    /*0001f4d4*/ MOVW        R3, #5847                   @ 0x16d7 
    /*0001f4d8*/ MOVT        R2, #0                      @ .LC276 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8b20] 
    /*0001f4dc*/ STR         R3, [SP] 
    /*0001f4e0*/ B           VPSS_DRV_CheckExtChnAttr_x1f434
    VPSS_DRV_CheckExtChnAttr_x1f4e4:
    /*0001f4e4*/ STR         R3, [SP, #4] 
    /*0001f4e8*/ MOVW        R2, #0                      @ .LC278 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ba0] 
    /*0001f4ec*/ MOVW        R3, #5864                   @ 0x16e8 
    /*0001f4f0*/ MOVT        R2, #0                      @ .LC278 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ba0] 
    /*0001f4f4*/ STR         R3, [SP] 
    /*0001f4f8*/ B           VPSS_DRV_CheckExtChnAttr_x1f434
    VPSS_DRV_CheckExtChnAttr_x1f4fc:
    /*0001f4fc*/ MOV         R2, #8192                   @ 0x2000 
    /*0001f500*/ STR         R2, [SP, #12] 
    /*0001f504*/ MOVW        R2, #0                      @ .LC279 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8be0] 
    /*0001f508*/ MOVT        R2, #0                      @ .LC279 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8be0] 
    /*0001f50c*/ STR         R3, [SP, #4] 
    /*0001f510*/ MOV         R3, #64                     @ 0x40 
    /*0001f514*/ STR         R3, [SP, #8] 
    /*0001f518*/ MOVW        R3, #5871                   @ 0x16ef 
    /*0001f51c*/ STR         R3, [SP] 
    VPSS_DRV_CheckExtChnAttr_x1f520:
    /*0001f520*/ LDR         R3, [PC, #60]               @ 0x000000000001f564 
    /*0001f524*/ MOV         R1, #7 
    /*0001f528*/ MOV         R0, #3 
    /*0001f52c*/ BL          0x000000000001F52C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f530*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001f534*/ MOVT        R0, #40967                  @ 0xa007 
    /*0001f538*/ B           VPSS_DRV_CheckExtChnAttr_x1f418
    VPSS_DRV_CheckExtChnAttr_x1f53c:
    /*0001f53c*/ MOV         R3, #64                     @ 0x40 
    /*0001f540*/ STR         R2, [SP, #4] 
    /*0001f544*/ STR         R3, [SP, #8] 
    /*0001f548*/ MOV         R2, #8192                   @ 0x2000 
    /*0001f54c*/ MOVW        R3, #5878                   @ 0x16f6 
    /*0001f550*/ STR         R2, [SP, #12] 
    /*0001f554*/ STR         R3, [SP] 
    /*0001f558*/ MOVW        R2, #0                      @ .LC280 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c18] 
    /*0001f55c*/ MOVT        R2, #0                      @ .LC280 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c18] 
    /*0001f560*/ B           VPSS_DRV_CheckExtChnAttr_x1f520
    /*0001f564*/ ANDEQ       R1, R0, IP, LSL #6 
FUNC_END VPSS_DRV_CheckExtChnAttr


FUNC_BEGIN VPSS_DRV_CheckExtChnPixformatTransform
    /*0001f568*/ SUB         R0, R0, #39                 @ 0x27 
    /*0001f56c*/ CMP         R1, #39                     @ 0x27 
    /*0001f570*/ CLZ         R0, R0 
    /*0001f574*/ LSR         R0, R0, #5 
    /*0001f578*/ MOVEQ       R0, #0 
    /*0001f57c*/ RSB         R0, R0, #0 
    /*0001f580*/ BX          LR 
FUNC_END VPSS_DRV_CheckExtChnPixformatTransform


FUNC_BEGIN VPSS_DRV_PwrCtrl
    /*0001f584*/ BX          LR 
FUNC_END VPSS_DRV_PwrCtrl


FUNC_BEGIN VPSS_DRV_ClkEnable
    /*0001f588*/ PUSH        {R4, R5, LR} 
    /*0001f58c*/ SUB         SP, SP, #28 
    /*0001f590*/ MOV         R5, R0 
    /*0001f594*/ MOV         R0, #2 
    /*0001f598*/ MOV         R4, #0 
    /*0001f59c*/ STR         R5, [SP, #16] 
    /*0001f5a0*/ MOV         R3, #1 
    /*0001f5a4*/ STMIB       SP, {R3, R4} 
    /*0001f5a8*/ MOV         R3, #7 
    /*0001f5ac*/ STR         R3, [SP, #12] 
    /*0001f5b0*/ BL          0x000000000001F5B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001f5b4*/ ADD         R2, SP, #4 
    /*0001f5b8*/ MOV         R1, #126                    @ 0x7e 
    /*0001f5bc*/ LDR         R3, [R0, #20] 
    /*0001f5c0*/ ADD         R0, SP, #12 
    /*0001f5c4*/ BLX         R3 
    /*0001f5c8*/ MOV         R0, #2 
    /*0001f5cc*/ BL          0x000000000001F5CC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001f5d0*/ ADD         R2, SP, #8 
    /*0001f5d4*/ MOV         R1, #125                    @ 0x7d 
    /*0001f5d8*/ LDR         R3, [R0, #20] 
    /*0001f5dc*/ ADD         R0, SP, #12 
    /*0001f5e0*/ BLX         R3 
    /*0001f5e4*/ MOV         R0, R5 
    /*0001f5e8*/ MOVW        R1, #25690                  @ 0x645a 
    /*0001f5ec*/ MOVT        R1, #2304                   @ 0x900 
    /*0001f5f0*/ BL          0x000000000001F5F0          @ VPSS_HAL_SetOutstanding [R_ARM_CALL: .text+0x266cc] 
    /*0001f5f4*/ MOV         R0, R4 
    /*0001f5f8*/ ADD         SP, SP, #28 
    /*0001f5fc*/ POP         {R4, R5, PC} 
FUNC_END VPSS_DRV_ClkEnable


FUNC_BEGIN VPSS_DRV_ClkDisable
    /*0001f600*/ PUSH        {R4, R5, LR} 
    /*0001f604*/ SUB         SP, SP, #28 
    /*0001f608*/ ADD         R4, SP, #24 
    /*0001f60c*/ MOV         R5, #0 
    /*0001f610*/ STR         R0, [SP, #16] 
    /*0001f614*/ MOV         R0, #2 
    /*0001f618*/ MOV         R3, #1 
    /*0001f61c*/ STR         R5, [SP, #4] 
    /*0001f620*/ STR         R3, [R4, #-16]! 
    /*0001f624*/ MOV         R3, #7 
    /*0001f628*/ STR         R3, [SP, #12] 
    /*0001f62c*/ BL          0x000000000001F62C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001f630*/ MOV         R2, R4 
    /*0001f634*/ MOV         R1, #125                    @ 0x7d 
    /*0001f638*/ LDR         R3, [R0, #20] 
    /*0001f63c*/ ADD         R0, SP, #12 
    /*0001f640*/ BLX         R3 
    /*0001f644*/ MOV         R0, #2 
    /*0001f648*/ BL          0x000000000001F648          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001f64c*/ ADD         R2, SP, #4 
    /*0001f650*/ MOV         R1, #126                    @ 0x7e 
    /*0001f654*/ LDR         R3, [R0, #20] 
    /*0001f658*/ ADD         R0, SP, #12 
    /*0001f65c*/ BLX         R3 
    /*0001f660*/ MOV         R0, R5 
    /*0001f664*/ ADD         SP, SP, #28 
    /*0001f668*/ POP         {R4, R5, PC} 
FUNC_END VPSS_DRV_ClkDisable


FUNC_BEGIN VPSS_DRV_SetOutstanding
    /*0001f66c*/ MOVW        R1, #25690                  @ 0x645a 
    /*0001f670*/ MOVT        R1, #2304                   @ 0x900 
    VPSS_DRV_SetOutstanding_x1f674:
    /*0001f674*/ B           VPSS_DRV_SetOutstanding_x1f674@ VPSS_HAL_SetOutstanding [R_ARM_JUMP24: .text+0x266cc] 
FUNC_END VPSS_DRV_SetOutstanding


FUNC_BEGIN VPSS_DRV_DidcardFirstFrame
    /*0001f678*/ MOV         R0, #0 
    /*0001f67c*/ BX          LR 
FUNC_END VPSS_DRV_DidcardFirstFrame


FUNC_BEGIN VPSS_DRV_GetDestSize
    /*0001f680*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001f684*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001f688*/ PUSH        {R4, R5, LR} 
    /*0001f68c*/ MOVW        LR, #1080                   @ 0x438 
    /*0001f690*/ LDR         R0, [IP, R0, LSL #2] 
    /*0001f694*/ MOV         IP, #360                    @ 0x168 
    /*0001f698*/ MUL         R2, LR, R2 
    /*0001f69c*/ MOV         LR, #24 
    /*0001f6a0*/ MLA         IP, IP, R1, R2 
    /*0001f6a4*/ MOVW        R2, #26564                  @ 0x67c4 
    /*0001f6a8*/ MLA         R1, LR, R1, R0 
    /*0001f6ac*/ MOVW        LR, #15516                  @ 0x3c9c 
    /*0001f6b0*/ ADD         R0, R0, IP 
    /*0001f6b4*/ MOVW        R5, #15512                  @ 0x3c98 
    /*0001f6b8*/ MOVW        IP, #26560                  @ 0x67c0 
    /*0001f6bc*/ LDR         R4, [SP, #12] 
    /*0001f6c0*/ LDR         R2, [R0, R2] 
    /*0001f6c4*/ LDR         IP, [R0, IP] 
    /*0001f6c8*/ MOV         R0, #0 
    /*0001f6cc*/ LDR         LR, [R1, LR] 
    /*0001f6d0*/ LDR         R1, [R1, R5] 
    /*0001f6d4*/ CMP         R2, LR 
    /*0001f6d8*/ MOVCS       R2, LR 
    /*0001f6dc*/ CMP         R1, IP 
    /*0001f6e0*/ MOVCS       R1, IP 
    /*0001f6e4*/ STR         R1, [R3] 
    /*0001f6e8*/ STR         R2, [R4] 
    /*0001f6ec*/ POP         {R4, R5, PC} 
FUNC_END VPSS_DRV_GetDestSize


FUNC_BEGIN VPSS_DRV_GetGroupCropCfgSize
    /*0001f6f0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001f6f4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001f6f8*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001f6fc*/ MOV         R0, #0 
    /*0001f700*/ ADD         R3, R3, #12288              @ 0x3000 
    /*0001f704*/ LDR         IP, [R3, #3176]             @ 0xc68 
    /*0001f708*/ STR         IP, [R1] 
    /*0001f70c*/ LDR         R3, [R3, #3180]             @ 0xc6c 
    /*0001f710*/ STR         R3, [R2] 
    /*0001f714*/ BX          LR 
FUNC_END VPSS_DRV_GetGroupCropCfgSize


FUNC_BEGIN VPSS_DRV_ChnCalcCrop
    /*0001f718*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001f71c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001f720*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001f724*/ MOV         R3, #24 
    /*0001f728*/ LDR         R5, [R2, R0, LSL #2] 
    /*0001f72c*/ MOV         R2, #72                     @ 0x48 
    /*0001f730*/ MOVW        R0, #37816                  @ 0x93b8 
    /*0001f734*/ SUB         SP, SP, #28 
    /*0001f738*/ MLA         R3, R3, R1, R5 
    /*0001f73c*/ MLA         R2, R2, R1, R5 
    /*0001f740*/ LDR         IP, [R3, R0] 
    /*0001f744*/ CMP         IP, #0 
    /*0001f748*/ LDR         R6, [R2, #48]               @ 0x30 
    /*0001f74c*/ LDR         R7, [R2, #52]               @ 0x34 
    /*0001f750*/ BEQ         VPSS_DRV_ChnCalcCrop_x1f86c
    /*0001f754*/ MOVW        R2, #37820                  @ 0x93bc 
    /*0001f758*/ MOV         R4, R1 
    /*0001f75c*/ LDR         R2, [R3, R2] 
    /*0001f760*/ CMP         R2, #0 
    /*0001f764*/ BEQ         VPSS_DRV_ChnCalcCrop_x1f810
    /*0001f768*/ MOVW        R2, #37824                  @ 0x93c0 
    /*0001f76c*/ LDR         R1, [R3, R2] 
    /*0001f770*/ MOVW        R2, #37828                  @ 0x93c4 
    /*0001f774*/ CMP         R6, R1 
    /*0001f778*/ MOV         LR, R1 
    /*0001f77c*/ LDRCC       R0, [R3, R2] 
    /*0001f780*/ BCC         VPSS_DRV_ChnCalcCrop_x1f8e4
    /*0001f784*/ LDR         IP, [R3, R2] 
    /*0001f788*/ CMP         R7, IP 
    /*0001f78c*/ MOV         R0, IP 
    /*0001f790*/ BCC         VPSS_DRV_ChnCalcCrop_x1f8e4
    /*0001f794*/ MOVW        R1, #37832                  @ 0x93c8 
    /*0001f798*/ MOVW        R2, #37836                  @ 0x93cc 
    /*0001f79c*/ LDR         R8, [R3, R1] 
    /*0001f7a0*/ LDR         R0, [R3, R2] 
    VPSS_DRV_ChnCalcCrop_x1f7a4:
    /*0001f7a4*/ BIC         LR, LR, #1 
    /*0001f7a8*/ BIC         IP, IP, #1 
    /*0001f7ac*/ SUB         R3, R6, LR 
    /*0001f7b0*/ MOV         R1, #24 
    /*0001f7b4*/ CMP         R3, R8 
    /*0001f7b8*/ SUB         R2, R7, IP 
    /*0001f7bc*/ MLA         R4, R1, R4, R5 
    /*0001f7c0*/ MOVCS       R3, R8 
    /*0001f7c4*/ CMP         R2, R0 
    /*0001f7c8*/ BIC         R3, R3, #1 
    /*0001f7cc*/ MOVW        R8, #15504                  @ 0x3c90 
    /*0001f7d0*/ MOVW        R5, #15508                  @ 0x3c94 
    /*0001f7d4*/ MOVCS       R2, R0 
    /*0001f7d8*/ BIC         R2, R2, #1 
    /*0001f7dc*/ CMP         R3, #63                     @ 0x3f 
    /*0001f7e0*/ CMPHI       R2, #63                     @ 0x3f 
    /*0001f7e4*/ MOVW        SL, #15512                  @ 0x3c98 
    /*0001f7e8*/ MOVW        R9, #15516                  @ 0x3c9c 
    /*0001f7ec*/ STR         LR, [R4, R8] 
    /*0001f7f0*/ MOVLS       R0, #1 
    /*0001f7f4*/ STR         IP, [R4, R5] 
    /*0001f7f8*/ MOVHI       R0, #0 
    /*0001f7fc*/ STR         R3, [R4, SL] 
    /*0001f800*/ STR         R2, [R4, R9] 
    /*0001f804*/ BLS         VPSS_DRV_ChnCalcCrop_x1f898
    VPSS_DRV_ChnCalcCrop_x1f808:
    /*0001f808*/ ADD         SP, SP, #28 
    /*0001f80c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_ChnCalcCrop_x1f810:
    /*0001f810*/ MOVW        LR, #37832                  @ 0x93c8 
    /*0001f814*/ MOVW        R1, #37824                  @ 0x93c0 
    /*0001f818*/ MOVW        R2, #37828                  @ 0x93c4 
    /*0001f81c*/ MOVW        R0, #37836                  @ 0x93cc 
    /*0001f820*/ LDR         R8, [R3, LR] 
    /*0001f824*/ MOVW        IP, #19923                  @ 0x4dd3 
    /*0001f828*/ LDR         R0, [R3, R0] 
    /*0001f82c*/ MOVT        IP, #4194                   @ 0x1062 
    /*0001f830*/ LDR         R1, [R3, R1] 
    /*0001f834*/ LDR         R2, [R3, R2] 
    /*0001f838*/ MUL         SL, R0, R7 
    /*0001f83c*/ MUL         R3, R1, R6 
    /*0001f840*/ MUL         R2, R2, R7 
    /*0001f844*/ MUL         R8, R8, R6 
    /*0001f848*/ UMULL       R0, R1, R3, IP 
    /*0001f84c*/ UMULL       SL, FP, SL, IP 
    /*0001f850*/ UMULL       R8, R9, R8, IP 
    /*0001f854*/ LSR         LR, R1, #6 
    /*0001f858*/ UMULL       R2, R3, R2, IP 
    /*0001f85c*/ LSR         R0, FP, #6 
    /*0001f860*/ LSR         R8, R9, #6 
    /*0001f864*/ LSR         IP, R3, #6 
    /*0001f868*/ B           VPSS_DRV_ChnCalcCrop_x1f7a4
    VPSS_DRV_ChnCalcCrop_x1f86c:
    /*0001f86c*/ MOVW        R0, #15504                  @ 0x3c90 
    /*0001f870*/ MOVW        LR, #15508                  @ 0x3c94 
    /*0001f874*/ MOVW        R1, #15512                  @ 0x3c98 
    /*0001f878*/ MOVW        R2, #15516                  @ 0x3c9c 
    /*0001f87c*/ STR         IP, [R3, R0] 
    /*0001f880*/ MOV         R0, IP 
    /*0001f884*/ STR         IP, [R3, LR] 
    /*0001f888*/ STR         R6, [R3, R1] 
    /*0001f88c*/ STR         R7, [R3, R2] 
    /*0001f890*/ ADD         SP, SP, #28 
    /*0001f894*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_ChnCalcCrop_x1f898:
    /*0001f898*/ STR         R2, [SP, #8] 
    /*0001f89c*/ MOVW        R1, #6154                   @ 0x180a 
    /*0001f8a0*/ STR         R3, [SP, #4] 
    /*0001f8a4*/ MOVW        R2, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d40] 
    /*0001f8a8*/ STR         R1, [SP] 
    /*0001f8ac*/ MOVT        R2, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d40] 
    /*0001f8b0*/ LDR         R3, [PC, #152]              @ 0x000000000001f950 
    /*0001f8b4*/ MOV         R1, #7 
    /*0001f8b8*/ MOV         R0, #3 
    /*0001f8bc*/ BIC         R6, R6, #1 
    /*0001f8c0*/ BL          0x000000000001F8C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f8c4*/ BIC         R7, R7, #1 
    /*0001f8c8*/ STR         R6, [R4, SL] 
    /*0001f8cc*/ MOV         R3, #0 
    /*0001f8d0*/ STR         R7, [R4, R9] 
    /*0001f8d4*/ MVN         R0, #0 
    /*0001f8d8*/ STR         R3, [R4, R8] 
    /*0001f8dc*/ STR         R3, [R4, R5] 
    /*0001f8e0*/ B           VPSS_DRV_ChnCalcCrop_x1f808
    VPSS_DRV_ChnCalcCrop_x1f8e4:
    /*0001f8e4*/ STR         R7, [SP, #16] 
    /*0001f8e8*/ MOVW        R3, #6115                   @ 0x17e3 
    /*0001f8ec*/ STR         R6, [SP, #12] 
    /*0001f8f0*/ MOVW        R2, #0                      @ .LC284 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8cf0] 
    /*0001f8f4*/ STR         R0, [SP, #8] 
    /*0001f8f8*/ MOVT        R2, #0                      @ .LC284 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8cf0] 
    /*0001f8fc*/ STR         R1, [SP, #4] 
    /*0001f900*/ MOV         R0, #3 
    /*0001f904*/ MOV         R1, #7 
    /*0001f908*/ STR         R3, [SP] 
    /*0001f90c*/ LDR         R3, [PC, #60]               @ 0x000000000001f950 
    /*0001f910*/ BIC         R6, R6, #1 
    /*0001f914*/ BL          0x000000000001F914          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f918*/ MOV         R3, #24 
    /*0001f91c*/ MLA         R4, R3, R4, R5 
    /*0001f920*/ MOVW        LR, #15512                  @ 0x3c98 
    /*0001f924*/ MOVW        IP, #15504                  @ 0x3c90 
    /*0001f928*/ MOVW        R1, #15508                  @ 0x3c94 
    /*0001f92c*/ MOVW        R2, #15516                  @ 0x3c9c 
    /*0001f930*/ MOV         R3, #0 
    /*0001f934*/ BIC         R7, R7, #1 
    /*0001f938*/ MVN         R0, #0 
    /*0001f93c*/ STR         R6, [R4, LR] 
    /*0001f940*/ STR         R3, [R4, IP] 
    /*0001f944*/ STR         R3, [R4, R1] 
    /*0001f948*/ STR         R7, [R4, R2] 
    /*0001f94c*/ B           VPSS_DRV_ChnCalcCrop_x1f808
    /*0001f950*/ ANDEQ       R1, R0, R8, LSR #6 
FUNC_END VPSS_DRV_ChnCalcCrop


FUNC_BEGIN VPSS_DRV_GetChnOutPutSize
    /*0001f954*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001f958*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001f95c*/ PUSH        {R4, R5, R6, LR} 
    /*0001f960*/ MOV         R5, R2 
    /*0001f964*/ LDR         R6, [R3, R0, LSL #2] 
    /*0001f968*/ MOV         R4, R1 
    /*0001f96c*/ BL          0x000000000001F96C          @ VPSS_DRV_ChnCalcCrop [R_ARM_CALL: .text+0x1f718] 
    /*0001f970*/ MOV         R1, #24 
    /*0001f974*/ MOVW        R2, #15512                  @ 0x3c98 
    /*0001f978*/ MOVW        R3, #15516                  @ 0x3c9c 
    /*0001f97c*/ MLA         R1, R1, R4, R6 
    /*0001f980*/ MOV         R0, #0 
    /*0001f984*/ LDR         R2, [R1, R2] 
    /*0001f988*/ STR         R2, [R5] 
    /*0001f98c*/ LDR         R3, [R1, R3] 
    /*0001f990*/ STR         R3, [R5, #4] 
    /*0001f994*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_GetChnOutPutSize


FUNC_BEGIN VPSS_DRV_GrpCalCrop
    /*0001f998*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001f99c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001f9a0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001f9a4*/ SUB         SP, SP, #28 
    /*0001f9a8*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001f9ac*/ LDR         R9, [R1] 
    /*0001f9b0*/ ADD         R4, R3, #12288              @ 0x3000 
    /*0001f9b4*/ LDR         SL, [R1, #4] 
    /*0001f9b8*/ LDR         R2, [R3, #28] 
    /*0001f9bc*/ LDR         R3, [R4, #3144]             @ 0xc48 
    /*0001f9c0*/ CMP         R2, #1 
    /*0001f9c4*/ MOVNE       R7, #2 
    /*0001f9c8*/ MOVEQ       R7, #4 
    /*0001f9cc*/ CMP         R3, #0 
    /*0001f9d0*/ BEQ         VPSS_DRV_GrpCalCrop_x1fb54
    /*0001f9d4*/ LDRSH       R3, [R1, #220]              @ 0xdc 
    /*0001f9d8*/ MOV         R5, R1 
    /*0001f9dc*/ STR         R0, [SP, #20] 
    /*0001f9e0*/ CMP         R3, #0 
    /*0001f9e4*/ BEQ         VPSS_DRV_GrpCalCrop_x1fadc
    VPSS_DRV_GrpCalCrop_x1f9e8:
    /*0001f9e8*/ LDR         R2, [R4, #3148]             @ 0xc4c 
    /*0001f9ec*/ CMP         R2, #0 
    /*0001f9f0*/ MOVNE       R1, #1 
    /*0001f9f4*/ BEQ         VPSS_DRV_GrpCalCrop_x1fc5c
    VPSS_DRV_GrpCalCrop_x1f9f8:
    /*0001f9f8*/ LDR         R3, [R4, #3160]             @ 0xc58 
    /*0001f9fc*/ LDR         R2, [R4, #3164]             @ 0xc5c 
    /*0001fa00*/ CMP         R9, R3 
    /*0001fa04*/ STRCC       R9, [R4, #3160]             @ 0xc58 
    /*0001fa08*/ SUBCS       FP, R9, R3 
    /*0001fa0c*/ MOVCC       R3, R9 
    /*0001fa10*/ MOVCC       FP, #0 
    /*0001fa14*/ CMP         SL, R2 
    /*0001fa18*/ STRCC       SL, [R4, #3164]             @ 0xc5c 
    /*0001fa1c*/ SUBCS       LR, SL, R2 
    /*0001fa20*/ MOVCC       R2, SL 
    /*0001fa24*/ MOVCC       LR, #0 
    /*0001fa28*/ CMP         R1, #0 
    /*0001fa2c*/ LDRSHNE     R1, [R5, #220]              @ 0xdc 
    /*0001fa30*/ LDRSHNE     R6, [R5, #216]              @ 0xd8 
    /*0001fa34*/ LDRNE       IP, [R4, #3152]             @ 0xc50 
    /*0001fa38*/ LDRNE       R0, [R4, #3156]             @ 0xc54 
    /*0001fa3c*/ ADDNE       R1, R1, IP 
    /*0001fa40*/ LDREQ       R1, [R4, #3152]             @ 0xc50 
    /*0001fa44*/ ADDNE       R6, R6, R0 
    /*0001fa48*/ LDREQ       R6, [R4, #3156]             @ 0xc54 
    /*0001fa4c*/ BICNE       R1, R1, R1, ASR #31 
    /*0001fa50*/ BICNE       R6, R6, R6, ASR #31 
    VPSS_DRV_GrpCalCrop_x1fa54:
    /*0001fa54*/ CMP         R1, FP 
    /*0001fa58*/ RSB         R7, R7, #0 
    /*0001fa5c*/ MOVCC       FP, R1 
    /*0001fa60*/ CMP         R6, LR 
    /*0001fa64*/ BIC         FP, FP, #1 
    /*0001fa68*/ MOVCS       R6, LR 
    /*0001fa6c*/ BIC         R6, R6, #1 
    VPSS_DRV_GrpCalCrop_x1fa70:
    /*0001fa70*/ AND         R9, R3, R7 
    /*0001fa74*/ STR         FP, [R4, #3168]             @ 0xc60 
    /*0001fa78*/ AND         R7, R7, R2 
    /*0001fa7c*/ STR         R9, [R4, #3176]             @ 0xc68 
    /*0001fa80*/ STR         R7, [R4, #3180]             @ 0xc6c 
    /*0001fa84*/ STR         R6, [R4, #3172]             @ 0xc64 
    /*0001fa88*/ LDR         R1, [R5, #12] 
    /*0001fa8c*/ CMP         R1, #25 
    /*0001fa90*/ BEQ         VPSS_DRV_GrpCalCrop_x1fb90
    /*0001fa94*/ CMP         R1, #26 
    /*0001fa98*/ BEQ         VPSS_DRV_GrpCalCrop_x1fc24
    /*0001fa9c*/ CMP         R1, #39                     @ 0x27 
    /*0001faa0*/ BEQ         VPSS_DRV_GrpCalCrop_x1fc44
    /*0001faa4*/ LDR         R2, [SP, #20] 
    /*0001faa8*/ MOVW        R3, #6335                   @ 0x18bf 
    /*0001faac*/ STR         R1, [SP, #8] 
    /*0001fab0*/ MOV         R0, #3 
    /*0001fab4*/ STR         R3, [SP] 
    /*0001fab8*/ MOV         R1, #7 
    /*0001fabc*/ STR         R2, [SP, #4] 
    /*0001fac0*/ MOVW        R2, #0                      @ .LC288 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8e38] 
    /*0001fac4*/ LDR         R3, [PC, #512]              @ 0x000000000001fccc 
    /*0001fac8*/ MOVT        R2, #0                      @ .LC288 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8e38] 
    /*0001facc*/ BL          0x000000000001FACC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fad0*/ MVN         R0, #0 
    /*0001fad4*/ ADD         SP, SP, #28 
    /*0001fad8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_GrpCalCrop_x1fadc:
    /*0001fadc*/ LDRSH       R1, [R1, #216]              @ 0xd8 
    /*0001fae0*/ CMP         R1, #0 
    /*0001fae4*/ BNE         VPSS_DRV_GrpCalCrop_x1f9e8
    /*0001fae8*/ LDR         R3, [R4, #3148]             @ 0xc4c 
    /*0001faec*/ CMP         R3, #0 
    /*0001faf0*/ BNE         VPSS_DRV_GrpCalCrop_x1f9f8
    VPSS_DRV_GrpCalCrop_x1faf4:
    /*0001faf4*/ LDR         R2, [R4, #3160]             @ 0xc58 
    /*0001faf8*/ MOVW        IP, #19923                  @ 0x4dd3 
    /*0001fafc*/ LDR         R0, [R4, #3164]             @ 0xc5c 
    /*0001fb00*/ MOVT        IP, #4194                   @ 0x1062 
    /*0001fb04*/ MUL         R2, R2, R9 
    /*0001fb08*/ MUL         R0, R0, SL 
    /*0001fb0c*/ UMULL       R2, R3, R2, IP 
    /*0001fb10*/ UMULL       R0, R1, R0, IP 
    /*0001fb14*/ LSR         R3, R3, #6 
    /*0001fb18*/ LSR         R2, R1, #6 
    /*0001fb1c*/ CMP         R2, #63                     @ 0x3f 
    /*0001fb20*/ CMPHI       R3, #63                     @ 0x3f 
    /*0001fb24*/ BLS         VPSS_DRV_GrpCalCrop_x1fc8c
    /*0001fb28*/ LDR         R0, [R4, #3152]             @ 0xc50 
    /*0001fb2c*/ SUB         FP, R9, R3 
    /*0001fb30*/ LDR         R1, [R4, #3156]             @ 0xc54 
    /*0001fb34*/ SUB         LR, SL, R2 
    /*0001fb38*/ MUL         R9, R0, R9 
    /*0001fb3c*/ MUL         SL, R1, SL 
    /*0001fb40*/ UMULL       R0, R1, R9, IP 
    /*0001fb44*/ UMULL       R8, R9, SL, IP 
    /*0001fb48*/ LSR         R1, R1, #6 
    /*0001fb4c*/ LSR         R6, R9, #6 
    /*0001fb50*/ B           VPSS_DRV_GrpCalCrop_x1fa54
    VPSS_DRV_GrpCalCrop_x1fb54:
    /*0001fb54*/ MOV         R0, R3 
    /*0001fb58*/ STR         R3, [R4, #3168]             @ 0xc60 
    /*0001fb5c*/ STR         R3, [R4, #3172]             @ 0xc64 
    /*0001fb60*/ STR         R3, [R4, #3184]             @ 0xc70 
    /*0001fb64*/ STR         R3, [R4, #3188]             @ 0xc74 
    /*0001fb68*/ STR         R9, [R4, #3176]             @ 0xc68 
    /*0001fb6c*/ STR         SL, [R4, #3180]             @ 0xc6c 
    /*0001fb70*/ STR         R3, [R4, #3192]             @ 0xc78 
    /*0001fb74*/ STR         R3, [R4, #3196]             @ 0xc7c 
    /*0001fb78*/ STR         R3, [R4, #3208]             @ 0xc88 
    /*0001fb7c*/ STR         R3, [R4, #3212]             @ 0xc8c 
    /*0001fb80*/ STR         R9, [R4, #3200]             @ 0xc80 
    /*0001fb84*/ STR         SL, [R4, #3204]             @ 0xc84 
    /*0001fb88*/ ADD         SP, SP, #28 
    /*0001fb8c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_GrpCalCrop_x1fb90:
    /*0001fb90*/ LDR         R3, [R5, #44]               @ 0x2c 
    /*0001fb94*/ MLA         R3, R3, R6, FP 
    /*0001fb98*/ STR         R3, [R4, #3184]             @ 0xc70 
    /*0001fb9c*/ LDR         R3, [R5, #48]               @ 0x30 
    /*0001fba0*/ MLA         R3, R3, R6, FP 
    /*0001fba4*/ STR         R3, [R4, #3188]             @ 0xc74 
    VPSS_DRV_GrpCalCrop_x1fba8:
    /*0001fba8*/ LDR         R3, [R5, #16] 
    /*0001fbac*/ MOV         R0, FP 
    /*0001fbb0*/ CMP         R3, #1 
    /*0001fbb4*/ MOVNE       R8, #256                    @ 0x100 
    /*0001fbb8*/ MOVEQ       R8, #64                     @ 0x40 
    /*0001fbbc*/ MOV         R1, R8 
    /*0001fbc0*/ BL          0x000000000001FBC0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001fbc4*/ STR         R6, [R4, #3212]             @ 0xc8c 
    /*0001fbc8*/ SUB         R3, FP, #1 
    /*0001fbcc*/ MOV         R1, R8 
    /*0001fbd0*/ ADD         R3, R3, R9 
    /*0001fbd4*/ MUL         R6, R8, R0 
    /*0001fbd8*/ ADD         R0, R3, R8 
    /*0001fbdc*/ STR         R6, [R4, #3208]             @ 0xc88 
    /*0001fbe0*/ BL          0x000000000001FBE0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001fbe4*/ MOV         R1, R8 
    /*0001fbe8*/ STR         R7, [R4, #3204]             @ 0xc84 
    /*0001fbec*/ MUL         R8, R8, R0 
    /*0001fbf0*/ MOV         R0, FP 
    /*0001fbf4*/ SUB         R3, R8, R6 
    /*0001fbf8*/ STR         R3, [R4, #3200]             @ 0xc80 
    /*0001fbfc*/ BL          0x000000000001FBFC          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*0001fc00*/ MOV         R0, #0 
    /*0001fc04*/ STR         R0, [R4, #3196]             @ 0xc7c 
    /*0001fc08*/ STR         R1, [R4, #3192]             @ 0xc78 
    /*0001fc0c*/ LDR         R3, [R5] 
    /*0001fc10*/ CMP         R8, R3 
    /*0001fc14*/ SUBHI       R6, R3, R6 
    /*0001fc18*/ STRHI       R6, [R4, #3200]             @ 0xc80 
    /*0001fc1c*/ ADD         SP, SP, #28 
    /*0001fc20*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_GrpCalCrop_x1fc24:
    /*0001fc24*/ LDR         R3, [R5, #44]               @ 0x2c 
    /*0001fc28*/ MLA         R3, R3, R6, FP 
    /*0001fc2c*/ STR         R3, [R4, #3184]             @ 0xc70 
    /*0001fc30*/ LDR         R3, [R5, #48]               @ 0x30 
    /*0001fc34*/ MUL         R3, R3, R6 
    /*0001fc38*/ ADD         R3, FP, R3, LSR #1 
    /*0001fc3c*/ STR         R3, [R4, #3188]             @ 0xc74 
    /*0001fc40*/ B           VPSS_DRV_GrpCalCrop_x1fba8
    VPSS_DRV_GrpCalCrop_x1fc44:
    /*0001fc44*/ LDR         R3, [R5, #44]               @ 0x2c 
    /*0001fc48*/ MOV         R2, #0 
    /*0001fc4c*/ STR         R2, [R4, #3188]             @ 0xc74 
    /*0001fc50*/ MLA         R3, R3, R6, FP 
    /*0001fc54*/ STR         R3, [R4, #3184]             @ 0xc70 
    /*0001fc58*/ B           VPSS_DRV_GrpCalCrop_x1fba8
    VPSS_DRV_GrpCalCrop_x1fc5c:
    /*0001fc5c*/ LDRSH       R1, [R5, #216]              @ 0xd8 
    /*0001fc60*/ MOVW        R0, #6247                   @ 0x1867 
    /*0001fc64*/ STR         R3, [SP, #4] 
    /*0001fc68*/ MOVW        R2, #0                      @ .LC286 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d80] 
    /*0001fc6c*/ STR         R0, [SP] 
    /*0001fc70*/ MOVT        R2, #0                      @ .LC286 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d80] 
    /*0001fc74*/ STR         R1, [SP, #8] 
    /*0001fc78*/ MOV         R0, #4 
    /*0001fc7c*/ MOV         R1, #7 
    /*0001fc80*/ LDR         R3, [PC, #68]               @ 0x000000000001fccc 
    /*0001fc84*/ BL          0x000000000001FC84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fc88*/ B           VPSS_DRV_GrpCalCrop_x1faf4
    VPSS_DRV_GrpCalCrop_x1fc8c:
    /*0001fc8c*/ STR         R2, [SP, #8] 
    /*0001fc90*/ MOVW        R1, #6257                   @ 0x1871 
    /*0001fc94*/ STR         R3, [SP, #4] 
    /*0001fc98*/ RSB         R7, R7, #0 
    /*0001fc9c*/ STR         R1, [SP] 
    /*0001fca0*/ MOVW        R2, #0                      @ .LC287 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8df8] 
    /*0001fca4*/ LDR         R3, [PC, #32]               @ 0x000000000001fccc 
    /*0001fca8*/ MOVT        R2, #0                      @ .LC287 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8df8] 
    /*0001fcac*/ MOV         R1, #7 
    /*0001fcb0*/ MOV         R0, #3 
    /*0001fcb4*/ MOV         R6, #0 
    /*0001fcb8*/ BL          0x000000000001FCB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fcbc*/ MOV         FP, R6 
    /*0001fcc0*/ AND         R3, R9, R7 
    /*0001fcc4*/ AND         R2, SL, R7 
    /*0001fcc8*/ B           VPSS_DRV_GrpCalCrop_x1fa70
    /*0001fccc*/ ANDEQ       R1, R0, R0, ASR #6 
FUNC_END VPSS_DRV_GrpCalCrop


FUNC_BEGIN VPSS_DRV_CheckVpssCapa
    /*0001fcd0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001fcd4*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0001fcd8*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0001fcdc*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0001fce0*/ LDR         R5, [SP, #80]               @ 0x50 
    /*0001fce4*/ MOV         R6, R3 
    /*0001fce8*/ MOV         R7, R0 
    /*0001fcec*/ MOV         R9, R1 
    /*0001fcf0*/ STR         R2, [SP, #36]               @ 0x24 
    /*0001fcf4*/ LDR         SL, [R5] 
    /*0001fcf8*/ LDR         R8, [R4, R0, LSL #2] 
    /*0001fcfc*/ LDR         FP, [R5, #4] 
    /*0001fd00*/ BL          0x000000000001FD00          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*0001fd04*/ SUB         R3, SL, #64                 @ 0x40 
    /*0001fd08*/ CMP         R3, #8128                   @ 0x1fc0 
    /*0001fd0c*/ STR         R0, [SP, #32] 
    /*0001fd10*/ BHI         VPSS_DRV_CheckVpssCapa_x20134
    /*0001fd14*/ SUB         R3, FP, #64                 @ 0x40 
    /*0001fd18*/ CMP         R3, #8128                   @ 0x1fc0 
    /*0001fd1c*/ BHI         VPSS_DRV_CheckVpssCapa_x20174
    /*0001fd20*/ LDRD        R2, [R5, #120]              @ 0x78 
    /*0001fd24*/ ORRS        R3, R2, R3 
    /*0001fd28*/ BEQ         VPSS_DRV_CheckVpssCapa_x20048
    /*0001fd2c*/ LDRD        R2, [R5, #128]              @ 0x80 
    /*0001fd30*/ ORRS        R3, R2, R3 
    /*0001fd34*/ BEQ         VPSS_DRV_CheckVpssCapa_x20048
    /*0001fd38*/ MOV         R1, R6 
    /*0001fd3c*/ MOV         R0, R7 
    /*0001fd40*/ BL          0x000000000001FD40          @ VPSS_DRV_GrpCalCrop [R_ARM_CALL: .text+0x1f998] 
    /*0001fd44*/ LDR         R1, [R6] 
    /*0001fd48*/ LDR         R3, [R4, #64]               @ 0x40 
    /*0001fd4c*/ CMP         R1, R3 
    /*0001fd50*/ LDRHI       R0, [R6, #4] 
    /*0001fd54*/ LDRHI       R2, [R4, #68]               @ 0x44 
    /*0001fd58*/ BHI         VPSS_DRV_CheckVpssCapa_x200f8
    /*0001fd5c*/ LDR         R2, [R4, #68]               @ 0x44 
    /*0001fd60*/ LDR         R0, [R6, #4] 
    /*0001fd64*/ CMP         R0, R2 
    /*0001fd68*/ BHI         VPSS_DRV_CheckVpssCapa_x200f8
    /*0001fd6c*/ ADD         R4, R8, #12288              @ 0x3000 
    /*0001fd70*/ LDR         R3, [R4, #3176]             @ 0xc68 
    /*0001fd74*/ CMP         R3, #2048                   @ 0x800 
    /*0001fd78*/ BLS         VPSS_DRV_CheckVpssCapa_x1fe4c
    /*0001fd7c*/ CMP         R9, #0 
    /*0001fd80*/ BNE         VPSS_DRV_CheckVpssCapa_x1fef8
    /*0001fd84*/ ADD         R2, R8, #36864              @ 0x9000 
    /*0001fd88*/ LDR         R2, [R2, #952]              @ 0x3b8 
    /*0001fd8c*/ CMP         R2, #1 
    /*0001fd90*/ BEQ         VPSS_DRV_CheckVpssCapa_x201ec
    /*0001fd94*/ LDR         R2, [SP, #32] 
    /*0001fd98*/ CMP         R2, #2 
    /*0001fd9c*/ BEQ         VPSS_DRV_CheckVpssCapa_x1fff8
    VPSS_DRV_CheckVpssCapa_x1fda0:
    /*0001fda0*/ LDR         R2, [R8, #68]               @ 0x44 
    /*0001fda4*/ CMP         R2, #1 
    /*0001fda8*/ BEQ         VPSS_DRV_CheckVpssCapa_x1ffb0
    VPSS_DRV_CheckVpssCapa_x1fdac:
    /*0001fdac*/ LDR         R2, [R4, #3488]             @ 0xda0 
    /*0001fdb0*/ CMP         R2, #1 
    /*0001fdb4*/ BEQ         VPSS_DRV_CheckVpssCapa_x201b8
    /*0001fdb8*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001fdbc*/ MOVW        R2, #1080                   @ 0x438 
    /*0001fdc0*/ MOVW        R1, #26560                  @ 0x67c0 
    /*0001fdc4*/ MLA         R2, R2, R0, R8 
    /*0001fdc8*/ MOVW        R0, #26564                  @ 0x67c4 
    /*0001fdcc*/ LDR         R1, [R2, R1] 
    /*0001fdd0*/ LDR         R2, [R2, R0] 
    /*0001fdd4*/ LDR         R0, [SP, #32] 
    /*0001fdd8*/ BICS        R0, R0, #2 
    /*0001fddc*/ BEQ         VPSS_DRV_CheckVpssCapa_x1fe88
    VPSS_DRV_CheckVpssCapa_x1fde0:
    /*0001fde0*/ LDR         R2, [SP, #32] 
    /*0001fde4*/ CMP         R2, #1 
    /*0001fde8*/ BNE         VPSS_DRV_CheckVpssCapa_x1ff5c
    /*0001fdec*/ LDR         R2, [R8, #48]               @ 0x30 
    /*0001fdf0*/ LDR         R0, [R8, #52]               @ 0x34 
    /*0001fdf4*/ CMP         R3, R2 
    /*0001fdf8*/ LDR         R1, [R4, #3180]             @ 0xc6c 
    /*0001fdfc*/ BNE         VPSS_DRV_CheckVpssCapa_x1fe08
    /*0001fe00*/ CMP         R0, R1 
    /*0001fe04*/ BEQ         VPSS_DRV_CheckVpssCapa_x1ff5c
    VPSS_DRV_CheckVpssCapa_x1fe08:
    /*0001fe08*/ STR         R0, [SP, #24] 
    /*0001fe0c*/ MOVW        IP, #3646                   @ 0xe3e 
    /*0001fe10*/ MOV         R0, #0 
    /*0001fe14*/ STR         R2, [SP, #20] 
    /*0001fe18*/ STR         R1, [SP, #16] 
    /*0001fe1c*/ MOVW        R2, #0                      @ .LC300 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9288] 
    /*0001fe20*/ STR         R3, [SP, #12] 
    /*0001fe24*/ MOVT        R2, #0                      @ .LC300 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9288] 
    /*0001fe28*/ STR         R0, [SP, #8] 
    /*0001fe2c*/ MOV         R1, #7 
    /*0001fe30*/ STR         R7, [SP, #4] 
    /*0001fe34*/ MOV         R0, #3 
    /*0001fe38*/ STR         IP, [SP] 
    /*0001fe3c*/ LDR         R3, [PC, #984]              @ 0x000000000002021c 
    /*0001fe40*/ BL          0x000000000001FE40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fe44*/ MVN         R0, #0 
    /*0001fe48*/ B           VPSS_DRV_CheckVpssCapa_x1ffa8
    VPSS_DRV_CheckVpssCapa_x1fe4c:
    /*0001fe4c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001fe50*/ MOVW        R1, #1080                   @ 0x438 
    /*0001fe54*/ MOV         R2, #360                    @ 0x168 
    /*0001fe58*/ CMP         R9, #0 
    /*0001fe5c*/ MUL         R1, R1, R0 
    /*0001fe60*/ MOVW        R0, #26564                  @ 0x67c4 
    /*0001fe64*/ MLA         R2, R2, R9, R1 
    /*0001fe68*/ MOVW        R1, #26560                  @ 0x67c0 
    /*0001fe6c*/ ADD         R2, R8, R2 
    /*0001fe70*/ LDR         R1, [R2, R1] 
    /*0001fe74*/ LDR         R2, [R2, R0] 
    /*0001fe78*/ BNE         VPSS_DRV_CheckVpssCapa_x1ff2c
    /*0001fe7c*/ LDR         R0, [SP, #32] 
    /*0001fe80*/ BICS        R0, R0, #2 
    /*0001fe84*/ BNE         VPSS_DRV_CheckVpssCapa_x1fde0
    VPSS_DRV_CheckVpssCapa_x1fe88:
    /*0001fe88*/ CMP         R3, R1 
    /*0001fe8c*/ LDR         R0, [R4, #3180]             @ 0xc6c 
    /*0001fe90*/ BHI         VPSS_DRV_CheckVpssCapa_x1feac
    /*0001fe94*/ CMP         R1, R3, LSL #4 
    /*0001fe98*/ BHI         VPSS_DRV_CheckVpssCapa_x1feac
    /*0001fe9c*/ CMP         R0, R2 
    /*0001fea0*/ BHI         VPSS_DRV_CheckVpssCapa_x1feac
    /*0001fea4*/ CMP         R2, R0, LSL #4 
    /*0001fea8*/ BLS         VPSS_DRV_CheckVpssCapa_x1fde0
    VPSS_DRV_CheckVpssCapa_x1feac:
    /*0001feac*/ STR         R2, [SP, #24] 
    /*0001feb0*/ MOV         LR, #0 
    /*0001feb4*/ STR         R1, [SP, #20] 
    /*0001feb8*/ MOVW        IP, #3631                   @ 0xe2f 
    /*0001febc*/ STR         R0, [SP, #16] 
    /*0001fec0*/ MOV         R4, #16 
    /*0001fec4*/ STR         R3, [SP, #12] 
    /*0001fec8*/ MOVW        R2, #0                      @ .LC299 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9218] 
    /*0001fecc*/ STR         R7, [SP, #4] 
    /*0001fed0*/ MOVT        R2, #0                      @ .LC299 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9218] 
    /*0001fed4*/ STR         R4, [SP, #28] 
    /*0001fed8*/ MOV         R1, #7 
    /*0001fedc*/ STR         LR, [SP, #8] 
    /*0001fee0*/ MOV         R0, #3 
    /*0001fee4*/ STR         IP, [SP] 
    /*0001fee8*/ LDR         R3, [PC, #812]              @ 0x000000000002021c 
    /*0001feec*/ BL          0x000000000001FEEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fef0*/ MVN         R0, #0 
    /*0001fef4*/ B           VPSS_DRV_CheckVpssCapa_x1ffa8
    VPSS_DRV_CheckVpssCapa_x1fef8:
    /*0001fef8*/ LDR         R2, [R4, #3488]             @ 0xda0 
    /*0001fefc*/ CMP         R2, #1 
    /*0001ff00*/ BEQ         VPSS_DRV_CheckVpssCapa_x201b8
    /*0001ff04*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001ff08*/ MOVW        R1, #1080                   @ 0x438 
    /*0001ff0c*/ MOV         R2, #360                    @ 0x168 
    /*0001ff10*/ MOVW        IP, #26560                  @ 0x67c0 
    /*0001ff14*/ MUL         R1, R1, R0 
    /*0001ff18*/ MOVW        R0, #26564                  @ 0x67c4 
    /*0001ff1c*/ MLA         R2, R2, R9, R1 
    /*0001ff20*/ ADD         R2, R8, R2 
    /*0001ff24*/ LDR         R1, [R2, IP] 
    /*0001ff28*/ LDR         R2, [R2, R0] 
    VPSS_DRV_CheckVpssCapa_x1ff2c:
    /*0001ff2c*/ CMP         R3, R1 
    /*0001ff30*/ LDRCC       R0, [R4, #3180]             @ 0xc6c 
    /*0001ff34*/ BCC         VPSS_DRV_CheckVpssCapa_x200b0
    /*0001ff38*/ RSB         R0, R1, R1, LSL #4 
    /*0001ff3c*/ CMP         R3, R0 
    /*0001ff40*/ LDR         R0, [R4, #3180]             @ 0xc6c 
    /*0001ff44*/ BHI         VPSS_DRV_CheckVpssCapa_x200b0
    /*0001ff48*/ CMP         R0, R2 
    /*0001ff4c*/ BCC         VPSS_DRV_CheckVpssCapa_x200b0
    /*0001ff50*/ RSB         IP, R2, R2, LSL #4 
    /*0001ff54*/ CMP         R0, IP 
    /*0001ff58*/ BHI         VPSS_DRV_CheckVpssCapa_x200b0
    VPSS_DRV_CheckVpssCapa_x1ff5c:
    /*0001ff5c*/ LDR         R3, [R5, #12] 
    /*0001ff60*/ MOV         R1, R9 
    /*0001ff64*/ LDR         R2, [R6, #12] 
    /*0001ff68*/ MOV         R0, R7 
    /*0001ff6c*/ BL          0x000000000001FF6C          @ VPSS_DRV_CheckPixelFormat [R_ARM_CALL: .text+0x1c640] 
    /*0001ff70*/ CMP         R0, #0 
    /*0001ff74*/ BNE         VPSS_DRV_CheckVpssCapa_x1ffec
    /*0001ff78*/ LDR         R2, [R6, #12] 
    /*0001ff7c*/ MOV         R1, R6 
    /*0001ff80*/ MOV         R0, R7 
    /*0001ff84*/ BL          0x000000000001FF84          @ VPSS_DRV_Check3dnrArea [R_ARM_CALL: .text+0x1c734] 
    /*0001ff88*/ CMP         R0, #0 
    /*0001ff8c*/ BNE         VPSS_DRV_CheckVpssCapa_x1ffa8
    /*0001ff90*/ LDR         R3, [R8, #36]               @ 0x24 
    /*0001ff94*/ CMP         R3, #0 
    /*0001ff98*/ BEQ         VPSS_DRV_CheckVpssCapa_x1ffa8
    /*0001ff9c*/ LDR         R3, [R4, #3176]             @ 0xc68 
    /*0001ffa0*/ CMP         R3, #127                    @ 0x7f 
    /*0001ffa4*/ BLS         VPSS_DRV_CheckVpssCapa_x201a0
    VPSS_DRV_CheckVpssCapa_x1ffa8:
    /*0001ffa8*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0001ffac*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_CheckVpssCapa_x1ffb0:
    /*0001ffb0*/ LDR         R2, [R8, #80]               @ 0x50 
    /*0001ffb4*/ CMP         R2, #1 
    /*0001ffb8*/ BNE         VPSS_DRV_CheckVpssCapa_x20078
    /*0001ffbc*/ LDR         R2, [R8, #92]               @ 0x5c 
    /*0001ffc0*/ CMP         R2, #0 
    /*0001ffc4*/ BEQ         VPSS_DRV_CheckVpssCapa_x20078
    /*0001ffc8*/ MOVW        R2, #0                      @ .LC295 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9080] 
    /*0001ffcc*/ MOVT        R2, #0                      @ .LC295 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9080] 
    /*0001ffd0*/ MOVW        R3, #3580                   @ 0xdfc 
    /*0001ffd4*/ STR         R7, [SP, #4] 
    /*0001ffd8*/ STR         R3, [SP] 
    VPSS_DRV_CheckVpssCapa_x1ffdc:
    /*0001ffdc*/ LDR         R3, [PC, #568]              @ 0x000000000002021c 
    /*0001ffe0*/ MOV         R1, #7 
    /*0001ffe4*/ MOV         R0, #3 
    /*0001ffe8*/ BL          0x000000000001FFE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_DRV_CheckVpssCapa_x1ffec:
    /*0001ffec*/ MVN         R0, #0 
    VPSS_DRV_CheckVpssCapa_x1fff0:
    /*0001fff0*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0001fff4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_CheckVpssCapa_x1fff8:
    /*0001fff8*/ LDR         IP, [SP, #36]               @ 0x24 
    /*0001fffc*/ MOVW        R2, #1080                   @ 0x438 
    /*00020000*/ MOVW        R0, #26560                  @ 0x67c0 
    /*00020004*/ MLA         R2, R2, IP, R8 
    /*00020008*/ LDR         R2, [R2, R0] 
    /*0002000c*/ CMP         R3, R2 
    /*00020010*/ BEQ         VPSS_DRV_CheckVpssCapa_x1fda0
    /*00020014*/ STR         R2, [SP, #12] 
    /*00020018*/ MOVW        R1, #3560                   @ 0xde8 
    /*0002001c*/ STR         R3, [SP, #8] 
    /*00020020*/ MOVW        R2, #0                      @ .LC294 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9000] 
    /*00020024*/ STR         R1, [SP] 
    /*00020028*/ MOVT        R2, #0                      @ .LC294 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9000] 
    /*0002002c*/ STR         R7, [SP, #4] 
    /*00020030*/ MOV         R1, #7 
    /*00020034*/ LDR         R3, [PC, #480]              @ 0x000000000002021c 
    /*00020038*/ MOV         R0, #3 
    /*0002003c*/ BL          0x000000000002003C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020040*/ MVN         R0, #0 
    /*00020044*/ B           VPSS_DRV_CheckVpssCapa_x1ffa8
    VPSS_DRV_CheckVpssCapa_x20048:
    /*00020048*/ MOVW        R2, #0                      @ .LC291 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8f18] 
    /*0002004c*/ MOVT        R2, #0                      @ .LC291 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8f18] 
    /*00020050*/ MOVW        R3, #3528                   @ 0xdc8 
    /*00020054*/ STR         R9, [SP, #8] 
    /*00020058*/ STR         R7, [SP, #4] 
    /*0002005c*/ STR         R3, [SP] 
    VPSS_DRV_CheckVpssCapa_x20060:
    /*00020060*/ LDR         R3, [PC, #436]              @ 0x000000000002021c 
    /*00020064*/ MOV         R1, #7 
    /*00020068*/ MOV         R0, #3 
    /*0002006c*/ BL          0x000000000002006C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020070*/ MVN         R0, #0 
    /*00020074*/ B           VPSS_DRV_CheckVpssCapa_x1fff0
    VPSS_DRV_CheckVpssCapa_x20078:
    /*00020078*/ LDR         R2, [R5] 
    /*0002007c*/ CMP         R2, #512                    @ 0x200 
    /*00020080*/ BCC         VPSS_DRV_CheckVpssCapa_x20204
    /*00020084*/ SUB         R2, R1, #3360               @ 0xd20 
    /*00020088*/ SUB         R2, R2, #1 
    /*0002008c*/ CMP         R2, #480                    @ 0x1e0 
    /*00020090*/ BCS         VPSS_DRV_CheckVpssCapa_x1fdac
    /*00020094*/ MOVW        R3, #3594                   @ 0xe0a 
    /*00020098*/ MOVW        R2, #0                      @ .LC297 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9160] 
    /*0002009c*/ STR         R1, [SP, #8] 
    /*000200a0*/ MOVT        R2, #0                      @ .LC297 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9160] 
    /*000200a4*/ STR         R7, [SP, #4] 
    /*000200a8*/ STR         R3, [SP] 
    /*000200ac*/ B           VPSS_DRV_CheckVpssCapa_x20060
    VPSS_DRV_CheckVpssCapa_x200b0:
    /*000200b0*/ STR         R2, [SP, #24] 
    /*000200b4*/ MOV         LR, #15 
    /*000200b8*/ STR         R1, [SP, #20] 
    /*000200bc*/ MOVW        IP, #3660                   @ 0xe4c 
    /*000200c0*/ STR         R0, [SP, #16] 
    /*000200c4*/ MOVW        R2, #0                      @ .LC301 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9308] 
    /*000200c8*/ STR         R3, [SP, #12] 
    /*000200cc*/ MOVT        R2, #0                      @ .LC301 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9308] 
    /*000200d0*/ STR         R9, [SP, #8] 
    /*000200d4*/ MOV         R1, #7 
    /*000200d8*/ STR         R7, [SP, #4] 
    /*000200dc*/ MOV         R0, #3 
    /*000200e0*/ STR         LR, [SP, #28] 
    /*000200e4*/ STR         IP, [SP] 
    /*000200e8*/ LDR         R3, [PC, #300]              @ 0x000000000002021c 
    /*000200ec*/ BL          0x00000000000200EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000200f0*/ MVN         R0, #0 
    /*000200f4*/ B           VPSS_DRV_CheckVpssCapa_x1ffa8
    VPSS_DRV_CheckVpssCapa_x200f8:
    /*000200f8*/ STR         R2, [SP, #20] 
    /*000200fc*/ MOVW        IP, #3539                   @ 0xdd3 
    /*00020100*/ STR         R3, [SP, #16] 
    /*00020104*/ MOVW        R2, #0                      @ .LC292 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8f54] 
    /*00020108*/ STR         R0, [SP, #12] 
    /*0002010c*/ MOVT        R2, #0                      @ .LC292 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8f54] 
    /*00020110*/ STR         R1, [SP, #8] 
    /*00020114*/ MOV         R0, #3 
    /*00020118*/ MOV         R1, #7 
    /*0002011c*/ STR         R7, [SP, #4] 
    /*00020120*/ STR         IP, [SP] 
    /*00020124*/ LDR         R3, [PC, #240]              @ 0x000000000002021c 
    /*00020128*/ BL          0x0000000000020128          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002012c*/ MVN         R0, #0 
    /*00020130*/ B           VPSS_DRV_CheckVpssCapa_x1ffa8
    VPSS_DRV_CheckVpssCapa_x20134:
    /*00020134*/ MOV         R2, #8192                   @ 0x2000 
    /*00020138*/ STR         R2, [SP, #20] 
    /*0002013c*/ MOVW        R2, #0                      @ .LC289 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8e7c] 
    /*00020140*/ MOVT        R2, #0                      @ .LC289 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8e7c] 
    /*00020144*/ MOVW        R3, #3511                   @ 0xdb7 
    /*00020148*/ MOV         R1, #64                     @ 0x40 
    /*0002014c*/ STR         SL, [SP, #12] 
    /*00020150*/ STR         R9, [SP, #8] 
    /*00020154*/ STR         R7, [SP, #4] 
    /*00020158*/ STR         R1, [SP, #16] 
    VPSS_DRV_CheckVpssCapa_x2015c:
    /*0002015c*/ STR         R3, [SP] 
    /*00020160*/ MOV         R1, #7 
    /*00020164*/ LDR         R3, [PC, #176]              @ 0x000000000002021c 
    /*00020168*/ MOV         R0, #3 
    /*0002016c*/ BL          0x000000000002016C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020170*/ B           VPSS_DRV_CheckVpssCapa_x1ffec
    VPSS_DRV_CheckVpssCapa_x20174:
    /*00020174*/ MOV         R2, #8192                   @ 0x2000 
    /*00020178*/ MOV         R1, #64                     @ 0x40 
    /*0002017c*/ STR         R2, [SP, #20] 
    /*00020180*/ MOVW        R3, #3518                   @ 0xdbe 
    /*00020184*/ MOVW        R2, #0                      @ .LC290 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ec8] 
    /*00020188*/ STR         FP, [SP, #12] 
    /*0002018c*/ STR         R9, [SP, #8] 
    /*00020190*/ MOVT        R2, #0                      @ .LC290 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ec8] 
    /*00020194*/ STR         R7, [SP, #4] 
    /*00020198*/ STR         R1, [SP, #16] 
    /*0002019c*/ B           VPSS_DRV_CheckVpssCapa_x2015c
    VPSS_DRV_CheckVpssCapa_x201a0:
    /*000201a0*/ MOV         R3, #3680                   @ 0xe60 
    /*000201a4*/ MOVW        R2, #0                      @ .LC302 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x937c] 
    /*000201a8*/ STR         R7, [SP, #4] 
    /*000201ac*/ MOVT        R2, #0                      @ .LC302 [R_ARM_MOVT_ABS: .rodata.str1.4+0x937c] 
    /*000201b0*/ STR         R3, [SP] 
    /*000201b4*/ B           VPSS_DRV_CheckVpssCapa_x1ffdc
    VPSS_DRV_CheckVpssCapa_x201b8:
    /*000201b8*/ LDR         R3, [R4, #3484]             @ 0xd9c 
    /*000201bc*/ MOVW        R1, #3603                   @ 0xe13 
    /*000201c0*/ STR         R7, [SP, #4] 
    /*000201c4*/ MOVW        R2, #0                      @ .LC298 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x91c4] 
    /*000201c8*/ STR         R1, [SP] 
    /*000201cc*/ MOVT        R2, #0                      @ .LC298 [R_ARM_MOVT_ABS: .rodata.str1.4+0x91c4] 
    /*000201d0*/ STR         R3, [SP, #8] 
    /*000201d4*/ MOV         R1, #7 
    /*000201d8*/ LDR         R3, [PC, #60]               @ 0x000000000002021c 
    /*000201dc*/ MOV         R0, #3 
    /*000201e0*/ BL          0x00000000000201E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000201e4*/ MVN         R0, #0 
    /*000201e8*/ B           VPSS_DRV_CheckVpssCapa_x1ffa8
    VPSS_DRV_CheckVpssCapa_x201ec:
    /*000201ec*/ MOVW        R3, #3551                   @ 0xddf 
    /*000201f0*/ MOVW        R2, #0                      @ .LC293 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8fb0] 
    /*000201f4*/ STR         R7, [SP, #4] 
    /*000201f8*/ MOVT        R2, #0                      @ .LC293 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8fb0] 
    /*000201fc*/ STR         R3, [SP] 
    /*00020200*/ B           VPSS_DRV_CheckVpssCapa_x1ffdc
    VPSS_DRV_CheckVpssCapa_x20204:
    /*00020204*/ MOVW        R3, #3587                   @ 0xe03 
    /*00020208*/ MOVW        R2, #0                      @ .LC296 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x90ec] 
    /*0002020c*/ STR         R7, [SP, #4] 
    /*00020210*/ MOVT        R2, #0                      @ .LC296 [R_ARM_MOVT_ABS: .rodata.str1.4+0x90ec] 
    /*00020214*/ STR         R3, [SP] 
    /*00020218*/ B           VPSS_DRV_CheckVpssCapa_x1ffdc
    /*0002021c*/ ANDEQ       R1, R0, R4, ASR R3 
FUNC_END VPSS_DRV_CheckVpssCapa


FUNC_BEGIN VPSS_DRV_IsSupportExtChn
    /*00020220*/ MOV         R0, #1 
    /*00020224*/ BX          LR 
FUNC_END VPSS_DRV_IsSupportExtChn


FUNC_BEGIN VPSS_DRV_UpdateChnScaleEn
    /*00020228*/ MOVW        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0002022c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00020230*/ MOVT        IP, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00020234*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00020238*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002023c*/ MOV         R6, R1 
    /*00020240*/ MOV         R4, R2 
    /*00020244*/ LDR         R7, [IP, R0, LSL #2] 
    /*00020248*/ LDR         R5, [R3, R0, LSL #2] 
    /*0002024c*/ BL          0x000000000002024C          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*00020250*/ CMP         R0, #1 
    /*00020254*/ BEQ         VPSS_DRV_UpdateChnScaleEn_x2034c
    /*00020258*/ MOVW        R1, #8536                   @ 0x2158 
    /*0002025c*/ MOV         R2, #776                    @ 0x308 
    /*00020260*/ MUL         R1, R1, R6 
    /*00020264*/ MOV         R3, #376                    @ 0x178 
    /*00020268*/ MLA         R2, R2, R4, R1 
    /*0002026c*/ MOVW        R1, #19108                  @ 0x4aa4 
    /*00020270*/ MLA         R3, R3, R6, R5 
    /*00020274*/ ADD         R7, R7, R2 
    /*00020278*/ LDR         IP, [R7, #2660]             @ 0xa64 
    /*0002027c*/ LDR         R0, [R3, R1] 
    VPSS_DRV_UpdateChnScaleEn_x20280:
    /*00020280*/ MOV         R2, #72                     @ 0x48 
    /*00020284*/ MOV         R3, #24 
    /*00020288*/ MUL         R2, R2, R6 
    /*0002028c*/ MOVW        R1, #18748                  @ 0x493c 
    /*00020290*/ MLA         R3, R3, R4, R2 
    /*00020294*/ ADD         R3, R5, R3 
    /*00020298*/ LDR         R3, [R3, R1] 
    /*0002029c*/ CMP         R3, #1 
    /*000202a0*/ BEQ         VPSS_DRV_UpdateChnScaleEn_x202f8
    VPSS_DRV_UpdateChnScaleEn_x202a4:
    /*000202a4*/ ADD         R4, R4, #3952               @ 0xf70 
    /*000202a8*/ ADD         R3, R5, #16384              @ 0x4000 
    /*000202ac*/ ADD         R4, R4, #10 
    /*000202b0*/ MOV         R2, #0 
    /*000202b4*/ STR         R2, [R5, R4, LSL #2] 
    /*000202b8*/ LDR         R2, [R3, #688]              @ 0x2b0 
    /*000202bc*/ CMP         R2, #1 
    /*000202c0*/ POPNE       {R4, R5, R6, R7, R8, PC} 
    /*000202c4*/ ADD         R2, R5, #12288              @ 0x3000 
    /*000202c8*/ LDR         R1, [R2, #3176]             @ 0xc68 
    VPSS_DRV_UpdateChnScaleEn_x202cc:
    /*000202cc*/ LDR         IP, [R3, #2908]             @ 0xb5c 
    /*000202d0*/ CMP         IP, R1 
    /*000202d4*/ BEQ         VPSS_DRV_UpdateChnScaleEn_x20360
    VPSS_DRV_UpdateChnScaleEn_x202d8:
    /*000202d8*/ MOV         R3, #1 
    /*000202dc*/ STR         R3, [R2, #3560]             @ 0xde8 
    VPSS_DRV_UpdateChnScaleEn_x202e0:
    /*000202e0*/ LDR         R3, [R5, R4, LSL #2] 
    /*000202e4*/ CMP         R3, #1 
    /*000202e8*/ BNE         VPSS_DRV_UpdateChnScaleEn_x20348
    VPSS_DRV_UpdateChnScaleEn_x202ec:
    /*000202ec*/ MOV         R3, #1 
    /*000202f0*/ STR         R3, [R2, #3560]             @ 0xde8 
    /*000202f4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_UpdateChnScaleEn_x202f8:
    /*000202f8*/ MOVW        R1, #1080                   @ 0x438 
    /*000202fc*/ MOV         R3, #360                    @ 0x168 
    /*00020300*/ MUL         R6, R1, R6 
    /*00020304*/ ADD         R2, R5, #12288              @ 0x3000 
    /*00020308*/ MLA         R6, R3, R4, R6 
    /*0002030c*/ MOVW        R3, #26560                  @ 0x67c0 
    /*00020310*/ LDR         R1, [R2, #3176]             @ 0xc68 
    /*00020314*/ ADD         R6, R5, R6 
    /*00020318*/ LDR         R3, [R6, R3] 
    /*0002031c*/ CMP         R1, R3 
    /*00020320*/ BEQ         VPSS_DRV_UpdateChnScaleEn_x20380
    VPSS_DRV_UpdateChnScaleEn_x20324:
    /*00020324*/ ADD         R4, R4, #3952               @ 0xf70 
    /*00020328*/ ADD         R3, R5, #16384              @ 0x4000 
    /*0002032c*/ ADD         R4, R4, #10 
    /*00020330*/ MOV         IP, #1 
    /*00020334*/ STR         IP, [R5, R4, LSL #2] 
    /*00020338*/ LDR         IP, [R3, #688]              @ 0x2b0 
    /*0002033c*/ CMP         IP, #1 
    /*00020340*/ BEQ         VPSS_DRV_UpdateChnScaleEn_x202cc
    /*00020344*/ B           VPSS_DRV_UpdateChnScaleEn_x202ec
    VPSS_DRV_UpdateChnScaleEn_x20348:
    /*00020348*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_UpdateChnScaleEn_x2034c:
    /*0002034c*/ MOV         R3, #72                     @ 0x48 
    /*00020350*/ LDR         R0, [R5, #12] 
    /*00020354*/ MLA         R3, R3, R4, R5 
    /*00020358*/ LDR         IP, [R3, #60]               @ 0x3c 
    /*0002035c*/ B           VPSS_DRV_UpdateChnScaleEn_x20280
    VPSS_DRV_UpdateChnScaleEn_x20360:
    /*00020360*/ LDR         IP, [R2, #3180]             @ 0xc6c 
    /*00020364*/ LDR         R1, [R3, #2912]             @ 0xb60 
    /*00020368*/ CMP         IP, R1 
    /*0002036c*/ BNE         VPSS_DRV_UpdateChnScaleEn_x202d8
    /*00020370*/ LDR         R3, [R3, #3100]             @ 0xc1c 
    /*00020374*/ CMP         R0, R3 
    /*00020378*/ BNE         VPSS_DRV_UpdateChnScaleEn_x202d8
    /*0002037c*/ B           VPSS_DRV_UpdateChnScaleEn_x202e0
    VPSS_DRV_UpdateChnScaleEn_x20380:
    /*00020380*/ MOVW        R3, #26564                  @ 0x67c4 
    /*00020384*/ LDR         LR, [R2, #3180]             @ 0xc6c 
    /*00020388*/ LDR         R3, [R6, R3] 
    /*0002038c*/ CMP         R0, IP 
    /*00020390*/ CMPEQ       LR, R3 
    /*00020394*/ BNE         VPSS_DRV_UpdateChnScaleEn_x20324
    /*00020398*/ B           VPSS_DRV_UpdateChnScaleEn_x202a4
FUNC_END VPSS_DRV_UpdateChnScaleEn


FUNC_BEGIN VPSS_DRV_GetChnActScaleSize
    /*0002039c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000203a0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000203a4*/ PUSH        {R4, R5, LR} 
    /*000203a8*/ MOV         LR, #72                     @ 0x48 
    /*000203ac*/ LDR         R3, [R3, R0, LSL #2] 
    /*000203b0*/ MOVW        R0, #1080                   @ 0x438 
    /*000203b4*/ MUL         R2, R0, R2 
    /*000203b8*/ MOV         IP, #360                    @ 0x168 
    /*000203bc*/ MLA         R0, LR, R1, R3 
    /*000203c0*/ MOVW        R5, #26580                  @ 0x67d4 
    /*000203c4*/ MLA         R2, IP, R1, R2 
    /*000203c8*/ MOVW        R1, #26576                  @ 0x67d0 
    /*000203cc*/ MOV         IP, #0 
    /*000203d0*/ MOVW        R4, #26560                  @ 0x67c0 
    /*000203d4*/ MOVW        LR, #26568                  @ 0x67c8 
    /*000203d8*/ ADD         R2, R3, R2 
    /*000203dc*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*000203e0*/ STR         IP, [R2, R1] 
    /*000203e4*/ MOVW        IP, #26564                  @ 0x67c4 
    /*000203e8*/ STR         R3, [R2, R5] 
    /*000203ec*/ MOVW        R1, #26572                  @ 0x67cc 
    /*000203f0*/ LDR         R3, [R0, #48]               @ 0x30 
    /*000203f4*/ STR         R3, [R2, R4] 
    /*000203f8*/ STR         R3, [R2, LR] 
    /*000203fc*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00020400*/ STR         R3, [R2, IP] 
    /*00020404*/ STR         R3, [R2, R1] 
    /*00020408*/ POP         {R4, R5, PC} 
FUNC_END VPSS_DRV_GetChnActScaleSize


FUNC_BEGIN GetSplitLineBuffer
    /*0002040c*/ SUB         R0, R0, #3360               @ 0xd20 
    /*00020410*/ SUB         R0, R0, #1 
    /*00020414*/ CMP         R0, #480                    @ 0x1e0 
    /*00020418*/ MOVCC       R0, #1920                   @ 0x780 
    /*0002041c*/ MOVCS       R0, #1792                   @ 0x700 
    /*00020420*/ BX          LR 
FUNC_END GetSplitLineBuffer


FUNC_BEGIN VPSS_DRV_GetSplitCfg
    /*00020424*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00020428*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0002042c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00020430*/ MOV         R8, R3 
    /*00020434*/ LDR         R5, [IP, R1, LSL #2] 
    /*00020438*/ MOV         R9, R2 
    /*0002043c*/ SUB         SP, SP, #20 
    /*00020440*/ MOV         R4, R0 
    /*00020444*/ ADD         R6, R5, #16384              @ 0x4000 
    /*00020448*/ ADD         R7, R5, #12288              @ 0x3000 
    /*0002044c*/ LDR         R3, [R6, #2524]             @ 0x9dc 
    /*00020450*/ STR         R3, [R0, #4] 
    /*00020454*/ LDR         R3, [R6, #2564]             @ 0xa04 
    /*00020458*/ SUB         R3, R3, #1 
    /*0002045c*/ CMP         R3, #1 
    /*00020460*/ MOVHI       R2, #0 
    /*00020464*/ MOVLS       R2, #1 
    /*00020468*/ STR         R2, [R0, #16] 
    /*0002046c*/ LDR         R2, [R6, #2560]             @ 0xa00 
    /*00020470*/ SUB         R2, R2, #1 
    /*00020474*/ CLZ         R2, R2 
    /*00020478*/ LSR         R2, R2, #5 
    /*0002047c*/ STR         R2, [R0, #20] 
    /*00020480*/ LDR         R2, [R6, #2552]             @ 0x9f8 
    /*00020484*/ ADDS        R2, R2, #0 
    /*00020488*/ MOVNE       R2, #1 
    /*0002048c*/ CMP         R3, #1 
    /*00020490*/ STR         R2, [R0, #12] 
    /*00020494*/ BHI         VPSS_DRV_GetSplitCfg_x204a4
    /*00020498*/ LDR         R2, [R7, #3144]             @ 0xc48 
    /*0002049c*/ CMP         R2, #0 
    /*000204a0*/ BNE         VPSS_DRV_GetSplitCfg_x20758
    VPSS_DRV_GetSplitCfg_x204a4:
    /*000204a4*/ CMP         R3, #1 
    /*000204a8*/ MOV         R3, #0 
    /*000204ac*/ STR         R3, [R4, #40]               @ 0x28 
    /*000204b0*/ BLS         VPSS_DRV_GetSplitCfg_x20760
    VPSS_DRV_GetSplitCfg_x204b4:
    /*000204b4*/ STR         R3, [R4, #44]               @ 0x2c 
    /*000204b8*/ ADD         R0, R5, #19200              @ 0x4b00 
    /*000204bc*/ LDR         R2, [R7, #3176]             @ 0xc68 
    /*000204c0*/ ADD         R3, R5, #21504              @ 0x5400 
    /*000204c4*/ ADD         R0, R0, #92                 @ 0x5c 
    /*000204c8*/ ADD         R3, R3, #44                 @ 0x2c 
    /*000204cc*/ ADD         LR, SP, #4 
    /*000204d0*/ STR         R2, [R4, #48]               @ 0x30 
    /*000204d4*/ LDR         R2, [R6, #2748]             @ 0xabc 
    /*000204d8*/ STR         R2, [R4, #28] 
    VPSS_DRV_GetSplitCfg_x204dc:
    /*000204dc*/ LDR         IP, [R0] 
    /*000204e0*/ ADD         R0, R0, #752                @ 0x2f0 
    /*000204e4*/ CMP         IP, #0 
    /*000204e8*/ LDREQ       IP, [R6, #2524]             @ 0x9dc 
    /*000204ec*/ CMP         R0, R3 
    /*000204f0*/ STR         IP, [LR], #4 
    /*000204f4*/ BNE         VPSS_DRV_GetSplitCfg_x204dc
    /*000204f8*/ LDR         R2, [SP, #8] 
    /*000204fc*/ MOV         R0, R1 
    /*00020500*/ LDR         R3, [SP, #12] 
    /*00020504*/ LDR         IP, [SP, #4] 
    /*00020508*/ STR         R2, [R4, #632]              @ 0x278 
    /*0002050c*/ STR         R3, [R4, #656]              @ 0x290 
    /*00020510*/ STR         IP, [R4, #608]              @ 0x260 
    /*00020514*/ BL          0x0000000000020514          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*00020518*/ MOV         R3, #72                     @ 0x48 
    /*0002051c*/ CMP         R0, #2 
    /*00020520*/ MLAEQ       R3, R3, R8, R5 
    /*00020524*/ MOVWEQ      R0, #18756                  @ 0x4944 
    /*00020528*/ MLANE       R3, R3, R8, R5 
    /*0002052c*/ MOVWNE      R0, #18752                  @ 0x4940 
    /*00020530*/ MOVWEQ      R1, #18780                  @ 0x495c 
    /*00020534*/ MOVWNE      R1, #18776                  @ 0x4958 
    /*00020538*/ MOVWEQ      R2, #18804                  @ 0x4974 
    /*0002053c*/ MOVWNE      R2, #18800                  @ 0x4970 
    /*00020540*/ LDR         R0, [R3, R0] 
    /*00020544*/ STR         R0, [R4, #764]              @ 0x2fc 
    /*00020548*/ LDR         R1, [R3, R1] 
    /*0002054c*/ STR         R1, [R4, #808]              @ 0x328 
    /*00020550*/ LDR         R3, [R3, R2] 
    /*00020554*/ STR         R3, [R4, #840]              @ 0x348 
    /*00020558*/ LDR         R3, [R7, #3560]             @ 0xde8 
    /*0002055c*/ STR         R3, [R4, #592]              @ 0x250 
    /*00020560*/ LDR         R3, [R7, #3564]             @ 0xdec 
    /*00020564*/ STR         R3, [R4, #616]              @ 0x268 
    /*00020568*/ LDR         R3, [R7, #3568]             @ 0xdf0 
    /*0002056c*/ STR         R3, [R4, #640]              @ 0x280 
    /*00020570*/ LDR         R3, [R9, #64]               @ 0x40 
    /*00020574*/ STR         R3, [R4, #612]              @ 0x264 
    /*00020578*/ LDR         R3, [R9, #160]              @ 0xa0 
    /*0002057c*/ STR         R3, [R4, #636]              @ 0x27c 
    /*00020580*/ LDR         R3, [R9, #256]              @ 0x100 
    /*00020584*/ STR         R3, [R4, #660]              @ 0x294 
    /*00020588*/ LDR         R3, [R6, #688]              @ 0x2b0 
    /*0002058c*/ CMP         R3, #1 
    /*00020590*/ BEQ         VPSS_DRV_GetSplitCfg_x20768
    /*00020594*/ MOV         R2, #72                     @ 0x48 
    /*00020598*/ LDR         R3, [R5, #836]              @ 0x344 
    /*0002059c*/ MLA         R2, R2, R8, R6 
    /*000205a0*/ LDR         R2, [R2, #2364]             @ 0x93c 
    /*000205a4*/ AND         R3, R3, R2 
    /*000205a8*/ STR         R3, [R4, #700]              @ 0x2bc 
    /*000205ac*/ LDR         R3, [R5, #848]              @ 0x350 
    /*000205b0*/ STR         R3, [R4, #708]              @ 0x2c4 
    /*000205b4*/ LDR         R3, [R5, #840]              @ 0x348 
    /*000205b8*/ STR         R3, [R4, #704]              @ 0x2c0 
    VPSS_DRV_GetSplitCfg_x205bc:
    /*000205bc*/ MOV         R1, #72                     @ 0x48 
    /*000205c0*/ LDR         R2, [R5, #880]              @ 0x370 
    /*000205c4*/ MLA         R1, R1, R8, R6 
    /*000205c8*/ MOV         R3, #0 
    /*000205cc*/ LDR         R0, [R1, #2388]             @ 0x954 
    /*000205d0*/ AND         R2, R2, R0 
    /*000205d4*/ STR         R2, [R4, #712]              @ 0x2c8 
    /*000205d8*/ LDR         R2, [R5, #892]              @ 0x37c 
    /*000205dc*/ STR         R2, [R4, #720]              @ 0x2d0 
    /*000205e0*/ LDR         R2, [R5, #884]              @ 0x374 
    /*000205e4*/ STR         R2, [R4, #716]              @ 0x2cc 
    /*000205e8*/ LDR         R2, [R5, #924]              @ 0x39c 
    /*000205ec*/ LDR         R0, [R1, #2412]             @ 0x96c 
    /*000205f0*/ AND         R2, R2, R0 
    /*000205f4*/ STR         R2, [R4, #724]              @ 0x2d4 
    /*000205f8*/ LDR         R2, [R5, #936]              @ 0x3a8 
    /*000205fc*/ STR         R2, [R4, #732]              @ 0x2dc 
    /*00020600*/ LDR         R2, [R5, #928]              @ 0x3a0 
    /*00020604*/ STR         R2, [R4, #728]              @ 0x2d8 
    /*00020608*/ LDR         R2, [R5, #68]               @ 0x44 
    /*0002060c*/ STR         R3, [R4, #804]              @ 0x324 
    /*00020610*/ SUB         R2, R2, #1 
    /*00020614*/ STR         R3, [R4, #836]              @ 0x344 
    /*00020618*/ CLZ         R2, R2 
    /*0002061c*/ STR         R3, [R4, #744]              @ 0x2e8 
    /*00020620*/ STR         R3, [R4, #800]              @ 0x320 
    /*00020624*/ STR         R3, [R4, #832]              @ 0x340 
    /*00020628*/ LSR         R2, R2, #5 
    /*0002062c*/ STR         R2, [R4, #748]              @ 0x2ec 
    /*00020630*/ LDR         R3, [R1, #2364]             @ 0x93c 
    /*00020634*/ CMP         R3, #1 
    /*00020638*/ LDREQ       R3, [R6, #2900]             @ 0xb54 
    /*0002063c*/ STREQ       R3, [R4, #740]              @ 0x2e4 
    /*00020640*/ BEQ         VPSS_DRV_GetSplitCfg_x20668
    /*00020644*/ LDR         R3, [R6, #688]              @ 0x2b0 
    /*00020648*/ CMP         R3, #1 
    /*0002064c*/ LDREQ       R3, [R6, #2900]             @ 0xb54 
    /*00020650*/ LDRNE       R3, [R6, #2524]             @ 0x9dc 
    /*00020654*/ STREQ       R3, [R4, #740]              @ 0x2e4 
    /*00020658*/ STRNE       R3, [R4, #740]              @ 0x2e4 
    /*0002065c*/ LDREQ       R3, [R6, #2908]             @ 0xb5c 
    /*00020660*/ LDRNE       R3, [R6, #2524]             @ 0x9dc 
    /*00020664*/ STR         R3, [R4, #608]              @ 0x260 
    VPSS_DRV_GetSplitCfg_x20668:
    /*00020668*/ MOV         R2, #72                     @ 0x48 
    /*0002066c*/ LDR         R1, [R6, #3652]             @ 0xe44 
    /*00020670*/ MLA         IP, R2, R8, R6 
    /*00020674*/ ADD         R3, R5, #20480              @ 0x5000 
    /*00020678*/ STR         R1, [R4, #796]              @ 0x31c 
    /*0002067c*/ LDR         R1, [R3, #308]              @ 0x134 
    /*00020680*/ ADD         R3, R5, #36864              @ 0x9000 
    /*00020684*/ MLA         R2, R8, R2, R2 
    /*00020688*/ ADD         R8, R5, #18688              @ 0x4900 
    /*0002068c*/ STR         R1, [R4, #828]              @ 0x33c 
    /*00020690*/ ADD         R8, R8, #24 
    /*00020694*/ LDR         R0, [IP, #2380]             @ 0x94c 
    /*00020698*/ ADD         R1, R8, #2816               @ 0xb00 
    /*0002069c*/ ADD         R6, R6, R2 
    /*000206a0*/ ADD         R1, R1, #12 
    /*000206a4*/ MOV         R2, #416                    @ 0x1a0 
    /*000206a8*/ STR         R0, [R4, #768]              @ 0x300 
    /*000206ac*/ LDR         R0, [IP, #2380]             @ 0x94c 
    /*000206b0*/ STR         R0, [R4, #772]              @ 0x304 
    /*000206b4*/ ADD         R0, R4, #176                @ 0xb0 
    /*000206b8*/ LDR         LR, [R6, #2332]             @ 0x91c 
    /*000206bc*/ STR         LR, [R4, #812]              @ 0x32c 
    /*000206c0*/ LDR         LR, [IP, #2428]             @ 0x97c 
    /*000206c4*/ STR         LR, [R4, #844]              @ 0x34c 
    /*000206c8*/ LDR         LR, [IP, #2364]             @ 0x93c 
    /*000206cc*/ STR         LR, [R4, #736]              @ 0x2e0 
    /*000206d0*/ LDR         LR, [IP, #2388]             @ 0x954 
    /*000206d4*/ STR         LR, [R4, #792]              @ 0x318 
    /*000206d8*/ LDR         IP, [IP, #2412]             @ 0x96c 
    /*000206dc*/ STR         IP, [R4, #824]              @ 0x338 
    /*000206e0*/ LDR         IP, [R3, #976]              @ 0x3d0 
    /*000206e4*/ STR         IP, [R4, #676]              @ 0x2a4 
    /*000206e8*/ LDR         IP, [R7, #3240]             @ 0xca8 
    /*000206ec*/ STR         IP, [R4, #680]              @ 0x2a8 
    /*000206f0*/ LDR         IP, [R7, #3248]             @ 0xcb0 
    /*000206f4*/ STR         IP, [R4, #684]              @ 0x2ac 
    /*000206f8*/ LDR         R3, [R3, #1000]             @ 0x3e8 
    /*000206fc*/ STR         R3, [R4, #688]              @ 0x2b0 
    /*00020700*/ LDR         R3, [R7, #3264]             @ 0xcc0 
    /*00020704*/ STR         R3, [R4, #692]              @ 0x2b4 
    /*00020708*/ LDR         R3, [R7, #3272]             @ 0xcc8 
    /*0002070c*/ STR         R3, [R4, #696]              @ 0x2b8 
    /*00020710*/ BL          0x0000000000020710          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00020714*/ ADD         R1, R5, #21504              @ 0x5400 
    /*00020718*/ MOV         R2, #36                     @ 0x24 
    /*0002071c*/ ADD         R0, R4, #140                @ 0x8c 
    /*00020720*/ BL          0x0000000000020720          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00020724*/ ADD         R1, R8, #3264               @ 0xcc0 
    /*00020728*/ ADD         R1, R1, #4 
    /*0002072c*/ MOV         R2, #64                     @ 0x40 
    /*00020730*/ ADD         R0, R4, #52                 @ 0x34 
    /*00020734*/ BL          0x0000000000020734          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00020738*/ ADD         R1, R8, #3232               @ 0xca0 
    /*0002073c*/ ADD         R1, R1, #12 
    /*00020740*/ ADD         R0, R4, #116                @ 0x74 
    /*00020744*/ MOV         R2, #24 
    /*00020748*/ BL          0x0000000000020748          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002074c*/ MOV         R0, #0 
    /*00020750*/ ADD         SP, SP, #20 
    /*00020754*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_DRV_GetSplitCfg_x20758:
    /*00020758*/ MOV         R3, #1 
    /*0002075c*/ STR         R3, [R0, #40]               @ 0x28 
    VPSS_DRV_GetSplitCfg_x20760:
    /*00020760*/ LDR         R3, [R7, #3192]             @ 0xc78 
    /*00020764*/ B           VPSS_DRV_GetSplitCfg_x204b4
    VPSS_DRV_GetSplitCfg_x20768:
    /*00020768*/ LDR         R3, [R6, #640]              @ 0x280 
    /*0002076c*/ STR         R3, [R4, #700]              @ 0x2bc 
    /*00020770*/ LDR         R3, [R6, #652]              @ 0x28c 
    /*00020774*/ STR         R3, [R4, #708]              @ 0x2c4 
    /*00020778*/ LDR         R3, [R6, #644]              @ 0x284 
    /*0002077c*/ STR         R3, [R4, #704]              @ 0x2c0 
    /*00020780*/ B           VPSS_DRV_GetSplitCfg_x205bc
FUNC_END VPSS_DRV_GetSplitCfg


FUNC_BEGIN VPSS_DRV_CaculateSplitCfg
    /*00020784*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00020788*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0002078c*/ SUB         SP, SP, #28 
    /*00020790*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00020794*/ MOV         R7, R3 
    /*00020798*/ MOV         FP, R1 
    /*0002079c*/ LDR         R4, [IP, R0, LSL #2] 
    /*000207a0*/ MOV         SL, R0 
    /*000207a4*/ STR         R2, [SP, #20] 
    /*000207a8*/ BL          0x00000000000207A8          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*000207ac*/ ADD         R6, R4, #24576              @ 0x6000 
    /*000207b0*/ ADD         R9, R4, #16384              @ 0x4000 
    /*000207b4*/ MVN         R5, #3360                   @ 0xd20 
    /*000207b8*/ LDR         R2, [SP, #20] 
    /*000207bc*/ MOV         R1, SL 
    /*000207c0*/ CMP         R0, #2 
    /*000207c4*/ MOV         R0, R7 
    /*000207c8*/ MOVEQ       R3, #104                    @ 0x68 
    /*000207cc*/ MOVNE       R3, #128                    @ 0x80 
    /*000207d0*/ STR         R3, [R6, #3116]             @ 0xc2c 
    /*000207d4*/ MOVEQ       R8, #1 
    /*000207d8*/ LDR         IP, [R9, #2524]             @ 0x9dc 
    /*000207dc*/ MOVNE       R8, #0 
    /*000207e0*/ MOV         R3, FP 
    /*000207e4*/ ADD         IP, R5, IP 
    /*000207e8*/ CMP         IP, #480                    @ 0x1e0 
    /*000207ec*/ MOVCS       IP, #1792                   @ 0x700 
    /*000207f0*/ MOVCC       IP, #1920                   @ 0x780 
    /*000207f4*/ STR         IP, [R7] 
    /*000207f8*/ BL          0x00000000000207F8          @ VPSS_DRV_GetSplitCfg [R_ARM_CALL: .text+0x20424] 
    /*000207fc*/ LDR         R1, [R9, #2524]             @ 0x9dc 
    /*00020800*/ ADD         R2, R4, #30208              @ 0x7600 
    /*00020804*/ ADD         R3, R4, #27648              @ 0x6c00 
    /*00020808*/ ADD         R1, R5, R1 
    /*0002080c*/ ADD         R2, R2, #68                 @ 0x44 
    /*00020810*/ ADD         R3, R3, #40                 @ 0x28 
    /*00020814*/ STR         R2, [SP, #8] 
    /*00020818*/ STR         R3, [SP, #4] 
    /*0002081c*/ CMP         R1, #480                    @ 0x1e0 
    /*00020820*/ LDR         IP, [R6, #3116]             @ 0xc2c 
    /*00020824*/ ADD         R3, R4, #27648              @ 0x6c00 
    /*00020828*/ MOVCS       R1, #0 
    /*0002082c*/ MOVCC       R1, #1 
    /*00020830*/ MOV         R2, R7 
    /*00020834*/ MOV         R0, R8 
    /*00020838*/ ADD         R3, R3, #48                 @ 0x30 
    /*0002083c*/ STR         IP, [SP] 
    /*00020840*/ BL          0x0000000000020840          @ VPSSSplitAndCrop [R_ARM_CALL: .text+0x283e8] 
    /*00020844*/ LDR         R1, [R6, #3112]             @ 0xc28 
    /*00020848*/ CMP         R1, #1 
    /*0002084c*/ BLS         VPSS_DRV_CaculateSplitCfg_x2088c
    VPSS_DRV_CaculateSplitCfg_x20850:
    /*00020850*/ CMP         R1, #3 
    /*00020854*/ BLS         VPSS_DRV_CaculateSplitCfg_x20880
    /*00020858*/ MOVW        R0, #0                      @ .LC305 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x93e8] 
    /*0002085c*/ MOVT        R0, #0                      @ .LC305 [R_ARM_MOVT_ABS: .rodata.str1.4+0x93e8] 
    /*00020860*/ BL          0x0000000000020860          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00020864*/ MOVW        R3, #0                      @ .LC304 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x93e4] 
    /*00020868*/ MOVW        R0, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e8] 
    /*0002086c*/ MOVT        R3, #0                      @ .LC304 [R_ARM_MOVT_ABS: .rodata.str1.4+0x93e4] 
    /*00020870*/ MOVT        R0, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e8] 
    /*00020874*/ MOVW        R2, #6593                   @ 0x19c1 
    /*00020878*/ LDR         R1, [PC, #60]               @ 0x00000000000208bc 
    /*0002087c*/ BL          0x000000000002087C          @ osal_panic [R_ARM_CALL: +0x0] 
    VPSS_DRV_CaculateSplitCfg_x20880:
    /*00020880*/ MOV         R0, #0 
    /*00020884*/ ADD         SP, SP, #28 
    /*00020888*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_CaculateSplitCfg_x2088c:
    /*0002088c*/ MOVW        R0, #0                      @ .LC303 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x93c8] 
    /*00020890*/ MOVT        R0, #0                      @ .LC303 [R_ARM_MOVT_ABS: .rodata.str1.4+0x93c8] 
    /*00020894*/ BL          0x0000000000020894          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00020898*/ LDR         R1, [PC, #28]               @ 0x00000000000208bc 
    /*0002089c*/ MOVW        R3, #0                      @ .LC304 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x93e4] 
    /*000208a0*/ MOVW        R0, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e8] 
    /*000208a4*/ MOVT        R3, #0                      @ .LC304 [R_ARM_MOVT_ABS: .rodata.str1.4+0x93e4] 
    /*000208a8*/ MOVT        R0, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e8] 
    /*000208ac*/ MOVW        R2, #6587                   @ 0x19bb 
    /*000208b0*/ BL          0x00000000000208B0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000208b4*/ LDR         R1, [R6, #3112]             @ 0xc28 
    /*000208b8*/ B           VPSS_DRV_CaculateSplitCfg_x20850
    /*000208bc*/ ANDEQ       R1, R0, IP, ROR #6 
FUNC_END VPSS_DRV_CaculateSplitCfg


FUNC_BEGIN VPSS_DRV_SplitProc
    /*000208c0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000208c4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000208c8*/ PUSH        {R4, R5, R6, LR} 
    /*000208cc*/ MOV         R5, R0 
    /*000208d0*/ LDR         R4, [R3, R0, LSL #2] 
    /*000208d4*/ LDR         R2, [SP, #16] 
    /*000208d8*/ ADD         IP, R4, #12288              @ 0x3000 
    /*000208dc*/ LDR         R3, [SP, #20] 
    /*000208e0*/ LDR         IP, [IP, #3176]             @ 0xc68 
    /*000208e4*/ CMP         IP, #2048                   @ 0x800 
    /*000208e8*/ BHI         VPSS_DRV_SplitProc_x20938
    /*000208ec*/ ADD         R3, R4, #28672              @ 0x7000 
    /*000208f0*/ ADD         R2, R4, #24576              @ 0x6000 
    /*000208f4*/ ADD         R0, R4, #16384              @ 0x4000 
    /*000208f8*/ MOV         R1, #0 
    /*000208fc*/ MOV         IP, #1 
    /*00020900*/ STR         R1, [R2, #3108]             @ 0xc24 
    /*00020904*/ STR         IP, [R2, #3112]             @ 0xc28 
    /*00020908*/ STR         IP, [R3, #1608]             @ 0x648 
    /*0002090c*/ STR         R1, [R3, #1604]             @ 0x644 
    /*00020910*/ LDR         R2, [R0, #2524]             @ 0x9dc 
    /*00020914*/ STR         R1, [R3, #1628]             @ 0x65c 
    /*00020918*/ STR         R2, [R3, #1612]             @ 0x64c 
    /*0002091c*/ STR         R2, [R3, #1616]             @ 0x650 
    VPSS_DRV_SplitProc_x20920:
    /*00020920*/ LDR         R3, [R4, #28] 
    /*00020924*/ CMP         R3, #1 
    /*00020928*/ POPNE       {R4, R5, R6, PC} 
    /*0002092c*/ MOV         R0, R5 
    /*00020930*/ POP         {R4, R5, R6, LR} 
    VPSS_DRV_SplitProc_x20934:
    /*00020934*/ B           VPSS_DRV_SplitProc_x20934   @ VPSS_DRV_CalNrBufferSize [R_ARM_JUMP24: .text+0x1a694] 
    VPSS_DRV_SplitProc_x20938:
    /*00020938*/ BL          0x0000000000020938          @ VPSS_DRV_CaculateSplitCfg [R_ARM_CALL: .text+0x20784] 
    /*0002093c*/ ADD         R2, R4, #24576              @ 0x6000 
    /*00020940*/ ADD         R3, R4, #28672              @ 0x7000 
    /*00020944*/ MOV         R1, #1 
    /*00020948*/ STR         R1, [R2, #3108]             @ 0xc24 
    /*0002094c*/ STR         R1, [R3, #1604]             @ 0x644 
    /*00020950*/ B           VPSS_DRV_SplitProc_x20920
FUNC_END VPSS_DRV_SplitProc


FUNC_BEGIN VPSS_DRV_IsOutWidthNeedSplit
    /*00020954*/ MOV         R0, #0 
    /*00020958*/ BX          LR 
FUNC_END VPSS_DRV_IsOutWidthNeedSplit


FUNC_BEGIN VPSS_DRV_ReadBusErrProc
    /*0002095c*/ MOVW        R3, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*00020960*/ MOVT        R3, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00020964*/ PUSH        {R4, LR} 
    /*00020968*/ SUB         SP, SP, #16 
    /*0002096c*/ LDR         R4, [R3, R0, LSL #2] 
    /*00020970*/ ADD         R1, SP, #12 
    /*00020974*/ MOV         R0, R4 
    /*00020978*/ BL          0x0000000000020978          @ VPSS_HAL_GetRpprotErr [R_ARM_CALL: .text+0x2829c] 
    /*0002097c*/ LDR         R3, [SP, #12] 
    /*00020980*/ MOVW        R1, #6795                   @ 0x1a8b 
    /*00020984*/ MOVW        R2, #0                      @ .LC306 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9400] 
    /*00020988*/ STR         R1, [SP] 
    /*0002098c*/ MOVT        R2, #0                      @ .LC306 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9400] 
    /*00020990*/ STR         R3, [SP, #4] 
    /*00020994*/ MOV         R1, #7 
    /*00020998*/ LDR         R3, [PC, #20]               @ 0x00000000000209b4 
    /*0002099c*/ MOV         R0, #0 
    /*000209a0*/ BL          0x00000000000209A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000209a4*/ MOV         R0, R4 
    /*000209a8*/ BL          0x00000000000209A8          @ VPSS_HAL_ClrRpprotErr [R_ARM_CALL: .text+0x282b4] 
    /*000209ac*/ ADD         SP, SP, #16 
    /*000209b0*/ POP         {R4, PC} 
    /*000209b4*/ ANDEQ       R1, R0, R8, LSL #7 
FUNC_END VPSS_DRV_ReadBusErrProc


FUNC_BEGIN VPSS_DRV_WriteBusErrProc
    /*000209b8*/ MOVW        R3, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*000209bc*/ MOVT        R3, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*000209c0*/ PUSH        {R4, LR} 
    /*000209c4*/ SUB         SP, SP, #16 
    /*000209c8*/ LDR         R4, [R3, R0, LSL #2] 
    /*000209cc*/ ADD         R1, SP, #12 
    /*000209d0*/ MOV         R0, R4 
    /*000209d4*/ BL          0x00000000000209D4          @ VPSS_HAL_GetWpprotErr [R_ARM_CALL: .text+0x282a8] 
    /*000209d8*/ LDR         R3, [SP, #12] 
    /*000209dc*/ MOVW        R1, #6810                   @ 0x1a9a 
    /*000209e0*/ MOVW        R2, #0                      @ .LC307 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9434] 
    /*000209e4*/ STR         R1, [SP] 
    /*000209e8*/ MOVT        R2, #0                      @ .LC307 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9434] 
    /*000209ec*/ STR         R3, [SP, #4] 
    /*000209f0*/ MOV         R1, #7 
    /*000209f4*/ LDR         R3, [PC, #20]               @ 0x0000000000020a10 
    /*000209f8*/ MOV         R0, #0 
    /*000209fc*/ BL          0x00000000000209FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020a00*/ MOV         R0, R4 
    /*00020a04*/ BL          0x0000000000020A04          @ VPSS_HAL_ClrWpprotErr [R_ARM_CALL: .text+0x28354] 
    /*00020a08*/ ADD         SP, SP, #16 
    /*00020a0c*/ POP         {R4, PC} 
    /*00020a10*/ ANDEQ       R1, R0, R0, LSR #7 
FUNC_END VPSS_DRV_WriteBusErrProc


FUNC_BEGIN VPSS_DRV_BusErrCount
    /*00020a14*/ TST         R0, #16 
    /*00020a18*/ BNE         VPSS_DRV_BusErrCount_x20a24
    /*00020a1c*/ MOV         R0, #0 
    /*00020a20*/ BX          LR 
    VPSS_DRV_BusErrCount_x20a24:
    /*00020a24*/ PUSH        {R4, LR} 
    /*00020a28*/ MOVW        R4, #0                      @ g_stCommCtx [R_ARM_MOVW_ABS_NC: .bss+0x16c8] 
    /*00020a2c*/ MOVT        R4, #0                      @ g_stCommCtx [R_ARM_MOVT_ABS: .bss+0x16c8] 
    /*00020a30*/ MOV         R0, #0 
    /*00020a34*/ BL          0x0000000000020A34          @ VPSS_DRV_ReadBusErrProc [R_ARM_CALL: .text+0x2095c] 
    /*00020a38*/ MOV         R0, #0 
    /*00020a3c*/ LDR         R3, [R4, #2948]             @ 0xb84 
    /*00020a40*/ ADD         R3, R3, #1 
    /*00020a44*/ STR         R3, [R4, #2948]             @ 0xb84 
    /*00020a48*/ BL          0x0000000000020A48          @ VPSS_DRV_WriteBusErrProc [R_ARM_CALL: .text+0x209b8] 
    /*00020a4c*/ LDR         R3, [R4, #2948]             @ 0xb84 
    /*00020a50*/ MOV         R0, #0 
    /*00020a54*/ ADD         R3, R3, #1 
    /*00020a58*/ STR         R3, [R4, #2948]             @ 0xb84 
    /*00020a5c*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_BusErrCount


FUNC_BEGIN VPSS_DRV_IsWrongInt
    /*00020a60*/ UBFX        R3, R0, #0, #15 
    /*00020a64*/ CMP         R3, #0 
    /*00020a68*/ PUSH        {R4, LR} 
    /*00020a6c*/ SUB         SP, SP, #8 
    /*00020a70*/ BEQ         VPSS_DRV_IsWrongInt_x20af4
    /*00020a74*/ ANDS        R3, R0, #16 
    /*00020a78*/ BNE         VPSS_DRV_IsWrongInt_x20ac4
    /*00020a7c*/ ANDS        R2, R0, #8 
    /*00020a80*/ BNE         VPSS_DRV_IsWrongInt_x20b54
    /*00020a84*/ ANDS        R4, R0, #128                @ 0x80 
    /*00020a88*/ BNE         VPSS_DRV_IsWrongInt_x20b24
    /*00020a8c*/ ANDS        R0, R0, #4 
    /*00020a90*/ BEQ         VPSS_DRV_IsWrongInt_x20aec
    /*00020a94*/ MOV         R0, R4 
    /*00020a98*/ BL          0x0000000000020A98          @ VPSS_HAL_PrintRegStatus [R_ARM_CALL: .text+0x26728] 
    /*00020a9c*/ MOVW        R3, #6874                   @ 0x1ada 
    /*00020aa0*/ MOV         R0, R4 
    /*00020aa4*/ STR         R3, [SP] 
    /*00020aa8*/ MOVW        R2, #0                      @ .LC312 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9530] 
    /*00020aac*/ LDR         R3, [PC, #208]              @ 0x0000000000020b84 
    /*00020ab0*/ MOVT        R2, #0                      @ .LC312 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9530] 
    /*00020ab4*/ MOV         R1, #7 
    /*00020ab8*/ BL          0x0000000000020AB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020abc*/ MOV         R0, #4 
    /*00020ac0*/ B           VPSS_DRV_IsWrongInt_x20aec
    VPSS_DRV_IsWrongInt_x20ac4:
    /*00020ac4*/ STR         R0, [SP, #4] 
    /*00020ac8*/ MOVW        R3, #6849                   @ 0x1ac1 
    /*00020acc*/ MOVW        R2, #0                      @ .LC309 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x949c] 
    /*00020ad0*/ STR         R3, [SP] 
    /*00020ad4*/ MOVT        R2, #0                      @ .LC309 [R_ARM_MOVT_ABS: .rodata.str1.4+0x949c] 
    /*00020ad8*/ LDR         R3, [PC, #164]              @ 0x0000000000020b84 
    /*00020adc*/ MOV         R1, #7 
    /*00020ae0*/ MOV         R0, #0 
    /*00020ae4*/ BL          0x0000000000020AE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020ae8*/ MOV         R0, #16 
    VPSS_DRV_IsWrongInt_x20aec:
    /*00020aec*/ ADD         SP, SP, #8 
    /*00020af0*/ POP         {R4, PC} 
    VPSS_DRV_IsWrongInt_x20af4:
    /*00020af4*/ STR         R0, [SP, #4] 
    /*00020af8*/ MOV         R1, #7 
    /*00020afc*/ MOV         R0, R3 
    /*00020b00*/ MOVW        R2, #0                      @ .LC308 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9468] 
    /*00020b04*/ MOVW        R3, #6842                   @ 0x1aba 
    /*00020b08*/ MOVT        R2, #0                      @ .LC308 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9468] 
    /*00020b0c*/ STR         R3, [SP] 
    /*00020b10*/ LDR         R3, [PC, #108]              @ 0x0000000000020b84 
    /*00020b14*/ BL          0x0000000000020B14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020b18*/ MOV         R0, #1 
    /*00020b1c*/ ADD         SP, SP, #8 
    /*00020b20*/ POP         {R4, PC} 
    VPSS_DRV_IsWrongInt_x20b24:
    /*00020b24*/ STR         R0, [SP, #4] 
    /*00020b28*/ MOVW        R3, #6862                   @ 0x1ace 
    /*00020b2c*/ MOV         R0, R2 
    /*00020b30*/ STR         R3, [SP] 
    /*00020b34*/ MOV         R1, #7 
    /*00020b38*/ LDR         R3, [PC, #68]               @ 0x0000000000020b84 
    /*00020b3c*/ MOVW        R2, #0                      @ .LC311 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x94fc] 
    /*00020b40*/ MOVT        R2, #0                      @ .LC311 [R_ARM_MOVT_ABS: .rodata.str1.4+0x94fc] 
    /*00020b44*/ BL          0x0000000000020B44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020b48*/ MOV         R0, #128                    @ 0x80 
    /*00020b4c*/ ADD         SP, SP, #8 
    /*00020b50*/ POP         {R4, PC} 
    VPSS_DRV_IsWrongInt_x20b54:
    /*00020b54*/ STR         R0, [SP, #4] 
    /*00020b58*/ MOV         R1, #7 
    /*00020b5c*/ MOV         R0, R3 
    /*00020b60*/ MOVW        R2, #0                      @ .LC310 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x94cc] 
    /*00020b64*/ MOVW        R3, #6855                   @ 0x1ac7 
    /*00020b68*/ MOVT        R2, #0                      @ .LC310 [R_ARM_MOVT_ABS: .rodata.str1.4+0x94cc] 
    /*00020b6c*/ STR         R3, [SP] 
    /*00020b70*/ LDR         R3, [PC, #12]               @ 0x0000000000020b84 
    /*00020b74*/ BL          0x0000000000020B74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020b78*/ MOV         R0, #8 
    /*00020b7c*/ ADD         SP, SP, #8 
    /*00020b80*/ POP         {R4, PC} 
    /*00020b84*/ @           <UNDEFINED> instruction: 0x000013bc 
FUNC_END VPSS_DRV_IsWrongInt


FUNC_BEGIN VPSS_DRV_IsVencMissInt
    /*00020b88*/ MOV         R0, #0 
    /*00020b8c*/ BX          LR 
FUNC_END VPSS_DRV_IsVencMissInt


FUNC_BEGIN VPSS_DRV_HalMissInt
    /*00020b90*/ MOV         R0, #0 
    /*00020b94*/ BX          LR 
FUNC_END VPSS_DRV_HalMissInt


FUNC_BEGIN VPSS_DRV_CheckChnBufWarpInfo
    /*00020b98*/ MOVW        R0, #32776                  @ 0x8008 
    /*00020b9c*/ MOVT        R0, #40967                  @ 0xa007 
    /*00020ba0*/ BX          LR 
FUNC_END VPSS_DRV_CheckChnBufWarpInfo


FUNC_BEGIN VPSS_DRV_SetChnBufWarpInfo
    /*00020ba4*/ MOV         R0, #0 
    /*00020ba8*/ BX          LR 
FUNC_END VPSS_DRV_SetChnBufWarpInfo


FUNC_BEGIN VPSS_DRV_GetChnBufWarpInfo
    /*00020bac*/ MOV         R0, #0 
    /*00020bb0*/ BX          LR 
FUNC_END VPSS_DRV_GetChnBufWarpInfo


FUNC_BEGIN VPSS_DRV_CheckTriggerSnapFrame
    /*00020bb4*/ MOVW        R0, #32776                  @ 0x8008 
    /*00020bb8*/ MOVT        R0, #40967                  @ 0xa007 
    /*00020bbc*/ BX          LR 
FUNC_END VPSS_DRV_CheckTriggerSnapFrame


FUNC_BEGIN VPSS_DRV_SetTriggerSnapFrame
    /*00020bc0*/ MOV         R0, #0 
    /*00020bc4*/ BX          LR 
FUNC_END VPSS_DRV_SetTriggerSnapFrame


FUNC_BEGIN VPSS_DRV_MallocModelBuf
    /*00020bc8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00020bcc*/ SUB         SP, SP, #60                 @ 0x3c 
    /*00020bd0*/ MOV         R7, R0 
    /*00020bd4*/ MOV         R0, #2 
    /*00020bd8*/ MOV         R3, #0 
    /*00020bdc*/ MOV         R6, R1 
    /*00020be0*/ MOV         R4, #0 
    /*00020be4*/ MOV         R5, #0 
    /*00020be8*/ STR         R3, [SP, #8] 
    /*00020bec*/ STRD        R4, [SP, #16] 
    /*00020bf0*/ MOV         R5, #7 
    /*00020bf4*/ STR         R3, [SP, #12] 
    /*00020bf8*/ STR         R3, [SP, #36]               @ 0x24 
    /*00020bfc*/ STR         R7, [SP, #32] 
    /*00020c00*/ STR         R5, [SP, #28] 
    /*00020c04*/ BL          0x0000000000020C04          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00020c08*/ ADD         R1, SP, #12 
    /*00020c0c*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*00020c10*/ ADD         R0, SP, #28 
    /*00020c14*/ BLX         R3 
    /*00020c18*/ SUBS        R4, R0, #0 
    /*00020c1c*/ BEQ         VPSS_DRV_MallocModelBuf_x20c50
    /*00020c20*/ MOVW        R3, #6951                   @ 0x1b27 
    /*00020c24*/ MOVW        R2, #0                      @ .LC313 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9560] 
    /*00020c28*/ STR         R3, [SP] 
    /*00020c2c*/ MOV         R1, R5 
    /*00020c30*/ MOVT        R2, #0                      @ .LC313 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9560] 
    /*00020c34*/ LDR         R3, [PC, #272]              @ 0x0000000000020d4c 
    /*00020c38*/ MOV         R0, #3 
    /*00020c3c*/ MVN         R4, #0 
    /*00020c40*/ BL          0x0000000000020C40          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_DRV_MallocModelBuf_x20c44:
    /*00020c44*/ MOV         R0, R4 
    /*00020c48*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00020c4c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_MallocModelBuf_x20c50:
    /*00020c50*/ MOV         R1, #16 
    /*00020c54*/ STR         R7, [SP] 
    /*00020c58*/ MOVW        R3, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6168] 
    /*00020c5c*/ MOVW        R2, #0                      @ .LC314 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9590] 
    /*00020c60*/ MOVT        R3, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6168] 
    /*00020c64*/ MOVT        R2, #0                      @ .LC314 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9590] 
    /*00020c68*/ ADD         R0, SP, #40                 @ 0x28 
    /*00020c6c*/ MOV         R5, #55040                  @ 0xd700 
    /*00020c70*/ BL          0x0000000000020C70          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*00020c74*/ MOVT        R5, #2 
    /*00020c78*/ LDR         R0, [SP, #12] 
    /*00020c7c*/ ADD         R1, SP, #40                 @ 0x28 
    /*00020c80*/ ADD         R3, SP, #8 
    /*00020c84*/ STR         R5, [SP] 
    /*00020c88*/ ADD         R2, SP, #16 
    /*00020c8c*/ BL          0x0000000000020C8C          @ CMPI_MmzMallocNocache [R_ARM_CALL: +0x0] 
    /*00020c90*/ CMN         R0, #1 
    /*00020c94*/ BEQ         VPSS_DRV_MallocModelBuf_x20d44
    /*00020c98*/ LDRD        R8, [SP, #16] 
    /*00020c9c*/ MOV         R2, R5 
    /*00020ca0*/ LDR         R0, [SP, #8] 
    /*00020ca4*/ MOV         R1, R4 
    /*00020ca8*/ ADD         R5, R6, #24 
    /*00020cac*/ MOV         SL, #30976                  @ 0x7900 
    /*00020cb0*/ STRD        R8, [R6, #152]              @ 0x98 
    /*00020cb4*/ MOV         FP, #0 
    /*00020cb8*/ STR         R0, [R6, #160]              @ 0xa0 
    /*00020cbc*/ BL          0x0000000000020CBC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00020cc0*/ LDRD        R8, [SP, #16] 
    /*00020cc4*/ LDR         R3, [SP, #8] 
    /*00020cc8*/ ADDS        R0, R8, #255                @ 0xff 
    /*00020ccc*/ STR         R4, [R6, #16] 
    /*00020cd0*/ SUB         R3, R3, R8 
    /*00020cd4*/ MOV         R8, #54784                  @ 0xd600 
    /*00020cd8*/ MOVT        R8, #2 
    /*00020cdc*/ ADC         R1, R9, #0 
    /*00020ce0*/ BIC         R0, R0, #255                @ 0xff 
    /*00020ce4*/ MOV         R9, #0 
    /*00020ce8*/ ADD         R3, R3, R0 
    /*00020cec*/ STR         R4, [R6, #144]              @ 0x90 
    /*00020cf0*/ STRD        R0, [SP, #16] 
    /*00020cf4*/ STRD        R0, [R6, #8] 
    /*00020cf8*/ STR         R3, [SP, #8] 
    /*00020cfc*/ STR         R3, [R6] 
    VPSS_DRV_MallocModelBuf_x20d00:
    /*00020d00*/ MOV         R2, #24 
    /*00020d04*/ MOV         R0, R5 
    /*00020d08*/ MOV         R1, R6 
    /*00020d0c*/ BL          0x0000000000020D0C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00020d10*/ LDRD        R2, [R6, #8] 
    /*00020d14*/ ADDS        R2, R2, SL 
    /*00020d18*/ ADC         R3, R3, FP 
    /*00020d1c*/ STRD        R2, [R5, #8] 
    /*00020d20*/ LDR         R3, [R6] 
    /*00020d24*/ ADD         R3, R3, SL 
    /*00020d28*/ ADDS        SL, SL, #30976              @ 0x7900 
    /*00020d2c*/ ADC         FP, FP, #0 
    /*00020d30*/ STR         R3, [R5], #24 
    /*00020d34*/ CMP         FP, R9 
    /*00020d38*/ CMPEQ       SL, R8 
    /*00020d3c*/ BNE         VPSS_DRV_MallocModelBuf_x20d00
    /*00020d40*/ B           VPSS_DRV_MallocModelBuf_x20c44
    VPSS_DRV_MallocModelBuf_x20d44:
    /*00020d44*/ MOV         R4, R0 
    /*00020d48*/ B           VPSS_DRV_MallocModelBuf_x20c44
    /*00020d4c*/ LDRDEQ      R1, [R0], -R0 
FUNC_END VPSS_DRV_MallocModelBuf


FUNC_BEGIN VPSS_DRV_FreeModelBuf
    /*00020d50*/ PUSH        {R4, LR} 
    /*00020d54*/ MOV         R4, R0 
    /*00020d58*/ LDR         R2, [R0, #160]              @ 0xa0 
    /*00020d5c*/ LDRD        R0, [R0, #152]              @ 0x98 
    /*00020d60*/ BL          0x0000000000020D60          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*00020d64*/ MOV         R0, R4 
    /*00020d68*/ MOV         R2, #168                    @ 0xa8 
    /*00020d6c*/ MOV         R1, #0 
    /*00020d70*/ POP         {R4, LR} 
    VPSS_DRV_FreeModelBuf_x20d74:
    /*00020d74*/ B           VPSS_DRV_FreeModelBuf_x20d74@ osal_memset [R_ARM_JUMP24: +0x0] 
FUNC_END VPSS_DRV_FreeModelBuf


FUNC_BEGIN VPSS_DRV_UpdateCurLowDelay
    /*00020d78*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00020d7c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00020d80*/ PUSH        {R4, R5, R6, LR} 
    /*00020d84*/ LDR         R3, [R3, R0, LSL #2] 
    /*00020d88*/ ADD         R2, R3, #16384              @ 0x4000 
    /*00020d8c*/ LDR         R5, [R2, #2748]             @ 0xabc 
    /*00020d90*/ CMP         R5, #1 
    /*00020d94*/ BEQ         VPSS_DRV_UpdateCurLowDelay_x20da8
    /*00020d98*/ MOV         R0, R1 
    /*00020d9c*/ MOV         R1, #0 
    /*00020da0*/ POP         {R4, R5, R6, LR} 
    VPSS_DRV_UpdateCurLowDelay_x20da4:
    /*00020da4*/ B           VPSS_DRV_UpdateCurLowDelay_x20da4@ VPSS_HAL_EnableGrpLowDelay [R_ARM_JUMP24: .text+0x27450] 
    VPSS_DRV_UpdateCurLowDelay_x20da8:
    /*00020da8*/ MOVW        R2, #19152                  @ 0x4ad0 
    /*00020dac*/ ADD         R2, R3, R2 
    /*00020db0*/ MOV         R4, R1 
    /*00020db4*/ MOV         R0, R1 
    /*00020db8*/ LDRD        R2, [R2] 
    /*00020dbc*/ BL          0x0000000000020DBC          @ VPSS_HAL_SetGrpLowDelayAddr [R_ARM_CALL: .text+0x27460] 
    /*00020dc0*/ MOV         R1, R5 
    /*00020dc4*/ MOV         R0, R4 
    /*00020dc8*/ POP         {R4, R5, R6, LR} 
    VPSS_DRV_UpdateCurLowDelay_x20dcc:
    /*00020dcc*/ B           VPSS_DRV_UpdateCurLowDelay_x20dcc@ VPSS_HAL_EnableGrpLowDelay [R_ARM_JUMP24: .text+0x27450] 
FUNC_END VPSS_DRV_UpdateCurLowDelay


FUNC_BEGIN VPSS_DRV_Multi_UpdateCurLowDelay
    /*00020dd0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00020dd4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00020dd8*/ PUSH        {R4, R5, R6, LR} 
    /*00020ddc*/ LDR         R5, [R3, R0, LSL #2] 
    /*00020de0*/ ADD         R3, R5, #16384              @ 0x4000 
    /*00020de4*/ LDR         R3, [R3, #2748]             @ 0xabc 
    /*00020de8*/ CMP         R3, #1 
    /*00020dec*/ BEQ         VPSS_DRV_Multi_UpdateCurLowDelay_x20e00
    /*00020df0*/ MOV         R0, R1 
    /*00020df4*/ MOV         R1, #0 
    /*00020df8*/ POP         {R4, R5, R6, LR} 
    VPSS_DRV_Multi_UpdateCurLowDelay_x20dfc:
    /*00020dfc*/ B           VPSS_DRV_Multi_UpdateCurLowDelay_x20dfc@ VPSS_HAL_EnableGrpLowDelay [R_ARM_JUMP24: .text+0x27450] 
    VPSS_DRV_Multi_UpdateCurLowDelay_x20e00:
    /*00020e00*/ MOVW        R3, #19152                  @ 0x4ad0 
    /*00020e04*/ MOV         R6, R2 
    /*00020e08*/ MOV         R0, R1 
    /*00020e0c*/ LDRD        R2, [R3, R5] 
    /*00020e10*/ MOV         R4, R1 
    /*00020e14*/ BL          0x0000000000020E14          @ VPSS_HAL_SetGrpLowDelayAddr [R_ARM_CALL: .text+0x27460] 
    /*00020e18*/ MOV         R2, #856                    @ 0x358 
    /*00020e1c*/ MOVW        R3, #27724                  @ 0x6c4c 
    /*00020e20*/ MLA         R2, R2, R6, R5 
    /*00020e24*/ MOV         R0, R4 
    /*00020e28*/ POP         {R4, R5, R6, LR} 
    /*00020e2c*/ LDR         R1, [R2, R3] 
    VPSS_DRV_Multi_UpdateCurLowDelay_x20e30:
    /*00020e30*/ B           VPSS_DRV_Multi_UpdateCurLowDelay_x20e30@ VPSS_HAL_EnableGrpLowDelay [R_ARM_JUMP24: .text+0x27450] 
FUNC_END VPSS_DRV_Multi_UpdateCurLowDelay


FUNC_BEGIN VpssDrvUpdateDcmp
    /*00020e34*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00020e38*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00020e3c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00020e40*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00020e44*/ LDR         R7, [PC, #264]              @ 0x0000000000020f54 
    /*00020e48*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00020e4c*/ LDR         R5, [IP, R0, LSL #2] 
    /*00020e50*/ SUB         SP, SP, #72                 @ 0x48 
    /*00020e54*/ ADD         R8, R7, #216                @ 0xd8 
    /*00020e58*/ LDR         R6, [R3, R0, LSL #2] 
    /*00020e5c*/ ADD         R4, R5, #16384              @ 0x4000 
    /*00020e60*/ MOV         R9, R1 
    /*00020e64*/ MOV         SL, R2 
    /*00020e68*/ MOV         R1, #0 
    /*00020e6c*/ MOV         R2, #216                    @ 0xd8 
    /*00020e70*/ MOV         R0, R7 
    /*00020e74*/ BL          0x0000000000020E74          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00020e78*/ MOV         R2, #216                    @ 0xd8 
    /*00020e7c*/ MOV         R1, #0 
    /*00020e80*/ MOV         R0, R8 
    /*00020e84*/ BL          0x0000000000020E84          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00020e88*/ LDR         IP, [R4, #2552]             @ 0x9f8 
    /*00020e8c*/ MOV         R1, #0 
    /*00020e90*/ ADD         R3, R6, #28672              @ 0x7000 
    /*00020e94*/ SUBS        R0, IP, R1 
    /*00020e98*/ LDR         R2, [R4, #2564]             @ 0xa04 
    /*00020e9c*/ LDR         R6, [R4, #2572]             @ 0xa0c 
    /*00020ea0*/ MOVNE       R0, #1 
    /*00020ea4*/ LDR         LR, [R4, #2724]             @ 0xaa4 
    /*00020ea8*/ STR         R0, [SP, #44]               @ 0x2c 
    /*00020eac*/ CMP         R2, #1 
    /*00020eb0*/ LDR         R0, [R3, #88]               @ 0x58 
    /*00020eb4*/ LDR         R3, [R3, #92]               @ 0x5c 
    /*00020eb8*/ STR         R2, [SP, #40]               @ 0x28 
    /*00020ebc*/ STR         R6, [SP, #32] 
    /*00020ec0*/ STR         LR, [SP, #36]               @ 0x24 
    /*00020ec4*/ STR         R0, [SP, #52]               @ 0x34 
    /*00020ec8*/ STR         R3, [SP, #56]               @ 0x38 
    /*00020ecc*/ STR         R1, [SP, #60]               @ 0x3c 
    /*00020ed0*/ STR         R1, [SP, #64]               @ 0x40 
    /*00020ed4*/ STR         R1, [SP, #68]               @ 0x44 
    /*00020ed8*/ BEQ         VpssDrvUpdateDcmp_x20f28
    VpssDrvUpdateDcmp_x20edc:
    /*00020edc*/ ADD         R5, R5, #24576              @ 0x6000 
    /*00020ee0*/ MOV         R0, R9 
    /*00020ee4*/ MOV         R1, SP 
    /*00020ee8*/ STR         R7, [SP, #24] 
    /*00020eec*/ LDR         R3, [R5, #3112]             @ 0xc28 
    /*00020ef0*/ LDR         R5, [R4, #2528]             @ 0x9e0 
    /*00020ef4*/ CMP         R3, #1 
    /*00020ef8*/ LDR         R3, [R4, #2560]             @ 0xa00 
    /*00020efc*/ STR         R8, [SP, #28] 
    /*00020f00*/ LDRLS       SL, [R4, #2524]             @ 0x9dc 
    /*00020f04*/ STR         LR, [SP, #8] 
    /*00020f08*/ STR         IP, [SP, #16] 
    /*00020f0c*/ STR         SL, [SP] 
    /*00020f10*/ STR         R2, [SP, #20] 
    /*00020f14*/ STR         R5, [SP, #4] 
    /*00020f18*/ STR         R3, [SP, #12] 
    /*00020f1c*/ BL          0x0000000000020F1C          @ VPSS_HAL_SetCurDcmpAttr [R_ARM_CALL: .text+0x276ec] 
    /*00020f20*/ ADD         SP, SP, #72                 @ 0x48 
    /*00020f24*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VpssDrvUpdateDcmp_x20f28:
    /*00020f28*/ MOV         R0, #2 
    /*00020f2c*/ BL          0x0000000000020F2C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00020f30*/ MOV         R2, R8 
    /*00020f34*/ MOV         R1, R7 
    /*00020f38*/ LDR         R3, [R0, #128]              @ 0x80 
    /*00020f3c*/ ADD         R0, SP, #32 
    /*00020f40*/ BLX         R3 
    /*00020f44*/ LDR         LR, [R4, #2724]             @ 0xaa4 
    /*00020f48*/ LDR         IP, [R4, #2552]             @ 0x9f8 
    /*00020f4c*/ LDR         R2, [R4, #2564]             @ 0xa04 
    /*00020f50*/ B           VpssDrvUpdateDcmp_x20edc
    /*00020f54*/ ANDEQ       R6, R0, IP, LSL #5 
FUNC_END VpssDrvUpdateDcmp


FUNC_BEGIN VpssDrvUpdateCmp
    /*00020f58*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00020f5c*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00020f60*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00020f64*/ SUB         SP, SP, #76                 @ 0x4c 
    /*00020f68*/ MOV         R7, R3 
    /*00020f6c*/ LDR         R5, [IP, R0, LSL #2] 
    /*00020f70*/ MOV         R6, R1 
    /*00020f74*/ MOV         R8, R2 
    /*00020f78*/ BL          0x0000000000020F78          @ VPSS_GET_MODE_BY_GRP [R_ARM_CALL: .text+0x3080] 
    /*00020f7c*/ CMP         R0, #1 
    /*00020f80*/ ADDEQ       R3, R6, #692                @ 0x2b4 
    /*00020f84*/ ADDEQ       R9, R5, #16384              @ 0x4000 
    /*00020f88*/ ADDNE       R9, R5, #16384              @ 0x4000 
    /*00020f8c*/ ADD         R5, R5, #24576              @ 0x6000 
    /*00020f90*/ ADDEQ       R3, R9, R3, LSL #2 
    /*00020f94*/ MOVNE       R4, #0 
    /*00020f98*/ LDREQ       R4, [R3, #2328]             @ 0x918 
    /*00020f9c*/ LDR         R3, [R5, #3112]             @ 0xc28 
    /*00020fa0*/ CMP         R3, #1 
    /*00020fa4*/ BLS         VpssDrvUpdateCmp_x20fd0
    VpssDrvUpdateCmp_x20fa8:
    /*00020fa8*/ MOV         R5, #752                    @ 0x2f0 
    /*00020fac*/ MOV         R3, #376                    @ 0x178 
    /*00020fb0*/ MUL         R5, R5, R6 
    /*00020fb4*/ MLA         R4, R3, R4, R5 
    /*00020fb8*/ ADD         R4, R9, R4 
    /*00020fbc*/ LDR         R3, [R4, #2940]             @ 0xb7c 
    /*00020fc0*/ CMP         R3, #1 
    /*00020fc4*/ BEQ         VpssDrvUpdateCmp_x20fec
    /*00020fc8*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00020fcc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssDrvUpdateCmp_x20fd0:
    /*00020fd0*/ MOV         R2, #752                    @ 0x2f0 
    /*00020fd4*/ MOV         R3, #376                    @ 0x178 
    /*00020fd8*/ MUL         R2, R2, R6 
    /*00020fdc*/ MLA         R3, R3, R4, R2 
    /*00020fe0*/ ADD         R3, R9, R3 
    /*00020fe4*/ LDR         R7, [R3, #2900]             @ 0xb54 
    /*00020fe8*/ B           VpssDrvUpdateCmp_x20fa8
    VpssDrvUpdateCmp_x20fec:
    /*00020fec*/ LDR         FP, [PC, #208]              @ 0x00000000000210c4 
    /*00020ff0*/ MOV         R2, #216                    @ 0xd8 
    /*00020ff4*/ ADD         R9, R9, R5 
    /*00020ff8*/ MOV         R1, #0 
    /*00020ffc*/ ADD         SL, FP, R2 
    /*00021000*/ MOV         R0, FP 
    /*00021004*/ BL          0x0000000000021004          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00021008*/ MOV         R0, SL 
    /*0002100c*/ MOV         R2, #216                    @ 0xd8 
    /*00021010*/ MOV         R1, #0 
    /*00021014*/ BL          0x0000000000021014          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00021018*/ LDR         R2, [R9, #2928]             @ 0xb70 
    /*0002101c*/ LDR         LR, [R4, #2940]             @ 0xb7c 
    /*00021020*/ MOV         R3, #0 
    /*00021024*/ LDR         IP, [R4, #3100]             @ 0xc1c 
    /*00021028*/ SUBS        R2, R2, R3 
    /*0002102c*/ LDR         R1, [R4, #2900]             @ 0xb54 
    /*00021030*/ MOV         R0, #2 
    /*00021034*/ LDR         R5, [R4, #2904]             @ 0xb58 
    /*00021038*/ MOVNE       R2, #1 
    /*0002103c*/ STR         LR, [SP, #40]               @ 0x28 
    /*00021040*/ STR         IP, [SP, #36]               @ 0x24 
    /*00021044*/ STR         R2, [SP, #44]               @ 0x2c 
    /*00021048*/ MOV         R2, #7 
    /*0002104c*/ STR         R1, [SP, #52]               @ 0x34 
    /*00021050*/ STR         R5, [SP, #56]               @ 0x38 
    /*00021054*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00021058*/ STR         R3, [SP, #64]               @ 0x40 
    /*0002105c*/ STR         R3, [SP, #68]               @ 0x44 
    /*00021060*/ STR         R2, [SP, #32] 
    /*00021064*/ BL          0x0000000000021064          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00021068*/ MOV         R2, SL 
    /*0002106c*/ MOV         R1, FP 
    /*00021070*/ LDR         R3, [R0, #128]              @ 0x80 
    /*00021074*/ ADD         R0, SP, #32 
    /*00021078*/ BLX         R3 
    /*0002107c*/ LDR         R9, [R4, #2904]             @ 0xb58 
    /*00021080*/ LDR         R5, [R4, #3100]             @ 0xc1c 
    /*00021084*/ MOV         R1, R6 
    /*00021088*/ LDR         LR, [R4, #2928]             @ 0xb70 
    /*0002108c*/ MOV         R0, R8 
    /*00021090*/ LDR         IP, [R4, #2936]             @ 0xb78 
    /*00021094*/ MOV         R2, SP 
    /*00021098*/ LDR         R3, [R4, #2940]             @ 0xb7c 
    /*0002109c*/ STR         SL, [SP, #28] 
    /*000210a0*/ STR         FP, [SP, #24] 
    /*000210a4*/ STM         SP, {R7, R9} 
    /*000210a8*/ STR         R5, [SP, #8] 
    /*000210ac*/ STR         LR, [SP, #16] 
    /*000210b0*/ STR         IP, [SP, #12] 
    /*000210b4*/ STR         R3, [SP, #20] 
    /*000210b8*/ BL          0x00000000000210B8          @ VPSS_HAL_SetChnCmpAttr [R_ARM_CALL: .text+0x2778c] 
    /*000210bc*/ ADD         SP, SP, #76                 @ 0x4c 
    /*000210c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*000210c4*/ ANDEQ       R6, R0, IP, LSR R4 
FUNC_END VpssDrvUpdateCmp


FUNC_BEGIN VPSS_DRV_MULTI_SetChnCtrl
    /*000210c8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000210cc*/ SUB         SP, SP, #244                @ 0xf4 
    /*000210d0*/ MOV         FP, R0 
    /*000210d4*/ MOV         SL, R2 
    /*000210d8*/ MOV         R9, R1 
    /*000210dc*/ MOV         R2, #48                     @ 0x30 
    /*000210e0*/ ADD         R0, SP, #16 
    /*000210e4*/ MOV         R1, #0 
    /*000210e8*/ MOV         R5, R3 
    /*000210ec*/ BL          0x00000000000210EC          @ memset [R_ARM_CALL: +0x0] 
    /*000210f0*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000210f4*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000210f8*/ MOV         R3, #72                     @ 0x48 
    /*000210fc*/ MOV         R6, #0 
    /*00021100*/ LDR         R4, [R2, FP, LSL #2] 
    /*00021104*/ STR         FP, [SP, #8] 
    /*00021108*/ STR         SL, [SP, #12] 
    /*0002110c*/ MLA         R5, R3, R5, R4 
    /*00021110*/ ADD         R4, R4, #19200              @ 0x4b00 
    /*00021114*/ ADD         R5, R5, #18688              @ 0x4900 
    /*00021118*/ ADD         R5, R5, #60                 @ 0x3c 
    VPSS_DRV_MULTI_SetChnCtrl_x2111c:
    /*0002111c*/ MOV         R0, R6 
    /*00021120*/ BL          0x0000000000021120          @ VPSS_HAL_GetHalChn [R_ARM_CALL: .text+0x263bc] 
    /*00021124*/ LDR         R7, [R5] 
    /*00021128*/ CMP         R7, #1 
    /*0002112c*/ MOVNE       R7, #0 
    /*00021130*/ MOV         R8, R0 
    /*00021134*/ BEQ         VPSS_DRV_MULTI_SetChnCtrl_x21164
    VPSS_DRV_MULTI_SetChnCtrl_x21138:
    /*00021138*/ MOV         R2, R7 
    /*0002113c*/ MOV         R1, R8 
    /*00021140*/ ADD         R6, R6, #1 
    /*00021144*/ MOV         R0, R9 
    /*00021148*/ BL          0x0000000000021148          @ VPSS_HAL_SetChnEn [R_ARM_CALL: .text+0x26538] 
    /*0002114c*/ CMP         R6, #3 
    /*00021150*/ ADD         R5, R5, #24 
    /*00021154*/ ADD         R4, R4, #752                @ 0x2f0 
    /*00021158*/ BNE         VPSS_DRV_MULTI_SetChnCtrl_x2111c
    /*0002115c*/ ADD         SP, SP, #244                @ 0xf4 
    /*00021160*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_MULTI_SetChnCtrl_x21164:
    /*00021164*/ CMP         R6, #1 
    /*00021168*/ LDR         R0, [SP, #12] 
    /*0002116c*/ BEQ         VPSS_DRV_MULTI_SetChnCtrl_x21300
    /*00021170*/ CMP         R6, #2 
    /*00021174*/ BEQ         VPSS_DRV_MULTI_SetChnCtrl_x212d8
    /*00021178*/ LDR         R3, [R0, #764]              @ 0x2fc 
    /*0002117c*/ LDR         R1, [R0, #776]              @ 0x308 
    /*00021180*/ LDR         R2, [R0, #772]              @ 0x304 
    /*00021184*/ STR         R3, [SP, #16] 
    /*00021188*/ LDR         R3, [R0, #740]              @ 0x2e4 
    /*0002118c*/ STR         R1, [SP, #232]              @ 0xe8 
    /*00021190*/ STR         R2, [SP, #56]               @ 0x38 
    /*00021194*/ STR         R3, [SP, #4] 
    VPSS_DRV_MULTI_SetChnCtrl_x21198:
    /*00021198*/ LDR         R3, [R4, #88]               @ 0x58 
    /*0002119c*/ MOV         R1, R8 
    /*000211a0*/ LDR         R2, [SP, #4] 
    /*000211a4*/ MOV         R0, R9 
    /*000211a8*/ BL          0x00000000000211A8          @ VPSS_HAL_SetChnImgSize [R_ARM_CALL: .text+0x269f0] 
    /*000211ac*/ LDRD        SL, [R4, #136]              @ 0x88 
    /*000211b0*/ ADD         R2, SP, #64                 @ 0x40 
    /*000211b4*/ MOV         R1, R8 
    /*000211b8*/ MOV         R0, R9 
    /*000211bc*/ STRD        SL, [SP, #72]               @ 0x48 
    /*000211c0*/ LDRD        SL, [R4, #144]              @ 0x90 
    /*000211c4*/ STRD        SL, [SP, #80]               @ 0x50 
    /*000211c8*/ LDRD        SL, [R4] 
    /*000211cc*/ STRD        SL, [SP, #88]               @ 0x58 
    /*000211d0*/ LDRD        SL, [R4, #8] 
    /*000211d4*/ STRD        SL, [SP, #96]               @ 0x60 
    /*000211d8*/ LDR         R3, [R4, #64]               @ 0x40 
    /*000211dc*/ STR         R3, [SP, #136]              @ 0x88 
    /*000211e0*/ LDR         R3, [R4, #68]               @ 0x44 
    /*000211e4*/ STR         R3, [SP, #140]              @ 0x8c 
    /*000211e8*/ LDRD        SL, [R4, #240]              @ 0xf0 
    /*000211ec*/ STRD        SL, [SP, #152]              @ 0x98 
    /*000211f0*/ LDRD        SL, [R4, #248]              @ 0xf8 
    /*000211f4*/ STRD        SL, [SP, #160]              @ 0xa0 
    /*000211f8*/ LDR         R3, [R4, #264]              @ 0x108 
    /*000211fc*/ STR         R3, [SP, #168]              @ 0xa8 
    /*00021200*/ LDR         R3, [R4, #268]              @ 0x10c 
    /*00021204*/ STR         R3, [SP, #172]              @ 0xac 
    /*00021208*/ BL          0x0000000000021208          @ VPSS_HAL_SetChnPicAddr [R_ARM_CALL: .text+0x26c7c] 
    /*0002120c*/ LDR         R2, [SP, #232]              @ 0xe8 
    /*00021210*/ MOV         R1, R8 
    /*00021214*/ MOV         R0, R9 
    /*00021218*/ BL          0x0000000000021218          @ VPSS_HAL_SetChnOffset [R_ARM_CALL: .text+0x26c34] 
    /*0002121c*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*00021220*/ ADD         R2, SP, #16 
    /*00021224*/ MOV         R1, R8 
    /*00021228*/ MOV         R0, R9 
    /*0002122c*/ LSR         R3, R3, #5 
    /*00021230*/ STR         R3, [SP, #24] 
    /*00021234*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*00021238*/ LSR         R3, R3, #5 
    /*0002123c*/ STR         R3, [SP, #28] 
    /*00021240*/ LDR         R3, [R4, #124]              @ 0x7c 
    /*00021244*/ SUB         IP, R3, #1 
    /*00021248*/ SUB         R3, R3, #2 
    /*0002124c*/ CLZ         IP, IP 
    /*00021250*/ CLZ         R3, R3 
    /*00021254*/ LSR         IP, IP, #5 
    /*00021258*/ STR         IP, [SP, #36]               @ 0x24 
    /*0002125c*/ STR         IP, [SP, #32] 
    /*00021260*/ LSR         R3, R3, #5 
    /*00021264*/ LDR         IP, [R5, #12] 
    /*00021268*/ STR         IP, [SP, #20] 
    /*0002126c*/ LDR         IP, [R5, #4] 
    /*00021270*/ STR         IP, [SP, #16] 
    /*00021274*/ LDR         IP, [R5, #20] 
    /*00021278*/ STR         IP, [SP, #60]               @ 0x3c 
    /*0002127c*/ LDR         IP, [R4, #284]              @ 0x11c 
    /*00021280*/ CMP         IP, #28 
    /*00021284*/ CMPNE       IP, #25 
    /*00021288*/ MOVEQ       IP, #1 
    /*0002128c*/ MOVNE       IP, #0 
    /*00021290*/ STR         IP, [SP, #44]               @ 0x2c 
    /*00021294*/ LDR         IP, [R4, #112]              @ 0x70 
    /*00021298*/ ADDS        IP, IP, #0 
    /*0002129c*/ MOVNE       IP, #1 
    /*000212a0*/ STR         IP, [SP, #48]               @ 0x30 
    /*000212a4*/ LDR         IP, [R4, #120]              @ 0x78 
    /*000212a8*/ STR         R3, [SP, #40]               @ 0x28 
    /*000212ac*/ SUB         R3, IP, #2 
    /*000212b0*/ CLZ         R3, R3 
    /*000212b4*/ LSR         R3, R3, #5 
    /*000212b8*/ STR         R3, [SP, #52]               @ 0x34 
    /*000212bc*/ BL          0x00000000000212BC          @ VPSS_HAL_SetChnCtrl [R_ARM_CALL: .text+0x26840] 
    /*000212c0*/ LDR         R3, [SP, #4] 
    /*000212c4*/ MOV         R2, R9 
    /*000212c8*/ MOV         R1, R8 
    /*000212cc*/ LDR         R0, [SP, #8] 
    /*000212d0*/ BL          0x00000000000212D0          @ VpssDrvUpdateCmp [R_ARM_CALL: .text+0x20f58] 
    /*000212d4*/ B           VPSS_DRV_MULTI_SetChnCtrl_x21138
    VPSS_DRV_MULTI_SetChnCtrl_x212d8:
    /*000212d8*/ LDR         R1, [R0, #848]              @ 0x350 
    /*000212dc*/ LDR         R2, [R0, #844]              @ 0x34c 
    /*000212e0*/ LDR         R3, [R0, #840]              @ 0x348 
    /*000212e4*/ LDR         IP, [R0, #828]              @ 0x33c 
    /*000212e8*/ STR         R1, [SP, #232]              @ 0xe8 
    /*000212ec*/ LDR         R7, [R0, #824]              @ 0x338 
    /*000212f0*/ STR         IP, [SP, #4] 
    /*000212f4*/ STR         R2, [SP, #56]               @ 0x38 
    /*000212f8*/ STR         R3, [SP, #16] 
    /*000212fc*/ B           VPSS_DRV_MULTI_SetChnCtrl_x21198
    VPSS_DRV_MULTI_SetChnCtrl_x21300:
    /*00021300*/ LDR         R2, [R0, #812]              @ 0x32c 
    /*00021304*/ LDR         R1, [R0, #816]              @ 0x330 
    /*00021308*/ LDR         R3, [R0, #808]              @ 0x328 
    /*0002130c*/ STR         R2, [SP, #56]               @ 0x38 
    /*00021310*/ LDR         R2, [R0, #796]              @ 0x31c 
    /*00021314*/ STR         R1, [SP, #232]              @ 0xe8 
    /*00021318*/ STR         R3, [SP, #16] 
    /*0002131c*/ STR         R2, [SP, #4] 
    /*00021320*/ LDR         R7, [R0, #792]              @ 0x318 
    /*00021324*/ B           VPSS_DRV_MULTI_SetChnCtrl_x21198
FUNC_END VPSS_DRV_MULTI_SetChnCtrl


FUNC_BEGIN VpssDrvUpdateCur
    /*00021328*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0002132c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00021330*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00021334*/ MOV         R5, R1 
    /*00021338*/ LDR         R6, [R3, R0, LSL #2] 
    /*0002133c*/ MOV         R7, R2 
    /*00021340*/ SUB         SP, SP, #180                @ 0xb4 
    /*00021344*/ ADD         R4, R6, #16384              @ 0x4000 
    /*00021348*/ ADD         LR, R4, #2336               @ 0x920 
    /*0002134c*/ ADD         R3, R4, #2640               @ 0xa50 
    /*00021350*/ ADD         IP, R4, #2656               @ 0xa60 
    /*00021354*/ LDRD        R0, [LR, #240]              @ 0xf0 
    /*00021358*/ LDRD        R2, [R3] 
    /*0002135c*/ STRD        R0, [SP, #8] 
    /*00021360*/ STRD        R2, [SP, #40]               @ 0x28 
    /*00021364*/ LDRD        R0, [LR, #248]              @ 0xf8 
    /*00021368*/ LDRD        R2, [LR, #104]              @ 0x68 
    /*0002136c*/ STRD        R0, [SP, #16] 
    /*00021370*/ STRD        R2, [SP, #24] 
    /*00021374*/ LDRD        R0, [LR, #112]              @ 0x70 
    /*00021378*/ LDRD        R2, [IP, #-8] 
    /*0002137c*/ LDR         IP, [R4, #2564]             @ 0xa04 
    /*00021380*/ STRD        R0, [SP, #32] 
    /*00021384*/ STRD        R2, [SP, #48]               @ 0x30 
    /*00021388*/ ADDS        R1, IP, #0 
    /*0002138c*/ LDR         R0, [R4, #2560]             @ 0xa00 
    /*00021390*/ LDR         R2, [R4, #2528]             @ 0x9e0 
    /*00021394*/ MOVNE       R1, #1 
    /*00021398*/ LDR         R3, [R4, #2504]             @ 0x9c8 
    /*0002139c*/ LDR         LR, [R4, #2524]             @ 0x9dc 
    /*000213a0*/ STR         IP, [SP, #140]              @ 0x8c 
    /*000213a4*/ STR         R1, [SP, #144]              @ 0x90 
    /*000213a8*/ CMP         R0, #0 
    /*000213ac*/ ORRNE       R1, R1, #1 
    /*000213b0*/ LDR         IP, [R4, #2508]             @ 0x9cc 
    /*000213b4*/ CMP         R1, #0 
    /*000213b8*/ STR         R0, [SP, #152]              @ 0x98 
    /*000213bc*/ STR         R2, [SP, #4] 
    /*000213c0*/ LDR         R0, [R4, #2664]             @ 0xa68 
    /*000213c4*/ LDR         R2, [R4, #2604]             @ 0xa2c 
    /*000213c8*/ STR         R3, [SP, #72]               @ 0x48 
    /*000213cc*/ LDR         R3, [R4, #2600]             @ 0xa28 
    /*000213d0*/ STR         LR, [SP] 
    /*000213d4*/ STR         IP, [SP, #76]               @ 0x4c 
    /*000213d8*/ STR         R2, [SP, #116]              @ 0x74 
    /*000213dc*/ STR         R0, [SP, #80]               @ 0x50 
    /*000213e0*/ MOV         R0, R5 
    /*000213e4*/ STR         R3, [SP, #112]              @ 0x70 
    /*000213e8*/ LDR         R3, [R4, #2552]             @ 0x9f8 
    /*000213ec*/ STREQ       R1, [SP, #168]              @ 0xa8 
    /*000213f0*/ STREQ       R1, [SP, #164]              @ 0xa4 
    /*000213f4*/ MOV         R1, SP 
    /*000213f8*/ STR         R3, [SP, #156]              @ 0x9c 
    /*000213fc*/ ADDNE       R3, R6, #12288              @ 0x3000 
    /*00021400*/ LDRNE       R2, [R3, #3208]             @ 0xc88 
    /*00021404*/ LDRNE       R3, [R3, #3212]             @ 0xc8c 
    /*00021408*/ STRNE       R2, [SP, #168]              @ 0xa8 
    /*0002140c*/ STRNE       R3, [SP, #164]              @ 0xa4 
    /*00021410*/ BL          0x0000000000021410          @ VPSS_HAL_SetCurCtrl [R_ARM_CALL: .text+0x26af4] 
    /*00021414*/ LDR         R2, [R4, #2528]             @ 0x9e0 
    /*00021418*/ MOV         R0, R5 
    /*0002141c*/ LDR         R1, [R4, #2524]             @ 0x9dc 
    /*00021420*/ BL          0x0000000000021420          @ VPSS_HAL_SetSrcImgSize [R_ARM_CALL: .text+0x2697c] 
    /*00021424*/ LDR         R1, [R4, #2724]             @ 0xaa4 
    /*00021428*/ MOV         R0, R5 
    /*0002142c*/ SUB         R1, R1, #25 
    /*00021430*/ CLZ         R1, R1 
    /*00021434*/ LSR         R1, R1, #5 
    /*00021438*/ BL          0x0000000000021438          @ VPSS_HAL_SetSrcImgType [R_ARM_CALL: .text+0x269d0] 
    /*0002143c*/ LDR         R3, [R6, #28] 
    /*00021440*/ CMP         R3, #1 
    /*00021444*/ BEQ         VpssDrvUpdateCur_x21468
    VpssDrvUpdateCur_x21448:
    /*00021448*/ LDR         R3, [R4, #2724]             @ 0xaa4 
    /*0002144c*/ CMP         R3, #39                     @ 0x27 
    /*00021450*/ BEQ         VpssDrvUpdateCur_x2147c
    /*00021454*/ MOV         R0, R5 
    /*00021458*/ MOV         R1, #0 
    /*0002145c*/ BL          0x000000000002145C          @ VPSS_HAL_SetImgWorkType [R_ARM_CALL: .text+0x269e0] 
    VpssDrvUpdateCur_x21460:
    /*00021460*/ ADD         SP, SP, #180                @ 0xb4 
    /*00021464*/ POP         {R4, R5, R6, R7, PC} 
    VpssDrvUpdateCur_x21468:
    /*00021468*/ LDR         R3, [R6, #32] 
    /*0002146c*/ CMP         R3, #1 
    /*00021470*/ BNE         VpssDrvUpdateCur_x21448
    /*00021474*/ CMP         R7, #0 
    /*00021478*/ BNE         VpssDrvUpdateCur_x21490
    VpssDrvUpdateCur_x2147c:
    /*0002147c*/ MOV         R0, R5 
    /*00021480*/ MOV         R1, #1 
    /*00021484*/ BL          0x0000000000021484          @ VPSS_HAL_SetImgWorkType [R_ARM_CALL: .text+0x269e0] 
    /*00021488*/ ADD         SP, SP, #180                @ 0xb4 
    /*0002148c*/ POP         {R4, R5, R6, R7, PC} 
    VpssDrvUpdateCur_x21490:
    /*00021490*/ MOV         R0, R5 
    /*00021494*/ MOV         R1, #2 
    /*00021498*/ BL          0x0000000000021498          @ VPSS_HAL_SetImgWorkType [R_ARM_CALL: .text+0x269e0] 
    /*0002149c*/ B           VpssDrvUpdateCur_x21460
FUNC_END VpssDrvUpdateCur


FUNC_BEGIN VPSS_DRV_UpdateLowDelayAttr
    /*000214a0*/ PUSH        {R4, LR} 
    /*000214a4*/ MOV         R2, #16 
    /*000214a8*/ BL          0x00000000000214A8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000214ac*/ MOV         R0, #0 
    /*000214b0*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_UpdateLowDelayAttr


FUNC_BEGIN VpssDrvSetLowDelayAttr
    /*000214b4*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000214b8*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000214bc*/ PUSH        {R4, LR} 
    /*000214c0*/ MOVW        R3, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*000214c4*/ LDR         R2, [R2, R0, LSL #2] 
    /*000214c8*/ MOVT        R3, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*000214cc*/ ADD         R1, R2, #12288              @ 0x3000 
    /*000214d0*/ ADD         R2, R2, #15744              @ 0x3d80 
    /*000214d4*/ LDR         R0, [R3, R0, LSL #2] 
    /*000214d8*/ ADD         R2, R2, #32 
    /*000214dc*/ LDR         R1, [R1, #3484]             @ 0xd9c 
    /*000214e0*/ BL          0x00000000000214E0          @ VPSS_HAL_SetChnLowDelayAttr [R_ARM_CALL: .text+0x26634] 
    /*000214e4*/ MOV         R0, #0 
    /*000214e8*/ POP         {R4, PC} 
FUNC_END VpssDrvSetLowDelayAttr


FUNC_BEGIN VPSS_DRV_OUT_32B_Align
    /*000214ec*/ BX          LR 
FUNC_END VPSS_DRV_OUT_32B_Align


FUNC_BEGIN VpssDrvTransVideoToHalImage
    /*000214f0*/ PUSH        {R4, R5, LR} 
    /*000214f4*/ MOV         R3, R0 
    /*000214f8*/ STR         R1, [R0, #292]              @ 0x124 
    /*000214fc*/ MOV         IP, R2 
    /*00021500*/ LDR         LR, [R2, #4] 
    /*00021504*/ ADD         R1, R2, #264                @ 0x108 
    /*00021508*/ ADD         R0, R0, #312                @ 0x138 
    /*0002150c*/ MOV         R2, #64                     @ 0x40 
    /*00021510*/ STR         LR, [R3, #88]               @ 0x58 
    /*00021514*/ LDR         LR, [IP] 
    /*00021518*/ STR         LR, [R3, #84]               @ 0x54 
    /*0002151c*/ LDR         LR, [IP, #20] 
    /*00021520*/ STR         LR, [R3, #124]              @ 0x7c 
    /*00021524*/ LDR         LR, [IP, #16] 
    /*00021528*/ STR         LR, [R3, #120]              @ 0x78 
    /*0002152c*/ LDR         LR, [IP, #12] 
    /*00021530*/ STR         LR, [R3, #284]              @ 0x11c 
    /*00021534*/ LDRD        R4, [IP, #96]               @ 0x60 
    /*00021538*/ STRD        R4, [R3, #176]              @ 0xb0 
    /*0002153c*/ LDRD        R4, [IP, #104]              @ 0x68 
    /*00021540*/ STRD        R4, [R3, #184]              @ 0xb8 
    /*00021544*/ LDRD        R4, [IP, #72]               @ 0x48 
    /*00021548*/ STRD        R4, [R3, #136]              @ 0x88 
    /*0002154c*/ LDRD        R4, [IP, #80]               @ 0x50 
    /*00021550*/ STRD        R4, [R3, #144]              @ 0x90 
    /*00021554*/ LDR         LR, [IP, #32] 
    /*00021558*/ STR         LR, [R3, #160]              @ 0xa0 
    /*0002155c*/ LDR         LR, [IP, #36]               @ 0x24 
    /*00021560*/ STR         LR, [R3, #164]              @ 0xa4 
    /*00021564*/ LDR         LR, [IP, #40]               @ 0x28 
    /*00021568*/ STR         LR, [R3, #168]              @ 0xa8 
    /*0002156c*/ LDRD        R4, [IP, #120]              @ 0x78 
    /*00021570*/ STRD        R4, [R3] 
    /*00021574*/ LDRD        R4, [IP, #128]              @ 0x80 
    /*00021578*/ STRD        R4, [R3, #8] 
    /*0002157c*/ LDRD        R4, [IP, #136]              @ 0x88 
    /*00021580*/ STRD        R4, [R3, #16] 
    /*00021584*/ LDRD        R4, [IP, #168]              @ 0xa8 
    /*00021588*/ STRD        R4, [R3, #200]              @ 0xc8 
    /*0002158c*/ LDRD        R4, [IP, #176]              @ 0xb0 
    /*00021590*/ STRD        R4, [R3, #208]              @ 0xd0 
    /*00021594*/ LDRD        R4, [IP, #184]              @ 0xb8 
    /*00021598*/ STRD        R4, [R3, #216]              @ 0xd8 
    /*0002159c*/ LDR         LR, [IP, #56]               @ 0x38 
    /*000215a0*/ STR         LR, [R3, #224]              @ 0xe0 
    /*000215a4*/ LDR         LR, [IP, #60]               @ 0x3c 
    /*000215a8*/ STR         LR, [R3, #228]              @ 0xe4 
    /*000215ac*/ LDR         LR, [IP, #64]               @ 0x40 
    /*000215b0*/ STR         LR, [R3, #232]              @ 0xe8 
    /*000215b4*/ LDR         LR, [IP, #44]               @ 0x2c 
    /*000215b8*/ STR         LR, [R3, #64]               @ 0x40 
    /*000215bc*/ LDR         LR, [IP, #48]               @ 0x30 
    /*000215c0*/ STR         LR, [R3, #68]               @ 0x44 
    /*000215c4*/ LDR         LR, [IP, #52]               @ 0x34 
    /*000215c8*/ STR         LR, [R3, #72]               @ 0x48 
    /*000215cc*/ LDRD        R4, [IP, #144]              @ 0x90 
    /*000215d0*/ STRD        R4, [R3, #40]               @ 0x28 
    /*000215d4*/ LDRD        R4, [IP, #152]              @ 0x98 
    /*000215d8*/ STRD        R4, [R3, #48]               @ 0x30 
    /*000215dc*/ LDRD        R4, [IP, #160]              @ 0xa0 
    /*000215e0*/ STRD        R4, [R3, #56]               @ 0x38 
    /*000215e4*/ LDR         LR, [IP, #24] 
    /*000215e8*/ STR         LR, [R3, #112]              @ 0x70 
    /*000215ec*/ LDR         IP, [IP, #28] 
    /*000215f0*/ STR         IP, [R3, #116]              @ 0x74 
    /*000215f4*/ POP         {R4, R5, LR} 
    VpssDrvTransVideoToHalImage_x215f8:
    /*000215f8*/ B           VpssDrvTransVideoToHalImage_x215f8@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VpssDrvTransVideoToHalImage


FUNC_BEGIN VPSS_DRV_PrepareHwInfo
    /*000215fc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00021600*/ MOV         R7, R1 
    /*00021604*/ LDR         IP, [R7] 
    /*00021608*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0002160c*/ MOV         R8, R2 
    /*00021610*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00021614*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00021618*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0002161c*/ LDR         R2, [IP, #20] 
    /*00021620*/ SUB         SP, SP, #20 
    /*00021624*/ LDR         R4, [R1, R0, LSL #2] 
    /*00021628*/ MOV         R6, R0 
    /*0002162c*/ CMP         R2, #0 
    /*00021630*/ LDR         LR, [R3, R0, LSL #2] 
    /*00021634*/ ADD         R9, R4, #12288              @ 0x3000 
    /*00021638*/ BNE         VPSS_DRV_PrepareHwInfo_x21648
    /*0002163c*/ LDR         R3, [IP, #16] 
    /*00021640*/ CMP         R3, #0 
    /*00021644*/ BEQ         VPSS_DRV_PrepareHwInfo_x21800
    VPSS_DRV_PrepareHwInfo_x21648:
    /*00021648*/ LDR         R0, [R9, #3200]             @ 0xc80 
    /*0002164c*/ LDR         R2, [R9, #3176]             @ 0xc68 
    VPSS_DRV_PrepareHwInfo_x21650:
    /*00021650*/ ADD         R5, R4, #16384              @ 0x4000 
    /*00021654*/ CMP         R2, #2048                   @ 0x800 
    /*00021658*/ MOV         R3, #0 
    /*0002165c*/ LDR         SL, [R5, #2524]             @ 0x9dc 
    /*00021660*/ LDR         R1, [R5, #616]              @ 0x268 
    /*00021664*/ STR         R3, [R5, #688]              @ 0x2b0 
    /*00021668*/ BLS         VPSS_DRV_PrepareHwInfo_x216c0
    /*0002166c*/ LDR         R3, [R7] 
    /*00021670*/ LDR         IP, [R3, #20] 
    /*00021674*/ CMP         IP, #0 
    /*00021678*/ BNE         VPSS_DRV_PrepareHwInfo_x217ec
    VPSS_DRV_PrepareHwInfo_x2167c:
    /*0002167c*/ LDR         R3, [R5, #636]              @ 0x27c 
    /*00021680*/ CMP         IP, R3 
    /*00021684*/ BEQ         VPSS_DRV_PrepareHwInfo_x219d0
    VPSS_DRV_PrepareHwInfo_x21688:
    /*00021688*/ MOV         R3, #1 
    VPSS_DRV_PrepareHwInfo_x2168c:
    /*0002168c*/ MOV         R0, #72                     @ 0x48 
    /*00021690*/ MOVW        IP, #18748                  @ 0x493c 
    /*00021694*/ MLA         R0, R0, R8, R4 
    /*00021698*/ LDR         R0, [R0, IP] 
    /*0002169c*/ CMP         R0, #0 
    /*000216a0*/ BNE         VPSS_DRV_PrepareHwInfo_x2184c
    /*000216a4*/ ADD         LR, LR, #24576              @ 0x6000 
    /*000216a8*/ LDR         R0, [LR, #3964]             @ 0xf7c 
    /*000216ac*/ CMP         R0, #1 
    /*000216b0*/ BEQ         VPSS_DRV_PrepareHwInfo_x21874
    VPSS_DRV_PrepareHwInfo_x216b4:
    /*000216b4*/ STR         R2, [R5, #2908]             @ 0xb5c 
    /*000216b8*/ LDR         R0, [R9, #3180]             @ 0xc6c 
    /*000216bc*/ STR         R0, [R5, #2912]             @ 0xb60 
    VPSS_DRV_PrepareHwInfo_x216c0:
    /*000216c0*/ CMP         R1, R2 
    /*000216c4*/ BEQ         VPSS_DRV_PrepareHwInfo_x2180c
    VPSS_DRV_PrepareHwInfo_x216c8:
    /*000216c8*/ ADD         R1, R4, #15424              @ 0x3c40 
    /*000216cc*/ ADD         R0, R4, #16896              @ 0x4200 
    /*000216d0*/ MOV         R2, #24 
    /*000216d4*/ ADD         R1, R1, #32 
    /*000216d8*/ ADD         R0, R0, #96                 @ 0x60 
    /*000216dc*/ MOV         SL, #1 
    /*000216e0*/ STR         SL, [R4, #980]              @ 0x3d4 
    /*000216e4*/ BL          0x00000000000216E4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000216e8*/ LDR         R2, [R7] 
    /*000216ec*/ LDR         R3, [R5, #616]              @ 0x268 
    /*000216f0*/ LDR         R2, [R2, #20] 
    /*000216f4*/ STR         R2, [R5, #636]              @ 0x27c 
    /*000216f8*/ LDR         R2, [R9, #3176]             @ 0xc68 
    /*000216fc*/ CMP         R2, R3 
    /*00021700*/ BEQ         VPSS_DRV_PrepareHwInfo_x21838
    VPSS_DRV_PrepareHwInfo_x21704:
    /*00021704*/ ADD         R2, R4, #18176              @ 0x4700 
    /*00021708*/ MOV         R3, #1 
    /*0002170c*/ ADD         R2, R2, #68                 @ 0x44 
    /*00021710*/ STR         R3, [R5, #1872]             @ 0x750 
    /*00021714*/ MOV         R1, #0 
    /*00021718*/ MOV         R0, R6 
    /*0002171c*/ BL          0x000000000002171C          @ VPSS_DRV_GetCover [R_ARM_CALL: .text+0x18714] 
    /*00021720*/ MOV         R2, SL 
    /*00021724*/ MOV         R1, R8 
    /*00021728*/ MOV         R0, R6 
    /*0002172c*/ BL          0x000000000002172C          @ VPSS_DRV_PrepareRegionInfo [R_ARM_CALL: .text+0x1cdd8] 
    /*00021730*/ LDR         R2, [R5, #1872]             @ 0x750 
    /*00021734*/ MOV         R1, #0 
    /*00021738*/ MOV         R0, R6 
    /*0002173c*/ BL          0x000000000002173C          @ VPSS_DRV_PutCover [R_ARM_CALL: .text+0x18910] 
    /*00021740*/ MOV         R0, R6 
    /*00021744*/ BL          0x0000000000021744          @ VPSS_DRV_GetRgnGrpMosaic [R_ARM_CALL: .text+0x1d7c4] 
    /*00021748*/ MOV         R0, R6 
    /*0002174c*/ BL          0x000000000002174C          @ VPSS_DRV_PrepareMosaicInfo [R_ARM_CALL: .text+0x1cb1c] 
    /*00021750*/ LDR         R3, [R5, #196]              @ 0xc4 
    /*00021754*/ CMP         R3, #1 
    /*00021758*/ BEQ         VPSS_DRV_PrepareHwInfo_x218bc
    VPSS_DRV_PrepareHwInfo_x2175c:
    /*0002175c*/ CMP         R3, #0 
    /*00021760*/ BEQ         VPSS_DRV_PrepareHwInfo_x2177c
    /*00021764*/ LDR         R3, [R7] 
    /*00021768*/ LDR         R3, [R3] 
    /*0002176c*/ STR         R3, [R5, #2332]             @ 0x91c 
    /*00021770*/ LDR         R3, [R7] 
    /*00021774*/ LDR         R3, [R3, #4] 
    /*00021778*/ STR         R3, [R5, #2336]             @ 0x920 
    VPSS_DRV_PrepareHwInfo_x2177c:
    /*0002177c*/ MOV         R3, #72                     @ 0x48 
    /*00021780*/ STR         R6, [R5, #2328]             @ 0x918 
    /*00021784*/ MLA         R3, R3, R8, R4 
    /*00021788*/ MOV         R7, #0 
    /*0002178c*/ ADD         R5, R3, #18688              @ 0x4900 
    /*00021790*/ ADD         R5, R5, #64                 @ 0x40 
    VPSS_DRV_PrepareHwInfo_x21794:
    /*00021794*/ LDR         R3, [R4, #80]               @ 0x50 
    /*00021798*/ MOV         R2, R7 
    /*0002179c*/ MOV         R1, R8 
    /*000217a0*/ ADD         R7, R7, #1 
    /*000217a4*/ MOV         R0, R6 
    /*000217a8*/ ADD         R4, R4, #72                 @ 0x48 
    /*000217ac*/ STR         R3, [R5] 
    /*000217b0*/ ADD         R5, R5, #24 
    /*000217b4*/ LDR         R3, [R4, #12] 
    /*000217b8*/ STR         R3, [R5, #-16] 
    /*000217bc*/ LDR         R3, [R4, #-12] 
    /*000217c0*/ SUB         R3, R3, #28 
    /*000217c4*/ CMP         R3, #1 
    /*000217c8*/ MOVHI       R3, #0 
    /*000217cc*/ MOVLS       R3, #1 
    /*000217d0*/ STR         R3, [R5, #-8] 
    /*000217d4*/ BL          0x00000000000217D4          @ VPSS_DRV_UpdateChnScaleEn [R_ARM_CALL: .text+0x20228] 
    /*000217d8*/ CMP         R7, #3 
    /*000217dc*/ BNE         VPSS_DRV_PrepareHwInfo_x21794
    /*000217e0*/ MOV         R0, #0 
    /*000217e4*/ ADD         SP, SP, #20 
    /*000217e8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_PrepareHwInfo_x217ec:
    /*000217ec*/ LDR         FP, [R9, #3168]             @ 0xc60 
    /*000217f0*/ LDR         R3, [R5, #608]              @ 0x260 
    /*000217f4*/ CMP         FP, R3 
    /*000217f8*/ BNE         VPSS_DRV_PrepareHwInfo_x21688
    /*000217fc*/ B           VPSS_DRV_PrepareHwInfo_x2167c
    VPSS_DRV_PrepareHwInfo_x21800:
    /*00021800*/ LDR         R0, [R9, #3176]             @ 0xc68 
    /*00021804*/ MOV         R2, R0 
    /*00021808*/ B           VPSS_DRV_PrepareHwInfo_x21650
    VPSS_DRV_PrepareHwInfo_x2180c:
    /*0002180c*/ LDR         R1, [R9, #3180]             @ 0xc6c 
    /*00021810*/ LDR         R2, [R5, #620]              @ 0x26c 
    /*00021814*/ CMP         R1, R2 
    /*00021818*/ BNE         VPSS_DRV_PrepareHwInfo_x216c8
    /*0002181c*/ LDR         R2, [R5, #684]              @ 0x2ac 
    /*00021820*/ CMP         R2, #1 
    /*00021824*/ ORREQ       R3, R3, #1 
    /*00021828*/ CMP         R3, #0 
    /*0002182c*/ BNE         VPSS_DRV_PrepareHwInfo_x216c8
    VPSS_DRV_PrepareHwInfo_x21830:
    /*00021830*/ MOV         SL, #0 
    /*00021834*/ B           VPSS_DRV_PrepareHwInfo_x21704
    VPSS_DRV_PrepareHwInfo_x21838:
    /*00021838*/ LDR         R2, [R9, #3180]             @ 0xc6c 
    /*0002183c*/ LDR         R3, [R5, #620]              @ 0x26c 
    /*00021840*/ CMP         R2, R3 
    /*00021844*/ BNE         VPSS_DRV_PrepareHwInfo_x21704
    /*00021848*/ B           VPSS_DRV_PrepareHwInfo_x21830
    VPSS_DRV_PrepareHwInfo_x2184c:
    /*0002184c*/ LDR         R0, [R4, #836]              @ 0x344 
    /*00021850*/ LDR         IP, [R5, #640]              @ 0x280 
    /*00021854*/ CMP         IP, R0 
    /*00021858*/ BEQ         VPSS_DRV_PrepareHwInfo_x21898
    /*0002185c*/ LDR         IP, [R4, #848]              @ 0x350 
    /*00021860*/ LDR         LR, [R4, #840]              @ 0x348 
    VPSS_DRV_PrepareHwInfo_x21864:
    /*00021864*/ STR         R0, [R5, #640]              @ 0x280 
    /*00021868*/ STR         IP, [R5, #652]              @ 0x28c 
    /*0002186c*/ STR         LR, [R5, #644]              @ 0x284 
    /*00021870*/ B           VPSS_DRV_PrepareHwInfo_x216c0
    VPSS_DRV_PrepareHwInfo_x21874:
    /*00021874*/ LDR         IP, [R5, #684]              @ 0x2ac 
    /*00021878*/ ORRS        IP, R3, IP 
    /*0002187c*/ BNE         VPSS_DRV_PrepareHwInfo_x216b4
    /*00021880*/ LDR         LR, [R5, #2900]             @ 0xb54 
    /*00021884*/ CMP         LR, #0 
    /*00021888*/ STRNE       R0, [R5, #688]              @ 0x2b0 
    /*0002188c*/ MOVNE       R3, IP 
    /*00021890*/ BNE         VPSS_DRV_PrepareHwInfo_x216c0
    /*00021894*/ B           VPSS_DRV_PrepareHwInfo_x216b4
    VPSS_DRV_PrepareHwInfo_x21898:
    /*00021898*/ LDR         LR, [R5, #652]              @ 0x28c 
    /*0002189c*/ LDR         IP, [R4, #848]              @ 0x350 
    /*000218a0*/ CMP         LR, IP 
    /*000218a4*/ LDR         LR, [R4, #840]              @ 0x348 
    /*000218a8*/ BNE         VPSS_DRV_PrepareHwInfo_x21864
    /*000218ac*/ LDR         SL, [R5, #644]              @ 0x284 
    /*000218b0*/ CMP         SL, LR 
    /*000218b4*/ BNE         VPSS_DRV_PrepareHwInfo_x21864
    /*000218b8*/ B           VPSS_DRV_PrepareHwInfo_x216c0
    VPSS_DRV_PrepareHwInfo_x218bc:
    /*000218bc*/ ADD         R0, R4, #18688              @ 0x4900 
    /*000218c0*/ LDR         R2, [R7] 
    /*000218c4*/ ADD         R0, R0, #136                @ 0x88 
    /*000218c8*/ MOV         R1, #0 
    /*000218cc*/ BL          0x00000000000218CC          @ VpssDrvTransVideoToHalImage [R_ARM_CALL: .text+0x214f0] 
    /*000218d0*/ LDR         R3, [R7] 
    /*000218d4*/ LDR         R3, [R3, #332]              @ 0x14c 
    /*000218d8*/ STR         R3, [R5, #2572]             @ 0xa0c 
    /*000218dc*/ LDR         R3, [R7] 
    /*000218e0*/ LDR         R2, [R3, #20] 
    /*000218e4*/ CMP         R2, #0 
    /*000218e8*/ BNE         VPSS_DRV_PrepareHwInfo_x218f8
    /*000218ec*/ LDR         R3, [R3, #16] 
    /*000218f0*/ CMP         R3, #0 
    /*000218f4*/ BEQ         VPSS_DRV_PrepareHwInfo_x219f0
    VPSS_DRV_PrepareHwInfo_x218f8:
    /*000218f8*/ LDR         R2, [R9, #3200]             @ 0xc80 
    /*000218fc*/ MOVW        R3, #18832                  @ 0x4990 
    /*00021900*/ ADD         IP, R4, R3 
    /*00021904*/ MOVW        SL, #18864                  @ 0x49b0 
    /*00021908*/ STR         R2, [R5, #2524]             @ 0x9dc 
    /*0002190c*/ MOVW        R2, #18880                  @ 0x49c0 
    /*00021910*/ LDR         R1, [R9, #3204]             @ 0xc84 
    /*00021914*/ ADD         LR, R4, R2 
    /*00021918*/ STR         R1, [R5, #2528]             @ 0x9e0 
    /*0002191c*/ LDR         R1, [R7] 
    /*00021920*/ LDRD        R0, [R1, #120]              @ 0x78 
    /*00021924*/ STRD        R0, [IP, #-8] 
    /*00021928*/ MOVW        IP, #18960                  @ 0x4a10 
    /*0002192c*/ LDR         R1, [R7] 
    /*00021930*/ LDRD        R0, [R1, #128]              @ 0x80 
    /*00021934*/ STRD        R0, [R4, R3] 
    /*00021938*/ MOVW        R3, #19008                  @ 0x4a40 
    /*0002193c*/ LDR         R1, [R7] 
    /*00021940*/ ADD         R9, R4, R3 
    /*00021944*/ LDRD        R0, [R1, #144]              @ 0x90 
    /*00021948*/ STRD        R0, [R4, SL] 
    /*0002194c*/ LDR         R1, [R7] 
    /*00021950*/ LDRD        R0, [R1, #152]              @ 0x98 
    /*00021954*/ STRD        R0, [LR, #-8] 
    /*00021958*/ STRD        R0, [R4, R2] 
    /*0002195c*/ ADD         R2, R4, #18944              @ 0x4a00 
    /*00021960*/ LDR         R1, [R7] 
    /*00021964*/ LDRD        R0, [R1, #72]               @ 0x48 
    /*00021968*/ STRD        R0, [R4, IP] 
    /*0002196c*/ LDR         R1, [R7] 
    /*00021970*/ LDRD        R0, [R1, #96]               @ 0x60 
    /*00021974*/ STRD        R0, [R9, #-8] 
    /*00021978*/ LDR         R1, [R7] 
    /*0002197c*/ LDRD        R0, [R1, #80]               @ 0x50 
    /*00021980*/ STRD        R0, [R2, #24] 
    /*00021984*/ LDR         R2, [R7] 
    /*00021988*/ LDRD        R0, [R2, #104]              @ 0x68 
    /*0002198c*/ STRD        R0, [R4, R3] 
    VPSS_DRV_PrepareHwInfo_x21990:
    /*00021990*/ LDR         R1, [R7] 
    /*00021994*/ LDR         R3, [R1, #332]              @ 0x14c 
    /*00021998*/ CMP         R3, #37                     @ 0x25 
    /*0002199c*/ CMPNE       R3, #16 
    /*000219a0*/ MOVEQ       R2, #1 
    /*000219a4*/ MOVNE       R2, #0 
    /*000219a8*/ BNE         VPSS_DRV_PrepareHwInfo_x219e4
    /*000219ac*/ LDR         R3, [R1, #312]              @ 0x138 
    /*000219b0*/ CMP         R3, #0 
    /*000219b4*/ LDRBNE      R3, [R3, #65]               @ 0x41 
    /*000219b8*/ SUBNE       R3, R3, #1 
    /*000219bc*/ CLZNE       R3, R3 
    /*000219c0*/ LSRNE       R3, R3, #5 
    /*000219c4*/ STR         R3, [R5, #2748]             @ 0xabc 
    /*000219c8*/ LDR         R3, [R5, #196]              @ 0xc4 
    /*000219cc*/ B           VPSS_DRV_PrepareHwInfo_x2175c
    VPSS_DRV_PrepareHwInfo_x219d0:
    /*000219d0*/ CMP         R1, R2 
    /*000219d4*/ CMPEQ       R0, SL 
    /*000219d8*/ MOVNE       R3, #1 
    /*000219dc*/ MOVEQ       R3, #0 
    /*000219e0*/ B           VPSS_DRV_PrepareHwInfo_x2168c
    VPSS_DRV_PrepareHwInfo_x219e4:
    /*000219e4*/ LDR         R3, [R5, #196]              @ 0xc4 
    /*000219e8*/ STR         R2, [R5, #2748]             @ 0xabc 
    /*000219ec*/ B           VPSS_DRV_PrepareHwInfo_x2175c
    VPSS_DRV_PrepareHwInfo_x219f0:
    /*000219f0*/ LDR         R3, [R9, #3176]             @ 0xc68 
    /*000219f4*/ MOVW        R1, #18832                  @ 0x4990 
    /*000219f8*/ ADD         R0, R4, R1 
    /*000219fc*/ MOVW        IP, #19008                  @ 0x4a40 
    /*00021a00*/ ADD         LR, R4, IP 
    /*00021a04*/ STR         R3, [R5, #2524]             @ 0x9dc 
    /*00021a08*/ LDR         R3, [R9, #3180]             @ 0xc6c 
    /*00021a0c*/ STR         R3, [R5, #2528]             @ 0x9e0 
    /*00021a10*/ LDR         R3, [R7] 
    /*00021a14*/ LDR         FP, [R9, #3184]             @ 0xc70 
    /*00021a18*/ LDRD        R2, [R3, #120]              @ 0x78 
    /*00021a1c*/ MOV         SL, FP 
    /*00021a20*/ STRD        R2, [SP, #8] 
    /*00021a24*/ MOV         R3, #0 
    /*00021a28*/ MOV         R2, FP 
    /*00021a2c*/ MOV         FP, R3 
    /*00021a30*/ STRD        SL, [SP] 
    /*00021a34*/ LDRD        SL, [SP, #8] 
    /*00021a38*/ ADDS        SL, SL, R2 
    /*00021a3c*/ ADC         FP, FP, R3 
    /*00021a40*/ MOV         R2, SL 
    /*00021a44*/ MOV         R3, FP 
    /*00021a48*/ STRD        R2, [R0, #-8] 
    /*00021a4c*/ LDR         R3, [R7] 
    /*00021a50*/ MOV         FP, #0 
    /*00021a54*/ LDR         R0, [R9, #3188]             @ 0xc74 
    /*00021a58*/ LDRD        R2, [R3, #128]              @ 0x80 
    /*00021a5c*/ MOV         SL, R0 
    /*00021a60*/ STRD        SL, [SP, #8] 
    /*00021a64*/ ADDS        SL, R0, R2 
    /*00021a68*/ ADC         FP, FP, R3 
    /*00021a6c*/ MOV         R2, SL 
    /*00021a70*/ MOV         R3, FP 
    /*00021a74*/ STRD        R2, [R4, R1] 
    /*00021a78*/ LDR         R3, [R7] 
    /*00021a7c*/ MOVW        R1, #18880                  @ 0x49c0 
    /*00021a80*/ LDRD        SL, [SP] 
    /*00021a84*/ ADD         R0, R4, R1 
    /*00021a88*/ LDRD        R2, [R3, #96]               @ 0x60 
    /*00021a8c*/ STRD        R2, [LR, #-8] 
    /*00021a90*/ STRD        R2, [R4, IP] 
    /*00021a94*/ MOVW        IP, #18864                  @ 0x49b0 
    /*00021a98*/ LDR         R3, [R7] 
    /*00021a9c*/ LDRD        R2, [R3, #144]              @ 0x90 
    /*00021aa0*/ ADDS        SL, SL, R2 
    /*00021aa4*/ ADC         FP, FP, R3 
    /*00021aa8*/ MOV         R2, SL 
    /*00021aac*/ MOV         R3, FP 
    /*00021ab0*/ STRD        R2, [R4, IP] 
    /*00021ab4*/ LDR         R3, [R7] 
    /*00021ab8*/ LDRD        SL, [SP, #8] 
    /*00021abc*/ LDRD        R2, [R3, #152]              @ 0x98 
    /*00021ac0*/ ADDS        SL, SL, R2 
    /*00021ac4*/ ADC         FP, FP, R3 
    /*00021ac8*/ MOV         R2, SL 
    /*00021acc*/ MOV         R3, FP 
    /*00021ad0*/ STRD        R2, [R0, #-8] 
    /*00021ad4*/ STRD        R2, [R4, R1] 
    /*00021ad8*/ B           VPSS_DRV_PrepareHwInfo_x21990
FUNC_END VPSS_DRV_PrepareHwInfo


FUNC_BEGIN VPSS_DRV_PutVideoFrameInfo
    /*00021adc*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00021ae0*/ MOV         LR, #72                     @ 0x48 
    /*00021ae4*/ MUL         R4, LR, R2 
    /*00021ae8*/ MOV         IP, #24 
    /*00021aec*/ MLA         IP, IP, R1, R4 
    /*00021af0*/ MOVW        LR, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00021af4*/ MOVT        LR, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00021af8*/ MOVW        R4, #18748                  @ 0x493c 
    /*00021afc*/ LDR         R8, [LR, R0, LSL #2] 
    /*00021b00*/ ADD         IP, R8, IP 
    /*00021b04*/ LDR         SL, [IP, R4] 
    /*00021b08*/ CMP         SL, #1 
    /*00021b0c*/ POPNE       {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00021b10*/ MOV         R0, #752                    @ 0x2f0 
    /*00021b14*/ LDR         LR, [R3, #328]              @ 0x148 
    /*00021b18*/ MUL         R0, R0, R1 
    /*00021b1c*/ MOVW        IP, #19492                  @ 0x4c24 
    /*00021b20*/ MOV         R5, R1 
    /*00021b24*/ MOVW        R1, #19484                  @ 0x4c1c 
    /*00021b28*/ MOV         R9, R2 
    /*00021b2c*/ MOVW        R2, #19320                  @ 0x4b78 
    /*00021b30*/ ADD         R4, R8, R0 
    /*00021b34*/ MOVW        FP, #19344                  @ 0x4b90 
    /*00021b38*/ ADD         R0, R0, #19456              @ 0x4c00 
    /*00021b3c*/ STR         LR, [R4, IP] 
    /*00021b40*/ MOVW        LR, #19324                  @ 0x4b7c 
    /*00021b44*/ LDR         R6, [R3, #12] 
    /*00021b48*/ MOVW        IP, #19312                  @ 0x4b70 
    /*00021b4c*/ ADD         R0, R0, #56                 @ 0x38 
    /*00021b50*/ ADD         R0, R8, R0 
    /*00021b54*/ STR         R6, [R4, R1] 
    /*00021b58*/ MOVW        R1, #19316                  @ 0x4b74 
    /*00021b5c*/ LDR         R6, [R3, #16] 
    /*00021b60*/ STR         R6, [R4, R2] 
    /*00021b64*/ MOVW        R2, #19288                  @ 0x4b58 
    /*00021b68*/ LDR         R6, [R3, #20] 
    /*00021b6c*/ STR         R6, [R4, LR] 
    /*00021b70*/ MOVW        LR, #19284                  @ 0x4b54 
    /*00021b74*/ LDR         R6, [R3, #24] 
    /*00021b78*/ STR         R6, [R4, IP] 
    /*00021b7c*/ MOVW        IP, #19264                  @ 0x4b40 
    /*00021b80*/ LDR         R6, [R3, #28] 
    /*00021b84*/ STR         R6, [R4, R1] 
    /*00021b88*/ MOVW        R1, #19268                  @ 0x4b44 
    /*00021b8c*/ LDR         R6, [R3, #4] 
    /*00021b90*/ STR         R6, [R4, R2] 
    /*00021b94*/ MOVW        R2, #19272                  @ 0x4b48 
    /*00021b98*/ LDR         R6, [R3] 
    /*00021b9c*/ STR         R6, [R4, LR] 
    /*00021ba0*/ ADD         LR, R4, #19200              @ 0x4b00 
    /*00021ba4*/ LDR         R6, [R3, #44]               @ 0x2c 
    /*00021ba8*/ STR         R6, [R4, IP] 
    /*00021bac*/ MOVW        IP, #19208                  @ 0x4b08 
    /*00021bb0*/ LDR         R6, [R3, #48]               @ 0x30 
    /*00021bb4*/ STR         R6, [R4, R1] 
    /*00021bb8*/ MOVW        R1, #19216                  @ 0x4b10 
    /*00021bbc*/ LDR         R6, [R3, #52]               @ 0x34 
    /*00021bc0*/ STR         R6, [R4, R2] 
    /*00021bc4*/ MOVW        R2, #19360                  @ 0x4ba0 
    /*00021bc8*/ LDRD        R6, [R3, #120]              @ 0x78 
    /*00021bcc*/ STRD        R6, [LR] 
    /*00021bd0*/ MOVW        LR, #19364                  @ 0x4ba4 
    /*00021bd4*/ LDRD        R6, [R3, #128]              @ 0x80 
    /*00021bd8*/ STRD        R6, [R4, IP] 
    /*00021bdc*/ MOVW        IP, #19368                  @ 0x4ba8 
    /*00021be0*/ LDRD        R6, [R3, #136]              @ 0x88 
    /*00021be4*/ STRD        R6, [R4, R1] 
    /*00021be8*/ MOVW        R1, #19336                  @ 0x4b88 
    /*00021bec*/ LDR         R6, [R3, #32] 
    /*00021bf0*/ STR         R6, [R4, R2] 
    /*00021bf4*/ LDR         R2, [R3, #36]               @ 0x24 
    /*00021bf8*/ STR         R2, [R4, LR] 
    /*00021bfc*/ MOVW        LR, #19352                  @ 0x4b98 
    /*00021c00*/ LDR         R2, [R3, #40]               @ 0x28 
    /*00021c04*/ STR         R2, [R4, IP] 
    /*00021c08*/ MOVW        R2, #19400                  @ 0x4bc8 
    /*00021c0c*/ LDRD        R6, [R3, #72]               @ 0x48 
    /*00021c10*/ MOVW        IP, #19416                  @ 0x4bd8 
    /*00021c14*/ STRD        R6, [R4, R1] 
    /*00021c18*/ MOVW        R1, #19408                  @ 0x4bd0 
    /*00021c1c*/ LDRD        R6, [R3, #80]               @ 0x50 
    /*00021c20*/ STRD        R6, [R4, FP] 
    /*00021c24*/ MOVW        FP, #19432                  @ 0x4be8 
    /*00021c28*/ LDRD        R6, [R3, #88]               @ 0x58 
    /*00021c2c*/ STRD        R6, [R4, LR] 
    /*00021c30*/ MOVW        LR, #19424                  @ 0x4be0 
    /*00021c34*/ LDRD        R6, [R3, #168]              @ 0xa8 
    /*00021c38*/ STRD        R6, [R4, R2] 
    /*00021c3c*/ MOVW        R2, #19428                  @ 0x4be4 
    /*00021c40*/ LDRD        R6, [R3, #176]              @ 0xb0 
    /*00021c44*/ STRD        R6, [R4, R1] 
    /*00021c48*/ LDRD        R6, [R3, #184]              @ 0xb8 
    /*00021c4c*/ STRD        R6, [R4, IP] 
    /*00021c50*/ MOVW        IP, #19332                  @ 0x4b84 
    /*00021c54*/ LDR         R1, [R3, #56]               @ 0x38 
    /*00021c58*/ STR         R1, [R4, LR] 
    /*00021c5c*/ ADD         R1, R3, #264                @ 0x108 
    /*00021c60*/ LDR         LR, [R3, #60]               @ 0x3c 
    /*00021c64*/ STR         LR, [R4, R2] 
    /*00021c68*/ MOV         R2, #7 
    /*00021c6c*/ LDR         R3, [R3, #64]               @ 0x40 
    /*00021c70*/ STR         R2, [R4, IP] 
    /*00021c74*/ MOV         R2, #64                     @ 0x40 
    /*00021c78*/ STR         R3, [R4, FP] 
    /*00021c7c*/ BL          0x0000000000021C7C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00021c80*/ MOVW        R2, #1080                   @ 0x438 
    /*00021c84*/ MUL         R2, R2, R9 
    /*00021c88*/ MOV         R9, #360                    @ 0x168 
    /*00021c8c*/ MLA         R9, R9, R5, R2 
    /*00021c90*/ MOVW        LR, #26560                  @ 0x67c0 
    /*00021c94*/ MOVW        IP, #19292                  @ 0x4b5c 
    /*00021c98*/ MOVW        R0, #26564                  @ 0x67c4 
    /*00021c9c*/ ADD         R5, R5, #2672               @ 0xa70 
    /*00021ca0*/ MOVW        R1, #19296                  @ 0x4b60 
    /*00021ca4*/ ADD         R9, R8, R9 
    /*00021ca8*/ ADD         R5, R5, #10 
    /*00021cac*/ MOVW        R3, #19496                  @ 0x4c28 
    /*00021cb0*/ MOV         R2, #0 
    /*00021cb4*/ LDR         LR, [R9, LR] 
    /*00021cb8*/ STR         LR, [R4, IP] 
    /*00021cbc*/ LDR         R0, [R9, R0] 
    /*00021cc0*/ STR         R0, [R4, R1] 
    /*00021cc4*/ STR         SL, [R8, R5, LSL #3] 
    /*00021cc8*/ STR         R2, [R4, R3] 
    /*00021ccc*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VPSS_DRV_PutVideoFrameInfo


FUNC_BEGIN VpssDrvFrmRateCtlAlgorithm
    /*00021cd0*/ LDM         R0, {R2, R3} 
    /*00021cd4*/ CMN         R2, #1 
    /*00021cd8*/ CMNNE       R3, #1 
    /*00021cdc*/ MOVEQ       R0, #1 
    /*00021ce0*/ MOVNE       R0, #0 
    /*00021ce4*/ BEQ         VpssDrvFrmRateCtlAlgorithm_x21d0c
    /*00021ce8*/ CMP         R3, R2 
    /*00021cec*/ BEQ         VpssDrvFrmRateCtlAlgorithm_x21d0c
    /*00021cf0*/ LDR         IP, [R1] 
    /*00021cf4*/ ADD         R3, R3, IP 
    /*00021cf8*/ CMP         R2, R3 
    /*00021cfc*/ SUBLE       R3, R3, R2 
    /*00021d00*/ STR         R3, [R1] 
    /*00021d04*/ MOVLE       R0, #1 
    /*00021d08*/ BX          LR 
    VpssDrvFrmRateCtlAlgorithm_x21d0c:
    /*00021d0c*/ MOV         R0, #1 
    /*00021d10*/ BX          LR 
FUNC_END VpssDrvFrmRateCtlAlgorithm


FUNC_BEGIN VpssDrvFrmRateCtl
    /*00021d14*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00021d18*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00021d1c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00021d20*/ MOV         R2, #72                     @ 0x48 
    /*00021d24*/ LDR         IP, [R3, R0, LSL #2] 
    /*00021d28*/ MLA         R2, R2, R1, IP 
    /*00021d2c*/ LDR         LR, [R2, #72]               @ 0x48 
    /*00021d30*/ LDR         R3, [R2, #76]               @ 0x4c 
    /*00021d34*/ CMN         LR, #1 
    /*00021d38*/ CMNNE       R3, #1 
    /*00021d3c*/ MOVEQ       R0, #1 
    /*00021d40*/ MOVNE       R0, #0 
    /*00021d44*/ BEQ         VpssDrvFrmRateCtl_x21d74
    /*00021d48*/ CMP         R3, LR 
    /*00021d4c*/ BEQ         VpssDrvFrmRateCtl_x21d74
    /*00021d50*/ ADD         IP, IP, R1, LSL #2 
    /*00021d54*/ ADD         IP, IP, #12288              @ 0x3000 
    /*00021d58*/ LDR         R2, [IP, #3056]             @ 0xbf0 
    /*00021d5c*/ ADD         R3, R3, R2 
    /*00021d60*/ CMP         LR, R3 
    /*00021d64*/ SUBLE       R3, R3, LR 
    /*00021d68*/ STR         R3, [IP, #3056]             @ 0xbf0 
    /*00021d6c*/ MOVLE       R0, #1 
    /*00021d70*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VpssDrvFrmRateCtl_x21d74:
    /*00021d74*/ MOV         R0, #1 
    /*00021d78*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VpssDrvFrmRateCtl


FUNC_BEGIN VPSS_DRV_Enable3dnr
    /*00021d7c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00021d80*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00021d84*/ PUSH        {R4, LR} 
    /*00021d88*/ LDR         R3, [R3, R0, LSL #2] 
    /*00021d8c*/ MOV         R0, R1 
    /*00021d90*/ ADD         R3, R3, #16384              @ 0x4000 
    /*00021d94*/ LDR         R1, [R3, #2340]             @ 0x924 
    /*00021d98*/ BL          0x0000000000021D98          @ VPSS_HAL_Set3dnrEnable [R_ARM_CALL: .text+0x27be4] 
    /*00021d9c*/ MOV         R0, #0 
    /*00021da0*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_Enable3dnr


FUNC_BEGIN VPSS_DRV_Update3dnrRefAttr
    /*00021da4*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00021da8*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00021dac*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00021db0*/ MOV         R4, R2 
    /*00021db4*/ LDR         R2, [IP, R0, LSL #2] 
    /*00021db8*/ MOV         R0, R3 
    /*00021dbc*/ SUB         SP, SP, #132                @ 0x84 
    /*00021dc0*/ ADD         R3, R2, #16384              @ 0x4000 
    /*00021dc4*/ LDR         IP, [R3, #2340]             @ 0x924 
    /*00021dc8*/ CMP         IP, #1 
    /*00021dcc*/ BEQ         VPSS_DRV_Update3dnrRefAttr_x21dfc
    /*00021dd0*/ MOV         R2, #128                    @ 0x80 
    /*00021dd4*/ MOV         R1, #0 
    /*00021dd8*/ MOV         R0, SP 
    /*00021ddc*/ MOV         R5, SP 
    /*00021de0*/ BL          0x0000000000021DE0          @ osal_memset [R_ARM_CALL: +0x0] 
    VPSS_DRV_Update3dnrRefAttr_x21de4:
    /*00021de4*/ MOV         R0, R4 
    /*00021de8*/ MOV         R1, R5 
    /*00021dec*/ BL          0x0000000000021DEC          @ VPSS_HAL_SetRefConfig [R_ARM_CALL: .text+0x27bf4] 
    /*00021df0*/ MOV         R0, #0 
    /*00021df4*/ ADD         SP, SP, #132                @ 0x84 
    /*00021df8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_DRV_Update3dnrRefAttr_x21dfc:
    /*00021dfc*/ MOV         IP, #376                    @ 0x178 
    /*00021e00*/ LDR         R3, [R3, #2344]             @ 0x928 
    /*00021e04*/ MLA         R1, IP, R1, R2 
    /*00021e08*/ MOVW        R2, #22332                  @ 0x573c 
    /*00021e0c*/ STR         R3, [SP, #56]               @ 0x38 
    /*00021e10*/ MOVW        R3, #22172                  @ 0x569c 
    /*00021e14*/ MOVW        LR, #22184                  @ 0x56a8 
    /*00021e18*/ MOVW        IP, #22192                  @ 0x56b0 
    /*00021e1c*/ MOVW        R9, #22048                  @ 0x5620 
    /*00021e20*/ MOVW        R7, #22212                  @ 0x56c4 
    /*00021e24*/ MOVW        R5, #22208                  @ 0x56c0 
    /*00021e28*/ MOVW        R6, #22056                  @ 0x5628 
    /*00021e2c*/ LDR         R2, [R1, R2] 
    /*00021e30*/ CMP         R0, #0 
    /*00021e34*/ LDR         R3, [R1, R3] 
    /*00021e38*/ SUB         R2, R2, #25 
    /*00021e3c*/ LDR         R8, [R1, R7] 
    /*00021e40*/ CLZ         R2, R2 
    /*00021e44*/ LDR         R5, [R1, R5] 
    /*00021e48*/ MOVW        R7, #22112                  @ 0x5660 
    /*00021e4c*/ LSR         R2, R2, #5 
    /*00021e50*/ STR         R2, [SP, #60]               @ 0x3c 
    /*00021e54*/ SUB         R2, R3, #1 
    /*00021e58*/ SUB         R3, R3, #4 
    /*00021e5c*/ CLZ         R2, R2 
    /*00021e60*/ CLZ         R3, R3 
    /*00021e64*/ STR         R5, [SP, #32] 
    /*00021e68*/ MOVW        R5, #22116                  @ 0x5664 
    /*00021e6c*/ LSR         R2, R2, #5 
    /*00021e70*/ LSR         R3, R3, #5 
    /*00021e74*/ STR         R2, [SP, #68]               @ 0x44 
    /*00021e78*/ STR         R2, [SP, #76]               @ 0x4c 
    /*00021e7c*/ STR         R3, [SP, #72]               @ 0x48 
    /*00021e80*/ LDRD        R2, [R1, LR] 
    /*00021e84*/ MOVW        LR, #22132                  @ 0x5674 
    /*00021e88*/ STR         R8, [SP, #36]               @ 0x24 
    /*00021e8c*/ MOVW        R8, #22148                  @ 0x5684 
    /*00021e90*/ LDR         R5, [R1, R5] 
    /*00021e94*/ STRD        R2, [SP] 
    /*00021e98*/ LDRD        R2, [R1, IP] 
    /*00021e9c*/ MOVW        IP, #22136                  @ 0x5678 
    /*00021ea0*/ LDR         LR, [R1, LR] 
    /*00021ea4*/ LDR         IP, [R1, IP] 
    /*00021ea8*/ STRD        R2, [SP, #8] 
    /*00021eac*/ LDRD        R2, [R1, R9] 
    /*00021eb0*/ MOVW        R9, #22312                  @ 0x5728 
    /*00021eb4*/ LDR         R8, [R1, R8] 
    /*00021eb8*/ LDR         R9, [R1, R9] 
    /*00021ebc*/ STRD        R2, [SP, #16] 
    /*00021ec0*/ LDRD        R2, [R1, R6] 
    /*00021ec4*/ MOVW        R6, #22316                  @ 0x572c 
    /*00021ec8*/ LDR         R7, [R1, R7] 
    /*00021ecc*/ STR         R5, [SP, #44]               @ 0x2c 
    /*00021ed0*/ MOVW        R5, #22296                  @ 0x5718 
    /*00021ed4*/ STRD        R2, [SP, #24] 
    /*00021ed8*/ MOVW        R2, #22320                  @ 0x5730 
    /*00021edc*/ STR         LR, [SP, #48]               @ 0x30 
    /*00021ee0*/ MOVW        R3, #22288                  @ 0x5710 
    /*00021ee4*/ STR         IP, [SP, #52]               @ 0x34 
    /*00021ee8*/ MOVW        LR, #22304                  @ 0x5720 
    /*00021eec*/ STR         R8, [SP, #64]               @ 0x40 
    /*00021ef0*/ MOVW        IP, #22152                  @ 0x5688 
    /*00021ef4*/ STR         R9, [SP, #80]               @ 0x50 
    /*00021ef8*/ STR         R7, [SP, #40]               @ 0x28 
    /*00021efc*/ LDR         R7, [R1, R6] 
    /*00021f00*/ MOVW        R6, #22156                  @ 0x568c 
    /*00021f04*/ LDR         R2, [R1, R2] 
    /*00021f08*/ LDR         R6, [R1, R6] 
    /*00021f0c*/ LDR         IP, [R1, IP] 
    /*00021f10*/ STR         R2, [SP, #88]               @ 0x58 
    /*00021f14*/ LDRD        R2, [R3, R1] 
    /*00021f18*/ STR         R7, [SP, #84]               @ 0x54 
    /*00021f1c*/ STR         R6, [SP, #120]              @ 0x78 
    /*00021f20*/ STRD        R2, [SP, #96]               @ 0x60 
    /*00021f24*/ LDRD        R6, [R1, R5] 
    /*00021f28*/ MOVEQ       R5, SP 
    /*00021f2c*/ LDRNE       R2, [R0, #48]               @ 0x30 
    /*00021f30*/ MOVNE       R5, SP 
    /*00021f34*/ LDRD        R8, [R1, LR] 
    /*00021f38*/ ADDNE       R3, R2, #15 
    /*00021f3c*/ STRD        R6, [SP, #104]              @ 0x68 
    /*00021f40*/ BICNE       R3, R3, #15 
    /*00021f44*/ STR         IP, [SP, #124]              @ 0x7c 
    /*00021f48*/ STRD        R8, [SP, #112]              @ 0x70 
    /*00021f4c*/ STRNE       R2, [SP, #48]               @ 0x30 
    /*00021f50*/ STRNE       R3, [SP, #40]               @ 0x28 
    /*00021f54*/ STRNE       R3, [SP, #44]               @ 0x2c 
    /*00021f58*/ B           VPSS_DRV_Update3dnrRefAttr_x21de4
FUNC_END VPSS_DRV_Update3dnrRefAttr


FUNC_BEGIN VPSS_DRV_Update3dnrRefFDcmpParam
    /*00021f5c*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00021f60*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00021f64*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00021f68*/ MOV         R4, R1 
    /*00021f6c*/ LDR         R5, [IP, R0, LSL #2] 
    /*00021f70*/ MOV         R1, #376                    @ 0x178 
    /*00021f74*/ MOV         R6, R2 
    /*00021f78*/ CMP         R3, #0 
    /*00021f7c*/ MOVW        R0, #22132                  @ 0x5674 
    /*00021f80*/ MOVW        R8, #22136                  @ 0x5678 
    /*00021f84*/ MLA         R2, R1, R4, R5 
    /*00021f88*/ MOVW        R7, #22172                  @ 0x569c 
    /*00021f8c*/ MOVW        LR, #22180                  @ 0x56a4 
    /*00021f90*/ MOVW        IP, #22332                  @ 0x573c 
    /*00021f94*/ SUB         SP, SP, #320                @ 0x140 
    /*00021f98*/ LDRNE       R3, [R3, #48]               @ 0x30 
    /*00021f9c*/ MOV         R1, #0 
    /*00021fa0*/ STR         R1, [SP, #28] 
    /*00021fa4*/ LDR         R0, [R2, R0] 
    /*00021fa8*/ LDR         LR, [R2, LR] 
    /*00021fac*/ LDR         IP, [R2, IP] 
    /*00021fb0*/ LDR         R7, [R2, R7] 
    /*00021fb4*/ LDR         R2, [R2, R8] 
    /*00021fb8*/ STR         R0, [SP, #20] 
    /*00021fbc*/ MOV         R0, #2 
    /*00021fc0*/ STRNE       R3, [SP, #20] 
    /*00021fc4*/ STR         LR, [SP] 
    /*00021fc8*/ STR         IP, [SP, #4] 
    /*00021fcc*/ STR         R1, [SP, #32] 
    /*00021fd0*/ STR         R1, [SP, #12] 
    /*00021fd4*/ STR         R2, [SP, #24] 
    /*00021fd8*/ STR         R1, [SP, #36]               @ 0x24 
    /*00021fdc*/ STR         R7, [SP, #8] 
    /*00021fe0*/ BL          0x0000000000021FE0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00021fe4*/ ADD         R2, SP, #180                @ 0xb4 
    /*00021fe8*/ ADD         R1, SP, #40                 @ 0x28 
    /*00021fec*/ LDR         R3, [R0, #136]              @ 0x88 
    /*00021ff0*/ MOV         R0, SP 
    /*00021ff4*/ BLX         R3 
    /*00021ff8*/ MOV         R3, #376                    @ 0x178 
    /*00021ffc*/ MLA         R4, R3, R4, R5 
    /*00022000*/ MOVW        R3, #22172                  @ 0x569c 
    /*00022004*/ MOV         R0, R6 
    /*00022008*/ ADD         R2, SP, #180                @ 0xb4 
    /*0002200c*/ ADD         R1, SP, #40                 @ 0x28 
    /*00022010*/ LDR         R3, [R4, R3] 
    /*00022014*/ SUB         R3, R3, #4 
    /*00022018*/ CLZ         R3, R3 
    /*0002201c*/ LSR         R3, R3, #5 
    /*00022020*/ BL          0x0000000000022020          @ VPSS_HAL_SetRefFDcmpAttr [R_ARM_CALL: .text+0x27cb4] 
    /*00022024*/ MOV         R0, #0 
    /*00022028*/ ADD         SP, SP, #320                @ 0x140 
    /*0002202c*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VPSS_DRV_Update3dnrRefFDcmpParam


FUNC_BEGIN VPSS_DRV_Update3dnrRefDcmpParam
    /*00022030*/ PUSH        {R4, LR} 
    /*00022034*/ MOVW        LR, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00022038*/ MOVT        LR, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0002203c*/ MOV         IP, #376                    @ 0x178 
    /*00022040*/ MOVW        R4, #22172                  @ 0x569c 
    /*00022044*/ LDR         LR, [LR, R0, LSL #2] 
    /*00022048*/ MLA         IP, IP, R1, LR 
    /*0002204c*/ LDR         IP, [IP, R4] 
    /*00022050*/ CMP         IP, #4 
    /*00022054*/ BEQ         VPSS_DRV_Update3dnrRefDcmpParam_x22060
    /*00022058*/ MOV         R0, #0 
    /*0002205c*/ POP         {R4, PC} 
    VPSS_DRV_Update3dnrRefDcmpParam_x22060:
    /*00022060*/ BL          0x0000000000022060          @ VPSS_DRV_Update3dnrRefFDcmpParam [R_ARM_CALL: .text+0x21f5c] 
    /*00022064*/ MOV         R0, #0 
    /*00022068*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_Update3dnrRefDcmpParam


FUNC_BEGIN VPSS_DRV_Update3dnrRfrAttr
    /*0002206c*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00022070*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00022074*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00022078*/ MOV         R4, R2 
    /*0002207c*/ LDR         R0, [IP, R0, LSL #2] 
    /*00022080*/ MOV         IP, R3 
    /*00022084*/ SUB         SP, SP, #112                @ 0x70 
    /*00022088*/ ADD         R3, R0, #16384              @ 0x4000 
    /*0002208c*/ LDR         R2, [R3, #2348]             @ 0x92c 
    /*00022090*/ CMP         R2, #1 
    /*00022094*/ BEQ         VPSS_DRV_Update3dnrRfrAttr_x220c4
    /*00022098*/ MOV         R2, #112                    @ 0x70 
    /*0002209c*/ MOV         R1, #0 
    /*000220a0*/ MOV         R0, SP 
    /*000220a4*/ MOV         R5, SP 
    /*000220a8*/ BL          0x00000000000220A8          @ osal_memset [R_ARM_CALL: +0x0] 
    VPSS_DRV_Update3dnrRfrAttr_x220ac:
    /*000220ac*/ MOV         R0, R4 
    /*000220b0*/ MOV         R1, R5 
    /*000220b4*/ BL          0x00000000000220B4          @ VPSS_HAL_SetRfrConfig [R_ARM_CALL: .text+0x27d68] 
    /*000220b8*/ MOV         R0, #0 
    /*000220bc*/ ADD         SP, SP, #112                @ 0x70 
    /*000220c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_DRV_Update3dnrRfrAttr_x220c4:
    /*000220c4*/ MOV         R3, #376                    @ 0x178 
    /*000220c8*/ STR         R2, [SP, #56]               @ 0x38 
    /*000220cc*/ MLA         R1, R3, R1, R0 
    /*000220d0*/ MOVW        R2, #24464                  @ 0x5f90 
    /*000220d4*/ MOVW        R5, #24588                  @ 0x600c 
    /*000220d8*/ MOVW        R3, #24428                  @ 0x5f6c 
    /*000220dc*/ MOVW        SL, #24440                  @ 0x5f78 
    /*000220e0*/ MOVW        R7, #24448                  @ 0x5f80 
    /*000220e4*/ MOVW        R8, #24304                  @ 0x5ef0 
    /*000220e8*/ MOVW        R6, #24312                  @ 0x5ef8 
    /*000220ec*/ CMP         IP, #0 
    /*000220f0*/ LDR         LR, [R1, R2] 
    /*000220f4*/ LDR         R3, [R1, R3] 
    /*000220f8*/ LDR         R2, [R1, R5] 
    /*000220fc*/ MOVW        R5, #24468                  @ 0x5f94 
    /*00022100*/ STR         LR, [SP, #32] 
    /*00022104*/ MOVW        LR, #24368                  @ 0x5f30 
    /*00022108*/ LDR         R9, [R1, LR] 
    /*0002210c*/ SUB         R2, R2, #25 
    /*00022110*/ SUB         LR, R3, #1 
    /*00022114*/ SUB         R3, R3, #4 
    /*00022118*/ CLZ         R2, R2 
    /*0002211c*/ CLZ         R3, R3 
    /*00022120*/ LDR         R5, [R1, R5] 
    /*00022124*/ CLZ         LR, LR 
    /*00022128*/ LSR         R2, R2, #5 
    /*0002212c*/ LSR         R3, R3, #5 
    /*00022130*/ STR         R2, [SP, #60]               @ 0x3c 
    /*00022134*/ LSR         LR, LR, #5 
    /*00022138*/ STR         R3, [SP, #72]               @ 0x48 
    /*0002213c*/ LDRD        R2, [R1, SL] 
    /*00022140*/ STR         R5, [SP, #36]               @ 0x24 
    /*00022144*/ MOVW        R5, #24372                  @ 0x5f34 
    /*00022148*/ STR         R9, [SP, #40]               @ 0x28 
    /*0002214c*/ STRD        R2, [SP] 
    /*00022150*/ LDRD        R2, [R1, R7] 
    /*00022154*/ MOVW        R7, #24388                  @ 0x5f44 
    /*00022158*/ LDR         R5, [R1, R5] 
    /*0002215c*/ LDR         R7, [R1, R7] 
    /*00022160*/ STRD        R2, [SP, #8] 
    /*00022164*/ LDRD        R2, [R1, R8] 
    /*00022168*/ MOVW        R8, #24392                  @ 0x5f48 
    /*0002216c*/ LDR         R9, [R1, R8] 
    /*00022170*/ MOVW        R8, #24580                  @ 0x6004 
    /*00022174*/ LDR         R8, [R1, R8] 
    /*00022178*/ STRD        R2, [SP, #16] 
    /*0002217c*/ LDRD        R2, [R1, R6] 
    /*00022180*/ MOVW        R6, #24584                  @ 0x6008 
    /*00022184*/ LDR         R6, [R1, R6] 
    /*00022188*/ STR         LR, [SP, #68]               @ 0x44 
    /*0002218c*/ STRD        R2, [SP, #24] 
    /*00022190*/ MOVW        R3, #24404                  @ 0x5f54 
    /*00022194*/ LDR         R3, [R1, R3] 
    /*00022198*/ MOVW        R2, #24408                  @ 0x5f58 
    /*0002219c*/ STR         R5, [SP, #44]               @ 0x2c 
    /*000221a0*/ MOVW        R5, #24412                  @ 0x5f5c 
    /*000221a4*/ STR         R7, [SP, #48]               @ 0x30 
    /*000221a8*/ STR         R3, [SP, #64]               @ 0x40 
    /*000221ac*/ MOV         R3, #0 
    /*000221b0*/ STR         R9, [SP, #52]               @ 0x34 
    /*000221b4*/ STR         R8, [SP, #104]              @ 0x68 
    /*000221b8*/ STR         R6, [SP, #108]              @ 0x6c 
    /*000221bc*/ STR         LR, [SP, #76]               @ 0x4c 
    /*000221c0*/ LDR         R2, [R1, R2] 
    /*000221c4*/ LDR         LR, [R0, #984]              @ 0x3d8 
    /*000221c8*/ LDR         R0, [R1, R5] 
    /*000221cc*/ MOVEQ       R5, SP 
    /*000221d0*/ STR         R2, [SP, #84]               @ 0x54 
    /*000221d4*/ MOVNE       R5, SP 
    /*000221d8*/ LDRNE       R2, [IP, #48]               @ 0x30 
    /*000221dc*/ STR         R3, [SP, #92]               @ 0x5c 
    /*000221e0*/ STR         R3, [SP, #96]               @ 0x60 
    /*000221e4*/ STR         R3, [SP, #100]              @ 0x64 
    /*000221e8*/ ADDNE       R3, R2, #15 
    /*000221ec*/ BICNE       R3, R3, #15 
    /*000221f0*/ STR         LR, [SP, #88]               @ 0x58 
    /*000221f4*/ STR         R0, [SP, #80]               @ 0x50 
    /*000221f8*/ STRNE       R2, [SP, #48]               @ 0x30 
    /*000221fc*/ STRNE       R3, [SP, #40]               @ 0x28 
    /*00022200*/ STRNE       R3, [SP, #44]               @ 0x2c 
    /*00022204*/ B           VPSS_DRV_Update3dnrRfrAttr_x220ac
FUNC_END VPSS_DRV_Update3dnrRfrAttr


FUNC_BEGIN VPSS_DRV_Update3dnrRfrCmpParam
    /*00022208*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0002220c*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00022210*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00022214*/ MOV         R4, R1 
    /*00022218*/ LDR         R5, [IP, R0, LSL #2] 
    /*0002221c*/ MOV         R1, #376                    @ 0x178 
    /*00022220*/ MOV         R6, R2 
    /*00022224*/ CMP         R3, #0 
    /*00022228*/ ADD         R5, R5, #16384              @ 0x4000 
    /*0002222c*/ MOVW        R0, #8004                   @ 0x1f44 
    /*00022230*/ MOVW        R8, #8008                   @ 0x1f48 
    /*00022234*/ MOVW        R7, #8044                   @ 0x1f6c 
    /*00022238*/ MLA         R2, R1, R4, R5 
    /*0002223c*/ MOVW        LR, #8052                   @ 0x1f74 
    /*00022240*/ MOVW        IP, #8204                   @ 0x200c 
    /*00022244*/ SUB         SP, SP, #320                @ 0x140 
    /*00022248*/ LDRNE       R3, [R3, #48]               @ 0x30 
    /*0002224c*/ MOV         R1, #0 
    /*00022250*/ STR         R1, [SP, #28] 
    /*00022254*/ STR         R1, [SP, #32] 
    /*00022258*/ LDR         R0, [R2, R0] 
    /*0002225c*/ LDR         LR, [R2, LR] 
    /*00022260*/ LDR         IP, [R2, IP] 
    /*00022264*/ LDR         R7, [R2, R7] 
    /*00022268*/ LDR         R2, [R2, R8] 
    /*0002226c*/ STR         R0, [SP, #20] 
    /*00022270*/ MOV         R0, #2 
    /*00022274*/ STRNE       R3, [SP, #20] 
    /*00022278*/ STR         LR, [SP] 
    /*0002227c*/ STR         IP, [SP, #4] 
    /*00022280*/ STR         R1, [SP, #12] 
    /*00022284*/ STR         R2, [SP, #24] 
    /*00022288*/ STR         R1, [SP, #36]               @ 0x24 
    /*0002228c*/ STR         R7, [SP, #8] 
    /*00022290*/ BL          0x0000000000022290          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00022294*/ ADD         R2, SP, #180                @ 0xb4 
    /*00022298*/ ADD         R1, SP, #40                 @ 0x28 
    /*0002229c*/ LDR         R3, [R0, #136]              @ 0x88 
    /*000222a0*/ MOV         R0, SP 
    /*000222a4*/ BLX         R3 
    /*000222a8*/ MOV         R3, #376                    @ 0x178 
    /*000222ac*/ MLA         R4, R3, R4, R5 
    /*000222b0*/ MOVW        R3, #8044                   @ 0x1f6c 
    /*000222b4*/ MOV         R0, R6 
    /*000222b8*/ ADD         R2, SP, #180                @ 0xb4 
    /*000222bc*/ ADD         R1, SP, #40                 @ 0x28 
    /*000222c0*/ LDR         R3, [R4, R3] 
    /*000222c4*/ SUB         R3, R3, #4 
    /*000222c8*/ CLZ         R3, R3 
    /*000222cc*/ LSR         R3, R3, #5 
    /*000222d0*/ BL          0x00000000000222D0          @ VPSS_HAL_SetRfrCmpAttr [R_ARM_CALL: .text+0x27e50] 
    /*000222d4*/ MOV         R0, #0 
    /*000222d8*/ ADD         SP, SP, #320                @ 0x140 
    /*000222dc*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VPSS_DRV_Update3dnrRfrCmpParam


FUNC_BEGIN VPSS_DRV_Update3dnrMad
    /*000222e0*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000222e4*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000222e8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000222ec*/ MOV         R6, R2 
    /*000222f0*/ LDR         R4, [IP, R0, LSL #2] 
    /*000222f4*/ SUB         SP, SP, #52                 @ 0x34 
    /*000222f8*/ ADD         R2, R4, #16384              @ 0x4000 
    /*000222fc*/ LDR         R2, [R2, #2340]             @ 0x924 
    /*00022300*/ CMP         R2, #1 
    /*00022304*/ BEQ         VPSS_DRV_Update3dnrMad_x22334
    /*00022308*/ MOV         R2, #48                     @ 0x30 
    /*0002230c*/ MOV         R1, #0 
    /*00022310*/ MOV         R0, SP 
    /*00022314*/ MOV         R7, SP 
    /*00022318*/ BL          0x0000000000022318          @ osal_memset [R_ARM_CALL: +0x0] 
    VPSS_DRV_Update3dnrMad_x2231c:
    /*0002231c*/ MOV         R0, R6 
    /*00022320*/ MOV         R1, R7 
    /*00022324*/ BL          0x0000000000022324          @ VPSS_HAL_SetMadConfig [R_ARM_CALL: .text+0x28170] 
    /*00022328*/ MOV         R0, #0 
    /*0002232c*/ ADD         SP, SP, #52                 @ 0x34 
    /*00022330*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VPSS_DRV_Update3dnrMad_x22334:
    /*00022334*/ ADD         LR, R4, R1, LSL #2 
    /*00022338*/ CMP         R3, #0 
    /*0002233c*/ ADD         LR, LR, #12288              @ 0x3000 
    /*00022340*/ MOV         R0, #48                     @ 0x30 
    /*00022344*/ MUL         R1, R0, R1 
    /*00022348*/ LDR         R9, [LR, #1752]             @ 0x6d8 
    /*0002234c*/ ADDEQ       R2, R4, #12288              @ 0x3000 
    /*00022350*/ ADDNE       R2, R4, #12288              @ 0x3000 
    /*00022354*/ MOV         R0, #24 
    /*00022358*/ RSB         R8, R9, #1 
    /*0002235c*/ MLA         R9, R0, R9, R1 
    /*00022360*/ LDREQ       R3, [R2, #3176]             @ 0xc68 
    /*00022364*/ LDRNE       R3, [R3, #48]               @ 0x30 
    /*00022368*/ MOVW        R5, #15032                  @ 0x3ab8 
    /*0002236c*/ LDR         R2, [R2, #3180]             @ 0xc6c 
    /*00022370*/ MOV         R7, SP 
    /*00022374*/ MLA         R0, R0, R8, R1 
    /*00022378*/ ADD         R3, R3, #2 
    /*0002237c*/ ADD         R2, R2, #2 
    /*00022380*/ ADD         R9, R4, R9 
    /*00022384*/ LSR         R3, R3, #2 
    /*00022388*/ STR         R3, [SP, #36]               @ 0x24 
    /*0002238c*/ LSR         R2, R2, #2 
    /*00022390*/ STR         R2, [SP, #40]               @ 0x28 
    /*00022394*/ ADD         R2, R9, #15040              @ 0x3ac0 
    /*00022398*/ ADD         R4, R4, R0 
    /*0002239c*/ LSR         IP, R3, #2 
    /*000223a0*/ ADD         R1, R4, #15040              @ 0x3ac0 
    /*000223a4*/ LDRD        R2, [R2] 
    /*000223a8*/ ADD         R4, R4, R5 
    /*000223ac*/ ADD         IP, IP, #15 
    /*000223b0*/ LDRD        R0, [R1] 
    /*000223b4*/ BIC         IP, IP, #15 
    /*000223b8*/ STR         IP, [SP, #32] 
    /*000223bc*/ STRD        R2, [SP, #8] 
    /*000223c0*/ LDRD        R2, [R9, R5] 
    /*000223c4*/ LDRD        R4, [R4] 
    /*000223c8*/ STRD        R0, [SP, #24] 
    /*000223cc*/ STRD        R2, [SP] 
    /*000223d0*/ STRD        R4, [SP, #16] 
    /*000223d4*/ STR         R8, [LR, #1752]             @ 0x6d8 
    /*000223d8*/ B           VPSS_DRV_Update3dnrMad_x2231c
FUNC_END VPSS_DRV_Update3dnrMad


FUNC_BEGIN VPSS_DRV_UpdateGmcParam
    /*000223dc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000223e0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000223e4*/ LDR         R3, [R3, R0, LSL #2] 
    /*000223e8*/ ADD         R1, R3, R1, LSL #3 
    /*000223ec*/ ADD         R3, R3, #12288              @ 0x3000 
    /*000223f0*/ ADD         R1, R1, #28672              @ 0x7000 
    /*000223f4*/ LDR         R3, [R3, #1720]             @ 0x6b8 
    /*000223f8*/ LDR         R2, [R1, #1640]             @ 0x668 
    /*000223fc*/ STR         R2, [R3, #204]              @ 0xcc 
    /*00022400*/ LDR         R2, [R1, #1644]             @ 0x66c 
    /*00022404*/ STR         R2, [R3, #208]              @ 0xd0 
    /*00022408*/ BX          LR 
FUNC_END VPSS_DRV_UpdateGmcParam


FUNC_BEGIN VPSS_DRV_Update3dnrParam
    /*0002240c*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00022410*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00022414*/ PUSH        {R4, LR} 
    /*00022418*/ LDR         IP, [IP, R0, LSL #2] 
    /*0002241c*/ ADD         R4, IP, R1, LSL #2 
    /*00022420*/ LDR         LR, [R4, #968]              @ 0x3c8 
    /*00022424*/ CMP         LR, #1 
    /*00022428*/ LDR         LR, [IP, #32] 
    /*0002242c*/ BEQ         VPSS_DRV_Update3dnrParam_x22440
    /*00022430*/ CMP         LR, #1 
    /*00022434*/ BEQ         VPSS_DRV_Update3dnrParam_x22440
    /*00022438*/ MOV         R0, #0 
    /*0002243c*/ POP         {R4, PC} 
    VPSS_DRV_Update3dnrParam_x22440:
    /*00022440*/ CMP         R3, #1 
    /*00022444*/ CMPEQ       LR, #1 
    /*00022448*/ MOV         R0, R2 
    /*0002244c*/ BEQ         VPSS_DRV_Update3dnrParam_x22498
    /*00022450*/ ADD         R3, IP, #24576              @ 0x6000 
    /*00022454*/ LDR         R3, [R3, #3108]             @ 0xc24 
    /*00022458*/ CMP         R3, #1 
    /*0002245c*/ ADDEQ       R1, IP, R1, LSL #3 
    /*00022460*/ ADDEQ       IP, IP, #12288              @ 0x3000 
    /*00022464*/ ADDEQ       R1, R1, #28672              @ 0x7000 
    /*00022468*/ ADDNE       IP, IP, #12288              @ 0x3000 
    /*0002246c*/ LDREQ       R3, [IP, #1720]             @ 0x6b8 
    /*00022470*/ LDREQ       R2, [R1, #1640]             @ 0x668 
    /*00022474*/ STREQ       R2, [R3, #204]              @ 0xcc 
    /*00022478*/ LDREQ       R2, [R1, #1644]             @ 0x66c 
    /*0002247c*/ STREQ       R2, [R3, #208]              @ 0xd0 
    /*00022480*/ LDR         R1, [IP, #1720]             @ 0x6b8 
    /*00022484*/ BL          0x0000000000022484          @ VPSS_HAL_Set3dnrParam [R_ARM_CALL: .text+0x28254] 
    VPSS_DRV_Update3dnrParam_x22488:
    /*00022488*/ MOV         R3, #0 
    /*0002248c*/ MOV         R0, #0 
    /*00022490*/ STR         R3, [R4, #968]              @ 0x3c8 
    /*00022494*/ POP         {R4, PC} 
    VPSS_DRV_Update3dnrParam_x22498:
    /*00022498*/ ADD         IP, IP, #12288              @ 0x3000 
    /*0002249c*/ LDR         R1, [IP, #1724]             @ 0x6bc 
    /*000224a0*/ BL          0x00000000000224A0          @ VPSS_HAL_Set3dnrcParam [R_ARM_CALL: .text+0x28278] 
    /*000224a4*/ B           VPSS_DRV_Update3dnrParam_x22488
FUNC_END VPSS_DRV_Update3dnrParam


FUNC_BEGIN VPSS_DRV_DisableTimeDomain
    /*000224a8*/ ADD         IP, R0, #4096               @ 0x1000 
    /*000224ac*/ LDR         R1, [R0, #1452]             @ 0x5ac 
    /*000224b0*/ LDR         R2, [R0, #1520]             @ 0x5f0 
    /*000224b4*/ LDR         R3, [IP, #2048]             @ 0x800 
    /*000224b8*/ BFC         R1, #31, #1 
    /*000224bc*/ BFC         R2, #31, #1 
    /*000224c0*/ BFC         R3, #3, #1 
    /*000224c4*/ BFC         R3, #6, #1 
    /*000224c8*/ BFC         R3, #10, #1 
    /*000224cc*/ STR         R3, [IP, #2048]             @ 0x800 
    /*000224d0*/ STR         R1, [R0, #1452]             @ 0x5ac 
    /*000224d4*/ STR         R2, [R0, #1520]             @ 0x5f0 
    /*000224d8*/ BX          LR 
FUNC_END VPSS_DRV_DisableTimeDomain


FUNC_BEGIN VPSS_DRV_Update3dnrAttr
    /*000224dc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000224e0*/ MOVW        R9, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000224e4*/ MOVT        R9, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000224e8*/ MOV         R8, R3 
    /*000224ec*/ MOV         R4, R0 
    /*000224f0*/ MOV         R6, R1 
    /*000224f4*/ LDR         R7, [R9, R0, LSL #2] 
    /*000224f8*/ MOV         R0, R2 
    /*000224fc*/ MOV         R5, R2 
    /*00022500*/ ADD         R3, R7, #16384              @ 0x4000 
    /*00022504*/ LDR         R1, [R3, #2340]             @ 0x924 
    /*00022508*/ BL          0x0000000000022508          @ VPSS_HAL_Set3dnrEnable [R_ARM_CALL: .text+0x27be4] 
    /*0002250c*/ LDR         R3, [R7, #28] 
    /*00022510*/ CMP         R3, #1 
    /*00022514*/ BEQ         VPSS_DRV_Update3dnrAttr_x225d0
    VPSS_DRV_Update3dnrAttr_x22518:
    /*00022518*/ MOV         R3, R8 
    /*0002251c*/ MOV         R2, R5 
    /*00022520*/ MOV         R1, R6 
    /*00022524*/ MOV         R0, R4 
    /*00022528*/ BL          0x0000000000022528          @ VPSS_DRV_Update3dnrRefAttr [R_ARM_CALL: .text+0x21da4] 
    /*0002252c*/ LDR         R1, [R9, R4, LSL #2] 
    /*00022530*/ MOV         R3, #376                    @ 0x178 
    /*00022534*/ MOVW        R2, #22172                  @ 0x569c 
    /*00022538*/ MLA         R3, R3, R6, R1 
    /*0002253c*/ LDR         R3, [R3, R2] 
    /*00022540*/ CMP         R3, #4 
    /*00022544*/ BEQ         VPSS_DRV_Update3dnrAttr_x225b8
    VPSS_DRV_Update3dnrAttr_x22548:
    /*00022548*/ MOV         R3, R8 
    /*0002254c*/ MOV         R2, R5 
    /*00022550*/ MOV         R1, R6 
    /*00022554*/ MOV         R0, R4 
    /*00022558*/ BL          0x0000000000022558          @ VPSS_DRV_Update3dnrRfrAttr [R_ARM_CALL: .text+0x2206c] 
    /*0002255c*/ MOV         R3, R8 
    /*00022560*/ MOV         R2, R5 
    /*00022564*/ MOV         R1, R6 
    /*00022568*/ MOV         R0, R4 
    /*0002256c*/ ADD         R7, R7, #12288              @ 0x3000 
    /*00022570*/ BL          0x0000000000022570          @ VPSS_DRV_Update3dnrRfrCmpParam [R_ARM_CALL: .text+0x22208] 
    /*00022574*/ MOV         R3, R8 
    /*00022578*/ MOV         R2, R5 
    /*0002257c*/ MOV         R1, R6 
    /*00022580*/ MOV         R0, R4 
    /*00022584*/ BL          0x0000000000022584          @ VPSS_DRV_Update3dnrMad [R_ARM_CALL: .text+0x222e0] 
    /*00022588*/ LDR         R3, [SP, #32] 
    /*0002258c*/ MOV         R2, R5 
    /*00022590*/ MOV         R1, R6 
    /*00022594*/ MOV         R0, R4 
    /*00022598*/ BL          0x0000000000022598          @ VPSS_DRV_Update3dnrParam [R_ARM_CALL: .text+0x2240c] 
    /*0002259c*/ LDR         R3, [R7, #1636]             @ 0x664 
    /*000225a0*/ CMP         R3, #0 
    /*000225a4*/ BNE         VPSS_DRV_Update3dnrAttr_x225b0
    /*000225a8*/ MOV         R0, R5 
    /*000225ac*/ BL          0x00000000000225AC          @ VPSS_DRV_DisableTimeDomain [R_ARM_CALL: .text+0x224a8] 
    VPSS_DRV_Update3dnrAttr_x225b0:
    /*000225b0*/ MOV         R0, #0 
    /*000225b4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_DRV_Update3dnrAttr_x225b8:
    /*000225b8*/ MOV         R3, R8 
    /*000225bc*/ MOV         R2, R5 
    /*000225c0*/ MOV         R1, R6 
    /*000225c4*/ MOV         R0, R4 
    /*000225c8*/ BL          0x00000000000225C8          @ VPSS_DRV_Update3dnrRefFDcmpParam [R_ARM_CALL: .text+0x21f5c] 
    /*000225cc*/ B           VPSS_DRV_Update3dnrAttr_x22548
    VPSS_DRV_Update3dnrAttr_x225d0:
    /*000225d0*/ MOV         R2, R8 
    /*000225d4*/ MOV         R1, R6 
    /*000225d8*/ MOV         R0, R4 
    /*000225dc*/ BL          0x00000000000225DC          @ VPSS_DRV_CalNrBufferCfg [R_ARM_CALL: .text+0x1a764] 
    /*000225e0*/ B           VPSS_DRV_Update3dnrAttr_x22518
FUNC_END VPSS_DRV_Update3dnrAttr


FUNC_BEGIN VPSS_DRV_Get3dnrProcState
    /*000225e4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000225e8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000225ec*/ LDR         R3, [R3, R0, LSL #2] 
    /*000225f0*/ LDR         R0, [R3, #28] 
    /*000225f4*/ CMP         R0, #0 
    /*000225f8*/ BEQ         VPSS_DRV_Get3dnrProcState_x2260c
    /*000225fc*/ LDR         R0, [R3, #32] 
    /*00022600*/ BIC         R0, R0, #2 
    /*00022604*/ CMP         R0, #1 
    /*00022608*/ BEQ         VPSS_DRV_Get3dnrProcState_x22620
    VPSS_DRV_Get3dnrProcState_x2260c:
    /*0002260c*/ MOV         R3, #1 
    /*00022610*/ STR         R3, [R1] 
    VPSS_DRV_Get3dnrProcState_x22614:
    /*00022614*/ MOV         R3, #0 
    /*00022618*/ STR         R3, [R2] 
    /*0002261c*/ BX          LR 
    VPSS_DRV_Get3dnrProcState_x22620:
    /*00022620*/ ADD         R3, R3, #16384              @ 0x4000 
    /*00022624*/ LDR         R3, [R3, #2724]             @ 0xaa4 
    /*00022628*/ CMP         R3, #39                     @ 0x27 
    /*0002262c*/ MOVNE       R3, #2 
    /*00022630*/ STRNE       R3, [R1] 
    /*00022634*/ BNE         VPSS_DRV_Get3dnrProcState_x22614
    /*00022638*/ B           VPSS_DRV_Get3dnrProcState_x2260c
FUNC_END VPSS_DRV_Get3dnrProcState


FUNC_BEGIN VpssDrvUpdateMosaic
    /*0002263c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00022640*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00022644*/ PUSH        {R4, R5, R6, LR} 
    /*00022648*/ MOV         R6, R1 
    /*0002264c*/ LDR         R4, [R3, R0, LSL #2] 
    /*00022650*/ MOV         R5, #0 
    /*00022654*/ ADD         R4, R4, #17920              @ 0x4600 
    /*00022658*/ ADD         R4, R4, #228                @ 0xe4 
    VpssDrvUpdateMosaic_x2265c:
    /*0002265c*/ MOV         R3, R4 
    /*00022660*/ MOV         R2, R5 
    /*00022664*/ MOV         R1, #0 
    /*00022668*/ MOV         R0, R6 
    /*0002266c*/ BL          0x000000000002266C          @ VPSS_HAL_SetMosaic [R_ARM_CALL: .text+0x26eac] 
    /*00022670*/ MOV         R3, R4 
    /*00022674*/ MOV         R2, R5 
    /*00022678*/ MOV         R1, #0 
    /*0002267c*/ ADD         R5, R5, #1 
    /*00022680*/ MOV         R0, R6 
    /*00022684*/ BL          0x0000000000022684          @ VPSS_HAL_SetMosaicCtrl [R_ARM_CALL: .text+0x26f30] 
    /*00022688*/ CMP         R5, #4 
    /*0002268c*/ ADD         R4, R4, #24 
    /*00022690*/ BNE         VpssDrvUpdateMosaic_x2265c
    /*00022694*/ MOV         R0, #0 
    /*00022698*/ POP         {R4, R5, R6, PC} 
FUNC_END VpssDrvUpdateMosaic


FUNC_BEGIN VpssDrvUpdateMosaic_Split
    /*0002269c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000226a0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000226a4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000226a8*/ SUB         SP, SP, #112                @ 0x70 
    /*000226ac*/ LDR         R6, [R3, R0, LSL #2] 
    /*000226b0*/ MOV         R9, R1 
    /*000226b4*/ ADD         R0, SP, #48                 @ 0x30 
    /*000226b8*/ MOV         R5, R2 
    /*000226bc*/ ADD         R6, R6, #18688              @ 0x4900 
    /*000226c0*/ MOV         R2, #64                     @ 0x40 
    /*000226c4*/ ADD         R6, R6, #24 
    /*000226c8*/ MOV         R4, R0 
    /*000226cc*/ ADD         R1, R6, #3264               @ 0xcc0 
    /*000226d0*/ ADD         R8, R5, #120                @ 0x78 
    /*000226d4*/ ADD         R1, R1, #4 
    /*000226d8*/ BL          0x00000000000226D8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000226dc*/ ADD         R1, R6, #3232               @ 0xca0 
    /*000226e0*/ ADD         R1, R1, #12 
    /*000226e4*/ MOV         R0, SP 
    /*000226e8*/ MOV         R2, #24 
    /*000226ec*/ MOV         R6, #1 
    /*000226f0*/ BL          0x00000000000226F0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VpssDrvUpdateMosaic_Split_x226f4:
    /*000226f4*/ LDR         R1, [R8], #4 
    /*000226f8*/ SUB         R7, R6, #1 
    /*000226fc*/ LDR         IP, [R5, #60]               @ 0x3c 
    /*00022700*/ ADD         R3, SP, #24 
    /*00022704*/ LDR         LR, [R5, #52]               @ 0x34 
    /*00022708*/ MOV         R2, R7 
    /*0002270c*/ STR         R1, [SP, R6, LSL #2] 
    /*00022710*/ ADD         R6, R6, #1 
    /*00022714*/ LDR         R0, [SP, #20] 
    /*00022718*/ ADD         R5, R5, #16 
    /*0002271c*/ LDR         SL, [R4, #12] 
    /*00022720*/ ADD         R4, R4, #16 
    /*00022724*/ STR         IP, [R4, #-8] 
    /*00022728*/ STR         IP, [SP, #32] 
    /*0002272c*/ LDR         IP, [R4, #-12] 
    /*00022730*/ STR         LR, [R4, #-16] 
    /*00022734*/ STR         R1, [SP, #24] 
    /*00022738*/ MOV         R1, #0 
    /*0002273c*/ STR         R0, [SP, #28] 
    /*00022740*/ MOV         R0, R9 
    /*00022744*/ STR         LR, [SP, #40]               @ 0x28 
    /*00022748*/ STR         IP, [SP, #44]               @ 0x2c 
    /*0002274c*/ STR         SL, [SP, #36]               @ 0x24 
    /*00022750*/ BL          0x0000000000022750          @ VPSS_HAL_SetMosaic [R_ARM_CALL: .text+0x26eac] 
    /*00022754*/ ADD         R3, SP, #24 
    /*00022758*/ MOV         R2, R7 
    /*0002275c*/ MOV         R1, #0 
    /*00022760*/ MOV         R0, R9 
    /*00022764*/ BL          0x0000000000022764          @ VPSS_HAL_SetMosaicCtrl [R_ARM_CALL: .text+0x26f30] 
    /*00022768*/ CMP         R6, #5 
    /*0002276c*/ BNE         VpssDrvUpdateMosaic_Split_x226f4
    /*00022770*/ ADD         SP, SP, #112                @ 0x70 
    /*00022774*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VpssDrvUpdateMosaic_Split


FUNC_BEGIN VpssDrvUpdateSHBD
    /*00022778*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0002277c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00022780*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00022784*/ MOV         R6, R1 
    /*00022788*/ LDR         R7, [R3, R0, LSL #2] 
    /*0002278c*/ MOV         R4, #0 
    /*00022790*/ ADD         R5, R7, #21504              @ 0x5400 
    /*00022794*/ ADD         R5, R5, #36                 @ 0x24 
    VpssDrvUpdateSHBD_x22798:
    /*00022798*/ MOV         R3, R5 
    /*0002279c*/ MOV         R2, R4 
    /*000227a0*/ MOV         R1, #0 
    /*000227a4*/ MOV         R0, R6 
    /*000227a8*/ BL          0x00000000000227A8          @ VPSS_HAL_SetCover [R_ARM_CALL: .text+0x27048] 
    /*000227ac*/ MOV         R3, R5 
    /*000227b0*/ MOV         R2, R4 
    /*000227b4*/ MOV         R1, #0 
    /*000227b8*/ ADD         R4, R4, #1 
    /*000227bc*/ MOV         R0, R6 
    /*000227c0*/ BL          0x00000000000227C0          @ VPSS_HAL_SetCover1 [R_ARM_CALL: .text+0x270cc] 
    /*000227c4*/ CMP         R4, #8 
    /*000227c8*/ ADD         R5, R5, #52                 @ 0x34 
    /*000227cc*/ BNE         VpssDrvUpdateSHBD_x22798
    /*000227d0*/ ADD         R2, R7, #21504              @ 0x5400 
    /*000227d4*/ MOV         R0, R6 
    /*000227d8*/ MOV         R1, #0 
    /*000227dc*/ POP         {R4, R5, R6, R7, R8, LR} 
    VpssDrvUpdateSHBD_x227e0:
    /*000227e0*/ B           VpssDrvUpdateSHBD_x227e0    @ VPSS_HAL_SetCoverCtrl [R_ARM_JUMP24: .text+0x26fd0] 
FUNC_END VpssDrvUpdateSHBD


FUNC_BEGIN VpssDrvUpdateSHBD_Split
    /*000227e4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000227e8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000227ec*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000227f0*/ SUB         SP, SP, #40                 @ 0x28 
    /*000227f4*/ LDR         R6, [R3, R0, LSL #2] 
    /*000227f8*/ MOV         R8, R1 
    /*000227fc*/ LDR         R0, [PC, #176]              @ 0x00000000000228b4 
    /*00022800*/ ADD         SL, SP, #4 
    /*00022804*/ ADD         R1, R6, #21504              @ 0x5400 
    /*00022808*/ MOV         R5, R2 
    /*0002280c*/ ADD         R1, R1, #36                 @ 0x24 
    /*00022810*/ MOV         R2, #416                    @ 0x1a0 
    /*00022814*/ MOV         R4, R0 
    /*00022818*/ BL          0x0000000000022818          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0002281c*/ ADD         R1, R6, #21504              @ 0x5400 
    /*00022820*/ MOV         R0, SL 
    /*00022824*/ MOV         R2, #36                     @ 0x24 
    /*00022828*/ ADD         R9, R5, #144                @ 0x90 
    /*0002282c*/ BL          0x000000000002282C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00022830*/ MOV         R6, #1 
    VpssDrvUpdateSHBD_Split_x22834:
    /*00022834*/ LDR         IP, [R5, #184]              @ 0xb8 
    /*00022838*/ SUB         R7, R6, #1 
    /*0002283c*/ MOV         R3, R4 
    /*00022840*/ MOV         R1, #0 
    /*00022844*/ MOV         R2, R7 
    /*00022848*/ MOV         R0, R8 
    /*0002284c*/ STR         IP, [R4, #8] 
    /*00022850*/ ADD         R5, R5, #52                 @ 0x34 
    /*00022854*/ LDR         IP, [R5, #140]              @ 0x8c 
    /*00022858*/ STR         IP, [R4, #16] 
    /*0002285c*/ LDR         IP, [R5, #148]              @ 0x94 
    /*00022860*/ STR         IP, [R4, #24] 
    /*00022864*/ LDR         IP, [R5, #156]              @ 0x9c 
    /*00022868*/ STR         IP, [R4, #32] 
    /*0002286c*/ LDR         IP, [R9], #4 
    /*00022870*/ STR         IP, [SL, R6, LSL #2] 
    /*00022874*/ BL          0x0000000000022874          @ VPSS_HAL_SetCover [R_ARM_CALL: .text+0x27048] 
    /*00022878*/ ADD         R6, R6, #1 
    /*0002287c*/ MOV         R3, R4 
    /*00022880*/ MOV         R2, R7 
    /*00022884*/ MOV         R1, #0 
    /*00022888*/ MOV         R0, R8 
    /*0002288c*/ ADD         R4, R4, #52                 @ 0x34 
    /*00022890*/ BL          0x0000000000022890          @ VPSS_HAL_SetCover1 [R_ARM_CALL: .text+0x270cc] 
    /*00022894*/ CMP         R6, #9 
    /*00022898*/ BNE         VpssDrvUpdateSHBD_Split_x22834
    /*0002289c*/ MOV         R2, SL 
    /*000228a0*/ MOV         R0, R8 
    /*000228a4*/ MOV         R1, #0 
    /*000228a8*/ BL          0x00000000000228A8          @ VPSS_HAL_SetCoverCtrl [R_ARM_CALL: .text+0x26fd0] 
    /*000228ac*/ ADD         SP, SP, #40                 @ 0x28 
    /*000228b0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*000228b4*/ ANDEQ       R6, R0, IP, ROR #11 
FUNC_END VpssDrvUpdateSHBD_Split


FUNC_BEGIN VPSS_DRV_MULTI_SetModelCfg
    /*000228b8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000228bc*/ MOVW        R8, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000228c0*/ MOVT        R8, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000228c4*/ SUB         SP, SP, #68                 @ 0x44 
    /*000228c8*/ LDR         R5, [R0] 
    /*000228cc*/ MOV         R7, R1 
    /*000228d0*/ LDR         SL, [R8, R1, LSL #2] 
    /*000228d4*/ MOV         R9, R0 
    /*000228d8*/ LDR         R4, [SP, #104]              @ 0x68 
    /*000228dc*/ ADD         R6, SL, #16384              @ 0x4000 
    /*000228e0*/ MOV         R0, R5 
    /*000228e4*/ STR         R3, [SP, #12] 
    /*000228e8*/ LDR         R2, [R6, #2528]             @ 0x9e0 
    /*000228ec*/ LDR         R1, [R4, #4] 
    /*000228f0*/ LDR         FP, [SP, #120]              @ 0x78 
    /*000228f4*/ BL          0x00000000000228F4          @ VPSS_HAL_SetSrcImgSize [R_ARM_CALL: .text+0x2697c] 
    /*000228f8*/ LDR         R1, [R6, #2724]             @ 0xaa4 
    /*000228fc*/ MOV         R0, R5 
    /*00022900*/ SUB         R1, R1, #25 
    /*00022904*/ CLZ         R1, R1 
    /*00022908*/ LSR         R1, R1, #5 
    /*0002290c*/ BL          0x000000000002290C          @ VPSS_HAL_SetSrcImgType [R_ARM_CALL: .text+0x269d0] 
    /*00022910*/ LDR         R2, [SL, #28] 
    /*00022914*/ CMP         R2, #1 
    /*00022918*/ BEQ         VPSS_DRV_MULTI_SetModelCfg_x22c30
    VPSS_DRV_MULTI_SetModelCfg_x2291c:
    /*0002291c*/ LDR         R3, [R6, #2724]             @ 0xaa4 
    /*00022920*/ CMP         R3, #39                     @ 0x27 
    /*00022924*/ MOVNE       R1, #0 
    /*00022928*/ BEQ         VPSS_DRV_MULTI_SetModelCfg_x22c58
    VPSS_DRV_MULTI_SetModelCfg_x2292c:
    /*0002292c*/ MOV         R0, R5 
    /*00022930*/ BL          0x0000000000022930          @ VPSS_HAL_SetImgWorkType [R_ARM_CALL: .text+0x269e0] 
    VPSS_DRV_MULTI_SetModelCfg_x22934:
    /*00022934*/ STR         FP, [SP] 
    /*00022938*/ MOV         R3, R4 
    /*0002293c*/ LDR         R2, [SP, #12] 
    /*00022940*/ MOV         R1, R5 
    /*00022944*/ MOV         R0, R7 
    /*00022948*/ MOV         R6, #0 
    /*0002294c*/ BL          0x00000000000177F0 
    /*00022950*/ ADD         R3, SL, #18688              @ 0x4900 
    /*00022954*/ ADD         R3, R3, #136                @ 0x88 
    /*00022958*/ MOV         R2, R4 
    /*0002295c*/ MOV         R1, R5 
    /*00022960*/ MOV         R0, R7 
    /*00022964*/ BL          0x0000000000017B54 
    /*00022968*/ LDR         R3, [SP, #112]              @ 0x70 
    /*0002296c*/ MOV         R2, R5 
    /*00022970*/ LDR         R1, [SP, #116]              @ 0x74 
    /*00022974*/ MOV         R0, R7 
    /*00022978*/ STR         R3, [SP] 
    /*0002297c*/ MOV         R3, R4 
    /*00022980*/ BL          0x0000000000022980          @ VPSS_DRV_Update3dnrAttr [R_ARM_CALL: .text+0x224dc] 
    /*00022984*/ MOV         R1, R5 
    /*00022988*/ MOV         R2, R4 
    /*0002298c*/ MOV         R0, R7 
    /*00022990*/ BL          0x0000000000022990          @ VpssDrvUpdateMosaic_Split [R_ARM_CALL: .text+0x2269c] 
    /*00022994*/ LDRD        R2, [R9, #8] 
    /*00022998*/ MOV         R0, R5 
    /*0002299c*/ ADDS        R2, R2, #9216               @ 0x2400 
    /*000229a0*/ ADC         R3, R3, #0 
    /*000229a4*/ BL          0x00000000000229A4          @ VPSS_HAL_SetMosaicLoadAddr [R_ARM_CALL: .text+0x276e0] 
    /*000229a8*/ LDR         R2, [R4, #4] 
    /*000229ac*/ MOV         R1, R5 
    /*000229b0*/ MOV         R0, R7 
    /*000229b4*/ BL          0x00000000000229B4          @ VpssDrvUpdateDcmp [R_ARM_CALL: .text+0x20e34] 
    /*000229b8*/ LDR         R2, [SP, #116]              @ 0x74 
    /*000229bc*/ MOV         R1, R5 
    /*000229c0*/ MOV         R0, R7 
    /*000229c4*/ BL          0x00000000000229C4          @ VPSS_DRV_Multi_UpdateCurLowDelay [R_ARM_CALL: .text+0x20dd0] 
    /*000229c8*/ MOV         R1, R5 
    /*000229cc*/ MOV         R2, R4 
    /*000229d0*/ MOV         R0, R7 
    /*000229d4*/ BL          0x00000000000229D4          @ VpssDrvUpdateSHBD_Split [R_ARM_CALL: .text+0x227e4] 
    /*000229d8*/ LDRD        R2, [R9, #8] 
    /*000229dc*/ MOV         R0, R5 
    /*000229e0*/ ADDS        R2, R2, #9728               @ 0x2600 
    /*000229e4*/ ADC         R3, R3, #0 
    /*000229e8*/ BL          0x00000000000229E8          @ VPSS_HAL_SetShbdLoadAddr [R_ARM_CALL: .text+0x276d8] 
    /*000229ec*/ MOV         R3, FP 
    /*000229f0*/ MOV         R1, R5 
    /*000229f4*/ MOV         R2, R4 
    /*000229f8*/ MOV         R0, R7 
    /*000229fc*/ BL          0x00000000000210C8 
    /*00022a00*/ LDRD        R2, [R9, #8] 
    /*00022a04*/ MOV         R0, R5 
    /*00022a08*/ ADDS        R2, R2, #8192               @ 0x2000 
    /*00022a0c*/ ADC         R3, R3, #0 
    /*00022a10*/ BL          0x0000000000022A10          @ VPSS_HAL_SetZmeLoadAddr [R_ARM_CALL: .text+0x276d0] 
    /*00022a14*/ LDRD        R2, [R9, #8] 
    /*00022a18*/ MOV         R0, R5 
    /*00022a1c*/ ADDS        R2, R2, #6144               @ 0x1800 
    /*00022a20*/ ADC         R3, R3, #0 
    /*00022a24*/ BL          0x0000000000022A24          @ VPSS_HAL_SetNrLoadAddr [R_ARM_CALL: .text+0x276c8] 
    /*00022a28*/ LDR         R9, [R8, R7, LSL #2] 
    /*00022a2c*/ MOV         R3, #72                     @ 0x48 
    /*00022a30*/ ADD         SL, R9, #12288              @ 0x3000 
    /*00022a34*/ MLA         R3, R3, FP, R9 
    /*00022a38*/ ADD         FP, R3, #18688              @ 0x4900 
    /*00022a3c*/ ADD         FP, FP, #60                 @ 0x3c 
    VPSS_DRV_MULTI_SetModelCfg_x22a40:
    /*00022a40*/ MOV         R0, R6 
    /*00022a44*/ BL          0x0000000000022A44          @ VPSS_HAL_GetHalChn [R_ARM_CALL: .text+0x263bc] 
    /*00022a48*/ LDR         R3, [FP] 
    /*00022a4c*/ CMP         R3, #0 
    /*00022a50*/ BEQ         VPSS_DRV_MULTI_SetModelCfg_x22aa8
    /*00022a54*/ CMP         R6, #1 
    /*00022a58*/ BEQ         VPSS_DRV_MULTI_SetModelCfg_x22bf8
    /*00022a5c*/ CMP         R6, #2 
    /*00022a60*/ BNE         VPSS_DRV_MULTI_SetModelCfg_x22bc0
    /*00022a64*/ LDR         R2, [R4, #692]              @ 0x2b4 
    /*00022a68*/ LDR         R3, [R4, #724]              @ 0x2d4 
    /*00022a6c*/ STR         R2, [SP, #20] 
    /*00022a70*/ CMP         R3, #0 
    /*00022a74*/ LDR         R2, [SL, #3268]             @ 0xcc4 
    /*00022a78*/ LDR         R3, [R4, #696]              @ 0x2b8 
    /*00022a7c*/ STR         R2, [SP, #24] 
    /*00022a80*/ STR         R3, [SP, #28] 
    /*00022a84*/ LDR         R3, [R4, #688]              @ 0x2b0 
    /*00022a88*/ LDRNE       R2, [R9, #948]              @ 0x3b4 
    /*00022a8c*/ LDREQ       R2, [SL, #3276]             @ 0xccc 
    /*00022a90*/ STR         R3, [SP, #36]               @ 0x24 
    /*00022a94*/ STR         R2, [SP, #32] 
    VPSS_DRV_MULTI_SetModelCfg_x22a98:
    /*00022a98*/ MOV         R1, R0 
    /*00022a9c*/ ADD         R2, SP, #20 
    /*00022aa0*/ MOV         R0, R5 
    /*00022aa4*/ BL          0x0000000000022AA4          @ VPSS_HAL_SetChnCrop [R_ARM_CALL: .text+0x26d9c] 
    VPSS_DRV_MULTI_SetModelCfg_x22aa8:
    /*00022aa8*/ ADD         R6, R6, #1 
    /*00022aac*/ ADD         FP, FP, #24 
    /*00022ab0*/ CMP         R6, #3 
    /*00022ab4*/ BNE         VPSS_DRV_MULTI_SetModelCfg_x22a40
    /*00022ab8*/ LDR         R6, [R8, R7, LSL #2] 
    /*00022abc*/ ADD         R2, SP, #20 
    /*00022ac0*/ LDR         R1, [R4, #704]              @ 0x2c0 
    /*00022ac4*/ LDR         R0, [R4, #708]              @ 0x2c4 
    /*00022ac8*/ LDR         IP, [R4, #736]              @ 0x2e0 
    /*00022acc*/ LDR         R3, [R4, #700]              @ 0x2bc 
    /*00022ad0*/ STR         R1, [SP, #24] 
    /*00022ad4*/ MOV         R1, #0 
    /*00022ad8*/ STR         R0, [SP, #32] 
    /*00022adc*/ AND         R3, R3, IP 
    /*00022ae0*/ STR         R3, [SP, #20] 
    /*00022ae4*/ MOV         R0, R5 
    /*00022ae8*/ LDR         R3, [R6, #844]              @ 0x34c 
    /*00022aec*/ STR         R3, [SP, #28] 
    /*00022af0*/ LDR         R3, [R6, #852]              @ 0x354 
    /*00022af4*/ STR         R3, [SP, #36]               @ 0x24 
    /*00022af8*/ LDR         R3, [R6, #872]              @ 0x368 
    /*00022afc*/ STR         R3, [SP, #56]               @ 0x38 
    /*00022b00*/ LDR         R3, [R6, #868]              @ 0x364 
    /*00022b04*/ STR         R3, [SP, #52]               @ 0x34 
    /*00022b08*/ LDR         R3, [R6, #864]              @ 0x360 
    /*00022b0c*/ STR         R3, [SP, #48]               @ 0x30 
    /*00022b10*/ BL          0x0000000000022B10          @ VPSS_HAL_SetLBA [R_ARM_CALL: .text+0x27238] 
    /*00022b14*/ LDR         IP, [R4, #712]              @ 0x2c8 
    /*00022b18*/ ADD         R2, SP, #20 
    /*00022b1c*/ LDR         R0, [R4, #716]              @ 0x2cc 
    /*00022b20*/ MOV         R1, #1 
    /*00022b24*/ LDR         R3, [R4, #720]              @ 0x2d0 
    /*00022b28*/ STR         IP, [SP, #20] 
    /*00022b2c*/ STR         R0, [SP, #24] 
    /*00022b30*/ MOV         R0, R5 
    /*00022b34*/ STR         R3, [SP, #32] 
    /*00022b38*/ LDR         R3, [R6, #888]              @ 0x378 
    /*00022b3c*/ STR         R3, [SP, #28] 
    /*00022b40*/ LDR         R3, [R6, #896]              @ 0x380 
    /*00022b44*/ STR         R3, [SP, #36]               @ 0x24 
    /*00022b48*/ LDR         R3, [R6, #916]              @ 0x394 
    /*00022b4c*/ STR         R3, [SP, #56]               @ 0x38 
    /*00022b50*/ LDR         R3, [R6, #912]              @ 0x390 
    /*00022b54*/ STR         R3, [SP, #52]               @ 0x34 
    /*00022b58*/ LDR         R3, [R6, #908]              @ 0x38c 
    /*00022b5c*/ STR         R3, [SP, #48]               @ 0x30 
    /*00022b60*/ BL          0x0000000000022B60          @ VPSS_HAL_SetLBA [R_ARM_CALL: .text+0x27238] 
    /*00022b64*/ LDR         R3, [R4, #732]              @ 0x2dc 
    /*00022b68*/ MOV         R0, R5 
    /*00022b6c*/ LDR         LR, [R4, #724]              @ 0x2d4 
    /*00022b70*/ ADD         R2, SP, #20 
    /*00022b74*/ LDR         IP, [R4, #728]              @ 0x2d8 
    /*00022b78*/ MOV         R1, #2 
    /*00022b7c*/ STR         R3, [SP, #32] 
    /*00022b80*/ STR         LR, [SP, #20] 
    /*00022b84*/ STR         IP, [SP, #24] 
    /*00022b88*/ LDR         R3, [R6, #932]              @ 0x3a4 
    /*00022b8c*/ STR         R3, [SP, #28] 
    /*00022b90*/ LDR         R3, [R6, #940]              @ 0x3ac 
    /*00022b94*/ STR         R3, [SP, #36]               @ 0x24 
    /*00022b98*/ LDR         R3, [R6, #960]              @ 0x3c0 
    /*00022b9c*/ STR         R3, [SP, #56]               @ 0x38 
    /*00022ba0*/ LDR         R3, [R6, #956]              @ 0x3bc 
    /*00022ba4*/ STR         R3, [SP, #52]               @ 0x34 
    /*00022ba8*/ LDR         R3, [R6, #952]              @ 0x3b8 
    /*00022bac*/ STR         R3, [SP, #48]               @ 0x30 
    /*00022bb0*/ BL          0x0000000000022BB0          @ VPSS_HAL_SetLBA [R_ARM_CALL: .text+0x27238] 
    /*00022bb4*/ MOV         R0, #0 
    /*00022bb8*/ ADD         SP, SP, #68                 @ 0x44 
    /*00022bbc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_MULTI_SetModelCfg_x22bc0:
    /*00022bc0*/ LDR         R3, [R4, #700]              @ 0x2bc 
    /*00022bc4*/ MOV         R1, #0 
    /*00022bc8*/ LDR         R2, [R4, #668]              @ 0x29c 
    /*00022bcc*/ CMP         R3, #0 
    /*00022bd0*/ LDR         R3, [R4, #672]              @ 0x2a0 
    /*00022bd4*/ STR         R1, [SP, #24] 
    /*00022bd8*/ STR         R2, [SP, #20] 
    /*00022bdc*/ STR         R3, [SP, #28] 
    /*00022be0*/ LDR         R3, [R4, #664]              @ 0x298 
    /*00022be4*/ LDRNE       R2, [R9, #860]              @ 0x35c 
    /*00022be8*/ LDREQ       R2, [SL, #3228]             @ 0xc9c 
    /*00022bec*/ STR         R3, [SP, #36]               @ 0x24 
    /*00022bf0*/ STR         R2, [SP, #32] 
    /*00022bf4*/ B           VPSS_DRV_MULTI_SetModelCfg_x22a98
    VPSS_DRV_MULTI_SetModelCfg_x22bf8:
    /*00022bf8*/ LDR         R2, [R4, #680]              @ 0x2a8 
    /*00022bfc*/ LDR         R3, [R4, #712]              @ 0x2c8 
    /*00022c00*/ STR         R2, [SP, #20] 
    /*00022c04*/ CMP         R3, #0 
    /*00022c08*/ LDR         R2, [SL, #3244]             @ 0xcac 
    /*00022c0c*/ LDR         R3, [R4, #684]              @ 0x2ac 
    /*00022c10*/ STR         R2, [SP, #24] 
    /*00022c14*/ STR         R3, [SP, #28] 
    /*00022c18*/ LDR         R3, [R4, #676]              @ 0x2a4 
    /*00022c1c*/ LDRNE       R2, [R9, #904]              @ 0x388 
    /*00022c20*/ LDREQ       R2, [SL, #3252]             @ 0xcb4 
    /*00022c24*/ STR         R3, [SP, #36]               @ 0x24 
    /*00022c28*/ STR         R2, [SP, #32] 
    /*00022c2c*/ B           VPSS_DRV_MULTI_SetModelCfg_x22a98
    VPSS_DRV_MULTI_SetModelCfg_x22c30:
    /*00022c30*/ LDR         R1, [SL, #32] 
    /*00022c34*/ CMP         R1, #1 
    /*00022c38*/ BNE         VPSS_DRV_MULTI_SetModelCfg_x2291c
    /*00022c3c*/ LDR         R3, [SP, #112]              @ 0x70 
    /*00022c40*/ CMP         R3, #0 
    /*00022c44*/ BEQ         VPSS_DRV_MULTI_SetModelCfg_x2292c
    /*00022c48*/ MOV         R1, #2 
    /*00022c4c*/ MOV         R0, R5 
    /*00022c50*/ BL          0x0000000000022C50          @ VPSS_HAL_SetImgWorkType [R_ARM_CALL: .text+0x269e0] 
    /*00022c54*/ B           VPSS_DRV_MULTI_SetModelCfg_x22934
    VPSS_DRV_MULTI_SetModelCfg_x22c58:
    /*00022c58*/ MOV         R1, #1 
    /*00022c5c*/ MOV         R0, R5 
    /*00022c60*/ BL          0x0000000000022C60          @ VPSS_HAL_SetImgWorkType [R_ARM_CALL: .text+0x269e0] 
    /*00022c64*/ B           VPSS_DRV_MULTI_SetModelCfg_x22934
FUNC_END VPSS_DRV_MULTI_SetModelCfg


FUNC_BEGIN VpssDrvUpdateSclRatio
    /*00022c68*/ SUB         SP, SP, #8 
    /*00022c6c*/ CMP         R2, #29 
    /*00022c70*/ CMPNE       R2, #26 
    /*00022c74*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00022c78*/ SUB         SP, SP, #28 
    /*00022c7c*/ ADD         IP, SP, #24 
    /*00022c80*/ MOV         R5, #0 
    /*00022c84*/ LDR         R6, [SP, #76]               @ 0x4c 
    /*00022c88*/ MOVEQ       SL, #1 
    /*00022c8c*/ STMDB       IP, {R0, R1} 
    /*00022c90*/ MOVNE       SL, #0 
    /*00022c94*/ LDR         R9, [SP, #16] 
    /*00022c98*/ CMP         R6, #26 
    /*00022c9c*/ CMPNE       R6, #29 
    /*00022ca0*/ MOV         R8, R3 
    /*00022ca4*/ LSR         R1, R3, #12 
    /*00022ca8*/ LSL         R0, R3, #20 
    /*00022cac*/ STR         R3, [SP, #68]               @ 0x44 
    /*00022cb0*/ MOV         R2, R9 
    /*00022cb4*/ MOV         R3, R5 
    /*00022cb8*/ MOVEQ       R6, #1 
    /*00022cbc*/ MOVNE       R6, #0 
    /*00022cc0*/ LDR         R4, [SP, #80]               @ 0x50 
    /*00022cc4*/ LDR         FP, [SP, #20] 
    /*00022cc8*/ LDR         R7, [SP, #72]               @ 0x48 
    /*00022ccc*/ STM         SP, {R0, R1} 
    /*00022cd0*/ BL          0x0000000000022CD0          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00022cd4*/ LSR         R3, R9, #12 
    /*00022cd8*/ MOV         R2, R8 
    /*00022cdc*/ LSR         SL, FP, SL 
    /*00022ce0*/ LSR         R6, R7, R6 
    /*00022ce4*/ MOV         IP, R3 
    /*00022ce8*/ LSL         R3, R9, #20 
    /*00022cec*/ MOV         R1, IP 
    /*00022cf0*/ STR         IP, [SP, #12] 
    /*00022cf4*/ MOV         LR, R3 
    /*00022cf8*/ MOV         R3, R5 
    /*00022cfc*/ STR         LR, [SP, #8] 
    /*00022d00*/ STR         R0, [R4, #80]               @ 0x50 
    /*00022d04*/ MOV         R0, LR 
    /*00022d08*/ BL          0x0000000000022D08          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00022d0c*/ MOV         R2, R9 
    /*00022d10*/ MOV         R3, R5 
    /*00022d14*/ LDR         R1, [SP, #4] 
    /*00022d18*/ STR         R0, [R4, #64]               @ 0x40 
    /*00022d1c*/ LDR         R0, [SP] 
    /*00022d20*/ BL          0x0000000000022D20          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00022d24*/ MOV         R2, R8 
    /*00022d28*/ MOV         R3, R5 
    /*00022d2c*/ LDR         R1, [SP, #12] 
    /*00022d30*/ STR         R0, [R4, #88]               @ 0x58 
    /*00022d34*/ LDR         R0, [SP, #8] 
    /*00022d38*/ BL          0x0000000000022D38          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00022d3c*/ MOV         R2, FP 
    /*00022d40*/ MOV         R3, R5 
    /*00022d44*/ LSR         R1, R7, #12 
    /*00022d48*/ STR         R0, [R4, #72]               @ 0x48 
    /*00022d4c*/ LSL         R0, R7, #20 
    /*00022d50*/ BL          0x0000000000022D50          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00022d54*/ MOV         R2, R7 
    /*00022d58*/ MOV         R3, R5 
    /*00022d5c*/ LSR         R1, FP, #12 
    /*00022d60*/ STR         R0, [R4, #84]               @ 0x54 
    /*00022d64*/ LSL         R0, FP, #20 
    /*00022d68*/ BL          0x0000000000022D68          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00022d6c*/ MOV         R2, SL 
    /*00022d70*/ MOV         R3, R5 
    /*00022d74*/ LSR         R1, R6, #12 
    /*00022d78*/ STR         R0, [R4, #68]               @ 0x44 
    /*00022d7c*/ LSL         R0, R6, #20 
    /*00022d80*/ BL          0x0000000000022D80          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00022d84*/ MOV         R2, R6 
    /*00022d88*/ MOV         R3, R5 
    /*00022d8c*/ LSR         R1, SL, #12 
    /*00022d90*/ STR         R0, [R4, #92]               @ 0x5c 
    /*00022d94*/ LSL         R0, SL, #20 
    /*00022d98*/ BL          0x0000000000022D98          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00022d9c*/ STR         R0, [R4, #76]               @ 0x4c 
    /*00022da0*/ ADD         SP, SP, #28 
    /*00022da4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00022da8*/ ADD         SP, SP, #8 
    /*00022dac*/ BX          LR 
FUNC_END VpssDrvUpdateSclRatio


FUNC_BEGIN VPSS_DRV_GenSclCfg
    /*00022db0*/ MOV         IP, #72                     @ 0x48 
    /*00022db4*/ PUSH        {R4, R5, LR} 
    /*00022db8*/ MOVW        LR, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00022dbc*/ MUL         R3, IP, R3 
    /*00022dc0*/ MOVT        LR, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00022dc4*/ MOV         IP, #24 
    /*00022dc8*/ MOV         R4, R2 
    /*00022dcc*/ MLA         R3, IP, R1, R3 
    /*00022dd0*/ LDR         R0, [LR, R0, LSL #2] 
    /*00022dd4*/ SUB         SP, SP, #68                 @ 0x44 
    /*00022dd8*/ ADD         IP, R0, #16384              @ 0x4000 
    /*00022ddc*/ ADD         R0, R0, #12288              @ 0x3000 
    /*00022de0*/ ADD         R3, IP, R3 
    /*00022de4*/ LDR         R2, [R0, #3176]             @ 0xc68 
    /*00022de8*/ LDR         LR, [R3, #2364]             @ 0x93c 
    /*00022dec*/ LDR         R3, [R0, #3180]             @ 0xc6c 
    /*00022df0*/ CMP         LR, #1 
    /*00022df4*/ STR         R2, [SP, #16] 
    /*00022df8*/ STR         R3, [SP, #20] 
    /*00022dfc*/ BEQ         VPSS_DRV_GenSclCfg_x22ea0
    /*00022e00*/ CMP         R1, #0 
    /*00022e04*/ BEQ         VPSS_DRV_GenSclCfg_x22e94
    VPSS_DRV_GenSclCfg_x22e08:
    /*00022e08*/ LDR         R1, [IP, #2724]             @ 0xaa4 
    /*00022e0c*/ STR         R2, [SP, #24] 
    /*00022e10*/ STR         R3, [SP, #28] 
    /*00022e14*/ MOV         R2, R1 
    VPSS_DRV_GenSclCfg_x22e18:
    /*00022e18*/ LDR         R0, [SP, #28] 
    /*00022e1c*/ ADD         R3, SP, #16 
    /*00022e20*/ STM         SP, {R0, R1, R4} 
    /*00022e24*/ LDM         R3, {R0, R1} 
    /*00022e28*/ LDR         R3, [SP, #24] 
    /*00022e2c*/ BL          0x0000000000022E2C          @ VpssDrvUpdateSclRatio [R_ARM_CALL: .text+0x22c68] 
    /*00022e30*/ CMP         R4, #0 
    /*00022e34*/ BEQ         VPSS_DRV_GenSclCfg_x22ec4
    VPSS_DRV_GenSclCfg_x22e38:
    /*00022e38*/ LDR         IP, [R4, #80]               @ 0x50 
    /*00022e3c*/ MOV         R0, #2 
    /*00022e40*/ LDR         R1, [R4, #88]               @ 0x58 
    /*00022e44*/ MOV         R5, #0 
    /*00022e48*/ LDR         R2, [R4, #84]               @ 0x54 
    /*00022e4c*/ LDR         R3, [R4, #92]               @ 0x5c 
    /*00022e50*/ STR         IP, [SP, #32] 
    /*00022e54*/ STR         R1, [SP, #40]               @ 0x28 
    /*00022e58*/ STR         R2, [SP, #36]               @ 0x24 
    /*00022e5c*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00022e60*/ STR         R5, [SP, #48]               @ 0x30 
    /*00022e64*/ STR         R5, [SP, #52]               @ 0x34 
    /*00022e68*/ STR         R5, [SP, #60]               @ 0x3c 
    /*00022e6c*/ BL          0x0000000000022E6C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00022e70*/ MOV         R3, R4 
    /*00022e74*/ ADD         R2, SP, #32 
    /*00022e78*/ ADD         R1, SP, #48                 @ 0x30 
    /*00022e7c*/ LDR         R4, [R0, #84]               @ 0x54 
    /*00022e80*/ MOV         R0, #7 
    /*00022e84*/ BLX         R4 
    /*00022e88*/ MOV         R0, R5 
    /*00022e8c*/ ADD         SP, SP, #68                 @ 0x44 
    /*00022e90*/ POP         {R4, R5, PC} 
    VPSS_DRV_GenSclCfg_x22e94:
    /*00022e94*/ LDR         R0, [IP, #688]              @ 0x2b0 
    /*00022e98*/ CMP         R0, #1 
    /*00022e9c*/ BNE         VPSS_DRV_GenSclCfg_x22e08
    VPSS_DRV_GenSclCfg_x22ea0:
    /*00022ea0*/ MOV         R3, #752                    @ 0x2f0 
    /*00022ea4*/ LDR         R2, [IP, #2724]             @ 0xaa4 
    /*00022ea8*/ MLA         R1, R3, R1, IP 
    /*00022eac*/ LDR         R0, [R1, #2908]             @ 0xb5c 
    /*00022eb0*/ LDR         R3, [R1, #2912]             @ 0xb60 
    /*00022eb4*/ LDR         R1, [R1, #3100]             @ 0xc1c 
    /*00022eb8*/ STR         R0, [SP, #24] 
    /*00022ebc*/ STR         R3, [SP, #28] 
    /*00022ec0*/ B           VPSS_DRV_GenSclCfg_x22e18
    VPSS_DRV_GenSclCfg_x22ec4:
    /*00022ec4*/ MOVW        R3, #0                      @ .LC315 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x95a0] 
    /*00022ec8*/ MOVW        R0, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e8] 
    /*00022ecc*/ MOVT        R3, #0                      @ .LC315 [R_ARM_MOVT_ABS: .rodata.str1.4+0x95a0] 
    /*00022ed0*/ MOVT        R0, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e8] 
    /*00022ed4*/ MOVW        R2, #5931                   @ 0x172b 
    /*00022ed8*/ LDR         R1, [PC, #4]                @ 0x0000000000022ee4 
    /*00022edc*/ BL          0x0000000000022EDC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00022ee0*/ B           VPSS_DRV_GenSclCfg_x22e38
    /*00022ee4*/ ANDEQ       R1, R0, R8, ROR #7 
FUNC_END VPSS_DRV_GenSclCfg


FUNC_BEGIN VpssDrvDefaultSclConfig
    /*00022ee8*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00022eec*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00022ef0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00022ef4*/ MOV         R3, #1 
    /*00022ef8*/ LDR         R2, [R2, R0, LSL #2] 
    /*00022efc*/ MOV         LR, #1048576                @ 0x100000 
    /*00022f00*/ MOV         R0, #0 
    /*00022f04*/ STR         R3, [R1, #4] 
    /*00022f08*/ ADD         IP, R2, #12288              @ 0x3000 
    /*00022f0c*/ STR         R3, [R1, #24] 
    /*00022f10*/ STR         R3, [R1, #28] 
    /*00022f14*/ ADD         R2, R2, #16384              @ 0x4000 
    /*00022f18*/ STR         R3, [R1, #72]               @ 0x48 
    /*00022f1c*/ STR         R3, [R1, #68]               @ 0x44 
    /*00022f20*/ STR         R0, [R1, #32] 
    /*00022f24*/ STR         R0, [R1, #36]               @ 0x24 
    /*00022f28*/ STR         R0, [R1, #80]               @ 0x50 
    /*00022f2c*/ STR         R0, [R1, #84]               @ 0x54 
    /*00022f30*/ STR         LR, [R1] 
    /*00022f34*/ STR         LR, [R1, #76]               @ 0x4c 
    /*00022f38*/ LDR         R0, [IP, #3176]             @ 0xc68 
    /*00022f3c*/ STR         R0, [R1, #96]               @ 0x60 
    /*00022f40*/ LDR         R3, [IP, #3180]             @ 0xc6c 
    /*00022f44*/ STR         R0, [R1, #88]               @ 0x58 
    /*00022f48*/ STR         R3, [R1, #100]              @ 0x64 
    /*00022f4c*/ STR         R3, [R1, #92]               @ 0x5c 
    /*00022f50*/ LDR         R3, [R2, #2724]             @ 0xaa4 
    /*00022f54*/ SUBS        R3, R3, #25 
    /*00022f58*/ MOVNE       R3, #1 
    /*00022f5c*/ STR         R3, [R1, #40]               @ 0x28 
    /*00022f60*/ STR         R3, [R1, #44]               @ 0x2c 
    /*00022f64*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VpssDrvDefaultSclConfig


FUNC_BEGIN VpssDrvGetFrmVbBlk
    /*00022f68*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00022f6c*/ SUB         SP, SP, #132                @ 0x84 
    /*00022f70*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00022f74*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00022f78*/ LDR         LR, [SP, #176]              @ 0xb0 
    /*00022f7c*/ MOV         R9, R0 
    /*00022f80*/ LDR         IP, [IP, R0, LSL #2] 
    /*00022f84*/ MOV         R8, R1 
    /*00022f88*/ CMP         LR, #0 
    /*00022f8c*/ LDR         R0, [SP, #168]              @ 0xa8 
    /*00022f90*/ MOV         LR, #0 
    /*00022f94*/ LDR         R4, [SP, #172]              @ 0xac 
    /*00022f98*/ STR         LR, [SP, #40]               @ 0x28 
    /*00022f9c*/ BEQ         VpssDrvGetFrmVbBlk_x23268
    /*00022fa0*/ MOVW        LR, #1080                   @ 0x438 
    /*00022fa4*/ MOV         R1, #360                    @ 0x168 
    /*00022fa8*/ MUL         R2, LR, R2 
    /*00022fac*/ MOV         LR, #24 
    /*00022fb0*/ MLA         R1, R1, R8, R2 
    /*00022fb4*/ MOVW        R6, #26564                  @ 0x67c4 
    /*00022fb8*/ MLA         LR, LR, R8, IP 
    /*00022fbc*/ MOVW        R5, #26560                  @ 0x67c0 
    /*00022fc0*/ ADD         R1, IP, R1 
    /*00022fc4*/ MOV         R2, #72                     @ 0x48 
    /*00022fc8*/ MLA         R2, R2, R8, IP 
    /*00022fcc*/ LDR         R7, [R1, R6] 
    /*00022fd0*/ LDR         R6, [R1, R5] 
    /*00022fd4*/ MOVW        R1, #15516                  @ 0x3c9c 
    /*00022fd8*/ LDR         R5, [LR, R1] 
    /*00022fdc*/ MOVW        R1, #15512                  @ 0x3c98 
    /*00022fe0*/ LDR         R1, [LR, R1] 
    /*00022fe4*/ CMP         R7, R5 
    /*00022fe8*/ LDR         LR, [R2, #60]               @ 0x3c 
    /*00022fec*/ MOVCC       R5, R7 
    /*00022ff0*/ CMP         R1, R6 
    /*00022ff4*/ MOVCS       R1, R6 
    /*00022ff8*/ STR         R1, [R3] 
    /*00022ffc*/ STR         R5, [R0] 
    /*00023000*/ LDR         SL, [R2, #68]               @ 0x44 
    /*00023004*/ LDR         FP, [R2, #64]               @ 0x40 
    /*00023008*/ LDR         R2, [R2, #56]               @ 0x38 
    /*0002300c*/ STR         LR, [SP, #32] 
    /*00023010*/ STR         R2, [SP, #36]               @ 0x24 
    VpssDrvGetFrmVbBlk_x23014:
    /*00023014*/ LDR         R7, [R3] 
    /*00023018*/ CMP         R5, #0 
    /*0002301c*/ CMPNE       R7, #0 
    /*00023020*/ MOVEQ       R6, #1 
    /*00023024*/ MOVNE       R6, #0 
    /*00023028*/ BEQ         VpssDrvGetFrmVbBlk_x23284
    /*0002302c*/ LDR         R2, [SP, #32] 
    /*00023030*/ ADD         R3, R8, #6848               @ 0x1ac0 
    /*00023034*/ ADD         R3, R3, #62                 @ 0x3e 
    /*00023038*/ MOV         R0, #2 
    /*0002303c*/ STR         SL, [SP, #80]               @ 0x50 
    /*00023040*/ LDR         R3, [IP, R3, LSL #2] 
    /*00023044*/ STR         R2, [SP, #56]               @ 0x38 
    /*00023048*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0002304c*/ STR         R3, [SP, #72]               @ 0x48 
    /*00023050*/ STR         FP, [SP, #76]               @ 0x4c 
    /*00023054*/ STR         R2, [SP, #84]               @ 0x54 
    /*00023058*/ STR         R7, [SP, #60]               @ 0x3c 
    /*0002305c*/ STR         R5, [SP, #64]               @ 0x40 
    /*00023060*/ STR         R6, [SP, #88]               @ 0x58 
    /*00023064*/ STR         R6, [SP, #68]               @ 0x44 
    /*00023068*/ BL          0x0000000000023068          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002306c*/ ADD         R1, SP, #92                 @ 0x5c 
    /*00023070*/ LDR         R3, [R0, #120]              @ 0x78 
    /*00023074*/ ADD         R0, SP, #56                 @ 0x38 
    /*00023078*/ BLX         R3 
    /*0002307c*/ MOV         R0, #2 
    /*00023080*/ MOV         R3, #7 
    /*00023084*/ STR         R9, [SP, #48]               @ 0x30 
    /*00023088*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0002308c*/ STR         R6, [SP, #52]               @ 0x34 
    /*00023090*/ BL          0x0000000000023090          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023094*/ ADD         R1, SP, #40                 @ 0x28 
    /*00023098*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0002309c*/ ADD         R0, SP, #44                 @ 0x2c 
    /*000230a0*/ BLX         R3 
    /*000230a4*/ SUBS        R3, R0, #0 
    /*000230a8*/ STR         R3, [SP, #28] 
    /*000230ac*/ BNE         VpssDrvGetFrmVbBlk_x232c0
    /*000230b0*/ MOV         R0, #1 
    /*000230b4*/ BL          0x00000000000230B4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000230b8*/ LDR         R3, [SP, #40]               @ 0x28 
    /*000230bc*/ MOV         R2, #10 
    /*000230c0*/ LDR         R1, [SP, #28] 
    /*000230c4*/ LDR         R6, [R0, #12] 
    /*000230c8*/ LDR         R0, [SP, #92]               @ 0x5c 
    /*000230cc*/ BLX         R6 
    /*000230d0*/ CMN         R0, #1 
    /*000230d4*/ MOV         R6, R0 
    /*000230d8*/ BEQ         VpssDrvGetFrmVbBlk_x232ec
    /*000230dc*/ MOV         R0, #1 
    /*000230e0*/ BL          0x00000000000230E0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000230e4*/ LDR         R3, [R0, #40]               @ 0x28 
    /*000230e8*/ MOV         R0, R6 
    /*000230ec*/ BLX         R3 
    /*000230f0*/ STR         R0, [R4, #328]              @ 0x148 
    /*000230f4*/ MOV         R0, #1 
    /*000230f8*/ BL          0x00000000000230F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000230fc*/ LDR         R3, [R0, #100]              @ 0x64 
    /*00023100*/ MOV         R0, R6 
    /*00023104*/ BLX         R3 
    /*00023108*/ MOV         R2, #64                     @ 0x40 
    /*0002310c*/ MOV         R1, R0 
    /*00023110*/ ADD         R0, R4, #264                @ 0x108 
    /*00023114*/ BL          0x0000000000023114          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00023118*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0002311c*/ MOV         R3, #4 
    /*00023120*/ STR         R7, [R4] 
    /*00023124*/ STR         R5, [R4, #4] 
    /*00023128*/ MOV         R0, #1 
    /*0002312c*/ STR         R2, [R4, #16] 
    /*00023130*/ MOV         R7, #0 
    /*00023134*/ LDR         R2, [SP, #32] 
    /*00023138*/ STR         FP, [R4, #24] 
    /*0002313c*/ MOV         FP, #0 
    /*00023140*/ STR         SL, [R4, #20] 
    /*00023144*/ STR         R2, [R4, #12] 
    /*00023148*/ STR         R3, [R4, #8] 
    /*0002314c*/ BL          0x000000000002314C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023150*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00023154*/ MOV         R0, R6 
    /*00023158*/ BLX         R3 
    /*0002315c*/ MOV         R3, R1 
    /*00023160*/ LDR         R1, [SP, #104]              @ 0x68 
    /*00023164*/ MOV         R2, R0 
    /*00023168*/ STRD        R2, [R4, #72]               @ 0x48 
    /*0002316c*/ ADDS        R2, R2, R1 
    /*00023170*/ MOV         R0, #1 
    /*00023174*/ ADC         R3, R3, #0 
    /*00023178*/ STRD        R2, [R4, #80]               @ 0x50 
    /*0002317c*/ BL          0x000000000002317C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023180*/ LDR         R3, [R0, #48]               @ 0x30 
    /*00023184*/ MOV         R0, R6 
    /*00023188*/ BLX         R3 
    /*0002318c*/ LDR         SL, [SP, #100]              @ 0x64 
    /*00023190*/ LDRD        R8, [R4, #72]               @ 0x48 
    /*00023194*/ MOV         R3, #0 
    /*00023198*/ LDR         IP, [SP, #104]              @ 0x68 
    /*0002319c*/ ADDS        R8, R8, SL 
    /*000231a0*/ LDR         R2, [SP, #112]              @ 0x70 
    /*000231a4*/ ADC         R9, R9, FP 
    /*000231a8*/ LDR         R6, [SP, #124]              @ 0x7c 
    /*000231ac*/ LDR         LR, [SP, #96]               @ 0x60 
    /*000231b0*/ LDR         R5, [SP, #108]              @ 0x6c 
    /*000231b4*/ STRD        R8, [R4, #120]              @ 0x78 
    /*000231b8*/ STR         LR, [R4, #32] 
    /*000231bc*/ STR         LR, [R4, #36]               @ 0x24 
    /*000231c0*/ STR         LR, [R4, #40]               @ 0x28 
    /*000231c4*/ STR         R5, [R4, #44]               @ 0x2c 
    /*000231c8*/ STR         R5, [R4, #48]               @ 0x30 
    /*000231cc*/ STR         R5, [R4, #52]               @ 0x34 
    /*000231d0*/ ADDS        SL, SL, R0 
    /*000231d4*/ STRD        R0, [R4, #96]               @ 0x60 
    /*000231d8*/ ADC         FP, FP, R1 
    /*000231dc*/ ADDS        R0, R0, IP 
    /*000231e0*/ ADC         R1, R1, #0 
    /*000231e4*/ STRD        R0, [R4, #104]              @ 0x68 
    /*000231e8*/ ADDS        R0, R8, R2 
    /*000231ec*/ LDR         IP, [SP, #120]              @ 0x78 
    /*000231f0*/ ADC         R1, R9, R3 
    /*000231f4*/ ADDS        R2, R2, SL 
    /*000231f8*/ ADC         R3, R3, FP 
    /*000231fc*/ STRD        R0, [R4, #168]              @ 0xa8 
    /*00023200*/ ADDS        R0, R0, R6 
    /*00023204*/ STRD        R2, [R4, #192]              @ 0xc0 
    /*00023208*/ ADC         R1, R1, R7 
    /*0002320c*/ ADDS        R2, R2, R6 
    /*00023210*/ LDR         R6, [SP, #116]              @ 0x74 
    /*00023214*/ ADC         R3, R3, R7 
    /*00023218*/ MOV         R7, #0 
    /*0002321c*/ STRD        SL, [R4, #144]              @ 0x90 
    /*00023220*/ ADDS        R8, R8, R6 
    /*00023224*/ STRD        R0, [R4, #176]              @ 0xb0 
    /*00023228*/ ADC         R9, R9, R7 
    /*0002322c*/ ADDS        R6, R6, SL 
    /*00023230*/ ADC         R7, R7, FP 
    /*00023234*/ STRD        R0, [R4, #184]              @ 0xb8 
    /*00023238*/ STRD        R2, [R4, #200]              @ 0xc8 
    /*0002323c*/ STRD        R2, [R4, #208]              @ 0xd0 
    /*00023240*/ STRD        R8, [R4, #128]              @ 0x80 
    /*00023244*/ STRD        R8, [R4, #136]              @ 0x88 
    /*00023248*/ STRD        R6, [R4, #152]              @ 0x98 
    /*0002324c*/ STRD        R6, [R4, #160]              @ 0xa0 
    /*00023250*/ STR         IP, [R4, #56]               @ 0x38 
    /*00023254*/ STR         IP, [R4, #60]               @ 0x3c 
    /*00023258*/ STR         IP, [R4, #64]               @ 0x40 
    VpssDrvGetFrmVbBlk_x2325c:
    /*0002325c*/ LDR         R0, [SP, #28] 
    /*00023260*/ ADD         SP, SP, #132                @ 0x84 
    /*00023264*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssDrvGetFrmVbBlk_x23268:
    /*00023268*/ LDR         R2, [R4, #12] 
    /*0002326c*/ LDR         R5, [R0] 
    /*00023270*/ STR         R2, [SP, #32] 
    /*00023274*/ ADD         R2, R4, #16 
    /*00023278*/ LDM         R2, {R2, SL, FP} 
    /*0002327c*/ STR         R2, [SP, #36]               @ 0x24 
    /*00023280*/ B           VpssDrvGetFrmVbBlk_x23014
    VpssDrvGetFrmVbBlk_x23284:
    /*00023284*/ MOVW        R3, #8797                   @ 0x225d 
    /*00023288*/ STR         R5, [SP, #16] 
    /*0002328c*/ STR         R3, [SP] 
    /*00023290*/ MOVW        R2, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x95b4] 
    /*00023294*/ STR         R7, [SP, #12] 
    /*00023298*/ MOVT        R2, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x95b4] 
    /*0002329c*/ STR         R8, [SP, #8] 
    /*000232a0*/ MOV         R1, #7 
    /*000232a4*/ STR         R9, [SP, #4] 
    /*000232a8*/ MOV         R0, #3 
    /*000232ac*/ LDR         R3, [PC, #120]              @ 0x000000000002332c 
    /*000232b0*/ MVN         IP, #0 
    /*000232b4*/ STR         IP, [SP, #28] 
    /*000232b8*/ BL          0x00000000000232B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000232bc*/ B           VpssDrvGetFrmVbBlk_x2325c
    VpssDrvGetFrmVbBlk_x232c0:
    /*000232c0*/ MOVW        R3, #8820                   @ 0x2274 
    /*000232c4*/ MOV         R1, #7 
    /*000232c8*/ STR         R3, [SP] 
    /*000232cc*/ MOVW        R2, #0                      @ .LC313 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9560] 
    /*000232d0*/ LDR         R3, [PC, #84]               @ 0x000000000002332c 
    /*000232d4*/ MOVT        R2, #0                      @ .LC313 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9560] 
    /*000232d8*/ MOV         R0, #3 
    /*000232dc*/ MVN         IP, #0 
    /*000232e0*/ STR         IP, [SP, #28] 
    /*000232e4*/ BL          0x00000000000232E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000232e8*/ B           VpssDrvGetFrmVbBlk_x2325c
    VpssDrvGetFrmVbBlk_x232ec:
    /*000232ec*/ MOVW        IP, #32781                  @ 0x800d 
    /*000232f0*/ MOVW        R3, #8828                   @ 0x227c 
    /*000232f4*/ MOV         R4, IP 
    /*000232f8*/ STR         R3, [SP] 
    /*000232fc*/ STR         R8, [SP, #8] 
    /*00023300*/ MOV         R1, #7 
    /*00023304*/ STR         R9, [SP, #4] 
    /*00023308*/ MOVW        R2, #0                      @ .LC317 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9604] 
    /*0002330c*/ LDR         R3, [PC, #24]               @ 0x000000000002332c 
    /*00023310*/ MOVT        R2, #0                      @ .LC317 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9604] 
    /*00023314*/ MOV         R0, #3 
    /*00023318*/ BL          0x0000000000023318          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002331c*/ MOV         IP, R4 
    /*00023320*/ MOVT        IP, #40967                  @ 0xa007 
    /*00023324*/ STR         IP, [SP, #28] 
    /*00023328*/ B           VpssDrvGetFrmVbBlk_x2325c
    /*0002332c*/ STRDEQ      R1, [R0], -R4 
FUNC_END VpssDrvGetFrmVbBlk


FUNC_BEGIN VPSS_DRV_GetHDRInfo
    /*00023330*/ MVN         R0, #0 
    /*00023334*/ BX          LR 
FUNC_END VPSS_DRV_GetHDRInfo


FUNC_BEGIN VPSS_DRV_PrepareVB
    /*00023338*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002333c*/ SUB         SP, SP, #76                 @ 0x4c 
    /*00023340*/ MOV         R6, R2 
    /*00023344*/ MOV         R8, R0 
    /*00023348*/ MOV         R9, R1 
    /*0002334c*/ MOV         R2, #36                     @ 0x24 
    /*00023350*/ MOV         R1, #0 
    /*00023354*/ ADD         R0, SP, #36                 @ 0x24 
    /*00023358*/ MOV         R4, R3 
    /*0002335c*/ BL          0x000000000002335C          @ memset [R_ARM_CALL: +0x0] 
    /*00023360*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00023364*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00023368*/ ADD         R3, R9, #6848               @ 0x1ac0 
    /*0002336c*/ MOVW        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00023370*/ LDR         R1, [R1, R8, LSL #2] 
    /*00023374*/ MOVT        R2, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00023378*/ ADD         R3, R3, #62                 @ 0x3e 
    /*0002337c*/ MOV         R5, #0 
    /*00023380*/ LDR         R7, [R2, R8, LSL #2] 
    /*00023384*/ MOV         R0, #2 
    /*00023388*/ STR         R5, [R6, #32] 
    /*0002338c*/ MOV         SL, #7 
    /*00023390*/ LDR         R3, [R1, R3, LSL #2] 
    /*00023394*/ STR         R5, [R6, #12] 
    /*00023398*/ STR         R5, [SP, #20] 
    /*0002339c*/ STR         R3, [R6, #16] 
    /*000233a0*/ BL          0x00000000000233A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000233a4*/ ADD         R1, SP, #36                 @ 0x24 
    /*000233a8*/ LDR         R3, [R0, #120]              @ 0x78 
    /*000233ac*/ MOV         R0, R6 
    /*000233b0*/ BLX         R3 
    /*000233b4*/ MOV         R0, #2 
    /*000233b8*/ STR         R5, [SP, #32] 
    /*000233bc*/ STR         R8, [SP, #28] 
    /*000233c0*/ STR         SL, [SP, #24] 
    /*000233c4*/ BL          0x00000000000233C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000233c8*/ ADD         R1, SP, #20 
    /*000233cc*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*000233d0*/ ADD         R0, SP, #24 
    /*000233d4*/ BLX         R3 
    /*000233d8*/ SUBS        R5, R0, #0 
    /*000233dc*/ BNE         VPSS_DRV_PrepareVB_x23608
    /*000233e0*/ MOVW        R3, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x7550] 
    /*000233e4*/ MOVT        R3, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x7550] 
    /*000233e8*/ LDR         R3, [R3, #-3524]            @ 0xfffff23c 
    /*000233ec*/ CMP         R3, #2 
    /*000233f0*/ BEQ         VPSS_DRV_PrepareVB_x235c4
    /*000233f4*/ MOV         R0, #1 
    /*000233f8*/ BL          0x00000000000233F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000233fc*/ LDR         R3, [SP, #20] 
    /*00023400*/ MOV         R2, #10 
    /*00023404*/ MOV         R1, R5 
    /*00023408*/ LDR         R7, [R0, #12] 
    /*0002340c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00023410*/ BLX         R7 
    /*00023414*/ MOV         R7, R0 
    VPSS_DRV_PrepareVB_x23418:
    /*00023418*/ CMN         R7, #1 
    /*0002341c*/ BEQ         VPSS_DRV_PrepareVB_x23630
    /*00023420*/ MOV         R0, #1 
    /*00023424*/ BL          0x0000000000023424          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023428*/ LDR         R3, [R0, #40]               @ 0x28 
    /*0002342c*/ MOV         R0, R7 
    /*00023430*/ BLX         R3 
    /*00023434*/ MOV         R3, #7 
    /*00023438*/ STR         R3, [R4, #332]              @ 0x14c 
    /*0002343c*/ STR         R0, [R4, #328]              @ 0x148 
    /*00023440*/ MOV         R0, #1 
    /*00023444*/ BL          0x0000000000023444          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023448*/ LDR         R3, [R0, #100]              @ 0x64 
    /*0002344c*/ MOV         R0, R7 
    /*00023450*/ BLX         R3 
    /*00023454*/ MOV         R2, #64                     @ 0x40 
    /*00023458*/ MOV         R1, R0 
    /*0002345c*/ ADD         R0, R4, #264                @ 0x108 
    /*00023460*/ BL          0x0000000000023460          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00023464*/ LDR         R3, [R6, #4] 
    /*00023468*/ MOV         R2, #4 
    /*0002346c*/ MOV         R0, #1 
    /*00023470*/ STR         R3, [R4] 
    /*00023474*/ LDR         R3, [R6, #8] 
    /*00023478*/ STR         R3, [R4, #4] 
    /*0002347c*/ LDR         R3, [R6, #20] 
    /*00023480*/ STR         R3, [R4, #24] 
    /*00023484*/ LDR         R3, [R6, #24] 
    /*00023488*/ STR         R3, [R4, #20] 
    /*0002348c*/ LDR         R3, [R6] 
    /*00023490*/ STR         R3, [R4, #12] 
    /*00023494*/ LDR         R3, [R6, #28] 
    /*00023498*/ STR         R2, [R4, #8] 
    /*0002349c*/ STR         R3, [R4, #16] 
    /*000234a0*/ BL          0x00000000000234A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000234a4*/ LDR         R3, [R0, #52]               @ 0x34 
    /*000234a8*/ MOV         R0, R7 
    /*000234ac*/ BLX         R3 
    /*000234b0*/ MOV         R3, R1 
    /*000234b4*/ LDR         R1, [SP, #48]               @ 0x30 
    /*000234b8*/ MOV         R2, R0 
    /*000234bc*/ STRD        R2, [R4, #72]               @ 0x48 
    /*000234c0*/ ADDS        R2, R2, R1 
    /*000234c4*/ MOV         R0, #1 
    /*000234c8*/ ADC         R3, R3, #0 
    /*000234cc*/ STRD        R2, [R4, #80]               @ 0x50 
    /*000234d0*/ BL          0x00000000000234D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000234d4*/ LDR         R3, [R0, #48]               @ 0x30 
    /*000234d8*/ MOV         R0, R7 
    /*000234dc*/ BLX         R3 
    /*000234e0*/ LDR         R6, [SP, #44]               @ 0x2c 
    /*000234e4*/ LDRD        SL, [R4, #72]               @ 0x48 
    /*000234e8*/ MOV         R7, #0 
    /*000234ec*/ LDR         IP, [SP, #48]               @ 0x30 
    /*000234f0*/ MOV         R3, #0 
    /*000234f4*/ ADDS        SL, SL, R6 
    /*000234f8*/ LDR         R2, [SP, #56]               @ 0x38 
    /*000234fc*/ ADC         FP, FP, R7 
    /*00023500*/ LDR         LR, [SP, #40]               @ 0x28 
    /*00023504*/ STRD        SL, [R4, #120]              @ 0x78 
    /*00023508*/ STR         LR, [R4, #32] 
    /*0002350c*/ STR         LR, [R4, #36]               @ 0x24 
    /*00023510*/ STR         LR, [R4, #40]               @ 0x28 
    /*00023514*/ ADDS        R8, R0, R6 
    /*00023518*/ STRD        R0, [R4, #96]               @ 0x60 
    /*0002351c*/ ADC         R9, R1, R7 
    /*00023520*/ ADDS        R0, R0, IP 
    /*00023524*/ ADC         R1, R1, #0 
    /*00023528*/ LDR         R6, [SP, #68]               @ 0x44 
    /*0002352c*/ STRD        R0, [R4, #104]              @ 0x68 
    /*00023530*/ ADDS        R0, SL, R2 
    /*00023534*/ ADC         R1, FP, R3 
    /*00023538*/ ADDS        R2, R2, R8 
    /*0002353c*/ ADC         R3, R3, R9 
    /*00023540*/ STRD        R0, [R4, #168]              @ 0xa8 
    /*00023544*/ ADDS        R0, R0, R6 
    /*00023548*/ MOV         R7, #0 
    /*0002354c*/ STRD        R2, [R4, #192]              @ 0xc0 
    /*00023550*/ ADC         R1, R1, R7 
    /*00023554*/ ADDS        R2, R2, R6 
    /*00023558*/ LDR         R6, [SP, #60]               @ 0x3c 
    /*0002355c*/ ADC         R3, R3, R7 
    /*00023560*/ LDR         IP, [SP, #64]               @ 0x40 
    /*00023564*/ STRD        R2, [R4, #200]              @ 0xc8 
    /*00023568*/ ADDS        SL, SL, R6 
    /*0002356c*/ STRD        R2, [R4, #208]              @ 0xd0 
    /*00023570*/ MOV         R7, #0 
    /*00023574*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00023578*/ ADC         FP, FP, R7 
    /*0002357c*/ ADDS        R6, R6, R8 
    /*00023580*/ STRD        R8, [R4, #144]              @ 0x90 
    /*00023584*/ ADC         R7, R7, R9 
    /*00023588*/ STRD        R0, [R4, #176]              @ 0xb0 
    /*0002358c*/ STRD        R0, [R4, #184]              @ 0xb8 
    /*00023590*/ STRD        SL, [R4, #128]              @ 0x80 
    /*00023594*/ STRD        SL, [R4, #136]              @ 0x88 
    /*00023598*/ STRD        R6, [R4, #152]              @ 0x98 
    /*0002359c*/ STRD        R6, [R4, #160]              @ 0xa0 
    /*000235a0*/ STR         R3, [R4, #44]               @ 0x2c 
    /*000235a4*/ STR         R3, [R4, #48]               @ 0x30 
    /*000235a8*/ STR         R3, [R4, #52]               @ 0x34 
    /*000235ac*/ STR         IP, [R4, #56]               @ 0x38 
    /*000235b0*/ STR         IP, [R4, #60]               @ 0x3c 
    /*000235b4*/ STR         IP, [R4, #64]               @ 0x40 
    VPSS_DRV_PrepareVB_x235b8:
    /*000235b8*/ MOV         R0, R5 
    /*000235bc*/ ADD         SP, SP, #76                 @ 0x4c 
    /*000235c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_PrepareVB_x235c4:
    /*000235c4*/ ADD         R7, R7, R9, LSL #2 
    /*000235c8*/ ADD         R7, R7, #28672              @ 0x7000 
    /*000235cc*/ LDR         R3, [R7, #3640]             @ 0xe38 
    /*000235d0*/ CMN         R3, #1 
    /*000235d4*/ BEQ         VPSS_DRV_PrepareVB_x2366c
    /*000235d8*/ MOV         R0, #1 
    /*000235dc*/ BL          0x00000000000235DC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000235e0*/ LDR         IP, [R7, #3640]             @ 0xe38 
    /*000235e4*/ MOV         R3, #10 
    /*000235e8*/ LDR         R2, [SP, #36]               @ 0x24 
    /*000235ec*/ STR         R3, [SP] 
    /*000235f0*/ MOV         R3, R5 
    /*000235f4*/ LDR         R1, [R0, #20] 
    /*000235f8*/ MOV         R0, IP 
    /*000235fc*/ BLX         R1 
    /*00023600*/ MOV         R7, R0 
    /*00023604*/ B           VPSS_DRV_PrepareVB_x23418
    VPSS_DRV_PrepareVB_x23608:
    /*00023608*/ MOVW        R3, #8909                   @ 0x22cd 
    /*0002360c*/ MOV         R1, SL 
    /*00023610*/ STR         R3, [SP] 
    /*00023614*/ MOVW        R2, #0                      @ .LC313 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9560] 
    /*00023618*/ LDR         R3, [PC, #128]              @ 0x00000000000236a0 
    /*0002361c*/ MOVT        R2, #0                      @ .LC313 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9560] 
    /*00023620*/ MOV         R0, #3 
    /*00023624*/ MVN         R5, #0 
    /*00023628*/ BL          0x0000000000023628          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002362c*/ B           VPSS_DRV_PrepareVB_x235b8
    VPSS_DRV_PrepareVB_x23630:
    /*00023630*/ LDR         R1, [SP, #36]               @ 0x24 
    /*00023634*/ MOVW        R3, #8932                   @ 0x22e4 
    /*00023638*/ STR         R9, [SP, #8] 
    /*0002363c*/ MOVW        R2, #0                      @ .LC319 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9678] 
    /*00023640*/ STR         R3, [SP] 
    /*00023644*/ MOVT        R2, #0                      @ .LC319 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9678] 
    /*00023648*/ STR         R1, [SP, #12] 
    /*0002364c*/ MOV         R0, #3 
    /*00023650*/ STR         R8, [SP, #4] 
    /*00023654*/ MOV         R1, #7 
    /*00023658*/ LDR         R3, [PC, #64]               @ 0x00000000000236a0 
    /*0002365c*/ MOVW        R5, #32781                  @ 0x800d 
    /*00023660*/ BL          0x0000000000023660          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023664*/ MOVT        R5, #40967                  @ 0xa007 
    /*00023668*/ B           VPSS_DRV_PrepareVB_x235b8
    VPSS_DRV_PrepareVB_x2366c:
    /*0002366c*/ MOVW        R3, #8917                   @ 0x22d5 
    /*00023670*/ STR         R9, [SP, #8] 
    /*00023674*/ STR         R3, [SP] 
    /*00023678*/ MOV         R1, SL 
    /*0002367c*/ STR         R8, [SP, #4] 
    /*00023680*/ MOVW        R2, #0                      @ .LC318 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x963c] 
    /*00023684*/ LDR         R3, [PC, #20]               @ 0x00000000000236a0 
    /*00023688*/ MOVT        R2, #0                      @ .LC318 [R_ARM_MOVT_ABS: .rodata.str1.4+0x963c] 
    /*0002368c*/ MOV         R0, #3 
    /*00023690*/ MOVW        R5, #32781                  @ 0x800d 
    /*00023694*/ BL          0x0000000000023694          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023698*/ MOVT        R5, #40967                  @ 0xa007 
    /*0002369c*/ B           VPSS_DRV_PrepareVB_x235b8
    /*000236a0*/ ANDEQ       R1, R0, R8, LSL #8 
FUNC_END VPSS_DRV_PrepareVB


FUNC_BEGIN VPSSDrvUpdateChnAddr
    /*000236a4*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000236a8*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000236ac*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000236b0*/ SUB         SP, SP, #228                @ 0xe4 
    /*000236b4*/ LDR         FP, [IP, R0, LSL #2] 
    /*000236b8*/ MOV         R0, R1 
    /*000236bc*/ MOV         R4, R3 
    /*000236c0*/ MOV         R8, R2 
    /*000236c4*/ MOV         R5, R1 
    /*000236c8*/ LDR         SL, [SP, #264]              @ 0x108 
    /*000236cc*/ BL          0x00000000000236CC          @ VPSS_HAL_GetHalChn [R_ARM_CALL: .text+0x263bc] 
    /*000236d0*/ LDRD        R6, [R4, #136]              @ 0x88 
    /*000236d4*/ LDR         R3, [R4, #64]               @ 0x40 
    /*000236d8*/ ADD         R2, SP, #48                 @ 0x30 
    /*000236dc*/ STRD        R6, [SP, #56]               @ 0x38 
    /*000236e0*/ LDRD        R6, [R4, #144]              @ 0x90 
    /*000236e4*/ STR         R3, [SP, #120]              @ 0x78 
    /*000236e8*/ LDR         R3, [R4, #68]               @ 0x44 
    /*000236ec*/ STRD        R6, [SP, #64]               @ 0x40 
    /*000236f0*/ LDRD        R6, [R4] 
    /*000236f4*/ STR         R3, [SP, #124]              @ 0x7c 
    /*000236f8*/ LDR         R3, [R4, #224]              @ 0xe0 
    /*000236fc*/ STRD        R6, [SP, #72]               @ 0x48 
    /*00023700*/ LDRD        R6, [R4, #8] 
    /*00023704*/ STR         R3, [SP, #128]              @ 0x80 
    /*00023708*/ STRD        R6, [SP, #80]               @ 0x50 
    /*0002370c*/ LDRD        R6, [R4, #200]              @ 0xc8 
    /*00023710*/ STRD        R6, [SP, #88]               @ 0x58 
    /*00023714*/ LDRD        R6, [R4, #208]              @ 0xd0 
    /*00023718*/ STRD        R6, [SP, #96]               @ 0x60 
    /*0002371c*/ MOV         R9, R0 
    /*00023720*/ MOV         R0, R8 
    /*00023724*/ MOV         R1, R9 
    /*00023728*/ BL          0x0000000000023728          @ VPSS_HAL_SetChnPicAddr [R_ARM_CALL: .text+0x26c7c] 
    /*0002372c*/ LDR         R3, [R4, #88]               @ 0x58 
    /*00023730*/ MOV         R1, R9 
    /*00023734*/ LDR         R2, [R4, #84]               @ 0x54 
    /*00023738*/ MOV         R0, R8 
    /*0002373c*/ BL          0x000000000002373C          @ VPSS_HAL_SetChnImgSize [R_ARM_CALL: .text+0x269f0] 
    /*00023740*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*00023744*/ CMP         R3, #32 
    /*00023748*/ MOVEQ       R3, #1 
    /*0002374c*/ STREQ       R3, [SP, #12] 
    /*00023750*/ STREQ       R3, [SP, #8] 
    /*00023754*/ BEQ         VPSSDrvUpdateChnAddr_x2376c
    /*00023758*/ CMP         R3, #16 
    /*0002375c*/ MOVEQ       R3, #0 
    /*00023760*/ MOVNE       R3, #2 
    /*00023764*/ STR         R3, [SP, #12] 
    /*00023768*/ STR         R3, [SP, #8] 
    VPSSDrvUpdateChnAddr_x2376c:
    /*0002376c*/ MOV         R1, #72                     @ 0x48 
    /*00023770*/ MOV         R3, #24 
    /*00023774*/ MUL         R1, R1, SL 
    /*00023778*/ ADD         R2, FP, #16384              @ 0x4000 
    /*0002377c*/ MLA         R3, R3, R5, R1 
    /*00023780*/ LDR         R0, [FP, #28] 
    /*00023784*/ LDR         IP, [R4, #124]              @ 0x7c 
    /*00023788*/ CMP         R0, #1 
    /*0002378c*/ ADD         R3, R2, R3 
    /*00023790*/ SUB         R1, IP, #1 
    /*00023794*/ CLZ         R1, R1 
    /*00023798*/ LDR         R0, [R3, #2376]             @ 0x948 
    /*0002379c*/ LDR         R3, [R3, #2368]             @ 0x940 
    /*000237a0*/ LSR         R1, R1, #5 
    /*000237a4*/ STR         R1, [SP, #20] 
    /*000237a8*/ STR         R1, [SP, #16] 
    /*000237ac*/ STR         R0, [SP, #4] 
    /*000237b0*/ STR         R3, [SP] 
    /*000237b4*/ BEQ         VPSSDrvUpdateChnAddr_x23878
    VPSSDrvUpdateChnAddr_x237b8:
    /*000237b8*/ LDR         R3, [R4, #284]              @ 0x11c 
    /*000237bc*/ SUB         R3, R3, #25 
    /*000237c0*/ CMP         R3, #14 
    /*000237c4*/ BLS         VPSSDrvUpdateChnAddr_x23864
    VPSSDrvUpdateChnAddr_x237c8:
    /*000237c8*/ MOV         R3, #0 
    VPSSDrvUpdateChnAddr_x237cc:
    /*000237cc*/ STR         R3, [SP, #28] 
    VPSSDrvUpdateChnAddr_x237d0:
    /*000237d0*/ MOV         R3, #72                     @ 0x48 
    /*000237d4*/ MOV         R1, #24 
    /*000237d8*/ MLA         FP, R3, R5, FP 
    /*000237dc*/ MUL         SL, R3, SL 
    /*000237e0*/ MLA         R5, R1, R5, SL 
    /*000237e4*/ ADD         R5, R2, R5 
    /*000237e8*/ LDR         R2, [FP, #56]               @ 0x38 
    /*000237ec*/ LDR         R3, [R5, #2384]             @ 0x950 
    /*000237f0*/ CMP         R2, #3 
    /*000237f4*/ STR         R3, [SP, #44]               @ 0x2c 
    /*000237f8*/ MOVEQ       R3, #4 
    /*000237fc*/ STREQ       R3, [SP, #32] 
    /*00023800*/ BEQ         VPSSDrvUpdateChnAddr_x23814
    /*00023804*/ LDR         R3, [R4, #112]              @ 0x70 
    /*00023808*/ ADDS        R3, R3, #0 
    /*0002380c*/ MOVNE       R3, #1 
    /*00023810*/ STR         R3, [SP, #32] 
    VPSSDrvUpdateChnAddr_x23814:
    /*00023814*/ LDR         R3, [R4, #120]              @ 0x78 
    /*00023818*/ SUB         IP, IP, #2 
    /*0002381c*/ CLZ         IP, IP 
    /*00023820*/ MOV         R2, SP 
    /*00023824*/ CMP         R3, #0 
    /*00023828*/ CMPNE       R3, #3 
    /*0002382c*/ MOV         R1, R9 
    /*00023830*/ MOV         R0, R8 
    /*00023834*/ LSR         IP, IP, #5 
    /*00023838*/ MOVNE       R3, #1 
    /*0002383c*/ MOVEQ       R3, #0 
    /*00023840*/ STR         IP, [SP, #24] 
    /*00023844*/ STR         R3, [SP, #36]               @ 0x24 
    /*00023848*/ BL          0x0000000000023848          @ VPSS_HAL_SetChnCtrl [R_ARM_CALL: .text+0x26840] 
    /*0002384c*/ MOV         R1, R9 
    /*00023850*/ MOV         R0, R8 
    /*00023854*/ MOV         R2, #0 
    /*00023858*/ BL          0x0000000000023858          @ VPSS_HAL_SetChnOffset [R_ARM_CALL: .text+0x26c34] 
    /*0002385c*/ ADD         SP, SP, #228                @ 0xe4 
    /*00023860*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSSDrvUpdateChnAddr_x23864:
    /*00023864*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xdc0] 
    /*00023868*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xdc0] 
    /*0002386c*/ ADD         R3, R1, R3, LSL #2 
    /*00023870*/ LDR         R3, [R3, #1688]             @ 0x698 
    /*00023874*/ B           VPSSDrvUpdateChnAddr_x237cc
    VPSSDrvUpdateChnAddr_x23878:
    /*00023878*/ LDR         R3, [FP, #32] 
    /*0002387c*/ CMP         R3, #1 
    /*00023880*/ BNE         VPSSDrvUpdateChnAddr_x237b8
    /*00023884*/ LDR         R3, [SP, #268]              @ 0x10c 
    /*00023888*/ CMP         R3, #0 
    /*0002388c*/ MOVEQ       R3, #2 
    /*00023890*/ STREQ       R3, [SP, #28] 
    /*00023894*/ BEQ         VPSSDrvUpdateChnAddr_x237d0
    /*00023898*/ LDR         R3, [R4, #284]              @ 0x11c 
    /*0002389c*/ SUB         R3, R3, #25 
    /*000238a0*/ CMP         R3, #14 
    /*000238a4*/ BHI         VPSSDrvUpdateChnAddr_x237c8
    /*000238a8*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xdc0] 
    /*000238ac*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xdc0] 
    /*000238b0*/ ADD         R3, R1, R3, LSL #2 
    /*000238b4*/ LDR         R3, [R3, #1628]             @ 0x65c 
    /*000238b8*/ B           VPSSDrvUpdateChnAddr_x237cc
FUNC_END VPSSDrvUpdateChnAddr


FUNC_BEGIN VPSS_DRV_MONO_SetModelCfg
    /*000238bc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000238c0*/ SUB         SP, SP, #204                @ 0xcc 
    /*000238c4*/ LDR         R4, [R0] 
    /*000238c8*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000238cc*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000238d0*/ MOV         R9, R1 
    /*000238d4*/ STR         R0, [SP, #36]               @ 0x24 
    /*000238d8*/ MOV         R1, #0 
    /*000238dc*/ MOV         R0, R4 
    /*000238e0*/ MOV         R7, R3 
    /*000238e4*/ LDR         FP, [R2, R9, LSL #2] 
    /*000238e8*/ STR         R2, [SP, #32] 
    /*000238ec*/ BL          0x00000000000238EC          @ VPSS_HAL_OnLineVideoEn [R_ARM_CALL: .text+0x27440] 
    /*000238f0*/ LDR         R2, [SP, #244]              @ 0xf4 
    /*000238f4*/ MOV         R1, R4 
    /*000238f8*/ MOV         R0, R9 
    /*000238fc*/ BL          0x00000000000238FC          @ VpssDrvUpdateCur [R_ARM_CALL: .text+0x21328] 
    /*00023900*/ MOV         R1, R4 
    /*00023904*/ MOV         R0, R9 
    /*00023908*/ BL          0x0000000000023908          @ VPSS_DRV_UpdateCurLowDelay [R_ARM_CALL: .text+0x20d78] 
    /*0002390c*/ ADD         R3, FP, #16384              @ 0x4000 
    /*00023910*/ LDR         R2, [R3, #2564]             @ 0xa04 
    /*00023914*/ CMP         R2, #0 
    /*00023918*/ BNE         VPSS_DRV_MONO_SetModelCfg_x23aec
    /*0002391c*/ LDR         R3, [R3, #2560]             @ 0xa00 
    /*00023920*/ CMP         R3, #0 
    /*00023924*/ ADDEQ       R3, FP, #12288              @ 0x3000 
    /*00023928*/ STREQ       R3, [SP, #28] 
    /*0002392c*/ BNE         VPSS_DRV_MONO_SetModelCfg_x23aec
    VPSS_DRV_MONO_SetModelCfg_x23930:
    /*00023930*/ LDR         R2, [SP, #28] 
    /*00023934*/ MOV         R3, #0 
    /*00023938*/ STR         R3, [SP, #48]               @ 0x30 
    /*0002393c*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00023940*/ LDR         R0, [R2, #3168]             @ 0xc60 
    /*00023944*/ LDR         R1, [R2, #3176]             @ 0xc68 
    /*00023948*/ LDR         R2, [R2, #3180]             @ 0xc6c 
    /*0002394c*/ STR         R0, [SP, #44]               @ 0x2c 
    /*00023950*/ STR         R1, [SP, #52]               @ 0x34 
    /*00023954*/ STR         R2, [SP, #56]               @ 0x38 
    VPSS_DRV_MONO_SetModelCfg_x23958:
    /*00023958*/ MOV         R5, #0 
    /*0002395c*/ MOV         R0, R4 
    /*00023960*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00023964*/ MOVW        R6, #1080                   @ 0x438 
    /*00023968*/ BL          0x0000000000023968          @ VPSS_HAL_SetGrpCropAttr [R_ARM_CALL: .text+0x26bc4] 
    /*0002396c*/ MOV         R2, R5 
    /*00023970*/ MOV         R1, R4 
    /*00023974*/ MOV         R0, R9 
    /*00023978*/ BL          0x0000000000023978          @ VpssDrvUpdateDcmp [R_ARM_CALL: .text+0x20e34] 
    /*0002397c*/ LDR         R2, [SP, #244]              @ 0xf4 
    /*00023980*/ MOV         R3, R5 
    /*00023984*/ MOV         R1, R5 
    /*00023988*/ MOV         R0, R9 
    /*0002398c*/ ADD         R8, FP, #15488              @ 0x3c80 
    /*00023990*/ STR         R2, [SP] 
    /*00023994*/ MOV         R2, R4 
    /*00023998*/ BL          0x0000000000023998          @ VPSS_DRV_Update3dnrAttr [R_ARM_CALL: .text+0x224dc] 
    /*0002399c*/ MOV         R1, R4 
    /*000239a0*/ MOV         R0, R9 
    /*000239a4*/ ADD         R8, R8, #16 
    /*000239a8*/ BL          0x00000000000239A8          @ VpssDrvUpdateMosaic [R_ARM_CALL: .text+0x2263c] 
    /*000239ac*/ MOV         R1, R4 
    /*000239b0*/ MOV         R0, R9 
    /*000239b4*/ BL          0x00000000000239B4          @ VpssDrvUpdateSHBD [R_ARM_CALL: .text+0x22778] 
    /*000239b8*/ LDR         R3, [SP, #252]              @ 0xfc 
    /*000239bc*/ LDR         R2, [SP, #252]              @ 0xfc 
    /*000239c0*/ STR         FP, [SP, #20] 
    /*000239c4*/ MLA         R6, R6, R3, FP 
    /*000239c8*/ MOV         R3, #72                     @ 0x48 
    /*000239cc*/ MUL         R3, R3, R2 
    /*000239d0*/ STR         R8, [SP, #8] 
    /*000239d4*/ ADD         R6, R6, #26368              @ 0x6700 
    /*000239d8*/ STR         R9, [SP, #24] 
    /*000239dc*/ ADD         R6, R6, #192                @ 0xc0 
    /*000239e0*/ STR         R3, [SP, #16] 
    /*000239e4*/ ADD         R3, FP, #19200              @ 0x4b00 
    /*000239e8*/ STR         R3, [SP, #12] 
    VPSS_DRV_MONO_SetModelCfg_x239ec:
    /*000239ec*/ LDR         R3, [SP, #16] 
    /*000239f0*/ MOV         R0, R5 
    /*000239f4*/ LDR         R2, [SP, #8] 
    /*000239f8*/ ADD         FP, R2, R3 
    /*000239fc*/ BL          0x00000000000239FC          @ VPSS_HAL_GetHalChn [R_ARM_CALL: .text+0x263bc] 
    /*00023a00*/ LDR         R3, [FP, #3244]             @ 0xcac 
    /*00023a04*/ CMP         R3, #1 
    /*00023a08*/ MOV         SL, R0 
    /*00023a0c*/ BEQ         VPSS_DRV_MONO_SetModelCfg_x23bd0
    VPSS_DRV_MONO_SetModelCfg_x23a10:
    /*00023a10*/ LDR         R2, [SP, #20] 
    /*00023a14*/ MOVW        R3, #15848                  @ 0x3de8 
    /*00023a18*/ ADD         R3, R3, R5, LSL #2 
    /*00023a1c*/ MOV         R1, SL 
    /*00023a20*/ MOV         R0, R4 
    /*00023a24*/ ADD         R5, R5, #1 
    /*00023a28*/ LDR         R2, [R2, R3] 
    /*00023a2c*/ ADD         R7, R7, #96                 @ 0x60 
    /*00023a30*/ BL          0x0000000000023A30          @ VPSS_HAL_SetChnScaleEn [R_ARM_CALL: .text+0x267f8] 
    /*00023a34*/ LDR         R2, [FP, #3244]             @ 0xcac 
    /*00023a38*/ MOV         R1, SL 
    /*00023a3c*/ MOV         R0, R4 
    /*00023a40*/ BL          0x0000000000023A40          @ VPSS_HAL_SetChnEn [R_ARM_CALL: .text+0x26538] 
    /*00023a44*/ LDR         R3, [SP, #12] 
    /*00023a48*/ CMP         R5, #3 
    /*00023a4c*/ ADD         R6, R6, #360                @ 0x168 
    /*00023a50*/ ADD         R3, R3, #752                @ 0x2f0 
    /*00023a54*/ STR         R3, [SP, #12] 
    /*00023a58*/ LDR         R3, [SP, #8] 
    /*00023a5c*/ ADD         R3, R3, #24 
    /*00023a60*/ STR         R3, [SP, #8] 
    /*00023a64*/ BNE         VPSS_DRV_MONO_SetModelCfg_x239ec
    /*00023a68*/ LDR         R2, [SP, #28] 
    /*00023a6c*/ MOV         R6, #72                     @ 0x48 
    /*00023a70*/ LDR         FP, [SP, #20] 
    /*00023a74*/ LDR         R9, [SP, #24] 
    /*00023a78*/ LDR         R3, [R2, #3564]             @ 0xdec 
    /*00023a7c*/ CMP         R3, #1 
    /*00023a80*/ BEQ         VPSS_DRV_MONO_SetModelCfg_x23d14
    /*00023a84*/ LDR         R3, [R2, #3568]             @ 0xdf0 
    /*00023a88*/ CMP         R3, #1 
    /*00023a8c*/ BEQ         VPSS_DRV_MONO_SetModelCfg_x23d14
    /*00023a90*/ LDR         R2, [SP, #252]              @ 0xfc 
    /*00023a94*/ MOVW        R3, #18748                  @ 0x493c 
    /*00023a98*/ MLA         R6, R6, R2, FP 
    /*00023a9c*/ LDR         R5, [R6, R3] 
    VPSS_DRV_MONO_SetModelCfg_x23aa0:
    /*00023aa0*/ LDR         R3, [SP, #16] 
    /*00023aa4*/ ADD         R8, FP, #836                @ 0x344 
    /*00023aa8*/ MOV         R7, #0 
    /*00023aac*/ ADD         R6, R3, #18688              @ 0x4900 
    /*00023ab0*/ ADD         R6, R6, #84                 @ 0x54 
    /*00023ab4*/ ADD         R6, FP, R6 
    VPSS_DRV_MONO_SetModelCfg_x23ab8:
    /*00023ab8*/ CMP         R5, #0 
    /*00023abc*/ MOV         R2, R8 
    /*00023ac0*/ STREQ       R5, [R8] 
    /*00023ac4*/ MOV         R1, R7 
    /*00023ac8*/ MOV         R0, R4 
    /*00023acc*/ ADD         R7, R7, #1 
    /*00023ad0*/ BL          0x0000000000023AD0          @ VPSS_HAL_SetLBA [R_ARM_CALL: .text+0x27238] 
    /*00023ad4*/ CMP         R7, #3 
    /*00023ad8*/ ADD         R6, R6, #24 
    /*00023adc*/ ADD         R8, R8, #44                 @ 0x2c 
    /*00023ae0*/ BEQ         VPSS_DRV_MONO_SetModelCfg_x23b30
    /*00023ae4*/ LDR         R5, [R6, #-24]              @ 0xffffffe8 
    /*00023ae8*/ B           VPSS_DRV_MONO_SetModelCfg_x23ab8
    VPSS_DRV_MONO_SetModelCfg_x23aec:
    /*00023aec*/ ADD         R3, FP, #12288              @ 0x3000 
    /*00023af0*/ STR         R3, [SP, #28] 
    /*00023af4*/ LDR         R3, [R3, #3144]             @ 0xc48 
    /*00023af8*/ CMP         R3, #1 
    /*00023afc*/ BNE         VPSS_DRV_MONO_SetModelCfg_x23930
    /*00023b00*/ LDR         R2, [SP, #28] 
    /*00023b04*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00023b08*/ MOV         R3, R2 
    /*00023b0c*/ LDR         R0, [R2, #3192]             @ 0xc78 
    /*00023b10*/ LDR         R1, [R2, #3196]             @ 0xc7c 
    /*00023b14*/ LDR         R3, [R3, #3180]             @ 0xc6c 
    /*00023b18*/ LDR         R2, [R2, #3176]             @ 0xc68 
    /*00023b1c*/ STR         R0, [SP, #44]               @ 0x2c 
    /*00023b20*/ STR         R1, [SP, #48]               @ 0x30 
    /*00023b24*/ STR         R2, [SP, #52]               @ 0x34 
    /*00023b28*/ STR         R3, [SP, #56]               @ 0x38 
    /*00023b2c*/ B           VPSS_DRV_MONO_SetModelCfg_x23958
    VPSS_DRV_MONO_SetModelCfg_x23b30:
    /*00023b30*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00023b34*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00023b38*/ LDR         R2, [SP, #32] 
    /*00023b3c*/ LDR         R5, [R3, R9, LSL #2] 
    /*00023b40*/ LDR         R6, [R2, R9, LSL #2] 
    /*00023b44*/ LDR         R3, [R5, #2084]             @ 0x824 
    /*00023b48*/ CMP         R3, #0 
    /*00023b4c*/ BNE         VPSS_DRV_MONO_SetModelCfg_x23dc4
    VPSS_DRV_MONO_SetModelCfg_x23b50:
    /*00023b50*/ ADD         R5, R6, #12288              @ 0x3000 
    /*00023b54*/ LDR         R2, [R5, #3488]             @ 0xda0 
    /*00023b58*/ LDR         R7, [R5, #3484]             @ 0xd9c 
    /*00023b5c*/ CMP         R2, #1 
    /*00023b60*/ BEQ         VPSS_DRV_MONO_SetModelCfg_x23e18
    VPSS_DRV_MONO_SetModelCfg_x23b64:
    /*00023b64*/ MOV         R1, R7 
    /*00023b68*/ MOV         R0, R4 
    /*00023b6c*/ BL          0x0000000000023B6C          @ VPSS_HAL_EnableChnLowDelay [R_ARM_CALL: .text+0x27468] 
    /*00023b70*/ LDR         R5, [SP, #36]               @ 0x24 
    /*00023b74*/ MOV         R0, R4 
    /*00023b78*/ LDRD        R6, [R5, #8] 
    /*00023b7c*/ ADDS        R2, R6, #8192               @ 0x2000 
    /*00023b80*/ ADC         R3, R7, #0 
    /*00023b84*/ BL          0x0000000000023B84          @ VPSS_HAL_SetZmeLoadAddr [R_ARM_CALL: .text+0x276d0] 
    /*00023b88*/ LDRD        R6, [R5, #8] 
    /*00023b8c*/ MOV         R0, R4 
    /*00023b90*/ ADDS        R2, R6, #9728               @ 0x2600 
    /*00023b94*/ ADC         R3, R7, #0 
    /*00023b98*/ BL          0x0000000000023B98          @ VPSS_HAL_SetShbdLoadAddr [R_ARM_CALL: .text+0x276d8] 
    /*00023b9c*/ LDRD        R6, [R5, #8] 
    /*00023ba0*/ MOV         R0, R4 
    /*00023ba4*/ ADDS        R2, R6, #9216               @ 0x2400 
    /*00023ba8*/ ADC         R3, R7, #0 
    /*00023bac*/ BL          0x0000000000023BAC          @ VPSS_HAL_SetMosaicLoadAddr [R_ARM_CALL: .text+0x276e0] 
    /*00023bb0*/ LDRD        R6, [R5, #8] 
    /*00023bb4*/ MOV         R0, R4 
    /*00023bb8*/ ADDS        R2, R6, #6144               @ 0x1800 
    /*00023bbc*/ ADC         R3, R7, #0 
    /*00023bc0*/ BL          0x0000000000023BC0          @ VPSS_HAL_SetNrLoadAddr [R_ARM_CALL: .text+0x276c8] 
    /*00023bc4*/ MOV         R0, #0 
    /*00023bc8*/ ADD         SP, SP, #204                @ 0xcc 
    /*00023bcc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSS_DRV_MONO_SetModelCfg_x23bd0:
    /*00023bd0*/ LDR         R2, [SP, #32] 
    /*00023bd4*/ MOV         LR, #0 
    /*00023bd8*/ LDR         R1, [SP, #24] 
    /*00023bdc*/ STR         R3, [SP, #100]              @ 0x64 
    /*00023be0*/ STR         LR, [SP, #128]              @ 0x80 
    /*00023be4*/ LDR         R1, [R2, R1, LSL #2] 
    /*00023be8*/ ADD         R2, SP, #96                 @ 0x60 
    /*00023bec*/ STR         LR, [SP, #132]              @ 0x84 
    /*00023bf0*/ ADD         IP, R1, #12288              @ 0x3000 
    /*00023bf4*/ ADD         R1, R1, #16384              @ 0x4000 
    /*00023bf8*/ STR         R3, [SP, #120]              @ 0x78 
    /*00023bfc*/ LDR         R1, [R1, #2724]             @ 0xaa4 
    /*00023c00*/ STR         R3, [SP, #124]              @ 0x7c 
    /*00023c04*/ STR         LR, [SP, #176]              @ 0xb0 
    /*00023c08*/ SUBS        R1, R1, #25 
    /*00023c0c*/ STR         LR, [SP, #180]              @ 0xb4 
    /*00023c10*/ STR         R3, [SP, #168]              @ 0xa8 
    /*00023c14*/ MOVNE       R1, #1 
    /*00023c18*/ STR         R3, [SP, #164]              @ 0xa4 
    /*00023c1c*/ LDR         LR, [IP, #3176]             @ 0xc68 
    /*00023c20*/ LDR         R0, [R7, #64]               @ 0x40 
    /*00023c24*/ LDR         IP, [IP, #3180]             @ 0xc6c 
    /*00023c28*/ LDR         R3, [R7, #68]               @ 0x44 
    /*00023c2c*/ STR         R1, [SP, #136]              @ 0x88 
    /*00023c30*/ MOV         R1, SL 
    /*00023c34*/ STR         IP, [SP, #196]              @ 0xc4 
    /*00023c38*/ STR         LR, [SP, #192]              @ 0xc0 
    /*00023c3c*/ STR         R0, [SP, #96]               @ 0x60 
    /*00023c40*/ MOV         R0, R4 
    /*00023c44*/ STR         R3, [SP, #172]              @ 0xac 
    /*00023c48*/ LDR         R3, [R6] 
    /*00023c4c*/ STR         R3, [SP, #184]              @ 0xb8 
    /*00023c50*/ LDR         R3, [R6, #4] 
    /*00023c54*/ STR         R3, [SP, #188]              @ 0xbc 
    /*00023c58*/ LDR         R3, [SP, #12] 
    /*00023c5c*/ LDR         R3, [R3, #284]              @ 0x11c 
    /*00023c60*/ CMP         R3, #28 
    /*00023c64*/ CMPNE       R3, #25 
    /*00023c68*/ MOVEQ       R3, #1 
    /*00023c6c*/ MOVNE       R3, #0 
    /*00023c70*/ EOR         R3, R3, #1 
    /*00023c74*/ STR         R3, [SP, #140]              @ 0x8c 
    /*00023c78*/ BL          0x0000000000023C78          @ VPSS_HAL_SetChnSclCfg [R_ARM_CALL: .text+0x274d4] 
    /*00023c7c*/ LDRD        R8, [R7, #8] 
    /*00023c80*/ LDRD        R0, [R7] 
    /*00023c84*/ ADD         R2, SP, #64                 @ 0x40 
    /*00023c88*/ STRD        R8, [SP, #72]               @ 0x48 
    /*00023c8c*/ LDRD        R8, [R7, #16] 
    /*00023c90*/ STRD        R0, [SP, #64]               @ 0x40 
    /*00023c94*/ MOV         R1, SL 
    /*00023c98*/ MOV         R0, R4 
    /*00023c9c*/ STRD        R8, [SP, #80]               @ 0x50 
    /*00023ca0*/ LDRD        R8, [R7, #24] 
    /*00023ca4*/ STRD        R8, [SP, #88]               @ 0x58 
    /*00023ca8*/ BL          0x0000000000023CA8          @ VPSS_HAL_SetChnSclCoeff [R_ARM_CALL: .text+0x27644] 
    /*00023cac*/ LDR         IP, [SP, #8] 
    /*00023cb0*/ MOVW        R3, #22312                  @ 0x5728 
    /*00023cb4*/ ADD         R2, SP, #44                 @ 0x2c 
    /*00023cb8*/ MOV         R1, SL 
    /*00023cbc*/ MOV         R0, R4 
    /*00023cc0*/ LDR         R3, [IP, R3] 
    /*00023cc4*/ CMP         R3, #1 
    /*00023cc8*/ BEQ         VPSS_DRV_MONO_SetModelCfg_x23df0
    VPSS_DRV_MONO_SetModelCfg_x23ccc:
    /*00023ccc*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00023cd0*/ BL          0x0000000000023CD0          @ VPSS_HAL_SetChnCrop [R_ARM_CALL: .text+0x26d9c] 
    /*00023cd4*/ LDR         R3, [SP, #244]              @ 0xf4 
    /*00023cd8*/ MOV         R1, R5 
    /*00023cdc*/ LDR         R2, [SP, #252]              @ 0xfc 
    /*00023ce0*/ LDR         R8, [SP, #24] 
    /*00023ce4*/ STR         R3, [SP, #4] 
    /*00023ce8*/ STR         R2, [SP] 
    /*00023cec*/ MOV         R2, R4 
    /*00023cf0*/ LDR         R3, [SP, #12] 
    /*00023cf4*/ MOV         R0, R8 
    /*00023cf8*/ BL          0x0000000000023CF8          @ VPSSDrvUpdateChnAddr [R_ARM_CALL: .text+0x236a4] 
    /*00023cfc*/ MOV         R3, #0 
    /*00023d00*/ MOV         R2, R4 
    /*00023d04*/ MOV         R1, SL 
    /*00023d08*/ MOV         R0, R8 
    /*00023d0c*/ BL          0x0000000000023D0C          @ VpssDrvUpdateCmp [R_ARM_CALL: .text+0x20f58] 
    /*00023d10*/ B           VPSS_DRV_MONO_SetModelCfg_x23a10
    VPSS_DRV_MONO_SetModelCfg_x23d14:
    /*00023d14*/ LDR         R3, [SP, #252]              @ 0xfc 
    /*00023d18*/ MOVW        R7, #18748                  @ 0x493c 
    /*00023d1c*/ MLA         R6, R6, R3, FP 
    /*00023d20*/ LDR         R5, [R6, R7] 
    /*00023d24*/ CMP         R5, #0 
    /*00023d28*/ BNE         VPSS_DRV_MONO_SetModelCfg_x23aa0
    /*00023d2c*/ LDR         R3, [SP, #32] 
    /*00023d30*/ MOV         R8, #1 
    /*00023d34*/ MOV         R1, R5 
    /*00023d38*/ ADD         R2, SP, #96                 @ 0x60 
    /*00023d3c*/ MOV         R0, R4 
    /*00023d40*/ STR         R5, [SP, #128]              @ 0x80 
    /*00023d44*/ LDR         R3, [R3, R9, LSL #2] 
    /*00023d48*/ STR         R5, [SP, #132]              @ 0x84 
    /*00023d4c*/ ADD         IP, R3, #12288              @ 0x3000 
    /*00023d50*/ ADD         R3, R3, #16384              @ 0x4000 
    /*00023d54*/ STR         R5, [SP, #176]              @ 0xb0 
    /*00023d58*/ LDR         R3, [R3, #2724]             @ 0xaa4 
    /*00023d5c*/ LDR         LR, [IP, #3176]             @ 0xc68 
    /*00023d60*/ LDR         IP, [IP, #3180]             @ 0xc6c 
    /*00023d64*/ SUBS        R3, R3, #25 
    /*00023d68*/ STR         R5, [SP, #180]              @ 0xb4 
    /*00023d6c*/ MOVNE       R3, #1 
    /*00023d70*/ STR         LR, [SP, #192]              @ 0xc0 
    /*00023d74*/ STR         R3, [SP, #136]              @ 0x88 
    /*00023d78*/ STR         R3, [SP, #140]              @ 0x8c 
    /*00023d7c*/ MOV         R3, #1048576                @ 0x100000 
    /*00023d80*/ STR         LR, [SP, #184]              @ 0xb8 
    /*00023d84*/ STR         IP, [SP, #196]              @ 0xc4 
    /*00023d88*/ STR         IP, [SP, #188]              @ 0xbc 
    /*00023d8c*/ STR         R3, [SP, #96]               @ 0x60 
    /*00023d90*/ STR         R3, [SP, #172]              @ 0xac 
    /*00023d94*/ STR         R8, [SP, #100]              @ 0x64 
    /*00023d98*/ STR         R8, [SP, #120]              @ 0x78 
    /*00023d9c*/ STR         R8, [SP, #124]              @ 0x7c 
    /*00023da0*/ STR         R8, [SP, #168]              @ 0xa8 
    /*00023da4*/ STR         R8, [SP, #164]              @ 0xa4 
    /*00023da8*/ BL          0x0000000000023DA8          @ VPSS_HAL_SetChnSclCfg [R_ARM_CALL: .text+0x274d4] 
    /*00023dac*/ MOV         R1, R5 
    /*00023db0*/ MOV         R2, R8 
    /*00023db4*/ MOV         R0, R4 
    /*00023db8*/ BL          0x0000000000023DB8          @ VPSS_HAL_SetChnScaleEn [R_ARM_CALL: .text+0x267f8] 
    /*00023dbc*/ LDR         R5, [R6, R7] 
    /*00023dc0*/ B           VPSS_DRV_MONO_SetModelCfg_x23aa0
    VPSS_DRV_MONO_SetModelCfg_x23dc4:
    /*00023dc4*/ ADD         R1, R5, #2080               @ 0x820 
    /*00023dc8*/ ADD         R0, R6, #15744              @ 0x3d80 
    /*00023dcc*/ MOV         R2, #16 
    /*00023dd0*/ ADD         R1, R1, #4 
    /*00023dd4*/ ADD         R0, R0, #24 
    /*00023dd8*/ BL          0x0000000000023DD8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00023ddc*/ MOV         R2, #2 
    /*00023de0*/ MOV         R3, #0 
    /*00023de4*/ STR         R2, [R5, #2076]             @ 0x81c 
    /*00023de8*/ STR         R3, [R5, #2084]             @ 0x824 
    /*00023dec*/ B           VPSS_DRV_MONO_SetModelCfg_x23b50
    VPSS_DRV_MONO_SetModelCfg_x23df0:
    /*00023df0*/ MOV         LR, IP 
    /*00023df4*/ LDR         IP, [IP] 
    /*00023df8*/ STR         IP, [SP, #44]               @ 0x2c 
    /*00023dfc*/ LDR         IP, [LR, #4] 
    /*00023e00*/ STR         IP, [SP, #48]               @ 0x30 
    /*00023e04*/ LDR         IP, [LR, #8] 
    /*00023e08*/ STR         IP, [SP, #52]               @ 0x34 
    /*00023e0c*/ LDR         IP, [LR, #12] 
    /*00023e10*/ STR         IP, [SP, #56]               @ 0x38 
    /*00023e14*/ B           VPSS_DRV_MONO_SetModelCfg_x23ccc
    VPSS_DRV_MONO_SetModelCfg_x23e18:
    /*00023e18*/ MOV         R3, #752                    @ 0x2f0 
    /*00023e1c*/ MOVW        R2, #19528                  @ 0x4c48 
    /*00023e20*/ MLA         R3, R3, R7, R6 
    /*00023e24*/ MOV         R1, R7 
    /*00023e28*/ MOV         R0, R4 
    /*00023e2c*/ ADD         R2, R3, R2 
    /*00023e30*/ LDRD        R2, [R2] 
    /*00023e34*/ BL          0x0000000000023E34          @ VPSS_HAL_SetChnLowDelayAddr [R_ARM_CALL: .text+0x273c8] 
    /*00023e38*/ ADD         R2, R6, #15744              @ 0x3d80 
    /*00023e3c*/ ADD         R2, R2, #32 
    /*00023e40*/ MOV         R1, R7 
    /*00023e44*/ MOV         R0, R4 
    /*00023e48*/ BL          0x0000000000023E48          @ VPSS_HAL_SetChnLowDelayAttr [R_ARM_CALL: .text+0x26634] 
    /*00023e4c*/ LDR         R2, [R5, #3488]             @ 0xda0 
    /*00023e50*/ B           VPSS_DRV_MONO_SetModelCfg_x23b64
FUNC_END VPSS_DRV_MONO_SetModelCfg


FUNC_BEGIN VPSS_DRV_GetIrqId
    /*00023e54*/ MOVW        R3, #0                      @ .LANCHOR4 [R_ARM_MOVW_ABS_NC: .data+0xe8] 
    /*00023e58*/ MOVT        R3, #0                      @ .LANCHOR4 [R_ARM_MOVT_ABS: .data+0xe8] 
    /*00023e5c*/ LDR         R3, [R3] 
    /*00023e60*/ STR         R3, [R0] 
    /*00023e64*/ BX          LR 
FUNC_END VPSS_DRV_GetIrqId


FUNC_BEGIN VPSS_DRV_RequestIrq
    /*00023e68*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00023e6c*/ MOVW        R3, #0                      @ .LANCHOR4 [R_ARM_MOVW_ABS_NC: .data+0xe8] 
    /*00023e70*/ SUB         SP, SP, #12 
    /*00023e74*/ MOVT        R3, #0                      @ .LANCHOR4 [R_ARM_MOVT_ABS: .data+0xe8] 
    /*00023e78*/ MOVW        R1, #0                      @ VPSS_COMM_IrqProc [R_ARM_MOVW_ABS_NC: .text+0x16ccc] 
    /*00023e7c*/ MOV         R2, #0 
    /*00023e80*/ LDR         R0, [R3] 
    /*00023e84*/ MOVT        R1, #0                      @ VPSS_COMM_IrqProc [R_ARM_MOVT_ABS: .text+0x16ccc] 
    /*00023e88*/ MOVW        R3, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6168] 
    /*00023e8c*/ STR         R1, [SP] 
    /*00023e90*/ MOVT        R3, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6168] 
    /*00023e94*/ BL          0x0000000000023E94          @ osal_request_irq [R_ARM_CALL: +0x0] 
    /*00023e98*/ CMP         R0, #0 
    /*00023e9c*/ BNE         VPSS_DRV_RequestIrq_x23ea8
    VPSS_DRV_RequestIrq_x23ea0:
    /*00023ea0*/ ADD         SP, SP, #12 
    /*00023ea4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_RequestIrq_x23ea8:
    /*00023ea8*/ MOVW        R3, #9139                   @ 0x23b3 
    /*00023eac*/ MOVW        R2, #0                      @ .LC320 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x96b8] 
    /*00023eb0*/ STR         R3, [SP] 
    /*00023eb4*/ MOVT        R2, #0                      @ .LC320 [R_ARM_MOVT_ABS: .rodata.str1.4+0x96b8] 
    /*00023eb8*/ LDR         R3, [PC, #16]               @ 0x0000000000023ed0 
    /*00023ebc*/ MOV         R1, #7 
    /*00023ec0*/ MOV         R0, #0 
    /*00023ec4*/ BL          0x0000000000023EC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023ec8*/ MVN         R0, #0 
    /*00023ecc*/ B           VPSS_DRV_RequestIrq_x23ea0
    /*00023ed0*/ MULEQ       R0, R4, R4 
FUNC_END VPSS_DRV_RequestIrq


FUNC_BEGIN VPSS_DRV_FreetIrq
    /*00023ed4*/ MOVW        R3, #0                      @ .LANCHOR4 [R_ARM_MOVW_ABS_NC: .data+0xe8] 
    /*00023ed8*/ MOVT        R3, #0                      @ .LANCHOR4 [R_ARM_MOVT_ABS: .data+0xe8] 
    /*00023edc*/ LDR         R2, [R3, #4] 
    /*00023ee0*/ CMP         R2, #0 
    /*00023ee4*/ BNE         VPSS_DRV_FreetIrq_x23ef0
    /*00023ee8*/ MOV         R0, #0 
    /*00023eec*/ BX          LR 
    VPSS_DRV_FreetIrq_x23ef0:
    /*00023ef0*/ PUSH        {R4, LR} 
    /*00023ef4*/ MOVW        R1, #0                      @ VPSS_COMM_IrqProc [R_ARM_MOVW_ABS_NC: .text+0x16ccc] 
    /*00023ef8*/ LDR         R0, [R3] 
    /*00023efc*/ MOVT        R1, #0                      @ VPSS_COMM_IrqProc [R_ARM_MOVT_ABS: .text+0x16ccc] 
    /*00023f00*/ BL          0x0000000000023F00          @ osal_free_irq [R_ARM_CALL: +0x0] 
    /*00023f04*/ MOV         R0, #0 
    /*00023f08*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_FreetIrq


FUNC_BEGIN VPSS_DRV_AbolishReset
    /*00023f0c*/ MOVW        R3, #0                      @ .LANCHOR4 [R_ARM_MOVW_ABS_NC: .data+0xe8] 
    /*00023f10*/ MOVT        R3, #0                      @ .LANCHOR4 [R_ARM_MOVT_ABS: .data+0xe8] 
    /*00023f14*/ LDR         R3, [R3, #4] 
    /*00023f18*/ CMP         R3, #0 
    /*00023f1c*/ BNE         VPSS_DRV_AbolishReset_x23f28
    /*00023f20*/ MOV         R0, #0 
    /*00023f24*/ BX          LR 
    VPSS_DRV_AbolishReset_x23f28:
    /*00023f28*/ PUSH        {R4, LR} 
    /*00023f2c*/ MOV         R0, #0 
    /*00023f30*/ BL          0x0000000000023F30          @ VPSS_DRV_ClkEnable [R_ARM_CALL: .text+0x1f588] 
    /*00023f34*/ MOV         R0, #0 
    /*00023f38*/ MOVW        R1, #25690                  @ 0x645a 
    /*00023f3c*/ MOVT        R1, #2304                   @ 0x900 
    /*00023f40*/ BL          0x0000000000023F40          @ VPSS_HAL_SetOutstanding [R_ARM_CALL: .text+0x266cc] 
    /*00023f44*/ MOV         R0, #0 
    /*00023f48*/ BL          0x0000000000023F48          @ VPSS_DRV_ClkDisable [R_ARM_CALL: .text+0x1f600] 
    /*00023f4c*/ MOV         R0, #0 
    /*00023f50*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_AbolishReset


FUNC_BEGIN VPSS_DRV_Reset
    /*00023f54*/ MOVW        R3, #0                      @ .LANCHOR4 [R_ARM_MOVW_ABS_NC: .data+0xe8] 
    /*00023f58*/ MOVT        R3, #0                      @ .LANCHOR4 [R_ARM_MOVT_ABS: .data+0xe8] 
    /*00023f5c*/ LDR         R3, [R3, #4] 
    /*00023f60*/ CMP         R3, #0 
    /*00023f64*/ BNE         VPSS_DRV_Reset_x23f70
    /*00023f68*/ MOV         R0, #0 
    /*00023f6c*/ BX          LR 
    VPSS_DRV_Reset_x23f70:
    /*00023f70*/ PUSH        {R4, LR} 
    /*00023f74*/ MOV         R0, #0 
    /*00023f78*/ BL          0x0000000000023F78          @ VPSS_DRV_ClkEnable [R_ARM_CALL: .text+0x1f588] 
    /*00023f7c*/ MOV         R0, #1 
    /*00023f80*/ BL          0x0000000000023F80          @ osal_msleep [R_ARM_CALL: +0x0] 
    /*00023f84*/ MOV         R0, #0 
    /*00023f88*/ BL          0x0000000000023F88          @ VPSS_DRV_ClkDisable [R_ARM_CALL: .text+0x1f600] 
    /*00023f8c*/ MOV         R0, #0 
    /*00023f90*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_Reset


FUNC_BEGIN VPSS_DRV_CheckQuadrangleAttr
    /*00023f94*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00023f98*/ MOV         R1, #0 
    /*00023f9c*/ LDR         LR, [R0, #12] 
    /*00023fa0*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00023fa4*/ LDR         IP, [R0, #8] 
    /*00023fa8*/ ADD         R4, R0, #24 
    /*00023fac*/ MOV         R3, R0 
    /*00023fb0*/ MOV         R5, R1 
    VPSS_DRV_CheckQuadrangleAttr_x23fb4:
    /*00023fb4*/ LDR         R2, [R3, #20] 
    /*00023fb8*/ ADD         R3, R3, #8 
    /*00023fbc*/ CMP         LR, R2 
    /*00023fc0*/ LDR         R2, [R3, #8] 
    /*00023fc4*/ ADDEQ       R5, R5, #1 
    /*00023fc8*/ CMP         R2, IP 
    /*00023fcc*/ ADDEQ       R1, R1, #1 
    /*00023fd0*/ CMP         R4, R3 
    /*00023fd4*/ BNE         VPSS_DRV_CheckQuadrangleAttr_x23fb4
    /*00023fd8*/ CMP         R1, #3 
    /*00023fdc*/ CMPNE       R5, #3 
    /*00023fe0*/ MOVNE       R0, #1 
    /*00023fe4*/ BNE         VPSS_DRV_CheckQuadrangleAttr_x24044
    /*00023fe8*/ LDR         R1, [R0, #36]               @ 0x24 
    /*00023fec*/ MOVW        R3, #9226                   @ 0x240a 
    /*00023ff0*/ LDR         R7, [R0, #32] 
    /*00023ff4*/ MOVW        R2, #0                      @ .LC321 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x96e8] 
    /*00023ff8*/ LDR         R6, [R0, #28] 
    /*00023ffc*/ MOVT        R2, #0                      @ .LC321 [R_ARM_MOVT_ABS: .rodata.str1.4+0x96e8] 
    /*00024000*/ LDR         R5, [R0, #24] 
    /*00024004*/ STR         LR, [SP, #8] 
    /*00024008*/ LDR         R4, [R0, #20] 
    /*0002400c*/ LDR         LR, [R0, #16] 
    /*00024010*/ MOV         R0, #3 
    /*00024014*/ STR         R1, [SP, #32] 
    /*00024018*/ MOV         R1, #7 
    /*0002401c*/ STR         R3, [SP] 
    /*00024020*/ STR         IP, [SP, #4] 
    /*00024024*/ STR         R7, [SP, #28] 
    /*00024028*/ STR         R6, [SP, #24] 
    /*0002402c*/ STR         R5, [SP, #20] 
    /*00024030*/ STR         R4, [SP, #16] 
    /*00024034*/ STR         LR, [SP, #12] 
    /*00024038*/ LDR         R3, [PC, #12]               @ 0x000000000002404c 
    /*0002403c*/ BL          0x000000000002403C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024040*/ MOV         R0, #0 
    VPSS_DRV_CheckQuadrangleAttr_x24044:
    /*00024044*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00024048*/ POP         {R4, R5, R6, R7, PC} 
    /*0002404c*/ ANDEQ       R1, R0, R8, LSR #9 
FUNC_END VPSS_DRV_CheckQuadrangleAttr


FUNC_BEGIN VpssDrvGetLowDeLayChnId
    /*00024050*/ TST         R1, #4096                   @ 0x1000 
    /*00024054*/ BNE         VpssDrvGetLowDeLayChnId_x24078
    /*00024058*/ TST         R1, #8192                   @ 0x2000 
    /*0002405c*/ BNE         VpssDrvGetLowDeLayChnId_x24070
    /*00024060*/ TST         R1, #16384                  @ 0x4000 
    /*00024064*/ MOVNE       R0, #2 
    /*00024068*/ MVNEQ       R0, #0 
    /*0002406c*/ BX          LR 
    VpssDrvGetLowDeLayChnId_x24070:
    /*00024070*/ MOV         R0, #1 
    /*00024074*/ BX          LR 
    VpssDrvGetLowDeLayChnId_x24078:
    /*00024078*/ MOV         R0, #0 
    /*0002407c*/ BX          LR 
FUNC_END VpssDrvGetLowDeLayChnId


FUNC_BEGIN VPSS_DRV_CheckLowDelayInfo
    /*00024080*/ LDR         R3, [R2] 
    /*00024084*/ CMP         R3, #1 
    /*00024088*/ BEQ         VPSS_DRV_CheckLowDelayInfo_x24094
    VPSS_DRV_CheckLowDelayInfo_x2408c:
    /*0002408c*/ MOV         R0, #0 
    /*00024090*/ BX          LR 
    VPSS_DRV_CheckLowDelayInfo_x24094:
    /*00024094*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00024098*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0002409c*/ MOV         R3, #72                     @ 0x48 
    /*000240a0*/ LDR         R2, [R2, R0, LSL #2] 
    /*000240a4*/ MLA         R3, R3, R1, R2 
    /*000240a8*/ LDR         R3, [R3, #84]               @ 0x54 
    /*000240ac*/ CMP         R3, #1 
    /*000240b0*/ BNE         VPSS_DRV_CheckLowDelayInfo_x2408c
    /*000240b4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000240b8*/ SUB         SP, SP, #12 
    /*000240bc*/ MOVW        R3, #9264                   @ 0x2430 
    /*000240c0*/ MOVW        R2, #0                      @ .LC322 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9758] 
    /*000240c4*/ STR         R1, [SP, #4] 
    /*000240c8*/ MOVT        R2, #0                      @ .LC322 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9758] 
    /*000240cc*/ STR         R3, [SP] 
    /*000240d0*/ MOV         R1, #7 
    /*000240d4*/ LDR         R3, [PC, #20]               @ 0x00000000000240f0 
    /*000240d8*/ MOV         R0, #3 
    /*000240dc*/ BL          0x00000000000240DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000240e0*/ MOVW        R0, #32777                  @ 0x8009 
    /*000240e4*/ MOVT        R0, #40967                  @ 0xa007 
    /*000240e8*/ ADD         SP, SP, #12 
    /*000240ec*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000240f0*/ ANDEQ       R1, R0, R8, ASR #9 
FUNC_END VPSS_DRV_CheckLowDelayInfo


FUNC_BEGIN VPSS_DRV_CheckLowDelayChn
    /*000240f4*/ CMP         R0, #2 
    /*000240f8*/ MOVHI       R0, #0 
    /*000240fc*/ MOVLS       R0, #1 
    /*00024100*/ BX          LR 
FUNC_END VPSS_DRV_CheckLowDelayChn


FUNC_BEGIN VPSS_DRV_CheckCoverAttr
    /*00024104*/ LDR         R3, [R1, #8] 
    /*00024108*/ CMP         R3, #0 
    /*0002410c*/ BNE         VPSS_DRV_CheckCoverAttr_x2412c
    /*00024110*/ LDR         R3, [R0] 
    /*00024114*/ CMP         R3, #0 
    /*00024118*/ BNE         VPSS_DRV_CheckCoverAttr_x24124
    /*0002411c*/ MOV         R0, #1 
    /*00024120*/ BX          LR 
    VPSS_DRV_CheckCoverAttr_x24124:
    /*00024124*/ ADD         R0, R0, #4 
    VPSS_DRV_CheckCoverAttr_x24128:
    /*00024128*/ B           VPSS_DRV_CheckCoverAttr_x24128@ VPSS_DRV_CheckQuadrangleAttr [R_ARM_JUMP24: .text+0x23f94] 
    VPSS_DRV_CheckCoverAttr_x2412c:
    /*0002412c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00024130*/ SUB         SP, SP, #12 
    /*00024134*/ MOV         R1, #7 
    /*00024138*/ MOVW        R2, #0                      @ .LC323 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9798] 
    /*0002413c*/ STR         R3, [SP, #4] 
    /*00024140*/ MOVT        R2, #0                      @ .LC323 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9798] 
    /*00024144*/ MOVW        R3, #9287                   @ 0x2447 
    /*00024148*/ MOV         R0, #3 
    /*0002414c*/ STR         R3, [SP] 
    /*00024150*/ LDR         R3, [PC, #12]               @ 0x0000000000024164 
    /*00024154*/ BL          0x0000000000024154          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024158*/ MOV         R0, #0 
    /*0002415c*/ ADD         SP, SP, #12 
    /*00024160*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00024164*/ ANDEQ       R1, R0, R4, ROR #9 
FUNC_END VPSS_DRV_CheckCoverAttr


FUNC_BEGIN VPSS_DRV_CheckRgnAttr
    /*00024168*/ CMP         R0, #2 
    /*0002416c*/ BEQ         VPSS_DRV_CheckRgnAttr_x241d4
    /*00024170*/ CMP         R0, #4 
    /*00024174*/ BEQ         VPSS_DRV_CheckRgnAttr_x24190
    /*00024178*/ CMP         R0, #1 
    /*0002417c*/ BEQ         VPSS_DRV_CheckRgnAttr_x24188
    VPSS_DRV_CheckRgnAttr_x24180:
    /*00024180*/ MOV         R0, #1 
    /*00024184*/ BX          LR 
    VPSS_DRV_CheckRgnAttr_x24188:
    /*00024188*/ ADD         R0, R2, #8 
    VPSS_DRV_CheckRgnAttr_x2418c:
    /*0002418c*/ B           VPSS_DRV_CheckRgnAttr_x2418c@ VPSS_DRV_CheckCoverAttr [R_ARM_JUMP24: .text+0x24104] 
    VPSS_DRV_CheckRgnAttr_x24190:
    /*00024190*/ LDR         R3, [R1, #8] 
    /*00024194*/ CMP         R3, #0 
    /*00024198*/ BEQ         VPSS_DRV_CheckRgnAttr_x24180
    /*0002419c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000241a0*/ SUB         SP, SP, #12 
    /*000241a4*/ MOV         R1, #7 
    /*000241a8*/ MOVW        R2, #0                      @ .LC324 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x97cc] 
    /*000241ac*/ STR         R3, [SP, #4] 
    /*000241b0*/ MOVT        R2, #0                      @ .LC324 [R_ARM_MOVT_ABS: .rodata.str1.4+0x97cc] 
    /*000241b4*/ MOVW        R3, #9303                   @ 0x2457 
    /*000241b8*/ MOV         R0, #3 
    /*000241bc*/ STR         R3, [SP] 
    /*000241c0*/ LDR         R3, [PC, #32]               @ 0x00000000000241e8 
    /*000241c4*/ BL          0x00000000000241C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000241c8*/ MOV         R0, #0 
    /*000241cc*/ ADD         SP, SP, #12 
    /*000241d0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_CheckRgnAttr_x241d4:
    /*000241d4*/ LDR         R3, [R2, #8] 
    /*000241d8*/ CMP         R3, #0 
    /*000241dc*/ BEQ         VPSS_DRV_CheckRgnAttr_x24180
    /*000241e0*/ ADD         R0, R2, #12 
    VPSS_DRV_CheckRgnAttr_x241e4:
    /*000241e4*/ B           VPSS_DRV_CheckRgnAttr_x241e4@ VPSS_DRV_CheckQuadrangleAttr [R_ARM_JUMP24: .text+0x23f94] 
    /*000241e8*/ STRDEQ      R1, [R0], -IP 
FUNC_END VPSS_DRV_CheckRgnAttr


FUNC_BEGIN VPSS_DRV_CheckMosaicAttr
    /*000241ec*/ LDR         R3, [R0, #8] 
    /*000241f0*/ CMP         R3, #0 
    /*000241f4*/ BNE         VPSS_DRV_CheckMosaicAttr_x24200
    /*000241f8*/ MOV         R0, #1 
    /*000241fc*/ BX          LR 
    VPSS_DRV_CheckMosaicAttr_x24200:
    /*00024200*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00024204*/ SUB         SP, SP, #12 
    /*00024208*/ MOV         R1, #7 
    /*0002420c*/ MOVW        R2, #0                      @ .LC324 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x97cc] 
    /*00024210*/ STR         R3, [SP, #4] 
    /*00024214*/ MOVT        R2, #0                      @ .LC324 [R_ARM_MOVT_ABS: .rodata.str1.4+0x97cc] 
    /*00024218*/ MOVW        R3, #9303                   @ 0x2457 
    /*0002421c*/ MOV         R0, #3 
    /*00024220*/ STR         R3, [SP] 
    /*00024224*/ LDR         R3, [PC, #12]               @ 0x0000000000024238 
    /*00024228*/ BL          0x0000000000024228          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002422c*/ MOV         R0, #0 
    /*00024230*/ ADD         SP, SP, #12 
    /*00024234*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00024238*/ STRDEQ      R1, [R0], -IP 
FUNC_END VPSS_DRV_CheckMosaicAttr


FUNC_BEGIN VpssDrvTransHalImageToVideo
    /*0002423c*/ PUSH        {R4, R5, LR} 
    /*00024240*/ MOV         R3, R1 
    /*00024244*/ LDR         LR, [R0, #292]              @ 0x124 
    /*00024248*/ MOV         IP, R0 
    /*0002424c*/ ADD         R1, R0, #312                @ 0x138 
    /*00024250*/ MOV         R2, #64                     @ 0x40 
    /*00024254*/ ADD         R0, R3, #264                @ 0x108 
    /*00024258*/ STR         LR, [R3, #328]              @ 0x148 
    /*0002425c*/ LDR         LR, [IP, #88]               @ 0x58 
    /*00024260*/ STR         LR, [R3, #4] 
    /*00024264*/ LDR         LR, [IP, #84]               @ 0x54 
    /*00024268*/ STR         LR, [R3] 
    /*0002426c*/ LDR         LR, [IP, #288]              @ 0x120 
    /*00024270*/ STR         LR, [R3, #8] 
    /*00024274*/ LDR         LR, [IP, #124]              @ 0x7c 
    /*00024278*/ STR         LR, [R3, #20] 
    /*0002427c*/ LDR         LR, [IP, #120]              @ 0x78 
    /*00024280*/ STR         LR, [R3, #16] 
    /*00024284*/ LDR         LR, [IP, #284]              @ 0x11c 
    /*00024288*/ STR         LR, [R3, #12] 
    /*0002428c*/ LDR         LR, [IP, #112]              @ 0x70 
    /*00024290*/ STR         LR, [R3, #24] 
    /*00024294*/ LDRD        R4, [IP, #176]              @ 0xb0 
    /*00024298*/ STRD        R4, [R3, #96]               @ 0x60 
    /*0002429c*/ LDRD        R4, [IP, #184]              @ 0xb8 
    /*000242a0*/ STRD        R4, [R3, #104]              @ 0x68 
    /*000242a4*/ LDRD        R4, [IP, #136]              @ 0x88 
    /*000242a8*/ STRD        R4, [R3, #72]               @ 0x48 
    /*000242ac*/ LDRD        R4, [IP, #144]              @ 0x90 
    /*000242b0*/ STRD        R4, [R3, #80]               @ 0x50 
    /*000242b4*/ LDR         LR, [IP, #160]              @ 0xa0 
    /*000242b8*/ STR         LR, [R3, #32] 
    /*000242bc*/ LDR         LR, [IP, #164]              @ 0xa4 
    /*000242c0*/ STR         LR, [R3, #36]               @ 0x24 
    /*000242c4*/ LDR         LR, [IP, #168]              @ 0xa8 
    /*000242c8*/ STR         LR, [R3, #40]               @ 0x28 
    /*000242cc*/ LDRD        R4, [IP] 
    /*000242d0*/ STRD        R4, [R3, #120]              @ 0x78 
    /*000242d4*/ LDRD        R4, [IP, #8] 
    /*000242d8*/ STRD        R4, [R3, #128]              @ 0x80 
    /*000242dc*/ LDRD        R4, [IP, #16] 
    /*000242e0*/ STRD        R4, [R3, #136]              @ 0x88 
    /*000242e4*/ LDRD        R4, [IP, #200]              @ 0xc8 
    /*000242e8*/ STRD        R4, [R3, #168]              @ 0xa8 
    /*000242ec*/ LDRD        R4, [IP, #208]              @ 0xd0 
    /*000242f0*/ STRD        R4, [R3, #176]              @ 0xb0 
    /*000242f4*/ LDRD        R4, [IP, #216]              @ 0xd8 
    /*000242f8*/ STRD        R4, [R3, #184]              @ 0xb8 
    /*000242fc*/ LDR         LR, [IP, #64]               @ 0x40 
    /*00024300*/ STR         LR, [R3, #44]               @ 0x2c 
    /*00024304*/ LDR         LR, [IP, #68]               @ 0x44 
    /*00024308*/ STR         LR, [R3, #48]               @ 0x30 
    /*0002430c*/ LDR         LR, [IP, #72]               @ 0x48 
    /*00024310*/ STR         LR, [R3, #52]               @ 0x34 
    /*00024314*/ LDR         LR, [IP, #224]              @ 0xe0 
    /*00024318*/ STR         LR, [R3, #56]               @ 0x38 
    /*0002431c*/ LDR         LR, [IP, #228]              @ 0xe4 
    /*00024320*/ STR         LR, [R3, #60]               @ 0x3c 
    /*00024324*/ LDR         LR, [IP, #232]              @ 0xe8 
    /*00024328*/ STR         LR, [R3, #64]               @ 0x40 
    /*0002432c*/ LDRD        R4, [IP, #40]               @ 0x28 
    /*00024330*/ STRD        R4, [R3, #144]              @ 0x90 
    /*00024334*/ LDRD        R4, [IP, #48]               @ 0x30 
    /*00024338*/ STRD        R4, [R3, #152]              @ 0x98 
    /*0002433c*/ LDRD        R4, [IP, #56]               @ 0x38 
    /*00024340*/ STRD        R4, [R3, #160]              @ 0xa0 
    /*00024344*/ LDR         IP, [IP, #116]              @ 0x74 
    /*00024348*/ STR         IP, [R3, #28] 
    /*0002434c*/ POP         {R4, R5, LR} 
    VpssDrvTransHalImageToVideo_x24350:
    /*00024350*/ B           VpssDrvTransHalImageToVideo_x24350@ osal_memcpy [R_ARM_JUMP24: +0x0] 
FUNC_END VpssDrvTransHalImageToVideo


FUNC_BEGIN VPSS_DRV_GetVideoFrameInfo
    /*00024354*/ MOV         IP, #376                    @ 0x178 
    /*00024358*/ MUL         R2, IP, R2 
    /*0002435c*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00024360*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00024364*/ MOV         LR, #752                    @ 0x2f0 
    /*00024368*/ ADD         R2, R2, #19200              @ 0x4b00 
    /*0002436c*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00024370*/ MLA         R2, LR, R1, R2 
    /*00024374*/ LDR         R0, [IP, R0, LSL #2] 
    /*00024378*/ MOV         R1, R3 
    /*0002437c*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    /*00024380*/ ADD         R0, R0, R2 
    VPSS_DRV_GetVideoFrameInfo_x24384:
    /*00024384*/ B           VPSS_DRV_GetVideoFrameInfo_x24384@ VpssDrvTransHalImageToVideo [R_ARM_JUMP24: .text+0x2423c] 
FUNC_END VPSS_DRV_GetVideoFrameInfo


FUNC_BEGIN VPSS_DRV_GetDCFInfo
    /*00024388*/ PUSH        {R4, R5, R6, LR} 
    /*0002438c*/ MOV         R6, R0 
    /*00024390*/ MOV         R0, #1 
    /*00024394*/ MOV         R5, R1 
    /*00024398*/ BL          0x0000000000024398          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002439c*/ LDR         R3, [R0, #104]              @ 0x68 
    /*000243a0*/ MOV         R0, #1 
    /*000243a4*/ BLX         R3 
    /*000243a8*/ CMP         R0, #0 
    /*000243ac*/ BEQ         VPSS_DRV_GetDCFInfo_x24430
    /*000243b0*/ LDR         R4, [R5, #304]              @ 0x130 
    /*000243b4*/ CMP         R4, #0 
    /*000243b8*/ BEQ         VPSS_DRV_GetDCFInfo_x24430
    /*000243bc*/ MOV         R0, #2 
    /*000243c0*/ BL          0x00000000000243C0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000243c4*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*000243c8*/ CMP         R3, #0 
    /*000243cc*/ BEQ         VPSS_DRV_GetDCFInfo_x243e4
    /*000243d0*/ MOV         R0, #2 
    /*000243d4*/ BL          0x00000000000243D4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000243d8*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*000243dc*/ MOV         R0, R4 
    /*000243e0*/ BLX         R3 
    VPSS_DRV_GetDCFInfo_x243e4:
    /*000243e4*/ LDR         R3, [R5, #256]              @ 0x100 
    /*000243e8*/ MOV         R2, #0 
    /*000243ec*/ MOV         R0, #28 
    /*000243f0*/ STR         R2, [R4, #24] 
    /*000243f4*/ STR         R3, [R4, #20] 
    /*000243f8*/ BL          0x00000000000243F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000243fc*/ CMP         R0, #0 
    /*00024400*/ BEQ         VPSS_DRV_GetDCFInfo_x24430
    /*00024404*/ MOV         R0, #28 
    /*00024408*/ BL          0x0000000000024408          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002440c*/ LDR         R3, [R0, #12] 
    /*00024410*/ CMP         R3, #0 
    /*00024414*/ BEQ         VPSS_DRV_GetDCFInfo_x24430
    /*00024418*/ MOV         R0, #28 
    /*0002441c*/ BL          0x000000000002441C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024420*/ ADD         R1, R4, #28 
    /*00024424*/ LDR         R3, [R0, #12] 
    /*00024428*/ MOV         R0, R6 
    /*0002442c*/ BLX         R3 
    VPSS_DRV_GetDCFInfo_x24430:
    /*00024430*/ MOV         R0, #0 
    /*00024434*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_DRV_GetDCFInfo


FUNC_BEGIN VpssDrvReleaseLowDelayVB
    /*00024438*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0002443c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00024440*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00024444*/ ADD         R3, R1, #5312               @ 0x14c0 
    /*00024448*/ LDR         R6, [R2, R0, LSL #2] 
    /*0002444c*/ ADD         R3, R3, #58                 @ 0x3a 
    /*00024450*/ SUB         SP, SP, #12 
    /*00024454*/ LDR         R4, [R6, R3, LSL #2] 
    /*00024458*/ CLZ         R4, R4 
    /*0002445c*/ LSR         R4, R4, #5 
    /*00024460*/ ADD         R5, R4, R1, LSL #1 
    /*00024464*/ ADD         R5, R6, R5, LSL #2 
    /*00024468*/ ADD         R5, R5, #20480              @ 0x5000 
    /*0002446c*/ LDR         R0, [R5, #976]              @ 0x3d0 
    /*00024470*/ CMP         R0, #1 
    /*00024474*/ BEQ         VpssDrvReleaseLowDelayVB_x24484
    /*00024478*/ MOV         R0, #0 
    /*0002447c*/ ADD         SP, SP, #12 
    /*00024480*/ POP         {R4, R5, R6, R7, PC} 
    VpssDrvReleaseLowDelayVB_x24484:
    /*00024484*/ MOV         R7, R1 
    /*00024488*/ BL          0x0000000000024488          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002448c*/ MOV         R1, #752                    @ 0x2f0 
    /*00024490*/ MOV         R3, #376                    @ 0x178 
    /*00024494*/ MUL         R1, R1, R7 
    /*00024498*/ MOVW        R2, #19492                  @ 0x4c24 
    /*0002449c*/ MLA         R4, R3, R4, R1 
    /*000244a0*/ MOV         R1, #10 
    /*000244a4*/ ADD         R4, R6, R4 
    /*000244a8*/ ADD         R3, R4, #19200              @ 0x4b00 
    /*000244ac*/ LDR         IP, [R4, R2] 
    /*000244b0*/ LDRD        R2, [R3] 
    /*000244b4*/ STR         R1, [SP] 
    /*000244b8*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000244bc*/ MOV         R0, IP 
    /*000244c0*/ BLX         R1 
    /*000244c4*/ MOV         R3, #0 
    /*000244c8*/ MOV         R0, #0 
    /*000244cc*/ STR         R3, [R5, #976]              @ 0x3d0 
    /*000244d0*/ ADD         SP, SP, #12 
    /*000244d4*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VpssDrvReleaseLowDelayVB


FUNC_BEGIN VPSS_DRV_OnlinePrepStaticGrpHwInfo
    /*000244d8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000244dc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000244e0*/ LDR         R2, [R3, R0, LSL #2] 
    /*000244e4*/ ADD         R3, R2, #16384              @ 0x4000 
    /*000244e8*/ ADD         R1, R2, #12288              @ 0x3000 
    /*000244ec*/ LDR         R0, [R2, #12] 
    /*000244f0*/ STR         R0, [R3, #2724]             @ 0xaa4 
    /*000244f4*/ LDR         R0, [R1, #3176]             @ 0xc68 
    /*000244f8*/ STR         R0, [R3, #2524]             @ 0x9dc 
    /*000244fc*/ LDR         R1, [R1, #3180]             @ 0xc6c 
    /*00024500*/ STR         R1, [R3, #2528]             @ 0x9e0 
    /*00024504*/ LDR         R2, [R2, #16] 
    /*00024508*/ STR         R2, [R3, #2552]             @ 0x9f8 
    /*0002450c*/ BX          LR 
FUNC_END VPSS_DRV_OnlinePrepStaticGrpHwInfo


FUNC_BEGIN VPSS_DRV_OnLinePrepGrpHwInfo
    /*00024510*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00024514*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00024518*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0002451c*/ MOV         R5, R0 
    /*00024520*/ LDR         R6, [R3, R0, LSL #2] 
    /*00024524*/ MOV         R9, R1 
    /*00024528*/ ADD         R8, R6, #12288              @ 0x3000 
    /*0002452c*/ ADD         R4, R6, #16384              @ 0x4000 
    /*00024530*/ LDR         R2, [R8, #3176]             @ 0xc68 
    /*00024534*/ LDR         R3, [R4, #616]              @ 0x268 
    /*00024538*/ CMP         R2, R3 
    /*0002453c*/ BEQ         VPSS_DRV_OnLinePrepGrpHwInfo_x245d0
    VPSS_DRV_OnLinePrepGrpHwInfo_x24540:
    /*00024540*/ ADD         R1, R6, #15424              @ 0x3c40 
    /*00024544*/ ADD         R0, R6, #16896              @ 0x4200 
    /*00024548*/ MOV         R2, #24 
    /*0002454c*/ ADD         R1, R1, #32 
    /*00024550*/ ADD         R0, R0, #96                 @ 0x60 
    /*00024554*/ MOV         R7, #1 
    /*00024558*/ STR         R7, [R6, #980]              @ 0x3d4 
    /*0002455c*/ BL          0x000000000002455C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00024560*/ LDR         R2, [R4, #2564]             @ 0xa04 
    /*00024564*/ LDR         R3, [R4, #616]              @ 0x268 
    /*00024568*/ STR         R2, [R4, #636]              @ 0x27c 
    /*0002456c*/ LDR         R2, [R8, #3176]             @ 0xc68 
    /*00024570*/ CMP         R2, R3 
    /*00024574*/ BEQ         VPSS_DRV_OnLinePrepGrpHwInfo_x245f8
    VPSS_DRV_OnLinePrepGrpHwInfo_x24578:
    /*00024578*/ ADD         R2, R6, #18176              @ 0x4700 
    /*0002457c*/ MOV         R3, #1 
    /*00024580*/ MOV         R0, R5 
    /*00024584*/ STR         R3, [R4, #1872]             @ 0x750 
    /*00024588*/ ADD         R2, R2, #68                 @ 0x44 
    /*0002458c*/ MOV         R1, #0 
    /*00024590*/ BL          0x0000000000024590          @ VPSS_DRV_GetCover [R_ARM_CALL: .text+0x18714] 
    /*00024594*/ MOV         R2, R7 
    /*00024598*/ MOV         R1, R9 
    /*0002459c*/ MOV         R0, R5 
    /*000245a0*/ BL          0x00000000000245A0          @ VPSS_DRV_PrepareRegionInfo [R_ARM_CALL: .text+0x1cdd8] 
    /*000245a4*/ LDR         R2, [R4, #1872]             @ 0x750 
    /*000245a8*/ MOV         R1, #0 
    /*000245ac*/ MOV         R0, R5 
    /*000245b0*/ BL          0x00000000000245B0          @ VPSS_DRV_PutCover [R_ARM_CALL: .text+0x18910] 
    /*000245b4*/ MOV         R0, R5 
    /*000245b8*/ BL          0x00000000000245B8          @ VPSS_DRV_GetRgnGrpMosaic [R_ARM_CALL: .text+0x1d7c4] 
    /*000245bc*/ MOV         R0, R5 
    /*000245c0*/ BL          0x00000000000245C0          @ VPSS_DRV_Prepare3dnrInfo [R_ARM_CALL: .text+0x1d58c] 
    /*000245c4*/ STR         R5, [R4, #2328]             @ 0x918 
    /*000245c8*/ MOV         R0, #0 
    /*000245cc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_DRV_OnLinePrepGrpHwInfo_x245d0:
    /*000245d0*/ LDR         R2, [R8, #3180]             @ 0xc6c 
    /*000245d4*/ LDR         R3, [R4, #620]              @ 0x26c 
    /*000245d8*/ CMP         R2, R3 
    /*000245dc*/ BNE         VPSS_DRV_OnLinePrepGrpHwInfo_x24540
    /*000245e0*/ LDR         R2, [R4, #2564]             @ 0xa04 
    /*000245e4*/ LDR         R3, [R4, #636]              @ 0x27c 
    /*000245e8*/ CMP         R2, R3 
    /*000245ec*/ BNE         VPSS_DRV_OnLinePrepGrpHwInfo_x24540
    VPSS_DRV_OnLinePrepGrpHwInfo_x245f0:
    /*000245f0*/ MOV         R7, #0 
    /*000245f4*/ B           VPSS_DRV_OnLinePrepGrpHwInfo_x24578
    VPSS_DRV_OnLinePrepGrpHwInfo_x245f8:
    /*000245f8*/ LDR         R2, [R8, #3180]             @ 0xc6c 
    /*000245fc*/ LDR         R3, [R4, #620]              @ 0x26c 
    /*00024600*/ CMP         R2, R3 
    /*00024604*/ BNE         VPSS_DRV_OnLinePrepGrpHwInfo_x24578
    /*00024608*/ B           VPSS_DRV_OnLinePrepGrpHwInfo_x245f0
FUNC_END VPSS_DRV_OnLinePrepGrpHwInfo


FUNC_BEGIN VPSS_DRV_OnLinePrepChnHwInfo
    /*0002460c*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00024610*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00024614*/ PUSH        {R4, R5, R6, LR} 
    /*00024618*/ MOV         LR, #72                     @ 0x48 
    /*0002461c*/ LDR         IP, [IP, R0, LSL #2] 
    /*00024620*/ MOV         R5, #24 
    /*00024624*/ MLA         R4, R2, LR, LR 
    /*00024628*/ MOVW        R6, #18752                  @ 0x4940 
    /*0002462c*/ MLA         R3, R5, R2, IP 
    /*00024630*/ MOVW        R5, #18760                  @ 0x4948 
    /*00024634*/ MLA         LR, LR, R2, IP 
    /*00024638*/ ADD         IP, IP, R4 
    /*0002463c*/ MOVW        R4, #18768                  @ 0x4950 
    /*00024640*/ LDR         IP, [IP, #8] 
    /*00024644*/ STR         IP, [R3, R6] 
    /*00024648*/ LDR         IP, [LR, #84]               @ 0x54 
    /*0002464c*/ STR         IP, [R3, R5] 
    /*00024650*/ LDR         IP, [LR, #60]               @ 0x3c 
    /*00024654*/ SUB         IP, IP, #28 
    /*00024658*/ CMP         IP, #1 
    /*0002465c*/ MOVHI       IP, #0 
    /*00024660*/ MOVLS       IP, #1 
    /*00024664*/ STR         IP, [R3, R4] 
    /*00024668*/ POP         {R4, R5, R6, LR} 
    VPSS_DRV_OnLinePrepChnHwInfo_x2466c:
    /*0002466c*/ B           VPSS_DRV_OnLinePrepChnHwInfo_x2466c@ VPSS_DRV_UpdateChnScaleEn [R_ARM_JUMP24: .text+0x20228] 
FUNC_END VPSS_DRV_OnLinePrepChnHwInfo


FUNC_BEGIN VpssDrvOnLineRegup
    /*00024670*/ MOVW        R3, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*00024674*/ MOVT        R3, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00024678*/ PUSH        {R4, LR} 
    /*0002467c*/ MOV         R1, #1 
    /*00024680*/ LDR         R0, [R3] 
    /*00024684*/ BL          0x0000000000024684          @ VPSS_HAL_SetRegup [R_ARM_CALL: .text+0x266ac] 
    /*00024688*/ MOV         R0, #0 
    /*0002468c*/ POP         {R4, PC} 
FUNC_END VpssDrvOnLineRegup


FUNC_BEGIN VpssDrvUpdateGrpInAttr
    /*00024690*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00024694*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00024698*/ PUSH        {R4, R5, R6, LR} 
    /*0002469c*/ MOV         R5, R1 
    /*000246a0*/ LDR         R4, [R3, R0, LSL #2] 
    /*000246a4*/ MOV         R0, R1 
    /*000246a8*/ ADD         R4, R4, #16384              @ 0x4000 
    /*000246ac*/ LDR         R2, [R4, #2528]             @ 0x9e0 
    /*000246b0*/ LDR         R1, [R4, #2524]             @ 0x9dc 
    /*000246b4*/ BL          0x00000000000246B4          @ VPSS_HAL_SetSrcImgSize [R_ARM_CALL: .text+0x2697c] 
    /*000246b8*/ LDR         R1, [R4, #2552]             @ 0x9f8 
    /*000246bc*/ MOV         R0, R5 
    /*000246c0*/ ADDS        R1, R1, #0 
    /*000246c4*/ MOVNE       R1, #1 
    /*000246c8*/ BL          0x00000000000246C8          @ VPSS_HAL_SetSrcImgBitwidth [R_ARM_CALL: .text+0x269c0] 
    /*000246cc*/ LDR         R1, [R4, #2724]             @ 0xaa4 
    /*000246d0*/ MOV         R0, R5 
    /*000246d4*/ SUB         R1, R1, #25 
    /*000246d8*/ CLZ         R1, R1 
    /*000246dc*/ LSR         R1, R1, #5 
    /*000246e0*/ BL          0x00000000000246E0          @ VPSS_HAL_SetSrcImgType [R_ARM_CALL: .text+0x269d0] 
    /*000246e4*/ LDR         R3, [R4, #2724]             @ 0xaa4 
    /*000246e8*/ MOV         R0, R5 
    /*000246ec*/ CMP         R3, #39                     @ 0x27 
    /*000246f0*/ BEQ         VpssDrvUpdateGrpInAttr_x24700
    /*000246f4*/ MOV         R1, #0 
    /*000246f8*/ POP         {R4, R5, R6, LR} 
    VpssDrvUpdateGrpInAttr_x246fc:
    /*000246fc*/ B           VpssDrvUpdateGrpInAttr_x246fc@ VPSS_HAL_SetImgWorkType [R_ARM_JUMP24: .text+0x269e0] 
    VpssDrvUpdateGrpInAttr_x24700:
    /*00024700*/ MOV         R1, #1 
    /*00024704*/ POP         {R4, R5, R6, LR} 
    VpssDrvUpdateGrpInAttr_x24708:
    /*00024708*/ B           VpssDrvUpdateGrpInAttr_x24708@ VPSS_HAL_SetImgWorkType [R_ARM_JUMP24: .text+0x269e0] 
FUNC_END VpssDrvUpdateGrpInAttr


FUNC_BEGIN VpssDrvOnlineUpdateGrpAttr
    /*0002470c*/ MOVW        R3, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*00024710*/ MOVT        R3, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00024714*/ PUSH        {R4, R5, R6, LR} 
    /*00024718*/ SUB         SP, SP, #8 
    /*0002471c*/ LDR         R5, [R3] 
    /*00024720*/ MOV         R6, R0 
    /*00024724*/ MOV         R4, #0 
    /*00024728*/ MOV         R1, R5 
    /*0002472c*/ BL          0x000000000002472C          @ VpssDrvUpdateGrpInAttr [R_ARM_CALL: .text+0x24690] 
    /*00024730*/ MOV         R2, R5 
    /*00024734*/ MOV         R3, R4 
    /*00024738*/ MOV         R1, R4 
    /*0002473c*/ MOV         R0, R6 
    /*00024740*/ STR         R4, [SP] 
    /*00024744*/ BL          0x0000000000024744          @ VPSS_DRV_Update3dnrAttr [R_ARM_CALL: .text+0x224dc] 
    /*00024748*/ MOV         R1, R5 
    /*0002474c*/ MOV         R0, R6 
    /*00024750*/ BL          0x0000000000024750          @ VpssDrvUpdateSHBD [R_ARM_CALL: .text+0x22778] 
    /*00024754*/ MOV         R1, R5 
    /*00024758*/ MOV         R0, R6 
    /*0002475c*/ BL          0x000000000002475C          @ VpssDrvUpdateMosaic [R_ARM_CALL: .text+0x2263c] 
    /*00024760*/ MOV         R0, R4 
    /*00024764*/ ADD         SP, SP, #8 
    /*00024768*/ POP         {R4, R5, R6, PC} 
FUNC_END VpssDrvOnlineUpdateGrpAttr


FUNC_BEGIN VpssDrvSetChnEn
    /*0002476c*/ MOVW        R3, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*00024770*/ MOVT        R3, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00024774*/ PUSH        {R4, LR} 
    /*00024778*/ LDR         R0, [R3] 
    /*0002477c*/ BL          0x000000000002477C          @ VPSS_HAL_SetChnEn [R_ARM_CALL: .text+0x26538] 
    /*00024780*/ MOV         R0, #0 
    /*00024784*/ POP         {R4, PC} 
FUNC_END VpssDrvSetChnEn


FUNC_BEGIN VpssDrvOnlineGetChnEn
    /*00024788*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0002478c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00024790*/ MOV         R3, #24 
    /*00024794*/ MOVW        IP, #18748                  @ 0x493c 
    /*00024798*/ LDR         R2, [R2, R0, LSL #2] 
    /*0002479c*/ MLA         R1, R3, R1, R2 
    /*000247a0*/ LDR         R0, [R1, IP] 
    /*000247a4*/ BX          LR 
FUNC_END VpssDrvOnlineGetChnEn


FUNC_BEGIN VpssDrvOnLineIsWaitStop
    /*000247a8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000247ac*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000247b0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000247b4*/ LDR         R7, [R3, R0, LSL #2] 
    /*000247b8*/ ADD         R5, R7, R1, LSL #2 
    /*000247bc*/ ADD         R5, R5, #16384              @ 0x4000 
    /*000247c0*/ LDR         R4, [R5, #200]              @ 0xc8 
    /*000247c4*/ CMP         R4, #2 
    /*000247c8*/ BEQ         VpssDrvOnLineIsWaitStop_x247e0
    /*000247cc*/ CMP         R4, #1 
    /*000247d0*/ BEQ         VpssDrvOnLineIsWaitStop_x247f0
    /*000247d4*/ CLZ         R0, R4 
    /*000247d8*/ LSR         R0, R0, #5 
    /*000247dc*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssDrvOnLineIsWaitStop_x247e0:
    /*000247e0*/ MOV         R3, #0 
    /*000247e4*/ MOV         R0, #1 
    /*000247e8*/ STR         R3, [R5, #200]              @ 0xc8 
    /*000247ec*/ POP         {R4, R5, R6, R7, R8, PC} 
    VpssDrvOnLineIsWaitStop_x247f0:
    /*000247f0*/ MOVW        R3, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*000247f4*/ MOVT        R3, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*000247f8*/ MOV         R2, #0 
    /*000247fc*/ MOV         R6, R1 
    /*00024800*/ LDR         R0, [R3] 
    /*00024804*/ BL          0x0000000000024804          @ VPSS_HAL_SetChnEn [R_ARM_CALL: .text+0x26538] 
    /*00024808*/ MOV         R2, #24 
    /*0002480c*/ MLA         R2, R2, R6, R7 
    /*00024810*/ MOVW        R1, #18748                  @ 0x493c 
    /*00024814*/ MOV         IP, #0 
    /*00024818*/ MOV         R3, #2 
    /*0002481c*/ MOV         R0, R4 
    /*00024820*/ STR         IP, [R2, R1] 
    /*00024824*/ STR         R3, [R5, #200]              @ 0xc8 
    /*00024828*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VpssDrvOnLineIsWaitStop


FUNC_BEGIN VPSS_DRV_IsChnOneBuffer
    /*0002482c*/ MOVW        R3, #0                      @ bOneBufferforLowDelay [R_ARM_MOVW_ABS_NC: .bss+0x1174] 
    /*00024830*/ MOVT        R3, #0                      @ bOneBufferforLowDelay [R_ARM_MOVT_ABS: .bss+0x1174] 
    /*00024834*/ LDR         R3, [R3] 
    /*00024838*/ CMP         R3, #1 
    /*0002483c*/ BEQ         VPSS_DRV_IsChnOneBuffer_x24848
    VPSS_DRV_IsChnOneBuffer_x24840:
    /*00024840*/ MOV         R0, #0 
    /*00024844*/ BX          LR 
    VPSS_DRV_IsChnOneBuffer_x24848:
    /*00024848*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0002484c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00024850*/ LDR         R3, [R3, R0, LSL #2] 
    /*00024854*/ ADD         R3, R3, #12288              @ 0x3000 
    /*00024858*/ LDR         R2, [R3, #3484]             @ 0xd9c 
    /*0002485c*/ CMP         R2, R1 
    /*00024860*/ BNE         VPSS_DRV_IsChnOneBuffer_x24840
    /*00024864*/ LDR         R0, [R3, #3488]             @ 0xda0 
    /*00024868*/ SUB         R0, R0, #1 
    /*0002486c*/ CLZ         R0, R0 
    /*00024870*/ LSR         R0, R0, #5 
    /*00024874*/ BX          LR 
FUNC_END VPSS_DRV_IsChnOneBuffer


FUNC_BEGIN VpssDrvOnLinePremFrame
    /*00024878*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002487c*/ SUB         SP, SP, #356                @ 0x164 
    /*00024880*/ MOV         R7, R0 
    /*00024884*/ MOV         R6, R1 
    /*00024888*/ MOV         R2, #328                    @ 0x148 
    /*0002488c*/ MOV         R1, #0 
    /*00024890*/ ADD         R0, SP, #24 
    /*00024894*/ BL          0x0000000000024894          @ memset [R_ARM_CALL: +0x0] 
    /*00024898*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0002489c*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000248a0*/ MOV         R2, #72                     @ 0x48 
    /*000248a4*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000248a8*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000248ac*/ LDR         R5, [R1, R7, LSL #2] 
    /*000248b0*/ LDR         R0, [R3, R7, LSL #2] 
    /*000248b4*/ MLA         R2, R2, R6, R5 
    /*000248b8*/ LDR         R1, [R2, #72]               @ 0x48 
    /*000248bc*/ LDR         R3, [R2, #76]               @ 0x4c 
    /*000248c0*/ CMN         R1, #1 
    /*000248c4*/ CMNNE       R3, #1 
    /*000248c8*/ MOVEQ       IP, #1 
    /*000248cc*/ MOVNE       IP, #0 
    /*000248d0*/ BEQ         VpssDrvOnLinePremFrame_x24904
    /*000248d4*/ CMP         R3, R1 
    /*000248d8*/ BEQ         VpssDrvOnLinePremFrame_x24904
    /*000248dc*/ LSL         LR, R6, #2 
    /*000248e0*/ ADD         R2, R5, LR 
    /*000248e4*/ ADD         R4, R2, #12288              @ 0x3000 
    /*000248e8*/ LDR         R8, [R4, #3056]             @ 0xbf0 
    /*000248ec*/ ADD         R3, R3, R8 
    /*000248f0*/ STR         R3, [R4, #3056]             @ 0xbf0 
    /*000248f4*/ CMP         R1, R3 
    /*000248f8*/ SUBLE       R3, R3, R1 
    /*000248fc*/ STRLE       R3, [R4, #3056]             @ 0xbf0 
    /*00024900*/ BGT         VpssDrvOnLinePremFrame_x249d4
    VpssDrvOnLinePremFrame_x24904:
    /*00024904*/ ADD         R3, R6, #5312               @ 0x14c0 
    /*00024908*/ LSL         R4, R6, #1 
    /*0002490c*/ ADD         R3, R3, #58                 @ 0x3a 
    /*00024910*/ LDR         R2, [R5, R3, LSL #2] 
    /*00024914*/ ADD         R3, R4, R2 
    /*00024918*/ ADD         R3, R3, #5312               @ 0x14c0 
    /*0002491c*/ ADD         R3, R3, #52                 @ 0x34 
    /*00024920*/ LDR         R3, [R5, R3, LSL #2] 
    /*00024924*/ CMP         R3, #1 
    /*00024928*/ LSLEQ       LR, R6, #2 
    /*0002492c*/ BNE         VpssDrvOnLinePremFrame_x24970
    VpssDrvOnLinePremFrame_x24930:
    /*00024930*/ ADD         LR, R5, LR 
    /*00024934*/ CLZ         R1, R2 
    /*00024938*/ ADD         LR, LR, #20480              @ 0x5000 
    /*0002493c*/ ADD         IP, R0, #28672              @ 0x7000 
    /*00024940*/ LSR         R1, R1, #5 
    /*00024944*/ STR         R1, [LR, #1000]             @ 0x3e8 
    /*00024948*/ LDR         IP, [IP, #3684]             @ 0xe64 
    /*0002494c*/ CMP         IP, #1 
    /*00024950*/ BEQ         VpssDrvOnLinePremFrame_x24b00
    /*00024954*/ CMP         IP, #2 
    /*00024958*/ BEQ         VpssDrvOnLinePremFrame_x24af4
    VpssDrvOnLinePremFrame_x2495c:
    /*0002495c*/ ADDS        R2, R2, #0 
    /*00024960*/ MOVNE       R2, #1 
    /*00024964*/ STR         R2, [LR, #1012]             @ 0x3f4 
    VpssDrvOnLinePremFrame_x24968:
    /*00024968*/ CMP         R3, #1 
    /*0002496c*/ BNE         VpssDrvOnLinePremFrame_x24994
    VpssDrvOnLinePremFrame_x24970:
    /*00024970*/ MOV         R3, #24 
    /*00024974*/ MOVW        R2, #18748                  @ 0x493c 
    /*00024978*/ MLA         R3, R3, R6, R5 
    /*0002497c*/ LDR         R3, [R3, R2] 
    /*00024980*/ CMP         R3, #0 
    /*00024984*/ BNE         VpssDrvOnLinePremFrame_x24a04
    VpssDrvOnLinePremFrame_x24988:
    /*00024988*/ ADD         R3, R6, #5312               @ 0x14c0 
    /*0002498c*/ ADD         R3, R3, #58                 @ 0x3a 
    /*00024990*/ LDR         R1, [R5, R3, LSL #2] 
    VpssDrvOnLinePremFrame_x24994:
    /*00024994*/ MOV         R2, #752                    @ 0x2f0 
    /*00024998*/ MOV         R3, #376                    @ 0x178 
    /*0002499c*/ MUL         R6, R2, R6 
    /*000249a0*/ ADD         R4, R4, R1 
    /*000249a4*/ MLA         R6, R3, R1, R6 
    /*000249a8*/ ADD         R4, R4, #5312               @ 0x14c0 
    /*000249ac*/ ADD         R4, R4, #52                 @ 0x34 
    /*000249b0*/ MOVW        R3, #19496                  @ 0x4c28 
    /*000249b4*/ MOV         R1, #0 
    /*000249b8*/ MOV         R2, #1 
    /*000249bc*/ ADD         R6, R5, R6 
    /*000249c0*/ STR         R1, [R5, R4, LSL #2] 
    /*000249c4*/ STR         R2, [R6, R3] 
    VpssDrvOnLinePremFrame_x249c8:
    /*000249c8*/ MOV         R0, #0 
    /*000249cc*/ ADD         SP, SP, #356                @ 0x164 
    /*000249d0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssDrvOnLinePremFrame_x249d4:
    /*000249d4*/ ADD         R2, R2, #20480              @ 0x5000 
    /*000249d8*/ LSL         R4, R6, #1 
    /*000249dc*/ LDR         R1, [R2, #1000]             @ 0x3e8 
    /*000249e0*/ ADD         R3, R4, R1 
    /*000249e4*/ ADD         R3, R3, #5312               @ 0x14c0 
    /*000249e8*/ ADD         R3, R3, #52                 @ 0x34 
    /*000249ec*/ LDR         R3, [R5, R3, LSL #2] 
    /*000249f0*/ CMP         R3, #1 
    /*000249f4*/ BNE         VpssDrvOnLinePremFrame_x24994
    /*000249f8*/ MOV         R2, R1 
    /*000249fc*/ MOV         R3, IP 
    /*00024a00*/ B           VpssDrvOnLinePremFrame_x24930
    VpssDrvOnLinePremFrame_x24a04:
    /*00024a04*/ MOV         R1, R6 
    /*00024a08*/ MOV         R0, R7 
    /*00024a0c*/ BL          0x0000000000024A0C          @ VPSS_DRV_ChnCalcCrop [R_ARM_CALL: .text+0x1f718] 
    /*00024a10*/ MOV         R3, #72                     @ 0x48 
    /*00024a14*/ MLA         R3, R3, R6, R5 
    /*00024a18*/ MOVW        R2, #0                      @ bOneBufferforLowDelay [R_ARM_MOVW_ABS_NC: .bss+0x1174] 
    /*00024a1c*/ MOVT        R2, #0                      @ bOneBufferforLowDelay [R_ARM_MOVT_ABS: .bss+0x1174] 
    /*00024a20*/ LDR         R1, [R2] 
    /*00024a24*/ LDR         R2, [R3, #48]               @ 0x30 
    /*00024a28*/ CMP         R1, #1 
    /*00024a2c*/ LDR         R3, [R3, #52]               @ 0x34 
    /*00024a30*/ STR         R2, [SP, #16] 
    /*00024a34*/ STR         R3, [SP, #20] 
    /*00024a38*/ BEQ         VpssDrvOnLinePremFrame_x24b08
    VpssDrvOnLinePremFrame_x24a3c:
    /*00024a3c*/ MOVW        R8, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x7550] 
    /*00024a40*/ MOVT        R8, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x7550] 
    /*00024a44*/ ADD         R2, SP, #20 
    /*00024a48*/ ADD         R3, SP, #16 
    /*00024a4c*/ STR         R2, [SP] 
    /*00024a50*/ SUB         R9, R8, #3520               @ 0xdc0 
    /*00024a54*/ MOV         R2, #0 
    /*00024a58*/ MOV         SL, #1 
    /*00024a5c*/ STR         R9, [SP, #4] 
    /*00024a60*/ MOV         R1, R6 
    /*00024a64*/ STR         SL, [SP, #8] 
    /*00024a68*/ MOV         R0, R7 
    /*00024a6c*/ BL          0x0000000000024A6C          @ VpssDrvGetFrmVbBlk [R_ARM_CALL: .text+0x22f68] 
    /*00024a70*/ SUBS        R2, R0, #0 
    /*00024a74*/ STRNE       R6, [SP, #4] 
    /*00024a78*/ MOVWNE      R3, #9789                   @ 0x263d 
    /*00024a7c*/ BNE         VpssDrvOnLinePremFrame_x24c28
    /*00024a80*/ LDR         R0, [R5, #12] 
    /*00024a84*/ ADD         R3, SP, #24 
    /*00024a88*/ LDR         IP, [R5, #16] 
    /*00024a8c*/ MOV         R1, R6 
    /*00024a90*/ STR         R0, [SP, #36]               @ 0x24 
    /*00024a94*/ MOV         R0, R7 
    /*00024a98*/ LDR         FP, [R5, #4] 
    /*00024a9c*/ LDR         LR, [R5, #8] 
    /*00024aa0*/ STR         R9, [SP] 
    /*00024aa4*/ STR         FP, [SP, #24] 
    /*00024aa8*/ STR         LR, [SP, #28] 
    /*00024aac*/ STR         IP, [SP, #48]               @ 0x30 
    /*00024ab0*/ BL          0x0000000000024AB0          @ VPSS_DRV_CheckVpssCapa [R_ARM_CALL: .text+0x1fcd0] 
    /*00024ab4*/ CMP         R0, #0 
    /*00024ab8*/ MOVEQ       R9, R6 
    /*00024abc*/ BEQ         VpssDrvOnLinePremFrame_x24b7c
    /*00024ac0*/ MOV         R0, SL 
    /*00024ac4*/ BL          0x0000000000024AC4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024ac8*/ LDR         IP, [R8, #-3192]            @ 0xfffff388 
    /*00024acc*/ LDRD        R2, [R9, #120]              @ 0x78 
    /*00024ad0*/ MOV         R1, #10 
    /*00024ad4*/ STR         R1, [SP] 
    /*00024ad8*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00024adc*/ MOV         R0, IP 
    /*00024ae0*/ BLX         R1 
    /*00024ae4*/ ADD         R3, R6, #5312               @ 0x14c0 
    /*00024ae8*/ ADD         R3, R3, #58                 @ 0x3a 
    /*00024aec*/ LDR         R1, [R5, R3, LSL #2] 
    /*00024af0*/ B           VpssDrvOnLinePremFrame_x24994
    VpssDrvOnLinePremFrame_x24af4:
    /*00024af4*/ LDR         R0, [R0, #2072]             @ 0x818 
    /*00024af8*/ CMP         R0, #1 
    /*00024afc*/ BNE         VpssDrvOnLinePremFrame_x2495c
    VpssDrvOnLinePremFrame_x24b00:
    /*00024b00*/ STR         R1, [LR, #1012]             @ 0x3f4 
    /*00024b04*/ B           VpssDrvOnLinePremFrame_x24968
    VpssDrvOnLinePremFrame_x24b08:
    /*00024b08*/ ADD         R3, R5, #12288              @ 0x3000 
    /*00024b0c*/ LDR         R9, [R3, #3484]             @ 0xd9c 
    /*00024b10*/ CMP         R9, R6 
    /*00024b14*/ BNE         VpssDrvOnLinePremFrame_x24a3c
    /*00024b18*/ LDR         SL, [R3, #3488]             @ 0xda0 
    /*00024b1c*/ CMP         SL, #1 
    /*00024b20*/ BNE         VpssDrvOnLinePremFrame_x24a3c
    /*00024b24*/ LDR         R3, [R3, #3904]             @ 0xf40 
    /*00024b28*/ CMN         R3, #1 
    /*00024b2c*/ BEQ         VpssDrvOnLinePremFrame_x24bec
    /*00024b30*/ MOVW        R8, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x7550] 
    /*00024b34*/ MOVT        R8, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x7550] 
    /*00024b38*/ SUB         FP, R8, #3520               @ 0xdc0 
    /*00024b3c*/ ADD         R1, R5, #15808              @ 0x3dc0 
    /*00024b40*/ ADD         R1, R1, #56                 @ 0x38 
    /*00024b44*/ MOV         R2, #336                    @ 0x150 
    /*00024b48*/ MOV         R0, FP 
    /*00024b4c*/ BL          0x0000000000024B4C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00024b50*/ MOV         R0, SL 
    /*00024b54*/ BL          0x0000000000024B54          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024b58*/ LDR         IP, [R8, #-3192]            @ 0xfffff388 
    /*00024b5c*/ LDRD        R2, [FP, #120]              @ 0x78 
    /*00024b60*/ MOV         R1, #10 
    /*00024b64*/ STR         R1, [SP] 
    /*00024b68*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00024b6c*/ MOV         R0, IP 
    /*00024b70*/ BLX         R1 
    /*00024b74*/ CMP         R0, #0 
    /*00024b78*/ BNE         VpssDrvOnLinePremFrame_x24c48
    VpssDrvOnLinePremFrame_x24b7c:
    /*00024b7c*/ ADD         FP, R5, R6, LSL #2 
    /*00024b80*/ MOV         SL, #752                    @ 0x2f0 
    /*00024b84*/ ADD         FP, FP, #20480              @ 0x5000 
    /*00024b88*/ MOV         R0, R7 
    /*00024b8c*/ MUL         R6, SL, R6 
    /*00024b90*/ LDR         R3, [FP, #1000]             @ 0x3e8 
    /*00024b94*/ MOV         R7, #376                    @ 0x178 
    /*00024b98*/ MOVW        IP, #19496                  @ 0x4c28 
    /*00024b9c*/ ADD         R4, R4, R3 
    /*00024ba0*/ MOV         R2, #1 
    /*00024ba4*/ MLA         R3, R7, R3, R6 
    /*00024ba8*/ ADD         R4, R4, #5312               @ 0x14c0 
    /*00024bac*/ ADD         R4, R4, #52                 @ 0x34 
    /*00024bb0*/ LDR         R1, [PC, #320]              @ 0x0000000000024cf8 
    /*00024bb4*/ ADD         R3, R5, R3 
    /*00024bb8*/ STR         R2, [R5, R4, LSL #2] 
    /*00024bbc*/ MOV         R2, #0 
    /*00024bc0*/ STR         R2, [R3, IP] 
    /*00024bc4*/ BL          0x0000000000024BC4          @ VPSS_DRV_GetDCFInfo [R_ARM_CALL: .text+0x24388] 
    /*00024bc8*/ LDR         R0, [FP, #1000]             @ 0x3e8 
    /*00024bcc*/ LDR         R1, [R8, #-3192]            @ 0xfffff388 
    /*00024bd0*/ LDR         R2, [PC, #288]              @ 0x0000000000024cf8 
    /*00024bd4*/ MUL         R0, R7, R0 
    /*00024bd8*/ ADD         R0, R0, #19200              @ 0x4b00 
    /*00024bdc*/ MLA         R0, SL, R9, R0 
    /*00024be0*/ ADD         R0, R5, R0 
    /*00024be4*/ BL          0x0000000000024BE4          @ VpssDrvTransVideoToHalImage [R_ARM_CALL: .text+0x214f0] 
    /*00024be8*/ B           VpssDrvOnLinePremFrame_x249c8
    VpssDrvOnLinePremFrame_x24bec:
    /*00024bec*/ ADD         FP, R5, #15808              @ 0x3dc0 
    /*00024bf0*/ ADD         R2, SP, #20 
    /*00024bf4*/ STR         SL, [SP, #8] 
    /*00024bf8*/ ADD         FP, FP, #56                 @ 0x38 
    /*00024bfc*/ STR         R2, [SP] 
    /*00024c00*/ ADD         R3, SP, #16 
    /*00024c04*/ STR         FP, [SP, #4] 
    /*00024c08*/ MOV         R2, #0 
    /*00024c0c*/ MOV         R1, R6 
    /*00024c10*/ MOV         R0, R7 
    /*00024c14*/ BL          0x0000000000024C14          @ VpssDrvGetFrmVbBlk [R_ARM_CALL: .text+0x22f68] 
    /*00024c18*/ CMP         R0, #0 
    /*00024c1c*/ BEQ         VpssDrvOnLinePremFrame_x24c60
    /*00024c20*/ MOVW        R3, #9757                   @ 0x261d 
    /*00024c24*/ STR         R6, [SP, #4] 
    VpssDrvOnLinePremFrame_x24c28:
    /*00024c28*/ MOVW        R2, #0                      @ .LC325 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9804] 
    /*00024c2c*/ MOVT        R2, #0                      @ .LC325 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9804] 
    /*00024c30*/ STR         R3, [SP] 
    VpssDrvOnLinePremFrame_x24c34:
    /*00024c34*/ LDR         R3, [PC, #192]              @ 0x0000000000024cfc 
    /*00024c38*/ MOV         R1, #7 
    /*00024c3c*/ MOV         R0, #3 
    /*00024c40*/ BL          0x0000000000024C40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024c44*/ B           VpssDrvOnLinePremFrame_x24988
    VpssDrvOnLinePremFrame_x24c48:
    /*00024c48*/ MOVW        R3, #9775                   @ 0x262f 
    /*00024c4c*/ MOVW        R2, #0                      @ .LC326 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9834] 
    /*00024c50*/ STR         R6, [SP, #4] 
    /*00024c54*/ MOVT        R2, #0                      @ .LC326 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9834] 
    /*00024c58*/ STR         R3, [SP] 
    /*00024c5c*/ B           VpssDrvOnLinePremFrame_x24c34
    VpssDrvOnLinePremFrame_x24c60:
    /*00024c60*/ MOVW        R8, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x7550] 
    /*00024c64*/ MOVT        R8, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x7550] 
    /*00024c68*/ MOV         R1, FP 
    /*00024c6c*/ MOV         R2, #336                    @ 0x150 
    /*00024c70*/ SUB         R0, R8, #3520               @ 0xdc0 
    /*00024c74*/ MOV         FP, #10 
    /*00024c78*/ BL          0x0000000000024C78          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00024c7c*/ MOV         R0, SL 
    /*00024c80*/ BL          0x0000000000024C80          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024c84*/ SUB         R3, R8, #3520               @ 0xdc0 
    /*00024c88*/ LDRD        R2, [R3, #120]              @ 0x78 
    /*00024c8c*/ STR         FP, [SP] 
    /*00024c90*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00024c94*/ LDR         R0, [R8, #-3192]            @ 0xfffff388 
    /*00024c98*/ BLX         R1 
    /*00024c9c*/ CMP         R0, #0 
    /*00024ca0*/ BEQ         VpssDrvOnLinePremFrame_x24b7c
    /*00024ca4*/ MOV         R1, #7 
    /*00024ca8*/ MOVW        R3, #9764                   @ 0x2624 
    /*00024cac*/ STR         R6, [SP, #4] 
    /*00024cb0*/ MOVW        R2, #0                      @ .LC326 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9834] 
    /*00024cb4*/ STR         R3, [SP] 
    /*00024cb8*/ MOVT        R2, #0                      @ .LC326 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9834] 
    /*00024cbc*/ LDR         R3, [PC, #56]               @ 0x0000000000024cfc 
    /*00024cc0*/ MOV         R0, #3 
    /*00024cc4*/ BL          0x0000000000024CC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024cc8*/ MOV         R0, SL 
    /*00024ccc*/ BL          0x0000000000024CCC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024cd0*/ SUB         R3, R8, #3520               @ 0xdc0 
    /*00024cd4*/ LDRD        R2, [R3, #120]              @ 0x78 
    /*00024cd8*/ STR         FP, [SP] 
    /*00024cdc*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00024ce0*/ LDR         R0, [R8, #-3192]            @ 0xfffff388 
    /*00024ce4*/ BLX         R1 
    /*00024ce8*/ ADD         R3, R6, #5312               @ 0x14c0 
    /*00024cec*/ ADD         R3, R3, #58                 @ 0x3a 
    /*00024cf0*/ LDR         R1, [R5, R3, LSL #2] 
    /*00024cf4*/ B           VpssDrvOnLinePremFrame_x24994
    /*00024cf8*/ MULEQ       R0, R0, R7 
    /*00024cfc*/ ANDEQ       R1, R0, R8, LSL R5 
FUNC_END VpssDrvOnLinePremFrame


FUNC_BEGIN VpssDrvOfflinePremFrame
    /*00024d00*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00024d04*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00024d08*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00024d0c*/ MOV         R5, R1 
    /*00024d10*/ LDR         R4, [IP, R0, LSL #2] 
    /*00024d14*/ MOV         R1, #72                     @ 0x48 
    /*00024d18*/ MOV         R7, R3 
    /*00024d1c*/ MOV         R9, R2 
    /*00024d20*/ ADD         R2, R4, #12288              @ 0x3000 
    /*00024d24*/ SUB         SP, SP, #24 
    /*00024d28*/ MLA         R3, R1, R5, R4 
    /*00024d2c*/ LDR         R8, [R2, #3904]             @ 0xf40 
    /*00024d30*/ CMN         R8, #1 
    /*00024d34*/ LDR         R2, [R3, #48]               @ 0x30 
    /*00024d38*/ LDR         R3, [R3, #52]               @ 0x34 
    /*00024d3c*/ STR         R2, [SP, #16] 
    /*00024d40*/ STR         R3, [SP, #20] 
    /*00024d44*/ BEQ         VpssDrvOfflinePremFrame_x24dd4
    /*00024d48*/ MOV         R0, #1 
    /*00024d4c*/ BL          0x0000000000024D4C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024d50*/ MOVW        R2, #15984                  @ 0x3e70 
    /*00024d54*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00024d58*/ LDRD        R0, [R4, R2] 
    /*00024d5c*/ BLX         R3 
    /*00024d60*/ MOV         R6, R0 
    /*00024d64*/ MOV         R0, #1 
    /*00024d68*/ BL          0x0000000000024D68          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024d6c*/ LDR         R3, [R0, #68]               @ 0x44 
    /*00024d70*/ MOV         R0, R6 
    /*00024d74*/ BLX         R3 
    /*00024d78*/ CMP         R0, #1 
    /*00024d7c*/ BLS         VpssDrvOfflinePremFrame_x24ee8
    /*00024d80*/ MOVW        R3, #9867                   @ 0x268b 
    /*00024d84*/ STR         R5, [SP, #4] 
    /*00024d88*/ STR         R3, [SP] 
    /*00024d8c*/ MOVW        R2, #0                      @ .LC328 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9894] 
    /*00024d90*/ LDR         R3, [PC, #520]              @ 0x0000000000024fa0 
    /*00024d94*/ MOVT        R2, #0                      @ .LC328 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9894] 
    /*00024d98*/ MOV         R1, #7 
    /*00024d9c*/ MOV         R0, #4 
    /*00024da0*/ BL          0x0000000000024DA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024da4*/ MVN         R0, #0 
    VpssDrvOfflinePremFrame_x24da8:
    /*00024da8*/ MOV         R2, #752                    @ 0x2f0 
    /*00024dac*/ ADD         R3, R5, #2672               @ 0xa70 
    /*00024db0*/ MLA         R5, R2, R5, R4 
    /*00024db4*/ ADD         R3, R3, #10 
    /*00024db8*/ MOVW        R2, #19496                  @ 0x4c28 
    /*00024dbc*/ MOV         IP, #0 
    /*00024dc0*/ MOV         R1, #1 
    /*00024dc4*/ STR         IP, [R4, R3, LSL #3] 
    /*00024dc8*/ STR         R1, [R5, R2] 
    /*00024dcc*/ ADD         SP, SP, #24 
    /*00024dd0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VpssDrvOfflinePremFrame_x24dd4:
    /*00024dd4*/ ADD         SL, R4, #16384              @ 0x4000 
    /*00024dd8*/ MOV         R6, R0 
    /*00024ddc*/ LDR         R3, [SL, #144]              @ 0x90 
    /*00024de0*/ CMN         R3, #1 
    /*00024de4*/ BEQ         VpssDrvOfflinePremFrame_x24e14
    /*00024de8*/ MOV         R0, #1 
    /*00024dec*/ BL          0x0000000000024DEC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024df0*/ LDR         IP, [SL, #144]              @ 0x90 
    /*00024df4*/ ADD         R3, R4, #16320              @ 0x3fc0 
    /*00024df8*/ MOV         R1, #10 
    /*00024dfc*/ LDRD        R2, [R3] 
    /*00024e00*/ STR         R1, [SP] 
    /*00024e04*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00024e08*/ MOV         R0, IP 
    /*00024e0c*/ BLX         R1 
    /*00024e10*/ STR         R8, [SL, #144]              @ 0x90 
    VpssDrvOfflinePremFrame_x24e14:
    /*00024e14*/ ADD         R8, R4, #15808              @ 0x3dc0 
    /*00024e18*/ MOV         R0, R6 
    /*00024e1c*/ ADD         R1, SP, #20 
    /*00024e20*/ MOV         R2, R9 
    /*00024e24*/ STR         R1, [SP] 
    /*00024e28*/ ADD         R8, R8, #56                 @ 0x38 
    /*00024e2c*/ MOV         R6, #1 
    /*00024e30*/ STR         R8, [SP, #4] 
    /*00024e34*/ STR         R6, [SP, #8] 
    /*00024e38*/ ADD         R3, SP, #16 
    /*00024e3c*/ MOV         R1, R5 
    /*00024e40*/ BL          0x0000000000024E40          @ VpssDrvGetFrmVbBlk [R_ARM_CALL: .text+0x22f68] 
    /*00024e44*/ CMP         R0, #0 
    /*00024e48*/ BEQ         VpssDrvOfflinePremFrame_x24e7c
    /*00024e4c*/ MOVW        R3, #9847                   @ 0x2677 
    /*00024e50*/ STR         R5, [SP, #4] 
    /*00024e54*/ STR         R3, [SP] 
    /*00024e58*/ MOVW        R2, #0                      @ .LC325 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9804] 
    /*00024e5c*/ LDR         R3, [PC, #316]              @ 0x0000000000024fa0 
    /*00024e60*/ MOVT        R2, #0                      @ .LC325 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9804] 
    /*00024e64*/ MOV         R1, #7 
    /*00024e68*/ MOV         R0, #3 
    /*00024e6c*/ BL          0x0000000000024E6C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024e70*/ MOVW        R0, #32781                  @ 0x800d 
    /*00024e74*/ MOVT        R0, #40967                  @ 0xa007 
    /*00024e78*/ B           VpssDrvOfflinePremFrame_x24da8
    VpssDrvOfflinePremFrame_x24e7c:
    /*00024e7c*/ MOV         R1, R8 
    /*00024e80*/ MOV         R2, #336                    @ 0x150 
    /*00024e84*/ MOV         R0, R7 
    /*00024e88*/ MOV         R8, #10 
    /*00024e8c*/ BL          0x0000000000024E8C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00024e90*/ MOV         R0, R6 
    /*00024e94*/ BL          0x0000000000024E94          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024e98*/ LDR         IP, [R7, #328]              @ 0x148 
    /*00024e9c*/ LDRD        R2, [R7, #120]              @ 0x78 
    /*00024ea0*/ STR         R8, [SP] 
    /*00024ea4*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00024ea8*/ MOV         R0, IP 
    /*00024eac*/ BLX         R1 
    /*00024eb0*/ CMP         R0, #0 
    /*00024eb4*/ BNE         VpssDrvOfflinePremFrame_x24f54
    VpssDrvOfflinePremFrame_x24eb8:
    /*00024eb8*/ MOV         R3, #752                    @ 0x2f0 
    /*00024ebc*/ ADD         R2, R5, #2672               @ 0xa70 
    /*00024ec0*/ MLA         R5, R3, R5, R4 
    /*00024ec4*/ ADD         R2, R2, #10 
    /*00024ec8*/ MOV         R3, #0 
    /*00024ecc*/ MOVW        R1, #19496                  @ 0x4c28 
    /*00024ed0*/ MOV         IP, #1 
    /*00024ed4*/ MOV         R0, R3 
    /*00024ed8*/ STR         IP, [R4, R2, LSL #3] 
    /*00024edc*/ STR         R3, [R5, R1] 
    /*00024ee0*/ ADD         SP, SP, #24 
    /*00024ee4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VpssDrvOfflinePremFrame_x24ee8:
    /*00024ee8*/ ADD         R1, R4, #15808              @ 0x3dc0 
    /*00024eec*/ MOV         R2, #336                    @ 0x150 
    /*00024ef0*/ ADD         R1, R1, #56                 @ 0x38 
    /*00024ef4*/ MOV         R0, R7 
    /*00024ef8*/ BL          0x0000000000024EF8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00024efc*/ MOV         R0, #1 
    /*00024f00*/ BL          0x0000000000024F00          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024f04*/ LDR         IP, [R7, #328]              @ 0x148 
    /*00024f08*/ LDRD        R2, [R7, #120]              @ 0x78 
    /*00024f0c*/ MOV         R1, #10 
    /*00024f10*/ STR         R1, [SP] 
    /*00024f14*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00024f18*/ MOV         R0, IP 
    /*00024f1c*/ BLX         R1 
    /*00024f20*/ CMP         R0, #0 
    /*00024f24*/ BEQ         VpssDrvOfflinePremFrame_x24eb8
    /*00024f28*/ MOVW        R3, #9874                   @ 0x2692 
    /*00024f2c*/ STR         R5, [SP, #4] 
    /*00024f30*/ STR         R3, [SP] 
    /*00024f34*/ MOVW        R2, #0                      @ .LC326 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9834] 
    /*00024f38*/ LDR         R3, [PC, #96]               @ 0x0000000000024fa0 
    /*00024f3c*/ MOVT        R2, #0                      @ .LC326 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9834] 
    /*00024f40*/ MOV         R1, #7 
    /*00024f44*/ MOV         R0, #3 
    /*00024f48*/ BL          0x0000000000024F48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024f4c*/ MVN         R0, #0 
    /*00024f50*/ B           VpssDrvOfflinePremFrame_x24da8
    VpssDrvOfflinePremFrame_x24f54:
    /*00024f54*/ MOV         R1, #7 
    /*00024f58*/ MOVW        R3, #9854                   @ 0x267e 
    /*00024f5c*/ STR         R5, [SP, #4] 
    /*00024f60*/ MOVW        R2, #0                      @ .LC327 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9864] 
    /*00024f64*/ STR         R3, [SP] 
    /*00024f68*/ MOVT        R2, #0                      @ .LC327 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9864] 
    /*00024f6c*/ LDR         R3, [PC, #44]               @ 0x0000000000024fa0 
    /*00024f70*/ MOV         R0, #3 
    /*00024f74*/ BL          0x0000000000024F74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024f78*/ MOV         R0, R6 
    /*00024f7c*/ BL          0x0000000000024F7C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024f80*/ LDR         IP, [R7, #328]              @ 0x148 
    /*00024f84*/ LDRD        R2, [R7, #120]              @ 0x78 
    /*00024f88*/ STR         R8, [SP] 
    /*00024f8c*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00024f90*/ MOV         R0, IP 
    /*00024f94*/ BLX         R1 
    /*00024f98*/ MVN         R0, #0 
    /*00024f9c*/ B           VpssDrvOfflinePremFrame_x24da8
    /*00024fa0*/ ANDEQ       R1, R0, R0, LSR R5 
FUNC_END VpssDrvOfflinePremFrame


FUNC_BEGIN VpssDrvOfflinePrepareUpdateOneBuf
    /*00024fa4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00024fa8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00024fac*/ PUSH        {R4, R5, R6, LR} 
    /*00024fb0*/ LDR         R5, [R3, R0, LSL #2] 
    /*00024fb4*/ ADD         R4, R5, #12288              @ 0x3000 
    /*00024fb8*/ LDR         R3, [R4, #3904]             @ 0xf40 
    /*00024fbc*/ CMN         R3, #1 
    /*00024fc0*/ BEQ         VpssDrvOfflinePrepareUpdateOneBuf_x25008
    /*00024fc4*/ LDR         R2, [R4, #3484]             @ 0xd9c 
    /*00024fc8*/ LDR         R3, [R4, #3500]             @ 0xdac 
    /*00024fcc*/ CMP         R2, R3 
    /*00024fd0*/ BEQ         VpssDrvOfflinePrepareUpdateOneBuf_x25008
    /*00024fd4*/ ADD         R1, R5, #15808              @ 0x3dc0 
    /*00024fd8*/ ADD         R0, R5, #16192              @ 0x3f40 
    /*00024fdc*/ ADD         R1, R1, #56                 @ 0x38 
    /*00024fe0*/ MOV         R2, #336                    @ 0x150 
    /*00024fe4*/ ADD         R0, R0, #8 
    /*00024fe8*/ BL          0x0000000000024FE8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00024fec*/ LDR         R3, [R4, #3484]             @ 0xd9c 
    /*00024ff0*/ MVN         R1, #0 
    /*00024ff4*/ MOV         R2, #0 
    /*00024ff8*/ ADD         R3, R3, #4096               @ 0x1000 
    /*00024ffc*/ STR         R1, [R4, #3904]             @ 0xf40 
    /*00025000*/ ADD         R3, R3, #38                 @ 0x26 
    /*00025004*/ STR         R2, [R5, R3, LSL #2] 
    VpssDrvOfflinePrepareUpdateOneBuf_x25008:
    /*00025008*/ MOV         R0, #0 
    /*0002500c*/ POP         {R4, R5, R6, PC} 
FUNC_END VpssDrvOfflinePrepareUpdateOneBuf


FUNC_BEGIN VpssDrvPrepareVB
    /*00025010*/ MOVW        IP, #0                      @ bOneBufferforLowDelay [R_ARM_MOVW_ABS_NC: .bss+0x1174] 
    /*00025014*/ MOVT        IP, #0                      @ bOneBufferforLowDelay [R_ARM_MOVT_ABS: .bss+0x1174] 
    /*00025018*/ PUSH        {R4, R5, R6, LR} 
    /*0002501c*/ SUB         SP, SP, #8 
    /*00025020*/ LDR         LR, [IP] 
    /*00025024*/ MOV         R4, R3 
    /*00025028*/ MOV         R6, R0 
    /*0002502c*/ LDR         R3, [SP, #24] 
    /*00025030*/ CMP         LR, #1 
    /*00025034*/ BEQ         VpssDrvPrepareVB_x2504c
    VpssDrvPrepareVB_x25038:
    /*00025038*/ MOV         R2, R4 
    /*0002503c*/ MOV         R0, R6 
    /*00025040*/ ADD         SP, SP, #8 
    /*00025044*/ POP         {R4, R5, R6, LR} 
    VpssDrvPrepareVB_x25048:
    /*00025048*/ B           VpssDrvPrepareVB_x25048     @ VPSS_DRV_PrepareVB [R_ARM_JUMP24: .text+0x23338] 
    VpssDrvPrepareVB_x2504c:
    /*0002504c*/ MOVW        LR, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00025050*/ MOVT        LR, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00025054*/ LDR         LR, [LR, R0, LSL #2] 
    /*00025058*/ ADD         LR, LR, #12288              @ 0x3000 
    /*0002505c*/ LDR         R5, [LR, #3484]             @ 0xd9c 
    /*00025060*/ CMP         R5, R1 
    /*00025064*/ BNE         VpssDrvPrepareVB_x25038
    /*00025068*/ LDR         LR, [LR, #3488]             @ 0xda0 
    /*0002506c*/ CMP         LR, #1 
    /*00025070*/ BNE         VpssDrvPrepareVB_x25038
    /*00025074*/ STR         R3, [SP, #4] 
    /*00025078*/ MOV         R4, R2 
    /*0002507c*/ BL          0x000000000002507C          @ VpssDrvOfflinePrepareUpdateOneBuf [R_ARM_CALL: .text+0x24fa4] 
    /*00025080*/ LDR         R3, [SP, #4] 
    /*00025084*/ MOV         R2, R4 
    /*00025088*/ MOV         R1, R5 
    /*0002508c*/ MOV         R0, R6 
    /*00025090*/ ADD         SP, SP, #8 
    /*00025094*/ POP         {R4, R5, R6, LR} 
    VpssDrvPrepareVB_x25098:
    /*00025098*/ B           VpssDrvPrepareVB_x25098     @ VpssDrvOfflinePremFrame [R_ARM_JUMP24: .text+0x24d00] 
FUNC_END VpssDrvPrepareVB


FUNC_BEGIN VPSS_DRV_OnLine_SetSclCoef
    /*0002509c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000250a0*/ SUB         SP, SP, #12 
    /*000250a4*/ ADD         R7, SP, #8 
    /*000250a8*/ MOV         R4, R0 
    /*000250ac*/ MOV         R0, R1 
    /*000250b0*/ MOV         R3, #0 
    /*000250b4*/ MOV         R6, R2 
    /*000250b8*/ STR         R3, [R7, #-4]! 
    /*000250bc*/ BL          0x00000000000250BC          @ VPSS_HAL_GetHalChn [R_ARM_CALL: .text+0x263bc] 
    /*000250c0*/ MOV         R2, R7 
    /*000250c4*/ MOV         R1, R0 
    /*000250c8*/ MOV         R5, R0 
    /*000250cc*/ MOV         R0, R4 
    /*000250d0*/ BL          0x00000000000250D0          @ VPSS_HAL_GetOnlineChnZmeAddr [R_ARM_CALL: .text+0x263d4] 
    /*000250d4*/ LDR         R3, [R6, #32] 
    /*000250d8*/ LDR         R0, [SP, #4] 
    /*000250dc*/ ADD         IP, R3, #272                @ 0x110 
    /*000250e0*/ SUB         R0, R0, R3 
    VPSS_DRV_OnLine_SetSclCoef_x250e4:
    /*000250e4*/ ADD         R2, R0, R3 
    /*000250e8*/ LDR         R1, [R3], #4 
    /*000250ec*/ CMP         R3, IP 
    /*000250f0*/ STR         R1, [R2] 
    /*000250f4*/ BNE         VPSS_DRV_OnLine_SetSclCoef_x250e4
    /*000250f8*/ LDR         R0, [SP, #4] 
    /*000250fc*/ LDR         R2, [R6, #36]               @ 0x24 
    /*00025100*/ ADD         R1, R0, #1024               @ 0x400 
    /*00025104*/ ADD         R0, R0, #1216               @ 0x4c0 
    /*00025108*/ ADD         R0, R0, #12 
    /*0002510c*/ SUB         R2, R2, #4 
    /*00025110*/ MOV         R3, R1 
    /*00025114*/ STR         R1, [SP, #4] 
    VPSS_DRV_OnLine_SetSclCoef_x25118:
    /*00025118*/ LDR         R1, [R2, #4]! 
    /*0002511c*/ STR         R1, [R3], #4 
    /*00025120*/ CMP         R0, R3 
    /*00025124*/ BNE         VPSS_DRV_OnLine_SetSclCoef_x25118
    /*00025128*/ LDR         R0, [SP, #4] 
    /*0002512c*/ LDR         R2, [R6, #40]               @ 0x28 
    /*00025130*/ ADD         R3, R0, #512                @ 0x200 
    /*00025134*/ ADD         R0, R0, #648                @ 0x288 
    /*00025138*/ SUB         R2, R2, #4 
    /*0002513c*/ STR         R3, [SP, #4] 
    VPSS_DRV_OnLine_SetSclCoef_x25140:
    /*00025140*/ LDR         R1, [R2, #4]! 
    /*00025144*/ STR         R1, [R3], #4 
    /*00025148*/ CMP         R0, R3 
    /*0002514c*/ BNE         VPSS_DRV_OnLine_SetSclCoef_x25140
    /*00025150*/ LDR         R0, [SP, #4] 
    /*00025154*/ LDR         R2, [R6, #44]               @ 0x2c 
    /*00025158*/ ADD         R3, R0, #512                @ 0x200 
    /*0002515c*/ ADD         R0, R0, #648                @ 0x288 
    /*00025160*/ SUB         R2, R2, #4 
    /*00025164*/ STR         R3, [SP, #4] 
    VPSS_DRV_OnLine_SetSclCoef_x25168:
    /*00025168*/ LDR         R1, [R2, #4]! 
    /*0002516c*/ STR         R1, [R3], #4 
    /*00025170*/ CMP         R0, R3 
    /*00025174*/ BNE         VPSS_DRV_OnLine_SetSclCoef_x25168
    /*00025178*/ MOV         R1, R5 
    /*0002517c*/ MOV         R0, R4 
    /*00025180*/ BL          0x0000000000025180          @ VPSS_HAL_ScaleRegup [R_ARM_CALL: .text+0x26410] 
    /*00025184*/ ADD         SP, SP, #12 
    /*00025188*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VPSS_DRV_OnLine_SetSclCoef


FUNC_BEGIN VpssDrvOnlineUpdateScale
    /*0002518c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00025190*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00025194*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00025198*/ MOV         R5, R2 
    /*0002519c*/ MOV         R3, #72                     @ 0x48 
    /*000251a0*/ SUB         SP, SP, #260                @ 0x104 
    /*000251a4*/ LDR         R4, [R6, R1, LSL #2] 
    /*000251a8*/ MOV         SL, R1 
    /*000251ac*/ MOV         R8, R0 
    /*000251b0*/ ADD         R7, R4, #12288              @ 0x3000 
    /*000251b4*/ ADD         R2, R4, #16384              @ 0x4000 
    /*000251b8*/ MLA         R3, R3, R5, R4 
    /*000251bc*/ STR         R2, [SP, #20] 
    /*000251c0*/ LDR         R0, [R7, #3176]             @ 0xc68 
    /*000251c4*/ LDR         R1, [R7, #3180]             @ 0xc6c 
    /*000251c8*/ LDR         R2, [R2, #2724]             @ 0xaa4 
    /*000251cc*/ LDR         IP, [R3, #48]               @ 0x30 
    /*000251d0*/ CMP         IP, #0 
    /*000251d4*/ BEQ         VpssDrvOnlineUpdateScale_x251e4
    /*000251d8*/ LDR         R9, [R3, #52]               @ 0x34 
    /*000251dc*/ CMP         R9, #0 
    /*000251e0*/ BNE         VpssDrvOnlineUpdateScale_x25494
    VpssDrvOnlineUpdateScale_x251e4:
    /*000251e4*/ MOV         LR, R2 
    /*000251e8*/ STR         R0, [SP, #32] 
    /*000251ec*/ STR         R1, [SP, #36]               @ 0x24 
    VpssDrvOnlineUpdateScale_x251f0:
    /*000251f0*/ CMP         R5, #0 
    /*000251f4*/ STREQ       R1, [SP, #36]               @ 0x24 
    /*000251f8*/ LDR         R3, [SP, #36]               @ 0x24 
    /*000251fc*/ ADD         IP, SP, #24 
    /*00025200*/ STREQ       R0, [SP, #32] 
    /*00025204*/ ADD         R9, SP, #56                 @ 0x38 
    /*00025208*/ STR         LR, [SP, #4] 
    /*0002520c*/ STR         R0, [SP, #24] 
    /*00025210*/ STR         R1, [SP, #28] 
    /*00025214*/ LDM         IP, {R0, R1} 
    /*00025218*/ STR         R3, [SP] 
    /*0002521c*/ STR         R9, [SP, #8] 
    /*00025220*/ LDR         R3, [SP, #32] 
    /*00025224*/ BL          0x0000000000025224          @ VpssDrvUpdateSclRatio [R_ARM_CALL: .text+0x22c68] 
    /*00025228*/ LDR         IP, [SP, #144]              @ 0x90 
    /*0002522c*/ LDR         LR, [SP, #136]              @ 0x88 
    /*00025230*/ MOV         R0, #2 
    /*00025234*/ LDR         R1, [SP, #140]              @ 0x8c 
    /*00025238*/ MOV         R3, #0 
    /*0002523c*/ LDR         R2, [SP, #148]              @ 0x94 
    /*00025240*/ STR         IP, [SP, #48]               @ 0x30 
    /*00025244*/ STR         LR, [SP, #40]               @ 0x28 
    /*00025248*/ STR         R1, [SP, #44]               @ 0x2c 
    /*0002524c*/ STR         R2, [SP, #52]               @ 0x34 
    /*00025250*/ STR         R3, [SP, #92]               @ 0x5c 
    /*00025254*/ STR         R3, [SP, #88]               @ 0x58 
    /*00025258*/ STR         R3, [SP, #100]              @ 0x64 
    /*0002525c*/ STR         R3, [SP, #96]               @ 0x60 
    /*00025260*/ STR         R3, [SP, #152]              @ 0x98 
    /*00025264*/ STR         R3, [SP, #156]              @ 0x9c 
    /*00025268*/ STR         R3, [SP, #164]              @ 0xa4 
    /*0002526c*/ BL          0x000000000002526C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025270*/ MOV         R3, R9 
    /*00025274*/ ADD         R1, SP, #152                @ 0x98 
    /*00025278*/ ADD         R2, SP, #40                 @ 0x28 
    /*0002527c*/ LDR         FP, [R0, #84]               @ 0x54 
    /*00025280*/ MOV         R0, #7 
    /*00025284*/ BLX         FP 
    /*00025288*/ MOV         R2, R9 
    /*0002528c*/ MOV         R1, R5 
    /*00025290*/ MOV         R0, R8 
    /*00025294*/ BL          0x0000000000025294          @ VPSS_DRV_OnLine_SetSclCoef [R_ARM_CALL: .text+0x2509c] 
    /*00025298*/ LSL         R3, R5, #4 
    /*0002529c*/ ADD         IP, R4, R3 
    /*000252a0*/ MOVW        R1, #15800                  @ 0x3db8 
    /*000252a4*/ LDR         R2, [SP, #136]              @ 0x88 
    /*000252a8*/ LDR         R1, [IP, R1] 
    /*000252ac*/ CMP         R2, R1 
    /*000252b0*/ BEQ         VpssDrvOnlineUpdateScale_x254ac
    /*000252b4*/ LDR         R1, [SP, #140]              @ 0x8c 
    /*000252b8*/ ADD         R0, R5, #988                @ 0x3dc 
    /*000252bc*/ LDR         FP, [SP, #144]              @ 0x90 
    /*000252c0*/ LDR         R9, [SP, #148]              @ 0x94 
    VpssDrvOnlineUpdateScale_x252c4:
    /*000252c4*/ ADD         R3, R4, R3 
    /*000252c8*/ MOVW        IP, #15800                  @ 0x3db8 
    /*000252cc*/ MOVW        LR, #15804                  @ 0x3dbc 
    /*000252d0*/ STR         R2, [R3, IP] 
    /*000252d4*/ MOVW        R2, #15812                  @ 0x3dc4 
    /*000252d8*/ STR         R1, [R3, LR] 
    /*000252dc*/ STR         FP, [R4, R0, LSL #4] 
    /*000252e0*/ STR         R9, [R3, R2] 
    VpssDrvOnlineUpdateScale_x252e4:
    /*000252e4*/ LDR         R1, [R6, SL, LSL #2] 
    /*000252e8*/ MOV         R3, #1 
    /*000252ec*/ MOV         R2, #0 
    /*000252f0*/ STR         R3, [SP, #156]              @ 0x9c 
    /*000252f4*/ ADD         R0, R1, #12288              @ 0x3000 
    /*000252f8*/ STR         R3, [SP, #176]              @ 0xb0 
    /*000252fc*/ STR         R3, [SP, #180]              @ 0xb4 
    /*00025300*/ ADD         R1, R1, #16384              @ 0x4000 
    /*00025304*/ STR         R3, [SP, #224]              @ 0xe0 
    /*00025308*/ MOV         IP, #72                     @ 0x48 
    /*0002530c*/ STR         R3, [SP, #220]              @ 0xdc 
    /*00025310*/ STR         R2, [SP, #184]              @ 0xb8 
    /*00025314*/ STR         R2, [SP, #188]              @ 0xbc 
    /*00025318*/ STR         R2, [SP, #232]              @ 0xe8 
    /*0002531c*/ STR         R2, [SP, #236]              @ 0xec 
    /*00025320*/ LDR         R2, [R0, #3176]             @ 0xc68 
    /*00025324*/ LDR         LR, [SP, #120]              @ 0x78 
    /*00025328*/ MLA         IP, IP, R5, R4 
    /*0002532c*/ STR         R2, [SP, #248]              @ 0xf8 
    /*00025330*/ LDR         R3, [R0, #3180]             @ 0xc6c 
    /*00025334*/ STR         R2, [SP, #240]              @ 0xf0 
    /*00025338*/ ADD         R2, SP, #152                @ 0x98 
    /*0002533c*/ LDR         R0, [SP, #124]              @ 0x7c 
    /*00025340*/ STR         R3, [SP, #244]              @ 0xf4 
    /*00025344*/ STR         R3, [SP, #252]              @ 0xfc 
    /*00025348*/ LDR         R3, [R1, #2724]             @ 0xaa4 
    /*0002534c*/ MOV         R1, R5 
    /*00025350*/ STR         R0, [SP, #228]              @ 0xe4 
    /*00025354*/ MOV         R0, R8 
    /*00025358*/ SUBS        R3, R3, #25 
    /*0002535c*/ STR         LR, [SP, #152]              @ 0x98 
    /*00025360*/ MOVNE       R3, #1 
    /*00025364*/ STR         R3, [SP, #192]              @ 0xc0 
    /*00025368*/ STR         R3, [SP, #196]              @ 0xc4 
    /*0002536c*/ LDR         R3, [R4, #12] 
    /*00025370*/ CMP         R3, #28 
    /*00025374*/ CMPNE       R3, #25 
    /*00025378*/ MOVEQ       R3, #1 
    /*0002537c*/ MOVNE       R3, #0 
    /*00025380*/ EOR         R3, R3, #1 
    /*00025384*/ STR         R3, [SP, #192]              @ 0xc0 
    /*00025388*/ LDR         R3, [IP, #60]               @ 0x3c 
    /*0002538c*/ CMP         R3, #28 
    /*00025390*/ CMPNE       R3, #25 
    /*00025394*/ MOVEQ       R3, #1 
    /*00025398*/ MOVNE       R3, #0 
    /*0002539c*/ EOR         R3, R3, #1 
    /*000253a0*/ STR         R3, [SP, #196]              @ 0xc4 
    /*000253a4*/ LDR         R3, [IP, #48]               @ 0x30 
    /*000253a8*/ STR         R3, [SP, #240]              @ 0xf0 
    /*000253ac*/ LDR         R3, [IP, #52]               @ 0x34 
    /*000253b0*/ STR         R3, [SP, #244]              @ 0xf4 
    /*000253b4*/ BL          0x00000000000253B4          @ VPSS_HAL_SetChnSclCfg [R_ARM_CALL: .text+0x274d4] 
    /*000253b8*/ ADD         R3, R5, #3952               @ 0xf70 
    /*000253bc*/ MOV         R1, R5 
    /*000253c0*/ ADD         R3, R3, #10 
    /*000253c4*/ MOV         R0, R8 
    /*000253c8*/ LDR         R2, [R4, R3, LSL #2] 
    /*000253cc*/ BL          0x00000000000253CC          @ VPSS_HAL_SetChnScaleEn [R_ARM_CALL: .text+0x267f8] 
    /*000253d0*/ LDR         R3, [R7, #3564]             @ 0xdec 
    /*000253d4*/ CMP         R3, #1 
    /*000253d8*/ BEQ         VpssDrvOnlineUpdateScale_x253f0
    /*000253dc*/ LDR         R3, [R7, #3568]             @ 0xdf0 
    /*000253e0*/ CMP         R3, #1 
    /*000253e4*/ BEQ         VpssDrvOnlineUpdateScale_x253f0
    VpssDrvOnlineUpdateScale_x253e8:
    /*000253e8*/ ADD         SP, SP, #260                @ 0x104 
    /*000253ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssDrvOnlineUpdateScale_x253f0:
    /*000253f0*/ LDR         R3, [SP, #20] 
    /*000253f4*/ LDR         R4, [R3, #2364]             @ 0x93c 
    /*000253f8*/ CMP         R4, #0 
    /*000253fc*/ BNE         VpssDrvOnlineUpdateScale_x253e8
    /*00025400*/ LDR         R3, [R6, SL, LSL #2] 
    /*00025404*/ MOV         R5, #1 
    /*00025408*/ STR         R4, [SP, #184]              @ 0xb8 
    /*0002540c*/ MOV         R0, #1048576                @ 0x100000 
    /*00025410*/ ADD         IP, R3, #12288              @ 0x3000 
    /*00025414*/ STR         R0, [SP, #152]              @ 0x98 
    /*00025418*/ STR         R0, [SP, #228]              @ 0xe4 
    /*0002541c*/ ADD         R3, R3, #16384              @ 0x4000 
    /*00025420*/ STR         R4, [SP, #188]              @ 0xbc 
    /*00025424*/ ADD         R2, SP, #152                @ 0x98 
    /*00025428*/ STR         R4, [SP, #232]              @ 0xe8 
    /*0002542c*/ MOV         R1, R4 
    /*00025430*/ STR         R4, [SP, #236]              @ 0xec 
    /*00025434*/ MOV         R0, R8 
    /*00025438*/ STR         R5, [SP, #156]              @ 0x9c 
    /*0002543c*/ STR         R5, [SP, #176]              @ 0xb0 
    /*00025440*/ STR         R5, [SP, #180]              @ 0xb4 
    /*00025444*/ STR         R5, [SP, #224]              @ 0xe0 
    /*00025448*/ STR         R5, [SP, #220]              @ 0xdc 
    /*0002544c*/ LDR         LR, [IP, #3176]             @ 0xc68 
    /*00025450*/ STR         LR, [SP, #248]              @ 0xf8 
    /*00025454*/ LDR         IP, [IP, #3180]             @ 0xc6c 
    /*00025458*/ STR         LR, [SP, #240]              @ 0xf0 
    /*0002545c*/ STR         IP, [SP, #252]              @ 0xfc 
    /*00025460*/ STR         IP, [SP, #244]              @ 0xf4 
    /*00025464*/ LDR         R3, [R3, #2724]             @ 0xaa4 
    /*00025468*/ SUBS        R3, R3, #25 
    /*0002546c*/ MOVNE       R3, #1 
    /*00025470*/ STR         R3, [SP, #192]              @ 0xc0 
    /*00025474*/ STR         R3, [SP, #196]              @ 0xc4 
    /*00025478*/ BL          0x0000000000025478          @ VPSS_HAL_SetChnSclCfg [R_ARM_CALL: .text+0x274d4] 
    /*0002547c*/ MOV         R2, R5 
    /*00025480*/ MOV         R1, R4 
    /*00025484*/ MOV         R0, R8 
    /*00025488*/ BL          0x0000000000025488          @ VPSS_HAL_SetChnScaleEn [R_ARM_CALL: .text+0x267f8] 
    /*0002548c*/ ADD         SP, SP, #260                @ 0x104 
    /*00025490*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VpssDrvOnlineUpdateScale_x25494:
    /*00025494*/ LDR         LR, [R3, #60]               @ 0x3c 
    /*00025498*/ CMP         LR, #0 
    /*0002549c*/ STRNE       IP, [SP, #32] 
    /*000254a0*/ STRNE       R9, [SP, #36]               @ 0x24 
    /*000254a4*/ BNE         VpssDrvOnlineUpdateScale_x251f0
    /*000254a8*/ B           VpssDrvOnlineUpdateScale_x251e4
    VpssDrvOnlineUpdateScale_x254ac:
    /*000254ac*/ MOVW        R0, #15804                  @ 0x3dbc 
    /*000254b0*/ LDR         R1, [SP, #140]              @ 0x8c 
    /*000254b4*/ LDR         R0, [IP, R0] 
    /*000254b8*/ CMP         R1, R0 
    /*000254bc*/ LDRNE       FP, [SP, #144]              @ 0x90 
    /*000254c0*/ ADDNE       R0, R5, #988                @ 0x3dc 
    /*000254c4*/ LDRNE       R9, [SP, #148]              @ 0x94 
    /*000254c8*/ BNE         VpssDrvOnlineUpdateScale_x252c4
    /*000254cc*/ ADD         R0, R5, #988                @ 0x3dc 
    /*000254d0*/ LDR         FP, [SP, #144]              @ 0x90 
    /*000254d4*/ LDR         LR, [R4, R0, LSL #4] 
    /*000254d8*/ CMP         FP, LR 
    /*000254dc*/ LDRNE       R9, [SP, #148]              @ 0x94 
    /*000254e0*/ BNE         VpssDrvOnlineUpdateScale_x252c4
    /*000254e4*/ MOVW        LR, #15812                  @ 0x3dc4 
    /*000254e8*/ LDR         R9, [SP, #148]              @ 0x94 
    /*000254ec*/ LDR         IP, [IP, LR] 
    /*000254f0*/ CMP         R9, IP 
    /*000254f4*/ BNE         VpssDrvOnlineUpdateScale_x252c4
    /*000254f8*/ B           VpssDrvOnlineUpdateScale_x252e4
FUNC_END VpssDrvOnlineUpdateScale


FUNC_BEGIN VPSS_DRV_SetVideoEn
    /*000254fc*/ MOVW        R3, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*00025500*/ MOVT        R3, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00025504*/ PUSH        {R4, LR} 
    /*00025508*/ LDR         R0, [R3, R0, LSL #2] 
    /*0002550c*/ BL          0x000000000002550C          @ VPSS_HAL_OnLineVideoEn [R_ARM_CALL: .text+0x27440] 
    /*00025510*/ MOV         R0, #0 
    /*00025514*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_SetVideoEn


FUNC_BEGIN VpssDrvOnlineSetChnAttr
    /*00025518*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0002551c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00025520*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00025524*/ MOV         R8, R0 
    /*00025528*/ LDR         R4, [R3, R0, LSL #2] 
    /*0002552c*/ ADD         R0, R1, #692                @ 0x2b4 
    /*00025530*/ SUB         SP, SP, #32 
    /*00025534*/ MOVW        R2, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*00025538*/ ADD         LR, R4, #12288              @ 0x3000 
    /*0002553c*/ ADD         IP, R4, #16384              @ 0x4000 
    /*00025540*/ ADD         R0, IP, R0, LSL #2 
    /*00025544*/ MOVT        R2, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00025548*/ LDR         SL, [LR, #3488]             @ 0xda0 
    /*0002554c*/ MOV         R3, #0 
    /*00025550*/ MOV         R5, R1 
    /*00025554*/ LDR         R6, [R0, #2328]             @ 0x918 
    /*00025558*/ CMP         SL, #1 
    /*0002555c*/ LDR         R7, [R2] 
    /*00025560*/ STR         R3, [SP, #16] 
    /*00025564*/ STR         R3, [SP, #12] 
    /*00025568*/ STR         R3, [SP, #20] 
    /*0002556c*/ STR         R3, [SP, #24] 
    /*00025570*/ STR         R3, [SP, #28] 
    /*00025574*/ BEQ         VpssDrvOnlineSetChnAttr_x25660
    /*00025578*/ CMP         SL, #0 
    /*0002557c*/ BNE         VpssDrvOnlineSetChnAttr_x2558c
    /*00025580*/ LDR         R9, [LR, #3484]             @ 0xd9c 
    /*00025584*/ CMP         R9, R1 
    /*00025588*/ BEQ         VpssDrvOnlineSetChnAttr_x256a8
    VpssDrvOnlineSetChnAttr_x2558c:
    /*0002558c*/ MOV         R9, R5 
    VpssDrvOnlineSetChnAttr_x25590:
    /*00025590*/ MOV         R2, R5 
    /*00025594*/ MOV         R1, R8 
    /*00025598*/ MOV         R0, R7 
    /*0002559c*/ BL          0x000000000002518C 
    /*000255a0*/ MOV         R3, #24 
    /*000255a4*/ MLA         R3, R3, R5, R4 
    /*000255a8*/ MOVW        R2, #37816                  @ 0x93b8 
    /*000255ac*/ LDR         IP, [R3, R2] 
    /*000255b0*/ CMP         IP, #1 
    /*000255b4*/ BNE         VpssDrvOnlineSetChnAttr_x255e8
    /*000255b8*/ MOVW        R2, #15504                  @ 0x3c90 
    /*000255bc*/ MOVW        R1, #15508                  @ 0x3c94 
    /*000255c0*/ LDR         R0, [R3, R2] 
    /*000255c4*/ MOVW        LR, #15516                  @ 0x3c9c 
    /*000255c8*/ MOVW        R2, #15512                  @ 0x3c98 
    /*000255cc*/ LDR         R1, [R3, R1] 
    /*000255d0*/ LDR         R2, [R3, R2] 
    /*000255d4*/ LDR         R3, [R3, LR] 
    /*000255d8*/ STR         R0, [SP, #12] 
    /*000255dc*/ STR         R1, [SP, #16] 
    /*000255e0*/ STR         R2, [SP, #20] 
    /*000255e4*/ STR         R3, [SP, #24] 
    VpssDrvOnlineSetChnAttr_x255e8:
    /*000255e8*/ ADD         R2, SP, #12 
    /*000255ec*/ MOV         R1, R9 
    /*000255f0*/ MOV         R0, R7 
    /*000255f4*/ STR         IP, [SP, #28] 
    /*000255f8*/ BL          0x00000000000255F8          @ VPSS_HAL_SetChnCrop [R_ARM_CALL: .text+0x26d9c] 
    /*000255fc*/ MOV         R2, #376                    @ 0x178 
    /*00025600*/ MUL         R6, R2, R6 
    /*00025604*/ MOV         R1, #752                    @ 0x2f0 
    /*00025608*/ ADD         R4, R4, #18688              @ 0x4900 
    /*0002560c*/ LDR         R0, [PC, #164]              @ 0x00000000000256b8 
    /*00025610*/ ADD         R4, R4, #24 
    /*00025614*/ MOV         SL, #0 
    /*00025618*/ ADD         R6, R6, #488                @ 0x1e8 
    /*0002561c*/ MLA         R1, R1, R9, R6 
    /*00025620*/ ADD         R1, R4, R1 
    /*00025624*/ BL          0x0000000000025624          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00025628*/ MOV         R1, R5 
    /*0002562c*/ MOV         R2, R7 
    /*00025630*/ MOV         R0, R8 
    /*00025634*/ STR         SL, [SP, #4] 
    /*00025638*/ STR         SL, [SP] 
    /*0002563c*/ LDR         R3, [PC, #116]              @ 0x00000000000256b8 
    /*00025640*/ BL          0x0000000000025640          @ VPSSDrvUpdateChnAddr [R_ARM_CALL: .text+0x236a4] 
    /*00025644*/ MOV         R3, SL 
    /*00025648*/ MOV         R2, R7 
    /*0002564c*/ MOV         R1, R9 
    /*00025650*/ MOV         R0, R8 
    /*00025654*/ BL          0x0000000000025654          @ VpssDrvUpdateCmp [R_ARM_CALL: .text+0x20f58] 
    /*00025658*/ ADD         SP, SP, #32 
    /*0002565c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VpssDrvOnlineSetChnAttr_x25660:
    /*00025660*/ LDR         R3, [LR, #3484]             @ 0xd9c 
    /*00025664*/ MOV         R9, R1 
    /*00025668*/ CMP         R3, R1 
    /*0002566c*/ BNE         VpssDrvOnlineSetChnAttr_x25590
    /*00025670*/ MOV         R2, #752                    @ 0x2f0 
    /*00025674*/ MOV         R3, #376                    @ 0x178 
    /*00025678*/ MUL         R2, R2, R1 
    /*0002567c*/ MOV         R0, R7 
    /*00025680*/ MLA         R3, R3, R6, R2 
    /*00025684*/ ADD         IP, IP, R3 
    /*00025688*/ ADD         IP, IP, #3136               @ 0xc40 
    /*0002568c*/ LDRD        R2, [IP, #8] 
    /*00025690*/ BL          0x0000000000025690          @ VPSS_HAL_SetChnLowDelayAddr [R_ARM_CALL: .text+0x273c8] 
    /*00025694*/ MOV         R2, SL 
    /*00025698*/ MOV         R1, R5 
    /*0002569c*/ MOV         R0, R7 
    /*000256a0*/ BL          0x00000000000256A0          @ VPSS_HAL_EnableChnLowDelay [R_ARM_CALL: .text+0x27468] 
    /*000256a4*/ B           VpssDrvOnlineSetChnAttr_x25590
    VpssDrvOnlineSetChnAttr_x256a8:
    /*000256a8*/ MOV         R2, SL 
    /*000256ac*/ MOV         R0, R7 
    /*000256b0*/ BL          0x00000000000256B0          @ VPSS_HAL_EnableChnLowDelay [R_ARM_CALL: .text+0x27468] 
    /*000256b4*/ B           VpssDrvOnlineSetChnAttr_x25590
    /*000256b8*/ ANDEQ       R6, R0, R0, ROR #17 
FUNC_END VpssDrvOnlineSetChnAttr


FUNC_BEGIN VpssDrvOnLineStartCap
    /*000256bc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000256c0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000256c4*/ PUSH        {R4, R5, R6, LR} 
    /*000256c8*/ MOV         R4, R1 
    /*000256cc*/ LDR         R5, [R3, R0, LSL #2] 
    /*000256d0*/ BL          0x00000000000256D0          @ VpssDrvOnlineSetChnAttr [R_ARM_CALL: .text+0x25518] 
    /*000256d4*/ ADD         R3, R4, #5312               @ 0x14c0 
    /*000256d8*/ ADD         R3, R3, #58                 @ 0x3a 
    /*000256dc*/ LDR         R3, [R5, R3, LSL #2] 
    /*000256e0*/ ADD         R3, R3, R4, LSL #1 
    /*000256e4*/ ADD         R3, R3, #5312               @ 0x14c0 
    /*000256e8*/ ADD         R3, R3, #52                 @ 0x34 
    /*000256ec*/ LDR         R3, [R5, R3, LSL #2] 
    /*000256f0*/ CMP         R3, #1 
    /*000256f4*/ BEQ         VpssDrvOnLineStartCap_x25718
    VpssDrvOnLineStartCap_x256f8:
    /*000256f8*/ MOVW        R3, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*000256fc*/ MOVT        R3, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00025700*/ MOV         R1, R4 
    /*00025704*/ MOV         R2, #0 
    /*00025708*/ LDR         R0, [R3] 
    /*0002570c*/ BL          0x000000000002570C          @ VPSS_HAL_SetChnEn [R_ARM_CALL: .text+0x26538] 
    VpssDrvOnLineStartCap_x25710:
    /*00025710*/ MOV         R0, #0 
    /*00025714*/ POP         {R4, R5, R6, PC} 
    VpssDrvOnLineStartCap_x25718:
    /*00025718*/ MOV         R3, #24 
    /*0002571c*/ MOVW        R2, #18748                  @ 0x493c 
    /*00025720*/ MLA         R5, R3, R4, R5 
    /*00025724*/ LDR         R2, [R5, R2] 
    /*00025728*/ CMP         R2, #1 
    /*0002572c*/ BNE         VpssDrvOnLineStartCap_x256f8
    /*00025730*/ MOVW        R3, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*00025734*/ MOVT        R3, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00025738*/ MOV         R1, R4 
    /*0002573c*/ LDR         R0, [R3] 
    /*00025740*/ BL          0x0000000000025740          @ VPSS_HAL_SetChnEn [R_ARM_CALL: .text+0x26538] 
    /*00025744*/ B           VpssDrvOnLineStartCap_x25710
FUNC_END VpssDrvOnLineStartCap


FUNC_BEGIN VPSS_DRV_CheckCoverExAttr
    /*00025748*/ LDR         R3, [R0] 
    /*0002574c*/ CMP         R3, #0 
    /*00025750*/ BNE         VPSS_DRV_CheckCoverExAttr_x2575c
    /*00025754*/ MOV         R0, #1 
    /*00025758*/ BX          LR 
    VPSS_DRV_CheckCoverExAttr_x2575c:
    /*0002575c*/ ADD         R0, R0, #4 
    VPSS_DRV_CheckCoverExAttr_x25760:
    /*00025760*/ B           VPSS_DRV_CheckCoverExAttr_x25760@ VPSS_DRV_CheckQuadrangleAttr [R_ARM_JUMP24: .text+0x23f94] 
FUNC_END VPSS_DRV_CheckCoverExAttr


FUNC_BEGIN VPSS_DRV_GetRgnCapacity
    /*00025764*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00025768*/ SUBS        R4, R1, #0 
    /*0002576c*/ MOV         R5, R0 
    /*00025770*/ BEQ         VPSS_DRV_GetRgnCapacity_x25c6c
    VPSS_DRV_GetRgnCapacity_x25774:
    /*00025774*/ MOV         R2, #328                    @ 0x148 
    /*00025778*/ MOV         R1, #0 
    /*0002577c*/ MOV         R0, R4 
    /*00025780*/ BL          0x0000000000025780          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00025784*/ CMP         R5, #1 
    /*00025788*/ MOVW        R2, #0                      @ VPSS_DRV_CheckRgnChnCapa [R_ARM_MOVW_ABS_NC: .text+0x17cf0] 
    /*0002578c*/ MOVW        R3, #0                      @ VPSS_DRV_CheckRgnAttr [R_ARM_MOVW_ABS_NC: .text+0x24168] 
    /*00025790*/ MOVT        R2, #0                      @ VPSS_DRV_CheckRgnChnCapa [R_ARM_MOVT_ABS: .text+0x17cf0] 
    /*00025794*/ MOVT        R3, #0                      @ VPSS_DRV_CheckRgnAttr [R_ARM_MOVT_ABS: .text+0x24168] 
    /*00025798*/ STR         R2, [R4, #320]              @ 0x140 
    /*0002579c*/ STR         R3, [R4, #324]              @ 0x144 
    /*000257a0*/ BEQ         VPSS_DRV_GetRgnCapacity_x25878
    /*000257a4*/ CMP         R5, #2 
    /*000257a8*/ BEQ         VPSS_DRV_GetRgnCapacity_x259dc
    /*000257ac*/ CMP         R5, #3 
    /*000257b0*/ BEQ         VPSS_DRV_GetRgnCapacity_x25b40
    /*000257b4*/ CMP         R5, #4 
    /*000257b8*/ POPNE       {R4, R5, R6, R7, R8, PC} 
    /*000257bc*/ MOV         R3, #0 
    /*000257c0*/ MOV         R2, #1 
    /*000257c4*/ MOV         LR, #2 
    /*000257c8*/ MOV         R1, #3 
    /*000257cc*/ MOVW        IP, #8190                   @ 0x1ffe 
    /*000257d0*/ MOV         R0, #32 
    /*000257d4*/ STR         R1, [R4, #12] 
    /*000257d8*/ MOV         R1, #8192                   @ 0x2000 
    /*000257dc*/ STR         LR, [R4, #44]               @ 0x2c 
    /*000257e0*/ STR         LR, [R4, #296]              @ 0x128 
    /*000257e4*/ MOV         LR, #67108864               @ 0x4000000 
    /*000257e8*/ STR         R5, [R4, #40]               @ 0x28 
    /*000257ec*/ STR         R5, [R4, #72]               @ 0x48 
    /*000257f0*/ STR         R5, [R4, #76]               @ 0x4c 
    /*000257f4*/ STR         R3, [R4] 
    /*000257f8*/ STR         R3, [R4, #8] 
    /*000257fc*/ STR         R3, [R4, #16] 
    /*00025800*/ STR         R3, [R4, #24] 
    /*00025804*/ STR         R3, [R4, #28] 
    /*00025808*/ STR         R3, [R4, #48]               @ 0x30 
    /*0002580c*/ STR         R3, [R4, #124]              @ 0x7c 
    /*00025810*/ STR         R3, [R4, #156]              @ 0x9c 
    /*00025814*/ STR         R3, [R4, #176]              @ 0xb0 
    /*00025818*/ STR         R3, [R4, #196]              @ 0xc4 
    /*0002581c*/ STR         R3, [R4, #216]              @ 0xd8 
    /*00025820*/ STR         R3, [R4, #288]              @ 0x120 
    /*00025824*/ STR         R3, [R4, #300]              @ 0x12c 
    /*00025828*/ STR         R2, [R4, #4] 
    /*0002582c*/ STR         R2, [R4, #20] 
    /*00025830*/ STR         R2, [R4, #52]               @ 0x34 
    /*00025834*/ STR         R2, [R4, #284]              @ 0x11c 
    /*00025838*/ STR         R2, [R4, #292]              @ 0x124 
    /*0002583c*/ STR         R2, [R4, #232]              @ 0xe8 
    /*00025840*/ STR         IP, [R4, #32] 
    /*00025844*/ STR         IP, [R4, #36]               @ 0x24 
    /*00025848*/ STR         R0, [R4, #56]               @ 0x38 
    /*0002584c*/ STR         R0, [R4, #60]               @ 0x3c 
    /*00025850*/ STR         R1, [R4, #64]               @ 0x40 
    /*00025854*/ STR         R1, [R4, #68]               @ 0x44 
    /*00025858*/ STR         LR, [R4, #80]               @ 0x50 
    /*0002585c*/ STR         R3, [R4, #236]              @ 0xec 
    /*00025860*/ STR         R2, [R4, #240]              @ 0xf0 
    /*00025864*/ STR         R3, [R4, #244]              @ 0xf4 
    /*00025868*/ STR         R3, [R4, #304]              @ 0x130 
    /*0002586c*/ STR         R2, [R4, #308]              @ 0x134 
    /*00025870*/ STR         R5, [R4, #316]              @ 0x13c 
    /*00025874*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_GetRgnCapacity_x25878:
    /*00025878*/ MOV         R3, #0 
    /*0002587c*/ MOV         R2, #2 
    /*00025880*/ MOVW        R0, #8190                   @ 0x1ffe 
    /*00025884*/ MOV         IP, #8192                   @ 0x2000 
    /*00025888*/ MOV         LR, #7 
    /*0002588c*/ STR         R2, [R4, #40]               @ 0x28 
    /*00025890*/ STR         LR, [R4, #12] 
    /*00025894*/ MOV         R1, #57344                  @ 0xe000 
    /*00025898*/ STR         R2, [R4, #44]               @ 0x2c 
    /*0002589c*/ MOVT        R1, #65535                  @ 0xffff 
    /*000258a0*/ STR         R2, [R4, #72]               @ 0x48 
    /*000258a4*/ MOV         LR, #9 
    /*000258a8*/ STR         R1, [R4, #24] 
    /*000258ac*/ MOV         R6, #67108864               @ 0x4000000 
    /*000258b0*/ STR         R1, [R4, #28] 
    /*000258b4*/ STR         R1, [R4, #100]              @ 0x64 
    /*000258b8*/ STR         R1, [R4, #104]              @ 0x68 
    /*000258bc*/ MOV         R1, #8 
    /*000258c0*/ STR         R2, [R4, #76]               @ 0x4c 
    /*000258c4*/ STR         R2, [R4, #56]               @ 0x38 
    /*000258c8*/ STR         R2, [R4, #60]               @ 0x3c 
    /*000258cc*/ STR         R2, [R4, #92]               @ 0x5c 
    /*000258d0*/ STR         R2, [R4, #116]              @ 0x74 
    /*000258d4*/ STR         R0, [R4, #32] 
    /*000258d8*/ STR         R0, [R4, #36]               @ 0x24 
    /*000258dc*/ STR         R0, [R4, #108]              @ 0x6c 
    /*000258e0*/ STR         R0, [R4, #112]              @ 0x70 
    /*000258e4*/ MOV         R0, #3 
    /*000258e8*/ STR         IP, [R4, #64]               @ 0x40 
    /*000258ec*/ STR         IP, [R4, #68]               @ 0x44 
    /*000258f0*/ MOV         IP, #11 
    /*000258f4*/ STR         R5, [R4, #4] 
    /*000258f8*/ STR         R5, [R4, #20] 
    /*000258fc*/ STR         R5, [R4, #52]               @ 0x34 
    /*00025900*/ STR         R5, [R4, #276]              @ 0x114 
    /*00025904*/ STR         R5, [R4, #280]              @ 0x118 
    /*00025908*/ STR         R5, [R4, #88]               @ 0x58 
    /*0002590c*/ STR         R3, [R4] 
    /*00025910*/ STR         R3, [R4, #8] 
    /*00025914*/ STR         R3, [R4, #16] 
    /*00025918*/ STR         R3, [R4, #48]               @ 0x30 
    /*0002591c*/ STR         R3, [R4, #84]               @ 0x54 
    /*00025920*/ STR         R6, [R4, #80]               @ 0x50 
    /*00025924*/ STR         R1, [R4, #96]               @ 0x60 
    /*00025928*/ STR         R2, [R4, #120]              @ 0x78 
    /*0002592c*/ MOV         R2, #255                    @ 0xff 
    /*00025930*/ STR         R0, [R4, #136]              @ 0x88 
    /*00025934*/ MOV         R0, #51                     @ 0x33 
    /*00025938*/ STR         LR, [R4, #144]              @ 0x90 
    /*0002593c*/ MVN         LR, #50                     @ 0x32 
    /*00025940*/ STR         IP, [R4, #148]              @ 0x94 
    /*00025944*/ MOV         IP, #64                     @ 0x40 
    /*00025948*/ STR         R3, [R4, #124]              @ 0x7c 
    /*0002594c*/ STR         R3, [R4, #128]              @ 0x80 
    /*00025950*/ STR         R3, [R4, #132]              @ 0x84 
    /*00025954*/ STR         R1, [R4, #140]              @ 0x8c 
    /*00025958*/ STR         R3, [R4, #156]              @ 0x9c 
    /*0002595c*/ STR         R3, [R4, #160]              @ 0xa0 
    /*00025960*/ STR         R3, [R4, #164]              @ 0xa4 
    /*00025964*/ STR         R3, [R4, #172]              @ 0xac 
    /*00025968*/ STR         R3, [R4, #176]              @ 0xb0 
    /*0002596c*/ STR         R3, [R4, #180]              @ 0xb4 
    /*00025970*/ STR         R3, [R4, #184]              @ 0xb8 
    /*00025974*/ STR         R3, [R4, #192]              @ 0xc0 
    /*00025978*/ STR         R3, [R4, #196]              @ 0xc4 
    /*0002597c*/ STR         R3, [R4, #200]              @ 0xc8 
    /*00025980*/ STR         R3, [R4, #204]              @ 0xcc 
    /*00025984*/ STR         R3, [R4, #212]              @ 0xd4 
    /*00025988*/ STR         R3, [R4, #220]              @ 0xdc 
    /*0002598c*/ STR         R3, [R4, #236]              @ 0xec 
    /*00025990*/ STR         R3, [R4, #244]              @ 0xf4 
    /*00025994*/ STR         R3, [R4, #248]              @ 0xf8 
    /*00025998*/ STR         R3, [R4, #252]              @ 0xfc 
    /*0002599c*/ STR         R5, [R4, #216]              @ 0xd8 
    /*000259a0*/ STR         R5, [R4, #224]              @ 0xe0 
    /*000259a4*/ STR         R5, [R4, #232]              @ 0xe8 
    /*000259a8*/ STR         R5, [R4, #240]              @ 0xf0 
    /*000259ac*/ STR         R2, [R4, #168]              @ 0xa8 
    /*000259b0*/ STR         R2, [R4, #188]              @ 0xbc 
    /*000259b4*/ STR         R2, [R4, #208]              @ 0xd0 
    /*000259b8*/ STR         R0, [R4, #264]              @ 0x108 
    /*000259bc*/ STR         R3, [R4, #260]              @ 0x104 
    /*000259c0*/ STR         R1, [R4, #316]              @ 0x13c 
    /*000259c4*/ STR         R0, [R4, #272]              @ 0x110 
    /*000259c8*/ STR         R3, [R4, #304]              @ 0x130 
    /*000259cc*/ STR         R5, [R4, #308]              @ 0x134 
    /*000259d0*/ STR         LR, [R4, #268]              @ 0x10c 
    /*000259d4*/ STR         IP, [R4, #312]              @ 0x138 
    /*000259d8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_GetRgnCapacity_x259dc:
    /*000259dc*/ MOV         R3, #0 
    /*000259e0*/ MOV         R2, #1 
    /*000259e4*/ MOVW        R0, #8190                   @ 0x1ffe 
    /*000259e8*/ MOV         LR, #8192                   @ 0x2000 
    /*000259ec*/ STR         R5, [R4, #40]               @ 0x28 
    /*000259f0*/ MOV         IP, #7 
    /*000259f4*/ STR         R5, [R4, #44]               @ 0x2c 
    /*000259f8*/ MOV         R1, #57344                  @ 0xe000 
    /*000259fc*/ STR         R5, [R4, #72]               @ 0x48 
    /*00025a00*/ MOVT        R1, #65535                  @ 0xffff 
    /*00025a04*/ STR         R5, [R4, #76]               @ 0x4c 
    /*00025a08*/ MOV         R7, #67108864               @ 0x4000000 
    /*00025a0c*/ STR         R5, [R4, #56]               @ 0x38 
    /*00025a10*/ MOV         R6, #9 
    /*00025a14*/ STR         R5, [R4, #60]               @ 0x3c 
    /*00025a18*/ STR         R5, [R4, #92]               @ 0x5c 
    /*00025a1c*/ STR         R5, [R4, #116]              @ 0x74 
    /*00025a20*/ STR         R1, [R4, #24] 
    /*00025a24*/ STR         R1, [R4, #28] 
    /*00025a28*/ STR         R1, [R4, #100]              @ 0x64 
    /*00025a2c*/ STR         R1, [R4, #104]              @ 0x68 
    /*00025a30*/ MOV         R1, #8 
    /*00025a34*/ STR         IP, [R4, #12] 
    /*00025a38*/ MOV         IP, #3 
    /*00025a3c*/ STR         R0, [R4, #32] 
    /*00025a40*/ STR         R0, [R4, #36]               @ 0x24 
    /*00025a44*/ STR         R0, [R4, #108]              @ 0x6c 
    /*00025a48*/ STR         R0, [R4, #112]              @ 0x70 
    /*00025a4c*/ MOV         R0, #255                    @ 0xff 
    /*00025a50*/ STR         LR, [R4, #64]               @ 0x40 
    /*00025a54*/ STR         LR, [R4, #68]               @ 0x44 
    /*00025a58*/ MOV         LR, #11 
    /*00025a5c*/ STR         IP, [R4, #280]              @ 0x118 
    /*00025a60*/ STR         R3, [R4] 
    /*00025a64*/ STR         R3, [R4, #8] 
    /*00025a68*/ STR         R3, [R4, #16] 
    /*00025a6c*/ STR         R3, [R4, #48]               @ 0x30 
    /*00025a70*/ STR         R3, [R4, #84]               @ 0x54 
    /*00025a74*/ STR         R2, [R4, #4] 
    /*00025a78*/ STR         R2, [R4, #20] 
    /*00025a7c*/ STR         R2, [R4, #52]               @ 0x34 
    /*00025a80*/ STR         R2, [R4, #276]              @ 0x114 
    /*00025a84*/ STR         R2, [R4, #88]               @ 0x58 
    /*00025a88*/ STR         R7, [R4, #80]               @ 0x50 
    /*00025a8c*/ STR         R1, [R4, #96]               @ 0x60 
    /*00025a90*/ STR         R5, [R4, #120]              @ 0x78 
    /*00025a94*/ MVN         R5, #50                     @ 0x32 
    /*00025a98*/ STR         IP, [R4, #136]              @ 0x88 
    /*00025a9c*/ MOV         IP, #51                     @ 0x33 
    /*00025aa0*/ STR         LR, [R4, #148]              @ 0x94 
    /*00025aa4*/ MOV         LR, #64                     @ 0x40 
    /*00025aa8*/ STR         R3, [R4, #124]              @ 0x7c 
    /*00025aac*/ STR         R3, [R4, #128]              @ 0x80 
    /*00025ab0*/ STR         R3, [R4, #132]              @ 0x84 
    /*00025ab4*/ STR         R1, [R4, #140]              @ 0x8c 
    /*00025ab8*/ STR         R3, [R4, #156]              @ 0x9c 
    /*00025abc*/ STR         R3, [R4, #160]              @ 0xa0 
    /*00025ac0*/ STR         R3, [R4, #164]              @ 0xa4 
    /*00025ac4*/ STR         R3, [R4, #172]              @ 0xac 
    /*00025ac8*/ STR         R3, [R4, #176]              @ 0xb0 
    /*00025acc*/ STR         R3, [R4, #180]              @ 0xb4 
    /*00025ad0*/ STR         R3, [R4, #184]              @ 0xb8 
    /*00025ad4*/ STR         R3, [R4, #192]              @ 0xc0 
    /*00025ad8*/ STR         R3, [R4, #196]              @ 0xc4 
    /*00025adc*/ STR         R3, [R4, #200]              @ 0xc8 
    /*00025ae0*/ STR         R3, [R4, #204]              @ 0xcc 
    /*00025ae4*/ STR         R3, [R4, #212]              @ 0xd4 
    /*00025ae8*/ STR         R2, [R4, #216]              @ 0xd8 
    /*00025aec*/ STR         R3, [R4, #220]              @ 0xdc 
    /*00025af0*/ STR         R2, [R4, #224]              @ 0xe0 
    /*00025af4*/ STR         R2, [R4, #232]              @ 0xe8 
    /*00025af8*/ STR         R3, [R4, #236]              @ 0xec 
    /*00025afc*/ STR         R2, [R4, #240]              @ 0xf0 
    /*00025b00*/ STR         R3, [R4, #244]              @ 0xf4 
    /*00025b04*/ STR         R3, [R4, #248]              @ 0xf8 
    /*00025b08*/ STR         R3, [R4, #252]              @ 0xfc 
    /*00025b0c*/ STR         R6, [R4, #144]              @ 0x90 
    /*00025b10*/ STR         R0, [R4, #168]              @ 0xa8 
    /*00025b14*/ STR         R0, [R4, #188]              @ 0xbc 
    /*00025b18*/ STR         R0, [R4, #208]              @ 0xd0 
    /*00025b1c*/ STR         IP, [R4, #264]              @ 0x108 
    /*00025b20*/ STR         R3, [R4, #260]              @ 0x104 
    /*00025b24*/ STR         R2, [R4, #308]              @ 0x134 
    /*00025b28*/ STR         IP, [R4, #272]              @ 0x110 
    /*00025b2c*/ STR         R3, [R4, #304]              @ 0x130 
    /*00025b30*/ STR         R1, [R4, #316]              @ 0x13c 
    /*00025b34*/ STR         R5, [R4, #268]              @ 0x10c 
    /*00025b38*/ STR         LR, [R4, #312]              @ 0x138 
    /*00025b3c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_GetRgnCapacity_x25b40:
    /*00025b40*/ MOV         R2, #0 
    /*00025b44*/ MOV         R3, #1 
    /*00025b48*/ MOV         R1, #2 
    /*00025b4c*/ MOVW        LR, #8190                   @ 0x1ffe 
    /*00025b50*/ MOV         R0, #8192                   @ 0x2000 
    /*00025b54*/ STR         R5, [R4, #136]              @ 0x88 
    /*00025b58*/ MOV         IP, #7 
    /*00025b5c*/ STR         R1, [R4, #40]               @ 0x28 
    /*00025b60*/ STR         IP, [R4, #12] 
    /*00025b64*/ MOV         R5, #9 
    /*00025b68*/ MOV         IP, #8 
    /*00025b6c*/ STR         R1, [R4, #44]               @ 0x2c 
    /*00025b70*/ STR         R1, [R4, #72]               @ 0x48 
    /*00025b74*/ MOV         R6, #67108864               @ 0x4000000 
    /*00025b78*/ STR         R1, [R4, #76]               @ 0x4c 
    /*00025b7c*/ STR         R1, [R4, #56]               @ 0x38 
    /*00025b80*/ STR         R1, [R4, #60]               @ 0x3c 
    /*00025b84*/ MOV         R1, #255                    @ 0xff 
    /*00025b88*/ STR         LR, [R4, #32] 
    /*00025b8c*/ STR         LR, [R4, #36]               @ 0x24 
    /*00025b90*/ MOV         LR, #11 
    /*00025b94*/ STR         R0, [R4, #64]               @ 0x40 
    /*00025b98*/ STR         R0, [R4, #68]               @ 0x44 
    /*00025b9c*/ MOV         R0, #51                     @ 0x33 
    /*00025ba0*/ STR         R5, [R4, #144]              @ 0x90 
    /*00025ba4*/ MVN         R5, #50                     @ 0x32 
    /*00025ba8*/ STR         LR, [R4, #148]              @ 0x94 
    /*00025bac*/ MOV         LR, #64                     @ 0x40 
    /*00025bb0*/ STR         R2, [R4] 
    /*00025bb4*/ STR         R2, [R4, #8] 
    /*00025bb8*/ STR         R2, [R4, #16] 
    /*00025bbc*/ STR         R2, [R4, #24] 
    /*00025bc0*/ STR         R2, [R4, #28] 
    /*00025bc4*/ STR         R2, [R4, #52]               @ 0x34 
    /*00025bc8*/ STR         R2, [R4, #132]              @ 0x84 
    /*00025bcc*/ STR         R2, [R4, #160]              @ 0xa0 
    /*00025bd0*/ STR         R3, [R4, #4] 
    /*00025bd4*/ STR         R3, [R4, #20] 
    /*00025bd8*/ STR         R3, [R4, #48]               @ 0x30 
    /*00025bdc*/ STR         R3, [R4, #124]              @ 0x7c 
    /*00025be0*/ STR         R3, [R4, #128]              @ 0x80 
    /*00025be4*/ STR         R3, [R4, #156]              @ 0x9c 
    /*00025be8*/ STR         R3, [R4, #164]              @ 0xa4 
    /*00025bec*/ STR         R6, [R4, #80]               @ 0x50 
    /*00025bf0*/ STR         IP, [R4, #140]              @ 0x8c 
    /*00025bf4*/ STR         R1, [R4, #168]              @ 0xa8 
    /*00025bf8*/ STR         R2, [R4, #172]              @ 0xac 
    /*00025bfc*/ STR         IP, [R4, #316]              @ 0x13c 
    /*00025c00*/ STR         R3, [R4, #176]              @ 0xb0 
    /*00025c04*/ STR         R2, [R4, #180]              @ 0xb4 
    /*00025c08*/ STR         R3, [R4, #184]              @ 0xb8 
    /*00025c0c*/ STR         R1, [R4, #188]              @ 0xbc 
    /*00025c10*/ STR         R2, [R4, #192]              @ 0xc0 
    /*00025c14*/ STR         R2, [R4, #196]              @ 0xc4 
    /*00025c18*/ STR         R2, [R4, #200]              @ 0xc8 
    /*00025c1c*/ STR         R3, [R4, #204]              @ 0xcc 
    /*00025c20*/ STR         R1, [R4, #208]              @ 0xd0 
    /*00025c24*/ STR         R2, [R4, #212]              @ 0xd4 
    /*00025c28*/ STR         R3, [R4, #216]              @ 0xd8 
    /*00025c2c*/ STR         R3, [R4, #220]              @ 0xdc 
    /*00025c30*/ STR         R3, [R4, #224]              @ 0xe0 
    /*00025c34*/ STR         R3, [R4, #232]              @ 0xe8 
    /*00025c38*/ STR         R2, [R4, #236]              @ 0xec 
    /*00025c3c*/ STR         R3, [R4, #240]              @ 0xf0 
    /*00025c40*/ STR         R2, [R4, #244]              @ 0xf4 
    /*00025c44*/ STR         R2, [R4, #248]              @ 0xf8 
    /*00025c48*/ STR         R3, [R4, #252]              @ 0xfc 
    /*00025c4c*/ STR         R2, [R4, #260]              @ 0x104 
    /*00025c50*/ STR         R3, [R4, #304]              @ 0x130 
    /*00025c54*/ STR         R3, [R4, #308]              @ 0x134 
    /*00025c58*/ STR         R0, [R4, #264]              @ 0x108 
    /*00025c5c*/ STR         R0, [R4, #272]              @ 0x110 
    /*00025c60*/ STR         R5, [R4, #268]              @ 0x10c 
    /*00025c64*/ STR         LR, [R4, #312]              @ 0x138 
    /*00025c68*/ POP         {R4, R5, R6, R7, R8, PC} 
    VPSS_DRV_GetRgnCapacity_x25c6c:
    /*00025c6c*/ MOVW        R3, #0                      @ .LC329 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x98d0] 
    /*00025c70*/ MOVW        R0, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e8] 
    /*00025c74*/ MOVT        R3, #0                      @ .LC329 [R_ARM_MOVT_ABS: .rodata.str1.4+0x98d0] 
    /*00025c78*/ MOVT        R0, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e8] 
    /*00025c7c*/ MOVW        R2, #10324                  @ 0x2854 
    /*00025c80*/ LDR         R1, [PC, #4]                @ 0x0000000000025c8c 
    /*00025c84*/ BL          0x0000000000025C84          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00025c88*/ B           VPSS_DRV_GetRgnCapacity_x25774
    /*00025c8c*/ ANDEQ       R1, R0, R8, ASR #10 
FUNC_END VPSS_DRV_GetRgnCapacity


FUNC_BEGIN VPSS_DRV_RegisterRgnCapacity
    /*00025c90*/ PUSH        {R4, R5, R6, LR} 
    /*00025c94*/ MOV         R5, #1 
    /*00025c98*/ SUB         SP, SP, #352                @ 0x160 
    /*00025c9c*/ MOV         R0, R5 
    /*00025ca0*/ ADD         R1, SP, #24 
    /*00025ca4*/ MOV         R3, #16 
    /*00025ca8*/ STR         R5, [SP, #16] 
    /*00025cac*/ MOV         R6, #7 
    /*00025cb0*/ STR         R3, [SP, #12] 
    /*00025cb4*/ MOV         R3, #0 
    /*00025cb8*/ STR         R6, [SP, #8] 
    /*00025cbc*/ STR         R3, [SP, #20] 
    /*00025cc0*/ BL          0x0000000000025CC0          @ VPSS_DRV_GetRgnCapacity [R_ARM_CALL: .text+0x25764] 
    /*00025cc4*/ MOV         R0, #3 
    /*00025cc8*/ BL          0x0000000000025CC8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025ccc*/ ADD         R1, SP, #24 
    /*00025cd0*/ ADD         R2, SP, #8 
    /*00025cd4*/ LDR         R3, [R0] 
    /*00025cd8*/ MOV         R0, R5 
    /*00025cdc*/ BLX         R3 
    /*00025ce0*/ CMP         R0, #0 
    /*00025ce4*/ BNE         VPSS_DRV_RegisterRgnCapacity_x25d90
    /*00025ce8*/ ADD         R1, SP, #24 
    /*00025cec*/ MOV         R4, #3 
    /*00025cf0*/ MOV         R0, #2 
    /*00025cf4*/ STR         R4, [SP, #16] 
    /*00025cf8*/ BL          0x0000000000025CF8          @ VPSS_DRV_GetRgnCapacity [R_ARM_CALL: .text+0x25764] 
    /*00025cfc*/ MOV         R0, R4 
    /*00025d00*/ BL          0x0000000000025D00          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025d04*/ ADD         R2, SP, #8 
    /*00025d08*/ ADD         R1, SP, #24 
    /*00025d0c*/ LDR         R3, [R0] 
    /*00025d10*/ MOV         R0, #2 
    /*00025d14*/ BLX         R3 
    /*00025d18*/ CMP         R0, #0 
    /*00025d1c*/ BNE         VPSS_DRV_RegisterRgnCapacity_x25dbc
    /*00025d20*/ ADD         R1, SP, #24 
    /*00025d24*/ MOV         R0, R4 
    /*00025d28*/ STR         R4, [SP, #16] 
    /*00025d2c*/ BL          0x0000000000025D2C          @ VPSS_DRV_GetRgnCapacity [R_ARM_CALL: .text+0x25764] 
    /*00025d30*/ MOV         R0, R4 
    /*00025d34*/ BL          0x0000000000025D34          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025d38*/ ADD         R2, SP, #8 
    /*00025d3c*/ ADD         R1, SP, #24 
    /*00025d40*/ LDR         R3, [R0] 
    /*00025d44*/ MOV         R0, R4 
    /*00025d48*/ BLX         R3 
    /*00025d4c*/ CMP         R0, #0 
    /*00025d50*/ BNE         VPSS_DRV_RegisterRgnCapacity_x25e00
    /*00025d54*/ ADD         R1, SP, #24 
    /*00025d58*/ MOV         R0, #4 
    /*00025d5c*/ STR         R5, [SP, #16] 
    /*00025d60*/ BL          0x0000000000025D60          @ VPSS_DRV_GetRgnCapacity [R_ARM_CALL: .text+0x25764] 
    /*00025d64*/ MOV         R0, R4 
    /*00025d68*/ BL          0x0000000000025D68          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025d6c*/ ADD         R2, SP, #8 
    /*00025d70*/ ADD         R1, SP, #24 
    /*00025d74*/ LDR         R3, [R0] 
    /*00025d78*/ MOV         R0, #4 
    /*00025d7c*/ BLX         R3 
    /*00025d80*/ CMP         R0, #0 
    /*00025d84*/ BNE         VPSS_DRV_RegisterRgnCapacity_x25e3c
    VPSS_DRV_RegisterRgnCapacity_x25d88:
    /*00025d88*/ ADD         SP, SP, #352                @ 0x160 
    /*00025d8c*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_RegisterRgnCapacity_x25d90:
    /*00025d90*/ MOVW        R3, #10736                  @ 0x29f0 
    /*00025d94*/ MOV         R1, R6 
    /*00025d98*/ STR         R3, [SP] 
    /*00025d9c*/ MOVW        R2, #0                      @ .LC330 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x98e8] 
    /*00025da0*/ LDR         R3, [PC, #208]              @ 0x0000000000025e78 
    /*00025da4*/ MOVT        R2, #0                      @ .LC330 [R_ARM_MOVT_ABS: .rodata.str1.4+0x98e8] 
    /*00025da8*/ MOV         R0, #3 
    /*00025dac*/ BL          0x0000000000025DAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025db0*/ MOVW        R0, #32784                  @ 0x8010 
    /*00025db4*/ MOVT        R0, #40967                  @ 0xa007 
    /*00025db8*/ B           VPSS_DRV_RegisterRgnCapacity_x25d88
    VPSS_DRV_RegisterRgnCapacity_x25dbc:
    /*00025dbc*/ MOVW        R3, #10748                  @ 0x29fc 
    /*00025dc0*/ MOVW        R2, #0                      @ .LC331 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9918] 
    /*00025dc4*/ STR         R3, [SP] 
    /*00025dc8*/ MOV         R1, R6 
    /*00025dcc*/ MOV         R0, R4 
    /*00025dd0*/ MOVT        R2, #0                      @ .LC331 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9918] 
    /*00025dd4*/ LDR         R3, [PC, #156]              @ 0x0000000000025e78 
    /*00025dd8*/ BL          0x0000000000025DD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_DRV_RegisterRgnCapacity_x25ddc:
    /*00025ddc*/ MOV         R0, #3 
    /*00025de0*/ BL          0x0000000000025DE0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025de4*/ MOV         R1, #7 
    /*00025de8*/ LDR         R3, [R0, #4] 
    /*00025dec*/ MOV         R0, #1 
    /*00025df0*/ BLX         R3 
    /*00025df4*/ MOVW        R0, #32784                  @ 0x8010 
    /*00025df8*/ MOVT        R0, #40967                  @ 0xa007 
    /*00025dfc*/ B           VPSS_DRV_RegisterRgnCapacity_x25d88
    VPSS_DRV_RegisterRgnCapacity_x25e00:
    /*00025e00*/ MOVW        R3, #10759                  @ 0x2a07 
    /*00025e04*/ MOVW        R2, #0                      @ .LC332 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x994c] 
    /*00025e08*/ STR         R3, [SP] 
    /*00025e0c*/ MOV         R1, R6 
    /*00025e10*/ MOV         R0, R4 
    /*00025e14*/ MOVT        R2, #0                      @ .LC332 [R_ARM_MOVT_ABS: .rodata.str1.4+0x994c] 
    /*00025e18*/ LDR         R3, [PC, #88]               @ 0x0000000000025e78 
    /*00025e1c*/ BL          0x0000000000025E1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VPSS_DRV_RegisterRgnCapacity_x25e20:
    /*00025e20*/ MOV         R0, #3 
    /*00025e24*/ BL          0x0000000000025E24          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025e28*/ MOV         R1, #7 
    /*00025e2c*/ LDR         R3, [R0, #4] 
    /*00025e30*/ MOV         R0, #2 
    /*00025e34*/ BLX         R3 
    /*00025e38*/ B           VPSS_DRV_RegisterRgnCapacity_x25ddc
    VPSS_DRV_RegisterRgnCapacity_x25e3c:
    /*00025e3c*/ MOV         R1, R6 
    /*00025e40*/ MOVW        R3, #10771                  @ 0x2a13 
    /*00025e44*/ MOV         R0, R4 
    /*00025e48*/ STR         R3, [SP] 
    /*00025e4c*/ MOVW        R2, #0                      @ .LC333 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9980] 
    /*00025e50*/ LDR         R3, [PC, #32]               @ 0x0000000000025e78 
    /*00025e54*/ MOVT        R2, #0                      @ .LC333 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9980] 
    /*00025e58*/ BL          0x0000000000025E58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025e5c*/ MOV         R0, R4 
    /*00025e60*/ BL          0x0000000000025E60          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025e64*/ MOV         R1, R6 
    /*00025e68*/ LDR         R3, [R0, #4] 
    /*00025e6c*/ MOV         R0, R4 
    /*00025e70*/ BLX         R3 
    /*00025e74*/ B           VPSS_DRV_RegisterRgnCapacity_x25e20
    /*00025e78*/ ANDEQ       R1, R0, R0, ROR #10 
FUNC_END VPSS_DRV_RegisterRgnCapacity


FUNC_BEGIN VPSS_DRV_UnRegisterRgnCapacity
    /*00025e7c*/ PUSH        {R4, LR} 
    /*00025e80*/ MOV         R0, #3 
    /*00025e84*/ BL          0x0000000000025E84          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025e88*/ MOV         R1, #7 
    /*00025e8c*/ LDR         R3, [R0, #4] 
    /*00025e90*/ MOV         R0, #1 
    /*00025e94*/ BLX         R3 
    /*00025e98*/ MOV         R0, #3 
    /*00025e9c*/ BL          0x0000000000025E9C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025ea0*/ MOV         R1, #7 
    /*00025ea4*/ LDR         R3, [R0, #4] 
    /*00025ea8*/ MOV         R0, #2 
    /*00025eac*/ BLX         R3 
    /*00025eb0*/ MOV         R0, #3 
    /*00025eb4*/ BL          0x0000000000025EB4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025eb8*/ MOV         R1, #7 
    /*00025ebc*/ LDR         R3, [R0, #4] 
    /*00025ec0*/ MOV         R0, #3 
    /*00025ec4*/ BLX         R3 
    /*00025ec8*/ MOV         R0, #3 
    /*00025ecc*/ BL          0x0000000000025ECC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025ed0*/ MOV         R1, #7 
    /*00025ed4*/ LDR         R3, [R0, #4] 
    /*00025ed8*/ MOV         R0, #4 
    /*00025edc*/ BLX         R3 
    /*00025ee0*/ MOV         R0, #0 
    /*00025ee4*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_UnRegisterRgnCapacity


FUNC_BEGIN VPSS_DRV_PrintWorkStatus
    /*00025ee8*/ BX          LR 
FUNC_END VPSS_DRV_PrintWorkStatus


FUNC_BEGIN VPSS_DRV_IsChnSurpport
    /*00025eec*/ CMP         R1, #6 
    /*00025ef0*/ LDRLS       PC, [PC, R1, LSL #2] 
    /*00025ef4*/ B           VPSS_DRV_IsChnSurpport_x25f24
    /*00025ef8*/ ANDEQ       R5, R2, IP, LSL PC 
    /*00025efc*/ ANDEQ       R5, R2, R4, LSL PC 
    /*00025f00*/ ANDEQ       R5, R2, R4, LSL PC 
    /*00025f04*/ ANDEQ       R5, R2, R4, LSL PC 
    /*00025f08*/ ANDEQ       R5, R2, IP, LSL PC 
    /*00025f0c*/ ANDEQ       R5, R2, R4, LSL PC 
    /*00025f10*/ ANDEQ       R5, R2, R4, LSL PC 
    /*00025f14*/ MOV         R0, #1 
    /*00025f18*/ BX          LR 
    /*00025f1c*/ MOV         R0, #0 
    /*00025f20*/ BX          LR 
    VPSS_DRV_IsChnSurpport_x25f24:
    /*00025f24*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00025f28*/ SUB         SP, SP, #12 
    /*00025f2c*/ MOVW        R3, #10867                  @ 0x2a73 
    /*00025f30*/ MOVW        R2, #0                      @ .LC334 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x99b0] 
    /*00025f34*/ STR         R1, [SP, #4] 
    /*00025f38*/ MOVT        R2, #0                      @ .LC334 [R_ARM_MOVT_ABS: .rodata.str1.4+0x99b0] 
    /*00025f3c*/ STR         R3, [SP] 
    /*00025f40*/ MOV         R1, #7 
    /*00025f44*/ LDR         R3, [PC, #16]               @ 0x0000000000025f5c 
    /*00025f48*/ MOV         R0, #3 
    /*00025f4c*/ BL          0x0000000000025F4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025f50*/ MOV         R0, #0 
    /*00025f54*/ ADD         SP, SP, #12 
    /*00025f58*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00025f5c*/ ANDEQ       R1, R0, R0, LSL #11 
FUNC_END VPSS_DRV_IsChnSurpport


FUNC_BEGIN Vpss_DRV_GetGrpAttr
    /*00025f60*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00025f64*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00025f68*/ LDR         R3, [R3, R0, LSL #2] 
    /*00025f6c*/ MOV         R0, #0 
    /*00025f70*/ ADD         R3, R3, #4 
    /*00025f74*/ STR         R3, [R1] 
    /*00025f78*/ BX          LR 
FUNC_END Vpss_DRV_GetGrpAttr


FUNC_BEGIN VPSS_DRV_ResetGrp
    /*00025f7c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00025f80*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00025f84*/ PUSH        {R4, LR} 
    /*00025f88*/ MOV         R2, #24 
    /*00025f8c*/ LDR         R4, [R3, R0, LSL #2] 
    /*00025f90*/ MOV         R1, #0 
    /*00025f94*/ ADD         R0, R4, #16896              @ 0x4200 
    /*00025f98*/ ADD         R0, R0, #96                 @ 0x60 
    /*00025f9c*/ BL          0x0000000000025F9C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00025fa0*/ ADD         R0, R4, #16896              @ 0x4200 
    /*00025fa4*/ MOV         R2, #44                     @ 0x2c 
    /*00025fa8*/ ADD         R4, R4, #16384              @ 0x4000 
    /*00025fac*/ MOV         R1, #0 
    /*00025fb0*/ ADD         R0, R0, #128                @ 0x80 
    /*00025fb4*/ BL          0x0000000000025FB4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00025fb8*/ MOV         R3, #0 
    /*00025fbc*/ MOV         R2, #5 
    /*00025fc0*/ STR         R3, [R4, #684]              @ 0x2ac 
    /*00025fc4*/ MOV         R0, R3 
    /*00025fc8*/ STR         R2, [R4, #636]              @ 0x27c 
    /*00025fcc*/ STR         R3, [R4, #688]              @ 0x2b0 
    /*00025fd0*/ POP         {R4, PC} 
FUNC_END VPSS_DRV_ResetGrp


FUNC_BEGIN VPSS_DRV_GetPFCNT
    /*00025fd4*/ MOV         R0, #1 
    /*00025fd8*/ BX          LR 
FUNC_END VPSS_DRV_GetPFCNT


FUNC_BEGIN VPSS_DRV_CalcInputFrameRate
    /*00025fdc*/ BX          LR 
FUNC_END VPSS_DRV_CalcInputFrameRate


FUNC_BEGIN VPSS_DRV_GetIpEn
    /*00025fe0*/ MOV         R0, #0 
    /*00025fe4*/ BX          LR 
FUNC_END VPSS_DRV_GetIpEn


FUNC_BEGIN VPSS_DRV_GetDefaultViVpssMode
    /*00025fe8*/ MOV         R3, #0 
    /*00025fec*/ STR         R3, [R0] 
    /*00025ff0*/ STR         R3, [R0, #4] 
    /*00025ff4*/ STR         R3, [R0, #8] 
    /*00025ff8*/ STR         R3, [R0, #12] 
    /*00025ffc*/ BX          LR 
FUNC_END VPSS_DRV_GetDefaultViVpssMode


FUNC_BEGIN VPSS_DRV_IsNeedOfflineSplit
    /*00026000*/ MOV         R0, #0 
    /*00026004*/ BX          LR 
FUNC_END VPSS_DRV_IsNeedOfflineSplit


FUNC_BEGIN VPSS_DRV_IsIpAvailable
    /*00026008*/ MOVW        R3, #0                      @ g_aenVPSSGrpMode [R_ARM_MOVW_ABS_NC: .bss+0x604] 
    /*0002600c*/ MOVT        R3, #0                      @ g_aenVPSSGrpMode [R_ARM_MOVT_ABS: .bss+0x604] 
    /*00026010*/ LDR         R3, [R3] 
    /*00026014*/ CMP         R3, #0 
    /*00026018*/ BNE         VPSS_DRV_IsIpAvailable_x26044
    /*0002601c*/ MOVW        R2, #0                      @ g_stSynchCtx [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00026020*/ MOVT        R2, #0                      @ g_stSynchCtx [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00026024*/ MOV         IP, #92                     @ 0x5c 
    /*00026028*/ MLA         R0, IP, R0, R2 
    /*0002602c*/ LDR         R2, [R0, #8] 
    /*00026030*/ CMP         R2, #1 
    /*00026034*/ STRNE       R3, [R1] 
    /*00026038*/ MOVNE       R0, R3 
    /*0002603c*/ MVNEQ       R0, #0 
    /*00026040*/ BX          LR 
    VPSS_DRV_IsIpAvailable_x26044:
    /*00026044*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00026048*/ SUB         SP, SP, #12 
    /*0002604c*/ MOVW        R3, #10982                  @ 0x2ae6 
    /*00026050*/ MOV         R1, #7 
    /*00026054*/ STR         R0, [SP, #4] 
    /*00026058*/ MOVW        R2, #0                      @ .LC335 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x99ec] 
    /*0002605c*/ STR         R3, [SP] 
    /*00026060*/ MOVT        R2, #0                      @ .LC335 [R_ARM_MOVT_ABS: .rodata.str1.4+0x99ec] 
    /*00026064*/ LDR         R3, [PC, #16]               @ 0x000000000002607c 
    /*00026068*/ MOV         R0, #3 
    /*0002606c*/ BL          0x000000000002606C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00026070*/ MVN         R0, #0 
    /*00026074*/ ADD         SP, SP, #12 
    /*00026078*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0002607c*/ MULEQ       R0, R8, R5 
FUNC_END VPSS_DRV_IsIpAvailable


FUNC_BEGIN VPSS_DRV_GetChipAbility
    /*00026080*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00026084*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00026088*/ LDR         R3, [R3] 
    /*0002608c*/ LDRB        R3, [R3, #40]               @ 0x28 
    /*00026090*/ SUB         R2, R3, #1 
    /*00026094*/ CMP         R2, #1 
    /*00026098*/ BLS         VPSS_DRV_GetChipAbility_x260bc
    /*0002609c*/ SUB         R2, R3, #5 
    /*000260a0*/ CMP         R2, #1 
    /*000260a4*/ BLS         VPSS_DRV_GetChipAbility_x2610c
    /*000260a8*/ CMP         R3, #9 
    /*000260ac*/ CMPNE       R3, #0 
    /*000260b0*/ BEQ         VPSS_DRV_GetChipAbility_x260e4
    /*000260b4*/ CMP         R3, #12 
    /*000260b8*/ BEQ         VPSS_DRV_GetChipAbility_x26134
    VPSS_DRV_GetChipAbility_x260bc:
    /*000260bc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000260c0*/ MOVW        R2, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x7550] 
    /*000260c4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000260c8*/ MOVT        R2, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x7550] 
    /*000260cc*/ MOV         R1, #2304                   @ 0x900 
    /*000260d0*/ MOV         R0, #2 
    /*000260d4*/ STR         R1, [R3, #64]               @ 0x40 
    /*000260d8*/ STR         R1, [R3, #68]               @ 0x44 
    /*000260dc*/ STR         R0, [R2, #-2808]            @ 0xfffff508 
    /*000260e0*/ BX          LR 
    VPSS_DRV_GetChipAbility_x260e4:
    /*000260e4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000260e8*/ MOVW        R2, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x7550] 
    /*000260ec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000260f0*/ MOVT        R2, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x7550] 
    /*000260f4*/ MOV         R1, #4608                   @ 0x1200 
    /*000260f8*/ MOV         R0, #0 
    /*000260fc*/ STR         R1, [R3, #64]               @ 0x40 
    /*00026100*/ STR         R1, [R3, #68]               @ 0x44 
    /*00026104*/ STR         R0, [R2, #-2808]            @ 0xfffff508 
    /*00026108*/ BX          LR 
    VPSS_DRV_GetChipAbility_x2610c:
    /*0002610c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00026110*/ MOVW        R2, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x7550] 
    /*00026114*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00026118*/ MOVT        R2, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x7550] 
    /*0002611c*/ MOV         R1, #2688                   @ 0xa80 
    /*00026120*/ MOV         R0, #0 
    /*00026124*/ STR         R1, [R3, #64]               @ 0x40 
    /*00026128*/ STR         R1, [R3, #68]               @ 0x44 
    /*0002612c*/ STR         R0, [R2, #-2808]            @ 0xfffff508 
    /*00026130*/ BX          LR 
    VPSS_DRV_GetChipAbility_x26134:
    /*00026134*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*00026138*/ MOVW        R2, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x7550] 
    /*0002613c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*00026140*/ MOVT        R2, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x7550] 
    /*00026144*/ MOV         R1, #4608                   @ 0x1200 
    /*00026148*/ MOV         R0, #2 
    /*0002614c*/ STR         R1, [R3, #64]               @ 0x40 
    /*00026150*/ STR         R1, [R3, #68]               @ 0x44 
    /*00026154*/ STR         R0, [R2, #-2808]            @ 0xfffff508 
    /*00026158*/ BX          LR 
FUNC_END VPSS_DRV_GetChipAbility


FUNC_BEGIN VPSS_DRV_FrequencyRestriction
    /*0002615c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00026160*/ SUB         SP, SP, #20 
    /*00026164*/ MOV         R0, #2 
    /*00026168*/ MOV         R2, #7 
    /*0002616c*/ MOV         R3, #0 
    /*00026170*/ STMIB       SP, {R2, R3} 
    /*00026174*/ BL          0x0000000000026174          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00026178*/ MOV         R2, SP 
    /*0002617c*/ MOV         R1, #127                    @ 0x7f 
    /*00026180*/ LDR         R3, [R0, #20] 
    /*00026184*/ ADD         R0, SP, #4 
    /*00026188*/ BLX         R3 
    /*0002618c*/ MOVW        R3, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x7550] 
    /*00026190*/ MOVT        R3, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x7550] 
    /*00026194*/ LDR         R2, [SP] 
    /*00026198*/ LDR         R3, [R3, #-2808]            @ 0xfffff508 
    /*0002619c*/ CMP         R2, R3 
    /*000261a0*/ BCS         VPSS_DRV_FrequencyRestriction_x261c4
    /*000261a4*/ MOV         R0, #2 
    /*000261a8*/ STR         R3, [SP] 
    /*000261ac*/ BL          0x00000000000261AC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000261b0*/ MOV         R2, SP 
    /*000261b4*/ MOV         R1, #128                    @ 0x80 
    /*000261b8*/ LDR         R3, [R0, #20] 
    /*000261bc*/ ADD         R0, SP, #4 
    /*000261c0*/ BLX         R3 
    VPSS_DRV_FrequencyRestriction_x261c4:
    /*000261c4*/ ADD         SP, SP, #20 
    /*000261c8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VPSS_DRV_FrequencyRestriction


FUNC_BEGIN VPSS_DRV_OnlineSetFrameIntAttr
    /*000261cc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*000261d0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*000261d4*/ PUSH        {R4, R5, R6, LR} 
    /*000261d8*/ MOV         R5, R1 
    /*000261dc*/ LDR         R4, [R3, R0, LSL #2] 
    /*000261e0*/ CMP         R4, #0 
    /*000261e4*/ BEQ         VPSS_DRV_OnlineSetFrameIntAttr_x2622c
    VPSS_DRV_OnlineSetFrameIntAttr_x261e8:
    /*000261e8*/ LDR         R3, [R5] 
    /*000261ec*/ CMP         R3, #0 
    /*000261f0*/ BEQ         VPSS_DRV_OnlineSetFrameIntAttr_x26218
    /*000261f4*/ CMP         R3, #2 
    /*000261f8*/ ADDEQ       R4, R4, #28672              @ 0x7000 
    /*000261fc*/ MOVWEQ      R3, #29697                  @ 0x7401 
    /*00026200*/ STREQ       R3, [R4, #1664]             @ 0x680 
    /*00026204*/ BEQ         VPSS_DRV_OnlineSetFrameIntAttr_x26210
    /*00026208*/ CMP         R3, #1 
    /*0002620c*/ BEQ         VPSS_DRV_OnlineSetFrameIntAttr_x26218
    VPSS_DRV_OnlineSetFrameIntAttr_x26210:
    /*00026210*/ MOV         R0, #0 
    /*00026214*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_OnlineSetFrameIntAttr_x26218:
    /*00026218*/ ADD         R4, R4, #28672              @ 0x7000 
    /*0002621c*/ MOV         R3, #29696                  @ 0x7400 
    /*00026220*/ MOV         R0, #0 
    /*00026224*/ STR         R3, [R4, #1664]             @ 0x680 
    /*00026228*/ POP         {R4, R5, R6, PC} 
    VPSS_DRV_OnlineSetFrameIntAttr_x2622c:
    /*0002622c*/ MOVW        R3, #0                      @ .LC336 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9a1c] 
    /*00026230*/ MOVW        R0, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e8] 
    /*00026234*/ MOVT        R3, #0                      @ .LC336 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9a1c] 
    /*00026238*/ MOVT        R0, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e8] 
    /*0002623c*/ MOVW        R2, #11063                  @ 0x2b37 
    /*00026240*/ LDR         R1, [PC, #4]                @ 0x000000000002624c 
    /*00026244*/ BL          0x0000000000026244          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00026248*/ B           VPSS_DRV_OnlineSetFrameIntAttr_x261e8
    /*0002624c*/ @           <UNDEFINED> instruction: 0x000015b0 
FUNC_END VPSS_DRV_OnlineSetFrameIntAttr


FUNC_BEGIN VPSS_DRV_PerformanceRestriction
    /*00026250*/ PUSH        {R4, LR} 
    /*00026254*/ BL          0x0000000000026254          @ VPSS_DRV_GetChipAbility [R_ARM_CALL: .text+0x26080] 
    /*00026258*/ POP         {R4, LR} 
    VPSS_DRV_PerformanceRestriction_x2625c:
    /*0002625c*/ B           VPSS_DRV_PerformanceRestriction_x2625c@ VPSS_DRV_FrequencyRestriction [R_ARM_JUMP24: .text+0x2615c] 
FUNC_END VPSS_DRV_PerformanceRestriction


FUNC_BEGIN VPSS_DRV_IsGdcExist
    /*00026260*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00026264*/ MOV         R0, #37                     @ 0x25 
    /*00026268*/ SUB         SP, SP, #12 
    /*0002626c*/ BL          0x000000000002626C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00026270*/ CMP         R0, #0 
    /*00026274*/ BEQ         VPSS_DRV_IsGdcExist_x2629c
    /*00026278*/ LDR         R3, [R0, #100]              @ 0x64 
    /*0002627c*/ CMP         R3, #0 
    /*00026280*/ BEQ         VPSS_DRV_IsGdcExist_x2629c
    /*00026284*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00026288*/ CMP         R3, #0 
    /*0002628c*/ MOVNE       R0, #1 
    /*00026290*/ BEQ         VPSS_DRV_IsGdcExist_x2629c
    /*00026294*/ ADD         SP, SP, #12 
    /*00026298*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_DRV_IsGdcExist_x2629c:
    /*0002629c*/ MOV         R1, #7 
    /*000262a0*/ MOVW        R3, #11100                  @ 0x2b5c 
    /*000262a4*/ MOV         R0, R1 
    /*000262a8*/ STR         R3, [SP] 
    /*000262ac*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b68] 
    /*000262b0*/ LDR         R3, [PC, #16]               @ 0x00000000000262c8 
    /*000262b4*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b68] 
    /*000262b8*/ BL          0x00000000000262B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000262bc*/ MOV         R0, #0 
    /*000262c0*/ ADD         SP, SP, #12 
    /*000262c4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000262c8*/ LDRDEQ      R1, [R0], -R0 
FUNC_END VPSS_DRV_IsGdcExist


FUNC_BEGIN VPSS_DRV_GetOnlineVpssId
    /*000262cc*/ MOV         R0, #0 
    /*000262d0*/ BX          LR 
FUNC_END VPSS_DRV_GetOnlineVpssId


FUNC_BEGIN VPSS_DRV_SetDefaultIntType
    /*000262d4*/ CMP         R1, #0 
    /*000262d8*/ MOVNE       R3, #0 
    /*000262dc*/ STRNE       R3, [R1] 
    /*000262e0*/ STRNE       R3, [R1, #4] 
    /*000262e4*/ BX          LR 
FUNC_END VPSS_DRV_SetDefaultIntType


FUNC_BEGIN VPSS_DRV_Put_VbForVgs
    /*000262e8*/ MOVW        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000262ec*/ CMP         R2, #0 
    /*000262f0*/ MOVT        R3, #0                      @ g_pstGrpCtx [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000262f4*/ LDR         R3, [R3, R0, LSL #2] 
    /*000262f8*/ BEQ         VPSS_DRV_Put_VbForVgs_x26330
    /*000262fc*/ MOV         IP, #24 
    /*00026300*/ MOVW        R0, #32064                  @ 0x7d40 
    /*00026304*/ MLA         R1, IP, R1, R3 
    /*00026308*/ LDR         R3, [R1, R0] 
    /*0002630c*/ CMP         R3, #0 
    /*00026310*/ BNE         VPSS_DRV_Put_VbForVgs_x26324
    /*00026314*/ MOVW        R3, #32060                  @ 0x7d3c 
    /*00026318*/ LDR         R3, [R1, R3] 
    /*0002631c*/ CMP         R3, #0 
    /*00026320*/ BXEQ        LR 
    VPSS_DRV_Put_VbForVgs_x26324:
    /*00026324*/ MOV         R0, R2 
    /*00026328*/ MOV         R1, #10 
    VPSS_DRV_Put_VbForVgs_x2632c:
    /*0002632c*/ B           VPSS_DRV_Put_VbForVgs_x2632c@ VPSS_DRV_PutVb [R_ARM_JUMP24: .text+0x18278] 
    VPSS_DRV_Put_VbForVgs_x26330:
    /*00026330*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00026334*/ SUB         SP, SP, #12 
    /*00026338*/ MOVW        R3, #11129                  @ 0x2b79 
    /*0002633c*/ MOV         R1, #7 
    /*00026340*/ STR         R3, [SP] 
    /*00026344*/ MOVW        R2, #0                      @ .LC337 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9a34] 
    /*00026348*/ LDR         R3, [PC, #16]               @ 0x0000000000026360 
    /*0002634c*/ MOVT        R2, #0                      @ .LC337 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9a34] 
    /*00026350*/ MOV         R0, #3 
    /*00026354*/ BL          0x0000000000026354          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00026358*/ ADD         SP, SP, #12 
    /*0002635c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00026360*/ ANDEQ       R1, R0, R4, ROR #11 
FUNC_END VPSS_DRV_Put_VbForVgs


FUNC_BEGIN VPSS_DRV_SnapProc
    /*00026364*/ MOV         R0, #0 
    /*00026368*/ BX          LR 
FUNC_END VPSS_DRV_SnapProc


FUNC_BEGIN VPSS_DRV_IsVgsTaskGrp
    /*0002636c*/ MOV         R0, #0 
    /*00026370*/ BX          LR 
FUNC_END VPSS_DRV_IsVgsTaskGrp


FUNC_BEGIN VPSS_DRV_GetVgsOnlineTaskOpt
    /*00026374*/ BX          LR 
FUNC_END VPSS_DRV_GetVgsOnlineTaskOpt


FUNC_BEGIN VPSS_HAL_Init
    /*00026378*/ PUSH        {R4, LR} 
    /*0002637c*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*00026380*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00026384*/ MOV         R0, #0 
    /*00026388*/ LDR         R3, [R4] 
    /*0002638c*/ CMP         R3, #0 
    /*00026390*/ BEQ         VPSS_HAL_Init_x26398
    /*00026394*/ POP         {R4, PC} 
    VPSS_HAL_Init_x26398:
    /*00026398*/ MOV         R1, #65536                  @ 0x10000 
    /*0002639c*/ MOVT        R0, #4356                   @ 0x1104 
    /*000263a0*/ BL          0x00000000000263A0          @ osal_ioremap [R_ARM_CALL: +0x0] 
    /*000263a4*/ CLZ         R3, R0 
    /*000263a8*/ STR         R0, [R4] 
    /*000263ac*/ LSR         R3, R3, #5 
    /*000263b0*/ RSB         R0, R3, #0 
    /*000263b4*/ POP         {R4, PC} 
FUNC_END VPSS_HAL_Init


FUNC_BEGIN VPSS_HAL_Exit
    /*000263b8*/ BX          LR 
FUNC_END VPSS_HAL_Exit


FUNC_BEGIN VPSS_HAL_GetHalChn
    /*000263bc*/ CMP         R0, #2 
    /*000263c0*/ MOVWLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x15fc] 
    /*000263c4*/ MOVTLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x15fc] 
    /*000263c8*/ LDRLS       R0, [R3, R0, LSL #2] 
    /*000263cc*/ MOVHI       R0, #4 
    /*000263d0*/ BX          LR 
FUNC_END VPSS_HAL_GetHalChn


FUNC_BEGIN VPSS_HAL_GetOnlineChnZmeAddr
    /*000263d4*/ CMP         R1, #1 
    /*000263d8*/ BEQ         VPSS_HAL_GetOnlineChnZmeAddr_x26404
    /*000263dc*/ BCC         VPSS_HAL_GetOnlineChnZmeAddr_x263f8
    /*000263e0*/ CMP         R1, #2 
    /*000263e4*/ BNE         VPSS_HAL_GetOnlineChnZmeAddr_x263f4
    /*000263e8*/ ADD         R0, R0, #28672              @ 0x7000 
    /*000263ec*/ STR         R0, [R2] 
    /*000263f0*/ BX          LR 
    VPSS_HAL_GetOnlineChnZmeAddr_x263f4:
    /*000263f4*/ BX          LR 
    VPSS_HAL_GetOnlineChnZmeAddr_x263f8:
    /*000263f8*/ ADD         R0, R0, #20480              @ 0x5000 
    /*000263fc*/ STR         R0, [R2] 
    /*00026400*/ BX          LR 
    VPSS_HAL_GetOnlineChnZmeAddr_x26404:
    /*00026404*/ ADD         R0, R0, #24576              @ 0x6000 
    /*00026408*/ STR         R0, [R2] 
    /*0002640c*/ BX          LR 
FUNC_END VPSS_HAL_GetOnlineChnZmeAddr


FUNC_BEGIN VPSS_HAL_ScaleRegup
    /*00026410*/ LDR         R3, [R0, #16] 
    /*00026414*/ PUSH        {R4, R5, LR} 
    /*00026418*/ SUB         SP, SP, #12 
    /*0002641c*/ MOV         R5, R1 
    /*00026420*/ MOV         R4, R0 
    /*00026424*/ STR         R3, [SP, #4] 
    /*00026428*/ BL          0x0000000000026428          @ osal_dmb [R_ARM_CALL: +0x0] 
    /*0002642c*/ CMP         R5, #1 
    /*00026430*/ BEQ         VPSS_HAL_ScaleRegup_x26474
    /*00026434*/ BCC         VPSS_HAL_ScaleRegup_x26458
    /*00026438*/ CMP         R5, #2 
    /*0002643c*/ LDREQ       R3, [SP, #4] 
    /*00026440*/ ORREQ       R3, R3, #8 
    /*00026444*/ STREQ       R3, [SP, #4] 
    /*00026448*/ LDR         R3, [SP, #4] 
    /*0002644c*/ STR         R3, [R4, #16] 
    /*00026450*/ ADD         SP, SP, #12 
    /*00026454*/ POP         {R4, R5, PC} 
    VPSS_HAL_ScaleRegup_x26458:
    /*00026458*/ LDR         R3, [SP, #4] 
    /*0002645c*/ ORR         R3, R3, #2 
    /*00026460*/ STR         R3, [SP, #4] 
    /*00026464*/ LDR         R3, [SP, #4] 
    /*00026468*/ STR         R3, [R4, #16] 
    /*0002646c*/ ADD         SP, SP, #12 
    /*00026470*/ POP         {R4, R5, PC} 
    VPSS_HAL_ScaleRegup_x26474:
    /*00026474*/ LDR         R3, [SP, #4] 
    /*00026478*/ ORR         R3, R3, #4 
    /*0002647c*/ STR         R3, [SP, #4] 
    /*00026480*/ LDR         R3, [SP, #4] 
    /*00026484*/ STR         R3, [R4, #16] 
    /*00026488*/ ADD         SP, SP, #12 
    /*0002648c*/ POP         {R4, R5, PC} 
FUNC_END VPSS_HAL_ScaleRegup


FUNC_BEGIN VPSS_HAL_SetMask
    /*00026490*/ STR         R1, [R0, #240]              @ 0xf0 
    /*00026494*/ BX          LR 
FUNC_END VPSS_HAL_SetMask


FUNC_BEGIN VPSS_HAL_SetMode
    /*00026498*/ LDR         R3, [R0, #776]              @ 0x308 
    /*0002649c*/ BFI         R3, R1, #1, #1 
    /*000264a0*/ STR         R3, [R0, #776]              @ 0x308 
    /*000264a4*/ BX          LR 
FUNC_END VPSS_HAL_SetMode


FUNC_BEGIN VPSS_HAL_SetNext
    /*000264a8*/ STR         R2, [R0, #760]              @ 0x2f8 
    /*000264ac*/ BX          LR 
FUNC_END VPSS_HAL_SetNext


FUNC_BEGIN VPSS_HAL_SetNodeID
    /*000264b0*/ STR         R1, [R0, #252]              @ 0xfc 
    /*000264b4*/ BX          LR 
FUNC_END VPSS_HAL_SetNodeID


FUNC_BEGIN VPSS_HAL_Start
    /*000264b8*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*000264bc*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*000264c0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000264c4*/ SUB         SP, SP, #12 
    /*000264c8*/ LDR         R4, [IP, R0, LSL #2] 
    /*000264cc*/ MOV         R5, R2 
    /*000264d0*/ MOV         R9, R3 
    /*000264d4*/ MOV         R6, R0 
    /*000264d8*/ LDR         R8, [SP, #40]               @ 0x28 
    /*000264dc*/ STR         R2, [R4, #760]              @ 0x2f8 
    /*000264e0*/ LDR         R7, [SP, #44]               @ 0x2c 
    /*000264e4*/ BL          0x00000000000264E4          @ osal_isb [R_ARM_CALL: +0x0] 
    /*000264e8*/ BL          0x00000000000264E8          @ osal_dsb [R_ARM_CALL: +0x0] 
    /*000264ec*/ BL          0x00000000000264EC          @ osal_dmb [R_ARM_CALL: +0x0] 
    /*000264f0*/ LDR         R3, [R4, #760]              @ 0x2f8 
    /*000264f4*/ CMP         R5, R3 
    /*000264f8*/ BEQ         VPSS_HAL_Start_x26524
    /*000264fc*/ LDR         R2, [R4, #760]              @ 0x2f8 
    /*00026500*/ MOV         R1, R6 
    /*00026504*/ STR         R5, [SP] 
    /*00026508*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9aa0] 
    /*0002650c*/ STR         R9, [SP, #4] 
    /*00026510*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9aa0] 
    /*00026514*/ BL          0x0000000000026514          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00026518*/ LDR         R3, [R7] 
    /*0002651c*/ ADD         R3, R3, #1 
    /*00026520*/ STR         R3, [R7] 
    VPSS_HAL_Start_x26524:
    /*00026524*/ CMP         R8, #0 
    /*00026528*/ MOVEQ       R3, #1 
    /*0002652c*/ STREQ       R3, [R4, #768]              @ 0x300 
    /*00026530*/ ADD         SP, SP, #12 
    /*00026534*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
FUNC_END VPSS_HAL_Start


FUNC_BEGIN VPSS_HAL_SetChnEn
    /*00026538*/ CMP         R1, #1 
    /*0002653c*/ BEQ         VPSS_HAL_SetChnEn_x26570
    /*00026540*/ BCC         VPSS_HAL_SetChnEn_x26560
    /*00026544*/ CMP         R1, #2 
    /*00026548*/ BNE         VPSS_HAL_SetChnEn_x2655c
    /*0002654c*/ LDR         R3, [R0, #1264]             @ 0x4f0 
    /*00026550*/ BFI         R3, R2, #31, #1 
    /*00026554*/ STR         R3, [R0, #1264]             @ 0x4f0 
    /*00026558*/ BX          LR 
    VPSS_HAL_SetChnEn_x2655c:
    /*0002655c*/ BX          LR 
    VPSS_HAL_SetChnEn_x26560:
    /*00026560*/ LDR         R3, [R0, #1124]             @ 0x464 
    /*00026564*/ BFI         R3, R2, #31, #1 
    /*00026568*/ STR         R3, [R0, #1124]             @ 0x464 
    /*0002656c*/ BX          LR 
    VPSS_HAL_SetChnEn_x26570:
    /*00026570*/ LDR         R3, [R0, #1192]             @ 0x4a8 
    /*00026574*/ BFI         R3, R2, #31, #1 
    /*00026578*/ STR         R3, [R0, #1192]             @ 0x4a8 
    /*0002657c*/ BX          LR 
FUNC_END VPSS_HAL_SetChnEn


FUNC_BEGIN VPSS_HAL_ClrInt
    /*00026580*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*00026584*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00026588*/ MVN         R2, #0 
    /*0002658c*/ LDR         R3, [R3, R0, LSL #2] 
    /*00026590*/ STR         R2, [R3, #784]              @ 0x310 
    /*00026594*/ BX          LR 
FUNC_END VPSS_HAL_ClrInt


FUNC_BEGIN VPSS_HAL_ClrSofEoftInt
    /*00026598*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*0002659c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*000265a0*/ MOVW        R2, #1025                   @ 0x401 
    /*000265a4*/ LDR         R3, [R3, R0, LSL #2] 
    /*000265a8*/ STR         R2, [R3, #784]              @ 0x310 
    /*000265ac*/ BX          LR 
FUNC_END VPSS_HAL_ClrSofEoftInt


FUNC_BEGIN VPSS_HAL_ClrStartInt
    /*000265b0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*000265b4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*000265b8*/ MOV         R2, #1024                   @ 0x400 
    /*000265bc*/ LDR         R3, [R3, R0, LSL #2] 
    /*000265c0*/ STR         R2, [R3, #784]              @ 0x310 
    /*000265c4*/ BX          LR 
FUNC_END VPSS_HAL_ClrStartInt


FUNC_BEGIN VPSS_HAL_ClrEofInt
    /*000265c8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*000265cc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*000265d0*/ MOV         R2, #1 
    /*000265d4*/ LDR         R3, [R3, R0, LSL #2] 
    /*000265d8*/ STR         R2, [R3, #784]              @ 0x310 
    /*000265dc*/ BX          LR 
FUNC_END VPSS_HAL_ClrEofInt


FUNC_BEGIN VPSS_HAL_ClrLowdelayInt
    /*000265e0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*000265e4*/ CMP         R1, #1 
    /*000265e8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*000265ec*/ MOVEQ       R2, #8192                   @ 0x2000 
    /*000265f0*/ LDR         R3, [R3, R0, LSL #2] 
    /*000265f4*/ BEQ         VPSS_HAL_ClrLowdelayInt_x26610
    /*000265f8*/ CMP         R1, #2 
    /*000265fc*/ MOVEQ       R2, #16384                  @ 0x4000 
    /*00026600*/ BEQ         VPSS_HAL_ClrLowdelayInt_x26610
    /*00026604*/ CMP         R1, #0 
    /*00026608*/ MOVEQ       R2, #4096                   @ 0x1000 
    /*0002660c*/ MOVNE       R2, #0 
    VPSS_HAL_ClrLowdelayInt_x26610:
    /*00026610*/ STR         R2, [R3, #784]              @ 0x310 
    /*00026614*/ BX          LR 
FUNC_END VPSS_HAL_ClrLowdelayInt


FUNC_BEGIN VPSS_HAL_ClrErrInt
    /*00026618*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*0002661c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00026620*/ MOVW        R2, #2716                   @ 0xa9c 
    /*00026624*/ LDR         R3, [R3, R0, LSL #2] 
    /*00026628*/ STR         R2, [R3, #784]              @ 0x310 
    /*0002662c*/ BX          LR 
FUNC_END VPSS_HAL_ClrErrInt


FUNC_BEGIN VPSS_HAL_SetChnLowDelayAlignMode
    /*00026630*/ BX          LR 
FUNC_END VPSS_HAL_SetChnLowDelayAlignMode


FUNC_BEGIN VPSS_HAL_SetChnLowDelayAttr
    /*00026634*/ LDR         IP, [R0, #1440]             @ 0x5a0 
    /*00026638*/ CMP         R1, #1 
    /*0002663c*/ LDR         R3, [R0, #1444]             @ 0x5a4 
    /*00026640*/ PUSH        {R4, LR} 
    /*00026644*/ MOV         R4, IP 
    /*00026648*/ MOV         LR, R3 
    /*0002664c*/ BEQ         VPSS_HAL_SetChnLowDelayAttr_x26690
    /*00026650*/ BCC         VPSS_HAL_SetChnLowDelayAttr_x26674
    /*00026654*/ CMP         R1, #2 
    /*00026658*/ LDREQ       R3, [R2, #4] 
    /*0002665c*/ BFIEQ       LR, R3, #0, #16 
    /*00026660*/ BFIEQ       LR, R1, #28, #2 
    /*00026664*/ MOVEQ       R3, LR 
    VPSS_HAL_SetChnLowDelayAttr_x26668:
    /*00026668*/ STR         IP, [R0, #1440]             @ 0x5a0 
    /*0002666c*/ STR         R3, [R0, #1444]             @ 0x5a4 
    /*00026670*/ POP         {R4, PC} 
    VPSS_HAL_SetChnLowDelayAttr_x26674:
    /*00026674*/ LDR         R3, [R2, #4] 
    /*00026678*/ MOV         R2, #2 
    /*0002667c*/ BFI         LR, R2, #24, #2 
    /*00026680*/ BFI         R4, R3, #0, #16 
    /*00026684*/ MOV         R3, LR 
    /*00026688*/ MOV         IP, R4 
    /*0002668c*/ B           VPSS_HAL_SetChnLowDelayAttr_x26668
    VPSS_HAL_SetChnLowDelayAttr_x26690:
    /*00026690*/ LDR         R3, [R2, #4] 
    /*00026694*/ MOV         R2, #2 
    /*00026698*/ BFI         LR, R2, #26, #2 
    /*0002669c*/ BFI         R4, R3, #16, #16 
    /*000266a0*/ MOV         R3, LR 
    /*000266a4*/ MOV         IP, R4 
    /*000266a8*/ B           VPSS_HAL_SetChnLowDelayAttr_x26668
FUNC_END VPSS_HAL_SetChnLowDelayAttr


FUNC_BEGIN VPSS_HAL_SetRegup
    /*000266ac*/ PUSH        {R4, R5, R6, LR} 
    /*000266b0*/ MOV         R4, R0 
    /*000266b4*/ MOV         R5, R1 
    /*000266b8*/ BL          0x00000000000266B8          @ osal_dmb [R_ARM_CALL: +0x0] 
    /*000266bc*/ LDR         R3, [R4, #16] 
    /*000266c0*/ BFI         R3, R5, #0, #1 
    /*000266c4*/ STR         R3, [R4, #16] 
    /*000266c8*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_HAL_SetRegup


FUNC_BEGIN VPSS_HAL_SetOutstanding
    /*000266cc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*000266d0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*000266d4*/ LDR         R3, [R3, R0, LSL #2] 
    /*000266d8*/ STR         R1, [R3, #772]              @ 0x304 
    /*000266dc*/ BX          LR 
FUNC_END VPSS_HAL_SetOutstanding


FUNC_BEGIN VPSS_HAL_GetNodeID
    /*000266e0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*000266e4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*000266e8*/ LDR         R3, [R3, R0, LSL #2] 
    /*000266ec*/ LDR         R3, [R3, #252]              @ 0xfc 
    /*000266f0*/ STR         R3, [R1] 
    /*000266f4*/ BX          LR 
FUNC_END VPSS_HAL_GetNodeID


FUNC_BEGIN VPSS_HAL_GetIntStatus
    /*000266f8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*000266fc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00026700*/ LDR         R3, [R3, R0, LSL #2] 
    /*00026704*/ LDR         R3, [R3, #788]              @ 0x314 
    /*00026708*/ STR         R3, [R1] 
    /*0002670c*/ BX          LR 
FUNC_END VPSS_HAL_GetIntStatus


FUNC_BEGIN VPSS_HAL_GetRawIntStatus
    /*00026710*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*00026714*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00026718*/ LDR         R3, [R3, R0, LSL #2] 
    /*0002671c*/ LDR         R3, [R3, #784]              @ 0x310 
    /*00026720*/ STR         R3, [R1] 
    /*00026724*/ BX          LR 
FUNC_END VPSS_HAL_GetRawIntStatus


FUNC_BEGIN VPSS_HAL_PrintRegStatus
    /*00026728*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0002672c*/ MOV         R4, R0 
    /*00026730*/ LDR         LR, [PC, #188]              @ 0x00000000000267f4 
    /*00026734*/ SUB         SP, SP, #48                 @ 0x30 
    /*00026738*/ ADD         IP, SP, #8 
    /*0002673c*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*00026740*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00026744*/ LDM         LR!, {R0, R1, R2, R3} 
    /*00026748*/ LDR         SL, [R5, R4, LSL #2] 
    /*0002674c*/ CMP         SL, #0 
    /*00026750*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*00026754*/ LDM         LR!, {R0, R1, R2, R3} 
    /*00026758*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*0002675c*/ LDM         LR, {R0, R1} 
    /*00026760*/ STM         IP, {R0, R1} 
    /*00026764*/ BEQ         VPSS_HAL_PrintRegStatus_x267ec
    /*00026768*/ MOV         R1, R4 
    /*0002676c*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9adc] 
    /*00026770*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9adc] 
    /*00026774*/ MOVW        R7, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b14] 
    /*00026778*/ BL          0x0000000000026778          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0002677c*/ MOVW        R9, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b10] 
    /*00026780*/ MOVT        R7, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b14] 
    /*00026784*/ MOVT        R9, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b10] 
    /*00026788*/ MOV         R8, #0 
    VPSS_HAL_PrintRegStatus_x2678c:
    /*0002678c*/ ADD         R3, SP, #8 
    /*00026790*/ LDR         R5, [R3, R8]! 
    /*00026794*/ LDR         R6, [R3, #4] 
    /*00026798*/ CMP         R5, R6 
    /*0002679c*/ ADDCC       R4, SL, R5 
    /*000267a0*/ BCS         VPSS_HAL_PrintRegStatus_x267d8
    VPSS_HAL_PrintRegStatus_x267a4:
    /*000267a4*/ LDR         IP, [R4, #12] 
    /*000267a8*/ MOV         R1, R5 
    /*000267ac*/ LDR         R3, [R4, #4] 
    /*000267b0*/ ADD         R5, R5, #16 
    /*000267b4*/ LDR         R2, [R4] 
    /*000267b8*/ MOV         R0, R7 
    /*000267bc*/ STR         IP, [SP, #4] 
    /*000267c0*/ ADD         R4, R4, #16 
    /*000267c4*/ LDR         IP, [R4, #-8] 
    /*000267c8*/ STR         IP, [SP] 
    /*000267cc*/ BL          0x00000000000267CC          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000267d0*/ CMP         R5, R6 
    /*000267d4*/ BCC         VPSS_HAL_PrintRegStatus_x267a4
    VPSS_HAL_PrintRegStatus_x267d8:
    /*000267d8*/ ADD         R8, R8, #8 
    /*000267dc*/ MOV         R0, R9 
    /*000267e0*/ BL          0x00000000000267E0          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000267e4*/ CMP         R8, #40                     @ 0x28 
    /*000267e8*/ BNE         VPSS_HAL_PrintRegStatus_x2678c
    VPSS_HAL_PrintRegStatus_x267ec:
    /*000267ec*/ ADD         SP, SP, #48                 @ 0x30 
    /*000267f0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*000267f4*/ ANDEQ       R1, R0, R8, LSL #12 
FUNC_END VPSS_HAL_PrintRegStatus


FUNC_BEGIN VPSS_HAL_SetChnScaleEn
    /*000267f8*/ LDR         R3, [R0] 
    /*000267fc*/ CMP         R1, #1 
    /*00026800*/ PUSH        {R4, LR} 
    /*00026804*/ UBFX        IP, R3, #6, #1 
    /*00026808*/ UBFX        LR, R3, #5, #1 
    /*0002680c*/ UBFX        R4, R3, #4, #1 
    /*00026810*/ ANDEQ       LR, R2, #1 
    /*00026814*/ BEQ         VPSS_HAL_SetChnScaleEn_x26828
    /*00026818*/ ANDCC       R4, R2, #1 
    /*0002681c*/ BCC         VPSS_HAL_SetChnScaleEn_x26828
    /*00026820*/ CMP         R1, #2 
    /*00026824*/ ANDEQ       IP, R2, #1 
    VPSS_HAL_SetChnScaleEn_x26828:
    /*00026828*/ BFI         R3, R4, #4, #1 
    /*0002682c*/ BFI         R3, LR, #5, #1 
    /*00026830*/ BFI         R3, IP, #6, #1 
    /*00026834*/ BFC         R3, #19, #1 
    /*00026838*/ STR         R3, [R0] 
    /*0002683c*/ POP         {R4, PC} 
FUNC_END VPSS_HAL_SetChnScaleEn


FUNC_BEGIN VPSS_HAL_SetChnCtrl
    /*00026840*/ CMP         R1, #1 
    /*00026844*/ BEQ         VPSS_HAL_SetChnCtrl_x26900
    /*00026848*/ BCC         VPSS_HAL_SetChnCtrl_x268ac
    /*0002684c*/ CMP         R1, #2 
    /*00026850*/ BNE         VPSS_HAL_SetChnCtrl_x268a8
    /*00026854*/ LDR         IP, [R2, #20] 
    /*00026858*/ LDR         R3, [R0, #1264]             @ 0x4f0 
    /*0002685c*/ LDR         R1, [R2, #16] 
    /*00026860*/ BFI         R3, IP, #0, #1 
    /*00026864*/ LDR         IP, [R2] 
    /*00026868*/ BFI         R3, R1, #1, #1 
    /*0002686c*/ LDR         R1, [R2, #4] 
    /*00026870*/ BFI         R3, IP, #4, #1 
    /*00026874*/ LDR         IP, [R2, #44]               @ 0x2c 
    /*00026878*/ BFI         R3, R1, #5, #1 
    /*0002687c*/ LDR         R1, [R2, #32] 
    /*00026880*/ BFI         R3, IP, #6, #1 
    /*00026884*/ LDR         IP, [R2, #28] 
    /*00026888*/ BFI         R3, R1, #8, #4 
    /*0002688c*/ LDR         R1, [R2, #12] 
    /*00026890*/ BFI         R3, IP, #12, #6 
    /*00026894*/ LDR         R2, [R2, #8] 
    /*00026898*/ BFI         R3, R1, #21, #2 
    /*0002689c*/ BFI         R3, R2, #23, #2 
    /*000268a0*/ STR         R3, [R0, #1264]             @ 0x4f0 
    /*000268a4*/ BX          LR 
    VPSS_HAL_SetChnCtrl_x268a8:
    /*000268a8*/ BX          LR 
    VPSS_HAL_SetChnCtrl_x268ac:
    /*000268ac*/ LDR         IP, [R2, #20] 
    /*000268b0*/ LDR         R3, [R0, #1124]             @ 0x464 
    /*000268b4*/ LDR         R1, [R2, #16] 
    /*000268b8*/ BFI         R3, IP, #0, #1 
    /*000268bc*/ LDR         IP, [R2] 
    /*000268c0*/ BFI         R3, R1, #1, #1 
    /*000268c4*/ LDR         R1, [R2, #4] 
    /*000268c8*/ BFI         R3, IP, #4, #1 
    /*000268cc*/ LDR         IP, [R2, #44]               @ 0x2c 
    /*000268d0*/ BFI         R3, R1, #5, #1 
    /*000268d4*/ LDR         R1, [R2, #32] 
    /*000268d8*/ BFI         R3, IP, #6, #1 
    /*000268dc*/ LDR         IP, [R2, #28] 
    /*000268e0*/ BFI         R3, R1, #8, #4 
    /*000268e4*/ LDR         R1, [R2, #12] 
    /*000268e8*/ BFI         R3, IP, #12, #6 
    /*000268ec*/ LDR         R2, [R2, #8] 
    /*000268f0*/ BFI         R3, R1, #21, #2 
    /*000268f4*/ BFI         R3, R2, #23, #2 
    /*000268f8*/ STR         R3, [R0, #1124]             @ 0x464 
    /*000268fc*/ BX          LR 
    VPSS_HAL_SetChnCtrl_x26900:
    /*00026900*/ PUSH        {R4, LR} 
    /*00026904*/ MOV         IP, #8 
    /*00026908*/ LDR         R4, [R2, #20] 
    /*0002690c*/ MOV         R1, #0 
    /*00026910*/ LDR         R3, [R0, #1192]             @ 0x4a8 
    /*00026914*/ BFI         R1, IP, #0, #5 
    /*00026918*/ LDR         LR, [R2, #16] 
    /*0002691c*/ BFI         R1, IP, #8, #5 
    /*00026920*/ BFI         R3, R4, #0, #1 
    /*00026924*/ LDR         R4, [R2] 
    /*00026928*/ BFI         R3, LR, #1, #1 
    /*0002692c*/ LDR         LR, [R2, #4] 
    /*00026930*/ BFI         R3, R4, #4, #1 
    /*00026934*/ LDR         R4, [R2, #44]               @ 0x2c 
    /*00026938*/ BFI         R3, LR, #5, #1 
    /*0002693c*/ LDR         LR, [R2, #32] 
    /*00026940*/ BFI         R3, R4, #6, #1 
    /*00026944*/ LDR         R4, [R2, #28] 
    /*00026948*/ BFI         R3, LR, #8, #4 
    /*0002694c*/ LDR         LR, [R2, #12] 
    /*00026950*/ BFI         R3, R4, #12, #6 
    /*00026954*/ LDR         R4, [R2, #8] 
    /*00026958*/ BFI         R3, LR, #21, #2 
    /*0002695c*/ LDR         LR, [R2, #24] 
    /*00026960*/ BFI         R3, R4, #23, #2 
    /*00026964*/ LDR         R2, [R2, #36]               @ 0x24 
    /*00026968*/ BFI         R3, LR, #29, #1 
    /*0002696c*/ BFI         R3, R2, #30, #1 
    /*00026970*/ STR         R3, [R0, #1192]             @ 0x4a8 
    /*00026974*/ STR         R1, [R0, #1196]             @ 0x4ac 
    /*00026978*/ POP         {R4, PC} 
FUNC_END VPSS_HAL_SetChnCtrl


FUNC_BEGIN VPSS_HAL_SetSrcImgSize
    /*0002697c*/ LDR         R3, [R0, #1028]             @ 0x404 
    /*00026980*/ SUB         SP, SP, #8 
    /*00026984*/ SUB         R1, R1, #1 
    /*00026988*/ SUB         R2, R2, #1 
    /*0002698c*/ STR         R3, [SP, #4] 
    /*00026990*/ UXTH        R1, R1 
    /*00026994*/ LDR         R3, [SP, #4] 
    /*00026998*/ UXTH        R2, R2 
    /*0002699c*/ BFI         R3, R1, #0, #16 
    /*000269a0*/ STR         R3, [SP, #4] 
    /*000269a4*/ LDR         R3, [SP, #4] 
    /*000269a8*/ BFI         R3, R2, #16, #16 
    /*000269ac*/ STR         R3, [SP, #4] 
    /*000269b0*/ LDR         R3, [SP, #4] 
    /*000269b4*/ STR         R3, [R0, #1028]             @ 0x404 
    /*000269b8*/ ADD         SP, SP, #8 
    /*000269bc*/ BX          LR 
FUNC_END VPSS_HAL_SetSrcImgSize


FUNC_BEGIN VPSS_HAL_SetSrcImgBitwidth
    /*000269c0*/ LDR         R3, [R0, #1032]             @ 0x408 
    /*000269c4*/ BFI         R3, R1, #1, #1 
    /*000269c8*/ STR         R3, [R0, #1032]             @ 0x408 
    /*000269cc*/ BX          LR 
FUNC_END VPSS_HAL_SetSrcImgBitwidth


FUNC_BEGIN VPSS_HAL_SetSrcImgType
    /*000269d0*/ LDR         R3, [R0, #1024]             @ 0x400 
    /*000269d4*/ BFI         R3, R1, #20, #1 
    /*000269d8*/ STR         R3, [R0, #1024]             @ 0x400 
    /*000269dc*/ BX          LR 
FUNC_END VPSS_HAL_SetSrcImgType


FUNC_BEGIN VPSS_HAL_SetImgWorkType
    /*000269e0*/ LDR         R3, [R0] 
    /*000269e4*/ BFI         R3, R1, #16, #2 
    /*000269e8*/ STR         R3, [R0] 
    /*000269ec*/ BX          LR 
FUNC_END VPSS_HAL_SetImgWorkType


FUNC_BEGIN VPSS_HAL_SetChnImgSize
    /*000269f0*/ CMP         R1, #1 
    /*000269f4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000269f8*/ SUB         SP, SP, #20 
    /*000269fc*/ BEQ         VPSS_HAL_SetChnImgSize_x26ab0
    /*00026a00*/ BCC         VPSS_HAL_SetChnImgSize_x26a70
    /*00026a04*/ CMP         R1, #2 
    /*00026a08*/ BEQ         VPSS_HAL_SetChnImgSize_x26a30
    /*00026a0c*/ MOVW        R2, #662                    @ 0x296 
    /*00026a10*/ LDR         R1, [PC, #216]              @ 0x0000000000026af0 
    /*00026a14*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b34] 
    /*00026a18*/ MOVW        R0, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b38] 
    /*00026a1c*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b34] 
    /*00026a20*/ MOVT        R0, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b38] 
    /*00026a24*/ BL          0x0000000000026A24          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00026a28*/ ADD         SP, SP, #20 
    /*00026a2c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_HAL_SetChnImgSize_x26a30:
    /*00026a30*/ LDR         R1, [R0, #1260]             @ 0x4ec 
    /*00026a34*/ SUB         R2, R2, #1 
    /*00026a38*/ SUB         R3, R3, #1 
    /*00026a3c*/ UXTH        R2, R2 
    /*00026a40*/ STR         R1, [SP, #12] 
    /*00026a44*/ UXTH        R3, R3 
    /*00026a48*/ LDR         R1, [SP, #12] 
    /*00026a4c*/ BFI         R1, R2, #0, #16 
    /*00026a50*/ STR         R1, [SP, #12] 
    /*00026a54*/ LDR         R2, [SP, #12] 
    /*00026a58*/ BFI         R2, R3, #16, #16 
    /*00026a5c*/ STR         R2, [SP, #12] 
    /*00026a60*/ LDR         R3, [SP, #12] 
    /*00026a64*/ STR         R3, [R0, #1260]             @ 0x4ec 
    /*00026a68*/ ADD         SP, SP, #20 
    /*00026a6c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_HAL_SetChnImgSize_x26a70:
    /*00026a70*/ LDR         R1, [R0, #1120]             @ 0x460 
    /*00026a74*/ SUB         R2, R2, #1 
    /*00026a78*/ SUB         R3, R3, #1 
    /*00026a7c*/ UXTH        R2, R2 
    /*00026a80*/ STR         R1, [SP, #4] 
    /*00026a84*/ UXTH        R3, R3 
    /*00026a88*/ LDR         R1, [SP, #4] 
    /*00026a8c*/ BFI         R1, R2, #0, #16 
    /*00026a90*/ STR         R1, [SP, #4] 
    /*00026a94*/ LDR         R2, [SP, #4] 
    /*00026a98*/ BFI         R2, R3, #16, #16 
    /*00026a9c*/ STR         R2, [SP, #4] 
    /*00026aa0*/ LDR         R3, [SP, #4] 
    /*00026aa4*/ STR         R3, [R0, #1120]             @ 0x460 
    /*00026aa8*/ ADD         SP, SP, #20 
    /*00026aac*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_HAL_SetChnImgSize_x26ab0:
    /*00026ab0*/ LDR         R1, [R0, #1188]             @ 0x4a4 
    /*00026ab4*/ SUB         R2, R2, #1 
    /*00026ab8*/ SUB         R3, R3, #1 
    /*00026abc*/ UXTH        R2, R2 
    /*00026ac0*/ STR         R1, [SP, #8] 
    /*00026ac4*/ UXTH        R3, R3 
    /*00026ac8*/ LDR         R1, [SP, #8] 
    /*00026acc*/ BFI         R1, R2, #0, #16 
    /*00026ad0*/ STR         R1, [SP, #8] 
    /*00026ad4*/ LDR         R2, [SP, #8] 
    /*00026ad8*/ BFI         R2, R3, #16, #16 
    /*00026adc*/ STR         R2, [SP, #8] 
    /*00026ae0*/ LDR         R3, [SP, #8] 
    /*00026ae4*/ STR         R3, [R0, #1188]             @ 0x4a4 
    /*00026ae8*/ ADD         SP, SP, #20 
    /*00026aec*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00026af0*/ ANDEQ       R1, R0, R0, LSR R6 
FUNC_END VPSS_HAL_SetChnImgSize


FUNC_BEGIN VPSS_HAL_SetCurCtrl
    /*00026af4*/ LDR         R2, [R1, #8] 
    /*00026af8*/ MOV         R3, #0 
    /*00026afc*/ PUSH        {R4, LR} 
    /*00026b00*/ STR         R2, [R0, #1040]             @ 0x410 
    /*00026b04*/ LDR         R2, [R1, #16] 
    /*00026b08*/ STR         R2, [R0, #1048]             @ 0x418 
    /*00026b0c*/ LDR         R2, [R1, #24] 
    /*00026b10*/ STR         R2, [R0, #1060]             @ 0x424 
    /*00026b14*/ LDR         R2, [R1, #32] 
    /*00026b18*/ STR         R2, [R0, #1068]             @ 0x42c 
    /*00026b1c*/ LDR         R2, [R1, #112]              @ 0x70 
    /*00026b20*/ BFI         R3, R2, #0, #10 
    /*00026b24*/ STR         R3, [R0, #1056]             @ 0x420 
    /*00026b28*/ LDR         R3, [R0, #1076]             @ 0x434 
    /*00026b2c*/ LDR         IP, [R1, #72]               @ 0x48 
    /*00026b30*/ LDRH        R2, [R1, #76]               @ 0x4c 
    /*00026b34*/ BFI         R3, IP, #0, #16 
    /*00026b38*/ BFI         R3, R2, #16, #16 
    /*00026b3c*/ STR         R3, [R0, #1076]             @ 0x434 
    /*00026b40*/ LDR         LR, [R1, #152]              @ 0x98 
    /*00026b44*/ LDR         R3, [R0, #1032]             @ 0x408 
    /*00026b48*/ LDR         R2, [R1, #144]              @ 0x90 
    /*00026b4c*/ SUB         LR, LR, #1 
    /*00026b50*/ LDR         R4, [R1, #156]              @ 0x9c 
    /*00026b54*/ CLZ         LR, LR 
    /*00026b58*/ LDR         IP, [R1, #112]              @ 0x70 
    /*00026b5c*/ BFI         R3, R2, #0, #1 
    /*00026b60*/ ADDS        R4, R4, #0 
    /*00026b64*/ LDR         R2, [R1, #116]              @ 0x74 
    /*00026b68*/ LSR         LR, LR, #5 
    /*00026b6c*/ LSL         IP, IP, #3 
    /*00026b70*/ MOVNE       R4, #1 
    /*00026b74*/ SUBS        IP, IP, #128                @ 0x80 
    /*00026b78*/ BFI         R3, R4, #1, #1 
    /*00026b7c*/ LDR         R4, [R1, #140]              @ 0x8c 
    /*00026b80*/ BFI         R3, LR, #4, #1 
    /*00026b84*/ LSL         R2, R2, #3 
    /*00026b88*/ MOVNE       IP, #1 
    /*00026b8c*/ BFI         R3, R4, #9, #1 
    /*00026b90*/ SUBS        R2, R2, #128                @ 0x80 
    /*00026b94*/ BFI         R3, IP, #21, #2 
    /*00026b98*/ MOVNE       R2, #1 
    /*00026b9c*/ BFI         R3, R2, #23, #2 
    /*00026ba0*/ ORR         R3, R3, #-2147483648        @ 0x80000000 
    /*00026ba4*/ STR         R3, [R0, #1032]             @ 0x408 
    /*00026ba8*/ LDR         R3, [R0, #1036]             @ 0x40c 
    /*00026bac*/ LDR         IP, [R1, #168]              @ 0xa8 
    /*00026bb0*/ LDRH        R2, [R1, #164]              @ 0xa4 
    /*00026bb4*/ BFI         R3, IP, #0, #16 
    /*00026bb8*/ BFI         R3, R2, #16, #16 
    /*00026bbc*/ STR         R3, [R0, #1036]             @ 0x40c 
    /*00026bc0*/ POP         {R4, PC} 
FUNC_END VPSS_HAL_SetCurCtrl


FUNC_BEGIN VPSS_HAL_SetGrpCropAttr
    /*00026bc4*/ LDR         R3, [R1, #16] 
    /*00026bc8*/ LDR         IP, [R0] 
    /*00026bcc*/ CMP         R3, #0 
    /*00026bd0*/ BEQ         VPSS_HAL_SetGrpCropAttr_x26c28
    /*00026bd4*/ LDR         R2, [R1, #8] 
    /*00026bd8*/ LDR         R3, [R1, #12] 
    /*00026bdc*/ SUB         R2, R2, #1 
    /*00026be0*/ PUSH        {R4, R5, LR} 
    /*00026be4*/ UXTH        R2, R2 
    /*00026be8*/ LDR         R4, [R0, #260]              @ 0x104 
    /*00026bec*/ SUB         R3, R3, #1 
    /*00026bf0*/ LDR         LR, [R0, #256]              @ 0x100 
    /*00026bf4*/ LDR         R5, [R1] 
    /*00026bf8*/ UXTH        R3, R3 
    /*00026bfc*/ BFI         LR, R2, #0, #16 
    /*00026c00*/ LDRH        R2, [R1, #4] 
    /*00026c04*/ BFI         R4, R5, #0, #16 
    /*00026c08*/ BFI         LR, R3, #16, #16 
    /*00026c0c*/ BFI         R4, R2, #16, #16 
    /*00026c10*/ STR         R4, [R0, #260]              @ 0x104 
    /*00026c14*/ STR         LR, [R0, #256]              @ 0x100 
    /*00026c18*/ LDR         R3, [R1, #16] 
    /*00026c1c*/ BFI         IP, R3, #14, #1 
    /*00026c20*/ STR         IP, [R0] 
    /*00026c24*/ POP         {R4, R5, PC} 
    VPSS_HAL_SetGrpCropAttr_x26c28:
    /*00026c28*/ BFI         IP, R3, #14, #1 
    /*00026c2c*/ STR         IP, [R0] 
    /*00026c30*/ BX          LR 
FUNC_END VPSS_HAL_SetGrpCropAttr


FUNC_BEGIN VPSS_HAL_SetChnOffset
    /*00026c34*/ CMP         R1, #1 
    /*00026c38*/ BEQ         VPSS_HAL_SetChnOffset_x26c6c
    /*00026c3c*/ BCC         VPSS_HAL_SetChnOffset_x26c5c
    /*00026c40*/ CMP         R1, #2 
    /*00026c44*/ BNE         VPSS_HAL_SetChnOffset_x26c58
    /*00026c48*/ LDR         R3, [R0, #1268]             @ 0x4f4 
    /*00026c4c*/ BFI         R3, R2, #0, #16 
    /*00026c50*/ STR         R3, [R0, #1268]             @ 0x4f4 
    /*00026c54*/ BX          LR 
    VPSS_HAL_SetChnOffset_x26c58:
    /*00026c58*/ BX          LR 
    VPSS_HAL_SetChnOffset_x26c5c:
    /*00026c5c*/ LDR         R3, [R0, #1128]             @ 0x468 
    /*00026c60*/ BFI         R3, R2, #0, #16 
    /*00026c64*/ STR         R3, [R0, #1128]             @ 0x468 
    /*00026c68*/ BX          LR 
    VPSS_HAL_SetChnOffset_x26c6c:
    /*00026c6c*/ LDR         R3, [R0, #1200]             @ 0x4b0 
    /*00026c70*/ BFI         R3, R2, #0, #16 
    /*00026c74*/ STR         R3, [R0, #1200]             @ 0x4b0 
    /*00026c78*/ BX          LR 
FUNC_END VPSS_HAL_SetChnOffset


FUNC_BEGIN VPSS_HAL_SetChnPicAddr
    /*00026c7c*/ CMP         R1, #1 
    /*00026c80*/ SUB         SP, SP, #16 
    /*00026c84*/ BEQ         VPSS_HAL_SetChnPicAddr_x26d44
    /*00026c88*/ BCC         VPSS_HAL_SetChnPicAddr_x26cec
    /*00026c8c*/ CMP         R1, #2 
    /*00026c90*/ BNE         VPSS_HAL_SetChnPicAddr_x26ce4
    /*00026c94*/ LDR         R3, [R2, #8] 
    /*00026c98*/ STR         R3, [R0, #1272]             @ 0x4f8 
    /*00026c9c*/ LDR         R3, [R2, #16] 
    /*00026ca0*/ STR         R3, [R0, #1280]             @ 0x500 
    /*00026ca4*/ LDR         R3, [R2, #24] 
    /*00026ca8*/ STR         R3, [R0, #1288]             @ 0x508 
    /*00026cac*/ LDR         R3, [R2, #32] 
    /*00026cb0*/ STR         R3, [R0, #1296]             @ 0x510 
    /*00026cb4*/ LDR         R3, [R0, #1304]             @ 0x518 
    /*00026cb8*/ LDRH        R1, [R2, #72]               @ 0x48 
    /*00026cbc*/ LDRH        R2, [R2, #76]               @ 0x4c 
    /*00026cc0*/ STR         R3, [SP, #12] 
    /*00026cc4*/ LDR         R3, [SP, #12] 
    /*00026cc8*/ BFI         R3, R1, #0, #16 
    /*00026ccc*/ STR         R3, [SP, #12] 
    /*00026cd0*/ LDR         R3, [SP, #12] 
    /*00026cd4*/ BFI         R3, R2, #16, #16 
    /*00026cd8*/ STR         R3, [SP, #12] 
    /*00026cdc*/ LDR         R3, [SP, #12] 
    /*00026ce0*/ STR         R3, [R0, #1304]             @ 0x518 
    VPSS_HAL_SetChnPicAddr_x26ce4:
    /*00026ce4*/ ADD         SP, SP, #16 
    /*00026ce8*/ BX          LR 
    VPSS_HAL_SetChnPicAddr_x26cec:
    /*00026cec*/ LDR         R3, [R2, #8] 
    /*00026cf0*/ STR         R3, [R0, #1132]             @ 0x46c 
    /*00026cf4*/ LDR         R3, [R2, #16] 
    /*00026cf8*/ STR         R3, [R0, #1140]             @ 0x474 
    /*00026cfc*/ LDR         R3, [R2, #24] 
    /*00026d00*/ STR         R3, [R0, #1148]             @ 0x47c 
    /*00026d04*/ LDR         R3, [R2, #32] 
    /*00026d08*/ STR         R3, [R0, #1156]             @ 0x484 
    /*00026d0c*/ LDR         R3, [R0, #1164]             @ 0x48c 
    /*00026d10*/ LDRH        R1, [R2, #72]               @ 0x48 
    /*00026d14*/ LDRH        R2, [R2, #76]               @ 0x4c 
    /*00026d18*/ STR         R3, [SP, #4] 
    /*00026d1c*/ LDR         R3, [SP, #4] 
    /*00026d20*/ BFI         R3, R1, #0, #16 
    /*00026d24*/ STR         R3, [SP, #4] 
    /*00026d28*/ LDR         R3, [SP, #4] 
    /*00026d2c*/ BFI         R3, R2, #16, #16 
    /*00026d30*/ STR         R3, [SP, #4] 
    /*00026d34*/ LDR         R3, [SP, #4] 
    /*00026d38*/ STR         R3, [R0, #1164]             @ 0x48c 
    /*00026d3c*/ ADD         SP, SP, #16 
    /*00026d40*/ BX          LR 
    VPSS_HAL_SetChnPicAddr_x26d44:
    /*00026d44*/ LDR         R3, [R2, #8] 
    /*00026d48*/ STR         R3, [R0, #1204]             @ 0x4b4 
    /*00026d4c*/ LDR         R3, [R2, #16] 
    /*00026d50*/ STR         R3, [R0, #1212]             @ 0x4bc 
    /*00026d54*/ LDR         R3, [R2, #24] 
    /*00026d58*/ STR         R3, [R0, #1220]             @ 0x4c4 
    /*00026d5c*/ LDR         R3, [R2, #32] 
    /*00026d60*/ STR         R3, [R0, #1228]             @ 0x4cc 
    /*00026d64*/ LDR         R3, [R0, #1236]             @ 0x4d4 
    /*00026d68*/ LDRH        R1, [R2, #72]               @ 0x48 
    /*00026d6c*/ LDRH        R2, [R2, #76]               @ 0x4c 
    /*00026d70*/ STR         R3, [SP, #8] 
    /*00026d74*/ LDR         R3, [SP, #8] 
    /*00026d78*/ BFI         R3, R1, #0, #16 
    /*00026d7c*/ STR         R3, [SP, #8] 
    /*00026d80*/ LDR         R3, [SP, #8] 
    /*00026d84*/ BFI         R3, R2, #16, #16 
    /*00026d88*/ STR         R3, [SP, #8] 
    /*00026d8c*/ LDR         R3, [SP, #8] 
    /*00026d90*/ STR         R3, [R0, #1236]             @ 0x4d4 
    /*00026d94*/ ADD         SP, SP, #16 
    /*00026d98*/ BX          LR 
FUNC_END VPSS_HAL_SetChnPicAddr


FUNC_BEGIN VPSS_HAL_SetChnCrop
    /*00026d9c*/ LDR         R3, [R0] 
    /*00026da0*/ CMP         R1, #1 
    /*00026da4*/ PUSH        {R4, R5, LR} 
    /*00026da8*/ UBFX        IP, R3, #2, #1 
    /*00026dac*/ AND         R4, R3, #1 
    /*00026db0*/ UBFX        LR, R3, #1, #1 
    /*00026db4*/ BEQ         VPSS_HAL_SetChnCrop_x26e64
    /*00026db8*/ BCC         VPSS_HAL_SetChnCrop_x26e1c
    /*00026dbc*/ CMP         R1, #2 
    /*00026dc0*/ BNE         VPSS_HAL_SetChnCrop_x26e08
    /*00026dc4*/ LDR         R1, [R0, #284]              @ 0x11c 
    /*00026dc8*/ LDR         R5, [R2] 
    /*00026dcc*/ LDRH        IP, [R2, #4] 
    /*00026dd0*/ BFI         R1, R5, #0, #16 
    /*00026dd4*/ BFI         R1, IP, #16, #16 
    /*00026dd8*/ STR         R1, [R0, #284]              @ 0x11c 
    /*00026ddc*/ LDR         R1, [R2, #12] 
    /*00026de0*/ LDR         R5, [R2, #8] 
    /*00026de4*/ LDR         IP, [R0, #280]              @ 0x118 
    /*00026de8*/ SUB         R1, R1, #1 
    /*00026dec*/ SUB         R5, R5, #1 
    /*00026df0*/ UXTH        R1, R1 
    /*00026df4*/ BFI         IP, R5, #0, #16 
    /*00026df8*/ BFI         IP, R1, #16, #16 
    /*00026dfc*/ STR         IP, [R0, #280]              @ 0x118 
    /*00026e00*/ LDR         IP, [R2, #16] 
    /*00026e04*/ AND         IP, IP, #1 
    VPSS_HAL_SetChnCrop_x26e08:
    /*00026e08*/ BFI         R3, R4, #0, #1 
    /*00026e0c*/ BFI         R3, LR, #1, #1 
    /*00026e10*/ BFI         R3, IP, #2, #1 
    /*00026e14*/ STR         R3, [R0] 
    /*00026e18*/ POP         {R4, R5, PC} 
    VPSS_HAL_SetChnCrop_x26e1c:
    /*00026e1c*/ LDR         R1, [R0, #268]              @ 0x10c 
    /*00026e20*/ LDR         R5, [R2] 
    /*00026e24*/ LDRH        R4, [R2, #4] 
    /*00026e28*/ BFI         R1, R5, #0, #16 
    /*00026e2c*/ BFI         R1, R4, #16, #16 
    /*00026e30*/ STR         R1, [R0, #268]              @ 0x10c 
    /*00026e34*/ LDR         R1, [R2, #12] 
    /*00026e38*/ LDR         R5, [R2, #8] 
    /*00026e3c*/ LDR         R4, [R0, #264]              @ 0x108 
    /*00026e40*/ SUB         R1, R1, #1 
    /*00026e44*/ SUB         R5, R5, #1 
    /*00026e48*/ UXTH        R1, R1 
    /*00026e4c*/ BFI         R4, R5, #0, #16 
    /*00026e50*/ BFI         R4, R1, #16, #16 
    /*00026e54*/ STR         R4, [R0, #264]              @ 0x108 
    /*00026e58*/ LDR         R4, [R2, #16] 
    /*00026e5c*/ AND         R4, R4, #1 
    /*00026e60*/ B           VPSS_HAL_SetChnCrop_x26e08
    VPSS_HAL_SetChnCrop_x26e64:
    /*00026e64*/ LDR         R1, [R0, #276]              @ 0x114 
    /*00026e68*/ LDR         R5, [R2] 
    /*00026e6c*/ LDRH        LR, [R2, #4] 
    /*00026e70*/ BFI         R1, R5, #0, #16 
    /*00026e74*/ BFI         R1, LR, #16, #16 
    /*00026e78*/ STR         R1, [R0, #276]              @ 0x114 
    /*00026e7c*/ LDR         R1, [R2, #12] 
    /*00026e80*/ LDR         R5, [R2, #8] 
    /*00026e84*/ LDR         LR, [R0, #272]              @ 0x110 
    /*00026e88*/ SUB         R1, R1, #1 
    /*00026e8c*/ SUB         R5, R5, #1 
    /*00026e90*/ UXTH        R1, R1 
    /*00026e94*/ BFI         LR, R5, #0, #16 
    /*00026e98*/ BFI         LR, R1, #16, #16 
    /*00026e9c*/ STR         LR, [R0, #272]              @ 0x110 
    /*00026ea0*/ LDR         LR, [R2, #16] 
    /*00026ea4*/ AND         LR, LR, #1 
    /*00026ea8*/ B           VPSS_HAL_SetChnCrop_x26e08
FUNC_END VPSS_HAL_SetChnCrop


FUNC_BEGIN VPSS_HAL_SetMosaic
    /*00026eac*/ CMP         R1, #0 
    /*00026eb0*/ BXNE        LR 
    /*00026eb4*/ ADD         R1, R0, #8192               @ 0x2000 
    /*00026eb8*/ PUSH        {R4, LR} 
    /*00026ebc*/ ADD         LR, R2, #1152               @ 0x480 
    /*00026ec0*/ LDR         IP, [R1, #1028]             @ 0x404 
    /*00026ec4*/ ADD         LR, LR, #1 
    /*00026ec8*/ LDR         R4, [R3, #4] 
    /*00026ecc*/ ADD         R2, R0, R2, LSL #3 
    /*00026ed0*/ ADD         R2, R2, #8192               @ 0x2000 
    /*00026ed4*/ BFI         IP, R4, #0, #2 
    /*00026ed8*/ STR         IP, [R1, #1028]             @ 0x404 
    /*00026edc*/ LDR         R1, [R3, #8] 
    /*00026ee0*/ ADD         IP, R0, LR, LSL #3 
    /*00026ee4*/ CMP         R1, #0 
    /*00026ee8*/ LDR         R4, [IP, #4] 
    /*00026eec*/ SUBNE       R1, R1, #1 
    /*00026ef0*/ MOVEQ       IP, R1 
    /*00026ef4*/ UXTHNE      IP, R1 
    /*00026ef8*/ LDR         R1, [R3, #12] 
    /*00026efc*/ BFI         R4, IP, #0, #16 
    /*00026f00*/ CMP         R1, #0 
    /*00026f04*/ SUBNE       R1, R1, #1 
    /*00026f08*/ UXTHNE      R1, R1 
    /*00026f0c*/ BFI         R4, R1, #16, #16 
    /*00026f10*/ STR         R4, [R2, #1036]             @ 0x40c 
    /*00026f14*/ LDR         R1, [R0, LR, LSL #3] 
    /*00026f18*/ LDR         R0, [R3, #20] 
    /*00026f1c*/ LDRH        R3, [R3, #16] 
    /*00026f20*/ BFI         R1, R0, #0, #16 
    /*00026f24*/ BFI         R1, R3, #16, #16 
    /*00026f28*/ STR         R1, [R2, #1032]             @ 0x408 
    /*00026f2c*/ POP         {R4, PC} 
FUNC_END VPSS_HAL_SetMosaic


FUNC_BEGIN VPSS_HAL_SetMosaicCtrl
    /*00026f30*/ CMP         R1, #0 
    /*00026f34*/ BNE         VPSS_HAL_SetMosaicCtrl_x26f6c
    /*00026f38*/ CMP         R2, #3 
    /*00026f3c*/ LDRLS       PC, [PC, R2, LSL #2] 
    /*00026f40*/ B           VPSS_HAL_SetMosaicCtrl_x26f6c
    /*00026f44*/ ANDEQ       R6, R2, IP, ROR PC 
    /*00026f48*/ MULEQ       R2, R8, PC                  @ <UNPREDICTABLE> 
    /*00026f4c*/ @           <UNDEFINED> instruction: 0x00026fb4 
    /*00026f50*/ ANDEQ       R6, R2, R4, ASR PC 
    /*00026f54*/ ADD         R2, R0, #8192               @ 0x2000 
    /*00026f58*/ LDR         R1, [R3] 
    /*00026f5c*/ MOV         R3, R2 
    /*00026f60*/ LDR         R2, [R2, #1024]             @ 0x400 
    /*00026f64*/ BFI         R2, R1, #3, #1 
    /*00026f68*/ STR         R2, [R3, #1024]             @ 0x400 
    VPSS_HAL_SetMosaicCtrl_x26f6c:
    /*00026f6c*/ LDR         R3, [R0] 
    /*00026f70*/ ORR         R3, R3, #1024               @ 0x400 
    /*00026f74*/ STR         R3, [R0] 
    /*00026f78*/ BX          LR 
    /*00026f7c*/ ADD         R2, R0, #8192               @ 0x2000 
    /*00026f80*/ LDR         R1, [R3] 
    /*00026f84*/ MOV         R3, R2 
    /*00026f88*/ LDR         R2, [R2, #1024]             @ 0x400 
    /*00026f8c*/ BFI         R2, R1, #0, #1 
    /*00026f90*/ STR         R2, [R3, #1024]             @ 0x400 
    /*00026f94*/ B           VPSS_HAL_SetMosaicCtrl_x26f6c
    /*00026f98*/ ADD         R2, R0, #8192               @ 0x2000 
    /*00026f9c*/ LDR         R1, [R3] 
    /*00026fa0*/ MOV         R3, R2 
    /*00026fa4*/ LDR         R2, [R2, #1024]             @ 0x400 
    /*00026fa8*/ BFI         R2, R1, #1, #1 
    /*00026fac*/ STR         R2, [R3, #1024]             @ 0x400 
    /*00026fb0*/ B           VPSS_HAL_SetMosaicCtrl_x26f6c
    /*00026fb4*/ ADD         R2, R0, #8192               @ 0x2000 
    /*00026fb8*/ LDR         R1, [R3] 
    /*00026fbc*/ MOV         R3, R2 
    /*00026fc0*/ LDR         R2, [R2, #1024]             @ 0x400 
    /*00026fc4*/ BFI         R2, R1, #2, #1 
    /*00026fc8*/ STR         R2, [R3, #1024]             @ 0x400 
    /*00026fcc*/ B           VPSS_HAL_SetMosaicCtrl_x26f6c
FUNC_END VPSS_HAL_SetMosaicCtrl


FUNC_BEGIN VPSS_HAL_SetCoverCtrl
    /*00026fd0*/ CMP         R1, #0 
    /*00026fd4*/ BNE         VPSS_HAL_SetCoverCtrl_x27038
    /*00026fd8*/ ADD         R1, R0, #8192               @ 0x2000 
    /*00026fdc*/ PUSH        {R4, LR} 
    /*00026fe0*/ LDR         IP, [R2, #4] 
    /*00026fe4*/ LDR         R3, [R1, #1536]             @ 0x600 
    /*00026fe8*/ LDR         R4, [R2, #8] 
    /*00026fec*/ LDR         LR, [R2, #12] 
    /*00026ff0*/ BFI         R3, IP, #0, #1 
    /*00026ff4*/ BFI         R3, R4, #1, #1 
    /*00026ff8*/ LDR         IP, [R2, #16] 
    /*00026ffc*/ LDR         R4, [R2, #20] 
    /*00027000*/ BFI         R3, LR, #2, #1 
    /*00027004*/ BFI         R3, IP, #3, #1 
    /*00027008*/ LDR         LR, [R2, #24] 
    /*0002700c*/ LDR         IP, [R2, #28] 
    /*00027010*/ BFI         R3, R4, #4, #1 
    /*00027014*/ LDR         R2, [R2, #32] 
    /*00027018*/ BFI         R3, LR, #5, #1 
    /*0002701c*/ BFI         R3, IP, #6, #1 
    /*00027020*/ BFI         R3, R2, #7, #1 
    /*00027024*/ STR         R3, [R1, #1536]             @ 0x600 
    /*00027028*/ LDR         R3, [R0] 
    /*0002702c*/ ORR         R3, R3, #256                @ 0x100 
    /*00027030*/ STR         R3, [R0] 
    /*00027034*/ POP         {R4, PC} 
    VPSS_HAL_SetCoverCtrl_x27038:
    /*00027038*/ LDR         R3, [R0] 
    /*0002703c*/ ORR         R3, R3, #256                @ 0x100 
    /*00027040*/ STR         R3, [R0] 
    /*00027044*/ BX          LR 
FUNC_END VPSS_HAL_SetCoverCtrl


FUNC_BEGIN VPSS_HAL_SetCover
    /*00027048*/ CMP         R1, #0 
    /*0002704c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00027050*/ BNE         VPSS_HAL_SetCover_x27080
    /*00027054*/ MOV         IP, #44                     @ 0x2c 
    /*00027058*/ MOVW        R4, #9732                   @ 0x2604 
    /*0002705c*/ MLA         IP, IP, R2, R0 
    /*00027060*/ LDR         R7, [R3, #48]               @ 0x30 
    /*00027064*/ LDRB        R6, [R3, #44]               @ 0x2c 
    /*00027068*/ LDRB        R5, [R3, #40]               @ 0x28 
    /*0002706c*/ LDR         LR, [IP, R4] 
    /*00027070*/ BFI         LR, R7, #2, #8 
    /*00027074*/ BFI         LR, R6, #12, #8 
    /*00027078*/ BFI         LR, R5, #22, #8 
    /*0002707c*/ STR         LR, [IP, R4] 
    VPSS_HAL_SetCover_x27080:
    /*00027080*/ MOV         IP, #11 
    /*00027084*/ MOV         LR, #0 
    /*00027088*/ MUL         R2, IP, R2 
    VPSS_HAL_SetCover_x2708c:
    /*0002708c*/ ADD         IP, R2, LR 
    /*00027090*/ ADD         IP, IP, #2432               @ 0x980 
    /*00027094*/ CMP         R1, #0 
    /*00027098*/ ADD         LR, LR, #1 
    /*0002709c*/ ADD         IP, R0, IP, LSL #2 
    /*000270a0*/ BNE         VPSS_HAL_SetCover_x270bc
    /*000270a4*/ LDR         R6, [R3, #8] 
    /*000270a8*/ LDR         R4, [IP, #8] 
    /*000270ac*/ LDRH        R5, [R3, #12] 
    /*000270b0*/ BFI         R4, R6, #0, #16 
    /*000270b4*/ BFI         R4, R5, #16, #16 
    /*000270b8*/ STR         R4, [IP, #8] 
    VPSS_HAL_SetCover_x270bc:
    /*000270bc*/ CMP         LR, #4 
    /*000270c0*/ ADD         R3, R3, #8 
    /*000270c4*/ BNE         VPSS_HAL_SetCover_x2708c
    /*000270c8*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VPSS_HAL_SetCover


FUNC_BEGIN VPSS_HAL_SetCover1
    /*000270cc*/ ADD         R0, R0, #9728               @ 0x2600 
    /*000270d0*/ ADD         R0, R0, #4 
    /*000270d4*/ PUSH        {R4, R5, R6, LR} 
    /*000270d8*/ MOV         R6, #44                     @ 0x2c 
    /*000270dc*/ MLA         R6, R6, R2, R0 
    /*000270e0*/ LDR         R1, [R3, #20] 
    /*000270e4*/ MOV         R4, R3 
    /*000270e8*/ LDR         R3, [R3, #12] 
    /*000270ec*/ CMP         R1, R3 
    /*000270f0*/ LDR         R5, [R6, #20] 
    /*000270f4*/ MOVEQ       R0, #1 
    /*000270f8*/ BEQ         VPSS_HAL_SetCover1_x27114
    /*000270fc*/ LDR         R0, [R4, #16] 
    /*00027100*/ SUB         R1, R1, R3 
    /*00027104*/ LDR         R3, [R4, #8] 
    /*00027108*/ SUB         R0, R0, R3 
    /*0002710c*/ LSL         R0, R0, #14 
    /*00027110*/ BL          0x0000000000027110          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    VPSS_HAL_SetCover1_x27114:
    /*00027114*/ BFI         R5, R0, #0, #30 
    /*00027118*/ STR         R5, [R6, #20] 
    /*0002711c*/ LDR         R1, [R4, #28] 
    /*00027120*/ LDR         R3, [R4, #12] 
    /*00027124*/ LDR         R5, [R6, #24] 
    /*00027128*/ CMP         R1, R3 
    /*0002712c*/ MOVEQ       R0, #1 
    /*00027130*/ BEQ         VPSS_HAL_SetCover1_x2714c
    /*00027134*/ LDR         R0, [R4, #24] 
    /*00027138*/ SUB         R1, R1, R3 
    /*0002713c*/ LDR         R3, [R4, #8] 
    /*00027140*/ SUB         R0, R0, R3 
    /*00027144*/ LSL         R0, R0, #14 
    /*00027148*/ BL          0x0000000000027148          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    VPSS_HAL_SetCover1_x2714c:
    /*0002714c*/ BFI         R5, R0, #0, #30 
    /*00027150*/ STR         R5, [R6, #24] 
    /*00027154*/ LDR         R1, [R4, #36]               @ 0x24 
    /*00027158*/ LDR         R3, [R4, #12] 
    /*0002715c*/ LDR         R5, [R6, #28] 
    /*00027160*/ CMP         R1, R3 
    /*00027164*/ MOVEQ       R0, #1 
    /*00027168*/ BEQ         VPSS_HAL_SetCover1_x27184
    /*0002716c*/ LDR         R0, [R4, #32] 
    /*00027170*/ SUB         R1, R1, R3 
    /*00027174*/ LDR         R3, [R4, #8] 
    /*00027178*/ SUB         R0, R0, R3 
    /*0002717c*/ LSL         R0, R0, #14 
    /*00027180*/ BL          0x0000000000027180          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    VPSS_HAL_SetCover1_x27184:
    /*00027184*/ BFI         R5, R0, #0, #30 
    /*00027188*/ STR         R5, [R6, #28] 
    /*0002718c*/ LDR         R1, [R4, #28] 
    /*00027190*/ LDR         R3, [R4, #20] 
    /*00027194*/ LDR         R5, [R6, #32] 
    /*00027198*/ CMP         R1, R3 
    /*0002719c*/ MOVEQ       R0, #1 
    /*000271a0*/ BEQ         VPSS_HAL_SetCover1_x271bc
    /*000271a4*/ LDR         R0, [R4, #24] 
    /*000271a8*/ SUB         R1, R1, R3 
    /*000271ac*/ LDR         R3, [R4, #16] 
    /*000271b0*/ SUB         R0, R0, R3 
    /*000271b4*/ LSL         R0, R0, #14 
    /*000271b8*/ BL          0x00000000000271B8          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    VPSS_HAL_SetCover1_x271bc:
    /*000271bc*/ BFI         R5, R0, #0, #30 
    /*000271c0*/ STR         R5, [R6, #32] 
    /*000271c4*/ LDR         R1, [R4, #36]               @ 0x24 
    /*000271c8*/ LDR         R3, [R4, #20] 
    /*000271cc*/ LDR         R5, [R6, #36]               @ 0x24 
    /*000271d0*/ CMP         R1, R3 
    /*000271d4*/ MOVEQ       R0, #1 
    /*000271d8*/ BEQ         VPSS_HAL_SetCover1_x271f4
    /*000271dc*/ LDR         R0, [R4, #32] 
    /*000271e0*/ SUB         R1, R1, R3 
    /*000271e4*/ LDR         R3, [R4, #16] 
    /*000271e8*/ SUB         R0, R0, R3 
    /*000271ec*/ LSL         R0, R0, #14 
    /*000271f0*/ BL          0x00000000000271F0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    VPSS_HAL_SetCover1_x271f4:
    /*000271f4*/ BFI         R5, R0, #0, #30 
    /*000271f8*/ STR         R5, [R6, #36]               @ 0x24 
    /*000271fc*/ LDR         R1, [R4, #36]               @ 0x24 
    /*00027200*/ LDR         R3, [R4, #28] 
    /*00027204*/ LDR         R5, [R6, #40]               @ 0x28 
    /*00027208*/ CMP         R1, R3 
    /*0002720c*/ MOVEQ       R0, #1 
    /*00027210*/ BEQ         VPSS_HAL_SetCover1_x2722c
    /*00027214*/ LDR         R0, [R4, #32] 
    /*00027218*/ SUB         R1, R1, R3 
    /*0002721c*/ LDR         R3, [R4, #24] 
    /*00027220*/ SUB         R0, R0, R3 
    /*00027224*/ LSL         R0, R0, #14 
    /*00027228*/ BL          0x0000000000027228          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    VPSS_HAL_SetCover1_x2722c:
    /*0002722c*/ BFI         R5, R0, #0, #30 
    /*00027230*/ STR         R5, [R6, #40]               @ 0x28 
    /*00027234*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_HAL_SetCover1


FUNC_BEGIN VPSS_HAL_SetLBA
    /*00027238*/ CMP         R1, #1 
    /*0002723c*/ LDR         R3, [R0] 
    /*00027240*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00027244*/ BEQ         VPSS_HAL_SetLBA_x2734c
    /*00027248*/ BCC         VPSS_HAL_SetLBA_x272d0
    /*0002724c*/ CMP         R1, #2 
    /*00027250*/ BNE         VPSS_HAL_SetLBA_x272c8
    /*00027254*/ LDR         R1, [R2, #4] 
    /*00027258*/ LDR         LR, [R0, #336]              @ 0x150 
    /*0002725c*/ CMP         R1, #0 
    /*00027260*/ SUBNE       R1, R1, #1 
    /*00027264*/ MOVEQ       IP, R1 
    /*00027268*/ UXTHNE      IP, R1 
    /*0002726c*/ LDR         R1, [R2, #8] 
    /*00027270*/ BFI         LR, IP, #0, #16 
    /*00027274*/ CMP         R1, #0 
    /*00027278*/ SUBNE       R1, R1, #1 
    /*0002727c*/ UXTHNE      R1, R1 
    /*00027280*/ BFI         LR, R1, #16, #16 
    /*00027284*/ STR         LR, [R0, #336]              @ 0x150 
    /*00027288*/ LDR         LR, [R2, #12] 
    /*0002728c*/ LDR         R1, [R0, #340]              @ 0x154 
    /*00027290*/ LDRH        IP, [R2, #16] 
    /*00027294*/ BFI         R1, LR, #0, #16 
    /*00027298*/ BFI         R1, IP, #16, #16 
    /*0002729c*/ STR         R1, [R0, #340]              @ 0x154 
    /*000272a0*/ LDR         IP, [R2, #28] 
    /*000272a4*/ LDR         R1, [R0, #344]              @ 0x158 
    /*000272a8*/ LDRB        LR, [R2, #32] 
    /*000272ac*/ BFI         R1, IP, #2, #8 
    /*000272b0*/ LDRB        IP, [R2, #36]               @ 0x24 
    /*000272b4*/ BFI         R1, LR, #12, #8 
    /*000272b8*/ BFI         R1, IP, #22, #8 
    /*000272bc*/ STR         R1, [R0, #344]              @ 0x158 
    /*000272c0*/ LDR         R2, [R2] 
    /*000272c4*/ BFI         R3, R2, #22, #1 
    VPSS_HAL_SetLBA_x272c8:
    /*000272c8*/ STR         R3, [R0] 
    /*000272cc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_HAL_SetLBA_x272d0:
    /*000272d0*/ LDR         R1, [R2, #4] 
    /*000272d4*/ LDR         LR, [R0, #304]              @ 0x130 
    /*000272d8*/ CMP         R1, #0 
    /*000272dc*/ SUBNE       R1, R1, #1 
    /*000272e0*/ MOVEQ       IP, R1 
    /*000272e4*/ UXTHNE      IP, R1 
    /*000272e8*/ LDR         R1, [R2, #8] 
    /*000272ec*/ BFI         LR, IP, #0, #16 
    /*000272f0*/ CMP         R1, #0 
    /*000272f4*/ SUBNE       R1, R1, #1 
    /*000272f8*/ UXTHNE      R1, R1 
    /*000272fc*/ BFI         LR, R1, #16, #16 
    /*00027300*/ STR         LR, [R0, #304]              @ 0x130 
    /*00027304*/ LDR         LR, [R2, #12] 
    /*00027308*/ LDR         R1, [R0, #308]              @ 0x134 
    /*0002730c*/ LDRH        IP, [R2, #16] 
    /*00027310*/ BFI         R1, LR, #0, #16 
    /*00027314*/ BFI         R1, IP, #16, #16 
    /*00027318*/ STR         R1, [R0, #308]              @ 0x134 
    /*0002731c*/ LDR         IP, [R2, #28] 
    /*00027320*/ LDR         R1, [R0, #312]              @ 0x138 
    /*00027324*/ LDRB        LR, [R2, #32] 
    /*00027328*/ BFI         R1, IP, #2, #8 
    /*0002732c*/ LDRB        IP, [R2, #36]               @ 0x24 
    /*00027330*/ BFI         R1, LR, #12, #8 
    /*00027334*/ BFI         R1, IP, #22, #8 
    /*00027338*/ STR         R1, [R0, #312]              @ 0x138 
    /*0002733c*/ LDR         R2, [R2] 
    /*00027340*/ BFI         R3, R2, #20, #1 
    /*00027344*/ STR         R3, [R0] 
    /*00027348*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VPSS_HAL_SetLBA_x2734c:
    /*0002734c*/ LDR         R1, [R2, #4] 
    /*00027350*/ LDR         LR, [R0, #320]              @ 0x140 
    /*00027354*/ CMP         R1, #0 
    /*00027358*/ SUBNE       R1, R1, #1 
    /*0002735c*/ MOVEQ       IP, R1 
    /*00027360*/ UXTHNE      IP, R1 
    /*00027364*/ LDR         R1, [R2, #8] 
    /*00027368*/ BFI         LR, IP, #0, #16 
    /*0002736c*/ CMP         R1, #0 
    /*00027370*/ SUBNE       R1, R1, #1 
    /*00027374*/ UXTHNE      R1, R1 
    /*00027378*/ BFI         LR, R1, #16, #16 
    /*0002737c*/ STR         LR, [R0, #320]              @ 0x140 
    /*00027380*/ LDR         LR, [R2, #12] 
    /*00027384*/ LDR         R1, [R0, #324]              @ 0x144 
    /*00027388*/ LDRH        IP, [R2, #16] 
    /*0002738c*/ BFI         R1, LR, #0, #16 
    /*00027390*/ BFI         R1, IP, #16, #16 
    /*00027394*/ STR         R1, [R0, #324]              @ 0x144 
    /*00027398*/ LDR         IP, [R2, #28] 
    /*0002739c*/ LDR         R1, [R0, #328]              @ 0x148 
    /*000273a0*/ LDRB        LR, [R2, #32] 
    /*000273a4*/ BFI         R1, IP, #2, #8 
    /*000273a8*/ LDRB        IP, [R2, #36]               @ 0x24 
    /*000273ac*/ BFI         R1, LR, #12, #8 
    /*000273b0*/ BFI         R1, IP, #22, #8 
    /*000273b4*/ STR         R1, [R0, #328]              @ 0x148 
    /*000273b8*/ LDR         R2, [R2] 
    /*000273bc*/ BFI         R3, R2, #21, #1 
    /*000273c0*/ STR         R3, [R0] 
    /*000273c4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VPSS_HAL_SetLBA


FUNC_BEGIN VPSS_HAL_SetChnLowDelayAddr
    /*000273c8*/ CMP         R1, #1 
    /*000273cc*/ BEQ         VPSS_HAL_SetChnLowDelayAddr_x273f0
    /*000273d0*/ BCC         VPSS_HAL_SetChnLowDelayAddr_x273e8
    /*000273d4*/ CMP         R1, #2 
    /*000273d8*/ BNE         VPSS_HAL_SetChnLowDelayAddr_x273e4
    /*000273dc*/ STR         R2, [R0, #1432]             @ 0x598 
    /*000273e0*/ BX          LR 
    VPSS_HAL_SetChnLowDelayAddr_x273e4:
    /*000273e4*/ BX          LR 
    VPSS_HAL_SetChnLowDelayAddr_x273e8:
    /*000273e8*/ STR         R2, [R0, #1416]             @ 0x588 
    /*000273ec*/ BX          LR 
    VPSS_HAL_SetChnLowDelayAddr_x273f0:
    /*000273f0*/ STR         R2, [R0, #1424]             @ 0x590 
    /*000273f4*/ BX          LR 
FUNC_END VPSS_HAL_SetChnLowDelayAddr


FUNC_BEGIN VPSS_HAL_ClearChnLowDelayEn
    /*000273f8*/ LDR         R3, [R0, #1024]             @ 0x400 
    /*000273fc*/ CMP         R1, #1 
    /*00027400*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00027404*/ UBFX        R2, R3, #4, #1 
    /*00027408*/ UBFX        LR, R3, #5, #1 
    /*0002740c*/ UBFX        IP, R3, #6, #1 
    /*00027410*/ MOVEQ       LR, #0 
    /*00027414*/ BEQ         VPSS_HAL_ClearChnLowDelayEn_x2742c
    /*00027418*/ CMP         R1, #2 
    /*0002741c*/ MOVEQ       IP, #0 
    /*00027420*/ BEQ         VPSS_HAL_ClearChnLowDelayEn_x2742c
    /*00027424*/ CMP         R1, #0 
    /*00027428*/ MOVEQ       R2, #0 
    VPSS_HAL_ClearChnLowDelayEn_x2742c:
    /*0002742c*/ BFI         R3, R2, #4, #1 
    /*00027430*/ BFI         R3, LR, #5, #1 
    /*00027434*/ BFI         R3, IP, #6, #1 
    /*00027438*/ STR         R3, [R0, #1024]             @ 0x400 
    /*0002743c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VPSS_HAL_ClearChnLowDelayEn


FUNC_BEGIN VPSS_HAL_OnLineVideoEn
    /*00027440*/ LDR         R3, [R0] 
    /*00027444*/ BFI         R3, R1, #31, #1 
    /*00027448*/ STR         R3, [R0] 
    /*0002744c*/ BX          LR 
FUNC_END VPSS_HAL_OnLineVideoEn


FUNC_BEGIN VPSS_HAL_EnableGrpLowDelay
    /*00027450*/ LDR         R3, [R0, #1024]             @ 0x400 
    /*00027454*/ BFI         R3, R1, #7, #1 
    /*00027458*/ STR         R3, [R0, #1024]             @ 0x400 
    /*0002745c*/ BX          LR 
FUNC_END VPSS_HAL_EnableGrpLowDelay


FUNC_BEGIN VPSS_HAL_SetGrpLowDelayAddr
    /*00027460*/ STR         R2, [R0, #1404]             @ 0x57c 
    /*00027464*/ BX          LR 
FUNC_END VPSS_HAL_SetGrpLowDelayAddr


FUNC_BEGIN VPSS_HAL_EnableChnLowDelay
    /*00027468*/ PUSH        {R4, R5, R6, LR} 
    /*0002746c*/ MOV         R5, R1 
    /*00027470*/ MOV         R1, #0 
    /*00027474*/ MOV         R4, R0 
    /*00027478*/ MOV         R6, R2 
    /*0002747c*/ BL          0x000000000002747C          @ VPSS_HAL_ClearChnLowDelayEn [R_ARM_CALL: .text+0x273f8] 
    /*00027480*/ MOV         R1, #1 
    /*00027484*/ BL          0x0000000000027484          @ VPSS_HAL_ClearChnLowDelayEn [R_ARM_CALL: .text+0x273f8] 
    /*00027488*/ MOV         R1, #2 
    /*0002748c*/ BL          0x000000000002748C          @ VPSS_HAL_ClearChnLowDelayEn [R_ARM_CALL: .text+0x273f8] 
    /*00027490*/ CMP         R5, #1 
    /*00027494*/ LDR         R3, [R0, #1024]             @ 0x400 
    /*00027498*/ UBFX        R0, R3, #5, #1 
    /*0002749c*/ UBFX        IP, R3, #4, #1 
    /*000274a0*/ UBFX        R1, R3, #6, #1 
    /*000274a4*/ ANDEQ       R0, R6, #1 
    /*000274a8*/ BEQ         VPSS_HAL_EnableChnLowDelay_x274c0
    /*000274ac*/ CMP         R5, #2 
    /*000274b0*/ ANDEQ       R1, R6, #1 
    /*000274b4*/ BEQ         VPSS_HAL_EnableChnLowDelay_x274c0
    /*000274b8*/ CMP         R5, #0 
    /*000274bc*/ ANDEQ       IP, R6, #1 
    VPSS_HAL_EnableChnLowDelay_x274c0:
    /*000274c0*/ BFI         R3, IP, #4, #1 
    /*000274c4*/ BFI         R3, R0, #5, #1 
    /*000274c8*/ BFI         R3, R1, #6, #1 
    /*000274cc*/ STR         R3, [R4, #1024]             @ 0x400 
    /*000274d0*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_HAL_EnableChnLowDelay


FUNC_BEGIN VPSS_HAL_SetChnSclCfg
    /*000274d4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000274d8*/ MOV         R3, #0 
    /*000274dc*/ LDR         R4, [R2, #44]               @ 0x2c 
    /*000274e0*/ MOV         IP, R3 
    /*000274e4*/ LDR         LR, [R2, #40]               @ 0x28 
    /*000274e8*/ MOV         R7, #0 
    /*000274ec*/ LDR         R5, [R2] 
    /*000274f0*/ BFI         R3, R4, #21, #2 
    /*000274f4*/ LDR         R4, [R2, #68]               @ 0x44 
    /*000274f8*/ BFI         R3, LR, #19, #2 
    /*000274fc*/ LDR         LR, [R2, #4] 
    /*00027500*/ BFI         IP, R5, #0, #24 
    /*00027504*/ BFI         R3, R4, #30, #1 
    /*00027508*/ LDR         R5, [R2, #72]               @ 0x48 
    /*0002750c*/ LDR         R4, [R2, #24] 
    /*00027510*/ BFI         IP, LR, #24, #1 
    /*00027514*/ LDR         R6, [R2, #88]               @ 0x58 
    /*00027518*/ BFI         R3, R5, #31, #1 
    /*0002751c*/ LDR         LR, [R2, #28] 
    /*00027520*/ BFI         IP, R4, #30, #1 
    /*00027524*/ LDR         R5, [R2, #92]               @ 0x5c 
    /*00027528*/ SUB         R6, R6, #1 
    /*0002752c*/ LDR         R4, [R2, #96]               @ 0x60 
    /*00027530*/ BFI         IP, LR, #31, #1 
    /*00027534*/ ORR         R3, R3, #25165824           @ 0x1800000 
    /*00027538*/ LDR         LR, [R2, #100]              @ 0x64 
    /*0002753c*/ LDR         SL, [R2, #32] 
    /*00027540*/ SUB         R4, R4, #1 
    /*00027544*/ LDR         R9, [R2, #36]               @ 0x24 
    /*00027548*/ SUB         R5, R5, #1 
    /*0002754c*/ LDR         R8, [R2, #76]               @ 0x4c 
    /*00027550*/ BFI         R7, R6, #0, #16 
    /*00027554*/ BFC         R3, #28, #1 
    /*00027558*/ LDR         R6, [R2, #84]               @ 0x54 
    /*0002755c*/ ORR         IP, IP, #100663296          @ 0x6000000 
    /*00027560*/ LDR         R2, [R2, #80]               @ 0x50 
    /*00027564*/ CMP         R1, #1 
    /*00027568*/ SUB         LR, LR, #1 
    /*0002756c*/ BFC         R3, #29, #1 
    /*00027570*/ BFC         IP, #28, #1 
    /*00027574*/ BFI         R7, R5, #16, #16 
    /*00027578*/ MOV         R5, #0 
    /*0002757c*/ BFI         R5, R4, #0, #16 
    /*00027580*/ BFC         R3, #26, #1 
    /*00027584*/ MOV         R4, #0 
    /*00027588*/ BFI         R5, LR, #16, #16 
    /*0002758c*/ BFI         R4, SL, #0, #30 
    /*00027590*/ MOV         LR, #0 
    /*00027594*/ MOV         SL, #0 
    /*00027598*/ BFC         IP, #29, #1 
    /*0002759c*/ BFI         SL, R9, #0, #30 
    /*000275a0*/ BFI         LR, R2, #0, #24 
    /*000275a4*/ MOV         R9, #0 
    /*000275a8*/ BFI         R9, R8, #0, #24 
    /*000275ac*/ MOV         R8, #0 
    /*000275b0*/ BFI         R8, R6, #0, #24 
    /*000275b4*/ BEQ         VPSS_HAL_SetChnSclCfg_x2761c
    /*000275b8*/ BCC         VPSS_HAL_SetChnSclCfg_x275f0
    /*000275bc*/ CMP         R1, #2 
    /*000275c0*/ BNE         VPSS_HAL_SetChnSclCfg_x275ec
    /*000275c4*/ ADD         R0, R0, #8192               @ 0x2000 
    /*000275c8*/ STR         IP, [R0, #128]              @ 0x80 
    /*000275cc*/ STR         R4, [R0, #132]              @ 0x84 
    /*000275d0*/ STR         SL, [R0, #136]              @ 0x88 
    /*000275d4*/ STR         R3, [R0, #140]              @ 0x8c 
    /*000275d8*/ STR         R9, [R0, #144]              @ 0x90 
    /*000275dc*/ STR         R8, [R0, #148]              @ 0x94 
    /*000275e0*/ STR         LR, [R0, #152]              @ 0x98 
    /*000275e4*/ STR         R7, [R0, #156]              @ 0x9c 
    /*000275e8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_HAL_SetChnSclCfg_x275ec:
    /*000275ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_HAL_SetChnSclCfg_x275f0:
    /*000275f0*/ ADD         R0, R0, #8192               @ 0x2000 
    /*000275f4*/ STR         IP, [R0] 
    /*000275f8*/ STR         R4, [R0, #4] 
    /*000275fc*/ STR         SL, [R0, #8] 
    /*00027600*/ STR         R3, [R0, #12] 
    /*00027604*/ STR         R9, [R0, #16] 
    /*00027608*/ STR         R8, [R0, #20] 
    /*0002760c*/ STR         LR, [R0, #24] 
    /*00027610*/ STR         R7, [R0, #28] 
    /*00027614*/ STR         R5, [R0, #32] 
    /*00027618*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VPSS_HAL_SetChnSclCfg_x2761c:
    /*0002761c*/ ADD         R0, R0, #8192               @ 0x2000 
    /*00027620*/ STR         IP, [R0, #64]               @ 0x40 
    /*00027624*/ STR         R4, [R0, #68]               @ 0x44 
    /*00027628*/ STR         SL, [R0, #72]               @ 0x48 
    /*0002762c*/ STR         R3, [R0, #76]               @ 0x4c 
    /*00027630*/ STR         R9, [R0, #80]               @ 0x50 
    /*00027634*/ STR         R8, [R0, #84]               @ 0x54 
    /*00027638*/ STR         LR, [R0, #88]               @ 0x58 
    /*0002763c*/ STR         R7, [R0, #92]               @ 0x5c 
    /*00027640*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VPSS_HAL_SetChnSclCfg


FUNC_BEGIN VPSS_HAL_SetChnSclCoeff
    /*00027644*/ CMP         R1, #1 
    /*00027648*/ BEQ         VPSS_HAL_SetChnSclCoeff_x276a4
    /*0002764c*/ BCC         VPSS_HAL_SetChnSclCoeff_x27680
    /*00027650*/ CMP         R1, #2 
    /*00027654*/ BNE         VPSS_HAL_SetChnSclCoeff_x2767c
    /*00027658*/ LDR         R3, [R2] 
    /*0002765c*/ STR         R3, [R0, #448]              @ 0x1c0 
    /*00027660*/ LDR         R3, [R2, #8] 
    /*00027664*/ STR         R3, [R0, #456]              @ 0x1c8 
    /*00027668*/ LDR         R3, [R2, #16] 
    /*0002766c*/ STR         R3, [R0, #464]              @ 0x1d0 
    /*00027670*/ LDR         R3, [R2, #24] 
    /*00027674*/ STR         R3, [R0, #472]              @ 0x1d8 
    /*00027678*/ BX          LR 
    VPSS_HAL_SetChnSclCoeff_x2767c:
    /*0002767c*/ BX          LR 
    VPSS_HAL_SetChnSclCoeff_x27680:
    /*00027680*/ LDR         R3, [R2] 
    /*00027684*/ STR         R3, [R0, #384]              @ 0x180 
    /*00027688*/ LDR         R3, [R2, #8] 
    /*0002768c*/ STR         R3, [R0, #392]              @ 0x188 
    /*00027690*/ LDR         R3, [R2, #16] 
    /*00027694*/ STR         R3, [R0, #400]              @ 0x190 
    /*00027698*/ LDR         R3, [R2, #24] 
    /*0002769c*/ STR         R3, [R0, #408]              @ 0x198 
    /*000276a0*/ BX          LR 
    VPSS_HAL_SetChnSclCoeff_x276a4:
    /*000276a4*/ LDR         R3, [R2] 
    /*000276a8*/ STR         R3, [R0, #416]              @ 0x1a0 
    /*000276ac*/ LDR         R3, [R2, #8] 
    /*000276b0*/ STR         R3, [R0, #424]              @ 0x1a8 
    /*000276b4*/ LDR         R3, [R2, #16] 
    /*000276b8*/ STR         R3, [R0, #432]              @ 0x1b0 
    /*000276bc*/ LDR         R3, [R2, #24] 
    /*000276c0*/ STR         R3, [R0, #440]              @ 0x1b8 
    /*000276c4*/ BX          LR 
FUNC_END VPSS_HAL_SetChnSclCoeff


FUNC_BEGIN VPSS_HAL_SetNrLoadAddr
    /*000276c8*/ STR         R2, [R0, #544]              @ 0x220 
    /*000276cc*/ BX          LR 
FUNC_END VPSS_HAL_SetNrLoadAddr


FUNC_BEGIN VPSS_HAL_SetZmeLoadAddr
    /*000276d0*/ STR         R2, [R0, #536]              @ 0x218 
    /*000276d4*/ BX          LR 
FUNC_END VPSS_HAL_SetZmeLoadAddr


FUNC_BEGIN VPSS_HAL_SetShbdLoadAddr
    /*000276d8*/ STR         R2, [R0, #512]              @ 0x200 
    /*000276dc*/ BX          LR 
FUNC_END VPSS_HAL_SetShbdLoadAddr


FUNC_BEGIN VPSS_HAL_SetMosaicLoadAddr
    /*000276e0*/ STR         R2, [R0, #520]              @ 0x208 
    /*000276e4*/ BX          LR 
FUNC_END VPSS_HAL_SetMosaicLoadAddr


FUNC_BEGIN VPSS_HAL_SetHdrLoadAddr
    /*000276e8*/ BX          LR 
FUNC_END VPSS_HAL_SetHdrLoadAddr


FUNC_BEGIN VPSS_HAL_SetCurDcmpAttr
    /*000276ec*/ PUSH        {R4, LR} 
    /*000276f0*/ LDR         R2, [R1, #12] 
    /*000276f4*/ LDR         IP, [R1, #24] 
    /*000276f8*/ LDR         LR, [R1, #20] 
    /*000276fc*/ LDR         R3, [R0, #1792]             @ 0x700 
    /*00027700*/ CMP         LR, #1 
    /*00027704*/ CMPEQ       R2, #0 
    /*00027708*/ LDR         LR, [IP, #8] 
    /*0002770c*/ LDR         IP, [IP, #12] 
    /*00027710*/ MOVEQ       R2, #1 
    /*00027714*/ MOVNE       R2, #0 
    /*00027718*/ BFI         R3, R2, #0, #1 
    /*0002771c*/ LDR         R4, [R1, #28] 
    /*00027720*/ BFI         R3, LR, #1, #1 
    /*00027724*/ BFI         R3, IP, #2, #1 
    /*00027728*/ STR         R3, [R0, #1792]             @ 0x700 
    /*0002772c*/ LDR         LR, [R1] 
    /*00027730*/ LDR         R3, [R0, #1796]             @ 0x704 
    /*00027734*/ LDR         IP, [R1, #4] 
    /*00027738*/ SUB         LR, LR, #1 
    /*0002773c*/ BFI         R3, LR, #0, #14 
    /*00027740*/ SUB         IP, IP, #1 
    /*00027744*/ BFI         R3, IP, #16, #14 
    /*00027748*/ STR         R3, [R0, #1796]             @ 0x704 
    /*0002774c*/ LDR         R3, [R0, #1824]             @ 0x720 
    /*00027750*/ LDR         IP, [R4, #8] 
    /*00027754*/ BFI         R3, R2, #0, #1 
    /*00027758*/ LDR         R2, [R4, #12] 
    /*0002775c*/ BFI         R3, IP, #1, #1 
    /*00027760*/ BFI         R3, R2, #2, #1 
    /*00027764*/ STR         R3, [R0, #1824]             @ 0x720 
    /*00027768*/ LDR         IP, [R1] 
    /*0002776c*/ LDR         R2, [R1, #4] 
    /*00027770*/ LDR         R3, [R0, #1828]             @ 0x724 
    /*00027774*/ SUB         R1, IP, #1 
    /*00027778*/ SUB         R2, R2, #1 
    /*0002777c*/ BFI         R3, R1, #0, #14 
    /*00027780*/ BFI         R3, R2, #16, #14 
    /*00027784*/ STR         R3, [R0, #1828]             @ 0x724 
    /*00027788*/ POP         {R4, PC} 
FUNC_END VPSS_HAL_SetCurDcmpAttr


FUNC_BEGIN VPSS_HAL_SetChnCmpAttr
    /*0002778c*/ CMP         R1, #0 
    /*00027790*/ BXNE        LR 
    /*00027794*/ PUSH        {R4, R5, LR} 
    /*00027798*/ LDR         LR, [R2, #20] 
    /*0002779c*/ LDR         R1, [R2, #24] 
    /*000277a0*/ SUB         LR, LR, #1 
    /*000277a4*/ LDR         IP, [R0, #1856]             @ 0x740 
    /*000277a8*/ CLZ         LR, LR 
    /*000277ac*/ LDR         R4, [R1, #12] 
    /*000277b0*/ LSR         LR, LR, #5 
    /*000277b4*/ LDR         R3, [R1, #8] 
    /*000277b8*/ BFI         IP, LR, #0, #1 
    /*000277bc*/ LDR         R5, [R1] 
    /*000277c0*/ BFI         IP, R4, #1, #2 
    /*000277c4*/ LDR         R4, [R1, #24] 
    /*000277c8*/ BFI         IP, R3, #3, #1 
    /*000277cc*/ LDR         R3, [R1, #28] 
    /*000277d0*/ BFI         IP, R5, #4, #1 
    /*000277d4*/ LDR         R5, [R1, #32] 
    /*000277d8*/ BFI         IP, R4, #5, #1 
    /*000277dc*/ SUB         R3, R3, #1 
    /*000277e0*/ LDR         R4, [R1, #208]              @ 0xd0 
    /*000277e4*/ BFI         IP, R3, #6, #5 
    /*000277e8*/ BFI         IP, R5, #11, #1 
    /*000277ec*/ LDR         R3, [R1, #212]              @ 0xd4 
    /*000277f0*/ LDR         R5, [R1, #4] 
    /*000277f4*/ BFI         IP, R4, #12, #3 
    /*000277f8*/ BFI         IP, R3, #15, #1 
    /*000277fc*/ LDR         R4, [R1, #20] 
    /*00027800*/ BFI         IP, R5, #16, #1 
    /*00027804*/ LDR         R3, [R2, #28] 
    /*00027808*/ BFI         IP, R4, #17, #1 
    /*0002780c*/ STR         IP, [R0, #1856]             @ 0x740 
    /*00027810*/ LDR         R4, [R1, #44]               @ 0x2c 
    /*00027814*/ LDR         R2, [R0, #1860]             @ 0x744 
    /*00027818*/ LDR         IP, [R1, #40]               @ 0x28 
    /*0002781c*/ SUB         R4, R4, #1 
    /*00027820*/ BFI         R2, R4, #16, #14 
    /*00027824*/ SUB         IP, IP, #1 
    /*00027828*/ BFI         R2, IP, #0, #14 
    /*0002782c*/ STR         R2, [R0, #1860]             @ 0x744 
    /*00027830*/ LDR         R2, [R0, #1864]             @ 0x748 
    /*00027834*/ LDR         IP, [R1, #152]              @ 0x98 
    /*00027838*/ LDR         R4, [R1, #156]              @ 0x9c 
    /*0002783c*/ BFI         R2, IP, #0, #10 
    /*00027840*/ LDR         IP, [R1, #160]              @ 0xa0 
    /*00027844*/ BFI         R2, R4, #10, #10 
    /*00027848*/ BFI         R2, IP, #20, #10 
    /*0002784c*/ STR         R2, [R0, #1864]             @ 0x748 
    /*00027850*/ LDR         R4, [R1, #132]              @ 0x84 
    /*00027854*/ LDR         R2, [R0, #1868]             @ 0x74c 
    /*00027858*/ LDR         IP, [R1, #136]              @ 0x88 
    /*0002785c*/ BFI         R2, R4, #0, #8 
    /*00027860*/ LDR         R4, [R1, #140]              @ 0x8c 
    /*00027864*/ BFI         R2, IP, #8, #6 
    /*00027868*/ LDR         IP, [R1, #144]              @ 0x90 
    /*0002786c*/ BFI         R2, R4, #16, #8 
    /*00027870*/ BFI         R2, IP, #24, #4 
    /*00027874*/ STR         R2, [R0, #1868]             @ 0x74c 
    /*00027878*/ LDR         R2, [R0, #1872]             @ 0x750 
    /*0002787c*/ LDR         R4, [R1, #52]               @ 0x34 
    /*00027880*/ LDR         IP, [R1, #56]               @ 0x38 
    /*00027884*/ BFI         R2, R4, #0, #8 
    /*00027888*/ LDR         R4, [R1, #60]               @ 0x3c 
    /*0002788c*/ BFI         R2, IP, #8, #8 
    /*00027890*/ LDR         IP, [R1, #64]               @ 0x40 
    /*00027894*/ BFI         R2, R4, #16, #8 
    /*00027898*/ BFI         R2, IP, #24, #8 
    /*0002789c*/ STR         R2, [R0, #1872]             @ 0x750 
    /*000278a0*/ LDR         R2, [R0, #1876]             @ 0x754 
    /*000278a4*/ LDR         IP, [R1, #68]               @ 0x44 
    /*000278a8*/ LDR         R4, [R1, #72]               @ 0x48 
    /*000278ac*/ BFI         R2, IP, #0, #6 
    /*000278b0*/ LDR         IP, [R1, #76]               @ 0x4c 
    /*000278b4*/ BFI         R2, R4, #8, #6 
    /*000278b8*/ BFI         R2, IP, #16, #6 
    /*000278bc*/ STR         R2, [R0, #1876]             @ 0x754 
    /*000278c0*/ LDR         R2, [R0, #1880]             @ 0x758 
    /*000278c4*/ LDR         R4, [R1, #80]               @ 0x50 
    /*000278c8*/ LDR         IP, [R1, #84]               @ 0x54 
    /*000278cc*/ BFI         R2, R4, #0, #8 
    /*000278d0*/ BFI         R2, IP, #8, #8 
    /*000278d4*/ STR         R2, [R0, #1880]             @ 0x758 
    /*000278d8*/ LDR         R2, [R1, #88]               @ 0x58 
    /*000278dc*/ LDR         IP, [R0, #1884]             @ 0x75c 
    /*000278e0*/ STR         R2, [R0, #1884]             @ 0x75c 
    /*000278e4*/ LDR         R2, [R1, #92]               @ 0x5c 
    /*000278e8*/ LDR         IP, [R0, #1888]             @ 0x760 
    /*000278ec*/ STR         R2, [R0, #1888]             @ 0x760 
    /*000278f0*/ LDR         R2, [R1, #96]               @ 0x60 
    /*000278f4*/ LDR         IP, [R0, #1892]             @ 0x764 
    /*000278f8*/ STR         R2, [R0, #1892]             @ 0x764 
    /*000278fc*/ LDR         R2, [R1, #100]              @ 0x64 
    /*00027900*/ LDR         IP, [R0, #1896]             @ 0x768 
    /*00027904*/ STR         R2, [R0, #1896]             @ 0x768 
    /*00027908*/ LDR         R2, [R1, #104]              @ 0x68 
    /*0002790c*/ LDR         IP, [R0, #1900]             @ 0x76c 
    /*00027910*/ STR         R2, [R0, #1900]             @ 0x76c 
    /*00027914*/ LDR         R2, [R1, #108]              @ 0x6c 
    /*00027918*/ LDR         IP, [R0, #1904]             @ 0x770 
    /*0002791c*/ STR         R2, [R0, #1904]             @ 0x770 
    /*00027920*/ LDR         R2, [R0, #1908]             @ 0x774 
    /*00027924*/ LDR         R2, [R1, #112]              @ 0x70 
    /*00027928*/ STR         R2, [R0, #1908]             @ 0x774 
    /*0002792c*/ LDR         R2, [R1, #116]              @ 0x74 
    /*00027930*/ LDR         IP, [R0, #1912]             @ 0x778 
    /*00027934*/ STR         R2, [R0, #1912]             @ 0x778 
    /*00027938*/ LDR         R2, [R1, #120]              @ 0x78 
    /*0002793c*/ LDR         IP, [R0, #1916]             @ 0x77c 
    /*00027940*/ STR         R2, [R0, #1916]             @ 0x77c 
    /*00027944*/ LDR         R2, [R1, #124]              @ 0x7c 
    /*00027948*/ LDR         IP, [R0, #1920]             @ 0x780 
    /*0002794c*/ STR         R2, [R0, #1920]             @ 0x780 
    /*00027950*/ LDR         R2, [R0, #1924]             @ 0x784 
    /*00027954*/ LDR         IP, [R1, #128]              @ 0x80 
    /*00027958*/ LDR         R4, [R1, #164]              @ 0xa4 
    /*0002795c*/ BFI         R2, IP, #0, #16 
    /*00027960*/ LDR         IP, [R1, #168]              @ 0xa8 
    /*00027964*/ BFI         R2, R4, #16, #3 
    /*00027968*/ BFI         R2, IP, #19, #3 
    /*0002796c*/ STR         R2, [R0, #1924]             @ 0x784 
    /*00027970*/ LDR         R2, [R0, #1928]             @ 0x788 
    /*00027974*/ LDR         IP, [R1, #148]              @ 0x94 
    /*00027978*/ BFI         R2, IP, #0, #16 
    /*0002797c*/ STR         R2, [R0, #1928]             @ 0x788 
    /*00027980*/ LDR         R2, [R0, #1932]             @ 0x78c 
    /*00027984*/ LDR         R4, [R1, #172]              @ 0xac 
    /*00027988*/ LDR         IP, [R1, #176]              @ 0xb0 
    /*0002798c*/ BFI         R2, R4, #0, #8 
    /*00027990*/ LDR         R4, [R1, #180]              @ 0xb4 
    /*00027994*/ BFI         R2, IP, #8, #8 
    /*00027998*/ LDR         IP, [R1, #184]              @ 0xb8 
    /*0002799c*/ BFI         R2, R4, #16, #8 
    /*000279a0*/ BFI         R2, IP, #24, #8 
    /*000279a4*/ STR         R2, [R0, #1932]             @ 0x78c 
    /*000279a8*/ LDR         R4, [R1, #188]              @ 0xbc 
    /*000279ac*/ LDR         R2, [R0, #1936]             @ 0x790 
    /*000279b0*/ LDR         IP, [R1, #192]              @ 0xc0 
    /*000279b4*/ BFI         R2, R4, #0, #4 
    /*000279b8*/ LDR         R1, [R1, #196]              @ 0xc4 
    /*000279bc*/ BFI         R2, IP, #4, #4 
    /*000279c0*/ BFI         R2, R1, #8, #4 
    /*000279c4*/ STR         R2, [R0, #1936]             @ 0x790 
    /*000279c8*/ LDR         R2, [R0, #1960]             @ 0x7a8 
    /*000279cc*/ LDR         IP, [R3, #12] 
    /*000279d0*/ BFI         R2, LR, #0, #1 
    /*000279d4*/ LDR         R1, [R3, #8] 
    /*000279d8*/ LDR         LR, [R3] 
    /*000279dc*/ BFI         R2, IP, #1, #2 
    /*000279e0*/ BFI         R2, R1, #3, #1 
    /*000279e4*/ LDR         IP, [R3, #24] 
    /*000279e8*/ LDR         R1, [R3, #28] 
    /*000279ec*/ BFI         R2, LR, #4, #1 
    /*000279f0*/ BFI         R2, IP, #5, #1 
    /*000279f4*/ LDR         IP, [R3, #32] 
    /*000279f8*/ SUB         R1, R1, #1 
    /*000279fc*/ LDR         R4, [R3, #208]              @ 0xd0 
    /*00027a00*/ BFI         R2, R1, #6, #5 
    /*00027a04*/ LDR         LR, [R3, #212]              @ 0xd4 
    /*00027a08*/ BFI         R2, IP, #11, #1 
    /*00027a0c*/ LDR         IP, [R3, #4] 
    /*00027a10*/ BFI         R2, R4, #12, #3 
    /*00027a14*/ LDR         R1, [R3, #20] 
    /*00027a18*/ BFI         R2, LR, #15, #1 
    /*00027a1c*/ BFI         R2, IP, #16, #1 
    /*00027a20*/ BFI         R2, R1, #17, #1 
    /*00027a24*/ STR         R2, [R0, #1960]             @ 0x7a8 
    /*00027a28*/ LDR         IP, [R3, #40]               @ 0x28 
    /*00027a2c*/ LDR         R2, [R0, #1964]             @ 0x7ac 
    /*00027a30*/ LDR         R1, [R3, #44]               @ 0x2c 
    /*00027a34*/ SUB         IP, IP, #1 
    /*00027a38*/ BFI         R2, IP, #0, #14 
    /*00027a3c*/ SUB         R1, R1, #1 
    /*00027a40*/ BFI         R2, R1, #16, #14 
    /*00027a44*/ STR         R2, [R0, #1964]             @ 0x7ac 
    /*00027a48*/ LDR         R2, [R0, #1968]             @ 0x7b0 
    /*00027a4c*/ LDR         LR, [R3, #152]              @ 0x98 
    /*00027a50*/ LDR         IP, [R3, #156]              @ 0x9c 
    /*00027a54*/ LDR         R1, [R3, #160]              @ 0xa0 
    /*00027a58*/ BFI         R2, LR, #0, #10 
    /*00027a5c*/ BFI         R2, IP, #10, #10 
    /*00027a60*/ BFI         R2, R1, #20, #10 
    /*00027a64*/ STR         R2, [R0, #1968]             @ 0x7b0 
    /*00027a68*/ LDR         R1, [R3, #132]              @ 0x84 
    /*00027a6c*/ LDR         R2, [R0, #1972]             @ 0x7b4 
    /*00027a70*/ LDR         LR, [R3, #136]              @ 0x88 
    /*00027a74*/ LDR         IP, [R3, #140]              @ 0x8c 
    /*00027a78*/ BFI         R2, R1, #0, #8 
    /*00027a7c*/ BFI         R2, LR, #8, #6 
    /*00027a80*/ LDR         R1, [R3, #144]              @ 0x90 
    /*00027a84*/ BFI         R2, IP, #16, #8 
    /*00027a88*/ BFI         R2, R1, #24, #4 
    /*00027a8c*/ STR         R2, [R0, #1972]             @ 0x7b4 
    /*00027a90*/ LDR         R1, [R3, #52]               @ 0x34 
    /*00027a94*/ LDR         R2, [R0, #1976]             @ 0x7b8 
    /*00027a98*/ LDR         LR, [R3, #56]               @ 0x38 
    /*00027a9c*/ LDR         IP, [R3, #60]               @ 0x3c 
    /*00027aa0*/ BFI         R2, R1, #0, #8 
    /*00027aa4*/ BFI         R2, LR, #8, #8 
    /*00027aa8*/ LDR         R1, [R3, #64]               @ 0x40 
    /*00027aac*/ BFI         R2, IP, #16, #8 
    /*00027ab0*/ BFI         R2, R1, #24, #8 
    /*00027ab4*/ STR         R2, [R0, #1976]             @ 0x7b8 
    /*00027ab8*/ LDR         R2, [R0, #1980]             @ 0x7bc 
    /*00027abc*/ LDR         LR, [R3, #68]               @ 0x44 
    /*00027ac0*/ LDR         IP, [R3, #72]               @ 0x48 
    /*00027ac4*/ LDR         R1, [R3, #76]               @ 0x4c 
    /*00027ac8*/ BFI         R2, LR, #0, #6 
    /*00027acc*/ BFI         R2, IP, #8, #6 
    /*00027ad0*/ BFI         R2, R1, #16, #6 
    /*00027ad4*/ STR         R2, [R0, #1980]             @ 0x7bc 
    /*00027ad8*/ LDR         R2, [R0, #1984]             @ 0x7c0 
    /*00027adc*/ LDR         IP, [R3, #80]               @ 0x50 
    /*00027ae0*/ LDR         R1, [R3, #84]               @ 0x54 
    /*00027ae4*/ BFI         R2, IP, #0, #8 
    /*00027ae8*/ BFI         R2, R1, #8, #8 
    /*00027aec*/ STR         R2, [R0, #1984]             @ 0x7c0 
    /*00027af0*/ LDR         R2, [R3, #88]               @ 0x58 
    /*00027af4*/ LDR         R1, [R0, #1988]             @ 0x7c4 
    /*00027af8*/ STR         R2, [R0, #1988]             @ 0x7c4 
    /*00027afc*/ LDR         R2, [R3, #92]               @ 0x5c 
    /*00027b00*/ LDR         R1, [R0, #1992]             @ 0x7c8 
    /*00027b04*/ STR         R2, [R0, #1992]             @ 0x7c8 
    /*00027b08*/ LDR         R2, [R3, #96]               @ 0x60 
    /*00027b0c*/ LDR         R1, [R0, #1996]             @ 0x7cc 
    /*00027b10*/ STR         R2, [R0, #1996]             @ 0x7cc 
    /*00027b14*/ LDR         R2, [R3, #100]              @ 0x64 
    /*00027b18*/ LDR         R1, [R0, #2000]             @ 0x7d0 
    /*00027b1c*/ STR         R2, [R0, #2000]             @ 0x7d0 
    /*00027b20*/ LDR         R2, [R3, #104]              @ 0x68 
    /*00027b24*/ LDR         R1, [R0, #2004]             @ 0x7d4 
    /*00027b28*/ STR         R2, [R0, #2004]             @ 0x7d4 
    /*00027b2c*/ LDR         R2, [R3, #108]              @ 0x6c 
    /*00027b30*/ LDR         R1, [R0, #2008]             @ 0x7d8 
    /*00027b34*/ STR         R2, [R0, #2008]             @ 0x7d8 
    /*00027b38*/ LDR         R2, [R3, #112]              @ 0x70 
    /*00027b3c*/ LDR         R1, [R0, #2012]             @ 0x7dc 
    /*00027b40*/ STR         R2, [R0, #2012]             @ 0x7dc 
    /*00027b44*/ LDR         R2, [R3, #116]              @ 0x74 
    /*00027b48*/ LDR         R1, [R0, #2016]             @ 0x7e0 
    /*00027b4c*/ STR         R2, [R0, #2016]             @ 0x7e0 
    /*00027b50*/ LDR         R2, [R0, #2020]             @ 0x7e4 
    /*00027b54*/ LDR         R2, [R3, #120]              @ 0x78 
    /*00027b58*/ STR         R2, [R0, #2020]             @ 0x7e4 
    /*00027b5c*/ LDR         R2, [R3, #124]              @ 0x7c 
    /*00027b60*/ LDR         R1, [R0, #2024]             @ 0x7e8 
    /*00027b64*/ STR         R2, [R0, #2024]             @ 0x7e8 
    /*00027b68*/ LDR         R2, [R0, #2028]             @ 0x7ec 
    /*00027b6c*/ LDR         LR, [R3, #128]              @ 0x80 
    /*00027b70*/ LDR         IP, [R3, #164]              @ 0xa4 
    /*00027b74*/ LDR         R1, [R3, #168]              @ 0xa8 
    /*00027b78*/ BFI         R2, LR, #0, #16 
    /*00027b7c*/ BFI         R2, IP, #16, #3 
    /*00027b80*/ BFI         R2, R1, #19, #3 
    /*00027b84*/ STR         R2, [R0, #2028]             @ 0x7ec 
    /*00027b88*/ LDR         R2, [R0, #2032]             @ 0x7f0 
    /*00027b8c*/ LDR         R1, [R3, #148]              @ 0x94 
    /*00027b90*/ BFI         R2, R1, #0, #16 
    /*00027b94*/ STR         R2, [R0, #2032]             @ 0x7f0 
    /*00027b98*/ LDR         R1, [R3, #172]              @ 0xac 
    /*00027b9c*/ LDR         R2, [R0, #2036]             @ 0x7f4 
    /*00027ba0*/ LDR         LR, [R3, #176]              @ 0xb0 
    /*00027ba4*/ LDR         IP, [R3, #180]              @ 0xb4 
    /*00027ba8*/ BFI         R2, R1, #0, #8 
    /*00027bac*/ BFI         R2, LR, #8, #8 
    /*00027bb0*/ LDR         R1, [R3, #184]              @ 0xb8 
    /*00027bb4*/ BFI         R2, IP, #16, #8 
    /*00027bb8*/ BFI         R2, R1, #24, #8 
    /*00027bbc*/ STR         R2, [R0, #2036]             @ 0x7f4 
    /*00027bc0*/ LDR         IP, [R3, #188]              @ 0xbc 
    /*00027bc4*/ LDR         R2, [R0, #2040]             @ 0x7f8 
    /*00027bc8*/ LDR         R1, [R3, #192]              @ 0xc0 
    /*00027bcc*/ BFI         R2, IP, #0, #4 
    /*00027bd0*/ LDR         R3, [R3, #196]              @ 0xc4 
    /*00027bd4*/ BFI         R2, R1, #4, #4 
    /*00027bd8*/ BFI         R2, R3, #8, #4 
    /*00027bdc*/ STR         R2, [R0, #2040]             @ 0x7f8 
    /*00027be0*/ POP         {R4, R5, PC} 
FUNC_END VPSS_HAL_SetChnCmpAttr


FUNC_BEGIN VPSS_HAL_Set3dnrEnable
    /*00027be4*/ LDR         R3, [R0] 
    /*00027be8*/ BFI         R3, R1, #13, #1 
    /*00027bec*/ STR         R3, [R0] 
    /*00027bf0*/ BX          LR 
FUNC_END VPSS_HAL_Set3dnrEnable


FUNC_BEGIN VPSS_HAL_SetRefConfig
    /*00027bf4*/ LDR         IP, [R1, #48]               @ 0x30 
    /*00027bf8*/ LDR         R3, [R0, #1448]             @ 0x5a8 
    /*00027bfc*/ LDR         R2, [R1, #52]               @ 0x34 
    /*00027c00*/ SUB         IP, IP, #1 
    /*00027c04*/ BFI         R3, IP, #0, #16 
    /*00027c08*/ SUB         R2, R2, #1 
    /*00027c0c*/ BFI         R3, R2, #16, #16 
    /*00027c10*/ STR         R3, [R0, #1448]             @ 0x5a8 
    /*00027c14*/ LDR         R3, [R0, #1452]             @ 0x5ac 
    /*00027c18*/ LDR         IP, [R1, #76]               @ 0x4c 
    /*00027c1c*/ LDR         R2, [R1, #72]               @ 0x48 
    /*00027c20*/ BFI         R3, IP, #0, #1 
    /*00027c24*/ LDR         IP, [R1, #32] 
    /*00027c28*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00027c2c*/ BFI         R3, R2, #1, #1 
    /*00027c30*/ LDR         LR, [R1, #68]               @ 0x44 
    /*00027c34*/ LDR         R2, [R1, #36]               @ 0x24 
    /*00027c38*/ BFI         R3, LR, #2, #1 
    /*00027c3c*/ LDR         LR, [R1, #64]               @ 0x40 
    /*00027c40*/ BFI         R3, IP, #21, #2 
    /*00027c44*/ LDR         IP, [R1, #60]               @ 0x3c 
    /*00027c48*/ BFI         R3, R2, #23, #2 
    /*00027c4c*/ LDR         R2, [R1, #56]               @ 0x38 
    /*00027c50*/ BFI         R3, LR, #8, #4 
    /*00027c54*/ BFI         R3, IP, #12, #6 
    /*00027c58*/ BFI         R3, R2, #31, #1 
    /*00027c5c*/ STR         R3, [R0, #1452]             @ 0x5ac 
    /*00027c60*/ LDR         R3, [R0, #1456]             @ 0x5b0 
    /*00027c64*/ LDR         IP, [R1, #120]              @ 0x78 
    /*00027c68*/ LDR         R2, [R1, #124]              @ 0x7c 
    /*00027c6c*/ BFI         R3, IP, #16, #16 
    /*00027c70*/ BFI         R3, R2, #0, #16 
    /*00027c74*/ STR         R3, [R0, #1456]             @ 0x5b0 
    /*00027c78*/ LDR         R3, [R0, #1492]             @ 0x5d4 
    /*00027c7c*/ LDR         IP, [R1, #40]               @ 0x28 
    /*00027c80*/ LDR         R2, [R1, #44]               @ 0x2c 
    /*00027c84*/ BFI         R3, IP, #0, #16 
    /*00027c88*/ BFI         R3, R2, #16, #16 
    /*00027c8c*/ STR         R3, [R0, #1492]             @ 0x5d4 
    /*00027c90*/ LDR         R3, [R1] 
    /*00027c94*/ STR         R3, [R0, #1460]             @ 0x5b4 
    /*00027c98*/ LDR         R3, [R1, #8] 
    /*00027c9c*/ STR         R3, [R0, #1468]             @ 0x5bc 
    /*00027ca0*/ LDR         R3, [R1, #16] 
    /*00027ca4*/ STR         R3, [R0, #1476]             @ 0x5c4 
    /*00027ca8*/ LDR         R3, [R1, #24] 
    /*00027cac*/ STR         R3, [R0, #1484]             @ 0x5cc 
    /*00027cb0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VPSS_HAL_SetRefConfig


FUNC_BEGIN VPSS_HAL_SetRefFDcmpAttr
    /*00027cb4*/ LDR         IP, [R0, #2064]             @ 0x810 
    /*00027cb8*/ AND         R3, R3, #1 
    /*00027cbc*/ PUSH        {R4, LR} 
    /*00027cc0*/ BFI         IP, R3, #0, #1 
    /*00027cc4*/ LDR         LR, [R1, #4] 
    /*00027cc8*/ LDR         R4, [R1] 
    /*00027ccc*/ BFI         IP, LR, #1, #1 
    /*00027cd0*/ LDR         LR, [R1, #20] 
    /*00027cd4*/ BFI         IP, R4, #2, #1 
    /*00027cd8*/ BFI         IP, LR, #3, #1 
    /*00027cdc*/ BFC         IP, #4, #1 
    /*00027ce0*/ STR         IP, [R0, #2064]             @ 0x810 
    /*00027ce4*/ LDR         LR, [R1, #12] 
    /*00027ce8*/ LDR         IP, [R1, #16] 
    /*00027cec*/ LDR         R1, [R0, #2068]             @ 0x814 
    /*00027cf0*/ SUB         LR, LR, #1 
    /*00027cf4*/ SUB         IP, IP, #1 
    /*00027cf8*/ BFI         R1, LR, #0, #14 
    /*00027cfc*/ BFI         R1, IP, #16, #14 
    /*00027d00*/ STR         R1, [R0, #2068]             @ 0x814 
    /*00027d04*/ LDR         R1, [R0, #2072]             @ 0x818 
    /*00027d08*/ BFC         R1, #0, #22 
    /*00027d0c*/ STR         R1, [R0, #2072]             @ 0x818 
    /*00027d10*/ LDR         R1, [R0, #2080]             @ 0x820 
    /*00027d14*/ LDR         LR, [R2, #4] 
    /*00027d18*/ LDR         IP, [R2] 
    /*00027d1c*/ BFI         R1, R3, #0, #1 
    /*00027d20*/ BFI         R1, LR, #1, #1 
    /*00027d24*/ LDR         R3, [R2, #20] 
    /*00027d28*/ BFI         R1, IP, #2, #1 
    /*00027d2c*/ BFI         R1, R3, #3, #1 
    /*00027d30*/ BFC         R1, #4, #1 
    /*00027d34*/ STR         R1, [R0, #2080]             @ 0x820 
    /*00027d38*/ LDR         R1, [R2, #12] 
    /*00027d3c*/ LDR         R3, [R0, #2084]             @ 0x824 
    /*00027d40*/ LDR         R2, [R2, #16] 
    /*00027d44*/ SUB         R1, R1, #1 
    /*00027d48*/ BFI         R3, R1, #0, #14 
    /*00027d4c*/ SUB         R2, R2, #1 
    /*00027d50*/ BFI         R3, R2, #16, #14 
    /*00027d54*/ STR         R3, [R0, #2084]             @ 0x824 
    /*00027d58*/ LDR         R3, [R0, #2088]             @ 0x828 
    /*00027d5c*/ BFC         R3, #0, #22 
    /*00027d60*/ STR         R3, [R0, #2088]             @ 0x828 
    /*00027d64*/ POP         {R4, PC} 
FUNC_END VPSS_HAL_SetRefFDcmpAttr


FUNC_BEGIN VPSS_HAL_SetRfrConfig
    /*00027d68*/ LDR         IP, [R1, #48]               @ 0x30 
    /*00027d6c*/ LDR         R3, [R0, #1516]             @ 0x5ec 
    /*00027d70*/ LDR         R2, [R1, #52]               @ 0x34 
    /*00027d74*/ SUB         IP, IP, #1 
    /*00027d78*/ BFI         R3, IP, #0, #16 
    /*00027d7c*/ SUB         R2, R2, #1 
    /*00027d80*/ BFI         R3, R2, #16, #16 
    /*00027d84*/ STR         R3, [R0, #1516]             @ 0x5ec 
    /*00027d88*/ LDR         R3, [R0, #1520]             @ 0x5f0 
    /*00027d8c*/ LDR         IP, [R1, #76]               @ 0x4c 
    /*00027d90*/ LDR         R2, [R1, #72]               @ 0x48 
    /*00027d94*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00027d98*/ BFI         R3, IP, #0, #1 
    /*00027d9c*/ LDR         LR, [R1, #68]               @ 0x44 
    /*00027da0*/ BFI         R3, R2, #1, #1 
    /*00027da4*/ LDR         IP, [R1, #32] 
    /*00027da8*/ LDR         R2, [R1, #36]               @ 0x24 
    /*00027dac*/ BFI         R3, LR, #2, #1 
    /*00027db0*/ BFI         R3, IP, #21, #2 
    /*00027db4*/ LDR         LR, [R1, #100]              @ 0x64 
    /*00027db8*/ LDR         IP, [R1, #64]               @ 0x40 
    /*00027dbc*/ BFI         R3, R2, #23, #2 
    /*00027dc0*/ BFI         R3, LR, #7, #1 
    /*00027dc4*/ LDR         R2, [R1, #60]               @ 0x3c 
    /*00027dc8*/ LDR         LR, [R1, #92]               @ 0x5c 
    /*00027dcc*/ BFI         R3, IP, #8, #4 
    /*00027dd0*/ BFI         R3, R2, #12, #6 
    /*00027dd4*/ LDR         IP, [R1, #88]               @ 0x58 
    /*00027dd8*/ LDR         R2, [R1, #56]               @ 0x38 
    /*00027ddc*/ BFI         R3, LR, #19, #1 
    /*00027de0*/ BFI         R3, IP, #20, #1 
    /*00027de4*/ BFI         R3, R2, #31, #1 
    /*00027de8*/ STR         R3, [R0, #1520]             @ 0x5f0 
    /*00027dec*/ LDR         R3, [R0, #1524]             @ 0x5f4 
    /*00027df0*/ LDR         IP, [R1, #80]               @ 0x50 
    /*00027df4*/ LDR         R2, [R1, #84]               @ 0x54 
    /*00027df8*/ BFI         R3, IP, #16, #16 
    /*00027dfc*/ BFI         R3, R2, #0, #16 
    /*00027e00*/ STR         R3, [R0, #1524]             @ 0x5f4 
    /*00027e04*/ LDR         R3, [R0, #1568]             @ 0x620 
    /*00027e08*/ LDR         IP, [R1, #40]               @ 0x28 
    /*00027e0c*/ LDR         R2, [R1, #44]               @ 0x2c 
    /*00027e10*/ BFI         R3, IP, #0, #16 
    /*00027e14*/ BFI         R3, R2, #16, #16 
    /*00027e18*/ STR         R3, [R0, #1568]             @ 0x620 
    /*00027e1c*/ LDR         R3, [R1, #104]              @ 0x68 
    /*00027e20*/ STR         R3, [R0, #1528]             @ 0x5f8 
    /*00027e24*/ LDR         R3, [R1, #108]              @ 0x6c 
    /*00027e28*/ STR         R3, [R0, #1532]             @ 0x5fc 
    /*00027e2c*/ LDR         R3, [R1] 
    /*00027e30*/ STR         R3, [R0, #1536]             @ 0x600 
    /*00027e34*/ LDR         R3, [R1, #8] 
    /*00027e38*/ STR         R3, [R0, #1544]             @ 0x608 
    /*00027e3c*/ LDR         R3, [R1, #16] 
    /*00027e40*/ STR         R3, [R0, #1552]             @ 0x610 
    /*00027e44*/ LDR         R3, [R1, #24] 
    /*00027e48*/ STR         R3, [R0, #1560]             @ 0x618 
    /*00027e4c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VPSS_HAL_SetRfrConfig


FUNC_BEGIN VPSS_HAL_SetRfrCmpAttr
    /*00027e50*/ PUSH        {R4, R5, R6, LR} 
    /*00027e54*/ AND         R3, R3, #1 
    /*00027e58*/ LDR         IP, [R0, #2096]             @ 0x830 
    /*00027e5c*/ MOV         LR, #64                     @ 0x40 
    /*00027e60*/ LDR         R5, [R1, #4] 
    /*00027e64*/ LDR         R4, [R1] 
    /*00027e68*/ BFI         IP, R5, #0, #1 
    /*00027e6c*/ LDR         R5, [R1, #20] 
    /*00027e70*/ BFI         IP, R4, #1, #1 
    /*00027e74*/ LDR         R4, [R1, #24] 
    /*00027e78*/ BFI         IP, R5, #2, #1 
    /*00027e7c*/ BFI         IP, R4, #3, #1 
    /*00027e80*/ BFI         IP, R3, #4, #1 
    /*00027e84*/ STR         IP, [R0, #2096]             @ 0x830 
    /*00027e88*/ LDR         R5, [R1, #12] 
    /*00027e8c*/ LDR         IP, [R0, #2100]             @ 0x834 
    /*00027e90*/ LDR         R4, [R1, #16] 
    /*00027e94*/ SUB         R5, R5, #1 
    /*00027e98*/ BFI         IP, R5, #0, #13 
    /*00027e9c*/ SUB         R4, R4, #1 
    /*00027ea0*/ BFI         IP, R4, #16, #13 
    /*00027ea4*/ STR         IP, [R0, #2100]             @ 0x834 
    /*00027ea8*/ LDR         IP, [R0, #2104]             @ 0x838 
    /*00027eac*/ LDR         R5, [R1, #40]               @ 0x28 
    /*00027eb0*/ LDR         R4, [R1, #120]              @ 0x78 
    /*00027eb4*/ BFI         IP, R5, #0, #10 
    /*00027eb8*/ BFI         IP, R4, #16, #10 
    /*00027ebc*/ STR         IP, [R0, #2104]             @ 0x838 
    /*00027ec0*/ LDR         IP, [R0, #2108]             @ 0x83c 
    /*00027ec4*/ LDR         R5, [R1, #92]               @ 0x5c 
    /*00027ec8*/ LDR         R4, [R1, #96]               @ 0x60 
    /*00027ecc*/ BFI         IP, R5, #0, #4 
    /*00027ed0*/ LDR         R5, [R1, #100]              @ 0x64 
    /*00027ed4*/ BFI         IP, R4, #8, #4 
    /*00027ed8*/ LDRB        R4, [R1, #104]              @ 0x68 
    /*00027edc*/ BFI         IP, R5, #16, #3 
    /*00027ee0*/ BFI         IP, R4, #24, #8 
    /*00027ee4*/ STR         IP, [R0, #2108]             @ 0x83c 
    /*00027ee8*/ LDR         IP, [R0, #2112]             @ 0x840 
    /*00027eec*/ LDR         R5, [R1, #112]              @ 0x70 
    /*00027ef0*/ LDR         R4, [R1, #108]              @ 0x6c 
    /*00027ef4*/ BFI         IP, R5, #0, #7 
    /*00027ef8*/ BFI         IP, R4, #16, #7 
    /*00027efc*/ STR         IP, [R0, #2112]             @ 0x840 
    /*00027f00*/ LDR         R4, [R1, #48]               @ 0x30 
    /*00027f04*/ LDR         IP, [R0, #2116]             @ 0x844 
    /*00027f08*/ LDR         R5, [R1, #52]               @ 0x34 
    /*00027f0c*/ BFI         IP, R4, #0, #7 
    /*00027f10*/ LDR         R4, [R1, #56]               @ 0x38 
    /*00027f14*/ BFI         IP, R5, #8, #7 
    /*00027f18*/ BFI         IP, R4, #16, #10 
    /*00027f1c*/ STR         IP, [R0, #2116]             @ 0x844 
    /*00027f20*/ LDR         R5, [R1, #64]               @ 0x40 
    /*00027f24*/ LDR         IP, [R0, #2120]             @ 0x848 
    /*00027f28*/ LDR         R4, [R1, #68]               @ 0x44 
    /*00027f2c*/ LDR         R6, [R1, #60]               @ 0x3c 
    /*00027f30*/ BFI         IP, R6, #0, #6 
    /*00027f34*/ BFI         IP, R5, #8, #6 
    /*00027f38*/ BFI         IP, R4, #16, #6 
    /*00027f3c*/ STR         IP, [R0, #2120]             @ 0x848 
    /*00027f40*/ LDR         IP, [R0, #2124]             @ 0x84c 
    /*00027f44*/ LDR         R5, [R1, #116]              @ 0x74 
    /*00027f48*/ LDR         R4, [R1, #44]               @ 0x2c 
    /*00027f4c*/ BFI         IP, R5, #0, #7 
    /*00027f50*/ BFI         IP, R4, #16, #10 
    /*00027f54*/ STR         IP, [R0, #2124]             @ 0x84c 
    /*00027f58*/ LDR         IP, [R0, #2128]             @ 0x850 
    /*00027f5c*/ LDR         R4, [R1, #72]               @ 0x48 
    /*00027f60*/ BFI         IP, R4, #0, #7 
    /*00027f64*/ STR         IP, [R0, #2128]             @ 0x850 
    /*00027f68*/ LDR         IP, [R0, #2132]             @ 0x854 
    /*00027f6c*/ LDR         R5, [R1, #76]               @ 0x4c 
    /*00027f70*/ LDRB        R4, [R1, #80]               @ 0x50 
    /*00027f74*/ BFI         IP, R5, #0, #8 
    /*00027f78*/ LDRB        R5, [R1, #84]               @ 0x54 
    /*00027f7c*/ BFI         IP, R4, #8, #8 
    /*00027f80*/ LDRB        R4, [R1, #88]               @ 0x58 
    /*00027f84*/ BFI         IP, R5, #16, #8 
    /*00027f88*/ BFI         IP, R4, #24, #8 
    /*00027f8c*/ STR         IP, [R0, #2132]             @ 0x854 
    /*00027f90*/ LDR         IP, [R0, #2136]             @ 0x858 
    /*00027f94*/ LDR         R5, [R1, #124]              @ 0x7c 
    /*00027f98*/ LDR         R4, [R1, #128]              @ 0x80 
    /*00027f9c*/ BFI         IP, R5, #0, #5 
    /*00027fa0*/ BFI         IP, R4, #16, #9 
    /*00027fa4*/ STR         IP, [R0, #2136]             @ 0x858 
    /*00027fa8*/ LDR         IP, [R0, #2140]             @ 0x85c 
    /*00027fac*/ LDR         R5, [R1, #132]              @ 0x84 
    /*00027fb0*/ LDR         R4, [R1, #136]              @ 0x88 
    /*00027fb4*/ BFI         IP, R5, #16, #7 
    /*00027fb8*/ BFI         IP, R4, #24, #7 
    /*00027fbc*/ STR         IP, [R0, #2140]             @ 0x85c 
    /*00027fc0*/ LDR         IP, [R0, #2144]             @ 0x860 
    /*00027fc4*/ BFI         IP, LR, #0, #7 
    /*00027fc8*/ STR         IP, [R0, #2144]             @ 0x860 
    /*00027fcc*/ LDR         IP, [R0, #2148]             @ 0x864 
    /*00027fd0*/ LDR         R4, [R1, #28] 
    /*00027fd4*/ LDR         R1, [R1, #32] 
    /*00027fd8*/ BFI         IP, R4, #0, #13 
    /*00027fdc*/ BFI         IP, R1, #16, #13 
    /*00027fe0*/ STR         IP, [R0, #2148]             @ 0x864 
    /*00027fe4*/ LDR         R5, [R2] 
    /*00027fe8*/ LDR         R1, [R0, #2180]             @ 0x884 
    /*00027fec*/ LDR         R4, [R2, #20] 
    /*00027ff0*/ LDR         R6, [R2, #4] 
    /*00027ff4*/ LDR         IP, [R2, #24] 
    /*00027ff8*/ BFI         R1, R6, #0, #1 
    /*00027ffc*/ BFI         R1, R5, #1, #1 
    /*00028000*/ BFI         R1, R4, #2, #1 
    /*00028004*/ BFI         R1, IP, #3, #1 
    /*00028008*/ BFI         R1, R3, #4, #1 
    /*0002800c*/ STR         R1, [R0, #2180]             @ 0x884 
    /*00028010*/ LDR         IP, [R2, #12] 
    /*00028014*/ LDR         R3, [R0, #2184]             @ 0x888 
    /*00028018*/ LDR         R1, [R2, #16] 
    /*0002801c*/ SUB         IP, IP, #1 
    /*00028020*/ BFI         R3, IP, #0, #13 
    /*00028024*/ SUB         R1, R1, #1 
    /*00028028*/ BFI         R3, R1, #16, #13 
    /*0002802c*/ STR         R3, [R0, #2184]             @ 0x888 
    /*00028030*/ LDR         R3, [R0, #2188]             @ 0x88c 
    /*00028034*/ LDR         IP, [R2, #40]               @ 0x28 
    /*00028038*/ LDR         R1, [R2, #120]              @ 0x78 
    /*0002803c*/ BFI         R3, IP, #0, #10 
    /*00028040*/ BFI         R3, R1, #16, #10 
    /*00028044*/ STR         R3, [R0, #2188]             @ 0x88c 
    /*00028048*/ LDR         R3, [R0, #2192]             @ 0x890 
    /*0002804c*/ LDR         IP, [R2, #92]               @ 0x5c 
    /*00028050*/ LDR         R1, [R2, #96]               @ 0x60 
    /*00028054*/ BFI         R3, IP, #0, #4 
    /*00028058*/ LDR         IP, [R2, #100]              @ 0x64 
    /*0002805c*/ BFI         R3, R1, #8, #4 
    /*00028060*/ LDRB        R1, [R2, #104]              @ 0x68 
    /*00028064*/ BFI         R3, IP, #16, #3 
    /*00028068*/ BFI         R3, R1, #24, #8 
    /*0002806c*/ STR         R3, [R0, #2192]             @ 0x890 
    /*00028070*/ LDR         R3, [R0, #2196]             @ 0x894 
    /*00028074*/ LDR         IP, [R2, #112]              @ 0x70 
    /*00028078*/ LDR         R1, [R2, #108]              @ 0x6c 
    /*0002807c*/ BFI         R3, IP, #0, #7 
    /*00028080*/ BFI         R3, R1, #16, #7 
    /*00028084*/ STR         R3, [R0, #2196]             @ 0x894 
    /*00028088*/ LDR         R1, [R2, #48]               @ 0x30 
    /*0002808c*/ LDR         R3, [R0, #2200]             @ 0x898 
    /*00028090*/ LDR         IP, [R2, #52]               @ 0x34 
    /*00028094*/ BFI         R3, R1, #0, #7 
    /*00028098*/ LDR         R1, [R2, #56]               @ 0x38 
    /*0002809c*/ BFI         R3, IP, #8, #7 
    /*000280a0*/ BFI         R3, R1, #16, #10 
    /*000280a4*/ STR         R3, [R0, #2200]             @ 0x898 
    /*000280a8*/ LDR         R1, [R2, #60]               @ 0x3c 
    /*000280ac*/ LDR         R3, [R0, #2204]             @ 0x89c 
    /*000280b0*/ LDR         IP, [R2, #64]               @ 0x40 
    /*000280b4*/ BFI         R3, R1, #0, #6 
    /*000280b8*/ LDR         R1, [R2, #68]               @ 0x44 
    /*000280bc*/ BFI         R3, IP, #8, #6 
    /*000280c0*/ BFI         R3, R1, #16, #6 
    /*000280c4*/ STR         R3, [R0, #2204]             @ 0x89c 
    /*000280c8*/ LDR         R3, [R0, #2208]             @ 0x8a0 
    /*000280cc*/ LDR         IP, [R2, #116]              @ 0x74 
    /*000280d0*/ LDR         R1, [R2, #44]               @ 0x2c 
    /*000280d4*/ BFI         R3, IP, #0, #7 
    /*000280d8*/ BFI         R3, R1, #16, #10 
    /*000280dc*/ STR         R3, [R0, #2208]             @ 0x8a0 
    /*000280e0*/ LDR         R3, [R0, #2212]             @ 0x8a4 
    /*000280e4*/ LDR         R1, [R2, #72]               @ 0x48 
    /*000280e8*/ BFI         R3, R1, #0, #7 
    /*000280ec*/ STR         R3, [R0, #2212]             @ 0x8a4 
    /*000280f0*/ LDR         R3, [R0, #2216]             @ 0x8a8 
    /*000280f4*/ LDR         IP, [R2, #76]               @ 0x4c 
    /*000280f8*/ LDRB        R1, [R2, #80]               @ 0x50 
    /*000280fc*/ BFI         R3, IP, #0, #8 
    /*00028100*/ LDRB        IP, [R2, #84]               @ 0x54 
    /*00028104*/ BFI         R3, R1, #8, #8 
    /*00028108*/ LDRB        R1, [R2, #88]               @ 0x58 
    /*0002810c*/ BFI         R3, IP, #16, #8 
    /*00028110*/ BFI         R3, R1, #24, #8 
    /*00028114*/ STR         R3, [R0, #2216]             @ 0x8a8 
    /*00028118*/ LDR         R3, [R0, #2220]             @ 0x8ac 
    /*0002811c*/ LDR         IP, [R2, #124]              @ 0x7c 
    /*00028120*/ LDR         R1, [R2, #128]              @ 0x80 
    /*00028124*/ BFI         R3, IP, #0, #5 
    /*00028128*/ BFI         R3, R1, #16, #9 
    /*0002812c*/ STR         R3, [R0, #2220]             @ 0x8ac 
    /*00028130*/ LDR         R3, [R0, #2224]             @ 0x8b0 
    /*00028134*/ LDR         IP, [R2, #132]              @ 0x84 
    /*00028138*/ LDR         R1, [R2, #136]              @ 0x88 
    /*0002813c*/ BFI         R3, IP, #16, #7 
    /*00028140*/ BFI         R3, R1, #24, #7 
    /*00028144*/ STR         R3, [R0, #2224]             @ 0x8b0 
    /*00028148*/ LDR         R3, [R0, #2228]             @ 0x8b4 
    /*0002814c*/ BFI         R3, LR, #0, #7 
    /*00028150*/ STR         R3, [R0, #2228]             @ 0x8b4 
    /*00028154*/ LDR         R1, [R2, #28] 
    /*00028158*/ LDR         R3, [R0, #2232]             @ 0x8b8 
    /*0002815c*/ LDR         R2, [R2, #32] 
    /*00028160*/ BFI         R3, R1, #0, #13 
    /*00028164*/ BFI         R3, R2, #16, #13 
    /*00028168*/ STR         R3, [R0, #2232]             @ 0x8b8 
    /*0002816c*/ POP         {R4, R5, R6, PC} 
FUNC_END VPSS_HAL_SetRfrCmpAttr


FUNC_BEGIN VPSS_HAL_SetMadConfig
    /*00028170*/ LDR         IP, [R1, #36]               @ 0x24 
    /*00028174*/ LDR         R3, [R0, #1592]             @ 0x638 
    /*00028178*/ LDR         R2, [R1, #40]               @ 0x28 
    /*0002817c*/ SUB         IP, IP, #1 
    /*00028180*/ BFI         R3, IP, #0, #16 
    /*00028184*/ SUB         R2, R2, #1 
    /*00028188*/ BFI         R3, R2, #16, #16 
    /*0002818c*/ STR         R3, [R0, #1592]             @ 0x638 
    /*00028190*/ LDR         R3, [R0, #1604]             @ 0x644 
    /*00028194*/ LDR         R2, [R1, #32] 
    /*00028198*/ BFI         R3, R2, #0, #16 
    /*0002819c*/ STR         R3, [R0, #1604]             @ 0x644 
    /*000281a0*/ LDR         R3, [R1] 
    /*000281a4*/ STR         R3, [R0, #1596]             @ 0x63c 
    /*000281a8*/ LDR         IP, [R1, #36]               @ 0x24 
    /*000281ac*/ LDR         R3, [R0, #1624]             @ 0x658 
    /*000281b0*/ LDR         R2, [R1, #40]               @ 0x28 
    /*000281b4*/ SUB         IP, IP, #1 
    /*000281b8*/ BFI         R3, IP, #0, #16 
    /*000281bc*/ SUB         R2, R2, #1 
    /*000281c0*/ BFI         R3, R2, #16, #16 
    /*000281c4*/ STR         R3, [R0, #1624]             @ 0x658 
    /*000281c8*/ LDR         R3, [R0, #1636]             @ 0x664 
    /*000281cc*/ LDR         R2, [R1, #32] 
    /*000281d0*/ BFI         R3, R2, #0, #16 
    /*000281d4*/ STR         R3, [R0, #1636]             @ 0x664 
    /*000281d8*/ LDR         R3, [R1, #16] 
    /*000281dc*/ STR         R3, [R0, #1628]             @ 0x65c 
    /*000281e0*/ LDR         IP, [R1, #36]               @ 0x24 
    /*000281e4*/ LDR         R3, [R0, #1608]             @ 0x648 
    /*000281e8*/ LDR         R2, [R1, #40]               @ 0x28 
    /*000281ec*/ SUB         IP, IP, #1 
    /*000281f0*/ BFI         R3, IP, #0, #16 
    /*000281f4*/ SUB         R2, R2, #1 
    /*000281f8*/ BFI         R3, R2, #16, #16 
    /*000281fc*/ STR         R3, [R0, #1608]             @ 0x648 
    /*00028200*/ LDR         R3, [R0, #1620]             @ 0x654 
    /*00028204*/ LDR         R2, [R1, #32] 
    /*00028208*/ BFI         R3, R2, #0, #16 
    /*0002820c*/ STR         R3, [R0, #1620]             @ 0x654 
    /*00028210*/ LDR         R3, [R1, #8] 
    /*00028214*/ STR         R3, [R0, #1612]             @ 0x64c 
    /*00028218*/ LDR         IP, [R1, #36]               @ 0x24 
    /*0002821c*/ LDR         R3, [R0, #1640]             @ 0x668 
    /*00028220*/ LDR         R2, [R1, #40]               @ 0x28 
    /*00028224*/ SUB         IP, IP, #1 
    /*00028228*/ BFI         R3, IP, #0, #16 
    /*0002822c*/ SUB         R2, R2, #1 
    /*00028230*/ BFI         R3, R2, #16, #16 
    /*00028234*/ STR         R3, [R0, #1640]             @ 0x668 
    /*00028238*/ LDR         R3, [R0, #1652]             @ 0x674 
    /*0002823c*/ LDR         R2, [R1, #32] 
    /*00028240*/ BFI         R3, R2, #0, #16 
    /*00028244*/ STR         R3, [R0, #1652]             @ 0x674 
    /*00028248*/ LDR         R3, [R1, #24] 
    /*0002824c*/ STR         R3, [R0, #1644]             @ 0x66c 
    /*00028250*/ BX          LR 
FUNC_END VPSS_HAL_SetMadConfig


FUNC_BEGIN VPSS_HAL_Set3dnrParam
    /*00028254*/ ADD         R0, R0, #6080               @ 0x17c0 
    /*00028258*/ SUB         R3, R1, #4 
    /*0002825c*/ ADD         R0, R0, #60                 @ 0x3c 
    /*00028260*/ ADD         R1, R1, #1012               @ 0x3f4 
    VPSS_HAL_Set3dnrParam_x28264:
    /*00028264*/ LDR         R2, [R3, #4]! 
    /*00028268*/ CMP         R3, R1 
    /*0002826c*/ STR         R2, [R0, #4]! 
    /*00028270*/ BNE         VPSS_HAL_Set3dnrParam_x28264
    /*00028274*/ BX          LR 
FUNC_END VPSS_HAL_Set3dnrParam


FUNC_BEGIN VPSS_HAL_Set3dnrcParam
    /*00028278*/ ADD         R0, R0, #6080               @ 0x17c0 
    /*0002827c*/ SUB         R3, R1, #4 
    /*00028280*/ ADD         R0, R0, #60                 @ 0x3c 
    /*00028284*/ ADD         R1, R1, #396                @ 0x18c 
    VPSS_HAL_Set3dnrcParam_x28288:
    /*00028288*/ LDR         R2, [R3, #4]! 
    /*0002828c*/ CMP         R3, R1 
    /*00028290*/ STR         R2, [R0, #4]! 
    /*00028294*/ BNE         VPSS_HAL_Set3dnrcParam_x28288
    /*00028298*/ BX          LR 
FUNC_END VPSS_HAL_Set3dnrcParam


FUNC_BEGIN VPSS_HAL_GetRpprotErr
    /*0002829c*/ LDR         R3, [R0, #848]              @ 0x350 
    /*000282a0*/ STR         R3, [R1] 
    /*000282a4*/ BX          LR 
FUNC_END VPSS_HAL_GetRpprotErr


FUNC_BEGIN VPSS_HAL_GetWpprotErr
    /*000282a8*/ LDR         R3, [R0, #852]              @ 0x354 
    /*000282ac*/ STR         R3, [R1] 
    /*000282b0*/ BX          LR 
FUNC_END VPSS_HAL_GetWpprotErr


FUNC_BEGIN VPSS_HAL_ClrRpprotErr
    /*000282b4*/ LDR         R3, [R0, #848]              @ 0x350 
    /*000282b8*/ ORR         R3, R3, #1 
    /*000282bc*/ STR         R3, [R0, #848]              @ 0x350 
    /*000282c0*/ LDR         R3, [R0, #848]              @ 0x350 
    /*000282c4*/ ORR         R3, R3, #2 
    /*000282c8*/ STR         R3, [R0, #848]              @ 0x350 
    /*000282cc*/ LDR         R3, [R0, #848]              @ 0x350 
    /*000282d0*/ ORR         R3, R3, #4 
    /*000282d4*/ STR         R3, [R0, #848]              @ 0x350 
    /*000282d8*/ LDR         R3, [R0, #848]              @ 0x350 
    /*000282dc*/ ORR         R3, R3, #8 
    /*000282e0*/ STR         R3, [R0, #848]              @ 0x350 
    /*000282e4*/ LDR         R3, [R0, #848]              @ 0x350 
    /*000282e8*/ ORR         R3, R3, #16 
    /*000282ec*/ STR         R3, [R0, #848]              @ 0x350 
    /*000282f0*/ LDR         R3, [R0, #848]              @ 0x350 
    /*000282f4*/ ORR         R3, R3, #32 
    /*000282f8*/ STR         R3, [R0, #848]              @ 0x350 
    /*000282fc*/ LDR         R3, [R0, #848]              @ 0x350 
    /*00028300*/ ORR         R3, R3, #64                 @ 0x40 
    /*00028304*/ STR         R3, [R0, #848]              @ 0x350 
    /*00028308*/ LDR         R3, [R0, #848]              @ 0x350 
    /*0002830c*/ ORR         R3, R3, #128                @ 0x80 
    /*00028310*/ STR         R3, [R0, #848]              @ 0x350 
    /*00028314*/ LDR         R3, [R0, #848]              @ 0x350 
    /*00028318*/ ORR         R3, R3, #256                @ 0x100 
    /*0002831c*/ STR         R3, [R0, #848]              @ 0x350 
    /*00028320*/ LDR         R3, [R0, #848]              @ 0x350 
    /*00028324*/ ORR         R3, R3, #512                @ 0x200 
    /*00028328*/ STR         R3, [R0, #848]              @ 0x350 
    /*0002832c*/ LDR         R3, [R0, #848]              @ 0x350 
    /*00028330*/ ORR         R3, R3, #1024               @ 0x400 
    /*00028334*/ STR         R3, [R0, #848]              @ 0x350 
    /*00028338*/ LDR         R3, [R0, #848]              @ 0x350 
    /*0002833c*/ ORR         R3, R3, #2048               @ 0x800 
    /*00028340*/ STR         R3, [R0, #848]              @ 0x350 
    /*00028344*/ LDR         R3, [R0, #848]              @ 0x350 
    /*00028348*/ ORR         R3, R3, #4096               @ 0x1000 
    /*0002834c*/ STR         R3, [R0, #848]              @ 0x350 
    /*00028350*/ BX          LR 
FUNC_END VPSS_HAL_ClrRpprotErr


FUNC_BEGIN VPSS_HAL_ClrWpprotErr
    /*00028354*/ LDR         R3, [R0, #852]              @ 0x354 
    /*00028358*/ ORR         R3, R3, #1 
    /*0002835c*/ STR         R3, [R0, #852]              @ 0x354 
    /*00028360*/ LDR         R3, [R0, #852]              @ 0x354 
    /*00028364*/ ORR         R3, R3, #2 
    /*00028368*/ STR         R3, [R0, #852]              @ 0x354 
    /*0002836c*/ LDR         R3, [R0, #852]              @ 0x354 
    /*00028370*/ ORR         R3, R3, #4 
    /*00028374*/ STR         R3, [R0, #852]              @ 0x354 
    /*00028378*/ LDR         R3, [R0, #852]              @ 0x354 
    /*0002837c*/ ORR         R3, R3, #8 
    /*00028380*/ STR         R3, [R0, #852]              @ 0x354 
    /*00028384*/ LDR         R3, [R0, #852]              @ 0x354 
    /*00028388*/ ORR         R3, R3, #16 
    /*0002838c*/ STR         R3, [R0, #852]              @ 0x354 
    /*00028390*/ LDR         R3, [R0, #852]              @ 0x354 
    /*00028394*/ ORR         R3, R3, #32 
    /*00028398*/ STR         R3, [R0, #852]              @ 0x354 
    /*0002839c*/ LDR         R3, [R0, #852]              @ 0x354 
    /*000283a0*/ ORR         R3, R3, #256                @ 0x100 
    /*000283a4*/ STR         R3, [R0, #852]              @ 0x354 
    /*000283a8*/ LDR         R3, [R0, #852]              @ 0x354 
    /*000283ac*/ ORR         R3, R3, #512                @ 0x200 
    /*000283b0*/ STR         R3, [R0, #852]              @ 0x354 
    /*000283b4*/ LDR         R3, [R0, #852]              @ 0x354 
    /*000283b8*/ ORR         R3, R3, #1024               @ 0x400 
    /*000283bc*/ STR         R3, [R0, #852]              @ 0x354 
    /*000283c0*/ LDR         R3, [R0, #852]              @ 0x354 
    /*000283c4*/ ORR         R3, R3, #2048               @ 0x800 
    /*000283c8*/ STR         R3, [R0, #852]              @ 0x354 
    /*000283cc*/ LDR         R3, [R0, #852]              @ 0x354 
    /*000283d0*/ ORR         R3, R3, #4096               @ 0x1000 
    /*000283d4*/ STR         R3, [R0, #852]              @ 0x354 
    /*000283d8*/ LDR         R3, [R0, #852]              @ 0x354 
    /*000283dc*/ ORR         R3, R3, #8192               @ 0x2000 
    /*000283e0*/ STR         R3, [R0, #852]              @ 0x354 
    /*000283e4*/ BX          LR 
FUNC_END VPSS_HAL_ClrWpprotErr


FUNC_BEGIN VPSSSplitAndCrop
    /*000283e8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000283ec*/ MOV         FP, R2 
    /*000283f0*/ LDR         R2, [R2, #4] 
    /*000283f4*/ SUB         SP, SP, #268                @ 0x10c 
    /*000283f8*/ MOV         R7, R1 
    /*000283fc*/ SUB         R2, R2, #3360               @ 0xd20 
    /*00028400*/ STR         R3, [SP, #36]               @ 0x24 
    /*00028404*/ SUB         R2, R2, #1 
    /*00028408*/ MOV         R3, #0 
    /*0002840c*/ CMP         R2, #480                    @ 0x1e0 
    /*00028410*/ STR         R0, [SP, #108]              @ 0x6c 
    /*00028414*/ STR         R3, [SP, #140]              @ 0x8c 
    /*00028418*/ STR         R3, [SP, #136]              @ 0x88 
    /*0002841c*/ STR         R3, [SP, #144]              @ 0x90 
    /*00028420*/ STR         R3, [SP, #148]              @ 0x94 
    /*00028424*/ STR         R3, [SP, #160]              @ 0xa0 
    /*00028428*/ STR         R3, [SP, #172]              @ 0xac 
    /*0002842c*/ STR         R3, [SP, #184]              @ 0xb8 
    /*00028430*/ STR         R3, [SP, #232]              @ 0xe8 
    /*00028434*/ STR         R3, [SP, #248]              @ 0xf8 
    /*00028438*/ STR         R3, [SP, #152]              @ 0x98 
    /*0002843c*/ STR         R3, [SP, #156]              @ 0x9c 
    /*00028440*/ STR         R3, [SP, #164]              @ 0xa4 
    /*00028444*/ STR         R3, [SP, #168]              @ 0xa8 
    /*00028448*/ STR         R3, [SP, #176]              @ 0xb0 
    /*0002844c*/ STR         R3, [SP, #180]              @ 0xb4 
    /*00028450*/ STR         R3, [SP, #188]              @ 0xbc 
    /*00028454*/ STR         R3, [SP, #192]              @ 0xc0 
    /*00028458*/ STR         R3, [SP, #236]              @ 0xec 
    /*0002845c*/ STR         R3, [SP, #240]              @ 0xf0 
    /*00028460*/ STR         R3, [SP, #244]              @ 0xf4 
    /*00028464*/ STR         R3, [SP, #252]              @ 0xfc 
    /*00028468*/ STR         R3, [SP, #256]              @ 0x100 
    /*0002846c*/ STR         R3, [SP, #260]              @ 0x104 
    /*00028470*/ BCC         VPSSSplitAndCrop_x28960
    /*00028474*/ CMP         R1, R3 
    /*00028478*/ BNE         VPSSSplitAndCrop_x29fac
    /*0002847c*/ LDR         R3, [FP, #20] 
    /*00028480*/ CMP         R3, #1 
    /*00028484*/ BEQ         VPSSSplitAndCrop_x29f98
    VPSSSplitAndCrop_x28488:
    /*00028488*/ LDR         R3, [FP, #16] 
    /*0002848c*/ LDR         R4, [FP, #748]              @ 0x2ec 
    /*00028490*/ CMP         R3, #0 
    /*00028494*/ MOV         R8, R4 
    /*00028498*/ MOVEQ       R3, #4 
    /*0002849c*/ MOVNE       R3, #256                    @ 0x100 
    /*000284a0*/ STR         R3, [SP, #64]               @ 0x40 
    VPSSSplitAndCrop_x284a4:
    /*000284a4*/ CMP         R4, #0 
    /*000284a8*/ MOVNE       R3, #256                    @ 0x100 
    /*000284ac*/ MOVNE       R9, #255                    @ 0xff 
    /*000284b0*/ STRNE       R3, [SP, #92]               @ 0x5c 
    /*000284b4*/ BEQ         VPSSSplitAndCrop_x289b8
    VPSSSplitAndCrop_x284b8:
    /*000284b8*/ LDR         R5, [FP, #592]              @ 0x250 
    /*000284bc*/ LDR         R6, [FP, #40]               @ 0x28 
    /*000284c0*/ CMP         R5, #1 
    /*000284c4*/ BEQ         VPSSSplitAndCrop_x289d8
    VPSSSplitAndCrop_x284c8:
    /*000284c8*/ CMP         R6, #1 
    /*000284cc*/ BEQ         VPSSSplitAndCrop_x29e60
    /*000284d0*/ LDR         R3, [FP, #4] 
    /*000284d4*/ STR         R3, [SP, #120]              @ 0x78 
    /*000284d8*/ STR         R3, [SP, #96]               @ 0x60 
    VPSSSplitAndCrop_x284dc:
    /*000284dc*/ LDR         R1, [FP] 
    /*000284e0*/ LDR         SL, [SP, #96]               @ 0x60 
    /*000284e4*/ SUB         R0, R1, #1 
    /*000284e8*/ ADD         R0, R0, SL 
    /*000284ec*/ BL          0x00000000000284EC          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000284f0*/ CMP         R7, #0 
    /*000284f4*/ STR         R0, [SP, #4] 
    /*000284f8*/ BEQ         VPSSSplitAndCrop_x29bcc
    /*000284fc*/ CMP         SL, #3584                   @ 0xe00 
    /*00028500*/ LDR         R1, [SP, #108]              @ 0x6c 
    /*00028504*/ MOV         R3, SL 
    /*00028508*/ MOVHI       R3, #0 
    /*0002850c*/ MOVLS       R3, #1 
    /*00028510*/ CMP         R1, #0 
    /*00028514*/ ORRNE       R3, R3, #1 
    /*00028518*/ CMP         R3, #0 
    /*0002851c*/ BEQ         VPSSSplitAndCrop_x29bfc
    /*00028520*/ MOV         R1, R0 
    /*00028524*/ MOV         R0, SL 
    /*00028528*/ BL          0x0000000000028528          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0002852c*/ ADD         R0, R0, #1 
    /*00028530*/ BIC         R7, R0, #1 
    VPSSSplitAndCrop_x28534:
    /*00028534*/ CMP         R6, #0 
    /*00028538*/ LDRNE       R6, [FP, #44]               @ 0x2c 
    /*0002853c*/ CMP         R5, #0 
    /*00028540*/ BNE         VPSSSplitAndCrop_x29c10
    VPSSSplitAndCrop_x28544:
    /*00028544*/ LDR         R5, [SP, #92]               @ 0x5c 
    /*00028548*/ ADD         R0, R7, R9 
    /*0002854c*/ MOV         R1, R5 
    /*00028550*/ BL          0x0000000000028550          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00028554*/ STR         R7, [SP, #12] 
    /*00028558*/ MUL         R3, R5, R0 
    /*0002855c*/ STR         R3, [SP, #112]              @ 0x70 
    VPSSSplitAndCrop_x28560:
    /*00028560*/ LDR         R5, [SP, #112]              @ 0x70 
    VPSSSplitAndCrop_x28564:
    /*00028564*/ CMP         R4, #0 
    /*00028568*/ STR         R5, [SP, #84]               @ 0x54 
    /*0002856c*/ BEQ         VPSSSplitAndCrop_x2859c
    /*00028570*/ LDR         R4, [FP, #700]              @ 0x2bc 
    /*00028574*/ LDR         R3, [SP, #108]              @ 0x6c 
    /*00028578*/ CMP         R3, #0 
    /*0002857c*/ MOVNE       R4, #0 
    /*00028580*/ ANDEQ       R4, R4, #1 
    /*00028584*/ CMP         R4, #0 
    /*00028588*/ BEQ         VPSSSplitAndCrop_x2859c
    /*0002858c*/ LDR         R3, [FP, #592]              @ 0x250 
    /*00028590*/ CMP         R3, #0 
    /*00028594*/ BNE         VPSSSplitAndCrop_x2a058
    /*00028598*/ LDRB        R4, [FP, #708]              @ 0x2c4 
    VPSSSplitAndCrop_x2859c:
    /*0002859c*/ LDR         R3, [SP, #4] 
    /*000285a0*/ SUB         R8, R5, R4 
    /*000285a4*/ LDR         SL, [FP, #40]               @ 0x28 
    /*000285a8*/ SUB         R3, R3, #1 
    /*000285ac*/ STR         R3, [SP, #8] 
    /*000285b0*/ CMP         SL, #0 
    /*000285b4*/ MUL         R5, R3, R5 
    /*000285b8*/ ADD         R3, R6, R5 
    /*000285bc*/ SUB         R3, R3, R4 
    /*000285c0*/ BEQ         VPSSSplitAndCrop_x29bc0
    /*000285c4*/ LDR         R2, [FP, #44]               @ 0x2c 
    /*000285c8*/ LDR         R0, [FP, #48]               @ 0x30 
    /*000285cc*/ STR         R3, [SP, #16] 
    /*000285d0*/ LDR         R3, [SP, #64]               @ 0x40 
    /*000285d4*/ ADD         R0, R0, R2 
    /*000285d8*/ SUB         R0, R0, #1 
    /*000285dc*/ ADD         R0, R0, R3 
    /*000285e0*/ MOV         R1, R3 
    /*000285e4*/ BL          0x00000000000285E4          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000285e8*/ LDR         R3, [SP, #64]               @ 0x40 
    /*000285ec*/ LDR         R9, [FP, #4] 
    /*000285f0*/ MUL         R0, R3, R0 
    /*000285f4*/ LDR         R3, [SP, #16] 
    /*000285f8*/ CMP         R0, R9 
    /*000285fc*/ RSBLS       R2, R3, R0 
    /*00028600*/ RSBHI       R2, R3, R9 
    VPSSSplitAndCrop_x28604:
    /*00028604*/ LDR         R3, [SP, #304]              @ 0x130 
    /*00028608*/ ADD         R3, R8, R3 
    /*0002860c*/ CMP         R3, #2048                   @ 0x800 
    /*00028610*/ BHI         VPSSSplitAndCrop_x29b0c
    /*00028614*/ CMP         R7, #1536                   @ 0x600 
    /*00028618*/ BEQ         VPSSSplitAndCrop_x29ae8
    VPSSSplitAndCrop_x2861c:
    /*0002861c*/ LDR         R3, [SP, #4] 
    /*00028620*/ CMP         R3, #2 
    /*00028624*/ BEQ         VPSSSplitAndCrop_x2a100
    VPSSSplitAndCrop_x28628:
    /*00028628*/ CMP         SL, #0 
    /*0002862c*/ SUB         R4, R6, R4 
    /*00028630*/ ADD         R4, R4, R5 
    /*00028634*/ SUBEQ       R4, R9, R4 
    /*00028638*/ BEQ         VPSSSplitAndCrop_x28670
    /*0002863c*/ LDR         R3, [FP, #44]               @ 0x2c 
    /*00028640*/ LDR         R0, [FP, #48]               @ 0x30 
    /*00028644*/ LDR         R5, [SP, #64]               @ 0x40 
    /*00028648*/ ADD         R0, R0, R3 
    /*0002864c*/ SUB         R0, R0, #1 
    /*00028650*/ MOV         R1, R5 
    /*00028654*/ ADD         R0, R0, R5 
    /*00028658*/ BL          0x0000000000028658          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0002865c*/ MOV         R3, R5 
    /*00028660*/ MUL         R0, R5, R0 
    /*00028664*/ CMP         R0, R9 
    /*00028668*/ RSBLS       R4, R4, R0 
    /*0002866c*/ RSBHI       R4, R4, R9 
    VPSSSplitAndCrop_x28670:
    /*00028670*/ CMP         R4, #2048                   @ 0x800 
    /*00028674*/ LDR         R2, [SP, #304]              @ 0x130 
    /*00028678*/ LDRHI       R3, [SP, #4] 
    /*0002867c*/ ADDHI       R3, R3, #1 
    /*00028680*/ STRHI       R3, [SP, #4] 
    /*00028684*/ LDR         R3, [SP, #96]               @ 0x60 
    /*00028688*/ LDR         R1, [SP, #4] 
    /*0002868c*/ ADD         R2, R3, R2 
    /*00028690*/ SUB         R8, R2, R8 
    /*00028694*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00028698*/ SUB         R3, R1, #3 
    /*0002869c*/ MLS         R0, R2, R3, R8 
    /*000286a0*/ LDR         R2, [SP, #308]              @ 0x134 
    /*000286a4*/ CMP         R0, #2048                   @ 0x800 
    /*000286a8*/ MOVLS       R3, #1 
    /*000286ac*/ MOVHI       R3, #0 
    /*000286b0*/ CMP         R1, #2 
    /*000286b4*/ MOVLS       R3, #0 
    /*000286b8*/ CMP         R3, #0 
    /*000286bc*/ MOVNE       R3, R1 
    /*000286c0*/ SUBNE       R3, R3, #1 
    /*000286c4*/ STRNE       R3, [SP, #4] 
    /*000286c8*/ LDR         R3, [SP, #4] 
    /*000286cc*/ CMP         R3, #0 
    /*000286d0*/ STR         R3, [R2] 
    /*000286d4*/ LDR         R2, [FP, #680]              @ 0x2a8 
    /*000286d8*/ LDR         R3, [FP, #692]              @ 0x2b4 
    /*000286dc*/ STR         R2, [SP, #232]              @ 0xe8 
    /*000286e0*/ STR         R2, [SP, #236]              @ 0xec 
    /*000286e4*/ STR         R2, [SP, #240]              @ 0xf0 
    /*000286e8*/ STR         R3, [SP, #248]              @ 0xf8 
    /*000286ec*/ STR         R3, [SP, #252]              @ 0xfc 
    /*000286f0*/ STR         R3, [SP, #256]              @ 0x100 
    /*000286f4*/ BEQ         VPSSSplitAndCrop_x29468
    /*000286f8*/ LDR         R3, [SP, #4] 
    /*000286fc*/ MOV         R5, #0 
    /*00028700*/ LDR         R2, [SP, #120]              @ 0x78 
    /*00028704*/ MOV         R6, R5 
    /*00028708*/ SUB         SL, R3, #1 
    /*0002870c*/ LDR         R3, [SP, #312]              @ 0x138 
    /*00028710*/ LDR         R4, [SP, #36]               @ 0x24 
    /*00028714*/ MOV         R8, #1 
    /*00028718*/ ADD         R3, R3, #12 
    /*0002871c*/ STR         R3, [SP, #52]               @ 0x34 
    /*00028720*/ LDR         R3, [SP, #112]              @ 0x70 
    /*00028724*/ STR         R5, [SP, #104]              @ 0x68 
    /*00028728*/ STR         R5, [SP, #100]              @ 0x64 
    /*0002872c*/ MLS         R3, SL, R3, R2 
    /*00028730*/ LDR         R2, [SP, #96]               @ 0x60 
    /*00028734*/ STR         R5, [SP, #116]              @ 0x74 
    /*00028738*/ STR         R5, [SP, #76]               @ 0x4c 
    /*0002873c*/ STR         R5, [SP, #72]               @ 0x48 
    /*00028740*/ STR         R5, [SP, #44]               @ 0x2c 
    /*00028744*/ STR         R3, [SP, #128]              @ 0x80 
    /*00028748*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0002874c*/ STR         R5, [SP, #40]               @ 0x28 
    /*00028750*/ STR         R5, [SP, #60]               @ 0x3c 
    /*00028754*/ MLS         R3, SL, R3, R2 
    /*00028758*/ STR         R5, [SP, #32] 
    /*0002875c*/ STR         R5, [SP, #28] 
    /*00028760*/ STR         R5, [SP, #68]               @ 0x44 
    /*00028764*/ STR         R5, [SP, #88]               @ 0x58 
    /*00028768*/ STR         R5, [SP, #48]               @ 0x30 
    /*0002876c*/ STR         R3, [SP, #132]              @ 0x84 
    /*00028770*/ ADD         R3, SP, #184                @ 0xb8 
    /*00028774*/ STR         R5, [SP, #20] 
    /*00028778*/ STR         R3, [SP, #12] 
    /*0002877c*/ ADD         R3, SP, #136                @ 0x88 
    /*00028780*/ STR         R5, [SP, #8] 
    /*00028784*/ STR         R3, [SP, #16] 
    /*00028788*/ ADD         R3, SP, #172                @ 0xac 
    /*0002878c*/ STR         R3, [SP, #24] 
    VPSSSplitAndCrop_x28790:
    /*00028790*/ LDR         R3, [FP, #12] 
    /*00028794*/ CMP         R5, SL 
    /*00028798*/ LDRNE       R1, [SP, #84]               @ 0x54 
    /*0002879c*/ STR         R3, [R4, #12] 
    /*000287a0*/ LDR         R3, [FP, #16] 
    /*000287a4*/ STR         R3, [R4, #16] 
    /*000287a8*/ LDR         R3, [FP, #20] 
    /*000287ac*/ STR         R3, [R4, #20] 
    /*000287b0*/ LDR         R7, [FP, #40]               @ 0x28 
    /*000287b4*/ BEQ         VPSSSplitAndCrop_x29760
    VPSSSplitAndCrop_x287b8:
    /*000287b8*/ CLZ         R3, R5 
    /*000287bc*/ LDR         R2, [FP, #700]              @ 0x2bc 
    /*000287c0*/ LSR         R3, R3, #5 
    /*000287c4*/ CMP         R7, #0 
    /*000287c8*/ MOVEQ       R9, #0 
    /*000287cc*/ ANDNE       R9, R3, #1 
    /*000287d0*/ CMP         R9, #0 
    /*000287d4*/ LDRNE       R9, [FP, #44]               @ 0x2c 
    /*000287d8*/ CMP         R2, #0 
    /*000287dc*/ MOVEQ       R3, #0 
    /*000287e0*/ ANDNE       R3, R3, #1 
    /*000287e4*/ CMP         R3, #0 
    /*000287e8*/ LDRNE       R3, [FP, #708]              @ 0x2c4 
    /*000287ec*/ STR         R3, [SP, #56]               @ 0x38 
    /*000287f0*/ LDR         R3, [FP, #764]              @ 0x2fc 
    /*000287f4*/ CMP         R3, #0 
    /*000287f8*/ BEQ         VPSSSplitAndCrop_x289fc
    /*000287fc*/ LDR         R0, [FP, #748]              @ 0x2ec 
    /*00028800*/ LDR         R2, [SP, #108]              @ 0x6c 
    /*00028804*/ ADDS        R3, R0, #0 
    /*00028808*/ MOVNE       R3, #1 
    /*0002880c*/ CMP         R2, #0 
    /*00028810*/ MOVNE       R3, #0 
    /*00028814*/ CMP         R3, #0 
    /*00028818*/ BEQ         VPSSSplitAndCrop_x289fc
    /*0002881c*/ LDR         R7, [FP, #592]              @ 0x250 
    /*00028820*/ CMP         R7, #0 
    /*00028824*/ BEQ         VPSSSplitAndCrop_x29e8c
    /*00028828*/ CMP         R5, #0 
    /*0002882c*/ STR         R7, [R4, #592]              @ 0x250 
    /*00028830*/ BEQ         VPSSSplitAndCrop_x2a338
    /*00028834*/ LDR         R3, [SP, #112]              @ 0x70 
    /*00028838*/ LDR         R2, [SP, #16] 
    /*0002883c*/ STR         R3, [SP, #124]              @ 0x7c 
    /*00028840*/ STR         R3, [R2] 
    /*00028844*/ LDR         R2, [SP, #24] 
    /*00028848*/ STR         R3, [R2] 
    /*0002884c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00028850*/ STR         R3, [SP, #80]               @ 0x50 
    VPSSSplitAndCrop_x28854:
    /*00028854*/ LDR         R1, [SP, #12] 
    /*00028858*/ CMP         R5, SL 
    /*0002885c*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00028860*/ STR         R2, [R1] 
    /*00028864*/ BEQ         VPSSSplitAndCrop_x2a220
    /*00028868*/ LDR         R3, [SP, #304]              @ 0x130 
    /*0002886c*/ LDR         R6, [SP, #64]               @ 0x40 
    /*00028870*/ SUB         R0, R3, #1 
    /*00028874*/ LDR         R3, [SP, #8] 
    /*00028878*/ ADD         R0, R0, R6 
    /*0002887c*/ ADD         R0, R0, R3 
    /*00028880*/ LDR         R3, [SP, #20] 
    /*00028884*/ MOV         R1, R6 
    /*00028888*/ SUB         R0, R0, R3 
    /*0002888c*/ ADD         R0, R0, R2 
    /*00028890*/ BL          0x0000000000028890          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00028894*/ MUL         R1, R6, R0 
    VPSSSplitAndCrop_x28898:
    /*00028898*/ LDR         R0, [SP, #20] 
    /*0002889c*/ LDR         R3, [SP, #8] 
    /*000288a0*/ LDR         R2, [SP, #304]              @ 0x130 
    /*000288a4*/ SUB         R3, R3, R0 
    /*000288a8*/ STR         R1, [R4, #4] 
    /*000288ac*/ CMP         R2, R3 
    /*000288b0*/ STR         R0, [R4, #24] 
    /*000288b4*/ BCC         VPSSSplitAndCrop_x2a178
    /*000288b8*/ LDR         R2, [FP, #40]               @ 0x28 
    /*000288bc*/ ADDS        R2, R2, #0 
    /*000288c0*/ MOVNE       R2, #1 
    /*000288c4*/ CMP         R5, SL 
    /*000288c8*/ STR         R2, [R4, #40]               @ 0x28 
    /*000288cc*/ MOVNE       R7, #0 
    /*000288d0*/ BEQ         VPSSSplitAndCrop_x2a2e8
    VPSSSplitAndCrop_x288d4:
    /*000288d4*/ LDR         R3, [SP, #20] 
    /*000288d8*/ ADD         R7, R7, R3 
    VPSSSplitAndCrop_x288dc:
    /*000288dc*/ CMP         R5, #0 
    /*000288e0*/ LDRNE       R3, [SP, #20] 
    /*000288e4*/ MOVEQ       R6, R9 
    /*000288e8*/ SUBNE       R6, R7, R3 
    /*000288ec*/ CMP         R5, SL 
    /*000288f0*/ STR         R6, [R4, #44]               @ 0x2c 
    /*000288f4*/ BEQ         VPSSSplitAndCrop_x2a254
    /*000288f8*/ SUB         R6, R1, R6 
    /*000288fc*/ BIC         R3, R6, #3 
    /*00028900*/ CMP         R3, #2048                   @ 0x800 
    /*00028904*/ MOVCS       R3, #2048                   @ 0x800 
    VPSSSplitAndCrop_x28908:
    /*00028908*/ STR         R3, [R4, #48]               @ 0x30 
    /*0002890c*/ LDR         R0, [FP, #40]               @ 0x28 
    /*00028910*/ LDR         IP, [FP, #612]              @ 0x264 
    /*00028914*/ LDR         LR, [SP, #60]               @ 0x3c 
    /*00028918*/ CMP         R0, #0 
    /*0002891c*/ CMPNE       R5, #0 
    /*00028920*/ MOVNE       R0, #1 
    /*00028924*/ LDRNE       R0, [FP, #44]               @ 0x2c 
    /*00028928*/ MUL         IP, IP, LR 
    /*0002892c*/ MOVEQ       R0, #0 
    /*00028930*/ SUB         R0, R7, R0 
    /*00028934*/ CMP         R2, #0 
    /*00028938*/ SUB         IP, IP, R0, LSL #20 
    /*0002893c*/ MOVNE       R1, R3 
    /*00028940*/ LSL         R0, R1, #20 
    /*00028944*/ STR         R1, [R4, #604]              @ 0x25c 
    /*00028948*/ STR         IP, [R4, #596]              @ 0x254 
    /*0002894c*/ MOV         R3, #0 
    /*00028950*/ LSR         IP, IP, #1 
    /*00028954*/ LSR         R1, R1, #12 
    /*00028958*/ STR         IP, [R4, #600]              @ 0x258 
    /*0002895c*/ B           VPSSSplitAndCrop_x29a1c
    VPSSSplitAndCrop_x28960:
    /*00028960*/ CMP         R1, #1 
    /*00028964*/ BEQ         VPSSSplitAndCrop_x28988
    /*00028968*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9bc8] 
    /*0002896c*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x1648] 
    /*00028970*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b88] 
    /*00028974*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9bc8] 
    /*00028978*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x1648] 
    /*0002897c*/ MOV         R2, #360                    @ 0x168 
    /*00028980*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b88] 
    /*00028984*/ BL          0x0000000000028984          @ osal_panic [R_ARM_CALL: +0x0] 
    VPSSSplitAndCrop_x28988:
    /*00028988*/ LDR         R4, [FP, #748]              @ 0x2ec 
    /*0002898c*/ CMP         R4, #0 
    /*00028990*/ MOV         R8, R4 
    /*00028994*/ BNE         VPSSSplitAndCrop_x29fdc
    /*00028998*/ LDR         R3, [FP, #20] 
    /*0002899c*/ CMP         R3, #1 
    /*000289a0*/ BEQ         VPSSSplitAndCrop_x2a160
    /*000289a4*/ LDR         R3, [FP, #16] 
    /*000289a8*/ CMP         R3, #0 
    /*000289ac*/ MOVEQ       R3, #4 
    /*000289b0*/ STREQ       R3, [SP, #64]               @ 0x40 
    /*000289b4*/ BNE         VPSSSplitAndCrop_x2a00c
    VPSSSplitAndCrop_x289b8:
    /*000289b8*/ LDR         R5, [FP, #592]              @ 0x250 
    /*000289bc*/ MOV         R3, #4 
    /*000289c0*/ MOV         R9, #3 
    /*000289c4*/ MOV         R8, #0 
    /*000289c8*/ CMP         R5, #1 
    /*000289cc*/ STR         R3, [SP, #92]               @ 0x5c 
    /*000289d0*/ LDR         R6, [FP, #40]               @ 0x28 
    /*000289d4*/ BNE         VPSSSplitAndCrop_x284c8
    VPSSSplitAndCrop_x289d8:
    /*000289d8*/ LDR         R3, [FP, #608]              @ 0x260 
    /*000289dc*/ CMP         R6, #1 
    /*000289e0*/ STR         R3, [SP, #120]              @ 0x78 
    /*000289e4*/ LDRNE       R3, [FP, #4] 
    /*000289e8*/ STRNE       R3, [SP, #96]               @ 0x60 
    /*000289ec*/ BNE         VPSSSplitAndCrop_x284dc
    /*000289f0*/ LDR         R3, [FP, #48]               @ 0x30 
    /*000289f4*/ STR         R3, [SP, #96]               @ 0x60 
    /*000289f8*/ B           VPSSSplitAndCrop_x29e6c
    VPSSSplitAndCrop_x289fc:
    /*000289fc*/ LDR         R7, [FP, #592]              @ 0x250 
    /*00028a00*/ CMP         R7, #0 
    /*00028a04*/ BNE         VPSSSplitAndCrop_x29888
    /*00028a08*/ CMP         R5, SL 
    /*00028a0c*/ STR         R7, [R4, #592]              @ 0x250 
    /*00028a10*/ BEQ         VPSSSplitAndCrop_x29b44
    /*00028a14*/ LDR         R3, [SP, #56]               @ 0x38 
    /*00028a18*/ ADD         R0, R1, R3 
    /*00028a1c*/ LDR         R1, [SP, #92]               @ 0x5c 
    /*00028a20*/ BL          0x0000000000028A20          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00028a24*/ LDR         R1, [SP, #304]              @ 0x130 
    /*00028a28*/ LDR         IP, [SP, #92]               @ 0x5c 
    /*00028a2c*/ LDR         R6, [SP, #64]               @ 0x40 
    /*00028a30*/ SUB         R3, R1, #1 
    /*00028a34*/ LDR         LR, [SP, #8] 
    /*00028a38*/ LDR         R2, [SP, #20] 
    /*00028a3c*/ ADD         R3, R3, R6 
    /*00028a40*/ ADD         R3, R3, LR 
    /*00028a44*/ MOV         R1, R6 
    /*00028a48*/ SUB         R3, R3, R2 
    /*00028a4c*/ LDR         R2, [SP, #56]               @ 0x38 
    /*00028a50*/ MUL         IP, IP, R0 
    /*00028a54*/ LDR         R0, [SP, #24] 
    /*00028a58*/ SUB         R2, IP, R2 
    /*00028a5c*/ STR         R2, [R0] 
    /*00028a60*/ STR         R2, [SP, #80]               @ 0x50 
    /*00028a64*/ ADD         R0, R9, R2 
    /*00028a68*/ LDR         R2, [SP, #12] 
    /*00028a6c*/ STR         R0, [R2] 
    /*00028a70*/ ADD         R0, R3, R0 
    /*00028a74*/ LDR         R3, [SP, #16] 
    /*00028a78*/ STR         IP, [R3] 
    /*00028a7c*/ BL          0x0000000000028A7C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00028a80*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00028a84*/ MUL         R0, R6, R0 
    VPSSSplitAndCrop_x28a88:
    /*00028a88*/ LDR         IP, [SP, #20] 
    /*00028a8c*/ LDR         R3, [SP, #8] 
    /*00028a90*/ LDR         R1, [SP, #304]              @ 0x130 
    /*00028a94*/ SUB         R3, R3, IP 
    /*00028a98*/ STR         R0, [R4, #4] 
    /*00028a9c*/ CMP         R1, R3 
    /*00028aa0*/ STR         IP, [R4, #24] 
    /*00028aa4*/ BCC         VPSSSplitAndCrop_x2970c
    /*00028aa8*/ LDR         R1, [FP, #40]               @ 0x28 
    /*00028aac*/ ADDS        R1, R1, #0 
    /*00028ab0*/ MOVNE       R1, #1 
    /*00028ab4*/ CMP         R5, SL 
    /*00028ab8*/ STR         R1, [R4, #40]               @ 0x28 
    /*00028abc*/ BEQ         VPSSSplitAndCrop_x29d94
    VPSSSplitAndCrop_x28ac0:
    /*00028ac0*/ LDR         R3, [SP, #20] 
    /*00028ac4*/ ADD         R7, R7, R3 
    VPSSSplitAndCrop_x28ac8:
    /*00028ac8*/ CMP         R5, #0 
    /*00028acc*/ LDRNE       R3, [SP, #20] 
    /*00028ad0*/ MOVEQ       R6, R9 
    /*00028ad4*/ SUBNE       R6, R7, R3 
    /*00028ad8*/ CMP         R5, SL 
    /*00028adc*/ STR         R6, [R4, #44]               @ 0x2c 
    /*00028ae0*/ BEQ         VPSSSplitAndCrop_x29b7c
    /*00028ae4*/ SUB         R6, R0, R6 
    /*00028ae8*/ BIC         R3, R6, #3 
    /*00028aec*/ CMP         R3, #2048                   @ 0x800 
    /*00028af0*/ MOVCS       R3, #2048                   @ 0x800 
    VPSSSplitAndCrop_x28af4:
    /*00028af4*/ LDR         IP, [SP, #12] 
    /*00028af8*/ CMP         R1, #0 
    /*00028afc*/ STR         R3, [R4, #48]               @ 0x30 
    /*00028b00*/ MOVNE       R0, R3 
    /*00028b04*/ LDR         R3, [SP, #8] 
    /*00028b08*/ LDR         IP, [IP] 
    /*00028b0c*/ SUB         R3, R3, R7 
    /*00028b10*/ STR         R0, [R4, #604]              @ 0x25c 
    /*00028b14*/ STR         R0, [R4, #608]              @ 0x260 
    /*00028b18*/ STR         IP, [SP, #80]               @ 0x50 
    /*00028b1c*/ STR         R8, [R4, #664]              @ 0x298 
    /*00028b20*/ STR         R2, [R4, #672]              @ 0x2a0 
    /*00028b24*/ STR         R3, [R4, #668]              @ 0x29c 
    VPSSSplitAndCrop_x28b28:
    /*00028b28*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00028b2c*/ LDR         R3, [FP, #616]              @ 0x268 
    /*00028b30*/ ADD         R1, R2, #1 
    /*00028b34*/ ADD         R2, SP, #196                @ 0xc4 
    /*00028b38*/ CMP         R3, #0 
    /*00028b3c*/ BIC         R1, R1, #1 
    /*00028b40*/ SUB         R9, R1, R9 
    /*00028b44*/ STR         R9, [R2, R5, LSL #2] 
    /*00028b48*/ BEQ         VPSSSplitAndCrop_x2937c
    /*00028b4c*/ CMP         R5, SL 
    /*00028b50*/ STR         R8, [R4, #616]              @ 0x268 
    /*00028b54*/ BNE         VPSSSplitAndCrop_x29868
    /*00028b58*/ LDR         R1, [FP, #632]              @ 0x278 
    /*00028b5c*/ LDR         R3, [SP, #28] 
    /*00028b60*/ SUB         R1, R1, R3 
    VPSSSplitAndCrop_x28b64:
    /*00028b64*/ STR         R1, [R4, #632]              @ 0x278 
    /*00028b68*/ ADD         R2, SP, #148                @ 0x94 
    /*00028b6c*/ LDR         R3, [FP, #636]              @ 0x27c 
    /*00028b70*/ STR         R1, [R2, R5, LSL #2] 
    /*00028b74*/ LDR         R0, [SP, #28] 
    /*00028b78*/ STR         R3, [R4, #636]              @ 0x27c 
    /*00028b7c*/ LDR         R2, [FP, #40]               @ 0x28 
    /*00028b80*/ LDR         R3, [FP, #636]              @ 0x27c 
    /*00028b84*/ CMP         R2, #0 
    /*00028b88*/ CMPNE       R5, #0 
    /*00028b8c*/ MUL         R3, R3, R0 
    /*00028b90*/ MOVNE       R2, #1 
    /*00028b94*/ LDRNE       R2, [FP, #44]               @ 0x2c 
    /*00028b98*/ MOVEQ       R2, #0 
    /*00028b9c*/ STR         R8, [R4, #676]              @ 0x2a4 
    /*00028ba0*/ MOV         R0, #0 
    /*00028ba4*/ SUB         R2, R7, R2 
    /*00028ba8*/ STR         R0, [R4, #680]              @ 0x2a8 
    /*00028bac*/ STR         R1, [R4, #684]              @ 0x2ac 
    /*00028bb0*/ SUB         R3, R3, R2, LSL #20 
    /*00028bb4*/ STR         R3, [R4, #620]              @ 0x26c 
    /*00028bb8*/ LSR         R3, R3, #1 
    /*00028bbc*/ STR         R3, [R4, #624]              @ 0x270 
    /*00028bc0*/ LDR         R3, [FP, #640]              @ 0x280 
    /*00028bc4*/ CMP         R3, #0 
    /*00028bc8*/ BEQ         VPSSSplitAndCrop_x293c0
    VPSSSplitAndCrop_x28bcc:
    /*00028bcc*/ LDR         IP, [R4, #40]               @ 0x28 
    /*00028bd0*/ STR         R8, [R4, #640]              @ 0x280 
    /*00028bd4*/ CMP         IP, #0 
    /*00028bd8*/ LDRNE       R3, [R4, #48]               @ 0x30 
    /*00028bdc*/ LDREQ       R3, [R4, #4] 
    /*00028be0*/ CMP         R5, SL 
    /*00028be4*/ STR         R3, [R4, #652]              @ 0x28c 
    /*00028be8*/ BNE         VPSSSplitAndCrop_x2983c
    /*00028bec*/ LDR         R3, [FP, #656]              @ 0x290 
    /*00028bf0*/ LDR         R2, [SP, #32] 
    /*00028bf4*/ SUB         R3, R3, R2 
    VPSSSplitAndCrop_x28bf8:
    /*00028bf8*/ STR         R3, [R4, #656]              @ 0x290 
    /*00028bfc*/ ADD         R1, SP, #160                @ 0xa0 
    /*00028c00*/ LDR         R2, [FP, #660]              @ 0x294 
    /*00028c04*/ STR         R3, [R1, R5, LSL #2] 
    /*00028c08*/ LDR         R0, [SP, #32] 
    /*00028c0c*/ STR         R2, [R4, #660]              @ 0x294 
    /*00028c10*/ LDR         R1, [FP, #40]               @ 0x28 
    /*00028c14*/ LDR         R2, [FP, #660]              @ 0x294 
    /*00028c18*/ CMP         R1, #0 
    /*00028c1c*/ CMPNE       R5, #0 
    /*00028c20*/ MUL         R2, R2, R0 
    /*00028c24*/ MOVNE       R1, #1 
    /*00028c28*/ LDRNE       R1, [FP, #44]               @ 0x2c 
    /*00028c2c*/ MOVEQ       R1, #0 
    /*00028c30*/ MOV         R0, #0 
    /*00028c34*/ STR         R8, [R4, #688]              @ 0x2b0 
    /*00028c38*/ SUB         R1, R7, R1 
    /*00028c3c*/ STR         R0, [R4, #692]              @ 0x2b4 
    /*00028c40*/ STR         R3, [R4, #696]              @ 0x2b8 
    /*00028c44*/ SUB         R2, R2, R1, LSL #20 
    /*00028c48*/ STR         R2, [R4, #644]              @ 0x284 
    /*00028c4c*/ LSR         R2, R2, #1 
    /*00028c50*/ STR         R2, [R4, #648]              @ 0x288 
    VPSSSplitAndCrop_x28c54:
    /*00028c54*/ LDR         R2, [FP, #736]              @ 0x2e0 
    /*00028c58*/ STR         R2, [R4, #736]              @ 0x2e0 
    /*00028c5c*/ LDR         R2, [FP, #792]              @ 0x318 
    /*00028c60*/ STR         R2, [R4, #792]              @ 0x318 
    /*00028c64*/ LDR         R2, [FP, #676]              @ 0x2a4 
    /*00028c68*/ CMP         R2, #0 
    /*00028c6c*/ BEQ         VPSSSplitAndCrop_x29408
    /*00028c70*/ ADD         R2, SP, #148                @ 0x94 
    /*00028c74*/ ADD         R1, SP, #232                @ 0xe8 
    /*00028c78*/ LDR         LR, [SP, #28] 
    /*00028c7c*/ LDR         R2, [R2, R5, LSL #2] 
    /*00028c80*/ LDR         R1, [R1, R5, LSL #2] 
    /*00028c84*/ ADD         R2, LR, R2 
    /*00028c88*/ MOV         R0, LR 
    /*00028c8c*/ CMP         R1, LR 
    /*00028c90*/ CMPCS       R2, R1 
    /*00028c94*/ MOVHI       R0, #1 
    /*00028c98*/ MOVLS       R0, #0 
    /*00028c9c*/ BLS         VPSSSplitAndCrop_x296fc
    /*00028ca0*/ LDR         R0, [FP, #616]              @ 0x268 
    /*00028ca4*/ SUB         LR, R1, LR 
    /*00028ca8*/ CMP         R0, #0 
    /*00028cac*/ LDREQ       R0, [SP, #8] 
    /*00028cb0*/ MOVNE       R0, #0 
    /*00028cb4*/ SUBEQ       R0, R0, R7 
    /*00028cb8*/ ADD         R0, R0, LR 
    /*00028cbc*/ LDR         LR, [SP, #40]               @ 0x28 
    /*00028cc0*/ STR         R0, [R4, #680]              @ 0x2a8 
    /*00028cc4*/ LDR         R0, [FP, #684]              @ 0x2ac 
    /*00028cc8*/ ADD         LR, LR, #1 
    /*00028ccc*/ STR         LR, [SP, #40]               @ 0x28 
    /*00028cd0*/ LDR         LR, [FP, #680]              @ 0x2a8 
    /*00028cd4*/ ADD         R0, R0, LR 
    /*00028cd8*/ CMP         R0, R2 
    /*00028cdc*/ RSBLS       R1, R1, R0 
    /*00028ce0*/ RSBHI       R1, R1, R2 
    /*00028ce4*/ STR         R1, [R4, #684]              @ 0x2ac 
    VPSSSplitAndCrop_x28ce8:
    /*00028ce8*/ LDR         R1, [FP, #680]              @ 0x2a8 
    /*00028cec*/ ADD         R6, R5, #1 
    /*00028cf0*/ LDR         R0, [FP, #684]              @ 0x2ac 
    /*00028cf4*/ ADD         R0, R1, R0 
    /*00028cf8*/ CMP         R2, R0 
    /*00028cfc*/ MOVCS       R1, #0 
    /*00028d00*/ BCS         VPSSSplitAndCrop_x28d0c
    /*00028d04*/ CMP         R2, R1 
    /*00028d08*/ MOVCS       R1, R2 
    VPSSSplitAndCrop_x28d0c:
    /*00028d0c*/ CMP         R2, R0 
    /*00028d10*/ ADD         R2, SP, #232                @ 0xe8 
    /*00028d14*/ ADD         R2, R2, R5, LSL #2 
    /*00028d18*/ STR         R1, [R2, #4] 
    /*00028d1c*/ BLS         VPSSSplitAndCrop_x29a78
    /*00028d20*/ LDR         R2, [SP, #4] 
    /*00028d24*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00028d28*/ CMP         R2, R1 
    /*00028d2c*/ BEQ         VPSSSplitAndCrop_x29e54
    /*00028d30*/ LDR         R2, [R4, #792]              @ 0x318 
    /*00028d34*/ CMP         R2, #1 
    /*00028d38*/ LDR         R2, [SP, #72]               @ 0x48 
    /*00028d3c*/ MOVEQ       R2, #1 
    /*00028d40*/ STR         R2, [SP, #72]               @ 0x48 
    VPSSSplitAndCrop_x28d44:
    /*00028d44*/ LDR         R2, [FP, #824]              @ 0x338 
    /*00028d48*/ STR         R2, [R4, #824]              @ 0x338 
    /*00028d4c*/ LDR         R2, [FP, #688]              @ 0x2b0 
    /*00028d50*/ CMP         R2, #0 
    /*00028d54*/ BEQ         VPSSSplitAndCrop_x2935c
    /*00028d58*/ ADD         R2, SP, #248                @ 0xf8 
    /*00028d5c*/ LDR         R0, [SP, #32] 
    /*00028d60*/ LDR         R2, [R2, R5, LSL #2] 
    /*00028d64*/ ADD         R3, R0, R3 
    /*00028d68*/ MOV         R1, R0 
    /*00028d6c*/ CMP         R2, R0 
    /*00028d70*/ CMPCS       R3, R2 
    /*00028d74*/ MOVHI       R1, #1 
    /*00028d78*/ MOVLS       R1, #0 
    /*00028d7c*/ BLS         VPSSSplitAndCrop_x296ec
    /*00028d80*/ LDR         R1, [FP, #640]              @ 0x280 
    /*00028d84*/ SUB         R0, R2, R0 
    /*00028d88*/ CMP         R1, #0 
    /*00028d8c*/ LDREQ       R1, [SP, #8] 
    /*00028d90*/ MOVNE       R1, #0 
    /*00028d94*/ SUBEQ       R1, R1, R7 
    /*00028d98*/ ADD         R1, R1, R0 
    /*00028d9c*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*00028da0*/ STR         R1, [R4, #692]              @ 0x2b4 
    /*00028da4*/ LDR         R1, [FP, #696]              @ 0x2b8 
    /*00028da8*/ ADD         R0, R0, #1 
    /*00028dac*/ STR         R0, [SP, #44]               @ 0x2c 
    /*00028db0*/ LDR         R0, [FP, #692]              @ 0x2b4 
    /*00028db4*/ ADD         R1, R1, R0 
    /*00028db8*/ CMP         R1, R3 
    /*00028dbc*/ RSBLS       R2, R2, R1 
    /*00028dc0*/ RSBHI       R2, R2, R3 
    /*00028dc4*/ STR         R2, [R4, #696]              @ 0x2b8 
    VPSSSplitAndCrop_x28dc8:
    /*00028dc8*/ LDR         R2, [FP, #692]              @ 0x2b4 
    /*00028dcc*/ LDR         R1, [FP, #696]              @ 0x2b8 
    /*00028dd0*/ ADD         R1, R2, R1 
    /*00028dd4*/ CMP         R3, R1 
    /*00028dd8*/ MOVCS       R2, #0 
    /*00028ddc*/ BCS         VPSSSplitAndCrop_x28de8
    /*00028de0*/ CMP         R3, R2 
    /*00028de4*/ MOVCS       R2, R3 
    VPSSSplitAndCrop_x28de8:
    /*00028de8*/ CMP         R3, R1 
    /*00028dec*/ ADD         R3, SP, #264                @ 0x108 
    /*00028df0*/ ADD         R3, R3, R6, LSL #2 
    /*00028df4*/ STR         R2, [R3, #-16] 
    /*00028df8*/ BLS         VPSSSplitAndCrop_x29a94
    /*00028dfc*/ LDR         R3, [SP, #4] 
    /*00028e00*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*00028e04*/ CMP         R3, R2 
    /*00028e08*/ BEQ         VPSSSplitAndCrop_x29e1c
    /*00028e0c*/ LDR         R3, [R4, #824]              @ 0x338 
    /*00028e10*/ CMP         R3, #1 
    /*00028e14*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*00028e18*/ MOVEQ       R3, #1 
    /*00028e1c*/ STR         R3, [SP, #76]               @ 0x4c 
    VPSSSplitAndCrop_x28e20:
    /*00028e20*/ LDR         R3, [FP, #700]              @ 0x2bc 
    /*00028e24*/ CMP         R3, #0 
    /*00028e28*/ STREQ       R3, [R4, #700]              @ 0x2bc 
    /*00028e2c*/ BEQ         VPSSSplitAndCrop_x28e58
    /*00028e30*/ CMP         R5, SL 
    /*00028e34*/ STR         R3, [R4, #700]              @ 0x2bc 
    /*00028e38*/ LDRNE       R3, [SP, #16] 
    /*00028e3c*/ LDREQ       R3, [FP, #740]              @ 0x2e4 
    /*00028e40*/ LDREQ       R2, [SP, #48]               @ 0x30 
    /*00028e44*/ LDRNE       R3, [R3] 
    /*00028e48*/ SUBEQ       R3, R3, R2 
    /*00028e4c*/ STR         R3, [R4, #704]              @ 0x2c0 
    /*00028e50*/ LDR         R3, [SP, #56]               @ 0x38 
    /*00028e54*/ STR         R3, [R4, #708]              @ 0x2c4 
    VPSSSplitAndCrop_x28e58:
    /*00028e58*/ LDR         R3, [FP, #712]              @ 0x2c8 
    /*00028e5c*/ CMP         R3, #0 
    /*00028e60*/ STREQ       R3, [R4, #712]              @ 0x2c8 
    /*00028e64*/ BEQ         VPSSSplitAndCrop_x28ea0
    /*00028e68*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00028e6c*/ STR         R8, [R4, #712]              @ 0x2c8 
    /*00028e70*/ CMP         R3, #1 
    /*00028e74*/ BEQ         VPSSSplitAndCrop_x29cdc
    VPSSSplitAndCrop_x28e78:
    /*00028e78*/ MOV         R3, #0 
    VPSSSplitAndCrop_x28e7c:
    /*00028e7c*/ LDR         R2, [SP, #72]               @ 0x48 
    /*00028e80*/ STR         R3, [R4, #720]              @ 0x2d0 
    /*00028e84*/ CMP         R2, #0 
    /*00028e88*/ LDRNE       R3, [FP, #796]              @ 0x31c 
    /*00028e8c*/ LDRNE       R2, [SP, #88]               @ 0x58 
    /*00028e90*/ LDREQ       R2, [R4, #684]              @ 0x2ac 
    /*00028e94*/ SUBNE       R3, R3, R2 
    /*00028e98*/ ADDEQ       R3, R3, R2 
    /*00028e9c*/ STR         R3, [R4, #716]              @ 0x2cc 
    VPSSSplitAndCrop_x28ea0:
    /*00028ea0*/ LDR         R3, [FP, #724]              @ 0x2d4 
    /*00028ea4*/ CMP         R3, #0 
    /*00028ea8*/ STREQ       R3, [R4, #724]              @ 0x2d4 
    /*00028eac*/ BEQ         VPSSSplitAndCrop_x28ee8
    /*00028eb0*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*00028eb4*/ STR         R3, [R4, #724]              @ 0x2d4 
    /*00028eb8*/ CMP         R2, #1 
    /*00028ebc*/ BEQ         VPSSSplitAndCrop_x29cc8
    VPSSSplitAndCrop_x28ec0:
    /*00028ec0*/ MOV         R3, #0 
    VPSSSplitAndCrop_x28ec4:
    /*00028ec4*/ LDR         R2, [SP, #76]               @ 0x4c 
    /*00028ec8*/ STR         R3, [R4, #732]              @ 0x2dc 
    /*00028ecc*/ CMP         R2, #0 
    /*00028ed0*/ LDRNE       R3, [FP, #828]              @ 0x33c 
    /*00028ed4*/ LDRNE       R2, [SP, #68]               @ 0x44 
    /*00028ed8*/ LDREQ       R2, [R4, #696]              @ 0x2b8 
    /*00028edc*/ SUBNE       R3, R3, R2 
    /*00028ee0*/ ADDEQ       R3, R3, R2 
    /*00028ee4*/ STR         R3, [R4, #728]              @ 0x2d8 
    VPSSSplitAndCrop_x28ee8:
    /*00028ee8*/ LDR         R3, [FP, #28] 
    /*00028eec*/ CMP         R3, #1 
    /*00028ef0*/ BEQ         VPSSSplitAndCrop_x29824
    VPSSSplitAndCrop_x28ef4:
    /*00028ef4*/ LDR         R3, [FP, #780]              @ 0x30c 
    /*00028ef8*/ CMP         R3, #1 
    /*00028efc*/ BEQ         VPSSSplitAndCrop_x297f0
    /*00028f00*/ LDR         R3, [FP, #820]              @ 0x334 
    /*00028f04*/ CMP         R3, #1 
    /*00028f08*/ BEQ         VPSSSplitAndCrop_x29ac4
    /*00028f0c*/ LDR         R3, [FP, #852]              @ 0x354 
    /*00028f10*/ CMP         R3, #1 
    /*00028f14*/ BEQ         VPSSSplitAndCrop_x29cb8
    VPSSSplitAndCrop_x28f18:
    /*00028f18*/ LDR         R2, [R4, #4] 
    /*00028f1c*/ LDR         R0, [SP, #48]               @ 0x30 
    /*00028f20*/ STR         R2, [R4, #32] 
    /*00028f24*/ STR         R2, [R4, #36]               @ 0x24 
    /*00028f28*/ LDR         R3, [FP, #744]              @ 0x2e8 
    /*00028f2c*/ STR         R3, [R4, #744]              @ 0x2e8 
    /*00028f30*/ LDR         R3, [FP, #748]              @ 0x2ec 
    /*00028f34*/ STR         R8, [R4, #752]              @ 0x2f0 
    /*00028f38*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*00028f3c*/ LDR         R3, [FP, #756]              @ 0x2f4 
    /*00028f40*/ STR         R3, [R4, #756]              @ 0x2f4 
    /*00028f44*/ LDR         R3, [FP, #760]              @ 0x2f8 
    /*00028f48*/ STR         R3, [R4, #760]              @ 0x2f8 
    /*00028f4c*/ LDR         R3, [FP, #744]              @ 0x2e8 
    /*00028f50*/ STR         R3, [R4, #744]              @ 0x2e8 
    /*00028f54*/ LDR         R3, [FP, #700]              @ 0x2bc 
    /*00028f58*/ CMP         R3, #0 
    /*00028f5c*/ LDRNE       R3, [R4, #704]              @ 0x2c0 
    /*00028f60*/ LDREQ       R3, [R4, #672]              @ 0x2a0 
    /*00028f64*/ STR         R3, [R4, #740]              @ 0x2e4 
    /*00028f68*/ LDR         R1, [FP, #764]              @ 0x2fc 
    /*00028f6c*/ STR         R0, [R4, #776]              @ 0x308 
    /*00028f70*/ STR         R8, [R4, #772]              @ 0x304 
    /*00028f74*/ STR         R1, [R4, #764]              @ 0x2fc 
    /*00028f78*/ STR         R8, [R4, #768]              @ 0x300 
    /*00028f7c*/ STR         R3, [R4, #784]              @ 0x310 
    /*00028f80*/ STR         R3, [R4, #788]              @ 0x314 
    /*00028f84*/ LDR         R0, [FP, #800]              @ 0x320 
    /*00028f88*/ STR         R0, [R4, #800]              @ 0x320 
    /*00028f8c*/ LDR         R3, [FP, #712]              @ 0x2c8 
    /*00028f90*/ CMP         R3, #0 
    /*00028f94*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00028f98*/ LDRNE       R1, [R4, #716]              @ 0x2cc 
    /*00028f9c*/ LDREQ       R1, [R4, #684]              @ 0x2ac 
    /*00028fa0*/ CMP         R3, #1 
    /*00028fa4*/ MOVLS       R3, #0 
    /*00028fa8*/ STR         R1, [R4, #796]              @ 0x31c 
    /*00028fac*/ BLS         VPSSSplitAndCrop_x28fc4
    /*00028fb0*/ LDR         R3, [FP, #712]              @ 0x2c8 
    /*00028fb4*/ LDR         LR, [SP, #100]              @ 0x64 
    /*00028fb8*/ CMP         R3, #0 
    /*00028fbc*/ LDRNE       R3, [FP, #720]              @ 0x2d0 
    /*00028fc0*/ ADD         R3, R3, LR 
    VPSSSplitAndCrop_x28fc4:
    /*00028fc4*/ STR         R3, [R4, #816]              @ 0x330 
    /*00028fc8*/ UBFX        R3, R1, #0, #7 
    /*00028fcc*/ LDR         LR, [FP, #808]              @ 0x328 
    /*00028fd0*/ CMP         R0, #1 
    /*00028fd4*/ CMPEQ       R3, #0 
    /*00028fd8*/ MOVEQ       R3, #1 
    /*00028fdc*/ MOVNE       R3, #0 
    /*00028fe0*/ STR         LR, [R4, #808]              @ 0x328 
    /*00028fe4*/ BEQ         VPSSSplitAndCrop_x28ff8
    /*00028fe8*/ AND         R1, R1, #31 
    /*00028fec*/ ORRS        R3, R1, R0 
    /*00028ff0*/ MOVEQ       R3, #1 
    /*00028ff4*/ MOVNE       R3, #0 
    VPSSSplitAndCrop_x28ff8:
    /*00028ff8*/ STR         R3, [R4, #812]              @ 0x32c 
    /*00028ffc*/ MOV         R3, #0 
    /*00029000*/ STR         R3, [R4, #804]              @ 0x324 
    /*00029004*/ LDR         R0, [FP, #832]              @ 0x340 
    /*00029008*/ STR         R0, [R4, #832]              @ 0x340 
    /*0002900c*/ LDR         R3, [FP, #724]              @ 0x2d4 
    /*00029010*/ CMP         R3, #0 
    /*00029014*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00029018*/ LDRNE       R1, [R4, #728]              @ 0x2d8 
    /*0002901c*/ LDREQ       R1, [R4, #696]              @ 0x2b8 
    /*00029020*/ CMP         R3, #1 
    /*00029024*/ STR         R1, [R4, #828]              @ 0x33c 
    /*00029028*/ BLS         VPSSSplitAndCrop_x29834
    /*0002902c*/ LDR         R3, [FP, #724]              @ 0x2d4 
    /*00029030*/ LDR         LR, [SP, #104]              @ 0x68 
    /*00029034*/ CMP         R3, #0 
    /*00029038*/ LDRNE       R3, [FP, #732]              @ 0x2dc 
    /*0002903c*/ ADD         R3, R3, LR 
    VPSSSplitAndCrop_x29040:
    /*00029040*/ STR         R3, [R4, #848]              @ 0x350 
    /*00029044*/ UBFX        R3, R1, #0, #7 
    /*00029048*/ LDR         LR, [FP, #840]              @ 0x348 
    /*0002904c*/ CMP         R0, #1 
    /*00029050*/ CMPEQ       R3, #0 
    /*00029054*/ MOVEQ       R3, #1 
    /*00029058*/ MOVNE       R3, #0 
    /*0002905c*/ STR         LR, [R4, #840]              @ 0x348 
    /*00029060*/ BEQ         VPSSSplitAndCrop_x29074
    /*00029064*/ AND         R1, R1, #31 
    /*00029068*/ ORRS        R3, R1, R0 
    /*0002906c*/ MOVEQ       R3, #1 
    /*00029070*/ MOVNE       R3, #0 
    VPSSSplitAndCrop_x29074:
    /*00029074*/ CMP         R5, #0 
    /*00029078*/ STR         R3, [R4, #844]              @ 0x34c 
    /*0002907c*/ MOV         R3, #0 
    /*00029080*/ STR         R3, [R4, #836]              @ 0x344 
    /*00029084*/ BEQ         VPSSSplitAndCrop_x2a360
    /*00029088*/ LDR         R3, [FP, #40]               @ 0x28 
    /*0002908c*/ CMP         R3, #0 
    /*00029090*/ LDRNE       R3, [FP, #44]               @ 0x2c 
    /*00029094*/ SUB         R3, R7, R3 
    /*00029098*/ MOV         R1, R3 
    VPSSSplitAndCrop_x2909c:
    /*0002909c*/ CMP         IP, #0 
    /*000290a0*/ ADD         R0, SP, #208                @ 0xd0 
    /*000290a4*/ LDRNE       R2, [R4, #48]               @ 0x30 
    /*000290a8*/ STR         R1, [R0, R5, LSL #2] 
    /*000290ac*/ LDR         R1, [SP, #308]              @ 0x134 
    /*000290b0*/ ADD         R3, R2, R3 
    /*000290b4*/ ADD         R2, SP, #220                @ 0xdc 
    /*000290b8*/ LDR         R1, [R1] 
    /*000290bc*/ STR         R3, [R2, R5, LSL #2] 
    /*000290c0*/ LDR         R3, [SP, #312]              @ 0x138 
    /*000290c4*/ LDR         R2, [SP, #312]              @ 0x138 
    /*000290c8*/ STR         R1, [R3, #4] 
    /*000290cc*/ LDR         R3, [FP, #40]               @ 0x28 
    /*000290d0*/ CMP         R3, #0 
    /*000290d4*/ LDRNE       R3, [FP, #48]               @ 0x30 
    /*000290d8*/ LDREQ       R3, [FP, #4] 
    /*000290dc*/ STR         R3, [R2, #8] 
    /*000290e0*/ LDR         R3, [R4, #40]               @ 0x28 
    /*000290e4*/ LDR         R2, [SP, #52]               @ 0x34 
    /*000290e8*/ CMP         R3, #0 
    /*000290ec*/ LDRNE       R3, [R4, #48]               @ 0x30 
    /*000290f0*/ LDREQ       R3, [R4, #4] 
    /*000290f4*/ CMP         R5, #0 
    /*000290f8*/ STR         R3, [R2], #4 
    /*000290fc*/ STR         R2, [SP, #52]               @ 0x34 
    /*00029100*/ BEQ         VPSSSplitAndCrop_x2a36c
    /*00029104*/ LDR         R3, [R4, #40]               @ 0x28 
    /*00029108*/ CMP         R3, #0 
    /*0002910c*/ LDRNE       R3, [R4, #44]               @ 0x2c 
    /*00029110*/ SUB         R7, R7, R3 
    VPSSSplitAndCrop_x29114:
    /*00029114*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00029118*/ LDR         IP, [SP, #8] 
    /*0002911c*/ STR         R7, [R3, #8] 
    /*00029120*/ LDR         R3, [SP, #12] 
    /*00029124*/ LDR         R2, [R4, #676]              @ 0x2a4 
    /*00029128*/ LDR         R3, [R3] 
    /*0002912c*/ CMP         R2, #0 
    /*00029130*/ LDR         R2, [SP, #16] 
    /*00029134*/ ADD         R3, R3, #1 
    /*00029138*/ BIC         R3, R3, #1 
    /*0002913c*/ LDR         R0, [R2] 
    /*00029140*/ ADD         R3, IP, R3 
    /*00029144*/ ADD         R2, SP, #148                @ 0x94 
    /*00029148*/ STR         R3, [SP, #8] 
    /*0002914c*/ LDR         R3, [SP, #48]               @ 0x30 
    /*00029150*/ LDR         R1, [R2, R5, LSL #2] 
    /*00029154*/ ADD         R2, SP, #160                @ 0xa0 
    /*00029158*/ ADD         R3, R3, R0 
    /*0002915c*/ LDR         R0, [SP, #28] 
    /*00029160*/ STR         R3, [SP, #48]               @ 0x30 
    /*00029164*/ LDR         R3, [SP, #24] 
    /*00029168*/ ADD         R1, R0, R1 
    /*0002916c*/ LDR         R2, [R2, R5, LSL #2] 
    /*00029170*/ STR         R1, [SP, #28] 
    /*00029174*/ LDR         R1, [SP, #32] 
    /*00029178*/ LDR         R3, [R3] 
    /*0002917c*/ ADD         R2, R1, R2 
    /*00029180*/ STR         R2, [SP, #32] 
    /*00029184*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*00029188*/ ADD         R3, R2, R3 
    /*0002918c*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00029190*/ BEQ         VPSSSplitAndCrop_x2942c
    /*00029194*/ LDR         R3, [R4, #792]              @ 0x318 
    /*00029198*/ LDR         R2, [R4, #688]              @ 0x2b0 
    /*0002919c*/ CMP         R3, #0 
    /*000291a0*/ BEQ         VPSSSplitAndCrop_x29a50
    /*000291a4*/ LDR         R3, [R4, #684]              @ 0x2ac 
    /*000291a8*/ CMP         R2, #0 
    /*000291ac*/ LDR         R2, [SP, #100]              @ 0x64 
    /*000291b0*/ ADD         R3, R2, R3 
    /*000291b4*/ STR         R3, [SP, #100]              @ 0x64 
    /*000291b8*/ LDR         R3, [R4, #824]              @ 0x338 
    /*000291bc*/ BEQ         VPSSSplitAndCrop_x291d8
    /*000291c0*/ CMP         R3, #0 
    /*000291c4*/ BEQ         VPSSSplitAndCrop_x29d60
    /*000291c8*/ LDR         R1, [SP, #104]              @ 0x68 
    /*000291cc*/ LDR         R2, [R4, #696]              @ 0x2b8 
    /*000291d0*/ ADD         R2, R1, R2 
    /*000291d4*/ STR         R2, [SP, #104]              @ 0x68 
    VPSSSplitAndCrop_x291d8:
    /*000291d8*/ LDR         R2, [R4, #796]              @ 0x31c 
    VPSSSplitAndCrop_x291dc:
    /*000291dc*/ LDR         R1, [SP, #88]               @ 0x58 
    /*000291e0*/ CMP         R3, #0 
    /*000291e4*/ ADD         R2, R1, R2 
    /*000291e8*/ STR         R2, [SP, #88]               @ 0x58 
    /*000291ec*/ BEQ         VPSSSplitAndCrop_x291f4
    VPSSSplitAndCrop_x291f0:
    /*000291f0*/ LDR         R3, [R4, #828]              @ 0x33c 
    VPSSSplitAndCrop_x291f4:
    /*000291f4*/ LDR         R7, [SP, #64]               @ 0x40 
    /*000291f8*/ ADD         R4, R4, #856                @ 0x358 
    /*000291fc*/ LDR         R2, [SP, #8] 
    /*00029200*/ MOV         R5, R6 
    /*00029204*/ LDR         R0, [SP, #304]              @ 0x130 
    /*00029208*/ MOV         R1, R7 
    /*0002920c*/ SUB         R0, R2, R0 
    /*00029210*/ LDR         R2, [SP, #68]               @ 0x44 
    /*00029214*/ ADD         R3, R2, R3 
    /*00029218*/ STR         R3, [SP, #68]               @ 0x44 
    /*0002921c*/ BL          0x000000000002921C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00029220*/ LDR         R3, [SP, #4] 
    /*00029224*/ CMP         R3, R6 
    /*00029228*/ LDR         R3, [SP, #12] 
    /*0002922c*/ ADD         R3, R3, #4 
    /*00029230*/ STR         R3, [SP, #12] 
    /*00029234*/ LDR         R3, [SP, #16] 
    /*00029238*/ ADD         R3, R3, #4 
    /*0002923c*/ STR         R3, [SP, #16] 
    /*00029240*/ LDR         R3, [SP, #24] 
    /*00029244*/ ADD         R3, R3, #4 
    /*00029248*/ STR         R3, [SP, #24] 
    /*0002924c*/ MUL         R3, R7, R0 
    /*00029250*/ STR         R3, [SP, #20] 
    /*00029254*/ BNE         VPSSSplitAndCrop_x28790
    /*00029258*/ LDR         R3, [SP, #4] 
    /*0002925c*/ MOV         R4, #856                    @ 0x358 
    /*00029260*/ LDR         R2, [SP, #36]               @ 0x24 
    /*00029264*/ MOV         R6, #0 
    /*00029268*/ MOVW        R9, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b88] 
    /*0002926c*/ MOV         R8, R6 
    /*00029270*/ MOVT        R9, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b88] 
    /*00029274*/ MOV         R7, R6 
    /*00029278*/ MLA         R4, R4, R3, R2 
    /*0002927c*/ MOV         R5, SL 
    /*00029280*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9bf0] 
    /*00029284*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x1648] 
    /*00029288*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9bf0] 
    /*0002928c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x1648] 
    /*00029290*/ STR         R3, [SP, #8] 
    /*00029294*/ SUB         R4, R4, #856                @ 0x358 
    /*00029298*/ STR         R2, [SP, #12] 
    /*0002929c*/ B           VPSSSplitAndCrop_x29308
    VPSSSplitAndCrop_x292a0:
    /*000292a0*/ STR         R7, [R4, #776]              @ 0x308 
    /*000292a4*/ LDR         R3, [FP, #748]              @ 0x2ec 
    /*000292a8*/ CMP         R3, #0 
    /*000292ac*/ CMPNE       R5, #0 
    /*000292b0*/ BEQ         VPSSSplitAndCrop_x29354
    /*000292b4*/ LDR         R3, [R4, #736]              @ 0x2e0 
    /*000292b8*/ LDR         R2, [R4, #740]              @ 0x2e4 
    /*000292bc*/ CMP         R3, #0 
    /*000292c0*/ BEQ         VPSSSplitAndCrop_x292cc
    /*000292c4*/ TST         R2, #255                    @ 0xff 
    /*000292c8*/ BNE         VPSSSplitAndCrop_x29d78
    VPSSSplitAndCrop_x292cc:
    /*000292cc*/ LDR         R3, [FP, #808]              @ 0x328 
    /*000292d0*/ ADD         R7, R7, R2 
    /*000292d4*/ SUB         R5, R5, #1 
    /*000292d8*/ SUB         R4, R4, #856                @ 0x358 
    /*000292dc*/ CMP         R3, #0 
    /*000292e0*/ LDR         R3, [R4, #1652]             @ 0x674 
    /*000292e4*/ STRNE       R8, [R4, #1672]             @ 0x688 
    /*000292e8*/ LDR         R2, [FP, #840]              @ 0x348 
    /*000292ec*/ ADD         R8, R8, R3 
    /*000292f0*/ LDR         R3, [R4, #1684]             @ 0x694 
    /*000292f4*/ CMP         R2, #0 
    /*000292f8*/ STRNE       R6, [R4, #1704]             @ 0x6a8 
    /*000292fc*/ CMN         R5, #1 
    /*00029300*/ ADD         R6, R6, R3 
    /*00029304*/ BEQ         VPSSSplitAndCrop_x29468
    VPSSSplitAndCrop_x29308:
    /*00029308*/ LDR         R3, [FP, #764]              @ 0x2fc 
    /*0002930c*/ CMP         R3, #0 
    /*00029310*/ BNE         VPSSSplitAndCrop_x292a0
    /*00029314*/ LDR         R3, [FP, #748]              @ 0x2ec 
    /*00029318*/ CMP         R3, #0 
    /*0002931c*/ BEQ         VPSSSplitAndCrop_x29354
    /*00029320*/ CMP         R5, SL 
    /*00029324*/ BCS         VPSSSplitAndCrop_x29354
    /*00029328*/ LDR         R3, [R4, #736]              @ 0x2e0 
    /*0002932c*/ LDR         R2, [R4, #740]              @ 0x2e4 
    /*00029330*/ CMP         R3, #0 
    /*00029334*/ BEQ         VPSSSplitAndCrop_x292cc
    /*00029338*/ TST         R2, #255                    @ 0xff 
    /*0002933c*/ BEQ         VPSSSplitAndCrop_x292cc
    /*00029340*/ LDR         R3, [SP, #8] 
    /*00029344*/ MOVW        R2, #1113                   @ 0x459 
    /*00029348*/ LDR         R1, [SP, #12] 
    /*0002934c*/ MOV         R0, R9 
    /*00029350*/ BL          0x0000000000029350          @ osal_panic [R_ARM_CALL: +0x0] 
    VPSSSplitAndCrop_x29354:
    /*00029354*/ LDR         R2, [R4, #740]              @ 0x2e4 
    /*00029358*/ B           VPSSSplitAndCrop_x292cc
    VPSSSplitAndCrop_x2935c:
    /*0002935c*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00029360*/ ADD         R3, R3, #1 
    /*00029364*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00029368*/ SUB         R3, R5, SL 
    /*0002936c*/ CLZ         R3, R3 
    /*00029370*/ LSR         R3, R3, #5 
    /*00029374*/ STR         R3, [SP, #76]               @ 0x4c 
    /*00029378*/ B           VPSSSplitAndCrop_x28e20
    VPSSSplitAndCrop_x2937c:
    /*0002937c*/ CMP         R5, SL 
    /*00029380*/ STR         R3, [R4, #616]              @ 0x268 
    /*00029384*/ ADDNE       R9, R9, #1 
    /*00029388*/ STR         R8, [R4, #676]              @ 0x2a4 
    /*0002938c*/ LDREQ       R3, [SP, #96]               @ 0x60 
    /*00029390*/ BICNE       R3, R9, #1 
    /*00029394*/ LDREQ       R2, [SP, #28] 
    /*00029398*/ SUBEQ       R3, R3, R2 
    /*0002939c*/ ADD         R2, SP, #148                @ 0x94 
    /*000293a0*/ STR         R3, [R4, #684]              @ 0x2ac 
    /*000293a4*/ STR         R3, [R2, R5, LSL #2] 
    /*000293a8*/ LDR         R2, [SP, #8] 
    /*000293ac*/ SUB         R2, R2, R7 
    /*000293b0*/ STR         R2, [R4, #680]              @ 0x2a8 
    /*000293b4*/ LDR         R3, [FP, #640]              @ 0x280 
    /*000293b8*/ CMP         R3, #0 
    /*000293bc*/ BNE         VPSSSplitAndCrop_x28bcc
    VPSSSplitAndCrop_x293c0:
    /*000293c0*/ CMP         R5, SL 
    /*000293c4*/ STR         R3, [R4, #640]              @ 0x280 
    /*000293c8*/ ADDNE       R3, SP, #196                @ 0xc4 
    /*000293cc*/ ADD         R1, SP, #160                @ 0xa0 
    /*000293d0*/ LDREQ       R3, [SP, #96]               @ 0x60 
    /*000293d4*/ LDREQ       R2, [SP, #32] 
    /*000293d8*/ LDRNE       R3, [R3, R5, LSL #2] 
    /*000293dc*/ SUBEQ       R3, R3, R2 
    /*000293e0*/ LDR         R2, [SP, #8] 
    /*000293e4*/ ADDNE       R3, R3, #1 
    /*000293e8*/ LDR         IP, [R4, #40]               @ 0x28 
    /*000293ec*/ BICNE       R3, R3, #1 
    /*000293f0*/ SUB         R2, R2, R7 
    /*000293f4*/ STR         R3, [R1, R5, LSL #2] 
    /*000293f8*/ STR         R8, [R4, #688]              @ 0x2b0 
    /*000293fc*/ STR         R3, [R4, #696]              @ 0x2b8 
    /*00029400*/ STR         R2, [R4, #692]              @ 0x2b4 
    /*00029404*/ B           VPSSSplitAndCrop_x28c54
    VPSSSplitAndCrop_x29408:
    /*00029408*/ LDR         R2, [SP, #40]               @ 0x28 
    /*0002940c*/ ADD         R6, R5, #1 
    /*00029410*/ ADD         R2, R2, #1 
    /*00029414*/ STR         R2, [SP, #40]               @ 0x28 
    /*00029418*/ SUB         R2, R5, SL 
    /*0002941c*/ CLZ         R2, R2 
    /*00029420*/ LSR         R2, R2, #5 
    /*00029424*/ STR         R2, [SP, #72]               @ 0x48 
    /*00029428*/ B           VPSSSplitAndCrop_x28d44
    VPSSSplitAndCrop_x2942c:
    /*0002942c*/ LDR         R3, [R4, #688]              @ 0x2b0 
    /*00029430*/ CMP         R3, #0 
    /*00029434*/ BEQ         VPSSSplitAndCrop_x29ab0
    /*00029438*/ LDR         R2, [R4, #824]              @ 0x338 
    /*0002943c*/ LDR         R3, [R4, #792]              @ 0x318 
    /*00029440*/ CMP         R2, #0 
    /*00029444*/ BEQ         VPSSSplitAndCrop_x29d58
    /*00029448*/ CMP         R3, #0 
    /*0002944c*/ LDR         R1, [SP, #104]              @ 0x68 
    /*00029450*/ LDR         R3, [R4, #696]              @ 0x2b8 
    /*00029454*/ ADD         R3, R1, R3 
    /*00029458*/ STR         R3, [SP, #104]              @ 0x68 
    /*0002945c*/ MOVNE       R3, R2 
    /*00029460*/ BNE         VPSSSplitAndCrop_x291d8
    /*00029464*/ B           VPSSSplitAndCrop_x291f0
    VPSSSplitAndCrop_x29468:
    /*00029468*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0002946c*/ MOVW        LR, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x6a64] 
    /*00029470*/ MOVT        LR, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x6a64] 
    /*00029474*/ MOV         R5, #0 
    /*00029478*/ ADD         R4, R3, #120                @ 0x78 
    /*0002947c*/ ADD         R6, R3, #2688               @ 0xa80 
    /*00029480*/ MOV         IP, LR 
    VPSSSplitAndCrop_x29484:
    /*00029484*/ MOV         R1, R4 
    /*00029488*/ MOV         R2, FP 
    /*0002948c*/ MOV         R3, #0 
    VPSSSplitAndCrop_x29490:
    /*00029490*/ LDR         R0, [R2, #52]               @ 0x34 
    /*00029494*/ ADD         R2, R2, #16 
    /*00029498*/ STR         R0, [IP, R3, LSL #4] 
    /*0002949c*/ ADD         R3, R3, #1 
    /*000294a0*/ CMP         R3, #4 
    /*000294a4*/ STR         R5, [R1], #4 
    /*000294a8*/ BNE         VPSSSplitAndCrop_x29490
    /*000294ac*/ LDR         R3, [FP, #116]              @ 0x74 
    /*000294b0*/ ADD         R4, R4, #856                @ 0x358 
    /*000294b4*/ ADD         IP, IP, #64                 @ 0x40 
    /*000294b8*/ STR         R3, [R4, #-860]             @ 0xfffffca4 
    /*000294bc*/ CMP         R6, R4 
    /*000294c0*/ BNE         VPSSSplitAndCrop_x29484
    /*000294c4*/ ADD         R8, FP, #120                @ 0x78 
    /*000294c8*/ MOV         R0, FP 
    /*000294cc*/ STR         FP, [SP, #12] 
    /*000294d0*/ ADD         R5, SP, #208                @ 0xd0 
    /*000294d4*/ LDR         R7, [SP, #36]               @ 0x24 
    /*000294d8*/ ADD         R9, SP, #220                @ 0xdc 
    /*000294dc*/ LDR         FP, [SP, #4] 
    /*000294e0*/ MOV         R4, #0 
    VPSSSplitAndCrop_x294e4:
    /*000294e4*/ CMP         FP, #0 
    /*000294e8*/ BEQ         VPSSSplitAndCrop_x29588
    /*000294ec*/ LDR         R3, [LR] 
    /*000294f0*/ MOV         IP, R7 
    /*000294f4*/ MOV         R1, #0 
    /*000294f8*/ STR         R7, [SP, #8] 
    VPSSSplitAndCrop_x294fc:
    /*000294fc*/ LDR         R2, [R9, R1, LSL #2] 
    /*00029500*/ CMP         R3, R2 
    /*00029504*/ BGE         VPSSSplitAndCrop_x29548
    /*00029508*/ LDR         SL, [R5, R1, LSL #2] 
    /*0002950c*/ ADD         R6, IP, R4 
    /*00029510*/ LDR         R7, [R5, R1, LSL #2] 
    /*00029514*/ CMP         R3, SL 
    /*00029518*/ SUB         R7, R3, R7 
    /*0002951c*/ BLT         VPSSSplitAndCrop_x29548
    /*00029520*/ LDR         SL, [R8] 
    /*00029524*/ STR         SL, [R6, #120]              @ 0x78 
    /*00029528*/ STR         R7, [IP, #52]               @ 0x34 
    /*0002952c*/ LDR         R6, [R0, #60]               @ 0x3c 
    /*00029530*/ LDR         R7, [R0, #52]               @ 0x34 
    /*00029534*/ ADD         R6, R6, R7 
    /*00029538*/ CMP         R6, R2 
    /*0002953c*/ RSBLS       R3, R3, R6 
    /*00029540*/ RSBHI       R3, R3, R2 
    /*00029544*/ STR         R3, [IP, #60]               @ 0x3c 
    VPSSSplitAndCrop_x29548:
    /*00029548*/ ADD         R1, R1, #1 
    /*0002954c*/ LDR         R7, [R0, #52]               @ 0x34 
    /*00029550*/ LDR         R2, [R0, #60]               @ 0x3c 
    /*00029554*/ MOV         R3, #0 
    /*00029558*/ LDR         R6, [R5, R1, LSL #2] 
    /*0002955c*/ ADD         R2, R7, R2 
    /*00029560*/ CMP         R2, R6 
    /*00029564*/ BLS         VPSSSplitAndCrop_x29574
    /*00029568*/ CMP         R7, R6 
    /*0002956c*/ MOVGE       R3, R7 
    /*00029570*/ MOVLT       R3, R6 
    VPSSSplitAndCrop_x29574:
    /*00029574*/ CMP         R1, FP 
    /*00029578*/ STR         R3, [LR, R1, LSL #6] 
    /*0002957c*/ ADD         IP, IP, #856                @ 0x358 
    /*00029580*/ BNE         VPSSSplitAndCrop_x294fc
    /*00029584*/ LDR         R7, [SP, #8] 
    VPSSSplitAndCrop_x29588:
    /*00029588*/ SUB         R4, R4, #12 
    /*0002958c*/ ADD         LR, LR, #16 
    /*00029590*/ CMN         R4, #48                     @ 0x30 
    /*00029594*/ ADD         R0, R0, #16 
    /*00029598*/ ADD         R8, R8, #4 
    /*0002959c*/ ADD         R7, R7, #16 
    /*000295a0*/ BNE         VPSSSplitAndCrop_x294e4
    /*000295a4*/ LDR         FP, [SP, #12] 
    /*000295a8*/ MOV         SL, #0 
    /*000295ac*/ LDR         LR, [PC, #3520]             @ 0x000000000002a374 
    /*000295b0*/ ADD         R7, FP, #144                @ 0x90 
    /*000295b4*/ MOV         R8, FP 
    VPSSSplitAndCrop_x295b8:
    /*000295b8*/ LDR         R6, [R8, #184]              @ 0xb8 
    /*000295bc*/ LDR         R3, [SP, #4] 
    /*000295c0*/ STR         R6, [LR, #8] 
    /*000295c4*/ CMP         R3, #0 
    /*000295c8*/ LDR         R3, [R8, #192]              @ 0xc0 
    /*000295cc*/ STR         R3, [LR, #16] 
    /*000295d0*/ LDR         R3, [R8, #200]              @ 0xc8 
    /*000295d4*/ STR         R3, [LR, #24] 
    /*000295d8*/ LDR         R3, [R8, #208]              @ 0xd0 
    /*000295dc*/ STR         R3, [LR, #32] 
    /*000295e0*/ BEQ         VPSSSplitAndCrop_x29668
    /*000295e4*/ ADD         R9, SL, #34                 @ 0x22 
    /*000295e8*/ SUB         R3, R8, FP 
    /*000295ec*/ LDR         R4, [SP, #36]               @ 0x24 
    /*000295f0*/ MOV         IP, #0 
    /*000295f4*/ LSL         R9, R9, #2 
    /*000295f8*/ STR         R8, [SP, #8] 
    /*000295fc*/ MOV         R8, R3 
    VPSSSplitAndCrop_x29600:
    /*00029600*/ ADD         R3, SP, #220                @ 0xdc 
    /*00029604*/ LDR         R3, [R3, IP, LSL #2] 
    /*00029608*/ CMP         R3, R6 
    /*0002960c*/ BGT         VPSSSplitAndCrop_x29688
    /*00029610*/ LDR         R2, [LR, #16] 
    /*00029614*/ CMP         R3, R2 
    /*00029618*/ BGT         VPSSSplitAndCrop_x29688
    /*0002961c*/ LDR         R2, [LR, #24] 
    /*00029620*/ CMP         R3, R2 
    /*00029624*/ BGT         VPSSSplitAndCrop_x29688
    /*00029628*/ LDR         R2, [LR, #32] 
    /*0002962c*/ CMP         R3, R2 
    /*00029630*/ BGT         VPSSSplitAndCrop_x29688
    VPSSSplitAndCrop_x29634:
    /*00029634*/ MOV         R5, #0 
    VPSSSplitAndCrop_x29638:
    /*00029638*/ LDR         R3, [R7] 
    /*0002963c*/ ADD         R2, R4, R9 
    /*00029640*/ ADD         IP, IP, #1 
    /*00029644*/ ADD         R4, R4, #856                @ 0x358 
    /*00029648*/ AND         R5, R5, R3 
    /*0002964c*/ STR         R5, [R2, #8] 
    /*00029650*/ LDR         R2, [SP, #4] 
    /*00029654*/ LDR         R3, [FP, #140]              @ 0x8c 
    /*00029658*/ CMP         IP, R2 
    /*0002965c*/ STR         R3, [R4, #-716]             @ 0xfffffd34 
    /*00029660*/ BNE         VPSSSplitAndCrop_x29600
    /*00029664*/ LDR         R8, [SP, #8] 
    VPSSSplitAndCrop_x29668:
    /*00029668*/ ADD         SL, SL, #1 
    /*0002966c*/ ADD         R8, R8, #52                 @ 0x34 
    /*00029670*/ CMP         SL, #8 
    /*00029674*/ ADD         LR, LR, #52                 @ 0x34 
    /*00029678*/ ADD         R7, R7, #4 
    /*0002967c*/ BNE         VPSSSplitAndCrop_x295b8
    /*00029680*/ ADD         SP, SP, #268                @ 0x10c 
    /*00029684*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VPSSSplitAndCrop_x29688:
    /*00029688*/ ADD         R3, SP, #208                @ 0xd0 
    /*0002968c*/ LDR         R0, [R3, IP, LSL #2] 
    /*00029690*/ CMP         R0, R6 
    /*00029694*/ BLT         VPSSSplitAndCrop_x296bc
    /*00029698*/ LDR         R3, [LR, #16] 
    /*0002969c*/ CMP         R0, R3 
    /*000296a0*/ BLT         VPSSSplitAndCrop_x296bc
    /*000296a4*/ LDR         R3, [LR, #24] 
    /*000296a8*/ CMP         R0, R3 
    /*000296ac*/ BLT         VPSSSplitAndCrop_x296bc
    /*000296b0*/ LDR         R3, [LR, #32] 
    /*000296b4*/ CMP         R0, R3 
    /*000296b8*/ BGE         VPSSSplitAndCrop_x29634
    VPSSSplitAndCrop_x296bc:
    /*000296bc*/ LDR         R5, [R7] 
    /*000296c0*/ ADD         R1, R8, R4 
    /*000296c4*/ MOV         R2, R6 
    /*000296c8*/ MOV         R3, #1 
    VPSSSplitAndCrop_x296cc:
    /*000296cc*/ ADD         R3, R3, #1 
    /*000296d0*/ SUB         R2, R2, R0 
    /*000296d4*/ CMP         R3, #5 
    /*000296d8*/ STR         R2, [R1, #184]              @ 0xb8 
    /*000296dc*/ ADD         R1, R1, #8 
    /*000296e0*/ BEQ         VPSSSplitAndCrop_x29638
    /*000296e4*/ LDR         R2, [LR, R3, LSL #3] 
    /*000296e8*/ B           VPSSSplitAndCrop_x296cc
    VPSSSplitAndCrop_x296ec:
    /*000296ec*/ STR         R1, [R4, #824]              @ 0x338 
    /*000296f0*/ STR         R1, [R4, #692]              @ 0x2b4 
    /*000296f4*/ STR         R1, [R4, #696]              @ 0x2b8 
    /*000296f8*/ B           VPSSSplitAndCrop_x28dc8
    VPSSSplitAndCrop_x296fc:
    /*000296fc*/ STR         R0, [R4, #792]              @ 0x318 
    /*00029700*/ STR         R0, [R4, #680]              @ 0x2a8 
    /*00029704*/ STR         R0, [R4, #684]              @ 0x2ac 
    /*00029708*/ B           VPSSSplitAndCrop_x28ce8
    VPSSSplitAndCrop_x2970c:
    /*0002970c*/ STR         R8, [R4, #40]               @ 0x28 
    /*00029710*/ LDR         R3, [FP, #40]               @ 0x28 
    /*00029714*/ CMP         R3, #0 
    /*00029718*/ BEQ         VPSSSplitAndCrop_x29ca0
    /*0002971c*/ LDR         R1, [SP, #8] 
    /*00029720*/ LDR         IP, [SP, #304]              @ 0x130 
    /*00029724*/ LDR         R3, [FP, #44]               @ 0x2c 
    /*00029728*/ SUB         R7, R1, IP 
    /*0002972c*/ AND         R1, R7, #3 
    /*00029730*/ AND         R3, R3, #3 
    /*00029734*/ SUB         R1, R1, #2 
    /*00029738*/ SUB         R3, R3, #2 
    /*0002973c*/ CLZ         R1, R1 
    /*00029740*/ CLZ         R3, R3 
    /*00029744*/ LSR         R1, R1, #5 
    /*00029748*/ LSR         R3, R3, #5 
    /*0002974c*/ CMP         R3, R1 
    /*00029750*/ MOVEQ       R1, #1 
    /*00029754*/ SUBNE       R7, R7, #2 
    /*00029758*/ MOVNE       R1, #1 
    /*0002975c*/ B           VPSSSplitAndCrop_x28ac8
    VPSSSplitAndCrop_x29760:
    /*00029760*/ CMP         R7, #0 
    /*00029764*/ BEQ         VPSSSplitAndCrop_x29cf0
    /*00029768*/ LDR         R3, [FP, #16] 
    /*0002976c*/ CMP         R3, #0 
    /*00029770*/ BNE         VPSSSplitAndCrop_x29780
    /*00029774*/ LDR         R3, [FP, #20] 
    /*00029778*/ CMP         R3, #0 
    /*0002977c*/ BEQ         VPSSSplitAndCrop_x2a024
    VPSSSplitAndCrop_x29780:
    /*00029780*/ LDR         R2, [FP, #44]               @ 0x2c 
    /*00029784*/ LDR         R3, [FP, #48]               @ 0x30 
    /*00029788*/ LDR         R6, [SP, #64]               @ 0x40 
    /*0002978c*/ ADD         R3, R2, R3 
    /*00029790*/ STR         R3, [SP, #80]               @ 0x50 
    /*00029794*/ LDR         R9, [FP, #4] 
    /*00029798*/ MOV         R0, R3 
    /*0002979c*/ MOV         R1, R6 
    /*000297a0*/ BL          0x00000000000297A0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000297a4*/ MOV         R1, R6 
    /*000297a8*/ STR         R0, [SP, #56]               @ 0x38 
    /*000297ac*/ MOV         R0, R9 
    /*000297b0*/ BL          0x00000000000297B0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000297b4*/ LDR         R2, [SP, #56]               @ 0x38 
    /*000297b8*/ LDR         R3, [SP, #80]               @ 0x50 
    /*000297bc*/ CMP         R2, R0 
    /*000297c0*/ BEQ         VPSSSplitAndCrop_x2a030
    /*000297c4*/ LDR         R6, [SP, #64]               @ 0x40 
    /*000297c8*/ SUB         R3, R3, #1 
    /*000297cc*/ ADD         R0, R3, R6 
    /*000297d0*/ LDR         R3, [SP, #20] 
    /*000297d4*/ MOV         R1, R6 
    /*000297d8*/ SUB         R0, R0, R3 
    /*000297dc*/ BL          0x00000000000297DC          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000297e0*/ MUL         R3, R6, R0 
    /*000297e4*/ STR         R3, [SP, #116]              @ 0x74 
    VPSSSplitAndCrop_x297e8:
    /*000297e8*/ LDR         R1, [SP, #116]              @ 0x74 
    /*000297ec*/ B           VPSSSplitAndCrop_x287b8
    VPSSSplitAndCrop_x297f0:
    /*000297f0*/ CMP         R5, SL 
    /*000297f4*/ BEQ         VPSSSplitAndCrop_x29dd0
    /*000297f8*/ MOV         R3, #0 
    /*000297fc*/ STR         R3, [R4, #780]              @ 0x30c 
    /*00029800*/ LDR         R3, [FP, #820]              @ 0x334 
    /*00029804*/ CMP         R3, #1 
    /*00029808*/ BEQ         VPSSSplitAndCrop_x29acc
    /*0002980c*/ LDR         R3, [FP, #852]              @ 0x354 
    /*00029810*/ CMP         R3, #1 
    /*00029814*/ BNE         VPSSSplitAndCrop_x28f18
    VPSSSplitAndCrop_x29818:
    /*00029818*/ MOV         R3, #0 
    /*0002981c*/ STR         R3, [R4, #852]              @ 0x354 
    /*00029820*/ B           VPSSSplitAndCrop_x28f18
    VPSSSplitAndCrop_x29824:
    /*00029824*/ CMP         R5, #0 
    /*00029828*/ MOVNE       R3, #0 
    /*0002982c*/ STR         R3, [R4, #28] 
    /*00029830*/ B           VPSSSplitAndCrop_x28ef4
    VPSSSplitAndCrop_x29834:
    /*00029834*/ MOV         R3, #0 
    /*00029838*/ B           VPSSSplitAndCrop_x29040
    VPSSSplitAndCrop_x2983c:
    /*0002983c*/ ADD         R3, SP, #196                @ 0xc4 
    /*00029840*/ LDR         R2, [FP, #660]              @ 0x294 
    /*00029844*/ LDR         R1, [R3, R5, LSL #2] 
    /*00029848*/ MOV         R3, #0 
    /*0002984c*/ LSL         R0, R1, #20 
    /*00029850*/ LSR         R1, R1, #12 
    /*00029854*/ BL          0x0000000000029854          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00029858*/ LDR         IP, [R4, #40]               @ 0x28 
    /*0002985c*/ ADD         R3, R0, #1 
    /*00029860*/ BIC         R3, R3, #1 
    /*00029864*/ B           VPSSSplitAndCrop_x28bf8
    VPSSSplitAndCrop_x29868:
    /*00029868*/ LDR         R2, [FP, #636]              @ 0x27c 
    /*0002986c*/ MOV         R3, #0 
    /*00029870*/ LSL         R0, R9, #20 
    /*00029874*/ LSR         R1, R9, #12 
    /*00029878*/ BL          0x0000000000029878          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*0002987c*/ ADD         R1, R0, #1 
    /*00029880*/ BIC         R1, R1, #1 
    /*00029884*/ B           VPSSSplitAndCrop_x28b64
    VPSSSplitAndCrop_x29888:
    /*00029888*/ STR         R8, [R4, #592]              @ 0x250 
    /*0002988c*/ LSL         R0, R1, #20 
    /*00029890*/ MOV         R3, #0 
    /*00029894*/ LDR         R2, [FP, #612]              @ 0x264 
    /*00029898*/ LSR         R1, R1, #12 
    /*0002989c*/ BL          0x000000000002989C          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*000298a0*/ CMP         R5, SL 
    /*000298a4*/ BEQ         VPSSSplitAndCrop_x29e0c
    /*000298a8*/ LDR         R6, [SP, #92]               @ 0x5c 
    /*000298ac*/ LDR         R3, [SP, #56]               @ 0x38 
    /*000298b0*/ MOV         R1, R6 
    /*000298b4*/ ADD         R0, R3, R0 
    /*000298b8*/ BL          0x00000000000298B8          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000298bc*/ MUL         R0, R6, R0 
    VPSSSplitAndCrop_x298c0:
    /*000298c0*/ LDR         R3, [SP, #56]               @ 0x38 
    /*000298c4*/ LDR         R1, [FP, #612]              @ 0x264 
    /*000298c8*/ MOVW        R6, #65535                  @ 0xffff 
    /*000298cc*/ SUB         R3, R0, R3 
    /*000298d0*/ MOVT        R6, #15 
    /*000298d4*/ MOV         R7, #0 
    /*000298d8*/ LDR         LR, [SP, #16] 
    /*000298dc*/ MOV         IP, R3 
    /*000298e0*/ STR         R3, [SP, #124]              @ 0x7c 
    /*000298e4*/ UMLAL       R6, R7, R1, IP 
    /*000298e8*/ STR         R0, [LR] 
    /*000298ec*/ LDR         LR, [SP, #24] 
    /*000298f0*/ MOV         R2, #1048576                @ 0x100000 
    /*000298f4*/ MOV         R3, #0 
    /*000298f8*/ STR         IP, [LR] 
    /*000298fc*/ MOV         R0, R6 
    /*00029900*/ MOV         R1, R7 
    /*00029904*/ BL          0x0000000000029904          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00029908*/ LDR         R2, [SP, #12] 
    /*0002990c*/ CMP         R5, SL 
    /*00029910*/ ADD         R3, R0, #1 
    /*00029914*/ BIC         R3, R3, #1 
    /*00029918*/ ADD         R3, R3, R9 
    /*0002991c*/ STR         R3, [SP, #80]               @ 0x50 
    /*00029920*/ STR         R3, [R2] 
    /*00029924*/ BEQ         VPSSSplitAndCrop_x29e04
    /*00029928*/ LDR         R2, [SP, #304]              @ 0x130 
    /*0002992c*/ LDR         R6, [SP, #64]               @ 0x40 
    /*00029930*/ SUB         R0, R2, #1 
    /*00029934*/ LDR         R2, [SP, #8] 
    /*00029938*/ ADD         R0, R0, R6 
    /*0002993c*/ ADD         R0, R0, R2 
    /*00029940*/ LDR         R2, [SP, #20] 
    /*00029944*/ MOV         R1, R6 
    /*00029948*/ SUB         R0, R0, R2 
    /*0002994c*/ ADD         R0, R0, R3 
    /*00029950*/ BL          0x0000000000029950          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00029954*/ MUL         R1, R6, R0 
    VPSSSplitAndCrop_x29958:
    /*00029958*/ LDR         R0, [SP, #20] 
    /*0002995c*/ LDR         R3, [SP, #8] 
    /*00029960*/ LDR         R2, [SP, #304]              @ 0x130 
    /*00029964*/ SUB         R3, R3, R0 
    /*00029968*/ STR         R1, [R4, #4] 
    /*0002996c*/ CMP         R2, R3 
    /*00029970*/ STR         R0, [R4, #24] 
    /*00029974*/ BCC         VPSSSplitAndCrop_x29d04
    /*00029978*/ LDR         IP, [FP, #40]               @ 0x28 
    /*0002997c*/ ADDS        IP, IP, #0 
    /*00029980*/ MOVNE       IP, #1 
    /*00029984*/ CMP         R5, SL 
    /*00029988*/ STR         IP, [R4, #40]               @ 0x28 
    /*0002998c*/ MOVNE       R7, #0 
    /*00029990*/ BEQ         VPSSSplitAndCrop_x2a140
    VPSSSplitAndCrop_x29994:
    /*00029994*/ LDR         R3, [SP, #20] 
    /*00029998*/ ADD         R7, R7, R3 
    VPSSSplitAndCrop_x2999c:
    /*0002999c*/ CMP         R5, #0 
    /*000299a0*/ LDRNE       R3, [SP, #20] 
    /*000299a4*/ MOVEQ       R6, R9 
    /*000299a8*/ SUBNE       R6, R7, R3 
    /*000299ac*/ CMP         R5, SL 
    /*000299b0*/ STR         R6, [R4, #44]               @ 0x2c 
    /*000299b4*/ BEQ         VPSSSplitAndCrop_x29e28
    /*000299b8*/ SUB         R6, R1, R6 
    /*000299bc*/ BIC         R3, R6, #3 
    /*000299c0*/ CMP         R3, #2048                   @ 0x800 
    /*000299c4*/ MOVCS       R3, #2048                   @ 0x800 
    VPSSSplitAndCrop_x299c8:
    /*000299c8*/ STR         R3, [R4, #48]               @ 0x30 
    /*000299cc*/ LDR         R0, [FP, #40]               @ 0x28 
    /*000299d0*/ LDR         R2, [FP, #612]              @ 0x264 
    /*000299d4*/ LDR         LR, [SP, #60]               @ 0x3c 
    /*000299d8*/ CMP         R0, #0 
    /*000299dc*/ CMPNE       R5, #0 
    /*000299e0*/ MOVNE       R0, #1 
    /*000299e4*/ LDRNE       R0, [FP, #44]               @ 0x2c 
    /*000299e8*/ MUL         R2, R2, LR 
    /*000299ec*/ MOVEQ       R0, #0 
    /*000299f0*/ CMP         IP, #0 
    /*000299f4*/ SUB         R0, R7, R0 
    /*000299f8*/ MOVNE       R1, R3 
    /*000299fc*/ SUB         R2, R2, R0, LSL #20 
    /*00029a00*/ STR         R1, [R4, #604]              @ 0x25c 
    /*00029a04*/ LSL         R0, R1, #20 
    /*00029a08*/ LSR         R1, R1, #12 
    /*00029a0c*/ MOV         R3, #0 
    /*00029a10*/ STR         R2, [R4, #596]              @ 0x254 
    /*00029a14*/ LSR         R2, R2, #1 
    /*00029a18*/ STR         R2, [R4, #600]              @ 0x258 
    VPSSSplitAndCrop_x29a1c:
    /*00029a1c*/ LDR         R2, [FP, #612]              @ 0x264 
    /*00029a20*/ BL          0x0000000000029A20          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00029a24*/ MOV         R2, #0 
    /*00029a28*/ ADD         R3, R0, #1 
    /*00029a2c*/ BIC         R3, R3, #1 
    /*00029a30*/ STR         R3, [R4, #608]              @ 0x260 
    /*00029a34*/ LDR         R3, [FP, #612]              @ 0x264 
    /*00029a38*/ STR         R8, [R4, #664]              @ 0x298 
    /*00029a3c*/ STR         R2, [R4, #668]              @ 0x29c 
    /*00029a40*/ STR         R3, [R4, #612]              @ 0x264 
    /*00029a44*/ LDR         R3, [SP, #124]              @ 0x7c 
    /*00029a48*/ STR         R3, [R4, #672]              @ 0x2a0 
    /*00029a4c*/ B           VPSSSplitAndCrop_x28b28
    VPSSSplitAndCrop_x29a50:
    /*00029a50*/ CMP         R2, #0 
    /*00029a54*/ LDR         R3, [R4, #824]              @ 0x338 
    /*00029a58*/ BEQ         VPSSSplitAndCrop_x291dc
    /*00029a5c*/ CMP         R3, #0 
    /*00029a60*/ BEQ         VPSSSplitAndCrop_x291f4
    /*00029a64*/ LDR         R2, [SP, #104]              @ 0x68 
    /*00029a68*/ LDR         R3, [R4, #696]              @ 0x2b8 
    /*00029a6c*/ ADD         R3, R2, R3 
    /*00029a70*/ STR         R3, [SP, #104]              @ 0x68 
    /*00029a74*/ B           VPSSSplitAndCrop_x291f0
    VPSSSplitAndCrop_x29a78:
    /*00029a78*/ LDR         R1, [SP, #4] 
    /*00029a7c*/ LDR         R0, [SP, #40]               @ 0x28 
    /*00029a80*/ LDR         R2, [SP, #72]               @ 0x48 
    /*00029a84*/ CMP         R1, R0 
    /*00029a88*/ MOVEQ       R2, #1 
    /*00029a8c*/ STR         R2, [SP, #72]               @ 0x48 
    /*00029a90*/ B           VPSSSplitAndCrop_x28d44
    VPSSSplitAndCrop_x29a94:
    /*00029a94*/ LDR         R2, [SP, #4] 
    /*00029a98*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*00029a9c*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*00029aa0*/ CMP         R2, R1 
    /*00029aa4*/ MOVEQ       R3, #1 
    /*00029aa8*/ STR         R3, [SP, #76]               @ 0x4c 
    /*00029aac*/ B           VPSSSplitAndCrop_x28e20
    VPSSSplitAndCrop_x29ab0:
    /*00029ab0*/ LDR         R2, [R4, #792]              @ 0x318 
    /*00029ab4*/ LDR         R3, [R4, #824]              @ 0x338 
    /*00029ab8*/ CMP         R2, #0 
    /*00029abc*/ BNE         VPSSSplitAndCrop_x291d8
    /*00029ac0*/ B           VPSSSplitAndCrop_x291dc
    VPSSSplitAndCrop_x29ac4:
    /*00029ac4*/ CMP         R5, SL 
    /*00029ac8*/ BEQ         VPSSSplitAndCrop_x29df0
    VPSSSplitAndCrop_x29acc:
    /*00029acc*/ MOV         R3, #0 
    /*00029ad0*/ STR         R3, [R4, #820]              @ 0x334 
    /*00029ad4*/ LDR         R3, [FP, #852]              @ 0x354 
    /*00029ad8*/ CMP         R3, #1 
    /*00029adc*/ MOVEQ       R3, #0 
    /*00029ae0*/ STREQ       R3, [R4, #852]              @ 0x354 
    /*00029ae4*/ B           VPSSSplitAndCrop_x28f18
    VPSSSplitAndCrop_x29ae8:
    /*00029ae8*/ LDRB        R3, [SP, #12] 
    /*00029aec*/ LDR         R1, [SP, #304]              @ 0x130 
    /*00029af0*/ CMP         R1, R3 
    /*00029af4*/ BCC         VPSSSplitAndCrop_x2861c
    /*00029af8*/ LDR         R3, [FP, #748]              @ 0x2ec 
    /*00029afc*/ LDR         R1, [SP, #4] 
    /*00029b00*/ CMP         R3, #0 
    /*00029b04*/ CMPNE       R1, #2 
    /*00029b08*/ BLS         VPSSSplitAndCrop_x2861c
    VPSSSplitAndCrop_x29b0c:
    /*00029b0c*/ LDR         R3, [FP, #592]              @ 0x250 
    /*00029b10*/ CMP         R3, #0 
    /*00029b14*/ BNE         VPSSSplitAndCrop_x2a088
    /*00029b18*/ LDR         R5, [SP, #92]               @ 0x5c 
    /*00029b1c*/ MOV         R0, R7 
    /*00029b20*/ MOV         R1, R5 
    /*00029b24*/ BL          0x0000000000029B24          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00029b28*/ MUL         R3, R5, R0 
    /*00029b2c*/ STR         R3, [SP, #112]              @ 0x70 
    VPSSSplitAndCrop_x29b30:
    /*00029b30*/ LDR         R3, [SP, #112]              @ 0x70 
    /*00029b34*/ LDR         R2, [SP, #8] 
    /*00029b38*/ STR         R3, [SP, #84]               @ 0x54 
    /*00029b3c*/ MUL         R5, R2, R3 
    /*00029b40*/ B           VPSSSplitAndCrop_x28628
    VPSSSplitAndCrop_x29b44:
    /*00029b44*/ LDR         R3, [SP, #120]              @ 0x78 
    /*00029b48*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*00029b4c*/ LDR         R1, [SP, #12] 
    /*00029b50*/ SUB         R2, R3, R2 
    /*00029b54*/ LDR         R3, [SP, #16] 
    /*00029b58*/ LDR         R0, [SP, #116]              @ 0x74 
    /*00029b5c*/ STR         R2, [R3] 
    /*00029b60*/ LDR         R3, [SP, #56]               @ 0x38 
    /*00029b64*/ SUB         R2, R2, R3 
    /*00029b68*/ LDR         R3, [SP, #24] 
    /*00029b6c*/ STR         R2, [R3] 
    /*00029b70*/ ADD         R3, R9, R2 
    /*00029b74*/ STR         R3, [R1] 
    /*00029b78*/ B           VPSSSplitAndCrop_x28a88
    VPSSSplitAndCrop_x29b7c:
    /*00029b7c*/ LDR         R3, [FP, #40]               @ 0x28 
    /*00029b80*/ CMP         R3, #0 
    /*00029b84*/ BEQ         VPSSSplitAndCrop_x29ba8
    /*00029b88*/ LDR         IP, [FP, #44]               @ 0x2c 
    /*00029b8c*/ LDR         R3, [FP, #48]               @ 0x30 
    /*00029b90*/ ADD         R3, R3, IP 
    /*00029b94*/ SUB         IP, R3, R7 
    /*00029b98*/ CMP         IP, #2048                   @ 0x800 
    /*00029b9c*/ BCS         VPSSSplitAndCrop_x29bb8
    VPSSSplitAndCrop_x29ba0:
    /*00029ba0*/ SUB         R3, R3, R7 
    /*00029ba4*/ B           VPSSSplitAndCrop_x28af4
    VPSSSplitAndCrop_x29ba8:
    /*00029ba8*/ LDR         R3, [FP, #4] 
    /*00029bac*/ SUB         IP, R3, R7 
    /*00029bb0*/ CMP         IP, #2048                   @ 0x800 
    /*00029bb4*/ BCC         VPSSSplitAndCrop_x29ba0
    VPSSSplitAndCrop_x29bb8:
    /*00029bb8*/ MOV         R3, #2048                   @ 0x800 
    /*00029bbc*/ B           VPSSSplitAndCrop_x28af4
    VPSSSplitAndCrop_x29bc0:
    /*00029bc0*/ LDR         R9, [FP, #4] 
    /*00029bc4*/ SUB         R2, R9, R3 
    /*00029bc8*/ B           VPSSSplitAndCrop_x28604
    VPSSSplitAndCrop_x29bcc:
    /*00029bcc*/ LDR         R3, [SP, #108]              @ 0x6c 
    /*00029bd0*/ CMP         R3, #0 
    /*00029bd4*/ BNE         VPSSSplitAndCrop_x29db8
    /*00029bd8*/ LDR         R3, [FP, #700]              @ 0x2bc 
    /*00029bdc*/ CMP         R3, #0 
    /*00029be0*/ CMPNE       R8, #0 
    /*00029be4*/ BEQ         VPSSSplitAndCrop_x29c88
    /*00029be8*/ LDR         R3, [SP, #4] 
    /*00029bec*/ LDR         R2, [SP, #96]               @ 0x60 
    /*00029bf0*/ CMP         R2, #3360                   @ 0xd20 
    /*00029bf4*/ CMPCS       R3, #2 
    /*00029bf8*/ BNE         VPSSSplitAndCrop_x29c88
    VPSSSplitAndCrop_x29bfc:
    /*00029bfc*/ CMP         R6, #0 
    /*00029c00*/ MOV         R7, #1920                   @ 0x780 
    /*00029c04*/ LDRNE       R6, [FP, #44]               @ 0x2c 
    /*00029c08*/ CMP         R5, #0 
    /*00029c0c*/ BEQ         VPSSSplitAndCrop_x28544
    VPSSSplitAndCrop_x29c10:
    /*00029c10*/ LDR         R2, [FP, #612]              @ 0x264 
    /*00029c14*/ MOV         R3, #0 
    /*00029c18*/ LSL         R0, R7, #20 
    /*00029c1c*/ LSR         R1, R7, #12 
    /*00029c20*/ BL          0x0000000000029C20          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00029c24*/ LDR         R4, [SP, #92]               @ 0x5c 
    /*00029c28*/ MOV         R1, R4 
    /*00029c2c*/ MOV         R3, R0 
    /*00029c30*/ STR         R0, [SP, #12] 
    /*00029c34*/ ADD         R0, R3, R9 
    /*00029c38*/ BL          0x0000000000029C38          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00029c3c*/ LDR         R3, [FP, #592]              @ 0x250 
    /*00029c40*/ CMP         R3, #0 
    /*00029c44*/ MUL         R3, R4, R0 
    /*00029c48*/ LDREQ       R4, [FP, #748]              @ 0x2ec 
    /*00029c4c*/ STR         R3, [SP, #112]              @ 0x70 
    /*00029c50*/ BEQ         VPSSSplitAndCrop_x28560
    /*00029c54*/ LDR         IP, [FP, #612]              @ 0x264 
    /*00029c58*/ MOVW        R0, #65535                  @ 0xffff 
    /*00029c5c*/ LDR         LR, [SP, #112]              @ 0x70 
    /*00029c60*/ MOVT        R0, #15 
    /*00029c64*/ MOV         R1, #0 
    /*00029c68*/ MOV         R2, #1048576                @ 0x100000 
    /*00029c6c*/ MOV         R3, #0 
    /*00029c70*/ UMLAL       R0, R1, IP, LR 
    /*00029c74*/ BL          0x0000000000029C74          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00029c78*/ LDR         R4, [FP, #748]              @ 0x2ec 
    /*00029c7c*/ ADD         R0, R0, #1 
    /*00029c80*/ BIC         R5, R0, #1 
    /*00029c84*/ B           VPSSSplitAndCrop_x28564
    VPSSSplitAndCrop_x29c88:
    /*00029c88*/ LDR         R1, [SP, #4] 
    /*00029c8c*/ LDR         R0, [SP, #96]               @ 0x60 
    /*00029c90*/ BL          0x0000000000029C90          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00029c94*/ ADD         R0, R0, #1 
    /*00029c98*/ BIC         R7, R0, #1 
    /*00029c9c*/ B           VPSSSplitAndCrop_x28534
    VPSSSplitAndCrop_x29ca0:
    /*00029ca0*/ LDR         R1, [SP, #304]              @ 0x130 
    /*00029ca4*/ LDR         R3, [SP, #8] 
    /*00029ca8*/ SUB         R7, R3, R1 
    /*00029cac*/ MOV         R1, #1 
    /*00029cb0*/ BIC         R7, R7, #3 
    /*00029cb4*/ B           VPSSSplitAndCrop_x28ac8
    VPSSSplitAndCrop_x29cb8:
    /*00029cb8*/ CMP         R5, SL 
    /*00029cbc*/ BNE         VPSSSplitAndCrop_x29818
    VPSSSplitAndCrop_x29cc0:
    /*00029cc0*/ STR         R8, [R4, #852]              @ 0x354 
    /*00029cc4*/ B           VPSSSplitAndCrop_x28f18
    VPSSSplitAndCrop_x29cc8:
    /*00029cc8*/ LDR         R3, [R4, #824]              @ 0x338 
    /*00029ccc*/ CMP         R3, #1 
    /*00029cd0*/ LDREQ       R3, [FP, #732]              @ 0x2dc 
    /*00029cd4*/ BNE         VPSSSplitAndCrop_x28ec0
    /*00029cd8*/ B           VPSSSplitAndCrop_x28ec4
    VPSSSplitAndCrop_x29cdc:
    /*00029cdc*/ LDR         R3, [R4, #792]              @ 0x318 
    /*00029ce0*/ CMP         R3, #1 
    /*00029ce4*/ LDREQ       R3, [FP, #720]              @ 0x2d0 
    /*00029ce8*/ BNE         VPSSSplitAndCrop_x28e78
    /*00029cec*/ B           VPSSSplitAndCrop_x28e7c
    VPSSSplitAndCrop_x29cf0:
    /*00029cf0*/ LDR         R9, [FP, #4] 
    /*00029cf4*/ LDR         R3, [SP, #20] 
    /*00029cf8*/ SUB         R3, R9, R3 
    /*00029cfc*/ STR         R3, [SP, #116]              @ 0x74 
    /*00029d00*/ B           VPSSSplitAndCrop_x297e8
    VPSSSplitAndCrop_x29d04:
    /*00029d04*/ STR         R8, [R4, #40]               @ 0x28 
    /*00029d08*/ LDR         R3, [FP, #40]               @ 0x28 
    /*00029d0c*/ CMP         R3, #0 
    /*00029d10*/ BEQ         VPSSSplitAndCrop_x29e74
    /*00029d14*/ LDR         R2, [SP, #8] 
    /*00029d18*/ LDR         R0, [SP, #304]              @ 0x130 
    /*00029d1c*/ LDR         R3, [FP, #44]               @ 0x2c 
    /*00029d20*/ SUB         R7, R2, R0 
    /*00029d24*/ AND         R2, R7, #3 
    /*00029d28*/ AND         R3, R3, #3 
    /*00029d2c*/ SUB         R2, R2, #2 
    /*00029d30*/ SUB         R3, R3, #2 
    /*00029d34*/ CLZ         R2, R2 
    /*00029d38*/ CLZ         R3, R3 
    /*00029d3c*/ LSR         R2, R2, #5 
    /*00029d40*/ LSR         R3, R3, #5 
    /*00029d44*/ CMP         R3, R2 
    /*00029d48*/ MOVEQ       IP, #1 
    /*00029d4c*/ SUBNE       R7, R7, #2 
    /*00029d50*/ MOVNE       IP, #1 
    /*00029d54*/ B           VPSSSplitAndCrop_x2999c
    VPSSSplitAndCrop_x29d58:
    /*00029d58*/ CMP         R3, #0 
    /*00029d5c*/ BEQ         VPSSSplitAndCrop_x291f4
    VPSSSplitAndCrop_x29d60:
    /*00029d60*/ LDR         R1, [SP, #88]               @ 0x58 
    /*00029d64*/ MOV         R3, #0 
    /*00029d68*/ LDR         R2, [R4, #796]              @ 0x31c 
    /*00029d6c*/ ADD         R2, R1, R2 
    /*00029d70*/ STR         R2, [SP, #88]               @ 0x58 
    /*00029d74*/ B           VPSSSplitAndCrop_x291f4
    VPSSSplitAndCrop_x29d78:
    /*00029d78*/ MOVW        R2, #1106                   @ 0x452 
    /*00029d7c*/ LDR         R3, [SP, #8] 
    /*00029d80*/ LDR         R1, [SP, #12] 
    /*00029d84*/ MOV         R0, R9 
    /*00029d88*/ BL          0x0000000000029D88          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00029d8c*/ LDR         R2, [R4, #740]              @ 0x2e4 
    /*00029d90*/ B           VPSSSplitAndCrop_x292cc
    VPSSSplitAndCrop_x29d94:
    /*00029d94*/ LDR         R3, [FP, #40]               @ 0x28 
    /*00029d98*/ CMP         R3, #0 
    /*00029d9c*/ MOVEQ       R7, R3 
    /*00029da0*/ BEQ         VPSSSplitAndCrop_x28ac0
    /*00029da4*/ LDR         R3, [FP, #44]               @ 0x2c 
    /*00029da8*/ AND         R3, R3, #3 
    /*00029dac*/ CMP         R3, #2 
    /*00029db0*/ MOVEQ       R7, #2 
    /*00029db4*/ B           VPSSSplitAndCrop_x28ac0
    VPSSSplitAndCrop_x29db8:
    /*00029db8*/ LDR         R1, [SP, #4] 
    /*00029dbc*/ LDR         R0, [SP, #96]               @ 0x60 
    /*00029dc0*/ BL          0x0000000000029DC0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00029dc4*/ ADD         R0, R0, #255                @ 0xff 
    /*00029dc8*/ BIC         R7, R0, #255                @ 0xff 
    /*00029dcc*/ B           VPSSSplitAndCrop_x28534
    VPSSSplitAndCrop_x29dd0:
    /*00029dd0*/ STR         R3, [R4, #780]              @ 0x30c 
    /*00029dd4*/ LDR         R3, [FP, #820]              @ 0x334 
    /*00029dd8*/ CMP         R3, #1 
    /*00029ddc*/ BEQ         VPSSSplitAndCrop_x29df0
    /*00029de0*/ LDR         R3, [FP, #852]              @ 0x354 
    /*00029de4*/ CMP         R3, #1 
    /*00029de8*/ BNE         VPSSSplitAndCrop_x28f18
    /*00029dec*/ B           VPSSSplitAndCrop_x29cc0
    VPSSSplitAndCrop_x29df0:
    /*00029df0*/ STR         R8, [R4, #820]              @ 0x334 
    /*00029df4*/ LDR         R3, [FP, #852]              @ 0x354 
    /*00029df8*/ CMP         R3, #1 
    /*00029dfc*/ BNE         VPSSSplitAndCrop_x28f18
    /*00029e00*/ B           VPSSSplitAndCrop_x29cc0
    VPSSSplitAndCrop_x29e04:
    /*00029e04*/ LDR         R1, [SP, #116]              @ 0x74 
    /*00029e08*/ B           VPSSSplitAndCrop_x29958
    VPSSSplitAndCrop_x29e0c:
    /*00029e0c*/ LDR         R3, [SP, #120]              @ 0x78 
    /*00029e10*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*00029e14*/ SUB         R0, R3, R2 
    /*00029e18*/ B           VPSSSplitAndCrop_x298c0
    VPSSSplitAndCrop_x29e1c:
    /*00029e1c*/ MOV         R3, #1 
    /*00029e20*/ STR         R3, [SP, #76]               @ 0x4c 
    /*00029e24*/ B           VPSSSplitAndCrop_x28e20
    VPSSSplitAndCrop_x29e28:
    /*00029e28*/ LDR         R3, [FP, #40]               @ 0x28 
    /*00029e2c*/ CMP         R3, #0 
    /*00029e30*/ BEQ         VPSSSplitAndCrop_x2a040
    /*00029e34*/ LDR         R2, [FP, #44]               @ 0x2c 
    /*00029e38*/ LDR         R3, [FP, #48]               @ 0x30 
    /*00029e3c*/ ADD         R3, R3, R2 
    /*00029e40*/ SUB         R2, R3, R7 
    /*00029e44*/ CMP         R2, #2048                   @ 0x800 
    /*00029e48*/ BCS         VPSSSplitAndCrop_x2a050
    VPSSSplitAndCrop_x29e4c:
    /*00029e4c*/ SUB         R3, R3, R7 
    /*00029e50*/ B           VPSSSplitAndCrop_x299c8
    VPSSSplitAndCrop_x29e54:
    /*00029e54*/ MOV         R2, #1 
    /*00029e58*/ STR         R2, [SP, #72]               @ 0x48 
    /*00029e5c*/ B           VPSSSplitAndCrop_x28d44
    VPSSSplitAndCrop_x29e60:
    /*00029e60*/ LDR         R3, [FP, #48]               @ 0x30 
    /*00029e64*/ STR         R3, [SP, #120]              @ 0x78 
    /*00029e68*/ STR         R3, [SP, #96]               @ 0x60 
    VPSSSplitAndCrop_x29e6c:
    /*00029e6c*/ MOV         R6, #1 
    /*00029e70*/ B           VPSSSplitAndCrop_x284dc
    VPSSSplitAndCrop_x29e74:
    /*00029e74*/ LDR         R3, [SP, #8] 
    /*00029e78*/ MOV         IP, #1 
    /*00029e7c*/ LDR         R2, [SP, #304]              @ 0x130 
    /*00029e80*/ SUB         R7, R3, R2 
    /*00029e84*/ BIC         R7, R7, #3 
    /*00029e88*/ B           VPSSSplitAndCrop_x2999c
    VPSSSplitAndCrop_x29e8c:
    /*00029e8c*/ LDR         R2, [SP, #128]              @ 0x80 
    /*00029e90*/ CMP         R5, #0 
    /*00029e94*/ LDR         R3, [SP, #112]              @ 0x70 
    /*00029e98*/ LDR         R1, [SP, #16] 
    /*00029e9c*/ STR         R7, [R4, #592]              @ 0x250 
    /*00029ea0*/ MOVNE       R2, R3 
    /*00029ea4*/ CMP         R5, SL 
    /*00029ea8*/ STR         R2, [R1] 
    /*00029eac*/ ADD         R3, R9, R2 
    /*00029eb0*/ LDR         R1, [SP, #24] 
    /*00029eb4*/ STR         R3, [SP, #80]               @ 0x50 
    /*00029eb8*/ STR         R2, [R1] 
    /*00029ebc*/ LDR         R1, [SP, #12] 
    /*00029ec0*/ STR         R3, [R1] 
    /*00029ec4*/ BEQ         VPSSSplitAndCrop_x2a280
    /*00029ec8*/ STR         R2, [SP, #124]              @ 0x7c 
    /*00029ecc*/ LDR         R2, [SP, #304]              @ 0x130 
    /*00029ed0*/ LDR         R6, [SP, #64]               @ 0x40 
    /*00029ed4*/ SUB         R0, R2, #1 
    /*00029ed8*/ LDR         R2, [SP, #8] 
    /*00029edc*/ ADD         R0, R0, R6 
    /*00029ee0*/ ADD         R0, R0, R2 
    /*00029ee4*/ LDR         R2, [SP, #20] 
    /*00029ee8*/ MOV         R1, R6 
    /*00029eec*/ SUB         R0, R0, R2 
    /*00029ef0*/ ADD         R0, R0, R3 
    /*00029ef4*/ BL          0x0000000000029EF4          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00029ef8*/ LDR         R2, [SP, #124]              @ 0x7c 
    /*00029efc*/ MUL         R0, R6, R0 
    VPSSSplitAndCrop_x29f00:
    /*00029f00*/ LDR         IP, [SP, #20] 
    /*00029f04*/ LDR         R3, [SP, #8] 
    /*00029f08*/ LDR         R1, [SP, #304]              @ 0x130 
    /*00029f0c*/ SUB         R3, R3, IP 
    /*00029f10*/ STR         R0, [R4, #4] 
    /*00029f14*/ CMP         R1, R3 
    /*00029f18*/ STR         IP, [R4, #24] 
    /*00029f1c*/ BCC         VPSSSplitAndCrop_x2a1cc
    /*00029f20*/ LDR         R1, [FP, #40]               @ 0x28 
    /*00029f24*/ ADDS        R1, R1, #0 
    /*00029f28*/ MOVNE       R1, #1 
    /*00029f2c*/ CMP         R5, SL 
    /*00029f30*/ STR         R1, [R4, #40]               @ 0x28 
    /*00029f34*/ BEQ         VPSSSplitAndCrop_x2a308
    VPSSSplitAndCrop_x29f38:
    /*00029f38*/ LDR         R3, [SP, #20] 
    /*00029f3c*/ ADD         R7, R7, R3 
    VPSSSplitAndCrop_x29f40:
    /*00029f40*/ CMP         R5, #0 
    /*00029f44*/ LDRNE       R3, [SP, #20] 
    /*00029f48*/ MOVEQ       R6, R9 
    /*00029f4c*/ SUBNE       R6, R7, R3 
    /*00029f50*/ CMP         R5, SL 
    /*00029f54*/ STR         R6, [R4, #44]               @ 0x2c 
    /*00029f58*/ BEQ         VPSSSplitAndCrop_x2a228
    /*00029f5c*/ SUB         R6, R0, R6 
    /*00029f60*/ BIC         R3, R6, #3 
    /*00029f64*/ CMP         R3, #2048                   @ 0x800 
    /*00029f68*/ MOVCS       R3, #2048                   @ 0x800 
    VPSSSplitAndCrop_x29f6c:
    /*00029f6c*/ CMP         R1, #0 
    /*00029f70*/ STR         R3, [R4, #48]               @ 0x30 
    /*00029f74*/ STR         R8, [R4, #664]              @ 0x298 
    /*00029f78*/ MOVNE       R0, R3 
    /*00029f7c*/ LDR         R3, [SP, #8] 
    /*00029f80*/ STR         R0, [R4, #604]              @ 0x25c 
    /*00029f84*/ SUB         R3, R3, R7 
    /*00029f88*/ STR         R0, [R4, #608]              @ 0x260 
    /*00029f8c*/ STR         R2, [R4, #672]              @ 0x2a0 
    /*00029f90*/ STR         R3, [R4, #668]              @ 0x29c 
    /*00029f94*/ B           VPSSSplitAndCrop_x28b28
    VPSSSplitAndCrop_x29f98:
    /*00029f98*/ LDR         R4, [FP, #748]              @ 0x2ec 
    /*00029f9c*/ MOV         R3, #64                     @ 0x40 
    /*00029fa0*/ STR         R3, [SP, #64]               @ 0x40 
    /*00029fa4*/ MOV         R8, R4 
    /*00029fa8*/ B           VPSSSplitAndCrop_x284a4
    VPSSSplitAndCrop_x29fac:
    /*00029fac*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b78] 
    /*00029fb0*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x1648] 
    /*00029fb4*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b78] 
    /*00029fb8*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x1648] 
    /*00029fbc*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b88] 
    /*00029fc0*/ MOV         R2, #356                    @ 0x164 
    /*00029fc4*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b88] 
    /*00029fc8*/ BL          0x0000000000029FC8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00029fcc*/ LDR         R3, [FP, #20] 
    /*00029fd0*/ CMP         R3, #1 
    /*00029fd4*/ BNE         VPSSSplitAndCrop_x28488
    /*00029fd8*/ B           VPSSSplitAndCrop_x29f98
    VPSSSplitAndCrop_x29fdc:
    /*00029fdc*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9bd8] 
    /*00029fe0*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x1648] 
    /*00029fe4*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9bd8] 
    /*00029fe8*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x1648] 
    /*00029fec*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b88] 
    /*00029ff0*/ MOVW        R2, #361                    @ 0x169 
    /*00029ff4*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b88] 
    /*00029ff8*/ BL          0x0000000000029FF8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00029ffc*/ LDR         R3, [FP, #20] 
    /*0002a000*/ CMP         R3, #1 
    /*0002a004*/ BNE         VPSSSplitAndCrop_x28488
    /*0002a008*/ B           VPSSSplitAndCrop_x29f98
    VPSSSplitAndCrop_x2a00c:
    /*0002a00c*/ MOV         R3, #256                    @ 0x100 
    /*0002a010*/ MOV         R9, #3 
    /*0002a014*/ STR         R3, [SP, #64]               @ 0x40 
    /*0002a018*/ MOV         R3, #4 
    /*0002a01c*/ STR         R3, [SP, #92]               @ 0x5c 
    /*0002a020*/ B           VPSSSplitAndCrop_x284b8
    VPSSSplitAndCrop_x2a024:
    /*0002a024*/ LDR         R9, [FP, #44]               @ 0x2c 
    /*0002a028*/ LDR         R3, [FP, #48]               @ 0x30 
    /*0002a02c*/ ADD         R9, R9, R3 
    VPSSSplitAndCrop_x2a030:
    /*0002a030*/ LDR         R3, [SP, #20] 
    /*0002a034*/ SUB         R3, R9, R3 
    /*0002a038*/ STR         R3, [SP, #116]              @ 0x74 
    /*0002a03c*/ B           VPSSSplitAndCrop_x297e8
    VPSSSplitAndCrop_x2a040:
    /*0002a040*/ LDR         R3, [FP, #4] 
    /*0002a044*/ SUB         R2, R3, R7 
    /*0002a048*/ CMP         R2, #2048                   @ 0x800 
    /*0002a04c*/ BCC         VPSSSplitAndCrop_x29e4c
    VPSSSplitAndCrop_x2a050:
    /*0002a050*/ MOV         R3, #2048                   @ 0x800 
    /*0002a054*/ B           VPSSSplitAndCrop_x299c8
    VPSSSplitAndCrop_x2a058:
    /*0002a058*/ LDRB        LR, [FP, #708]              @ 0x2c4 
    /*0002a05c*/ MOVW        R0, #65535                  @ 0xffff 
    /*0002a060*/ LDR         IP, [FP, #612]              @ 0x264 
    /*0002a064*/ MOVT        R0, #15 
    /*0002a068*/ MOV         R1, #0 
    /*0002a06c*/ MOV         R2, #1048576                @ 0x100000 
    /*0002a070*/ MOV         R3, #0 
    /*0002a074*/ UMLAL       R0, R1, IP, LR 
    /*0002a078*/ BL          0x000000000002A078          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*0002a07c*/ ADD         R0, R0, #1 
    /*0002a080*/ BIC         R4, R0, #1 
    /*0002a084*/ B           VPSSSplitAndCrop_x2859c
    VPSSSplitAndCrop_x2a088:
    /*0002a088*/ MOV         R3, #0 
    /*0002a08c*/ LDR         R2, [FP, #612]              @ 0x264 
    /*0002a090*/ LSL         R0, R7, #20 
    /*0002a094*/ LSR         R1, R7, #12 
    /*0002a098*/ BL          0x000000000002A098          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*0002a09c*/ LDR         R5, [SP, #92]               @ 0x5c 
    /*0002a0a0*/ MOV         R1, R5 
    /*0002a0a4*/ BL          0x000000000002A0A4          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0002a0a8*/ LDR         R3, [FP, #592]              @ 0x250 
    /*0002a0ac*/ CMP         R3, #0 
    /*0002a0b0*/ MUL         R3, R5, R0 
    /*0002a0b4*/ MOV         LR, R3 
    /*0002a0b8*/ STR         R3, [SP, #112]              @ 0x70 
    /*0002a0bc*/ BEQ         VPSSSplitAndCrop_x2a32c
    /*0002a0c0*/ LDR         IP, [FP, #612]              @ 0x264 
    /*0002a0c4*/ MOVW        R0, #65535                  @ 0xffff 
    /*0002a0c8*/ MOVT        R0, #15 
    /*0002a0cc*/ MOV         R1, #0 
    /*0002a0d0*/ MOV         R2, #1048576                @ 0x100000 
    /*0002a0d4*/ MOV         R3, #0 
    /*0002a0d8*/ UMLAL       R0, R1, IP, LR 
    /*0002a0dc*/ BL          0x000000000002A0DC          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*0002a0e0*/ LDR         R2, [SP, #8] 
    /*0002a0e4*/ LDR         SL, [FP, #40]               @ 0x28 
    /*0002a0e8*/ LDR         R9, [FP, #4] 
    /*0002a0ec*/ ADD         R0, R0, #1 
    /*0002a0f0*/ BIC         R3, R0, #1 
    /*0002a0f4*/ STR         R3, [SP, #84]               @ 0x54 
    /*0002a0f8*/ MUL         R5, R3, R2 
    /*0002a0fc*/ B           VPSSSplitAndCrop_x28628
    VPSSSplitAndCrop_x2a100:
    /*0002a100*/ LDR         R3, [FP, #764]              @ 0x2fc 
    /*0002a104*/ CMP         R3, #0 
    /*0002a108*/ BEQ         VPSSSplitAndCrop_x28628
    /*0002a10c*/ LDR         R0, [FP, #748]              @ 0x2ec 
    /*0002a110*/ LDR         R1, [SP, #108]              @ 0x6c 
    /*0002a114*/ ADDS        R3, R0, #0 
    /*0002a118*/ MOVNE       R3, #1 
    /*0002a11c*/ CMP         R1, #0 
    /*0002a120*/ MOVNE       R3, #0 
    /*0002a124*/ CMP         R3, #0 
    /*0002a128*/ BEQ         VPSSSplitAndCrop_x28628
    /*0002a12c*/ LDR         R3, [SP, #304]              @ 0x130 
    /*0002a130*/ ADD         R3, R2, R3 
    /*0002a134*/ CMP         R3, #2048                   @ 0x800 
    /*0002a138*/ BLS         VPSSSplitAndCrop_x28628
    /*0002a13c*/ B           VPSSSplitAndCrop_x29b0c
    VPSSSplitAndCrop_x2a140:
    /*0002a140*/ LDR         R7, [FP, #40]               @ 0x28 
    /*0002a144*/ CMP         R7, #0 
    /*0002a148*/ BEQ         VPSSSplitAndCrop_x29994
    /*0002a14c*/ LDR         R7, [FP, #44]               @ 0x2c 
    /*0002a150*/ AND         R7, R7, #3 
    /*0002a154*/ CMP         R7, #2 
    /*0002a158*/ MOVNE       R7, #0 
    /*0002a15c*/ B           VPSSSplitAndCrop_x29994
    VPSSSplitAndCrop_x2a160:
    /*0002a160*/ MOV         R3, #64                     @ 0x40 
    /*0002a164*/ MOV         R9, #3 
    /*0002a168*/ STR         R3, [SP, #64]               @ 0x40 
    /*0002a16c*/ MOV         R3, #4 
    /*0002a170*/ STR         R3, [SP, #92]               @ 0x5c 
    /*0002a174*/ B           VPSSSplitAndCrop_x284b8
    VPSSSplitAndCrop_x2a178:
    /*0002a178*/ STR         R8, [R4, #40]               @ 0x28 
    /*0002a17c*/ LDR         R3, [FP, #40]               @ 0x28 
    /*0002a180*/ CMP         R3, #0 
    /*0002a184*/ BEQ         VPSSSplitAndCrop_x2a2a0
    /*0002a188*/ LDR         R2, [SP, #8] 
    /*0002a18c*/ LDR         R0, [SP, #304]              @ 0x130 
    /*0002a190*/ LDR         R3, [FP, #44]               @ 0x2c 
    /*0002a194*/ SUB         R7, R2, R0 
    /*0002a198*/ AND         R2, R7, #3 
    /*0002a19c*/ AND         R3, R3, #3 
    /*0002a1a0*/ SUB         R2, R2, #2 
    /*0002a1a4*/ SUB         R3, R3, #2 
    /*0002a1a8*/ CLZ         R2, R2 
    /*0002a1ac*/ CLZ         R3, R3 
    /*0002a1b0*/ LSR         R2, R2, #5 
    /*0002a1b4*/ LSR         R3, R3, #5 
    /*0002a1b8*/ CMP         R3, R2 
    /*0002a1bc*/ MOVEQ       R2, #1 
    /*0002a1c0*/ SUBNE       R7, R7, #2 
    /*0002a1c4*/ MOVNE       R2, #1 
    /*0002a1c8*/ B           VPSSSplitAndCrop_x288dc
    VPSSSplitAndCrop_x2a1cc:
    /*0002a1cc*/ STR         R8, [R4, #40]               @ 0x28 
    /*0002a1d0*/ LDR         R3, [FP, #40]               @ 0x28 
    /*0002a1d4*/ CMP         R3, #0 
    /*0002a1d8*/ BEQ         VPSSSplitAndCrop_x2a288
    /*0002a1dc*/ LDR         R1, [SP, #8] 
    /*0002a1e0*/ LDR         IP, [SP, #304]              @ 0x130 
    /*0002a1e4*/ LDR         R3, [FP, #44]               @ 0x2c 
    /*0002a1e8*/ SUB         R7, R1, IP 
    /*0002a1ec*/ AND         R1, R7, #3 
    /*0002a1f0*/ AND         R3, R3, #3 
    /*0002a1f4*/ SUB         R1, R1, #2 
    /*0002a1f8*/ SUB         R3, R3, #2 
    /*0002a1fc*/ CLZ         R1, R1 
    /*0002a200*/ CLZ         R3, R3 
    /*0002a204*/ LSR         R1, R1, #5 
    /*0002a208*/ LSR         R3, R3, #5 
    /*0002a20c*/ CMP         R3, R1 
    /*0002a210*/ MOVEQ       R1, #1 
    /*0002a214*/ SUBNE       R7, R7, #2 
    /*0002a218*/ MOVNE       R1, #1 
    /*0002a21c*/ B           VPSSSplitAndCrop_x29f40
    VPSSSplitAndCrop_x2a220:
    /*0002a220*/ LDR         R1, [SP, #116]              @ 0x74 
    /*0002a224*/ B           VPSSSplitAndCrop_x28898
    VPSSSplitAndCrop_x2a228:
    /*0002a228*/ LDR         R3, [FP, #40]               @ 0x28 
    /*0002a22c*/ CMP         R3, #0 
    /*0002a230*/ BEQ         VPSSSplitAndCrop_x2a2d0
    /*0002a234*/ LDR         IP, [FP, #44]               @ 0x2c 
    /*0002a238*/ LDR         R3, [FP, #48]               @ 0x30 
    /*0002a23c*/ ADD         R3, R3, IP 
    /*0002a240*/ SUB         IP, R3, R7 
    /*0002a244*/ CMP         IP, #2048                   @ 0x800 
    /*0002a248*/ BCS         VPSSSplitAndCrop_x2a2e0
    VPSSSplitAndCrop_x2a24c:
    /*0002a24c*/ SUB         R3, R3, R7 
    /*0002a250*/ B           VPSSSplitAndCrop_x29f6c
    VPSSSplitAndCrop_x2a254:
    /*0002a254*/ LDR         R3, [FP, #40]               @ 0x28 
    /*0002a258*/ CMP         R3, #0 
    /*0002a25c*/ BEQ         VPSSSplitAndCrop_x2a2b8
    /*0002a260*/ LDR         R0, [FP, #44]               @ 0x2c 
    /*0002a264*/ LDR         R3, [FP, #48]               @ 0x30 
    /*0002a268*/ ADD         R3, R3, R0 
    /*0002a26c*/ SUB         R0, R3, R7 
    /*0002a270*/ CMP         R0, #2048                   @ 0x800 
    /*0002a274*/ BCS         VPSSSplitAndCrop_x2a2c8
    VPSSSplitAndCrop_x2a278:
    /*0002a278*/ SUB         R3, R3, R7 
    /*0002a27c*/ B           VPSSSplitAndCrop_x28908
    VPSSSplitAndCrop_x2a280:
    /*0002a280*/ LDR         R0, [SP, #116]              @ 0x74 
    /*0002a284*/ B           VPSSSplitAndCrop_x29f00
    VPSSSplitAndCrop_x2a288:
    /*0002a288*/ LDR         R1, [SP, #304]              @ 0x130 
    /*0002a28c*/ LDR         R3, [SP, #8] 
    /*0002a290*/ SUB         R7, R3, R1 
    /*0002a294*/ MOV         R1, #1 
    /*0002a298*/ BIC         R7, R7, #3 
    /*0002a29c*/ B           VPSSSplitAndCrop_x29f40
    VPSSSplitAndCrop_x2a2a0:
    /*0002a2a0*/ LDR         R2, [SP, #304]              @ 0x130 
    /*0002a2a4*/ LDR         R3, [SP, #8] 
    /*0002a2a8*/ SUB         R7, R3, R2 
    /*0002a2ac*/ MOV         R2, #1 
    /*0002a2b0*/ BIC         R7, R7, #3 
    /*0002a2b4*/ B           VPSSSplitAndCrop_x288dc
    VPSSSplitAndCrop_x2a2b8:
    /*0002a2b8*/ LDR         R3, [FP, #4] 
    /*0002a2bc*/ SUB         R0, R3, R7 
    /*0002a2c0*/ CMP         R0, #2048                   @ 0x800 
    /*0002a2c4*/ BCC         VPSSSplitAndCrop_x2a278
    VPSSSplitAndCrop_x2a2c8:
    /*0002a2c8*/ MOV         R3, #2048                   @ 0x800 
    /*0002a2cc*/ B           VPSSSplitAndCrop_x28908
    VPSSSplitAndCrop_x2a2d0:
    /*0002a2d0*/ LDR         R3, [FP, #4] 
    /*0002a2d4*/ SUB         IP, R3, R7 
    /*0002a2d8*/ CMP         IP, #2048                   @ 0x800 
    /*0002a2dc*/ BCC         VPSSSplitAndCrop_x2a24c
    VPSSSplitAndCrop_x2a2e0:
    /*0002a2e0*/ MOV         R3, #2048                   @ 0x800 
    /*0002a2e4*/ B           VPSSSplitAndCrop_x29f6c
    VPSSSplitAndCrop_x2a2e8:
    /*0002a2e8*/ LDR         R7, [FP, #40]               @ 0x28 
    /*0002a2ec*/ CMP         R7, #0 
    /*0002a2f0*/ BEQ         VPSSSplitAndCrop_x288d4
    /*0002a2f4*/ LDR         R7, [FP, #44]               @ 0x2c 
    /*0002a2f8*/ AND         R7, R7, #3 
    /*0002a2fc*/ CMP         R7, #2 
    /*0002a300*/ MOVNE       R7, #0 
    /*0002a304*/ B           VPSSSplitAndCrop_x288d4
    VPSSSplitAndCrop_x2a308:
    /*0002a308*/ LDR         R3, [FP, #40]               @ 0x28 
    /*0002a30c*/ CMP         R3, #0 
    /*0002a310*/ MOVEQ       R7, R3 
    /*0002a314*/ BEQ         VPSSSplitAndCrop_x29f38
    /*0002a318*/ LDR         R3, [FP, #44]               @ 0x2c 
    /*0002a31c*/ AND         R3, R3, #3 
    /*0002a320*/ CMP         R3, #2 
    /*0002a324*/ MOVEQ       R7, #2 
    /*0002a328*/ B           VPSSSplitAndCrop_x29f38
    VPSSSplitAndCrop_x2a32c:
    /*0002a32c*/ LDR         SL, [FP, #40]               @ 0x28 
    /*0002a330*/ LDR         R9, [FP, #4] 
    /*0002a334*/ B           VPSSSplitAndCrop_x29b30
    VPSSSplitAndCrop_x2a338:
    /*0002a338*/ LDR         R3, [SP, #132]              @ 0x84 
    /*0002a33c*/ LDR         R2, [SP, #16] 
    /*0002a340*/ ADD         R3, R9, R3 
    /*0002a344*/ STR         R3, [SP, #80]               @ 0x50 
    /*0002a348*/ LDR         R3, [SP, #128]              @ 0x80 
    /*0002a34c*/ STR         R3, [R2] 
    /*0002a350*/ LDR         R2, [SP, #24] 
    /*0002a354*/ STR         R3, [SP, #124]              @ 0x7c 
    /*0002a358*/ STR         R3, [R2] 
    /*0002a35c*/ B           VPSSSplitAndCrop_x28854
    VPSSSplitAndCrop_x2a360:
    /*0002a360*/ MOV         R3, R5 
    /*0002a364*/ MOV         R1, R5 
    /*0002a368*/ B           VPSSSplitAndCrop_x2909c
    VPSSSplitAndCrop_x2a36c:
    /*0002a36c*/ MOV         R7, R5 
    /*0002a370*/ B           VPSSSplitAndCrop_x29114
    /*0002a374*/ ANDEQ       R6, R0, R4, ROR #22 
FUNC_END VPSSSplitAndCrop


FUNC_BEGIN ySetRanges
    /*0002a378*/ CMP         R2, #254                    @ 0xfe 
    /*0002a37c*/ MOVLE       IP, R2 
    /*0002a380*/ MOVGT       IP, #255                    @ 0xff 
    /*0002a384*/ CMP         R1, #1 
    /*0002a388*/ STR         IP, [R0] 
    /*0002a38c*/ BXLE        LR 
    /*0002a390*/ CMP         R3, #32 
    /*0002a394*/ PUSH        {R4, LR} 
    /*0002a398*/ MOVLT       IP, R3 
    /*0002a39c*/ MOVGE       IP, #32 
    /*0002a3a0*/ MOVW        R4, #509                    @ 0x1fd 
    /*0002a3a4*/ BIC         IP, IP, IP, ASR #31 
    /*0002a3a8*/ MOVW        LR, #510                    @ 0x1fe 
    /*0002a3ac*/ MUL         IP, R2, IP 
    /*0002a3b0*/ ADD         IP, IP, #16 
    /*0002a3b4*/ ADD         R2, R2, IP, ASR #5 
    /*0002a3b8*/ CMP         R2, R4 
    /*0002a3bc*/ MOVLE       IP, R2 
    /*0002a3c0*/ MOVGT       IP, LR 
    /*0002a3c4*/ CMP         R1, #2 
    /*0002a3c8*/ STR         IP, [R0, #4] 
    /*0002a3cc*/ POPEQ       {R4, PC} 
    /*0002a3d0*/ SUB         IP, R3, #32 
    /*0002a3d4*/ CMP         IP, #32 
    /*0002a3d8*/ MOVGE       IP, #32 
    /*0002a3dc*/ BIC         IP, IP, IP, ASR #31 
    /*0002a3e0*/ MUL         IP, R2, IP 
    /*0002a3e4*/ ADD         IP, IP, #16 
    /*0002a3e8*/ ADD         R2, R2, IP, ASR #5 
    /*0002a3ec*/ CMP         R2, #1020                   @ 0x3fc 
    /*0002a3f0*/ MOVLT       IP, R2 
    /*0002a3f4*/ MOVGE       IP, #1020                   @ 0x3fc 
    /*0002a3f8*/ CMP         R1, #3 
    /*0002a3fc*/ STR         IP, [R0, #8] 
    /*0002a400*/ POPEQ       {R4, PC} 
    /*0002a404*/ SUB         IP, R3, #64                 @ 0x40 
    /*0002a408*/ MOVW        R4, #2039                   @ 0x7f7 
    /*0002a40c*/ CMP         IP, #32 
    /*0002a410*/ MOVW        LR, #2040                   @ 0x7f8 
    /*0002a414*/ MOVGE       IP, #32 
    /*0002a418*/ BIC         IP, IP, IP, ASR #31 
    /*0002a41c*/ MUL         IP, R2, IP 
    /*0002a420*/ ADD         IP, IP, #16 
    /*0002a424*/ ADD         R2, R2, IP, ASR #5 
    /*0002a428*/ CMP         R2, R4 
    /*0002a42c*/ MOVLE       IP, R2 
    /*0002a430*/ MOVGT       IP, LR 
    /*0002a434*/ CMP         R1, #4 
    /*0002a438*/ STR         IP, [R0, #12] 
    /*0002a43c*/ POPEQ       {R4, PC} 
    /*0002a440*/ SUB         IP, R3, #96                 @ 0x60 
    /*0002a444*/ CMP         IP, #32 
    /*0002a448*/ MOVGE       IP, #32 
    /*0002a44c*/ BIC         IP, IP, IP, ASR #31 
    /*0002a450*/ MUL         IP, R2, IP 
    /*0002a454*/ ADD         IP, IP, #16 
    /*0002a458*/ ADD         R2, R2, IP, ASR #5 
    /*0002a45c*/ CMP         R2, #4080                   @ 0xff0 
    /*0002a460*/ MOVLT       IP, R2 
    /*0002a464*/ MOVGE       IP, #4080                   @ 0xff0 
    /*0002a468*/ CMP         R1, #5 
    /*0002a46c*/ STR         IP, [R0, #16] 
    /*0002a470*/ POPEQ       {R4, PC} 
    /*0002a474*/ SUB         IP, R3, #128                @ 0x80 
    /*0002a478*/ MOVW        R4, #8159                   @ 0x1fdf 
    /*0002a47c*/ CMP         IP, #32 
    /*0002a480*/ MOVW        LR, #8160                   @ 0x1fe0 
    /*0002a484*/ MOVGE       IP, #32 
    /*0002a488*/ BIC         IP, IP, IP, ASR #31 
    /*0002a48c*/ MUL         IP, R2, IP 
    /*0002a490*/ ADD         IP, IP, #16 
    /*0002a494*/ ADD         R2, R2, IP, ASR #5 
    /*0002a498*/ CMP         R2, R4 
    /*0002a49c*/ MOVLE       IP, R2 
    /*0002a4a0*/ MOVGT       IP, LR 
    /*0002a4a4*/ CMP         R1, #6 
    /*0002a4a8*/ STR         IP, [R0, #20] 
    /*0002a4ac*/ POPEQ       {R4, PC} 
    /*0002a4b0*/ SUB         IP, R3, #160                @ 0xa0 
    /*0002a4b4*/ CMP         IP, #32 
    /*0002a4b8*/ MOVGE       IP, #32 
    /*0002a4bc*/ BIC         IP, IP, IP, ASR #31 
    /*0002a4c0*/ MUL         IP, R2, IP 
    /*0002a4c4*/ ADD         IP, IP, #16 
    /*0002a4c8*/ ADD         R2, R2, IP, ASR #5 
    /*0002a4cc*/ CMP         R2, #16320                  @ 0x3fc0 
    /*0002a4d0*/ MOVLT       IP, R2 
    /*0002a4d4*/ MOVGE       IP, #16320                  @ 0x3fc0 
    /*0002a4d8*/ CMP         R1, #7 
    /*0002a4dc*/ STR         IP, [R0, #24] 
    /*0002a4e0*/ POPEQ       {R4, PC} 
    /*0002a4e4*/ SUB         IP, R3, #192                @ 0xc0 
    /*0002a4e8*/ MOVW        R4, #32639                  @ 0x7f7f 
    /*0002a4ec*/ CMP         IP, #32 
    /*0002a4f0*/ MOVW        LR, #32640                  @ 0x7f80 
    /*0002a4f4*/ MOVGE       IP, #32 
    /*0002a4f8*/ BIC         IP, IP, IP, ASR #31 
    /*0002a4fc*/ MUL         IP, R2, IP 
    /*0002a500*/ ADD         IP, IP, #16 
    /*0002a504*/ ADD         R2, R2, IP, ASR #5 
    /*0002a508*/ CMP         R2, R4 
    /*0002a50c*/ MOVLE       IP, R2 
    /*0002a510*/ MOVGT       IP, LR 
    /*0002a514*/ CMP         R1, #8 
    /*0002a518*/ STR         IP, [R0, #28] 
    /*0002a51c*/ POPEQ       {R4, PC} 
    /*0002a520*/ SUB         R3, R3, #224                @ 0xe0 
    /*0002a524*/ CMP         R3, #32 
    /*0002a528*/ MOVGE       R3, #32 
    /*0002a52c*/ BIC         R3, R3, R3, ASR #31 
    /*0002a530*/ MUL         R3, R2, R3 
    /*0002a534*/ ADD         R3, R3, #16 
    /*0002a538*/ ADD         R2, R2, R3, ASR #5 
    /*0002a53c*/ CMP         R2, #65280                  @ 0xff00 
    /*0002a540*/ MOVGE       R2, #65280                  @ 0xff00 
    /*0002a544*/ STR         R2, [R0, #32] 
    /*0002a548*/ POP         {R4, PC} 
FUNC_END ySetRanges


FUNC_BEGIN SetSFiRanges
    /*0002a54c*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002a550*/ MOV         R4, R3 
    /*0002a554*/ LDR         R5, [SP, #40]               @ 0x28 
    /*0002a558*/ MOV         R8, R0 
    /*0002a55c*/ MOV         R6, R1 
    /*0002a560*/ MOV         R7, R2 
    /*0002a564*/ LDRB        R3, [R5, #10] 
    /*0002a568*/ LDRB        R0, [R5, #8] 
    /*0002a56c*/ CMP         R3, #127                    @ 0x7f 
    /*0002a570*/ BGT         SetSFiRanges_x2a6c0
    /*0002a574*/ SMULBB      R3, R0, R3 
    /*0002a578*/ LDRB        R2, [R5, #13] 
    /*0002a57c*/ LSL         LR, R0, #2 
    /*0002a580*/ MOV         R1, R0 
    /*0002a584*/ CMP         R2, #127                    @ 0x7f 
    /*0002a588*/ ADD         R0, R3, #64                 @ 0x40 
    /*0002a58c*/ LDRB        R3, [R5, #11] 
    /*0002a590*/ ASR         R0, R0, #7 
    /*0002a594*/ BGT         SetSFiRanges_x2a6f0
    SetSFiRanges_x2a598:
    /*0002a598*/ SMULBB      R2, R3, R2 
    /*0002a59c*/ LSL         SL, R3, #3 
    /*0002a5a0*/ MOV         IP, R3 
    /*0002a5a4*/ ADD         R3, R2, #64                 @ 0x40 
    /*0002a5a8*/ ASR         R3, R3, #7 
    SetSFiRanges_x2a5ac:
    /*0002a5ac*/ STR         LR, [R8] 
    /*0002a5b0*/ STR         R1, [R6] 
    /*0002a5b4*/ LDRB        R2, [R5, #16] 
    /*0002a5b8*/ LDRB        R9, [R5, #14] 
    /*0002a5bc*/ CMP         R2, #127                    @ 0x7f 
    /*0002a5c0*/ BGT         SetSFiRanges_x2a714
    /*0002a5c4*/ SMULBB      R1, R9, R2 
    /*0002a5c8*/ MOV         R2, R9 
    /*0002a5cc*/ ADD         R9, R1, #64                 @ 0x40 
    /*0002a5d0*/ ASR         R9, R9, #7 
    SetSFiRanges_x2a5d4:
    /*0002a5d4*/ LSL         R1, R0, #2 
    /*0002a5d8*/ STR         R1, [R7] 
    /*0002a5dc*/ STR         R0, [R4] 
    /*0002a5e0*/ MOV         R1, #5 
    /*0002a5e4*/ LDRB        R0, [R5, #12] 
    /*0002a5e8*/ LSL         LR, R3, #3 
    /*0002a5ec*/ STR         IP, [R6, #20] 
    /*0002a5f0*/ CMP         R0, #32 
    /*0002a5f4*/ MOVLT       FP, R0 
    /*0002a5f8*/ MOVGE       FP, #32 
    /*0002a5fc*/ MUL         FP, IP, FP 
    /*0002a600*/ ADD         R0, R6, #40                 @ 0x28 
    /*0002a604*/ ADD         FP, FP, #16 
    /*0002a608*/ ADD         IP, IP, FP, ASR R1 
    /*0002a60c*/ STR         IP, [R6, #24] 
    /*0002a610*/ STR         SL, [R8, #20] 
    /*0002a614*/ LDR         IP, [R6, #24] 
    /*0002a618*/ LSL         IP, IP, #3 
    /*0002a61c*/ STR         IP, [R8, #24] 
    /*0002a620*/ LDRB        IP, [R5, #12] 
    /*0002a624*/ STR         R3, [R4, #20] 
    /*0002a628*/ CMP         IP, #32 
    /*0002a62c*/ MOVGE       IP, #32 
    /*0002a630*/ MUL         IP, R3, IP 
    /*0002a634*/ ADD         IP, IP, #16 
    /*0002a638*/ ADD         R3, R3, IP, ASR R1 
    /*0002a63c*/ STR         R3, [R4, #24] 
    /*0002a640*/ STR         LR, [R7, #20] 
    /*0002a644*/ LDR         R3, [R4, #24] 
    /*0002a648*/ LSL         R3, R3, #3 
    /*0002a64c*/ STR         R3, [R7, #24] 
    /*0002a650*/ LDRB        R3, [R5, #15] 
    /*0002a654*/ BL          0x000000000002A378 
    /*0002a658*/ LDR         R3, [R6, #40]               @ 0x28 
    /*0002a65c*/ MOV         R2, R9 
    /*0002a660*/ MOV         R1, #5 
    /*0002a664*/ ADD         R0, R4, #40                 @ 0x28 
    /*0002a668*/ STR         R3, [R8, #40]               @ 0x28 
    /*0002a66c*/ LDR         R3, [R6, #44]               @ 0x2c 
    /*0002a670*/ STR         R3, [R8, #44]               @ 0x2c 
    /*0002a674*/ LDR         R3, [R6, #48]               @ 0x30 
    /*0002a678*/ STR         R3, [R8, #48]               @ 0x30 
    /*0002a67c*/ LDR         R3, [R6, #52]               @ 0x34 
    /*0002a680*/ STR         R3, [R8, #52]               @ 0x34 
    /*0002a684*/ LDR         R3, [R6, #56]               @ 0x38 
    /*0002a688*/ STR         R3, [R8, #56]               @ 0x38 
    /*0002a68c*/ LDRB        R3, [R5, #15] 
    /*0002a690*/ BL          0x000000000002A378 
    /*0002a694*/ LDR         R3, [R4, #40]               @ 0x28 
    /*0002a698*/ STR         R3, [R7, #40]               @ 0x28 
    /*0002a69c*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*0002a6a0*/ STR         R3, [R7, #44]               @ 0x2c 
    /*0002a6a4*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0002a6a8*/ STR         R3, [R7, #48]               @ 0x30 
    /*0002a6ac*/ LDR         R3, [R4, #52]               @ 0x34 
    /*0002a6b0*/ STR         R3, [R7, #52]               @ 0x34 
    /*0002a6b4*/ LDR         R3, [R4, #56]               @ 0x38 
    /*0002a6b8*/ STR         R3, [R7, #56]               @ 0x38 
    /*0002a6bc*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    SetSFiRanges_x2a6c0:
    /*0002a6c0*/ CMP         R3, #255                    @ 0xff 
    /*0002a6c4*/ LDRB        R2, [R5, #13] 
    /*0002a6c8*/ RSBNE       R1, R3, #256                @ 0x100 
    /*0002a6cc*/ LDRB        R3, [R5, #11] 
    /*0002a6d0*/ MOVEQ       LR, #0 
    /*0002a6d4*/ MULNE       R1, R0, R1 
    /*0002a6d8*/ MOVEQ       R1, LR 
    /*0002a6dc*/ ADDNE       R1, R1, #64                 @ 0x40 
    /*0002a6e0*/ ASRNE       R1, R1, #7 
    /*0002a6e4*/ LSLNE       LR, R1, #2 
    /*0002a6e8*/ CMP         R2, #127                    @ 0x7f 
    /*0002a6ec*/ BLE         SetSFiRanges_x2a598
    SetSFiRanges_x2a6f0:
    /*0002a6f0*/ CMP         R2, #255                    @ 0xff 
    /*0002a6f4*/ RSBNE       IP, R2, #256                @ 0x100 
    /*0002a6f8*/ MOVEQ       SL, #0 
    /*0002a6fc*/ MULNE       IP, R3, IP 
    /*0002a700*/ MOVEQ       IP, SL 
    /*0002a704*/ ADDNE       IP, IP, #64                 @ 0x40 
    /*0002a708*/ ASRNE       IP, IP, #7 
    /*0002a70c*/ LSLNE       SL, IP, #3 
    /*0002a710*/ B           SetSFiRanges_x2a5ac
    SetSFiRanges_x2a714:
    /*0002a714*/ CMP         R2, #255                    @ 0xff 
    /*0002a718*/ RSBNE       R2, R2, #256                @ 0x100 
    /*0002a71c*/ MOVEQ       R2, #0 
    /*0002a720*/ MULNE       R2, R9, R2 
    /*0002a724*/ ADDNE       R2, R2, #64                 @ 0x40 
    /*0002a728*/ ASRNE       R2, R2, #7 
    /*0002a72c*/ B           SetSFiRanges_x2a5d4
FUNC_END SetSFiRanges


FUNC_BEGIN GetSADiThr
    /*0002a730*/ CMP         R1, #0 
    /*0002a734*/ CMPNE       R3, #0 
    /*0002a738*/ BEQ         GetSADiThr_x2a8a4
    /*0002a73c*/ PUSH        {R4, R5, R6, LR} 
    /*0002a740*/ LDRB        IP, [R3, #23] 
    /*0002a744*/ ANDS        IP, IP, #16 
    /*0002a748*/ MOVEQ       R5, IP 
    /*0002a74c*/ BNE         GetSADiThr_x2a84c
    GetSADiThr_x2a750:
    /*0002a750*/ CMP         R0, #0 
    /*0002a754*/ BEQ         GetSADiThr_x2a7ec
    /*0002a758*/ LDRH        LR, [R3, #18] 
    /*0002a75c*/ MOVW        R4, #511                    @ 0x1ff 
    /*0002a760*/ UBFX        LR, LR, #0, #9 
    /*0002a764*/ CMP         LR, R4 
    /*0002a768*/ LDRBEQ      LR, [R0] 
    /*0002a76c*/ BNE         GetSADiThr_x2a874
    GetSADiThr_x2a770:
    /*0002a770*/ MOVW        R4, #511                    @ 0x1ff 
    /*0002a774*/ CMP         R5, R4 
    /*0002a778*/ BEQ         GetSADiThr_x2a79c
    /*0002a77c*/ LDRB        R6, [R3, #19] 
    /*0002a780*/ MOV         R4, #1 
    /*0002a784*/ UBFX        R6, R6, #1, #3 
    /*0002a788*/ ORR         LR, LR, R4, LSL R6 
    /*0002a78c*/ STRB        LR, [R0] 
    GetSADiThr_x2a790:
    /*0002a790*/ CMP         R5, #0 
    /*0002a794*/ BEQ         GetSADiThr_x2a7c4
    /*0002a798*/ LDRB        LR, [R0] 
    GetSADiThr_x2a79c:
    /*0002a79c*/ LDRH        R4, [R3, #22] 
    /*0002a7a0*/ MOVW        R6, #511                    @ 0x1ff 
    /*0002a7a4*/ UBFX        R4, R4, #0, #9 
    /*0002a7a8*/ CMP         R4, R6 
    /*0002a7ac*/ BEQ         GetSADiThr_x2a7d8
    /*0002a7b0*/ LDRB        R6, [R3, #21] 
    /*0002a7b4*/ MOV         R4, #1 
    /*0002a7b8*/ UBFX        R6, R6, #1, #3 
    /*0002a7bc*/ ORR         LR, LR, R4, LSL R6 
    /*0002a7c0*/ STRB        LR, [R0] 
    GetSADiThr_x2a7c4:
    /*0002a7c4*/ LDRH        LR, [R3, #22] 
    /*0002a7c8*/ UBFX        LR, LR, #0, #9 
    /*0002a7cc*/ CMP         LR, #0 
    /*0002a7d0*/ BEQ         GetSADiThr_x2a7ec
    /*0002a7d4*/ LDRB        LR, [R0] 
    GetSADiThr_x2a7d8:
    /*0002a7d8*/ LDRB        R4, [R3, #23] 
    /*0002a7dc*/ MOV         R6, #1 
    /*0002a7e0*/ UBFX        R4, R4, #1, #3 
    /*0002a7e4*/ ORR         LR, LR, R6, LSL R4 
    /*0002a7e8*/ STRB        LR, [R0] 
    GetSADiThr_x2a7ec:
    /*0002a7ec*/ LDRH        R4, [R3, #18] 
    /*0002a7f0*/ MOVW        LR, #511                    @ 0x1ff 
    /*0002a7f4*/ UBFX        R4, R4, #0, #9 
    /*0002a7f8*/ SXTH        R0, R4 
    /*0002a7fc*/ UXTH        R4, R4 
    /*0002a800*/ STR         R4, [R2] 
    /*0002a804*/ ADD         R0, R0, R0, LSL #1 
    /*0002a808*/ ASR         R0, R0, #1 
    /*0002a80c*/ CMP         R0, LR 
    /*0002a810*/ MOVGE       R0, LR 
    /*0002a814*/ STR         R0, [R1] 
    /*0002a818*/ STR         R5, [R2, #4] 
    /*0002a81c*/ STR         IP, [R1, #4] 
    /*0002a820*/ LDRH        R0, [R3, #22] 
    /*0002a824*/ UBFX        R0, R0, #0, #9 
    /*0002a828*/ SXTH        R3, R0 
    /*0002a82c*/ UXTH        R0, R0 
    /*0002a830*/ STR         R0, [R2, #8] 
    /*0002a834*/ ADD         R3, R3, R3, LSL #1 
    /*0002a838*/ ASR         R3, R3, #1 
    /*0002a83c*/ CMP         R3, LR 
    /*0002a840*/ MOVGE       R3, LR 
    /*0002a844*/ STR         R3, [R1, #8] 
    /*0002a848*/ POP         {R4, R5, R6, PC} 
    GetSADiThr_x2a84c:
    /*0002a84c*/ LDRH        R5, [R3, #20] 
    /*0002a850*/ MOVW        LR, #511                    @ 0x1ff 
    /*0002a854*/ UBFX        R5, R5, #0, #9 
    /*0002a858*/ SXTH        IP, R5 
    /*0002a85c*/ UXTH        R5, R5 
    /*0002a860*/ ADD         IP, IP, IP, LSL #1 
    /*0002a864*/ ASR         IP, IP, #1 
    /*0002a868*/ CMP         IP, LR 
    /*0002a86c*/ MOVGE       IP, LR 
    /*0002a870*/ B           GetSADiThr_x2a750
    GetSADiThr_x2a874:
    /*0002a874*/ LDRB        R4, [R3, #19] 
    /*0002a878*/ MOV         R6, #1 
    /*0002a87c*/ LDRB        LR, [R0] 
    /*0002a880*/ UBFX        R4, R4, #4, #3 
    /*0002a884*/ ORR         LR, LR, R6, LSL R4 
    /*0002a888*/ UXTB        LR, LR 
    /*0002a88c*/ STRB        LR, [R0] 
    /*0002a890*/ LDRH        R4, [R3, #18] 
    /*0002a894*/ UBFX        R4, R4, #0, #9 
    /*0002a898*/ CMP         R4, #0 
    /*0002a89c*/ BEQ         GetSADiThr_x2a790
    /*0002a8a0*/ B           GetSADiThr_x2a770
    GetSADiThr_x2a8a4:
    /*0002a8a4*/ MOVW        R3, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c0c] 
    /*0002a8a8*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x165c] 
    /*0002a8ac*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c10] 
    /*0002a8b0*/ MOVT        R3, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c0c] 
    /*0002a8b4*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x165c] 
    /*0002a8b8*/ MOVW        R2, #1235                   @ 0x4d3 
    /*0002a8bc*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c10] 
    GetSADiThr_x2a8c0:
    /*0002a8c0*/ B           GetSADiThr_x2a8c0           @ osal_panic [R_ARM_JUMP24: +0x0] 
FUNC_END GetSADiThr


FUNC_BEGIN SetPE0
    /*0002a8c4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0002a8c8*/ CMP         R0, #0 
    /*0002a8cc*/ CMPNE       R2, #0 
    /*0002a8d0*/ SUB         SP, SP, #220                @ 0xdc 
    /*0002a8d4*/ LDR         R7, [SP, #248]              @ 0xf8 
    /*0002a8d8*/ BEQ         SetPE0_x2adb4
    /*0002a8dc*/ CMP         R3, #0 
    /*0002a8e0*/ CMPNE       R1, #0 
    /*0002a8e4*/ MOV         R6, R2 
    /*0002a8e8*/ MOV         R5, R1 
    /*0002a8ec*/ MOV         R8, R3 
    /*0002a8f0*/ MOVNE       R2, #1 
    /*0002a8f4*/ MOVEQ       R2, #0 
    /*0002a8f8*/ CMP         R7, #0 
    /*0002a8fc*/ MOVEQ       R2, #0 
    /*0002a900*/ ANDNE       R2, R2, #1 
    /*0002a904*/ CMP         R2, #0 
    /*0002a908*/ BEQ         SetPE0_x2adb4
    /*0002a90c*/ LDRB        R2, [R3] 
    /*0002a910*/ MOV         R4, R0 
    /*0002a914*/ TST         R2, #248                    @ 0xf8 
    /*0002a918*/ BNE         SetPE0_x2add8
    SetPE0_x2a91c:
    /*0002a91c*/ LDRB        R3, [R6] 
    /*0002a920*/ TST         R3, #248                    @ 0xf8 
    /*0002a924*/ BNE         SetPE0_x2b684
    SetPE0_x2a928:
    /*0002a928*/ LDRB        R3, [R6, #152]              @ 0x98 
    /*0002a92c*/ TST         R3, #248                    @ 0xf8 
    /*0002a930*/ BNE         SetPE0_x2b204
    SetPE0_x2a934:
    /*0002a934*/ LDRB        R3, [R6, #304]              @ 0x130 
    /*0002a938*/ TST         R3, #248                    @ 0xf8 
    /*0002a93c*/ BEQ         SetPE0_x2add0
    /*0002a940*/ LDRB        R1, [R6, #327]              @ 0x147 
    /*0002a944*/ ADD         R0, R7, #3 
    /*0002a948*/ LDRB        IP, [R4, #790]              @ 0x316 
    /*0002a94c*/ ADD         R3, R6, #304                @ 0x130 
    /*0002a950*/ UBFX        R1, R1, #4, #1 
    /*0002a954*/ ADD         R2, SP, #12 
    /*0002a958*/ BFI         IP, R1, #7, #1 
    /*0002a95c*/ MOV         R1, SP 
    /*0002a960*/ STRB        IP, [R4, #790]              @ 0x316 
    /*0002a964*/ BL          0x000000000002A730 
    /*0002a968*/ LDRB        R3, [R6, #323]              @ 0x143 
    /*0002a96c*/ LDRB        R0, [R4, #936]              @ 0x3a8 
    /*0002a970*/ ADD         R2, SP, #20 
    /*0002a974*/ UBFX        R3, R3, #4, #3 
    /*0002a978*/ LDRB        R1, [R4, #937]              @ 0x3a9 
    /*0002a97c*/ BFI         R0, R3, #0, #4 
    /*0002a980*/ STRB        R0, [R4, #936]              @ 0x3a8 
    /*0002a984*/ LDRB        R3, [R6, #323]              @ 0x143 
    /*0002a988*/ ADD         IP, SP, #84                 @ 0x54 
    /*0002a98c*/ UXTB        R0, R0 
    /*0002a990*/ UBFX        R3, R3, #1, #3 
    /*0002a994*/ BFI         R0, R3, #4, #4 
    /*0002a998*/ STRB        R0, [R4, #936]              @ 0x3a8 
    /*0002a99c*/ LDRB        R3, [R6, #325]              @ 0x145 
    /*0002a9a0*/ UBFX        R3, R3, #1, #3 
    /*0002a9a4*/ BFI         R1, R3, #0, #4 
    /*0002a9a8*/ STRB        R1, [R4, #937]              @ 0x3a9 
    /*0002a9ac*/ LDRB        R3, [R6, #327]              @ 0x147 
    /*0002a9b0*/ UXTB        R1, R1 
    /*0002a9b4*/ UBFX        R3, R3, #1, #3 
    /*0002a9b8*/ BFI         R1, R3, #4, #4 
    /*0002a9bc*/ STRB        R1, [R4, #937]              @ 0x3a9 
    /*0002a9c0*/ LDR         R3, [SP, #12] 
    /*0002a9c4*/ LDR         R0, [SP] 
    /*0002a9c8*/ CMP         R0, R3 
    /*0002a9cc*/ MOVLT       R3, R0 
    /*0002a9d0*/ SUB         R0, R0, R3 
    /*0002a9d4*/ ADD         R3, R0, R3, LSL #4 
    /*0002a9d8*/ ADD         R3, R3, #8 
    SetPE0_x2a9dc:
    /*0002a9dc*/ ASR         R1, R3, #4 
    /*0002a9e0*/ STR         R1, [R2, #4]! 
    /*0002a9e4*/ CMP         IP, R2 
    /*0002a9e8*/ ADD         R3, R3, R0 
    /*0002a9ec*/ BNE         SetPE0_x2a9dc
    /*0002a9f0*/ LDR         R3, [SP, #20] 
    /*0002a9f4*/ ADD         R0, SP, #152                @ 0x98 
    /*0002a9f8*/ LDR         IP, [SP, #8] 
    /*0002a9fc*/ ADD         LR, SP, #216                @ 0xd8 
    /*0002aa00*/ MOV         R2, R0 
    /*0002aa04*/ CMP         IP, R3 
    /*0002aa08*/ MOVLT       R3, IP 
    /*0002aa0c*/ SUB         IP, IP, R3 
    /*0002aa10*/ ADD         R3, IP, R3, LSL #4 
    /*0002aa14*/ ADD         R3, R3, #8 
    SetPE0_x2aa18:
    /*0002aa18*/ ASR         R1, R3, #4 
    /*0002aa1c*/ STR         R1, [R2], #4 
    /*0002aa20*/ CMP         LR, R2 
    /*0002aa24*/ ADD         R3, R3, IP 
    /*0002aa28*/ BNE         SetPE0_x2aa18
    /*0002aa2c*/ ADD         R3, R4, #936                @ 0x3a8 
    /*0002aa30*/ LDR         R7, [SP, #24] 
    /*0002aa34*/ ADD         R5, R4, #940                @ 0x3ac 
    /*0002aa38*/ ADD         LR, R4, #980                @ 0x3d4 
    /*0002aa3c*/ LDRH        R2, [R3, #2] 
    /*0002aa40*/ ADD         IP, R4, #984                @ 0x3d8 
    /*0002aa44*/ ADD         R1, R4, #944                @ 0x3b0 
    /*0002aa48*/ BFI         R2, R7, #0, #9 
    /*0002aa4c*/ STRH        R2, [R3, #2] 
    /*0002aa50*/ LDR         R7, [SP, #152]              @ 0x98 
    /*0002aa54*/ ADD         R2, R4, #988                @ 0x3dc 
    /*0002aa58*/ LDR         R3, [R4, #980]              @ 0x3d4 
    /*0002aa5c*/ BFI         R3, R7, #9, #9 
    /*0002aa60*/ STR         R3, [R4, #980]              @ 0x3d4 
    /*0002aa64*/ LDR         R7, [SP, #156]              @ 0x9c 
    /*0002aa68*/ LSR         R3, R3, #16 
    /*0002aa6c*/ LDR         R8, [SP, #28] 
    /*0002aa70*/ BFI         R3, R7, #2, #9 
    /*0002aa74*/ LDRH        R7, [R5] 
    /*0002aa78*/ BFI         R7, R8, #0, #9 
    /*0002aa7c*/ STRH        R7, [R5] 
    /*0002aa80*/ STRH        R3, [LR, #2] 
    /*0002aa84*/ LDR         R7, [SP, #32] 
    /*0002aa88*/ LDR         R3, [R4, #940]              @ 0x3ac 
    /*0002aa8c*/ BFI         R3, R7, #9, #9 
    /*0002aa90*/ STR         R3, [R4, #940]              @ 0x3ac 
    /*0002aa94*/ LDR         R7, [SP, #36]               @ 0x24 
    /*0002aa98*/ LSR         R3, R3, #16 
    /*0002aa9c*/ LDR         R8, [SP, #160]              @ 0xa0 
    /*0002aaa0*/ BFI         R3, R7, #2, #9 
    /*0002aaa4*/ LDRH        R7, [IP] 
    /*0002aaa8*/ BFI         R7, R8, #0, #9 
    /*0002aaac*/ STRH        R7, [IP] 
    /*0002aab0*/ STRH        R3, [R5, #2] 
    /*0002aab4*/ ADD         R5, R4, #948                @ 0x3b4 
    /*0002aab8*/ LDR         R7, [SP, #164]              @ 0xa4 
    /*0002aabc*/ LDR         R3, [R4, #984]              @ 0x3d8 
    /*0002aac0*/ BFI         R3, R7, #9, #9 
    /*0002aac4*/ STR         R3, [R4, #984]              @ 0x3d8 
    /*0002aac8*/ LDR         R7, [SP, #168]              @ 0xa8 
    /*0002aacc*/ LSR         R3, R3, #16 
    /*0002aad0*/ LDR         R8, [SP, #40]               @ 0x28 
    /*0002aad4*/ BFI         R3, R7, #2, #9 
    /*0002aad8*/ LDRH        R7, [R1] 
    /*0002aadc*/ BFI         R7, R8, #0, #9 
    /*0002aae0*/ STRH        R7, [R1] 
    /*0002aae4*/ STRH        R3, [IP, #2] 
    /*0002aae8*/ ADD         R8, R4, #992                @ 0x3e0 
    /*0002aaec*/ LDR         IP, [SP, #44]               @ 0x2c 
    /*0002aaf0*/ LDR         R3, [R4, #944]              @ 0x3b0 
    /*0002aaf4*/ BFI         R3, IP, #9, #9 
    /*0002aaf8*/ STR         R3, [R4, #944]              @ 0x3b0 
    /*0002aafc*/ LDR         R7, [SP, #172]              @ 0xac 
    /*0002ab00*/ LDRH        IP, [R2] 
    /*0002ab04*/ LSR         R3, R3, #16 
    /*0002ab08*/ BFI         IP, R7, #0, #9 
    /*0002ab0c*/ STRH        IP, [R2] 
    /*0002ab10*/ LDR         IP, [SP, #48]               @ 0x30 
    /*0002ab14*/ ADD         R7, R4, #952                @ 0x3b8 
    /*0002ab18*/ BFI         R3, IP, #2, #9 
    /*0002ab1c*/ STRH        R3, [R1, #2] 
    /*0002ab20*/ LDR         R1, [SP, #176]              @ 0xb0 
    /*0002ab24*/ LDR         R3, [R4, #988]              @ 0x3dc 
    /*0002ab28*/ BFI         R3, R1, #9, #9 
    /*0002ab2c*/ STR         R3, [R4, #988]              @ 0x3dc 
    /*0002ab30*/ LDR         R1, [SP, #180]              @ 0xb4 
    /*0002ab34*/ LSR         R3, R3, #16 
    /*0002ab38*/ LDR         IP, [SP, #52]               @ 0x34 
    /*0002ab3c*/ BFI         R3, R1, #2, #9 
    /*0002ab40*/ LDRH        R1, [R5] 
    /*0002ab44*/ BFI         R1, IP, #0, #9 
    /*0002ab48*/ STRH        R1, [R5] 
    /*0002ab4c*/ STRH        R3, [R2, #2] 
    /*0002ab50*/ ADD         IP, R4, #996                @ 0x3e4 
    /*0002ab54*/ LDR         R2, [SP, #56]               @ 0x38 
    /*0002ab58*/ LDR         R3, [R4, #948]              @ 0x3b4 
    /*0002ab5c*/ BFI         R3, R2, #9, #9 
    /*0002ab60*/ STR         R3, [R4, #948]              @ 0x3b4 
    /*0002ab64*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*0002ab68*/ LSR         R3, R3, #16 
    /*0002ab6c*/ LDR         R1, [SP, #184]              @ 0xb8 
    /*0002ab70*/ BFI         R3, R2, #2, #9 
    /*0002ab74*/ LDRH        R2, [R8] 
    /*0002ab78*/ BFI         R2, R1, #0, #9 
    /*0002ab7c*/ STRH        R2, [R8] 
    /*0002ab80*/ STRH        R3, [R5, #2] 
    /*0002ab84*/ ADD         R1, R4, #956                @ 0x3bc 
    /*0002ab88*/ LDR         R2, [SP, #188]              @ 0xbc 
    /*0002ab8c*/ LDR         R3, [R4, #992]              @ 0x3e0 
    /*0002ab90*/ BFI         R3, R2, #9, #9 
    /*0002ab94*/ STR         R3, [R4, #992]              @ 0x3e0 
    /*0002ab98*/ LDR         R2, [SP, #192]              @ 0xc0 
    /*0002ab9c*/ LSR         R3, R3, #16 
    /*0002aba0*/ LDR         R5, [SP, #64]               @ 0x40 
    /*0002aba4*/ BFI         R3, R2, #2, #9 
    /*0002aba8*/ LDRH        R2, [R7] 
    /*0002abac*/ BFI         R2, R5, #0, #9 
    /*0002abb0*/ STRH        R2, [R7] 
    /*0002abb4*/ STRH        R3, [R8, #2] 
    /*0002abb8*/ ADD         R2, R4, #1000               @ 0x3e8 
    /*0002abbc*/ LDR         R5, [SP, #68]               @ 0x44 
    /*0002abc0*/ LDR         R3, [R4, #952]              @ 0x3b8 
    /*0002abc4*/ BFI         R3, R5, #9, #9 
    /*0002abc8*/ STR         R3, [R4, #952]              @ 0x3b8 
    /*0002abcc*/ LDR         R8, [SP, #196]              @ 0xc4 
    /*0002abd0*/ LDRH        R5, [IP] 
    /*0002abd4*/ LSR         R3, R3, #16 
    /*0002abd8*/ BFI         R5, R8, #0, #9 
    /*0002abdc*/ STRH        R5, [IP] 
    /*0002abe0*/ LDR         R5, [SP, #72]               @ 0x48 
    /*0002abe4*/ BFI         R3, R5, #2, #9 
    /*0002abe8*/ STRH        R3, [R7, #2] 
    /*0002abec*/ LDR         R5, [SP, #200]              @ 0xc8 
    /*0002abf0*/ LDR         R3, [R4, #996]              @ 0x3e4 
    /*0002abf4*/ BFI         R3, R5, #9, #9 
    /*0002abf8*/ STR         R3, [R4, #996]              @ 0x3e4 
    /*0002abfc*/ LDR         R5, [SP, #204]              @ 0xcc 
    /*0002ac00*/ LSR         R3, R3, #16 
    /*0002ac04*/ LDR         R7, [SP, #76]               @ 0x4c 
    /*0002ac08*/ BFI         R3, R5, #2, #9 
    /*0002ac0c*/ LDRH        R5, [R1] 
    /*0002ac10*/ BFI         R5, R7, #0, #9 
    /*0002ac14*/ STRH        R5, [R1] 
    /*0002ac18*/ STRH        R3, [IP, #2] 
    /*0002ac1c*/ LDR         IP, [SP, #80]               @ 0x50 
    /*0002ac20*/ LDR         R3, [R4, #956]              @ 0x3bc 
    /*0002ac24*/ BFI         R3, IP, #9, #9 
    /*0002ac28*/ STR         R3, [R4, #956]              @ 0x3bc 
    /*0002ac2c*/ LDR         R7, [SP, #84]               @ 0x54 
    /*0002ac30*/ LDRH        IP, [R2] 
    /*0002ac34*/ LSR         R3, R3, #16 
    /*0002ac38*/ LDR         R5, [SP, #208]              @ 0xd0 
    /*0002ac3c*/ BFI         R3, R7, #2, #9 
    /*0002ac40*/ BFI         IP, R5, #0, #9 
    /*0002ac44*/ STRH        IP, [R2] 
    /*0002ac48*/ STRH        R3, [R1, #2] 
    /*0002ac4c*/ LDR         R2, [SP, #212]              @ 0xd4 
    /*0002ac50*/ LDR         R3, [R4, #1000]             @ 0x3e8 
    /*0002ac54*/ BFI         R3, R2, #9, #9 
    /*0002ac58*/ STR         R3, [R4, #1000]             @ 0x3e8 
    /*0002ac5c*/ LDRB        R3, [R6, #327]              @ 0x147 
    /*0002ac60*/ TST         R3, #16 
    /*0002ac64*/ BEQ         SetPE0_x2add0
    /*0002ac68*/ LDR         R3, [SP, #16] 
    /*0002ac6c*/ ADD         R2, SP, #88                 @ 0x58 
    /*0002ac70*/ LDR         IP, [SP, #4] 
    /*0002ac74*/ CMP         IP, R3 
    /*0002ac78*/ MOVLT       R3, IP 
    /*0002ac7c*/ SUB         IP, IP, R3 
    /*0002ac80*/ ADD         R3, IP, R3, LSL #4 
    /*0002ac84*/ ADD         R3, R3, #8 
    SetPE0_x2ac88:
    /*0002ac88*/ ASR         R1, R3, #4 
    /*0002ac8c*/ STR         R1, [R2], #4 
    /*0002ac90*/ CMP         R0, R2 
    /*0002ac94*/ ADD         R3, R3, IP 
    /*0002ac98*/ BNE         SetPE0_x2ac88
    /*0002ac9c*/ ADD         R2, R4, #960                @ 0x3c0 
    /*0002aca0*/ LDR         R1, [SP, #88]               @ 0x58 
    /*0002aca4*/ LDR         R5, [SP, #92]               @ 0x5c 
    /*0002aca8*/ ADD         IP, R4, #964                @ 0x3c4 
    /*0002acac*/ LDRH        R3, [R2] 
    /*0002acb0*/ ADD         R0, R4, #968                @ 0x3c8 
    /*0002acb4*/ BFI         R3, R1, #0, #9 
    /*0002acb8*/ STRH        R3, [R2] 
    /*0002acbc*/ LDR         R3, [R4, #960]              @ 0x3c0 
    /*0002acc0*/ ADD         R1, R4, #972                @ 0x3cc 
    /*0002acc4*/ BFI         R3, R5, #9, #9 
    /*0002acc8*/ STR         R3, [R4, #960]              @ 0x3c0 
    /*0002accc*/ LDR         R5, [SP, #96]               @ 0x60 
    /*0002acd0*/ LSR         R3, R3, #16 
    /*0002acd4*/ BFI         R3, R5, #2, #9 
    /*0002acd8*/ STRH        R3, [R2, #2] 
    /*0002acdc*/ LDR         R5, [SP, #100]              @ 0x64 
    /*0002ace0*/ ADD         R2, R4, #976                @ 0x3d0 
    /*0002ace4*/ LDRH        R3, [IP] 
    /*0002ace8*/ BFI         R3, R5, #0, #9 
    /*0002acec*/ LDR         R5, [SP, #104]              @ 0x68 
    /*0002acf0*/ STRH        R3, [IP] 
    /*0002acf4*/ LDR         R3, [R4, #964]              @ 0x3c4 
    /*0002acf8*/ BFI         R3, R5, #9, #9 
    /*0002acfc*/ STR         R3, [R4, #964]              @ 0x3c4 
    /*0002ad00*/ LDR         R5, [SP, #108]              @ 0x6c 
    /*0002ad04*/ LSR         R3, R3, #16 
    /*0002ad08*/ BFI         R3, R5, #2, #9 
    /*0002ad0c*/ STRH        R3, [IP, #2] 
    /*0002ad10*/ LDR         R5, [SP, #112]              @ 0x70 
    /*0002ad14*/ LDRH        R3, [R0] 
    /*0002ad18*/ LDR         IP, [SP, #116]              @ 0x74 
    /*0002ad1c*/ BFI         R3, R5, #0, #9 
    /*0002ad20*/ STRH        R3, [R0] 
    /*0002ad24*/ LDR         R3, [R4, #968]              @ 0x3c8 
    /*0002ad28*/ BFI         R3, IP, #9, #9 
    /*0002ad2c*/ STR         R3, [R4, #968]              @ 0x3c8 
    /*0002ad30*/ LDR         IP, [SP, #120]              @ 0x78 
    /*0002ad34*/ LSR         R3, R3, #16 
    /*0002ad38*/ BFI         R3, IP, #2, #9 
    /*0002ad3c*/ STRH        R3, [R0, #2] 
    /*0002ad40*/ LDR         IP, [SP, #124]              @ 0x7c 
    /*0002ad44*/ LDRH        R3, [R1] 
    /*0002ad48*/ LDR         R0, [SP, #128]              @ 0x80 
    /*0002ad4c*/ BFI         R3, IP, #0, #9 
    /*0002ad50*/ STRH        R3, [R1] 
    /*0002ad54*/ LDR         R3, [R4, #972]              @ 0x3cc 
    /*0002ad58*/ BFI         R3, R0, #9, #9 
    /*0002ad5c*/ STR         R3, [R4, #972]              @ 0x3cc 
    /*0002ad60*/ LDR         R0, [SP, #132]              @ 0x84 
    /*0002ad64*/ LSR         R3, R3, #16 
    /*0002ad68*/ BFI         R3, R0, #2, #9 
    /*0002ad6c*/ STRH        R3, [R1, #2] 
    /*0002ad70*/ LDR         R0, [SP, #136]              @ 0x88 
    /*0002ad74*/ LDRH        R3, [R2] 
    /*0002ad78*/ LDR         R1, [SP, #140]              @ 0x8c 
    /*0002ad7c*/ BFI         R3, R0, #0, #9 
    /*0002ad80*/ STRH        R3, [R2] 
    /*0002ad84*/ LDR         R3, [R4, #976]              @ 0x3d0 
    /*0002ad88*/ BFI         R3, R1, #9, #9 
    /*0002ad8c*/ STR         R3, [R4, #976]              @ 0x3d0 
    /*0002ad90*/ LDR         R1, [SP, #144]              @ 0x90 
    /*0002ad94*/ LSR         R3, R3, #16 
    /*0002ad98*/ BFI         R3, R1, #2, #9 
    /*0002ad9c*/ STRH        R3, [R2, #2] 
    /*0002ada0*/ LDR         R2, [SP, #148]              @ 0x94 
    /*0002ada4*/ LDRH        R3, [LR] 
    /*0002ada8*/ BFI         R3, R2, #0, #9 
    /*0002adac*/ STRH        R3, [LR] 
    /*0002adb0*/ B           SetPE0_x2add0
    SetPE0_x2adb4:
    /*0002adb4*/ MOVW        R3, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c0c] 
    /*0002adb8*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c10] 
    /*0002adbc*/ MOVT        R3, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c0c] 
    /*0002adc0*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c10] 
    /*0002adc4*/ MOVW        R2, #1473                   @ 0x5c1 
    /*0002adc8*/ LDR         R1, [PC, #3300]             @ 0x000000000002bab4 
    /*0002adcc*/ BL          0x000000000002ADCC          @ osal_panic [R_ARM_CALL: +0x0] 
    SetPE0_x2add0:
    /*0002add0*/ ADD         SP, SP, #220                @ 0xdc 
    /*0002add4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    SetPE0_x2add8:
    /*0002add8*/ LDRB        R0, [R3, #23] 
    /*0002addc*/ ADD         R2, SP, #12 
    /*0002ade0*/ LDR         IP, [R1, #8] 
    /*0002ade4*/ MOV         R1, SP 
    /*0002ade8*/ UBFX        R0, R0, #4, #1 
    /*0002adec*/ BFI         IP, R0, #22, #1 
    /*0002adf0*/ ADD         R0, R7, #1 
    /*0002adf4*/ STR         IP, [R5, #8] 
    /*0002adf8*/ BL          0x000000000002A730 
    /*0002adfc*/ LDRB        R3, [R8, #19] 
    /*0002ae00*/ LDR         R1, [R5, #128]              @ 0x80 
    /*0002ae04*/ ADD         R2, SP, #20 
    /*0002ae08*/ UBFX        R3, R3, #4, #3 
    /*0002ae0c*/ LDR         R0, [SP] 
    /*0002ae10*/ BFI         R1, R3, #0, #4 
    /*0002ae14*/ STR         R1, [R5, #128]              @ 0x80 
    /*0002ae18*/ LDRB        R1, [R8, #19] 
    /*0002ae1c*/ ADD         IP, SP, #84                 @ 0x54 
    /*0002ae20*/ LDR         R3, [SP, #12] 
    /*0002ae24*/ LDR         LR, [R5, #128]              @ 0x80 
    /*0002ae28*/ UBFX        R1, R1, #1, #3 
    /*0002ae2c*/ CMP         R0, R3 
    /*0002ae30*/ BFI         LR, R1, #4, #4 
    /*0002ae34*/ STR         LR, [R5, #128]              @ 0x80 
    /*0002ae38*/ LDRB        R1, [R8, #21] 
    /*0002ae3c*/ MOVLT       R3, R0 
    /*0002ae40*/ LDR         LR, [R5, #128]              @ 0x80 
    /*0002ae44*/ SUB         R0, R0, R3 
    /*0002ae48*/ UBFX        R1, R1, #1, #3 
    /*0002ae4c*/ ADD         R3, R0, R3, LSL #4 
    /*0002ae50*/ BFI         LR, R1, #8, #4 
    /*0002ae54*/ STR         LR, [R5, #128]              @ 0x80 
    /*0002ae58*/ LDRB        R1, [R8, #23] 
    /*0002ae5c*/ ADD         R3, R3, #8 
    /*0002ae60*/ LDR         LR, [R5, #128]              @ 0x80 
    /*0002ae64*/ UBFX        R1, R1, #1, #3 
    /*0002ae68*/ BFI         LR, R1, #12, #4 
    /*0002ae6c*/ STR         LR, [R5, #128]              @ 0x80 
    SetPE0_x2ae70:
    /*0002ae70*/ ASR         R1, R3, #4 
    /*0002ae74*/ STR         R1, [R2, #4]! 
    /*0002ae78*/ CMP         R2, IP 
    /*0002ae7c*/ ADD         R3, R3, R0 
    /*0002ae80*/ BNE         SetPE0_x2ae70
    /*0002ae84*/ LDR         R3, [SP, #20] 
    /*0002ae88*/ ADD         R0, SP, #152                @ 0x98 
    /*0002ae8c*/ LDR         IP, [SP, #8] 
    /*0002ae90*/ ADD         LR, SP, #216                @ 0xd8 
    /*0002ae94*/ MOV         R2, R0 
    /*0002ae98*/ CMP         IP, R3 
    /*0002ae9c*/ MOVLT       R3, IP 
    /*0002aea0*/ SUB         IP, IP, R3 
    /*0002aea4*/ ADD         R3, IP, R3, LSL #4 
    /*0002aea8*/ ADD         R3, R3, #8 
    SetPE0_x2aeac:
    /*0002aeac*/ ASR         R1, R3, #4 
    /*0002aeb0*/ STR         R1, [R2], #4 
    /*0002aeb4*/ CMP         R2, LR 
    /*0002aeb8*/ ADD         R3, R3, IP 
    /*0002aebc*/ BNE         SetPE0_x2aeac
    /*0002aec0*/ LDR         R3, [R5, #128]              @ 0x80 
    /*0002aec4*/ LDR         R2, [SP, #24] 
    /*0002aec8*/ LDR         R1, [SP, #152]              @ 0x98 
    /*0002aecc*/ BFI         R3, R2, #16, #9 
    /*0002aed0*/ STR         R3, [R5, #128]              @ 0x80 
    /*0002aed4*/ LDR         R3, [R5, #172]              @ 0xac 
    /*0002aed8*/ LDR         R2, [SP, #28] 
    /*0002aedc*/ BFI         R3, R1, #9, #9 
    /*0002aee0*/ STR         R3, [R5, #172]              @ 0xac 
    /*0002aee4*/ LDR         R3, [R5, #132]              @ 0x84 
    /*0002aee8*/ LDR         R1, [SP, #156]              @ 0x9c 
    /*0002aeec*/ BFI         R3, R2, #0, #9 
    /*0002aef0*/ STR         R3, [R5, #132]              @ 0x84 
    /*0002aef4*/ LDR         R3, [R5, #172]              @ 0xac 
    /*0002aef8*/ LDR         R2, [SP, #32] 
    /*0002aefc*/ BFI         R3, R1, #18, #9 
    /*0002af00*/ STR         R3, [R5, #172]              @ 0xac 
    /*0002af04*/ LDR         R3, [R5, #132]              @ 0x84 
    /*0002af08*/ LDR         R1, [SP, #160]              @ 0xa0 
    /*0002af0c*/ BFI         R3, R2, #9, #9 
    /*0002af10*/ STR         R3, [R5, #132]              @ 0x84 
    /*0002af14*/ LDR         R3, [R5, #176]              @ 0xb0 
    /*0002af18*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0002af1c*/ BFI         R3, R1, #0, #9 
    /*0002af20*/ STR         R3, [R5, #176]              @ 0xb0 
    /*0002af24*/ LDR         R3, [R5, #132]              @ 0x84 
    /*0002af28*/ LDR         R1, [SP, #164]              @ 0xa4 
    /*0002af2c*/ BFI         R3, R2, #18, #9 
    /*0002af30*/ STR         R3, [R5, #132]              @ 0x84 
    /*0002af34*/ LDR         R3, [R5, #176]              @ 0xb0 
    /*0002af38*/ LDR         R2, [SP, #40]               @ 0x28 
    /*0002af3c*/ BFI         R3, R1, #9, #9 
    /*0002af40*/ STR         R3, [R5, #176]              @ 0xb0 
    /*0002af44*/ LDR         R3, [R5, #136]              @ 0x88 
    /*0002af48*/ LDR         R1, [SP, #168]              @ 0xa8 
    /*0002af4c*/ BFI         R3, R2, #0, #9 
    /*0002af50*/ STR         R3, [R5, #136]              @ 0x88 
    /*0002af54*/ LDR         R3, [R5, #176]              @ 0xb0 
    /*0002af58*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0002af5c*/ BFI         R3, R1, #18, #9 
    /*0002af60*/ STR         R3, [R5, #176]              @ 0xb0 
    /*0002af64*/ LDR         R3, [R5, #136]              @ 0x88 
    /*0002af68*/ BFI         R3, R2, #9, #9 
    /*0002af6c*/ STR         R3, [R5, #136]              @ 0x88 
    /*0002af70*/ LDR         R3, [R5, #180]              @ 0xb4 
    /*0002af74*/ LDR         R2, [SP, #172]              @ 0xac 
    /*0002af78*/ LDR         R1, [SP, #48]               @ 0x30 
    /*0002af7c*/ BFI         R3, R2, #0, #9 
    /*0002af80*/ STR         R3, [R5, #180]              @ 0xb4 
    /*0002af84*/ LDR         R3, [R5, #136]              @ 0x88 
    /*0002af88*/ LDR         R2, [SP, #176]              @ 0xb0 
    /*0002af8c*/ BFI         R3, R1, #18, #9 
    /*0002af90*/ STR         R3, [R5, #136]              @ 0x88 
    /*0002af94*/ LDR         R3, [R5, #180]              @ 0xb4 
    /*0002af98*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0002af9c*/ BFI         R3, R2, #9, #9 
    /*0002afa0*/ STR         R3, [R5, #180]              @ 0xb4 
    /*0002afa4*/ LDR         R3, [R5, #140]              @ 0x8c 
    /*0002afa8*/ LDR         R2, [SP, #180]              @ 0xb4 
    /*0002afac*/ BFI         R3, R1, #0, #9 
    /*0002afb0*/ STR         R3, [R5, #140]              @ 0x8c 
    /*0002afb4*/ LDR         R3, [R5, #180]              @ 0xb4 
    /*0002afb8*/ LDR         R1, [SP, #56]               @ 0x38 
    /*0002afbc*/ BFI         R3, R2, #18, #9 
    /*0002afc0*/ STR         R3, [R5, #180]              @ 0xb4 
    /*0002afc4*/ LDR         R3, [R5, #140]              @ 0x8c 
    /*0002afc8*/ LDR         R2, [SP, #184]              @ 0xb8 
    /*0002afcc*/ BFI         R3, R1, #9, #9 
    /*0002afd0*/ STR         R3, [R5, #140]              @ 0x8c 
    /*0002afd4*/ LDR         R3, [R5, #184]              @ 0xb8 
    /*0002afd8*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*0002afdc*/ BFI         R3, R2, #0, #9 
    /*0002afe0*/ STR         R3, [R5, #184]              @ 0xb8 
    /*0002afe4*/ LDR         R3, [R5, #140]              @ 0x8c 
    /*0002afe8*/ LDR         R2, [SP, #188]              @ 0xbc 
    /*0002afec*/ BFI         R3, R1, #18, #9 
    /*0002aff0*/ STR         R3, [R5, #140]              @ 0x8c 
    /*0002aff4*/ LDR         R3, [R5, #184]              @ 0xb8 
    /*0002aff8*/ LDR         R1, [SP, #64]               @ 0x40 
    /*0002affc*/ BFI         R3, R2, #9, #9 
    /*0002b000*/ STR         R3, [R5, #184]              @ 0xb8 
    /*0002b004*/ LDR         R3, [R5, #144]              @ 0x90 
    /*0002b008*/ LDR         R2, [SP, #192]              @ 0xc0 
    /*0002b00c*/ BFI         R3, R1, #0, #9 
    /*0002b010*/ STR         R3, [R5, #144]              @ 0x90 
    /*0002b014*/ LDR         R3, [R5, #184]              @ 0xb8 
    /*0002b018*/ BFI         R3, R2, #18, #9 
    /*0002b01c*/ STR         R3, [R5, #184]              @ 0xb8 
    /*0002b020*/ LDR         R3, [R5, #144]              @ 0x90 
    /*0002b024*/ LDR         R1, [SP, #68]               @ 0x44 
    /*0002b028*/ LDR         R2, [SP, #196]              @ 0xc4 
    /*0002b02c*/ BFI         R3, R1, #9, #9 
    /*0002b030*/ STR         R3, [R5, #144]              @ 0x90 
    /*0002b034*/ LDR         R3, [R5, #188]              @ 0xbc 
    /*0002b038*/ LDR         R1, [SP, #72]               @ 0x48 
    /*0002b03c*/ BFI         R3, R2, #0, #9 
    /*0002b040*/ STR         R3, [R5, #188]              @ 0xbc 
    /*0002b044*/ LDR         R3, [R5, #144]              @ 0x90 
    /*0002b048*/ LDR         R2, [SP, #200]              @ 0xc8 
    /*0002b04c*/ BFI         R3, R1, #18, #9 
    /*0002b050*/ STR         R3, [R5, #144]              @ 0x90 
    /*0002b054*/ LDR         R3, [R5, #188]              @ 0xbc 
    /*0002b058*/ LDR         R1, [SP, #76]               @ 0x4c 
    /*0002b05c*/ BFI         R3, R2, #9, #9 
    /*0002b060*/ STR         R3, [R5, #188]              @ 0xbc 
    /*0002b064*/ LDR         R3, [R5, #148]              @ 0x94 
    /*0002b068*/ LDR         R2, [SP, #204]              @ 0xcc 
    /*0002b06c*/ BFI         R3, R1, #0, #9 
    /*0002b070*/ STR         R3, [R5, #148]              @ 0x94 
    /*0002b074*/ LDR         R3, [R5, #188]              @ 0xbc 
    /*0002b078*/ LDR         R1, [SP, #80]               @ 0x50 
    /*0002b07c*/ BFI         R3, R2, #18, #9 
    /*0002b080*/ STR         R3, [R5, #188]              @ 0xbc 
    /*0002b084*/ LDR         R3, [R5, #148]              @ 0x94 
    /*0002b088*/ LDR         R2, [SP, #208]              @ 0xd0 
    /*0002b08c*/ BFI         R3, R1, #9, #9 
    /*0002b090*/ STR         R3, [R5, #148]              @ 0x94 
    /*0002b094*/ LDR         R3, [R5, #192]              @ 0xc0 
    /*0002b098*/ LDR         R1, [SP, #84]               @ 0x54 
    /*0002b09c*/ BFI         R3, R2, #0, #9 
    /*0002b0a0*/ STR         R3, [R5, #192]              @ 0xc0 
    /*0002b0a4*/ LDR         R3, [R5, #148]              @ 0x94 
    /*0002b0a8*/ LDR         R2, [SP, #212]              @ 0xd4 
    /*0002b0ac*/ BFI         R3, R1, #18, #9 
    /*0002b0b0*/ STR         R3, [R5, #148]              @ 0x94 
    /*0002b0b4*/ LDR         R3, [R5, #192]              @ 0xc0 
    /*0002b0b8*/ BFI         R3, R2, #9, #9 
    /*0002b0bc*/ STR         R3, [R5, #192]              @ 0xc0 
    /*0002b0c0*/ LDRB        R3, [R8, #23] 
    /*0002b0c4*/ TST         R3, #16 
    /*0002b0c8*/ BEQ         SetPE0_x2a91c
    /*0002b0cc*/ LDR         R3, [SP, #16] 
    /*0002b0d0*/ ADD         R2, SP, #88                 @ 0x58 
    /*0002b0d4*/ LDR         IP, [SP, #4] 
    /*0002b0d8*/ CMP         IP, R3 
    /*0002b0dc*/ MOVLT       R3, IP 
    /*0002b0e0*/ SUB         IP, IP, R3 
    /*0002b0e4*/ ADD         R3, IP, R3, LSL #4 
    /*0002b0e8*/ ADD         R3, R3, #8 
    SetPE0_x2b0ec:
    /*0002b0ec*/ ASR         R1, R3, #4 
    /*0002b0f0*/ STR         R1, [R2], #4 
    /*0002b0f4*/ CMP         R2, R0 
    /*0002b0f8*/ ADD         R3, R3, IP 
    /*0002b0fc*/ BNE         SetPE0_x2b0ec
    /*0002b100*/ LDR         R3, [R5, #152]              @ 0x98 
    /*0002b104*/ LDR         R2, [SP, #88]               @ 0x58 
    /*0002b108*/ LDR         R1, [SP, #92]               @ 0x5c 
    /*0002b10c*/ BFI         R3, R2, #0, #9 
    /*0002b110*/ STR         R3, [R5, #152]              @ 0x98 
    /*0002b114*/ LDR         R3, [R5, #152]              @ 0x98 
    /*0002b118*/ LDR         R2, [SP, #96]               @ 0x60 
    /*0002b11c*/ BFI         R3, R1, #9, #9 
    /*0002b120*/ STR         R3, [R5, #152]              @ 0x98 
    /*0002b124*/ LDR         R3, [R5, #152]              @ 0x98 
    /*0002b128*/ LDR         R1, [SP, #100]              @ 0x64 
    /*0002b12c*/ BFI         R3, R2, #18, #9 
    /*0002b130*/ STR         R3, [R5, #152]              @ 0x98 
    /*0002b134*/ LDR         R3, [R5, #156]              @ 0x9c 
    /*0002b138*/ LDR         R2, [SP, #104]              @ 0x68 
    /*0002b13c*/ BFI         R3, R1, #0, #9 
    /*0002b140*/ STR         R3, [R5, #156]              @ 0x9c 
    /*0002b144*/ LDR         R3, [R5, #156]              @ 0x9c 
    /*0002b148*/ LDR         R1, [SP, #108]              @ 0x6c 
    /*0002b14c*/ BFI         R3, R2, #9, #9 
    /*0002b150*/ STR         R3, [R5, #156]              @ 0x9c 
    /*0002b154*/ LDR         R3, [R5, #156]              @ 0x9c 
    /*0002b158*/ LDR         R2, [SP, #112]              @ 0x70 
    /*0002b15c*/ BFI         R3, R1, #18, #9 
    /*0002b160*/ STR         R3, [R5, #156]              @ 0x9c 
    /*0002b164*/ LDR         R3, [R5, #160]              @ 0xa0 
    /*0002b168*/ LDR         R1, [SP, #116]              @ 0x74 
    /*0002b16c*/ BFI         R3, R2, #0, #9 
    /*0002b170*/ STR         R3, [R5, #160]              @ 0xa0 
    /*0002b174*/ LDR         R3, [R5, #160]              @ 0xa0 
    /*0002b178*/ LDR         R2, [SP, #120]              @ 0x78 
    /*0002b17c*/ BFI         R3, R1, #9, #9 
    /*0002b180*/ STR         R3, [R5, #160]              @ 0xa0 
    /*0002b184*/ LDR         R3, [R5, #160]              @ 0xa0 
    /*0002b188*/ LDR         R1, [SP, #124]              @ 0x7c 
    /*0002b18c*/ BFI         R3, R2, #18, #9 
    /*0002b190*/ STR         R3, [R5, #160]              @ 0xa0 
    /*0002b194*/ LDR         R3, [R5, #164]              @ 0xa4 
    /*0002b198*/ LDR         R2, [SP, #128]              @ 0x80 
    /*0002b19c*/ BFI         R3, R1, #0, #9 
    /*0002b1a0*/ STR         R3, [R5, #164]              @ 0xa4 
    /*0002b1a4*/ LDR         R3, [R5, #164]              @ 0xa4 
    /*0002b1a8*/ BFI         R3, R2, #9, #9 
    /*0002b1ac*/ STR         R3, [R5, #164]              @ 0xa4 
    /*0002b1b0*/ LDR         R3, [R5, #164]              @ 0xa4 
    /*0002b1b4*/ LDR         R2, [SP, #132]              @ 0x84 
    /*0002b1b8*/ LDR         R1, [SP, #136]              @ 0x88 
    /*0002b1bc*/ BFI         R3, R2, #18, #9 
    /*0002b1c0*/ STR         R3, [R5, #164]              @ 0xa4 
    /*0002b1c4*/ LDR         R3, [R5, #168]              @ 0xa8 
    /*0002b1c8*/ LDR         R2, [SP, #140]              @ 0x8c 
    /*0002b1cc*/ BFI         R3, R1, #0, #9 
    /*0002b1d0*/ STR         R3, [R5, #168]              @ 0xa8 
    /*0002b1d4*/ LDR         R3, [R5, #168]              @ 0xa8 
    /*0002b1d8*/ LDR         R1, [SP, #144]              @ 0x90 
    /*0002b1dc*/ BFI         R3, R2, #9, #9 
    /*0002b1e0*/ STR         R3, [R5, #168]              @ 0xa8 
    /*0002b1e4*/ LDR         R3, [R5, #168]              @ 0xa8 
    /*0002b1e8*/ LDR         R2, [SP, #148]              @ 0x94 
    /*0002b1ec*/ BFI         R3, R1, #18, #9 
    /*0002b1f0*/ STR         R3, [R5, #168]              @ 0xa8 
    /*0002b1f4*/ LDR         R3, [R5, #172]              @ 0xac 
    /*0002b1f8*/ BFI         R3, R2, #0, #9 
    /*0002b1fc*/ STR         R3, [R5, #172]              @ 0xac 
    /*0002b200*/ B           SetPE0_x2a91c
    SetPE0_x2b204:
    /*0002b204*/ LDRB        R0, [R6, #175]              @ 0xaf 
    /*0002b208*/ ADD         R3, R6, #152                @ 0x98 
    /*0002b20c*/ LDRB        IP, [R4, #402]              @ 0x192 
    /*0002b210*/ ADD         R2, SP, #12 
    /*0002b214*/ UBFX        R0, R0, #4, #1 
    /*0002b218*/ MOV         R1, SP 
    /*0002b21c*/ BFI         IP, R0, #7, #1 
    /*0002b220*/ ADD         R0, R7, #2 
    /*0002b224*/ STRB        IP, [R4, #402]              @ 0x192 
    /*0002b228*/ BL          0x000000000002A730 
    /*0002b22c*/ LDRB        R3, [R6, #171]              @ 0xab 
    /*0002b230*/ LDRB        R0, [R4, #548]              @ 0x224 
    /*0002b234*/ ADD         R2, SP, #20 
    /*0002b238*/ UBFX        R3, R3, #4, #3 
    /*0002b23c*/ LDRB        R1, [R4, #549]              @ 0x225 
    /*0002b240*/ BFI         R0, R3, #0, #4 
    /*0002b244*/ STRB        R0, [R4, #548]              @ 0x224 
    /*0002b248*/ LDRB        R3, [R6, #171]              @ 0xab 
    /*0002b24c*/ ADD         IP, SP, #84                 @ 0x54 
    /*0002b250*/ UXTB        R0, R0 
    /*0002b254*/ UBFX        R3, R3, #1, #3 
    /*0002b258*/ BFI         R0, R3, #4, #4 
    /*0002b25c*/ STRB        R0, [R4, #548]              @ 0x224 
    /*0002b260*/ LDRB        R3, [R6, #173]              @ 0xad 
    /*0002b264*/ UBFX        R3, R3, #1, #3 
    /*0002b268*/ BFI         R1, R3, #0, #4 
    /*0002b26c*/ STRB        R1, [R4, #549]              @ 0x225 
    /*0002b270*/ LDRB        R3, [R6, #175]              @ 0xaf 
    /*0002b274*/ UXTB        R1, R1 
    /*0002b278*/ UBFX        R3, R3, #1, #3 
    /*0002b27c*/ BFI         R1, R3, #4, #4 
    /*0002b280*/ STRB        R1, [R4, #549]              @ 0x225 
    /*0002b284*/ LDR         R3, [SP, #12] 
    /*0002b288*/ LDR         R0, [SP] 
    /*0002b28c*/ CMP         R0, R3 
    /*0002b290*/ MOVLT       R3, R0 
    /*0002b294*/ SUB         R0, R0, R3 
    /*0002b298*/ ADD         R3, R0, R3, LSL #4 
    /*0002b29c*/ ADD         R3, R3, #8 
    SetPE0_x2b2a0:
    /*0002b2a0*/ ASR         R1, R3, #4 
    /*0002b2a4*/ STR         R1, [R2, #4]! 
    /*0002b2a8*/ CMP         IP, R2 
    /*0002b2ac*/ ADD         R3, R3, R0 
    /*0002b2b0*/ BNE         SetPE0_x2b2a0
    /*0002b2b4*/ LDR         R3, [SP, #20] 
    /*0002b2b8*/ ADD         R0, SP, #152                @ 0x98 
    /*0002b2bc*/ LDR         IP, [SP, #8] 
    /*0002b2c0*/ ADD         LR, SP, #216                @ 0xd8 
    /*0002b2c4*/ MOV         R2, R0 
    /*0002b2c8*/ CMP         IP, R3 
    /*0002b2cc*/ MOVLT       R3, IP 
    /*0002b2d0*/ SUB         IP, IP, R3 
    /*0002b2d4*/ ADD         R3, IP, R3, LSL #4 
    /*0002b2d8*/ ADD         R3, R3, #8 
    SetPE0_x2b2dc:
    /*0002b2dc*/ ASR         R1, R3, #4 
    /*0002b2e0*/ STR         R1, [R2], #4 
    /*0002b2e4*/ CMP         LR, R2 
    /*0002b2e8*/ ADD         R3, R3, IP 
    /*0002b2ec*/ BNE         SetPE0_x2b2dc
    /*0002b2f0*/ ADD         R3, R4, #548                @ 0x224 
    /*0002b2f4*/ LDR         R8, [SP, #24] 
    /*0002b2f8*/ ADD         IP, R4, #552                @ 0x228 
    /*0002b2fc*/ ADD         LR, R4, #592                @ 0x250 
    /*0002b300*/ LDRH        R2, [R3, #2] 
    /*0002b304*/ ADD         R5, R4, #596                @ 0x254 
    /*0002b308*/ ADD         R1, R4, #556                @ 0x22c 
    /*0002b30c*/ BFI         R2, R8, #0, #9 
    /*0002b310*/ STRH        R2, [R3, #2] 
    /*0002b314*/ LDR         R8, [SP, #152]              @ 0x98 
    /*0002b318*/ ADD         R2, R4, #600                @ 0x258 
    /*0002b31c*/ LDR         R3, [R4, #592]              @ 0x250 
    /*0002b320*/ BFI         R3, R8, #9, #9 
    /*0002b324*/ STR         R3, [R4, #592]              @ 0x250 
    /*0002b328*/ LDR         R8, [SP, #156]              @ 0x9c 
    /*0002b32c*/ LSR         R3, R3, #16 
    /*0002b330*/ LDR         R9, [SP, #28] 
    /*0002b334*/ BFI         R3, R8, #2, #9 
    /*0002b338*/ LDRH        R8, [IP] 
    /*0002b33c*/ BFI         R8, R9, #0, #9 
    /*0002b340*/ STRH        R8, [IP] 
    /*0002b344*/ STRH        R3, [LR, #2] 
    /*0002b348*/ LDR         R8, [SP, #32] 
    /*0002b34c*/ LDR         R3, [R4, #552]              @ 0x228 
    /*0002b350*/ BFI         R3, R8, #9, #9 
    /*0002b354*/ STR         R3, [R4, #552]              @ 0x228 
    /*0002b358*/ LDR         R8, [SP, #36]               @ 0x24 
    /*0002b35c*/ LSR         R3, R3, #16 
    /*0002b360*/ LDR         R9, [SP, #160]              @ 0xa0 
    /*0002b364*/ BFI         R3, R8, #2, #9 
    /*0002b368*/ LDRH        R8, [R5] 
    /*0002b36c*/ BFI         R8, R9, #0, #9 
    /*0002b370*/ STRH        R8, [R5] 
    /*0002b374*/ STRH        R3, [IP, #2] 
    /*0002b378*/ ADD         IP, R4, #560                @ 0x230 
    /*0002b37c*/ LDR         R8, [SP, #164]              @ 0xa4 
    /*0002b380*/ LDR         R3, [R4, #596]              @ 0x254 
    /*0002b384*/ BFI         R3, R8, #9, #9 
    /*0002b388*/ STR         R3, [R4, #596]              @ 0x254 
    /*0002b38c*/ LDR         R8, [SP, #168]              @ 0xa8 
    /*0002b390*/ LSR         R3, R3, #16 
    /*0002b394*/ LDR         R9, [SP, #40]               @ 0x28 
    /*0002b398*/ BFI         R3, R8, #2, #9 
    /*0002b39c*/ MOV         R8, R1 
    /*0002b3a0*/ LDRH        R1, [R1] 
    /*0002b3a4*/ BFI         R1, R9, #0, #9 
    /*0002b3a8*/ STRH        R1, [R8] 
    /*0002b3ac*/ STRH        R3, [R5, #2] 
    /*0002b3b0*/ ADD         R1, R4, #604                @ 0x25c 
    /*0002b3b4*/ LDR         R5, [SP, #44]               @ 0x2c 
    /*0002b3b8*/ LDR         R3, [R4, #556]              @ 0x22c 
    /*0002b3bc*/ BFI         R3, R5, #9, #9 
    /*0002b3c0*/ STR         R3, [R4, #556]              @ 0x22c 
    /*0002b3c4*/ MOV         R5, R2 
    /*0002b3c8*/ LDR         R9, [SP, #172]              @ 0xac 
    /*0002b3cc*/ LDRH        R2, [R2] 
    /*0002b3d0*/ LSR         R3, R3, #16 
    /*0002b3d4*/ BFI         R2, R9, #0, #9 
    /*0002b3d8*/ STRH        R2, [R5] 
    /*0002b3dc*/ LDR         R9, [SP, #48]               @ 0x30 
    /*0002b3e0*/ ADD         R2, R4, #564                @ 0x234 
    /*0002b3e4*/ BFI         R3, R9, #2, #9 
    /*0002b3e8*/ STRH        R3, [R8, #2] 
    /*0002b3ec*/ LDR         R8, [SP, #176]              @ 0xb0 
    /*0002b3f0*/ LDR         R3, [R4, #600]              @ 0x258 
    /*0002b3f4*/ BFI         R3, R8, #9, #9 
    /*0002b3f8*/ STR         R3, [R4, #600]              @ 0x258 
    /*0002b3fc*/ LDR         R8, [SP, #180]              @ 0xb4 
    /*0002b400*/ LSR         R3, R3, #16 
    /*0002b404*/ LDR         R9, [SP, #52]               @ 0x34 
    /*0002b408*/ BFI         R3, R8, #2, #9 
    /*0002b40c*/ LDRH        R8, [IP] 
    /*0002b410*/ BFI         R8, R9, #0, #9 
    /*0002b414*/ STRH        R8, [IP] 
    /*0002b418*/ STRH        R3, [R5, #2] 
    /*0002b41c*/ ADD         R5, R4, #608                @ 0x260 
    /*0002b420*/ LDR         R8, [SP, #56]               @ 0x38 
    /*0002b424*/ LDR         R3, [R4, #560]              @ 0x230 
    /*0002b428*/ BFI         R3, R8, #9, #9 
    /*0002b42c*/ STR         R3, [R4, #560]              @ 0x230 
    /*0002b430*/ LDR         R8, [SP, #60]               @ 0x3c 
    /*0002b434*/ LSR         R3, R3, #16 
    /*0002b438*/ LDR         R9, [SP, #184]              @ 0xb8 
    /*0002b43c*/ BFI         R3, R8, #2, #9 
    /*0002b440*/ LDRH        R8, [R1] 
    /*0002b444*/ BFI         R8, R9, #0, #9 
    /*0002b448*/ STRH        R8, [R1] 
    /*0002b44c*/ STRH        R3, [IP, #2] 
    /*0002b450*/ ADD         IP, R4, #568                @ 0x238 
    /*0002b454*/ LDR         R8, [SP, #188]              @ 0xbc 
    /*0002b458*/ LDR         R3, [R4, #604]              @ 0x25c 
    /*0002b45c*/ BFI         R3, R8, #9, #9 
    /*0002b460*/ STR         R3, [R4, #604]              @ 0x25c 
    /*0002b464*/ LDR         R8, [SP, #192]              @ 0xc0 
    /*0002b468*/ LSR         R3, R3, #16 
    /*0002b46c*/ LDR         R9, [SP, #64]               @ 0x40 
    /*0002b470*/ BFI         R3, R8, #2, #9 
    /*0002b474*/ MOV         R8, R2 
    /*0002b478*/ LDRH        R2, [R2] 
    /*0002b47c*/ BFI         R2, R9, #0, #9 
    /*0002b480*/ STRH        R2, [R8] 
    /*0002b484*/ STRH        R3, [R1, #2] 
    /*0002b488*/ ADD         R2, R4, #612                @ 0x264 
    /*0002b48c*/ LDR         R1, [SP, #68]               @ 0x44 
    /*0002b490*/ LDR         R3, [R4, #564]              @ 0x234 
    /*0002b494*/ BFI         R3, R1, #9, #9 
    /*0002b498*/ STR         R3, [R4, #564]              @ 0x234 
    /*0002b49c*/ LDR         R9, [SP, #196]              @ 0xc4 
    /*0002b4a0*/ LDRH        R1, [R5] 
    /*0002b4a4*/ LSR         R3, R3, #16 
    /*0002b4a8*/ BFI         R1, R9, #0, #9 
    /*0002b4ac*/ STRH        R1, [R5] 
    /*0002b4b0*/ LDR         R1, [SP, #72]               @ 0x48 
    /*0002b4b4*/ BFI         R3, R1, #2, #9 
    /*0002b4b8*/ STRH        R3, [R8, #2] 
    /*0002b4bc*/ LDR         R1, [SP, #200]              @ 0xc8 
    /*0002b4c0*/ LDR         R3, [R4, #608]              @ 0x260 
    /*0002b4c4*/ BFI         R3, R1, #9, #9 
    /*0002b4c8*/ STR         R3, [R4, #608]              @ 0x260 
    /*0002b4cc*/ LDR         R1, [SP, #204]              @ 0xcc 
    /*0002b4d0*/ LSR         R3, R3, #16 
    /*0002b4d4*/ LDR         R8, [SP, #76]               @ 0x4c 
    /*0002b4d8*/ BFI         R3, R1, #2, #9 
    /*0002b4dc*/ LDRH        R1, [IP] 
    /*0002b4e0*/ BFI         R1, R8, #0, #9 
    /*0002b4e4*/ STRH        R1, [IP] 
    /*0002b4e8*/ STRH        R3, [R5, #2] 
    /*0002b4ec*/ LDR         R1, [SP, #80]               @ 0x50 
    /*0002b4f0*/ LDR         R3, [R4, #568]              @ 0x238 
    /*0002b4f4*/ BFI         R3, R1, #9, #9 
    /*0002b4f8*/ STR         R3, [R4, #568]              @ 0x238 
    /*0002b4fc*/ LDR         R8, [SP, #84]               @ 0x54 
    /*0002b500*/ LDRH        R1, [R2] 
    /*0002b504*/ LSR         R3, R3, #16 
    /*0002b508*/ LDR         R5, [SP, #208]              @ 0xd0 
    /*0002b50c*/ BFI         R3, R8, #2, #9 
    /*0002b510*/ BFI         R1, R5, #0, #9 
    /*0002b514*/ STRH        R1, [R2] 
    /*0002b518*/ STRH        R3, [IP, #2] 
    /*0002b51c*/ LDR         R2, [SP, #212]              @ 0xd4 
    /*0002b520*/ LDR         R3, [R4, #612]              @ 0x264 
    /*0002b524*/ BFI         R3, R2, #9, #9 
    /*0002b528*/ STR         R3, [R4, #612]              @ 0x264 
    /*0002b52c*/ LDRB        R3, [R6, #175]              @ 0xaf 
    /*0002b530*/ TST         R3, #16 
    /*0002b534*/ BEQ         SetPE0_x2a934
    /*0002b538*/ LDR         R3, [SP, #16] 
    /*0002b53c*/ ADD         R2, SP, #88                 @ 0x58 
    /*0002b540*/ LDR         IP, [SP, #4] 
    /*0002b544*/ CMP         IP, R3 
    /*0002b548*/ MOVLT       R3, IP 
    /*0002b54c*/ SUB         IP, IP, R3 
    /*0002b550*/ ADD         R3, IP, R3, LSL #4 
    /*0002b554*/ ADD         R3, R3, #8 
    SetPE0_x2b558:
    /*0002b558*/ ASR         R1, R3, #4 
    /*0002b55c*/ STR         R1, [R2], #4 
    /*0002b560*/ CMP         R2, R0 
    /*0002b564*/ ADD         R3, R3, IP 
    /*0002b568*/ BNE         SetPE0_x2b558
    /*0002b56c*/ ADD         R1, R4, #572                @ 0x23c 
    /*0002b570*/ LDR         R0, [SP, #88]               @ 0x58 
    /*0002b574*/ LDR         IP, [SP, #92]               @ 0x5c 
    /*0002b578*/ ADD         R2, R4, #576                @ 0x240 
    /*0002b57c*/ LDRH        R3, [R1] 
    /*0002b580*/ BFI         R3, R0, #0, #9 
    /*0002b584*/ STRH        R3, [R1] 
    /*0002b588*/ LDR         R3, [R4, #572]              @ 0x23c 
    /*0002b58c*/ ADD         R0, R4, #580                @ 0x244 
    /*0002b590*/ BFI         R3, IP, #9, #9 
    /*0002b594*/ STR         R3, [R4, #572]              @ 0x23c 
    /*0002b598*/ LDR         IP, [SP, #96]               @ 0x60 
    /*0002b59c*/ LSR         R3, R3, #16 
    /*0002b5a0*/ BFI         R3, IP, #2, #9 
    /*0002b5a4*/ STRH        R3, [R1, #2] 
    /*0002b5a8*/ LDR         IP, [SP, #100]              @ 0x64 
    /*0002b5ac*/ ADD         R1, R4, #584                @ 0x248 
    /*0002b5b0*/ LDRH        R3, [R2] 
    /*0002b5b4*/ BFI         R3, IP, #0, #9 
    /*0002b5b8*/ LDR         IP, [SP, #104]              @ 0x68 
    /*0002b5bc*/ STRH        R3, [R2] 
    /*0002b5c0*/ LDR         R3, [R4, #576]              @ 0x240 
    /*0002b5c4*/ BFI         R3, IP, #9, #9 
    /*0002b5c8*/ STR         R3, [R4, #576]              @ 0x240 
    /*0002b5cc*/ LDR         IP, [SP, #108]              @ 0x6c 
    /*0002b5d0*/ LSR         R3, R3, #16 
    /*0002b5d4*/ BFI         R3, IP, #2, #9 
    /*0002b5d8*/ STRH        R3, [R2, #2] 
    /*0002b5dc*/ LDR         IP, [SP, #112]              @ 0x70 
    /*0002b5e0*/ ADD         R2, R4, #588                @ 0x24c 
    /*0002b5e4*/ LDRH        R3, [R0] 
    /*0002b5e8*/ BFI         R3, IP, #0, #9 
    /*0002b5ec*/ LDR         IP, [SP, #116]              @ 0x74 
    /*0002b5f0*/ STRH        R3, [R0] 
    /*0002b5f4*/ LDR         R3, [R4, #580]              @ 0x244 
    /*0002b5f8*/ BFI         R3, IP, #9, #9 
    /*0002b5fc*/ STR         R3, [R4, #580]              @ 0x244 
    /*0002b600*/ LDR         IP, [SP, #120]              @ 0x78 
    /*0002b604*/ LSR         R3, R3, #16 
    /*0002b608*/ BFI         R3, IP, #2, #9 
    /*0002b60c*/ STRH        R3, [R0, #2] 
    /*0002b610*/ LDR         R0, [SP, #124]              @ 0x7c 
    /*0002b614*/ LDRH        R3, [R1] 
    /*0002b618*/ BFI         R3, R0, #0, #9 
    /*0002b61c*/ LDR         R0, [SP, #128]              @ 0x80 
    /*0002b620*/ STRH        R3, [R1] 
    /*0002b624*/ LDR         R3, [R4, #584]              @ 0x248 
    /*0002b628*/ BFI         R3, R0, #9, #9 
    /*0002b62c*/ STR         R3, [R4, #584]              @ 0x248 
    /*0002b630*/ LDR         R0, [SP, #132]              @ 0x84 
    /*0002b634*/ LSR         R3, R3, #16 
    /*0002b638*/ BFI         R3, R0, #2, #9 
    /*0002b63c*/ STRH        R3, [R1, #2] 
    /*0002b640*/ LDR         R0, [SP, #136]              @ 0x88 
    /*0002b644*/ LDRH        R3, [R2] 
    /*0002b648*/ LDR         R1, [SP, #140]              @ 0x8c 
    /*0002b64c*/ BFI         R3, R0, #0, #9 
    /*0002b650*/ STRH        R3, [R2] 
    /*0002b654*/ LDR         R3, [R4, #588]              @ 0x24c 
    /*0002b658*/ BFI         R3, R1, #9, #9 
    /*0002b65c*/ STR         R3, [R4, #588]              @ 0x24c 
    /*0002b660*/ LDR         R1, [SP, #144]              @ 0x90 
    /*0002b664*/ LSR         R3, R3, #16 
    /*0002b668*/ BFI         R3, R1, #2, #9 
    /*0002b66c*/ STRH        R3, [R2, #2] 
    /*0002b670*/ LDR         R2, [SP, #148]              @ 0x94 
    /*0002b674*/ LDRH        R3, [LR] 
    /*0002b678*/ BFI         R3, R2, #0, #9 
    /*0002b67c*/ STRH        R3, [LR] 
    /*0002b680*/ B           SetPE0_x2a934
    SetPE0_x2b684:
    /*0002b684*/ LDRB        R0, [R6, #23] 
    /*0002b688*/ MOV         R3, R6 
    /*0002b68c*/ LDRB        IP, [R4, #10] 
    /*0002b690*/ ADD         R2, SP, #12 
    /*0002b694*/ UBFX        R0, R0, #4, #1 
    /*0002b698*/ MOV         R1, SP 
    /*0002b69c*/ BFI         IP, R0, #6, #1 
    /*0002b6a0*/ MOV         R0, R7 
    /*0002b6a4*/ STRB        IP, [R4, #10] 
    /*0002b6a8*/ BL          0x000000000002A730 
    /*0002b6ac*/ LDRB        R3, [R6, #19] 
    /*0002b6b0*/ LDRB        R0, [R4, #128]              @ 0x80 
    /*0002b6b4*/ ADD         R2, SP, #20 
    /*0002b6b8*/ UBFX        R3, R3, #4, #3 
    /*0002b6bc*/ LDRB        R1, [R4, #129]              @ 0x81 
    /*0002b6c0*/ BFI         R0, R3, #0, #4 
    /*0002b6c4*/ STRB        R0, [R4, #128]              @ 0x80 
    /*0002b6c8*/ LDRB        R3, [R6, #19] 
    /*0002b6cc*/ ADD         IP, SP, #84                 @ 0x54 
    /*0002b6d0*/ UXTB        R0, R0 
    /*0002b6d4*/ UBFX        R3, R3, #1, #3 
    /*0002b6d8*/ BFI         R0, R3, #4, #4 
    /*0002b6dc*/ STRB        R0, [R4, #128]              @ 0x80 
    /*0002b6e0*/ LDRB        R3, [R6, #21] 
    /*0002b6e4*/ UBFX        R3, R3, #1, #3 
    /*0002b6e8*/ BFI         R1, R3, #0, #4 
    /*0002b6ec*/ STRB        R1, [R4, #129]              @ 0x81 
    /*0002b6f0*/ LDRB        R3, [R6, #23] 
    /*0002b6f4*/ UXTB        R1, R1 
    /*0002b6f8*/ UBFX        R3, R3, #1, #3 
    /*0002b6fc*/ BFI         R1, R3, #4, #4 
    /*0002b700*/ STRB        R1, [R4, #129]              @ 0x81 
    /*0002b704*/ LDR         R3, [SP, #12] 
    /*0002b708*/ LDR         R0, [SP] 
    /*0002b70c*/ CMP         R0, R3 
    /*0002b710*/ MOVLT       R3, R0 
    /*0002b714*/ SUB         R0, R0, R3 
    /*0002b718*/ ADD         R3, R0, R3, LSL #4 
    /*0002b71c*/ ADD         R3, R3, #8 
    SetPE0_x2b720:
    /*0002b720*/ ASR         R1, R3, #4 
    /*0002b724*/ STR         R1, [R2, #4]! 
    /*0002b728*/ CMP         R2, IP 
    /*0002b72c*/ ADD         R3, R3, R0 
    /*0002b730*/ BNE         SetPE0_x2b720
    /*0002b734*/ LDR         R3, [SP, #20] 
    /*0002b738*/ ADD         R0, SP, #152                @ 0x98 
    /*0002b73c*/ LDR         IP, [SP, #8] 
    /*0002b740*/ ADD         LR, SP, #216                @ 0xd8 
    /*0002b744*/ MOV         R2, R0 
    /*0002b748*/ CMP         IP, R3 
    /*0002b74c*/ MOVLT       R3, IP 
    /*0002b750*/ SUB         IP, IP, R3 
    /*0002b754*/ ADD         R3, IP, R3, LSL #4 
    /*0002b758*/ ADD         R3, R3, #8 
    SetPE0_x2b75c:
    /*0002b75c*/ ASR         R1, R3, #4 
    /*0002b760*/ STR         R1, [R2], #4 
    /*0002b764*/ CMP         LR, R2 
    /*0002b768*/ ADD         R3, R3, IP 
    /*0002b76c*/ BNE         SetPE0_x2b75c
    /*0002b770*/ LDR         R1, [SP, #24] 
    /*0002b774*/ LDRH        R2, [R4, #130]              @ 0x82 
    /*0002b778*/ LDR         R3, [R4, #172]              @ 0xac 
    /*0002b77c*/ BFI         R2, R1, #0, #9 
    /*0002b780*/ STRH        R2, [R4, #130]              @ 0x82 
    /*0002b784*/ LDR         R1, [SP, #152]              @ 0x98 
    /*0002b788*/ LDRH        R2, [R4, #132]              @ 0x84 
    /*0002b78c*/ BFI         R3, R1, #9, #9 
    /*0002b790*/ STR         R3, [R4, #172]              @ 0xac 
    /*0002b794*/ LDR         IP, [SP, #156]              @ 0x9c 
    /*0002b798*/ LDR         R1, [SP, #28] 
    /*0002b79c*/ LSR         R3, R3, #16 
    /*0002b7a0*/ BFI         R3, IP, #2, #9 
    /*0002b7a4*/ STRH        R3, [R4, #174]              @ 0xae 
    /*0002b7a8*/ BFI         R2, R1, #0, #9 
    /*0002b7ac*/ LDR         R1, [SP, #32] 
    /*0002b7b0*/ STRH        R2, [R4, #132]              @ 0x84 
    /*0002b7b4*/ LDR         R3, [R4, #132]              @ 0x84 
    /*0002b7b8*/ LDRH        R2, [R4, #176]              @ 0xb0 
    /*0002b7bc*/ BFI         R3, R1, #9, #9 
    /*0002b7c0*/ STR         R3, [R4, #132]              @ 0x84 
    /*0002b7c4*/ LDR         IP, [SP, #36]               @ 0x24 
    /*0002b7c8*/ LDR         R1, [SP, #160]              @ 0xa0 
    /*0002b7cc*/ LSR         R3, R3, #16 
    /*0002b7d0*/ BFI         R3, IP, #2, #9 
    /*0002b7d4*/ STRH        R3, [R4, #134]              @ 0x86 
    /*0002b7d8*/ BFI         R2, R1, #0, #9 
    /*0002b7dc*/ LDR         R1, [SP, #164]              @ 0xa4 
    /*0002b7e0*/ STRH        R2, [R4, #176]              @ 0xb0 
    /*0002b7e4*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*0002b7e8*/ LDRH        R2, [R4, #136]              @ 0x88 
    /*0002b7ec*/ BFI         R3, R1, #9, #9 
    /*0002b7f0*/ STR         R3, [R4, #176]              @ 0xb0 
    /*0002b7f4*/ LDR         IP, [SP, #168]              @ 0xa8 
    /*0002b7f8*/ LDR         R1, [SP, #40]               @ 0x28 
    /*0002b7fc*/ LSR         R3, R3, #16 
    /*0002b800*/ BFI         R3, IP, #2, #9 
    /*0002b804*/ STRH        R3, [R4, #178]              @ 0xb2 
    /*0002b808*/ LDR         IP, [SP, #44]               @ 0x2c 
    /*0002b80c*/ BFI         R2, R1, #0, #9 
    /*0002b810*/ STRH        R2, [R4, #136]              @ 0x88 
    /*0002b814*/ LDR         R3, [R4, #136]              @ 0x88 
    /*0002b818*/ LDRH        R1, [R4, #180]              @ 0xb4 
    /*0002b81c*/ BFI         R3, IP, #9, #9 
    /*0002b820*/ STR         R3, [R4, #136]              @ 0x88 
    /*0002b824*/ LDR         IP, [SP, #172]              @ 0xac 
    /*0002b828*/ LSR         R2, R3, #16 
    /*0002b82c*/ BFI         R1, IP, #0, #9 
    /*0002b830*/ STRH        R1, [R4, #180]              @ 0xb4 
    /*0002b834*/ LDR         R1, [SP, #48]               @ 0x30 
    /*0002b838*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*0002b83c*/ BFI         R2, R1, #2, #9 
    /*0002b840*/ STRH        R2, [R4, #138]              @ 0x8a 
    /*0002b844*/ LDR         R1, [SP, #176]              @ 0xb0 
    /*0002b848*/ LDRH        R2, [R4, #140]              @ 0x8c 
    /*0002b84c*/ BFI         R3, R1, #9, #9 
    /*0002b850*/ STR         R3, [R4, #180]              @ 0xb4 
    /*0002b854*/ LDR         IP, [SP, #180]              @ 0xb4 
    /*0002b858*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0002b85c*/ LSR         R3, R3, #16 
    /*0002b860*/ BFI         R3, IP, #2, #9 
    /*0002b864*/ STRH        R3, [R4, #182]              @ 0xb6 
    /*0002b868*/ BFI         R2, R1, #0, #9 
    /*0002b86c*/ LDR         R1, [SP, #56]               @ 0x38 
    /*0002b870*/ STRH        R2, [R4, #140]              @ 0x8c 
    /*0002b874*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*0002b878*/ LDRH        R2, [R4, #184]              @ 0xb8 
    /*0002b87c*/ BFI         R3, R1, #9, #9 
    /*0002b880*/ STR         R3, [R4, #140]              @ 0x8c 
    /*0002b884*/ LDR         IP, [SP, #60]               @ 0x3c 
    /*0002b888*/ LDR         R1, [SP, #184]              @ 0xb8 
    /*0002b88c*/ LSR         R3, R3, #16 
    /*0002b890*/ BFI         R3, IP, #2, #9 
    /*0002b894*/ STRH        R3, [R4, #142]              @ 0x8e 
    /*0002b898*/ BFI         R2, R1, #0, #9 
    /*0002b89c*/ LDR         R1, [SP, #188]              @ 0xbc 
    /*0002b8a0*/ STRH        R2, [R4, #184]              @ 0xb8 
    /*0002b8a4*/ LDR         R3, [R4, #184]              @ 0xb8 
    /*0002b8a8*/ LDRH        R2, [R4, #144]              @ 0x90 
    /*0002b8ac*/ BFI         R3, R1, #9, #9 
    /*0002b8b0*/ STR         R3, [R4, #184]              @ 0xb8 
    /*0002b8b4*/ LDR         IP, [SP, #192]              @ 0xc0 
    /*0002b8b8*/ LDR         R1, [SP, #64]               @ 0x40 
    /*0002b8bc*/ LSR         R3, R3, #16 
    /*0002b8c0*/ BFI         R3, IP, #2, #9 
    /*0002b8c4*/ STRH        R3, [R4, #186]              @ 0xba 
    /*0002b8c8*/ LDR         IP, [SP, #68]               @ 0x44 
    /*0002b8cc*/ BFI         R2, R1, #0, #9 
    /*0002b8d0*/ STRH        R2, [R4, #144]              @ 0x90 
    /*0002b8d4*/ LDR         R3, [R4, #144]              @ 0x90 
    /*0002b8d8*/ LDRH        R1, [R4, #188]              @ 0xbc 
    /*0002b8dc*/ BFI         R3, IP, #9, #9 
    /*0002b8e0*/ STR         R3, [R4, #144]              @ 0x90 
    /*0002b8e4*/ LDR         IP, [SP, #196]              @ 0xc4 
    /*0002b8e8*/ LSR         R2, R3, #16 
    /*0002b8ec*/ BFI         R1, IP, #0, #9 
    /*0002b8f0*/ STRH        R1, [R4, #188]              @ 0xbc 
    /*0002b8f4*/ LDR         R1, [SP, #72]               @ 0x48 
    /*0002b8f8*/ LDR         R3, [R4, #188]              @ 0xbc 
    /*0002b8fc*/ BFI         R2, R1, #2, #9 
    /*0002b900*/ STRH        R2, [R4, #146]              @ 0x92 
    /*0002b904*/ LDR         R1, [SP, #200]              @ 0xc8 
    /*0002b908*/ LDRH        R2, [R4, #148]              @ 0x94 
    /*0002b90c*/ BFI         R3, R1, #9, #9 
    /*0002b910*/ STR         R3, [R4, #188]              @ 0xbc 
    /*0002b914*/ LDR         IP, [SP, #204]              @ 0xcc 
    /*0002b918*/ LDR         R1, [SP, #76]               @ 0x4c 
    /*0002b91c*/ LSR         R3, R3, #16 
    /*0002b920*/ BFI         R3, IP, #2, #9 
    /*0002b924*/ STRH        R3, [R4, #190]              @ 0xbe 
    /*0002b928*/ BFI         R2, R1, #0, #9 
    /*0002b92c*/ LDR         R1, [SP, #80]               @ 0x50 
    /*0002b930*/ STRH        R2, [R4, #148]              @ 0x94 
    /*0002b934*/ LDR         R3, [R4, #148]              @ 0x94 
    /*0002b938*/ LDRH        R2, [R4, #192]              @ 0xc0 
    /*0002b93c*/ BFI         R3, R1, #9, #9 
    /*0002b940*/ STR         R3, [R4, #148]              @ 0x94 
    /*0002b944*/ LDR         IP, [SP, #84]               @ 0x54 
    /*0002b948*/ LDR         R1, [SP, #208]              @ 0xd0 
    /*0002b94c*/ LSR         R3, R3, #16 
    /*0002b950*/ BFI         R3, IP, #2, #9 
    /*0002b954*/ STRH        R3, [R4, #150]              @ 0x96 
    /*0002b958*/ BFI         R2, R1, #0, #9 
    /*0002b95c*/ LDR         R1, [SP, #212]              @ 0xd4 
    /*0002b960*/ STRH        R2, [R4, #192]              @ 0xc0 
    /*0002b964*/ LDR         R3, [R4, #192]              @ 0xc0 
    /*0002b968*/ BFI         R3, R1, #9, #9 
    /*0002b96c*/ STR         R3, [R4, #192]              @ 0xc0 
    /*0002b970*/ LDRB        R3, [R6, #23] 
    /*0002b974*/ TST         R3, #16 
    /*0002b978*/ BEQ         SetPE0_x2a928
    /*0002b97c*/ LDR         R3, [SP, #16] 
    /*0002b980*/ ADD         R2, SP, #88                 @ 0x58 
    /*0002b984*/ LDR         IP, [SP, #4] 
    /*0002b988*/ CMP         IP, R3 
    /*0002b98c*/ MOVLT       R3, IP 
    /*0002b990*/ SUB         IP, IP, R3 
    /*0002b994*/ ADD         R3, IP, R3, LSL #4 
    /*0002b998*/ ADD         R3, R3, #8 
    SetPE0_x2b99c:
    /*0002b99c*/ ASR         R1, R3, #4 
    /*0002b9a0*/ STR         R1, [R2], #4 
    /*0002b9a4*/ CMP         R0, R2 
    /*0002b9a8*/ ADD         R3, R3, IP 
    /*0002b9ac*/ BNE         SetPE0_x2b99c
    /*0002b9b0*/ LDR         R2, [SP, #88]               @ 0x58 
    /*0002b9b4*/ LDRH        R3, [R4, #152]              @ 0x98 
    /*0002b9b8*/ LDR         R1, [SP, #92]               @ 0x5c 
    /*0002b9bc*/ BFI         R3, R2, #0, #9 
    /*0002b9c0*/ STRH        R3, [R4, #152]              @ 0x98 
    /*0002b9c4*/ LDR         R3, [R4, #152]              @ 0x98 
    /*0002b9c8*/ LDRH        R2, [R4, #156]              @ 0x9c 
    /*0002b9cc*/ BFI         R3, R1, #9, #9 
    /*0002b9d0*/ STR         R3, [R4, #152]              @ 0x98 
    /*0002b9d4*/ LDR         R0, [SP, #96]               @ 0x60 
    /*0002b9d8*/ LSR         R3, R3, #16 
    /*0002b9dc*/ LDRH        R1, [R4, #160]              @ 0xa0 
    /*0002b9e0*/ BFI         R3, R0, #2, #9 
    /*0002b9e4*/ STRH        R3, [R4, #154]              @ 0x9a 
    /*0002b9e8*/ LDR         R3, [SP, #100]              @ 0x64 
    /*0002b9ec*/ LDR         R0, [SP, #104]              @ 0x68 
    /*0002b9f0*/ BFI         R2, R3, #0, #9 
    /*0002b9f4*/ STRH        R2, [R4, #156]              @ 0x9c 
    /*0002b9f8*/ LDR         R3, [R4, #156]              @ 0x9c 
    /*0002b9fc*/ LDRH        R2, [R4, #164]              @ 0xa4 
    /*0002ba00*/ BFI         R3, R0, #9, #9 
    /*0002ba04*/ STR         R3, [R4, #156]              @ 0x9c 
    /*0002ba08*/ LDR         R0, [SP, #108]              @ 0x6c 
    /*0002ba0c*/ LSR         R3, R3, #16 
    /*0002ba10*/ BFI         R3, R0, #2, #9 
    /*0002ba14*/ STRH        R3, [R4, #158]              @ 0x9e 
    /*0002ba18*/ LDR         R3, [SP, #112]              @ 0x70 
    /*0002ba1c*/ LDR         R0, [SP, #116]              @ 0x74 
    /*0002ba20*/ BFI         R1, R3, #0, #9 
    /*0002ba24*/ STRH        R1, [R4, #160]              @ 0xa0 
    /*0002ba28*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*0002ba2c*/ BFI         R3, R0, #9, #9 
    /*0002ba30*/ STR         R3, [R4, #160]              @ 0xa0 
    /*0002ba34*/ LDR         R1, [SP, #120]              @ 0x78 
    /*0002ba38*/ LSR         R3, R3, #16 
    /*0002ba3c*/ BFI         R3, R1, #2, #9 
    /*0002ba40*/ STRH        R3, [R4, #162]              @ 0xa2 
    /*0002ba44*/ LDR         R3, [SP, #124]              @ 0x7c 
    /*0002ba48*/ LDR         R1, [SP, #128]              @ 0x80 
    /*0002ba4c*/ BFI         R2, R3, #0, #9 
    /*0002ba50*/ STRH        R2, [R4, #164]              @ 0xa4 
    /*0002ba54*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*0002ba58*/ BFI         R3, R1, #9, #9 
    /*0002ba5c*/ STR         R3, [R4, #164]              @ 0xa4 
    /*0002ba60*/ LDR         R2, [SP, #132]              @ 0x84 
    /*0002ba64*/ LSR         R3, R3, #16 
    /*0002ba68*/ BFI         R3, R2, #2, #9 
    /*0002ba6c*/ STRH        R3, [R4, #166]              @ 0xa6 
    /*0002ba70*/ LDR         R2, [SP, #136]              @ 0x88 
    /*0002ba74*/ LDRH        R3, [R4, #168]              @ 0xa8 
    /*0002ba78*/ LDR         R1, [SP, #140]              @ 0x8c 
    /*0002ba7c*/ BFI         R3, R2, #0, #9 
    /*0002ba80*/ STRH        R3, [R4, #168]              @ 0xa8 
    /*0002ba84*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*0002ba88*/ LDRH        R2, [R4, #172]              @ 0xac 
    /*0002ba8c*/ BFI         R3, R1, #9, #9 
    /*0002ba90*/ STR         R3, [R4, #168]              @ 0xa8 
    /*0002ba94*/ LDR         R1, [SP, #144]              @ 0x90 
    /*0002ba98*/ LSR         R3, R3, #16 
    /*0002ba9c*/ BFI         R3, R1, #2, #9 
    /*0002baa0*/ STRH        R3, [R4, #170]              @ 0xaa 
    /*0002baa4*/ LDR         R3, [SP, #148]              @ 0x94 
    /*0002baa8*/ BFI         R2, R3, #0, #9 
    /*0002baac*/ STRH        R2, [R4, #172]              @ 0xac 
    /*0002bab0*/ B           SetPE0_x2a928
    /*0002bab4*/ ANDEQ       R1, R0, R8, ROR #12 
FUNC_END SetPE0


FUNC_BEGIN SetSFi
    /*0002bab8*/ CMP         R0, #0 
    /*0002babc*/ CMPNE       R2, #0 
    /*0002bac0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002bac4*/ SUB         SP, SP, #308                @ 0x134 
    /*0002bac8*/ BEQ         SetSFi_x2c02c
    /*0002bacc*/ CMP         R1, #0 
    /*0002bad0*/ CMPNE       R3, #0 
    /*0002bad4*/ MOV         R6, R2 
    /*0002bad8*/ LDR         R2, [SP, #344]              @ 0x158 
    /*0002badc*/ MOV         R5, R3 
    /*0002bae0*/ MOVNE       R3, #1 
    /*0002bae4*/ MOVEQ       R3, #0 
    /*0002bae8*/ CMP         R2, #0 
    /*0002baec*/ MOVEQ       R3, #0 
    /*0002baf0*/ ANDNE       R3, R3, #1 
    /*0002baf4*/ MOV         R4, R1 
    /*0002baf8*/ CMP         R3, #0 
    /*0002bafc*/ BEQ         SetSFi_x2c02c
    /*0002bb00*/ LDRB        R3, [R2] 
    /*0002bb04*/ TST         R3, #30 
    /*0002bb08*/ BEQ         SetSFi_x2bb24
    /*0002bb0c*/ LDRB        R3, [R6, #14] 
    /*0002bb10*/ LDRB        R1, [R6, #11] 
    /*0002bb14*/ LDRB        R2, [R6, #8] 
    /*0002bb18*/ ORR         R3, R3, R1 
    /*0002bb1c*/ ORRS        R3, R3, R2 
    /*0002bb20*/ BNE         SetSFi_x2c050
    SetSFi_x2bb24:
    /*0002bb24*/ LDR         R3, [SP, #344]              @ 0x158 
    /*0002bb28*/ LDRB        R3, [R3, #1] 
    /*0002bb2c*/ TST         R3, #30 
    /*0002bb30*/ BEQ         SetSFi_x2c048
    /*0002bb34*/ LDRB        R3, [R5, #14] 
    /*0002bb38*/ LDRB        R1, [R5, #11] 
    /*0002bb3c*/ LDRB        R2, [R5, #8] 
    /*0002bb40*/ ORR         R3, R3, R1 
    /*0002bb44*/ ORRS        R3, R3, R2 
    /*0002bb48*/ BEQ         SetSFi_x2c048
    /*0002bb4c*/ ADD         R3, SP, #244                @ 0xf4 
    /*0002bb50*/ ADD         R2, SP, #184                @ 0xb8 
    /*0002bb54*/ ADD         R1, SP, #124                @ 0x7c 
    /*0002bb58*/ ADD         R0, SP, #64                 @ 0x40 
    /*0002bb5c*/ STR         R5, [SP] 
    /*0002bb60*/ BL          0x000000000002A54C 
    /*0002bb64*/ LDRH        R0, [SP, #64]               @ 0x40 
    /*0002bb68*/ LDR         R3, [R4, #16] 
    /*0002bb6c*/ LDR         R1, [SP, #124]              @ 0x7c 
    /*0002bb70*/ UBFX        R7, R0, #0, #10 
    /*0002bb74*/ BFI         R3, R7, #20, #10 
    /*0002bb78*/ STR         R3, [R4, #16] 
    /*0002bb7c*/ LDR         R3, [R4, #12] 
    /*0002bb80*/ UXTB        IP, R1 
    /*0002bb84*/ LDR         LR, [SP, #84]               @ 0x54 
    /*0002bb88*/ BFI         R3, IP, #16, #8 
    /*0002bb8c*/ STR         R3, [R4, #12] 
    /*0002bb90*/ LDR         R3, [R4, #20] 
    /*0002bb94*/ UBFX        LR, LR, #0, #11 
    /*0002bb98*/ LDR         R2, [SP, #144]              @ 0x90 
    /*0002bb9c*/ BFI         R3, R7, #0, #10 
    /*0002bba0*/ STR         R3, [R4, #20] 
    /*0002bba4*/ LDR         R3, [R4, #12] 
    /*0002bba8*/ LDR         R7, [SP, #88]               @ 0x58 
    /*0002bbac*/ UXTB        R9, R2 
    /*0002bbb0*/ BFI         R3, IP, #24, #8 
    /*0002bbb4*/ STR         R3, [R4, #12] 
    /*0002bbb8*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0002bbbc*/ UBFX        R7, R7, #0, #12 
    /*0002bbc0*/ LDR         FP, [SP, #148]              @ 0x94 
    /*0002bbc4*/ ORR         IP, LR, R7 
    /*0002bbc8*/ BFI         R3, LR, #12, #11 
    /*0002bbcc*/ STR         IP, [SP, #32] 
    /*0002bbd0*/ STR         R3, [R4, #36]               @ 0x24 
    /*0002bbd4*/ UBFX        FP, FP, #0, #9 
    /*0002bbd8*/ LDR         IP, [R4, #28] 
    /*0002bbdc*/ LDR         R3, [SP, #104]              @ 0x68 
    /*0002bbe0*/ BFI         IP, R9, #0, #8 
    /*0002bbe4*/ STR         IP, [R4, #28] 
    /*0002bbe8*/ LDR         SL, [R4, #40]               @ 0x28 
    /*0002bbec*/ LDR         IP, [SP, #164]              @ 0xa4 
    /*0002bbf0*/ UXTB        R8, R3 
    /*0002bbf4*/ BFI         SL, LR, #0, #11 
    /*0002bbf8*/ STR         SL, [R4, #40]               @ 0x28 
    /*0002bbfc*/ LDR         LR, [R4, #28] 
    /*0002bc00*/ ORR         R3, R3, IP 
    /*0002bc04*/ STR         R3, [SP, #36]               @ 0x24 
    /*0002bc08*/ UXTB        IP, IP 
    /*0002bc0c*/ BFI         LR, R9, #8, #8 
    /*0002bc10*/ STR         LR, [R4, #28] 
    /*0002bc14*/ LDR         R3, [R4, #40]               @ 0x28 
    /*0002bc18*/ BFI         R3, R7, #11, #12 
    /*0002bc1c*/ STR         R3, [R4, #40]               @ 0x28 
    /*0002bc20*/ LDR         R3, [R4, #28] 
    /*0002bc24*/ BFI         R3, FP, #16, #9 
    /*0002bc28*/ STR         R3, [R4, #28] 
    /*0002bc2c*/ LDR         R3, [R4, #104]              @ 0x68 
    /*0002bc30*/ BFI         R3, R8, #12, #8 
    /*0002bc34*/ STR         R3, [R4, #104]              @ 0x68 
    /*0002bc38*/ LDR         R3, [R4, #88]               @ 0x58 
    /*0002bc3c*/ BFI         R3, IP, #12, #8 
    /*0002bc40*/ STR         R3, [R4, #88]               @ 0x58 
    /*0002bc44*/ LDR         LR, [SP, #108]              @ 0x6c 
    /*0002bc48*/ LDR         R3, [R4, #104]              @ 0x68 
    /*0002bc4c*/ UBFX        LR, LR, #0, #9 
    /*0002bc50*/ BFI         R3, R8, #20, #8 
    /*0002bc54*/ STR         R3, [R4, #104]              @ 0x68 
    /*0002bc58*/ LDR         R3, [R4, #88]               @ 0x58 
    /*0002bc5c*/ MOV         R7, LR 
    /*0002bc60*/ LDR         LR, [SP, #168]              @ 0xa8 
    /*0002bc64*/ BFI         R3, IP, #20, #8 
    /*0002bc68*/ STR         R3, [R4, #88]               @ 0x58 
    /*0002bc6c*/ UBFX        IP, LR, #0, #9 
    /*0002bc70*/ LDR         R3, [R4, #108]              @ 0x6c 
    /*0002bc74*/ LDR         LR, [SP, #112]              @ 0x70 
    /*0002bc78*/ STR         R7, [SP, #12] 
    /*0002bc7c*/ BFI         R3, R7, #0, #9 
    /*0002bc80*/ STR         R3, [R4, #108]              @ 0x6c 
    /*0002bc84*/ UBFX        R3, LR, #0, #10 
    /*0002bc88*/ MOV         R8, IP 
    /*0002bc8c*/ LDR         IP, [R4, #92]               @ 0x5c 
    /*0002bc90*/ MOV         SL, R3 
    /*0002bc94*/ LDR         R3, [SP, #172]              @ 0xac 
    /*0002bc98*/ STR         R8, [SP, #16] 
    /*0002bc9c*/ BFI         IP, R8, #0, #9 
    /*0002bca0*/ STR         IP, [R4, #92]               @ 0x5c 
    /*0002bca4*/ UBFX        R3, R3, #0, #10 
    /*0002bca8*/ LDR         IP, [R4, #108]              @ 0x6c 
    /*0002bcac*/ LDR         R9, [SP, #116]              @ 0x74 
    /*0002bcb0*/ MOV         R8, R3 
    /*0002bcb4*/ STR         SL, [SP, #20] 
    /*0002bcb8*/ BFI         IP, SL, #9, #10 
    /*0002bcbc*/ UBFX        R9, R9, #0, #11 
    /*0002bcc0*/ STR         IP, [R4, #108]              @ 0x6c 
    /*0002bcc4*/ LDR         R3, [R4, #92]               @ 0x5c 
    /*0002bcc8*/ MOV         IP, R9 
    /*0002bccc*/ STR         R8, [SP, #24] 
    /*0002bcd0*/ LDR         R9, [SP, #176]              @ 0xb0 
    /*0002bcd4*/ BFI         R3, R8, #9, #10 
    /*0002bcd8*/ STR         R3, [R4, #92]               @ 0x5c 
    /*0002bcdc*/ LDR         R3, [R4, #108]              @ 0x6c 
    /*0002bce0*/ UBFX        R9, R9, #0, #11 
    /*0002bce4*/ STR         IP, [SP, #28] 
    /*0002bce8*/ LDR         R8, [SP, #120]              @ 0x78 
    /*0002bcec*/ BFI         R3, IP, #19, #11 
    /*0002bcf0*/ STR         R3, [R4, #108]              @ 0x6c 
    /*0002bcf4*/ LDR         R3, [R4, #92]               @ 0x5c 
    /*0002bcf8*/ UBFX        R8, R8, #0, #12 
    /*0002bcfc*/ LDR         R7, [SP, #180]              @ 0xb4 
    /*0002bd00*/ BFI         R3, R9, #19, #11 
    /*0002bd04*/ STR         R3, [R4, #92]               @ 0x5c 
    /*0002bd08*/ LDR         IP, [R4, #112]              @ 0x70 
    /*0002bd0c*/ UBFX        R7, R7, #0, #12 
    /*0002bd10*/ LDRH        R3, [SP, #184]              @ 0xb8 
    /*0002bd14*/ BFI         IP, R8, #0, #12 
    /*0002bd18*/ STR         IP, [R4, #112]              @ 0x70 
    /*0002bd1c*/ LDR         LR, [R4, #96]               @ 0x60 
    /*0002bd20*/ UBFX        IP, R3, #0, #10 
    /*0002bd24*/ ORR         R3, R0, R3 
    /*0002bd28*/ LDR         R0, [SP, #244]              @ 0xf4 
    /*0002bd2c*/ BFI         LR, R7, #0, #12 
    /*0002bd30*/ STR         LR, [R4, #96]               @ 0x60 
    /*0002bd34*/ LDR         LR, [R4, #16] 
    /*0002bd38*/ ORR         R1, R1, R0 
    /*0002bd3c*/ UBFX        R3, R3, #0, #10 
    /*0002bd40*/ UXTB        R0, R0 
    /*0002bd44*/ BFI         LR, IP, #0, #10 
    /*0002bd48*/ STR         LR, [R4, #16] 
    /*0002bd4c*/ LDR         LR, [R4, #12] 
    /*0002bd50*/ UXTB        R1, R1 
    /*0002bd54*/ ORRS        R1, R1, R3 
    /*0002bd58*/ LDR         R1, [SP, #204]              @ 0xcc 
    /*0002bd5c*/ BFI         LR, R0, #0, #8 
    /*0002bd60*/ STR         LR, [R4, #12] 
    /*0002bd64*/ LDR         R3, [R4, #16] 
    /*0002bd68*/ UBFX        R1, R1, #0, #11 
    /*0002bd6c*/ LDR         LR, [SP, #264]              @ 0x108 
    /*0002bd70*/ BFI         R3, IP, #10, #10 
    /*0002bd74*/ STR         R3, [R4, #16] 
    /*0002bd78*/ LDR         R3, [R4, #12] 
    /*0002bd7c*/ ORR         R2, R2, LR 
    /*0002bd80*/ LDR         SL, [SP, #208]              @ 0xd0 
    /*0002bd84*/ UXTB        LR, LR 
    /*0002bd88*/ BFI         R3, R0, #8, #8 
    /*0002bd8c*/ STR         R3, [R4, #12] 
    /*0002bd90*/ LDR         R3, [R4, #32] 
    /*0002bd94*/ UXTB        R2, R2 
    /*0002bd98*/ LDR         IP, [SP, #224]              @ 0xe0 
    /*0002bd9c*/ UBFX        SL, SL, #0, #12 
    /*0002bda0*/ BFI         R3, R1, #0, #11 
    /*0002bda4*/ STR         R3, [R4, #32] 
    /*0002bda8*/ LDR         R0, [SP, #32] 
    /*0002bdac*/ LDR         R3, [R4, #24] 
    /*0002bdb0*/ ORR         R2, R2, R0 
    /*0002bdb4*/ LDR         R0, [SP, #284]              @ 0x11c 
    /*0002bdb8*/ ORR         R2, R2, FP 
    /*0002bdbc*/ BFI         R3, LR, #0, #8 
    /*0002bdc0*/ STR         R2, [SP, #32] 
    /*0002bdc4*/ STR         R3, [R4, #24] 
    /*0002bdc8*/ ORR         R3, IP, R0 
    /*0002bdcc*/ LDR         FP, [R4, #32] 
    /*0002bdd0*/ UXTB        IP, IP 
    /*0002bdd4*/ UXTB        R0, R0 
    /*0002bdd8*/ BFI         FP, R1, #11, #11 
    /*0002bddc*/ STR         FP, [R4, #32] 
    /*0002bde0*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0002bde4*/ LDR         FP, [R4, #24] 
    /*0002bde8*/ ORR         R3, R3, R2 
    /*0002bdec*/ LDR         R2, [SP, #32] 
    /*0002bdf0*/ BFI         FP, LR, #8, #8 
    /*0002bdf4*/ ORR         R2, R1, R2 
    /*0002bdf8*/ LDR         R1, [SP, #268]              @ 0x10c 
    /*0002bdfc*/ STR         FP, [R4, #24] 
    /*0002be00*/ UXTB        R3, R3 
    /*0002be04*/ LDR         LR, [R4, #36]               @ 0x24 
    /*0002be08*/ UBFX        FP, R1, #0, #9 
    /*0002be0c*/ ORR         R2, SL, R2 
    /*0002be10*/ BFI         LR, SL, #0, #12 
    /*0002be14*/ STR         LR, [R4, #36]               @ 0x24 
    /*0002be18*/ LDR         R1, [R4, #24] 
    /*0002be1c*/ LDR         LR, [SP, #12] 
    /*0002be20*/ BFI         R1, FP, #16, #9 
    /*0002be24*/ ORR         R3, R3, LR 
    /*0002be28*/ LDR         LR, [SP, #16] 
    /*0002be2c*/ STR         R1, [R4, #24] 
    /*0002be30*/ LDR         SL, [SP, #20] 
    /*0002be34*/ ORR         R3, R3, LR 
    /*0002be38*/ LDR         R1, [R4, #96]               @ 0x60 
    /*0002be3c*/ MOVNE       LR, #1 
    /*0002be40*/ ORR         R3, R3, SL 
    /*0002be44*/ LDR         SL, [SP, #24] 
    /*0002be48*/ BFI         R1, IP, #12, #8 
    /*0002be4c*/ STR         R1, [R4, #96]               @ 0x60 
    /*0002be50*/ MOVEQ       LR, #0 
    /*0002be54*/ ORR         R3, R3, SL 
    /*0002be58*/ ORRS        SL, FP, R2 
    /*0002be5c*/ LDR         R2, [SP, #28] 
    /*0002be60*/ LDR         R1, [R4, #80]               @ 0x50 
    /*0002be64*/ ORR         R3, R3, R2 
    /*0002be68*/ MOVNE       R2, #1 
    /*0002be6c*/ BFI         R1, R0, #0, #8 
    /*0002be70*/ ORR         R3, R3, R9 
    /*0002be74*/ STR         R1, [R4, #80]               @ 0x50 
    /*0002be78*/ ORR         R3, R3, R8 
    /*0002be7c*/ LDR         R1, [R4, #96]               @ 0x60 
    /*0002be80*/ ORR         R7, R3, R7 
    /*0002be84*/ MOVEQ       R2, #0 
    /*0002be88*/ BFI         R1, IP, #20, #8 
    /*0002be8c*/ STR         R1, [R4, #96]               @ 0x60 
    /*0002be90*/ LDR         R3, [R4, #80]               @ 0x50 
    /*0002be94*/ BFI         R3, R0, #8, #8 
    /*0002be98*/ STR         R3, [R4, #80]               @ 0x50 
    /*0002be9c*/ LDR         R3, [SP, #228]              @ 0xe4 
    /*0002bea0*/ LDR         R1, [R4, #100]              @ 0x64 
    /*0002bea4*/ UBFX        R8, R3, #0, #9 
    /*0002bea8*/ LDR         R3, [SP, #288]              @ 0x120 
    /*0002beac*/ BFI         R1, R8, #0, #9 
    /*0002beb0*/ STR         R1, [R4, #100]              @ 0x64 
    /*0002beb4*/ LDR         R1, [R4, #80]               @ 0x50 
    /*0002beb8*/ UBFX        R0, R3, #0, #9 
    /*0002bebc*/ LDR         IP, [SP, #232]              @ 0xe8 
    /*0002bec0*/ ORR         R3, R7, R8 
    /*0002bec4*/ BFI         R1, R0, #16, #9 
    /*0002bec8*/ STR         R1, [R4, #80]               @ 0x50 
    /*0002becc*/ LDR         R7, [R4, #100]              @ 0x64 
    /*0002bed0*/ UBFX        IP, IP, #0, #10 
    /*0002bed4*/ LDR         R1, [SP, #292]              @ 0x124 
    /*0002bed8*/ ORR         R3, R3, R0 
    /*0002bedc*/ BFI         R7, IP, #9, #10 
    /*0002bee0*/ STR         R7, [R4, #100]              @ 0x64 
    /*0002bee4*/ LDR         R7, [R4, #84]               @ 0x54 
    /*0002bee8*/ UBFX        R1, R1, #0, #10 
    /*0002beec*/ LDR         R0, [SP, #236]              @ 0xec 
    /*0002bef0*/ ORR         R3, R3, IP 
    /*0002bef4*/ BFI         R7, R1, #0, #10 
    /*0002bef8*/ STR         R7, [R4, #84]               @ 0x54 
    /*0002befc*/ LDR         R7, [R4, #100]              @ 0x64 
    /*0002bf00*/ UBFX        R0, R0, #0, #11 
    /*0002bf04*/ LDR         IP, [SP, #296]              @ 0x128 
    /*0002bf08*/ ORR         R3, R3, R1 
    /*0002bf0c*/ BFI         R7, R0, #19, #11 
    /*0002bf10*/ STR         R7, [R4, #100]              @ 0x64 
    /*0002bf14*/ LDR         R7, [R4, #84]               @ 0x54 
    /*0002bf18*/ UBFX        IP, IP, #0, #11 
    /*0002bf1c*/ LDR         R1, [SP, #240]              @ 0xf0 
    /*0002bf20*/ ORR         R3, R3, R0 
    /*0002bf24*/ BFI         R7, IP, #10, #11 
    /*0002bf28*/ STR         R7, [R4, #84]               @ 0x54 
    /*0002bf2c*/ LDR         R7, [R4, #104]              @ 0x68 
    /*0002bf30*/ UBFX        R1, R1, #0, #12 
    /*0002bf34*/ LDR         R0, [SP, #300]              @ 0x12c 
    /*0002bf38*/ ORR         R3, R3, IP 
    /*0002bf3c*/ BFI         R7, R1, #0, #12 
    /*0002bf40*/ STR         R7, [R4, #104]              @ 0x68 
    /*0002bf44*/ LDR         IP, [R4, #88]               @ 0x58 
    /*0002bf48*/ UBFX        R0, R0, #0, #12 
    /*0002bf4c*/ ORR         R3, R3, R1 
    /*0002bf50*/ BFI         IP, R0, #0, #12 
    /*0002bf54*/ STR         IP, [R4, #88]               @ 0x58 
    /*0002bf58*/ LDRB        R1, [R6, #21] 
    /*0002bf5c*/ ORRS        R3, R3, R0 
    /*0002bf60*/ LDR         IP, [R4, #76]               @ 0x4c 
    /*0002bf64*/ UBFX        R3, R1, #4, #1 
    /*0002bf68*/ MOVNE       R0, #1 
    /*0002bf6c*/ ADD         R3, R3, #4 
    /*0002bf70*/ MOVEQ       R0, #0 
    /*0002bf74*/ BFI         IP, R3, #4, #3 
    /*0002bf78*/ STR         IP, [R4, #76]               @ 0x4c 
    /*0002bf7c*/ LDRB        R3, [R6, #21] 
    /*0002bf80*/ LDR         R1, [R4, #76]               @ 0x4c 
    /*0002bf84*/ UBFX        R3, R3, #4, #1 
    /*0002bf88*/ ADD         R3, R3, #3 
    /*0002bf8c*/ BFI         R1, R3, #1, #3 
    /*0002bf90*/ STR         R1, [R4, #76]               @ 0x4c 
    /*0002bf94*/ LDR         R3, [R4, #8] 
    /*0002bf98*/ BFI         R3, LR, #10, #1 
    /*0002bf9c*/ STR         R3, [R4, #8] 
    /*0002bfa0*/ LDR         R3, [R4, #8] 
    /*0002bfa4*/ BFI         R3, R2, #11, #1 
    /*0002bfa8*/ STR         R3, [R4, #8] 
    /*0002bfac*/ LDR         R3, [R4, #76]               @ 0x4c 
    /*0002bfb0*/ BFI         R3, R0, #0, #1 
    /*0002bfb4*/ STR         R3, [R4, #76]               @ 0x4c 
    /*0002bfb8*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*0002bfbc*/ BFC         R3, #0, #1 
    /*0002bfc0*/ STR         R3, [R4, #44]               @ 0x2c 
    /*0002bfc4*/ LDRB        R3, [R5, #3] 
    /*0002bfc8*/ LSR         R3, R3, #5 
    /*0002bfcc*/ CMP         R3, #2 
    /*0002bfd0*/ MOVLE       R1, #0 
    /*0002bfd4*/ MOVLE       R3, #3 
    /*0002bfd8*/ BGT         SetSFi_x2c4cc
    SetSFi_x2bfdc:
    /*0002bfdc*/ LDRB        R2, [R5, #3] 
    /*0002bfe0*/ BFI         R2, R3, #5, #3 
    /*0002bfe4*/ STRB        R2, [R5, #3] 
    /*0002bfe8*/ LDR         R3, [R4, #8] 
    /*0002bfec*/ BFI         R3, R1, #8, #2 
    /*0002bff0*/ STR         R3, [R4, #8] 
    /*0002bff4*/ LDR         R3, [R4, #8] 
    /*0002bff8*/ LDRB        R2, [R5, #4] 
    /*0002bffc*/ BFI         R3, R2, #0, #8 
    /*0002c000*/ STR         R3, [R4, #8] 
    /*0002c004*/ LDRB        R2, [R5, #2] 
    /*0002c008*/ LDR         R3, [R4, #8] 
    /*0002c00c*/ BFI         R3, R2, #12, #5 
    /*0002c010*/ STR         R3, [R4, #8] 
    /*0002c014*/ LDRH        R3, [R5, #2] 
    /*0002c018*/ LDR         R2, [R4, #8] 
    /*0002c01c*/ UBFX        R3, R3, #5, #5 
    /*0002c020*/ BFI         R2, R3, #17, #5 
    /*0002c024*/ STR         R2, [R4, #8] 
    /*0002c028*/ B           SetSFi_x2c048
    SetSFi_x2c02c:
    /*0002c02c*/ MOVW        R3, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c0c] 
    /*0002c030*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c10] 
    /*0002c034*/ MOVT        R3, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c0c] 
    /*0002c038*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c10] 
    /*0002c03c*/ MOVW        R2, #845                    @ 0x34d 
    /*0002c040*/ LDR         R1, [PC, #1180]             @ 0x000000000002c4e4 
    /*0002c044*/ BL          0x000000000002C044          @ osal_panic [R_ARM_CALL: +0x0] 
    SetSFi_x2c048:
    /*0002c048*/ ADD         SP, SP, #308                @ 0x134 
    /*0002c04c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    SetSFi_x2c050:
    /*0002c050*/ MOV         R7, R0 
    /*0002c054*/ ADD         R3, SP, #244                @ 0xf4 
    /*0002c058*/ ADD         R2, SP, #184                @ 0xb8 
    /*0002c05c*/ ADD         R1, SP, #124                @ 0x7c 
    /*0002c060*/ ADD         R0, SP, #64                 @ 0x40 
    /*0002c064*/ STR         R6, [SP] 
    /*0002c068*/ BL          0x000000000002A54C 
    /*0002c06c*/ LDRH        R3, [SP, #64]               @ 0x40 
    /*0002c070*/ MOV         R2, R3 
    /*0002c074*/ LDRH        R3, [R7, #18] 
    /*0002c078*/ UBFX        SL, R2, #0, #10 
    /*0002c07c*/ STR         R2, [SP, #20] 
    /*0002c080*/ BFI         R3, SL, #4, #10 
    /*0002c084*/ STRH        R3, [R7, #18] 
    /*0002c088*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0002c08c*/ LDR         R0, [R7, #36]               @ 0x24 
    /*0002c090*/ LDR         R1, [SP, #124]              @ 0x7c 
    /*0002c094*/ UBFX        R3, R3, #0, #11 
    /*0002c098*/ LDRH        R2, [R7, #40]               @ 0x28 
    /*0002c09c*/ BFI         R0, R3, #12, #11 
    /*0002c0a0*/ STR         R0, [R7, #36]               @ 0x24 
    /*0002c0a4*/ MOV         IP, R1 
    /*0002c0a8*/ LDR         R1, [SP, #88]               @ 0x58 
    /*0002c0ac*/ STR         IP, [SP, #12] 
    /*0002c0b0*/ BFI         R2, R3, #0, #11 
    /*0002c0b4*/ STRH        R2, [R7, #40]               @ 0x28 
    /*0002c0b8*/ UBFX        R1, R1, #0, #12 
    /*0002c0bc*/ LDR         R2, [R7, #40]               @ 0x28 
    /*0002c0c0*/ ORR         R3, R3, R1 
    /*0002c0c4*/ STRH        R0, [SP, #48]               @ 0x30 
    /*0002c0c8*/ LDRB        IP, [SP, #12] 
    /*0002c0cc*/ BFI         R2, R1, #11, #12 
    /*0002c0d0*/ LDR         R8, [SP, #144]              @ 0x90 
    /*0002c0d4*/ STR         R2, [R7, #40]               @ 0x28 
    /*0002c0d8*/ LDR         R2, [SP, #148]              @ 0x94 
    /*0002c0dc*/ STR         R3, [SP, #56]               @ 0x38 
    /*0002c0e0*/ UBFX        R1, R2, #0, #9 
    /*0002c0e4*/ LDRH        R3, [R7, #30] 
    /*0002c0e8*/ STR         R8, [SP, #16] 
    /*0002c0ec*/ MOV         R9, R1 
    /*0002c0f0*/ LDRB        LR, [SP, #16] 
    /*0002c0f4*/ LDR         R1, [R7, #104]              @ 0x68 
    /*0002c0f8*/ BFI         R3, R9, #0, #9 
    /*0002c0fc*/ STR         R9, [SP, #24] 
    /*0002c100*/ STRH        R3, [R7, #30] 
    /*0002c104*/ LDR         R2, [R7, #88]               @ 0x58 
    /*0002c108*/ LDRB        R3, [SP, #104]              @ 0x68 
    /*0002c10c*/ LDRB        R0, [SP, #164]              @ 0xa4 
    /*0002c110*/ BFI         R1, R3, #12, #8 
    /*0002c114*/ LDRH        R9, [R7, #20] 
    /*0002c118*/ BFI         R2, R0, #12, #8 
    /*0002c11c*/ LDRH        R8, [R7, #108]              @ 0x6c 
    /*0002c120*/ BFI         R9, SL, #0, #10 
    /*0002c124*/ LSR         FP, R1, #16 
    /*0002c128*/ LSR         SL, R2, #16 
    /*0002c12c*/ BFI         FP, R3, #4, #8 
    /*0002c130*/ BFI         SL, R0, #4, #8 
    /*0002c134*/ STRH        FP, [R7, #106]              @ 0x6a 
    /*0002c138*/ STRH        SL, [R7, #90]               @ 0x5a 
    /*0002c13c*/ ORR         R3, R3, R0 
    /*0002c140*/ MOV         SL, R1 
    /*0002c144*/ LDR         R0, [SP, #108]              @ 0x6c 
    /*0002c148*/ LDR         R1, [SP, #168]              @ 0xa8 
    /*0002c14c*/ MOV         FP, R2 
    /*0002c150*/ UBFX        R2, R0, #0, #9 
    /*0002c154*/ STRB        IP, [R7, #14] 
    /*0002c158*/ UBFX        R1, R1, #0, #9 
    /*0002c15c*/ BFI         R8, R2, #0, #9 
    /*0002c160*/ STRH        R8, [R7, #108]              @ 0x6c 
    /*0002c164*/ MOV         R0, R1 
    /*0002c168*/ ORR         R1, R3, R2 
    /*0002c16c*/ LDR         R2, [SP, #112]              @ 0x70 
    /*0002c170*/ STR         R1, [SP, #60]               @ 0x3c 
    /*0002c174*/ LDR         R1, [R7, #108]              @ 0x6c 
    /*0002c178*/ LDRH        R3, [R7, #92]               @ 0x5c 
    /*0002c17c*/ STRB        IP, [R7, #15] 
    /*0002c180*/ UBFX        IP, R2, #0, #10 
    /*0002c184*/ STR         R0, [SP, #28] 
    /*0002c188*/ BFI         R1, IP, #9, #10 
    /*0002c18c*/ STR         IP, [SP, #32] 
    /*0002c190*/ BFI         R3, R0, #0, #9 
    /*0002c194*/ STR         R1, [R7, #108]              @ 0x6c 
    /*0002c198*/ LSR         R1, R1, #16 
    /*0002c19c*/ STRH        R3, [R7, #92]               @ 0x5c 
    /*0002c1a0*/ LDR         R3, [SP, #172]              @ 0xac 
    /*0002c1a4*/ LDR         R2, [R7, #92]               @ 0x5c 
    /*0002c1a8*/ UBFX        R3, R3, #0, #10 
    /*0002c1ac*/ STR         R3, [SP, #36]               @ 0x24 
    /*0002c1b0*/ BFI         R2, R3, #9, #10 
    /*0002c1b4*/ STR         R2, [R7, #92]               @ 0x5c 
    /*0002c1b8*/ LDR         IP, [SP, #116]              @ 0x74 
    /*0002c1bc*/ LSR         R2, R2, #16 
    /*0002c1c0*/ LDRH        R0, [R7, #16] 
    /*0002c1c4*/ UBFX        IP, IP, #0, #11 
    /*0002c1c8*/ STR         IP, [SP, #40]               @ 0x28 
    /*0002c1cc*/ BFI         R1, IP, #3, #11 
    /*0002c1d0*/ STRH        R1, [R7, #110]              @ 0x6e 
    /*0002c1d4*/ LDR         R1, [SP, #176]              @ 0xb0 
    /*0002c1d8*/ STRH        R9, [R7, #20] 
    /*0002c1dc*/ UBFX        R1, R1, #0, #11 
    /*0002c1e0*/ STR         R1, [SP, #44]               @ 0x2c 
    /*0002c1e4*/ BFI         R2, R1, #3, #11 
    /*0002c1e8*/ STRH        R2, [R7, #94]               @ 0x5e 
    /*0002c1ec*/ LDRH        R2, [SP, #184]              @ 0xb8 
    /*0002c1f0*/ LDR         IP, [SP, #120]              @ 0x78 
    /*0002c1f4*/ UBFX        R1, R2, #0, #10 
    /*0002c1f8*/ STRB        LR, [R7, #28] 
    /*0002c1fc*/ BFI         R0, R1, #0, #10 
    /*0002c200*/ STRB        LR, [R7, #29] 
    /*0002c204*/ LDRH        R3, [R7, #32] 
    /*0002c208*/ UBFX        R8, IP, #0, #12 
    /*0002c20c*/ LDR         LR, [SP, #20] 
    /*0002c210*/ STRH        R0, [R7, #16] 
    /*0002c214*/ MOV         R9, R8 
    /*0002c218*/ LDR         R0, [R7, #16] 
    /*0002c21c*/ ORR         R2, LR, R2 
    /*0002c220*/ LDR         IP, [SP, #180]              @ 0xb4 
    /*0002c224*/ UBFX        R2, R2, #0, #10 
    /*0002c228*/ BFI         R0, R1, #10, #10 
    /*0002c22c*/ LDR         R1, [SP, #244]              @ 0xf4 
    /*0002c230*/ STR         R0, [R7, #16] 
    /*0002c234*/ UBFX        R8, IP, #0, #12 
    /*0002c238*/ LDR         R0, [SP, #12] 
    /*0002c23c*/ LDR         IP, [SP, #204]              @ 0xcc 
    /*0002c240*/ UXTB        LR, R1 
    /*0002c244*/ STR         R8, [SP, #20] 
    /*0002c248*/ ORR         R0, R0, R1 
    /*0002c24c*/ LDR         R8, [SP, #16] 
    /*0002c250*/ UBFX        IP, IP, #0, #11 
    /*0002c254*/ LDR         R1, [SP, #264]              @ 0x108 
    /*0002c258*/ BFI         R3, IP, #0, #11 
    /*0002c25c*/ STRH        R3, [R7, #32] 
    /*0002c260*/ UXTB        R0, R0 
    /*0002c264*/ ORR         R3, R8, R1 
    /*0002c268*/ LDRH        R8, [R7, #112]              @ 0x70 
    /*0002c26c*/ STRB        LR, [R7, #12] 
    /*0002c270*/ ORRS        R2, R0, R2 
    /*0002c274*/ BFI         R8, R9, #0, #12 
    /*0002c278*/ STRB        LR, [R7, #13] 
    /*0002c27c*/ LDR         LR, [R7, #32] 
    /*0002c280*/ UXTB        R3, R3 
    /*0002c284*/ STR         R9, [SP, #12] 
    /*0002c288*/ MOVNE       R0, #1 
    /*0002c28c*/ LDR         R9, [SP, #56]               @ 0x38 
    /*0002c290*/ BFI         LR, IP, #11, #11 
    /*0002c294*/ STRH        R8, [R7, #112]              @ 0x70 
    /*0002c298*/ MOVEQ       R0, #0 
    /*0002c29c*/ ORR         R3, R3, R9 
    /*0002c2a0*/ LDR         R9, [SP, #24] 
    /*0002c2a4*/ LDRH        R8, [R7, #96]               @ 0x60 
    /*0002c2a8*/ UXTB        R1, R1 
    /*0002c2ac*/ ORR         R3, R3, R9 
    /*0002c2b0*/ LDR         R9, [SP, #20] 
    /*0002c2b4*/ STR         LR, [R7, #32] 
    /*0002c2b8*/ ORR         R3, IP, R3 
    /*0002c2bc*/ BFI         R8, R9, #0, #12 
    /*0002c2c0*/ STRH        R8, [R7, #96]               @ 0x60 
    /*0002c2c4*/ LDR         R8, [SP, #268]              @ 0x10c 
    /*0002c2c8*/ LDRH        R2, [R7, #26] 
    /*0002c2cc*/ UBFX        R8, R8, #0, #9 
    /*0002c2d0*/ STR         R0, [SP, #56]               @ 0x38 
    /*0002c2d4*/ BFI         R2, R8, #0, #9 
    /*0002c2d8*/ LDR         IP, [SP, #208]              @ 0xd0 
    /*0002c2dc*/ STRH        R2, [R7, #26] 
    /*0002c2e0*/ LDR         R2, [SP, #224]              @ 0xe0 
    /*0002c2e4*/ UBFX        IP, IP, #0, #12 
    /*0002c2e8*/ LDR         R9, [SP, #48]               @ 0x30 
    /*0002c2ec*/ ORR         R3, IP, R3 
    /*0002c2f0*/ LDR         R0, [R7, #96]               @ 0x60 
    /*0002c2f4*/ ORRS        R8, R8, R3 
    /*0002c2f8*/ BFI         R9, IP, #0, #12 
    /*0002c2fc*/ UXTB        IP, R2 
    /*0002c300*/ BFI         R0, IP, #12, #8 
    /*0002c304*/ STRB        R1, [R7, #24] 
    /*0002c308*/ LDRH        LR, [R7, #82]               @ 0x52 
    /*0002c30c*/ STRB        R1, [R7, #25] 
    /*0002c310*/ STR         R0, [R7, #96]               @ 0x60 
    /*0002c314*/ LSR         R0, R0, #16 
    /*0002c318*/ LDR         R1, [SP, #284]              @ 0x11c 
    /*0002c31c*/ BFI         R0, IP, #4, #8 
    /*0002c320*/ STRH        R0, [R7, #98]               @ 0x62 
    /*0002c324*/ LDR         R0, [SP, #288]              @ 0x120 
    /*0002c328*/ ORR         R2, R2, R1 
    /*0002c32c*/ LDR         R3, [SP, #228]              @ 0xe4 
    /*0002c330*/ UXTB        R1, R1 
    /*0002c334*/ UBFX        R8, R0, #0, #9 
    /*0002c338*/ LDRH        R0, [R7, #100]              @ 0x64 
    /*0002c33c*/ STR         R8, [SP, #24] 
    /*0002c340*/ BFI         LR, R8, #0, #9 
    /*0002c344*/ STRH        LR, [R7, #82]               @ 0x52 
    /*0002c348*/ UBFX        IP, R3, #0, #9 
    /*0002c34c*/ STRH        R9, [R7, #36]               @ 0x24 
    /*0002c350*/ BFI         R0, IP, #0, #9 
    /*0002c354*/ LDR         R9, [SP, #232]              @ 0xe8 
    /*0002c358*/ UXTB        R3, R2 
    /*0002c35c*/ STR         IP, [SP, #16] 
    /*0002c360*/ STRH        R0, [R7, #100]              @ 0x64 
    /*0002c364*/ UBFX        R9, R9, #0, #10 
    /*0002c368*/ LDR         R0, [R7, #100]              @ 0x64 
    /*0002c36c*/ LDRH        IP, [R7, #84]               @ 0x54 
    /*0002c370*/ BFI         R0, R9, #9, #10 
    /*0002c374*/ STR         R0, [R7, #100]              @ 0x64 
    /*0002c378*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*0002c37c*/ LDR         R8, [SP, #236]              @ 0xec 
    /*0002c380*/ LSR         R0, R0, #16 
    /*0002c384*/ LDR         LR, [SP, #28] 
    /*0002c388*/ ORR         R3, R2, R3 
    /*0002c38c*/ UBFX        R8, R8, #0, #11 
    /*0002c390*/ LDR         R2, [SP, #292]              @ 0x124 
    /*0002c394*/ BFI         R0, R8, #3, #11 
    /*0002c398*/ STRH        R0, [R7, #102]              @ 0x66 
    /*0002c39c*/ UBFX        R2, R2, #0, #10 
    /*0002c3a0*/ ORR         R3, R3, LR 
    /*0002c3a4*/ LDR         LR, [SP, #296]              @ 0x128 
    /*0002c3a8*/ BFI         IP, R2, #0, #10 
    /*0002c3ac*/ STRH        IP, [R7, #84]               @ 0x54 
    /*0002c3b0*/ LDR         R0, [R7, #84]               @ 0x54 
    /*0002c3b4*/ UBFX        IP, LR, #0, #11 
    /*0002c3b8*/ LDR         LR, [SP, #32] 
    /*0002c3bc*/ BFI         R0, IP, #10, #11 
    /*0002c3c0*/ STR         R0, [R7, #84]               @ 0x54 
    /*0002c3c4*/ ORR         R3, R3, LR 
    /*0002c3c8*/ LDR         LR, [SP, #36]               @ 0x24 
    /*0002c3cc*/ LDR         R0, [SP, #240]              @ 0xf0 
    /*0002c3d0*/ ORR         R3, R3, LR 
    /*0002c3d4*/ LDR         LR, [SP, #40]               @ 0x28 
    /*0002c3d8*/ STRB        R1, [R7, #80]               @ 0x50 
    /*0002c3dc*/ UBFX        R0, R0, #0, #12 
    /*0002c3e0*/ STRB        R1, [R7, #81]               @ 0x51 
    /*0002c3e4*/ ORR         R3, R3, LR 
    /*0002c3e8*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0002c3ec*/ BFI         SL, R0, #0, #12 
    /*0002c3f0*/ STRH        SL, [R7, #104]              @ 0x68 
    /*0002c3f4*/ ORR         R3, R3, R1 
    /*0002c3f8*/ LDR         R1, [SP, #300]              @ 0x12c 
    /*0002c3fc*/ LDR         LR, [SP, #12] 
    /*0002c400*/ LDR         SL, [SP, #16] 
    /*0002c404*/ UBFX        R1, R1, #0, #12 
    /*0002c408*/ ORR         R3, R3, LR 
    /*0002c40c*/ LDR         LR, [SP, #20] 
    /*0002c410*/ BFI         FP, R1, #0, #12 
    /*0002c414*/ STRH        FP, [R7, #88]               @ 0x58 
    /*0002c418*/ ORR         R3, R3, LR 
    /*0002c41c*/ LDRB        FP, [R6, #21] 
    /*0002c420*/ ORR         R3, R3, SL 
    /*0002c424*/ LDR         SL, [SP, #24] 
    /*0002c428*/ LDRB        LR, [R7, #76]               @ 0x4c 
    /*0002c42c*/ UBFX        FP, FP, #4, #1 
    /*0002c430*/ ORR         R3, R3, SL 
    /*0002c434*/ ADD         FP, FP, #4 
    /*0002c438*/ ORR         R9, R3, R9 
    /*0002c43c*/ BFI         LR, FP, #4, #3 
    /*0002c440*/ ORR         R9, R9, R2 
    /*0002c444*/ STRB        LR, [R7, #76]               @ 0x4c 
    /*0002c448*/ ORR         R9, R9, R8 
    /*0002c44c*/ LDRB        LR, [R6, #21] 
    /*0002c450*/ ORR         IP, R9, IP 
    /*0002c454*/ LDRB        R3, [R7, #9] 
    /*0002c458*/ ORR         R0, IP, R0 
    /*0002c45c*/ LDR         IP, [SP, #56]               @ 0x38 
    /*0002c460*/ LDRB        R2, [R7, #76]               @ 0x4c 
    /*0002c464*/ UBFX        LR, LR, #4, #1 
    /*0002c468*/ BFI         R3, IP, #2, #1 
    /*0002c46c*/ ADD         LR, LR, #3 
    /*0002c470*/ MOVNE       IP, #1 
    /*0002c474*/ MOVEQ       IP, #0 
    /*0002c478*/ ORRS        R1, R1, R0 
    /*0002c47c*/ LDRB        R1, [R7, #44]               @ 0x2c 
    /*0002c480*/ BFI         R2, LR, #1, #3 
    /*0002c484*/ BFI         R3, IP, #3, #1 
    /*0002c488*/ MOVNE       R0, #1 
    /*0002c48c*/ STRB        R3, [R7, #9] 
    /*0002c490*/ MOVEQ       R0, #0 
    /*0002c494*/ LDR         R3, [R7, #8] 
    /*0002c498*/ BFI         R2, R0, #0, #1 
    /*0002c49c*/ BFC         R1, #0, #1 
    /*0002c4a0*/ STRB        R2, [R7, #76]               @ 0x4c 
    /*0002c4a4*/ STRB        R1, [R7, #44]               @ 0x2c 
    /*0002c4a8*/ LDRB        R2, [R6, #2] 
    /*0002c4ac*/ BFI         R3, R2, #12, #5 
    /*0002c4b0*/ STR         R3, [R7, #8] 
    /*0002c4b4*/ LDRH        R3, [R6, #2] 
    /*0002c4b8*/ LDRB        R2, [R7, #10] 
    /*0002c4bc*/ UBFX        R3, R3, #5, #5 
    /*0002c4c0*/ BFI         R2, R3, #1, #5 
    /*0002c4c4*/ STRB        R2, [R7, #10] 
    /*0002c4c8*/ B           SetSFi_x2bb24
    SetSFi_x2c4cc:
    /*0002c4cc*/ CMP         R3, #7 
    /*0002c4d0*/ SUBNE       R1, R3, #3 
    /*0002c4d4*/ ANDNE       R1, R1, #3 
    /*0002c4d8*/ MOVEQ       R1, #3 
    /*0002c4dc*/ MOVEQ       R3, #6 
    /*0002c4e0*/ B           SetSFi_x2bfdc
    /*0002c4e4*/ ANDEQ       R1, R0, R0, ROR R6 
FUNC_END SetSFi


FUNC_BEGIN SetSFk
    /*0002c4e8*/ CMP         R2, #0 
    /*0002c4ec*/ CMPNE       R1, #0 
    /*0002c4f0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002c4f4*/ MOVEQ       R3, #1 
    /*0002c4f8*/ MOVNE       R3, #0 
    /*0002c4fc*/ CMP         R0, #0 
    /*0002c500*/ ORREQ       R3, R3, #1 
    /*0002c504*/ CMP         R3, #0 
    /*0002c508*/ SUB         SP, SP, #92                 @ 0x5c 
    /*0002c50c*/ MOV         R5, R1 
    /*0002c510*/ MOV         R6, R2 
    /*0002c514*/ MOV         R4, R0 
    /*0002c518*/ BNE         SetSFk_x2d1b0
    SetSFk_x2c51c:
    /*0002c51c*/ LDRB        R3, [R6, #2] 
    /*0002c520*/ TST         R3, #30 
    /*0002c524*/ BEQ         SetSFk_x2ca0c
    /*0002c528*/ LDRB        R8, [R5, #191]              @ 0xbf 
    /*0002c52c*/ LSRS        R8, R8, #5 
    /*0002c530*/ BEQ         SetSFk_x2d1d0
    /*0002c534*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x165c] 
    /*0002c538*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x165c] 
    /*0002c53c*/ ADD         R8, R3, R8 
    /*0002c540*/ LDRB        R3, [R4, #400]              @ 0x190 
    /*0002c544*/ MOVW        R2, #258                    @ 0x102 
    /*0002c548*/ ADD         R0, R4, #468                @ 0x1d4 
    /*0002c54c*/ LDRB        IP, [R8, #36]               @ 0x24 
    /*0002c550*/ ADD         R1, R5, #260                @ 0x104 
    /*0002c554*/ MOVW        LR, #470                    @ 0x1d6 
    /*0002c558*/ BFI         R3, IP, #4, #3 
    /*0002c55c*/ STRB        R3, [R4, #400]              @ 0x190 
    /*0002c560*/ LDRH        R3, [R5, R2] 
    /*0002c564*/ ADD         R2, R4, #404                @ 0x194 
    /*0002c568*/ MOVW        IP, #262                    @ 0x106 
    /*0002c56c*/ STRH        R3, [R0] 
    /*0002c570*/ LDRH        R7, [R5, #194]              @ 0xc2 
    /*0002c574*/ LDR         R0, [R4, #400]              @ 0x190 
    /*0002c578*/ ORR         R3, R3, R7 
    /*0002c57c*/ BFI         R0, R7, #7, #16 
    /*0002c580*/ STR         R0, [R4, #400]              @ 0x190 
    /*0002c584*/ LDRH        R1, [R1] 
    /*0002c588*/ ADD         R0, R4, #472                @ 0x1d8 
    /*0002c58c*/ MOVW        R7, #406                    @ 0x196 
    /*0002c590*/ ORR         R3, R1, R3 
    /*0002c594*/ STRH        R1, [R4, LR] 
    /*0002c598*/ ADD         R1, R5, #264                @ 0x108 
    /*0002c59c*/ LDRH        LR, [R5, #196]              @ 0xc4 
    /*0002c5a0*/ ORR         R3, LR, R3 
    /*0002c5a4*/ STRH        LR, [R2] 
    /*0002c5a8*/ MOVW        LR, #474                    @ 0x1da 
    /*0002c5ac*/ LDRH        IP, [R5, IP] 
    /*0002c5b0*/ ADD         R2, R4, #408                @ 0x198 
    /*0002c5b4*/ ORR         R3, IP, R3 
    /*0002c5b8*/ STRH        IP, [R0] 
    /*0002c5bc*/ MOVW        IP, #266                    @ 0x10a 
    /*0002c5c0*/ LDRH        R0, [R5, #198]              @ 0xc6 
    /*0002c5c4*/ ORR         R3, R0, R3 
    /*0002c5c8*/ STRH        R0, [R4, R7] 
    /*0002c5cc*/ ADD         R0, R4, #476                @ 0x1dc 
    /*0002c5d0*/ LDRH        R7, [R1] 
    /*0002c5d4*/ ADD         R1, R5, #268                @ 0x10c 
    /*0002c5d8*/ ORR         R3, R7, R3 
    /*0002c5dc*/ STRH        R7, [R4, LR] 
    /*0002c5e0*/ MOVW        R7, #410                    @ 0x19a 
    /*0002c5e4*/ LDRH        LR, [R5, #200]              @ 0xc8 
    /*0002c5e8*/ ORR         R3, LR, R3 
    /*0002c5ec*/ STRH        LR, [R2] 
    /*0002c5f0*/ MOVW        LR, #478                    @ 0x1de 
    /*0002c5f4*/ LDRH        IP, [R5, IP] 
    /*0002c5f8*/ ADD         R2, R4, #412                @ 0x19c 
    /*0002c5fc*/ ORR         R3, IP, R3 
    /*0002c600*/ STRH        IP, [R0] 
    /*0002c604*/ MOVW        IP, #270                    @ 0x10e 
    /*0002c608*/ LDRH        R0, [R5, #202]              @ 0xca 
    /*0002c60c*/ ORR         R3, R0, R3 
    /*0002c610*/ STRH        R0, [R4, R7] 
    /*0002c614*/ ADD         R0, R4, #480                @ 0x1e0 
    /*0002c618*/ LDRH        R7, [R1] 
    /*0002c61c*/ ADD         R1, R5, #272                @ 0x110 
    /*0002c620*/ ORR         R3, R7, R3 
    /*0002c624*/ STRH        R7, [R4, LR] 
    /*0002c628*/ MOVW        R7, #414                    @ 0x19e 
    /*0002c62c*/ LDRH        LR, [R5, #204]              @ 0xcc 
    /*0002c630*/ ORR         R3, LR, R3 
    /*0002c634*/ STRH        LR, [R2] 
    /*0002c638*/ MOVW        LR, #482                    @ 0x1e2 
    /*0002c63c*/ LDRH        IP, [R5, IP] 
    /*0002c640*/ ADD         R2, R4, #416                @ 0x1a0 
    /*0002c644*/ ORR         R3, IP, R3 
    /*0002c648*/ STRH        IP, [R0] 
    /*0002c64c*/ MOVW        IP, #274                    @ 0x112 
    /*0002c650*/ LDRH        R0, [R5, #206]              @ 0xce 
    /*0002c654*/ ORR         R3, R0, R3 
    /*0002c658*/ STRH        R0, [R4, R7] 
    /*0002c65c*/ ADD         R0, R4, #484                @ 0x1e4 
    /*0002c660*/ LDRH        R7, [R1] 
    /*0002c664*/ ADD         R1, R5, #276                @ 0x114 
    /*0002c668*/ ORR         R3, R7, R3 
    /*0002c66c*/ STRH        R7, [R4, LR] 
    /*0002c670*/ MOVW        R7, #418                    @ 0x1a2 
    /*0002c674*/ LDRH        LR, [R5, #208]              @ 0xd0 
    /*0002c678*/ ORR         R3, LR, R3 
    /*0002c67c*/ STRH        LR, [R2] 
    /*0002c680*/ MOVW        LR, #486                    @ 0x1e6 
    /*0002c684*/ LDRH        IP, [R5, IP] 
    /*0002c688*/ ADD         R2, R4, #420                @ 0x1a4 
    /*0002c68c*/ ORR         R3, IP, R3 
    /*0002c690*/ STRH        IP, [R0] 
    /*0002c694*/ MOVW        IP, #278                    @ 0x116 
    /*0002c698*/ LDRH        R0, [R5, #210]              @ 0xd2 
    /*0002c69c*/ ORR         R3, R0, R3 
    /*0002c6a0*/ STRH        R0, [R4, R7] 
    /*0002c6a4*/ ADD         R0, R4, #488                @ 0x1e8 
    /*0002c6a8*/ LDRH        R7, [R1] 
    /*0002c6ac*/ ADD         R1, R5, #280                @ 0x118 
    /*0002c6b0*/ ORR         R3, R7, R3 
    /*0002c6b4*/ STRH        R7, [R4, LR] 
    /*0002c6b8*/ MOVW        R7, #422                    @ 0x1a6 
    /*0002c6bc*/ LDRH        LR, [R5, #212]              @ 0xd4 
    /*0002c6c0*/ ORR         R3, LR, R3 
    /*0002c6c4*/ STRH        LR, [R2] 
    /*0002c6c8*/ MOVW        LR, #490                    @ 0x1ea 
    /*0002c6cc*/ LDRH        IP, [R5, IP] 
    /*0002c6d0*/ ADD         R2, R4, #424                @ 0x1a8 
    /*0002c6d4*/ ORR         R3, IP, R3 
    /*0002c6d8*/ STRH        IP, [R0] 
    /*0002c6dc*/ MOVW        IP, #282                    @ 0x11a 
    /*0002c6e0*/ LDRH        R0, [R5, #214]              @ 0xd6 
    /*0002c6e4*/ ORR         R3, R0, R3 
    /*0002c6e8*/ STRH        R0, [R4, R7] 
    /*0002c6ec*/ ADD         R0, R4, #492                @ 0x1ec 
    /*0002c6f0*/ LDRH        R7, [R1] 
    /*0002c6f4*/ ADD         R1, R5, #284                @ 0x11c 
    /*0002c6f8*/ ORR         R3, R7, R3 
    /*0002c6fc*/ STRH        R7, [R4, LR] 
    /*0002c700*/ MOVW        R7, #426                    @ 0x1aa 
    /*0002c704*/ LDRH        LR, [R5, #216]              @ 0xd8 
    /*0002c708*/ ORR         R3, LR, R3 
    /*0002c70c*/ STRH        LR, [R2] 
    /*0002c710*/ MOVW        LR, #494                    @ 0x1ee 
    /*0002c714*/ LDRH        IP, [R5, IP] 
    /*0002c718*/ ADD         R2, R4, #428                @ 0x1ac 
    /*0002c71c*/ ORR         R3, IP, R3 
    /*0002c720*/ STRH        IP, [R0] 
    /*0002c724*/ MOVW        IP, #286                    @ 0x11e 
    /*0002c728*/ LDRH        R0, [R5, #218]              @ 0xda 
    /*0002c72c*/ ORR         R3, R0, R3 
    /*0002c730*/ STRH        R0, [R4, R7] 
    /*0002c734*/ ADD         R0, R4, #496                @ 0x1f0 
    /*0002c738*/ LDRH        R7, [R1] 
    /*0002c73c*/ ADD         R1, R5, #288                @ 0x120 
    /*0002c740*/ ORR         R3, R7, R3 
    /*0002c744*/ STRH        R7, [R4, LR] 
    /*0002c748*/ MOVW        R7, #430                    @ 0x1ae 
    /*0002c74c*/ LDRH        LR, [R5, #220]              @ 0xdc 
    /*0002c750*/ ORR         R3, LR, R3 
    /*0002c754*/ STRH        LR, [R2] 
    /*0002c758*/ MOVW        LR, #498                    @ 0x1f2 
    /*0002c75c*/ LDRH        IP, [R5, IP] 
    /*0002c760*/ ADD         R2, R4, #432                @ 0x1b0 
    /*0002c764*/ ORR         R3, IP, R3 
    /*0002c768*/ STRH        IP, [R0] 
    /*0002c76c*/ MOVW        IP, #290                    @ 0x122 
    /*0002c770*/ LDRH        R0, [R5, #222]              @ 0xde 
    /*0002c774*/ ORR         R3, R0, R3 
    /*0002c778*/ STRH        R0, [R4, R7] 
    /*0002c77c*/ ADD         R0, R4, #500                @ 0x1f4 
    /*0002c780*/ LDRH        R7, [R1] 
    /*0002c784*/ ADD         R1, R5, #292                @ 0x124 
    /*0002c788*/ ORR         R3, R7, R3 
    /*0002c78c*/ STRH        R7, [R4, LR] 
    /*0002c790*/ MOVW        R7, #434                    @ 0x1b2 
    /*0002c794*/ LDRH        LR, [R5, #224]              @ 0xe0 
    /*0002c798*/ ORR         R3, LR, R3 
    /*0002c79c*/ STRH        LR, [R2] 
    /*0002c7a0*/ MOVW        LR, #502                    @ 0x1f6 
    /*0002c7a4*/ LDRH        IP, [R5, IP] 
    /*0002c7a8*/ ADD         R2, R4, #436                @ 0x1b4 
    /*0002c7ac*/ ORR         R3, IP, R3 
    /*0002c7b0*/ STRH        IP, [R0] 
    /*0002c7b4*/ MOVW        IP, #294                    @ 0x126 
    /*0002c7b8*/ LDRH        R0, [R5, #226]              @ 0xe2 
    /*0002c7bc*/ ORR         R3, R0, R3 
    /*0002c7c0*/ STRH        R0, [R4, R7] 
    /*0002c7c4*/ ADD         R0, R4, #504                @ 0x1f8 
    /*0002c7c8*/ LDRH        R7, [R1] 
    /*0002c7cc*/ ADD         R1, R5, #296                @ 0x128 
    /*0002c7d0*/ ORR         R3, R7, R3 
    /*0002c7d4*/ STRH        R7, [R4, LR] 
    /*0002c7d8*/ MOVW        R7, #438                    @ 0x1b6 
    /*0002c7dc*/ LDRH        LR, [R5, #228]              @ 0xe4 
    /*0002c7e0*/ ORR         R3, LR, R3 
    /*0002c7e4*/ STRH        LR, [R2] 
    /*0002c7e8*/ MOVW        LR, #506                    @ 0x1fa 
    /*0002c7ec*/ LDRH        IP, [R5, IP] 
    /*0002c7f0*/ ADD         R2, R4, #440                @ 0x1b8 
    /*0002c7f4*/ ORR         R3, IP, R3 
    /*0002c7f8*/ STRH        IP, [R0] 
    /*0002c7fc*/ MOVW        IP, #298                    @ 0x12a 
    /*0002c800*/ LDRH        R0, [R5, #230]              @ 0xe6 
    /*0002c804*/ ORR         R3, R0, R3 
    /*0002c808*/ STRH        R0, [R4, R7] 
    /*0002c80c*/ ADD         R0, R4, #508                @ 0x1fc 
    /*0002c810*/ LDRH        R7, [R1] 
    /*0002c814*/ ADD         R1, R5, #300                @ 0x12c 
    /*0002c818*/ ORR         R3, R7, R3 
    /*0002c81c*/ STRH        R7, [R4, LR] 
    /*0002c820*/ MOVW        R7, #442                    @ 0x1ba 
    /*0002c824*/ LDRH        LR, [R5, #232]              @ 0xe8 
    /*0002c828*/ ORR         R3, LR, R3 
    /*0002c82c*/ STRH        LR, [R2] 
    /*0002c830*/ MOVW        LR, #510                    @ 0x1fe 
    /*0002c834*/ LDRH        IP, [R5, IP] 
    /*0002c838*/ ADD         R2, R4, #444                @ 0x1bc 
    /*0002c83c*/ ORR         R3, IP, R3 
    /*0002c840*/ STRH        IP, [R0] 
    /*0002c844*/ MOVW        IP, #302                    @ 0x12e 
    /*0002c848*/ LDRH        R0, [R5, #234]              @ 0xea 
    /*0002c84c*/ ORR         R3, R0, R3 
    /*0002c850*/ STRH        R0, [R4, R7] 
    /*0002c854*/ ADD         R0, R4, #512                @ 0x200 
    /*0002c858*/ LDRH        R7, [R1] 
    /*0002c85c*/ ADD         R1, R5, #304                @ 0x130 
    /*0002c860*/ ORR         R3, R7, R3 
    /*0002c864*/ STRH        R7, [R4, LR] 
    /*0002c868*/ MOVW        R7, #446                    @ 0x1be 
    /*0002c86c*/ LDRH        LR, [R5, #236]              @ 0xec 
    /*0002c870*/ ORR         R3, LR, R3 
    /*0002c874*/ STRH        LR, [R2] 
    /*0002c878*/ MOVW        LR, #514                    @ 0x202 
    /*0002c87c*/ LDRH        IP, [R5, IP] 
    /*0002c880*/ ADD         R2, R4, #448                @ 0x1c0 
    /*0002c884*/ ORR         R3, IP, R3 
    /*0002c888*/ STRH        IP, [R0] 
    /*0002c88c*/ MOVW        IP, #306                    @ 0x132 
    /*0002c890*/ LDRH        R0, [R5, #238]              @ 0xee 
    /*0002c894*/ ORR         R3, R0, R3 
    /*0002c898*/ STRH        R0, [R4, R7] 
    /*0002c89c*/ ADD         R0, R4, #516                @ 0x204 
    /*0002c8a0*/ LDRH        R7, [R1] 
    /*0002c8a4*/ ADD         R1, R5, #308                @ 0x134 
    /*0002c8a8*/ ORR         R3, R7, R3 
    /*0002c8ac*/ STRH        R7, [R4, LR] 
    /*0002c8b0*/ MOVW        R7, #450                    @ 0x1c2 
    /*0002c8b4*/ LDRH        LR, [R5, #240]              @ 0xf0 
    /*0002c8b8*/ ORR         R3, LR, R3 
    /*0002c8bc*/ STRH        LR, [R2] 
    /*0002c8c0*/ MOVW        LR, #518                    @ 0x206 
    /*0002c8c4*/ LDRH        IP, [R5, IP] 
    /*0002c8c8*/ ADD         R2, R4, #452                @ 0x1c4 
    /*0002c8cc*/ ORR         R3, IP, R3 
    /*0002c8d0*/ STRH        IP, [R0] 
    /*0002c8d4*/ MOVW        IP, #310                    @ 0x136 
    /*0002c8d8*/ LDRH        R0, [R5, #242]              @ 0xf2 
    /*0002c8dc*/ ORR         R3, R0, R3 
    /*0002c8e0*/ STRH        R0, [R4, R7] 
    /*0002c8e4*/ ADD         R0, R4, #520                @ 0x208 
    /*0002c8e8*/ LDRH        R7, [R1] 
    /*0002c8ec*/ ADD         R1, R5, #312                @ 0x138 
    /*0002c8f0*/ ORR         R3, R7, R3 
    /*0002c8f4*/ STRH        R7, [R4, LR] 
    /*0002c8f8*/ MOVW        R7, #454                    @ 0x1c6 
    /*0002c8fc*/ LDRH        LR, [R5, #244]              @ 0xf4 
    /*0002c900*/ ORR         R3, LR, R3 
    /*0002c904*/ STRH        LR, [R2] 
    /*0002c908*/ MOVW        LR, #522                    @ 0x20a 
    /*0002c90c*/ LDRH        IP, [R5, IP] 
    /*0002c910*/ ADD         R2, R4, #456                @ 0x1c8 
    /*0002c914*/ ORR         R3, IP, R3 
    /*0002c918*/ STRH        IP, [R0] 
    /*0002c91c*/ MOVW        IP, #314                    @ 0x13a 
    /*0002c920*/ LDRH        R0, [R5, #246]              @ 0xf6 
    /*0002c924*/ ORR         R3, R0, R3 
    /*0002c928*/ STRH        R0, [R4, R7] 
    /*0002c92c*/ ADD         R0, R4, #524                @ 0x20c 
    /*0002c930*/ LDRH        R7, [R1] 
    /*0002c934*/ ADD         R1, R5, #316                @ 0x13c 
    /*0002c938*/ ORR         R3, R7, R3 
    /*0002c93c*/ STRH        R7, [R4, LR] 
    /*0002c940*/ MOVW        R7, #458                    @ 0x1ca 
    /*0002c944*/ LDRH        LR, [R5, #248]              @ 0xf8 
    /*0002c948*/ ORR         R3, LR, R3 
    /*0002c94c*/ STRH        LR, [R2] 
    /*0002c950*/ MOVW        LR, #526                    @ 0x20e 
    /*0002c954*/ LDRH        IP, [R5, IP] 
    /*0002c958*/ ADD         R2, R4, #460                @ 0x1cc 
    /*0002c95c*/ ORR         R3, IP, R3 
    /*0002c960*/ STRH        IP, [R0] 
    /*0002c964*/ MOVW        IP, #318                    @ 0x13e 
    /*0002c968*/ LDRH        R0, [R5, #250]              @ 0xfa 
    /*0002c96c*/ ORR         R3, R0, R3 
    /*0002c970*/ STRH        R0, [R4, R7] 
    /*0002c974*/ ADD         R0, R4, #528                @ 0x210 
    /*0002c978*/ LDRH        R7, [R1] 
    /*0002c97c*/ ADD         R1, R5, #320                @ 0x140 
    /*0002c980*/ ORR         R3, R7, R3 
    /*0002c984*/ STRH        R7, [R4, LR] 
    /*0002c988*/ MOVW        LR, #462                    @ 0x1ce 
    /*0002c98c*/ LDRH        R7, [R5, #252]              @ 0xfc 
    /*0002c990*/ ORR         R3, R7, R3 
    /*0002c994*/ STRH        R7, [R2] 
    /*0002c998*/ ADD         R2, R5, #256                @ 0x100 
    /*0002c99c*/ LDRH        R7, [R5, IP] 
    /*0002c9a0*/ MOVW        IP, #530                    @ 0x212 
    /*0002c9a4*/ ORR         R3, R7, R3 
    /*0002c9a8*/ STRH        R7, [R0] 
    /*0002c9ac*/ ADD         R0, R4, #464                @ 0x1d0 
    /*0002c9b0*/ LDRH        R7, [R5, #254]              @ 0xfe 
    /*0002c9b4*/ ORR         R3, R7, R3 
    /*0002c9b8*/ STRH        R7, [R4, LR] 
    /*0002c9bc*/ MOV         LR, R1 
    /*0002c9c0*/ LDRH        R7, [R1] 
    /*0002c9c4*/ ADD         R1, R4, #532                @ 0x214 
    /*0002c9c8*/ ORR         R3, R7, R3 
    /*0002c9cc*/ STRH        R7, [R4, IP] 
    /*0002c9d0*/ MOVW        IP, #466                    @ 0x1d2 
    /*0002c9d4*/ LDRH        R7, [R2] 
    /*0002c9d8*/ ORR         R3, R7, R3 
    /*0002c9dc*/ STRH        R7, [R0] 
    /*0002c9e0*/ LDRH        R0, [LR] 
    /*0002c9e4*/ ORR         R3, R0, R3 
    /*0002c9e8*/ STRH        R0, [R1] 
    /*0002c9ec*/ LDRH        R1, [R2] 
    /*0002c9f0*/ LDRB        R2, [R4, #400]              @ 0x190 
    /*0002c9f4*/ ORRS        R3, R1, R3 
    /*0002c9f8*/ STRH        R1, [R4, IP] 
    /*0002c9fc*/ MOVNE       R3, #1 
    /*0002ca00*/ MOVEQ       R3, #0 
    /*0002ca04*/ BFI         R2, R3, #0, #1 
    /*0002ca08*/ STRB        R2, [R4, #400]              @ 0x190 
    SetSFk_x2ca0c:
    /*0002ca0c*/ LDRB        R3, [R6, #3] 
    /*0002ca10*/ TST         R3, #30 
    /*0002ca14*/ BEQ         SetSFk_x2cf74
    /*0002ca18*/ LDRB        R6, [R5, #343]              @ 0x157 
    /*0002ca1c*/ LSRS        R6, R6, #5 
    /*0002ca20*/ BEQ         SetSFk_x2cf7c
    /*0002ca24*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x165c] 
    /*0002ca28*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x165c] 
    /*0002ca2c*/ ADD         R6, R3, R6 
    /*0002ca30*/ LDRB        R3, [R4, #788]              @ 0x314 
    /*0002ca34*/ MOVW        R0, #410                    @ 0x19a 
    /*0002ca38*/ ADD         R1, R4, #856                @ 0x358 
    /*0002ca3c*/ LDRB        LR, [R6, #36]               @ 0x24 
    /*0002ca40*/ MOVW        R2, #346                    @ 0x15a 
    /*0002ca44*/ ADD         IP, R5, #412                @ 0x19c 
    /*0002ca48*/ ADD         R6, R4, #792                @ 0x318 
    /*0002ca4c*/ BFI         R3, LR, #4, #3 
    /*0002ca50*/ STRB        R3, [R4, #788]              @ 0x314 
    /*0002ca54*/ LDRH        R3, [R5, R0] 
    /*0002ca58*/ ADD         R0, R5, #348                @ 0x15c 
    /*0002ca5c*/ MOVW        LR, #858                    @ 0x35a 
    /*0002ca60*/ STRH        R3, [R1] 
    /*0002ca64*/ LDRH        R1, [R5, R2] 
    /*0002ca68*/ LDR         R2, [R4, #788]              @ 0x314 
    /*0002ca6c*/ ORR         R3, R3, R1 
    /*0002ca70*/ BFI         R2, R1, #7, #16 
    /*0002ca74*/ STR         R2, [R4, #788]              @ 0x314 
    /*0002ca78*/ LDRH        R2, [IP] 
    /*0002ca7c*/ MOVW        IP, #414                    @ 0x19e 
    /*0002ca80*/ ADD         R1, R5, #416                @ 0x1a0 
    /*0002ca84*/ ORR         R3, R2, R3 
    /*0002ca88*/ STRH        R2, [R4, LR] 
    /*0002ca8c*/ ADD         LR, R4, #860                @ 0x35c 
    /*0002ca90*/ LDRH        R2, [R0] 
    /*0002ca94*/ MOVW        R0, #350                    @ 0x15e 
    /*0002ca98*/ ORR         R3, R2, R3 
    /*0002ca9c*/ STRH        R2, [R6] 
    /*0002caa0*/ MOVW        R6, #918                    @ 0x396 
    /*0002caa4*/ LDRH        R2, [R5, IP] 
    /*0002caa8*/ MOVW        IP, #794                    @ 0x31a 
    /*0002caac*/ ORR         R3, R2, R3 
    /*0002cab0*/ STRH        R2, [LR] 
    /*0002cab4*/ ADD         LR, R5, #352                @ 0x160 
    /*0002cab8*/ LDRH        R2, [R5, R0] 
    /*0002cabc*/ MOVW        R0, #862                    @ 0x35e 
    /*0002cac0*/ ORR         R3, R2, R3 
    /*0002cac4*/ STRH        R2, [R4, IP] 
    /*0002cac8*/ ADD         IP, R4, #796                @ 0x31c 
    /*0002cacc*/ LDRH        R2, [R1] 
    /*0002cad0*/ MOVW        R1, #418                    @ 0x1a2 
    /*0002cad4*/ ORR         R3, R2, R3 
    /*0002cad8*/ STRH        R2, [R4, R0] 
    /*0002cadc*/ ADD         R0, R4, #864                @ 0x360 
    /*0002cae0*/ LDRH        R2, [LR] 
    /*0002cae4*/ MOVW        LR, #354                    @ 0x162 
    /*0002cae8*/ ORR         R3, R2, R3 
    /*0002caec*/ STRH        R2, [IP] 
    /*0002caf0*/ ADD         IP, R5, #420                @ 0x1a4 
    /*0002caf4*/ LDRH        R2, [R5, R1] 
    /*0002caf8*/ MOVW        R1, #798                    @ 0x31e 
    /*0002cafc*/ ORR         R3, R2, R3 
    /*0002cb00*/ STRH        R2, [R0] 
    /*0002cb04*/ ADD         R0, R5, #356                @ 0x164 
    /*0002cb08*/ LDRH        R2, [R5, LR] 
    /*0002cb0c*/ MOVW        LR, #866                    @ 0x362 
    /*0002cb10*/ ORR         R3, R2, R3 
    /*0002cb14*/ STRH        R2, [R4, R1] 
    /*0002cb18*/ ADD         R1, R4, #800                @ 0x320 
    /*0002cb1c*/ LDRH        R2, [IP] 
    /*0002cb20*/ MOVW        IP, #422                    @ 0x1a6 
    /*0002cb24*/ ORR         R3, R2, R3 
    /*0002cb28*/ STRH        R2, [R4, LR] 
    /*0002cb2c*/ ADD         LR, R4, #868                @ 0x364 
    /*0002cb30*/ LDRH        R2, [R0] 
    /*0002cb34*/ MOVW        R0, #358                    @ 0x166 
    /*0002cb38*/ ORR         R3, R2, R3 
    /*0002cb3c*/ STRH        R2, [R1] 
    /*0002cb40*/ ADD         R1, R5, #424                @ 0x1a8 
    /*0002cb44*/ LDRH        R2, [R5, IP] 
    /*0002cb48*/ MOVW        IP, #802                    @ 0x322 
    /*0002cb4c*/ ORR         R3, R2, R3 
    /*0002cb50*/ STRH        R2, [LR] 
    /*0002cb54*/ ADD         LR, R5, #360                @ 0x168 
    /*0002cb58*/ LDRH        R2, [R5, R0] 
    /*0002cb5c*/ MOVW        R0, #870                    @ 0x366 
    /*0002cb60*/ ORR         R3, R2, R3 
    /*0002cb64*/ STRH        R2, [R4, IP] 
    /*0002cb68*/ ADD         IP, R4, #804                @ 0x324 
    /*0002cb6c*/ LDRH        R2, [R1] 
    /*0002cb70*/ MOVW        R1, #426                    @ 0x1aa 
    /*0002cb74*/ ORR         R3, R2, R3 
    /*0002cb78*/ STRH        R2, [R4, R0] 
    /*0002cb7c*/ ADD         R0, R4, #872                @ 0x368 
    /*0002cb80*/ LDRH        R2, [LR] 
    /*0002cb84*/ MOVW        LR, #362                    @ 0x16a 
    /*0002cb88*/ ORR         R3, R2, R3 
    /*0002cb8c*/ STRH        R2, [IP] 
    /*0002cb90*/ ADD         IP, R5, #428                @ 0x1ac 
    /*0002cb94*/ LDRH        R2, [R5, R1] 
    /*0002cb98*/ MOVW        R1, #806                    @ 0x326 
    /*0002cb9c*/ ORR         R3, R2, R3 
    /*0002cba0*/ STRH        R2, [R0] 
    /*0002cba4*/ ADD         R0, R5, #364                @ 0x16c 
    /*0002cba8*/ LDRH        R2, [R5, LR] 
    /*0002cbac*/ MOVW        LR, #874                    @ 0x36a 
    /*0002cbb0*/ ORR         R3, R2, R3 
    /*0002cbb4*/ STRH        R2, [R4, R1] 
    /*0002cbb8*/ ADD         R1, R4, #808                @ 0x328 
    /*0002cbbc*/ LDRH        R2, [IP] 
    /*0002cbc0*/ MOVW        IP, #430                    @ 0x1ae 
    /*0002cbc4*/ ORR         R3, R2, R3 
    /*0002cbc8*/ STRH        R2, [R4, LR] 
    /*0002cbcc*/ ADD         LR, R4, #876                @ 0x36c 
    /*0002cbd0*/ LDRH        R2, [R0] 
    /*0002cbd4*/ MOVW        R0, #366                    @ 0x16e 
    /*0002cbd8*/ ORR         R3, R2, R3 
    /*0002cbdc*/ STRH        R2, [R1] 
    /*0002cbe0*/ ADD         R1, R5, #432                @ 0x1b0 
    /*0002cbe4*/ LDRH        R2, [R5, IP] 
    /*0002cbe8*/ MOVW        IP, #810                    @ 0x32a 
    /*0002cbec*/ ORR         R3, R2, R3 
    /*0002cbf0*/ STRH        R2, [LR] 
    /*0002cbf4*/ ADD         LR, R5, #368                @ 0x170 
    /*0002cbf8*/ LDRH        R2, [R5, R0] 
    /*0002cbfc*/ MOVW        R0, #878                    @ 0x36e 
    /*0002cc00*/ ORR         R3, R2, R3 
    /*0002cc04*/ STRH        R2, [R4, IP] 
    /*0002cc08*/ ADD         IP, R4, #812                @ 0x32c 
    /*0002cc0c*/ LDRH        R2, [R1] 
    /*0002cc10*/ MOVW        R1, #434                    @ 0x1b2 
    /*0002cc14*/ ORR         R3, R2, R3 
    /*0002cc18*/ STRH        R2, [R4, R0] 
    /*0002cc1c*/ ADD         R0, R4, #880                @ 0x370 
    /*0002cc20*/ LDRH        R2, [LR] 
    /*0002cc24*/ MOVW        LR, #370                    @ 0x172 
    /*0002cc28*/ ORR         R3, R2, R3 
    /*0002cc2c*/ STRH        R2, [IP] 
    /*0002cc30*/ ADD         IP, R5, #436                @ 0x1b4 
    /*0002cc34*/ LDRH        R2, [R5, R1] 
    /*0002cc38*/ MOVW        R1, #814                    @ 0x32e 
    /*0002cc3c*/ ORR         R3, R2, R3 
    /*0002cc40*/ STRH        R2, [R0] 
    /*0002cc44*/ ADD         R0, R5, #372                @ 0x174 
    /*0002cc48*/ LDRH        R2, [R5, LR] 
    /*0002cc4c*/ MOVW        LR, #882                    @ 0x372 
    /*0002cc50*/ ORR         R3, R2, R3 
    /*0002cc54*/ STRH        R2, [R4, R1] 
    /*0002cc58*/ ADD         R1, R4, #816                @ 0x330 
    /*0002cc5c*/ LDRH        R2, [IP] 
    /*0002cc60*/ MOVW        IP, #438                    @ 0x1b6 
    /*0002cc64*/ ORR         R3, R2, R3 
    /*0002cc68*/ STRH        R2, [R4, LR] 
    /*0002cc6c*/ ADD         LR, R4, #884                @ 0x374 
    /*0002cc70*/ LDRH        R2, [R0] 
    /*0002cc74*/ MOVW        R0, #374                    @ 0x176 
    /*0002cc78*/ ORR         R3, R2, R3 
    /*0002cc7c*/ STRH        R2, [R1] 
    /*0002cc80*/ ADD         R1, R5, #440                @ 0x1b8 
    /*0002cc84*/ LDRH        R2, [R5, IP] 
    /*0002cc88*/ MOVW        IP, #818                    @ 0x332 
    /*0002cc8c*/ ORR         R3, R2, R3 
    /*0002cc90*/ STRH        R2, [LR] 
    /*0002cc94*/ ADD         LR, R5, #376                @ 0x178 
    /*0002cc98*/ LDRH        R2, [R5, R0] 
    /*0002cc9c*/ MOVW        R0, #886                    @ 0x376 
    /*0002cca0*/ ORR         R3, R2, R3 
    /*0002cca4*/ STRH        R2, [R4, IP] 
    /*0002cca8*/ ADD         IP, R4, #820                @ 0x334 
    /*0002ccac*/ LDRH        R2, [R1] 
    /*0002ccb0*/ MOVW        R1, #442                    @ 0x1ba 
    /*0002ccb4*/ ORR         R3, R2, R3 
    /*0002ccb8*/ STRH        R2, [R4, R0] 
    /*0002ccbc*/ ADD         R0, R4, #888                @ 0x378 
    /*0002ccc0*/ LDRH        R2, [LR] 
    /*0002ccc4*/ MOVW        LR, #378                    @ 0x17a 
    /*0002ccc8*/ ORR         R3, R2, R3 
    /*0002cccc*/ STRH        R2, [IP] 
    /*0002ccd0*/ ADD         IP, R5, #444                @ 0x1bc 
    /*0002ccd4*/ LDRH        R2, [R5, R1] 
    /*0002ccd8*/ MOVW        R1, #822                    @ 0x336 
    /*0002ccdc*/ ORR         R3, R2, R3 
    /*0002cce0*/ STRH        R2, [R0] 
    /*0002cce4*/ ADD         R0, R5, #380                @ 0x17c 
    /*0002cce8*/ LDRH        R2, [R5, LR] 
    /*0002ccec*/ MOVW        LR, #890                    @ 0x37a 
    /*0002ccf0*/ ORR         R3, R2, R3 
    /*0002ccf4*/ STRH        R2, [R4, R1] 
    /*0002ccf8*/ ADD         R1, R4, #824                @ 0x338 
    /*0002ccfc*/ LDRH        R2, [IP] 
    /*0002cd00*/ MOVW        IP, #446                    @ 0x1be 
    /*0002cd04*/ ORR         R3, R2, R3 
    /*0002cd08*/ STRH        R2, [R4, LR] 
    /*0002cd0c*/ ADD         LR, R4, #892                @ 0x37c 
    /*0002cd10*/ LDRH        R2, [R0] 
    /*0002cd14*/ MOVW        R0, #382                    @ 0x17e 
    /*0002cd18*/ ORR         R3, R2, R3 
    /*0002cd1c*/ STRH        R2, [R1] 
    /*0002cd20*/ ADD         R1, R5, #448                @ 0x1c0 
    /*0002cd24*/ LDRH        R2, [R5, IP] 
    /*0002cd28*/ MOVW        IP, #826                    @ 0x33a 
    /*0002cd2c*/ ORR         R3, R2, R3 
    /*0002cd30*/ STRH        R2, [LR] 
    /*0002cd34*/ ADD         LR, R5, #384                @ 0x180 
    /*0002cd38*/ LDRH        R2, [R5, R0] 
    /*0002cd3c*/ MOVW        R0, #894                    @ 0x37e 
    /*0002cd40*/ ORR         R3, R2, R3 
    /*0002cd44*/ STRH        R2, [R4, IP] 
    /*0002cd48*/ ADD         IP, R4, #828                @ 0x33c 
    /*0002cd4c*/ LDRH        R2, [R1] 
    /*0002cd50*/ MOVW        R1, #450                    @ 0x1c2 
    /*0002cd54*/ ORR         R3, R2, R3 
    /*0002cd58*/ STRH        R2, [R4, R0] 
    /*0002cd5c*/ ADD         R0, R4, #896                @ 0x380 
    /*0002cd60*/ LDRH        R2, [LR] 
    /*0002cd64*/ MOVW        LR, #386                    @ 0x182 
    /*0002cd68*/ ORR         R3, R2, R3 
    /*0002cd6c*/ STRH        R2, [IP] 
    /*0002cd70*/ ADD         IP, R5, #452                @ 0x1c4 
    /*0002cd74*/ LDRH        R2, [R5, R1] 
    /*0002cd78*/ MOVW        R1, #830                    @ 0x33e 
    /*0002cd7c*/ ORR         R3, R2, R3 
    /*0002cd80*/ STRH        R2, [R0] 
    /*0002cd84*/ ADD         R0, R5, #388                @ 0x184 
    /*0002cd88*/ LDRH        R2, [R5, LR] 
    /*0002cd8c*/ MOVW        LR, #898                    @ 0x382 
    /*0002cd90*/ ORR         R3, R2, R3 
    /*0002cd94*/ STRH        R2, [R4, R1] 
    /*0002cd98*/ ADD         R1, R4, #832                @ 0x340 
    /*0002cd9c*/ LDRH        R2, [IP] 
    /*0002cda0*/ MOVW        IP, #454                    @ 0x1c6 
    /*0002cda4*/ ORR         R3, R2, R3 
    /*0002cda8*/ STRH        R2, [R4, LR] 
    /*0002cdac*/ ADD         LR, R4, #900                @ 0x384 
    /*0002cdb0*/ LDRH        R2, [R0] 
    /*0002cdb4*/ MOVW        R0, #390                    @ 0x186 
    /*0002cdb8*/ ORR         R3, R2, R3 
    /*0002cdbc*/ STRH        R2, [R1] 
    /*0002cdc0*/ ADD         R1, R5, #456                @ 0x1c8 
    /*0002cdc4*/ LDRH        R2, [R5, IP] 
    /*0002cdc8*/ MOVW        IP, #834                    @ 0x342 
    /*0002cdcc*/ ORR         R3, R2, R3 
    /*0002cdd0*/ STRH        R2, [LR] 
    /*0002cdd4*/ ADD         LR, R5, #392                @ 0x188 
    /*0002cdd8*/ LDRH        R2, [R5, R0] 
    /*0002cddc*/ MOVW        R0, #902                    @ 0x386 
    /*0002cde0*/ ORR         R3, R2, R3 
    /*0002cde4*/ STRH        R2, [R4, IP] 
    /*0002cde8*/ ADD         IP, R4, #836                @ 0x344 
    /*0002cdec*/ LDRH        R2, [R1] 
    /*0002cdf0*/ MOVW        R1, #458                    @ 0x1ca 
    /*0002cdf4*/ ORR         R3, R2, R3 
    /*0002cdf8*/ STRH        R2, [R4, R0] 
    /*0002cdfc*/ ADD         R0, R4, #904                @ 0x388 
    /*0002ce00*/ LDRH        R2, [LR] 
    /*0002ce04*/ MOVW        LR, #394                    @ 0x18a 
    /*0002ce08*/ ORR         R3, R2, R3 
    /*0002ce0c*/ STRH        R2, [IP] 
    /*0002ce10*/ ADD         IP, R5, #460                @ 0x1cc 
    /*0002ce14*/ LDRH        R2, [R5, R1] 
    /*0002ce18*/ MOVW        R1, #838                    @ 0x346 
    /*0002ce1c*/ ORR         R3, R2, R3 
    /*0002ce20*/ STRH        R2, [R0] 
    /*0002ce24*/ ADD         R0, R5, #396                @ 0x18c 
    /*0002ce28*/ LDRH        R2, [R5, LR] 
    /*0002ce2c*/ MOVW        LR, #906                    @ 0x38a 
    /*0002ce30*/ ORR         R3, R2, R3 
    /*0002ce34*/ STRH        R2, [R4, R1] 
    /*0002ce38*/ ADD         R1, R4, #840                @ 0x348 
    /*0002ce3c*/ LDRH        R2, [IP] 
    /*0002ce40*/ MOVW        IP, #462                    @ 0x1ce 
    /*0002ce44*/ ORR         R3, R2, R3 
    /*0002ce48*/ STRH        R2, [R4, LR] 
    /*0002ce4c*/ ADD         LR, R4, #908                @ 0x38c 
    /*0002ce50*/ LDRH        R2, [R0] 
    /*0002ce54*/ MOVW        R0, #398                    @ 0x18e 
    /*0002ce58*/ ORR         R3, R2, R3 
    /*0002ce5c*/ STRH        R2, [R1] 
    /*0002ce60*/ ADD         R1, R5, #464                @ 0x1d0 
    /*0002ce64*/ LDRH        R2, [R5, IP] 
    /*0002ce68*/ MOVW        IP, #842                    @ 0x34a 
    /*0002ce6c*/ ORR         R3, R2, R3 
    /*0002ce70*/ STRH        R2, [LR] 
    /*0002ce74*/ ADD         LR, R5, #400                @ 0x190 
    /*0002ce78*/ LDRH        R2, [R5, R0] 
    /*0002ce7c*/ MOVW        R0, #910                    @ 0x38e 
    /*0002ce80*/ ORR         R3, R2, R3 
    /*0002ce84*/ STRH        R2, [R4, IP] 
    /*0002ce88*/ ADD         IP, R4, #844                @ 0x34c 
    /*0002ce8c*/ LDRH        R2, [R1] 
    /*0002ce90*/ MOVW        R1, #466                    @ 0x1d2 
    /*0002ce94*/ ORR         R3, R2, R3 
    /*0002ce98*/ STRH        R2, [R4, R0] 
    /*0002ce9c*/ ADD         R0, R4, #912                @ 0x390 
    /*0002cea0*/ LDRH        R2, [LR] 
    /*0002cea4*/ MOVW        LR, #402                    @ 0x192 
    /*0002cea8*/ ORR         R3, R2, R3 
    /*0002ceac*/ STRH        R2, [IP] 
    /*0002ceb0*/ ADD         IP, R5, #468                @ 0x1d4 
    /*0002ceb4*/ LDRH        R2, [R5, R1] 
    /*0002ceb8*/ MOVW        R1, #846                    @ 0x34e 
    /*0002cebc*/ ORR         R3, R2, R3 
    /*0002cec0*/ STRH        R2, [R0] 
    /*0002cec4*/ ADD         R0, R5, #404                @ 0x194 
    /*0002cec8*/ LDRH        R2, [R5, LR] 
    /*0002cecc*/ MOVW        LR, #914                    @ 0x392 
    /*0002ced0*/ ORR         R3, R2, R3 
    /*0002ced4*/ STRH        R2, [R4, R1] 
    /*0002ced8*/ ADD         R1, R4, #848                @ 0x350 
    /*0002cedc*/ LDRH        R2, [IP] 
    /*0002cee0*/ MOVW        IP, #470                    @ 0x1d6 
    /*0002cee4*/ ORR         R3, R2, R3 
    /*0002cee8*/ STRH        R2, [R4, LR] 
    /*0002ceec*/ ADD         LR, R4, #916                @ 0x394 
    /*0002cef0*/ LDRH        R2, [R0] 
    /*0002cef4*/ MOVW        R0, #406                    @ 0x196 
    /*0002cef8*/ ORR         R3, R2, R3 
    /*0002cefc*/ STRH        R2, [R1] 
    /*0002cf00*/ ADD         R1, R5, #472                @ 0x1d8 
    /*0002cf04*/ LDRH        R2, [R5, IP] 
    /*0002cf08*/ MOVW        IP, #850                    @ 0x352 
    /*0002cf0c*/ ORR         R3, R2, R3 
    /*0002cf10*/ STRH        R2, [LR] 
    /*0002cf14*/ ADD         R2, R5, #408                @ 0x198 
    /*0002cf18*/ LDRH        R0, [R5, R0] 
    /*0002cf1c*/ ADD         R5, R4, #852                @ 0x354 
    /*0002cf20*/ ADD         LR, R4, #920                @ 0x398 
    /*0002cf24*/ ORR         R3, R0, R3 
    /*0002cf28*/ STRH        R0, [R4, IP] 
    /*0002cf2c*/ MOVW        IP, #854                    @ 0x356 
    /*0002cf30*/ LDRH        R0, [R1] 
    /*0002cf34*/ ORR         R3, R0, R3 
    /*0002cf38*/ STRH        R0, [R4, R6] 
    /*0002cf3c*/ LDRH        R0, [R2] 
    /*0002cf40*/ ORR         R3, R0, R3 
    /*0002cf44*/ STRH        R0, [R5] 
    /*0002cf48*/ LDRH        R1, [R1] 
    /*0002cf4c*/ ORR         R3, R1, R3 
    /*0002cf50*/ STRH        R1, [LR] 
    /*0002cf54*/ LDRH        R1, [R2] 
    /*0002cf58*/ LDRB        R2, [R4, #788]              @ 0x314 
    /*0002cf5c*/ ORRS        R3, R1, R3 
    /*0002cf60*/ STRH        R1, [R4, IP] 
    /*0002cf64*/ MOVNE       R3, #1 
    /*0002cf68*/ MOVEQ       R3, #0 
    /*0002cf6c*/ BFI         R2, R3, #0, #1 
    /*0002cf70*/ STRB        R2, [R4, #788]              @ 0x314 
    SetSFk_x2cf74:
    /*0002cf74*/ ADD         SP, SP, #92                 @ 0x5c 
    /*0002cf78*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    SetSFk_x2cf7c:
    /*0002cf7c*/ LDRB        R3, [R5, #338]              @ 0x152 
    /*0002cf80*/ LDRB        R8, [R5, #336]              @ 0x150 
    /*0002cf84*/ CMP         R3, #127                    @ 0x7f 
    /*0002cf88*/ BLE         SetSFk_x2d408
    /*0002cf8c*/ CMP         R3, #255                    @ 0xff 
    /*0002cf90*/ RSBNE       R2, R3, #256                @ 0x100 
    /*0002cf94*/ MOVEQ       R2, R6 
    /*0002cf98*/ MULNE       R2, R8, R2 
    /*0002cf9c*/ ADDNE       R2, R2, #64                 @ 0x40 
    /*0002cfa0*/ ASRNE       R2, R2, #7 
    SetSFk_x2cfa4:
    /*0002cfa4*/ ADD         R3, SP, #16 
    /*0002cfa8*/ STR         R3, [SP, #4] 
    /*0002cfac*/ ADD         R3, SP, #52                 @ 0x34 
    /*0002cfb0*/ LDR         R0, [SP, #4] 
    /*0002cfb4*/ STR         R3, [SP, #8] 
    /*0002cfb8*/ MOV         R1, #9 
    /*0002cfbc*/ MOV         R9, R3 
    /*0002cfc0*/ LDRB        R3, [R5, #337]              @ 0x151 
    /*0002cfc4*/ BL          0x000000000002A378 
    /*0002cfc8*/ MOV         R2, R8 
    /*0002cfcc*/ MOV         R0, R9 
    /*0002cfd0*/ LDRB        R3, [R5, #337]              @ 0x151 
    /*0002cfd4*/ MOV         R1, #9 
    /*0002cfd8*/ ADD         R8, R4, #856                @ 0x358 
    /*0002cfdc*/ BL          0x000000000002A378 
    /*0002cfe0*/ LDRH        IP, [SP, #16] 
    /*0002cfe4*/ LDRH        R0, [SP, #52]               @ 0x34 
    /*0002cfe8*/ ADD         SL, R4, #792                @ 0x318 
    /*0002cfec*/ MOVW        R3, #858                    @ 0x35a 
    /*0002cff0*/ ADD         R9, R4, #860                @ 0x35c 
    /*0002cff4*/ STRH        IP, [R8] 
    /*0002cff8*/ ADD         R1, R4, #796                @ 0x31c 
    /*0002cffc*/ LDR         R2, [R4, #788]              @ 0x314 
    /*0002d000*/ ADD         FP, R4, #864                @ 0x360 
    /*0002d004*/ BFI         R2, R0, #7, #16 
    /*0002d008*/ STR         R2, [R4, #788]              @ 0x314 
    /*0002d00c*/ LDR         R2, [SP, #20] 
    /*0002d010*/ LDR         LR, [SP, #56]               @ 0x38 
    /*0002d014*/ LDRH        R7, [SP, #28] 
    /*0002d018*/ STRH        R2, [R4, R3] 
    /*0002d01c*/ MOVW        R3, #794                    @ 0x31a 
    /*0002d020*/ STRH        LR, [SL] 
    /*0002d024*/ ADD         R2, R4, #868                @ 0x364 
    /*0002d028*/ LDR         LR, [SP, #24] 
    /*0002d02c*/ STRH        LR, [R9] 
    /*0002d030*/ LDRH        LR, [SP, #60]               @ 0x3c 
    /*0002d034*/ STRH        LR, [R4, R3] 
    /*0002d038*/ MOVW        LR, #862                    @ 0x35e 
    /*0002d03c*/ STRH        R7, [R4, LR] 
    /*0002d040*/ MOVW        LR, #798                    @ 0x31e 
    /*0002d044*/ LDRH        R7, [SP, #64]               @ 0x40 
    /*0002d048*/ ADD         R3, R4, #804                @ 0x324 
    /*0002d04c*/ STRH        R7, [R1] 
    /*0002d050*/ MOVW        R1, #866                    @ 0x362 
    /*0002d054*/ LDRH        R7, [SP, #32] 
    /*0002d058*/ STRH        R7, [FP] 
    /*0002d05c*/ MOVW        FP, #802                    @ 0x322 
    /*0002d060*/ LDRH        R7, [SP, #68]               @ 0x44 
    /*0002d064*/ STRH        R7, [R4, LR] 
    /*0002d068*/ MOVW        LR, #870                    @ 0x366 
    /*0002d06c*/ LDRH        R7, [SP, #36]               @ 0x24 
    /*0002d070*/ STRH        R7, [R4, R1] 
    /*0002d074*/ ADD         R1, R4, #800                @ 0x320 
    /*0002d078*/ LDRH        R7, [SP, #72]               @ 0x48 
    /*0002d07c*/ STRH        R7, [R1] 
    /*0002d080*/ LDRH        R1, [SP, #40]               @ 0x28 
    /*0002d084*/ STRH        R1, [R2] 
    /*0002d088*/ LDR         R2, [SP, #76]               @ 0x4c 
    /*0002d08c*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0002d090*/ STRH        R2, [R4, FP] 
    /*0002d094*/ LDR         R2, [SP, #80]               @ 0x50 
    /*0002d098*/ STRH        R1, [R4, LR] 
    /*0002d09c*/ ADD         R1, R4, #872                @ 0x368 
    /*0002d0a0*/ STRH        R2, [R3] 
    /*0002d0a4*/ ADD         R3, R4, #808                @ 0x328 
    /*0002d0a8*/ LDR         LR, [SP, #48]               @ 0x30 
    /*0002d0ac*/ MOVW        R2, #874                    @ 0x36a 
    /*0002d0b0*/ LDR         FP, [SP, #84]               @ 0x54 
    /*0002d0b4*/ STRH        LR, [R1] 
    /*0002d0b8*/ MOVW        R1, #806                    @ 0x326 
    /*0002d0bc*/ STRH        IP, [R4, R2] 
    /*0002d0c0*/ STRH        FP, [R4, R1] 
    /*0002d0c4*/ STRH        R0, [R3] 
    /*0002d0c8*/ LDRB        R3, [R5, #335]              @ 0x14f 
    /*0002d0cc*/ LDRB        FP, [R5, #333]              @ 0x14d 
    /*0002d0d0*/ CMP         R3, #127                    @ 0x7f 
    /*0002d0d4*/ BGT         SetSFk_x2d444
    /*0002d0d8*/ SMULBB      R3, FP, R3 
    /*0002d0dc*/ MOV         R6, FP 
    /*0002d0e0*/ ADD         FP, R3, #64                 @ 0x40 
    /*0002d0e4*/ ASR         FP, FP, #7 
    SetSFk_x2d0e8:
    /*0002d0e8*/ MOV         R2, R6 
    /*0002d0ec*/ LDR         R0, [SP, #4] 
    /*0002d0f0*/ LDRB        R3, [R5, #334]              @ 0x14e 
    /*0002d0f4*/ MOV         R1, #3 
    /*0002d0f8*/ BL          0x000000000002A378 
    /*0002d0fc*/ MOV         R2, FP 
    /*0002d100*/ LDR         R0, [SP, #8] 
    /*0002d104*/ MOV         R1, #3 
    /*0002d108*/ LDRB        R3, [R5, #334]              @ 0x14e 
    /*0002d10c*/ BL          0x000000000002A378 
    /*0002d110*/ LDR         R3, [SP, #16] 
    /*0002d114*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0002d118*/ MOVW        IP, #858                    @ 0x35a 
    /*0002d11c*/ MOVW        R2, #794                    @ 0x31a 
    /*0002d120*/ STRH        R3, [R8] 
    /*0002d124*/ LDR         R3, [R4, #788]              @ 0x314 
    /*0002d128*/ BFI         R3, R1, #7, #16 
    /*0002d12c*/ STR         R3, [R4, #788]              @ 0x314 
    /*0002d130*/ LDR         R1, [SP, #24] 
    /*0002d134*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*0002d138*/ LDR         LR, [SP, #20] 
    /*0002d13c*/ LDR         R0, [SP, #56]               @ 0x38 
    /*0002d140*/ STRH        LR, [R4, IP] 
    /*0002d144*/ STRH        R0, [SL] 
    /*0002d148*/ STRH        R1, [R9] 
    /*0002d14c*/ STRH        R3, [R4, R2] 
    /*0002d150*/ LDRB        R3, [R5, #332]              @ 0x14c 
    /*0002d154*/ LDRB        R1, [R5, #330]              @ 0x14a 
    /*0002d158*/ CMP         R3, #127                    @ 0x7f 
    /*0002d15c*/ BGT         SetSFk_x2d41c
    /*0002d160*/ SMULBB      R2, R1, R3 
    /*0002d164*/ ADD         R2, R2, #64                 @ 0x40 
    /*0002d168*/ ASR         R2, R2, #7 
    SetSFk_x2d16c:
    /*0002d16c*/ UXTH        R1, R1 
    SetSFk_x2d170:
    /*0002d170*/ STRH        R1, [R8] 
    /*0002d174*/ LDR         R3, [R4, #788]              @ 0x314 
    /*0002d178*/ BFI         R3, R2, #7, #16 
    /*0002d17c*/ STR         R3, [R4, #788]              @ 0x314 
    /*0002d180*/ LDRB        R2, [R5, #333]              @ 0x14d 
    /*0002d184*/ LDRB        R3, [R5, #336]              @ 0x150 
    /*0002d188*/ LDRB        R1, [R5, #330]              @ 0x14a 
    /*0002d18c*/ ORR         R3, R3, R2 
    /*0002d190*/ LDRB        R2, [R4, #788]              @ 0x314 
    /*0002d194*/ ORRS        R3, R3, R1 
    /*0002d198*/ MOVNE       R3, #1 
    /*0002d19c*/ MOVEQ       R3, #0 
    /*0002d1a0*/ BFI         R2, R3, #0, #1 
    /*0002d1a4*/ STRB        R2, [R4, #788]              @ 0x314 
    /*0002d1a8*/ ADD         SP, SP, #92                 @ 0x5c 
    /*0002d1ac*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    SetSFk_x2d1b0:
    /*0002d1b0*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c50] 
    /*0002d1b4*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c10] 
    /*0002d1b8*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c50] 
    /*0002d1bc*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c10] 
    /*0002d1c0*/ MOVW        R2, #931                    @ 0x3a3 
    /*0002d1c4*/ LDR         R1, [PC, #740]              @ 0x000000000002d4b0 
    /*0002d1c8*/ BL          0x000000000002D1C8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0002d1cc*/ B           SetSFk_x2c51c
    SetSFk_x2d1d0:
    /*0002d1d0*/ LDRB        R3, [R5, #186]              @ 0xba 
    /*0002d1d4*/ LDRB        R9, [R5, #184]              @ 0xb8 
    /*0002d1d8*/ CMP         R3, #127                    @ 0x7f 
    /*0002d1dc*/ BGT         SetSFk_x2d494
    /*0002d1e0*/ SMULBB      R3, R9, R3 
    /*0002d1e4*/ MOV         R2, R9 
    /*0002d1e8*/ ADD         R3, R3, #64                 @ 0x40 
    /*0002d1ec*/ ASR         R9, R3, #7 
    SetSFk_x2d1f0:
    /*0002d1f0*/ ADD         R3, SP, #16 
    /*0002d1f4*/ STR         R3, [SP, #4] 
    /*0002d1f8*/ ADD         R3, SP, #52                 @ 0x34 
    /*0002d1fc*/ LDR         R0, [SP, #4] 
    /*0002d200*/ STR         R3, [SP, #8] 
    /*0002d204*/ MOV         R1, #9 
    /*0002d208*/ MOV         R7, R3 
    /*0002d20c*/ LDRB        R3, [R5, #185]              @ 0xb9 
    /*0002d210*/ BL          0x000000000002A378 
    /*0002d214*/ MOV         R2, R9 
    /*0002d218*/ MOV         R0, R7 
    /*0002d21c*/ LDRB        R3, [R5, #185]              @ 0xb9 
    /*0002d220*/ MOV         R1, #9 
    /*0002d224*/ ADD         R9, R4, #468                @ 0x1d4 
    /*0002d228*/ BL          0x000000000002A378 
    /*0002d22c*/ LDRH        IP, [SP, #16] 
    /*0002d230*/ LDRH        R0, [SP, #52]               @ 0x34 
    /*0002d234*/ ADD         R3, R4, #472                @ 0x1d8 
    /*0002d238*/ STR         R3, [SP, #12] 
    /*0002d23c*/ ADD         FP, R4, #404                @ 0x194 
    /*0002d240*/ STRH        IP, [R9] 
    /*0002d244*/ MOV         R7, R3 
    /*0002d248*/ LDR         R2, [R4, #400]              @ 0x190 
    /*0002d24c*/ MOVW        R3, #470                    @ 0x1d6 
    /*0002d250*/ ADD         R1, R4, #408                @ 0x198 
    /*0002d254*/ ADD         SL, R4, #476                @ 0x1dc 
    /*0002d258*/ BFI         R2, R0, #7, #16 
    /*0002d25c*/ STR         R2, [R4, #400]              @ 0x190 
    /*0002d260*/ LDR         R2, [SP, #20] 
    /*0002d264*/ LDR         LR, [SP, #56]               @ 0x38 
    /*0002d268*/ STRH        R2, [R4, R3] 
    /*0002d26c*/ MOVW        R3, #406                    @ 0x196 
    /*0002d270*/ STRH        LR, [FP] 
    /*0002d274*/ ADD         R2, R4, #480                @ 0x1e0 
    /*0002d278*/ LDR         LR, [SP, #24] 
    /*0002d27c*/ STRH        LR, [R7] 
    /*0002d280*/ LDRH        LR, [SP, #60]               @ 0x3c 
    /*0002d284*/ LDRH        R7, [SP, #28] 
    /*0002d288*/ STRH        LR, [R4, R3] 
    /*0002d28c*/ MOVW        LR, #474                    @ 0x1da 
    /*0002d290*/ STRH        R7, [R4, LR] 
    /*0002d294*/ MOVW        LR, #410                    @ 0x19a 
    /*0002d298*/ LDRH        R7, [SP, #64]               @ 0x40 
    /*0002d29c*/ ADD         R3, R4, #416                @ 0x1a0 
    /*0002d2a0*/ STRH        R7, [R1] 
    /*0002d2a4*/ MOVW        R1, #478                    @ 0x1de 
    /*0002d2a8*/ LDRH        R7, [SP, #32] 
    /*0002d2ac*/ STRH        R7, [SL] 
    /*0002d2b0*/ MOVW        SL, #414                    @ 0x19e 
    /*0002d2b4*/ LDRH        R7, [SP, #68]               @ 0x44 
    /*0002d2b8*/ STRH        R7, [R4, LR] 
    /*0002d2bc*/ MOVW        LR, #482                    @ 0x1e2 
    /*0002d2c0*/ LDRH        R7, [SP, #36]               @ 0x24 
    /*0002d2c4*/ STRH        R7, [R4, R1] 
    /*0002d2c8*/ ADD         R1, R4, #412                @ 0x19c 
    /*0002d2cc*/ LDRH        R7, [SP, #72]               @ 0x48 
    /*0002d2d0*/ STRH        R7, [R1] 
    /*0002d2d4*/ LDRH        R1, [SP, #40]               @ 0x28 
    /*0002d2d8*/ STRH        R1, [R2] 
    /*0002d2dc*/ LDR         R2, [SP, #76]               @ 0x4c 
    /*0002d2e0*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0002d2e4*/ STRH        R2, [R4, SL] 
    /*0002d2e8*/ LDR         R2, [SP, #80]               @ 0x50 
    /*0002d2ec*/ STRH        R1, [R4, LR] 
    /*0002d2f0*/ ADD         R1, R4, #484                @ 0x1e4 
    /*0002d2f4*/ LDR         LR, [SP, #48]               @ 0x30 
    /*0002d2f8*/ LDR         SL, [SP, #84]               @ 0x54 
    /*0002d2fc*/ STRH        R2, [R3] 
    /*0002d300*/ ADD         R3, R4, #420                @ 0x1a4 
    /*0002d304*/ STRH        LR, [R1] 
    /*0002d308*/ MOVW        R2, #486                    @ 0x1e6 
    /*0002d30c*/ MOVW        R1, #418                    @ 0x1a2 
    /*0002d310*/ STRH        IP, [R4, R2] 
    /*0002d314*/ STRH        SL, [R4, R1] 
    /*0002d318*/ STRH        R0, [R3] 
    /*0002d31c*/ LDRB        R3, [R5, #183]              @ 0xb7 
    /*0002d320*/ LDRB        SL, [R5, #181]              @ 0xb5 
    /*0002d324*/ CMP         R3, #127                    @ 0x7f 
    /*0002d328*/ BGT         SetSFk_x2d47c
    /*0002d32c*/ SMULBB      R3, SL, R3 
    /*0002d330*/ MOV         R8, SL 
    /*0002d334*/ ADD         SL, R3, #64                 @ 0x40 
    /*0002d338*/ ASR         SL, SL, #7 
    SetSFk_x2d33c:
    /*0002d33c*/ MOV         R2, R8 
    /*0002d340*/ LDR         R0, [SP, #4] 
    /*0002d344*/ LDRB        R3, [R5, #182]              @ 0xb6 
    /*0002d348*/ MOV         R1, #3 
    /*0002d34c*/ BL          0x000000000002A378 
    /*0002d350*/ MOV         R2, SL 
    /*0002d354*/ LDR         R0, [SP, #8] 
    /*0002d358*/ MOV         R1, #3 
    /*0002d35c*/ LDRB        R3, [R5, #182]              @ 0xb6 
    /*0002d360*/ BL          0x000000000002A378 
    /*0002d364*/ LDR         R3, [SP, #16] 
    /*0002d368*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0002d36c*/ MOVW        IP, #470                    @ 0x1d6 
    /*0002d370*/ MOVW        R2, #406                    @ 0x196 
    /*0002d374*/ STRH        R3, [R9] 
    /*0002d378*/ LDR         R3, [R4, #400]              @ 0x190 
    /*0002d37c*/ BFI         R3, R1, #7, #16 
    /*0002d380*/ STR         R3, [R4, #400]              @ 0x190 
    /*0002d384*/ LDR         R0, [SP, #56]               @ 0x38 
    /*0002d388*/ LDR         LR, [SP, #20] 
    /*0002d38c*/ LDR         R1, [SP, #24] 
    /*0002d390*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*0002d394*/ STRH        LR, [R4, IP] 
    /*0002d398*/ STRH        R0, [FP] 
    /*0002d39c*/ LDR         R0, [SP, #12] 
    /*0002d3a0*/ STRH        R1, [R0] 
    /*0002d3a4*/ STRH        R3, [R4, R2] 
    /*0002d3a8*/ LDRB        R3, [R5, #180]              @ 0xb4 
    /*0002d3ac*/ LDRB        R1, [R5, #178]              @ 0xb2 
    /*0002d3b0*/ CMP         R3, #127                    @ 0x7f 
    /*0002d3b4*/ BGT         SetSFk_x2d45c
    /*0002d3b8*/ SMULBB      R3, R1, R3 
    /*0002d3bc*/ MOV         R2, R1 
    /*0002d3c0*/ ADD         R3, R3, #64                 @ 0x40 
    /*0002d3c4*/ ASR         R1, R3, #7 
    SetSFk_x2d3c8:
    /*0002d3c8*/ UXTH        R2, R2 
    SetSFk_x2d3cc:
    /*0002d3cc*/ STRH        R2, [R9] 
    /*0002d3d0*/ LDR         R3, [R4, #400]              @ 0x190 
    /*0002d3d4*/ BFI         R3, R1, #7, #16 
    /*0002d3d8*/ STR         R3, [R4, #400]              @ 0x190 
    /*0002d3dc*/ LDRB        R2, [R5, #181]              @ 0xb5 
    /*0002d3e0*/ LDRB        R3, [R5, #184]              @ 0xb8 
    /*0002d3e4*/ LDRB        R1, [R5, #178]              @ 0xb2 
    /*0002d3e8*/ ORR         R3, R3, R2 
    /*0002d3ec*/ LDRB        R2, [R4, #400]              @ 0x190 
    /*0002d3f0*/ ORRS        R3, R3, R1 
    /*0002d3f4*/ MOVNE       R3, #1 
    /*0002d3f8*/ MOVEQ       R3, #0 
    /*0002d3fc*/ BFI         R2, R3, #0, #1 
    /*0002d400*/ STRB        R2, [R4, #400]              @ 0x190 
    /*0002d404*/ B           SetSFk_x2ca0c
    SetSFk_x2d408:
    /*0002d408*/ SMULBB      R3, R8, R3 
    /*0002d40c*/ MOV         R2, R8 
    /*0002d410*/ ADD         R3, R3, #64                 @ 0x40 
    /*0002d414*/ ASR         R8, R3, #7 
    /*0002d418*/ B           SetSFk_x2cfa4
    SetSFk_x2d41c:
    /*0002d41c*/ CMP         R3, #255                    @ 0xff 
    /*0002d420*/ MOVEQ       R2, R1 
    /*0002d424*/ MOVEQ       R1, #0 
    /*0002d428*/ BEQ         SetSFk_x2d170
    /*0002d42c*/ RSB         R3, R3, #256                @ 0x100 
    /*0002d430*/ MOV         R2, R1 
    /*0002d434*/ MUL         R1, R1, R3 
    /*0002d438*/ ADD         R1, R1, #64                 @ 0x40 
    /*0002d43c*/ ASR         R1, R1, #7 
    /*0002d440*/ B           SetSFk_x2d16c
    SetSFk_x2d444:
    /*0002d444*/ CMP         R3, #255                    @ 0xff 
    /*0002d448*/ RSBNE       R6, R3, #256                @ 0x100 
    /*0002d44c*/ MULNE       R6, FP, R6 
    /*0002d450*/ ADDNE       R6, R6, #64                 @ 0x40 
    /*0002d454*/ ASRNE       R6, R6, #7 
    /*0002d458*/ B           SetSFk_x2d0e8
    SetSFk_x2d45c:
    /*0002d45c*/ CMP         R3, #255                    @ 0xff 
    /*0002d460*/ MOVEQ       R2, #0 
    /*0002d464*/ BEQ         SetSFk_x2d3cc
    /*0002d468*/ RSB         R2, R3, #256                @ 0x100 
    /*0002d46c*/ MUL         R2, R1, R2 
    /*0002d470*/ ADD         R2, R2, #64                 @ 0x40 
    /*0002d474*/ ASR         R2, R2, #7 
    /*0002d478*/ B           SetSFk_x2d3c8
    SetSFk_x2d47c:
    /*0002d47c*/ CMP         R3, #255                    @ 0xff 
    /*0002d480*/ RSBNE       R8, R3, #256                @ 0x100 
    /*0002d484*/ MULNE       R8, SL, R8 
    /*0002d488*/ ADDNE       R8, R8, #64                 @ 0x40 
    /*0002d48c*/ ASRNE       R8, R8, #7 
    /*0002d490*/ B           SetSFk_x2d33c
    SetSFk_x2d494:
    /*0002d494*/ CMP         R3, #255                    @ 0xff 
    /*0002d498*/ RSBNE       R2, R3, #256                @ 0x100 
    /*0002d49c*/ MOVEQ       R2, R8 
    /*0002d4a0*/ MULNE       R2, R9, R2 
    /*0002d4a4*/ ADDNE       R2, R2, #64                 @ 0x40 
    /*0002d4a8*/ ASRNE       R2, R2, #7 
    /*0002d4ac*/ B           SetSFk_x2d1f0
    /*0002d4b0*/ ANDEQ       R1, R0, R8, ROR R6 
FUNC_END SetSFk


FUNC_BEGIN Interpulate.part.0
    /*0002d4b4*/ PUSH        {R4, LR} 
    /*0002d4b8*/ SUB         LR, R0, R1 
    /*0002d4bc*/ LDR         IP, [SP, #8] 
    /*0002d4c0*/ SUB         R0, R3, R0 
    /*0002d4c4*/ SUB         R1, R3, R1 
    /*0002d4c8*/ MUL         IP, IP, LR 
    /*0002d4cc*/ MLA         R0, R2, R0, IP 
    /*0002d4d0*/ ADD         R0, R0, R1, LSR #1 
    /*0002d4d4*/ BL          0x000000000002D4D4          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0002d4d8*/ POP         {R4, PC} 
FUNC_END Interpulate.part.0


FUNC_BEGIN V16cv500SetDefaultNRx
    /*0002d4dc*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002d4e0*/ SUBS        R4, R0, #0 
    /*0002d4e4*/ POPEQ       {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0002d4e8*/ MOVW        R2, #714                    @ 0x2ca 
    /*0002d4ec*/ MOV         R1, #0 
    /*0002d4f0*/ BL          0x000000000002D4F0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0002d4f4*/ LDRB        R2, [R4, #20] 
    /*0002d4f8*/ MOV         R1, #16 
    /*0002d4fc*/ LDRB        R3, [R4, #562]              @ 0x232 
    /*0002d500*/ BFI         R2, R1, #0, #5 
    /*0002d504*/ ADD         R6, R4, #560                @ 0x230 
    /*0002d508*/ STRB        R2, [R4, #20] 
    /*0002d50c*/ BFI         R3, R1, #0, #5 
    /*0002d510*/ LDRH        IP, [R4, #20] 
    /*0002d514*/ MVN         R5, #127                    @ 0x7f 
    /*0002d518*/ STRB        R3, [R4, #562]              @ 0x232 
    /*0002d51c*/ MOV         R0, #32 
    /*0002d520*/ BFI         IP, R1, #5, #5 
    /*0002d524*/ STRH        IP, [R4, #20] 
    /*0002d528*/ LDRH        LR, [R6, #2] 
    /*0002d52c*/ MOV         R3, #2 
    /*0002d530*/ LSR         IP, IP, #8 
    /*0002d534*/ MOV         R2, #1 
    /*0002d538*/ BFI         LR, R1, #5, #5 
    /*0002d53c*/ STRH        LR, [R6, #2] 
    /*0002d540*/ LDRB        R8, [R4, #173]              @ 0xad 
    /*0002d544*/ AND         IP, IP, #227                @ 0xe3 
    /*0002d548*/ LDRB        R7, [R4, #325]              @ 0x145 
    /*0002d54c*/ LSR         LR, LR, #8 
    /*0002d550*/ LDRB        SL, [R4, #39]               @ 0x27 
    /*0002d554*/ AND         R8, R8, #227                @ 0xe3 
    /*0002d558*/ AND         R7, R7, #227                @ 0xe3 
    /*0002d55c*/ MOV         R6, #4 
    /*0002d560*/ STRB        R5, [R4, #28] 
    /*0002d564*/ BFI         LR, R6, #5, #3 
    /*0002d568*/ BFI         R8, R6, #5, #3 
    /*0002d56c*/ BFI         R7, R6, #5, #3 
    /*0002d570*/ BFI         IP, R6, #5, #3 
    /*0002d574*/ LDRB        FP, [R4, #581]              @ 0x245 
    /*0002d578*/ STRB        R5, [R4, #31] 
    /*0002d57c*/ ORR         SL, SL, #16 
    /*0002d580*/ STRB        R5, [R4, #34]               @ 0x22 
    /*0002d584*/ BFI         SL, R3, #1, #3 
    /*0002d588*/ STRB        R5, [R4, #180]              @ 0xb4 
    /*0002d58c*/ ORR         FP, FP, #16 
    /*0002d590*/ STRB        R5, [R4, #183]              @ 0xb7 
    /*0002d594*/ MOV         R1, #64                     @ 0x40 
    /*0002d598*/ STRB        R5, [R4, #186]              @ 0xba 
    /*0002d59c*/ BFI         FP, R3, #1, #3 
    /*0002d5a0*/ STRB        R5, [R4, #332]              @ 0x14c 
    /*0002d5a4*/ ADD         R9, R4, #340                @ 0x154 
    /*0002d5a8*/ STRB        R5, [R4, #335]              @ 0x14f 
    /*0002d5ac*/ STRB        R5, [R4, #338]              @ 0x152 
    /*0002d5b0*/ STRB        R5, [R4, #570]              @ 0x23a 
    /*0002d5b4*/ STRB        R5, [R4, #573]              @ 0x23d 
    /*0002d5b8*/ STRB        R5, [R4, #576]              @ 0x240 
    /*0002d5bc*/ STRB        R0, [R4, #26] 
    /*0002d5c0*/ STRB        R0, [R4, #29] 
    /*0002d5c4*/ STRB        R0, [R4, #32] 
    /*0002d5c8*/ STRB        R0, [R4, #178]              @ 0xb2 
    /*0002d5cc*/ STRB        R0, [R4, #181]              @ 0xb5 
    /*0002d5d0*/ STRB        R0, [R4, #184]              @ 0xb8 
    /*0002d5d4*/ STRB        R0, [R4, #330]              @ 0x14a 
    /*0002d5d8*/ STRB        R0, [R4, #333]              @ 0x14d 
    /*0002d5dc*/ STRB        R0, [R4, #336]              @ 0x150 
    /*0002d5e0*/ LDRB        R6, [R4, #37]               @ 0x25 
    /*0002d5e4*/ LDRB        R5, [R4, #189]              @ 0xbd 
    /*0002d5e8*/ BFI         R6, R2, #4, #3 
    /*0002d5ec*/ STRB        SL, [R4, #39]               @ 0x27 
    /*0002d5f0*/ LDRB        SL, [R4, #579]              @ 0x243 
    /*0002d5f4*/ BFI         R6, R2, #1, #3 
    /*0002d5f8*/ STRB        R0, [R4, #568]              @ 0x238 
    /*0002d5fc*/ BFI         R5, R2, #4, #3 
    /*0002d600*/ STRB        R0, [R4, #571]              @ 0x23b 
    /*0002d604*/ AND         SL, SL, #143                @ 0x8f 
    /*0002d608*/ STRB        R0, [R4, #574]              @ 0x23e 
    /*0002d60c*/ BFI         R5, R2, #1, #3 
    /*0002d610*/ LDRB        R0, [R4, #583]              @ 0x247 
    /*0002d614*/ BFI         SL, R2, #1, #3 
    /*0002d618*/ STRB        R6, [R4, #37]               @ 0x25 
    /*0002d61c*/ LDRB        R6, [R4, #41]               @ 0x29 
    /*0002d620*/ STRB        FP, [R4, #581]              @ 0x245 
    /*0002d624*/ STRB        LR, [R4, #563]              @ 0x233 
    /*0002d628*/ MOV         LR, #30 
    /*0002d62c*/ STRB        R5, [R4, #189]              @ 0xbd 
    /*0002d630*/ MOV         R5, #4 
    /*0002d634*/ STRB        SL, [R4, #579]              @ 0x243 
    /*0002d638*/ BFI         R0, R5, #1, #3 
    /*0002d63c*/ STRB        R1, [R4] 
    /*0002d640*/ MOV         SL, #4 
    /*0002d644*/ STRB        R0, [R4, #583]              @ 0x247 
    /*0002d648*/ MOV         R0, #4 
    /*0002d64c*/ STRB        R1, [R4, #6] 
    /*0002d650*/ BFI         R6, R0, #1, #3 
    /*0002d654*/ STRB        R1, [R4, #12] 
    /*0002d658*/ MOVW        R5, #578                    @ 0x242 
    /*0002d65c*/ STRB        R6, [R4, #41]               @ 0x29 
    /*0002d660*/ STRB        R1, [R4, #554]              @ 0x22a 
    /*0002d664*/ STRB        R1, [R4, #1] 
    /*0002d668*/ STRB        R1, [R4, #7] 
    /*0002d66c*/ STRB        R1, [R4, #13] 
    /*0002d670*/ STRB        R1, [R4, #555]              @ 0x22b 
    /*0002d674*/ STRB        R1, [R4, #2] 
    /*0002d678*/ STRB        R1, [R4, #8] 
    /*0002d67c*/ STRB        R1, [R4, #14] 
    /*0002d680*/ STRB        R1, [R4, #556]              @ 0x22c 
    /*0002d684*/ STRB        R1, [R4, #3] 
    /*0002d688*/ STRB        R1, [R4, #9] 
    /*0002d68c*/ STRB        R1, [R4, #15] 
    /*0002d690*/ STRB        R1, [R4, #557]              @ 0x22d 
    /*0002d694*/ LDRB        R1, [R4, #191]              @ 0xbf 
    /*0002d698*/ LDRB        R6, [R4, #193]              @ 0xc1 
    /*0002d69c*/ LDRB        R0, [R4, #341]              @ 0x155 
    /*0002d6a0*/ BFI         R1, R3, #1, #3 
    /*0002d6a4*/ BFI         R6, SL, #1, #3 
    /*0002d6a8*/ STRB        R6, [R4, #193]              @ 0xc1 
    /*0002d6ac*/ LDRH        R6, [R4, #192]              @ 0xc0 
    /*0002d6b0*/ BFI         R0, R2, #4, #3 
    /*0002d6b4*/ STRB        R1, [R4, #191]              @ 0xbf 
    /*0002d6b8*/ BFI         R0, R2, #1, #3 
    /*0002d6bc*/ LDRB        R1, [R4, #343]              @ 0x157 
    /*0002d6c0*/ MOV         SL, #50                     @ 0x32 
    /*0002d6c4*/ STRB        R0, [R4, #341]              @ 0x155 
    /*0002d6c8*/ BFI         R6, SL, #0, #9 
    /*0002d6cc*/ LDRH        R0, [R4, #36]               @ 0x24 
    /*0002d6d0*/ BFI         R1, R3, #1, #3 
    /*0002d6d4*/ STRH        R6, [R4, #192]              @ 0xc0 
    /*0002d6d8*/ MOV         SL, #4 
    /*0002d6dc*/ LDRB        R6, [R4, #345]              @ 0x159 
    /*0002d6e0*/ STRB        R1, [R4, #343]              @ 0x157 
    /*0002d6e4*/ LDRH        R1, [R4, #40]               @ 0x28 
    /*0002d6e8*/ BFI         R6, SL, #1, #3 
    /*0002d6ec*/ MOV         SL, #40                     @ 0x28 
    /*0002d6f0*/ BFI         R0, SL, #0, #9 
    /*0002d6f4*/ STRB        R6, [R4, #345]              @ 0x159 
    /*0002d6f8*/ UBFX        R6, R0, #8, #8 
    /*0002d6fc*/ STRH        R0, [R4, #36]               @ 0x24 
    /*0002d700*/ MOV         R0, #80                     @ 0x50 
    /*0002d704*/ BFI         R1, R0, #0, #9 
    /*0002d708*/ LDRH        R0, [R4, #188]              @ 0xbc 
    /*0002d70c*/ STRH        R1, [R4, #40]               @ 0x28 
    /*0002d710*/ MOV         SL, #20 
    /*0002d714*/ BFI         R0, LR, #0, #9 
    /*0002d718*/ STRH        R0, [R4, #188]              @ 0xbc 
    /*0002d71c*/ LDRH        LR, [R9] 
    /*0002d720*/ UBFX        R0, R0, #8, #8 
    /*0002d724*/ LDRH        R1, [R9, #4] 
    /*0002d728*/ ORR         R6, R6, #128                @ 0x80 
    /*0002d72c*/ BFI         LR, SL, #0, #9 
    /*0002d730*/ MOV         SL, #40                     @ 0x28 
    /*0002d734*/ STRH        LR, [R9] 
    /*0002d738*/ BFI         R1, SL, #0, #9 
    /*0002d73c*/ STRH        R1, [R9, #4] 
    /*0002d740*/ ADD         R1, R4, R5 
    /*0002d744*/ LDRH        R9, [R4, R5] 
    /*0002d748*/ ORR         R0, R0, #128                @ 0x80 
    /*0002d74c*/ UBFX        LR, LR, #8, #8 
    /*0002d750*/ BFI         R9, SL, #0, #9 
    /*0002d754*/ STRH        R9, [R4, R5] 
    /*0002d758*/ LDRH        R9, [R1, #4] 
    /*0002d75c*/ MOV         SL, #80                     @ 0x50 
    /*0002d760*/ MOV         R5, #7 
    /*0002d764*/ ORR         LR, LR, #128                @ 0x80 
    /*0002d768*/ BFI         R9, SL, #0, #9 
    /*0002d76c*/ STRH        R9, [R1, #4] 
    /*0002d770*/ LDRB        FP, [R4, #502]              @ 0x1f6 
    /*0002d774*/ MOV         R1, #8 
    /*0002d778*/ LDRB        R9, [R4, #507]              @ 0x1fb 
    /*0002d77c*/ LDRB        SL, [R4, #503]              @ 0x1f7 
    /*0002d780*/ BFI         FP, R5, #0, #4 
    /*0002d784*/ ORR         R9, R9, #124                @ 0x7c 
    /*0002d788*/ STRB        FP, [R4, #502]              @ 0x1f6 
    /*0002d78c*/ BFI         SL, R3, #6, #2 
    /*0002d790*/ STRB        R9, [R4, #507]              @ 0x1fb 
    /*0002d794*/ STRB        SL, [R4, #503]              @ 0x1f7 
    /*0002d798*/ MOV         R9, #12 
    /*0002d79c*/ STRB        R6, [R4, #37]               @ 0x25 
    /*0002d7a0*/ MOV         SL, #14 
    /*0002d7a4*/ STRB        R0, [R4, #189]              @ 0xbd 
    /*0002d7a8*/ MOV         FP, #60                     @ 0x3c 
    /*0002d7ac*/ LDRB        R0, [R4, #528]              @ 0x210 
    /*0002d7b0*/ STRB        IP, [R4, #21] 
    /*0002d7b4*/ BFI         R0, R5, #0, #4 
    /*0002d7b8*/ LDRB        IP, [R4, #504]              @ 0x1f8 
    /*0002d7bc*/ STRB        R0, [R4, #528]              @ 0x210 
    /*0002d7c0*/ LDRB        R0, [R4, #529]              @ 0x211 
    /*0002d7c4*/ BFI         IP, R5, #0, #4 
    /*0002d7c8*/ STRB        IP, [R4, #504]              @ 0x1f8 
    /*0002d7cc*/ BFI         R0, R3, #6, #2 
    /*0002d7d0*/ LDRB        IP, [R4, #505]              @ 0x1f9 
    /*0002d7d4*/ STRB        R0, [R4, #529]              @ 0x211 
    /*0002d7d8*/ LDRB        R0, [R4, #18] 
    /*0002d7dc*/ BFI         IP, R3, #6, #2 
    /*0002d7e0*/ STRB        IP, [R4, #505]              @ 0x1f9 
    /*0002d7e4*/ ORR         R0, R0, #248                @ 0xf8 
    /*0002d7e8*/ LDRB        IP, [R4, #531]              @ 0x213 
    /*0002d7ec*/ STRB        R0, [R4, #18] 
    /*0002d7f0*/ LDRB        R0, [R4, #170]              @ 0xaa 
    /*0002d7f4*/ ORR         IP, IP, #124                @ 0x7c 
    /*0002d7f8*/ STRB        IP, [R4, #531]              @ 0x213 
    /*0002d7fc*/ ORR         R0, R0, #248                @ 0xf8 
    /*0002d800*/ LDRB        IP, [R4, #509]              @ 0x1fd 
    /*0002d804*/ STRB        R0, [R4, #170]              @ 0xaa 
    /*0002d808*/ LDRB        R0, [R4, #322]              @ 0x142 
    /*0002d80c*/ ORR         IP, IP, #124                @ 0x7c 
    /*0002d810*/ LDRB        R6, [R4, #526]              @ 0x20e 
    /*0002d814*/ STRB        R7, [R4, #325]              @ 0x145 
    /*0002d818*/ ORR         R0, R0, #248                @ 0xf8 
    /*0002d81c*/ LDRB        R7, [R4, #527]              @ 0x20f 
    /*0002d820*/ BFI         R6, R5, #0, #4 
    /*0002d824*/ STRB        IP, [R4, #509]              @ 0x1fd 
    /*0002d828*/ STRB        R0, [R4, #322]              @ 0x142 
    /*0002d82c*/ BFI         R7, R3, #6, #2 
    /*0002d830*/ LDRB        IP, [R4, #533]              @ 0x215 
    /*0002d834*/ LDRB        R0, [R4, #560]              @ 0x230 
    /*0002d838*/ STRB        R8, [R4, #173]              @ 0xad 
    /*0002d83c*/ ORR         IP, IP, #124                @ 0x7c 
    /*0002d840*/ STRB        LR, [R4, #341]              @ 0x155 
    /*0002d844*/ ORR         R0, R0, #248                @ 0xf8 
    /*0002d848*/ STRB        R6, [R4, #526]              @ 0x20e 
    /*0002d84c*/ ADD         LR, R4, #480                @ 0x1e0 
    /*0002d850*/ STRB        R7, [R4, #527]              @ 0x20f 
    /*0002d854*/ MOV         R8, #5 
    /*0002d858*/ STRB        R1, [R4, #510]              @ 0x1fe 
    /*0002d85c*/ ADD         R6, R4, #492                @ 0x1ec 
    /*0002d860*/ STRB        IP, [R4, #533]              @ 0x215 
    /*0002d864*/ MOVW        IP, #558                    @ 0x22e 
    /*0002d868*/ STRB        R0, [R4, #560]              @ 0x230 
    /*0002d86c*/ MOVW        R7, #999                    @ 0x3e7 
    /*0002d870*/ STRB        R1, [R4, #511]              @ 0x1ff 
    /*0002d874*/ LDRB        R0, [R4, #493]              @ 0x1ed 
    /*0002d878*/ STRB        R1, [R4, #534]              @ 0x216 
    /*0002d87c*/ BFI         R0, R3, #2, #4 
    /*0002d880*/ STRB        R1, [R4, #535]              @ 0x217 
    /*0002d884*/ BFI         R0, R3, #6, #2 
    /*0002d888*/ STRB        R0, [R4, #493]              @ 0x1ed 
    /*0002d88c*/ LDRB        R0, [R4, #516]              @ 0x204 
    /*0002d890*/ STRB        R1, [R4, #517]              @ 0x205 
    /*0002d894*/ BFI         R0, R2, #4, #4 
    /*0002d898*/ STRB        R1, [R4, #518]              @ 0x206 
    /*0002d89c*/ STRB        R1, [R4, #541]              @ 0x21d 
    /*0002d8a0*/ STRB        R1, [R4, #542]              @ 0x21e 
    /*0002d8a4*/ STRB        R0, [R4, #516]              @ 0x204 
    /*0002d8a8*/ LDRB        R1, [R4, #540]              @ 0x21c 
    /*0002d8ac*/ LDRB        R0, [R4, #523]              @ 0x20b 
    /*0002d8b0*/ BFI         R1, R2, #4, #4 
    /*0002d8b4*/ STRB        R1, [R4, #540]              @ 0x21c 
    /*0002d8b8*/ BFI         R0, R2, #4, #4 
    /*0002d8bc*/ LDRB        R1, [R4, #547]              @ 0x223 
    /*0002d8c0*/ STRB        R0, [R4, #523]              @ 0x20b 
    /*0002d8c4*/ LDRB        R0, [R4, #483]              @ 0x1e3 
    /*0002d8c8*/ BFI         R1, R2, #4, #4 
    /*0002d8cc*/ STRB        R1, [R4, #547]              @ 0x223 
    /*0002d8d0*/ BFI         R0, R3, #2, #4 
    /*0002d8d4*/ LDRB        R1, [R4, #495]              @ 0x1ef 
    /*0002d8d8*/ STRB        R0, [R4, #483]              @ 0x1e3 
    /*0002d8dc*/ LDRB        R0, [R4, #484]              @ 0x1e4 
    /*0002d8e0*/ BFI         R1, R3, #2, #4 
    /*0002d8e4*/ LDRB        R5, [R4, #481]              @ 0x1e1 
    /*0002d8e8*/ BFI         R0, R9, #0, #4 
    /*0002d8ec*/ STRB        R1, [R4, #495]              @ 0x1ef 
    /*0002d8f0*/ STRB        R0, [R4, #484]              @ 0x1e4 
    /*0002d8f4*/ BFI         R5, R3, #2, #4 
    /*0002d8f8*/ LDRB        R1, [R4, #496]              @ 0x1f0 
    /*0002d8fc*/ BFI         R5, R3, #6, #2 
    /*0002d900*/ LDRB        R0, [R4, #551]              @ 0x227 
    /*0002d904*/ BFI         R1, R9, #0, #4 
    /*0002d908*/ STRB        R2, [R4, #515]              @ 0x203 
    /*0002d90c*/ BFI         R0, SL, #0, #4 
    /*0002d910*/ STRB        R2, [R4, #539]              @ 0x21b 
    /*0002d914*/ STRB        R2, [R4, #522]              @ 0x20a 
    /*0002d918*/ MOV         R9, #20 
    /*0002d91c*/ STRB        R2, [R4, #546]              @ 0x222 
    /*0002d920*/ MOV         SL, #4 
    /*0002d924*/ STRB        R5, [R4, #481]              @ 0x1e1 
    /*0002d928*/ STRB        R1, [R4, #496]              @ 0x1f0 
    /*0002d92c*/ LDRB        R1, [R4, #475]              @ 0x1db 
    /*0002d930*/ STRB        R0, [R4, #551]              @ 0x227 
    /*0002d934*/ LDRB        R0, [R4, #489]              @ 0x1e9 
    /*0002d938*/ AND         R1, R1, #249                @ 0xf9 
    /*0002d93c*/ STRB        R9, [R4, #550]              @ 0x226 
    /*0002d940*/ BFI         R1, R2, #3, #2 
    /*0002d944*/ LDRB        R9, [R4, #485]              @ 0x1e5 
    /*0002d948*/ BFI         R0, R3, #1, #2 
    /*0002d94c*/ LDRB        R5, [R4, #477]              @ 0x1dd 
    /*0002d950*/ BFI         R0, R3, #3, #2 
    /*0002d954*/ BFI         R9, SL, #0, #4 
    /*0002d958*/ LDRB        SL, [R4, #497]              @ 0x1f1 
    /*0002d95c*/ BFI         R0, R3, #5, #2 
    /*0002d960*/ BFI         R5, R3, #1, #2 
    /*0002d964*/ STRB        R0, [R4, #489]              @ 0x1e9 
    /*0002d968*/ BFI         R5, R3, #3, #2 
    /*0002d96c*/ LDRB        R0, [R4, #552]              @ 0x228 
    /*0002d970*/ BFI         SL, R8, #0, #4 
    /*0002d974*/ BFI         R5, R3, #5, #2 
    /*0002d978*/ BFI         R9, R8, #4, #4 
    /*0002d97c*/ STRB        R5, [R4, #477]              @ 0x1dd 
    /*0002d980*/ BFI         SL, R8, #4, #4 
    /*0002d984*/ STRB        R9, [R4, #485]              @ 0x1e5 
    /*0002d988*/ MOV         R5, #24 
    /*0002d98c*/ STRB        SL, [R4, #497]              @ 0x1f1 
    /*0002d990*/ BFI         R0, R5, #0, #6 
    /*0002d994*/ STRB        R0, [R4, #552]              @ 0x228 
    /*0002d998*/ MOV         R0, #40                     @ 0x28 
    /*0002d99c*/ LDRH        R8, [LR] 
    /*0002d9a0*/ MOV         R9, #100                    @ 0x64 
    /*0002d9a4*/ LDRH        R5, [LR, #2] 
    /*0002d9a8*/ BFI         R1, R3, #5, #2 
    /*0002d9ac*/ BFI         R8, R0, #0, #10 
    /*0002d9b0*/ LDRB        R0, [R4, #487]              @ 0x1e7 
    /*0002d9b4*/ BFI         R5, R9, #0, #10 
    /*0002d9b8*/ STRH        R8, [LR] 
    /*0002d9bc*/ AND         R0, R0, #249                @ 0xf9 
    /*0002d9c0*/ STRH        R5, [LR, #2] 
    /*0002d9c4*/ BFI         R0, R2, #3, #2 
    /*0002d9c8*/ LDRH        LR, [R6] 
    /*0002d9cc*/ LDRH        R2, [R6, #2] 
    /*0002d9d0*/ MVN         R1, R1, LSL #25 
    /*0002d9d4*/ BFI         LR, FP, #0, #10 
    /*0002d9d8*/ STRH        LR, [R6] 
    /*0002d9dc*/ BFC         R2, #0, #10 
    /*0002d9e0*/ STRH        R2, [R6, #2] 
    /*0002d9e4*/ LDRB        LR, [R4, #524]              @ 0x20c 
    /*0002d9e8*/ MOV         R2, R0 
    /*0002d9ec*/ BFI         R2, R3, #5, #2 
    /*0002d9f0*/ LDRB        R0, [R4, #498]              @ 0x1f2 
    /*0002d9f4*/ BFI         LR, R3, #0, #3 
    /*0002d9f8*/ LDRH        R6, [R4, #4] 
    /*0002d9fc*/ LDRH        R5, [R4, #10] 
    /*0002da00*/ MOV         R3, R2 
    /*0002da04*/ LDRH        R2, [R4, #16] 
    /*0002da08*/ UXTB        LR, LR 
    /*0002da0c*/ BFC         R3, #7, #1 
    /*0002da10*/ MVN         R1, R1, LSR #25 
    /*0002da14*/ STRB        R3, [R4, #487]              @ 0x1e7 
    /*0002da18*/ BFI         R2, R7, #0, #10 
    /*0002da1c*/ ORR         R3, R0, #1 
    /*0002da20*/ STRB        R1, [R4, #475]              @ 0x1db 
    /*0002da24*/ STRB        R3, [R4, #498]              @ 0x1f2 
    /*0002da28*/ ORR         LR, LR, #32 
    /*0002da2c*/ BFI         R6, R7, #0, #10 
    /*0002da30*/ STRB        LR, [R4, #524]              @ 0x20c 
    /*0002da34*/ BFI         R5, R7, #0, #10 
    /*0002da38*/ STRH        R6, [R4, #4] 
    /*0002da3c*/ STRH        R5, [R4, #10] 
    /*0002da40*/ STRH        R2, [R4, #16] 
    /*0002da44*/ LDRH        R2, [R4, IP] 
    /*0002da48*/ LDRB        R3, [R4, #712]              @ 0x2c8 
    /*0002da4c*/ BFI         R2, R7, #0, #10 
    /*0002da50*/ STRH        R2, [R4, IP] 
    /*0002da54*/ ORR         R3, R3, #1 
    /*0002da58*/ STRB        R3, [R4, #712]              @ 0x2c8 
    /*0002da5c*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END V16cv500SetDefaultNRx


FUNC_BEGIN V16cv500MapNRx
    /*0002da60*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002da64*/ MOVW        R6, #0                      @ g_pstDevCtx [R_ARM_MOVW_ABS_NC: .bss+0x3560] 
    /*0002da68*/ MOVT        R6, #0                      @ g_pstDevCtx [R_ARM_MOVT_ABS: .bss+0x3560] 
    /*0002da6c*/ SUB         SP, SP, #108                @ 0x6c 
    /*0002da70*/ LDR         R3, [R6, R0, LSL #2] 
    /*0002da74*/ ADD         R2, R3, #12288              @ 0x3000 
    /*0002da78*/ LDR         R4, [R2, #1720]             @ 0x6b8 
    /*0002da7c*/ LDR         FP, [R2, #1724]             @ 0x6bc 
    /*0002da80*/ CMP         R4, #0 
    /*0002da84*/ CMPNE       FP, #0 
    /*0002da88*/ MOVNE       R2, #1 
    /*0002da8c*/ MOVEQ       R2, #0 
    /*0002da90*/ CMP         R1, #0 
    /*0002da94*/ MOVEQ       R2, #0 
    /*0002da98*/ ANDNE       R2, R2, #1 
    /*0002da9c*/ STR         R2, [SP, #12] 
    /*0002daa0*/ CMP         R2, #0 
    /*0002daa4*/ BEQ         V16cv500MapNRx_x30ba0
    /*0002daa8*/ ADD         R3, R3, #16384              @ 0x4000 
    /*0002daac*/ MOV         R5, R1 
    /*0002dab0*/ STR         R0, [SP, #20] 
    /*0002dab4*/ MOV         R2, #1016                   @ 0x3f8 
    /*0002dab8*/ LDR         R7, [R3, #2352]             @ 0x930 
    /*0002dabc*/ MOV         R1, #0 
    /*0002dac0*/ LDR         R3, [R3, #2804]             @ 0xaf4 
    /*0002dac4*/ MOV         R0, R4 
    /*0002dac8*/ MOV         IP, #1 
    /*0002dacc*/ STRB        IP, [SP, #76]               @ 0x4c 
    /*0002dad0*/ STRB        IP, [SP, #77]               @ 0x4d 
    /*0002dad4*/ ADD         R8, R5, #18 
    /*0002dad8*/ STR         R3, [SP, #16] 
    /*0002dadc*/ STRB        IP, [SP, #78]               @ 0x4e 
    /*0002dae0*/ STRB        IP, [SP, #79]               @ 0x4f 
    /*0002dae4*/ BL          0x000000000002DAE4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0002dae8*/ MOV         R2, #400                    @ 0x190 
    /*0002daec*/ MOV         R1, #0 
    /*0002daf0*/ MOV         R0, FP 
    /*0002daf4*/ BL          0x000000000002DAF4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0002daf8*/ LDRB        R3, [R5, #191]              @ 0xbf 
    /*0002dafc*/ LSRS        R2, R3, #5 
    /*0002db00*/ BEQ         V16cv500MapNRx_x2db28
    /*0002db04*/ CMP         R2, #3 
    /*0002db08*/ MVN         R1, #127                    @ 0x7f 
    /*0002db0c*/ MOV         R2, #0 
    /*0002db10*/ STRB        R1, [R5, #186]              @ 0xba 
    /*0002db14*/ STRB        R2, [R5, #184]              @ 0xb8 
    /*0002db18*/ STRB        R2, [R5, #185]              @ 0xb9 
    /*0002db1c*/ MOVGT       R2, #3 
    /*0002db20*/ BFIGT       R3, R2, #5, #3 
    /*0002db24*/ STRBGT      R3, [R5, #191]              @ 0xbf 
    V16cv500MapNRx_x2db28:
    /*0002db28*/ LDRB        R3, [R5, #343]              @ 0x157 
    /*0002db2c*/ LSRS        R2, R3, #5 
    /*0002db30*/ BEQ         V16cv500MapNRx_x2db58
    /*0002db34*/ CMP         R2, #3 
    /*0002db38*/ MVN         R1, #127                    @ 0x7f 
    /*0002db3c*/ MOV         R2, #0 
    /*0002db40*/ STRB        R1, [R5, #338]              @ 0x152 
    /*0002db44*/ STRB        R2, [R5, #336]              @ 0x150 
    /*0002db48*/ STRB        R2, [R5, #337]              @ 0x151 
    /*0002db4c*/ MOVGT       R2, #3 
    /*0002db50*/ BFIGT       R3, R2, #5, #3 
    /*0002db54*/ STRBGT      R3, [R5, #343]              @ 0x157 
    V16cv500MapNRx_x2db58:
    /*0002db58*/ LDRB        R2, [R5, #18] 
    /*0002db5c*/ LDRB        R3, [R5, #19] 
    /*0002db60*/ AND         R0, R2, #7 
    /*0002db64*/ CMP         R0, #5 
    /*0002db68*/ AND         R1, R3, #7 
    /*0002db6c*/ MOVGE       R0, #5 
    /*0002db70*/ CMP         R1, #5 
    /*0002db74*/ BFI         R2, R0, #0, #3 
    /*0002db78*/ STRB        R2, [R5, #18] 
    /*0002db7c*/ MOVGE       R1, #5 
    /*0002db80*/ BFI         R3, R1, #0, #3 
    /*0002db84*/ LDRB        R1, [R5, #170]              @ 0xaa 
    /*0002db88*/ UXTB        R3, R3 
    /*0002db8c*/ LDRB        R2, [R5, #171]              @ 0xab 
    /*0002db90*/ AND         R0, R1, #7 
    /*0002db94*/ LSR         IP, R3, #3 
    /*0002db98*/ CMP         IP, #16 
    /*0002db9c*/ MOVGE       IP, #16 
    /*0002dba0*/ CMP         R0, #5 
    /*0002dba4*/ BFI         R3, IP, #3, #5 
    /*0002dba8*/ STRB        R3, [R5, #19] 
    /*0002dbac*/ AND         R3, R2, #7 
    /*0002dbb0*/ MOVGE       R0, #5 
    /*0002dbb4*/ CMP         R3, #5 
    /*0002dbb8*/ BFI         R1, R0, #0, #3 
    /*0002dbbc*/ STRB        R1, [R5, #170]              @ 0xaa 
    /*0002dbc0*/ MOVGE       R3, #5 
    /*0002dbc4*/ BFI         R2, R3, #0, #3 
    /*0002dbc8*/ LDRB        R1, [R5, #322]              @ 0x142 
    /*0002dbcc*/ UXTB        R2, R2 
    /*0002dbd0*/ LDRB        R3, [R5, #323]              @ 0x143 
    /*0002dbd4*/ AND         R0, R1, #7 
    /*0002dbd8*/ LSR         IP, R2, #3 
    /*0002dbdc*/ CMP         IP, #16 
    /*0002dbe0*/ MOVGE       IP, #16 
    /*0002dbe4*/ CMP         R0, #5 
    /*0002dbe8*/ BFI         R2, IP, #3, #5 
    /*0002dbec*/ STRB        R2, [R5, #171]              @ 0xab 
    /*0002dbf0*/ AND         R2, R3, #7 
    /*0002dbf4*/ MOVGE       R0, #5 
    /*0002dbf8*/ CMP         R2, #5 
    /*0002dbfc*/ BFI         R1, R0, #0, #3 
    /*0002dc00*/ STRB        R1, [R5, #322]              @ 0x142 
    /*0002dc04*/ MOVGE       R2, #5 
    /*0002dc08*/ BFI         R3, R2, #0, #3 
    /*0002dc0c*/ LDRB        R1, [R5, #22] 
    /*0002dc10*/ UXTB        R3, R3 
    /*0002dc14*/ LSR         R2, R3, #3 
    /*0002dc18*/ CMP         R2, #16 
    /*0002dc1c*/ MOVGE       R2, #16 
    /*0002dc20*/ CMP         R1, #0 
    /*0002dc24*/ BFI         R3, R2, #3, #5 
    /*0002dc28*/ STRB        R3, [R5, #323]              @ 0x143 
    /*0002dc2c*/ BNE         V16cv500MapNRx_x2dc48
    /*0002dc30*/ LDRH        R3, [R5, #20] 
    /*0002dc34*/ MOV         R2, #16 
    /*0002dc38*/ BFI         R3, R2, #5, #5 
    /*0002dc3c*/ STRH        R3, [R5, #20] 
    /*0002dc40*/ BFI         R3, R2, #0, #5 
    /*0002dc44*/ STRB        R3, [R5, #20] 
    V16cv500MapNRx_x2dc48:
    /*0002dc48*/ CMP         R7, #0 
    /*0002dc4c*/ BEQ         V16cv500MapNRx_x30ba8
    /*0002dc50*/ LDRB        R3, [R5, #498]              @ 0x1f2 
    /*0002dc54*/ LDRB        R1, [R5, #475]              @ 0x1db 
    /*0002dc58*/ LDRB        R2, [R5, #487]              @ 0x1e7 
    /*0002dc5c*/ ORR         R3, R3, #1 
    /*0002dc60*/ BFC         R1, #7, #1 
    /*0002dc64*/ STRB        R3, [R5, #498]              @ 0x1f2 
    /*0002dc68*/ BFC         R2, #7, #1 
    /*0002dc6c*/ STRB        R1, [R5, #475]              @ 0x1db 
    /*0002dc70*/ STRB        R2, [R5, #487]              @ 0x1e7 
    V16cv500MapNRx_x2dc74:
    /*0002dc74*/ LDRB        R2, [R5, #560]              @ 0x230 
    /*0002dc78*/ LDRB        R3, [R5, #561]              @ 0x231 
    /*0002dc7c*/ AND         R0, R2, #7 
    /*0002dc80*/ CMP         R0, #5 
    /*0002dc84*/ AND         R1, R3, #7 
    /*0002dc88*/ MOVGE       R0, #5 
    /*0002dc8c*/ CMP         R1, #5 
    /*0002dc90*/ BFI         R2, R0, #0, #3 
    /*0002dc94*/ STRB        R2, [R5, #560]              @ 0x230 
    /*0002dc98*/ MOVGE       R1, #5 
    /*0002dc9c*/ BFI         R3, R1, #0, #3 
    /*0002dca0*/ LDRB        R1, [R5, #564]              @ 0x234 
    /*0002dca4*/ UXTB        R3, R3 
    /*0002dca8*/ LSR         R2, R3, #3 
    /*0002dcac*/ CMP         R2, #16 
    /*0002dcb0*/ MOVGE       R2, #16 
    /*0002dcb4*/ CMP         R1, #0 
    /*0002dcb8*/ BFI         R3, R2, #3, #5 
    /*0002dcbc*/ STRB        R3, [R5, #561]              @ 0x231 
    /*0002dcc0*/ BNE         V16cv500MapNRx_x30d18
    /*0002dcc4*/ ADD         R1, R5, #560                @ 0x230 
    /*0002dcc8*/ MOV         LR, #16 
    /*0002dccc*/ ADD         R7, SP, #76                 @ 0x4c 
    /*0002dcd0*/ MOV         R2, R8 
    /*0002dcd4*/ LDRH        IP, [R1, #2] 
    /*0002dcd8*/ MOV         SL, R1 
    /*0002dcdc*/ MOV         R3, R1 
    /*0002dce0*/ MOV         R0, R4 
    /*0002dce4*/ BFI         IP, LR, #5, #5 
    /*0002dce8*/ STRH        IP, [R1, #2] 
    /*0002dcec*/ BFI         IP, LR, #0, #5 
    /*0002dcf0*/ MOV         R1, FP 
    /*0002dcf4*/ STRB        IP, [R5, #562]              @ 0x232 
    /*0002dcf8*/ STR         R7, [SP] 
    /*0002dcfc*/ BL          0x000000000002A8C4 
    V16cv500MapNRx_x2dd00:
    /*0002dd00*/ LDRB        R1, [SP, #76]               @ 0x4c 
    /*0002dd04*/ TST         R1, #64                     @ 0x40 
    /*0002dd08*/ BNE         V16cv500MapNRx_x30c38
    V16cv500MapNRx_x2dd0c:
    /*0002dd0c*/ LDRB        R3, [SP, #78]               @ 0x4e 
    /*0002dd10*/ TST         R3, #64                     @ 0x40 
    /*0002dd14*/ MOV         R9, R3 
    /*0002dd18*/ STR         R3, [SP, #24] 
    /*0002dd1c*/ BEQ         V16cv500MapNRx_x2ddec
    /*0002dd20*/ LDRB        R2, [R5, #170]              @ 0xaa 
    /*0002dd24*/ MOV         R0, #1 
    /*0002dd28*/ LDRB        R3, [R4, #544]              @ 0x220 
    /*0002dd2c*/ MOV         IP, R4 
    /*0002dd30*/ BFI         R3, R2, #3, #3 
    /*0002dd34*/ STRB        R3, [R4, #544]              @ 0x220 
    /*0002dd38*/ LDRB        R2, [R5, #170]              @ 0xaa 
    /*0002dd3c*/ LDRB        LR, [R5, #171]              @ 0xab 
    /*0002dd40*/ UXTB        R3, R3 
    /*0002dd44*/ AND         R2, R2, #7 
    /*0002dd48*/ LSL         R2, R0, R2 
    /*0002dd4c*/ BFI         R3, LR, #0, #3 
    /*0002dd50*/ STRB        R3, [IP, #544]!             @ 0x220 
    /*0002dd54*/ LDRB        R3, [R5, #171]              @ 0xab 
    /*0002dd58*/ SXTB        R2, R2 
    /*0002dd5c*/ AND         LR, R3, #7 
    /*0002dd60*/ ORR         R2, R2, R0, LSL LR 
    /*0002dd64*/ LSR         R3, R3, #3 
    /*0002dd68*/ ORR         R2, R2, R9 
    /*0002dd6c*/ CMP         R3, #16 
    /*0002dd70*/ UXTB        R2, R2 
    /*0002dd74*/ STR         R2, [SP, #24] 
    /*0002dd78*/ STRB        R2, [SP, #78]               @ 0x4e 
    /*0002dd7c*/ MOVGE       R3, #16 
    /*0002dd80*/ LDRH        R2, [IP] 
    /*0002dd84*/ BFI         R2, R3, #6, #5 
    /*0002dd88*/ STRH        R2, [IP] 
    /*0002dd8c*/ LDRB        R3, [R5, #173]              @ 0xad 
    /*0002dd90*/ LDRB        R2, [R4, #545]              @ 0x221 
    /*0002dd94*/ UBFX        R3, R3, #2, #3 
    /*0002dd98*/ BFI         R2, R3, #3, #3 
    /*0002dd9c*/ STRB        R2, [R4, #545]              @ 0x221 
    /*0002dda0*/ LDRB        R2, [R5, #175]              @ 0xaf 
    /*0002dda4*/ LDR         R3, [R4, #544]              @ 0x220 
    /*0002dda8*/ BFI         R3, R2, #14, #5 
    /*0002ddac*/ STR         R3, [R4, #544]              @ 0x220 
    /*0002ddb0*/ LDRB        R2, [R5, #176]              @ 0xb0 
    /*0002ddb4*/ LSR         R3, R3, #16 
    /*0002ddb8*/ LDRB        IP, [R4, #547]              @ 0x223 
    /*0002ddbc*/ BFI         R3, R2, #3, #5 
    /*0002ddc0*/ STRB        R3, [R4, #546]              @ 0x222 
    /*0002ddc4*/ LDRB        R3, [R5, #177]              @ 0xb1 
    /*0002ddc8*/ BFI         IP, R3, #0, #5 
    /*0002ddcc*/ STRB        IP, [R4, #547]              @ 0x223 
    /*0002ddd0*/ LDRB        R3, [R5, #177]              @ 0xb1 
    /*0002ddd4*/ CMP         R3, #0 
    /*0002ddd8*/ LDRB        R3, [R4, #402]              @ 0x192 
    /*0002dddc*/ LDRBEQ      R0, [R5, #193]              @ 0xc1 
    /*0002dde0*/ UBFXEQ      R0, R0, #4, #1 
    /*0002dde4*/ BFI         R3, R0, #7, #1 
    /*0002dde8*/ STRB        R3, [R4, #402]              @ 0x192 
    V16cv500MapNRx_x2ddec:
    /*0002ddec*/ LDRB        R3, [SP, #79]               @ 0x4f 
    /*0002ddf0*/ TST         R3, #64                     @ 0x40 
    /*0002ddf4*/ MOV         R9, R3 
    /*0002ddf8*/ STR         R3, [SP, #28] 
    /*0002ddfc*/ BEQ         V16cv500MapNRx_x2decc
    /*0002de00*/ LDRB        R2, [R5, #322]              @ 0x142 
    /*0002de04*/ MOV         R0, #1 
    /*0002de08*/ LDRB        R3, [R4, #932]              @ 0x3a4 
    /*0002de0c*/ MOV         IP, R4 
    /*0002de10*/ BFI         R3, R2, #3, #3 
    /*0002de14*/ STRB        R3, [R4, #932]              @ 0x3a4 
    /*0002de18*/ LDRB        R2, [R5, #322]              @ 0x142 
    /*0002de1c*/ LDRB        LR, [R5, #323]              @ 0x143 
    /*0002de20*/ UXTB        R3, R3 
    /*0002de24*/ AND         R2, R2, #7 
    /*0002de28*/ LSL         R2, R0, R2 
    /*0002de2c*/ BFI         R3, LR, #0, #3 
    /*0002de30*/ STRB        R3, [IP, #932]!             @ 0x3a4 
    /*0002de34*/ LDRB        R3, [R5, #323]              @ 0x143 
    /*0002de38*/ SXTB        R2, R2 
    /*0002de3c*/ AND         LR, R3, #7 
    /*0002de40*/ ORR         R2, R2, R0, LSL LR 
    /*0002de44*/ LSR         R3, R3, #3 
    /*0002de48*/ ORR         R2, R2, R9 
    /*0002de4c*/ CMP         R3, #16 
    /*0002de50*/ UXTB        R2, R2 
    /*0002de54*/ STR         R2, [SP, #28] 
    /*0002de58*/ STRB        R2, [SP, #79]               @ 0x4f 
    /*0002de5c*/ MOVGE       R3, #16 
    /*0002de60*/ LDRH        R2, [IP] 
    /*0002de64*/ BFI         R2, R3, #6, #5 
    /*0002de68*/ STRH        R2, [IP] 
    /*0002de6c*/ LDRB        R3, [R5, #325]              @ 0x145 
    /*0002de70*/ LDRB        R2, [R4, #933]              @ 0x3a5 
    /*0002de74*/ UBFX        R3, R3, #2, #3 
    /*0002de78*/ BFI         R2, R3, #3, #3 
    /*0002de7c*/ STRB        R2, [R4, #933]              @ 0x3a5 
    /*0002de80*/ LDRB        R2, [R5, #327]              @ 0x147 
    /*0002de84*/ LDR         R3, [R4, #932]              @ 0x3a4 
    /*0002de88*/ BFI         R3, R2, #14, #5 
    /*0002de8c*/ STR         R3, [R4, #932]              @ 0x3a4 
    /*0002de90*/ LDRB        IP, [R5, #328]              @ 0x148 
    /*0002de94*/ LSR         R3, R3, #16 
    /*0002de98*/ LDRB        R2, [R4, #935]              @ 0x3a7 
    /*0002de9c*/ BFI         R3, IP, #3, #5 
    /*0002dea0*/ STRB        R3, [R4, #934]              @ 0x3a6 
    /*0002dea4*/ LDRB        R3, [R5, #329]              @ 0x149 
    /*0002dea8*/ BFI         R2, R3, #0, #5 
    /*0002deac*/ STRB        R2, [R4, #935]              @ 0x3a7 
    /*0002deb0*/ LDRB        R3, [R5, #329]              @ 0x149 
    /*0002deb4*/ CMP         R3, #0 
    /*0002deb8*/ LDRB        R3, [R4, #790]              @ 0x316 
    /*0002debc*/ LDRBEQ      R0, [R5, #345]              @ 0x159 
    /*0002dec0*/ UBFXEQ      R0, R0, #4, #1 
    /*0002dec4*/ BFI         R3, R0, #7, #1 
    /*0002dec8*/ STRB        R3, [R4, #790]              @ 0x316 
    V16cv500MapNRx_x2decc:
    /*0002decc*/ LDRB        IP, [SP, #77]               @ 0x4d 
    /*0002ded0*/ TST         IP, #64                     @ 0x40 
    /*0002ded4*/ BEQ         V16cv500MapNRx_x2df9c
    /*0002ded8*/ LDR         R3, [FP, #124]              @ 0x7c 
    /*0002dedc*/ MOV         R0, #1 
    /*0002dee0*/ LDRB        R2, [R5, #560]              @ 0x230 
    /*0002dee4*/ BFI         R3, R2, #6, #3 
    /*0002dee8*/ STR         R3, [FP, #124]              @ 0x7c 
    /*0002deec*/ LDRB        R2, [R5, #560]              @ 0x230 
    /*0002def0*/ LDR         R3, [FP, #124]              @ 0x7c 
    /*0002def4*/ LDRB        LR, [R5, #561]              @ 0x231 
    /*0002def8*/ AND         R2, R2, #7 
    /*0002defc*/ LSL         R2, R0, R2 
    /*0002df00*/ BFI         R3, LR, #3, #3 
    /*0002df04*/ STR         R3, [FP, #124]              @ 0x7c 
    /*0002df08*/ LDRB        R3, [R5, #561]              @ 0x231 
    /*0002df0c*/ SXTB        R2, R2 
    /*0002df10*/ AND         LR, R3, #7 
    /*0002df14*/ ORR         R2, R2, R0, LSL LR 
    /*0002df18*/ LSR         R3, R3, #3 
    /*0002df1c*/ ORR         R2, R2, IP 
    /*0002df20*/ CMP         R3, #16 
    /*0002df24*/ UXTB        IP, R2 
    /*0002df28*/ STRB        IP, [SP, #77]               @ 0x4d 
    /*0002df2c*/ LDR         R2, [FP, #124]              @ 0x7c 
    /*0002df30*/ MOVGE       R3, #16 
    /*0002df34*/ BFI         R2, R3, #9, #5 
    /*0002df38*/ STR         R2, [FP, #124]              @ 0x7c 
    /*0002df3c*/ LDRB        R3, [R5, #563]              @ 0x233 
    /*0002df40*/ LDR         R2, [FP, #124]              @ 0x7c 
    /*0002df44*/ UBFX        R3, R3, #2, #3 
    /*0002df48*/ BFI         R2, R3, #0, #3 
    /*0002df4c*/ STR         R2, [FP, #124]              @ 0x7c 
    /*0002df50*/ LDR         R3, [FP, #124]              @ 0x7c 
    /*0002df54*/ LDRB        R2, [R5, #565]              @ 0x235 
    /*0002df58*/ BFI         R3, R2, #14, #5 
    /*0002df5c*/ STR         R3, [FP, #124]              @ 0x7c 
    /*0002df60*/ LDR         R3, [FP, #124]              @ 0x7c 
    /*0002df64*/ LDRB        R2, [R5, #566]              @ 0x236 
    /*0002df68*/ BFI         R3, R2, #19, #5 
    /*0002df6c*/ STR         R3, [FP, #124]              @ 0x7c 
    /*0002df70*/ LDR         R3, [FP, #124]              @ 0x7c 
    /*0002df74*/ LDRB        R2, [R5, #567]              @ 0x237 
    /*0002df78*/ BFI         R3, R2, #24, #5 
    /*0002df7c*/ STR         R3, [FP, #124]              @ 0x7c 
    /*0002df80*/ LDRB        R3, [R5, #567]              @ 0x237 
    /*0002df84*/ CMP         R3, #0 
    /*0002df88*/ LDR         R3, [FP, #8] 
    /*0002df8c*/ LDRBEQ      R0, [R5, #583]              @ 0x247 
    /*0002df90*/ UBFXEQ      R0, R0, #4, #1 
    /*0002df94*/ BFI         R3, R0, #22, #1 
    /*0002df98*/ STR         R3, [FP, #8] 
    V16cv500MapNRx_x2df9c:
    /*0002df9c*/ LDRH        LR, [R5, #4] 
    /*0002dfa0*/ MOVW        R2, #998                    @ 0x3e6 
    /*0002dfa4*/ LDRH        R9, [R5, #10] 
    /*0002dfa8*/ MOVW        R3, #558                    @ 0x22e 
    /*0002dfac*/ UBFX        R0, LR, #0, #10 
    /*0002dfb0*/ LDRH        R3, [R5, R3] 
    /*0002dfb4*/ CMP         R0, R2 
    /*0002dfb8*/ UBFX        R9, R9, #0, #10 
    /*0002dfbc*/ STR         R9, [SP, #40]               @ 0x28 
    /*0002dfc0*/ UBFX        R3, R3, #0, #10 
    /*0002dfc4*/ MOVWGT      R0, #999                    @ 0x3e7 
    /*0002dfc8*/ MOVLE       LR, #1 
    /*0002dfcc*/ BFIGT       LR, R0, #0, #10 
    /*0002dfd0*/ MOVWGT      R0, #1023                   @ 0x3ff 
    /*0002dfd4*/ STRHGT      LR, [R5, #4] 
    /*0002dfd8*/ MOVGT       LR, #0 
    /*0002dfdc*/ STR         LR, [SP, #32] 
    /*0002dfe0*/ MOV         LR, R9 
    /*0002dfe4*/ MOVW        R9, #998                    @ 0x3e6 
    /*0002dfe8*/ CMP         LR, R9 
    /*0002dfec*/ LDRH        R2, [R5, #16] 
    /*0002dff0*/ LDRHGT      R9, [R5, #10] 
    /*0002dff4*/ MOVWGT      LR, #1023                   @ 0x3ff 
    /*0002dff8*/ UBFX        R2, R2, #0, #10 
    /*0002dffc*/ STRGT       LR, [SP, #40]               @ 0x28 
    /*0002e000*/ MOVLE       LR, #1 
    /*0002e004*/ MOVWGT      LR, #999                    @ 0x3e7 
    /*0002e008*/ STR         R2, [SP, #36]               @ 0x24 
    /*0002e00c*/ BFIGT       R9, LR, #0, #10 
    /*0002e010*/ MOVGT       LR, #0 
    /*0002e014*/ STRHGT      R9, [R5, #10] 
    /*0002e018*/ MOV         R9, R2 
    /*0002e01c*/ MOVW        R2, #998                    @ 0x3e6 
    /*0002e020*/ CMP         R9, R2 
    /*0002e024*/ STR         LR, [SP, #52]               @ 0x34 
    /*0002e028*/ LDRHGT      R2, [R5, #16] 
    /*0002e02c*/ MOVWGT      R9, #999                    @ 0x3e7 
    /*0002e030*/ MOVWGT      LR, #1023                   @ 0x3ff 
    /*0002e034*/ MOVLE       R2, #1 
    /*0002e038*/ BFIGT       R2, R9, #0, #10 
    /*0002e03c*/ STRGT       LR, [SP, #36]               @ 0x24 
    /*0002e040*/ STRHGT      R2, [R5, #16] 
    /*0002e044*/ MOVGT       R2, #0 
    /*0002e048*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0002e04c*/ MOVW        R2, #998                    @ 0x3e6 
    /*0002e050*/ CMP         R3, R2 
    /*0002e054*/ MOVWGT      R2, #558                    @ 0x22e 
    /*0002e058*/ MOVWGT      LR, #999                    @ 0x3e7 
    /*0002e05c*/ LDRHGT      R9, [R5, R2] 
    /*0002e060*/ MOVLE       R2, #1 
    /*0002e064*/ MOVWGT      R3, #1023                   @ 0x3ff 
    /*0002e068*/ BFIGT       R9, LR, #0, #10 
    /*0002e06c*/ STRHGT      R9, [R5, R2] 
    /*0002e070*/ MOVGT       R2, #0 
    /*0002e074*/ TST         R1, #32 
    /*0002e078*/ STR         R2, [SP, #48]               @ 0x30 
    /*0002e07c*/ BEQ         V16cv500MapNRx_x2e0ec
    /*0002e080*/ LDRB        R2, [R5] 
    /*0002e084*/ MOV         R9, #7 
    /*0002e088*/ ORR         R1, R1, #30 
    /*0002e08c*/ MOV         LR, R2 
    /*0002e090*/ LDR         R2, [R4, #116]              @ 0x74 
    /*0002e094*/ BFI         R2, LR, #15, #8 
    /*0002e098*/ STR         R2, [R4, #116]              @ 0x74 
    /*0002e09c*/ LDRB        R2, [R5, #1] 
    /*0002e0a0*/ MOV         LR, R2 
    /*0002e0a4*/ LDRH        R2, [R4, #118]              @ 0x76 
    /*0002e0a8*/ BFI         R2, LR, #7, #8 
    /*0002e0ac*/ STRH        R2, [R4, #118]              @ 0x76 
    /*0002e0b0*/ LDRB        R2, [R5, #2] 
    /*0002e0b4*/ MOV         LR, R2 
    /*0002e0b8*/ LDRB        R2, [R4, #117]              @ 0x75 
    /*0002e0bc*/ STRB        LR, [R4, #120]              @ 0x78 
    /*0002e0c0*/ BFI         R2, R9, #3, #4 
    /*0002e0c4*/ LDRB        R9, [R5, #3] 
    /*0002e0c8*/ STRB        R2, [R4, #117]              @ 0x75 
    /*0002e0cc*/ LDRH        R2, [R4, #116]              @ 0x74 
    /*0002e0d0*/ STRB        R1, [SP, #76]               @ 0x4c 
    /*0002e0d4*/ LDR         R1, [SP, #32] 
    /*0002e0d8*/ BFI         R2, R0, #1, #10 
    /*0002e0dc*/ STRB        R9, [R4, #121]              @ 0x79 
    /*0002e0e0*/ STRH        R2, [R4, #116]              @ 0x74 
    /*0002e0e4*/ BFI         R2, R1, #0, #1 
    /*0002e0e8*/ STRB        R2, [R4, #116]              @ 0x74 
    V16cv500MapNRx_x2e0ec:
    /*0002e0ec*/ TST         IP, #32 
    /*0002e0f0*/ BEQ         V16cv500MapNRx_x2e168
    /*0002e0f4*/ LDR         R0, [FP, #116]              @ 0x74 
    /*0002e0f8*/ MOV         R1, #7 
    /*0002e0fc*/ LDRB        R2, [R5, #554]              @ 0x22a 
    /*0002e100*/ ORR         IP, IP, #30 
    /*0002e104*/ BFI         R0, R2, #15, #8 
    /*0002e108*/ STR         R0, [FP, #116]              @ 0x74 
    /*0002e10c*/ LDR         R2, [FP, #116]              @ 0x74 
    /*0002e110*/ LDRB        R0, [R5, #555]              @ 0x22b 
    /*0002e114*/ BFI         R2, R0, #23, #8 
    /*0002e118*/ STR         R2, [FP, #116]              @ 0x74 
    /*0002e11c*/ LDR         R2, [FP, #120]              @ 0x78 
    /*0002e120*/ LDRB        R0, [R5, #556]              @ 0x22c 
    /*0002e124*/ BFI         R2, R0, #0, #8 
    /*0002e128*/ STR         R2, [FP, #120]              @ 0x78 
    /*0002e12c*/ LDR         R2, [FP, #120]              @ 0x78 
    /*0002e130*/ LDRB        R0, [R5, #557]              @ 0x22d 
    /*0002e134*/ BFI         R2, R0, #8, #8 
    /*0002e138*/ STR         R2, [FP, #120]              @ 0x78 
    /*0002e13c*/ LDR         R2, [FP, #116]              @ 0x74 
    /*0002e140*/ BFI         R2, R1, #11, #4 
    /*0002e144*/ STR         R2, [FP, #116]              @ 0x74 
    /*0002e148*/ LDR         R2, [FP, #116]              @ 0x74 
    /*0002e14c*/ BFI         R2, R3, #1, #10 
    /*0002e150*/ STR         R2, [FP, #116]              @ 0x74 
    /*0002e154*/ LDR         R3, [FP, #116]              @ 0x74 
    /*0002e158*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0002e15c*/ BFI         R3, R2, #0, #1 
    /*0002e160*/ STR         R3, [FP, #116]              @ 0x74 
    /*0002e164*/ STRB        IP, [SP, #77]               @ 0x4d 
    V16cv500MapNRx_x2e168:
    /*0002e168*/ LDR         R1, [SP, #24] 
    /*0002e16c*/ TST         R1, #32 
    /*0002e170*/ BEQ         V16cv500MapNRx_x2e1dc
    /*0002e174*/ LDRB        IP, [R5, #6] 
    /*0002e178*/ MOV         R3, R4 
    /*0002e17c*/ LDR         R2, [R4, #536]              @ 0x218 
    /*0002e180*/ MOV         R0, #7 
    /*0002e184*/ ORR         R1, R1, #30 
    /*0002e188*/ BFI         R2, IP, #15, #8 
    /*0002e18c*/ STR         R2, [R3, #536]!             @ 0x218 
    /*0002e190*/ LDRB        IP, [R5, #7] 
    /*0002e194*/ LDRH        R2, [R3, #2] 
    /*0002e198*/ BFI         R2, IP, #7, #8 
    /*0002e19c*/ STRH        R2, [R3, #2] 
    /*0002e1a0*/ LDRB        IP, [R5, #8] 
    /*0002e1a4*/ LDRB        R2, [R4, #537]              @ 0x219 
    /*0002e1a8*/ STRB        IP, [R4, #540]              @ 0x21c 
    /*0002e1ac*/ BFI         R2, R0, #3, #4 
    /*0002e1b0*/ LDRB        R0, [R5, #9] 
    /*0002e1b4*/ STRB        R2, [R4, #537]              @ 0x219 
    /*0002e1b8*/ STRB        R1, [SP, #78]               @ 0x4e 
    /*0002e1bc*/ STRB        R0, [R4, #541]              @ 0x21d 
    /*0002e1c0*/ LDR         R1, [SP, #40]               @ 0x28 
    /*0002e1c4*/ LDRH        R2, [R3] 
    /*0002e1c8*/ BFI         R2, R1, #1, #10 
    /*0002e1cc*/ STRH        R2, [R3] 
    /*0002e1d0*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0002e1d4*/ BFI         R2, R3, #0, #1 
    /*0002e1d8*/ STRB        R2, [R4, #536]              @ 0x218 
    V16cv500MapNRx_x2e1dc:
    /*0002e1dc*/ LDR         R0, [SP, #28] 
    /*0002e1e0*/ TST         R0, #32 
    /*0002e1e4*/ BEQ         V16cv500MapNRx_x2e250
    /*0002e1e8*/ LDRB        R1, [R5, #12] 
    /*0002e1ec*/ MOV         R3, R4 
    /*0002e1f0*/ LDR         R2, [R4, #924]              @ 0x39c 
    /*0002e1f4*/ ORR         LR, R0, #30 
    /*0002e1f8*/ MOV         R0, #7 
    /*0002e1fc*/ BFI         R2, R1, #15, #8 
    /*0002e200*/ STR         R2, [R3, #924]!             @ 0x39c 
    /*0002e204*/ LDRB        R1, [R5, #13] 
    /*0002e208*/ LDRH        R2, [R3, #2] 
    /*0002e20c*/ BFI         R2, R1, #7, #8 
    /*0002e210*/ STRH        R2, [R3, #2] 
    /*0002e214*/ LDRB        R1, [R5, #14] 
    /*0002e218*/ LDRB        R2, [R4, #925]              @ 0x39d 
    /*0002e21c*/ STRB        R1, [R4, #928]              @ 0x3a0 
    /*0002e220*/ BFI         R2, R0, #3, #4 
    /*0002e224*/ LDRB        R1, [R5, #15] 
    /*0002e228*/ STRB        R2, [R4, #925]              @ 0x39d 
    /*0002e22c*/ STRB        LR, [SP, #79]               @ 0x4f 
    /*0002e230*/ STRB        R1, [R4, #929]              @ 0x3a1 
    /*0002e234*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0002e238*/ LDRH        R2, [R3] 
    /*0002e23c*/ BFI         R2, R1, #1, #10 
    /*0002e240*/ STRH        R2, [R3] 
    /*0002e244*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0002e248*/ BFI         R2, R3, #0, #1 
    /*0002e24c*/ STRB        R2, [R4, #924]              @ 0x39c 
    V16cv500MapNRx_x2e250:
    /*0002e250*/ MOV         R3, SL 
    /*0002e254*/ MOV         R2, R8 
    /*0002e258*/ MOV         R1, FP 
    /*0002e25c*/ MOV         R0, R4 
    /*0002e260*/ STR         R7, [SP] 
    /*0002e264*/ BL          0x000000000002BAB8 
    /*0002e268*/ MOV         R2, R7 
    /*0002e26c*/ MOV         R1, R5 
    /*0002e270*/ MOV         R0, R4 
    /*0002e274*/ BL          0x000000000002C4E8 
    /*0002e278*/ LDRB        R1, [R5, #18] 
    /*0002e27c*/ LDRH        R0, [R4, #196]              @ 0xc4 
    /*0002e280*/ ADD         R2, R4, #616                @ 0x268 
    /*0002e284*/ LDRB        IP, [R4, #198]              @ 0xc6 
    /*0002e288*/ ADD         R3, R4, #1004               @ 0x3ec 
    /*0002e28c*/ LSR         R1, R1, #3 
    /*0002e290*/ BFI         R0, R1, #6, #5 
    /*0002e294*/ STRH        R0, [R4, #196]              @ 0xc4 
    /*0002e298*/ LDRB        R0, [R5, #18] 
    /*0002e29c*/ LDRB        LR, [R4, #197]              @ 0xc5 
    /*0002e2a0*/ LDRB        R1, [R4, #196]              @ 0xc4 
    /*0002e2a4*/ LSR         R0, R0, #3 
    /*0002e2a8*/ BFI         LR, R0, #3, #5 
    /*0002e2ac*/ STRB        LR, [R4, #197]              @ 0xc5 
    /*0002e2b0*/ LDRB        R0, [R5, #18] 
    /*0002e2b4*/ ORR         R1, R1, #7 
    /*0002e2b8*/ BFC         R1, #3, #3 
    /*0002e2bc*/ STRB        R1, [R4, #196]              @ 0xc4 
    /*0002e2c0*/ LSR         R1, R0, #3 
    /*0002e2c4*/ BFI         IP, R1, #0, #5 
    /*0002e2c8*/ STRB        IP, [R4, #198]              @ 0xc6 
    /*0002e2cc*/ LDRB        R1, [R5, #560]              @ 0x230 
    /*0002e2d0*/ LDR         R0, [FP, #196]              @ 0xc4 
    /*0002e2d4*/ LSR         R1, R1, #3 
    /*0002e2d8*/ BFI         R0, R1, #6, #5 
    /*0002e2dc*/ STR         R0, [FP, #196]              @ 0xc4 
    /*0002e2e0*/ LDRB        R1, [R5, #560]              @ 0x230 
    /*0002e2e4*/ LDR         R0, [FP, #196]              @ 0xc4 
    /*0002e2e8*/ LSR         R1, R1, #3 
    /*0002e2ec*/ BFI         R0, R1, #11, #5 
    /*0002e2f0*/ STR         R0, [FP, #196]              @ 0xc4 
    /*0002e2f4*/ LDRB        R1, [R5, #560]              @ 0x230 
    /*0002e2f8*/ LDR         R0, [FP, #196]              @ 0xc4 
    /*0002e2fc*/ LSR         R1, R1, #3 
    /*0002e300*/ BFI         R0, R1, #16, #5 
    /*0002e304*/ STR         R0, [FP, #196]              @ 0xc4 
    /*0002e308*/ LDR         R1, [FP, #196]              @ 0xc4 
    /*0002e30c*/ ORR         R1, R1, #7 
    /*0002e310*/ STR         R1, [FP, #196]              @ 0xc4 
    /*0002e314*/ LDR         R1, [FP, #196]              @ 0xc4 
    /*0002e318*/ BFC         R1, #3, #3 
    /*0002e31c*/ STR         R1, [FP, #196]              @ 0xc4 
    /*0002e320*/ LDRB        R1, [R5, #170]              @ 0xaa 
    /*0002e324*/ LDRH        R0, [R2] 
    /*0002e328*/ LSR         R1, R1, #3 
    /*0002e32c*/ BFI         R0, R1, #6, #5 
    /*0002e330*/ STRH        R0, [R2] 
    /*0002e334*/ LDRB        R2, [R5, #170]              @ 0xaa 
    /*0002e338*/ LDRB        R0, [R4, #617]              @ 0x269 
    /*0002e33c*/ LDRB        R1, [R4, #618]              @ 0x26a 
    /*0002e340*/ LSR         R2, R2, #3 
    /*0002e344*/ BFI         R0, R2, #3, #5 
    /*0002e348*/ STRB        R0, [R4, #617]              @ 0x269 
    /*0002e34c*/ LDRB        R2, [R5, #170]              @ 0xaa 
    /*0002e350*/ LSR         R2, R2, #3 
    /*0002e354*/ BFI         R1, R2, #0, #5 
    /*0002e358*/ STRB        R1, [R4, #618]              @ 0x26a 
    /*0002e35c*/ LDRB        R2, [R4, #616]              @ 0x268 
    /*0002e360*/ ORR         R2, R2, #7 
    /*0002e364*/ BFC         R2, #3, #3 
    /*0002e368*/ STRB        R2, [R4, #616]              @ 0x268 
    /*0002e36c*/ LDRB        R2, [R5, #322]              @ 0x142 
    /*0002e370*/ LDRH        R1, [R3] 
    /*0002e374*/ LSR         R2, R2, #3 
    /*0002e378*/ BFI         R1, R2, #6, #5 
    /*0002e37c*/ STRH        R1, [R3] 
    /*0002e380*/ LDRB        R2, [R5, #322]              @ 0x142 
    /*0002e384*/ LDRB        R0, [R4, #1005]             @ 0x3ed 
    /*0002e388*/ LDRB        R3, [R4, #1004]             @ 0x3ec 
    /*0002e38c*/ LSR         R2, R2, #3 
    /*0002e390*/ LDRB        R1, [R4, #1006]             @ 0x3ee 
    /*0002e394*/ BFI         R0, R2, #3, #5 
    /*0002e398*/ STRB        R0, [R4, #1005]             @ 0x3ed 
    /*0002e39c*/ LDRB        R2, [R5, #322]              @ 0x142 
    /*0002e3a0*/ ORR         R3, R3, #7 
    /*0002e3a4*/ BFC         R3, #3, #3 
    /*0002e3a8*/ STRB        R3, [R4, #1004]             @ 0x3ec 
    /*0002e3ac*/ LSR         R3, R2, #3 
    /*0002e3b0*/ BFI         R1, R3, #0, #5 
    /*0002e3b4*/ STRB        R1, [R4, #1006]             @ 0x3ee 
    /*0002e3b8*/ LDRB        R3, [R5, #18] 
    /*0002e3bc*/ TST         R3, #248                    @ 0xf8 
    /*0002e3c0*/ BNE         V16cv500MapNRx_x2e3ec
    /*0002e3c4*/ LDRB        R3, [SP, #76]               @ 0x4c 
    /*0002e3c8*/ CMP         R3, #1 
    /*0002e3cc*/ BEQ         V16cv500MapNRx_x2e3ec
    /*0002e3d0*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c98] 
    /*0002e3d4*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c10] 
    /*0002e3d8*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c98] 
    /*0002e3dc*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c10] 
    /*0002e3e0*/ MOVW        R2, #2171                   @ 0x87b 
    /*0002e3e4*/ LDR         R1, [PC, #2472]             @ 0x000000000002ed94 
    /*0002e3e8*/ BL          0x000000000002E3E8          @ osal_panic [R_ARM_CALL: +0x0] 
    V16cv500MapNRx_x2e3ec:
    /*0002e3ec*/ LDRB        R3, [R5, #560]              @ 0x230 
    /*0002e3f0*/ TST         R3, #248                    @ 0xf8 
    /*0002e3f4*/ BNE         V16cv500MapNRx_x2e420
    /*0002e3f8*/ LDRB        R3, [SP, #77]               @ 0x4d 
    /*0002e3fc*/ CMP         R3, #1 
    /*0002e400*/ BEQ         V16cv500MapNRx_x2e420
    /*0002e404*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9ca8] 
    /*0002e408*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c10] 
    /*0002e40c*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9ca8] 
    /*0002e410*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c10] 
    /*0002e414*/ MOVW        R2, #2172                   @ 0x87c 
    /*0002e418*/ LDR         R1, [PC, #2420]             @ 0x000000000002ed94 
    /*0002e41c*/ BL          0x000000000002E41C          @ osal_panic [R_ARM_CALL: +0x0] 
    V16cv500MapNRx_x2e420:
    /*0002e420*/ LDRB        R3, [R5, #170]              @ 0xaa 
    /*0002e424*/ TST         R3, #248                    @ 0xf8 
    /*0002e428*/ BNE         V16cv500MapNRx_x2e454
    /*0002e42c*/ LDRB        R3, [SP, #78]               @ 0x4e 
    /*0002e430*/ CMP         R3, #1 
    /*0002e434*/ BEQ         V16cv500MapNRx_x2e454
    /*0002e438*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9cb8] 
    /*0002e43c*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c10] 
    /*0002e440*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9cb8] 
    /*0002e444*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c10] 
    /*0002e448*/ MOVW        R2, #2173                   @ 0x87d 
    /*0002e44c*/ LDR         R1, [PC, #2368]             @ 0x000000000002ed94 
    /*0002e450*/ BL          0x000000000002E450          @ osal_panic [R_ARM_CALL: +0x0] 
    V16cv500MapNRx_x2e454:
    /*0002e454*/ LDRB        R3, [R5, #322]              @ 0x142 
    /*0002e458*/ TST         R3, #248                    @ 0xf8 
    /*0002e45c*/ BNE         V16cv500MapNRx_x2e488
    /*0002e460*/ LDRB        R3, [SP, #79]               @ 0x4f 
    /*0002e464*/ CMP         R3, #1 
    /*0002e468*/ BEQ         V16cv500MapNRx_x2e488
    /*0002e46c*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9cc8] 
    /*0002e470*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c10] 
    /*0002e474*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9cc8] 
    /*0002e478*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c10] 
    /*0002e47c*/ MOVW        R2, #2174                   @ 0x87e 
    /*0002e480*/ LDR         R1, [PC, #2316]             @ 0x000000000002ed94 
    /*0002e484*/ BL          0x000000000002E484          @ osal_panic [R_ARM_CALL: +0x0] 
    V16cv500MapNRx_x2e488:
    /*0002e488*/ LDRB        R3, [R5, #524]              @ 0x20c 
    /*0002e48c*/ LDRB        R2, [R4] 
    /*0002e490*/ UBFX        R3, R3, #5, #1 
    /*0002e494*/ BFI         R2, R3, #6, #1 
    /*0002e498*/ STRB        R2, [R4] 
    /*0002e49c*/ LDRB        R3, [R5, #524]              @ 0x20c 
    /*0002e4a0*/ ANDS        R2, R3, #32 
    /*0002e4a4*/ BEQ         V16cv500MapNRx_x30d00
    /*0002e4a8*/ LDR         R9, [SP, #16] 
    /*0002e4ac*/ CMP         R9, #0 
    /*0002e4b0*/ BEQ         V16cv500MapNRx_x30d84
    /*0002e4b4*/ LDR         R3, [SP, #20] 
    /*0002e4b8*/ LDR         R7, [R6, R3, LSL #2] 
    /*0002e4bc*/ MOV         R3, #0 
    /*0002e4c0*/ STR         R3, [SP, #80]               @ 0x50 
    /*0002e4c4*/ ADD         R0, R7, #12288              @ 0x3000 
    /*0002e4c8*/ ADD         R2, R7, #16384              @ 0x4000 
    /*0002e4cc*/ ADD         R8, R7, #28672              @ 0x7000 
    /*0002e4d0*/ STR         R3, [SP, #84]               @ 0x54 
    /*0002e4d4*/ LDR         R6, [R0, #1720]             @ 0x6b8 
    /*0002e4d8*/ LDR         LR, [R2, #2352]             @ 0x930 
    /*0002e4dc*/ LDR         IP, [R2, #2524]             @ 0x9dc 
    /*0002e4e0*/ LDR         R2, [R2, #2528]             @ 0x9e0 
    /*0002e4e4*/ CMP         LR, R3 
    /*0002e4e8*/ LDRH        R1, [R6, #204]              @ 0xcc 
    /*0002e4ec*/ LDR         SL, [R8, #1604]             @ 0x644 
    /*0002e4f0*/ STR         R2, [SP, #20] 
    /*0002e4f4*/ BFI         R1, R3, #0, #14 
    /*0002e4f8*/ STR         R3, [SP, #88]               @ 0x58 
    /*0002e4fc*/ STR         R3, [SP, #92]               @ 0x5c 
    /*0002e500*/ STR         R3, [SP, #96]               @ 0x60 
    /*0002e504*/ STR         R3, [SP, #100]              @ 0x64 
    /*0002e508*/ STRH        R1, [R6, #204]              @ 0xcc 
    /*0002e50c*/ LDRH        R2, [R6, #210]              @ 0xd2 
    /*0002e510*/ LDR         R1, [R6, #204]              @ 0xcc 
    /*0002e514*/ BFI         R2, R3, #0, #13 
    /*0002e518*/ STRB        R3, [R6, #4] 
    /*0002e51c*/ BFI         R1, R3, #14, #16 
    /*0002e520*/ STRB        R3, [R6, #5] 
    /*0002e524*/ STRB        R3, [R6, #6] 
    /*0002e528*/ STRB        R3, [R6, #7] 
    /*0002e52c*/ STRH        R3, [R6, #200]              @ 0xc8 
    /*0002e530*/ STRH        R3, [R6, #202]              @ 0xca 
    /*0002e534*/ STRH        R3, [R6, #208]              @ 0xd0 
    /*0002e538*/ STR         R1, [R6, #204]              @ 0xcc 
    /*0002e53c*/ STRH        R2, [R6, #210]              @ 0xd2 
    /*0002e540*/ BEQ         V16cv500MapNRx_x2e550
    /*0002e544*/ LDR         R3, [R9, #72]               @ 0x48 
    /*0002e548*/ CMP         R3, #0 
    /*0002e54c*/ BNE         V16cv500MapNRx_x30e48
    V16cv500MapNRx_x2e550:
    /*0002e550*/ LDRB        R3, [R5, #510]              @ 0x1fe 
    /*0002e554*/ MOVW        LR, #506                    @ 0x1fa 
    /*0002e558*/ ADD         R6, R5, #480                @ 0x1e0 
    /*0002e55c*/ CMP         R3, #30 
    /*0002e560*/ ANDLE       R2, R3, #31 
    /*0002e564*/ MOVGT       R1, #31 
    /*0002e568*/ STRBGT      R1, [R5, #510]              @ 0x1fe 
    /*0002e56c*/ MOVGT       R2, R1 
    /*0002e570*/ LDR         R1, [R4, #300]              @ 0x12c 
    /*0002e574*/ MOVGT       R3, #1 
    /*0002e578*/ MOVLE       R3, #0 
    /*0002e57c*/ BFI         R1, R2, #15, #5 
    /*0002e580*/ STR         R1, [R4, #300]              @ 0x12c 
    /*0002e584*/ LDRB        R2, [R5, #511]              @ 0x1ff 
    /*0002e588*/ CMP         R2, #30 
    /*0002e58c*/ ANDLE       R1, R2, #31 
    /*0002e590*/ MOVGT       R2, #31 
    /*0002e594*/ STRBGT      R2, [R5, #511]              @ 0x1ff 
    /*0002e598*/ MOVGT       R1, R2 
    /*0002e59c*/ ADD         R2, R4, #300                @ 0x12c 
    /*0002e5a0*/ MOVGT       R3, #1 
    /*0002e5a4*/ LDRH        R0, [R2, #2] 
    /*0002e5a8*/ BFI         R0, R1, #4, #5 
    /*0002e5ac*/ STRH        R0, [R2, #2] 
    /*0002e5b0*/ LDRB        R1, [R5, #512]              @ 0x200 
    /*0002e5b4*/ CMP         R1, #30 
    /*0002e5b8*/ ANDLE       R1, R1, #31 
    /*0002e5bc*/ MOVGT       R0, #31 
    /*0002e5c0*/ STRBGT      R0, [R5, #512]              @ 0x200 
    /*0002e5c4*/ MOVGT       R1, R0 
    /*0002e5c8*/ LDRB        R0, [R4, #304]              @ 0x130 
    /*0002e5cc*/ MOVGT       R3, #1 
    /*0002e5d0*/ BFI         R0, R1, #0, #5 
    /*0002e5d4*/ STRB        R0, [R4, #304]              @ 0x130 
    /*0002e5d8*/ LDRB        R1, [R5, #513]              @ 0x201 
    /*0002e5dc*/ CMP         R1, #30 
    /*0002e5e0*/ ANDLE       R1, R1, #31 
    /*0002e5e4*/ MOVGT       R0, #31 
    /*0002e5e8*/ STRBGT      R0, [R5, #513]              @ 0x201 
    /*0002e5ec*/ MOVGT       R1, R0 
    /*0002e5f0*/ ADD         R0, R4, #304                @ 0x130 
    /*0002e5f4*/ STR         R0, [SP, #48]               @ 0x30 
    /*0002e5f8*/ MOVGT       R3, #1 
    /*0002e5fc*/ MOV         IP, R0 
    /*0002e600*/ LDRH        R0, [R0] 
    /*0002e604*/ BFI         R0, R1, #5, #5 
    /*0002e608*/ STRH        R0, [IP] 
    /*0002e60c*/ LDRB        R1, [R5, #514]              @ 0x202 
    /*0002e610*/ MOVW        IP, #998                    @ 0x3e6 
    /*0002e614*/ CMP         R1, #30 
    /*0002e618*/ ANDLE       R1, R1, #31 
    /*0002e61c*/ MOVGT       R0, #31 
    /*0002e620*/ STRBGT      R0, [R5, #514]              @ 0x202 
    /*0002e624*/ MOVGT       R1, R0 
    /*0002e628*/ LDRB        R0, [R4, #305]              @ 0x131 
    /*0002e62c*/ MOVGT       R3, #1 
    /*0002e630*/ BFI         R0, R1, #2, #5 
    /*0002e634*/ STRB        R0, [R4, #305]              @ 0x131 
    /*0002e638*/ LDRB        R1, [R5, #515]              @ 0x203 
    /*0002e63c*/ CMP         R1, #30 
    /*0002e640*/ RSBLE       R3, R3, #0 
    /*0002e644*/ MOVGT       R3, #31 
    /*0002e648*/ STRBGT      R3, [R5, #515]              @ 0x203 
    /*0002e64c*/ LDRGT       R1, [R4, #304]              @ 0x130 
    /*0002e650*/ ANDLE       R3, R3, #31 
    /*0002e654*/ LDRLE       R0, [R4, #304]              @ 0x130 
    /*0002e658*/ ORRGT       R1, R1, #1015808            @ 0xf8000 
    /*0002e65c*/ BFILE       R0, R1, #15, #5 
    /*0002e660*/ STRGT       R1, [R4, #304]              @ 0x130 
    /*0002e664*/ LDRB        R1, [R4, #303]              @ 0x12f 
    /*0002e668*/ STRLE       R0, [R4, #304]              @ 0x130 
    /*0002e66c*/ BFI         R1, R3, #1, #5 
    /*0002e670*/ STRB        R1, [R4, #303]              @ 0x12f 
    /*0002e674*/ LDRH        R3, [R5, LR] 
    /*0002e678*/ UBFX        R0, R3, #0, #10 
    /*0002e67c*/ CMP         R0, IP 
    /*0002e680*/ MOVW        IP, #502                    @ 0x1f6 
    /*0002e684*/ LSLLE       R0, R0, #1 
    /*0002e688*/ MOVWGT      R1, #999                    @ 0x3e7 
    /*0002e68c*/ BFIGT       R3, R1, #0, #10 
    /*0002e690*/ STRHGT      R3, [R5, LR] 
    /*0002e694*/ MOVWGT      R0, #2047                   @ 0x7ff 
    /*0002e698*/ LDRH        R3, [R5, IP] 
    /*0002e69c*/ MOVW        LR, #998                    @ 0x3e6 
    /*0002e6a0*/ UBFX        R1, R3, #4, #10 
    /*0002e6a4*/ CMP         R1, LR 
    /*0002e6a8*/ LSLLE       R1, R1, #2 
    /*0002e6ac*/ MOVWGT      LR, #999                    @ 0x3e7 
    /*0002e6b0*/ BFIGT       R3, LR, #4, #10 
    /*0002e6b4*/ STRHGT      R3, [R5, IP] 
    /*0002e6b8*/ ADD         R3, R4, #296                @ 0x128 
    /*0002e6bc*/ LDRB        IP, [R5, #507]              @ 0x1fb 
    /*0002e6c0*/ MOVWGT      R1, #4095                   @ 0xfff 
    /*0002e6c4*/ LDRB        LR, [R4, #303]              @ 0x12f 
    /*0002e6c8*/ LSR         IP, IP, #7 
    /*0002e6cc*/ BFI         LR, IP, #6, #1 
    /*0002e6d0*/ STRB        LR, [R4, #303]              @ 0x12f 
    /*0002e6d4*/ LDRH        IP, [R3] 
    /*0002e6d8*/ MOVW        LR, #998                    @ 0x3e6 
    /*0002e6dc*/ BFI         IP, R0, #2, #11 
    /*0002e6e0*/ STRH        IP, [R3] 
    /*0002e6e4*/ LDRB        R0, [R5, #507]              @ 0x1fb 
    /*0002e6e8*/ LDR         IP, [R4, #296]              @ 0x128 
    /*0002e6ec*/ UBFX        R0, R0, #2, #5 
    /*0002e6f0*/ BFI         IP, R0, #13, #5 
    /*0002e6f4*/ STR         IP, [R4, #296]              @ 0x128 
    /*0002e6f8*/ LDRH        R0, [R2] 
    /*0002e6fc*/ BFI         R0, R1, #0, #12 
    /*0002e700*/ STRH        R0, [R2] 
    /*0002e704*/ LDRB        R2, [R5, #503]              @ 0x1f7 
    /*0002e708*/ LDRB        R1, [R4, #301]              @ 0x12d 
    /*0002e70c*/ LSR         R2, R2, #6 
    /*0002e710*/ BFI         R1, R2, #4, #2 
    /*0002e714*/ STRB        R1, [R4, #301]              @ 0x12d 
    /*0002e718*/ LDRH        R2, [R3, #2] 
    /*0002e71c*/ LDRB        R1, [R5, #516]              @ 0x204 
    /*0002e720*/ BFI         R2, R1, #6, #4 
    /*0002e724*/ STRH        R2, [R3, #2] 
    /*0002e728*/ LDRB        R2, [R5, #502]              @ 0x1f6 
    /*0002e72c*/ LDRB        R3, [R4, #299]              @ 0x12b 
    /*0002e730*/ LDRB        R1, [R4, #298]              @ 0x12a 
    /*0002e734*/ BFI         R3, R2, #2, #4 
    /*0002e738*/ STRB        R3, [R4, #299]              @ 0x12b 
    /*0002e73c*/ LDRB        R3, [R5, #516]              @ 0x204 
    /*0002e740*/ LDRB        R2, [R4, #345]              @ 0x159 
    /*0002e744*/ LSR         R3, R3, #4 
    /*0002e748*/ BFI         R1, R3, #2, #4 
    /*0002e74c*/ STRB        R1, [R4, #298]              @ 0x12a 
    /*0002e750*/ LDRB        R3, [R5, #524]              @ 0x20c 
    /*0002e754*/ BFI         R2, R3, #0, #3 
    /*0002e758*/ STRB        R2, [R4, #345]              @ 0x159 
    /*0002e75c*/ LDRB        R3, [R5, #517]              @ 0x205 
    /*0002e760*/ CMP         R3, #30 
    /*0002e764*/ ANDLE       R2, R3, #31 
    /*0002e768*/ MOVGT       R1, #31 
    /*0002e76c*/ STRBGT      R1, [R5, #517]              @ 0x205 
    /*0002e770*/ MOVGT       R2, R1 
    /*0002e774*/ LDR         R1, [R4, #352]              @ 0x160 
    /*0002e778*/ MOVGT       R3, #1 
    /*0002e77c*/ MOVLE       R3, #0 
    /*0002e780*/ BFI         R1, R2, #15, #5 
    /*0002e784*/ STR         R1, [R4, #352]              @ 0x160 
    /*0002e788*/ LDRB        R2, [R5, #518]              @ 0x206 
    /*0002e78c*/ CMP         R2, #30 
    /*0002e790*/ ANDLE       R1, R2, #31 
    /*0002e794*/ MOVGT       R2, #31 
    /*0002e798*/ STRBGT      R2, [R5, #518]              @ 0x206 
    /*0002e79c*/ MOVGT       R1, R2 
    /*0002e7a0*/ ADD         R2, R4, #352                @ 0x160 
    /*0002e7a4*/ MOVGT       R3, #1 
    /*0002e7a8*/ LDRH        R0, [R2, #2] 
    /*0002e7ac*/ BFI         R0, R1, #4, #5 
    /*0002e7b0*/ STRH        R0, [R2, #2] 
    /*0002e7b4*/ LDRB        R1, [R5, #519]              @ 0x207 
    /*0002e7b8*/ CMP         R1, #30 
    /*0002e7bc*/ ANDLE       R1, R1, #31 
    /*0002e7c0*/ MOVGT       R0, #31 
    /*0002e7c4*/ STRBGT      R0, [R5, #519]              @ 0x207 
    /*0002e7c8*/ MOVGT       R1, R0 
    /*0002e7cc*/ LDRB        R0, [R4, #356]              @ 0x164 
    /*0002e7d0*/ MOVGT       R3, #1 
    /*0002e7d4*/ BFI         R0, R1, #0, #5 
    /*0002e7d8*/ STRB        R0, [R4, #356]              @ 0x164 
    /*0002e7dc*/ LDRB        R1, [R5, #520]              @ 0x208 
    /*0002e7e0*/ CMP         R1, #30 
    /*0002e7e4*/ ANDLE       R1, R1, #31 
    /*0002e7e8*/ MOVGT       R0, #31 
    /*0002e7ec*/ STRBGT      R0, [R5, #520]              @ 0x208 
    /*0002e7f0*/ MOVGT       R1, R0 
    /*0002e7f4*/ ADD         R0, R4, #356                @ 0x164 
    /*0002e7f8*/ STR         R0, [SP, #52]               @ 0x34 
    /*0002e7fc*/ MOVGT       R3, #1 
    /*0002e800*/ MOV         IP, R0 
    /*0002e804*/ LDRH        R0, [R0] 
    /*0002e808*/ BFI         R0, R1, #5, #5 
    /*0002e80c*/ STRH        R0, [IP] 
    /*0002e810*/ LDRB        R1, [R5, #521]              @ 0x209 
    /*0002e814*/ ADD         IP, R5, #508                @ 0x1fc 
    /*0002e818*/ CMP         R1, #30 
    /*0002e81c*/ ANDLE       R1, R1, #31 
    /*0002e820*/ MOVGT       R0, #31 
    /*0002e824*/ STRBGT      R0, [R5, #521]              @ 0x209 
    /*0002e828*/ MOVGT       R1, R0 
    /*0002e82c*/ LDRB        R0, [R4, #357]              @ 0x165 
    /*0002e830*/ MOVGT       R3, #1 
    /*0002e834*/ BFI         R0, R1, #2, #5 
    /*0002e838*/ STRB        R0, [R4, #357]              @ 0x165 
    /*0002e83c*/ LDRB        R1, [R5, #522]              @ 0x20a 
    /*0002e840*/ CMP         R1, #30 
    /*0002e844*/ RSBLE       R3, R3, #0 
    /*0002e848*/ MOVGT       R3, #31 
    /*0002e84c*/ STRBGT      R3, [R5, #522]              @ 0x20a 
    /*0002e850*/ LDRGT       R1, [R4, #356]              @ 0x164 
    /*0002e854*/ ANDLE       R3, R3, #31 
    /*0002e858*/ LDRLE       R0, [R4, #356]              @ 0x164 
    /*0002e85c*/ ORRGT       R1, R1, #1015808            @ 0xf8000 
    /*0002e860*/ BFILE       R0, R1, #15, #5 
    /*0002e864*/ STRGT       R1, [R4, #356]              @ 0x164 
    /*0002e868*/ LDRB        R1, [R4, #355]              @ 0x163 
    /*0002e86c*/ STRLE       R0, [R4, #356]              @ 0x164 
    /*0002e870*/ BFI         R1, R3, #1, #5 
    /*0002e874*/ STRB        R1, [R4, #355]              @ 0x163 
    /*0002e878*/ LDRH        R3, [IP] 
    /*0002e87c*/ UBFX        R0, R3, #0, #10 
    /*0002e880*/ CMP         R0, LR 
    /*0002e884*/ ADD         LR, R5, #504                @ 0x1f8 
    /*0002e888*/ LSLLE       R0, R0, #1 
    /*0002e88c*/ MOVWGT      R1, #999                    @ 0x3e7 
    /*0002e890*/ BFIGT       R3, R1, #0, #10 
    /*0002e894*/ STRHGT      R3, [IP] 
    /*0002e898*/ MOVWGT      R0, #2047                   @ 0x7ff 
    /*0002e89c*/ LDRH        R3, [LR] 
    /*0002e8a0*/ MOVW        IP, #998                    @ 0x3e6 
    /*0002e8a4*/ UBFX        R1, R3, #4, #10 
    /*0002e8a8*/ CMP         R1, IP 
    /*0002e8ac*/ LSLLE       R1, R1, #2 
    /*0002e8b0*/ MOVWGT      IP, #999                    @ 0x3e7 
    /*0002e8b4*/ BFIGT       R3, IP, #4, #10 
    /*0002e8b8*/ STRHGT      R3, [LR] 
    /*0002e8bc*/ ADD         R3, R4, #348                @ 0x15c 
    /*0002e8c0*/ LDRB        IP, [R5, #509]              @ 0x1fd 
    /*0002e8c4*/ MOVWGT      R1, #4095                   @ 0xfff 
    /*0002e8c8*/ LDRB        LR, [R4, #355]              @ 0x163 
    /*0002e8cc*/ LSR         IP, IP, #7 
    /*0002e8d0*/ BFI         LR, IP, #6, #1 
    /*0002e8d4*/ STRB        LR, [R4, #355]              @ 0x163 
    /*0002e8d8*/ LDRH        IP, [R3] 
    /*0002e8dc*/ MOVW        LR, #998                    @ 0x3e6 
    /*0002e8e0*/ BFI         IP, R0, #2, #11 
    /*0002e8e4*/ STRH        IP, [R3] 
    /*0002e8e8*/ LDRB        R0, [R5, #509]              @ 0x1fd 
    /*0002e8ec*/ LDR         IP, [R4, #348]              @ 0x15c 
    /*0002e8f0*/ UBFX        R0, R0, #2, #5 
    /*0002e8f4*/ BFI         IP, R0, #13, #5 
    /*0002e8f8*/ STR         IP, [R4, #348]              @ 0x15c 
    /*0002e8fc*/ LDRH        R0, [R2] 
    /*0002e900*/ BFI         R0, R1, #0, #12 
    /*0002e904*/ STRH        R0, [R2] 
    /*0002e908*/ LDRB        R2, [R5, #505]              @ 0x1f9 
    /*0002e90c*/ LDRB        R1, [R4, #353]              @ 0x161 
    /*0002e910*/ LSR         R2, R2, #6 
    /*0002e914*/ BFI         R1, R2, #4, #2 
    /*0002e918*/ STRB        R1, [R4, #353]              @ 0x161 
    /*0002e91c*/ LDRH        R2, [R3, #2] 
    /*0002e920*/ LDRB        R1, [R5, #523]              @ 0x20b 
    /*0002e924*/ BFI         R2, R1, #6, #4 
    /*0002e928*/ STRH        R2, [R3, #2] 
    /*0002e92c*/ LDRB        R1, [R5, #504]              @ 0x1f8 
    /*0002e930*/ LDRB        R3, [R4, #351]              @ 0x15f 
    /*0002e934*/ LDRB        R2, [R4, #350]              @ 0x15e 
    /*0002e938*/ BFI         R3, R1, #2, #4 
    /*0002e93c*/ STRB        R3, [R4, #351]              @ 0x15f 
    /*0002e940*/ LDRB        R3, [R5, #523]              @ 0x20b 
    /*0002e944*/ LDRB        R1, [R4, #397]              @ 0x18d 
    /*0002e948*/ LSR         R3, R3, #4 
    /*0002e94c*/ BFC         R1, #0, #3 
    /*0002e950*/ BFI         R2, R3, #2, #4 
    /*0002e954*/ STRB        R1, [R4, #397]              @ 0x18d 
    /*0002e958*/ STRB        R2, [R4, #350]              @ 0x15e 
    /*0002e95c*/ LDRB        R3, [R5, #534]              @ 0x216 
    /*0002e960*/ CMP         R3, #30 
    /*0002e964*/ ANDLE       R2, R3, #31 
    /*0002e968*/ MOVGT       R1, #31 
    /*0002e96c*/ STRBGT      R1, [R5, #534]              @ 0x216 
    /*0002e970*/ MOVGT       R2, R1 
    /*0002e974*/ LDR         R1, [R4, #688]              @ 0x2b0 
    /*0002e978*/ MOVGT       R3, #1 
    /*0002e97c*/ MOVLE       R3, #0 
    /*0002e980*/ BFI         R1, R2, #15, #5 
    /*0002e984*/ STR         R1, [R4, #688]              @ 0x2b0 
    /*0002e988*/ LDRB        R2, [R5, #535]              @ 0x217 
    /*0002e98c*/ CMP         R2, #30 
    /*0002e990*/ ANDLE       R1, R2, #31 
    /*0002e994*/ MOVGT       R2, #31 
    /*0002e998*/ STRBGT      R2, [R5, #535]              @ 0x217 
    /*0002e99c*/ MOVGT       R1, R2 
    /*0002e9a0*/ ADD         R2, R4, #688                @ 0x2b0 
    /*0002e9a4*/ MOVGT       R3, #1 
    /*0002e9a8*/ LDRH        R0, [R2, #2] 
    /*0002e9ac*/ BFI         R0, R1, #4, #5 
    /*0002e9b0*/ STRH        R0, [R2, #2] 
    /*0002e9b4*/ LDRB        R1, [R5, #536]              @ 0x218 
    /*0002e9b8*/ CMP         R1, #30 
    /*0002e9bc*/ ANDLE       R1, R1, #31 
    /*0002e9c0*/ MOVGT       R0, #31 
    /*0002e9c4*/ STRBGT      R0, [R5, #536]              @ 0x218 
    /*0002e9c8*/ MOVGT       R1, R0 
    /*0002e9cc*/ LDRB        R0, [R4, #692]              @ 0x2b4 
    /*0002e9d0*/ MOVGT       R3, #1 
    /*0002e9d4*/ BFI         R0, R1, #0, #5 
    /*0002e9d8*/ STRB        R0, [R4, #692]              @ 0x2b4 
    /*0002e9dc*/ LDRB        R1, [R5, #537]              @ 0x219 
    /*0002e9e0*/ CMP         R1, #30 
    /*0002e9e4*/ ANDLE       R1, R1, #31 
    /*0002e9e8*/ MOVGT       R0, #31 
    /*0002e9ec*/ STRBGT      R0, [R5, #537]              @ 0x219 
    /*0002e9f0*/ MOVGT       R1, R0 
    /*0002e9f4*/ ADD         R0, R4, #692                @ 0x2b4 
    /*0002e9f8*/ STR         R0, [SP, #40]               @ 0x28 
    /*0002e9fc*/ MOVGT       R3, #1 
    /*0002ea00*/ MOV         IP, R0 
    /*0002ea04*/ LDRH        R0, [R0] 
    /*0002ea08*/ BFI         R0, R1, #5, #5 
    /*0002ea0c*/ STRH        R0, [IP] 
    /*0002ea10*/ LDRB        R1, [R5, #538]              @ 0x21a 
    /*0002ea14*/ MOVW        IP, #530                    @ 0x212 
    /*0002ea18*/ CMP         R1, #30 
    /*0002ea1c*/ ANDLE       R1, R1, #31 
    /*0002ea20*/ MOVGT       R0, #31 
    /*0002ea24*/ STRBGT      R0, [R5, #538]              @ 0x21a 
    /*0002ea28*/ MOVGT       R1, R0 
    /*0002ea2c*/ LDRB        R0, [R4, #693]              @ 0x2b5 
    /*0002ea30*/ MOVGT       R3, #1 
    /*0002ea34*/ BFI         R0, R1, #2, #5 
    /*0002ea38*/ STRB        R0, [R4, #693]              @ 0x2b5 
    /*0002ea3c*/ LDRB        R1, [R5, #539]              @ 0x21b 
    /*0002ea40*/ CMP         R1, #30 
    /*0002ea44*/ RSBLE       R3, R3, #0 
    /*0002ea48*/ MOVGT       R3, #31 
    /*0002ea4c*/ STRBGT      R3, [R5, #539]              @ 0x21b 
    /*0002ea50*/ LDRGT       R1, [R4, #692]              @ 0x2b4 
    /*0002ea54*/ ANDLE       R3, R3, #31 
    /*0002ea58*/ LDRLE       R0, [R4, #692]              @ 0x2b4 
    /*0002ea5c*/ ORRGT       R1, R1, #1015808            @ 0xf8000 
    /*0002ea60*/ BFILE       R0, R1, #15, #5 
    /*0002ea64*/ STRGT       R1, [R4, #692]              @ 0x2b4 
    /*0002ea68*/ LDRB        R1, [R4, #691]              @ 0x2b3 
    /*0002ea6c*/ STRLE       R0, [R4, #692]              @ 0x2b4 
    /*0002ea70*/ BFI         R1, R3, #1, #5 
    /*0002ea74*/ STRB        R1, [R4, #691]              @ 0x2b3 
    /*0002ea78*/ LDRH        R3, [R5, IP] 
    /*0002ea7c*/ UBFX        R0, R3, #0, #10 
    /*0002ea80*/ CMP         R0, LR 
    /*0002ea84*/ MOVW        LR, #998                    @ 0x3e6 
    /*0002ea88*/ LSLLE       R0, R0, #1 
    /*0002ea8c*/ MOVWGT      R1, #999                    @ 0x3e7 
    /*0002ea90*/ BFIGT       R3, R1, #0, #10 
    /*0002ea94*/ STRHGT      R3, [R5, IP] 
    /*0002ea98*/ MOVW        IP, #526                    @ 0x20e 
    /*0002ea9c*/ LDRH        R3, [R5, IP] 
    /*0002eaa0*/ MOVWGT      R0, #2047                   @ 0x7ff 
    /*0002eaa4*/ UBFX        R1, R3, #4, #10 
    /*0002eaa8*/ CMP         R1, LR 
    /*0002eaac*/ LSLLE       R1, R1, #2 
    /*0002eab0*/ MOVWGT      LR, #999                    @ 0x3e7 
    /*0002eab4*/ BFIGT       R3, LR, #4, #10 
    /*0002eab8*/ STRHGT      R3, [R5, IP] 
    /*0002eabc*/ ADD         R3, R4, #684                @ 0x2ac 
    /*0002eac0*/ LDRB        IP, [R5, #531]              @ 0x213 
    /*0002eac4*/ MOVWGT      R1, #4095                   @ 0xfff 
    /*0002eac8*/ LDRB        LR, [R4, #691]              @ 0x2b3 
    /*0002eacc*/ LSR         IP, IP, #7 
    /*0002ead0*/ BFI         LR, IP, #6, #1 
    /*0002ead4*/ STRB        LR, [R4, #691]              @ 0x2b3 
    /*0002ead8*/ LDRH        IP, [R3] 
    /*0002eadc*/ MOVW        LR, #998                    @ 0x3e6 
    /*0002eae0*/ BFI         IP, R0, #2, #11 
    /*0002eae4*/ STRH        IP, [R3] 
    /*0002eae8*/ LDRB        R0, [R5, #531]              @ 0x213 
    /*0002eaec*/ LDR         IP, [R4, #684]              @ 0x2ac 
    /*0002eaf0*/ UBFX        R0, R0, #2, #5 
    /*0002eaf4*/ BFI         IP, R0, #13, #5 
    /*0002eaf8*/ STR         IP, [R4, #684]              @ 0x2ac 
    /*0002eafc*/ LDRH        R0, [R2] 
    /*0002eb00*/ BFI         R0, R1, #0, #12 
    /*0002eb04*/ STRH        R0, [R2] 
    /*0002eb08*/ LDRB        R2, [R5, #527]              @ 0x20f 
    /*0002eb0c*/ LDRB        R1, [R4, #689]              @ 0x2b1 
    /*0002eb10*/ LSR         R2, R2, #6 
    /*0002eb14*/ BFI         R1, R2, #4, #2 
    /*0002eb18*/ STRB        R1, [R4, #689]              @ 0x2b1 
    /*0002eb1c*/ LDRH        R2, [R3, #2] 
    /*0002eb20*/ LDRB        R1, [R5, #540]              @ 0x21c 
    /*0002eb24*/ BFI         R2, R1, #6, #4 
    /*0002eb28*/ STRH        R2, [R3, #2] 
    /*0002eb2c*/ LDRB        R1, [R5, #526]              @ 0x20e 
    /*0002eb30*/ LDRB        R3, [R4, #687]              @ 0x2af 
    /*0002eb34*/ LDRB        R2, [R4, #686]              @ 0x2ae 
    /*0002eb38*/ BFI         R3, R1, #2, #4 
    /*0002eb3c*/ STRB        R3, [R4, #687]              @ 0x2af 
    /*0002eb40*/ LDRB        R3, [R5, #540]              @ 0x21c 
    /*0002eb44*/ LSR         R3, R3, #4 
    /*0002eb48*/ BFI         R2, R3, #2, #4 
    /*0002eb4c*/ STRB        R2, [R4, #686]              @ 0x2ae 
    /*0002eb50*/ LDRB        R3, [R5, #541]              @ 0x21d 
    /*0002eb54*/ CMP         R3, #30 
    /*0002eb58*/ ANDLE       R2, R3, #31 
    /*0002eb5c*/ MOVGT       R1, #31 
    /*0002eb60*/ STRBGT      R1, [R5, #541]              @ 0x21d 
    /*0002eb64*/ MOVGT       R2, R1 
    /*0002eb68*/ LDR         R1, [R4, #740]              @ 0x2e4 
    /*0002eb6c*/ MOVGT       R3, #1 
    /*0002eb70*/ MOVLE       R3, #0 
    /*0002eb74*/ BFI         R1, R2, #15, #5 
    /*0002eb78*/ STR         R1, [R4, #740]              @ 0x2e4 
    /*0002eb7c*/ LDRB        R2, [R5, #542]              @ 0x21e 
    /*0002eb80*/ CMP         R2, #30 
    /*0002eb84*/ ANDLE       R1, R2, #31 
    /*0002eb88*/ MOVGT       R2, #31 
    /*0002eb8c*/ STRBGT      R2, [R5, #542]              @ 0x21e 
    /*0002eb90*/ MOVGT       R1, R2 
    /*0002eb94*/ ADD         R2, R4, #740                @ 0x2e4 
    /*0002eb98*/ MOVGT       R3, #1 
    /*0002eb9c*/ LDRH        R0, [R2, #2] 
    /*0002eba0*/ BFI         R0, R1, #4, #5 
    /*0002eba4*/ STRH        R0, [R2, #2] 
    /*0002eba8*/ LDRB        R1, [R5, #543]              @ 0x21f 
    /*0002ebac*/ CMP         R1, #30 
    /*0002ebb0*/ ANDLE       R1, R1, #31 
    /*0002ebb4*/ MOVGT       R0, #31 
    /*0002ebb8*/ STRBGT      R0, [R5, #543]              @ 0x21f 
    /*0002ebbc*/ MOVGT       R1, R0 
    /*0002ebc0*/ LDRB        R0, [R4, #744]              @ 0x2e8 
    /*0002ebc4*/ MOVGT       R3, #1 
    /*0002ebc8*/ BFI         R0, R1, #0, #5 
    /*0002ebcc*/ STRB        R0, [R4, #744]              @ 0x2e8 
    /*0002ebd0*/ LDRB        R1, [R5, #544]              @ 0x220 
    /*0002ebd4*/ CMP         R1, #30 
    /*0002ebd8*/ ANDLE       R1, R1, #31 
    /*0002ebdc*/ MOVGT       R0, #31 
    /*0002ebe0*/ STRBGT      R0, [R5, #544]              @ 0x220 
    /*0002ebe4*/ MOVGT       R1, R0 
    /*0002ebe8*/ ADD         R0, R4, #744                @ 0x2e8 
    /*0002ebec*/ STR         R0, [SP, #44]               @ 0x2c 
    /*0002ebf0*/ MOVGT       R3, #1 
    /*0002ebf4*/ MOV         IP, R0 
    /*0002ebf8*/ LDRH        R0, [R0] 
    /*0002ebfc*/ BFI         R0, R1, #5, #5 
    /*0002ec00*/ STRH        R0, [IP] 
    /*0002ec04*/ LDRB        R1, [R5, #545]              @ 0x221 
    /*0002ec08*/ MOVW        IP, #998                    @ 0x3e6 
    /*0002ec0c*/ CMP         R1, #30 
    /*0002ec10*/ ANDLE       R1, R1, #31 
    /*0002ec14*/ MOVGT       R0, #31 
    /*0002ec18*/ STRBGT      R0, [R5, #545]              @ 0x221 
    /*0002ec1c*/ MOVGT       R1, R0 
    /*0002ec20*/ LDRB        R0, [R4, #745]              @ 0x2e9 
    /*0002ec24*/ MOVGT       R3, #1 
    /*0002ec28*/ BFI         R0, R1, #2, #5 
    /*0002ec2c*/ STRB        R0, [R4, #745]              @ 0x2e9 
    /*0002ec30*/ LDRB        R1, [R5, #546]              @ 0x222 
    /*0002ec34*/ CMP         R1, #30 
    /*0002ec38*/ RSBLE       R3, R3, #0 
    /*0002ec3c*/ MOVGT       R3, #31 
    /*0002ec40*/ LDRLE       R0, [R4, #744]              @ 0x2e8 
    /*0002ec44*/ STRBGT      R3, [R5, #546]              @ 0x222 
    /*0002ec48*/ ANDLE       R3, R3, #31 
    /*0002ec4c*/ LDRGT       R1, [R4, #744]              @ 0x2e8 
    /*0002ec50*/ BFILE       R0, R1, #15, #5 
    /*0002ec54*/ ORRGT       R1, R1, #1015808            @ 0xf8000 
    /*0002ec58*/ STRGT       R1, [R4, #744]              @ 0x2e8 
    /*0002ec5c*/ STRLE       R0, [R4, #744]              @ 0x2e8 
    /*0002ec60*/ ADD         R0, R5, #532                @ 0x214 
    /*0002ec64*/ LDRB        R1, [R4, #743]              @ 0x2e7 
    /*0002ec68*/ BFI         R1, R3, #1, #5 
    /*0002ec6c*/ STRB        R1, [R4, #743]              @ 0x2e7 
    /*0002ec70*/ LDRH        R3, [R0] 
    /*0002ec74*/ UBFX        R1, R3, #0, #10 
    /*0002ec78*/ CMP         R1, IP 
    /*0002ec7c*/ LSLLE       R1, R1, #1 
    /*0002ec80*/ MOVWGT      IP, #999                    @ 0x3e7 
    /*0002ec84*/ BFIGT       R3, IP, #0, #10 
    /*0002ec88*/ ADD         IP, R5, #528                @ 0x210 
    /*0002ec8c*/ STRHGT      R3, [R0] 
    /*0002ec90*/ MOVWGT      R1, #2047                   @ 0x7ff 
    /*0002ec94*/ LDRH        R3, [IP] 
    /*0002ec98*/ UBFX        R0, R3, #4, #10 
    /*0002ec9c*/ CMP         R0, LR 
    /*0002eca0*/ LSLLE       R0, R0, #2 
    /*0002eca4*/ MOVWGT      LR, #999                    @ 0x3e7 
    /*0002eca8*/ BFIGT       R3, LR, #4, #10 
    /*0002ecac*/ STRHGT      R3, [IP] 
    /*0002ecb0*/ ADD         R3, R4, #736                @ 0x2e0 
    /*0002ecb4*/ LDRB        IP, [R5, #533]              @ 0x215 
    /*0002ecb8*/ MOVWGT      R0, #4095                   @ 0xfff 
    /*0002ecbc*/ LDRB        LR, [R4, #743]              @ 0x2e7 
    /*0002ecc0*/ STR         R6, [SP, #56]               @ 0x38 
    /*0002ecc4*/ LSR         IP, IP, #7 
    /*0002ecc8*/ BFI         LR, IP, #6, #1 
    /*0002eccc*/ STRB        LR, [R4, #743]              @ 0x2e7 
    /*0002ecd0*/ LDRH        LR, [R3] 
    /*0002ecd4*/ MOVW        IP, #474                    @ 0x1da 
    /*0002ecd8*/ BFI         LR, R1, #2, #11 
    /*0002ecdc*/ STRH        LR, [R3] 
    /*0002ece0*/ LDRB        R1, [R5, #533]              @ 0x215 
    /*0002ece4*/ LDR         LR, [R4, #736]              @ 0x2e0 
    /*0002ece8*/ UBFX        R1, R1, #2, #5 
    /*0002ecec*/ BFI         LR, R1, #13, #5 
    /*0002ecf0*/ STR         LR, [R4, #736]              @ 0x2e0 
    /*0002ecf4*/ LDRH        R1, [R2] 
    /*0002ecf8*/ BFI         R1, R0, #0, #12 
    /*0002ecfc*/ STRH        R1, [R2] 
    /*0002ed00*/ LDRB        R2, [R5, #529]              @ 0x211 
    /*0002ed04*/ LDRB        R1, [R4, #741]              @ 0x2e5 
    /*0002ed08*/ LSR         R2, R2, #6 
    /*0002ed0c*/ BFI         R1, R2, #4, #2 
    /*0002ed10*/ STRB        R1, [R4, #741]              @ 0x2e5 
    /*0002ed14*/ LDRB        R1, [R5, #547]              @ 0x223 
    /*0002ed18*/ LDRH        R2, [R3, #2] 
    /*0002ed1c*/ BFI         R2, R1, #6, #4 
    /*0002ed20*/ STRH        R2, [R3, #2] 
    /*0002ed24*/ LDRB        R1, [R5, #528]              @ 0x210 
    /*0002ed28*/ LDRB        R3, [R4, #739]              @ 0x2e3 
    /*0002ed2c*/ LDRB        R2, [R4, #738]              @ 0x2e2 
    /*0002ed30*/ BFI         R3, R1, #2, #4 
    /*0002ed34*/ STRB        R3, [R4, #739]              @ 0x2e3 
    /*0002ed38*/ LDRB        R3, [R5, #547]              @ 0x223 
    /*0002ed3c*/ LSR         R3, R3, #4 
    /*0002ed40*/ BFI         R2, R3, #2, #4 
    /*0002ed44*/ STRB        R2, [R4, #738]              @ 0x2e2 
    /*0002ed48*/ LDRH        R1, [R6] 
    /*0002ed4c*/ LDRB        R3, [R5, #485]              @ 0x1e5 
    /*0002ed50*/ LDRH        LR, [R5, IP] 
    /*0002ed54*/ UBFX        R1, R1, #0, #10 
    /*0002ed58*/ AND         R3, R3, #15 
    /*0002ed5c*/ STR         R3, [SP, #20] 
    /*0002ed60*/ LDRB        R3, [R5, #478]              @ 0x1de 
    /*0002ed64*/ UBFX        LR, LR, #0, #9 
    /*0002ed68*/ CMP         R1, #800                    @ 0x320 
    /*0002ed6c*/ STR         R3, [SP, #24] 
    /*0002ed70*/ UXTH        R3, LR 
    /*0002ed74*/ STR         R3, [SP, #28] 
    /*0002ed78*/ BLT         V16cv500MapNRx_x2ed98
    /*0002ed7c*/ ADD         R1, R1, R1, LSR #5 
    /*0002ed80*/ CMP         R1, #1024                   @ 0x400 
    /*0002ed84*/ MOVWGE      R1, #1023                   @ 0x3ff 
    /*0002ed88*/ MOVGE       R3, R1 
    /*0002ed8c*/ BGE         V16cv500MapNRx_x2edac
    /*0002ed90*/ B           V16cv500MapNRx_x2ed98
    /*0002ed94*/ ANDEQ       R1, R0, R8, LSL #13 
    V16cv500MapNRx_x2ed98:
    /*0002ed98*/ ADD         R2, R1, R1, LSL #1 
    /*0002ed9c*/ MOVW        R0, #1023                   @ 0x3ff 
    /*0002eda0*/ ASR         R3, R2, #1 
    /*0002eda4*/ CMP         R3, R0 
    /*0002eda8*/ MOVGE       R3, R0 
    V16cv500MapNRx_x2edac:
    /*0002edac*/ LDRB        IP, [R5, #481]              @ 0x1e1 
    /*0002edb0*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x165c] 
    /*0002edb4*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x165c] 
    /*0002edb8*/ STR         R2, [SP, #16] 
    /*0002edbc*/ UBFX        IP, IP, #2, #4 
    /*0002edc0*/ LDRB        R0, [R4, #254]              @ 0xfe 
    /*0002edc4*/ MOV         R6, R2 
    /*0002edc8*/ ADD         IP, R2, IP 
    /*0002edcc*/ LDR         R2, [SP, #24] 
    /*0002edd0*/ SXTH        LR, LR 
    /*0002edd4*/ LDRB        IP, [IP, #60]               @ 0x3c 
    /*0002edd8*/ ADD         LR, LR, LR, LSL #1 
    /*0002eddc*/ ADD         R2, R2, R2, LSL #1 
    /*0002ede0*/ BFI         R0, IP, #4, #4 
    /*0002ede4*/ STRB        R0, [R4, #254]              @ 0xfe 
    /*0002ede8*/ MOVW        IP, #511                    @ 0x1ff 
    /*0002edec*/ ASR         R2, R2, #1 
    /*0002edf0*/ LDRB        R0, [R5, #481]              @ 0x1e1 
    /*0002edf4*/ MOV         R7, R2 
    /*0002edf8*/ UBFX        R0, R0, #2, #4 
    /*0002edfc*/ ASR         R2, LR, #1 
    /*0002ee00*/ ADD         R0, R6, R0 
    /*0002ee04*/ MOV         LR, R2 
    /*0002ee08*/ CMP         LR, IP 
    /*0002ee0c*/ LDRB        R2, [R4, #255]              @ 0xff 
    /*0002ee10*/ LDRB        R0, [R0, #76]               @ 0x4c 
    /*0002ee14*/ MOVLT       IP, LR 
    /*0002ee18*/ CMP         R7, #255                    @ 0xff 
    /*0002ee1c*/ STR         IP, [SP, #36]               @ 0x24 
    /*0002ee20*/ BFI         R2, R0, #0, #3 
    /*0002ee24*/ MOVLT       R0, R7 
    /*0002ee28*/ MOVGE       R0, #255                    @ 0xff 
    /*0002ee2c*/ CMP         R3, #0 
    /*0002ee30*/ UXTB        R2, R2 
    /*0002ee34*/ STR         R0, [SP, #32] 
    /*0002ee38*/ ORR         R2, R2, #8 
    /*0002ee3c*/ STRB        R2, [R4, #255]              @ 0xff 
    /*0002ee40*/ BEQ         V16cv500MapNRx_x2f028
    /*0002ee44*/ CMP         R3, R1 
    /*0002ee48*/ LDRH        IP, [R4, #236]              @ 0xec 
    /*0002ee4c*/ LDRH        R9, [R4, #234]              @ 0xea 
    /*0002ee50*/ MOVLT       R1, R3 
    /*0002ee54*/ SUB         R2, R3, R1 
    /*0002ee58*/ LSL         R3, R1, #4 
    /*0002ee5c*/ LDRH        SL, [R4, #240]              @ 0xf0 
    /*0002ee60*/ LSL         R6, R2, #1 
    /*0002ee64*/ ADD         R8, R2, R6 
    /*0002ee68*/ ADD         R6, R3, R6 
    /*0002ee6c*/ ADD         LR, R2, R8 
    /*0002ee70*/ ADD         R8, R3, R8 
    /*0002ee74*/ ADD         R1, R2, LR 
    /*0002ee78*/ ADD         R8, R8, #8 
    /*0002ee7c*/ ADD         R7, R2, R1 
    /*0002ee80*/ STR         R1, [SP, #60]               @ 0x3c 
    /*0002ee84*/ ADD         R0, R2, R7 
    /*0002ee88*/ ADD         R7, R3, R7 
    /*0002ee8c*/ ADD         R7, R7, #8 
    /*0002ee90*/ ADD         R1, R2, R0 
    /*0002ee94*/ ASR         R8, R8, #4 
    /*0002ee98*/ ADD         R6, R6, #8 
    /*0002ee9c*/ BFI         IP, R8, #0, #10 
    /*0002eea0*/ ASR         R7, R7, #4 
    /*0002eea4*/ ADD         R8, R2, R1 
    /*0002eea8*/ BFI         SL, R7, #0, #10 
    /*0002eeac*/ ADD         R7, R2, R8 
    /*0002eeb0*/ STRH        SL, [R4, #240]              @ 0xf0 
    /*0002eeb4*/ ADD         R8, R3, R8 
    /*0002eeb8*/ ADD         SL, R2, R7 
    /*0002eebc*/ ADD         R7, R3, R7 
    /*0002eec0*/ ADD         LR, R3, LR 
    /*0002eec4*/ ADD         R8, R8, #8 
    /*0002eec8*/ ADD         R7, R7, #8 
    /*0002eecc*/ STRH        IP, [R4, #236]              @ 0xec 
    /*0002eed0*/ ASR         R6, R6, #4 
    /*0002eed4*/ LDR         IP, [SP, #60]               @ 0x3c 
    /*0002eed8*/ ADD         LR, LR, #8 
    /*0002eedc*/ BFI         R9, R6, #0, #10 
    /*0002eee0*/ ASR         R8, R8, #4 
    /*0002eee4*/ ASR         R7, R7, #4 
    /*0002eee8*/ STR         R8, [SP, #64]               @ 0x40 
    /*0002eeec*/ STR         R7, [SP, #60]               @ 0x3c 
    /*0002eef0*/ ADD         R0, R3, R0 
    /*0002eef4*/ STRH        R9, [R4, #234]              @ 0xea 
    /*0002eef8*/ ASR         LR, LR, #4 
    /*0002eefc*/ LDR         R9, [R4, #236]              @ 0xec 
    /*0002ef00*/ ADD         IP, R3, IP 
    /*0002ef04*/ ADD         R0, R0, #8 
    /*0002ef08*/ ADD         IP, IP, #8 
    /*0002ef0c*/ BFI         R9, LR, #10, #10 
    /*0002ef10*/ LDR         LR, [R4, #240]              @ 0xf0 
    /*0002ef14*/ STR         R9, [R4, #236]              @ 0xec 
    /*0002ef18*/ ASR         R0, R0, #4 
    /*0002ef1c*/ ASR         IP, IP, #4 
    /*0002ef20*/ LSR         R9, R9, #16 
    /*0002ef24*/ ADD         R8, R2, SL 
    /*0002ef28*/ BFI         R9, IP, #4, #10 
    /*0002ef2c*/ BFI         LR, R0, #10, #10 
    /*0002ef30*/ STRH        R9, [R4, #238]              @ 0xee 
    /*0002ef34*/ STR         LR, [R4, #240]              @ 0xf0 
    /*0002ef38*/ ADD         R7, R2, R8 
    /*0002ef3c*/ LDR         R9, [SP, #64]               @ 0x40 
    /*0002ef40*/ ADD         R1, R3, R1 
    /*0002ef44*/ LDRH        R0, [R4, #244]              @ 0xf4 
    /*0002ef48*/ ADD         R8, R3, R8 
    /*0002ef4c*/ ADD         R1, R1, #8 
    /*0002ef50*/ ADD         R8, R8, #8 
    /*0002ef54*/ ADD         R6, R2, R7 
    /*0002ef58*/ BFI         R0, R9, #0, #10 
    /*0002ef5c*/ STRH        R0, [R4, #244]              @ 0xf4 
    /*0002ef60*/ ADD         IP, R2, R6 
    /*0002ef64*/ LDRH        R0, [R4, #248]              @ 0xf8 
    /*0002ef68*/ ASR         R1, R1, #4 
    /*0002ef6c*/ ASR         R8, R8, #4 
    /*0002ef70*/ LSR         LR, LR, #16 
    /*0002ef74*/ BFI         LR, R1, #4, #10 
    /*0002ef78*/ ADD         R7, R3, R7 
    /*0002ef7c*/ STRH        LR, [R4, #242]              @ 0xf2 
    /*0002ef80*/ BFI         R0, R8, #0, #10 
    /*0002ef84*/ STRH        R0, [R4, #248]              @ 0xf8 
    /*0002ef88*/ ADD         R0, R3, IP 
    /*0002ef8c*/ ADD         IP, R2, IP 
    /*0002ef90*/ LDR         R1, [R4, #244]              @ 0xf4 
    /*0002ef94*/ ADD         SL, R3, SL 
    /*0002ef98*/ ADD         R6, R3, R6 
    /*0002ef9c*/ ADD         IP, IP, R3 
    /*0002efa0*/ ADD         R7, R7, #8 
    /*0002efa4*/ ADD         R3, R2, R3 
    /*0002efa8*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*0002efac*/ LDR         LR, [R4, #248]              @ 0xf8 
    /*0002efb0*/ ADD         R0, R0, #8 
    /*0002efb4*/ BFI         R1, R2, #10, #10 
    /*0002efb8*/ ADD         SL, SL, #8 
    /*0002efbc*/ LDRH        R2, [R4, #252]              @ 0xfc 
    /*0002efc0*/ ASR         R7, R7, #4 
    /*0002efc4*/ ASR         R0, R0, #4 
    /*0002efc8*/ BFI         LR, R7, #10, #10 
    /*0002efcc*/ ADD         R6, R6, #8 
    /*0002efd0*/ ADD         IP, IP, #8 
    /*0002efd4*/ ADD         R3, R3, #8 
    /*0002efd8*/ STR         R1, [R4, #244]              @ 0xf4 
    /*0002efdc*/ BFI         R2, R0, #0, #10 
    /*0002efe0*/ ASR         SL, SL, #4 
    /*0002efe4*/ STRH        R2, [R4, #252]              @ 0xfc 
    /*0002efe8*/ LSR         R1, R1, #16 
    /*0002efec*/ LDR         R2, [R4, #252]              @ 0xfc 
    /*0002eff0*/ BFI         R1, SL, #4, #10 
    /*0002eff4*/ LDRH        R0, [R4, #232]              @ 0xe8 
    /*0002eff8*/ ASR         R6, R6, #4 
    /*0002effc*/ STRH        R1, [R4, #246]              @ 0xf6 
    /*0002f000*/ ASR         IP, IP, #4 
    /*0002f004*/ ASR         R3, R3, #4 
    /*0002f008*/ LSR         R1, LR, #16 
    /*0002f00c*/ STR         LR, [R4, #248]              @ 0xf8 
    /*0002f010*/ BFI         R1, R6, #4, #10 
    /*0002f014*/ BFI         R2, IP, #10, #10 
    /*0002f018*/ STRH        R1, [R4, #250]              @ 0xfa 
    /*0002f01c*/ BFI         R0, R3, #6, #10 
    /*0002f020*/ STR         R2, [R4, #252]              @ 0xfc 
    /*0002f024*/ STRH        R0, [R4, #232]              @ 0xe8 
    V16cv500MapNRx_x2f028:
    /*0002f028*/ LDRB        R3, [R5, #481]              @ 0x1e1 
    /*0002f02c*/ ADD         R2, R4, #256                @ 0x100 
    /*0002f030*/ LDR         IP, [SP, #16] 
    /*0002f034*/ ADD         R6, R4, #308                @ 0x134 
    /*0002f038*/ LDR         R0, [SP, #20] 
    /*0002f03c*/ LSR         R3, R3, #6 
    /*0002f040*/ CMP         R0, #4 
    /*0002f044*/ ADD         R3, IP, R3, LSL #2 
    /*0002f048*/ MOV         R1, R0 
    /*0002f04c*/ MOVGT       R1, #1 
    /*0002f050*/ MOVLE       R1, #0 
    /*0002f054*/ LDR         R3, [R3, #92]               @ 0x5c 
    /*0002f058*/ STRH        R3, [R2] 
    /*0002f05c*/ LDRB        R2, [R5, #484]              @ 0x1e4 
    /*0002f060*/ LDRB        R3, [R4, #232]              @ 0xe8 
    /*0002f064*/ AND         R2, R2, #15 
    /*0002f068*/ BFI         R3, R2, #1, #5 
    /*0002f06c*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0002f070*/ BFI         R3, R1, #0, #1 
    /*0002f074*/ MOVGT       R1, R0 
    /*0002f078*/ STRB        R3, [R4, #232]              @ 0xe8 
    /*0002f07c*/ SUBGT       R3, R1, #5 
    /*0002f080*/ LDR         R1, [SP, #28] 
    /*0002f084*/ STRGT       R3, [SP, #20] 
    /*0002f088*/ LDR         R0, [SP, #20] 
    /*0002f08c*/ CMP         R1, R2 
    /*0002f090*/ LDRB        R3, [R4, #255]              @ 0xff 
    /*0002f094*/ RSB         R0, R0, #4 
    /*0002f098*/ MOVGE       R1, R2 
    /*0002f09c*/ BFI         R3, R0, #4, #3 
    /*0002f0a0*/ STRB        R3, [R4, #255]              @ 0xff 
    /*0002f0a4*/ SUB         R2, R2, R1 
    /*0002f0a8*/ LDR         LR, [SP, #48]               @ 0x30 
    /*0002f0ac*/ LSL         R1, R1, #4 
    /*0002f0b0*/ ADD         R0, R2, R1 
    /*0002f0b4*/ LSL         R3, R2, #1 
    /*0002f0b8*/ ADD         R0, R0, #8 
    /*0002f0bc*/ LDRH        IP, [LR, #2] 
    /*0002f0c0*/ ADD         R7, R1, R3 
    /*0002f0c4*/ ADD         R3, R2, R3 
    /*0002f0c8*/ ASR         R0, R0, #4 
    /*0002f0cc*/ ADD         R7, R7, #8 
    /*0002f0d0*/ BFI         IP, R0, #5, #9 
    /*0002f0d4*/ STRH        IP, [LR, #2] 
    /*0002f0d8*/ ADD         IP, R1, R3 
    /*0002f0dc*/ LDRH        LR, [R6] 
    /*0002f0e0*/ ASR         R0, R7, #4 
    /*0002f0e4*/ ADD         IP, IP, #8 
    /*0002f0e8*/ ADD         R3, R2, R3 
    /*0002f0ec*/ BFI         LR, R0, #0, #9 
    /*0002f0f0*/ STRH        LR, [R6] 
    /*0002f0f4*/ ADD         R7, R1, R3 
    /*0002f0f8*/ LDR         R0, [R4, #308]              @ 0x134 
    /*0002f0fc*/ ASR         IP, IP, #4 
    /*0002f100*/ ADD         R3, R2, R3 
    /*0002f104*/ ADD         R7, R7, #8 
    /*0002f108*/ BFI         R0, IP, #9, #9 
    /*0002f10c*/ ADD         LR, R1, R3 
    /*0002f110*/ ADD         IP, R4, #312                @ 0x138 
    /*0002f114*/ STR         R0, [R4, #308]              @ 0x134 
    /*0002f118*/ ADD         R3, R2, R3 
    /*0002f11c*/ ASR         R7, R7, #4 
    /*0002f120*/ ADD         LR, LR, #8 
    /*0002f124*/ LSR         R0, R0, #16 
    /*0002f128*/ BFI         R0, R7, #2, #9 
    /*0002f12c*/ STRH        R0, [R6, #2] 
    /*0002f130*/ ADD         R6, R1, R3 
    /*0002f134*/ LDRH        R0, [IP] 
    /*0002f138*/ ASR         LR, LR, #4 
    /*0002f13c*/ ADD         R6, R6, #8 
    /*0002f140*/ ADD         R3, R2, R3 
    /*0002f144*/ BFI         R0, LR, #0, #9 
    /*0002f148*/ STRH        R0, [IP] 
    /*0002f14c*/ ASR         LR, R6, #4 
    /*0002f150*/ LDR         R0, [R4, #312]              @ 0x138 
    /*0002f154*/ ADD         R7, R1, R3 
    /*0002f158*/ ADD         R7, R7, #8 
    /*0002f15c*/ ADD         R3, R2, R3 
    /*0002f160*/ BFI         R0, LR, #9, #9 
    /*0002f164*/ ADD         R6, R4, #316                @ 0x13c 
    /*0002f168*/ ADD         LR, R1, R3 
    /*0002f16c*/ STR         R0, [R4, #312]              @ 0x138 
    /*0002f170*/ ADD         R3, R2, R3 
    /*0002f174*/ ASR         R7, R7, #4 
    /*0002f178*/ ADD         LR, LR, #8 
    /*0002f17c*/ LSR         R0, R0, #16 
    /*0002f180*/ BFI         R0, R7, #2, #9 
    /*0002f184*/ STRH        R0, [IP, #2] 
    /*0002f188*/ ADD         IP, R1, R3 
    /*0002f18c*/ LDRH        R0, [R6] 
    /*0002f190*/ ASR         LR, LR, #4 
    /*0002f194*/ ADD         IP, IP, #8 
    /*0002f198*/ ADD         R3, R2, R3 
    /*0002f19c*/ BFI         R0, LR, #0, #9 
    /*0002f1a0*/ STRH        R0, [R6] 
    /*0002f1a4*/ ADD         R7, R1, R3 
    /*0002f1a8*/ LDR         R0, [R4, #316]              @ 0x13c 
    /*0002f1ac*/ ASR         IP, IP, #4 
    /*0002f1b0*/ ADD         R3, R2, R3 
    /*0002f1b4*/ ADD         R7, R7, #8 
    /*0002f1b8*/ BFI         R0, IP, #9, #9 
    /*0002f1bc*/ ADD         LR, R1, R3 
    /*0002f1c0*/ ADD         IP, R4, #320                @ 0x140 
    /*0002f1c4*/ ADD         R3, R2, R3 
    /*0002f1c8*/ STR         R0, [R4, #316]              @ 0x13c 
    /*0002f1cc*/ ASR         R7, R7, #4 
    /*0002f1d0*/ ADD         LR, LR, #8 
    /*0002f1d4*/ LSR         R0, R0, #16 
    /*0002f1d8*/ BFI         R0, R7, #2, #9 
    /*0002f1dc*/ STRH        R0, [R6, #2] 
    /*0002f1e0*/ ADD         R6, R1, R3 
    /*0002f1e4*/ LDRH        R0, [IP] 
    /*0002f1e8*/ ASR         LR, LR, #4 
    /*0002f1ec*/ ADD         R6, R6, #8 
    /*0002f1f0*/ ADD         R3, R2, R3 
    /*0002f1f4*/ BFI         R0, LR, #0, #9 
    /*0002f1f8*/ STRH        R0, [IP] 
    /*0002f1fc*/ ASR         LR, R6, #4 
    /*0002f200*/ LDR         R0, [R4, #320]              @ 0x140 
    /*0002f204*/ ADD         R7, R1, R3 
    /*0002f208*/ ADD         R7, R7, #8 
    /*0002f20c*/ ADD         R3, R2, R3 
    /*0002f210*/ BFI         R0, LR, #9, #9 
    /*0002f214*/ ADD         R6, R1, R3 
    /*0002f218*/ ADD         LR, R4, #324                @ 0x144 
    /*0002f21c*/ STR         R0, [R4, #320]              @ 0x140 
    /*0002f220*/ ADD         R3, R2, R3 
    /*0002f224*/ ASR         R7, R7, #4 
    /*0002f228*/ ADD         R6, R6, #8 
    /*0002f22c*/ LSR         R0, R0, #16 
    /*0002f230*/ BFI         R0, R7, #2, #9 
    /*0002f234*/ STRH        R0, [IP, #2] 
    /*0002f238*/ ADD         R0, R1, R3 
    /*0002f23c*/ LDRH        IP, [LR] 
    /*0002f240*/ ASR         R6, R6, #4 
    /*0002f244*/ ADD         R0, R0, #8 
    /*0002f248*/ BFI         IP, R6, #0, #9 
    /*0002f24c*/ ADD         R2, R2, R3 
    /*0002f250*/ STRH        IP, [LR] 
    /*0002f254*/ ADD         R2, R2, R1 
    /*0002f258*/ LDR         IP, [R4, #324]              @ 0x144 
    /*0002f25c*/ ASR         R0, R0, #4 
    /*0002f260*/ ADD         R3, R2, #8 
    /*0002f264*/ MOV         R6, #1 
    /*0002f268*/ BFI         IP, R0, #9, #9 
    /*0002f26c*/ STR         IP, [R4, #324]              @ 0x144 
    /*0002f270*/ ASR         R3, R3, #4 
    /*0002f274*/ LDR         R1, [SP, #32] 
    /*0002f278*/ LSR         IP, IP, #16 
    /*0002f27c*/ BFI         IP, R3, #2, #9 
    /*0002f280*/ STRH        IP, [LR, #2] 
    /*0002f284*/ LDRB        R3, [R4, #344]              @ 0x158 
    /*0002f288*/ CMP         R1, #0 
    /*0002f28c*/ BFI         R3, R6, #6, #2 
    /*0002f290*/ STRB        R3, [R4, #344]              @ 0x158 
    /*0002f294*/ LDRB        R3, [R5, #475]              @ 0x1db 
    /*0002f298*/ LDRB        R2, [R4, #344]              @ 0x158 
    /*0002f29c*/ UBFX        R3, R3, #1, #2 
    /*0002f2a0*/ BFI         R2, R3, #4, #2 
    /*0002f2a4*/ STRB        R2, [R4, #344]              @ 0x158 
    /*0002f2a8*/ LDRB        R3, [R5, #475]              @ 0x1db 
    /*0002f2ac*/ UXTB        R2, R2 
    /*0002f2b0*/ UBFX        R3, R3, #3, #2 
    /*0002f2b4*/ BFI         R2, R3, #0, #2 
    /*0002f2b8*/ STRB        R2, [R4, #344]              @ 0x158 
    /*0002f2bc*/ LDRB        R3, [R5, #475]              @ 0x1db 
    /*0002f2c0*/ UXTB        R2, R2 
    /*0002f2c4*/ UBFX        R3, R3, #5, #2 
    /*0002f2c8*/ BFI         R2, R3, #2, #2 
    /*0002f2cc*/ STRB        R2, [R4, #344]              @ 0x158 
    /*0002f2d0*/ BEQ         V16cv500MapNRx_x2f43c
    /*0002f2d4*/ LDR         R3, [SP, #24] 
    /*0002f2d8*/ CMP         R3, R1 
    /*0002f2dc*/ MOVGE       R3, R1 
    /*0002f2e0*/ SUB         R2, R1, R3 
    /*0002f2e4*/ LSL         R3, R3, #4 
    /*0002f2e8*/ LSL         R1, R2, R6 
    /*0002f2ec*/ ADD         IP, R2, R1 
    /*0002f2f0*/ ADD         R1, R3, R1 
    /*0002f2f4*/ ADD         SL, R2, IP 
    /*0002f2f8*/ ADD         R1, R1, #8 
    /*0002f2fc*/ ADD         R9, R2, SL 
    /*0002f300*/ ADD         IP, R3, IP 
    /*0002f304*/ ADD         R8, R2, R9 
    /*0002f308*/ ADD         IP, IP, #8 
    /*0002f30c*/ ADD         R7, R2, R8 
    /*0002f310*/ STR         IP, [SP, #28] 
    /*0002f314*/ ADD         R6, R2, R7 
    /*0002f318*/ ASR         R1, R1, #4 
    /*0002f31c*/ ADD         LR, R2, R6 
    /*0002f320*/ STRB        R1, [R4, #329]              @ 0x149 
    /*0002f324*/ ADD         R0, R2, LR 
    /*0002f328*/ STR         R0, [SP, #20] 
    /*0002f32c*/ LDR         IP, [SP, #20] 
    /*0002f330*/ ADD         R0, R2, R3 
    /*0002f334*/ LDR         R1, [SP, #28] 
    /*0002f338*/ ADD         R8, R3, R8 
    /*0002f33c*/ ADD         R7, R3, R7 
    /*0002f340*/ ADD         R0, R0, #8 
    /*0002f344*/ ADD         R8, R8, #8 
    /*0002f348*/ STR         R0, [SP, #24] 
    /*0002f34c*/ ADD         R0, R2, IP 
    /*0002f350*/ ADD         LR, R3, LR 
    /*0002f354*/ ASR         R1, R1, #4 
    /*0002f358*/ ADD         R7, R7, #8 
    /*0002f35c*/ STRB        R1, [R4, #330]              @ 0x14a 
    /*0002f360*/ ADD         R1, R2, R0 
    /*0002f364*/ ASR         R8, R8, #4 
    /*0002f368*/ ADD         LR, LR, #8 
    /*0002f36c*/ STRB        R8, [R4, #333]              @ 0x14d 
    /*0002f370*/ ADD         R8, R2, R1 
    /*0002f374*/ ADD         R0, R3, R0 
    /*0002f378*/ ASR         R7, R7, #4 
    /*0002f37c*/ STRB        R7, [R4, #334]              @ 0x14e 
    /*0002f380*/ ADD         R7, R2, R8 
    /*0002f384*/ ASR         LR, LR, #4 
    /*0002f388*/ ADD         R0, R0, #8 
    /*0002f38c*/ STRB        LR, [R4, #336]              @ 0x150 
    /*0002f390*/ ADD         LR, R2, R7 
    /*0002f394*/ ADD         R2, R2, LR 
    /*0002f398*/ ADD         SL, R3, SL 
    /*0002f39c*/ ADD         R9, R3, R9 
    /*0002f3a0*/ ADD         R6, R3, R6 
    /*0002f3a4*/ ADD         IP, R3, IP 
    /*0002f3a8*/ ADD         R1, R3, R1 
    /*0002f3ac*/ ADD         R8, R3, R8 
    /*0002f3b0*/ ADD         R7, R3, R7 
    /*0002f3b4*/ ADD         R2, R2, R3 
    /*0002f3b8*/ ASR         R0, R0, #4 
    /*0002f3bc*/ ADD         R3, R3, LR 
    /*0002f3c0*/ STRB        R0, [R4, #338]              @ 0x152 
    /*0002f3c4*/ LDR         R0, [SP, #24] 
    /*0002f3c8*/ ADD         SL, SL, #8 
    /*0002f3cc*/ ADD         R9, R9, #8 
    /*0002f3d0*/ ADD         R6, R6, #8 
    /*0002f3d4*/ ADD         IP, IP, #8 
    /*0002f3d8*/ ADD         R1, R1, #8 
    /*0002f3dc*/ ADD         R8, R8, #8 
    /*0002f3e0*/ ADD         R7, R7, #8 
    /*0002f3e4*/ ADD         R2, R2, #8 
    /*0002f3e8*/ ADD         R3, R3, #8 
    /*0002f3ec*/ ASR         SL, SL, #4 
    /*0002f3f0*/ ASR         R9, R9, #4 
    /*0002f3f4*/ ASR         R6, R6, #4 
    /*0002f3f8*/ ASR         IP, IP, #4 
    /*0002f3fc*/ ASR         R1, R1, #4 
    /*0002f400*/ ASR         R8, R8, #4 
    /*0002f404*/ ASR         R7, R7, #4 
    /*0002f408*/ ASR         R2, R2, #4 
    /*0002f40c*/ ASR         R3, R3, #4 
    /*0002f410*/ ASR         R0, R0, #4 
    /*0002f414*/ STRB        SL, [R4, #331]              @ 0x14b 
    /*0002f418*/ STRB        R9, [R4, #332]              @ 0x14c 
    /*0002f41c*/ STRB        R6, [R4, #335]              @ 0x14f 
    /*0002f420*/ STRB        IP, [R4, #337]              @ 0x151 
    /*0002f424*/ STRB        R1, [R4, #339]              @ 0x153 
    /*0002f428*/ STRB        R8, [R4, #340]              @ 0x154 
    /*0002f42c*/ STRB        R7, [R4, #341]              @ 0x155 
    /*0002f430*/ STRB        R2, [R4, #343]              @ 0x157 
    /*0002f434*/ STRB        R3, [R4, #342]              @ 0x156 
    /*0002f438*/ STRB        R0, [R4, #328]              @ 0x148 
    V16cv500MapNRx_x2f43c:
    /*0002f43c*/ ADD         R3, R5, #476                @ 0x1dc 
    /*0002f440*/ MOVW        R2, #482                    @ 0x1e2 
    /*0002f444*/ LDRH        R0, [R5, R2] 
    /*0002f448*/ LDRH        R2, [R3] 
    /*0002f44c*/ LDRB        R3, [R5, #475]              @ 0x1db 
    /*0002f450*/ UBFX        R0, R0, #0, #10 
    /*0002f454*/ LDRB        R1, [R5, #479]              @ 0x1df 
    /*0002f458*/ UBFX        R2, R2, #0, #9 
    /*0002f45c*/ LSRS        R3, R3, #7 
    /*0002f460*/ UXTH        LR, R0 
    /*0002f464*/ UXTH        IP, R2 
    /*0002f468*/ MOVEQ       R6, #0 
    /*0002f46c*/ STR         R1, [SP, #20] 
    /*0002f470*/ MOVEQ       R0, R6 
    /*0002f474*/ MOVEQ       LR, R6 
    /*0002f478*/ BNE         V16cv500MapNRx_x30de4
    V16cv500MapNRx_x2f47c:
    /*0002f47c*/ SXTH        R2, R2 
    /*0002f480*/ LDR         R3, [SP, #20] 
    /*0002f484*/ LDRB        R7, [R4, #235]              @ 0xeb 
    /*0002f488*/ MOVW        R1, #511                    @ 0x1ff 
    /*0002f48c*/ ADD         R2, R2, R2, LSL #1 
    /*0002f490*/ ADD         R3, R3, R3, LSL #1 
    /*0002f494*/ BFI         R7, R6, #2, #1 
    /*0002f498*/ ASR         R2, R2, #1 
    /*0002f49c*/ STRB        R7, [R4, #235]              @ 0xeb 
    /*0002f4a0*/ CMP         R2, R1 
    /*0002f4a4*/ LDRB        R6, [R5, #485]              @ 0x1e5 
    /*0002f4a8*/ LDRB        R7, [R5, #483]              @ 0x1e3 
    /*0002f4ac*/ ASR         R3, R3, #1 
    /*0002f4b0*/ LDR         R8, [SP, #16] 
    /*0002f4b4*/ MOVGE       R2, R1 
    /*0002f4b8*/ CMP         R3, #255                    @ 0xff 
    /*0002f4bc*/ LSR         R1, R6, #4 
    /*0002f4c0*/ UBFX        R7, R7, #2, #4 
    /*0002f4c4*/ MOVGE       R3, #255                    @ 0xff 
    /*0002f4c8*/ ADD         R7, R8, R7 
    /*0002f4cc*/ CMP         R1, #5 
    /*0002f4d0*/ LDRB        R7, [R7, #60]               @ 0x3c 
    /*0002f4d4*/ MOVLT       R1, #5 
    /*0002f4d8*/ BFI         R6, R1, #4, #4 
    /*0002f4dc*/ STRB        R6, [R5, #485]              @ 0x1e5 
    /*0002f4e0*/ CMP         R0, #0 
    /*0002f4e4*/ LDRB        R1, [R4, #285]              @ 0x11d 
    /*0002f4e8*/ BFI         R1, R7, #2, #4 
    /*0002f4ec*/ STRB        R1, [R4, #285]              @ 0x11d 
    /*0002f4f0*/ LDRB        R6, [R5, #483]              @ 0x1e3 
    /*0002f4f4*/ LDR         R1, [R4, #284]              @ 0x11c 
    /*0002f4f8*/ UBFX        R6, R6, #2, #4 
    /*0002f4fc*/ ADD         R6, R8, R6 
    /*0002f500*/ LDRB        R6, [R6, #76]               @ 0x4c 
    /*0002f504*/ BFI         R1, R6, #14, #3 
    /*0002f508*/ STR         R1, [R4, #284]              @ 0x11c 
    /*0002f50c*/ UBFX        R1, R1, #16, #8 
    /*0002f510*/ ORR         R1, R1, #2 
    /*0002f514*/ STRB        R1, [R4, #286]              @ 0x11e 
    /*0002f518*/ ADDEQ       R1, R4, #284                @ 0x11c 
    /*0002f51c*/ STREQ       R1, [SP, #24] 
    /*0002f520*/ BEQ         V16cv500MapNRx_x2f710
    /*0002f524*/ CMP         R0, LR 
    /*0002f528*/ ADD         R9, R4, #264                @ 0x108 
    /*0002f52c*/ ADD         R7, R4, #268                @ 0x10c 
    /*0002f530*/ MOVLT       LR, R0 
    /*0002f534*/ SUB         R0, R0, LR 
    /*0002f538*/ LSL         LR, LR, #4 
    /*0002f53c*/ LDRH        SL, [R9] 
    /*0002f540*/ ADD         R6, R0, LR 
    /*0002f544*/ LSL         R1, R0, #1 
    /*0002f548*/ ADD         R6, R6, #8 
    /*0002f54c*/ ADD         R8, LR, R1 
    /*0002f550*/ ADD         R8, R8, #8 
    /*0002f554*/ ADD         R1, R0, R1 
    /*0002f558*/ ASR         R6, R6, #4 
    /*0002f55c*/ BFI         SL, R6, #0, #10 
    /*0002f560*/ STRH        SL, [R9] 
    /*0002f564*/ LDR         R6, [R4, #264]              @ 0x108 
    /*0002f568*/ ADD         SL, LR, R1 
    /*0002f56c*/ ASR         R8, R8, #4 
    /*0002f570*/ ADD         SL, SL, #8 
    /*0002f574*/ BFI         R6, R8, #10, #10 
    /*0002f578*/ ADD         R1, R0, R1 
    /*0002f57c*/ STR         R6, [R4, #264]              @ 0x108 
    /*0002f580*/ ADD         R8, LR, R1 
    /*0002f584*/ ASR         SL, SL, #4 
    /*0002f588*/ ADD         R1, R0, R1 
    /*0002f58c*/ LSR         R6, R6, #16 
    /*0002f590*/ ADD         R8, R8, #8 
    /*0002f594*/ BFI         R6, SL, #4, #10 
    /*0002f598*/ STRH        R6, [R9, #2] 
    /*0002f59c*/ ADD         R6, LR, R1 
    /*0002f5a0*/ LDRH        R9, [R7] 
    /*0002f5a4*/ ADD         R6, R6, #8 
    /*0002f5a8*/ ASR         R8, R8, #4 
    /*0002f5ac*/ BFI         R9, R8, #0, #10 
    /*0002f5b0*/ ADD         R1, R0, R1 
    /*0002f5b4*/ STRH        R9, [R7] 
    /*0002f5b8*/ ASR         R8, R6, #4 
    /*0002f5bc*/ LDR         R6, [R4, #268]              @ 0x10c 
    /*0002f5c0*/ ADD         SL, LR, R1 
    /*0002f5c4*/ ADD         SL, SL, #8 
    /*0002f5c8*/ ADD         R1, R0, R1 
    /*0002f5cc*/ BFI         R6, R8, #10, #10 
    /*0002f5d0*/ ADD         R9, LR, R1 
    /*0002f5d4*/ ADD         R8, R4, #272                @ 0x110 
    /*0002f5d8*/ STR         R6, [R4, #268]              @ 0x10c 
    /*0002f5dc*/ ADD         R1, R0, R1 
    /*0002f5e0*/ ASR         SL, SL, #4 
    /*0002f5e4*/ ADD         R9, R9, #8 
    /*0002f5e8*/ LSR         R6, R6, #16 
    /*0002f5ec*/ BFI         R6, SL, #4, #10 
    /*0002f5f0*/ STRH        R6, [R7, #2] 
    /*0002f5f4*/ ADD         R7, LR, R1 
    /*0002f5f8*/ LDRH        R6, [R8] 
    /*0002f5fc*/ ASR         R9, R9, #4 
    /*0002f600*/ ADD         R7, R7, #8 
    /*0002f604*/ BFI         R6, R9, #0, #10 
    /*0002f608*/ ADD         R1, R0, R1 
    /*0002f60c*/ STRH        R6, [R8] 
    /*0002f610*/ ADD         SL, LR, R1 
    /*0002f614*/ LDR         R6, [R4, #272]              @ 0x110 
    /*0002f618*/ ASR         R7, R7, #4 
    /*0002f61c*/ ADD         SL, SL, #8 
    /*0002f620*/ ADD         R1, R0, R1 
    /*0002f624*/ BFI         R6, R7, #10, #10 
    /*0002f628*/ ADD         R9, R4, #276                @ 0x114 
    /*0002f62c*/ STR         R6, [R4, #272]              @ 0x110 
    /*0002f630*/ ADD         R7, LR, R1 
    /*0002f634*/ ASR         SL, SL, #4 
    /*0002f638*/ ADD         R1, R0, R1 
    /*0002f63c*/ LSR         R6, R6, #16 
    /*0002f640*/ ADD         R7, R7, #8 
    /*0002f644*/ BFI         R6, SL, #4, #10 
    /*0002f648*/ STRH        R6, [R8, #2] 
    /*0002f64c*/ ADD         R6, LR, R1 
    /*0002f650*/ LDRH        R8, [R9] 
    /*0002f654*/ ADD         R6, R6, #8 
    /*0002f658*/ ASR         R7, R7, #4 
    /*0002f65c*/ BFI         R8, R7, #0, #10 
    /*0002f660*/ ADD         R1, R0, R1 
    /*0002f664*/ STRH        R8, [R9] 
    /*0002f668*/ ASR         R7, R6, #4 
    /*0002f66c*/ LDR         R6, [R4, #276]              @ 0x114 
    /*0002f670*/ ADD         SL, LR, R1 
    /*0002f674*/ ADD         SL, SL, #8 
    /*0002f678*/ ADD         R1, R0, R1 
    /*0002f67c*/ BFI         R6, R7, #10, #10 
    /*0002f680*/ ADD         R8, LR, R1 
    /*0002f684*/ ADD         R7, R4, #280                @ 0x118 
    /*0002f688*/ STR         R6, [R4, #276]              @ 0x114 
    /*0002f68c*/ ADD         R1, R0, R1 
    /*0002f690*/ ASR         SL, SL, #4 
    /*0002f694*/ ADD         R8, R8, #8 
    /*0002f698*/ LSR         R6, R6, #16 
    /*0002f69c*/ BFI         R6, SL, #4, #10 
    /*0002f6a0*/ STRH        R6, [R9, #2] 
    /*0002f6a4*/ ADD         R6, LR, R1 
    /*0002f6a8*/ LDRH        R9, [R7] 
    /*0002f6ac*/ ASR         R8, R8, #4 
    /*0002f6b0*/ ADD         R6, R6, #8 
    /*0002f6b4*/ BFI         R9, R8, #0, #10 
    /*0002f6b8*/ ADD         R1, R0, R1 
    /*0002f6bc*/ STRH        R9, [R7] 
    /*0002f6c0*/ ASR         R9, R6, #4 
    /*0002f6c4*/ LDR         R8, [R4, #280]              @ 0x118 
    /*0002f6c8*/ ADD         R6, LR, R1 
    /*0002f6cc*/ ADD         R6, R6, #8 
    /*0002f6d0*/ ADD         R1, R0, R1 
    /*0002f6d4*/ BFI         R8, R9, #10, #10 
    /*0002f6d8*/ ADD         R0, R4, #284                @ 0x11c 
    /*0002f6dc*/ ADD         R1, R1, LR 
    /*0002f6e0*/ ASR         R6, R6, #4 
    /*0002f6e4*/ LSR         R9, R8, #16 
    /*0002f6e8*/ ADD         R1, R1, #8 
    /*0002f6ec*/ STR         R0, [SP, #24] 
    /*0002f6f0*/ MOV         LR, R0 
    /*0002f6f4*/ STR         R8, [R4, #280]              @ 0x118 
    /*0002f6f8*/ BFI         R9, R6, #4, #10 
    /*0002f6fc*/ STRH        R9, [R7, #2] 
    /*0002f700*/ ASR         R1, R1, #4 
    /*0002f704*/ LDRH        R0, [R0] 
    /*0002f708*/ BFI         R0, R1, #0, #10 
    /*0002f70c*/ STRH        R0, [LR] 
    V16cv500MapNRx_x2f710:
    /*0002f710*/ LDRB        R6, [R5, #485]              @ 0x1e5 
    /*0002f714*/ CMP         IP, R2 
    /*0002f718*/ LDRB        LR, [R4, #286]              @ 0x11e 
    /*0002f71c*/ ADD         R7, R4, #360                @ 0x168 
    /*0002f720*/ MOVGE       IP, R2 
    /*0002f724*/ SUB         R2, R2, IP 
    /*0002f728*/ LSR         R6, R6, #4 
    /*0002f72c*/ LSL         IP, IP, #4 
    /*0002f730*/ RSB         R6, R6, #4 
    /*0002f734*/ ADD         R0, R2, IP 
    /*0002f738*/ BFI         LR, R6, #2, #3 
    /*0002f73c*/ STRB        LR, [R4, #286]              @ 0x11e 
    /*0002f740*/ LDR         R8, [SP, #52]               @ 0x34 
    /*0002f744*/ LSL         R1, R2, #1 
    /*0002f748*/ ADD         R0, R0, #8 
    /*0002f74c*/ ADD         R6, IP, R1 
    /*0002f750*/ ADD         R6, R6, #8 
    /*0002f754*/ ADD         R1, R2, R1 
    /*0002f758*/ LDRH        LR, [R8, #2] 
    /*0002f75c*/ ASR         R0, R0, #4 
    /*0002f760*/ ASR         R6, R6, #4 
    /*0002f764*/ CMP         R3, #0 
    /*0002f768*/ BFI         LR, R0, #5, #9 
    /*0002f76c*/ STRH        LR, [R8, #2] 
    /*0002f770*/ ADD         LR, IP, R1 
    /*0002f774*/ LDRH        R0, [R7] 
    /*0002f778*/ ADD         LR, LR, #8 
    /*0002f77c*/ ADD         R1, R2, R1 
    /*0002f780*/ BFI         R0, R6, #0, #9 
    /*0002f784*/ STRH        R0, [R7] 
    /*0002f788*/ LDR         R0, [R4, #360]              @ 0x168 
    /*0002f78c*/ ASR         LR, LR, #4 
    /*0002f790*/ ADD         R8, IP, R1 
    /*0002f794*/ ADD         R1, R2, R1 
    /*0002f798*/ BFI         R0, LR, #9, #9 
    /*0002f79c*/ ADD         R8, R8, #8 
    /*0002f7a0*/ STR         R0, [R4, #360]              @ 0x168 
    /*0002f7a4*/ ADD         LR, R4, #364                @ 0x16c 
    /*0002f7a8*/ ASR         R8, R8, #4 
    /*0002f7ac*/ ADD         R6, IP, R1 
    /*0002f7b0*/ LSR         R0, R0, #16 
    /*0002f7b4*/ ADD         R1, R2, R1 
    /*0002f7b8*/ BFI         R0, R8, #2, #9 
    /*0002f7bc*/ ADD         R6, R6, #8 
    /*0002f7c0*/ STRH        R0, [R7, #2] 
    /*0002f7c4*/ ADD         R0, IP, R1 
    /*0002f7c8*/ LDRH        R7, [LR] 
    /*0002f7cc*/ ADD         R0, R0, #8 
    /*0002f7d0*/ ASR         R6, R6, #4 
    /*0002f7d4*/ ADD         R1, R2, R1 
    /*0002f7d8*/ BFI         R7, R6, #0, #9 
    /*0002f7dc*/ ASR         R6, R0, #4 
    /*0002f7e0*/ STRH        R7, [LR] 
    /*0002f7e4*/ ADD         R8, IP, R1 
    /*0002f7e8*/ LDR         R0, [R4, #364]              @ 0x16c 
    /*0002f7ec*/ ADD         R1, R2, R1 
    /*0002f7f0*/ ADD         R8, R8, #8 
    /*0002f7f4*/ ADD         R7, IP, R1 
    /*0002f7f8*/ BFI         R0, R6, #9, #9 
    /*0002f7fc*/ ADD         R6, R4, #368                @ 0x170 
    /*0002f800*/ STR         R0, [R4, #364]              @ 0x16c 
    /*0002f804*/ ADD         R1, R2, R1 
    /*0002f808*/ ASR         R8, R8, #4 
    /*0002f80c*/ ADD         R7, R7, #8 
    /*0002f810*/ LSR         R0, R0, #16 
    /*0002f814*/ BFI         R0, R8, #2, #9 
    /*0002f818*/ STRH        R0, [LR, #2] 
    /*0002f81c*/ ADD         LR, IP, R1 
    /*0002f820*/ LDRH        R0, [R6] 
    /*0002f824*/ ASR         R7, R7, #4 
    /*0002f828*/ ADD         LR, LR, #8 
    /*0002f82c*/ BFI         R0, R7, #0, #9 
    /*0002f830*/ ADD         R1, R2, R1 
    /*0002f834*/ STRH        R0, [R6] 
    /*0002f838*/ ASR         LR, LR, #4 
    /*0002f83c*/ LDR         R0, [R4, #368]              @ 0x170 
    /*0002f840*/ ADD         R8, IP, R1 
    /*0002f844*/ ADD         R8, R8, #8 
    /*0002f848*/ ADD         R1, R2, R1 
    /*0002f84c*/ BFI         R0, LR, #9, #9 
    /*0002f850*/ ADD         R7, R4, #372                @ 0x174 
    /*0002f854*/ STR         R0, [R4, #368]              @ 0x170 
    /*0002f858*/ ASR         R8, R8, #4 
    /*0002f85c*/ ADD         LR, IP, R1 
    /*0002f860*/ LSR         R0, R0, #16 
    /*0002f864*/ ADD         R1, R2, R1 
    /*0002f868*/ BFI         R0, R8, #2, #9 
    /*0002f86c*/ ADD         LR, LR, #8 
    /*0002f870*/ STRH        R0, [R6, #2] 
    /*0002f874*/ ADD         R0, IP, R1 
    /*0002f878*/ LDRH        R6, [R7] 
    /*0002f87c*/ ADD         R0, R0, #8 
    /*0002f880*/ ASR         LR, LR, #4 
    /*0002f884*/ BFI         R6, LR, #0, #9 
    /*0002f888*/ ADD         R1, R2, R1 
    /*0002f88c*/ STRH        R6, [R7] 
    /*0002f890*/ ASR         LR, R0, #4 
    /*0002f894*/ LDR         R0, [R4, #372]              @ 0x174 
    /*0002f898*/ ADD         R8, IP, R1 
    /*0002f89c*/ ADD         R8, R8, #8 
    /*0002f8a0*/ ADD         R1, R2, R1 
    /*0002f8a4*/ BFI         R0, LR, #9, #9 
    /*0002f8a8*/ ADD         R6, IP, R1 
    /*0002f8ac*/ ADD         LR, R4, #376                @ 0x178 
    /*0002f8b0*/ STR         R0, [R4, #372]              @ 0x174 
    /*0002f8b4*/ ADD         R1, R2, R1 
    /*0002f8b8*/ ASR         R8, R8, #4 
    /*0002f8bc*/ ADD         R6, R6, #8 
    /*0002f8c0*/ LSR         R0, R0, #16 
    /*0002f8c4*/ BFI         R0, R8, #2, #9 
    /*0002f8c8*/ STRH        R0, [R7, #2] 
    /*0002f8cc*/ ADD         R0, IP, R1 
    /*0002f8d0*/ LDRH        R7, [LR] 
    /*0002f8d4*/ ASR         R6, R6, #4 
    /*0002f8d8*/ ADD         R0, R0, #8 
    /*0002f8dc*/ BFI         R7, R6, #0, #9 
    /*0002f8e0*/ ADD         R2, R2, R1 
    /*0002f8e4*/ STRH        R7, [LR] 
    /*0002f8e8*/ ASR         R0, R0, #4 
    /*0002f8ec*/ LDR         R6, [R4, #376]              @ 0x178 
    /*0002f8f0*/ ADD         R2, R2, IP 
    /*0002f8f4*/ ADD         R2, R2, #8 
    /*0002f8f8*/ MOV         R7, #2 
    /*0002f8fc*/ BFI         R6, R0, #9, #9 
    /*0002f900*/ STR         R6, [R4, #376]              @ 0x178 
    /*0002f904*/ ASR         R2, R2, #4 
    /*0002f908*/ LSR         R6, R6, #16 
    /*0002f90c*/ BFI         R6, R2, #2, #9 
    /*0002f910*/ STRH        R6, [LR, #2] 
    /*0002f914*/ LDRB        R2, [R4, #396]              @ 0x18c 
    /*0002f918*/ BFI         R2, R7, #6, #2 
    /*0002f91c*/ STRB        R2, [R4, #396]              @ 0x18c 
    /*0002f920*/ LDRB        R2, [R5, #477]              @ 0x1dd 
    /*0002f924*/ LDRB        R1, [R4, #396]              @ 0x18c 
    /*0002f928*/ UBFX        R2, R2, #1, #2 
    /*0002f92c*/ BFI         R1, R2, #4, #2 
    /*0002f930*/ STRB        R1, [R4, #396]              @ 0x18c 
    /*0002f934*/ LDRB        R2, [R5, #477]              @ 0x1dd 
    /*0002f938*/ UXTB        R1, R1 
    /*0002f93c*/ UBFX        R2, R2, #3, #2 
    /*0002f940*/ BFI         R1, R2, #0, #2 
    /*0002f944*/ STRB        R1, [R4, #396]              @ 0x18c 
    /*0002f948*/ LDRB        R2, [R5, #477]              @ 0x1dd 
    /*0002f94c*/ UXTB        R1, R1 
    /*0002f950*/ UBFX        R2, R2, #5, #2 
    /*0002f954*/ BFI         R1, R2, #2, #2 
    /*0002f958*/ STRB        R1, [R4, #396]              @ 0x18c 
    /*0002f95c*/ BEQ         V16cv500MapNRx_x2fac8
    /*0002f960*/ LDR         R2, [SP, #20] 
    /*0002f964*/ CMP         R2, R3 
    /*0002f968*/ MOVGE       R2, R3 
    /*0002f96c*/ SUB         R3, R3, R2 
    /*0002f970*/ LSL         R2, R2, #4 
    /*0002f974*/ LSL         R1, R3, #1 
    /*0002f978*/ ADD         IP, R3, R1 
    /*0002f97c*/ ADD         R1, R2, R1 
    /*0002f980*/ ADD         SL, R3, IP 
    /*0002f984*/ ADD         R1, R1, #8 
    /*0002f988*/ ADD         R9, R3, SL 
    /*0002f98c*/ ADD         IP, R2, IP 
    /*0002f990*/ ADD         R8, R3, R9 
    /*0002f994*/ ADD         IP, IP, #8 
    /*0002f998*/ ADD         R7, R3, R8 
    /*0002f99c*/ STR         IP, [SP, #32] 
    /*0002f9a0*/ ADD         R6, R3, R7 
    /*0002f9a4*/ ASR         R1, R1, #4 
    /*0002f9a8*/ ADD         LR, R3, R6 
    /*0002f9ac*/ STRB        R1, [R4, #381]              @ 0x17d 
    /*0002f9b0*/ ADD         R0, R3, LR 
    /*0002f9b4*/ STR         R0, [SP, #20] 
    /*0002f9b8*/ LDR         IP, [SP, #20] 
    /*0002f9bc*/ ADD         R0, R3, R2 
    /*0002f9c0*/ LDR         R1, [SP, #32] 
    /*0002f9c4*/ ADD         R8, R2, R8 
    /*0002f9c8*/ ADD         R7, R2, R7 
    /*0002f9cc*/ ADD         R0, R0, #8 
    /*0002f9d0*/ ADD         R8, R8, #8 
    /*0002f9d4*/ STR         R0, [SP, #28] 
    /*0002f9d8*/ ADD         R0, R3, IP 
    /*0002f9dc*/ ADD         LR, R2, LR 
    /*0002f9e0*/ ASR         R1, R1, #4 
    /*0002f9e4*/ ADD         R7, R7, #8 
    /*0002f9e8*/ STRB        R1, [R4, #382]              @ 0x17e 
    /*0002f9ec*/ ADD         R1, R3, R0 
    /*0002f9f0*/ ASR         R8, R8, #4 
    /*0002f9f4*/ ADD         LR, LR, #8 
    /*0002f9f8*/ STRB        R8, [R4, #385]              @ 0x181 
    /*0002f9fc*/ ADD         R8, R3, R1 
    /*0002fa00*/ ADD         R0, R2, R0 
    /*0002fa04*/ ASR         R7, R7, #4 
    /*0002fa08*/ STRB        R7, [R4, #386]              @ 0x182 
    /*0002fa0c*/ ADD         R7, R3, R8 
    /*0002fa10*/ ASR         LR, LR, #4 
    /*0002fa14*/ ADD         R0, R0, #8 
    /*0002fa18*/ STRB        LR, [R4, #388]              @ 0x184 
    /*0002fa1c*/ ADD         LR, R3, R7 
    /*0002fa20*/ ADD         R3, R3, LR 
    /*0002fa24*/ ADD         SL, R2, SL 
    /*0002fa28*/ ADD         R9, R2, R9 
    /*0002fa2c*/ ADD         R6, R2, R6 
    /*0002fa30*/ ADD         IP, R2, IP 
    /*0002fa34*/ ADD         R1, R2, R1 
    /*0002fa38*/ ADD         R8, R2, R8 
    /*0002fa3c*/ ADD         R7, R2, R7 
    /*0002fa40*/ ADD         R3, R3, R2 
    /*0002fa44*/ ASR         R0, R0, #4 
    /*0002fa48*/ ADD         R2, R2, LR 
    /*0002fa4c*/ STRB        R0, [R4, #390]              @ 0x186 
    /*0002fa50*/ LDR         R0, [SP, #28] 
    /*0002fa54*/ ADD         SL, SL, #8 
    /*0002fa58*/ ADD         R9, R9, #8 
    /*0002fa5c*/ ADD         R6, R6, #8 
    /*0002fa60*/ ADD         IP, IP, #8 
    /*0002fa64*/ ADD         R1, R1, #8 
    /*0002fa68*/ ADD         R8, R8, #8 
    /*0002fa6c*/ ADD         R7, R7, #8 
    /*0002fa70*/ ADD         R3, R3, #8 
    /*0002fa74*/ ADD         R2, R2, #8 
    /*0002fa78*/ ASR         SL, SL, #4 
    /*0002fa7c*/ ASR         R9, R9, #4 
    /*0002fa80*/ ASR         R6, R6, #4 
    /*0002fa84*/ ASR         IP, IP, #4 
    /*0002fa88*/ ASR         R1, R1, #4 
    /*0002fa8c*/ ASR         R8, R8, #4 
    /*0002fa90*/ ASR         R7, R7, #4 
    /*0002fa94*/ ASR         R3, R3, #4 
    /*0002fa98*/ ASR         R2, R2, #4 
    /*0002fa9c*/ ASR         R0, R0, #4 
    /*0002faa0*/ STRB        SL, [R4, #383]              @ 0x17f 
    /*0002faa4*/ STRB        R9, [R4, #384]              @ 0x180 
    /*0002faa8*/ STRB        R6, [R4, #387]              @ 0x183 
    /*0002faac*/ STRB        IP, [R4, #389]              @ 0x185 
    /*0002fab0*/ STRB        R1, [R4, #391]              @ 0x187 
    /*0002fab4*/ STRB        R8, [R4, #392]              @ 0x188 
    /*0002fab8*/ STRB        R7, [R4, #393]              @ 0x189 
    /*0002fabc*/ STRB        R3, [R4, #395]              @ 0x18b 
    /*0002fac0*/ STRB        R2, [R4, #394]              @ 0x18a 
    /*0002fac4*/ STRB        R0, [R4, #380]              @ 0x17c 
    V16cv500MapNRx_x2fac8:
    /*0002fac8*/ LDRB        R0, [R4, #290]              @ 0x122 
    /*0002facc*/ ADD         R3, R4, #288                @ 0x120 
    /*0002fad0*/ LDRB        R1, [R4, #262]              @ 0x106 
    /*0002fad4*/ ADD         R2, R5, #492                @ 0x1ec 
    /*0002fad8*/ BFC         R0, #0, #2 
    /*0002fadc*/ STRB        R0, [R4, #290]              @ 0x122 
    /*0002fae0*/ BFC         R1, #6, #2 
    /*0002fae4*/ STRB        R1, [R4, #262]              @ 0x106 
    /*0002fae8*/ LDR         IP, [SP, #24] 
    /*0002faec*/ MOV         R0, #4 
    /*0002faf0*/ LDRH        R1, [IP, #2] 
    /*0002faf4*/ BFC         R1, #5, #11 
    /*0002faf8*/ STRH        R1, [IP, #2] 
    /*0002fafc*/ LDRH        R1, [R3, #2] 
    /*0002fb00*/ MOVW        IP, #486                    @ 0x1e6 
    /*0002fb04*/ BFI         R1, R0, #6, #4 
    /*0002fb08*/ STRH        R1, [R3, #2] 
    /*0002fb0c*/ LDRH        R0, [R2] 
    /*0002fb10*/ LDRH        R2, [R5, IP] 
    /*0002fb14*/ UBFX        R0, R0, #0, #10 
    /*0002fb18*/ LDRB        SL, [R5, #490]              @ 0x1ea 
    /*0002fb1c*/ UBFX        R2, R2, #0, #9 
    /*0002fb20*/ CMP         R0, #800                    @ 0x320 
    /*0002fb24*/ UXTH        R3, R2 
    /*0002fb28*/ STR         R3, [SP, #24] 
    /*0002fb2c*/ BLT         V16cv500MapNRx_x2fb44
    /*0002fb30*/ ADD         R0, R0, R0, LSR #5 
    /*0002fb34*/ CMP         R0, #1024                   @ 0x400 
    /*0002fb38*/ MOVWGE      R0, #1023                   @ 0x3ff 
    /*0002fb3c*/ MOVGE       IP, R0 
    /*0002fb40*/ BGE         V16cv500MapNRx_x2fb58
    V16cv500MapNRx_x2fb44:
    /*0002fb44*/ ADD         IP, R0, R0, LSL #1 
    /*0002fb48*/ MOVW        R3, #1023                   @ 0x3ff 
    /*0002fb4c*/ ASR         IP, IP, #1 
    /*0002fb50*/ CMP         IP, R3 
    /*0002fb54*/ MOVGE       IP, R3 
    V16cv500MapNRx_x2fb58:
    /*0002fb58*/ LDRB        LR, [R5, #493]              @ 0x1ed 
    /*0002fb5c*/ SXTH        R2, R2 
    /*0002fb60*/ LDR         R7, [SP, #16] 
    /*0002fb64*/ ADD         R3, SL, SL, LSL #1 
    /*0002fb68*/ UBFX        LR, LR, #2, #4 
    /*0002fb6c*/ LDRB        R1, [R4, #642]              @ 0x282 
    /*0002fb70*/ ADD         LR, R7, LR 
    /*0002fb74*/ LDRB        R6, [R5, #497]              @ 0x1f1 
    /*0002fb78*/ ADD         R2, R2, R2, LSL #1 
    /*0002fb7c*/ ASR         R3, R3, #1 
    /*0002fb80*/ LDRB        LR, [LR, #60]               @ 0x3c 
    /*0002fb84*/ AND         R6, R6, #15 
    /*0002fb88*/ STR         R6, [SP, #20] 
    /*0002fb8c*/ ASR         R2, R2, #1 
    /*0002fb90*/ BFI         R1, LR, #4, #4 
    /*0002fb94*/ STRB        R1, [R4, #642]              @ 0x282 
    /*0002fb98*/ LDRB        LR, [R5, #493]              @ 0x1ed 
    /*0002fb9c*/ MOVW        R6, #511                    @ 0x1ff 
    /*0002fba0*/ CMP         R2, R6 
    /*0002fba4*/ LDRB        R1, [R4, #643]              @ 0x283 
    /*0002fba8*/ UBFX        LR, LR, #2, #4 
    /*0002fbac*/ ADD         LR, R7, LR 
    /*0002fbb0*/ MOVGE       R2, R6 
    /*0002fbb4*/ CMP         R3, #255                    @ 0xff 
    /*0002fbb8*/ LDRB        LR, [LR, #76]               @ 0x4c 
    /*0002fbbc*/ MOVGE       R3, #255                    @ 0xff 
    /*0002fbc0*/ CMP         IP, #0 
    /*0002fbc4*/ BFI         R1, LR, #0, #3 
    /*0002fbc8*/ UXTB        R1, R1 
    /*0002fbcc*/ ORR         R1, R1, #8 
    /*0002fbd0*/ STRB        R1, [R4, #643]              @ 0x283 
    /*0002fbd4*/ BEQ         V16cv500MapNRx_x2fdbc
    /*0002fbd8*/ CMP         IP, R0 
    /*0002fbdc*/ ADD         LR, R4, #620                @ 0x26c 
    /*0002fbe0*/ MOVLT       R0, IP 
    /*0002fbe4*/ SUB         IP, IP, R0 
    /*0002fbe8*/ LSL         R0, R0, #4 
    /*0002fbec*/ LDRH        R6, [LR, #2] 
    /*0002fbf0*/ LSL         R1, IP, #1 
    /*0002fbf4*/ ADD         R7, IP, R0 
    /*0002fbf8*/ ADD         R8, R0, R1 
    /*0002fbfc*/ ADD         R7, R7, #8 
    /*0002fc00*/ ADD         R8, R8, #8 
    /*0002fc04*/ LDRH        R9, [LR] 
    /*0002fc08*/ ADD         R1, IP, R1 
    /*0002fc0c*/ ASR         R7, R7, #4 
    /*0002fc10*/ ASR         R8, R8, #4 
    /*0002fc14*/ BFI         R9, R7, #6, #10 
    /*0002fc18*/ BFI         R6, R8, #0, #10 
    /*0002fc1c*/ ADD         R7, R0, R1 
    /*0002fc20*/ STRH        R6, [LR, #2] 
    /*0002fc24*/ ADD         R6, R4, #624                @ 0x270 
    /*0002fc28*/ ADD         R1, IP, R1 
    /*0002fc2c*/ ADD         R7, R7, #8 
    /*0002fc30*/ STRH        R9, [LR] 
    /*0002fc34*/ ADD         R8, R0, R1 
    /*0002fc38*/ LDRH        LR, [R6] 
    /*0002fc3c*/ ASR         R7, R7, #4 
    /*0002fc40*/ ADD         R8, R8, #8 
    /*0002fc44*/ ADD         R1, IP, R1 
    /*0002fc48*/ BFI         LR, R7, #0, #10 
    /*0002fc4c*/ STRH        LR, [R6] 
    /*0002fc50*/ LDR         LR, [R4, #624]              @ 0x270 
    /*0002fc54*/ ASR         R8, R8, #4 
    /*0002fc58*/ ADD         R9, R0, R1 
    /*0002fc5c*/ ADD         R1, IP, R1 
    /*0002fc60*/ BFI         LR, R8, #10, #10 
    /*0002fc64*/ ADD         R9, R9, #8 
    /*0002fc68*/ ADD         R7, R4, #628                @ 0x274 
    /*0002fc6c*/ ADD         R8, R0, R1 
    /*0002fc70*/ STR         LR, [R4, #624]              @ 0x270 
    /*0002fc74*/ ASR         R9, R9, #4 
    /*0002fc78*/ ADD         R1, IP, R1 
    /*0002fc7c*/ ADD         R8, R8, #8 
    /*0002fc80*/ LSR         LR, LR, #16 
    /*0002fc84*/ BFI         LR, R9, #4, #10 
    /*0002fc88*/ STRH        LR, [R6, #2] 
    /*0002fc8c*/ ADD         R6, R0, R1 
    /*0002fc90*/ LDRH        LR, [R7] 
    /*0002fc94*/ ASR         R8, R8, #4 
    /*0002fc98*/ ADD         R6, R6, #8 
    /*0002fc9c*/ BFI         LR, R8, #0, #10 
    /*0002fca0*/ ADD         R1, IP, R1 
    /*0002fca4*/ STRH        LR, [R7] 
    /*0002fca8*/ ASR         R8, R6, #4 
    /*0002fcac*/ LDR         LR, [R4, #628]              @ 0x274 
    /*0002fcb0*/ ADD         R6, R0, R1 
    /*0002fcb4*/ ADD         R6, R6, #8 
    /*0002fcb8*/ ADD         R1, IP, R1 
    /*0002fcbc*/ BFI         LR, R8, #10, #10 
    /*0002fcc0*/ ADD         R9, R0, R1 
    /*0002fcc4*/ ADD         R8, R4, #632                @ 0x278 
    /*0002fcc8*/ STR         LR, [R4, #628]              @ 0x274 
    /*0002fccc*/ ASR         R6, R6, #4 
    /*0002fcd0*/ ADD         R1, IP, R1 
    /*0002fcd4*/ ADD         R9, R9, #8 
    /*0002fcd8*/ LSR         LR, LR, #16 
    /*0002fcdc*/ BFI         LR, R6, #4, #10 
    /*0002fce0*/ ADD         R6, R0, R1 
    /*0002fce4*/ STRH        LR, [R7, #2] 
    /*0002fce8*/ ASR         R9, R9, #4 
    /*0002fcec*/ LDRH        LR, [R8] 
    /*0002fcf0*/ ADD         R6, R6, #8 
    /*0002fcf4*/ ADD         R1, IP, R1 
    /*0002fcf8*/ BFI         LR, R9, #0, #10 
    /*0002fcfc*/ STRH        LR, [R8] 
    /*0002fd00*/ LDR         LR, [R4, #632]              @ 0x278 
    /*0002fd04*/ ASR         R6, R6, #4 
    /*0002fd08*/ ADD         R9, R0, R1 
    /*0002fd0c*/ ADD         R1, IP, R1 
    /*0002fd10*/ BFI         LR, R6, #10, #10 
    /*0002fd14*/ ADD         R9, R9, #8 
    /*0002fd18*/ ADD         R6, R4, #636                @ 0x27c 
    /*0002fd1c*/ ADD         R7, R0, R1 
    /*0002fd20*/ STR         LR, [R4, #632]              @ 0x278 
    /*0002fd24*/ ASR         R9, R9, #4 
    /*0002fd28*/ ADD         R1, IP, R1 
    /*0002fd2c*/ ADD         R7, R7, #8 
    /*0002fd30*/ LSR         LR, LR, #16 
    /*0002fd34*/ BFI         LR, R9, #4, #10 
    /*0002fd38*/ STRH        LR, [R8, #2] 
    /*0002fd3c*/ ADD         LR, R0, R1 
    /*0002fd40*/ LDRH        R8, [R6] 
    /*0002fd44*/ ASR         R7, R7, #4 
    /*0002fd48*/ ADD         LR, LR, #8 
    /*0002fd4c*/ BFI         R8, R7, #0, #10 
    /*0002fd50*/ ADD         R1, IP, R1 
    /*0002fd54*/ STRH        R8, [R6] 
    /*0002fd58*/ ASR         LR, LR, #4 
    /*0002fd5c*/ LDR         R7, [R4, #636]              @ 0x27c 
    /*0002fd60*/ ADD         R8, R0, R1 
    /*0002fd64*/ ADD         R8, R8, #8 
    /*0002fd68*/ ADD         R1, IP, R1 
    /*0002fd6c*/ BFI         R7, LR, #10, #10 
    /*0002fd70*/ ADD         R9, R4, #640                @ 0x280 
    /*0002fd74*/ ADD         LR, R0, R1 
    /*0002fd78*/ STR         R7, [R4, #636]              @ 0x27c 
    /*0002fd7c*/ ADD         R1, IP, R1 
    /*0002fd80*/ ASR         R8, R8, #4 
    /*0002fd84*/ ADD         LR, LR, #8 
    /*0002fd88*/ LSR         R7, R7, #16 
    /*0002fd8c*/ ADD         R1, R1, R0 
    /*0002fd90*/ BFI         R7, R8, #4, #10 
    /*0002fd94*/ STRH        R7, [R6, #2] 
    /*0002fd98*/ ASR         LR, LR, #4 
    /*0002fd9c*/ LDRH        R6, [R9] 
    /*0002fda0*/ ADD         R1, R1, #8 
    /*0002fda4*/ BFI         R6, LR, #0, #10 
    /*0002fda8*/ STRH        R6, [R9] 
    /*0002fdac*/ LDR         LR, [R4, #640]              @ 0x280 
    /*0002fdb0*/ ASR         R1, R1, #4 
    /*0002fdb4*/ BFI         LR, R1, #10, #10 
    /*0002fdb8*/ STR         LR, [R4, #640]              @ 0x280 
    V16cv500MapNRx_x2fdbc:
    /*0002fdbc*/ LDRB        R1, [R5, #493]              @ 0x1ed 
    /*0002fdc0*/ ADD         IP, R4, #644                @ 0x284 
    /*0002fdc4*/ LDR         R6, [SP, #16] 
    /*0002fdc8*/ ADD         R7, R4, #696                @ 0x2b8 
    /*0002fdcc*/ LDR         LR, [SP, #20] 
    /*0002fdd0*/ LSR         R1, R1, #6 
    /*0002fdd4*/ CMP         LR, #4 
    /*0002fdd8*/ ADD         R1, R6, R1, LSL #2 
    /*0002fddc*/ MOV         R0, LR 
    /*0002fde0*/ MOVGT       R0, #1 
    /*0002fde4*/ MOVLE       R0, #0 
    /*0002fde8*/ LDR         R1, [R1, #92]               @ 0x5c 
    /*0002fdec*/ STRH        R1, [IP] 
    /*0002fdf0*/ LDRB        IP, [R5, #496]              @ 0x1f0 
    /*0002fdf4*/ LDRB        R1, [R4, #620]              @ 0x26c 
    /*0002fdf8*/ AND         IP, IP, #15 
    /*0002fdfc*/ BFI         R1, IP, #1, #5 
    /*0002fe00*/ BFI         R1, R0, #0, #1 
    /*0002fe04*/ MOVGT       R0, LR 
    /*0002fe08*/ STRB        R1, [R4, #620]              @ 0x26c 
    /*0002fe0c*/ SUBGT       R1, R0, #5 
    /*0002fe10*/ LDR         R0, [SP, #24] 
    /*0002fe14*/ STRGT       R1, [SP, #20] 
    /*0002fe18*/ LDR         IP, [SP, #20] 
    /*0002fe1c*/ CMP         R0, R2 
    /*0002fe20*/ LDRB        R1, [R4, #643]              @ 0x283 
    /*0002fe24*/ RSB         IP, IP, #4 
    /*0002fe28*/ MOVGE       R0, R2 
    /*0002fe2c*/ BFI         R1, IP, #4, #3 
    /*0002fe30*/ STRB        R1, [R4, #643]              @ 0x283 
    /*0002fe34*/ SUB         R2, R2, R0 
    /*0002fe38*/ LDR         R8, [SP, #40]               @ 0x28 
    /*0002fe3c*/ LSL         R0, R0, #4 
    /*0002fe40*/ CMP         R3, #0 
    /*0002fe44*/ ADD         LR, R2, R0 
    /*0002fe48*/ LSL         R1, R2, #1 
    /*0002fe4c*/ ADD         LR, LR, #8 
    /*0002fe50*/ LDRH        R6, [R8, #2] 
    /*0002fe54*/ ADD         IP, R0, R1 
    /*0002fe58*/ ADD         R1, R2, R1 
    /*0002fe5c*/ ASR         LR, LR, #4 
    /*0002fe60*/ ADD         IP, IP, #8 
    /*0002fe64*/ BFI         R6, LR, #5, #9 
    /*0002fe68*/ ADD         LR, R0, R1 
    /*0002fe6c*/ STRH        R6, [R8, #2] 
    /*0002fe70*/ ASR         IP, IP, #4 
    /*0002fe74*/ LDRH        R6, [R7] 
    /*0002fe78*/ ADD         LR, LR, #8 
    /*0002fe7c*/ ADD         R1, R2, R1 
    /*0002fe80*/ BFI         R6, IP, #0, #9 
    /*0002fe84*/ STRH        R6, [R7] 
    /*0002fe88*/ LDR         IP, [R4, #696]              @ 0x2b8 
    /*0002fe8c*/ ASR         LR, LR, #4 
    /*0002fe90*/ ADD         R8, R0, R1 
    /*0002fe94*/ ADD         R1, R2, R1 
    /*0002fe98*/ BFI         IP, LR, #9, #9 
    /*0002fe9c*/ ADD         R8, R8, #8 
    /*0002fea0*/ ADD         LR, R4, #700                @ 0x2bc 
    /*0002fea4*/ ADD         R6, R0, R1 
    /*0002fea8*/ STR         IP, [R4, #696]              @ 0x2b8 
    /*0002feac*/ ADD         R1, R2, R1 
    /*0002feb0*/ ASR         R8, R8, #4 
    /*0002feb4*/ ADD         R6, R6, #8 
    /*0002feb8*/ LSR         IP, IP, #16 
    /*0002febc*/ BFI         IP, R8, #2, #9 
    /*0002fec0*/ STRH        IP, [R7, #2] 
    /*0002fec4*/ ADD         R7, R0, R1 
    /*0002fec8*/ LDRH        IP, [LR] 
    /*0002fecc*/ ASR         R6, R6, #4 
    /*0002fed0*/ ADD         R7, R7, #8 
    /*0002fed4*/ ADD         R1, R2, R1 
    /*0002fed8*/ BFI         IP, R6, #0, #9 
    /*0002fedc*/ STRH        IP, [LR] 
    /*0002fee0*/ ASR         R6, R7, #4 
    /*0002fee4*/ LDR         IP, [R4, #700]              @ 0x2bc 
    /*0002fee8*/ ADD         R8, R0, R1 
    /*0002feec*/ ADD         R8, R8, #8 
    /*0002fef0*/ ADD         R1, R2, R1 
    /*0002fef4*/ BFI         IP, R6, #9, #9 
    /*0002fef8*/ ADD         R7, R4, #704                @ 0x2c0 
    /*0002fefc*/ ADD         R6, R0, R1 
    /*0002ff00*/ STR         IP, [R4, #700]              @ 0x2bc 
    /*0002ff04*/ ADD         R1, R2, R1 
    /*0002ff08*/ ASR         R8, R8, #4 
    /*0002ff0c*/ ADD         R6, R6, #8 
    /*0002ff10*/ LSR         IP, IP, #16 
    /*0002ff14*/ BFI         IP, R8, #2, #9 
    /*0002ff18*/ STRH        IP, [LR, #2] 
    /*0002ff1c*/ ADD         LR, R0, R1 
    /*0002ff20*/ LDRH        IP, [R7] 
    /*0002ff24*/ ASR         R6, R6, #4 
    /*0002ff28*/ ADD         LR, LR, #8 
    /*0002ff2c*/ ADD         R1, R2, R1 
    /*0002ff30*/ BFI         IP, R6, #0, #9 
    /*0002ff34*/ STRH        IP, [R7] 
    /*0002ff38*/ ASR         LR, LR, #4 
    /*0002ff3c*/ LDR         IP, [R4, #704]              @ 0x2c0 
    /*0002ff40*/ ADD         R8, R0, R1 
    /*0002ff44*/ ADD         R8, R8, #8 
    /*0002ff48*/ ADD         R1, R2, R1 
    /*0002ff4c*/ BFI         IP, LR, #9, #9 
    /*0002ff50*/ ADD         R6, R0, R1 
    /*0002ff54*/ ADD         LR, R4, #708                @ 0x2c4 
    /*0002ff58*/ STR         IP, [R4, #704]              @ 0x2c0 
    /*0002ff5c*/ ADD         R1, R2, R1 
    /*0002ff60*/ ASR         R8, R8, #4 
    /*0002ff64*/ ADD         R6, R6, #8 
    /*0002ff68*/ LSR         IP, IP, #16 
    /*0002ff6c*/ BFI         IP, R8, #2, #9 
    /*0002ff70*/ STRH        IP, [R7, #2] 
    /*0002ff74*/ ADD         R7, R0, R1 
    /*0002ff78*/ LDRH        IP, [LR] 
    /*0002ff7c*/ ASR         R6, R6, #4 
    /*0002ff80*/ ADD         R7, R7, #8 
    /*0002ff84*/ ADD         R1, R2, R1 
    /*0002ff88*/ BFI         IP, R6, #0, #9 
    /*0002ff8c*/ STRH        IP, [LR] 
    /*0002ff90*/ ASR         R6, R7, #4 
    /*0002ff94*/ LDR         IP, [R4, #708]              @ 0x2c4 
    /*0002ff98*/ ADD         R8, R0, R1 
    /*0002ff9c*/ ADD         R8, R8, #8 
    /*0002ffa0*/ ADD         R1, R2, R1 
    /*0002ffa4*/ BFI         IP, R6, #9, #9 
    /*0002ffa8*/ ADD         R7, R0, R1 
    /*0002ffac*/ ADD         R6, R4, #712                @ 0x2c8 
    /*0002ffb0*/ STR         IP, [R4, #708]              @ 0x2c4 
    /*0002ffb4*/ ADD         R1, R2, R1 
    /*0002ffb8*/ ASR         R8, R8, #4 
    /*0002ffbc*/ ADD         R7, R7, #8 
    /*0002ffc0*/ LSR         IP, IP, #16 
    /*0002ffc4*/ BFI         IP, R8, #2, #9 
    /*0002ffc8*/ STRH        IP, [LR, #2] 
    /*0002ffcc*/ ADD         IP, R0, R1 
    /*0002ffd0*/ LDRH        LR, [R6] 
    /*0002ffd4*/ ASR         R7, R7, #4 
    /*0002ffd8*/ ADD         IP, IP, #8 
    /*0002ffdc*/ BFI         LR, R7, #0, #9 
    /*0002ffe0*/ ADD         R2, R2, R1 
    /*0002ffe4*/ STRH        LR, [R6] 
    /*0002ffe8*/ ASR         IP, IP, #4 
    /*0002ffec*/ LDR         LR, [R4, #712]              @ 0x2c8 
    /*0002fff0*/ ADD         R2, R2, R0 
    /*0002fff4*/ ADD         R2, R2, #8 
    /*0002fff8*/ MOV         R7, #1 
    /*0002fffc*/ BFI         LR, IP, #9, #9 
    /*00030000*/ STR         LR, [R4, #712]              @ 0x2c8 
    /*00030004*/ ASR         R2, R2, #4 
    /*00030008*/ LSR         LR, LR, #16 
    /*0003000c*/ BFI         LR, R2, #2, #9 
    /*00030010*/ STRH        LR, [R6, #2] 
    /*00030014*/ LDRB        R2, [R4, #732]              @ 0x2dc 
    /*00030018*/ BFI         R2, R7, #6, #2 
    /*0003001c*/ STRB        R2, [R4, #732]              @ 0x2dc 
    /*00030020*/ LDRB        R2, [R5, #487]              @ 0x1e7 
    /*00030024*/ LDRB        R1, [R4, #732]              @ 0x2dc 
    /*00030028*/ UBFX        R2, R2, #1, #2 
    /*0003002c*/ BFI         R1, R2, #4, #2 
    /*00030030*/ STRB        R1, [R4, #732]              @ 0x2dc 
    /*00030034*/ LDRB        R2, [R5, #487]              @ 0x1e7 
    /*00030038*/ UXTB        R1, R1 
    /*0003003c*/ UBFX        R2, R2, #3, #2 
    /*00030040*/ BFI         R1, R2, #0, #2 
    /*00030044*/ STRB        R1, [R4, #732]              @ 0x2dc 
    /*00030048*/ LDRB        R2, [R5, #487]              @ 0x1e7 
    /*0003004c*/ UXTB        R1, R1 
    /*00030050*/ UBFX        R2, R2, #5, #2 
    /*00030054*/ BFI         R1, R2, #2, #2 
    /*00030058*/ STRB        R1, [R4, #732]              @ 0x2dc 
    /*0003005c*/ BEQ         V16cv500MapNRx_x301d0
    /*00030060*/ CMP         SL, R3 
    /*00030064*/ MOVLT       R2, SL 
    /*00030068*/ MOVGE       R2, R3 
    /*0003006c*/ SUB         R3, R3, R2 
    /*00030070*/ LSL         R2, R2, #4 
    /*00030074*/ LSL         R0, R3, R7 
    /*00030078*/ ADD         SL, R3, R0 
    /*0003007c*/ ADD         R0, R2, R0 
    /*00030080*/ ADD         R9, R3, SL 
    /*00030084*/ ADD         R0, R0, #8 
    /*00030088*/ ADD         R8, R3, R9 
    /*0003008c*/ STR         R0, [SP, #28] 
    /*00030090*/ ADD         R7, R3, R8 
    /*00030094*/ ADD         SL, R2, SL 
    /*00030098*/ ADD         R6, R3, R7 
    /*0003009c*/ ADD         SL, SL, #8 
    /*000300a0*/ ADD         LR, R3, R6 
    /*000300a4*/ ADD         R7, R2, R7 
    /*000300a8*/ ADD         IP, R3, LR 
    /*000300ac*/ ADD         R6, R2, R6 
    /*000300b0*/ ADD         R1, R3, IP 
    /*000300b4*/ ADD         IP, R2, IP 
    /*000300b8*/ STR         R1, [SP, #20] 
    /*000300bc*/ ADD         IP, IP, #8 
    /*000300c0*/ LDR         R0, [SP, #20] 
    /*000300c4*/ ADD         R1, R3, R2 
    /*000300c8*/ STR         IP, [SP, #32] 
    /*000300cc*/ ADD         R1, R1, #8 
    /*000300d0*/ LDR         IP, [SP, #28] 
    /*000300d4*/ ADD         R7, R7, #8 
    /*000300d8*/ STR         R1, [SP, #24] 
    /*000300dc*/ ADD         R1, R3, R0 
    /*000300e0*/ ASR         SL, SL, #4 
    /*000300e4*/ ADD         R6, R6, #8 
    /*000300e8*/ ASR         IP, IP, #4 
    /*000300ec*/ STRB        SL, [R4, #718]              @ 0x2ce 
    /*000300f0*/ STRB        IP, [R4, #717]              @ 0x2cd 
    /*000300f4*/ ADD         SL, R3, R1 
    /*000300f8*/ LDR         IP, [SP, #32] 
    /*000300fc*/ ASR         R7, R7, #4 
    /*00030100*/ STRB        R7, [R4, #721]              @ 0x2d1 
    /*00030104*/ ADD         R7, R3, SL 
    /*00030108*/ ADD         R1, R2, R1 
    /*0003010c*/ ASR         R6, R6, #4 
    /*00030110*/ STRB        R6, [R4, #722]              @ 0x2d2 
    /*00030114*/ ADD         R6, R3, R7 
    /*00030118*/ ASR         IP, IP, #4 
    /*0003011c*/ ADD         R1, R1, #8 
    /*00030120*/ STRB        IP, [R4, #724]              @ 0x2d4 
    /*00030124*/ ADD         IP, R3, R6 
    /*00030128*/ ADD         R3, R3, IP 
    /*0003012c*/ ADD         R9, R2, R9 
    /*00030130*/ ADD         R8, R2, R8 
    /*00030134*/ ADD         LR, R2, LR 
    /*00030138*/ ADD         R0, R2, R0 
    /*0003013c*/ ADD         SL, R2, SL 
    /*00030140*/ ADD         R7, R2, R7 
    /*00030144*/ ADD         R6, R2, R6 
    /*00030148*/ ADD         R3, R3, R2 
    /*0003014c*/ ASR         R1, R1, #4 
    /*00030150*/ ADD         R2, R2, IP 
    /*00030154*/ STRB        R1, [R4, #726]              @ 0x2d6 
    /*00030158*/ LDR         R1, [SP, #24] 
    /*0003015c*/ ADD         R9, R9, #8 
    /*00030160*/ ADD         R8, R8, #8 
    /*00030164*/ ADD         LR, LR, #8 
    /*00030168*/ ADD         R0, R0, #8 
    /*0003016c*/ ADD         SL, SL, #8 
    /*00030170*/ ADD         R7, R7, #8 
    /*00030174*/ ADD         R6, R6, #8 
    /*00030178*/ ADD         R3, R3, #8 
    /*0003017c*/ ADD         R2, R2, #8 
    /*00030180*/ ASR         R9, R9, #4 
    /*00030184*/ ASR         R8, R8, #4 
    /*00030188*/ ASR         LR, LR, #4 
    /*0003018c*/ ASR         R0, R0, #4 
    /*00030190*/ ASR         SL, SL, #4 
    /*00030194*/ ASR         R7, R7, #4 
    /*00030198*/ ASR         R6, R6, #4 
    /*0003019c*/ ASR         R3, R3, #4 
    /*000301a0*/ ASR         R2, R2, #4 
    /*000301a4*/ ASR         R1, R1, #4 
    /*000301a8*/ STRB        R9, [R4, #719]              @ 0x2cf 
    /*000301ac*/ STRB        R8, [R4, #720]              @ 0x2d0 
    /*000301b0*/ STRB        LR, [R4, #723]              @ 0x2d3 
    /*000301b4*/ STRB        R0, [R4, #725]              @ 0x2d5 
    /*000301b8*/ STRB        SL, [R4, #727]              @ 0x2d7 
    /*000301bc*/ STRB        R7, [R4, #728]              @ 0x2d8 
    /*000301c0*/ STRB        R6, [R4, #729]              @ 0x2d9 
    /*000301c4*/ STRB        R3, [R4, #731]              @ 0x2db 
    /*000301c8*/ STRB        R2, [R4, #730]              @ 0x2da 
    /*000301cc*/ STRB        R1, [R4, #716]              @ 0x2cc 
    V16cv500MapNRx_x301d0:
    /*000301d0*/ ADD         R2, R5, #488                @ 0x1e8 
    /*000301d4*/ MOVW        R3, #494                    @ 0x1ee 
    /*000301d8*/ LDRB        R1, [R5, #487]              @ 0x1e7 
    /*000301dc*/ LDRH        R3, [R5, R3] 
    /*000301e0*/ LDRH        R2, [R2] 
    /*000301e4*/ LSRS        R1, R1, #7 
    /*000301e8*/ UBFX        R3, R3, #0, #10 
    /*000301ec*/ LDRB        SL, [R5, #491]              @ 0x1eb 
    /*000301f0*/ UBFX        R2, R2, #0, #9 
    /*000301f4*/ UXTH        R0, R3 
    /*000301f8*/ UXTH        R1, R2 
    /*000301fc*/ STR         R1, [SP, #20] 
    /*00030200*/ BNE         V16cv500MapNRx_x30e0c
    /*00030204*/ MOV         R3, #0 
    /*00030208*/ STR         R3, [SP, #12] 
    /*0003020c*/ MOV         R0, R3 
    /*00030210*/ MOV         IP, R3 
    V16cv500MapNRx_x30214:
    /*00030214*/ SXTH        R2, R2 
    /*00030218*/ LDR         R6, [SP, #12] 
    /*0003021c*/ LDRB        LR, [R4, #623]              @ 0x26f 
    /*00030220*/ ADD         R3, SL, SL, LSL #1 
    /*00030224*/ ADD         R2, R2, R2, LSL #1 
    /*00030228*/ MOVW        R1, #511                    @ 0x1ff 
    /*0003022c*/ BFI         LR, R6, #2, #1 
    /*00030230*/ STRB        LR, [R4, #623]              @ 0x26f 
    /*00030234*/ ASR         R2, R2, #1 
    /*00030238*/ LDRB        LR, [R5, #497]              @ 0x1f1 
    /*0003023c*/ CMP         R2, R1 
    /*00030240*/ LDRB        R6, [R5, #495]              @ 0x1ef 
    /*00030244*/ ASR         R3, R3, #1 
    /*00030248*/ LDR         R7, [SP, #16] 
    /*0003024c*/ MOVGE       R2, R1 
    /*00030250*/ CMP         R3, #255                    @ 0xff 
    /*00030254*/ LSR         R1, LR, #4 
    /*00030258*/ UBFX        R6, R6, #2, #4 
    /*0003025c*/ MOVGE       R3, #255                    @ 0xff 
    /*00030260*/ ADD         R6, R7, R6 
    /*00030264*/ CMP         R1, #5 
    /*00030268*/ LDRB        R6, [R6, #60]               @ 0x3c 
    /*0003026c*/ MOVLT       R1, #5 
    /*00030270*/ BFI         LR, R1, #4, #4 
    /*00030274*/ STRB        LR, [R5, #497]              @ 0x1f1 
    /*00030278*/ SUB         R1, R1, #5 
    /*0003027c*/ LDRB        LR, [R4, #674]              @ 0x2a2 
    /*00030280*/ CMP         IP, #0 
    /*00030284*/ STR         R1, [SP, #12] 
    /*00030288*/ BFI         LR, R6, #4, #4 
    /*0003028c*/ STRB        LR, [R4, #674]              @ 0x2a2 
    /*00030290*/ LDRB        LR, [R5, #495]              @ 0x1ef 
    /*00030294*/ LDRB        R1, [R4, #675]              @ 0x2a3 
    /*00030298*/ UBFX        LR, LR, #2, #4 
    /*0003029c*/ ADD         LR, R7, LR 
    /*000302a0*/ LDRB        LR, [LR, #76]               @ 0x4c 
    /*000302a4*/ BFI         R1, LR, #0, #3 
    /*000302a8*/ UXTB        R1, R1 
    /*000302ac*/ ORR         R1, R1, #8 
    /*000302b0*/ STRB        R1, [R4, #675]              @ 0x2a3 
    /*000302b4*/ BEQ         V16cv500MapNRx_x3049c
    /*000302b8*/ CMP         IP, R0 
    /*000302bc*/ ADD         LR, R4, #652                @ 0x28c 
    /*000302c0*/ MOVLT       R0, IP 
    /*000302c4*/ SUB         IP, IP, R0 
    /*000302c8*/ LSL         R0, R0, #4 
    /*000302cc*/ LDRH        R6, [LR, #2] 
    /*000302d0*/ LSL         R1, IP, #1 
    /*000302d4*/ ADD         R7, IP, R0 
    /*000302d8*/ ADD         R8, R0, R1 
    /*000302dc*/ ADD         R7, R7, #8 
    /*000302e0*/ ADD         R8, R8, #8 
    /*000302e4*/ LDRH        R9, [LR] 
    /*000302e8*/ ADD         R1, IP, R1 
    /*000302ec*/ ASR         R7, R7, #4 
    /*000302f0*/ ASR         R8, R8, #4 
    /*000302f4*/ BFI         R9, R7, #6, #10 
    /*000302f8*/ BFI         R6, R8, #0, #10 
    /*000302fc*/ ADD         R7, R0, R1 
    /*00030300*/ STRH        R6, [LR, #2] 
    /*00030304*/ ADD         R6, R4, #656                @ 0x290 
    /*00030308*/ ADD         R1, IP, R1 
    /*0003030c*/ ADD         R7, R7, #8 
    /*00030310*/ STRH        R9, [LR] 
    /*00030314*/ ADD         R8, R0, R1 
    /*00030318*/ LDRH        LR, [R6] 
    /*0003031c*/ ASR         R7, R7, #4 
    /*00030320*/ ADD         R8, R8, #8 
    /*00030324*/ ADD         R1, IP, R1 
    /*00030328*/ BFI         LR, R7, #0, #10 
    /*0003032c*/ STRH        LR, [R6] 
    /*00030330*/ LDR         LR, [R4, #656]              @ 0x290 
    /*00030334*/ ADD         R9, R0, R1 
    /*00030338*/ ASR         R8, R8, #4 
    /*0003033c*/ ADD         R1, IP, R1 
    /*00030340*/ BFI         LR, R8, #10, #10 
    /*00030344*/ ADD         R9, R9, #8 
    /*00030348*/ ADD         R7, R4, #660                @ 0x294 
    /*0003034c*/ ADD         R8, R0, R1 
    /*00030350*/ STR         LR, [R4, #656]              @ 0x290 
    /*00030354*/ ASR         R9, R9, #4 
    /*00030358*/ ADD         R1, IP, R1 
    /*0003035c*/ ADD         R8, R8, #8 
    /*00030360*/ LSR         LR, LR, #16 
    /*00030364*/ BFI         LR, R9, #4, #10 
    /*00030368*/ STRH        LR, [R6, #2] 
    /*0003036c*/ ADD         R6, R0, R1 
    /*00030370*/ LDRH        LR, [R7] 
    /*00030374*/ ASR         R8, R8, #4 
    /*00030378*/ ADD         R6, R6, #8 
    /*0003037c*/ BFI         LR, R8, #0, #10 
    /*00030380*/ ADD         R1, IP, R1 
    /*00030384*/ STRH        LR, [R7] 
    /*00030388*/ ASR         R8, R6, #4 
    /*0003038c*/ LDR         LR, [R4, #660]              @ 0x294 
    /*00030390*/ ADD         R6, R0, R1 
    /*00030394*/ ADD         R6, R6, #8 
    /*00030398*/ ADD         R1, IP, R1 
    /*0003039c*/ BFI         LR, R8, #10, #10 
    /*000303a0*/ ADD         R9, R0, R1 
    /*000303a4*/ ADD         R8, R4, #664                @ 0x298 
    /*000303a8*/ STR         LR, [R4, #660]              @ 0x294 
    /*000303ac*/ ASR         R6, R6, #4 
    /*000303b0*/ ADD         R1, IP, R1 
    /*000303b4*/ ADD         R9, R9, #8 
    /*000303b8*/ LSR         LR, LR, #16 
    /*000303bc*/ BFI         LR, R6, #4, #10 
    /*000303c0*/ ADD         R6, R0, R1 
    /*000303c4*/ STRH        LR, [R7, #2] 
    /*000303c8*/ ASR         R9, R9, #4 
    /*000303cc*/ LDRH        LR, [R8] 
    /*000303d0*/ ADD         R6, R6, #8 
    /*000303d4*/ ADD         R1, IP, R1 
    /*000303d8*/ BFI         LR, R9, #0, #10 
    /*000303dc*/ STRH        LR, [R8] 
    /*000303e0*/ LDR         LR, [R4, #664]              @ 0x298 
    /*000303e4*/ ADD         R9, R0, R1 
    /*000303e8*/ ASR         R6, R6, #4 
    /*000303ec*/ ADD         R1, IP, R1 
    /*000303f0*/ BFI         LR, R6, #10, #10 
    /*000303f4*/ ADD         R9, R9, #8 
    /*000303f8*/ ADD         R6, R4, #668                @ 0x29c 
    /*000303fc*/ ADD         R7, R0, R1 
    /*00030400*/ STR         LR, [R4, #664]              @ 0x298 
    /*00030404*/ ASR         R9, R9, #4 
    /*00030408*/ ADD         R1, IP, R1 
    /*0003040c*/ ADD         R7, R7, #8 
    /*00030410*/ LSR         LR, LR, #16 
    /*00030414*/ BFI         LR, R9, #4, #10 
    /*00030418*/ STRH        LR, [R8, #2] 
    /*0003041c*/ ADD         LR, R0, R1 
    /*00030420*/ LDRH        R8, [R6] 
    /*00030424*/ ASR         R7, R7, #4 
    /*00030428*/ ADD         LR, LR, #8 
    /*0003042c*/ BFI         R8, R7, #0, #10 
    /*00030430*/ ADD         R1, IP, R1 
    /*00030434*/ STRH        R8, [R6] 
    /*00030438*/ ASR         LR, LR, #4 
    /*0003043c*/ LDR         R7, [R4, #668]              @ 0x29c 
    /*00030440*/ ADD         R8, R0, R1 
    /*00030444*/ ADD         R8, R8, #8 
    /*00030448*/ ADD         R1, IP, R1 
    /*0003044c*/ BFI         R7, LR, #10, #10 
    /*00030450*/ ADD         R9, R4, #672                @ 0x2a0 
    /*00030454*/ ADD         LR, R0, R1 
    /*00030458*/ STR         R7, [R4, #668]              @ 0x29c 
    /*0003045c*/ ADD         R1, IP, R1 
    /*00030460*/ ASR         R8, R8, #4 
    /*00030464*/ ADD         LR, LR, #8 
    /*00030468*/ LSR         R7, R7, #16 
    /*0003046c*/ ADD         R1, R1, R0 
    /*00030470*/ BFI         R7, R8, #4, #10 
    /*00030474*/ STRH        R7, [R6, #2] 
    /*00030478*/ ASR         LR, LR, #4 
    /*0003047c*/ LDRH        R6, [R9] 
    /*00030480*/ ADD         R1, R1, #8 
    /*00030484*/ BFI         R6, LR, #0, #10 
    /*00030488*/ STRH        R6, [R9] 
    /*0003048c*/ LDR         R0, [R4, #672]              @ 0x2a0 
    /*00030490*/ ASR         R1, R1, #4 
    /*00030494*/ BFI         R0, R1, #10, #10 
    /*00030498*/ STR         R0, [R4, #672]              @ 0x2a0 
    V16cv500MapNRx_x3049c:
    /*0003049c*/ LDR         R0, [SP, #20] 
    /*000304a0*/ ADD         R7, R4, #748                @ 0x2ec 
    /*000304a4*/ LDR         IP, [SP, #12] 
    /*000304a8*/ LDRB        R1, [R4, #675]              @ 0x2a3 
    /*000304ac*/ CMP         R0, R2 
    /*000304b0*/ RSB         IP, IP, #4 
    /*000304b4*/ MOVGE       R0, R2 
    /*000304b8*/ BFI         R1, IP, #4, #3 
    /*000304bc*/ STRB        R1, [R4, #675]              @ 0x2a3 
    /*000304c0*/ SUB         R2, R2, R0 
    /*000304c4*/ LDR         R6, [SP, #44]               @ 0x2c 
    /*000304c8*/ LSL         R0, R0, #4 
    /*000304cc*/ ADD         IP, R2, R0 
    /*000304d0*/ LSL         R1, R2, #1 
    /*000304d4*/ ADD         IP, IP, #8 
    /*000304d8*/ ADD         R8, R0, R1 
    /*000304dc*/ LDRH        LR, [R6, #2] 
    /*000304e0*/ ADD         R1, R2, R1 
    /*000304e4*/ ASR         IP, IP, #4 
    /*000304e8*/ ADD         R8, R8, #8 
    /*000304ec*/ BFI         LR, IP, #5, #9 
    /*000304f0*/ STRH        LR, [R6, #2] 
    /*000304f4*/ ADD         LR, R0, R1 
    /*000304f8*/ LDRH        R6, [R7] 
    /*000304fc*/ ASR         IP, R8, #4 
    /*00030500*/ ADD         LR, LR, #8 
    /*00030504*/ ADD         R1, R2, R1 
    /*00030508*/ BFI         R6, IP, #0, #9 
    /*0003050c*/ STRH        R6, [R7] 
    /*00030510*/ ADD         R8, R0, R1 
    /*00030514*/ LDR         IP, [R4, #748]              @ 0x2ec 
    /*00030518*/ ASR         LR, LR, #4 
    /*0003051c*/ ADD         R1, R2, R1 
    /*00030520*/ ADD         R8, R8, #8 
    /*00030524*/ BFI         IP, LR, #9, #9 
    /*00030528*/ ADD         R6, R0, R1 
    /*0003052c*/ ADD         LR, R4, #752                @ 0x2f0 
    /*00030530*/ STR         IP, [R4, #748]              @ 0x2ec 
    /*00030534*/ ADD         R1, R2, R1 
    /*00030538*/ ASR         R8, R8, #4 
    /*0003053c*/ ADD         R6, R6, #8 
    /*00030540*/ LSR         IP, IP, #16 
    /*00030544*/ BFI         IP, R8, #2, #9 
    /*00030548*/ STRH        IP, [R7, #2] 
    /*0003054c*/ ADD         R7, R0, R1 
    /*00030550*/ LDRH        IP, [LR] 
    /*00030554*/ ASR         R6, R6, #4 
    /*00030558*/ ADD         R7, R7, #8 
    /*0003055c*/ ADD         R1, R2, R1 
    /*00030560*/ BFI         IP, R6, #0, #9 
    /*00030564*/ STRH        IP, [LR] 
    /*00030568*/ ASR         R6, R7, #4 
    /*0003056c*/ LDR         IP, [R4, #752]              @ 0x2f0 
    /*00030570*/ ADD         R8, R0, R1 
    /*00030574*/ ADD         R8, R8, #8 
    /*00030578*/ ADD         R1, R2, R1 
    /*0003057c*/ BFI         IP, R6, #9, #9 
    /*00030580*/ ADD         R7, R0, R1 
    /*00030584*/ ADD         R6, R4, #756                @ 0x2f4 
    /*00030588*/ STR         IP, [R4, #752]              @ 0x2f0 
    /*0003058c*/ ADD         R1, R2, R1 
    /*00030590*/ ASR         R8, R8, #4 
    /*00030594*/ ADD         R7, R7, #8 
    /*00030598*/ LSR         IP, IP, #16 
    /*0003059c*/ BFI         IP, R8, #2, #9 
    /*000305a0*/ STRH        IP, [LR, #2] 
    /*000305a4*/ ADD         LR, R0, R1 
    /*000305a8*/ LDRH        IP, [R6] 
    /*000305ac*/ ASR         R7, R7, #4 
    /*000305b0*/ ADD         LR, LR, #8 
    /*000305b4*/ ADD         R1, R2, R1 
    /*000305b8*/ BFI         IP, R7, #0, #9 
    /*000305bc*/ STRH        IP, [R6] 
    /*000305c0*/ ADD         R8, R0, R1 
    /*000305c4*/ LDR         IP, [R4, #756]              @ 0x2f4 
    /*000305c8*/ ASR         LR, LR, #4 
    /*000305cc*/ ADD         R1, R2, R1 
    /*000305d0*/ ADD         R8, R8, #8 
    /*000305d4*/ BFI         IP, LR, #9, #9 
    /*000305d8*/ ADD         R7, R0, R1 
    /*000305dc*/ ADD         LR, R4, #760                @ 0x2f8 
    /*000305e0*/ STR         IP, [R4, #756]              @ 0x2f4 
    /*000305e4*/ ADD         R1, R2, R1 
    /*000305e8*/ ASR         R8, R8, #4 
    /*000305ec*/ ADD         R7, R7, #8 
    /*000305f0*/ LSR         IP, IP, #16 
    /*000305f4*/ BFI         IP, R8, #2, #9 
    /*000305f8*/ STRH        IP, [R6, #2] 
    /*000305fc*/ ADD         IP, R0, R1 
    /*00030600*/ LDRH        R6, [LR] 
    /*00030604*/ ASR         R7, R7, #4 
    /*00030608*/ ADD         IP, IP, #8 
    /*0003060c*/ ADD         R1, R2, R1 
    /*00030610*/ BFI         R6, R7, #0, #9 
    /*00030614*/ STRH        R6, [LR] 
    /*00030618*/ ADD         R8, R0, R1 
    /*0003061c*/ LDR         R6, [R4, #760]              @ 0x2f8 
    /*00030620*/ ASR         IP, IP, #4 
    /*00030624*/ ADD         R1, R2, R1 
    /*00030628*/ ADD         R8, R8, #8 
    /*0003062c*/ BFI         R6, IP, #9, #9 
    /*00030630*/ ADD         R7, R0, R1 
    /*00030634*/ ADD         IP, R4, #764                @ 0x2fc 
    /*00030638*/ STR         R6, [R4, #760]              @ 0x2f8 
    /*0003063c*/ ADD         R1, R2, R1 
    /*00030640*/ ASR         R8, R8, #4 
    /*00030644*/ ADD         R7, R7, #8 
    /*00030648*/ LSR         R6, R6, #16 
    /*0003064c*/ BFI         R6, R8, #2, #9 
    /*00030650*/ STRH        R6, [LR, #2] 
    /*00030654*/ ADD         LR, R0, R1 
    /*00030658*/ LDRH        R6, [IP] 
    /*0003065c*/ ASR         R7, R7, #4 
    /*00030660*/ ADD         LR, LR, #8 
    /*00030664*/ ADD         R2, R2, R1 
    /*00030668*/ BFI         R6, R7, #0, #9 
    /*0003066c*/ STRH        R6, [IP] 
    /*00030670*/ ADD         R2, R2, R0 
    /*00030674*/ LDR         R1, [R4, #764]              @ 0x2fc 
    /*00030678*/ ASR         LR, LR, #4 
    /*0003067c*/ ADD         R2, R2, #8 
    /*00030680*/ MOV         R0, #2 
    /*00030684*/ BFI         R1, LR, #9, #9 
    /*00030688*/ STR         R1, [R4, #764]              @ 0x2fc 
    /*0003068c*/ ASR         R2, R2, #4 
    /*00030690*/ CMP         R3, #0 
    /*00030694*/ LSR         R1, R1, #16 
    /*00030698*/ BFI         R1, R2, #2, #9 
    /*0003069c*/ STRH        R1, [IP, #2] 
    /*000306a0*/ LDRB        R2, [R4, #784]              @ 0x310 
    /*000306a4*/ BFI         R2, R0, #6, #2 
    /*000306a8*/ STRB        R2, [R4, #784]              @ 0x310 
    /*000306ac*/ LDRB        R2, [R5, #489]              @ 0x1e9 
    /*000306b0*/ LDRB        R1, [R4, #784]              @ 0x310 
    /*000306b4*/ UBFX        R2, R2, #1, #2 
    /*000306b8*/ BFI         R1, R2, #4, #2 
    /*000306bc*/ STRB        R1, [R4, #784]              @ 0x310 
    /*000306c0*/ LDRB        R2, [R5, #489]              @ 0x1e9 
    /*000306c4*/ UXTB        R1, R1 
    /*000306c8*/ UBFX        R2, R2, #3, #2 
    /*000306cc*/ BFI         R1, R2, #0, #2 
    /*000306d0*/ STRB        R1, [R4, #784]              @ 0x310 
    /*000306d4*/ LDRB        R2, [R5, #489]              @ 0x1e9 
    /*000306d8*/ UXTB        R1, R1 
    /*000306dc*/ UBFX        R2, R2, #5, #2 
    /*000306e0*/ BFI         R1, R2, #2, #2 
    /*000306e4*/ STRB        R1, [R4, #784]              @ 0x310 
    /*000306e8*/ BEQ         V16cv500MapNRx_x3084c
    /*000306ec*/ CMP         SL, R3 
    /*000306f0*/ MOVLT       R2, SL 
    /*000306f4*/ MOVGE       R2, R3 
    /*000306f8*/ SUB         R3, R3, R2 
    /*000306fc*/ LSL         R2, R2, #4 
    /*00030700*/ LSL         SL, R3, #1 
    /*00030704*/ ADD         R9, R3, SL 
    /*00030708*/ ADD         SL, R2, SL 
    /*0003070c*/ ADD         R8, R3, R9 
    /*00030710*/ ADD         R9, R2, R9 
    /*00030714*/ ADD         R7, R3, R8 
    /*00030718*/ ADD         R9, R9, #8 
    /*0003071c*/ ADD         R6, R3, R7 
    /*00030720*/ ADD         R7, R2, R7 
    /*00030724*/ ADD         R1, R3, R6 
    /*00030728*/ ADD         R7, R7, #8 
    /*0003072c*/ ADD         LR, R3, R1 
    /*00030730*/ ADD         R1, R2, R1 
    /*00030734*/ ADD         IP, R3, LR 
    /*00030738*/ ADD         R6, R2, R6 
    /*0003073c*/ ADD         R0, R3, IP 
    /*00030740*/ ADD         R1, R1, #8 
    /*00030744*/ STR         R1, [SP, #16] 
    /*00030748*/ ADD         R1, R3, R2 
    /*0003074c*/ ADD         R1, R1, #8 
    /*00030750*/ ASR         R7, R7, #4 
    /*00030754*/ STR         R1, [SP, #12] 
    /*00030758*/ ADD         R6, R6, #8 
    /*0003075c*/ ADD         R1, R3, R0 
    /*00030760*/ STRB        R7, [R4, #772]              @ 0x304 
    /*00030764*/ LDR         R7, [SP, #16] 
    /*00030768*/ ADD         IP, R2, IP 
    /*0003076c*/ ASR         R9, R9, #4 
    /*00030770*/ STRB        R9, [R4, #770]              @ 0x302 
    /*00030774*/ ADD         R9, R3, R1 
    /*00030778*/ ASR         R6, R6, #4 
    /*0003077c*/ ADD         IP, IP, #8 
    /*00030780*/ STRB        R6, [R4, #773]              @ 0x305 
    /*00030784*/ ADD         R6, R3, R9 
    /*00030788*/ ADD         R1, R2, R1 
    /*0003078c*/ ASR         R7, R7, #4 
    /*00030790*/ STRB        R7, [R4, #774]              @ 0x306 
    /*00030794*/ ADD         R7, R3, R6 
    /*00030798*/ ASR         IP, IP, #4 
    /*0003079c*/ ADD         R1, R1, #8 
    /*000307a0*/ STRB        IP, [R4, #776]              @ 0x308 
    /*000307a4*/ ADD         IP, R3, R7 
    /*000307a8*/ ADD         R8, R2, R8 
    /*000307ac*/ ADD         R3, R3, IP 
    /*000307b0*/ ADD         LR, R2, LR 
    /*000307b4*/ ADD         R0, R2, R0 
    /*000307b8*/ ADD         R9, R2, R9 
    /*000307bc*/ ADD         R6, R2, R6 
    /*000307c0*/ ADD         R7, R2, R7 
    /*000307c4*/ ADD         R3, R3, R2 
    /*000307c8*/ ASR         R1, R1, #4 
    /*000307cc*/ ADD         R2, R2, IP 
    /*000307d0*/ STRB        R1, [R4, #778]              @ 0x30a 
    /*000307d4*/ LDR         R1, [SP, #12] 
    /*000307d8*/ ADD         SL, SL, #8 
    /*000307dc*/ ADD         R8, R8, #8 
    /*000307e0*/ ADD         LR, LR, #8 
    /*000307e4*/ ADD         R0, R0, #8 
    /*000307e8*/ ADD         R9, R9, #8 
    /*000307ec*/ ADD         R6, R6, #8 
    /*000307f0*/ ADD         R7, R7, #8 
    /*000307f4*/ ADD         R3, R3, #8 
    /*000307f8*/ ADD         R2, R2, #8 
    /*000307fc*/ ASR         SL, SL, #4 
    /*00030800*/ ASR         R8, R8, #4 
    /*00030804*/ ASR         R3, R3, #4 
    /*00030808*/ ASR         LR, LR, #4 
    /*0003080c*/ ASR         R0, R0, #4 
    /*00030810*/ ASR         R9, R9, #4 
    /*00030814*/ ASR         R6, R6, #4 
    /*00030818*/ ASR         R7, R7, #4 
    /*0003081c*/ STRB        R3, [R4, #783]              @ 0x30f 
    /*00030820*/ ASR         R2, R2, #4 
    /*00030824*/ ASR         R3, R1, #4 
    /*00030828*/ STRB        SL, [R4, #769]              @ 0x301 
    /*0003082c*/ STRB        R8, [R4, #771]              @ 0x303 
    /*00030830*/ STRB        LR, [R4, #775]              @ 0x307 
    /*00030834*/ STRB        R0, [R4, #777]              @ 0x309 
    /*00030838*/ STRB        R9, [R4, #779]              @ 0x30b 
    /*0003083c*/ STRB        R6, [R4, #780]              @ 0x30c 
    /*00030840*/ STRB        R7, [R4, #781]              @ 0x30d 
    /*00030844*/ STRB        R2, [R4, #782]              @ 0x30e 
    /*00030848*/ STRB        R3, [R4, #768]              @ 0x300 
    V16cv500MapNRx_x3084c:
    /*0003084c*/ LDRB        R2, [R4, #650]              @ 0x28a 
    /*00030850*/ ADD         R3, R4, #676                @ 0x2a4 
    /*00030854*/ MOV         R1, #4 
    /*00030858*/ MOV         R0, #1 
    /*0003085c*/ BFC         R2, #6, #2 
    /*00030860*/ STRB        R2, [R4, #650]              @ 0x28a 
    /*00030864*/ LDRH        R2, [R3, #2] 
    /*00030868*/ BFC         R2, #0, #11 
    /*0003086c*/ STRH        R2, [R3, #2] 
    /*00030870*/ LDRB        R3, [R4, #227]              @ 0xe3 
    /*00030874*/ LSR         R2, R2, #8 
    /*00030878*/ BFI         R2, R1, #3, #4 
    /*0003087c*/ STRB        R2, [R4, #679]              @ 0x2a7 
    /*00030880*/ LDRB        R2, [R5, #498]              @ 0x1f2 
    /*00030884*/ BFI         R3, R0, #6, #2 
    /*00030888*/ LDRB        R1, [R4, #218]              @ 0xda 
    /*0003088c*/ BFI         R3, R0, #4, #2 
    /*00030890*/ AND         R2, R2, R0 
    /*00030894*/ BFI         R3, R0, #2, #2 
    /*00030898*/ BFI         R1, R2, #6, #1 
    /*0003089c*/ STRB        R3, [R4, #227]              @ 0xe3 
    /*000308a0*/ TST         R1, #64                     @ 0x40 
    /*000308a4*/ STRB        R1, [R4, #218]              @ 0xda 
    /*000308a8*/ BEQ         V16cv500MapNRx_x3096c
    /*000308ac*/ LDR         R3, [SP, #56]               @ 0x38 
    /*000308b0*/ MOVW        R1, #998                    @ 0x3e6 
    /*000308b4*/ LDRH        R2, [R3] 
    /*000308b8*/ UBFX        R3, R2, #0, #10 
    /*000308bc*/ CMP         R3, R1 
    /*000308c0*/ BGT         V16cv500MapNRx_x30e2c
    /*000308c4*/ LSL         R2, R3, #2 
    /*000308c8*/ CMP         R2, #47                     @ 0x2f 
    /*000308cc*/ MOV         R1, R2 
    /*000308d0*/ MOVLE       R3, #0 
    /*000308d4*/ MOVGT       R3, #1 
    /*000308d8*/ CMP         R2, #95                     @ 0x5f 
    /*000308dc*/ ADDGT       R3, R3, #1 
    /*000308e0*/ CMP         R2, #191                    @ 0xbf 
    /*000308e4*/ ADDGT       R3, R3, #1 
    /*000308e8*/ CMP         R2, #384                    @ 0x180 
    /*000308ec*/ ADDGE       R3, R3, #1 
    /*000308f0*/ CMP         R2, #768                    @ 0x300 
    /*000308f4*/ ADDGE       R3, R3, #1 
    /*000308f8*/ CMP         R2, #1536                   @ 0x600 
    /*000308fc*/ ADDGE       R3, R3, #1 
    /*00030900*/ AND         R3, R3, #15 
    V16cv500MapNRx_x30904:
    /*00030904*/ LDRB        R0, [R4, #261]              @ 0x105 
    /*00030908*/ ADD         R2, R4, #260                @ 0x104 
    /*0003090c*/ BFI         R0, R3, #4, #4 
    /*00030910*/ MOV         R3, R2 
    /*00030914*/ STRB        R0, [R4, #261]              @ 0x105 
    /*00030918*/ LDRH        R2, [R2] 
    /*0003091c*/ BFI         R2, R1, #0, #12 
    /*00030920*/ STRH        R2, [R3] 
    /*00030924*/ LDRB        R1, [R5, #524]              @ 0x20c 
    /*00030928*/ LDRB        R2, [R4, #345]              @ 0x159 
    /*0003092c*/ LDRB        R3, [R4, #397]              @ 0x18d 
    /*00030930*/ BFI         R2, R1, #0, #3 
    /*00030934*/ STRB        R2, [R4, #345]              @ 0x159 
    /*00030938*/ BFC         R3, #0, #3 
    /*0003093c*/ STRB        R3, [R4, #397]              @ 0x18d 
    /*00030940*/ LDRB        R3, [R5, #524]              @ 0x20c 
    /*00030944*/ AND         R3, R3, #7 
    /*00030948*/ CMP         R3, #3 
    /*0003094c*/ BEQ         V16cv500MapNRx_x31084
    V16cv500MapNRx_x30950:
    /*00030950*/ CMP         R3, #4 
    /*00030954*/ BEQ         V16cv500MapNRx_x31054
    V16cv500MapNRx_x30958:
    /*00030958*/ LDRB        R2, [R4, #218]              @ 0xda 
    /*0003095c*/ LDRB        R3, [R4, #229]              @ 0xe5 
    /*00030960*/ UBFX        R2, R2, #6, #1 
    /*00030964*/ BFC         R3, #5, #1 
    /*00030968*/ STRB        R3, [R4, #229]              @ 0xe5 
    V16cv500MapNRx_x3096c:
    /*0003096c*/ LDRB        R3, [R4, #1] 
    /*00030970*/ TST         R3, #3 
    /*00030974*/ BEQ         V16cv500MapNRx_x309d8
    /*00030978*/ LDRB        IP, [R5, #500]              @ 0x1f4 
    /*0003097c*/ AND         R1, R3, #3 
    /*00030980*/ LDRB        R3, [R4, #229]              @ 0xe5 
    /*00030984*/ LDRB        R0, [R4, #345]              @ 0x159 
    /*00030988*/ BFI         R3, IP, #2, #3 
    /*0003098c*/ STRB        R3, [R4, #229]              @ 0xe5 
    /*00030990*/ LDRB        R3, [R5, #500]              @ 0x1f4 
    /*00030994*/ LDRB        LR, [R4, #229]              @ 0xe5 
    /*00030998*/ ANDS        R3, R3, #7 
    /*0003099c*/ LDRB        IP, [R4, #397]              @ 0x18d 
    /*000309a0*/ MOVNE       R3, #1 
    /*000309a4*/ BFI         LR, R3, #5, #1 
    /*000309a8*/ STRB        LR, [R4, #229]              @ 0xe5 
    /*000309ac*/ BFC         IP, #0, #3 
    /*000309b0*/ LDRB        R3, [R5, #524]              @ 0x20c 
    /*000309b4*/ CMP         R1, #1 
    /*000309b8*/ STRB        IP, [R4, #397]              @ 0x18d 
    /*000309bc*/ BFI         R0, R3, #0, #3 
    /*000309c0*/ STRB        R0, [R4, #345]              @ 0x159 
    /*000309c4*/ LDRB        R3, [R5, #524]              @ 0x20c 
    /*000309c8*/ AND         R3, R3, #7 
    /*000309cc*/ BEQ         V16cv500MapNRx_x30dac
    /*000309d0*/ CMP         R3, #3 
    /*000309d4*/ BEQ         V16cv500MapNRx_x30db4
    V16cv500MapNRx_x309d8:
    /*000309d8*/ LDRB        R3, [R4] 
    /*000309dc*/ LDRB        IP, [R4, #296]              @ 0x128 
    /*000309e0*/ ORR         R3, R3, #8 
    /*000309e4*/ STRB        R3, [R4] 
    /*000309e8*/ LDRB        R3, [R5, #524]              @ 0x20c 
    /*000309ec*/ LDRB        R1, [R4, #684]              @ 0x2ac 
    /*000309f0*/ UBFX        R3, R3, #3, #2 
    /*000309f4*/ LDRB        R0, [R4, #262]              @ 0x106 
    /*000309f8*/ BFI         IP, R3, #0, #2 
    /*000309fc*/ STRB        IP, [R4, #296]              @ 0x128 
    /*00030a00*/ LDRB        R3, [R5, #548]              @ 0x224 
    /*00030a04*/ BFI         R0, R2, #0, #2 
    /*00030a08*/ STRB        R0, [R4, #262]              @ 0x106 
    /*00030a0c*/ UBFX        R3, R3, #3, #2 
    /*00030a10*/ BFI         R1, R3, #0, #2 
    /*00030a14*/ STRB        R1, [R4, #684]              @ 0x2ac 
    V16cv500MapNRx_x30a18:
    /*00030a18*/ LDRB        R3, [R4, #1] 
    /*00030a1c*/ BFC         R3, #2, #1 
    /*00030a20*/ STRB        R3, [R4, #1] 
    /*00030a24*/ LDRB        R3, [R5, #550]              @ 0x226 
    /*00030a28*/ CMP         R3, #0 
    /*00030a2c*/ BEQ         V16cv500MapNRx_x30b08
    /*00030a30*/ CMP         R3, #31 
    /*00030a34*/ BLE         V16cv500MapNRx_x30d54
    /*00030a38*/ CMP         R3, #86                     @ 0x56 
    /*00030a3c*/ BGT         V16cv500MapNRx_x30d3c
    /*00030a40*/ LSL         IP, R3, #2 
    /*00030a44*/ MOV         R2, #1 
    /*00030a48*/ SUB         IP, IP, #93                 @ 0x5d 
    V16cv500MapNRx_x30a4c:
    /*00030a4c*/ CMP         IP, #31 
    /*00030a50*/ SUBGT       R2, R2, #1 
    /*00030a54*/ UBFX        IP, IP, #0, #10 
    /*00030a58*/ AND         R2, R2, #63                 @ 0x3f 
    V16cv500MapNRx_x30a5c:
    /*00030a5c*/ CMP         R3, #129                    @ 0x81 
    /*00030a60*/ LDR         R7, [R4, #1008]             @ 0x3f0 
    /*00030a64*/ LDRB        R1, [R4, #1014]             @ 0x3f6 
    /*00030a68*/ BFI         R7, R3, #9, #10 
    /*00030a6c*/ MOVLE       R0, #0 
    /*00030a70*/ MOVGT       R0, #1 
    /*00030a74*/ CMP         R3, #139                    @ 0x8b 
    /*00030a78*/ LDRB        R6, [R4, #1012]             @ 0x3f4 
    /*00030a7c*/ BFI         R1, R0, #5, #1 
    /*00030a80*/ LDRB        R0, [R4, #1] 
    /*00030a84*/ MOVLE       R3, #0 
    /*00030a88*/ MOVGT       R3, #1 
    /*00030a8c*/ LSR         LR, R7, #16 
    /*00030a90*/ BFI         R1, R3, #4, #1 
    /*00030a94*/ MOV         R3, R4 
    /*00030a98*/ STRB        R1, [R4, #1014]             @ 0x3f6 
    /*00030a9c*/ BFI         R6, R2, #0, #6 
    /*00030aa0*/ BFI         LR, IP, #3, #10 
    /*00030aa4*/ STRB        R6, [R4, #1012]             @ 0x3f4 
    /*00030aa8*/ ORR         R2, R0, #4 
    /*00030aac*/ STRB        R2, [R4, #1] 
    /*00030ab0*/ STR         R7, [R3, #1008]!            @ 0x3f0 
    /*00030ab4*/ STRH        LR, [R3, #2] 
    /*00030ab8*/ LDRB        R3, [R5, #550]              @ 0x226 
    /*00030abc*/ CMP         R3, #0 
    /*00030ac0*/ BEQ         V16cv500MapNRx_x30b08
    /*00030ac4*/ LDRB        R3, [R5, #552]              @ 0x228 
    /*00030ac8*/ AND         R3, R3, #63                 @ 0x3f 
    /*00030acc*/ CMP         R3, #16 
    /*00030ad0*/ MOVLE       R0, #0 
    /*00030ad4*/ BLE         V16cv500MapNRx_x30aec
    /*00030ad8*/ CMP         R3, #48                     @ 0x30 
    /*00030adc*/ BGT         V16cv500MapNRx_x30d68
    /*00030ae0*/ SUB         R0, R3, #16 
    /*00030ae4*/ MOV         R3, #16 
    /*00030ae8*/ AND         R0, R0, #63                 @ 0x3f 
    V16cv500MapNRx_x30aec:
    /*00030aec*/ ADD         R2, R4, #1012               @ 0x3f4 
    /*00030af0*/ LDRH        R1, [R2] 
    /*00030af4*/ BFI         R1, R0, #6, #6 
    /*00030af8*/ STRH        R1, [R2] 
    /*00030afc*/ LDR         R2, [R4, #1012]             @ 0x3f4 
    /*00030b00*/ BFI         R2, R3, #12, #6 
    /*00030b04*/ STR         R2, [R4, #1012]             @ 0x3f4 
    V16cv500MapNRx_x30b08:
    /*00030b08*/ LDRB        R0, [R5, #551]              @ 0x227 
    /*00030b0c*/ MOV         R1, #14 
    /*00030b10*/ LDRB        R3, [R4, #1008]             @ 0x3f0 
    /*00030b14*/ LDRB        R2, [R4] 
    /*00030b18*/ BFI         R3, R0, #4, #4 
    /*00030b1c*/ BFI         R3, R1, #0, #4 
    /*00030b20*/ STRB        R3, [R4, #1008]             @ 0x3f0 
    /*00030b24*/ LDRB        R3, [R5, #37]               @ 0x25 
    /*00030b28*/ LSR         R3, R3, #7 
    /*00030b2c*/ BFI         R2, R3, #0, #1 
    /*00030b30*/ STRB        R2, [R4] 
    /*00030b34*/ LDRB        R3, [R5, #189]              @ 0xbd 
    /*00030b38*/ UXTB        R2, R2 
    /*00030b3c*/ LSR         R3, R3, #7 
    /*00030b40*/ BFI         R2, R3, #1, #1 
    /*00030b44*/ STRB        R2, [R4] 
    /*00030b48*/ LDRB        R3, [R5, #341]              @ 0x155 
    /*00030b4c*/ UXTB        R2, R2 
    /*00030b50*/ LSR         R3, R3, #7 
    /*00030b54*/ BFI         R2, R3, #2, #1 
    /*00030b58*/ STRB        R2, [R4] 
    /*00030b5c*/ LDRB        R3, [R5, #712]              @ 0x2c8 
    /*00030b60*/ LDR         R2, [FP] 
    /*00030b64*/ AND         R3, R3, #1 
    /*00030b68*/ BFI         R2, R3, #6, #1 
    /*00030b6c*/ STR         R2, [FP] 
    /*00030b70*/ LDR         R2, [FP] 
    /*00030b74*/ BFI         R2, R3, #11, #1 
    /*00030b78*/ STR         R2, [FP] 
    /*00030b7c*/ LDR         R2, [FP] 
    /*00030b80*/ BFI         R2, R3, #0, #1 
    /*00030b84*/ STR         R2, [FP] 
    /*00030b88*/ LDR         R3, [FP] 
    /*00030b8c*/ ORR         R3, R3, #128                @ 0x80 
    /*00030b90*/ STR         R3, [FP] 
    /*00030b94*/ LDR         R3, [FP] 
    /*00030b98*/ ORR         R3, R3, #1024               @ 0x400 
    /*00030b9c*/ STR         R3, [FP] 
    V16cv500MapNRx_x30ba0:
    /*00030ba0*/ ADD         SP, SP, #108                @ 0x6c 
    /*00030ba4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    V16cv500MapNRx_x30ba8:
    /*00030ba8*/ LDRB        R1, [R5, #498]              @ 0x1f2 
    /*00030bac*/ MOV         R2, #2 
    /*00030bb0*/ LDRB        R3, [R5, #524]              @ 0x20c 
    /*00030bb4*/ TST         R1, #1 
    /*00030bb8*/ BFI         R3, R2, #0, #3 
    /*00030bbc*/ STRB        R3, [R5, #524]              @ 0x20c 
    /*00030bc0*/ LDRBNE      R3, [R5, #485]              @ 0x1e5 
    /*00030bc4*/ MOVNE       R2, #4 
    /*00030bc8*/ BFINE       R3, R2, #0, #4 
    /*00030bcc*/ STRBNE      R3, [R5, #485]              @ 0x1e5 
    /*00030bd0*/ LDRB        R3, [R5, #475]              @ 0x1db 
    /*00030bd4*/ LSRS        R3, R3, #7 
    /*00030bd8*/ BNE         V16cv500MapNRx_x30c08
    /*00030bdc*/ LDRB        R2, [R5, #485]              @ 0x1e5 
    /*00030be0*/ LDRB        R1, [R5, #498]              @ 0x1f2 
    /*00030be4*/ AND         R3, R2, #15 
    /*00030be8*/ CMP         R3, #9 
    /*00030bec*/ BFC         R1, #0, #1 
    /*00030bf0*/ STRB        R1, [R5, #498]              @ 0x1f2 
    /*00030bf4*/ MOVGE       R3, #9 
    /*00030bf8*/ CMP         R3, #5 
    /*00030bfc*/ MOVLT       R3, #5 
    /*00030c00*/ BFI         R2, R3, #0, #4 
    /*00030c04*/ STRB        R2, [R5, #485]              @ 0x1e5 
    V16cv500MapNRx_x30c08:
    /*00030c08*/ LDRB        R3, [R5, #487]              @ 0x1e7 
    /*00030c0c*/ LSRS        R3, R3, #7 
    /*00030c10*/ BNE         V16cv500MapNRx_x2dc74
    /*00030c14*/ LDRB        R2, [R5, #497]              @ 0x1f1 
    /*00030c18*/ AND         R3, R2, #15 
    /*00030c1c*/ CMP         R3, #9 
    /*00030c20*/ MOVGE       R3, #9 
    /*00030c24*/ CMP         R3, #5 
    /*00030c28*/ MOVLT       R3, #5 
    /*00030c2c*/ BFI         R2, R3, #0, #4 
    /*00030c30*/ STRB        R2, [R5, #497]              @ 0x1f1 
    /*00030c34*/ B           V16cv500MapNRx_x2dc74
    V16cv500MapNRx_x30c38:
    /*00030c38*/ LDRB        R0, [R5, #18] 
    /*00030c3c*/ MOV         R2, #1 
    /*00030c40*/ LDRH        R3, [R4, #124]              @ 0x7c 
    /*00030c44*/ BFI         R3, R0, #6, #3 
    /*00030c48*/ STRH        R3, [R4, #124]              @ 0x7c 
    /*00030c4c*/ LDRB        R3, [R5, #18] 
    /*00030c50*/ LDRB        IP, [R5, #19] 
    /*00030c54*/ LDRB        R0, [R4, #124]              @ 0x7c 
    /*00030c58*/ AND         R3, R3, #7 
    /*00030c5c*/ LSL         R3, R2, R3 
    /*00030c60*/ BFI         R0, IP, #3, #3 
    /*00030c64*/ STRB        R0, [R4, #124]              @ 0x7c 
    /*00030c68*/ LDRB        IP, [R5, #19] 
    /*00030c6c*/ SXTB        R3, R3 
    /*00030c70*/ UXTB        R0, R0 
    /*00030c74*/ AND         LR, IP, #7 
    /*00030c78*/ ORR         R3, R3, R2, LSL LR 
    /*00030c7c*/ LSR         IP, IP, #3 
    /*00030c80*/ ORR         R1, R3, R1 
    /*00030c84*/ CMP         IP, #16 
    /*00030c88*/ UXTB        R1, R1 
    /*00030c8c*/ STRB        R1, [SP, #76]               @ 0x4c 
    /*00030c90*/ LDRB        R3, [R4, #125]              @ 0x7d 
    /*00030c94*/ MOVGE       IP, #16 
    /*00030c98*/ BFI         R3, IP, #1, #5 
    /*00030c9c*/ STRB        R3, [R4, #125]              @ 0x7d 
    /*00030ca0*/ LDRB        R3, [R5, #21] 
    /*00030ca4*/ UBFX        R3, R3, #2, #3 
    /*00030ca8*/ BFI         R0, R3, #0, #3 
    /*00030cac*/ STRB        R0, [R4, #124]              @ 0x7c 
    /*00030cb0*/ LDRB        R0, [R5, #23] 
    /*00030cb4*/ LDR         R3, [R4, #124]              @ 0x7c 
    /*00030cb8*/ BFI         R3, R0, #14, #5 
    /*00030cbc*/ STR         R3, [R4, #124]              @ 0x7c 
    /*00030cc0*/ LDRB        IP, [R5, #24] 
    /*00030cc4*/ LSR         R3, R3, #16 
    /*00030cc8*/ LDRB        R0, [R4, #127]              @ 0x7f 
    /*00030ccc*/ BFI         R3, IP, #3, #5 
    /*00030cd0*/ STRB        R3, [R4, #126]              @ 0x7e 
    /*00030cd4*/ LDRB        R3, [R5, #25] 
    /*00030cd8*/ BFI         R0, R3, #0, #5 
    /*00030cdc*/ STRB        R0, [R4, #127]              @ 0x7f 
    /*00030ce0*/ LDRB        R3, [R5, #25] 
    /*00030ce4*/ CMP         R3, #0 
    /*00030ce8*/ LDRB        R3, [R4, #10] 
    /*00030cec*/ LDRBEQ      R2, [R5, #41]               @ 0x29 
    /*00030cf0*/ UBFXEQ      R2, R2, #4, #1 
    /*00030cf4*/ BFI         R3, R2, #6, #1 
    /*00030cf8*/ STRB        R3, [R4, #10] 
    /*00030cfc*/ B           V16cv500MapNRx_x2dd0c
    V16cv500MapNRx_x30d00:
    /*00030d00*/ LDRB        R1, [R5, #548]              @ 0x224 
    /*00030d04*/ BFI         R3, R2, #3, #2 
    /*00030d08*/ STRB        R3, [R5, #524]              @ 0x20c 
    /*00030d0c*/ BFI         R1, R2, #3, #2 
    /*00030d10*/ STRB        R1, [R5, #548]              @ 0x224 
    /*00030d14*/ B           V16cv500MapNRx_x30a18
    V16cv500MapNRx_x30d18:
    /*00030d18*/ ADD         SL, R5, #560                @ 0x230 
    /*00030d1c*/ ADD         R7, SP, #76                 @ 0x4c 
    /*00030d20*/ MOV         R2, R8 
    /*00030d24*/ STR         R7, [SP] 
    /*00030d28*/ MOV         R3, SL 
    /*00030d2c*/ MOV         R1, FP 
    /*00030d30*/ MOV         R0, R4 
    /*00030d34*/ BL          0x000000000002A8C4 
    /*00030d38*/ B           V16cv500MapNRx_x2dd00
    V16cv500MapNRx_x30d3c:
    /*00030d3c*/ SUB         R2, R3, #90                 @ 0x5a 
    /*00030d40*/ MOV         IP, #255                    @ 0xff 
    /*00030d44*/ CMP         R2, #32 
    /*00030d48*/ MOVGE       R2, #32 
    /*00030d4c*/ AND         R2, R2, #63                 @ 0x3f 
    /*00030d50*/ B           V16cv500MapNRx_x30a5c
    V16cv500MapNRx_x30d54:
    /*00030d54*/ CMP         R3, #16 
    /*00030d58*/ MOV         IP, R3 
    /*00030d5c*/ MOVLT       R2, #2 
    /*00030d60*/ MOVGE       R2, #1 
    /*00030d64*/ B           V16cv500MapNRx_x30a4c
    V16cv500MapNRx_x30d68:
    /*00030d68*/ CMP         R3, #63                     @ 0x3f 
    /*00030d6c*/ SUBNE       R3, R3, #32 
    /*00030d70*/ MOVEQ       R3, #32 
    /*00030d74*/ MOVNE       R0, #32 
    /*00030d78*/ ANDNE       R3, R3, #63                 @ 0x3f 
    /*00030d7c*/ MOVEQ       R0, R3 
    /*00030d80*/ B           V16cv500MapNRx_x30aec
    V16cv500MapNRx_x30d84:
    /*00030d84*/ LDR         R2, [SP, #16] 
    /*00030d88*/ LDRB        R3, [R4, #1] 
    /*00030d8c*/ MOV         R1, R2 
    /*00030d90*/ BFI         R3, R2, #0, #2 
    /*00030d94*/ STRB        R2, [R4, #4] 
    /*00030d98*/ STRB        R2, [R4, #5] 
    /*00030d9c*/ STRB        R2, [R4, #6] 
    /*00030da0*/ STRB        R2, [R4, #7] 
    /*00030da4*/ STRB        R3, [R4, #1] 
    /*00030da8*/ B           V16cv500MapNRx_x2e550
    V16cv500MapNRx_x30dac:
    /*00030dac*/ CMP         R3, #2 
    /*00030db0*/ BNE         V16cv500MapNRx_x309d8
    V16cv500MapNRx_x30db4:
    /*00030db4*/ MOVW        R3, #498                    @ 0x1f2 
    /*00030db8*/ LDRH        R0, [R4, #212]              @ 0xd4 
    /*00030dbc*/ LDRH        R3, [R5, R3] 
    /*00030dc0*/ LDRH        R1, [R4, #214]              @ 0xd6 
    /*00030dc4*/ UBFX        R3, R3, #1, #9 
    /*00030dc8*/ BFI         R0, R3, #0, #11 
    /*00030dcc*/ STRH        R0, [R4, #212]              @ 0xd4 
    /*00030dd0*/ LDRB        R3, [R5, #500]              @ 0x1f4 
    /*00030dd4*/ LSR         R3, R3, #3 
    /*00030dd8*/ BFI         R1, R3, #6, #5 
    /*00030ddc*/ STRH        R1, [R4, #214]              @ 0xd6 
    /*00030de0*/ B           V16cv500MapNRx_x309d8
    V16cv500MapNRx_x30de4:
    /*00030de4*/ CMP         LR, #800                    @ 0x320 
    /*00030de8*/ BLT         V16cv500MapNRx_x31260
    /*00030dec*/ ADD         LR, LR, LR, ASR #5 
    /*00030df0*/ CMP         LR, #1024                   @ 0x400 
    /*00030df4*/ MOVWGE      LR, #1023                   @ 0x3ff 
    /*00030df8*/ LDRLT       R6, [SP, #12] 
    /*00030dfc*/ MOVWLT      R0, #1023                   @ 0x3ff 
    /*00030e00*/ LDRGE       R6, [SP, #12] 
    /*00030e04*/ MOVGE       R0, LR 
    /*00030e08*/ B           V16cv500MapNRx_x2f47c
    V16cv500MapNRx_x30e0c:
    /*00030e0c*/ CMP         R0, #800                    @ 0x320 
    /*00030e10*/ BLT         V16cv500MapNRx_x31238
    /*00030e14*/ ADD         R0, R0, R0, ASR #5 
    /*00030e18*/ CMP         R0, #1024                   @ 0x400 
    /*00030e1c*/ MOVWLT      IP, #1023                   @ 0x3ff 
    /*00030e20*/ MOVWGE      R0, #1023                   @ 0x3ff 
    /*00030e24*/ MOVGE       IP, R0 
    /*00030e28*/ B           V16cv500MapNRx_x30214
    V16cv500MapNRx_x30e2c:
    /*00030e2c*/ MOVW        R0, #999                    @ 0x3e7 
    /*00030e30*/ BFI         R2, R0, #0, #10 
    /*00030e34*/ LDR         R0, [SP, #56]               @ 0x38 
    /*00030e38*/ MOVW        R1, #4095                   @ 0xfff 
    /*00030e3c*/ MOV         R3, #6 
    /*00030e40*/ STRH        R2, [R0] 
    /*00030e44*/ B           V16cv500MapNRx_x30904
    V16cv500MapNRx_x30e48:
    /*00030e48*/ LDR         R3, [R0, #1712]             @ 0x6b0 
    /*00030e4c*/ CMP         R3, #0 
    /*00030e50*/ BEQ         V16cv500MapNRx_x30e60
    /*00030e54*/ LDR         R3, [R9, #152]              @ 0x98 
    /*00030e58*/ CMP         R3, #0 
    /*00030e5c*/ BNE         V16cv500MapNRx_x2e550
    V16cv500MapNRx_x30e60:
    /*00030e60*/ LDR         R3, [SP, #16] 
    /*00030e64*/ SUB         R2, R3, #8 
    /*00030e68*/ ADD         R0, R3, #40                 @ 0x28 
    /*00030e6c*/ ADD         R3, SP, #80                 @ 0x50 
    V16cv500MapNRx_x30e70:
    /*00030e70*/ LDR         R1, [R2, #8]! 
    /*00030e74*/ CMP         R0, R2 
    /*00030e78*/ STR         R1, [R3], #4 
    /*00030e7c*/ BNE         V16cv500MapNRx_x30e70
    /*00030e80*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00030e84*/ ADD         R1, IP, #1 
    /*00030e88*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00030e8c*/ CMP         R3, #0 
    /*00030e90*/ ASR         R1, R1, #1 
    /*00030e94*/ RSBLT       R3, R3, #0 
    /*00030e98*/ ASRGE       R3, R3, #5 
    /*00030e9c*/ ASR         R2, R2, #5 
    /*00030ea0*/ STR         R2, [SP, #16] 
    /*00030ea4*/ ASRLT       R3, R3, #5 
    /*00030ea8*/ LDR         R2, [SP, #96]               @ 0x60 
    /*00030eac*/ RSBLT       R3, R3, #0 
    /*00030eb0*/ STR         R3, [SP, #36]               @ 0x24 
    /*00030eb4*/ LDR         R3, [SP, #88]               @ 0x58 
    /*00030eb8*/ ASR         R2, R2, #5 
    /*00030ebc*/ STR         R2, [SP, #32] 
    /*00030ec0*/ CMP         R3, #0 
    /*00030ec4*/ LDRH        R2, [R6, #204]              @ 0xcc 
    /*00030ec8*/ RSBLT       R3, R3, #0 
    /*00030ecc*/ ASRGE       R3, R3, #10 
    /*00030ed0*/ ASRLT       R3, R3, #10 
    /*00030ed4*/ RSBLT       R3, R3, #0 
    /*00030ed8*/ STR         R3, [SP, #40]               @ 0x28 
    /*00030edc*/ LDR         R3, [SP, #92]               @ 0x5c 
    /*00030ee0*/ CMP         R3, #0 
    /*00030ee4*/ RSBLT       R3, R3, #0 
    /*00030ee8*/ ASRGE       R3, R3, #5 
    /*00030eec*/ ASRLT       R3, R3, #5 
    /*00030ef0*/ RSBLT       R3, R3, #0 
    /*00030ef4*/ STR         R3, [SP, #24] 
    /*00030ef8*/ LDR         R3, [SP, #100]              @ 0x64 
    /*00030efc*/ CMP         R3, #0 
    /*00030f00*/ RSBLT       R3, R3, #0 
    /*00030f04*/ ASRGE       R3, R3, #10 
    /*00030f08*/ ASRLT       R3, R3, #10 
    /*00030f0c*/ RSBLT       R3, R3, #0 
    /*00030f10*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00030f14*/ LDRH        R3, [R6, #210]              @ 0xd2 
    /*00030f18*/ CMP         SL, #0 
    /*00030f1c*/ STR         R1, [SP, #28] 
    /*00030f20*/ LDRH        R1, [SP, #36]               @ 0x24 
    /*00030f24*/ STRH        R1, [R6, #202]              @ 0xca 
    /*00030f28*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00030f2c*/ BFI         R2, R1, #0, #14 
    /*00030f30*/ LDRH        R1, [SP, #32] 
    /*00030f34*/ STRH        R2, [R6, #204]              @ 0xcc 
    /*00030f38*/ STRH        R1, [R6, #208]              @ 0xd0 
    /*00030f3c*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*00030f40*/ BFI         R3, R1, #0, #13 
    /*00030f44*/ STRH        R3, [R6, #210]              @ 0xd2 
    /*00030f48*/ BEQ         V16cv500MapNRx_x3120c
    /*00030f4c*/ LDR         R3, [R8, #1608]             @ 0x648 
    /*00030f50*/ CMP         R3, #0 
    /*00030f54*/ BEQ         V16cv500MapNRx_x310cc
    /*00030f58*/ LDR         R0, [SP, #28] 
    /*00030f5c*/ MOV         R9, #0 
    /*00030f60*/ LDRH        R2, [SP, #24] 
    /*00030f64*/ LDRH        R1, [SP, #16] 
    /*00030f68*/ CMP         R0, #0 
    /*00030f6c*/ LDR         R3, [R6, #204]              @ 0xcc 
    /*00030f70*/ STR         R2, [SP, #52]               @ 0x34 
    /*00030f74*/ BFI         R3, R2, #14, #16 
    /*00030f78*/ STR         R1, [SP, #48]               @ 0x30 
    /*00030f7c*/ MOV         R2, R1 
    /*00030f80*/ STR         R3, [R6, #204]              @ 0xcc 
    /*00030f84*/ MOVNE       R2, R0 
    /*00030f88*/ STR         R5, [SP, #68]               @ 0x44 
    /*00030f8c*/ ASRNE       R3, R2, #31 
    /*00030f90*/ LDR         R5, [SP, #28] 
    /*00030f94*/ MOVEQ       R2, #1 
    /*00030f98*/ MOVEQ       R3, #0 
    /*00030f9c*/ STR         FP, [SP, #60]               @ 0x3c 
    /*00030fa0*/ MOV         FP, R3 
    /*00030fa4*/ STR         SL, [SP, #64]               @ 0x40 
    /*00030fa8*/ MOV         SL, R2 
    /*00030fac*/ STRH        R1, [R6, #200]              @ 0xc8 
    /*00030fb0*/ STR         R4, [SP, #56]               @ 0x38 
    V16cv500MapNRx_x30fb4:
    /*00030fb4*/ ADD         R0, R7, R9, LSL #3 
    /*00030fb8*/ LDR         IP, [R6, #204]              @ 0xcc 
    /*00030fbc*/ ADD         R9, R9, #1 
    /*00030fc0*/ MOVW        LR, #30300                  @ 0x765c 
    /*00030fc4*/ MOV         R2, SL 
    /*00030fc8*/ MOV         R3, FP 
    /*00030fcc*/ ADD         R4, LR, R9, LSL #2 
    /*00030fd0*/ MOVW        LR, #30312                  @ 0x7668 
    /*00030fd4*/ STR         IP, [R0, LR] 
    /*00030fd8*/ MOVW        LR, #30316                  @ 0x766c 
    /*00030fdc*/ LDR         IP, [R6, #208]              @ 0xd0 
    /*00030fe0*/ MOV         R1, #0 
    /*00030fe4*/ STR         IP, [R0, LR] 
    /*00030fe8*/ LDR         R0, [R8, #1608]             @ 0x648 
    /*00030fec*/ CMP         R0, R9 
    /*00030ff0*/ BLS         V16cv500MapNRx_x310bc
    /*00030ff4*/ LDRH        IP, [SP, #48]               @ 0x30 
    /*00030ff8*/ LDR         R0, [R6, #204]              @ 0xcc 
    /*00030ffc*/ STRH        IP, [R6, #200]              @ 0xc8 
    /*00031000*/ LDR         IP, [SP, #52]               @ 0x34 
    /*00031004*/ BFI         R0, IP, #14, #16 
    /*00031008*/ STR         R0, [R6, #204]              @ 0xcc 
    /*0003100c*/ LDR         R0, [R7, R4] 
    /*00031010*/ LDR         IP, [SP, #16] 
    /*00031014*/ ADD         R0, R5, R0 
    /*00031018*/ MUL         R0, IP, R0 
    /*0003101c*/ BL          0x000000000003101C          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*00031020*/ LDR         IP, [SP, #24] 
    /*00031024*/ MOV         R3, FP 
    /*00031028*/ MOV         R2, SL 
    /*0003102c*/ MOV         R1, #0 
    /*00031030*/ STRH        R0, [R6, #200]              @ 0xc8 
    /*00031034*/ LDR         R0, [R7, R4] 
    /*00031038*/ ADD         R0, R5, R0 
    /*0003103c*/ MUL         R0, IP, R0 
    /*00031040*/ BL          0x0000000000031040          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*00031044*/ LDR         R3, [R6, #204]              @ 0xcc 
    /*00031048*/ BFI         R3, R0, #14, #16 
    /*0003104c*/ STR         R3, [R6, #204]              @ 0xcc 
    /*00031050*/ B           V16cv500MapNRx_x30fb4
    V16cv500MapNRx_x31054:
    /*00031054*/ MOVW        R3, #498                    @ 0x1f2 
    /*00031058*/ LDR         R1, [R4, #220]              @ 0xdc 
    /*0003105c*/ LDRH        R3, [R5, R3] 
    /*00031060*/ LDRB        R2, [R4, #226]              @ 0xe2 
    /*00031064*/ UBFX        R3, R3, #1, #9 
    /*00031068*/ BFI         R1, R3, #11, #11 
    /*0003106c*/ STR         R1, [R4, #220]              @ 0xdc 
    /*00031070*/ LDRB        R3, [R5, #500]              @ 0x1f4 
    /*00031074*/ LSR         R3, R3, #3 
    /*00031078*/ BFI         R2, R3, #0, #5 
    /*0003107c*/ STRB        R2, [R4, #226]              @ 0xe2 
    /*00031080*/ B           V16cv500MapNRx_x30958
    V16cv500MapNRx_x31084:
    /*00031084*/ MOVW        R3, #498                    @ 0x1f2 
    /*00031088*/ LDRH        R1, [R4, #220]              @ 0xdc 
    /*0003108c*/ LDRH        R3, [R5, R3] 
    /*00031090*/ LDRB        R2, [R4, #225]              @ 0xe1 
    /*00031094*/ UBFX        R3, R3, #1, #9 
    /*00031098*/ BFI         R1, R3, #0, #11 
    /*0003109c*/ STRH        R1, [R4, #220]              @ 0xdc 
    /*000310a0*/ LDRB        R3, [R5, #500]              @ 0x1f4 
    /*000310a4*/ LSR         R3, R3, #3 
    /*000310a8*/ BFI         R2, R3, #3, #5 
    /*000310ac*/ STRB        R2, [R4, #225]              @ 0xe1 
    /*000310b0*/ LDRB        R3, [R5, #524]              @ 0x20c 
    /*000310b4*/ AND         R3, R3, #7 
    /*000310b8*/ B           V16cv500MapNRx_x30950
    V16cv500MapNRx_x310bc:
    /*000310bc*/ LDR         R4, [SP, #56]               @ 0x38 
    /*000310c0*/ LDR         FP, [SP, #60]               @ 0x3c 
    /*000310c4*/ LDR         SL, [SP, #64]               @ 0x40 
    /*000310c8*/ LDR         R5, [SP, #68]               @ 0x44 
    V16cv500MapNRx_x310cc:
    /*000310cc*/ LDRB        R3, [R6, #1] 
    /*000310d0*/ MOV         R2, #1 
    /*000310d4*/ BFI         R3, R2, #0, #2 
    /*000310d8*/ STRB        R3, [R6, #1] 
    V16cv500MapNRx_x310dc:
    /*000310dc*/ LDR         R1, [SP, #28] 
    /*000310e0*/ LDR         R2, [SP, #24] 
    /*000310e4*/ LDR         R3, [SP, #20] 
    /*000310e8*/ LDR         R0, [SP, #16] 
    /*000310ec*/ ADD         R3, R3, #1 
    /*000310f0*/ MUL         R2, R2, R1 
    /*000310f4*/ MUL         R1, R0, R1 
    /*000310f8*/ ASR         R0, R3, #1 
    /*000310fc*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00031100*/ ADD         R2, R2, R3, LSL #15 
    /*00031104*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00031108*/ ADD         R1, R1, R3, LSL #15 
    /*0003110c*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00031110*/ MLAS        R3, R0, R3, R1 
    /*00031114*/ MOV         R1, R3 
    /*00031118*/ LDR         R3, [SP, #32] 
    /*0003111c*/ RSBMI       R1, R1, #16384              @ 0x4000 
    /*00031120*/ ADDPL       R1, R1, #16384              @ 0x4000 
    /*00031124*/ ASRMI       R1, R1, #15 
    /*00031128*/ MLA         R2, R3, R0, R2 
    /*0003112c*/ LDR         R3, [SP, #28] 
    /*00031130*/ RSBMI       R1, R1, #0 
    /*00031134*/ ASRPL       R1, R1, #15 
    /*00031138*/ SUB         R8, R1, R3 
    /*0003113c*/ CMP         R2, #0 
    /*00031140*/ RSB         LR, R8, #0 
    /*00031144*/ RSBLT       R3, R2, #16384              @ 0x4000 
    /*00031148*/ ADDGE       R3, R2, #16384              @ 0x4000 
    /*0003114c*/ ASRLT       R3, R3, #15 
    /*00031150*/ ASRGE       R3, R3, #15 
    /*00031154*/ RSBLT       R3, R3, #0 
    /*00031158*/ CMP         SL, #0 
    /*0003115c*/ SUB         R3, R3, R0 
    /*00031160*/ MVNEQ       R2, #79                     @ 0x4f 
    /*00031164*/ MVNNE       R2, #31 
    /*00031168*/ MVNEQ       R1, #39                     @ 0x27 
    /*0003116c*/ MVNNE       R1, #15 
    /*00031170*/ MOVEQ       IP, #40                     @ 0x28 
    /*00031174*/ MOVNE       IP, #16 
    /*00031178*/ MOVEQ       R7, #80                     @ 0x50 
    /*0003117c*/ MOVNE       R7, #32 
    /*00031180*/ CMP         LR, R2 
    /*00031184*/ BLT         V16cv500MapNRx_x31194
    /*00031188*/ CMP         LR, R7 
    /*0003118c*/ MOVLT       R2, LR 
    /*00031190*/ MOVGE       R2, R7 
    V16cv500MapNRx_x31194:
    /*00031194*/ RSB         R0, R3, #0 
    /*00031198*/ STRB        R2, [R6, #4] 
    /*0003119c*/ CMP         R0, #64                     @ 0x40 
    /*000311a0*/ MVN         R7, #63                     @ 0x3f 
    /*000311a4*/ MOVLT       R2, R0 
    /*000311a8*/ MOVGE       R2, #64                     @ 0x40 
    /*000311ac*/ CMP         R2, R7 
    /*000311b0*/ MOVLT       R2, R7 
    /*000311b4*/ CMP         R8, #0 
    /*000311b8*/ STRB        R2, [R6, #5] 
    /*000311bc*/ ASRGE       R2, R8, #1 
    /*000311c0*/ ASRLT       R2, LR, #1 
    /*000311c4*/ RSBGE       R2, R2, #0 
    /*000311c8*/ CMP         R2, R1 
    /*000311cc*/ BLT         V16cv500MapNRx_x311dc
    /*000311d0*/ CMP         R2, IP 
    /*000311d4*/ MOVLT       R1, R2 
    /*000311d8*/ MOVGE       R1, IP 
    V16cv500MapNRx_x311dc:
    /*000311dc*/ CMP         R3, #0 
    /*000311e0*/ MVN         R2, #31 
    /*000311e4*/ ASRGE       R3, R3, #1 
    /*000311e8*/ ASRLT       R3, R0, #1 
    /*000311ec*/ RSBGE       R3, R3, #0 
    /*000311f0*/ STRB        R1, [R6, #6] 
    /*000311f4*/ CMP         R3, #32 
    /*000311f8*/ MOVGE       R3, #32 
    /*000311fc*/ CMP         R3, R2 
    /*00031200*/ MOVLT       R3, R2 
    /*00031204*/ STRB        R3, [R6, #7] 
    /*00031208*/ B           V16cv500MapNRx_x2e550
    V16cv500MapNRx_x3120c:
    /*0003120c*/ LDRH        R0, [SP, #16] 
    /*00031210*/ MOV         R1, #2 
    /*00031214*/ LDR         R2, [R6, #204]              @ 0xcc 
    /*00031218*/ LDRB        R3, [R6, #1] 
    /*0003121c*/ STRH        R0, [R6, #200]              @ 0xc8 
    /*00031220*/ LDR         R0, [SP, #24] 
    /*00031224*/ BFI         R3, R1, #0, #2 
    /*00031228*/ STRB        R3, [R6, #1] 
    /*0003122c*/ BFI         R2, R0, #14, #16 
    /*00031230*/ STR         R2, [R6, #204]              @ 0xcc 
    /*00031234*/ B           V16cv500MapNRx_x310dc
    V16cv500MapNRx_x31238:
    /*00031238*/ SXTH        IP, R3 
    /*0003123c*/ MOVW        R3, #1023                   @ 0x3ff 
    /*00031240*/ ADD         IP, IP, IP, LSL #1 
    /*00031244*/ ASR         IP, IP, #1 
    /*00031248*/ CMP         IP, R3 
    /*0003124c*/ MOVGE       IP, R3 
    /*00031250*/ ADDS        R3, R0, #0 
    /*00031254*/ MOVNE       R3, #1 
    /*00031258*/ STR         R3, [SP, #12] 
    /*0003125c*/ B           V16cv500MapNRx_x30214
    V16cv500MapNRx_x31260:
    /*00031260*/ SXTH        R0, R0 
    /*00031264*/ MOVW        R3, #1023                   @ 0x3ff 
    /*00031268*/ ADD         R0, R0, R0, LSL #1 
    /*0003126c*/ ASR         R0, R0, #1 
    /*00031270*/ CMP         R0, R3 
    /*00031274*/ MOVGE       R0, R3 
    /*00031278*/ ADDS        R6, LR, #0 
    /*0003127c*/ MOVNE       R6, #1 
    /*00031280*/ B           V16cv500MapNRx_x2f47c
FUNC_END V16cv500MapNRx


FUNC_BEGIN V16cv500CalcNRxV2AotoParam
    /*00031284*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00031288*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0003128c*/ MOV         R9, R0 
    /*00031290*/ MOV         FP, R1 
    /*00031294*/ LDR         R7, [SP, #80]               @ 0x50 
    /*00031298*/ MOV         SL, R3 
    /*0003129c*/ LDR         R4, [SP, #84]               @ 0x54 
    /*000312a0*/ MOV         R6, R2 
    /*000312a4*/ MOV         R5, #0 
    /*000312a8*/ MOV         R8, #6 
    /*000312ac*/ STR         R2, [SP, #8] 
    V16cv500CalcNRxV2AotoParam_x312b0:
    /*000312b0*/ LDR         R3, [SP, #8] 
    /*000312b4*/ CMP         R9, FP 
    /*000312b8*/ LDRB        R2, [R6] 
    /*000312bc*/ MLA         R3, R8, R5, R3 
    /*000312c0*/ BLS         V16cv500CalcNRxV2AotoParam_x31c68
    /*000312c4*/ LDR         IP, [SP, #80]               @ 0x50 
    /*000312c8*/ CMP         R9, SL 
    /*000312cc*/ MOV         R3, SL 
    /*000312d0*/ MOV         R1, FP 
    /*000312d4*/ MOV         R0, R9 
    /*000312d8*/ MLA         LR, R8, R5, IP 
    /*000312dc*/ LDRB        IP, [R7] 
    /*000312e0*/ BCS         V16cv500CalcNRxV2AotoParam_x31e3c
    /*000312e4*/ STR         IP, [SP] 
    /*000312e8*/ BL          0x000000000002D4B4 
    /*000312ec*/ MOV         R3, SL 
    /*000312f0*/ MOV         R1, FP 
    /*000312f4*/ STRB        R0, [R4] 
    /*000312f8*/ MOV         R0, R9 
    /*000312fc*/ LDRB        IP, [R7, #1] 
    /*00031300*/ LDRB        R2, [R6, #1] 
    /*00031304*/ STR         IP, [SP] 
    /*00031308*/ BL          0x000000000002D4B4 
    /*0003130c*/ MOV         R3, SL 
    /*00031310*/ MOV         R1, FP 
    /*00031314*/ STRB        R0, [R4, #1] 
    /*00031318*/ MOV         R0, R9 
    /*0003131c*/ LDRB        IP, [R7, #2] 
    /*00031320*/ LDRB        R2, [R6, #2] 
    /*00031324*/ STR         IP, [SP] 
    /*00031328*/ BL          0x000000000002D4B4 
    /*0003132c*/ MOV         R3, SL 
    /*00031330*/ MOV         R1, FP 
    /*00031334*/ STRB        R0, [R4, #2] 
    /*00031338*/ MOV         R0, R9 
    /*0003133c*/ LDRB        IP, [R7, #3] 
    /*00031340*/ LDRB        R2, [R6, #3] 
    /*00031344*/ STR         IP, [SP] 
    /*00031348*/ BL          0x000000000002D4B4 
    /*0003134c*/ MUL         R2, R8, R5 
    /*00031350*/ LDR         IP, [SP, #80]               @ 0x50 
    /*00031354*/ LDR         LR, [SP, #8] 
    /*00031358*/ MOV         R3, SL 
    /*0003135c*/ MOV         R1, FP 
    /*00031360*/ ADD         IP, IP, R2 
    /*00031364*/ ADD         R2, LR, R2 
    /*00031368*/ STRB        R0, [R4, #3] 
    /*0003136c*/ MOV         R0, R9 
    /*00031370*/ LDRH        IP, [IP, #4] 
    /*00031374*/ LDRH        R2, [R2, #4] 
    /*00031378*/ UBFX        IP, IP, #0, #10 
    /*0003137c*/ STR         IP, [SP] 
    /*00031380*/ UBFX        R2, R2, #0, #10 
    /*00031384*/ BL          0x000000000002D4B4 
    V16cv500CalcNRxV2AotoParam_x31388:
    /*00031388*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0003138c*/ ADD         R6, R6, #6 
    /*00031390*/ ADD         R4, R4, #6 
    /*00031394*/ ADD         R7, R7, #6 
    /*00031398*/ MLA         R3, R8, R5, R3 
    /*0003139c*/ ADD         R5, R5, #1 
    /*000313a0*/ CMP         R5, #3 
    /*000313a4*/ LDRH        R2, [R3, #4] 
    /*000313a8*/ BFI         R2, R0, #0, #10 
    /*000313ac*/ STRH        R2, [R3, #4] 
    /*000313b0*/ BNE         V16cv500CalcNRxV2AotoParam_x312b0
    /*000313b4*/ LDR         R3, [SP, #84]               @ 0x54 
    /*000313b8*/ ADD         R5, R3, #22 
    /*000313bc*/ LDR         R3, [SP, #8] 
    /*000313c0*/ ADD         R4, R3, #25 
    /*000313c4*/ LDR         R3, [SP, #80]               @ 0x50 
    /*000313c8*/ ADD         R3, R3, #22 
    /*000313cc*/ STR         R3, [SP, #16] 
    /*000313d0*/ MOV         R3, #0 
    /*000313d4*/ STR         R3, [SP, #12] 
    V16cv500CalcNRxV2AotoParam_x313d8:
    /*000313d8*/ LDR         R2, [SP, #12] 
    /*000313dc*/ MOV         R3, #152                    @ 0x98 
    /*000313e0*/ LDR         R0, [SP, #80]               @ 0x50 
    /*000313e4*/ CMP         R9, FP 
    /*000313e8*/ MUL         R2, R3, R2 
    /*000313ec*/ LDR         R3, [SP, #8] 
    /*000313f0*/ ADD         R1, R3, R2 
    /*000313f4*/ LDR         R3, [SP, #84]               @ 0x54 
    /*000313f8*/ ADD         R3, R3, R2 
    /*000313fc*/ LDRB        IP, [R1, #18] 
    /*00031400*/ ADD         R2, R0, R2 
    /*00031404*/ LDRB        R0, [R3, #18] 
    /*00031408*/ LDRB        LR, [R3, #19] 
    /*0003140c*/ BFI         R0, IP, #0, #3 
    /*00031410*/ STRB        R0, [R3, #18] 
    /*00031414*/ LDRB        R0, [R1, #19] 
    /*00031418*/ LDRB        IP, [R3, #21] 
    /*0003141c*/ BFI         LR, R0, #0, #3 
    /*00031420*/ STRB        LR, [R3, #19] 
    /*00031424*/ LDRB        R0, [R1, #19] 
    /*00031428*/ UXTB        LR, LR 
    /*0003142c*/ LSR         R0, R0, #3 
    /*00031430*/ BFI         LR, R0, #3, #5 
    /*00031434*/ STRB        LR, [R3, #19] 
    /*00031438*/ LDRB        R0, [R1, #21] 
    /*0003143c*/ UBFX        R0, R0, #2, #3 
    /*00031440*/ BFI         IP, R0, #2, #3 
    /*00031444*/ STRB        IP, [R3, #21] 
    /*00031448*/ LDRB        R0, [R1, #18] 
    /*0003144c*/ LDRB        R3, [R2, #18] 
    /*00031450*/ LSR         R0, R0, #3 
    /*00031454*/ LSR         R3, R3, #3 
    /*00031458*/ BLS         V16cv500CalcNRxV2AotoParam_x31480
    /*0003145c*/ CMP         R9, SL 
    /*00031460*/ MOVCS       R0, R3 
    /*00031464*/ BCS         V16cv500CalcNRxV2AotoParam_x31480
    /*00031468*/ STR         R3, [SP] 
    /*0003146c*/ MOV         R2, R0 
    /*00031470*/ MOV         R3, SL 
    /*00031474*/ MOV         R1, FP 
    /*00031478*/ MOV         R0, R9 
    /*0003147c*/ BL          0x000000000002D4B4 
    V16cv500CalcNRxV2AotoParam_x31480:
    /*00031480*/ LDR         R1, [SP, #84]               @ 0x54 
    /*00031484*/ MOV         R2, #152                    @ 0x98 
    /*00031488*/ LDR         R3, [SP, #12] 
    /*0003148c*/ SUB         R6, R4, #3 
    /*00031490*/ LDR         R7, [SP, #16] 
    /*00031494*/ MOV         R8, R5 
    /*00031498*/ MLA         R3, R2, R3, R1 
    /*0003149c*/ LDRB        R1, [R3, #18] 
    /*000314a0*/ BFI         R1, R0, #3, #5 
    /*000314a4*/ STRB        R1, [R3, #18] 
    V16cv500CalcNRxV2AotoParam_x314a8:
    /*000314a8*/ CMP         R9, FP 
    /*000314ac*/ LDRB        R2, [R6, #1]! 
    /*000314b0*/ LDRB        IP, [R7, #1]! 
    /*000314b4*/ BLS         V16cv500CalcNRxV2AotoParam_x314dc
    /*000314b8*/ CMP         R9, SL 
    /*000314bc*/ MOV         R3, SL 
    /*000314c0*/ MOV         R1, FP 
    /*000314c4*/ MOV         R0, R9 
    /*000314c8*/ MOVCS       R2, IP 
    /*000314cc*/ BCS         V16cv500CalcNRxV2AotoParam_x314dc
    /*000314d0*/ STR         IP, [SP] 
    /*000314d4*/ BL          0x000000000002D4B4 
    /*000314d8*/ MOV         R2, R0 
    V16cv500CalcNRxV2AotoParam_x314dc:
    /*000314dc*/ CMP         R4, R6 
    /*000314e0*/ STRB        R2, [R8, #1]! 
    /*000314e4*/ BNE         V16cv500CalcNRxV2AotoParam_x314a8
    /*000314e8*/ CMP         R9, FP 
    /*000314ec*/ LDRB        R2, [R4, #1] 
    /*000314f0*/ BLS         V16cv500CalcNRxV2AotoParam_x31c24
    /*000314f4*/ LDR         R6, [SP, #16] 
    /*000314f8*/ CMP         R9, SL 
    /*000314fc*/ LDRB        R3, [R6, #4] 
    /*00031500*/ BCS         V16cv500CalcNRxV2AotoParam_x31df4
    /*00031504*/ STR         R3, [SP] 
    /*00031508*/ MOV         R1, FP 
    /*0003150c*/ MOV         R3, SL 
    /*00031510*/ MOV         R0, R9 
    /*00031514*/ BL          0x000000000002D4B4 
    /*00031518*/ MOV         R3, SL 
    /*0003151c*/ MOV         R1, FP 
    /*00031520*/ STRB        R0, [R5, #4] 
    /*00031524*/ MOV         R0, R9 
    /*00031528*/ LDRB        IP, [R6, #5] 
    /*0003152c*/ LDRB        R2, [R4, #2] 
    /*00031530*/ STR         IP, [SP] 
    /*00031534*/ BL          0x000000000002D4B4 
    /*00031538*/ MOV         R3, SL 
    /*0003153c*/ MOV         R1, FP 
    /*00031540*/ STRB        R0, [R5, #5] 
    /*00031544*/ MOV         R0, R9 
    /*00031548*/ LDRB        IP, [R6, #6] 
    /*0003154c*/ LDRB        R2, [R4, #3] 
    /*00031550*/ STR         IP, [SP] 
    /*00031554*/ BL          0x000000000002D4B4 
    /*00031558*/ MOV         R3, SL 
    /*0003155c*/ MOV         R1, FP 
    /*00031560*/ STRB        R0, [R5, #6] 
    /*00031564*/ MOV         R0, R9 
    /*00031568*/ LDRB        IP, [R6, #7] 
    /*0003156c*/ LDRB        R2, [R4, #4] 
    /*00031570*/ STR         IP, [SP] 
    /*00031574*/ BL          0x000000000002D4B4 
    /*00031578*/ MOV         R3, SL 
    /*0003157c*/ MOV         R1, FP 
    /*00031580*/ STRB        R0, [R5, #7] 
    /*00031584*/ MOV         R0, R9 
    /*00031588*/ LDRB        IP, [R6, #8] 
    /*0003158c*/ LDRB        R2, [R4, #5] 
    /*00031590*/ STR         IP, [SP] 
    /*00031594*/ BL          0x000000000002D4B4 
    /*00031598*/ MOV         R3, SL 
    /*0003159c*/ MOV         R1, FP 
    /*000315a0*/ STRB        R0, [R5, #8] 
    /*000315a4*/ MOV         R0, R9 
    /*000315a8*/ LDRB        IP, [R6, #9] 
    /*000315ac*/ LDRB        R2, [R4, #6] 
    /*000315b0*/ STR         IP, [SP] 
    /*000315b4*/ BL          0x000000000002D4B4 
    /*000315b8*/ MOV         R3, SL 
    /*000315bc*/ MOV         R1, FP 
    /*000315c0*/ STRB        R0, [R5, #9] 
    /*000315c4*/ MOV         R0, R9 
    /*000315c8*/ LDRB        IP, [R6, #10] 
    /*000315cc*/ LDRB        R2, [R4, #7] 
    /*000315d0*/ STR         IP, [SP] 
    /*000315d4*/ BL          0x000000000002D4B4 
    /*000315d8*/ MOV         R3, SL 
    /*000315dc*/ MOV         R1, FP 
    /*000315e0*/ STRB        R0, [R5, #10] 
    /*000315e4*/ MOV         R0, R9 
    /*000315e8*/ LDRB        IP, [R6, #11] 
    /*000315ec*/ LDRB        R2, [R4, #8] 
    /*000315f0*/ STR         IP, [SP] 
    /*000315f4*/ BL          0x000000000002D4B4 
    /*000315f8*/ MOV         R3, SL 
    /*000315fc*/ MOV         R1, FP 
    /*00031600*/ STRB        R0, [R5, #11] 
    /*00031604*/ MOV         R0, R9 
    /*00031608*/ LDRB        R2, [R4, #9] 
    /*0003160c*/ LDRB        IP, [R6, #12] 
    /*00031610*/ STR         IP, [SP] 
    /*00031614*/ BL          0x000000000002D4B4 
    V16cv500CalcNRxV2AotoParam_x31618:
    /*00031618*/ LDR         R2, [SP, #12] 
    /*0003161c*/ MOV         R3, #152                    @ 0x98 
    /*00031620*/ STRB        R0, [R5, #12] 
    /*00031624*/ CMP         R9, FP 
    /*00031628*/ MUL         R8, R3, R2 
    /*0003162c*/ LDR         R2, [SP, #8] 
    /*00031630*/ LDRB        R3, [R4, #-3] 
    /*00031634*/ ADD         R7, R2, R8 
    /*00031638*/ LDR         R2, [SP, #84]               @ 0x54 
    /*0003163c*/ STRB        R3, [R5] 
    /*00031640*/ ADD         R6, R2, R8 
    /*00031644*/ ADD         R2, R7, #16 
    /*00031648*/ ADD         R7, R7, #32 
    /*0003164c*/ LDRB        R1, [R2, #5] 
    /*00031650*/ LDRB        IP, [R6, #21] 
    /*00031654*/ LDRB        R0, [R6, #20] 
    /*00031658*/ LSR         R1, R1, #5 
    /*0003165c*/ BFI         IP, R1, #5, #3 
    /*00031660*/ STRB        IP, [R6, #21] 
    /*00031664*/ LDRB        R1, [R2, #4] 
    /*00031668*/ BFI         R0, R1, #0, #5 
    /*0003166c*/ STRB        R0, [R6, #20] 
    /*00031670*/ LDRH        R2, [R2, #4] 
    /*00031674*/ LDRH        R1, [R6, #20] 
    /*00031678*/ UBFX        R2, R2, #5, #5 
    /*0003167c*/ BFI         R1, R2, #5, #5 
    /*00031680*/ STRH        R1, [R6, #20] 
    /*00031684*/ LDRH        R2, [R7, #4] 
    /*00031688*/ UBFX        R2, R2, #0, #9 
    /*0003168c*/ BLS         V16cv500CalcNRxV2AotoParam_x31bfc
    /*00031690*/ LDR         R3, [SP, #80]               @ 0x50 
    /*00031694*/ CMP         R9, SL 
    /*00031698*/ ADD         R8, R3, R8 
    /*0003169c*/ ADD         R8, R8, #32 
    /*000316a0*/ LDRH        R3, [R8, #4] 
    /*000316a4*/ UBFX        R3, R3, #0, #9 
    /*000316a8*/ BCS         V16cv500CalcNRxV2AotoParam_x31e64
    /*000316ac*/ STR         R3, [SP] 
    /*000316b0*/ MOV         R1, FP 
    /*000316b4*/ MOV         R3, SL 
    /*000316b8*/ MOV         R0, R9 
    /*000316bc*/ BL          0x000000000002D4B4 
    /*000316c0*/ LDRH        R2, [R6, #36]               @ 0x24 
    /*000316c4*/ MOV         R3, SL 
    /*000316c8*/ MOV         R1, FP 
    /*000316cc*/ BFI         R2, R0, #0, #9 
    /*000316d0*/ STRH        R2, [R6, #36]               @ 0x24 
    /*000316d4*/ LDRH        IP, [R8, #6] 
    /*000316d8*/ MOV         R0, R9 
    /*000316dc*/ LDRH        R2, [R7, #6] 
    /*000316e0*/ UBFX        IP, IP, #0, #9 
    /*000316e4*/ STR         IP, [SP] 
    /*000316e8*/ UBFX        R2, R2, #0, #9 
    /*000316ec*/ BL          0x000000000002D4B4 
    /*000316f0*/ LDRH        R2, [R6, #38]               @ 0x26 
    /*000316f4*/ MOV         R3, SL 
    /*000316f8*/ MOV         R1, FP 
    /*000316fc*/ BFI         R2, R0, #0, #9 
    /*00031700*/ STRH        R2, [R6, #38]               @ 0x26 
    /*00031704*/ LDRH        IP, [R8, #8] 
    /*00031708*/ MOV         R0, R9 
    /*0003170c*/ LDRH        R2, [R7, #8] 
    /*00031710*/ UBFX        IP, IP, #0, #9 
    /*00031714*/ STR         IP, [SP] 
    /*00031718*/ UBFX        R2, R2, #0, #9 
    /*0003171c*/ BL          0x000000000002D4B4 
    V16cv500CalcNRxV2AotoParam_x31720:
    /*00031720*/ LDR         R3, [SP, #12] 
    /*00031724*/ MOV         R2, #152                    @ 0x98 
    /*00031728*/ LDR         R1, [SP, #8] 
    /*0003172c*/ ADD         R5, R5, #152                @ 0x98 
    /*00031730*/ ADD         R4, R4, #152                @ 0x98 
    /*00031734*/ MUL         R2, R2, R3 
    /*00031738*/ ADD         R3, R3, #1 
    /*0003173c*/ CMP         R3, #3 
    /*00031740*/ STR         R3, [SP, #12] 
    /*00031744*/ LDR         R3, [SP, #16] 
    /*00031748*/ ADD         R3, R3, #152                @ 0x98 
    /*0003174c*/ STR         R3, [SP, #16] 
    /*00031750*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00031754*/ ADD         R3, R3, R2 
    /*00031758*/ ADD         R2, R1, R2 
    /*0003175c*/ ADD         R2, R2, #32 
    /*00031760*/ LDRH        R1, [R3, #40]               @ 0x28 
    /*00031764*/ LDRB        IP, [R3, #37]               @ 0x25 
    /*00031768*/ BFI         R1, R0, #0, #9 
    /*0003176c*/ STRH        R1, [R3, #40]               @ 0x28 
    /*00031770*/ LDRB        R1, [R2, #5] 
    /*00031774*/ LDRB        R0, [R3, #39]               @ 0x27 
    /*00031778*/ UBFX        R1, R1, #4, #3 
    /*0003177c*/ BFI         IP, R1, #4, #3 
    /*00031780*/ STRB        IP, [R3, #37]               @ 0x25 
    /*00031784*/ LDRB        R1, [R2, #5] 
    /*00031788*/ UXTB        IP, IP 
    /*0003178c*/ UBFX        R1, R1, #1, #3 
    /*00031790*/ BFI         IP, R1, #1, #3 
    /*00031794*/ STRB        IP, [R3, #37]               @ 0x25 
    /*00031798*/ LDRB        R1, [R2, #7] 
    /*0003179c*/ LDRB        IP, [R3, #41]               @ 0x29 
    /*000317a0*/ UBFX        R1, R1, #1, #3 
    /*000317a4*/ BFI         R0, R1, #1, #3 
    /*000317a8*/ STRB        R0, [R3, #39]               @ 0x27 
    /*000317ac*/ LDRB        R1, [R2, #9] 
    /*000317b0*/ LDRB        R0, [R3, #37]               @ 0x25 
    /*000317b4*/ UBFX        R1, R1, #1, #3 
    /*000317b8*/ BFI         IP, R1, #1, #3 
    /*000317bc*/ STRB        IP, [R3, #41]               @ 0x29 
    /*000317c0*/ LDRB        R1, [R2, #5] 
    /*000317c4*/ LDRB        IP, [R3, #39]               @ 0x27 
    /*000317c8*/ LSR         R1, R1, #7 
    /*000317cc*/ BFI         R0, R1, #7, #1 
    /*000317d0*/ STRB        R0, [R3, #37]               @ 0x25 
    /*000317d4*/ LDRB        R1, [R2, #7] 
    /*000317d8*/ LDRB        R0, [R3, #41]               @ 0x29 
    /*000317dc*/ LSR         R1, R1, #5 
    /*000317e0*/ BFI         IP, R1, #5, #3 
    /*000317e4*/ STRB        IP, [R3, #39]               @ 0x27 
    /*000317e8*/ LDRB        R2, [R2, #9] 
    /*000317ec*/ UBFX        R2, R2, #4, #1 
    /*000317f0*/ BFI         R0, R2, #4, #1 
    /*000317f4*/ STRB        R0, [R3, #41]               @ 0x29 
    /*000317f8*/ BNE         V16cv500CalcNRxV2AotoParam_x313d8
    /*000317fc*/ MOV         R3, #0 
    /*00031800*/ MOVW        R8, #478                    @ 0x1de 
    /*00031804*/ MOV         R7, R3 
    V16cv500CalcNRxV2AotoParam_x31808:
    /*00031808*/ MOV         R3, #12 
    /*0003180c*/ CMP         R9, FP 
    /*00031810*/ MUL         R4, R3, R7 
    /*00031814*/ LDR         R3, [SP, #8] 
    /*00031818*/ ADD         R5, R3, R4 
    /*0003181c*/ ADD         R3, R5, #472                @ 0x1d8 
    /*00031820*/ STR         R3, [SP, #12] 
    /*00031824*/ LDRH        R2, [R3, #2] 
    /*00031828*/ UBFX        R2, R2, #0, #9 
    /*0003182c*/ BLS         V16cv500CalcNRxV2AotoParam_x31c90
    /*00031830*/ LDR         R1, [SP, #80]               @ 0x50 
    /*00031834*/ CMP         R9, SL 
    /*00031838*/ ADD         R6, R1, R4 
    /*0003183c*/ ADD         R1, R6, #472                @ 0x1d8 
    /*00031840*/ STR         R1, [SP, #16] 
    /*00031844*/ LDRH        R1, [R1, #2] 
    /*00031848*/ UBFX        R1, R1, #0, #9 
    /*0003184c*/ BCS         V16cv500CalcNRxV2AotoParam_x31e8c
    /*00031850*/ LDR         LR, [SP, #84]               @ 0x54 
    /*00031854*/ MOV         R3, SL 
    /*00031858*/ STR         R1, [SP] 
    /*0003185c*/ MOV         R0, R9 
    /*00031860*/ MOV         R1, FP 
    /*00031864*/ ADD         R4, LR, R4 
    /*00031868*/ BL          0x000000000002D4B4 
    /*0003186c*/ LDR         IP, [SP, #8] 
    /*00031870*/ ADD         LR, R4, #472                @ 0x1d8 
    /*00031874*/ STR         LR, [SP, #20] 
    /*00031878*/ MOV         R3, SL 
    /*0003187c*/ MOV         R1, FP 
    /*00031880*/ STR         IP, [SP, #24] 
    /*00031884*/ LDR         IP, [SP, #80]               @ 0x50 
    /*00031888*/ LDRH        R2, [LR, #2] 
    /*0003188c*/ STR         IP, [SP, #28] 
    /*00031890*/ LDR         IP, [SP, #84]               @ 0x54 
    /*00031894*/ STR         IP, [SP, #32] 
    /*00031898*/ BFI         R2, R0, #0, #9 
    /*0003189c*/ STRH        R2, [LR, #2] 
    /*000318a0*/ LDRB        R2, [R5, #475]              @ 0x1db 
    /*000318a4*/ LDRB        R0, [R4, #475]              @ 0x1db 
    /*000318a8*/ UBFX        R2, R2, #1, #2 
    /*000318ac*/ BFI         R0, R2, #1, #2 
    /*000318b0*/ STRB        R0, [R4, #475]              @ 0x1db 
    /*000318b4*/ LDRB        R2, [R5, #475]              @ 0x1db 
    /*000318b8*/ UXTB        R0, R0 
    /*000318bc*/ UBFX        R2, R2, #3, #2 
    /*000318c0*/ BFI         R0, R2, #3, #2 
    /*000318c4*/ STRB        R0, [R4, #475]              @ 0x1db 
    /*000318c8*/ LDRB        R2, [R5, #475]              @ 0x1db 
    /*000318cc*/ UXTB        R0, R0 
    /*000318d0*/ UBFX        R2, R2, #5, #2 
    /*000318d4*/ BFI         R0, R2, #5, #2 
    /*000318d8*/ STRB        R0, [R4, #475]              @ 0x1db 
    /*000318dc*/ LDR         R0, [SP, #16] 
    /*000318e0*/ LDR         R2, [SP, #12] 
    /*000318e4*/ LDRH        R0, [R0, #8] 
    /*000318e8*/ LDRH        R2, [R2, #8] 
    /*000318ec*/ UBFX        R0, R0, #0, #10 
    /*000318f0*/ STR         R0, [SP] 
    /*000318f4*/ UBFX        R2, R2, #0, #10 
    /*000318f8*/ MOV         R0, R9 
    /*000318fc*/ BL          0x000000000002D4B4 
    /*00031900*/ LDR         LR, [SP, #20] 
    /*00031904*/ MOV         R3, SL 
    /*00031908*/ MOV         R1, FP 
    /*0003190c*/ LDRH        R2, [LR, #8] 
    /*00031910*/ BFI         R2, R0, #0, #10 
    /*00031914*/ STRH        R2, [LR, #8] 
    /*00031918*/ LDRB        R0, [R6, #481]              @ 0x1e1 
    /*0003191c*/ LDRB        R2, [R5, #481]              @ 0x1e1 
    /*00031920*/ UBFX        R0, R0, #2, #4 
    /*00031924*/ STR         R0, [SP] 
    /*00031928*/ UBFX        R2, R2, #2, #4 
    /*0003192c*/ MOV         R0, R9 
    /*00031930*/ BL          0x000000000002D4B4 
    /*00031934*/ LDRB        R2, [R4, #481]              @ 0x1e1 
    /*00031938*/ MOV         R3, SL 
    /*0003193c*/ MOV         R1, FP 
    /*00031940*/ BFI         R2, R0, #2, #4 
    /*00031944*/ STRB        R2, [R4, #481]              @ 0x1e1 
    /*00031948*/ LDRB        IP, [R6, #481]              @ 0x1e1 
    /*0003194c*/ MOV         R0, R9 
    /*00031950*/ LDRB        R2, [R5, #481]              @ 0x1e1 
    /*00031954*/ LSR         IP, IP, #6 
    /*00031958*/ STR         IP, [SP] 
    /*0003195c*/ LSR         R2, R2, #6 
    /*00031960*/ BL          0x000000000002D4B4 
    /*00031964*/ LDRB        R2, [R4, #481]              @ 0x1e1 
    /*00031968*/ MOV         R3, SL 
    /*0003196c*/ MOV         R1, FP 
    /*00031970*/ BFI         R2, R0, #6, #2 
    /*00031974*/ STRB        R2, [R4, #481]              @ 0x1e1 
    /*00031978*/ LDRB        R0, [R6, #484]              @ 0x1e4 
    /*0003197c*/ LDRB        R2, [R5, #484]              @ 0x1e4 
    /*00031980*/ AND         R0, R0, #15 
    /*00031984*/ STR         R0, [SP] 
    /*00031988*/ AND         R2, R2, #15 
    /*0003198c*/ MOV         R0, R9 
    /*00031990*/ BL          0x000000000002D4B4 
    /*00031994*/ ADD         IP, R4, #480                @ 0x1e0 
    /*00031998*/ STR         IP, [SP, #36]               @ 0x24 
    /*0003199c*/ MOV         R3, SL 
    /*000319a0*/ MOV         R1, FP 
    /*000319a4*/ LDRB        R2, [IP, #4] 
    /*000319a8*/ BFI         R2, R0, #0, #4 
    /*000319ac*/ STRB        R2, [R4, #484]              @ 0x1e4 
    /*000319b0*/ LDRB        R2, [R5, #475]              @ 0x1db 
    /*000319b4*/ LDRB        R0, [R4, #475]              @ 0x1db 
    /*000319b8*/ LSR         R2, R2, #7 
    /*000319bc*/ BFI         R0, R2, #7, #1 
    /*000319c0*/ STRB        R0, [R4, #475]              @ 0x1db 
    /*000319c4*/ LDRB        R0, [R6, #485]              @ 0x1e5 
    /*000319c8*/ LDRB        R2, [R5, #485]              @ 0x1e5 
    /*000319cc*/ AND         R0, R0, #15 
    /*000319d0*/ STR         R0, [SP] 
    /*000319d4*/ AND         R2, R2, #15 
    /*000319d8*/ MOV         R0, R9 
    /*000319dc*/ BL          0x000000000002D4B4 
    /*000319e0*/ LDRB        R2, [R4, #485]              @ 0x1e5 
    /*000319e4*/ MOV         R3, SL 
    /*000319e8*/ MOV         R1, FP 
    /*000319ec*/ BFI         R2, R0, #0, #4 
    /*000319f0*/ LDR         R0, [SP, #16] 
    /*000319f4*/ STRB        R2, [R4, #485]              @ 0x1e5 
    /*000319f8*/ LDR         R2, [SP, #12] 
    /*000319fc*/ LDRH        IP, [R0, #4] 
    /*00031a00*/ MOV         R0, R9 
    /*00031a04*/ LDRH        R2, [R2, #4] 
    /*00031a08*/ UBFX        IP, IP, #0, #9 
    /*00031a0c*/ STR         IP, [SP] 
    /*00031a10*/ UBFX        R2, R2, #0, #9 
    /*00031a14*/ BL          0x000000000002D4B4 
    /*00031a18*/ LDR         LR, [SP, #20] 
    /*00031a1c*/ MOV         R3, SL 
    /*00031a20*/ MOV         R1, FP 
    /*00031a24*/ LDRH        R2, [LR, #4] 
    /*00031a28*/ BFI         R2, R0, #0, #9 
    /*00031a2c*/ STRH        R2, [LR, #4] 
    /*00031a30*/ LDRB        R2, [R5, #477]              @ 0x1dd 
    /*00031a34*/ MOV         R0, R9 
    /*00031a38*/ LDRB        IP, [R4, #477]              @ 0x1dd 
    /*00031a3c*/ UBFX        R2, R2, #1, #2 
    /*00031a40*/ BFI         IP, R2, #1, #2 
    /*00031a44*/ STRB        IP, [R4, #477]              @ 0x1dd 
    /*00031a48*/ LDRB        R2, [R5, #477]              @ 0x1dd 
    /*00031a4c*/ UXTB        IP, IP 
    /*00031a50*/ UBFX        R2, R2, #3, #2 
    /*00031a54*/ BFI         IP, R2, #3, #2 
    /*00031a58*/ STRB        IP, [R4, #477]              @ 0x1dd 
    /*00031a5c*/ LDRB        R2, [R5, #477]              @ 0x1dd 
    /*00031a60*/ UXTB        IP, IP 
    /*00031a64*/ UBFX        R2, R2, #5, #2 
    /*00031a68*/ BFI         IP, R2, #5, #2 
    /*00031a6c*/ STRB        IP, [R4, #477]              @ 0x1dd 
    /*00031a70*/ LDR         IP, [SP, #24] 
    /*00031a74*/ LDR         LR, [SP, #28] 
    /*00031a78*/ LDRB        R2, [IP, R8]! 
    /*00031a7c*/ STR         IP, [SP, #24] 
    /*00031a80*/ LDRB        IP, [LR, R8]! 
    /*00031a84*/ STR         LR, [SP, #28] 
    /*00031a88*/ STR         IP, [SP] 
    /*00031a8c*/ BL          0x000000000002D4B4 
    /*00031a90*/ LDR         LR, [SP, #32] 
    /*00031a94*/ MOV         R3, SL 
    /*00031a98*/ LDR         IP, [SP, #24] 
    /*00031a9c*/ MOV         R1, FP 
    /*00031aa0*/ STRB        R0, [LR, R8]! 
    /*00031aa4*/ MOV         R0, R9 
    /*00031aa8*/ STR         LR, [SP, #32] 
    /*00031aac*/ LDR         LR, [SP, #28] 
    /*00031ab0*/ LDRB        R2, [IP, #1] 
    /*00031ab4*/ LDRB        IP, [LR, #1] 
    /*00031ab8*/ STR         IP, [SP] 
    /*00031abc*/ BL          0x000000000002D4B4 
    /*00031ac0*/ LDR         LR, [SP, #32] 
    /*00031ac4*/ ADD         R2, R6, #480                @ 0x1e0 
    /*00031ac8*/ MOV         R3, SL 
    /*00031acc*/ MOV         R1, FP 
    /*00031ad0*/ STRB        R0, [LR, #1] 
    /*00031ad4*/ MOV         R0, R9 
    /*00031ad8*/ LDRH        IP, [R2, #2] 
    /*00031adc*/ ADD         R2, R5, #480                @ 0x1e0 
    /*00031ae0*/ LDRH        R2, [R2, #2] 
    /*00031ae4*/ UBFX        IP, IP, #0, #10 
    /*00031ae8*/ STR         IP, [SP] 
    /*00031aec*/ UBFX        R2, R2, #0, #10 
    /*00031af0*/ BL          0x000000000002D4B4 
    /*00031af4*/ LDR         IP, [SP, #36]               @ 0x24 
    /*00031af8*/ MOV         R3, SL 
    /*00031afc*/ MOV         R1, FP 
    /*00031b00*/ LDRH        R2, [IP, #2] 
    /*00031b04*/ BFI         R2, R0, #0, #10 
    /*00031b08*/ STRH        R2, [IP, #2] 
    /*00031b0c*/ LDRB        R2, [R5, #483]              @ 0x1e3 
    /*00031b10*/ MOV         R0, R9 
    /*00031b14*/ LDRB        IP, [R6, #483]              @ 0x1e3 
    /*00031b18*/ UBFX        R2, R2, #2, #4 
    /*00031b1c*/ UBFX        IP, IP, #2, #4 
    /*00031b20*/ STR         IP, [SP] 
    /*00031b24*/ BL          0x000000000002D4B4 
    /*00031b28*/ LDRB        R2, [R4, #483]              @ 0x1e3 
    /*00031b2c*/ MOV         R3, SL 
    /*00031b30*/ MOV         R1, FP 
    /*00031b34*/ BFI         R2, R0, #2, #4 
    /*00031b38*/ STRB        R2, [R4, #483]              @ 0x1e3 
    /*00031b3c*/ LDRB        IP, [R6, #485]              @ 0x1e5 
    /*00031b40*/ MOV         R0, R9 
    /*00031b44*/ LDRB        R2, [R5, #485]              @ 0x1e5 
    /*00031b48*/ LSR         IP, IP, #4 
    /*00031b4c*/ STR         IP, [SP] 
    /*00031b50*/ LSR         R2, R2, #4 
    /*00031b54*/ BL          0x000000000002D4B4 
    V16cv500CalcNRxV2AotoParam_x31b58:
    /*00031b58*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00031b5c*/ MOV         R3, #12 
    /*00031b60*/ ADD         R8, R8, #12 
    /*00031b64*/ MLA         R3, R3, R7, R2 
    /*00031b68*/ ADD         R7, R7, #1 
    /*00031b6c*/ CMP         R7, #2 
    /*00031b70*/ LDRB        R2, [R3, #485]              @ 0x1e5 
    /*00031b74*/ BFI         R2, R0, #4, #4 
    /*00031b78*/ STRB        R2, [R3, #485]              @ 0x1e5 
    /*00031b7c*/ BNE         V16cv500CalcNRxV2AotoParam_x31808
    /*00031b80*/ LDR         R5, [SP, #8] 
    /*00031b84*/ MOVW        R4, #498                    @ 0x1f2 
    /*00031b88*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00031b8c*/ CMP         R9, FP 
    /*00031b90*/ LDR         R1, [SP, #84]               @ 0x54 
    /*00031b94*/ LDRB        R3, [R5, #498]              @ 0x1f2 
    /*00031b98*/ LDRB        R2, [R2, #498]              @ 0x1f2 
    /*00031b9c*/ BFI         R2, R3, #0, #1 
    /*00031ba0*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00031ba4*/ LDRB        R3, [R3, #500]              @ 0x1f4 
    /*00031ba8*/ STRB        R2, [R1, #498]              @ 0x1f2 
    /*00031bac*/ LDRB        R2, [R5, #500]              @ 0x1f4 
    /*00031bb0*/ BFI         R3, R2, #0, #3 
    /*00031bb4*/ STRB        R3, [R1, #500]              @ 0x1f4 
    /*00031bb8*/ LDRH        R3, [R5, R4] 
    /*00031bbc*/ UBFX        R2, R3, #1, #9 
    /*00031bc0*/ BLS         V16cv500CalcNRxV2AotoParam_x31ff0
    /*00031bc4*/ LDR         R3, [SP, #80]               @ 0x50 
    /*00031bc8*/ CMP         R9, SL 
    /*00031bcc*/ LDRH        R3, [R3, R4] 
    /*00031bd0*/ UBFX        R3, R3, #1, #9 
    /*00031bd4*/ BCC         V16cv500CalcNRxV2AotoParam_x32f08
    /*00031bd8*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00031bdc*/ LDRH        R2, [R2, R4] 
    /*00031be0*/ BFI         R2, R3, #1, #9 
    /*00031be4*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00031be8*/ STRH        R2, [R3, R4] 
    /*00031bec*/ LDR         R3, [SP, #80]               @ 0x50 
    /*00031bf0*/ LDRB        R0, [R3, #500]              @ 0x1f4 
    /*00031bf4*/ LSR         R0, R0, #3 
    /*00031bf8*/ B           V16cv500CalcNRxV2AotoParam_x32010
    V16cv500CalcNRxV2AotoParam_x31bfc:
    /*00031bfc*/ LDRH        R1, [R6, #36]               @ 0x24 
    /*00031c00*/ LDRH        R3, [R6, #38]               @ 0x26 
    /*00031c04*/ BFI         R1, R2, #0, #9 
    /*00031c08*/ STRH        R1, [R6, #36]               @ 0x24 
    /*00031c0c*/ LDRH        R2, [R7, #6] 
    /*00031c10*/ BFI         R3, R2, #0, #9 
    /*00031c14*/ STRH        R3, [R6, #38]               @ 0x26 
    /*00031c18*/ LDRH        R0, [R7, #8] 
    /*00031c1c*/ UBFX        R0, R0, #0, #9 
    /*00031c20*/ B           V16cv500CalcNRxV2AotoParam_x31720
    V16cv500CalcNRxV2AotoParam_x31c24:
    /*00031c24*/ STRB        R2, [R5, #4] 
    /*00031c28*/ LDRB        R3, [R4, #2] 
    /*00031c2c*/ STRB        R3, [R5, #5] 
    /*00031c30*/ LDRB        R3, [R4, #3] 
    /*00031c34*/ STRB        R3, [R5, #6] 
    /*00031c38*/ LDRB        R3, [R4, #4] 
    /*00031c3c*/ STRB        R3, [R5, #7] 
    /*00031c40*/ LDRB        R3, [R4, #5] 
    /*00031c44*/ STRB        R3, [R5, #8] 
    /*00031c48*/ LDRB        R3, [R4, #6] 
    /*00031c4c*/ STRB        R3, [R5, #9] 
    /*00031c50*/ LDRB        R3, [R4, #7] 
    /*00031c54*/ STRB        R3, [R5, #10] 
    /*00031c58*/ LDRB        R3, [R4, #8] 
    /*00031c5c*/ STRB        R3, [R5, #11] 
    /*00031c60*/ LDRB        R0, [R4, #9] 
    /*00031c64*/ B           V16cv500CalcNRxV2AotoParam_x31618
    V16cv500CalcNRxV2AotoParam_x31c68:
    /*00031c68*/ STRB        R2, [R4] 
    /*00031c6c*/ LDRB        R2, [R6, #1] 
    /*00031c70*/ STRB        R2, [R4, #1] 
    /*00031c74*/ LDRB        R2, [R6, #2] 
    /*00031c78*/ STRB        R2, [R4, #2] 
    /*00031c7c*/ LDRB        R2, [R6, #3] 
    /*00031c80*/ STRB        R2, [R4, #3] 
    /*00031c84*/ LDRH        R0, [R3, #4] 
    /*00031c88*/ UBFX        R0, R0, #0, #10 
    /*00031c8c*/ B           V16cv500CalcNRxV2AotoParam_x31388
    V16cv500CalcNRxV2AotoParam_x31c90:
    /*00031c90*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00031c94*/ LDR         LR, [SP, #8] 
    /*00031c98*/ ADD         R3, R3, R4 
    /*00031c9c*/ LDR         IP, [SP, #84]               @ 0x54 
    /*00031ca0*/ ADD         R1, R3, #472                @ 0x1d8 
    /*00031ca4*/ ADD         R0, R3, #480                @ 0x1e0 
    /*00031ca8*/ ADD         R4, R5, #480                @ 0x1e0 
    /*00031cac*/ LDRH        R6, [R1, #2] 
    /*00031cb0*/ BFI         R6, R2, #0, #9 
    /*00031cb4*/ STRH        R6, [R1, #2] 
    /*00031cb8*/ LDRB        R2, [R5, #475]              @ 0x1db 
    /*00031cbc*/ LDRB        R6, [R3, #475]              @ 0x1db 
    /*00031cc0*/ UBFX        R2, R2, #1, #2 
    /*00031cc4*/ BFI         R6, R2, #1, #2 
    /*00031cc8*/ STRB        R6, [R3, #475]              @ 0x1db 
    /*00031ccc*/ LDRB        R2, [R5, #475]              @ 0x1db 
    /*00031cd0*/ UXTB        R6, R6 
    /*00031cd4*/ UBFX        R2, R2, #3, #2 
    /*00031cd8*/ BFI         R6, R2, #3, #2 
    /*00031cdc*/ STRB        R6, [R3, #475]              @ 0x1db 
    /*00031ce0*/ LDRB        R2, [R5, #475]              @ 0x1db 
    /*00031ce4*/ UXTB        R6, R6 
    /*00031ce8*/ UBFX        R2, R2, #5, #2 
    /*00031cec*/ BFI         R6, R2, #5, #2 
    /*00031cf0*/ STRB        R6, [R3, #475]              @ 0x1db 
    /*00031cf4*/ LDR         R2, [SP, #12] 
    /*00031cf8*/ LDRH        R6, [R2, #8] 
    /*00031cfc*/ LDRH        R2, [R1, #8] 
    /*00031d00*/ BFI         R2, R6, #0, #10 
    /*00031d04*/ STRH        R2, [R1, #8] 
    /*00031d08*/ LDRB        R2, [R5, #481]              @ 0x1e1 
    /*00031d0c*/ LDRB        R6, [R3, #481]              @ 0x1e1 
    /*00031d10*/ UBFX        R2, R2, #2, #4 
    /*00031d14*/ BFI         R6, R2, #2, #4 
    /*00031d18*/ STRB        R6, [R3, #481]              @ 0x1e1 
    /*00031d1c*/ LDRB        R2, [R5, #481]              @ 0x1e1 
    /*00031d20*/ UXTB        R6, R6 
    /*00031d24*/ LSR         R2, R2, #6 
    /*00031d28*/ BFI         R6, R2, #6, #2 
    /*00031d2c*/ LDRB        R2, [R3, #484]              @ 0x1e4 
    /*00031d30*/ STRB        R6, [R3, #481]              @ 0x1e1 
    /*00031d34*/ LDRB        R6, [R5, #484]              @ 0x1e4 
    /*00031d38*/ BFI         R2, R6, #0, #4 
    /*00031d3c*/ STRB        R2, [R3, #484]              @ 0x1e4 
    /*00031d40*/ LDRB        R2, [R5, #475]              @ 0x1db 
    /*00031d44*/ LDRB        R6, [R3, #475]              @ 0x1db 
    /*00031d48*/ LSR         R2, R2, #7 
    /*00031d4c*/ BFI         R6, R2, #7, #1 
    /*00031d50*/ LDRB        R2, [R3, #485]              @ 0x1e5 
    /*00031d54*/ STRB        R6, [R3, #475]              @ 0x1db 
    /*00031d58*/ LDRB        R6, [R5, #485]              @ 0x1e5 
    /*00031d5c*/ BFI         R2, R6, #0, #4 
    /*00031d60*/ STRB        R2, [R3, #485]              @ 0x1e5 
    /*00031d64*/ LDR         R2, [SP, #12] 
    /*00031d68*/ LDRH        R6, [R2, #4] 
    /*00031d6c*/ LDRH        R2, [R1, #4] 
    /*00031d70*/ BFI         R2, R6, #0, #9 
    /*00031d74*/ STRH        R2, [R1, #4] 
    /*00031d78*/ LDRB        R2, [R5, #477]              @ 0x1dd 
    /*00031d7c*/ LDRB        R1, [R3, #477]              @ 0x1dd 
    /*00031d80*/ UBFX        R2, R2, #1, #2 
    /*00031d84*/ BFI         R1, R2, #1, #2 
    /*00031d88*/ STRB        R1, [R3, #477]              @ 0x1dd 
    /*00031d8c*/ LDRB        R2, [R5, #477]              @ 0x1dd 
    /*00031d90*/ UXTB        R1, R1 
    /*00031d94*/ UBFX        R2, R2, #3, #2 
    /*00031d98*/ BFI         R1, R2, #3, #2 
    /*00031d9c*/ STRB        R1, [R3, #477]              @ 0x1dd 
    /*00031da0*/ LDRB        R2, [R5, #477]              @ 0x1dd 
    /*00031da4*/ UXTB        R1, R1 
    /*00031da8*/ UBFX        R2, R2, #5, #2 
    /*00031dac*/ BFI         R1, R2, #5, #2 
    /*00031db0*/ STRB        R1, [R3, #477]              @ 0x1dd 
    /*00031db4*/ LDRB        R2, [LR, R8]! 
    /*00031db8*/ STRB        R2, [IP, R8]! 
    /*00031dbc*/ LDRB        R2, [LR, #1] 
    /*00031dc0*/ STRB        R2, [IP, #1] 
    /*00031dc4*/ LDRH        R1, [R4, #2] 
    /*00031dc8*/ LDRH        R2, [R0, #2] 
    /*00031dcc*/ BFI         R2, R1, #0, #10 
    /*00031dd0*/ STRH        R2, [R0, #2] 
    /*00031dd4*/ LDRB        R2, [R5, #483]              @ 0x1e3 
    /*00031dd8*/ LDRB        R1, [R3, #483]              @ 0x1e3 
    /*00031ddc*/ UBFX        R2, R2, #2, #4 
    /*00031de0*/ BFI         R1, R2, #2, #4 
    /*00031de4*/ STRB        R1, [R3, #483]              @ 0x1e3 
    /*00031de8*/ LDRB        R0, [R5, #485]              @ 0x1e5 
    /*00031dec*/ LSR         R0, R0, #4 
    /*00031df0*/ B           V16cv500CalcNRxV2AotoParam_x31b58
    V16cv500CalcNRxV2AotoParam_x31df4:
    /*00031df4*/ LDR         R2, [SP, #16] 
    /*00031df8*/ STRB        R3, [R5, #4] 
    /*00031dfc*/ LDRB        R3, [R2, #5] 
    /*00031e00*/ STRB        R3, [R5, #5] 
    /*00031e04*/ LDRB        R3, [R2, #6] 
    /*00031e08*/ STRB        R3, [R5, #6] 
    /*00031e0c*/ LDRB        R3, [R2, #7] 
    /*00031e10*/ STRB        R3, [R5, #7] 
    /*00031e14*/ LDRB        R3, [R2, #8] 
    /*00031e18*/ STRB        R3, [R5, #8] 
    /*00031e1c*/ LDRB        R3, [R2, #9] 
    /*00031e20*/ STRB        R3, [R5, #9] 
    /*00031e24*/ LDRB        R3, [R2, #10] 
    /*00031e28*/ STRB        R3, [R5, #10] 
    /*00031e2c*/ LDRB        R3, [R2, #11] 
    /*00031e30*/ STRB        R3, [R5, #11] 
    /*00031e34*/ LDRB        R0, [R2, #12] 
    /*00031e38*/ B           V16cv500CalcNRxV2AotoParam_x31618
    V16cv500CalcNRxV2AotoParam_x31e3c:
    /*00031e3c*/ STRB        IP, [R4] 
    /*00031e40*/ LDRB        R3, [R7, #1] 
    /*00031e44*/ STRB        R3, [R4, #1] 
    /*00031e48*/ LDRB        R3, [R7, #2] 
    /*00031e4c*/ STRB        R3, [R4, #2] 
    /*00031e50*/ LDRB        R3, [R7, #3] 
    /*00031e54*/ STRB        R3, [R4, #3] 
    /*00031e58*/ LDRH        R0, [LR, #4] 
    /*00031e5c*/ UBFX        R0, R0, #0, #10 
    /*00031e60*/ B           V16cv500CalcNRxV2AotoParam_x31388
    V16cv500CalcNRxV2AotoParam_x31e64:
    /*00031e64*/ LDRH        R1, [R6, #36]               @ 0x24 
    /*00031e68*/ LDRH        R2, [R6, #38]               @ 0x26 
    /*00031e6c*/ BFI         R1, R3, #0, #9 
    /*00031e70*/ STRH        R1, [R6, #36]               @ 0x24 
    /*00031e74*/ LDRH        R3, [R8, #6] 
    /*00031e78*/ BFI         R2, R3, #0, #9 
    /*00031e7c*/ STRH        R2, [R6, #38]               @ 0x26 
    /*00031e80*/ LDRH        R0, [R8, #8] 
    /*00031e84*/ UBFX        R0, R0, #0, #9 
    /*00031e88*/ B           V16cv500CalcNRxV2AotoParam_x31720
    V16cv500CalcNRxV2AotoParam_x31e8c:
    /*00031e8c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00031e90*/ LDR         LR, [SP, #80]               @ 0x50 
    /*00031e94*/ ADD         R3, R3, R4 
    /*00031e98*/ LDR         IP, [SP, #84]               @ 0x54 
    /*00031e9c*/ ADD         R2, R3, #472                @ 0x1d8 
    /*00031ea0*/ ADD         R0, R3, #480                @ 0x1e0 
    /*00031ea4*/ LDRH        R4, [R2, #2] 
    /*00031ea8*/ BFI         R4, R1, #0, #9 
    /*00031eac*/ STRH        R4, [R2, #2] 
    /*00031eb0*/ LDRB        R1, [R5, #475]              @ 0x1db 
    /*00031eb4*/ LDRB        R4, [R3, #475]              @ 0x1db 
    /*00031eb8*/ UBFX        R1, R1, #1, #2 
    /*00031ebc*/ BFI         R4, R1, #1, #2 
    /*00031ec0*/ STRB        R4, [R3, #475]              @ 0x1db 
    /*00031ec4*/ LDRB        R1, [R5, #475]              @ 0x1db 
    /*00031ec8*/ UXTB        R4, R4 
    /*00031ecc*/ UBFX        R1, R1, #3, #2 
    /*00031ed0*/ BFI         R4, R1, #3, #2 
    /*00031ed4*/ STRB        R4, [R3, #475]              @ 0x1db 
    /*00031ed8*/ LDRB        R1, [R5, #475]              @ 0x1db 
    /*00031edc*/ UXTB        R4, R4 
    /*00031ee0*/ UBFX        R1, R1, #5, #2 
    /*00031ee4*/ BFI         R4, R1, #5, #2 
    /*00031ee8*/ STRB        R4, [R3, #475]              @ 0x1db 
    /*00031eec*/ LDR         R4, [SP, #16] 
    /*00031ef0*/ LDRH        R1, [R2, #8] 
    /*00031ef4*/ LDRH        R4, [R4, #8] 
    /*00031ef8*/ BFI         R1, R4, #0, #10 
    /*00031efc*/ STRH        R1, [R2, #8] 
    /*00031f00*/ LDRB        R1, [R6, #481]              @ 0x1e1 
    /*00031f04*/ LDRB        R4, [R3, #481]              @ 0x1e1 
    /*00031f08*/ UBFX        R1, R1, #2, #4 
    /*00031f0c*/ BFI         R4, R1, #2, #4 
    /*00031f10*/ STRB        R4, [R3, #481]              @ 0x1e1 
    /*00031f14*/ LDRB        R1, [R6, #481]              @ 0x1e1 
    /*00031f18*/ UXTB        R4, R4 
    /*00031f1c*/ LSR         R1, R1, #6 
    /*00031f20*/ BFI         R4, R1, #6, #2 
    /*00031f24*/ LDRB        R1, [R3, #484]              @ 0x1e4 
    /*00031f28*/ STRB        R4, [R3, #481]              @ 0x1e1 
    /*00031f2c*/ LDRB        R4, [R6, #484]              @ 0x1e4 
    /*00031f30*/ BFI         R1, R4, #0, #4 
    /*00031f34*/ STRB        R1, [R3, #484]              @ 0x1e4 
    /*00031f38*/ LDRB        R1, [R5, #475]              @ 0x1db 
    /*00031f3c*/ LDRB        R4, [R3, #475]              @ 0x1db 
    /*00031f40*/ LSR         R1, R1, #7 
    /*00031f44*/ BFI         R4, R1, #7, #1 
    /*00031f48*/ LDRB        R1, [R3, #485]              @ 0x1e5 
    /*00031f4c*/ STRB        R4, [R3, #475]              @ 0x1db 
    /*00031f50*/ LDRB        R4, [R6, #485]              @ 0x1e5 
    /*00031f54*/ BFI         R1, R4, #0, #4 
    /*00031f58*/ LDR         R4, [SP, #16] 
    /*00031f5c*/ STRB        R1, [R3, #485]              @ 0x1e5 
    /*00031f60*/ LDRH        R4, [R4, #4] 
    /*00031f64*/ LDRH        R1, [R2, #4] 
    /*00031f68*/ BFI         R1, R4, #0, #9 
    /*00031f6c*/ STRH        R1, [R2, #4] 
    /*00031f70*/ LDRB        R2, [R5, #477]              @ 0x1dd 
    /*00031f74*/ LDRB        R1, [R3, #477]              @ 0x1dd 
    /*00031f78*/ UBFX        R2, R2, #1, #2 
    /*00031f7c*/ BFI         R1, R2, #1, #2 
    /*00031f80*/ STRB        R1, [R3, #477]              @ 0x1dd 
    /*00031f84*/ LDRB        R2, [R5, #477]              @ 0x1dd 
    /*00031f88*/ UXTB        R1, R1 
    /*00031f8c*/ UBFX        R2, R2, #3, #2 
    /*00031f90*/ BFI         R1, R2, #3, #2 
    /*00031f94*/ STRB        R1, [R3, #477]              @ 0x1dd 
    /*00031f98*/ LDRB        R2, [R5, #477]              @ 0x1dd 
    /*00031f9c*/ UXTB        R1, R1 
    /*00031fa0*/ UBFX        R2, R2, #5, #2 
    /*00031fa4*/ BFI         R1, R2, #5, #2 
    /*00031fa8*/ STRB        R1, [R3, #477]              @ 0x1dd 
    /*00031fac*/ LDRB        R2, [LR, R8]! 
    /*00031fb0*/ ADD         R1, R6, #480                @ 0x1e0 
    /*00031fb4*/ STRB        R2, [IP, R8]! 
    /*00031fb8*/ LDRB        R2, [LR, #1] 
    /*00031fbc*/ STRB        R2, [IP, #1] 
    /*00031fc0*/ LDRH        R1, [R1, #2] 
    /*00031fc4*/ LDRH        R2, [R0, #2] 
    /*00031fc8*/ BFI         R2, R1, #0, #10 
    /*00031fcc*/ STRH        R2, [R0, #2] 
    /*00031fd0*/ LDRB        R2, [R6, #483]              @ 0x1e3 
    /*00031fd4*/ LDRB        R1, [R3, #483]              @ 0x1e3 
    /*00031fd8*/ UBFX        R2, R2, #2, #4 
    /*00031fdc*/ BFI         R1, R2, #2, #4 
    /*00031fe0*/ STRB        R1, [R3, #483]              @ 0x1e3 
    /*00031fe4*/ LDRB        R0, [R6, #485]              @ 0x1e5 
    /*00031fe8*/ LSR         R0, R0, #4 
    /*00031fec*/ B           V16cv500CalcNRxV2AotoParam_x31b58
    V16cv500CalcNRxV2AotoParam_x31ff0:
    /*00031ff0*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00031ff4*/ LDRH        R3, [R3, R4] 
    /*00031ff8*/ BFI         R3, R2, #1, #9 
    /*00031ffc*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032000*/ STRH        R3, [R2, R4] 
    /*00032004*/ LDR         R3, [SP, #8] 
    /*00032008*/ LDRB        R0, [R3, #500]              @ 0x1f4 
    /*0003200c*/ LSR         R0, R0, #3 
    V16cv500CalcNRxV2AotoParam_x32010:
    /*00032010*/ LDR         R3, [SP, #8] 
    /*00032014*/ MOV         R7, #0 
    /*00032018*/ ADD         R8, R3, #512                @ 0x200 
    /*0003201c*/ LDR         R3, [SP, #80]               @ 0x50 
    /*00032020*/ ADD         R8, R8, #3 
    /*00032024*/ ADD         R3, R3, #508                @ 0x1fc 
    /*00032028*/ MOV         R2, R3 
    /*0003202c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032030*/ ADD         R2, R2, #2 
    /*00032034*/ LDRB        R3, [R3, #500]              @ 0x1f4 
    /*00032038*/ STR         R2, [SP, #16] 
    /*0003203c*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032040*/ BFI         R3, R0, #3, #5 
    /*00032044*/ ADD         R2, R2, #516                @ 0x204 
    /*00032048*/ STR         R2, [SP, #12] 
    /*0003204c*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032050*/ STRB        R3, [R2, #500]              @ 0x1f4 
    V16cv500CalcNRxV2AotoParam_x32054:
    /*00032054*/ MOV         R3, #24 
    /*00032058*/ CMP         R9, FP 
    /*0003205c*/ MUL         R4, R3, R7 
    /*00032060*/ LDR         R3, [SP, #8] 
    /*00032064*/ ADD         R5, R3, R4 
    /*00032068*/ ADD         R6, R5, #496                @ 0x1f0 
    /*0003206c*/ LDRB        R2, [R5, #502]              @ 0x1f6 
    /*00032070*/ AND         R2, R2, #15 
    /*00032074*/ BLS         V16cv500CalcNRxV2AotoParam_x3250c
    /*00032078*/ LDR         R3, [SP, #80]               @ 0x50 
    /*0003207c*/ CMP         R9, SL 
    /*00032080*/ ADD         R3, R3, R4 
    /*00032084*/ STR         R3, [SP, #28] 
    /*00032088*/ ADD         R1, R3, #496                @ 0x1f0 
    /*0003208c*/ STR         R1, [SP, #20] 
    /*00032090*/ LDRB        R3, [R3, #502]              @ 0x1f6 
    /*00032094*/ AND         R0, R3, #15 
    /*00032098*/ BCS         V16cv500CalcNRxV2AotoParam_x32630
    /*0003209c*/ LDR         IP, [SP, #84]               @ 0x54 
    /*000320a0*/ MOV         R3, SL 
    /*000320a4*/ STR         R0, [SP] 
    /*000320a8*/ MOV         R1, FP 
    /*000320ac*/ MOV         R0, R9 
    /*000320b0*/ ADD         R4, IP, R4 
    /*000320b4*/ BL          0x000000000002D4B4 
    /*000320b8*/ MOV         R3, SL 
    /*000320bc*/ LDRB        R2, [R4, #502]              @ 0x1f6 
    /*000320c0*/ MOV         R1, FP 
    /*000320c4*/ BFI         R2, R0, #0, #4 
    /*000320c8*/ LDR         R0, [SP, #20] 
    /*000320cc*/ STRB        R2, [R4, #502]              @ 0x1f6 
    /*000320d0*/ LDRH        R2, [R6, #6] 
    /*000320d4*/ LDRH        IP, [R0, #6] 
    /*000320d8*/ MOV         R0, R9 
    /*000320dc*/ UBFX        R2, R2, #4, #10 
    /*000320e0*/ UBFX        IP, IP, #4, #10 
    /*000320e4*/ STR         IP, [SP] 
    /*000320e8*/ BL          0x000000000002D4B4 
    /*000320ec*/ ADD         IP, R4, #496                @ 0x1f0 
    /*000320f0*/ STR         IP, [SP, #24] 
    /*000320f4*/ MOV         R3, SL 
    /*000320f8*/ LDRH        R2, [IP, #6] 
    /*000320fc*/ MOV         R1, FP 
    /*00032100*/ BFI         R2, R0, #4, #10 
    /*00032104*/ STRH        R2, [IP, #6] 
    /*00032108*/ LDRB        R2, [R5, #503]              @ 0x1f7 
    /*0003210c*/ MOV         R0, R9 
    /*00032110*/ LDRB        IP, [R4, #503]              @ 0x1f7 
    /*00032114*/ LSR         R2, R2, #6 
    /*00032118*/ BFI         IP, R2, #6, #2 
    /*0003211c*/ STRB        IP, [R4, #503]              @ 0x1f7 
    /*00032120*/ LDR         R2, [SP, #28] 
    /*00032124*/ LDRB        IP, [R2, #516]              @ 0x204 
    /*00032128*/ LDRB        R2, [R5, #516]              @ 0x204 
    /*0003212c*/ AND         IP, IP, #15 
    /*00032130*/ STR         IP, [SP] 
    /*00032134*/ AND         R2, R2, #15 
    /*00032138*/ BL          0x000000000002D4B4 
    /*0003213c*/ LDRB        IP, [R4, #516]              @ 0x204 
    /*00032140*/ MOV         R3, SL 
    /*00032144*/ MOV         R1, FP 
    /*00032148*/ BFI         IP, R0, #0, #4 
    /*0003214c*/ STRB        IP, [R4, #516]              @ 0x204 
    /*00032150*/ LDRB        IP, [R5, #516]              @ 0x204 
    /*00032154*/ MOV         R0, R9 
    /*00032158*/ LDRB        LR, [R4, #516]              @ 0x204 
    /*0003215c*/ LSR         IP, IP, #4 
    /*00032160*/ BFI         LR, IP, #4, #4 
    /*00032164*/ STRB        LR, [R4, #516]              @ 0x204 
    /*00032168*/ LDR         LR, [SP, #20] 
    /*0003216c*/ LDRH        R2, [R6, #10] 
    /*00032170*/ LDRH        IP, [LR, #10] 
    /*00032174*/ UBFX        R2, R2, #0, #10 
    /*00032178*/ UBFX        IP, IP, #0, #10 
    /*0003217c*/ STR         IP, [SP] 
    /*00032180*/ BL          0x000000000002D4B4 
    /*00032184*/ LDR         IP, [SP, #24] 
    /*00032188*/ MOV         R3, SL 
    /*0003218c*/ MOV         R1, FP 
    /*00032190*/ LDRH        R2, [IP, #10] 
    /*00032194*/ BFI         R2, R0, #0, #10 
    /*00032198*/ STRH        R2, [IP, #10] 
    /*0003219c*/ LDR         R2, [SP, #28] 
    /*000321a0*/ MOV         R0, R9 
    /*000321a4*/ LDRB        IP, [R2, #507]              @ 0x1fb 
    /*000321a8*/ LDRB        R2, [R5, #507]              @ 0x1fb 
    /*000321ac*/ UBFX        IP, IP, #2, #5 
    /*000321b0*/ STR         IP, [SP] 
    /*000321b4*/ UBFX        R2, R2, #2, #5 
    /*000321b8*/ BL          0x000000000002D4B4 
    /*000321bc*/ LDRB        IP, [R4, #507]              @ 0x1fb 
    /*000321c0*/ MOV         R3, SL 
    /*000321c4*/ MOV         R1, FP 
    /*000321c8*/ BFI         IP, R0, #2, #5 
    /*000321cc*/ STRB        IP, [R4, #507]              @ 0x1fb 
    /*000321d0*/ LDRB        IP, [R4, #524]              @ 0x20c 
    /*000321d4*/ MOV         R0, R9 
    /*000321d8*/ LDRB        LR, [R5, #524]              @ 0x20c 
    /*000321dc*/ BFI         IP, LR, #0, #3 
    /*000321e0*/ STRB        IP, [R4, #524]              @ 0x20c 
    /*000321e4*/ LDRB        R2, [R5, #507]              @ 0x1fb 
    /*000321e8*/ LDRB        IP, [R4, #507]              @ 0x1fb 
    /*000321ec*/ LSR         R2, R2, #7 
    /*000321f0*/ BFI         IP, R2, #7, #1 
    /*000321f4*/ STRB        IP, [R4, #507]              @ 0x1fb 
    /*000321f8*/ LDR         LR, [SP, #20] 
    /*000321fc*/ LDRB        R2, [R6, #8] 
    /*00032200*/ LDRB        IP, [LR, #8] 
    /*00032204*/ AND         R2, R2, #15 
    /*00032208*/ AND         IP, IP, #15 
    /*0003220c*/ STR         IP, [SP] 
    /*00032210*/ BL          0x000000000002D4B4 
    /*00032214*/ LDR         IP, [SP, #24] 
    /*00032218*/ MOV         R3, SL 
    /*0003221c*/ MOV         R1, FP 
    /*00032220*/ LDRB        R2, [IP, #8] 
    /*00032224*/ BFI         R2, R0, #0, #4 
    /*00032228*/ STRB        R2, [IP, #8] 
    /*0003222c*/ LDR         R0, [SP, #20] 
    /*00032230*/ LDRH        R2, [R6, #8] 
    /*00032234*/ LDRH        IP, [R0, #8] 
    /*00032238*/ UBFX        R2, R2, #4, #10 
    /*0003223c*/ MOV         R0, R9 
    /*00032240*/ UBFX        IP, IP, #4, #10 
    /*00032244*/ STR         IP, [SP] 
    /*00032248*/ BL          0x000000000002D4B4 
    /*0003224c*/ LDR         IP, [SP, #24] 
    /*00032250*/ MOV         R3, SL 
    /*00032254*/ MOV         R1, FP 
    /*00032258*/ LDRH        R2, [IP, #8] 
    /*0003225c*/ BFI         R2, R0, #4, #10 
    /*00032260*/ STRH        R2, [IP, #8] 
    /*00032264*/ LDRB        R2, [R5, #505]              @ 0x1f9 
    /*00032268*/ MOV         R0, R9 
    /*0003226c*/ LDRB        IP, [R4, #505]              @ 0x1f9 
    /*00032270*/ LSR         R2, R2, #6 
    /*00032274*/ BFI         IP, R2, #6, #2 
    /*00032278*/ STRB        IP, [R4, #505]              @ 0x1f9 
    /*0003227c*/ LDR         R2, [SP, #28] 
    /*00032280*/ LDRB        IP, [R2, #523]              @ 0x20b 
    /*00032284*/ LDRB        R2, [R5, #523]              @ 0x20b 
    /*00032288*/ AND         IP, IP, #15 
    /*0003228c*/ STR         IP, [SP] 
    /*00032290*/ AND         R2, R2, #15 
    /*00032294*/ BL          0x000000000002D4B4 
    /*00032298*/ LDRB        R2, [R4, #523]              @ 0x20b 
    /*0003229c*/ MOV         R3, SL 
    /*000322a0*/ MOV         R1, FP 
    /*000322a4*/ BFI         R2, R0, #0, #4 
    /*000322a8*/ STRB        R2, [R4, #523]              @ 0x20b 
    /*000322ac*/ LDRB        R2, [R5, #523]              @ 0x20b 
    /*000322b0*/ MOV         R0, R9 
    /*000322b4*/ LDRB        IP, [R4, #523]              @ 0x20b 
    /*000322b8*/ LSR         R2, R2, #4 
    /*000322bc*/ BFI         IP, R2, #4, #4 
    /*000322c0*/ STRB        IP, [R4, #523]              @ 0x20b 
    /*000322c4*/ LDR         LR, [SP, #20] 
    /*000322c8*/ LDRH        R2, [R6, #12] 
    /*000322cc*/ LDRH        IP, [LR, #12] 
    /*000322d0*/ UBFX        R2, R2, #0, #10 
    /*000322d4*/ UBFX        IP, IP, #0, #10 
    /*000322d8*/ STR         IP, [SP] 
    /*000322dc*/ BL          0x000000000002D4B4 
    /*000322e0*/ LDR         IP, [SP, #24] 
    /*000322e4*/ MOV         R3, SL 
    /*000322e8*/ MOV         R1, FP 
    /*000322ec*/ LDRH        R2, [IP, #12] 
    /*000322f0*/ BFI         R2, R0, #0, #10 
    /*000322f4*/ STRH        R2, [IP, #12] 
    /*000322f8*/ LDR         R2, [SP, #28] 
    /*000322fc*/ MOV         R0, R9 
    /*00032300*/ LDRB        IP, [R2, #509]              @ 0x1fd 
    /*00032304*/ LDRB        R2, [R5, #509]              @ 0x1fd 
    /*00032308*/ UBFX        IP, IP, #2, #5 
    /*0003230c*/ STR         IP, [SP] 
    /*00032310*/ UBFX        R2, R2, #2, #5 
    /*00032314*/ BL          0x000000000002D4B4 
    V16cv500CalcNRxV2AotoParam_x32318:
    /*00032318*/ MOV         R3, #24 
    /*0003231c*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032320*/ MUL         R3, R3, R7 
    /*00032324*/ LDR         R1, [SP, #8] 
    /*00032328*/ LDR         R6, [SP, #12] 
    /*0003232c*/ SUB         R4, R8, #6 
    /*00032330*/ ADD         R2, R2, R3 
    /*00032334*/ ADD         R3, R1, R3 
    /*00032338*/ LDRB        R1, [R2, #509]              @ 0x1fd 
    /*0003233c*/ BFI         R1, R0, #2, #5 
    /*00032340*/ STRB        R1, [R2, #509]              @ 0x1fd 
    /*00032344*/ LDRB        R3, [R3, #509]              @ 0x1fd 
    /*00032348*/ UXTB        R1, R1 
    /*0003234c*/ LDR         R5, [SP, #16] 
    /*00032350*/ LSR         R3, R3, #7 
    /*00032354*/ BFI         R1, R3, #7, #1 
    /*00032358*/ STRB        R1, [R2, #509]              @ 0x1fd 
    /*0003235c*/ B           V16cv500CalcNRxV2AotoParam_x323b0
    V16cv500CalcNRxV2AotoParam_x32360:
    /*00032360*/ CMP         R9, SL 
    /*00032364*/ MOV         R3, SL 
    /*00032368*/ MOV         R1, FP 
    /*0003236c*/ MOV         R0, R9 
    /*00032370*/ LDRB        IP, [R5] 
    /*00032374*/ BCS         V16cv500CalcNRxV2AotoParam_x32500
    /*00032378*/ STR         IP, [SP] 
    /*0003237c*/ BL          0x000000000002D4B4 
    /*00032380*/ MOV         R3, SL 
    /*00032384*/ MOV         R1, FP 
    /*00032388*/ STRB        R0, [R6, #-6] 
    /*0003238c*/ MOV         R0, R9 
    /*00032390*/ LDRB        IP, [R5, #7] 
    /*00032394*/ LDRB        R2, [R4, #7] 
    /*00032398*/ STR         IP, [SP] 
    /*0003239c*/ BL          0x000000000002D4B4 
    V16cv500CalcNRxV2AotoParam_x323a0:
    /*000323a0*/ CMP         R8, R4 
    /*000323a4*/ STRB        R0, [R6, #1]! 
    /*000323a8*/ ADD         R5, R5, #1 
    /*000323ac*/ BEQ         V16cv500CalcNRxV2AotoParam_x323d4
    V16cv500CalcNRxV2AotoParam_x323b0:
    /*000323b0*/ CMP         R9, FP 
    /*000323b4*/ LDRB        R2, [R4, #1]! 
    /*000323b8*/ BHI         V16cv500CalcNRxV2AotoParam_x32360
    /*000323bc*/ STRB        R2, [R6, #-6] 
    /*000323c0*/ CMP         R8, R4 
    /*000323c4*/ LDRB        R0, [R4, #7] 
    /*000323c8*/ ADD         R5, R5, #1 
    /*000323cc*/ STRB        R0, [R6, #1]! 
    /*000323d0*/ BNE         V16cv500CalcNRxV2AotoParam_x323b0
    V16cv500CalcNRxV2AotoParam_x323d4:
    /*000323d4*/ MOV         R3, #24 
    /*000323d8*/ LDR         R2, [SP, #16] 
    /*000323dc*/ MUL         R3, R3, R7 
    /*000323e0*/ LDR         R5, [SP, #8] 
    /*000323e4*/ ADD         R2, R2, #24 
    /*000323e8*/ STR         R2, [SP, #16] 
    /*000323ec*/ LDR         R2, [SP, #12] 
    /*000323f0*/ ADD         R7, R7, #1 
    /*000323f4*/ LDR         R1, [SP, #84]               @ 0x54 
    /*000323f8*/ CMP         R7, #2 
    /*000323fc*/ ADD         R2, R2, #24 
    /*00032400*/ STR         R2, [SP, #12] 
    /*00032404*/ ADD         R2, R5, R3 
    /*00032408*/ ADD         R3, R1, R3 
    /*0003240c*/ ADD         R2, R2, #512                @ 0x200 
    /*00032410*/ ADD         R8, R8, #24 
    /*00032414*/ LDRB        R1, [R2, #12] 
    /*00032418*/ LDRB        R0, [R3, #524]              @ 0x20c 
    /*0003241c*/ UBFX        R1, R1, #3, #2 
    /*00032420*/ BFI         R0, R1, #3, #2 
    /*00032424*/ STRB        R0, [R3, #524]              @ 0x20c 
    /*00032428*/ LDRB        R2, [R2, #12] 
    /*0003242c*/ UXTB        R1, R0 
    /*00032430*/ UBFX        R2, R2, #5, #1 
    /*00032434*/ BFI         R1, R2, #5, #1 
    /*00032438*/ STRB        R1, [R3, #524]              @ 0x20c 
    /*0003243c*/ BNE         V16cv500CalcNRxV2AotoParam_x32054
    /*00032440*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032444*/ CMP         R9, FP 
    /*00032448*/ LDRB        R2, [R5, #712]              @ 0x2c8 
    /*0003244c*/ LDRB        R3, [R3, #712]              @ 0x2c8 
    /*00032450*/ BFI         R3, R2, #0, #1 
    /*00032454*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032458*/ STRB        R3, [R2, #712]              @ 0x2c8 
    /*0003245c*/ LDRB        R2, [R5, #554]              @ 0x22a 
    /*00032460*/ BLS         V16cv500CalcNRxV2AotoParam_x32760
    /*00032464*/ LDR         R3, [SP, #80]               @ 0x50 
    /*00032468*/ CMP         R9, SL 
    /*0003246c*/ LDRB        R3, [R3, #554]              @ 0x22a 
    /*00032470*/ BCC         V16cv500CalcNRxV2AotoParam_x32d94
    /*00032474*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032478*/ MOVW        R0, #562                    @ 0x232 
    /*0003247c*/ LDR         LR, [SP, #84]               @ 0x54 
    /*00032480*/ STRB        R3, [R2, #554]              @ 0x22a 
    /*00032484*/ MOVW        R2, #558                    @ 0x22e 
    /*00032488*/ LDR         R3, [SP, #80]               @ 0x50 
    /*0003248c*/ LDRB        IP, [R3, #555]              @ 0x22b 
    /*00032490*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032494*/ LDRH        R1, [R3, R2] 
    /*00032498*/ ADD         R3, R3, #560                @ 0x230 
    /*0003249c*/ STRB        IP, [LR, #555]              @ 0x22b 
    /*000324a0*/ LDR         IP, [SP, #80]               @ 0x50 
    /*000324a4*/ LDRB        IP, [IP, #556]              @ 0x22c 
    /*000324a8*/ STRB        IP, [LR, #556]              @ 0x22c 
    /*000324ac*/ LDR         IP, [SP, #80]               @ 0x50 
    /*000324b0*/ LDRB        IP, [IP, #557]              @ 0x22d 
    /*000324b4*/ STRB        IP, [LR, #557]              @ 0x22d 
    /*000324b8*/ LDR         IP, [SP, #80]               @ 0x50 
    /*000324bc*/ LDRH        IP, [IP, R2] 
    /*000324c0*/ BFI         R1, IP, #0, #10 
    /*000324c4*/ STRH        R1, [LR, R2] 
    /*000324c8*/ LDR         R1, [SP, #80]               @ 0x50 
    /*000324cc*/ LDRB        R2, [LR, #562]              @ 0x232 
    /*000324d0*/ LDRB        R1, [R1, #562]              @ 0x232 
    /*000324d4*/ BFI         R2, R1, #0, #5 
    /*000324d8*/ STRB        R2, [LR, #562]              @ 0x232 
    /*000324dc*/ LDR         R2, [SP, #80]               @ 0x50 
    /*000324e0*/ LDRH        R1, [R3, #2] 
    /*000324e4*/ LDRH        R2, [R2, R0] 
    /*000324e8*/ UBFX        R2, R2, #5, #5 
    /*000324ec*/ BFI         R1, R2, #5, #5 
    /*000324f0*/ STRH        R1, [R3, #2] 
    /*000324f4*/ LDR         R3, [SP, #80]               @ 0x50 
    /*000324f8*/ LDRB        R0, [R3, #564]              @ 0x234 
    /*000324fc*/ B           V16cv500CalcNRxV2AotoParam_x327d0
    V16cv500CalcNRxV2AotoParam_x32500:
    /*00032500*/ STRB        IP, [R6, #-6] 
    /*00032504*/ LDRB        R0, [R5, #7] 
    /*00032508*/ B           V16cv500CalcNRxV2AotoParam_x323a0
    V16cv500CalcNRxV2AotoParam_x3250c:
    /*0003250c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032510*/ ADD         R3, R3, R4 
    /*00032514*/ ADD         R1, R3, #496                @ 0x1f0 
    /*00032518*/ LDRB        R4, [R3, #502]              @ 0x1f6 
    /*0003251c*/ BFI         R4, R2, #0, #4 
    /*00032520*/ STRB        R4, [R3, #502]              @ 0x1f6 
    /*00032524*/ LDRH        R2, [R6, #6] 
    /*00032528*/ LDRH        R4, [R1, #6] 
    /*0003252c*/ UBFX        R2, R2, #4, #10 
    /*00032530*/ BFI         R4, R2, #4, #10 
    /*00032534*/ STRH        R4, [R1, #6] 
    /*00032538*/ LDRB        R2, [R5, #503]              @ 0x1f7 
    /*0003253c*/ LDRB        R4, [R3, #503]              @ 0x1f7 
    /*00032540*/ LSR         R2, R2, #6 
    /*00032544*/ BFI         R4, R2, #6, #2 
    /*00032548*/ LDRB        R2, [R3, #516]              @ 0x204 
    /*0003254c*/ STRB        R4, [R3, #503]              @ 0x1f7 
    /*00032550*/ LDRB        R4, [R5, #516]              @ 0x204 
    /*00032554*/ BFI         R2, R4, #0, #4 
    /*00032558*/ STRB        R2, [R3, #516]              @ 0x204 
    /*0003255c*/ LDRB        R2, [R5, #516]              @ 0x204 
    /*00032560*/ LDRB        LR, [R3, #516]              @ 0x204 
    /*00032564*/ LSR         R2, R2, #4 
    /*00032568*/ BFI         LR, R2, #4, #4 
    /*0003256c*/ STRB        LR, [R3, #516]              @ 0x204 
    /*00032570*/ LDRH        R0, [R6, #10] 
    /*00032574*/ LDRH        R2, [R1, #10] 
    /*00032578*/ BFI         R2, R0, #0, #10 
    /*0003257c*/ STRH        R2, [R1, #10] 
    /*00032580*/ LDRB        R2, [R5, #507]              @ 0x1fb 
    /*00032584*/ LDRB        R0, [R3, #507]              @ 0x1fb 
    /*00032588*/ UBFX        R2, R2, #2, #5 
    /*0003258c*/ BFI         R0, R2, #2, #5 
    /*00032590*/ LDRB        R2, [R3, #524]              @ 0x20c 
    /*00032594*/ STRB        R0, [R3, #507]              @ 0x1fb 
    /*00032598*/ LDRB        R0, [R5, #524]              @ 0x20c 
    /*0003259c*/ BFI         R2, R0, #0, #3 
    /*000325a0*/ STRB        R2, [R3, #524]              @ 0x20c 
    /*000325a4*/ LDRB        R2, [R5, #507]              @ 0x1fb 
    /*000325a8*/ LDRB        R0, [R3, #507]              @ 0x1fb 
    /*000325ac*/ LSR         R2, R2, #7 
    /*000325b0*/ BFI         R0, R2, #7, #1 
    /*000325b4*/ LDRB        R2, [R3, #504]              @ 0x1f8 
    /*000325b8*/ STRB        R0, [R3, #507]              @ 0x1fb 
    /*000325bc*/ LDRB        R0, [R6, #8] 
    /*000325c0*/ BFI         R2, R0, #0, #4 
    /*000325c4*/ STRB        R2, [R3, #504]              @ 0x1f8 
    /*000325c8*/ LDRH        R2, [R6, #8] 
    /*000325cc*/ LDRH        R0, [R1, #8] 
    /*000325d0*/ UBFX        R2, R2, #4, #10 
    /*000325d4*/ BFI         R0, R2, #4, #10 
    /*000325d8*/ STRH        R0, [R1, #8] 
    /*000325dc*/ LDRB        R2, [R5, #505]              @ 0x1f9 
    /*000325e0*/ LDRB        IP, [R3, #505]              @ 0x1f9 
    /*000325e4*/ LDRB        R0, [R3, #523]              @ 0x20b 
    /*000325e8*/ LSR         R2, R2, #6 
    /*000325ec*/ BFI         IP, R2, #6, #2 
    /*000325f0*/ STRB        IP, [R3, #505]              @ 0x1f9 
    /*000325f4*/ LDRB        R2, [R5, #523]              @ 0x20b 
    /*000325f8*/ BFI         R0, R2, #0, #4 
    /*000325fc*/ STRB        R0, [R3, #523]              @ 0x20b 
    /*00032600*/ LDRB        R2, [R5, #523]              @ 0x20b 
    /*00032604*/ UXTB        R0, R0 
    /*00032608*/ LSR         R2, R2, #4 
    /*0003260c*/ BFI         R0, R2, #4, #4 
    /*00032610*/ STRB        R0, [R3, #523]              @ 0x20b 
    /*00032614*/ LDRH        R2, [R6, #12] 
    /*00032618*/ LDRH        R3, [R1, #12] 
    /*0003261c*/ BFI         R3, R2, #0, #10 
    /*00032620*/ STRH        R3, [R1, #12] 
    /*00032624*/ LDRB        R0, [R5, #509]              @ 0x1fd 
    /*00032628*/ UBFX        R0, R0, #2, #5 
    /*0003262c*/ B           V16cv500CalcNRxV2AotoParam_x32318
    V16cv500CalcNRxV2AotoParam_x32630:
    /*00032630*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032634*/ ADD         R3, R3, R4 
    /*00032638*/ LDR         R4, [SP, #20] 
    /*0003263c*/ ADD         R2, R3, #496                @ 0x1f0 
    /*00032640*/ LDRB        LR, [R3, #502]              @ 0x1f6 
    /*00032644*/ BFI         LR, R0, #0, #4 
    /*00032648*/ STRB        LR, [R3, #502]              @ 0x1f6 
    /*0003264c*/ LDRH        R0, [R4, #6] 
    /*00032650*/ LDRH        LR, [R2, #6] 
    /*00032654*/ UBFX        R0, R0, #4, #10 
    /*00032658*/ BFI         LR, R0, #4, #10 
    /*0003265c*/ STRH        LR, [R2, #6] 
    /*00032660*/ LDRB        R0, [R5, #503]              @ 0x1f7 
    /*00032664*/ LDRB        LR, [R3, #503]              @ 0x1f7 
    /*00032668*/ LSR         R0, R0, #6 
    /*0003266c*/ BFI         LR, R0, #6, #2 
    /*00032670*/ STRB        LR, [R3, #503]              @ 0x1f7 
    /*00032674*/ LDR         R6, [SP, #28] 
    /*00032678*/ LDRB        R0, [R3, #516]              @ 0x204 
    /*0003267c*/ LDRB        LR, [R6, #516]              @ 0x204 
    /*00032680*/ BFI         R0, LR, #0, #4 
    /*00032684*/ STRB        R0, [R3, #516]              @ 0x204 
    /*00032688*/ LDRB        R0, [R5, #516]              @ 0x204 
    /*0003268c*/ LDRB        LR, [R3, #516]              @ 0x204 
    /*00032690*/ LSR         R0, R0, #4 
    /*00032694*/ BFI         LR, R0, #4, #4 
    /*00032698*/ STRB        LR, [R3, #516]              @ 0x204 
    /*0003269c*/ LDRH        R0, [R4, #10] 
    /*000326a0*/ MOV         LR, R4 
    /*000326a4*/ LDRH        R1, [R2, #10] 
    /*000326a8*/ BFI         R1, R0, #0, #10 
    /*000326ac*/ STRH        R1, [R2, #10] 
    /*000326b0*/ LDRB        R1, [R6, #507]              @ 0x1fb 
    /*000326b4*/ LDRB        R0, [R3, #507]              @ 0x1fb 
    /*000326b8*/ UBFX        R1, R1, #2, #5 
    /*000326bc*/ BFI         R0, R1, #2, #5 
    /*000326c0*/ LDRB        R1, [R3, #524]              @ 0x20c 
    /*000326c4*/ STRB        R0, [R3, #507]              @ 0x1fb 
    /*000326c8*/ LDRB        R0, [R5, #524]              @ 0x20c 
    /*000326cc*/ BFI         R1, R0, #0, #3 
    /*000326d0*/ STRB        R1, [R3, #524]              @ 0x20c 
    /*000326d4*/ LDRB        R1, [R5, #507]              @ 0x1fb 
    /*000326d8*/ LDRB        R0, [R3, #507]              @ 0x1fb 
    /*000326dc*/ LSR         R1, R1, #7 
    /*000326e0*/ BFI         R0, R1, #7, #1 
    /*000326e4*/ LDRB        R1, [R3, #504]              @ 0x1f8 
    /*000326e8*/ STRB        R0, [R3, #507]              @ 0x1fb 
    /*000326ec*/ LDRB        R0, [R4, #8] 
    /*000326f0*/ BFI         R1, R0, #0, #4 
    /*000326f4*/ STRB        R1, [R3, #504]              @ 0x1f8 
    /*000326f8*/ LDRH        R1, [R4, #8] 
    /*000326fc*/ LDRH        R0, [R2, #8] 
    /*00032700*/ UBFX        R1, R1, #4, #10 
    /*00032704*/ BFI         R0, R1, #4, #10 
    /*00032708*/ STRH        R0, [R2, #8] 
    /*0003270c*/ LDRB        R1, [R5, #505]              @ 0x1f9 
    /*00032710*/ LDRB        IP, [R3, #505]              @ 0x1f9 
    /*00032714*/ LDRB        R0, [R3, #523]              @ 0x20b 
    /*00032718*/ LSR         R1, R1, #6 
    /*0003271c*/ BFI         IP, R1, #6, #2 
    /*00032720*/ STRB        IP, [R3, #505]              @ 0x1f9 
    /*00032724*/ LDRB        R1, [R6, #523]              @ 0x20b 
    /*00032728*/ BFI         R0, R1, #0, #4 
    /*0003272c*/ STRB        R0, [R3, #523]              @ 0x20b 
    /*00032730*/ LDRB        R1, [R5, #523]              @ 0x20b 
    /*00032734*/ UXTB        R0, R0 
    /*00032738*/ LSR         R1, R1, #4 
    /*0003273c*/ BFI         R0, R1, #4, #4 
    /*00032740*/ STRB        R0, [R3, #523]              @ 0x20b 
    /*00032744*/ LDRH        R1, [LR, #12] 
    /*00032748*/ LDRH        R3, [R2, #12] 
    /*0003274c*/ BFI         R3, R1, #0, #10 
    /*00032750*/ STRH        R3, [R2, #12] 
    /*00032754*/ LDRB        R0, [R6, #509]              @ 0x1fd 
    /*00032758*/ UBFX        R0, R0, #2, #5 
    /*0003275c*/ B           V16cv500CalcNRxV2AotoParam_x32318
    V16cv500CalcNRxV2AotoParam_x32760:
    /*00032760*/ LDR         LR, [SP, #8] 
    /*00032764*/ MOVW        R0, #562                    @ 0x232 
    /*00032768*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0003276c*/ LDR         R4, [SP, #84]               @ 0x54 
    /*00032770*/ STRB        R2, [R3, #554]              @ 0x22a 
    /*00032774*/ MOVW        R2, #558                    @ 0x22e 
    /*00032778*/ LDRB        IP, [LR, #555]              @ 0x22b 
    /*0003277c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032780*/ LDRH        R1, [R3, R2] 
    /*00032784*/ ADD         R3, R3, #560                @ 0x230 
    /*00032788*/ STRB        IP, [R4, #555]              @ 0x22b 
    /*0003278c*/ LDRB        IP, [LR, #556]              @ 0x22c 
    /*00032790*/ STRB        IP, [R4, #556]              @ 0x22c 
    /*00032794*/ LDRB        IP, [LR, #557]              @ 0x22d 
    /*00032798*/ STRB        IP, [R4, #557]              @ 0x22d 
    /*0003279c*/ LDRH        IP, [LR, R2] 
    /*000327a0*/ BFI         R1, IP, #0, #10 
    /*000327a4*/ STRH        R1, [R4, R2] 
    /*000327a8*/ LDRB        R1, [LR, #562]              @ 0x232 
    /*000327ac*/ LDRB        R2, [R4, #562]              @ 0x232 
    /*000327b0*/ BFI         R2, R1, #0, #5 
    /*000327b4*/ STRB        R2, [R4, #562]              @ 0x232 
    /*000327b8*/ LDRH        R2, [LR, R0] 
    /*000327bc*/ LDRH        R1, [R3, #2] 
    /*000327c0*/ UBFX        R2, R2, #5, #5 
    /*000327c4*/ BFI         R1, R2, #5, #5 
    /*000327c8*/ STRH        R1, [R3, #2] 
    /*000327cc*/ LDRB        R0, [LR, #564]              @ 0x234 
    V16cv500CalcNRxV2AotoParam_x327d0:
    /*000327d0*/ LDR         R3, [SP, #8] 
    /*000327d4*/ MOVW        R4, #565                    @ 0x235 
    /*000327d8*/ ADD         R7, R3, #568                @ 0x238 
    /*000327dc*/ ADD         R5, R3, R4 
    /*000327e0*/ LDR         R3, [SP, #80]               @ 0x50 
    /*000327e4*/ ADD         R6, R3, R4 
    /*000327e8*/ LDR         R3, [SP, #84]               @ 0x54 
    /*000327ec*/ ADD         R4, R3, R4 
    /*000327f0*/ STRB        R0, [R3, #564]              @ 0x234 
    V16cv500CalcNRxV2AotoParam_x327f4:
    /*000327f4*/ CMP         R9, FP 
    /*000327f8*/ LDRB        R2, [R5], #1 
    /*000327fc*/ LDRB        IP, [R6], #1 
    /*00032800*/ BLS         V16cv500CalcNRxV2AotoParam_x32828
    /*00032804*/ CMP         R9, SL 
    /*00032808*/ MOV         R3, SL 
    /*0003280c*/ MOV         R1, FP 
    /*00032810*/ MOV         R0, R9 
    /*00032814*/ MOVCS       R2, IP 
    /*00032818*/ BCS         V16cv500CalcNRxV2AotoParam_x32828
    /*0003281c*/ STR         IP, [SP] 
    /*00032820*/ BL          0x000000000002D4B4 
    /*00032824*/ MOV         R2, R0 
    V16cv500CalcNRxV2AotoParam_x32828:
    /*00032828*/ CMP         R5, R7 
    /*0003282c*/ STRB        R2, [R4], #1 
    /*00032830*/ BNE         V16cv500CalcNRxV2AotoParam_x327f4
    /*00032834*/ LDR         R6, [SP, #8] 
    /*00032838*/ CMP         R9, FP 
    /*0003283c*/ LDRB        R2, [R6, #568]              @ 0x238 
    /*00032840*/ BLS         V16cv500CalcNRxV2AotoParam_x32954
    /*00032844*/ LDR         R3, [SP, #80]               @ 0x50 
    /*00032848*/ CMP         R9, SL 
    /*0003284c*/ LDRB        R3, [R3, #568]              @ 0x238 
    /*00032850*/ BCC         V16cv500CalcNRxV2AotoParam_x32af0
    /*00032854*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032858*/ LDR         R1, [SP, #84]               @ 0x54 
    /*0003285c*/ LDR         LR, [SP, #84]               @ 0x54 
    /*00032860*/ STRB        R3, [R2, #568]              @ 0x238 
    /*00032864*/ MOVW        R2, #578                    @ 0x242 
    /*00032868*/ LDR         R3, [SP, #80]               @ 0x50 
    /*0003286c*/ LDRH        R0, [R1, R2] 
    /*00032870*/ LDR         R4, [SP, #84]               @ 0x54 
    /*00032874*/ LDRB        IP, [R3, #571]              @ 0x23b 
    /*00032878*/ LDR         R1, [SP, #80]               @ 0x50 
    /*0003287c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032880*/ STRB        IP, [LR, #571]              @ 0x23b 
    /*00032884*/ ADD         R1, R1, #580                @ 0x244 
    /*00032888*/ LDR         IP, [SP, #80]               @ 0x50 
    /*0003288c*/ ADD         R3, R3, R2 
    /*00032890*/ LDRB        LR, [IP, #574]              @ 0x23e 
    /*00032894*/ MOVW        IP, #582                    @ 0x246 
    /*00032898*/ STRB        LR, [R4, #574]              @ 0x23e 
    /*0003289c*/ LDR         LR, [SP, #80]               @ 0x50 
    /*000328a0*/ LDRB        LR, [LR, #569]              @ 0x239 
    /*000328a4*/ STRB        LR, [R4, #569]              @ 0x239 
    /*000328a8*/ LDR         LR, [SP, #80]               @ 0x50 
    /*000328ac*/ LDRB        LR, [LR, #572]              @ 0x23c 
    /*000328b0*/ STRB        LR, [R4, #572]              @ 0x23c 
    /*000328b4*/ LDR         LR, [SP, #80]               @ 0x50 
    /*000328b8*/ LDRB        LR, [LR, #575]              @ 0x23f 
    /*000328bc*/ STRB        LR, [R4, #575]              @ 0x23f 
    /*000328c0*/ LDR         LR, [SP, #80]               @ 0x50 
    /*000328c4*/ LDRB        LR, [LR, #570]              @ 0x23a 
    /*000328c8*/ STRB        LR, [R4, #570]              @ 0x23a 
    /*000328cc*/ LDR         LR, [SP, #80]               @ 0x50 
    /*000328d0*/ LDRB        LR, [LR, #573]              @ 0x23d 
    /*000328d4*/ STRB        LR, [R4, #573]              @ 0x23d 
    /*000328d8*/ LDR         LR, [SP, #80]               @ 0x50 
    /*000328dc*/ LDRB        LR, [LR, #576]              @ 0x240 
    /*000328e0*/ STRB        LR, [R4, #576]              @ 0x240 
    /*000328e4*/ LDR         LR, [SP, #80]               @ 0x50 
    /*000328e8*/ LDRH        LR, [LR, R2] 
    /*000328ec*/ BFI         R0, LR, #0, #9 
    /*000328f0*/ STRH        R0, [R4, R2] 
    /*000328f4*/ LDRH        R2, [R3, #2] 
    /*000328f8*/ MOV         LR, R4 
    /*000328fc*/ LDRH        R1, [R1] 
    /*00032900*/ BFI         R2, R1, #0, #9 
    /*00032904*/ STRH        R2, [R3, #2] 
    /*00032908*/ LDR         R1, [SP, #80]               @ 0x50 
    /*0003290c*/ LDRH        R2, [R3, #4] 
    /*00032910*/ LDRH        R1, [R1, IP] 
    /*00032914*/ BFI         R2, R1, #0, #9 
    /*00032918*/ STRH        R2, [R3, #4] 
    /*0003291c*/ LDR         R3, [SP, #80]               @ 0x50 
    /*00032920*/ LDR         R1, [SP, #84]               @ 0x54 
    /*00032924*/ LDRB        R2, [R3, #550]              @ 0x226 
    /*00032928*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0003292c*/ LDRB        R3, [R3, #551]              @ 0x227 
    /*00032930*/ STRB        R2, [R1, #550]              @ 0x226 
    /*00032934*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00032938*/ LDRB        R2, [R2, #551]              @ 0x227 
    /*0003293c*/ BFI         R3, R2, #0, #4 
    /*00032940*/ STRB        R3, [R1, #551]              @ 0x227 
    /*00032944*/ LDR         R3, [SP, #80]               @ 0x50 
    /*00032948*/ LDRB        R0, [R3, #552]              @ 0x228 
    /*0003294c*/ AND         R0, R0, #63                 @ 0x3f 
    /*00032950*/ B           V16cv500CalcNRxV2AotoParam_x32a1c
    V16cv500CalcNRxV2AotoParam_x32954:
    /*00032954*/ LDR         R4, [SP, #8] 
    /*00032958*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0003295c*/ LDR         R1, [SP, #84]               @ 0x54 
    /*00032960*/ LDR         LR, [SP, #84]               @ 0x54 
    /*00032964*/ STRB        R2, [R3, #568]              @ 0x238 
    /*00032968*/ MOVW        R2, #578                    @ 0x242 
    /*0003296c*/ LDRB        IP, [R4, #571]              @ 0x23b 
    /*00032970*/ LDRH        R0, [R1, R2] 
    /*00032974*/ ADD         R1, R4, #580                @ 0x244 
    /*00032978*/ LDR         R5, [SP, #84]               @ 0x54 
    /*0003297c*/ STRB        IP, [LR, #571]              @ 0x23b 
    /*00032980*/ MOVW        IP, #582                    @ 0x246 
    /*00032984*/ LDRB        LR, [R4, #574]              @ 0x23e 
    /*00032988*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0003298c*/ STRB        LR, [R5, #574]              @ 0x23e 
    /*00032990*/ ADD         R3, R3, R2 
    /*00032994*/ LDRB        LR, [R4, #569]              @ 0x239 
    /*00032998*/ STRB        LR, [R5, #569]              @ 0x239 
    /*0003299c*/ LDRB        LR, [R4, #572]              @ 0x23c 
    /*000329a0*/ STRB        LR, [R5, #572]              @ 0x23c 
    /*000329a4*/ LDRB        LR, [R4, #575]              @ 0x23f 
    /*000329a8*/ STRB        LR, [R5, #575]              @ 0x23f 
    /*000329ac*/ LDRB        LR, [R4, #570]              @ 0x23a 
    /*000329b0*/ STRB        LR, [R5, #570]              @ 0x23a 
    /*000329b4*/ LDRB        LR, [R4, #573]              @ 0x23d 
    /*000329b8*/ STRB        LR, [R5, #573]              @ 0x23d 
    /*000329bc*/ LDRB        LR, [R4, #576]              @ 0x240 
    /*000329c0*/ STRB        LR, [R5, #576]              @ 0x240 
    /*000329c4*/ LDRH        LR, [R4, R2] 
    /*000329c8*/ BFI         R0, LR, #0, #9 
    /*000329cc*/ STRH        R0, [R5, R2] 
    /*000329d0*/ LDRH        R1, [R1] 
    /*000329d4*/ MOV         LR, R4 
    /*000329d8*/ LDRH        R2, [R3, #2] 
    /*000329dc*/ BFI         R2, R1, #0, #9 
    /*000329e0*/ STRH        R2, [R3, #2] 
    /*000329e4*/ LDRH        R2, [R3, #4] 
    /*000329e8*/ LDRH        R1, [R4, IP] 
    /*000329ec*/ BFI         R2, R1, #0, #9 
    /*000329f0*/ STRH        R2, [R3, #4] 
    /*000329f4*/ LDRB        R2, [R4, #550]              @ 0x226 
    /*000329f8*/ LDR         R1, [SP, #84]               @ 0x54 
    /*000329fc*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032a00*/ LDRB        R3, [R3, #551]              @ 0x227 
    /*00032a04*/ STRB        R2, [R1, #550]              @ 0x226 
    /*00032a08*/ LDRB        R2, [R4, #551]              @ 0x227 
    /*00032a0c*/ BFI         R3, R2, #0, #4 
    /*00032a10*/ STRB        R3, [R1, #551]              @ 0x227 
    /*00032a14*/ LDRB        R0, [R4, #552]              @ 0x228 
    /*00032a18*/ AND         R0, R0, #63                 @ 0x3f 
    V16cv500CalcNRxV2AotoParam_x32a1c:
    /*00032a1c*/ LDR         R2, [SP, #8] 
    /*00032a20*/ MOV         R8, #256                    @ 0x100 
    /*00032a24*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032a28*/ ADD         R7, R2, #256                @ 0x100 
    /*00032a2c*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032a30*/ LDRB        R3, [R3, #552]              @ 0x228 
    /*00032a34*/ BFI         R3, R0, #0, #6 
    /*00032a38*/ STRB        R3, [R2, #552]              @ 0x228 
    V16cv500CalcNRxV2AotoParam_x32a3c:
    /*00032a3c*/ LDR         R3, [SP, #80]               @ 0x50 
    /*00032a40*/ SUB         R5, R8, #62                 @ 0x3e 
    /*00032a44*/ SUB         R4, R7, #64                 @ 0x40 
    /*00032a48*/ ADD         R5, R3, R5 
    /*00032a4c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032a50*/ ADD         R6, R3, R8 
    /*00032a54*/ B           V16cv500CalcNRxV2AotoParam_x32aa8
    V16cv500CalcNRxV2AotoParam_x32a58:
    /*00032a58*/ CMP         R9, SL 
    /*00032a5c*/ MOV         R3, SL 
    /*00032a60*/ MOV         R1, FP 
    /*00032a64*/ MOV         R0, R9 
    /*00032a68*/ LDRH        IP, [R5] 
    /*00032a6c*/ BCS         V16cv500CalcNRxV2AotoParam_x32ae4
    /*00032a70*/ STR         IP, [SP] 
    /*00032a74*/ BL          0x000000000002D4B4 
    /*00032a78*/ MOV         R3, SL 
    /*00032a7c*/ MOV         R1, FP 
    /*00032a80*/ STRH        R0, [R6, #-62]              @ 0xffffffc2 
    /*00032a84*/ MOV         R0, R9 
    /*00032a88*/ LDRH        IP, [R5, #64]               @ 0x40 
    /*00032a8c*/ LDRH        R2, [R4, #64]               @ 0x40 
    /*00032a90*/ STR         IP, [SP] 
    /*00032a94*/ BL          0x000000000002D4B4 
    V16cv500CalcNRxV2AotoParam_x32a98:
    /*00032a98*/ CMP         R4, R7 
    /*00032a9c*/ STRH        R0, [R6, #2]! 
    /*00032aa0*/ ADD         R5, R5, #2 
    /*00032aa4*/ BEQ         V16cv500CalcNRxV2AotoParam_x32acc
    V16cv500CalcNRxV2AotoParam_x32aa8:
    /*00032aa8*/ CMP         R9, FP 
    /*00032aac*/ LDRH        R2, [R4, #2]! 
    /*00032ab0*/ BHI         V16cv500CalcNRxV2AotoParam_x32a58
    /*00032ab4*/ STRH        R2, [R6, #-62]              @ 0xffffffc2 
    /*00032ab8*/ CMP         R4, R7 
    /*00032abc*/ LDRH        R0, [R4, #64]               @ 0x40 
    /*00032ac0*/ ADD         R5, R5, #2 
    /*00032ac4*/ STRH        R0, [R6, #2]! 
    /*00032ac8*/ BNE         V16cv500CalcNRxV2AotoParam_x32aa8
    V16cv500CalcNRxV2AotoParam_x32acc:
    /*00032acc*/ ADD         R8, R8, #152                @ 0x98 
    /*00032ad0*/ ADD         R7, R4, #152                @ 0x98 
    /*00032ad4*/ CMP         R8, #560                    @ 0x230 
    /*00032ad8*/ BNE         V16cv500CalcNRxV2AotoParam_x32a3c
    /*00032adc*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00032ae0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    V16cv500CalcNRxV2AotoParam_x32ae4:
    /*00032ae4*/ STRH        IP, [R6, #-62]              @ 0xffffffc2 
    /*00032ae8*/ LDRH        R0, [R5, #64]               @ 0x40 
    /*00032aec*/ B           V16cv500CalcNRxV2AotoParam_x32a98
    V16cv500CalcNRxV2AotoParam_x32af0:
    /*00032af0*/ STR         R3, [SP] 
    /*00032af4*/ MOV         R1, FP 
    /*00032af8*/ MOV         R3, SL 
    /*00032afc*/ MOV         R0, R9 
    /*00032b00*/ BL          0x000000000002D4B4 
    /*00032b04*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032b08*/ MOVW        R4, #578                    @ 0x242 
    /*00032b0c*/ MOV         R3, SL 
    /*00032b10*/ ADD         R5, R2, R4 
    /*00032b14*/ MOV         R1, FP 
    /*00032b18*/ STRB        R0, [R2, #568]              @ 0x238 
    /*00032b1c*/ LDR         R0, [SP, #80]               @ 0x50 
    /*00032b20*/ LDRB        R2, [R6, #571]              @ 0x23b 
    /*00032b24*/ LDRB        IP, [R0, #571]              @ 0x23b 
    /*00032b28*/ MOV         R0, R9 
    /*00032b2c*/ STR         IP, [SP] 
    /*00032b30*/ BL          0x000000000002D4B4 
    /*00032b34*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032b38*/ MOV         R3, SL 
    /*00032b3c*/ MOV         R1, FP 
    /*00032b40*/ STRB        R0, [R2, #571]              @ 0x23b 
    /*00032b44*/ LDR         R0, [SP, #80]               @ 0x50 
    /*00032b48*/ LDRB        R2, [R6, #574]              @ 0x23e 
    /*00032b4c*/ LDRB        IP, [R0, #574]              @ 0x23e 
    /*00032b50*/ MOV         R0, R9 
    /*00032b54*/ STR         IP, [SP] 
    /*00032b58*/ BL          0x000000000002D4B4 
    /*00032b5c*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032b60*/ MOV         R3, SL 
    /*00032b64*/ MOV         R1, FP 
    /*00032b68*/ STRB        R0, [R2, #574]              @ 0x23e 
    /*00032b6c*/ LDR         R0, [SP, #80]               @ 0x50 
    /*00032b70*/ LDRB        R2, [R6, #569]              @ 0x239 
    /*00032b74*/ LDRB        IP, [R0, #569]              @ 0x239 
    /*00032b78*/ MOV         R0, R9 
    /*00032b7c*/ STR         IP, [SP] 
    /*00032b80*/ BL          0x000000000002D4B4 
    /*00032b84*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032b88*/ MOV         R3, SL 
    /*00032b8c*/ MOV         R1, FP 
    /*00032b90*/ STRB        R0, [R2, #569]              @ 0x239 
    /*00032b94*/ LDR         R0, [SP, #80]               @ 0x50 
    /*00032b98*/ LDRB        R2, [R6, #572]              @ 0x23c 
    /*00032b9c*/ LDRB        IP, [R0, #572]              @ 0x23c 
    /*00032ba0*/ MOV         R0, R9 
    /*00032ba4*/ STR         IP, [SP] 
    /*00032ba8*/ BL          0x000000000002D4B4 
    /*00032bac*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032bb0*/ MOV         R3, SL 
    /*00032bb4*/ MOV         R1, FP 
    /*00032bb8*/ STRB        R0, [R2, #572]              @ 0x23c 
    /*00032bbc*/ LDR         R0, [SP, #80]               @ 0x50 
    /*00032bc0*/ LDRB        R2, [R6, #575]              @ 0x23f 
    /*00032bc4*/ LDRB        IP, [R0, #575]              @ 0x23f 
    /*00032bc8*/ MOV         R0, R9 
    /*00032bcc*/ STR         IP, [SP] 
    /*00032bd0*/ BL          0x000000000002D4B4 
    /*00032bd4*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032bd8*/ MOV         R3, SL 
    /*00032bdc*/ MOV         R1, FP 
    /*00032be0*/ STRB        R0, [R2, #575]              @ 0x23f 
    /*00032be4*/ LDR         R0, [SP, #80]               @ 0x50 
    /*00032be8*/ LDRB        R2, [R6, #570]              @ 0x23a 
    /*00032bec*/ LDRB        IP, [R0, #570]              @ 0x23a 
    /*00032bf0*/ MOV         R0, R9 
    /*00032bf4*/ STR         IP, [SP] 
    /*00032bf8*/ BL          0x000000000002D4B4 
    /*00032bfc*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032c00*/ MOV         R3, SL 
    /*00032c04*/ MOV         R1, FP 
    /*00032c08*/ STRB        R0, [R2, #570]              @ 0x23a 
    /*00032c0c*/ LDR         R0, [SP, #80]               @ 0x50 
    /*00032c10*/ LDRB        R2, [R6, #573]              @ 0x23d 
    /*00032c14*/ LDRB        IP, [R0, #573]              @ 0x23d 
    /*00032c18*/ MOV         R0, R9 
    /*00032c1c*/ STR         IP, [SP] 
    /*00032c20*/ BL          0x000000000002D4B4 
    /*00032c24*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032c28*/ MOV         R3, SL 
    /*00032c2c*/ MOV         R1, FP 
    /*00032c30*/ STRB        R0, [R2, #573]              @ 0x23d 
    /*00032c34*/ LDR         R0, [SP, #80]               @ 0x50 
    /*00032c38*/ LDRB        R2, [R6, #576]              @ 0x240 
    /*00032c3c*/ LDRB        IP, [R0, #576]              @ 0x240 
    /*00032c40*/ MOV         R0, R9 
    /*00032c44*/ STR         IP, [SP] 
    /*00032c48*/ BL          0x000000000002D4B4 
    /*00032c4c*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032c50*/ MOV         R3, SL 
    /*00032c54*/ MOV         R1, FP 
    /*00032c58*/ STRB        R0, [R2, #576]              @ 0x240 
    /*00032c5c*/ MOV         R0, R9 
    /*00032c60*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00032c64*/ LDRH        IP, [R2, R4] 
    /*00032c68*/ LDRH        R2, [R6, R4] 
    /*00032c6c*/ UBFX        IP, IP, #0, #9 
    /*00032c70*/ STR         IP, [SP] 
    /*00032c74*/ UBFX        R2, R2, #0, #9 
    /*00032c78*/ BL          0x000000000002D4B4 
    /*00032c7c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032c80*/ ADD         R2, R6, #580                @ 0x244 
    /*00032c84*/ MOV         R1, FP 
    /*00032c88*/ LDRH        LR, [R3, R4] 
    /*00032c8c*/ LDR         R3, [SP, #80]               @ 0x50 
    /*00032c90*/ ADD         IP, R3, #580                @ 0x244 
    /*00032c94*/ MOV         R3, SL 
    /*00032c98*/ BFI         LR, R0, #0, #9 
    /*00032c9c*/ LDR         R0, [SP, #84]               @ 0x54 
    /*00032ca0*/ STRH        LR, [R0, R4] 
    /*00032ca4*/ MOV         R0, R9 
    /*00032ca8*/ LDRH        IP, [IP] 
    /*00032cac*/ LDRH        R2, [R2] 
    /*00032cb0*/ UBFX        IP, IP, #0, #9 
    /*00032cb4*/ STR         IP, [SP] 
    /*00032cb8*/ UBFX        R2, R2, #0, #9 
    /*00032cbc*/ BL          0x000000000002D4B4 
    /*00032cc0*/ LDRH        IP, [R5, #2] 
    /*00032cc4*/ MOVW        R2, #582                    @ 0x246 
    /*00032cc8*/ MOV         R3, SL 
    /*00032ccc*/ MOV         R1, FP 
    /*00032cd0*/ BFI         IP, R0, #0, #9 
    /*00032cd4*/ STRH        IP, [R5, #2] 
    /*00032cd8*/ LDR         R0, [SP, #80]               @ 0x50 
    /*00032cdc*/ LDRH        IP, [R0, R2] 
    /*00032ce0*/ MOV         R0, R9 
    /*00032ce4*/ LDRH        R2, [R6, R2] 
    /*00032ce8*/ UBFX        IP, IP, #0, #9 
    /*00032cec*/ STR         IP, [SP] 
    /*00032cf0*/ UBFX        R2, R2, #0, #9 
    /*00032cf4*/ BL          0x000000000002D4B4 
    /*00032cf8*/ LDRH        R2, [R5, #4] 
    /*00032cfc*/ MOV         R3, SL 
    /*00032d00*/ MOV         R1, FP 
    /*00032d04*/ BFI         R2, R0, #0, #9 
    /*00032d08*/ STRH        R2, [R5, #4] 
    /*00032d0c*/ LDR         IP, [SP, #80]               @ 0x50 
    /*00032d10*/ MOV         R0, R9 
    /*00032d14*/ LDRB        R2, [R6, #550]              @ 0x226 
    /*00032d18*/ LDRB        IP, [IP, #550]              @ 0x226 
    /*00032d1c*/ STR         IP, [SP] 
    /*00032d20*/ BL          0x000000000002D4B4 
    /*00032d24*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032d28*/ MOV         R3, SL 
    /*00032d2c*/ MOV         R1, FP 
    /*00032d30*/ STRB        R0, [R2, #550]              @ 0x226 
    /*00032d34*/ MOV         R0, R9 
    /*00032d38*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00032d3c*/ LDRB        IP, [R2, #551]              @ 0x227 
    /*00032d40*/ LDRB        R2, [R6, #551]              @ 0x227 
    /*00032d44*/ AND         IP, IP, #15 
    /*00032d48*/ STR         IP, [SP] 
    /*00032d4c*/ AND         R2, R2, #15 
    /*00032d50*/ BL          0x000000000002D4B4 
    /*00032d54*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032d58*/ MOV         R1, FP 
    /*00032d5c*/ LDRB        R2, [R3, #551]              @ 0x227 
    /*00032d60*/ MOV         R3, SL 
    /*00032d64*/ BFI         R2, R0, #0, #4 
    /*00032d68*/ LDR         R0, [SP, #84]               @ 0x54 
    /*00032d6c*/ STRB        R2, [R0, #551]              @ 0x227 
    /*00032d70*/ MOV         R0, R9 
    /*00032d74*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00032d78*/ LDRB        IP, [R2, #552]              @ 0x228 
    /*00032d7c*/ LDRB        R2, [R6, #552]              @ 0x228 
    /*00032d80*/ AND         IP, IP, #63                 @ 0x3f 
    /*00032d84*/ STR         IP, [SP] 
    /*00032d88*/ AND         R2, R2, #63                 @ 0x3f 
    /*00032d8c*/ BL          0x000000000002D4B4 
    /*00032d90*/ B           V16cv500CalcNRxV2AotoParam_x32a1c
    V16cv500CalcNRxV2AotoParam_x32d94:
    /*00032d94*/ STR         R3, [SP] 
    /*00032d98*/ MOV         R1, FP 
    /*00032d9c*/ MOV         R3, SL 
    /*00032da0*/ MOV         R0, R9 
    /*00032da4*/ BL          0x000000000002D4B4 
    /*00032da8*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032dac*/ LDR         IP, [SP, #80]               @ 0x50 
    /*00032db0*/ MOV         R3, SL 
    /*00032db4*/ MOV         R1, FP 
    /*00032db8*/ MOVW        R4, #558                    @ 0x22e 
    /*00032dbc*/ STRB        R0, [R2, #554]              @ 0x22a 
    /*00032dc0*/ MOV         R0, R9 
    /*00032dc4*/ LDRB        IP, [IP, #555]              @ 0x22b 
    /*00032dc8*/ LDRB        R2, [R5, #555]              @ 0x22b 
    /*00032dcc*/ STR         IP, [SP] 
    /*00032dd0*/ BL          0x000000000002D4B4 
    /*00032dd4*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032dd8*/ LDR         IP, [SP, #80]               @ 0x50 
    /*00032ddc*/ MOV         R3, SL 
    /*00032de0*/ MOV         R1, FP 
    /*00032de4*/ STRB        R0, [R2, #555]              @ 0x22b 
    /*00032de8*/ MOV         R0, R9 
    /*00032dec*/ LDRB        IP, [IP, #556]              @ 0x22c 
    /*00032df0*/ LDRB        R2, [R5, #556]              @ 0x22c 
    /*00032df4*/ STR         IP, [SP] 
    /*00032df8*/ BL          0x000000000002D4B4 
    /*00032dfc*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032e00*/ LDR         IP, [SP, #80]               @ 0x50 
    /*00032e04*/ MOV         R3, SL 
    /*00032e08*/ MOV         R1, FP 
    /*00032e0c*/ STRB        R0, [R2, #556]              @ 0x22c 
    /*00032e10*/ MOV         R0, R9 
    /*00032e14*/ LDRB        IP, [IP, #557]              @ 0x22d 
    /*00032e18*/ LDRB        R2, [R5, #557]              @ 0x22d 
    /*00032e1c*/ STR         IP, [SP] 
    /*00032e20*/ BL          0x000000000002D4B4 
    /*00032e24*/ LDR         R2, [SP, #84]               @ 0x54 
    /*00032e28*/ MOV         R3, SL 
    /*00032e2c*/ MOV         R1, FP 
    /*00032e30*/ STRB        R0, [R2, #557]              @ 0x22d 
    /*00032e34*/ MOV         R0, R9 
    /*00032e38*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00032e3c*/ LDRH        IP, [R2, R4] 
    /*00032e40*/ LDRH        R2, [R5, R4] 
    /*00032e44*/ UBFX        IP, IP, #0, #10 
    /*00032e48*/ STR         IP, [SP] 
    /*00032e4c*/ UBFX        R2, R2, #0, #10 
    /*00032e50*/ BL          0x000000000002D4B4 
    /*00032e54*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032e58*/ MOV         R1, FP 
    /*00032e5c*/ LDRH        R2, [R3, R4] 
    /*00032e60*/ MOV         R3, SL 
    /*00032e64*/ BFI         R2, R0, #0, #10 
    /*00032e68*/ LDR         R0, [SP, #84]               @ 0x54 
    /*00032e6c*/ STRH        R2, [R0, R4] 
    /*00032e70*/ MOV         R0, R9 
    /*00032e74*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00032e78*/ LDRB        IP, [R2, #562]              @ 0x232 
    /*00032e7c*/ LDRB        R2, [R5, #562]              @ 0x232 
    /*00032e80*/ AND         IP, IP, #31 
    /*00032e84*/ STR         IP, [SP] 
    /*00032e88*/ AND         R2, R2, #31 
    /*00032e8c*/ BL          0x000000000002D4B4 
    /*00032e90*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032e94*/ MOVW        R2, #562                    @ 0x232 
    /*00032e98*/ MOV         R1, FP 
    /*00032e9c*/ LDRB        IP, [R3, #562]              @ 0x232 
    /*00032ea0*/ MOV         R3, SL 
    /*00032ea4*/ BFI         IP, R0, #0, #5 
    /*00032ea8*/ LDR         R0, [SP, #84]               @ 0x54 
    /*00032eac*/ STRB        IP, [R0, #562]              @ 0x232 
    /*00032eb0*/ LDR         R0, [SP, #80]               @ 0x50 
    /*00032eb4*/ LDRH        IP, [R0, R2] 
    /*00032eb8*/ MOV         R0, R9 
    /*00032ebc*/ LDRH        R2, [R5, R2] 
    /*00032ec0*/ UBFX        IP, IP, #5, #5 
    /*00032ec4*/ STR         IP, [SP] 
    /*00032ec8*/ UBFX        R2, R2, #5, #5 
    /*00032ecc*/ BL          0x000000000002D4B4 
    /*00032ed0*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032ed4*/ MOV         R1, FP 
    /*00032ed8*/ ADD         R2, R3, #560                @ 0x230 
    /*00032edc*/ MOV         R3, SL 
    /*00032ee0*/ LDRH        IP, [R2, #2] 
    /*00032ee4*/ BFI         IP, R0, #5, #5 
    /*00032ee8*/ STRH        IP, [R2, #2] 
    /*00032eec*/ LDR         IP, [SP, #80]               @ 0x50 
    /*00032ef0*/ MOV         R0, R9 
    /*00032ef4*/ LDRB        R2, [R5, #564]              @ 0x234 
    /*00032ef8*/ LDRB        IP, [IP, #564]              @ 0x234 
    /*00032efc*/ STR         IP, [SP] 
    /*00032f00*/ BL          0x000000000002D4B4 
    /*00032f04*/ B           V16cv500CalcNRxV2AotoParam_x327d0
    V16cv500CalcNRxV2AotoParam_x32f08:
    /*00032f08*/ STR         R3, [SP] 
    /*00032f0c*/ MOV         R1, FP 
    /*00032f10*/ MOV         R3, SL 
    /*00032f14*/ MOV         R0, R9 
    /*00032f18*/ BL          0x000000000002D4B4 
    /*00032f1c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*00032f20*/ MOV         R1, FP 
    /*00032f24*/ LDRH        R2, [R3, R4] 
    /*00032f28*/ MOV         R3, SL 
    /*00032f2c*/ BFI         R2, R0, #1, #9 
    /*00032f30*/ LDR         R0, [SP, #84]               @ 0x54 
    /*00032f34*/ STRH        R2, [R0, R4] 
    /*00032f38*/ MOV         R0, R9 
    /*00032f3c*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00032f40*/ LDRB        IP, [R2, #500]              @ 0x1f4 
    /*00032f44*/ LDRB        R2, [R5, #500]              @ 0x1f4 
    /*00032f48*/ LSR         IP, IP, #3 
    /*00032f4c*/ STR         IP, [SP] 
    /*00032f50*/ LSR         R2, R2, #3 
    /*00032f54*/ BL          0x000000000002D4B4 
    /*00032f58*/ B           V16cv500CalcNRxV2AotoParam_x32010
FUNC_END V16cv500CalcNRxV2AotoParam


FUNC_BEGIN hi35xx_vpss_remove
    /*00032f5c*/ PUSH        {R4, LR} 
    /*00032f60*/ BL          0x0000000000032F60          @ VPSS_ModExit [R_ARM_CALL: .text+0x10d3c] 
    /*00032f64*/ MOVW        R3, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*00032f68*/ MOVT        R3, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00032f6c*/ MOV         R2, #0 
    /*00032f70*/ MOV         R0, R2 
    /*00032f74*/ STR         R2, [R3] 
    /*00032f78*/ POP         {R4, PC} 
FUNC_END hi35xx_vpss_remove


FUNC_BEGIN hi35xx_vpss_probe
    /*00032f7c*/ PUSH        {R4, R5, R6, LR} 
    /*00032f80*/ MOV         R2, #0 
    /*00032f84*/ MOV         R1, #512                    @ 0x200 
    /*00032f88*/ MOV         R4, R0 
    /*00032f8c*/ BL          0x0000000000032F8C          @ osal_platform_get_resource [R_ARM_CALL: +0x0] 
    /*00032f90*/ ADD         R5, R4, #16 
    /*00032f94*/ MOV         R1, R0 
    /*00032f98*/ MOV         R0, R5 
    /*00032f9c*/ BL          0x0000000000032F9C          @ devm_ioremap_resource [R_ARM_CALL: +0x0] 
    /*00032fa0*/ MOVW        R3, #0                      @ pVpssReg [R_ARM_MOVW_ABS_NC: .bss+0x6a60] 
    /*00032fa4*/ MOVT        R3, #0                      @ pVpssReg [R_ARM_MOVT_ABS: .bss+0x6a60] 
    /*00032fa8*/ CMN         R0, #4096                   @ 0x1000 
    /*00032fac*/ STR         R0, [R3] 
    /*00032fb0*/ POPHI       {R4, R5, R6, PC} 
    /*00032fb4*/ MOV         R0, R4 
    /*00032fb8*/ MOV         R1, #0 
    /*00032fbc*/ BL          0x0000000000032FBC          @ osal_platform_get_irq [R_ARM_CALL: +0x0] 
    /*00032fc0*/ MOVW        R3, #0                      @ vpss_irq [R_ARM_MOVW_ABS_NC: .data+0xe8] 
    /*00032fc4*/ MOVT        R3, #0                      @ vpss_irq [R_ARM_MOVT_ABS: .data+0xe8] 
    /*00032fc8*/ CMP         R0, #0 
    /*00032fcc*/ STR         R0, [R3] 
    /*00032fd0*/ BEQ         hi35xx_vpss_probe_x32fe0
    hi35xx_vpss_probe_x32fd4:
    /*00032fd4*/ BL          0x0000000000032FD4          @ VPSS_ModInit [R_ARM_CALL: .text+0x10bcc] 
    /*00032fd8*/ MOV         R0, #0 
    /*00032fdc*/ POP         {R4, R5, R6, PC} 
    hi35xx_vpss_probe_x32fe0:
    /*00032fe0*/ MOV         R0, R5 
    /*00032fe4*/ MOVW        R1, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9cd8] 
    /*00032fe8*/ MOVT        R1, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9cd8] 
    /*00032fec*/ BL          0x0000000000032FEC          @ dev_err [R_ARM_CALL: +0x0] 
    /*00032ff0*/ B           hi35xx_vpss_probe_x32fd4
FUNC_END hi35xx_vpss_probe


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .init.text
@ Size: 0xc
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN hi35xx_vpss_driver_init
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0xf8] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0xf8] 
    hi35xx_vpss_driver_init_x8:
    /*00000008*/ B           hi35xx_vpss_driver_init_x8  @ osal_platform_driver_register [R_ARM_JUMP24: +0x0] 
FUNC_END hi35xx_vpss_driver_init


FUNC_BEGIN init_module
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0xf8] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0xf8] 
    init_module_x8:
    /*00000008*/ B           init_module_x8              @ osal_platform_driver_register [R_ARM_JUMP24: +0x0] 
FUNC_END init_module


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .exit.text
@ Size: 0xc
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN hi35xx_vpss_driver_exit
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0xf8] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0xf8] 
    hi35xx_vpss_driver_exit_x8:
    /*00000008*/ B           hi35xx_vpss_driver_exit_x8  @ osal_platform_driver_unregister [R_ARM_JUMP24: +0x0] 
FUNC_END hi35xx_vpss_driver_exit


FUNC_BEGIN cleanup_module
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0xf8] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0xf8] 
    cleanup_module_x8:
    /*00000008*/ B           cleanup_module_x8           @ osal_platform_driver_unregister [R_ARM_JUMP24: +0x0] 
FUNC_END cleanup_module



@
@ -- FILES --
@

@ h264e.c
@ h264e_ext.c
@ h264e_proc.c
@ h264e_ref.c
@ h264e_encrypt.c
@ h264e_dpb.c
@ h264e_vlc.c
@ h264e_drv.c
@ h264e_init.c
@ hi3516cv500_h264e.mod.c


unsigned char rodata[2896] = {
    /*0000*/ "\x08\x07\x06\x06\x05\x05\x05\x05\x04\x04\x04\x04\x04\x04\x04\x04\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\0\0\0\0",
    /*0084*/ "\0\0\0\0",
    /*0088*/ "\0\0\0\0",
    /*008c*/ "\0\0\0\0",
    /*0090*/ "\0\0\0\0",
    /*0094*/ "\0\0\0\0",
    /*0098*/ "\0\0\0\0",
    /*009c*/ "\0\0\0\0",
    /*00a0*/ "\0\0\0\0",
    /*00a4*/ "\0\0\0\0",
    /*00a8*/ "\0\0\0\0",
    /*00ac*/ "\0\0\0\0",
    /*00b0*/ "\0\0\0\0",
    /*00b4*/ "\0\0\0\0",
    /*00b8*/ "\0\0\0\0",
    /*00bc*/ "\0\0\0\0",
    /*00c0*/ "\0\0\0\0",
    /*00c4*/ "\0\0\0\0",
    /*00c8*/ "\0\0\0\0",
    /*00cc*/ "\0\0\0\0",
    /*00d0*/ "\0\0\0\0",
    /*00d4*/ "\0\0\0\0",
    /*00d8*/ "\0\0\0\0",
    /*00dc*/ "\0\0\0\0",
    /*00e0*/ "\0\0\0\0",
    /*00e4*/ "\0\0\0\0",
    /*00e8*/ "\0\0\0\0",
    /*00ec*/ "\0\0\0\0",
    /*00f0*/ "\0\0\0\0",
    /*00f4*/ "\0\0\0\0",
    /*00f8*/ "\0\0\0\0",
    /*00fc*/ "\0\0\0\0",
    /*0100*/ "H264eEncodeSlcHdr\0\0\0",
    /*0114*/ "H264CheckChnId\0\0",
    /*0124*/ "H264CheckChnExist\0\0\0",
    /*0138*/ "H264CheckNullPtr\0\0\0\0",
    /*014c*/ "H264eCheckChnGopAttr\0\0\0\0",
    /*0164*/ "H264eCheckChnAttr\0\0\0",
    /*0178*/ "H264E_CheckChnAttr\0\0",
    /*018c*/ "H264eWrStrBufSEI\0\0\0\0",
    /*01a0*/ "H264eWriteSEI\0\0\0",
    /*01b0*/ "H264eInitIdrPicIdCfg\0\0\0\0",
    /*01c8*/ "H264eInitSPS\0\0\0\0",
    /*01d8*/ "H264eUpdateVuiVideoSignal\0\0\0",
    /*01f4*/ "H264eInitPPSI\0\0\0",
    /*0204*/ "H264eInitPPSP\0\0\0",
    /*0214*/ "H264eEncodeSPS\0\0",
    /*0224*/ "H264eEncodePPS\0\0",
    /*0234*/ "H264eWrRecoverPointSEI\0\0",
    /*024c*/ "H264eDoublePps\0\0",
    /*025c*/ "H264eWrStrBufSPSPPS\0",
    /*0270*/ "H264eInitSlcHdr\0",
    /*0280*/ "H264eTwoPassVB_UserSub\0\0",
    /*0298*/ "H264eGetRcnPic\0\0",
    /*02a8*/ "H264E_GetStreamBufStat\0\0",
    /*02c0*/ "H264eSetRcnOutPic\0\0\0",
    /*02d4*/ "H264e_GetVeduState\0\0",
    /*02e8*/ "H264eInitParamSet\0\0\0",
    /*02fc*/ "H264e_CheckRefParam\0",
    /*0310*/ "H264E_SysResetChn\0\0\0",
    /*0324*/ "H264E_ResetChn\0\0",
    /*0334*/ "H264E_InsertUserData\0\0\0\0",
    /*034c*/ "H264E_SetIntraPred\0\0",
    /*0360*/ "H264E_AttachVbPool\0\0",
    /*0374*/ "H264E_DetachVbPool\0\0",
    /*0388*/ "H264E_EnableAdvSmartP\0\0\0",
    /*03a0*/ "H264E_ReadRegs\0\0",
    /*03b0*/ "H264E_GetSseCfg\0",
    /*03c0*/ "H264E_GetBitStream\0\0",
    /*03d4*/ "H264E_PutBitStream\0\0",
    /*03e8*/ "VALG_CB_UpdateRp\0\0\0\0",
    /*03fc*/ "H264eInitSliceSplit\0",
    /*0410*/ "H264eInitPred\0\0\0",
    /*0420*/ "H264eInitTrans\0\0",
    /*0430*/ "H264eInitEntropy\0\0\0\0",
    /*0444*/ "H264eInitRefParam\0\0\0",
    /*0458*/ "H264eInitDblk\0\0\0",
    /*0468*/ "H264E_PutRcnRefShareBuff\0\0\0\0",
    /*0484*/ "H264E_DestroyChn\0\0\0\0",
    /*0498*/ "H264E_AllocStreamBuf\0\0\0\0",
    /*04b0*/ "H264e_ChangeStreamBuf\0\0\0",
    /*04c8*/ "H264E_AllocRcnRefPicInfoBUF\0",
    /*04e4*/ "H264E_AllocRcnRefPicBUF\0",
    /*04fc*/ "H264E_InitRcnRefBUF\0",
    /*0510*/ "H264E_SetRefParam\0\0\0",
    /*0524*/ "H264E_ChangeGopModeAttr\0",
    /*053c*/ "H264E_CreateChn\0",
    /*054c*/ "H264E_SetChnAttr\0\0\0\0",
    /*0560*/ "H264eStartPicAsFrame\0\0\0\0",
    /*0578*/ "H264eTwoPassVB_UserAdd\0\0",
    /*0590*/ "H264E_IntProcess\0\0\0\0",
    /*05a4*/ "H264eCheckSliceSplitCfg\0",
    /*05bc*/ "H264E_SetSliceSplit\0",
    /*05d0*/ "H264eCheckInterPredCfg\0\0",
    /*05e8*/ "H264E_SetInterPred\0\0",
    /*05fc*/ "H264eCheckTransCfg\0\0",
    /*0610*/ "H264E_SetTrans\0\0",
    /*0620*/ "H264eCheckEntropyCfg\0\0\0\0",
    /*0638*/ "H264E_SetEntropy\0\0\0\0",
    /*064c*/ "H264eCheckPocCfg\0\0\0\0",
    /*0660*/ "H264E_SetPoc\0\0\0\0",
    /*0670*/ "H264eCheckDblkCfg\0\0\0",
    /*0684*/ "H264E_SetDblk\0\0\0",
    /*0694*/ "H264eCheckVuiCfg\0\0\0\0",
    /*06a8*/ "H264E_SetVui\0\0\0\0",
    /*06b8*/ "H264eCheckIdrPicId\0\0",
    /*06cc*/ "H264E_SetH264eIdrPicId\0\0",
    /*06e4*/ "H264eCheckPredMode\0\0",
    /*06f8*/ "H264E_SetPredModeCfg\0\0\0\0",
    /*0710*/ "H264E_CheckModPara\0\0",
    /*0724*/ "H264E_SetModPara\0\0\0\0",
    /*0738*/ "H264eCheckSseCfg\0\0\0\0",
    /*074c*/ "H264E_SetSseCfg\0",
    /*075c*/ "H264E_SetColor2Grey\0",
    /*0770*/ "H264e_SetChnParam\0\0\0",
    /*0784*/ "H264E_ModInit\0\0\0",
    /*0794*/ "NormalP\0",
    /*079c*/ "\0\0DualP\0",
    /*07a4*/ "\0\0\0\0",
    /*07a8*/ "SmartP\0\0",
    /*07b0*/ "\0\0AdvSmartP\0",
    /*07bc*/ "Bmode\0\0\0",
    /*07c4*/ "\0\0LowdelayB\0",
    /*07d0*/ "N\0Y\0",
    /*07d4*/ "base\0\0mp\0\0\0\0",
    /*07e0*/ "hp\0\0",
    /*07e4*/ "\0\0svc-t\0",
    /*07ec*/ "row\0",
    /*07f0*/ "\0\0\0\0",
    /*07f4*/ "\0\0Column\0\0\0\0",
    /*0800*/ "N/A\0",
    /*0804*/ "all\0",
    /*0808*/ "4x4\0",
    /*080c*/ "8x8\0",
    /*0810*/ "cavlc\0cabac\0",
    /*081c*/ "Scene_0\0",
    /*0824*/ "Scene_1\0",
    /*082c*/ "Scene_2\0",
    /*0834*/ "AUTO\0\0\0\0",
    /*083c*/ "MANUAL\0\0",
    /*0844*/ "H264eSetReorderEx\0\0\0",
    /*0858*/ "H264eSetSlcHdrRefNormal\0",
    /*0870*/ "H264eSetSlcHdrRefBg\0",
    /*0884*/ "H264eSetSlcHdrRefDualP2\0",
    /*089c*/ "H264eSlcHdrMarkReorder\0\0",
    /*08b4*/ "H264eWrEncryptSEI\0\0\0",
    /*08c8*/ "H264eDpbFlush\0\0\0",
    /*08d8*/ "mm_unmark_short_term_for_reference\0\0",
    /*08fc*/ "mm_unmark_long_term_for_reference\0\0\0",
    /*0920*/ "mm_mark_current_picture_long_term\0\0\0",
    /*0944*/ "mm_mark_set_max_long_term_idx\0\0\0",
    /*0964*/ "mm_assign_long_term_frame_idx\0\0\0",
    /*0984*/ "H264eDpbInserFrame\0\0",
    /*0998*/ "H264eDpbInitRefList_P\0\0\0",
    /*09b0*/ "ShowDpbStatus\0\0\0",
    /*09c0*/ "H264eGetRefType\0",
    /*09d0*/ "H264eDrvUpdateROI\0\0\0",
    /*09e4*/ "H264E_DRV_CheckPowerSavePara\0\0\0\0",
    /*0a04*/ "H264E_DRV_Init\0\0",
    /*0a14*/ "H264E_DRV_ReadRegs\0\0",
    /*0a28*/ "H264E_DRV_UpdateBaseReg\0",
    /*0a40*/ "\x01\0\x01\0",
    /*0a44*/ "\x01\0\x02\0",
    /*0a48*/ "\x02\0\x03\0",
    /*0a4c*/ "\x03\0\x04\0",
    /*0a50*/ "\x05\0\x07\0",
    /*0a54*/ "\t\0\x0b\0",
    /*0a58*/ "\x0e\0\x11\0",
    /*0a5c*/ "\x16\0\x1b\0",
    /*0a60*/ ""\0+\0",
    /*0a64*/ "6\0E\0",
    /*0a68*/ "V\0m\0",
    /*0a6c*/ "\x89\0\xad\0",
    /*0a70*/ "\xda\0\x12\x01Y\x01\xb3\x01$\x02\xb3\x02f\x03I\x04f\x05\xcd\x06\x91\x08\xcb\n\x9a\r\xff\x0f\xff\x0f\xff\x0f\x01\x01\x01\x01\x02\x02\x02\x02\x03\x03\x03\x04\x04\x04\x05\x06\x06\x07\x08\t\n\x0b\r\x0e\x10\x12\x14\x17\x19\x1d $(-39@HQ[H264E_DRV_InitRegConfigParam\0\0\0\0",
    /*0ad8*/ "H264E_DRV_PmeShareBufferSizeEx\0\0",
    /*0af8*/ "H264E_DRV_UpdateRegConfigParam\0\0",
    /*0b18*/ "H264E_DRV_InitVuiCfg\0\0\0\0",
    /*0b30*/ "\n\0\0\0",
    /*0b34*/ "\t\0\0\0",
    /*0b38*/ "\x08\0\0\0",
    /*0b3c*/ "\x01\0\0\0",
    /*0b40*/ "\x02\0\0\0",
    /*0b44*/ "\x03\0\0\0",
    /*0b48*/ "\x04\0\0\0",
    /*0b4c*/ "\0\0\0\0",
    /*0b50*/ ""
};

unsigned char rodata.str1.4[17654] = {
    /*0000*/ "stStream.udwNumBits <= 128\0\0",
    /*001c*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*005c*/ "stStream.udwNumBits <= 64\0\0\0",
    /*0078*/ "[Func]:%s [Line]:%d [Info]:h264e chn id (%d) error! Should be   in [%d,%d]!\n\0\0\0\0",
    /*00c8*/ "[Func]:%s [Line]:%d [Info]:h264e chn(%d) not exist!\n\0\0\0\0",
    /*0100*/ "[Func]:%s [Line]:%d [Info]:function : %s ,line : %d :NULL pointer occur!\n\0\0\0",
    /*014c*/ "[Func]:%s [Line]:%d [Info]:chn gop mode (%d) err! should in [%d,%d)!\n\0\0\0",
    /*0194*/ "[Func]:%s [Line]:%d [Info]:not support BFrame,enGopMode:%d is illegal param\n\0\0\0\0",
    /*01e4*/ "[Func]:%s [Line]:%d [Info]:not support lowdelayB,enGopMode:%d is illegal param\n\0",
    /*0234*/ "[Func]:%s [Line]:%d [Info]:h264e B frame num %d err,should in[1,3]! \n\0\0\0",
    /*027c*/ "[Func]:%s [Line]:%d [Info]:Baseline Profile:%d is not support B frame! \n\0\0\0\0",
    /*02c8*/ "[Func]:%s [Line]:%d [Info]:Only NORMALP  support svc-t!!\n\0\0\0",
    /*0304*/ "[Func]:%s [Line]:%d [Info]:RcnFrmSize:%u should be less than or equal to MaxRcnFrmSize %u!\n\0",
    /*0360*/ "[Func]:%s [Line]:%d [Info]:FrameInfoSize:%u should be less than or equal to MaxFrameInfoSize %u!\n\0\0\0",
    /*03c4*/ "[Func]:%s [Line]:%d [Info]:buffer size(%d) err! should >= %d (which is 1/2 YUV420 size)!\n\0\0\0",
    /*0420*/ "[Func]:%s [Line]:%d [Info]:buffer size(%d) err! should >= %d (H264eMiniBufMode =1)!\n\0\0\0\0",
    /*0478*/ "[Func]:%s [Line]:%d [Info]:buffer size(%d) err! should be multi of 64! \n\0\0\0\0",
    /*04c4*/ "[Func]:%s [Line]:%d [Info]:h264e profile %d err! \n\0\0",
    /*04f8*/ "[Func]:%s [Line]:%d [Info]:h264e bRcnRefShareBuf %d err! should be 0 or 1\n\0\0",
    /*0544*/ "[Func]:%s [Line]:%d [Info]:The Chip do not support buff share ,bRcnRefShareBuf(%d) should be 0!\n\0\0\0\0",
    /*05a8*/ "[Func]:%s [Line]:%d [Info]:It is do not support buff share when H264eVBSource is VB_SOURCE_USER!\n\0\0\0",
    /*060c*/ "[Func]:%s [Line]:%d [Info]:Can't set static channel attr! \n\0",
    /*0648*/ "[Func]:%s [Line]:%d [Info]:Set channel attr fail! \n\0",
    /*067c*/ "[Func]:%s [Line]:%d [Info]:create channel %d fail!\n\0",
    /*06b0*/ "\nWarning! Buffer left is small than the data writing in!\0\0\0\0",
    /*06ec*/ "\nLenght writing in must be 4B aligned!\0\0",
    /*0714*/ "stream buffer abnomal, %s %d write head: %d,write tail:%d,read head:%d,read tail:%d\n\0\0\0\0",
    /*076c*/ "s32Ret == HI_SUCCESS\0\0\0\0",
    /*0784*/ "HI_SUCCESS == s32Ret\0\0\0\0",
    /*079c*/ "HI_NULL != pDestBuf\0",
    /*07b0*/ "HI_NULL != pSrcBuf\0\0",
    /*07c4*/ "HI_NULL != pstIdrPicIdCfg\0\0\0",
    /*07e0*/ "pstCtx!= HI_NULL\0\0\0\0",
    /*07f4*/ "HI_NULL != pstVui\0\0\0",
    /*0808*/ "[Func]:%s [Line]:%d [Info]:enColorGamut(%d) is not supported\n\0\0\0",
    /*0848*/ "[Func]:%s [Line]:%d [Info]:enDynamicRange(%d) is not supported\n\0",
    /*0888*/ "[Func]:%s [Line]:%d [Info]:stStream.udwNumBits %d err! \n\0\0\0\0",
    /*08c4*/ "MULTI_OF_2_POWER(stStream.udwNumBits,8)\0",
    /*08ec*/ "stStream.udwNumBits <= (SPSBUF_ALIGN_BYTE << 3)\0",
    /*091c*/ "stStream.udwNumBits <= (PPSBUF_ALIGN_BYTE << 3)\0",
    /*094c*/ "[Func]:%s [Line]:%d [Info]:SPSCache len is %d, but need %d \n\0\0\0\0",
    /*098c*/ "HI_NULL != pstCtx\0\0\0",
    /*09a0*/ "0 == pstCtx->stPoc.pic_order_cnt_lsb\0\0\0\0",
    /*09c8*/ "func:%s line:%d vb sub fail for 0x%x!\n\0\0",
    /*09f0*/ "0\0\0\0",
    /*09f4*/ "get vb for rcn pic fail!\n\0\0\0",
    /*0a10*/ "HI_NULL == pstCtx->pstRcnPic\0\0\0\0",
    /*0a30*/ "rcn pic buf cnt is %d!\n\0",
    /*0a48*/ "UserVB, chn %d not attach any pool!\n\0\0\0\0",
    /*0a70*/ "chn %d Get Rcn PicInfoVb err!\n\0\0",
    /*0a90*/ "size picinfo:%d, vb size picinfo:%d is not enough!\n\0",
    /*0ac4*/ "chn %d Get Rcn PicVb err!\n\0\0",
    /*0ae0*/ "size pic:%d, vb size :%d is not enough!\n\0\0\0\0",
    /*0b0c*/ "HI_NULL != pstCtx->pstRcnPic\0\0\0\0",
    /*0b2c*/ "[Func]:%s [Line]:%d [Info]:h264e chn(%d) not exist!\n\0\0\0\0",
    /*0b64*/ "func:%s line:%d vb sub fail for 0x%x,u32PoolId:%d!\n\0",
    /*0b98*/ "0\0\0\0",
    /*0b9c*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*0bdc*/ "func:%s line:%d vb sub fail for 0x%x,u32PicInfoPoolId:%d,u64TmvAddr:0x%llx!\n\0\0\0\0",
    /*0c2c*/ "chnl:%d,enChnlIntInfo is %d\n\0\0\0\0",
    /*0c4c*/ "pstCtx->u32TotalLen <= sizeof(pstCtx->au8SPSCache)\0\0",
    /*0c80*/ "[Func]:%s [Line]:%d [Info]:u32Base err, should larger than 0\n\0\0\0",
    /*0cc0*/ "[Func]:%s [Line]:%d [Info]:u32Enhance err, should in [0,255] \n\0\0",
    /*0d00*/ "[Func]:%s [Line]:%d [Info]:bEnablePred err, should be HI_TRUE or HI_FALSE \n\0",
    /*0d4c*/ "[Func]:%s [Line]:%d [Info]:u32SPInterval:%u is err,should be %u!\n\0\0\0",
    /*0d90*/ "[Func]:%s [Line]:%d [Info]:when u32SPInterval:%u isn't equal to 0 ,this condition doesn't support that bEnablePred :%d is false\n\0\0\0\0",
    /*0e14*/ "[Func]:%s [Line]:%d [Info]:When GopMode(%d) is SMARTP or ADVSMARTP,bEnablePred should be HI_TRUE \n\0\0",
    /*0e78*/ "[Func]:%s [Line]:%d [Info]:When GopMode(%d) is BIPREDB,u32Base should not larger than 16\n\0\0\0",
    /*0ed4*/ "[Func]:%s [Line]:%d [Info]:u32BFrmNum:%u is err,should be equal to u32Enhance:%u!\n\0\0",
    /*0f28*/ "%s %d: vb sub fail for 0x%x!\n\0\0\0",
    /*0f48*/ "[Func]:%s [Line]:%d [Info]:get node from UserDQE failed!\n\0\0\0",
    /*0f84*/ "[Func]:%s [Line]:%d [Info]:put node to UserDQE failed!\n\0",
    /*0fbc*/ "[Func]:%s [Line]:%d [Info]:too large sei! \n\0",
    /*0fe8*/ "[Func]:%s [Line]:%d [Info]:Malloc memeoy Err! \n\0",
    /*1018*/ "[Func]:%s [Line]:%d [Info]:copy from user failed! \n\0",
    /*104c*/ "[Func]:%s [Line]:%d [Info]:No sei memory! \n\0",
    /*1078*/ "[Func]:%s [Line]:%d [Info]:Get node from UserDQE failed! \n\0\0",
    /*10b4*/ "[Func]:%s [Line]:%d [Info]:Put node to UserDQE failed! \n\0\0\0\0",
    /*10f0*/ "[Func]:%s [Line]:%d [Info]:constrained_intra_pred_flag is err, should be in[0,1] \n\0\0",
    /*1144*/ "[Func]:%s [Line]:%d [Info]:rc requiring Idr failed \n\0\0\0\0",
    /*117c*/ "[Func]:%s [Line]:%d [Info]:venc:%d VbPool is a invalid pool.\n\0\0\0",
    /*11bc*/ "[Func]:%s [Line]:%d [Info]:chn %d VBSource %u not support attach interface!\n\0\0\0\0",
    /*120c*/ "[Func]:%s [Line]:%d [Info]:chn %d  not support attach interface when bEnableRcnRefShareBuf is enable!\n\0\0",
    /*1274*/ "[Func]:%s [Line]:%d [Info]:chn %d VBSource %u not support detach interface!\n\0\0\0\0",
    /*12c4*/ "[Func]:%s [Line]:%d [Info]:chn %d  not support detach interface when bEnableRcnRefShareBuf is enable!\n\0\0",
    /*132c*/ "[Func]:%s [Line]:%d [Info]:chn %d GopMode %u not support set SmartPParam!\n\0\0",
    /*1378*/ "[Func]:%s [Line]:%d [Info]:bVencBufFull:%d,bVencBitsover:%d,bPpfdStEn:%d\n\0\0\0",
    /*13c4*/ "[Func]:%s [Line]:%d [Info]:Chnl:%d,Not Support SSE\n\0",
    /*13f8*/ "[Func]:%s [Line]:%d [Info]:SSE u32Index(%d) error! Should be [0, %d]!\n\0\0",
    /*1440*/ "[Func]:%s [Line]:%d [Info]:Bitatream channel error!\n\0\0\0\0",
    /*1478*/ "BitStream channel error! s32ChnID : %d ,pstNaluHead->s32ChnID : %d  u8Type:0x%x bLastSlice:%d\n\0\0",
    /*14d8*/ "pstNaluHead->s32ChnID == s32ChnID\0\0\0",
    /*14fc*/ "s32Index < 8\0\0\0\0",
    /*150c*/ "stream buffer abnomal, %s %d write head: %d,write tail:%d,read head:%d,read tail:%d\n\0\0\0\0",
    /*1564*/ "s32Ret == HI_SUCCESS\0\0\0\0",
    /*157c*/ "[Func]:%s [Line]:%d [Info]:stream buffer error!\n\0\0\0\0",
    /*15b0*/ "[Func]:%s [Line]:%d [Info]:bs ptr error frmAddr:%p RdTail:%p!\n\0\0",
    /*15f0*/ "%s err! Len must be multiples of word(32-bit)!\0\0",
    /*1620*/ "[Func]:%s [Line]:%d [Info]:bs ptr error frmAddr:%p !\n\0\0\0",
    /*1658*/ "[Func]:%s [Line]:%d [Info]:bs ptr error!\n\0\0\0",
    /*1684*/ "HI_NULL != pstSliceSplit\0\0\0\0",
    /*16a0*/ "HI_NULL != pstH264Pred\0\0",
    /*16b8*/ "HI_NULL != pstTrans\0",
    /*16cc*/ "HI_TRUE == (u32Profile <= 3)\0\0\0\0",
    /*16ec*/ "HI_NULL != pstEntropy\0\0\0",
    /*1704*/ "HI_NULL != pstRefParam\0\0",
    /*171c*/ "HI_NULL != pstDblk\0\0",
    /*1730*/ "%s: s32Idex:%d,vb sub fail for 0x%x!\n\0\0\0",
    /*1758*/ "[Func]:%s [Line]:%d [Info]:chnl:%d DpbFlush fail!\n\0\0",
    /*178c*/ "[Func]:%s [Line]:%d [Info]:chnl:%d Free RcnRefShareBuff fail!\n\0\0",
    /*17cc*/ "[Func]:%s [Line]:%d [Info]:u32TileNum is %d, should be [0,4]\n\0\0\0",
    /*180c*/ "[Func]:%s [Line]:%d [Info]:no need alloc stream buf\n\0\0\0\0",
    /*1844*/ "[Func]:%s [Line]:%d [Info]:chnl:%d,Get mmz name fail!\n\0\0",
    /*187c*/ "h264e%d_Str%d\0\0\0",
    /*188c*/ "[Func]:%s [Line]:%d [Info]:Chn%d alloc encoder stream:%d buf len %u failed. \n\0\0\0",
    /*18dc*/ "u32BufLen must be 4B aligned!\0\0\0",
    /*18fc*/ "h264e%d_PInfo%d\0",
    /*190c*/ "[Func]:%s [Line]:%d [Info]:malloc  vb for PicInfo failed!\n\0\0",
    /*1948*/ "h264e%d_Rcn%d\0\0\0",
    /*1958*/ "[Func]:%s [Line]:%d [Info]:malloc  vb for RCN and REF failed!\n\0\0",
    /*1998*/ "[Func]:%s [Line]:%d [Info]:Alloc RcnRef PicInfo BUF!\n\0\0\0",
    /*19d0*/ "[Func]:%s [Line]:%d [Info]:Can't set ref param for svc profile! \n\0\0\0",
    /*1a14*/ "[Func]:%s [Line]:%d [Info]:Init RcnRef BUF Err! \n\0\0\0",
    /*1a48*/ "Intra Refresh is disable because Reference Mode is changed \n\0\0\0\0",
    /*1a88*/ "[Func]:%s [Line]:%d [Info]:The chn %d has been created!\n\0\0\0\0",
    /*1ac4*/ "[Func]:%s [Line]:%d [Info]:create channel %d fail!\n\0",
    /*1af8*/ "h264e%d_Node\0\0\0\0",
    /*1b08*/ "[Func]:%s [Line]:%d [Info]:Alloc encoder node buffer failed!\n\0\0\0",
    /*1b48*/ "[Func]:%s [Line]:%d [Info]:Alloc encoder context failed!\n\0\0\0",
    /*1b84*/ "[Func]:%s [Line]:%d [Info]:Chnl %d, Alloc Stream Buf  failed!\n\0\0",
    /*1bc4*/ "[Func]:%s [Line]:%d [Info]:Set Chn attr(width : %d,height : %d ) conflicting with stSliceSplit , bSplitEnable: %d,SliceSize : %d \n\0\0",
    /*1c48*/ "Intra Refresh is disable because Gop is changed \n\0\0\0",
    /*1c7c*/ "[Func]:%s [Line]:%d [Info]:chn %d get RcnPic fail for 0x%x\n\0",
    /*1cb8*/ "HI_SUCCESS== s32Ret\0",
    /*1ccc*/ "func:%s line:%d vb add fail for 0x%x!\n\0\0",
    /*1cf4*/ "HI_SUCCESS == s32Ret\0\0\0\0",
    /*1d0c*/ "[Func]:%s [Line]:%d [Info]:SplitEnable is err, should be HI_TRUE or HI_FALSE \n\0\0",
    /*1d5c*/ "[Func]:%s [Line]:%d [Info]:Set slice split size out [1,picheightinMbs:%d]\n\0\0",
    /*1da8*/ "[Func]:%s [Line]:%d [Info]:User slice split cfg is invalid \n\0\0\0\0",
    /*1de8*/ "[Func]:%s [Line]:%d [Info]:bInter16x16PredEn is err, should be HI_TRUE \n\0\0\0\0",
    /*1e34*/ "[Func]:%s [Line]:%d [Info]:bInter8x8PredEn is err, should be HI_TRUE or HI_FALSE \n\0\0",
    /*1e88*/ "[Func]:%s [Line]:%d [Info]:bExtedgeEn is err, should be HI_TRUE or HI_FALSE \n\0\0\0",
    /*1ed8*/ "[Func]:%s [Line]:%d [Info]:User inter prediction cfg is invalid \n\0\0\0",
    /*1f1c*/ "[Func]:%s [Line]:%d [Info]:IntraTransMode err, should in [0,2] \n\0\0\0\0",
    /*1f60*/ "[Func]:%s [Line]:%d [Info]:InterTransMode err, should in [0,2] \n\0\0\0\0",
    /*1fa4*/ "[Func]:%s [Line]:%d [Info]:InterTransMode err, should in [-12,12] \n\0",
    /*1fe8*/ "[Func]:%s [Line]:%d [Info]:u32Profile err, should in [0,3] \n\0\0\0\0",
    /*2028*/ "[Func]:%s [Line]:%d [Info]:bScalingListValid err, should be  HI_FALSE \n\0",
    /*2070*/ "[Func]:%s [Line]:%d [Info]:Baseline and main profile don't surpport 8x8 transform \n\0",
    /*20c4*/ "[Func]:%s [Line]:%d [Info]:User trans cfg is invalid \n\0\0",
    /*20fc*/ "[Func]:%s [Line]:%d [Info]:u32EntropyEncModeI err, should in [0,1] \n\0\0\0\0",
    /*2144*/ "[Func]:%s [Line]:%d [Info]:u32EntropyEncModeP err, should in [0,1] \n\0\0\0\0",
    /*218c*/ "[Func]:%s [Line]:%d [Info]:u32EntropyEncModeB err, should in [0,1] \n\0\0\0\0",
    /*21d4*/ "[Func]:%s [Line]:%d [Info]:cabac_init_idc err, should in [0,2] \n\0\0\0\0",
    /*2218*/ "[Func]:%s [Line]:%d [Info]:u32EntropyEncMode err, profile:%d don't surpprot cabac \n\0",
    /*226c*/ "[Func]:%s [Line]:%d [Info]:User entropy cfg is invalid \n\0\0\0\0",
    /*22a8*/ "[Func]:%s [Line]:%d [Info]:pic_order_cnt_type err, should in [0,2] \n\0\0\0\0",
    /*22f0*/ "[Func]:%s [Line]:%d [Info]:B mode  is not support pic_order_cnt_type:2\n\0",
    /*2338*/ "[Func]:%s [Line]:%d [Info]:User poc cfg is invalid \n\0\0\0\0",
    /*2370*/ "[Func]:%s [Line]:%d [Info]:disable_deblocking_filter_idc err, should in [0,2] \n\0",
    /*23c0*/ "[Func]:%s [Line]:%d [Info]:slice_alpha_c0_offset_div2 err, should in [-6,6] \n\0\0\0",
    /*2410*/ "[Func]:%s [Line]:%d [Info]:slice_beta_offset_div2 err, should in [-6,6] \n\0\0\0",
    /*245c*/ "[Func]:%s [Line]:%d [Info]:User deblocking cfg is invalid \n\0",
    /*2498*/ "[Func]:%s [Line]:%d [Info]:timing_info_present_flag(%d) err! should be [0,1] \n\0\0",
    /*24e8*/ "[Func]:%s [Line]:%d [Info]:num_units_in_tick(%d) err! should > 0.\n\0\0",
    /*252c*/ "[Func]:%s [Line]:%d [Info]:time_scale(%d) err! should > 0.\n\0",
    /*2568*/ "[Func]:%s [Line]:%d [Info]:fixed_frame_rate_flag(%d) err! should be [0,1].\n\0",
    /*25b4*/ "[Func]:%s [Line]:%d [Info]:aspect_ratio_info_present_flag(%d) err! should be [0,1] \n\0\0\0\0",
    /*260c*/ "[Func]:%s [Line]:%d [Info]:sar_width(%d) and sar_height(%d) err! should be larger than 0 \n\0\0",
    /*2668*/ "[Func]:%s [Line]:%d [Info]:overscan_info_present_flag(%d) err! should be [0,1] \n\0\0\0\0",
    /*26bc*/ "[Func]:%s [Line]:%d [Info]:overscan_appropriate_flag(%d) err! should be [0,1] \n\0",
    /*270c*/ "[Func]:%s [Line]:%d [Info]:video_signal_type_present_flag(%d) err! should be [0,1] \n\0\0\0\0",
    /*2764*/ "[Func]:%s [Line]:%d [Info]:video_format(%d) err! should be [0,7] \n\0\0",
    /*27a8*/ "[Func]:%s [Line]:%d [Info]:video_full_range_flag(%d) err! should be [0,1] \n\0",
    /*27f4*/ "[Func]:%s [Line]:%d [Info]:colour_description_present_flag(%d) err! should be [0,1] \n\0\0\0",
    /*284c*/ "[Func]:%s [Line]:%d [Info]:bitstream_restriction_flag(%d) err! should be [0,1] \n\0\0\0\0",
    /*28a0*/ "[Func]:%s [Line]:%d [Info]:sar_width(%d) and sar_height(%d) err! should be relatively prime \n\0\0\0",
    /*2900*/ "[Func]:%s [Line]:%d [Info]:User Vui cfg is invalid \n\0\0\0\0",
    /*2938*/ "[Func]:%s [Line]:%d [Info]:enH264eIdrPicIdMode(%d) err! should be [0,%d) \n\0\0",
    /*2984*/ "[Func]:%s [Line]:%d [Info]:H264eCheckIdrPicId err \n\0",
    /*29b8*/ "[Func]:%s [Line]:%d [Info]:u32RdoOffsetIntra4(%d, %d) err! should be [0, 7]. \n\0\0",
    /*2a08*/ "[Func]:%s [Line]:%d [Info]:u32RdoOffsetIntra8(%d, %d) err! should be [0, 7]. \n\0\0",
    /*2a58*/ "[Func]:%s [Line]:%d [Info]:u32RdoOffsetIntra16(%d, %d) err! should be [0, 7]. \n\0",
    /*2aa8*/ "[Func]:%s [Line]:%d [Info]:u32RdoInter8(%d) err! should be [0, 7]. \n\0\0\0\0",
    /*2af0*/ "[Func]:%s [Line]:%d [Info]:u32RdoInter16(%d) err! should be [0, 7]. \n\0\0\0",
    /*2b38*/ "[Func]:%s [Line]:%d [Info]:u32RdoSkip(%d) err! should be [0, 7]. \n\0\0",
    /*2b7c*/ "[Func]:%s [Line]:%d [Info]:H264eCheckPredMode err \n\0",
    /*2bb0*/ "[Func]:%s [Line]:%d [Info]:mod param u32OneStreamBuffer %u out of range [0,1]!\n\0",
    /*2c00*/ "[Func]:%s [Line]:%d [Info]:mod param enH264eVBSource %u should be %d or %d!\n\0\0\0\0",
    /*2c50*/ "[Func]:%s [Line]:%d [Info]:mod param u32H264eMiniBufMode %u out of range [0,1]!\n\0\0\0\0",
    /*2ca4*/ "[Func]:%s [Line]:%d [Info]:mod param bQpHstgrmEn %d out of range [0,1]!\n\0\0\0\0",
    /*2cf0*/ "[Func]:%s [Line]:%d [Info]:mod param u32H264ePowerSaveEn err\n\0\0\0",
    /*2d30*/ "[Func]:%s [Line]:%d [Info]:mod param err\n\0\0\0",
    /*2d5c*/ "[Func]:%s [Line]:%d [Info]:SSE %d bEnable(%d) error! Should be   HI_TRUE or HI_FALSE!\n\0\0",
    /*2db4*/ "[Func]:%s [Line]:%d [Info]:SSE %d (width(%d),height(%d)) error! Should be multi of 16!\n\0",
    /*2e0c*/ "[Func]:%s [Line]:%d [Info]:SSE %d (StartX(%d),StartY(%d)) error! Should be multi of 16!\n\0\0\0\0",
    /*2e68*/ "[Func]:%s [Line]:%d [Info]:SSE %d (width(%d),height(%d)) (StartX(%d),StartY(%d)) error!Should be in (0,picwidth(%d)),(0,picheight(%d))!\n\0\0\0\0",
    /*2ef4*/ "[Func]:%s [Line]:%d [Info]:SSE %d out of the pic!\n\0\0",
    /*2f28*/ "[Func]:%s [Line]:%d [Info]:Chnl:%d,User SSE cfg is invalid \n\0\0\0\0",
    /*2f68*/ "[Func]:%s [Line]:%d [Info]:check venc %d chn Color2grey param!\n\0",
    /*2fa8*/ "[Func]:%s [Line]:%d [Info]:chnl(%d) SetChnParam err\n\0\0\0\0",
    /*2fe0*/ "vedu can not load so that h264e can not load!!!!\n\0\0\0",
    /*3014*/ "ModuleParam: OneStreamBuffer(%d) is illegal,should be [0, 1]\n\0\0\0",
    /*3054*/ "ModuleParam: H264eVBSource(%d) is illegal,should be %d or %d\n\0\0\0",
    /*3094*/ "ModuleParam: H264eMiniBufMode(%d) is illegal,should be [0, 1]\n\0\0",
    /*30d4*/ "ModuleParam: H264ePowerSaveEn(%d) is illegal,should be [0, 1]\n\0\0",
    /*3114*/ "h264e\0\0\0",
    /*311c*/ "[Func]:%s [Line]:%d [Info]:Rgs module fail. \n\0\0\0",
    /*314c*/ "Hi3516CV500\0",
    /*3158*/ "load h264e.ko for %s...OK!\n\0",
    /*3174*/ "h264e.ko is not sucess loaded,so unload h264e.ko failed !!!!\n\0\0\0",
    /*31b4*/ "unload h264e.ko for %s...OK!\n\0\0\0",
    /*31d4*/ "\n[H264E] Version: [Hi3516CV500_MPP_V2.0.1.0 B090 Release], Build Time[Jan 14 2019, 20:23:45]\n\n\0\0",
    /*3234*/ "-----MODULE PARAM--------------------------------------------------------------\n\0\0\0\0",
    /*3288*/ "H264eVBSource\0\0\0",
    /*3298*/ "OnePack\0",
    /*32a0*/ " %12s %15s %16s%16s%16s\n\0\0\0\0",
    /*32bc*/ "bQpHstgrmEn\0",
    /*32c8*/ "MiniBufMode\0",
    /*32d4*/ "PowerSaveEn\0",
    /*32e0*/ " %12d %15d %16d%16d%16d\n\0\0\0\0",
    /*32fc*/ "-----CHN ATTR------------------------------------------------------------------\n\0\0\0\0",
    /*3350*/ "MaxWidth\0\0\0\0",
    /*335c*/ "ID\0\0",
    /*3360*/ "%7s%10s%10s%10s%10s%10s%8s%10s%10s%10s%12s\n\0",
    /*338c*/ "MaxStrCnt\0\0\0",
    /*3398*/ "GopMode\0",
    /*33a0*/ "ByFrame\0",
    /*33a8*/ "BufSize\0",
    /*33b0*/ "C2GEn\0\0\0",
    /*33b8*/ "profile\0",
    /*33c0*/ "Height\0\0",
    /*33c8*/ "Width\0\0\0",
    /*33d0*/ "MaxHeight\0\0\0",
    /*33dc*/ "%7d%10u%10u%10u%10u%10s%8s%10u%10s%10s%12u\n\0",
    /*3408*/ "\n\0\0\0",
    /*340c*/ "-----PICTURE INFO--------------------------------------------------------------\n\0\0\0\0",
    /*3460*/ "EncdStart\0\0\0",
    /*346c*/ "%7s%14s%14s%12s%12s%12s%12s%12s%12s\n\0\0\0\0",
    /*3494*/ "UnrdStr\0",
    /*349c*/ "RlsStr\0\0",
    /*34a4*/ "Recode\0\0",
    /*34ac*/ "Pskip\0\0\0",
    /*34b4*/ "Disc\0\0\0\0",
    /*34bc*/ "Lost\0\0\0\0",
    /*34c4*/ "EncdSucceed\0",
    /*34d0*/ "%7d%14d%14d%12d%12d%12d%12d%12d%12d\n\0\0\0\0",
    /*34f8*/ "-----STREAM BUFFER-------------------------------------------------------------\n\0\0\0\0",
    /*354c*/ "Base\0\0\0\0",
    /*3554*/ "     %-7s%-22s%-12s%-12s%-12s%-12s%-12s%-12s\n\0\0\0",
    /*3584*/ "BufFree\0",
    /*358c*/ "DataLen\0",
    /*3594*/ "WrHead\0\0",
    /*359c*/ "WrTail\0\0",
    /*35a4*/ "RdHead\0\0",
    /*35ac*/ "RdTail\0\0",
    /*35b4*/ "      %-6d0x%-20lx0x%-10x0x%-10x0x%-10x0x%-10x%-12d%-12d\n\0\0\0",
    /*35f0*/ "-----RefParam INFO--------------------------------------------------------------\n\0\0\0",
    /*3644*/ "EnPred\0\0",
    /*364c*/ "%7s%12s%12s%12s%18s\n\0\0\0\0",
    /*3664*/ "RcnRefShareBuf\0\0",
    /*3674*/ "Enhance\0",
    /*367c*/ "%7d%12s%12u%12u%18s\n\0\0\0\0",
    /*3694*/ "-----ROIBG INFO------------------------------------------------------------------\n\0\0",
    /*36e8*/ "BgSrcFr\0",
    /*36f0*/ "%7s%10s%10s\n\0\0\0\0",
    /*3700*/ "BgTarFr\0",
    /*3708*/ "%7d%10d%10d\n\0\0\0\0",
    /*3718*/ "-----Syntax INFO1--------------------------------------------------------------\n\0\0\0\0",
    /*376c*/ "SlcspltEn\0\0\0",
    /*3778*/ "%7s%10s%10s%15s%15s%15s%10s\n\0\0\0\0",
    /*3798*/ "QpOfIDR\0",
    /*37a0*/ "RefreshNum\0\0",
    /*37ac*/ "RefreshMode\0",
    /*37b8*/ "IntraRefresh\0\0\0\0",
    /*37c8*/ "Slcsize\0",
    /*37d0*/ "%7d%10s%10u%15s%15s%15u%10u\n\0\0\0\0",
    /*37f0*/ "%7d%10s%10u%15s%15s%15s%10s\n\0\0\0\0",
    /*3810*/ "%7d%10s%10s%15s%15s%15u%10u\n\0\0\0\0",
    /*3830*/ "%7d%10s%10s%15s%15s%15s%10s\n\0\0\0\0",
    /*3850*/ "-----Syntax INFO2--------------------------------------------------------------\n\0\0\0\0",
    /*38a4*/ "%7s%10s%10s%10s%10s%8s%8s%8s%6s%10s%8s%8s\n\0\0",
    /*38d0*/ "beta\0\0\0\0",
    /*38d8*/ "alpha\0\0\0",
    /*38e0*/ "DblkIdc\0",
    /*38e8*/ "POC\0",
    /*38ec*/ "QMatrix\0",
    /*38f4*/ "Ptrans\0\0",
    /*38fc*/ "Itrans\0\0",
    /*3904*/ "EntrpyB\0",
    /*390c*/ "EntrpyP\0",
    /*3914*/ "EntrpyI\0",
    /*391c*/ "%7d%10s%10s%10s%10s%8s%8s%8s%6d%10d%8d%8d\n\0\0",
    /*3948*/ "-----Foreground && Scene INFO-------------------------------------------------------------------\n\0\0\0",
    /*39ac*/ "ForegroundSkipCoef\0\0",
    /*39c0*/ "%7s%20s%20s%10s\n\0\0\0\0",
    /*39d4*/ "SceneMode\0\0\0",
    /*39e0*/ "BackgroundSkipCoef\0\0",
    /*39f4*/ "%7d%20u%20u%10s\n\0\0\0\0",
    /*3a08*/ "-----CuPrediction-------------------------------------------------------------------\n\0\0\0",
    /*3a60*/ "PredMode\0\0\0\0",
    /*3a6c*/ "%7s%10s%15s%15s%15s%15s%15s \n\0\0\0",
    /*3a8c*/ "Intra16Cost\0",
    /*3a98*/ "Intra8Cost\0\0",
    /*3aa4*/ "Intra4Cost\0\0",
    /*3ab0*/ "Inter16Cost\0",
    /*3abc*/ "Inter8Cost\0\0",
    /*3ac8*/ "%7d%10s%15u%15u%15u%15u%15u\n\0\0\0\0",
    /*3ae8*/ "-----SkipBias-------------------------------------------------------------------\n\0\0\0",
    /*3b3c*/ "SkipBiasEn\0\0",
    /*3b48*/ "%7s%15s%10s%10s%20s%20s\n\0\0\0\0",
    /*3b64*/ "BackgroundCost\0\0",
    /*3b74*/ "ForegroundCost\0\0",
    /*3b84*/ "Offset\0\0",
    /*3b8c*/ "Gain\0\0\0\0",
    /*3b94*/ "%7d%15s%10u%10u%20u%20u\n\0\0\0\0",
    /*3bb0*/ "pic_nums_idc < H264E_REORDER_MODE_BUTT\0\0",
    /*3bd8*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*3c18*/ "pPic != HI_NULL\0",
    /*3c28*/ "pstCtx->pReorderRef[0] != HI_NULL\0\0\0",
    /*3c4c*/ "pstCtx->pReorderRef[1] != HI_NULL\0\0\0",
    /*3c70*/ "pstCtx->stDpb.s32LongRefNum == 2\0\0\0\0",
    /*3c94*/ "[Func]:%s [Line]:%d [Info]:GopType :%d,Not Support Type\n\0\0\0\0",
    /*3cd0*/ "0\0\0\0",
    /*3cd4*/ "\nWarning! Buffer left is small than the data writing in!\0\0\0\0",
    /*3d10*/ "[Func]:%s [Line]:%d [Info]:SPSCache len is %d, but need %d \n\0\0\0\0",
    /*3d50*/ "stream buffer abnomal, %s %d write head: %d,write tail:%d,read head:%d,read tail:%d\n\0\0\0\0",
    /*3da8*/ "s32Ret == HI_SUCCESS\0\0\0\0",
    /*3dc0*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*3e00*/ "%s: vb sub fail for 0x%x!\n\0\0",
    /*3e1c*/ "HI_SUCCESS == s32Ret\0\0\0\0",
    /*3e34*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*3e74*/ "pTmpFrame != HI_NULL\0\0\0\0",
    /*3e8c*/ "[Func]:%s [Line]:%d [Info]:UnMark ShortRef (%d,%d) u32Ref:%d pic_num %d, diff %d, s32LongTermPicNum:%d \n\0\0\0\0",
    /*3ef8*/ "REF_LONG == pFrame->u32Ref && USE_FRAME == pFrame->Used\0",
    /*3f30*/ "0\0\0\0",
    /*3f34*/ "i < 10 && MARKING_OPERATION_END == pstSlcHdr->stMark.memory_management_control_operation[i]\0",
    /*3f90*/ "%s %d: vb sub fail for 0x%x!\n\0\0\0",
    /*3fb0*/ "pstDpb->s32UsedSize <= pstDpb->s32MaxDpbSize\0\0\0\0",
    /*3fe0*/ "%s %d: vb add fail for 0x%x!\n\0\0\0",
    /*4000*/ "USE_FRAME == pFrame->Used\0\0\0",
    /*401c*/ "(pstDpb->s32ShortRefNum + pstDpb->s32LongRefNum) < H264E_DPB_LIST_MAX_SIZE\0\0",
    /*4068*/ "[Func]:%s [Line]:%d [Info]:(%d) u32PicType %d, u32FrameNum %d, u32Poc %d, enRefType %d, \n\0\0\0",
    /*40c4*/ "(%d) u32PicType %d, u32FrameNum %d, u32Poc %d, enRefType %d,\n\0\0\0",
    /*4104*/ "[Func]:%s [Line]:%d [Info]:List0Size: %d, List1Size: %d; LongRefNum %d, ShortRefNum %d\n\0",
    /*415c*/ "List0Size: %d, List1Size: %d; LongRefNum %d, ShortRefNum %d\n\0\0\0\0",
    /*419c*/ "[Func]:%s [Line]:%d [Info]:hBlock 0x%x, Phy 0x%llxx, Ref %d, FrameNum %d, s32PicNum %d, LTPicNum %d, Poc %d, pFrame:%p \n\0\0\0\0",
    /*4218*/ "hBlock 0x%x, Phy 0x%llx, Ref %d, FrameNum %d, s32PicNum %d, LTPicNum %d, Poc %d, pFrame:%p \n\0\0\0\0",
    /*4278*/ "[Func]:%s [Line]:%d [Info]:List0(%p): Poc %d, Ref %d,(%p) \n\0",
    /*42b4*/ "List0: Poc %d, Ref %d, (%p)\n\0\0\0\0",
    /*42d4*/ "[Func]:%s [Line]:%d [Info]:List1(%p): Poc %d, Ref %d, (%p)\n\0",
    /*4310*/ "List1: Poc %d, Ref %d, (%p)\n\0\0\0\0",
    /*4330*/ "penRefType != HI_NULL\0\0\0",
    /*4348*/ "pstRef != HI_NULL\0\0\0",
    /*435c*/ "HI_NULL != pstCtx\0\0\0",
    /*4370*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*43b0*/ "[Func]:%s [Line]:%d [Info]:mod param u32H264ePowerSaveEn %d out of range [0,2]!\n\0\0\0\0",
    /*4404*/ "[Func]:%s [Line]:%d [Info]:vedu can not load so that h264e can not load\n\0\0\0\0",
    /*4450*/ "[Func]:%s [Line]:%d [Info]:stream buf full! \n\0\0\0",
    /*4480*/ "pstCtx->pReorderRef[0]!= HI_NULL\0\0\0\0",
    /*44a4*/ "[Func]:%s [Line]:%d [Info]:This chip not support Pme Share!\n\0\0\0\0",
    /*44e4*/ "HI_NULL != pstVui\0"
};

unsigned char data[336] = {
    /*0000*/ 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0010*/ 0x68, 0x32, 0x36, 0x34, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0020*/ 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0030*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 
    /*0040*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0050*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0060*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0070*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0080*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0090*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00a0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00c0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00d0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00e0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00f0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0100*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0110*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0120*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0130*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0140*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
};

unsigned char rel.data[552] = {
    /*0000*/ 0x24, 0x00, 0x00, 0x00, 0x02, 0x88, 0x03, 0x00, 0x28, 0x00, 0x00, 0x00, 0x02, 0x75, 0x03, 0x00, 
    /*0010*/ 0x34, 0x00, 0x00, 0x00, 0x02, 0x93, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x02, 0x0d, 0x00, 0x00, 
    /*0020*/ 0x48, 0x00, 0x00, 0x00, 0x02, 0xe8, 0x03, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x02, 0x5b, 0x03, 0x00, 
    /*0030*/ 0x50, 0x00, 0x00, 0x00, 0x02, 0x97, 0x03, 0x00, 0x54, 0x00, 0x00, 0x00, 0x02, 0xd8, 0x03, 0x00, 
    /*0040*/ 0x58, 0x00, 0x00, 0x00, 0x02, 0x1d, 0x03, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x02, 0x76, 0x03, 0x00, 
    /*0050*/ 0x60, 0x00, 0x00, 0x00, 0x02, 0x24, 0x04, 0x00, 0x64, 0x00, 0x00, 0x00, 0x02, 0xa0, 0x03, 0x00, 
    /*0060*/ 0x68, 0x00, 0x00, 0x00, 0x02, 0x7f, 0x03, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x02, 0x87, 0x03, 0x00, 
    /*0070*/ 0x70, 0x00, 0x00, 0x00, 0x02, 0x86, 0x03, 0x00, 0x74, 0x00, 0x00, 0x00, 0x02, 0x3e, 0x03, 0x00, 
    /*0080*/ 0x78, 0x00, 0x00, 0x00, 0x02, 0x9d, 0x03, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x02, 0xcc, 0x03, 0x00, 
    /*0090*/ 0x80, 0x00, 0x00, 0x00, 0x02, 0x4f, 0x03, 0x00, 0x84, 0x00, 0x00, 0x00, 0x02, 0x2a, 0x04, 0x00, 
    /*00a0*/ 0x88, 0x00, 0x00, 0x00, 0x02, 0x46, 0x03, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x02, 0x89, 0x03, 0x00, 
    /*00b0*/ 0x90, 0x00, 0x00, 0x00, 0x02, 0x50, 0x03, 0x00, 0x94, 0x00, 0x00, 0x00, 0x02, 0x4b, 0x03, 0x00, 
    /*00c0*/ 0x98, 0x00, 0x00, 0x00, 0x02, 0x2b, 0x03, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x02, 0x01, 0x04, 0x00, 
    /*00d0*/ 0xa0, 0x00, 0x00, 0x00, 0x02, 0x19, 0x04, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x02, 0xba, 0x03, 0x00, 
    /*00e0*/ 0xa8, 0x00, 0x00, 0x00, 0x02, 0xd3, 0x03, 0x00, 0xac, 0x00, 0x00, 0x00, 0x02, 0xc8, 0x03, 0x00, 
    /*00f0*/ 0xb0, 0x00, 0x00, 0x00, 0x02, 0x12, 0x04, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x02, 0xdf, 0x03, 0x00, 
    /*0100*/ 0xb8, 0x00, 0x00, 0x00, 0x02, 0x48, 0x03, 0x00, 0xbc, 0x00, 0x00, 0x00, 0x02, 0x2c, 0x03, 0x00, 
    /*0110*/ 0xc0, 0x00, 0x00, 0x00, 0x02, 0x83, 0x03, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x02, 0xac, 0x03, 0x00, 
    /*0120*/ 0xc8, 0x00, 0x00, 0x00, 0x02, 0x8e, 0x03, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x02, 0xa3, 0x03, 0x00, 
    /*0130*/ 0xd0, 0x00, 0x00, 0x00, 0x02, 0x3c, 0x03, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x02, 0xf5, 0x03, 0x00, 
    /*0140*/ 0xd8, 0x00, 0x00, 0x00, 0x02, 0x5f, 0x03, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x02, 0x73, 0x03, 0x00, 
    /*0150*/ 0xe0, 0x00, 0x00, 0x00, 0x02, 0x78, 0x03, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x02, 0xd9, 0x03, 0x00, 
    /*0160*/ 0xe8, 0x00, 0x00, 0x00, 0x02, 0xe1, 0x03, 0x00, 0xec, 0x00, 0x00, 0x00, 0x02, 0xcf, 0x03, 0x00, 
    /*0170*/ 0xf0, 0x00, 0x00, 0x00, 0x02, 0x71, 0x03, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x02, 0x4a, 0x03, 0x00, 
    /*0180*/ 0xf8, 0x00, 0x00, 0x00, 0x02, 0x3a, 0x03, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x02, 0x3f, 0x03, 0x00, 
    /*0190*/ 0x00, 0x01, 0x00, 0x00, 0x02, 0x96, 0x03, 0x00, 0x04, 0x01, 0x00, 0x00, 0x02, 0x4c, 0x03, 0x00, 
    /*01a0*/ 0x08, 0x01, 0x00, 0x00, 0x02, 0x57, 0x03, 0x00, 0x0c, 0x01, 0x00, 0x00, 0x02, 0xae, 0x03, 0x00, 
    /*01b0*/ 0x10, 0x01, 0x00, 0x00, 0x02, 0xce, 0x03, 0x00, 0x14, 0x01, 0x00, 0x00, 0x02, 0xf1, 0x03, 0x00, 
    /*01c0*/ 0x18, 0x01, 0x00, 0x00, 0x02, 0x20, 0x03, 0x00, 0x1c, 0x01, 0x00, 0x00, 0x02, 0x1c, 0x03, 0x00, 
    /*01d0*/ 0x20, 0x01, 0x00, 0x00, 0x02, 0x09, 0x04, 0x00, 0x24, 0x01, 0x00, 0x00, 0x02, 0x17, 0x03, 0x00, 
    /*01e0*/ 0x28, 0x01, 0x00, 0x00, 0x02, 0x9f, 0x03, 0x00, 0x2c, 0x01, 0x00, 0x00, 0x02, 0x85, 0x03, 0x00, 
    /*01f0*/ 0x30, 0x01, 0x00, 0x00, 0x02, 0x15, 0x04, 0x00, 0x34, 0x01, 0x00, 0x00, 0x02, 0x66, 0x03, 0x00, 
    /*0200*/ 0x38, 0x01, 0x00, 0x00, 0x02, 0x24, 0x03, 0x00, 0x3c, 0x01, 0x00, 0x00, 0x02, 0xfa, 0x03, 0x00, 
    /*0210*/ 0x40, 0x01, 0x00, 0x00, 0x02, 0x82, 0x03, 0x00, 0x44, 0x01, 0x00, 0x00, 0x02, 0x11, 0x04, 0x00, 
    /*0220*/ 0x48, 0x01, 0x00, 0x00, 0x02, 0x6c, 0x03, 0x00, 
};

unsigned char bss[208];

@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text
@ Size: 0x15bf0
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN H264eEncodeSlcHdr
    /*00000000*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00000004*/ SUB         SP, SP, #20 
    /*00000008*/ MOV         R6, R1 
    /*0000000c*/ MOV         R7, R2 
    /*00000010*/ LDR         R9, [SP, #56]               @ 0x38 
    /*00000014*/ MOV         SL, R3 
    /*00000018*/ CMP         R9, #0 
    /*0000001c*/ BNE         H264eEncodeSlcHdr_x3dc
    /*00000020*/ LDR         R3, [R0, #968]              @ 0x3c8 
    /*00000024*/ LDR         R8, [R1, #20] 
    /*00000028*/ CMP         R3, #3 
    /*0000002c*/ BEQ         H264eEncodeSlcHdr_x6d0
    H264eEncodeSlcHdr_x30:
    /*00000030*/ MOV         R2, #32 
    /*00000034*/ MOV         R1, #0 
    /*00000038*/ MOV         R0, R7 
    /*0000003c*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00000040*/ BL          0x0000000000000040          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00000044*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00000048*/ ADD         R1, R8, #1 
    /*0000004c*/ MOV         R3, #0 
    /*00000050*/ STR         R7, [SP, #8] 
    /*00000054*/ LDRB        R2, [R5, R1, LSR #24] 
    /*00000058*/ STRH        R3, [SP, #12] 
    /*0000005c*/ CMP         R2, #8 
    /*00000060*/ STR         R3, [SP, #4] 
    /*00000064*/ STR         R3, [R7] 
    /*00000068*/ BEQ         H264eEncodeSlcHdr_xa84
    H264eEncodeSlcHdr_x6c:
    /*0000006c*/ LSL         R2, R2, #1 
    /*00000070*/ ADD         R0, SP, #4 
    /*00000074*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00000078*/ BL          0x0000000000000078          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000007c*/ LDR         R1, [R6, #24] 
    /*00000080*/ ADD         R1, R1, #1 
    /*00000084*/ LDRB        R2, [R5, R1, LSR #24] 
    /*00000088*/ CMP         R2, #8 
    /*0000008c*/ BEQ         H264eEncodeSlcHdr_x67c
    H264eEncodeSlcHdr_x90:
    /*00000090*/ LSL         R2, R2, #1 
    /*00000094*/ ADD         R0, SP, #4 
    /*00000098*/ RSB         R2, R2, #63                 @ 0x3f 
    /*0000009c*/ BL          0x000000000000009C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000000a0*/ LDR         R3, [R6] 
    /*000000a4*/ LDR         R1, [R6, #28] 
    /*000000a8*/ ADD         R0, SP, #4 
    /*000000ac*/ LDR         R2, [R3, #64]               @ 0x40 
    /*000000b0*/ ADD         R2, R2, #4 
    /*000000b4*/ SXTH        R2, R2 
    /*000000b8*/ BL          0x00000000000000B8          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000000bc*/ LDR         R3, [R6] 
    /*000000c0*/ LDR         R3, [R3, #116]              @ 0x74 
    /*000000c4*/ CMP         R3, #0 
    /*000000c8*/ BEQ         H264eEncodeSlcHdr_x628
    H264eEncodeSlcHdr_xcc:
    /*000000cc*/ CMP         R9, #0 
    /*000000d0*/ BNE         H264eEncodeSlcHdr_xe0
    /*000000d4*/ LDR         R3, [R6, #8] 
    /*000000d8*/ CMP         R3, #5 
    /*000000dc*/ BEQ         H264eEncodeSlcHdr_x718
    H264eEncodeSlcHdr_xe0:
    /*000000e0*/ LDR         R2, [R6] 
    /*000000e4*/ LDR         R3, [R2, #68]               @ 0x44 
    /*000000e8*/ CMP         R3, #0 
    /*000000ec*/ BEQ         H264eEncodeSlcHdr_x510
    /*000000f0*/ CMP         R3, #1 
    /*000000f4*/ BEQ         H264eEncodeSlcHdr_x58c
    H264eEncodeSlcHdr_xf8:
    /*000000f8*/ CMP         R8, #1 
    /*000000fc*/ BEQ         H264eEncodeSlcHdr_x84c
    /*00000100*/ BLS         H264eEncodeSlcHdr_x860
    H264eEncodeSlcHdr_x104:
    /*00000104*/ ADD         R0, SP, #4 
    /*00000108*/ BL          0x0000000000000108          @ BS_PROC_LAST_BITS [R_ARM_CALL: .text+0x127d8] 
    /*0000010c*/ LDR         R3, [SP, #4] 
    /*00000110*/ CMP         R3, #128                    @ 0x80 
    /*00000114*/ BHI         H264eEncodeSlcHdr_x658
    H264eEncodeSlcHdr_x118:
    /*00000118*/ CMP         R3, #0 
    /*0000011c*/ STREQ       R3, [SL] 
    /*00000120*/ BEQ         H264eEncodeSlcHdr_x164
    /*00000124*/ SUB         R2, R3, #1 
    /*00000128*/ RSBGT       R0, R3, #32 
    /*0000012c*/ STR         R2, [SL] 
    /*00000130*/ MOVGT       R2, R7 
    /*00000134*/ BLE         H264eEncodeSlcHdr_x164
    H264eEncodeSlcHdr_x138:
    /*00000138*/ LDR         R1, [R2] 
    /*0000013c*/ CMP         R3, #31 
    /*00000140*/ SUB         R3, R3, #32 
    /*00000144*/ ADD         R2, R2, #4 
    /*00000148*/ REV         R1, R1 
    /*0000014c*/ STR         R1, [R2, #-4] 
    /*00000150*/ LSRLE       R1, R1, R0 
    /*00000154*/ STRLE       R1, [R2, #-4] 
    /*00000158*/ CMP         R3, #0 
    /*0000015c*/ ADD         R0, R0, #32 
    /*00000160*/ BGT         H264eEncodeSlcHdr_x138
    H264eEncodeSlcHdr_x164:
    /*00000164*/ CMP         R8, #2 
    /*00000168*/ MOV         R3, #0 
    /*0000016c*/ ADD         R4, R7, #16 
    /*00000170*/ STRH        R3, [SP, #12] 
    /*00000174*/ STR         R4, [SP, #8] 
    /*00000178*/ STR         R3, [SP, #4] 
    /*0000017c*/ STR         R3, [R7, #16] 
    /*00000180*/ BEQ         H264eEncodeSlcHdr_x224
    /*00000184*/ MOV         R2, #1 
    /*00000188*/ LDR         R1, [R6, #76]               @ 0x4c 
    /*0000018c*/ ADD         R0, SP, #4 
    /*00000190*/ BL          0x0000000000000190          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00000194*/ LDR         R3, [R6, #76]               @ 0x4c 
    /*00000198*/ CMP         R3, #0 
    /*0000019c*/ BEQ         H264eEncodeSlcHdr_x21c
    /*000001a0*/ ADD         FP, R6, #76                 @ 0x4c 
    /*000001a4*/ B           H264eEncodeSlcHdr_x1d4
    H264eEncodeSlcHdr_x1a8:
    /*000001a8*/ LSL         R2, R2, #1 
    /*000001ac*/ ADD         R0, SP, #4 
    /*000001b0*/ RSB         R2, R2, #63                 @ 0x3f 
    /*000001b4*/ BL          0x00000000000001B4          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000001b8*/ LDR         R3, [FP, #4]! 
    /*000001bc*/ CMP         R3, #1 
    /*000001c0*/ BLS         H264eEncodeSlcHdr_x420
    /*000001c4*/ CMP         R3, #2 
    /*000001c8*/ BEQ         H264eEncodeSlcHdr_x44c
    H264eEncodeSlcHdr_x1cc:
    /*000001cc*/ CMP         R3, #3 
    /*000001d0*/ BEQ         H264eEncodeSlcHdr_x21c
    H264eEncodeSlcHdr_x1d4:
    /*000001d4*/ LDR         R1, [FP, #4] 
    /*000001d8*/ ADD         R1, R1, #1 
    /*000001dc*/ LDRB        R2, [R5, R1, LSR #24] 
    /*000001e0*/ CMP         R2, #8 
    /*000001e4*/ BNE         H264eEncodeSlcHdr_x1a8
    /*000001e8*/ UBFX        R3, R1, #16, #8 
    /*000001ec*/ LDRB        R2, [R5, R3] 
    /*000001f0*/ ADD         R2, R2, #8 
    /*000001f4*/ CMP         R2, #16 
    /*000001f8*/ BNE         H264eEncodeSlcHdr_x1a8
    /*000001fc*/ UBFX        R3, R1, #8, #8 
    /*00000200*/ LDRB        R2, [R5, R3] 
    /*00000204*/ ADD         R2, R2, #16 
    /*00000208*/ CMP         R2, #24 
    /*0000020c*/ UXTBEQ      R3, R1 
    /*00000210*/ LDRBEQ      R2, [R5, R3] 
    /*00000214*/ ADDEQ       R2, R2, #24 
    /*00000218*/ B           H264eEncodeSlcHdr_x1a8
    H264eEncodeSlcHdr_x21c:
    /*0000021c*/ CMP         R8, #1 
    /*00000220*/ BEQ         H264eEncodeSlcHdr_x740
    H264eEncodeSlcHdr_x224:
    /*00000224*/ ADD         R0, SP, #4 
    /*00000228*/ BL          0x0000000000000228          @ BS_PROC_LAST_BITS [R_ARM_CALL: .text+0x127d8] 
    /*0000022c*/ LDR         R3, [SP, #4] 
    /*00000230*/ CMP         R3, #64                     @ 0x40 
    /*00000234*/ BHI         H264eEncodeSlcHdr_x4ec
    H264eEncodeSlcHdr_x238:
    /*00000238*/ CMP         R3, #0 
    /*0000023c*/ STREQ       R3, [SL, #4] 
    /*00000240*/ BEQ         H264eEncodeSlcHdr_x280
    /*00000244*/ SUB         R2, R3, #1 
    /*00000248*/ RSBGT       R1, R3, #32 
    /*0000024c*/ STR         R2, [SL, #4] 
    /*00000250*/ BLE         H264eEncodeSlcHdr_x280
    H264eEncodeSlcHdr_x254:
    /*00000254*/ LDR         R2, [R4] 
    /*00000258*/ CMP         R3, #31 
    /*0000025c*/ SUB         R3, R3, #32 
    /*00000260*/ ADD         R4, R4, #4 
    /*00000264*/ REV         R2, R2 
    /*00000268*/ STR         R2, [R4, #-4] 
    /*0000026c*/ LSRLE       R2, R2, R1 
    /*00000270*/ STRLE       R2, [R4, #-4] 
    /*00000274*/ CMP         R3, #0 
    /*00000278*/ ADD         R1, R1, #32 
    /*0000027c*/ BGT         H264eEncodeSlcHdr_x254
    H264eEncodeSlcHdr_x280:
    /*00000280*/ CMP         R9, #0 
    /*00000284*/ MOV         R3, #0 
    /*00000288*/ ADD         R4, R7, #24 
    /*0000028c*/ STRH        R3, [SP, #12] 
    /*00000290*/ STR         R4, [SP, #8] 
    /*00000294*/ STR         R3, [SP, #4] 
    /*00000298*/ STR         R3, [R7, #24] 
    /*0000029c*/ BNE         H264eEncodeSlcHdr_x310
    /*000002a0*/ LDR         R3, [R6, #12] 
    /*000002a4*/ CMP         R3, #0 
    /*000002a8*/ BNE         H264eEncodeSlcHdr_x310
    H264eEncodeSlcHdr_x2ac:
    /*000002ac*/ ADD         R0, SP, #4 
    /*000002b0*/ BL          0x00000000000002B0          @ BS_PROC_LAST_BITS [R_ARM_CALL: .text+0x127d8] 
    /*000002b4*/ LDR         R3, [SP, #4] 
    /*000002b8*/ CMP         R3, #64                     @ 0x40 
    /*000002bc*/ BHI         H264eEncodeSlcHdr_x4c8
    H264eEncodeSlcHdr_x2c0:
    /*000002c0*/ CMP         R3, #0 
    /*000002c4*/ STREQ       R3, [SL, #8] 
    /*000002c8*/ BEQ         H264eEncodeSlcHdr_x308
    /*000002cc*/ SUB         R2, R3, #1 
    /*000002d0*/ RSBGT       R1, R3, #32 
    /*000002d4*/ STR         R2, [SL, #8] 
    /*000002d8*/ BLE         H264eEncodeSlcHdr_x308
    H264eEncodeSlcHdr_x2dc:
    /*000002dc*/ LDR         R2, [R4] 
    /*000002e0*/ CMP         R3, #31 
    /*000002e4*/ SUB         R3, R3, #32 
    /*000002e8*/ ADD         R4, R4, #4 
    /*000002ec*/ REV         R2, R2 
    /*000002f0*/ STR         R2, [R4, #-4] 
    /*000002f4*/ LSRLE       R2, R2, R1 
    /*000002f8*/ STRLE       R2, [R4, #-4] 
    /*000002fc*/ CMP         R3, #0 
    /*00000300*/ ADD         R1, R1, #32 
    /*00000304*/ BGT         H264eEncodeSlcHdr_x2dc
    H264eEncodeSlcHdr_x308:
    /*00000308*/ ADD         SP, SP, #20 
    /*0000030c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eEncodeSlcHdr_x310:
    /*00000310*/ LDR         R3, [R6, #8] 
    /*00000314*/ MOV         R2, #1 
    /*00000318*/ CMP         R3, #5 
    /*0000031c*/ BEQ         H264eEncodeSlcHdr_x6b0
    /*00000320*/ LDR         R1, [R6, #892]              @ 0x37c 
    /*00000324*/ ADD         R0, SP, #4 
    /*00000328*/ BL          0x0000000000000328          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000032c*/ LDR         R3, [R6, #892]              @ 0x37c 
    /*00000330*/ CMP         R3, #0 
    /*00000334*/ BEQ         H264eEncodeSlcHdr_x2ac
    /*00000338*/ ADD         R6, R6, #896                @ 0x380 
    /*0000033c*/ B           H264eEncodeSlcHdr_x394
    H264eEncodeSlcHdr_x340:
    /*00000340*/ LSL         R2, R2, #1 
    /*00000344*/ ADD         R0, SP, #4 
    /*00000348*/ RSB         R2, R2, #63                 @ 0x3f 
    /*0000034c*/ BL          0x000000000000034C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00000350*/ LDR         R3, [R6] 
    /*00000354*/ CMP         R3, #0 
    /*00000358*/ CMPNE       R3, #5 
    /*0000035c*/ BEQ         H264eEncodeSlcHdr_x388
    /*00000360*/ LDR         R1, [R6, #40]               @ 0x28 
    /*00000364*/ ADD         R1, R1, #1 
    /*00000368*/ LDRB        R2, [R5, R1, LSR #24] 
    /*0000036c*/ CMP         R2, #8 
    /*00000370*/ BEQ         H264eEncodeSlcHdr_x494
    H264eEncodeSlcHdr_x374:
    /*00000374*/ LSL         R2, R2, #1 
    /*00000378*/ ADD         R0, SP, #4 
    /*0000037c*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00000380*/ BL          0x0000000000000380          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00000384*/ LDR         R3, [R6] 
    H264eEncodeSlcHdr_x388:
    /*00000388*/ CMP         R3, #0 
    /*0000038c*/ ADD         R6, R6, #4 
    /*00000390*/ BEQ         H264eEncodeSlcHdr_x2ac
    H264eEncodeSlcHdr_x394:
    /*00000394*/ LDR         R1, [R6] 
    /*00000398*/ ADD         R1, R1, #1 
    /*0000039c*/ LDRB        R2, [R5, R1, LSR #24] 
    /*000003a0*/ CMP         R2, #8 
    /*000003a4*/ BNE         H264eEncodeSlcHdr_x340
    /*000003a8*/ UBFX        R3, R1, #16, #8 
    /*000003ac*/ LDRB        R2, [R5, R3] 
    /*000003b0*/ ADD         R2, R2, #8 
    /*000003b4*/ CMP         R2, #16 
    /*000003b8*/ BNE         H264eEncodeSlcHdr_x340
    /*000003bc*/ UBFX        R3, R1, #8, #8 
    /*000003c0*/ LDRB        R2, [R5, R3] 
    /*000003c4*/ ADD         R2, R2, #16 
    /*000003c8*/ CMP         R2, #24 
    /*000003cc*/ UXTBEQ      R3, R1 
    /*000003d0*/ LDRBEQ      R2, [R5, R3] 
    /*000003d4*/ ADDEQ       R2, R2, #24 
    /*000003d8*/ B           H264eEncodeSlcHdr_x340
    H264eEncodeSlcHdr_x3dc:
    /*000003dc*/ MOV         R1, #0 
    /*000003e0*/ MOV         R2, #32 
    /*000003e4*/ MOV         R0, R7 
    /*000003e8*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*000003ec*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*000003f0*/ BL          0x00000000000003F0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000003f4*/ MOV         R8, #2 
    /*000003f8*/ MOV         R1, #3 
    /*000003fc*/ MOV         R3, #0 
    /*00000400*/ STR         R7, [SP, #8] 
    /*00000404*/ STRH        R3, [SP, #12] 
    /*00000408*/ STR         R3, [SP, #4] 
    /*0000040c*/ STR         R3, [R7] 
    H264eEncodeSlcHdr_x410:
    /*00000410*/ UXTB        R3, R1 
    /*00000414*/ LDRB        R2, [R5, R3] 
    /*00000418*/ ADD         R2, R2, #24 
    /*0000041c*/ B           H264eEncodeSlcHdr_x6c
    H264eEncodeSlcHdr_x420:
    /*00000420*/ LDR         R1, [FP, #132]              @ 0x84 
    /*00000424*/ ADD         R1, R1, #1 
    /*00000428*/ LDRB        R2, [R5, R1, LSR #24] 
    /*0000042c*/ CMP         R2, #8 
    /*00000430*/ BEQ         H264eEncodeSlcHdr_x460
    H264eEncodeSlcHdr_x434:
    /*00000434*/ LSL         R2, R2, #1 
    /*00000438*/ ADD         R0, SP, #4 
    /*0000043c*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00000440*/ BL          0x0000000000000440          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00000444*/ LDR         R3, [FP] 
    /*00000448*/ B           H264eEncodeSlcHdr_x1cc
    H264eEncodeSlcHdr_x44c:
    /*0000044c*/ LDR         R1, [FP, #264]              @ 0x108 
    /*00000450*/ ADD         R1, R1, #1 
    /*00000454*/ LDRB        R2, [R5, R1, LSR #24] 
    /*00000458*/ CMP         R2, #8 
    /*0000045c*/ BNE         H264eEncodeSlcHdr_x434
    H264eEncodeSlcHdr_x460:
    /*00000460*/ UBFX        R3, R1, #16, #8 
    /*00000464*/ LDRB        R2, [R5, R3] 
    /*00000468*/ ADD         R2, R2, #8 
    /*0000046c*/ CMP         R2, #16 
    /*00000470*/ BNE         H264eEncodeSlcHdr_x434
    /*00000474*/ UBFX        R3, R1, #8, #8 
    /*00000478*/ LDRB        R2, [R5, R3] 
    /*0000047c*/ ADD         R2, R2, #16 
    /*00000480*/ CMP         R2, #24 
    /*00000484*/ UXTBEQ      R3, R1 
    /*00000488*/ LDRBEQ      R2, [R5, R3] 
    /*0000048c*/ ADDEQ       R2, R2, #24 
    /*00000490*/ B           H264eEncodeSlcHdr_x434
    H264eEncodeSlcHdr_x494:
    /*00000494*/ UBFX        R3, R1, #16, #8 
    /*00000498*/ LDRB        R2, [R5, R3] 
    /*0000049c*/ ADD         R2, R2, #8 
    /*000004a0*/ CMP         R2, #16 
    /*000004a4*/ BNE         H264eEncodeSlcHdr_x374
    /*000004a8*/ UBFX        R3, R1, #8, #8 
    /*000004ac*/ LDRB        R2, [R5, R3] 
    /*000004b0*/ ADD         R2, R2, #16 
    /*000004b4*/ CMP         R2, #24 
    /*000004b8*/ UXTBEQ      R3, R1 
    /*000004bc*/ LDRBEQ      R2, [R5, R3] 
    /*000004c0*/ ADDEQ       R2, R2, #24 
    /*000004c4*/ B           H264eEncodeSlcHdr_x374
    H264eEncodeSlcHdr_x4c8:
    /*000004c8*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c] 
    /*000004cc*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*000004d0*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c] 
    /*000004d4*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*000004d8*/ MOVW        R2, #2393                   @ 0x959 
    /*000004dc*/ LDR         R1, [PC, #1484]             @ 0x0000000000000ab0 
    /*000004e0*/ BL          0x00000000000004E0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000004e4*/ LDR         R3, [SP, #4] 
    /*000004e8*/ B           H264eEncodeSlcHdr_x2c0
    H264eEncodeSlcHdr_x4ec:
    /*000004ec*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c] 
    /*000004f0*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*000004f4*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c] 
    /*000004f8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*000004fc*/ MOVW        R2, #2350                   @ 0x92e 
    /*00000500*/ LDR         R1, [PC, #1448]             @ 0x0000000000000ab0 
    /*00000504*/ BL          0x0000000000000504          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00000508*/ LDR         R3, [SP, #4] 
    /*0000050c*/ B           H264eEncodeSlcHdr_x238
    H264eEncodeSlcHdr_x510:
    /*00000510*/ LDR         R2, [R2, #72]               @ 0x48 
    /*00000514*/ ADD         R0, SP, #4 
    /*00000518*/ LDR         R1, [R6, #44]               @ 0x2c 
    /*0000051c*/ ADD         R2, R2, #4 
    /*00000520*/ SXTH        R2, R2 
    /*00000524*/ BL          0x0000000000000524          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00000528*/ LDR         R3, [R6, #4] 
    /*0000052c*/ LDR         R3, [R3, #12] 
    /*00000530*/ CMP         R3, #0 
    /*00000534*/ BEQ         H264eEncodeSlcHdr_x57c
    /*00000538*/ LDR         R3, [R6, #32] 
    /*0000053c*/ CMP         R3, #0 
    /*00000540*/ BNE         H264eEncodeSlcHdr_x57c
    /*00000544*/ LDR         R3, [R6, #48]               @ 0x30 
    /*00000548*/ CMP         R3, #0 
    /*0000054c*/ EOR         R1, R3, R3, ASR #31 
    /*00000550*/ SUB         R1, R1, R3, ASR #31 
    /*00000554*/ MOVGT       R3, #0 
    /*00000558*/ MOVLE       R3, #1 
    /*0000055c*/ ORR         R1, R3, R1, LSL #1 
    /*00000560*/ LDRB        R3, [R5, R1, LSR #24] 
    /*00000564*/ CMP         R3, #8 
    /*00000568*/ BEQ         H264eEncodeSlcHdr_x9e0
    H264eEncodeSlcHdr_x56c:
    /*0000056c*/ LSL         R3, R3, #1 
    /*00000570*/ ADD         R0, SP, #4 
    /*00000574*/ RSB         R2, R3, #63                 @ 0x3f 
    /*00000578*/ BL          0x0000000000000578          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    H264eEncodeSlcHdr_x57c:
    /*0000057c*/ LDR         R2, [R6] 
    /*00000580*/ LDR         R3, [R2, #68]               @ 0x44 
    /*00000584*/ CMP         R3, #1 
    /*00000588*/ BNE         H264eEncodeSlcHdr_xf8
    H264eEncodeSlcHdr_x58c:
    /*0000058c*/ LDR         R3, [R2, #76]               @ 0x4c 
    /*00000590*/ CMP         R3, #0 
    /*00000594*/ BNE         H264eEncodeSlcHdr_xf8
    /*00000598*/ LDR         R3, [R6, #52]               @ 0x34 
    /*0000059c*/ CMP         R3, #0 
    /*000005a0*/ EOR         R1, R3, R3, ASR #31 
    /*000005a4*/ SUB         R1, R1, R3, ASR #31 
    /*000005a8*/ MOVGT       R3, #0 
    /*000005ac*/ MOVLE       R3, #1 
    /*000005b0*/ ORR         R1, R3, R1, LSL #1 
    /*000005b4*/ LDRB        R3, [R5, R1, LSR #24] 
    /*000005b8*/ CMP         R3, #8 
    /*000005bc*/ BEQ         H264eEncodeSlcHdr_x948
    H264eEncodeSlcHdr_x5c0:
    /*000005c0*/ LSL         R3, R3, #1 
    /*000005c4*/ ADD         R0, SP, #4 
    /*000005c8*/ RSB         R2, R3, #63                 @ 0x3f 
    /*000005cc*/ BL          0x00000000000005CC          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000005d0*/ LDR         R3, [R6, #4] 
    /*000005d4*/ LDR         R3, [R3, #12] 
    /*000005d8*/ CMP         R3, #0 
    /*000005dc*/ BEQ         H264eEncodeSlcHdr_xf8
    /*000005e0*/ LDR         R3, [R6, #32] 
    /*000005e4*/ CMP         R3, #0 
    /*000005e8*/ BNE         H264eEncodeSlcHdr_xf8
    /*000005ec*/ LDR         R3, [R6, #56]               @ 0x38 
    /*000005f0*/ CMP         R3, #0 
    /*000005f4*/ EOR         R1, R3, R3, ASR #31 
    /*000005f8*/ SUB         R1, R1, R3, ASR #31 
    /*000005fc*/ MOVGT       R3, #0 
    /*00000600*/ MOVLE       R3, #1 
    /*00000604*/ ORR         R1, R3, R1, LSL #1 
    /*00000608*/ LDRB        R3, [R5, R1, LSR #24] 
    /*0000060c*/ CMP         R3, #8 
    /*00000610*/ BEQ         H264eEncodeSlcHdr_xa1c
    H264eEncodeSlcHdr_x614:
    /*00000614*/ LSL         R3, R3, #1 
    /*00000618*/ ADD         R0, SP, #4 
    /*0000061c*/ RSB         R2, R3, #63                 @ 0x3f 
    /*00000620*/ BL          0x0000000000000620          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00000624*/ B           H264eEncodeSlcHdr_xf8
    H264eEncodeSlcHdr_x628:
    /*00000628*/ MOV         R2, #1 
    /*0000062c*/ LDR         R1, [R6, #32] 
    /*00000630*/ ADD         R0, SP, #4 
    /*00000634*/ BL          0x0000000000000634          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00000638*/ LDR         R3, [R6, #32] 
    /*0000063c*/ CMP         R3, #0 
    /*00000640*/ BEQ         H264eEncodeSlcHdr_xcc
    /*00000644*/ MOV         R2, #1 
    /*00000648*/ LDR         R1, [R6, #36]               @ 0x24 
    /*0000064c*/ ADD         R0, SP, #4 
    /*00000650*/ BL          0x0000000000000650          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00000654*/ B           H264eEncodeSlcHdr_xcc
    H264eEncodeSlcHdr_x658:
    /*00000658*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x0] 
    /*0000065c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00000660*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x0] 
    /*00000664*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00000668*/ MOVW        R2, #2278                   @ 0x8e6 
    /*0000066c*/ LDR         R1, [PC, #1084]             @ 0x0000000000000ab0 
    /*00000670*/ BL          0x0000000000000670          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00000674*/ LDR         R3, [SP, #4] 
    /*00000678*/ B           H264eEncodeSlcHdr_x118
    H264eEncodeSlcHdr_x67c:
    /*0000067c*/ UBFX        R3, R1, #16, #8 
    /*00000680*/ LDRB        R2, [R5, R3] 
    /*00000684*/ ADD         R2, R2, #8 
    /*00000688*/ CMP         R2, #16 
    /*0000068c*/ BNE         H264eEncodeSlcHdr_x90
    /*00000690*/ UBFX        R3, R1, #8, #8 
    /*00000694*/ LDRB        R2, [R5, R3] 
    /*00000698*/ ADD         R2, R2, #16 
    /*0000069c*/ CMP         R2, #24 
    /*000006a0*/ UXTBEQ      R3, R1 
    /*000006a4*/ LDRBEQ      R2, [R5, R3] 
    /*000006a8*/ ADDEQ       R2, R2, #24 
    /*000006ac*/ B           H264eEncodeSlcHdr_x90
    H264eEncodeSlcHdr_x6b0:
    /*000006b0*/ LDR         R1, [R6, #884]              @ 0x374 
    /*000006b4*/ ADD         R0, SP, #4 
    /*000006b8*/ BL          0x00000000000006B8          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000006bc*/ LDR         R1, [R6, #888]              @ 0x378 
    /*000006c0*/ MOV         R2, #1 
    /*000006c4*/ ADD         R0, SP, #4 
    /*000006c8*/ BL          0x00000000000006C8          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000006cc*/ B           H264eEncodeSlcHdr_x2ac
    H264eEncodeSlcHdr_x6d0:
    /*000006d0*/ ADD         R1, R0, #12288              @ 0x3000 
    /*000006d4*/ MOVW        R3, #49159                  @ 0xc007 
    /*000006d8*/ MOVT        R3, #128                    @ 0x80 
    /*000006dc*/ LDR         R2, [R1, #2084]             @ 0x824 
    /*000006e0*/ SUB         R2, R2, #2 
    /*000006e4*/ CMP         R2, #1 
    /*000006e8*/ ADD         R2, R0, #8192               @ 0x2000 
    /*000006ec*/ LDR         R2, [R2, #2244]             @ 0x8c4 
    /*000006f0*/ BLS         H264eEncodeSlcHdr_x9b0
    /*000006f4*/ BICS        IP, R2, #2 
    /*000006f8*/ BEQ         H264eEncodeSlcHdr_x8d0
    /*000006fc*/ CMP         R2, #3 
    /*00000700*/ BEQ         H264eEncodeSlcHdr_x940
    /*00000704*/ SUB         R2, R2, #4 
    /*00000708*/ CMP         R2, #1 
    /*0000070c*/ MOVHI       IP, #0 
    /*00000710*/ MOVLS       IP, #2 
    /*00000714*/ B           H264eEncodeSlcHdr_x8d4
    H264eEncodeSlcHdr_x718:
    /*00000718*/ LDR         R1, [R6, #40]               @ 0x28 
    /*0000071c*/ ADD         R1, R1, #1 
    /*00000720*/ LDRB        R3, [R5, R1, LSR #24] 
    /*00000724*/ CMP         R3, #8 
    /*00000728*/ BEQ         H264eEncodeSlcHdr_x97c
    H264eEncodeSlcHdr_x72c:
    /*0000072c*/ LSL         R3, R3, #1 
    /*00000730*/ ADD         R0, SP, #4 
    /*00000734*/ RSB         R2, R3, #63                 @ 0x3f 
    /*00000738*/ BL          0x0000000000000738          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000073c*/ B           H264eEncodeSlcHdr_xe0
    H264eEncodeSlcHdr_x740:
    /*00000740*/ MOV         R2, R8 
    /*00000744*/ LDR         R1, [R6, #476]              @ 0x1dc 
    /*00000748*/ ADD         R0, SP, #4 
    /*0000074c*/ BL          0x000000000000074C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00000750*/ LDR         R3, [R6, #476]              @ 0x1dc 
    /*00000754*/ CMP         R3, #0 
    /*00000758*/ BEQ         H264eEncodeSlcHdr_x224
    /*0000075c*/ ADD         R8, R6, #476                @ 0x1dc 
    /*00000760*/ B           H264eEncodeSlcHdr_x790
    H264eEncodeSlcHdr_x764:
    /*00000764*/ LSL         R2, R2, #1 
    /*00000768*/ ADD         R0, SP, #4 
    /*0000076c*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00000770*/ BL          0x0000000000000770          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00000774*/ LDR         R3, [R8, #4]! 
    /*00000778*/ CMP         R3, #1 
    /*0000077c*/ BLS         H264eEncodeSlcHdr_x7d8
    /*00000780*/ CMP         R3, #2 
    /*00000784*/ BEQ         H264eEncodeSlcHdr_x804
    H264eEncodeSlcHdr_x788:
    /*00000788*/ CMP         R3, #3 
    /*0000078c*/ BEQ         H264eEncodeSlcHdr_x224
    H264eEncodeSlcHdr_x790:
    /*00000790*/ LDR         R1, [R8, #4] 
    /*00000794*/ ADD         R1, R1, #1 
    /*00000798*/ LDRB        R2, [R5, R1, LSR #24] 
    /*0000079c*/ CMP         R2, #8 
    /*000007a0*/ BNE         H264eEncodeSlcHdr_x764
    /*000007a4*/ UBFX        R3, R1, #16, #8 
    /*000007a8*/ LDRB        R2, [R5, R3] 
    /*000007ac*/ ADD         R2, R2, #8 
    /*000007b0*/ CMP         R2, #16 
    /*000007b4*/ BNE         H264eEncodeSlcHdr_x764
    /*000007b8*/ UBFX        R3, R1, #8, #8 
    /*000007bc*/ LDRB        R2, [R5, R3] 
    /*000007c0*/ ADD         R2, R2, #16 
    /*000007c4*/ CMP         R2, #24 
    /*000007c8*/ UXTBEQ      R3, R1 
    /*000007cc*/ LDRBEQ      R2, [R5, R3] 
    /*000007d0*/ ADDEQ       R2, R2, #24 
    /*000007d4*/ B           H264eEncodeSlcHdr_x764
    H264eEncodeSlcHdr_x7d8:
    /*000007d8*/ LDR         R1, [R8, #132]              @ 0x84 
    /*000007dc*/ ADD         R1, R1, #1 
    /*000007e0*/ LDRB        R2, [R5, R1, LSR #24] 
    /*000007e4*/ CMP         R2, #8 
    /*000007e8*/ BEQ         H264eEncodeSlcHdr_x818
    H264eEncodeSlcHdr_x7ec:
    /*000007ec*/ LSL         R2, R2, #1 
    /*000007f0*/ ADD         R0, SP, #4 
    /*000007f4*/ RSB         R2, R2, #63                 @ 0x3f 
    /*000007f8*/ BL          0x00000000000007F8          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000007fc*/ LDR         R3, [R8] 
    /*00000800*/ B           H264eEncodeSlcHdr_x788
    H264eEncodeSlcHdr_x804:
    /*00000804*/ LDR         R1, [R8, #264]              @ 0x108 
    /*00000808*/ ADD         R1, R1, #1 
    /*0000080c*/ LDRB        R2, [R5, R1, LSR #24] 
    /*00000810*/ CMP         R2, #8 
    /*00000814*/ BNE         H264eEncodeSlcHdr_x7ec
    H264eEncodeSlcHdr_x818:
    /*00000818*/ UBFX        R3, R1, #16, #8 
    /*0000081c*/ LDRB        R2, [R5, R3] 
    /*00000820*/ ADD         R2, R2, #8 
    /*00000824*/ CMP         R2, #16 
    /*00000828*/ BNE         H264eEncodeSlcHdr_x7ec
    /*0000082c*/ UBFX        R3, R1, #8, #8 
    /*00000830*/ LDRB        R2, [R5, R3] 
    /*00000834*/ ADD         R2, R2, #16 
    /*00000838*/ CMP         R2, #24 
    /*0000083c*/ UXTBEQ      R3, R1 
    /*00000840*/ LDRBEQ      R2, [R5, R3] 
    /*00000844*/ ADDEQ       R2, R2, #24 
    /*00000848*/ B           H264eEncodeSlcHdr_x7ec
    H264eEncodeSlcHdr_x84c:
    /*0000084c*/ STR         R8, [R6, #60]               @ 0x3c 
    /*00000850*/ MOV         R2, R8 
    /*00000854*/ MOV         R1, R8 
    /*00000858*/ ADD         R0, SP, #4 
    /*0000085c*/ BL          0x000000000000085C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    H264eEncodeSlcHdr_x860:
    /*00000860*/ MOV         R2, #1 
    /*00000864*/ LDR         R1, [R6, #64]               @ 0x40 
    /*00000868*/ ADD         R0, SP, #4 
    /*0000086c*/ BL          0x000000000000086C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00000870*/ LDR         R3, [R6, #64]               @ 0x40 
    /*00000874*/ CMP         R3, #0 
    /*00000878*/ BEQ         H264eEncodeSlcHdr_x104
    /*0000087c*/ LDR         R1, [R6, #68]               @ 0x44 
    /*00000880*/ ADD         R1, R1, #1 
    /*00000884*/ LDRB        R3, [R5, R1, LSR #24] 
    /*00000888*/ CMP         R3, #8 
    /*0000088c*/ BEQ         H264eEncodeSlcHdr_x90c
    H264eEncodeSlcHdr_x890:
    /*00000890*/ LSL         R3, R3, #1 
    /*00000894*/ ADD         R0, SP, #4 
    /*00000898*/ RSB         R2, R3, #63                 @ 0x3f 
    /*0000089c*/ BL          0x000000000000089C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000008a0*/ CMP         R8, #1 
    /*000008a4*/ BNE         H264eEncodeSlcHdr_x104
    /*000008a8*/ LDR         R1, [R6, #72]               @ 0x48 
    /*000008ac*/ ADD         R1, R1, #1 
    /*000008b0*/ LDRB        R3, [R5, R1, LSR #24] 
    /*000008b4*/ CMP         R3, #8 
    /*000008b8*/ BEQ         H264eEncodeSlcHdr_xa50
    H264eEncodeSlcHdr_x8bc:
    /*000008bc*/ LSL         R3, R3, #1 
    /*000008c0*/ ADD         R0, SP, #4 
    /*000008c4*/ RSB         R2, R3, #63                 @ 0x3f 
    /*000008c8*/ BL          0x00000000000008C8          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000008cc*/ B           H264eEncodeSlcHdr_x104
    H264eEncodeSlcHdr_x8d0:
    /*000008d0*/ MOV         IP, R9 
    H264eEncodeSlcHdr_x8d4:
    /*000008d4*/ LDR         R2, [R6, #8] 
    /*000008d8*/ ORR         R3, R3, #8 
    /*000008dc*/ BFI         R3, IP, #5, #3 
    /*000008e0*/ CMP         R2, #5 
    /*000008e4*/ MOVEQ       R2, #1 
    /*000008e8*/ MOVNE       R2, #0 
    /*000008ec*/ BFI         R3, R2, #22, #1 
    /*000008f0*/ BNE         H264eEncodeSlcHdr_xa14
    /*000008f4*/ LDR         R2, [R1, #1988]             @ 0x7c4 
    /*000008f8*/ SUBS        R2, R2, #5 
    /*000008fc*/ MOVNE       R2, #1 
    H264eEncodeSlcHdr_x900:
    /*00000900*/ BFI         R3, R2, #2, #1 
    /*00000904*/ STR         R3, [R0, #872]              @ 0x368 
    /*00000908*/ B           H264eEncodeSlcHdr_x30
    H264eEncodeSlcHdr_x90c:
    /*0000090c*/ UBFX        R3, R1, #16, #8 
    /*00000910*/ LDRB        R3, [R5, R3] 
    /*00000914*/ ADD         R3, R3, #8 
    /*00000918*/ CMP         R3, #16 
    /*0000091c*/ BNE         H264eEncodeSlcHdr_x890
    /*00000920*/ UBFX        R3, R1, #8, #8 
    /*00000924*/ LDRB        R3, [R5, R3] 
    /*00000928*/ ADD         R3, R3, #16 
    /*0000092c*/ CMP         R3, #24 
    /*00000930*/ UXTBEQ      R3, R1 
    /*00000934*/ LDRBEQ      R3, [R5, R3] 
    /*00000938*/ ADDEQ       R3, R3, #24 
    /*0000093c*/ B           H264eEncodeSlcHdr_x890
    H264eEncodeSlcHdr_x940:
    /*00000940*/ MOV         IP, #1 
    /*00000944*/ B           H264eEncodeSlcHdr_x8d4
    H264eEncodeSlcHdr_x948:
    /*00000948*/ UBFX        R3, R1, #16, #8 
    /*0000094c*/ LDRB        R3, [R5, R3] 
    /*00000950*/ ADD         R3, R3, #8 
    /*00000954*/ CMP         R3, #16 
    /*00000958*/ BNE         H264eEncodeSlcHdr_x5c0
    /*0000095c*/ UBFX        R3, R1, #8, #8 
    /*00000960*/ LDRB        R3, [R5, R3] 
    /*00000964*/ ADD         R3, R3, #16 
    /*00000968*/ CMP         R3, #24 
    /*0000096c*/ UXTBEQ      R3, R1 
    /*00000970*/ LDRBEQ      R3, [R5, R3] 
    /*00000974*/ ADDEQ       R3, R3, #24 
    /*00000978*/ B           H264eEncodeSlcHdr_x5c0
    H264eEncodeSlcHdr_x97c:
    /*0000097c*/ UBFX        R3, R1, #16, #8 
    /*00000980*/ LDRB        R3, [R5, R3] 
    /*00000984*/ ADD         R3, R3, #8 
    /*00000988*/ CMP         R3, #16 
    /*0000098c*/ BNE         H264eEncodeSlcHdr_x72c
    /*00000990*/ UBFX        R3, R1, #8, #8 
    /*00000994*/ LDRB        R3, [R5, R3] 
    /*00000998*/ ADD         R3, R3, #16 
    /*0000099c*/ CMP         R3, #24 
    /*000009a0*/ UXTBEQ      R3, R1 
    /*000009a4*/ LDRBEQ      R3, [R5, R3] 
    /*000009a8*/ ADDEQ       R3, R3, #24 
    /*000009ac*/ B           H264eEncodeSlcHdr_x72c
    H264eEncodeSlcHdr_x9b0:
    /*000009b0*/ CMP         R2, #1 
    /*000009b4*/ BLS         H264eEncodeSlcHdr_x8d0
    /*000009b8*/ CMP         R2, #2 
    /*000009bc*/ BEQ         H264eEncodeSlcHdr_x940
    /*000009c0*/ CMP         R2, #3 
    /*000009c4*/ MOVEQ       IP, #2 
    /*000009c8*/ BEQ         H264eEncodeSlcHdr_x8d4
    /*000009cc*/ SUB         R2, R2, #4 
    /*000009d0*/ CMP         R2, #1 
    /*000009d4*/ MOVHI       IP, #0 
    /*000009d8*/ MOVLS       IP, #3 
    /*000009dc*/ B           H264eEncodeSlcHdr_x8d4
    H264eEncodeSlcHdr_x9e0:
    /*000009e0*/ UBFX        R3, R1, #16, #8 
    /*000009e4*/ LDRB        R3, [R5, R3] 
    /*000009e8*/ ADD         R3, R3, #8 
    /*000009ec*/ CMP         R3, #16 
    /*000009f0*/ BNE         H264eEncodeSlcHdr_x56c
    /*000009f4*/ UBFX        R3, R1, #8, #8 
    /*000009f8*/ LDRB        R3, [R5, R3] 
    /*000009fc*/ ADD         R3, R3, #16 
    /*00000a00*/ CMP         R3, #24 
    /*00000a04*/ UXTBEQ      R3, R1 
    /*00000a08*/ LDRBEQ      R3, [R5, R3] 
    /*00000a0c*/ ADDEQ       R3, R3, #24 
    /*00000a10*/ B           H264eEncodeSlcHdr_x56c
    H264eEncodeSlcHdr_xa14:
    /*00000a14*/ MOV         R2, #1 
    /*00000a18*/ B           H264eEncodeSlcHdr_x900
    H264eEncodeSlcHdr_xa1c:
    /*00000a1c*/ UBFX        R3, R1, #16, #8 
    /*00000a20*/ LDRB        R3, [R5, R3] 
    /*00000a24*/ ADD         R3, R3, #8 
    /*00000a28*/ CMP         R3, #16 
    /*00000a2c*/ BNE         H264eEncodeSlcHdr_x614
    /*00000a30*/ UBFX        R3, R1, #8, #8 
    /*00000a34*/ LDRB        R3, [R5, R3] 
    /*00000a38*/ ADD         R3, R3, #16 
    /*00000a3c*/ CMP         R3, #24 
    /*00000a40*/ UXTBEQ      R3, R1 
    /*00000a44*/ LDRBEQ      R3, [R5, R3] 
    /*00000a48*/ ADDEQ       R3, R3, #24 
    /*00000a4c*/ B           H264eEncodeSlcHdr_x614
    H264eEncodeSlcHdr_xa50:
    /*00000a50*/ UBFX        R3, R1, #16, #8 
    /*00000a54*/ LDRB        R3, [R5, R3] 
    /*00000a58*/ ADD         R3, R3, #8 
    /*00000a5c*/ CMP         R3, #16 
    /*00000a60*/ BNE         H264eEncodeSlcHdr_x8bc
    /*00000a64*/ UBFX        R3, R1, #8, #8 
    /*00000a68*/ LDRB        R3, [R5, R3] 
    /*00000a6c*/ ADD         R3, R3, #16 
    /*00000a70*/ CMP         R3, #24 
    /*00000a74*/ UXTBEQ      R3, R1 
    /*00000a78*/ LDRBEQ      R3, [R5, R3] 
    /*00000a7c*/ ADDEQ       R3, R3, #24 
    /*00000a80*/ B           H264eEncodeSlcHdr_x8bc
    H264eEncodeSlcHdr_xa84:
    /*00000a84*/ UBFX        R3, R1, #16, #8 
    /*00000a88*/ LDRB        R2, [R5, R3] 
    /*00000a8c*/ ADD         R2, R2, #8 
    /*00000a90*/ CMP         R2, #16 
    /*00000a94*/ BNE         H264eEncodeSlcHdr_x6c
    /*00000a98*/ UBFX        R3, R1, #8, #8 
    /*00000a9c*/ LDRB        R2, [R5, R3] 
    /*00000aa0*/ ADD         R2, R2, #16 
    /*00000aa4*/ CMP         R2, #24 
    /*00000aa8*/ BNE         H264eEncodeSlcHdr_x6c
    /*00000aac*/ B           H264eEncodeSlcHdr_x410
    /*00000ab0*/ ANDEQ       R0, R0, R0, LSL #2 
FUNC_END H264eEncodeSlcHdr


FUNC_BEGIN H264CheckChnId
    /*00000ab4*/ CMP         R0, #15 
    /*00000ab8*/ BHI         H264CheckChnId_xac4
    /*00000abc*/ MOV         R0, #0 
    /*00000ac0*/ BX          LR 
    H264CheckChnId_xac4:
    /*00000ac4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00000ac8*/ SUB         SP, SP, #20 
    /*00000acc*/ MOV         R2, #16 
    /*00000ad0*/ MOV         R3, #0 
    /*00000ad4*/ STR         R0, [SP, #4] 
    /*00000ad8*/ MOV         R1, #10 
    /*00000adc*/ STR         R2, [SP, #12] 
    /*00000ae0*/ MOV         R0, #3 
    /*00000ae4*/ STR         R3, [SP, #8] 
    /*00000ae8*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78] 
    /*00000aec*/ MOV         R3, #226                    @ 0xe2 
    /*00000af0*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78] 
    /*00000af4*/ STR         R3, [SP] 
    /*00000af8*/ LDR         R3, [PC, #16]               @ 0x0000000000000b10 
    /*00000afc*/ BL          0x0000000000000AFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000b00*/ MOVW        R0, #32770                  @ 0x8002 
    /*00000b04*/ MOVT        R0, #40970                  @ 0xa00a 
    /*00000b08*/ ADD         SP, SP, #20 
    /*00000b0c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00000b10*/ ANDEQ       R0, R0, R4, LSL R1 
FUNC_END H264CheckChnId


FUNC_BEGIN H264CheckChnExist
    /*00000b14*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00000b18*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00000b1c*/ LDR         R3, [R3, R0, LSL #2] 
    /*00000b20*/ CMP         R3, #0 
    /*00000b24*/ BEQ         H264CheckChnExist_xb30
    /*00000b28*/ MOV         R0, #0 
    /*00000b2c*/ BX          LR 
    H264CheckChnExist_xb30:
    /*00000b30*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00000b34*/ SUB         SP, SP, #12 
    /*00000b38*/ MOV         R3, #239                    @ 0xef 
    /*00000b3c*/ MOV         R1, #10 
    /*00000b40*/ STR         R0, [SP, #4] 
    /*00000b44*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc8] 
    /*00000b48*/ STR         R3, [SP] 
    /*00000b4c*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc8] 
    /*00000b50*/ LDR         R3, [PC, #20]               @ 0x0000000000000b6c 
    /*00000b54*/ MOV         R0, #3 
    /*00000b58*/ BL          0x0000000000000B58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000b5c*/ MOVW        R0, #32773                  @ 0x8005 
    /*00000b60*/ MOVT        R0, #40970                  @ 0xa00a 
    /*00000b64*/ ADD         SP, SP, #12 
    /*00000b68*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00000b6c*/ ANDEQ       R0, R0, R4, LSR #2 
FUNC_END H264CheckChnExist


FUNC_BEGIN H264CheckNullPtr
    /*00000b70*/ CMP         R0, #0 
    /*00000b74*/ BEQ         H264CheckNullPtr_xb80
    /*00000b78*/ MOV         R0, #0 
    /*00000b7c*/ BX          LR 
    H264CheckNullPtr_xb80:
    /*00000b80*/ LDR         R3, [PC, #56]               @ 0x0000000000000bc0 
    /*00000b84*/ MOV         R1, #252                    @ 0xfc 
    /*00000b88*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00000b8c*/ SUB         SP, SP, #20 
    /*00000b90*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x100] 
    /*00000b94*/ MOV         R0, #3 
    /*00000b98*/ STR         R1, [SP, #8] 
    /*00000b9c*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x100] 
    /*00000ba0*/ STR         R1, [SP] 
    /*00000ba4*/ MOV         R1, #10 
    /*00000ba8*/ STR         R3, [SP, #4] 
    /*00000bac*/ BL          0x0000000000000BAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000bb0*/ MOVW        R0, #32774                  @ 0x8006 
    /*00000bb4*/ MOVT        R0, #40970                  @ 0xa00a 
    /*00000bb8*/ ADD         SP, SP, #20 
    /*00000bbc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00000bc0*/ ANDEQ       R0, R0, R8, LSR R1 
FUNC_END H264CheckNullPtr


FUNC_BEGIN H264eCheckChnGopAttr
    /*00000bc4*/ PUSH        {R4, R5, R6, LR} 
    /*00000bc8*/ SUB         SP, SP, #16 
    /*00000bcc*/ LDR         R4, [R0] 
    /*00000bd0*/ CMP         R4, #5 
    /*00000bd4*/ BHI         H264eCheckChnGopAttr_xcb8
    /*00000bd8*/ CMP         R4, #4 
    /*00000bdc*/ MOV         R5, R0 
    /*00000be0*/ MOV         R6, R1 
    /*00000be4*/ BEQ         H264eCheckChnGopAttr_xc24
    /*00000be8*/ CMP         R4, #5 
    /*00000bec*/ BEQ         H264eCheckChnGopAttr_xc64
    /*00000bf0*/ SUB         R3, R4, #4 
    /*00000bf4*/ CMP         R3, #1 
    /*00000bf8*/ LDRHI       R0, [R1, #16] 
    /*00000bfc*/ BLS         H264eCheckChnGopAttr_xc30
    H264eCheckChnGopAttr_xc00:
    /*00000c00*/ SUB         R0, R0, #3 
    /*00000c04*/ CMP         R4, #0 
    /*00000c08*/ CLZ         R0, R0 
    /*00000c0c*/ LSR         R0, R0, #5 
    /*00000c10*/ MOVEQ       R0, #0 
    /*00000c14*/ CMP         R0, #0 
    /*00000c18*/ BNE         H264eCheckChnGopAttr_xcf8
    H264eCheckChnGopAttr_xc1c:
    /*00000c1c*/ ADD         SP, SP, #16 
    /*00000c20*/ POP         {R4, R5, R6, PC} 
    H264eCheckChnGopAttr_xc24:
    /*00000c24*/ BL          0x0000000000000C24          @ H264E_DRV_BFrameSupport [R_ARM_CALL: .text+0x128e0] 
    /*00000c28*/ CMP         R0, #0 
    /*00000c2c*/ BEQ         H264eCheckChnGopAttr_xc88
    H264eCheckChnGopAttr_xc30:
    /*00000c30*/ LDR         R0, [R5, #4] 
    /*00000c34*/ BL          0x0000000000000C34          @ H264E_DRV_CheckBFrmNum [R_ARM_CALL: .text+0x128c4] 
    /*00000c38*/ CMP         R0, #0 
    /*00000c3c*/ BEQ         H264eCheckChnGopAttr_xd24
    /*00000c40*/ LDR         R0, [R6, #16] 
    /*00000c44*/ CMP         R0, #0 
    /*00000c48*/ BNE         H264eCheckChnGopAttr_xc00
    /*00000c4c*/ MOVW        R3, #427                    @ 0x1ab 
    /*00000c50*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x27c] 
    /*00000c54*/ STR         R0, [SP, #4] 
    /*00000c58*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x27c] 
    /*00000c5c*/ STR         R3, [SP] 
    /*00000c60*/ B           H264eCheckChnGopAttr_xc9c
    H264eCheckChnGopAttr_xc64:
    /*00000c64*/ BL          0x0000000000000C64          @ H264E_DRV_LowDelayBSupport [R_ARM_CALL: .text+0x128d8] 
    /*00000c68*/ CMP         R0, #0 
    /*00000c6c*/ BNE         H264eCheckChnGopAttr_xc30
    /*00000c70*/ MOVW        R3, #407                    @ 0x197 
    /*00000c74*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e4] 
    /*00000c78*/ STR         R4, [SP, #4] 
    /*00000c7c*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e4] 
    /*00000c80*/ STR         R3, [SP] 
    /*00000c84*/ B           H264eCheckChnGopAttr_xc9c
    H264eCheckChnGopAttr_xc88:
    /*00000c88*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x194] 
    /*00000c8c*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x194] 
    /*00000c90*/ MOV         R3, #396                    @ 0x18c 
    /*00000c94*/ STR         R4, [SP, #4] 
    /*00000c98*/ STR         R3, [SP] 
    H264eCheckChnGopAttr_xc9c:
    /*00000c9c*/ LDR         R3, [PC, #160]              @ 0x0000000000000d44 
    H264eCheckChnGopAttr_xca0:
    /*00000ca0*/ MOV         R1, #10 
    /*00000ca4*/ MOV         R0, #3 
    /*00000ca8*/ BL          0x0000000000000CA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000cac*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000cb0*/ MOVT        R0, #40970                  @ 0xa00a 
    /*00000cb4*/ B           H264eCheckChnGopAttr_xc1c
    H264eCheckChnGopAttr_xcb8:
    /*00000cb8*/ MOV         R2, #6 
    /*00000cbc*/ MOV         R3, #0 
    /*00000cc0*/ STR         R2, [SP, #12] 
    /*00000cc4*/ MOV         R1, #10 
    /*00000cc8*/ STR         R3, [SP, #8] 
    /*00000ccc*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14c] 
    /*00000cd0*/ MOVW        R3, #386                    @ 0x182 
    /*00000cd4*/ STR         R4, [SP, #4] 
    /*00000cd8*/ STR         R3, [SP] 
    /*00000cdc*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14c] 
    /*00000ce0*/ LDR         R3, [PC, #92]               @ 0x0000000000000d44 
    /*00000ce4*/ MOV         R0, #3 
    /*00000ce8*/ BL          0x0000000000000CE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000cec*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000cf0*/ MOVT        R0, #40970                  @ 0xa00a 
    /*00000cf4*/ B           H264eCheckChnGopAttr_xc1c
    H264eCheckChnGopAttr_xcf8:
    /*00000cf8*/ MOV         R3, #436                    @ 0x1b4 
    /*00000cfc*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c8] 
    /*00000d00*/ STR         R3, [SP] 
    /*00000d04*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c8] 
    /*00000d08*/ LDR         R3, [PC, #52]               @ 0x0000000000000d44 
    /*00000d0c*/ MOV         R1, #10 
    /*00000d10*/ MOV         R0, #3 
    /*00000d14*/ BL          0x0000000000000D14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000d18*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000d1c*/ MOVT        R0, #40970                  @ 0xa00a 
    /*00000d20*/ B           H264eCheckChnGopAttr_xc1c
    H264eCheckChnGopAttr_xd24:
    /*00000d24*/ LDR         R1, [R5, #4] 
    /*00000d28*/ MOVW        R3, #418                    @ 0x1a2 
    /*00000d2c*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x234] 
    /*00000d30*/ STR         R3, [SP] 
    /*00000d34*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x234] 
    /*00000d38*/ LDR         R3, [PC, #4]                @ 0x0000000000000d44 
    /*00000d3c*/ STR         R1, [SP, #4] 
    /*00000d40*/ B           H264eCheckChnGopAttr_xca0
    /*00000d44*/ ANDEQ       R0, R0, IP, ASR #2 
FUNC_END H264eCheckChnGopAttr


FUNC_BEGIN H264eGetFrameSize
    /*00000d48*/ PUSH        {R4, R5, R6, LR} 
    /*00000d4c*/ SUB         SP, SP, #8 
    /*00000d50*/ MOV         R6, R2 
    /*00000d54*/ MOV         R4, R1 
    /*00000d58*/ BL          0x0000000000000D58          @ H264E_DRV_RefRcnCompressSupport [R_ARM_CALL: .text+0x128f8] 
    /*00000d5c*/ SUBS        R2, R0, #0 
    /*00000d60*/ BNE         H264eGetFrameSize_xe0c
    /*00000d64*/ LDM         R4, {R0, R1} 
    /*00000d68*/ STR         R2, [R4, #24] 
    /*00000d6c*/ ADD         R3, R0, #63                 @ 0x3f 
    /*00000d70*/ ADD         R5, R1, #15 
    /*00000d74*/ BIC         R3, R3, #63                 @ 0x3f 
    /*00000d78*/ BIC         R5, R5, #15 
    /*00000d7c*/ STR         R2, [R4, #28] 
    /*00000d80*/ MUL         IP, R5, R3 
    /*00000d84*/ STR         R2, [R4, #32] 
    /*00000d88*/ STR         R2, [R4, #36]               @ 0x24 
    /*00000d8c*/ STR         R3, [R4, #8] 
    /*00000d90*/ STR         R3, [R4, #12] 
    /*00000d94*/ STR         IP, [R4, #16] 
    /*00000d98*/ LSR         IP, IP, #1 
    /*00000d9c*/ STR         IP, [R4, #20] 
    H264eGetFrameSize_xda0:
    /*00000da0*/ BL          0x0000000000000DA0          @ H264E_DRV_GetTmvSize [R_ARM_CALL: .text+0x15a18] 
    /*00000da4*/ LDR         R1, [R4, #4] 
    /*00000da8*/ STR         R0, [R4, #48]               @ 0x30 
    /*00000dac*/ LDR         R0, [R4] 
    /*00000db0*/ BL          0x0000000000000DB0          @ H264E_DRV_GetPmeSize [R_ARM_CALL: .text+0x15a34] 
    /*00000db4*/ LDR         R1, [R4, #4] 
    /*00000db8*/ STR         R0, [R4, #52]               @ 0x34 
    /*00000dbc*/ LDR         R0, [R4] 
    /*00000dc0*/ BL          0x0000000000000DC0          @ H264E_DRV_GetPmeInfoSize [R_ARM_CALL: .text+0x15a54] 
    /*00000dc4*/ CMP         R6, #1 
    /*00000dc8*/ STR         R0, [R4, #56]               @ 0x38 
    /*00000dcc*/ BEQ         H264eGetFrameSize_xe60
    H264eGetFrameSize_xdd0:
    /*00000dd0*/ LDR         IP, [R4, #36]               @ 0x24 
    /*00000dd4*/ LDR         R3, [R4, #32] 
    /*00000dd8*/ LDR         R1, [R4, #16] 
    /*00000ddc*/ ADD         R3, R3, IP 
    /*00000de0*/ LDR         R2, [R4, #48]               @ 0x30 
    /*00000de4*/ LDR         IP, [R4, #52]               @ 0x34 
    /*00000de8*/ ADD         R3, R3, R1 
    /*00000dec*/ LDR         R1, [R4, #20] 
    /*00000df0*/ ADD         R2, R2, IP 
    /*00000df4*/ ADD         R3, R3, R1 
    /*00000df8*/ ADD         R0, R2, R0 
    /*00000dfc*/ STR         R3, [R4, #40]               @ 0x28 
    /*00000e00*/ STR         R0, [R4, #44]               @ 0x2c 
    H264eGetFrameSize_xe04:
    /*00000e04*/ ADD         SP, SP, #8 
    /*00000e08*/ POP         {R4, R5, R6, PC} 
    H264eGetFrameSize_xe0c:
    /*00000e0c*/ MOV         R3, #0 
    /*00000e10*/ LDR         R1, [R4, #4] 
    /*00000e14*/ STR         R3, [R4, #24] 
    /*00000e18*/ STR         R3, [R4, #28] 
    /*00000e1c*/ LDR         R0, [R4] 
    /*00000e20*/ BL          0x0000000000000E20          @ H264E_DRV_GetCmpHeaderSize [R_ARM_CALL: .text+0x15a74] 
    /*00000e24*/ MOV         R2, R0 
    /*00000e28*/ LDM         R4, {R0, R1} 
    /*00000e2c*/ STR         R2, [R4, #32] 
    /*00000e30*/ ADD         R3, R0, #63                 @ 0x3f 
    /*00000e34*/ ADD         R5, R1, #15 
    /*00000e38*/ BIC         R3, R3, #63                 @ 0x3f 
    /*00000e3c*/ BIC         R5, R5, #15 
    /*00000e40*/ STR         R2, [R4, #36]               @ 0x24 
    /*00000e44*/ MUL         R2, R5, R3 
    /*00000e48*/ STR         R3, [R4, #8] 
    /*00000e4c*/ STR         R3, [R4, #12] 
    /*00000e50*/ STR         R2, [R4, #16] 
    /*00000e54*/ LSR         R2, R2, #1 
    /*00000e58*/ STR         R2, [R4, #20] 
    /*00000e5c*/ B           H264eGetFrameSize_xda0
    H264eGetFrameSize_xe60:
    /*00000e60*/ BL          0x0000000000000E60          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*00000e64*/ CMP         R0, #1 
    /*00000e68*/ LDRNE       R0, [R4, #56]               @ 0x38 
    /*00000e6c*/ BNE         H264eGetFrameSize_xdd0
    /*00000e70*/ ADD         R1, SP, #8 
    /*00000e74*/ MOV         R3, #0 
    /*00000e78*/ MOV         R0, SP 
    /*00000e7c*/ STR         R3, [SP] 
    /*00000e80*/ STR         R3, [R1, #-4]! 
    /*00000e84*/ BL          0x0000000000000E84          @ H264E_DRV_RefRcnShareBufferSizeEx [R_ARM_CALL: .text+0x14b54] 
    /*00000e88*/ LDR         IP, [R4, #20] 
    /*00000e8c*/ LDR         R2, [R4, #8] 
    /*00000e90*/ LDR         R3, [SP, #4] 
    /*00000e94*/ LDR         R0, [SP] 
    /*00000e98*/ LDR         R1, [R4, #16] 
    /*00000e9c*/ MLA         R3, R3, R2, IP 
    /*00000ea0*/ LDR         LR, [R4, #36]               @ 0x24 
    /*00000ea4*/ MLA         R2, R0, R2, R1 
    /*00000ea8*/ LDR         IP, [R4, #32] 
    /*00000eac*/ LDR         R1, [R4, #48]               @ 0x30 
    /*00000eb0*/ ADD         IP, IP, LR 
    /*00000eb4*/ LDR         LR, [R4, #56]               @ 0x38 
    /*00000eb8*/ STR         R3, [R4, #20] 
    /*00000ebc*/ ADD         R3, R2, R3 
    /*00000ec0*/ STR         R5, [R4, #64]               @ 0x40 
    /*00000ec4*/ ADD         R3, R3, IP, LSL #1 
    /*00000ec8*/ ADD         R5, R5, R0 
    /*00000ecc*/ ADD         R1, R1, LR 
    /*00000ed0*/ STR         R5, [R4, #60]               @ 0x3c 
    /*00000ed4*/ STR         R0, [R4, #68]               @ 0x44 
    /*00000ed8*/ STR         R2, [R4, #16] 
    /*00000edc*/ STR         R3, [R4, #40]               @ 0x28 
    /*00000ee0*/ STR         R1, [R4, #44]               @ 0x2c 
    /*00000ee4*/ BL          0x0000000000000EE4          @ H264E_DRV_IsSupportPmeShareBuf [R_ARM_CALL: .text+0x14b10] 
    /*00000ee8*/ CMP         R0, #1 
    /*00000eec*/ BEQ         H264eGetFrameSize_xf04
    /*00000ef0*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*00000ef4*/ LDR         R2, [R4, #52]               @ 0x34 
    /*00000ef8*/ ADD         R3, R3, R2 
    /*00000efc*/ STR         R3, [R4, #44]               @ 0x2c 
    /*00000f00*/ B           H264eGetFrameSize_xe04
    H264eGetFrameSize_xf04:
    /*00000f04*/ LDR         R0, [R4] 
    /*00000f08*/ BL          0x0000000000000F08          @ H264E_DRV_PmeShareBufferSizeEx [R_ARM_CALL: .text+0x14b1c] 
    /*00000f0c*/ LDR         R3, [R4, #52]               @ 0x34 
    /*00000f10*/ LDR         R2, [R4, #40]               @ 0x28 
    /*00000f14*/ ADD         R0, R0, R3 
    /*00000f18*/ STR         R0, [R4, #52]               @ 0x34 
    /*00000f1c*/ ADD         R2, R2, R0 
    /*00000f20*/ STR         R2, [R4, #40]               @ 0x28 
    /*00000f24*/ B           H264eGetFrameSize_xe04
FUNC_END H264eGetFrameSize


FUNC_BEGIN H264eCheckChnAttr
    /*00000f28*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00000f2c*/ MOV         R4, R0 
    /*00000f30*/ LDR         IP, [R0, #24] 
    /*00000f34*/ SUB         SP, SP, #164                @ 0xa4 
    /*00000f38*/ LDR         R3, [R4, #28] 
    /*00000f3c*/ MOV         R0, R1 
    /*00000f40*/ MOV         R6, R1 
    /*00000f44*/ MOV         R2, #0 
    /*00000f48*/ ADD         R1, SP, #16 
    /*00000f4c*/ STR         IP, [SP, #16] 
    /*00000f50*/ STR         R3, [SP, #20] 
    /*00000f54*/ LDR         R7, [R4, #4] 
    /*00000f58*/ LDR         R5, [R4, #8] 
    /*00000f5c*/ BL          0x0000000000000F5C          @ H264eGetFrameSize [R_ARM_CALL: .text+0xd48] 
    /*00000f60*/ LDR         R3, [R4, #8] 
    /*00000f64*/ MOV         R2, #0 
    /*00000f68*/ LDR         IP, [R4, #4] 
    /*00000f6c*/ MOV         R0, R6 
    /*00000f70*/ ADD         R1, SP, #88                 @ 0x58 
    /*00000f74*/ STR         R3, [SP, #92]               @ 0x5c 
    /*00000f78*/ STR         IP, [SP, #88]               @ 0x58 
    /*00000f7c*/ BL          0x0000000000000F7C          @ H264eGetFrameSize [R_ARM_CALL: .text+0xd48] 
    /*00000f80*/ LDR         R3, [SP, #56]               @ 0x38 
    /*00000f84*/ LDR         R2, [SP, #128]              @ 0x80 
    /*00000f88*/ CMP         R3, R2 
    /*00000f8c*/ BHI         H264eCheckChnAttr_x10e0
    /*00000f90*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*00000f94*/ LDR         R2, [SP, #132]              @ 0x84 
    /*00000f98*/ CMP         R3, R2 
    /*00000f9c*/ BHI         H264eCheckChnAttr_x10fc
    /*00000fa0*/ MOVW        R3, #0                      @ H264eMiniBufMode [R_ARM_MOVW_ABS_NC: .bss+0x84] 
    /*00000fa4*/ MOVT        R3, #0                      @ H264eMiniBufMode [R_ARM_MOVT_ABS: .bss+0x84] 
    /*00000fa8*/ LDR         R3, [R3] 
    /*00000fac*/ CMP         R3, #0 
    /*00000fb0*/ BEQ         H264eCheckChnAttr_xff4
    /*00000fb4*/ LDR         R3, [R4, #12] 
    /*00000fb8*/ CMP         R3, #32768                  @ 0x8000 
    /*00000fbc*/ BCC         H264eCheckChnAttr_x1138
    H264eCheckChnAttr_xfc0:
    /*00000fc0*/ TST         R3, #63                     @ 0x3f 
    /*00000fc4*/ BNE         H264eCheckChnAttr_x10c4
    /*00000fc8*/ LDR         R0, [R4, #16] 
    /*00000fcc*/ BL          0x0000000000000FCC          @ H264E_DRV_CheckProfile [R_ARM_CALL: .text+0x128b0] 
    /*00000fd0*/ CMP         R0, #0 
    /*00000fd4*/ BEQ         H264eCheckChnAttr_x1118
    /*00000fd8*/ LDR         R3, [R4, #32] 
    /*00000fdc*/ CMP         R3, #1 
    /*00000fe0*/ BHI         H264eCheckChnAttr_x1094
    /*00000fe4*/ BEQ         H264eCheckChnAttr_x1040
    H264eCheckChnAttr_xfe8:
    /*00000fe8*/ MOV         R0, #0 
    H264eCheckChnAttr_xfec:
    /*00000fec*/ ADD         SP, SP, #164                @ 0xa4 
    /*00000ff0*/ POP         {R4, R5, R6, R7, PC} 
    H264eCheckChnAttr_xff4:
    /*00000ff4*/ MUL         R5, R5, R7 
    /*00000ff8*/ LDR         R3, [R4, #12] 
    /*00000ffc*/ ADD         R5, R5, R5, LSL #1 
    /*00001000*/ LSR         R5, R5, #2 
    /*00001004*/ CMP         R3, R5 
    /*00001008*/ BCS         H264eCheckChnAttr_xfc0
    /*0000100c*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c4] 
    /*00001010*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c4] 
    /*00001014*/ MOVW        R1, #313                    @ 0x139 
    /*00001018*/ STR         R5, [SP, #8] 
    /*0000101c*/ STR         R3, [SP, #4] 
    /*00001020*/ STR         R1, [SP] 
    H264eCheckChnAttr_x1024:
    /*00001024*/ LDR         R3, [PC, #328]              @ 0x0000000000001174 
    H264eCheckChnAttr_x1028:
    /*00001028*/ MOV         R1, #10 
    /*0000102c*/ MOV         R0, #3 
    /*00001030*/ BL          0x0000000000001030          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001034*/ MOVW        R0, #32771                  @ 0x8003 
    /*00001038*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000103c*/ B           H264eCheckChnAttr_xfec
    H264eCheckChnAttr_x1040:
    /*00001040*/ BL          0x0000000000001040          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*00001044*/ CMP         R0, #0 
    /*00001048*/ BEQ         H264eCheckChnAttr_x115c
    /*0000104c*/ LDR         R3, [R4, #32] 
    /*00001050*/ CMP         R3, #1 
    /*00001054*/ BNE         H264eCheckChnAttr_xfe8
    /*00001058*/ MOVW        R3, #0                      @ H264eVBSource [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000105c*/ MOVT        R3, #0                      @ H264eVBSource [R_ARM_MOVT_ABS: .data+0x0] 
    /*00001060*/ LDR         R0, [R3] 
    /*00001064*/ CMP         R0, #3 
    /*00001068*/ BNE         H264eCheckChnAttr_xfe8
    /*0000106c*/ MOVW        R3, #367                    @ 0x16f 
    /*00001070*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a8] 
    /*00001074*/ STR         R3, [SP] 
    /*00001078*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a8] 
    /*0000107c*/ LDR         R3, [PC, #240]              @ 0x0000000000001174 
    /*00001080*/ MOV         R1, #10 
    /*00001084*/ BL          0x0000000000001084          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001088*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000108c*/ MOVT        R0, #40970                  @ 0xa00a 
    /*00001090*/ B           H264eCheckChnAttr_xfec
    H264eCheckChnAttr_x1094:
    /*00001094*/ STR         R3, [SP, #4] 
    /*00001098*/ MOVW        R3, #351                    @ 0x15f 
    /*0000109c*/ STR         R3, [SP] 
    /*000010a0*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f8] 
    /*000010a4*/ LDR         R3, [PC, #200]              @ 0x0000000000001174 
    /*000010a8*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f8] 
    H264eCheckChnAttr_x10ac:
    /*000010ac*/ MOV         R1, #10 
    /*000010b0*/ MOV         R0, #3 
    /*000010b4*/ BL          0x00000000000010B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000010b8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000010bc*/ MOVT        R0, #40970                  @ 0xa00a 
    /*000010c0*/ B           H264eCheckChnAttr_xfec
    H264eCheckChnAttr_x10c4:
    /*000010c4*/ STR         R3, [SP, #4] 
    /*000010c8*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x478] 
    /*000010cc*/ MOVW        R3, #335                    @ 0x14f 
    /*000010d0*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x478] 
    /*000010d4*/ STR         R3, [SP] 
    /*000010d8*/ LDR         R3, [PC, #148]              @ 0x0000000000001174 
    /*000010dc*/ B           H264eCheckChnAttr_x10ac
    H264eCheckChnAttr_x10e0:
    /*000010e0*/ STR         R2, [SP, #8] 
    /*000010e4*/ MOVW        R1, #294                    @ 0x126 
    /*000010e8*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x304] 
    /*000010ec*/ STR         R3, [SP, #4] 
    /*000010f0*/ STR         R1, [SP] 
    /*000010f4*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x304] 
    /*000010f8*/ B           H264eCheckChnAttr_x1024
    H264eCheckChnAttr_x10fc:
    /*000010fc*/ STR         R2, [SP, #8] 
    /*00001100*/ MOVW        R1, #302                    @ 0x12e 
    /*00001104*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x360] 
    /*00001108*/ STR         R3, [SP, #4] 
    /*0000110c*/ STR         R1, [SP] 
    /*00001110*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x360] 
    /*00001114*/ B           H264eCheckChnAttr_x1024
    H264eCheckChnAttr_x1118:
    /*00001118*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c4] 
    /*0000111c*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c4] 
    /*00001120*/ LDR         R1, [R4, #16] 
    /*00001124*/ MOVW        R3, #343                    @ 0x157 
    /*00001128*/ STR         R3, [SP] 
    H264eCheckChnAttr_x112c:
    /*0000112c*/ LDR         R3, [PC, #64]               @ 0x0000000000001174 
    /*00001130*/ STR         R1, [SP, #4] 
    /*00001134*/ B           H264eCheckChnAttr_x10ac
    H264eCheckChnAttr_x1138:
    /*00001138*/ MOV         R2, #32768                  @ 0x8000 
    /*0000113c*/ STR         R3, [SP, #4] 
    /*00001140*/ STR         R2, [SP, #8] 
    /*00001144*/ MOV         R3, #324                    @ 0x144 
    /*00001148*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x420] 
    /*0000114c*/ STR         R3, [SP] 
    /*00001150*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x420] 
    /*00001154*/ LDR         R3, [PC, #24]               @ 0x0000000000001174 
    /*00001158*/ B           H264eCheckChnAttr_x1028
    H264eCheckChnAttr_x115c:
    /*0000115c*/ LDR         R1, [R4, #32] 
    /*00001160*/ MOVW        R3, #359                    @ 0x167 
    /*00001164*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x544] 
    /*00001168*/ STR         R3, [SP] 
    /*0000116c*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x544] 
    /*00001170*/ B           H264eCheckChnAttr_x112c
    /*00001174*/ ANDEQ       R0, R0, R4, ROR #2 
FUNC_END H264eCheckChnAttr


FUNC_BEGIN H264E_CheckChnAttr
    /*00001178*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000117c*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00001180*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00001184*/ MOV         R6, R2 
    /*00001188*/ LDR         R5, [R3, R0, LSL #2] 
    /*0000118c*/ SUB         SP, SP, #12 
    /*00001190*/ LDR         R3, [R1, #4] 
    /*00001194*/ LDR         R2, [R5, #956]              @ 0x3bc 
    /*00001198*/ CMP         R2, R3 
    /*0000119c*/ BEQ         H264E_CheckChnAttr_x11d0
    H264E_CheckChnAttr_x11a0:
    /*000011a0*/ MOV         R3, #456                    @ 0x1c8 
    H264E_CheckChnAttr_x11a4:
    /*000011a4*/ STR         R3, [SP] 
    /*000011a8*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60c] 
    /*000011ac*/ LDR         R3, [PC, #264]              @ 0x00000000000012bc 
    /*000011b0*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60c] 
    /*000011b4*/ MOV         R1, #10 
    /*000011b8*/ MOV         R0, #3 
    /*000011bc*/ BL          0x00000000000011BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000011c0*/ MOVW        R0, #32777                  @ 0x8009 
    /*000011c4*/ MOVT        R0, #40970                  @ 0xa00a 
    H264E_CheckChnAttr_x11c8:
    /*000011c8*/ ADD         SP, SP, #12 
    /*000011cc*/ POP         {R4, R5, R6, R7, PC} 
    H264E_CheckChnAttr_x11d0:
    /*000011d0*/ LDR         R2, [R5, #960]              @ 0x3c0 
    /*000011d4*/ MOV         R4, R1 
    /*000011d8*/ LDR         R3, [R1, #8] 
    /*000011dc*/ CMP         R2, R3 
    /*000011e0*/ BNE         H264E_CheckChnAttr_x11a0
    /*000011e4*/ LDR         R2, [R5, #964]              @ 0x3c4 
    /*000011e8*/ LDR         R3, [R1, #12] 
    /*000011ec*/ CMP         R2, R3 
    /*000011f0*/ BNE         H264E_CheckChnAttr_x11a0
    /*000011f4*/ LDR         R2, [R5, #972]              @ 0x3cc 
    /*000011f8*/ LDR         R3, [R1, #20] 
    /*000011fc*/ CMP         R2, R3 
    /*00001200*/ BNE         H264E_CheckChnAttr_x11a0
    /*00001204*/ LDR         R2, [R5, #968]              @ 0x3c8 
    /*00001208*/ LDR         R3, [R1, #16] 
    /*0000120c*/ CMP         R2, R3 
    /*00001210*/ BNE         H264E_CheckChnAttr_x11a0
    /*00001214*/ MOV         R7, R0 
    /*00001218*/ BL          0x0000000000001218          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*0000121c*/ CMP         R0, #1 
    /*00001220*/ BNE         H264E_CheckChnAttr_x1238
    /*00001224*/ LDR         R3, [R4, #32] 
    /*00001228*/ LDR         R2, [R5, #984]              @ 0x3d8 
    /*0000122c*/ CMP         R2, R3 
    /*00001230*/ MOVWNE      R3, #463                    @ 0x1cf 
    /*00001234*/ BNE         H264E_CheckChnAttr_x11a4
    H264E_CheckChnAttr_x1238:
    /*00001238*/ LDR         R1, [R6] 
    /*0000123c*/ MOV         R0, R4 
    /*00001240*/ BL          0x0000000000001240          @ H264eCheckChnAttr [R_ARM_CALL: .text+0xf28] 
    /*00001244*/ CMP         R0, #0 
    /*00001248*/ BNE         H264E_CheckChnAttr_x1290
    /*0000124c*/ MOV         R1, R4 
    /*00001250*/ MOV         R0, R6 
    /*00001254*/ BL          0x0000000000001254          @ H264eCheckChnGopAttr [R_ARM_CALL: .text+0xbc4] 
    /*00001258*/ CMP         R0, #0 
    /*0000125c*/ BEQ         H264E_CheckChnAttr_x11c8
    /*00001260*/ MOVW        R3, #490                    @ 0x1ea 
    /*00001264*/ STR         R7, [SP, #4] 
    /*00001268*/ STR         R3, [SP] 
    /*0000126c*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x67c] 
    /*00001270*/ LDR         R3, [PC, #68]               @ 0x00000000000012bc 
    /*00001274*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x67c] 
    /*00001278*/ MOV         R1, #10 
    /*0000127c*/ MOV         R0, #3 
    /*00001280*/ BL          0x0000000000001280          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001284*/ MOVW        R0, #32771                  @ 0x8003 
    /*00001288*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000128c*/ B           H264E_CheckChnAttr_x11c8
    H264E_CheckChnAttr_x1290:
    /*00001290*/ MOVW        R3, #482                    @ 0x1e2 
    /*00001294*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x648] 
    /*00001298*/ STR         R3, [SP] 
    /*0000129c*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x648] 
    /*000012a0*/ LDR         R3, [PC, #20]               @ 0x00000000000012bc 
    /*000012a4*/ MOV         R1, #10 
    /*000012a8*/ MOV         R0, #3 
    /*000012ac*/ BL          0x00000000000012AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000012b0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000012b4*/ MOVT        R0, #40970                  @ 0xa00a 
    /*000012b8*/ B           H264E_CheckChnAttr_x11c8
    /*000012bc*/ ANDEQ       R0, R0, R8, ROR R1 
FUNC_END H264E_CheckChnAttr


FUNC_BEGIN H264eScanAndAdd03
    /*000012c0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000012c4*/ MOV         R5, R1 
    /*000012c8*/ MOV         R7, R2 
    /*000012cc*/ MOV         R1, R0 
    /*000012d0*/ MOV         R6, R0 
    /*000012d4*/ MOV         R2, R3 
    /*000012d8*/ MOV         R0, R5 
    /*000012dc*/ MOV         R4, R3 
    /*000012e0*/ BL          0x00000000000012E0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000012e4*/ CMP         R4, R7 
    /*000012e8*/ BCS         H264eScanAndAdd03_x1348
    /*000012ec*/ ADD         IP, R6, R4 
    /*000012f0*/ MOV         R0, R4 
    /*000012f4*/ MOV         R2, #0 
    /*000012f8*/ MOV         LR, #3 
    /*000012fc*/ B           H264eScanAndAdd03_x1320
    H264eScanAndAdd03_x1300:
    /*00001300*/ CMP         R1, #0 
    /*00001304*/ ADD         R2, R2, #1 
    /*00001308*/ MOVNE       R2, #0 
    H264eScanAndAdd03_x130c:
    /*0000130c*/ SUB         R3, IP, R6 
    /*00001310*/ STRB        R1, [R5, R0] 
    /*00001314*/ CMP         R7, R3 
    /*00001318*/ ADD         R0, R0, #1 
    /*0000131c*/ BLS         H264eScanAndAdd03_x1344
    H264eScanAndAdd03_x1320:
    /*00001320*/ CMP         R2, #2 
    /*00001324*/ LDRB        R1, [IP], #1 
    /*00001328*/ BNE         H264eScanAndAdd03_x1300
    /*0000132c*/ CLZ         R2, R1 
    /*00001330*/ TST         R1, #252                    @ 0xfc 
    /*00001334*/ STRBEQ      LR, [R5, R0] 
    /*00001338*/ ADDEQ       R0, R0, #1 
    /*0000133c*/ LSR         R2, R2, #5 
    /*00001340*/ B           H264eScanAndAdd03_x130c
    H264eScanAndAdd03_x1344:
    /*00001344*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264eScanAndAdd03_x1348:
    /*00001348*/ MOV         R0, R4 
    /*0000134c*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END H264eScanAndAdd03


FUNC_BEGIN H264eInitNaluHead
    /*00001350*/ PUSH        {R4, R5, LR} 
    /*00001354*/ MOV         LR, #0 
    /*00001358*/ LDR         IP, [SP, #12] 
    /*0000135c*/ LDRD        R4, [SP, #20] 
    /*00001360*/ STM         IP, {R1, R2} 
    /*00001364*/ STRB        R3, [IP, #8] 
    /*00001368*/ STR         R0, [IP, #12] 
    /*0000136c*/ STRD        R4, [IP, #16] 
    /*00001370*/ STRB        LR, [IP, #9] 
    /*00001374*/ STRB        LR, [IP, #10] 
    /*00001378*/ STRB        LR, [IP, #11] 
    /*0000137c*/ POP         {R4, R5, PC} 
FUNC_END H264eInitNaluHead


FUNC_BEGIN H264eWrStrBufSEI
    /*00001380*/ MOVW        R1, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00001384*/ MOVT        R1, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00001388*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000138c*/ SUB         SP, SP, #92                 @ 0x5c 
    /*00001390*/ LDR         R5, [R1, R0, LSL #2] 
    /*00001394*/ MOV         R7, R0 
    /*00001398*/ STRD        R2, [SP, #16] 
    /*0000139c*/ LDR         R4, [R5, #1060]             @ 0x424 
    /*000013a0*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*000013a4*/ LDR         R1, [R4, #164]              @ 0xa4 
    /*000013a8*/ LDR         R2, [R4, #172]              @ 0xac 
    /*000013ac*/ LDR         R3, [R3] 
    /*000013b0*/ LDR         R1, [R1] 
    /*000013b4*/ LDR         R0, [R4, #168]              @ 0xa8 
    /*000013b8*/ LDR         R2, [R2] 
    /*000013bc*/ CMP         R3, R1 
    /*000013c0*/ LDR         LR, [R0] 
    /*000013c4*/ MOVCC       R0, #0 
    /*000013c8*/ MOVCS       R0, #1 
    /*000013cc*/ CMP         R3, R2 
    /*000013d0*/ MOVHI       R3, #0 
    /*000013d4*/ MOVLS       R3, #1 
    /*000013d8*/ CMP         LR, R2 
    /*000013dc*/ AND         IP, R0, R3 
    /*000013e0*/ MOVCC       R2, #0 
    /*000013e4*/ MOVCS       R2, #1 
    /*000013e8*/ TST         IP, R2 
    /*000013ec*/ BNE         H264eWrStrBufSEI_x141c
    /*000013f0*/ CMP         R1, LR 
    /*000013f4*/ MOVCC       R1, #0 
    /*000013f8*/ MOVCS       R1, #1 
    /*000013fc*/ TST         IP, R1 
    /*00001400*/ BNE         H264eWrStrBufSEI_x141c
    /*00001404*/ AND         R0, R0, R2 
    /*00001408*/ TST         R1, R0 
    /*0000140c*/ BNE         H264eWrStrBufSEI_x141c
    /*00001410*/ AND         R3, R3, R2 
    /*00001414*/ TST         R1, R3 
    /*00001418*/ BEQ         H264eWrStrBufSEI_x14e0
    H264eWrStrBufSEI_x141c:
    /*0000141c*/ LDR         IP, [R5, #1236]             @ 0x4d4 
    /*00001420*/ CMP         IP, #0 
    /*00001424*/ BLE         H264eWrStrBufSEI_x14ac
    /*00001428*/ LDR         R2, [R5, #1232]             @ 0x4d0 
    /*0000142c*/ SUB         LR, IP, #1 
    /*00001430*/ LDR         R9, [R5, #1220]             @ 0x4c4 
    /*00001434*/ SUBS        R2, R2, #1 
    /*00001438*/ LDRMI       R3, [R5, #1224]             @ 0x4c8 
    /*0000143c*/ ADDMI       R2, R2, R3 
    /*00001440*/ LDR         R6, [R9, R2, LSL #2] 
    /*00001444*/ LSL         SL, R2, #2 
    /*00001448*/ STR         R2, [R5, #1232]             @ 0x4d0 
    /*0000144c*/ STR         LR, [R5, #1236]             @ 0x4d4 
    /*00001450*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*00001454*/ LDR         FP, [R4, #168]              @ 0xa8 
    /*00001458*/ LDR         R0, [R6, #4] 
    /*0000145c*/ LDR         R1, [R3] 
    /*00001460*/ TST         R0, #63                     @ 0x3f 
    /*00001464*/ LDR         R3, [FP] 
    /*00001468*/ ORRNE       R8, R0, #63                 @ 0x3f 
    /*0000146c*/ LDR         FP, [R4, #12] 
    /*00001470*/ ADDNE       R8, R8, #1 
    /*00001474*/ MOVEQ       R8, R0 
    /*00001478*/ CMP         R1, R3 
    /*0000147c*/ SUBLS       R1, R1, FP 
    /*00001480*/ SUBHI       R1, R1, R3 
    /*00001484*/ LDRLS       FP, [R4, #8] 
    /*00001488*/ SUBHI       R1, R1, FP 
    /*0000148c*/ ADDLS       R1, R1, FP 
    /*00001490*/ ADD         FP, R8, #128                @ 0x80 
    /*00001494*/ SUBLS       R1, R1, R3 
    /*00001498*/ CMP         FP, R1 
    /*0000149c*/ BLS         H264eWrStrBufSEI_x15a8
    /*000014a0*/ LDR         R3, [R5, #1224]             @ 0x4c8 
    /*000014a4*/ CMP         LR, R3 
    /*000014a8*/ BLT         H264eWrStrBufSEI_x14b8
    H264eWrStrBufSEI_x14ac:
    /*000014ac*/ MVN         R0, #0 
    /*000014b0*/ ADD         SP, SP, #92                 @ 0x5c 
    /*000014b4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eWrStrBufSEI_x14b8:
    /*000014b8*/ STR         R6, [R9, SL] 
    /*000014bc*/ ADD         R2, R2, #1 
    /*000014c0*/ LDR         R3, [R5, #1224]             @ 0x4c8 
    /*000014c4*/ MVN         R0, #0 
    /*000014c8*/ STR         IP, [R5, #1236]             @ 0x4d4 
    /*000014cc*/ CMP         R2, R3 
    /*000014d0*/ MOVGE       R2, #0 
    /*000014d4*/ STR         R2, [R5, #1232]             @ 0x4d0 
    /*000014d8*/ ADD         SP, SP, #92                 @ 0x5c 
    /*000014dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eWrStrBufSEI_x14e0:
    /*000014e0*/ LDR         IP, [R4, #64]               @ 0x40 
    /*000014e4*/ MOVW        R2, #706                    @ 0x2c2 
    /*000014e8*/ LDR         R3, [R4, #128]              @ 0x80 
    /*000014ec*/ MOVW        R0, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x714] 
    /*000014f0*/ LDR         R1, [PC, #1172]             @ 0x000000000000198c 
    /*000014f4*/ MOVT        R0, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x714] 
    /*000014f8*/ STR         IP, [SP, #8] 
    /*000014fc*/ LDR         IP, [R4, #32] 
    /*00001500*/ STR         IP, [SP, #4] 
    /*00001504*/ LDR         IP, [R4, #96]               @ 0x60 
    /*00001508*/ STR         IP, [SP] 
    /*0000150c*/ BL          0x000000000000150C          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00001510*/ ADD         R0, R4, #164                @ 0xa4 
    /*00001514*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*00001518*/ LDM         R0, {R0, R1, R2} 
    /*0000151c*/ LDR         R3, [R3] 
    /*00001520*/ LDR         LR, [R0] 
    /*00001524*/ LDR         R2, [R2] 
    /*00001528*/ CMP         R3, LR 
    /*0000152c*/ LDR         R1, [R1] 
    /*00001530*/ MOVCC       R0, #0 
    /*00001534*/ MOVCS       R0, #1 
    /*00001538*/ CMP         R3, R2 
    /*0000153c*/ MOVHI       R3, #0 
    /*00001540*/ MOVLS       R3, #1 
    /*00001544*/ CMP         R1, R2 
    /*00001548*/ AND         IP, R0, R3 
    /*0000154c*/ MOVCC       R2, #0 
    /*00001550*/ MOVCS       R2, #1 
    /*00001554*/ TST         IP, R2 
    /*00001558*/ BNE         H264eWrStrBufSEI_x141c
    /*0000155c*/ CMP         LR, R1 
    /*00001560*/ MOVCC       R1, #0 
    /*00001564*/ MOVCS       R1, #1 
    /*00001568*/ TST         IP, R1 
    /*0000156c*/ BNE         H264eWrStrBufSEI_x141c
    /*00001570*/ AND         R0, R0, R2 
    /*00001574*/ TST         R1, R0 
    /*00001578*/ BNE         H264eWrStrBufSEI_x141c
    /*0000157c*/ AND         R3, R3, R2 
    /*00001580*/ TST         R1, R3 
    /*00001584*/ BNE         H264eWrStrBufSEI_x141c
    /*00001588*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x76c] 
    /*0000158c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00001590*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x76c] 
    /*00001594*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00001598*/ MOVW        R2, #715                    @ 0x2cb 
    /*0000159c*/ LDR         R1, [PC, #1000]             @ 0x000000000000198c 
    /*000015a0*/ BL          0x00000000000015A0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000015a4*/ B           H264eWrStrBufSEI_x141c
    H264eWrStrBufSEI_x15a8:
    /*000015a8*/ LDRD        SL, [SP, #16] 
    /*000015ac*/ CMP         R1, #63                     @ 0x3f 
    /*000015b0*/ MOV         R9, #0 
    /*000015b4*/ SUB         R0, R8, R0 
    /*000015b8*/ ADD         R1, R8, #64                 @ 0x40 
    /*000015bc*/ MOV         R2, #6 
    /*000015c0*/ STR         R7, [SP, #36]               @ 0x24 
    /*000015c4*/ STR         R0, [SP, #28] 
    /*000015c8*/ STRD        SL, [SP, #40]               @ 0x28 
    /*000015cc*/ STR         R1, [SP, #24] 
    /*000015d0*/ STRB        R2, [SP, #32] 
    /*000015d4*/ STRB        R9, [SP, #33]               @ 0x21 
    /*000015d8*/ STRB        R9, [SP, #34]               @ 0x22 
    /*000015dc*/ STRB        R9, [SP, #35]               @ 0x23 
    /*000015e0*/ BLS         H264eWrStrBufSEI_x1974
    /*000015e4*/ LDR         R2, [R4, #8] 
    /*000015e8*/ ADD         LR, R3, #64                 @ 0x40 
    /*000015ec*/ CMP         LR, R2 
    /*000015f0*/ BCS         H264eWrStrBufSEI_x17f8
    /*000015f4*/ LDR         R1, [R4, #176]              @ 0xb0 
    /*000015f8*/ MVN         R2, #0 
    /*000015fc*/ MOV         R7, #7 
    /*00001600*/ ADD         R3, R1, R3 
    /*00001604*/ ADD         IP, R3, #64                 @ 0x40 
    H264eWrStrBufSEI_x1608:
    /*00001608*/ SUB         R3, R3, #8 
    /*0000160c*/ ADD         FP, SP, #24 
    /*00001610*/ MOV         SL, R7 
    H264eWrStrBufSEI_x1614:
    /*00001614*/ SUB         SL, SL, #1 
    /*00001618*/ LDRD        R0, [FP], #8 
    /*0000161c*/ CMN         SL, #1 
    /*00001620*/ STRD        R0, [R3, #8]! 
    /*00001624*/ BNE         H264eWrStrBufSEI_x1614
    /*00001628*/ ADD         R7, R7, #1 
    /*0000162c*/ ADD         R3, SP, #24 
    /*00001630*/ ADD         R7, R3, R7, LSL #3 
    H264eWrStrBufSEI_x1634:
    /*00001634*/ CMP         R9, #0 
    /*00001638*/ SUBNE       IP, IP, #8 
    /*0000163c*/ BEQ         H264eWrStrBufSEI_x1654
    H264eWrStrBufSEI_x1640:
    /*00001640*/ SUB         R2, R2, #1 
    /*00001644*/ LDRD        R0, [R7], #8 
    /*00001648*/ CMN         R2, #1 
    /*0000164c*/ STRD        R0, [IP, #8]! 
    /*00001650*/ BNE         H264eWrStrBufSEI_x1640
    H264eWrStrBufSEI_x1654:
    /*00001654*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00001658*/ STR         LR, [R3] 
    H264eWrStrBufSEI_x165c:
    /*0000165c*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*00001660*/ ANDS        FP, R8, #3 
    /*00001664*/ LDR         R2, [R4, #168]              @ 0xa8 
    /*00001668*/ LDR         LR, [R6] 
    /*0000166c*/ LDR         R3, [R3] 
    /*00001670*/ LDR         IP, [R2] 
    /*00001674*/ BNE         H264eWrStrBufSEI_x1944
    /*00001678*/ CMP         R3, IP 
    /*0000167c*/ SUBHI       R3, R3, IP 
    /*00001680*/ LDRLS       R0, [R4, #12] 
    /*00001684*/ LDRLS       R1, [R4, #8] 
    /*00001688*/ SUBLS       R3, R3, R0 
    /*0000168c*/ LDRHI       R1, [R4, #12] 
    /*00001690*/ ADDLS       R3, R3, R1 
    /*00001694*/ SUBLS       R3, R3, IP 
    /*00001698*/ SUBHI       R3, R3, R1 
    /*0000169c*/ CMP         R8, R3 
    /*000016a0*/ BHI         H264eWrStrBufSEI_x195c
    /*000016a4*/ LDR         R3, [R4, #8] 
    /*000016a8*/ ADD         SL, R8, IP 
    /*000016ac*/ CMP         SL, R3 
    /*000016b0*/ BCC         H264eWrStrBufSEI_x1854
    /*000016b4*/ SUB         R9, R3, IP 
    /*000016b8*/ LDR         R7, [R4, #176]              @ 0xb0 
    /*000016bc*/ SUB         SL, R8, R9 
    /*000016c0*/ LSR         R9, R9, #3 
    /*000016c4*/ ADD         IP, R7, IP 
    /*000016c8*/ CMP         R9, #0 
    /*000016cc*/ LSR         FP, SL, #3 
    /*000016d0*/ SUB         R3, FP, #1 
    /*000016d4*/ SUB         R9, R9, #1 
    /*000016d8*/ BEQ         H264eWrStrBufSEI_x1704
    H264eWrStrBufSEI_x16dc:
    /*000016dc*/ SUB         IP, IP, #8 
    /*000016e0*/ MOV         R2, R9 
    /*000016e4*/ MOV         R8, LR 
    H264eWrStrBufSEI_x16e8:
    /*000016e8*/ SUB         R2, R2, #1 
    /*000016ec*/ LDRD        R0, [R8], #8 
    /*000016f0*/ CMN         R2, #1 
    /*000016f4*/ STRD        R0, [IP, #8]! 
    /*000016f8*/ BNE         H264eWrStrBufSEI_x16e8
    /*000016fc*/ ADD         R9, R9, #1 
    /*00001700*/ ADD         LR, LR, R9, LSL #3 
    H264eWrStrBufSEI_x1704:
    /*00001704*/ CMP         FP, #0 
    /*00001708*/ BEQ         H264eWrStrBufSEI_x1724
    /*0000170c*/ SUB         R7, R7, #8 
    H264eWrStrBufSEI_x1710:
    /*00001710*/ SUB         R3, R3, #1 
    /*00001714*/ LDRD        R0, [LR], #8 
    /*00001718*/ CMN         R3, #1 
    /*0000171c*/ STRD        R0, [R7, #8]! 
    /*00001720*/ BNE         H264eWrStrBufSEI_x1710
    H264eWrStrBufSEI_x1724:
    /*00001724*/ LDR         R2, [R4, #168]              @ 0xa8 
    H264eWrStrBufSEI_x1728:
    /*00001728*/ STR         SL, [R2] 
    H264eWrStrBufSEI_x172c:
    /*0000172c*/ LDR         R3, [R5, #1060]             @ 0x424 
    /*00001730*/ LDR         R2, [R3, #168]              @ 0xa8 
    /*00001734*/ LDR         R3, [R3, #172]              @ 0xac 
    /*00001738*/ LDR         R2, [R2] 
    /*0000173c*/ STR         R2, [R3] 
    /*00001740*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*00001744*/ LDR         R1, [R4, #164]              @ 0xa4 
    /*00001748*/ LDR         R2, [R4, #172]              @ 0xac 
    /*0000174c*/ LDR         R3, [R3] 
    /*00001750*/ LDR         R1, [R1] 
    /*00001754*/ LDR         R0, [R4, #168]              @ 0xa8 
    /*00001758*/ LDR         R2, [R2] 
    /*0000175c*/ CMP         R3, R1 
    /*00001760*/ LDR         LR, [R0] 
    /*00001764*/ MOVCC       R0, #0 
    /*00001768*/ MOVCS       R0, #1 
    /*0000176c*/ CMP         R3, R2 
    /*00001770*/ MOVHI       R3, #0 
    /*00001774*/ MOVLS       R3, #1 
    /*00001778*/ CMP         LR, R2 
    /*0000177c*/ AND         IP, R0, R3 
    /*00001780*/ MOVCC       R2, #0 
    /*00001784*/ MOVCS       R2, #1 
    /*00001788*/ TST         IP, R2 
    /*0000178c*/ BNE         H264eWrStrBufSEI_x17bc
    /*00001790*/ CMP         R1, LR 
    /*00001794*/ MOVCC       R1, #0 
    /*00001798*/ MOVCS       R1, #1 
    /*0000179c*/ TST         IP, R1 
    /*000017a0*/ BNE         H264eWrStrBufSEI_x17bc
    /*000017a4*/ AND         R0, R0, R2 
    /*000017a8*/ TST         R1, R0 
    /*000017ac*/ BNE         H264eWrStrBufSEI_x17bc
    /*000017b0*/ AND         R3, R3, R2 
    /*000017b4*/ TST         R1, R3 
    /*000017b8*/ BEQ         H264eWrStrBufSEI_x1878
    H264eWrStrBufSEI_x17bc:
    /*000017bc*/ LDR         R3, [R5, #1216]             @ 0x4c0 
    /*000017c0*/ LDR         R1, [R5, #1204]             @ 0x4b4 
    /*000017c4*/ CMP         R3, R1 
    /*000017c8*/ BGE         H264eWrStrBufSEI_x182c
    /*000017cc*/ LDR         R2, [R5, #1208]             @ 0x4b8 
    /*000017d0*/ ADD         R3, R3, #1 
    /*000017d4*/ MOV         R0, #0 
    /*000017d8*/ SUBS        R2, R2, #1 
    /*000017dc*/ ADDMI       R2, R2, R1 
    /*000017e0*/ LDR         R1, [R5, #1200]             @ 0x4b0 
    /*000017e4*/ STR         R6, [R1, R2, LSL #2] 
    /*000017e8*/ STR         R3, [R5, #1216]             @ 0x4c0 
    /*000017ec*/ STR         R2, [R5, #1208]             @ 0x4b8 
    /*000017f0*/ ADD         SP, SP, #92                 @ 0x5c 
    /*000017f4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eWrStrBufSEI_x17f8:
    /*000017f8*/ SUB         R7, R2, R3 
    /*000017fc*/ LDR         IP, [R4, #176]              @ 0xb0 
    /*00001800*/ RSB         LR, R7, #64                 @ 0x40 
    /*00001804*/ LSR         R7, R7, #3 
    /*00001808*/ ADD         R3, IP, R3 
    /*0000180c*/ CMP         R7, #0 
    /*00001810*/ LSR         R9, LR, #3 
    /*00001814*/ SUB         R7, R7, #1 
    /*00001818*/ SUBEQ       R2, R9, #1 
    /*0000181c*/ ADDEQ       R7, SP, #24 
    /*00001820*/ SUBNE       R2, R9, #1 
    /*00001824*/ BNE         H264eWrStrBufSEI_x1608
    /*00001828*/ B           H264eWrStrBufSEI_x1634
    H264eWrStrBufSEI_x182c:
    /*0000182c*/ MOVW        R2, #773                    @ 0x305 
    /*00001830*/ LDR         R1, [PC, #340]              @ 0x000000000000198c 
    /*00001834*/ MOVW        R3, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x784] 
    /*00001838*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*0000183c*/ MOVT        R3, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x784] 
    /*00001840*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00001844*/ BL          0x0000000000001844          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001848*/ MOV         R0, #0 
    /*0000184c*/ ADD         SP, SP, #92                 @ 0x5c 
    /*00001850*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eWrStrBufSEI_x1854:
    /*00001854*/ LSR         R9, R8, #3 
    /*00001858*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*0000185c*/ CMP         R9, #0 
    /*00001860*/ SUB         R9, R9, #1 
    /*00001864*/ ADD         IP, R3, IP 
    /*00001868*/ ADD         R7, IP, R8 
    /*0000186c*/ BEQ         H264eWrStrBufSEI_x1728
    /*00001870*/ MVN         R3, #0 
    /*00001874*/ B           H264eWrStrBufSEI_x16dc
    H264eWrStrBufSEI_x1878:
    /*00001878*/ LDR         IP, [R4, #64]               @ 0x40 
    /*0000187c*/ MOVW        R2, #758                    @ 0x2f6 
    /*00001880*/ LDR         R3, [R4, #128]              @ 0x80 
    /*00001884*/ MOVW        R0, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x714] 
    /*00001888*/ LDR         R1, [PC, #252]              @ 0x000000000000198c 
    /*0000188c*/ MOVT        R0, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x714] 
    /*00001890*/ STR         IP, [SP, #8] 
    /*00001894*/ LDR         IP, [R4, #32] 
    /*00001898*/ STR         IP, [SP, #4] 
    /*0000189c*/ LDR         IP, [R4, #96]               @ 0x60 
    /*000018a0*/ STR         IP, [SP] 
    /*000018a4*/ BL          0x00000000000018A4          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000018a8*/ LDR         R2, [R4, #160]              @ 0xa0 
    /*000018ac*/ LDR         R1, [R4, #164]              @ 0xa4 
    /*000018b0*/ LDR         R3, [R4, #172]              @ 0xac 
    /*000018b4*/ LDR         R2, [R2] 
    /*000018b8*/ LDR         R1, [R1] 
    /*000018bc*/ LDR         R0, [R4, #168]              @ 0xa8 
    /*000018c0*/ LDR         R3, [R3] 
    /*000018c4*/ CMP         R2, R1 
    /*000018c8*/ LDR         LR, [R0] 
    /*000018cc*/ MOVCC       R0, #0 
    /*000018d0*/ MOVCS       R0, #1 
    /*000018d4*/ CMP         R2, R3 
    /*000018d8*/ MOVHI       R2, #0 
    /*000018dc*/ MOVLS       R2, #1 
    /*000018e0*/ CMP         LR, R3 
    /*000018e4*/ AND         IP, R0, R2 
    /*000018e8*/ MOVCC       R3, #0 
    /*000018ec*/ MOVCS       R3, #1 
    /*000018f0*/ TST         R3, IP 
    /*000018f4*/ BNE         H264eWrStrBufSEI_x17bc
    /*000018f8*/ CMP         R1, LR 
    /*000018fc*/ MOVCC       R1, #0 
    /*00001900*/ MOVCS       R1, #1 
    /*00001904*/ TST         IP, R1 
    /*00001908*/ BNE         H264eWrStrBufSEI_x17bc
    /*0000190c*/ AND         R0, R0, R3 
    /*00001910*/ TST         R1, R0 
    /*00001914*/ BNE         H264eWrStrBufSEI_x17bc
    /*00001918*/ AND         R3, R3, R2 
    /*0000191c*/ TST         R1, R3 
    /*00001920*/ BNE         H264eWrStrBufSEI_x17bc
    /*00001924*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x76c] 
    /*00001928*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*0000192c*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x76c] 
    /*00001930*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00001934*/ MOV         R2, #768                    @ 0x300 
    /*00001938*/ LDR         R1, [PC, #76]               @ 0x000000000000198c 
    /*0000193c*/ BL          0x000000000000193C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001940*/ B           H264eWrStrBufSEI_x17bc
    H264eWrStrBufSEI_x1944:
    /*00001944*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ec] 
    /*00001948*/ MOV         R1, #18 
    /*0000194c*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ec] 
    /*00001950*/ MOV         R0, #3 
    /*00001954*/ BL          0x0000000000001954          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001958*/ B           H264eWrStrBufSEI_x172c
    H264eWrStrBufSEI_x195c:
    /*0000195c*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*00001960*/ MOV         R1, #18 
    /*00001964*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*00001968*/ MOV         R0, #4 
    /*0000196c*/ BL          0x000000000000196C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001970*/ B           H264eWrStrBufSEI_x172c
    H264eWrStrBufSEI_x1974:
    /*00001974*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*00001978*/ MOV         R1, #18 
    /*0000197c*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*00001980*/ MOV         R0, #4 
    /*00001984*/ BL          0x0000000000001984          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001988*/ B           H264eWrStrBufSEI_x165c
    /*0000198c*/ ANDEQ       R0, R0, IP, LSL #3 
FUNC_END H264eWrStrBufSEI


FUNC_BEGIN H264eWriteSEI
    /*00001990*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00001994*/ SUBS        R6, R0, #0 
    /*00001998*/ SUB         SP, SP, #16 
    /*0000199c*/ MOV         R5, R1 
    /*000019a0*/ MOV         R4, R2 
    /*000019a4*/ MOV         R7, R3 
    /*000019a8*/ BEQ         H264eWriteSEI_x1ae8
    H264eWriteSEI_x19ac:
    /*000019ac*/ CMP         R5, #0 
    /*000019b0*/ BEQ         H264eWriteSEI_x1b08
    H264eWriteSEI_x19b4:
    /*000019b4*/ ADD         SL, SP, #16 
    /*000019b8*/ MOV         R3, #0 
    /*000019bc*/ MOV         R2, #32 
    /*000019c0*/ STR         R3, [R6] 
    /*000019c4*/ STR         R3, [SL, #-12]! 
    /*000019c8*/ MOV         R1, #1 
    /*000019cc*/ MOV         R0, SL 
    /*000019d0*/ STRH        R3, [SP, #12] 
    /*000019d4*/ STR         R6, [SP, #8] 
    /*000019d8*/ BL          0x00000000000019D8          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000019dc*/ MOV         R2, #8 
    /*000019e0*/ MOV         R1, #6 
    /*000019e4*/ MOV         R0, SL 
    /*000019e8*/ MOV         R8, R4 
    /*000019ec*/ BL          0x00000000000019EC          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000019f0*/ MOV         R0, SL 
    /*000019f4*/ MOV         R2, #8 
    /*000019f8*/ MOV         R1, #240                    @ 0xf0 
    /*000019fc*/ BL          0x00000000000019FC          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00001a00*/ LDR         R3, [SP, #4] 
    /*00001a04*/ CMP         R4, #254                    @ 0xfe 
    /*00001a08*/ LSR         R9, R3, #3 
    /*00001a0c*/ BLS         H264eWriteSEI_x1a30
    H264eWriteSEI_x1a10:
    /*00001a10*/ SUB         R8, R8, #255                @ 0xff 
    /*00001a14*/ MOV         R2, #8 
    /*00001a18*/ MOV         R1, #255                    @ 0xff 
    /*00001a1c*/ MOV         R0, SL 
    /*00001a20*/ BL          0x0000000000001A20          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00001a24*/ CMP         R8, #254                    @ 0xfe 
    /*00001a28*/ ADD         R9, R9, #1 
    /*00001a2c*/ BHI         H264eWriteSEI_x1a10
    H264eWriteSEI_x1a30:
    /*00001a30*/ MOV         R1, R8 
    /*00001a34*/ MOV         R2, #8 
    /*00001a38*/ MOV         R0, SL 
    /*00001a3c*/ CLZ         R8, R8 
    /*00001a40*/ BL          0x0000000000001A40          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00001a44*/ MOV         R0, SL 
    /*00001a48*/ BL          0x0000000000001A48          @ BS_PROC_LAST_BITS [R_ARM_CALL: .text+0x127d8] 
    /*00001a4c*/ CMP         R4, #0 
    /*00001a50*/ ADD         R3, R9, #1 
    /*00001a54*/ LSR         R8, R8, #5 
    /*00001a58*/ BLE         H264eWriteSEI_x1ab0
    /*00001a5c*/ MOV         R1, #0 
    /*00001a60*/ MOV         LR, #3 
    H264eWriteSEI_x1a64:
    /*00001a64*/ CMP         R8, #2 
    /*00001a68*/ BEQ         H264eWriteSEI_x1ac8
    /*00001a6c*/ MOV         R2, R5 
    /*00001a70*/ LDRB        R0, [R2, R1]! 
    H264eWriteSEI_x1a74:
    /*00001a74*/ ADD         IP, R6, R3 
    H264eWriteSEI_x1a78:
    /*00001a78*/ STRB        R0, [IP], #1 
    /*00001a7c*/ ADD         R3, R3, #1 
    /*00001a80*/ LDRB        R0, [R2], #1 
    /*00001a84*/ ADD         R1, R1, #1 
    /*00001a88*/ CMP         R0, #0 
    /*00001a8c*/ BEQ         H264eWriteSEI_x1aa4
    /*00001a90*/ CMP         R4, R1 
    /*00001a94*/ MOV         R8, #0 
    /*00001a98*/ BLE         H264eWriteSEI_x1ab0
    /*00001a9c*/ LDRB        R0, [R2] 
    /*00001aa0*/ B           H264eWriteSEI_x1a78
    H264eWriteSEI_x1aa4:
    /*00001aa4*/ CMP         R1, R4 
    /*00001aa8*/ ADD         R8, R8, #1 
    /*00001aac*/ BLT         H264eWriteSEI_x1a64
    H264eWriteSEI_x1ab0:
    /*00001ab0*/ MVN         R1, #127                    @ 0x7f 
    /*00001ab4*/ ADD         R2, R3, #1 
    /*00001ab8*/ STRB        R1, [R6, R3] 
    /*00001abc*/ STR         R2, [R7] 
    /*00001ac0*/ ADD         SP, SP, #16 
    /*00001ac4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264eWriteSEI_x1ac8:
    /*00001ac8*/ LDRB        R0, [R5, R1] 
    /*00001acc*/ ADD         R2, R5, R1 
    /*00001ad0*/ ANDS        IP, R0, #252                @ 0xfc 
    /*00001ad4*/ STRBEQ      LR, [R6, R3] 
    /*00001ad8*/ ADDEQ       R3, R3, #1 
    /*00001adc*/ LDRBEQ      R0, [R5, R1] 
    /*00001ae0*/ MOVEQ       R8, IP 
    /*00001ae4*/ B           H264eWriteSEI_x1a74
    H264eWriteSEI_x1ae8:
    /*00001ae8*/ MOVW        R3, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x79c] 
    /*00001aec*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00001af0*/ MOVT        R3, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x79c] 
    /*00001af4*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00001af8*/ MOV         R2, #800                    @ 0x320 
    /*00001afc*/ LDR         R1, [PC, #36]               @ 0x0000000000001b28 
    /*00001b00*/ BL          0x0000000000001B00          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001b04*/ B           H264eWriteSEI_x19ac
    H264eWriteSEI_x1b08:
    /*00001b08*/ MOVW        R3, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7b0] 
    /*00001b0c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00001b10*/ MOVT        R3, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7b0] 
    /*00001b14*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00001b18*/ MOVW        R2, #801                    @ 0x321 
    /*00001b1c*/ LDR         R1, [PC, #4]                @ 0x0000000000001b28 
    /*00001b20*/ BL          0x0000000000001B20          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001b24*/ B           H264eWriteSEI_x19b4
    /*00001b28*/ ANDEQ       R0, R0, R0, LSR #3 
FUNC_END H264eWriteSEI


FUNC_BEGIN H264eInitPoc
    /*00001b2c*/ ADD         R1, R0, #12288              @ 0x3000 
    /*00001b30*/ ADD         R0, R0, #4096               @ 0x1000 
    /*00001b34*/ MOV         R3, #0 
    /*00001b38*/ LDR         R2, [R1, #2084]             @ 0x824 
    /*00001b3c*/ LDR         R1, [R1, #2088]             @ 0x828 
    /*00001b40*/ SUB         R2, R2, #4 
    /*00001b44*/ STR         R3, [R0, #3628]             @ 0xe2c 
    /*00001b48*/ CMP         R2, #1 
    /*00001b4c*/ STR         R3, [R0, #3660]             @ 0xe4c 
    /*00001b50*/ BLS         H264eInitPoc_x1b9c
    /*00001b54*/ STR         R3, [R0, #3648]             @ 0xe40 
    /*00001b58*/ MOV         R2, #2 
    /*00001b5c*/ MOV         R3, #1 
    /*00001b60*/ STR         R2, [R0, #3656]             @ 0xe48 
    /*00001b64*/ STR         R3, [R0, #3640]             @ 0xe38 
    /*00001b68*/ STR         R3, [R0, #3652]             @ 0xe44 
    /*00001b6c*/ STR         R3, [R0, #3644]             @ 0xe3c 
    H264eInitPoc_x1b70:
    /*00001b70*/ MOV         R3, #0 
    /*00001b74*/ MOV         R2, #16 
    /*00001b78*/ STR         R3, [R0, #3672]             @ 0xe58 
    /*00001b7c*/ STR         R3, [R0, #3676]             @ 0xe5c 
    /*00001b80*/ STR         R3, [R0, #3632]             @ 0xe30 
    /*00001b84*/ STR         R3, [R0, #3664]             @ 0xe50 
    /*00001b88*/ STR         R3, [R0, #3668]             @ 0xe54 
    /*00001b8c*/ STR         R3, [R0, #3680]             @ 0xe60 
    /*00001b90*/ STR         R3, [R0, #3624]             @ 0xe28 
    /*00001b94*/ STR         R2, [R0, #3636]             @ 0xe34 
    /*00001b98*/ BX          LR 
    H264eInitPoc_x1b9c:
    /*00001b9c*/ MOV         R2, #1 
    /*00001ba0*/ LSL         R1, R1, #1 
    /*00001ba4*/ STR         R3, [R0, #3640]             @ 0xe38 
    /*00001ba8*/ STR         R1, [R0, #3656]             @ 0xe48 
    /*00001bac*/ STR         R3, [R0, #3648]             @ 0xe40 
    /*00001bb0*/ STR         R2, [R0, #3652]             @ 0xe44 
    /*00001bb4*/ STR         R2, [R0, #3644]             @ 0xe3c 
    /*00001bb8*/ B           H264eInitPoc_x1b70
FUNC_END H264eInitPoc


FUNC_BEGIN H264eUpdatePoc
    /*00001bbc*/ ADD         R0, R0, #4096               @ 0x1000 
    /*00001bc0*/ MOV         R2, #0 
    /*00001bc4*/ LDR         R3, [R0, #3624]             @ 0xe28 
    /*00001bc8*/ STR         R2, [R0, #3664]             @ 0xe50 
    /*00001bcc*/ STR         R3, [R0, #3628]             @ 0xe2c 
    /*00001bd0*/ BX          LR 
FUNC_END H264eUpdatePoc


FUNC_BEGIN H264eInitVui
    /*00001bd4*/ ADD         R2, R0, #8192               @ 0x2000 
    /*00001bd8*/ ADD         R3, R0, #4096               @ 0x1000 
    /*00001bdc*/ PUSH        {R4, R5, R6, LR} 
    /*00001be0*/ ADD         R5, R2, #1616               @ 0x650 
    /*00001be4*/ LDRB        LR, [R2, #1620]             @ 0x654 
    /*00001be8*/ ADD         IP, R3, #3696               @ 0xe70 
    /*00001bec*/ MOVW        R4, #1618                   @ 0x652 
    /*00001bf0*/ MOV         R1, #0 
    /*00001bf4*/ STR         LR, [R3, #3856]             @ 0xf10 
    /*00001bf8*/ LDR         R6, [R2, #1624]             @ 0x658 
    /*00001bfc*/ STR         R6, [R3, #3860]             @ 0xf14 
    /*00001c00*/ LDR         R6, [R2, #1628]             @ 0x65c 
    /*00001c04*/ STR         R6, [R3, #3864]             @ 0xf18 
    /*00001c08*/ LDRB        R6, [R2, #1621]             @ 0x655 
    /*00001c0c*/ STR         R6, [R3, #3868]             @ 0xf1c 
    /*00001c10*/ LDRB        R6, [R2, #1612]             @ 0x64c 
    /*00001c14*/ STRB        R6, [R3, #3872]             @ 0xf20 
    /*00001c18*/ LDRB        R6, [R2, #1613]             @ 0x64d 
    /*00001c1c*/ STRB        R6, [R3, #3873]             @ 0xf21 
    /*00001c20*/ LDRH        R5, [R5] 
    /*00001c24*/ STRH        R5, [IP, #180]              @ 0xb4 
    /*00001c28*/ LDRH        R4, [R2, R4] 
    /*00001c2c*/ STRH        R4, [IP, #182]              @ 0xb6 
    /*00001c30*/ LDRB        IP, [R2, #1614]             @ 0x64e 
    /*00001c34*/ STRB        IP, [R3, #3874]             @ 0xf22 
    /*00001c38*/ LDRB        IP, [R2, #1615]             @ 0x64f 
    /*00001c3c*/ STRB        IP, [R3, #3875]             @ 0xf23 
    /*00001c40*/ LDRB        IP, [R2, #1632]             @ 0x660 
    /*00001c44*/ STRB        IP, [R3, #3880]             @ 0xf28 
    /*00001c48*/ LDRB        R4, [R2, #1633]             @ 0x661 
    /*00001c4c*/ STRB        R4, [R3, #3881]             @ 0xf29 
    /*00001c50*/ LDRB        R4, [R2, #1634]             @ 0x662 
    /*00001c54*/ STRB        R4, [R3, #3882]             @ 0xf2a 
    /*00001c58*/ LDRB        R4, [R2, #1635]             @ 0x663 
    /*00001c5c*/ STRB        R4, [R3, #3883]             @ 0xf2b 
    /*00001c60*/ LDRB        R4, [R2, #1636]             @ 0x664 
    /*00001c64*/ STRB        R4, [R3, #3884]             @ 0xf2c 
    /*00001c68*/ LDRB        R4, [R2, #1637]             @ 0x665 
    /*00001c6c*/ STRB        R4, [R3, #3885]             @ 0xf2d 
    /*00001c70*/ LDRB        R4, [R2, #1638]             @ 0x666 
    /*00001c74*/ STR         R1, [R3, #3852]             @ 0xf0c 
    /*00001c78*/ STR         R1, [R3, #3888]             @ 0xf30 
    /*00001c7c*/ STRB        R4, [R3, #3886]             @ 0xf2e 
    /*00001c80*/ STR         R1, [R3, #3892]             @ 0xf34 
    /*00001c84*/ STR         R1, [R3, #3896]             @ 0xf38 
    /*00001c88*/ STR         R1, [R3, #3900]             @ 0xf3c 
    /*00001c8c*/ LDRB        R4, [R2, #1639]             @ 0x667 
    /*00001c90*/ CMP         R4, R1 
    /*00001c94*/ BEQ         H264eInitVui_x1cdc
    /*00001c98*/ ADD         R0, R0, #12288              @ 0x3000 
    /*00001c9c*/ STRB        R1, [R3, #3905]             @ 0xf41 
    /*00001ca0*/ STRB        R1, [R3, #3906]             @ 0xf42 
    /*00001ca4*/ MOV         R4, #7 
    /*00001ca8*/ MOV         R1, #1 
    /*00001cac*/ STRB        R4, [R3, #3907]             @ 0xf43 
    /*00001cb0*/ STR         R1, [R3, #3900]             @ 0xf3c 
    /*00001cb4*/ STRB        R1, [R3, #3904]             @ 0xf40 
    /*00001cb8*/ MOV         R1, #6 
    /*00001cbc*/ STRB        R1, [R3, #3908]             @ 0xf44 
    /*00001cc0*/ LDR         R1, [R0, #2084]             @ 0x824 
    /*00001cc4*/ SUB         R1, R1, #4 
    /*00001cc8*/ CLZ         R1, R1 
    /*00001ccc*/ LSR         R1, R1, #5 
    /*00001cd0*/ STRB        R1, [R3, #3909]             @ 0xf45 
    /*00001cd4*/ LDR         R2, [R2, #2836]             @ 0xb14 
    /*00001cd8*/ STRB        R2, [R3, #3910]             @ 0xf46 
    H264eInitVui_x1cdc:
    /*00001cdc*/ CMP         LR, #0 
    /*00001ce0*/ BNE         H264eInitVui_x1d0c
    /*00001ce4*/ LDR         R2, [R3, #3872]             @ 0xf20 
    /*00001ce8*/ BIC         R2, R2, #-16777216          @ 0xff000000 
    /*00001cec*/ BIC         R2, R2, #65280              @ 0xff00 
    /*00001cf0*/ CMP         IP, #0 
    /*00001cf4*/ CMPEQ       R2, #0 
    /*00001cf8*/ BNE         H264eInitVui_x1d0c
    /*00001cfc*/ LDR         R2, [R3, #3900]             @ 0xf3c 
    /*00001d00*/ ADDS        R2, R2, #0 
    /*00001d04*/ MOVNE       R2, #1 
    /*00001d08*/ B           H264eInitVui_x1d10
    H264eInitVui_x1d0c:
    /*00001d0c*/ MOV         R2, #1 
    H264eInitVui_x1d10:
    /*00001d10*/ STR         R2, [R3, #3848]             @ 0xf08 
    /*00001d14*/ MOV         R0, #0 
    /*00001d18*/ POP         {R4, R5, R6, PC} 
FUNC_END H264eInitVui


FUNC_BEGIN H264eInitSvc
    /*00001d1c*/ ADD         R3, R0, #4096               @ 0x1000 
    /*00001d20*/ MOV         R2, #0 
    /*00001d24*/ MOV         R1, #1 
    /*00001d28*/ MOV         R0, R2 
    /*00001d2c*/ STR         R1, [R3, #3960]             @ 0xf78 
    /*00001d30*/ STR         R2, [R3, #3912]             @ 0xf48 
    /*00001d34*/ STR         R2, [R3, #3916]             @ 0xf4c 
    /*00001d38*/ STR         R2, [R3, #3920]             @ 0xf50 
    /*00001d3c*/ STR         R2, [R3, #3924]             @ 0xf54 
    /*00001d40*/ STR         R2, [R3, #3952]             @ 0xf70 
    /*00001d44*/ STR         R2, [R3, #3956]             @ 0xf74 
    /*00001d48*/ STR         R2, [R3, #3964]             @ 0xf7c 
    /*00001d4c*/ STR         R2, [R3, #3968]             @ 0xf80 
    /*00001d50*/ BX          LR 
FUNC_END H264eInitSvc


FUNC_BEGIN H264eInitIdrPicIdCfg
    /*00001d54*/ PUSH        {R4, LR} 
    /*00001d58*/ SUBS        R4, R0, #0 
    /*00001d5c*/ BEQ         H264eInitIdrPicIdCfg_x1d70
    H264eInitIdrPicIdCfg_x1d60:
    /*00001d60*/ MOV         R3, #0 
    /*00001d64*/ STR         R3, [R4] 
    /*00001d68*/ STR         R3, [R4, #4] 
    /*00001d6c*/ POP         {R4, PC} 
    H264eInitIdrPicIdCfg_x1d70:
    /*00001d70*/ MOVW        R3, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c4] 
    /*00001d74*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00001d78*/ MOVT        R3, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c4] 
    /*00001d7c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00001d80*/ MOVW        R2, #1028                   @ 0x404 
    /*00001d84*/ LDR         R1, [PC, #4]                @ 0x0000000000001d90 
    /*00001d88*/ BL          0x0000000000001D88          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001d8c*/ B           H264eInitIdrPicIdCfg_x1d60
    /*00001d90*/ @           <UNDEFINED> instruction: 0x000001b0 
FUNC_END H264eInitIdrPicIdCfg


FUNC_BEGIN H264eDoWp
    /*00001d94*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00001d98*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00001d9c*/ CMP         R1, #0 
    /*00001da0*/ LDR         R3, [R3, R0, LSL #2] 
    /*00001da4*/ ADD         R2, R3, #12288              @ 0x3000 
    /*00001da8*/ LDR         R2, [R2, #2396]             @ 0x95c 
    /*00001dac*/ BNE         H264eDoWp_x1dcc
    /*00001db0*/ CMP         R2, #0 
    /*00001db4*/ LDRNE       R3, [R3, #1060]             @ 0x424 
    /*00001db8*/ LDRNE       R2, [R3, #172]              @ 0xac 
    /*00001dbc*/ LDRNE       R3, [R3, #168]              @ 0xa8 
    /*00001dc0*/ LDRNE       R2, [R2] 
    /*00001dc4*/ STRNE       R2, [R3] 
    /*00001dc8*/ BX          LR 
    H264eDoWp_x1dcc:
    /*00001dcc*/ CMP         R2, #0 
    /*00001dd0*/ LDRNE       R3, [R3, #1060]             @ 0x424 
    /*00001dd4*/ LDRNE       R2, [R3, #168]              @ 0xa8 
    /*00001dd8*/ LDRNE       R3, [R3, #172]              @ 0xac 
    /*00001ddc*/ LDRNE       R2, [R2] 
    /*00001de0*/ STRNE       R2, [R3] 
    /*00001de4*/ BX          LR 
FUNC_END H264eDoWp


FUNC_BEGIN H264eResetBuf
    /*00001de8*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00001dec*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00001df0*/ LDR         R3, [R3, R0, LSL #2] 
    /*00001df4*/ ADD         R2, R3, #12288              @ 0x3000 
    /*00001df8*/ LDR         R2, [R2, #2396]             @ 0x95c 
    /*00001dfc*/ CMP         R2, #0 
    /*00001e00*/ BXEQ        LR 
    /*00001e04*/ LDR         R2, [R3, #1060]             @ 0x424 
    /*00001e08*/ MOV         R3, #0 
    /*00001e0c*/ LDR         R1, [R2, #160]              @ 0xa0 
    /*00001e10*/ STR         R3, [R1] 
    /*00001e14*/ LDR         R1, [R2, #164]              @ 0xa4 
    /*00001e18*/ STR         R3, [R1] 
    /*00001e1c*/ LDR         R1, [R2, #168]              @ 0xa8 
    /*00001e20*/ STR         R3, [R1] 
    /*00001e24*/ LDR         R2, [R2, #172]              @ 0xac 
    /*00001e28*/ STR         R3, [R2] 
    /*00001e2c*/ BX          LR 
FUNC_END H264eResetBuf


FUNC_BEGIN H264eGetNumRefFrames
    /*00001e30*/ LDR         R3, [R1] 
    /*00001e34*/ CMP         R3, #0 
    /*00001e38*/ BNE         H264eGetNumRefFrames_x1e50
    /*00001e3c*/ LDR         R3, [R0, #8] 
    /*00001e40*/ CMP         R3, #1 
    /*00001e44*/ BEQ         H264eGetNumRefFrames_x1eac
    H264eGetNumRefFrames_x1e48:
    /*00001e48*/ MOV         R0, #2 
    /*00001e4c*/ BX          LR 
    H264eGetNumRefFrames_x1e50:
    /*00001e50*/ CMP         R3, #1 
    /*00001e54*/ BEQ         H264eGetNumRefFrames_x1e6c
    /*00001e58*/ SUB         R3, R3, #2 
    /*00001e5c*/ CMP         R3, #1 
    /*00001e60*/ BLS         H264eGetNumRefFrames_x1ecc
    H264eGetNumRefFrames_x1e64:
    /*00001e64*/ MOV         R0, #3 
    /*00001e68*/ BX          LR 
    H264eGetNumRefFrames_x1e6c:
    /*00001e6c*/ LDR         R3, [R1, #4] 
    /*00001e70*/ CMP         R3, #0 
    /*00001e74*/ LDR         R3, [R0, #8] 
    /*00001e78*/ BNE         H264eGetNumRefFrames_x1e84
    /*00001e7c*/ CMP         R3, #1 
    /*00001e80*/ BEQ         H264eGetNumRefFrames_x1ef8
    H264eGetNumRefFrames_x1e84:
    /*00001e84*/ CMP         R3, #0 
    /*00001e88*/ BNE         H264eGetNumRefFrames_x1e48
    /*00001e8c*/ LDR         R3, [R0] 
    /*00001e90*/ CMP         R3, #0 
    /*00001e94*/ BEQ         H264eGetNumRefFrames_x1e48
    H264eGetNumRefFrames_x1e98:
    /*00001e98*/ LDR         R3, [R0, #4] 
    /*00001e9c*/ CMP         R3, #2 
    /*00001ea0*/ MOVCC       R0, #2 
    /*00001ea4*/ MOVCS       R0, #3 
    /*00001ea8*/ BX          LR 
    H264eGetNumRefFrames_x1eac:
    /*00001eac*/ LDR         R3, [R0] 
    /*00001eb0*/ CMP         R3, #1 
    /*00001eb4*/ BNE         H264eGetNumRefFrames_x1e48
    /*00001eb8*/ LDR         R3, [R0, #4] 
    /*00001ebc*/ CMP         R3, #1 
    /*00001ec0*/ MOVHI       R0, #2 
    /*00001ec4*/ MOVLS       R0, #1 
    /*00001ec8*/ BX          LR 
    H264eGetNumRefFrames_x1ecc:
    /*00001ecc*/ LDR         R3, [R0, #8] 
    /*00001ed0*/ CMP         R3, #1 
    /*00001ed4*/ BNE         H264eGetNumRefFrames_x1e64
    /*00001ed8*/ LDR         R3, [R0] 
    /*00001edc*/ CMP         R3, #1 
    /*00001ee0*/ BNE         H264eGetNumRefFrames_x1e64
    /*00001ee4*/ LDR         R3, [R0, #4] 
    /*00001ee8*/ CMP         R3, #0 
    /*00001eec*/ MOVNE       R0, #3 
    /*00001ef0*/ MOVEQ       R0, #2 
    /*00001ef4*/ BX          LR 
    H264eGetNumRefFrames_x1ef8:
    /*00001ef8*/ LDR         R3, [R0] 
    /*00001efc*/ CMP         R3, #1 
    /*00001f00*/ BHI         H264eGetNumRefFrames_x1e98
    /*00001f04*/ BNE         H264eGetNumRefFrames_x1e48
    /*00001f08*/ LDR         R3, [R0, #4] 
    /*00001f0c*/ CMP         R3, #3 
    /*00001f10*/ MOVCC       R0, #2 
    /*00001f14*/ MOVCS       R0, #3 
    /*00001f18*/ BX          LR 
FUNC_END H264eGetNumRefFrames


FUNC_BEGIN H264eGetMaxFrameNum
    /*00001f1c*/ LDR         R3, [R0, #8] 
    /*00001f20*/ CMP         R3, #1 
    /*00001f24*/ BEQ         H264eGetMaxFrameNum_x1f38
    H264eGetMaxFrameNum_x1f28:
    /*00001f28*/ MOV         R3, #6 
    /*00001f2c*/ MOV         R0, #0 
    /*00001f30*/ STR         R3, [R1] 
    /*00001f34*/ BX          LR 
    H264eGetMaxFrameNum_x1f38:
    /*00001f38*/ LDR         R2, [R0, #4] 
    /*00001f3c*/ LDR         R3, [R0] 
    /*00001f40*/ MUL         R3, R3, R2 
    /*00001f44*/ CMP         R3, #255                    @ 0xff 
    /*00001f48*/ MOVLS       R3, #4 
    /*00001f4c*/ STRLS       R3, [R1] 
    /*00001f50*/ BHI         H264eGetMaxFrameNum_x1f28
    /*00001f54*/ MOV         R0, #0 
    /*00001f58*/ BX          LR 
FUNC_END H264eGetMaxFrameNum


FUNC_BEGIN H264eInitSPS
    /*00001f5c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00001f60*/ SUBS        R5, R0, #0 
    /*00001f64*/ SUB         SP, SP, #8 
    /*00001f68*/ BEQ         H264eInitSPS_x235c
    H264eInitSPS_x1f6c:
    /*00001f6c*/ LDR         R3, [R5, #968]              @ 0x3c8 
    /*00001f70*/ ADD         R4, R5, #4096               @ 0x1000 
    /*00001f74*/ CMP         R3, #0 
    /*00001f78*/ MOVEQ       R2, #66                     @ 0x42 
    /*00001f7c*/ STREQ       R2, [R4, #3704]             @ 0xe78 
    /*00001f80*/ BEQ         H264eInitSPS_x1fb0
    /*00001f84*/ CMP         R3, #1 
    /*00001f88*/ MOVEQ       R2, #77                     @ 0x4d 
    /*00001f8c*/ MOVEQ       R3, #0 
    /*00001f90*/ STREQ       R2, [R4, #3704]             @ 0xe78 
    /*00001f94*/ BEQ         H264eInitSPS_x1fb0
    /*00001f98*/ CMP         R3, #3 
    /*00001f9c*/ MOVEQ       R3, #1 
    /*00001fa0*/ MOVNE       R3, #1 
    /*00001fa4*/ MOVEQ       R2, #83                     @ 0x53 
    /*00001fa8*/ MOVNE       R2, #100                    @ 0x64 
    /*00001fac*/ STR         R2, [R4, #3704]             @ 0xe78 
    H264eInitSPS_x1fb0:
    /*00001fb0*/ LDR         R7, [R5, #980]              @ 0x3d4 
    /*00001fb4*/ LDR         R8, [R5, #976]              @ 0x3d0 
    /*00001fb8*/ ADD         R7, R7, #15 
    /*00001fbc*/ ADD         R8, R8, #15 
    /*00001fc0*/ LSR         R7, R7, #4 
    /*00001fc4*/ LSR         R8, R8, #4 
    /*00001fc8*/ MUL         R2, R8, R7 
    /*00001fcc*/ CMP         R2, #99                     @ 0x63 
    /*00001fd0*/ MOVLE       R2, #10 
    /*00001fd4*/ STRLE       R2, [R4, #3708]             @ 0xe7c 
    /*00001fd8*/ BLE         H264eInitSPS_x1fec
    /*00001fdc*/ CMP         R2, #396                    @ 0x18c 
    /*00001fe0*/ MOVLE       R2, #20 
    /*00001fe4*/ STRLE       R2, [R4, #3708]             @ 0xe7c 
    /*00001fe8*/ BGT         H264eInitSPS_x2200
    H264eInitSPS_x1fec:
    /*00001fec*/ CMP         R3, #0 
    /*00001ff0*/ MOV         R3, #0 
    /*00001ff4*/ STR         R3, [R4, #3712]             @ 0xe80 
    /*00001ff8*/ BEQ         H264eInitSPS_x2014
    /*00001ffc*/ MOV         R2, #1 
    /*00002000*/ STR         R3, [R4, #3720]             @ 0xe88 
    /*00002004*/ STR         R3, [R4, #3724]             @ 0xe8c 
    /*00002008*/ STR         R3, [R4, #3728]             @ 0xe90 
    /*0000200c*/ STR         R3, [R4, #3732]             @ 0xe94 
    /*00002010*/ STR         R2, [R4, #3716]             @ 0xe84 
    H264eInitSPS_x2014:
    /*00002014*/ ADD         R6, R5, #8192               @ 0x2000 
    /*00002018*/ LDR         R3, [R6, #1424]             @ 0x590 
    /*0000201c*/ CMP         R3, #1 
    /*00002020*/ BEQ         H264eInitSPS_x228c
    /*00002024*/ LDR         R1, [R6, #1432]             @ 0x598 
    /*00002028*/ CMP         R1, #1 
    /*0000202c*/ BEQ         H264eInitSPS_x22ac
    H264eInitSPS_x2030:
    /*00002030*/ LDR         R3, [R4, #3652]             @ 0xe44 
    /*00002034*/ LDR         R1, [R4, #3640]             @ 0xe38 
    /*00002038*/ CMP         R3, #0 
    /*0000203c*/ LDR         R2, [R4, #3644]             @ 0xe3c 
    /*00002040*/ STR         R3, [R4, #3792]             @ 0xed0 
    /*00002044*/ LDR         R3, [R4, #3648]             @ 0xe40 
    /*00002048*/ LDR         IP, [R4, #3628]             @ 0xe2c 
    /*0000204c*/ LDR         R0, [R4, #3632]             @ 0xe30 
    /*00002050*/ STR         R3, [R4, #3788]             @ 0xecc 
    /*00002054*/ LDRGT       R3, [R4, #3656]             @ 0xe48 
    /*00002058*/ STR         IP, [R4, #3772]             @ 0xebc 
    /*0000205c*/ STR         R0, [R4, #3776]             @ 0xec0 
    /*00002060*/ STRGT       R3, [R4, #3796]             @ 0xed4 
    /*00002064*/ ADD         R3, R5, #12288              @ 0x3000 
    /*00002068*/ STR         R1, [R4, #3780]             @ 0xec4 
    /*0000206c*/ STR         R2, [R4, #3784]             @ 0xec8 
    /*00002070*/ LDR         R2, [R6, #2836]             @ 0xb14 
    /*00002074*/ STR         R2, [R4, #3800]             @ 0xed8 
    /*00002078*/ LDR         R1, [R3, #2084]             @ 0x824 
    /*0000207c*/ CMP         R1, #1 
    /*00002080*/ BEQ         H264eInitSPS_x22f0
    H264eInitSPS_x2084:
    /*00002084*/ LDR         R3, [R6, #1652]             @ 0x674 
    /*00002088*/ CMP         R3, #1 
    /*0000208c*/ BEQ         H264eInitSPS_x231c
    H264eInitSPS_x2090:
    /*00002090*/ MOV         R3, #6 
    /*00002094*/ STR         R3, [R4, #3768]             @ 0xeb8 
    H264eInitSPS_x2098:
    /*00002098*/ ADD         R3, R5, #9792               @ 0x2640 
    /*0000209c*/ MOV         R2, #1 
    /*000020a0*/ ADD         R3, R3, #12 
    /*000020a4*/ MOV         R1, #0 
    /*000020a8*/ STR         R2, [R4, #3804]             @ 0xedc 
    /*000020ac*/ SUB         R8, R8, #1 
    /*000020b0*/ STR         R2, [R4, #3808]             @ 0xee0 
    /*000020b4*/ SUB         R7, R7, #1 
    /*000020b8*/ STR         R8, [R4, #3812]             @ 0xee4 
    /*000020bc*/ CMP         R3, R1 
    /*000020c0*/ STR         R7, [R4, #3816]             @ 0xee8 
    /*000020c4*/ STR         R2, [R4, #3820]             @ 0xeec 
    /*000020c8*/ STR         R1, [R4, #3824]             @ 0xef0 
    /*000020cc*/ STR         R1, [R4, #3828]             @ 0xef4 
    /*000020d0*/ LDR         R3, [R5, #1196]             @ 0x4ac 
    /*000020d4*/ LDR         R7, [R3, #28] 
    /*000020d8*/ LDR         R8, [R3, #24] 
    /*000020dc*/ BEQ         H264eInitSPS_x233c
    H264eInitSPS_x20e0:
    /*000020e0*/ CMP         R7, #1 
    /*000020e4*/ MOV         R3, #1 
    /*000020e8*/ STRBEQ      R7, [R6, #1636]             @ 0x664 
    /*000020ec*/ STRB        R3, [R6, #1635]             @ 0x663 
    /*000020f0*/ STRBEQ      R7, [R6, #1638]             @ 0x666 
    /*000020f4*/ BEQ         H264eInitSPS_x2120
    /*000020f8*/ CMP         R7, #2 
    /*000020fc*/ MOVEQ       R3, #9 
    /*00002100*/ STRBEQ      R3, [R6, #1636]             @ 0x664 
    /*00002104*/ STRBEQ      R3, [R6, #1638]             @ 0x666 
    /*00002108*/ BEQ         H264eInitSPS_x2120
    /*0000210c*/ CMP         R7, #0 
    /*00002110*/ BNE         H264eInitSPS_x21bc
    /*00002114*/ MOV         R3, #5 
    /*00002118*/ STRB        R3, [R6, #1636]             @ 0x664 
    /*0000211c*/ STRB        R3, [R6, #1638]             @ 0x666 
    H264eInitSPS_x2120:
    /*00002120*/ CMP         R8, #1 
    /*00002124*/ MOVLS       R3, #1 
    /*00002128*/ STRBLS      R3, [R6, #1637]             @ 0x665 
    /*0000212c*/ BLS         H264eInitSPS_x217c
    /*00002130*/ CMP         R8, #2 
    /*00002134*/ MOVEQ       R3, #16 
    /*00002138*/ STRBEQ      R3, [R6, #1637]             @ 0x665 
    /*0000213c*/ BEQ         H264eInitSPS_x217c
    /*00002140*/ CMP         R8, #4 
    /*00002144*/ MOVEQ       R3, #18 
    /*00002148*/ STRBEQ      R3, [R6, #1637]             @ 0x665 
    /*0000214c*/ BEQ         H264eInitSPS_x217c
    /*00002150*/ MOVW        R3, #1240                   @ 0x4d8 
    /*00002154*/ STR         R8, [SP, #4] 
    /*00002158*/ STR         R3, [SP] 
    /*0000215c*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x848] 
    /*00002160*/ LDR         R3, [PC, #532]              @ 0x000000000000237c 
    /*00002164*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x848] 
    /*00002168*/ MOV         R1, #10 
    /*0000216c*/ MOV         R0, #3 
    /*00002170*/ BL          0x0000000000002170          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002174*/ MOV         R3, #2 
    /*00002178*/ STRB        R3, [R6, #1637]             @ 0x665 
    H264eInitSPS_x217c:
    /*0000217c*/ MOV         R0, R5 
    /*00002180*/ BL          0x0000000000002180          @ H264eInitVui [R_ARM_CALL: .text+0x1bd4] 
    /*00002184*/ MOV         R3, #0 
    /*00002188*/ MOV         R0, R3 
    /*0000218c*/ MOV         R2, #1 
    /*00002190*/ STR         R3, [R4, #3912]             @ 0xf48 
    /*00002194*/ STR         R3, [R4, #3916]             @ 0xf4c 
    /*00002198*/ STR         R3, [R4, #3920]             @ 0xf50 
    /*0000219c*/ STR         R3, [R4, #3924]             @ 0xf54 
    /*000021a0*/ STR         R3, [R4, #3952]             @ 0xf70 
    /*000021a4*/ STR         R3, [R4, #3956]             @ 0xf74 
    /*000021a8*/ STR         R3, [R4, #3964]             @ 0xf7c 
    /*000021ac*/ STR         R3, [R4, #3968]             @ 0xf80 
    /*000021b0*/ STR         R2, [R4, #3960]             @ 0xf78 
    /*000021b4*/ ADD         SP, SP, #8 
    /*000021b8*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264eInitSPS_x21bc:
    /*000021bc*/ CMP         R7, #3 
    /*000021c0*/ MOV         R3, #2 
    /*000021c4*/ STRBEQ      R3, [R6, #1636]             @ 0x664 
    /*000021c8*/ STRBEQ      R3, [R6, #1638]             @ 0x666 
    /*000021cc*/ BEQ         H264eInitSPS_x2120
    /*000021d0*/ STRB        R3, [R6, #1636]             @ 0x664 
    /*000021d4*/ MOVW        R0, #1223                   @ 0x4c7 
    /*000021d8*/ STRB        R3, [R6, #1638]             @ 0x666 
    /*000021dc*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x808] 
    /*000021e0*/ STR         R0, [SP] 
    /*000021e4*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x808] 
    /*000021e8*/ STR         R7, [SP, #4] 
    /*000021ec*/ MOV         R1, #10 
    /*000021f0*/ LDR         R3, [PC, #388]              @ 0x000000000000237c 
    /*000021f4*/ MOV         R0, #3 
    /*000021f8*/ BL          0x00000000000021F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000021fc*/ B           H264eInitSPS_x2120
    H264eInitSPS_x2200:
    /*00002200*/ CMP         R2, #792                    @ 0x318 
    /*00002204*/ MOVLE       R2, #21 
    /*00002208*/ STRLE       R2, [R4, #3708]             @ 0xe7c 
    /*0000220c*/ BLE         H264eInitSPS_x1fec
    /*00002210*/ MOVW        R1, #1620                   @ 0x654 
    /*00002214*/ CMP         R2, R1 
    /*00002218*/ MOVLE       R2, #30 
    /*0000221c*/ STRLE       R2, [R4, #3708]             @ 0xe7c 
    /*00002220*/ BLE         H264eInitSPS_x1fec
    /*00002224*/ CMP         R2, #3600                   @ 0xe10 
    /*00002228*/ MOVLE       R2, #31 
    /*0000222c*/ STRLE       R2, [R4, #3708]             @ 0xe7c 
    /*00002230*/ BLE         H264eInitSPS_x1fec
    /*00002234*/ CMP         R2, #5120                   @ 0x1400 
    /*00002238*/ MOVLE       R2, #32 
    /*0000223c*/ STRLE       R2, [R4, #3708]             @ 0xe7c 
    /*00002240*/ BLE         H264eInitSPS_x1fec
    /*00002244*/ CMP         R2, #8192                   @ 0x2000 
    /*00002248*/ MOVLE       R2, #42                     @ 0x2a 
    /*0000224c*/ STRLE       R2, [R4, #3708]             @ 0xe7c 
    /*00002250*/ BLE         H264eInitSPS_x1fec
    /*00002254*/ MOVW        R1, #22080                  @ 0x5640 
    /*00002258*/ CMP         R2, R1 
    /*0000225c*/ MOVLE       R2, #50                     @ 0x32 
    /*00002260*/ STRLE       R2, [R4, #3708]             @ 0xe7c 
    /*00002264*/ BLE         H264eInitSPS_x1fec
    /*00002268*/ CMP         R2, #36864                  @ 0x9000 
    /*0000226c*/ MOVLE       R2, #51                     @ 0x33 
    /*00002270*/ STRLE       R2, [R4, #3708]             @ 0xe7c 
    /*00002274*/ BLE         H264eInitSPS_x1fec
    /*00002278*/ CMP         R2, #139264                 @ 0x22000 
    /*0000227c*/ MOVLE       R2, #60                     @ 0x3c 
    /*00002280*/ MOVGT       R2, #62                     @ 0x3e 
    /*00002284*/ STR         R2, [R4, #3708]             @ 0xe7c 
    /*00002288*/ B           H264eInitSPS_x1fec
    H264eInitSPS_x228c:
    /*0000228c*/ LDR         R3, [R6, #1428]             @ 0x594 
    /*00002290*/ CMP         R3, #1 
    /*00002294*/ MOVEQ       R3, #0 
    /*00002298*/ STREQ       R3, [R4, #3732]             @ 0xe94 
    /*0000229c*/ BEQ         H264eInitSPS_x2030
    /*000022a0*/ LDR         R1, [R6, #1432]             @ 0x598 
    /*000022a4*/ CMP         R1, #1 
    /*000022a8*/ BNE         H264eInitSPS_x2030
    H264eInitSPS_x22ac:
    /*000022ac*/ ADD         R0, R5, #9664               @ 0x25c0 
    /*000022b0*/ ADD         R2, R5, #9600               @ 0x2580 
    /*000022b4*/ ADD         R0, R0, #27 
    /*000022b8*/ ADD         R2, R2, #27 
    /*000022bc*/ MOV         LR, R0 
    H264eInitSPS_x22c0:
    /*000022c0*/ LDRB        R3, [R0, #1]! 
    /*000022c4*/ LDRB        IP, [R2, #1]! 
    /*000022c8*/ CMP         R3, #16 
    /*000022cc*/ CMPEQ       IP, #16 
    /*000022d0*/ MOVEQ       R3, #1 
    /*000022d4*/ MOVNE       R3, #0 
    /*000022d8*/ CMP         LR, R2 
    /*000022dc*/ AND         R1, R1, R3 
    /*000022e0*/ BNE         H264eInitSPS_x22c0
    /*000022e4*/ EOR         R1, R1, #1 
    /*000022e8*/ STR         R1, [R4, #3732]             @ 0xe94 
    /*000022ec*/ B           H264eInitSPS_x2030
    H264eInitSPS_x22f0:
    /*000022f0*/ LDR         R3, [R3, #2088]             @ 0x828 
    /*000022f4*/ CMP         R3, #0 
    /*000022f8*/ BEQ         H264eInitSPS_x2084
    /*000022fc*/ LDR         R3, [R6, #1644]             @ 0x66c 
    /*00002300*/ CMP         R3, #1 
    /*00002304*/ BNE         H264eInitSPS_x2084
    /*00002308*/ LDR         R3, [R6, #1648]             @ 0x670 
    /*0000230c*/ CMP         R3, #2 
    /*00002310*/ SUBEQ       R2, R2, #1 
    /*00002314*/ STREQ       R2, [R4, #3800]             @ 0xed8 
    /*00002318*/ B           H264eInitSPS_x2084
    H264eInitSPS_x231c:
    /*0000231c*/ LDR         R2, [R6, #1648]             @ 0x670 
    /*00002320*/ LDR         R3, [R6, #1644]             @ 0x66c 
    /*00002324*/ MUL         R3, R3, R2 
    /*00002328*/ CMP         R3, #255                    @ 0xff 
    /*0000232c*/ MOVLS       R3, #4 
    /*00002330*/ STRLS       R3, [R4, #3768]             @ 0xeb8 
    /*00002334*/ BLS         H264eInitSPS_x2098
    /*00002338*/ B           H264eInitSPS_x2090
    H264eInitSPS_x233c:
    /*0000233c*/ MOVW        R3, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f4] 
    /*00002340*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00002344*/ MOVT        R3, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f4] 
    /*00002348*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*0000234c*/ MOVW        R2, #1195                   @ 0x4ab 
    /*00002350*/ LDR         R1, [PC, #36]               @ 0x000000000000237c 
    /*00002354*/ BL          0x0000000000002354          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002358*/ B           H264eInitSPS_x20e0
    H264eInitSPS_x235c:
    /*0000235c*/ MOVW        R3, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e0] 
    /*00002360*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00002364*/ MOVT        R3, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e0] 
    /*00002368*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*0000236c*/ MOVW        R2, #1256                   @ 0x4e8 
    /*00002370*/ LDR         R1, [PC, #8]                @ 0x0000000000002380 
    /*00002374*/ BL          0x0000000000002374          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002378*/ B           H264eInitSPS_x1f6c
    /*0000237c*/ LDRDEQ      R0, [R0], -R8 
    /*00002380*/ ANDEQ       R0, R0, R8, ASR #3 
FUNC_END H264eInitSPS


FUNC_BEGIN H264eSpsCrop
    /*00002384*/ PUSH        {R4, LR} 
    /*00002388*/ LDR         R1, [R0, #980]              @ 0x3d4 
    /*0000238c*/ LDR         IP, [R0, #976]              @ 0x3d0 
    /*00002390*/ ADD         R2, R1, #15 
    /*00002394*/ ADD         R3, IP, #15 
    /*00002398*/ BIC         R2, R2, #15 
    /*0000239c*/ BIC         R3, R3, #15 
    /*000023a0*/ CMP         R1, R2 
    /*000023a4*/ CMPEQ       IP, R3 
    /*000023a8*/ MOVEQ       LR, #1 
    /*000023ac*/ MOVNE       LR, #0 
    /*000023b0*/ BEQ         H264eSpsCrop_x23f0
    /*000023b4*/ ADD         R4, R0, #4096               @ 0x1000 
    /*000023b8*/ SUB         R0, R2, R1 
    /*000023bc*/ SUB         R3, R3, IP 
    /*000023c0*/ MOV         R2, #1 
    /*000023c4*/ LDR         R1, [R4, #3820]             @ 0xeec 
    /*000023c8*/ LSR         R3, R3, R2 
    /*000023cc*/ STR         LR, [R4, #3832]             @ 0xef8 
    /*000023d0*/ RSB         R1, R1, #2 
    /*000023d4*/ STR         R3, [R4, #3836]             @ 0xefc 
    /*000023d8*/ STR         LR, [R4, #3840]             @ 0xf00 
    /*000023dc*/ STR         R2, [R4, #3828]             @ 0xef4 
    /*000023e0*/ LSL         R1, R1, R2 
    /*000023e4*/ BL          0x00000000000023E4          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000023e8*/ STR         R0, [R4, #3844]             @ 0xf04 
    /*000023ec*/ POP         {R4, PC} 
    H264eSpsCrop_x23f0:
    /*000023f0*/ ADD         R0, R0, #4096               @ 0x1000 
    /*000023f4*/ MOV         R3, #0 
    /*000023f8*/ STR         R3, [R0, #3828]             @ 0xef4 
    /*000023fc*/ POP         {R4, PC} 
FUNC_END H264eSpsCrop


FUNC_BEGIN H264eInitPPSI
    /*00002400*/ PUSH        {R4, LR} 
    /*00002404*/ SUBS        R4, R0, #0 
    /*00002408*/ BEQ         H264eInitPPSI_x24f8
    H264eInitPPSI_x240c:
    /*0000240c*/ ADD         R3, R4, #4096               @ 0x1000 
    /*00002410*/ ADD         R1, R4, #8192               @ 0x2000 
    /*00002414*/ MOV         R0, #0 
    /*00002418*/ MOV         IP, #1 
    /*0000241c*/ LDR         R2, [R3, #3712]             @ 0xe80 
    /*00002420*/ STR         R0, [R3, #3972]             @ 0xf84 
    /*00002424*/ LDR         R0, [R3, #3616]             @ 0xe20 
    /*00002428*/ STR         R2, [R3, #3976]             @ 0xf88 
    /*0000242c*/ LDR         R2, [R1, #1568]             @ 0x620 
    /*00002430*/ LDR         LR, [R3, #3660]             @ 0xe4c 
    /*00002434*/ STR         R2, [R3, #3980]             @ 0xf8c 
    /*00002438*/ LDR         R2, [R1, #2228]             @ 0x8b4 
    /*0000243c*/ CMP         R2, #1 
    /*00002440*/ LDREQ       R2, [R1, #1572]             @ 0x624 
    /*00002444*/ STR         LR, [R3, #3984]             @ 0xf90 
    /*00002448*/ STREQ       R2, [R3, #3980]             @ 0xf8c 
    /*0000244c*/ MOV         R2, #0 
    /*00002450*/ SUBS        R0, R0, R2 
    /*00002454*/ STR         R2, [R3, #3992]             @ 0xf98 
    /*00002458*/ STR         R2, [R3, #3996]             @ 0xf9c 
    /*0000245c*/ MOVNE       R0, #1 
    /*00002460*/ STR         R2, [R3, #4000]             @ 0xfa0 
    /*00002464*/ STR         R0, [R3, #3988]             @ 0xf94 
    /*00002468*/ STR         R2, [R3, #4004]             @ 0xfa4 
    /*0000246c*/ STR         R2, [R3, #4008]             @ 0xfa8 
    /*00002470*/ LDR         R0, [R1, #1564]             @ 0x61c 
    /*00002474*/ STR         IP, [R3, #4012]             @ 0xfac 
    /*00002478*/ STR         R0, [R3, #4020]             @ 0xfb4 
    /*0000247c*/ LDR         IP, [R1, #1388]             @ 0x56c 
    /*00002480*/ STR         R2, [R3, #4024]             @ 0xfb8 
    /*00002484*/ STR         IP, [R3, #4016]             @ 0xfb0 
    /*00002488*/ LDR         R2, [R4, #968]              @ 0x3c8 
    /*0000248c*/ SUB         R2, R2, #2 
    /*00002490*/ CMP         R2, #1 
    /*00002494*/ BLS         H264eInitPPSI_x24a0
    /*00002498*/ MOV         R0, #0 
    /*0000249c*/ POP         {R4, PC} 
    H264eInitPPSI_x24a0:
    /*000024a0*/ LDR         R2, [R1, #1384]             @ 0x568 
    /*000024a4*/ CMP         R2, #0 
    /*000024a8*/ BEQ         H264eInitPPSI_x24d4
    /*000024ac*/ LDR         R2, [R1, #1424]             @ 0x590 
    /*000024b0*/ CMP         R2, #1 
    /*000024b4*/ BEQ         H264eInitPPSI_x24d4
    H264eInitPPSI_x24b8:
    /*000024b8*/ MOV         R2, #1 
    /*000024bc*/ STR         R0, [R3, #4036]             @ 0xfc4 
    /*000024c0*/ STR         R2, [R3, #4028]             @ 0xfbc 
    /*000024c4*/ MOV         R2, #0 
    /*000024c8*/ STR         R2, [R3, #4032]             @ 0xfc0 
    H264eInitPPSI_x24cc:
    /*000024cc*/ MOV         R0, #0 
    /*000024d0*/ POP         {R4, PC} 
    H264eInitPPSI_x24d4:
    /*000024d4*/ LDR         R2, [R1, #1428]             @ 0x594 
    /*000024d8*/ CMP         R2, #1 
    /*000024dc*/ MOVEQ       R2, #0 
    /*000024e0*/ STREQ       R2, [R3, #4028]             @ 0xfbc 
    /*000024e4*/ BNE         H264eInitPPSI_x24b8
    /*000024e8*/ MOV         R2, #0 
    /*000024ec*/ STR         R0, [R3, #4036]             @ 0xfc4 
    /*000024f0*/ STR         R2, [R3, #4032]             @ 0xfc0 
    /*000024f4*/ B           H264eInitPPSI_x24cc
    H264eInitPPSI_x24f8:
    /*000024f8*/ MOVW        R3, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e0] 
    /*000024fc*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00002500*/ MOVT        R3, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e0] 
    /*00002504*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00002508*/ MOVW        R2, #1485                   @ 0x5cd 
    /*0000250c*/ LDR         R1, [PC, #4]                @ 0x0000000000002518 
    /*00002510*/ BL          0x0000000000002510          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002514*/ B           H264eInitPPSI_x240c
    /*00002518*/ STRDEQ      R0, [R0], -R4 
FUNC_END H264eInitPPSI


FUNC_BEGIN H264eInitPPSP
    /*0000251c*/ PUSH        {R4, R5, R6, LR} 
    /*00002520*/ SUBS        R4, R0, #0 
    /*00002524*/ BEQ         H264eInitPPSP_x2618
    H264eInitPPSP_x2528:
    /*00002528*/ ADD         R3, R4, #4096               @ 0x1000 
    /*0000252c*/ ADD         R0, R4, #8192               @ 0x2000 
    /*00002530*/ MOV         LR, #1 
    /*00002534*/ MOV         R2, #0 
    /*00002538*/ LDR         R1, [R3, #3712]             @ 0xe80 
    /*0000253c*/ STR         LR, [R3, #4040]             @ 0xfc8 
    /*00002540*/ LDR         IP, [R3, #3616]             @ 0xe20 
    /*00002544*/ STR         R1, [R3, #4044]             @ 0xfcc 
    /*00002548*/ LDR         R1, [R0, #1568]             @ 0x620 
    /*0000254c*/ SUBS        IP, IP, R2 
    /*00002550*/ LDR         R5, [R3, #3660]             @ 0xe4c 
    /*00002554*/ CLZ         R1, R1 
    /*00002558*/ MOVNE       IP, #1 
    /*0000255c*/ STR         R2, [R3, #4060]             @ 0xfdc 
    /*00002560*/ STR         R5, [R3, #4052]             @ 0xfd4 
    /*00002564*/ LSR         R1, R1, #5 
    /*00002568*/ STR         IP, [R3, #4056]             @ 0xfd8 
    /*0000256c*/ STR         R1, [R3, #4048]             @ 0xfd0 
    /*00002570*/ STR         R2, [R3, #4064]             @ 0xfe0 
    /*00002574*/ STR         R2, [R3, #4068]             @ 0xfe4 
    /*00002578*/ STR         R2, [R3, #4072]             @ 0xfe8 
    /*0000257c*/ STR         R2, [R3, #4076]             @ 0xfec 
    /*00002580*/ LDR         R1, [R0, #1564]             @ 0x61c 
    /*00002584*/ STR         LR, [R3, #4080]             @ 0xff0 
    /*00002588*/ STR         R1, [R3, #4088]             @ 0xff8 
    /*0000258c*/ LDR         IP, [R0, #1388]             @ 0x56c 
    /*00002590*/ STR         R2, [R3, #4092]             @ 0xffc 
    /*00002594*/ STR         IP, [R3, #4084]             @ 0xff4 
    /*00002598*/ LDR         R2, [R4, #968]              @ 0x3c8 
    /*0000259c*/ SUB         R2, R2, #2 
    /*000025a0*/ CMP         R2, LR 
    /*000025a4*/ BLS         H264eInitPPSP_x25b0
    /*000025a8*/ MOV         R0, #0 
    /*000025ac*/ POP         {R4, R5, R6, PC} 
    H264eInitPPSP_x25b0:
    /*000025b0*/ LDR         R2, [R0, #1384]             @ 0x568 
    /*000025b4*/ CMP         R2, #0 
    /*000025b8*/ BEQ         H264eInitPPSP_x25ec
    /*000025bc*/ LDR         R2, [R0, #1424]             @ 0x590 
    /*000025c0*/ CMP         R2, LR 
    /*000025c4*/ BEQ         H264eInitPPSP_x25ec
    H264eInitPPSP_x25c8:
    /*000025c8*/ ADD         R2, R3, #4096               @ 0x1000 
    /*000025cc*/ ADD         R3, R3, #4096               @ 0x1000 
    /*000025d0*/ MOV         R0, #1 
    /*000025d4*/ STR         R0, [R2] 
    /*000025d8*/ MOV         R2, #0 
    /*000025dc*/ STR         R1, [R3, #8] 
    /*000025e0*/ STR         R2, [R3, #4] 
    H264eInitPPSP_x25e4:
    /*000025e4*/ MOV         R0, #0 
    /*000025e8*/ POP         {R4, R5, R6, PC} 
    H264eInitPPSP_x25ec:
    /*000025ec*/ LDR         R2, [R0, #1428]             @ 0x594 
    /*000025f0*/ CMP         R2, #1 
    /*000025f4*/ ADDEQ       R2, R3, #4096               @ 0x1000 
    /*000025f8*/ MOVEQ       R0, #0 
    /*000025fc*/ STREQ       R0, [R2] 
    /*00002600*/ BNE         H264eInitPPSP_x25c8
    /*00002604*/ ADD         R3, R3, #4096               @ 0x1000 
    /*00002608*/ MOV         R2, #0 
    /*0000260c*/ STR         R1, [R3, #8] 
    /*00002610*/ STR         R2, [R3, #4] 
    /*00002614*/ B           H264eInitPPSP_x25e4
    H264eInitPPSP_x2618:
    /*00002618*/ MOVW        R3, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e0] 
    /*0000261c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00002620*/ MOVT        R3, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e0] 
    /*00002624*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00002628*/ MOVW        R2, #1553                   @ 0x611 
    /*0000262c*/ LDR         R1, [PC, #4]                @ 0x0000000000002638 
    /*00002630*/ BL          0x0000000000002630          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002634*/ B           H264eInitPPSP_x2528
    /*00002638*/ ANDEQ       R0, R0, R4, LSL #4 
FUNC_END H264eInitPPSP


FUNC_BEGIN H264eSwapSliceStrm
    /*0000263c*/ CMP         R1, #0 
    /*00002640*/ BXLE        LR 
    /*00002644*/ RSB         R2, R1, #32 
    H264eSwapSliceStrm_x2648:
    /*00002648*/ LDR         R3, [R0] 
    /*0000264c*/ CMP         R1, #31 
    /*00002650*/ SUB         R1, R1, #32 
    /*00002654*/ ADD         R0, R0, #4 
    /*00002658*/ REV         R3, R3 
    /*0000265c*/ STR         R3, [R0, #-4] 
    /*00002660*/ LSRLE       R3, R3, R2 
    /*00002664*/ STRLE       R3, [R0, #-4] 
    /*00002668*/ CMP         R1, #0 
    /*0000266c*/ ADD         R2, R2, #32 
    /*00002670*/ BGT         H264eSwapSliceStrm_x2648
    /*00002674*/ BX          LR 
FUNC_END H264eSwapSliceStrm


FUNC_BEGIN H264ePutRbspTrailingBits
    /*00002678*/ MOV         R2, #1 
    /*0000267c*/ PUSH        {R4, LR} 
    /*00002680*/ MOV         R1, R2 
    /*00002684*/ MOV         R4, R0 
    /*00002688*/ BL          0x0000000000002688          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000268c*/ LDR         R2, [R4] 
    /*00002690*/ ANDS        R2, R2, #7 
    /*00002694*/ BEQ         H264ePutRbspTrailingBits_x26a8
    /*00002698*/ RSB         R2, R2, #8 
    /*0000269c*/ MOV         R1, #0 
    /*000026a0*/ MOV         R0, R4 
    /*000026a4*/ BL          0x00000000000026A4          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    H264ePutRbspTrailingBits_x26a8:
    /*000026a8*/ MOV         R0, R4 
    /*000026ac*/ POP         {R4, LR} 
    H264ePutRbspTrailingBits_x26b0:
    /*000026b0*/ B           H264ePutRbspTrailingBits_x26b0@ BS_PROC_LAST_BITS [R_ARM_JUMP24: .text+0x127d8] 
FUNC_END H264ePutRbspTrailingBits


FUNC_BEGIN H264eEncodeVui
    /*000026b4*/ PUSH        {R4, R5, R6, LR} 
    /*000026b8*/ MOV         R2, #1 
    /*000026bc*/ MOV         R4, R1 
    /*000026c0*/ LDRB        R1, [R1, #20] 
    /*000026c4*/ MOV         R5, R0 
    /*000026c8*/ BL          0x00000000000026C8          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000026cc*/ LDRB        R3, [R4, #20] 
    /*000026d0*/ CMP         R3, #0 
    /*000026d4*/ BNE         H264eEncodeVui_x297c
    H264eEncodeVui_x26d8:
    /*000026d8*/ MOV         R2, #1 
    /*000026dc*/ LDRB        R1, [R4, #22] 
    /*000026e0*/ MOV         R0, R5 
    /*000026e4*/ BL          0x00000000000026E4          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000026e8*/ LDRB        R3, [R4, #22] 
    /*000026ec*/ CMP         R3, #0 
    /*000026f0*/ BNE         H264eEncodeVui_x2968
    H264eEncodeVui_x26f4:
    /*000026f4*/ MOV         R2, #1 
    /*000026f8*/ LDRB        R1, [R4, #28] 
    /*000026fc*/ MOV         R0, R5 
    /*00002700*/ BL          0x0000000000002700          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002704*/ LDRB        R3, [R4, #28] 
    /*00002708*/ CMP         R3, #0 
    /*0000270c*/ BNE         H264eEncodeVui_x28f8
    H264eEncodeVui_x2710:
    /*00002710*/ MOV         R2, #1 
    /*00002714*/ LDR         R1, [R4] 
    /*00002718*/ MOV         R0, R5 
    /*0000271c*/ BL          0x000000000000271C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002720*/ MOV         R2, #1 
    /*00002724*/ LDR         R1, [R4, #4] 
    /*00002728*/ MOV         R0, R5 
    /*0000272c*/ BL          0x000000000000272C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002730*/ LDR         R3, [R4, #4] 
    /*00002734*/ CMP         R3, #0 
    /*00002738*/ BNE         H264eEncodeVui_x28c4
    H264eEncodeVui_x273c:
    /*0000273c*/ MOV         R2, #1 
    /*00002740*/ LDR         R1, [R4, #36]               @ 0x24 
    /*00002744*/ MOV         R0, R5 
    /*00002748*/ BL          0x0000000000002748          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000274c*/ MOV         R2, #1 
    /*00002750*/ LDR         R1, [R4, #40]               @ 0x28 
    /*00002754*/ MOV         R0, R5 
    /*00002758*/ BL          0x0000000000002758          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000275c*/ MOV         R2, #1 
    /*00002760*/ LDR         R1, [R4, #44]               @ 0x2c 
    /*00002764*/ MOV         R0, R5 
    /*00002768*/ BL          0x0000000000002768          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000276c*/ MOV         R2, #1 
    /*00002770*/ LDR         R1, [R4, #48]               @ 0x30 
    /*00002774*/ MOV         R0, R5 
    /*00002778*/ BL          0x0000000000002778          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000277c*/ LDR         R3, [R4, #48]               @ 0x30 
    /*00002780*/ CMP         R3, #0 
    /*00002784*/ POPEQ       {R4, R5, R6, PC} 
    /*00002788*/ LDRB        R1, [R4, #52]               @ 0x34 
    /*0000278c*/ MOV         R2, #1 
    /*00002790*/ MOV         R0, R5 
    /*00002794*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00002798*/ BL          0x0000000000002798          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000279c*/ LDRB        R1, [R4, #53]               @ 0x35 
    /*000027a0*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*000027a4*/ MOV         R0, R5 
    /*000027a8*/ ADD         R1, R1, #1 
    /*000027ac*/ LDRB        R2, [R6, R1, LSR #8] 
    /*000027b0*/ ADD         R2, R2, #16 
    /*000027b4*/ CMP         R2, #24 
    /*000027b8*/ UXTBEQ      R3, R1 
    /*000027bc*/ LDRBEQ      R2, [R6, R3] 
    /*000027c0*/ ADDEQ       R2, R2, #24 
    /*000027c4*/ LSL         R2, R2, #1 
    /*000027c8*/ RSB         R2, R2, #63                 @ 0x3f 
    /*000027cc*/ BL          0x00000000000027CC          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000027d0*/ LDRB        R1, [R4, #54]               @ 0x36 
    /*000027d4*/ MOV         R0, R5 
    /*000027d8*/ ADD         R1, R1, #1 
    /*000027dc*/ LDRB        R2, [R6, R1, LSR #8] 
    /*000027e0*/ ADD         R2, R2, #16 
    /*000027e4*/ CMP         R2, #24 
    /*000027e8*/ UXTBEQ      R3, R1 
    /*000027ec*/ LDRBEQ      R2, [R6, R3] 
    /*000027f0*/ ADDEQ       R2, R2, #24 
    /*000027f4*/ LSL         R2, R2, #1 
    /*000027f8*/ RSB         R2, R2, #63                 @ 0x3f 
    /*000027fc*/ BL          0x00000000000027FC          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002800*/ LDRB        R1, [R4, #55]               @ 0x37 
    /*00002804*/ MOV         R0, R5 
    /*00002808*/ ADD         R1, R1, #1 
    /*0000280c*/ LDRB        R2, [R6, R1, LSR #8] 
    /*00002810*/ ADD         R2, R2, #16 
    /*00002814*/ CMP         R2, #24 
    /*00002818*/ UXTBEQ      R3, R1 
    /*0000281c*/ LDRBEQ      R2, [R6, R3] 
    /*00002820*/ ADDEQ       R2, R2, #24 
    /*00002824*/ LSL         R2, R2, #1 
    /*00002828*/ RSB         R2, R2, #63                 @ 0x3f 
    /*0000282c*/ BL          0x000000000000282C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002830*/ LDRB        R1, [R4, #56]               @ 0x38 
    /*00002834*/ MOV         R0, R5 
    /*00002838*/ ADD         R1, R1, #1 
    /*0000283c*/ LDRB        R2, [R6, R1, LSR #8] 
    /*00002840*/ ADD         R2, R2, #16 
    /*00002844*/ CMP         R2, #24 
    /*00002848*/ UXTBEQ      R3, R1 
    /*0000284c*/ LDRBEQ      R2, [R6, R3] 
    /*00002850*/ ADDEQ       R2, R2, #24 
    /*00002854*/ LSL         R2, R2, #1 
    /*00002858*/ RSB         R2, R2, #63                 @ 0x3f 
    /*0000285c*/ BL          0x000000000000285C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002860*/ LDRB        R1, [R4, #57]               @ 0x39 
    /*00002864*/ MOV         R0, R5 
    /*00002868*/ ADD         R1, R1, #1 
    /*0000286c*/ LDRB        R2, [R6, R1, LSR #8] 
    /*00002870*/ ADD         R2, R2, #16 
    /*00002874*/ CMP         R2, #24 
    /*00002878*/ UXTBEQ      R3, R1 
    /*0000287c*/ LDRBEQ      R2, [R6, R3] 
    /*00002880*/ ADDEQ       R2, R2, #24 
    /*00002884*/ LSL         R2, R2, #1 
    /*00002888*/ RSB         R2, R2, #63                 @ 0x3f 
    /*0000288c*/ BL          0x000000000000288C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002890*/ LDRB        R1, [R4, #58]               @ 0x3a 
    /*00002894*/ MOV         R0, R5 
    /*00002898*/ ADD         R1, R1, #1 
    /*0000289c*/ LDRB        R2, [R6, R1, LSR #8] 
    /*000028a0*/ ADD         R2, R2, #16 
    /*000028a4*/ CMP         R2, #24 
    /*000028a8*/ UXTBEQ      R3, R1 
    /*000028ac*/ LDRBEQ      R2, [R6, R3] 
    /*000028b0*/ POP         {R4, R5, R6, LR} 
    /*000028b4*/ ADDEQ       R2, R2, #24 
    /*000028b8*/ LSL         R2, R2, #1 
    /*000028bc*/ RSB         R2, R2, #63                 @ 0x3f 
    H264eEncodeVui_x28c0:
    /*000028c0*/ B           H264eEncodeVui_x28c0        @ BS_PUT_BITS [R_ARM_JUMP24: .text+0x12650] 
    H264eEncodeVui_x28c4:
    /*000028c4*/ LDR         R1, [R4, #8] 
    /*000028c8*/ MOV         R2, #32 
    /*000028cc*/ MOV         R0, R5 
    /*000028d0*/ BL          0x00000000000028D0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000028d4*/ LDR         R1, [R4, #12] 
    /*000028d8*/ MOV         R2, #32 
    /*000028dc*/ MOV         R0, R5 
    /*000028e0*/ BL          0x00000000000028E0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000028e4*/ MOV         R2, #1 
    /*000028e8*/ LDR         R1, [R4, #16] 
    /*000028ec*/ MOV         R0, R5 
    /*000028f0*/ BL          0x00000000000028F0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000028f4*/ B           H264eEncodeVui_x273c
    H264eEncodeVui_x28f8:
    /*000028f8*/ MOV         R2, #3 
    /*000028fc*/ LDRB        R1, [R4, #29] 
    /*00002900*/ MOV         R0, R5 
    /*00002904*/ BL          0x0000000000002904          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002908*/ MOV         R2, #1 
    /*0000290c*/ LDRB        R1, [R4, #30] 
    /*00002910*/ MOV         R0, R5 
    /*00002914*/ BL          0x0000000000002914          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002918*/ MOV         R2, #1 
    /*0000291c*/ LDRB        R1, [R4, #31] 
    /*00002920*/ MOV         R0, R5 
    /*00002924*/ BL          0x0000000000002924          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002928*/ LDRB        R3, [R4, #31] 
    /*0000292c*/ CMP         R3, #0 
    /*00002930*/ BEQ         H264eEncodeVui_x2710
    /*00002934*/ LDRB        R1, [R4, #32] 
    /*00002938*/ MOV         R2, #8 
    /*0000293c*/ MOV         R0, R5 
    /*00002940*/ BL          0x0000000000002940          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002944*/ LDRB        R1, [R4, #33]               @ 0x21 
    /*00002948*/ MOV         R2, #8 
    /*0000294c*/ MOV         R0, R5 
    /*00002950*/ BL          0x0000000000002950          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002954*/ MOV         R2, #8 
    /*00002958*/ LDRB        R1, [R4, #34]               @ 0x22 
    /*0000295c*/ MOV         R0, R5 
    /*00002960*/ BL          0x0000000000002960          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002964*/ B           H264eEncodeVui_x2710
    H264eEncodeVui_x2968:
    /*00002968*/ MOV         R2, #1 
    /*0000296c*/ LDRB        R1, [R4, #23] 
    /*00002970*/ MOV         R0, R5 
    /*00002974*/ BL          0x0000000000002974          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002978*/ B           H264eEncodeVui_x26f4
    H264eEncodeVui_x297c:
    /*0000297c*/ MOV         R2, #8 
    /*00002980*/ LDRB        R1, [R4, #21] 
    /*00002984*/ MOV         R0, R5 
    /*00002988*/ BL          0x0000000000002988          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000298c*/ LDRB        R3, [R4, #21] 
    /*00002990*/ CMP         R3, #255                    @ 0xff 
    /*00002994*/ BNE         H264eEncodeVui_x26d8
    /*00002998*/ LDRH        R1, [R4, #24] 
    /*0000299c*/ MOV         R2, #16 
    /*000029a0*/ MOV         R0, R5 
    /*000029a4*/ BL          0x00000000000029A4          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000029a8*/ MOV         R2, #16 
    /*000029ac*/ LDRH        R1, [R4, #26] 
    /*000029b0*/ MOV         R0, R5 
    /*000029b4*/ BL          0x00000000000029B4          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000029b8*/ B           H264eEncodeVui_x26d8
FUNC_END H264eEncodeVui


FUNC_BEGIN H264eEncodeSPS
    /*000029bc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000029c0*/ SUB         SP, SP, #28 
    /*000029c4*/ ADD         R4, SP, #24 
    /*000029c8*/ MOV         R3, R2 
    /*000029cc*/ MOV         R5, R1 
    /*000029d0*/ MOV         R6, #0 
    /*000029d4*/ MOV         R2, #32 
    /*000029d8*/ STR         R6, [R4, #-12]! 
    /*000029dc*/ STR         R6, [R3] 
    /*000029e0*/ MOV         R1, #1 
    /*000029e4*/ MOV         R7, R0 
    /*000029e8*/ MOV         R0, R4 
    /*000029ec*/ STR         R3, [SP, #16] 
    /*000029f0*/ STRH        R6, [SP, #20] 
    /*000029f4*/ BL          0x00000000000029F4          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000029f8*/ MOV         R1, R6 
    /*000029fc*/ MOV         R2, #1 
    /*00002a00*/ MOV         R0, R4 
    /*00002a04*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00002a08*/ BL          0x0000000000002A08          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002a0c*/ MOV         R1, #3 
    /*00002a10*/ MOV         R2, #2 
    /*00002a14*/ MOV         R0, R4 
    /*00002a18*/ BL          0x0000000000002A18          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002a1c*/ LDR         R3, [R5] 
    /*00002a20*/ MOV         R2, #5 
    /*00002a24*/ MOV         R0, R4 
    /*00002a28*/ CMP         R3, #83                     @ 0x53 
    /*00002a2c*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00002a30*/ MOVNE       R1, #7 
    /*00002a34*/ MOVEQ       R1, #15 
    /*00002a38*/ BL          0x0000000000002A38          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002a3c*/ MOV         R2, #8 
    /*00002a40*/ LDR         R1, [R5] 
    /*00002a44*/ MOV         R0, R4 
    /*00002a48*/ BL          0x0000000000002A48          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002a4c*/ MOV         R2, #4 
    /*00002a50*/ MOV         R1, #0 
    /*00002a54*/ MOV         R0, R4 
    /*00002a58*/ BL          0x0000000000002A58          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002a5c*/ MOV         R2, #4 
    /*00002a60*/ MOV         R1, #0 
    /*00002a64*/ MOV         R0, R4 
    /*00002a68*/ BL          0x0000000000002A68          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002a6c*/ MOV         R2, #8 
    /*00002a70*/ LDR         R1, [R5, #4] 
    /*00002a74*/ MOV         R0, R4 
    /*00002a78*/ BL          0x0000000000002A78          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002a7c*/ LDR         R1, [R5, #8] 
    /*00002a80*/ ADD         R1, R1, #1 
    /*00002a84*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002a88*/ CMP         R2, #8 
    /*00002a8c*/ BEQ         H264eEncodeSPS_x3088
    H264eEncodeSPS_x2a90:
    /*00002a90*/ LSL         R2, R2, #1 
    /*00002a94*/ MOV         R0, R4 
    /*00002a98*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002a9c*/ BL          0x0000000000002A9C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002aa0*/ LDR         R2, [R5] 
    /*00002aa4*/ SUB         R3, R2, #83                 @ 0x53 
    /*00002aa8*/ CLZ         R3, R3 
    /*00002aac*/ LSR         R3, R3, #5 
    /*00002ab0*/ CMP         R2, #99                     @ 0x63 
    /*00002ab4*/ ORRHI       R3, R3, #1 
    /*00002ab8*/ CMP         R3, #0 
    /*00002abc*/ BEQ         H264eEncodeSPS_x2b58
    /*00002ac0*/ LDR         R1, [R5, #12] 
    /*00002ac4*/ ADD         R1, R1, #1 
    /*00002ac8*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002acc*/ CMP         R2, #8 
    /*00002ad0*/ BEQ         H264eEncodeSPS_x32c0
    H264eEncodeSPS_x2ad4:
    /*00002ad4*/ LSL         R2, R2, #1 
    /*00002ad8*/ MOV         R0, R4 
    /*00002adc*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002ae0*/ BL          0x0000000000002AE0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002ae4*/ LDR         R1, [R5, #16] 
    /*00002ae8*/ ADD         R1, R1, #1 
    /*00002aec*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002af0*/ CMP         R2, #8 
    /*00002af4*/ BEQ         H264eEncodeSPS_x31bc
    H264eEncodeSPS_x2af8:
    /*00002af8*/ LSL         R2, R2, #1 
    /*00002afc*/ MOV         R0, R4 
    /*00002b00*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002b04*/ BL          0x0000000000002B04          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002b08*/ LDR         R1, [R5, #20] 
    /*00002b0c*/ ADD         R1, R1, #1 
    /*00002b10*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002b14*/ CMP         R2, #8 
    /*00002b18*/ BEQ         H264eEncodeSPS_x31f0
    H264eEncodeSPS_x2b1c:
    /*00002b1c*/ LSL         R2, R2, #1 
    /*00002b20*/ MOV         R0, R4 
    /*00002b24*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002b28*/ BL          0x0000000000002B28          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002b2c*/ MOV         R2, #1 
    /*00002b30*/ LDR         R1, [R5, #24] 
    /*00002b34*/ MOV         R0, R4 
    /*00002b38*/ BL          0x0000000000002B38          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002b3c*/ MOV         R2, #1 
    /*00002b40*/ LDR         R1, [R5, #28] 
    /*00002b44*/ MOV         R0, R4 
    /*00002b48*/ BL          0x0000000000002B48          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002b4c*/ LDR         R3, [R5, #28] 
    /*00002b50*/ CMP         R3, #1 
    /*00002b54*/ BEQ         H264eEncodeSPS_x3124
    H264eEncodeSPS_x2b58:
    /*00002b58*/ LDR         R1, [R5, #64]               @ 0x40 
    /*00002b5c*/ ADD         R1, R1, #1 
    /*00002b60*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002b64*/ CMP         R2, #8 
    /*00002b68*/ BEQ         H264eEncodeSPS_x30f0
    H264eEncodeSPS_x2b6c:
    /*00002b6c*/ LSL         R2, R2, #1 
    /*00002b70*/ MOV         R0, R4 
    /*00002b74*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002b78*/ BL          0x0000000000002B78          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002b7c*/ LDR         R1, [R5, #68]               @ 0x44 
    /*00002b80*/ ADD         R1, R1, #1 
    /*00002b84*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002b88*/ CMP         R2, #8 
    /*00002b8c*/ BEQ         H264eEncodeSPS_x30bc
    H264eEncodeSPS_x2b90:
    /*00002b90*/ LSL         R2, R2, #1 
    /*00002b94*/ MOV         R0, R4 
    /*00002b98*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002b9c*/ BL          0x0000000000002B9C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002ba0*/ LDR         R2, [R5, #68]               @ 0x44 
    /*00002ba4*/ CMP         R2, #0 
    /*00002ba8*/ BNE         H264eEncodeSPS_x2d84
    /*00002bac*/ LDR         R1, [R5, #72]               @ 0x48 
    /*00002bb0*/ ADD         R1, R1, #1 
    /*00002bb4*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002bb8*/ CMP         R2, #8 
    /*00002bbc*/ BEQ         H264eEncodeSPS_x2e60
    H264eEncodeSPS_x2bc0:
    /*00002bc0*/ LSL         R2, R2, #1 
    /*00002bc4*/ MOV         R0, R4 
    /*00002bc8*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002bcc*/ BL          0x0000000000002BCC          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    H264eEncodeSPS_x2bd0:
    /*00002bd0*/ LDR         R1, [R5, #96]               @ 0x60 
    /*00002bd4*/ ADD         R1, R1, #1 
    /*00002bd8*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002bdc*/ CMP         R2, #8 
    /*00002be0*/ BEQ         H264eEncodeSPS_x3054
    H264eEncodeSPS_x2be4:
    /*00002be4*/ LSL         R2, R2, #1 
    /*00002be8*/ MOV         R0, R4 
    /*00002bec*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002bf0*/ BL          0x0000000000002BF0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002bf4*/ MOV         R2, #1 
    /*00002bf8*/ LDR         R1, [R5, #100]              @ 0x64 
    /*00002bfc*/ MOV         R0, R4 
    /*00002c00*/ BL          0x0000000000002C00          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002c04*/ LDR         R1, [R5, #108]              @ 0x6c 
    /*00002c08*/ ADD         R1, R1, #1 
    /*00002c0c*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002c10*/ CMP         R2, #8 
    /*00002c14*/ BEQ         H264eEncodeSPS_x3020
    H264eEncodeSPS_x2c18:
    /*00002c18*/ LSL         R2, R2, #1 
    /*00002c1c*/ MOV         R0, R4 
    /*00002c20*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002c24*/ BL          0x0000000000002C24          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002c28*/ LDR         R1, [R5, #112]              @ 0x70 
    /*00002c2c*/ ADD         R1, R1, #1 
    /*00002c30*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002c34*/ CMP         R2, #8 
    /*00002c38*/ BEQ         H264eEncodeSPS_x2fec
    H264eEncodeSPS_x2c3c:
    /*00002c3c*/ LSL         R2, R2, #1 
    /*00002c40*/ MOV         R0, R4 
    /*00002c44*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002c48*/ BL          0x0000000000002C48          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002c4c*/ MOV         R2, #1 
    /*00002c50*/ LDR         R1, [R5, #116]              @ 0x74 
    /*00002c54*/ MOV         R0, R4 
    /*00002c58*/ BL          0x0000000000002C58          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002c5c*/ LDR         R3, [R5, #116]              @ 0x74 
    /*00002c60*/ CMP         R3, #0 
    /*00002c64*/ BEQ         H264eEncodeSPS_x2fd8
    H264eEncodeSPS_x2c68:
    /*00002c68*/ MOV         R2, #1 
    /*00002c6c*/ LDR         R1, [R5, #104]              @ 0x68 
    /*00002c70*/ MOV         R0, R4 
    /*00002c74*/ BL          0x0000000000002C74          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002c78*/ MOV         R2, #1 
    /*00002c7c*/ LDR         R1, [R5, #124]              @ 0x7c 
    /*00002c80*/ MOV         R0, R4 
    /*00002c84*/ BL          0x0000000000002C84          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002c88*/ LDR         R3, [R5, #124]              @ 0x7c 
    /*00002c8c*/ CMP         R3, #0 
    /*00002c90*/ BEQ         H264eEncodeSPS_x2d24
    /*00002c94*/ LDR         R1, [R5, #128]              @ 0x80 
    /*00002c98*/ ADD         R1, R1, #1 
    /*00002c9c*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002ca0*/ CMP         R2, #8 
    /*00002ca4*/ BEQ         H264eEncodeSPS_x3188
    H264eEncodeSPS_x2ca8:
    /*00002ca8*/ LSL         R2, R2, #1 
    /*00002cac*/ MOV         R0, R4 
    /*00002cb0*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002cb4*/ BL          0x0000000000002CB4          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002cb8*/ LDR         R1, [R5, #132]              @ 0x84 
    /*00002cbc*/ ADD         R1, R1, #1 
    /*00002cc0*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002cc4*/ CMP         R2, #8 
    /*00002cc8*/ BEQ         H264eEncodeSPS_x3224
    H264eEncodeSPS_x2ccc:
    /*00002ccc*/ LSL         R2, R2, #1 
    /*00002cd0*/ MOV         R0, R4 
    /*00002cd4*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002cd8*/ BL          0x0000000000002CD8          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002cdc*/ LDR         R1, [R5, #136]              @ 0x88 
    /*00002ce0*/ ADD         R1, R1, #1 
    /*00002ce4*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002ce8*/ CMP         R2, #8 
    /*00002cec*/ BEQ         H264eEncodeSPS_x3258
    H264eEncodeSPS_x2cf0:
    /*00002cf0*/ LSL         R2, R2, #1 
    /*00002cf4*/ MOV         R0, R4 
    /*00002cf8*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002cfc*/ BL          0x0000000000002CFC          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002d00*/ LDR         R1, [R5, #140]              @ 0x8c 
    /*00002d04*/ ADD         R1, R1, #1 
    /*00002d08*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002d0c*/ CMP         R2, #8 
    /*00002d10*/ BEQ         H264eEncodeSPS_x328c
    H264eEncodeSPS_x2d14:
    /*00002d14*/ LSL         R2, R2, #1 
    /*00002d18*/ MOV         R0, R4 
    /*00002d1c*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002d20*/ BL          0x0000000000002D20          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    H264eEncodeSPS_x2d24:
    /*00002d24*/ MOV         R2, #1 
    /*00002d28*/ LDR         R1, [R5, #144]              @ 0x90 
    /*00002d2c*/ MOV         R0, R4 
    /*00002d30*/ BL          0x0000000000002D30          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002d34*/ LDR         R3, [R5, #144]              @ 0x90 
    /*00002d38*/ CMP         R3, #0 
    /*00002d3c*/ BNE         H264eEncodeSPS_x2f3c
    /*00002d40*/ LDR         R3, [R5] 
    /*00002d44*/ CMP         R3, #83                     @ 0x53 
    /*00002d48*/ BEQ         H264eEncodeSPS_x2f54
    H264eEncodeSPS_x2d4c:
    /*00002d4c*/ MOV         R0, R4 
    /*00002d50*/ BL          0x0000000000002D50          @ H264ePutRbspTrailingBits [R_ARM_CALL: .text+0x2678] 
    /*00002d54*/ LDR         R2, [SP, #12] 
    /*00002d58*/ TST         R2, #7 
    /*00002d5c*/ BNE         H264eEncodeSPS_x2ee8
    H264eEncodeSPS_x2d60:
    /*00002d60*/ CMP         R2, #2560                   @ 0xa00 
    /*00002d64*/ BHI         H264eEncodeSPS_x2e94
    H264eEncodeSPS_x2d68:
    /*00002d68*/ LSR         R2, R2, #3 
    /*00002d6c*/ MOV         R1, R7 
    /*00002d70*/ MOV         R3, #4 
    /*00002d74*/ LDR         R0, [SP, #16] 
    /*00002d78*/ BL          0x0000000000002D78          @ H264eScanAndAdd03 [R_ARM_CALL: .text+0x12c0] 
    /*00002d7c*/ ADD         SP, SP, #28 
    /*00002d80*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264eEncodeSPS_x2d84:
    /*00002d84*/ CMP         R2, #1 
    /*00002d88*/ BNE         H264eEncodeSPS_x2bd0
    /*00002d8c*/ LDR         R1, [R5, #76]               @ 0x4c 
    /*00002d90*/ MOV         R0, R4 
    /*00002d94*/ BL          0x0000000000002D94          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002d98*/ LDR         R3, [R5, #80]               @ 0x50 
    /*00002d9c*/ CMP         R3, #0 
    /*00002da0*/ EOR         R2, R3, R3, ASR #31 
    /*00002da4*/ SUB         R2, R2, R3, ASR #31 
    /*00002da8*/ MOVGT       R1, #0 
    /*00002dac*/ MOVLE       R1, #1 
    /*00002db0*/ ORR         R1, R1, R2, LSL #1 
    /*00002db4*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002db8*/ CMP         R2, #8 
    /*00002dbc*/ BEQ         H264eEncodeSPS_x32f4
    H264eEncodeSPS_x2dc0:
    /*00002dc0*/ LSL         R2, R2, #1 
    /*00002dc4*/ MOV         R0, R4 
    /*00002dc8*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002dcc*/ BL          0x0000000000002DCC          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002dd0*/ LDR         R3, [R5, #84]               @ 0x54 
    /*00002dd4*/ CMP         R3, #0 
    /*00002dd8*/ EOR         R2, R3, R3, ASR #31 
    /*00002ddc*/ SUB         R2, R2, R3, ASR #31 
    /*00002de0*/ MOVGT       R1, #0 
    /*00002de4*/ MOVLE       R1, #1 
    /*00002de8*/ ORR         R1, R1, R2, LSL #1 
    /*00002dec*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002df0*/ CMP         R2, #8 
    /*00002df4*/ BEQ         H264eEncodeSPS_x335c
    H264eEncodeSPS_x2df8:
    /*00002df8*/ LSL         R2, R2, #1 
    /*00002dfc*/ MOV         R0, R4 
    /*00002e00*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002e04*/ BL          0x0000000000002E04          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002e08*/ LDR         R1, [R5, #88]               @ 0x58 
    /*00002e0c*/ ADD         R1, R1, #1 
    /*00002e10*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002e14*/ CMP         R2, #8 
    /*00002e18*/ BEQ         H264eEncodeSPS_x3328
    H264eEncodeSPS_x2e1c:
    /*00002e1c*/ LSL         R2, R2, #1 
    /*00002e20*/ MOV         R0, R4 
    /*00002e24*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00002e28*/ BL          0x0000000000002E28          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002e2c*/ LDR         R3, [R5, #88]               @ 0x58 
    /*00002e30*/ CMP         R3, #0 
    /*00002e34*/ BLE         H264eEncodeSPS_x2bd0
    /*00002e38*/ LDR         R3, [R5, #92]               @ 0x5c 
    /*00002e3c*/ CMP         R3, #0 
    /*00002e40*/ EOR         R2, R3, R3, ASR #31 
    /*00002e44*/ SUB         R2, R2, R3, ASR #31 
    /*00002e48*/ MOVGT       R1, #0 
    /*00002e4c*/ MOVLE       R1, #1 
    /*00002e50*/ ORR         R1, R1, R2, LSL #1 
    /*00002e54*/ LDRB        R2, [R6, R1, LSR #24] 
    /*00002e58*/ CMP         R2, #8 
    /*00002e5c*/ BNE         H264eEncodeSPS_x2bc0
    H264eEncodeSPS_x2e60:
    /*00002e60*/ UBFX        R3, R1, #16, #8 
    /*00002e64*/ LDRB        R2, [R6, R3] 
    /*00002e68*/ ADD         R2, R2, #8 
    /*00002e6c*/ CMP         R2, #16 
    /*00002e70*/ BNE         H264eEncodeSPS_x2bc0
    /*00002e74*/ UBFX        R3, R1, #8, #8 
    /*00002e78*/ LDRB        R2, [R6, R3] 
    /*00002e7c*/ ADD         R2, R2, #16 
    /*00002e80*/ CMP         R2, #24 
    /*00002e84*/ UXTBEQ      R3, R1 
    /*00002e88*/ LDRBEQ      R2, [R6, R3] 
    /*00002e8c*/ ADDEQ       R2, R2, #24 
    /*00002e90*/ B           H264eEncodeSPS_x2bc0
    H264eEncodeSPS_x2e94:
    /*00002e94*/ STR         R2, [SP, #4] 
    /*00002e98*/ MOVW        R3, #1990                   @ 0x7c6 
    /*00002e9c*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x888] 
    /*00002ea0*/ STR         R3, [SP] 
    /*00002ea4*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x888] 
    /*00002ea8*/ LDR         R3, [PC, #1248]             @ 0x0000000000003390 
    /*00002eac*/ MOV         R1, #10 
    /*00002eb0*/ MOV         R0, #3 
    /*00002eb4*/ BL          0x0000000000002EB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002eb8*/ LDR         R2, [SP, #12] 
    /*00002ebc*/ CMP         R2, #2560                   @ 0xa00 
    /*00002ec0*/ BLS         H264eEncodeSPS_x2d68
    /*00002ec4*/ MOVW        R2, #1991                   @ 0x7c7 
    /*00002ec8*/ MOVW        R3, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ec] 
    /*00002ecc*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00002ed0*/ MOVT        R3, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ec] 
    /*00002ed4*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00002ed8*/ LDR         R1, [PC, #1200]             @ 0x0000000000003390 
    /*00002edc*/ BL          0x0000000000002EDC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002ee0*/ LDR         R2, [SP, #12] 
    /*00002ee4*/ B           H264eEncodeSPS_x2d68
    H264eEncodeSPS_x2ee8:
    /*00002ee8*/ STR         R2, [SP, #4] 
    /*00002eec*/ MOVW        R3, #1982                   @ 0x7be 
    /*00002ef0*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x888] 
    /*00002ef4*/ STR         R3, [SP] 
    /*00002ef8*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x888] 
    /*00002efc*/ LDR         R3, [PC, #1164]             @ 0x0000000000003390 
    /*00002f00*/ MOV         R1, #10 
    /*00002f04*/ MOV         R0, #3 
    /*00002f08*/ BL          0x0000000000002F08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002f0c*/ LDR         R2, [SP, #12] 
    /*00002f10*/ TST         R2, #7 
    /*00002f14*/ BEQ         H264eEncodeSPS_x2d60
    /*00002f18*/ MOVW        R2, #1983                   @ 0x7bf 
    /*00002f1c*/ MOVW        R3, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c4] 
    /*00002f20*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00002f24*/ MOVT        R3, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c4] 
    /*00002f28*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00002f2c*/ LDR         R1, [PC, #1116]             @ 0x0000000000003390 
    /*00002f30*/ BL          0x0000000000002F30          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002f34*/ LDR         R2, [SP, #12] 
    /*00002f38*/ B           H264eEncodeSPS_x2d60
    H264eEncodeSPS_x2f3c:
    /*00002f3c*/ ADD         R1, R5, #148                @ 0x94 
    /*00002f40*/ MOV         R0, R4 
    /*00002f44*/ BL          0x0000000000002F44          @ H264eEncodeVui [R_ARM_CALL: .text+0x26b4] 
    /*00002f48*/ LDR         R3, [R5] 
    /*00002f4c*/ CMP         R3, #83                     @ 0x53 
    /*00002f50*/ BNE         H264eEncodeSPS_x2d4c
    H264eEncodeSPS_x2f54:
    /*00002f54*/ LDR         R1, [R5, #208]              @ 0xd0 
    /*00002f58*/ MOV         R2, #1 
    /*00002f5c*/ MOV         R0, R4 
    /*00002f60*/ BL          0x0000000000002F60          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002f64*/ LDR         R1, [R5, #212]              @ 0xd4 
    /*00002f68*/ MOV         R2, #2 
    /*00002f6c*/ MOV         R0, R4 
    /*00002f70*/ BL          0x0000000000002F70          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002f74*/ LDR         R1, [R5, #216]              @ 0xd8 
    /*00002f78*/ MOV         R2, #1 
    /*00002f7c*/ MOV         R0, R4 
    /*00002f80*/ BL          0x0000000000002F80          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002f84*/ LDR         R1, [R5, #220]              @ 0xdc 
    /*00002f88*/ MOV         R2, #2 
    /*00002f8c*/ MOV         R0, R4 
    /*00002f90*/ BL          0x0000000000002F90          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002f94*/ LDR         R1, [R5, #248]              @ 0xf8 
    /*00002f98*/ MOV         R2, #1 
    /*00002f9c*/ MOV         R0, R4 
    /*00002fa0*/ BL          0x0000000000002FA0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002fa4*/ LDR         R1, [R5, #256]              @ 0x100 
    /*00002fa8*/ MOV         R2, #1 
    /*00002fac*/ MOV         R0, R4 
    /*00002fb0*/ BL          0x0000000000002FB0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002fb4*/ LDR         R1, [R5, #260]              @ 0x104 
    /*00002fb8*/ MOV         R2, #1 
    /*00002fbc*/ MOV         R0, R4 
    /*00002fc0*/ BL          0x0000000000002FC0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002fc4*/ LDR         R1, [R5, #264]              @ 0x108 
    /*00002fc8*/ MOV         R2, #1 
    /*00002fcc*/ MOV         R0, R4 
    /*00002fd0*/ BL          0x0000000000002FD0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002fd4*/ B           H264eEncodeSPS_x2d4c
    H264eEncodeSPS_x2fd8:
    /*00002fd8*/ MOV         R2, #1 
    /*00002fdc*/ LDR         R1, [R5, #120]              @ 0x78 
    /*00002fe0*/ MOV         R0, R4 
    /*00002fe4*/ BL          0x0000000000002FE4          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00002fe8*/ B           H264eEncodeSPS_x2c68
    H264eEncodeSPS_x2fec:
    /*00002fec*/ UBFX        R3, R1, #16, #8 
    /*00002ff0*/ LDRB        R2, [R6, R3] 
    /*00002ff4*/ ADD         R2, R2, #8 
    /*00002ff8*/ CMP         R2, #16 
    /*00002ffc*/ BNE         H264eEncodeSPS_x2c3c
    /*00003000*/ UBFX        R3, R1, #8, #8 
    /*00003004*/ LDRB        R2, [R6, R3] 
    /*00003008*/ ADD         R2, R2, #16 
    /*0000300c*/ CMP         R2, #24 
    /*00003010*/ UXTBEQ      R3, R1 
    /*00003014*/ LDRBEQ      R2, [R6, R3] 
    /*00003018*/ ADDEQ       R2, R2, #24 
    /*0000301c*/ B           H264eEncodeSPS_x2c3c
    H264eEncodeSPS_x3020:
    /*00003020*/ UBFX        R3, R1, #16, #8 
    /*00003024*/ LDRB        R2, [R6, R3] 
    /*00003028*/ ADD         R2, R2, #8 
    /*0000302c*/ CMP         R2, #16 
    /*00003030*/ BNE         H264eEncodeSPS_x2c18
    /*00003034*/ UBFX        R3, R1, #8, #8 
    /*00003038*/ LDRB        R2, [R6, R3] 
    /*0000303c*/ ADD         R2, R2, #16 
    /*00003040*/ CMP         R2, #24 
    /*00003044*/ UXTBEQ      R3, R1 
    /*00003048*/ LDRBEQ      R2, [R6, R3] 
    /*0000304c*/ ADDEQ       R2, R2, #24 
    /*00003050*/ B           H264eEncodeSPS_x2c18
    H264eEncodeSPS_x3054:
    /*00003054*/ UBFX        R3, R1, #16, #8 
    /*00003058*/ LDRB        R2, [R6, R3] 
    /*0000305c*/ ADD         R2, R2, #8 
    /*00003060*/ CMP         R2, #16 
    /*00003064*/ BNE         H264eEncodeSPS_x2be4
    /*00003068*/ UBFX        R3, R1, #8, #8 
    /*0000306c*/ LDRB        R2, [R6, R3] 
    /*00003070*/ ADD         R2, R2, #16 
    /*00003074*/ CMP         R2, #24 
    /*00003078*/ UXTBEQ      R3, R1 
    /*0000307c*/ LDRBEQ      R2, [R6, R3] 
    /*00003080*/ ADDEQ       R2, R2, #24 
    /*00003084*/ B           H264eEncodeSPS_x2be4
    H264eEncodeSPS_x3088:
    /*00003088*/ UBFX        R3, R1, #16, #8 
    /*0000308c*/ LDRB        R2, [R6, R3] 
    /*00003090*/ ADD         R2, R2, #8 
    /*00003094*/ CMP         R2, #16 
    /*00003098*/ BNE         H264eEncodeSPS_x2a90
    /*0000309c*/ UBFX        R3, R1, #8, #8 
    /*000030a0*/ LDRB        R2, [R6, R3] 
    /*000030a4*/ ADD         R2, R2, #16 
    /*000030a8*/ CMP         R2, #24 
    /*000030ac*/ UXTBEQ      R3, R1 
    /*000030b0*/ LDRBEQ      R2, [R6, R3] 
    /*000030b4*/ ADDEQ       R2, R2, #24 
    /*000030b8*/ B           H264eEncodeSPS_x2a90
    H264eEncodeSPS_x30bc:
    /*000030bc*/ UBFX        R3, R1, #16, #8 
    /*000030c0*/ LDRB        R2, [R6, R3] 
    /*000030c4*/ ADD         R2, R2, #8 
    /*000030c8*/ CMP         R2, #16 
    /*000030cc*/ BNE         H264eEncodeSPS_x2b90
    /*000030d0*/ UBFX        R3, R1, #8, #8 
    /*000030d4*/ LDRB        R2, [R6, R3] 
    /*000030d8*/ ADD         R2, R2, #16 
    /*000030dc*/ CMP         R2, #24 
    /*000030e0*/ UXTBEQ      R3, R1 
    /*000030e4*/ LDRBEQ      R2, [R6, R3] 
    /*000030e8*/ ADDEQ       R2, R2, #24 
    /*000030ec*/ B           H264eEncodeSPS_x2b90
    H264eEncodeSPS_x30f0:
    /*000030f0*/ UBFX        R3, R1, #16, #8 
    /*000030f4*/ LDRB        R2, [R6, R3] 
    /*000030f8*/ ADD         R2, R2, #8 
    /*000030fc*/ CMP         R2, #16 
    /*00003100*/ BNE         H264eEncodeSPS_x2b6c
    /*00003104*/ UBFX        R3, R1, #8, #8 
    /*00003108*/ LDRB        R2, [R6, R3] 
    /*0000310c*/ ADD         R2, R2, #16 
    /*00003110*/ CMP         R2, #24 
    /*00003114*/ UXTBEQ      R3, R1 
    /*00003118*/ LDRBEQ      R2, [R6, R3] 
    /*0000311c*/ ADDEQ       R2, R2, #24 
    /*00003120*/ B           H264eEncodeSPS_x2b6c
    H264eEncodeSPS_x3124:
    /*00003124*/ ADD         R8, R5, #32 
    /*00003128*/ ADD         R9, R5, #56                 @ 0x38 
    H264eEncodeSPS_x312c:
    /*0000312c*/ LDR         R1, [R8], #4 
    /*00003130*/ MOV         R2, #1 
    /*00003134*/ MOV         R0, R4 
    /*00003138*/ BL          0x0000000000003138          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000313c*/ MOV         R2, #9 
    /*00003140*/ MOV         R1, #16 
    /*00003144*/ MOV         R0, R4 
    /*00003148*/ BL          0x0000000000003148          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000314c*/ MOV         R2, #11 
    /*00003150*/ MOV         R1, #33                     @ 0x21 
    /*00003154*/ MOV         R0, R4 
    /*00003158*/ BL          0x0000000000003158          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000315c*/ CMP         R9, R8 
    /*00003160*/ BNE         H264eEncodeSPS_x312c
    /*00003164*/ MOV         R2, #1 
    /*00003168*/ MOV         R1, #0 
    /*0000316c*/ MOV         R0, R4 
    /*00003170*/ BL          0x0000000000003170          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00003174*/ MOV         R2, #1 
    /*00003178*/ MOV         R1, #0 
    /*0000317c*/ MOV         R0, R4 
    /*00003180*/ BL          0x0000000000003180          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00003184*/ B           H264eEncodeSPS_x2b58
    H264eEncodeSPS_x3188:
    /*00003188*/ UBFX        R3, R1, #16, #8 
    /*0000318c*/ LDRB        R2, [R6, R3] 
    /*00003190*/ ADD         R2, R2, #8 
    /*00003194*/ CMP         R2, #16 
    /*00003198*/ BNE         H264eEncodeSPS_x2ca8
    /*0000319c*/ UBFX        R3, R1, #8, #8 
    /*000031a0*/ LDRB        R2, [R6, R3] 
    /*000031a4*/ ADD         R2, R2, #16 
    /*000031a8*/ CMP         R2, #24 
    /*000031ac*/ UXTBEQ      R3, R1 
    /*000031b0*/ LDRBEQ      R2, [R6, R3] 
    /*000031b4*/ ADDEQ       R2, R2, #24 
    /*000031b8*/ B           H264eEncodeSPS_x2ca8
    H264eEncodeSPS_x31bc:
    /*000031bc*/ UBFX        R3, R1, #16, #8 
    /*000031c0*/ LDRB        R2, [R6, R3] 
    /*000031c4*/ ADD         R2, R2, #8 
    /*000031c8*/ CMP         R2, #16 
    /*000031cc*/ BNE         H264eEncodeSPS_x2af8
    /*000031d0*/ UBFX        R3, R1, #8, #8 
    /*000031d4*/ LDRB        R2, [R6, R3] 
    /*000031d8*/ ADD         R2, R2, #16 
    /*000031dc*/ CMP         R2, #24 
    /*000031e0*/ UXTBEQ      R3, R1 
    /*000031e4*/ LDRBEQ      R2, [R6, R3] 
    /*000031e8*/ ADDEQ       R2, R2, #24 
    /*000031ec*/ B           H264eEncodeSPS_x2af8
    H264eEncodeSPS_x31f0:
    /*000031f0*/ UBFX        R3, R1, #16, #8 
    /*000031f4*/ LDRB        R2, [R6, R3] 
    /*000031f8*/ ADD         R2, R2, #8 
    /*000031fc*/ CMP         R2, #16 
    /*00003200*/ BNE         H264eEncodeSPS_x2b1c
    /*00003204*/ UBFX        R3, R1, #8, #8 
    /*00003208*/ LDRB        R2, [R6, R3] 
    /*0000320c*/ ADD         R2, R2, #16 
    /*00003210*/ CMP         R2, #24 
    /*00003214*/ UXTBEQ      R3, R1 
    /*00003218*/ LDRBEQ      R2, [R6, R3] 
    /*0000321c*/ ADDEQ       R2, R2, #24 
    /*00003220*/ B           H264eEncodeSPS_x2b1c
    H264eEncodeSPS_x3224:
    /*00003224*/ UBFX        R3, R1, #16, #8 
    /*00003228*/ LDRB        R2, [R6, R3] 
    /*0000322c*/ ADD         R2, R2, #8 
    /*00003230*/ CMP         R2, #16 
    /*00003234*/ BNE         H264eEncodeSPS_x2ccc
    /*00003238*/ UBFX        R3, R1, #8, #8 
    /*0000323c*/ LDRB        R2, [R6, R3] 
    /*00003240*/ ADD         R2, R2, #16 
    /*00003244*/ CMP         R2, #24 
    /*00003248*/ UXTBEQ      R3, R1 
    /*0000324c*/ LDRBEQ      R2, [R6, R3] 
    /*00003250*/ ADDEQ       R2, R2, #24 
    /*00003254*/ B           H264eEncodeSPS_x2ccc
    H264eEncodeSPS_x3258:
    /*00003258*/ UBFX        R3, R1, #16, #8 
    /*0000325c*/ LDRB        R2, [R6, R3] 
    /*00003260*/ ADD         R2, R2, #8 
    /*00003264*/ CMP         R2, #16 
    /*00003268*/ BNE         H264eEncodeSPS_x2cf0
    /*0000326c*/ UBFX        R3, R1, #8, #8 
    /*00003270*/ LDRB        R2, [R6, R3] 
    /*00003274*/ ADD         R2, R2, #16 
    /*00003278*/ CMP         R2, #24 
    /*0000327c*/ UXTBEQ      R3, R1 
    /*00003280*/ LDRBEQ      R2, [R6, R3] 
    /*00003284*/ ADDEQ       R2, R2, #24 
    /*00003288*/ B           H264eEncodeSPS_x2cf0
    H264eEncodeSPS_x328c:
    /*0000328c*/ UBFX        R3, R1, #16, #8 
    /*00003290*/ LDRB        R2, [R6, R3] 
    /*00003294*/ ADD         R2, R2, #8 
    /*00003298*/ CMP         R2, #16 
    /*0000329c*/ BNE         H264eEncodeSPS_x2d14
    /*000032a0*/ UBFX        R3, R1, #8, #8 
    /*000032a4*/ LDRB        R2, [R6, R3] 
    /*000032a8*/ ADD         R2, R2, #16 
    /*000032ac*/ CMP         R2, #24 
    /*000032b0*/ UXTBEQ      R3, R1 
    /*000032b4*/ LDRBEQ      R2, [R6, R3] 
    /*000032b8*/ ADDEQ       R2, R2, #24 
    /*000032bc*/ B           H264eEncodeSPS_x2d14
    H264eEncodeSPS_x32c0:
    /*000032c0*/ UBFX        R3, R1, #16, #8 
    /*000032c4*/ LDRB        R2, [R6, R3] 
    /*000032c8*/ ADD         R2, R2, #8 
    /*000032cc*/ CMP         R2, #16 
    /*000032d0*/ BNE         H264eEncodeSPS_x2ad4
    /*000032d4*/ UBFX        R3, R1, #8, #8 
    /*000032d8*/ LDRB        R2, [R6, R3] 
    /*000032dc*/ ADD         R2, R2, #16 
    /*000032e0*/ CMP         R2, #24 
    /*000032e4*/ UXTBEQ      R3, R1 
    /*000032e8*/ LDRBEQ      R2, [R6, R3] 
    /*000032ec*/ ADDEQ       R2, R2, #24 
    /*000032f0*/ B           H264eEncodeSPS_x2ad4
    H264eEncodeSPS_x32f4:
    /*000032f4*/ UBFX        R3, R1, #16, #8 
    /*000032f8*/ LDRB        R2, [R6, R3] 
    /*000032fc*/ ADD         R2, R2, #8 
    /*00003300*/ CMP         R2, #16 
    /*00003304*/ BNE         H264eEncodeSPS_x2dc0
    /*00003308*/ UBFX        R3, R1, #8, #8 
    /*0000330c*/ LDRB        R2, [R6, R3] 
    /*00003310*/ ADD         R2, R2, #16 
    /*00003314*/ CMP         R2, #24 
    /*00003318*/ UXTBEQ      R3, R1 
    /*0000331c*/ LDRBEQ      R2, [R6, R3] 
    /*00003320*/ ADDEQ       R2, R2, #24 
    /*00003324*/ B           H264eEncodeSPS_x2dc0
    H264eEncodeSPS_x3328:
    /*00003328*/ UBFX        R3, R1, #16, #8 
    /*0000332c*/ LDRB        R2, [R6, R3] 
    /*00003330*/ ADD         R2, R2, #8 
    /*00003334*/ CMP         R2, #16 
    /*00003338*/ BNE         H264eEncodeSPS_x2e1c
    /*0000333c*/ UBFX        R3, R1, #8, #8 
    /*00003340*/ LDRB        R2, [R6, R3] 
    /*00003344*/ ADD         R2, R2, #16 
    /*00003348*/ CMP         R2, #24 
    /*0000334c*/ UXTBEQ      R3, R1 
    /*00003350*/ LDRBEQ      R2, [R6, R3] 
    /*00003354*/ ADDEQ       R2, R2, #24 
    /*00003358*/ B           H264eEncodeSPS_x2e1c
    H264eEncodeSPS_x335c:
    /*0000335c*/ UBFX        R3, R1, #16, #8 
    /*00003360*/ LDRB        R2, [R6, R3] 
    /*00003364*/ ADD         R2, R2, #8 
    /*00003368*/ CMP         R2, #16 
    /*0000336c*/ BNE         H264eEncodeSPS_x2df8
    /*00003370*/ UBFX        R3, R1, #8, #8 
    /*00003374*/ LDRB        R2, [R6, R3] 
    /*00003378*/ ADD         R2, R2, #16 
    /*0000337c*/ CMP         R2, #24 
    /*00003380*/ UXTBEQ      R3, R1 
    /*00003384*/ LDRBEQ      R2, [R6, R3] 
    /*00003388*/ ADDEQ       R2, R2, #24 
    /*0000338c*/ B           H264eEncodeSPS_x2df8
    /*00003390*/ ANDEQ       R0, R0, R4, LSL R2 
FUNC_END H264eEncodeSPS


FUNC_BEGIN H264eEncodePPS
    /*00003394*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00003398*/ SUB         SP, SP, #284                @ 0x11c 
    /*0000339c*/ MOV         R5, #0 
    /*000033a0*/ MOV         R4, R2 
    /*000033a4*/ MOV         R6, R0 
    /*000033a8*/ MOV         R2, #32 
    /*000033ac*/ MOV         R7, R1 
    /*000033b0*/ ADD         R0, SP, #12 
    /*000033b4*/ MOV         R1, #1 
    /*000033b8*/ ADD         R3, SP, #24 
    /*000033bc*/ STRH        R5, [SP, #20] 
    /*000033c0*/ STR         R3, [SP, #16] 
    /*000033c4*/ STR         R5, [SP, #12] 
    /*000033c8*/ STR         R5, [SP, #24] 
    /*000033cc*/ BL          0x00000000000033CC          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000033d0*/ MOV         R1, R5 
    /*000033d4*/ MOV         R2, #1 
    /*000033d8*/ ADD         R0, SP, #12 
    /*000033dc*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*000033e0*/ BL          0x00000000000033E0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000033e4*/ MOV         R2, #2 
    /*000033e8*/ MOV         R1, #3 
    /*000033ec*/ ADD         R0, SP, #12 
    /*000033f0*/ BL          0x00000000000033F0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000033f4*/ MOV         R2, #5 
    /*000033f8*/ MOV         R1, #8 
    /*000033fc*/ ADD         R0, SP, #12 
    /*00003400*/ BL          0x0000000000003400          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00003404*/ LDR         R1, [R4] 
    /*00003408*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*0000340c*/ ADD         R1, R1, #1 
    /*00003410*/ LDRB        R2, [R5, R1, LSR #24] 
    /*00003414*/ CMP         R2, #8 
    /*00003418*/ BEQ         H264eEncodePPS_x3788
    H264eEncodePPS_x341c:
    /*0000341c*/ LSL         R2, R2, #1 
    /*00003420*/ ADD         R0, SP, #12 
    /*00003424*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00003428*/ BL          0x0000000000003428          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000342c*/ LDR         R1, [R4, #4] 
    /*00003430*/ ADD         R1, R1, #1 
    /*00003434*/ LDRB        R2, [R5, R1, LSR #24] 
    /*00003438*/ CMP         R2, #8 
    /*0000343c*/ BEQ         H264eEncodePPS_x3754
    H264eEncodePPS_x3440:
    /*00003440*/ LSL         R2, R2, #1 
    /*00003444*/ ADD         R0, SP, #12 
    /*00003448*/ RSB         R2, R2, #63                 @ 0x3f 
    /*0000344c*/ BL          0x000000000000344C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00003450*/ MOV         R2, #1 
    /*00003454*/ LDR         R1, [R4, #8] 
    /*00003458*/ ADD         R0, SP, #12 
    /*0000345c*/ BL          0x000000000000345C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00003460*/ MOV         R2, #1 
    /*00003464*/ LDR         R1, [R4, #12] 
    /*00003468*/ ADD         R0, SP, #12 
    /*0000346c*/ BL          0x000000000000346C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00003470*/ MOV         R2, #1 
    /*00003474*/ MOV         R1, R2 
    /*00003478*/ ADD         R0, SP, #12 
    /*0000347c*/ BL          0x000000000000347C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00003480*/ LDR         R1, [R4, #16] 
    /*00003484*/ ADD         R1, R1, #1 
    /*00003488*/ LDRB        R2, [R5, R1, LSR #24] 
    /*0000348c*/ CMP         R2, #8 
    /*00003490*/ BEQ         H264eEncodePPS_x3720
    H264eEncodePPS_x3494:
    /*00003494*/ LSL         R2, R2, #1 
    /*00003498*/ ADD         R0, SP, #12 
    /*0000349c*/ RSB         R2, R2, #63                 @ 0x3f 
    /*000034a0*/ BL          0x00000000000034A0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000034a4*/ LDR         R1, [R4, #20] 
    /*000034a8*/ ADD         R1, R1, #1 
    /*000034ac*/ LDRB        R2, [R5, R1, LSR #24] 
    /*000034b0*/ CMP         R2, #8 
    /*000034b4*/ BEQ         H264eEncodePPS_x36ec
    H264eEncodePPS_x34b8:
    /*000034b8*/ LSL         R2, R2, #1 
    /*000034bc*/ ADD         R0, SP, #12 
    /*000034c0*/ RSB         R2, R2, #63                 @ 0x3f 
    /*000034c4*/ BL          0x00000000000034C4          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000034c8*/ MOV         R2, #1 
    /*000034cc*/ LDR         R1, [R4, #24] 
    /*000034d0*/ ADD         R0, SP, #12 
    /*000034d4*/ BL          0x00000000000034D4          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000034d8*/ MOV         R2, #2 
    /*000034dc*/ LDR         R1, [R4, #28] 
    /*000034e0*/ ADD         R0, SP, #12 
    /*000034e4*/ BL          0x00000000000034E4          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000034e8*/ LDR         R1, [R4, #32] 
    /*000034ec*/ CMP         R1, #0 
    /*000034f0*/ EOR         R3, R1, R1, ASR #31 
    /*000034f4*/ SUB         R3, R3, R1, ASR #31 
    /*000034f8*/ MOVGT       R1, #0 
    /*000034fc*/ MOVLE       R1, #1 
    /*00003500*/ ORR         R1, R1, R3, LSL #1 
    /*00003504*/ LDRB        R2, [R5, R1, LSR #24] 
    /*00003508*/ CMP         R2, #8 
    /*0000350c*/ BEQ         H264eEncodePPS_x36b8
    H264eEncodePPS_x3510:
    /*00003510*/ LSL         R2, R2, #1 
    /*00003514*/ ADD         R0, SP, #12 
    /*00003518*/ RSB         R2, R2, #63                 @ 0x3f 
    /*0000351c*/ BL          0x000000000000351C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00003520*/ MOV         R2, #1 
    /*00003524*/ MOV         R1, R2 
    /*00003528*/ ADD         R0, SP, #12 
    /*0000352c*/ BL          0x000000000000352C          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00003530*/ LDR         R1, [R4, #48]               @ 0x30 
    /*00003534*/ CMP         R1, #0 
    /*00003538*/ EOR         R3, R1, R1, ASR #31 
    /*0000353c*/ SUB         R3, R3, R1, ASR #31 
    /*00003540*/ MOVGT       R1, #0 
    /*00003544*/ MOVLE       R1, #1 
    /*00003548*/ ORR         R1, R1, R3, LSL #1 
    /*0000354c*/ LDRB        R2, [R5, R1, LSR #24] 
    /*00003550*/ CMP         R2, #8 
    /*00003554*/ BEQ         H264eEncodePPS_x3684
    H264eEncodePPS_x3558:
    /*00003558*/ LSL         R2, R2, #1 
    /*0000355c*/ ADD         R0, SP, #12 
    /*00003560*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00003564*/ SUB         R6, R6, #2 
    /*00003568*/ BL          0x0000000000003568          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000356c*/ MOV         R2, #1 
    /*00003570*/ LDR         R1, [R4, #40]               @ 0x28 
    /*00003574*/ ADD         R0, SP, #12 
    /*00003578*/ BL          0x0000000000003578          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000357c*/ MOV         R2, #1 
    /*00003580*/ LDR         R1, [R4, #44]               @ 0x2c 
    /*00003584*/ ADD         R0, SP, #12 
    /*00003588*/ BL          0x0000000000003588          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000358c*/ MOV         R2, #1 
    /*00003590*/ MOV         R1, #0 
    /*00003594*/ ADD         R0, SP, #12 
    /*00003598*/ BL          0x0000000000003598          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000359c*/ CMP         R6, #1 
    /*000035a0*/ BLS         H264eEncodePPS_x37bc
    H264eEncodePPS_x35a4:
    /*000035a4*/ ADD         R0, SP, #12 
    /*000035a8*/ BL          0x00000000000035A8          @ H264ePutRbspTrailingBits [R_ARM_CALL: .text+0x2678] 
    /*000035ac*/ LDR         R2, [SP, #12] 
    /*000035b0*/ TST         R2, #7 
    /*000035b4*/ BNE         H264eEncodePPS_x3630
    H264eEncodePPS_x35b8:
    /*000035b8*/ CMP         R2, #512                    @ 0x200 
    /*000035bc*/ BHI         H264eEncodePPS_x35dc
    H264eEncodePPS_x35c0:
    /*000035c0*/ LSR         R2, R2, #3 
    /*000035c4*/ MOV         R1, R7 
    /*000035c8*/ MOV         R3, #4 
    /*000035cc*/ LDR         R0, [SP, #16] 
    /*000035d0*/ BL          0x00000000000035D0          @ H264eScanAndAdd03 [R_ARM_CALL: .text+0x12c0] 
    /*000035d4*/ ADD         SP, SP, #284                @ 0x11c 
    /*000035d8*/ POP         {R4, R5, R6, R7, PC} 
    H264eEncodePPS_x35dc:
    /*000035dc*/ STR         R2, [SP, #4] 
    /*000035e0*/ MOVW        R3, #2097                   @ 0x831 
    /*000035e4*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x888] 
    /*000035e8*/ STR         R3, [SP] 
    /*000035ec*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x888] 
    /*000035f0*/ LDR         R3, [PC, #596]              @ 0x000000000000384c 
    /*000035f4*/ MOV         R1, #10 
    /*000035f8*/ MOV         R0, #3 
    /*000035fc*/ BL          0x00000000000035FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003600*/ LDR         R2, [SP, #12] 
    /*00003604*/ CMP         R2, #512                    @ 0x200 
    /*00003608*/ BLS         H264eEncodePPS_x35c0
    /*0000360c*/ MOVW        R2, #2098                   @ 0x832 
    /*00003610*/ MOVW        R3, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x91c] 
    /*00003614*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00003618*/ MOVT        R3, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x91c] 
    /*0000361c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00003620*/ LDR         R1, [PC, #548]              @ 0x000000000000384c 
    /*00003624*/ BL          0x0000000000003624          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00003628*/ LDR         R2, [SP, #12] 
    /*0000362c*/ B           H264eEncodePPS_x35c0
    H264eEncodePPS_x3630:
    /*00003630*/ STR         R2, [SP, #4] 
    /*00003634*/ MOVW        R3, #2089                   @ 0x829 
    /*00003638*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x888] 
    /*0000363c*/ STR         R3, [SP] 
    /*00003640*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x888] 
    /*00003644*/ LDR         R3, [PC, #512]              @ 0x000000000000384c 
    /*00003648*/ MOV         R1, #10 
    /*0000364c*/ MOV         R0, #3 
    /*00003650*/ BL          0x0000000000003650          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003654*/ LDR         R2, [SP, #12] 
    /*00003658*/ TST         R2, #7 
    /*0000365c*/ BEQ         H264eEncodePPS_x35b8
    /*00003660*/ MOVW        R2, #2090                   @ 0x82a 
    /*00003664*/ MOVW        R3, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c4] 
    /*00003668*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*0000366c*/ MOVT        R3, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c4] 
    /*00003670*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00003674*/ LDR         R1, [PC, #464]              @ 0x000000000000384c 
    /*00003678*/ BL          0x0000000000003678          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000367c*/ LDR         R2, [SP, #12] 
    /*00003680*/ B           H264eEncodePPS_x35b8
    H264eEncodePPS_x3684:
    /*00003684*/ UBFX        R3, R1, #16, #8 
    /*00003688*/ LDRB        R2, [R5, R3] 
    /*0000368c*/ ADD         R2, R2, #8 
    /*00003690*/ CMP         R2, #16 
    /*00003694*/ BNE         H264eEncodePPS_x3558
    /*00003698*/ UBFX        R3, R1, #8, #8 
    /*0000369c*/ LDRB        R2, [R5, R3] 
    /*000036a0*/ ADD         R2, R2, #16 
    /*000036a4*/ CMP         R2, #24 
    /*000036a8*/ UXTBEQ      R3, R1 
    /*000036ac*/ LDRBEQ      R2, [R5, R3] 
    /*000036b0*/ ADDEQ       R2, R2, #24 
    /*000036b4*/ B           H264eEncodePPS_x3558
    H264eEncodePPS_x36b8:
    /*000036b8*/ UBFX        R3, R1, #16, #8 
    /*000036bc*/ LDRB        R2, [R5, R3] 
    /*000036c0*/ ADD         R2, R2, #8 
    /*000036c4*/ CMP         R2, #16 
    /*000036c8*/ BNE         H264eEncodePPS_x3510
    /*000036cc*/ UBFX        R3, R1, #8, #8 
    /*000036d0*/ LDRB        R2, [R5, R3] 
    /*000036d4*/ ADD         R2, R2, #16 
    /*000036d8*/ CMP         R2, #24 
    /*000036dc*/ UXTBEQ      R3, R1 
    /*000036e0*/ LDRBEQ      R2, [R5, R3] 
    /*000036e4*/ ADDEQ       R2, R2, #24 
    /*000036e8*/ B           H264eEncodePPS_x3510
    H264eEncodePPS_x36ec:
    /*000036ec*/ UBFX        R3, R1, #16, #8 
    /*000036f0*/ LDRB        R2, [R5, R3] 
    /*000036f4*/ ADD         R2, R2, #8 
    /*000036f8*/ CMP         R2, #16 
    /*000036fc*/ BNE         H264eEncodePPS_x34b8
    /*00003700*/ UBFX        R3, R1, #8, #8 
    /*00003704*/ LDRB        R2, [R5, R3] 
    /*00003708*/ ADD         R2, R2, #16 
    /*0000370c*/ CMP         R2, #24 
    /*00003710*/ UXTBEQ      R3, R1 
    /*00003714*/ LDRBEQ      R2, [R5, R3] 
    /*00003718*/ ADDEQ       R2, R2, #24 
    /*0000371c*/ B           H264eEncodePPS_x34b8
    H264eEncodePPS_x3720:
    /*00003720*/ UBFX        R3, R1, #16, #8 
    /*00003724*/ LDRB        R2, [R5, R3] 
    /*00003728*/ ADD         R2, R2, #8 
    /*0000372c*/ CMP         R2, #16 
    /*00003730*/ BNE         H264eEncodePPS_x3494
    /*00003734*/ UBFX        R3, R1, #8, #8 
    /*00003738*/ LDRB        R2, [R5, R3] 
    /*0000373c*/ ADD         R2, R2, #16 
    /*00003740*/ CMP         R2, #24 
    /*00003744*/ UXTBEQ      R3, R1 
    /*00003748*/ LDRBEQ      R2, [R5, R3] 
    /*0000374c*/ ADDEQ       R2, R2, #24 
    /*00003750*/ B           H264eEncodePPS_x3494
    H264eEncodePPS_x3754:
    /*00003754*/ UBFX        R3, R1, #16, #8 
    /*00003758*/ LDRB        R2, [R5, R3] 
    /*0000375c*/ ADD         R2, R2, #8 
    /*00003760*/ CMP         R2, #16 
    /*00003764*/ BNE         H264eEncodePPS_x3440
    /*00003768*/ UBFX        R3, R1, #8, #8 
    /*0000376c*/ LDRB        R2, [R5, R3] 
    /*00003770*/ ADD         R2, R2, #16 
    /*00003774*/ CMP         R2, #24 
    /*00003778*/ UXTBEQ      R3, R1 
    /*0000377c*/ LDRBEQ      R2, [R5, R3] 
    /*00003780*/ ADDEQ       R2, R2, #24 
    /*00003784*/ B           H264eEncodePPS_x3440
    H264eEncodePPS_x3788:
    /*00003788*/ UBFX        R3, R1, #16, #8 
    /*0000378c*/ LDRB        R2, [R5, R3] 
    /*00003790*/ ADD         R2, R2, #8 
    /*00003794*/ CMP         R2, #16 
    /*00003798*/ BNE         H264eEncodePPS_x341c
    /*0000379c*/ UBFX        R3, R1, #8, #8 
    /*000037a0*/ LDRB        R2, [R5, R3] 
    /*000037a4*/ ADD         R2, R2, #16 
    /*000037a8*/ CMP         R2, #24 
    /*000037ac*/ UXTBEQ      R3, R1 
    /*000037b0*/ LDRBEQ      R2, [R5, R3] 
    /*000037b4*/ ADDEQ       R2, R2, #24 
    /*000037b8*/ B           H264eEncodePPS_x341c
    H264eEncodePPS_x37bc:
    /*000037bc*/ MOV         R2, #1 
    /*000037c0*/ LDR         R1, [R4, #56]               @ 0x38 
    /*000037c4*/ ADD         R0, SP, #12 
    /*000037c8*/ BL          0x00000000000037C8          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000037cc*/ LDR         R1, [R4, #60]               @ 0x3c 
    /*000037d0*/ MOV         R2, #1 
    /*000037d4*/ ADD         R0, SP, #12 
    /*000037d8*/ BL          0x00000000000037D8          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000037dc*/ LDR         R3, [R4, #64]               @ 0x40 
    /*000037e0*/ CMP         R3, #0 
    /*000037e4*/ EOR         R2, R3, R3, ASR #31 
    /*000037e8*/ SUB         R2, R2, R3, ASR #31 
    /*000037ec*/ MOVGT       R1, #0 
    /*000037f0*/ MOVLE       R1, #1 
    /*000037f4*/ ORR         R1, R1, R2, LSL #1 
    /*000037f8*/ LDRB        R2, [R5, R1, LSR #24] 
    /*000037fc*/ CMP         R2, #8 
    /*00003800*/ BEQ         H264eEncodePPS_x3818
    H264eEncodePPS_x3804:
    /*00003804*/ LSL         R2, R2, #1 
    /*00003808*/ ADD         R0, SP, #12 
    /*0000380c*/ RSB         R2, R2, #63                 @ 0x3f 
    /*00003810*/ BL          0x0000000000003810          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00003814*/ B           H264eEncodePPS_x35a4
    H264eEncodePPS_x3818:
    /*00003818*/ UBFX        R3, R1, #16, #8 
    /*0000381c*/ LDRB        R2, [R5, R3] 
    /*00003820*/ ADD         R2, R2, #8 
    /*00003824*/ CMP         R2, #16 
    /*00003828*/ BNE         H264eEncodePPS_x3804
    /*0000382c*/ UBFX        R3, R1, #8, #8 
    /*00003830*/ LDRB        R2, [R5, R3] 
    /*00003834*/ ADD         R2, R2, #16 
    /*00003838*/ CMP         R2, #24 
    /*0000383c*/ UXTBEQ      R3, R1 
    /*00003840*/ LDRBEQ      R2, [R5, R3] 
    /*00003844*/ ADDEQ       R2, R2, #24 
    /*00003848*/ B           H264eEncodePPS_x3804
    /*0000384c*/ ANDEQ       R0, R0, R4, LSR #4 
FUNC_END H264eEncodePPS


FUNC_BEGIN H264eWrRecoverPointSEI
    /*00003850*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00003854*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00003858*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000385c*/ MOV         R9, R0 
    /*00003860*/ LDR         R5, [R3, R0, LSL #2] 
    /*00003864*/ SUB         SP, SP, #108                @ 0x6c 
    /*00003868*/ LDR         R4, [R5, #1060]             @ 0x424 
    /*0000386c*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*00003870*/ LDR         R1, [R4, #164]              @ 0xa4 
    /*00003874*/ LDR         R2, [R4, #172]              @ 0xac 
    /*00003878*/ LDR         R3, [R3] 
    /*0000387c*/ LDR         R1, [R1] 
    /*00003880*/ LDR         R0, [R4, #168]              @ 0xa8 
    /*00003884*/ LDR         R2, [R2] 
    /*00003888*/ CMP         R3, R1 
    /*0000388c*/ LDR         LR, [R0] 
    /*00003890*/ MOVCC       R0, #0 
    /*00003894*/ MOVCS       R0, #1 
    /*00003898*/ CMP         R3, R2 
    /*0000389c*/ MOVHI       R3, #0 
    /*000038a0*/ MOVLS       R3, #1 
    /*000038a4*/ CMP         LR, R2 
    /*000038a8*/ AND         IP, R0, R3 
    /*000038ac*/ MOVCC       R2, #0 
    /*000038b0*/ MOVCS       R2, #1 
    /*000038b4*/ TST         IP, R2 
    /*000038b8*/ BNE         H264eWrRecoverPointSEI_x38e8
    /*000038bc*/ CMP         R1, LR 
    /*000038c0*/ MOVCC       R1, #0 
    /*000038c4*/ MOVCS       R1, #1 
    /*000038c8*/ TST         IP, R1 
    /*000038cc*/ BNE         H264eWrRecoverPointSEI_x38e8
    /*000038d0*/ AND         R0, R0, R2 
    /*000038d4*/ TST         R1, R0 
    /*000038d8*/ BNE         H264eWrRecoverPointSEI_x38e8
    /*000038dc*/ AND         R3, R3, R2 
    /*000038e0*/ TST         R1, R3 
    /*000038e4*/ BEQ         H264eWrRecoverPointSEI_x3ce0
    H264eWrRecoverPointSEI_x38e8:
    /*000038e8*/ ADD         R3, R5, #8192               @ 0x2000 
    /*000038ec*/ ADD         R6, SP, #104                @ 0x68 
    /*000038f0*/ ADD         R7, R5, #384                @ 0x180 
    /*000038f4*/ LDR         R1, [R3, #2176]             @ 0x880 
    /*000038f8*/ LDR         R2, [R3, #1644]             @ 0x66c 
    /*000038fc*/ CMP         R1, #1 
    /*00003900*/ LDR         R1, [R3, #2180]             @ 0x884 
    /*00003904*/ LDR         R8, [R3, #1648]             @ 0x670 
    /*00003908*/ LDREQ       R0, [R5, #976]              @ 0x3d0 
    /*0000390c*/ LDRNE       R0, [R5, #980]              @ 0x3d4 
    /*00003910*/ CMP         R1, #0 
    /*00003914*/ MUL         R8, R8, R2 
    /*00003918*/ ADD         R0, R0, #15 
    /*0000391c*/ MOVEQ       R1, #1 
    /*00003920*/ LSR         R0, R0, #4 
    /*00003924*/ SUB         R0, R0, #1 
    /*00003928*/ ADD         R0, R0, R1 
    /*0000392c*/ BL          0x000000000000392C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00003930*/ MOV         R3, #0 
    /*00003934*/ STR         R3, [R6, #-76]!             @ 0xffffffb4 
    /*00003938*/ MOV         R2, #32 
    /*0000393c*/ STR         R3, [R5, #384]              @ 0x180 
    /*00003940*/ MOV         R1, #1 
    /*00003944*/ STRH        R3, [SP, #36]               @ 0x24 
    /*00003948*/ STR         R7, [SP, #32] 
    /*0000394c*/ SUB         R3, R0, #1 
    /*00003950*/ MOV         R0, R6 
    /*00003954*/ MUL         R8, R3, R8 
    /*00003958*/ BL          0x0000000000003958          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000395c*/ MOV         R2, #8 
    /*00003960*/ MOV         R1, #6 
    /*00003964*/ MOV         R0, R6 
    /*00003968*/ BL          0x0000000000003968          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000396c*/ MOV         R2, #8 
    /*00003970*/ MOV         R1, #6 
    /*00003974*/ MOV         R0, R6 
    /*00003978*/ BL          0x0000000000003978          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000397c*/ MOV         R2, #8 
    /*00003980*/ MOV         R1, #3 
    /*00003984*/ MOV         R0, R6 
    /*00003988*/ BL          0x0000000000003988          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*0000398c*/ ADD         R1, R8, #1 
    /*00003990*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00003994*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00003998*/ LDRB        R2, [R3, R1, LSR #24] 
    /*0000399c*/ CMP         R2, #8 
    /*000039a0*/ BEQ         H264eWrRecoverPointSEI_x3dac
    H264eWrRecoverPointSEI_x39a4:
    /*000039a4*/ LSL         R2, R2, #1 
    /*000039a8*/ MOV         R0, R6 
    /*000039ac*/ RSB         R2, R2, #63                 @ 0x3f 
    /*000039b0*/ BL          0x00000000000039B0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000039b4*/ MOV         R2, #1 
    /*000039b8*/ MOV         R1, R2 
    /*000039bc*/ MOV         R0, R6 
    /*000039c0*/ BL          0x00000000000039C0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000039c4*/ MOV         R2, #1 
    /*000039c8*/ MOV         R1, #0 
    /*000039cc*/ MOV         R0, R6 
    /*000039d0*/ BL          0x00000000000039D0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000039d4*/ MOV         R2, #2 
    /*000039d8*/ MOV         R1, #0 
    /*000039dc*/ MOV         R0, R6 
    /*000039e0*/ BL          0x00000000000039E0          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*000039e4*/ LDR         R3, [SP, #28] 
    /*000039e8*/ TST         R3, #7 
    /*000039ec*/ BNE         H264eWrRecoverPointSEI_x3cac
    H264eWrRecoverPointSEI_x39f0:
    /*000039f0*/ LSR         R3, R3, #3 
    /*000039f4*/ MOV         R0, R6 
    /*000039f8*/ SUB         R3, R3, #7 
    /*000039fc*/ STRB        R3, [R5, #390]              @ 0x186 
    /*00003a00*/ BL          0x0000000000003A00          @ H264ePutRbspTrailingBits [R_ARM_CALL: .text+0x2678] 
    /*00003a04*/ LDR         R6, [SP, #28] 
    /*00003a08*/ LDR         R2, [R5, #1196]             @ 0x4ac 
    /*00003a0c*/ STR         R9, [SP, #52]               @ 0x34 
    /*00003a10*/ LSR         R6, R6, #3 
    /*00003a14*/ STR         R6, [R5, #716]              @ 0x2cc 
    /*00003a18*/ LDR         R1, [R4, #164]              @ 0xa4 
    /*00003a1c*/ ANDS        R3, R6, #63                 @ 0x3f 
    /*00003a20*/ LDR         IP, [R4, #168]              @ 0xa8 
    /*00003a24*/ ORRNE       R8, R6, #63                 @ 0x3f 
    /*00003a28*/ ADDNE       R8, R8, #1 
    /*00003a2c*/ MOVEQ       R8, R6 
    /*00003a30*/ LDR         R1, [R1] 
    /*00003a34*/ SUBNE       R3, R8, R6 
    /*00003a38*/ LDR         IP, [IP] 
    /*00003a3c*/ ADD         R0, R8, #64                 @ 0x40 
    /*00003a40*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00003a44*/ LDRD        R2, [R2, #240]              @ 0xf0 
    /*00003a48*/ CMP         R1, IP 
    /*00003a4c*/ STR         R0, [SP, #40]               @ 0x28 
    /*00003a50*/ MOV         R0, #6 
    /*00003a54*/ STRB        R0, [SP, #48]               @ 0x30 
    /*00003a58*/ STRD        R2, [SP, #56]               @ 0x38 
    /*00003a5c*/ MOV         R2, #0 
    /*00003a60*/ LDRLS       R3, [R4, #12] 
    /*00003a64*/ SUBHI       R3, R1, IP 
    /*00003a68*/ STRB        R2, [SP, #49]               @ 0x31 
    /*00003a6c*/ STRB        R2, [SP, #50]               @ 0x32 
    /*00003a70*/ SUBLS       R3, R1, R3 
    /*00003a74*/ STRB        R2, [SP, #51]               @ 0x33 
    /*00003a78*/ LDRLS       R2, [R4, #8] 
    /*00003a7c*/ LDRHI       R2, [R4, #12] 
    /*00003a80*/ ADDLS       R3, R3, R2 
    /*00003a84*/ SUBLS       R3, R3, IP 
    /*00003a88*/ SUBHI       R3, R3, R2 
    /*00003a8c*/ CMP         R3, #63                     @ 0x3f 
    /*00003a90*/ BLS         H264eWrRecoverPointSEI_x3e10
    /*00003a94*/ LDR         R3, [R4, #8] 
    /*00003a98*/ ADD         R9, IP, #64                 @ 0x40 
    /*00003a9c*/ CMP         R9, R3 
    /*00003aa0*/ BCS         H264eWrRecoverPointSEI_x3c2c
    /*00003aa4*/ LDR         R2, [R4, #176]              @ 0xb0 
    /*00003aa8*/ MVN         R3, #0 
    /*00003aac*/ MOV         FP, #0 
    /*00003ab0*/ MOV         SL, #7 
    /*00003ab4*/ ADD         IP, R2, IP 
    /*00003ab8*/ ADD         R2, IP, #64                 @ 0x40 
    /*00003abc*/ STR         R2, [SP, #20] 
    H264eWrRecoverPointSEI_x3ac0:
    /*00003ac0*/ SUB         IP, IP, #8 
    /*00003ac4*/ ADD         LR, SP, #40                 @ 0x28 
    /*00003ac8*/ MOV         R2, SL 
    H264eWrRecoverPointSEI_x3acc:
    /*00003acc*/ SUB         R2, R2, #1 
    /*00003ad0*/ LDRD        R0, [LR], #8 
    /*00003ad4*/ CMN         R2, #1 
    /*00003ad8*/ STRD        R0, [IP, #8]! 
    /*00003adc*/ BNE         H264eWrRecoverPointSEI_x3acc
    /*00003ae0*/ ADD         SL, SL, #1 
    /*00003ae4*/ ADD         R2, SP, #40                 @ 0x28 
    /*00003ae8*/ ADD         SL, R2, SL, LSL #3 
    H264eWrRecoverPointSEI_x3aec:
    /*00003aec*/ CMP         FP, #0 
    /*00003af0*/ LDRNE       R2, [SP, #20] 
    /*00003af4*/ SUBNE       R2, R2, #8 
    /*00003af8*/ BEQ         H264eWrRecoverPointSEI_x3b10
    H264eWrRecoverPointSEI_x3afc:
    /*00003afc*/ SUB         R3, R3, #1 
    /*00003b00*/ LDRD        R0, [SL], #8 
    /*00003b04*/ CMN         R3, #1 
    /*00003b08*/ STRD        R0, [R2, #8]! 
    /*00003b0c*/ BNE         H264eWrRecoverPointSEI_x3afc
    H264eWrRecoverPointSEI_x3b10:
    /*00003b10*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00003b14*/ STR         R9, [R3] 
    H264eWrRecoverPointSEI_x3b18:
    /*00003b18*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*00003b1c*/ ANDS        FP, R8, #3 
    /*00003b20*/ LDR         R2, [R4, #168]              @ 0xa8 
    /*00003b24*/ LDR         R3, [R3] 
    /*00003b28*/ LDR         LR, [R2] 
    /*00003b2c*/ BNE         H264eWrRecoverPointSEI_x3de0
    /*00003b30*/ CMP         R3, LR 
    /*00003b34*/ SUBHI       R3, R3, LR 
    /*00003b38*/ LDRLS       R0, [R4, #12] 
    /*00003b3c*/ LDRLS       R1, [R4, #8] 
    /*00003b40*/ SUBLS       R3, R3, R0 
    /*00003b44*/ LDRHI       R1, [R4, #12] 
    /*00003b48*/ ADDLS       R3, R3, R1 
    /*00003b4c*/ SUBLS       R3, R3, LR 
    /*00003b50*/ SUBHI       R3, R3, R1 
    /*00003b54*/ CMP         R8, R3 
    /*00003b58*/ BHI         H264eWrRecoverPointSEI_x3df8
    /*00003b5c*/ LDR         R3, [R4, #8] 
    /*00003b60*/ ADD         R9, R8, LR 
    /*00003b64*/ CMP         R9, R3 
    /*00003b68*/ BCC         H264eWrRecoverPointSEI_x3c64
    /*00003b6c*/ SUB         R3, R3, LR 
    /*00003b70*/ LDR         SL, [R4, #176]              @ 0xb0 
    /*00003b74*/ SUB         R9, R8, R3 
    /*00003b78*/ LSR         R3, R3, #3 
    /*00003b7c*/ ADD         LR, SL, LR 
    /*00003b80*/ CMP         R3, #0 
    /*00003b84*/ LSR         FP, R9, #3 
    /*00003b88*/ SUB         R3, R3, #1 
    /*00003b8c*/ SUBEQ       R2, FP, #1 
    /*00003b90*/ MOVEQ       R3, R7 
    /*00003b94*/ BEQ         H264eWrRecoverPointSEI_x3bc4
    /*00003b98*/ SUB         R2, FP, #1 
    H264eWrRecoverPointSEI_x3b9c:
    /*00003b9c*/ SUB         LR, LR, #8 
    /*00003ba0*/ MOV         IP, R3 
    /*00003ba4*/ MOV         R8, R7 
    H264eWrRecoverPointSEI_x3ba8:
    /*00003ba8*/ SUB         IP, IP, #1 
    /*00003bac*/ LDRD        R0, [R8], #8 
    /*00003bb0*/ CMN         IP, #1 
    /*00003bb4*/ STRD        R0, [LR, #8]! 
    /*00003bb8*/ BNE         H264eWrRecoverPointSEI_x3ba8
    /*00003bbc*/ ADD         R3, R3, #1 
    /*00003bc0*/ ADD         R3, R7, R3, LSL #3 
    H264eWrRecoverPointSEI_x3bc4:
    /*00003bc4*/ CMP         FP, #0 
    /*00003bc8*/ BEQ         H264eWrRecoverPointSEI_x3be4
    /*00003bcc*/ SUB         SL, SL, #8 
    H264eWrRecoverPointSEI_x3bd0:
    /*00003bd0*/ SUB         R2, R2, #1 
    /*00003bd4*/ LDRD        R0, [R3], #8 
    /*00003bd8*/ CMN         R2, #1 
    /*00003bdc*/ STRD        R0, [SL, #8]! 
    /*00003be0*/ BNE         H264eWrRecoverPointSEI_x3bd0
    H264eWrRecoverPointSEI_x3be4:
    /*00003be4*/ LDR         R2, [R4, #168]              @ 0xa8 
    H264eWrRecoverPointSEI_x3be8:
    /*00003be8*/ STR         R9, [R2] 
    H264eWrRecoverPointSEI_x3bec:
    /*00003bec*/ LDR         R0, [R5, #720]              @ 0x2d0 
    /*00003bf0*/ ADD         R3, R6, R0 
    /*00003bf4*/ CMP         R3, #384                    @ 0x180 
    /*00003bf8*/ BLS         H264eWrRecoverPointSEI_x3c88
    /*00003bfc*/ STR         R3, [SP, #8] 
    /*00003c00*/ MOVW        R2, #2654                   @ 0xa5e 
    /*00003c04*/ MOV         R3, #384                    @ 0x180 
    /*00003c08*/ MOV         R1, #10 
    /*00003c0c*/ STM         SP, {R2, R3} 
    /*00003c10*/ MOV         R0, #3 
    /*00003c14*/ LDR         R3, [PC, #524]              @ 0x0000000000003e28 
    /*00003c18*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x94c] 
    /*00003c1c*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x94c] 
    /*00003c20*/ BL          0x0000000000003C20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003c24*/ ADD         SP, SP, #108                @ 0x6c 
    /*00003c28*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eWrRecoverPointSEI_x3c2c:
    /*00003c2c*/ SUB         SL, R3, IP 
    /*00003c30*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*00003c34*/ RSB         R9, SL, #64                 @ 0x40 
    /*00003c38*/ LSR         SL, SL, #3 
    /*00003c3c*/ ADD         IP, R3, IP 
    /*00003c40*/ CMP         SL, #0 
    /*00003c44*/ LSR         FP, R9, #3 
    /*00003c48*/ STR         R3, [SP, #20] 
    /*00003c4c*/ SUB         SL, SL, #1 
    /*00003c50*/ SUBEQ       R3, FP, #1 
    /*00003c54*/ ADDEQ       SL, SP, #40                 @ 0x28 
    /*00003c58*/ SUBNE       R3, FP, #1 
    /*00003c5c*/ BNE         H264eWrRecoverPointSEI_x3ac0
    /*00003c60*/ B           H264eWrRecoverPointSEI_x3aec
    H264eWrRecoverPointSEI_x3c64:
    /*00003c64*/ LSR         R3, R8, #3 
    /*00003c68*/ LDR         R1, [R4, #176]              @ 0xb0 
    /*00003c6c*/ CMP         R3, #0 
    /*00003c70*/ SUB         R3, R3, #1 
    /*00003c74*/ ADD         LR, R1, LR 
    /*00003c78*/ ADD         SL, LR, R8 
    /*00003c7c*/ BEQ         H264eWrRecoverPointSEI_x3be8
    /*00003c80*/ MVN         R2, #0 
    /*00003c84*/ B           H264eWrRecoverPointSEI_x3b9c
    H264eWrRecoverPointSEI_x3c88:
    /*00003c88*/ MOV         R2, R6 
    /*00003c8c*/ MOV         R1, R7 
    /*00003c90*/ ADD         R0, R5, R0 
    /*00003c94*/ BL          0x0000000000003C94          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00003c98*/ LDR         R3, [R5, #720]              @ 0x2d0 
    /*00003c9c*/ ADD         R6, R3, R6 
    /*00003ca0*/ STR         R6, [R5, #720]              @ 0x2d0 
    /*00003ca4*/ ADD         SP, SP, #108                @ 0x6c 
    /*00003ca8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eWrRecoverPointSEI_x3cac:
    /*00003cac*/ MOV         R2, #1 
    /*00003cb0*/ MOV         R0, R6 
    /*00003cb4*/ MOV         R1, R2 
    /*00003cb8*/ BL          0x0000000000003CB8          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00003cbc*/ LDR         R3, [SP, #28] 
    /*00003cc0*/ ANDS        R2, R3, #7 
    /*00003cc4*/ BEQ         H264eWrRecoverPointSEI_x39f0
    /*00003cc8*/ RSB         R2, R2, #8 
    /*00003ccc*/ MOV         R1, #0 
    /*00003cd0*/ MOV         R0, R6 
    /*00003cd4*/ BL          0x0000000000003CD4          @ BS_PUT_BITS [R_ARM_CALL: .text+0x12650] 
    /*00003cd8*/ LDR         R3, [SP, #28] 
    /*00003cdc*/ B           H264eWrRecoverPointSEI_x39f0
    H264eWrRecoverPointSEI_x3ce0:
    /*00003ce0*/ LDR         IP, [R4, #64]               @ 0x40 
    /*00003ce4*/ MOVW        R2, #2559                   @ 0x9ff 
    /*00003ce8*/ LDR         R3, [R4, #128]              @ 0x80 
    /*00003cec*/ MOVW        R0, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x714] 
    /*00003cf0*/ LDR         R1, [PC, #304]              @ 0x0000000000003e28 
    /*00003cf4*/ MOVT        R0, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x714] 
    /*00003cf8*/ STR         IP, [SP, #8] 
    /*00003cfc*/ LDR         IP, [R4, #32] 
    /*00003d00*/ STR         IP, [SP, #4] 
    /*00003d04*/ LDR         IP, [R4, #96]               @ 0x60 
    /*00003d08*/ STR         IP, [SP] 
    /*00003d0c*/ BL          0x0000000000003D0C          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00003d10*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*00003d14*/ LDR         R1, [R4, #164]              @ 0xa4 
    /*00003d18*/ LDR         R2, [R4, #172]              @ 0xac 
    /*00003d1c*/ LDR         R3, [R3] 
    /*00003d20*/ LDR         R1, [R1] 
    /*00003d24*/ LDR         R0, [R4, #168]              @ 0xa8 
    /*00003d28*/ LDR         R2, [R2] 
    /*00003d2c*/ CMP         R3, R1 
    /*00003d30*/ LDR         LR, [R0] 
    /*00003d34*/ MOVCC       R0, #0 
    /*00003d38*/ MOVCS       R0, #1 
    /*00003d3c*/ CMP         R3, R2 
    /*00003d40*/ MOVHI       R3, #0 
    /*00003d44*/ MOVLS       R3, #1 
    /*00003d48*/ CMP         LR, R2 
    /*00003d4c*/ AND         IP, R0, R3 
    /*00003d50*/ MOVCC       R2, #0 
    /*00003d54*/ MOVCS       R2, #1 
    /*00003d58*/ TST         IP, R2 
    /*00003d5c*/ BNE         H264eWrRecoverPointSEI_x38e8
    /*00003d60*/ CMP         R1, LR 
    /*00003d64*/ MOVCC       R1, #0 
    /*00003d68*/ MOVCS       R1, #1 
    /*00003d6c*/ TST         IP, R1 
    /*00003d70*/ BNE         H264eWrRecoverPointSEI_x38e8
    /*00003d74*/ AND         R0, R0, R2 
    /*00003d78*/ TST         R1, R0 
    /*00003d7c*/ BNE         H264eWrRecoverPointSEI_x38e8
    /*00003d80*/ AND         R3, R3, R2 
    /*00003d84*/ TST         R1, R3 
    /*00003d88*/ BNE         H264eWrRecoverPointSEI_x38e8
    /*00003d8c*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x76c] 
    /*00003d90*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00003d94*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x76c] 
    /*00003d98*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00003d9c*/ MOVW        R2, #2568                   @ 0xa08 
    /*00003da0*/ LDR         R1, [PC, #128]              @ 0x0000000000003e28 
    /*00003da4*/ BL          0x0000000000003DA4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00003da8*/ B           H264eWrRecoverPointSEI_x38e8
    H264eWrRecoverPointSEI_x3dac:
    /*00003dac*/ UBFX        R2, R1, #16, #8 
    /*00003db0*/ LDRB        R2, [R3, R2] 
    /*00003db4*/ ADD         R2, R2, #8 
    /*00003db8*/ CMP         R2, #16 
    /*00003dbc*/ BNE         H264eWrRecoverPointSEI_x39a4
    /*00003dc0*/ UBFX        R2, R1, #8, #8 
    /*00003dc4*/ LDRB        R2, [R3, R2] 
    /*00003dc8*/ ADD         R2, R2, #16 
    /*00003dcc*/ CMP         R2, #24 
    /*00003dd0*/ UXTBEQ      R2, R1 
    /*00003dd4*/ LDRBEQ      R2, [R3, R2] 
    /*00003dd8*/ ADDEQ       R2, R2, #24 
    /*00003ddc*/ B           H264eWrRecoverPointSEI_x39a4
    H264eWrRecoverPointSEI_x3de0:
    /*00003de0*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ec] 
    /*00003de4*/ MOV         R1, #18 
    /*00003de8*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ec] 
    /*00003dec*/ MOV         R0, #3 
    /*00003df0*/ BL          0x0000000000003DF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003df4*/ B           H264eWrRecoverPointSEI_x3bec
    H264eWrRecoverPointSEI_x3df8:
    /*00003df8*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*00003dfc*/ MOV         R1, #18 
    /*00003e00*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*00003e04*/ MOV         R0, #4 
    /*00003e08*/ BL          0x0000000000003E08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003e0c*/ B           H264eWrRecoverPointSEI_x3bec
    H264eWrRecoverPointSEI_x3e10:
    /*00003e10*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*00003e14*/ MOV         R1, #18 
    /*00003e18*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*00003e1c*/ MOV         R0, #4 
    /*00003e20*/ BL          0x0000000000003E20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003e24*/ B           H264eWrRecoverPointSEI_x3b18
    /*00003e28*/ ANDEQ       R0, R0, R4, LSR R2 
FUNC_END H264eWrRecoverPointSEI


FUNC_BEGIN H264eDoublePps
    /*00003e2c*/ PUSH        {R4, LR} 
    /*00003e30*/ SUBS        R4, R0, #0 
    /*00003e34*/ BEQ         H264eDoublePps_x3ea8
    H264eDoublePps_x3e38:
    /*00003e38*/ ADD         R3, R4, #12288              @ 0x3000 
    /*00003e3c*/ ADD         R4, R4, #8192               @ 0x2000 
    /*00003e40*/ LDR         R3, [R3, #2084]             @ 0x824 
    /*00003e44*/ CMP         R3, #4 
    /*00003e48*/ LDR         R3, [R4, #2228]             @ 0x8b4 
    /*00003e4c*/ BEQ         H264eDoublePps_x3e74
    /*00003e50*/ CMP         R3, #0 
    /*00003e54*/ BNE         H264eDoublePps_x3e6c
    /*00003e58*/ LDR         R0, [R4, #1584]             @ 0x630 
    /*00003e5c*/ LDR         R3, [R4, #1588]             @ 0x634 
    /*00003e60*/ SUBS        R0, R0, R3 
    /*00003e64*/ MOVNE       R0, #1 
    /*00003e68*/ POP         {R4, PC} 
    H264eDoublePps_x3e6c:
    /*00003e6c*/ MOV         R0, #0 
    /*00003e70*/ POP         {R4, PC} 
    H264eDoublePps_x3e74:
    /*00003e74*/ CMP         R3, #0 
    /*00003e78*/ BNE         H264eDoublePps_x3e94
    /*00003e7c*/ LDR         R3, [R4, #1584]             @ 0x630 
    /*00003e80*/ LDR         R2, [R4, #1588]             @ 0x634 
    /*00003e84*/ CMP         R3, R2 
    /*00003e88*/ BEQ         H264eDoublePps_x3ec8
    /*00003e8c*/ MOV         R0, #1 
    /*00003e90*/ POP         {R4, PC} 
    H264eDoublePps_x3e94:
    /*00003e94*/ LDR         R0, [R4, #1588]             @ 0x634 
    /*00003e98*/ LDR         R3, [R4, #1592]             @ 0x638 
    /*00003e9c*/ SUBS        R0, R0, R3 
    /*00003ea0*/ MOVNE       R0, #1 
    /*00003ea4*/ POP         {R4, PC} 
    H264eDoublePps_x3ea8:
    /*00003ea8*/ MOVW        R3, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x98c] 
    /*00003eac*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00003eb0*/ MOVT        R3, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x98c] 
    /*00003eb4*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00003eb8*/ MOVW        R2, #2793                   @ 0xae9 
    /*00003ebc*/ LDR         R1, [PC, #20]               @ 0x0000000000003ed8 
    /*00003ec0*/ BL          0x0000000000003EC0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00003ec4*/ B           H264eDoublePps_x3e38
    H264eDoublePps_x3ec8:
    /*00003ec8*/ LDR         R0, [R4, #1592]             @ 0x638 
    /*00003ecc*/ SUBS        R0, R0, R3 
    /*00003ed0*/ MOVNE       R0, #1 
    /*00003ed4*/ POP         {R4, PC} 
    /*00003ed8*/ ANDEQ       R0, R0, IP, ASR #4 
FUNC_END H264eDoublePps


FUNC_BEGIN H264eWrStrBufSPSPPS
    /*00003edc*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00003ee0*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00003ee4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00003ee8*/ SUB         SP, SP, #100                @ 0x64 
    /*00003eec*/ LDR         R5, [R3, R0, LSL #2] 
    /*00003ef0*/ STR         R0, [SP, #24] 
    /*00003ef4*/ LDR         R4, [R5, #1060]             @ 0x424 
    /*00003ef8*/ LDR         R2, [R4, #160]              @ 0xa0 
    /*00003efc*/ LDR         R0, [R4, #164]              @ 0xa4 
    /*00003f00*/ LDR         R1, [R4, #172]              @ 0xac 
    /*00003f04*/ LDR         R2, [R2] 
    /*00003f08*/ LDR         R0, [R0] 
    /*00003f0c*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00003f10*/ LDR         R1, [R1] 
    /*00003f14*/ CMP         R2, R0 
    /*00003f18*/ LDR         R7, [R3] 
    /*00003f1c*/ MOVCC       R3, #0 
    /*00003f20*/ MOVCS       R3, #1 
    /*00003f24*/ CMP         R2, R1 
    /*00003f28*/ MOVHI       R2, #0 
    /*00003f2c*/ MOVLS       R2, #1 
    /*00003f30*/ CMP         R7, R1 
    /*00003f34*/ AND         IP, R3, R2 
    /*00003f38*/ MOVCC       R1, #0 
    /*00003f3c*/ MOVCS       R1, #1 
    /*00003f40*/ TST         IP, R1 
    /*00003f44*/ BNE         H264eWrStrBufSPSPPS_x3f74
    /*00003f48*/ CMP         R0, R7 
    /*00003f4c*/ MOVCC       LR, #0 
    /*00003f50*/ MOVCS       LR, #1 
    /*00003f54*/ TST         IP, LR 
    /*00003f58*/ BNE         H264eWrStrBufSPSPPS_x3f74
    /*00003f5c*/ AND         R3, R3, R1 
    /*00003f60*/ TST         LR, R3 
    /*00003f64*/ BNE         H264eWrStrBufSPSPPS_x3f74
    /*00003f68*/ AND         R2, R2, R1 
    /*00003f6c*/ TST         LR, R2 
    /*00003f70*/ BEQ         H264eWrStrBufSPSPPS_x456c
    H264eWrStrBufSPSPPS_x3f74:
    /*00003f74*/ LDR         R2, [R5, #704]              @ 0x2c0 
    /*00003f78*/ LDR         R3, [R5, #712]              @ 0x2c8 
    /*00003f7c*/ LDR         R8, [R5, #708]              @ 0x2c4 
    /*00003f80*/ TST         R2, #63                     @ 0x3f 
    /*00003f84*/ ORRNE       R6, R2, #63                 @ 0x3f 
    /*00003f88*/ STR         R3, [SP, #20] 
    /*00003f8c*/ ADDNE       R6, R6, #1 
    /*00003f90*/ LDR         R3, [SP, #20] 
    /*00003f94*/ MOVEQ       R6, R2 
    /*00003f98*/ TST         R8, #63                     @ 0x3f 
    /*00003f9c*/ ORRNE       R8, R8, #63                 @ 0x3f 
    /*00003fa0*/ ADDNE       R8, R8, #1 
    /*00003fa4*/ TST         R3, #63                     @ 0x3f 
    /*00003fa8*/ ORRNE       R3, R3, #63                 @ 0x3f 
    /*00003fac*/ ADDNE       R3, R3, #1 
    /*00003fb0*/ STRNE       R3, [SP, #20] 
    /*00003fb4*/ CMP         R7, R0 
    /*00003fb8*/ SUBCC       R3, R0, R7 
    /*00003fbc*/ LDRCS       R3, [R4, #8] 
    /*00003fc0*/ LDRCS       R1, [R4, #12] 
    /*00003fc4*/ LDRCC       R1, [R4, #12] 
    /*00003fc8*/ SUBCS       R3, R3, R1 
    /*00003fcc*/ ADDCS       R3, R3, R0 
    /*00003fd0*/ SUBCC       R3, R3, R1 
    /*00003fd4*/ LDR         R0, [SP, #20] 
    /*00003fd8*/ ADD         R1, R6, #256                @ 0x100 
    /*00003fdc*/ ADD         R1, R1, R8 
    /*00003fe0*/ SUBCS       R3, R3, R7 
    /*00003fe4*/ ADD         R1, R1, R0 
    /*00003fe8*/ CMP         R1, R3 
    /*00003fec*/ BHI         H264eWrStrBufSPSPPS_x4850
    /*00003ff0*/ LDR         R0, [R5, #1196]             @ 0x4ac 
    /*00003ff4*/ CMP         R3, #63                     @ 0x3f 
    /*00003ff8*/ LDR         R3, [SP, #24] 
    /*00003ffc*/ SUB         R2, R6, R2 
    /*00004000*/ STR         R2, [SP, #36]               @ 0x24 
    /*00004004*/ MOV         FP, #0 
    /*00004008*/ ADD         R1, R6, #64                 @ 0x40 
    /*0000400c*/ MOV         IP, #7 
    /*00004010*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00004014*/ LDRD        R2, [R0, #240]              @ 0xf0 
    /*00004018*/ STR         R1, [SP, #32] 
    /*0000401c*/ STRB        IP, [SP, #40]               @ 0x28 
    /*00004020*/ STRD        R2, [SP, #48]               @ 0x30 
    /*00004024*/ STRB        FP, [SP, #41]               @ 0x29 
    /*00004028*/ STRB        FP, [SP, #42]               @ 0x2a 
    /*0000402c*/ STRB        FP, [SP, #43]               @ 0x2b 
    /*00004030*/ BLS         H264eWrStrBufSPSPPS_x48e4
    /*00004034*/ LDR         R3, [R4, #8] 
    /*00004038*/ ADD         LR, R7, #64                 @ 0x40 
    /*0000403c*/ CMP         LR, R3 
    /*00004040*/ BCS         H264eWrStrBufSPSPPS_x43fc
    /*00004044*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*00004048*/ MVN         R1, #0 
    /*0000404c*/ ADD         R7, R3, R7 
    /*00004050*/ ADD         R3, R7, #64                 @ 0x40 
    /*00004054*/ STR         R3, [SP, #28] 
    H264eWrStrBufSPSPPS_x4058:
    /*00004058*/ ADD         SL, SP, #32 
    /*0000405c*/ SUB         R7, R7, #8 
    /*00004060*/ MOV         R0, IP 
    /*00004064*/ MOV         R9, SL 
    H264eWrStrBufSPSPPS_x4068:
    /*00004068*/ SUB         R0, R0, #1 
    /*0000406c*/ LDRD        R2, [R9], #8 
    /*00004070*/ CMN         R0, #1 
    /*00004074*/ STRD        R2, [R7, #8]! 
    /*00004078*/ BNE         H264eWrStrBufSPSPPS_x4068
    /*0000407c*/ ADD         IP, IP, #1 
    /*00004080*/ ADD         SL, SL, IP, LSL #3 
    H264eWrStrBufSPSPPS_x4084:
    /*00004084*/ CMP         FP, #0 
    /*00004088*/ LDRNE       R3, [SP, #28] 
    /*0000408c*/ SUBNE       R0, R3, #8 
    /*00004090*/ BEQ         H264eWrStrBufSPSPPS_x40a8
    H264eWrStrBufSPSPPS_x4094:
    /*00004094*/ SUB         R1, R1, #1 
    /*00004098*/ LDRD        R2, [SL], #8 
    /*0000409c*/ CMN         R1, #1 
    /*000040a0*/ STRD        R2, [R0, #8]! 
    /*000040a4*/ BNE         H264eWrStrBufSPSPPS_x4094
    H264eWrStrBufSPSPPS_x40a8:
    /*000040a8*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*000040ac*/ STR         LR, [R3] 
    H264eWrStrBufSPSPPS_x40b0:
    /*000040b0*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*000040b4*/ ANDS        SL, R6, #3 
    /*000040b8*/ LDR         R2, [R4, #168]              @ 0xa8 
    /*000040bc*/ LDR         R3, [R3] 
    /*000040c0*/ LDR         LR, [R2] 
    /*000040c4*/ BNE         H264eWrStrBufSPSPPS_x489c
    /*000040c8*/ CMP         R3, LR 
    /*000040cc*/ SUBHI       R3, R3, LR 
    /*000040d0*/ LDRLS       R0, [R4, #12] 
    /*000040d4*/ LDRLS       R1, [R4, #8] 
    /*000040d8*/ SUBLS       R3, R3, R0 
    /*000040dc*/ LDRHI       R1, [R4, #12] 
    /*000040e0*/ ADDLS       R3, R3, R1 
    /*000040e4*/ SUBLS       R3, R3, LR 
    /*000040e8*/ SUBHI       R3, R3, R1 
    /*000040ec*/ CMP         R6, R3 
    /*000040f0*/ BHI         H264eWrStrBufSPSPPS_x48cc
    /*000040f4*/ LDR         R3, [R4, #8] 
    /*000040f8*/ ADD         R7, R6, LR 
    /*000040fc*/ CMP         R7, R3 
    /*00004100*/ BCC         H264eWrStrBufSPSPPS_x4450
    /*00004104*/ SUB         R3, R3, LR 
    /*00004108*/ LDR         R9, [R4, #176]              @ 0xb0 
    /*0000410c*/ SUB         R7, R6, R3 
    /*00004110*/ LSR         R3, R3, #3 
    /*00004114*/ ADD         LR, R9, LR 
    /*00004118*/ CMP         R3, #0 
    /*0000411c*/ LSR         SL, R7, #3 
    /*00004120*/ SUB         R3, R3, #1 
    /*00004124*/ SUBEQ       R2, SL, #1 
    /*00004128*/ MOVEQ       R3, R5 
    /*0000412c*/ BEQ         H264eWrStrBufSPSPPS_x415c
    /*00004130*/ SUB         R2, SL, #1 
    H264eWrStrBufSPSPPS_x4134:
    /*00004134*/ SUB         LR, LR, #8 
    /*00004138*/ MOV         IP, R3 
    /*0000413c*/ MOV         R6, R5 
    H264eWrStrBufSPSPPS_x4140:
    /*00004140*/ SUB         IP, IP, #1 
    /*00004144*/ LDRD        R0, [R6], #8 
    /*00004148*/ CMN         IP, #1 
    /*0000414c*/ STRD        R0, [LR, #8]! 
    /*00004150*/ BNE         H264eWrStrBufSPSPPS_x4140
    /*00004154*/ ADD         R3, R3, #1 
    /*00004158*/ ADD         R3, R5, R3, LSL #3 
    H264eWrStrBufSPSPPS_x415c:
    /*0000415c*/ CMP         SL, #0 
    /*00004160*/ BEQ         H264eWrStrBufSPSPPS_x417c
    /*00004164*/ SUB         R9, R9, #8 
    H264eWrStrBufSPSPPS_x4168:
    /*00004168*/ SUB         R2, R2, #1 
    /*0000416c*/ LDRD        R0, [R3], #8 
    /*00004170*/ CMN         R2, #1 
    /*00004174*/ STRD        R0, [R9, #8]! 
    /*00004178*/ BNE         H264eWrStrBufSPSPPS_x4168
    H264eWrStrBufSPSPPS_x417c:
    /*0000417c*/ LDR         R2, [R4, #168]              @ 0xa8 
    H264eWrStrBufSPSPPS_x4180:
    /*00004180*/ STR         R7, [R2] 
    H264eWrStrBufSPSPPS_x4184:
    /*00004184*/ LDR         R2, [R4, #168]              @ 0xa8 
    /*00004188*/ ADD         IP, R8, #64                 @ 0x40 
    /*0000418c*/ LDR         R3, [R5, #1196]             @ 0x4ac 
    /*00004190*/ LDR         R1, [R4, #164]              @ 0xa4 
    /*00004194*/ LDR         R0, [R2] 
    /*00004198*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*0000419c*/ LDR         R1, [R1] 
    /*000041a0*/ LDR         LR, [SP, #24] 
    /*000041a4*/ CMP         R1, R0 
    /*000041a8*/ STRD        R2, [SP, #48]               @ 0x30 
    /*000041ac*/ LDR         R2, [R5, #708]              @ 0x2c4 
    /*000041b0*/ MOV         R3, #0 
    /*000041b4*/ STRB        R3, [SP, #41]               @ 0x29 
    /*000041b8*/ SUBHI       R1, R1, R0 
    /*000041bc*/ STRB        R3, [SP, #42]               @ 0x2a 
    /*000041c0*/ SUB         R2, R8, R2 
    /*000041c4*/ STRB        R3, [SP, #43]               @ 0x2b 
    /*000041c8*/ LDR         R3, [R4, #12] 
    /*000041cc*/ STR         R2, [SP, #36]               @ 0x24 
    /*000041d0*/ LDRLS       R2, [R4, #8] 
    /*000041d4*/ SUBLS       R1, R1, R3 
    /*000041d8*/ SUBHI       R1, R1, R3 
    /*000041dc*/ STR         IP, [SP, #32] 
    /*000041e0*/ ADDLS       R1, R1, R2 
    /*000041e4*/ MOV         IP, #8 
    /*000041e8*/ SUBLS       R1, R1, R0 
    /*000041ec*/ STR         LR, [SP, #44]               @ 0x2c 
    /*000041f0*/ CMP         R1, #63                     @ 0x3f 
    /*000041f4*/ STRB        IP, [SP, #40]               @ 0x28 
    /*000041f8*/ BLS         H264eWrStrBufSPSPPS_x48fc
    /*000041fc*/ LDR         R3, [R4, #8] 
    /*00004200*/ ADD         R9, R0, #64                 @ 0x40 
    /*00004204*/ CMP         R9, R3 
    /*00004208*/ BCC         H264eWrStrBufSPSPPS_x4434
    /*0000420c*/ SUB         R2, R3, R0 
    /*00004210*/ LDR         IP, [R4, #176]              @ 0xb0 
    /*00004214*/ RSB         R9, R2, #64                 @ 0x40 
    /*00004218*/ LSR         R2, R2, #3 
    /*0000421c*/ ADD         R0, IP, R0 
    /*00004220*/ CMP         R2, #0 
    /*00004224*/ LSR         FP, R9, #3 
    /*00004228*/ SUB         R2, R2, #1 
    /*0000422c*/ ADDEQ       SL, SP, #32 
    /*00004230*/ SUBEQ       R3, FP, #1 
    /*00004234*/ SUBNE       R3, FP, #1 
    /*00004238*/ BEQ         H264eWrStrBufSPSPPS_x4268
    H264eWrStrBufSPSPPS_x423c:
    /*0000423c*/ ADD         SL, SP, #32 
    /*00004240*/ SUB         R0, R0, #8 
    /*00004244*/ MOV         R1, R2 
    /*00004248*/ MOV         LR, SL 
    H264eWrStrBufSPSPPS_x424c:
    /*0000424c*/ SUB         R1, R1, #1 
    /*00004250*/ LDRD        R6, [LR], #8 
    /*00004254*/ CMN         R1, #1 
    /*00004258*/ STRD        R6, [R0, #8]! 
    /*0000425c*/ BNE         H264eWrStrBufSPSPPS_x424c
    /*00004260*/ ADD         R2, R2, #1 
    /*00004264*/ ADD         SL, SL, R2, LSL #3 
    H264eWrStrBufSPSPPS_x4268:
    /*00004268*/ CMP         FP, #0 
    /*0000426c*/ SUBNE       IP, IP, #8 
    /*00004270*/ BEQ         H264eWrStrBufSPSPPS_x4288
    H264eWrStrBufSPSPPS_x4274:
    /*00004274*/ SUB         R3, R3, #1 
    /*00004278*/ LDRD        R0, [SL], #8 
    /*0000427c*/ CMN         R3, #1 
    /*00004280*/ STRD        R0, [IP, #8]! 
    /*00004284*/ BNE         H264eWrStrBufSPSPPS_x4274
    H264eWrStrBufSPSPPS_x4288:
    /*00004288*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*0000428c*/ STR         R9, [R3] 
    H264eWrStrBufSPSPPS_x4290:
    /*00004290*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*00004294*/ ANDS        SL, R8, #3 
    /*00004298*/ LDR         R2, [R4, #168]              @ 0xa8 
    /*0000429c*/ LDR         LR, [R5, #704]              @ 0x2c0 
    /*000042a0*/ LDR         R3, [R3] 
    /*000042a4*/ LDR         IP, [R2] 
    /*000042a8*/ ADD         LR, R5, LR 
    /*000042ac*/ BNE         H264eWrStrBufSPSPPS_x48b4
    /*000042b0*/ CMP         R3, IP 
    /*000042b4*/ SUBHI       R3, R3, IP 
    /*000042b8*/ LDRLS       R0, [R4, #12] 
    /*000042bc*/ LDRLS       R1, [R4, #8] 
    /*000042c0*/ SUBLS       R3, R3, R0 
    /*000042c4*/ LDRHI       R1, [R4, #12] 
    /*000042c8*/ ADDLS       R3, R3, R1 
    /*000042cc*/ SUBLS       R3, R3, IP 
    /*000042d0*/ SUBHI       R3, R3, R1 
    /*000042d4*/ CMP         R8, R3 
    /*000042d8*/ BHI         H264eWrStrBufSPSPPS_x4914
    /*000042dc*/ LDR         R3, [R4, #8] 
    /*000042e0*/ ADD         R9, R8, IP 
    /*000042e4*/ CMP         R9, R3 
    /*000042e8*/ BCC         H264eWrStrBufSPSPPS_x4474
    /*000042ec*/ SUB         R7, R3, IP 
    /*000042f0*/ LDR         R6, [R4, #176]              @ 0xb0 
    /*000042f4*/ SUB         R9, R8, R7 
    /*000042f8*/ LSR         R7, R7, #3 
    /*000042fc*/ ADD         IP, R6, IP 
    /*00004300*/ CMP         R7, #0 
    /*00004304*/ LSR         SL, R9, #3 
    /*00004308*/ SUB         R3, SL, #1 
    /*0000430c*/ SUB         R7, R7, #1 
    /*00004310*/ BEQ         H264eWrStrBufSPSPPS_x433c
    H264eWrStrBufSPSPPS_x4314:
    /*00004314*/ SUB         IP, IP, #8 
    /*00004318*/ MOV         R2, R7 
    /*0000431c*/ MOV         R8, LR 
    H264eWrStrBufSPSPPS_x4320:
    /*00004320*/ SUB         R2, R2, #1 
    /*00004324*/ LDRD        R0, [R8], #8 
    /*00004328*/ CMN         R2, #1 
    /*0000432c*/ STRD        R0, [IP, #8]! 
    /*00004330*/ BNE         H264eWrStrBufSPSPPS_x4320
    /*00004334*/ ADD         R7, R7, #1 
    /*00004338*/ ADD         LR, LR, R7, LSL #3 
    H264eWrStrBufSPSPPS_x433c:
    /*0000433c*/ CMP         SL, #0 
    /*00004340*/ BEQ         H264eWrStrBufSPSPPS_x435c
    /*00004344*/ SUB         R6, R6, #8 
    H264eWrStrBufSPSPPS_x4348:
    /*00004348*/ SUB         R3, R3, #1 
    /*0000434c*/ LDRD        R0, [LR], #8 
    /*00004350*/ CMN         R3, #1 
    /*00004354*/ STRD        R0, [R6, #8]! 
    /*00004358*/ BNE         H264eWrStrBufSPSPPS_x4348
    H264eWrStrBufSPSPPS_x435c:
    /*0000435c*/ LDR         R2, [R4, #168]              @ 0xa8 
    H264eWrStrBufSPSPPS_x4360:
    /*00004360*/ STR         R9, [R2] 
    H264eWrStrBufSPSPPS_x4364:
    /*00004364*/ MOV         R0, R5 
    /*00004368*/ BL          0x0000000000004368          @ H264eDoublePps [R_ARM_CALL: .text+0x3e2c] 
    /*0000436c*/ CMP         R0, #1 
    /*00004370*/ BEQ         H264eWrStrBufSPSPPS_x4644
    H264eWrStrBufSPSPPS_x4374:
    /*00004374*/ LDR         R1, [R4, #160]              @ 0xa0 
    /*00004378*/ LDR         R2, [R4, #164]              @ 0xa4 
    /*0000437c*/ LDR         R3, [R4, #172]              @ 0xac 
    /*00004380*/ LDR         R1, [R1] 
    /*00004384*/ LDR         R2, [R2] 
    /*00004388*/ LDR         R0, [R4, #168]              @ 0xa8 
    /*0000438c*/ LDR         R3, [R3] 
    /*00004390*/ CMP         R1, R2 
    /*00004394*/ LDR         LR, [R0] 
    /*00004398*/ MOVCC       R0, #0 
    /*0000439c*/ MOVCS       R0, #1 
    /*000043a0*/ CMP         R1, R3 
    /*000043a4*/ MOVHI       R1, #0 
    /*000043a8*/ MOVLS       R1, #1 
    /*000043ac*/ CMP         LR, R3 
    /*000043b0*/ AND         IP, R0, R1 
    /*000043b4*/ MOVCC       R3, #0 
    /*000043b8*/ MOVCS       R3, #1 
    /*000043bc*/ TST         R3, IP 
    /*000043c0*/ BNE         H264eWrStrBufSPSPPS_x43f0
    /*000043c4*/ CMP         R2, LR 
    /*000043c8*/ MOVCC       R2, #0 
    /*000043cc*/ MOVCS       R2, #1 
    /*000043d0*/ TST         IP, R2 
    /*000043d4*/ BNE         H264eWrStrBufSPSPPS_x43f0
    /*000043d8*/ AND         R0, R0, R3 
    /*000043dc*/ TST         R2, R0 
    /*000043e0*/ BNE         H264eWrStrBufSPSPPS_x43f0
    /*000043e4*/ AND         R3, R3, R1 
    /*000043e8*/ TST         R2, R3 
    /*000043ec*/ BEQ         H264eWrStrBufSPSPPS_x4498
    H264eWrStrBufSPSPPS_x43f0:
    /*000043f0*/ MOV         R0, #0 
    H264eWrStrBufSPSPPS_x43f4:
    /*000043f4*/ ADD         SP, SP, #100                @ 0x64 
    /*000043f8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eWrStrBufSPSPPS_x43fc:
    /*000043fc*/ SUB         IP, R3, R7 
    /*00004400*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*00004404*/ RSB         LR, IP, #64                 @ 0x40 
    /*00004408*/ LSR         IP, IP, #3 
    /*0000440c*/ ADD         R7, R3, R7 
    /*00004410*/ CMP         IP, #0 
    /*00004414*/ LSR         FP, LR, #3 
    /*00004418*/ STR         R3, [SP, #28] 
    /*0000441c*/ SUB         IP, IP, #1 
    /*00004420*/ ADDEQ       SL, SP, #32 
    /*00004424*/ SUBEQ       R1, FP, #1 
    /*00004428*/ SUBNE       R1, FP, #1 
    /*0000442c*/ BNE         H264eWrStrBufSPSPPS_x4058
    /*00004430*/ B           H264eWrStrBufSPSPPS_x4084
    H264eWrStrBufSPSPPS_x4434:
    /*00004434*/ LDR         R1, [R4, #176]              @ 0xb0 
    /*00004438*/ MVN         R3, #0 
    /*0000443c*/ MOV         FP, #0 
    /*00004440*/ MOV         R2, #7 
    /*00004444*/ ADD         R0, R1, R0 
    /*00004448*/ ADD         IP, R0, #64                 @ 0x40 
    /*0000444c*/ B           H264eWrStrBufSPSPPS_x423c
    H264eWrStrBufSPSPPS_x4450:
    /*00004450*/ LSR         R3, R6, #3 
    /*00004454*/ LDR         R1, [R4, #176]              @ 0xb0 
    /*00004458*/ CMP         R3, #0 
    /*0000445c*/ SUB         R3, R3, #1 
    /*00004460*/ ADD         LR, R1, LR 
    /*00004464*/ ADD         R9, LR, R6 
    /*00004468*/ BEQ         H264eWrStrBufSPSPPS_x4180
    /*0000446c*/ MVN         R2, #0 
    /*00004470*/ B           H264eWrStrBufSPSPPS_x4134
    H264eWrStrBufSPSPPS_x4474:
    /*00004474*/ LSR         R7, R8, #3 
    /*00004478*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*0000447c*/ CMP         R7, #0 
    /*00004480*/ SUB         R7, R7, #1 
    /*00004484*/ ADD         IP, R3, IP 
    /*00004488*/ ADD         R6, IP, R8 
    /*0000448c*/ BEQ         H264eWrStrBufSPSPPS_x4360
    /*00004490*/ MVN         R3, #0 
    /*00004494*/ B           H264eWrStrBufSPSPPS_x4314
    H264eWrStrBufSPSPPS_x4498:
    /*00004498*/ LDR         IP, [R4, #64]               @ 0x40 
    /*0000449c*/ MOVW        R2, #2525                   @ 0x9dd 
    /*000044a0*/ LDR         R3, [R4, #128]              @ 0x80 
    /*000044a4*/ MOVW        R0, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x714] 
    /*000044a8*/ LDR         R1, [PC, #1220]             @ 0x0000000000004974 
    /*000044ac*/ MOVT        R0, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x714] 
    /*000044b0*/ STR         IP, [SP, #8] 
    /*000044b4*/ LDR         IP, [R4, #32] 
    /*000044b8*/ STR         IP, [SP, #4] 
    /*000044bc*/ LDR         IP, [R4, #96]               @ 0x60 
    /*000044c0*/ STR         IP, [SP] 
    /*000044c4*/ BL          0x00000000000044C4          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000044c8*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*000044cc*/ LDR         R0, [R4, #164]              @ 0xa4 
    /*000044d0*/ LDR         R1, [R4, #172]              @ 0xac 
    /*000044d4*/ LDR         R3, [R3] 
    /*000044d8*/ LDR         R0, [R0] 
    /*000044dc*/ LDR         R2, [R4, #168]              @ 0xa8 
    /*000044e0*/ CMP         R3, R0 
    /*000044e4*/ LDR         R4, [R1] 
    /*000044e8*/ LDR         IP, [R2] 
    /*000044ec*/ MOVCC       R2, #0 
    /*000044f0*/ MOVCS       R2, #1 
    /*000044f4*/ CMP         R3, R4 
    /*000044f8*/ MOVHI       R3, #0 
    /*000044fc*/ MOVLS       R3, #1 
    /*00004500*/ CMP         IP, R4 
    /*00004504*/ AND         R1, R2, R3 
    /*00004508*/ MOVCC       R4, #0 
    /*0000450c*/ MOVCS       R4, #1 
    /*00004510*/ TST         R4, R1 
    /*00004514*/ BNE         H264eWrStrBufSPSPPS_x43f0
    /*00004518*/ CMP         R0, IP 
    /*0000451c*/ MOVCC       R0, #0 
    /*00004520*/ MOVCS       R0, #1 
    /*00004524*/ TST         R1, R0 
    /*00004528*/ BNE         H264eWrStrBufSPSPPS_x43f0
    /*0000452c*/ AND         R2, R2, R4 
    /*00004530*/ TST         R0, R2 
    /*00004534*/ BNE         H264eWrStrBufSPSPPS_x43f0
    /*00004538*/ AND         R4, R4, R3 
    /*0000453c*/ ANDS        R4, R0, R4 
    /*00004540*/ BNE         H264eWrStrBufSPSPPS_x43f0
    /*00004544*/ MOVW        R2, #2534                   @ 0x9e6 
    /*00004548*/ LDR         R1, [PC, #1060]             @ 0x0000000000004974 
    /*0000454c*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x76c] 
    /*00004550*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00004554*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x76c] 
    /*00004558*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*0000455c*/ BL          0x000000000000455C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00004560*/ MOV         R0, R4 
    /*00004564*/ ADD         SP, SP, #100                @ 0x64 
    /*00004568*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eWrStrBufSPSPPS_x456c:
    /*0000456c*/ LDR         IP, [R4, #64]               @ 0x40 
    /*00004570*/ MOVW        R2, #2451                   @ 0x993 
    /*00004574*/ LDR         R3, [R4, #128]              @ 0x80 
    /*00004578*/ MOVW        R0, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x714] 
    /*0000457c*/ LDR         R1, [PC, #1008]             @ 0x0000000000004974 
    /*00004580*/ MOVT        R0, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x714] 
    /*00004584*/ STR         IP, [SP, #8] 
    /*00004588*/ LDR         IP, [R4, #32] 
    /*0000458c*/ STR         IP, [SP, #4] 
    /*00004590*/ LDR         IP, [R4, #96]               @ 0x60 
    /*00004594*/ STR         IP, [SP] 
    /*00004598*/ BL          0x0000000000004598          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0000459c*/ ADD         R0, R4, #164                @ 0xa4 
    /*000045a0*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*000045a4*/ LDM         R0, {R0, R1, R2} 
    /*000045a8*/ LDR         R3, [R3] 
    /*000045ac*/ LDR         R0, [R0] 
    /*000045b0*/ LDR         R2, [R2] 
    /*000045b4*/ CMP         R3, R0 
    /*000045b8*/ LDR         R7, [R1] 
    /*000045bc*/ MOVCC       R1, #0 
    /*000045c0*/ MOVCS       R1, #1 
    /*000045c4*/ CMP         R3, R2 
    /*000045c8*/ MOVHI       R3, #0 
    /*000045cc*/ MOVLS       R3, #1 
    /*000045d0*/ CMP         R7, R2 
    /*000045d4*/ AND         IP, R1, R3 
    /*000045d8*/ MOVCC       R2, #0 
    /*000045dc*/ MOVCS       R2, #1 
    /*000045e0*/ TST         IP, R2 
    /*000045e4*/ BNE         H264eWrStrBufSPSPPS_x3f74
    /*000045e8*/ CMP         R0, R7 
    /*000045ec*/ MOVCC       LR, #0 
    /*000045f0*/ MOVCS       LR, #1 
    /*000045f4*/ TST         IP, LR 
    /*000045f8*/ BNE         H264eWrStrBufSPSPPS_x3f74
    /*000045fc*/ AND         R1, R1, R2 
    /*00004600*/ TST         LR, R1 
    /*00004604*/ BNE         H264eWrStrBufSPSPPS_x3f74
    /*00004608*/ AND         R3, R3, R2 
    /*0000460c*/ TST         LR, R3 
    /*00004610*/ BNE         H264eWrStrBufSPSPPS_x3f74
    /*00004614*/ MOVW        R2, #2460                   @ 0x99c 
    /*00004618*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x76c] 
    /*0000461c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00004620*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x76c] 
    /*00004624*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00004628*/ LDR         R1, [PC, #836]              @ 0x0000000000004974 
    /*0000462c*/ BL          0x000000000000462C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00004630*/ LDR         R2, [R4, #168]              @ 0xa8 
    /*00004634*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*00004638*/ LDR         R7, [R2] 
    /*0000463c*/ LDR         R0, [R3] 
    /*00004640*/ B           H264eWrStrBufSPSPPS_x3f74
    H264eWrStrBufSPSPPS_x4644:
    /*00004644*/ LDR         R2, [R4, #168]              @ 0xa8 
    /*00004648*/ LDR         R1, [R4, #164]              @ 0xa4 
    /*0000464c*/ LDR         R3, [R5, #1196]             @ 0x4ac 
    /*00004650*/ LDR         IP, [R2] 
    /*00004654*/ LDR         R1, [R1] 
    /*00004658*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*0000465c*/ CMP         R1, IP 
    /*00004660*/ LDR         LR, [SP, #20] 
    /*00004664*/ LDR         R6, [SP, #24] 
    /*00004668*/ STRD        R2, [SP, #48]               @ 0x30 
    /*0000466c*/ MOV         R3, #0 
    /*00004670*/ LDR         R2, [R5, #712]              @ 0x2c8 
    /*00004674*/ ADD         R0, LR, #64                 @ 0x40 
    /*00004678*/ STRB        R3, [SP, #41]               @ 0x29 
    /*0000467c*/ STRB        R3, [SP, #42]               @ 0x2a 
    /*00004680*/ SUB         R2, LR, R2 
    /*00004684*/ STRB        R3, [SP, #43]               @ 0x2b 
    /*00004688*/ SUBHI       R3, R1, IP 
    /*0000468c*/ LDRLS       R3, [R4, #12] 
    /*00004690*/ STR         R2, [SP, #36]               @ 0x24 
    /*00004694*/ LDRLS       R2, [R4, #8] 
    /*00004698*/ SUBLS       R3, R1, R3 
    /*0000469c*/ LDRHI       R2, [R4, #12] 
    /*000046a0*/ ADDLS       R3, R3, R2 
    /*000046a4*/ STR         R0, [SP, #32] 
    /*000046a8*/ SUBLS       R3, R3, IP 
    /*000046ac*/ SUBHI       R3, R3, R2 
    /*000046b0*/ CMP         R3, #63                     @ 0x3f 
    /*000046b4*/ MOV         R0, #8 
    /*000046b8*/ STR         R6, [SP, #44]               @ 0x2c 
    /*000046bc*/ STRB        R0, [SP, #40]               @ 0x28 
    /*000046c0*/ MOV         R0, LR 
    /*000046c4*/ BLS         H264eWrStrBufSPSPPS_x492c
    /*000046c8*/ LDR         R3, [R4, #8] 
    /*000046cc*/ ADD         LR, IP, #64                 @ 0x40 
    /*000046d0*/ CMP         LR, R3 
    /*000046d4*/ BCC         H264eWrStrBufSPSPPS_x4880
    /*000046d8*/ SUB         R8, R3, IP 
    /*000046dc*/ LDR         R6, [R4, #176]              @ 0xb0 
    /*000046e0*/ RSB         LR, R8, #64                 @ 0x40 
    /*000046e4*/ LSR         R8, R8, #3 
    /*000046e8*/ ADD         IP, R6, IP 
    /*000046ec*/ CMP         R8, #0 
    /*000046f0*/ LSR         R7, LR, #3 
    /*000046f4*/ SUB         R8, R8, #1 
    /*000046f8*/ ADDEQ       SL, SP, #32 
    /*000046fc*/ SUBEQ       R3, R7, #1 
    /*00004700*/ SUBNE       R3, R7, #1 
    /*00004704*/ BEQ         H264eWrStrBufSPSPPS_x4734
    H264eWrStrBufSPSPPS_x4708:
    /*00004708*/ ADD         SL, SP, #32 
    /*0000470c*/ SUB         IP, IP, #8 
    /*00004710*/ MOV         R2, R8 
    /*00004714*/ MOV         R9, SL 
    H264eWrStrBufSPSPPS_x4718:
    /*00004718*/ SUB         R2, R2, #1 
    /*0000471c*/ LDRD        R0, [R9], #8 
    /*00004720*/ CMN         R2, #1 
    /*00004724*/ STRD        R0, [IP, #8]! 
    /*00004728*/ BNE         H264eWrStrBufSPSPPS_x4718
    /*0000472c*/ ADD         R8, R8, #1 
    /*00004730*/ ADD         SL, SL, R8, LSL #3 
    H264eWrStrBufSPSPPS_x4734:
    /*00004734*/ CMP         R7, #0 
    /*00004738*/ SUBNE       R6, R6, #8 
    /*0000473c*/ BEQ         H264eWrStrBufSPSPPS_x4754
    H264eWrStrBufSPSPPS_x4740:
    /*00004740*/ SUB         R3, R3, #1 
    /*00004744*/ LDRD        R0, [SL], #8 
    /*00004748*/ CMN         R3, #1 
    /*0000474c*/ STRD        R0, [R6, #8]! 
    /*00004750*/ BNE         H264eWrStrBufSPSPPS_x4740
    H264eWrStrBufSPSPPS_x4754:
    /*00004754*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00004758*/ STR         LR, [R3] 
    H264eWrStrBufSPSPPS_x475c:
    /*0000475c*/ LDR         R3, [SP, #20] 
    /*00004760*/ LDR         R1, [R5, #708]              @ 0x2c4 
    /*00004764*/ LDR         R2, [R5, #704]              @ 0x2c0 
    /*00004768*/ ANDS        IP, R3, #3 
    /*0000476c*/ LDR         R6, [R4, #168]              @ 0xa8 
    /*00004770*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*00004774*/ ADD         R2, R2, R1 
    /*00004778*/ ADD         R5, R5, R2 
    /*0000477c*/ LDR         R1, [R6] 
    /*00004780*/ LDR         R3, [R3] 
    /*00004784*/ BNE         H264eWrStrBufSPSPPS_x495c
    /*00004788*/ CMP         R3, R1 
    /*0000478c*/ SUBHI       R3, R3, R1 
    /*00004790*/ LDRLS       R0, [R4, #12] 
    /*00004794*/ LDRLS       R2, [R4, #8] 
    /*00004798*/ LDRHI       R2, [R4, #12] 
    /*0000479c*/ SUBLS       R3, R3, R0 
    /*000047a0*/ ADDLS       R3, R3, R2 
    /*000047a4*/ SUBHI       R3, R3, R2 
    /*000047a8*/ LDR         R2, [SP, #20] 
    /*000047ac*/ SUBLS       R3, R3, R1 
    /*000047b0*/ CMP         R2, R3 
    /*000047b4*/ BHI         H264eWrStrBufSPSPPS_x4944
    /*000047b8*/ LDR         R2, [SP, #20] 
    /*000047bc*/ LDR         R3, [R4, #8] 
    /*000047c0*/ ADD         R0, R2, R1 
    /*000047c4*/ CMP         R0, R3 
    /*000047c8*/ BCC         H264eWrStrBufSPSPPS_x4858
    /*000047cc*/ SUB         R8, R3, R1 
    /*000047d0*/ LDR         LR, [R4, #176]              @ 0xb0 
    /*000047d4*/ SUB         R0, R2, R8 
    /*000047d8*/ LSR         R8, R8, #3 
    /*000047dc*/ ADD         R1, LR, R1 
    /*000047e0*/ CMP         R8, #0 
    /*000047e4*/ LSR         IP, R0, #3 
    /*000047e8*/ SUB         R8, R8, #1 
    /*000047ec*/ SUBEQ       R3, IP, #1 
    /*000047f0*/ MOVEQ       R2, R5 
    /*000047f4*/ BEQ         H264eWrStrBufSPSPPS_x4824
    /*000047f8*/ SUB         R3, IP, #1 
    H264eWrStrBufSPSPPS_x47fc:
    /*000047fc*/ SUB         R1, R1, #8 
    /*00004800*/ MOV         R2, R8 
    /*00004804*/ MOV         R9, R5 
    H264eWrStrBufSPSPPS_x4808:
    /*00004808*/ SUB         R2, R2, #1 
    /*0000480c*/ LDRD        R6, [R9], #8 
    /*00004810*/ CMN         R2, #1 
    /*00004814*/ STRD        R6, [R1, #8]! 
    /*00004818*/ BNE         H264eWrStrBufSPSPPS_x4808
    /*0000481c*/ ADD         R2, R8, #1 
    /*00004820*/ ADD         R2, R5, R2, LSL #3 
    H264eWrStrBufSPSPPS_x4824:
    /*00004824*/ CMP         IP, #0 
    /*00004828*/ BEQ         H264eWrStrBufSPSPPS_x4844
    /*0000482c*/ SUB         R1, LR, #8 
    H264eWrStrBufSPSPPS_x4830:
    /*00004830*/ SUB         R3, R3, #1 
    /*00004834*/ LDRD        R6, [R2], #8 
    /*00004838*/ CMN         R3, #1 
    /*0000483c*/ STRD        R6, [R1, #8]! 
    /*00004840*/ BNE         H264eWrStrBufSPSPPS_x4830
    H264eWrStrBufSPSPPS_x4844:
    /*00004844*/ LDR         R6, [R4, #168]              @ 0xa8 
    H264eWrStrBufSPSPPS_x4848:
    /*00004848*/ STR         R0, [R6] 
    /*0000484c*/ B           H264eWrStrBufSPSPPS_x4374
    H264eWrStrBufSPSPPS_x4850:
    /*00004850*/ MVN         R0, #0 
    /*00004854*/ B           H264eWrStrBufSPSPPS_x43f4
    H264eWrStrBufSPSPPS_x4858:
    /*00004858*/ LDR         R2, [SP, #20] 
    /*0000485c*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*00004860*/ LSR         R8, R2, #3 
    /*00004864*/ ADD         R1, R3, R1 
    /*00004868*/ CMP         R8, #0 
    /*0000486c*/ ADD         LR, R1, R2 
    /*00004870*/ SUB         R8, R8, #1 
    /*00004874*/ BEQ         H264eWrStrBufSPSPPS_x4848
    /*00004878*/ MVN         R3, #0 
    /*0000487c*/ B           H264eWrStrBufSPSPPS_x47fc
    H264eWrStrBufSPSPPS_x4880:
    /*00004880*/ LDR         R2, [R4, #176]              @ 0xb0 
    /*00004884*/ MVN         R3, #0 
    /*00004888*/ MOV         R7, #0 
    /*0000488c*/ MOV         R8, #7 
    /*00004890*/ ADD         IP, R2, IP 
    /*00004894*/ ADD         R6, IP, #64                 @ 0x40 
    /*00004898*/ B           H264eWrStrBufSPSPPS_x4708
    H264eWrStrBufSPSPPS_x489c:
    /*0000489c*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ec] 
    /*000048a0*/ MOV         R1, #18 
    /*000048a4*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ec] 
    /*000048a8*/ MOV         R0, #3 
    /*000048ac*/ BL          0x00000000000048AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000048b0*/ B           H264eWrStrBufSPSPPS_x4184
    H264eWrStrBufSPSPPS_x48b4:
    /*000048b4*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ec] 
    /*000048b8*/ MOV         R1, #18 
    /*000048bc*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ec] 
    /*000048c0*/ MOV         R0, #3 
    /*000048c4*/ BL          0x00000000000048C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000048c8*/ B           H264eWrStrBufSPSPPS_x4364
    H264eWrStrBufSPSPPS_x48cc:
    /*000048cc*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*000048d0*/ MOV         R1, #18 
    /*000048d4*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*000048d8*/ MOV         R0, #4 
    /*000048dc*/ BL          0x00000000000048DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000048e0*/ B           H264eWrStrBufSPSPPS_x4184
    H264eWrStrBufSPSPPS_x48e4:
    /*000048e4*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*000048e8*/ MOV         R1, #18 
    /*000048ec*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*000048f0*/ MOV         R0, #4 
    /*000048f4*/ BL          0x00000000000048F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000048f8*/ B           H264eWrStrBufSPSPPS_x40b0
    H264eWrStrBufSPSPPS_x48fc:
    /*000048fc*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*00004900*/ MOV         R1, #18 
    /*00004904*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*00004908*/ MOV         R0, #4 
    /*0000490c*/ BL          0x000000000000490C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004910*/ B           H264eWrStrBufSPSPPS_x4290
    H264eWrStrBufSPSPPS_x4914:
    /*00004914*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*00004918*/ MOV         R1, #18 
    /*0000491c*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*00004920*/ MOV         R0, #4 
    /*00004924*/ BL          0x0000000000004924          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004928*/ B           H264eWrStrBufSPSPPS_x4364
    H264eWrStrBufSPSPPS_x492c:
    /*0000492c*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*00004930*/ MOV         R1, #18 
    /*00004934*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*00004938*/ MOV         R0, #4 
    /*0000493c*/ BL          0x000000000000493C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004940*/ B           H264eWrStrBufSPSPPS_x475c
    H264eWrStrBufSPSPPS_x4944:
    /*00004944*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*00004948*/ MOV         R1, #18 
    /*0000494c*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*00004950*/ MOV         R0, #4 
    /*00004954*/ BL          0x0000000000004954          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004958*/ B           H264eWrStrBufSPSPPS_x4374
    H264eWrStrBufSPSPPS_x495c:
    /*0000495c*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ec] 
    /*00004960*/ MOV         R1, #18 
    /*00004964*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ec] 
    /*00004968*/ MOV         R0, #3 
    /*0000496c*/ BL          0x000000000000496C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004970*/ B           H264eWrStrBufSPSPPS_x4374
    /*00004974*/ ANDEQ       R0, R0, IP, ASR R2 
FUNC_END H264eWrStrBufSPSPPS


FUNC_BEGIN H264eInitSlcHdr
    /*00004978*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000497c*/ ADD         R5, R0, #4096               @ 0x1000 
    /*00004980*/ ADD         R2, R0, #7744               @ 0x1e40 
    /*00004984*/ ADD         R3, R0, #8064               @ 0x1f80 
    /*00004988*/ ADD         R2, R2, #56                 @ 0x38 
    /*0000498c*/ ADD         R3, R3, #4 
    /*00004990*/ STM         R1, {R2, R3} 
    /*00004994*/ ADD         R6, R0, #12288              @ 0x3000 
    /*00004998*/ LDR         R3, [R5, #3972]             @ 0xf84 
    /*0000499c*/ MOV         R4, R1 
    /*000049a0*/ STR         R3, [R1, #24] 
    /*000049a4*/ LDR         R3, [R6, #1988]             @ 0x7c4 
    /*000049a8*/ SUB         R2, R3, #4 
    /*000049ac*/ CMP         R2, #1 
    /*000049b0*/ BLS         H264eInitSlcHdr_x4bbc
    /*000049b4*/ CMP         R3, #10 
    /*000049b8*/ LDR         R1, [R5, #3980]             @ 0xf8c 
    /*000049bc*/ ADD         R3, R0, #8192               @ 0x2000 
    /*000049c0*/ BEQ         H264eInitSlcHdr_x4a98
    /*000049c4*/ LDR         R3, [R3, #1588]             @ 0x634 
    /*000049c8*/ CMP         R1, R3 
    /*000049cc*/ BEQ         H264eInitSlcHdr_x4aa4
    H264eInitSlcHdr_x49d0:
    /*000049d0*/ ADD         R0, R0, #8128               @ 0x1fc0 
    /*000049d4*/ ADD         R0, R0, #8 
    /*000049d8*/ STR         R0, [R4, #4] 
    /*000049dc*/ LDR         R3, [R5, #4040]             @ 0xfc8 
    /*000049e0*/ STR         R3, [R4, #24] 
    /*000049e4*/ LDR         R2, [R6, #1988]             @ 0x7c4 
    /*000049e8*/ SUB         R2, R2, #4 
    /*000049ec*/ CMP         R2, #1 
    /*000049f0*/ BLS         H264eInitSlcHdr_x4bbc
    /*000049f4*/ LDR         R7, [R5, #3768]             @ 0xeb8 
    /*000049f8*/ MOV         R3, #1 
    /*000049fc*/ LDR         R1, [R5, #3620]             @ 0xe24 
    /*00004a00*/ ADD         R7, R7, #4 
    /*00004a04*/ LSL         R7, R3, R7 
    /*00004a08*/ CMP         R7, R1 
    /*00004a0c*/ BLS         H264eInitSlcHdr_x4ac0
    H264eInitSlcHdr_x4a10:
    /*00004a10*/ STR         R3, [R4, #8] 
    /*00004a14*/ MOV         R3, #0 
    /*00004a18*/ STR         R3, [R4, #16] 
    /*00004a1c*/ LDR         R3, [R6, #1988]             @ 0x7c4 
    /*00004a20*/ SUB         R2, R3, #4 
    /*00004a24*/ CMP         R2, #1 
    /*00004a28*/ SUBHI       R3, R3, #10 
    /*00004a2c*/ CLZHI       R3, R3 
    /*00004a30*/ MOVLS       R3, #2 
    /*00004a34*/ LSRHI       R3, R3, #5 
    /*00004a38*/ STR         R3, [R4, #20] 
    /*00004a3c*/ LDR         R2, [R5, #3620]             @ 0xe24 
    /*00004a40*/ MOV         R3, #0 
    /*00004a44*/ STR         R3, [R4, #32] 
    /*00004a48*/ STR         R3, [R4, #36]               @ 0x24 
    /*00004a4c*/ STR         R2, [R4, #28] 
    /*00004a50*/ LDR         R3, [R5, #3612]             @ 0xe1c 
    /*00004a54*/ STR         R3, [R4, #40]               @ 0x28 
    /*00004a58*/ LDR         R3, [R6, #1988]             @ 0x7c4 
    /*00004a5c*/ SUB         R3, R3, #4 
    /*00004a60*/ CMP         R3, #1 
    /*00004a64*/ BLS         H264eInitSlcHdr_x4b60
    H264eInitSlcHdr_x4a68:
    /*00004a68*/ LDR         R3, [R5, #3664]             @ 0xe50 
    H264eInitSlcHdr_x4a6c:
    /*00004a6c*/ STR         R3, [R4, #44]               @ 0x2c 
    /*00004a70*/ LDR         R3, [R5, #3668]             @ 0xe54 
    /*00004a74*/ STR         R3, [R4, #48]               @ 0x30 
    /*00004a78*/ LDR         R3, [R5, #3628]             @ 0xe2c 
    /*00004a7c*/ CMP         R3, #1 
    /*00004a80*/ LDRNE       R1, [R5, #3672]             @ 0xe58 
    /*00004a84*/ BEQ         H264eInitSlcHdr_x4ad8
    H264eInitSlcHdr_x4a88:
    /*00004a88*/ STR         R1, [R4, #52]               @ 0x34 
    /*00004a8c*/ LDR         R3, [R5, #3676]             @ 0xe5c 
    /*00004a90*/ STR         R3, [R4, #56]               @ 0x38 
    /*00004a94*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264eInitSlcHdr_x4a98:
    /*00004a98*/ LDR         R3, [R3, #1592]             @ 0x638 
    /*00004a9c*/ CMP         R1, R3 
    /*00004aa0*/ BNE         H264eInitSlcHdr_x49d0
    H264eInitSlcHdr_x4aa4:
    /*00004aa4*/ LDR         R7, [R5, #3768]             @ 0xeb8 
    /*00004aa8*/ MOV         R3, #1 
    /*00004aac*/ LDR         R1, [R5, #3620]             @ 0xe24 
    /*00004ab0*/ ADD         R7, R7, #4 
    /*00004ab4*/ LSL         R7, R3, R7 
    /*00004ab8*/ CMP         R7, R1 
    /*00004abc*/ BHI         H264eInitSlcHdr_x4a10
    H264eInitSlcHdr_x4ac0:
    /*00004ac0*/ CMP         R2, #1 
    /*00004ac4*/ MOV         R2, #0 
    /*00004ac8*/ STR         R2, [R5, #3620]             @ 0xe24 
    /*00004acc*/ MOVHI       R3, #1 
    /*00004ad0*/ MOVLS       R3, #5 
    /*00004ad4*/ B           H264eInitSlcHdr_x4a10
    H264eInitSlcHdr_x4ad8:
    /*00004ad8*/ LDR         R3, [R6, #1988]             @ 0x7c4 
    /*00004adc*/ SUB         R3, R3, #4 
    /*00004ae0*/ CMP         R3, #1 
    /*00004ae4*/ MOVLS       R7, #0 
    /*00004ae8*/ BLS         H264eInitSlcHdr_x4b04
    /*00004aec*/ LDR         R3, [R5, #3620]             @ 0xe24 
    /*00004af0*/ LDR         R2, [R5, #3692]             @ 0xe6c 
    /*00004af4*/ CMP         R2, R3 
    /*00004af8*/ LDRHI       R3, [R5, #3696]             @ 0xe70 
    /*00004afc*/ LDRLS       R7, [R5, #3696]             @ 0xe70 
    /*00004b00*/ ADDHI       R7, R7, R3 
    H264eInitSlcHdr_x4b04:
    /*00004b04*/ LDR         R1, [R5, #3652]             @ 0xe44 
    /*00004b08*/ STR         R7, [R5, #3700]             @ 0xe74 
    /*00004b0c*/ CMP         R1, #0 
    /*00004b10*/ BEQ         H264eInitSlcHdr_x4be4
    /*00004b14*/ LDR         R6, [R4, #12] 
    /*00004b18*/ LDR         R3, [R5, #3620]             @ 0xe24 
    /*00004b1c*/ CMP         R6, #0 
    /*00004b20*/ ADD         R7, R7, R3 
    /*00004b24*/ BNE         H264eInitSlcHdr_x4b34
    /*00004b28*/ CMP         R7, #0 
    /*00004b2c*/ BEQ         H264eInitSlcHdr_x4c10
    /*00004b30*/ SUB         R7, R7, #1 
    H264eInitSlcHdr_x4b34:
    /*00004b34*/ CMP         R7, #0 
    /*00004b38*/ BEQ         H264eInitSlcHdr_x4c10
    /*00004b3c*/ SUB         R0, R7, #1 
    /*00004b40*/ BL          0x0000000000004B40          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    H264eInitSlcHdr_x4b44:
    /*00004b44*/ LDR         R1, [R5, #3656]             @ 0xe48 
    /*00004b48*/ CMP         R7, #0 
    /*00004b4c*/ MOVEQ       R1, R7 
    /*00004b50*/ MLANE       R1, R0, R1, R1 
    /*00004b54*/ CMP         R6, #0 
    /*00004b58*/ BNE         H264eInitSlcHdr_x4bf8
    /*00004b5c*/ B           H264eInitSlcHdr_x4bf0
    H264eInitSlcHdr_x4b60:
    /*00004b60*/ LDR         R3, [R6, #1348]             @ 0x544 
    /*00004b64*/ CMP         R3, #0 
    /*00004b68*/ LDREQ       R3, [R5, #3612]             @ 0xe1c 
    /*00004b6c*/ LDRNE       R3, [R6, #1352]             @ 0x548 
    /*00004b70*/ STREQ       R3, [R4, #40]               @ 0x28 
    /*00004b74*/ LDREQ       R3, [R5, #3612]             @ 0xe1c 
    /*00004b78*/ STRNE       R3, [R4, #40]               @ 0x28 
    /*00004b7c*/ STREQ       R3, [R6, #1352]             @ 0x548 
    /*00004b80*/ LDR         R3, [R6, #1988]             @ 0x7c4 
    /*00004b84*/ SUB         R3, R3, #4 
    /*00004b88*/ CMP         R3, #1 
    /*00004b8c*/ LDR         R3, [R5, #3664]             @ 0xe50 
    /*00004b90*/ BHI         H264eInitSlcHdr_x4a6c
    /*00004b94*/ CMP         R3, #0 
    /*00004b98*/ BEQ         H264eInitSlcHdr_x4a6c
    /*00004b9c*/ MOVW        R3, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9a0] 
    /*00004ba0*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00004ba4*/ MOVT        R3, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9a0] 
    /*00004ba8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00004bac*/ MOVW        R2, #2931                   @ 0xb73 
    /*00004bb0*/ LDR         R1, [PC, #96]               @ 0x0000000000004c18 
    /*00004bb4*/ BL          0x0000000000004BB4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00004bb8*/ B           H264eInitSlcHdr_x4a68
    H264eInitSlcHdr_x4bbc:
    /*00004bbc*/ MOV         R3, #0 
    /*00004bc0*/ STR         R3, [R5, #3620]             @ 0xe24 
    /*00004bc4*/ LDR         R3, [R4] 
    /*00004bc8*/ MOV         R7, #1 
    /*00004bcc*/ LDR         R3, [R3, #64]               @ 0x40 
    /*00004bd0*/ ADD         R3, R3, #4 
    /*00004bd4*/ LSLS        R7, R7, R3 
    /*00004bd8*/ MOVNE       R3, #5 
    /*00004bdc*/ BNE         H264eInitSlcHdr_x4a10
    /*00004be0*/ B           H264eInitSlcHdr_x4ac0
    H264eInitSlcHdr_x4be4:
    /*00004be4*/ LDR         R3, [R4, #12] 
    /*00004be8*/ CMP         R3, #0 
    /*00004bec*/ BNE         H264eInitSlcHdr_x4bf8
    H264eInitSlcHdr_x4bf0:
    /*00004bf0*/ LDR         R3, [R5, #3644]             @ 0xe3c 
    /*00004bf4*/ ADD         R1, R1, R3 
    H264eInitSlcHdr_x4bf8:
    /*00004bf8*/ LDR         R3, [R5, #3680]             @ 0xe60 
    /*00004bfc*/ MOV         R2, #0 
    /*00004c00*/ STR         R2, [R5, #3676]             @ 0xe5c 
    /*00004c04*/ SUB         R1, R3, R1 
    /*00004c08*/ STR         R1, [R5, #3672]             @ 0xe58 
    /*00004c0c*/ B           H264eInitSlcHdr_x4a88
    H264eInitSlcHdr_x4c10:
    /*00004c10*/ MOV         R0, R7 
    /*00004c14*/ B           H264eInitSlcHdr_x4b44
    /*00004c18*/ ANDEQ       R0, R0, R0, ROR R2 
FUNC_END H264eInitSlcHdr


FUNC_BEGIN H264eUpdateFrameNum
    /*00004c1c*/ ADD         R2, R0, #4096               @ 0x1000 
    /*00004c20*/ ADD         R3, R0, #8192               @ 0x2000 
    /*00004c24*/ LDR         R1, [R2, #3700]             @ 0xe74 
    /*00004c28*/ LDR         R0, [R2, #3620]             @ 0xe24 
    /*00004c2c*/ STR         R1, [R2, #3696]             @ 0xe70 
    /*00004c30*/ STR         R0, [R2, #3692]             @ 0xe6c 
    /*00004c34*/ MOV         R0, #0 
    /*00004c38*/ LDR         R1, [R3, #1700]             @ 0x6a4 
    /*00004c3c*/ CMP         R1, #1 
    /*00004c40*/ MOVEQ       R1, #0 
    /*00004c44*/ STREQ       R1, [R2, #3620]             @ 0xe24 
    /*00004c48*/ STREQ       R1, [R2, #3680]             @ 0xe60 
    /*00004c4c*/ STREQ       R1, [R2, #3664]             @ 0xe50 
    /*00004c50*/ STREQ       R1, [R2, #3696]             @ 0xe70 
    /*00004c54*/ LDR         R1, [R3, #24] 
    /*00004c58*/ CMP         R1, #3 
    /*00004c5c*/ LDREQ       R1, [R2, #3620]             @ 0xe24 
    /*00004c60*/ ADDEQ       R1, R1, #1 
    /*00004c64*/ STREQ       R1, [R2, #3620]             @ 0xe24 
    /*00004c68*/ LDR         R2, [R3, #2240]             @ 0x8c0 
    /*00004c6c*/ ADD         R2, R2, #1 
    /*00004c70*/ STR         R2, [R3, #2240]             @ 0x8c0 
    /*00004c74*/ BX          LR 
FUNC_END H264eUpdateFrameNum


FUNC_BEGIN H264eWrHWSlcHdr
    /*00004c78*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00004c7c*/ ADD         R7, R0, #8192               @ 0x2000 
    /*00004c80*/ ADD         R7, R7, #12 
    /*00004c84*/ ADD         R9, R0, #12288              @ 0x3000 
    /*00004c88*/ SUB         SP, SP, #8 
    /*00004c8c*/ MOV         R6, R0 
    /*00004c90*/ MOV         R1, R7 
    /*00004c94*/ BL          0x0000000000004C94          @ H264eInitSlcHdr [R_ARM_CALL: .text+0x4978] 
    /*00004c98*/ LDR         R3, [R9, #2396]             @ 0x95c 
    /*00004c9c*/ CMP         R3, #0 
    /*00004ca0*/ BEQ         H264eWrHWSlcHdr_x4d24
    /*00004ca4*/ MOV         R5, #0 
    /*00004ca8*/ ADD         R4, R6, #828                @ 0x33c 
    /*00004cac*/ ADD         R8, R6, #8192               @ 0x2000 
    /*00004cb0*/ MOV         SL, R5 
    /*00004cb4*/ B           H264eWrHWSlcHdr_x4cc8
    H264eWrHWSlcHdr_x4cb8:
    /*00004cb8*/ LDR         R3, [R9, #2396]             @ 0x95c 
    /*00004cbc*/ ADD         R4, R4, #148                @ 0x94 
    /*00004cc0*/ CMP         R3, R5 
    /*00004cc4*/ BLS         H264eWrHWSlcHdr_x4d24
    H264eWrHWSlcHdr_x4cc8:
    /*00004cc8*/ ADD         R3, R4, #32 
    /*00004ccc*/ STR         SL, [SP] 
    /*00004cd0*/ MOV         R2, R4 
    /*00004cd4*/ MOV         R1, R7 
    /*00004cd8*/ MOV         R0, R6 
    /*00004cdc*/ ADD         R5, R5, #1 
    /*00004ce0*/ BL          0x0000000000000000 
    /*00004ce4*/ LDR         R3, [R8, #2156]             @ 0x86c 
    /*00004ce8*/ CMP         R3, #1 
    /*00004cec*/ BNE         H264eWrHWSlcHdr_x4cb8
    /*00004cf0*/ LDR         R2, [R8, #2160]             @ 0x870 
    /*00004cf4*/ CMP         R2, #0 
    /*00004cf8*/ BEQ         H264eWrHWSlcHdr_x4cb8
    /*00004cfc*/ STR         R3, [SP] 
    /*00004d00*/ ADD         R2, R4, #48                 @ 0x30 
    /*00004d04*/ ADD         R3, R4, #80                 @ 0x50 
    /*00004d08*/ MOV         R1, R7 
    /*00004d0c*/ MOV         R0, R6 
    /*00004d10*/ ADD         R4, R4, #148                @ 0x94 
    /*00004d14*/ BL          0x0000000000000000 
    /*00004d18*/ LDR         R3, [R9, #2396]             @ 0x95c 
    /*00004d1c*/ CMP         R3, R5 
    /*00004d20*/ BHI         H264eWrHWSlcHdr_x4cc8
    H264eWrHWSlcHdr_x4d24:
    /*00004d24*/ ADD         SP, SP, #8 
    /*00004d28*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END H264eWrHWSlcHdr


FUNC_BEGIN H264eInitIntraRefreshInfo
    /*00004d2c*/ ADD         R3, R0, #8192               @ 0x2000 
    /*00004d30*/ LDR         R2, [R3, #2164]             @ 0x874 
    /*00004d34*/ LDR         R1, [R3, #2172]             @ 0x87c 
    /*00004d38*/ LDR         IP, [R3, #2168]             @ 0x878 
    /*00004d3c*/ CMP         R2, #1 
    /*00004d40*/ STR         R2, [R3, #2176]             @ 0x880 
    /*00004d44*/ STR         R1, [R3, #2184]             @ 0x888 
    /*00004d48*/ STR         IP, [R3, #2180]             @ 0x884 
    /*00004d4c*/ BEQ         H264eInitIntraRefreshInfo_x4d94
    /*00004d50*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00004d54*/ MOV         LR, #0 
    /*00004d58*/ LDR         R2, [R0, #976]              @ 0x3d0 
    /*00004d5c*/ ADD         R0, R0, #12288              @ 0x3000 
    /*00004d60*/ ADD         R2, R2, #15 
    /*00004d64*/ LSR         R2, R2, #4 
    /*00004d68*/ STR         R2, [R3, #2196]             @ 0x894 
    /*00004d6c*/ LDR         R1, [R0, #2404]             @ 0x964 
    /*00004d70*/ MUL         IP, R2, IP 
    /*00004d74*/ ADD         R1, R1, #15 
    /*00004d78*/ STR         R2, [R3, #2200]             @ 0x898 
    /*00004d7c*/ LSR         R1, R1, #4 
    /*00004d80*/ STR         LR, [R3, #2188]             @ 0x88c 
    /*00004d84*/ MUL         R2, R2, R1 
    /*00004d88*/ STR         IP, [R3, #2192]             @ 0x890 
    /*00004d8c*/ STR         R2, [R3, #2204]             @ 0x89c 
    /*00004d90*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    H264eInitIntraRefreshInfo_x4d94:
    /*00004d94*/ MOV         R1, #0 
    /*00004d98*/ STR         IP, [R3, #2216]             @ 0x8a8 
    /*00004d9c*/ STR         R1, [R3, #2212]             @ 0x8a4 
    /*00004da0*/ LDR         R1, [R0, #976]              @ 0x3d0 
    /*00004da4*/ STR         R2, [R3, #2224]             @ 0x8b0 
    /*00004da8*/ ADD         R2, R1, #15 
    /*00004dac*/ LSR         R2, R2, #4 
    /*00004db0*/ STR         R2, [R3, #2220]             @ 0x8ac 
    /*00004db4*/ BX          LR 
FUNC_END H264eInitIntraRefreshInfo


FUNC_BEGIN H264eTwoPassVB_UserSub
    /*00004db8*/ PUSH        {R4, R5, LR} 
    /*00004dbc*/ MOV         R5, R0 
    /*00004dc0*/ SUB         SP, SP, #12 
    /*00004dc4*/ MOV         R0, #1 
    /*00004dc8*/ BL          0x0000000000004DC8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004dcc*/ ADD         R4, R5, #12288              @ 0x3000 
    /*00004dd0*/ MOVW        R3, #13408                  @ 0x3460 
    /*00004dd4*/ MOV         R1, #6 
    /*00004dd8*/ LDR         IP, [R4, #1328]             @ 0x530 
    /*00004ddc*/ LDRD        R2, [R3, R5] 
    /*00004de0*/ STR         R1, [SP] 
    /*00004de4*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00004de8*/ MOV         R0, IP 
    /*00004dec*/ BLX         R1 
    /*00004df0*/ SUBS        R3, R0, #0 
    /*00004df4*/ BEQ         H264eTwoPassVB_UserSub_x4e28
    /*00004df8*/ MOV         R2, #3120                   @ 0xc30 
    /*00004dfc*/ LDR         R1, [PC, #52]               @ 0x0000000000004e38 
    /*00004e00*/ MOVW        R0, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c8] 
    /*00004e04*/ MOVT        R0, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c8] 
    /*00004e08*/ BL          0x0000000000004E08          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00004e0c*/ MOVW        R3, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9f0] 
    /*00004e10*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00004e14*/ MOVT        R3, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9f0] 
    /*00004e18*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00004e1c*/ MOVW        R2, #3121                   @ 0xc31 
    /*00004e20*/ LDR         R1, [PC, #16]               @ 0x0000000000004e38 
    /*00004e24*/ BL          0x0000000000004E24          @ osal_panic [R_ARM_CALL: +0x0] 
    H264eTwoPassVB_UserSub_x4e28:
    /*00004e28*/ MOV         R3, #0 
    /*00004e2c*/ STR         R3, [R4, #1336]             @ 0x538 
    /*00004e30*/ ADD         SP, SP, #12 
    /*00004e34*/ POP         {R4, R5, PC} 
    /*00004e38*/ ANDEQ       R0, R0, R0, LSL #5 
FUNC_END H264eTwoPassVB_UserSub


FUNC_BEGIN H264eInitCtx
    /*00004e3c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00004e40*/ SUB         SP, SP, #12 
    /*00004e44*/ MOV         R7, R0 
    /*00004e48*/ MOV         R5, R1 
    /*00004e4c*/ MOV         R0, SP 
    /*00004e50*/ MOV         R8, R2 
    /*00004e54*/ MOV         R9, R3 
    /*00004e58*/ BL          0x0000000000004E58          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00004e5c*/ LDR         R2, [SP, #4] 
    /*00004e60*/ MOVW        R1, #16960                  @ 0x4240 
    /*00004e64*/ LDR         R0, [SP] 
    /*00004e68*/ MOVT        R1, #15 
    /*00004e6c*/ ADD         R4, R7, #12288              @ 0x3000 
    /*00004e70*/ ADD         IP, R7, #4096               @ 0x1000 
    /*00004e74*/ ASR         R3, R2, #31 
    /*00004e78*/ ADD         R6, R7, #8192               @ 0x2000 
    /*00004e7c*/ SMLAL       R2, R3, R1, R0 
    /*00004e80*/ MOV         R3, #0 
    /*00004e84*/ MOV         R1, #4 
    /*00004e88*/ STR         R3, [IP, #3620]             @ 0xe24 
    /*00004e8c*/ MOV         R0, #1 
    /*00004e90*/ UXTH        R2, R2 
    /*00004e94*/ STR         R2, [IP, #3608]             @ 0xe18 
    /*00004e98*/ STR         R5, [R4, #1948]             @ 0x79c 
    /*00004e9c*/ MOV         R5, #0 
    /*00004ea0*/ STR         R3, [R4, #1956]             @ 0x7a4 
    /*00004ea4*/ STR         R3, [R4, #1952]             @ 0x7a0 
    /*00004ea8*/ STR         R3, [R4, #1960]             @ 0x7a8 
    /*00004eac*/ STR         R3, [R4, #1972]             @ 0x7b4 
    /*00004eb0*/ STR         R3, [R4, #1968]             @ 0x7b0 
    /*00004eb4*/ STR         R3, [R4, #1980]             @ 0x7bc 
    /*00004eb8*/ STR         R3, [R4, #1984]             @ 0x7c0 
    /*00004ebc*/ STR         R0, [R4, #1996]             @ 0x7cc 
    /*00004ec0*/ STR         R1, [R4, #1988]             @ 0x7c4 
    /*00004ec4*/ STR         R1, [R4, #1992]             @ 0x7c8 
    /*00004ec8*/ LDR         R1, [R7, #1060]             @ 0x424 
    /*00004ecc*/ LDR         R2, [R1, #168]              @ 0xa8 
    /*00004ed0*/ LDR         R3, [R1, #164]              @ 0xa4 
    /*00004ed4*/ LDR         R0, [R2] 
    /*00004ed8*/ LDR         R3, [R3] 
    /*00004edc*/ LDR         R2, [R1, #12] 
    /*00004ee0*/ CMP         R3, R0 
    /*00004ee4*/ SUBLS       R2, R3, R2 
    /*00004ee8*/ SUBHI       R3, R3, R0 
    /*00004eec*/ LDRLS       R1, [R1, #8] 
    /*00004ef0*/ SUBHI       R3, R3, R2 
    /*00004ef4*/ STR         R5, [R4, #2032]             @ 0x7f0 
    /*00004ef8*/ ADDLS       R2, R2, R1 
    /*00004efc*/ STR         R5, [R4, #2036]             @ 0x7f4 
    /*00004f00*/ SUBLS       R3, R2, R0 
    /*00004f04*/ ADD         R0, R7, #14272              @ 0x37c0 
    /*00004f08*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*00004f0c*/ MOV         R1, R5 
    /*00004f10*/ STR         R5, [IP, #3616]             @ 0xe20 
    /*00004f14*/ MOV         R3, #1 
    /*00004f18*/ STR         R5, [R6, #1004]             @ 0x3ec 
    /*00004f1c*/ MOV         R2, #40                     @ 0x28 
    /*00004f20*/ STR         R3, [R4, #1944]             @ 0x798 
    /*00004f24*/ ADD         R0, R0, #56                 @ 0x38 
    /*00004f28*/ STR         R5, [R4, #2200]             @ 0x898 
    /*00004f2c*/ STR         R5, [R4, #1360]             @ 0x550 
    /*00004f30*/ STR         R5, [R6, #2240]             @ 0x8c0 
    /*00004f34*/ STR         R5, [R6, #2244]             @ 0x8c4 
    /*00004f38*/ STR         R5, [R4, #1344]             @ 0x540 
    /*00004f3c*/ STR         R5, [R4, #992]              @ 0x3e0 
    /*00004f40*/ BL          0x0000000000004F40          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00004f44*/ STR         R5, [R4, #2024]             @ 0x7e8 
    /*00004f48*/ STR         R5, [R4, #2028]             @ 0x7ec 
    /*00004f4c*/ MOV         R0, R7 
    /*00004f50*/ STR         R5, [R4, #2080]             @ 0x820 
    /*00004f54*/ STR         R5, [R6, #2160]             @ 0x870 
    /*00004f58*/ STR         R5, [R6, #2164]             @ 0x874 
    /*00004f5c*/ STR         R9, [R6, #2172]             @ 0x87c 
    /*00004f60*/ LDR         R3, [R8, #28] 
    /*00004f64*/ ADD         R3, R3, #15 
    /*00004f68*/ LSR         R3, R3, #6 
    /*00004f6c*/ STR         R3, [R6, #2168]             @ 0x878 
    /*00004f70*/ BL          0x0000000000004F70          @ H264eInitIntraRefreshInfo [R_ARM_CALL: .text+0x4d2c] 
    /*00004f74*/ ADD         SP, SP, #12 
    /*00004f78*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
FUNC_END H264eInitCtx


FUNC_BEGIN H264eEnableVenc
    /*00004f7c*/ MOV         R3, #1 
    /*00004f80*/ STR         R3, [R0] 
    /*00004f84*/ BX          LR 
FUNC_END H264eEnableVenc


FUNC_BEGIN H264eDisableVenc
    /*00004f88*/ MOV         R3, #0 
    /*00004f8c*/ STR         R3, [R0] 
    /*00004f90*/ BX          LR 
FUNC_END H264eDisableVenc


FUNC_BEGIN H264eReserveSrc
    /*00004f94*/ BX          LR 
FUNC_END H264eReserveSrc


FUNC_BEGIN H264eSendBkSrc
    /*00004f98*/ BX          LR 
FUNC_END H264eSendBkSrc


FUNC_BEGIN H264eGetRcnPicVb
    /*00004f9c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00004fa0*/ ADD         R4, R0, #1072               @ 0x430 
    /*00004fa4*/ ADD         R5, R0, #1088               @ 0x440 
    /*00004fa8*/ ADD         R4, R4, #4 
    /*00004fac*/ ADD         R5, R5, #8 
    /*00004fb0*/ MOV         R6, R1 
    /*00004fb4*/ MOV         R8, R2 
    /*00004fb8*/ MOV         R7, R3 
    H264eGetRcnPicVb_x4fbc:
    /*00004fbc*/ LDR         R3, [R4] 
    /*00004fc0*/ MOV         R0, #1 
    /*00004fc4*/ CMN         R3, #1 
    /*00004fc8*/ BEQ         H264eGetRcnPicVb_x4fec
    /*00004fcc*/ BL          0x0000000000004FCC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004fd0*/ MOV         R1, #6 
    /*00004fd4*/ LDR         R3, [R0, #8] 
    /*00004fd8*/ LDR         R0, [R4] 
    /*00004fdc*/ BLX         R3 
    /*00004fe0*/ CMN         R0, #1 
    /*00004fe4*/ STR         R0, [R6] 
    /*00004fe8*/ BNE         H264eGetRcnPicVb_x5004
    H264eGetRcnPicVb_x4fec:
    /*00004fec*/ ADD         R4, R4, #4 
    /*00004ff0*/ CMP         R4, R5 
    /*00004ff4*/ BNE         H264eGetRcnPicVb_x4fbc
    /*00004ff8*/ LDR         R4, [R6] 
    /*00004ffc*/ CMN         R4, #1 
    /*00005000*/ BEQ         H264eGetRcnPicVb_x505c
    H264eGetRcnPicVb_x5004:
    /*00005004*/ MOV         R0, #1 
    /*00005008*/ MOV         R4, #0 
    /*0000500c*/ BL          0x000000000000500C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005010*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00005014*/ LDR         R0, [R6] 
    /*00005018*/ BLX         R3 
    /*0000501c*/ STR         R0, [R8] 
    /*00005020*/ MOV         R0, #1 
    /*00005024*/ BL          0x0000000000005024          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005028*/ LDR         R3, [R0, #52]               @ 0x34 
    /*0000502c*/ LDR         R0, [R6] 
    /*00005030*/ BLX         R3 
    /*00005034*/ STRD        R0, [R7] 
    /*00005038*/ MOV         R0, #1 
    /*0000503c*/ BL          0x000000000000503C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005040*/ LDR         R3, [R0, #56]               @ 0x38 
    /*00005044*/ LDR         R0, [R6] 
    /*00005048*/ BLX         R3 
    /*0000504c*/ LDR         R3, [SP, #24] 
    /*00005050*/ STR         R0, [R3] 
    H264eGetRcnPicVb_x5054:
    /*00005054*/ MOV         R0, R4 
    /*00005058*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264eGetRcnPicVb_x505c:
    /*0000505c*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9f4] 
    /*00005060*/ MOV         R1, #10 
    /*00005064*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9f4] 
    /*00005068*/ MOV         R0, #4 
    /*0000506c*/ BL          0x000000000000506C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005070*/ B           H264eGetRcnPicVb_x5054
FUNC_END H264eGetRcnPicVb


FUNC_BEGIN H264eGetRcnPicInfoVb
    /*00005074*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00005078*/ ADD         R4, R0, #1088               @ 0x440 
    /*0000507c*/ ADD         R5, R0, #1104               @ 0x450 
    /*00005080*/ ADD         R4, R4, #8 
    /*00005084*/ ADD         R5, R5, #12 
    /*00005088*/ MOV         R6, R1 
    /*0000508c*/ MOV         R8, R2 
    /*00005090*/ MOV         R7, R3 
    H264eGetRcnPicInfoVb_x5094:
    /*00005094*/ LDR         R3, [R4] 
    /*00005098*/ MOV         R0, #1 
    /*0000509c*/ CMN         R3, #1 
    /*000050a0*/ BEQ         H264eGetRcnPicInfoVb_x50c4
    /*000050a4*/ BL          0x00000000000050A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000050a8*/ MOV         R1, #6 
    /*000050ac*/ LDR         R3, [R0, #8] 
    /*000050b0*/ LDR         R0, [R4] 
    /*000050b4*/ BLX         R3 
    /*000050b8*/ CMN         R0, #1 
    /*000050bc*/ STR         R0, [R6] 
    /*000050c0*/ BNE         H264eGetRcnPicInfoVb_x50dc
    H264eGetRcnPicInfoVb_x50c4:
    /*000050c4*/ ADD         R4, R4, #4 
    /*000050c8*/ CMP         R4, R5 
    /*000050cc*/ BNE         H264eGetRcnPicInfoVb_x5094
    /*000050d0*/ LDR         R4, [R6] 
    /*000050d4*/ CMN         R4, #1 
    /*000050d8*/ BEQ         H264eGetRcnPicInfoVb_x5134
    H264eGetRcnPicInfoVb_x50dc:
    /*000050dc*/ MOV         R0, #1 
    /*000050e0*/ MOV         R4, #0 
    /*000050e4*/ BL          0x00000000000050E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000050e8*/ LDR         R3, [R0, #40]               @ 0x28 
    /*000050ec*/ LDR         R0, [R6] 
    /*000050f0*/ BLX         R3 
    /*000050f4*/ STR         R0, [R8] 
    /*000050f8*/ MOV         R0, #1 
    /*000050fc*/ BL          0x00000000000050FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005100*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00005104*/ LDR         R0, [R6] 
    /*00005108*/ BLX         R3 
    /*0000510c*/ STRD        R0, [R7] 
    /*00005110*/ MOV         R0, #1 
    /*00005114*/ BL          0x0000000000005114          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005118*/ LDR         R3, [R0, #56]               @ 0x38 
    /*0000511c*/ LDR         R0, [R6] 
    /*00005120*/ BLX         R3 
    /*00005124*/ LDR         R3, [SP, #24] 
    /*00005128*/ STR         R0, [R3] 
    H264eGetRcnPicInfoVb_x512c:
    /*0000512c*/ MOV         R0, R4 
    /*00005130*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264eGetRcnPicInfoVb_x5134:
    /*00005134*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9f4] 
    /*00005138*/ MOV         R1, #10 
    /*0000513c*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9f4] 
    /*00005140*/ MOV         R0, #3 
    /*00005144*/ BL          0x0000000000005144          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005148*/ B           H264eGetRcnPicInfoVb_x512c
FUNC_END H264eGetRcnPicInfoVb


FUNC_BEGIN H264eGetRcnPic
    /*0000514c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00005150*/ ADD         FP, R0, #12288              @ 0x3000 
    /*00005154*/ SUB         SP, SP, #60                 @ 0x3c 
    /*00005158*/ MOV         R3, #0 
    /*0000515c*/ LDR         IP, [FP, #992]              @ 0x3e0 
    /*00005160*/ MOV         R1, #0 
    /*00005164*/ MVN         R2, #0 
    /*00005168*/ MOV         R7, R0 
    /*0000516c*/ CMP         IP, R3 
    /*00005170*/ MOV         R0, #0 
    /*00005174*/ STR         R3, [SP, #16] 
    /*00005178*/ STRD        R0, [SP, #40]               @ 0x28 
    /*0000517c*/ STRD        R0, [SP, #48]               @ 0x30 
    /*00005180*/ STR         R3, [SP, #20] 
    /*00005184*/ STR         R3, [SP, #24] 
    /*00005188*/ STR         R3, [SP, #28] 
    /*0000518c*/ STR         R2, [SP, #32] 
    /*00005190*/ STR         R2, [SP, #36]               @ 0x24 
    /*00005194*/ BEQ         H264eGetRcnPic_x51b4
    /*00005198*/ MOVW        R3, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa10] 
    /*0000519c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*000051a0*/ MOVT        R3, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa10] 
    /*000051a4*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*000051a8*/ MOVW        R2, #3316                   @ 0xcf4 
    /*000051ac*/ LDR         R1, [PC, #1292]             @ 0x00000000000056c0 
    /*000051b0*/ BL          0x00000000000051B0          @ osal_panic [R_ARM_CALL: +0x0] 
    H264eGetRcnPic_x51b4:
    /*000051b4*/ ADD         R4, R7, #8192               @ 0x2000 
    /*000051b8*/ LDR         R8, [R4, #2900]             @ 0xb54 
    /*000051bc*/ CMP         R8, #0 
    /*000051c0*/ BLE         H264eGetRcnPic_x569c
    /*000051c4*/ MOVW        R3, #0                      @ H264eVBSource [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*000051c8*/ MOVT        R3, #0                      @ H264eVBSource [R_ARM_MOVT_ABS: .data+0x0] 
    /*000051cc*/ LDR         R3, [R3] 
    /*000051d0*/ CMP         R3, #3 
    /*000051d4*/ BEQ         H264eGetRcnPic_x5478
    H264eGetRcnPic_x51d8:
    /*000051d8*/ ADD         R2, SP, #20 
    /*000051dc*/ ADD         R3, SP, #48                 @ 0x30 
    /*000051e0*/ STR         R2, [SP] 
    /*000051e4*/ ADD         R1, SP, #36                 @ 0x24 
    /*000051e8*/ ADD         R2, SP, #28 
    /*000051ec*/ MOV         R0, R7 
    /*000051f0*/ BL          0x00000000000051F0          @ H264eGetRcnPicInfoVb [R_ARM_CALL: .text+0x5074] 
    /*000051f4*/ SUBS        R3, R0, #0 
    /*000051f8*/ STR         R3, [SP, #8] 
    /*000051fc*/ BNE         H264eGetRcnPic_x5558
    /*00005200*/ LDR         R2, [R7, #1160]             @ 0x488 
    /*00005204*/ LDR         R3, [SP, #20] 
    /*00005208*/ CMP         R2, R3 
    /*0000520c*/ BHI         H264eGetRcnPic_x564c
    /*00005210*/ LDR         R3, [FP, #1364]             @ 0x554 
    /*00005214*/ CMP         R3, #0 
    /*00005218*/ BEQ         H264eGetRcnPic_x54b4
    H264eGetRcnPic_x521c:
    /*0000521c*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x76c] 
    /*00005220*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x76c] 
    /*00005224*/ MOV         R5, #0 
    /*00005228*/ MOVW        R9, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*0000522c*/ STR         R7, [SP, #12] 
    /*00005230*/ MOVT        R9, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*00005234*/ LDR         SL, [PC, #1156]             @ 0x00000000000056c0 
    /*00005238*/ MOV         R6, R5 
    /*0000523c*/ MOV         R7, R3 
    /*00005240*/ B           H264eGetRcnPic_x5270
    H264eGetRcnPic_x5244:
    /*00005244*/ LDR         R2, [R4, #2892]             @ 0xb4c 
    /*00005248*/ ADD         R6, R6, #1 
    /*0000524c*/ ADD         R3, R3, #1 
    /*00005250*/ SUBS        R2, R2, #1 
    /*00005254*/ ADDMI       R2, R2, R1 
    /*00005258*/ LDR         R1, [R4, #2884]             @ 0xb44 
    /*0000525c*/ CMP         R8, R6 
    /*00005260*/ STR         R5, [R1, R2, LSL #2] 
    /*00005264*/ STR         R3, [R4, #2900]             @ 0xb54 
    /*00005268*/ STR         R2, [R4, #2892]             @ 0xb4c 
    /*0000526c*/ BEQ         H264eGetRcnPic_x52e0
    H264eGetRcnPic_x5270:
    /*00005270*/ LDR         R2, [R4, #2900]             @ 0xb54 
    /*00005274*/ CMP         R2, #0 
    /*00005278*/ BLE         H264eGetRcnPic_x5448
    /*0000527c*/ LDR         R3, [R4, #2896]             @ 0xb50 
    /*00005280*/ SUB         R2, R2, #1 
    /*00005284*/ SUBS        R3, R3, #1 
    /*00005288*/ LDRMI       R1, [R4, #2888]             @ 0xb48 
    /*0000528c*/ ADDMI       R3, R3, R1 
    /*00005290*/ LDR         R1, [R4, #2884]             @ 0xb44 
    /*00005294*/ LDR         R5, [R1, R3, LSL #2] 
    /*00005298*/ STR         R2, [R4, #2900]             @ 0xb54 
    /*0000529c*/ STR         R3, [R4, #2896]             @ 0xb50 
    /*000052a0*/ LDR         R3, [R5, #356]              @ 0x164 
    /*000052a4*/ CMP         R3, #0 
    /*000052a8*/ BEQ         H264eGetRcnPic_x5468
    H264eGetRcnPic_x52ac:
    /*000052ac*/ LDR         R3, [R4, #2900]             @ 0xb54 
    /*000052b0*/ LDR         R1, [R4, #2888]             @ 0xb48 
    /*000052b4*/ CMP         R3, R1 
    /*000052b8*/ BLT         H264eGetRcnPic_x5244
    /*000052bc*/ MOVW        R3, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x784] 
    /*000052c0*/ MOVW        R2, #3387                   @ 0xd3b 
    /*000052c4*/ MOVT        R3, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x784] 
    /*000052c8*/ MOV         R1, SL 
    /*000052cc*/ MOV         R0, R9 
    /*000052d0*/ ADD         R6, R6, #1 
    /*000052d4*/ BL          0x00000000000052D4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000052d8*/ CMP         R8, R6 
    /*000052dc*/ BNE         H264eGetRcnPic_x5270
    H264eGetRcnPic_x52e0:
    /*000052e0*/ LDR         R7, [SP, #12] 
    /*000052e4*/ LDR         R3, [FP, #992]              @ 0x3e0 
    H264eGetRcnPic_x52e8:
    /*000052e8*/ CMP         R3, #0 
    /*000052ec*/ BEQ         H264eGetRcnPic_x562c
    H264eGetRcnPic_x52f0:
    /*000052f0*/ LDR         R0, [SP, #32] 
    /*000052f4*/ ADD         R3, R7, #4096               @ 0x1000 
    /*000052f8*/ LDR         R2, [SP, #36]               @ 0x24 
    /*000052fc*/ MOV         R1, #4 
    /*00005300*/ LDR         IP, [SP, #24] 
    /*00005304*/ STR         R0, [R5, #340]              @ 0x154 
    /*00005308*/ LDR         R0, [SP, #28] 
    /*0000530c*/ STR         R2, [R5, #344]              @ 0x158 
    /*00005310*/ MOV         R2, #26 
    /*00005314*/ STR         IP, [R5, #328]              @ 0x148 
    /*00005318*/ STR         R0, [R5, #348]              @ 0x15c 
    /*0000531c*/ STR         R1, [R5, #8] 
    /*00005320*/ STR         R2, [R5, #12] 
    /*00005324*/ LDR         R3, [R3, #3620]             @ 0xe24 
    /*00005328*/ STR         R3, [R5, #232]              @ 0xe8 
    /*0000532c*/ LDR         R3, [R7, #1116]             @ 0x45c 
    /*00005330*/ STR         R3, [R5] 
    /*00005334*/ LDR         R3, [R7, #1120]             @ 0x460 
    /*00005338*/ STR         R3, [R5, #4] 
    /*0000533c*/ LDR         R3, [R7, #1124]             @ 0x464 
    /*00005340*/ STR         R3, [R5, #44]               @ 0x2c 
    /*00005344*/ LDR         R3, [R7, #1128]             @ 0x468 
    /*00005348*/ STR         R3, [R5, #48]               @ 0x30 
    /*0000534c*/ LDR         R3, [R7, #1128]             @ 0x468 
    /*00005350*/ STR         R3, [R5, #52]               @ 0x34 
    /*00005354*/ LDR         R3, [R7, #1140]             @ 0x474 
    /*00005358*/ STR         R3, [R5, #32] 
    /*0000535c*/ LDR         R3, [R7, #1144]             @ 0x478 
    /*00005360*/ STR         R3, [R5, #36]               @ 0x24 
    /*00005364*/ LDR         R3, [FP, #1988]             @ 0x7c4 
    /*00005368*/ CMP         R3, #12 
    /*0000536c*/ BEQ         H264eGetRcnPic_x537c
    /*00005370*/ BL          0x0000000000005370          @ H264E_DRV_RefRcnCompressSupport [R_ARM_CALL: .text+0x128f8] 
    /*00005374*/ CMP         R0, #0 
    /*00005378*/ BNE         H264eGetRcnPic_x557c
    H264eGetRcnPic_x537c:
    /*0000537c*/ MOV         R3, #0 
    /*00005380*/ STR         R3, [R5, #20] 
    H264eGetRcnPic_x5384:
    /*00005384*/ LDRD        R2, [SP, #48]               @ 0x30 
    /*00005388*/ ADD         R4, R5, #416                @ 0x1a0 
    /*0000538c*/ ADD         R6, R5, #432                @ 0x1b0 
    /*00005390*/ STRD        R2, [R4, #-8] 
    /*00005394*/ LDR         R1, [R7, #1164]             @ 0x48c 
    /*00005398*/ ADDS        R2, R2, R1 
    /*0000539c*/ ADC         R3, R3, #0 
    /*000053a0*/ STRD        R2, [R6, #-8] 
    /*000053a4*/ LDR         R1, [FP, #1364]             @ 0x554 
    /*000053a8*/ CMP         R1, #1 
    /*000053ac*/ BEQ         H264eGetRcnPic_x5594
    /*000053b0*/ LDR         R1, [R7, #1172]             @ 0x494 
    /*000053b4*/ ADDS        R2, R2, R1 
    /*000053b8*/ ADC         R3, R3, #0 
    /*000053bc*/ STRD        R2, [R4] 
    /*000053c0*/ LDR         R3, [FP, #1988]             @ 0x7c4 
    /*000053c4*/ CMP         R3, #12 
    /*000053c8*/ BEQ         H264eGetRcnPic_x53d8
    /*000053cc*/ BL          0x00000000000053CC          @ H264E_DRV_RefRcnCompressSupport [R_ARM_CALL: .text+0x128f8] 
    /*000053d0*/ CMP         R0, #0 
    /*000053d4*/ BNE         H264eGetRcnPic_x5588
    H264eGetRcnPic_x53d8:
    /*000053d8*/ LDRD        R0, [SP, #40]               @ 0x28 
    /*000053dc*/ MOV         R2, #0 
    /*000053e0*/ MOV         R3, #0 
    /*000053e4*/ STRD        R2, [R5, #72]               @ 0x48 
    H264eGetRcnPic_x53e8:
    /*000053e8*/ LDR         IP, [R7, #1148]             @ 0x47c 
    /*000053ec*/ ADDS        R2, R0, IP 
    /*000053f0*/ ADC         R3, R1, #0 
    /*000053f4*/ STRD        R2, [R5, #80]               @ 0x50 
    /*000053f8*/ LDR         R2, [R7, #1152]             @ 0x480 
    /*000053fc*/ MOV         R3, #0 
    /*00005400*/ LDR         IP, [R7, #1148]             @ 0x47c 
    /*00005404*/ ADDS        R2, R2, IP 
    /*00005408*/ ADC         R3, R3, #0 
    /*0000540c*/ ADDS        R2, R2, R0 
    /*00005410*/ ADC         R3, R3, R1 
    /*00005414*/ STRD        R2, [R5, #120]              @ 0x78 
    /*00005418*/ LDR         R1, [R7, #1132]             @ 0x46c 
    /*0000541c*/ ADDS        R2, R2, R1 
    /*00005420*/ ADC         R3, R3, #0 
    /*00005424*/ STRD        R2, [R5, #128]              @ 0x80 
    /*00005428*/ LDR         R1, [R7, #1136]             @ 0x470 
    /*0000542c*/ LSR         R1, R1, #1 
    /*00005430*/ ADDS        R2, R2, R1 
    /*00005434*/ ADC         R3, R3, #0 
    /*00005438*/ STRD        R2, [R5, #136]              @ 0x88 
    H264eGetRcnPic_x543c:
    /*0000543c*/ LDR         R0, [SP, #8] 
    /*00005440*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00005444*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eGetRcnPic_x5448:
    /*00005448*/ MOV         R3, R7 
    /*0000544c*/ MOV         R2, #3376                   @ 0xd30 
    /*00005450*/ MOV         R1, SL 
    /*00005454*/ MOV         R0, R9 
    /*00005458*/ BL          0x0000000000005458          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000545c*/ LDR         R3, [R5, #356]              @ 0x164 
    /*00005460*/ CMP         R3, #0 
    /*00005464*/ BNE         H264eGetRcnPic_x52ac
    H264eGetRcnPic_x5468:
    /*00005468*/ LDR         R7, [SP, #12] 
    /*0000546c*/ MOV         R3, R5 
    /*00005470*/ STR         R5, [FP, #992]              @ 0x3e0 
    /*00005474*/ B           H264eGetRcnPic_x52e8
    H264eGetRcnPic_x5478:
    /*00005478*/ LDR         R3, [R7, #1076]             @ 0x434 
    /*0000547c*/ CMN         R3, #1 
    /*00005480*/ BEQ         H264eGetRcnPic_x5490
    /*00005484*/ LDR         R3, [R7, #1096]             @ 0x448 
    /*00005488*/ CMN         R3, #1 
    /*0000548c*/ BNE         H264eGetRcnPic_x51d8
    H264eGetRcnPic_x5490:
    /*00005490*/ LDR         R3, [FP, #1948]             @ 0x79c 
    /*00005494*/ MOVW        R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa48] 
    /*00005498*/ MOV         R1, #10 
    /*0000549c*/ MOVT        R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa48] 
    /*000054a0*/ MOV         R0, #3 
    /*000054a4*/ MVN         IP, #0 
    /*000054a8*/ STR         IP, [SP, #8] 
    /*000054ac*/ BL          0x00000000000054AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000054b0*/ B           H264eGetRcnPic_x543c
    H264eGetRcnPic_x54b4:
    /*000054b4*/ ADD         R2, SP, #16 
    /*000054b8*/ ADD         R3, SP, #40                 @ 0x28 
    /*000054bc*/ STR         R2, [SP] 
    /*000054c0*/ ADD         R1, SP, #32 
    /*000054c4*/ ADD         R2, SP, #24 
    /*000054c8*/ MOV         R0, R7 
    /*000054cc*/ BL          0x00000000000054CC          @ H264eGetRcnPicVb [R_ARM_CALL: .text+0x4f9c] 
    /*000054d0*/ SUBS        R3, R0, #0 
    /*000054d4*/ BNE         H264eGetRcnPic_x55e8
    /*000054d8*/ LDR         R2, [R7, #1156]             @ 0x484 
    /*000054dc*/ LDR         R3, [SP, #16] 
    /*000054e0*/ CMP         R2, R3 
    /*000054e4*/ BLS         H264eGetRcnPic_x521c
    /*000054e8*/ MOV         R0, #1 
    /*000054ec*/ MOV         R4, #6 
    /*000054f0*/ BL          0x00000000000054F0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000054f4*/ LDR         IP, [SP, #28] 
    /*000054f8*/ LDRD        R2, [SP, #48]               @ 0x30 
    /*000054fc*/ MVN         R1, #0 
    /*00005500*/ STR         R4, [SP] 
    /*00005504*/ STR         R1, [SP, #8] 
    /*00005508*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000550c*/ MOV         R0, IP 
    /*00005510*/ BLX         R1 
    /*00005514*/ MOV         R0, #1 
    /*00005518*/ BL          0x0000000000005518          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000551c*/ LDR         IP, [SP, #24] 
    /*00005520*/ LDRD        R2, [SP, #40]               @ 0x28 
    /*00005524*/ STR         R4, [SP] 
    /*00005528*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000552c*/ MOV         R0, IP 
    /*00005530*/ BLX         R1 
    /*00005534*/ LDR         IP, [SP, #16] 
    /*00005538*/ LDR         R3, [R7, #1156]             @ 0x484 
    /*0000553c*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xae0] 
    /*00005540*/ MOV         R1, #10 
    /*00005544*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0xae0] 
    /*00005548*/ STR         IP, [SP] 
    /*0000554c*/ MOV         R0, #3 
    /*00005550*/ BL          0x0000000000005550          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005554*/ B           H264eGetRcnPic_x543c
    H264eGetRcnPic_x5558:
    /*00005558*/ LDR         R3, [FP, #1948]             @ 0x79c 
    /*0000555c*/ MOV         R1, #10 
    /*00005560*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa70] 
    /*00005564*/ MOV         R0, #3 
    /*00005568*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa70] 
    /*0000556c*/ BL          0x000000000000556C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005570*/ LDR         R0, [SP, #8] 
    /*00005574*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00005578*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eGetRcnPic_x557c:
    /*0000557c*/ MOV         R3, #2 
    /*00005580*/ STR         R3, [R5, #20] 
    /*00005584*/ B           H264eGetRcnPic_x5384
    H264eGetRcnPic_x5588:
    /*00005588*/ LDRD        R0, [SP, #40]               @ 0x28 
    /*0000558c*/ STRD        R0, [R5, #72]               @ 0x48 
    /*00005590*/ B           H264eGetRcnPic_x53e8
    H264eGetRcnPic_x5594:
    /*00005594*/ BL          0x0000000000005594          @ H264E_DRV_IsSupportPmeShareBuf [R_ARM_CALL: .text+0x14b10] 
    /*00005598*/ CMP         R0, #0 
    /*0000559c*/ BNE         H264eGetRcnPic_x55b4
    /*000055a0*/ LDRD        R2, [R6, #-8] 
    /*000055a4*/ LDR         R1, [R7, #1172]             @ 0x494 
    /*000055a8*/ ADDS        R2, R2, R1 
    /*000055ac*/ ADC         R3, R3, #0 
    /*000055b0*/ STRD        R2, [R4] 
    H264eGetRcnPic_x55b4:
    /*000055b4*/ LDR         R0, [SP, #36]               @ 0x24 
    /*000055b8*/ MOV         R2, #0 
    /*000055bc*/ LDR         R1, [SP, #28] 
    /*000055c0*/ MOV         R3, #0 
    /*000055c4*/ STRD        R2, [R5, #120]              @ 0x78 
    /*000055c8*/ STR         R0, [R5, #340]              @ 0x154 
    /*000055cc*/ STR         R1, [R5, #328]              @ 0x148 
    /*000055d0*/ STRD        R2, [R5, #128]              @ 0x80 
    /*000055d4*/ STRD        R2, [R5, #136]              @ 0x88 
    /*000055d8*/ STRD        R2, [R5, #72]               @ 0x48 
    /*000055dc*/ STRD        R2, [R5, #80]               @ 0x50 
    /*000055e0*/ STRD        R2, [R5, #88]               @ 0x58 
    /*000055e4*/ B           H264eGetRcnPic_x543c
    H264eGetRcnPic_x55e8:
    /*000055e8*/ MOV         R0, #1 
    /*000055ec*/ STR         R3, [SP, #8] 
    /*000055f0*/ BL          0x00000000000055F0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000055f4*/ LDR         IP, [SP, #28] 
    /*000055f8*/ LDRD        R2, [SP, #48]               @ 0x30 
    /*000055fc*/ MOV         R1, #6 
    /*00005600*/ STR         R1, [SP] 
    /*00005604*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00005608*/ MOV         R0, IP 
    /*0000560c*/ BLX         R1 
    /*00005610*/ LDR         R3, [FP, #1948]             @ 0x79c 
    /*00005614*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xac4] 
    /*00005618*/ MOV         R1, #10 
    /*0000561c*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0xac4] 
    /*00005620*/ MOV         R0, #3 
    /*00005624*/ BL          0x0000000000005624          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005628*/ B           H264eGetRcnPic_x543c
    H264eGetRcnPic_x562c:
    /*0000562c*/ MOVW        R3, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb0c] 
    /*00005630*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*00005634*/ MOVT        R3, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb0c] 
    /*00005638*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*0000563c*/ MOVW        R2, #3391                   @ 0xd3f 
    /*00005640*/ LDR         R1, [PC, #120]              @ 0x00000000000056c0 
    /*00005644*/ BL          0x0000000000005644          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005648*/ B           H264eGetRcnPic_x52f0
    H264eGetRcnPic_x564c:
    /*0000564c*/ MOV         R0, #1 
    /*00005650*/ MVN         R3, #0 
    /*00005654*/ STR         R3, [SP, #8] 
    /*00005658*/ BL          0x0000000000005658          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000565c*/ LDR         IP, [SP, #28] 
    /*00005660*/ MOV         R1, #6 
    /*00005664*/ LDRD        R2, [SP, #48]               @ 0x30 
    /*00005668*/ STR         R1, [SP] 
    /*0000566c*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00005670*/ MOV         R0, IP 
    /*00005674*/ BLX         R1 
    /*00005678*/ LDR         IP, [SP, #20] 
    /*0000567c*/ LDR         R3, [R7, #1160]             @ 0x488 
    /*00005680*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa90] 
    /*00005684*/ MOV         R1, #10 
    /*00005688*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa90] 
    /*0000568c*/ STR         IP, [SP] 
    /*00005690*/ MOV         R0, #3 
    /*00005694*/ BL          0x0000000000005694          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005698*/ B           H264eGetRcnPic_x543c
    H264eGetRcnPic_x569c:
    /*0000569c*/ MOV         R3, R8 
    /*000056a0*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa30] 
    /*000056a4*/ MOV         R1, #10 
    /*000056a8*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa30] 
    /*000056ac*/ MOV         R0, #3 
    /*000056b0*/ MVN         IP, #0 
    /*000056b4*/ STR         IP, [SP, #8] 
    /*000056b8*/ BL          0x00000000000056B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000056bc*/ B           H264eGetRcnPic_x543c
    /*000056c0*/ MULEQ       R0, R8, R2 
FUNC_END H264eGetRcnPic


FUNC_BEGIN H264eUpdateRefInfo
    /*000056c4*/ ADD         R0, R0, #8192               @ 0x2000 
    /*000056c8*/ LDR         R3, [R0, #2244]             @ 0x8c4 
    /*000056cc*/ STR         R3, [R0, #1036]             @ 0x40c 
    /*000056d0*/ BX          LR 
FUNC_END H264eUpdateRefInfo


FUNC_BEGIN H264eUpdateStreamInfo
    /*000056d4*/ LDR         R2, [R0, #764]              @ 0x2fc 
    /*000056d8*/ ADD         IP, R0, #8192               @ 0x2000 
    /*000056dc*/ PUSH        {R4, R5, LR} 
    /*000056e0*/ ADD         R4, R0, #12288              @ 0x3000 
    /*000056e4*/ STR         R2, [IP, #1016]             @ 0x3f8 
    /*000056e8*/ MOVW        R1, #0                      @ u32H264eChnUniqeIndex [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000056ec*/ LDR         R5, [R0, #768]              @ 0x300 
    /*000056f0*/ MOVT        R1, #0                      @ u32H264eChnUniqeIndex [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000056f4*/ ADD         R3, R0, #14464              @ 0x3880 
    /*000056f8*/ ADD         LR, R0, #14656              @ 0x3940 
    /*000056fc*/ ADD         R3, R3, #32 
    /*00005700*/ ADD         LR, LR, #32 
    /*00005704*/ STR         R5, [IP, #1020]             @ 0x3fc 
    /*00005708*/ ADD         R2, R0, #9280               @ 0x2440 
    /*0000570c*/ LDR         R5, [R0, #772]              @ 0x304 
    /*00005710*/ STR         R5, [IP, #1024]             @ 0x400 
    /*00005714*/ LDR         R5, [R0, #780]              @ 0x30c 
    /*00005718*/ STR         R5, [IP, #1028]             @ 0x404 
    /*0000571c*/ LDR         R5, [R0, #776]              @ 0x308 
    /*00005720*/ STR         R5, [IP, #1032]             @ 0x408 
    /*00005724*/ LDR         R5, [R4, #2032]             @ 0x7f0 
    /*00005728*/ STR         R5, [IP, #1052]             @ 0x41c 
    /*0000572c*/ LDR         R4, [R4, #1948]             @ 0x79c 
    /*00005730*/ LDR         R1, [R1, R4, LSL #2] 
    /*00005734*/ STR         R1, [IP, #1040]             @ 0x410 
    /*00005738*/ LDR         R1, [R0, #784]              @ 0x310 
    /*0000573c*/ STR         R1, [IP, #1360]             @ 0x550 
    /*00005740*/ LDR         R1, [R0, #788]              @ 0x314 
    /*00005744*/ STR         R1, [IP, #1364]             @ 0x554 
    H264eUpdateStreamInfo_x5748:
    /*00005748*/ LDR         R1, [R3], #24 
    /*0000574c*/ CMP         R3, LR 
    /*00005750*/ STR         R1, [R2], #8 
    /*00005754*/ BNE         H264eUpdateStreamInfo_x5748
    /*00005758*/ LDR         R3, [IP, #2244]             @ 0x8c4 
    /*0000575c*/ STR         R3, [IP, #1036]             @ 0x40c 
    /*00005760*/ POP         {R4, R5, PC} 
FUNC_END H264eUpdateStreamInfo


FUNC_BEGIN H264E_GetVerMagic
    /*00005764*/ MOVW        R0, #61479                  @ 0xf027 
    /*00005768*/ MOVT        R0, #307                    @ 0x133 
    /*0000576c*/ BX          LR 
FUNC_END H264E_GetVerMagic


FUNC_BEGIN H264E_SetUniqueID
    /*00005770*/ PUSH        {R4, R5, R6, LR} 
    /*00005774*/ MOV         R5, R1 
    /*00005778*/ MOV         R4, R0 
    /*0000577c*/ BL          0x000000000000577C          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00005780*/ CMP         R0, #0 
    /*00005784*/ MOVWEQ      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005788*/ MOVTEQ      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000578c*/ STREQ       R5, [R3, R4, LSL #2] 
    /*00005790*/ POP         {R4, R5, R6, PC} 
FUNC_END H264E_SetUniqueID


FUNC_BEGIN H264E_GetStreamBufStat
    /*00005794*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005798*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000579c*/ ADD         R3, R3, R0, LSL #2 
    /*000057a0*/ PUSH        {R4, R5, LR} 
    /*000057a4*/ SUB         SP, SP, #20 
    /*000057a8*/ LDR         R4, [R3, #64]               @ 0x40 
    /*000057ac*/ CMP         R4, #0 
    /*000057b0*/ BEQ         H264E_GetStreamBufStat_x5878
    /*000057b4*/ ADD         R5, R4, #9792               @ 0x2640 
    /*000057b8*/ ADD         R1, SP, #12 
    /*000057bc*/ ADD         R5, R5, #40                 @ 0x28 
    /*000057c0*/ MOV         R0, R5 
    /*000057c4*/ BL          0x00000000000057C4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000057c8*/ LDR         R1, [R4, #1060]             @ 0x424 
    /*000057cc*/ ADD         R4, R4, #12288              @ 0x3000 
    /*000057d0*/ LDR         R3, [R1, #168]              @ 0xa8 
    /*000057d4*/ LDR         R2, [R1, #164]              @ 0xa4 
    /*000057d8*/ LDR         R0, [R3] 
    /*000057dc*/ LDR         R2, [R2] 
    /*000057e0*/ CMP         R2, R0 
    /*000057e4*/ SUBHI       R3, R2, R0 
    /*000057e8*/ LDRLS       R3, [R1, #12] 
    /*000057ec*/ LDRHI       R1, [R1, #12] 
    /*000057f0*/ LDRLS       R1, [R1, #8] 
    /*000057f4*/ SUBLS       R3, R2, R3 
    /*000057f8*/ SUBHI       R3, R3, R1 
    /*000057fc*/ ADDLS       R3, R3, R1 
    /*00005800*/ LDR         R1, [R4, #1996]             @ 0x7cc 
    /*00005804*/ SUBLS       R3, R3, R0 
    /*00005808*/ CMP         R1, #0 
    /*0000580c*/ BNE         H264E_GetStreamBufStat_x5848
    /*00005810*/ SUB         R2, R2, R0 
    /*00005814*/ LDR         R1, [R4, #2000]             @ 0x7d0 
    /*00005818*/ CLZ         R2, R2 
    /*0000581c*/ LSR         R2, R2, #5 
    /*00005820*/ CMP         R1, R3 
    /*00005824*/ ORRNE       R2, R2, #1 
    /*00005828*/ CMP         R2, #0 
    /*0000582c*/ BNE         H264E_GetStreamBufStat_x5848
    H264E_GetStreamBufStat_x5830:
    /*00005830*/ MOV         R0, R5 
    /*00005834*/ ADD         R1, SP, #12 
    /*00005838*/ BL          0x0000000000005838          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000583c*/ MOV         R0, #0 
    /*00005840*/ ADD         SP, SP, #20 
    /*00005844*/ POP         {R4, R5, PC} 
    H264E_GetStreamBufStat_x5848:
    /*00005848*/ LDR         R1, [R4, #1980]             @ 0x7bc 
    /*0000584c*/ LDR         R2, [R4, #1976]             @ 0x7b8 
    /*00005850*/ CMP         R1, R2 
    /*00005854*/ BCS         H264E_GetStreamBufStat_x5830
    /*00005858*/ CMP         R3, #896                    @ 0x380 
    /*0000585c*/ BLE         H264E_GetStreamBufStat_x5830
    /*00005860*/ MOV         R0, R5 
    /*00005864*/ ADD         R1, SP, #12 
    /*00005868*/ BL          0x0000000000005868          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000586c*/ MOV         R0, #1 
    /*00005870*/ ADD         SP, SP, #20 
    /*00005874*/ POP         {R4, R5, PC} 
    H264E_GetStreamBufStat_x5878:
    /*00005878*/ STR         R0, [SP, #4] 
    /*0000587c*/ MOVW        R2, #5198                   @ 0x144e 
    /*00005880*/ MOV         R1, #10 
    /*00005884*/ STR         R2, [SP] 
    /*00005888*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x2a8] 
    /*0000588c*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb2c] 
    /*00005890*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x2a8] 
    /*00005894*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb2c] 
    /*00005898*/ MOV         R0, #3 
    /*0000589c*/ BL          0x000000000000589C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000058a0*/ MOV         R0, R4 
    /*000058a4*/ ADD         SP, SP, #20 
    /*000058a8*/ POP         {R4, R5, PC} 
FUNC_END H264E_GetStreamBufStat


FUNC_BEGIN H264E_InitGopModeAttr
    /*000058ac*/ PUSH        {R4, R5, R6, LR} 
    /*000058b0*/ SUB         SP, SP, #16 
    /*000058b4*/ MOV         R3, #0 
    /*000058b8*/ MOV         R6, R1 
    /*000058bc*/ MOV         R5, R0 
    /*000058c0*/ STR         R3, [SP, #8] 
    /*000058c4*/ STR         R3, [SP, #4] 
    /*000058c8*/ STR         R3, [SP, #12] 
    /*000058cc*/ BL          0x00000000000058CC          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*000058d0*/ SUBS        R4, R0, #0 
    /*000058d4*/ BEQ         H264E_InitGopModeAttr_x58e4
    H264E_InitGopModeAttr_x58d8:
    /*000058d8*/ MOV         R0, R4 
    /*000058dc*/ ADD         SP, SP, #16 
    /*000058e0*/ POP         {R4, R5, R6, PC} 
    H264E_InitGopModeAttr_x58e4:
    /*000058e4*/ MOV         R0, R5 
    /*000058e8*/ BL          0x00000000000058E8          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*000058ec*/ SUBS        R4, R0, #0 
    /*000058f0*/ BNE         H264E_InitGopModeAttr_x58d8
    /*000058f4*/ MOV         R0, R6 
    /*000058f8*/ BL          0x00000000000058F8          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*000058fc*/ SUBS        R4, R0, #0 
    /*00005900*/ BNE         H264E_InitGopModeAttr_x58d8
    /*00005904*/ LDR         R2, [R6] 
    /*00005908*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000590c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005910*/ MOV         R1, SP 
    /*00005914*/ ADD         R5, R3, R5, LSL #2 
    /*00005918*/ SUB         R2, R2, #4 
    /*0000591c*/ CMP         R2, #1 
    /*00005920*/ STRHI       R4, [SP, #8] 
    /*00005924*/ LDR         R5, [R5, #64]               @ 0x40 
    /*00005928*/ LDRLS       R2, [R6, #4] 
    /*0000592c*/ MOVHI       R3, #1 
    /*00005930*/ ADD         R6, R5, #9792               @ 0x2640 
    /*00005934*/ MOVLS       R3, #1 
    /*00005938*/ ADD         R6, R6, #40                 @ 0x28 
    /*0000593c*/ STRHI       R3, [SP, #12] 
    /*00005940*/ STRHI       R3, [SP, #4] 
    /*00005944*/ MOV         R0, R6 
    /*00005948*/ STRLS       R3, [SP, #12] 
    /*0000594c*/ STRLS       R3, [SP, #4] 
    /*00005950*/ STRLS       R2, [SP, #8] 
    /*00005954*/ BL          0x0000000000005954          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00005958*/ ADD         R0, R5, #9856               @ 0x2680 
    /*0000595c*/ ADD         R1, SP, #4 
    /*00005960*/ MOV         R2, #12 
    /*00005964*/ ADD         R0, R0, #48                 @ 0x30 
    /*00005968*/ BL          0x0000000000005968          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000596c*/ ADD         R2, R5, #12288              @ 0x3000 
    /*00005970*/ ADD         LR, R5, #8192               @ 0x2000 
    /*00005974*/ ADD         R5, R5, #4096               @ 0x1000 
    /*00005978*/ MOV         R3, #0 
    /*0000597c*/ MVN         IP, #0 
    /*00005980*/ STR         R3, [R2, #2196]             @ 0x894 
    /*00005984*/ MOV         R0, R6 
    /*00005988*/ STR         R3, [R2, #2020]             @ 0x7e4 
    /*0000598c*/ MOV         R1, SP 
    /*00005990*/ STR         IP, [R2, #2012]             @ 0x7dc 
    /*00005994*/ STR         IP, [R2, #2016]             @ 0x7e0 
    /*00005998*/ STR         R3, [LR, #2160]             @ 0x870 
    /*0000599c*/ STR         R3, [R5, #3624]             @ 0xe28 
    /*000059a0*/ BL          0x00000000000059A0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000059a4*/ B           H264E_InitGopModeAttr_x58d8
FUNC_END H264E_InitGopModeAttr


FUNC_BEGIN H264eSetRcnOutPic
    /*000059a8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000059ac*/ ADD         R5, R0, #12288              @ 0x3000 
    /*000059b0*/ MOV         R4, R0 
    /*000059b4*/ SUB         SP, SP, #20 
    /*000059b8*/ LDR         R0, [R5, #1364]             @ 0x554 
    /*000059bc*/ CMP         R0, #1 
    /*000059c0*/ BEQ         H264eSetRcnOutPic_x5ac0
    /*000059c4*/ MOV         R0, #1 
    /*000059c8*/ BL          0x00000000000059C8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000059cc*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*000059d0*/ MOV         R1, #6 
    /*000059d4*/ LDR         IP, [R3, #328]              @ 0x148 
    /*000059d8*/ LDRD        R2, [R3, #120]              @ 0x78 
    /*000059dc*/ STR         R1, [SP] 
    /*000059e0*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000059e4*/ MOV         R0, IP 
    /*000059e8*/ BLX         R1 
    /*000059ec*/ SUBS        R3, R0, #0 
    /*000059f0*/ BNE         H264eSetRcnOutPic_x5ad8
    H264eSetRcnOutPic_x59f4:
    /*000059f4*/ MOV         R0, #1 
    /*000059f8*/ BL          0x00000000000059F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000059fc*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*00005a00*/ MOV         R1, #6 
    /*00005a04*/ ADD         R2, R3, #416                @ 0x1a0 
    /*00005a08*/ LDR         IP, [R3, #348]              @ 0x15c 
    H264eSetRcnOutPic_x5a0c:
    /*00005a0c*/ LDRD        R2, [R2, #-8] 
    /*00005a10*/ STR         R1, [SP] 
    /*00005a14*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00005a18*/ MOV         R0, IP 
    /*00005a1c*/ BLX         R1 
    /*00005a20*/ CMP         R0, #0 
    /*00005a24*/ BNE         H264eSetRcnOutPic_x5a70
    H264eSetRcnOutPic_x5a28:
    /*00005a28*/ ADD         R0, R4, #8192               @ 0x2000 
    /*00005a2c*/ LDR         R2, [R0, #2900]             @ 0xb54 
    /*00005a30*/ LDR         R1, [R0, #2888]             @ 0xb48 
    /*00005a34*/ CMP         R2, R1 
    /*00005a38*/ BGE         H264eSetRcnOutPic_x5a60
    /*00005a3c*/ LDR         R3, [R0, #2892]             @ 0xb4c 
    /*00005a40*/ ADD         R2, R2, #1 
    /*00005a44*/ LDR         IP, [R5, #992]              @ 0x3e0 
    /*00005a48*/ SUBS        R3, R3, #1 
    /*00005a4c*/ ADDMI       R3, R3, R1 
    /*00005a50*/ LDR         R1, [R0, #2884]             @ 0xb44 
    /*00005a54*/ STR         IP, [R1, R3, LSL #2] 
    /*00005a58*/ STR         R2, [R0, #2900]             @ 0xb54 
    /*00005a5c*/ STR         R3, [R0, #2892]             @ 0xb4c 
    H264eSetRcnOutPic_x5a60:
    /*00005a60*/ MOV         R3, #0 
    /*00005a64*/ STR         R3, [R5, #992]              @ 0x3e0 
    /*00005a68*/ ADD         SP, SP, #20 
    /*00005a6c*/ POP         {R4, R5, R6, R7, PC} 
    H264eSetRcnOutPic_x5a70:
    /*00005a70*/ LDR         IP, [R5, #992]              @ 0x3e0 
    /*00005a74*/ MOV         R3, R0 
    /*00005a78*/ MOV         R2, #796                    @ 0x31c 
    /*00005a7c*/ MOVW        R0, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbdc] 
    /*00005a80*/ ADD         R1, IP, #416                @ 0x1a0 
    /*00005a84*/ MOVT        R0, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbdc] 
    /*00005a88*/ LDRD        R6, [R1, #-8] 
    /*00005a8c*/ LDR         R1, [PC, #132]              @ 0x0000000000005b18 
    /*00005a90*/ STRD        R6, [SP, #8] 
    /*00005a94*/ LDR         IP, [IP, #348]              @ 0x15c 
    /*00005a98*/ STR         IP, [SP] 
    /*00005a9c*/ BL          0x0000000000005A9C          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00005aa0*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb98] 
    /*00005aa4*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00005aa8*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb98] 
    /*00005aac*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00005ab0*/ MOVW        R2, #797                    @ 0x31d 
    /*00005ab4*/ LDR         R1, [PC, #92]               @ 0x0000000000005b18 
    /*00005ab8*/ BL          0x0000000000005AB8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005abc*/ B           H264eSetRcnOutPic_x5a28
    H264eSetRcnOutPic_x5ac0:
    /*00005ac0*/ BL          0x0000000000005AC0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005ac4*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*00005ac8*/ MOV         R1, #6 
    /*00005acc*/ ADD         R2, R3, #416                @ 0x1a0 
    /*00005ad0*/ LDR         IP, [R3, #328]              @ 0x148 
    /*00005ad4*/ B           H264eSetRcnOutPic_x5a0c
    H264eSetRcnOutPic_x5ad8:
    /*00005ad8*/ LDR         IP, [R5, #992]              @ 0x3e0 
    /*00005adc*/ MOVW        R2, #786                    @ 0x312 
    /*00005ae0*/ LDR         R1, [PC, #48]               @ 0x0000000000005b18 
    /*00005ae4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb64] 
    /*00005ae8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb64] 
    /*00005aec*/ LDR         IP, [IP, #328]              @ 0x148 
    /*00005af0*/ STR         IP, [SP] 
    /*00005af4*/ BL          0x0000000000005AF4          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00005af8*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb98] 
    /*00005afc*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00005b00*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb98] 
    /*00005b04*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00005b08*/ MOVW        R2, #787                    @ 0x313 
    /*00005b0c*/ LDR         R1, [PC, #4]                @ 0x0000000000005b18 
    /*00005b10*/ BL          0x0000000000005B10          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005b14*/ B           H264eSetRcnOutPic_x59f4
    /*00005b18*/ ANDEQ       R0, R0, R0, ASR #5 
FUNC_END H264eSetRcnOutPic


FUNC_BEGIN H264e_GetVeduState
    /*00005b1c*/ PUSH        {R4, R5, R6, LR} 
    /*00005b20*/ LDR         R2, [R2, #4] 
    /*00005b24*/ CMP         R2, #1 
    /*00005b28*/ MOVEQ       R4, #0 
    /*00005b2c*/ BEQ         H264e_GetVeduState_x5c00
    /*00005b30*/ CMP         R2, #0 
    /*00005b34*/ MOV         R6, R1 
    /*00005b38*/ BNE         H264e_GetVeduState_x5c08
    /*00005b3c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005b40*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005b44*/ ADD         R0, R3, R0, LSL #2 
    /*00005b48*/ LDR         R5, [R0, #64]               @ 0x40 
    /*00005b4c*/ ADD         R3, R5, #12288              @ 0x3000 
    /*00005b50*/ LDR         R2, [R3, #2040]             @ 0x7f8 
    /*00005b54*/ CMP         R2, #0 
    /*00005b58*/ MVNEQ       R3, #0 
    /*00005b5c*/ BEQ         H264e_GetVeduState_x5ba4
    /*00005b60*/ LDR         R3, [R3, #2060]             @ 0x80c 
    /*00005b64*/ CMP         R3, #0 
    /*00005b68*/ BEQ         H264e_GetVeduState_x5c64
    /*00005b6c*/ LDRB        R3, [R3] 
    /*00005b70*/ LDR         R1, [R5, #744]              @ 0x2e8 
    /*00005b74*/ CMP         R3, #1 
    /*00005b78*/ LDR         R2, [R5, #748]              @ 0x2ec 
    /*00005b7c*/ MVNNE       R3, #2 
    /*00005b80*/ MVNEQ       R3, #0 
    /*00005b84*/ CMP         R1, #1 
    /*00005b88*/ MVNEQ       R4, #16 
    /*00005b8c*/ MVNNE       R4, #0 
    /*00005b90*/ CMP         R2, #1 
    /*00005b94*/ AND         R3, R3, R4 
    /*00005b98*/ MVNEQ       R4, #32 
    /*00005b9c*/ MVNNE       R4, #0 
    /*00005ba0*/ AND         R3, R3, R4 
    H264e_GetVeduState_x5ba4:
    /*00005ba4*/ LDR         R2, [R5, #724]              @ 0x2d4 
    /*00005ba8*/ CMP         R2, #1 
    /*00005bac*/ MVNNE       R4, #1 
    /*00005bb0*/ MVNEQ       R4, #0 
    /*00005bb4*/ CMP         R6, #0 
    /*00005bb8*/ AND         R4, R4, R3 
    /*00005bbc*/ BEQ         H264e_GetVeduState_x5c40
    /*00005bc0*/ LDR         R3, [R5, #728]              @ 0x2d8 
    /*00005bc4*/ LDR         R1, [R5, #736]              @ 0x2e0 
    /*00005bc8*/ CMP         R3, #1 
    /*00005bcc*/ LDR         R2, [R5, #752]              @ 0x2f0 
    /*00005bd0*/ MVNEQ       R3, #4 
    /*00005bd4*/ MVNNE       R3, #0 
    /*00005bd8*/ CMP         R1, #1 
    /*00005bdc*/ AND         R3, R3, R4 
    /*00005be0*/ MVNNE       R4, #8 
    /*00005be4*/ MVNEQ       R4, #0 
    /*00005be8*/ CMP         R2, #1 
    /*00005bec*/ AND         R3, R3, R4 
    /*00005bf0*/ MVNEQ       R4, #64                     @ 0x40 
    /*00005bf4*/ MVNNE       R4, #0 
    /*00005bf8*/ AND         R4, R4, R3 
    /*00005bfc*/ UXTB        R4, R4 
    H264e_GetVeduState_x5c00:
    /*00005c00*/ MOV         R0, R4 
    /*00005c04*/ POP         {R4, R5, R6, PC} 
    H264e_GetVeduState_x5c08:
    /*00005c08*/ MOV         R1, R0 
    /*00005c0c*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc2c] 
    /*00005c10*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc2c] 
    /*00005c14*/ MOV         R4, #255                    @ 0xff 
    /*00005c18*/ BL          0x0000000000005C18          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00005c1c*/ MOVW        R2, #3276                   @ 0xccc 
    /*00005c20*/ LDR         R1, [PC, #96]               @ 0x0000000000005c88 
    /*00005c24*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb98] 
    /*00005c28*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00005c2c*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb98] 
    /*00005c30*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00005c34*/ BL          0x0000000000005C34          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005c38*/ MOV         R0, R4 
    /*00005c3c*/ POP         {R4, R5, R6, PC} 
    H264e_GetVeduState_x5c40:
    /*00005c40*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb98] 
    /*00005c44*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00005c48*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb98] 
    /*00005c4c*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00005c50*/ MOVW        R2, #3270                   @ 0xcc6 
    /*00005c54*/ LDR         R1, [PC, #44]               @ 0x0000000000005c88 
    /*00005c58*/ UXTB        R4, R4 
    /*00005c5c*/ BL          0x0000000000005C5C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005c60*/ B           H264e_GetVeduState_x5c00
    H264e_GetVeduState_x5c64:
    /*00005c64*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb98] 
    /*00005c68*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00005c6c*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb98] 
    /*00005c70*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00005c74*/ MOV         R2, #3248                   @ 0xcb0 
    /*00005c78*/ LDR         R1, [PC, #8]                @ 0x0000000000005c88 
    /*00005c7c*/ BL          0x0000000000005C7C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005c80*/ MVN         R3, #0 
    /*00005c84*/ B           H264e_GetVeduState_x5ba4
    /*00005c88*/ LDRDEQ      R0, [R0], -R4 
FUNC_END H264e_GetVeduState


FUNC_BEGIN H264eInitParamSet
    /*00005c8c*/ ADD         R1, R0, #9728               @ 0x2600 
    /*00005c90*/ MOV         R2, #16 
    /*00005c94*/ PUSH        {R4, LR} 
    /*00005c98*/ MOV         R4, R0 
    /*00005c9c*/ MOV         R0, R1 
    /*00005ca0*/ ADD         R1, R1, #32 
    /*00005ca4*/ ADD         R0, R0, #48                 @ 0x30 
    /*00005ca8*/ BL          0x0000000000005CA8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005cac*/ MOV         R0, R4 
    /*00005cb0*/ BL          0x0000000000005CB0          @ H264eInitSPS [R_ARM_CALL: .text+0x1f5c] 
    /*00005cb4*/ MOV         R0, R4 
    /*00005cb8*/ BL          0x0000000000005CB8          @ H264eInitPPSI [R_ARM_CALL: .text+0x2400] 
    /*00005cbc*/ MOV         R0, R4 
    /*00005cc0*/ BL          0x0000000000005CC0          @ H264eInitPPSP [R_ARM_CALL: .text+0x251c] 
    /*00005cc4*/ MOV         R0, R4 
    /*00005cc8*/ BL          0x0000000000005CC8          @ H264eSpsCrop [R_ARM_CALL: .text+0x2384] 
    /*00005ccc*/ ADD         R3, R4, #9600               @ 0x2580 
    /*00005cd0*/ ADD         R1, R4, #7744               @ 0x1e40 
    /*00005cd4*/ ADD         R3, R3, #16 
    /*00005cd8*/ ADD         R1, R1, #56                 @ 0x38 
    /*00005cdc*/ ADD         R2, R4, #384                @ 0x180 
    /*00005ce0*/ MOV         R0, R4 
    /*00005ce4*/ BL          0x0000000000005CE4          @ H264eEncodeSPS [R_ARM_CALL: .text+0x29bc] 
    /*00005ce8*/ CMP         R0, #384                    @ 0x180 
    /*00005cec*/ STR         R0, [R4, #704]              @ 0x2c0 
    /*00005cf0*/ STR         R0, [R4, #720]              @ 0x2d0 
    /*00005cf4*/ BHI         H264eInitParamSet_x5d54
    H264eInitParamSet_x5cf8:
    /*00005cf8*/ ADD         R2, R4, #8064               @ 0x1f80 
    /*00005cfc*/ ADD         R1, R4, R0 
    /*00005d00*/ ADD         R2, R2, #4 
    /*00005d04*/ LDR         R0, [R4, #968]              @ 0x3c8 
    /*00005d08*/ BL          0x0000000000005D08          @ H264eEncodePPS [R_ARM_CALL: .text+0x3394] 
    /*00005d0c*/ LDR         R3, [R4, #720]              @ 0x2d0 
    /*00005d10*/ STR         R0, [R4, #708]              @ 0x2c4 
    /*00005d14*/ ADD         R0, R0, R3 
    /*00005d18*/ CMP         R0, #384                    @ 0x180 
    /*00005d1c*/ STR         R0, [R4, #720]              @ 0x2d0 
    /*00005d20*/ BHI         H264eInitParamSet_x5d78
    /*00005d24*/ MOV         R0, R4 
    /*00005d28*/ BL          0x0000000000005D28          @ H264eDoublePps [R_ARM_CALL: .text+0x3e2c] 
    /*00005d2c*/ CMP         R0, #1 
    /*00005d30*/ BEQ         H264eInitParamSet_x5da4
    H264eInitParamSet_x5d34:
    /*00005d34*/ ADD         R3, R4, #4096               @ 0x1000 
    /*00005d38*/ MOV         R2, #0 
    /*00005d3c*/ LDR         R1, [R3, #3972]             @ 0xf84 
    /*00005d40*/ STR         R1, [R3, #4040]             @ 0xfc8 
    /*00005d44*/ STR         R2, [R4, #712]              @ 0x2c8 
    H264eInitParamSet_x5d48:
    /*00005d48*/ MOV         R0, #0 
    /*00005d4c*/ STR         R0, [R4, #716]              @ 0x2cc 
    /*00005d50*/ POP         {R4, PC} 
    H264eInitParamSet_x5d54:
    /*00005d54*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc4c] 
    /*00005d58*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00005d5c*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc4c] 
    /*00005d60*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00005d64*/ MOVW        R2, #301                    @ 0x12d 
    /*00005d68*/ LDR         R1, [PC, #140]              @ 0x0000000000005dfc 
    /*00005d6c*/ BL          0x0000000000005D6C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005d70*/ LDR         R0, [R4, #704]              @ 0x2c0 
    /*00005d74*/ B           H264eInitParamSet_x5cf8
    H264eInitParamSet_x5d78:
    /*00005d78*/ MOVW        R2, #305                    @ 0x131 
    /*00005d7c*/ LDR         R1, [PC, #120]              @ 0x0000000000005dfc 
    /*00005d80*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc4c] 
    /*00005d84*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00005d88*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc4c] 
    /*00005d8c*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00005d90*/ BL          0x0000000000005D90          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005d94*/ MOV         R0, R4 
    /*00005d98*/ BL          0x0000000000005D98          @ H264eDoublePps [R_ARM_CALL: .text+0x3e2c] 
    /*00005d9c*/ CMP         R0, #1 
    /*00005da0*/ BNE         H264eInitParamSet_x5d34
    H264eInitParamSet_x5da4:
    /*00005da4*/ LDR         R3, [R4, #708]              @ 0x2c4 
    /*00005da8*/ ADD         R2, R4, #8128               @ 0x1fc0 
    /*00005dac*/ LDR         R1, [R4, #704]              @ 0x2c0 
    /*00005db0*/ ADD         R2, R2, #8 
    /*00005db4*/ LDR         R0, [R4, #968]              @ 0x3c8 
    /*00005db8*/ ADD         R1, R1, R3 
    /*00005dbc*/ ADD         R1, R4, R1 
    /*00005dc0*/ BL          0x0000000000005DC0          @ H264eEncodePPS [R_ARM_CALL: .text+0x3394] 
    /*00005dc4*/ LDR         R3, [R4, #720]              @ 0x2d0 
    /*00005dc8*/ STR         R0, [R4, #712]              @ 0x2c8 
    /*00005dcc*/ ADD         R0, R0, R3 
    /*00005dd0*/ CMP         R0, #384                    @ 0x180 
    /*00005dd4*/ STR         R0, [R4, #720]              @ 0x2d0 
    /*00005dd8*/ BLS         H264eInitParamSet_x5d48
    /*00005ddc*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc4c] 
    /*00005de0*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00005de4*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc4c] 
    /*00005de8*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00005dec*/ MOVW        R2, #314                    @ 0x13a 
    /*00005df0*/ LDR         R1, [PC, #4]                @ 0x0000000000005dfc 
    /*00005df4*/ BL          0x0000000000005DF4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005df8*/ B           H264eInitParamSet_x5d48
    /*00005dfc*/ ANDEQ       R0, R0, R8, ROR #5 
FUNC_END H264eInitParamSet


FUNC_BEGIN H264E_Init
    /*00005e00*/ MOV         R0, #0 
    H264E_Init_x5e04:
    /*00005e04*/ B           H264E_Init_x5e04            @ H264E_DRV_Init [R_ARM_JUMP24: .text+0x129d4] 
FUNC_END H264E_Init


FUNC_BEGIN H264e_CheckRefParam
    /*00005e08*/ PUSH        {R4, R5, LR} 
    /*00005e0c*/ SUB         SP, SP, #20 
    /*00005e10*/ MOV         R4, R1 
    /*00005e14*/ MOV         R5, R0 
    /*00005e18*/ BL          0x0000000000005E18          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00005e1c*/ CMP         R0, #0 
    /*00005e20*/ BEQ         H264e_CheckRefParam_x5e2c
    H264e_CheckRefParam_x5e24:
    /*00005e24*/ ADD         SP, SP, #20 
    /*00005e28*/ POP         {R4, R5, PC} 
    H264e_CheckRefParam_x5e2c:
    /*00005e2c*/ MOV         R0, R4 
    /*00005e30*/ BL          0x0000000000005E30          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00005e34*/ CMP         R0, #0 
    /*00005e38*/ BNE         H264e_CheckRefParam_x5e24
    /*00005e3c*/ LDR         IP, [R5] 
    /*00005e40*/ CMP         IP, #0 
    /*00005e44*/ MOVWEQ      R3, #4604                   @ 0x11fc 
    /*00005e48*/ MOVWEQ      R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc80] 
    /*00005e4c*/ STREQ       R3, [SP] 
    /*00005e50*/ MOVTEQ      R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc80] 
    /*00005e54*/ BEQ         H264e_CheckRefParam_x5fec
    /*00005e58*/ LDR         R1, [R5, #4] 
    /*00005e5c*/ CMP         R1, #255                    @ 0xff 
    /*00005e60*/ BHI         H264e_CheckRefParam_x5fdc
    /*00005e64*/ LDR         LR, [R5, #8] 
    /*00005e68*/ CMP         LR, #1 
    /*00005e6c*/ MOVWHI      R3, #4621                   @ 0x120d 
    /*00005e70*/ MOVWHI      R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd00] 
    /*00005e74*/ STRHI       R3, [SP] 
    /*00005e78*/ MOVTHI      R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd00] 
    /*00005e7c*/ BHI         H264e_CheckRefParam_x5fec
    /*00005e80*/ AND         R5, LR, #1 
    /*00005e84*/ LDR         R3, [R4] 
    /*00005e88*/ CMP         IP, #1 
    /*00005e8c*/ MOVNE       R2, #0 
    /*00005e90*/ ANDEQ       R2, R5, #1 
    /*00005e94*/ CMP         R1, #0 
    /*00005e98*/ MOVNE       R2, #0 
    /*00005e9c*/ ANDEQ       R2, R2, #1 
    /*00005ea0*/ CMP         R2, #0 
    /*00005ea4*/ BEQ         H264e_CheckRefParam_x5f08
    H264e_CheckRefParam_x5ea8:
    /*00005ea8*/ SUB         R2, R3, #2 
    /*00005eac*/ CMP         R2, #1 
    /*00005eb0*/ BLS         H264e_CheckRefParam_x5fbc
    /*00005eb4*/ CMP         IP, #16 
    /*00005eb8*/ MOVLS       IP, #0 
    /*00005ebc*/ ANDHI       IP, R5, #1 
    /*00005ec0*/ CMP         R3, #4 
    /*00005ec4*/ MOVNE       IP, #0 
    /*00005ec8*/ ANDEQ       IP, IP, #1 
    /*00005ecc*/ CMP         IP, #0 
    /*00005ed0*/ BNE         H264e_CheckRefParam_x5f88
    H264e_CheckRefParam_x5ed4:
    /*00005ed4*/ SUB         R3, R3, #4 
    /*00005ed8*/ CMP         R3, #1 
    /*00005edc*/ BHI         H264e_CheckRefParam_x5e24
    /*00005ee0*/ LDR         R3, [R4, #4] 
    /*00005ee4*/ CMP         R1, R3 
    /*00005ee8*/ BEQ         H264e_CheckRefParam_x5e24
    /*00005eec*/ STR         R1, [SP, #8] 
    /*00005ef0*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xed4] 
    /*00005ef4*/ MOVW        R1, #4673                   @ 0x1241 
    /*00005ef8*/ STR         R3, [SP, #4] 
    /*00005efc*/ STR         R1, [SP] 
    /*00005f00*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0xed4] 
    /*00005f04*/ B           H264e_CheckRefParam_x5f48
    H264e_CheckRefParam_x5f08:
    /*00005f08*/ CMP         R3, #1 
    /*00005f0c*/ BNE         H264e_CheckRefParam_x5ea8
    /*00005f10*/ LDR         R3, [R4, #4] 
    /*00005f14*/ CMP         R3, #0 
    /*00005f18*/ BEQ         H264e_CheckRefParam_x5e24
    /*00005f1c*/ CMP         R1, #0 
    /*00005f20*/ BEQ         H264e_CheckRefParam_x5f64
    /*00005f24*/ MLA         IP, R1, IP, IP 
    /*00005f28*/ CMP         R3, IP 
    /*00005f2c*/ BEQ         H264e_CheckRefParam_x5f64
    /*00005f30*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd4c] 
    /*00005f34*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd4c] 
    /*00005f38*/ MOVW        R1, #4640                   @ 0x1220 
    /*00005f3c*/ STR         IP, [SP, #8] 
    /*00005f40*/ STR         R3, [SP, #4] 
    /*00005f44*/ STR         R1, [SP] 
    H264e_CheckRefParam_x5f48:
    /*00005f48*/ LDR         R3, [PC, #184]              @ 0x0000000000006008 
    /*00005f4c*/ MOV         R1, #10 
    /*00005f50*/ MOV         R0, #3 
    /*00005f54*/ BL          0x0000000000005F54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005f58*/ MOVW        R0, #32771                  @ 0x8003 
    /*00005f5c*/ MOVT        R0, #40970                  @ 0xa00a 
    /*00005f60*/ B           H264e_CheckRefParam_x5e24
    H264e_CheckRefParam_x5f64:
    /*00005f64*/ CMP         LR, #0 
    /*00005f68*/ BNE         H264e_CheckRefParam_x5e24
    /*00005f6c*/ MOVW        R1, #4648                   @ 0x1228 
    /*00005f70*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd90] 
    /*00005f74*/ STR         LR, [SP, #8] 
    /*00005f78*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd90] 
    /*00005f7c*/ STR         R3, [SP, #4] 
    /*00005f80*/ STR         R1, [SP] 
    /*00005f84*/ B           H264e_CheckRefParam_x5f48
    H264e_CheckRefParam_x5f88:
    /*00005f88*/ MOV         R2, #4 
    /*00005f8c*/ STR         R2, [SP, #4] 
    /*00005f90*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe78] 
    /*00005f94*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe78] 
    /*00005f98*/ MOVW        R3, #4662                   @ 0x1236 
    /*00005f9c*/ STR         R3, [SP] 
    H264e_CheckRefParam_x5fa0:
    /*00005fa0*/ LDR         R3, [PC, #96]               @ 0x0000000000006008 
    /*00005fa4*/ MOV         R1, #10 
    /*00005fa8*/ MOV         R0, #3 
    /*00005fac*/ BL          0x0000000000005FAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005fb0*/ MOVW        R0, #32771                  @ 0x8003 
    /*00005fb4*/ MOVT        R0, #40970                  @ 0xa00a 
    /*00005fb8*/ B           H264e_CheckRefParam_x5e24
    H264e_CheckRefParam_x5fbc:
    /*00005fbc*/ CMP         LR, #0 
    /*00005fc0*/ BNE         H264e_CheckRefParam_x5ed4
    /*00005fc4*/ STR         R3, [SP, #4] 
    /*00005fc8*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe14] 
    /*00005fcc*/ MOVW        R3, #4655                   @ 0x122f 
    /*00005fd0*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe14] 
    /*00005fd4*/ STR         R3, [SP] 
    /*00005fd8*/ B           H264e_CheckRefParam_x5fa0
    H264e_CheckRefParam_x5fdc:
    /*00005fdc*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcc0] 
    /*00005fe0*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcc0] 
    /*00005fe4*/ MOVW        R3, #4613                   @ 0x1205 
    /*00005fe8*/ STR         R3, [SP] 
    H264e_CheckRefParam_x5fec:
    /*00005fec*/ LDR         R3, [PC, #20]               @ 0x0000000000006008 
    /*00005ff0*/ MOV         R1, #10 
    /*00005ff4*/ MOV         R0, #3 
    /*00005ff8*/ BL          0x0000000000005FF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005ffc*/ MOVW        R0, #32771                  @ 0x8003 
    /*00006000*/ MOVT        R0, #40970                  @ 0xa00a 
    /*00006004*/ B           H264e_CheckRefParam_x5e24
    /*00006008*/ STRDEQ      R0, [R0], -IP 
FUNC_END H264e_CheckRefParam


FUNC_BEGIN H264E_GetUniqueID
    /*0000600c*/ PUSH        {R4, R5, R6, LR} 
    /*00006010*/ MOV         R4, R1 
    /*00006014*/ MOV         R5, R0 
    /*00006018*/ BL          0x0000000000006018          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000601c*/ CMP         R0, #0 
    /*00006020*/ POPNE       {R4, R5, R6, PC} 
    /*00006024*/ MOV         R0, R4 
    /*00006028*/ BL          0x0000000000006028          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000602c*/ CMP         R0, #0 
    /*00006030*/ MOVWEQ      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006034*/ MOVTEQ      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006038*/ LDREQ       R3, [R3, R5, LSL #2] 
    /*0000603c*/ STREQ       R3, [R4] 
    /*00006040*/ POP         {R4, R5, R6, PC} 
FUNC_END H264E_GetUniqueID


FUNC_BEGIN H264E_GetModPara
    /*00006044*/ PUSH        {R4, LR} 
    /*00006048*/ MOV         R4, R0 
    /*0000604c*/ BL          0x000000000000604C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00006050*/ CMP         R0, #0 
    /*00006054*/ POPNE       {R4, PC} 
    /*00006058*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000605c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006060*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00006064*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00006068*/ LDR         R1, [R3, #128]              @ 0x80 
    /*0000606c*/ STR         R1, [R4] 
    /*00006070*/ LDR         IP, [R2] 
    /*00006074*/ LDR         R1, [R2, #4] 
    /*00006078*/ LDR         R2, [R3, #132]              @ 0x84 
    /*0000607c*/ LDR         R3, [R3, #136]              @ 0x88 
    /*00006080*/ STR         IP, [R4, #12] 
    /*00006084*/ STR         R1, [R4, #8] 
    /*00006088*/ STR         R2, [R4, #4] 
    /*0000608c*/ STR         R3, [R4, #16] 
    /*00006090*/ POP         {R4, PC} 
FUNC_END H264E_GetModPara


FUNC_BEGIN H264E_GetChnAttr
    /*00006094*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00006098*/ MOV         R6, R1 
    /*0000609c*/ MOV         R7, R2 
    /*000060a0*/ MOV         R5, R0 
    /*000060a4*/ BL          0x00000000000060A4          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*000060a8*/ SUBS        R4, R0, #0 
    /*000060ac*/ BEQ         H264E_GetChnAttr_x60b8
    H264E_GetChnAttr_x60b0:
    /*000060b0*/ MOV         R0, R4 
    /*000060b4*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264E_GetChnAttr_x60b8:
    /*000060b8*/ MOV         R0, R5 
    /*000060bc*/ BL          0x00000000000060BC          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*000060c0*/ SUBS        R4, R0, #0 
    /*000060c4*/ BNE         H264E_GetChnAttr_x60b0
    /*000060c8*/ MOV         R0, R6 
    /*000060cc*/ BL          0x00000000000060CC          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*000060d0*/ SUBS        R4, R0, #0 
    /*000060d4*/ BNE         H264E_GetChnAttr_x60b0
    /*000060d8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000060dc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000060e0*/ ADD         R5, R3, R5, LSL #2 
    /*000060e4*/ MOV         R0, R6 
    /*000060e8*/ MOV         R2, #60                     @ 0x3c 
    /*000060ec*/ LDR         R5, [R5, #64]               @ 0x40 
    /*000060f0*/ ADD         R1, R5, #952                @ 0x3b8 
    /*000060f4*/ BL          0x00000000000060F4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000060f8*/ ADD         R1, R5, #14336              @ 0x3800 
    /*000060fc*/ ADD         R1, R1, #36                 @ 0x24 
    /*00006100*/ MOV         R0, R7 
    /*00006104*/ MOV         R2, #16 
    /*00006108*/ BL          0x0000000000006108          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000610c*/ B           H264E_GetChnAttr_x60b0
FUNC_END H264E_GetChnAttr


FUNC_BEGIN H264E_GetStreamInfo
    /*00006110*/ PUSH        {R4, R5, R6, LR} 
    /*00006114*/ MOV         R6, R1 
    /*00006118*/ MOV         R5, R0 
    /*0000611c*/ BL          0x000000000000611C          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00006120*/ SUBS        R4, R0, #0 
    /*00006124*/ BEQ         H264E_GetStreamInfo_x6130
    H264E_GetStreamInfo_x6128:
    /*00006128*/ MOV         R0, R4 
    /*0000612c*/ POP         {R4, R5, R6, PC} 
    H264E_GetStreamInfo_x6130:
    /*00006130*/ MOV         R0, R5 
    /*00006134*/ BL          0x0000000000006134          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00006138*/ SUBS        R4, R0, #0 
    /*0000613c*/ BNE         H264E_GetStreamInfo_x6128
    /*00006140*/ MOV         R0, R6 
    /*00006144*/ BL          0x0000000000006144          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00006148*/ SUBS        R4, R0, #0 
    /*0000614c*/ BNE         H264E_GetStreamInfo_x6128
    /*00006150*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006154*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006158*/ ADD         R5, R3, R5, LSL #2 
    /*0000615c*/ MOV         R0, R6 
    /*00006160*/ MOV         R2, #44                     @ 0x2c 
    /*00006164*/ LDR         R5, [R5, #64]               @ 0x40 
    /*00006168*/ ADD         R1, R5, #9152               @ 0x23c0 
    /*0000616c*/ ADD         R5, R5, #8192               @ 0x2000 
    /*00006170*/ ADD         R1, R1, #52                 @ 0x34 
    /*00006174*/ BL          0x0000000000006174          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006178*/ STR         R4, [R5, #1012]             @ 0x3f4 
    /*0000617c*/ B           H264E_GetStreamInfo_x6128
FUNC_END H264E_GetStreamInfo


FUNC_BEGIN H264E_GetStreamAdvanceInfo
    /*00006180*/ PUSH        {R4, R5, R6, LR} 
    /*00006184*/ MOV         R6, R1 
    /*00006188*/ MOV         R5, R0 
    /*0000618c*/ BL          0x000000000000618C          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00006190*/ SUBS        R4, R0, #0 
    /*00006194*/ BEQ         H264E_GetStreamAdvanceInfo_x61a0
    H264E_GetStreamAdvanceInfo_x6198:
    /*00006198*/ MOV         R0, R4 
    /*0000619c*/ POP         {R4, R5, R6, PC} 
    H264E_GetStreamAdvanceInfo_x61a0:
    /*000061a0*/ MOV         R0, R5 
    /*000061a4*/ BL          0x00000000000061A4          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*000061a8*/ SUBS        R4, R0, #0 
    /*000061ac*/ BNE         H264E_GetStreamAdvanceInfo_x6198
    /*000061b0*/ MOV         R0, R6 
    /*000061b4*/ BL          0x00000000000061B4          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*000061b8*/ SUBS        R4, R0, #0 
    /*000061bc*/ BNE         H264E_GetStreamAdvanceInfo_x6198
    /*000061c0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000061c4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000061c8*/ ADD         R5, R3, R5, LSL #2 
    /*000061cc*/ MOV         R0, R6 
    /*000061d0*/ MOV         R2, #312                    @ 0x138 
    /*000061d4*/ LDR         R1, [R5, #64]               @ 0x40 
    /*000061d8*/ ADD         R1, R1, #9216               @ 0x2400 
    /*000061dc*/ ADD         R1, R1, #32 
    /*000061e0*/ BL          0x00000000000061E0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000061e4*/ B           H264E_GetStreamAdvanceInfo_x6198
FUNC_END H264E_GetStreamAdvanceInfo


FUNC_BEGIN H264E_GetSliceSplit
    /*000061e8*/ PUSH        {R4, R5, R6, LR} 
    /*000061ec*/ MOV         R6, R1 
    /*000061f0*/ MOV         R5, R0 
    /*000061f4*/ BL          0x00000000000061F4          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*000061f8*/ SUBS        R4, R0, #0 
    /*000061fc*/ BEQ         H264E_GetSliceSplit_x6208
    H264E_GetSliceSplit_x6200:
    /*00006200*/ MOV         R0, R4 
    /*00006204*/ POP         {R4, R5, R6, PC} 
    H264E_GetSliceSplit_x6208:
    /*00006208*/ MOV         R0, R5 
    /*0000620c*/ BL          0x000000000000620C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00006210*/ SUBS        R4, R0, #0 
    /*00006214*/ BNE         H264E_GetSliceSplit_x6200
    /*00006218*/ MOV         R0, R6 
    /*0000621c*/ BL          0x000000000000621C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00006220*/ SUBS        R4, R0, #0 
    /*00006224*/ BNE         H264E_GetSliceSplit_x6200
    /*00006228*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000622c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006230*/ ADD         R5, R3, R5, LSL #2 
    /*00006234*/ MOV         R0, R6 
    /*00006238*/ MOV         R2, #8 
    /*0000623c*/ LDR         R1, [R5, #64]               @ 0x40 
    /*00006240*/ ADD         R1, R1, #9536               @ 0x2540 
    /*00006244*/ ADD         R1, R1, #28 
    /*00006248*/ BL          0x0000000000006248          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000624c*/ B           H264E_GetSliceSplit_x6200
FUNC_END H264E_GetSliceSplit


FUNC_BEGIN H264E_GetInterPred
    /*00006250*/ PUSH        {R4, R5, R6, LR} 
    /*00006254*/ MOV         R4, R1 
    /*00006258*/ MOV         R5, R0 
    /*0000625c*/ BL          0x000000000000625C          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00006260*/ CMP         R0, #0 
    /*00006264*/ POPNE       {R4, R5, R6, PC} 
    /*00006268*/ MOV         R0, R5 
    /*0000626c*/ BL          0x000000000000626C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00006270*/ CMP         R0, #0 
    /*00006274*/ POPNE       {R4, R5, R6, PC} 
    /*00006278*/ MOV         R0, R4 
    /*0000627c*/ BL          0x000000000000627C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00006280*/ CMP         R0, #0 
    /*00006284*/ POPNE       {R4, R5, R6, PC} 
    /*00006288*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000628c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006290*/ ADD         R5, R3, R5, LSL #2 
    /*00006294*/ LDR         R3, [R5, #64]               @ 0x40 
    /*00006298*/ ADD         R3, R3, #8192               @ 0x2000 
    /*0000629c*/ LDR         R2, [R3, #1420]             @ 0x58c 
    /*000062a0*/ STR         R2, [R4, #24] 
    /*000062a4*/ LDR         R2, [R3, #1404]             @ 0x57c 
    /*000062a8*/ STR         R2, [R4, #8] 
    /*000062ac*/ LDR         R2, [R3, #1408]             @ 0x580 
    /*000062b0*/ STR         R2, [R4, #12] 
    /*000062b4*/ LDR         R2, [R3, #1412]             @ 0x584 
    /*000062b8*/ STR         R2, [R4, #16] 
    /*000062bc*/ LDR         R2, [R3, #1416]             @ 0x588 
    /*000062c0*/ STR         R2, [R4, #20] 
    /*000062c4*/ LDR         R2, [R3, #1396]             @ 0x574 
    /*000062c8*/ STR         R2, [R4] 
    /*000062cc*/ LDR         R3, [R3, #1400]             @ 0x578 
    /*000062d0*/ STR         R3, [R4, #4] 
    /*000062d4*/ POP         {R4, R5, R6, PC} 
FUNC_END H264E_GetInterPred


FUNC_BEGIN H264E_GetIntraPred
    /*000062d8*/ PUSH        {R4, R5, R6, LR} 
    /*000062dc*/ MOV         R5, R1 
    /*000062e0*/ MOV         R4, R0 
    /*000062e4*/ BL          0x00000000000062E4          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*000062e8*/ CMP         R0, #0 
    /*000062ec*/ POPNE       {R4, R5, R6, PC} 
    /*000062f0*/ MOV         R0, R4 
    /*000062f4*/ BL          0x00000000000062F4          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*000062f8*/ CMP         R0, #0 
    /*000062fc*/ POPNE       {R4, R5, R6, PC} 
    /*00006300*/ MOV         R0, R5 
    /*00006304*/ BL          0x0000000000006304          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00006308*/ CMP         R0, #0 
    /*0000630c*/ POPNE       {R4, R5, R6, PC} 
    /*00006310*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006314*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006318*/ ADD         R4, R3, R4, LSL #2 
    /*0000631c*/ LDR         R3, [R4, #64]               @ 0x40 
    /*00006320*/ ADD         R3, R3, #8192               @ 0x2000 
    /*00006324*/ LDR         R3, [R3, #1388]             @ 0x56c 
    /*00006328*/ STR         R3, [R5] 
    /*0000632c*/ POP         {R4, R5, R6, PC} 
FUNC_END H264E_GetIntraPred


FUNC_BEGIN H264E_GetTrans
    /*00006330*/ PUSH        {R4, R5, R6, LR} 
    /*00006334*/ MOV         R6, R1 
    /*00006338*/ MOV         R5, R0 
    /*0000633c*/ BL          0x000000000000633C          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00006340*/ SUBS        R4, R0, #0 
    /*00006344*/ BEQ         H264E_GetTrans_x6350
    H264E_GetTrans_x6348:
    /*00006348*/ MOV         R0, R4 
    /*0000634c*/ POP         {R4, R5, R6, PC} 
    H264E_GetTrans_x6350:
    /*00006350*/ MOV         R0, R5 
    /*00006354*/ BL          0x0000000000006354          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00006358*/ SUBS        R4, R0, #0 
    /*0000635c*/ BNE         H264E_GetTrans_x6348
    /*00006360*/ MOV         R0, R6 
    /*00006364*/ BL          0x0000000000006364          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00006368*/ SUBS        R4, R0, #0 
    /*0000636c*/ BNE         H264E_GetTrans_x6348
    /*00006370*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006374*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006378*/ ADD         R5, R3, R5, LSL #2 
    /*0000637c*/ MOV         R0, R6 
    /*00006380*/ MOV         R2, #144                    @ 0x90 
    /*00006384*/ LDR         R1, [R5, #64]               @ 0x40 
    /*00006388*/ ADD         R1, R1, #9600               @ 0x2580 
    /*0000638c*/ ADD         R1, R1, #16 
    /*00006390*/ BL          0x0000000000006390          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006394*/ B           H264E_GetTrans_x6348
FUNC_END H264E_GetTrans


FUNC_BEGIN H264E_GetEntropy
    /*00006398*/ PUSH        {R4, R5, R6, LR} 
    /*0000639c*/ MOV         R6, R1 
    /*000063a0*/ MOV         R5, R0 
    /*000063a4*/ BL          0x00000000000063A4          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*000063a8*/ SUBS        R4, R0, #0 
    /*000063ac*/ BEQ         H264E_GetEntropy_x63b8
    H264E_GetEntropy_x63b0:
    /*000063b0*/ MOV         R0, R4 
    /*000063b4*/ POP         {R4, R5, R6, PC} 
    H264E_GetEntropy_x63b8:
    /*000063b8*/ MOV         R0, R5 
    /*000063bc*/ BL          0x00000000000063BC          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*000063c0*/ SUBS        R4, R0, #0 
    /*000063c4*/ BNE         H264E_GetEntropy_x63b0
    /*000063c8*/ MOV         R0, R6 
    /*000063cc*/ BL          0x00000000000063CC          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*000063d0*/ SUBS        R4, R0, #0 
    /*000063d4*/ BNE         H264E_GetEntropy_x63b0
    /*000063d8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000063dc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000063e0*/ ADD         R5, R3, R5, LSL #2 
    /*000063e4*/ MOV         R0, R6 
    /*000063e8*/ MOV         R2, #16 
    /*000063ec*/ LDR         R1, [R5, #64]               @ 0x40 
    /*000063f0*/ ADD         R1, R1, #9728               @ 0x2600 
    /*000063f4*/ ADD         R1, R1, #32 
    /*000063f8*/ BL          0x00000000000063F8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000063fc*/ B           H264E_GetEntropy_x63b0
FUNC_END H264E_GetEntropy


FUNC_BEGIN H264E_GetPoc
    /*00006400*/ PUSH        {R4, R5, R6, LR} 
    /*00006404*/ MOV         R5, R1 
    /*00006408*/ MOV         R4, R0 
    /*0000640c*/ BL          0x000000000000640C          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00006410*/ CMP         R0, #0 
    /*00006414*/ POPNE       {R4, R5, R6, PC} 
    /*00006418*/ MOV         R0, R4 
    /*0000641c*/ BL          0x000000000000641C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00006420*/ CMP         R0, #0 
    /*00006424*/ POPNE       {R4, R5, R6, PC} 
    /*00006428*/ MOV         R0, R5 
    /*0000642c*/ BL          0x000000000000642C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00006430*/ CMP         R0, #0 
    /*00006434*/ POPNE       {R4, R5, R6, PC} 
    /*00006438*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000643c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006440*/ ADD         R4, R3, R4, LSL #2 
    /*00006444*/ LDR         R3, [R4, #64]               @ 0x40 
    /*00006448*/ ADD         R3, R3, #4096               @ 0x1000 
    /*0000644c*/ LDR         R3, [R3, #3624]             @ 0xe28 
    /*00006450*/ STR         R3, [R5] 
    /*00006454*/ POP         {R4, R5, R6, PC} 
FUNC_END H264E_GetPoc


FUNC_BEGIN H264E_GetRefParam
    /*00006458*/ PUSH        {R4, R5, R6, LR} 
    /*0000645c*/ MOV         R6, R1 
    /*00006460*/ MOV         R5, R0 
    /*00006464*/ BL          0x0000000000006464          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00006468*/ SUBS        R4, R0, #0 
    /*0000646c*/ BEQ         H264E_GetRefParam_x6478
    H264E_GetRefParam_x6470:
    /*00006470*/ MOV         R0, R4 
    /*00006474*/ POP         {R4, R5, R6, PC} 
    H264E_GetRefParam_x6478:
    /*00006478*/ MOV         R0, R5 
    /*0000647c*/ BL          0x000000000000647C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00006480*/ SUBS        R4, R0, #0 
    /*00006484*/ BNE         H264E_GetRefParam_x6470
    /*00006488*/ MOV         R0, R6 
    /*0000648c*/ BL          0x000000000000648C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00006490*/ SUBS        R4, R0, #0 
    /*00006494*/ BNE         H264E_GetRefParam_x6470
    /*00006498*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000649c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000064a0*/ ADD         R5, R3, R5, LSL #2 
    /*000064a4*/ MOV         R0, R6 
    /*000064a8*/ MOV         R2, #12 
    /*000064ac*/ LDR         R1, [R5, #64]               @ 0x40 
    /*000064b0*/ ADD         R1, R1, #9856               @ 0x2680 
    /*000064b4*/ ADD         R1, R1, #48                 @ 0x30 
    /*000064b8*/ BL          0x00000000000064B8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000064bc*/ B           H264E_GetRefParam_x6470
FUNC_END H264E_GetRefParam


FUNC_BEGIN H264E_GetDblk
    /*000064c0*/ PUSH        {R4, R5, R6, LR} 
    /*000064c4*/ MOV         R6, R1 
    /*000064c8*/ MOV         R5, R0 
    /*000064cc*/ BL          0x00000000000064CC          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*000064d0*/ SUBS        R4, R0, #0 
    /*000064d4*/ BEQ         H264E_GetDblk_x64e0
    H264E_GetDblk_x64d8:
    /*000064d8*/ MOV         R0, R4 
    /*000064dc*/ POP         {R4, R5, R6, PC} 
    H264E_GetDblk_x64e0:
    /*000064e0*/ MOV         R0, R5 
    /*000064e4*/ BL          0x00000000000064E4          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*000064e8*/ SUBS        R4, R0, #0 
    /*000064ec*/ BNE         H264E_GetDblk_x64d8
    /*000064f0*/ MOV         R0, R6 
    /*000064f4*/ BL          0x00000000000064F4          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*000064f8*/ SUBS        R4, R0, #0 
    /*000064fc*/ BNE         H264E_GetDblk_x64d8
    /*00006500*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006504*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006508*/ ADD         R5, R3, R5, LSL #2 
    /*0000650c*/ MOV         R0, R6 
    /*00006510*/ MOV         R2, #12 
    /*00006514*/ LDR         R1, [R5, #64]               @ 0x40 
    /*00006518*/ ADD         R1, R1, #9792               @ 0x2640 
    /*0000651c*/ BL          0x000000000000651C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006520*/ B           H264E_GetDblk_x64d8
FUNC_END H264E_GetDblk


FUNC_BEGIN H264E_GetVui
    /*00006524*/ PUSH        {R4, R5, R6, LR} 
    /*00006528*/ MOV         R6, R1 
    /*0000652c*/ MOV         R5, R0 
    /*00006530*/ BL          0x0000000000006530          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00006534*/ SUBS        R4, R0, #0 
    /*00006538*/ BEQ         H264E_GetVui_x6544
    H264E_GetVui_x653c:
    /*0000653c*/ MOV         R0, R4 
    /*00006540*/ POP         {R4, R5, R6, PC} 
    H264E_GetVui_x6544:
    /*00006544*/ MOV         R0, R5 
    /*00006548*/ BL          0x0000000000006548          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000654c*/ SUBS        R4, R0, #0 
    /*00006550*/ BNE         H264E_GetVui_x653c
    /*00006554*/ MOV         R0, R6 
    /*00006558*/ BL          0x0000000000006558          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000655c*/ SUBS        R4, R0, #0 
    /*00006560*/ BNE         H264E_GetVui_x653c
    /*00006564*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006568*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000656c*/ ADD         R5, R3, R5, LSL #2 
    /*00006570*/ MOV         R0, R6 
    /*00006574*/ MOV         R2, #28 
    /*00006578*/ LDR         R1, [R5, #64]               @ 0x40 
    /*0000657c*/ ADD         R1, R1, #9792               @ 0x2640 
    /*00006580*/ ADD         R1, R1, #12 
    /*00006584*/ BL          0x0000000000006584          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006588*/ B           H264E_GetVui_x653c
FUNC_END H264E_GetVui


FUNC_BEGIN H264E_GetH264eIdrPicId
    /*0000658c*/ PUSH        {R4, R5, R6, LR} 
    /*00006590*/ MOV         R6, R1 
    /*00006594*/ MOV         R5, R0 
    /*00006598*/ BL          0x0000000000006598          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000659c*/ SUBS        R4, R0, #0 
    /*000065a0*/ BEQ         H264E_GetH264eIdrPicId_x65ac
    H264E_GetH264eIdrPicId_x65a4:
    /*000065a4*/ MOV         R0, R4 
    /*000065a8*/ POP         {R4, R5, R6, PC} 
    H264E_GetH264eIdrPicId_x65ac:
    /*000065ac*/ MOV         R0, R5 
    /*000065b0*/ BL          0x00000000000065B0          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*000065b4*/ SUBS        R4, R0, #0 
    /*000065b8*/ BNE         H264E_GetH264eIdrPicId_x65a4
    /*000065bc*/ MOV         R0, R6 
    /*000065c0*/ BL          0x00000000000065C0          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*000065c4*/ SUBS        R4, R0, #0 
    /*000065c8*/ BNE         H264E_GetH264eIdrPicId_x65a4
    /*000065cc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000065d0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000065d4*/ ADD         R5, R3, R5, LSL #2 
    /*000065d8*/ MOV         R0, R6 
    /*000065dc*/ MOV         R2, #8 
    /*000065e0*/ LDR         R1, [R5, #64]               @ 0x40 
    /*000065e4*/ ADD         R1, R1, #13632              @ 0x3540 
    /*000065e8*/ ADD         R1, R1, #4 
    /*000065ec*/ BL          0x00000000000065EC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000065f0*/ B           H264E_GetH264eIdrPicId_x65a4
FUNC_END H264E_GetH264eIdrPicId


FUNC_BEGIN H264E_GetIntraRefresh
    /*000065f4*/ PUSH        {R4, R5, R6, LR} 
    /*000065f8*/ MOV         R6, R1 
    /*000065fc*/ MOV         R5, R0 
    /*00006600*/ BL          0x0000000000006600          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00006604*/ SUBS        R4, R0, #0 
    /*00006608*/ BEQ         H264E_GetIntraRefresh_x6614
    H264E_GetIntraRefresh_x660c:
    /*0000660c*/ MOV         R0, R4 
    /*00006610*/ POP         {R4, R5, R6, PC} 
    H264E_GetIntraRefresh_x6614:
    /*00006614*/ MOV         R0, R5 
    /*00006618*/ BL          0x0000000000006618          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000661c*/ SUBS        R4, R0, #0 
    /*00006620*/ BNE         H264E_GetIntraRefresh_x660c
    /*00006624*/ MOV         R0, R6 
    /*00006628*/ BL          0x0000000000006628          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000662c*/ SUBS        R4, R0, #0 
    /*00006630*/ BNE         H264E_GetIntraRefresh_x660c
    /*00006634*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006638*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000663c*/ ADD         R5, R3, R5, LSL #2 
    /*00006640*/ MOV         R0, R6 
    /*00006644*/ MOV         R2, #16 
    /*00006648*/ LDR         R1, [R5, #64]               @ 0x40 
    /*0000664c*/ ADD         R1, R1, #10304              @ 0x2840 
    /*00006650*/ ADD         R1, R1, #48                 @ 0x30 
    /*00006654*/ BL          0x0000000000006654          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006658*/ B           H264E_GetIntraRefresh_x660c
FUNC_END H264E_GetIntraRefresh


FUNC_BEGIN H264E_GetPredModeCfg
    /*0000665c*/ PUSH        {R4, R5, R6, LR} 
    /*00006660*/ MOV         R6, R1 
    /*00006664*/ MOV         R5, R0 
    /*00006668*/ BL          0x0000000000006668          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000666c*/ SUBS        R4, R0, #0 
    /*00006670*/ BEQ         H264E_GetPredModeCfg_x667c
    H264E_GetPredModeCfg_x6674:
    /*00006674*/ MOV         R0, R4 
    /*00006678*/ POP         {R4, R5, R6, PC} 
    H264E_GetPredModeCfg_x667c:
    /*0000667c*/ MOV         R0, R5 
    /*00006680*/ BL          0x0000000000006680          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00006684*/ SUBS        R4, R0, #0 
    /*00006688*/ BNE         H264E_GetPredModeCfg_x6674
    /*0000668c*/ MOV         R0, R6 
    /*00006690*/ BL          0x0000000000006690          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00006694*/ SUBS        R4, R0, #0 
    /*00006698*/ BNE         H264E_GetPredModeCfg_x6674
    /*0000669c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000066a0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000066a4*/ ADD         R5, R3, R5, LSL #2 
    /*000066a8*/ MOV         R0, R6 
    /*000066ac*/ MOV         R2, #36                     @ 0x24 
    /*000066b0*/ LDR         R1, [R5, #64]               @ 0x40 
    /*000066b4*/ ADD         R1, R1, #14400              @ 0x3840 
    /*000066b8*/ ADD         R1, R1, #44                 @ 0x2c 
    /*000066bc*/ BL          0x00000000000066BC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000066c0*/ B           H264E_GetPredModeCfg_x6674
FUNC_END H264E_GetPredModeCfg


FUNC_BEGIN H264e_GetChnParam
    /*000066c4*/ PUSH        {R4, R5, R6, LR} 
    /*000066c8*/ MOV         R5, R1 
    /*000066cc*/ MOV         R4, R0 
    /*000066d0*/ BL          0x00000000000066D0          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*000066d4*/ CMP         R0, #0 
    /*000066d8*/ POPNE       {R4, R5, R6, PC} 
    /*000066dc*/ MOV         R0, R4 
    /*000066e0*/ BL          0x00000000000066E0          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*000066e4*/ CMP         R0, #0 
    /*000066e8*/ POPNE       {R4, R5, R6, PC} 
    /*000066ec*/ MOV         R0, R5 
    /*000066f0*/ BL          0x00000000000066F0          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*000066f4*/ CMP         R0, #0 
    /*000066f8*/ POPNE       {R4, R5, R6, PC} 
    /*000066fc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006700*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006704*/ ADD         R4, R3, R4, LSL #2 
    /*00006708*/ LDR         R3, [R4, #64]               @ 0x40 
    /*0000670c*/ ADD         R3, R3, #12288              @ 0x3000 
    /*00006710*/ LDR         R2, [R3, #2004]             @ 0x7d4 
    /*00006714*/ STR         R2, [R5] 
    /*00006718*/ LDR         R3, [R3, #1976]             @ 0x7b8 
    /*0000671c*/ STR         R3, [R5, #8] 
    /*00006720*/ POP         {R4, R5, R6, PC} 
FUNC_END H264e_GetChnParam


FUNC_BEGIN H264E_GetSceneMode
    /*00006724*/ PUSH        {R4, R5, R6, LR} 
    /*00006728*/ MOV         R5, R1 
    /*0000672c*/ MOV         R4, R0 
    /*00006730*/ BL          0x0000000000006730          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00006734*/ CMP         R0, #0 
    /*00006738*/ POPNE       {R4, R5, R6, PC} 
    /*0000673c*/ MOV         R0, R4 
    /*00006740*/ BL          0x0000000000006740          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00006744*/ CMP         R0, #0 
    /*00006748*/ POPNE       {R4, R5, R6, PC} 
    /*0000674c*/ MOV         R0, R5 
    /*00006750*/ BL          0x0000000000006750          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00006754*/ CMP         R0, #0 
    /*00006758*/ POPNE       {R4, R5, R6, PC} 
    /*0000675c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006760*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006764*/ ADD         R4, R3, R4, LSL #2 
    /*00006768*/ LDR         R3, [R4, #64]               @ 0x40 
    /*0000676c*/ ADD         R3, R3, #12288              @ 0x3000 
    /*00006770*/ LDR         R3, [R3, #2636]             @ 0xa4c 
    /*00006774*/ STR         R3, [R5] 
    /*00006778*/ POP         {R4, R5, R6, PC} 
FUNC_END H264E_GetSceneMode


FUNC_BEGIN H264E_GetPrediction
    /*0000677c*/ PUSH        {R4, R5, R6, LR} 
    /*00006780*/ MOV         R4, R1 
    /*00006784*/ MOV         R5, R0 
    /*00006788*/ BL          0x0000000000006788          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000678c*/ CMP         R0, #0 
    /*00006790*/ POPNE       {R4, R5, R6, PC} 
    /*00006794*/ MOV         R0, R5 
    /*00006798*/ BL          0x0000000000006798          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000679c*/ CMP         R0, #0 
    /*000067a0*/ POPNE       {R4, R5, R6, PC} 
    /*000067a4*/ MOV         R0, R4 
    /*000067a8*/ BL          0x00000000000067A8          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*000067ac*/ CMP         R0, #0 
    /*000067b0*/ POPNE       {R4, R5, R6, PC} 
    /*000067b4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000067b8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000067bc*/ ADD         R5, R3, R5, LSL #2 
    /*000067c0*/ LDR         R3, [R5, #64]               @ 0x40 
    /*000067c4*/ ADD         R3, R3, #12288              @ 0x3000 
    /*000067c8*/ LDR         R2, [R3, #2580]             @ 0xa14 
    /*000067cc*/ STR         R2, [R4] 
    /*000067d0*/ LDR         R2, [R3, #2612]             @ 0xa34 
    /*000067d4*/ SUB         R1, R2, #1 
    /*000067d8*/ CMP         R1, #6 
    /*000067dc*/ RSBLS       R2, R2, #8 
    /*000067e0*/ STR         R2, [R4, #32] 
    /*000067e4*/ LDR         R2, [R3, #2608]             @ 0xa30 
    /*000067e8*/ SUB         R1, R2, #1 
    /*000067ec*/ CMP         R1, #6 
    /*000067f0*/ RSBLS       R2, R2, #8 
    /*000067f4*/ STR         R2, [R4, #28] 
    /*000067f8*/ LDR         R2, [R3, #2604]             @ 0xa2c 
    /*000067fc*/ SUB         R1, R2, #1 
    /*00006800*/ CMP         R1, #6 
    /*00006804*/ RSBLS       R2, R2, #8 
    /*00006808*/ STR         R2, [R4, #24] 
    /*0000680c*/ LDR         R2, [R3, #2600]             @ 0xa28 
    /*00006810*/ SUB         R1, R2, #1 
    /*00006814*/ CMP         R1, #6 
    /*00006818*/ RSBLS       R2, R2, #8 
    /*0000681c*/ STR         R2, [R4, #20] 
    /*00006820*/ LDR         R2, [R3, #2596]             @ 0xa24 
    /*00006824*/ SUB         R1, R2, #1 
    /*00006828*/ CMP         R1, #6 
    /*0000682c*/ RSBLS       R2, R2, #8 
    /*00006830*/ STR         R2, [R4, #16] 
    /*00006834*/ LDR         R2, [R3, #2592]             @ 0xa20 
    /*00006838*/ SUB         R1, R2, #1 
    /*0000683c*/ CMP         R1, #6 
    /*00006840*/ RSBLS       R2, R2, #8 
    /*00006844*/ STR         R2, [R4, #12] 
    /*00006848*/ LDR         R2, [R3, #2588]             @ 0xa1c 
    /*0000684c*/ SUB         R1, R2, #1 
    /*00006850*/ CMP         R1, #6 
    /*00006854*/ RSBLS       R2, R2, #8 
    /*00006858*/ STR         R2, [R4, #8] 
    /*0000685c*/ LDR         R3, [R3, #2584]             @ 0xa18 
    /*00006860*/ SUB         R2, R3, #1 
    /*00006864*/ CMP         R2, #6 
    /*00006868*/ RSBLS       R3, R3, #8 
    /*0000686c*/ STR         R3, [R4, #4] 
    /*00006870*/ POP         {R4, R5, R6, PC} 
FUNC_END H264E_GetPrediction


FUNC_BEGIN H264E_GetSkipBias
    /*00006874*/ PUSH        {R4, R5, R6, LR} 
    /*00006878*/ MOV         R6, R1 
    /*0000687c*/ MOV         R5, R0 
    /*00006880*/ BL          0x0000000000006880          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00006884*/ SUBS        R4, R0, #0 
    /*00006888*/ BEQ         H264E_GetSkipBias_x6894
    H264E_GetSkipBias_x688c:
    /*0000688c*/ MOV         R0, R4 
    /*00006890*/ POP         {R4, R5, R6, PC} 
    H264E_GetSkipBias_x6894:
    /*00006894*/ MOV         R0, R5 
    /*00006898*/ BL          0x0000000000006898          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000689c*/ SUBS        R4, R0, #0 
    /*000068a0*/ BNE         H264E_GetSkipBias_x688c
    /*000068a4*/ MOV         R0, R6 
    /*000068a8*/ BL          0x00000000000068A8          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*000068ac*/ SUBS        R4, R0, #0 
    /*000068b0*/ BNE         H264E_GetSkipBias_x688c
    /*000068b4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000068b8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000068bc*/ ADD         R5, R3, R5, LSL #2 
    /*000068c0*/ MOV         R0, R6 
    /*000068c4*/ MOV         R2, #20 
    /*000068c8*/ LDR         R1, [R5, #64]               @ 0x40 
    /*000068cc*/ ADD         R1, R1, #14848              @ 0x3a00 
    /*000068d0*/ ADD         R1, R1, #56                 @ 0x38 
    /*000068d4*/ BL          0x00000000000068D4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000068d8*/ B           H264E_GetSkipBias_x688c
FUNC_END H264E_GetSkipBias


FUNC_BEGIN H264E_SysResetChn
    /*000068dc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000068e0*/ SUB         SP, SP, #8 
    /*000068e4*/ MOV         R5, R0 
    /*000068e8*/ BL          0x00000000000068E8          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*000068ec*/ SUBS        R4, R0, #0 
    /*000068f0*/ BEQ         H264E_SysResetChn_x6900
    H264E_SysResetChn_x68f4:
    /*000068f4*/ MOV         R0, R4 
    /*000068f8*/ ADD         SP, SP, #8 
    /*000068fc*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264E_SysResetChn_x6900:
    /*00006900*/ MOV         R0, R5 
    /*00006904*/ BL          0x0000000000006904          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00006908*/ SUBS        R4, R0, #0 
    /*0000690c*/ BNE         H264E_SysResetChn_x68f4
    /*00006910*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006914*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006918*/ ADD         R5, R3, R5, LSL #2 
    /*0000691c*/ LDR         R6, [R5, #64]               @ 0x40 
    /*00006920*/ ADD         R5, R6, #12288              @ 0x3000 
    /*00006924*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*00006928*/ CMP         R3, #0 
    /*0000692c*/ BEQ         H264E_SysResetChn_x69dc
    /*00006930*/ LDR         R0, [R5, #1364]             @ 0x554 
    /*00006934*/ CMP         R0, #1 
    /*00006938*/ BEQ         H264E_SysResetChn_x6a00
    /*0000693c*/ MOV         R0, #1 
    /*00006940*/ MOV         R8, #6 
    /*00006944*/ BL          0x0000000000006944          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00006948*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*0000694c*/ LDR         IP, [R3, #328]              @ 0x148 
    /*00006950*/ LDRD        R2, [R3, #120]              @ 0x78 
    /*00006954*/ STR         R8, [SP] 
    /*00006958*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000695c*/ MOV         R0, IP 
    /*00006960*/ BLX         R1 
    /*00006964*/ MOV         R7, R0 
    /*00006968*/ MOV         R0, #1 
    /*0000696c*/ BL          0x000000000000696C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00006970*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*00006974*/ ADD         R2, R3, #416                @ 0x1a0 
    /*00006978*/ LDR         IP, [R3, #348]              @ 0x15c 
    /*0000697c*/ LDRD        R2, [R2, #-8] 
    /*00006980*/ STR         R8, [SP] 
    /*00006984*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00006988*/ MOV         R0, IP 
    /*0000698c*/ BLX         R1 
    /*00006990*/ ORR         R0, R7, R0 
    H264E_SysResetChn_x6994:
    /*00006994*/ CMP         R0, #0 
    /*00006998*/ BNE         H264E_SysResetChn_x6a2c
    H264E_SysResetChn_x699c:
    /*0000699c*/ ADD         R3, R6, #8192               @ 0x2000 
    /*000069a0*/ LDR         R2, [R3, #2900]             @ 0xb54 
    /*000069a4*/ LDR         R0, [R3, #2888]             @ 0xb48 
    /*000069a8*/ CMP         R2, R0 
    /*000069ac*/ BGE         H264E_SysResetChn_x69d4
    /*000069b0*/ LDR         R1, [R3, #2892]             @ 0xb4c 
    /*000069b4*/ ADD         R2, R2, #1 
    /*000069b8*/ LDR         IP, [R5, #992]              @ 0x3e0 
    /*000069bc*/ SUBS        R1, R1, #1 
    /*000069c0*/ ADDMI       R1, R1, R0 
    /*000069c4*/ LDR         R0, [R3, #2884]             @ 0xb44 
    /*000069c8*/ STR         IP, [R0, R1, LSL #2] 
    /*000069cc*/ STR         R2, [R3, #2900]             @ 0xb54 
    /*000069d0*/ STR         R1, [R3, #2892]             @ 0xb4c 
    H264E_SysResetChn_x69d4:
    /*000069d4*/ MOV         R3, #0 
    /*000069d8*/ STR         R3, [R5, #992]              @ 0x3e0 
    H264E_SysResetChn_x69dc:
    /*000069dc*/ ADD         R1, R6, #7744               @ 0x1e40 
    /*000069e0*/ ADD         R0, R6, #10432              @ 0x28c0 
    /*000069e4*/ LDR         R2, [R5, #1364]             @ 0x554 
    /*000069e8*/ ADD         R1, R1, #56                 @ 0x38 
    /*000069ec*/ ADD         R0, R0, #8 
    /*000069f0*/ BL          0x00000000000069F0          @ H264eDpbFlush [R_ARM_CALL: .text+0x10fec] 
    /*000069f4*/ MOV         R0, R4 
    /*000069f8*/ ADD         SP, SP, #8 
    /*000069fc*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264E_SysResetChn_x6a00:
    /*00006a00*/ BL          0x0000000000006A00          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00006a04*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*00006a08*/ MOV         R1, #6 
    /*00006a0c*/ ADD         R2, R3, #416                @ 0x1a0 
    /*00006a10*/ LDR         IP, [R3, #328]              @ 0x148 
    /*00006a14*/ LDRD        R2, [R2, #-8] 
    /*00006a18*/ STR         R1, [SP] 
    /*00006a1c*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00006a20*/ MOV         R0, IP 
    /*00006a24*/ BLX         R1 
    /*00006a28*/ B           H264E_SysResetChn_x6994
    H264E_SysResetChn_x6a2c:
    /*00006a2c*/ STR         R0, [SP, #4] 
    /*00006a30*/ MOVW        R3, #1608                   @ 0x648 
    /*00006a34*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf28] 
    /*00006a38*/ STR         R3, [SP] 
    /*00006a3c*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf28] 
    /*00006a40*/ LDR         R3, [PC, #12]               @ 0x0000000000006a54 
    /*00006a44*/ MOV         R1, #10 
    /*00006a48*/ MOV         R0, #3 
    /*00006a4c*/ BL          0x0000000000006A4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006a50*/ B           H264E_SysResetChn_x699c
    /*00006a54*/ ANDEQ       R0, R0, R0, LSL R3 
FUNC_END H264E_SysResetChn


FUNC_BEGIN H264E_ResetChn
    /*00006a58*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00006a5c*/ SUB         SP, SP, #20 
    /*00006a60*/ MOV         R8, R0 
    /*00006a64*/ BL          0x0000000000006A64          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00006a68*/ SUBS        R7, R0, #0 
    /*00006a6c*/ BEQ         H264E_ResetChn_x6a7c
    H264E_ResetChn_x6a70:
    /*00006a70*/ MOV         R0, R7 
    /*00006a74*/ ADD         SP, SP, #20 
    /*00006a78*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_ResetChn_x6a7c:
    /*00006a7c*/ MOV         R0, R8 
    /*00006a80*/ BL          0x0000000000006A80          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00006a84*/ SUBS        R7, R0, #0 
    /*00006a88*/ BNE         H264E_ResetChn_x6a70
    /*00006a8c*/ MOVW        R2, #0                      @ VencBufferCache [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00006a90*/ MOVT        R2, #0                      @ VencBufferCache [R_ARM_MOVT_ABS: +0x0] 
    /*00006a94*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006a98*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006a9c*/ LDR         R2, [R2] 
    /*00006aa0*/ ADD         R3, R3, R8, LSL #2 
    /*00006aa4*/ CMP         R2, #1 
    /*00006aa8*/ LDR         R4, [R3, #64]               @ 0x40 
    /*00006aac*/ ADD         R9, R4, #12288              @ 0x3000 
    /*00006ab0*/ BEQ         H264E_ResetChn_x6ca8
    H264E_ResetChn_x6ab4:
    /*00006ab4*/ MOV         R0, R8 
    /*00006ab8*/ BL          0x0000000000006AB8          @ H264eResetBuf [R_ARM_CALL: .text+0x1de8] 
    /*00006abc*/ LDR         R6, [R4, #1236]             @ 0x4d4 
    /*00006ac0*/ CMP         R6, #0 
    /*00006ac4*/ BLE         H264E_ResetChn_x6b88
    /*00006ac8*/ MOVW        R3, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf48] 
    /*00006acc*/ MOVT        R3, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf48] 
    /*00006ad0*/ MOVW        FP, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf84] 
    /*00006ad4*/ STR         R7, [SP, #12] 
    /*00006ad8*/ MOVT        FP, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf84] 
    /*00006adc*/ MOV         R2, R6 
    /*00006ae0*/ MOV         R5, #0 
    /*00006ae4*/ LDR         SL, [PC, #584]              @ 0x0000000000006d34 
    /*00006ae8*/ MOV         R7, R3 
    /*00006aec*/ B           H264E_ResetChn_x6b20
    H264E_ResetChn_x6af0:
    /*00006af0*/ LDR         R3, [R4, #1208]             @ 0x4b8 
    /*00006af4*/ ADD         R1, R1, #1 
    /*00006af8*/ LDR         R2, [R4, #1200]             @ 0x4b0 
    /*00006afc*/ SUBS        R3, R3, #1 
    /*00006b00*/ ADDMI       R3, R3, IP 
    /*00006b04*/ STR         R0, [R2, R3, LSL #2] 
    /*00006b08*/ STR         R1, [R4, #1216]             @ 0x4c0 
    /*00006b0c*/ STR         R3, [R4, #1208]             @ 0x4b8 
    H264E_ResetChn_x6b10:
    /*00006b10*/ ADD         R5, R5, #1 
    /*00006b14*/ CMP         R6, R5 
    /*00006b18*/ BEQ         H264E_ResetChn_x6b84
    H264E_ResetChn_x6b1c:
    /*00006b1c*/ LDR         R2, [R4, #1236]             @ 0x4d4 
    H264E_ResetChn_x6b20:
    /*00006b20*/ CMP         R2, #0 
    /*00006b24*/ BLE         H264E_ResetChn_x6c88
    /*00006b28*/ LDR         R3, [R4, #1232]             @ 0x4d0 
    /*00006b2c*/ SUB         R2, R2, #1 
    /*00006b30*/ LDR         IP, [R4, #1204]             @ 0x4b4 
    /*00006b34*/ SUBS        R3, R3, #1 
    /*00006b38*/ LDR         R0, [R4, #1220]             @ 0x4c4 
    /*00006b3c*/ LDRMI       R1, [R4, #1224]             @ 0x4c8 
    /*00006b40*/ ADDMI       R3, R3, R1 
    /*00006b44*/ LDR         R1, [R4, #1216]             @ 0x4c0 
    /*00006b48*/ CMP         R1, IP 
    /*00006b4c*/ LDR         R0, [R0, R3, LSL #2] 
    /*00006b50*/ STR         R2, [R4, #1236]             @ 0x4d4 
    /*00006b54*/ STR         R3, [R4, #1232]             @ 0x4d0 
    /*00006b58*/ BLT         H264E_ResetChn_x6af0
    /*00006b5c*/ MOVW        R2, #1673                   @ 0x689 
    /*00006b60*/ MOV         R3, SL 
    /*00006b64*/ STR         R2, [SP] 
    /*00006b68*/ MOV         R1, #10 
    /*00006b6c*/ MOV         R2, FP 
    /*00006b70*/ MOV         R0, #3 
    /*00006b74*/ ADD         R5, R5, #1 
    /*00006b78*/ BL          0x0000000000006B78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006b7c*/ CMP         R6, R5 
    /*00006b80*/ BNE         H264E_ResetChn_x6b1c
    H264E_ResetChn_x6b84:
    /*00006b84*/ LDR         R7, [SP, #12] 
    H264E_ResetChn_x6b88:
    /*00006b88*/ LDR         R3, [R9, #992]              @ 0x3e0 
    /*00006b8c*/ CMP         R3, #0 
    /*00006b90*/ ADDEQ       R5, R4, #8192               @ 0x2000 
    /*00006b94*/ BEQ         H264E_ResetChn_x6c44
    /*00006b98*/ LDR         R0, [R9, #1364]             @ 0x554 
    /*00006b9c*/ CMP         R0, #1 
    /*00006ba0*/ BEQ         H264E_ResetChn_x6ccc
    /*00006ba4*/ MOV         R0, #1 
    /*00006ba8*/ MOV         R6, #6 
    /*00006bac*/ BL          0x0000000000006BAC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00006bb0*/ LDR         R3, [R9, #992]              @ 0x3e0 
    /*00006bb4*/ LDR         IP, [R3, #328]              @ 0x148 
    /*00006bb8*/ LDRD        R2, [R3, #120]              @ 0x78 
    /*00006bbc*/ STR         R6, [SP] 
    /*00006bc0*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00006bc4*/ MOV         R0, IP 
    /*00006bc8*/ BLX         R1 
    /*00006bcc*/ MOV         R5, R0 
    /*00006bd0*/ MOV         R0, #1 
    /*00006bd4*/ BL          0x0000000000006BD4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00006bd8*/ LDR         R3, [R9, #992]              @ 0x3e0 
    /*00006bdc*/ ADD         R2, R3, #416                @ 0x1a0 
    /*00006be0*/ LDR         IP, [R3, #348]              @ 0x15c 
    /*00006be4*/ LDRD        R2, [R2, #-8] 
    /*00006be8*/ STR         R6, [SP] 
    /*00006bec*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00006bf0*/ MOV         R0, IP 
    /*00006bf4*/ BLX         R1 
    /*00006bf8*/ ORR         R5, R5, R0 
    H264E_ResetChn_x6bfc:
    /*00006bfc*/ CMP         R5, #0 
    /*00006c00*/ BNE         H264E_ResetChn_x6cfc
    /*00006c04*/ ADD         R5, R4, #8192               @ 0x2000 
    /*00006c08*/ LDR         R3, [R5, #2900]             @ 0xb54 
    /*00006c0c*/ LDR         R1, [R5, #2888]             @ 0xb48 
    /*00006c10*/ CMP         R3, R1 
    /*00006c14*/ BGE         H264E_ResetChn_x6c3c
    /*00006c18*/ LDR         R2, [R5, #2892]             @ 0xb4c 
    /*00006c1c*/ ADD         R3, R3, #1 
    /*00006c20*/ LDR         R0, [R9, #992]              @ 0x3e0 
    /*00006c24*/ SUBS        R2, R2, #1 
    /*00006c28*/ ADDMI       R2, R2, R1 
    /*00006c2c*/ LDR         R1, [R5, #2884]             @ 0xb44 
    /*00006c30*/ STR         R0, [R1, R2, LSL #2] 
    /*00006c34*/ STR         R3, [R5, #2900]             @ 0xb54 
    /*00006c38*/ STR         R2, [R5, #2892]             @ 0xb4c 
    H264E_ResetChn_x6c3c:
    /*00006c3c*/ MOV         R3, #0 
    /*00006c40*/ STR         R3, [R9, #992]              @ 0x3e0 
    H264E_ResetChn_x6c44:
    /*00006c44*/ ADD         R1, R4, #7744               @ 0x1e40 
    /*00006c48*/ ADD         R0, R4, #10432              @ 0x28c0 
    /*00006c4c*/ ADD         R1, R1, #56                 @ 0x38 
    /*00006c50*/ ADD         R0, R0, #8 
    /*00006c54*/ LDR         R2, [R9, #1364]             @ 0x554 
    /*00006c58*/ BL          0x0000000000006C58          @ H264eDpbFlush [R_ARM_CALL: .text+0x10fec] 
    /*00006c5c*/ LDR         R3, [R9, #1336]             @ 0x538 
    /*00006c60*/ CMP         R3, #1 
    /*00006c64*/ BEQ         H264E_ResetChn_x6d28
    H264E_ResetChn_x6c68:
    /*00006c68*/ MOV         R0, R4 
    /*00006c6c*/ LDR         R3, [R5, #2172]             @ 0x87c 
    /*00006c70*/ MOV         R1, R8 
    /*00006c74*/ ADD         R2, R4, #952                @ 0x3b8 
    /*00006c78*/ BL          0x0000000000006C78          @ H264eInitCtx [R_ARM_CALL: .text+0x4e3c] 
    /*00006c7c*/ MOV         R0, R7 
    /*00006c80*/ ADD         SP, SP, #20 
    /*00006c84*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_ResetChn_x6c88:
    /*00006c88*/ MOVW        R2, #1678                   @ 0x68e 
    /*00006c8c*/ MOV         R3, SL 
    /*00006c90*/ STR         R2, [SP] 
    /*00006c94*/ MOV         R1, #10 
    /*00006c98*/ MOV         R2, R7 
    /*00006c9c*/ MOV         R0, #3 
    /*00006ca0*/ BL          0x0000000000006CA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006ca4*/ B           H264E_ResetChn_x6b10
    H264E_ResetChn_x6ca8:
    /*00006ca8*/ LDR         R3, [R9, #2400]             @ 0x960 
    /*00006cac*/ CMP         R3, #0 
    /*00006cb0*/ BEQ         H264E_ResetChn_x6ab4
    /*00006cb4*/ LDR         R3, [R4, #1060]             @ 0x424 
    /*00006cb8*/ LDR         R1, [R4, #1064]             @ 0x428 
    /*00006cbc*/ LDR         R2, [R3, #8] 
    /*00006cc0*/ LDR         R0, [R3, #176]              @ 0xb0 
    /*00006cc4*/ BL          0x0000000000006CC4          @ hil_mmb_invalid_cache_byaddr [R_ARM_CALL: +0x0] 
    /*00006cc8*/ B           H264E_ResetChn_x6ab4
    H264E_ResetChn_x6ccc:
    /*00006ccc*/ BL          0x0000000000006CCC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00006cd0*/ LDR         R3, [R9, #992]              @ 0x3e0 
    /*00006cd4*/ MOV         R1, #6 
    /*00006cd8*/ ADD         R2, R3, #416                @ 0x1a0 
    /*00006cdc*/ LDR         IP, [R3, #328]              @ 0x148 
    /*00006ce0*/ LDRD        R2, [R2, #-8] 
    /*00006ce4*/ STR         R1, [SP] 
    /*00006ce8*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00006cec*/ MOV         R0, IP 
    /*00006cf0*/ BLX         R1 
    /*00006cf4*/ MOV         R5, R0 
    /*00006cf8*/ B           H264E_ResetChn_x6bfc
    H264E_ResetChn_x6cfc:
    /*00006cfc*/ MOVW        R3, #1697                   @ 0x6a1 
    /*00006d00*/ STR         R5, [SP, #4] 
    /*00006d04*/ STR         R3, [SP] 
    /*00006d08*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf28] 
    /*00006d0c*/ LDR         R3, [PC, #32]               @ 0x0000000000006d34 
    /*00006d10*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf28] 
    /*00006d14*/ MOV         R1, #10 
    /*00006d18*/ MOV         R0, #3 
    /*00006d1c*/ MOV         R7, R5 
    /*00006d20*/ BL          0x0000000000006D20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006d24*/ B           H264E_ResetChn_x6a70
    H264E_ResetChn_x6d28:
    /*00006d28*/ MOV         R0, R4 
    /*00006d2c*/ BL          0x0000000000006D2C          @ H264eTwoPassVB_UserSub [R_ARM_CALL: .text+0x4db8] 
    /*00006d30*/ B           H264E_ResetChn_x6c68
    /*00006d34*/ ANDEQ       R0, R0, R4, LSR #6 
FUNC_END H264E_ResetChn


FUNC_BEGIN H264E_InsertUserData
    /*00006d38*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00006d3c*/ SUB         SP, SP, #16 
    /*00006d40*/ MOV         R7, R1 
    /*00006d44*/ MOV         R6, R2 
    /*00006d48*/ MOV         R5, R0 
    /*00006d4c*/ BL          0x0000000000006D4C          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00006d50*/ SUBS        R4, R0, #0 
    /*00006d54*/ BEQ         H264E_InsertUserData_x6d64
    H264E_InsertUserData_x6d58:
    /*00006d58*/ MOV         R0, R4 
    /*00006d5c*/ ADD         SP, SP, #16 
    /*00006d60*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264E_InsertUserData_x6d64:
    /*00006d64*/ MOV         R0, R5 
    /*00006d68*/ BL          0x0000000000006D68          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00006d6c*/ SUBS        R4, R0, #0 
    /*00006d70*/ BNE         H264E_InsertUserData_x6d58
    /*00006d74*/ MOV         R0, R7 
    /*00006d78*/ BL          0x0000000000006D78          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00006d7c*/ SUBS        R4, R0, #0 
    /*00006d80*/ BNE         H264E_InsertUserData_x6d58
    /*00006d84*/ SUB         R3, R6, #1 
    /*00006d88*/ CMP         R3, #1024                   @ 0x400 
    /*00006d8c*/ BCS         H264E_InsertUserData_x6ec4
    /*00006d90*/ MOV         R1, R4 
    /*00006d94*/ MOV         R0, R6 
    /*00006d98*/ BL          0x0000000000006D98          @ osal_kmalloc [R_ARM_CALL: +0x0] 
    /*00006d9c*/ SUBS        R8, R0, #0 
    /*00006da0*/ BEQ         H264E_InsertUserData_x6f64
    /*00006da4*/ MOV         R2, R6 
    /*00006da8*/ MOV         R1, R4 
    /*00006dac*/ BL          0x0000000000006DAC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00006db0*/ MOV         R2, R6 
    /*00006db4*/ MOV         R1, R7 
    /*00006db8*/ MOV         R0, R8 
    /*00006dbc*/ BL          0x0000000000006DBC          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*00006dc0*/ CMP         R0, #0 
    /*00006dc4*/ BNE         H264E_InsertUserData_x6ef0
    /*00006dc8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006dcc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006dd0*/ ADD         R5, R3, R5, LSL #2 
    /*00006dd4*/ ADD         R1, SP, #12 
    /*00006dd8*/ LDR         R5, [R5, #64]               @ 0x40 
    /*00006ddc*/ ADD         R7, R5, #9792               @ 0x2640 
    /*00006de0*/ ADD         R7, R7, #40                 @ 0x28 
    /*00006de4*/ MOV         R0, R7 
    /*00006de8*/ BL          0x0000000000006DE8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006dec*/ LDR         R2, [R5, #1216]             @ 0x4c0 
    /*00006df0*/ CMP         R2, #0 
    /*00006df4*/ BEQ         H264E_InsertUserData_x6f24
    /*00006df8*/ BLE         H264E_InsertUserData_x6ea0
    /*00006dfc*/ LDR         R3, [R5, #1212]             @ 0x4bc 
    /*00006e00*/ SUB         R0, R2, #1 
    /*00006e04*/ LDR         IP, [R5, #1200]             @ 0x4b0 
    /*00006e08*/ MOV         R2, R6 
    /*00006e0c*/ SUBS        R3, R3, #1 
    /*00006e10*/ LDRMI       R1, [R5, #1204]             @ 0x4b4 
    /*00006e14*/ ADDMI       R3, R3, R1 
    /*00006e18*/ MOV         R1, R8 
    /*00006e1c*/ LDR         R6, [IP, R3, LSL #2] 
    /*00006e20*/ STR         R3, [R5, #1212]             @ 0x4bc 
    /*00006e24*/ STR         R0, [R5, #1216]             @ 0x4c0 
    /*00006e28*/ ADD         R3, R6, #4 
    /*00006e2c*/ LDR         R0, [R6] 
    /*00006e30*/ BL          0x0000000000006E30          @ H264eWriteSEI [R_ARM_CALL: .text+0x1990] 
    /*00006e34*/ LDR         R3, [R5, #1236]             @ 0x4d4 
    /*00006e38*/ LDR         R1, [R5, #1224]             @ 0x4c8 
    /*00006e3c*/ CMP         R3, R1 
    /*00006e40*/ BLT         H264E_InsertUserData_x6e7c
    /*00006e44*/ MOVW        R3, #1802                   @ 0x70a 
    /*00006e48*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10b4] 
    /*00006e4c*/ STR         R3, [SP] 
    /*00006e50*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10b4] 
    /*00006e54*/ LDR         R3, [PC, #308]              @ 0x0000000000006f90 
    /*00006e58*/ MOV         R1, #10 
    /*00006e5c*/ MOV         R0, #3 
    /*00006e60*/ BL          0x0000000000006E60          @ HI_LOG [R_ARM_CALL: +0x0] 
    H264E_InsertUserData_x6e64:
    /*00006e64*/ MOV         R0, R7 
    /*00006e68*/ ADD         R1, SP, #12 
    /*00006e6c*/ BL          0x0000000000006E6C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006e70*/ MOV         R0, R8 
    /*00006e74*/ BL          0x0000000000006E74          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*00006e78*/ B           H264E_InsertUserData_x6d58
    H264E_InsertUserData_x6e7c:
    /*00006e7c*/ LDR         R2, [R5, #1228]             @ 0x4cc 
    /*00006e80*/ ADD         R3, R3, #1 
    /*00006e84*/ SUBS        R2, R2, #1 
    /*00006e88*/ ADDMI       R2, R2, R1 
    /*00006e8c*/ LDR         R1, [R5, #1220]             @ 0x4c4 
    /*00006e90*/ STR         R6, [R1, R2, LSL #2] 
    /*00006e94*/ STR         R3, [R5, #1236]             @ 0x4d4 
    /*00006e98*/ STR         R2, [R5, #1228]             @ 0x4cc 
    /*00006e9c*/ B           H264E_InsertUserData_x6e64
    H264E_InsertUserData_x6ea0:
    /*00006ea0*/ MOVW        R3, #1807                   @ 0x70f 
    /*00006ea4*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1078] 
    /*00006ea8*/ STR         R3, [SP] 
    /*00006eac*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1078] 
    /*00006eb0*/ LDR         R3, [PC, #216]              @ 0x0000000000006f90 
    /*00006eb4*/ MOV         R1, #10 
    /*00006eb8*/ MOV         R0, #3 
    /*00006ebc*/ BL          0x0000000000006EBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006ec0*/ B           H264E_InsertUserData_x6e64
    H264E_InsertUserData_x6ec4:
    /*00006ec4*/ MOVW        R3, #1756                   @ 0x6dc 
    /*00006ec8*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfbc] 
    /*00006ecc*/ STR         R3, [SP] 
    /*00006ed0*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfbc] 
    /*00006ed4*/ LDR         R3, [PC, #180]              @ 0x0000000000006f90 
    /*00006ed8*/ MOV         R1, #10 
    /*00006edc*/ MOV         R0, #3 
    /*00006ee0*/ MOVW        R4, #32771                  @ 0x8003 
    /*00006ee4*/ BL          0x0000000000006EE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006ee8*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00006eec*/ B           H264E_InsertUserData_x6d58
    H264E_InsertUserData_x6ef0:
    /*00006ef0*/ MOV         R0, R8 
    /*00006ef4*/ MOVW        R4, #32771                  @ 0x8003 
    /*00006ef8*/ BL          0x0000000000006EF8          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*00006efc*/ MOV         R3, #1776                   @ 0x6f0 
    /*00006f00*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1018] 
    /*00006f04*/ STR         R3, [SP] 
    /*00006f08*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1018] 
    /*00006f0c*/ LDR         R3, [PC, #124]              @ 0x0000000000006f90 
    /*00006f10*/ MOV         R1, #10 
    /*00006f14*/ MOV         R0, #3 
    /*00006f18*/ BL          0x0000000000006F18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006f1c*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00006f20*/ B           H264E_InsertUserData_x6d58
    H264E_InsertUserData_x6f24:
    /*00006f24*/ MOVW        R3, #1786                   @ 0x6fa 
    /*00006f28*/ MOV         R1, #10 
    /*00006f2c*/ STR         R3, [SP] 
    /*00006f30*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x104c] 
    /*00006f34*/ LDR         R3, [PC, #84]               @ 0x0000000000006f90 
    /*00006f38*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x104c] 
    /*00006f3c*/ MOV         R0, #3 
    /*00006f40*/ MOVW        R4, #32783                  @ 0x800f 
    /*00006f44*/ BL          0x0000000000006F44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006f48*/ ADD         R1, SP, #12 
    /*00006f4c*/ MOV         R0, R7 
    /*00006f50*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00006f54*/ BL          0x0000000000006F54          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006f58*/ MOV         R0, R8 
    /*00006f5c*/ BL          0x0000000000006F5C          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*00006f60*/ B           H264E_InsertUserData_x6d58
    H264E_InsertUserData_x6f64:
    /*00006f64*/ MOVW        R3, #1764                   @ 0x6e4 
    /*00006f68*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfe8] 
    /*00006f6c*/ STR         R3, [SP] 
    /*00006f70*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfe8] 
    /*00006f74*/ LDR         R3, [PC, #20]               @ 0x0000000000006f90 
    /*00006f78*/ MOV         R1, #10 
    /*00006f7c*/ MOV         R0, #3 
    /*00006f80*/ MOVW        R4, #32780                  @ 0x800c 
    /*00006f84*/ BL          0x0000000000006F84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006f88*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00006f8c*/ B           H264E_InsertUserData_x6d58
    /*00006f90*/ ANDEQ       R0, R0, R4, LSR R3 
FUNC_END H264E_InsertUserData


FUNC_BEGIN H264E_FrameBufRecycle
    /*00006f94*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00006f98*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00006f9c*/ MOV         R5, R0 
    /*00006fa0*/ BL          0x0000000000006FA0          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00006fa4*/ SUBS        R4, R0, #0 
    /*00006fa8*/ BEQ         H264E_FrameBufRecycle_x6fb8
    H264E_FrameBufRecycle_x6fac:
    /*00006fac*/ MOV         R0, R4 
    /*00006fb0*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00006fb4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_FrameBufRecycle_x6fb8:
    /*00006fb8*/ MOV         R0, R5 
    /*00006fbc*/ BL          0x0000000000006FBC          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00006fc0*/ SUBS        R4, R0, #0 
    /*00006fc4*/ BNE         H264E_FrameBufRecycle_x6fac
    /*00006fc8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006fcc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006fd0*/ ADD         R5, R3, R5, LSL #2 
    /*00006fd4*/ MOVW        R3, #0                      @ FrameBufRecycle [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00006fd8*/ MOVT        R3, #0                      @ FrameBufRecycle [R_ARM_MOVT_ABS: +0x0] 
    /*00006fdc*/ LDR         R6, [R5, #64]               @ 0x40 
    /*00006fe0*/ LDR         R3, [R3] 
    /*00006fe4*/ ADD         R5, R6, #8192               @ 0x2000 
    /*00006fe8*/ CMP         R3, #1 
    /*00006fec*/ LDR         R1, [R5, #1652]             @ 0x674 
    /*00006ff0*/ LDR         R2, [R5, #1644]             @ 0x66c 
    /*00006ff4*/ LDR         R3, [R5, #1648]             @ 0x670 
    /*00006ff8*/ STR         R1, [SP, #36]               @ 0x24 
    /*00006ffc*/ SUB         R3, R3, #1 
    /*00007000*/ STR         R2, [SP, #28] 
    /*00007004*/ STR         R3, [SP, #32] 
    /*00007008*/ BNE         H264E_FrameBufRecycle_x6fac
    /*0000700c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00007010*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00007014*/ LDR         R3, [R3] 
    /*00007018*/ CMP         R3, #2 
    /*0000701c*/ BNE         H264E_FrameBufRecycle_x6fac
    /*00007020*/ ADD         R9, R6, #12288              @ 0x3000 
    /*00007024*/ LDR         R3, [R9, #2196]             @ 0x894 
    /*00007028*/ CMP         R3, #1 
    /*0000702c*/ BNE         H264E_FrameBufRecycle_x6fac
    /*00007030*/ ADD         R3, R6, #14336              @ 0x3800 
    /*00007034*/ ADD         R0, SP, #28 
    /*00007038*/ ADD         R3, R3, #36                 @ 0x24 
    /*0000703c*/ STR         R3, [SP, #16] 
    /*00007040*/ MOV         R1, R3 
    /*00007044*/ BL          0x0000000000007044          @ H264eGetNumRefFrames [R_ARM_CALL: .text+0x1e30] 
    /*00007048*/ LDR         R7, [R5, #2852]             @ 0xb24 
    /*0000704c*/ ADD         R8, R7, #1 
    /*00007050*/ ADD         FP, R0, #1 
    /*00007054*/ CMP         FP, R8 
    /*00007058*/ STRGE       R4, [SP, #12] 
    /*0000705c*/ BGE         H264E_FrameBufRecycle_x70b8
    /*00007060*/ ADD         R7, R7, #272                @ 0x110 
    /*00007064*/ STR         R4, [SP, #12] 
    /*00007068*/ ADD         R7, R7, #2 
    /*0000706c*/ ADD         R7, R6, R7, LSL #2 
    H264E_FrameBufRecycle_x7070:
    /*00007070*/ LDR         SL, [R7] 
    /*00007074*/ MOV         R0, #1 
    /*00007078*/ SUB         R8, R8, #1 
    /*0000707c*/ CMN         SL, #1 
    /*00007080*/ BEQ         H264E_FrameBufRecycle_x70ac
    /*00007084*/ BL          0x0000000000007084          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007088*/ LDR         R3, [R0, #4] 
    /*0000708c*/ MOV         R0, SL 
    /*00007090*/ BLX         R3 
    /*00007094*/ CMP         R0, #0 
    /*00007098*/ LDREQ       R3, [SP, #12] 
    /*0000709c*/ ADDEQ       R3, R3, #1 
    /*000070a0*/ STREQ       R3, [SP, #12] 
    /*000070a4*/ MVNEQ       R3, #0 
    /*000070a8*/ STREQ       R3, [R7] 
    H264E_FrameBufRecycle_x70ac:
    /*000070ac*/ CMP         FP, R8 
    /*000070b0*/ SUB         R7, R7, #4 
    /*000070b4*/ BLT         H264E_FrameBufRecycle_x7070
    H264E_FrameBufRecycle_x70b8:
    /*000070b8*/ ADD         R0, R6, #9856               @ 0x2680 
    /*000070bc*/ LDR         R1, [SP, #16] 
    /*000070c0*/ ADD         R0, R0, #48                 @ 0x30 
    /*000070c4*/ BL          0x00000000000070C4          @ H264eGetNumRefFrames [R_ARM_CALL: .text+0x1e30] 
    /*000070c8*/ LDR         R2, [R9, #1364]             @ 0x554 
    /*000070cc*/ LDR         R1, [R5, #2852]             @ 0xb24 
    /*000070d0*/ CMP         R2, #1 
    /*000070d4*/ ADD         R8, R1, #1 
    /*000070d8*/ MOV         R7, R0 
    /*000070dc*/ ADD         SL, R0, #1 
    /*000070e0*/ BEQ         H264E_FrameBufRecycle_x7194
    H264E_FrameBufRecycle_x70e4:
    /*000070e4*/ MOV         R3, #0 
    /*000070e8*/ STR         R3, [SP, #16] 
    H264E_FrameBufRecycle_x70ec:
    /*000070ec*/ CMP         SL, R8 
    /*000070f0*/ ADDLT       R7, R8, #268                @ 0x10c 
    /*000070f4*/ ADDLT       R7, R6, R7, LSL #2 
    /*000070f8*/ BGE         H264E_FrameBufRecycle_x7138
    H264E_FrameBufRecycle_x70fc:
    /*000070fc*/ LDR         FP, [R7] 
    /*00007100*/ MOV         R0, #1 
    /*00007104*/ SUB         R8, R8, #1 
    /*00007108*/ CMN         FP, #1 
    /*0000710c*/ BEQ         H264E_FrameBufRecycle_x712c
    /*00007110*/ BL          0x0000000000007110          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007114*/ LDR         R3, [R0, #4] 
    /*00007118*/ MOV         R0, FP 
    /*0000711c*/ BLX         R3 
    /*00007120*/ CMP         R0, #0 
    /*00007124*/ MVNEQ       R3, #0 
    /*00007128*/ STREQ       R3, [R7] 
    H264E_FrameBufRecycle_x712c:
    /*0000712c*/ CMP         R8, SL 
    /*00007130*/ SUB         R7, R7, #4 
    /*00007134*/ BGT         H264E_FrameBufRecycle_x70fc
    H264E_FrameBufRecycle_x7138:
    /*00007138*/ LDR         R3, [SP, #16] 
    /*0000713c*/ LDR         R2, [SP, #12] 
    /*00007140*/ ORRS        R3, R3, R2 
    /*00007144*/ BEQ         H264E_FrameBufRecycle_x6fac
    /*00007148*/ ADD         R6, R6, #9792               @ 0x2640 
    /*0000714c*/ ADD         R1, SP, #24 
    /*00007150*/ ADD         R6, R6, #40                 @ 0x28 
    /*00007154*/ MOV         R0, R6 
    /*00007158*/ BL          0x0000000000007158          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000715c*/ LDR         R2, [SP, #12] 
    /*00007160*/ MOV         R3, #0 
    /*00007164*/ STR         R3, [R9, #2196]             @ 0x894 
    /*00007168*/ LDR         R3, [R5, #2852]             @ 0xb24 
    /*0000716c*/ MOV         R0, R6 
    /*00007170*/ ADD         R1, SP, #24 
    /*00007174*/ SUB         R3, R3, R2 
    /*00007178*/ LDR         R2, [SP, #16] 
    /*0000717c*/ STR         R3, [R5, #2852]             @ 0xb24 
    /*00007180*/ LDR         R3, [R9, #1940]             @ 0x794 
    /*00007184*/ SUB         R3, R3, R2 
    /*00007188*/ STR         R3, [R9, #1940]             @ 0x794 
    /*0000718c*/ BL          0x000000000000718C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007190*/ B           H264E_FrameBufRecycle_x6fac
    H264E_FrameBufRecycle_x7194:
    /*00007194*/ STR         R1, [SP, #16] 
    /*00007198*/ BL          0x0000000000007198          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*0000719c*/ LDR         R1, [SP, #16] 
    /*000071a0*/ CMP         R0, #1 
    /*000071a4*/ BNE         H264E_FrameBufRecycle_x70e4
    /*000071a8*/ LDR         R8, [R9, #1940]             @ 0x794 
    /*000071ac*/ CMP         R7, R8 
    /*000071b0*/ BGE         H264E_FrameBufRecycle_x7244
    /*000071b4*/ ADD         FP, R8, #1696               @ 0x6a0 
    /*000071b8*/ ADD         R3, R8, #268                @ 0x10c 
    /*000071bc*/ ADD         FP, FP, #10 
    /*000071c0*/ STR         R1, [SP, #20] 
    /*000071c4*/ ADD         SL, R6, R3, LSL #2 
    /*000071c8*/ MOV         R3, #0 
    /*000071cc*/ ADD         FP, R6, FP, LSL #3 
    /*000071d0*/ STR         R3, [SP, #16] 
    /*000071d4*/ B           H264E_FrameBufRecycle_x71e8
    H264E_FrameBufRecycle_x71d8:
    /*000071d8*/ CMP         R7, R8 
    /*000071dc*/ SUB         FP, FP, #8 
    /*000071e0*/ SUB         SL, SL, #4 
    /*000071e4*/ BGE         H264E_FrameBufRecycle_x7234
    H264E_FrameBufRecycle_x71e8:
    /*000071e8*/ LDRD        R2, [FP] 
    /*000071ec*/ SUB         R8, R8, #1 
    /*000071f0*/ ORRS        R3, R2, R3 
    /*000071f4*/ BEQ         H264E_FrameBufRecycle_x71d8
    /*000071f8*/ LDR         R3, [SP, #16] 
    /*000071fc*/ MOV         R0, #1 
    /*00007200*/ ADD         R3, R3, R0 
    /*00007204*/ STR         R3, [SP, #16] 
    /*00007208*/ BL          0x0000000000007208          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000720c*/ MOV         R3, #6 
    /*00007210*/ STR         R3, [SP] 
    /*00007214*/ LDRD        R2, [FP] 
    /*00007218*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000721c*/ LDR         R0, [SL] 
    /*00007220*/ BLX         R1 
    /*00007224*/ MOV         R2, #0 
    /*00007228*/ MOV         R3, #0 
    /*0000722c*/ STRD        R2, [FP] 
    /*00007230*/ B           H264E_FrameBufRecycle_x71d8
    H264E_FrameBufRecycle_x7234:
    /*00007234*/ LDR         R1, [SP, #20] 
    /*00007238*/ MOV         SL, R7 
    /*0000723c*/ MOV         R8, R1 
    /*00007240*/ B           H264E_FrameBufRecycle_x70ec
    H264E_FrameBufRecycle_x7244:
    /*00007244*/ MOV         SL, R7 
    /*00007248*/ MOV         R8, R1 
    /*0000724c*/ B           H264E_FrameBufRecycle_x70e4
FUNC_END H264E_FrameBufRecycle


FUNC_BEGIN H264E_SetRoiBgFrameRate
    /*00007250*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00007254*/ SUB         SP, SP, #12 
    /*00007258*/ MOV         R6, R1 
    /*0000725c*/ MOV         R5, R0 
    /*00007260*/ BL          0x0000000000007260          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00007264*/ SUBS        R4, R0, #0 
    /*00007268*/ BEQ         H264E_SetRoiBgFrameRate_x7278
    H264E_SetRoiBgFrameRate_x726c:
    /*0000726c*/ MOV         R0, R4 
    /*00007270*/ ADD         SP, SP, #12 
    /*00007274*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_SetRoiBgFrameRate_x7278:
    /*00007278*/ MOV         R0, R5 
    /*0000727c*/ BL          0x000000000000727C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00007280*/ SUBS        R4, R0, #0 
    /*00007284*/ BNE         H264E_SetRoiBgFrameRate_x726c
    /*00007288*/ MOV         R0, R6 
    /*0000728c*/ BL          0x000000000000728C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00007290*/ SUBS        R4, R0, #0 
    /*00007294*/ BNE         H264E_SetRoiBgFrameRate_x726c
    /*00007298*/ MOVW        R8, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000729c*/ MOVT        R8, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000072a0*/ ADD         R3, R8, R5, LSL #2 
    /*000072a4*/ ADD         R1, SP, #4 
    /*000072a8*/ LDR         R7, [R3, #64]               @ 0x40 
    /*000072ac*/ ADD         R9, R7, #9792               @ 0x2640 
    /*000072b0*/ ADD         R9, R9, #40                 @ 0x28 
    /*000072b4*/ MOV         R0, R9 
    /*000072b8*/ BL          0x00000000000072B8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000072bc*/ ADD         R0, R7, #14272              @ 0x37c0 
    /*000072c0*/ ADD         R7, R7, #12288              @ 0x3000 
    /*000072c4*/ MOV         R1, R6 
    /*000072c8*/ MOV         R2, #8 
    /*000072cc*/ ADD         R0, R0, #28 
    /*000072d0*/ BL          0x00000000000072D0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000072d4*/ LDR         R3, [R7, #2012]             @ 0x7dc 
    /*000072d8*/ LDR         IP, [R7, #2016]             @ 0x7e0 
    /*000072dc*/ MOV         R0, R9 
    /*000072e0*/ LDR         R2, [R8, R5, LSL #2] 
    /*000072e4*/ ADD         R1, SP, #4 
    /*000072e8*/ SUB         R3, R3, IP 
    /*000072ec*/ STR         R3, [R7, #2020]             @ 0x7e4 
    /*000072f0*/ ADD         R2, R2, #1 
    /*000072f4*/ STR         R2, [R8, R5, LSL #2] 
    /*000072f8*/ BL          0x00000000000072F8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000072fc*/ B           H264E_SetRoiBgFrameRate_x726c
FUNC_END H264E_SetRoiBgFrameRate


FUNC_BEGIN H264E_SetIntraPred
    /*00007300*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00007304*/ SUB         SP, SP, #20 
    /*00007308*/ MOV         R6, R1 
    /*0000730c*/ MOV         R5, R0 
    /*00007310*/ BL          0x0000000000007310          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00007314*/ SUBS        R4, R0, #0 
    /*00007318*/ BEQ         H264E_SetIntraPred_x7328
    H264E_SetIntraPred_x731c:
    /*0000731c*/ MOV         R0, R4 
    /*00007320*/ ADD         SP, SP, #20 
    /*00007324*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_SetIntraPred_x7328:
    /*00007328*/ MOV         R0, R5 
    /*0000732c*/ BL          0x000000000000732C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00007330*/ SUBS        R4, R0, #0 
    /*00007334*/ BNE         H264E_SetIntraPred_x731c
    /*00007338*/ MOV         R0, R6 
    /*0000733c*/ BL          0x000000000000733C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00007340*/ SUBS        R4, R0, #0 
    /*00007344*/ BNE         H264E_SetIntraPred_x731c
    /*00007348*/ LDR         R2, [R6] 
    /*0000734c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007350*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007354*/ ADD         R8, R3, R5, LSL #2 
    /*00007358*/ CMP         R2, #1 
    /*0000735c*/ LDR         R3, [R8, #64]               @ 0x40 
    /*00007360*/ BHI         H264E_SetIntraPred_x73ec
    /*00007364*/ ADD         R7, R3, #9792               @ 0x2640 
    /*00007368*/ ADD         R1, SP, #12 
    /*0000736c*/ ADD         R7, R7, #40                 @ 0x28 
    /*00007370*/ ADD         R9, R3, #8192               @ 0x2000 
    /*00007374*/ MOV         R0, R7 
    /*00007378*/ BL          0x0000000000007378          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000737c*/ LDR         R2, [R6] 
    /*00007380*/ LDR         R3, [R8, #140]              @ 0x8c 
    /*00007384*/ MOV         R0, R7 
    /*00007388*/ ADD         R1, SP, #12 
    /*0000738c*/ STR         R2, [R9, #1388]             @ 0x56c 
    /*00007390*/ ADD         R3, R3, #1 
    /*00007394*/ STR         R3, [R8, #140]              @ 0x8c 
    /*00007398*/ BL          0x0000000000007398          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000739c*/ LDR         R6, [R9, #2160]             @ 0x870 
    /*000073a0*/ CMP         R6, #1 
    /*000073a4*/ BNE         H264E_SetIntraPred_x731c
    /*000073a8*/ MOV         R0, #19 
    /*000073ac*/ BL          0x00000000000073AC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000073b0*/ MOV         R1, R6 
    /*000073b4*/ LDR         R3, [R0, #56]               @ 0x38 
    /*000073b8*/ MOV         R0, R5 
    /*000073bc*/ BLX         R3 
    /*000073c0*/ CMP         R0, #0 
    /*000073c4*/ BEQ         H264E_SetIntraPred_x731c
    /*000073c8*/ MOVW        R3, #4105                   @ 0x1009 
    /*000073cc*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1144] 
    /*000073d0*/ STR         R3, [SP] 
    /*000073d4*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1144] 
    /*000073d8*/ LDR         R3, [PC, #56]               @ 0x0000000000007418 
    /*000073dc*/ MOV         R1, #10 
    /*000073e0*/ MOV         R0, #4 
    /*000073e4*/ BL          0x00000000000073E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000073e8*/ B           H264E_SetIntraPred_x731c
    H264E_SetIntraPred_x73ec:
    /*000073ec*/ MOVW        R3, #4086                   @ 0xff6 
    /*000073f0*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10f0] 
    /*000073f4*/ STR         R3, [SP] 
    /*000073f8*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10f0] 
    /*000073fc*/ LDR         R3, [PC, #20]               @ 0x0000000000007418 
    /*00007400*/ MOV         R1, #10 
    /*00007404*/ MOV         R0, #3 
    /*00007408*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000740c*/ BL          0x000000000000740C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007410*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00007414*/ B           H264E_SetIntraPred_x731c
    /*00007418*/ ANDEQ       R0, R0, IP, ASR #6 
FUNC_END H264E_SetIntraPred


FUNC_BEGIN H264E_AttachVbPool
    /*0000741c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00007420*/ SUB         SP, SP, #24 
    /*00007424*/ MOV         R6, R1 
    /*00007428*/ MOV         R5, R0 
    /*0000742c*/ BL          0x000000000000742C          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00007430*/ SUBS        R4, R0, #0 
    /*00007434*/ BEQ         H264E_AttachVbPool_x7444
    H264E_AttachVbPool_x7438:
    /*00007438*/ MOV         R0, R4 
    /*0000743c*/ ADD         SP, SP, #24 
    /*00007440*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264E_AttachVbPool_x7444:
    /*00007444*/ MOV         R0, R5 
    /*00007448*/ BL          0x0000000000007448          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000744c*/ SUBS        R4, R0, #0 
    /*00007450*/ BNE         H264E_AttachVbPool_x7438
    /*00007454*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007458*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000745c*/ ADD         R3, R3, R5, LSL #2 
    /*00007460*/ MOV         R0, #1 
    /*00007464*/ LDR         R7, [R3, #64]               @ 0x40 
    /*00007468*/ BL          0x0000000000007468          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000746c*/ LDR         R3, [R0, #88]               @ 0x58 
    /*00007470*/ CMP         R3, #0 
    /*00007474*/ BEQ         H264E_AttachVbPool_x754c
    /*00007478*/ MOV         R0, #1 
    /*0000747c*/ BL          0x000000000000747C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007480*/ LDR         R3, [R0, #88]               @ 0x58 
    /*00007484*/ LDR         R0, [R6, #4] 
    /*00007488*/ BLX         R3 
    /*0000748c*/ CMP         R0, #0 
    /*00007490*/ BEQ         H264E_AttachVbPool_x754c
    /*00007494*/ MOV         R0, #1 
    /*00007498*/ BL          0x0000000000007498          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000749c*/ LDR         R3, [R0, #88]               @ 0x58 
    /*000074a0*/ LDR         R0, [R6] 
    /*000074a4*/ BLX         R3 
    /*000074a8*/ CMP         R0, #0 
    /*000074ac*/ BEQ         H264E_AttachVbPool_x754c
    /*000074b0*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*000074b4*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*000074b8*/ LDR         R8, [R3] 
    /*000074bc*/ CMP         R8, #3 
    /*000074c0*/ BNE         H264E_AttachVbPool_x757c
    /*000074c4*/ ADD         R3, R7, #12288              @ 0x3000 
    /*000074c8*/ LDR         R3, [R3, #1364]             @ 0x554 
    /*000074cc*/ CMP         R3, #1 
    /*000074d0*/ BEQ         H264E_AttachVbPool_x7510
    H264E_AttachVbPool_x74d4:
    /*000074d4*/ ADD         R5, R7, #9792               @ 0x2640 
    /*000074d8*/ ADD         R1, SP, #20 
    /*000074dc*/ ADD         R5, R5, #40                 @ 0x28 
    /*000074e0*/ MOV         R0, R5 
    /*000074e4*/ BL          0x00000000000074E4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000074e8*/ LDR         R3, [R6] 
    /*000074ec*/ MOV         R0, R5 
    /*000074f0*/ ADD         R1, SP, #20 
    /*000074f4*/ STR         R3, [R7, #1076]             @ 0x434 
    /*000074f8*/ LDR         R3, [R6, #4] 
    /*000074fc*/ STR         R3, [R7, #1096]             @ 0x448 
    /*00007500*/ BL          0x0000000000007500          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007504*/ MOV         R0, R4 
    /*00007508*/ ADD         SP, SP, #24 
    /*0000750c*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264E_AttachVbPool_x7510:
    /*00007510*/ BL          0x0000000000007510          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*00007514*/ CMP         R0, #1 
    /*00007518*/ BNE         H264E_AttachVbPool_x74d4
    /*0000751c*/ MOVW        R3, #5266                   @ 0x1492 
    /*00007520*/ STR         R5, [SP, #4] 
    /*00007524*/ STR         R3, [SP] 
    /*00007528*/ MOV         R0, R8 
    /*0000752c*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x120c] 
    /*00007530*/ LDR         R3, [PC, #120]              @ 0x00000000000075b0 
    /*00007534*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x120c] 
    /*00007538*/ MOV         R1, #10 
    /*0000753c*/ MOVW        R4, #32777                  @ 0x8009 
    /*00007540*/ BL          0x0000000000007540          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007544*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00007548*/ B           H264E_AttachVbPool_x7438
    H264E_AttachVbPool_x754c:
    /*0000754c*/ MOVW        R3, #5250                   @ 0x1482 
    /*00007550*/ STR         R5, [SP, #4] 
    /*00007554*/ STR         R3, [SP] 
    /*00007558*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x117c] 
    /*0000755c*/ LDR         R3, [PC, #76]               @ 0x00000000000075b0 
    /*00007560*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x117c] 
    /*00007564*/ MOV         R1, #10 
    /*00007568*/ MOV         R0, #3 
    /*0000756c*/ MOVW        R4, #32771                  @ 0x8003 
    /*00007570*/ BL          0x0000000000007570          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007574*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00007578*/ B           H264E_AttachVbPool_x7438
    H264E_AttachVbPool_x757c:
    /*0000757c*/ MOVW        R3, #5257                   @ 0x1489 
    /*00007580*/ STR         R8, [SP, #8] 
    /*00007584*/ STR         R3, [SP] 
    /*00007588*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11bc] 
    /*0000758c*/ STR         R5, [SP, #4] 
    /*00007590*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11bc] 
    /*00007594*/ LDR         R3, [PC, #20]               @ 0x00000000000075b0 
    /*00007598*/ MOV         R1, #10 
    /*0000759c*/ MOV         R0, #3 
    /*000075a0*/ MOVW        R4, #32776                  @ 0x8008 
    /*000075a4*/ BL          0x00000000000075A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000075a8*/ MOVT        R4, #40970                  @ 0xa00a 
    /*000075ac*/ B           H264E_AttachVbPool_x7438
    /*000075b0*/ ANDEQ       R0, R0, R0, ROR #6 
FUNC_END H264E_AttachVbPool


FUNC_BEGIN H264E_DetachVbPool
    /*000075b4*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000075b8*/ SUB         SP, SP, #28 
    /*000075bc*/ MOV         R5, R0 
    /*000075c0*/ BL          0x00000000000075C0          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*000075c4*/ SUBS        R4, R0, #0 
    /*000075c8*/ BEQ         H264E_DetachVbPool_x75d8
    H264E_DetachVbPool_x75cc:
    /*000075cc*/ MOV         R0, R4 
    /*000075d0*/ ADD         SP, SP, #28 
    /*000075d4*/ POP         {R4, R5, R6, R7, PC} 
    H264E_DetachVbPool_x75d8:
    /*000075d8*/ MOV         R0, R5 
    /*000075dc*/ BL          0x00000000000075DC          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*000075e0*/ SUBS        R4, R0, #0 
    /*000075e4*/ BNE         H264E_DetachVbPool_x75cc
    /*000075e8*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*000075ec*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*000075f0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000075f4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000075f8*/ LDR         R7, [R2] 
    /*000075fc*/ ADD         R3, R3, R5, LSL #2 
    /*00007600*/ CMP         R7, #3 
    /*00007604*/ LDR         R6, [R3, #64]               @ 0x40 
    /*00007608*/ BNE         H264E_DetachVbPool_x7690
    /*0000760c*/ ADD         R3, R6, #12288              @ 0x3000 
    /*00007610*/ LDR         R3, [R3, #1364]             @ 0x554 
    /*00007614*/ CMP         R3, #1 
    /*00007618*/ BEQ         H264E_DetachVbPool_x7654
    H264E_DetachVbPool_x761c:
    /*0000761c*/ ADD         R5, R6, #9792               @ 0x2640 
    /*00007620*/ ADD         R1, SP, #20 
    /*00007624*/ ADD         R5, R5, #40                 @ 0x28 
    /*00007628*/ MOV         R0, R5 
    /*0000762c*/ BL          0x000000000000762C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007630*/ MVN         R3, #0 
    /*00007634*/ MOV         R0, R5 
    /*00007638*/ ADD         R1, SP, #20 
    /*0000763c*/ STR         R3, [R6, #1076]             @ 0x434 
    /*00007640*/ STR         R3, [R6, #1096]             @ 0x448 
    /*00007644*/ BL          0x0000000000007644          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007648*/ MOV         R0, R4 
    /*0000764c*/ ADD         SP, SP, #28 
    /*00007650*/ POP         {R4, R5, R6, R7, PC} 
    H264E_DetachVbPool_x7654:
    /*00007654*/ BL          0x0000000000007654          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*00007658*/ CMP         R0, #1 
    /*0000765c*/ BNE         H264E_DetachVbPool_x761c
    /*00007660*/ MOVW        R3, #5302                   @ 0x14b6 
    /*00007664*/ STR         R5, [SP, #4] 
    /*00007668*/ STR         R3, [SP] 
    /*0000766c*/ MOV         R0, R7 
    /*00007670*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12c4] 
    /*00007674*/ LDR         R3, [PC, #72]               @ 0x00000000000076c4 
    /*00007678*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12c4] 
    /*0000767c*/ MOV         R1, #10 
    /*00007680*/ MOVW        R4, #32777                  @ 0x8009 
    /*00007684*/ BL          0x0000000000007684          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007688*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000768c*/ B           H264E_DetachVbPool_x75cc
    H264E_DetachVbPool_x7690:
    /*00007690*/ MOVW        R3, #5293                   @ 0x14ad 
    /*00007694*/ STR         R7, [SP, #8] 
    /*00007698*/ STR         R3, [SP] 
    /*0000769c*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1274] 
    /*000076a0*/ STR         R5, [SP, #4] 
    /*000076a4*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1274] 
    /*000076a8*/ LDR         R3, [PC, #20]               @ 0x00000000000076c4 
    /*000076ac*/ MOV         R1, #10 
    /*000076b0*/ MOV         R0, #3 
    /*000076b4*/ MOVW        R4, #32776                  @ 0x8008 
    /*000076b8*/ BL          0x00000000000076B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000076bc*/ MOVT        R4, #40970                  @ 0xa00a 
    /*000076c0*/ B           H264E_DetachVbPool_x75cc
    /*000076c4*/ ANDEQ       R0, R0, R4, ROR R3 
FUNC_END H264E_DetachVbPool


FUNC_BEGIN H264E_SetIntraRefresh
    /*000076c8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000076cc*/ SUB         SP, SP, #8 
    /*000076d0*/ MOV         R6, R1 
    /*000076d4*/ MOV         R5, R0 
    /*000076d8*/ BL          0x00000000000076D8          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*000076dc*/ SUBS        R4, R0, #0 
    /*000076e0*/ BEQ         H264E_SetIntraRefresh_x76f0
    H264E_SetIntraRefresh_x76e4:
    /*000076e4*/ MOV         R0, R4 
    /*000076e8*/ ADD         SP, SP, #8 
    /*000076ec*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264E_SetIntraRefresh_x76f0:
    /*000076f0*/ MOV         R0, R5 
    /*000076f4*/ BL          0x00000000000076F4          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*000076f8*/ SUBS        R4, R0, #0 
    /*000076fc*/ BNE         H264E_SetIntraRefresh_x76e4
    /*00007700*/ MOV         R0, R6 
    /*00007704*/ BL          0x0000000000007704          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00007708*/ SUBS        R4, R0, #0 
    /*0000770c*/ BNE         H264E_SetIntraRefresh_x76e4
    /*00007710*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007714*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007718*/ ADD         R5, R3, R5, LSL #2 
    /*0000771c*/ ADD         R1, SP, #4 
    /*00007720*/ LDR         R8, [R5, #64]               @ 0x40 
    /*00007724*/ ADD         R7, R8, #9792               @ 0x2640 
    /*00007728*/ ADD         R7, R7, #40                 @ 0x28 
    /*0000772c*/ MOV         R0, R7 
    /*00007730*/ BL          0x0000000000007730          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007734*/ ADD         R0, R8, #10304              @ 0x2840 
    /*00007738*/ MOV         R1, R6 
    /*0000773c*/ MOV         R2, #16 
    /*00007740*/ ADD         R0, R0, #48                 @ 0x30 
    /*00007744*/ BL          0x0000000000007744          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00007748*/ LDR         R3, [R5, #140]              @ 0x8c 
    /*0000774c*/ MOV         R0, R7 
    /*00007750*/ ADD         R1, SP, #4 
    /*00007754*/ ADD         R3, R3, #1 
    /*00007758*/ STR         R3, [R5, #140]              @ 0x8c 
    /*0000775c*/ BL          0x000000000000775C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007760*/ B           H264E_SetIntraRefresh_x76e4
FUNC_END H264E_SetIntraRefresh


FUNC_BEGIN H264E_EnableAdvSmartP
    /*00007764*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00007768*/ SUB         SP, SP, #28 
    /*0000776c*/ MOV         R8, R1 
    /*00007770*/ MOV         R7, R0 
    /*00007774*/ BL          0x0000000000007774          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00007778*/ SUBS        R4, R0, #0 
    /*0000777c*/ BEQ         H264E_EnableAdvSmartP_x778c
    H264E_EnableAdvSmartP_x7780:
    /*00007780*/ MOV         R0, R4 
    /*00007784*/ ADD         SP, SP, #28 
    /*00007788*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_EnableAdvSmartP_x778c:
    /*0000778c*/ MOV         R0, R7 
    /*00007790*/ BL          0x0000000000007790          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00007794*/ SUBS        R4, R0, #0 
    /*00007798*/ BNE         H264E_EnableAdvSmartP_x7780
    /*0000779c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000077a0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000077a4*/ ADD         R5, R3, R7, LSL #2 
    /*000077a8*/ LDR         R6, [R5, #64]               @ 0x40 
    /*000077ac*/ ADD         R9, R6, #12288              @ 0x3000 
    /*000077b0*/ LDR         R3, [R9, #2084]             @ 0x824 
    /*000077b4*/ CMP         R3, #2 
    /*000077b8*/ BNE         H264E_EnableAdvSmartP_x77f8
    /*000077bc*/ ADD         R6, R6, #9792               @ 0x2640 
    /*000077c0*/ ADD         R1, SP, #20 
    /*000077c4*/ ADD         R6, R6, #40                 @ 0x28 
    /*000077c8*/ MOV         R0, R6 
    /*000077cc*/ BL          0x00000000000077CC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000077d0*/ LDR         R3, [R5, #140]              @ 0x8c 
    /*000077d4*/ MOV         R0, R6 
    /*000077d8*/ ADD         R1, SP, #20 
    /*000077dc*/ STR         R8, [R9, #2104]             @ 0x838 
    /*000077e0*/ ADD         R3, R3, #1 
    /*000077e4*/ STR         R3, [R5, #140]              @ 0x8c 
    /*000077e8*/ BL          0x00000000000077E8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000077ec*/ MOV         R0, R4 
    /*000077f0*/ ADD         SP, SP, #28 
    /*000077f4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_EnableAdvSmartP_x77f8:
    /*000077f8*/ STR         R3, [SP, #8] 
    /*000077fc*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x132c] 
    /*00007800*/ MOVW        R3, #5655                   @ 0x1617 
    /*00007804*/ STR         R7, [SP, #4] 
    /*00007808*/ STR         R3, [SP] 
    /*0000780c*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x132c] 
    /*00007810*/ LDR         R3, [PC, #20]               @ 0x000000000000782c 
    /*00007814*/ MOV         R1, #10 
    /*00007818*/ MOV         R0, #3 
    /*0000781c*/ MOVW        R4, #32776                  @ 0x8008 
    /*00007820*/ BL          0x0000000000007820          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007824*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00007828*/ B           H264E_EnableAdvSmartP_x7780
    /*0000782c*/ ANDEQ       R0, R0, R8, LSL #7 
FUNC_END H264E_EnableAdvSmartP


FUNC_BEGIN H264E_SetSceneMode
    /*00007830*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00007834*/ SUB         SP, SP, #8 
    /*00007838*/ MOV         R6, R1 
    /*0000783c*/ MOV         R5, R0 
    /*00007840*/ BL          0x0000000000007840          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00007844*/ SUBS        R4, R0, #0 
    /*00007848*/ BEQ         H264E_SetSceneMode_x7858
    H264E_SetSceneMode_x784c:
    /*0000784c*/ MOV         R0, R4 
    /*00007850*/ ADD         SP, SP, #8 
    /*00007854*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264E_SetSceneMode_x7858:
    /*00007858*/ MOV         R0, R5 
    /*0000785c*/ BL          0x000000000000785C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00007860*/ SUBS        R4, R0, #0 
    /*00007864*/ BNE         H264E_SetSceneMode_x784c
    /*00007868*/ MOV         R0, R6 
    /*0000786c*/ BL          0x000000000000786C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00007870*/ SUBS        R4, R0, #0 
    /*00007874*/ BNE         H264E_SetSceneMode_x784c
    /*00007878*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000787c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007880*/ ADD         R5, R3, R5, LSL #2 
    /*00007884*/ LDR         R3, [R6] 
    /*00007888*/ LDR         R7, [R5, #64]               @ 0x40 
    /*0000788c*/ ADD         R5, R7, #12288              @ 0x3000 
    /*00007890*/ LDR         R2, [R5, #2636]             @ 0xa4c 
    /*00007894*/ CMP         R2, R3 
    /*00007898*/ BEQ         H264E_SetSceneMode_x784c
    /*0000789c*/ ADD         R8, R7, #9792               @ 0x2640 
    /*000078a0*/ ADD         R1, SP, #4 
    /*000078a4*/ ADD         R8, R8, #40                 @ 0x28 
    /*000078a8*/ MOV         R0, R8 
    /*000078ac*/ BL          0x00000000000078AC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000078b0*/ LDR         R1, [R6] 
    /*000078b4*/ ADD         R0, R7, #14336              @ 0x3800 
    /*000078b8*/ MOV         R3, #1 
    /*000078bc*/ ADD         R0, R0, #60                 @ 0x3c 
    /*000078c0*/ STR         R3, [R5, #2152]             @ 0x868 
    /*000078c4*/ STR         R1, [R5, #2636]             @ 0xa4c 
    /*000078c8*/ BL          0x00000000000078C8          @ H264E_DRV_InitLowerPower [R_ARM_CALL: .text+0x132c0] 
    /*000078cc*/ ADD         R1, SP, #4 
    /*000078d0*/ MOV         R0, R8 
    /*000078d4*/ BL          0x00000000000078D4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000078d8*/ B           H264E_SetSceneMode_x784c
FUNC_END H264E_SetSceneMode


FUNC_BEGIN H264E_SetPrediction
    /*000078dc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000078e0*/ SUB         SP, SP, #12 
    /*000078e4*/ MOV         R5, R1 
    /*000078e8*/ MOV         R6, R0 
    /*000078ec*/ BL          0x00000000000078EC          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*000078f0*/ SUBS        R4, R0, #0 
    /*000078f4*/ BEQ         H264E_SetPrediction_x7904
    H264E_SetPrediction_x78f8:
    /*000078f8*/ MOV         R0, R4 
    /*000078fc*/ ADD         SP, SP, #12 
    /*00007900*/ POP         {R4, R5, R6, R7, PC} 
    H264E_SetPrediction_x7904:
    /*00007904*/ MOV         R0, R6 
    /*00007908*/ BL          0x0000000000007908          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000790c*/ SUBS        R4, R0, #0 
    /*00007910*/ BNE         H264E_SetPrediction_x78f8
    /*00007914*/ MOV         R0, R5 
    /*00007918*/ BL          0x0000000000007918          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000791c*/ SUBS        R4, R0, #0 
    /*00007920*/ BNE         H264E_SetPrediction_x78f8
    /*00007924*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007928*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000792c*/ ADD         R6, R3, R6, LSL #2 
    /*00007930*/ ADD         R1, SP, #4 
    /*00007934*/ LDR         R7, [R6, #64]               @ 0x40 
    /*00007938*/ ADD         R6, R7, #9792               @ 0x2640 
    /*0000793c*/ ADD         R6, R6, #40                 @ 0x28 
    /*00007940*/ MOV         R0, R6 
    /*00007944*/ BL          0x0000000000007944          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007948*/ LDR         R2, [R5] 
    /*0000794c*/ ADD         R3, R7, #12288              @ 0x3000 
    /*00007950*/ MOV         R0, R6 
    /*00007954*/ STR         R2, [R3, #2580]             @ 0xa14 
    /*00007958*/ LDR         R2, [R5, #32] 
    /*0000795c*/ SUB         R1, R2, #1 
    /*00007960*/ CMP         R1, #6 
    /*00007964*/ RSBLS       R2, R2, #8 
    /*00007968*/ STR         R2, [R3, #2612]             @ 0xa34 
    /*0000796c*/ LDR         R2, [R5, #28] 
    /*00007970*/ SUB         R1, R2, #1 
    /*00007974*/ CMP         R1, #6 
    /*00007978*/ RSBLS       R2, R2, #8 
    /*0000797c*/ STR         R2, [R3, #2608]             @ 0xa30 
    /*00007980*/ LDR         R2, [R5, #24] 
    /*00007984*/ SUB         R1, R2, #1 
    /*00007988*/ CMP         R1, #6 
    /*0000798c*/ RSBLS       R2, R2, #8 
    /*00007990*/ STR         R2, [R3, #2604]             @ 0xa2c 
    /*00007994*/ LDR         R2, [R5, #20] 
    /*00007998*/ SUB         R1, R2, #1 
    /*0000799c*/ CMP         R1, #6 
    /*000079a0*/ RSBLS       R2, R2, #8 
    /*000079a4*/ STR         R2, [R3, #2600]             @ 0xa28 
    /*000079a8*/ LDR         R2, [R5, #16] 
    /*000079ac*/ SUB         R1, R2, #1 
    /*000079b0*/ CMP         R1, #6 
    /*000079b4*/ RSBLS       R2, R2, #8 
    /*000079b8*/ STR         R2, [R3, #2596]             @ 0xa24 
    /*000079bc*/ LDR         R2, [R5, #12] 
    /*000079c0*/ SUB         R1, R2, #1 
    /*000079c4*/ CMP         R1, #6 
    /*000079c8*/ RSBLS       R2, R2, #8 
    /*000079cc*/ STR         R2, [R3, #2592]             @ 0xa20 
    /*000079d0*/ LDR         R2, [R5, #8] 
    /*000079d4*/ SUB         R1, R2, #1 
    /*000079d8*/ CMP         R1, #6 
    /*000079dc*/ RSBLS       R2, R2, #8 
    /*000079e0*/ STR         R2, [R3, #2588]             @ 0xa1c 
    /*000079e4*/ LDR         R2, [R5, #4] 
    /*000079e8*/ SUB         R1, R2, #1 
    /*000079ec*/ CMP         R1, #6 
    /*000079f0*/ ADD         R1, SP, #4 
    /*000079f4*/ RSBLS       R2, R2, #8 
    /*000079f8*/ STR         R2, [R3, #2584]             @ 0xa18 
    /*000079fc*/ BL          0x00000000000079FC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007a00*/ B           H264E_SetPrediction_x78f8
FUNC_END H264E_SetPrediction


FUNC_BEGIN H264E_SetSkipBias
    /*00007a04*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00007a08*/ SUB         SP, SP, #12 
    /*00007a0c*/ MOV         R6, R1 
    /*00007a10*/ MOV         R5, R0 
    /*00007a14*/ BL          0x0000000000007A14          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00007a18*/ SUBS        R4, R0, #0 
    /*00007a1c*/ BEQ         H264E_SetSkipBias_x7a2c
    H264E_SetSkipBias_x7a20:
    /*00007a20*/ MOV         R0, R4 
    /*00007a24*/ ADD         SP, SP, #12 
    /*00007a28*/ POP         {R4, R5, R6, R7, PC} 
    H264E_SetSkipBias_x7a2c:
    /*00007a2c*/ MOV         R0, R5 
    /*00007a30*/ BL          0x0000000000007A30          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00007a34*/ SUBS        R4, R0, #0 
    /*00007a38*/ BNE         H264E_SetSkipBias_x7a20
    /*00007a3c*/ MOV         R0, R6 
    /*00007a40*/ BL          0x0000000000007A40          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00007a44*/ SUBS        R4, R0, #0 
    /*00007a48*/ BNE         H264E_SetSkipBias_x7a20
    /*00007a4c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007a50*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007a54*/ ADD         R5, R3, R5, LSL #2 
    /*00007a58*/ ADD         R1, SP, #4 
    /*00007a5c*/ LDR         R7, [R5, #64]               @ 0x40 
    /*00007a60*/ ADD         R5, R7, #9792               @ 0x2640 
    /*00007a64*/ ADD         R5, R5, #40                 @ 0x28 
    /*00007a68*/ MOV         R0, R5 
    /*00007a6c*/ BL          0x0000000000007A6C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007a70*/ ADD         R0, R7, #14848              @ 0x3a00 
    /*00007a74*/ MOV         R1, R6 
    /*00007a78*/ MOV         R2, #20 
    /*00007a7c*/ ADD         R0, R0, #56                 @ 0x38 
    /*00007a80*/ BL          0x0000000000007A80          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00007a84*/ ADD         R1, SP, #4 
    /*00007a88*/ MOV         R0, R5 
    /*00007a8c*/ BL          0x0000000000007A8C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007a90*/ B           H264E_SetSkipBias_x7a20
FUNC_END H264E_SetSkipBias


FUNC_BEGIN H264E_ConfigRegs
    /*00007a94*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00007a98*/ SUB         SP, SP, #12 
    /*00007a9c*/ MOV         R5, R1 
    /*00007aa0*/ MOV         R6, R2 
    /*00007aa4*/ MOV         R8, R3 
    /*00007aa8*/ MOV         R7, R0 
    /*00007aac*/ BL          0x0000000000007AAC          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00007ab0*/ SUBS        R4, R0, #0 
    /*00007ab4*/ BEQ         H264E_ConfigRegs_x7ac4
    H264E_ConfigRegs_x7ab8:
    /*00007ab8*/ MOV         R0, R4 
    /*00007abc*/ ADD         SP, SP, #12 
    /*00007ac0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_ConfigRegs_x7ac4:
    /*00007ac4*/ MOV         R0, R5 
    /*00007ac8*/ BL          0x0000000000007AC8          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00007acc*/ SUBS        R4, R0, #0 
    /*00007ad0*/ BNE         H264E_ConfigRegs_x7ab8
    /*00007ad4*/ MOV         R0, R6 
    /*00007ad8*/ BL          0x0000000000007AD8          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00007adc*/ SUBS        R4, R0, #0 
    /*00007ae0*/ BNE         H264E_ConfigRegs_x7ab8
    /*00007ae4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007ae8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007aec*/ ADD         R3, R3, R7, LSL #2 
    /*00007af0*/ MOV         R1, SP 
    /*00007af4*/ ADD         FP, SP, #8 
    /*00007af8*/ LDR         R9, [R3, #64]               @ 0x40 
    /*00007afc*/ ADD         SL, R9, #9792               @ 0x2640 
    /*00007b00*/ ADD         SL, SL, #40                 @ 0x28 
    /*00007b04*/ MOV         R0, SL 
    /*00007b08*/ BL          0x0000000000007B08          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007b0c*/ MOV         R3, #148                    @ 0x94 
    /*00007b10*/ MUL         R3, R3, R8 
    /*00007b14*/ STR         R7, [R9, #804]              @ 0x324 
    /*00007b18*/ LDR         R2, [R6, #12] 
    /*00007b1c*/ MOV         R0, R5 
    /*00007b20*/ MOV         R1, R3 
    /*00007b24*/ MOV         R3, R8 
    /*00007b28*/ MOV         R6, R1 
    /*00007b2c*/ ADD         R1, R1, #804                @ 0x324 
    /*00007b30*/ ADD         R1, R9, R1 
    /*00007b34*/ ADD         R9, R9, R6 
    /*00007b38*/ BL          0x0000000000007B38          @ H264E_DRV_WriteRegs [R_ARM_CALL: .text+0x12a28] 
    /*00007b3c*/ MOV         R0, #19 
    /*00007b40*/ LDR         R3, [R9, #944]              @ 0x3b0 
    /*00007b44*/ STR         R3, [FP, #-4]! 
    /*00007b48*/ BL          0x0000000000007B48          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007b4c*/ MOV         R1, R5 
    /*00007b50*/ MOV         R2, FP 
    /*00007b54*/ LDR         R3, [R0, #20] 
    /*00007b58*/ MOV         R0, R7 
    /*00007b5c*/ BLX         R3 
    /*00007b60*/ MOV         R1, SP 
    /*00007b64*/ MOV         R0, SL 
    /*00007b68*/ BL          0x0000000000007B68          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007b6c*/ B           H264E_ConfigRegs_x7ab8
FUNC_END H264E_ConfigRegs


FUNC_BEGIN H264E_ReadRegs
    /*00007b70*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00007b74*/ SUB         SP, SP, #68                 @ 0x44 
    /*00007b78*/ MOV         R6, R1 
    /*00007b7c*/ MOV         R7, R0 
    /*00007b80*/ BL          0x0000000000007B80          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00007b84*/ SUBS        R5, R0, #0 
    /*00007b88*/ BEQ         H264E_ReadRegs_x7b98
    H264E_ReadRegs_x7b8c:
    /*00007b8c*/ MOV         R0, R5 
    /*00007b90*/ ADD         SP, SP, #68                 @ 0x44 
    /*00007b94*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_ReadRegs_x7b98:
    /*00007b98*/ MOV         R0, R6 
    /*00007b9c*/ BL          0x0000000000007B9C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00007ba0*/ SUBS        R5, R0, #0 
    /*00007ba4*/ BNE         H264E_ReadRegs_x7b8c
    /*00007ba8*/ MOVW        R8, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007bac*/ MOVT        R8, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007bb0*/ ADD         R3, R8, R7, LSL #2 
    /*00007bb4*/ LDR         R4, [R3, #64]               @ 0x40 
    /*00007bb8*/ ADD         R3, R4, #12288              @ 0x3000 
    /*00007bbc*/ LDR         R2, [R3, #2396]             @ 0x95c 
    /*00007bc0*/ CMP         R2, #1 
    /*00007bc4*/ BEQ         H264E_ReadRegs_x7d50
    /*00007bc8*/ LDR         SL, [R6, #8] 
    /*00007bcc*/ CMP         SL, #0 
    /*00007bd0*/ BEQ         H264E_ReadRegs_x7cd4
    /*00007bd4*/ ADD         FP, R4, #9152               @ 0x23c0 
    /*00007bd8*/ ADD         R9, R4, #9216               @ 0x2400 
    /*00007bdc*/ ADD         FP, FP, #52                 @ 0x34 
    /*00007be0*/ ADD         R9, R9, #32 
    /*00007be4*/ ADD         R3, R4, #724                @ 0x2d4 
    /*00007be8*/ STR         R3, [SP, #24] 
    /*00007bec*/ MOV         R3, #1 
    /*00007bf0*/ STR         R3, [SP, #20] 
    H264E_ReadRegs_x7bf4:
    /*00007bf4*/ LDR         R3, [SP, #20] 
    /*00007bf8*/ SUB         R2, R2, #1 
    /*00007bfc*/ CMP         R2, SL 
    /*00007c00*/ MOVEQ       R3, #2 
    /*00007c04*/ STR         R3, [SP, #20] 
    H264E_ReadRegs_x7c08:
    /*00007c08*/ ADD         SL, R4, #8192               @ 0x2000 
    /*00007c0c*/ LDR         R1, [SP, #24] 
    /*00007c10*/ LDR         R0, [R6, #12] 
    /*00007c14*/ BL          0x0000000000007C14          @ H264E_DRV_ReadRegs [R_ARM_CALL: .text+0x12d4c] 
    /*00007c18*/ LDR         R2, [SL, #24] 
    /*00007c1c*/ CMP         R2, #0 
    /*00007c20*/ BNE         H264E_ReadRegs_x7d34
    H264E_ReadRegs_x7c24:
    /*00007c24*/ LDR         R2, [R8, #136]              @ 0x88 
    /*00007c28*/ MOV         R0, #19 
    /*00007c2c*/ STR         FP, [SP, #56]               @ 0x38 
    /*00007c30*/ STR         R9, [SP, #60]               @ 0x3c 
    /*00007c34*/ STR         R2, [SP, #52]               @ 0x34 
    /*00007c38*/ BL          0x0000000000007C38          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007c3c*/ LDR         R3, [SP, #20] 
    /*00007c40*/ ADD         R2, SP, #32 
    /*00007c44*/ LDR         R1, [R6, #12] 
    /*00007c48*/ LDR         R6, [R0, #24] 
    /*00007c4c*/ MOV         R0, R7 
    /*00007c50*/ BLX         R6 
    /*00007c54*/ LDR         R2, [SL, #1044]             @ 0x414 
    /*00007c58*/ LDR         R3, [R4, #728]              @ 0x2d8 
    /*00007c5c*/ STR         R2, [R4, #792]              @ 0x318 
    /*00007c60*/ CMP         R3, #0 
    /*00007c64*/ LDR         R2, [SL, #1048]             @ 0x418 
    /*00007c68*/ STR         R2, [R4, #796]              @ 0x31c 
    /*00007c6c*/ BNE         H264E_ReadRegs_x7c7c
    /*00007c70*/ LDR         R2, [R4, #732]              @ 0x2dc 
    /*00007c74*/ CMP         R2, #0 
    /*00007c78*/ BEQ         H264E_ReadRegs_x7c88
    H264E_ReadRegs_x7c7c:
    /*00007c7c*/ LDR         R2, [R4, #740]              @ 0x2e4 
    /*00007c80*/ CMP         R2, #1 
    /*00007c84*/ BEQ         H264E_ReadRegs_x7c98
    H264E_ReadRegs_x7c88:
    /*00007c88*/ LDR         R2, [R4, #800]              @ 0x320 
    /*00007c8c*/ CMP         R2, #1 
    /*00007c90*/ BNE         H264E_ReadRegs_x7b8c
    /*00007c94*/ LDR         R2, [R4, #740]              @ 0x2e4 
    H264E_ReadRegs_x7c98:
    /*00007c98*/ STR         R2, [SP, #12] 
    /*00007c9c*/ MOVW        R1, #3772                   @ 0xebc 
    /*00007ca0*/ LDR         R0, [R4, #732]              @ 0x2dc 
    /*00007ca4*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1378] 
    /*00007ca8*/ STR         R3, [SP, #4] 
    /*00007cac*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1378] 
    /*00007cb0*/ STR         R1, [SP] 
    /*00007cb4*/ MOV         R1, #10 
    /*00007cb8*/ STR         R0, [SP, #8] 
    /*00007cbc*/ MOV         R0, #3 
    /*00007cc0*/ LDR         R3, [PC, #220]              @ 0x0000000000007da4 
    /*00007cc4*/ BL          0x0000000000007CC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007cc8*/ MOV         R0, R5 
    /*00007ccc*/ ADD         SP, SP, #68                 @ 0x44 
    /*00007cd0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_ReadRegs_x7cd4:
    /*00007cd4*/ STR         R3, [SP, #28] 
    /*00007cd8*/ ADD         FP, R4, #9152               @ 0x23c0 
    /*00007cdc*/ ADD         R3, R4, #724                @ 0x2d4 
    /*00007ce0*/ ADD         FP, FP, #52                 @ 0x34 
    /*00007ce4*/ ADD         R9, R4, #9216               @ 0x2400 
    /*00007ce8*/ MOV         R1, SL 
    /*00007cec*/ MOV         R0, R3 
    /*00007cf0*/ MOV         R2, #80                     @ 0x50 
    /*00007cf4*/ ADD         R9, R9, #32 
    /*00007cf8*/ STR         R3, [SP, #24] 
    /*00007cfc*/ BL          0x0000000000007CFC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00007d00*/ MOV         R1, SL 
    /*00007d04*/ MOV         R2, #44                     @ 0x2c 
    /*00007d08*/ MOV         R0, FP 
    /*00007d0c*/ BL          0x0000000000007D0C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00007d10*/ MOV         R2, #312                    @ 0x138 
    /*00007d14*/ MOV         R1, SL 
    /*00007d18*/ MOV         R0, R9 
    /*00007d1c*/ BL          0x0000000000007D1C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00007d20*/ LDR         R3, [SP, #28] 
    /*00007d24*/ STR         SL, [SP, #20] 
    /*00007d28*/ LDR         SL, [R6, #8] 
    /*00007d2c*/ LDR         R2, [R3, #2396]             @ 0x95c 
    /*00007d30*/ B           H264E_ReadRegs_x7bf4
    H264E_ReadRegs_x7d34:
    /*00007d34*/ ADD         R2, R4, #1104               @ 0x450 
    /*00007d38*/ ADD         R1, R4, #13632              @ 0x3540 
    /*00007d3c*/ ADD         R2, R2, #12 
    /*00007d40*/ ADD         R1, R1, #24 
    /*00007d44*/ LDR         R0, [R6, #12] 
    /*00007d48*/ BL          0x0000000000007D48          @ H264E_DRV_ReadRcnRefShareParam [R_ARM_CALL: .text+0x14b18] 
    /*00007d4c*/ B           H264E_ReadRegs_x7c24
    H264E_ReadRegs_x7d50:
    /*00007d50*/ ADD         R3, R4, #724                @ 0x2d4 
    /*00007d54*/ ADD         FP, R4, #9152               @ 0x23c0 
    /*00007d58*/ ADD         FP, FP, #52                 @ 0x34 
    /*00007d5c*/ ADD         R9, R4, #9216               @ 0x2400 
    /*00007d60*/ MOV         R0, R3 
    /*00007d64*/ MOV         R2, #80                     @ 0x50 
    /*00007d68*/ MOV         R1, R5 
    /*00007d6c*/ ADD         R9, R9, #32 
    /*00007d70*/ STR         R3, [SP, #24] 
    /*00007d74*/ BL          0x0000000000007D74          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00007d78*/ MOV         R2, #44                     @ 0x2c 
    /*00007d7c*/ MOV         R1, R5 
    /*00007d80*/ MOV         R0, FP 
    /*00007d84*/ BL          0x0000000000007D84          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00007d88*/ MOV         R0, R9 
    /*00007d8c*/ MOV         R2, #312                    @ 0x138 
    /*00007d90*/ MOV         R1, R5 
    /*00007d94*/ BL          0x0000000000007D94          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00007d98*/ MOV         R3, #3 
    /*00007d9c*/ STR         R3, [SP, #20] 
    /*00007da0*/ B           H264E_ReadRegs_x7c08
    /*00007da4*/ ANDEQ       R0, R0, R0, LSR #7 
FUNC_END H264E_ReadRegs


FUNC_BEGIN H264E_GetSseCfg
    /*00007da8*/ PUSH        {R4, R5, R6, LR} 
    /*00007dac*/ SUB         SP, SP, #16 
    /*00007db0*/ MOV         R6, R1 
    /*00007db4*/ MOV         R5, R0 
    /*00007db8*/ BL          0x0000000000007DB8          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00007dbc*/ SUBS        R4, R0, #0 
    /*00007dc0*/ BEQ         H264E_GetSseCfg_x7dd0
    H264E_GetSseCfg_x7dc4:
    /*00007dc4*/ MOV         R0, R4 
    /*00007dc8*/ ADD         SP, SP, #16 
    /*00007dcc*/ POP         {R4, R5, R6, PC} 
    H264E_GetSseCfg_x7dd0:
    /*00007dd0*/ MOV         R0, R5 
    /*00007dd4*/ BL          0x0000000000007DD4          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00007dd8*/ SUBS        R4, R0, #0 
    /*00007ddc*/ BNE         H264E_GetSseCfg_x7dc4
    /*00007de0*/ MOV         R0, R6 
    /*00007de4*/ BL          0x0000000000007DE4          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00007de8*/ SUBS        R4, R0, #0 
    /*00007dec*/ BNE         H264E_GetSseCfg_x7dc4
    /*00007df0*/ BL          0x0000000000007DF0          @ H264E_DRV_CheckSse [R_ARM_CALL: .text+0x12910] 
    /*00007df4*/ CMP         R0, #0 
    /*00007df8*/ BEQ         H264E_GetSseCfg_x7e6c
    /*00007dfc*/ LDR         R1, [R6] 
    /*00007e00*/ CMP         R1, #7 
    /*00007e04*/ BHI         H264E_GetSseCfg_x7e34
    /*00007e08*/ MOV         R2, #24 
    /*00007e0c*/ MOVW        IP, #14492                  @ 0x389c 
    /*00007e10*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007e14*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007e18*/ ADD         R5, R3, R5, LSL #2 
    /*00007e1c*/ MOV         R0, R6 
    /*00007e20*/ MLA         R1, R2, R1, IP 
    /*00007e24*/ LDR         R3, [R5, #64]               @ 0x40 
    /*00007e28*/ ADD         R1, R3, R1 
    /*00007e2c*/ BL          0x0000000000007E2C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00007e30*/ B           H264E_GetSseCfg_x7dc4
    H264E_GetSseCfg_x7e34:
    /*00007e34*/ STR         R1, [SP, #4] 
    /*00007e38*/ MOV         R2, #7 
    /*00007e3c*/ MOVW        R3, #5829                   @ 0x16c5 
    /*00007e40*/ STR         R2, [SP, #8] 
    /*00007e44*/ STR         R3, [SP] 
    /*00007e48*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13f8] 
    /*00007e4c*/ LDR         R3, [PC, #72]               @ 0x0000000000007e9c 
    /*00007e50*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13f8] 
    /*00007e54*/ MOV         R1, #10 
    /*00007e58*/ MOV         R0, #3 
    /*00007e5c*/ MOVW        R4, #32771                  @ 0x8003 
    /*00007e60*/ BL          0x0000000000007E60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007e64*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00007e68*/ B           H264E_GetSseCfg_x7dc4
    H264E_GetSseCfg_x7e6c:
    /*00007e6c*/ MOVW        R3, #5821                   @ 0x16bd 
    /*00007e70*/ STR         R5, [SP, #4] 
    /*00007e74*/ STR         R3, [SP] 
    /*00007e78*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13c4] 
    /*00007e7c*/ LDR         R3, [PC, #24]               @ 0x0000000000007e9c 
    /*00007e80*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13c4] 
    /*00007e84*/ MOV         R1, #10 
    /*00007e88*/ MOV         R0, #3 
    /*00007e8c*/ MOVW        R4, #32776                  @ 0x8008 
    /*00007e90*/ BL          0x0000000000007E90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007e94*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00007e98*/ B           H264E_GetSseCfg_x7dc4
    /*00007e9c*/ @           <UNDEFINED> instruction: 0x000003b0 
FUNC_END H264E_GetSseCfg


FUNC_BEGIN H264E_FreeRcnRefBUF.part.43
    /*00007ea0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00007ea4*/ ADD         R4, R0, #1072               @ 0x430 
    /*00007ea8*/ ADD         R6, R0, #1088               @ 0x440 
    /*00007eac*/ ADD         R4, R4, #4 
    /*00007eb0*/ ADD         R6, R6, #8 
    /*00007eb4*/ MVN         R7, #0 
    H264E_FreeRcnRefBUF.part.43_x7eb8:
    /*00007eb8*/ LDR         R5, [R4] 
    /*00007ebc*/ MOV         R0, #1 
    /*00007ec0*/ CMN         R5, #1 
    /*00007ec4*/ BEQ         H264E_FreeRcnRefBUF.part.43_x7edc
    /*00007ec8*/ BL          0x0000000000007EC8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007ecc*/ LDR         R3, [R0, #4] 
    /*00007ed0*/ MOV         R0, R5 
    /*00007ed4*/ BLX         R3 
    /*00007ed8*/ STR         R7, [R4] 
    H264E_FreeRcnRefBUF.part.43_x7edc:
    /*00007edc*/ LDR         R5, [R4, #20] 
    /*00007ee0*/ MOV         R0, #1 
    /*00007ee4*/ CMN         R5, #1 
    /*00007ee8*/ BEQ         H264E_FreeRcnRefBUF.part.43_x7f00
    /*00007eec*/ BL          0x0000000000007EEC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007ef0*/ LDR         R3, [R0, #4] 
    /*00007ef4*/ MOV         R0, R5 
    /*00007ef8*/ BLX         R3 
    /*00007efc*/ STR         R7, [R4, #20] 
    H264E_FreeRcnRefBUF.part.43_x7f00:
    /*00007f00*/ ADD         R4, R4, #4 
    /*00007f04*/ CMP         R4, R6 
    /*00007f08*/ BNE         H264E_FreeRcnRefBUF.part.43_x7eb8
    /*00007f0c*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END H264E_FreeRcnRefBUF.part.43


FUNC_BEGIN H264E_GetBitStream
    /*00007f10*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00007f14*/ SUB         SP, SP, #116                @ 0x74 
    /*00007f18*/ MOV         R5, R1 
    /*00007f1c*/ MOV         R6, R0 
    /*00007f20*/ BL          0x0000000000007F20          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00007f24*/ SUBS        R4, R0, #0 
    /*00007f28*/ BEQ         H264E_GetBitStream_x7f38
    H264E_GetBitStream_x7f2c:
    /*00007f2c*/ MOV         R0, R4 
    /*00007f30*/ ADD         SP, SP, #116                @ 0x74 
    /*00007f34*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_GetBitStream_x7f38:
    /*00007f38*/ MOV         R0, R6 
    /*00007f3c*/ BL          0x0000000000007F3C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00007f40*/ SUBS        R4, R0, #0 
    /*00007f44*/ BNE         H264E_GetBitStream_x7f2c
    /*00007f48*/ MOV         R0, R5 
    /*00007f4c*/ BL          0x0000000000007F4C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00007f50*/ SUBS        R4, R0, #0 
    /*00007f54*/ BNE         H264E_GetBitStream_x7f2c
    /*00007f58*/ MOVW        SL, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007f5c*/ MOVT        SL, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007f60*/ ADD         R3, SL, R6, LSL #2 
    /*00007f64*/ ADD         R1, SP, #76                 @ 0x4c 
    /*00007f68*/ LDR         R7, [R3, #64]               @ 0x40 
    /*00007f6c*/ STR         R4, [R5, #24] 
    /*00007f70*/ ADD         R3, R7, #9792               @ 0x2640 
    /*00007f74*/ ADD         R8, R7, #12288              @ 0x3000 
    /*00007f78*/ ADD         R0, R3, #40                 @ 0x28 
    /*00007f7c*/ STR         R7, [SP, #20] 
    /*00007f80*/ STR         R8, [SP, #32] 
    /*00007f84*/ STR         R0, [SP, #24] 
    /*00007f88*/ BL          0x0000000000007F88          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007f8c*/ LDR         R3, [R8, #2408]             @ 0x968 
    /*00007f90*/ ADD         R3, R7, R3, LSL #2 
    /*00007f94*/ LDR         R7, [R3, #1060]             @ 0x424 
    /*00007f98*/ LDR         R0, [R7, #160]              @ 0xa0 
    /*00007f9c*/ LDR         R2, [R7, #164]              @ 0xa4 
    /*00007fa0*/ LDR         R3, [R7, #172]              @ 0xac 
    /*00007fa4*/ LDR         R9, [R0] 
    /*00007fa8*/ LDR         R2, [R2] 
    /*00007fac*/ LDR         R1, [R7, #168]              @ 0xa8 
    /*00007fb0*/ CMP         R9, R2 
    /*00007fb4*/ LDR         R3, [R3] 
    /*00007fb8*/ LDR         FP, [R1] 
    /*00007fbc*/ MOVCC       R1, #0 
    /*00007fc0*/ MOVCS       R1, #1 
    /*00007fc4*/ CMP         R9, R3 
    /*00007fc8*/ MOVHI       IP, #0 
    /*00007fcc*/ MOVLS       IP, #1 
    /*00007fd0*/ CMP         FP, R3 
    /*00007fd4*/ MOVCC       LR, #0 
    /*00007fd8*/ MOVCS       LR, #1 
    /*00007fdc*/ AND         R8, R1, IP 
    /*00007fe0*/ TST         R8, LR 
    /*00007fe4*/ BNE         H264E_GetBitStream_x80e4
    /*00007fe8*/ CMP         R2, FP 
    /*00007fec*/ MOVCC       R2, #0 
    /*00007ff0*/ MOVCS       R2, #1 
    /*00007ff4*/ TST         R8, R2 
    /*00007ff8*/ BNE         H264E_GetBitStream_x80e4
    /*00007ffc*/ AND         R1, R1, LR 
    /*00008000*/ TST         R2, R1 
    /*00008004*/ BNE         H264E_GetBitStream_x80e4
    /*00008008*/ AND         IP, IP, LR 
    /*0000800c*/ TST         R2, IP 
    /*00008010*/ BNE         H264E_GetBitStream_x80e4
    /*00008014*/ LDR         IP, [R7, #64]               @ 0x40 
    /*00008018*/ MOVW        R2, #2045                   @ 0x7fd 
    /*0000801c*/ LDR         R3, [R7, #128]              @ 0x80 
    /*00008020*/ MOVW        R0, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x150c] 
    /*00008024*/ LDR         R1, [PC, #2352]             @ 0x000000000000895c 
    /*00008028*/ MOVT        R0, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x150c] 
    /*0000802c*/ STR         IP, [SP, #8] 
    /*00008030*/ LDR         IP, [R7, #32] 
    /*00008034*/ STR         IP, [SP, #4] 
    /*00008038*/ LDR         IP, [R7, #96]               @ 0x60 
    /*0000803c*/ STR         IP, [SP] 
    /*00008040*/ BL          0x0000000000008040          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00008044*/ ADD         R0, R7, #160                @ 0xa0 
    /*00008048*/ LDM         R0, {R0, R1, R2, R3} 
    /*0000804c*/ LDR         R8, [R1] 
    /*00008050*/ LDR         R9, [R0] 
    /*00008054*/ LDR         R3, [R3] 
    /*00008058*/ CMP         R9, R8 
    /*0000805c*/ LDR         R2, [R2] 
    /*00008060*/ MOVCC       IP, #0 
    /*00008064*/ MOVCS       IP, #1 
    /*00008068*/ CMP         R9, R3 
    /*0000806c*/ MOVHI       FP, #0 
    /*00008070*/ MOVLS       FP, #1 
    /*00008074*/ CMP         R2, R3 
    /*00008078*/ MOVCC       R1, #0 
    /*0000807c*/ MOVCS       R1, #1 
    /*00008080*/ AND         LR, IP, FP 
    /*00008084*/ TST         LR, R1 
    /*00008088*/ BNE         H264E_GetBitStream_x80e4
    /*0000808c*/ CMP         R8, R2 
    /*00008090*/ MOVCC       R2, #0 
    /*00008094*/ MOVCS       R2, #1 
    /*00008098*/ TST         LR, R2 
    /*0000809c*/ BNE         H264E_GetBitStream_x80e4
    /*000080a0*/ AND         IP, IP, R1 
    /*000080a4*/ TST         R2, IP 
    /*000080a8*/ BNE         H264E_GetBitStream_x80e4
    /*000080ac*/ AND         R1, R1, FP 
    /*000080b0*/ TST         R2, R1 
    /*000080b4*/ BNE         H264E_GetBitStream_x80e4
    /*000080b8*/ MOVW        R3, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1564] 
    /*000080bc*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*000080c0*/ MOVT        R3, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1564] 
    /*000080c4*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*000080c8*/ MOVW        R2, #2052                   @ 0x804 
    /*000080cc*/ LDR         R1, [PC, #2184]             @ 0x000000000000895c 
    /*000080d0*/ BL          0x00000000000080D0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000080d4*/ LDR         R0, [R7, #160]              @ 0xa0 
    /*000080d8*/ LDR         R3, [R7, #172]              @ 0xac 
    /*000080dc*/ LDR         R9, [R0] 
    /*000080e0*/ LDR         R3, [R3] 
    H264E_GetBitStream_x80e4:
    /*000080e4*/ CMP         R9, R3 
    /*000080e8*/ SUBLS       R2, R3, R9 
    /*000080ec*/ LDRHI       R2, [R7, #8] 
    /*000080f0*/ ADDHI       R2, R3, R2 
    /*000080f4*/ SUBHI       R2, R2, R9 
    /*000080f8*/ CMP         R2, #0 
    /*000080fc*/ BEQ         H264E_GetBitStream_x8908
    /*00008100*/ LDR         R2, [R7, #176]              @ 0xb0 
    /*00008104*/ ADD         R8, R2, R9 
    /*00008108*/ STR         R2, [SP, #28] 
    /*0000810c*/ LDR         R2, [R8, #12] 
    /*00008110*/ CMP         R6, R2 
    /*00008114*/ BNE         H264E_GetBitStream_x8888
    /*00008118*/ LDR         R2, [SL, #128]              @ 0x80 
    /*0000811c*/ CMP         R2, #1 
    /*00008120*/ BEQ         H264E_GetBitStream_x82c0
    H264E_GetBitStream_x8124:
    /*00008124*/ LDR         R1, [R8] 
    /*00008128*/ CMP         R9, R3 
    /*0000812c*/ ADD         IP, R1, R9 
    /*00008130*/ BHI         H264E_GetBitStream_x83b0
    /*00008134*/ CMP         IP, R3 
    /*00008138*/ BHI         H264E_GetBitStream_x83c8
    /*0000813c*/ LDR         R2, [R7, #8] 
    /*00008140*/ CMP         IP, R2 
    /*00008144*/ BCC         H264E_GetBitStream_x8400
    H264E_GetBitStream_x8148:
    /*00008148*/ SUB         R9, R2, R9 
    /*0000814c*/ SUB         IP, R1, R9 
    /*00008150*/ MOV         R1, R9 
    /*00008154*/ MOV         LR, IP 
    H264E_GetBitStream_x8158:
    /*00008158*/ LDRD        SL, [R7] 
    /*0000815c*/ ORRS        R3, SL, FP 
    /*00008160*/ BEQ         H264E_GetBitStream_x8178
    /*00008164*/ LDR         R6, [SP, #28] 
    /*00008168*/ SUBS        R2, SL, R6 
    /*0000816c*/ SBC         R3, FP, #0 
    /*00008170*/ ADDS        SL, R2, R8 
    /*00008174*/ ADC         FP, R3, #0 
    H264E_GetBitStream_x8178:
    /*00008178*/ STR         IP, [R0] 
    /*0000817c*/ ADD         LR, R1, LR 
    /*00008180*/ STR         R8, [R5, #8] 
    /*00008184*/ MOV         R0, #0 
    /*00008188*/ STRD        SL, [R5] 
    /*0000818c*/ LDR         R3, [R8, #4] 
    /*00008190*/ STR         R0, [R5, #32] 
    /*00008194*/ SUB         LR, LR, R3 
    /*00008198*/ STR         LR, [R5, #12] 
    /*0000819c*/ LDRD        R2, [R8, #16] 
    /*000081a0*/ STRD        R2, [R5, #16] 
    /*000081a4*/ LDRB        R3, [R8, #11] 
    /*000081a8*/ TST         R3, #1 
    /*000081ac*/ BEQ         H264E_GetBitStream_x81d8
    /*000081b0*/ LDR         IP, [SP, #32] 
    /*000081b4*/ LDR         R3, [IP, #2408]             @ 0x968 
    /*000081b8*/ LDR         R2, [IP, #2396]             @ 0x95c 
    /*000081bc*/ ADD         R3, R3, #1 
    /*000081c0*/ STR         R3, [IP, #2408]             @ 0x968 
    /*000081c4*/ CMP         R3, R2 
    /*000081c8*/ MOVEQ       R3, #1 
    /*000081cc*/ STREQ       R3, [R5, #24] 
    /*000081d0*/ MOVEQ       R3, IP 
    /*000081d4*/ STREQ       R0, [R3, #2408]             @ 0x968 
    H264E_GetBitStream_x81d8:
    /*000081d8*/ LDRB        R2, [R8, #8] 
    /*000081dc*/ STR         R2, [R5, #28] 
    /*000081e0*/ LDRB        R3, [R8, #8] 
    /*000081e4*/ CMP         R3, #1 
    /*000081e8*/ BEQ         H264E_GetBitStream_x84d4
    H264E_GetBitStream_x81ec:
    /*000081ec*/ LDR         R0, [SP, #20] 
    /*000081f0*/ ADD         FP, R0, #8192               @ 0x2000 
    /*000081f4*/ LDR         R0, [FP, #2156]             @ 0x86c 
    /*000081f8*/ CMP         R0, #0 
    /*000081fc*/ BEQ         H264E_GetBitStream_x8210
    /*00008200*/ CMP         R2, #6 
    /*00008204*/ BEQ         H264E_GetBitStream_x879c
    H264E_GetBitStream_x8208:
    /*00008208*/ CMP         R3, #1 
    /*0000820c*/ BEQ         H264E_GetBitStream_x880c
    H264E_GetBitStream_x8210:
    /*00008210*/ LDR         R3, [FP, #1012]             @ 0x3f4 
    /*00008214*/ MOV         R2, #0 
    /*00008218*/ LDR         R0, [R8] 
    /*0000821c*/ LDR         R1, [R8, #4] 
    /*00008220*/ SUB         R3, R3, #64                 @ 0x40 
    /*00008224*/ ADD         R3, R3, R0 
    /*00008228*/ SUB         R3, R3, R1 
    /*0000822c*/ STR         R3, [FP, #1012]             @ 0x3f4 
    /*00008230*/ STR         R2, [R5, #36]               @ 0x24 
    H264E_GetBitStream_x8234:
    /*00008234*/ LDR         R1, [R7, #160]              @ 0xa0 
    /*00008238*/ LDR         R2, [R7, #164]              @ 0xa4 
    /*0000823c*/ LDR         R3, [R7, #172]              @ 0xac 
    /*00008240*/ LDR         R1, [R1] 
    /*00008244*/ LDR         R2, [R2] 
    /*00008248*/ LDR         R0, [R7, #168]              @ 0xa8 
    /*0000824c*/ LDR         R3, [R3] 
    /*00008250*/ CMP         R1, R2 
    /*00008254*/ LDR         LR, [R0] 
    /*00008258*/ MOVCC       R0, #0 
    /*0000825c*/ MOVCS       R0, #1 
    /*00008260*/ CMP         R1, R3 
    /*00008264*/ MOVHI       R1, #0 
    /*00008268*/ MOVLS       R1, #1 
    /*0000826c*/ CMP         LR, R3 
    /*00008270*/ AND         IP, R0, R1 
    /*00008274*/ MOVCC       R3, #0 
    /*00008278*/ MOVCS       R3, #1 
    /*0000827c*/ TST         R3, IP 
    /*00008280*/ BNE         H264E_GetBitStream_x82b0
    /*00008284*/ CMP         R2, LR 
    /*00008288*/ MOVCC       R2, #0 
    /*0000828c*/ MOVCS       R2, #1 
    /*00008290*/ TST         IP, R2 
    /*00008294*/ BNE         H264E_GetBitStream_x82b0
    /*00008298*/ AND         R0, R0, R3 
    /*0000829c*/ TST         R2, R0 
    /*000082a0*/ BNE         H264E_GetBitStream_x82b0
    /*000082a4*/ AND         R3, R3, R1 
    /*000082a8*/ TST         R2, R3 
    /*000082ac*/ BEQ         H264E_GetBitStream_x8408
    H264E_GetBitStream_x82b0:
    /*000082b0*/ ADD         R1, SP, #76                 @ 0x4c 
    /*000082b4*/ LDR         R0, [SP, #24] 
    /*000082b8*/ BL          0x00000000000082B8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000082bc*/ B           H264E_GetBitStream_x7f2c
    H264E_GetBitStream_x82c0:
    /*000082c0*/ LDRB        R2, [R8, #8] 
    /*000082c4*/ CMP         R2, #7 
    /*000082c8*/ BNE         H264E_GetBitStream_x8124
    /*000082cc*/ LDR         R3, [SP, #20] 
    /*000082d0*/ ADD         R1, SP, #112                @ 0x70 
    /*000082d4*/ MOV         FP, #0 
    /*000082d8*/ MOV         R6, R9 
    /*000082dc*/ MOV         IP, R1 
    /*000082e0*/ STR         R7, [SP, #52]               @ 0x34 
    /*000082e4*/ LDR         R0, [R3, #708]              @ 0x2c4 
    /*000082e8*/ LDR         R2, [R3, #704]              @ 0x2c0 
    /*000082ec*/ LDR         R1, [R3, #712]              @ 0x2c8 
    /*000082f0*/ LDR         R3, [R3, #716]              @ 0x2cc 
    /*000082f4*/ ADD         R2, R2, R0 
    /*000082f8*/ ADD         R2, R2, R1 
    /*000082fc*/ STR         R2, [SP, #68]               @ 0x44 
    /*00008300*/ ADD         R3, R3, #9 
    /*00008304*/ MOV         R1, IP 
    /*00008308*/ ADD         R3, R3, R2 
    /*0000830c*/ LDR         R2, [R7, #8] 
    /*00008310*/ MOVW        R0, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14fc] 
    /*00008314*/ MOVT        R0, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14fc] 
    /*00008318*/ STR         R0, [SP, #44]               @ 0x2c 
    /*0000831c*/ MOV         R0, R2 
    /*00008320*/ STR         R8, [R1, #-32]!             @ 0xffffffe0 
    /*00008324*/ STR         R3, [SP, #36]               @ 0x24 
    /*00008328*/ MOV         R7, R0 
    /*0000832c*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00008330*/ STR         R2, [SP, #40]               @ 0x28 
    /*00008334*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00008338*/ MOV         R2, R8 
    /*0000833c*/ STR         R8, [SP, #56]               @ 0x38 
    /*00008340*/ STR         R9, [SP, #60]               @ 0x3c 
    /*00008344*/ MOV         R9, R1 
    /*00008348*/ STR         R4, [SP, #64]               @ 0x40 
    /*0000834c*/ MOV         R4, FP 
    /*00008350*/ STR         R3, [SP, #48]               @ 0x30 
    /*00008354*/ LDR         R8, [SP, #28] 
    /*00008358*/ B           H264E_GetBitStream_x8374
    H264E_GetBitStream_x835c:
    /*0000835c*/ LDRB        R3, [SL, #8] 
    /*00008360*/ MOV         R2, SL 
    /*00008364*/ STR         SL, [R9, FP, LSL #2] 
    /*00008368*/ AND         R1, R3, #251                @ 0xfb 
    /*0000836c*/ CMP         R1, #1 
    /*00008370*/ BEQ         H264E_GetBitStream_x8518
    H264E_GetBitStream_x8374:
    /*00008374*/ LDR         R3, [R2] 
    /*00008378*/ ADD         FP, FP, #1 
    /*0000837c*/ ADD         R6, R6, R3 
    /*00008380*/ ADD         R4, R4, R3 
    /*00008384*/ CMP         R7, R6 
    /*00008388*/ SUBLS       R6, R6, R7 
    /*0000838c*/ CMP         FP, #8 
    /*00008390*/ ADD         SL, R8, R6 
    /*00008394*/ BNE         H264E_GetBitStream_x835c
    /*00008398*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000839c*/ MOVW        R2, #2103                   @ 0x837 
    /*000083a0*/ LDR         R1, [PC, #1460]             @ 0x000000000000895c 
    /*000083a4*/ LDR         R0, [SP, #48]               @ 0x30 
    /*000083a8*/ BL          0x00000000000083A8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000083ac*/ B           H264E_GetBitStream_x835c
    H264E_GetBitStream_x83b0:
    /*000083b0*/ LDR         R2, [R7, #8] 
    /*000083b4*/ CMP         IP, R2 
    /*000083b8*/ BCC         H264E_GetBitStream_x8400
    /*000083bc*/ SUB         IP, IP, R2 
    /*000083c0*/ CMP         IP, R3 
    /*000083c4*/ BLS         H264E_GetBitStream_x8148
    H264E_GetBitStream_x83c8:
    /*000083c8*/ MOVW        R3, #2258                   @ 0x8d2 
    /*000083cc*/ MOV         R1, #10 
    /*000083d0*/ STR         R3, [SP] 
    /*000083d4*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x157c] 
    /*000083d8*/ LDR         R3, [PC, #1404]             @ 0x000000000000895c 
    /*000083dc*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x157c] 
    /*000083e0*/ MOV         R0, #4 
    /*000083e4*/ MOVW        R4, #32771                  @ 0x8003 
    /*000083e8*/ BL          0x00000000000083E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000083ec*/ ADD         R1, SP, #76                 @ 0x4c 
    /*000083f0*/ LDR         R0, [SP, #24] 
    /*000083f4*/ MOVT        R4, #40970                  @ 0xa00a 
    /*000083f8*/ BL          0x00000000000083F8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000083fc*/ B           H264E_GetBitStream_x7f2c
    H264E_GetBitStream_x8400:
    /*00008400*/ MOV         LR, #0 
    /*00008404*/ B           H264E_GetBitStream_x8158
    H264E_GetBitStream_x8408:
    /*00008408*/ LDR         IP, [R7, #64]               @ 0x40 
    /*0000840c*/ MOVW        R2, #2355                   @ 0x933 
    /*00008410*/ LDR         R3, [R7, #128]              @ 0x80 
    /*00008414*/ MOVW        R0, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x150c] 
    /*00008418*/ LDR         R1, [PC, #1340]             @ 0x000000000000895c 
    /*0000841c*/ MOVT        R0, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x150c] 
    /*00008420*/ STR         IP, [SP, #8] 
    /*00008424*/ LDR         IP, [R7, #32] 
    /*00008428*/ STR         IP, [SP, #4] 
    /*0000842c*/ LDR         IP, [R7, #96]               @ 0x60 
    /*00008430*/ STR         IP, [SP] 
    /*00008434*/ BL          0x0000000000008434          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00008438*/ LDR         R1, [R7, #160]              @ 0xa0 
    /*0000843c*/ LDR         R2, [R7, #164]              @ 0xa4 
    /*00008440*/ LDR         R3, [R7, #172]              @ 0xac 
    /*00008444*/ LDR         R1, [R1] 
    /*00008448*/ LDR         R2, [R2] 
    /*0000844c*/ LDR         R0, [R7, #168]              @ 0xa8 
    /*00008450*/ LDR         R3, [R3] 
    /*00008454*/ CMP         R1, R2 
    /*00008458*/ LDR         LR, [R0] 
    /*0000845c*/ MOVCC       R0, #0 
    /*00008460*/ MOVCS       R0, #1 
    /*00008464*/ CMP         R1, R3 
    /*00008468*/ MOVHI       R1, #0 
    /*0000846c*/ MOVLS       R1, #1 
    /*00008470*/ CMP         LR, R3 
    /*00008474*/ AND         IP, R0, R1 
    /*00008478*/ MOVCC       R3, #0 
    /*0000847c*/ MOVCS       R3, #1 
    /*00008480*/ TST         R3, IP 
    /*00008484*/ BNE         H264E_GetBitStream_x82b0
    /*00008488*/ CMP         R2, LR 
    /*0000848c*/ MOVCC       R2, #0 
    /*00008490*/ MOVCS       R2, #1 
    /*00008494*/ TST         IP, R2 
    /*00008498*/ BNE         H264E_GetBitStream_x82b0
    /*0000849c*/ AND         R0, R0, R3 
    /*000084a0*/ TST         R2, R0 
    /*000084a4*/ BNE         H264E_GetBitStream_x82b0
    /*000084a8*/ AND         R3, R3, R1 
    /*000084ac*/ TST         R2, R3 
    /*000084b0*/ BNE         H264E_GetBitStream_x82b0
    /*000084b4*/ MOVW        R3, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1564] 
    /*000084b8*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*000084bc*/ MOVT        R3, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1564] 
    /*000084c0*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*000084c4*/ MOVW        R2, #2362                   @ 0x93a 
    /*000084c8*/ LDR         R1, [PC, #1164]             @ 0x000000000000895c 
    /*000084cc*/ BL          0x00000000000084CC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000084d0*/ B           H264E_GetBitStream_x82b0
    H264E_GetBitStream_x84d4:
    /*000084d4*/ LDRB        R0, [R8, #11] 
    /*000084d8*/ LSRS        R0, R0, #6 
    /*000084dc*/ MOVEQ       R3, #2 
    /*000084e0*/ STREQ       R3, [R5, #28] 
    /*000084e4*/ BNE         H264E_GetBitStream_x8504
    H264E_GetBitStream_x84e8:
    /*000084e8*/ LDR         R3, [SP, #20] 
    /*000084ec*/ ADD         FP, R3, #8192               @ 0x2000 
    /*000084f0*/ LDR         R3, [FP, #2156]             @ 0x86c 
    /*000084f4*/ CMP         R3, #0 
    /*000084f8*/ LDRBNE      R3, [R8, #8] 
    /*000084fc*/ BNE         H264E_GetBitStream_x8208
    /*00008500*/ B           H264E_GetBitStream_x8210
    H264E_GetBitStream_x8504:
    /*00008504*/ CMP         R0, #2 
    /*00008508*/ MOVEQ       R3, #0 
    /*0000850c*/ STREQ       R3, [R5, #28] 
    /*00008510*/ BNE         H264E_GetBitStream_x81ec
    /*00008514*/ B           H264E_GetBitStream_x84e8
    H264E_GetBitStream_x8518:
    /*00008518*/ LDR         R2, [SP, #20] 
    /*0000851c*/ STR         R4, [SP, #44]               @ 0x2c 
    /*00008520*/ ADD         FP, R2, #8192               @ 0x2000 
    /*00008524*/ LDR         R7, [SP, #52]               @ 0x34 
    /*00008528*/ LDR         R8, [SP, #56]               @ 0x38 
    /*0000852c*/ LDR         R1, [FP, #2156]             @ 0x86c 
    /*00008530*/ LDR         R9, [SP, #60]               @ 0x3c 
    /*00008534*/ ADDS        R2, R1, #0 
    /*00008538*/ LDR         R4, [SP, #64]               @ 0x40 
    /*0000853c*/ MOVNE       R2, #1 
    /*00008540*/ CMP         R3, #1 
    /*00008544*/ MOVNE       R2, #0 
    /*00008548*/ CMP         R2, #0 
    /*0000854c*/ BNE         H264E_GetBitStream_x8920
    H264E_GetBitStream_x8550:
    /*00008550*/ LDR         IP, [SP, #36]               @ 0x24 
    /*00008554*/ ADD         R3, R6, #64                 @ 0x40 
    /*00008558*/ LDR         R1, [SP, #40]               @ 0x28 
    /*0000855c*/ ADD         R2, R1, IP 
    /*00008560*/ MOV         R0, IP 
    /*00008564*/ CMP         R3, R2 
    /*00008568*/ BCC         H264E_GetBitStream_x881c
    /*0000856c*/ RSB         R0, R1, #64                 @ 0x40 
    /*00008570*/ SUB         R0, R0, IP 
    /*00008574*/ ADD         R3, R0, R6 
    /*00008578*/ STR         R3, [SP, #48]               @ 0x30 
    H264E_GetBitStream_x857c:
    /*0000857c*/ LDR         R3, [SL] 
    /*00008580*/ LDR         R2, [SP, #40]               @ 0x28 
    /*00008584*/ ADD         R3, R6, R3 
    /*00008588*/ LDR         R1, [R7, #160]              @ 0xa0 
    /*0000858c*/ CMP         R2, R3 
    /*00008590*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00008594*/ SUBLS       R3, R3, R2 
    /*00008598*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000859c*/ STR         R3, [R1] 
    /*000085a0*/ SUB         R2, R2, R0 
    /*000085a4*/ STR         R2, [R5, #32] 
    /*000085a8*/ LDRD        R0, [SL, #16] 
    /*000085ac*/ STRD        R0, [R5, #16] 
    /*000085b0*/ LDRB        R2, [SL, #11] 
    /*000085b4*/ TST         R2, #1 
    /*000085b8*/ BEQ         H264E_GetBitStream_x85e8
    /*000085bc*/ LDR         R0, [SP, #32] 
    /*000085c0*/ LDR         R2, [R0, #2408]             @ 0x968 
    /*000085c4*/ LDR         R1, [R0, #2396]             @ 0x95c 
    /*000085c8*/ ADD         R2, R2, #1 
    /*000085cc*/ STR         R2, [R0, #2408]             @ 0x968 
    /*000085d0*/ CMP         R2, R1 
    /*000085d4*/ MOVEQ       R1, R0 
    /*000085d8*/ MOVEQ       R2, #1 
    /*000085dc*/ STREQ       R2, [R5, #24] 
    /*000085e0*/ MOVEQ       R2, #0 
    /*000085e4*/ STREQ       R2, [R1, #2408]             @ 0x968 
    H264E_GetBitStream_x85e8:
    /*000085e8*/ LDRB        R2, [SL, #8] 
    /*000085ec*/ MOV         LR, #0 
    /*000085f0*/ LDR         R0, [SP, #36]               @ 0x24 
    /*000085f4*/ STR         R2, [R5, #28] 
    /*000085f8*/ LDRB        R2, [SL, #11] 
    /*000085fc*/ LDRB        R1, [SL, #8] 
    /*00008600*/ LSRS        R2, R2, #6 
    /*00008604*/ MOVEQ       R2, #1 
    /*00008608*/ MOVNE       R2, #0 
    /*0000860c*/ CMP         R1, #1 
    /*00008610*/ MOVNE       R2, #0 
    /*00008614*/ ANDEQ       R2, R2, #1 
    /*00008618*/ MOV         R1, #7 
    /*0000861c*/ CMP         R2, #0 
    /*00008620*/ MOVNE       R2, #2 
    /*00008624*/ STRNE       R2, [R5, #28] 
    /*00008628*/ LDR         R2, [FP, #1012]             @ 0x3f4 
    /*0000862c*/ LDR         IP, [SL] 
    /*00008630*/ SUB         R2, R2, #64                 @ 0x40 
    /*00008634*/ LDR         R6, [SL, #4] 
    /*00008638*/ ADD         R2, R2, R0 
    /*0000863c*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*00008640*/ ADD         R2, R2, IP 
    /*00008644*/ LDR         IP, [SP, #80]               @ 0x50 
    /*00008648*/ SUB         R2, R2, R6 
    /*0000864c*/ STR         R2, [FP, #1012]             @ 0x3f4 
    /*00008650*/ LDR         R2, [SL] 
    /*00008654*/ STR         R6, [IP, #4] 
    /*00008658*/ ADD         R2, R2, R0 
    /*0000865c*/ LDR         R0, [SP, #20] 
    /*00008660*/ STR         R2, [IP] 
    /*00008664*/ MOV         IP, #8 
    /*00008668*/ STR         R1, [R5, #40]               @ 0x28 
    /*0000866c*/ LDR         R1, [R0, #704]              @ 0x2c0 
    /*00008670*/ STR         LR, [R5, #44]               @ 0x2c 
    /*00008674*/ STR         IP, [R5, #52]               @ 0x34 
    /*00008678*/ STR         R1, [R5, #48]               @ 0x30 
    /*0000867c*/ LDR         R2, [R0, #708]              @ 0x2c4 
    /*00008680*/ STR         R1, [R5, #56]               @ 0x38 
    /*00008684*/ STR         R2, [R5, #60]               @ 0x3c 
    /*00008688*/ LDR         LR, [R0, #712]              @ 0x2c8 
    /*0000868c*/ CMP         LR, #0 
    /*00008690*/ BEQ         H264E_GetBitStream_x8844
    /*00008694*/ ADD         R2, R1, R2 
    /*00008698*/ STR         IP, [R5, #64]               @ 0x40 
    /*0000869c*/ MOV         IP, #4 
    /*000086a0*/ STR         IP, [R5, #36]               @ 0x24 
    /*000086a4*/ LDR         R1, [R0, #712]              @ 0x2c8 
    /*000086a8*/ MOV         LR, #6 
    /*000086ac*/ STR         R2, [R5, #68]               @ 0x44 
    /*000086b0*/ MOV         IP, #9 
    /*000086b4*/ ADD         R2, R1, R2 
    /*000086b8*/ STR         LR, [R5, #76]               @ 0x4c 
    /*000086bc*/ STR         R1, [R5, #72]               @ 0x48 
    /*000086c0*/ STR         R2, [R5, #80]               @ 0x50 
    /*000086c4*/ STR         IP, [R5, #84]               @ 0x54 
    H264E_GetBitStream_x86c8:
    /*000086c8*/ LDR         R0, [SP, #20] 
    /*000086cc*/ LDR         R2, [R0, #716]              @ 0x2cc 
    /*000086d0*/ CMP         R2, #0 
    /*000086d4*/ BEQ         H264E_GetBitStream_x8718
    /*000086d8*/ LDR         R1, [R5, #36]               @ 0x24 
    /*000086dc*/ MOV         LR, #12 
    /*000086e0*/ MOV         R2, #6 
    /*000086e4*/ ADD         IP, R1, #1 
    /*000086e8*/ MLA         R1, LR, R1, R5 
    /*000086ec*/ STR         R2, [R1, #40]               @ 0x28 
    /*000086f0*/ LDR         R2, [R0, #704]              @ 0x2c0 
    /*000086f4*/ LDR         LR, [R0, #708]              @ 0x2c4 
    /*000086f8*/ LDR         SL, [R0, #712]              @ 0x2c8 
    /*000086fc*/ ADD         R2, R2, LR 
    /*00008700*/ ADD         R2, R2, #9 
    /*00008704*/ ADD         R2, R2, SL 
    /*00008708*/ STR         R2, [R1, #44]               @ 0x2c 
    /*0000870c*/ LDR         R2, [R0, #716]              @ 0x2cc 
    /*00008710*/ STR         R2, [R1, #48]               @ 0x30 
    /*00008714*/ STR         IP, [R5, #36]               @ 0x24 
    H264E_GetBitStream_x8718:
    /*00008718*/ LDR         FP, [SP, #36]               @ 0x24 
    /*0000871c*/ LDR         R0, [SP, #48]               @ 0x30 
    /*00008720*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00008724*/ ADD         R2, FP, R0 
    /*00008728*/ STR         R3, [SP, #32] 
    /*0000872c*/ CMP         R1, R2 
    /*00008730*/ BCS         H264E_GetBitStream_x8868
    /*00008734*/ SUB         SL, R1, R0 
    /*00008738*/ LDR         R3, [SP, #28] 
    /*0000873c*/ LDR         R1, [SP, #20] 
    /*00008740*/ ADD         R0, R3, R0 
    /*00008744*/ MOV         R2, SL 
    /*00008748*/ BL          0x0000000000008748          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000874c*/ LDR         R1, [SP, #20] 
    /*00008750*/ SUB         R2, FP, SL 
    /*00008754*/ LDR         R0, [SP, #28] 
    /*00008758*/ ADD         R1, R1, SL 
    /*0000875c*/ BL          0x000000000000875C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008760*/ LDR         R3, [SP, #32] 
    H264E_GetBitStream_x8764:
    /*00008764*/ STR         R8, [R5, #8] 
    /*00008768*/ LDRD        R0, [R7] 
    /*0000876c*/ ADDS        SL, R0, R9 
    /*00008770*/ ADC         FP, R1, #0 
    /*00008774*/ CMP         R3, R9 
    /*00008778*/ SUBHI       R3, R3, R9 
    /*0000877c*/ STRD        SL, [R5] 
    /*00008780*/ LDRLS       R2, [SP, #40]               @ 0x28 
    /*00008784*/ SUBHI       R3, R3, R6 
    /*00008788*/ SUBLS       R2, R2, R9 
    /*0000878c*/ SUBLS       R2, R2, R6 
    /*00008790*/ ADDLS       R3, R2, R3 
    /*00008794*/ STR         R3, [R5, #12] 
    /*00008798*/ B           H264E_GetBitStream_x8234
    H264E_GetBitStream_x879c:
    /*0000879c*/ LDRB        R2, [R8, #10] 
    /*000087a0*/ CMP         R2, #1 
    /*000087a4*/ BNE         H264E_GetBitStream_x8208
    /*000087a8*/ CMP         R1, #64                     @ 0x40 
    /*000087ac*/ LDRHI       R3, [R5, #8] 
    /*000087b0*/ LDRLS       R3, [R7, #176]              @ 0xb0 
    /*000087b4*/ ADDHI       R3, R3, #64                 @ 0x40 
    /*000087b8*/ STR         R3, [FP, #2232]             @ 0x8b8 
    /*000087bc*/ MOV         R3, #1 
    /*000087c0*/ STR         R3, [FP, #2236]             @ 0x8bc 
    /*000087c4*/ LDRB        R3, [R8, #8] 
    /*000087c8*/ CMP         R3, #1 
    /*000087cc*/ BNE         H264E_GetBitStream_x8210
    H264E_GetBitStream_x87d0:
    /*000087d0*/ LDR         R2, [SP, #20] 
    /*000087d4*/ LDR         R3, [R8] 
    /*000087d8*/ ADD         R1, R2, #4096               @ 0x1000 
    /*000087dc*/ LDR         R0, [R8, #4] 
    /*000087e0*/ SUB         R3, R3, #65                 @ 0x41 
    /*000087e4*/ LDR         R2, [R1, #3816]             @ 0xee8 
    /*000087e8*/ SUB         R0, R3, R0 
    /*000087ec*/ LDR         R1, [R1, #3812]             @ 0xee4 
    /*000087f0*/ BL          0x00000000000087F0          @ h264eEncrypt [R_ARM_CALL: .text+0x10964] 
    /*000087f4*/ LDR         R2, [FP, #2232]             @ 0x8b8 
    /*000087f8*/ MOV         R3, #0 
    /*000087fc*/ EOR         R0, R0, R0, LSR #8 
    /*00008800*/ STRB        R0, [R2, #7] 
    /*00008804*/ STR         R3, [FP, #2236]             @ 0x8bc 
    /*00008808*/ B           H264E_GetBitStream_x8210
    H264E_GetBitStream_x880c:
    /*0000880c*/ LDR         R3, [FP, #2236]             @ 0x8bc 
    /*00008810*/ CMP         R3, #1 
    /*00008814*/ BNE         H264E_GetBitStream_x8210
    /*00008818*/ B           H264E_GetBitStream_x87d0
    H264E_GetBitStream_x881c:
    /*0000881c*/ LDR         R2, [SP, #36]               @ 0x24 
    /*00008820*/ CMP         R2, R3 
    /*00008824*/ LDRHI       R3, [SP, #40]               @ 0x28 
    /*00008828*/ LDRLS       R3, [SP, #36]               @ 0x24 
    /*0000882c*/ ADDHI       R0, R3, #64                 @ 0x40 
    /*00008830*/ SUBHI       R0, R0, R2 
    /*00008834*/ RSBLS       R0, R3, #64                 @ 0x40 
    /*00008838*/ ADD         R3, R0, R6 
    /*0000883c*/ STR         R3, [SP, #48]               @ 0x30 
    /*00008840*/ B           H264E_GetBitStream_x857c
    H264E_GetBitStream_x8844:
    /*00008844*/ ADD         R2, R1, R2 
    /*00008848*/ MOV         IP, #3 
    /*0000884c*/ STR         R2, [R5, #68]               @ 0x44 
    /*00008850*/ MOV         R1, #6 
    /*00008854*/ MOV         R2, #9 
    /*00008858*/ STR         IP, [R5, #36]               @ 0x24 
    /*0000885c*/ STR         R1, [R5, #64]               @ 0x40 
    /*00008860*/ STR         R2, [R5, #72]               @ 0x48 
    /*00008864*/ B           H264E_GetBitStream_x86c8
    H264E_GetBitStream_x8868:
    /*00008868*/ LDR         R3, [SP, #28] 
    /*0000886c*/ LDR         R0, [SP, #48]               @ 0x30 
    /*00008870*/ LDR         R2, [SP, #36]               @ 0x24 
    /*00008874*/ ADD         R0, R3, R0 
    /*00008878*/ LDR         R1, [SP, #20] 
    /*0000887c*/ BL          0x000000000000887C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008880*/ LDR         R3, [SP, #32] 
    /*00008884*/ B           H264E_GetBitStream_x8764
    H264E_GetBitStream_x8888:
    /*00008888*/ MOVW        R3, #2068                   @ 0x814 
    /*0000888c*/ MOV         R1, #10 
    /*00008890*/ STR         R3, [SP] 
    /*00008894*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1440] 
    /*00008898*/ LDR         R3, [PC, #188]              @ 0x000000000000895c 
    /*0000889c*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1440] 
    /*000088a0*/ MOV         R0, #0 
    /*000088a4*/ BL          0x00000000000088A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000088a8*/ LDRB        IP, [R8, #11] 
    /*000088ac*/ LDRB        R3, [R8, #8] 
    /*000088b0*/ MOVW        R0, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1478] 
    /*000088b4*/ LDR         R2, [R8, #12] 
    /*000088b8*/ MOVT        R0, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1478] 
    /*000088bc*/ MOV         R1, R6 
    /*000088c0*/ STR         IP, [SP] 
    /*000088c4*/ BL          0x00000000000088C4          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000088c8*/ LDR         R3, [R8, #12] 
    /*000088cc*/ CMP         R6, R3 
    /*000088d0*/ BEQ         H264E_GetBitStream_x88f0
    /*000088d4*/ MOVW        R3, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14d8] 
    /*000088d8*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*000088dc*/ MOVT        R3, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14d8] 
    /*000088e0*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*000088e4*/ MOVW        R2, #2071                   @ 0x817 
    /*000088e8*/ LDR         R1, [PC, #108]              @ 0x000000000000895c 
    /*000088ec*/ BL          0x00000000000088EC          @ osal_panic [R_ARM_CALL: +0x0] 
    H264E_GetBitStream_x88f0:
    /*000088f0*/ ADD         R1, SP, #76                 @ 0x4c 
    /*000088f4*/ LDR         R0, [SP, #24] 
    /*000088f8*/ MOVW        R4, #32771                  @ 0x8003 
    /*000088fc*/ BL          0x00000000000088FC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008900*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00008904*/ B           H264E_GetBitStream_x7f2c
    H264E_GetBitStream_x8908:
    /*00008908*/ ADD         R1, SP, #76                 @ 0x4c 
    /*0000890c*/ LDR         R0, [SP, #24] 
    /*00008910*/ MOVW        R4, #32782                  @ 0x800e 
    /*00008914*/ BL          0x0000000000008914          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008918*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000891c*/ B           H264E_GetBitStream_x7f2c
    H264E_GetBitStream_x8920:
    /*00008920*/ LDR         R3, [SP, #20] 
    /*00008924*/ LDR         R1, [SL] 
    /*00008928*/ ADD         R3, R3, #4096               @ 0x1000 
    /*0000892c*/ LDR         R0, [SL, #4] 
    /*00008930*/ SUB         R1, R1, #65                 @ 0x41 
    /*00008934*/ LDR         R2, [R3, #3816]             @ 0xee8 
    /*00008938*/ SUB         R0, R1, R0 
    /*0000893c*/ LDR         R1, [R3, #3812]             @ 0xee4 
    /*00008940*/ BL          0x0000000000008940          @ h264eEncrypt [R_ARM_CALL: .text+0x10964] 
    /*00008944*/ LDR         R3, [SP, #20] 
    /*00008948*/ LDR         R2, [SP, #68]               @ 0x44 
    /*0000894c*/ ADD         R3, R3, R2 
    /*00008950*/ EOR         R0, R0, R0, LSR #8 
    /*00008954*/ STRB        R0, [R3, #7] 
    /*00008958*/ B           H264E_GetBitStream_x8550
    /*0000895c*/ ANDEQ       R0, R0, R0, ASR #7 
FUNC_END H264E_GetBitStream


FUNC_BEGIN H264E_PutBitStream
    /*00008960*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00008964*/ SUB         SP, SP, #24 
    /*00008968*/ MOV         R5, R1 
    /*0000896c*/ MOV         R6, R0 
    /*00008970*/ BL          0x0000000000008970          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00008974*/ SUBS        R4, R0, #0 
    /*00008978*/ BEQ         H264E_PutBitStream_x8988
    H264E_PutBitStream_x897c:
    /*0000897c*/ MOV         R0, R4 
    /*00008980*/ ADD         SP, SP, #24 
    /*00008984*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264E_PutBitStream_x8988:
    /*00008988*/ MOV         R0, R6 
    /*0000898c*/ BL          0x000000000000898C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00008990*/ SUBS        R4, R0, #0 
    /*00008994*/ BNE         H264E_PutBitStream_x897c
    /*00008998*/ MOV         R0, R5 
    /*0000899c*/ BL          0x000000000000899C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*000089a0*/ SUBS        R4, R0, #0 
    /*000089a4*/ BNE         H264E_PutBitStream_x897c
    /*000089a8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000089ac*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000089b0*/ ADD         R6, R3, R6, LSL #2 
    /*000089b4*/ LDR         IP, [R5, #8] 
    /*000089b8*/ LDR         R8, [R6, #64]               @ 0x40 
    /*000089bc*/ LDR         R6, [R8, #1060]             @ 0x424 
    /*000089c0*/ LDR         R2, [R6, #176]              @ 0xb0 
    /*000089c4*/ CMP         IP, R2 
    /*000089c8*/ BCC         H264E_PutBitStream_x89ec
    /*000089cc*/ LDR         R1, [R6, #8] 
    /*000089d0*/ MOV         R3, #0 
    /*000089d4*/ ADDS        R2, R2, R1 
    /*000089d8*/ MOV         R1, #0 
    /*000089dc*/ ADC         R3, R3, #0 
    /*000089e0*/ CMP         R1, R3 
    /*000089e4*/ CMPEQ       IP, R2 
    /*000089e8*/ BCC         H264E_PutBitStream_x8a1c
    H264E_PutBitStream_x89ec:
    /*000089ec*/ MOVW        R3, #2445                   @ 0x98d 
    /*000089f0*/ STR         IP, [SP, #4] 
    /*000089f4*/ STR         R3, [SP] 
    /*000089f8*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1620] 
    /*000089fc*/ LDR         R3, [PC, #1144]             @ 0x0000000000008e7c 
    /*00008a00*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1620] 
    /*00008a04*/ MOV         R1, #10 
    /*00008a08*/ MOV         R0, #3 
    /*00008a0c*/ MOVW        R4, #32777                  @ 0x8009 
    /*00008a10*/ BL          0x0000000000008A10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008a14*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00008a18*/ B           H264E_PutBitStream_x897c
    H264E_PutBitStream_x8a1c:
    /*00008a1c*/ ADD         R9, R8, #9792               @ 0x2640 
    /*00008a20*/ ADD         R1, SP, #20 
    /*00008a24*/ ADD         R9, R9, #40                 @ 0x28 
    /*00008a28*/ MOV         R0, R9 
    /*00008a2c*/ BL          0x0000000000008A2C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008a30*/ ADD         R0, R6, #164                @ 0xa4 
    /*00008a34*/ LDR         R2, [R6, #160]              @ 0xa0 
    /*00008a38*/ LDM         R0, {R0, R1, R3} 
    /*00008a3c*/ LDR         IP, [R2] 
    /*00008a40*/ LDR         R2, [R0] 
    /*00008a44*/ LDR         R3, [R3] 
    /*00008a48*/ CMP         IP, R2 
    /*00008a4c*/ LDR         R1, [R1] 
    /*00008a50*/ MOVCC       LR, #0 
    /*00008a54*/ MOVCS       LR, #1 
    /*00008a58*/ CMP         IP, R3 
    /*00008a5c*/ MOVHI       IP, #0 
    /*00008a60*/ MOVLS       IP, #1 
    /*00008a64*/ CMP         R1, R3 
    /*00008a68*/ MOVCC       R3, #0 
    /*00008a6c*/ MOVCS       R3, #1 
    /*00008a70*/ AND         R7, LR, IP 
    /*00008a74*/ TST         R7, R3 
    /*00008a78*/ BNE         H264E_PutBitStream_x8aa8
    /*00008a7c*/ CMP         R2, R1 
    /*00008a80*/ MOVCC       R1, #0 
    /*00008a84*/ MOVCS       R1, #1 
    /*00008a88*/ TST         R7, R1 
    /*00008a8c*/ BNE         H264E_PutBitStream_x8aa8
    /*00008a90*/ AND         LR, LR, R3 
    /*00008a94*/ TST         R1, LR 
    /*00008a98*/ BNE         H264E_PutBitStream_x8aa8
    /*00008a9c*/ AND         R3, R3, IP 
    /*00008aa0*/ TST         R1, R3 
    /*00008aa4*/ BEQ         H264E_PutBitStream_x8bc8
    H264E_PutBitStream_x8aa8:
    /*00008aa8*/ LDR         R3, [R6, #176]              @ 0xb0 
    /*00008aac*/ LDR         R1, [R5, #8] 
    /*00008ab0*/ ADD         R3, R3, R2 
    /*00008ab4*/ LDR         R7, [R5, #12] 
    /*00008ab8*/ CMP         R3, R1 
    /*00008abc*/ LDR         IP, [R3, #4] 
    /*00008ac0*/ ADD         R7, R7, IP 
    /*00008ac4*/ BNE         H264E_PutBitStream_x8dd0
    /*00008ac8*/ MOVW        R3, #0                      @ VencBufferCache [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00008acc*/ MOVT        R3, #0                      @ VencBufferCache [R_ARM_MOVT_ABS: +0x0] 
    /*00008ad0*/ LDR         R3, [R3] 
    /*00008ad4*/ CMP         R3, #1 
    /*00008ad8*/ BEQ         H264E_PutBitStream_x8d64
    H264E_PutBitStream_x8adc:
    /*00008adc*/ LDR         R3, [R6, #160]              @ 0xa0 
    /*00008ae0*/ TST         R7, #3 
    /*00008ae4*/ LDR         R3, [R3] 
    /*00008ae8*/ BNE         H264E_PutBitStream_x8e2c
    /*00008aec*/ CMP         R3, R2 
    /*00008af0*/ ADD         R7, R7, R2 
    /*00008af4*/ BCS         H264E_PutBitStream_x8b08
    /*00008af8*/ LDR         R2, [R6, #8] 
    /*00008afc*/ CMP         R7, R2 
    /*00008b00*/ BCC         H264E_PutBitStream_x8b10
    /*00008b04*/ SUB         R7, R7, R2 
    H264E_PutBitStream_x8b08:
    /*00008b08*/ CMP         R3, R7 
    /*00008b0c*/ BCC         H264E_PutBitStream_x8e44
    H264E_PutBitStream_x8b10:
    /*00008b10*/ STR         R7, [R0] 
    /*00008b14*/ LDR         R3, [R5, #24] 
    /*00008b18*/ CMP         R3, #0 
    /*00008b1c*/ BEQ         H264E_PutBitStream_x8b3c
    /*00008b20*/ ADD         R8, R8, #12288              @ 0x3000 
    /*00008b24*/ LDR         R2, [R8, #1984]             @ 0x7c0 
    /*00008b28*/ LDR         R3, [R8, #1980]             @ 0x7bc 
    /*00008b2c*/ ADD         R2, R2, #1 
    /*00008b30*/ STR         R2, [R8, #1984]             @ 0x7c0 
    /*00008b34*/ SUB         R3, R3, #1 
    /*00008b38*/ STR         R3, [R8, #1980]             @ 0x7bc 
    H264E_PutBitStream_x8b3c:
    /*00008b3c*/ LDR         R3, [R6, #160]              @ 0xa0 
    /*00008b40*/ LDR         R1, [R6, #164]              @ 0xa4 
    /*00008b44*/ LDR         R2, [R6, #172]              @ 0xac 
    /*00008b48*/ LDR         R3, [R3] 
    /*00008b4c*/ LDR         R1, [R1] 
    /*00008b50*/ LDR         R0, [R6, #168]              @ 0xa8 
    /*00008b54*/ LDR         R2, [R2] 
    /*00008b58*/ CMP         R3, R1 
    /*00008b5c*/ LDR         LR, [R0] 
    /*00008b60*/ MOVCC       R0, #0 
    /*00008b64*/ MOVCS       R0, #1 
    /*00008b68*/ CMP         R3, R2 
    /*00008b6c*/ MOVHI       R3, #0 
    /*00008b70*/ MOVLS       R3, #1 
    /*00008b74*/ CMP         LR, R2 
    /*00008b78*/ AND         IP, R0, R3 
    /*00008b7c*/ MOVCC       R2, #0 
    /*00008b80*/ MOVCS       R2, #1 
    /*00008b84*/ TST         IP, R2 
    /*00008b88*/ BNE         H264E_PutBitStream_x8bb8
    /*00008b8c*/ CMP         R1, LR 
    /*00008b90*/ MOVCC       R1, #0 
    /*00008b94*/ MOVCS       R1, #1 
    /*00008b98*/ TST         IP, R1 
    /*00008b9c*/ BNE         H264E_PutBitStream_x8bb8
    /*00008ba0*/ AND         R0, R0, R2 
    /*00008ba4*/ TST         R1, R0 
    /*00008ba8*/ BNE         H264E_PutBitStream_x8bb8
    /*00008bac*/ AND         R3, R3, R2 
    /*00008bb0*/ TST         R1, R3 
    /*00008bb4*/ BEQ         H264E_PutBitStream_x8c98
    H264E_PutBitStream_x8bb8:
    /*00008bb8*/ ADD         R1, SP, #20 
    /*00008bbc*/ MOV         R0, R9 
    /*00008bc0*/ BL          0x0000000000008BC0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008bc4*/ B           H264E_PutBitStream_x897c
    H264E_PutBitStream_x8bc8:
    /*00008bc8*/ LDR         IP, [R6, #64]               @ 0x40 
    /*00008bcc*/ MOVW        R2, #2456                   @ 0x998 
    /*00008bd0*/ LDR         R3, [R6, #128]              @ 0x80 
    /*00008bd4*/ MOVW        R0, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x150c] 
    /*00008bd8*/ LDR         R1, [PC, #668]              @ 0x0000000000008e7c 
    /*00008bdc*/ MOVT        R0, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x150c] 
    /*00008be0*/ STR         IP, [SP, #8] 
    /*00008be4*/ LDR         IP, [R6, #32] 
    /*00008be8*/ STR         IP, [SP, #4] 
    /*00008bec*/ LDR         IP, [R6, #96]               @ 0x60 
    /*00008bf0*/ STR         IP, [SP] 
    /*00008bf4*/ BL          0x0000000000008BF4          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00008bf8*/ ADD         R0, R6, #164                @ 0xa4 
    /*00008bfc*/ LDR         R2, [R6, #160]              @ 0xa0 
    /*00008c00*/ LDM         R0, {R0, R1, R3} 
    /*00008c04*/ LDR         IP, [R2] 
    /*00008c08*/ LDR         R2, [R0] 
    /*00008c0c*/ LDR         R3, [R3] 
    /*00008c10*/ CMP         IP, R2 
    /*00008c14*/ LDR         R1, [R1] 
    /*00008c18*/ MOVCC       LR, #0 
    /*00008c1c*/ MOVCS       LR, #1 
    /*00008c20*/ CMP         IP, R3 
    /*00008c24*/ MOVHI       IP, #0 
    /*00008c28*/ MOVLS       IP, #1 
    /*00008c2c*/ CMP         R1, R3 
    /*00008c30*/ MOVCC       R3, #0 
    /*00008c34*/ MOVCS       R3, #1 
    /*00008c38*/ AND         R7, LR, IP 
    /*00008c3c*/ TST         R7, R3 
    /*00008c40*/ BNE         H264E_PutBitStream_x8aa8
    /*00008c44*/ CMP         R2, R1 
    /*00008c48*/ MOVCC       R1, #0 
    /*00008c4c*/ MOVCS       R1, #1 
    /*00008c50*/ TST         R7, R1 
    /*00008c54*/ BNE         H264E_PutBitStream_x8aa8
    /*00008c58*/ AND         LR, LR, R3 
    /*00008c5c*/ TST         R1, LR 
    /*00008c60*/ BNE         H264E_PutBitStream_x8aa8
    /*00008c64*/ AND         R3, R3, IP 
    /*00008c68*/ TST         R1, R3 
    /*00008c6c*/ BNE         H264E_PutBitStream_x8aa8
    /*00008c70*/ MOVW        R2, #2463                   @ 0x99f 
    /*00008c74*/ MOVW        R3, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1564] 
    /*00008c78*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00008c7c*/ MOVT        R3, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1564] 
    /*00008c80*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00008c84*/ LDR         R1, [PC, #496]              @ 0x0000000000008e7c 
    /*00008c88*/ BL          0x0000000000008C88          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008c8c*/ LDR         R0, [R6, #164]              @ 0xa4 
    /*00008c90*/ LDR         R2, [R0] 
    /*00008c94*/ B           H264E_PutBitStream_x8aa8
    H264E_PutBitStream_x8c98:
    /*00008c98*/ LDR         IP, [R6, #64]               @ 0x40 
    /*00008c9c*/ MOVW        R2, #2505                   @ 0x9c9 
    /*00008ca0*/ LDR         R3, [R6, #128]              @ 0x80 
    /*00008ca4*/ MOVW        R0, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x150c] 
    /*00008ca8*/ LDR         R1, [PC, #460]              @ 0x0000000000008e7c 
    /*00008cac*/ MOVT        R0, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x150c] 
    /*00008cb0*/ STR         IP, [SP, #8] 
    /*00008cb4*/ LDR         IP, [R6, #32] 
    /*00008cb8*/ STR         IP, [SP, #4] 
    /*00008cbc*/ LDR         IP, [R6, #96]               @ 0x60 
    /*00008cc0*/ STR         IP, [SP] 
    /*00008cc4*/ BL          0x0000000000008CC4          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00008cc8*/ LDR         R3, [R6, #160]              @ 0xa0 
    /*00008ccc*/ LDR         R1, [R6, #164]              @ 0xa4 
    /*00008cd0*/ LDR         R2, [R6, #172]              @ 0xac 
    /*00008cd4*/ LDR         R3, [R3] 
    /*00008cd8*/ LDR         R1, [R1] 
    /*00008cdc*/ LDR         R0, [R6, #168]              @ 0xa8 
    /*00008ce0*/ LDR         R2, [R2] 
    /*00008ce4*/ CMP         R3, R1 
    /*00008ce8*/ LDR         LR, [R0] 
    /*00008cec*/ MOVCC       R0, #0 
    /*00008cf0*/ MOVCS       R0, #1 
    /*00008cf4*/ CMP         R3, R2 
    /*00008cf8*/ MOVHI       R3, #0 
    /*00008cfc*/ MOVLS       R3, #1 
    /*00008d00*/ CMP         LR, R2 
    /*00008d04*/ AND         IP, R0, R3 
    /*00008d08*/ MOVCC       R2, #0 
    /*00008d0c*/ MOVCS       R2, #1 
    /*00008d10*/ TST         IP, R2 
    /*00008d14*/ BNE         H264E_PutBitStream_x8bb8
    /*00008d18*/ CMP         R1, LR 
    /*00008d1c*/ MOVCC       R1, #0 
    /*00008d20*/ MOVCS       R1, #1 
    /*00008d24*/ TST         IP, R1 
    /*00008d28*/ BNE         H264E_PutBitStream_x8bb8
    /*00008d2c*/ AND         R0, R0, R2 
    /*00008d30*/ TST         R1, R0 
    /*00008d34*/ BNE         H264E_PutBitStream_x8bb8
    /*00008d38*/ AND         R3, R3, R2 
    /*00008d3c*/ TST         R1, R3 
    /*00008d40*/ BNE         H264E_PutBitStream_x8bb8
    /*00008d44*/ MOVW        R3, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1564] 
    /*00008d48*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00008d4c*/ MOVT        R3, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1564] 
    /*00008d50*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00008d54*/ MOV         R2, #2512                   @ 0x9d0 
    /*00008d58*/ LDR         R1, [PC, #284]              @ 0x0000000000008e7c 
    /*00008d5c*/ BL          0x0000000000008D5C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008d60*/ B           H264E_PutBitStream_x8bb8
    H264E_PutBitStream_x8d64:
    /*00008d64*/ LDR         R2, [R8, #1060]             @ 0x424 
    /*00008d68*/ ADD         R3, R8, #1072               @ 0x430 
    /*00008d6c*/ LDRD        R0, [R3, #-8] 
    /*00008d70*/ LDR         IP, [R2, #64]               @ 0x40 
    /*00008d74*/ LDR         LR, [R2, #164]              @ 0xa4 
    /*00008d78*/ LDR         R3, [R2, #8] 
    /*00008d7c*/ ADD         SL, R7, IP 
    /*00008d80*/ LDR         R2, [R2, #176]              @ 0xb0 
    /*00008d84*/ ADDS        R0, R0, IP 
    /*00008d88*/ LDR         LR, [LR] 
    /*00008d8c*/ CMP         SL, R3 
    /*00008d90*/ ADD         R2, R2, LR 
    /*00008d94*/ BLS         H264E_PutBitStream_x8e10
    /*00008d98*/ SUB         R3, R3, IP 
    /*00008d9c*/ MOV         R1, R0 
    /*00008da0*/ MOV         R0, R2 
    /*00008da4*/ SUB         SL, R7, R3 
    /*00008da8*/ MOV         R2, R3 
    /*00008dac*/ BL          0x0000000000008DAC          @ hil_mmb_invalid_cache_byaddr [R_ARM_CALL: +0x0] 
    /*00008db0*/ LDR         R3, [R8, #1060]             @ 0x424 
    /*00008db4*/ MOV         R2, SL 
    /*00008db8*/ LDR         R1, [R8, #1064]             @ 0x428 
    /*00008dbc*/ LDR         R0, [R3, #176]              @ 0xb0 
    /*00008dc0*/ BL          0x0000000000008DC0          @ hil_mmb_invalid_cache_byaddr [R_ARM_CALL: +0x0] 
    /*00008dc4*/ LDR         R0, [R6, #164]              @ 0xa4 
    /*00008dc8*/ LDR         R2, [R0] 
    /*00008dcc*/ B           H264E_PutBitStream_x8adc
    H264E_PutBitStream_x8dd0:
    /*00008dd0*/ STR         R3, [SP, #8] 
    /*00008dd4*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15b0] 
    /*00008dd8*/ MOVW        R3, #2475                   @ 0x9ab 
    /*00008ddc*/ STR         R1, [SP, #4] 
    /*00008de0*/ STR         R3, [SP] 
    /*00008de4*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15b0] 
    /*00008de8*/ LDR         R3, [PC, #140]              @ 0x0000000000008e7c 
    /*00008dec*/ MOV         R1, #10 
    /*00008df0*/ MOV         R0, #4 
    /*00008df4*/ MOVW        R4, #32777                  @ 0x8009 
    /*00008df8*/ BL          0x0000000000008DF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008dfc*/ ADD         R1, SP, #20 
    /*00008e00*/ MOV         R0, R9 
    /*00008e04*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00008e08*/ BL          0x0000000000008E08          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008e0c*/ B           H264E_PutBitStream_x897c
    H264E_PutBitStream_x8e10:
    /*00008e10*/ MOV         R1, R0 
    /*00008e14*/ MOV         R0, R2 
    /*00008e18*/ MOV         R2, R7 
    /*00008e1c*/ BL          0x0000000000008E1C          @ hil_mmb_invalid_cache_byaddr [R_ARM_CALL: +0x0] 
    /*00008e20*/ LDR         R0, [R6, #164]              @ 0xa4 
    /*00008e24*/ LDR         R2, [R0] 
    /*00008e28*/ B           H264E_PutBitStream_x8adc
    H264E_PutBitStream_x8e2c:
    /*00008e2c*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15f0] 
    /*00008e30*/ LDR         R3, [PC, #72]               @ 0x0000000000008e80 
    /*00008e34*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15f0] 
    /*00008e38*/ MOV         R1, #18 
    /*00008e3c*/ MOV         R0, #3 
    /*00008e40*/ BL          0x0000000000008E40          @ HI_LOG [R_ARM_CALL: +0x0] 
    H264E_PutBitStream_x8e44:
    /*00008e44*/ MOVW        R3, #2489                   @ 0x9b9 
    /*00008e48*/ MOV         R1, #10 
    /*00008e4c*/ STR         R3, [SP] 
    /*00008e50*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1658] 
    /*00008e54*/ LDR         R3, [PC, #32]               @ 0x0000000000008e7c 
    /*00008e58*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1658] 
    /*00008e5c*/ MOV         R0, #4 
    /*00008e60*/ MOVW        R4, #32777                  @ 0x8009 
    /*00008e64*/ BL          0x0000000000008E64          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008e68*/ ADD         R1, SP, #20 
    /*00008e6c*/ MOV         R0, R9 
    /*00008e70*/ MOVT        R4, #40970                  @ 0xa00a 
    /*00008e74*/ BL          0x0000000000008E74          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008e78*/ B           H264E_PutBitStream_x897c
    /*00008e7c*/ LDRDEQ      R0, [R0], -R4 
    /*00008e80*/ ANDEQ       R0, R0, R8, ROR #7 
FUNC_END H264E_PutBitStream


FUNC_BEGIN H264eInitSliceSplit
    /*00008e84*/ PUSH        {R4, LR} 
    /*00008e88*/ SUBS        R4, R0, #0 
    /*00008e8c*/ BEQ         H264eInitSliceSplit_x8ea0
    H264eInitSliceSplit_x8e90:
    /*00008e90*/ MOV         R2, #0 
    /*00008e94*/ MOV         R3, #1 
    /*00008e98*/ STM         R4, {R2, R3} 
    /*00008e9c*/ POP         {R4, PC} 
    H264eInitSliceSplit_x8ea0:
    /*00008ea0*/ MOVW        R3, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1684] 
    /*00008ea4*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00008ea8*/ MOVT        R3, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1684] 
    /*00008eac*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00008eb0*/ MOV         R2, #344                    @ 0x158 
    /*00008eb4*/ LDR         R1, [PC, #4]                @ 0x0000000000008ec0 
    /*00008eb8*/ BL          0x0000000000008EB8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008ebc*/ B           H264eInitSliceSplit_x8e90
    /*00008ec0*/ STRDEQ      R0, [R0], -IP 
FUNC_END H264eInitSliceSplit


FUNC_BEGIN H264eInitPred
    /*00008ec4*/ PUSH        {R4, R5, R6, LR} 
    /*00008ec8*/ SUBS        R4, R0, #0 
    /*00008ecc*/ BEQ         H264eInitPred_x8f04
    H264eInitPred_x8ed0:
    /*00008ed0*/ MOV         R5, #1 
    /*00008ed4*/ MOV         R3, #0 
    /*00008ed8*/ STR         R5, [R4] 
    /*00008edc*/ ADD         R0, R4, #12 
    /*00008ee0*/ STR         R5, [R4, #4] 
    /*00008ee4*/ STR         R3, [R4, #8] 
    /*00008ee8*/ BL          0x0000000000008EE8          @ H264E_DRV_InitIpcm [R_ARM_CALL: .text+0x129c4] 
    /*00008eec*/ STR         R5, [R4, #24] 
    /*00008ef0*/ STR         R5, [R4, #32] 
    /*00008ef4*/ STR         R5, [R4, #28] 
    /*00008ef8*/ STR         R5, [R4, #36]               @ 0x24 
    /*00008efc*/ STR         R5, [R4, #40]               @ 0x28 
    /*00008f00*/ POP         {R4, R5, R6, PC} 
    H264eInitPred_x8f04:
    /*00008f04*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16a0] 
    /*00008f08*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00008f0c*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16a0] 
    /*00008f10*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00008f14*/ MOVW        R2, #407                    @ 0x197 
    /*00008f18*/ LDR         R1, [PC, #4]                @ 0x0000000000008f24 
    /*00008f1c*/ BL          0x0000000000008F1C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008f20*/ B           H264eInitPred_x8ed0
    /*00008f24*/ ANDEQ       R0, R0, R0, LSL R4 
FUNC_END H264eInitPred


FUNC_BEGIN H264eInitTrans
    /*00008f28*/ PUSH        {R4, R5, R6, LR} 
    /*00008f2c*/ SUBS        R4, R0, #0 
    /*00008f30*/ MOV         R5, R1 
    /*00008f34*/ BEQ         H264eInitTrans_x8fa8
    H264eInitTrans_x8f38:
    /*00008f38*/ CMP         R5, #3 
    /*00008f3c*/ BHI         H264eInitTrans_x8f68
    /*00008f40*/ CMP         R5, #1 
    /*00008f44*/ MVN         R2, #5 
    /*00008f48*/ MOV         R3, #0 
    /*00008f4c*/ STR         R2, [R4, #140]              @ 0x8c 
    /*00008f50*/ STR         R3, [R4, #8] 
    /*00008f54*/ BLS         H264eInitTrans_x8f98
    H264eInitTrans_x8f58:
    /*00008f58*/ MOV         R3, #0 
    /*00008f5c*/ STR         R3, [R4] 
    /*00008f60*/ STR         R3, [R4, #4] 
    /*00008f64*/ POP         {R4, R5, R6, PC} 
    H264eInitTrans_x8f68:
    /*00008f68*/ MOV         R2, #468                    @ 0x1d4 
    /*00008f6c*/ MOVW        R3, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16cc] 
    /*00008f70*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00008f74*/ MOVT        R3, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16cc] 
    /*00008f78*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00008f7c*/ LDR         R1, [PC, #68]               @ 0x0000000000008fc8 
    /*00008f80*/ BL          0x0000000000008F80          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008f84*/ MVN         R2, #5 
    /*00008f88*/ MOV         R3, #0 
    /*00008f8c*/ STR         R2, [R4, #140]              @ 0x8c 
    /*00008f90*/ STR         R3, [R4, #8] 
    /*00008f94*/ B           H264eInitTrans_x8f58
    H264eInitTrans_x8f98:
    /*00008f98*/ MOV         R3, #1 
    /*00008f9c*/ STR         R3, [R4] 
    /*00008fa0*/ STR         R3, [R4, #4] 
    /*00008fa4*/ POP         {R4, R5, R6, PC} 
    H264eInitTrans_x8fa8:
    /*00008fa8*/ MOVW        R3, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16b8] 
    /*00008fac*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00008fb0*/ MOVT        R3, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16b8] 
    /*00008fb4*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00008fb8*/ MOVW        R2, #466                    @ 0x1d2 
    /*00008fbc*/ LDR         R1, [PC, #4]                @ 0x0000000000008fc8 
    /*00008fc0*/ BL          0x0000000000008FC0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008fc4*/ B           H264eInitTrans_x8f38
    /*00008fc8*/ ANDEQ       R0, R0, R0, LSR #8 
FUNC_END H264eInitTrans


FUNC_BEGIN H264eInitEntropy
    /*00008fcc*/ PUSH        {R4, R5, R6, LR} 
    /*00008fd0*/ SUBS        R4, R0, #0 
    /*00008fd4*/ MOV         R5, R1 
    /*00008fd8*/ BEQ         H264eInitEntropy_x9034
    H264eInitEntropy_x8fdc:
    /*00008fdc*/ CMP         R5, #3 
    /*00008fe0*/ BHI         H264eInitEntropy_x9000
    /*00008fe4*/ CMP         R5, #0 
    /*00008fe8*/ MOV         R3, #0 
    /*00008fec*/ STR         R3, [R4, #12] 
    /*00008ff0*/ BNE         H264eInitEntropy_x9024
    /*00008ff4*/ STR         R5, [R4] 
    /*00008ff8*/ STR         R5, [R4, #4] 
    /*00008ffc*/ POP         {R4, R5, R6, PC} 
    H264eInitEntropy_x9000:
    /*00009000*/ MOVW        R3, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16cc] 
    /*00009004*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00009008*/ MOVT        R3, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16cc] 
    /*0000900c*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00009010*/ MOVW        R2, #514                    @ 0x202 
    /*00009014*/ LDR         R1, [PC, #56]               @ 0x0000000000009054 
    /*00009018*/ BL          0x0000000000009018          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000901c*/ MOV         R3, #0 
    /*00009020*/ STR         R3, [R4, #12] 
    H264eInitEntropy_x9024:
    /*00009024*/ MOV         R3, #1 
    /*00009028*/ STR         R3, [R4] 
    /*0000902c*/ STR         R3, [R4, #4] 
    /*00009030*/ POP         {R4, R5, R6, PC} 
    H264eInitEntropy_x9034:
    /*00009034*/ MOVW        R3, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16ec] 
    /*00009038*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*0000903c*/ MOVT        R3, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16ec] 
    /*00009040*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*00009044*/ MOV         R2, #512                    @ 0x200 
    /*00009048*/ LDR         R1, [PC, #4]                @ 0x0000000000009054 
    /*0000904c*/ BL          0x000000000000904C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00009050*/ B           H264eInitEntropy_x8fdc
    /*00009054*/ ANDEQ       R0, R0, R0, LSR R4 
FUNC_END H264eInitEntropy


FUNC_BEGIN H264eInitRefParam
    /*00009058*/ PUSH        {R4, R5, R6, LR} 
    /*0000905c*/ SUBS        R4, R0, #0 
    /*00009060*/ MOV         R5, R1 
    /*00009064*/ MOV         R6, R2 
    /*00009068*/ BEQ         H264eInitRefParam_x90c8
    H264eInitRefParam_x906c:
    /*0000906c*/ CMP         R5, #0 
    /*00009070*/ BNE         H264eInitRefParam_x9098
    /*00009074*/ STR         R5, [R4, #4] 
    /*00009078*/ MOV         R3, #1 
    /*0000907c*/ STR         R3, [R4, #8] 
    /*00009080*/ STR         R3, [R4] 
    /*00009084*/ LDR         R3, [R6] 
    /*00009088*/ CMP         R3, #4 
    /*0000908c*/ LDREQ       R3, [R6, #4] 
    /*00009090*/ STREQ       R3, [R4, #4] 
    /*00009094*/ POP         {R4, R5, R6, PC} 
    H264eInitRefParam_x9098:
    /*00009098*/ MOV         R2, #1 
    /*0000909c*/ MOV         R3, #2 
    /*000090a0*/ STR         R2, [R4, #4] 
    /*000090a4*/ STR         R3, [R4] 
    /*000090a8*/ STR         R2, [R4, #8] 
    /*000090ac*/ LDR         R3, [R6] 
    /*000090b0*/ SUB         R3, R3, #2 
    /*000090b4*/ CMP         R3, R2 
    /*000090b8*/ STRLS       R2, [R4] 
    /*000090bc*/ MOVLS       R3, #0 
    /*000090c0*/ STRLS       R3, [R4, #4] 
    /*000090c4*/ POP         {R4, R5, R6, PC} 
    H264eInitRefParam_x90c8:
    /*000090c8*/ MOVW        R3, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1704] 
    /*000090cc*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*000090d0*/ MOVT        R3, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1704] 
    /*000090d4*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*000090d8*/ MOVW        R2, #551                    @ 0x227 
    /*000090dc*/ LDR         R1, [PC, #4]                @ 0x00000000000090e8 
    /*000090e0*/ BL          0x00000000000090E0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000090e4*/ B           H264eInitRefParam_x906c
    /*000090e8*/ ANDEQ       R0, R0, R4, ASR #8 
FUNC_END H264eInitRefParam


FUNC_BEGIN H264eInitDblk
    /*000090ec*/ PUSH        {R4, LR} 
    /*000090f0*/ SUBS        R4, R0, #0 
    /*000090f4*/ BEQ         H264eInitDblk_x910c
    H264eInitDblk_x90f8:
    /*000090f8*/ MOV         R3, #0 
    /*000090fc*/ STR         R3, [R4] 
    /*00009100*/ STR         R3, [R4, #4] 
    /*00009104*/ STR         R3, [R4, #8] 
    /*00009108*/ POP         {R4, PC} 
    H264eInitDblk_x910c:
    /*0000910c*/ MOVW        R3, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x171c] 
    /*00009110*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*00009114*/ MOVT        R3, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x171c] 
    /*00009118*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*0000911c*/ MOV         R2, #600                    @ 0x258 
    /*00009120*/ LDR         R1, [PC, #4]                @ 0x000000000000912c 
    /*00009124*/ BL          0x0000000000009124          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00009128*/ B           H264eInitDblk_x90f8
    /*0000912c*/ ANDEQ       R0, R0, R8, ASR R4 
FUNC_END H264eInitDblk


FUNC_BEGIN H264eInitPredModeAdaptive
    /*00009130*/ MOV         R3, #0 
    /*00009134*/ STR         R3, [R0] 
    /*00009138*/ STR         R3, [R0, #8] 
    /*0000913c*/ STR         R3, [R0, #16] 
    /*00009140*/ STR         R3, [R0, #4] 
    /*00009144*/ STR         R3, [R0, #12] 
    /*00009148*/ STR         R3, [R0, #20] 
    /*0000914c*/ STR         R3, [R0, #24] 
    /*00009150*/ STR         R3, [R0, #28] 
    /*00009154*/ STR         R3, [R0, #32] 
    /*00009158*/ BX          LR 
FUNC_END H264eInitPredModeAdaptive


FUNC_BEGIN H264eRoiBgFrameRateInit
    /*0000915c*/ MVN         R3, #0 
    /*00009160*/ STR         R3, [R0] 
    /*00009164*/ STR         R3, [R0, #4] 
    /*00009168*/ BX          LR 
FUNC_END H264eRoiBgFrameRateInit


FUNC_BEGIN H264E_InitCuPrediction
    /*0000916c*/ MOV         R3, #8 
    /*00009170*/ MOV         R2, #0 
    /*00009174*/ STR         R3, [R0, #8] 
    /*00009178*/ STM         R0, {R2, R3} 
    /*0000917c*/ STR         R3, [R0, #12] 
    /*00009180*/ STR         R3, [R0, #16] 
    /*00009184*/ STR         R3, [R0, #20] 
    /*00009188*/ STR         R3, [R0, #24] 
    /*0000918c*/ STR         R3, [R0, #28] 
    /*00009190*/ STR         R3, [R0, #32] 
    /*00009194*/ BX          LR 
FUNC_END H264E_InitCuPrediction


FUNC_BEGIN H264E_InitSkipBias
    /*00009198*/ MOV         R3, #0 
    /*0000919c*/ MOV         R2, #8 
    /*000091a0*/ STR         R3, [R0] 
    /*000091a4*/ STR         R3, [R0, #12] 
    /*000091a8*/ STR         R3, [R0, #16] 
    /*000091ac*/ STR         R2, [R0, #4] 
    /*000091b0*/ STR         R2, [R0, #8] 
    /*000091b4*/ BX          LR 
FUNC_END H264E_InitSkipBias


FUNC_BEGIN H264E_GetRcnRefShareBuff
    /*000091b8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000091bc*/ SUB         SP, SP, #12 
    /*000091c0*/ MOV         FP, R1 
    /*000091c4*/ MOV         R9, R2 
    /*000091c8*/ MOV         R7, R0 
    /*000091cc*/ BL          0x00000000000091CC          @ H264E_DRV_IsSupportPmeShareBuf [R_ARM_CALL: .text+0x14b10] 
    /*000091d0*/ CMP         R9, FP 
    /*000091d4*/ STR         R0, [SP, #4] 
    /*000091d8*/ BGE         H264E_GetRcnRefShareBuff_x92b8
    /*000091dc*/ ADD         R6, R9, #1696               @ 0x6a0 
    /*000091e0*/ ADD         SL, R7, R9, LSL #2 
    /*000091e4*/ ADD         R6, R6, #11 
    /*000091e8*/ ADD         SL, SL, #1072               @ 0x430 
    /*000091ec*/ LSL         R6, R6, #3 
    /*000091f0*/ SUB         R8, R6, #8 
    /*000091f4*/ ADD         R6, R6, #392                @ 0x188 
    /*000091f8*/ ADD         R8, R7, R8 
    /*000091fc*/ ADD         R6, R7, R6 
    /*00009200*/ B           H264E_GetRcnRefShareBuff_x920c
    H264E_GetRcnRefShareBuff_x9204:
    /*00009204*/ CMP         FP, R9 
    /*00009208*/ BEQ         H264E_GetRcnRefShareBuff_x92b8
    H264E_GetRcnRefShareBuff_x920c:
    /*0000920c*/ MOV         R0, #1 
    /*00009210*/ ADD         R9, R9, R0 
    /*00009214*/ BL          0x0000000000009214          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009218*/ MOV         R1, #6 
    /*0000921c*/ MOV         R5, #0 
    /*00009220*/ LDR         R3, [R0, #8] 
    /*00009224*/ LDR         R0, [SL, #4]! 
    /*00009228*/ BLX         R3 
    /*0000922c*/ MOV         R4, R0 
    /*00009230*/ MOV         R0, #1 
    /*00009234*/ BL          0x0000000000009234          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009238*/ LDR         R3, [R0, #52]               @ 0x34 
    /*0000923c*/ MOV         R0, R4 
    /*00009240*/ BLX         R3 
    /*00009244*/ MOV         R3, #0 
    /*00009248*/ STRD        R0, [R6, #8]! 
    /*0000924c*/ LDR         R4, [R7, #1148]             @ 0x47c 
    /*00009250*/ ADDS        R0, R0, R4 
    /*00009254*/ ADC         R1, R1, R5 
    /*00009258*/ STRD        R0, [R6, #40]               @ 0x28 
    /*0000925c*/ LDR         R2, [R7, #1152]             @ 0x480 
    /*00009260*/ ADDS        R0, R0, R2 
    /*00009264*/ ADC         R1, R1, R3 
    /*00009268*/ ADDS        R4, R4, R0 
    /*0000926c*/ ADC         R5, R5, R1 
    /*00009270*/ STRD        R4, [R6, #120]              @ 0x78 
    /*00009274*/ ADDS        R4, R4, R2 
    /*00009278*/ STRD        R0, [R6, #80]               @ 0x50 
    /*0000927c*/ ADC         R5, R5, R3 
    /*00009280*/ STRD        R4, [R8, #8]! 
    /*00009284*/ LDR         R3, [R7, #1132]             @ 0x46c 
    /*00009288*/ ADDS        R4, R4, R3 
    /*0000928c*/ LDR         R3, [SP, #4] 
    /*00009290*/ ADC         R5, R5, #0 
    /*00009294*/ STRD        R4, [R8, #40]               @ 0x28 
    /*00009298*/ CMP         R3, #1 
    /*0000929c*/ BNE         H264E_GetRcnRefShareBuff_x9204
    /*000092a0*/ LDR         R3, [R7, #1136]             @ 0x470 
    /*000092a4*/ ADDS        R4, R4, R3 
    /*000092a8*/ ADC         R5, R5, #0 
    /*000092ac*/ CMP         FP, R9 
    /*000092b0*/ STRD        R4, [R8, #160]              @ 0xa0 
    /*000092b4*/ BNE         H264E_GetRcnRefShareBuff_x920c
    H264E_GetRcnRefShareBuff_x92b8:
    /*000092b8*/ MOV         R0, #0 
    /*000092bc*/ ADD         SP, SP, #12 
    /*000092c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END H264E_GetRcnRefShareBuff


FUNC_BEGIN H264E_PutRcnRefShareBuff
    /*000092c4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000092c8*/ SUBS        R8, R1, #0 
    /*000092cc*/ SUB         SP, SP, #12 
    /*000092d0*/ BLE         H264E_PutRcnRefShareBuff_x9350
    /*000092d4*/ ADD         R6, R0, #1072               @ 0x430 
    /*000092d8*/ ADD         R5, R0, #13632              @ 0x3540 
    /*000092dc*/ ADD         R6, R6, #4 
    /*000092e0*/ ADD         R5, R5, #24 
    /*000092e4*/ MOV         R4, #0 
    /*000092e8*/ MOV         R9, #6 
    /*000092ec*/ B           H264E_PutRcnRefShareBuff_x92fc
    H264E_PutRcnRefShareBuff_x92f0:
    /*000092f0*/ ADD         R4, R4, #1 
    /*000092f4*/ CMP         R8, R4 
    /*000092f8*/ BEQ         H264E_PutRcnRefShareBuff_x9350
    H264E_PutRcnRefShareBuff_x92fc:
    /*000092fc*/ MOV         R0, #1 
    /*00009300*/ BL          0x0000000000009300          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009304*/ LDR         IP, [R6], #4 
    /*00009308*/ LDRD        R2, [R5], #8 
    /*0000930c*/ STR         R9, [SP] 
    /*00009310*/ LDR         R7, [R0, #64]               @ 0x40 
    /*00009314*/ MOV         R0, IP 
    /*00009318*/ BLX         R7 
    /*0000931c*/ SUBS        R7, R0, #0 
    /*00009320*/ BEQ         H264E_PutRcnRefShareBuff_x92f0
    /*00009324*/ STR         R4, [SP, #4] 
    /*00009328*/ MOV         R1, #10 
    /*0000932c*/ STR         R7, [SP] 
    /*00009330*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1730] 
    /*00009334*/ LDR         R3, [PC, #36]               @ 0x0000000000009360 
    /*00009338*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1730] 
    /*0000933c*/ MOV         R0, #3 
    /*00009340*/ BL          0x0000000000009340          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009344*/ MOV         R0, R7 
    /*00009348*/ ADD         SP, SP, #12 
    /*0000934c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_PutRcnRefShareBuff_x9350:
    /*00009350*/ MOV         R7, #0 
    /*00009354*/ MOV         R0, R7 
    /*00009358*/ ADD         SP, SP, #12 
    /*0000935c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    /*00009360*/ ANDEQ       R0, R0, R8, ROR #8 
FUNC_END H264E_PutRcnRefShareBuff


FUNC_BEGIN H264E_DestroyChn
    /*00009364*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00009368*/ SUB         SP, SP, #8 
    /*0000936c*/ MOV         R5, R0 
    /*00009370*/ BL          0x0000000000009370          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00009374*/ SUBS        R4, R0, #0 
    /*00009378*/ BEQ         H264E_DestroyChn_x9388
    H264E_DestroyChn_x937c:
    /*0000937c*/ MOV         R0, R4 
    /*00009380*/ ADD         SP, SP, #8 
    /*00009384*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264E_DestroyChn_x9388:
    /*00009388*/ MOV         R0, R5 
    /*0000938c*/ BL          0x000000000000938C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00009390*/ SUBS        R4, R0, #0 
    /*00009394*/ BNE         H264E_DestroyChn_x937c
    /*00009398*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000939c*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000093a0*/ ADD         R0, R7, #204                @ 0xcc 
    /*000093a4*/ BL          0x00000000000093A4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000093a8*/ CMP         R0, #0 
    /*000093ac*/ BNE         H264E_DestroyChn_x9508
    /*000093b0*/ LSL         R9, R5, #2 
    /*000093b4*/ ADD         R3, R7, R9 
    /*000093b8*/ LDR         R6, [R3, #64]               @ 0x40 
    /*000093bc*/ ADD         R8, R6, #12288              @ 0x3000 
    /*000093c0*/ ADD         R1, R6, #7744               @ 0x1e40 
    /*000093c4*/ ADD         R0, R6, #10432              @ 0x28c0 
    /*000093c8*/ ADD         R1, R1, #56                 @ 0x38 
    /*000093cc*/ LDR         R2, [R8, #1364]             @ 0x554 
    /*000093d0*/ ADD         R0, R0, #8 
    /*000093d4*/ BL          0x00000000000093D4          @ H264eDpbFlush [R_ARM_CALL: .text+0x10fec] 
    /*000093d8*/ SUBS        R4, R0, #0 
    /*000093dc*/ BNE         H264E_DestroyChn_x9490
    /*000093e0*/ LDR         R3, [R8, #1364]             @ 0x554 
    /*000093e4*/ CMP         R3, #1 
    /*000093e8*/ BEQ         H264E_DestroyChn_x94cc
    H264E_DestroyChn_x93ec:
    /*000093ec*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*000093f0*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*000093f4*/ LDR         R3, [R3] 
    /*000093f8*/ CMP         R3, #2 
    /*000093fc*/ BEQ         H264E_DestroyChn_x94c0
    H264E_DestroyChn_x9400:
    /*00009400*/ LDR         R3, [R8, #2400]             @ 0x960 
    /*00009404*/ CMP         R3, #0 
    /*00009408*/ BEQ         H264E_DestroyChn_x9424
    /*0000940c*/ MOV         R3, R6 
    /*00009410*/ LDR         R2, [R3, #1072]!            @ 0x430 
    /*00009414*/ LDRD        R0, [R3, #-8] 
    /*00009418*/ BL          0x0000000000009418          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*0000941c*/ MOV         R3, #0 
    /*00009420*/ STR         R3, [R6, #1072]             @ 0x430 
    H264E_DestroyChn_x9424:
    /*00009424*/ LDR         R3, [R6, #1024]             @ 0x400 
    /*00009428*/ CMP         R3, #0 
    /*0000942c*/ BEQ         H264E_DestroyChn_x9470
    /*00009430*/ ADD         R0, R6, #9792               @ 0x2640 
    /*00009434*/ ADD         R0, R0, #40                 @ 0x28 
    /*00009438*/ BL          0x0000000000009438          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*0000943c*/ LDR         R8, [R6, #1024]             @ 0x400 
    /*00009440*/ LDR         R5, [R6, #1016]             @ 0x3f8 
    /*00009444*/ LDR         SL, [R6, #1020]             @ 0x3fc 
    /*00009448*/ LDR         R2, [R6, #1028]             @ 0x404 
    /*0000944c*/ MOV         R0, R8 
    /*00009450*/ MOV         R1, R5 
    /*00009454*/ BL          0x0000000000009454          @ hil_mmb_flush_dcache_byaddr [R_ARM_CALL: +0x0] 
    /*00009458*/ MOV         R0, R5 
    /*0000945c*/ MOV         R2, R8 
    /*00009460*/ MOV         R1, SL 
    /*00009464*/ BL          0x0000000000009464          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*00009468*/ MOV         R0, R6 
    /*0000946c*/ BL          0x000000000000946C          @ osal_vfree [R_ARM_CALL: +0x0] 
    H264E_DestroyChn_x9470:
    /*00009470*/ ADD         R7, R7, R9 
    /*00009474*/ LDR         R0, [PC, #152]              @ 0x0000000000009514 
    /*00009478*/ MOV         R3, #0 
    /*0000947c*/ STR         R3, [R7, #64]               @ 0x40 
    /*00009480*/ BL          0x0000000000009480          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009484*/ MOV         R0, R4 
    /*00009488*/ ADD         SP, SP, #8 
    /*0000948c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264E_DestroyChn_x9490:
    /*00009490*/ MOVW        R2, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1758] 
    /*00009494*/ ORR         R4, R4, #-1610612736        @ 0xa0000000 
    /*00009498*/ MOVT        R2, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1758] 
    /*0000949c*/ MOVW        R3, #1522                   @ 0x5f2 
    /*000094a0*/ STR         R5, [SP, #4] 
    /*000094a4*/ STR         R3, [SP] 
    H264E_DestroyChn_x94a8:
    /*000094a8*/ LDR         R3, [PC, #104]              @ 0x0000000000009518 
    /*000094ac*/ MOV         R1, #10 
    /*000094b0*/ MOV         R0, #3 
    /*000094b4*/ ORR         R4, R4, #688128             @ 0xa8000 
    /*000094b8*/ BL          0x00000000000094B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000094bc*/ B           H264E_DestroyChn_x937c
    H264E_DestroyChn_x94c0:
    /*000094c0*/ MOV         R0, R6 
    /*000094c4*/ BL          0x0000000000007EA0 
    /*000094c8*/ B           H264E_DestroyChn_x9400
    H264E_DestroyChn_x94cc:
    /*000094cc*/ BL          0x00000000000094CC          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*000094d0*/ CMP         R0, #1 
    /*000094d4*/ BNE         H264E_DestroyChn_x93ec
    /*000094d8*/ LDR         R1, [R8, #1940]             @ 0x794 
    /*000094dc*/ MOV         R0, R6 
    /*000094e0*/ BL          0x00000000000094E0          @ H264E_PutRcnRefShareBuff [R_ARM_CALL: .text+0x92c4] 
    /*000094e4*/ CMP         R0, #0 
    /*000094e8*/ BEQ         H264E_DestroyChn_x93ec
    /*000094ec*/ MOVW        R3, #1533                   @ 0x5fd 
    /*000094f0*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x178c] 
    /*000094f4*/ STR         R5, [SP, #4] 
    /*000094f8*/ ORR         R4, R0, #-1610612736        @ 0xa0000000 
    /*000094fc*/ STR         R3, [SP] 
    /*00009500*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x178c] 
    /*00009504*/ B           H264E_DestroyChn_x94a8
    H264E_DestroyChn_x9508:
    /*00009508*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000950c*/ MOVT        R4, #65535                  @ 0xffff 
    /*00009510*/ B           H264E_DestroyChn_x937c
    /*00009514*/ ANDEQ       R0, R0, IP, ASR #1 
    /*00009518*/ ANDEQ       R0, R0, R4, LSL #9 
FUNC_END H264E_DestroyChn


FUNC_BEGIN H264E_Exit
    /*0000951c*/ PUSH        {R4, R5, R6, LR} 
    /*00009520*/ MOV         R5, #0 
    /*00009524*/ LDR         R4, [PC, #40]               @ 0x0000000000009554 
    /*00009528*/ ADD         R6, R4, #64                 @ 0x40 
    H264E_Exit_x952c:
    /*0000952c*/ LDR         R3, [R4, #4]! 
    /*00009530*/ MOV         R0, R5 
    /*00009534*/ ADD         R5, R5, #1 
    /*00009538*/ CMP         R3, #0 
    /*0000953c*/ BEQ         H264E_Exit_x9544
    /*00009540*/ BL          0x0000000000009540          @ H264E_DestroyChn [R_ARM_CALL: .text+0x9364] 
    H264E_Exit_x9544:
    /*00009544*/ CMP         R4, R6 
    /*00009548*/ BNE         H264E_Exit_x952c
    /*0000954c*/ POP         {R4, R5, R6, LR} 
    H264E_Exit_x9550:
    /*00009550*/ B           H264E_Exit_x9550            @ H264E_DRV_Exit [R_ARM_JUMP24: .text+0x12a24] 
    /*00009554*/ ANDEQ       R0, R0, IP, LSR R0 
FUNC_END H264E_Exit


FUNC_BEGIN H264E_InitRcnRefShareBuffParam
    /*00009558*/ PUSH        {R4, R5, R6, R8, R9, LR} 
    /*0000955c*/ MOV         R4, R0 
    /*00009560*/ MOV         R6, R1 
    /*00009564*/ MOV         R5, R2 
    /*00009568*/ BL          0x0000000000009568          @ H264E_DRV_IsSupportPmeShareBuf [R_ARM_CALL: .text+0x14b10] 
    /*0000956c*/ LDR         R1, [R4, #572]              @ 0x23c 
    /*00009570*/ MOV         LR, #0 
    /*00009574*/ STR         LR, [R4, #560]              @ 0x230 
    /*00009578*/ CMP         R5, R1 
    /*0000957c*/ STR         LR, [R4, #564]              @ 0x234 
    /*00009580*/ STR         LR, [R4, #568]              @ 0x238 
    /*00009584*/ POPCS       {R4, R5, R6, R8, R9, PC} 
    /*00009588*/ ADD         R3, R5, #60                 @ 0x3c 
    /*0000958c*/ MOV         R2, R5 
    /*00009590*/ ADD         IP, R4, R5, LSL #3 
    /*00009594*/ ADD         R3, R4, R3, LSL #2 
    /*00009598*/ B           H264E_InitRcnRefShareBuffParam_x95a4
    H264E_InitRcnRefShareBuffParam_x959c:
    /*0000959c*/ CMP         R1, R2 
    /*000095a0*/ BLS         H264E_InitRcnRefShareBuffParam_x95f4
    H264E_InitRcnRefShareBuffParam_x95a4:
    /*000095a4*/ STR         LR, [R3, #100]              @ 0x64 
    /*000095a8*/ CMP         R0, #1 
    /*000095ac*/ STR         LR, [R3, #120]              @ 0x78 
    /*000095b0*/ ADD         R2, R2, #1 
    /*000095b4*/ LDR         R4, [R6, #60]               @ 0x3c 
    /*000095b8*/ STR         R4, [R3], #4 
    /*000095bc*/ LSR         R4, R4, #1 
    /*000095c0*/ STR         LR, [R3, #16] 
    /*000095c4*/ STR         LR, [R3, #56]               @ 0x38 
    /*000095c8*/ STR         R4, [R3, #36]               @ 0x24 
    /*000095cc*/ LDRD        R8, [IP], #8 
    /*000095d0*/ LDRD        R4, [IP, #32] 
    /*000095d4*/ STRD        R8, [IP, #72]               @ 0x48 
    /*000095d8*/ STRD        R4, [IP, #112]              @ 0x70 
    /*000095dc*/ BNE         H264E_InitRcnRefShareBuffParam_x959c
    /*000095e0*/ STR         LR, [R3, #136]              @ 0x88 
    /*000095e4*/ CMP         R1, R2 
    /*000095e8*/ LDRD        R4, [IP, #152]              @ 0x98 
    /*000095ec*/ STRD        R4, [IP, #192]              @ 0xc0 
    /*000095f0*/ BHI         H264E_InitRcnRefShareBuffParam_x95a4
    H264E_InitRcnRefShareBuffParam_x95f4:
    /*000095f4*/ POP         {R4, R5, R6, R8, R9, PC} 
FUNC_END H264E_InitRcnRefShareBuffParam


FUNC_BEGIN H264E_AllocStreamBuf
    /*000095f8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000095fc*/ CMP         R1, #1 
    /*00009600*/ SUB         SP, SP, #92                 @ 0x5c 
    /*00009604*/ MOV         R5, #0 
    /*00009608*/ MOV         R6, R1 
    /*0000960c*/ STR         R5, [SP, #60]               @ 0x3c 
    /*00009610*/ STR         R5, [SP, #56]               @ 0x38 
    /*00009614*/ STR         R5, [SP, #64]               @ 0x40 
    /*00009618*/ STR         R5, [SP, #68]               @ 0x44 
    /*0000961c*/ STR         R5, [SP, #24] 
    /*00009620*/ STR         R5, [SP, #72]               @ 0x48 
    /*00009624*/ STR         R5, [SP, #44]               @ 0x2c 
    /*00009628*/ STR         R5, [SP, #76]               @ 0x4c 
    /*0000962c*/ STR         R5, [SP, #80]               @ 0x50 
    /*00009630*/ STR         R5, [SP, #84]               @ 0x54 
    /*00009634*/ STR         R5, [SP, #48]               @ 0x30 
    /*00009638*/ STR         R5, [SP, #52]               @ 0x34 
    /*0000963c*/ BHI         H264E_AllocStreamBuf_x9920
    /*00009640*/ ADD         R4, R0, #12288              @ 0x3000 
    /*00009644*/ MOV         R7, R0 
    /*00009648*/ LDR         R3, [R4, #2400]             @ 0x960 
    /*0000964c*/ CMP         R1, R3 
    /*00009650*/ BLS         H264E_AllocStreamBuf_x98c4
    /*00009654*/ CMP         R3, #0 
    /*00009658*/ LDR         R1, [R4, #1948]             @ 0x79c 
    /*0000965c*/ ADDEQ       R3, R2, #4080               @ 0xff0 
    /*00009660*/ LDRNE       R3, [R0, #1060]             @ 0x424 
    /*00009664*/ ADDEQ       R3, R3, #15 
    /*00009668*/ BICEQ       R2, R3, #4080               @ 0xff0 
    /*0000966c*/ MOV         R0, #2 
    /*00009670*/ BICEQ       R2, R2, #15 
    /*00009674*/ LDRNE       R2, [R3, #8] 
    /*00009678*/ MOVW        R3, #4095                   @ 0xfff 
    /*0000967c*/ STR         R1, [SP, #52]               @ 0x34 
    /*00009680*/ ADD         R3, R3, R2, LSR #1 
    /*00009684*/ STR         R2, [SP, #56]               @ 0x38 
    /*00009688*/ BIC         R3, R3, #4080               @ 0xff0 
    /*0000968c*/ BIC         R3, R3, #15 
    /*00009690*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00009694*/ MOV         R3, #8 
    /*00009698*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000969c*/ BL          0x000000000000969C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000096a0*/ ADD         R1, SP, #24 
    /*000096a4*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*000096a8*/ ADD         R0, SP, #44                 @ 0x2c 
    /*000096ac*/ BLX         R3 
    /*000096b0*/ SUBS        R5, R0, #0 
    /*000096b4*/ BNE         H264E_AllocStreamBuf_x9950
    /*000096b8*/ LDR         R9, [R4, #2400]             @ 0x960 
    /*000096bc*/ CMP         R6, R9 
    /*000096c0*/ BLS         H264E_AllocStreamBuf_x9848
    /*000096c4*/ LDR         R3, [R4, #1948]             @ 0x79c 
    /*000096c8*/ MOV         R1, #16 
    /*000096cc*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x187c] 
    /*000096d0*/ STR         R9, [SP] 
    /*000096d4*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x187c] 
    /*000096d8*/ ADD         R0, SP, #72                 @ 0x48 
    /*000096dc*/ BL          0x00000000000096DC          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*000096e0*/ LSL         R3, R9, #2 
    /*000096e4*/ ADD         R2, SP, #88                 @ 0x58 
    /*000096e8*/ LDR         R0, [SP, #24] 
    /*000096ec*/ ADD         R2, R2, R3 
    /*000096f0*/ ADD         R1, SP, #72                 @ 0x48 
    /*000096f4*/ LDR         R8, [R2, #-32]              @ 0xffffffe0 
    /*000096f8*/ ADD         R2, SP, #28 
    /*000096fc*/ ADD         R3, R2, R3 
    /*00009700*/ ADD         R2, SP, #32 
    /*00009704*/ ADD         R8, R8, #4224               @ 0x1080 
    /*00009708*/ ADD         R2, R2, R9, LSL #3 
    /*0000970c*/ ADD         R8, R8, #56                 @ 0x38 
    /*00009710*/ STR         R8, [SP] 
    /*00009714*/ BL          0x0000000000009714          @ CMPI_MmzMallocNocache [R_ARM_CALL: +0x0] 
    /*00009718*/ CMN         R0, #1 
    /*0000971c*/ BEQ         H264E_AllocStreamBuf_x9858
    /*00009720*/ LDR         FP, [R4, #2400]             @ 0x960 
    /*00009724*/ CMP         R6, FP 
    /*00009728*/ BLS         H264E_AllocStreamBuf_x9848
    /*0000972c*/ LSL         R3, FP, #2 
    /*00009730*/ ADD         R2, SP, #88                 @ 0x58 
    /*00009734*/ ADD         R1, R2, R3 
    /*00009738*/ LSL         FP, FP, #3 
    /*0000973c*/ ADD         R0, R2, FP 
    /*00009740*/ ADD         R2, R7, FP 
    /*00009744*/ LDR         IP, [R1, #-60]              @ 0xffffffc4 
    /*00009748*/ ADD         R9, R2, #1072               @ 0x430 
    /*0000974c*/ LDRD        SL, [R0, #-56]              @ 0xffffffc8 
    /*00009750*/ ADD         R7, R7, R3 
    /*00009754*/ STR         R2, [SP, #20] 
    /*00009758*/ MOVW        R2, #4095                   @ 0xfff 
    /*0000975c*/ ADDS        R2, R2, IP 
    /*00009760*/ LDR         R8, [R1, #-32]              @ 0xffffffe0 
    /*00009764*/ BIC         IP, R2, #4080               @ 0xff0 
    /*00009768*/ MOVW        R2, #4095                   @ 0xfff 
    /*0000976c*/ ADDS        R2, R2, SL 
    /*00009770*/ MOV         R3, #0 
    /*00009774*/ ADC         R3, R3, FP 
    /*00009778*/ BIC         IP, IP, #15 
    /*0000977c*/ MOV         SL, R2 
    /*00009780*/ MOV         R2, #61440                  @ 0xf000 
    /*00009784*/ MOV         FP, R3 
    /*00009788*/ ANDS        R3, R8, #3 
    /*0000978c*/ MOVT        R2, #65535                  @ 0xffff 
    /*00009790*/ ADD         LR, R8, #64                 @ 0x40 
    /*00009794*/ MOVNE       R3, #1 
    /*00009798*/ CMP         R8, #63                     @ 0x3f 
    /*0000979c*/ ORRLS       R3, R3, #1 
    /*000097a0*/ AND         SL, SL, R2 
    /*000097a4*/ CMP         R3, #0 
    /*000097a8*/ MVN         R3, #0 
    /*000097ac*/ AND         FP, FP, R3 
    /*000097b0*/ STR         IP, [R1, #-60]              @ 0xffffffc4 
    /*000097b4*/ ADD         R1, LR, IP 
    /*000097b8*/ MOV         R2, SL 
    /*000097bc*/ MOV         R3, FP 
    /*000097c0*/ ADD         SL, R1, #32 
    /*000097c4*/ STRD        R2, [R9, #-8] 
    /*000097c8*/ STRD        R2, [R0, #-56]              @ 0xffffffc8 
    /*000097cc*/ ADD         R0, R1, #64                 @ 0x40 
    /*000097d0*/ STR         SL, [SP, #16] 
    /*000097d4*/ ADD         R2, R1, #128                @ 0x80 
    /*000097d8*/ STR         IP, [R7, #1072]             @ 0x430 
    /*000097dc*/ ADD         R3, R1, #96                 @ 0x60 
    /*000097e0*/ STR         R1, [R7, #1060]             @ 0x424 
    /*000097e4*/ BNE         H264E_AllocStreamBuf_x9908
    /*000097e8*/ STR         IP, [R1, #176]              @ 0xb0 
    /*000097ec*/ MOV         SL, #0 
    /*000097f0*/ MOV         FP, #0 
    /*000097f4*/ STRD        SL, [LR, IP] 
    /*000097f8*/ LDR         LR, [SP, #16] 
    /*000097fc*/ MOV         IP, #64                     @ 0x40 
    /*00009800*/ STR         R0, [R1, #164]              @ 0xa4 
    /*00009804*/ STR         R2, [R1, #168]              @ 0xa8 
    /*00009808*/ STR         LR, [R1, #160]              @ 0xa0 
    /*0000980c*/ STR         R3, [R1, #172]              @ 0xac 
    /*00009810*/ STR         R8, [R1, #8] 
    /*00009814*/ STR         R5, [R1, #32] 
    /*00009818*/ STR         R5, [R1, #64]               @ 0x40 
    /*0000981c*/ STR         R5, [R1, #128]              @ 0x80 
    /*00009820*/ STR         R5, [R1, #96]               @ 0x60 
    /*00009824*/ STR         IP, [R1, #12] 
    H264E_AllocStreamBuf_x9828:
    /*00009828*/ LDRD        R2, [R9, #-8] 
    /*0000982c*/ MOVW        R1, #0                      @ VencBufferCache [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00009830*/ LDR         R0, [R7, #1060]             @ 0x424 
    /*00009834*/ MOVT        R1, #0                      @ VencBufferCache [R_ARM_MOVT_ABS: +0x0] 
    /*00009838*/ STRD        R2, [R0] 
    /*0000983c*/ LDR         R3, [R1] 
    /*00009840*/ CMP         R3, #1 
    /*00009844*/ BEQ         H264E_AllocStreamBuf_x98f0
    H264E_AllocStreamBuf_x9848:
    /*00009848*/ STR         R6, [R4, #2400]             @ 0x960 
    H264E_AllocStreamBuf_x984c:
    /*0000984c*/ MOV         R0, R5 
    /*00009850*/ ADD         SP, SP, #92                 @ 0x5c 
    /*00009854*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_AllocStreamBuf_x9858:
    /*00009858*/ LDR         R1, [R4, #1948]             @ 0x79c 
    /*0000985c*/ MOVW        R3, #898                    @ 0x382 
    /*00009860*/ STR         R8, [SP, #12] 
    /*00009864*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x188c] 
    /*00009868*/ STR         R3, [SP] 
    /*0000986c*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x188c] 
    /*00009870*/ STR         R1, [SP, #4] 
    /*00009874*/ MOV         R0, #3 
    /*00009878*/ LDR         R3, [PC, #260]              @ 0x0000000000009984 
    /*0000987c*/ MOV         R1, #10 
    /*00009880*/ STR         R9, [SP, #8] 
    /*00009884*/ BL          0x0000000000009884          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009888*/ LDR         R3, [R4, #2400]             @ 0x960 
    /*0000988c*/ CMP         R9, R3 
    /*00009890*/ BLS         H264E_AllocStreamBuf_x98b0
    /*00009894*/ ADD         R1, SP, #88                 @ 0x58 
    /*00009898*/ ADD         R2, SP, #88                 @ 0x58 
    /*0000989c*/ ADD         R2, R2, R3, LSL #2 
    /*000098a0*/ ADD         R3, R1, R3, LSL #3 
    /*000098a4*/ LDR         R2, [R2, #-60]              @ 0xffffffc4 
    /*000098a8*/ LDRD        R0, [R3, #-56]              @ 0xffffffc8 
    /*000098ac*/ BL          0x00000000000098AC          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    H264E_AllocStreamBuf_x98b0:
    /*000098b0*/ MOVW        R5, #32780                  @ 0x800c 
    /*000098b4*/ MOVT        R5, #40970                  @ 0xa00a 
    /*000098b8*/ MOV         R0, R5 
    /*000098bc*/ ADD         SP, SP, #92                 @ 0x5c 
    /*000098c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_AllocStreamBuf_x98c4:
    /*000098c4*/ MOVW        R3, #827                    @ 0x33b 
    /*000098c8*/ MOV         R1, #10 
    /*000098cc*/ STR         R3, [SP] 
    /*000098d0*/ MOVW        R2, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x180c] 
    /*000098d4*/ LDR         R3, [PC, #168]              @ 0x0000000000009984 
    /*000098d8*/ MOVT        R2, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x180c] 
    /*000098dc*/ MOV         R0, #6 
    /*000098e0*/ BL          0x00000000000098E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000098e4*/ MOV         R0, R5 
    /*000098e8*/ ADD         SP, SP, #92                 @ 0x5c 
    /*000098ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_AllocStreamBuf_x98f0:
    /*000098f0*/ LDR         R3, [SP, #20] 
    /*000098f4*/ MOV         R2, R8 
    /*000098f8*/ LDR         R0, [R7, #1072]             @ 0x430 
    /*000098fc*/ LDR         R1, [R3, #1064]             @ 0x428 
    /*00009900*/ BL          0x0000000000009900          @ hil_mmb_invalid_cache_byaddr [R_ARM_CALL: +0x0] 
    /*00009904*/ B           H264E_AllocStreamBuf_x9848
    H264E_AllocStreamBuf_x9908:
    /*00009908*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18dc] 
    /*0000990c*/ MOV         R1, #18 
    /*00009910*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18dc] 
    /*00009914*/ MOV         R0, #3 
    /*00009918*/ BL          0x0000000000009918          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000991c*/ B           H264E_AllocStreamBuf_x9828
    H264E_AllocStreamBuf_x9920:
    /*00009920*/ STR         R1, [SP, #4] 
    /*00009924*/ MOV         R3, #820                    @ 0x334 
    /*00009928*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x17cc] 
    /*0000992c*/ STR         R3, [SP] 
    /*00009930*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x17cc] 
    /*00009934*/ LDR         R3, [PC, #72]               @ 0x0000000000009984 
    /*00009938*/ MOV         R1, #10 
    /*0000993c*/ MOV         R0, #3 
    /*00009940*/ MOVW        R5, #32771                  @ 0x8003 
    /*00009944*/ BL          0x0000000000009944          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009948*/ MOVT        R5, #40970                  @ 0xa00a 
    /*0000994c*/ B           H264E_AllocStreamBuf_x984c
    H264E_AllocStreamBuf_x9950:
    /*00009950*/ LDR         R1, [R4, #1948]             @ 0x79c 
    /*00009954*/ MOVW        R3, #882                    @ 0x372 
    /*00009958*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1844] 
    /*0000995c*/ STR         R3, [SP] 
    /*00009960*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1844] 
    /*00009964*/ LDR         R3, [PC, #24]               @ 0x0000000000009984 
    /*00009968*/ STR         R1, [SP, #4] 
    /*0000996c*/ MOV         R0, #3 
    /*00009970*/ MOV         R1, #10 
    /*00009974*/ MOVW        R5, #32784                  @ 0x8010 
    /*00009978*/ BL          0x0000000000009978          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000997c*/ MOVT        R5, #40970                  @ 0xa00a 
    /*00009980*/ B           H264E_AllocStreamBuf_x984c
    /*00009984*/ MULEQ       R0, R8, R4 
FUNC_END H264E_AllocStreamBuf


FUNC_BEGIN H264e_ChangeStreamBuf
    /*00009988*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000998c*/ SUB         SP, SP, #12 
    /*00009990*/ MOV         R7, R1 
    /*00009994*/ MOV         R5, R2 
    /*00009998*/ MOV         R6, R0 
    /*0000999c*/ BL          0x000000000000999C          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*000099a0*/ SUBS        R4, R0, #0 
    /*000099a4*/ BEQ         H264e_ChangeStreamBuf_x99b4
    H264e_ChangeStreamBuf_x99a8:
    /*000099a8*/ MOV         R0, R4 
    /*000099ac*/ ADD         SP, SP, #12 
    /*000099b0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264e_ChangeStreamBuf_x99b4:
    /*000099b4*/ MOV         R0, R6 
    /*000099b8*/ BL          0x00000000000099B8          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*000099bc*/ SUBS        R4, R0, #0 
    /*000099c0*/ BNE         H264e_ChangeStreamBuf_x99a8
    /*000099c4*/ MOV         R0, R5 
    /*000099c8*/ BL          0x00000000000099C8          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*000099cc*/ SUBS        R4, R0, #0 
    /*000099d0*/ BNE         H264e_ChangeStreamBuf_x99a8
    /*000099d4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000099d8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000099dc*/ ADD         R6, R3, R6, LSL #2 
    /*000099e0*/ LDR         R8, [R6, #64]               @ 0x40 
    /*000099e4*/ ADD         R9, R8, #12288              @ 0x3000 
    /*000099e8*/ LDR         R6, [R9, #2400]             @ 0x960 
    /*000099ec*/ CMP         R7, R6 
    /*000099f0*/ BLS         H264e_ChangeStreamBuf_x9a80
    /*000099f4*/ CMP         R6, #0 
    /*000099f8*/ BGT         H264e_ChangeStreamBuf_x9a24
    /*000099fc*/ LSL         R2, R6, #3 
    /*00009a00*/ ADD         R3, R5, R6, LSL #2 
    /*00009a04*/ ADD         IP, R5, R2 
    /*00009a08*/ MOV         R1, #96                     @ 0x60 
    /*00009a0c*/ MOV         R0, #0 
    /*00009a10*/ STR         R1, [R3, #20] 
    /*00009a14*/ MOV         R1, #0 
    /*00009a18*/ STRD        R0, [IP, #8] 
    /*00009a1c*/ STRD        R0, [R5, R2] 
    /*00009a20*/ STR         R4, [R3, #16] 
    H264e_ChangeStreamBuf_x9a24:
    /*00009a24*/ MOV         R1, R7 
    /*00009a28*/ MOV         R2, #0 
    /*00009a2c*/ MOV         R0, R8 
    /*00009a30*/ BL          0x0000000000009A30          @ H264E_AllocStreamBuf [R_ARM_CALL: .text+0x95f8] 
    /*00009a34*/ SUBS        R4, R0, #0 
    /*00009a38*/ BNE         H264e_ChangeStreamBuf_x99a8
    /*00009a3c*/ ADD         R8, R8, R6, LSL #2 
    /*00009a40*/ LSL         R1, R6, #3 
    /*00009a44*/ ADD         R3, R5, R1 
    /*00009a48*/ ADD         R6, R6, #4 
    /*00009a4c*/ LDR         R2, [R8, #1060]             @ 0x424 
    /*00009a50*/ LDR         R2, [R2, #176]              @ 0xb0 
    /*00009a54*/ STR         R4, [R3, #12] 
    /*00009a58*/ STR         R2, [R3, #8] 
    /*00009a5c*/ LDR         R3, [R8, #1060]             @ 0x424 
    /*00009a60*/ LDRD        R2, [R3] 
    /*00009a64*/ STRD        R2, [R5, R1] 
    /*00009a68*/ LDR         R3, [R8, #1060]             @ 0x424 
    /*00009a6c*/ LDR         R3, [R3, #8] 
    /*00009a70*/ STR         R3, [R5, R6, LSL #2] 
    /*00009a74*/ LDR         R3, [R9, #2400]             @ 0x960 
    /*00009a78*/ STR         R3, [R5, #24] 
    /*00009a7c*/ B           H264e_ChangeStreamBuf_x99a8
    H264e_ChangeStreamBuf_x9a80:
    /*00009a80*/ MOVW        R3, #5982                   @ 0x175e 
    /*00009a84*/ MOVW        R2, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x180c] 
    /*00009a88*/ STR         R3, [SP] 
    /*00009a8c*/ MOVT        R2, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x180c] 
    /*00009a90*/ LDR         R3, [PC, #12]               @ 0x0000000000009aa4 
    /*00009a94*/ MOV         R1, #10 
    /*00009a98*/ MOV         R0, #6 
    /*00009a9c*/ BL          0x0000000000009A9C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009aa0*/ B           H264e_ChangeStreamBuf_x99a8
    /*00009aa4*/ @           <UNDEFINED> instruction: 0x000004b0 
FUNC_END H264e_ChangeStreamBuf


FUNC_BEGIN H264E_AllocRcnRefPicInfoBUF
    /*00009aa8*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00009aac*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00009ab0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00009ab4*/ SUB         SP, SP, #60                 @ 0x3c 
    /*00009ab8*/ LDR         R2, [R3] 
    /*00009abc*/ MOV         R3, #0 
    /*00009ac0*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00009ac4*/ CMP         R2, #2 
    /*00009ac8*/ STR         R3, [SP, #24] 
    /*00009acc*/ STR         R3, [SP, #40]               @ 0x28 
    /*00009ad0*/ STR         R3, [SP, #48]               @ 0x30 
    /*00009ad4*/ STR         R3, [SP, #52]               @ 0x34 
    /*00009ad8*/ STR         R3, [SP, #32] 
    /*00009adc*/ BEQ         H264E_AllocRcnRefPicInfoBUF_x9af0
    H264E_AllocRcnRefPicInfoBUF_x9ae0:
    /*00009ae0*/ MOV         R9, #0 
    H264E_AllocRcnRefPicInfoBUF_x9ae4:
    /*00009ae4*/ MOV         R0, R9 
    /*00009ae8*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00009aec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_AllocRcnRefPicInfoBUF_x9af0:
    /*00009af0*/ ADD         FP, R0, #12288              @ 0x3000 
    /*00009af4*/ MOV         R3, #8 
    /*00009af8*/ STR         R3, [SP, #28] 
    /*00009afc*/ MOV         R8, R0 
    /*00009b00*/ LDR         R3, [FP, #1948]             @ 0x79c 
    /*00009b04*/ MOV         R0, R2 
    /*00009b08*/ MOV         R7, R1 
    /*00009b0c*/ STR         R3, [SP, #36]               @ 0x24 
    /*00009b10*/ BL          0x0000000000009B10          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009b14*/ ADD         R1, SP, #24 
    /*00009b18*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*00009b1c*/ ADD         R0, SP, #28 
    /*00009b20*/ BLX         R3 
    /*00009b24*/ SUBS        R4, R0, #0 
    /*00009b28*/ BNE         H264E_AllocRcnRefPicInfoBUF_x9c2c
    /*00009b2c*/ CMP         R7, #0 
    /*00009b30*/ BLE         H264E_AllocRcnRefPicInfoBUF_x9ae0
    /*00009b34*/ ADD         R3, R8, #1088               @ 0x440 
    /*00009b38*/ MOVW        SL, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18fc] 
    /*00009b3c*/ ADD         R3, R3, #4 
    /*00009b40*/ MOVT        SL, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18fc] 
    /*00009b44*/ STR         R3, [SP, #20] 
    /*00009b48*/ MOV         R5, R3 
    /*00009b4c*/ STR         SL, [SP, #16] 
    /*00009b50*/ B           H264E_AllocRcnRefPicInfoBUF_x9b60
    H264E_AllocRcnRefPicInfoBUF_x9b54:
    /*00009b54*/ ADD         R4, R4, #1 
    /*00009b58*/ CMP         R7, R4 
    /*00009b5c*/ BEQ         H264E_AllocRcnRefPicInfoBUF_x9ae0
    H264E_AllocRcnRefPicInfoBUF_x9b60:
    /*00009b60*/ LDR         R6, [R5, #4]! 
    /*00009b64*/ CMN         R6, #1 
    /*00009b68*/ BNE         H264E_AllocRcnRefPicInfoBUF_x9b54
    /*00009b6c*/ LDR         R3, [FP, #1948]             @ 0x79c 
    /*00009b70*/ MOV         R1, #16 
    /*00009b74*/ LDR         R2, [SP, #16] 
    /*00009b78*/ ADD         R0, SP, #40                 @ 0x28 
    /*00009b7c*/ STR         R4, [SP] 
    /*00009b80*/ BL          0x0000000000009B80          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*00009b84*/ MOV         R0, #1 
    /*00009b88*/ LDR         R9, [R8, #1192]             @ 0x4a8 
    /*00009b8c*/ LDR         SL, [SP, #24] 
    /*00009b90*/ BL          0x0000000000009B90          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009b94*/ MOV         R3, #0 
    /*00009b98*/ ADD         R2, SP, #40                 @ 0x28 
    /*00009b9c*/ STR         R3, [SP, #8] 
    /*00009ba0*/ MOV         R1, #1 
    /*00009ba4*/ STR         R2, [SP, #4] 
    /*00009ba8*/ MOV         R2, R9 
    /*00009bac*/ STR         SL, [SP] 
    /*00009bb0*/ LDR         R9, [R0] 
    /*00009bb4*/ MOV         R0, R5 
    /*00009bb8*/ BLX         R9 
    /*00009bbc*/ CMP         R0, #0 
    /*00009bc0*/ BEQ         H264E_AllocRcnRefPicInfoBUF_x9b54
    /*00009bc4*/ ADD         R4, R4, #272                @ 0x110 
    /*00009bc8*/ MOVW        R3, #970                    @ 0x3ca 
    /*00009bcc*/ MOV         R9, R0 
    /*00009bd0*/ STR         R3, [SP] 
    /*00009bd4*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x190c] 
    /*00009bd8*/ LDR         R3, [PC, #128]              @ 0x0000000000009c60 
    /*00009bdc*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x190c] 
    /*00009be0*/ MOV         R1, #10 
    /*00009be4*/ MOV         R0, #3 
    /*00009be8*/ ADD         R4, R4, #2 
    /*00009bec*/ BL          0x0000000000009BEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009bf0*/ LDR         R7, [SP, #20] 
    /*00009bf4*/ ADD         R4, R8, R4, LSL #2 
    H264E_AllocRcnRefPicInfoBUF_x9bf8:
    /*00009bf8*/ LDR         R5, [R4] 
    /*00009bfc*/ MOV         R0, #1 
    /*00009c00*/ CMN         R5, #1 
    /*00009c04*/ BEQ         H264E_AllocRcnRefPicInfoBUF_x9c1c
    /*00009c08*/ BL          0x0000000000009C08          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009c0c*/ LDR         R3, [R0, #4] 
    /*00009c10*/ MOV         R0, R5 
    /*00009c14*/ BLX         R3 
    /*00009c18*/ STR         R6, [R4] 
    H264E_AllocRcnRefPicInfoBUF_x9c1c:
    /*00009c1c*/ SUB         R4, R4, #4 
    /*00009c20*/ CMP         R4, R7 
    /*00009c24*/ BNE         H264E_AllocRcnRefPicInfoBUF_x9bf8
    /*00009c28*/ B           H264E_AllocRcnRefPicInfoBUF_x9ae4
    H264E_AllocRcnRefPicInfoBUF_x9c2c:
    /*00009c2c*/ LDR         R1, [FP, #1948]             @ 0x79c 
    /*00009c30*/ MOVW        R3, #953                    @ 0x3b9 
    /*00009c34*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1844] 
    /*00009c38*/ STR         R3, [SP] 
    /*00009c3c*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1844] 
    /*00009c40*/ LDR         R3, [PC, #24]               @ 0x0000000000009c60 
    /*00009c44*/ STR         R1, [SP, #4] 
    /*00009c48*/ MOV         R0, #3 
    /*00009c4c*/ MOV         R1, #10 
    /*00009c50*/ MOVW        R9, #32784                  @ 0x8010 
    /*00009c54*/ BL          0x0000000000009C54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009c58*/ MOVT        R9, #40970                  @ 0xa00a 
    /*00009c5c*/ B           H264E_AllocRcnRefPicInfoBUF_x9ae4
    /*00009c60*/ ANDEQ       R0, R0, R8, ASR #9 
FUNC_END H264E_AllocRcnRefPicInfoBUF


FUNC_BEGIN H264E_AllocRcnRefPicBUF
    /*00009c64*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00009c68*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00009c6c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00009c70*/ SUB         SP, SP, #60                 @ 0x3c 
    /*00009c74*/ LDR         R2, [R3] 
    /*00009c78*/ MOV         R3, #0 
    /*00009c7c*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00009c80*/ CMP         R2, #2 
    /*00009c84*/ STR         R3, [SP, #24] 
    /*00009c88*/ STR         R3, [SP, #40]               @ 0x28 
    /*00009c8c*/ STR         R3, [SP, #48]               @ 0x30 
    /*00009c90*/ STR         R3, [SP, #52]               @ 0x34 
    /*00009c94*/ STR         R3, [SP, #32] 
    /*00009c98*/ BEQ         H264E_AllocRcnRefPicBUF_x9cac
    H264E_AllocRcnRefPicBUF_x9c9c:
    /*00009c9c*/ MOV         R9, #0 
    H264E_AllocRcnRefPicBUF_x9ca0:
    /*00009ca0*/ MOV         R0, R9 
    /*00009ca4*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00009ca8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_AllocRcnRefPicBUF_x9cac:
    /*00009cac*/ ADD         FP, R0, #12288              @ 0x3000 
    /*00009cb0*/ MOV         R3, #8 
    /*00009cb4*/ STR         R3, [SP, #28] 
    /*00009cb8*/ MOV         R8, R0 
    /*00009cbc*/ LDR         R3, [FP, #1948]             @ 0x79c 
    /*00009cc0*/ MOV         R0, R2 
    /*00009cc4*/ MOV         R7, R1 
    /*00009cc8*/ STR         R3, [SP, #36]               @ 0x24 
    /*00009ccc*/ BL          0x0000000000009CCC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009cd0*/ ADD         R1, SP, #24 
    /*00009cd4*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*00009cd8*/ ADD         R0, SP, #28 
    /*00009cdc*/ BLX         R3 
    /*00009ce0*/ SUBS        R4, R0, #0 
    /*00009ce4*/ BNE         H264E_AllocRcnRefPicBUF_x9de4
    /*00009ce8*/ CMP         R7, #0 
    /*00009cec*/ BLE         H264E_AllocRcnRefPicBUF_x9c9c
    /*00009cf0*/ ADD         R3, R8, #1072               @ 0x430 
    /*00009cf4*/ MOVW        SL, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1948] 
    /*00009cf8*/ STR         R3, [SP, #20] 
    /*00009cfc*/ MOVT        SL, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1948] 
    /*00009d00*/ MOV         R5, R3 
    /*00009d04*/ STR         SL, [SP, #16] 
    /*00009d08*/ B           H264E_AllocRcnRefPicBUF_x9d18
    H264E_AllocRcnRefPicBUF_x9d0c:
    /*00009d0c*/ ADD         R4, R4, #1 
    /*00009d10*/ CMP         R7, R4 
    /*00009d14*/ BEQ         H264E_AllocRcnRefPicBUF_x9c9c
    H264E_AllocRcnRefPicBUF_x9d18:
    /*00009d18*/ LDR         R6, [R5, #4]! 
    /*00009d1c*/ CMN         R6, #1 
    /*00009d20*/ BNE         H264E_AllocRcnRefPicBUF_x9d0c
    /*00009d24*/ LDR         R3, [FP, #1948]             @ 0x79c 
    /*00009d28*/ MOV         R1, #16 
    /*00009d2c*/ LDR         R2, [SP, #16] 
    /*00009d30*/ ADD         R0, SP, #40                 @ 0x28 
    /*00009d34*/ STR         R4, [SP] 
    /*00009d38*/ BL          0x0000000000009D38          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*00009d3c*/ MOV         R0, #1 
    /*00009d40*/ LDR         R9, [R8, #1188]             @ 0x4a4 
    /*00009d44*/ LDR         SL, [SP, #24] 
    /*00009d48*/ BL          0x0000000000009D48          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009d4c*/ MOV         R3, #0 
    /*00009d50*/ ADD         R2, SP, #40                 @ 0x28 
    /*00009d54*/ STR         R3, [SP, #8] 
    /*00009d58*/ MOV         R1, #1 
    /*00009d5c*/ STR         R2, [SP, #4] 
    /*00009d60*/ MOV         R2, R9 
    /*00009d64*/ STR         SL, [SP] 
    /*00009d68*/ LDR         R9, [R0] 
    /*00009d6c*/ MOV         R0, R5 
    /*00009d70*/ BLX         R9 
    /*00009d74*/ CMP         R0, #0 
    /*00009d78*/ BEQ         H264E_AllocRcnRefPicBUF_x9d0c
    /*00009d7c*/ ADD         R4, R4, #268                @ 0x10c 
    /*00009d80*/ MOVW        R3, #1021                   @ 0x3fd 
    /*00009d84*/ MOV         R9, R0 
    /*00009d88*/ STR         R3, [SP] 
    /*00009d8c*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1958] 
    /*00009d90*/ LDR         R3, [PC, #128]              @ 0x0000000000009e18 
    /*00009d94*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1958] 
    /*00009d98*/ MOV         R1, #10 
    /*00009d9c*/ MOV         R0, #3 
    /*00009da0*/ ADD         R4, R4, #1 
    /*00009da4*/ BL          0x0000000000009DA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009da8*/ LDR         R7, [SP, #20] 
    /*00009dac*/ ADD         R4, R8, R4, LSL #2 
    H264E_AllocRcnRefPicBUF_x9db0:
    /*00009db0*/ LDR         R5, [R4] 
    /*00009db4*/ MOV         R0, #1 
    /*00009db8*/ CMN         R5, #1 
    /*00009dbc*/ BEQ         H264E_AllocRcnRefPicBUF_x9dd4
    /*00009dc0*/ BL          0x0000000000009DC0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009dc4*/ LDR         R3, [R0, #4] 
    /*00009dc8*/ MOV         R0, R5 
    /*00009dcc*/ BLX         R3 
    /*00009dd0*/ STR         R6, [R4] 
    H264E_AllocRcnRefPicBUF_x9dd4:
    /*00009dd4*/ SUB         R4, R4, #4 
    /*00009dd8*/ CMP         R4, R7 
    /*00009ddc*/ BNE         H264E_AllocRcnRefPicBUF_x9db0
    /*00009de0*/ B           H264E_AllocRcnRefPicBUF_x9ca0
    H264E_AllocRcnRefPicBUF_x9de4:
    /*00009de4*/ LDR         R1, [FP, #1948]             @ 0x79c 
    /*00009de8*/ MOVW        R3, #1003                   @ 0x3eb 
    /*00009dec*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1844] 
    /*00009df0*/ STR         R3, [SP] 
    /*00009df4*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1844] 
    /*00009df8*/ LDR         R3, [PC, #24]               @ 0x0000000000009e18 
    /*00009dfc*/ STR         R1, [SP, #4] 
    /*00009e00*/ MOV         R0, #3 
    /*00009e04*/ MOV         R1, #10 
    /*00009e08*/ MOVW        R9, #32784                  @ 0x8010 
    /*00009e0c*/ BL          0x0000000000009E0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009e10*/ MOVT        R9, #40970                  @ 0xa00a 
    /*00009e14*/ B           H264E_AllocRcnRefPicBUF_x9ca0
    /*00009e18*/ ANDEQ       R0, R0, R4, ROR #9 
FUNC_END H264E_AllocRcnRefPicBUF


FUNC_BEGIN H264E_InitRcnRefBUF
    /*00009e1c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00009e20*/ ADD         R4, R1, #1 
    /*00009e24*/ SUB         SP, SP, #12 
    /*00009e28*/ MOV         R7, R1 
    /*00009e2c*/ MOV         R1, R4 
    /*00009e30*/ MOV         R6, R0 
    /*00009e34*/ BL          0x0000000000009E34          @ H264E_AllocRcnRefPicInfoBUF [R_ARM_CALL: .text+0x9aa8] 
    /*00009e38*/ SUBS        R5, R0, #0 
    /*00009e3c*/ MOVWNE      R3, #1048                   @ 0x418 
    /*00009e40*/ BNE         H264E_InitRcnRefBUF_x9e78
    /*00009e44*/ ADD         R3, R6, #12288              @ 0x3000 
    /*00009e48*/ LDR         R3, [R3, #1364]             @ 0x554 
    /*00009e4c*/ CMP         R3, #1 
    /*00009e50*/ BEQ         H264E_InitRcnRefBUF_x9ea0
    H264E_InitRcnRefBUF_x9e54:
    /*00009e54*/ MOV         R1, R4 
    /*00009e58*/ MOV         R0, R6 
    /*00009e5c*/ BL          0x0000000000009E5C          @ H264E_AllocRcnRefPicBUF [R_ARM_CALL: .text+0x9c64] 
    /*00009e60*/ SUBS        R5, R0, #0 
    /*00009e64*/ BNE         H264E_InitRcnRefBUF_x9e74
    /*00009e68*/ MOV         R0, R5 
    /*00009e6c*/ ADD         SP, SP, #12 
    /*00009e70*/ POP         {R4, R5, R6, R7, PC} 
    H264E_InitRcnRefBUF_x9e74:
    /*00009e74*/ MOVW        R3, #1064                   @ 0x428 
    H264E_InitRcnRefBUF_x9e78:
    /*00009e78*/ STR         R3, [SP] 
    /*00009e7c*/ MOV         R1, #10 
    /*00009e80*/ LDR         R3, [PC, #40]               @ 0x0000000000009eb0 
    /*00009e84*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1998] 
    /*00009e88*/ MOV         R0, #3 
    /*00009e8c*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1998] 
    /*00009e90*/ BL          0x0000000000009E90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009e94*/ MOV         R0, R5 
    /*00009e98*/ ADD         SP, SP, #12 
    /*00009e9c*/ POP         {R4, R5, R6, R7, PC} 
    H264E_InitRcnRefBUF_x9ea0:
    /*00009ea0*/ BL          0x0000000000009EA0          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*00009ea4*/ CMP         R0, #1 
    /*00009ea8*/ MOVEQ       R4, R7 
    /*00009eac*/ B           H264E_InitRcnRefBUF_x9e54
    /*00009eb0*/ STRDEQ      R0, [R0], -IP 
FUNC_END H264E_InitRcnRefBUF


FUNC_BEGIN H264E_SetRefParam
    /*00009eb4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00009eb8*/ SUB         SP, SP, #28 
    /*00009ebc*/ MOV         R6, R1 
    /*00009ec0*/ MOV         R7, R2 
    /*00009ec4*/ MOV         R5, R0 
    /*00009ec8*/ BL          0x0000000000009EC8          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*00009ecc*/ SUBS        R4, R0, #0 
    /*00009ed0*/ BEQ         H264E_SetRefParam_x9ee0
    H264E_SetRefParam_x9ed4:
    /*00009ed4*/ MOV         R0, R4 
    /*00009ed8*/ ADD         SP, SP, #28 
    /*00009edc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_SetRefParam_x9ee0:
    /*00009ee0*/ MOV         R0, R5 
    /*00009ee4*/ BL          0x0000000000009EE4          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*00009ee8*/ SUBS        R4, R0, #0 
    /*00009eec*/ BNE         H264E_SetRefParam_x9ed4
    /*00009ef0*/ MOV         R0, R6 
    /*00009ef4*/ BL          0x0000000000009EF4          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00009ef8*/ SUBS        R4, R0, #0 
    /*00009efc*/ BNE         H264E_SetRefParam_x9ed4
    /*00009f00*/ MOV         R0, R7 
    /*00009f04*/ BL          0x0000000000009F04          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*00009f08*/ SUBS        R4, R0, #0 
    /*00009f0c*/ BNE         H264E_SetRefParam_x9ed4
    /*00009f10*/ LSL         R5, R5, #2 
    /*00009f14*/ MOVW        R8, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00009f18*/ MOVT        R8, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00009f1c*/ ADD         R3, R8, R5 
    /*00009f20*/ LDR         R9, [R3, #64]               @ 0x40 
    /*00009f24*/ ADD         SL, R9, #12288              @ 0x3000 
    /*00009f28*/ LDR         R0, [R9, #968]              @ 0x3c8 
    /*00009f2c*/ CMP         R0, #3 
    /*00009f30*/ BNE         H264E_SetRefParam_x9f40
    /*00009f34*/ LDR         R3, [SL, #2084]             @ 0x824 
    /*00009f38*/ CMP         R3, #0 
    /*00009f3c*/ BEQ         H264E_SetRefParam_xa094
    H264E_SetRefParam_x9f40:
    /*00009f40*/ MOV         R1, R7 
    /*00009f44*/ MOV         R0, R6 
    /*00009f48*/ BL          0x0000000000009F48          @ H264eGetNumRefFrames [R_ARM_CALL: .text+0x1e30] 
    /*00009f4c*/ ADD         FP, R9, #8192               @ 0x2000 
    /*00009f50*/ LDR         R3, [FP, #2852]             @ 0xb24 
    /*00009f54*/ CMP         R0, R3 
    /*00009f58*/ MOV         R7, R0 
    /*00009f5c*/ BLE         H264E_SetRefParam_x9f8c
    /*00009f60*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00009f64*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00009f68*/ LDR         R3, [SL, #1940]             @ 0x794 
    /*00009f6c*/ LDR         R2, [R2] 
    /*00009f70*/ CMP         R2, #2 
    /*00009f74*/ BEQ         H264E_SetRefParam_xa04c
    H264E_SetRefParam_x9f78:
    /*00009f78*/ STR         R7, [FP, #2852]             @ 0xb24 
    /*00009f7c*/ LDR         R2, [SL, #1364]             @ 0x554 
    /*00009f80*/ STR         R7, [SL, #1940]             @ 0x794 
    /*00009f84*/ CMP         R2, #1 
    /*00009f88*/ BEQ         H264E_SetRefParam_xa004
    H264E_SetRefParam_x9f8c:
    /*00009f8c*/ ADD         R7, R9, #9792               @ 0x2640 
    /*00009f90*/ ADD         R1, SP, #20 
    /*00009f94*/ ADD         R7, R7, #40                 @ 0x28 
    /*00009f98*/ MOV         R0, R7 
    /*00009f9c*/ BL          0x0000000000009F9C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009fa0*/ ADD         R0, R9, #9856               @ 0x2680 
    /*00009fa4*/ MOV         R2, #12 
    /*00009fa8*/ ADD         R0, R0, #48                 @ 0x30 
    /*00009fac*/ MOV         R1, R6 
    /*00009fb0*/ BL          0x0000000000009FB0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009fb4*/ MOV         R3, #0 
    /*00009fb8*/ STR         R3, [SL, #2196]             @ 0x894 
    /*00009fbc*/ LDR         R2, [FP, #2160]             @ 0x870 
    /*00009fc0*/ CMP         R2, #1 
    /*00009fc4*/ BEQ         H264E_SetRefParam_x9fe8
    H264E_SetRefParam_x9fc8:
    /*00009fc8*/ ADD         R5, R8, R5 
    /*00009fcc*/ ADD         R1, SP, #20 
    /*00009fd0*/ MOV         R0, R7 
    /*00009fd4*/ LDR         R3, [R5, #140]              @ 0x8c 
    /*00009fd8*/ ADD         R3, R3, #1 
    /*00009fdc*/ STR         R3, [R5, #140]              @ 0x8c 
    /*00009fe0*/ BL          0x0000000000009FE0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009fe4*/ B           H264E_SetRefParam_x9ed4
    H264E_SetRefParam_x9fe8:
    /*00009fe8*/ STR         R3, [FP, #2160]             @ 0x870 
    /*00009fec*/ MOVW        R2, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a48] 
    /*00009ff0*/ MOV         R1, #10 
    /*00009ff4*/ MOVT        R2, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a48] 
    /*00009ff8*/ MOV         R0, #4 
    /*00009ffc*/ BL          0x0000000000009FFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a000*/ B           H264E_SetRefParam_x9fc8
    H264E_SetRefParam_xa004:
    /*0000a004*/ STR         R3, [SP, #12] 
    /*0000a008*/ BL          0x000000000000A008          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*0000a00c*/ LDR         R3, [SP, #12] 
    /*0000a010*/ CMP         R0, #1 
    /*0000a014*/ BNE         H264E_SetRefParam_x9f8c
    /*0000a018*/ MOV         R2, R3 
    /*0000a01c*/ MOV         R1, R7 
    /*0000a020*/ MOV         R0, R9 
    /*0000a024*/ BL          0x000000000000A024          @ H264E_GetRcnRefShareBuff [R_ARM_CALL: .text+0x91b8] 
    /*0000a028*/ LDR         R3, [SP, #12] 
    /*0000a02c*/ ADD         R1, R9, #1104               @ 0x450 
    /*0000a030*/ ADD         R0, R9, #13632              @ 0x3540 
    /*0000a034*/ STR         R7, [SL, #1940]             @ 0x794 
    /*0000a038*/ ADD         R1, R1, #12 
    /*0000a03c*/ MOV         R2, R3 
    /*0000a040*/ ADD         R0, R0, #24 
    /*0000a044*/ BL          0x000000000000A044          @ H264E_InitRcnRefShareBuffParam [R_ARM_CALL: .text+0x9558] 
    /*0000a048*/ B           H264E_SetRefParam_x9f8c
    H264E_SetRefParam_xa04c:
    /*0000a04c*/ MOV         R1, R0 
    /*0000a050*/ MOV         R0, R9 
    /*0000a054*/ STR         R3, [SP, #12] 
    /*0000a058*/ BL          0x000000000000A058          @ H264E_InitRcnRefBUF [R_ARM_CALL: .text+0x9e1c] 
    /*0000a05c*/ LDR         R3, [SP, #12] 
    /*0000a060*/ CMP         R0, #0 
    /*0000a064*/ BEQ         H264E_SetRefParam_x9f78
    /*0000a068*/ MOVW        R3, #4716                   @ 0x126c 
    /*0000a06c*/ MOVW        R2, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a14] 
    /*0000a070*/ STR         R3, [SP] 
    /*0000a074*/ MOVT        R2, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a14] 
    /*0000a078*/ LDR         R3, [PC, #60]               @ 0x000000000000a0bc 
    /*0000a07c*/ MOV         R1, #10 
    /*0000a080*/ MOV         R0, #3 
    /*0000a084*/ MOVW        R4, #32777                  @ 0x8009 
    /*0000a088*/ BL          0x000000000000A088          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a08c*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000a090*/ B           H264E_SetRefParam_x9ed4
    H264E_SetRefParam_xa094:
    /*0000a094*/ MOVW        R3, #4698                   @ 0x125a 
    /*0000a098*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x19d0] 
    /*0000a09c*/ STR         R3, [SP] 
    /*0000a0a0*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x19d0] 
    /*0000a0a4*/ LDR         R3, [PC, #16]               @ 0x000000000000a0bc 
    /*0000a0a8*/ MOV         R1, #10 
    /*0000a0ac*/ MOVW        R4, #32777                  @ 0x8009 
    /*0000a0b0*/ BL          0x000000000000A0B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a0b4*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000a0b8*/ B           H264E_SetRefParam_x9ed4
    /*0000a0bc*/ ANDEQ       R0, R0, R0, LSL R5 
FUNC_END H264E_SetRefParam


FUNC_BEGIN H264E_ChangeGopModeAttr
    /*0000a0c0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000a0c4*/ SUB         SP, SP, #28 
    /*0000a0c8*/ MOV         R3, #0 
    /*0000a0cc*/ MOV         R6, R1 
    /*0000a0d0*/ MOV         R5, R0 
    /*0000a0d4*/ STR         R3, [SP, #16] 
    /*0000a0d8*/ STR         R3, [SP, #12] 
    /*0000a0dc*/ STR         R3, [SP, #20] 
    /*0000a0e0*/ BL          0x000000000000A0E0          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000a0e4*/ SUBS        R4, R0, #0 
    /*0000a0e8*/ BEQ         H264E_ChangeGopModeAttr_xa0f8
    H264E_ChangeGopModeAttr_xa0ec:
    /*0000a0ec*/ MOV         R0, R4 
    /*0000a0f0*/ ADD         SP, SP, #28 
    /*0000a0f4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_ChangeGopModeAttr_xa0f8:
    /*0000a0f8*/ MOV         R0, R5 
    /*0000a0fc*/ BL          0x000000000000A0FC          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000a100*/ SUBS        R4, R0, #0 
    /*0000a104*/ BNE         H264E_ChangeGopModeAttr_xa0ec
    /*0000a108*/ MOV         R0, R6 
    /*0000a10c*/ BL          0x000000000000A10C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000a110*/ SUBS        R4, R0, #0 
    /*0000a114*/ BNE         H264E_ChangeGopModeAttr_xa0ec
    /*0000a118*/ LDR         R2, [R6] 
    /*0000a11c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000a120*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000a124*/ MOV         R1, R6 
    /*0000a128*/ ADD         R5, R3, R5, LSL #2 
    /*0000a12c*/ SUB         R2, R2, #4 
    /*0000a130*/ CMP         R2, #1 
    /*0000a134*/ ADD         R0, SP, #12 
    /*0000a138*/ LDR         R8, [R5, #64]               @ 0x40 
    /*0000a13c*/ LDRLS       R2, [R6, #4] 
    /*0000a140*/ MOVHI       R3, #1 
    /*0000a144*/ ADD         R7, R8, #12288              @ 0x3000 
    /*0000a148*/ MOVLS       R3, #1 
    /*0000a14c*/ STRHI       R3, [SP, #20] 
    /*0000a150*/ ADD         R9, R8, #8192               @ 0x2000 
    /*0000a154*/ STRHI       R3, [SP, #12] 
    /*0000a158*/ STRLS       R3, [SP, #20] 
    /*0000a15c*/ STRLS       R3, [SP, #12] 
    /*0000a160*/ STRHI       R4, [SP, #16] 
    /*0000a164*/ STRLS       R2, [SP, #16] 
    /*0000a168*/ LDR         R6, [R7, #1940]             @ 0x794 
    /*0000a16c*/ BL          0x000000000000A16C          @ H264eGetNumRefFrames [R_ARM_CALL: .text+0x1e30] 
    /*0000a170*/ LDR         R3, [R9, #2852]             @ 0xb24 
    /*0000a174*/ CMP         R0, R3 
    /*0000a178*/ MOV         R5, R0 
    /*0000a17c*/ BLE         H264E_ChangeGopModeAttr_xa0ec
    /*0000a180*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000a184*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000a188*/ LDR         R3, [R3] 
    /*0000a18c*/ CMP         R3, #2 
    /*0000a190*/ BEQ         H264E_ChangeGopModeAttr_xa1e4
    H264E_ChangeGopModeAttr_xa194:
    /*0000a194*/ STR         R5, [R9, #2852]             @ 0xb24 
    /*0000a198*/ LDR         R3, [R7, #1364]             @ 0x554 
    /*0000a19c*/ STR         R5, [R7, #1940]             @ 0x794 
    /*0000a1a0*/ CMP         R3, #1 
    /*0000a1a4*/ BNE         H264E_ChangeGopModeAttr_xa0ec
    /*0000a1a8*/ BL          0x000000000000A1A8          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*0000a1ac*/ CMP         R0, #1 
    /*0000a1b0*/ BNE         H264E_ChangeGopModeAttr_xa0ec
    /*0000a1b4*/ MOV         R2, R6 
    /*0000a1b8*/ MOV         R1, R5 
    /*0000a1bc*/ MOV         R0, R8 
    /*0000a1c0*/ BL          0x000000000000A1C0          @ H264E_GetRcnRefShareBuff [R_ARM_CALL: .text+0x91b8] 
    /*0000a1c4*/ ADD         R1, R8, #1104               @ 0x450 
    /*0000a1c8*/ ADD         R0, R8, #13632              @ 0x3540 
    /*0000a1cc*/ STR         R5, [R7, #1940]             @ 0x794 
    /*0000a1d0*/ MOV         R2, R6 
    /*0000a1d4*/ ADD         R1, R1, #12 
    /*0000a1d8*/ ADD         R0, R0, #24 
    /*0000a1dc*/ BL          0x000000000000A1DC          @ H264E_InitRcnRefShareBuffParam [R_ARM_CALL: .text+0x9558] 
    /*0000a1e0*/ B           H264E_ChangeGopModeAttr_xa0ec
    H264E_ChangeGopModeAttr_xa1e4:
    /*0000a1e4*/ MOV         R1, R0 
    /*0000a1e8*/ MOV         R0, R8 
    /*0000a1ec*/ BL          0x000000000000A1EC          @ H264E_InitRcnRefBUF [R_ARM_CALL: .text+0x9e1c] 
    /*0000a1f0*/ CMP         R0, #0 
    /*0000a1f4*/ BEQ         H264E_ChangeGopModeAttr_xa194
    /*0000a1f8*/ MOVW        R3, #5496                   @ 0x1578 
    /*0000a1fc*/ MOVW        R2, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a14] 
    /*0000a200*/ STR         R3, [SP] 
    /*0000a204*/ MOVT        R2, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a14] 
    /*0000a208*/ LDR         R3, [PC, #20]               @ 0x000000000000a224 
    /*0000a20c*/ MOV         R1, #10 
    /*0000a210*/ MOV         R0, #3 
    /*0000a214*/ MOVW        R4, #32777                  @ 0x8009 
    /*0000a218*/ BL          0x000000000000A218          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a21c*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000a220*/ B           H264E_ChangeGopModeAttr_xa0ec
    /*0000a224*/ ANDEQ       R0, R0, R4, LSR #10 
FUNC_END H264E_ChangeGopModeAttr


FUNC_BEGIN H264E_CreateChn
    /*0000a228*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000a22c*/ SUB         SP, SP, #172                @ 0xac 
    /*0000a230*/ MOV         R3, #0 
    /*0000a234*/ MOV         R5, R1 
    /*0000a238*/ MOV         R6, R0 
    /*0000a23c*/ STR         R3, [SP, #72]               @ 0x48 
    /*0000a240*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000a244*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0000a248*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000a24c*/ STR         R3, [SP, #80]               @ 0x50 
    /*0000a250*/ STR         R3, [SP, #84]               @ 0x54 
    /*0000a254*/ STR         R3, [SP, #88]               @ 0x58 
    /*0000a258*/ STR         R3, [SP, #92]               @ 0x5c 
    /*0000a25c*/ BL          0x000000000000A25C          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000a260*/ SUBS        R4, R0, #0 
    /*0000a264*/ BEQ         H264E_CreateChn_xa274
    H264E_CreateChn_xa268:
    /*0000a268*/ MOV         R0, R4 
    /*0000a26c*/ ADD         SP, SP, #172                @ 0xac 
    /*0000a270*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_CreateChn_xa274:
    /*0000a274*/ MOV         R0, R5 
    /*0000a278*/ BL          0x000000000000A278          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000a27c*/ SUBS        R4, R0, #0 
    /*0000a280*/ BNE         H264E_CreateChn_xa268
    /*0000a284*/ LDR         R8, [R5, #20] 
    /*0000a288*/ LDM         R5, {R9, SL} 
    /*0000a28c*/ MOV         R0, R8 
    /*0000a290*/ BL          0x000000000000A290          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000a294*/ SUBS        R4, R0, #0 
    /*0000a298*/ BNE         H264E_CreateChn_xa268
    /*0000a29c*/ MOV         R0, R9 
    /*0000a2a0*/ BL          0x000000000000A2A0          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000a2a4*/ SUBS        R4, R0, #0 
    /*0000a2a8*/ BNE         H264E_CreateChn_xa268
    /*0000a2ac*/ MOV         R0, SL 
    /*0000a2b0*/ BL          0x000000000000A2B0          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000a2b4*/ SUBS        R4, R0, #0 
    /*0000a2b8*/ BNE         H264E_CreateChn_xa268
    /*0000a2bc*/ LSL         R2, R6, #2 
    /*0000a2c0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000a2c4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000a2c8*/ STR         R3, [SP, #12] 
    /*0000a2cc*/ ADD         R3, R3, R2 
    /*0000a2d0*/ STR         R2, [SP, #20] 
    /*0000a2d4*/ LDR         R3, [R3, #64]               @ 0x40 
    /*0000a2d8*/ CMP         R3, #0 
    /*0000a2dc*/ BNE         H264E_CreateChn_xaa24
    /*0000a2e0*/ LDR         R3, [R5, #8] 
    /*0000a2e4*/ MOV         R0, R8 
    /*0000a2e8*/ LDR         R1, [SL] 
    /*0000a2ec*/ STR         R3, [SP, #24] 
    /*0000a2f0*/ LDR         R3, [R5, #12] 
    /*0000a2f4*/ STR         R3, [SP, #28] 
    /*0000a2f8*/ BL          0x000000000000A2F8          @ H264eCheckChnAttr [R_ARM_CALL: .text+0xf28] 
    /*0000a2fc*/ CMP         R0, #0 
    /*0000a300*/ STRNE       R6, [SP, #4] 
    /*0000a304*/ MOVWNE      R3, #1169                   @ 0x491 
    /*0000a308*/ BNE         H264E_CreateChn_xaa98
    /*0000a30c*/ MOV         R1, R8 
    /*0000a310*/ MOV         R0, SL 
    /*0000a314*/ BL          0x000000000000A314          @ H264eCheckChnGopAttr [R_ARM_CALL: .text+0xbc4] 
    /*0000a318*/ CMP         R0, #0 
    /*0000a31c*/ BNE         H264E_CreateChn_xaa90
    /*0000a320*/ MOV         R0, #2 
    /*0000a324*/ BL          0x000000000000A324          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a328*/ ADD         R1, SP, #48                 @ 0x30 
    /*0000a32c*/ LDR         R3, [R0, #16] 
    /*0000a330*/ LDR         R0, [R8, #4] 
    /*0000a334*/ BLX         R3 
    /*0000a338*/ BL          0x000000000000A338          @ H264E_DRV_TopIpixBufNeed [R_ARM_CALL: .text+0x128f0] 
    /*0000a33c*/ SUBS        R4, R0, #0 
    /*0000a340*/ LDR         R0, [R8, #4] 
    /*0000a344*/ LDRNE       R3, [SP, #48]               @ 0x30 
    /*0000a348*/ MOVNE       R4, #6 
    /*0000a34c*/ MULNE       R4, R4, R3 
    /*0000a350*/ BL          0x000000000000A350          @ H264E_DRV_GetNbiSize [R_ARM_CALL: .text+0x15a10] 
    /*0000a354*/ MOV         R3, #8 
    /*0000a358*/ STR         R6, [SP, #76]               @ 0x4c 
    /*0000a35c*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000a360*/ MOV         R3, #0 
    /*0000a364*/ STR         R3, [SP, #72]               @ 0x48 
    /*0000a368*/ ADD         R4, R4, R0 
    /*0000a36c*/ MOV         R0, #2 
    /*0000a370*/ ADD         R3, R4, #4096               @ 0x1000 
    /*0000a374*/ STR         R3, [SP, #8] 
    /*0000a378*/ BL          0x000000000000A378          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a37c*/ ADD         R1, SP, #52                 @ 0x34 
    /*0000a380*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0000a384*/ ADD         R0, SP, #68                 @ 0x44 
    /*0000a388*/ BLX         R3 
    /*0000a38c*/ CMP         R0, #0 
    /*0000a390*/ BNE         H264E_CreateChn_xab58
    /*0000a394*/ MOV         R3, R6 
    /*0000a398*/ MOV         R1, #16 
    /*0000a39c*/ MOVW        R2, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1af8] 
    /*0000a3a0*/ ADD         R0, SP, #80                 @ 0x50 
    /*0000a3a4*/ MOVT        R2, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1af8] 
    /*0000a3a8*/ BL          0x000000000000A3A8          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*0000a3ac*/ LDR         R3, [SP, #8] 
    /*0000a3b0*/ LDR         R0, [SP, #52]               @ 0x34 
    /*0000a3b4*/ ADD         R1, SP, #80                 @ 0x50 
    /*0000a3b8*/ ADD         R2, SP, #56                 @ 0x38 
    /*0000a3bc*/ STR         R3, [SP] 
    /*0000a3c0*/ ADD         R3, SP, #44                 @ 0x2c 
    /*0000a3c4*/ BL          0x000000000000A3C4          @ CMPI_MmzMallocCached [R_ARM_CALL: +0x0] 
    /*0000a3c8*/ SUBS        R4, R0, #0 
    /*0000a3cc*/ BNE         H264E_CreateChn_xab2c
    /*0000a3d0*/ MOVW        R0, #14928                  @ 0x3a50 
    /*0000a3d4*/ BL          0x000000000000A3D4          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*0000a3d8*/ SUBS        R7, R0, #0 
    /*0000a3dc*/ BEQ         H264E_CreateChn_xab88
    /*0000a3e0*/ ADD         FP, R7, #12288              @ 0x3000 
    /*0000a3e4*/ MOVW        R2, #14928                  @ 0x3a50 
    /*0000a3e8*/ MOV         R1, R4 
    /*0000a3ec*/ BL          0x000000000000A3EC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000a3f0*/ STR         R4, [FP, #1364]             @ 0x554 
    /*0000a3f4*/ BL          0x000000000000A3F4          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*0000a3f8*/ MVN         R1, #0 
    /*0000a3fc*/ CMP         R0, #1 
    /*0000a400*/ ADD         R0, R7, #1088               @ 0x440 
    /*0000a404*/ ADD         R0, R0, #8 
    /*0000a408*/ LDREQ       R3, [R8, #32] 
    /*0000a40c*/ MOV         R2, R0 
    /*0000a410*/ STREQ       R3, [FP, #1364]             @ 0x554 
    /*0000a414*/ ADD         R3, R7, #1072               @ 0x430 
    /*0000a418*/ ADD         R3, R3, #4 
    H264E_CreateChn_xa41c:
    /*0000a41c*/ STR         R1, [R3], #4 
    /*0000a420*/ CMP         R3, R0 
    /*0000a424*/ STR         R1, [R2], #4 
    /*0000a428*/ BNE         H264E_CreateChn_xa41c
    /*0000a42c*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*0000a430*/ MOV         R0, R7 
    /*0000a434*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0000a438*/ ADD         IP, R7, #1056               @ 0x420 
    /*0000a43c*/ STR         R1, [R0, #1024]!            @ 0x400 
    /*0000a440*/ STRD        R2, [R0, #-8] 
    /*0000a444*/ STR         R0, [SP, #16] 
    /*0000a448*/ LDR         R0, [SP, #8] 
    /*0000a44c*/ STR         R0, [R7, #1028]             @ 0x404 
    /*0000a450*/ ADD         R0, R1, #4096               @ 0x1000 
    /*0000a454*/ STRD        R2, [IP, #-8] 
    /*0000a458*/ ADDS        R2, R2, #4096               @ 0x1000 
    /*0000a45c*/ STR         R1, [R7, #1056]             @ 0x420 
    /*0000a460*/ ADC         R3, R3, #0 
    /*0000a464*/ STR         R0, [SP, #44]               @ 0x2c 
    /*0000a468*/ STRD        R2, [SP, #56]               @ 0x38 
    /*0000a46c*/ BL          0x000000000000A46C          @ H264E_DRV_TopIpixBufNeed [R_ARM_CALL: .text+0x128f0] 
    /*0000a470*/ CMP         R0, #0 
    /*0000a474*/ BEQ         H264E_CreateChn_xa9dc
    /*0000a478*/ LDRD        R0, [SP, #56]               @ 0x38 
    /*0000a47c*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0000a480*/ AND         LR, R0, #63                 @ 0x3f 
    /*0000a484*/ LDR         R4, [SP, #44]               @ 0x2c 
    /*0000a488*/ RSB         LR, LR, #64                 @ 0x40 
    /*0000a48c*/ ADDS        R0, R0, LR 
    /*0000a490*/ LSL         R3, R2, #2 
    /*0000a494*/ LSL         IP, R2, #1 
    /*0000a498*/ ADC         R1, R1, #0 
    /*0000a49c*/ STR         R0, [R7, #1032]             @ 0x408 
    /*0000a4a0*/ ADDS        R0, R0, R3 
    /*0000a4a4*/ ADD         R3, R3, IP 
    /*0000a4a8*/ ADC         R1, R1, #0 
    /*0000a4ac*/ ADD         LR, R3, LR 
    /*0000a4b0*/ STR         R2, [R7, #1040]             @ 0x410 
    /*0000a4b4*/ ADDS        R2, R0, IP 
    /*0000a4b8*/ STR         R0, [R7, #1036]             @ 0x40c 
    /*0000a4bc*/ ADC         R3, R1, #0 
    /*0000a4c0*/ ADD         R1, R4, LR 
    /*0000a4c4*/ STRD        R2, [SP, #56]               @ 0x38 
    /*0000a4c8*/ STR         R1, [SP, #44]               @ 0x2c 
    H264E_CreateChn_xa4cc:
    /*0000a4cc*/ ADD         IP, R7, #1072               @ 0x430 
    /*0000a4d0*/ STR         R2, [R7, #1044]             @ 0x414 
    /*0000a4d4*/ MOV         R0, #0 
    /*0000a4d8*/ MOV         R1, #0 
    /*0000a4dc*/ MOV         R3, #0 
    /*0000a4e0*/ STRD        R0, [IP, #-8] 
    /*0000a4e4*/ MOV         R2, #96                     @ 0x60 
    /*0000a4e8*/ STR         R3, [R7, #1072]             @ 0x430 
    /*0000a4ec*/ STRD        R0, [R9, #8] 
    /*0000a4f0*/ STRD        R0, [R9] 
    /*0000a4f4*/ MOV         R0, R7 
    /*0000a4f8*/ STR         R3, [R9, #16] 
    /*0000a4fc*/ STR         R2, [R9, #20] 
    /*0000a500*/ STR         R3, [FP, #2400]             @ 0x960 
    /*0000a504*/ STR         R6, [FP, #1948]             @ 0x79c 
    /*0000a508*/ LDR         R2, [R8, #12] 
    /*0000a50c*/ LDR         R1, [R5, #16] 
    /*0000a510*/ BL          0x000000000000A510          @ H264E_AllocStreamBuf [R_ARM_CALL: .text+0x95f8] 
    /*0000a514*/ SUBS        R4, R0, #0 
    /*0000a518*/ BNE         H264E_CreateChn_xa9fc
    /*0000a51c*/ LDR         R0, [FP, #2400]             @ 0x960 
    /*0000a520*/ CMP         R0, #0 
    /*0000a524*/ BEQ         H264E_CreateChn_xa554
    /*0000a528*/ LDR         R3, [R7, #1060]             @ 0x424 
    /*0000a52c*/ LDR         R3, [R3, #176]              @ 0xb0 
    /*0000a530*/ STR         R4, [R9, #12] 
    /*0000a534*/ STR         R3, [R9, #8] 
    /*0000a538*/ LDR         R3, [R7, #1060]             @ 0x424 
    /*0000a53c*/ LDRD        R2, [R3] 
    /*0000a540*/ STRD        R2, [R9] 
    /*0000a544*/ LDR         R3, [R7, #1060]             @ 0x424 
    /*0000a548*/ LDR         R3, [R3, #8] 
    /*0000a54c*/ STR         R3, [R9, #16] 
    /*0000a550*/ LDR         R0, [FP, #2400]             @ 0x960 
    H264E_CreateChn_xa554:
    /*0000a554*/ MOV         IP, #0 
    /*0000a558*/ ADD         R3, R7, #1232               @ 0x4d0 
    /*0000a55c*/ STR         R0, [R9, #24] 
    /*0000a560*/ MOV         R1, IP 
    /*0000a564*/ MOV         LR, IP 
    /*0000a568*/ STR         IP, [R7, #1208]             @ 0x4b8 
    /*0000a56c*/ STR         IP, [R7, #1212]             @ 0x4bc 
    /*0000a570*/ ADD         R2, R7, #1296               @ 0x510 
    /*0000a574*/ STR         IP, [R7, #1216]             @ 0x4c0 
    /*0000a578*/ ADD         R3, R3, #8 
    /*0000a57c*/ STR         IP, [R7, #1228]             @ 0x4cc 
    /*0000a580*/ ADD         R2, R2, #8 
    /*0000a584*/ STR         IP, [R7, #1232]             @ 0x4d0 
    /*0000a588*/ ADD         R0, R7, #1264               @ 0x4f0 
    /*0000a58c*/ STR         IP, [R7, #1236]             @ 0x4d4 
    /*0000a590*/ MOV         IP, #4 
    /*0000a594*/ CMP         R1, IP 
    /*0000a598*/ ADD         R9, R7, #1280               @ 0x500 
    /*0000a59c*/ ADD         R0, R0, #8 
    /*0000a5a0*/ ADD         R9, R9, #8 
    /*0000a5a4*/ STR         R0, [R7, #1200]             @ 0x4b0 
    /*0000a5a8*/ STR         R9, [R7, #1220]             @ 0x4c4 
    /*0000a5ac*/ STR         IP, [R7, #1204]             @ 0x4b4 
    /*0000a5b0*/ STR         IP, [R7, #1224]             @ 0x4c8 
    /*0000a5b4*/ STM         R3, {R2, LR} 
    /*0000a5b8*/ ADD         R2, R2, #1600               @ 0x640 
    /*0000a5bc*/ BGE         H264E_CreateChn_xa5dc
    H264E_CreateChn_xa5c0:
    /*0000a5c0*/ SUBS        R4, R4, #1 
    /*0000a5c4*/ ADD         R1, R1, #1 
    /*0000a5c8*/ ADDMI       R4, R4, IP 
    /*0000a5cc*/ LDR         IP, [R7, #1200]             @ 0x4b0 
    /*0000a5d0*/ STR         R3, [IP, R4, LSL #2] 
    /*0000a5d4*/ STR         R4, [R7, #1208]             @ 0x4b8 
    /*0000a5d8*/ STR         R1, [R7, #1216]             @ 0x4c0 
    H264E_CreateChn_xa5dc:
    /*0000a5dc*/ ADD         R3, R3, #8 
    /*0000a5e0*/ CMP         R0, R3 
    /*0000a5e4*/ BEQ         H264E_CreateChn_xa608
    /*0000a5e8*/ LDR         R1, [R7, #1216]             @ 0x4c0 
    /*0000a5ec*/ LDR         IP, [R7, #1204]             @ 0x4b4 
    /*0000a5f0*/ LDR         R4, [R7, #1208]             @ 0x4b8 
    /*0000a5f4*/ CMP         R1, IP 
    /*0000a5f8*/ STM         R3, {R2, LR} 
    /*0000a5fc*/ ADD         R2, R2, #1600               @ 0x640 
    /*0000a600*/ BGE         H264E_CreateChn_xa5dc
    /*0000a604*/ B           H264E_CreateChn_xa5c0
    H264E_CreateChn_xa608:
    /*0000a608*/ LDR         R3, [R8, #24] 
    /*0000a60c*/ ADD         R2, R7, #1104               @ 0x450 
    /*0000a610*/ ADD         R2, R2, #12 
    /*0000a614*/ STR         R2, [SP, #32] 
    /*0000a618*/ ADD         R4, R7, #9856               @ 0x2680 
    /*0000a61c*/ ADD         R9, R7, #8192               @ 0x2000 
    /*0000a620*/ STR         R3, [R7, #1116]             @ 0x45c 
    /*0000a624*/ MOV         R1, R2 
    /*0000a628*/ LDR         R3, [R8, #28] 
    /*0000a62c*/ ADD         R4, R4, #48                 @ 0x30 
    /*0000a630*/ STR         R3, [R7, #1120]             @ 0x460 
    /*0000a634*/ LDR         R2, [FP, #1364]             @ 0x554 
    /*0000a638*/ LDR         R0, [SL] 
    /*0000a63c*/ BL          0x000000000000A63C          @ H264eGetFrameSize [R_ARM_CALL: .text+0xd48] 
    /*0000a640*/ LDMIB       R8, {R2, R3} 
    /*0000a644*/ ADD         R1, SP, #96                 @ 0x60 
    /*0000a648*/ STR         R2, [SP, #96]               @ 0x60 
    /*0000a64c*/ STR         R3, [SP, #100]              @ 0x64 
    /*0000a650*/ LDR         R2, [FP, #1364]             @ 0x554 
    /*0000a654*/ LDR         R0, [SL] 
    /*0000a658*/ BL          0x000000000000A658          @ H264eGetFrameSize [R_ARM_CALL: .text+0xd48] 
    /*0000a65c*/ LDR         R2, [SP, #136]              @ 0x88 
    /*0000a660*/ LDR         R3, [SP, #140]              @ 0x8c 
    /*0000a664*/ MOV         R0, R4 
    /*0000a668*/ STR         R2, [R7, #1188]             @ 0x4a4 
    /*0000a66c*/ MOV         R2, SL 
    /*0000a670*/ STR         R3, [R7, #1192]             @ 0x4a8 
    /*0000a674*/ LDR         R1, [R8, #16] 
    /*0000a678*/ SUB         R1, R1, #3 
    /*0000a67c*/ CLZ         R1, R1 
    /*0000a680*/ LSR         R1, R1, #5 
    /*0000a684*/ BL          0x000000000000A684          @ H264eInitRefParam [R_ARM_CALL: .text+0x9058] 
    /*0000a688*/ LDR         R1, [R9, #1720]             @ 0x6b8 
    /*0000a68c*/ LDR         R2, [R9, #1712]             @ 0x6b0 
    /*0000a690*/ MOV         R0, R4 
    /*0000a694*/ LDR         R3, [R9, #1716]             @ 0x6b4 
    /*0000a698*/ STR         R1, [R9, #1652]             @ 0x674 
    /*0000a69c*/ MOV         R1, SL 
    /*0000a6a0*/ ADD         R3, R3, #1 
    /*0000a6a4*/ STR         R2, [R9, #1644]             @ 0x66c 
    /*0000a6a8*/ STR         R3, [R9, #1648]             @ 0x670 
    /*0000a6ac*/ BL          0x000000000000A6AC          @ H264eGetNumRefFrames [R_ARM_CALL: .text+0x1e30] 
    /*0000a6b0*/ MOV         R1, R0 
    /*0000a6b4*/ STR         R0, [SP, #8] 
    /*0000a6b8*/ MOV         R0, R7 
    /*0000a6bc*/ BL          0x000000000000A6BC          @ H264E_InitRcnRefBUF [R_ARM_CALL: .text+0x9e1c] 
    /*0000a6c0*/ SUBS        R4, R0, #0 
    /*0000a6c4*/ BNE         H264E_CreateChn_xa9f0
    /*0000a6c8*/ LDR         R3, [FP, #1364]             @ 0x554 
    /*0000a6cc*/ CMP         R3, #1 
    /*0000a6d0*/ BEQ         H264E_CreateChn_xaaf0
    H264E_CreateChn_xa6d4:
    /*0000a6d4*/ ADD         R2, R7, #13248              @ 0x33c0 
    /*0000a6d8*/ MOV         LR, #0 
    /*0000a6dc*/ ADD         R3, R7, #11072              @ 0x2b40 
    /*0000a6e0*/ ADD         IP, R7, #11072              @ 0x2b40 
    /*0000a6e4*/ MOV         R1, R2 
    /*0000a6e8*/ MOV         R2, LR 
    /*0000a6ec*/ ADD         R1, R1, #32 
    /*0000a6f0*/ STR         R1, [SP, #32] 
    /*0000a6f4*/ ADD         IP, IP, #24 
    /*0000a6f8*/ MOV         R1, LR 
    /*0000a6fc*/ STR         LR, [R9, #2892]             @ 0xb4c 
    /*0000a700*/ ADD         R3, R3, #48                 @ 0x30 
    /*0000a704*/ STR         LR, [R9, #2896]             @ 0xb50 
    /*0000a708*/ MOV         R0, R2 
    /*0000a70c*/ STR         LR, [R9, #2900]             @ 0xb54 
    /*0000a710*/ MVN         LR, #0 
    /*0000a714*/ STR         IP, [R9, #2884]             @ 0xb44 
    /*0000a718*/ MOV         IP, #5 
    /*0000a71c*/ STR         R4, [SP, #36]               @ 0x24 
    /*0000a720*/ STR         IP, [R9, #2888]             @ 0xb48 
    /*0000a724*/ LDR         R4, [SP, #32] 
    /*0000a728*/ B           H264E_CreateChn_xa738
    H264E_CreateChn_xa72c:
    /*0000a72c*/ LDR         R0, [R9, #2892]             @ 0xb4c 
    /*0000a730*/ LDR         R2, [R9, #2900]             @ 0xb54 
    /*0000a734*/ LDR         IP, [R9, #2888]             @ 0xb48 
    H264E_CreateChn_xa738:
    /*0000a738*/ CMP         R2, IP 
    /*0000a73c*/ STR         R1, [R3, #356]              @ 0x164 
    /*0000a740*/ STR         R1, [R3, #364]              @ 0x16c 
    /*0000a744*/ ADD         R2, R2, #1 
    /*0000a748*/ STR         R1, [R3, #360]              @ 0x168 
    /*0000a74c*/ STR         R1, [R3, #372]              @ 0x174 
    /*0000a750*/ STR         LR, [R3, #328]              @ 0x148 
    /*0000a754*/ BGE         H264E_CreateChn_xa770
    /*0000a758*/ SUBS        R0, R0, #1 
    /*0000a75c*/ ADDMI       R0, R0, IP 
    /*0000a760*/ LDR         IP, [R9, #2884]             @ 0xb44 
    /*0000a764*/ STR         R3, [IP, R0, LSL #2] 
    /*0000a768*/ STR         R0, [R9, #2892]             @ 0xb4c 
    /*0000a76c*/ STR         R2, [R9, #2900]             @ 0xb54 
    H264E_CreateChn_xa770:
    /*0000a770*/ ADD         R3, R3, #432                @ 0x1b0 
    /*0000a774*/ CMP         R4, R3 
    /*0000a778*/ BNE         H264E_CreateChn_xa72c
    /*0000a77c*/ ADD         R0, R7, #9792               @ 0x2640 
    /*0000a780*/ LDR         R4, [SP, #36]               @ 0x24 
    /*0000a784*/ ADD         R0, R0, #40                 @ 0x28 
    /*0000a788*/ BL          0x000000000000A788          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*0000a78c*/ MOV         R2, #60                     @ 0x3c 
    /*0000a790*/ MOV         R1, R8 
    /*0000a794*/ ADD         R0, R7, #952                @ 0x3b8 
    /*0000a798*/ BL          0x000000000000A798          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000a79c*/ ADD         R0, R7, #14336              @ 0x3800 
    /*0000a7a0*/ MOV         R2, #16 
    /*0000a7a4*/ MOV         R1, SL 
    /*0000a7a8*/ ADD         R0, R0, #36                 @ 0x24 
    /*0000a7ac*/ BL          0x000000000000A7AC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000a7b0*/ LDR         R1, [R5, #16] 
    /*0000a7b4*/ MOV         R0, R7 
    /*0000a7b8*/ BL          0x000000000000A7B8          @ H264E_DRV_TileCal [R_ARM_CALL: .text+0x12968] 
    /*0000a7bc*/ LDR         R1, [R5, #16] 
    /*0000a7c0*/ LDR         R2, [SP, #28] 
    /*0000a7c4*/ MOV         R0, R7 
    /*0000a7c8*/ LDR         R3, [SP, #24] 
    /*0000a7cc*/ STR         R1, [FP, #2396]             @ 0x95c 
    /*0000a7d0*/ MOV         R1, R6 
    /*0000a7d4*/ STR         R2, [FP, #2100]             @ 0x834 
    /*0000a7d8*/ MOV         R2, #0 
    /*0000a7dc*/ STR         R2, [FP, #2408]             @ 0x968 
    /*0000a7e0*/ MOV         R2, R8 
    /*0000a7e4*/ BL          0x000000000000A7E4          @ H264eInitCtx [R_ARM_CALL: .text+0x4e3c] 
    /*0000a7e8*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*0000a7ec*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*0000a7f0*/ MOV         R2, #0 
    /*0000a7f4*/ MOV         R1, #1 
    /*0000a7f8*/ STR         R2, [FP, #2004]             @ 0x7d4 
    /*0000a7fc*/ LDR         R0, [R3] 
    /*0000a800*/ MOV         R3, #8 
    /*0000a804*/ STR         R2, [FP, #2020]             @ 0x7e4 
    /*0000a808*/ MVN         R2, #0 
    /*0000a80c*/ STR         R1, [FP, #2104]             @ 0x838 
    /*0000a810*/ STR         R1, [FP, #2568]             @ 0xa08 
    /*0000a814*/ STR         R2, [FP, #2012]             @ 0x7dc 
    /*0000a818*/ STR         R2, [FP, #2016]             @ 0x7e0 
    /*0000a81c*/ STR         R3, [FP, #2576]             @ 0xa10 
    /*0000a820*/ STR         R3, [FP, #2572]             @ 0xa0c 
    /*0000a824*/ LDRB        R3, [R0, #40]               @ 0x28 
    /*0000a828*/ CMP         R3, #2 
    /*0000a82c*/ BHI         H264E_CreateChn_xaa54
    /*0000a830*/ MOV         R3, #0 
    H264E_CreateChn_xa834:
    /*0000a834*/ ADD         R0, R7, #9536               @ 0x2540 
    /*0000a838*/ MOV         R5, #0 
    /*0000a83c*/ STR         R3, [FP, #2636]             @ 0xa4c 
    /*0000a840*/ ADD         R0, R0, #36                 @ 0x24 
    /*0000a844*/ MOV         R3, #200                    @ 0xc8 
    /*0000a848*/ ADD         SL, R7, #9728               @ 0x2600 
    /*0000a84c*/ STR         R3, [FP, #1976]             @ 0x7b8 
    /*0000a850*/ MOV         R3, #1 
    /*0000a854*/ STR         R5, [R9, #1372]             @ 0x55c 
    /*0000a858*/ ADD         SL, SL, #32 
    /*0000a85c*/ STR         R3, [R9, #1376]             @ 0x560 
    /*0000a860*/ BL          0x000000000000A860          @ H264eInitPred [R_ARM_CALL: .text+0x8ec4] 
    /*0000a864*/ ADD         R0, R7, #9600               @ 0x2580 
    /*0000a868*/ LDR         R1, [R8, #16] 
    /*0000a86c*/ ADD         R0, R0, #16 
    /*0000a870*/ BL          0x000000000000A870          @ H264eInitTrans [R_ARM_CALL: .text+0x8f28] 
    /*0000a874*/ LDR         R1, [R8, #16] 
    /*0000a878*/ MOV         R0, SL 
    /*0000a87c*/ BL          0x000000000000A87C          @ H264eInitEntropy [R_ARM_CALL: .text+0x8fcc] 
    /*0000a880*/ ADD         R0, R7, #9728               @ 0x2600 
    /*0000a884*/ MOV         R2, #16 
    /*0000a888*/ MOV         R1, SL 
    /*0000a88c*/ ADD         R0, R0, #48                 @ 0x30 
    /*0000a890*/ BL          0x000000000000A890          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000a894*/ MOV         R0, R7 
    /*0000a898*/ BL          0x000000000000A898          @ H264eInitPoc [R_ARM_CALL: .text+0x1b2c] 
    /*0000a89c*/ ADD         R0, R7, #9792               @ 0x2640 
    /*0000a8a0*/ STR         R5, [R9, #1600]             @ 0x640 
    /*0000a8a4*/ MOV         R3, #8 
    /*0000a8a8*/ STR         R5, [R9, #1604]             @ 0x644 
    /*0000a8ac*/ ADD         R0, R0, #12 
    /*0000a8b0*/ STR         R5, [R9, #1608]             @ 0x648 
    /*0000a8b4*/ STR         R3, [FP, #2584]             @ 0xa18 
    /*0000a8b8*/ STR         R3, [FP, #2588]             @ 0xa1c 
    /*0000a8bc*/ STR         R3, [FP, #2592]             @ 0xa20 
    /*0000a8c0*/ STR         R3, [FP, #2596]             @ 0xa24 
    /*0000a8c4*/ STR         R3, [FP, #2600]             @ 0xa28 
    /*0000a8c8*/ STR         R3, [FP, #2604]             @ 0xa2c 
    /*0000a8cc*/ STR         R3, [FP, #2608]             @ 0xa30 
    /*0000a8d0*/ STR         R3, [FP, #2612]             @ 0xa34 
    /*0000a8d4*/ STR         R3, [FP, #2620]             @ 0xa3c 
    /*0000a8d8*/ STR         R3, [FP, #2624]             @ 0xa40 
    /*0000a8dc*/ STR         R5, [FP, #2580]             @ 0xa14 
    /*0000a8e0*/ STR         R5, [FP, #2616]             @ 0xa38 
    /*0000a8e4*/ STR         R5, [FP, #2628]             @ 0xa44 
    /*0000a8e8*/ STR         R5, [FP, #2632]             @ 0xa48 
    /*0000a8ec*/ BL          0x000000000000A8EC          @ H264E_DRV_InitVuiCfg [R_ARM_CALL: .text+0x15984] 
    /*0000a8f0*/ ADD         R0, R7, #13632              @ 0x3540 
    /*0000a8f4*/ ADD         R0, R0, #4 
    /*0000a8f8*/ BL          0x000000000000A8F8          @ H264eInitIdrPicIdCfg [R_ARM_CALL: .text+0x1d54] 
    /*0000a8fc*/ LDR         R3, [SP, #8] 
    /*0000a900*/ ADD         R0, R7, #10432              @ 0x28c0 
    /*0000a904*/ ADD         R0, R0, #8 
    /*0000a908*/ STR         R3, [R9, #2852]             @ 0xb24 
    /*0000a90c*/ BL          0x000000000000A90C          @ H264eDpbInit [R_ARM_CALL: .text+0x10f60] 
    /*0000a910*/ ADD         R0, R7, #14336              @ 0x3800 
    /*0000a914*/ ADD         R0, R0, #60                 @ 0x3c 
    /*0000a918*/ LDR         R1, [FP, #2636]             @ 0xa4c 
    /*0000a91c*/ STR         R5, [FP, #2156]             @ 0x86c 
    /*0000a920*/ STR         R5, [FP, #2164]             @ 0x874 
    /*0000a924*/ STR         R5, [FP, #2172]             @ 0x87c 
    /*0000a928*/ STR         R5, [FP, #2160]             @ 0x870 
    /*0000a92c*/ STR         R5, [FP, #2168]             @ 0x878 
    /*0000a930*/ STR         R5, [FP, #2176]             @ 0x880 
    /*0000a934*/ STR         R5, [FP, #2180]             @ 0x884 
    /*0000a938*/ STR         R5, [FP, #2184]             @ 0x888 
    /*0000a93c*/ STR         R5, [FP, #2188]             @ 0x88c 
    /*0000a940*/ STR         R5, [FP, #2192]             @ 0x890 
    /*0000a944*/ BL          0x000000000000A944          @ H264E_DRV_InitLowerPower [R_ARM_CALL: .text+0x132c0] 
    /*0000a948*/ MOV         R3, #1 
    /*0000a94c*/ LDR         R0, [PC, #636]              @ 0x000000000000abd0 
    /*0000a950*/ STR         R3, [FP, #2152]             @ 0x868 
    /*0000a954*/ BL          0x000000000000A954          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a958*/ CMP         R0, R5 
    /*0000a95c*/ MOVNE       R4, #65024                  @ 0xfe00 
    /*0000a960*/ MOVTNE      R4, #65535                  @ 0xffff 
    /*0000a964*/ BEQ         H264E_CreateChn_xaac0
    H264E_CreateChn_xa968:
    /*0000a968*/ LDR         R3, [R7, #1060]             @ 0x424 
    /*0000a96c*/ CMP         R3, #0 
    /*0000a970*/ BEQ         H264E_CreateChn_xa988
    /*0000a974*/ LDR         R2, [R3, #176]              @ 0xb0 
    /*0000a978*/ CMP         R2, #0 
    /*0000a97c*/ BEQ         H264E_CreateChn_xa988
    /*0000a980*/ LDRD        R0, [R3] 
    /*0000a984*/ BL          0x000000000000A984          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    H264E_CreateChn_xa988:
    /*0000a988*/ LDR         R3, [FP, #1364]             @ 0x554 
    /*0000a98c*/ CMP         R3, #1 
    /*0000a990*/ BEQ         H264E_CreateChn_xaa74
    H264E_CreateChn_xa994:
    /*0000a994*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000a998*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000a99c*/ LDR         R3, [R3] 
    /*0000a9a0*/ CMP         R3, #2 
    /*0000a9a4*/ BEQ         H264E_CreateChn_xaa68
    H264E_CreateChn_xa9a8:
    /*0000a9a8*/ LDR         R0, [R7, #1024]             @ 0x400 
    /*0000a9ac*/ CMP         R0, #0 
    /*0000a9b0*/ BEQ         H264E_CreateChn_xa9d0
    /*0000a9b4*/ LDR         R5, [SP, #16] 
    /*0000a9b8*/ LDR         R2, [R7, #1028]             @ 0x404 
    /*0000a9bc*/ LDR         R1, [R5, #-8] 
    /*0000a9c0*/ BL          0x000000000000A9C0          @ hil_mmb_flush_dcache_byaddr [R_ARM_CALL: +0x0] 
    /*0000a9c4*/ LDR         R2, [R7, #1024]             @ 0x400 
    /*0000a9c8*/ LDRD        R0, [R5, #-8] 
    /*0000a9cc*/ BL          0x000000000000A9CC          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    H264E_CreateChn_xa9d0:
    /*0000a9d0*/ MOV         R0, R7 
    /*0000a9d4*/ BL          0x000000000000A9D4          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000a9d8*/ B           H264E_CreateChn_xa268
    H264E_CreateChn_xa9dc:
    /*0000a9dc*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*0000a9e0*/ STR         R0, [R7, #1032]             @ 0x408 
    /*0000a9e4*/ STR         R0, [R7, #1036]             @ 0x40c 
    /*0000a9e8*/ STR         R0, [R7, #1040]             @ 0x410 
    /*0000a9ec*/ B           H264E_CreateChn_xa4cc
    H264E_CreateChn_xa9f0:
    /*0000a9f0*/ MOVW        R4, #32780                  @ 0x800c 
    /*0000a9f4*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000a9f8*/ B           H264E_CreateChn_xa968
    H264E_CreateChn_xa9fc:
    /*0000a9fc*/ MOVW        R3, #1309                   @ 0x51d 
    /*0000aa00*/ STR         R6, [SP, #4] 
    /*0000aa04*/ STR         R3, [SP] 
    /*0000aa08*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b84] 
    /*0000aa0c*/ LDR         R3, [PC, #448]              @ 0x000000000000abd4 
    /*0000aa10*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b84] 
    /*0000aa14*/ MOV         R1, #10 
    /*0000aa18*/ MOV         R0, #3 
    /*0000aa1c*/ BL          0x000000000000AA1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000aa20*/ B           H264E_CreateChn_xa968
    H264E_CreateChn_xaa24:
    /*0000aa24*/ MOVW        R3, #1161                   @ 0x489 
    /*0000aa28*/ STR         R6, [SP, #4] 
    /*0000aa2c*/ STR         R3, [SP] 
    /*0000aa30*/ MOVW        R2, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a88] 
    /*0000aa34*/ LDR         R3, [PC, #408]              @ 0x000000000000abd4 
    /*0000aa38*/ MOVT        R2, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a88] 
    /*0000aa3c*/ MOV         R1, #10 
    /*0000aa40*/ MOV         R0, #3 
    /*0000aa44*/ MOVW        R4, #32772                  @ 0x8004 
    /*0000aa48*/ BL          0x000000000000AA48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000aa4c*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000aa50*/ B           H264E_CreateChn_xa268
    H264E_CreateChn_xaa54:
    /*0000aa54*/ SUB         R3, R3, #5 
    /*0000aa58*/ CMP         R3, #1 
    /*0000aa5c*/ MOVLS       R3, #0 
    /*0000aa60*/ MOVHI       R3, #1 
    /*0000aa64*/ B           H264E_CreateChn_xa834
    H264E_CreateChn_xaa68:
    /*0000aa68*/ MOV         R0, R7 
    /*0000aa6c*/ BL          0x0000000000007EA0 
    /*0000aa70*/ B           H264E_CreateChn_xa9a8
    H264E_CreateChn_xaa74:
    /*0000aa74*/ BL          0x000000000000AA74          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*0000aa78*/ CMP         R0, #1 
    /*0000aa7c*/ BNE         H264E_CreateChn_xa994
    /*0000aa80*/ LDR         R1, [FP, #1940]             @ 0x794 
    /*0000aa84*/ MOV         R0, R7 
    /*0000aa88*/ BL          0x000000000000AA88          @ H264E_PutRcnRefShareBuff [R_ARM_CALL: .text+0x92c4] 
    /*0000aa8c*/ B           H264E_CreateChn_xa994
    H264E_CreateChn_xaa90:
    /*0000aa90*/ MOVW        R3, #1177                   @ 0x499 
    /*0000aa94*/ STR         R6, [SP, #4] 
    H264E_CreateChn_xaa98:
    /*0000aa98*/ STR         R3, [SP] 
    /*0000aa9c*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ac4] 
    /*0000aaa0*/ LDR         R3, [PC, #300]              @ 0x000000000000abd4 
    /*0000aaa4*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ac4] 
    /*0000aaa8*/ MOV         R1, #10 
    /*0000aaac*/ MOV         R0, #3 
    /*0000aab0*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000aab4*/ BL          0x000000000000AAB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000aab8*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000aabc*/ B           H264E_CreateChn_xa268
    H264E_CreateChn_xaac0:
    /*0000aac0*/ LDR         R5, [SP, #12] 
    /*0000aac4*/ MOV         R0, R6 
    /*0000aac8*/ LDR         R2, [SP, #20] 
    /*0000aacc*/ ADD         R3, R5, R2 
    /*0000aad0*/ STR         R7, [R3, #64]               @ 0x40 
    /*0000aad4*/ BL          0x000000000000AAD4          @ H264E_DRV_InitRegConfigParam [R_ARM_CALL: .text+0x14a38] 
    /*0000aad8*/ LDR         R0, [PC, #240]              @ 0x000000000000abd0 
    /*0000aadc*/ BL          0x000000000000AADC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000aae0*/ LDR         R3, [R5, R6, LSL #2] 
    /*0000aae4*/ ADD         R3, R3, #1 
    /*0000aae8*/ STR         R3, [R5, R6, LSL #2] 
    /*0000aaec*/ B           H264E_CreateChn_xa268
    H264E_CreateChn_xaaf0:
    /*0000aaf0*/ BL          0x000000000000AAF0          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*0000aaf4*/ CMP         R0, #1 
    /*0000aaf8*/ BNE         H264E_CreateChn_xa6d4
    /*0000aafc*/ MOV         R2, R4 
    /*0000ab00*/ LDR         R1, [SP, #8] 
    /*0000ab04*/ MOV         R0, R7 
    /*0000ab08*/ BL          0x000000000000AB08          @ H264E_GetRcnRefShareBuff [R_ARM_CALL: .text+0x91b8] 
    /*0000ab0c*/ LDR         R3, [SP, #8] 
    /*0000ab10*/ ADD         R0, R7, #13632              @ 0x3540 
    /*0000ab14*/ LDR         R1, [SP, #32] 
    /*0000ab18*/ ADD         R0, R0, #24 
    /*0000ab1c*/ MOV         R2, R4 
    /*0000ab20*/ STR         R3, [FP, #1940]             @ 0x794 
    /*0000ab24*/ BL          0x000000000000AB24          @ H264E_InitRcnRefShareBuffParam [R_ARM_CALL: .text+0x9558] 
    /*0000ab28*/ B           H264E_CreateChn_xa6d4
    H264E_CreateChn_xab2c:
    /*0000ab2c*/ MOVW        R3, #1223                   @ 0x4c7 
    /*0000ab30*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b08] 
    /*0000ab34*/ STR         R3, [SP] 
    /*0000ab38*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b08] 
    /*0000ab3c*/ LDR         R3, [PC, #144]              @ 0x000000000000abd4 
    /*0000ab40*/ MOV         R1, #10 
    /*0000ab44*/ MOV         R0, #3 
    /*0000ab48*/ MOVW        R4, #32780                  @ 0x800c 
    /*0000ab4c*/ BL          0x000000000000AB4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ab50*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000ab54*/ B           H264E_CreateChn_xa268
    H264E_CreateChn_xab58:
    /*0000ab58*/ MOVW        R3, #1208                   @ 0x4b8 
    /*0000ab5c*/ STR         R6, [SP, #4] 
    /*0000ab60*/ STR         R3, [SP] 
    /*0000ab64*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1844] 
    /*0000ab68*/ LDR         R3, [PC, #100]              @ 0x000000000000abd4 
    /*0000ab6c*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1844] 
    /*0000ab70*/ MOV         R1, #10 
    /*0000ab74*/ MOV         R0, #3 
    /*0000ab78*/ MOVW        R4, #32784                  @ 0x8010 
    /*0000ab7c*/ BL          0x000000000000AB7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ab80*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000ab84*/ B           H264E_CreateChn_xa268
    H264E_CreateChn_xab88:
    /*0000ab88*/ MOV         R3, #1232                   @ 0x4d0 
    /*0000ab8c*/ MOV         R1, #10 
    /*0000ab90*/ STR         R3, [SP] 
    /*0000ab94*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b48] 
    /*0000ab98*/ LDR         R3, [PC, #52]               @ 0x000000000000abd4 
    /*0000ab9c*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b48] 
    /*0000aba0*/ MOV         R0, #3 
    /*0000aba4*/ MOVW        R4, #32780                  @ 0x800c 
    /*0000aba8*/ BL          0x000000000000ABA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000abac*/ LDR         R2, [SP, #8] 
    /*0000abb0*/ LDR         R1, [SP, #56]               @ 0x38 
    /*0000abb4*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000abb8*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000abbc*/ BL          0x000000000000ABBC          @ hil_mmb_flush_dcache_byaddr [R_ARM_CALL: +0x0] 
    /*0000abc0*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000abc4*/ LDRD        R0, [SP, #56]               @ 0x38 
    /*0000abc8*/ BL          0x000000000000ABC8          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*0000abcc*/ B           H264E_CreateChn_xa268
    /*0000abd0*/ ANDEQ       R0, R0, IP, ASR #1 
    /*0000abd4*/ ANDEQ       R0, R0, IP, LSR R5 
FUNC_END H264E_CreateChn


FUNC_BEGIN H264E_FreeRcnRefBUF
    /*0000abd8*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000abdc*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000abe0*/ LDR         R3, [R3] 
    /*0000abe4*/ CMP         R3, #2 
    /*0000abe8*/ BXNE        LR 
    /*0000abec*/ B           0x0000000000007EA0 
FUNC_END H264E_FreeRcnRefBUF


FUNC_BEGIN H264E_ParamInit
    /*0000abf0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000abf4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000abf8*/ ADD         R3, R3, R0, LSL #2 
    /*0000abfc*/ MOV         R1, R0 
    /*0000ac00*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000ac04*/ MOV         R8, R0 
    /*0000ac08*/ LDR         R5, [R3, #64]               @ 0x40 
    /*0000ac0c*/ ADD         R7, R5, #8192               @ 0x2000 
    /*0000ac10*/ ADD         R2, R5, #952                @ 0x3b8 
    /*0000ac14*/ LDR         R6, [R5, #968]              @ 0x3c8 
    /*0000ac18*/ MOV         R0, R5 
    /*0000ac1c*/ LDR         R3, [R7, #2172]             @ 0x87c 
    /*0000ac20*/ ADD         R4, R5, #12288              @ 0x3000 
    /*0000ac24*/ BL          0x000000000000AC24          @ H264eInitCtx [R_ARM_CALL: .text+0x4e3c] 
    /*0000ac28*/ ADD         R3, R5, #9536               @ 0x2540 
    /*0000ac2c*/ ADD         R3, R3, #28 
    /*0000ac30*/ SUB         R6, R6, #3 
    /*0000ac34*/ CLZ         R6, R6 
    /*0000ac38*/ CMP         R3, #0 
    /*0000ac3c*/ MOV         R2, #200                    @ 0xc8 
    /*0000ac40*/ MVN         R3, #0 
    /*0000ac44*/ STR         R2, [R4, #1976]             @ 0x7b8 
    /*0000ac48*/ LSR         R6, R6, #5 
    /*0000ac4c*/ MOV         R2, #0 
    /*0000ac50*/ STR         R3, [R4, #2012]             @ 0x7dc 
    /*0000ac54*/ STR         R2, [R4, #2004]             @ 0x7d4 
    /*0000ac58*/ STR         R2, [R4, #2020]             @ 0x7e4 
    /*0000ac5c*/ STR         R3, [R4, #2016]             @ 0x7e0 
    /*0000ac60*/ BEQ         H264E_ParamInit_xad5c
    H264E_ParamInit_xac64:
    /*0000ac64*/ ADD         R0, R5, #9536               @ 0x2540 
    /*0000ac68*/ MOV         R3, #0 
    /*0000ac6c*/ ADD         R0, R0, #36                 @ 0x24 
    /*0000ac70*/ STR         R3, [R7, #1372]             @ 0x55c 
    /*0000ac74*/ MOV         R3, #1 
    /*0000ac78*/ STR         R3, [R7, #1376]             @ 0x560 
    /*0000ac7c*/ BL          0x000000000000AC7C          @ H264eInitPred [R_ARM_CALL: .text+0x8ec4] 
    /*0000ac80*/ ADD         R0, R5, #9600               @ 0x2580 
    /*0000ac84*/ ADD         R0, R0, #16 
    /*0000ac88*/ LDR         R1, [R5, #968]              @ 0x3c8 
    /*0000ac8c*/ BL          0x000000000000AC8C          @ H264eInitTrans [R_ARM_CALL: .text+0x8f28] 
    /*0000ac90*/ ADD         R0, R5, #9728               @ 0x2600 
    /*0000ac94*/ ADD         R0, R0, #32 
    /*0000ac98*/ LDR         R1, [R5, #968]              @ 0x3c8 
    /*0000ac9c*/ BL          0x000000000000AC9C          @ H264eInitEntropy [R_ARM_CALL: .text+0x8fcc] 
    /*0000aca0*/ MOV         R0, R5 
    /*0000aca4*/ BL          0x000000000000ACA4          @ H264eInitPoc [R_ARM_CALL: .text+0x1b2c] 
    /*0000aca8*/ CMN         R5, #9792                   @ 0x2640 
    /*0000acac*/ BEQ         H264E_ParamInit_xad3c
    H264E_ParamInit_xacb0:
    /*0000acb0*/ ADD         R2, R5, #14336              @ 0x3800 
    /*0000acb4*/ ADD         R0, R5, #9856               @ 0x2680 
    /*0000acb8*/ MOV         R1, R6 
    /*0000acbc*/ ADD         R2, R2, #36                 @ 0x24 
    /*0000acc0*/ MOV         R6, #0 
    /*0000acc4*/ ADD         R0, R0, #48                 @ 0x30 
    /*0000acc8*/ STR         R6, [R7, #1600]             @ 0x640 
    /*0000accc*/ STR         R6, [R7, #1604]             @ 0x644 
    /*0000acd0*/ STR         R6, [R7, #1608]             @ 0x648 
    /*0000acd4*/ BL          0x000000000000ACD4          @ H264eInitRefParam [R_ARM_CALL: .text+0x9058] 
    /*0000acd8*/ ADD         R0, R5, #9792               @ 0x2640 
    /*0000acdc*/ MOV         R3, #8 
    /*0000ace0*/ STR         R6, [R4, #2580]             @ 0xa14 
    /*0000ace4*/ STR         R3, [R4, #2584]             @ 0xa18 
    /*0000ace8*/ ADD         R0, R0, #12 
    /*0000acec*/ STR         R3, [R4, #2588]             @ 0xa1c 
    /*0000acf0*/ STR         R3, [R4, #2592]             @ 0xa20 
    /*0000acf4*/ STR         R3, [R4, #2596]             @ 0xa24 
    /*0000acf8*/ STR         R3, [R4, #2600]             @ 0xa28 
    /*0000acfc*/ STR         R3, [R4, #2604]             @ 0xa2c 
    /*0000ad00*/ STR         R3, [R4, #2608]             @ 0xa30 
    /*0000ad04*/ STR         R3, [R4, #2612]             @ 0xa34 
    /*0000ad08*/ STR         R3, [R4, #2620]             @ 0xa3c 
    /*0000ad0c*/ STR         R3, [R4, #2624]             @ 0xa40 
    /*0000ad10*/ STR         R6, [R4, #2616]             @ 0xa38 
    /*0000ad14*/ STR         R6, [R4, #2628]             @ 0xa44 
    /*0000ad18*/ STR         R6, [R4, #2632]             @ 0xa48 
    /*0000ad1c*/ BL          0x000000000000AD1C          @ H264E_DRV_InitVuiCfg [R_ARM_CALL: .text+0x15984] 
    /*0000ad20*/ ADD         R0, R5, #13632              @ 0x3540 
    /*0000ad24*/ ADD         R0, R0, #4 
    /*0000ad28*/ BL          0x000000000000AD28          @ H264eInitIdrPicIdCfg [R_ARM_CALL: .text+0x1d54] 
    /*0000ad2c*/ MOV         R0, R8 
    /*0000ad30*/ BL          0x000000000000AD30          @ H264E_DRV_InitRegConfigParam [R_ARM_CALL: .text+0x14a38] 
    /*0000ad34*/ MOV         R0, R6 
    /*0000ad38*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264E_ParamInit_xad3c:
    /*0000ad3c*/ MOVW        R3, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x171c] 
    /*0000ad40*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*0000ad44*/ MOVT        R3, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x171c] 
    /*0000ad48*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*0000ad4c*/ MOV         R2, #600                    @ 0x258 
    /*0000ad50*/ LDR         R1, [PC, #36]               @ 0x000000000000ad7c 
    /*0000ad54*/ BL          0x000000000000AD54          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000ad58*/ B           H264E_ParamInit_xacb0
    H264E_ParamInit_xad5c:
    /*0000ad5c*/ MOVW        R3, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1684] 
    /*0000ad60*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*0000ad64*/ MOVT        R3, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1684] 
    /*0000ad68*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*0000ad6c*/ MOV         R2, #344                    @ 0x158 
    /*0000ad70*/ LDR         R1, [PC, #8]                @ 0x000000000000ad80 
    /*0000ad74*/ BL          0x000000000000AD74          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000ad78*/ B           H264E_ParamInit_xac64
    /*0000ad7c*/ ANDEQ       R0, R0, R8, ASR R4 
    /*0000ad80*/ STRDEQ      R0, [R0], -IP 
FUNC_END H264E_ParamInit


FUNC_BEGIN H264E_SetChnAttr
    /*0000ad84*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ad88*/ SUB         SP, SP, #52                 @ 0x34 
    /*0000ad8c*/ MOV         R6, R1 
    /*0000ad90*/ MOV         R7, R2 
    /*0000ad94*/ MOV         R8, R3 
    /*0000ad98*/ MOV         R5, R0 
    /*0000ad9c*/ BL          0x000000000000AD9C          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000ada0*/ SUBS        R4, R0, #0 
    /*0000ada4*/ BEQ         H264E_SetChnAttr_xadb4
    H264E_SetChnAttr_xada8:
    /*0000ada8*/ MOV         R0, R4 
    /*0000adac*/ ADD         SP, SP, #52                 @ 0x34 
    /*0000adb0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_SetChnAttr_xadb4:
    /*0000adb4*/ MOV         R0, R5 
    /*0000adb8*/ BL          0x000000000000ADB8          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000adbc*/ SUBS        R4, R0, #0 
    /*0000adc0*/ BNE         H264E_SetChnAttr_xada8
    /*0000adc4*/ MOV         R0, R6 
    /*0000adc8*/ BL          0x000000000000ADC8          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000adcc*/ SUBS        R4, R0, #0 
    /*0000add0*/ BNE         H264E_SetChnAttr_xada8
    /*0000add4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000add8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000addc*/ ADD         R3, R3, R5, LSL #2 
    /*0000ade0*/ LDR         R2, [R6, #24] 
    /*0000ade4*/ LDR         R9, [R3, #64]               @ 0x40 
    /*0000ade8*/ LDR         R3, [R9, #976]              @ 0x3d0 
    /*0000adec*/ CMP         R3, R2 
    /*0000adf0*/ MOVNE       R3, #1 
    /*0000adf4*/ STRNE       R3, [SP, #32] 
    /*0000adf8*/ BEQ         H264E_SetChnAttr_xaf94
    H264E_SetChnAttr_xadfc:
    /*0000adfc*/ ADD         SL, R9, #12288              @ 0x3000 
    /*0000ae00*/ ADD         FP, R9, #9792               @ 0x2640 
    /*0000ae04*/ ADD         FP, FP, #40                 @ 0x28 
    /*0000ae08*/ ADD         R1, SP, #44                 @ 0x2c 
    /*0000ae0c*/ LDR         R2, [SL, #2084]             @ 0x824 
    /*0000ae10*/ ADD         R3, R9, #8192               @ 0x2000 
    /*0000ae14*/ MOV         R0, FP 
    /*0000ae18*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000ae1c*/ STR         R2, [SP, #24] 
    /*0000ae20*/ LDR         R2, [R7] 
    /*0000ae24*/ STR         R2, [SP, #28] 
    /*0000ae28*/ BL          0x000000000000AE28          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000ae2c*/ ADD         R3, R9, #8192               @ 0x2000 
    /*0000ae30*/ LDR         R3, [R3, #1372]             @ 0x55c 
    /*0000ae34*/ CMP         R3, #1 
    /*0000ae38*/ BEQ         H264E_SetChnAttr_xaf44
    H264E_SetChnAttr_xae3c:
    /*0000ae3c*/ LDR         R3, [SL, #2100]             @ 0x834 
    /*0000ae40*/ CMP         R8, R3 
    /*0000ae44*/ BEQ         H264E_SetChnAttr_xae6c
    /*0000ae48*/ ADD         R1, R9, #8192               @ 0x2000 
    /*0000ae4c*/ MOV         R3, #0 
    /*0000ae50*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c48] 
    /*0000ae54*/ MOV         R0, #4 
    /*0000ae58*/ STR         R3, [R1, #2160]             @ 0x870 
    /*0000ae5c*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c48] 
    /*0000ae60*/ STR         R8, [SL, #2100]             @ 0x834 
    /*0000ae64*/ MOV         R1, #10 
    /*0000ae68*/ BL          0x000000000000AE68          @ HI_LOG [R_ARM_CALL: +0x0] 
    H264E_SetChnAttr_xae6c:
    /*0000ae6c*/ ADD         R0, R9, #14336              @ 0x3800 
    /*0000ae70*/ MOV         R2, #16 
    /*0000ae74*/ MOV         R1, R7 
    /*0000ae78*/ ADD         R0, R0, #36                 @ 0x24 
    /*0000ae7c*/ BL          0x000000000000AE7C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000ae80*/ MOV         R2, #60                     @ 0x3c 
    /*0000ae84*/ MOV         R1, R6 
    /*0000ae88*/ ADD         R0, R9, #952                @ 0x3b8 
    /*0000ae8c*/ BL          0x000000000000AE8C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000ae90*/ LDR         R3, [SP, #32] 
    /*0000ae94*/ CMP         R3, #1 
    /*0000ae98*/ BEQ         H264E_SetChnAttr_xaed4
    /*0000ae9c*/ LDR         R3, [SP, #24] 
    /*0000aea0*/ LDR         R2, [SP, #28] 
    /*0000aea4*/ CMP         R3, R2 
    /*0000aea8*/ BNE         H264E_SetChnAttr_xaf20
    /*0000aeac*/ LDR         R3, [SP, #88]               @ 0x58 
    /*0000aeb0*/ CMP         R3, #1 
    /*0000aeb4*/ BEQ         H264E_SetChnAttr_xaf2c
    H264E_SetChnAttr_xaeb8:
    /*0000aeb8*/ LDR         R3, [SL, #2084]             @ 0x824 
    /*0000aebc*/ CMP         R3, #4 
    /*0000aec0*/ BEQ         H264E_SetChnAttr_xafac
    H264E_SetChnAttr_xaec4:
    /*0000aec4*/ ADD         R1, SP, #44                 @ 0x2c 
    /*0000aec8*/ MOV         R0, FP 
    /*0000aecc*/ BL          0x000000000000AECC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000aed0*/ B           H264E_SetChnAttr_xada8
    H264E_SetChnAttr_xaed4:
    /*0000aed4*/ MOV         R0, R5 
    /*0000aed8*/ ADD         R8, R9, #1104               @ 0x450 
    /*0000aedc*/ BL          0x000000000000AEDC          @ H264E_ParamInit [R_ARM_CALL: .text+0xabf0] 
    /*0000aee0*/ LDR         R3, [R6, #24] 
    /*0000aee4*/ ADD         R8, R8, #12 
    /*0000aee8*/ STR         R3, [R9, #1116]             @ 0x45c 
    /*0000aeec*/ MOV         R1, R8 
    /*0000aef0*/ LDR         R3, [R6, #28] 
    /*0000aef4*/ STR         R3, [R9, #1120]             @ 0x460 
    /*0000aef8*/ LDR         R0, [R7] 
    /*0000aefc*/ LDR         R2, [SL, #1364]             @ 0x554 
    /*0000af00*/ BL          0x000000000000AF00          @ H264eGetFrameSize [R_ARM_CALL: .text+0xd48] 
    /*0000af04*/ LDR         R3, [SL, #1364]             @ 0x554 
    /*0000af08*/ CMP         R3, #1 
    /*0000af0c*/ BEQ         H264E_SetChnAttr_xafe0
    H264E_SetChnAttr_xaf10:
    /*0000af10*/ LDR         R3, [SP, #24] 
    /*0000af14*/ LDR         R2, [SP, #28] 
    /*0000af18*/ CMP         R3, R2 
    /*0000af1c*/ BEQ         H264E_SetChnAttr_xaf2c
    H264E_SetChnAttr_xaf20:
    /*0000af20*/ ADD         R2, R9, #8192               @ 0x2000 
    /*0000af24*/ MOV         R3, #0 
    /*0000af28*/ STR         R3, [R2, #2240]             @ 0x8c0 
    H264E_SetChnAttr_xaf2c:
    /*0000af2c*/ LDR         R3, [SL, #1336]             @ 0x538 
    /*0000af30*/ CMP         R3, #1 
    /*0000af34*/ BNE         H264E_SetChnAttr_xaeb8
    /*0000af38*/ MOV         R0, R9 
    /*0000af3c*/ BL          0x000000000000AF3C          @ H264eTwoPassVB_UserSub [R_ARM_CALL: .text+0x4db8] 
    /*0000af40*/ B           H264E_SetChnAttr_xaeb8
    H264E_SetChnAttr_xaf44:
    /*0000af44*/ LDR         R1, [R6, #28] 
    /*0000af48*/ ADD         R2, R9, #8192               @ 0x2000 
    /*0000af4c*/ ADD         R0, R1, #15 
    /*0000af50*/ LDR         R2, [R2, #1376]             @ 0x560 
    /*0000af54*/ CMP         R2, R0, LSR #4 
    /*0000af58*/ BLS         H264E_SetChnAttr_xae3c
    /*0000af5c*/ LDR         R0, [R6, #24] 
    /*0000af60*/ MOVW        IP, #1902                   @ 0x76e 
    /*0000af64*/ STR         R2, [SP, #16] 
    /*0000af68*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1bc4] 
    /*0000af6c*/ STR         R3, [SP, #12] 
    /*0000af70*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1bc4] 
    /*0000af74*/ STR         R1, [SP, #8] 
    /*0000af78*/ MOV         R1, #10 
    /*0000af7c*/ STR         R0, [SP, #4] 
    /*0000af80*/ MOV         R0, #3 
    /*0000af84*/ STR         IP, [SP] 
    /*0000af88*/ LDR         R3, [PC, #212]              @ 0x000000000000b064 
    /*0000af8c*/ BL          0x000000000000AF8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000af90*/ B           H264E_SetChnAttr_xae3c
    H264E_SetChnAttr_xaf94:
    /*0000af94*/ LDR         R2, [R9, #980]              @ 0x3d4 
    /*0000af98*/ LDR         R3, [R6, #28] 
    /*0000af9c*/ SUBS        R3, R2, R3 
    /*0000afa0*/ MOVNE       R3, #1 
    /*0000afa4*/ STR         R3, [SP, #32] 
    /*0000afa8*/ B           H264E_SetChnAttr_xadfc
    H264E_SetChnAttr_xafac:
    /*0000afac*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000afb0*/ LDR         R3, [R3, #1720]             @ 0x6b8 
    /*0000afb4*/ CMP         R3, #1 
    /*0000afb8*/ BNE         H264E_SetChnAttr_xaec4
    /*0000afbc*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0000afc0*/ LDR         R3, [R2, #1716]             @ 0x6b4 
    /*0000afc4*/ CMP         R3, #0 
    /*0000afc8*/ BNE         H264E_SetChnAttr_xaec4
    /*0000afcc*/ LDR         R3, [R2, #1712]             @ 0x6b0 
    /*0000afd0*/ CMP         R3, #1 
    /*0000afd4*/ LDREQ       R3, [SL, #2088]             @ 0x828 
    /*0000afd8*/ STREQ       R3, [R2, #1716]             @ 0x6b4 
    /*0000afdc*/ B           H264E_SetChnAttr_xaec4
    H264E_SetChnAttr_xafe0:
    /*0000afe0*/ BL          0x000000000000AFE0          @ H264E_DRV_IsSupportRefRcnShareBuf [R_ARM_CALL: .text+0x128e8] 
    /*0000afe4*/ CMP         R0, #1 
    /*0000afe8*/ BNE         H264E_SetChnAttr_xaf10
    /*0000afec*/ LDR         R1, [SL, #1940]             @ 0x794 
    /*0000aff0*/ MOV         R0, R9 
    /*0000aff4*/ BL          0x000000000000AFF4          @ H264E_PutRcnRefShareBuff [R_ARM_CALL: .text+0x92c4] 
    /*0000aff8*/ SUBS        R6, R0, #0 
    /*0000affc*/ BNE         H264E_SetChnAttr_xb028
    /*0000b000*/ MOV         R2, R6 
    /*0000b004*/ LDR         R1, [SL, #1940]             @ 0x794 
    /*0000b008*/ MOV         R0, R9 
    /*0000b00c*/ BL          0x000000000000B00C          @ H264E_GetRcnRefShareBuff [R_ARM_CALL: .text+0x91b8] 
    /*0000b010*/ ADD         R0, R9, #13632              @ 0x3540 
    /*0000b014*/ MOV         R2, R6 
    /*0000b018*/ MOV         R1, R8 
    /*0000b01c*/ ADD         R0, R0, #24 
    /*0000b020*/ BL          0x000000000000B020          @ H264E_InitRcnRefShareBuffParam [R_ARM_CALL: .text+0x9558] 
    /*0000b024*/ B           H264E_SetChnAttr_xaf10
    H264E_SetChnAttr_xb028:
    /*0000b028*/ STR         R5, [SP, #4] 
    /*0000b02c*/ MOVW        R3, #1934                   @ 0x78e 
    /*0000b030*/ MOV         R1, #10 
    /*0000b034*/ STR         R3, [SP] 
    /*0000b038*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x178c] 
    /*0000b03c*/ LDR         R3, [PC, #32]               @ 0x000000000000b064 
    /*0000b040*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x178c] 
    /*0000b044*/ MOV         R0, #3 
    /*0000b048*/ BL          0x000000000000B048          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b04c*/ ORR         R4, R6, #-1610612736        @ 0xa0000000 
    /*0000b050*/ ADD         R1, SP, #44                 @ 0x2c 
    /*0000b054*/ MOV         R0, FP 
    /*0000b058*/ ORR         R4, R4, #688128             @ 0xa8000 
    /*0000b05c*/ BL          0x000000000000B05C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b060*/ B           H264E_SetChnAttr_xada8
    /*0000b064*/ ANDEQ       R0, R0, IP, ASR #10 
FUNC_END H264E_SetChnAttr


FUNC_BEGIN H264eUpdateIntraID
    /*0000b068*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000b06c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000b070*/ ADD         IP, R3, R0, LSL #2 
    /*0000b074*/ MOV         R2, R0 
    /*0000b078*/ PUSH        {R4, LR} 
    /*0000b07c*/ MOV         LR, #0 
    /*0000b080*/ LDR         R1, [R3, R2, LSL #2] 
    /*0000b084*/ MOV         R0, LR 
    /*0000b088*/ LDR         R4, [IP, #140]              @ 0x8c 
    /*0000b08c*/ STR         LR, [IP, #140]              @ 0x8c 
    /*0000b090*/ ADD         R1, R1, R4 
    /*0000b094*/ STR         R1, [R3, R2, LSL #2] 
    /*0000b098*/ POP         {R4, PC} 
FUNC_END H264eUpdateIntraID


FUNC_BEGIN H264eUpdatePocAndRefParam
    /*0000b09c*/ PUSH        {R4, R5, R6, LR} 
    /*0000b0a0*/ ADD         R5, R0, #4096               @ 0x1000 
    /*0000b0a4*/ MOV         R4, R0 
    /*0000b0a8*/ LDR         R2, [R5, #3628]             @ 0xe2c 
    /*0000b0ac*/ LDR         R3, [R5, #3624]             @ 0xe28 
    /*0000b0b0*/ CMP         R2, R3 
    /*0000b0b4*/ BEQ         H264eUpdatePocAndRefParam_xb0bc
    /*0000b0b8*/ BL          0x000000000000B0B8          @ H264eUpdatePoc [R_ARM_CALL: .text+0x1bbc] 
    H264eUpdatePocAndRefParam_xb0bc:
    /*0000b0bc*/ ADD         R3, R4, #8192               @ 0x2000 
    /*0000b0c0*/ MOV         R2, #0 
    /*0000b0c4*/ MOV         R0, #12 
    /*0000b0c8*/ STR         R2, [R5, #3680]             @ 0xe60 
    /*0000b0cc*/ STR         R0, [R5, #3632]             @ 0xe30 
    /*0000b0d0*/ MOV         R1, #65536                  @ 0x10000 
    /*0000b0d4*/ STR         R2, [R5, #3664]             @ 0xe50 
    /*0000b0d8*/ MOV         R0, R2 
    /*0000b0dc*/ STR         R1, [R5, #3636]             @ 0xe34 
    /*0000b0e0*/ LDR         LR, [R3, #1720]             @ 0x6b8 
    /*0000b0e4*/ LDR         IP, [R3, #1712]             @ 0x6b0 
    /*0000b0e8*/ LDR         R1, [R3, #1716]             @ 0x6b4 
    /*0000b0ec*/ STR         R2, [R3, #1660]             @ 0x67c 
    /*0000b0f0*/ ADD         R1, R1, #1 
    /*0000b0f4*/ STR         R2, [R3, #1664]             @ 0x680 
    /*0000b0f8*/ STR         R2, [R3, #1704]             @ 0x6a8 
    /*0000b0fc*/ STR         R2, [R3, #1668]             @ 0x684 
    /*0000b100*/ STR         R2, [R3, #1672]             @ 0x688 
    /*0000b104*/ STR         R2, [R3, #1656]             @ 0x678 
    /*0000b108*/ STR         R2, [R3, #1676]             @ 0x68c 
    /*0000b10c*/ STR         LR, [R3, #1652]             @ 0x674 
    /*0000b110*/ STR         IP, [R3, #1644]             @ 0x66c 
    /*0000b114*/ STR         R1, [R3, #1648]             @ 0x670 
    /*0000b118*/ POP         {R4, R5, R6, PC} 
FUNC_END H264eUpdatePocAndRefParam


FUNC_BEGIN H264eStartPicAsFrame
    /*0000b11c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000b120*/ SUB         SP, SP, #196                @ 0xc4 
    /*0000b124*/ LSL         R3, R0, #2 
    /*0000b128*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000b12c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000b130*/ STR         R2, [SP, #24] 
    /*0000b134*/ ADD         R2, R2, R3 
    /*0000b138*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000b13c*/ LDR         R3, [R1, #12] 
    /*0000b140*/ MOV         R9, R0 
    /*0000b144*/ LDR         R5, [R2, #64]               @ 0x40 
    /*0000b148*/ MOV         R4, R1 
    /*0000b14c*/ LDR         R2, [R1, #16] 
    /*0000b150*/ MOVW        LR, #14832                  @ 0x39f0 
    /*0000b154*/ LDR         R0, [R3, #380]              @ 0x17c 
    /*0000b158*/ ADD         R7, R5, #8192               @ 0x2000 
    /*0000b15c*/ MOV         IP, #0 
    /*0000b160*/ ADD         R6, R5, #12288              @ 0x3000 
    /*0000b164*/ ADD         R3, R0, #8 
    /*0000b168*/ STR         R3, [R7, #1368]             @ 0x558 
    /*0000b16c*/ LDR         R3, [R1, #12] 
    /*0000b170*/ ADD         R1, R5, #14848              @ 0x3a00 
    /*0000b174*/ STR         R2, [SP, #16] 
    /*0000b178*/ LDR         R3, [R3, #380]              @ 0x17c 
    /*0000b17c*/ ADD         R3, R3, #2784               @ 0xae0 
    /*0000b180*/ ADD         R3, R3, #12 
    /*0000b184*/ STR         R3, [R7, #1008]             @ 0x3f0 
    /*0000b188*/ LDR         R3, [R4, #12] 
    /*0000b18c*/ LDR         R3, [R3, #380]              @ 0x17c 
    /*0000b190*/ LDR         R3, [R3, #2792]             @ 0xae8 
    /*0000b194*/ STR         R3, [R7, #1004]             @ 0x3ec 
    /*0000b198*/ LDR         R3, [R4, #24] 
    /*0000b19c*/ STR         R3, [R7, #1680]             @ 0x690 
    /*0000b1a0*/ LDR         R3, [R4, #12] 
    /*0000b1a4*/ ADD         R3, R3, #352                @ 0x160 
    /*0000b1a8*/ LDRD        R2, [R3] 
    /*0000b1ac*/ STRD        R2, [R5, LR] 
    /*0000b1b0*/ MOV         R2, #6 
    /*0000b1b4*/ LDR         R3, [R4, #12] 
    /*0000b1b8*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0000b1bc*/ LDR         R3, [R3, #360]              @ 0x168 
    /*0000b1c0*/ STMDB       R1, {R3, IP} 
    /*0000b1c4*/ LDR         R3, [R4, #12] 
    /*0000b1c8*/ ADD         R3, R3, #368                @ 0x170 
    /*0000b1cc*/ LDRD        R2, [R3] 
    /*0000b1d0*/ STRD        R2, [R1] 
    /*0000b1d4*/ LDR         R3, [R4, #32] 
    /*0000b1d8*/ CMP         R3, #1 
    /*0000b1dc*/ STR         R3, [R6, #1344]             @ 0x540 
    /*0000b1e0*/ ADDEQ       R2, R5, #13248              @ 0x33c0 
    /*0000b1e4*/ LDRNE       R2, [R4, #12] 
    /*0000b1e8*/ ADDEQ       R2, R2, #40                 @ 0x28 
    /*0000b1ec*/ STR         R2, [R5, #1196]             @ 0x4ac 
    /*0000b1f0*/ LDR         R2, [R4, #44]               @ 0x2c 
    /*0000b1f4*/ LDR         R1, [R6, #2396]             @ 0x95c 
    /*0000b1f8*/ CMP         R1, R2 
    /*0000b1fc*/ STRNE       R2, [R6, #2396]             @ 0x95c 
    /*0000b200*/ MOVNE       R2, #1 
    /*0000b204*/ STRNE       R2, [R6, #2152]             @ 0x868 
    /*0000b208*/ STRNE       R2, [R6, #2568]             @ 0xa08 
    /*0000b20c*/ LDR         R2, [R4, #16] 
    /*0000b210*/ CMP         R2, #5 
    /*0000b214*/ BEQ         H264eStartPicAsFrame_xb47c
    /*0000b218*/ LDR         R3, [R6, #1988]             @ 0x7c4 
    /*0000b21c*/ CMP         R3, #5 
    /*0000b220*/ BEQ         H264eStartPicAsFrame_xb52c
    H264eStartPicAsFrame_xb224:
    /*0000b224*/ CMP         R2, #9 
    /*0000b228*/ LDRNE       R3, [R6, #1344]             @ 0x540 
    /*0000b22c*/ BEQ         H264eStartPicAsFrame_xb468
    H264eStartPicAsFrame_xb230:
    /*0000b230*/ CMP         R3, #1 
    /*0000b234*/ BEQ         H264eStartPicAsFrame_xb468
    H264eStartPicAsFrame_xb238:
    /*0000b238*/ LDR         R1, [R4, #12] 
    /*0000b23c*/ ADD         R8, R5, #9792               @ 0x2640 
    /*0000b240*/ ADD         R0, R5, #14272              @ 0x37c0 
    /*0000b244*/ ADD         R8, R8, #40                 @ 0x28 
    /*0000b248*/ ADD         R1, R1, #400                @ 0x190 
    /*0000b24c*/ MOV         R2, #40                     @ 0x28 
    /*0000b250*/ ADD         R0, R0, #56                 @ 0x38 
    /*0000b254*/ BL          0x000000000000B254          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000b258*/ MOV         R0, R8 
    /*0000b25c*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000b260*/ BL          0x000000000000B260          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b264*/ LDR         R3, [SP, #16] 
    /*0000b268*/ SUB         R3, R3, #6 
    /*0000b26c*/ BICS        R3, R3, #2 
    /*0000b270*/ BEQ         H264eStartPicAsFrame_xb280
    /*0000b274*/ LDR         R3, [R6, #2084]             @ 0x824 
    /*0000b278*/ CMP         R3, #4 
    /*0000b27c*/ BNE         H264eStartPicAsFrame_xb414
    H264eStartPicAsFrame_xb280:
    /*0000b280*/ LDR         R1, [SP, #44]               @ 0x2c 
    H264eStartPicAsFrame_xb284:
    /*0000b284*/ MOV         R3, #0 
    /*0000b288*/ STR         R3, [R6, #2032]             @ 0x7f0 
    H264eStartPicAsFrame_xb28c:
    /*0000b28c*/ LDR         R3, [R4, #16] 
    /*0000b290*/ MOV         R0, R9 
    /*0000b294*/ CMP         R3, #5 
    /*0000b298*/ MOVEQ       R3, #5 
    /*0000b29c*/ MOVNE       R3, #13 
    /*0000b2a0*/ STR         R3, [R6, #1988]             @ 0x7c4 
    /*0000b2a4*/ LDR         R2, [R4, #16] 
    /*0000b2a8*/ CMP         R2, #9 
    /*0000b2ac*/ MOVEQ       R3, #12 
    /*0000b2b0*/ STR         R3, [R6, #1988]             @ 0x7c4 
    /*0000b2b4*/ BL          0x000000000000B2B4          @ H264E_DRV_UpdateOsdRoiConfigParam [R_ARM_CALL: .text+0x134c0] 
    /*0000b2b8*/ MOV         R0, R5 
    /*0000b2bc*/ BL          0x000000000000B2BC          @ H264eGetRcnPic [R_ARM_CALL: .text+0x514c] 
    /*0000b2c0*/ SUBS        R3, R0, #0 
    /*0000b2c4*/ STR         R3, [SP, #20] 
    /*0000b2c8*/ BNE         H264eStartPicAsFrame_xb868
    /*0000b2cc*/ LDR         R3, [R6, #2084]             @ 0x824 
    /*0000b2d0*/ SUB         R3, R3, #2 
    /*0000b2d4*/ CMP         R3, #1 
    /*0000b2d8*/ BLS         H264eStartPicAsFrame_xb500
    H264eStartPicAsFrame_xb2dc:
    /*0000b2dc*/ LDR         R3, [SP, #20] 
    H264eStartPicAsFrame_xb2e0:
    /*0000b2e0*/ STR         R3, [SP, #32] 
    H264eStartPicAsFrame_xb2e4:
    /*0000b2e4*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000b2e8*/ MOV         R0, R8 
    /*0000b2ec*/ BL          0x000000000000B2EC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b2f0*/ LDR         R3, [R4, #12] 
    /*0000b2f4*/ LDR         R0, [R5, #1196]             @ 0x4ac 
    /*0000b2f8*/ ADD         R2, SP, #192                @ 0xc0 
    /*0000b2fc*/ ADD         LR, R3, #352                @ 0x160 
    /*0000b300*/ ADD         IP, R3, #368                @ 0x170 
    /*0000b304*/ LDR         R1, [R3, #344]              @ 0x158 
    /*0000b308*/ LDRD        SL, [LR] 
    /*0000b30c*/ LDR         LR, [R3, #360]              @ 0x168 
    /*0000b310*/ STR         R1, [SP, #80]               @ 0x50 
    /*0000b314*/ STRD        SL, [SP, #96]               @ 0x60 
    /*0000b318*/ LDRD        SL, [IP] 
    /*0000b31c*/ LDR         IP, [R3, #348]              @ 0x15c 
    /*0000b320*/ LDR         R3, [R7, #2160]             @ 0x870 
    /*0000b324*/ STRD        SL, [SP, #104]              @ 0x68 
    /*0000b328*/ MOV         FP, #0 
    /*0000b32c*/ STR         IP, [SP, #92]               @ 0x5c 
    /*0000b330*/ CMP         R3, FP 
    /*0000b334*/ MOVNE       R1, #0 
    /*0000b338*/ ANDEQ       R1, R1, #1 
    /*0000b33c*/ LDR         IP, [R4, #16] 
    /*0000b340*/ LDR         R3, [R6, #2580]             @ 0xa14 
    /*0000b344*/ STR         R0, [SP, #72]               @ 0x48 
    /*0000b348*/ MOV         R0, #19 
    /*0000b34c*/ STR         LR, [SP, #88]               @ 0x58 
    /*0000b350*/ STR         IP, [SP, #76]               @ 0x4c 
    /*0000b354*/ STR         FP, [R2, #-144]!            @ 0xffffff70 
    /*0000b358*/ STR         R1, [SP, #84]               @ 0x54 
    /*0000b35c*/ STR         R3, [SP, #112]              @ 0x70 
    /*0000b360*/ STR         R2, [SP, #28] 
    /*0000b364*/ BL          0x000000000000B364          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b368*/ LDR         R2, [SP, #28] 
    /*0000b36c*/ ADD         R1, SP, #72                 @ 0x48 
    /*0000b370*/ LDR         R3, [R0, #16] 
    /*0000b374*/ MOV         R0, R9 
    /*0000b378*/ BLX         R3 
    /*0000b37c*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000b380*/ MOV         R0, R8 
    /*0000b384*/ BL          0x000000000000B384          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b388*/ LDR         R1, [SP, #24] 
    /*0000b38c*/ STR         FP, [R7, #2156]             @ 0x86c 
    /*0000b390*/ STR         FP, [R7, #2228]             @ 0x8b4 
    /*0000b394*/ LDR         R2, [R6, #2396]             @ 0x95c 
    /*0000b398*/ LDR         R3, [R1, R9, LSL #2] 
    /*0000b39c*/ CMP         R2, FP 
    /*0000b3a0*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0000b3a4*/ STRNE       FP, [R5, #936]              @ 0x3a8 
    /*0000b3a8*/ ADD         R3, R3, R2 
    /*0000b3ac*/ STR         R3, [R1, R9, LSL #2] 
    /*0000b3b0*/ LDRNE       R3, [SP, #64]               @ 0x40 
    /*0000b3b4*/ MOV         R2, R1 
    /*0000b3b8*/ MOVWNE      R2, #65535                  @ 0xffff 
    /*0000b3bc*/ STRNE       R2, [R5, #944]              @ 0x3b0 
    /*0000b3c0*/ STRNE       R3, [R5, #948]              @ 0x3b4 
    /*0000b3c4*/ LDR         R3, [R7, #2160]             @ 0x870 
    /*0000b3c8*/ CMP         R3, #1 
    /*0000b3cc*/ BEQ         H264eStartPicAsFrame_xb49c
    /*0000b3d0*/ MOV         R3, #0 
    /*0000b3d4*/ STR         R3, [R5, #940]              @ 0x3ac 
    H264eStartPicAsFrame_xb3d8:
    /*0000b3d8*/ LDR         R3, [SP, #16] 
    /*0000b3dc*/ CMP         R3, #10 
    /*0000b3e0*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*0000b3e4*/ B           H264eStartPicAsFrame_xb5f8
    /*0000b3e8*/ ANDEQ       FP, R0, R4, ROR #10 
    /*0000b3ec*/ STRDEQ      FP, [R0], -R0 
    /*0000b3f0*/ STRDEQ      FP, [R0], -R8 
    /*0000b3f4*/ STRDEQ      FP, [R0], -R0 
    /*0000b3f8*/ ANDEQ       FP, R0, R8, LSL #12 
    /*0000b3fc*/ ANDEQ       FP, R0, R4, LSL R6 
    /*0000b400*/ ANDEQ       FP, R0, R0, LSR #12 
    /*0000b404*/ ANDEQ       FP, R0, IP, LSR #12 
    /*0000b408*/ ANDEQ       FP, R0, R8, LSR R6 
    /*0000b40c*/ ANDEQ       FP, R0, R4, ASR #12 
    /*0000b410*/ ANDEQ       FP, R0, R0, ASR R6 
    H264eStartPicAsFrame_xb414:
    /*0000b414*/ ADD         R1, R5, #9792               @ 0x2640 
    /*0000b418*/ MOV         R2, #68                     @ 0x44 
    /*0000b41c*/ ADD         R1, R1, #44                 @ 0x2c 
    /*0000b420*/ ADD         R0, SP, #124                @ 0x7c 
    /*0000b424*/ BL          0x000000000000B424          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000b428*/ LDR         R1, [R7, #2240]             @ 0x8c0 
    /*0000b42c*/ ADD         R2, SP, #124                @ 0x7c 
    /*0000b430*/ ADD         R3, SP, #44                 @ 0x2c 
    /*0000b434*/ MOV         R0, #11 
    /*0000b438*/ BL          0x000000000000B438          @ H264eGetRefType [R_ARM_CALL: .text+0x124a4] 
    /*0000b43c*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0000b440*/ CMP         R1, #3 
    /*0000b444*/ BLS         H264eStartPicAsFrame_xb548
    H264eStartPicAsFrame_xb448:
    /*0000b448*/ LDR         R3, [R4, #20] 
    /*0000b44c*/ CMP         R3, #3 
    /*0000b450*/ BNE         H264eStartPicAsFrame_xb284
    /*0000b454*/ STR         R3, [R4, #16] 
    /*0000b458*/ STR         R3, [SP, #16] 
    /*0000b45c*/ MOV         R3, #1 
    /*0000b460*/ STR         R3, [R6, #2032]             @ 0x7f0 
    /*0000b464*/ B           H264eStartPicAsFrame_xb28c
    H264eStartPicAsFrame_xb468:
    /*0000b468*/ LDR         R2, [R7, #1368]             @ 0x558 
    /*0000b46c*/ MOV         R3, #1 
    /*0000b470*/ STR         R3, [R2] 
    /*0000b474*/ STR         R3, [R7, #1004]             @ 0x3ec 
    /*0000b478*/ B           H264eStartPicAsFrame_xb238
    H264eStartPicAsFrame_xb47c:
    /*0000b47c*/ LDR         R2, [R6, #2104]             @ 0x838 
    /*0000b480*/ CMP         R2, #0 
    /*0000b484*/ BNE         H264eStartPicAsFrame_xb230
    /*0000b488*/ MOV         R3, #1 
    /*0000b48c*/ STR         R3, [R0, #8] 
    /*0000b490*/ STR         R3, [R7, #1004]             @ 0x3ec 
    /*0000b494*/ LDR         R2, [R4, #16] 
    /*0000b498*/ B           H264eStartPicAsFrame_xb224
    H264eStartPicAsFrame_xb49c:
    /*0000b49c*/ LDR         R3, [SP, #16] 
    /*0000b4a0*/ CMP         R3, #0 
    /*0000b4a4*/ BNE         H264eStartPicAsFrame_xb3d8
    /*0000b4a8*/ LDR         R3, [R7, #2240]             @ 0x8c0 
    /*0000b4ac*/ CMP         R3, #0 
    /*0000b4b0*/ BEQ         H264eStartPicAsFrame_xb4ec
    /*0000b4b4*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0000b4b8*/ CMP         R3, #1 
    /*0000b4bc*/ BEQ         H264eStartPicAsFrame_xb7e0
    /*0000b4c0*/ LDR         R3, [R4, #12] 
    /*0000b4c4*/ LDR         R3, [R3, #376]              @ 0x178 
    /*0000b4c8*/ CMP         R3, #2 
    /*0000b4cc*/ BEQ         H264eStartPicAsFrame_xb7e0
    /*0000b4d0*/ LDR         R3, [R6, #2024]             @ 0x7e8 
    /*0000b4d4*/ CMP         R3, #2 
    /*0000b4d8*/ BEQ         H264eStartPicAsFrame_xb7d4
    H264eStartPicAsFrame_xb4dc:
    /*0000b4dc*/ MOV         R3, #1 
    /*0000b4e0*/ STR         R3, [R7, #2156]             @ 0x86c 
    /*0000b4e4*/ STR         R3, [SP, #16] 
    /*0000b4e8*/ STR         R3, [R7, #2228]             @ 0x8b4 
    H264eStartPicAsFrame_xb4ec:
    /*0000b4ec*/ MOV         R0, R5 
    /*0000b4f0*/ BL          0x000000000000B4F0          @ H264eInitIntraRefreshInfo [R_ARM_CALL: .text+0x4d2c] 
    /*0000b4f4*/ MOV         R3, #1 
    /*0000b4f8*/ STR         R3, [R5, #940]              @ 0x3ac 
    /*0000b4fc*/ B           H264eStartPicAsFrame_xb3d8
    H264eStartPicAsFrame_xb500:
    /*0000b500*/ LDR         R3, [R4, #28] 
    /*0000b504*/ CMP         R3, #1 
    /*0000b508*/ BEQ         H264eStartPicAsFrame_xb2e0
    /*0000b50c*/ CMP         R3, #2 
    /*0000b510*/ BNE         H264eStartPicAsFrame_xb2dc
    /*0000b514*/ LDR         R3, [R7, #1648]             @ 0x670 
    /*0000b518*/ SUB         R3, R3, #2 
    /*0000b51c*/ CLZ         R3, R3 
    /*0000b520*/ LSR         R3, R3, #5 
    /*0000b524*/ STR         R3, [SP, #32] 
    /*0000b528*/ B           H264eStartPicAsFrame_xb2e4
    H264eStartPicAsFrame_xb52c:
    /*0000b52c*/ LDR         R3, [R6, #2104]             @ 0x838 
    /*0000b530*/ CMP         R3, #0 
    /*0000b534*/ MOVEQ       R3, #1 
    /*0000b538*/ STREQ       R3, [R0, #8] 
    /*0000b53c*/ STREQ       R3, [R7, #1004]             @ 0x3ec 
    /*0000b540*/ LDREQ       R2, [R4, #16] 
    /*0000b544*/ B           H264eStartPicAsFrame_xb224
    H264eStartPicAsFrame_xb548:
    /*0000b548*/ LDR         R3, [R7, #1648]             @ 0x670 
    /*0000b54c*/ CMP         R3, #1 
    /*0000b550*/ BNE         H264eStartPicAsFrame_xb284
    /*0000b554*/ LDR         R3, [R7, #1644]             @ 0x66c 
    /*0000b558*/ CMP         R3, #1 
    /*0000b55c*/ BNE         H264eStartPicAsFrame_xb284
    /*0000b560*/ B           H264eStartPicAsFrame_xb448
    /*0000b564*/ MOV         R3, #4 
    /*0000b568*/ STR         R3, [R6, #1988]             @ 0x7c4 
    H264eStartPicAsFrame_xb56c:
    /*0000b56c*/ LDR         R2, [SP, #16] 
    /*0000b570*/ MOV         FP, #1 
    /*0000b574*/ MOVW        R3, #978                    @ 0x3d2 
    /*0000b578*/ LSL         R2, FP, R2 
    /*0000b57c*/ ANDS        R3, R2, R3 
    /*0000b580*/ BNE         H264eStartPicAsFrame_xb670
    /*0000b584*/ TST         R2, #33                     @ 0x21 
    /*0000b588*/ BNE         H264eStartPicAsFrame_xb6b0
    /*0000b58c*/ TST         R2, #8 
    /*0000b590*/ BNE         H264eStartPicAsFrame_xb79c
    H264eStartPicAsFrame_xb594:
    /*0000b594*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb98] 
    /*0000b598*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*0000b59c*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb98] 
    /*0000b5a0*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*0000b5a4*/ MOVW        R2, #3178                   @ 0xc6a 
    /*0000b5a8*/ LDR         R1, [PC, #784]              @ 0x000000000000b8c0 
    /*0000b5ac*/ BL          0x000000000000B5AC          @ osal_panic [R_ARM_CALL: +0x0] 
    H264eStartPicAsFrame_xb5b0:
    /*0000b5b0*/ MOV         R0, R4 
    /*0000b5b4*/ BL          0x000000000000B5B4          @ H264eEnableVenc [R_ARM_CALL: .text+0x4f7c] 
    /*0000b5b8*/ MOV         R0, R9 
    /*0000b5bc*/ BL          0x000000000000B5BC          @ H264E_DRV_UpdateRegConfigParam [R_ARM_CALL: .text+0x15854] 
    /*0000b5c0*/ MOV         R0, R9 
    /*0000b5c4*/ BL          0x000000000000B5C4          @ H264E_DRV_UpdatePredModeAdaptive [R_ARM_CALL: .text+0x15a94] 
    /*0000b5c8*/ LDR         R3, [R6, #2032]             @ 0x7f0 
    /*0000b5cc*/ CMP         R3, #1 
    /*0000b5d0*/ MOVNE       R3, #0 
    /*0000b5d4*/ STRNE       R3, [R7, #1004]             @ 0x3ec 
    H264eStartPicAsFrame_xb5d8:
    /*0000b5d8*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000b5dc*/ MOV         R0, R8 
    /*0000b5e0*/ BL          0x000000000000B5E0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    H264eStartPicAsFrame_xb5e4:
    /*0000b5e4*/ LDR         R0, [SP, #20] 
    /*0000b5e8*/ ADD         SP, SP, #196                @ 0xc4 
    /*0000b5ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000b5f0*/ MOV         R3, #6 
    /*0000b5f4*/ STR         R3, [R6, #1988]             @ 0x7c4 
    H264eStartPicAsFrame_xb5f8:
    /*0000b5f8*/ LDR         R3, [SP, #16] 
    /*0000b5fc*/ CMP         R3, #9 
    /*0000b600*/ BHI         H264eStartPicAsFrame_xb594
    /*0000b604*/ B           H264eStartPicAsFrame_xb56c
    /*0000b608*/ MOV         R3, #10 
    /*0000b60c*/ STR         R3, [R6, #1988]             @ 0x7c4 
    /*0000b610*/ B           H264eStartPicAsFrame_xb56c
    /*0000b614*/ MOV         R3, #5 
    /*0000b618*/ STR         R3, [R6, #1988]             @ 0x7c4 
    /*0000b61c*/ B           H264eStartPicAsFrame_xb56c
    /*0000b620*/ MOV         R3, #9 
    /*0000b624*/ STR         R3, [R6, #1988]             @ 0x7c4 
    /*0000b628*/ B           H264eStartPicAsFrame_xb56c
    /*0000b62c*/ MOV         R3, #7 
    /*0000b630*/ STR         R3, [R6, #1988]             @ 0x7c4 
    /*0000b634*/ B           H264eStartPicAsFrame_xb56c
    /*0000b638*/ MOV         R3, #8 
    /*0000b63c*/ STR         R3, [R6, #1988]             @ 0x7c4 
    /*0000b640*/ B           H264eStartPicAsFrame_xb56c
    /*0000b644*/ MOV         R3, #12 
    /*0000b648*/ STR         R3, [R6, #1988]             @ 0x7c4 
    /*0000b64c*/ B           H264eStartPicAsFrame_xb56c
    /*0000b650*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb98] 
    /*0000b654*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*0000b658*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb98] 
    /*0000b65c*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*0000b660*/ MOV         R2, #3056                   @ 0xbf0 
    /*0000b664*/ LDR         R1, [PC, #596]              @ 0x000000000000b8c0 
    /*0000b668*/ BL          0x000000000000B668          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000b66c*/ B           H264eStartPicAsFrame_xb594
    H264eStartPicAsFrame_xb670:
    /*0000b670*/ LDR         R3, [R7, #2156]             @ 0x86c 
    /*0000b674*/ CMP         R3, #1 
    /*0000b678*/ BEQ         H264eStartPicAsFrame_xb7fc
    H264eStartPicAsFrame_xb67c:
    /*0000b67c*/ MOV         R0, R5 
    /*0000b680*/ BL          0x000000000000B680          @ H264eDpbInitRefList_P [R_ARM_CALL: .text+0x11e74] 
    /*0000b684*/ LDR         R1, [SP, #32] 
    /*0000b688*/ MOV         R0, R5 
    /*0000b68c*/ BL          0x000000000000B68C          @ H264eSlcHdrMarkReorder [R_ARM_CALL: .text+0x10794] 
    /*0000b690*/ MOV         R0, R5 
    /*0000b694*/ BL          0x000000000000B694          @ H264eWrHWSlcHdr [R_ARM_CALL: .text+0x4c78] 
    /*0000b698*/ LDR         R3, [SP, #16] 
    /*0000b69c*/ CMP         R3, #9 
    /*0000b6a0*/ LDRNE       R3, [R6, #1952]             @ 0x7a0 
    /*0000b6a4*/ ADDNE       R3, R3, #1 
    /*0000b6a8*/ STRNE       R3, [R6, #1952]             @ 0x7a0 
    /*0000b6ac*/ B           H264eStartPicAsFrame_xb5b0
    H264eStartPicAsFrame_xb6b0:
    /*0000b6b0*/ LDR         R1, [R6, #2396]             @ 0x95c 
    /*0000b6b4*/ MOV         R0, R5 
    /*0000b6b8*/ STR         R3, [SP, #16] 
    /*0000b6bc*/ BL          0x000000000000B6BC          @ H264E_DRV_TileCal [R_ARM_CALL: .text+0x12968] 
    /*0000b6c0*/ MOV         R0, R5 
    /*0000b6c4*/ BL          0x000000000000B6C4          @ H264eUpdatePocAndRefParam [R_ARM_CALL: .text+0xb09c] 
    /*0000b6c8*/ LDR         R3, [SP, #16] 
    /*0000b6cc*/ ADD         R1, R5, #14336              @ 0x3800 
    /*0000b6d0*/ ADD         R0, R5, #9856               @ 0x2680 
    /*0000b6d4*/ ADD         R1, R1, #36                 @ 0x24 
    /*0000b6d8*/ ADD         R0, R0, #48                 @ 0x30 
    /*0000b6dc*/ STR         R3, [R7, #2240]             @ 0x8c0 
    /*0000b6e0*/ BL          0x000000000000B6E0          @ H264eGetNumRefFrames [R_ARM_CALL: .text+0x1e30] 
    /*0000b6e4*/ ADD         R1, R5, #7744               @ 0x1e40 
    /*0000b6e8*/ ADD         R1, R1, #56                 @ 0x38 
    /*0000b6ec*/ STR         R0, [R7, #2836]             @ 0xb14 
    /*0000b6f0*/ ADD         R0, R5, #10432              @ 0x28c0 
    /*0000b6f4*/ LDR         R2, [R6, #1364]             @ 0x554 
    /*0000b6f8*/ ADD         R0, R0, #8 
    /*0000b6fc*/ BL          0x000000000000B6FC          @ H264eDpbFlush [R_ARM_CALL: .text+0x10fec] 
    /*0000b700*/ LDR         R1, [R7, #2836]             @ 0xb14 
    /*0000b704*/ LDR         R2, [R7, #2852]             @ 0xb24 
    /*0000b708*/ LDR         R3, [SP, #16] 
    /*0000b70c*/ CMP         R1, R2 
    /*0000b710*/ MOVGE       FP, R3 
    /*0000b714*/ BLT         H264eStartPicAsFrame_xb82c
    H264eStartPicAsFrame_xb718:
    /*0000b718*/ ADD         R1, R5, #1104               @ 0x450 
    /*0000b71c*/ ADD         R0, R5, #13632              @ 0x3540 
    /*0000b720*/ MOV         R2, #0 
    /*0000b724*/ ADD         R1, R1, #12 
    /*0000b728*/ ADD         R0, R0, #24 
    /*0000b72c*/ BL          0x000000000000B72C          @ H264E_InitRcnRefShareBuffParam [R_ARM_CALL: .text+0x9558] 
    /*0000b730*/ MOV         R0, R5 
    /*0000b734*/ BL          0x0000000000005C8C 
    /*0000b738*/ MOV         R0, R9 
    /*0000b73c*/ BL          0x000000000000B73C          @ H264eWrStrBufSPSPPS [R_ARM_CALL: .text+0x3edc] 
    /*0000b740*/ MOV         R0, R9 
    /*0000b744*/ BL          0x000000000000B744          @ H264eWrEncryptSEI [R_ARM_CALL: .text+0x109c4] 
    /*0000b748*/ LDR         R1, [SP, #32] 
    /*0000b74c*/ MOV         R0, R5 
    /*0000b750*/ BL          0x000000000000B750          @ H264eSlcHdrMarkReorder [R_ARM_CALL: .text+0x10794] 
    /*0000b754*/ MOV         R0, R5 
    /*0000b758*/ BL          0x000000000000B758          @ H264eWrHWSlcHdr [R_ARM_CALL: .text+0x4c78] 
    /*0000b75c*/ LDR         LR, [SP, #24] 
    /*0000b760*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000b764*/ CMP         FP, #0 
    /*0000b768*/ MOV         IP, #0 
    /*0000b76c*/ STRNE       FP, [SP, #20] 
    /*0000b770*/ ADD         R1, LR, R3 
    /*0000b774*/ LDR         R2, [LR, R9, LSL #2] 
    /*0000b778*/ LDR         R3, [R6, #1952]             @ 0x7a0 
    /*0000b77c*/ LDR         R0, [R1, #140]              @ 0x8c 
    /*0000b780*/ ADD         R3, R3, #1 
    /*0000b784*/ STR         IP, [R1, #140]              @ 0x8c 
    /*0000b788*/ ADD         R2, R2, R0 
    /*0000b78c*/ STR         R3, [R6, #1952]             @ 0x7a0 
    /*0000b790*/ STR         R2, [LR, R9, LSL #2] 
    /*0000b794*/ BNE         H264eStartPicAsFrame_xb5d8
    /*0000b798*/ B           H264eStartPicAsFrame_xb5b0
    H264eStartPicAsFrame_xb79c:
    /*0000b79c*/ MOV         R0, R5 
    /*0000b7a0*/ BL          0x000000000000B7A0          @ H264eDpbInitRefList_P [R_ARM_CALL: .text+0x11e74] 
    /*0000b7a4*/ LDR         R1, [SP, #32] 
    /*0000b7a8*/ MOV         R0, R5 
    /*0000b7ac*/ BL          0x000000000000B7AC          @ H264eSlcHdrMarkReorder [R_ARM_CALL: .text+0x10794] 
    /*0000b7b0*/ MOV         R0, R5 
    /*0000b7b4*/ BL          0x000000000000B7B4          @ H264eWrHWSlcHdr [R_ARM_CALL: .text+0x4c78] 
    /*0000b7b8*/ LDR         R2, [R6, #1952]             @ 0x7a0 
    /*0000b7bc*/ LDR         R3, [R6, #1964]             @ 0x7ac 
    /*0000b7c0*/ ADD         R2, R2, #1 
    /*0000b7c4*/ STR         R2, [R6, #1952]             @ 0x7a0 
    /*0000b7c8*/ ADD         R3, R3, #1 
    /*0000b7cc*/ STR         R3, [R6, #1964]             @ 0x7ac 
    /*0000b7d0*/ B           H264eStartPicAsFrame_xb5b0
    H264eStartPicAsFrame_xb7d4:
    /*0000b7d4*/ LDR         R3, [R5, #984]              @ 0x3d8 
    /*0000b7d8*/ CMP         R3, #0 
    /*0000b7dc*/ BEQ         H264eStartPicAsFrame_xb4dc
    H264eStartPicAsFrame_xb7e0:
    /*0000b7e0*/ MOV         R3, #1 
    /*0000b7e4*/ STR         R3, [R5, #936]              @ 0x3a8 
    /*0000b7e8*/ LDR         R3, [R7, #2172]             @ 0x87c 
    /*0000b7ec*/ MOV         R2, #0 
    /*0000b7f0*/ STR         R2, [SP, #16] 
    /*0000b7f4*/ STR         R3, [R5, #944]              @ 0x3b0 
    /*0000b7f8*/ B           H264eStartPicAsFrame_xb4ec
    H264eStartPicAsFrame_xb7fc:
    /*0000b7fc*/ LDR         R1, [R6, #2396]             @ 0x95c 
    /*0000b800*/ MOV         R0, R5 
    /*0000b804*/ BL          0x000000000000B804          @ H264E_DRV_TileCal [R_ARM_CALL: .text+0x12968] 
    /*0000b808*/ MOV         R0, R5 
    /*0000b80c*/ BL          0x0000000000005C8C 
    /*0000b810*/ MOV         R0, R9 
    /*0000b814*/ BL          0x000000000000B814          @ H264eWrStrBufSPSPPS [R_ARM_CALL: .text+0x3edc] 
    /*0000b818*/ MOV         R0, R9 
    /*0000b81c*/ BL          0x000000000000B81C          @ H264eWrEncryptSEI [R_ARM_CALL: .text+0x109c4] 
    /*0000b820*/ MOV         R0, R9 
    /*0000b824*/ BL          0x000000000000B824          @ H264eWrRecoverPointSEI [R_ARM_CALL: .text+0x3850] 
    /*0000b828*/ B           H264eStartPicAsFrame_xb67c
    H264eStartPicAsFrame_xb82c:
    /*0000b82c*/ STR         FP, [R6, #2196]             @ 0x894 
    /*0000b830*/ MOV         R0, R5 
    /*0000b834*/ BL          0x00000000000059A8 
    /*0000b838*/ MOV         R0, R5 
    /*0000b83c*/ BL          0x000000000000B83C          @ H264eGetRcnPic [R_ARM_CALL: .text+0x514c] 
    /*0000b840*/ SUBS        FP, R0, #0 
    /*0000b844*/ BEQ         H264eStartPicAsFrame_xb718
    /*0000b848*/ MOVW        R3, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cb8] 
    /*0000b84c*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*0000b850*/ MOVT        R3, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cb8] 
    /*0000b854*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*0000b858*/ MOVW        R2, #3091                   @ 0xc13 
    /*0000b85c*/ LDR         R1, [PC, #92]               @ 0x000000000000b8c0 
    /*0000b860*/ BL          0x000000000000B860          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000b864*/ B           H264eStartPicAsFrame_xb718
    H264eStartPicAsFrame_xb868:
    /*0000b868*/ STR         R3, [SP, #8] 
    /*0000b86c*/ MOV         R1, #10 
    /*0000b870*/ MOVW        R3, #2971                   @ 0xb9b 
    /*0000b874*/ STR         R9, [SP, #4] 
    /*0000b878*/ STR         R3, [SP] 
    /*0000b87c*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c7c] 
    /*0000b880*/ LDR         R3, [PC, #56]               @ 0x000000000000b8c0 
    /*0000b884*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c7c] 
    /*0000b888*/ MOV         R0, #4 
    /*0000b88c*/ MVN         IP, #0 
    /*0000b890*/ STR         IP, [SP, #20] 
    /*0000b894*/ BL          0x000000000000B894          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b898*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000b89c*/ MOV         R0, R8 
    /*0000b8a0*/ BL          0x000000000000B8A0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b8a4*/ LDR         R2, [R6, #1960]             @ 0x7a8 
    /*0000b8a8*/ LDR         R3, [R6, #2080]             @ 0x820 
    /*0000b8ac*/ ADD         R2, R2, #1 
    /*0000b8b0*/ STR         R2, [R6, #1960]             @ 0x7a8 
    /*0000b8b4*/ ADD         R3, R3, #1 
    /*0000b8b8*/ STR         R3, [R6, #2080]             @ 0x820 
    /*0000b8bc*/ B           H264eStartPicAsFrame_xb5e4
    /*0000b8c0*/ ANDEQ       R0, R0, R0, ROR #10 
FUNC_END H264eStartPicAsFrame


FUNC_BEGIN H264E_StartOneFrame
    /*0000b8c4*/ PUSH        {R4, R5, R6, LR} 
    /*0000b8c8*/ SUB         SP, SP, #8 
    /*0000b8cc*/ MOV         R5, R1 
    /*0000b8d0*/ MOV         R4, R0 
    /*0000b8d4*/ BL          0x000000000000B8D4          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000b8d8*/ CMP         R0, #0 
    /*0000b8dc*/ BEQ         H264E_StartOneFrame_xb8e8
    H264E_StartOneFrame_xb8e0:
    /*0000b8e0*/ ADD         SP, SP, #8 
    /*0000b8e4*/ POP         {R4, R5, R6, PC} 
    H264E_StartOneFrame_xb8e8:
    /*0000b8e8*/ MOV         R0, R4 
    /*0000b8ec*/ BL          0x000000000000B8EC          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000b8f0*/ CMP         R0, #0 
    /*0000b8f4*/ BNE         H264E_StartOneFrame_xb8e0
    /*0000b8f8*/ MOV         R0, R5 
    /*0000b8fc*/ BL          0x000000000000B8FC          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000b900*/ CMP         R0, #0 
    /*0000b904*/ BNE         H264E_StartOneFrame_xb8e0
    /*0000b908*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000b90c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000b910*/ ADD         R3, R3, R4, LSL #2 
    /*0000b914*/ ADD         R1, SP, #4 
    /*0000b918*/ LDR         R6, [R3, #64]               @ 0x40 
    /*0000b91c*/ ADD         R6, R6, #9792               @ 0x2640 
    /*0000b920*/ ADD         R6, R6, #40                 @ 0x28 
    /*0000b924*/ MOV         R0, R6 
    /*0000b928*/ BL          0x000000000000B928          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b92c*/ LDR         R3, [R5, #12] 
    /*0000b930*/ MOV         R0, R4 
    /*0000b934*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*0000b938*/ BL          0x000000000000B938          @ H264eWrStrBufSEI [R_ARM_CALL: .text+0x1380] 
    /*0000b93c*/ ADD         R1, SP, #4 
    /*0000b940*/ MOV         R0, R6 
    /*0000b944*/ BL          0x000000000000B944          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b948*/ MOV         R1, R5 
    /*0000b94c*/ MOV         R0, R4 
    /*0000b950*/ BL          0x000000000000B11C 
    /*0000b954*/ B           H264E_StartOneFrame_xb8e0
FUNC_END H264E_StartOneFrame


FUNC_BEGIN H264eUpdateConstrainIntraMb
    /*0000b958*/ ADD         R3, R0, #8192               @ 0x2000 
    /*0000b95c*/ MOV         R0, #0 
    /*0000b960*/ LDR         R2, [R3, #2188]             @ 0x88c 
    /*0000b964*/ LDR         R1, [R3, #2192]             @ 0x890 
    /*0000b968*/ ADD         R2, R2, R1 
    /*0000b96c*/ STR         R2, [R3, #2188]             @ 0x88c 
    /*0000b970*/ BX          LR 
FUNC_END H264eUpdateConstrainIntraMb


FUNC_BEGIN H264eUpdateConstrainIntraColumn
    /*0000b974*/ ADD         R3, R0, #8192               @ 0x2000 
    /*0000b978*/ MOV         R0, #0 
    /*0000b97c*/ LDR         R2, [R3, #2212]             @ 0x8a4 
    /*0000b980*/ LDR         R1, [R3, #2216]             @ 0x8a8 
    /*0000b984*/ ADD         R2, R2, R1 
    /*0000b988*/ STR         R2, [R3, #2212]             @ 0x8a4 
    /*0000b98c*/ BX          LR 
FUNC_END H264eUpdateConstrainIntraColumn


FUNC_BEGIN H264eUpdateDpbFrames
    /*0000b990*/ PUSH        {R4, LR} 
    /*0000b994*/ MOV         LR, R2 
    /*0000b998*/ LDR         R4, [R2, #28] 
    /*0000b99c*/ ADD         R2, R3, #4096               @ 0x1000 
    /*0000b9a0*/ MOV         IP, R1 
    /*0000b9a4*/ STR         R4, [R1, #364]              @ 0x16c 
    /*0000b9a8*/ LDR         R2, [R2, #3680]             @ 0xe60 
    /*0000b9ac*/ STR         R2, [R1, #380]              @ 0x17c 
    /*0000b9b0*/ LDR         R2, [LR, #12] 
    /*0000b9b4*/ CMP         R2, #3 
    /*0000b9b8*/ BEQ         H264eUpdateDpbFrames_xb9c8
    /*0000b9bc*/ MOV         R3, #0 
    /*0000b9c0*/ STR         R3, [R1, #356]              @ 0x164 
    /*0000b9c4*/ POP         {R4, PC} 
    H264eUpdateDpbFrames_xb9c8:
    /*0000b9c8*/ LDR         R4, [LR, #28] 
    /*0000b9cc*/ ADD         R3, R3, #12288              @ 0x3000 
    /*0000b9d0*/ STR         R2, [IP, #356]              @ 0x164 
    /*0000b9d4*/ MOV         R1, R0 
    /*0000b9d8*/ MOV         R2, IP 
    /*0000b9dc*/ MOV         R0, LR 
    /*0000b9e0*/ STR         R4, [IP, #364]              @ 0x16c 
    /*0000b9e4*/ LDR         R3, [R3, #1364]             @ 0x554 
    /*0000b9e8*/ POP         {R4, LR} 
    H264eUpdateDpbFrames_xb9ec:
    /*0000b9ec*/ B           H264eUpdateDpbFrames_xb9ec  @ H264eDpbInserFrame [R_ARM_JUMP24: .text+0x117c0] 
FUNC_END H264eUpdateDpbFrames


FUNC_BEGIN H264eTwoPassVB_UserAdd
    /*0000b9f0*/ PUSH        {R4, R5, LR} 
    /*0000b9f4*/ ADD         R5, R0, #12288              @ 0x3000 
    /*0000b9f8*/ MOV         R4, R0 
    /*0000b9fc*/ ADD         R0, R0, #13248              @ 0x33c0 
    /*0000ba00*/ SUB         SP, SP, #12 
    /*0000ba04*/ MOV         R2, #336                    @ 0x150 
    /*0000ba08*/ LDR         R1, [R5, #992]              @ 0x3e0 
    /*0000ba0c*/ ADD         R0, R0, #40                 @ 0x28 
    /*0000ba10*/ BL          0x000000000000BA10          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000ba14*/ LDR         R1, [R4, #1196]             @ 0x4ac 
    /*0000ba18*/ ADD         IP, R4, #13504              @ 0x34c0 
    /*0000ba1c*/ MOV         R0, #1 
    /*0000ba20*/ LDRD        R2, [R1, #240]              @ 0xf0 
    /*0000ba24*/ STRD        R2, [IP, #24] 
    /*0000ba28*/ LDR         R3, [R1, #24] 
    /*0000ba2c*/ STR         R3, [R5, #1024]             @ 0x400 
    /*0000ba30*/ LDR         R3, [R1, #28] 
    /*0000ba34*/ STR         R3, [R5, #1028]             @ 0x404 
    /*0000ba38*/ BL          0x000000000000BA38          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ba3c*/ LDR         IP, [R5, #1328]             @ 0x530 
    /*0000ba40*/ MOVW        R3, #13408                  @ 0x3460 
    /*0000ba44*/ MOV         R1, #6 
    /*0000ba48*/ LDRD        R2, [R3, R4] 
    /*0000ba4c*/ STR         R1, [SP] 
    /*0000ba50*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*0000ba54*/ MOV         R0, IP 
    /*0000ba58*/ BLX         R1 
    /*0000ba5c*/ SUBS        R3, R0, #0 
    /*0000ba60*/ BNE         H264eTwoPassVB_UserAdd_xbaac
    H264eTwoPassVB_UserAdd_xba64:
    /*0000ba64*/ ADD         R1, R4, #8192               @ 0x2000 
    /*0000ba68*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*0000ba6c*/ MOV         R0, #1 
    /*0000ba70*/ STR         R0, [R5, #1336]             @ 0x538 
    /*0000ba74*/ LDR         R0, [R1, #40]               @ 0x28 
    /*0000ba78*/ ADD         R2, R4, #4096               @ 0x1000 
    /*0000ba7c*/ STR         R0, [R3, #364]              @ 0x16c 
    /*0000ba80*/ LDR         R2, [R2, #3680]             @ 0xe60 
    /*0000ba84*/ STR         R2, [R3, #380]              @ 0x17c 
    /*0000ba88*/ LDR         R2, [R1, #24] 
    /*0000ba8c*/ CMP         R2, #3 
    /*0000ba90*/ MOVNE       R2, #0 
    /*0000ba94*/ STRNE       R2, [R3, #356]              @ 0x164 
    /*0000ba98*/ BEQ         H264eTwoPassVB_UserAdd_xbae0
    H264eTwoPassVB_UserAdd_xba9c:
    /*0000ba9c*/ MOV         R0, R4 
    /*0000baa0*/ ADD         SP, SP, #12 
    /*0000baa4*/ POP         {R4, R5, LR} 
    H264eTwoPassVB_UserAdd_xbaa8:
    /*0000baa8*/ B           H264eTwoPassVB_UserAdd_xbaa8@ H264eUpdateFrameNum [R_ARM_JUMP24: .text+0x4c1c] 
    H264eTwoPassVB_UserAdd_xbaac:
    /*0000baac*/ MOV         R2, #3376                   @ 0xd30 
    /*0000bab0*/ LDR         R1, [PC, #84]               @ 0x000000000000bb0c 
    /*0000bab4*/ MOVW        R0, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ccc] 
    /*0000bab8*/ MOVT        R0, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ccc] 
    /*0000babc*/ BL          0x000000000000BABC          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0000bac0*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb98] 
    /*0000bac4*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*0000bac8*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb98] 
    /*0000bacc*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*0000bad0*/ MOVW        R2, #3377                   @ 0xd31 
    /*0000bad4*/ LDR         R1, [PC, #48]               @ 0x000000000000bb0c 
    /*0000bad8*/ BL          0x000000000000BAD8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000badc*/ B           H264eTwoPassVB_UserAdd_xba64
    H264eTwoPassVB_UserAdd_xbae0:
    /*0000bae0*/ LDR         IP, [R1, #40]               @ 0x28 
    /*0000bae4*/ ADD         R0, R4, #8192               @ 0x2000 
    /*0000bae8*/ ADD         R1, R4, #10432              @ 0x28c0 
    /*0000baec*/ STR         R2, [R3, #356]              @ 0x164 
    /*0000baf0*/ ADD         R1, R1, #8 
    /*0000baf4*/ MOV         R2, R3 
    /*0000baf8*/ STR         IP, [R3, #364]              @ 0x16c 
    /*0000bafc*/ ADD         R0, R0, #12 
    /*0000bb00*/ LDR         R3, [R5, #1364]             @ 0x554 
    /*0000bb04*/ BL          0x000000000000BB04          @ H264eDpbInserFrame [R_ARM_CALL: .text+0x117c0] 
    /*0000bb08*/ B           H264eTwoPassVB_UserAdd_xba9c
    /*0000bb0c*/ ANDEQ       R0, R0, R8, ROR R5 
FUNC_END H264eTwoPassVB_UserAdd


FUNC_BEGIN H264E_IntProcess
    /*0000bb10*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000bb14*/ SUB         SP, SP, #52                 @ 0x34 
    /*0000bb18*/ MOV         R6, R2 
    /*0000bb1c*/ MOV         R5, R0 
    /*0000bb20*/ BL          0x000000000000BB20          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000bb24*/ SUBS        R4, R0, #0 
    /*0000bb28*/ BEQ         H264E_IntProcess_xbb38
    H264E_IntProcess_xbb2c:
    /*0000bb2c*/ MOV         R0, R4 
    /*0000bb30*/ ADD         SP, SP, #52                 @ 0x34 
    /*0000bb34*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_IntProcess_xbb38:
    /*0000bb38*/ MOV         R0, R5 
    /*0000bb3c*/ BL          0x000000000000BB3C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000bb40*/ SUBS        R4, R0, #0 
    /*0000bb44*/ BNE         H264E_IntProcess_xbb2c
    /*0000bb48*/ MOV         R0, R6 
    /*0000bb4c*/ BL          0x000000000000BB4C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000bb50*/ SUBS        R4, R0, #0 
    /*0000bb54*/ BNE         H264E_IntProcess_xbb2c
    /*0000bb58*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000bb5c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000bb60*/ ADD         R3, R3, R5, LSL #2 
    /*0000bb64*/ LDRB        R2, [R6, #24] 
    /*0000bb68*/ MOV         R0, #19 
    /*0000bb6c*/ STR         R4, [SP, #36]               @ 0x24 
    /*0000bb70*/ LDR         R8, [R3, #64]               @ 0x40 
    /*0000bb74*/ STRB        R2, [SP, #12] 
    /*0000bb78*/ STR         R4, [SP, #40]               @ 0x28 
    /*0000bb7c*/ LDR         R9, [R8, #1060]             @ 0x424 
    /*0000bb80*/ BL          0x000000000000BB80          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000bb84*/ ADD         R2, SP, #28 
    /*0000bb88*/ ADD         R1, SP, #12 
    /*0000bb8c*/ LDR         R3, [R0, #28] 
    /*0000bb90*/ MOV         R0, R5 
    /*0000bb94*/ BLX         R3 
    /*0000bb98*/ CMP         R0, #0 
    /*0000bb9c*/ BNE         H264E_IntProcess_xbbf0
    H264E_IntProcess_xbba0:
    /*0000bba0*/ LDR         R3, [SP, #28] 
    /*0000bba4*/ CMP         R3, #1 
    /*0000bba8*/ BEQ         H264E_IntProcess_xbc10
    /*0000bbac*/ CMP         R3, #0 
    /*0000bbb0*/ BEQ         H264E_IntProcess_xbdd0
    /*0000bbb4*/ CMP         R3, #2 
    /*0000bbb8*/ BEQ         H264E_IntProcess_xbd38
    /*0000bbbc*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb98] 
    /*0000bbc0*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*0000bbc4*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb98] 
    /*0000bbc8*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*0000bbcc*/ MOVW        R2, #3638                   @ 0xe36 
    /*0000bbd0*/ LDR         R1, [PC, #1152]             @ 0x000000000000c058 
    /*0000bbd4*/ BL          0x000000000000BBD4          @ osal_panic [R_ARM_CALL: +0x0] 
    H264E_IntProcess_xbbd8:
    /*0000bbd8*/ MOV         R0, #8 
    /*0000bbdc*/ BL          0x000000000000BBDC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000bbe0*/ LDR         R3, [R0] 
    /*0000bbe4*/ MOV         R0, R5 
    /*0000bbe8*/ BLX         R3 
    /*0000bbec*/ B           H264E_IntProcess_xbb2c
    H264E_IntProcess_xbbf0:
    /*0000bbf0*/ MOVW        R3, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cf4] 
    /*0000bbf4*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb9c] 
    /*0000bbf8*/ MOVT        R3, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cf4] 
    /*0000bbfc*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb9c] 
    /*0000bc00*/ MOV         R2, #3456                   @ 0xd80 
    /*0000bc04*/ LDR         R1, [PC, #1100]             @ 0x000000000000c058 
    /*0000bc08*/ BL          0x000000000000BC08          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000bc0c*/ B           H264E_IntProcess_xbba0
    H264E_IntProcess_xbc10:
    /*0000bc10*/ LDR         R2, [R6, #16] 
    /*0000bc14*/ LDR         R2, [R2, #4] 
    /*0000bc18*/ CMP         R2, #1 
    /*0000bc1c*/ MOVEQ       R3, #2 
    /*0000bc20*/ STREQ       R3, [SP, #28] 
    /*0000bc24*/ BEQ         H264E_IntProcess_xbd38
    /*0000bc28*/ ADD         FP, R8, #9792               @ 0x2640 
    /*0000bc2c*/ ADD         SL, SP, #8 
    /*0000bc30*/ ADD         FP, FP, #40                 @ 0x28 
    /*0000bc34*/ STR         R3, [SP] 
    /*0000bc38*/ MOV         R1, SL 
    /*0000bc3c*/ ADD         R7, R8, #12288              @ 0x3000 
    /*0000bc40*/ MOV         R0, FP 
    /*0000bc44*/ BL          0x000000000000BC44          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000bc48*/ MOV         R1, #0 
    /*0000bc4c*/ MOV         R0, R5 
    /*0000bc50*/ BL          0x000000000000BC50          @ H264eDoWp [R_ARM_CALL: .text+0x1d94] 
    /*0000bc54*/ LDR         R3, [SP] 
    /*0000bc58*/ LDRB        R2, [R6, #24] 
    /*0000bc5c*/ ANDS        R2, R2, #4 
    /*0000bc60*/ STRNE       R3, [R7, #1996]             @ 0x7cc 
    /*0000bc64*/ STREQ       R2, [R7, #1996]             @ 0x7cc 
    /*0000bc68*/ MOV         R3, #1 
    /*0000bc6c*/ STR         R3, [R7, #2024]             @ 0x7e8 
    /*0000bc70*/ LDR         R3, [R9, #164]              @ 0xa4 
    /*0000bc74*/ LDR         R2, [R9, #168]              @ 0xa8 
    /*0000bc78*/ LDR         R3, [R3] 
    /*0000bc7c*/ LDR         R2, [R2] 
    /*0000bc80*/ CMP         R3, R2 
    /*0000bc84*/ SUBHI       R3, R3, R2 
    /*0000bc88*/ LDRLS       R0, [R9, #12] 
    /*0000bc8c*/ LDRLS       R1, [R9, #8] 
    /*0000bc90*/ LDRHI       R1, [R9, #12] 
    /*0000bc94*/ SUBLS       R3, R3, R0 
    /*0000bc98*/ SUBHI       R3, R3, R1 
    /*0000bc9c*/ ADDLS       R3, R3, R1 
    /*0000bca0*/ SUBLS       R3, R3, R2 
    /*0000bca4*/ LDR         R2, [R7, #1988]             @ 0x7c4 
    /*0000bca8*/ STR         R3, [R7, #2000]             @ 0x7d0 
    /*0000bcac*/ CMP         R2, #12 
    /*0000bcb0*/ BEQ         H264E_IntProcess_xbccc
    /*0000bcb4*/ LDR         R2, [R7, #1968]             @ 0x7b0 
    /*0000bcb8*/ LDR         R3, [R7, #1960]             @ 0x7a8 
    /*0000bcbc*/ ADD         R2, R2, #1 
    /*0000bcc0*/ STR         R2, [R7, #1968]             @ 0x7b0 
    /*0000bcc4*/ ADD         R3, R3, #1 
    /*0000bcc8*/ STR         R3, [R7, #1960]             @ 0x7a8 
    H264E_IntProcess_xbccc:
    /*0000bccc*/ MOV         R3, #1 
    /*0000bcd0*/ STR         R3, [R6, #20] 
    /*0000bcd4*/ STR         R3, [R6] 
    /*0000bcd8*/ MOV         R2, #0 
    /*0000bcdc*/ LDR         R3, [R7, #1344]             @ 0x540 
    /*0000bce0*/ STR         R2, [R7, #1944]             @ 0x798 
    /*0000bce4*/ CMP         R3, #1 
    /*0000bce8*/ BEQ         H264E_IntProcess_xbf60
    H264E_IntProcess_xbcec:
    /*0000bcec*/ LDR         R9, [SP, #40]               @ 0x28 
    /*0000bcf0*/ CMP         R9, #1 
    /*0000bcf4*/ BEQ         H264E_IntProcess_xbf44
    H264E_IntProcess_xbcf8:
    /*0000bcf8*/ MOV         R0, R8 
    /*0000bcfc*/ BL          0x00000000000059A8 
    /*0000bd00*/ LDR         R3, [R7, #1988]             @ 0x7c4 
    /*0000bd04*/ CMP         R3, #10 
    /*0000bd08*/ BEQ         H264E_IntProcess_xbd20
    /*0000bd0c*/ MOV         R0, R8 
    /*0000bd10*/ BL          0x000000000000BD10          @ H264eBackupPoc [R_ARM_CALL: .text+0x12634] 
    /*0000bd14*/ ADD         R0, R8, #9792               @ 0x2640 
    /*0000bd18*/ ADD         R0, R0, #44                 @ 0x2c 
    /*0000bd1c*/ BL          0x000000000000BD1C          @ H264eBackupRef [R_ARM_CALL: .text+0xe8dc] 
    H264E_IntProcess_xbd20:
    /*0000bd20*/ LDR         R3, [R7, #2032]             @ 0x7f0 
    /*0000bd24*/ MOV         R1, SL 
    /*0000bd28*/ MOV         R0, FP 
    /*0000bd2c*/ STR         R3, [R7, #2036]             @ 0x7f4 
    /*0000bd30*/ BL          0x000000000000BD30          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000bd34*/ B           H264E_IntProcess_xbbd8
    H264E_IntProcess_xbd38:
    /*0000bd38*/ ADD         R9, R8, #9792               @ 0x2640 
    /*0000bd3c*/ ADD         SL, SP, #8 
    /*0000bd40*/ ADD         R9, R9, #40                 @ 0x28 
    /*0000bd44*/ ADD         R7, R8, #12288              @ 0x3000 
    /*0000bd48*/ MOV         R1, SL 
    /*0000bd4c*/ MOV         R0, R9 
    /*0000bd50*/ BL          0x000000000000BD50          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000bd54*/ MOV         R1, #0 
    /*0000bd58*/ MOV         R0, R5 
    /*0000bd5c*/ BL          0x000000000000BD5C          @ H264eDoWp [R_ARM_CALL: .text+0x1d94] 
    /*0000bd60*/ MOV         R3, #2 
    /*0000bd64*/ STR         R3, [R7, #2024]             @ 0x7e8 
    /*0000bd68*/ MOV         R2, #0 
    /*0000bd6c*/ LDRB        R3, [R6, #24] 
    /*0000bd70*/ MOV         R0, R8 
    /*0000bd74*/ STR         R2, [R6] 
    /*0000bd78*/ MOV         R2, #0 
    /*0000bd7c*/ ANDS        R3, R3, #4 
    /*0000bd80*/ MOVNE       R3, #1 
    /*0000bd84*/ STR         R3, [R7, #1996]             @ 0x7cc 
    /*0000bd88*/ MOV         R3, #2 
    /*0000bd8c*/ STR         R3, [R6, #20] 
    /*0000bd90*/ LDR         R3, [R7, #1972]             @ 0x7b4 
    /*0000bd94*/ STR         R2, [R7, #1944]             @ 0x798 
    /*0000bd98*/ ADD         R3, R3, #1 
    /*0000bd9c*/ STR         R3, [R7, #1972]             @ 0x7b4 
    /*0000bda0*/ BL          0x00000000000059A8 
    /*0000bda4*/ MOV         R0, R8 
    /*0000bda8*/ BL          0x000000000000BDA8          @ H264eBackupPoc [R_ARM_CALL: .text+0x12634] 
    /*0000bdac*/ ADD         R0, R8, #9792               @ 0x2640 
    /*0000bdb0*/ ADD         R0, R0, #44                 @ 0x2c 
    /*0000bdb4*/ BL          0x000000000000BDB4          @ H264eBackupRef [R_ARM_CALL: .text+0xe8dc] 
    /*0000bdb8*/ LDR         R3, [R7, #2032]             @ 0x7f0 
    /*0000bdbc*/ MOV         R1, SL 
    /*0000bdc0*/ MOV         R0, R9 
    /*0000bdc4*/ STR         R3, [R7, #2036]             @ 0x7f4 
    /*0000bdc8*/ BL          0x000000000000BDC8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000bdcc*/ B           H264E_IntProcess_xbbd8
    H264E_IntProcess_xbdd0:
    /*0000bdd0*/ ADD         FP, R8, #9792               @ 0x2640 
    /*0000bdd4*/ ADD         SL, SP, #8 
    /*0000bdd8*/ ADD         FP, FP, #40                 @ 0x28 
    /*0000bddc*/ ADD         R7, R8, #12288              @ 0x3000 
    /*0000bde0*/ MOV         R1, SL 
    /*0000bde4*/ MOV         R0, FP 
    /*0000bde8*/ BL          0x000000000000BDE8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000bdec*/ MOVW        R3, #0                      @ VencBufferCache [R_ARM_MOVW_ABS_NC: +0x0] 
    /*0000bdf0*/ MOVT        R3, #0                      @ VencBufferCache [R_ARM_MOVT_ABS: +0x0] 
    /*0000bdf4*/ LDR         R3, [R3] 
    /*0000bdf8*/ CMP         R3, #1 
    /*0000bdfc*/ BEQ         H264E_IntProcess_xbf90
    H264E_IntProcess_xbe00:
    /*0000be00*/ MOV         R1, #1 
    /*0000be04*/ MOV         R0, R5 
    /*0000be08*/ BL          0x000000000000BE08          @ H264eDoWp [R_ARM_CALL: .text+0x1d94] 
    /*0000be0c*/ MOV         R2, #1 
    /*0000be10*/ MOV         R3, #0 
    /*0000be14*/ STR         R2, [R7, #1996]             @ 0x7cc 
    /*0000be18*/ STR         R3, [R7, #2024]             @ 0x7e8 
    /*0000be1c*/ LDR         R3, [R9, #164]              @ 0xa4 
    /*0000be20*/ LDR         R2, [R9, #168]              @ 0xa8 
    /*0000be24*/ LDR         R3, [R3] 
    /*0000be28*/ LDR         R2, [R2] 
    /*0000be2c*/ CMP         R3, R2 
    /*0000be30*/ BHI         H264E_IntProcess_xbf08
    /*0000be34*/ LDR         R0, [R9, #12] 
    /*0000be38*/ LDR         R1, [R9, #8] 
    /*0000be3c*/ SUB         R3, R3, R0 
    /*0000be40*/ ADD         R3, R3, R1 
    /*0000be44*/ SUB         R3, R3, R2 
    H264E_IntProcess_xbe48:
    /*0000be48*/ LDR         R2, [R7, #1988]             @ 0x7c4 
    /*0000be4c*/ ADD         R9, R8, #8192               @ 0x2000 
    /*0000be50*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000be54*/ LDR         R1, [R7, #1980]             @ 0x7bc 
    /*0000be58*/ STR         R3, [R7, #2000]             @ 0x7d0 
    /*0000be5c*/ LDR         R3, [R7, #1956]             @ 0x7a4 
    /*0000be60*/ STR         R2, [R7, #1992]             @ 0x7c8 
    /*0000be64*/ MOV         R2, #1 
    /*0000be68*/ ADD         R1, R1, R2 
    /*0000be6c*/ ADD         R3, R3, R2 
    /*0000be70*/ STR         R1, [R7, #1980]             @ 0x7bc 
    /*0000be74*/ MOV         R1, #0 
    /*0000be78*/ STR         R3, [R7, #1956]             @ 0x7a4 
    /*0000be7c*/ STR         R0, [R6, #8] 
    /*0000be80*/ MOV         R0, R8 
    /*0000be84*/ STR         R2, [R6] 
    /*0000be88*/ STR         R1, [R6, #20] 
    /*0000be8c*/ STR         R1, [SP] 
    /*0000be90*/ BL          0x000000000000BE90          @ H264eUpdateStreamInfo [R_ARM_CALL: .text+0x56d4] 
    /*0000be94*/ LDR         R0, [R9, #40]               @ 0x28 
    /*0000be98*/ ADD         R3, R8, #4096               @ 0x1000 
    /*0000be9c*/ LDR         R2, [R7, #992]              @ 0x3e0 
    /*0000bea0*/ LDR         R1, [SP] 
    /*0000bea4*/ STR         R0, [R2, #364]              @ 0x16c 
    /*0000bea8*/ LDR         R3, [R3, #3680]             @ 0xe60 
    /*0000beac*/ STR         R3, [R2, #380]              @ 0x17c 
    /*0000beb0*/ LDR         R3, [R9, #24] 
    /*0000beb4*/ CMP         R3, #3 
    /*0000beb8*/ STRNE       R1, [R2, #356]              @ 0x164 
    /*0000bebc*/ BEQ         H264E_IntProcess_xbff8
    H264E_IntProcess_xbec0:
    /*0000bec0*/ MOV         R0, R8 
    /*0000bec4*/ BL          0x000000000000BEC4          @ H264eUpdateFrameNum [R_ARM_CALL: .text+0x4c1c] 
    /*0000bec8*/ MOV         R0, R8 
    /*0000becc*/ BL          0x00000000000059A8 
    /*0000bed0*/ LDR         R3, [R7, #1344]             @ 0x540 
    /*0000bed4*/ CMP         R3, #1 
    /*0000bed8*/ BEQ         H264E_IntProcess_xbf78
    H264E_IntProcess_xbedc:
    /*0000bedc*/ LDR         R3, [R9, #2244]             @ 0x8c4 
    /*0000bee0*/ CMP         R3, #2 
    /*0000bee4*/ BEQ         H264E_IntProcess_xbf18
    H264E_IntProcess_xbee8:
    /*0000bee8*/ LDR         R3, [R7, #2032]             @ 0x7f0 
    /*0000beec*/ MOV         R2, #1 
    /*0000bef0*/ MOV         R1, SL 
    /*0000bef4*/ MOV         R0, FP 
    /*0000bef8*/ STR         R2, [R7, #1944]             @ 0x798 
    /*0000befc*/ STR         R3, [R7, #2036]             @ 0x7f4 
    /*0000bf00*/ BL          0x000000000000BF00          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000bf04*/ B           H264E_IntProcess_xbbd8
    H264E_IntProcess_xbf08:
    /*0000bf08*/ LDR         R1, [R9, #12] 
    /*0000bf0c*/ SUB         R3, R3, R2 
    /*0000bf10*/ SUB         R3, R3, R1 
    /*0000bf14*/ B           H264E_IntProcess_xbe48
    H264E_IntProcess_xbf18:
    /*0000bf18*/ LDR         R3, [R9, #2176]             @ 0x880 
    /*0000bf1c*/ CMP         R3, #1 
    /*0000bf20*/ LDREQ       R3, [R9, #2212]             @ 0x8a4 
    /*0000bf24*/ LDRNE       R3, [R9, #2188]             @ 0x88c 
    /*0000bf28*/ LDREQ       R2, [R9, #2216]             @ 0x8a8 
    /*0000bf2c*/ LDRNE       R2, [R9, #2192]             @ 0x890 
    /*0000bf30*/ ADDEQ       R3, R3, R2 
    /*0000bf34*/ STREQ       R3, [R9, #2212]             @ 0x8a4 
    /*0000bf38*/ ADDNE       R3, R3, R2 
    /*0000bf3c*/ STRNE       R3, [R9, #2188]             @ 0x88c 
    /*0000bf40*/ B           H264E_IntProcess_xbee8
    H264E_IntProcess_xbf44:
    /*0000bf44*/ LDR         R3, [R7, #1988]             @ 0x7c4 
    /*0000bf48*/ CMP         R3, #12 
    /*0000bf4c*/ BNE         H264E_IntProcess_xbcf8
    /*0000bf50*/ MOV         R0, R8 
    /*0000bf54*/ BL          0x000000000000BF54          @ H264eTwoPassVB_UserAdd [R_ARM_CALL: .text+0xb9f0] 
    /*0000bf58*/ STR         R9, [R6, #12] 
    /*0000bf5c*/ B           H264E_IntProcess_xbcf8
    H264E_IntProcess_xbf60:
    /*0000bf60*/ LDR         R3, [R7, #1336]             @ 0x538 
    /*0000bf64*/ CMP         R3, #1 
    /*0000bf68*/ BNE         H264E_IntProcess_xbcec
    /*0000bf6c*/ MOV         R0, R8 
    /*0000bf70*/ BL          0x000000000000BF70          @ H264eTwoPassVB_UserSub [R_ARM_CALL: .text+0x4db8] 
    /*0000bf74*/ B           H264E_IntProcess_xbcec
    H264E_IntProcess_xbf78:
    /*0000bf78*/ LDR         R3, [R7, #1336]             @ 0x538 
    /*0000bf7c*/ CMP         R3, #1 
    /*0000bf80*/ BNE         H264E_IntProcess_xbedc
    /*0000bf84*/ MOV         R0, R8 
    /*0000bf88*/ BL          0x000000000000BF88          @ H264eTwoPassVB_UserSub [R_ARM_CALL: .text+0x4db8] 
    /*0000bf8c*/ B           H264E_IntProcess_xbedc
    H264E_IntProcess_xbf90:
    /*0000bf90*/ LDR         R3, [R7, #2396]             @ 0x95c 
    /*0000bf94*/ CMP         R3, #0 
    /*0000bf98*/ BEQ         H264E_IntProcess_xbe00
    /*0000bf9c*/ LDR         R2, [R8, #1060]             @ 0x424 
    /*0000bfa0*/ ADD         R3, R8, #1072               @ 0x430 
    /*0000bfa4*/ MOV         IP, R2 
    /*0000bfa8*/ STR         R2, [SP, #4] 
    /*0000bfac*/ LDRD        R2, [R3, #-8] 
    /*0000bfb0*/ LDR         R3, [IP, #168]              @ 0xa8 
    /*0000bfb4*/ MOV         R0, R2 
    /*0000bfb8*/ LDR         R2, [IP, #172]              @ 0xac 
    /*0000bfbc*/ LDR         R3, [R3] 
    /*0000bfc0*/ LDR         IP, [IP, #176]              @ 0xb0 
    /*0000bfc4*/ LDR         R2, [R2] 
    /*0000bfc8*/ ADD         LR, IP, R2 
    /*0000bfcc*/ ADDS        R0, R0, R2 
    /*0000bfd0*/ STR         R2, [SP] 
    /*0000bfd4*/ ADD         R2, IP, R3 
    /*0000bfd8*/ CMP         LR, R2 
    /*0000bfdc*/ BCS         H264E_IntProcess_xc01c
    /*0000bfe0*/ LDR         R2, [SP] 
    /*0000bfe4*/ MOV         R1, R0 
    /*0000bfe8*/ MOV         R0, LR 
    /*0000bfec*/ SUB         R2, R3, R2 
    /*0000bff0*/ BL          0x000000000000BFF0          @ hil_mmb_invalid_cache_byaddr [R_ARM_CALL: +0x0] 
    /*0000bff4*/ B           H264E_IntProcess_xbe00
    H264E_IntProcess_xbff8:
    /*0000bff8*/ LDR         IP, [R9, #40]               @ 0x28 
    /*0000bffc*/ ADD         R1, R8, #10432              @ 0x28c0 
    /*0000c000*/ STR         R3, [R2, #356]              @ 0x164 
    /*0000c004*/ ADD         R1, R1, #8 
    /*0000c008*/ ADD         R0, R9, #12 
    /*0000c00c*/ STR         IP, [R2, #364]              @ 0x16c 
    /*0000c010*/ LDR         R3, [R7, #1364]             @ 0x554 
    /*0000c014*/ BL          0x000000000000C014          @ H264eDpbInserFrame [R_ARM_CALL: .text+0x117c0] 
    /*0000c018*/ B           H264E_IntProcess_xbec0
    H264E_IntProcess_xc01c:
    /*0000c01c*/ STR         R3, [SP] 
    /*0000c020*/ MOV         R1, R0 
    /*0000c024*/ LDR         R3, [SP, #4] 
    /*0000c028*/ MOV         R0, LR 
    /*0000c02c*/ LDR         R2, [R3, #8] 
    /*0000c030*/ ADD         R2, IP, R2 
    /*0000c034*/ SUB         R2, R2, LR 
    /*0000c038*/ BL          0x000000000000C038          @ hil_mmb_invalid_cache_byaddr [R_ARM_CALL: +0x0] 
    /*0000c03c*/ LDR         R0, [R8, #1060]             @ 0x424 
    /*0000c040*/ LDR         R3, [SP] 
    /*0000c044*/ LDR         R1, [R8, #1064]             @ 0x428 
    /*0000c048*/ LDR         R0, [R0, #176]              @ 0xb0 
    /*0000c04c*/ MOV         R2, R3 
    /*0000c050*/ BL          0x000000000000C050          @ hil_mmb_invalid_cache_byaddr [R_ARM_CALL: +0x0] 
    /*0000c054*/ B           H264E_IntProcess_xbe00
    /*0000c058*/ MULEQ       R0, R0, R5 
FUNC_END H264E_IntProcess


FUNC_BEGIN H264eCheckSliceSplitCfg
    /*0000c05c*/ PUSH        {R4, R5, LR} 
    /*0000c060*/ SUB         SP, SP, #12 
    /*0000c064*/ MOV         R4, R1 
    /*0000c068*/ MOV         R5, R0 
    /*0000c06c*/ BL          0x000000000000C06C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000c070*/ CMP         R0, #0 
    /*0000c074*/ BEQ         H264eCheckSliceSplitCfg_xc080
    H264eCheckSliceSplitCfg_xc078:
    /*0000c078*/ ADD         SP, SP, #12 
    /*0000c07c*/ POP         {R4, R5, PC} 
    H264eCheckSliceSplitCfg_xc080:
    /*0000c080*/ MOV         R0, R4 
    /*0000c084*/ BL          0x000000000000C084          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000c088*/ CMP         R0, #0 
    /*0000c08c*/ BNE         H264eCheckSliceSplitCfg_xc078
    /*0000c090*/ LDR         R3, [R4] 
    /*0000c094*/ CMP         R3, #1 
    /*0000c098*/ BHI         H264eCheckSliceSplitCfg_xc0f0
    /*0000c09c*/ BNE         H264eCheckSliceSplitCfg_xc078
    /*0000c0a0*/ LDR         R2, [R4, #4] 
    /*0000c0a4*/ LDR         R3, [R5, #980]              @ 0x3d4 
    /*0000c0a8*/ CMP         R2, #0 
    /*0000c0ac*/ ADD         R3, R3, #15 
    /*0000c0b0*/ LSR         R3, R3, #4 
    /*0000c0b4*/ BEQ         H264eCheckSliceSplitCfg_xc0c0
    /*0000c0b8*/ CMP         R2, R3 
    /*0000c0bc*/ BLS         H264eCheckSliceSplitCfg_xc078
    H264eCheckSliceSplitCfg_xc0c0:
    /*0000c0c0*/ STR         R3, [SP, #4] 
    /*0000c0c4*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d5c] 
    /*0000c0c8*/ MOVW        R3, #3816                   @ 0xee8 
    /*0000c0cc*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d5c] 
    /*0000c0d0*/ STR         R3, [SP] 
    /*0000c0d4*/ MOV         R1, #10 
    /*0000c0d8*/ LDR         R3, [PC, #60]               @ 0x000000000000c11c 
    /*0000c0dc*/ MOV         R0, #3 
    /*0000c0e0*/ BL          0x000000000000C0E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c0e4*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000c0e8*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000c0ec*/ B           H264eCheckSliceSplitCfg_xc078
    H264eCheckSliceSplitCfg_xc0f0:
    /*0000c0f0*/ MOVW        R3, #3805                   @ 0xedd 
    /*0000c0f4*/ MOVW        R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0c] 
    /*0000c0f8*/ STR         R3, [SP] 
    /*0000c0fc*/ MOVT        R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0c] 
    /*0000c100*/ LDR         R3, [PC, #20]               @ 0x000000000000c11c 
    /*0000c104*/ MOV         R1, #10 
    /*0000c108*/ MOV         R0, #3 
    /*0000c10c*/ BL          0x000000000000C10C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c110*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000c114*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000c118*/ B           H264eCheckSliceSplitCfg_xc078
    /*0000c11c*/ ANDEQ       R0, R0, R4, LSR #11 
FUNC_END H264eCheckSliceSplitCfg


FUNC_BEGIN H264E_SetSliceSplit
    /*0000c120*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000c124*/ SUB         SP, SP, #20 
    /*0000c128*/ MOV         R6, R1 
    /*0000c12c*/ MOV         R5, R0 
    /*0000c130*/ BL          0x000000000000C130          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000c134*/ SUBS        R4, R0, #0 
    /*0000c138*/ BEQ         H264E_SetSliceSplit_xc148
    H264E_SetSliceSplit_xc13c:
    /*0000c13c*/ MOV         R0, R4 
    /*0000c140*/ ADD         SP, SP, #20 
    /*0000c144*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_SetSliceSplit_xc148:
    /*0000c148*/ MOV         R0, R5 
    /*0000c14c*/ BL          0x000000000000C14C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000c150*/ SUBS        R4, R0, #0 
    /*0000c154*/ BNE         H264E_SetSliceSplit_xc13c
    /*0000c158*/ MOV         R0, R6 
    /*0000c15c*/ BL          0x000000000000C15C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000c160*/ SUBS        R4, R0, #0 
    /*0000c164*/ BNE         H264E_SetSliceSplit_xc13c
    /*0000c168*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000c16c*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000c170*/ ADD         R3, R7, R5, LSL #2 
    /*0000c174*/ ADD         R1, SP, #12 
    /*0000c178*/ LDR         R9, [R3, #64]               @ 0x40 
    /*0000c17c*/ ADD         R8, R9, #9792               @ 0x2640 
    /*0000c180*/ ADD         R8, R8, #40                 @ 0x28 
    /*0000c184*/ MOV         R0, R8 
    /*0000c188*/ BL          0x000000000000C188          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c18c*/ MOV         R1, R6 
    /*0000c190*/ MOV         R0, R9 
    /*0000c194*/ BL          0x000000000000C194          @ H264eCheckSliceSplitCfg [R_ARM_CALL: .text+0xc05c] 
    /*0000c198*/ SUBS        R4, R0, #0 
    /*0000c19c*/ BNE         H264E_SetSliceSplit_xc1d0
    /*0000c1a0*/ ADD         R0, R9, #9536               @ 0x2540 
    /*0000c1a4*/ MOV         R1, R6 
    /*0000c1a8*/ MOV         R2, #8 
    /*0000c1ac*/ ADD         R0, R0, #28 
    /*0000c1b0*/ BL          0x000000000000C1B0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000c1b4*/ LDR         R3, [R7, R5, LSL #2] 
    /*0000c1b8*/ ADD         R1, SP, #12 
    /*0000c1bc*/ MOV         R0, R8 
    /*0000c1c0*/ ADD         R3, R3, #1 
    /*0000c1c4*/ STR         R3, [R7, R5, LSL #2] 
    /*0000c1c8*/ BL          0x000000000000C1C8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c1cc*/ B           H264E_SetSliceSplit_xc13c
    H264E_SetSliceSplit_xc1d0:
    /*0000c1d0*/ MOVW        R3, #3862                   @ 0xf16 
    /*0000c1d4*/ MOV         R1, #10 
    /*0000c1d8*/ STR         R3, [SP] 
    /*0000c1dc*/ MOVW        R2, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1da8] 
    /*0000c1e0*/ LDR         R3, [PC, #24]               @ 0x000000000000c200 
    /*0000c1e4*/ MOVT        R2, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1da8] 
    /*0000c1e8*/ MOV         R0, #3 
    /*0000c1ec*/ BL          0x000000000000C1EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c1f0*/ ADD         R1, SP, #12 
    /*0000c1f4*/ MOV         R0, R8 
    /*0000c1f8*/ BL          0x000000000000C1F8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c1fc*/ B           H264E_SetSliceSplit_xc13c
    /*0000c200*/ @           <UNDEFINED> instruction: 0x000005bc 
FUNC_END H264E_SetSliceSplit


FUNC_BEGIN H264eCheckInterPredCfg
    /*0000c204*/ PUSH        {R4, LR} 
    /*0000c208*/ SUB         SP, SP, #8 
    /*0000c20c*/ MOV         R4, R0 
    /*0000c210*/ BL          0x000000000000C210          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000c214*/ CMP         R0, #0 
    /*0000c218*/ BNE         H264eCheckInterPredCfg_xc260
    /*0000c21c*/ LDR         R3, [R4, #8] 
    /*0000c220*/ CMP         R3, #1 
    /*0000c224*/ MOVWNE      R3, #3932                   @ 0xf5c 
    /*0000c228*/ MOVWNE      R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1de8] 
    /*0000c22c*/ STRNE       R3, [SP] 
    /*0000c230*/ MOVTNE      R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1de8] 
    /*0000c234*/ BNE         H264eCheckInterPredCfg_xc278
    /*0000c238*/ LDR         R3, [R4, #20] 
    /*0000c23c*/ CMP         R3, #1 
    /*0000c240*/ MOVWHI      R3, #3941                   @ 0xf65 
    /*0000c244*/ MOVWHI      R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e34] 
    /*0000c248*/ STRHI       R3, [SP] 
    /*0000c24c*/ MOVTHI      R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e34] 
    /*0000c250*/ BHI         H264eCheckInterPredCfg_xc278
    /*0000c254*/ LDR         R3, [R4, #24] 
    /*0000c258*/ CMP         R3, #1 
    /*0000c25c*/ BHI         H264eCheckInterPredCfg_xc268
    H264eCheckInterPredCfg_xc260:
    /*0000c260*/ ADD         SP, SP, #8 
    /*0000c264*/ POP         {R4, PC} 
    H264eCheckInterPredCfg_xc268:
    /*0000c268*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e88] 
    /*0000c26c*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e88] 
    /*0000c270*/ MOVW        R3, #3949                   @ 0xf6d 
    /*0000c274*/ STR         R3, [SP] 
    H264eCheckInterPredCfg_xc278:
    /*0000c278*/ LDR         R3, [PC, #20]               @ 0x000000000000c294 
    /*0000c27c*/ MOV         R1, #10 
    /*0000c280*/ MOV         R0, #3 
    /*0000c284*/ BL          0x000000000000C284          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c288*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000c28c*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000c290*/ B           H264eCheckInterPredCfg_xc260
    /*0000c294*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END H264eCheckInterPredCfg


FUNC_BEGIN H264E_SetInterPred
    /*0000c298*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000c29c*/ SUB         SP, SP, #20 
    /*0000c2a0*/ MOV         R6, R1 
    /*0000c2a4*/ MOV         R5, R0 
    /*0000c2a8*/ BL          0x000000000000C2A8          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000c2ac*/ SUBS        R4, R0, #0 
    /*0000c2b0*/ BEQ         H264E_SetInterPred_xc2c0
    H264E_SetInterPred_xc2b4:
    /*0000c2b4*/ MOV         R0, R4 
    /*0000c2b8*/ ADD         SP, SP, #20 
    /*0000c2bc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_SetInterPred_xc2c0:
    /*0000c2c0*/ MOV         R0, R5 
    /*0000c2c4*/ BL          0x000000000000C2C4          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000c2c8*/ SUBS        R4, R0, #0 
    /*0000c2cc*/ BNE         H264E_SetInterPred_xc2b4
    /*0000c2d0*/ MOV         R0, R6 
    /*0000c2d4*/ BL          0x000000000000C2D4          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000c2d8*/ SUBS        R4, R0, #0 
    /*0000c2dc*/ BNE         H264E_SetInterPred_xc2b4
    /*0000c2e0*/ MOVW        R8, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000c2e4*/ MOVT        R8, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000c2e8*/ ADD         R3, R8, R5, LSL #2 
    /*0000c2ec*/ MOV         R0, R6 
    /*0000c2f0*/ LDR         R7, [R3, #64]               @ 0x40 
    /*0000c2f4*/ LDR         R2, [R7, #980]              @ 0x3d4 
    /*0000c2f8*/ LDR         R1, [R7, #976]              @ 0x3d0 
    /*0000c2fc*/ BL          0x000000000000C2FC          @ H264eCheckInterPredCfg [R_ARM_CALL: .text+0xc204] 
    /*0000c300*/ SUBS        R4, R0, #0 
    /*0000c304*/ BNE         H264E_SetInterPred_xc380
    /*0000c308*/ ADD         R9, R7, #9792               @ 0x2640 
    /*0000c30c*/ ADD         R1, SP, #12 
    /*0000c310*/ ADD         R9, R9, #40                 @ 0x28 
    /*0000c314*/ MOV         R0, R9 
    /*0000c318*/ BL          0x000000000000C318          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c31c*/ LDR         R2, [R6, #24] 
    /*0000c320*/ ADD         R3, R7, #8192               @ 0x2000 
    /*0000c324*/ ADD         R7, R7, #12288              @ 0x3000 
    /*0000c328*/ MOV         IP, #1 
    /*0000c32c*/ MOV         R0, R9 
    /*0000c330*/ STR         R2, [R3, #1420]             @ 0x58c 
    /*0000c334*/ ADD         R1, SP, #12 
    /*0000c338*/ LDR         LR, [R6, #8] 
    /*0000c33c*/ LDR         R2, [R8, R5, LSL #2] 
    /*0000c340*/ STR         LR, [R3, #1404]             @ 0x57c 
    /*0000c344*/ ADD         R2, R2, IP 
    /*0000c348*/ LDR         LR, [R6, #12] 
    /*0000c34c*/ STR         LR, [R3, #1408]             @ 0x580 
    /*0000c350*/ LDR         LR, [R6, #16] 
    /*0000c354*/ STR         LR, [R3, #1412]             @ 0x584 
    /*0000c358*/ LDR         LR, [R6, #20] 
    /*0000c35c*/ STR         LR, [R3, #1416]             @ 0x588 
    /*0000c360*/ LDR         LR, [R6] 
    /*0000c364*/ STR         LR, [R3, #1396]             @ 0x574 
    /*0000c368*/ LDR         LR, [R6, #4] 
    /*0000c36c*/ STR         R2, [R8, R5, LSL #2] 
    /*0000c370*/ STR         LR, [R3, #1400]             @ 0x578 
    /*0000c374*/ STR         IP, [R7, #1356]             @ 0x54c 
    /*0000c378*/ BL          0x000000000000C378          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c37c*/ B           H264E_SetInterPred_xc2b4
    H264E_SetInterPred_xc380:
    /*0000c380*/ MOVW        R3, #3992                   @ 0xf98 
    /*0000c384*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ed8] 
    /*0000c388*/ STR         R3, [SP] 
    /*0000c38c*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ed8] 
    /*0000c390*/ LDR         R3, [PC, #12]               @ 0x000000000000c3a4 
    /*0000c394*/ MOV         R1, #10 
    /*0000c398*/ MOV         R0, #3 
    /*0000c39c*/ BL          0x000000000000C39C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c3a0*/ B           H264E_SetInterPred_xc2b4
    /*0000c3a4*/ ANDEQ       R0, R0, R8, ROR #11 
FUNC_END H264E_SetInterPred


FUNC_BEGIN H264eCheckTransCfg
    /*0000c3a8*/ PUSH        {R4, R5, LR} 
    /*0000c3ac*/ SUB         SP, SP, #12 
    /*0000c3b0*/ MOV         R5, R1 
    /*0000c3b4*/ MOV         R4, R0 
    /*0000c3b8*/ BL          0x000000000000C3B8          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000c3bc*/ CMP         R0, #0 
    /*0000c3c0*/ BNE         H264eCheckTransCfg_xc458
    /*0000c3c4*/ LDR         R2, [R4] 
    /*0000c3c8*/ CMP         R2, #2 
    /*0000c3cc*/ MOVWHI      R3, #4169                   @ 0x1049 
    /*0000c3d0*/ MOVWHI      R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f1c] 
    /*0000c3d4*/ STRHI       R3, [SP] 
    /*0000c3d8*/ MOVTHI      R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f1c] 
    /*0000c3dc*/ BHI         H264eCheckTransCfg_xc47c
    /*0000c3e0*/ LDR         R1, [R4, #4] 
    /*0000c3e4*/ CMP         R1, #2 
    /*0000c3e8*/ MOVWHI      R3, #4177                   @ 0x1051 
    /*0000c3ec*/ MOVWHI      R2, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f60] 
    /*0000c3f0*/ STRHI       R3, [SP] 
    /*0000c3f4*/ MOVTHI      R2, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f60] 
    /*0000c3f8*/ BHI         H264eCheckTransCfg_xc47c
    /*0000c3fc*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*0000c400*/ ADD         R3, R3, #12 
    /*0000c404*/ CMP         R3, #24 
    /*0000c408*/ MOVWHI      R3, #4185                   @ 0x1059 
    /*0000c40c*/ MOVWHI      R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fa4] 
    /*0000c410*/ STRHI       R3, [SP] 
    /*0000c414*/ MOVTHI      R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fa4] 
    /*0000c418*/ BHI         H264eCheckTransCfg_xc47c
    /*0000c41c*/ CMP         R5, #3 
    /*0000c420*/ MOVWHI      R3, #4193                   @ 0x1061 
    /*0000c424*/ MOVWHI      R2, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fe8] 
    /*0000c428*/ STRHI       R3, [SP] 
    /*0000c42c*/ MOVTHI      R2, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fe8] 
    /*0000c430*/ BHI         H264eCheckTransCfg_xc47c
    /*0000c434*/ LDR         R3, [R4, #8] 
    /*0000c438*/ CMP         R3, #0 
    /*0000c43c*/ MOVWNE      R3, #4202                   @ 0x106a 
    /*0000c440*/ MOVWNE      R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2028] 
    /*0000c444*/ STRNE       R3, [SP] 
    /*0000c448*/ MOVTNE      R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2028] 
    /*0000c44c*/ BNE         H264eCheckTransCfg_xc47c
    /*0000c450*/ CMP         R5, #1 
    /*0000c454*/ BLS         H264eCheckTransCfg_xc460
    H264eCheckTransCfg_xc458:
    /*0000c458*/ ADD         SP, SP, #12 
    /*0000c45c*/ POP         {R4, R5, PC} 
    H264eCheckTransCfg_xc460:
    /*0000c460*/ CMP         R2, #1 
    /*0000c464*/ CMPEQ       R1, #1 
    /*0000c468*/ BEQ         H264eCheckTransCfg_xc458
    /*0000c46c*/ MOVW        R2, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2070] 
    /*0000c470*/ MOVT        R2, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2070] 
    /*0000c474*/ MOVW        R3, #4225                   @ 0x1081 
    /*0000c478*/ STR         R3, [SP] 
    H264eCheckTransCfg_xc47c:
    /*0000c47c*/ LDR         R3, [PC, #20]               @ 0x000000000000c498 
    /*0000c480*/ MOV         R1, #10 
    /*0000c484*/ MOV         R0, #3 
    /*0000c488*/ BL          0x000000000000C488          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c48c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000c490*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000c494*/ B           H264eCheckTransCfg_xc458
    /*0000c498*/ STRDEQ      R0, [R0], -IP 
FUNC_END H264eCheckTransCfg


FUNC_BEGIN H264E_SetTrans
    /*0000c49c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000c4a0*/ SUB         SP, SP, #20 
    /*0000c4a4*/ MOV         R6, R1 
    /*0000c4a8*/ MOV         R5, R0 
    /*0000c4ac*/ BL          0x000000000000C4AC          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000c4b0*/ SUBS        R4, R0, #0 
    /*0000c4b4*/ BEQ         H264E_SetTrans_xc4c4
    H264E_SetTrans_xc4b8:
    /*0000c4b8*/ MOV         R0, R4 
    /*0000c4bc*/ ADD         SP, SP, #20 
    /*0000c4c0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_SetTrans_xc4c4:
    /*0000c4c4*/ MOV         R0, R5 
    /*0000c4c8*/ BL          0x000000000000C4C8          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000c4cc*/ SUBS        R4, R0, #0 
    /*0000c4d0*/ BNE         H264E_SetTrans_xc4b8
    /*0000c4d4*/ MOV         R0, R6 
    /*0000c4d8*/ BL          0x000000000000C4D8          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000c4dc*/ SUBS        R4, R0, #0 
    /*0000c4e0*/ BNE         H264E_SetTrans_xc4b8
    /*0000c4e4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000c4e8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000c4ec*/ ADD         R7, R3, R5, LSL #2 
    /*0000c4f0*/ MOV         R0, R6 
    /*0000c4f4*/ LDR         R8, [R7, #64]               @ 0x40 
    /*0000c4f8*/ LDR         R1, [R8, #968]              @ 0x3c8 
    /*0000c4fc*/ BL          0x000000000000C4FC          @ H264eCheckTransCfg [R_ARM_CALL: .text+0xc3a8] 
    /*0000c500*/ SUBS        R4, R0, #0 
    /*0000c504*/ BNE         H264E_SetTrans_xc5a8
    /*0000c508*/ ADD         R9, R8, #9792               @ 0x2640 
    /*0000c50c*/ ADD         R1, SP, #12 
    /*0000c510*/ ADD         R9, R9, #40                 @ 0x28 
    /*0000c514*/ MOV         R0, R9 
    /*0000c518*/ BL          0x000000000000C518          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c51c*/ ADD         R0, R8, #9600               @ 0x2580 
    /*0000c520*/ MOV         R1, R6 
    /*0000c524*/ MOV         R2, #144                    @ 0x90 
    /*0000c528*/ ADD         R0, R0, #16 
    /*0000c52c*/ BL          0x000000000000C52C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000c530*/ ADD         R2, R8, #12288              @ 0x3000 
    /*0000c534*/ LDR         R3, [R7, #140]              @ 0x8c 
    /*0000c538*/ MOV         IP, #1 
    /*0000c53c*/ MOV         R0, R9 
    /*0000c540*/ ADD         R1, SP, #12 
    /*0000c544*/ STR         IP, [R2, #1360]             @ 0x550 
    /*0000c548*/ ADD         R3, R3, IP 
    /*0000c54c*/ STR         R3, [R7, #140]              @ 0x8c 
    /*0000c550*/ BL          0x000000000000C550          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c554*/ ADD         R3, R8, #8192               @ 0x2000 
    /*0000c558*/ LDR         R6, [R3, #2160]             @ 0x870 
    /*0000c55c*/ CMP         R6, #1 
    /*0000c560*/ BNE         H264E_SetTrans_xc4b8
    /*0000c564*/ MOV         R0, #19 
    /*0000c568*/ BL          0x000000000000C568          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c56c*/ MOV         R1, R6 
    /*0000c570*/ LDR         R3, [R0, #56]               @ 0x38 
    /*0000c574*/ MOV         R0, R5 
    /*0000c578*/ BLX         R3 
    /*0000c57c*/ CMP         R0, #0 
    /*0000c580*/ BEQ         H264E_SetTrans_xc4b8
    /*0000c584*/ MOVW        R3, #4314                   @ 0x10da 
    /*0000c588*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1144] 
    /*0000c58c*/ STR         R3, [SP] 
    /*0000c590*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1144] 
    /*0000c594*/ LDR         R3, [PC, #48]               @ 0x000000000000c5cc 
    /*0000c598*/ MOV         R1, #10 
    /*0000c59c*/ MOV         R0, #4 
    /*0000c5a0*/ BL          0x000000000000C5A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c5a4*/ B           H264E_SetTrans_xc4b8
    H264E_SetTrans_xc5a8:
    /*0000c5a8*/ MOVW        R3, #4292                   @ 0x10c4 
    /*0000c5ac*/ MOVW        R2, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20c4] 
    /*0000c5b0*/ STR         R3, [SP] 
    /*0000c5b4*/ MOVT        R2, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20c4] 
    /*0000c5b8*/ LDR         R3, [PC, #12]               @ 0x000000000000c5cc 
    /*0000c5bc*/ MOV         R1, #10 
    /*0000c5c0*/ MOV         R0, #3 
    /*0000c5c4*/ BL          0x000000000000C5C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c5c8*/ B           H264E_SetTrans_xc4b8
    /*0000c5cc*/ ANDEQ       R0, R0, R0, LSL R6 
FUNC_END H264E_SetTrans


FUNC_BEGIN H264eCheckEntropyCfg
    /*0000c5d0*/ PUSH        {R4, R5, LR} 
    /*0000c5d4*/ SUB         SP, SP, #12 
    /*0000c5d8*/ MOV         R5, R1 
    /*0000c5dc*/ MOV         R4, R0 
    /*0000c5e0*/ BL          0x000000000000C5E0          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000c5e4*/ CMP         R0, #0 
    /*0000c5e8*/ BNE         H264eCheckEntropyCfg_xc678
    /*0000c5ec*/ LDR         R3, [R4] 
    /*0000c5f0*/ CMP         R3, #1 
    /*0000c5f4*/ MOVWHI      R3, #4379                   @ 0x111b 
    /*0000c5f8*/ MOVWHI      R2, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20fc] 
    /*0000c5fc*/ STRHI       R3, [SP] 
    /*0000c600*/ MOVTHI      R2, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20fc] 
    /*0000c604*/ BHI         H264eCheckEntropyCfg_xc690
    /*0000c608*/ LDR         R2, [R4, #4] 
    /*0000c60c*/ CMP         R2, #1 
    /*0000c610*/ BHI         H264eCheckEntropyCfg_xc680
    /*0000c614*/ LDR         R1, [R4, #8] 
    /*0000c618*/ CMP         R1, #1 
    /*0000c61c*/ MOVWHI      R3, #4395                   @ 0x112b 
    /*0000c620*/ MOVWHI      R2, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x218c] 
    /*0000c624*/ STRHI       R3, [SP] 
    /*0000c628*/ MOVTHI      R2, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x218c] 
    /*0000c62c*/ BHI         H264eCheckEntropyCfg_xc690
    /*0000c630*/ LDR         IP, [R4, #12] 
    /*0000c634*/ CMP         IP, #2 
    /*0000c638*/ MOVWHI      R3, #4403                   @ 0x1133 
    /*0000c63c*/ MOVWHI      R2, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x21d4] 
    /*0000c640*/ STRHI       R3, [SP] 
    /*0000c644*/ MOVTHI      R2, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x21d4] 
    /*0000c648*/ BHI         H264eCheckEntropyCfg_xc690
    /*0000c64c*/ CMP         R5, #3 
    /*0000c650*/ MOVWHI      R3, #4411                   @ 0x113b 
    /*0000c654*/ MOVWHI      R2, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fe8] 
    /*0000c658*/ STRHI       R3, [SP] 
    /*0000c65c*/ MOVTHI      R2, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fe8] 
    /*0000c660*/ BHI         H264eCheckEntropyCfg_xc690
    /*0000c664*/ CMP         R5, #0 
    /*0000c668*/ BNE         H264eCheckEntropyCfg_xc678
    /*0000c66c*/ ORR         R3, R3, R2 
    /*0000c670*/ ORRS        R3, R3, R1 
    /*0000c674*/ BNE         H264eCheckEntropyCfg_xc6ac
    H264eCheckEntropyCfg_xc678:
    /*0000c678*/ ADD         SP, SP, #12 
    /*0000c67c*/ POP         {R4, R5, PC} 
    H264eCheckEntropyCfg_xc680:
    /*0000c680*/ MOVW        R2, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2144] 
    /*0000c684*/ MOVT        R2, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2144] 
    /*0000c688*/ MOVW        R3, #4387                   @ 0x1123 
    /*0000c68c*/ STR         R3, [SP] 
    H264eCheckEntropyCfg_xc690:
    /*0000c690*/ LDR         R3, [PC, #68]               @ 0x000000000000c6dc 
    /*0000c694*/ MOV         R1, #10 
    /*0000c698*/ MOV         R0, #3 
    /*0000c69c*/ BL          0x000000000000C69C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c6a0*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000c6a4*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000c6a8*/ B           H264eCheckEntropyCfg_xc678
    H264eCheckEntropyCfg_xc6ac:
    /*0000c6ac*/ STR         R0, [SP, #4] 
    /*0000c6b0*/ MOVW        R3, #4424                   @ 0x1148 
    /*0000c6b4*/ MOVW        R2, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2218] 
    /*0000c6b8*/ STR         R3, [SP] 
    /*0000c6bc*/ MOVT        R2, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2218] 
    /*0000c6c0*/ LDR         R3, [PC, #20]               @ 0x000000000000c6dc 
    /*0000c6c4*/ MOV         R1, #10 
    /*0000c6c8*/ MOV         R0, #3 
    /*0000c6cc*/ BL          0x000000000000C6CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c6d0*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000c6d4*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000c6d8*/ B           H264eCheckEntropyCfg_xc678
    /*0000c6dc*/ ANDEQ       R0, R0, R0, LSR #12 
FUNC_END H264eCheckEntropyCfg


FUNC_BEGIN H264E_SetEntropy
    /*0000c6e0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000c6e4*/ SUB         SP, SP, #20 
    /*0000c6e8*/ MOV         R6, R1 
    /*0000c6ec*/ MOV         R5, R0 
    /*0000c6f0*/ BL          0x000000000000C6F0          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000c6f4*/ SUBS        R4, R0, #0 
    /*0000c6f8*/ BEQ         H264E_SetEntropy_xc708
    H264E_SetEntropy_xc6fc:
    /*0000c6fc*/ MOV         R0, R4 
    /*0000c700*/ ADD         SP, SP, #20 
    /*0000c704*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_SetEntropy_xc708:
    /*0000c708*/ MOV         R0, R5 
    /*0000c70c*/ BL          0x000000000000C70C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000c710*/ SUBS        R4, R0, #0 
    /*0000c714*/ BNE         H264E_SetEntropy_xc6fc
    /*0000c718*/ MOV         R0, R6 
    /*0000c71c*/ BL          0x000000000000C71C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000c720*/ SUBS        R4, R0, #0 
    /*0000c724*/ BNE         H264E_SetEntropy_xc6fc
    /*0000c728*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000c72c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000c730*/ ADD         R7, R3, R5, LSL #2 
    /*0000c734*/ MOV         R0, R6 
    /*0000c738*/ LDR         R8, [R7, #64]               @ 0x40 
    /*0000c73c*/ LDR         R1, [R8, #968]              @ 0x3c8 
    /*0000c740*/ BL          0x000000000000C740          @ H264eCheckEntropyCfg [R_ARM_CALL: .text+0xc5d0] 
    /*0000c744*/ SUBS        R4, R0, #0 
    /*0000c748*/ BNE         H264E_SetEntropy_xc7e0
    /*0000c74c*/ ADD         R9, R8, #9792               @ 0x2640 
    /*0000c750*/ ADD         R1, SP, #12 
    /*0000c754*/ ADD         R9, R9, #40                 @ 0x28 
    /*0000c758*/ MOV         R0, R9 
    /*0000c75c*/ BL          0x000000000000C75C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c760*/ ADD         R0, R8, #9728               @ 0x2600 
    /*0000c764*/ MOV         R1, R6 
    /*0000c768*/ MOV         R2, #16 
    /*0000c76c*/ ADD         R0, R0, #32 
    /*0000c770*/ ADD         R8, R8, #8192               @ 0x2000 
    /*0000c774*/ BL          0x000000000000C774          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000c778*/ LDR         R3, [R7, #140]              @ 0x8c 
    /*0000c77c*/ MOV         R0, R9 
    /*0000c780*/ ADD         R1, SP, #12 
    /*0000c784*/ ADD         R3, R3, #1 
    /*0000c788*/ STR         R3, [R7, #140]              @ 0x8c 
    /*0000c78c*/ BL          0x000000000000C78C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c790*/ LDR         R6, [R8, #2160]             @ 0x870 
    /*0000c794*/ CMP         R6, #1 
    /*0000c798*/ BNE         H264E_SetEntropy_xc6fc
    /*0000c79c*/ MOV         R0, #19 
    /*0000c7a0*/ BL          0x000000000000C7A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c7a4*/ MOV         R1, R6 
    /*0000c7a8*/ LDR         R3, [R0, #56]               @ 0x38 
    /*0000c7ac*/ MOV         R0, R5 
    /*0000c7b0*/ BLX         R3 
    /*0000c7b4*/ CMP         R0, #0 
    /*0000c7b8*/ BEQ         H264E_SetEntropy_xc6fc
    /*0000c7bc*/ MOVW        R3, #4474                   @ 0x117a 
    /*0000c7c0*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1144] 
    /*0000c7c4*/ STR         R3, [SP] 
    /*0000c7c8*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1144] 
    /*0000c7cc*/ LDR         R3, [PC, #48]               @ 0x000000000000c804 
    /*0000c7d0*/ MOV         R1, #10 
    /*0000c7d4*/ MOV         R0, #4 
    /*0000c7d8*/ BL          0x000000000000C7D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c7dc*/ B           H264E_SetEntropy_xc6fc
    H264E_SetEntropy_xc7e0:
    /*0000c7e0*/ MOVW        R3, #4450                   @ 0x1162 
    /*0000c7e4*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x226c] 
    /*0000c7e8*/ STR         R3, [SP] 
    /*0000c7ec*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x226c] 
    /*0000c7f0*/ LDR         R3, [PC, #12]               @ 0x000000000000c804 
    /*0000c7f4*/ MOV         R1, #10 
    /*0000c7f8*/ MOV         R0, #3 
    /*0000c7fc*/ BL          0x000000000000C7FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c800*/ B           H264E_SetEntropy_xc6fc
    /*0000c804*/ ANDEQ       R0, R0, R8, LSR R6 
FUNC_END H264E_SetEntropy


FUNC_BEGIN H264eCheckPocCfg
    /*0000c808*/ PUSH        {R4, R5, R6, LR} 
    /*0000c80c*/ SUB         SP, SP, #8 
    /*0000c810*/ MOV         R5, R1 
    /*0000c814*/ MOV         R6, R0 
    /*0000c818*/ BL          0x000000000000C818          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000c81c*/ SUBS        R4, R0, #0 
    /*0000c820*/ BEQ         H264eCheckPocCfg_xc830
    H264eCheckPocCfg_xc824:
    /*0000c824*/ MOV         R0, R4 
    /*0000c828*/ ADD         SP, SP, #8 
    /*0000c82c*/ POP         {R4, R5, R6, PC} 
    H264eCheckPocCfg_xc830:
    /*0000c830*/ MOV         R0, R5 
    /*0000c834*/ BL          0x000000000000C834          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000c838*/ SUBS        R4, R0, #0 
    /*0000c83c*/ BNE         H264eCheckPocCfg_xc824
    /*0000c840*/ LDR         R3, [R6] 
    /*0000c844*/ CMP         R3, #2 
    /*0000c848*/ MOVWHI      R3, #4506                   @ 0x119a 
    /*0000c84c*/ MOVWHI      R2, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22a8] 
    /*0000c850*/ STRHI       R3, [SP] 
    /*0000c854*/ MOVTHI      R2, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22a8] 
    /*0000c858*/ BHI         H264eCheckPocCfg_xc898
    /*0000c85c*/ LDR         R3, [R5] 
    /*0000c860*/ CMP         R3, #4 
    /*0000c864*/ BEQ         H264eCheckPocCfg_xc8b4
    H264eCheckPocCfg_xc868:
    /*0000c868*/ CMP         R3, #5 
    /*0000c86c*/ BNE         H264eCheckPocCfg_xc824
    /*0000c870*/ BL          0x000000000000C870          @ H264E_DRV_LowDelayBSupport [R_ARM_CALL: .text+0x128d8] 
    /*0000c874*/ CMP         R0, #0 
    /*0000c878*/ BEQ         H264eCheckPocCfg_xc824
    H264eCheckPocCfg_xc87c:
    /*0000c87c*/ LDR         R3, [R6] 
    /*0000c880*/ CMP         R3, #2 
    /*0000c884*/ BNE         H264eCheckPocCfg_xc824
    /*0000c888*/ MOVW        R2, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22f0] 
    /*0000c88c*/ MOVT        R2, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22f0] 
    /*0000c890*/ MOVW        R3, #4517                   @ 0x11a5 
    /*0000c894*/ STR         R3, [SP] 
    H264eCheckPocCfg_xc898:
    /*0000c898*/ LDR         R3, [PC, #40]               @ 0x000000000000c8c8 
    /*0000c89c*/ MOV         R1, #10 
    /*0000c8a0*/ MOV         R0, #3 
    /*0000c8a4*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000c8a8*/ BL          0x000000000000C8A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c8ac*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000c8b0*/ B           H264eCheckPocCfg_xc824
    H264eCheckPocCfg_xc8b4:
    /*0000c8b4*/ BL          0x000000000000C8B4          @ H264E_DRV_BFrameSupport [R_ARM_CALL: .text+0x128e0] 
    /*0000c8b8*/ CMP         R0, #0 
    /*0000c8bc*/ BNE         H264eCheckPocCfg_xc87c
    /*0000c8c0*/ LDR         R3, [R5] 
    /*0000c8c4*/ B           H264eCheckPocCfg_xc868
    /*0000c8c8*/ ANDEQ       R0, R0, IP, ASR #12 
FUNC_END H264eCheckPocCfg


FUNC_BEGIN H264E_SetPoc
    /*0000c8cc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000c8d0*/ SUB         SP, SP, #20 
    /*0000c8d4*/ MOV         R6, R1 
    /*0000c8d8*/ MOV         R5, R0 
    /*0000c8dc*/ BL          0x000000000000C8DC          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000c8e0*/ SUBS        R4, R0, #0 
    /*0000c8e4*/ BEQ         H264E_SetPoc_xc8f4
    H264E_SetPoc_xc8e8:
    /*0000c8e8*/ MOV         R0, R4 
    /*0000c8ec*/ ADD         SP, SP, #20 
    /*0000c8f0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_SetPoc_xc8f4:
    /*0000c8f4*/ MOV         R0, R5 
    /*0000c8f8*/ BL          0x000000000000C8F8          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000c8fc*/ SUBS        R4, R0, #0 
    /*0000c900*/ BNE         H264E_SetPoc_xc8e8
    /*0000c904*/ MOV         R0, R6 
    /*0000c908*/ BL          0x000000000000C908          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000c90c*/ SUBS        R4, R0, #0 
    /*0000c910*/ BNE         H264E_SetPoc_xc8e8
    /*0000c914*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000c918*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000c91c*/ ADD         R7, R3, R5, LSL #2 
    /*0000c920*/ MOV         R0, R6 
    /*0000c924*/ LDR         R8, [R7, #64]               @ 0x40 
    /*0000c928*/ ADD         R1, R8, #14336              @ 0x3800 
    /*0000c92c*/ ADD         R1, R1, #36                 @ 0x24 
    /*0000c930*/ BL          0x000000000000C930          @ H264eCheckPocCfg [R_ARM_CALL: .text+0xc808] 
    /*0000c934*/ SUBS        R4, R0, #0 
    /*0000c938*/ BNE         H264E_SetPoc_xc9c8
    /*0000c93c*/ ADD         R9, R8, #9792               @ 0x2640 
    /*0000c940*/ ADD         R1, SP, #12 
    /*0000c944*/ ADD         R9, R9, #40                 @ 0x28 
    /*0000c948*/ MOV         R0, R9 
    /*0000c94c*/ BL          0x000000000000C94C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c950*/ LDR         IP, [R6] 
    /*0000c954*/ ADD         R2, R8, #4096               @ 0x1000 
    /*0000c958*/ LDR         R3, [R7, #140]              @ 0x8c 
    /*0000c95c*/ ADD         R8, R8, #8192               @ 0x2000 
    /*0000c960*/ MOV         R0, R9 
    /*0000c964*/ ADD         R1, SP, #12 
    /*0000c968*/ STR         IP, [R2, #3624]             @ 0xe28 
    /*0000c96c*/ ADD         R3, R3, #1 
    /*0000c970*/ STR         R3, [R7, #140]              @ 0x8c 
    /*0000c974*/ BL          0x000000000000C974          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c978*/ LDR         R6, [R8, #2160]             @ 0x870 
    /*0000c97c*/ CMP         R6, #1 
    /*0000c980*/ BNE         H264E_SetPoc_xc8e8
    /*0000c984*/ MOV         R0, #19 
    /*0000c988*/ BL          0x000000000000C988          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c98c*/ MOV         R1, R6 
    /*0000c990*/ LDR         R3, [R0, #56]               @ 0x38 
    /*0000c994*/ MOV         R0, R5 
    /*0000c998*/ BLX         R3 
    /*0000c99c*/ CMP         R0, #0 
    /*0000c9a0*/ BEQ         H264E_SetPoc_xc8e8
    /*0000c9a4*/ MOVW        R3, #4564                   @ 0x11d4 
    /*0000c9a8*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1144] 
    /*0000c9ac*/ STR         R3, [SP] 
    /*0000c9b0*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1144] 
    /*0000c9b4*/ LDR         R3, [PC, #48]               @ 0x000000000000c9ec 
    /*0000c9b8*/ MOV         R1, #10 
    /*0000c9bc*/ MOV         R0, #4 
    /*0000c9c0*/ BL          0x000000000000C9C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c9c4*/ B           H264E_SetPoc_xc8e8
    H264E_SetPoc_xc9c8:
    /*0000c9c8*/ MOVW        R3, #4543                   @ 0x11bf 
    /*0000c9cc*/ MOVW        R2, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2338] 
    /*0000c9d0*/ STR         R3, [SP] 
    /*0000c9d4*/ MOVT        R2, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2338] 
    /*0000c9d8*/ LDR         R3, [PC, #12]               @ 0x000000000000c9ec 
    /*0000c9dc*/ MOV         R1, #10 
    /*0000c9e0*/ MOV         R0, #3 
    /*0000c9e4*/ BL          0x000000000000C9E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c9e8*/ B           H264E_SetPoc_xc8e8
    /*0000c9ec*/ ANDEQ       R0, R0, R0, ROR #12 
FUNC_END H264E_SetPoc


FUNC_BEGIN H264eCheckDblkCfg
    /*0000c9f0*/ PUSH        {R4, LR} 
    /*0000c9f4*/ SUB         SP, SP, #8 
    /*0000c9f8*/ MOV         R4, R0 
    /*0000c9fc*/ BL          0x000000000000C9FC          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000ca00*/ CMP         R0, #0 
    /*0000ca04*/ BNE         H264eCheckDblkCfg_xca54
    /*0000ca08*/ LDR         R3, [R4] 
    /*0000ca0c*/ CMP         R3, #2 
    /*0000ca10*/ MOVWHI      R3, #4776                   @ 0x12a8 
    /*0000ca14*/ MOVWHI      R2, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2370] 
    /*0000ca18*/ STRHI       R3, [SP] 
    /*0000ca1c*/ MOVTHI      R2, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2370] 
    /*0000ca20*/ BHI         H264eCheckDblkCfg_xca6c
    /*0000ca24*/ LDR         R3, [R4, #4] 
    /*0000ca28*/ ADD         R3, R3, #6 
    /*0000ca2c*/ CMP         R3, #12 
    /*0000ca30*/ MOVWHI      R3, #4784                   @ 0x12b0 
    /*0000ca34*/ MOVWHI      R2, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23c0] 
    /*0000ca38*/ STRHI       R3, [SP] 
    /*0000ca3c*/ MOVTHI      R2, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23c0] 
    /*0000ca40*/ BHI         H264eCheckDblkCfg_xca6c
    /*0000ca44*/ LDR         R3, [R4, #8] 
    /*0000ca48*/ ADD         R3, R3, #6 
    /*0000ca4c*/ CMP         R3, #12 
    /*0000ca50*/ BHI         H264eCheckDblkCfg_xca5c
    H264eCheckDblkCfg_xca54:
    /*0000ca54*/ ADD         SP, SP, #8 
    /*0000ca58*/ POP         {R4, PC} 
    H264eCheckDblkCfg_xca5c:
    /*0000ca5c*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2410] 
    /*0000ca60*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2410] 
    /*0000ca64*/ MOVW        R3, #4792                   @ 0x12b8 
    /*0000ca68*/ STR         R3, [SP] 
    H264eCheckDblkCfg_xca6c:
    /*0000ca6c*/ LDR         R3, [PC, #20]               @ 0x000000000000ca88 
    /*0000ca70*/ MOV         R1, #10 
    /*0000ca74*/ MOV         R0, #3 
    /*0000ca78*/ BL          0x000000000000CA78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ca7c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000ca80*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000ca84*/ B           H264eCheckDblkCfg_xca54
    /*0000ca88*/ ANDEQ       R0, R0, R0, ROR R6 
FUNC_END H264eCheckDblkCfg


FUNC_BEGIN H264E_SetDblk
    /*0000ca8c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000ca90*/ SUB         SP, SP, #20 
    /*0000ca94*/ MOV         R6, R1 
    /*0000ca98*/ MOV         R5, R0 
    /*0000ca9c*/ BL          0x000000000000CA9C          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000caa0*/ SUBS        R4, R0, #0 
    /*0000caa4*/ BEQ         H264E_SetDblk_xcab4
    H264E_SetDblk_xcaa8:
    /*0000caa8*/ MOV         R0, R4 
    /*0000caac*/ ADD         SP, SP, #20 
    /*0000cab0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_SetDblk_xcab4:
    /*0000cab4*/ MOV         R0, R5 
    /*0000cab8*/ BL          0x000000000000CAB8          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000cabc*/ SUBS        R4, R0, #0 
    /*0000cac0*/ BNE         H264E_SetDblk_xcaa8
    /*0000cac4*/ MOV         R0, R6 
    /*0000cac8*/ BL          0x000000000000CAC8          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000cacc*/ SUBS        R4, R0, #0 
    /*0000cad0*/ BNE         H264E_SetDblk_xcaa8
    /*0000cad4*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000cad8*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000cadc*/ ADD         R3, R7, R5, LSL #2 
    /*0000cae0*/ MOV         R0, R6 
    /*0000cae4*/ LDR         R9, [R3, #64]               @ 0x40 
    /*0000cae8*/ BL          0x000000000000CAE8          @ H264eCheckDblkCfg [R_ARM_CALL: .text+0xc9f0] 
    /*0000caec*/ SUBS        R4, R0, #0 
    /*0000caf0*/ BNE         H264E_SetDblk_xcb34
    /*0000caf4*/ ADD         R8, R9, #9792               @ 0x2640 
    /*0000caf8*/ ADD         R1, SP, #12 
    /*0000cafc*/ ADD         R8, R8, #40                 @ 0x28 
    /*0000cb00*/ MOV         R0, R8 
    /*0000cb04*/ BL          0x000000000000CB04          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000cb08*/ MOV         R1, R6 
    /*0000cb0c*/ ADD         R0, R9, #9792               @ 0x2640 
    /*0000cb10*/ MOV         R2, #12 
    /*0000cb14*/ BL          0x000000000000CB14          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000cb18*/ LDR         R3, [R7, R5, LSL #2] 
    /*0000cb1c*/ MOV         R0, R8 
    /*0000cb20*/ ADD         R1, SP, #12 
    /*0000cb24*/ ADD         R3, R3, #1 
    /*0000cb28*/ STR         R3, [R7, R5, LSL #2] 
    /*0000cb2c*/ BL          0x000000000000CB2C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000cb30*/ B           H264E_SetDblk_xcaa8
    H264E_SetDblk_xcb34:
    /*0000cb34*/ MOVW        R3, #4818                   @ 0x12d2 
    /*0000cb38*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x245c] 
    /*0000cb3c*/ STR         R3, [SP] 
    /*0000cb40*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x245c] 
    /*0000cb44*/ LDR         R3, [PC, #12]               @ 0x000000000000cb58 
    /*0000cb48*/ MOV         R1, #10 
    /*0000cb4c*/ MOV         R0, #3 
    /*0000cb50*/ BL          0x000000000000CB50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cb54*/ B           H264E_SetDblk_xcaa8
    /*0000cb58*/ ANDEQ       R0, R0, R4, LSL #13 
FUNC_END H264E_SetDblk


FUNC_BEGIN great_common_divisor
    /*0000cb5c*/ PUSH        {R4, LR} 
    /*0000cb60*/ SUBS        R4, R1, #0 
    /*0000cb64*/ BNE         great_common_divisor_xcb70
    /*0000cb68*/ B           great_common_divisor_xcb8c
    great_common_divisor_xcb6c:
    /*0000cb6c*/ MOV         R4, R1 
    great_common_divisor_xcb70:
    /*0000cb70*/ MOV         R1, R4 
    /*0000cb74*/ BL          0x000000000000CB74          @ __aeabi_idivmod [R_ARM_CALL: +0x0] 
    /*0000cb78*/ MOV         R0, R4 
    /*0000cb7c*/ CMP         R1, #0 
    /*0000cb80*/ BNE         great_common_divisor_xcb6c
    great_common_divisor_xcb84:
    /*0000cb84*/ MOV         R0, R4 
    /*0000cb88*/ POP         {R4, PC} 
    great_common_divisor_xcb8c:
    /*0000cb8c*/ MOV         R4, R0 
    /*0000cb90*/ B           great_common_divisor_xcb84
FUNC_END great_common_divisor


FUNC_BEGIN CheckRelativePrime
    /*0000cb94*/ PUSH        {R4, LR} 
    /*0000cb98*/ SUBS        R4, R1, #0 
    /*0000cb9c*/ BNE         CheckRelativePrime_xcba8
    /*0000cba0*/ B           CheckRelativePrime_xcbcc
    CheckRelativePrime_xcba4:
    /*0000cba4*/ MOV         R4, R1 
    CheckRelativePrime_xcba8:
    /*0000cba8*/ MOV         R1, R4 
    /*0000cbac*/ BL          0x000000000000CBAC          @ __aeabi_idivmod [R_ARM_CALL: +0x0] 
    /*0000cbb0*/ MOV         R0, R4 
    /*0000cbb4*/ CMP         R1, #0 
    /*0000cbb8*/ BNE         CheckRelativePrime_xcba4
    CheckRelativePrime_xcbbc:
    /*0000cbbc*/ SUB         R0, R4, #1 
    /*0000cbc0*/ CLZ         R0, R0 
    /*0000cbc4*/ LSR         R0, R0, #5 
    /*0000cbc8*/ POP         {R4, PC} 
    CheckRelativePrime_xcbcc:
    /*0000cbcc*/ MOV         R4, R0 
    /*0000cbd0*/ B           CheckRelativePrime_xcbbc
FUNC_END CheckRelativePrime


FUNC_BEGIN H264eCheckVuiCfg
    /*0000cbd4*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000cbd8*/ SUB         SP, SP, #16 
    /*0000cbdc*/ MOV         R4, R0 
    /*0000cbe0*/ BL          0x000000000000CBE0          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000cbe4*/ SUBS        R5, R0, #0 
    /*0000cbe8*/ BNE         H264eCheckVuiCfg_xcc38
    /*0000cbec*/ LDRB        R3, [R4, #8] 
    /*0000cbf0*/ CMP         R3, #1 
    /*0000cbf4*/ BHI         H264eCheckVuiCfg_xcdb4
    /*0000cbf8*/ BEQ         H264eCheckVuiCfg_xcc44
    H264eCheckVuiCfg_xcbfc:
    /*0000cbfc*/ LDRB        R3, [R4] 
    /*0000cc00*/ CMP         R3, #1 
    /*0000cc04*/ BHI         H264eCheckVuiCfg_xcdcc
    /*0000cc08*/ BEQ         H264eCheckVuiCfg_xcc80
    H264eCheckVuiCfg_xcc0c:
    /*0000cc0c*/ LDRB        R3, [R4, #2] 
    /*0000cc10*/ CMP         R3, #1 
    /*0000cc14*/ BHI         H264eCheckVuiCfg_xcde4
    /*0000cc18*/ BEQ         H264eCheckVuiCfg_xcd04
    H264eCheckVuiCfg_xcc1c:
    /*0000cc1c*/ LDRB        R3, [R4, #20] 
    /*0000cc20*/ CMP         R3, #1 
    /*0000cc24*/ BHI         H264eCheckVuiCfg_xcd64
    /*0000cc28*/ BEQ         H264eCheckVuiCfg_xcd28
    H264eCheckVuiCfg_xcc2c:
    /*0000cc2c*/ LDRB        R3, [R4, #27] 
    /*0000cc30*/ CMP         R3, #1 
    /*0000cc34*/ BHI         H264eCheckVuiCfg_xcd9c
    H264eCheckVuiCfg_xcc38:
    /*0000cc38*/ MOV         R0, R5 
    /*0000cc3c*/ ADD         SP, SP, #16 
    /*0000cc40*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264eCheckVuiCfg_xcc44:
    /*0000cc44*/ LDR         R3, [R4, #12] 
    /*0000cc48*/ CMP         R3, #0 
    /*0000cc4c*/ BEQ         H264eCheckVuiCfg_xce14
    /*0000cc50*/ LDR         R3, [R4, #16] 
    /*0000cc54*/ CMP         R3, #0 
    /*0000cc58*/ BEQ         H264eCheckVuiCfg_xce2c
    /*0000cc5c*/ LDRB        R3, [R4, #9] 
    /*0000cc60*/ CMP         R3, #1 
    /*0000cc64*/ BLS         H264eCheckVuiCfg_xcbfc
    /*0000cc68*/ STR         R3, [SP, #4] 
    /*0000cc6c*/ MOVW        R2, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2568] 
    /*0000cc70*/ MOVW        R3, #4910                   @ 0x132e 
    /*0000cc74*/ MOVT        R2, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2568] 
    /*0000cc78*/ STR         R3, [SP] 
    /*0000cc7c*/ B           H264eCheckVuiCfg_xcd78
    H264eCheckVuiCfg_xcc80:
    /*0000cc80*/ LDRB        R3, [R4, #1] 
    /*0000cc84*/ CMP         R3, #255                    @ 0xff 
    /*0000cc88*/ BNE         H264eCheckVuiCfg_xcc0c
    /*0000cc8c*/ LDRH        R8, [R4, #4] 
    /*0000cc90*/ LDRH        R7, [R4, #6] 
    /*0000cc94*/ CMP         R8, #0 
    /*0000cc98*/ BEQ         H264eCheckVuiCfg_xce44
    /*0000cc9c*/ CMP         R7, #0 
    /*0000cca0*/ MOVNE       R0, R8 
    /*0000cca4*/ MOVNE       R6, R7 
    /*0000cca8*/ BNE         H264eCheckVuiCfg_xccb4
    /*0000ccac*/ B           H264eCheckVuiCfg_xce44
    H264eCheckVuiCfg_xccb0:
    /*0000ccb0*/ MOV         R6, R1 
    H264eCheckVuiCfg_xccb4:
    /*0000ccb4*/ MOV         R1, R6 
    /*0000ccb8*/ BL          0x000000000000CCB8          @ __aeabi_idivmod [R_ARM_CALL: +0x0] 
    /*0000ccbc*/ MOV         R0, R6 
    /*0000ccc0*/ CMP         R1, #0 
    /*0000ccc4*/ BNE         H264eCheckVuiCfg_xccb0
    /*0000ccc8*/ CMP         R6, #1 
    /*0000cccc*/ BEQ         H264eCheckVuiCfg_xcc0c
    /*0000ccd0*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28a0] 
    /*0000ccd4*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28a0] 
    /*0000ccd8*/ MOVW        R3, #4946                   @ 0x1352 
    /*0000ccdc*/ STR         R7, [SP, #8] 
    /*0000cce0*/ STR         R8, [SP, #4] 
    /*0000cce4*/ STR         R3, [SP] 
    H264eCheckVuiCfg_xcce8:
    /*0000cce8*/ LDR         R3, [PC, #392]              @ 0x000000000000ce78 
    /*0000ccec*/ MOV         R1, #10 
    /*0000ccf0*/ MOV         R0, #3 
    /*0000ccf4*/ MOVW        R5, #32771                  @ 0x8003 
    /*0000ccf8*/ BL          0x000000000000CCF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ccfc*/ MOVT        R5, #40970                  @ 0xa00a 
    /*0000cd00*/ B           H264eCheckVuiCfg_xcc38
    H264eCheckVuiCfg_xcd04:
    /*0000cd04*/ LDRB        R3, [R4, #3] 
    /*0000cd08*/ CMP         R3, #1 
    /*0000cd0c*/ BLS         H264eCheckVuiCfg_xcc1c
    /*0000cd10*/ STR         R3, [SP, #4] 
    /*0000cd14*/ MOVW        R2, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26bc] 
    /*0000cd18*/ MOVW        R3, #4966                   @ 0x1366 
    /*0000cd1c*/ MOVT        R2, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26bc] 
    /*0000cd20*/ STR         R3, [SP] 
    /*0000cd24*/ B           H264eCheckVuiCfg_xcd78
    H264eCheckVuiCfg_xcd28:
    /*0000cd28*/ LDRB        R3, [R4, #21] 
    /*0000cd2c*/ CMP         R3, #7 
    /*0000cd30*/ BHI         H264eCheckVuiCfg_xce60
    /*0000cd34*/ LDRB        R3, [R4, #22] 
    /*0000cd38*/ CMP         R3, #1 
    /*0000cd3c*/ BHI         H264eCheckVuiCfg_xcdfc
    /*0000cd40*/ LDRB        R3, [R4, #23] 
    /*0000cd44*/ CMP         R3, #1 
    /*0000cd48*/ BLS         H264eCheckVuiCfg_xcc2c
    /*0000cd4c*/ STR         R3, [SP, #4] 
    /*0000cd50*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x27f4] 
    /*0000cd54*/ MOVW        R3, #5002                   @ 0x138a 
    /*0000cd58*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0x27f4] 
    /*0000cd5c*/ STR         R3, [SP] 
    /*0000cd60*/ B           H264eCheckVuiCfg_xcd78
    H264eCheckVuiCfg_xcd64:
    /*0000cd64*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270c] 
    /*0000cd68*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270c] 
    /*0000cd6c*/ STR         R3, [SP, #4] 
    /*0000cd70*/ MOVW        R3, #4976                   @ 0x1370 
    /*0000cd74*/ STR         R3, [SP] 
    H264eCheckVuiCfg_xcd78:
    /*0000cd78*/ LDR         R3, [PC, #248]              @ 0x000000000000ce78 
    /*0000cd7c*/ MOV         R1, #10 
    /*0000cd80*/ MOV         R0, #3 
    /*0000cd84*/ MOVW        R5, #32771                  @ 0x8003 
    /*0000cd88*/ BL          0x000000000000CD88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cd8c*/ MOVT        R5, #40970                  @ 0xa00a 
    /*0000cd90*/ MOV         R0, R5 
    /*0000cd94*/ ADD         SP, SP, #16 
    /*0000cd98*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264eCheckVuiCfg_xcd9c:
    /*0000cd9c*/ STR         R3, [SP, #4] 
    /*0000cda0*/ MOVW        R2, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x284c] 
    /*0000cda4*/ MOVW        R3, #5012                   @ 0x1394 
    /*0000cda8*/ MOVT        R2, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0x284c] 
    /*0000cdac*/ STR         R3, [SP] 
    /*0000cdb0*/ B           H264eCheckVuiCfg_xcd78
    H264eCheckVuiCfg_xcdb4:
    /*0000cdb4*/ STR         R3, [SP, #4] 
    /*0000cdb8*/ MOVW        R2, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2498] 
    /*0000cdbc*/ MOVW        R3, #4881                   @ 0x1311 
    /*0000cdc0*/ MOVT        R2, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2498] 
    /*0000cdc4*/ STR         R3, [SP] 
    /*0000cdc8*/ B           H264eCheckVuiCfg_xcd78
    H264eCheckVuiCfg_xcdcc:
    /*0000cdcc*/ STR         R3, [SP, #4] 
    /*0000cdd0*/ MOVW        R2, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25b4] 
    /*0000cdd4*/ MOVW        R3, #4922                   @ 0x133a 
    /*0000cdd8*/ MOVT        R2, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25b4] 
    /*0000cddc*/ STR         R3, [SP] 
    /*0000cde0*/ B           H264eCheckVuiCfg_xcd78
    H264eCheckVuiCfg_xcde4:
    /*0000cde4*/ STR         R3, [SP, #4] 
    /*0000cde8*/ MOVW        R2, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2668] 
    /*0000cdec*/ MOVW        R3, #4956                   @ 0x135c 
    /*0000cdf0*/ MOVT        R2, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2668] 
    /*0000cdf4*/ STR         R3, [SP] 
    /*0000cdf8*/ B           H264eCheckVuiCfg_xcd78
    H264eCheckVuiCfg_xcdfc:
    /*0000cdfc*/ STR         R3, [SP, #4] 
    /*0000ce00*/ MOVW        R2, #0                      @ .LC119 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x27a8] 
    /*0000ce04*/ MOVW        R3, #4994                   @ 0x1382 
    /*0000ce08*/ MOVT        R2, #0                      @ .LC119 [R_ARM_MOVT_ABS: .rodata.str1.4+0x27a8] 
    /*0000ce0c*/ STR         R3, [SP] 
    /*0000ce10*/ B           H264eCheckVuiCfg_xcd78
    H264eCheckVuiCfg_xce14:
    /*0000ce14*/ MOVW        R3, #4892                   @ 0x131c 
    /*0000ce18*/ MOVW        R2, #0                      @ .LC110 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24e8] 
    /*0000ce1c*/ STR         R5, [SP, #4] 
    /*0000ce20*/ MOVT        R2, #0                      @ .LC110 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24e8] 
    /*0000ce24*/ STR         R3, [SP] 
    /*0000ce28*/ B           H264eCheckVuiCfg_xcd78
    H264eCheckVuiCfg_xce2c:
    /*0000ce2c*/ MOVW        R3, #4901                   @ 0x1325 
    /*0000ce30*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x252c] 
    /*0000ce34*/ STR         R5, [SP, #4] 
    /*0000ce38*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x252c] 
    /*0000ce3c*/ STR         R3, [SP] 
    /*0000ce40*/ B           H264eCheckVuiCfg_xcd78
    H264eCheckVuiCfg_xce44:
    /*0000ce44*/ MOVW        R3, #4936                   @ 0x1348 
    /*0000ce48*/ MOVW        R2, #0                      @ .LC114 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x260c] 
    /*0000ce4c*/ STR         R7, [SP, #8] 
    /*0000ce50*/ MOVT        R2, #0                      @ .LC114 [R_ARM_MOVT_ABS: .rodata.str1.4+0x260c] 
    /*0000ce54*/ STR         R8, [SP, #4] 
    /*0000ce58*/ STR         R3, [SP] 
    /*0000ce5c*/ B           H264eCheckVuiCfg_xcce8
    H264eCheckVuiCfg_xce60:
    /*0000ce60*/ STR         R3, [SP, #4] 
    /*0000ce64*/ MOVW        R2, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2764] 
    /*0000ce68*/ MOVW        R3, #4986                   @ 0x137a 
    /*0000ce6c*/ MOVT        R2, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2764] 
    /*0000ce70*/ STR         R3, [SP] 
    /*0000ce74*/ B           H264eCheckVuiCfg_xcd78
    /*0000ce78*/ MULEQ       R0, R4, R6 
FUNC_END H264eCheckVuiCfg


FUNC_BEGIN H264E_SetVui
    /*0000ce7c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ce80*/ SUB         SP, SP, #28 
    /*0000ce84*/ MOV         R6, R1 
    /*0000ce88*/ MOV         R5, R0 
    /*0000ce8c*/ BL          0x000000000000CE8C          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000ce90*/ SUBS        R4, R0, #0 
    /*0000ce94*/ BEQ         H264E_SetVui_xcea4
    H264E_SetVui_xce98:
    /*0000ce98*/ MOV         R0, R4 
    /*0000ce9c*/ ADD         SP, SP, #28 
    /*0000cea0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_SetVui_xcea4:
    /*0000cea4*/ MOV         R0, R5 
    /*0000cea8*/ BL          0x000000000000CEA8          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000ceac*/ SUBS        R4, R0, #0 
    /*0000ceb0*/ BNE         H264E_SetVui_xce98
    /*0000ceb4*/ MOV         R0, R6 
    /*0000ceb8*/ BL          0x000000000000CEB8          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000cebc*/ SUBS        R4, R0, #0 
    /*0000cec0*/ BNE         H264E_SetVui_xce98
    /*0000cec4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000cec8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000cecc*/ ADD         R8, R3, R5, LSL #2 
    /*0000ced0*/ MOV         R0, R6 
    /*0000ced4*/ LDR         SL, [R8, #64]               @ 0x40 
    /*0000ced8*/ BL          0x000000000000CED8          @ H264eCheckVuiCfg [R_ARM_CALL: .text+0xcbd4] 
    /*0000cedc*/ SUBS        R4, R0, #0 
    /*0000cee0*/ BNE         H264E_SetVui_xcfa0
    /*0000cee4*/ ADD         R9, SL, #9792               @ 0x2640 
    /*0000cee8*/ ADD         R7, SL, #8192               @ 0x2000 
    /*0000ceec*/ ADD         R9, R9, #40                 @ 0x28 
    /*0000cef0*/ ADD         R1, SP, #20 
    /*0000cef4*/ MOV         R0, R9 
    /*0000cef8*/ BL          0x000000000000CEF8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000cefc*/ LDRB        R3, [R7, #1636]             @ 0x664 
    /*0000cf00*/ ADD         R0, SL, #9792               @ 0x2640 
    /*0000cf04*/ MOV         R1, R6 
    /*0000cf08*/ MOV         R2, #28 
    /*0000cf0c*/ ADD         R0, R0, #12 
    /*0000cf10*/ LDRB        R6, [R7, #1638]             @ 0x666 
    /*0000cf14*/ LDRB        FP, [R7, #1635]             @ 0x663 
    /*0000cf18*/ STR         R3, [SP, #12] 
    /*0000cf1c*/ LDRB        SL, [R7, #1637]             @ 0x665 
    /*0000cf20*/ BL          0x000000000000CF20          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000cf24*/ LDRB        R2, [SP, #12] 
    /*0000cf28*/ MOV         R0, R9 
    /*0000cf2c*/ LDR         R3, [R8, #140]              @ 0x8c 
    /*0000cf30*/ ADD         R1, SP, #20 
    /*0000cf34*/ STRB        R6, [R7, #1638]             @ 0x666 
    /*0000cf38*/ STRB        FP, [R7, #1635]             @ 0x663 
    /*0000cf3c*/ ADD         R3, R3, #1 
    /*0000cf40*/ STRB        R2, [R7, #1636]             @ 0x664 
    /*0000cf44*/ STRB        SL, [R7, #1637]             @ 0x665 
    /*0000cf48*/ STR         R3, [R8, #140]              @ 0x8c 
    /*0000cf4c*/ BL          0x000000000000CF4C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000cf50*/ LDR         R6, [R7, #2160]             @ 0x870 
    /*0000cf54*/ CMP         R6, #1 
    /*0000cf58*/ BNE         H264E_SetVui_xce98
    /*0000cf5c*/ MOV         R0, #19 
    /*0000cf60*/ BL          0x000000000000CF60          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000cf64*/ MOV         R1, R6 
    /*0000cf68*/ LDR         R3, [R0, #56]               @ 0x38 
    /*0000cf6c*/ MOV         R0, R5 
    /*0000cf70*/ BLX         R3 
    /*0000cf74*/ CMP         R0, #0 
    /*0000cf78*/ BEQ         H264E_SetVui_xce98
    /*0000cf7c*/ MOVW        R3, #5074                   @ 0x13d2 
    /*0000cf80*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1144] 
    /*0000cf84*/ STR         R3, [SP] 
    /*0000cf88*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1144] 
    /*0000cf8c*/ LDR         R3, [PC, #48]               @ 0x000000000000cfc4 
    /*0000cf90*/ MOV         R1, #10 
    /*0000cf94*/ MOV         R0, #4 
    /*0000cf98*/ BL          0x000000000000CF98          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cf9c*/ B           H264E_SetVui_xce98
    H264E_SetVui_xcfa0:
    /*0000cfa0*/ MOVW        R3, #5040                   @ 0x13b0 
    /*0000cfa4*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2900] 
    /*0000cfa8*/ STR         R3, [SP] 
    /*0000cfac*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2900] 
    /*0000cfb0*/ LDR         R3, [PC, #12]               @ 0x000000000000cfc4 
    /*0000cfb4*/ MOV         R1, #10 
    /*0000cfb8*/ MOV         R0, #3 
    /*0000cfbc*/ BL          0x000000000000CFBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cfc0*/ B           H264E_SetVui_xce98
    /*0000cfc4*/ ANDEQ       R0, R0, R8, LSR #13 
FUNC_END H264E_SetVui


FUNC_BEGIN H264eCheckIdrPicId
    /*0000cfc8*/ PUSH        {R4, LR} 
    /*0000cfcc*/ SUB         SP, SP, #16 
    /*0000cfd0*/ MOV         R4, R0 
    /*0000cfd4*/ BL          0x000000000000CFD4          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000cfd8*/ CMP         R0, #0 
    /*0000cfdc*/ BNE         H264eCheckIdrPicId_xcfec
    /*0000cfe0*/ LDR         R3, [R4] 
    /*0000cfe4*/ CMP         R3, #1 
    /*0000cfe8*/ BHI         H264eCheckIdrPicId_xcff4
    H264eCheckIdrPicId_xcfec:
    /*0000cfec*/ ADD         SP, SP, #16 
    /*0000cff0*/ POP         {R4, PC} 
    H264eCheckIdrPicId_xcff4:
    /*0000cff4*/ STR         R3, [SP, #4] 
    /*0000cff8*/ MOV         R2, #2 
    /*0000cffc*/ MOVW        R3, #5128                   @ 0x1408 
    /*0000d000*/ STR         R2, [SP, #8] 
    /*0000d004*/ STR         R3, [SP] 
    /*0000d008*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2938] 
    /*0000d00c*/ LDR         R3, [PC, #24]               @ 0x000000000000d02c 
    /*0000d010*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2938] 
    /*0000d014*/ MOV         R1, #10 
    /*0000d018*/ MOV         R0, #3 
    /*0000d01c*/ BL          0x000000000000D01C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d020*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000d024*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000d028*/ B           H264eCheckIdrPicId_xcfec
    /*0000d02c*/ @           <UNDEFINED> instruction: 0x000006b8 
FUNC_END H264eCheckIdrPicId


FUNC_BEGIN H264E_SetH264eIdrPicId
    /*0000d030*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000d034*/ SUB         SP, SP, #20 
    /*0000d038*/ MOV         R6, R1 
    /*0000d03c*/ MOV         R5, R0 
    /*0000d040*/ BL          0x000000000000D040          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000d044*/ SUBS        R4, R0, #0 
    /*0000d048*/ BEQ         H264E_SetH264eIdrPicId_xd058
    H264E_SetH264eIdrPicId_xd04c:
    /*0000d04c*/ MOV         R0, R4 
    /*0000d050*/ ADD         SP, SP, #20 
    /*0000d054*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_SetH264eIdrPicId_xd058:
    /*0000d058*/ MOV         R0, R5 
    /*0000d05c*/ BL          0x000000000000D05C          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000d060*/ SUBS        R4, R0, #0 
    /*0000d064*/ BNE         H264E_SetH264eIdrPicId_xd04c
    /*0000d068*/ MOV         R0, R6 
    /*0000d06c*/ BL          0x000000000000D06C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000d070*/ SUBS        R4, R0, #0 
    /*0000d074*/ BNE         H264E_SetH264eIdrPicId_xd04c
    /*0000d078*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000d07c*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000d080*/ ADD         R3, R7, R5, LSL #2 
    /*0000d084*/ MOV         R0, R6 
    /*0000d088*/ LDR         R9, [R3, #64]               @ 0x40 
    /*0000d08c*/ BL          0x000000000000D08C          @ H264eCheckIdrPicId [R_ARM_CALL: .text+0xcfc8] 
    /*0000d090*/ SUBS        R4, R0, #0 
    /*0000d094*/ BNE         H264E_SetH264eIdrPicId_xd0dc
    /*0000d098*/ ADD         R8, R9, #9792               @ 0x2640 
    /*0000d09c*/ ADD         R1, SP, #12 
    /*0000d0a0*/ ADD         R8, R8, #40                 @ 0x28 
    /*0000d0a4*/ MOV         R0, R8 
    /*0000d0a8*/ BL          0x000000000000D0A8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000d0ac*/ ADD         R0, R9, #13632              @ 0x3540 
    /*0000d0b0*/ MOV         R1, R6 
    /*0000d0b4*/ MOV         R2, #8 
    /*0000d0b8*/ ADD         R0, R0, #4 
    /*0000d0bc*/ BL          0x000000000000D0BC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000d0c0*/ LDR         R3, [R7, R5, LSL #2] 
    /*0000d0c4*/ MOV         R0, R8 
    /*0000d0c8*/ ADD         R1, SP, #12 
    /*0000d0cc*/ ADD         R3, R3, #1 
    /*0000d0d0*/ STR         R3, [R7, R5, LSL #2] 
    /*0000d0d4*/ BL          0x000000000000D0D4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000d0d8*/ B           H264E_SetH264eIdrPicId_xd04c
    H264E_SetH264eIdrPicId_xd0dc:
    /*0000d0dc*/ MOVW        R3, #5153                   @ 0x1421 
    /*0000d0e0*/ MOVW        R2, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2984] 
    /*0000d0e4*/ STR         R3, [SP] 
    /*0000d0e8*/ MOVT        R2, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2984] 
    /*0000d0ec*/ LDR         R3, [PC, #12]               @ 0x000000000000d100 
    /*0000d0f0*/ MOV         R1, #10 
    /*0000d0f4*/ MOV         R0, #3 
    /*0000d0f8*/ BL          0x000000000000D0F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d0fc*/ B           H264E_SetH264eIdrPicId_xd04c
    /*0000d100*/ ANDEQ       R0, R0, IP, ASR #13 
FUNC_END H264E_SetH264eIdrPicId


FUNC_BEGIN H264eCheckPredMode
    /*0000d104*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000d108*/ SUB         SP, SP, #20 
    /*0000d10c*/ LDR         R3, [R0] 
    /*0000d110*/ LDR         R2, [R0, #4] 
    /*0000d114*/ CMP         R3, #7 
    /*0000d118*/ BHI         H264eCheckPredMode_xd184
    /*0000d11c*/ CMP         R2, #7 
    /*0000d120*/ BHI         H264eCheckPredMode_xd184
    /*0000d124*/ LDR         R3, [R0, #8] 
    /*0000d128*/ LDR         R2, [R0, #12] 
    /*0000d12c*/ CMP         R3, #7 
    /*0000d130*/ BHI         H264eCheckPredMode_xd1bc
    /*0000d134*/ CMP         R2, #7 
    /*0000d138*/ BHI         H264eCheckPredMode_xd1bc
    /*0000d13c*/ LDR         R3, [R0, #16] 
    /*0000d140*/ LDR         R2, [R0, #20] 
    /*0000d144*/ CMP         R3, #7 
    /*0000d148*/ BHI         H264eCheckPredMode_xd1d8
    /*0000d14c*/ CMP         R2, #7 
    /*0000d150*/ BHI         H264eCheckPredMode_xd1d8
    /*0000d154*/ LDR         R3, [R0, #24] 
    /*0000d158*/ CMP         R3, #7 
    /*0000d15c*/ BHI         H264eCheckPredMode_xd1f4
    /*0000d160*/ LDR         R3, [R0, #28] 
    /*0000d164*/ CMP         R3, #7 
    /*0000d168*/ BHI         H264eCheckPredMode_xd224
    /*0000d16c*/ LDR         R3, [R0, #32] 
    /*0000d170*/ CMP         R3, #7 
    /*0000d174*/ MOVLS       R0, #0 
    /*0000d178*/ BHI         H264eCheckPredMode_xd23c
    H264eCheckPredMode_xd17c:
    /*0000d17c*/ ADD         SP, SP, #20 
    /*0000d180*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    H264eCheckPredMode_xd184:
    /*0000d184*/ STR         R2, [SP, #8] 
    /*0000d188*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x29b8] 
    /*0000d18c*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x29b8] 
    /*0000d190*/ MOVW        R1, #5359                   @ 0x14ef 
    /*0000d194*/ STR         R3, [SP, #4] 
    /*0000d198*/ STR         R1, [SP] 
    H264eCheckPredMode_xd19c:
    /*0000d19c*/ LDR         R3, [PC, #176]              @ 0x000000000000d254 
    /*0000d1a0*/ MOV         R1, #10 
    /*0000d1a4*/ MOV         R0, #3 
    /*0000d1a8*/ BL          0x000000000000D1A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d1ac*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000d1b0*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000d1b4*/ ADD         SP, SP, #20 
    /*0000d1b8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    H264eCheckPredMode_xd1bc:
    /*0000d1bc*/ STR         R2, [SP, #8] 
    /*0000d1c0*/ MOVW        R1, #5368                   @ 0x14f8 
    /*0000d1c4*/ MOVW        R2, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a08] 
    /*0000d1c8*/ STR         R3, [SP, #4] 
    /*0000d1cc*/ STR         R1, [SP] 
    /*0000d1d0*/ MOVT        R2, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a08] 
    /*0000d1d4*/ B           H264eCheckPredMode_xd19c
    H264eCheckPredMode_xd1d8:
    /*0000d1d8*/ STR         R2, [SP, #8] 
    /*0000d1dc*/ MOVW        R1, #5377                   @ 0x1501 
    /*0000d1e0*/ MOVW        R2, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a58] 
    /*0000d1e4*/ STR         R3, [SP, #4] 
    /*0000d1e8*/ STR         R1, [SP] 
    /*0000d1ec*/ MOVT        R2, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a58] 
    /*0000d1f0*/ B           H264eCheckPredMode_xd19c
    H264eCheckPredMode_xd1f4:
    /*0000d1f4*/ MOVW        R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2aa8] 
    /*0000d1f8*/ MOVT        R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2aa8] 
    /*0000d1fc*/ STR         R3, [SP, #4] 
    /*0000d200*/ MOVW        R3, #5385                   @ 0x1509 
    /*0000d204*/ STR         R3, [SP] 
    H264eCheckPredMode_xd208:
    /*0000d208*/ LDR         R3, [PC, #68]               @ 0x000000000000d254 
    /*0000d20c*/ MOV         R1, #10 
    /*0000d210*/ MOV         R0, #3 
    /*0000d214*/ BL          0x000000000000D214          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d218*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000d21c*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000d220*/ B           H264eCheckPredMode_xd17c
    H264eCheckPredMode_xd224:
    /*0000d224*/ STR         R3, [SP, #4] 
    /*0000d228*/ MOVW        R2, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2af0] 
    /*0000d22c*/ MOVW        R3, #5393                   @ 0x1511 
    /*0000d230*/ MOVT        R2, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2af0] 
    /*0000d234*/ STR         R3, [SP] 
    /*0000d238*/ B           H264eCheckPredMode_xd208
    H264eCheckPredMode_xd23c:
    /*0000d23c*/ STR         R3, [SP, #4] 
    /*0000d240*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b38] 
    /*0000d244*/ MOVW        R3, #5401                   @ 0x1519 
    /*0000d248*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b38] 
    /*0000d24c*/ STR         R3, [SP] 
    /*0000d250*/ B           H264eCheckPredMode_xd208
    /*0000d254*/ ANDEQ       R0, R0, R4, ROR #13 
FUNC_END H264eCheckPredMode


FUNC_BEGIN H264E_SetPredModeCfg
    /*0000d258*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000d25c*/ SUB         SP, SP, #20 
    /*0000d260*/ MOV         R6, R1 
    /*0000d264*/ MOV         R5, R0 
    /*0000d268*/ BL          0x000000000000D268          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000d26c*/ SUBS        R4, R0, #0 
    /*0000d270*/ BEQ         H264E_SetPredModeCfg_xd280
    H264E_SetPredModeCfg_xd274:
    /*0000d274*/ MOV         R0, R4 
    /*0000d278*/ ADD         SP, SP, #20 
    /*0000d27c*/ POP         {R4, R5, R6, R7, PC} 
    H264E_SetPredModeCfg_xd280:
    /*0000d280*/ MOV         R0, R5 
    /*0000d284*/ BL          0x000000000000D284          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000d288*/ SUBS        R4, R0, #0 
    /*0000d28c*/ BNE         H264E_SetPredModeCfg_xd274
    /*0000d290*/ MOV         R0, R6 
    /*0000d294*/ BL          0x000000000000D294          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000d298*/ SUBS        R4, R0, #0 
    /*0000d29c*/ BNE         H264E_SetPredModeCfg_xd274
    /*0000d2a0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000d2a4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000d2a8*/ ADD         R5, R3, R5, LSL #2 
    /*0000d2ac*/ MOV         R0, R6 
    /*0000d2b0*/ LDR         R5, [R5, #64]               @ 0x40 
    /*0000d2b4*/ BL          0x000000000000D2B4          @ H264eCheckPredMode [R_ARM_CALL: .text+0xd104] 
    /*0000d2b8*/ SUBS        R4, R0, #0 
    /*0000d2bc*/ BNE         H264E_SetPredModeCfg_xd304
    /*0000d2c0*/ ADD         R7, R5, #9792               @ 0x2640 
    /*0000d2c4*/ ADD         R1, SP, #12 
    /*0000d2c8*/ ADD         R7, R7, #40                 @ 0x28 
    /*0000d2cc*/ MOV         R0, R7 
    /*0000d2d0*/ BL          0x000000000000D2D0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000d2d4*/ ADD         R0, R5, #14400              @ 0x3840 
    /*0000d2d8*/ ADD         R5, R5, #12288              @ 0x3000 
    /*0000d2dc*/ MOV         R1, R6 
    /*0000d2e0*/ MOV         R2, #36                     @ 0x24 
    /*0000d2e4*/ ADD         R0, R0, #44                 @ 0x2c 
    /*0000d2e8*/ BL          0x000000000000D2E8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000d2ec*/ MOV         R3, #1 
    /*0000d2f0*/ MOV         R0, R7 
    /*0000d2f4*/ ADD         R1, SP, #12 
    /*0000d2f8*/ STR         R3, [R5, #2192]             @ 0x890 
    /*0000d2fc*/ BL          0x000000000000D2FC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000d300*/ B           H264E_SetPredModeCfg_xd274
    H264E_SetPredModeCfg_xd304:
    /*0000d304*/ MOVW        R3, #5425                   @ 0x1531 
    /*0000d308*/ MOVW        R2, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b7c] 
    /*0000d30c*/ STR         R3, [SP] 
    /*0000d310*/ MOVT        R2, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b7c] 
    /*0000d314*/ LDR         R3, [PC, #12]               @ 0x000000000000d328 
    /*0000d318*/ MOV         R1, #10 
    /*0000d31c*/ MOV         R0, #3 
    /*0000d320*/ BL          0x000000000000D320          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d324*/ B           H264E_SetPredModeCfg_xd274
    /*0000d328*/ STRDEQ      R0, [R0], -R8 
FUNC_END H264E_SetPredModeCfg


FUNC_BEGIN H264E_CheckModPara
    /*0000d32c*/ PUSH        {R4, LR} 
    /*0000d330*/ SUB         SP, SP, #16 
    /*0000d334*/ LDR         R3, [R0] 
    /*0000d338*/ CMP         R3, #1 
    /*0000d33c*/ BHI         H264E_CheckModPara_xd3e8
    /*0000d340*/ LDR         R3, [R0, #12] 
    /*0000d344*/ SUB         R2, R3, #2 
    /*0000d348*/ CMP         R2, #1 
    /*0000d34c*/ BHI         H264E_CheckModPara_xd400
    /*0000d350*/ LDR         R3, [R0, #4] 
    /*0000d354*/ CMP         R3, #1 
    /*0000d358*/ BHI         H264E_CheckModPara_xd43c
    /*0000d35c*/ LDR         R3, [R0, #16] 
    /*0000d360*/ CMP         R3, #1 
    /*0000d364*/ BHI         H264E_CheckModPara_xd3b0
    /*0000d368*/ LDR         R0, [R0, #8] 
    /*0000d36c*/ BL          0x000000000000D36C          @ H264E_DRV_CheckPowerSavePara [R_ARM_CALL: .text+0x12918] 
    /*0000d370*/ SUBS        R4, R0, #0 
    /*0000d374*/ BNE         H264E_CheckModPara_xd384
    H264E_CheckModPara_xd378:
    /*0000d378*/ MOV         R0, R4 
    /*0000d37c*/ ADD         SP, SP, #16 
    /*0000d380*/ POP         {R4, PC} 
    H264E_CheckModPara_xd384:
    /*0000d384*/ MOVW        R3, #5596                   @ 0x15dc 
    /*0000d388*/ MOV         R1, #10 
    /*0000d38c*/ STR         R3, [SP] 
    /*0000d390*/ MOVW        R2, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2cf0] 
    /*0000d394*/ LDR         R3, [PC, #184]              @ 0x000000000000d454 
    /*0000d398*/ MOVT        R2, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2cf0] 
    /*0000d39c*/ MOV         R0, #3 
    /*0000d3a0*/ BL          0x000000000000D3A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d3a4*/ MOV         R0, R4 
    /*0000d3a8*/ ADD         SP, SP, #16 
    /*0000d3ac*/ POP         {R4, PC} 
    H264E_CheckModPara_xd3b0:
    /*0000d3b0*/ MOVW        R2, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ca4] 
    /*0000d3b4*/ MOVT        R2, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ca4] 
    /*0000d3b8*/ STR         R3, [SP, #4] 
    /*0000d3bc*/ MOVW        R3, #5589                   @ 0x15d5 
    /*0000d3c0*/ STR         R3, [SP] 
    H264E_CheckModPara_xd3c4:
    /*0000d3c4*/ LDR         R3, [PC, #136]              @ 0x000000000000d454 
    /*0000d3c8*/ MOV         R1, #10 
    /*0000d3cc*/ MOV         R0, #3 
    /*0000d3d0*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000d3d4*/ BL          0x000000000000D3D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d3d8*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000d3dc*/ MOV         R0, R4 
    /*0000d3e0*/ ADD         SP, SP, #16 
    /*0000d3e4*/ POP         {R4, PC} 
    H264E_CheckModPara_xd3e8:
    /*0000d3e8*/ STR         R3, [SP, #4] 
    /*0000d3ec*/ MOVW        R2, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bb0] 
    /*0000d3f0*/ MOVW        R3, #5570                   @ 0x15c2 
    /*0000d3f4*/ MOVT        R2, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bb0] 
    /*0000d3f8*/ STR         R3, [SP] 
    /*0000d3fc*/ B           H264E_CheckModPara_xd3c4
    H264E_CheckModPara_xd400:
    /*0000d400*/ MOV         R0, #3 
    /*0000d404*/ STR         R3, [SP, #4] 
    /*0000d408*/ MOV         R2, #2 
    /*0000d40c*/ MOVW        R3, #5576                   @ 0x15c8 
    /*0000d410*/ STR         R2, [SP, #8] 
    /*0000d414*/ MOV         R1, #10 
    /*0000d418*/ STR         R3, [SP] 
    /*0000d41c*/ MOVW        R2, #0                      @ .LC134 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c00] 
    /*0000d420*/ STR         R0, [SP, #12] 
    /*0000d424*/ MOVT        R2, #0                      @ .LC134 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c00] 
    /*0000d428*/ LDR         R3, [PC, #36]               @ 0x000000000000d454 
    /*0000d42c*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000d430*/ BL          0x000000000000D430          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d434*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000d438*/ B           H264E_CheckModPara_xd378
    H264E_CheckModPara_xd43c:
    /*0000d43c*/ STR         R3, [SP, #4] 
    /*0000d440*/ MOVW        R2, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c50] 
    /*0000d444*/ MOVW        R3, #5582                   @ 0x15ce 
    /*0000d448*/ MOVT        R2, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c50] 
    /*0000d44c*/ STR         R3, [SP] 
    /*0000d450*/ B           H264E_CheckModPara_xd3c4
    /*0000d454*/ ANDEQ       R0, R0, R0, LSL R7 
FUNC_END H264E_CheckModPara


FUNC_BEGIN H264E_SetModPara
    /*0000d458*/ PUSH        {R4, R5, LR} 
    /*0000d45c*/ SUB         SP, SP, #12 
    /*0000d460*/ MOV         R4, R0 
    /*0000d464*/ BL          0x000000000000D464          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000d468*/ SUBS        R5, R0, #0 
    /*0000d46c*/ BEQ         H264E_SetModPara_xd47c
    H264E_SetModPara_xd470:
    /*0000d470*/ MOV         R0, R5 
    /*0000d474*/ ADD         SP, SP, #12 
    /*0000d478*/ POP         {R4, R5, PC} 
    H264E_SetModPara_xd47c:
    /*0000d47c*/ MOV         R0, R4 
    /*0000d480*/ BL          0x000000000000D480          @ H264E_CheckModPara [R_ARM_CALL: .text+0xd32c] 
    /*0000d484*/ SUBS        R5, R0, #0 
    /*0000d488*/ BNE         H264E_SetModPara_xd4d0
    /*0000d48c*/ LDR         R1, [R4, #8] 
    /*0000d490*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000d494*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000d498*/ LDR         R0, [R4, #4] 
    /*0000d49c*/ LDR         LR, [R4, #12] 
    /*0000d4a0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000d4a4*/ STR         R1, [R2, #4] 
    /*0000d4a8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000d4ac*/ LDR         IP, [R4] 
    /*0000d4b0*/ LDR         R1, [R4, #16] 
    /*0000d4b4*/ STR         R0, [R3, #132]              @ 0x84 
    /*0000d4b8*/ MOV         R0, R5 
    /*0000d4bc*/ STR         LR, [R2] 
    /*0000d4c0*/ STR         IP, [R3, #128]              @ 0x80 
    /*0000d4c4*/ STR         R1, [R3, #136]              @ 0x88 
    /*0000d4c8*/ ADD         SP, SP, #12 
    /*0000d4cc*/ POP         {R4, R5, PC} 
    H264E_SetModPara_xd4d0:
    /*0000d4d0*/ MOVW        R3, #5613                   @ 0x15ed 
    /*0000d4d4*/ MOVW        R2, #0                      @ .LC138 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d30] 
    /*0000d4d8*/ STR         R3, [SP] 
    /*0000d4dc*/ MOVT        R2, #0                      @ .LC138 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d30] 
    /*0000d4e0*/ LDR         R3, [PC, #12]               @ 0x000000000000d4f4 
    /*0000d4e4*/ MOV         R1, #10 
    /*0000d4e8*/ MOV         R0, #3 
    /*0000d4ec*/ BL          0x000000000000D4EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d4f0*/ B           H264E_SetModPara_xd470
    /*0000d4f4*/ ANDEQ       R0, R0, R4, LSR #14 
FUNC_END H264E_SetModPara


FUNC_BEGIN H264eCheckSseCfg
    /*0000d4f8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000d4fc*/ MOV         R5, R0 
    /*0000d500*/ SUB         SP, SP, #36                 @ 0x24 
    /*0000d504*/ MOV         R0, R1 
    /*0000d508*/ MOV         R4, R1 
    /*0000d50c*/ BL          0x000000000000D50C          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000d510*/ CMP         R0, #0 
    /*0000d514*/ BNE         H264eCheckSseCfg_xd534
    /*0000d518*/ LDR         R3, [R4] 
    /*0000d51c*/ CMP         R3, #7 
    /*0000d520*/ BHI         H264eCheckSseCfg_xd6fc
    /*0000d524*/ LDR         R2, [R4, #4] 
    /*0000d528*/ CMP         R2, #1 
    /*0000d52c*/ BHI         H264eCheckSseCfg_xd6ac
    /*0000d530*/ BEQ         H264eCheckSseCfg_xd53c
    H264eCheckSseCfg_xd534:
    /*0000d534*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000d538*/ POP         {R4, R5, R6, R7, PC} 
    H264eCheckSseCfg_xd53c:
    /*0000d53c*/ LDR         IP, [R4, #16] 
    /*0000d540*/ LDR         R6, [R4, #20] 
    /*0000d544*/ TST         IP, #15 
    /*0000d548*/ BNE         H264eCheckSseCfg_xd6e0
    /*0000d54c*/ TST         R6, #15 
    /*0000d550*/ BNE         H264eCheckSseCfg_xd6e0
    /*0000d554*/ LDR         R7, [R4, #8] 
    /*0000d558*/ LDR         R1, [R4, #12] 
    /*0000d55c*/ TST         R7, #15 
    /*0000d560*/ BNE         H264eCheckSseCfg_xd674
    /*0000d564*/ TST         R1, #15 
    /*0000d568*/ BNE         H264eCheckSseCfg_xd674
    /*0000d56c*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000d570*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000d574*/ ADD         R5, R2, R5, LSL #2 
    /*0000d578*/ LDR         R2, [R5, #64]               @ 0x40 
    /*0000d57c*/ LDR         R4, [R2, #976]              @ 0x3d0 
    /*0000d580*/ LDR         R5, [R2, #980]              @ 0x3d4 
    /*0000d584*/ CMP         R4, IP 
    /*0000d588*/ CMPCS       IP, #15 
    /*0000d58c*/ MOVHI       R2, #1 
    /*0000d590*/ MOVLS       R2, #0 
    /*0000d594*/ CMP         R7, #0 
    /*0000d598*/ MOVLT       R2, #0 
    /*0000d59c*/ ANDGE       R2, R2, #1 
    /*0000d5a0*/ CMP         R2, #0 
    /*0000d5a4*/ BEQ         H264eCheckSseCfg_xd5e8
    /*0000d5a8*/ CMP         R5, R6 
    /*0000d5ac*/ CMPCS       R6, #15 
    /*0000d5b0*/ SUB         R2, R4, #1 
    /*0000d5b4*/ MOVHI       LR, #1 
    /*0000d5b8*/ MOVLS       LR, #0 
    /*0000d5bc*/ CMP         R1, #0 
    /*0000d5c0*/ MOVLT       LR, #0 
    /*0000d5c4*/ ANDGE       LR, LR, #1 
    /*0000d5c8*/ CMP         R7, R2 
    /*0000d5cc*/ MOVHI       R2, #0 
    /*0000d5d0*/ ANDLS       R2, LR, #1 
    /*0000d5d4*/ CMP         R2, #0 
    /*0000d5d8*/ BEQ         H264eCheckSseCfg_xd5e8
    /*0000d5dc*/ SUB         R2, R5, #1 
    /*0000d5e0*/ CMP         R1, R2 
    /*0000d5e4*/ BLS         H264eCheckSseCfg_xd62c
    H264eCheckSseCfg_xd5e8:
    /*0000d5e8*/ MOVW        LR, #5738                   @ 0x166a 
    /*0000d5ec*/ STR         R1, [SP, #20] 
    /*0000d5f0*/ STMIB       SP, {R3, IP} 
    /*0000d5f4*/ MOVW        R2, #0                      @ .LC142 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e68] 
    /*0000d5f8*/ STR         R5, [SP, #28] 
    /*0000d5fc*/ MOVT        R2, #0                      @ .LC142 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e68] 
    /*0000d600*/ STR         R4, [SP, #24] 
    /*0000d604*/ MOV         R1, #10 
    /*0000d608*/ STR         R7, [SP, #16] 
    /*0000d60c*/ MOV         R0, #3 
    /*0000d610*/ STR         R6, [SP, #12] 
    /*0000d614*/ STR         LR, [SP] 
    /*0000d618*/ LDR         R3, [PC, #256]              @ 0x000000000000d720 
    /*0000d61c*/ BL          0x000000000000D61C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d620*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000d624*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000d628*/ B           H264eCheckSseCfg_xd534
    H264eCheckSseCfg_xd62c:
    /*0000d62c*/ ADD         IP, IP, R7 
    /*0000d630*/ CMP         R4, IP 
    /*0000d634*/ BCC         H264eCheckSseCfg_xd644
    /*0000d638*/ ADD         R1, R6, R1 
    /*0000d63c*/ CMP         R5, R1 
    /*0000d640*/ BCS         H264eCheckSseCfg_xd534
    H264eCheckSseCfg_xd644:
    /*0000d644*/ STR         R3, [SP, #4] 
    /*0000d648*/ MOVW        R2, #0                      @ .LC143 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ef4] 
    /*0000d64c*/ MOVW        R3, #5747                   @ 0x1673 
    /*0000d650*/ MOVT        R2, #0                      @ .LC143 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ef4] 
    /*0000d654*/ STR         R3, [SP] 
    /*0000d658*/ MOV         R1, #10 
    /*0000d65c*/ LDR         R3, [PC, #188]              @ 0x000000000000d720 
    /*0000d660*/ MOV         R0, #3 
    /*0000d664*/ BL          0x000000000000D664          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d668*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000d66c*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000d670*/ B           H264eCheckSseCfg_xd534
    H264eCheckSseCfg_xd674:
    /*0000d674*/ MOVW        R2, #0                      @ .LC141 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e0c] 
    /*0000d678*/ MOVT        R2, #0                      @ .LC141 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e0c] 
    /*0000d67c*/ STR         R1, [SP, #12] 
    /*0000d680*/ MOVW        R1, #5722                   @ 0x165a 
    /*0000d684*/ STR         R7, [SP, #8] 
    /*0000d688*/ STR         R3, [SP, #4] 
    H264eCheckSseCfg_xd68c:
    /*0000d68c*/ STR         R1, [SP] 
    /*0000d690*/ MOV         R0, #3 
    /*0000d694*/ MOV         R1, #10 
    /*0000d698*/ LDR         R3, [PC, #128]              @ 0x000000000000d720 
    /*0000d69c*/ BL          0x000000000000D69C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d6a0*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000d6a4*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000d6a8*/ B           H264eCheckSseCfg_xd534
    H264eCheckSseCfg_xd6ac:
    /*0000d6ac*/ STR         R3, [SP, #4] 
    /*0000d6b0*/ MOVW        R1, #5699                   @ 0x1643 
    /*0000d6b4*/ LDR         R3, [PC, #100]              @ 0x000000000000d720 
    /*0000d6b8*/ STR         R2, [SP, #8] 
    /*0000d6bc*/ MOVW        R2, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d5c] 
    /*0000d6c0*/ MOVT        R2, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d5c] 
    /*0000d6c4*/ STR         R1, [SP] 
    H264eCheckSseCfg_xd6c8:
    /*0000d6c8*/ MOV         R1, #10 
    /*0000d6cc*/ MOV         R0, #3 
    /*0000d6d0*/ BL          0x000000000000D6D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d6d4*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000d6d8*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0000d6dc*/ B           H264eCheckSseCfg_xd534
    H264eCheckSseCfg_xd6e0:
    /*0000d6e0*/ MOVW        R2, #0                      @ .LC140 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2db4] 
    /*0000d6e4*/ STR         R6, [SP, #12] 
    /*0000d6e8*/ MOVW        R1, #5712                   @ 0x1650 
    /*0000d6ec*/ STR         IP, [SP, #8] 
    /*0000d6f0*/ STR         R3, [SP, #4] 
    /*0000d6f4*/ MOVT        R2, #0                      @ .LC140 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2db4] 
    /*0000d6f8*/ B           H264eCheckSseCfg_xd68c
    H264eCheckSseCfg_xd6fc:
    /*0000d6fc*/ MOV         R2, #7 
    /*0000d700*/ STR         R3, [SP, #4] 
    /*0000d704*/ STR         R2, [SP, #8] 
    /*0000d708*/ MOVW        R3, #5690                   @ 0x163a 
    /*0000d70c*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13f8] 
    /*0000d710*/ STR         R3, [SP] 
    /*0000d714*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13f8] 
    /*0000d718*/ LDR         R3, [PC]                    @ 0x000000000000d720 
    /*0000d71c*/ B           H264eCheckSseCfg_xd6c8
    /*0000d720*/ ANDEQ       R0, R0, R8, LSR R7 
FUNC_END H264eCheckSseCfg


FUNC_BEGIN H264E_SetSseCfg
    /*0000d724*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000d728*/ SUB         SP, SP, #20 
    /*0000d72c*/ MOV         R6, R1 
    /*0000d730*/ MOV         R5, R0 
    /*0000d734*/ BL          0x000000000000D734          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000d738*/ SUBS        R4, R0, #0 
    /*0000d73c*/ BEQ         H264E_SetSseCfg_xd74c
    H264E_SetSseCfg_xd740:
    /*0000d740*/ MOV         R0, R4 
    /*0000d744*/ ADD         SP, SP, #20 
    /*0000d748*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_SetSseCfg_xd74c:
    /*0000d74c*/ MOV         R0, R5 
    /*0000d750*/ BL          0x000000000000D750          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000d754*/ SUBS        R4, R0, #0 
    /*0000d758*/ BNE         H264E_SetSseCfg_xd740
    /*0000d75c*/ MOV         R0, R6 
    /*0000d760*/ BL          0x000000000000D760          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000d764*/ SUBS        R4, R0, #0 
    /*0000d768*/ BNE         H264E_SetSseCfg_xd740
    /*0000d76c*/ MOV         R1, R6 
    /*0000d770*/ MOV         R0, R5 
    /*0000d774*/ BL          0x000000000000D774          @ H264eCheckSseCfg [R_ARM_CALL: .text+0xd4f8] 
    /*0000d778*/ SUBS        R4, R0, #0 
    /*0000d77c*/ BNE         H264E_SetSseCfg_xd7f8
    /*0000d780*/ BL          0x000000000000D780          @ H264E_DRV_CheckSse [R_ARM_CALL: .text+0x12910] 
    /*0000d784*/ CMP         R0, #0 
    /*0000d788*/ BEQ         H264E_SetSseCfg_xd820
    /*0000d78c*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000d790*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000d794*/ ADD         R3, R7, R5, LSL #2 
    /*0000d798*/ ADD         R1, SP, #12 
    /*0000d79c*/ LDR         R8, [R3, #64]               @ 0x40 
    /*0000d7a0*/ ADD         R9, R8, #9792               @ 0x2640 
    /*0000d7a4*/ ADD         R9, R9, #40                 @ 0x28 
    /*0000d7a8*/ MOV         R0, R9 
    /*0000d7ac*/ BL          0x000000000000D7AC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000d7b0*/ LDR         R0, [R6] 
    /*0000d7b4*/ MOV         R3, #24 
    /*0000d7b8*/ MOV         R1, R6 
    /*0000d7bc*/ MOV         R2, R3 
    /*0000d7c0*/ MLA         R0, R3, R0, R8 
    /*0000d7c4*/ ADD         R8, R8, #12288              @ 0x3000 
    /*0000d7c8*/ ADD         R0, R0, #14464              @ 0x3880 
    /*0000d7cc*/ ADD         R0, R0, #28 
    /*0000d7d0*/ BL          0x000000000000D7D0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000d7d4*/ LDR         R3, [R7, R5, LSL #2] 
    /*0000d7d8*/ MOV         R2, #1 
    /*0000d7dc*/ MOV         R0, R9 
    /*0000d7e0*/ ADD         R1, SP, #12 
    /*0000d7e4*/ STR         R2, [R8, #2200]             @ 0x898 
    /*0000d7e8*/ ADD         R3, R3, R2 
    /*0000d7ec*/ STR         R3, [R7, R5, LSL #2] 
    /*0000d7f0*/ BL          0x000000000000D7F0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000d7f4*/ B           H264E_SetSseCfg_xd740
    H264E_SetSseCfg_xd7f8:
    /*0000d7f8*/ MOVW        R3, #5785                   @ 0x1699 
    /*0000d7fc*/ STR         R5, [SP, #4] 
    /*0000d800*/ STR         R3, [SP] 
    /*0000d804*/ MOVW        R2, #0                      @ .LC144 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f28] 
    /*0000d808*/ LDR         R3, [PC, #64]               @ 0x000000000000d850 
    /*0000d80c*/ MOVT        R2, #0                      @ .LC144 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f28] 
    /*0000d810*/ MOV         R1, #10 
    /*0000d814*/ MOV         R0, #3 
    /*0000d818*/ BL          0x000000000000D818          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d81c*/ B           H264E_SetSseCfg_xd740
    H264E_SetSseCfg_xd820:
    /*0000d820*/ MOVW        R3, #5793                   @ 0x16a1 
    /*0000d824*/ STR         R5, [SP, #4] 
    /*0000d828*/ STR         R3, [SP] 
    /*0000d82c*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13c4] 
    /*0000d830*/ LDR         R3, [PC, #24]               @ 0x000000000000d850 
    /*0000d834*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13c4] 
    /*0000d838*/ MOV         R1, #10 
    /*0000d83c*/ MOV         R0, #3 
    /*0000d840*/ MOVW        R4, #32776                  @ 0x8008 
    /*0000d844*/ BL          0x000000000000D844          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d848*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000d84c*/ B           H264E_SetSseCfg_xd740
    /*0000d850*/ ANDEQ       R0, R0, IP, ASR #14 
FUNC_END H264E_SetSseCfg


FUNC_BEGIN H264E_SetColor2Grey
    /*0000d854*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000d858*/ SUB         SP, SP, #20 
    /*0000d85c*/ MOV         R6, R1 
    /*0000d860*/ MOV         R5, R0 
    /*0000d864*/ BL          0x000000000000D864          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000d868*/ SUBS        R4, R0, #0 
    /*0000d86c*/ BEQ         H264E_SetColor2Grey_xd87c
    H264E_SetColor2Grey_xd870:
    /*0000d870*/ MOV         R0, R4 
    /*0000d874*/ ADD         SP, SP, #20 
    /*0000d878*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_SetColor2Grey_xd87c:
    /*0000d87c*/ MOV         R0, R5 
    /*0000d880*/ BL          0x000000000000D880          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000d884*/ SUBS        R4, R0, #0 
    /*0000d888*/ BNE         H264E_SetColor2Grey_xd870
    /*0000d88c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000d890*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000d894*/ ADD         R3, R3, R5, LSL #2 
    /*0000d898*/ LDR         R7, [R3, #64]               @ 0x40 
    /*0000d89c*/ ADD         R9, R7, #12288              @ 0x3000 
    /*0000d8a0*/ LDR         R3, [R9, #2004]             @ 0x7d4 
    /*0000d8a4*/ CMP         R3, R6 
    /*0000d8a8*/ BEQ         H264E_SetColor2Grey_xd870
    /*0000d8ac*/ CMP         R6, #1 
    /*0000d8b0*/ BHI         H264E_SetColor2Grey_xd904
    /*0000d8b4*/ ADD         R8, R7, #9792               @ 0x2640 
    /*0000d8b8*/ ADD         R1, SP, #12 
    /*0000d8bc*/ ADD         R8, R8, #40                 @ 0x28 
    /*0000d8c0*/ ADD         R7, R7, #8192               @ 0x2000 
    /*0000d8c4*/ MOV         R0, R8 
    /*0000d8c8*/ BL          0x000000000000D8C8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000d8cc*/ STR         R6, [R9, #2004]             @ 0x7d4 
    /*0000d8d0*/ MOV         R0, R8 
    /*0000d8d4*/ ADD         R1, SP, #12 
    /*0000d8d8*/ BL          0x000000000000D8D8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000d8dc*/ LDR         R6, [R7, #2160]             @ 0x870 
    /*0000d8e0*/ CMP         R6, #1 
    /*0000d8e4*/ BNE         H264E_SetColor2Grey_xd870
    /*0000d8e8*/ MOV         R0, #19 
    /*0000d8ec*/ BL          0x000000000000D8EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000d8f0*/ MOV         R1, R6 
    /*0000d8f4*/ LDR         R3, [R0, #56]               @ 0x38 
    /*0000d8f8*/ MOV         R0, R5 
    /*0000d8fc*/ BLX         R3 
    /*0000d900*/ B           H264E_SetColor2Grey_xd870
    H264E_SetColor2Grey_xd904:
    /*0000d904*/ MOVW        R3, #5904                   @ 0x1710 
    /*0000d908*/ STR         R5, [SP, #4] 
    /*0000d90c*/ STR         R3, [SP] 
    /*0000d910*/ MOVW        R2, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f68] 
    /*0000d914*/ LDR         R3, [PC, #24]               @ 0x000000000000d934 
    /*0000d918*/ MOVT        R2, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f68] 
    /*0000d91c*/ MOV         R1, #10 
    /*0000d920*/ MOV         R0, #3 
    /*0000d924*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000d928*/ BL          0x000000000000D928          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d92c*/ MOVT        R4, #40970                  @ 0xa00a 
    /*0000d930*/ B           H264E_SetColor2Grey_xd870
    /*0000d934*/ ANDEQ       R0, R0, IP, ASR R7 
FUNC_END H264E_SetColor2Grey


FUNC_BEGIN H264e_SetChnParam
    /*0000d938*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000d93c*/ SUB         SP, SP, #20 
    /*0000d940*/ MOV         R6, R1 
    /*0000d944*/ MOV         R5, R0 
    /*0000d948*/ BL          0x000000000000D948          @ H264CheckChnId [R_ARM_CALL: .text+0xab4] 
    /*0000d94c*/ SUBS        R4, R0, #0 
    /*0000d950*/ BEQ         H264e_SetChnParam_xd960
    H264e_SetChnParam_xd954:
    /*0000d954*/ MOV         R0, R4 
    /*0000d958*/ ADD         SP, SP, #20 
    /*0000d95c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264e_SetChnParam_xd960:
    /*0000d960*/ MOV         R0, R5 
    /*0000d964*/ BL          0x000000000000D964          @ H264CheckChnExist [R_ARM_CALL: .text+0xb14] 
    /*0000d968*/ SUBS        R4, R0, #0 
    /*0000d96c*/ BNE         H264e_SetChnParam_xd954
    /*0000d970*/ MOV         R0, R6 
    /*0000d974*/ BL          0x000000000000D974          @ H264CheckNullPtr [R_ARM_CALL: .text+0xb70] 
    /*0000d978*/ SUBS        R4, R0, #0 
    /*0000d97c*/ BNE         H264e_SetChnParam_xd954
    /*0000d980*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000d984*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000d988*/ ADD         R3, R7, R5, LSL #2 
    /*0000d98c*/ LDR         R9, [R6, #8] 
    /*0000d990*/ LDR         R4, [R3, #64]               @ 0x40 
    /*0000d994*/ ADD         R8, R4, #12288              @ 0x3000 
    /*0000d998*/ LDR         R3, [R8, #1976]             @ 0x7b8 
    /*0000d99c*/ CMP         R9, R3 
    /*0000d9a0*/ BEQ         H264e_SetChnParam_xd9c8
    /*0000d9a4*/ ADD         R4, R4, #9792               @ 0x2640 
    /*0000d9a8*/ ADD         R1, SP, #12 
    /*0000d9ac*/ ADD         R4, R4, #40                 @ 0x28 
    /*0000d9b0*/ MOV         R0, R4 
    /*0000d9b4*/ BL          0x000000000000D9B4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000d9b8*/ MOV         R0, R4 
    /*0000d9bc*/ ADD         R1, SP, #12 
    /*0000d9c0*/ STR         R9, [R8, #1976]             @ 0x7b8 
    /*0000d9c4*/ BL          0x000000000000D9C4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    H264e_SetChnParam_xd9c8:
    /*0000d9c8*/ LDR         R1, [R6] 
    /*0000d9cc*/ MOV         R0, R5 
    /*0000d9d0*/ BL          0x000000000000D9D0          @ H264E_SetColor2Grey [R_ARM_CALL: .text+0xd854] 
    /*0000d9d4*/ SUBS        R4, R0, #0 
    /*0000d9d8*/ LDREQ       R3, [R7, R5, LSL #2] 
    /*0000d9dc*/ ADDEQ       R3, R3, #1 
    /*0000d9e0*/ STREQ       R3, [R7, R5, LSL #2] 
    /*0000d9e4*/ BEQ         H264e_SetChnParam_xd954
    /*0000d9e8*/ MOVW        R3, #5944                   @ 0x1738 
    /*0000d9ec*/ STR         R5, [SP, #4] 
    /*0000d9f0*/ STR         R3, [SP] 
    /*0000d9f4*/ MOVW        R2, #0                      @ .LC146 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2fa8] 
    /*0000d9f8*/ LDR         R3, [PC, #16]               @ 0x000000000000da10 
    /*0000d9fc*/ MOVT        R2, #0                      @ .LC146 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2fa8] 
    /*0000da00*/ MOV         R1, #10 
    /*0000da04*/ MOV         R0, #3 
    /*0000da08*/ BL          0x000000000000DA08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000da0c*/ B           H264e_SetChnParam_xd954
    /*0000da10*/ ANDEQ       R0, R0, R0, ROR R7 
FUNC_END H264e_SetChnParam


FUNC_BEGIN H264E_ModInit
    /*0000da14*/ PUSH        {R4, R5, LR} 
    /*0000da18*/ MOV         R0, #25 
    /*0000da1c*/ SUB         SP, SP, #12 
    /*0000da20*/ BL          0x000000000000DA20          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000da24*/ CMP         R0, #0 
    /*0000da28*/ BEQ         H264E_ModInit_xdb68
    /*0000da2c*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000da30*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000da34*/ LDR         R1, [R4, #128]              @ 0x80 
    /*0000da38*/ CMP         R1, #1 
    /*0000da3c*/ BHI         H264E_ModInit_xdad0
    /*0000da40*/ MOVW        R5, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000da44*/ MOVT        R5, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000da48*/ LDR         R1, [R5] 
    /*0000da4c*/ SUB         R3, R1, #2 
    /*0000da50*/ CMP         R3, #1 
    /*0000da54*/ BHI         H264E_ModInit_xdae4
    /*0000da58*/ LDR         R1, [R4, #132]              @ 0x84 
    /*0000da5c*/ CMP         R1, #1 
    /*0000da60*/ BHI         H264E_ModInit_xdb00
    /*0000da64*/ LDR         R1, [R5, #4] 
    /*0000da68*/ CMP         R1, #1 
    /*0000da6c*/ BHI         H264E_ModInit_xdb14
    /*0000da70*/ MOVW        R0, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3114] 
    /*0000da74*/ MOV         R1, #0 
    /*0000da78*/ MOVT        R0, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3114] 
    /*0000da7c*/ BL          0x000000000000DA7C          @ osal_create_proc_entry [R_ARM_CALL: +0x0] 
    /*0000da80*/ SUBS        R2, R0, #0 
    /*0000da84*/ BEQ         H264E_ModInit_xdb60
    /*0000da88*/ ADD         R0, R5, #8 
    /*0000da8c*/ MOVW        R3, #0                      @ H264eProcShow [R_ARM_MOVW_ABS_NC: .text+0xdc8c] 
    /*0000da90*/ MOVT        R3, #0                      @ H264eProcShow [R_ARM_MOVT_ABS: .text+0xdc8c] 
    /*0000da94*/ STR         R3, [R2, #60]               @ 0x3c 
    /*0000da98*/ BL          0x000000000000DA98          @ CMPI_RegisterModule [R_ARM_CALL: +0x0] 
    /*0000da9c*/ SUBS        R5, R0, #0 
    /*0000daa0*/ BNE         H264E_ModInit_xdb28
    /*0000daa4*/ MOV         R1, #1 
    /*0000daa8*/ ADD         R0, R4, #204                @ 0xcc 
    /*0000daac*/ BL          0x000000000000DAAC          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*0000dab0*/ MOVW        R1, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x314c] 
    /*0000dab4*/ MOVW        R0, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3158] 
    /*0000dab8*/ MOVT        R1, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0x314c] 
    /*0000dabc*/ MOVT        R0, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3158] 
    /*0000dac0*/ BL          0x000000000000DAC0          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0000dac4*/ MOV         R0, R5 
    H264E_ModInit_xdac8:
    /*0000dac8*/ ADD         SP, SP, #12 
    /*0000dacc*/ POP         {R4, R5, PC} 
    H264E_ModInit_xdad0:
    /*0000dad0*/ MOVW        R0, #0                      @ .LC148 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3014] 
    /*0000dad4*/ MOVT        R0, #0                      @ .LC148 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3014] 
    /*0000dad8*/ BL          0x000000000000DAD8          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0000dadc*/ MVN         R0, #0 
    /*0000dae0*/ B           H264E_ModInit_xdac8
    H264E_ModInit_xdae4:
    /*0000dae4*/ MOVW        R0, #0                      @ .LC149 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3054] 
    /*0000dae8*/ MOV         R3, #2 
    /*0000daec*/ MOVT        R0, #0                      @ .LC149 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3054] 
    /*0000daf0*/ MOV         R2, #3 
    /*0000daf4*/ BL          0x000000000000DAF4          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0000daf8*/ MVN         R0, #0 
    /*0000dafc*/ B           H264E_ModInit_xdac8
    H264E_ModInit_xdb00:
    /*0000db00*/ MOVW        R0, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3094] 
    /*0000db04*/ MOVT        R0, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3094] 
    /*0000db08*/ BL          0x000000000000DB08          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0000db0c*/ MVN         R0, #0 
    /*0000db10*/ B           H264E_ModInit_xdac8
    H264E_ModInit_xdb14:
    /*0000db14*/ MOVW        R0, #0                      @ .LC151 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30d4] 
    /*0000db18*/ MOVT        R0, #0                      @ .LC151 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30d4] 
    /*0000db1c*/ BL          0x000000000000DB1C          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0000db20*/ MVN         R0, #0 
    /*0000db24*/ B           H264E_ModInit_xdac8
    H264E_ModInit_xdb28:
    /*0000db28*/ MOV         R1, #0 
    /*0000db2c*/ MOVW        R0, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3114] 
    /*0000db30*/ MOVT        R0, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3114] 
    /*0000db34*/ BL          0x000000000000DB34          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    /*0000db38*/ MOVW        R3, #6548                   @ 0x1994 
    /*0000db3c*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x311c] 
    /*0000db40*/ STR         R3, [SP] 
    /*0000db44*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0x311c] 
    /*0000db48*/ LDR         R3, [PC, #44]               @ 0x000000000000db7c 
    /*0000db4c*/ MOV         R1, #10 
    /*0000db50*/ MOV         R0, #3 
    /*0000db54*/ BL          0x000000000000DB54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000db58*/ MVN         R0, #0 
    /*0000db5c*/ B           H264E_ModInit_xdac8
    H264E_ModInit_xdb60:
    /*0000db60*/ MVN         R0, #0 
    /*0000db64*/ B           H264E_ModInit_xdac8
    H264E_ModInit_xdb68:
    /*0000db68*/ MOVW        R0, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2fe0] 
    /*0000db6c*/ MOVT        R0, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2fe0] 
    /*0000db70*/ BL          0x000000000000DB70          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0000db74*/ MVN         R0, #0 
    /*0000db78*/ B           H264E_ModInit_xdac8
    /*0000db7c*/ ANDEQ       R0, R0, R4, LSL #15 
FUNC_END H264E_ModInit


FUNC_BEGIN H264E_ModExit
    /*0000db80*/ PUSH        {R4, LR} 
    /*0000db84*/ MOV         R0, #10 
    /*0000db88*/ BL          0x000000000000DB88          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000db8c*/ CMP         R0, #0 
    /*0000db90*/ BEQ         H264E_ModExit_xdbcc
    /*0000db94*/ MOV         R0, #10 
    /*0000db98*/ BL          0x000000000000DB98          @ CMPI_UnRegisterModule [R_ARM_CALL: +0x0] 
    /*0000db9c*/ MOV         R1, #0 
    /*0000dba0*/ MOVW        R0, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3114] 
    /*0000dba4*/ MOVT        R0, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3114] 
    /*0000dba8*/ BL          0x000000000000DBA8          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    /*0000dbac*/ LDR         R0, [PC, #40]               @ 0x000000000000dbdc 
    /*0000dbb0*/ BL          0x000000000000DBB0          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    /*0000dbb4*/ MOVW        R1, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x314c] 
    /*0000dbb8*/ MOVW        R0, #0                      @ .LC157 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31b4] 
    /*0000dbbc*/ MOVT        R1, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0x314c] 
    /*0000dbc0*/ MOVT        R0, #0                      @ .LC157 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31b4] 
    /*0000dbc4*/ POP         {R4, LR} 
    H264E_ModExit_xdbc8:
    /*0000dbc8*/ B           H264E_ModExit_xdbc8         @ osal_printk [R_ARM_JUMP24: +0x0] 
    H264E_ModExit_xdbcc:
    /*0000dbcc*/ MOVW        R0, #0                      @ .LC156 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3174] 
    /*0000dbd0*/ MOVT        R0, #0                      @ .LC156 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3174] 
    /*0000dbd4*/ POP         {R4, LR} 
    H264E_ModExit_xdbd8:
    /*0000dbd8*/ B           H264E_ModExit_xdbd8         @ osal_printk [R_ARM_JUMP24: +0x0] 
    /*0000dbdc*/ ANDEQ       R0, R0, IP, ASR #1 
FUNC_END H264E_ModExit


FUNC_BEGIN H264eGetCuPredictionInfo
    /*0000dbe0*/ LDR         R3, [R0] 
    /*0000dbe4*/ STR         R3, [R1] 
    /*0000dbe8*/ LDR         R3, [R0, #32] 
    /*0000dbec*/ SUB         R2, R3, #1 
    /*0000dbf0*/ CMP         R2, #6 
    /*0000dbf4*/ RSBLS       R3, R3, #8 
    /*0000dbf8*/ STR         R3, [R1, #32] 
    /*0000dbfc*/ LDR         R3, [R0, #28] 
    /*0000dc00*/ SUB         R2, R3, #1 
    /*0000dc04*/ CMP         R2, #6 
    /*0000dc08*/ RSBLS       R3, R3, #8 
    /*0000dc0c*/ STR         R3, [R1, #28] 
    /*0000dc10*/ LDR         R3, [R0, #24] 
    /*0000dc14*/ SUB         R2, R3, #1 
    /*0000dc18*/ CMP         R2, #6 
    /*0000dc1c*/ RSBLS       R3, R3, #8 
    /*0000dc20*/ STR         R3, [R1, #24] 
    /*0000dc24*/ LDR         R3, [R0, #20] 
    /*0000dc28*/ SUB         R2, R3, #1 
    /*0000dc2c*/ CMP         R2, #6 
    /*0000dc30*/ RSBLS       R3, R3, #8 
    /*0000dc34*/ STR         R3, [R1, #20] 
    /*0000dc38*/ LDR         R3, [R0, #16] 
    /*0000dc3c*/ SUB         R2, R3, #1 
    /*0000dc40*/ CMP         R2, #6 
    /*0000dc44*/ RSBLS       R3, R3, #8 
    /*0000dc48*/ STR         R3, [R1, #16] 
    /*0000dc4c*/ LDR         R3, [R0, #12] 
    /*0000dc50*/ SUB         R2, R3, #1 
    /*0000dc54*/ CMP         R2, #6 
    /*0000dc58*/ RSBLS       R3, R3, #8 
    /*0000dc5c*/ STR         R3, [R1, #12] 
    /*0000dc60*/ LDR         R3, [R0, #8] 
    /*0000dc64*/ SUB         R2, R3, #1 
    /*0000dc68*/ CMP         R2, #6 
    /*0000dc6c*/ RSBLS       R3, R3, #8 
    /*0000dc70*/ STR         R3, [R1, #8] 
    /*0000dc74*/ LDR         R3, [R0, #4] 
    /*0000dc78*/ SUB         R2, R3, #1 
    /*0000dc7c*/ CMP         R2, #6 
    /*0000dc80*/ RSBLS       R3, R3, #8 
    /*0000dc84*/ STR         R3, [R1, #4] 
    /*0000dc88*/ BX          LR 
FUNC_END H264eGetCuPredictionInfo


FUNC_BEGIN H264eProcShow
    /*0000dc8c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000dc90*/ MOV         R4, R0 
    /*0000dc94*/ SUB         SP, SP, #124                @ 0x7c 
    /*0000dc98*/ MOVW        R0, #0                      @ g_stH264eSem [R_ARM_MOVW_ABS_NC: .bss+0xcc] 
    /*0000dc9c*/ MOVT        R0, #0                      @ g_stH264eSem [R_ARM_MOVT_ABS: .bss+0xcc] 
    /*0000dca0*/ BL          0x000000000000DCA0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000dca4*/ CMP         R0, #0 
    /*0000dca8*/ BNE         H264eProcShow_xe8b0
    /*0000dcac*/ MOVW        R1, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31d4] 
    /*0000dcb0*/ MOV         R0, R4 
    /*0000dcb4*/ MOVT        R1, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31d4] 
    /*0000dcb8*/ BL          0x000000000000DCB8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000dcbc*/ MOVW        R1, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3234] 
    /*0000dcc0*/ MOV         R0, R4 
    /*0000dcc4*/ MOVT        R1, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3234] 
    /*0000dcc8*/ BL          0x000000000000DCC8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000dccc*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32bc] 
    /*0000dcd0*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32c8] 
    /*0000dcd4*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32bc] 
    /*0000dcd8*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32c8] 
    /*0000dcdc*/ STR         R2, [SP, #8] 
    /*0000dce0*/ STR         R3, [SP, #4] 
    /*0000dce4*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32d4] 
    /*0000dce8*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3288] 
    /*0000dcec*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32d4] 
    /*0000dcf0*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3288] 
    /*0000dcf4*/ STR         R2, [SP] 
    /*0000dcf8*/ MOVW        R1, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32a0] 
    /*0000dcfc*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3298] 
    /*0000dd00*/ MOVT        R1, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32a0] 
    /*0000dd04*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3298] 
    /*0000dd08*/ MOV         R0, R4 
    /*0000dd0c*/ BL          0x000000000000DD0C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000dd10*/ MOVW        LR, #0                      @ g_bH264QpHstgrmEn [R_ARM_MOVW_ABS_NC: .bss+0x88] 
    /*0000dd14*/ MOVW        IP, #0                      @ H264eMiniBufMode [R_ARM_MOVW_ABS_NC: .bss+0x84] 
    /*0000dd18*/ MOVT        LR, #0                      @ g_bH264QpHstgrmEn [R_ARM_MOVT_ABS: .bss+0x88] 
    /*0000dd1c*/ MOVT        IP, #0                      @ H264eMiniBufMode [R_ARM_MOVT_ABS: .bss+0x84] 
    /*0000dd20*/ MOVW        R0, #0                      @ H264ePowerSaveEn [R_ARM_MOVW_ABS_NC: .data+0x4] 
    /*0000dd24*/ MOVT        R0, #0                      @ H264ePowerSaveEn [R_ARM_MOVT_ABS: .data+0x4] 
    /*0000dd28*/ LDR         R5, [LR] 
    /*0000dd2c*/ LDR         LR, [IP] 
    /*0000dd30*/ MOVW        R3, #0                      @ H264eVBSource [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000dd34*/ LDR         IP, [R0] 
    /*0000dd38*/ MOVW        R2, #0                      @ H264eOneStreamBuffer [R_ARM_MOVW_ABS_NC: .bss+0x80] 
    /*0000dd3c*/ MOVT        R3, #0                      @ H264eVBSource [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000dd40*/ MOVT        R2, #0                      @ H264eOneStreamBuffer [R_ARM_MOVT_ABS: .bss+0x80] 
    /*0000dd44*/ MOVW        R1, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32e0] 
    /*0000dd48*/ MOV         R0, R4 
    /*0000dd4c*/ LDR         R3, [R3] 
    /*0000dd50*/ MOVT        R1, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32e0] 
    /*0000dd54*/ LDR         R2, [R2] 
    /*0000dd58*/ STR         R5, [SP, #8] 
    /*0000dd5c*/ ADD         R5, SP, #60                 @ 0x3c 
    /*0000dd60*/ STM         SP, {IP, LR} 
    /*0000dd64*/ BL          0x000000000000DD64          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000dd68*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x794] 
    /*0000dd6c*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x794] 
    /*0000dd70*/ ADD         R6, IP, #48                 @ 0x30 
    H264eProcShow_xdd74:
    /*0000dd74*/ LDR         R0, [IP] 
    /*0000dd78*/ ADD         IP, IP, #16 
    /*0000dd7c*/ LDR         R1, [IP, #-12] 
    /*0000dd80*/ MOV         LR, R5 
    /*0000dd84*/ LDR         R2, [IP, #-8] 
    /*0000dd88*/ ADD         R5, R5, #16 
    /*0000dd8c*/ LDR         R3, [IP, #-4] 
    /*0000dd90*/ CMP         IP, R6 
    /*0000dd94*/ STMIA       LR!, {R0, R1, R2, R3} 
    /*0000dd98*/ BNE         H264eProcShow_xdd74
    /*0000dd9c*/ LDR         R0, [IP] 
    /*0000dda0*/ MOVW        R8, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33dc] 
    /*0000dda4*/ LDR         R1, [IP, #4] 
    /*0000dda8*/ MOVT        R8, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33dc] 
    /*0000ddac*/ LDR         R2, [IP, #8] 
    /*0000ddb0*/ LDR         R3, [PC, #2824]             @ 0x000000000000e8c0 
    /*0000ddb4*/ LDR         R7, [PC, #2824]             @ 0x000000000000e8c4 
    /*0000ddb8*/ MOV         R6, R3 
    /*0000ddbc*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000ddc0*/ ADD         R9, R6, #64                 @ 0x40 
    /*0000ddc4*/ ADD         SL, R7, #4 
    /*0000ddc8*/ STMIA       R5!, {R0, R1, R2} 
    /*0000ddcc*/ MOVW        R1, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32fc] 
    /*0000ddd0*/ MOV         R0, R4 
    /*0000ddd4*/ MOVT        R1, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32fc] 
    /*0000ddd8*/ BL          0x000000000000DDD8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000dddc*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x338c] 
    /*0000dde0*/ MOVW        R3, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3398] 
    /*0000dde4*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x338c] 
    /*0000dde8*/ MOVT        R3, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3398] 
    /*0000ddec*/ STR         R2, [SP, #32] 
    /*0000ddf0*/ STR         R3, [SP, #28] 
    /*0000ddf4*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33a0] 
    /*0000ddf8*/ MOVW        R3, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33a8] 
    /*0000ddfc*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33a0] 
    /*0000de00*/ MOVT        R3, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33a8] 
    /*0000de04*/ STR         R2, [SP, #24] 
    /*0000de08*/ STR         R3, [SP, #20] 
    /*0000de0c*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33b0] 
    /*0000de10*/ MOVW        R3, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33b8] 
    /*0000de14*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33b0] 
    /*0000de18*/ MOVT        R3, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33b8] 
    /*0000de1c*/ STR         R2, [SP, #16] 
    /*0000de20*/ STR         R3, [SP, #12] 
    /*0000de24*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33c0] 
    /*0000de28*/ MOVW        R3, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33c8] 
    /*0000de2c*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33c0] 
    /*0000de30*/ MOVT        R3, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33c8] 
    /*0000de34*/ STR         R2, [SP, #8] 
    /*0000de38*/ STR         R3, [SP, #4] 
    /*0000de3c*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33d0] 
    /*0000de40*/ MOVW        R3, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3350] 
    /*0000de44*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33d0] 
    /*0000de48*/ MOVT        R3, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3350] 
    /*0000de4c*/ STR         R2, [SP] 
    /*0000de50*/ MOVW        R1, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3360] 
    /*0000de54*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x335c] 
    /*0000de58*/ MOVT        R1, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3360] 
    /*0000de5c*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x335c] 
    /*0000de60*/ MOV         R0, R4 
    /*0000de64*/ BL          0x000000000000DE64          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000de68*/ STR         R8, [SP, #44]               @ 0x2c 
    H264eProcShow_xde6c:
    /*0000de6c*/ LDR         IP, [R6, #4]! 
    /*0000de70*/ MOV         FP, #10 
    /*0000de74*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0000de78*/ MOV         R0, R4 
    /*0000de7c*/ CMP         IP, #0 
    /*0000de80*/ ADD         LR, IP, #12288              @ 0x3000 
    /*0000de84*/ BEQ         H264eProcShow_xdef4
    /*0000de88*/ LDR         R5, [LR, #1976]             @ 0x7b8 
    /*0000de8c*/ ADD         R8, SP, #60                 @ 0x3c 
    /*0000de90*/ LDR         R3, [IP, #956]              @ 0x3bc 
    /*0000de94*/ LDR         R2, [LR, #1948]             @ 0x79c 
    /*0000de98*/ STR         R5, [SP, #32] 
    /*0000de9c*/ LDR         R5, [LR, #2084]             @ 0x824 
    /*0000dea0*/ MLA         R5, FP, R5, R8 
    /*0000dea4*/ STR         R5, [SP, #28] 
    /*0000dea8*/ LDR         R5, [IP, #972]              @ 0x3cc 
    /*0000deac*/ ADD         R5, R7, R5, LSL #1 
    /*0000deb0*/ STR         R5, [SP, #24] 
    /*0000deb4*/ LDR         R5, [IP, #964]              @ 0x3c4 
    /*0000deb8*/ STR         R5, [SP, #20] 
    /*0000debc*/ MOV         R5, #6 
    /*0000dec0*/ LDR         LR, [LR, #2004]             @ 0x7d4 
    /*0000dec4*/ ADD         LR, R7, LR, LSL #1 
    /*0000dec8*/ STR         LR, [SP, #16] 
    /*0000decc*/ LDR         LR, [IP, #968]              @ 0x3c8 
    /*0000ded0*/ MLA         R8, R5, LR, SL 
    /*0000ded4*/ STR         R8, [SP, #12] 
    /*0000ded8*/ LDR         LR, [IP, #980]              @ 0x3d4 
    /*0000dedc*/ STR         LR, [SP, #8] 
    /*0000dee0*/ LDR         LR, [IP, #976]              @ 0x3d0 
    /*0000dee4*/ STR         LR, [SP, #4] 
    /*0000dee8*/ LDR         IP, [IP, #960]              @ 0x3c0 
    /*0000deec*/ STR         IP, [SP] 
    /*0000def0*/ BL          0x000000000000DEF0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    H264eProcShow_xdef4:
    /*0000def4*/ CMP         R6, R9 
    /*0000def8*/ BNE         H264eProcShow_xde6c
    /*0000defc*/ MOVW        R1, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3408] 
    /*0000df00*/ MOV         R0, R4 
    /*0000df04*/ MOVT        R1, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3408] 
    /*0000df08*/ LDR         R5, [PC, #2480]             @ 0x000000000000e8c0 
    /*0000df0c*/ BL          0x000000000000DF0C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000df10*/ MOVW        R1, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x340c] 
    /*0000df14*/ MOV         R0, R4 
    /*0000df18*/ MOVT        R1, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x340c] 
    /*0000df1c*/ BL          0x000000000000DF1C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000df20*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3494] 
    /*0000df24*/ MOVW        R3, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x349c] 
    /*0000df28*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3494] 
    /*0000df2c*/ MOVT        R3, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x349c] 
    /*0000df30*/ STR         R2, [SP, #24] 
    /*0000df34*/ STR         R3, [SP, #20] 
    /*0000df38*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34a4] 
    /*0000df3c*/ MOVW        R3, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34ac] 
    /*0000df40*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34a4] 
    /*0000df44*/ MOVT        R3, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34ac] 
    /*0000df48*/ STR         R2, [SP, #16] 
    /*0000df4c*/ STR         R3, [SP, #12] 
    /*0000df50*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34b4] 
    /*0000df54*/ MOVW        R3, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34bc] 
    /*0000df58*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34b4] 
    /*0000df5c*/ MOVT        R3, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34bc] 
    /*0000df60*/ STR         R2, [SP, #8] 
    /*0000df64*/ STR         R3, [SP, #4] 
    /*0000df68*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34c4] 
    /*0000df6c*/ MOVW        R3, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3460] 
    /*0000df70*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34c4] 
    /*0000df74*/ MOVT        R3, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3460] 
    /*0000df78*/ STR         R2, [SP] 
    /*0000df7c*/ MOVW        R1, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x346c] 
    /*0000df80*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x335c] 
    /*0000df84*/ MOVT        R1, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x346c] 
    /*0000df88*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x335c] 
    /*0000df8c*/ MOV         R0, R4 
    /*0000df90*/ MOVW        R7, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34d0] 
    /*0000df94*/ BL          0x000000000000DF94          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000df98*/ MOVT        R7, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34d0] 
    H264eProcShow_xdf9c:
    /*0000df9c*/ LDR         R3, [R5, #4]! 
    /*0000dfa0*/ MOV         R1, R7 
    /*0000dfa4*/ MOV         R0, R4 
    /*0000dfa8*/ CMP         R3, #0 
    /*0000dfac*/ ADD         IP, R3, #12288              @ 0x3000 
    /*0000dfb0*/ BEQ         H264eProcShow_xdff8
    /*0000dfb4*/ LDR         LR, [IP, #1980]             @ 0x7bc 
    /*0000dfb8*/ LDR         R3, [IP, #1952]             @ 0x7a0 
    /*0000dfbc*/ LDR         R2, [IP, #1948]             @ 0x79c 
    /*0000dfc0*/ STR         LR, [SP, #24] 
    /*0000dfc4*/ LDR         LR, [IP, #1984]             @ 0x7c0 
    /*0000dfc8*/ STR         LR, [SP, #20] 
    /*0000dfcc*/ LDR         LR, [IP, #1972]             @ 0x7b4 
    /*0000dfd0*/ STR         LR, [SP, #16] 
    /*0000dfd4*/ LDR         LR, [IP, #1964]             @ 0x7ac 
    /*0000dfd8*/ STR         LR, [SP, #12] 
    /*0000dfdc*/ LDR         LR, [IP, #1968]             @ 0x7b0 
    /*0000dfe0*/ STR         LR, [SP, #8] 
    /*0000dfe4*/ LDR         LR, [IP, #1960]             @ 0x7a8 
    /*0000dfe8*/ STR         LR, [SP, #4] 
    /*0000dfec*/ LDR         IP, [IP, #1956]             @ 0x7a4 
    /*0000dff0*/ STR         IP, [SP] 
    /*0000dff4*/ BL          0x000000000000DFF4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    H264eProcShow_xdff8:
    /*0000dff8*/ CMP         R5, R6 
    /*0000dffc*/ BNE         H264eProcShow_xdf9c
    /*0000e000*/ MOVW        R1, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3408] 
    /*0000e004*/ MOV         R0, R4 
    /*0000e008*/ MOVT        R1, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3408] 
    /*0000e00c*/ LDR         R7, [PC, #2220]             @ 0x000000000000e8c0 
    /*0000e010*/ BL          0x000000000000E010          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e014*/ MOVW        R1, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34f8] 
    /*0000e018*/ MOV         R0, R4 
    /*0000e01c*/ MOVT        R1, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34f8] 
    /*0000e020*/ BL          0x000000000000E020          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e024*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3584] 
    /*0000e028*/ MOVW        R3, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x358c] 
    /*0000e02c*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3584] 
    /*0000e030*/ MOVT        R3, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x358c] 
    /*0000e034*/ STR         R2, [SP, #20] 
    /*0000e038*/ STR         R3, [SP, #16] 
    /*0000e03c*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3594] 
    /*0000e040*/ MOVW        R3, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x359c] 
    /*0000e044*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3594] 
    /*0000e048*/ MOVT        R3, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x359c] 
    /*0000e04c*/ STR         R2, [SP, #12] 
    /*0000e050*/ STR         R3, [SP, #8] 
    /*0000e054*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35a4] 
    /*0000e058*/ MOVW        R3, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35ac] 
    /*0000e05c*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35a4] 
    /*0000e060*/ MOVT        R3, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35ac] 
    /*0000e064*/ STR         R2, [SP, #4] 
    /*0000e068*/ STR         R3, [SP] 
    /*0000e06c*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x335c] 
    /*0000e070*/ MOVW        R3, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x354c] 
    /*0000e074*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x335c] 
    /*0000e078*/ MOVT        R3, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x354c] 
    /*0000e07c*/ MOVW        R1, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3554] 
    /*0000e080*/ MOV         R0, R4 
    /*0000e084*/ MOVT        R1, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3554] 
    /*0000e088*/ BL          0x000000000000E088          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e08c*/ MOVW        R8, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3408] 
    /*0000e090*/ MOVW        R6, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35b4] 
    /*0000e094*/ MOVT        R8, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3408] 
    /*0000e098*/ MOVT        R6, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35b4] 
    H264eProcShow_xe09c:
    /*0000e09c*/ LDR         R3, [R7, #4]! 
    /*0000e0a0*/ CMP         R3, #0 
    /*0000e0a4*/ BEQ         H264eProcShow_xe154
    /*0000e0a8*/ ADD         R1, R3, #12288              @ 0x3000 
    /*0000e0ac*/ LDR         R2, [R1, #2396]             @ 0x95c 
    /*0000e0b0*/ CMP         R2, #0 
    /*0000e0b4*/ BEQ         H264eProcShow_xe148
    /*0000e0b8*/ LDR         IP, [R3, #1060]             @ 0x424 
    /*0000e0bc*/ LDR         R2, [IP, #160]              @ 0xa0 
    /*0000e0c0*/ LDR         R3, [IP, #172]              @ 0xac 
    /*0000e0c4*/ LDR         LR, [IP, #12] 
    /*0000e0c8*/ LDR         R9, [R2] 
    /*0000e0cc*/ LDR         R3, [R3] 
    /*0000e0d0*/ CMP         R9, R3 
    /*0000e0d4*/ LDRHI       R2, [IP, #8] 
    /*0000e0d8*/ ADDHI       R3, R3, R2 
    /*0000e0dc*/ LDR         R2, [IP, #168]              @ 0xa8 
    /*0000e0e0*/ SUB         R9, R3, R9 
    /*0000e0e4*/ LDR         R3, [IP, #164]              @ 0xa4 
    /*0000e0e8*/ LDR         R2, [R2] 
    /*0000e0ec*/ LDR         R3, [R3] 
    /*0000e0f0*/ CMP         R3, R2 
    /*0000e0f4*/ SUBLS       LR, R3, LR 
    /*0000e0f8*/ SUBHI       R3, R3, R2 
    /*0000e0fc*/ LDRLS       R0, [IP, #8] 
    /*0000e100*/ SUBHI       LR, R3, LR 
    /*0000e104*/ LDR         R3, [IP, #176]              @ 0xb0 
    /*0000e108*/ ADDLS       LR, LR, R0 
    /*0000e10c*/ MOV         R0, R4 
    /*0000e110*/ SUBLS       LR, LR, R2 
    /*0000e114*/ LDR         R2, [R1, #1948]             @ 0x79c 
    /*0000e118*/ STR         LR, [SP, #20] 
    /*0000e11c*/ MOV         R1, R6 
    /*0000e120*/ STR         R9, [SP, #16] 
    /*0000e124*/ LDR         LR, [IP, #128]              @ 0x80 
    /*0000e128*/ STR         LR, [SP, #12] 
    /*0000e12c*/ LDR         LR, [IP, #96]               @ 0x60 
    /*0000e130*/ STR         LR, [SP, #8] 
    /*0000e134*/ LDR         LR, [IP, #32] 
    /*0000e138*/ STR         LR, [SP, #4] 
    /*0000e13c*/ LDR         IP, [IP, #64]               @ 0x40 
    /*0000e140*/ STR         IP, [SP] 
    /*0000e144*/ BL          0x000000000000E144          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    H264eProcShow_xe148:
    /*0000e148*/ MOV         R1, R8 
    /*0000e14c*/ MOV         R0, R4 
    /*0000e150*/ BL          0x000000000000E150          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    H264eProcShow_xe154:
    /*0000e154*/ CMP         R7, R5 
    /*0000e158*/ BNE         H264eProcShow_xe09c
    /*0000e15c*/ MOVW        R1, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35f0] 
    /*0000e160*/ MOV         R0, R4 
    /*0000e164*/ MOVT        R1, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35f0] 
    /*0000e168*/ LDR         R7, [PC, #1872]             @ 0x000000000000e8c0 
    /*0000e16c*/ BL          0x000000000000E16C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e170*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3664] 
    /*0000e174*/ MOVW        R3, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3674] 
    /*0000e178*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3664] 
    /*0000e17c*/ MOVT        R3, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3674] 
    /*0000e180*/ STR         R2, [SP, #8] 
    /*0000e184*/ STR         R3, [SP, #4] 
    /*0000e188*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x354c] 
    /*0000e18c*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3644] 
    /*0000e190*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x354c] 
    /*0000e194*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3644] 
    /*0000e198*/ STR         R2, [SP] 
    /*0000e19c*/ MOVW        R1, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x364c] 
    /*0000e1a0*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x335c] 
    /*0000e1a4*/ MOVT        R1, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x364c] 
    /*0000e1a8*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x335c] 
    /*0000e1ac*/ MOV         R0, R4 
    /*0000e1b0*/ LDR         R8, [PC, #1804]             @ 0x000000000000e8c4 
    /*0000e1b4*/ BL          0x000000000000E1B4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e1b8*/ MOVW        R9, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x367c] 
    /*0000e1bc*/ MOVT        R9, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x367c] 
    /*0000e1c0*/ MOV         R6, #0 
    H264eProcShow_xe1c4:
    /*0000e1c4*/ LDR         R3, [R7, #4]! 
    /*0000e1c8*/ MOV         R2, R6 
    /*0000e1cc*/ MOV         R1, R9 
    /*0000e1d0*/ MOV         R0, R4 
    /*0000e1d4*/ CMP         R3, #0 
    /*0000e1d8*/ ADD         R6, R6, #1 
    /*0000e1dc*/ ADD         LR, R3, #12288              @ 0x3000 
    /*0000e1e0*/ ADD         IP, R3, #8192               @ 0x2000 
    /*0000e1e4*/ BEQ         H264eProcShow_xe210
    /*0000e1e8*/ LDR         LR, [LR, #1364]             @ 0x554 
    /*0000e1ec*/ LDR         R3, [IP, #1720]             @ 0x6b8 
    /*0000e1f0*/ ADD         LR, R8, LR, LSL #1 
    /*0000e1f4*/ STR         LR, [SP, #8] 
    /*0000e1f8*/ LDR         LR, [IP, #1716]             @ 0x6b4 
    /*0000e1fc*/ ADD         R3, R8, R3, LSL #1 
    /*0000e200*/ STR         LR, [SP, #4] 
    /*0000e204*/ LDR         IP, [IP, #1712]             @ 0x6b0 
    /*0000e208*/ STR         IP, [SP] 
    /*0000e20c*/ BL          0x000000000000E20C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    H264eProcShow_xe210:
    /*0000e210*/ CMP         R7, R5 
    /*0000e214*/ BNE         H264eProcShow_xe1c4
    /*0000e218*/ MOVW        R1, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3408] 
    /*0000e21c*/ MOV         R0, R4 
    /*0000e220*/ MOVT        R1, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3408] 
    /*0000e224*/ LDR         R7, [PC, #1684]             @ 0x000000000000e8c0 
    /*0000e228*/ BL          0x000000000000E228          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e22c*/ MOVW        R1, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3694] 
    /*0000e230*/ MOV         R0, R4 
    /*0000e234*/ MOVT        R1, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3694] 
    /*0000e238*/ BL          0x000000000000E238          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e23c*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3700] 
    /*0000e240*/ MOVW        R3, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x36e8] 
    /*0000e244*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3700] 
    /*0000e248*/ MOVT        R3, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x36e8] 
    /*0000e24c*/ STR         R2, [SP] 
    /*0000e250*/ MOVW        R1, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x36f0] 
    /*0000e254*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x335c] 
    /*0000e258*/ MOVT        R1, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x36f0] 
    /*0000e25c*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x335c] 
    /*0000e260*/ MOV         R0, R4 
    /*0000e264*/ MOVW        R8, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3708] 
    /*0000e268*/ BL          0x000000000000E268          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e26c*/ MOVT        R8, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3708] 
    /*0000e270*/ MOV         R6, #0 
    H264eProcShow_xe274:
    /*0000e274*/ LDR         R3, [R7, #4]! 
    /*0000e278*/ MOV         R2, R6 
    /*0000e27c*/ MOV         R1, R8 
    /*0000e280*/ MOV         R0, R4 
    /*0000e284*/ CMP         R3, #0 
    /*0000e288*/ ADD         R6, R6, #1 
    /*0000e28c*/ ADD         IP, R3, #12288              @ 0x3000 
    /*0000e290*/ BEQ         H264eProcShow_xe2a4
    /*0000e294*/ LDR         R3, [IP, #2012]             @ 0x7dc 
    /*0000e298*/ LDR         IP, [IP, #2016]             @ 0x7e0 
    /*0000e29c*/ STR         IP, [SP] 
    /*0000e2a0*/ BL          0x000000000000E2A0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    H264eProcShow_xe2a4:
    /*0000e2a4*/ CMP         R7, R5 
    /*0000e2a8*/ BNE         H264eProcShow_xe274
    /*0000e2ac*/ MOVW        R1, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3408] 
    /*0000e2b0*/ MOV         R0, R4 
    /*0000e2b4*/ MOVT        R1, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3408] 
    /*0000e2b8*/ LDR         R9, [PC, #1540]             @ 0x000000000000e8c4 
    /*0000e2bc*/ BL          0x000000000000E2BC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e2c0*/ MOVW        R1, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3718] 
    /*0000e2c4*/ MOV         R0, R4 
    /*0000e2c8*/ MOVT        R1, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3718] 
    /*0000e2cc*/ BL          0x000000000000E2CC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e2d0*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3798] 
    /*0000e2d4*/ MOVW        R3, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37a0] 
    /*0000e2d8*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3798] 
    /*0000e2dc*/ MOVT        R3, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37a0] 
    /*0000e2e0*/ STR         R2, [SP, #16] 
    /*0000e2e4*/ STR         R3, [SP, #12] 
    /*0000e2e8*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37ac] 
    /*0000e2ec*/ MOVW        R3, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37b8] 
    /*0000e2f0*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37ac] 
    /*0000e2f4*/ MOVT        R3, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37b8] 
    /*0000e2f8*/ STR         R2, [SP, #8] 
    /*0000e2fc*/ STR         R3, [SP, #4] 
    /*0000e300*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37c8] 
    /*0000e304*/ MOVW        R3, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x376c] 
    /*0000e308*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37c8] 
    /*0000e30c*/ MOVT        R3, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x376c] 
    /*0000e310*/ STR         R2, [SP] 
    /*0000e314*/ MOVW        R1, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3778] 
    /*0000e318*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x335c] 
    /*0000e31c*/ MOVT        R1, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3778] 
    /*0000e320*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x335c] 
    /*0000e324*/ MOV         R0, R4 
    /*0000e328*/ MOVW        FP, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3830] 
    /*0000e32c*/ BL          0x000000000000E32C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e330*/ LDR         R7, [PC, #1416]             @ 0x000000000000e8c0 
    /*0000e334*/ ADD         R3, R9, #28 
    /*0000e338*/ ADD         R8, R9, #48                 @ 0x30 
    /*0000e33c*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000e340*/ MOVT        FP, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3830] 
    /*0000e344*/ MOVW        R3, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3810] 
    /*0000e348*/ MOV         R6, #0 
    /*0000e34c*/ MOVT        R3, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3810] 
    /*0000e350*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000e354*/ B           H264eProcShow_xe388
    H264eProcShow_xe358:
    /*0000e358*/ LDR         LR, [IP, #2160]             @ 0x870 
    /*0000e35c*/ CMP         LR, #1 
    /*0000e360*/ ADD         LR, R9, LR, LSL #1 
    /*0000e364*/ BEQ         H264eProcShow_xe820
    /*0000e368*/ STR         R8, [SP, #16] 
    /*0000e36c*/ STR         R8, [SP, #12] 
    /*0000e370*/ STR         R8, [SP, #8] 
    /*0000e374*/ STM         SP, {R8, LR} 
    /*0000e378*/ BL          0x000000000000E378          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    H264eProcShow_xe37c:
    /*0000e37c*/ CMP         R7, R5 
    /*0000e380*/ ADD         R6, R6, #1 
    /*0000e384*/ BEQ         H264eProcShow_xe3fc
    H264eProcShow_xe388:
    /*0000e388*/ LDR         R3, [R7, #4]! 
    /*0000e38c*/ MOV         R2, R6 
    /*0000e390*/ MOV         R1, FP 
    /*0000e394*/ MOV         R0, R4 
    /*0000e398*/ CMP         R3, #0 
    /*0000e39c*/ ADD         IP, R3, #8192               @ 0x2000 
    /*0000e3a0*/ BEQ         H264eProcShow_xe37c
    /*0000e3a4*/ LDR         SL, [IP, #1372]             @ 0x55c 
    /*0000e3a8*/ CMP         SL, #1 
    /*0000e3ac*/ ADD         R3, R9, SL, LSL #1 
    /*0000e3b0*/ BNE         H264eProcShow_xe358
    /*0000e3b4*/ LDR         R0, [IP, #2160]             @ 0x870 
    /*0000e3b8*/ MOVW        R1, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37f0] 
    /*0000e3bc*/ LDR         R3, [PC, #1284]             @ 0x000000000000e8c8 
    /*0000e3c0*/ MOVT        R1, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37f0] 
    /*0000e3c4*/ CMP         R0, #1 
    /*0000e3c8*/ ADD         LR, R9, R0, LSL #1 
    /*0000e3cc*/ MOV         R0, R4 
    /*0000e3d0*/ BEQ         H264eProcShow_xe868
    /*0000e3d4*/ STR         R8, [SP, #16] 
    /*0000e3d8*/ ADD         R6, R6, #1 
    /*0000e3dc*/ STR         R8, [SP, #12] 
    /*0000e3e0*/ STR         R8, [SP, #8] 
    /*0000e3e4*/ STR         LR, [SP, #4] 
    /*0000e3e8*/ LDR         IP, [IP, #1376]             @ 0x560 
    /*0000e3ec*/ STR         IP, [SP] 
    /*0000e3f0*/ BL          0x000000000000E3F0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e3f4*/ CMP         R7, R5 
    /*0000e3f8*/ BNE         H264eProcShow_xe388
    H264eProcShow_xe3fc:
    /*0000e3fc*/ MOVW        R1, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3408] 
    /*0000e400*/ MOV         R0, R4 
    /*0000e404*/ MOVT        R1, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3408] 
    /*0000e408*/ LDR         R8, [PC, #1200]             @ 0x000000000000e8c0 
    /*0000e40c*/ BL          0x000000000000E40C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e410*/ MOVW        R1, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3850] 
    /*0000e414*/ MOV         R0, R4 
    /*0000e418*/ MOVT        R1, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3850] 
    /*0000e41c*/ BL          0x000000000000E41C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e420*/ MOV         R7, #0 
    /*0000e424*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38d0] 
    /*0000e428*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38d8] 
    /*0000e42c*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38d0] 
    /*0000e430*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38d8] 
    /*0000e434*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000e438*/ MOVW        R1, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38a4] 
    /*0000e43c*/ STR         R3, [SP, #32] 
    /*0000e440*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38e0] 
    /*0000e444*/ MOVW        R3, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38e8] 
    /*0000e448*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38e0] 
    /*0000e44c*/ MOVT        R3, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38e8] 
    /*0000e450*/ STR         R2, [SP, #28] 
    /*0000e454*/ STR         R3, [SP, #24] 
    /*0000e458*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38ec] 
    /*0000e45c*/ MOVW        R3, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38f4] 
    /*0000e460*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38ec] 
    /*0000e464*/ MOVT        R3, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38f4] 
    /*0000e468*/ STR         R2, [SP, #20] 
    /*0000e46c*/ STR         R3, [SP, #16] 
    /*0000e470*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38fc] 
    /*0000e474*/ MOVW        R3, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3904] 
    /*0000e478*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38fc] 
    /*0000e47c*/ MOVT        R3, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3904] 
    /*0000e480*/ STR         R2, [SP, #12] 
    /*0000e484*/ STR         R3, [SP, #8] 
    /*0000e488*/ MOVW        R2, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x390c] 
    /*0000e48c*/ MOVW        R3, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3914] 
    /*0000e490*/ MOVT        R2, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x390c] 
    /*0000e494*/ MOVT        R3, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3914] 
    /*0000e498*/ STR         R2, [SP, #4] 
    /*0000e49c*/ STR         R3, [SP] 
    /*0000e4a0*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x335c] 
    /*0000e4a4*/ MOVW        R3, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33b8] 
    /*0000e4a8*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x335c] 
    /*0000e4ac*/ MOVT        R3, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33b8] 
    /*0000e4b0*/ MOV         R0, R4 
    /*0000e4b4*/ MOVT        R1, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38a4] 
    /*0000e4b8*/ MOVW        R9, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x391c] 
    /*0000e4bc*/ BL          0x000000000000E4BC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e4c0*/ MOVT        R9, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x391c] 
    /*0000e4c4*/ STR         R9, [SP, #44]               @ 0x2c 
    H264eProcShow_xe4c8:
    /*0000e4c8*/ LDR         R3, [R8, #4]! 
    /*0000e4cc*/ MOV         R2, R7 
    /*0000e4d0*/ LDR         LR, [PC, #1012]             @ 0x000000000000e8cc 
    /*0000e4d4*/ MOV         R6, #6 
    /*0000e4d8*/ CMP         R3, #0 
    /*0000e4dc*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0000e4e0*/ ADD         SL, LR, #12 
    /*0000e4e4*/ MOV         R0, R4 
    /*0000e4e8*/ ADD         R7, R7, #1 
    /*0000e4ec*/ ADD         IP, R3, #8192               @ 0x2000 
    /*0000e4f0*/ ADD         FP, R3, #4096               @ 0x1000 
    /*0000e4f4*/ BEQ         H264eProcShow_xe574
    /*0000e4f8*/ LDR         R9, [IP, #1608]             @ 0x648 
    /*0000e4fc*/ LDR         R3, [R3, #968]              @ 0x3c8 
    /*0000e500*/ STR         R9, [SP, #36]               @ 0x24 
    /*0000e504*/ SUB         R9, LR, #48                 @ 0x30 
    /*0000e508*/ MLA         R3, R6, R3, R9 
    /*0000e50c*/ LDR         R9, [IP, #1604]             @ 0x644 
    /*0000e510*/ STR         R9, [SP, #32] 
    /*0000e514*/ LDR         R9, [IP, #1600]             @ 0x640 
    /*0000e518*/ STR         R9, [SP, #28] 
    /*0000e51c*/ SUB         R9, LR, #52                 @ 0x34 
    /*0000e520*/ LDR         FP, [FP, #3628]             @ 0xe2c 
    /*0000e524*/ STR         FP, [SP, #24] 
    /*0000e528*/ LDR         FP, [IP, #1432]             @ 0x598 
    /*0000e52c*/ ADD         FP, R9, FP, LSL #1 
    /*0000e530*/ STR         FP, [SP, #20] 
    /*0000e534*/ LDR         FP, [IP, #1428]             @ 0x594 
    /*0000e538*/ ADD         FP, LR, FP, LSL #2 
    /*0000e53c*/ STR         FP, [SP, #16] 
    /*0000e540*/ LDR         FP, [IP, #1424]             @ 0x590 
    /*0000e544*/ ADD         LR, LR, FP, LSL #2 
    /*0000e548*/ STR         LR, [SP, #12] 
    /*0000e54c*/ LDR         LR, [IP, #1576]             @ 0x628 
    /*0000e550*/ MLA         LR, R6, LR, SL 
    /*0000e554*/ STR         LR, [SP, #8] 
    /*0000e558*/ LDR         LR, [IP, #1572]             @ 0x624 
    /*0000e55c*/ MLA         LR, R6, LR, SL 
    /*0000e560*/ STR         LR, [SP, #4] 
    /*0000e564*/ LDR         IP, [IP, #1568]             @ 0x620 
    /*0000e568*/ MLA         R6, R6, IP, SL 
    /*0000e56c*/ STR         R6, [SP] 
    /*0000e570*/ BL          0x000000000000E570          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    H264eProcShow_xe574:
    /*0000e574*/ CMP         R8, R5 
    /*0000e578*/ BNE         H264eProcShow_xe4c8
    /*0000e57c*/ MOVW        R1, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3408] 
    /*0000e580*/ MOV         R0, R4 
    /*0000e584*/ MOVT        R1, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3408] 
    /*0000e588*/ LDR         R7, [PC, #816]              @ 0x000000000000e8c0 
    /*0000e58c*/ BL          0x000000000000E58C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e590*/ MOVW        R1, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3948] 
    /*0000e594*/ MOV         R0, R4 
    /*0000e598*/ MOVT        R1, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3948] 
    /*0000e59c*/ BL          0x000000000000E59C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e5a0*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x39d4] 
    /*0000e5a4*/ MOVW        R3, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x39e0] 
    /*0000e5a8*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x39d4] 
    /*0000e5ac*/ MOVT        R3, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x39e0] 
    /*0000e5b0*/ STR         R2, [SP, #4] 
    /*0000e5b4*/ STR         R3, [SP] 
    /*0000e5b8*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x335c] 
    /*0000e5bc*/ MOVW        R3, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x39ac] 
    /*0000e5c0*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x335c] 
    /*0000e5c4*/ MOVT        R3, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x39ac] 
    /*0000e5c8*/ MOVW        R1, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x39c0] 
    /*0000e5cc*/ MOV         R0, R4 
    /*0000e5d0*/ MOVT        R1, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x39c0] 
    /*0000e5d4*/ BL          0x000000000000E5D4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e5d8*/ LDR         R9, [PC, #752]              @ 0x000000000000e8d0 
    /*0000e5dc*/ MOVW        R8, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x39f4] 
    /*0000e5e0*/ MOVT        R8, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x39f4] 
    /*0000e5e4*/ MOV         R6, #0 
    H264eProcShow_xe5e8:
    /*0000e5e8*/ LDR         R3, [R7, #4]! 
    /*0000e5ec*/ MOV         R2, R6 
    /*0000e5f0*/ MOV         R1, R8 
    /*0000e5f4*/ MOV         R0, R4 
    /*0000e5f8*/ CMP         R3, #0 
    /*0000e5fc*/ ADD         R6, R6, #1 
    /*0000e600*/ ADD         IP, R3, #12288              @ 0x3000 
    /*0000e604*/ BEQ         H264eProcShow_xe624
    /*0000e608*/ LDR         LR, [IP, #2636]             @ 0xa4c 
    /*0000e60c*/ LDR         R3, [IP, #2572]             @ 0xa0c 
    /*0000e610*/ ADD         LR, R9, LR, LSL #3 
    /*0000e614*/ STR         LR, [SP, #4] 
    /*0000e618*/ LDR         IP, [IP, #2576]             @ 0xa10 
    /*0000e61c*/ STR         IP, [SP] 
    /*0000e620*/ BL          0x000000000000E620          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    H264eProcShow_xe624:
    /*0000e624*/ CMP         R7, R5 
    /*0000e628*/ BNE         H264eProcShow_xe5e8
    /*0000e62c*/ MOVW        R1, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3408] 
    /*0000e630*/ MOV         R0, R4 
    /*0000e634*/ MOVT        R1, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3408] 
    /*0000e638*/ LDR         R6, [PC, #640]              @ 0x000000000000e8c0 
    /*0000e63c*/ BL          0x000000000000E63C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e640*/ MOVW        R1, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a08] 
    /*0000e644*/ MOV         R0, R4 
    /*0000e648*/ MOVT        R1, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a08] 
    /*0000e64c*/ BL          0x000000000000E64C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e650*/ MOVW        R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a8c] 
    /*0000e654*/ MOVW        R3, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a98] 
    /*0000e658*/ MOVT        R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a8c] 
    /*0000e65c*/ MOVT        R3, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a98] 
    /*0000e660*/ STR         R2, [SP, #16] 
    /*0000e664*/ STR         R3, [SP, #12] 
    /*0000e668*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3aa4] 
    /*0000e66c*/ MOVW        R3, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ab0] 
    /*0000e670*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3aa4] 
    /*0000e674*/ MOVT        R3, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ab0] 
    /*0000e678*/ STR         R2, [SP, #8] 
    /*0000e67c*/ STR         R3, [SP, #4] 
    /*0000e680*/ MOVW        R2, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3abc] 
    /*0000e684*/ MOVW        R3, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a60] 
    /*0000e688*/ MOVT        R2, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3abc] 
    /*0000e68c*/ MOVT        R3, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a60] 
    /*0000e690*/ STR         R2, [SP] 
    /*0000e694*/ MOVW        R1, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a6c] 
    /*0000e698*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x335c] 
    /*0000e69c*/ MOVT        R1, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a6c] 
    /*0000e6a0*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x335c] 
    /*0000e6a4*/ MOV         R0, R4 
    /*0000e6a8*/ LDR         SL, [PC, #548]              @ 0x000000000000e8d4 
    /*0000e6ac*/ BL          0x000000000000E6AC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e6b0*/ MOVW        R9, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ac8] 
    /*0000e6b4*/ MOVT        R9, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ac8] 
    /*0000e6b8*/ MOV         R7, #0 
    /*0000e6bc*/ MOVW        R8, #14868                  @ 0x3a14 
    H264eProcShow_xe6c0:
    /*0000e6c0*/ LDR         R3, [R6, #4]! 
    /*0000e6c4*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0000e6c8*/ CMP         R3, #0 
    /*0000e6cc*/ ADD         R0, R3, R8 
    /*0000e6d0*/ BEQ         H264eProcShow_xe714
    /*0000e6d4*/ BL          0x000000000000E6D4          @ H264eGetCuPredictionInfo [R_ARM_CALL: .text+0xdbe0] 
    /*0000e6d8*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0000e6dc*/ LDR         IP, [SP, #72]               @ 0x48 
    /*0000e6e0*/ MOV         R2, R7 
    /*0000e6e4*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*0000e6e8*/ MOV         R1, R9 
    /*0000e6ec*/ LDR         LR, [SP, #76]               @ 0x4c 
    /*0000e6f0*/ STR         R0, [SP, #16] 
    /*0000e6f4*/ STR         IP, [SP, #12] 
    /*0000e6f8*/ ADD         R3, SL, R3, LSL #3 
    /*0000e6fc*/ LDR         R0, [SP, #88]               @ 0x58 
    /*0000e700*/ LDR         IP, [SP, #92]               @ 0x5c 
    /*0000e704*/ STMIB       SP, {R0, LR} 
    /*0000e708*/ MOV         R0, R4 
    /*0000e70c*/ STR         IP, [SP] 
    /*0000e710*/ BL          0x000000000000E710          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    H264eProcShow_xe714:
    /*0000e714*/ CMP         R6, R5 
    /*0000e718*/ ADD         R7, R7, #1 
    /*0000e71c*/ BNE         H264eProcShow_xe6c0
    /*0000e720*/ MOVW        R1, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3408] 
    /*0000e724*/ MOV         R0, R4 
    /*0000e728*/ MOVT        R1, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3408] 
    /*0000e72c*/ LDR         R8, [PC, #400]              @ 0x000000000000e8c4 
    /*0000e730*/ BL          0x000000000000E730          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e734*/ MOVW        R1, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ae8] 
    /*0000e738*/ MOV         R0, R4 
    /*0000e73c*/ MOVT        R1, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ae8] 
    /*0000e740*/ BL          0x000000000000E740          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e744*/ MOVW        R2, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b64] 
    /*0000e748*/ MOVW        R3, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b74] 
    /*0000e74c*/ MOVT        R2, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b64] 
    /*0000e750*/ MOVT        R3, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b74] 
    /*0000e754*/ STR         R2, [SP, #12] 
    /*0000e758*/ STR         R3, [SP, #8] 
    /*0000e75c*/ MOVW        R2, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b84] 
    /*0000e760*/ MOVW        R3, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b8c] 
    /*0000e764*/ MOVT        R2, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b84] 
    /*0000e768*/ MOVT        R3, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b8c] 
    /*0000e76c*/ STR         R2, [SP, #4] 
    /*0000e770*/ STR         R3, [SP] 
    /*0000e774*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x335c] 
    /*0000e778*/ MOVW        R3, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b3c] 
    /*0000e77c*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x335c] 
    /*0000e780*/ MOVT        R3, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b3c] 
    /*0000e784*/ MOVW        R1, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b48] 
    /*0000e788*/ MOV         R0, R4 
    /*0000e78c*/ MOVT        R1, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b48] 
    /*0000e790*/ BL          0x000000000000E790          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e794*/ LDR         R9, [SP, #52]               @ 0x34 
    /*0000e798*/ MOVW        R7, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b94] 
    /*0000e79c*/ MOVT        R7, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b94] 
    /*0000e7a0*/ MOV         R6, #0 
    H264eProcShow_xe7a4:
    /*0000e7a4*/ LDR         R3, [R9, #4]! 
    /*0000e7a8*/ MOV         R2, R6 
    /*0000e7ac*/ MOV         R1, R7 
    /*0000e7b0*/ MOV         R0, R4 
    /*0000e7b4*/ CMP         R3, #0 
    /*0000e7b8*/ ADD         R6, R6, #1 
    /*0000e7bc*/ ADD         IP, R3, #12288              @ 0x3000 
    /*0000e7c0*/ BEQ         H264eProcShow_xe7f0
    /*0000e7c4*/ LDR         LR, [IP, #2628]             @ 0xa44 
    /*0000e7c8*/ LDR         R3, [IP, #2616]             @ 0xa38 
    /*0000e7cc*/ STR         LR, [SP, #12] 
    /*0000e7d0*/ LDR         LR, [IP, #2632]             @ 0xa48 
    /*0000e7d4*/ ADD         R3, R8, R3, LSL #1 
    /*0000e7d8*/ STR         LR, [SP, #8] 
    /*0000e7dc*/ LDR         LR, [IP, #2624]             @ 0xa40 
    /*0000e7e0*/ STR         LR, [SP, #4] 
    /*0000e7e4*/ LDR         IP, [IP, #2620]             @ 0xa3c 
    /*0000e7e8*/ STR         IP, [SP] 
    /*0000e7ec*/ BL          0x000000000000E7EC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    H264eProcShow_xe7f0:
    /*0000e7f0*/ CMP         R9, R5 
    /*0000e7f4*/ BNE         H264eProcShow_xe7a4
    /*0000e7f8*/ MOV         R0, R4 
    /*0000e7fc*/ MOVW        R1, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3408] 
    /*0000e800*/ MOVT        R1, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3408] 
    /*0000e804*/ BL          0x000000000000E804          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e808*/ MOVW        R0, #0                      @ g_stH264eSem [R_ARM_MOVW_ABS_NC: .bss+0xcc] 
    /*0000e80c*/ MOVT        R0, #0                      @ g_stH264eSem [R_ARM_MOVT_ABS: .bss+0xcc] 
    /*0000e810*/ BL          0x000000000000E810          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e814*/ MOV         R0, #0 
    /*0000e818*/ ADD         SP, SP, #124                @ 0x7c 
    /*0000e81c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eProcShow_xe820:
    /*0000e820*/ LDR         R2, [IP, #2172]             @ 0x87c 
    /*0000e824*/ MOV         R1, #10 
    /*0000e828*/ LDR         R0, [PC, #168]              @ 0x000000000000e8d8 
    /*0000e82c*/ ADD         R3, R9, SL, LSL #1 
    /*0000e830*/ STR         R2, [SP, #16] 
    /*0000e834*/ SUB         R2, R0, #26 
    /*0000e838*/ LDR         LR, [IP, #2168]             @ 0x878 
    /*0000e83c*/ STR         LR, [SP, #12] 
    /*0000e840*/ LDR         IP, [IP, #2164]             @ 0x874 
    /*0000e844*/ STR         R2, [SP, #4] 
    /*0000e848*/ MOV         R2, R6 
    /*0000e84c*/ STR         R8, [SP] 
    /*0000e850*/ MLA         IP, R1, IP, R0 
    /*0000e854*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0000e858*/ MOV         R0, R4 
    /*0000e85c*/ STR         IP, [SP, #8] 
    /*0000e860*/ BL          0x000000000000E860          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e864*/ B           H264eProcShow_xe37c
    H264eProcShow_xe868:
    /*0000e868*/ LDR         R2, [IP, #2172]             @ 0x87c 
    /*0000e86c*/ MOV         R0, #10 
    /*0000e870*/ LDR         SL, [SP, #48]               @ 0x30 
    /*0000e874*/ MOVW        R1, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37d0] 
    /*0000e878*/ MOVT        R1, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37d0] 
    /*0000e87c*/ STR         R2, [SP, #16] 
    /*0000e880*/ MOV         R2, R6 
    /*0000e884*/ LDR         LR, [IP, #2168]             @ 0x878 
    /*0000e888*/ STR         LR, [SP, #12] 
    /*0000e88c*/ LDR         LR, [IP, #2164]             @ 0x874 
    /*0000e890*/ STR         R3, [SP, #4] 
    /*0000e894*/ MLA         LR, R0, LR, SL 
    /*0000e898*/ MOV         R0, R4 
    /*0000e89c*/ STR         LR, [SP, #8] 
    /*0000e8a0*/ LDR         IP, [IP, #1376]             @ 0x560 
    /*0000e8a4*/ STR         IP, [SP] 
    /*0000e8a8*/ BL          0x000000000000E8A8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000e8ac*/ B           H264eProcShow_xe37c
    H264eProcShow_xe8b0:
    /*0000e8b0*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000e8b4*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000e8b8*/ ADD         SP, SP, #124                @ 0x7c 
    /*0000e8bc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000e8c0*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstH264EContext [R_ARM_ABS32: .bss+0x40] 
    /*0000e8c4*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
    /*0000e8c8*/ LDRDEQ      R0, [R0], -R2 
    /*0000e8cc*/ ANDEQ       R0, R0, R4, LSL #16 
    /*0000e8d0*/ ANDEQ       R0, R0, IP, LSL R8 
    /*0000e8d4*/ ANDEQ       R0, R0, R4, LSR R8 
    /*0000e8d8*/ ANDEQ       R0, R0, IP, ROR #15 
FUNC_END H264eProcShow


FUNC_BEGIN H264eBackupRef
    /*0000e8dc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000e8e0*/ LDR         IP, [R0, #28] 
    /*0000e8e4*/ LDR         LR, [R0, #24] 
    /*0000e8e8*/ LDR         R1, [R0, #32] 
    /*0000e8ec*/ LDR         R2, [R0, #44]               @ 0x2c 
    /*0000e8f0*/ LDR         R3, [R0, #52]               @ 0x34 
    /*0000e8f4*/ STR         LR, [R0, #16] 
    /*0000e8f8*/ STR         IP, [R0, #20] 
    /*0000e8fc*/ STR         R1, [R0, #12] 
    /*0000e900*/ STR         R2, [R0, #40]               @ 0x28 
    /*0000e904*/ STR         R3, [R0, #48]               @ 0x30 
    /*0000e908*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END H264eBackupRef


FUNC_BEGIN H264eEncodePoc
    /*0000e90c*/ ADD         R3, R0, #12288              @ 0x3000 
    /*0000e910*/ ADD         R0, R0, #4096               @ 0x1000 
    /*0000e914*/ LDR         R3, [R3, #1988]             @ 0x7c4 
    /*0000e918*/ SUB         R3, R3, #4 
    /*0000e91c*/ CMP         R3, #1 
    /*0000e920*/ MOVLS       R3, #0 
    /*0000e924*/ STRLS       R3, [R0, #3680]             @ 0xe60 
    /*0000e928*/ STRLS       R3, [R0, #3664]             @ 0xe50 
    /*0000e92c*/ BLS         H264eEncodePoc_xe960
    /*0000e930*/ LDR         R1, [R0, #3664]             @ 0xe50 
    /*0000e934*/ LDR         IP, [R0, #3636]             @ 0xe34 
    /*0000e938*/ LDR         R3, [R0, #3680]             @ 0xe60 
    /*0000e93c*/ ADD         R2, R1, #1 
    /*0000e940*/ CMP         R2, IP 
    /*0000e944*/ STR         R1, [R0, #3688]             @ 0xe68 
    /*0000e948*/ STR         R2, [R0, #3664]             @ 0xe50 
    /*0000e94c*/ ADD         R1, R3, #1 
    /*0000e950*/ STR         R3, [R0, #3684]             @ 0xe64 
    /*0000e954*/ MOVCS       R3, #0 
    /*0000e958*/ STR         R1, [R0, #3680]             @ 0xe60 
    /*0000e95c*/ STRCS       R3, [R0, #3664]             @ 0xe50 
    H264eEncodePoc_xe960:
    /*0000e960*/ MOV         R0, #0 
    /*0000e964*/ BX          LR 
FUNC_END H264eEncodePoc


FUNC_BEGIN H264eSetReorderEx
    /*0000e968*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000e96c*/ CMP         R2, #3 
    /*0000e970*/ ADD         R7, R0, #4096               @ 0x1000 
    /*0000e974*/ MOV         R6, R0 
    /*0000e978*/ MOV         R9, R2 
    /*0000e97c*/ MOV         R8, R1 
    /*0000e980*/ MOV         R4, R3 
    /*0000e984*/ LDR         R5, [R7, #3768]             @ 0xeb8 
    /*0000e988*/ LDR         SL, [SP, #32] 
    /*0000e98c*/ BHI         H264eSetReorderEx_xeb84
    H264eSetReorderEx_xe990:
    /*0000e990*/ CMP         SL, #0 
    /*0000e994*/ ADD         R5, R5, #4 
    /*0000e998*/ MOV         R3, #1 
    /*0000e99c*/ LDR         R2, [R7, #3620]             @ 0xe24 
    /*0000e9a0*/ LSL         R3, R3, R5 
    /*0000e9a4*/ ADD         R7, R6, R4, LSL #2 
    /*0000e9a8*/ BNE         H264eSetReorderEx_xea50
    /*0000e9ac*/ ADD         R7, R7, #8192               @ 0x2000 
    /*0000e9b0*/ ADD         R5, R6, #8192               @ 0x2000 
    /*0000e9b4*/ CMP         R9, #1 
    /*0000e9b8*/ LDR         R1, [R5, #888]              @ 0x378 
    /*0000e9bc*/ STR         R9, [R7, #92]               @ 0x5c 
    /*0000e9c0*/ BLS         H264eSetReorderEx_xeba8
    /*0000e9c4*/ CMP         R9, #2 
    /*0000e9c8*/ BNE         H264eSetReorderEx_xeb7c
    /*0000e9cc*/ STR         R8, [R7, #356]              @ 0x164 
    /*0000e9d0*/ LDR         R2, [R5, #2848]             @ 0xb20 
    /*0000e9d4*/ SUBS        R3, R2, #1 
    /*0000e9d8*/ BMI         H264eSetReorderEx_xea18
    /*0000e9dc*/ ADD         R1, R5, R2, LSL #2 
    /*0000e9e0*/ LDR         R0, [R1, #2440]             @ 0x988 
    /*0000e9e4*/ LDR         R1, [R0, #376]              @ 0x178 
    /*0000e9e8*/ CMP         R8, R1 
    /*0000e9ec*/ ADDNE       R2, R6, R2, LSL #2 
    /*0000e9f0*/ ADDNE       R2, R2, #10624              @ 0x2980 
    /*0000e9f4*/ ADDNE       R2, R2, #8 
    /*0000e9f8*/ BNE         H264eSetReorderEx_xea10
    /*0000e9fc*/ B           H264eSetReorderEx_xeaf4
    H264eSetReorderEx_xea00:
    /*0000ea00*/ LDR         R0, [R2, #-4]! 
    /*0000ea04*/ LDR         R1, [R0, #376]              @ 0x178 
    /*0000ea08*/ CMP         R8, R1 
    /*0000ea0c*/ BEQ         H264eSetReorderEx_xeaf4
    H264eSetReorderEx_xea10:
    /*0000ea10*/ SUBS        R3, R3, #1 
    /*0000ea14*/ BCS         H264eSetReorderEx_xea00
    H264eSetReorderEx_xea18:
    /*0000ea18*/ MOV         R2, #190                    @ 0xbe 
    /*0000ea1c*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c18] 
    /*0000ea20*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x844] 
    /*0000ea24*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c18] 
    /*0000ea28*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x844] 
    /*0000ea2c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000ea30*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000ea34*/ BL          0x000000000000EA34          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000ea38*/ LDR         R2, [R5, #80]               @ 0x50 
    /*0000ea3c*/ MOV         R0, #0 
    /*0000ea40*/ ADD         R2, R2, #1 
    /*0000ea44*/ CMP         R2, R4 
    /*0000ea48*/ BGT         H264eSetReorderEx_xeb0c
    /*0000ea4c*/ B           H264eSetReorderEx_xeb3c
    H264eSetReorderEx_xea50:
    /*0000ea50*/ ADD         R7, R7, #8192               @ 0x2000 
    /*0000ea54*/ ADD         R5, R6, #8192               @ 0x2000 
    /*0000ea58*/ CMP         R9, #1 
    /*0000ea5c*/ LDR         R1, [R5, #892]              @ 0x37c 
    /*0000ea60*/ STR         R9, [R7, #492]              @ 0x1ec 
    /*0000ea64*/ BLS         H264eSetReorderEx_xec58
    /*0000ea68*/ CMP         R9, #2 
    /*0000ea6c*/ BNE         H264eSetReorderEx_xeb7c
    /*0000ea70*/ STR         R8, [R7, #756]              @ 0x2f4 
    /*0000ea74*/ LDR         R2, [R5, #2848]             @ 0xb20 
    /*0000ea78*/ SUBS        R3, R2, #1 
    /*0000ea7c*/ BMI         H264eSetReorderEx_xeabc
    /*0000ea80*/ ADD         R1, R5, R2, LSL #2 
    /*0000ea84*/ LDR         R0, [R1, #2440]             @ 0x988 
    /*0000ea88*/ LDR         R1, [R0, #376]              @ 0x178 
    /*0000ea8c*/ CMP         R8, R1 
    /*0000ea90*/ ADDNE       R2, R6, R2, LSL #2 
    /*0000ea94*/ ADDNE       R2, R2, #10624              @ 0x2980 
    /*0000ea98*/ ADDNE       R2, R2, #8 
    /*0000ea9c*/ BNE         H264eSetReorderEx_xeab4
    /*0000eaa0*/ B           H264eSetReorderEx_xed08
    H264eSetReorderEx_xeaa4:
    /*0000eaa4*/ LDR         R0, [R2, #-4]! 
    /*0000eaa8*/ LDR         R1, [R0, #376]              @ 0x178 
    /*0000eaac*/ CMP         R8, R1 
    /*0000eab0*/ BEQ         H264eSetReorderEx_xed08
    H264eSetReorderEx_xeab4:
    /*0000eab4*/ SUBS        R3, R3, #1 
    /*0000eab8*/ BCS         H264eSetReorderEx_xeaa4
    H264eSetReorderEx_xeabc:
    /*0000eabc*/ MOVW        R2, #303                    @ 0x12f 
    /*0000eac0*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c18] 
    /*0000eac4*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x844] 
    /*0000eac8*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c18] 
    /*0000eacc*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x844] 
    /*0000ead0*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000ead4*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000ead8*/ BL          0x000000000000EAD8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000eadc*/ LDR         R2, [R5, #84]               @ 0x54 
    /*0000eae0*/ MOV         R0, #0 
    /*0000eae4*/ ADD         R2, R2, #1 
    /*0000eae8*/ CMP         R4, R2 
    /*0000eaec*/ BLT         H264eSetReorderEx_xed20
    /*0000eaf0*/ B           H264eSetReorderEx_xed50
    H264eSetReorderEx_xeaf4:
    /*0000eaf4*/ CMP         R0, #0 
    /*0000eaf8*/ BEQ         H264eSetReorderEx_xea18
    /*0000eafc*/ LDR         R2, [R5, #80]               @ 0x50 
    /*0000eb00*/ ADD         R2, R2, #1 
    /*0000eb04*/ CMP         R2, R4 
    /*0000eb08*/ BLE         H264eSetReorderEx_xeb34
    H264eSetReorderEx_xeb0c:
    /*0000eb0c*/ ADD         R3, R6, R2, LSL #2 
    /*0000eb10*/ ADD         R3, R3, #10752              @ 0x2a00 
    /*0000eb14*/ ADD         R3, R3, #12 
    H264eSetReorderEx_xeb18:
    /*0000eb18*/ SUB         R2, R2, #1 
    /*0000eb1c*/ LDR         R1, [R3, #-4]! 
    /*0000eb20*/ CMP         R4, R2 
    /*0000eb24*/ STR         R1, [R3, #4] 
    /*0000eb28*/ BLT         H264eSetReorderEx_xeb18
    /*0000eb2c*/ CMP         R0, #0 
    /*0000eb30*/ BEQ         H264eSetReorderEx_xeb3c
    H264eSetReorderEx_xeb34:
    /*0000eb34*/ ADD         R4, R4, #1 
    /*0000eb38*/ STR         R0, [R7, #2572]             @ 0xa0c 
    H264eSetReorderEx_xeb3c:
    /*0000eb3c*/ LDR         R2, [R5, #2828]             @ 0xb0c 
    /*0000eb40*/ CMP         R4, R2 
    /*0000eb44*/ BGE         H264eSetReorderEx_xeb7c
    /*0000eb48*/ ADD         R2, R2, #2688               @ 0xa80 
    /*0000eb4c*/ ADD         R3, R6, R4, LSL #2 
    /*0000eb50*/ ADD         R2, R2, #2 
    /*0000eb54*/ ADD         R3, R3, #10752              @ 0x2a00 
    /*0000eb58*/ ADD         R3, R3, #8 
    /*0000eb5c*/ ADD         R6, R6, R2, LSL #2 
    H264eSetReorderEx_xeb60:
    /*0000eb60*/ LDR         R2, [R3, #4]! 
    /*0000eb64*/ ADD         R1, R5, R4, LSL #2 
    /*0000eb68*/ CMP         R2, R0 
    /*0000eb6c*/ ADDNE       R4, R4, #1 
    /*0000eb70*/ STRNE       R2, [R1, #2572]             @ 0xa0c 
    /*0000eb74*/ CMP         R6, R3 
    /*0000eb78*/ BNE         H264eSetReorderEx_xeb60
    H264eSetReorderEx_xeb7c:
    /*0000eb7c*/ MOV         R0, #0 
    /*0000eb80*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264eSetReorderEx_xeb84:
    /*0000eb84*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bb0] 
    /*0000eb88*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x844] 
    /*0000eb8c*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bb0] 
    /*0000eb90*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x844] 
    /*0000eb94*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000eb98*/ MOV         R2, #93                     @ 0x5d 
    /*0000eb9c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000eba0*/ BL          0x000000000000EBA0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000eba4*/ B           H264eSetReorderEx_xe990
    H264eSetReorderEx_xeba8:
    /*0000eba8*/ ADDEQ       R0, R8, #1 
    /*0000ebac*/ MVNNE       R0, R8 
    /*0000ebb0*/ ADD         R1, R0, R1 
    /*0000ebb4*/ CMP         R1, #0 
    /*0000ebb8*/ ADDLT       R1, R1, R3 
    /*0000ebbc*/ BLT         H264eSetReorderEx_xebc8
    /*0000ebc0*/ CMP         R3, R1 
    /*0000ebc4*/ SUBLS       R1, R1, R3 
    H264eSetReorderEx_xebc8:
    /*0000ebc8*/ CMP         R1, R2 
    /*0000ebcc*/ STR         R1, [R5, #888]              @ 0x378 
    /*0000ebd0*/ STR         R8, [R7, #224]              @ 0xe0 
    /*0000ebd4*/ SUBGT       R1, R1, R3 
    /*0000ebd8*/ LDR         R2, [R5, #2844]             @ 0xb1c 
    /*0000ebdc*/ SUBS        R3, R2, #1 
    /*0000ebe0*/ BMI         H264eSetReorderEx_xec20
    /*0000ebe4*/ ADD         R0, R5, R2, LSL #2 
    /*0000ebe8*/ LDR         R0, [R0, #2312]             @ 0x908 
    /*0000ebec*/ LDR         IP, [R0, #372]              @ 0x174 
    /*0000ebf0*/ CMP         R1, IP 
    /*0000ebf4*/ ADDNE       R2, R6, R2, LSL #2 
    /*0000ebf8*/ ADDNE       R2, R2, #10496              @ 0x2900 
    /*0000ebfc*/ ADDNE       R2, R2, #8 
    /*0000ec00*/ BNE         H264eSetReorderEx_xec18
    /*0000ec04*/ B           H264eSetReorderEx_xee28
    H264eSetReorderEx_xec08:
    /*0000ec08*/ LDR         R0, [R2, #-4]! 
    /*0000ec0c*/ LDR         IP, [R0, #372]              @ 0x174 
    /*0000ec10*/ CMP         R1, IP 
    /*0000ec14*/ BEQ         H264eSetReorderEx_xee28
    H264eSetReorderEx_xec18:
    /*0000ec18*/ SUBS        R3, R3, #1 
    /*0000ec1c*/ BCS         H264eSetReorderEx_xec08
    H264eSetReorderEx_xec20:
    /*0000ec20*/ MOV         R2, #147                    @ 0x93 
    /*0000ec24*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c18] 
    /*0000ec28*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x844] 
    /*0000ec2c*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c18] 
    /*0000ec30*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x844] 
    /*0000ec34*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000ec38*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000ec3c*/ BL          0x000000000000EC3C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000ec40*/ LDR         R2, [R5, #80]               @ 0x50 
    /*0000ec44*/ MOV         R0, #0 
    /*0000ec48*/ ADD         R2, R2, #1 
    /*0000ec4c*/ CMP         R4, R2 
    /*0000ec50*/ BLT         H264eSetReorderEx_xee40
    /*0000ec54*/ B           H264eSetReorderEx_xee70
    H264eSetReorderEx_xec58:
    /*0000ec58*/ ADDEQ       R0, R8, #1 
    /*0000ec5c*/ MVNNE       R0, R8 
    /*0000ec60*/ ADD         R1, R0, R1 
    /*0000ec64*/ CMP         R1, #0 
    /*0000ec68*/ ADDLT       R1, R1, R3 
    /*0000ec6c*/ BLT         H264eSetReorderEx_xec78
    /*0000ec70*/ CMP         R3, R1 
    /*0000ec74*/ SUBLS       R1, R1, R3 
    H264eSetReorderEx_xec78:
    /*0000ec78*/ CMP         R1, R2 
    /*0000ec7c*/ STR         R1, [R5, #892]              @ 0x37c 
    /*0000ec80*/ STR         R8, [R7, #624]              @ 0x270 
    /*0000ec84*/ SUBGT       R1, R1, R3 
    /*0000ec88*/ LDR         R2, [R5, #2844]             @ 0xb1c 
    /*0000ec8c*/ SUBS        R3, R2, #1 
    /*0000ec90*/ BMI         H264eSetReorderEx_xecd0
    /*0000ec94*/ ADD         R0, R5, R2, LSL #2 
    /*0000ec98*/ LDR         R0, [R0, #2312]             @ 0x908 
    /*0000ec9c*/ LDR         IP, [R0, #372]              @ 0x174 
    /*0000eca0*/ CMP         R1, IP 
    /*0000eca4*/ ADDNE       R2, R6, R2, LSL #2 
    /*0000eca8*/ ADDNE       R2, R2, #10496              @ 0x2900 
    /*0000ecac*/ ADDNE       R2, R2, #8 
    /*0000ecb0*/ BNE         H264eSetReorderEx_xecc8
    /*0000ecb4*/ B           H264eSetReorderEx_xed98
    H264eSetReorderEx_xecb8:
    /*0000ecb8*/ LDR         R0, [R2, #-4]! 
    /*0000ecbc*/ LDR         IP, [R0, #372]              @ 0x174 
    /*0000ecc0*/ CMP         R1, IP 
    /*0000ecc4*/ BEQ         H264eSetReorderEx_xed98
    H264eSetReorderEx_xecc8:
    /*0000ecc8*/ SUBS        R3, R3, #1 
    /*0000eccc*/ BCS         H264eSetReorderEx_xecb8
    H264eSetReorderEx_xecd0:
    /*0000ecd0*/ MOV         R2, #260                    @ 0x104 
    /*0000ecd4*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c18] 
    /*0000ecd8*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x844] 
    /*0000ecdc*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c18] 
    /*0000ece0*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x844] 
    /*0000ece4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000ece8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000ecec*/ BL          0x000000000000ECEC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000ecf0*/ LDR         R2, [R5, #84]               @ 0x54 
    /*0000ecf4*/ MOV         R0, #0 
    /*0000ecf8*/ ADD         R2, R2, #1 
    /*0000ecfc*/ CMP         R4, R2 
    /*0000ed00*/ BLT         H264eSetReorderEx_xedb0
    /*0000ed04*/ B           H264eSetReorderEx_xede0
    H264eSetReorderEx_xed08:
    /*0000ed08*/ CMP         R0, #0 
    /*0000ed0c*/ BEQ         H264eSetReorderEx_xeabc
    /*0000ed10*/ LDR         R2, [R5, #84]               @ 0x54 
    /*0000ed14*/ ADD         R2, R2, #1 
    /*0000ed18*/ CMP         R4, R2 
    /*0000ed1c*/ BGE         H264eSetReorderEx_xed48
    H264eSetReorderEx_xed20:
    /*0000ed20*/ ADD         R3, R6, R2, LSL #2 
    /*0000ed24*/ ADD         R3, R3, #10880              @ 0x2a80 
    /*0000ed28*/ ADD         R3, R3, #12 
    H264eSetReorderEx_xed2c:
    /*0000ed2c*/ SUB         R2, R2, #1 
    /*0000ed30*/ LDR         R1, [R3, #-4]! 
    /*0000ed34*/ CMP         R4, R2 
    /*0000ed38*/ STR         R1, [R3, #4] 
    /*0000ed3c*/ BLT         H264eSetReorderEx_xed2c
    /*0000ed40*/ CMP         R0, #0 
    /*0000ed44*/ BEQ         H264eSetReorderEx_xed50
    H264eSetReorderEx_xed48:
    /*0000ed48*/ ADD         R4, R4, #1 
    /*0000ed4c*/ STR         R0, [R7, #2700]             @ 0xa8c 
    H264eSetReorderEx_xed50:
    /*0000ed50*/ LDR         R2, [R5, #2832]             @ 0xb10 
    /*0000ed54*/ CMP         R4, R2 
    /*0000ed58*/ BGE         H264eSetReorderEx_xeb7c
    /*0000ed5c*/ ADD         R2, R2, #2720               @ 0xaa0 
    /*0000ed60*/ ADD         R3, R6, R4, LSL #2 
    /*0000ed64*/ ADD         R2, R2, #2 
    /*0000ed68*/ ADD         R3, R3, #10880              @ 0x2a80 
    /*0000ed6c*/ ADD         R3, R3, #8 
    /*0000ed70*/ ADD         R6, R6, R2, LSL #2 
    H264eSetReorderEx_xed74:
    /*0000ed74*/ LDR         R2, [R3, #4]! 
    /*0000ed78*/ ADD         R1, R5, R4, LSL #2 
    /*0000ed7c*/ CMP         R2, R0 
    /*0000ed80*/ ADDNE       R4, R4, #1 
    /*0000ed84*/ STRNE       R2, [R1, #2700]             @ 0xa8c 
    /*0000ed88*/ CMP         R3, R6 
    /*0000ed8c*/ BNE         H264eSetReorderEx_xed74
    /*0000ed90*/ MOV         R0, #0 
    /*0000ed94*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264eSetReorderEx_xed98:
    /*0000ed98*/ CMP         R0, #0 
    /*0000ed9c*/ BEQ         H264eSetReorderEx_xecd0
    /*0000eda0*/ LDR         R2, [R5, #84]               @ 0x54 
    /*0000eda4*/ ADD         R2, R2, #1 
    /*0000eda8*/ CMP         R2, R4 
    /*0000edac*/ BLE         H264eSetReorderEx_xedd8
    H264eSetReorderEx_xedb0:
    /*0000edb0*/ ADD         R3, R6, R2, LSL #2 
    /*0000edb4*/ ADD         R3, R3, #10880              @ 0x2a80 
    /*0000edb8*/ ADD         R3, R3, #12 
    H264eSetReorderEx_xedbc:
    /*0000edbc*/ SUB         R2, R2, #1 
    /*0000edc0*/ LDR         R1, [R3, #-4]! 
    /*0000edc4*/ CMP         R4, R2 
    /*0000edc8*/ STR         R1, [R3, #4] 
    /*0000edcc*/ BLT         H264eSetReorderEx_xedbc
    /*0000edd0*/ CMP         R0, #0 
    /*0000edd4*/ BEQ         H264eSetReorderEx_xede0
    H264eSetReorderEx_xedd8:
    /*0000edd8*/ ADD         R4, R4, #1 
    /*0000eddc*/ STR         R0, [R7, #2700]             @ 0xa8c 
    H264eSetReorderEx_xede0:
    /*0000ede0*/ LDR         R2, [R5, #2832]             @ 0xb10 
    /*0000ede4*/ CMP         R4, R2 
    /*0000ede8*/ BGE         H264eSetReorderEx_xeb7c
    /*0000edec*/ ADD         R2, R2, #2720               @ 0xaa0 
    /*0000edf0*/ ADD         R3, R6, R4, LSL #2 
    /*0000edf4*/ ADD         R2, R2, #2 
    /*0000edf8*/ ADD         R3, R3, #10880              @ 0x2a80 
    /*0000edfc*/ ADD         R3, R3, #8 
    /*0000ee00*/ ADD         R6, R6, R2, LSL #2 
    H264eSetReorderEx_xee04:
    /*0000ee04*/ LDR         R2, [R3, #4]! 
    /*0000ee08*/ ADD         R1, R5, R4, LSL #2 
    /*0000ee0c*/ CMP         R2, R0 
    /*0000ee10*/ ADDNE       R4, R4, #1 
    /*0000ee14*/ STRNE       R2, [R1, #2700]             @ 0xa8c 
    /*0000ee18*/ CMP         R3, R6 
    /*0000ee1c*/ BNE         H264eSetReorderEx_xee04
    /*0000ee20*/ MOV         R0, #0 
    /*0000ee24*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264eSetReorderEx_xee28:
    /*0000ee28*/ CMP         R0, #0 
    /*0000ee2c*/ BEQ         H264eSetReorderEx_xec20
    /*0000ee30*/ LDR         R2, [R5, #80]               @ 0x50 
    /*0000ee34*/ ADD         R2, R2, #1 
    /*0000ee38*/ CMP         R4, R2 
    /*0000ee3c*/ BGE         H264eSetReorderEx_xee68
    H264eSetReorderEx_xee40:
    /*0000ee40*/ ADD         R3, R6, R2, LSL #2 
    /*0000ee44*/ ADD         R3, R3, #10752              @ 0x2a00 
    /*0000ee48*/ ADD         R3, R3, #12 
    H264eSetReorderEx_xee4c:
    /*0000ee4c*/ SUB         R2, R2, #1 
    /*0000ee50*/ LDR         R1, [R3, #-4]! 
    /*0000ee54*/ CMP         R4, R2 
    /*0000ee58*/ STR         R1, [R3, #4] 
    /*0000ee5c*/ BLT         H264eSetReorderEx_xee4c
    /*0000ee60*/ CMP         R0, #0 
    /*0000ee64*/ BEQ         H264eSetReorderEx_xee70
    H264eSetReorderEx_xee68:
    /*0000ee68*/ ADD         R4, R4, #1 
    /*0000ee6c*/ STR         R0, [R7, #2572]             @ 0xa0c 
    H264eSetReorderEx_xee70:
    /*0000ee70*/ LDR         R2, [R5, #2828]             @ 0xb0c 
    /*0000ee74*/ CMP         R4, R2 
    /*0000ee78*/ BGE         H264eSetReorderEx_xeb7c
    /*0000ee7c*/ ADD         R2, R2, #2688               @ 0xa80 
    /*0000ee80*/ ADD         R3, R6, R4, LSL #2 
    /*0000ee84*/ ADD         R2, R2, #2 
    /*0000ee88*/ ADD         R3, R3, #10752              @ 0x2a00 
    /*0000ee8c*/ ADD         R3, R3, #8 
    /*0000ee90*/ ADD         R6, R6, R2, LSL #2 
    H264eSetReorderEx_xee94:
    /*0000ee94*/ LDR         R2, [R3, #4]! 
    /*0000ee98*/ ADD         R1, R5, R4, LSL #2 
    /*0000ee9c*/ CMP         R2, R0 
    /*0000eea0*/ ADDNE       R4, R4, #1 
    /*0000eea4*/ STRNE       R2, [R1, #2572]             @ 0xa0c 
    /*0000eea8*/ CMP         R3, R6 
    /*0000eeac*/ BNE         H264eSetReorderEx_xee94
    /*0000eeb0*/ MOV         R0, #0 
    /*0000eeb4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END H264eSetReorderEx


FUNC_BEGIN H264eSetSlcHdrRefNormal
    /*0000eeb8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000eebc*/ ADD         IP, R0, #4096               @ 0x1000 
    /*0000eec0*/ ADD         R4, R0, #8192               @ 0x2000 
    /*0000eec4*/ ADD         R5, R0, #12288              @ 0x3000 
    /*0000eec8*/ MOV         R3, #0 
    /*0000eecc*/ MOV         LR, #3 
    /*0000eed0*/ LDR         R2, [R5, #1988]             @ 0x7c4 
    /*0000eed4*/ MOV         R1, #2 
    /*0000eed8*/ STR         R3, [R4, #904]              @ 0x388 
    /*0000eedc*/ SUB         SP, SP, #8 
    /*0000eee0*/ STR         R3, [R4, #88]               @ 0x58 
    /*0000eee4*/ LDR         IP, [IP, #3620]             @ 0xe24 
    /*0000eee8*/ STR         LR, [R4, #24] 
    /*0000eeec*/ STR         IP, [R4, #888]              @ 0x378 
    /*0000eef0*/ LDR         IP, [R5, #992]              @ 0x3e0 
    /*0000eef4*/ STR         R1, [IP, #360]              @ 0x168 
    /*0000eef8*/ STR         R3, [R4, #1700]             @ 0x6a4 
    /*0000eefc*/ STR         R3, [R5, #1928]             @ 0x788 
    /*0000ef00*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*0000ef04*/ STR         R3, [R5, #1936]             @ 0x790 
    /*0000ef08*/ LDR         R6, [R4, #1652]             @ 0x674 
    /*0000ef0c*/ CMP         R6, #1 
    /*0000ef10*/ BEQ         H264eSetSlcHdrRefNormal_xf05c
    H264eSetSlcHdrRefNormal_xef14:
    /*0000ef14*/ CMP         R2, #4 
    /*0000ef18*/ BEQ         H264eSetSlcHdrRefNormal_xf1ac
    /*0000ef1c*/ LDR         R7, [R4, #2156]             @ 0x86c 
    /*0000ef20*/ CMP         R7, #1 
    /*0000ef24*/ BEQ         H264eSetSlcHdrRefNormal_xf1ec
    /*0000ef28*/ LDR         IP, [R4, #1664]             @ 0x680 
    /*0000ef2c*/ LDR         LR, [R4, #1648]             @ 0x670 
    /*0000ef30*/ ADD         R3, IP, #1 
    /*0000ef34*/ LDR         R1, [R4, #1660]             @ 0x67c 
    /*0000ef38*/ CMP         R3, LR 
    /*0000ef3c*/ STR         IP, [R4, #1672]             @ 0x688 
    /*0000ef40*/ STR         R3, [R4, #1664]             @ 0x680 
    /*0000ef44*/ STR         R1, [R4, #1668]             @ 0x684 
    /*0000ef48*/ BEQ         H264eSetSlcHdrRefNormal_xefac
    /*0000ef4c*/ CMP         R3, #0 
    /*0000ef50*/ BEQ         H264eSetSlcHdrRefNormal_xefbc
    /*0000ef54*/ CMP         R2, #12 
    /*0000ef58*/ BEQ         H264eSetSlcHdrRefNormal_xf118
    /*0000ef5c*/ CMP         R6, #0 
    /*0000ef60*/ MOV         R0, #4 
    /*0000ef64*/ MOV         R2, #1 
    /*0000ef68*/ STR         R0, [R4, #1704]             @ 0x6a8 
    /*0000ef6c*/ STR         R2, [R5, #1928]             @ 0x788 
    /*0000ef70*/ BEQ         H264eSetSlcHdrRefNormal_xf198
    /*0000ef74*/ CMP         R3, #1 
    /*0000ef78*/ BEQ         H264eSetSlcHdrRefNormal_xf2c4
    H264eSetSlcHdrRefNormal_xef7c:
    /*0000ef7c*/ MOV         R2, #1 
    /*0000ef80*/ STR         R2, [R5, #1932]             @ 0x78c 
    H264eSetSlcHdrRefNormal_xef84:
    /*0000ef84*/ ADD         R3, R3, #1 
    /*0000ef88*/ CMP         R3, LR 
    /*0000ef8c*/ BNE         H264eSetSlcHdrRefNormal_xf010
    /*0000ef90*/ MOV         R2, #5 
    /*0000ef94*/ MOV         R3, #0 
    /*0000ef98*/ STR         R2, [R4, #1704]             @ 0x6a8 
    /*0000ef9c*/ STR         R3, [R4, #24] 
    /*0000efa0*/ LDR         R2, [R5, #992]              @ 0x3e0 
    /*0000efa4*/ STR         R3, [R2, #360]              @ 0x168 
    /*0000efa8*/ B           H264eSetSlcHdrRefNormal_xf010
    H264eSetSlcHdrRefNormal_xefac:
    /*0000efac*/ ADD         R1, R1, #1 
    /*0000efb0*/ MOV         R3, #0 
    /*0000efb4*/ STR         R1, [R4, #1660]             @ 0x67c 
    /*0000efb8*/ STR         R3, [R4, #1664]             @ 0x680 
    H264eSetSlcHdrRefNormal_xefbc:
    /*0000efbc*/ LDR         R3, [R4, #1644]             @ 0x66c 
    /*0000efc0*/ CMP         R3, R1 
    /*0000efc4*/ BEQ         H264eSetSlcHdrRefNormal_xf118
    /*0000efc8*/ CMP         R2, #12 
    /*0000efcc*/ BEQ         H264eSetSlcHdrRefNormal_xf118
    H264eSetSlcHdrRefNormal_xefd0:
    /*0000efd0*/ MOV         R6, #0 
    /*0000efd4*/ MOV         R8, #3 
    /*0000efd8*/ STR         R6, [SP] 
    /*0000efdc*/ MOV         R7, #1 
    /*0000efe0*/ MOV         R3, R6 
    /*0000efe4*/ MOV         R1, R6 
    /*0000efe8*/ STR         R8, [R4, #1704]             @ 0x6a8 
    /*0000efec*/ MOV         R2, #2 
    /*0000eff0*/ STR         R7, [R4, #88]               @ 0x58 
    /*0000eff4*/ BL          0x000000000000EFF4          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000eff8*/ STR         R8, [R4, #96]               @ 0x60 
    /*0000effc*/ STR         R7, [R5, #1928]             @ 0x788 
    /*0000f000*/ STR         R6, [R5, #1932]             @ 0x78c 
    H264eSetSlcHdrRefNormal_xf004:
    /*0000f004*/ LDR         R3, [R4, #1704]             @ 0x6a8 
    /*0000f008*/ CMP         R3, #4 
    /*0000f00c*/ BEQ         H264eSetSlcHdrRefNormal_xf544
    H264eSetSlcHdrRefNormal_xf010:
    /*0000f010*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*0000f014*/ MOV         R2, #0 
    /*0000f018*/ STR         R2, [R4, #2880]             @ 0xb40 
    /*0000f01c*/ CMP         R3, R2 
    /*0000f020*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*0000f024*/ BEQ         H264eSetSlcHdrRefNormal_xf2a4
    H264eSetSlcHdrRefNormal_xf028:
    /*0000f028*/ LDR         R3, [R4, #1652]             @ 0x674 
    /*0000f02c*/ CMP         R3, #1 
    /*0000f030*/ BEQ         H264eSetSlcHdrRefNormal_xf03c
    H264eSetSlcHdrRefNormal_xf034:
    /*0000f034*/ ADD         SP, SP, #8 
    /*0000f038*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264eSetSlcHdrRefNormal_xf03c:
    /*0000f03c*/ LDR         R2, [R4, #1660]             @ 0x67c 
    /*0000f040*/ LDR         R3, [R4, #1644]             @ 0x66c 
    /*0000f044*/ CMP         R2, R3 
    /*0000f048*/ BNE         H264eSetSlcHdrRefNormal_xf034
    H264eSetSlcHdrRefNormal_xf04c:
    /*0000f04c*/ MOV         R3, #0 
    /*0000f050*/ STR         R3, [R4, #1660]             @ 0x67c 
    /*0000f054*/ ADD         SP, SP, #8 
    /*0000f058*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264eSetSlcHdrRefNormal_xf05c:
    /*0000f05c*/ LDR         IP, [R4, #1648]             @ 0x670 
    /*0000f060*/ CMP         IP, #1 
    /*0000f064*/ BEQ         H264eSetSlcHdrRefNormal_xf268
    /*0000f068*/ CMP         IP, #2 
    /*0000f06c*/ BNE         H264eSetSlcHdrRefNormal_xef14
    /*0000f070*/ LDR         R1, [R4, #1644]             @ 0x66c 
    /*0000f074*/ CMP         R1, #2 
    /*0000f078*/ BEQ         H264eSetSlcHdrRefNormal_xf2d8
    /*0000f07c*/ CMP         R1, #1 
    /*0000f080*/ BNE         H264eSetSlcHdrRefNormal_xef14
    /*0000f084*/ SUB         R3, R2, #4 
    /*0000f088*/ CMP         R3, #1 
    /*0000f08c*/ BLS         H264eSetSlcHdrRefNormal_xf3d0
    /*0000f090*/ LDR         R0, [R4, #2240]             @ 0x8c0 
    /*0000f094*/ LDR         IP, [R4, #1660]             @ 0x67c 
    /*0000f098*/ LDR         R3, [R4, #1664]             @ 0x680 
    /*0000f09c*/ TST         R0, #1 
    /*0000f0a0*/ STR         IP, [R4, #1668]             @ 0x684 
    /*0000f0a4*/ STR         R3, [R4, #1672]             @ 0x688 
    /*0000f0a8*/ BEQ         H264eSetSlcHdrRefNormal_xf39c
    /*0000f0ac*/ LDR         R3, [R4, #2156]             @ 0x86c 
    /*0000f0b0*/ CMP         R2, #12 
    /*0000f0b4*/ CMPNE       R3, #1 
    /*0000f0b8*/ MOVEQ       R2, #1 
    /*0000f0bc*/ MOVNE       R2, #0 
    /*0000f0c0*/ BEQ         H264eSetSlcHdrRefNormal_xf394
    /*0000f0c4*/ STR         R2, [R4, #24] 
    /*0000f0c8*/ MOV         R0, #5 
    /*0000f0cc*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*0000f0d0*/ STR         R2, [R3, #360]              @ 0x168 
    /*0000f0d4*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*0000f0d8*/ STR         R2, [R4, #2880]             @ 0xb40 
    /*0000f0dc*/ CMP         R3, #0 
    /*0000f0e0*/ STR         R1, [R4, #1664]             @ 0x680 
    /*0000f0e4*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*0000f0e8*/ STR         R0, [R4, #1704]             @ 0x6a8 
    /*0000f0ec*/ STR         R2, [R5, #1928]             @ 0x788 
    /*0000f0f0*/ STR         R2, [R5, #1932]             @ 0x78c 
    /*0000f0f4*/ BNE         H264eSetSlcHdrRefNormal_xf04c
    /*0000f0f8*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000f0fc*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000f100*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000f104*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000f108*/ MOVW        R2, #537                    @ 0x219 
    /*0000f10c*/ LDR         R1, [PC, #1084]             @ 0x000000000000f550 
    /*0000f110*/ BL          0x000000000000F110          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000f114*/ B           H264eSetSlcHdrRefNormal_xf04c
    H264eSetSlcHdrRefNormal_xf118:
    /*0000f118*/ CMP         R6, #1 
    /*0000f11c*/ BNE         H264eSetSlcHdrRefNormal_xefd0
    /*0000f120*/ MOV         R7, #0 
    /*0000f124*/ MOV         IP, #2 
    /*0000f128*/ STR         R6, [R4, #904]              @ 0x388 
    /*0000f12c*/ MOV         R2, IP 
    /*0000f130*/ STR         IP, [R4, #1704]             @ 0x6a8 
    /*0000f134*/ MOV         R3, R7 
    /*0000f138*/ STR         IP, [R4, #908]              @ 0x38c 
    /*0000f13c*/ MOV         LR, #4 
    /*0000f140*/ STR         R6, [R4, #912]              @ 0x390 
    /*0000f144*/ MOV         IP, #6 
    /*0000f148*/ STR         R6, [R4, #956]              @ 0x3bc 
    /*0000f14c*/ MOV         R1, R7 
    /*0000f150*/ STR         R6, [R4, #88]               @ 0x58 
    /*0000f154*/ STR         R7, [R4, #948]              @ 0x3b4 
    /*0000f158*/ STR         R7, [R4, #952]              @ 0x3b8 
    /*0000f15c*/ STR         R7, [R4, #960]              @ 0x3c0 
    /*0000f160*/ STR         R7, [R4, #924]              @ 0x39c 
    /*0000f164*/ STR         R7, [SP] 
    /*0000f168*/ STR         LR, [R4, #916]              @ 0x394 
    /*0000f16c*/ STR         IP, [R4, #920]              @ 0x398 
    /*0000f170*/ BL          0x000000000000F170          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000f174*/ MOV         R3, #3 
    /*0000f178*/ STR         R3, [R4, #96]               @ 0x60 
    /*0000f17c*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*0000f180*/ STR         R6, [R3, #360]              @ 0x168 
    /*0000f184*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*0000f188*/ STR         R7, [R3, #376]              @ 0x178 
    /*0000f18c*/ STR         R7, [R5, #1928]             @ 0x788 
    /*0000f190*/ STR         R7, [R5, #1932]             @ 0x78c 
    /*0000f194*/ B           H264eSetSlcHdrRefNormal_xf004
    H264eSetSlcHdrRefNormal_xf198:
    /*0000f198*/ CMP         R3, R2 
    /*0000f19c*/ BNE         H264eSetSlcHdrRefNormal_xef7c
    /*0000f1a0*/ CMP         R1, #0 
    /*0000f1a4*/ BEQ         H264eSetSlcHdrRefNormal_xef84
    /*0000f1a8*/ B           H264eSetSlcHdrRefNormal_xef7c
    H264eSetSlcHdrRefNormal_xf1ac:
    /*0000f1ac*/ MOV         R3, #0 
    /*0000f1b0*/ MOV         R2, #1 
    /*0000f1b4*/ STR         R3, [R4, #1660]             @ 0x67c 
    /*0000f1b8*/ STR         R3, [R4, #1664]             @ 0x680 
    /*0000f1bc*/ STR         R3, [R4, #1704]             @ 0x6a8 
    /*0000f1c0*/ STR         R3, [R4, #896]              @ 0x380 
    /*0000f1c4*/ STR         R2, [R4, #900]              @ 0x384 
    /*0000f1c8*/ LDR         R1, [R5, #992]              @ 0x3e0 
    /*0000f1cc*/ STR         R2, [R1, #360]              @ 0x168 
    /*0000f1d0*/ LDR         R2, [R5, #992]              @ 0x3e0 
    /*0000f1d4*/ STR         R3, [R2, #376]              @ 0x178 
    /*0000f1d8*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*0000f1dc*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*0000f1e0*/ STR         R3, [R5, #1928]             @ 0x788 
    /*0000f1e4*/ ADD         SP, SP, #8 
    /*0000f1e8*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264eSetSlcHdrRefNormal_xf1ec:
    /*0000f1ec*/ MOV         R6, #0 
    /*0000f1f0*/ MOV         IP, #2 
    /*0000f1f4*/ STR         R7, [R4, #904]              @ 0x388 
    /*0000f1f8*/ MOV         R3, R6 
    /*0000f1fc*/ STR         R7, [R4, #952]              @ 0x3b8 
    /*0000f200*/ MOV         R2, IP 
    /*0000f204*/ STR         R7, [R4, #88]               @ 0x58 
    /*0000f208*/ MOV         LR, #4 
    /*0000f20c*/ STR         R6, [R4, #1660]             @ 0x67c 
    /*0000f210*/ MOV         R1, R6 
    /*0000f214*/ STR         R6, [R4, #1664]             @ 0x680 
    /*0000f218*/ MOV         R8, #5 
    /*0000f21c*/ STR         R6, [R4, #956]              @ 0x3bc 
    /*0000f220*/ STR         R6, [R4, #920]              @ 0x398 
    /*0000f224*/ STR         R6, [SP] 
    /*0000f228*/ STR         IP, [R4, #1704]             @ 0x6a8 
    /*0000f22c*/ MOV         IP, #6 
    /*0000f230*/ STR         R8, [R4, #908]              @ 0x38c 
    /*0000f234*/ STR         LR, [R4, #912]              @ 0x390 
    /*0000f238*/ STR         IP, [R4, #916]              @ 0x394 
    /*0000f23c*/ BL          0x000000000000F23C          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000f240*/ MOV         R3, #3 
    /*0000f244*/ STR         R3, [R4, #96]               @ 0x60 
    /*0000f248*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*0000f24c*/ STR         R7, [R3, #360]              @ 0x168 
    /*0000f250*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*0000f254*/ STR         R6, [R3, #376]              @ 0x178 
    /*0000f258*/ STR         R7, [R4, #1700]             @ 0x6a4 
    /*0000f25c*/ STR         R6, [R5, #1928]             @ 0x788 
    /*0000f260*/ STR         R6, [R5, #1932]             @ 0x78c 
    /*0000f264*/ B           H264eSetSlcHdrRefNormal_xf004
    H264eSetSlcHdrRefNormal_xf268:
    /*0000f268*/ LDR         IP, [R4, #1644]             @ 0x66c 
    /*0000f26c*/ CMP         IP, #1 
    /*0000f270*/ BNE         H264eSetSlcHdrRefNormal_xef14
    /*0000f274*/ CMP         R2, #4 
    /*0000f278*/ BEQ         H264eSetSlcHdrRefNormal_xf3f4
    /*0000f27c*/ LDR         R2, [R4, #2572]             @ 0xa0c 
    /*0000f280*/ STR         R1, [R4, #1704]             @ 0x6a8 
    /*0000f284*/ CMP         R2, #0 
    /*0000f288*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*0000f28c*/ STR         R2, [R4, #2876]             @ 0xb3c 
    /*0000f290*/ BEQ         H264eSetSlcHdrRefNormal_xf434
    H264eSetSlcHdrRefNormal_xf294:
    /*0000f294*/ MOV         R3, #0 
    /*0000f298*/ STR         R3, [R5, #1928]             @ 0x788 
    /*0000f29c*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*0000f2a0*/ B           H264eSetSlcHdrRefNormal_xf034
    H264eSetSlcHdrRefNormal_xf2a4:
    /*0000f2a4*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000f2a8*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000f2ac*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000f2b0*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000f2b4*/ MOVW        R2, #699                    @ 0x2bb 
    /*0000f2b8*/ LDR         R1, [PC, #656]              @ 0x000000000000f550 
    /*0000f2bc*/ BL          0x000000000000F2BC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000f2c0*/ B           H264eSetSlcHdrRefNormal_xf028
    H264eSetSlcHdrRefNormal_xf2c4:
    /*0000f2c4*/ LDR         R2, [R4, #1644]             @ 0x66c 
    /*0000f2c8*/ CMP         R1, #0 
    /*0000f2cc*/ CMPNE       R2, R1 
    /*0000f2d0*/ BEQ         H264eSetSlcHdrRefNormal_xef84
    /*0000f2d4*/ B           H264eSetSlcHdrRefNormal_xef7c
    H264eSetSlcHdrRefNormal_xf2d8:
    /*0000f2d8*/ LDR         R1, [R0, #968]              @ 0x3c8 
    /*0000f2dc*/ CMP         R1, #3 
    /*0000f2e0*/ BNE         H264eSetSlcHdrRefNormal_xef14
    /*0000f2e4*/ SUB         R1, R2, #4 
    /*0000f2e8*/ CMP         R1, #1 
    /*0000f2ec*/ BLS         H264eSetSlcHdrRefNormal_xf3d0
    /*0000f2f0*/ LDR         IP, [R4, #1664]             @ 0x680 
    /*0000f2f4*/ LDR         R1, [R4, #1660]             @ 0x67c 
    /*0000f2f8*/ ADD         LR, IP, #1 
    /*0000f2fc*/ CMP         LR, #2 
    /*0000f300*/ STREQ       R3, [R4, #1664]             @ 0x680 
    /*0000f304*/ STR         R1, [R4, #1668]             @ 0x684 
    /*0000f308*/ ADDEQ       R1, R1, #1 
    /*0000f30c*/ STRNE       LR, [R4, #1664]             @ 0x680 
    /*0000f310*/ STREQ       R1, [R4, #1660]             @ 0x67c 
    /*0000f314*/ CMP         R1, #2 
    /*0000f318*/ STR         IP, [R4, #1672]             @ 0x688 
    /*0000f31c*/ LDR         R3, [R4, #2156]             @ 0x86c 
    /*0000f320*/ BEQ         H264eSetSlcHdrRefNormal_xf454
    /*0000f324*/ CMP         R2, #12 
    /*0000f328*/ CMPNE       R3, #1 
    /*0000f32c*/ BEQ         H264eSetSlcHdrRefNormal_xf468
    /*0000f330*/ CMP         R1, #0 
    /*0000f334*/ BEQ         H264eSetSlcHdrRefNormal_xf4b8
    /*0000f338*/ CMP         R1, #1 
    /*0000f33c*/ BNE         H264eSetSlcHdrRefNormal_xf40c
    /*0000f340*/ LDR         R3, [R4, #1664]             @ 0x680 
    /*0000f344*/ CMP         R3, #0 
    /*0000f348*/ BNE         H264eSetSlcHdrRefNormal_xf40c
    /*0000f34c*/ MOV         R3, #3 
    /*0000f350*/ STR         R3, [R4, #1704]             @ 0x6a8 
    /*0000f354*/ STR         R1, [R5, #1928]             @ 0x788 
    H264eSetSlcHdrRefNormal_xf358:
    /*0000f358*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*0000f35c*/ MOV         R2, #0 
    /*0000f360*/ STR         R2, [R4, #2880]             @ 0xb40 
    /*0000f364*/ CMP         R3, R2 
    /*0000f368*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*0000f36c*/ BNE         H264eSetSlcHdrRefNormal_xf034
    /*0000f370*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000f374*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000f378*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000f37c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000f380*/ MOVW        R2, #479                    @ 0x1df 
    /*0000f384*/ LDR         R1, [PC, #452]              @ 0x000000000000f550 
    /*0000f388*/ ADD         SP, SP, #8 
    /*0000f38c*/ POP         {R4, R5, R6, R7, R8, LR} 
    H264eSetSlcHdrRefNormal_xf390:
    /*0000f390*/ B           H264eSetSlcHdrRefNormal_xf390@ osal_panic [R_ARM_JUMP24: +0x0] 
    H264eSetSlcHdrRefNormal_xf394:
    /*0000f394*/ ADD         R0, R0, #1 
    /*0000f398*/ STR         R0, [R4, #2240]             @ 0x8c0 
    H264eSetSlcHdrRefNormal_xf39c:
    /*0000f39c*/ LDR         R2, [R4, #2572]             @ 0xa0c 
    /*0000f3a0*/ MOV         R3, #0 
    /*0000f3a4*/ MOV         R1, #2 
    /*0000f3a8*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*0000f3ac*/ CMP         R2, R3 
    /*0000f3b0*/ STR         R1, [R4, #1704]             @ 0x6a8 
    /*0000f3b4*/ STR         R2, [R4, #2876]             @ 0xb3c 
    /*0000f3b8*/ STR         R3, [R4, #1664]             @ 0x680 
    /*0000f3bc*/ BEQ         H264eSetSlcHdrRefNormal_xf4f0
    H264eSetSlcHdrRefNormal_xf3c0:
    /*0000f3c0*/ MOV         R3, #0 
    /*0000f3c4*/ STR         R3, [R5, #1928]             @ 0x788 
    /*0000f3c8*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*0000f3cc*/ B           H264eSetSlcHdrRefNormal_xf04c
    H264eSetSlcHdrRefNormal_xf3d0:
    /*0000f3d0*/ MOV         R3, #0 
    /*0000f3d4*/ STR         R3, [R4, #900]              @ 0x384 
    /*0000f3d8*/ STR         R3, [R4, #896]              @ 0x380 
    /*0000f3dc*/ STR         R3, [R4, #1704]             @ 0x6a8 
    /*0000f3e0*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*0000f3e4*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*0000f3e8*/ STR         R3, [R4, #1664]             @ 0x680 
    /*0000f3ec*/ STR         R3, [R4, #1660]             @ 0x67c 
    /*0000f3f0*/ B           H264eSetSlcHdrRefNormal_xf034
    H264eSetSlcHdrRefNormal_xf3f4:
    /*0000f3f4*/ STR         R3, [R4, #1704]             @ 0x6a8 
    /*0000f3f8*/ STR         R3, [R4, #900]              @ 0x384 
    /*0000f3fc*/ STR         R3, [R4, #896]              @ 0x380 
    /*0000f400*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*0000f404*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*0000f408*/ B           H264eSetSlcHdrRefNormal_xf034
    H264eSetSlcHdrRefNormal_xf40c:
    /*0000f40c*/ MOV         R2, #0 
    /*0000f410*/ STR         R2, [R4, #24] 
    /*0000f414*/ LDR         R0, [R5, #992]              @ 0x3e0 
    /*0000f418*/ MOV         R3, #1 
    /*0000f41c*/ MOV         R1, #5 
    /*0000f420*/ STR         R2, [R0, #360]              @ 0x168 
    /*0000f424*/ STR         R1, [R4, #1704]             @ 0x6a8 
    /*0000f428*/ STR         R3, [R5, #1928]             @ 0x788 
    /*0000f42c*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*0000f430*/ B           H264eSetSlcHdrRefNormal_xf358
    H264eSetSlcHdrRefNormal_xf434:
    /*0000f434*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000f438*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000f43c*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000f440*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000f444*/ MOVW        R2, #379                    @ 0x17b 
    /*0000f448*/ LDR         R1, [PC, #256]              @ 0x000000000000f550 
    /*0000f44c*/ BL          0x000000000000F44C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000f450*/ B           H264eSetSlcHdrRefNormal_xf294
    H264eSetSlcHdrRefNormal_xf454:
    /*0000f454*/ CMP         R2, #12 
    /*0000f458*/ CMPNE       R3, #1 
    /*0000f45c*/ MOV         R1, #0 
    /*0000f460*/ STR         R1, [R4, #1660]             @ 0x67c 
    /*0000f464*/ BNE         H264eSetSlcHdrRefNormal_xf4b8
    H264eSetSlcHdrRefNormal_xf468:
    /*0000f468*/ LDR         R3, [R4, #1664]             @ 0x680 
    /*0000f46c*/ MOV         R6, #0 
    /*0000f470*/ MOV         IP, #2 
    /*0000f474*/ STR         R6, [SP] 
    /*0000f478*/ SUB         R1, R3, R1 
    /*0000f47c*/ STR         IP, [R4, #1704]             @ 0x6a8 
    /*0000f480*/ CLZ         R1, R1 
    /*0000f484*/ MOV         R3, R6 
    /*0000f488*/ MOV         IP, #1 
    /*0000f48c*/ MOV         R2, R6 
    /*0000f490*/ LSR         R1, R1, #5 
    /*0000f494*/ STR         IP, [R4, #88]               @ 0x58 
    /*0000f498*/ BL          0x000000000000F498          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000f49c*/ STR         R6, [R4, #1664]             @ 0x680 
    /*0000f4a0*/ STR         R6, [R4, #1660]             @ 0x67c 
    /*0000f4a4*/ MOV         R3, #3 
    /*0000f4a8*/ STR         R3, [R4, #96]               @ 0x60 
    /*0000f4ac*/ STR         R6, [R5, #1928]             @ 0x788 
    /*0000f4b0*/ STR         R6, [R5, #1932]             @ 0x78c 
    /*0000f4b4*/ B           H264eSetSlcHdrRefNormal_xf358
    H264eSetSlcHdrRefNormal_xf4b8:
    /*0000f4b8*/ LDR         R6, [R4, #1664]             @ 0x680 
    /*0000f4bc*/ CMP         R6, #0 
    /*0000f4c0*/ BEQ         H264eSetSlcHdrRefNormal_xf510
    /*0000f4c4*/ CMP         R6, #1 
    /*0000f4c8*/ BNE         H264eSetSlcHdrRefNormal_xf40c
    /*0000f4cc*/ MOV         R3, #0 
    /*0000f4d0*/ STR         R3, [R4, #24] 
    /*0000f4d4*/ LDR         R1, [R5, #992]              @ 0x3e0 
    /*0000f4d8*/ MOV         R2, #5 
    /*0000f4dc*/ STR         R3, [R1, #360]              @ 0x168 
    /*0000f4e0*/ STR         R2, [R4, #1704]             @ 0x6a8 
    /*0000f4e4*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*0000f4e8*/ STR         R6, [R5, #1928]             @ 0x788 
    /*0000f4ec*/ B           H264eSetSlcHdrRefNormal_xf358
    H264eSetSlcHdrRefNormal_xf4f0:
    /*0000f4f0*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000f4f4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000f4f8*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000f4fc*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000f500*/ MOVW        R2, #518                    @ 0x206 
    /*0000f504*/ LDR         R1, [PC, #68]               @ 0x000000000000f550 
    /*0000f508*/ BL          0x000000000000F508          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000f50c*/ B           H264eSetSlcHdrRefNormal_xf3c0
    H264eSetSlcHdrRefNormal_xf510:
    /*0000f510*/ STR         R6, [SP] 
    /*0000f514*/ MOV         R1, #1 
    /*0000f518*/ MOV         R2, #2 
    /*0000f51c*/ MOV         R3, R6 
    /*0000f520*/ STR         R2, [R4, #1704]             @ 0x6a8 
    /*0000f524*/ MOV         R2, R6 
    /*0000f528*/ STR         R1, [R4, #88]               @ 0x58 
    /*0000f52c*/ BL          0x000000000000F52C          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000f530*/ MOV         R3, #3 
    /*0000f534*/ STR         R3, [R4, #96]               @ 0x60 
    /*0000f538*/ STR         R6, [R5, #1928]             @ 0x788 
    /*0000f53c*/ STR         R6, [R5, #1932]             @ 0x78c 
    /*0000f540*/ B           H264eSetSlcHdrRefNormal_xf358
    H264eSetSlcHdrRefNormal_xf544:
    /*0000f544*/ LDR         R3, [R4, #1664]             @ 0x680 
    /*0000f548*/ LDR         LR, [R4, #1648]             @ 0x670 
    /*0000f54c*/ B           H264eSetSlcHdrRefNormal_xef84
    /*0000f550*/ ANDEQ       R0, R0, R8, ASR R8 
FUNC_END H264eSetSlcHdrRefNormal


FUNC_BEGIN H264eSetSlcHdrRefBg
    /*0000f554*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000f558*/ ADD         R3, R0, #4096               @ 0x1000 
    /*0000f55c*/ ADD         R4, R0, #8192               @ 0x2000 
    /*0000f560*/ ADD         R5, R0, #12288              @ 0x3000 
    /*0000f564*/ LDR         SL, [R3, #3680]             @ 0xe60 
    /*0000f568*/ MOV         R6, #0 
    /*0000f56c*/ LDR         IP, [R5, #1988]             @ 0x7c4 
    /*0000f570*/ MOV         R8, #3 
    /*0000f574*/ STR         R6, [R4, #904]              @ 0x388 
    /*0000f578*/ MOV         R2, #2 
    /*0000f57c*/ STR         R6, [R4, #88]               @ 0x58 
    /*0000f580*/ SUB         SP, SP, #12 
    /*0000f584*/ LDR         R3, [R3, #3620]             @ 0xe24 
    /*0000f588*/ MOV         R7, R0 
    /*0000f58c*/ STR         R8, [R4, #24] 
    /*0000f590*/ MOV         R9, R1 
    /*0000f594*/ STR         R3, [R4, #888]              @ 0x378 
    /*0000f598*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*0000f59c*/ STR         R2, [R3, #360]              @ 0x168 
    /*0000f5a0*/ STR         R6, [R4, #1700]             @ 0x6a4 
    /*0000f5a4*/ STR         R6, [R5, #1928]             @ 0x788 
    /*0000f5a8*/ STR         R6, [R5, #1932]             @ 0x78c 
    /*0000f5ac*/ STR         R6, [R5, #1936]             @ 0x790 
    /*0000f5b0*/ LDR         R3, [R4, #1652]             @ 0x674 
    /*0000f5b4*/ CMP         R3, #1 
    /*0000f5b8*/ BEQ         H264eSetSlcHdrRefBg_xf860
    H264eSetSlcHdrRefBg_xf5bc:
    /*0000f5bc*/ SUB         R3, IP, #4 
    /*0000f5c0*/ CMP         R3, #1 
    /*0000f5c4*/ BLS         H264eSetSlcHdrRefBg_xfb1c
    /*0000f5c8*/ LDR         R2, [R4, #1664]             @ 0x680 
    /*0000f5cc*/ LDR         R0, [R4, #1648]             @ 0x670 
    /*0000f5d0*/ ADD         R3, R2, #1 
    /*0000f5d4*/ LDR         R1, [R4, #1660]             @ 0x67c 
    /*0000f5d8*/ LDR         LR, [R4, #1656]             @ 0x678 
    /*0000f5dc*/ CMP         R3, R0 
    /*0000f5e0*/ STR         R2, [R4, #1672]             @ 0x688 
    /*0000f5e4*/ STR         R3, [R4, #1664]             @ 0x680 
    /*0000f5e8*/ STR         R1, [R4, #1668]             @ 0x684 
    /*0000f5ec*/ STR         LR, [R4, #1676]             @ 0x68c 
    /*0000f5f0*/ BEQ         H264eSetSlcHdrRefBg_xf65c
    /*0000f5f4*/ CMP         IP, #9 
    /*0000f5f8*/ BEQ         H264eSetSlcHdrRefBg_xf674
    /*0000f5fc*/ CMP         R3, #0 
    /*0000f600*/ BEQ         H264eSetSlcHdrRefBg_xf744
    /*0000f604*/ CMP         IP, #12 
    /*0000f608*/ BEQ         H264eSetSlcHdrRefBg_xf75c
    /*0000f60c*/ LDR         R6, [R4, #2848]             @ 0xb20 
    /*0000f610*/ MOV         R2, #4 
    /*0000f614*/ STR         R2, [R4, #1704]             @ 0x6a8 
    /*0000f618*/ CMP         R6, #1 
    /*0000f61c*/ BEQ         H264eSetSlcHdrRefBg_xf9b8
    /*0000f620*/ CMP         R6, #2 
    /*0000f624*/ BEQ         H264eSetSlcHdrRefBg_xfbe0
    H264eSetSlcHdrRefBg_xf628:
    /*0000f628*/ LDR         R2, [R4, #2844]             @ 0xb1c 
    /*0000f62c*/ CMP         R2, #0 
    /*0000f630*/ BNE         H264eSetSlcHdrRefBg_xf9c4
    H264eSetSlcHdrRefBg_xf634:
    /*0000f634*/ ADD         R3, R3, #1 
    /*0000f638*/ CMP         R3, R0 
    /*0000f63c*/ BNE         H264eSetSlcHdrRefBg_xf990
    /*0000f640*/ MOV         R2, #5 
    /*0000f644*/ MOV         R3, #0 
    /*0000f648*/ STR         R2, [R4, #1704]             @ 0x6a8 
    /*0000f64c*/ STR         R3, [R4, #24] 
    /*0000f650*/ LDR         R2, [R5, #992]              @ 0x3e0 
    /*0000f654*/ STR         R3, [R2, #360]              @ 0x168 
    /*0000f658*/ B           H264eSetSlcHdrRefBg_xf990
    H264eSetSlcHdrRefBg_xf65c:
    /*0000f65c*/ CMP         IP, #9 
    /*0000f660*/ ADD         R1, R1, #1 
    /*0000f664*/ MOV         R3, #0 
    /*0000f668*/ STR         R1, [R4, #1660]             @ 0x67c 
    /*0000f66c*/ STR         R3, [R4, #1664]             @ 0x680 
    /*0000f670*/ BNE         H264eSetSlcHdrRefBg_xf744
    H264eSetSlcHdrRefBg_xf674:
    /*0000f674*/ LDR         R3, [R4, #2848]             @ 0xb20 
    /*0000f678*/ MOV         R2, #1 
    /*0000f67c*/ STR         R2, [R4, #1704]             @ 0x6a8 
    /*0000f680*/ CMP         R3, R2 
    /*0000f684*/ BEQ         H264eSetSlcHdrRefBg_xfa4c
    H264eSetSlcHdrRefBg_xf688:
    /*0000f688*/ CMP         R9, #0 
    /*0000f68c*/ MOV         R3, #1 
    /*0000f690*/ MOV         R1, #0 
    /*0000f694*/ MOV         R2, #4 
    /*0000f698*/ MOV         R0, #2 
    /*0000f69c*/ STR         R3, [R4, #904]              @ 0x388 
    /*0000f6a0*/ STR         R3, [R4, #908]              @ 0x38c 
    /*0000f6a4*/ STR         R3, [R4, #952]              @ 0x3b8 
    /*0000f6a8*/ STR         R1, [R4, #948]              @ 0x3b4 
    /*0000f6ac*/ STR         R2, [R4, #912]              @ 0x390 
    /*0000f6b0*/ STR         R2, [R4, #916]              @ 0x394 
    /*0000f6b4*/ STR         R0, [R4, #956]              @ 0x3bc 
    /*0000f6b8*/ STRNE       R1, [R4, #920]              @ 0x398 
    /*0000f6bc*/ BNE         H264eSetSlcHdrRefBg_xf6e8
    /*0000f6c0*/ STR         R3, [R4, #960]              @ 0x3c0 
    /*0000f6c4*/ MOV         R3, #6 
    /*0000f6c8*/ STR         R9, [R4, #924]              @ 0x39c 
    /*0000f6cc*/ STR         R3, [R4, #920]              @ 0x398 
    H264eSetSlcHdrRefBg_xf6d0:
    /*0000f6d0*/ LDR         R2, [R5, #992]              @ 0x3e0 
    /*0000f6d4*/ MOV         R3, #1 
    /*0000f6d8*/ STR         R3, [R2, #360]              @ 0x168 
    /*0000f6dc*/ LDR         R2, [R5, #992]              @ 0x3e0 
    /*0000f6e0*/ STR         R3, [R2, #376]              @ 0x178 
    /*0000f6e4*/ STR         SL, [R4, #1656]             @ 0x678 
    H264eSetSlcHdrRefBg_xf6e8:
    /*0000f6e8*/ MOV         R6, #0 
    /*0000f6ec*/ MOV         R2, #1 
    /*0000f6f0*/ STR         R6, [SP] 
    /*0000f6f4*/ MOV         R3, R6 
    /*0000f6f8*/ STR         R2, [R4, #88]               @ 0x58 
    /*0000f6fc*/ MOV         R0, R7 
    /*0000f700*/ MOV         R2, #2 
    /*0000f704*/ MOV         R1, R6 
    /*0000f708*/ BL          0x000000000000F708          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000f70c*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*0000f710*/ MOV         R2, #3 
    /*0000f714*/ STR         R6, [R4, #2880]             @ 0xb40 
    /*0000f718*/ CMP         R3, R6 
    /*0000f71c*/ STR         R2, [R4, #96]               @ 0x60 
    /*0000f720*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*0000f724*/ BEQ         H264eSetSlcHdrRefBg_xfd34
    H264eSetSlcHdrRefBg_xf728:
    /*0000f728*/ MOV         R3, #0 
    /*0000f72c*/ MOV         R2, #1 
    /*0000f730*/ STR         R3, [R4, #1660]             @ 0x67c 
    /*0000f734*/ STR         R3, [R4, #1664]             @ 0x680 
    /*0000f738*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*0000f73c*/ STR         R2, [R5, #1928]             @ 0x788 
    /*0000f740*/ B           H264eSetSlcHdrRefBg_xf984
    H264eSetSlcHdrRefBg_xf744:
    /*0000f744*/ LDR         R2, [R4, #1660]             @ 0x67c 
    /*0000f748*/ LDR         R3, [R4, #1644]             @ 0x66c 
    /*0000f74c*/ CMP         R2, R3 
    /*0000f750*/ BEQ         H264eSetSlcHdrRefBg_xf75c
    /*0000f754*/ CMP         IP, #12 
    /*0000f758*/ BNE         H264eSetSlcHdrRefBg_xf8f8
    H264eSetSlcHdrRefBg_xf75c:
    /*0000f75c*/ LDR         R3, [R4, #2848]             @ 0xb20 
    /*0000f760*/ MOV         R2, #2 
    /*0000f764*/ STR         R2, [R4, #1704]             @ 0x6a8 
    /*0000f768*/ CMP         R3, #1 
    /*0000f76c*/ BEQ         H264eSetSlcHdrRefBg_xfa8c
    /*0000f770*/ CMP         R3, #2 
    /*0000f774*/ BEQ         H264eSetSlcHdrRefBg_xf794
    /*0000f778*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c70] 
    /*0000f77c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000f780*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c70] 
    /*0000f784*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000f788*/ MOVW        R2, #927                    @ 0x39f 
    /*0000f78c*/ LDR         R1, [PC, #1916]             @ 0x000000000000ff10 
    /*0000f790*/ BL          0x000000000000F790          @ osal_panic [R_ARM_CALL: +0x0] 
    H264eSetSlcHdrRefBg_xf794:
    /*0000f794*/ LDR         R2, [R4, #2844]             @ 0xb1c 
    /*0000f798*/ MOV         R3, #1 
    /*0000f79c*/ STR         R3, [R4, #904]              @ 0x388 
    /*0000f7a0*/ CMP         R2, #0 
    /*0000f7a4*/ BEQ         H264eSetSlcHdrRefBg_xfb54
    /*0000f7a8*/ CMP         R9, #0 
    /*0000f7ac*/ MOV         R1, #0 
    /*0000f7b0*/ MOV         R2, #2 
    /*0000f7b4*/ MOV         R0, #4 
    /*0000f7b8*/ STR         R3, [R4, #908]              @ 0x38c 
    /*0000f7bc*/ STR         R3, [R4, #952]              @ 0x3b8 
    /*0000f7c0*/ STR         R1, [R4, #948]              @ 0x3b4 
    /*0000f7c4*/ STR         R2, [R4, #912]              @ 0x390 
    /*0000f7c8*/ STR         R2, [R4, #956]              @ 0x3bc 
    /*0000f7cc*/ STR         R0, [R4, #916]              @ 0x394 
    /*0000f7d0*/ STRNE       R1, [R4, #920]              @ 0x398 
    /*0000f7d4*/ BEQ         H264eSetSlcHdrRefBg_xfc70
    H264eSetSlcHdrRefBg_xf7d8:
    /*0000f7d8*/ LDR         R3, [R4, #2848]             @ 0xb20 
    /*0000f7dc*/ CMP         R3, #1 
    /*0000f7e0*/ BEQ         H264eSetSlcHdrRefBg_xfb8c
    /*0000f7e4*/ MOV         R6, #0 
    /*0000f7e8*/ MOV         R8, #1 
    /*0000f7ec*/ MOV         R1, R8 
    /*0000f7f0*/ STR         R8, [R4, #88]               @ 0x58 
    /*0000f7f4*/ MOV         R3, R6 
    /*0000f7f8*/ MOV         R2, #2 
    /*0000f7fc*/ STR         R6, [SP] 
    /*0000f800*/ MOV         R0, R7 
    /*0000f804*/ BL          0x000000000000F804          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000f808*/ MOV         R3, R8 
    /*0000f80c*/ MOV         R1, R6 
    /*0000f810*/ MOV         R2, #2 
    /*0000f814*/ STR         R6, [SP] 
    /*0000f818*/ MOV         R0, R7 
    /*0000f81c*/ BL          0x000000000000F81C          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000f820*/ LDR         R2, [R4, #2572]             @ 0xa0c 
    /*0000f824*/ LDR         R3, [R4, #2576]             @ 0xa10 
    /*0000f828*/ MOV         R1, #3 
    /*0000f82c*/ CMP         R2, R6 
    /*0000f830*/ STR         R1, [R4, #100]              @ 0x64 
    /*0000f834*/ STR         R2, [R4, #2876]             @ 0xb3c 
    /*0000f838*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*0000f83c*/ BEQ         H264eSetSlcHdrRefBg_xfd74
    H264eSetSlcHdrRefBg_xf840:
    /*0000f840*/ CMP         R3, #0 
    /*0000f844*/ BEQ         H264eSetSlcHdrRefBg_xfd54
    H264eSetSlcHdrRefBg_xf848:
    /*0000f848*/ MOV         R3, #1 
    /*0000f84c*/ MOV         R2, #0 
    /*0000f850*/ STR         R3, [R5, #1928]             @ 0x788 
    /*0000f854*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*0000f858*/ STR         R2, [R5, #1936]             @ 0x790 
    /*0000f85c*/ B           H264eSetSlcHdrRefBg_xf984
    H264eSetSlcHdrRefBg_xf860:
    /*0000f860*/ LDR         R3, [R4, #1648]             @ 0x670 
    /*0000f864*/ CMP         R3, #1 
    /*0000f868*/ BNE         H264eSetSlcHdrRefBg_xf5bc
    /*0000f86c*/ LDR         FP, [R4, #1644]             @ 0x66c 
    /*0000f870*/ CMP         FP, #1 
    /*0000f874*/ BNE         H264eSetSlcHdrRefBg_xf5bc
    /*0000f878*/ SUB         R3, IP, #4 
    /*0000f87c*/ CMP         R3, #1 
    /*0000f880*/ BLS         H264eSetSlcHdrRefBg_xfe18
    /*0000f884*/ CMP         IP, #6 
    /*0000f888*/ CMPNE       IP, #9 
    /*0000f88c*/ BNE         H264eSetSlcHdrRefBg_xfd98
    /*0000f890*/ CMP         IP, #9 
    /*0000f894*/ STR         FP, [R4, #88]               @ 0x58 
    /*0000f898*/ MOV         R3, R6 
    /*0000f89c*/ STR         R6, [SP] 
    /*0000f8a0*/ MOVNE       R1, #2 
    /*0000f8a4*/ MOVEQ       R1, #1 
    /*0000f8a8*/ STR         R1, [R4, #1704]             @ 0x6a8 
    /*0000f8ac*/ MOV         R1, R6 
    /*0000f8b0*/ BL          0x000000000000F8B0          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000f8b4*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*0000f8b8*/ STR         R8, [R4, #96]               @ 0x60 
    /*0000f8bc*/ CMP         R3, #0 
    /*0000f8c0*/ STR         R6, [R4, #2880]             @ 0xb40 
    /*0000f8c4*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*0000f8c8*/ STR         FP, [R5, #1928]             @ 0x788 
    /*0000f8cc*/ STR         R6, [R5, #1932]             @ 0x78c 
    /*0000f8d0*/ BNE         H264eSetSlcHdrRefBg_xf9b0
    /*0000f8d4*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000f8d8*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000f8dc*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000f8e0*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000f8e4*/ MOVW        R2, #758                    @ 0x2f6 
    /*0000f8e8*/ LDR         R1, [PC, #1568]             @ 0x000000000000ff10 
    /*0000f8ec*/ ADD         SP, SP, #12 
    /*0000f8f0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    H264eSetSlcHdrRefBg_xf8f4:
    /*0000f8f4*/ B           H264eSetSlcHdrRefBg_xf8f4   @ osal_panic [R_ARM_JUMP24: +0x0] 
    H264eSetSlcHdrRefBg_xf8f8:
    /*0000f8f8*/ LDR         R3, [R4, #2848]             @ 0xb20 
    /*0000f8fc*/ MOV         R8, #3 
    /*0000f900*/ STR         R8, [R4, #1704]             @ 0x6a8 
    /*0000f904*/ CMP         R3, #1 
    /*0000f908*/ BEQ         H264eSetSlcHdrRefBg_xfcdc
    /*0000f90c*/ MOV         R6, #0 
    /*0000f910*/ MOV         R9, #1 
    /*0000f914*/ MOV         R1, R9 
    /*0000f918*/ STR         R9, [R4, #88]               @ 0x58 
    /*0000f91c*/ MOV         R3, R6 
    /*0000f920*/ MOV         R2, #2 
    /*0000f924*/ STR         R6, [SP] 
    /*0000f928*/ MOV         R0, R7 
    /*0000f92c*/ BL          0x000000000000F92C          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000f930*/ MOV         R3, R9 
    /*0000f934*/ MOV         R2, #2 
    /*0000f938*/ STR         R6, [SP] 
    /*0000f93c*/ MOV         R1, R6 
    /*0000f940*/ MOV         R0, R7 
    /*0000f944*/ BL          0x000000000000F944          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000f948*/ LDR         R2, [R4, #2572]             @ 0xa0c 
    /*0000f94c*/ LDR         R3, [R4, #2576]             @ 0xa10 
    /*0000f950*/ CMP         R2, R6 
    /*0000f954*/ STR         R8, [R4, #100]              @ 0x64 
    /*0000f958*/ STR         R2, [R4, #2876]             @ 0xb3c 
    /*0000f95c*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*0000f960*/ BEQ         H264eSetSlcHdrRefBg_xfdd4
    H264eSetSlcHdrRefBg_xf964:
    /*0000f964*/ CMP         R3, #0 
    /*0000f968*/ BEQ         H264eSetSlcHdrRefBg_xfdf8
    H264eSetSlcHdrRefBg_xf96c:
    /*0000f96c*/ MOV         R3, #2 
    /*0000f970*/ MOV         R2, #1 
    /*0000f974*/ STR         R3, [R5, #1928]             @ 0x788 
    /*0000f978*/ MOV         R3, #0 
    /*0000f97c*/ STR         R2, [R5, #1932]             @ 0x78c 
    /*0000f980*/ STR         R3, [R5, #1936]             @ 0x790 
    H264eSetSlcHdrRefBg_xf984:
    /*0000f984*/ LDR         R3, [R4, #1704]             @ 0x6a8 
    /*0000f988*/ CMP         R3, #4 
    /*0000f98c*/ BEQ         H264eSetSlcHdrRefBg_xfb7c
    H264eSetSlcHdrRefBg_xf990:
    /*0000f990*/ LDR         R3, [R4, #1652]             @ 0x674 
    /*0000f994*/ CMP         R3, #1 
    /*0000f998*/ BNE         H264eSetSlcHdrRefBg_xf9b0
    /*0000f99c*/ LDR         R3, [R4, #1644]             @ 0x66c 
    /*0000f9a0*/ LDR         R2, [R4, #1660]             @ 0x67c 
    /*0000f9a4*/ CMP         R2, R3 
    /*0000f9a8*/ MOVEQ       R3, #0 
    /*0000f9ac*/ STREQ       R3, [R4, #1660]             @ 0x67c 
    H264eSetSlcHdrRefBg_xf9b0:
    /*0000f9b0*/ ADD         SP, SP, #12 
    /*0000f9b4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eSetSlcHdrRefBg_xf9b8:
    /*0000f9b8*/ LDR         R8, [R4, #2844]             @ 0xb1c 
    /*0000f9bc*/ CMP         R8, #0 
    /*0000f9c0*/ BEQ         H264eSetSlcHdrRefBg_xfc84
    H264eSetSlcHdrRefBg_xf9c4:
    /*0000f9c4*/ MOV         R6, #0 
    /*0000f9c8*/ MOV         R8, #1 
    /*0000f9cc*/ STR         R6, [SP] 
    /*0000f9d0*/ MOV         R3, R6 
    /*0000f9d4*/ MOV         R2, R6 
    /*0000f9d8*/ MOV         R1, R6 
    /*0000f9dc*/ STR         R8, [R4, #88]               @ 0x58 
    /*0000f9e0*/ MOV         R0, R7 
    /*0000f9e4*/ BL          0x000000000000F9E4          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000f9e8*/ MOV         R3, R8 
    /*0000f9ec*/ MOV         R1, R6 
    /*0000f9f0*/ MOV         R2, #2 
    /*0000f9f4*/ STR         R6, [SP] 
    /*0000f9f8*/ MOV         R0, R7 
    /*0000f9fc*/ BL          0x000000000000F9FC          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000fa00*/ LDR         R2, [R4, #2572]             @ 0xa0c 
    /*0000fa04*/ LDR         R3, [R4, #2576]             @ 0xa10 
    /*0000fa08*/ MOV         R1, #3 
    /*0000fa0c*/ CMP         R2, R6 
    /*0000fa10*/ STR         R1, [R4, #100]              @ 0x64 
    /*0000fa14*/ STR         R2, [R4, #2876]             @ 0xb3c 
    /*0000fa18*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*0000fa1c*/ BEQ         H264eSetSlcHdrRefBg_xfe84
    H264eSetSlcHdrRefBg_xfa20:
    /*0000fa20*/ CMP         R3, #0 
    /*0000fa24*/ BEQ         H264eSetSlcHdrRefBg_xfe64
    H264eSetSlcHdrRefBg_xfa28:
    /*0000fa28*/ LDR         R3, [R4, #2848]             @ 0xb20 
    /*0000fa2c*/ CMP         R3, #1 
    /*0000fa30*/ BEQ         H264eSetSlcHdrRefBg_xf848
    /*0000fa34*/ MOV         R3, #2 
    /*0000fa38*/ MOV         R2, #0 
    /*0000fa3c*/ STR         R3, [R5, #1928]             @ 0x788 
    /*0000fa40*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*0000fa44*/ STR         R2, [R5, #1936]             @ 0x790 
    /*0000fa48*/ B           H264eSetSlcHdrRefBg_xf984
    H264eSetSlcHdrRefBg_xfa4c:
    /*0000fa4c*/ LDR         R2, [R4, #2844]             @ 0xb1c 
    /*0000fa50*/ CMP         R2, #0 
    /*0000fa54*/ BNE         H264eSetSlcHdrRefBg_xf688
    /*0000fa58*/ CMP         R9, #0 
    /*0000fa5c*/ MOV         R1, #4 
    /*0000fa60*/ STR         R3, [R4, #904]              @ 0x388 
    /*0000fa64*/ STR         R1, [R4, #908]              @ 0x38c 
    /*0000fa68*/ MOV         R1, #2 
    /*0000fa6c*/ STRNE       R2, [R4, #912]              @ 0x390 
    /*0000fa70*/ STR         R1, [R4, #948]              @ 0x3b4 
    /*0000fa74*/ BNE         H264eSetSlcHdrRefBg_xf6e8
    /*0000fa78*/ STR         R3, [R4, #952]              @ 0x3b8 
    /*0000fa7c*/ MOV         R3, #6 
    /*0000fa80*/ STR         R9, [R4, #916]              @ 0x394 
    /*0000fa84*/ STR         R3, [R4, #912]              @ 0x390 
    /*0000fa88*/ B           H264eSetSlcHdrRefBg_xf6d0
    H264eSetSlcHdrRefBg_xfa8c:
    /*0000fa8c*/ LDR         R1, [R4, #2844]             @ 0xb1c 
    /*0000fa90*/ CMP         R1, #0 
    /*0000fa94*/ BNE         H264eSetSlcHdrRefBg_xfac4
    /*0000fa98*/ CMP         R9, #0 
    /*0000fa9c*/ BNE         H264eSetSlcHdrRefBg_xfb8c
    /*0000faa0*/ MOV         R1, #4 
    /*0000faa4*/ STR         R2, [R4, #948]              @ 0x3b4 
    /*0000faa8*/ STR         R3, [R4, #904]              @ 0x388 
    /*0000faac*/ MOV         R2, #6 
    /*0000fab0*/ STR         R3, [R4, #952]              @ 0x3b8 
    /*0000fab4*/ STR         R9, [R4, #916]              @ 0x394 
    /*0000fab8*/ STR         R1, [R4, #908]              @ 0x38c 
    /*0000fabc*/ STR         R2, [R4, #912]              @ 0x390 
    /*0000fac0*/ B           H264eSetSlcHdrRefBg_xfb00
    H264eSetSlcHdrRefBg_xfac4:
    /*0000fac4*/ CMP         R9, #0 
    /*0000fac8*/ STR         R3, [R4, #904]              @ 0x388 
    /*0000facc*/ STR         R3, [R4, #908]              @ 0x38c 
    /*0000fad0*/ MOV         R3, #0 
    /*0000fad4*/ STR         R2, [R4, #952]              @ 0x3b8 
    /*0000fad8*/ MOV         R2, #4 
    /*0000fadc*/ STR         R3, [R4, #948]              @ 0x3b4 
    /*0000fae0*/ STR         R2, [R4, #912]              @ 0x390 
    /*0000fae4*/ BNE         H264eSetSlcHdrRefBg_xfb88
    H264eSetSlcHdrRefBg_xfae8:
    /*0000fae8*/ MOV         R3, #6 
    /*0000faec*/ MOV         R2, #1 
    /*0000faf0*/ STR         R3, [R4, #916]              @ 0x394 
    /*0000faf4*/ MOV         R3, #0 
    /*0000faf8*/ STR         R2, [R4, #956]              @ 0x3bc 
    /*0000fafc*/ STR         R3, [R4, #920]              @ 0x398 
    H264eSetSlcHdrRefBg_xfb00:
    /*0000fb00*/ LDR         R2, [R5, #992]              @ 0x3e0 
    /*0000fb04*/ MOV         R3, #1 
    /*0000fb08*/ STR         R3, [R2, #360]              @ 0x168 
    /*0000fb0c*/ LDR         R2, [R5, #992]              @ 0x3e0 
    /*0000fb10*/ STR         R3, [R2, #376]              @ 0x178 
    /*0000fb14*/ STR         SL, [R4, #1656]             @ 0x678 
    /*0000fb18*/ B           H264eSetSlcHdrRefBg_xf7d8
    H264eSetSlcHdrRefBg_xfb1c:
    /*0000fb1c*/ MOV         R3, #0 
    /*0000fb20*/ MOV         R2, #1 
    /*0000fb24*/ STR         R3, [R4, #1704]             @ 0x6a8 
    /*0000fb28*/ STR         R3, [R4, #896]              @ 0x380 
    /*0000fb2c*/ STR         R2, [R4, #900]              @ 0x384 
    /*0000fb30*/ LDR         R1, [R5, #992]              @ 0x3e0 
    /*0000fb34*/ STR         R2, [R1, #360]              @ 0x168 
    /*0000fb38*/ LDR         R2, [R5, #992]              @ 0x3e0 
    /*0000fb3c*/ STR         R3, [R2, #376]              @ 0x178 
    /*0000fb40*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*0000fb44*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*0000fb48*/ STR         R3, [R5, #1928]             @ 0x788 
    /*0000fb4c*/ ADD         SP, SP, #12 
    /*0000fb50*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eSetSlcHdrRefBg_xfb54:
    /*0000fb54*/ CMP         R9, #0 
    /*0000fb58*/ STR         R3, [R4, #948]              @ 0x3b4 
    /*0000fb5c*/ MOV         R1, #4 
    /*0000fb60*/ MOV         R3, #2 
    /*0000fb64*/ STR         R1, [R4, #912]              @ 0x390 
    /*0000fb68*/ STR         R3, [R4, #908]              @ 0x38c 
    /*0000fb6c*/ STR         R3, [R4, #952]              @ 0x3b8 
    /*0000fb70*/ BEQ         H264eSetSlcHdrRefBg_xfae8
    /*0000fb74*/ STR         R2, [R4, #916]              @ 0x394 
    /*0000fb78*/ B           H264eSetSlcHdrRefBg_xf7d8
    H264eSetSlcHdrRefBg_xfb7c:
    /*0000fb7c*/ LDR         R3, [R4, #1664]             @ 0x680 
    /*0000fb80*/ LDR         R0, [R4, #1648]             @ 0x670 
    /*0000fb84*/ B           H264eSetSlcHdrRefBg_xf634
    H264eSetSlcHdrRefBg_xfb88:
    /*0000fb88*/ STR         R3, [R4, #916]              @ 0x394 
    H264eSetSlcHdrRefBg_xfb8c:
    /*0000fb8c*/ MOV         R6, #0 
    /*0000fb90*/ MOV         R2, #1 
    /*0000fb94*/ STR         R6, [SP] 
    /*0000fb98*/ MOV         R3, R6 
    /*0000fb9c*/ STR         R2, [R4, #88]               @ 0x58 
    /*0000fba0*/ MOV         R0, R7 
    /*0000fba4*/ MOV         R2, #2 
    /*0000fba8*/ MOV         R1, R6 
    /*0000fbac*/ BL          0x000000000000FBAC          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000fbb0*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*0000fbb4*/ MOV         R2, #3 
    /*0000fbb8*/ STR         R6, [R4, #2880]             @ 0xb40 
    /*0000fbbc*/ CMP         R3, R6 
    /*0000fbc0*/ STR         R2, [R4, #96]               @ 0x60 
    /*0000fbc4*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*0000fbc8*/ BEQ         H264eSetSlcHdrRefBg_xfe44
    H264eSetSlcHdrRefBg_xfbcc:
    /*0000fbcc*/ MOV         R2, #1 
    /*0000fbd0*/ MOV         R3, #0 
    /*0000fbd4*/ STR         R2, [R5, #1928]             @ 0x788 
    /*0000fbd8*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*0000fbdc*/ B           H264eSetSlcHdrRefBg_xf984
    H264eSetSlcHdrRefBg_xfbe0:
    /*0000fbe0*/ ADD         LR, LR, #1 
    /*0000fbe4*/ CMP         SL, LR 
    /*0000fbe8*/ BNE         H264eSetSlcHdrRefBg_xf628
    /*0000fbec*/ MOV         R8, #0 
    /*0000fbf0*/ MOV         R9, #1 
    /*0000fbf4*/ MOV         R1, R9 
    /*0000fbf8*/ STR         R9, [R4, #88]               @ 0x58 
    /*0000fbfc*/ MOV         R3, R8 
    /*0000fc00*/ MOV         R2, R6 
    /*0000fc04*/ STR         R8, [SP] 
    /*0000fc08*/ MOV         R0, R7 
    /*0000fc0c*/ BL          0x000000000000FC0C          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000fc10*/ MOV         R3, R9 
    /*0000fc14*/ MOV         R1, R8 
    /*0000fc18*/ MOV         R2, R6 
    /*0000fc1c*/ STR         R8, [SP] 
    /*0000fc20*/ MOV         R0, R7 
    /*0000fc24*/ BL          0x000000000000FC24          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000fc28*/ LDR         R2, [R4, #2572]             @ 0xa0c 
    /*0000fc2c*/ LDR         R3, [R4, #2576]             @ 0xa10 
    /*0000fc30*/ MOV         R1, #3 
    /*0000fc34*/ CMP         R2, R8 
    /*0000fc38*/ STR         R1, [R4, #100]              @ 0x64 
    /*0000fc3c*/ STR         R2, [R4, #2876]             @ 0xb3c 
    /*0000fc40*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*0000fc44*/ BEQ         H264eSetSlcHdrRefBg_xfeec
    H264eSetSlcHdrRefBg_xfc48:
    /*0000fc48*/ CMP         R3, #0 
    /*0000fc4c*/ BNE         H264eSetSlcHdrRefBg_xf96c
    /*0000fc50*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c4c] 
    /*0000fc54*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000fc58*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c4c] 
    /*0000fc5c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000fc60*/ MOVW        R2, #1079                   @ 0x437 
    /*0000fc64*/ LDR         R1, [PC, #676]              @ 0x000000000000ff10 
    /*0000fc68*/ BL          0x000000000000FC68          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fc6c*/ B           H264eSetSlcHdrRefBg_xf96c
    H264eSetSlcHdrRefBg_xfc70:
    /*0000fc70*/ STR         R3, [R4, #960]              @ 0x3c0 
    /*0000fc74*/ MOV         R3, #6 
    /*0000fc78*/ STR         R9, [R4, #924]              @ 0x39c 
    /*0000fc7c*/ STR         R3, [R4, #920]              @ 0x398 
    /*0000fc80*/ B           H264eSetSlcHdrRefBg_xfb00
    H264eSetSlcHdrRefBg_xfc84:
    /*0000fc84*/ STR         R6, [R4, #88]               @ 0x58 
    /*0000fc88*/ MOV         R3, R8 
    /*0000fc8c*/ MOV         R2, #2 
    /*0000fc90*/ MOV         R0, R7 
    /*0000fc94*/ STR         R8, [SP] 
    /*0000fc98*/ MOV         R1, R8 
    /*0000fc9c*/ BL          0x000000000000FC9C          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000fca0*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*0000fca4*/ MOV         R2, #3 
    /*0000fca8*/ STR         R8, [R4, #2880]             @ 0xb40 
    /*0000fcac*/ CMP         R3, #0 
    /*0000fcb0*/ STR         R2, [R4, #96]               @ 0x60 
    /*0000fcb4*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*0000fcb8*/ BNE         H264eSetSlcHdrRefBg_xfbcc
    /*0000fcbc*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000fcc0*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000fcc4*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000fcc8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000fccc*/ MOVW        R2, #1064                   @ 0x428 
    /*0000fcd0*/ LDR         R1, [PC, #568]              @ 0x000000000000ff10 
    /*0000fcd4*/ BL          0x000000000000FCD4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fcd8*/ B           H264eSetSlcHdrRefBg_xfbcc
    H264eSetSlcHdrRefBg_xfcdc:
    /*0000fcdc*/ MOV         R6, #0 
    /*0000fce0*/ STR         R3, [R4, #88]               @ 0x58 
    /*0000fce4*/ MOV         R0, R7 
    /*0000fce8*/ MOV         R3, R6 
    /*0000fcec*/ STR         R6, [SP] 
    /*0000fcf0*/ MOV         R1, R6 
    /*0000fcf4*/ MOV         R2, #2 
    /*0000fcf8*/ BL          0x000000000000FCF8          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000fcfc*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*0000fd00*/ STR         R6, [R4, #2880]             @ 0xb40 
    /*0000fd04*/ CMP         R3, R6 
    /*0000fd08*/ STR         R8, [R4, #96]               @ 0x60 
    /*0000fd0c*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*0000fd10*/ BNE         H264eSetSlcHdrRefBg_xfbcc
    /*0000fd14*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000fd18*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000fd1c*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000fd20*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000fd24*/ MOVW        R2, #1027                   @ 0x403 
    /*0000fd28*/ LDR         R1, [PC, #480]              @ 0x000000000000ff10 
    /*0000fd2c*/ BL          0x000000000000FD2C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fd30*/ B           H264eSetSlcHdrRefBg_xfbcc
    H264eSetSlcHdrRefBg_xfd34:
    /*0000fd34*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000fd38*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000fd3c*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000fd40*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000fd44*/ MOVW        R2, #871                    @ 0x367 
    /*0000fd48*/ LDR         R1, [PC, #448]              @ 0x000000000000ff10 
    /*0000fd4c*/ BL          0x000000000000FD4C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fd50*/ B           H264eSetSlcHdrRefBg_xf728
    H264eSetSlcHdrRefBg_xfd54:
    /*0000fd54*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c4c] 
    /*0000fd58*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000fd5c*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c4c] 
    /*0000fd60*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000fd64*/ MOVW        R2, #1005                   @ 0x3ed 
    /*0000fd68*/ LDR         R1, [PC, #416]              @ 0x000000000000ff10 
    /*0000fd6c*/ BL          0x000000000000FD6C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fd70*/ B           H264eSetSlcHdrRefBg_xf848
    H264eSetSlcHdrRefBg_xfd74:
    /*0000fd74*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000fd78*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000fd7c*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000fd80*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000fd84*/ MOV         R2, #1004                   @ 0x3ec 
    /*0000fd88*/ LDR         R1, [PC, #384]              @ 0x000000000000ff10 
    /*0000fd8c*/ BL          0x000000000000FD8C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fd90*/ LDR         R3, [R4, #2880]             @ 0xb40 
    /*0000fd94*/ B           H264eSetSlcHdrRefBg_xf840
    H264eSetSlcHdrRefBg_xfd98:
    /*0000fd98*/ LDR         R1, [R4, #2572]             @ 0xa0c 
    /*0000fd9c*/ LDR         R3, [R4, #2576]             @ 0xa10 
    /*0000fda0*/ CMP         R1, #0 
    /*0000fda4*/ STR         R2, [R4, #1704]             @ 0x6a8 
    /*0000fda8*/ STR         R1, [R4, #2876]             @ 0xb3c 
    /*0000fdac*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*0000fdb0*/ BEQ         H264eSetSlcHdrRefBg_xfec8
    H264eSetSlcHdrRefBg_xfdb4:
    /*0000fdb4*/ CMP         R3, #0 
    /*0000fdb8*/ BEQ         H264eSetSlcHdrRefBg_xfea8
    H264eSetSlcHdrRefBg_xfdbc:
    /*0000fdbc*/ MOV         R3, #1 
    /*0000fdc0*/ MOV         R2, #0 
    /*0000fdc4*/ STR         R3, [R5, #1928]             @ 0x788 
    /*0000fdc8*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*0000fdcc*/ STR         R2, [R5, #1936]             @ 0x790 
    /*0000fdd0*/ B           H264eSetSlcHdrRefBg_xf9b0
    H264eSetSlcHdrRefBg_xfdd4:
    /*0000fdd4*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000fdd8*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000fddc*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000fde0*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000fde4*/ MOV         R2, #1040                   @ 0x410 
    /*0000fde8*/ LDR         R1, [PC, #288]              @ 0x000000000000ff10 
    /*0000fdec*/ BL          0x000000000000FDEC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fdf0*/ LDR         R3, [R4, #2880]             @ 0xb40 
    /*0000fdf4*/ B           H264eSetSlcHdrRefBg_xf964
    H264eSetSlcHdrRefBg_xfdf8:
    /*0000fdf8*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c4c] 
    /*0000fdfc*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000fe00*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c4c] 
    /*0000fe04*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000fe08*/ MOVW        R2, #1041                   @ 0x411 
    /*0000fe0c*/ LDR         R1, [PC, #252]              @ 0x000000000000ff10 
    /*0000fe10*/ BL          0x000000000000FE10          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fe14*/ B           H264eSetSlcHdrRefBg_xf96c
    H264eSetSlcHdrRefBg_xfe18:
    /*0000fe18*/ STR         R6, [R4, #1704]             @ 0x6a8 
    /*0000fe1c*/ STR         FP, [R4, #900]              @ 0x384 
    /*0000fe20*/ STR         R6, [R4, #896]              @ 0x380 
    /*0000fe24*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*0000fe28*/ STR         FP, [R3, #360]              @ 0x168 
    /*0000fe2c*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*0000fe30*/ STR         R6, [R3, #376]              @ 0x178 
    /*0000fe34*/ STR         R6, [R4, #2876]             @ 0xb3c 
    /*0000fe38*/ STR         R6, [R4, #2880]             @ 0xb40 
    /*0000fe3c*/ STR         R6, [R5, #1928]             @ 0x788 
    /*0000fe40*/ B           H264eSetSlcHdrRefBg_xf9b0
    H264eSetSlcHdrRefBg_xfe44:
    /*0000fe44*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000fe48*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000fe4c*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000fe50*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000fe54*/ MOVW        R2, #991                    @ 0x3df 
    /*0000fe58*/ LDR         R1, [PC, #176]              @ 0x000000000000ff10 
    /*0000fe5c*/ BL          0x000000000000FE5C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fe60*/ B           H264eSetSlcHdrRefBg_xfbcc
    H264eSetSlcHdrRefBg_xfe64:
    /*0000fe64*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c4c] 
    /*0000fe68*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000fe6c*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c4c] 
    /*0000fe70*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000fe74*/ MOVW        R2, #1097                   @ 0x449 
    /*0000fe78*/ LDR         R1, [PC, #144]              @ 0x000000000000ff10 
    /*0000fe7c*/ BL          0x000000000000FE7C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fe80*/ B           H264eSetSlcHdrRefBg_xfa28
    H264eSetSlcHdrRefBg_xfe84:
    /*0000fe84*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000fe88*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000fe8c*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000fe90*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000fe94*/ MOVW        R2, #1096                   @ 0x448 
    /*0000fe98*/ LDR         R1, [PC, #112]              @ 0x000000000000ff10 
    /*0000fe9c*/ BL          0x000000000000FE9C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fea0*/ LDR         R3, [R4, #2880]             @ 0xb40 
    /*0000fea4*/ B           H264eSetSlcHdrRefBg_xfa20
    H264eSetSlcHdrRefBg_xfea8:
    /*0000fea8*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c4c] 
    /*0000feac*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000feb0*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c4c] 
    /*0000feb4*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000feb8*/ MOVW        R2, #767                    @ 0x2ff 
    /*0000febc*/ LDR         R1, [PC, #76]               @ 0x000000000000ff10 
    /*0000fec0*/ BL          0x000000000000FEC0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fec4*/ B           H264eSetSlcHdrRefBg_xfdbc
    H264eSetSlcHdrRefBg_xfec8:
    /*0000fec8*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000fecc*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000fed0*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000fed4*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000fed8*/ MOVW        R2, #766                    @ 0x2fe 
    /*0000fedc*/ LDR         R1, [PC, #44]               @ 0x000000000000ff10 
    /*0000fee0*/ BL          0x000000000000FEE0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fee4*/ LDR         R3, [R4, #2880]             @ 0xb40 
    /*0000fee8*/ B           H264eSetSlcHdrRefBg_xfdb4
    H264eSetSlcHdrRefBg_xfeec:
    /*0000feec*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0000fef0*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000fef4*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0000fef8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000fefc*/ MOVW        R2, #1078                   @ 0x436 
    /*0000ff00*/ LDR         R1, [PC, #8]                @ 0x000000000000ff10 
    /*0000ff04*/ BL          0x000000000000FF04          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000ff08*/ LDR         R3, [R4, #2880]             @ 0xb40 
    /*0000ff0c*/ B           H264eSetSlcHdrRefBg_xfc48
    /*0000ff10*/ ANDEQ       R0, R0, R0, ROR R8 
FUNC_END H264eSetSlcHdrRefBg


FUNC_BEGIN H264eSetSlcHdrRefDualP2
    /*0000ff14*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000ff18*/ ADD         R1, R0, #4096               @ 0x1000 
    /*0000ff1c*/ ADD         R4, R0, #8192               @ 0x2000 
    /*0000ff20*/ ADD         R5, R0, #12288              @ 0x3000 
    /*0000ff24*/ LDR         R8, [R1, #3680]             @ 0xe60 
    /*0000ff28*/ MOV         R3, #0 
    /*0000ff2c*/ LDR         R2, [R5, #1988]             @ 0x7c4 
    /*0000ff30*/ MOV         IP, #3 
    /*0000ff34*/ STR         R3, [R4, #904]              @ 0x388 
    /*0000ff38*/ MOV         R6, R0 
    /*0000ff3c*/ STR         R3, [R4, #88]               @ 0x58 
    /*0000ff40*/ MOV         R0, #2 
    /*0000ff44*/ LDR         R1, [R1, #3620]             @ 0xe24 
    /*0000ff48*/ SUB         SP, SP, #12 
    /*0000ff4c*/ STR         IP, [R4, #24] 
    /*0000ff50*/ STR         R1, [R4, #888]              @ 0x378 
    /*0000ff54*/ LDR         R1, [R5, #992]              @ 0x3e0 
    /*0000ff58*/ STR         R0, [R1, #360]              @ 0x168 
    /*0000ff5c*/ LDR         R1, [R4, #1652]             @ 0x674 
    /*0000ff60*/ STR         R3, [R4, #1700]             @ 0x6a4 
    /*0000ff64*/ CMP         R1, #1 
    /*0000ff68*/ BEQ         H264eSetSlcHdrRefDualP2_x100cc
    H264eSetSlcHdrRefDualP2_xff6c:
    /*0000ff6c*/ CMP         R2, #4 
    /*0000ff70*/ BEQ         H264eSetSlcHdrRefDualP2_x10238
    /*0000ff74*/ LDR         R3, [R4, #1664]             @ 0x680 
    /*0000ff78*/ LDR         R0, [R4, #1648]             @ 0x670 
    /*0000ff7c*/ ADD         R7, R3, #1 
    /*0000ff80*/ LDR         R9, [R4, #1660]             @ 0x67c 
    /*0000ff84*/ CMP         R7, R0 
    /*0000ff88*/ LDR         R0, [R4, #1656]             @ 0x678 
    /*0000ff8c*/ STR         R3, [R4, #1672]             @ 0x688 
    /*0000ff90*/ BIC         R3, R2, #4 
    /*0000ff94*/ STR         R7, [R4, #1664]             @ 0x680 
    /*0000ff98*/ STR         R9, [R4, #1668]             @ 0x684 
    /*0000ff9c*/ STR         R0, [R4, #1676]             @ 0x68c 
    /*0000ffa0*/ BEQ         H264eSetSlcHdrRefDualP2_x1017c
    /*0000ffa4*/ CMP         R3, #8 
    /*0000ffa8*/ BNE         H264eSetSlcHdrRefDualP2_x1003c
    H264eSetSlcHdrRefDualP2_xffac:
    /*0000ffac*/ CMP         R1, #1 
    /*0000ffb0*/ BEQ         H264eSetSlcHdrRefDualP2_x10270
    H264eSetSlcHdrRefDualP2_xffb4:
    /*0000ffb4*/ MOV         R7, #0 
    /*0000ffb8*/ MOV         R0, R6 
    /*0000ffbc*/ STR         R7, [SP] 
    /*0000ffc0*/ MOV         R3, R7 
    /*0000ffc4*/ MOV         R6, #3 
    /*0000ffc8*/ MOV         R2, #1 
    /*0000ffcc*/ MOV         R1, R7 
    /*0000ffd0*/ STR         R2, [R4, #88]               @ 0x58 
    /*0000ffd4*/ STR         R6, [R4, #1704]             @ 0x6a8 
    /*0000ffd8*/ MOV         R2, #2 
    /*0000ffdc*/ BL          0x000000000000FFDC          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*0000ffe0*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*0000ffe4*/ STR         R6, [R4, #96]               @ 0x60 
    /*0000ffe8*/ CMP         R3, R7 
    /*0000ffec*/ STR         R7, [R4, #2880]             @ 0xb40 
    /*0000fff0*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*0000fff4*/ BEQ         H264eSetSlcHdrRefDualP2_x10364
    H264eSetSlcHdrRefDualP2_xfff8:
    /*0000fff8*/ MOV         R2, #1 
    /*0000fffc*/ MOV         R3, #0 
    /*00010000*/ STR         R2, [R5, #1928]             @ 0x788 
    /*00010004*/ STR         R3, [R5, #1932]             @ 0x78c 
    H264eSetSlcHdrRefDualP2_x10008:
    /*00010008*/ LDR         R3, [R4, #1704]             @ 0x6a8 
    /*0001000c*/ CMP         R3, #4 
    /*00010010*/ BEQ         H264eSetSlcHdrRefDualP2_x1014c
    H264eSetSlcHdrRefDualP2_x10014:
    /*00010014*/ LDR         R3, [R4, #1652]             @ 0x674 
    /*00010018*/ CMP         R3, #1 
    /*0001001c*/ BNE         H264eSetSlcHdrRefDualP2_x10034
    /*00010020*/ LDR         R3, [R4, #1644]             @ 0x66c 
    /*00010024*/ LDR         R2, [R4, #1660]             @ 0x67c 
    /*00010028*/ CMP         R2, R3 
    /*0001002c*/ MOVEQ       R3, #0 
    /*00010030*/ STREQ       R3, [R4, #1660]             @ 0x67c 
    H264eSetSlcHdrRefDualP2_x10034:
    /*00010034*/ ADD         SP, SP, #12 
    /*00010038*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264eSetSlcHdrRefDualP2_x1003c:
    /*0001003c*/ CMP         R7, #0 
    /*00010040*/ BEQ         H264eSetSlcHdrRefDualP2_x10194
    /*00010044*/ ADD         R0, R0, #1 
    /*00010048*/ MOV         R3, #4 
    /*0001004c*/ CMP         R8, R0 
    /*00010050*/ STR         R3, [R4, #1704]             @ 0x6a8 
    /*00010054*/ BEQ         H264eSetSlcHdrRefDualP2_x1039c
    /*00010058*/ LDR         R3, [R5, #2088]             @ 0x828 
    /*0001005c*/ CMP         R3, #0 
    /*00010060*/ BNE         H264eSetSlcHdrRefDualP2_x10280
    /*00010064*/ CMP         R7, #1 
    /*00010068*/ BEQ         H264eSetSlcHdrRefDualP2_x10330
    /*0001006c*/ CMP         R7, #2 
    /*00010070*/ BEQ         H264eSetSlcHdrRefDualP2_x103fc
    /*00010074*/ LDR         R2, [R5, #1932]             @ 0x78c 
    /*00010078*/ LDR         R1, [R5, #1928]             @ 0x788 
    /*0001007c*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*00010080*/ LDR         R0, [R4, #2576]             @ 0xa10 
    /*00010084*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*00010088*/ STR         R0, [R4, #2880]             @ 0xb40 
    /*0001008c*/ STR         R1, [R5, #1932]             @ 0x78c 
    /*00010090*/ STR         R2, [R5, #1936]             @ 0x790 
    /*00010094*/ STR         R2, [R5, #1928]             @ 0x788 
    H264eSetSlcHdrRefDualP2_x10098:
    /*00010098*/ CMP         R3, #0 
    /*0001009c*/ BEQ         H264eSetSlcHdrRefDualP2_x105a0
    H264eSetSlcHdrRefDualP2_x100a0:
    /*000100a0*/ LDR         R3, [R4, #2880]             @ 0xb40 
    /*000100a4*/ CMP         R3, #0 
    /*000100a8*/ BNE         H264eSetSlcHdrRefDualP2_x10008
    /*000100ac*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c4c] 
    /*000100b0*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*000100b4*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c4c] 
    /*000100b8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*000100bc*/ MOVW        R2, #1463                   @ 0x5b7 
    /*000100c0*/ LDR         R1, [PC, #1736]             @ 0x0000000000010790 
    /*000100c4*/ BL          0x00000000000100C4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000100c8*/ B           H264eSetSlcHdrRefDualP2_x10008
    H264eSetSlcHdrRefDualP2_x100cc:
    /*000100cc*/ LDR         IP, [R4, #1648]             @ 0x670 
    /*000100d0*/ CMP         IP, #1 
    /*000100d4*/ BNE         H264eSetSlcHdrRefDualP2_xff6c
    /*000100d8*/ LDR         IP, [R4, #1644]             @ 0x66c 
    /*000100dc*/ CMP         IP, #1 
    /*000100e0*/ BNE         H264eSetSlcHdrRefDualP2_xff6c
    /*000100e4*/ LDR         R1, [R5, #2088]             @ 0x828 
    /*000100e8*/ CMP         R1, R3 
    /*000100ec*/ BNE         H264eSetSlcHdrRefDualP2_x10428
    /*000100f0*/ CMP         R2, #4 
    /*000100f4*/ BEQ         H264eSetSlcHdrRefDualP2_x10684
    /*000100f8*/ LDR         R3, [R4, #2844]             @ 0xb1c 
    /*000100fc*/ CMP         R3, #1 
    /*00010100*/ BEQ         H264eSetSlcHdrRefDualP2_x10614
    /*00010104*/ LDR         R2, [R4, #2572]             @ 0xa0c 
    /*00010108*/ LDR         R3, [R4, #2576]             @ 0xa10 
    /*0001010c*/ CMP         R2, #0 
    /*00010110*/ STR         R0, [R4, #1704]             @ 0x6a8 
    /*00010114*/ STR         R2, [R4, #2876]             @ 0xb3c 
    /*00010118*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*0001011c*/ BEQ         H264eSetSlcHdrRefDualP2_x106e4
    H264eSetSlcHdrRefDualP2_x10120:
    /*00010120*/ CMP         R3, #0 
    /*00010124*/ BEQ         H264eSetSlcHdrRefDualP2_x106c4
    H264eSetSlcHdrRefDualP2_x10128:
    /*00010128*/ LDR         R3, [R4, #2240]             @ 0x8c0 
    /*0001012c*/ TST         R3, #1 
    /*00010130*/ BEQ         H264eSetSlcHdrRefDualP2_x10588
    /*00010134*/ MOV         R3, #1 
    /*00010138*/ MOV         R2, #0 
    /*0001013c*/ STR         R3, [R5, #1928]             @ 0x788 
    /*00010140*/ STR         R3, [R5, #1936]             @ 0x790 
    /*00010144*/ STR         R2, [R5, #1932]             @ 0x78c 
    /*00010148*/ B           H264eSetSlcHdrRefDualP2_x10034
    H264eSetSlcHdrRefDualP2_x1014c:
    /*0001014c*/ LDR         R3, [R4, #1664]             @ 0x680 
    /*00010150*/ LDR         R2, [R4, #1648]             @ 0x670 
    /*00010154*/ ADD         R3, R3, #1 
    /*00010158*/ CMP         R3, R2 
    /*0001015c*/ BNE         H264eSetSlcHdrRefDualP2_x10014
    /*00010160*/ MOV         R2, #5 
    /*00010164*/ MOV         R3, #0 
    /*00010168*/ STR         R2, [R4, #1704]             @ 0x6a8 
    /*0001016c*/ STR         R3, [R4, #24] 
    /*00010170*/ LDR         R2, [R5, #992]              @ 0x3e0 
    /*00010174*/ STR         R3, [R2, #360]              @ 0x168 
    /*00010178*/ B           H264eSetSlcHdrRefDualP2_x10014
    H264eSetSlcHdrRefDualP2_x1017c:
    /*0001017c*/ CMP         R3, #8 
    /*00010180*/ ADD         R9, R9, #1 
    /*00010184*/ MOV         R3, #0 
    /*00010188*/ STR         R9, [R4, #1660]             @ 0x67c 
    /*0001018c*/ STR         R3, [R4, #1664]             @ 0x680 
    /*00010190*/ BEQ         H264eSetSlcHdrRefDualP2_xffac
    H264eSetSlcHdrRefDualP2_x10194:
    /*00010194*/ CMP         R1, #1 
    /*00010198*/ BNE         H264eSetSlcHdrRefDualP2_xffb4
    H264eSetSlcHdrRefDualP2_x1019c:
    /*0001019c*/ LDR         R1, [R4, #1660]             @ 0x67c 
    /*000101a0*/ LDR         R3, [R4, #1644]             @ 0x66c 
    /*000101a4*/ CMP         R1, R3 
    /*000101a8*/ BEQ         H264eSetSlcHdrRefDualP2_x101b4
    H264eSetSlcHdrRefDualP2_x101ac:
    /*000101ac*/ CMP         R2, #12 
    /*000101b0*/ BNE         H264eSetSlcHdrRefDualP2_xffb4
    H264eSetSlcHdrRefDualP2_x101b4:
    /*000101b4*/ MOV         R7, #0 
    /*000101b8*/ MOV         R2, #2 
    /*000101bc*/ STR         R7, [R4, #948]              @ 0x3b4 
    /*000101c0*/ MOV         IP, #1 
    /*000101c4*/ STR         R2, [R4, #1704]             @ 0x6a8 
    /*000101c8*/ MOV         R1, #6 
    /*000101cc*/ STR         R2, [R4, #908]              @ 0x38c 
    /*000101d0*/ MOV         R3, R7 
    /*000101d4*/ STR         R1, [R4, #912]              @ 0x390 
    /*000101d8*/ MOV         R0, R6 
    /*000101dc*/ STR         IP, [R4, #904]              @ 0x388 
    /*000101e0*/ MOV         R1, R7 
    /*000101e4*/ STR         R7, [R4, #952]              @ 0x3b8 
    /*000101e8*/ STR         R7, [R4, #916]              @ 0x394 
    /*000101ec*/ LDR         LR, [R5, #992]              @ 0x3e0 
    /*000101f0*/ STR         IP, [LR, #360]              @ 0x168 
    /*000101f4*/ LDR         LR, [R5, #992]              @ 0x3e0 
    /*000101f8*/ STR         R7, [LR, #376]              @ 0x178 
    /*000101fc*/ STR         IP, [R4, #88]               @ 0x58 
    /*00010200*/ STR         R7, [SP] 
    /*00010204*/ BL          0x0000000000010204          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*00010208*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*0001020c*/ MOV         R2, #3 
    /*00010210*/ STR         R7, [R4, #2880]             @ 0xb40 
    /*00010214*/ CMP         R3, R7 
    /*00010218*/ STR         R2, [R4, #96]               @ 0x60 
    /*0001021c*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*00010220*/ BEQ         H264eSetSlcHdrRefDualP2_x10470
    H264eSetSlcHdrRefDualP2_x10224:
    /*00010224*/ MOV         R3, #0 
    /*00010228*/ STR         R3, [R5, #1928]             @ 0x788 
    /*0001022c*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*00010230*/ STR         R8, [R4, #1656]             @ 0x678 
    /*00010234*/ B           H264eSetSlcHdrRefDualP2_x10008
    H264eSetSlcHdrRefDualP2_x10238:
    /*00010238*/ MOV         R3, #0 
    /*0001023c*/ MOV         R2, #1 
    /*00010240*/ STR         R3, [R4, #1704]             @ 0x6a8 
    /*00010244*/ STR         R3, [R4, #896]              @ 0x380 
    /*00010248*/ STR         R2, [R4, #900]              @ 0x384 
    /*0001024c*/ LDR         R1, [R5, #992]              @ 0x3e0 
    /*00010250*/ STR         R2, [R1, #360]              @ 0x168 
    H264eSetSlcHdrRefDualP2_x10254:
    /*00010254*/ LDR         R2, [R5, #992]              @ 0x3e0 
    /*00010258*/ STR         R3, [R2, #376]              @ 0x178 
    /*0001025c*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*00010260*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*00010264*/ STR         R3, [R5, #1928]             @ 0x788 
    /*00010268*/ ADD         SP, SP, #12 
    /*0001026c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264eSetSlcHdrRefDualP2_x10270:
    /*00010270*/ LDR         R3, [R4, #1664]             @ 0x680 
    /*00010274*/ CMP         R3, #0 
    /*00010278*/ BNE         H264eSetSlcHdrRefDualP2_x101ac
    /*0001027c*/ B           H264eSetSlcHdrRefDualP2_x1019c
    H264eSetSlcHdrRefDualP2_x10280:
    /*00010280*/ MOV         R7, #0 
    /*00010284*/ MOV         R8, #1 
    /*00010288*/ STR         R7, [SP] 
    /*0001028c*/ MOV         R3, R7 
    /*00010290*/ MOV         R2, R7 
    /*00010294*/ MOV         R1, R7 
    /*00010298*/ STR         R8, [R4, #88]               @ 0x58 
    /*0001029c*/ MOV         R0, R6 
    /*000102a0*/ BL          0x00000000000102A0          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*000102a4*/ MOV         R1, R7 
    /*000102a8*/ MOV         R3, R8 
    /*000102ac*/ MOV         R2, #2 
    /*000102b0*/ STR         R7, [SP] 
    /*000102b4*/ MOV         R0, R6 
    /*000102b8*/ BL          0x00000000000102B8          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*000102bc*/ LDR         R0, [R4, #1652]             @ 0x674 
    /*000102c0*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*000102c4*/ MOV         R1, #3 
    /*000102c8*/ LDR         R2, [R4, #2576]             @ 0xa10 
    /*000102cc*/ CMP         R0, R8 
    /*000102d0*/ STR         R1, [R4, #100]              @ 0x64 
    /*000102d4*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*000102d8*/ STR         R2, [R4, #2880]             @ 0xb40 
    /*000102dc*/ BEQ         H264eSetSlcHdrRefDualP2_x10384
    /*000102e0*/ LDR         R2, [R4, #1660]             @ 0x67c 
    /*000102e4*/ CMP         R2, R7 
    /*000102e8*/ BEQ         H264eSetSlcHdrRefDualP2_x10384
    /*000102ec*/ MOV         R2, #2 
    /*000102f0*/ STR         R8, [R5, #1932]             @ 0x78c 
    /*000102f4*/ STR         R2, [R5, #1928]             @ 0x788 
    /*000102f8*/ STR         R2, [R5, #1936]             @ 0x790 
    H264eSetSlcHdrRefDualP2_x102fc:
    /*000102fc*/ CMP         R3, #0 
    /*00010300*/ BEQ         H264eSetSlcHdrRefDualP2_x105c0
    H264eSetSlcHdrRefDualP2_x10304:
    /*00010304*/ LDR         R3, [R4, #2880]             @ 0xb40 
    /*00010308*/ CMP         R3, #0 
    /*0001030c*/ BNE         H264eSetSlcHdrRefDualP2_x10008
    /*00010310*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c4c] 
    /*00010314*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*00010318*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c4c] 
    /*0001031c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*00010320*/ MOV         R2, #1408                   @ 0x580 
    /*00010324*/ LDR         R1, [PC, #1124]             @ 0x0000000000010790 
    /*00010328*/ BL          0x0000000000010328          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001032c*/ B           H264eSetSlcHdrRefDualP2_x10008
    H264eSetSlcHdrRefDualP2_x10330:
    /*00010330*/ LDR         R2, [R4, #2572]             @ 0xa0c 
    /*00010334*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*00010338*/ CMP         R2, #0 
    /*0001033c*/ STR         R2, [R4, #2876]             @ 0xb3c 
    /*00010340*/ BEQ         H264eSetSlcHdrRefDualP2_x1064c
    H264eSetSlcHdrRefDualP2_x10344:
    /*00010344*/ LDR         R3, [R4, #1660]             @ 0x67c 
    /*00010348*/ CMP         R3, #0 
    /*0001034c*/ BEQ         H264eSetSlcHdrRefDualP2_xfff8
    /*00010350*/ MOV         R2, #2 
    /*00010354*/ MOV         R3, #1 
    /*00010358*/ STR         R2, [R5, #1928]             @ 0x788 
    /*0001035c*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*00010360*/ B           H264eSetSlcHdrRefDualP2_x10008
    H264eSetSlcHdrRefDualP2_x10364:
    /*00010364*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*00010368*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0001036c*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*00010370*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*00010374*/ MOVW        R2, #1361                   @ 0x551 
    /*00010378*/ LDR         R1, [PC, #1040]             @ 0x0000000000010790 
    /*0001037c*/ BL          0x000000000001037C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010380*/ B           H264eSetSlcHdrRefDualP2_xfff8
    H264eSetSlcHdrRefDualP2_x10384:
    /*00010384*/ MOV         R2, #1 
    /*00010388*/ MOV         R1, #0 
    /*0001038c*/ STR         R2, [R5, #1928]             @ 0x788 
    /*00010390*/ STR         R2, [R5, #1932]             @ 0x78c 
    /*00010394*/ STR         R1, [R5, #1936]             @ 0x790 
    /*00010398*/ B           H264eSetSlcHdrRefDualP2_x102fc
    H264eSetSlcHdrRefDualP2_x1039c:
    /*0001039c*/ MOV         R7, #0 
    /*000103a0*/ MOV         R2, #1 
    /*000103a4*/ STR         R7, [SP] 
    /*000103a8*/ MOV         R3, R7 
    /*000103ac*/ STR         R2, [R4, #88]               @ 0x58 
    /*000103b0*/ MOV         R0, R6 
    /*000103b4*/ MOV         R2, #2 
    /*000103b8*/ MOV         R1, R7 
    /*000103bc*/ BL          0x00000000000103BC          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*000103c0*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*000103c4*/ MOV         R2, #3 
    /*000103c8*/ STR         R7, [R4, #2880]             @ 0xb40 
    /*000103cc*/ CMP         R3, R7 
    /*000103d0*/ STR         R2, [R4, #96]               @ 0x60 
    /*000103d4*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*000103d8*/ BNE         H264eSetSlcHdrRefDualP2_xfff8
    /*000103dc*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*000103e0*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*000103e4*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*000103e8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*000103ec*/ MOVW        R2, #1380                   @ 0x564 
    /*000103f0*/ LDR         R1, [PC, #920]              @ 0x0000000000010790 
    /*000103f4*/ BL          0x00000000000103F4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000103f8*/ B           H264eSetSlcHdrRefDualP2_xfff8
    H264eSetSlcHdrRefDualP2_x103fc:
    /*000103fc*/ CMP         R9, #0 
    /*00010400*/ BEQ         H264eSetSlcHdrRefDualP2_x10490
    /*00010404*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*00010408*/ MOV         R2, #1 
    /*0001040c*/ LDR         R1, [R4, #2576]             @ 0xa10 
    /*00010410*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*00010414*/ STR         R1, [R4, #2880]             @ 0xb40 
    /*00010418*/ STR         R7, [R5, #1932]             @ 0x78c 
    /*0001041c*/ STR         R2, [R5, #1928]             @ 0x788 
    /*00010420*/ STR         R2, [R5, #1936]             @ 0x790 
    /*00010424*/ B           H264eSetSlcHdrRefDualP2_x10098
    H264eSetSlcHdrRefDualP2_x10428:
    /*00010428*/ CMP         R2, #4 
    /*0001042c*/ BEQ         H264eSetSlcHdrRefDualP2_x1066c
    /*00010430*/ CMP         R2, #8 
    /*00010434*/ BEQ         H264eSetSlcHdrRefDualP2_x1051c
    /*00010438*/ LDR         R3, [R4, #2844]             @ 0xb1c 
    /*0001043c*/ STR         R0, [R4, #1704]             @ 0x6a8 
    /*00010440*/ CMP         R3, #0 
    /*00010444*/ LDR         R2, [R4, #2572]             @ 0xa0c 
    /*00010448*/ BNE         H264eSetSlcHdrRefDualP2_x105e0
    /*0001044c*/ CMP         R2, #0 
    /*00010450*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*00010454*/ STR         R2, [R4, #2876]             @ 0xb3c 
    /*00010458*/ BEQ         H264eSetSlcHdrRefDualP2_x10708
    H264eSetSlcHdrRefDualP2_x1045c:
    /*0001045c*/ MOV         R2, #1 
    /*00010460*/ MOV         R3, #0 
    /*00010464*/ STR         R2, [R5, #1928]             @ 0x788 
    /*00010468*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*0001046c*/ B           H264eSetSlcHdrRefDualP2_x10034
    H264eSetSlcHdrRefDualP2_x10470:
    /*00010470*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*00010474*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*00010478*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*0001047c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*00010480*/ MOVW        R2, #1343                   @ 0x53f 
    /*00010484*/ LDR         R1, [PC, #772]              @ 0x0000000000010790 
    /*00010488*/ BL          0x0000000000010488          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001048c*/ B           H264eSetSlcHdrRefDualP2_x10224
    H264eSetSlcHdrRefDualP2_x10490:
    /*00010490*/ MOV         R8, #1 
    /*00010494*/ STR         R9, [SP] 
    /*00010498*/ MOV         R3, R9 
    /*0001049c*/ MOV         R2, R9 
    /*000104a0*/ MOV         R1, R9 
    /*000104a4*/ STR         R8, [R4, #88]               @ 0x58 
    /*000104a8*/ MOV         R0, R6 
    /*000104ac*/ BL          0x00000000000104AC          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*000104b0*/ MOV         R3, R8 
    /*000104b4*/ MOV         R2, R7 
    /*000104b8*/ MOV         R1, R9 
    /*000104bc*/ STR         R9, [SP] 
    /*000104c0*/ MOV         R0, R6 
    /*000104c4*/ BL          0x00000000000104C4          @ H264eSetReorderEx [R_ARM_CALL: .text+0xe968] 
    /*000104c8*/ LDR         R2, [R4, #2572]             @ 0xa0c 
    /*000104cc*/ LDR         R3, [R4, #2576]             @ 0xa10 
    /*000104d0*/ MOV         R1, #3 
    /*000104d4*/ CMP         R2, #0 
    /*000104d8*/ STR         R1, [R4, #100]              @ 0x64 
    /*000104dc*/ STR         R2, [R4, #2876]             @ 0xb3c 
    /*000104e0*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*000104e4*/ STR         R8, [R5, #1932]             @ 0x78c 
    /*000104e8*/ STR         R7, [R5, #1928]             @ 0x788 
    /*000104ec*/ STR         R9, [R5, #1936]             @ 0x790 
    /*000104f0*/ BEQ         H264eSetSlcHdrRefDualP2_x106a0
    H264eSetSlcHdrRefDualP2_x104f4:
    /*000104f4*/ CMP         R3, #0 
    /*000104f8*/ BNE         H264eSetSlcHdrRefDualP2_x10008
    /*000104fc*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c4c] 
    /*00010500*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*00010504*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c4c] 
    /*00010508*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0001050c*/ MOV         R2, #1440                   @ 0x5a0 
    /*00010510*/ LDR         R1, [PC, #632]              @ 0x0000000000010790 
    /*00010514*/ BL          0x0000000000010514          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010518*/ B           H264eSetSlcHdrRefDualP2_x10008
    H264eSetSlcHdrRefDualP2_x1051c:
    /*0001051c*/ STR         R3, [R4, #948]              @ 0x3b4 
    /*00010520*/ MOV         R2, #6 
    /*00010524*/ STR         R3, [R4, #952]              @ 0x3b8 
    /*00010528*/ STR         R3, [R4, #916]              @ 0x394 
    /*0001052c*/ STR         R0, [R4, #1704]             @ 0x6a8 
    /*00010530*/ STR         IP, [R4, #904]              @ 0x388 
    /*00010534*/ STR         R0, [R4, #908]              @ 0x38c 
    /*00010538*/ STR         R2, [R4, #912]              @ 0x390 
    /*0001053c*/ LDR         R2, [R5, #992]              @ 0x3e0 
    /*00010540*/ STR         IP, [R2, #360]              @ 0x168 
    /*00010544*/ LDR         R2, [R5, #992]              @ 0x3e0 
    /*00010548*/ STR         R3, [R2, #376]              @ 0x178 
    /*0001054c*/ LDR         R2, [R4, #2572]             @ 0xa0c 
    /*00010550*/ LDR         R3, [R4, #2576]             @ 0xa10 
    /*00010554*/ CMP         R2, #0 
    /*00010558*/ STR         R2, [R4, #2876]             @ 0xb3c 
    /*0001055c*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*00010560*/ BEQ         H264eSetSlcHdrRefDualP2_x10748
    H264eSetSlcHdrRefDualP2_x10564:
    /*00010564*/ CMP         R3, #0 
    /*00010568*/ BNE         H264eSetSlcHdrRefDualP2_x10588
    /*0001056c*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c4c] 
    /*00010570*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*00010574*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c4c] 
    /*00010578*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0001057c*/ MOVW        R2, #1250                   @ 0x4e2 
    /*00010580*/ LDR         R1, [PC, #520]              @ 0x0000000000010790 
    /*00010584*/ BL          0x0000000000010584          @ osal_panic [R_ARM_CALL: +0x0] 
    H264eSetSlcHdrRefDualP2_x10588:
    /*00010588*/ MOV         R3, #0 
    /*0001058c*/ MOV         R2, #1 
    /*00010590*/ STR         R3, [R5, #1928]             @ 0x788 
    /*00010594*/ STR         R3, [R5, #1936]             @ 0x790 
    /*00010598*/ STR         R2, [R5, #1932]             @ 0x78c 
    /*0001059c*/ B           H264eSetSlcHdrRefDualP2_x10034
    H264eSetSlcHdrRefDualP2_x105a0:
    /*000105a0*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*000105a4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*000105a8*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*000105ac*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*000105b0*/ MOVW        R2, #1462                   @ 0x5b6 
    /*000105b4*/ LDR         R1, [PC, #468]              @ 0x0000000000010790 
    /*000105b8*/ BL          0x00000000000105B8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000105bc*/ B           H264eSetSlcHdrRefDualP2_x100a0
    H264eSetSlcHdrRefDualP2_x105c0:
    /*000105c0*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*000105c4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*000105c8*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*000105cc*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*000105d0*/ MOVW        R2, #1407                   @ 0x57f 
    /*000105d4*/ LDR         R1, [PC, #436]              @ 0x0000000000010790 
    /*000105d8*/ BL          0x00000000000105D8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000105dc*/ B           H264eSetSlcHdrRefDualP2_x10304
    H264eSetSlcHdrRefDualP2_x105e0:
    /*000105e0*/ LDR         R3, [R4, #2576]             @ 0xa10 
    /*000105e4*/ CMP         R2, #0 
    /*000105e8*/ STR         R2, [R4, #2876]             @ 0xb3c 
    /*000105ec*/ STR         R3, [R4, #2880]             @ 0xb40 
    /*000105f0*/ BEQ         H264eSetSlcHdrRefDualP2_x1076c
    H264eSetSlcHdrRefDualP2_x105f4:
    /*000105f4*/ CMP         R3, #0 
    /*000105f8*/ BEQ         H264eSetSlcHdrRefDualP2_x10728
    H264eSetSlcHdrRefDualP2_x105fc:
    /*000105fc*/ MOV         R3, #1 
    /*00010600*/ MOV         R2, #0 
    /*00010604*/ STR         R3, [R5, #1928]             @ 0x788 
    /*00010608*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*0001060c*/ STR         R2, [R5, #1936]             @ 0x790 
    /*00010610*/ B           H264eSetSlcHdrRefDualP2_x10034
    H264eSetSlcHdrRefDualP2_x10614:
    /*00010614*/ LDR         R3, [R4, #2572]             @ 0xa0c 
    /*00010618*/ STR         R0, [R4, #1704]             @ 0x6a8 
    /*0001061c*/ CMP         R3, #0 
    /*00010620*/ STR         R1, [R4, #2880]             @ 0xb40 
    /*00010624*/ STR         R3, [R4, #2876]             @ 0xb3c 
    /*00010628*/ BNE         H264eSetSlcHdrRefDualP2_x1045c
    /*0001062c*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*00010630*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*00010634*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*00010638*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0001063c*/ MOVW        R2, #1183                   @ 0x49f 
    /*00010640*/ LDR         R1, [PC, #328]              @ 0x0000000000010790 
    /*00010644*/ BL          0x0000000000010644          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010648*/ B           H264eSetSlcHdrRefDualP2_x1045c
    H264eSetSlcHdrRefDualP2_x1064c:
    /*0001064c*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*00010650*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*00010654*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*00010658*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0001065c*/ MOVW        R2, #1414                   @ 0x586 
    /*00010660*/ LDR         R1, [PC, #296]              @ 0x0000000000010790 
    /*00010664*/ BL          0x0000000000010664          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010668*/ B           H264eSetSlcHdrRefDualP2_x10344
    H264eSetSlcHdrRefDualP2_x1066c:
    /*0001066c*/ STR         R3, [R4, #1704]             @ 0x6a8 
    /*00010670*/ STR         IP, [R4, #900]              @ 0x384 
    /*00010674*/ STR         R3, [R4, #896]              @ 0x380 
    /*00010678*/ LDR         R2, [R5, #992]              @ 0x3e0 
    /*0001067c*/ STR         IP, [R2, #360]              @ 0x168 
    /*00010680*/ B           H264eSetSlcHdrRefDualP2_x10254
    H264eSetSlcHdrRefDualP2_x10684:
    /*00010684*/ STR         R1, [R4, #1704]             @ 0x6a8 
    /*00010688*/ STR         R1, [R4, #900]              @ 0x384 
    /*0001068c*/ STR         R1, [R4, #896]              @ 0x380 
    /*00010690*/ STR         R1, [R4, #2876]             @ 0xb3c 
    /*00010694*/ STR         R1, [R4, #2880]             @ 0xb40 
    /*00010698*/ STR         R1, [R5, #1928]             @ 0x788 
    /*0001069c*/ B           H264eSetSlcHdrRefDualP2_x10034
    H264eSetSlcHdrRefDualP2_x106a0:
    /*000106a0*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*000106a4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*000106a8*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*000106ac*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*000106b0*/ MOVW        R2, #1439                   @ 0x59f 
    /*000106b4*/ LDR         R1, [PC, #212]              @ 0x0000000000010790 
    /*000106b8*/ BL          0x00000000000106B8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000106bc*/ LDR         R3, [R4, #2880]             @ 0xb40 
    /*000106c0*/ B           H264eSetSlcHdrRefDualP2_x104f4
    H264eSetSlcHdrRefDualP2_x106c4:
    /*000106c4*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c4c] 
    /*000106c8*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*000106cc*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c4c] 
    /*000106d0*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*000106d4*/ MOVW        R2, #1195                   @ 0x4ab 
    /*000106d8*/ LDR         R1, [PC, #176]              @ 0x0000000000010790 
    /*000106dc*/ BL          0x00000000000106DC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000106e0*/ B           H264eSetSlcHdrRefDualP2_x10128
    H264eSetSlcHdrRefDualP2_x106e4:
    /*000106e4*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*000106e8*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*000106ec*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*000106f0*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*000106f4*/ MOVW        R2, #1194                   @ 0x4aa 
    /*000106f8*/ LDR         R1, [PC, #144]              @ 0x0000000000010790 
    /*000106fc*/ BL          0x00000000000106FC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010700*/ LDR         R3, [R4, #2880]             @ 0xb40 
    /*00010704*/ B           H264eSetSlcHdrRefDualP2_x10120
    H264eSetSlcHdrRefDualP2_x10708:
    /*00010708*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0001070c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*00010710*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*00010714*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*00010718*/ MOVW        R2, #1263                   @ 0x4ef 
    /*0001071c*/ LDR         R1, [PC, #108]              @ 0x0000000000010790 
    /*00010720*/ BL          0x0000000000010720          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010724*/ B           H264eSetSlcHdrRefDualP2_x1045c
    H264eSetSlcHdrRefDualP2_x10728:
    /*00010728*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c4c] 
    /*0001072c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*00010730*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c4c] 
    /*00010734*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*00010738*/ MOVW        R2, #1272                   @ 0x4f8 
    /*0001073c*/ LDR         R1, [PC, #76]               @ 0x0000000000010790 
    /*00010740*/ BL          0x0000000000010740          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010744*/ B           H264eSetSlcHdrRefDualP2_x105fc
    H264eSetSlcHdrRefDualP2_x10748:
    /*00010748*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*0001074c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*00010750*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*00010754*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*00010758*/ MOVW        R2, #1249                   @ 0x4e1 
    /*0001075c*/ LDR         R1, [PC, #44]               @ 0x0000000000010790 
    /*00010760*/ BL          0x0000000000010760          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010764*/ LDR         R3, [R4, #2880]             @ 0xb40 
    /*00010768*/ B           H264eSetSlcHdrRefDualP2_x10564
    H264eSetSlcHdrRefDualP2_x1076c:
    /*0001076c*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c28] 
    /*00010770*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*00010774*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c28] 
    /*00010778*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0001077c*/ MOVW        R2, #1271                   @ 0x4f7 
    /*00010780*/ LDR         R1, [PC, #8]                @ 0x0000000000010790 
    /*00010784*/ BL          0x0000000000010784          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010788*/ LDR         R3, [R4, #2880]             @ 0xb40 
    /*0001078c*/ B           H264eSetSlcHdrRefDualP2_x105f4
    /*00010790*/ ANDEQ       R0, R0, R4, LSL #17 
FUNC_END H264eSetSlcHdrRefDualP2


FUNC_BEGIN H264eSlcHdrMarkReorder
    /*00010794*/ PUSH        {R4, R5, LR} 
    /*00010798*/ ADD         R5, R0, #12288              @ 0x3000 
    /*0001079c*/ SUB         SP, SP, #12 
    /*000107a0*/ MOV         R4, R0 
    /*000107a4*/ LDR         R3, [R5, #2084]             @ 0x824 
    /*000107a8*/ CMP         R3, #3 
    /*000107ac*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*000107b0*/ B           H264eSlcHdrMarkReorder_x1091c
    /*000107b4*/ ANDEQ       R0, R1, IP, ROR R8 
    /*000107b8*/ ANDEQ       R0, R1, R0, LSR #16 
    /*000107bc*/ ANDEQ       R0, R1, R4, ASR #15 
    /*000107c0*/ ANDEQ       R0, R1, R4, ASR #15 
    /*000107c4*/ LDR         R3, [R5, #1988]             @ 0x7c4 
    /*000107c8*/ SUB         R3, R3, #4 
    /*000107cc*/ CMP         R3, #1 
    /*000107d0*/ ADD         R3, R0, #4096               @ 0x1000 
    /*000107d4*/ MOVLS       R2, #0 
    /*000107d8*/ STRLS       R2, [R3, #3680]             @ 0xe60 
    /*000107dc*/ STRLS       R2, [R3, #3664]             @ 0xe50 
    /*000107e0*/ BLS         H264eSlcHdrMarkReorder_x10814
    /*000107e4*/ LDR         IP, [R3, #3664]             @ 0xe50 
    /*000107e8*/ LDR         LR, [R3, #3636]             @ 0xe34 
    /*000107ec*/ LDR         R2, [R3, #3680]             @ 0xe60 
    /*000107f0*/ ADD         R0, IP, #1 
    /*000107f4*/ CMP         R0, LR 
    /*000107f8*/ STR         IP, [R3, #3688]             @ 0xe68 
    /*000107fc*/ STR         R0, [R3, #3664]             @ 0xe50 
    /*00010800*/ ADD         IP, R2, #1 
    /*00010804*/ STR         R2, [R3, #3684]             @ 0xe64 
    /*00010808*/ MOVCS       R2, #0 
    /*0001080c*/ STR         IP, [R3, #3680]             @ 0xe60 
    /*00010810*/ STRCS       R2, [R3, #3664]             @ 0xe50 
    H264eSlcHdrMarkReorder_x10814:
    /*00010814*/ MOV         R0, R4 
    /*00010818*/ BL          0x0000000000010818          @ H264eSetSlcHdrRefBg [R_ARM_CALL: .text+0xf554] 
    /*0001081c*/ B           H264eSlcHdrMarkReorder_x108d4
    /*00010820*/ LDR         R3, [R5, #1988]             @ 0x7c4 
    /*00010824*/ SUB         R3, R3, #4 
    /*00010828*/ CMP         R3, #1 
    /*0001082c*/ ADD         R3, R0, #4096               @ 0x1000 
    /*00010830*/ MOVLS       R2, #0 
    /*00010834*/ STRLS       R2, [R3, #3680]             @ 0xe60 
    /*00010838*/ STRLS       R2, [R3, #3664]             @ 0xe50 
    /*0001083c*/ BLS         H264eSlcHdrMarkReorder_x10870
    /*00010840*/ LDR         R0, [R3, #3664]             @ 0xe50 
    /*00010844*/ LDR         IP, [R3, #3636]             @ 0xe34 
    /*00010848*/ LDR         R2, [R3, #3680]             @ 0xe60 
    /*0001084c*/ ADD         R1, R0, #1 
    /*00010850*/ CMP         R1, IP 
    /*00010854*/ STR         R0, [R3, #3688]             @ 0xe68 
    /*00010858*/ STR         R1, [R3, #3664]             @ 0xe50 
    /*0001085c*/ ADD         R0, R2, #1 
    /*00010860*/ STR         R2, [R3, #3684]             @ 0xe64 
    /*00010864*/ MOVCS       R2, #0 
    /*00010868*/ STR         R0, [R3, #3680]             @ 0xe60 
    /*0001086c*/ STRCS       R2, [R3, #3664]             @ 0xe50 
    H264eSlcHdrMarkReorder_x10870:
    /*00010870*/ MOV         R0, R4 
    /*00010874*/ BL          0x0000000000010874          @ H264eSetSlcHdrRefDualP2 [R_ARM_CALL: .text+0xff14] 
    /*00010878*/ B           H264eSlcHdrMarkReorder_x108d4
    /*0001087c*/ LDR         R3, [R5, #1988]             @ 0x7c4 
    /*00010880*/ SUB         R3, R3, #4 
    /*00010884*/ CMP         R3, #1 
    /*00010888*/ ADD         R3, R0, #4096               @ 0x1000 
    /*0001088c*/ MOVLS       R2, #0 
    /*00010890*/ STRLS       R2, [R3, #3680]             @ 0xe60 
    /*00010894*/ STRLS       R2, [R3, #3664]             @ 0xe50 
    /*00010898*/ BLS         H264eSlcHdrMarkReorder_x108cc
    /*0001089c*/ LDR         R0, [R3, #3664]             @ 0xe50 
    /*000108a0*/ LDR         IP, [R3, #3636]             @ 0xe34 
    /*000108a4*/ LDR         R2, [R3, #3680]             @ 0xe60 
    /*000108a8*/ ADD         R1, R0, #1 
    /*000108ac*/ CMP         R1, IP 
    /*000108b0*/ STR         R0, [R3, #3688]             @ 0xe68 
    /*000108b4*/ STR         R1, [R3, #3664]             @ 0xe50 
    /*000108b8*/ ADD         R0, R2, #1 
    /*000108bc*/ STR         R2, [R3, #3684]             @ 0xe64 
    /*000108c0*/ MOVCS       R2, #0 
    /*000108c4*/ STR         R0, [R3, #3680]             @ 0xe60 
    /*000108c8*/ STRCS       R2, [R3, #3664]             @ 0xe50 
    H264eSlcHdrMarkReorder_x108cc:
    /*000108cc*/ MOV         R0, R4 
    /*000108d0*/ BL          0x00000000000108D0          @ H264eSetSlcHdrRefNormal [R_ARM_CALL: .text+0xeeb8] 
    H264eSlcHdrMarkReorder_x108d4:
    /*000108d4*/ ADD         R0, R4, #8192               @ 0x2000 
    /*000108d8*/ MOV         R3, #1 
    /*000108dc*/ STR         R3, [R0, #76]               @ 0x4c 
    /*000108e0*/ LDR         R3, [R5, #1988]             @ 0x7c4 
    /*000108e4*/ CMP         R3, #10 
    /*000108e8*/ MOVEQ       R3, #0 
    /*000108ec*/ STREQ       R3, [R0, #80]               @ 0x50 
    /*000108f0*/ BEQ         H264eSlcHdrMarkReorder_x10904
    /*000108f4*/ LDR         R3, [R0, #2880]             @ 0xb40 
    /*000108f8*/ ADDS        R3, R3, #0 
    /*000108fc*/ MOVNE       R3, #1 
    /*00010900*/ STR         R3, [R0, #80]               @ 0x50 
    H264eSlcHdrMarkReorder_x10904:
    /*00010904*/ LDR         R3, [R0, #1704]             @ 0x6a8 
    /*00010908*/ MOV         R2, #0 
    /*0001090c*/ STR         R2, [R0, #84]               @ 0x54 
    /*00010910*/ STR         R3, [R0, #2244]             @ 0x8c4 
    /*00010914*/ ADD         SP, SP, #12 
    /*00010918*/ POP         {R4, R5, PC} 
    H264eSlcHdrMarkReorder_x1091c:
    /*0001091c*/ STR         R3, [SP, #4] 
    /*00010920*/ MOV         R1, #10 
    /*00010924*/ MOVW        R3, #1891                   @ 0x763 
    /*00010928*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c94] 
    /*0001092c*/ STR         R3, [SP] 
    /*00010930*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c94] 
    /*00010934*/ LDR         R3, [PC, #36]               @ 0x0000000000010960 
    /*00010938*/ MOV         R0, #3 
    /*0001093c*/ BL          0x000000000001093C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010940*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cd0] 
    /*00010944*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*00010948*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cd0] 
    /*0001094c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*00010950*/ MOVW        R2, #1892                   @ 0x764 
    /*00010954*/ LDR         R1, [PC, #4]                @ 0x0000000000010960 
    /*00010958*/ BL          0x0000000000010958          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001095c*/ B           H264eSlcHdrMarkReorder_x108d4
    /*00010960*/ MULEQ       R0, IP, R8 
FUNC_END H264eSlcHdrMarkReorder


FUNC_BEGIN h264eEncrypt
    /*00010964*/ ADD         R2, R1, R2 
    /*00010968*/ UXTB        R3, R0 
    /*0001096c*/ ANDS        R2, R2, #31 
    /*00010970*/ ORR         R3, R3, R3, LSL #8 
    /*00010974*/ BEQ         h264eEncrypt_x109bc
    /*00010978*/ MOV         IP, #0 
    /*0001097c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    h264eEncrypt_x10980:
    /*00010980*/ LSR         R0, R3, #6 
    /*00010984*/ EOR         R0, R0, R3, LSR #15 
    /*00010988*/ LSR         LR, R3, #1 
    /*0001098c*/ EOR         R0, R0, R3 
    /*00010990*/ ADD         IP, IP, #1 
    /*00010994*/ EOR         R0, R0, R3, LSR #4 
    /*00010998*/ CMP         R2, IP 
    /*0001099c*/ EOR         R0, R0, R3, LSR #2 
    /*000109a0*/ EOR         R0, R0, LR 
    /*000109a4*/ LSL         R0, R0, #15 
    /*000109a8*/ UXTH        R0, R0 
    /*000109ac*/ ORR         R3, LR, R0 
    /*000109b0*/ BNE         h264eEncrypt_x10980
    /*000109b4*/ MOV         R0, R3 
    /*000109b8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    h264eEncrypt_x109bc:
    /*000109bc*/ MOV         R0, R3 
    /*000109c0*/ BX          LR 
FUNC_END h264eEncrypt


FUNC_BEGIN H264eWrEncryptSEI
    /*000109c4*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000109c8*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000109cc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000109d0*/ MOV         R6, R0 
    /*000109d4*/ LDR         R5, [R3, R0, LSL #2] 
    /*000109d8*/ SUB         SP, SP, #144                @ 0x90 
    /*000109dc*/ LDR         R4, [R5, #1060]             @ 0x424 
    /*000109e0*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*000109e4*/ LDR         R1, [R4, #164]              @ 0xa4 
    /*000109e8*/ LDR         R2, [R4, #172]              @ 0xac 
    /*000109ec*/ LDR         R3, [R3] 
    /*000109f0*/ LDR         R1, [R1] 
    /*000109f4*/ LDR         R0, [R4, #168]              @ 0xa8 
    /*000109f8*/ LDR         R2, [R2] 
    /*000109fc*/ CMP         R3, R1 
    /*00010a00*/ LDR         LR, [R0] 
    /*00010a04*/ MOVCC       R0, #0 
    /*00010a08*/ MOVCS       R0, #1 
    /*00010a0c*/ CMP         R3, R2 
    /*00010a10*/ MOVHI       R3, #0 
    /*00010a14*/ MOVLS       R3, #1 
    /*00010a18*/ CMP         LR, R2 
    /*00010a1c*/ AND         IP, R0, R3 
    /*00010a20*/ MOVCC       R2, #0 
    /*00010a24*/ MOVCS       R2, #1 
    /*00010a28*/ TST         IP, R2 
    /*00010a2c*/ BNE         H264eWrEncryptSEI_x10a5c
    /*00010a30*/ CMP         R1, LR 
    /*00010a34*/ MOVCC       R1, #0 
    /*00010a38*/ MOVCS       R1, #1 
    /*00010a3c*/ TST         IP, R1 
    /*00010a40*/ BNE         H264eWrEncryptSEI_x10a5c
    /*00010a44*/ AND         R0, R0, R2 
    /*00010a48*/ TST         R1, R0 
    /*00010a4c*/ BNE         H264eWrEncryptSEI_x10a5c
    /*00010a50*/ AND         R3, R3, R2 
    /*00010a54*/ TST         R1, R3 
    /*00010a58*/ BEQ         H264eWrEncryptSEI_x10e5c
    H264eWrEncryptSEI_x10a5c:
    /*00010a5c*/ ADD         R7, R5, #4096               @ 0x1000 
    /*00010a60*/ MOVW        R3, #58630                  @ 0xe506 
    /*00010a64*/ MOVT        R3, #1 
    /*00010a68*/ MOV         R0, #256                    @ 0x100 
    /*00010a6c*/ LDR         R1, [R7, #3608]             @ 0xe18 
    /*00010a70*/ MOVT        R0, #1765                   @ 0x6e5 
    /*00010a74*/ LDR         R2, [R7, #3816]             @ 0xee8 
    /*00010a78*/ MOV         R9, #128                    @ 0x80 
    /*00010a7c*/ ADD         IP, R1, #2 
    /*00010a80*/ STR         IP, [R7, #3608]             @ 0xe18 
    /*00010a84*/ ADD         R3, R3, R1, LSL #24 
    /*00010a88*/ LDR         R1, [R7, #3812]             @ 0xee4 
    /*00010a8c*/ MOV         IP, #16777216               @ 0x1000000 
    /*00010a90*/ STR         R3, [SP, #84]               @ 0x54 
    /*00010a94*/ ORR         R0, R0, R3, LSR #24 
    /*00010a98*/ STR         IP, [SP, #80]               @ 0x50 
    /*00010a9c*/ STR         R9, [SP, #88]               @ 0x58 
    /*00010aa0*/ BL          0x0000000000010AA0          @ h264eEncrypt [R_ARM_CALL: .text+0x10964] 
    /*00010aa4*/ ADD         R8, SP, #16 
    /*00010aa8*/ MOV         R1, R9 
    /*00010aac*/ MOV         R3, #6 
    /*00010ab0*/ MOV         R2, #55                     @ 0x37 
    /*00010ab4*/ STR         R0, [R7, #3612]             @ 0xe1c 
    /*00010ab8*/ MOV         R0, R6 
    /*00010abc*/ LDR         IP, [R5, #1196]             @ 0x4ac 
    /*00010ac0*/ LDRD        R6, [IP, #240]              @ 0xf0 
    /*00010ac4*/ STR         R8, [SP] 
    /*00010ac8*/ STRD        R6, [SP, #8] 
    /*00010acc*/ BL          0x0000000000010ACC          @ H264eInitNaluHead [R_ARM_CALL: .text+0x1350] 
    /*00010ad0*/ LDR         R2, [R4, #168]              @ 0xa8 
    /*00010ad4*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*00010ad8*/ MOV         R1, #1 
    /*00010adc*/ STRB        R1, [SP, #26] 
    /*00010ae0*/ LDR         IP, [R2] 
    /*00010ae4*/ LDR         R3, [R3] 
    /*00010ae8*/ CMP         R3, IP 
    /*00010aec*/ SUBHI       R3, R3, IP 
    /*00010af0*/ LDRLS       R1, [R4, #12] 
    /*00010af4*/ LDRLS       R2, [R4, #8] 
    /*00010af8*/ SUBLS       R3, R3, R1 
    /*00010afc*/ LDRHI       R2, [R4, #12] 
    /*00010b00*/ ADDLS       R3, R3, R2 
    /*00010b04*/ SUBLS       R3, R3, IP 
    /*00010b08*/ SUBHI       R3, R3, R2 
    /*00010b0c*/ CMP         R3, #63                     @ 0x3f 
    /*00010b10*/ BLS         H264eWrEncryptSEI_x10f48
    /*00010b14*/ LDR         R3, [R4, #8] 
    /*00010b18*/ ADD         LR, IP, #64                 @ 0x40 
    /*00010b1c*/ CMP         LR, R3 
    /*00010b20*/ BCS         H264eWrEncryptSEI_x10d0c
    /*00010b24*/ LDR         R2, [R4, #176]              @ 0xb0 
    /*00010b28*/ MVN         R3, #0 
    /*00010b2c*/ MOV         R7, #0 
    /*00010b30*/ MOV         R9, #7 
    /*00010b34*/ ADD         IP, R2, IP 
    /*00010b38*/ ADD         R6, IP, #64                 @ 0x40 
    H264eWrEncryptSEI_x10b3c:
    /*00010b3c*/ SUB         IP, IP, #8 
    /*00010b40*/ MOV         R2, R9 
    /*00010b44*/ MOV         SL, R8 
    H264eWrEncryptSEI_x10b48:
    /*00010b48*/ SUB         R2, R2, #1 
    /*00010b4c*/ LDRD        R0, [SL], #8 
    /*00010b50*/ CMN         R2, #1 
    /*00010b54*/ STRD        R0, [IP, #8]! 
    /*00010b58*/ BNE         H264eWrEncryptSEI_x10b48
    /*00010b5c*/ ADD         R9, R9, #1 
    /*00010b60*/ ADD         R8, R8, R9, LSL #3 
    H264eWrEncryptSEI_x10b64:
    /*00010b64*/ CMP         R7, #0 
    /*00010b68*/ SUBNE       R2, R6, #8 
    /*00010b6c*/ BEQ         H264eWrEncryptSEI_x10b84
    H264eWrEncryptSEI_x10b70:
    /*00010b70*/ SUB         R3, R3, #1 
    /*00010b74*/ LDRD        R0, [R8], #8 
    /*00010b78*/ CMN         R3, #1 
    /*00010b7c*/ STRD        R0, [R2, #8]! 
    /*00010b80*/ BNE         H264eWrEncryptSEI_x10b70
    H264eWrEncryptSEI_x10b84:
    /*00010b84*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00010b88*/ STR         LR, [R3] 
    H264eWrEncryptSEI_x10b8c:
    /*00010b8c*/ LDR         R2, [R4, #168]              @ 0xa8 
    /*00010b90*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*00010b94*/ LDR         R0, [R2] 
    /*00010b98*/ LDR         R3, [R3] 
    /*00010b9c*/ CMP         R3, R0 
    /*00010ba0*/ SUBHI       R3, R3, R0 
    /*00010ba4*/ LDRLS       R1, [R4, #12] 
    /*00010ba8*/ LDRLS       R2, [R4, #8] 
    /*00010bac*/ SUBLS       R3, R3, R1 
    /*00010bb0*/ LDRHI       R2, [R4, #12] 
    /*00010bb4*/ ADDLS       R3, R3, R2 
    /*00010bb8*/ SUBLS       R3, R3, R0 
    /*00010bbc*/ SUBHI       R3, R3, R2 
    /*00010bc0*/ CMP         R3, #63                     @ 0x3f 
    /*00010bc4*/ BLS         H264eWrEncryptSEI_x10f30
    /*00010bc8*/ LDR         R3, [R4, #8] 
    /*00010bcc*/ ADD         IP, R0, #64                 @ 0x40 
    /*00010bd0*/ CMP         IP, R3 
    /*00010bd4*/ BCC         H264eWrEncryptSEI_x10d68
    /*00010bd8*/ SUB         R9, R3, R0 
    /*00010bdc*/ LDR         LR, [R4, #176]              @ 0xb0 
    /*00010be0*/ RSB         IP, R9, #64                 @ 0x40 
    /*00010be4*/ LSR         R9, R9, #3 
    /*00010be8*/ ADD         R0, LR, R0 
    /*00010bec*/ CMP         R9, #0 
    /*00010bf0*/ LSR         R8, IP, #3 
    /*00010bf4*/ SUB         R9, R9, #1 
    /*00010bf8*/ ADDEQ       R2, SP, #80                 @ 0x50 
    /*00010bfc*/ SUBEQ       R3, R8, #1 
    /*00010c00*/ SUBNE       R3, R8, #1 
    /*00010c04*/ BEQ         H264eWrEncryptSEI_x10c34
    H264eWrEncryptSEI_x10c08:
    /*00010c08*/ ADD         R2, SP, #80                 @ 0x50 
    /*00010c0c*/ MOV         R1, R9 
    H264eWrEncryptSEI_x10c10:
    /*00010c10*/ LDRD        R6, [R2] 
    /*00010c14*/ SUB         R1, R1, #1 
    /*00010c18*/ CMN         R1, #1 
    /*00010c1c*/ ADD         R2, R2, #8 
    /*00010c20*/ STRD        R6, [R0], #8 
    /*00010c24*/ BNE         H264eWrEncryptSEI_x10c10
    /*00010c28*/ ADD         R2, R9, #1 
    /*00010c2c*/ ADD         R1, SP, #80                 @ 0x50 
    /*00010c30*/ ADD         R2, R1, R2, LSL #3 
    H264eWrEncryptSEI_x10c34:
    /*00010c34*/ CMP         R8, #0 
    /*00010c38*/ SUBNE       LR, LR, #8 
    /*00010c3c*/ BEQ         H264eWrEncryptSEI_x10c54
    H264eWrEncryptSEI_x10c40:
    /*00010c40*/ SUB         R3, R3, #1 
    /*00010c44*/ LDRD        R0, [R2], #8 
    /*00010c48*/ CMN         R3, #1 
    /*00010c4c*/ STRD        R0, [LR, #8]! 
    /*00010c50*/ BNE         H264eWrEncryptSEI_x10c40
    H264eWrEncryptSEI_x10c54:
    /*00010c54*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00010c58*/ STR         IP, [R3] 
    H264eWrEncryptSEI_x10c5c:
    /*00010c5c*/ LDR         R0, [R5, #720]              @ 0x2d0 
    /*00010c60*/ ADD         R3, R0, #9 
    /*00010c64*/ CMP         R3, #384                    @ 0x180 
    /*00010c68*/ BHI         H264eWrEncryptSEI_x10d38
    /*00010c6c*/ ADD         R0, R5, R0 
    /*00010c70*/ MOV         R2, #9 
    /*00010c74*/ ADD         R1, SP, #80                 @ 0x50 
    /*00010c78*/ BL          0x0000000000010C78          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00010c7c*/ LDR         R3, [R5, #720]              @ 0x2d0 
    /*00010c80*/ ADD         R3, R3, #9 
    /*00010c84*/ STR         R3, [R5, #720]              @ 0x2d0 
    H264eWrEncryptSEI_x10c88:
    /*00010c88*/ LDR         R1, [R4, #160]              @ 0xa0 
    /*00010c8c*/ LDR         R2, [R4, #164]              @ 0xa4 
    /*00010c90*/ LDR         R3, [R4, #172]              @ 0xac 
    /*00010c94*/ LDR         R1, [R1] 
    /*00010c98*/ LDR         R2, [R2] 
    /*00010c9c*/ LDR         R0, [R4, #168]              @ 0xa8 
    /*00010ca0*/ LDR         R3, [R3] 
    /*00010ca4*/ CMP         R1, R2 
    /*00010ca8*/ LDR         LR, [R0] 
    /*00010cac*/ MOVCC       R0, #0 
    /*00010cb0*/ MOVCS       R0, #1 
    /*00010cb4*/ CMP         R1, R3 
    /*00010cb8*/ MOVHI       R1, #0 
    /*00010cbc*/ MOVLS       R1, #1 
    /*00010cc0*/ CMP         LR, R3 
    /*00010cc4*/ AND         IP, R0, R1 
    /*00010cc8*/ MOVCC       R3, #0 
    /*00010ccc*/ MOVCS       R3, #1 
    /*00010cd0*/ TST         R3, IP 
    /*00010cd4*/ BNE         H264eWrEncryptSEI_x10d04
    /*00010cd8*/ CMP         R2, LR 
    /*00010cdc*/ MOVCC       R2, #0 
    /*00010ce0*/ MOVCS       R2, #1 
    /*00010ce4*/ TST         IP, R2 
    /*00010ce8*/ BNE         H264eWrEncryptSEI_x10d04
    /*00010cec*/ AND         R0, R0, R3 
    /*00010cf0*/ TST         R2, R0 
    /*00010cf4*/ BNE         H264eWrEncryptSEI_x10d04
    /*00010cf8*/ AND         R3, R3, R1 
    /*00010cfc*/ TST         R2, R3 
    /*00010d00*/ BEQ         H264eWrEncryptSEI_x10d84
    H264eWrEncryptSEI_x10d04:
    /*00010d04*/ ADD         SP, SP, #144                @ 0x90 
    /*00010d08*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264eWrEncryptSEI_x10d0c:
    /*00010d0c*/ SUB         R9, R3, IP 
    /*00010d10*/ LDR         R6, [R4, #176]              @ 0xb0 
    /*00010d14*/ RSB         LR, R9, #64                 @ 0x40 
    /*00010d18*/ LSR         R9, R9, #3 
    /*00010d1c*/ ADD         IP, R6, IP 
    /*00010d20*/ CMP         R9, #0 
    /*00010d24*/ LSR         R7, LR, #3 
    /*00010d28*/ SUB         R3, R7, #1 
    /*00010d2c*/ SUB         R9, R9, #1 
    /*00010d30*/ BNE         H264eWrEncryptSEI_x10b3c
    /*00010d34*/ B           H264eWrEncryptSEI_x10b64
    H264eWrEncryptSEI_x10d38:
    /*00010d38*/ STR         R3, [SP, #8] 
    /*00010d3c*/ MOV         R2, #162                    @ 0xa2 
    /*00010d40*/ MOV         R3, #384                    @ 0x180 
    /*00010d44*/ MOV         R1, #10 
    /*00010d48*/ STM         SP, {R2, R3} 
    /*00010d4c*/ MOV         R0, #3 
    /*00010d50*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x8b4] 
    /*00010d54*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d10] 
    /*00010d58*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x8b4] 
    /*00010d5c*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d10] 
    /*00010d60*/ BL          0x0000000000010D60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010d64*/ B           H264eWrEncryptSEI_x10c88
    H264eWrEncryptSEI_x10d68:
    /*00010d68*/ LDR         R2, [R4, #176]              @ 0xb0 
    /*00010d6c*/ MVN         R3, #0 
    /*00010d70*/ MOV         R8, #0 
    /*00010d74*/ MOV         R9, #7 
    /*00010d78*/ ADD         R0, R2, R0 
    /*00010d7c*/ ADD         LR, R0, #64                 @ 0x40 
    /*00010d80*/ B           H264eWrEncryptSEI_x10c08
    H264eWrEncryptSEI_x10d84:
    /*00010d84*/ LDR         IP, [R4, #64]               @ 0x40 
    /*00010d88*/ MOV         R2, #169                    @ 0xa9 
    /*00010d8c*/ LDR         R3, [R4, #128]              @ 0x80 
    /*00010d90*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x8b4] 
    /*00010d94*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d50] 
    /*00010d98*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x8b4] 
    /*00010d9c*/ STR         IP, [SP, #8] 
    /*00010da0*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d50] 
    /*00010da4*/ LDR         IP, [R4, #32] 
    /*00010da8*/ STR         IP, [SP, #4] 
    /*00010dac*/ LDR         IP, [R4, #96]               @ 0x60 
    /*00010db0*/ STR         IP, [SP] 
    /*00010db4*/ BL          0x0000000000010DB4          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00010db8*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*00010dbc*/ LDR         R1, [R4, #164]              @ 0xa4 
    /*00010dc0*/ LDR         R2, [R4, #172]              @ 0xac 
    /*00010dc4*/ LDR         R3, [R3] 
    /*00010dc8*/ LDR         R1, [R1] 
    /*00010dcc*/ LDR         R0, [R4, #168]              @ 0xa8 
    /*00010dd0*/ LDR         R2, [R2] 
    /*00010dd4*/ CMP         R3, R1 
    /*00010dd8*/ LDR         LR, [R0] 
    /*00010ddc*/ MOVCC       R0, #0 
    /*00010de0*/ MOVCS       R0, #1 
    /*00010de4*/ CMP         R3, R2 
    /*00010de8*/ MOVHI       R3, #0 
    /*00010dec*/ MOVLS       R3, #1 
    /*00010df0*/ CMP         LR, R2 
    /*00010df4*/ AND         IP, R0, R3 
    /*00010df8*/ MOVCC       R2, #0 
    /*00010dfc*/ MOVCS       R2, #1 
    /*00010e00*/ TST         IP, R2 
    /*00010e04*/ BNE         H264eWrEncryptSEI_x10d04
    /*00010e08*/ CMP         R1, LR 
    /*00010e0c*/ MOVCC       R1, #0 
    /*00010e10*/ MOVCS       R1, #1 
    /*00010e14*/ TST         IP, R1 
    /*00010e18*/ BNE         H264eWrEncryptSEI_x10d04
    /*00010e1c*/ AND         R0, R0, R2 
    /*00010e20*/ TST         R1, R0 
    /*00010e24*/ BNE         H264eWrEncryptSEI_x10d04
    /*00010e28*/ AND         R3, R3, R2 
    /*00010e2c*/ TST         R1, R3 
    /*00010e30*/ BNE         H264eWrEncryptSEI_x10d04
    /*00010e34*/ MOV         R2, #178                    @ 0xb2 
    /*00010e38*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3da8] 
    /*00010e3c*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x8b4] 
    /*00010e40*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3da8] 
    /*00010e44*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x8b4] 
    /*00010e48*/ MOVW        R0, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*00010e4c*/ MOVT        R0, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*00010e50*/ BL          0x0000000000010E50          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010e54*/ ADD         SP, SP, #144                @ 0x90 
    /*00010e58*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264eWrEncryptSEI_x10e5c:
    /*00010e5c*/ LDR         IP, [R4, #64]               @ 0x40 
    /*00010e60*/ MOV         R2, #116                    @ 0x74 
    /*00010e64*/ LDR         R3, [R4, #128]              @ 0x80 
    /*00010e68*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x8b4] 
    /*00010e6c*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d50] 
    /*00010e70*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x8b4] 
    /*00010e74*/ STR         IP, [SP, #8] 
    /*00010e78*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d50] 
    /*00010e7c*/ LDR         IP, [R4, #32] 
    /*00010e80*/ STR         IP, [SP, #4] 
    /*00010e84*/ LDR         IP, [R4, #96]               @ 0x60 
    /*00010e88*/ STR         IP, [SP] 
    /*00010e8c*/ BL          0x0000000000010E8C          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00010e90*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*00010e94*/ LDR         R1, [R4, #164]              @ 0xa4 
    /*00010e98*/ LDR         R2, [R4, #172]              @ 0xac 
    /*00010e9c*/ LDR         R3, [R3] 
    /*00010ea0*/ LDR         R1, [R1] 
    /*00010ea4*/ LDR         R0, [R4, #168]              @ 0xa8 
    /*00010ea8*/ LDR         R2, [R2] 
    /*00010eac*/ CMP         R3, R1 
    /*00010eb0*/ LDR         LR, [R0] 
    /*00010eb4*/ MOVCC       R0, #0 
    /*00010eb8*/ MOVCS       R0, #1 
    /*00010ebc*/ CMP         R3, R2 
    /*00010ec0*/ MOVHI       R3, #0 
    /*00010ec4*/ MOVLS       R3, #1 
    /*00010ec8*/ CMP         LR, R2 
    /*00010ecc*/ AND         IP, R0, R3 
    /*00010ed0*/ MOVCC       R2, #0 
    /*00010ed4*/ MOVCS       R2, #1 
    /*00010ed8*/ TST         IP, R2 
    /*00010edc*/ BNE         H264eWrEncryptSEI_x10a5c
    /*00010ee0*/ CMP         R1, LR 
    /*00010ee4*/ MOVCC       R1, #0 
    /*00010ee8*/ MOVCS       R1, #1 
    /*00010eec*/ TST         IP, R1 
    /*00010ef0*/ BNE         H264eWrEncryptSEI_x10a5c
    /*00010ef4*/ AND         R0, R0, R2 
    /*00010ef8*/ TST         R1, R0 
    /*00010efc*/ BNE         H264eWrEncryptSEI_x10a5c
    /*00010f00*/ AND         R3, R3, R2 
    /*00010f04*/ TST         R1, R3 
    /*00010f08*/ BNE         H264eWrEncryptSEI_x10a5c
    /*00010f0c*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3da8] 
    /*00010f10*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x8b4] 
    /*00010f14*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3da8] 
    /*00010f18*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x8b4] 
    /*00010f1c*/ MOVW        R0, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc0] 
    /*00010f20*/ MOV         R2, #125                    @ 0x7d 
    /*00010f24*/ MOVT        R0, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc0] 
    /*00010f28*/ BL          0x0000000000010F28          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010f2c*/ B           H264eWrEncryptSEI_x10a5c
    H264eWrEncryptSEI_x10f30:
    /*00010f30*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cd4] 
    /*00010f34*/ MOV         R1, #18 
    /*00010f38*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cd4] 
    /*00010f3c*/ MOV         R0, #4 
    /*00010f40*/ BL          0x0000000000010F40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010f44*/ B           H264eWrEncryptSEI_x10c5c
    H264eWrEncryptSEI_x10f48:
    /*00010f48*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cd4] 
    /*00010f4c*/ MOV         R1, #18 
    /*00010f50*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cd4] 
    /*00010f54*/ MOV         R0, #4 
    /*00010f58*/ BL          0x0000000000010F58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010f5c*/ B           H264eWrEncryptSEI_x10b8c
FUNC_END H264eWrEncryptSEI


FUNC_BEGIN H264eDpbInit
    /*00010f60*/ ADD         R1, R0, #192                @ 0xc0 
    /*00010f64*/ MOV         IP, R0 
    /*00010f68*/ PUSH        {R4, LR} 
    /*00010f6c*/ MOV         LR, #0 
    /*00010f70*/ ADD         R3, R0, #320                @ 0x140 
    /*00010f74*/ MOV         R2, R1 
    /*00010f78*/ MOV         R0, LR 
    /*00010f7c*/ MOV         R4, #17 
    /*00010f80*/ STR         IP, [IP, #608]              @ 0x260 
    /*00010f84*/ STR         LR, [IP, #616]              @ 0x268 
    /*00010f88*/ STR         R4, [IP, #612]              @ 0x264 
    /*00010f8c*/ STR         LR, [IP, #620]              @ 0x26c 
    /*00010f90*/ STR         LR, [IP, #624]              @ 0x270 
    H264eDpbInit_x10f94:
    /*00010f94*/ STR         R0, [R2, #4]! 
    /*00010f98*/ CMP         R2, R3 
    /*00010f9c*/ BNE         H264eDpbInit_x10f94
    /*00010fa0*/ ADD         R2, IP, #64                 @ 0x40 
    /*00010fa4*/ MOV         R0, #0 
    H264eDpbInit_x10fa8:
    /*00010fa8*/ STR         R0, [R2, #4]! 
    /*00010fac*/ CMP         R2, R1 
    /*00010fb0*/ BNE         H264eDpbInit_x10fa8
    /*00010fb4*/ ADD         R1, IP, #448                @ 0x1c0 
    /*00010fb8*/ MOV         R2, #0 
    /*00010fbc*/ MOV         R0, R1 
    H264eDpbInit_x10fc0:
    /*00010fc0*/ STR         R2, [R3, #4]! 
    /*00010fc4*/ CMP         R0, R3 
    /*00010fc8*/ STR         R2, [R1, #4]! 
    /*00010fcc*/ BNE         H264eDpbInit_x10fc0
    /*00010fd0*/ STR         R2, [IP, #592]              @ 0x250 
    /*00010fd4*/ MOV         R0, #0 
    /*00010fd8*/ STR         R2, [IP, #596]              @ 0x254 
    /*00010fdc*/ STR         R2, [IP, #600]              @ 0x258 
    /*00010fe0*/ STR         R2, [IP, #580]              @ 0x244 
    /*00010fe4*/ STR         R2, [IP, #584]              @ 0x248 
    /*00010fe8*/ POP         {R4, PC} 
FUNC_END H264eDpbInit


FUNC_BEGIN H264eDpbFlush
    /*00010fec*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00010ff0*/ MOV         R5, R0 
    /*00010ff4*/ LDR         R9, [R0, #624]              @ 0x270 
    /*00010ff8*/ SUB         SP, SP, #20 
    /*00010ffc*/ CMP         R9, #0 
    /*00011000*/ BLE         H264eDpbFlush_x1116c
    /*00011004*/ MOV         R4, #0 
    /*00011008*/ MOV         R8, R2 
    /*0001100c*/ MOVW        FP, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e1c] 
    /*00011010*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x8c8] 
    /*00011014*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*00011018*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x8c8] 
    /*0001101c*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*00011020*/ MOV         R7, R4 
    /*00011024*/ STR         R2, [SP, #12] 
    /*00011028*/ MOVT        FP, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e1c] 
    /*0001102c*/ STR         R3, [SP, #8] 
    /*00011030*/ MOV         R2, R9 
    /*00011034*/ B           H264eDpbFlush_x110a0
    H264eDpbFlush_x11038:
    /*00011038*/ MOV         R0, #1 
    /*0001103c*/ MOV         R6, #6 
    /*00011040*/ BL          0x0000000000011040          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011044*/ LDR         IP, [R4, #328]              @ 0x148 
    /*00011048*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*0001104c*/ STR         R6, [SP] 
    /*00011050*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00011054*/ MOV         R0, IP 
    /*00011058*/ BLX         R1 
    /*0001105c*/ MOV         SL, R0 
    /*00011060*/ MOV         R0, #1 
    /*00011064*/ BL          0x0000000000011064          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011068*/ LDR         IP, [R4, #348]              @ 0x15c 
    /*0001106c*/ ADD         R3, R4, #416                @ 0x1a0 
    /*00011070*/ LDRD        R2, [R3, #-8] 
    /*00011074*/ STR         R6, [SP] 
    /*00011078*/ LDR         R6, [R0, #64]               @ 0x40 
    /*0001107c*/ MOV         R0, IP 
    /*00011080*/ BLX         R6 
    /*00011084*/ ORR         R0, SL, R0 
    /*00011088*/ CMP         R0, #0 
    /*0001108c*/ BNE         H264eDpbFlush_x11124
    H264eDpbFlush_x11090:
    /*00011090*/ ADD         R7, R7, #1 
    /*00011094*/ CMP         R9, R7 
    /*00011098*/ BEQ         H264eDpbFlush_x1116c
    /*0001109c*/ LDR         R2, [R5, #624]              @ 0x270 
    H264eDpbFlush_x110a0:
    /*000110a0*/ CMP         R2, #0 
    /*000110a4*/ BLE         H264eDpbFlush_x11154
    /*000110a8*/ LDR         R3, [R5, #620]              @ 0x26c 
    /*000110ac*/ SUB         R2, R2, #1 
    /*000110b0*/ SUBS        R3, R3, #1 
    /*000110b4*/ LDRMI       R1, [R5, #612]              @ 0x264 
    /*000110b8*/ ADDMI       R3, R3, R1 
    /*000110bc*/ LDR         R1, [R5, #608]              @ 0x260 
    /*000110c0*/ LDR         R4, [R1, R3, LSL #2] 
    /*000110c4*/ STR         R2, [R5, #624]              @ 0x270 
    /*000110c8*/ STR         R3, [R5, #620]              @ 0x26c 
    H264eDpbFlush_x110cc:
    /*000110cc*/ CMP         R8, #1 
    /*000110d0*/ MOVW        R3, #65535                  @ 0xffff 
    /*000110d4*/ MOV         R2, #0 
    /*000110d8*/ STR         R3, [R4, #364]              @ 0x16c 
    /*000110dc*/ STR         R2, [R4, #356]              @ 0x164 
    /*000110e0*/ STR         R2, [R4, #360]              @ 0x168 
    /*000110e4*/ STR         R3, [R4, #368]              @ 0x170 
    /*000110e8*/ STR         R3, [R4, #376]              @ 0x178 
    /*000110ec*/ STR         R3, [R4, #372]              @ 0x174 
    /*000110f0*/ BNE         H264eDpbFlush_x11038
    /*000110f4*/ MOV         R0, R8 
    /*000110f8*/ BL          0x00000000000110F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000110fc*/ LDR         IP, [R4, #328]              @ 0x148 
    /*00011100*/ ADD         R3, R4, #416                @ 0x1a0 
    /*00011104*/ MOV         R1, #6 
    /*00011108*/ LDRD        R2, [R3, #-8] 
    /*0001110c*/ STR         R1, [SP] 
    /*00011110*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00011114*/ MOV         R0, IP 
    /*00011118*/ BLX         R1 
    /*0001111c*/ CMP         R0, #0 
    /*00011120*/ BEQ         H264eDpbFlush_x11090
    H264eDpbFlush_x11124:
    /*00011124*/ MOV         R6, R0 
    /*00011128*/ STR         R0, [SP] 
    /*0001112c*/ MOV         R1, #10 
    /*00011130*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x8c8] 
    /*00011134*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e00] 
    /*00011138*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x8c8] 
    /*0001113c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e00] 
    /*00011140*/ MOV         R0, #3 
    /*00011144*/ BL          0x0000000000011144          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011148*/ MOV         R0, R6 
    /*0001114c*/ ADD         SP, SP, #20 
    /*00011150*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eDpbFlush_x11154:
    /*00011154*/ MOV         R3, FP 
    /*00011158*/ MOV         R2, #67                     @ 0x43 
    /*0001115c*/ LDR         R1, [SP, #8] 
    /*00011160*/ LDR         R0, [SP, #12] 
    /*00011164*/ BL          0x0000000000011164          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011168*/ B           H264eDpbFlush_x110cc
    H264eDpbFlush_x1116c:
    /*0001116c*/ MOV         R3, #0 
    /*00011170*/ ADD         R1, R5, #192                @ 0xc0 
    /*00011174*/ MOV         R0, R3 
    /*00011178*/ STR         R3, [R5, #616]              @ 0x268 
    /*0001117c*/ STR         R3, [R5, #620]              @ 0x26c 
    /*00011180*/ MOV         R2, R1 
    /*00011184*/ STR         R3, [R5, #624]              @ 0x270 
    /*00011188*/ ADD         R3, R5, #320                @ 0x140 
    /*0001118c*/ MOV         IP, #17 
    /*00011190*/ STR         R5, [R5, #608]              @ 0x260 
    /*00011194*/ STR         IP, [R5, #612]              @ 0x264 
    H264eDpbFlush_x11198:
    /*00011198*/ STR         R0, [R2, #4]! 
    /*0001119c*/ CMP         R2, R3 
    /*000111a0*/ BNE         H264eDpbFlush_x11198
    /*000111a4*/ ADD         R2, R5, #64                 @ 0x40 
    /*000111a8*/ MOV         R0, #0 
    H264eDpbFlush_x111ac:
    /*000111ac*/ STR         R0, [R2, #4]! 
    /*000111b0*/ CMP         R2, R1 
    /*000111b4*/ BNE         H264eDpbFlush_x111ac
    /*000111b8*/ ADD         R1, R5, #448                @ 0x1c0 
    /*000111bc*/ MOV         R2, #0 
    /*000111c0*/ MOV         R0, R1 
    H264eDpbFlush_x111c4:
    /*000111c4*/ STR         R2, [R3, #4]! 
    /*000111c8*/ CMP         R0, R3 
    /*000111cc*/ STR         R2, [R1, #4]! 
    /*000111d0*/ BNE         H264eDpbFlush_x111c4
    /*000111d4*/ MOV         R6, #0 
    /*000111d8*/ STR         R2, [R5, #592]              @ 0x250 
    /*000111dc*/ MOV         R0, R6 
    /*000111e0*/ STR         R2, [R5, #596]              @ 0x254 
    /*000111e4*/ STR         R2, [R5, #600]              @ 0x258 
    /*000111e8*/ STR         R2, [R5, #580]              @ 0x244 
    /*000111ec*/ STR         R2, [R5, #584]              @ 0x248 
    /*000111f0*/ ADD         SP, SP, #20 
    /*000111f4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END H264eDpbFlush


FUNC_BEGIN mm_unmark_short_term_for_reference
    /*000111f8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000111fc*/ ADD         R7, R2, #1 
    /*00011200*/ LDR         R3, [R0, #592]              @ 0x250 
    /*00011204*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00011208*/ SUB         R7, R1, R7 
    /*0001120c*/ CMP         R3, #0 
    /*00011210*/ BLE         mm_unmark_short_term_for_reference_x11318
    /*00011214*/ MOV         R6, #0 
    /*00011218*/ MOVW        SL, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e74] 
    /*0001121c*/ MOVW        R9, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*00011220*/ STR         R1, [SP, #36]               @ 0x24 
    /*00011224*/ MOV         R8, R2 
    /*00011228*/ MOV         R5, R0 
    /*0001122c*/ LDR         FP, [PC, #264]              @ 0x000000000001133c 
    /*00011230*/ MOVT        SL, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e74] 
    /*00011234*/ MOVT        R9, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*00011238*/ MOV         R4, R6 
    /*0001123c*/ B           mm_unmark_short_term_for_reference_x1124c
    mm_unmark_short_term_for_reference_x11240:
    /*00011240*/ LDR         R3, [R5, #592]              @ 0x250 
    /*00011244*/ CMP         R3, R4 
    /*00011248*/ BLE         mm_unmark_short_term_for_reference_x112c8
    mm_unmark_short_term_for_reference_x1124c:
    /*0001124c*/ LDR         R3, [R5, #624]              @ 0x270 
    /*00011250*/ BIC         R2, R4, R4, ASR #31 
    /*00011254*/ CMP         R2, R3 
    /*00011258*/ BGE         mm_unmark_short_term_for_reference_x11278
    /*0001125c*/ LDR         R3, [R5, #616]              @ 0x268 
    /*00011260*/ LDR         R2, [R5, #612]              @ 0x264 
    /*00011264*/ ADD         R3, R4, R3 
    /*00011268*/ CMP         R3, R2 
    /*0001126c*/ SUBGE       R3, R3, R2 
    /*00011270*/ LDR         R2, [R5, #608]              @ 0x260 
    /*00011274*/ LDR         R6, [R2, R3, LSL #2] 
    mm_unmark_short_term_for_reference_x11278:
    /*00011278*/ CMP         R6, #0 
    /*0001127c*/ ADD         R4, R4, #1 
    /*00011280*/ BEQ         mm_unmark_short_term_for_reference_x11324
    mm_unmark_short_term_for_reference_x11284:
    /*00011284*/ LDR         R3, [R6, #356]              @ 0x164 
    /*00011288*/ CMP         R3, #3 
    /*0001128c*/ BNE         mm_unmark_short_term_for_reference_x11240
    /*00011290*/ LDR         R3, [R6, #360]              @ 0x168 
    /*00011294*/ CMP         R3, #2 
    /*00011298*/ BNE         mm_unmark_short_term_for_reference_x11240
    /*0001129c*/ LDR         R3, [R6, #372]              @ 0x174 
    /*000112a0*/ CMP         R7, R3 
    /*000112a4*/ BNE         mm_unmark_short_term_for_reference_x11240
    /*000112a8*/ MOVW        R3, #65535                  @ 0xffff 
    /*000112ac*/ MOV         R2, #0 
    /*000112b0*/ STR         R3, [R6, #364]              @ 0x16c 
    /*000112b4*/ STR         R2, [R6, #356]              @ 0x164 
    /*000112b8*/ STR         R2, [R6, #360]              @ 0x168 
    /*000112bc*/ STR         R3, [R6, #368]              @ 0x170 
    /*000112c0*/ STR         R3, [R6, #376]              @ 0x178 
    /*000112c4*/ STR         R3, [R6, #372]              @ 0x174 
    mm_unmark_short_term_for_reference_x112c8:
    /*000112c8*/ CMP         R6, #0 
    /*000112cc*/ BEQ         mm_unmark_short_term_for_reference_x11318
    /*000112d0*/ LDR         R3, [R6, #376]              @ 0x178 
    /*000112d4*/ MOV         LR, #134                    @ 0x86 
    /*000112d8*/ LDR         R1, [SP, #36]               @ 0x24 
    /*000112dc*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e8c] 
    /*000112e0*/ STR         R8, [SP, #20] 
    /*000112e4*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e8c] 
    /*000112e8*/ STR         R3, [SP, #24] 
    /*000112ec*/ MOV         R0, #6 
    /*000112f0*/ STR         R1, [SP, #16] 
    /*000112f4*/ MOV         R1, #10 
    /*000112f8*/ LDR         IP, [R6, #360]              @ 0x168 
    /*000112fc*/ LDR         R3, [PC, #56]               @ 0x000000000001133c 
    /*00011300*/ STR         IP, [SP, #12] 
    /*00011304*/ LDR         IP, [R6, #372]              @ 0x174 
    /*00011308*/ STR         R7, [SP, #4] 
    /*0001130c*/ STR         LR, [SP] 
    /*00011310*/ STR         IP, [SP, #8] 
    /*00011314*/ BL          0x0000000000011314          @ HI_LOG [R_ARM_CALL: +0x0] 
    mm_unmark_short_term_for_reference_x11318:
    /*00011318*/ MOV         R0, #0 
    /*0001131c*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00011320*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    mm_unmark_short_term_for_reference_x11324:
    /*00011324*/ MOV         R3, SL 
    /*00011328*/ MOV         R2, #115                    @ 0x73 
    /*0001132c*/ MOV         R1, FP 
    /*00011330*/ MOV         R0, R9 
    /*00011334*/ BL          0x0000000000011334          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011338*/ B           mm_unmark_short_term_for_reference_x11284
    /*0001133c*/ LDRDEQ      R0, [R0], -R8 
FUNC_END mm_unmark_short_term_for_reference


FUNC_BEGIN mm_unmark_long_term_for_reference
    /*00011340*/ LDR         R3, [R0, #592]              @ 0x250 
    /*00011344*/ CMP         R3, #0 
    /*00011348*/ BLE         mm_unmark_long_term_for_reference_x11420
    /*0001134c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00011350*/ MOV         SL, #0 
    /*00011354*/ MOVW        R8, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e74] 
    /*00011358*/ MOVW        R7, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*0001135c*/ MOV         R6, R2 
    /*00011360*/ MOV         R5, R0 
    /*00011364*/ LDR         R9, [PC, #188]              @ 0x0000000000011428 
    /*00011368*/ MOVT        R8, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e74] 
    /*0001136c*/ MOVT        R7, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*00011370*/ MOV         R4, SL 
    /*00011374*/ B           mm_unmark_long_term_for_reference_x11384
    mm_unmark_long_term_for_reference_x11378:
    /*00011378*/ LDR         R3, [R5, #592]              @ 0x250 
    /*0001137c*/ CMP         R3, R4 
    /*00011380*/ BLE         mm_unmark_long_term_for_reference_x11400
    mm_unmark_long_term_for_reference_x11384:
    /*00011384*/ LDR         R3, [R5, #624]              @ 0x270 
    /*00011388*/ BIC         R2, R4, R4, ASR #31 
    /*0001138c*/ CMP         R2, R3 
    /*00011390*/ BGE         mm_unmark_long_term_for_reference_x113b0
    /*00011394*/ LDR         R3, [R5, #616]              @ 0x268 
    /*00011398*/ LDR         R2, [R5, #612]              @ 0x264 
    /*0001139c*/ ADD         R3, R4, R3 
    /*000113a0*/ CMP         R3, R2 
    /*000113a4*/ SUBGE       R3, R3, R2 
    /*000113a8*/ LDR         R2, [R5, #608]              @ 0x260 
    /*000113ac*/ LDR         SL, [R2, R3, LSL #2] 
    mm_unmark_long_term_for_reference_x113b0:
    /*000113b0*/ CMP         SL, #0 
    /*000113b4*/ ADD         R4, R4, #1 
    /*000113b8*/ BEQ         mm_unmark_long_term_for_reference_x11408
    mm_unmark_long_term_for_reference_x113bc:
    /*000113bc*/ LDR         R3, [SL, #356]              @ 0x164 
    /*000113c0*/ CMP         R3, #3 
    /*000113c4*/ BNE         mm_unmark_long_term_for_reference_x11378
    /*000113c8*/ LDR         R3, [SL, #360]              @ 0x168 
    /*000113cc*/ CMP         R3, #1 
    /*000113d0*/ BNE         mm_unmark_long_term_for_reference_x11378
    /*000113d4*/ LDR         R3, [SL, #376]              @ 0x178 
    /*000113d8*/ CMP         R3, R6 
    /*000113dc*/ BNE         mm_unmark_long_term_for_reference_x11378
    /*000113e0*/ MOVW        R3, #65535                  @ 0xffff 
    /*000113e4*/ MOV         R2, #0 
    /*000113e8*/ STR         R3, [SL, #364]              @ 0x16c 
    /*000113ec*/ STR         R2, [SL, #356]              @ 0x164 
    /*000113f0*/ STR         R2, [SL, #360]              @ 0x168 
    /*000113f4*/ STR         R3, [SL, #368]              @ 0x170 
    /*000113f8*/ STR         R3, [SL, #376]              @ 0x178 
    /*000113fc*/ STR         R3, [SL, #372]              @ 0x174 
    mm_unmark_long_term_for_reference_x11400:
    /*00011400*/ MOV         R0, #0 
    /*00011404*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    mm_unmark_long_term_for_reference_x11408:
    /*00011408*/ MOV         R3, R8 
    /*0001140c*/ MOV         R2, #152                    @ 0x98 
    /*00011410*/ MOV         R1, R9 
    /*00011414*/ MOV         R0, R7 
    /*00011418*/ BL          0x0000000000011418          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001141c*/ B           mm_unmark_long_term_for_reference_x113bc
    mm_unmark_long_term_for_reference_x11420:
    /*00011420*/ MOV         R0, #0 
    /*00011424*/ BX          LR 
    /*00011428*/ STRDEQ      R0, [R0], -IP 
FUNC_END mm_unmark_long_term_for_reference


FUNC_BEGIN mm_mark_current_picture_long_term
    /*0001142c*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00011430*/ MOV         FP, R1 
    /*00011434*/ LDR         R3, [R0, #592]              @ 0x250 
    /*00011438*/ MOV         R9, R2 
    /*0001143c*/ CMP         R3, #0 
    /*00011440*/ BEQ         mm_mark_current_picture_long_term_x11500
    /*00011444*/ MOV         R6, #0 
    /*00011448*/ MOVW        R8, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e74] 
    /*0001144c*/ MOVW        R7, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*00011450*/ MOV         R5, R0 
    /*00011454*/ LDR         SL, [PC, #200]              @ 0x0000000000011524 
    /*00011458*/ MOVT        R8, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e74] 
    /*0001145c*/ MOVT        R7, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*00011460*/ MOV         R4, R6 
    /*00011464*/ B           mm_mark_current_picture_long_term_x11474
    mm_mark_current_picture_long_term_x11468:
    /*00011468*/ LDR         R3, [R5, #592]              @ 0x250 
    /*0001146c*/ CMP         R3, R4 
    /*00011470*/ BLS         mm_mark_current_picture_long_term_x11500
    mm_mark_current_picture_long_term_x11474:
    /*00011474*/ LDR         R3, [R5, #624]              @ 0x270 
    /*00011478*/ CMP         R4, R3 
    /*0001147c*/ MOVGE       R2, #0 
    /*00011480*/ MOVLT       R2, #1 
    /*00011484*/ CMP         R3, #0 
    /*00011488*/ MOVLE       R2, #0 
    /*0001148c*/ CMP         R2, #0 
    /*00011490*/ BEQ         mm_mark_current_picture_long_term_x114b0
    /*00011494*/ LDR         R3, [R5, #616]              @ 0x268 
    /*00011498*/ LDR         R2, [R5, #612]              @ 0x264 
    /*0001149c*/ ADD         R3, R4, R3 
    /*000114a0*/ CMP         R3, R2 
    /*000114a4*/ SUBGE       R3, R3, R2 
    /*000114a8*/ LDR         R2, [R5, #608]              @ 0x260 
    /*000114ac*/ LDR         R6, [R2, R3, LSL #2] 
    mm_mark_current_picture_long_term_x114b0:
    /*000114b0*/ CMP         R6, #0 
    /*000114b4*/ ADD         R4, R4, #1 
    /*000114b8*/ BEQ         mm_mark_current_picture_long_term_x1150c
    mm_mark_current_picture_long_term_x114bc:
    /*000114bc*/ LDR         R3, [R6, #356]              @ 0x164 
    /*000114c0*/ CMP         R3, #3 
    /*000114c4*/ BNE         mm_mark_current_picture_long_term_x11468
    /*000114c8*/ LDR         R3, [R6, #360]              @ 0x168 
    /*000114cc*/ CMP         R3, #1 
    /*000114d0*/ BNE         mm_mark_current_picture_long_term_x11468
    /*000114d4*/ LDR         R3, [R6, #376]              @ 0x178 
    /*000114d8*/ CMP         R3, R9 
    /*000114dc*/ BNE         mm_mark_current_picture_long_term_x11468
    /*000114e0*/ MOVW        R3, #65535                  @ 0xffff 
    /*000114e4*/ MOV         R2, #0 
    /*000114e8*/ STR         R3, [R6, #364]              @ 0x16c 
    /*000114ec*/ STR         R2, [R6, #356]              @ 0x164 
    /*000114f0*/ STR         R2, [R6, #360]              @ 0x168 
    /*000114f4*/ STR         R3, [R6, #368]              @ 0x170 
    /*000114f8*/ STR         R3, [R6, #376]              @ 0x178 
    /*000114fc*/ STR         R3, [R6, #372]              @ 0x174 
    mm_mark_current_picture_long_term_x11500:
    /*00011500*/ STR         R9, [FP, #376]              @ 0x178 
    /*00011504*/ MOV         R0, #0 
    /*00011508*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    mm_mark_current_picture_long_term_x1150c:
    /*0001150c*/ MOV         R3, R8 
    /*00011510*/ MOV         R2, #193                    @ 0xc1 
    /*00011514*/ MOV         R1, SL 
    /*00011518*/ MOV         R0, R7 
    /*0001151c*/ BL          0x000000000001151C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011520*/ B           mm_mark_current_picture_long_term_x114bc
    /*00011524*/ ANDEQ       R0, R0, R0, LSR #18 
FUNC_END mm_mark_current_picture_long_term


FUNC_BEGIN mm_mark_set_max_long_term_idx
    /*00011528*/ LDR         R3, [R0, #592]              @ 0x250 
    /*0001152c*/ CMP         R3, #0 
    /*00011530*/ BEQ         mm_mark_set_max_long_term_idx_x1162c
    /*00011534*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00011538*/ MOV         R6, #0 
    /*0001153c*/ MOVW        R9, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e74] 
    /*00011540*/ MOVW        R8, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*00011544*/ MOV         R7, R1 
    /*00011548*/ MOV         R5, R0 
    /*0001154c*/ LDR         SL, [PC, #224]              @ 0x0000000000011634 
    /*00011550*/ MOVT        R9, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e74] 
    /*00011554*/ MOVT        R8, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*00011558*/ MOV         R4, R6 
    /*0001155c*/ B           mm_mark_set_max_long_term_idx_x11570
    mm_mark_set_max_long_term_idx_x11560:
    /*00011560*/ LDR         R3, [R5, #592]              @ 0x250 
    /*00011564*/ ADD         R4, R4, #1 
    /*00011568*/ CMP         R3, R4 
    /*0001156c*/ BLS         mm_mark_set_max_long_term_idx_x1160c
    mm_mark_set_max_long_term_idx_x11570:
    /*00011570*/ LDR         R3, [R5, #624]              @ 0x270 
    /*00011574*/ CMP         R4, R3 
    /*00011578*/ MOVGE       R2, #0 
    /*0001157c*/ MOVLT       R2, #1 
    /*00011580*/ CMP         R3, #0 
    /*00011584*/ MOVLE       R2, #0 
    /*00011588*/ CMP         R2, #0 
    /*0001158c*/ BEQ         mm_mark_set_max_long_term_idx_x115ac
    /*00011590*/ LDR         R3, [R5, #616]              @ 0x268 
    /*00011594*/ LDR         R2, [R5, #612]              @ 0x264 
    /*00011598*/ ADD         R3, R4, R3 
    /*0001159c*/ CMP         R3, R2 
    /*000115a0*/ SUBGE       R3, R3, R2 
    /*000115a4*/ LDR         R2, [R5, #608]              @ 0x260 
    /*000115a8*/ LDR         R6, [R2, R3, LSL #2] 
    mm_mark_set_max_long_term_idx_x115ac:
    /*000115ac*/ CMP         R6, #0 
    /*000115b0*/ BEQ         mm_mark_set_max_long_term_idx_x11614
    mm_mark_set_max_long_term_idx_x115b4:
    /*000115b4*/ LDR         R3, [R6, #356]              @ 0x164 
    /*000115b8*/ CMP         R3, #3 
    /*000115bc*/ BNE         mm_mark_set_max_long_term_idx_x11560
    /*000115c0*/ LDR         R3, [R6, #360]              @ 0x168 
    /*000115c4*/ CMP         R3, #1 
    /*000115c8*/ BNE         mm_mark_set_max_long_term_idx_x11560
    /*000115cc*/ LDR         R2, [R6, #376]              @ 0x178 
    /*000115d0*/ SUB         R3, R7, #1 
    /*000115d4*/ CMP         R2, R3 
    /*000115d8*/ BLE         mm_mark_set_max_long_term_idx_x11560
    /*000115dc*/ MOV         R3, #0 
    /*000115e0*/ STR         R3, [R6, #356]              @ 0x164 
    /*000115e4*/ STR         R3, [R6, #360]              @ 0x168 
    /*000115e8*/ MOVW        R3, #65535                  @ 0xffff 
    /*000115ec*/ STR         R3, [R6, #364]              @ 0x16c 
    /*000115f0*/ ADD         R4, R4, #1 
    /*000115f4*/ STR         R3, [R6, #368]              @ 0x170 
    /*000115f8*/ STR         R3, [R6, #376]              @ 0x178 
    /*000115fc*/ STR         R3, [R6, #372]              @ 0x174 
    /*00011600*/ LDR         R3, [R5, #592]              @ 0x250 
    /*00011604*/ CMP         R3, R4 
    /*00011608*/ BHI         mm_mark_set_max_long_term_idx_x11570
    mm_mark_set_max_long_term_idx_x1160c:
    /*0001160c*/ MOV         R0, #0 
    /*00011610*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    mm_mark_set_max_long_term_idx_x11614:
    /*00011614*/ MOV         R3, R9 
    /*00011618*/ MOV         R2, #226                    @ 0xe2 
    /*0001161c*/ MOV         R1, SL 
    /*00011620*/ MOV         R0, R8 
    /*00011624*/ BL          0x0000000000011624          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011628*/ B           mm_mark_set_max_long_term_idx_x115b4
    mm_mark_set_max_long_term_idx_x1162c:
    /*0001162c*/ MOV         R0, #0 
    /*00011630*/ BX          LR 
    /*00011634*/ ANDEQ       R0, R0, R4, ASR #18 
FUNC_END mm_mark_set_max_long_term_idx


FUNC_BEGIN mm_assign_long_term_frame_idx
    /*00011638*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001163c*/ ADD         R7, R2, #1 
    /*00011640*/ LDR         IP, [R0, #592]              @ 0x250 
    /*00011644*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00011648*/ SUB         R7, R1, R7 
    /*0001164c*/ CMP         IP, #0 
    /*00011650*/ BLE         mm_assign_long_term_frame_idx_x11798
    /*00011654*/ MOV         R6, #0 
    /*00011658*/ MOVW        SL, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e74] 
    /*0001165c*/ MOVW        R9, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*00011660*/ STR         R3, [SP, #36]               @ 0x24 
    /*00011664*/ STR         R1, [SP, #32] 
    /*00011668*/ MOV         R8, R2 
    /*0001166c*/ MOV         R5, R0 
    /*00011670*/ LDR         FP, [PC, #324]              @ 0x00000000000117bc 
    /*00011674*/ MOVT        SL, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e74] 
    /*00011678*/ MOVT        R9, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*0001167c*/ MOV         R4, R6 
    /*00011680*/ B           mm_assign_long_term_frame_idx_x11690
    mm_assign_long_term_frame_idx_x11684:
    /*00011684*/ LDR         R3, [R5, #592]              @ 0x250 
    /*00011688*/ CMP         R3, R4 
    /*0001168c*/ BLE         mm_assign_long_term_frame_idx_x11748
    mm_assign_long_term_frame_idx_x11690:
    /*00011690*/ LDR         R3, [R5, #624]              @ 0x270 
    /*00011694*/ BIC         R2, R4, R4, ASR #31 
    /*00011698*/ CMP         R2, R3 
    /*0001169c*/ BGE         mm_assign_long_term_frame_idx_x116bc
    /*000116a0*/ LDR         R3, [R5, #616]              @ 0x268 
    /*000116a4*/ LDR         R2, [R5, #612]              @ 0x264 
    /*000116a8*/ ADD         R3, R4, R3 
    /*000116ac*/ CMP         R3, R2 
    /*000116b0*/ SUBGE       R3, R3, R2 
    /*000116b4*/ LDR         R2, [R5, #608]              @ 0x260 
    /*000116b8*/ LDR         R6, [R2, R3, LSL #2] 
    mm_assign_long_term_frame_idx_x116bc:
    /*000116bc*/ CMP         R6, #0 
    /*000116c0*/ ADD         R4, R4, #1 
    /*000116c4*/ BEQ         mm_assign_long_term_frame_idx_x117a4
    mm_assign_long_term_frame_idx_x116c8:
    /*000116c8*/ LDR         R0, [R6, #356]              @ 0x164 
    /*000116cc*/ CMP         R0, #3 
    /*000116d0*/ BNE         mm_assign_long_term_frame_idx_x11684
    /*000116d4*/ LDR         R3, [R6, #360]              @ 0x168 
    /*000116d8*/ CMP         R3, #2 
    /*000116dc*/ BNE         mm_assign_long_term_frame_idx_x11684
    /*000116e0*/ LDR         R2, [R6, #372]              @ 0x174 
    /*000116e4*/ CMP         R7, R2 
    /*000116e8*/ BNE         mm_assign_long_term_frame_idx_x11684
    /*000116ec*/ LDR         R1, [R6, #376]              @ 0x178 
    /*000116f0*/ MOVW        IP, #267                    @ 0x10b 
    /*000116f4*/ LDR         R2, [SP, #32] 
    /*000116f8*/ STR         R3, [SP, #12] 
    /*000116fc*/ STR         R1, [SP, #24] 
    /*00011700*/ MOV         R1, #10 
    /*00011704*/ STR         R2, [SP, #16] 
    /*00011708*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e8c] 
    /*0001170c*/ LDR         R3, [PC, #168]              @ 0x00000000000117bc 
    /*00011710*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e8c] 
    /*00011714*/ STR         R8, [SP, #20] 
    /*00011718*/ STR         R7, [SP, #8] 
    /*0001171c*/ STR         R7, [SP, #4] 
    /*00011720*/ STR         IP, [SP] 
    /*00011724*/ BL          0x0000000000011724          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011728*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001172c*/ MOV         R2, #1 
    /*00011730*/ STR         R2, [R6, #360]              @ 0x168 
    /*00011734*/ STR         R3, [R6, #376]              @ 0x178 
    /*00011738*/ MOVW        R3, #65535                  @ 0xffff 
    /*0001173c*/ STR         R3, [R6, #364]              @ 0x16c 
    /*00011740*/ STR         R3, [R6, #368]              @ 0x170 
    /*00011744*/ STR         R3, [R6, #372]              @ 0x174 
    mm_assign_long_term_frame_idx_x11748:
    /*00011748*/ CMP         R6, #0 
    /*0001174c*/ BEQ         mm_assign_long_term_frame_idx_x11798
    /*00011750*/ LDR         R3, [R6, #376]              @ 0x178 
    /*00011754*/ MOVW        LR, #281                    @ 0x119 
    /*00011758*/ LDR         R1, [SP, #32] 
    /*0001175c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e8c] 
    /*00011760*/ STR         R8, [SP, #20] 
    /*00011764*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e8c] 
    /*00011768*/ STR         R3, [SP, #24] 
    /*0001176c*/ MOV         R0, #6 
    /*00011770*/ STR         R1, [SP, #16] 
    /*00011774*/ MOV         R1, #10 
    /*00011778*/ LDR         IP, [R6, #360]              @ 0x168 
    /*0001177c*/ LDR         R3, [PC, #56]               @ 0x00000000000117bc 
    /*00011780*/ STR         IP, [SP, #12] 
    /*00011784*/ LDR         IP, [R6, #372]              @ 0x174 
    /*00011788*/ STR         R7, [SP, #4] 
    /*0001178c*/ STR         LR, [SP] 
    /*00011790*/ STR         IP, [SP, #8] 
    /*00011794*/ BL          0x0000000000011794          @ HI_LOG [R_ARM_CALL: +0x0] 
    mm_assign_long_term_frame_idx_x11798:
    /*00011798*/ MOV         R0, #0 
    /*0001179c*/ ADD         SP, SP, #44                 @ 0x2c 
    /*000117a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    mm_assign_long_term_frame_idx_x117a4:
    /*000117a4*/ MOV         R3, SL 
    /*000117a8*/ MOVW        R2, #259                    @ 0x103 
    /*000117ac*/ MOV         R1, FP 
    /*000117b0*/ MOV         R0, R9 
    /*000117b4*/ BL          0x00000000000117B4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000117b8*/ B           mm_assign_long_term_frame_idx_x116c8
    /*000117bc*/ ANDEQ       R0, R0, R4, ROR #18 
FUNC_END mm_assign_long_term_frame_idx


FUNC_BEGIN H264eDpbInserFrame
    /*000117c0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000117c4*/ MOV         R4, R1 
    /*000117c8*/ LDR         R1, [R1, #624]              @ 0x270 
    /*000117cc*/ SUB         SP, SP, #20 
    /*000117d0*/ MOV         R6, R2 
    /*000117d4*/ MOV         R8, R3 
    /*000117d8*/ STR         R1, [R4, #592]              @ 0x250 
    /*000117dc*/ LDR         R5, [R0, #892]              @ 0x37c 
    /*000117e0*/ CMP         R5, #0 
    /*000117e4*/ BEQ         H264eDpbInserFrame_x11af8
    /*000117e8*/ MOVW        FP, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f30] 
    /*000117ec*/ MOVW        SL, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*000117f0*/ MOVT        FP, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f30] 
    /*000117f4*/ MOVT        SL, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*000117f8*/ ADD         R5, R0, #936                @ 0x3a8 
    /*000117fc*/ ADD         R9, R0, #976                @ 0x3d0 
    /*00011800*/ MOV         R7, R0 
    H264eDpbInserFrame_x11804:
    /*00011804*/ LDR         R3, [R5, #-40]              @ 0xffffffd8 
    /*00011808*/ CMP         R3, #0 
    /*0001180c*/ BEQ         H264eDpbInserFrame_x11894
    /*00011810*/ SUB         R3, R3, #1 
    /*00011814*/ CMP         R3, #5 
    /*00011818*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*0001181c*/ B           H264eDpbInserFrame_x11ae0
    /*00011820*/ ANDEQ       R1, R1, IP, ASR #21 
    /*00011824*/ @           <UNDEFINED> instruction: 0x00011ab8 
    /*00011828*/ ANDEQ       R1, R1, R0, ROR #21 
    /*0001182c*/ ANDEQ       R1, R1, R8, LSR #21 
    /*00011830*/ ANDEQ       R1, R1, R8, LSL #21 
    /*00011834*/ ANDEQ       R1, R1, R8, LSR R8 
    /*00011838*/ LDR         R3, [R6, #360]              @ 0x168 
    /*0001183c*/ CMP         R3, #1 
    /*00011840*/ BEQ         H264eDpbInserFrame_x11d14
    H264eDpbInserFrame_x11844:
    /*00011844*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ef8] 
    /*00011848*/ MOVW        R2, #311                    @ 0x137 
    /*0001184c*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ef8] 
    /*00011850*/ LDR         R1, [PC, #1560]             @ 0x0000000000011e70 
    /*00011854*/ MOV         R0, SL 
    /*00011858*/ BL          0x0000000000011858          @ osal_panic [R_ARM_CALL: +0x0] 
    H264eDpbInserFrame_x1185c:
    /*0001185c*/ LDR         R2, [R5] 
    /*00011860*/ MOV         R1, R6 
    /*00011864*/ MOV         R0, R4 
    /*00011868*/ ADD         R5, R5, #4 
    /*0001186c*/ BL          0x000000000001186C          @ mm_mark_current_picture_long_term [R_ARM_CALL: .text+0x1142c] 
    /*00011870*/ CMP         R9, R5 
    /*00011874*/ BNE         H264eDpbInserFrame_x11804
    H264eDpbInserFrame_x11878:
    /*00011878*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f34] 
    /*0001187c*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*00011880*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f34] 
    /*00011884*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*00011888*/ MOV         R2, #332                    @ 0x14c 
    /*0001188c*/ LDR         R1, [PC, #1500]             @ 0x0000000000011e70 
    /*00011890*/ BL          0x0000000000011890          @ osal_panic [R_ARM_CALL: +0x0] 
    H264eDpbInserFrame_x11894:
    /*00011894*/ LDR         R3, [R4, #592]              @ 0x250 
    /*00011898*/ CMP         R3, #0 
    /*0001189c*/ LDR         R3, [R4, #624]              @ 0x270 
    /*000118a0*/ BEQ         H264eDpbInserFrame_x119d0
    /*000118a4*/ MOV         R5, #0 
    /*000118a8*/ MOVW        FP, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e74] 
    /*000118ac*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*000118b0*/ MOVT        FP, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e74] 
    /*000118b4*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*000118b8*/ MOV         R7, R5 
    /*000118bc*/ STR         R2, [SP, #12] 
    /*000118c0*/ B           H264eDpbInserFrame_x11944
    H264eDpbInserFrame_x118c4:
    /*000118c4*/ LDR         R3, [R5, #360]              @ 0x168 
    /*000118c8*/ CMP         R3, #0 
    /*000118cc*/ BNE         H264eDpbInserFrame_x11988
    /*000118d0*/ CMP         R8, #1 
    /*000118d4*/ BEQ         H264eDpbInserFrame_x11d4c
    /*000118d8*/ MOV         R0, #1 
    /*000118dc*/ MOV         SL, #6 
    /*000118e0*/ BL          0x00000000000118E0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000118e4*/ LDR         IP, [R5, #328]              @ 0x148 
    /*000118e8*/ LDRD        R2, [R5, #120]              @ 0x78 
    /*000118ec*/ STR         SL, [SP] 
    /*000118f0*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000118f4*/ MOV         R0, IP 
    /*000118f8*/ BLX         R1 
    /*000118fc*/ MOV         R9, R0 
    /*00011900*/ MOV         R0, #1 
    /*00011904*/ BL          0x0000000000011904          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011908*/ LDR         R1, [R5, #348]              @ 0x15c 
    /*0001190c*/ ADD         R3, R5, #416                @ 0x1a0 
    /*00011910*/ LDRD        R2, [R3, #-8] 
    /*00011914*/ STR         SL, [SP] 
    /*00011918*/ LDR         SL, [R0, #64]               @ 0x40 
    /*0001191c*/ MOV         R0, R1 
    /*00011920*/ BLX         SL 
    /*00011924*/ ORR         R0, R9, R0 
    H264eDpbInserFrame_x11928:
    /*00011928*/ CMP         R0, #0 
    /*0001192c*/ BNE         H264eDpbInserFrame_x11d24
    H264eDpbInserFrame_x11930:
    /*00011930*/ LDR         R3, [R4, #624]              @ 0x270 
    H264eDpbInserFrame_x11934:
    /*00011934*/ LDR         R2, [R4, #592]              @ 0x250 
    /*00011938*/ ADD         R7, R7, #1 
    /*0001193c*/ CMP         R2, R7 
    /*00011940*/ BLS         H264eDpbInserFrame_x119d0
    H264eDpbInserFrame_x11944:
    /*00011944*/ CMP         R3, #0 
    /*00011948*/ BLE         H264eDpbInserFrame_x11974
    /*0001194c*/ LDR         R1, [R4, #616]              @ 0x268 
    /*00011950*/ SUB         R3, R3, #1 
    /*00011954*/ LDR         R0, [R4, #612]              @ 0x264 
    /*00011958*/ ADD         R2, R1, #1 
    /*0001195c*/ LDR         IP, [R4, #608]              @ 0x260 
    /*00011960*/ CMP         R2, R0 
    /*00011964*/ LDR         R5, [IP, R1, LSL #2] 
    /*00011968*/ MOVGE       R2, #0 
    /*0001196c*/ STR         R3, [R4, #624]              @ 0x270 
    /*00011970*/ STR         R2, [R4, #616]              @ 0x268 
    H264eDpbInserFrame_x11974:
    /*00011974*/ CMP         R5, #0 
    /*00011978*/ BEQ         H264eDpbInserFrame_x11d78
    H264eDpbInserFrame_x1197c:
    /*0001197c*/ LDR         R3, [R5, #356]              @ 0x164 
    /*00011980*/ CMP         R3, #0 
    /*00011984*/ BEQ         H264eDpbInserFrame_x118c4
    H264eDpbInserFrame_x11988:
    /*00011988*/ LDR         R3, [R4, #624]              @ 0x270 
    /*0001198c*/ LDR         R2, [R4, #612]              @ 0x264 
    /*00011990*/ CMP         R3, R2 
    /*00011994*/ BGE         H264eDpbInserFrame_x11934
    /*00011998*/ LDR         R1, [R4, #620]              @ 0x26c 
    /*0001199c*/ ADD         R7, R7, #1 
    /*000119a0*/ LDR         R0, [R4, #608]              @ 0x260 
    /*000119a4*/ ADD         R3, R3, #1 
    /*000119a8*/ ADD         R2, R1, #1 
    /*000119ac*/ STR         R5, [R0, R1, LSL #2] 
    /*000119b0*/ LDR         R1, [R4, #612]              @ 0x264 
    /*000119b4*/ STR         R3, [R4, #624]              @ 0x270 
    /*000119b8*/ CMP         R2, R1 
    /*000119bc*/ MOVGE       R2, #0 
    /*000119c0*/ STR         R2, [R4, #620]              @ 0x26c 
    /*000119c4*/ LDR         R2, [R4, #592]              @ 0x250 
    /*000119c8*/ CMP         R2, R7 
    /*000119cc*/ BHI         H264eDpbInserFrame_x11944
    H264eDpbInserFrame_x119d0:
    /*000119d0*/ LDR         R2, [R4, #588]              @ 0x24c 
    /*000119d4*/ STR         R3, [R4, #592]              @ 0x250 
    /*000119d8*/ CMP         R3, R2 
    /*000119dc*/ BGT         H264eDpbInserFrame_x11d90
    /*000119e0*/ LDR         R2, [R4, #612]              @ 0x264 
    /*000119e4*/ CMP         R2, R3 
    /*000119e8*/ BLE         H264eDpbInserFrame_x11a14
    H264eDpbInserFrame_x119ec:
    /*000119ec*/ LDR         R1, [R4, #620]              @ 0x26c 
    /*000119f0*/ ADD         R3, R3, #1 
    /*000119f4*/ LDR         R0, [R4, #608]              @ 0x260 
    /*000119f8*/ ADD         R2, R1, #1 
    /*000119fc*/ STR         R6, [R0, R1, LSL #2] 
    /*00011a00*/ LDR         R1, [R4, #612]              @ 0x264 
    /*00011a04*/ STR         R3, [R4, #624]              @ 0x270 
    /*00011a08*/ CMP         R2, R1 
    /*00011a0c*/ MOVGE       R2, #0 
    /*00011a10*/ STR         R2, [R4, #620]              @ 0x26c 
    H264eDpbInserFrame_x11a14:
    /*00011a14*/ CMP         R8, #1 
    /*00011a18*/ BEQ         H264eDpbInserFrame_x11dc0
    /*00011a1c*/ MOV         R0, #1 
    /*00011a20*/ MOV         R5, #6 
    /*00011a24*/ BL          0x0000000000011A24          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011a28*/ LDR         IP, [R6, #328]              @ 0x148 
    /*00011a2c*/ LDRD        R2, [R6, #120]              @ 0x78 
    /*00011a30*/ STR         R5, [SP] 
    /*00011a34*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00011a38*/ MOV         R0, IP 
    /*00011a3c*/ BLX         R1 
    /*00011a40*/ MOV         R4, R0 
    /*00011a44*/ MOV         R0, #1 
    /*00011a48*/ BL          0x0000000000011A48          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011a4c*/ LDR         IP, [R6, #348]              @ 0x15c 
    /*00011a50*/ ADD         R3, R6, #416                @ 0x1a0 
    /*00011a54*/ LDRD        R2, [R3, #-8] 
    /*00011a58*/ STR         R5, [SP] 
    /*00011a5c*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00011a60*/ MOV         R0, IP 
    /*00011a64*/ BLX         R1 
    /*00011a68*/ ORR         R4, R4, R0 
    H264eDpbInserFrame_x11a6c:
    /*00011a6c*/ CMP         R4, #0 
    /*00011a70*/ STRNE       R4, [SP, #4] 
    /*00011a74*/ MOVWNE      R3, #389                    @ 0x185 
    /*00011a78*/ BNE         H264eDpbInserFrame_x11cec
    H264eDpbInserFrame_x11a7c:
    /*00011a7c*/ MOV         R0, R4 
    /*00011a80*/ ADD         SP, SP, #20 
    /*00011a84*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00011a88*/ MOV         R2, R8 
    /*00011a8c*/ LDR         R1, [R7] 
    /*00011a90*/ MOV         R0, R4 
    /*00011a94*/ BL          0x0000000000011A94          @ H264eDpbFlush [R_ARM_CALL: .text+0x10fec] 
    H264eDpbInserFrame_x11a98:
    /*00011a98*/ ADD         R5, R5, #4 
    /*00011a9c*/ CMP         R9, R5 
    /*00011aa0*/ BNE         H264eDpbInserFrame_x11804
    /*00011aa4*/ B           H264eDpbInserFrame_x11878
    /*00011aa8*/ LDR         R1, [R5] 
    /*00011aac*/ MOV         R0, R4 
    /*00011ab0*/ BL          0x0000000000011AB0          @ mm_mark_set_max_long_term_idx [R_ARM_CALL: .text+0x11528] 
    /*00011ab4*/ B           H264eDpbInserFrame_x11a98
    /*00011ab8*/ LDR         R2, [R5] 
    /*00011abc*/ MOV         R0, R4 
    /*00011ac0*/ LDR         R1, [R7, #28] 
    /*00011ac4*/ BL          0x0000000000011AC4          @ mm_unmark_long_term_for_reference [R_ARM_CALL: .text+0x11340] 
    /*00011ac8*/ B           H264eDpbInserFrame_x11a98
    /*00011acc*/ LDR         R2, [R5] 
    /*00011ad0*/ MOV         R0, R4 
    /*00011ad4*/ LDR         R1, [R7, #28] 
    /*00011ad8*/ BL          0x0000000000011AD8          @ mm_unmark_short_term_for_reference [R_ARM_CALL: .text+0x111f8] 
    /*00011adc*/ B           H264eDpbInserFrame_x11a98
    H264eDpbInserFrame_x11ae0:
    /*00011ae0*/ MOV         R3, FP 
    /*00011ae4*/ MOVW        R2, #325                    @ 0x145 
    /*00011ae8*/ LDR         R1, [PC, #896]              @ 0x0000000000011e70 
    /*00011aec*/ MOV         R0, SL 
    /*00011af0*/ BL          0x0000000000011AF0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011af4*/ B           H264eDpbInserFrame_x11a98
    H264eDpbInserFrame_x11af8:
    /*00011af8*/ LDR         R3, [R4, #588]              @ 0x24c 
    /*00011afc*/ CMP         R1, R3 
    /*00011b00*/ BLT         H264eDpbInserFrame_x11c50
    /*00011b04*/ CMP         R1, #0 
    /*00011b08*/ BEQ         H264eDpbInserFrame_x11c50
    /*00011b0c*/ MOVW        R9, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f90] 
    /*00011b10*/ MOV         IP, R5 
    /*00011b14*/ MOVT        R9, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f90] 
    /*00011b18*/ MOV         R7, R5 
    /*00011b1c*/ MOV         SL, R5 
    /*00011b20*/ B           H264eDpbInserFrame_x11b6c
    H264eDpbInserFrame_x11b24:
    /*00011b24*/ LDR         R1, [R4, #624]              @ 0x270 
    /*00011b28*/ LDR         R3, [R4, #612]              @ 0x264 
    /*00011b2c*/ CMP         R1, R3 
    /*00011b30*/ BGE         H264eDpbInserFrame_x11b5c
    /*00011b34*/ LDR         R2, [R4, #620]              @ 0x26c 
    /*00011b38*/ ADD         R1, R1, #1 
    /*00011b3c*/ LDR         R0, [R4, #608]              @ 0x260 
    /*00011b40*/ ADD         R3, R2, #1 
    /*00011b44*/ STR         R5, [R0, R2, LSL #2] 
    /*00011b48*/ LDR         R2, [R4, #612]              @ 0x264 
    /*00011b4c*/ STR         R1, [R4, #624]              @ 0x270 
    /*00011b50*/ CMP         R3, R2 
    /*00011b54*/ MOVGE       R3, #0 
    /*00011b58*/ STR         R3, [R4, #620]              @ 0x26c 
    H264eDpbInserFrame_x11b5c:
    /*00011b5c*/ LDR         R3, [R4, #592]              @ 0x250 
    /*00011b60*/ ADD         R7, R7, #1 
    /*00011b64*/ CMP         R3, R7 
    /*00011b68*/ BLS         H264eDpbInserFrame_x11c50
    H264eDpbInserFrame_x11b6c:
    /*00011b6c*/ CMP         R1, #0 
    /*00011b70*/ BLE         H264eDpbInserFrame_x11b9c
    /*00011b74*/ LDR         R2, [R4, #616]              @ 0x268 
    /*00011b78*/ SUB         R1, R1, #1 
    /*00011b7c*/ LDR         R0, [R4, #612]              @ 0x264 
    /*00011b80*/ ADD         R3, R2, #1 
    /*00011b84*/ LDR         LR, [R4, #608]              @ 0x260 
    /*00011b88*/ CMP         R3, R0 
    /*00011b8c*/ LDR         R5, [LR, R2, LSL #2] 
    /*00011b90*/ MOVGE       R3, #0 
    /*00011b94*/ STR         R1, [R4, #624]              @ 0x270 
    /*00011b98*/ STR         R3, [R4, #616]              @ 0x268 
    H264eDpbInserFrame_x11b9c:
    /*00011b9c*/ LDR         R3, [R5, #356]              @ 0x164 
    /*00011ba0*/ CMP         R3, #3 
    /*00011ba4*/ BNE         H264eDpbInserFrame_x11b24
    /*00011ba8*/ LDR         R2, [R5, #360]              @ 0x168 
    /*00011bac*/ EOR         R3, IP, #1 
    /*00011bb0*/ CMP         R2, #2 
    /*00011bb4*/ MOVNE       R3, #0 
    /*00011bb8*/ ANDEQ       R3, R3, #1 
    /*00011bbc*/ CMP         R3, #0 
    /*00011bc0*/ BEQ         H264eDpbInserFrame_x11b24
    /*00011bc4*/ CMP         R8, #1 
    /*00011bc8*/ MOVW        R3, #65535                  @ 0xffff 
    /*00011bcc*/ STR         SL, [R5, #356]              @ 0x164 
    /*00011bd0*/ STR         SL, [R5, #360]              @ 0x168 
    /*00011bd4*/ STR         R3, [R5, #364]              @ 0x16c 
    /*00011bd8*/ STR         R3, [R5, #368]              @ 0x170 
    /*00011bdc*/ STR         R3, [R5, #376]              @ 0x178 
    /*00011be0*/ STR         R3, [R5, #372]              @ 0x174 
    /*00011be4*/ BEQ         H264eDpbInserFrame_x11e20
    /*00011be8*/ MOV         R0, #1 
    /*00011bec*/ MOV         FP, #6 
    /*00011bf0*/ BL          0x0000000000011BF0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011bf4*/ LDR         IP, [R5, #328]              @ 0x148 
    /*00011bf8*/ LDRD        R2, [R5, #120]              @ 0x78 
    /*00011bfc*/ STR         FP, [SP] 
    /*00011c00*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00011c04*/ MOV         R0, IP 
    /*00011c08*/ BLX         R1 
    /*00011c0c*/ STR         R0, [SP, #12] 
    /*00011c10*/ MOV         R0, #1 
    /*00011c14*/ BL          0x0000000000011C14          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011c18*/ LDR         IP, [R5, #348]              @ 0x15c 
    /*00011c1c*/ ADD         R3, R5, #416                @ 0x1a0 
    /*00011c20*/ LDRD        R2, [R3, #-8] 
    /*00011c24*/ STR         FP, [SP] 
    /*00011c28*/ LDR         FP, [R0, #64]               @ 0x40 
    /*00011c2c*/ MOV         R0, IP 
    /*00011c30*/ BLX         FP 
    /*00011c34*/ LDR         R1, [SP, #12] 
    /*00011c38*/ ORR         R0, R1, R0 
    H264eDpbInserFrame_x11c3c:
    /*00011c3c*/ CMP         R0, #0 
    /*00011c40*/ BNE         H264eDpbInserFrame_x11e4c
    H264eDpbInserFrame_x11c44:
    /*00011c44*/ LDR         R1, [R4, #624]              @ 0x270 
    /*00011c48*/ MOV         IP, #1 
    /*00011c4c*/ B           H264eDpbInserFrame_x11b5c
    H264eDpbInserFrame_x11c50:
    /*00011c50*/ LDR         R3, [R4, #612]              @ 0x264 
    /*00011c54*/ CMP         R1, R3 
    /*00011c58*/ BGE         H264eDpbInserFrame_x11c84
    /*00011c5c*/ LDR         R0, [R4, #620]              @ 0x26c 
    /*00011c60*/ ADD         R3, R1, #1 
    /*00011c64*/ LDR         R1, [R4, #608]              @ 0x260 
    /*00011c68*/ ADD         R2, R0, #1 
    /*00011c6c*/ STR         R6, [R1, R0, LSL #2] 
    /*00011c70*/ LDR         R1, [R4, #612]              @ 0x264 
    /*00011c74*/ STR         R3, [R4, #624]              @ 0x270 
    /*00011c78*/ CMP         R2, R1 
    /*00011c7c*/ MOVGE       R2, #0 
    /*00011c80*/ STR         R2, [R4, #620]              @ 0x26c 
    H264eDpbInserFrame_x11c84:
    /*00011c84*/ CMP         R8, #1 
    /*00011c88*/ BEQ         H264eDpbInserFrame_x11df0
    /*00011c8c*/ MOV         R0, #1 
    /*00011c90*/ MOV         R5, #6 
    /*00011c94*/ BL          0x0000000000011C94          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011c98*/ LDR         IP, [R6, #328]              @ 0x148 
    /*00011c9c*/ LDRD        R2, [R6, #120]              @ 0x78 
    /*00011ca0*/ STR         R5, [SP] 
    /*00011ca4*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00011ca8*/ MOV         R0, IP 
    /*00011cac*/ BLX         R1 
    /*00011cb0*/ MOV         R4, R0 
    /*00011cb4*/ MOV         R0, #1 
    /*00011cb8*/ BL          0x0000000000011CB8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011cbc*/ LDR         IP, [R6, #348]              @ 0x15c 
    /*00011cc0*/ ADD         R3, R6, #416                @ 0x1a0 
    /*00011cc4*/ LDRD        R2, [R3, #-8] 
    /*00011cc8*/ STR         R5, [SP] 
    /*00011ccc*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00011cd0*/ MOV         R0, IP 
    /*00011cd4*/ BLX         R1 
    /*00011cd8*/ ORR         R4, R4, R0 
    H264eDpbInserFrame_x11cdc:
    /*00011cdc*/ CMP         R4, #0 
    /*00011ce0*/ BEQ         H264eDpbInserFrame_x11a7c
    /*00011ce4*/ MOVW        R3, #462                    @ 0x1ce 
    /*00011ce8*/ STR         R4, [SP, #4] 
    H264eDpbInserFrame_x11cec:
    /*00011cec*/ STR         R3, [SP] 
    /*00011cf0*/ MOV         R1, #10 
    /*00011cf4*/ LDR         R3, [PC, #372]              @ 0x0000000000011e70 
    /*00011cf8*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3fe0] 
    /*00011cfc*/ MOV         R0, #3 
    /*00011d00*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3fe0] 
    /*00011d04*/ BL          0x0000000000011D04          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011d08*/ MOV         R0, R4 
    /*00011d0c*/ ADD         SP, SP, #20 
    /*00011d10*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eDpbInserFrame_x11d14:
    /*00011d14*/ LDR         R3, [R6, #356]              @ 0x164 
    /*00011d18*/ CMP         R3, #3 
    /*00011d1c*/ BNE         H264eDpbInserFrame_x11844
    /*00011d20*/ B           H264eDpbInserFrame_x1185c
    H264eDpbInserFrame_x11d24:
    /*00011d24*/ STR         R0, [SP, #4] 
    /*00011d28*/ MOVW        R3, #359                    @ 0x167 
    /*00011d2c*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f90] 
    /*00011d30*/ STR         R3, [SP] 
    /*00011d34*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f90] 
    /*00011d38*/ LDR         R3, [PC, #304]              @ 0x0000000000011e70 
    /*00011d3c*/ MOV         R1, #10 
    /*00011d40*/ MOV         R0, #3 
    /*00011d44*/ BL          0x0000000000011D44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011d48*/ B           H264eDpbInserFrame_x11930
    H264eDpbInserFrame_x11d4c:
    /*00011d4c*/ MOV         R0, R8 
    /*00011d50*/ BL          0x0000000000011D50          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011d54*/ LDR         IP, [R5, #328]              @ 0x148 
    /*00011d58*/ ADD         R3, R5, #416                @ 0x1a0 
    /*00011d5c*/ MOV         R1, #6 
    /*00011d60*/ LDRD        R2, [R3, #-8] 
    /*00011d64*/ STR         R1, [SP] 
    /*00011d68*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00011d6c*/ MOV         R0, IP 
    /*00011d70*/ BLX         R1 
    /*00011d74*/ B           H264eDpbInserFrame_x11928
    H264eDpbInserFrame_x11d78:
    /*00011d78*/ MOV         R3, FP 
    /*00011d7c*/ MOV         R2, #340                    @ 0x154 
    /*00011d80*/ LDR         R1, [PC, #232]              @ 0x0000000000011e70 
    /*00011d84*/ LDR         R0, [SP, #12] 
    /*00011d88*/ BL          0x0000000000011D88          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011d8c*/ B           H264eDpbInserFrame_x1197c
    H264eDpbInserFrame_x11d90:
    /*00011d90*/ MOVW        R2, #371                    @ 0x173 
    /*00011d94*/ MOVW        R3, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3fb0] 
    /*00011d98*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*00011d9c*/ MOVT        R3, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3fb0] 
    /*00011da0*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*00011da4*/ LDR         R1, [PC, #196]              @ 0x0000000000011e70 
    /*00011da8*/ BL          0x0000000000011DA8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011dac*/ LDR         R3, [R4, #624]              @ 0x270 
    /*00011db0*/ LDR         R2, [R4, #612]              @ 0x264 
    /*00011db4*/ CMP         R2, R3 
    /*00011db8*/ BLE         H264eDpbInserFrame_x11a14
    /*00011dbc*/ B           H264eDpbInserFrame_x119ec
    H264eDpbInserFrame_x11dc0:
    /*00011dc0*/ MOV         R0, R8 
    /*00011dc4*/ BL          0x0000000000011DC4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011dc8*/ LDR         IP, [R6, #328]              @ 0x148 
    /*00011dcc*/ ADD         R3, R6, #416                @ 0x1a0 
    /*00011dd0*/ MOV         R1, #6 
    /*00011dd4*/ LDRD        R2, [R3, #-8] 
    /*00011dd8*/ STR         R1, [SP] 
    /*00011ddc*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00011de0*/ MOV         R0, IP 
    /*00011de4*/ BLX         R1 
    /*00011de8*/ MOV         R4, R0 
    /*00011dec*/ B           H264eDpbInserFrame_x11a6c
    H264eDpbInserFrame_x11df0:
    /*00011df0*/ MOV         R0, R8 
    /*00011df4*/ BL          0x0000000000011DF4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011df8*/ LDR         IP, [R6, #328]              @ 0x148 
    /*00011dfc*/ ADD         R3, R6, #416                @ 0x1a0 
    /*00011e00*/ MOV         R1, #6 
    /*00011e04*/ LDRD        R2, [R3, #-8] 
    /*00011e08*/ STR         R1, [SP] 
    /*00011e0c*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00011e10*/ MOV         R0, IP 
    /*00011e14*/ BLX         R1 
    /*00011e18*/ MOV         R4, R0 
    /*00011e1c*/ B           H264eDpbInserFrame_x11cdc
    H264eDpbInserFrame_x11e20:
    /*00011e20*/ MOV         R0, R8 
    /*00011e24*/ BL          0x0000000000011E24          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011e28*/ LDR         IP, [R5, #328]              @ 0x148 
    /*00011e2c*/ ADD         R3, R5, #416                @ 0x1a0 
    /*00011e30*/ MOV         R1, #6 
    /*00011e34*/ LDRD        R2, [R3, #-8] 
    /*00011e38*/ STR         R1, [SP] 
    /*00011e3c*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00011e40*/ MOV         R0, IP 
    /*00011e44*/ BLX         R1 
    /*00011e48*/ B           H264eDpbInserFrame_x11c3c
    H264eDpbInserFrame_x11e4c:
    /*00011e4c*/ STR         R0, [SP, #4] 
    /*00011e50*/ MOVW        R2, #433                    @ 0x1b1 
    /*00011e54*/ LDR         R3, [PC, #20]               @ 0x0000000000011e70 
    /*00011e58*/ MOV         R1, #10 
    /*00011e5c*/ STR         R2, [SP] 
    /*00011e60*/ MOV         R0, #3 
    /*00011e64*/ MOV         R2, R9 
    /*00011e68*/ BL          0x0000000000011E68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011e6c*/ B           H264eDpbInserFrame_x11c44
    /*00011e70*/ ANDEQ       R0, R0, R4, LSL #19 
FUNC_END H264eDpbInserFrame


FUNC_BEGIN H264eDpbInitRefList_P
    /*00011e74*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00011e78*/ ADD         R5, R0, #8192               @ 0x2000 
    /*00011e7c*/ MOV         R4, #0 
    /*00011e80*/ SUB         SP, SP, #12 
    /*00011e84*/ LDR         R3, [R5, #12] 
    /*00011e88*/ MOV         R2, #1 
    /*00011e8c*/ LDR         R8, [R5, #2872]             @ 0xb38 
    /*00011e90*/ MOV         R6, R0 
    /*00011e94*/ LDR         R3, [R3, #64]               @ 0x40 
    /*00011e98*/ CMP         R8, R4 
    /*00011e9c*/ STR         R4, [R5, #2844]             @ 0xb1c 
    /*00011ea0*/ ADD         R3, R3, #4 
    /*00011ea4*/ STR         R4, [R5, #2848]             @ 0xb20 
    /*00011ea8*/ LSL         R3, R2, R3 
    /*00011eac*/ STR         R3, [SP, #4] 
    /*00011eb0*/ BLE         H264eDpbInitRefList_P_x12134
    /*00011eb4*/ MOVW        SL, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4000] 
    /*00011eb8*/ MOVW        R9, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*00011ebc*/ LDR         FP, [PC, #632]              @ 0x000000000001213c 
    /*00011ec0*/ MOVT        SL, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4000] 
    /*00011ec4*/ MOVT        R9, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*00011ec8*/ MOV         R7, R4 
    /*00011ecc*/ MOV         R3, R8 
    /*00011ed0*/ B           H264eDpbInitRefList_P_x11eec
    H264eDpbInitRefList_P_x11ed4:
    /*00011ed4*/ CMP         R3, #1 
    /*00011ed8*/ BEQ         H264eDpbInitRefList_P_x120e0
    H264eDpbInitRefList_P_x11edc:
    /*00011edc*/ ADD         R7, R7, #1 
    /*00011ee0*/ CMP         R8, R7 
    /*00011ee4*/ BEQ         H264eDpbInitRefList_P_x11f80
    H264eDpbInitRefList_P_x11ee8:
    /*00011ee8*/ LDR         R3, [R5, #2872]             @ 0xb38 
    H264eDpbInitRefList_P_x11eec:
    /*00011eec*/ CMP         R3, R7 
    /*00011ef0*/ BLE         H264eDpbInitRefList_P_x11f10
    /*00011ef4*/ LDR         R3, [R5, #2864]             @ 0xb30 
    /*00011ef8*/ LDR         R2, [R5, #2860]             @ 0xb2c 
    /*00011efc*/ ADD         R3, R7, R3 
    /*00011f00*/ CMP         R3, R2 
    /*00011f04*/ SUBGE       R3, R3, R2 
    /*00011f08*/ LDR         R2, [R5, #2856]             @ 0xb28 
    /*00011f0c*/ LDR         R4, [R2, R3, LSL #2] 
    H264eDpbInitRefList_P_x11f10:
    /*00011f10*/ LDR         R3, [R4, #356]              @ 0x164 
    /*00011f14*/ CMP         R3, #3 
    /*00011f18*/ BEQ         H264eDpbInitRefList_P_x11f30
    /*00011f1c*/ MOV         R3, SL 
    /*00011f20*/ MOVW        R2, #493                    @ 0x1ed 
    /*00011f24*/ MOV         R1, FP 
    /*00011f28*/ MOV         R0, R9 
    /*00011f2c*/ BL          0x0000000000011F2C          @ osal_panic [R_ARM_CALL: +0x0] 
    H264eDpbInitRefList_P_x11f30:
    /*00011f30*/ LDR         R3, [R4, #360]              @ 0x168 
    /*00011f34*/ CMP         R3, #2 
    /*00011f38*/ BNE         H264eDpbInitRefList_P_x11ed4
    /*00011f3c*/ LDR         R2, [R5, #40]               @ 0x28 
    /*00011f40*/ ADD         R7, R7, #1 
    /*00011f44*/ LDR         R3, [R4, #364]              @ 0x16c 
    /*00011f48*/ CMP         R3, R2 
    /*00011f4c*/ LDRHI       R2, [SP, #4] 
    /*00011f50*/ SUBHI       R3, R3, R2 
    /*00011f54*/ STR         R3, [R4, #368]              @ 0x170 
    /*00011f58*/ STR         R3, [R4, #372]              @ 0x174 
    /*00011f5c*/ MOVW        R3, #65535                  @ 0xffff 
    /*00011f60*/ STR         R3, [R4, #376]              @ 0x178 
    /*00011f64*/ CMP         R8, R7 
    /*00011f68*/ LDR         R3, [R5, #2844]             @ 0xb1c 
    /*00011f6c*/ ADD         R2, R3, #1 
    /*00011f70*/ ADD         R3, R5, R3, LSL #2 
    /*00011f74*/ STR         R4, [R3, #2316]             @ 0x90c 
    /*00011f78*/ STR         R2, [R5, #2844]             @ 0xb1c 
    /*00011f7c*/ BNE         H264eDpbInitRefList_P_x11ee8
    H264eDpbInitRefList_P_x11f80:
    /*00011f80*/ LDR         R4, [R5, #2844]             @ 0xb1c 
    /*00011f84*/ LDR         R7, [R5, #2848]             @ 0xb20 
    /*00011f88*/ ADD         LR, R4, R7 
    /*00011f8c*/ CMP         LR, #31 
    /*00011f90*/ BGT         H264eDpbInitRefList_P_x12100
    /*00011f94*/ SUB         R9, R7, #1 
    /*00011f98*/ SUB         SL, R4, #1 
    H264eDpbInitRefList_P_x11f9c:
    /*00011f9c*/ CMP         SL, #0 
    /*00011fa0*/ ADDGT       FP, R6, #10496              @ 0x2900 
    /*00011fa4*/ ADDGT       FP, FP, #12 
    /*00011fa8*/ BLE         H264eDpbInitRefList_P_x11fe8
    H264eDpbInitRefList_P_x11fac:
    /*00011fac*/ MOV         R3, FP 
    /*00011fb0*/ MOV         R2, #0 
    /*00011fb4*/ B           H264eDpbInitRefList_P_x11fd4
    H264eDpbInitRefList_P_x11fb8:
    /*00011fb8*/ LDR         R1, [R3] 
    /*00011fbc*/ LDR         R0, [R3, #4] 
    /*00011fc0*/ LDR         R8, [R1, #372]              @ 0x174 
    /*00011fc4*/ LDR         IP, [R0, #372]              @ 0x174 
    /*00011fc8*/ CMP         R8, IP 
    /*00011fcc*/ STMLT       R3, {R0, R1} 
    /*00011fd0*/ ADD         R3, R3, #4 
    H264eDpbInitRefList_P_x11fd4:
    /*00011fd4*/ CMP         R2, SL 
    /*00011fd8*/ ADD         R2, R2, #1 
    /*00011fdc*/ BLT         H264eDpbInitRefList_P_x11fb8
    /*00011fe0*/ SUBS        SL, SL, #1 
    /*00011fe4*/ BNE         H264eDpbInitRefList_P_x11fac
    H264eDpbInitRefList_P_x11fe8:
    /*00011fe8*/ CMP         R9, #0 
    /*00011fec*/ ADDGT       SL, R6, #10624              @ 0x2980 
    /*00011ff0*/ ADDGT       SL, SL, #12 
    /*00011ff4*/ BLE         H264eDpbInitRefList_P_x12034
    H264eDpbInitRefList_P_x11ff8:
    /*00011ff8*/ MOV         R3, SL 
    /*00011ffc*/ MOV         R2, #0 
    /*00012000*/ B           H264eDpbInitRefList_P_x12020
    H264eDpbInitRefList_P_x12004:
    /*00012004*/ LDR         R1, [R3] 
    /*00012008*/ LDR         R0, [R3, #4] 
    /*0001200c*/ LDR         R8, [R1, #376]              @ 0x178 
    /*00012010*/ LDR         IP, [R0, #376]              @ 0x178 
    /*00012014*/ CMP         R8, IP 
    /*00012018*/ STMGT       R3, {R0, R1} 
    /*0001201c*/ ADD         R3, R3, #4 
    H264eDpbInitRefList_P_x12020:
    /*00012020*/ CMP         R2, R9 
    /*00012024*/ ADD         R2, R2, #1 
    /*00012028*/ BLT         H264eDpbInitRefList_P_x12004
    /*0001202c*/ SUBS        R9, R9, #1 
    /*00012030*/ BNE         H264eDpbInitRefList_P_x11ff8
    H264eDpbInitRefList_P_x12034:
    /*00012034*/ CMP         R4, #0 
    /*00012038*/ BLE         H264eDpbInitRefList_P_x12068
    /*0001203c*/ ADD         R0, R4, #2624               @ 0xa40 
    /*00012040*/ ADD         R3, R6, #10496              @ 0x2900 
    /*00012044*/ ADD         R0, R0, #2 
    /*00012048*/ ADD         R2, R6, #10752              @ 0x2a00 
    /*0001204c*/ ADD         R3, R3, #8 
    /*00012050*/ ADD         R2, R2, #8 
    /*00012054*/ ADD         R0, R6, R0, LSL #2 
    H264eDpbInitRefList_P_x12058:
    /*00012058*/ LDR         R1, [R3, #4]! 
    /*0001205c*/ CMP         R3, R0 
    /*00012060*/ STR         R1, [R2, #4]! 
    /*00012064*/ BNE         H264eDpbInitRefList_P_x12058
    H264eDpbInitRefList_P_x12068:
    /*00012068*/ CMP         R7, #0 
    /*0001206c*/ BLE         H264eDpbInitRefList_P_x120a0
    /*00012070*/ ADD         R0, R7, #2656               @ 0xa60 
    /*00012074*/ ADD         R2, R6, R4, LSL #2 
    /*00012078*/ ADD         R0, R0, #2 
    /*0001207c*/ ADD         R2, R2, #10752              @ 0x2a00 
    /*00012080*/ ADD         R3, R6, #10624              @ 0x2980 
    /*00012084*/ ADD         R2, R2, #8 
    /*00012088*/ ADD         R0, R6, R0, LSL #2 
    /*0001208c*/ ADD         R3, R3, #8 
    H264eDpbInitRefList_P_x12090:
    /*00012090*/ LDR         R1, [R3, #4]! 
    /*00012094*/ CMP         R3, R0 
    /*00012098*/ STR         R1, [R2, #4]! 
    /*0001209c*/ BNE         H264eDpbInitRefList_P_x12090
    H264eDpbInitRefList_P_x120a0:
    /*000120a0*/ CMP         LR, #31 
    /*000120a4*/ MOV         R2, #0 
    /*000120a8*/ STR         LR, [R5, #2828]             @ 0xb0c 
    /*000120ac*/ STR         R2, [R5, #2832]             @ 0xb10 
    /*000120b0*/ BGT         H264eDpbInitRefList_P_x120d4
    /*000120b4*/ ADD         R3, R6, LR, LSL #2 
    /*000120b8*/ ADD         R6, R6, #10880              @ 0x2a80 
    /*000120bc*/ ADD         R3, R3, #10752              @ 0x2a00 
    /*000120c0*/ ADD         R6, R6, #8 
    /*000120c4*/ ADD         R3, R3, #8 
    H264eDpbInitRefList_P_x120c8:
    /*000120c8*/ STR         R2, [R3, #4]! 
    /*000120cc*/ CMP         R3, R6 
    /*000120d0*/ BNE         H264eDpbInitRefList_P_x120c8
    H264eDpbInitRefList_P_x120d4:
    /*000120d4*/ MOV         R0, #0 
    /*000120d8*/ ADD         SP, SP, #12 
    /*000120dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264eDpbInitRefList_P_x120e0:
    /*000120e0*/ MOVW        R3, #65535                  @ 0xffff 
    /*000120e4*/ STR         R3, [R4, #372]              @ 0x174 
    /*000120e8*/ LDR         R3, [R5, #2848]             @ 0xb20 
    /*000120ec*/ ADD         R2, R3, #1 
    /*000120f0*/ ADD         R3, R5, R3, LSL #2 
    /*000120f4*/ STR         R4, [R3, #2444]             @ 0x98c 
    /*000120f8*/ STR         R2, [R5, #2848]             @ 0xb20 
    /*000120fc*/ B           H264eDpbInitRefList_P_x11edc
    H264eDpbInitRefList_P_x12100:
    /*00012100*/ MOVW        R3, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x401c] 
    /*00012104*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*00012108*/ MOVT        R3, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x401c] 
    /*0001210c*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*00012110*/ MOV         R2, #540                    @ 0x21c 
    /*00012114*/ LDR         R1, [PC, #32]               @ 0x000000000001213c 
    /*00012118*/ BL          0x0000000000012118          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001211c*/ LDR         R7, [R5, #2848]             @ 0xb20 
    /*00012120*/ LDR         R4, [R5, #2844]             @ 0xb1c 
    /*00012124*/ SUB         R9, R7, #1 
    /*00012128*/ ADD         LR, R7, R4 
    /*0001212c*/ SUB         SL, R4, #1 
    /*00012130*/ B           H264eDpbInitRefList_P_x11f9c
    H264eDpbInitRefList_P_x12134:
    /*00012134*/ MOV         LR, R4 
    /*00012138*/ B           H264eDpbInitRefList_P_x120a0
    /*0001213c*/ MULEQ       R0, R8, R9 
FUNC_END H264eDpbInitRefList_P


FUNC_BEGIN ShowDpbStatus
    /*00012140*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00012144*/ ADD         R5, R0, #12288              @ 0x3000 
    /*00012148*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0001214c*/ ADD         R4, R0, #8192               @ 0x2000 
    /*00012150*/ ADD         R6, R0, #4096               @ 0x1000 
    /*00012154*/ LDR         LR, [R5, #1988]             @ 0x7c4 
    /*00012158*/ LDR         IP, [R5, #1952]             @ 0x7a0 
    /*0001215c*/ MOVW        R3, #793                    @ 0x319 
    /*00012160*/ LDR         R1, [R6, #3680]             @ 0xe60 
    /*00012164*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4068] 
    /*00012168*/ LDR         R7, [R4, #1704]             @ 0x6a8 
    /*0001216c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4068] 
    /*00012170*/ STR         R0, [SP, #52]               @ 0x34 
    /*00012174*/ LDR         R0, [R6, #3620]             @ 0xe24 
    /*00012178*/ STM         SP, {R3, IP, LR} 
    /*0001217c*/ STR         R1, [SP, #16] 
    /*00012180*/ MOV         R1, #10 
    /*00012184*/ STR         R0, [SP, #12] 
    /*00012188*/ MOV         R0, #3 
    /*0001218c*/ STR         R7, [SP, #20] 
    /*00012190*/ LDR         R3, [PC, #776]              @ 0x00000000000124a0 
    /*00012194*/ LDR         FP, [R4, #2872]             @ 0xb38 
    /*00012198*/ BL          0x0000000000012198          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001219c*/ LDR         LR, [R6, #3680]             @ 0xe60 
    /*000121a0*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x40c4] 
    /*000121a4*/ LDR         IP, [R4, #1704]             @ 0x6a8 
    /*000121a8*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x40c4] 
    /*000121ac*/ LDR         R3, [R6, #3620]             @ 0xe24 
    /*000121b0*/ LDR         R2, [R5, #1988]             @ 0x7c4 
    /*000121b4*/ LDR         R1, [R5, #1952]             @ 0x7a0 
    /*000121b8*/ STR         LR, [SP] 
    /*000121bc*/ STR         IP, [SP, #4] 
    /*000121c0*/ BL          0x00000000000121C0          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000121c4*/ CMP         FP, #0 
    /*000121c8*/ BLE         ShowDpbStatus_x122e4
    /*000121cc*/ LDR         R8, [PC, #716]              @ 0x00000000000124a0 
    /*000121d0*/ MOV         R5, #0 
    /*000121d4*/ MOVW        R9, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*000121d8*/ MOVT        R9, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*000121dc*/ MOV         R6, R5 
    /*000121e0*/ MOVW        SL, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4000] 
    /*000121e4*/ STR         FP, [SP, #44]               @ 0x2c 
    /*000121e8*/ MOVT        SL, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4000] 
    /*000121ec*/ STR         SL, [SP, #48]               @ 0x30 
    ShowDpbStatus_x121f0:
    /*000121f0*/ LDR         IP, [R4, #2872]             @ 0xb38 
    /*000121f4*/ MOVW        R2, #803                    @ 0x323 
    /*000121f8*/ LDR         R3, [SP, #48]               @ 0x30 
    /*000121fc*/ MOV         R1, R8 
    /*00012200*/ CMP         IP, R6 
    /*00012204*/ MOV         R0, R9 
    /*00012208*/ BLE         ShowDpbStatus_x12228
    /*0001220c*/ LDR         IP, [R4, #2864]             @ 0xb30 
    /*00012210*/ LDR         LR, [R4, #2860]             @ 0xb2c 
    /*00012214*/ ADD         IP, R6, IP 
    /*00012218*/ CMP         IP, LR 
    /*0001221c*/ SUBGE       IP, IP, LR 
    /*00012220*/ LDR         LR, [R4, #2856]             @ 0xb28 
    /*00012224*/ LDR         R5, [LR, IP, LSL #2] 
    ShowDpbStatus_x12228:
    /*00012228*/ LDR         IP, [R5, #356]              @ 0x164 
    /*0001222c*/ ADD         R6, R6, #1 
    /*00012230*/ ADD         R7, R5, #416                @ 0x1a0 
    /*00012234*/ CMP         IP, #3 
    /*00012238*/ BEQ         ShowDpbStatus_x12240
    /*0001223c*/ BL          0x000000000001223C          @ osal_panic [R_ARM_CALL: +0x0] 
    ShowDpbStatus_x12240:
    /*00012240*/ STR         R5, [SP, #36]               @ 0x24 
    /*00012244*/ MOVW        IP, #807                    @ 0x327 
    /*00012248*/ LDR         LR, [R5, #380]              @ 0x17c 
    /*0001224c*/ MOV         R3, R8 
    /*00012250*/ MOV         R1, #10 
    /*00012254*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x419c] 
    /*00012258*/ MOV         R0, #3 
    /*0001225c*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x419c] 
    /*00012260*/ STR         LR, [SP, #32] 
    /*00012264*/ LDR         LR, [R5, #376]              @ 0x178 
    /*00012268*/ STR         LR, [SP, #28] 
    /*0001226c*/ LDR         LR, [R5, #372]              @ 0x174 
    /*00012270*/ STR         LR, [SP, #24] 
    /*00012274*/ LDR         LR, [R5, #364]              @ 0x16c 
    /*00012278*/ STR         LR, [SP, #20] 
    /*0001227c*/ LDR         LR, [R5, #360]              @ 0x168 
    /*00012280*/ STR         LR, [SP, #16] 
    /*00012284*/ LDRD        SL, [R7, #-8] 
    /*00012288*/ STRD        SL, [SP, #8] 
    /*0001228c*/ LDR         LR, [R5, #340]              @ 0x154 
    /*00012290*/ STM         SP, {IP, LR} 
    /*00012294*/ BL          0x0000000000012294          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012298*/ LDRD        R2, [R7, #-8] 
    /*0001229c*/ LDR         R1, [R5, #340]              @ 0x154 
    /*000122a0*/ MOVW        R0, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4218] 
    /*000122a4*/ STR         R5, [SP, #20] 
    /*000122a8*/ MOVT        R0, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4218] 
    /*000122ac*/ LDR         IP, [R5, #380]              @ 0x17c 
    /*000122b0*/ STR         IP, [SP, #16] 
    /*000122b4*/ LDR         IP, [R5, #376]              @ 0x178 
    /*000122b8*/ STR         IP, [SP, #12] 
    /*000122bc*/ LDR         IP, [R5, #372]              @ 0x174 
    /*000122c0*/ STR         IP, [SP, #8] 
    /*000122c4*/ LDR         IP, [R5, #364]              @ 0x16c 
    /*000122c8*/ STR         IP, [SP, #4] 
    /*000122cc*/ LDR         IP, [R5, #360]              @ 0x168 
    /*000122d0*/ STR         IP, [SP] 
    /*000122d4*/ BL          0x00000000000122D4          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000122d8*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*000122dc*/ CMP         R3, R6 
    /*000122e0*/ BNE         ShowDpbStatus_x121f0
    ShowDpbStatus_x122e4:
    /*000122e4*/ LDR         R1, [R4, #2844]             @ 0xb1c 
    /*000122e8*/ MOV         R3, #816                    @ 0x330 
    /*000122ec*/ LDR         R0, [R4, #2848]             @ 0xb20 
    /*000122f0*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4104] 
    /*000122f4*/ LDR         LR, [R4, #2832]             @ 0xb10 
    /*000122f8*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4104] 
    /*000122fc*/ LDR         IP, [R4, #2828]             @ 0xb0c 
    /*00012300*/ STR         R1, [SP, #16] 
    /*00012304*/ MOV         R1, #10 
    /*00012308*/ STR         R0, [SP, #12] 
    /*0001230c*/ MOV         R0, #3 
    /*00012310*/ STM         SP, {R3, IP, LR} 
    /*00012314*/ LDR         R3, [PC, #388]              @ 0x00000000000124a0 
    /*00012318*/ BL          0x0000000000012318          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001231c*/ LDR         IP, [R4, #2844]             @ 0xb1c 
    /*00012320*/ LDR         R3, [R4, #2848]             @ 0xb20 
    /*00012324*/ MOVW        R0, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x415c] 
    /*00012328*/ LDR         R2, [R4, #2832]             @ 0xb10 
    /*0001232c*/ MOVT        R0, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x415c] 
    /*00012330*/ LDR         R1, [R4, #2828]             @ 0xb0c 
    /*00012334*/ STR         IP, [SP] 
    /*00012338*/ BL          0x0000000000012338          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0001233c*/ LDR         R3, [R4, #2832]             @ 0xb10 
    /*00012340*/ CMP         R3, #0 
    /*00012344*/ MOVGT       R3, #1 
    /*00012348*/ STRGT       R3, [R4, #2828]             @ 0xb0c 
    /*0001234c*/ STRGT       R3, [R4, #2832]             @ 0xb10 
    /*00012350*/ BLE         ShowDpbStatus_x12490
    ShowDpbStatus_x12354:
    /*00012354*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00012358*/ MOVW        R7, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4278] 
    /*0001235c*/ LDR         R8, [PC, #316]              @ 0x00000000000124a0 
    /*00012360*/ MOVW        R9, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42b4] 
    /*00012364*/ ADD         R5, R3, #10752              @ 0x2a00 
    /*00012368*/ MOVT        R7, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4278] 
    /*0001236c*/ ADD         R5, R5, #12 
    /*00012370*/ MOVT        R9, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42b4] 
    /*00012374*/ MOV         R6, #0 
    ShowDpbStatus_x12378:
    /*00012378*/ LDR         IP, [R5] 
    /*0001237c*/ MOV         R3, R8 
    /*00012380*/ MOV         R2, R7 
    /*00012384*/ MOV         R1, #10 
    /*00012388*/ CMP         IP, #0 
    /*0001238c*/ MOVW        LR, #830                    @ 0x33e 
    /*00012390*/ MOV         R0, #3 
    /*00012394*/ ADD         R6, R6, #1 
    /*00012398*/ BEQ         ShowDpbStatus_x123d8
    /*0001239c*/ LDR         SL, [R4, #2876]             @ 0xb3c 
    /*000123a0*/ STR         SL, [SP, #16] 
    /*000123a4*/ LDR         SL, [IP, #360]              @ 0x168 
    /*000123a8*/ STR         SL, [SP, #12] 
    /*000123ac*/ LDR         SL, [IP, #380]              @ 0x17c 
    /*000123b0*/ STR         IP, [SP, #4] 
    /*000123b4*/ STR         LR, [SP] 
    /*000123b8*/ STR         SL, [SP, #8] 
    /*000123bc*/ BL          0x00000000000123BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000123c0*/ LDR         R1, [R5] 
    /*000123c4*/ LDR         R3, [R4, #2876]             @ 0xb3c 
    /*000123c8*/ MOV         R0, R9 
    /*000123cc*/ LDR         R2, [R1, #360]              @ 0x168 
    /*000123d0*/ LDR         R1, [R1, #380]              @ 0x17c 
    /*000123d4*/ BL          0x00000000000123D4          @ osal_printk [R_ARM_CALL: +0x0] 
    ShowDpbStatus_x123d8:
    /*000123d8*/ LDR         R3, [R4, #2828]             @ 0xb0c 
    /*000123dc*/ ADD         R5, R5, #4 
    /*000123e0*/ CMP         R3, R6 
    /*000123e4*/ BGT         ShowDpbStatus_x12378
    /*000123e8*/ LDR         R3, [R4, #2832]             @ 0xb10 
    /*000123ec*/ CMP         R3, #0 
    /*000123f0*/ BLE         ShowDpbStatus_x12488
    /*000123f4*/ LDR         R3, [SP, #52]               @ 0x34 
    /*000123f8*/ MOVW        R7, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42d4] 
    /*000123fc*/ LDR         R8, [PC, #156]              @ 0x00000000000124a0 
    /*00012400*/ MOVW        R9, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4310] 
    /*00012404*/ ADD         R5, R3, #10880              @ 0x2a80 
    /*00012408*/ MOVT        R7, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42d4] 
    /*0001240c*/ ADD         R5, R5, #12 
    /*00012410*/ MOVT        R9, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4310] 
    /*00012414*/ MOV         R6, #0 
    ShowDpbStatus_x12418:
    /*00012418*/ LDR         IP, [R5] 
    /*0001241c*/ MOV         R3, R8 
    /*00012420*/ MOV         R2, R7 
    /*00012424*/ MOV         R1, #10 
    /*00012428*/ CMP         IP, #0 
    /*0001242c*/ MOVW        LR, #842                    @ 0x34a 
    /*00012430*/ MOV         R0, #3 
    /*00012434*/ ADD         R6, R6, #1 
    /*00012438*/ BEQ         ShowDpbStatus_x12478
    /*0001243c*/ LDR         SL, [R4, #2880]             @ 0xb40 
    /*00012440*/ STR         SL, [SP, #16] 
    /*00012444*/ LDR         SL, [IP, #360]              @ 0x168 
    /*00012448*/ STR         SL, [SP, #12] 
    /*0001244c*/ LDR         SL, [IP, #380]              @ 0x17c 
    /*00012450*/ STR         IP, [SP, #4] 
    /*00012454*/ STR         LR, [SP] 
    /*00012458*/ STR         SL, [SP, #8] 
    /*0001245c*/ BL          0x000000000001245C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012460*/ LDR         R1, [R5] 
    /*00012464*/ LDR         R3, [R4, #2880]             @ 0xb40 
    /*00012468*/ MOV         R0, R9 
    /*0001246c*/ LDR         R2, [R1, #360]              @ 0x168 
    /*00012470*/ LDR         R1, [R1, #380]              @ 0x17c 
    /*00012474*/ BL          0x0000000000012474          @ osal_printk [R_ARM_CALL: +0x0] 
    ShowDpbStatus_x12478:
    /*00012478*/ LDR         R3, [R4, #2832]             @ 0xb10 
    /*0001247c*/ ADD         R5, R5, #4 
    /*00012480*/ CMP         R3, R6 
    /*00012484*/ BGT         ShowDpbStatus_x12418
    ShowDpbStatus_x12488:
    /*00012488*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0001248c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    ShowDpbStatus_x12490:
    /*00012490*/ LDR         R3, [R4, #2828]             @ 0xb0c 
    /*00012494*/ CMP         R3, #0 
    /*00012498*/ BGT         ShowDpbStatus_x12354
    /*0001249c*/ B           ShowDpbStatus_x12488
    /*000124a0*/ @           <UNDEFINED> instruction: 0x000009b0 
FUNC_END ShowDpbStatus


FUNC_BEGIN H264eGetRefType
    /*000124a4*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000124a8*/ SUBS        R6, R3, #0 
    /*000124ac*/ MOV         R5, R0 
    /*000124b0*/ MOV         R7, R1 
    /*000124b4*/ MOV         R4, R2 
    /*000124b8*/ BEQ         H264eGetRefType_x125e0
    H264eGetRefType_x124bc:
    /*000124bc*/ CMP         R4, #0 
    /*000124c0*/ BEQ         H264eGetRefType_x12600
    H264eGetRefType_x124c4:
    /*000124c4*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*000124c8*/ CMP         R3, #0 
    /*000124cc*/ CMPEQ       R7, #0 
    /*000124d0*/ MOVEQ       R3, #0 
    /*000124d4*/ STREQ       R3, [R6] 
    /*000124d8*/ BEQ         H264eGetRefType_x12554
    /*000124dc*/ LDMIB       R4, {R2, R3} 
    /*000124e0*/ CMP         R3, #1 
    /*000124e4*/ BEQ         H264eGetRefType_x125bc
    H264eGetRefType_x124e8:
    /*000124e8*/ LDR         R3, [R4, #20] 
    /*000124ec*/ SUB         R5, R5, #8 
    /*000124f0*/ ADD         R3, R3, #1 
    /*000124f4*/ STR         R3, [R4, #20] 
    /*000124f8*/ CMP         R3, R2 
    /*000124fc*/ BEQ         H264eGetRefType_x1255c
    /*00012500*/ CMP         R5, #1 
    /*00012504*/ BLS         H264eGetRefType_x12578
    /*00012508*/ CMP         R3, #0 
    /*0001250c*/ LDREQ       R3, [R4, #16] 
    /*00012510*/ BEQ         H264eGetRefType_x125a0
    /*00012514*/ MOV         R3, #4 
    /*00012518*/ STR         R3, [R4, #60]               @ 0x3c 
    /*0001251c*/ STR         R3, [R6] 
    H264eGetRefType_x12520:
    /*00012520*/ LDR         R3, [R4, #20] 
    /*00012524*/ LDR         R2, [R4, #4] 
    /*00012528*/ ADD         R3, R3, #1 
    /*0001252c*/ CMP         R3, R2 
    /*00012530*/ BEQ         H264eGetRefType_x12620
    H264eGetRefType_x12534:
    /*00012534*/ LDR         R3, [R4, #8] 
    /*00012538*/ CMP         R3, #1 
    /*0001253c*/ BNE         H264eGetRefType_x12554
    /*00012540*/ LDR         R3, [R4] 
    /*00012544*/ LDR         R2, [R4, #16] 
    /*00012548*/ CMP         R2, R3 
    /*0001254c*/ MOVEQ       R3, #0 
    /*00012550*/ STREQ       R3, [R4, #16] 
    H264eGetRefType_x12554:
    /*00012554*/ MOV         R0, #0 
    /*00012558*/ POP         {R4, R5, R6, R7, R8, PC} 
    H264eGetRefType_x1255c:
    /*0001255c*/ LDR         R3, [R4, #16] 
    /*00012560*/ CMP         R5, #1 
    /*00012564*/ MOV         R2, #0 
    /*00012568*/ STR         R2, [R4, #20] 
    /*0001256c*/ ADD         R3, R3, #1 
    /*00012570*/ STR         R3, [R4, #16] 
    /*00012574*/ BHI         H264eGetRefType_x125a0
    H264eGetRefType_x12578:
    /*00012578*/ MOV         R3, #0 
    /*0001257c*/ MOV         R2, #2 
    /*00012580*/ STR         R2, [R4, #60]               @ 0x3c 
    /*00012584*/ STR         R2, [R6] 
    /*00012588*/ STR         R3, [R4, #20] 
    /*0001258c*/ STR         R3, [R4, #16] 
    /*00012590*/ LDR         R3, [R6] 
    /*00012594*/ CMP         R3, #4 
    /*00012598*/ BNE         H264eGetRefType_x12534
    /*0001259c*/ B           H264eGetRefType_x12520
    H264eGetRefType_x125a0:
    /*000125a0*/ LDR         R2, [R4] 
    /*000125a4*/ CMP         R3, R2 
    /*000125a8*/ MOVEQ       R3, #2 
    /*000125ac*/ MOVNE       R3, #3 
    /*000125b0*/ STR         R3, [R4, #60]               @ 0x3c 
    /*000125b4*/ STR         R3, [R6] 
    /*000125b8*/ B           H264eGetRefType_x12534
    H264eGetRefType_x125bc:
    /*000125bc*/ CMP         R2, #1 
    /*000125c0*/ BNE         H264eGetRefType_x124e8
    /*000125c4*/ LDR         R3, [R4] 
    /*000125c8*/ CMP         R3, #1 
    /*000125cc*/ MOVEQ       R3, #2 
    /*000125d0*/ STREQ       R3, [R4, #60]               @ 0x3c 
    /*000125d4*/ STREQ       R3, [R6] 
    /*000125d8*/ BNE         H264eGetRefType_x124e8
    /*000125dc*/ B           H264eGetRefType_x12554
    H264eGetRefType_x125e0:
    /*000125e0*/ MOVW        R3, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4330] 
    /*000125e4*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*000125e8*/ MOVT        R3, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4330] 
    /*000125ec*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*000125f0*/ MOVW        R2, #855                    @ 0x357 
    /*000125f4*/ LDR         R1, [PC, #52]               @ 0x0000000000012630 
    /*000125f8*/ BL          0x00000000000125F8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000125fc*/ B           H264eGetRefType_x124bc
    H264eGetRefType_x12600:
    /*00012600*/ MOVW        R3, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4348] 
    /*00012604*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e34] 
    /*00012608*/ MOVT        R3, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4348] 
    /*0001260c*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e34] 
    /*00012610*/ MOV         R2, #856                    @ 0x358 
    /*00012614*/ LDR         R1, [PC, #20]               @ 0x0000000000012630 
    /*00012618*/ BL          0x0000000000012618          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001261c*/ B           H264eGetRefType_x124c4
    H264eGetRefType_x12620:
    /*00012620*/ MOV         R3, #5 
    /*00012624*/ STR         R3, [R4, #60]               @ 0x3c 
    /*00012628*/ STR         R3, [R6] 
    /*0001262c*/ B           H264eGetRefType_x12534
    /*00012630*/ ANDEQ       R0, R0, R0, ASR #19 
FUNC_END H264eGetRefType


FUNC_BEGIN H264eBackupPoc
    /*00012634*/ ADD         R3, R0, #4096               @ 0x1000 
    /*00012638*/ MOV         R0, #0 
    /*0001263c*/ LDR         R1, [R3, #3684]             @ 0xe64 
    /*00012640*/ LDR         R2, [R3, #3688]             @ 0xe68 
    /*00012644*/ STR         R1, [R3, #3680]             @ 0xe60 
    /*00012648*/ STR         R2, [R3, #3664]             @ 0xe50 
    /*0001264c*/ BX          LR 
FUNC_END H264eBackupPoc


FUNC_BEGIN BS_PUT_BITS
    /*00012650*/ CMP         R2, #32 
    /*00012654*/ PUSH        {R4, R5, R6, LR} 
    /*00012658*/ BGT         BS_PUT_BITS_x12728
    /*0001265c*/ MOV         LR, R2 
    /*00012660*/ LDR         R3, [R0] 
    /*00012664*/ RSB         R2, R2, #32 
    /*00012668*/ UXTH        IP, LR 
    BS_PUT_BITS_x1266c:
    /*0001266c*/ LDR         R5, [R0, #4] 
    /*00012670*/ SBFX        R4, R3, #5, #16 
    /*00012674*/ LSL         R1, R1, R2 
    /*00012678*/ STRH        R4, [R0, #10] 
    /*0001267c*/ AND         R3, R3, #31 
    /*00012680*/ LDR         R2, [R5, R4, LSL #2] 
    /*00012684*/ ORR         R3, R2, R1, LSR R3 
    /*00012688*/ STR         R3, [R5, R4, LSL #2] 
    /*0001268c*/ LDR         R2, [R0] 
    /*00012690*/ LDRSH       R3, [R0, #10] 
    /*00012694*/ LDR         R4, [R0, #4] 
    /*00012698*/ MVN         R2, R2 
    /*0001269c*/ AND         R2, R2, #31 
    /*000126a0*/ LSL         R1, R1, R2 
    /*000126a4*/ ADD         R3, R3, #1 
    /*000126a8*/ LSL         R1, R1, #1 
    /*000126ac*/ STR         R1, [R4, R3, LSL #2] 
    /*000126b0*/ LDRH        R3, [R0, #8] 
    /*000126b4*/ LDR         R2, [R0] 
    /*000126b8*/ ADD         R3, IP, R3 
    /*000126bc*/ ADD         R2, R2, LR 
    /*000126c0*/ STR         R2, [R0] 
    /*000126c4*/ UXTH        R3, R3 
    /*000126c8*/ SXTH        R2, R3 
    /*000126cc*/ CMP         R2, #31 
    /*000126d0*/ STRHLE      R2, [R0, #8] 
    /*000126d4*/ BLE         BS_PUT_BITS_x12720
    /*000126d8*/ LDR         R1, [R0, #4] 
    /*000126dc*/ SUB         R3, R3, #32 
    /*000126e0*/ LDRSH       IP, [R0, #10] 
    /*000126e4*/ MOV         R2, #255                    @ 0xff 
    /*000126e8*/ STRH        R3, [R0, #8] 
    /*000126ec*/ MOVT        R2, #255                    @ 0xff 
    /*000126f0*/ MOV         R3, #65280                  @ 0xff00 
    /*000126f4*/ MOVT        R3, #65280                  @ 0xff00 
    /*000126f8*/ LDR         LR, [R1, IP, LSL #2] 
    /*000126fc*/ AND         R3, R3, LR, LSL #8 
    /*00012700*/ AND         R2, R2, LR, LSR #8 
    /*00012704*/ ORR         R2, R2, R3 
    /*00012708*/ STR         R2, [R1, IP, LSL #2] 
    /*0001270c*/ LDRSH       R1, [R0, #10] 
    /*00012710*/ LDR         R2, [R0, #4] 
    /*00012714*/ LDR         R3, [R2, R1, LSL #2] 
    /*00012718*/ ROR         R3, R3, #16 
    /*0001271c*/ STR         R3, [R2, R1, LSL #2] 
    BS_PUT_BITS_x12720:
    /*00012720*/ MOV         R0, #1 
    /*00012724*/ POP         {R4, R5, R6, PC} 
    BS_PUT_BITS_x12728:
    /*00012728*/ LDR         IP, [R0] 
    /*0001272c*/ SUB         R3, R2, #32 
    /*00012730*/ LDR         LR, [R0, #4] 
    /*00012734*/ MOV         R2, #0 
    /*00012738*/ SBFX        IP, IP, #5, #16 
    /*0001273c*/ STRH        IP, [R0, #10] 
    /*00012740*/ ADD         IP, IP, #1 
    /*00012744*/ UXTH        R3, R3 
    /*00012748*/ STR         R2, [LR, IP, LSL #2] 
    /*0001274c*/ LDRH        IP, [R0, #8] 
    /*00012750*/ LDR         LR, [R0] 
    /*00012754*/ ADD         IP, R3, IP 
    /*00012758*/ ADD         R3, R3, LR 
    /*0001275c*/ STR         R3, [R0] 
    /*00012760*/ UXTH        IP, IP 
    /*00012764*/ SXTH        LR, IP 
    /*00012768*/ CMP         LR, #31 
    /*0001276c*/ BLE         BS_PUT_BITS_x127c8
    /*00012770*/ LDRSH       R5, [R0, #10] 
    /*00012774*/ SUB         IP, IP, #32 
    /*00012778*/ LDR         R4, [R0, #4] 
    /*0001277c*/ MOV         R3, #255                    @ 0xff 
    /*00012780*/ STRH        IP, [R0, #8] 
    /*00012784*/ MOVT        R3, #255                    @ 0xff 
    /*00012788*/ MOV         LR, #65280                  @ 0xff00 
    /*0001278c*/ MOVT        LR, #65280                  @ 0xff00 
    /*00012790*/ LDR         R6, [R4, R5, LSL #2] 
    /*00012794*/ MOV         IP, #32 
    /*00012798*/ AND         LR, LR, R6, LSL #8 
    /*0001279c*/ AND         R3, R3, R6, LSR #8 
    /*000127a0*/ ORR         R3, R3, LR 
    /*000127a4*/ STR         R3, [R4, R5, LSL #2] 
    /*000127a8*/ LDRSH       R5, [R0, #10] 
    /*000127ac*/ MOV         LR, IP 
    /*000127b0*/ LDR         R4, [R0, #4] 
    /*000127b4*/ LDR         R3, [R4, R5, LSL #2] 
    /*000127b8*/ ROR         R3, R3, #16 
    /*000127bc*/ STR         R3, [R4, R5, LSL #2] 
    /*000127c0*/ LDR         R3, [R0] 
    /*000127c4*/ B           BS_PUT_BITS_x1266c
    BS_PUT_BITS_x127c8:
    /*000127c8*/ MOV         IP, #32 
    /*000127cc*/ STRH        LR, [R0, #8] 
    /*000127d0*/ MOV         LR, IP 
    /*000127d4*/ B           BS_PUT_BITS_x1266c
FUNC_END BS_PUT_BITS


FUNC_BEGIN BS_PROC_LAST_BITS
    /*000127d8*/ LDRSH       R3, [R0, #8] 
    /*000127dc*/ CMP         R3, #0 
    /*000127e0*/ BXEQ        LR 
    /*000127e4*/ LDR         R2, [R0] 
    /*000127e8*/ MOV         R3, #255                    @ 0xff 
    /*000127ec*/ LDR         IP, [R0, #4] 
    /*000127f0*/ MOVT        R3, #255                    @ 0xff 
    /*000127f4*/ SBFX        R2, R2, #5, #16 
    /*000127f8*/ STRH        R2, [R0, #10] 
    /*000127fc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00012800*/ MOV         R1, #65280                  @ 0xff00 
    /*00012804*/ LDR         LR, [IP, R2, LSL #2] 
    /*00012808*/ MOVT        R1, #65280                  @ 0xff00 
    /*0001280c*/ AND         R1, R1, LR, LSL #8 
    /*00012810*/ AND         R3, R3, LR, LSR #8 
    /*00012814*/ ORR         R3, R3, R1 
    /*00012818*/ STR         R3, [IP, R2, LSL #2] 
    /*0001281c*/ LDRSH       R1, [R0, #10] 
    /*00012820*/ LDR         R2, [R0, #4] 
    /*00012824*/ LDR         R3, [R2, R1, LSL #2] 
    /*00012828*/ ROR         R3, R3, #16 
    /*0001282c*/ STR         R3, [R2, R1, LSL #2] 
    /*00012830*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END BS_PROC_LAST_BITS


FUNC_BEGIN H264eDrvUpdateROI
    /*00012834*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012838*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001283c*/ PUSH        {R4, R5, R6, LR} 
    /*00012840*/ MOV         R5, R1 
    /*00012844*/ LDR         R4, [R3, R0, LSL #2] 
    /*00012848*/ MOV         R6, R2 
    /*0001284c*/ CMP         R4, #0 
    /*00012850*/ BEQ         H264eDrvUpdateROI_x1288c
    H264eDrvUpdateROI_x12854:
    /*00012854*/ MOV         R0, #25 
    /*00012858*/ BL          0x0000000000012858          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001285c*/ LDR         R3, [R0, #56]               @ 0x38 
    /*00012860*/ CMP         R3, #0 
    /*00012864*/ POPEQ       {R4, R5, R6, PC} 
    /*00012868*/ MOV         R0, #25 
    /*0001286c*/ ADD         R4, R4, #8192               @ 0x2000 
    /*00012870*/ BL          0x0000000000012870          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00012874*/ MOV         R2, R6 
    /*00012878*/ LDR         R1, [R4, #1008]             @ 0x3f0 
    /*0001287c*/ LDR         R3, [R0, #56]               @ 0x38 
    /*00012880*/ MOV         R0, R5 
    /*00012884*/ POP         {R4, R5, R6, LR} 
    /*00012888*/ BX          R3 
    H264eDrvUpdateROI_x1288c:
    /*0001288c*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x435c] 
    /*00012890*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x9d0] 
    /*00012894*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x435c] 
    /*00012898*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x9d0] 
    /*0001289c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4370] 
    /*000128a0*/ MOVW        R2, #1182                   @ 0x49e 
    /*000128a4*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4370] 
    /*000128a8*/ BL          0x00000000000128A8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000128ac*/ B           H264eDrvUpdateROI_x12854
FUNC_END H264eDrvUpdateROI


FUNC_BEGIN H264E_DRV_CheckProfile
    /*000128b0*/ MOV         R3, #1 
    /*000128b4*/ LSL         R0, R3, R0 
    /*000128b8*/ ANDS        R0, R0, #15 
    /*000128bc*/ MOVNE       R0, R3 
    /*000128c0*/ BX          LR 
FUNC_END H264E_DRV_CheckProfile


FUNC_BEGIN H264E_DRV_CheckBFrmNum
    /*000128c4*/ SUB         R0, R0, #1 
    /*000128c8*/ CMP         R0, #2 
    /*000128cc*/ MOVHI       R0, #0 
    /*000128d0*/ MOVLS       R0, #1 
    /*000128d4*/ BX          LR 
FUNC_END H264E_DRV_CheckBFrmNum


FUNC_BEGIN H264E_DRV_LowDelayBSupport
    /*000128d8*/ MOV         R0, #0 
    /*000128dc*/ BX          LR 
FUNC_END H264E_DRV_LowDelayBSupport


FUNC_BEGIN H264E_DRV_BFrameSupport
    /*000128e0*/ MOV         R0, #0 
    /*000128e4*/ BX          LR 
FUNC_END H264E_DRV_BFrameSupport


FUNC_BEGIN H264E_DRV_IsSupportRefRcnShareBuf
    /*000128e8*/ MOV         R0, #1 
    /*000128ec*/ BX          LR 
FUNC_END H264E_DRV_IsSupportRefRcnShareBuf


FUNC_BEGIN H264E_DRV_TopIpixBufNeed
    /*000128f0*/ MOV         R0, #0 
    /*000128f4*/ BX          LR 
FUNC_END H264E_DRV_TopIpixBufNeed


FUNC_BEGIN H264E_DRV_RefRcnCompressSupport
    /*000128f8*/ MOV         R0, #1 
    /*000128fc*/ BX          LR 
FUNC_END H264E_DRV_RefRcnCompressSupport


FUNC_BEGIN H264E_DRV_CheckIpcm
    /*00012900*/ CMP         R0, #1 
    /*00012904*/ MOVHI       R0, #0 
    /*00012908*/ MOVLS       R0, #1 
    /*0001290c*/ BX          LR 
FUNC_END H264E_DRV_CheckIpcm


FUNC_BEGIN H264E_DRV_CheckSse
    /*00012910*/ MOV         R0, #0 
    /*00012914*/ BX          LR 
FUNC_END H264E_DRV_CheckSse


FUNC_BEGIN H264E_DRV_CheckPowerSavePara
    /*00012918*/ CMP         R0, #2 
    /*0001291c*/ BHI         H264E_DRV_CheckPowerSavePara_x12928
    /*00012920*/ MOV         R0, #0 
    /*00012924*/ BX          LR 
    H264E_DRV_CheckPowerSavePara_x12928:
    /*00012928*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001292c*/ SUB         SP, SP, #12 
    /*00012930*/ MOV         R3, #180                    @ 0xb4 
    /*00012934*/ MOV         R1, #10 
    /*00012938*/ STR         R0, [SP, #4] 
    /*0001293c*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43b0] 
    /*00012940*/ STR         R3, [SP] 
    /*00012944*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43b0] 
    /*00012948*/ LDR         R3, [PC, #20]               @ 0x0000000000012964 
    /*0001294c*/ MOV         R0, #3 
    /*00012950*/ BL          0x0000000000012950          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012954*/ MOVW        R0, #32771                  @ 0x8003 
    /*00012958*/ MOVT        R0, #40970                  @ 0xa00a 
    /*0001295c*/ ADD         SP, SP, #12 
    /*00012960*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00012964*/ ANDEQ       R0, R0, R4, ROR #19 
FUNC_END H264E_DRV_CheckPowerSavePara


FUNC_BEGIN H264E_DRV_TileCal
    /*00012968*/ ADD         R3, R0, #12288              @ 0x3000 
    /*0001296c*/ STR         R1, [R3, #2396]             @ 0x95c 
    /*00012970*/ LDR         R2, [R0, #980]              @ 0x3d4 
    /*00012974*/ STR         R2, [R3, #2404]             @ 0x964 
    /*00012978*/ BX          LR 
FUNC_END H264E_DRV_TileCal


FUNC_BEGIN H264E_DRV_Reset
    /*0001297c*/ PUSH        {R4, LR} 
    /*00012980*/ ADD         R2, R1, #12288              @ 0x3000 
    /*00012984*/ LDR         R3, [R1, #76]               @ 0x4c 
    /*00012988*/ MOV         R4, R0 
    /*0001298c*/ ORR         R3, R3, #1 
    /*00012990*/ STR         R3, [R1, #76]               @ 0x4c 
    H264E_DRV_Reset_x12994:
    /*00012994*/ LDR         R3, [R2, #16] 
    /*00012998*/ TST         R3, #1 
    /*0001299c*/ BEQ         H264E_DRV_Reset_x12994
    /*000129a0*/ MOV         R0, #25 
    /*000129a4*/ BL          0x00000000000129A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000129a8*/ MOV         R1, #0 
    /*000129ac*/ LDR         R3, [R0, #28] 
    /*000129b0*/ MOV         R0, R4 
    /*000129b4*/ POP         {R4, LR} 
    /*000129b8*/ BX          R3 
FUNC_END H264E_DRV_Reset


FUNC_BEGIN H264E_DRV_CheckMeSize
    /*000129bc*/ MOV         R0, #1 
    /*000129c0*/ BX          LR 
FUNC_END H264E_DRV_CheckMeSize


FUNC_BEGIN H264E_DRV_InitIpcm
    /*000129c4*/ MOV         R3, #0 
    /*000129c8*/ STR         R3, [R0] 
    /*000129cc*/ BX          LR 
FUNC_END H264E_DRV_InitIpcm


FUNC_BEGIN H264E_DRV_Restore
    /*000129d0*/ BX          LR 
FUNC_END H264E_DRV_Restore


FUNC_BEGIN H264E_DRV_Init
    /*000129d4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000129d8*/ MOV         R0, #25 
    /*000129dc*/ SUB         SP, SP, #12 
    /*000129e0*/ BL          0x00000000000129E0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000129e4*/ CMP         R0, #0 
    /*000129e8*/ MOVNE       R0, #0 
    /*000129ec*/ BEQ         H264E_DRV_Init_x129f8
    H264E_DRV_Init_x129f0:
    /*000129f0*/ ADD         SP, SP, #12 
    /*000129f4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    H264E_DRV_Init_x129f8:
    /*000129f8*/ MOVW        R3, #303                    @ 0x12f 
    /*000129fc*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4404] 
    /*00012a00*/ STR         R3, [SP] 
    /*00012a04*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4404] 
    /*00012a08*/ LDR         R3, [PC, #16]               @ 0x0000000000012a20 
    /*00012a0c*/ MOV         R1, #10 
    /*00012a10*/ MOV         R0, #3 
    /*00012a14*/ BL          0x0000000000012A14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012a18*/ MVN         R0, #0 
    /*00012a1c*/ B           H264E_DRV_Init_x129f0
    /*00012a20*/ ANDEQ       R0, R0, R4, LSL #20 
FUNC_END H264E_DRV_Init


FUNC_BEGIN H264E_DRV_Exit
    /*00012a24*/ BX          LR 
FUNC_END H264E_DRV_Exit


FUNC_BEGIN H264E_DRV_WriteRegs
    /*00012a28*/ MOV         IP, #0 
    /*00012a2c*/ MOV         R2, #1 
    /*00012a30*/ BFI         R2, IP, #1, #1 
    /*00012a34*/ ORR         R2, R2, #4 
    /*00012a38*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00012a3c*/ BFI         R2, IP, #3, #1 
    /*00012a40*/ LDR         R4, [R1] 
    /*00012a44*/ MOVW        LR, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012a48*/ BFI         R2, IP, #6, #1 
    /*00012a4c*/ MOVT        LR, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00012a50*/ BFI         R2, IP, #4, #1 
    /*00012a54*/ MVN         R5, #0 
    /*00012a58*/ LDR         R4, [LR, R4, LSL #2] 
    /*00012a5c*/ BFI         R2, IP, #5, #1 
    /*00012a60*/ BFI         R2, IP, #7, #1 
    /*00012a64*/ ADD         LR, R3, #264                @ 0x108 
    /*00012a68*/ BFI         R2, IP, #8, #1 
    /*00012a6c*/ ADD         R6, R4, #12288              @ 0x3000 
    /*00012a70*/ LDR         LR, [R4, LR, LSL #2] 
    /*00012a74*/ BFI         R2, IP, #9, #1 
    /*00012a78*/ STR         R2, [R0] 
    /*00012a7c*/ MOVW        R2, #65535                  @ 0xffff 
    /*00012a80*/ STR         R5, [R0, #80]               @ 0x50 
    /*00012a84*/ MOV         R8, #1 
    /*00012a88*/ STR         R2, [R0, #200]              @ 0xc8 
    /*00012a8c*/ LDR         R2, [R0, #16] 
    /*00012a90*/ LDR         R5, [R6, #1988]             @ 0x7c4 
    /*00012a94*/ BFI         R2, IP, #0, #1 
    /*00012a98*/ LDR         R7, [R1, #16] 
    /*00012a9c*/ ORR         R2, R2, #2 
    /*00012aa0*/ SUB         R9, R5, #4 
    /*00012aa4*/ BFI         R2, R8, #2, #2 
    /*00012aa8*/ CMP         R9, R8 
    /*00012aac*/ BFI         R2, IP, #5, #1 
    /*00012ab0*/ BFI         R2, IP, #9, #1 
    /*00012ab4*/ BFI         R2, IP, #22, #2 
    /*00012ab8*/ ORR         R2, R2, #131072             @ 0x20000 
    /*00012abc*/ BFI         R2, R7, #18, #2 
    /*00012ac0*/ BLS         H264E_DRV_WriteRegs_x12ca8
    /*00012ac4*/ CMP         R5, #10 
    /*00012ac8*/ BEQ         H264E_DRV_WriteRegs_x12cf4
    /*00012acc*/ LDR         R9, [R1, #8] 
    /*00012ad0*/ ADD         R7, R4, #8192               @ 0x2000 
    /*00012ad4*/ BFI         R2, IP, #16, #1 
    /*00012ad8*/ CLZ         IP, R9 
    /*00012adc*/ LDR         R9, [R7, #2880]             @ 0xb40 
    /*00012ae0*/ BFI         R2, R8, #10, #2 
    /*00012ae4*/ LDR         R7, [R7, #2876]             @ 0xb3c 
    /*00012ae8*/ ADDS        R8, R9, #0 
    /*00012aec*/ LSR         IP, IP, #5 
    /*00012af0*/ BFI         R2, IP, #12, #1 
    /*00012af4*/ MOVNE       R8, #1 
    /*00012af8*/ CMP         R7, #0 
    /*00012afc*/ BFI         R2, R8, #14, #1 
    /*00012b00*/ BEQ         H264E_DRV_WriteRegs_x12b10
    /*00012b04*/ LDR         IP, [R7, #360]              @ 0x168 
    /*00012b08*/ CMP         IP, #1 
    /*00012b0c*/ BEQ         H264E_DRV_WriteRegs_x12b28
    H264E_DRV_WriteRegs_x12b10:
    /*00012b10*/ CMP         R9, #0 
    /*00012b14*/ LDRNE       IP, [R9, #360]              @ 0x168 
    /*00012b18*/ MOVEQ       IP, R9 
    /*00012b1c*/ SUBNE       IP, IP, #1 
    /*00012b20*/ CLZNE       IP, IP 
    /*00012b24*/ LSRNE       IP, IP, #5 
    H264E_DRV_WriteRegs_x12b28:
    /*00012b28*/ SUBS        R5, R5, #12 
    /*00012b2c*/ BFI         R2, IP, #13, #1 
    /*00012b30*/ ORR         R2, R2, #1073741824         @ 0x40000000 
    /*00012b34*/ MOVNE       R5, #1 
    /*00012b38*/ BFI         R2, R5, #8, #1 
    /*00012b3c*/ BFC         R2, #20, #1 
    /*00012b40*/ BFC         R2, #21, #1 
    /*00012b44*/ BFC         R2, #28, #1 
    /*00012b48*/ BFC         R2, #6, #1 
    /*00012b4c*/ BFC         R2, #7, #1 
    /*00012b50*/ BFC         R2, #15, #1 
    H264E_DRV_WriteRegs_x12b54:
    /*00012b54*/ LDR         IP, [R4, #1196]             @ 0x4ac 
    /*00012b58*/ ADD         R3, R3, #131                @ 0x83 
    /*00012b5c*/ LDR         IP, [IP, #12] 
    /*00012b60*/ CMP         IP, #39                     @ 0x27 
    /*00012b64*/ ORREQ       R2, R2, #-2147483648        @ 0x80000000 
    /*00012b68*/ LDRNE       IP, [R6, #2008]             @ 0x7d8 
    /*00012b6c*/ BFINE       R2, IP, #31, #1 
    /*00012b70*/ MOV         IP, #0 
    /*00012b74*/ ORR         R2, R2, #16 
    /*00012b78*/ STR         R2, [R0, #16] 
    /*00012b7c*/ LDR         R3, [R4, R3, LSL #3] 
    /*00012b80*/ STR         R3, [R0, #88]               @ 0x58 
    /*00012b84*/ LDR         R2, [R1, #20] 
    /*00012b88*/ LDR         R3, [R0, #24] 
    /*00012b8c*/ AND         R2, R2, #31 
    /*00012b90*/ BFI         R3, R2, #5, #5 
    /*00012b94*/ BFI         R3, R2, #0, #5 
    /*00012b98*/ BFC         R3, #18, #1 
    /*00012b9c*/ STR         R3, [R0, #24] 
    /*00012ba0*/ LDR         R3, [R6, #2636]             @ 0xa4c 
    /*00012ba4*/ CMP         R3, #2 
    /*00012ba8*/ BFIEQ       IP, IP, #15, #1 
    /*00012bac*/ BFCEQ       IP, #14, #1 
    /*00012bb0*/ BEQ         H264E_DRV_WriteRegs_x12bc4
    /*00012bb4*/ CMP         R3, #0 
    /*00012bb8*/ MOVNE       IP, #32768                  @ 0x8000 
    /*00012bbc*/ BFCNE       IP, #14, #1 
    /*00012bc0*/ MOVEQ       IP, #49152                  @ 0xc000 
    H264E_DRV_WriteRegs_x12bc4:
    /*00012bc4*/ STR         IP, [R0, #92]               @ 0x5c 
    /*00012bc8*/ MOV         R3, #0 
    /*00012bcc*/ LDR         R2, [R0, #104]              @ 0x68 
    /*00012bd0*/ BFC         R3, #30, #1 
    /*00012bd4*/ BFC         R3, #0, #10 
    /*00012bd8*/ MOV         R5, #65536                  @ 0x10000 
    /*00012bdc*/ ORR         R2, R2, #65536              @ 0x10000 
    /*00012be0*/ STR         R2, [R0, #104]              @ 0x68 
    /*00012be4*/ LDR         IP, [R0, #108]              @ 0x6c 
    /*00012be8*/ BFC         R3, #10, #10 
    /*00012bec*/ BFC         R3, #20, #10 
    /*00012bf0*/ MOVW        R1, #6250                   @ 0x186a 
    /*00012bf4*/ MOVT        R1, #1 
    /*00012bf8*/ ADD         R2, LR, #1552               @ 0x610 
    /*00012bfc*/ STR         IP, [R0, #108]              @ 0x6c 
    /*00012c00*/ MOV         IP, #4 
    /*00012c04*/ STR         R1, [R0, #196]              @ 0xc4 
    /*00012c08*/ MOV         R1, #12 
    /*00012c0c*/ STR         R5, [R0, #204]              @ 0xcc 
    /*00012c10*/ MOVW        R5, #514                    @ 0x202 
    /*00012c14*/ STR         R3, [R0, #212]              @ 0xd4 
    /*00012c18*/ MOVT        R5, #1028                   @ 0x404 
    /*00012c1c*/ LDR         R3, [R4, #1196]             @ 0x4ac 
    /*00012c20*/ LDR         R6, [R0, #20] 
    /*00012c24*/ LDR         R3, [R3] 
    /*00012c28*/ SUB         R3, R3, #1 
    /*00012c2c*/ UXTH        R3, R3 
    /*00012c30*/ BFI         R6, R3, #0, #16 
    /*00012c34*/ STR         R6, [R0, #20] 
    /*00012c38*/ LDR         R3, [R4, #1196]             @ 0x4ac 
    /*00012c3c*/ MOV         R6, #85                     @ 0x55 
    /*00012c40*/ LDR         R4, [R0, #20] 
    /*00012c44*/ LDR         R3, [R3, #4] 
    /*00012c48*/ SUB         R3, R3, #1 
    /*00012c4c*/ UXTH        R3, R3 
    /*00012c50*/ BFI         R4, R3, #16, #16 
    /*00012c54*/ STR         R4, [R0, #20] 
    /*00012c58*/ LDR         R3, [LR, #84]               @ 0x54 
    /*00012c5c*/ STR         R3, [R0, #84]               @ 0x54 
    /*00012c60*/ LDRB        R3, [LR, #1558]             @ 0x616 
    /*00012c64*/ LDRB        R4, [LR, #1553]             @ 0x611 
    /*00012c68*/ LDRB        R0, [LR, #1555]             @ 0x613 
    /*00012c6c*/ AND         R3, R3, #236                @ 0xec 
    /*00012c70*/ STRB        IP, [LR, #1552]             @ 0x610 
    /*00012c74*/ BFC         R3, #5, #1 
    /*00012c78*/ BFI         R0, R1, #4, #4 
    /*00012c7c*/ STRB        R3, [LR, #1558]             @ 0x616 
    /*00012c80*/ STRB        R0, [LR, #1555]             @ 0x613 
    /*00012c84*/ BFI         R4, IP, #0, #4 
    /*00012c88*/ STR         R5, [LR, #1560]             @ 0x618 
    /*00012c8c*/ MOV         R0, #0 
    /*00012c90*/ STRB        R4, [LR, #1553]             @ 0x611 
    /*00012c94*/ STRB        R6, [LR, #1556]             @ 0x614 
    /*00012c98*/ LDRH        R3, [R2, #2] 
    /*00012c9c*/ BFI         R3, R1, #4, #8 
    /*00012ca0*/ STRH        R3, [R2, #2] 
    /*00012ca4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    H264E_DRV_WriteRegs_x12ca8:
    /*00012ca8*/ LDR         R5, [R1, #4] 
    /*00012cac*/ ORR         R2, R2, #65536              @ 0x10000 
    /*00012cb0*/ BFI         R2, IP, #10, #2 
    /*00012cb4*/ LDR         R7, [R6, #2004]             @ 0x7d4 
    /*00012cb8*/ CLZ         R5, R5 
    /*00012cbc*/ LSR         R5, R5, #5 
    /*00012cc0*/ BFI         R2, R5, #12, #1 
    /*00012cc4*/ BFI         R2, IP, #13, #1 
    /*00012cc8*/ BFI         R2, IP, #14, #1 
    /*00012ccc*/ ORR         R2, R2, #1073741824         @ 0x40000000 
    /*00012cd0*/ ORR         R2, R2, #256                @ 0x100 
    /*00012cd4*/ BFI         R2, IP, #20, #1 
    /*00012cd8*/ BFI         R2, IP, #21, #1 
    /*00012cdc*/ BFI         R2, IP, #28, #1 
    /*00012ce0*/ BFI         R2, IP, #6, #1 
    /*00012ce4*/ BFI         R2, IP, #7, #1 
    /*00012ce8*/ BFI         R2, IP, #15, #1 
    /*00012cec*/ BFI         R2, R7, #31, #1 
    /*00012cf0*/ B           H264E_DRV_WriteRegs_x12b54
    H264E_DRV_WriteRegs_x12cf4:
    /*00012cf4*/ LDR         R7, [R1, #12] 
    /*00012cf8*/ ADD         R8, R4, #8192               @ 0x2000 
    /*00012cfc*/ BFI         R2, IP, #16, #1 
    /*00012d00*/ MOV         R9, #2 
    /*00012d04*/ CLZ         IP, R7 
    /*00012d08*/ LDR         R7, [R8, #2876]             @ 0xb3c 
    /*00012d0c*/ BFI         R2, R9, #10, #2 
    /*00012d10*/ LSR         IP, IP, #5 
    /*00012d14*/ CMP         R7, #0 
    /*00012d18*/ BFI         R2, IP, #12, #1 
    /*00012d1c*/ ORR         R2, R2, #16384              @ 0x4000 
    /*00012d20*/ BEQ         H264E_DRV_WriteRegs_x12d30
    /*00012d24*/ LDR         IP, [R7, #360]              @ 0x168 
    /*00012d28*/ CMP         IP, #1 
    /*00012d2c*/ BEQ         H264E_DRV_WriteRegs_x12b28
    H264E_DRV_WriteRegs_x12d30:
    /*00012d30*/ LDR         IP, [R8, #2880]             @ 0xb40 
    /*00012d34*/ CMP         IP, #0 
    /*00012d38*/ LDRNE       IP, [IP, #360]              @ 0x168 
    /*00012d3c*/ SUBNE       IP, IP, #1 
    /*00012d40*/ CLZNE       IP, IP 
    /*00012d44*/ LSRNE       IP, IP, #5 
    /*00012d48*/ B           H264E_DRV_WriteRegs_x12b28
FUNC_END H264E_DRV_WriteRegs


FUNC_BEGIN H264E_DRV_ReadRegs
    /*00012d4c*/ PUSH        {R4, R5, R6, LR} 
    /*00012d50*/ ADD         R5, R0, #12288              @ 0x3000 
    /*00012d54*/ LDR         R3, [R1] 
    /*00012d58*/ MOV         R4, R1 
    /*00012d5c*/ LDR         IP, [R5] 
    /*00012d60*/ MOV         R0, #0 
    /*00012d64*/ LDR         R6, [R1, #4] 
    /*00012d68*/ SUB         SP, SP, #8 
    /*00012d6c*/ AND         IP, IP, #1 
    /*00012d70*/ LDR         R1, [R1, #8] 
    /*00012d74*/ ORR         R3, R3, IP 
    /*00012d78*/ STR         R3, [R4] 
    /*00012d7c*/ LDR         R2, [R5] 
    /*00012d80*/ LDR         LR, [R4, #28] 
    /*00012d84*/ UBFX        R2, R2, #2, #1 
    /*00012d88*/ ORR         R2, R2, R6 
    /*00012d8c*/ STR         R2, [R4, #4] 
    /*00012d90*/ LDR         IP, [R5] 
    /*00012d94*/ CMP         R2, R0 
    /*00012d98*/ UBFX        R2, IP, #3, #1 
    /*00012d9c*/ ORR         R2, R1, R2 
    /*00012da0*/ STR         R2, [R4, #8] 
    /*00012da4*/ LDR         R3, [R5, #4] 
    /*00012da8*/ UBFX        R3, R3, #5, #1 
    /*00012dac*/ ORR         R3, R3, LR 
    /*00012db0*/ STR         R3, [R4, #28] 
    /*00012db4*/ LDR         R2, [R5, #4] 
    /*00012db8*/ STR         R0, [R4, #20] 
    /*00012dbc*/ UBFX        R2, R2, #4, #1 
    /*00012dc0*/ STR         R0, [R4, #24] 
    /*00012dc4*/ ORR         R3, R2, R3 
    /*00012dc8*/ STR         R3, [R4, #28] 
    /*00012dcc*/ BEQ         H264E_DRV_ReadRegs_x12df0
    /*00012dd0*/ MOVW        R3, #1150                   @ 0x47e 
    /*00012dd4*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4450] 
    /*00012dd8*/ STR         R3, [SP] 
    /*00012ddc*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4450] 
    /*00012de0*/ LDR         R3, [PC, #164]              @ 0x0000000000012e8c 
    /*00012de4*/ MOV         R1, #10 
    /*00012de8*/ MOV         R0, #3 
    /*00012dec*/ BL          0x0000000000012DEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    H264E_DRV_ReadRegs_x12df0:
    /*00012df0*/ MOV         R3, #1 
    /*00012df4*/ STR         R3, [R4, #12] 
    /*00012df8*/ LDR         R1, [R5, #2800]             @ 0xaf0 
    /*00012dfc*/ MOV         R0, #0 
    /*00012e00*/ LDR         R3, [R4, #40]               @ 0x28 
    /*00012e04*/ UBFX        R1, R1, #2, #15 
    /*00012e08*/ LDR         R2, [R4, #44]               @ 0x2c 
    /*00012e0c*/ ADD         R3, R3, R1 
    /*00012e10*/ STR         R3, [R4, #40]               @ 0x28 
    /*00012e14*/ LDR         R1, [R5, #2768]             @ 0xad0 
    /*00012e18*/ LDR         R3, [R4, #48]               @ 0x30 
    /*00012e1c*/ UBFX        R1, R1, #2, #17 
    /*00012e20*/ LDR         IP, [R4, #56]               @ 0x38 
    /*00012e24*/ ADD         R2, R2, R1 
    /*00012e28*/ STR         R2, [R4, #44]               @ 0x2c 
    /*00012e2c*/ LDR         LR, [R5, #2788]             @ 0xae4 
    /*00012e30*/ LDR         R1, [R4, #52]               @ 0x34 
    /*00012e34*/ UBFX        LR, LR, #2, #15 
    /*00012e38*/ LDR         R2, [R4, #60]               @ 0x3c 
    /*00012e3c*/ ADD         R3, R3, LR 
    /*00012e40*/ STR         R3, [R4, #48]               @ 0x30 
    /*00012e44*/ LDR         LR, [R5, #2756]             @ 0xac4 
    /*00012e48*/ LDR         R3, [R4, #64]               @ 0x40 
    /*00012e4c*/ UBFX        LR, LR, #2, #17 
    /*00012e50*/ ADD         IP, IP, LR 
    /*00012e54*/ STR         IP, [R4, #56]               @ 0x38 
    /*00012e58*/ LDR         IP, [R5, #2792]             @ 0xae8 
    /*00012e5c*/ UBFX        IP, IP, #2, #17 
    /*00012e60*/ ADD         R1, R1, IP 
    /*00012e64*/ STR         R1, [R4, #52]               @ 0x34 
    /*00012e68*/ LDR         R1, [R5, #464]              @ 0x1d0 
    /*00012e6c*/ UBFX        R1, R1, #0, #21 
    /*00012e70*/ ADD         R2, R2, R1 
    /*00012e74*/ STR         R2, [R4, #60]               @ 0x3c 
    /*00012e78*/ LDR         R2, [R5, #2072]             @ 0x818 
    /*00012e7c*/ ADD         R3, R3, R2 
    /*00012e80*/ STR         R3, [R4, #64]               @ 0x40 
    /*00012e84*/ ADD         SP, SP, #8 
    /*00012e88*/ POP         {R4, R5, R6, PC} 
    /*00012e8c*/ ANDEQ       R0, R0, R4, LSL SL 
FUNC_END H264E_DRV_ReadRegs


FUNC_BEGIN H264eDrvUpdateRowIntraRefresh
    /*00012e90*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012e94*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00012e98*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00012e9c*/ LDR         R4, [R3, R0, LSL #2] 
    /*00012ea0*/ LDR         R3, [R4, #940]              @ 0x3ac 
    /*00012ea4*/ CMP         R3, #1 
    /*00012ea8*/ BEQ         H264eDrvUpdateRowIntraRefresh_x12f00
    H264eDrvUpdateRowIntraRefresh_x12eac:
    /*00012eac*/ LDR         R3, [R4, #1056]             @ 0x420 
    /*00012eb0*/ MOV         R2, #0 
    /*00012eb4*/ STR         R2, [R4, #928]              @ 0x3a0 
    /*00012eb8*/ ADD         R1, R3, #600                @ 0x258 
    /*00012ebc*/ STR         R2, [R4, #932]              @ 0x3a4 
    /*00012ec0*/ ADD         IP, R3, #592                @ 0x250 
    /*00012ec4*/ LDRH        R0, [R1] 
    /*00012ec8*/ BFI         R0, R2, #0, #12 
    /*00012ecc*/ STRH        R0, [R1] 
    /*00012ed0*/ LDR         R0, [R3, #600]              @ 0x258 
    /*00012ed4*/ LDRB        R1, [R3, #594]              @ 0x252 
    /*00012ed8*/ BFI         R0, R2, #12, #12 
    /*00012edc*/ STR         R0, [R3, #600]              @ 0x258 
    /*00012ee0*/ STRH        R2, [IP] 
    /*00012ee4*/ AND         R1, R1, #254                @ 0xfe 
    /*00012ee8*/ LDRB        R0, [R3, #589]              @ 0x24d 
    /*00012eec*/ BFI         R1, R2, #1, #1 
    /*00012ef0*/ STRB        R1, [R3, #594]              @ 0x252 
    /*00012ef4*/ BFI         R0, R2, #0, #1 
    /*00012ef8*/ STRB        R0, [R3, #589]              @ 0x24d 
    /*00012efc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264eDrvUpdateRowIntraRefresh_x12f00:
    /*00012f00*/ ADD         R6, R4, #8192               @ 0x2000 
    /*00012f04*/ LDR         R2, [R6, #2244]             @ 0x8c4 
    /*00012f08*/ CMP         R2, #2 
    /*00012f0c*/ BNE         H264eDrvUpdateRowIntraRefresh_x12eac
    /*00012f10*/ LDR         R0, [R6, #2180]             @ 0x884 
    /*00012f14*/ LDR         R1, [R6, #2196]             @ 0x894 
    /*00012f18*/ LDR         R7, [R6, #2188]             @ 0x88c 
    /*00012f1c*/ LDR         R2, [R6, #2204]             @ 0x89c 
    /*00012f20*/ MUL         R1, R1, R0 
    /*00012f24*/ CMP         R7, R2 
    /*00012f28*/ STR         R1, [R6, #2192]             @ 0x890 
    /*00012f2c*/ BCS         H264eDrvUpdateRowIntraRefresh_x13010
    /*00012f30*/ LDR         R0, [R6, #2200]             @ 0x898 
    /*00012f34*/ ADD         LR, R1, R7 
    /*00012f38*/ CMP         R7, R0 
    /*00012f3c*/ SUBHI       IP, R7, R0 
    /*00012f40*/ MOVLS       IP, #0 
    /*00012f44*/ MOVLS       R0, R7 
    /*00012f48*/ MOVHI       R3, #0 
    /*00012f4c*/ CMP         R2, LR 
    /*00012f50*/ SUBLS       R1, R2, IP 
    /*00012f54*/ ADDHI       R1, R0, R1 
    /*00012f58*/ ADD         R0, IP, R1 
    /*00012f5c*/ STR         IP, [R4, #928]              @ 0x3a0 
    /*00012f60*/ CMP         R2, R0 
    /*00012f64*/ BCS         H264eDrvUpdateRowIntraRefresh_x130e4
    /*00012f68*/ SUB         R2, R2, IP 
    /*00012f6c*/ CMP         R1, #0 
    /*00012f70*/ MOVNE       R5, R3 
    /*00012f74*/ ORREQ       R5, R3, #1 
    H264eDrvUpdateRowIntraRefresh_x12f78:
    /*00012f78*/ CMP         R7, #0 
    /*00012f7c*/ STR         R2, [R4, #932]              @ 0x3a4 
    /*00012f80*/ BNE         H264eDrvUpdateRowIntraRefresh_x12f90
    /*00012f84*/ LDR         R3, [R6, #2156]             @ 0x86c 
    /*00012f88*/ CMP         R3, #1 
    /*00012f8c*/ BEQ         H264eDrvUpdateRowIntraRefresh_x13064
    H264eDrvUpdateRowIntraRefresh_x12f90:
    /*00012f90*/ LDR         R7, [R4, #1056]             @ 0x420 
    /*00012f94*/ LDRB        R3, [R7, #589]              @ 0x24d 
    /*00012f98*/ BFC         R3, #0, #1 
    /*00012f9c*/ STRB        R3, [R7, #589]              @ 0x24d 
    /*00012fa0*/ LDR         R1, [R6, #2196]             @ 0x894 
    /*00012fa4*/ LDR         R0, [R4, #928]              @ 0x3a0 
    /*00012fa8*/ BL          0x0000000000012FA8          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00012fac*/ ADD         R3, R7, #600                @ 0x258 
    /*00012fb0*/ LDRH        R2, [R3] 
    /*00012fb4*/ BFI         R2, R0, #0, #12 
    /*00012fb8*/ STRH        R2, [R3] 
    /*00012fbc*/ LDR         R1, [R6, #2196]             @ 0x894 
    /*00012fc0*/ LDR         R0, [R4, #932]              @ 0x3a4 
    /*00012fc4*/ BL          0x0000000000012FC4          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00012fc8*/ LDRB        R3, [R7, #596]              @ 0x254 
    /*00012fcc*/ LDR         R2, [R7, #600]              @ 0x258 
    /*00012fd0*/ AND         R3, R3, #253                @ 0xfd 
    /*00012fd4*/ ORR         R3, R3, #1 
    /*00012fd8*/ STRB        R3, [R7, #596]              @ 0x254 
    /*00012fdc*/ BFI         R2, R0, #12, #12 
    /*00012fe0*/ STR         R2, [R7, #600]              @ 0x258 
    H264eDrvUpdateRowIntraRefresh_x12fe4:
    /*00012fe4*/ CMP         R5, #0 
    /*00012fe8*/ BEQ         H264eDrvUpdateRowIntraRefresh_x13028
    /*00012fec*/ LDR         R2, [R4, #1056]             @ 0x420 
    /*00012ff0*/ MOV         R1, #0 
    /*00012ff4*/ ADD         R0, R2, #592                @ 0x250 
    /*00012ff8*/ LDRB        R3, [R2, #594]              @ 0x252 
    /*00012ffc*/ STRH        R1, [R0] 
    /*00013000*/ AND         R3, R3, #254                @ 0xfe 
    /*00013004*/ BFI         R3, R1, #1, #1 
    /*00013008*/ STRB        R3, [R2, #594]              @ 0x252 
    /*0001300c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264eDrvUpdateRowIntraRefresh_x13010:
    /*00013010*/ MOV         R1, #0 
    /*00013014*/ MOV         R5, R3 
    /*00013018*/ STR         R1, [R4, #940]              @ 0x3ac 
    /*0001301c*/ MOV         R2, R1 
    /*00013020*/ STR         R1, [R4, #928]              @ 0x3a0 
    /*00013024*/ B           H264eDrvUpdateRowIntraRefresh_x12f78
    H264eDrvUpdateRowIntraRefresh_x13028:
    /*00013028*/ LDR         R4, [R4, #1056]             @ 0x420 
    /*0001302c*/ ADD         R7, R4, #592                @ 0x250 
    /*00013030*/ LDRB        R3, [R4, #594]              @ 0x252 
    /*00013034*/ ORR         R3, R3, #1 
    /*00013038*/ STRB        R3, [R4, #594]              @ 0x252 
    /*0001303c*/ LDR         R1, [R6, #2196]             @ 0x894 
    /*00013040*/ LDR         R0, [R6, #2188]             @ 0x88c 
    /*00013044*/ BL          0x0000000000013044          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00013048*/ LSL         R0, R0, #4 
    /*0001304c*/ SUB         R0, R0, #16 
    /*00013050*/ STRH        R0, [R7] 
    /*00013054*/ LDRB        R3, [R4, #594]              @ 0x252 
    /*00013058*/ BFI         R3, R5, #1, #1 
    /*0001305c*/ STRB        R3, [R4, #594]              @ 0x252 
    /*00013060*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264eDrvUpdateRowIntraRefresh_x13064:
    /*00013064*/ LDR         R8, [R4, #1056]             @ 0x420 
    /*00013068*/ LDRB        R3, [R8, #86]               @ 0x56 
    /*0001306c*/ MOV         R9, R8 
    /*00013070*/ ORR         R3, R3, #19 
    /*00013074*/ STRB        R3, [R8, #86]               @ 0x56 
    /*00013078*/ LDR         R1, [R6, #2196]             @ 0x894 
    /*0001307c*/ LDR         R0, [R4, #932]              @ 0x3a4 
    /*00013080*/ BL          0x0000000000013080          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00013084*/ LDRB        R3, [R8, #589]              @ 0x24d 
    /*00013088*/ STRB        R7, [R8, #588]              @ 0x24c 
    /*0001308c*/ ORR         R3, R3, #1 
    /*00013090*/ STRB        R3, [R8, #589]              @ 0x24d 
    /*00013094*/ SUB         R0, R0, #1 
    /*00013098*/ STRH        R0, [R8, #84]               @ 0x54 
    /*0001309c*/ LDR         R1, [R6, #2196]             @ 0x894 
    /*000130a0*/ LDR         R0, [R4, #932]              @ 0x3a4 
    /*000130a4*/ BL          0x00000000000130A4          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000130a8*/ LDR         R3, [R8, #600]              @ 0x258 
    /*000130ac*/ BFI         R3, R0, #12, #12 
    /*000130b0*/ STR         R3, [R9, #600]!             @ 0x258 
    /*000130b4*/ LDR         R1, [R6, #2196]             @ 0x894 
    /*000130b8*/ LDR         R0, [R4, #928]              @ 0x3a0 
    /*000130bc*/ BL          0x00000000000130BC          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000130c0*/ LDRH        R3, [R9] 
    /*000130c4*/ BFI         R3, R0, #0, #12 
    /*000130c8*/ STRH        R3, [R9] 
    /*000130cc*/ LDRB        R3, [R8, #596]              @ 0x254 
    /*000130d0*/ BFI         R3, R7, #1, #1 
    /*000130d4*/ UXTB        R3, R3 
    /*000130d8*/ ORR         R3, R3, #1 
    /*000130dc*/ STRB        R3, [R8, #596]              @ 0x254 
    /*000130e0*/ B           H264eDrvUpdateRowIntraRefresh_x12fe4
    H264eDrvUpdateRowIntraRefresh_x130e4:
    /*000130e4*/ CMP         R1, #0 
    /*000130e8*/ MOVNE       R5, R3 
    /*000130ec*/ ORREQ       R5, R3, #1 
    /*000130f0*/ MOV         R2, R1 
    /*000130f4*/ B           H264eDrvUpdateRowIntraRefresh_x12f78
FUNC_END H264eDrvUpdateRowIntraRefresh


FUNC_BEGIN H264eDrvUpdateColumnIntraRefresh
    /*000130f8*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000130fc*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013100*/ LDR         R1, [R3, R0, LSL #2] 
    /*00013104*/ LDR         R3, [R1, #940]              @ 0x3ac 
    /*00013108*/ CMP         R3, #1 
    /*0001310c*/ BEQ         H264eDrvUpdateColumnIntraRefresh_x13164
    H264eDrvUpdateColumnIntraRefresh_x13110:
    /*00013110*/ LDR         R3, [R1, #1056]             @ 0x420 
    /*00013114*/ MOV         R2, #0 
    /*00013118*/ STR         R2, [R1, #928]              @ 0x3a0 
    /*0001311c*/ STR         R2, [R1, #932]              @ 0x3a4 
    /*00013120*/ ADD         R0, R3, #600                @ 0x258 
    /*00013124*/ LDRB        R1, [R3, #594]              @ 0x252 
    /*00013128*/ ADD         IP, R3, #592                @ 0x250 
    /*0001312c*/ AND         R1, R1, #254                @ 0xfe 
    /*00013130*/ STRH        R2, [IP] 
    /*00013134*/ ORR         R1, R1, #2 
    /*00013138*/ STRB        R1, [R3, #594]              @ 0x252 
    /*0001313c*/ LDRH        R1, [R0] 
    /*00013140*/ BFI         R1, R2, #0, #12 
    /*00013144*/ STRH        R1, [R0] 
    /*00013148*/ LDR         R0, [R3, #600]              @ 0x258 
    /*0001314c*/ LDRB        R1, [R3, #589]              @ 0x24d 
    /*00013150*/ BFI         R0, R2, #12, #12 
    /*00013154*/ STR         R0, [R3, #600]              @ 0x258 
    /*00013158*/ BFI         R1, R2, #0, #1 
    /*0001315c*/ STRB        R1, [R3, #589]              @ 0x24d 
    /*00013160*/ BX          LR 
    H264eDrvUpdateColumnIntraRefresh_x13164:
    /*00013164*/ ADD         R2, R1, #8192               @ 0x2000 
    /*00013168*/ LDR         R0, [R2, #2244]             @ 0x8c4 
    /*0001316c*/ CMP         R0, #2 
    /*00013170*/ BNE         H264eDrvUpdateColumnIntraRefresh_x13110
    /*00013174*/ PUSH        {R4, R5, LR} 
    /*00013178*/ LDR         LR, [R2, #2212]             @ 0x8a4 
    /*0001317c*/ LDR         R0, [R2, #2220]             @ 0x8ac 
    /*00013180*/ LDR         R5, [R2, #2180]             @ 0x884 
    /*00013184*/ CMP         LR, R0 
    /*00013188*/ STR         R5, [R2, #2216]             @ 0x8a8 
    /*0001318c*/ BCS         H264eDrvUpdateColumnIntraRefresh_x13244
    /*00013190*/ LDR         R4, [R2, #2224]             @ 0x8b0 
    /*00013194*/ CMP         LR, R4 
    /*00013198*/ SUBHI       IP, LR, R4 
    /*0001319c*/ MOVLS       R4, LR 
    /*000131a0*/ ADD         LR, R5, LR 
    /*000131a4*/ MOVLS       IP, #0 
    /*000131a8*/ MOVHI       R3, #0 
    /*000131ac*/ CMP         R0, LR 
    /*000131b0*/ STR         IP, [R1, #928]              @ 0x3a0 
    /*000131b4*/ SUBLS       R4, R0, IP 
    /*000131b8*/ ADDHI       R4, R4, R5 
    /*000131bc*/ ADD         LR, IP, R4 
    /*000131c0*/ CMP         R0, LR 
    /*000131c4*/ BCS         H264eDrvUpdateColumnIntraRefresh_x1328c
    /*000131c8*/ SUB         IP, R0, IP 
    /*000131cc*/ CMP         R4, #0 
    /*000131d0*/ ORREQ       R3, R3, #1 
    H264eDrvUpdateColumnIntraRefresh_x131d4:
    /*000131d4*/ LDR         R0, [R1, #1056]             @ 0x420 
    /*000131d8*/ CMP         R3, #0 
    /*000131dc*/ STR         IP, [R1, #932]              @ 0x3a4 
    /*000131e0*/ ADD         R3, R0, #600                @ 0x258 
    /*000131e4*/ LDRB        IP, [R0, #589]              @ 0x24d 
    /*000131e8*/ BFC         IP, #0, #1 
    /*000131ec*/ STRB        IP, [R0, #589]              @ 0x24d 
    /*000131f0*/ LDR         LR, [R1, #928]              @ 0x3a0 
    /*000131f4*/ LDRH        IP, [R3] 
    /*000131f8*/ BFI         IP, LR, #0, #12 
    /*000131fc*/ STRH        IP, [R3] 
    /*00013200*/ LDR         LR, [R1, #932]              @ 0x3a4 
    /*00013204*/ LDR         IP, [R0, #600]              @ 0x258 
    /*00013208*/ LDRB        R3, [R0, #596]              @ 0x254 
    /*0001320c*/ BFI         IP, LR, #12, #12 
    /*00013210*/ STR         IP, [R0, #600]              @ 0x258 
    /*00013214*/ ORR         R3, R3, #3 
    /*00013218*/ STRB        R3, [R0, #596]              @ 0x254 
    /*0001321c*/ BEQ         H264eDrvUpdateColumnIntraRefresh_x13258
    /*00013220*/ LDR         R2, [R1, #1056]             @ 0x420 
    /*00013224*/ MOV         R0, #0 
    /*00013228*/ ADD         R1, R2, #592                @ 0x250 
    /*0001322c*/ LDRB        R3, [R2, #594]              @ 0x252 
    /*00013230*/ STRH        R0, [R1] 
    /*00013234*/ AND         R3, R3, #254                @ 0xfe 
    /*00013238*/ ORR         R3, R3, #2 
    /*0001323c*/ STRB        R3, [R2, #594]              @ 0x252 
    /*00013240*/ POP         {R4, R5, PC} 
    H264eDrvUpdateColumnIntraRefresh_x13244:
    /*00013244*/ MOV         R0, #0 
    /*00013248*/ STR         R0, [R1, #940]              @ 0x3ac 
    /*0001324c*/ MOV         IP, R0 
    /*00013250*/ STR         R0, [R1, #928]              @ 0x3a0 
    /*00013254*/ B           H264eDrvUpdateColumnIntraRefresh_x131d4
    H264eDrvUpdateColumnIntraRefresh_x13258:
    /*00013258*/ LDR         R3, [R1, #1056]             @ 0x420 
    /*0001325c*/ ADD         R0, R3, #592                @ 0x250 
    /*00013260*/ LDRB        R1, [R3, #594]              @ 0x252 
    /*00013264*/ ORR         R1, R1, #1 
    /*00013268*/ STRB        R1, [R3, #594]              @ 0x252 
    /*0001326c*/ LDR         R2, [R2, #2212]             @ 0x8a4 
    /*00013270*/ LSL         R2, R2, #4 
    /*00013274*/ SUB         R2, R2, #16 
    /*00013278*/ STRH        R2, [R0] 
    /*0001327c*/ LDRB        R2, [R3, #594]              @ 0x252 
    /*00013280*/ ORR         R2, R2, #2 
    /*00013284*/ STRB        R2, [R3, #594]              @ 0x252 
    /*00013288*/ POP         {R4, R5, PC} 
    H264eDrvUpdateColumnIntraRefresh_x1328c:
    /*0001328c*/ CMP         R4, #0 
    /*00013290*/ ORREQ       R3, R3, #1 
    /*00013294*/ MOV         IP, R4 
    /*00013298*/ B           H264eDrvUpdateColumnIntraRefresh_x131d4
FUNC_END H264eDrvUpdateColumnIntraRefresh


FUNC_BEGIN H264eDrvUpdateIntraRefresh
    /*0001329c*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000132a0*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000132a4*/ LDR         R3, [R3, R0, LSL #2] 
    /*000132a8*/ ADD         R3, R3, #8192               @ 0x2000 
    /*000132ac*/ LDR         R3, [R3, #2176]             @ 0x880 
    /*000132b0*/ CMP         R3, #1 
    /*000132b4*/ BEQ         H264eDrvUpdateIntraRefresh_x132bc
    H264eDrvUpdateIntraRefresh_x132b8:
    /*000132b8*/ B           H264eDrvUpdateIntraRefresh_x132b8@ H264eDrvUpdateRowIntraRefresh [R_ARM_JUMP24: .text+0x12e90] 
    H264eDrvUpdateIntraRefresh_x132bc:
    /*000132bc*/ B           H264eDrvUpdateIntraRefresh_x132bc@ H264eDrvUpdateColumnIntraRefresh [R_ARM_JUMP24: .text+0x130f8] 
FUNC_END H264eDrvUpdateIntraRefresh


FUNC_BEGIN H264E_DRV_InitLowerPower
    /*000132c0*/ CMP         R1, #0 
    /*000132c4*/ PUSH        {R4, R5, R6, LR} 
    /*000132c8*/ BEQ         H264E_DRV_InitLowerPower_x133bc
    /*000132cc*/ CMP         R1, #1 
    /*000132d0*/ BEQ         H264E_DRV_InitLowerPower_x133bc
    /*000132d4*/ MOVW        R3, #0                      @ H264ePowerSaveEn [R_ARM_MOVW_ABS_NC: .data+0x4] 
    /*000132d8*/ MOVT        R3, #0                      @ H264ePowerSaveEn [R_ARM_MOVT_ABS: .data+0x4] 
    /*000132dc*/ LDR         R3, [R3] 
    /*000132e0*/ CMP         R3, #1 
    /*000132e4*/ BEQ         H264E_DRV_InitLowerPower_x133f4
    /*000132e8*/ CMP         R3, #2 
    /*000132ec*/ BNE         H264E_DRV_InitLowerPower_x133d4
    H264E_DRV_InitLowerPower_x132f0:
    /*000132f0*/ LDRB        R3, [R0, #2] 
    /*000132f4*/ MOV         R2, #16 
    /*000132f8*/ LDRH        R1, [R0, #24] 
    /*000132fc*/ MOV         R6, #32 
    /*00013300*/ ORR         R3, R3, #1 
    /*00013304*/ STRB        R3, [R0, #2] 
    /*00013308*/ LDRH        IP, [R0, #2] 
    /*0001330c*/ BFI         R1, R2, #0, #9 
    /*00013310*/ STRH        R1, [R0, #24] 
    /*00013314*/ MOV         R5, #10 
    /*00013318*/ LDR         R1, [R0, #24] 
    /*0001331c*/ BFC         IP, #4, #6 
    /*00013320*/ LDRB        LR, [R0, #40]               @ 0x28 
    /*00013324*/ MOV         R4, #4 
    /*00013328*/ LDRB        R3, [R0, #32] 
    /*0001332c*/ BFI         R1, R6, #9, #9 
    /*00013330*/ BFI         LR, R5, #0, #6 
    /*00013334*/ LSR         R5, IP, #8 
    /*00013338*/ STRB        LR, [R0, #40]               @ 0x28 
    /*0001333c*/ BFI         R3, R4, #0, #4 
    /*00013340*/ LDRB        LR, [R0, #33]               @ 0x21 
    /*00013344*/ BFC         R5, #2, #6 
    /*00013348*/ LDRH        R4, [R0, #40]               @ 0x28 
    /*0001334c*/ STRH        IP, [R0, #2] 
    /*00013350*/ MOV         IP, #48                     @ 0x30 
    /*00013354*/ STRB        R5, [R0, #3] 
    /*00013358*/ LSR         R5, R1, R2 
    /*0001335c*/ STR         R1, [R0, #24] 
    /*00013360*/ BFI         R5, IP, #2, #9 
    /*00013364*/ STR         R2, [R0, #8] 
    /*00013368*/ MOV         R1, #2 
    /*0001336c*/ STR         R2, [R0, #12] 
    /*00013370*/ BFI         R3, R1, #4, #4 
    /*00013374*/ STRB        R2, [R0, #28] 
    /*00013378*/ MOV         R2, #20 
    /*0001337c*/ STRB        R3, [R0, #32] 
    /*00013380*/ BFI         R4, R2, #6, #6 
    /*00013384*/ STR         R2, [R0, #16] 
    /*00013388*/ MOV         R3, #256                    @ 0x100 
    /*0001338c*/ MOV         R2, #1 
    /*00013390*/ STRB        R6, [R0, #29] 
    /*00013394*/ BFI         LR, R2, #0, #4 
    /*00013398*/ STRH        R5, [R0, #26] 
    /*0001339c*/ STRB        IP, [R0, #30] 
    /*000133a0*/ STRH        R4, [R0, #40]               @ 0x28 
    /*000133a4*/ STR         R2, [R0, #4] 
    /*000133a8*/ STRB        LR, [R0, #33]               @ 0x21 
    /*000133ac*/ STR         R2, [R0, #20] 
    /*000133b0*/ STR         R2, [R0, #36]               @ 0x24 
    /*000133b4*/ STRH        R3, [R0] 
    /*000133b8*/ POP         {R4, R5, R6, PC} 
    H264E_DRV_InitLowerPower_x133bc:
    /*000133bc*/ MOVW        R3, #0                      @ H264ePowerSaveEn [R_ARM_MOVW_ABS_NC: .data+0x4] 
    /*000133c0*/ MOVT        R3, #0                      @ H264ePowerSaveEn [R_ARM_MOVT_ABS: .data+0x4] 
    /*000133c4*/ LDR         R3, [R3] 
    /*000133c8*/ SUB         R3, R3, #1 
    /*000133cc*/ CMP         R3, #1 
    /*000133d0*/ BLS         H264E_DRV_InitLowerPower_x132f0
    H264E_DRV_InitLowerPower_x133d4:
    /*000133d4*/ LDRB        R2, [R0, #2] 
    /*000133d8*/ MOV         R3, #0 
    /*000133dc*/ STR         R3, [R0, #4] 
    /*000133e0*/ BFC         R2, #0, #1 
    /*000133e4*/ STR         R3, [R0, #20] 
    /*000133e8*/ STRB        R2, [R0, #2] 
    /*000133ec*/ STR         R3, [R0, #36]               @ 0x24 
    /*000133f0*/ POP         {R4, R5, R6, PC} 
    H264E_DRV_InitLowerPower_x133f4:
    /*000133f4*/ LDRB        IP, [R0, #2] 
    /*000133f8*/ MOV         R1, #16 
    /*000133fc*/ LDRH        R2, [R0, #24] 
    /*00013400*/ MOV         R6, #32 
    /*00013404*/ BFC         IP, #0, #1 
    /*00013408*/ STRB        IP, [R0, #2] 
    /*0001340c*/ LDRH        LR, [R0, #2] 
    /*00013410*/ BFI         R2, R1, #0, #9 
    /*00013414*/ STRH        R2, [R0, #24] 
    /*00013418*/ MOV         R5, #10 
    /*0001341c*/ LDR         IP, [R0, #24] 
    /*00013420*/ BFC         LR, #4, #6 
    /*00013424*/ LDRB        R4, [R0, #40]               @ 0x28 
    /*00013428*/ BFI         IP, R6, #9, #9 
    /*0001342c*/ LDRB        R2, [R0, #32] 
    /*00013430*/ BFI         R4, R5, #0, #6 
    /*00013434*/ LSR         R5, LR, #8 
    /*00013438*/ STRB        R4, [R0, #40]               @ 0x28 
    /*0001343c*/ BFC         R5, #2, #6 
    /*00013440*/ MOV         R4, #4 
    /*00013444*/ STRH        LR, [R0, #2] 
    /*00013448*/ BFI         R2, R4, #0, #4 
    /*0001344c*/ STRB        R5, [R0, #3] 
    /*00013450*/ LDRH        R4, [R0, #40]               @ 0x28 
    /*00013454*/ LSR         R5, IP, R1 
    /*00013458*/ STR         R1, [R0, #8] 
    /*0001345c*/ MOV         LR, #48                     @ 0x30 
    /*00013460*/ STR         R1, [R0, #12] 
    /*00013464*/ BFI         R5, LR, #2, #9 
    /*00013468*/ STRB        R1, [R0, #28] 
    /*0001346c*/ LDRB        R1, [R0, #33]               @ 0x21 
    /*00013470*/ STR         IP, [R0, #24] 
    /*00013474*/ MOV         IP, #20 
    /*00013478*/ BFI         R1, R3, #0, #4 
    /*0001347c*/ STR         R3, [R0, #4] 
    /*00013480*/ BFI         R4, IP, #6, #6 
    /*00013484*/ MOV         R3, #0 
    /*00013488*/ STRB        LR, [R0, #30] 
    /*0001348c*/ MOV         LR, #2 
    /*00013490*/ STRB        R6, [R0, #29] 
    /*00013494*/ BFI         R2, LR, #4, #4 
    /*00013498*/ STRH        R5, [R0, #26] 
    /*0001349c*/ STRB        R2, [R0, #32] 
    /*000134a0*/ MOV         R2, #256                    @ 0x100 
    /*000134a4*/ STRH        R4, [R0, #40]               @ 0x28 
    /*000134a8*/ STR         IP, [R0, #16] 
    /*000134ac*/ STRB        R1, [R0, #33]               @ 0x21 
    /*000134b0*/ STRH        R2, [R0] 
    /*000134b4*/ STR         R3, [R0, #20] 
    /*000134b8*/ STR         R3, [R0, #36]               @ 0x24 
    /*000134bc*/ POP         {R4, R5, R6, PC} 
FUNC_END H264E_DRV_InitLowerPower


FUNC_BEGIN H264E_DRV_UpdateOsdRoiConfigParam
    /*000134c0*/ MOVW        IP, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000134c4*/ MOVT        IP, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000134c8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000134cc*/ MOV         LR, R0 
    /*000134d0*/ LDR         R5, [IP, R0, LSL #2] 
    /*000134d4*/ ADD         R6, R5, #8192               @ 0x2000 
    /*000134d8*/ LDR         R3, [R6, #1008]             @ 0x3f0 
    /*000134dc*/ CMP         R3, #0 
    /*000134e0*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x137bc
    /*000134e4*/ ADD         R0, R3, #256                @ 0x100 
    H264E_DRV_UpdateOsdRoiConfigParam_x134e8:
    /*000134e8*/ LDR         R2, [R3, #4] 
    /*000134ec*/ ADD         R3, R3, #32 
    /*000134f0*/ CMP         R2, #0 
    /*000134f4*/ BNE         H264E_DRV_UpdateOsdRoiConfigParam_x1358c
    /*000134f8*/ CMP         R3, R0 
    /*000134fc*/ BNE         H264E_DRV_UpdateOsdRoiConfigParam_x134e8
    /*00013500*/ ADD         R4, R5, #12288              @ 0x3000 
    H264E_DRV_UpdateOsdRoiConfigParam_x13504:
    /*00013504*/ LDR         R3, [R6, #1368]             @ 0x558 
    /*00013508*/ CMP         R3, #0 
    /*0001350c*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x1351c
    /*00013510*/ LDR         R3, [R3] 
    /*00013514*/ CMP         R3, #1 
    /*00013518*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x13624
    H264E_DRV_UpdateOsdRoiConfigParam_x1351c:
    /*0001351c*/ LDR         R3, [R4, #2032]             @ 0x7f0 
    /*00013520*/ CMP         R3, #1 
    /*00013524*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x136cc
    /*00013528*/ LDR         R3, [R4, #2036]             @ 0x7f4 
    /*0001352c*/ CMP         R3, #1 
    /*00013530*/ STREQ       R3, [R6, #1004]             @ 0x3ec 
    /*00013534*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x13540
    /*00013538*/ CMP         R2, #0 
    /*0001353c*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x1373c
    H264E_DRV_UpdateOsdRoiConfigParam_x13540:
    /*00013540*/ LDR         R2, [R4, #1988]             @ 0x7c4 
    /*00013544*/ CMP         R2, #5 
    /*00013548*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x137c8
    H264E_DRV_UpdateOsdRoiConfigParam_x1354c:
    /*0001354c*/ SUB         R2, R2, #12 
    /*00013550*/ CLZ         R2, R2 
    /*00013554*/ LSR         R2, R2, #5 
    H264E_DRV_UpdateOsdRoiConfigParam_x13558:
    /*00013558*/ LDR         R3, [R4, #2396]             @ 0x95c 
    /*0001355c*/ CMP         R3, #0 
    /*00013560*/ POPEQ       {R4, R5, R6, R7, R8, PC} 
    /*00013564*/ MOV         R0, LR 
    /*00013568*/ LDR         R1, [R5, #1056]             @ 0x420 
    /*0001356c*/ BL          0x0000000000012834 
    H264E_DRV_UpdateOsdRoiConfigParam_x13570:
    /*00013570*/ LDR         R1, [R5, #1048]             @ 0x418 
    /*00013574*/ MOV         R2, #128                    @ 0x80 
    /*00013578*/ LDR         R0, [R5, #1056]             @ 0x420 
    /*0001357c*/ ADD         R1, R1, #1664               @ 0x680 
    /*00013580*/ ADD         R0, R0, #1664               @ 0x680 
    /*00013584*/ POP         {R4, R5, R6, R7, R8, LR} 
    H264E_DRV_UpdateOsdRoiConfigParam_x13588:
    /*00013588*/ B           H264E_DRV_UpdateOsdRoiConfigParam_x13588@ hil_mmb_flush_dcache_byaddr [R_ARM_JUMP24: +0x0] 
    H264E_DRV_UpdateOsdRoiConfigParam_x1358c:
    /*0001358c*/ ADD         R4, R5, #12288              @ 0x3000 
    /*00013590*/ LDR         R2, [R4, #2024]             @ 0x7e8 
    /*00013594*/ LDR         R3, [R4, #2028]             @ 0x7ec 
    /*00013598*/ CMP         R2, #2 
    /*0001359c*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x1376c
    /*000135a0*/ LDR         R2, [R4, #1988]             @ 0x7c4 
    /*000135a4*/ LDR         R7, [R4, #2012]             @ 0x7dc 
    /*000135a8*/ CMP         R2, #4 
    /*000135ac*/ LDR         R8, [R4, #2016]             @ 0x7e0 
    /*000135b0*/ LDRNE       R0, [R4, #2020]             @ 0x7e4 
    /*000135b4*/ SUBEQ       R0, R7, R8 
    /*000135b8*/ STREQ       R0, [R4, #2020]             @ 0x7e4 
    /*000135bc*/ CMP         R1, #3 
    /*000135c0*/ BLS         H264E_DRV_UpdateOsdRoiConfigParam_x1374c
    H264E_DRV_UpdateOsdRoiConfigParam_x135c4:
    /*000135c4*/ ADD         R1, R0, R8 
    /*000135c8*/ STR         R1, [R4, #2020]             @ 0x7e4 
    /*000135cc*/ CMP         R7, R1 
    /*000135d0*/ BLE         H264E_DRV_UpdateOsdRoiConfigParam_x1375c
    /*000135d4*/ CMN         R8, #1 
    /*000135d8*/ CMNEQ       R7, #1 
    /*000135dc*/ MOVEQ       R0, #1 
    /*000135e0*/ MOVNE       R0, #0 
    /*000135e4*/ CMP         R7, R8 
    /*000135e8*/ ORREQ       R0, R0, #1 
    H264E_DRV_UpdateOsdRoiConfigParam_x135ec:
    /*000135ec*/ SUBS        R2, R0, R3 
    /*000135f0*/ STR         R0, [R4, #2028]             @ 0x7ec 
    /*000135f4*/ MOVNE       R2, #1 
    H264E_DRV_UpdateOsdRoiConfigParam_x135f8:
    /*000135f8*/ LDR         R3, [R4, #2396]             @ 0x95c 
    /*000135fc*/ CMP         R3, #0 
    /*00013600*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x13504
    /*00013604*/ LDR         R3, [R5, #1056]             @ 0x420 
    /*00013608*/ CMP         R0, #0 
    /*0001360c*/ MOVEQ       R1, #255                    @ 0xff 
    /*00013610*/ LDRBNE      R1, [R3, #1666]             @ 0x682 
    /*00013614*/ ANDNE       R1, R1, #128                @ 0x80 
    /*00013618*/ BFCNE       R1, #7, #1 
    /*0001361c*/ STRB        R1, [R3, #1666]             @ 0x682 
    /*00013620*/ B           H264E_DRV_UpdateOsdRoiConfigParam_x13504
    H264E_DRV_UpdateOsdRoiConfigParam_x13624:
    /*00013624*/ LDR         R3, [R4, #2396]             @ 0x95c 
    /*00013628*/ CMP         R3, #0 
    /*0001362c*/ POPEQ       {R4, R5, R6, R7, R8, PC} 
    /*00013630*/ LDR         R7, [R5, #1056]             @ 0x420 
    /*00013634*/ LDRB        R3, [R7, #1666]             @ 0x682 
    /*00013638*/ AND         R3, R3, #128                @ 0x80 
    /*0001363c*/ BFC         R3, #7, #1 
    /*00013640*/ STRB        R3, [R7, #1666]             @ 0x682 
    /*00013644*/ LDR         R3, [R6, #1004]             @ 0x3ec 
    /*00013648*/ CMP         R3, #1 
    /*0001364c*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x13794
    H264E_DRV_UpdateOsdRoiConfigParam_x13650:
    /*00013650*/ LDR         R3, [R4, #1988]             @ 0x7c4 
    /*00013654*/ CMP         R3, #5 
    /*00013658*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x13778
    /*0001365c*/ CMP         R3, #12 
    /*00013660*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x13784
    H264E_DRV_UpdateOsdRoiConfigParam_x13664:
    /*00013664*/ LDR         R4, [R6, #1368]             @ 0x558 
    /*00013668*/ LDR         R3, [R4, #4] 
    /*0001366c*/ CMP         R3, #0 
    /*00013670*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x13788
    /*00013674*/ MOV         R3, #0 
    /*00013678*/ STR         R3, [R4, #8] 
    H264E_DRV_UpdateOsdRoiConfigParam_x1367c:
    /*0001367c*/ MOV         R3, #0 
    /*00013680*/ MOV         R0, #25 
    /*00013684*/ STR         R3, [R4, #12] 
    /*00013688*/ BL          0x0000000000013688          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001368c*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*00013690*/ CMP         R3, #0 
    /*00013694*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x136b0
    /*00013698*/ MOV         R0, #25 
    /*0001369c*/ BL          0x000000000001369C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000136a0*/ MOV         R1, R4 
    /*000136a4*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*000136a8*/ MOV         R0, R7 
    /*000136ac*/ BLX         R3 
    H264E_DRV_UpdateOsdRoiConfigParam_x136b0:
    /*000136b0*/ LDR         R1, [R5, #1048]             @ 0x418 
    /*000136b4*/ MOV         R2, #256                    @ 0x100 
    /*000136b8*/ LDR         R0, [R5, #1056]             @ 0x420 
    /*000136bc*/ ADD         R1, R1, #768                @ 0x300 
    /*000136c0*/ ADD         R0, R0, #768                @ 0x300 
    /*000136c4*/ BL          0x00000000000136C4          @ hil_mmb_flush_dcache_byaddr [R_ARM_CALL: +0x0] 
    /*000136c8*/ B           H264E_DRV_UpdateOsdRoiConfigParam_x13570
    H264E_DRV_UpdateOsdRoiConfigParam_x136cc:
    /*000136cc*/ LDR         R3, [R4, #2396]             @ 0x95c 
    /*000136d0*/ CMP         R3, #0 
    /*000136d4*/ POPEQ       {R4, R5, R6, R7, R8, PC} 
    /*000136d8*/ MOV         R0, #25 
    /*000136dc*/ LDR         R6, [IP, LR, LSL #2] 
    /*000136e0*/ LDR         R7, [R5, #1056]             @ 0x420 
    /*000136e4*/ BL          0x00000000000136E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000136e8*/ LDR         R3, [R0, #64]               @ 0x40 
    /*000136ec*/ CMP         R3, #0 
    /*000136f0*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x13710
    /*000136f4*/ MOV         R0, #25 
    /*000136f8*/ ADD         R6, R6, #12288              @ 0x3000 
    /*000136fc*/ BL          0x00000000000136FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013700*/ LDR         R1, [R6, #2032]             @ 0x7f0 
    /*00013704*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00013708*/ MOV         R0, R7 
    /*0001370c*/ BLX         R3 
    H264E_DRV_UpdateOsdRoiConfigParam_x13710:
    /*00013710*/ LDR         R2, [R4, #2036]             @ 0x7f4 
    /*00013714*/ LDR         R3, [R4, #2032]             @ 0x7f0 
    /*00013718*/ CMP         R2, R3 
    /*0001371c*/ POPEQ       {R4, R5, R6, R7, R8, PC} 
    /*00013720*/ LDR         R1, [R5, #1048]             @ 0x418 
    /*00013724*/ MOV         R2, #128                    @ 0x80 
    /*00013728*/ LDR         R0, [R5, #1056]             @ 0x420 
    /*0001372c*/ ADD         R1, R1, #1664               @ 0x680 
    /*00013730*/ ADD         R0, R0, #1664               @ 0x680 
    /*00013734*/ POP         {R4, R5, R6, R7, R8, LR} 
    H264E_DRV_UpdateOsdRoiConfigParam_x13738:
    /*00013738*/ B           H264E_DRV_UpdateOsdRoiConfigParam_x13738@ hil_mmb_flush_dcache_byaddr [R_ARM_JUMP24: +0x0] 
    H264E_DRV_UpdateOsdRoiConfigParam_x1373c:
    /*0001373c*/ LDR         R3, [R6, #1004]             @ 0x3ec 
    /*00013740*/ CMP         R3, #1 
    /*00013744*/ POPNE       {R4, R5, R6, R7, R8, PC} 
    /*00013748*/ B           H264E_DRV_UpdateOsdRoiConfigParam_x13540
    H264E_DRV_UpdateOsdRoiConfigParam_x1374c:
    /*0001374c*/ LDR         R2, [R6, #1648]             @ 0x670 
    /*00013750*/ CMP         R2, #1 
    /*00013754*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x137dc
    H264E_DRV_UpdateOsdRoiConfigParam_x13758:
    /*00013758*/ ADD         R1, R0, R8 
    H264E_DRV_UpdateOsdRoiConfigParam_x1375c:
    /*0001375c*/ SUB         R1, R1, R7 
    /*00013760*/ MOV         R0, #1 
    /*00013764*/ STR         R1, [R4, #2020]             @ 0x7e4 
    /*00013768*/ B           H264E_DRV_UpdateOsdRoiConfigParam_x135ec
    H264E_DRV_UpdateOsdRoiConfigParam_x1376c:
    /*0001376c*/ MOV         R0, R3 
    /*00013770*/ MOV         R2, #0 
    /*00013774*/ B           H264E_DRV_UpdateOsdRoiConfigParam_x135f8
    H264E_DRV_UpdateOsdRoiConfigParam_x13778:
    /*00013778*/ LDR         R3, [R4, #2104]             @ 0x838 
    /*0001377c*/ CMP         R3, #0 
    /*00013780*/ BNE         H264E_DRV_UpdateOsdRoiConfigParam_x13664
    H264E_DRV_UpdateOsdRoiConfigParam_x13784:
    /*00013784*/ LDR         R4, [R6, #1368]             @ 0x558 
    H264E_DRV_UpdateOsdRoiConfigParam_x13788:
    /*00013788*/ MOV         R3, #1 
    /*0001378c*/ STR         R3, [R4, #8] 
    /*00013790*/ B           H264E_DRV_UpdateOsdRoiConfigParam_x1367c
    H264E_DRV_UpdateOsdRoiConfigParam_x13794:
    /*00013794*/ LDR         R2, [R4, #1988]             @ 0x7c4 
    /*00013798*/ CMP         R2, #5 
    /*0001379c*/ BEQ         H264E_DRV_UpdateOsdRoiConfigParam_x137ec
    H264E_DRV_UpdateOsdRoiConfigParam_x137a0:
    /*000137a0*/ SUB         R2, R2, #12 
    /*000137a4*/ CLZ         R2, R2 
    /*000137a8*/ LSR         R2, R2, #5 
    H264E_DRV_UpdateOsdRoiConfigParam_x137ac:
    /*000137ac*/ MOV         R0, LR 
    /*000137b0*/ MOV         R1, R7 
    /*000137b4*/ BL          0x0000000000012834 
    /*000137b8*/ B           H264E_DRV_UpdateOsdRoiConfigParam_x13650
    H264E_DRV_UpdateOsdRoiConfigParam_x137bc:
    /*000137bc*/ ADD         R4, R5, #12288              @ 0x3000 
    /*000137c0*/ MOV         R2, R3 
    /*000137c4*/ B           H264E_DRV_UpdateOsdRoiConfigParam_x13504
    H264E_DRV_UpdateOsdRoiConfigParam_x137c8:
    /*000137c8*/ LDR         R3, [R4, #2104]             @ 0x838 
    /*000137cc*/ CMP         R3, #0 
    /*000137d0*/ BNE         H264E_DRV_UpdateOsdRoiConfigParam_x1354c
    /*000137d4*/ MOV         R2, #1 
    /*000137d8*/ B           H264E_DRV_UpdateOsdRoiConfigParam_x13558
    H264E_DRV_UpdateOsdRoiConfigParam_x137dc:
    /*000137dc*/ LDR         R2, [R6, #1644]             @ 0x66c 
    /*000137e0*/ CMP         R2, #1 
    /*000137e4*/ BNE         H264E_DRV_UpdateOsdRoiConfigParam_x13758
    /*000137e8*/ B           H264E_DRV_UpdateOsdRoiConfigParam_x135c4
    H264E_DRV_UpdateOsdRoiConfigParam_x137ec:
    /*000137ec*/ LDR         R1, [R4, #2104]             @ 0x838 
    /*000137f0*/ CMP         R1, #0 
    /*000137f4*/ BNE         H264E_DRV_UpdateOsdRoiConfigParam_x137a0
    /*000137f8*/ MOV         R2, R3 
    /*000137fc*/ B           H264E_DRV_UpdateOsdRoiConfigParam_x137ac
FUNC_END H264E_DRV_UpdateOsdRoiConfigParam


FUNC_BEGIN H264E_DRV_UpdateRegConfigConfigParamUnusual
    /*00013800*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013804*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013808*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001380c*/ MOVW        R5, #1890                   @ 0x762 
    /*00013810*/ LDR         IP, [R3, R0, LSL #2] 
    /*00013814*/ MOVW        R0, #32896                  @ 0x8080 
    /*00013818*/ MOV         R8, R0 
    /*0001381c*/ MOVT        R0, #128                    @ 0x80 
    /*00013820*/ ADD         R4, IP, R1, LSL #2 
    /*00013824*/ ADD         LR, IP, #12288              @ 0x3000 
    /*00013828*/ MOV         R2, #0 
    /*0001382c*/ MOV         R7, #13 
    /*00013830*/ LDR         R3, [R4, #1056]             @ 0x420 
    /*00013834*/ ADD         R6, R3, #1888               @ 0x760 
    /*00013838*/ STR         R0, [R3, #1892]             @ 0x764 
    /*0001383c*/ LDRB        R0, [R3, #1903]             @ 0x76f 
    /*00013840*/ STR         R8, [R3, #1896]             @ 0x768 
    /*00013844*/ AND         R0, R0, #200                @ 0xc8 
    /*00013848*/ STR         R2, [R3, #1800]             @ 0x708 
    /*0001384c*/ BFI         R0, R2, #6, #1 
    /*00013850*/ STR         R2, [R3, #1804]             @ 0x70c 
    /*00013854*/ STRB        R0, [R3, #1903]             @ 0x76f 
    /*00013858*/ MOV         R0, #16 
    /*0001385c*/ STR         R2, [R3, #1808]             @ 0x710 
    /*00013860*/ STR         R2, [R3, #1864]             @ 0x748 
    /*00013864*/ STR         R2, [R3, #1868]             @ 0x74c 
    /*00013868*/ STR         R2, [R3, #1872]             @ 0x750 
    /*0001386c*/ STR         R2, [R3, #1876]             @ 0x754 
    /*00013870*/ STR         R2, [R3, #1880]             @ 0x758 
    /*00013874*/ STR         R2, [R3, #1884]             @ 0x75c 
    /*00013878*/ STR         R2, [R3, #1840]             @ 0x730 
    /*0001387c*/ STR         R2, [R3, #1844]             @ 0x734 
    /*00013880*/ STR         R2, [R3, #1848]             @ 0x738 
    /*00013884*/ STR         R2, [R3, #1852]             @ 0x73c 
    /*00013888*/ STR         R2, [R3, #1856]             @ 0x740 
    /*0001388c*/ STR         R2, [R3, #1860]             @ 0x744 
    /*00013890*/ STR         R2, [R3, #1832]             @ 0x728 
    /*00013894*/ STR         R2, [R3, #1812]             @ 0x714 
    /*00013898*/ STR         R2, [R3, #1816]             @ 0x718 
    /*0001389c*/ STR         R2, [R3, #1820]             @ 0x71c 
    /*000138a0*/ STR         R2, [R3, #1824]             @ 0x720 
    /*000138a4*/ STR         R2, [R3, #1796]             @ 0x704 
    /*000138a8*/ STR         R2, [R3, #1904]             @ 0x770 
    /*000138ac*/ STR         R2, [R3, #1908]             @ 0x774 
    /*000138b0*/ STR         R2, [R3, #1912]             @ 0x778 
    /*000138b4*/ STR         R2, [R3, #1916]             @ 0x77c 
    /*000138b8*/ STR         R7, [R3, #1792]             @ 0x700 
    /*000138bc*/ STRH        R2, [R6] 
    /*000138c0*/ STRH        R0, [R3, R5] 
    /*000138c4*/ LDR         R0, [LR, #2568]             @ 0xa08 
    /*000138c8*/ CMP         R0, #1 
    /*000138cc*/ BEQ         H264E_DRV_UpdateRegConfigConfigParamUnusual_x13930
    /*000138d0*/ LDRB        R6, [R3, #1836]             @ 0x72c 
    /*000138d4*/ MOVW        R5, #1836                   @ 0x72c 
    /*000138d8*/ LDRB        R0, [R3, #1829]             @ 0x725 
    /*000138dc*/ MOV         LR, #8 
    /*000138e0*/ BFI         R6, R2, #0, #1 
    /*000138e4*/ STRB        R6, [R3, #1836]             @ 0x72c 
    /*000138e8*/ LDRH        R6, [R3, R5] 
    /*000138ec*/ BFI         R0, LR, #0, #4 
    /*000138f0*/ STRB        LR, [R3, #1828]             @ 0x724 
    /*000138f4*/ BFI         R0, R2, #4, #1 
    /*000138f8*/ BFI         R6, LR, #4, #5 
    /*000138fc*/ STRH        R6, [R3, R5] 
    /*00013900*/ LDR         R5, [R3, #1836]             @ 0x72c 
    /*00013904*/ STRB        R0, [R3, #1829]             @ 0x725 
    /*00013908*/ BFI         R5, LR, #12, #5 
    /*0001390c*/ STR         R5, [R3, #1836]             @ 0x72c 
    H264E_DRV_UpdateRegConfigConfigParamUnusual_x13910:
    /*00013910*/ ADD         R1, R1, #131                @ 0x83 
    /*00013914*/ LDR         R0, [R4, #1056]             @ 0x420 
    /*00013918*/ MOV         R2, #256                    @ 0x100 
    /*0001391c*/ LDR         R1, [IP, R1, LSL #3] 
    /*00013920*/ ADD         R0, R0, #1792               @ 0x700 
    /*00013924*/ POP         {R4, R5, R6, R7, R8, LR} 
    /*00013928*/ ADD         R1, R1, #1792               @ 0x700 
    H264E_DRV_UpdateRegConfigConfigParamUnusual_x1392c:
    /*0001392c*/ B           H264E_DRV_UpdateRegConfigConfigParamUnusual_x1392c@ hil_mmb_flush_dcache_byaddr [R_ARM_JUMP24: +0x0] 
    H264E_DRV_UpdateRegConfigConfigParamUnusual_x13930:
    /*00013930*/ LDRB        R5, [R3, #1836]             @ 0x72c 
    /*00013934*/ MOVW        R7, #1836                   @ 0x72c 
    /*00013938*/ LDRB        R0, [R3, #1829]             @ 0x725 
    /*0001393c*/ MOV         R6, #8 
    /*00013940*/ ORR         R5, R5, #1 
    /*00013944*/ STRB        R5, [R3, #1836]             @ 0x72c 
    /*00013948*/ LDRH        R5, [R3, R7] 
    /*0001394c*/ BFI         R0, R6, #0, #4 
    /*00013950*/ LDR         R8, [LR, #2572]             @ 0xa0c 
    /*00013954*/ BFI         R0, R2, #4, #1 
    /*00013958*/ BFI         R5, R8, #4, #5 
    /*0001395c*/ STRH        R5, [R3, R7] 
    /*00013960*/ LDR         R7, [LR, #2576]             @ 0xa10 
    /*00013964*/ LDR         R5, [R3, #1836]             @ 0x72c 
    /*00013968*/ STRB        R6, [R3, #1828]             @ 0x724 
    /*0001396c*/ STRB        R0, [R3, #1829]             @ 0x725 
    /*00013970*/ BFI         R5, R7, #12, #5 
    /*00013974*/ STR         R5, [R3, #1836]             @ 0x72c 
    /*00013978*/ LDR         R3, [LR, #2396]             @ 0x95c 
    /*0001397c*/ SUB         R3, R3, #1 
    /*00013980*/ CMP         R3, R1 
    /*00013984*/ STREQ       R2, [LR, #2568]             @ 0xa08 
    /*00013988*/ B           H264E_DRV_UpdateRegConfigConfigParamUnusual_x13910
FUNC_END H264E_DRV_UpdateRegConfigConfigParamUnusual


FUNC_BEGIN H264E_DRV_UpdateBaseReg
    /*0001398c*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00013990*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013994*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013998*/ MOV         R9, R0 
    /*0001399c*/ MOV         R7, R1 
    /*000139a0*/ LDR         R8, [R3, R0, LSL #2] 
    /*000139a4*/ ADD         SL, R8, R1, LSL #2 
    /*000139a8*/ LDR         R2, [R8, #1196]             @ 0x4ac 
    /*000139ac*/ LDR         R4, [SL, #1056]             @ 0x420 
    /*000139b0*/ LDR         R2, [R2, #12] 
    /*000139b4*/ CMP         R2, #39                     @ 0x27 
    /*000139b8*/ BEQ         H264E_DRV_UpdateBaseReg_x13cec
    /*000139bc*/ ADD         R6, R8, #12288              @ 0x3000 
    /*000139c0*/ LDR         R2, [R6, #1988]             @ 0x7c4 
    /*000139c4*/ SUB         R1, R2, #4 
    /*000139c8*/ CMP         R2, #12 
    /*000139cc*/ CMPNE       R1, #1 
    /*000139d0*/ BLS         H264E_DRV_UpdateBaseReg_x13cb4
    H264E_DRV_UpdateBaseReg_x139d4:
    /*000139d4*/ LDR         R1, [R6, #2008]             @ 0x7d8 
    H264E_DRV_UpdateBaseReg_x139d8:
    /*000139d8*/ LDRB        R2, [R4, #573]              @ 0x23d 
    /*000139dc*/ BFI         R2, R1, #6, #1 
    /*000139e0*/ STRB        R2, [R4, #573]              @ 0x23d 
    H264E_DRV_UpdateBaseReg_x139e4:
    /*000139e4*/ LDRB        R1, [R4, #573]              @ 0x23d 
    /*000139e8*/ ADD         R2, R7, #264                @ 0x108 
    /*000139ec*/ MOV         R0, #25 
    /*000139f0*/ BFC         R1, #7, #1 
    /*000139f4*/ STRB        R1, [R4, #573]              @ 0x23d 
    /*000139f8*/ LDR         R5, [R3, R9, LSL #2] 
    /*000139fc*/ LDR         FP, [R5, R2, LSL #2] 
    /*00013a00*/ BL          0x0000000000013A00          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013a04*/ LDR         R3, [R0, #68]               @ 0x44 
    /*00013a08*/ CMP         R3, #0 
    /*00013a0c*/ BEQ         H264E_DRV_UpdateBaseReg_x13a30
    /*00013a10*/ MOV         R0, #25 
    /*00013a14*/ BL          0x0000000000013A14          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013a18*/ ADD         R1, R5, #14272              @ 0x37c0 
    /*00013a1c*/ ADD         R1, R1, #56                 @ 0x38 
    /*00013a20*/ MOV         R2, #0 
    /*00013a24*/ LDR         R3, [R0, #68]               @ 0x44 
    /*00013a28*/ MOV         R0, FP 
    /*00013a2c*/ BLX         R3 
    H264E_DRV_UpdateBaseReg_x13a30:
    /*00013a30*/ MOV         R2, R4 
    /*00013a34*/ MOV         R3, #0 
    /*00013a38*/ STR         R3, [R2, #576]!             @ 0x240 
    /*00013a3c*/ MOV         R1, #1 
    /*00013a40*/ LDR         R0, [R8, #1196]             @ 0x4ac 
    /*00013a44*/ ADD         R5, R8, #8192               @ 0x2000 
    /*00013a48*/ LDRH        R3, [R2] 
    /*00013a4c*/ LDR         R0, [R0, #20] 
    /*00013a50*/ CMP         R0, #0 
    /*00013a54*/ MOVEQ       R0, #0 
    /*00013a58*/ MOVNE       R0, #10 
    /*00013a5c*/ BFI         R3, R0, #6, #4 
    /*00013a60*/ STRH        R3, [R2] 
    /*00013a64*/ LDR         IP, [R4, #580]              @ 0x244 
    /*00013a68*/ LSR         R3, R3, #8 
    /*00013a6c*/ BFI         R3, R1, #2, #4 
    /*00013a70*/ STRB        R3, [R4, #577]              @ 0x241 
    /*00013a74*/ LDR         R3, [R6, #1344]             @ 0x540 
    /*00013a78*/ LDRB        R1, [R4, #1368]             @ 0x558 
    /*00013a7c*/ CMP         R3, #0 
    /*00013a80*/ LDRBNE      R3, [R4, #576]              @ 0x240 
    /*00013a84*/ LDRBEQ      R2, [R4, #576]              @ 0x240 
    /*00013a88*/ ORRNE       R3, R3, #4 
    /*00013a8c*/ BFIEQ       R2, R3, #2, #1 
    /*00013a90*/ STRBNE      R3, [R4, #576]              @ 0x240 
    /*00013a94*/ STRBEQ      R2, [R4, #576]              @ 0x240 
    /*00013a98*/ MOV         R2, #148                    @ 0x94 
    /*00013a9c*/ LDR         R3, [R5, #24] 
    /*00013aa0*/ MLA         R2, R2, R7, R8 
    /*00013aa4*/ CMP         R3, #0 
    /*00013aa8*/ LDRBEQ      R3, [R4, #577]              @ 0x241 
    /*00013aac*/ ORREQ       R3, R3, #64                 @ 0x40 
    /*00013ab0*/ STRBEQ      R3, [R4, #577]              @ 0x241 
    /*00013ab4*/ LDRB        R3, [R4, #512]              @ 0x200 
    /*00013ab8*/ LDR         R0, [R5, #1416]             @ 0x588 
    /*00013abc*/ ORR         R3, R3, #1 
    /*00013ac0*/ STRB        R3, [R4, #512]              @ 0x200 
    /*00013ac4*/ BFI         R1, R0, #1, #1 
    /*00013ac8*/ STRB        R1, [R4, #1368]             @ 0x558 
    /*00013acc*/ LDR         R3, [R6, #2396]             @ 0x95c 
    /*00013ad0*/ MOV         R0, #1 
    /*00013ad4*/ LDRB        R1, [R4, #512]              @ 0x200 
    /*00013ad8*/ CMP         R3, #1 
    /*00013adc*/ MOVLS       R3, #0 
    /*00013ae0*/ MOVHI       R3, #1 
    /*00013ae4*/ BFI         R1, R3, #1, #1 
    /*00013ae8*/ LDRB        R3, [R4, #86]               @ 0x56 
    /*00013aec*/ STRB        R1, [R4, #512]              @ 0x200 
    /*00013af0*/ CMP         R7, #0 
    /*00013af4*/ LDR         R1, [R5, #1372]             @ 0x55c 
    /*00013af8*/ BFI         R3, R1, #4, #1 
    /*00013afc*/ STRB        R3, [R4, #86]               @ 0x56 
    /*00013b00*/ LDR         R3, [R5, #1376]             @ 0x560 
    /*00013b04*/ LDRB        R1, [R4, #86]               @ 0x56 
    /*00013b08*/ SUB         R3, R3, #1 
    /*00013b0c*/ STRH        R3, [R4, #84]               @ 0x54 
    /*00013b10*/ BFI         R1, R0, #0, #2 
    /*00013b14*/ STRB        R1, [R4, #86]               @ 0x56 
    /*00013b18*/ LDR         R2, [R2, #948]              @ 0x3b4 
    /*00013b1c*/ ADD         R3, R4, #584                @ 0x248 
    /*00013b20*/ LDRB        R1, [R4, #565]              @ 0x235 
    /*00013b24*/ MOVW        R0, #586                    @ 0x24a 
    /*00013b28*/ BFI         IP, R2, #0, #20 
    /*00013b2c*/ STR         IP, [R4, #580]              @ 0x244 
    /*00013b30*/ LDR         R2, [R5, #1600]             @ 0x640 
    /*00013b34*/ BFI         R1, R2, #0, #2 
    /*00013b38*/ LDRB        R2, [R4, #564]              @ 0x234 
    /*00013b3c*/ STRB        R1, [R4, #565]              @ 0x235 
    /*00013b40*/ LDR         R1, [R5, #1604]             @ 0x644 
    /*00013b44*/ BFI         R2, R1, #4, #4 
    /*00013b48*/ STRB        R2, [R4, #564]              @ 0x234 
    /*00013b4c*/ LDR         R1, [R5, #1608]             @ 0x648 
    /*00013b50*/ UXTB        R2, R2 
    /*00013b54*/ BFI         R2, R1, #0, #4 
    /*00013b58*/ STRB        R2, [R4, #564]              @ 0x234 
    /*00013b5c*/ MOV         R2, #16 
    /*00013b60*/ STRH        R2, [R3] 
    /*00013b64*/ STRH        R2, [R4, R0] 
    /*00013b68*/ BEQ         H264E_DRV_UpdateBaseReg_x13ce0
    H264E_DRV_UpdateBaseReg_x13b6c:
    /*00013b6c*/ LDRB        R1, [R4, #636]              @ 0x27c 
    /*00013b70*/ MVN         R2, #0 
    /*00013b74*/ MOV         R3, #7 
    /*00013b78*/ STR         R2, [R4, #604]              @ 0x25c 
    /*00013b7c*/ STR         R2, [R4, #612]              @ 0x264 
    /*00013b80*/ BFC         R1, #4, #3 
    /*00013b84*/ STR         R2, [R4, #620]              @ 0x26c 
    /*00013b88*/ STR         R2, [R4, #628]              @ 0x274 
    /*00013b8c*/ STRB        R1, [R4, #636]              @ 0x27c 
    /*00013b90*/ STR         R3, [R4, #608]              @ 0x260 
    /*00013b94*/ STR         R3, [R4, #616]              @ 0x268 
    /*00013b98*/ STR         R3, [R4, #624]              @ 0x270 
    /*00013b9c*/ STR         R3, [R4, #632]              @ 0x278 
    /*00013ba0*/ LDR         R3, [R6, #1988]             @ 0x7c4 
    /*00013ba4*/ CMP         R3, #10 
    /*00013ba8*/ LDRBEQ      R3, [R4, #516]              @ 0x204 
    /*00013bac*/ MOVNE       R3, #0 
    /*00013bb0*/ MOVEQ       R2, #2 
    /*00013bb4*/ STRNE       R3, [R4, #516]              @ 0x204 
    /*00013bb8*/ BFIEQ       R3, R2, #6, #2 
    /*00013bbc*/ STRBEQ      R3, [R4, #516]              @ 0x204 
    /*00013bc0*/ LDR         R3, [R6, #2084]             @ 0x824 
    /*00013bc4*/ SUB         R3, R3, #4 
    /*00013bc8*/ CMP         R3, #1 
    /*00013bcc*/ MOV         R3, #0 
    /*00013bd0*/ STR         R3, [R4, #520]              @ 0x208 
    /*00013bd4*/ MOVLS       R3, #3 
    /*00013bd8*/ STR         R3, [R4, #524]              @ 0x20c 
    /*00013bdc*/ ADD         R3, R8, #4096               @ 0x1000 
    /*00013be0*/ LDR         R3, [R3, #3680]             @ 0xe60 
    /*00013be4*/ STR         R3, [R4, #528]              @ 0x210 
    /*00013be8*/ LDR         R3, [R6, #1988]             @ 0x7c4 
    /*00013bec*/ SUB         R3, R3, #4 
    /*00013bf0*/ CMP         R3, #1 
    /*00013bf4*/ BLS         H264E_DRV_UpdateBaseReg_x13d00
    /*00013bf8*/ LDR         R3, [R5, #2876]             @ 0xb3c 
    /*00013bfc*/ CMP         R3, #0 
    /*00013c00*/ BEQ         H264E_DRV_UpdateBaseReg_x13d1c
    H264E_DRV_UpdateBaseReg_x13c04:
    /*00013c04*/ LDR         R3, [R3, #380]              @ 0x17c 
    /*00013c08*/ STR         R3, [R4, #532]              @ 0x214 
    /*00013c0c*/ LDR         R3, [R5, #2880]             @ 0xb40 
    /*00013c10*/ CMP         R3, #0 
    /*00013c14*/ LDRNE       R3, [R3, #380]              @ 0x17c 
    /*00013c18*/ STRNE       R3, [R4, #536]              @ 0x218 
    /*00013c1c*/ MOV         R3, #0 
    /*00013c20*/ STR         R3, [R4, #540]              @ 0x21c 
    /*00013c24*/ STR         R3, [R4, #544]              @ 0x220 
    /*00013c28*/ STR         R3, [R4, #548]              @ 0x224 
    H264E_DRV_UpdateBaseReg_x13c2c:
    /*00013c2c*/ LDR         R3, [R6, #1988]             @ 0x7c4 
    /*00013c30*/ SUB         R3, R3, #4 
    /*00013c34*/ CMP         R3, #1 
    /*00013c38*/ BLS         H264E_DRV_UpdateBaseReg_x13ccc
    /*00013c3c*/ LDR         R3, [R5, #2156]             @ 0x86c 
    /*00013c40*/ CMP         R3, #1 
    /*00013c44*/ BEQ         H264E_DRV_UpdateBaseReg_x13ccc
    H264E_DRV_UpdateBaseReg_x13c48:
    /*00013c48*/ ADD         R3, R7, #131                @ 0x83 
    /*00013c4c*/ LDR         R0, [SL, #1056]             @ 0x420 
    /*00013c50*/ MOV         R2, #256                    @ 0x100 
    /*00013c54*/ LDR         R1, [R8, R3, LSL #3] 
    /*00013c58*/ ADD         R0, R0, #512                @ 0x200 
    /*00013c5c*/ ADD         R1, R1, #512                @ 0x200 
    /*00013c60*/ BL          0x0000000000013C60          @ hil_mmb_flush_dcache_byaddr [R_ARM_CALL: +0x0] 
    /*00013c64*/ LDR         R3, [R6, #1988]             @ 0x7c4 
    /*00013c68*/ SUB         R3, R3, #4 
    /*00013c6c*/ CMP         R3, #1 
    /*00013c70*/ BLS         H264E_DRV_UpdateBaseReg_x13c80
    /*00013c74*/ LDR         R3, [R5, #2156]             @ 0x86c 
    /*00013c78*/ CMP         R3, #1 
    /*00013c7c*/ POPNE       {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_DRV_UpdateBaseReg_x13c80:
    /*00013c80*/ MOV         R2, #148                    @ 0x94 
    /*00013c84*/ LDR         R3, [R5, #1584]             @ 0x630 
    /*00013c88*/ MLA         R7, R2, R7, R8 
    /*00013c8c*/ STR         R3, [R7, #808]              @ 0x328 
    /*00013c90*/ LDR         R3, [R5, #1588]             @ 0x634 
    /*00013c94*/ STR         R3, [R7, #812]              @ 0x32c 
    /*00013c98*/ LDR         R3, [R5, #1592]             @ 0x638 
    /*00013c9c*/ STR         R3, [R7, #816]              @ 0x330 
    /*00013ca0*/ LDR         R3, [R5, #1564]             @ 0x61c 
    /*00013ca4*/ STR         R3, [R7, #824]              @ 0x338 
    /*00013ca8*/ LDR         R3, [R5, #1428]             @ 0x594 
    /*00013cac*/ STR         R3, [R7, #820]              @ 0x334 
    /*00013cb0*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_DRV_UpdateBaseReg_x13cb4:
    /*00013cb4*/ LDR         R2, [R6, #1344]             @ 0x540 
    /*00013cb8*/ CMP         R2, #1 
    /*00013cbc*/ LDRNE       R1, [R6, #2004]             @ 0x7d4 
    /*00013cc0*/ STRNE       R1, [R6, #2008]             @ 0x7d8 
    /*00013cc4*/ BNE         H264E_DRV_UpdateBaseReg_x139d8
    /*00013cc8*/ B           H264E_DRV_UpdateBaseReg_x139d4
    H264E_DRV_UpdateBaseReg_x13ccc:
    /*00013ccc*/ LDR         R2, [R5, #1388]             @ 0x56c 
    /*00013cd0*/ LDRB        R3, [R4, #568]              @ 0x238 
    /*00013cd4*/ BFI         R3, R2, #0, #1 
    /*00013cd8*/ STRB        R3, [R4, #568]              @ 0x238 
    /*00013cdc*/ B           H264E_DRV_UpdateBaseReg_x13c48
    H264E_DRV_UpdateBaseReg_x13ce0:
    /*00013ce0*/ MOV         R0, R9 
    /*00013ce4*/ BL          0x0000000000013CE4          @ H264eDrvUpdateIntraRefresh [R_ARM_CALL: .text+0x1329c] 
    /*00013ce8*/ B           H264E_DRV_UpdateBaseReg_x13b6c
    H264E_DRV_UpdateBaseReg_x13cec:
    /*00013cec*/ LDRB        R2, [R4, #573]              @ 0x23d 
    /*00013cf0*/ ADD         R6, R8, #12288              @ 0x3000 
    /*00013cf4*/ ORR         R2, R2, #64                 @ 0x40 
    /*00013cf8*/ STRB        R2, [R4, #573]              @ 0x23d 
    /*00013cfc*/ B           H264E_DRV_UpdateBaseReg_x139e4
    H264E_DRV_UpdateBaseReg_x13d00:
    /*00013d00*/ MOV         R3, #0 
    /*00013d04*/ STR         R3, [R4, #532]              @ 0x214 
    /*00013d08*/ STR         R3, [R4, #536]              @ 0x218 
    /*00013d0c*/ STR         R3, [R4, #540]              @ 0x21c 
    /*00013d10*/ STR         R3, [R4, #544]              @ 0x220 
    /*00013d14*/ STR         R3, [R4, #548]              @ 0x224 
    /*00013d18*/ B           H264E_DRV_UpdateBaseReg_x13c2c
    H264E_DRV_UpdateBaseReg_x13d1c:
    /*00013d1c*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4480] 
    /*00013d20*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4370] 
    /*00013d24*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4480] 
    /*00013d28*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4370] 
    /*00013d2c*/ MOVW        R2, #2155                   @ 0x86b 
    /*00013d30*/ LDR         R1, [PC, #8]                @ 0x0000000000013d40 
    /*00013d34*/ BL          0x0000000000013D34          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00013d38*/ LDR         R3, [R5, #2876]             @ 0xb3c 
    /*00013d3c*/ B           H264E_DRV_UpdateBaseReg_x13c04
    /*00013d40*/ ANDEQ       R0, R0, R8, LSR #20 
FUNC_END H264E_DRV_UpdateBaseReg


FUNC_BEGIN H264E_DRV_UpdateCommonReg
    /*00013d44*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013d48*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013d4c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00013d50*/ MOV         R6, R1 
    /*00013d54*/ LDR         R5, [R3, R0, LSL #2] 
    /*00013d58*/ ADD         R7, R5, R1, LSL #2 
    /*00013d5c*/ ADD         R2, R5, #8192               @ 0x2000 
    /*00013d60*/ ADD         R1, R5, #12288              @ 0x3000 
    /*00013d64*/ LDR         R4, [R7, #1056]             @ 0x420 
    /*00013d68*/ LDR         R0, [R2, #24] 
    /*00013d6c*/ LDRB        R3, [R4, #1024]             @ 0x400 
    /*00013d70*/ BFI         R3, R0, #0, #2 
    /*00013d74*/ STRB        R3, [R4, #1024]             @ 0x400 
    /*00013d78*/ LDR         R3, [R1, #1988]             @ 0x7c4 
    /*00013d7c*/ SUB         R3, R3, #4 
    /*00013d80*/ CMP         R3, #1 
    /*00013d84*/ BLS         H264E_DRV_UpdateCommonReg_x13f40
    /*00013d88*/ LDR         R3, [R2, #2156]             @ 0x86c 
    /*00013d8c*/ CMP         R3, #1 
    /*00013d90*/ BEQ         H264E_DRV_UpdateCommonReg_x13f40
    H264E_DRV_UpdateCommonReg_x13d94:
    /*00013d94*/ MOV         R3, #148                    @ 0x94 
    /*00013d98*/ LDR         R1, [R4, #1144]             @ 0x478 
    /*00013d9c*/ MLA         R3, R3, R6, R5 
    /*00013da0*/ LDRB        LR, [R4, #1142]             @ 0x476 
    /*00013da4*/ LDRB        IP, [R4, #1141]             @ 0x475 
    /*00013da8*/ LDRB        R0, [R4, #1140]             @ 0x474 
    /*00013dac*/ LDR         R8, [R3, #828]              @ 0x33c 
    /*00013db0*/ STR         R8, [R4, #1108]             @ 0x454 
    /*00013db4*/ LDR         R8, [R3, #832]              @ 0x340 
    /*00013db8*/ STR         R8, [R4, #1112]             @ 0x458 
    /*00013dbc*/ LDR         R8, [R3, #836]              @ 0x344 
    /*00013dc0*/ STR         R8, [R4, #1116]             @ 0x45c 
    /*00013dc4*/ LDR         R8, [R3, #840]              @ 0x348 
    /*00013dc8*/ STR         R8, [R4, #1120]             @ 0x460 
    /*00013dcc*/ LDR         R8, [R3, #844]              @ 0x34c 
    /*00013dd0*/ STR         R8, [R4, #1124]             @ 0x464 
    /*00013dd4*/ LDR         R8, [R3, #848]              @ 0x350 
    /*00013dd8*/ STR         R8, [R4, #1128]             @ 0x468 
    /*00013ddc*/ LDR         R8, [R3, #852]              @ 0x354 
    /*00013de0*/ STR         R8, [R4, #1132]             @ 0x46c 
    /*00013de4*/ LDR         R8, [R3, #856]              @ 0x358 
    /*00013de8*/ STR         R8, [R4, #1136]             @ 0x470 
    /*00013dec*/ LDR         R8, [R3, #872]              @ 0x368 
    /*00013df0*/ BFI         R1, R8, #1, #24 
    /*00013df4*/ STR         R1, [R4, #1144]             @ 0x478 
    /*00013df8*/ LDR         R1, [R5, #968]              @ 0x3c8 
    /*00013dfc*/ LDRB        R8, [R4, #1144]             @ 0x478 
    /*00013e00*/ SUB         R1, R1, #3 
    /*00013e04*/ CLZ         R1, R1 
    /*00013e08*/ LSR         R1, R1, #5 
    /*00013e0c*/ BFI         R8, R1, #0, #1 
    /*00013e10*/ STRB        R8, [R4, #1144]             @ 0x478 
    /*00013e14*/ LDR         R1, [R3, #860]              @ 0x35c 
    /*00013e18*/ BFI         LR, R1, #0, #7 
    /*00013e1c*/ STRB        LR, [R4, #1142]             @ 0x476 
    /*00013e20*/ LDR         R1, [R3, #864]              @ 0x360 
    /*00013e24*/ BFI         IP, R1, #0, #6 
    /*00013e28*/ STRB        IP, [R4, #1141]             @ 0x475 
    /*00013e2c*/ LDR         R1, [R3, #868]              @ 0x364 
    /*00013e30*/ BFI         R0, R1, #0, #6 
    /*00013e34*/ STRB        R0, [R4, #1140]             @ 0x474 
    /*00013e38*/ LDR         R2, [R2, #2156]             @ 0x86c 
    /*00013e3c*/ CMP         R2, #0 
    /*00013e40*/ BEQ         H264E_DRV_UpdateCommonReg_x13eb4
    /*00013e44*/ LDR         R2, [R3, #876]              @ 0x36c 
    /*00013e48*/ LDRB        R0, [R4, #1182]             @ 0x49e 
    /*00013e4c*/ LDRB        R1, [R4, #1181]             @ 0x49d 
    /*00013e50*/ STR         R2, [R4, #1148]             @ 0x47c 
    /*00013e54*/ LDR         IP, [R3, #880]              @ 0x370 
    /*00013e58*/ LDRB        R2, [R4, #1180]             @ 0x49c 
    /*00013e5c*/ STR         IP, [R4, #1152]             @ 0x480 
    /*00013e60*/ LDR         IP, [R3, #884]              @ 0x374 
    /*00013e64*/ STR         IP, [R4, #1156]             @ 0x484 
    /*00013e68*/ LDR         IP, [R3, #888]              @ 0x378 
    /*00013e6c*/ STR         IP, [R4, #1160]             @ 0x488 
    /*00013e70*/ LDR         IP, [R3, #892]              @ 0x37c 
    /*00013e74*/ STR         IP, [R4, #1164]             @ 0x48c 
    /*00013e78*/ LDR         IP, [R3, #896]              @ 0x380 
    /*00013e7c*/ STR         IP, [R4, #1168]             @ 0x490 
    /*00013e80*/ LDR         IP, [R3, #900]              @ 0x384 
    /*00013e84*/ STR         IP, [R4, #1172]             @ 0x494 
    /*00013e88*/ LDR         IP, [R3, #904]              @ 0x388 
    /*00013e8c*/ STR         IP, [R4, #1176]             @ 0x498 
    /*00013e90*/ LDR         IP, [R3, #908]              @ 0x38c 
    /*00013e94*/ BFI         R0, IP, #0, #7 
    /*00013e98*/ STRB        R0, [R4, #1182]             @ 0x49e 
    /*00013e9c*/ LDR         R0, [R3, #912]              @ 0x390 
    /*00013ea0*/ BFI         R1, R0, #0, #6 
    /*00013ea4*/ STRB        R1, [R4, #1181]             @ 0x49d 
    /*00013ea8*/ LDR         R3, [R3, #916]              @ 0x394 
    /*00013eac*/ BFI         R2, R3, #0, #6 
    /*00013eb0*/ STRB        R2, [R4, #1180]             @ 0x49c 
    H264E_DRV_UpdateCommonReg_x13eb4:
    /*00013eb4*/ LDR         R2, [R7, #1060]             @ 0x424 
    /*00013eb8*/ MOV         R3, #0 
    /*00013ebc*/ MOV         R0, #25 
    /*00013ec0*/ LDR         R2, [R2, #8] 
    /*00013ec4*/ STR         R2, [R4, #1184]             @ 0x4a0 
    /*00013ec8*/ LDR         R2, [R5, #1196]             @ 0x4ac 
    /*00013ecc*/ LDR         R2, [R2, #240]              @ 0xf0 
    /*00013ed0*/ STR         R2, [R4, #1188]             @ 0x4a4 
    /*00013ed4*/ LDR         R2, [R5, #1196]             @ 0x4ac 
    /*00013ed8*/ LDR         R2, [R2, #244]              @ 0xf4 
    /*00013edc*/ STR         R3, [R4, #1196]             @ 0x4ac 
    /*00013ee0*/ STR         R3, [R4, #1200]             @ 0x4b0 
    /*00013ee4*/ STR         R2, [R4, #1192]             @ 0x4a8 
    /*00013ee8*/ BL          0x0000000000013EE8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013eec*/ LDR         R3, [R0, #72]               @ 0x48 
    /*00013ef0*/ CMP         R3, #0 
    /*00013ef4*/ BEQ         H264E_DRV_UpdateCommonReg_x13f20
    /*00013ef8*/ MOV         R0, #25 
    /*00013efc*/ BL          0x0000000000013EFC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013f00*/ ADD         R3, R5, #10112              @ 0x2780 
    /*00013f04*/ ADD         R2, R5, #9856               @ 0x2680 
    /*00013f08*/ ADD         R3, R3, #20 
    /*00013f0c*/ ADD         R2, R2, #60                 @ 0x3c 
    /*00013f10*/ LDR         R1, [R5, #1196]             @ 0x4ac 
    /*00013f14*/ LDR         R8, [R0, #72]               @ 0x48 
    /*00013f18*/ MOV         R0, R4 
    /*00013f1c*/ BLX         R8 
    H264E_DRV_UpdateCommonReg_x13f20:
    /*00013f20*/ ADD         R6, R6, #131                @ 0x83 
    /*00013f24*/ LDR         R0, [R7, #1056]             @ 0x420 
    /*00013f28*/ MOV         R2, #256                    @ 0x100 
    /*00013f2c*/ LDR         R1, [R5, R6, LSL #3] 
    /*00013f30*/ ADD         R0, R0, #1024               @ 0x400 
    /*00013f34*/ POP         {R4, R5, R6, R7, R8, LR} 
    /*00013f38*/ ADD         R1, R1, #1024               @ 0x400 
    H264E_DRV_UpdateCommonReg_x13f3c:
    /*00013f3c*/ B           H264E_DRV_UpdateCommonReg_x13f3c@ hil_mmb_flush_dcache_byaddr [R_ARM_JUMP24: +0x0] 
    H264E_DRV_UpdateCommonReg_x13f40:
    /*00013f40*/ LDRB        R1, [R4, #1025]             @ 0x401 
    /*00013f44*/ LDRB        R3, [R4, #1024]             @ 0x400 
    /*00013f48*/ BFC         R1, #4, #1 
    /*00013f4c*/ STRB        R1, [R4, #1025]             @ 0x401 
    /*00013f50*/ LDR         R1, [R2, #1580]             @ 0x62c 
    /*00013f54*/ BFI         R3, R1, #4, #2 
    /*00013f58*/ STRB        R3, [R4, #1024]             @ 0x400 
    /*00013f5c*/ B           H264E_DRV_UpdateCommonReg_x13d94
FUNC_END H264E_DRV_UpdateCommonReg


FUNC_BEGIN H264E_DRV_SetSceneMode
    /*00013f60*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013f64*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013f68*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00013f6c*/ LDR         R5, [R3, R0, LSL #2] 
    /*00013f70*/ ADD         R6, R5, #12288              @ 0x3000 
    /*00013f74*/ LDR         R3, [R6, #2636]             @ 0xa4c 
    /*00013f78*/ CMP         R3, #1 
    /*00013f7c*/ BLS         H264E_DRV_SetSceneMode_x14004
    /*00013f80*/ CMP         R1, #0 
    /*00013f84*/ BLE         H264E_DRV_SetSceneMode_x14004
    /*00013f88*/ ADD         R7, R1, #264                @ 0x108 
    /*00013f8c*/ MOV         IP, #0 
    /*00013f90*/ MOV         R0, #1 
    /*00013f94*/ MOV         R4, #2 
    /*00013f98*/ B           H264E_DRV_SetSceneMode_x13fd0
    H264E_DRV_SetSceneMode_x13f9c:
    /*00013f9c*/ BFI         R3, R0, #0, #4 
    /*00013fa0*/ BFI         R3, R0, #4, #4 
    /*00013fa4*/ BFI         R3, R0, #8, #4 
    /*00013fa8*/ BFI         R3, R0, #16, #4 
    /*00013fac*/ BFI         R3, R0, #20, #4 
    /*00013fb0*/ BFI         R3, R0, #24, #4 
    H264E_DRV_SetSceneMode_x13fb4:
    /*00013fb4*/ ADD         IP, IP, #1 
    /*00013fb8*/ LDRB        LR, [R2, #1581]             @ 0x62d 
    /*00013fbc*/ CMP         R1, IP 
    /*00013fc0*/ STR         R3, [R2, #1800]             @ 0x708 
    /*00013fc4*/ BFC         LR, #4, #2 
    /*00013fc8*/ STRB        LR, [R2, #1581]             @ 0x62d 
    /*00013fcc*/ BEQ         H264E_DRV_SetSceneMode_x14004
    H264E_DRV_SetSceneMode_x13fd0:
    /*00013fd0*/ LDR         R3, [R6, #1988]             @ 0x7c4 
    /*00013fd4*/ LDR         R2, [R5, R7, LSL #2] 
    /*00013fd8*/ SUB         R3, R3, #4 
    /*00013fdc*/ CMP         R3, #1 
    /*00013fe0*/ LDR         R3, [R2, #1800]             @ 0x708 
    /*00013fe4*/ BHI         H264E_DRV_SetSceneMode_x13f9c
    /*00013fe8*/ BFI         R3, R4, #0, #4 
    /*00013fec*/ BFI         R3, R4, #4, #4 
    /*00013ff0*/ BFI         R3, R4, #8, #4 
    /*00013ff4*/ BFI         R3, R4, #16, #4 
    /*00013ff8*/ BFI         R3, R4, #20, #4 
    /*00013ffc*/ BFI         R3, R4, #24, #4 
    /*00014000*/ B           H264E_DRV_SetSceneMode_x13fb4
    H264E_DRV_SetSceneMode_x14004:
    /*00014004*/ MOV         R0, #0 
    /*00014008*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END H264E_DRV_SetSceneMode


FUNC_BEGIN H264eDrvUpdatePatternRemovalCfg
    /*0001400c*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00014010*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00014014*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00014018*/ ADD         LR, R1, #131                @ 0x83 
    /*0001401c*/ LDR         IP, [R3, R0, LSL #2] 
    /*00014020*/ MOV         R0, #0 
    /*00014024*/ MOV         R2, #128                    @ 0x80 
    /*00014028*/ ADD         R1, IP, R1, LSL #2 
    /*0001402c*/ LDR         R3, [R1, #1056]             @ 0x420 
    /*00014030*/ STR         R0, [R3, #2944]             @ 0xb80 
    /*00014034*/ STR         R0, [R3, #2948]             @ 0xb84 
    /*00014038*/ STR         R0, [R3, #2952]             @ 0xb88 
    /*0001403c*/ STR         R0, [R3, #2956]             @ 0xb8c 
    /*00014040*/ STR         R0, [R3, #2960]             @ 0xb90 
    /*00014044*/ STR         R0, [R3, #2964]             @ 0xb94 
    /*00014048*/ STR         R0, [R3, #2968]             @ 0xb98 
    /*0001404c*/ STR         R0, [R3, #2972]             @ 0xb9c 
    /*00014050*/ STR         R0, [R3, #2976]             @ 0xba0 
    /*00014054*/ STR         R0, [R3, #2980]             @ 0xba4 
    /*00014058*/ STR         R0, [R3, #2984]             @ 0xba8 
    /*0001405c*/ STR         R0, [R3, #2988]             @ 0xbac 
    /*00014060*/ STR         R0, [R3, #2992]             @ 0xbb0 
    /*00014064*/ STR         R0, [R3, #2996]             @ 0xbb4 
    /*00014068*/ STR         R0, [R3, #3000]             @ 0xbb8 
    /*0001406c*/ STR         R0, [R3, #3004]             @ 0xbbc 
    /*00014070*/ STR         R0, [R3, #3008]             @ 0xbc0 
    /*00014074*/ STR         R0, [R3, #3012]             @ 0xbc4 
    /*00014078*/ STR         R0, [R3, #3016]             @ 0xbc8 
    /*0001407c*/ STR         R0, [R3, #3020]             @ 0xbcc 
    /*00014080*/ STR         R0, [R3, #3024]             @ 0xbd0 
    /*00014084*/ STR         R0, [R3, #3028]             @ 0xbd4 
    /*00014088*/ STR         R0, [R3, #3032]             @ 0xbd8 
    /*0001408c*/ STR         R0, [R3, #3036]             @ 0xbdc 
    /*00014090*/ LDR         R3, [IP, LR, LSL #3] 
    /*00014094*/ LDR         R0, [R1, #1056]             @ 0x420 
    /*00014098*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    /*0001409c*/ ADD         R1, R3, #2944               @ 0xb80 
    /*000140a0*/ ADD         R0, R0, #2944               @ 0xb80 
    H264eDrvUpdatePatternRemovalCfg_x140a4:
    /*000140a4*/ B           H264eDrvUpdatePatternRemovalCfg_x140a4@ hil_mmb_flush_dcache_byaddr [R_ARM_JUMP24: +0x0] 
FUNC_END H264eDrvUpdatePatternRemovalCfg


FUNC_BEGIN H264eDrvUpdateArithMeticCfg
    /*000140a8*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000140ac*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000140b0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000140b4*/ SUB         SP, SP, #20 
    /*000140b8*/ LDR         R3, [R3, R0, LSL #2] 
    /*000140bc*/ STR         R1, [SP, #12] 
    /*000140c0*/ ADD         R2, R3, #12288              @ 0x3000 
    /*000140c4*/ ADD         R5, R3, R1, LSL #2 
    /*000140c8*/ STR         R3, [SP, #8] 
    /*000140cc*/ LDR         R3, [R2, #2636]             @ 0xa4c 
    /*000140d0*/ STR         R2, [SP, #4] 
    /*000140d4*/ SUB         R3, R3, #1 
    /*000140d8*/ LDR         R4, [R5, #1056]             @ 0x420 
    /*000140dc*/ CMP         R3, #1 
    /*000140e0*/ BLS         H264eDrvUpdateArithMeticCfg_x14528
    H264eDrvUpdateArithMeticCfg_x140e4:
    /*000140e4*/ LDR         R2, [R4, #2104]             @ 0x838 
    /*000140e8*/ MOVW        R3, #2104                   @ 0x838 
    /*000140ec*/ MOV         R0, #10 
    /*000140f0*/ MOV         R1, #4 
    /*000140f4*/ BFI         R2, R0, #12, #6 
    /*000140f8*/ LDRB        R8, [R4, #2060]             @ 0x80c 
    /*000140fc*/ STR         R2, [R4, #2104]             @ 0x838 
    /*00014100*/ BFI         R2, R1, #0, #4 
    /*00014104*/ LDRB        R9, [R4, #2061]             @ 0x80d 
    /*00014108*/ MOV         R0, #51                     @ 0x33 
    /*0001410c*/ STRB        R2, [R4, #2104]             @ 0x838 
    /*00014110*/ MOV         R2, #10 
    /*00014114*/ LDRH        LR, [R4, R3] 
    /*00014118*/ BFI         R8, R2, #0, #6 
    /*0001411c*/ LDRB        SL, [R4, #2089]             @ 0x829 
    /*00014120*/ BFI         R9, R0, #0, #6 
    /*00014124*/ LDRB        IP, [R4, #2090]             @ 0x82a 
    /*00014128*/ BFI         LR, R0, #4, #6 
    /*0001412c*/ LDRB        R6, [R4, #2069]             @ 0x815 
    /*00014130*/ BFI         SL, R0, #0, #6 
    /*00014134*/ LDRB        R7, [R4, #2088]             @ 0x828 
    /*00014138*/ BFI         IP, R1, #0, #4 
    /*0001413c*/ LDRB        R2, [R4, #2068]             @ 0x814 
    /*00014140*/ BFI         R6, R0, #0, #6 
    /*00014144*/ STRB        R1, [R4, #2085]             @ 0x825 
    /*00014148*/ STRH        LR, [R4, R3] 
    /*0001414c*/ MOV         R3, #0 
    /*00014150*/ STRB        R9, [R4, #2061]             @ 0x80d 
    /*00014154*/ BFI         R7, R3, #0, #6 
    /*00014158*/ LDRB        R9, [R4, #2148]             @ 0x864 
    /*0001415c*/ BFI         R2, R3, #0, #6 
    /*00014160*/ LDRB        LR, [R4, #2070]             @ 0x816 
    /*00014164*/ BFI         R9, R3, #0, #6 
    /*00014168*/ STRB        SL, [R4, #2089]             @ 0x829 
    /*0001416c*/ STRB        R6, [R4, #2069]             @ 0x815 
    /*00014170*/ BFI         LR, R3, #0, #4 
    /*00014174*/ LDRB        SL, [R4, #2150]             @ 0x866 
    /*00014178*/ LDRB        R6, [R4, #2149]             @ 0x865 
    /*0001417c*/ STRB        R9, [R4, #2148]             @ 0x864 
    /*00014180*/ BFI         SL, R3, #0, #4 
    /*00014184*/ LDRB        R9, [R4, #2062]             @ 0x80e 
    /*00014188*/ BFI         R6, R3, #0, #6 
    /*0001418c*/ STRB        IP, [R4, #2090]             @ 0x82a 
    /*00014190*/ MOV         IP, #3 
    /*00014194*/ STRB        R8, [R4, #2060]             @ 0x80c 
    /*00014198*/ BFI         R9, IP, #0, #4 
    /*0001419c*/ MOV         R8, #60                     @ 0x3c 
    /*000141a0*/ STRB        R7, [R4, #2088]             @ 0x828 
    /*000141a4*/ STRB        R3, [R4, #2084]             @ 0x824 
    /*000141a8*/ MOVW        R7, #2108                   @ 0x83c 
    /*000141ac*/ STRB        R2, [R4, #2068]             @ 0x814 
    /*000141b0*/ ADD         R2, R4, #2128               @ 0x850 
    /*000141b4*/ STRB        LR, [R4, #2070]             @ 0x816 
    /*000141b8*/ MOV         LR, #100                    @ 0x64 
    /*000141bc*/ STRB        SL, [R4, #2150]             @ 0x866 
    /*000141c0*/ MVN         SL, #120                    @ 0x78 
    /*000141c4*/ STRB        R6, [R4, #2149]             @ 0x865 
    /*000141c8*/ MVN         R6, #115                    @ 0x73 
    /*000141cc*/ STRB        R8, [R4, #2086]             @ 0x826 
    /*000141d0*/ MVN         R8, #25 
    /*000141d4*/ STRB        R9, [R4, #2062]             @ 0x80e 
    /*000141d8*/ LDRB        FP, [R4, #2107]             @ 0x83b 
    /*000141dc*/ LDRB        R9, [R4, #2108]             @ 0x83c 
    /*000141e0*/ STRB        R1, [R4, #2116]             @ 0x844 
    /*000141e4*/ BFI         FP, R3, #0, #1 
    /*000141e8*/ BFI         R9, R3, #0, #1 
    /*000141ec*/ STRB        R9, [R4, #2108]             @ 0x83c 
    /*000141f0*/ LDRH        R9, [R4, R7] 
    /*000141f4*/ STRB        FP, [R4, #2107]             @ 0x83b 
    /*000141f8*/ MOV         FP, #10 
    /*000141fc*/ BFI         R9, R0, #4, #6 
    /*00014200*/ STRH        R9, [R4, R7] 
    /*00014204*/ LDR         R0, [R4, #2108]             @ 0x83c 
    /*00014208*/ MOV         R9, #116                    @ 0x74 
    /*0001420c*/ STRB        LR, [R4, #2120]             @ 0x848 
    /*00014210*/ MOV         R7, #120                    @ 0x78 
    /*00014214*/ BFI         R0, FP, #12, #6 
    /*00014218*/ LDRB        FP, [R4, #2117]             @ 0x845 
    /*0001421c*/ STR         R0, [R4, #2108]             @ 0x83c 
    /*00014220*/ LSR         R0, R0, #16 
    /*00014224*/ STRB        SL, [R4, #2121]             @ 0x849 
    /*00014228*/ STRB        R6, [R4, #2122]             @ 0x84a 
    /*0001422c*/ BFI         R0, IP, #4, #4 
    /*00014230*/ STRB        R6, [R4, #2125]             @ 0x84d 
    /*00014234*/ BFI         FP, R1, #0, #4 
    /*00014238*/ STRB        R0, [R4, #2110]             @ 0x83e 
    /*0001423c*/ MVN         SL, #119                    @ 0x77 
    /*00014240*/ STRB        R8, [R4, #2123]             @ 0x84b 
    /*00014244*/ MOVW        R0, #2132                   @ 0x854 
    /*00014248*/ STRB        R9, [R4, #2124]             @ 0x84c 
    /*0001424c*/ MOV         R6, #268                    @ 0x10c 
    /*00014250*/ STRB        R7, [R4, #2126]             @ 0x84e 
    /*00014254*/ ADD         R9, R4, R0 
    /*00014258*/ STRB        FP, [R4, #2117]             @ 0x845 
    /*0001425c*/ MOVW        R8, #330                    @ 0x14a 
    /*00014260*/ STRB        SL, [R4, #2127]             @ 0x84f 
    /*00014264*/ MOVW        R7, #2136                   @ 0x858 
    /*00014268*/ LDRH        FP, [R2] 
    /*0001426c*/ LDRH        SL, [R2, #2] 
    /*00014270*/ BFI         FP, R6, #0, #9 
    /*00014274*/ STRH        FP, [R2] 
    /*00014278*/ BFI         SL, R8, #0, #9 
    /*0001427c*/ STRH        SL, [R2, #2] 
    /*00014280*/ LDRH        R2, [R4, R0] 
    /*00014284*/ ADD         SL, R4, R7 
    /*00014288*/ MOV         R6, #260                    @ 0x104 
    /*0001428c*/ MOV         R8, #16 
    /*00014290*/ BFI         R2, LR, #0, #9 
    /*00014294*/ STRH        R2, [R4, R0] 
    /*00014298*/ LDRH        R0, [R9, #2] 
    /*0001429c*/ MOVW        R2, #2140                   @ 0x85c 
    /*000142a0*/ MOV         FP, #200                    @ 0xc8 
    /*000142a4*/ BFI         R0, R6, #0, #9 
    /*000142a8*/ STRH        R0, [R9, #2] 
    /*000142ac*/ LDRH        R9, [R4, R7] 
    /*000142b0*/ MOV         R6, #240                    @ 0xf0 
    /*000142b4*/ ADD         R0, R4, R2 
    /*000142b8*/ BFI         R9, R8, #0, #9 
    /*000142bc*/ STRH        R9, [R4, R7] 
    /*000142c0*/ LDRH        R7, [SL, #2] 
    /*000142c4*/ MOVW        R9, #2100                   @ 0x834 
    /*000142c8*/ BFI         R7, R6, #0, #9 
    /*000142cc*/ STRH        R7, [SL, #2] 
    /*000142d0*/ LDRH        SL, [R4, R2] 
    /*000142d4*/ MOV         R7, #64                     @ 0x40 
    /*000142d8*/ BFI         SL, R8, #0, #9 
    /*000142dc*/ STRH        SL, [R4, R2] 
    /*000142e0*/ LDRH        R2, [R0, #2] 
    /*000142e4*/ ADD         R8, R4, R9 
    /*000142e8*/ MOV         SL, #13 
    /*000142ec*/ BFI         R2, R6, #0, #9 
    /*000142f0*/ STRH        R2, [R0, #2] 
    /*000142f4*/ LDRH        R2, [R4, R9] 
    /*000142f8*/ MOVW        R6, #2052                   @ 0x804 
    /*000142fc*/ STRB        LR, [R4, #2099]             @ 0x833 
    /*00014300*/ MVN         R0, #122                    @ 0x7a 
    /*00014304*/ BFI         R2, R7, #0, #14 
    /*00014308*/ STRH        R2, [R4, R9] 
    /*0001430c*/ LDR         R2, [R4, #2100]             @ 0x834 
    /*00014310*/ MOV         LR, #123                    @ 0x7b 
    /*00014314*/ STRB        R0, [R4, #2092]             @ 0x82c 
    /*00014318*/ MOV         R9, #40                     @ 0x28 
    /*0001431c*/ BFI         R2, FP, #14, #9 
    /*00014320*/ STR         R2, [R4, #2100]             @ 0x834 
    /*00014324*/ STRB        R0, [R4, #2094]             @ 0x82e 
    /*00014328*/ MOV         R0, #125                    @ 0x7d 
    /*0001432c*/ LSR         R2, R2, #16 
    /*00014330*/ STRB        LR, [R4, #2093]             @ 0x82d 
    /*00014334*/ STRB        R0, [R4, #2095]             @ 0x82f 
    /*00014338*/ MOV         LR, #2 
    /*0001433c*/ STRB        R9, [R4, #2098]             @ 0x832 
    /*00014340*/ MOV         R0, #1 
    /*00014344*/ STRB        LR, [R4, #2097]             @ 0x831 
    /*00014348*/ BFI         R2, SL, #7, #5 
    /*0001434c*/ STRB        R0, [R4, #2096]             @ 0x830 
    /*00014350*/ MOV         R9, #32 
    /*00014354*/ STRH        R2, [R8, #2] 
    /*00014358*/ ADD         R8, R4, R6 
    /*0001435c*/ LDRH        FP, [R4, R6] 
    /*00014360*/ LSR         R2, R2, #8 
    /*00014364*/ STR         R3, [R4, #2152]             @ 0x868 
    /*00014368*/ BFI         R2, R0, #4, #4 
    /*0001436c*/ BFI         FP, R9, #0, #9 
    /*00014370*/ STRH        FP, [R4, R6] 
    /*00014374*/ LDR         R6, [R4, #2052]             @ 0x804 
    /*00014378*/ MOVW        R9, #3855                   @ 0xf0f 
    /*0001437c*/ STRB        R2, [R4, #2103]             @ 0x837 
    /*00014380*/ MOV         R2, #10 
    /*00014384*/ BFI         R6, R2, #9, #8 
    /*00014388*/ STR         R3, [R4, #2156]             @ 0x86c 
    /*0001438c*/ STR         R6, [R4, #2052]             @ 0x804 
    /*00014390*/ MOVT        R9, #1285                   @ 0x505 
    /*00014394*/ LSR         FP, R6, #16 
    /*00014398*/ STR         R3, [R4, #2160]             @ 0x870 
    /*0001439c*/ STR         R3, [R4, #2056]             @ 0x808 
    /*000143a0*/ MOVW        R2, #25727                  @ 0x647f 
    /*000143a4*/ STR         R9, [R4, #2144]             @ 0x860 
    /*000143a8*/ MOVT        R2, #34720                  @ 0x87a0 
    /*000143ac*/ BFI         FP, SL, #1, #5 
    /*000143b0*/ STR         R2, [R4, #2048]             @ 0x800 
    /*000143b4*/ STRB        FP, [R4, #2054]             @ 0x806 
    /*000143b8*/ ADD         R3, R4, #2080               @ 0x820 
    /*000143bc*/ LDRH        R2, [R8, #2] 
    /*000143c0*/ MOV         R6, #256                    @ 0x100 
    /*000143c4*/ MOV         R9, #8 
    /*000143c8*/ BFI         R2, LR, #6, #9 
    /*000143cc*/ STRH        R2, [R8, #2] 
    /*000143d0*/ LDR         R2, [R4, #2072]             @ 0x818 
    /*000143d4*/ BFI         R2, R6, #8, #14 
    /*000143d8*/ STR         R2, [R4, #2072]             @ 0x818 
    /*000143dc*/ LDRB        R6, [R4, #2115]             @ 0x843 
    /*000143e0*/ LDRB        R2, [R4, #2113]             @ 0x841 
    /*000143e4*/ STRB        IP, [R4, #2072]             @ 0x818 
    /*000143e8*/ BFI         R6, LR, #2, #5 
    /*000143ec*/ STRB        IP, [R4, #2065]             @ 0x811 
    /*000143f0*/ BFI         R2, R0, #2, #5 
    /*000143f4*/ STRB        R6, [R4, #2115]             @ 0x843 
    /*000143f8*/ STRB        R2, [R4, #2113]             @ 0x841 
    /*000143fc*/ STRB        R7, [R4, #2066]             @ 0x812 
    /*00014400*/ STRB        R0, [R4, #2112]             @ 0x840 
    /*00014404*/ STRB        IP, [R4, #2114]             @ 0x842 
    /*00014408*/ STRB        R9, [R4, #2064]             @ 0x810 
    /*0001440c*/ LDRH        R2, [R3] 
    /*00014410*/ BFI         R2, R1, #0, #13 
    /*00014414*/ STRH        R2, [R3] 
    /*00014418*/ LDRB        R3, [R4, #2082]             @ 0x822 
    /*0001441c*/ ORR         R3, R3, R0 
    /*00014420*/ STRB        R3, [R4, #2082]             @ 0x822 
    /*00014424*/ LDR         R3, [SP, #4] 
    /*00014428*/ LDR         R3, [R3, #2616]             @ 0xa38 
    /*0001442c*/ CMP         R3, R0 
    /*00014430*/ BEQ         H264eDrvUpdateArithMeticCfg_x144f0
    H264eDrvUpdateArithMeticCfg_x14434:
    /*00014434*/ LDR         R3, [SP, #4] 
    /*00014438*/ LDR         R3, [R3, #2580]             @ 0xa14 
    /*0001443c*/ CMP         R3, #1 
    /*00014440*/ BEQ         H264eDrvUpdateArithMeticCfg_x144b8
    H264eDrvUpdateArithMeticCfg_x14444:
    /*00014444*/ LDR         R2, [SP, #12] 
    /*00014448*/ LDR         R3, [SP, #8] 
    /*0001444c*/ LDR         R0, [R5, #1056]             @ 0x420 
    /*00014450*/ ADD         R4, R3, R2, LSL #3 
    /*00014454*/ MOV         R2, #128                    @ 0x80 
    /*00014458*/ ADD         R0, R0, #2944               @ 0xb80 
    /*0001445c*/ LDR         R1, [R4, #1048]             @ 0x418 
    /*00014460*/ ADD         R1, R1, #2944               @ 0xb80 
    /*00014464*/ BL          0x0000000000014464          @ hil_mmb_flush_dcache_byaddr [R_ARM_CALL: +0x0] 
    /*00014468*/ LDR         R1, [R4, #1048]             @ 0x418 
    /*0001446c*/ LDR         R0, [R5, #1056]             @ 0x420 
    /*00014470*/ MOV         R2, #384                    @ 0x180 
    /*00014474*/ ADD         R1, R1, #1280               @ 0x500 
    /*00014478*/ ADD         R0, R0, #1280               @ 0x500 
    /*0001447c*/ BL          0x000000000001447C          @ hil_mmb_flush_dcache_byaddr [R_ARM_CALL: +0x0] 
    /*00014480*/ LDR         R1, [R4, #1048]             @ 0x418 
    /*00014484*/ LDR         R0, [R5, #1056]             @ 0x420 
    /*00014488*/ MOV         R2, #256                    @ 0x100 
    /*0001448c*/ ADD         R1, R1, #2048               @ 0x800 
    /*00014490*/ ADD         R0, R0, #2048               @ 0x800 
    /*00014494*/ BL          0x0000000000014494          @ hil_mmb_flush_dcache_byaddr [R_ARM_CALL: +0x0] 
    /*00014498*/ LDR         R1, [R4, #1048]             @ 0x418 
    /*0001449c*/ LDR         R0, [R5, #1056]             @ 0x420 
    /*000144a0*/ MOV         R2, #256                    @ 0x100 
    /*000144a4*/ ADD         R1, R1, #1792               @ 0x700 
    /*000144a8*/ ADD         R0, R0, #1792               @ 0x700 
    /*000144ac*/ ADD         SP, SP, #20 
    /*000144b0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    H264eDrvUpdateArithMeticCfg_x144b4:
    /*000144b4*/ B           H264eDrvUpdateArithMeticCfg_x144b4@ hil_mmb_flush_dcache_byaddr [R_ARM_JUMP24: +0x0] 
    H264eDrvUpdateArithMeticCfg_x144b8:
    /*000144b8*/ MOV         R0, #25 
    /*000144bc*/ BL          0x00000000000144BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000144c0*/ LDR         R3, [R0, #84]               @ 0x54 
    /*000144c4*/ CMP         R3, #0 
    /*000144c8*/ BEQ         H264eDrvUpdateArithMeticCfg_x14444
    /*000144cc*/ MOV         R0, #25 
    /*000144d0*/ BL          0x00000000000144D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000144d4*/ LDR         R3, [SP, #8] 
    /*000144d8*/ ADD         R1, R3, #14848              @ 0x3a00 
    /*000144dc*/ ADD         R1, R1, #20 
    /*000144e0*/ LDR         R3, [R0, #84]               @ 0x54 
    /*000144e4*/ MOV         R0, R4 
    /*000144e8*/ BLX         R3 
    /*000144ec*/ B           H264eDrvUpdateArithMeticCfg_x14444
    H264eDrvUpdateArithMeticCfg_x144f0:
    /*000144f0*/ MOV         R0, #25 
    /*000144f4*/ BL          0x00000000000144F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000144f8*/ LDR         R3, [R0, #76]               @ 0x4c 
    /*000144fc*/ CMP         R3, #0 
    /*00014500*/ BEQ         H264eDrvUpdateArithMeticCfg_x14434
    /*00014504*/ MOV         R0, #25 
    /*00014508*/ BL          0x0000000000014508          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001450c*/ LDR         R3, [SP, #8] 
    /*00014510*/ ADD         R1, R3, #14848              @ 0x3a00 
    /*00014514*/ ADD         R1, R1, #56                 @ 0x38 
    /*00014518*/ LDR         R3, [R0, #76]               @ 0x4c 
    /*0001451c*/ MOV         R0, R4 
    /*00014520*/ BLX         R3 
    /*00014524*/ B           H264eDrvUpdateArithMeticCfg_x14434
    H264eDrvUpdateArithMeticCfg_x14528:
    /*00014528*/ BL          0x0000000000014528          @ H264E_DRV_SetSceneMode [R_ARM_CALL: .text+0x13f60] 
    /*0001452c*/ B           H264eDrvUpdateArithMeticCfg_x140e4
FUNC_END H264eDrvUpdateArithMeticCfg


FUNC_BEGIN H264eDrvCfgLambda
    /*00014530*/ MOVW        R2, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00014534*/ MOVT        R2, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00014538*/ PUSH        {R4, R5, LR} 
    /*0001453c*/ MOV         IP, #1 
    /*00014540*/ LDR         R4, [R2, R0, LSL #2] 
    /*00014544*/ LDR         R3, [PC, #108]              @ 0x00000000000145b8 
    /*00014548*/ ADD         R5, R4, R1, LSL #2 
    /*0001454c*/ ADD         LR, R3, #78                 @ 0x4e 
    /*00014550*/ LDR         R2, [R5, #1056]             @ 0x420 
    /*00014554*/ ADD         R0, R2, #2288               @ 0x8f0 
    /*00014558*/ ADD         R0, R0, #12 
    /*0001455c*/ B           H264eDrvCfgLambda_x14564
    H264eDrvCfgLambda_x14560:
    /*00014560*/ LDRH        IP, [R3, #2]! 
    H264eDrvCfgLambda_x14564:
    /*00014564*/ CMP         R3, LR 
    /*00014568*/ STR         IP, [R0, #4]! 
    /*0001456c*/ BNE         H264eDrvCfgLambda_x14560
    /*00014570*/ LDR         R3, [PC, #68]               @ 0x00000000000145bc 
    /*00014574*/ ADD         R2, R2, #2448               @ 0x990 
    /*00014578*/ ADD         R2, R2, #12 
    /*0001457c*/ MOV         R0, #1 
    /*00014580*/ ADD         IP, R3, #39                 @ 0x27 
    /*00014584*/ B           H264eDrvCfgLambda_x1458c
    H264eDrvCfgLambda_x14588:
    /*00014588*/ LDRB        R0, [R3, #1]! 
    H264eDrvCfgLambda_x1458c:
    /*0001458c*/ CMP         R3, IP 
    /*00014590*/ STR         R0, [R2, #4]! 
    /*00014594*/ BNE         H264eDrvCfgLambda_x14588
    /*00014598*/ ADD         R1, R1, #131                @ 0x83 
    /*0001459c*/ LDR         R0, [R5, #1056]             @ 0x420 
    /*000145a0*/ MOV         R2, #512                    @ 0x200 
    /*000145a4*/ LDR         R1, [R4, R1, LSL #3] 
    /*000145a8*/ ADD         R0, R0, #2304               @ 0x900 
    /*000145ac*/ POP         {R4, R5, LR} 
    /*000145b0*/ ADD         R1, R1, #2304               @ 0x900 
    H264eDrvCfgLambda_x145b4:
    /*000145b4*/ B           H264eDrvCfgLambda_x145b4    @ hil_mmb_flush_dcache_byaddr [R_ARM_JUMP24: +0x0] 
    /*000145b8*/ ANDEQ       R0, R0, R0, ASR #20 
    /*000145bc*/ MULEQ       R0, R0, SL 
FUNC_END H264eDrvCfgLambda


FUNC_BEGIN IsForceZeroEn
    /*000145c0*/ ADD         R3, R0, #14848              @ 0x3a00 
    /*000145c4*/ LDRD        R2, [R3, #-8] 
    /*000145c8*/ ORRS        R3, R2, R3 
    /*000145cc*/ ADDEQ       R0, R0, #12288              @ 0x3000 
    /*000145d0*/ LDREQ       R0, [R0, #2636]             @ 0xa4c 
    /*000145d4*/ SUBEQ       R0, R0, #2 
    /*000145d8*/ CLZEQ       R0, R0 
    /*000145dc*/ LSREQ       R0, R0, #5 
    /*000145e0*/ MOVNE       R0, #1 
    /*000145e4*/ BX          LR 
FUNC_END IsForceZeroEn


FUNC_BEGIN H264E_DRV_UpdateLowerPowerCfg
    /*000145e8*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000145ec*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000145f0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000145f4*/ LDR         IP, [R3, R0, LSL #2] 
    /*000145f8*/ ADD         R0, IP, #12288              @ 0x3000 
    /*000145fc*/ ADD         R6, IP, R1, LSL #2 
    /*00014600*/ LDR         R2, [R0, #2152]             @ 0x868 
    /*00014604*/ LDR         R3, [R6, #1056]             @ 0x420 
    /*00014608*/ CMP         R2, #0 
    /*0001460c*/ BEQ         H264E_DRV_UpdateLowerPowerCfg_x14718
    /*00014610*/ LDR         R4, [R0, #2128]             @ 0x850 
    /*00014614*/ MOVW        R5, #1298                   @ 0x512 
    /*00014618*/ LDRB        R2, [R3, #1280]             @ 0x500 
    /*0001461c*/ MOVW        LR, #1316                   @ 0x524 
    /*00014620*/ ADD         R7, R3, LR 
    /*00014624*/ BFI         R2, R4, #2, #1 
    /*00014628*/ STRB        R2, [R3, #1280]             @ 0x500 
    /*0001462c*/ LDR         R4, [R0, #2144]             @ 0x860 
    /*00014630*/ UXTB        R2, R2 
    /*00014634*/ BFI         R2, R4, #1, #1 
    /*00014638*/ STRB        R2, [R3, #1280]             @ 0x500 
    /*0001463c*/ LDR         R2, [R0, #2132]             @ 0x854 
    /*00014640*/ LDRB        R4, [R3, #1284]             @ 0x504 
    /*00014644*/ STR         R2, [R3, #1340]             @ 0x53c 
    /*00014648*/ MOV         R2, #8 
    /*0001464c*/ LDR         R8, [R0, #2136]             @ 0x858 
    /*00014650*/ STR         R8, [R3, #1344]             @ 0x540 
    /*00014654*/ LDR         R8, [R0, #2140]             @ 0x85c 
    /*00014658*/ STR         R8, [R3, #1348]             @ 0x544 
    /*0001465c*/ LDR         R8, [R0, #2148]             @ 0x864 
    /*00014660*/ STR         R8, [R3, #1352]             @ 0x548 
    /*00014664*/ LDR         R8, [R0, #2108]             @ 0x83c 
    /*00014668*/ STR         R8, [R3, #1392]             @ 0x570 
    /*0001466c*/ LDR         R8, [R0, #2112]             @ 0x840 
    /*00014670*/ BFI         R4, R8, #1, #1 
    /*00014674*/ STRB        R4, [R3, #1284]             @ 0x504 
    /*00014678*/ LDR         R8, [R0, #2124]             @ 0x84c 
    /*0001467c*/ MOVW        R4, #1320                   @ 0x528 
    /*00014680*/ STRH        R8, [R3, R5] 
    /*00014684*/ ADD         R5, R3, R4 
    /*00014688*/ LDR         R8, [R0, #2116]             @ 0x844 
    /*0001468c*/ STRB        R8, [R3, #1302]             @ 0x516 
    /*00014690*/ LDR         R9, [R0, #2120]             @ 0x848 
    /*00014694*/ LDRH        R8, [R3, LR] 
    /*00014698*/ STRB        R9, [R3, #1303]             @ 0x517 
    /*0001469c*/ BFI         R8, R2, #0, #10 
    /*000146a0*/ STRH        R8, [R3, LR] 
    /*000146a4*/ LDRB        LR, [R3, #1300]             @ 0x514 
    /*000146a8*/ ORR         LR, LR, #2 
    /*000146ac*/ STRB        LR, [R3, #1300]             @ 0x514 
    /*000146b0*/ LDRH        LR, [R7, #2] 
    /*000146b4*/ BFI         LR, R2, #0, #9 
    /*000146b8*/ STRH        LR, [R7, #2] 
    /*000146bc*/ LDRH        R7, [R3, R4] 
    /*000146c0*/ ADD         LR, R3, #1296               @ 0x510 
    /*000146c4*/ BFI         R7, R2, #0, #10 
    /*000146c8*/ STRH        R7, [R3, R4] 
    /*000146cc*/ LDRH        R4, [R5, #2] 
    /*000146d0*/ MOVW        R7, #1292                   @ 0x50c 
    /*000146d4*/ BFI         R4, R2, #0, #9 
    /*000146d8*/ MOV         R2, #1024                   @ 0x400 
    /*000146dc*/ STRH        R4, [R5, #2] 
    /*000146e0*/ MVN         R4, #63                     @ 0x3f 
    /*000146e4*/ STRH        R2, [R3, R7] 
    /*000146e8*/ MVN         R2, #0 
    /*000146ec*/ STRB        R4, [R3, #1290]             @ 0x50a 
    /*000146f0*/ MOV         R4, #256                    @ 0x100 
    /*000146f4*/ STRB        R2, [R3, #1288]             @ 0x508 
    /*000146f8*/ MVN         R2, #95                     @ 0x5f 
    /*000146fc*/ STRB        R2, [R3, #1291]             @ 0x50b 
    /*00014700*/ STRH        R4, [LR] 
    /*00014704*/ LDR         R2, [R0, #2396]             @ 0x95c 
    /*00014708*/ SUB         R2, R2, #1 
    /*0001470c*/ CMP         R1, R2 
    /*00014710*/ MOVEQ       R2, #0 
    /*00014714*/ STREQ       R2, [R0, #2152]             @ 0x868 
    H264E_DRV_UpdateLowerPowerCfg_x14718:
    /*00014718*/ LDRB        R5, [R3, #1284]             @ 0x504 
    /*0001471c*/ ADD         LR, IP, #8192               @ 0x2000 
    /*00014720*/ LDRB        R2, [R3, #1580]             @ 0x62c 
    /*00014724*/ MOV         SL, #26 
    /*00014728*/ AND         R5, R5, #247                @ 0xf7 
    /*0001472c*/ LDRB        R4, [R3, #1581]             @ 0x62d 
    /*00014730*/ BFC         R5, #2, #1 
    /*00014734*/ STRB        R5, [R3, #1284]             @ 0x504 
    /*00014738*/ LDR         R8, [LR, #1420]             @ 0x58c 
    /*0001473c*/ AND         R4, R4, #240                @ 0xf0 
    /*00014740*/ UXTB        R7, R5 
    /*00014744*/ MOV         R5, #6 
    /*00014748*/ BFI         R2, R5, #0, #4 
    /*0001474c*/ LDRB        R5, [R3, #1582]             @ 0x62e 
    /*00014750*/ BFI         R7, R8, #4, #1 
    /*00014754*/ STRB        R7, [R3, #1284]             @ 0x504 
    /*00014758*/ AND         R5, R5, #252                @ 0xfc 
    /*0001475c*/ MOV         R7, #2 
    /*00014760*/ BFC         R5, #2, #1 
    /*00014764*/ STRB        R5, [R3, #1582]             @ 0x62e 
    /*00014768*/ LDRB        R5, [R3, #1597]             @ 0x63d 
    /*0001476c*/ BFI         R2, R7, #4, #4 
    /*00014770*/ MOV         R7, #1 
    /*00014774*/ STRB        R2, [R3, #1580]             @ 0x62c 
    /*00014778*/ BFI         R4, R7, #4, #2 
    /*0001477c*/ ORR         R2, R5, R7 
    /*00014780*/ STRB        R4, [R3, #1581]             @ 0x62d 
    /*00014784*/ MOV         R5, #0 
    /*00014788*/ STRB        R2, [R3, #1597]             @ 0x63d 
    /*0001478c*/ MOV         R4, #4 
    /*00014790*/ STR         R5, [R3, #1592]             @ 0x638 
    /*00014794*/ MOVW        R2, #511                    @ 0x1ff 
    /*00014798*/ STRB        R4, [R3, #1596]             @ 0x63c 
    /*0001479c*/ STR         R2, [R3, #1332]             @ 0x534 
    /*000147a0*/ LDR         R2, [R0, #1988]             @ 0x7c4 
    /*000147a4*/ LDR         R4, [R0, #1948]             @ 0x79c 
    /*000147a8*/ SUB         R2, R2, #4 
    /*000147ac*/ LDRB        R8, [R3, #1565]             @ 0x61d 
    /*000147b0*/ CMP         R2, R7 
    /*000147b4*/ LDRB        R2, [R3, #1604]             @ 0x644 
    /*000147b8*/ STRB        R4, [R3, #1606]             @ 0x646 
    /*000147bc*/ AND         R8, R8, #252                @ 0xfc 
    /*000147c0*/ BFIHI       R2, R5, #0, #1 
    /*000147c4*/ LDRB        R4, [R3, #1558]             @ 0x616 
    /*000147c8*/ LDRB        R5, [R3, #1549]             @ 0x60d 
    /*000147cc*/ ORRLS       R2, R2, R7 
    /*000147d0*/ AND         R4, R4, #236                @ 0xec 
    /*000147d4*/ MOV         R7, #5 
    /*000147d8*/ ORR         R5, R5, #1 
    /*000147dc*/ STRB        R2, [R3, #1604]             @ 0x644 
    /*000147e0*/ BFI         R5, R7, #4, #4 
    /*000147e4*/ MOV         R2, #0 
    /*000147e8*/ LDRB        R9, [R3, #1622]             @ 0x656 
    /*000147ec*/ BFI         R8, R2, #4, #1 
    /*000147f0*/ BFI         R4, R2, #5, #1 
    /*000147f4*/ STRB        R2, [R3, #1608]             @ 0x648 
    /*000147f8*/ STRB        R8, [R3, #1565]             @ 0x61d 
    /*000147fc*/ ADD         R8, R3, #1600               @ 0x640 
    /*00014800*/ STRB        R2, [R3, #1610]             @ 0x64a 
    /*00014804*/ BFI         R9, R2, #0, #1 
    /*00014808*/ STRB        R2, [R3, #1620]             @ 0x654 
    /*0001480c*/ STRB        R2, [R3, #1626]             @ 0x65a 
    /*00014810*/ STRB        R2, [R3, #1624]             @ 0x658 
    /*00014814*/ STRB        R2, [R3, #1630]             @ 0x65e 
    /*00014818*/ STRB        R2, [R3, #1628]             @ 0x65c 
    /*0001481c*/ STRB        R5, [R3, #1549]             @ 0x60d 
    /*00014820*/ STRB        R4, [R3, #1558]             @ 0x616 
    /*00014824*/ LDRB        R4, [R3, #1550]             @ 0x60e 
    /*00014828*/ LDRB        R5, [R3, #1621]             @ 0x655 
    /*0001482c*/ BFI         R4, R7, #0, #4 
    /*00014830*/ STRB        R4, [R3, #1550]             @ 0x60e 
    /*00014834*/ LDRB        R4, [R3, #1564]             @ 0x61c 
    /*00014838*/ BFI         R5, R2, #0, #7 
    /*0001483c*/ STRB        R9, [R3, #1622]             @ 0x656 
    /*00014840*/ MOV         R9, #8 
    /*00014844*/ BFI         R4, SL, #0, #5 
    /*00014848*/ STRB        R4, [R3, #1564]             @ 0x61c 
    /*0001484c*/ LDRB        R4, [R3, #1548]             @ 0x60c 
    /*00014850*/ STRB        R5, [R3, #1621]             @ 0x655 
    /*00014854*/ MOVW        R5, #514                    @ 0x202 
    /*00014858*/ BFI         R4, R9, #0, #6 
    /*0001485c*/ MOVT        R5, #1028                   @ 0x404 
    /*00014860*/ STRB        R4, [R3, #1548]             @ 0x60c 
    /*00014864*/ MVN         R4, #84                     @ 0x54 
    /*00014868*/ STR         R5, [R3, #1560]             @ 0x618 
    /*0001486c*/ MVN         R5, #0 
    /*00014870*/ STRB        R4, [R3, #1612]             @ 0x64c 
    /*00014874*/ MOV         R4, #85                     @ 0x55 
    /*00014878*/ STRB        R5, [R3, #1609]             @ 0x649 
    /*0001487c*/ MOV         R9, #12 
    /*00014880*/ STRB        R5, [R3, #1611]             @ 0x64b 
    /*00014884*/ ADD         R5, R3, #1552               @ 0x610 
    /*00014888*/ STRB        R4, [R3, #1613]             @ 0x64d 
    /*0001488c*/ STRB        R4, [R3, #1556]             @ 0x614 
    /*00014890*/ LDRH        R4, [R8, #2] 
    /*00014894*/ BFI         R4, R7, #7, #7 
    /*00014898*/ STRH        R4, [R8, #2] 
    /*0001489c*/ BFI         R4, R7, #0, #7 
    /*000148a0*/ STRB        R4, [R3, #1602]             @ 0x642 
    /*000148a4*/ LDRB        R4, [R3, #1553]             @ 0x611 
    /*000148a8*/ MOV         R8, #4 
    /*000148ac*/ STRB        R9, [R3, #1552]             @ 0x610 
    /*000148b0*/ ADD         R7, IP, #14848              @ 0x3a00 
    /*000148b4*/ BFI         R4, R9, #0, #4 
    /*000148b8*/ STRB        R4, [R3, #1553]             @ 0x611 
    /*000148bc*/ LDRB        R4, [R3, #1555]             @ 0x613 
    /*000148c0*/ BFI         R4, R8, #4, #4 
    /*000148c4*/ STRB        R4, [R3, #1555]             @ 0x613 
    /*000148c8*/ MOV         R4, R5 
    /*000148cc*/ LDRH        R5, [R5, #2] 
    /*000148d0*/ BFI         R5, R8, #4, #8 
    /*000148d4*/ STRH        R5, [R4, #2] 
    /*000148d8*/ STR         R2, [R3, #1588]             @ 0x634 
    /*000148dc*/ STR         R2, [R3, #1584]             @ 0x630 
    /*000148e0*/ STR         R2, [R3, #1360]             @ 0x550 
    /*000148e4*/ LDRD        R4, [R7, #-8] 
    /*000148e8*/ ORRS        R2, R4, R5 
    /*000148ec*/ BNE         H264E_DRV_UpdateLowerPowerCfg_x14a04
    /*000148f0*/ LDR         R2, [R0, #2636]             @ 0xa4c 
    /*000148f4*/ CMP         R2, #2 
    /*000148f8*/ BEQ         H264E_DRV_UpdateLowerPowerCfg_x14a04
    H264E_DRV_UpdateLowerPowerCfg_x148fc:
    /*000148fc*/ LDRB        R2, [R3, #1540]             @ 0x604 
    /*00014900*/ MOV         R4, #0 
    /*00014904*/ LDRB        R7, [R3, #1570]             @ 0x622 
    /*00014908*/ LDRB        R5, [R3, #1574]             @ 0x626 
    /*0001490c*/ AND         R2, R2, #248                @ 0xf8 
    /*00014910*/ BFI         R2, R4, #4, #3 
    /*00014914*/ STR         R4, [R3, #1364]             @ 0x554 
    /*00014918*/ STRB        R2, [R3, #1540]             @ 0x604 
    /*0001491c*/ MOV         R2, #15 
    /*00014920*/ LDRB        R4, [R3, #1568]             @ 0x620 
    /*00014924*/ BFI         R5, R2, #0, #6 
    /*00014928*/ BFI         R7, R2, #0, #6 
    /*0001492c*/ LDRB        R2, [R3, #1572]             @ 0x624 
    /*00014930*/ STRB        R5, [R3, #1574]             @ 0x626 
    /*00014934*/ MOV         R5, #31 
    /*00014938*/ STRB        R7, [R3, #1570]             @ 0x622 
    /*0001493c*/ BFI         R2, R5, #0, #7 
    /*00014940*/ BFI         R4, R5, #0, #7 
    /*00014944*/ STRB        R2, [R3, #1572]             @ 0x624 
    /*00014948*/ STRB        R4, [R3, #1568]             @ 0x620 
    /*0001494c*/ LDR         R2, [IP, #976]              @ 0x3d0 
    /*00014950*/ ADD         R2, R2, #63                 @ 0x3f 
    /*00014954*/ LSR         R2, R2, #6 
    /*00014958*/ LSL         R2, R2, #4 
    /*0001495c*/ STR         R2, [R3, #1576]             @ 0x628 
    /*00014960*/ LDR         R2, [R0, #1988]             @ 0x7c4 
    /*00014964*/ SUB         R2, R2, #4 
    /*00014968*/ CMP         R2, #1 
    /*0001496c*/ BLS         H264E_DRV_UpdateLowerPowerCfg_x1499c
    /*00014970*/ LDR         R2, [LR, #2156]             @ 0x86c 
    /*00014974*/ CMP         R2, #1 
    /*00014978*/ BEQ         H264E_DRV_UpdateLowerPowerCfg_x1499c
    H264E_DRV_UpdateLowerPowerCfg_x1497c:
    /*0001497c*/ ADD         R1, R1, #131                @ 0x83 
    /*00014980*/ LDR         R0, [R6, #1056]             @ 0x420 
    /*00014984*/ MOV         R2, #384                    @ 0x180 
    /*00014988*/ LDR         R1, [IP, R1, LSL #3] 
    /*0001498c*/ ADD         R0, R0, #1280               @ 0x500 
    /*00014990*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00014994*/ ADD         R1, R1, #1280               @ 0x500 
    H264E_DRV_UpdateLowerPowerCfg_x14998:
    /*00014998*/ B           H264E_DRV_UpdateLowerPowerCfg_x14998@ hil_mmb_flush_dcache_byaddr [R_ARM_JUMP24: +0x0] 
    H264E_DRV_UpdateLowerPowerCfg_x1499c:
    /*0001499c*/ LDR         R0, [LR, #1392]             @ 0x570 
    /*000149a0*/ MOV         R4, #255                    @ 0xff 
    /*000149a4*/ LDRB        R2, [R3, #1536]             @ 0x600 
    /*000149a8*/ STRB        R4, [R3, #1537]             @ 0x601 
    /*000149ac*/ BFI         R2, R0, #4, #1 
    /*000149b0*/ STRB        R2, [R3, #1536]             @ 0x600 
    /*000149b4*/ LDR         R2, [LR, #1380]             @ 0x564 
    /*000149b8*/ LDR         R4, [LR, #1384]             @ 0x568 
    /*000149bc*/ LDR         R0, [LR, #1424]             @ 0x590 
    /*000149c0*/ LSL         R2, R2, #2 
    /*000149c4*/ CMP         R4, #0 
    /*000149c8*/ UXTB        R2, R2 
    /*000149cc*/ BNE         H264E_DRV_UpdateLowerPowerCfg_x14a28
    H264E_DRV_UpdateLowerPowerCfg_x149d0:
    /*000149d0*/ MOV         LR, #0 
    H264E_DRV_UpdateLowerPowerCfg_x149d4:
    /*000149d4*/ CMP         R0, #2 
    /*000149d8*/ CMPNE       R4, #0 
    /*000149dc*/ ORR         R2, R2, #8 
    /*000149e0*/ ORR         LR, LR, R2 
    /*000149e4*/ LDRB        R2, [R3, #1536]             @ 0x600 
    /*000149e8*/ MOVNE       R0, #1 
    /*000149ec*/ MOVEQ       R0, #0 
    /*000149f0*/ ORR         R0, R0, LR 
    /*000149f4*/ BFI         R2, R0, #0, #4 
    /*000149f8*/ BFC         R2, #5, #1 
    /*000149fc*/ STRB        R2, [R3, #1536]             @ 0x600 
    /*00014a00*/ B           H264E_DRV_UpdateLowerPowerCfg_x1497c
    H264E_DRV_UpdateLowerPowerCfg_x14a04:
    /*00014a04*/ LDRB        R2, [R3, #1360]             @ 0x550 
    /*00014a08*/ ORR         R2, R2, #15 
    /*00014a0c*/ STRB        R2, [R3, #1360]             @ 0x550 
    /*00014a10*/ LDRD        R4, [R7, #-8] 
    /*00014a14*/ ORRS        R2, R4, R5 
    /*00014a18*/ LDRBNE      R2, [R3, #1363]             @ 0x553 
    /*00014a1c*/ ORRNE       R2, R2, #4 
    /*00014a20*/ STRBNE      R2, [R3, #1363]             @ 0x553 
    /*00014a24*/ B           H264E_DRV_UpdateLowerPowerCfg_x148fc
    H264E_DRV_UpdateLowerPowerCfg_x14a28:
    /*00014a28*/ CMP         R0, #1 
    /*00014a2c*/ MOVNE       LR, #2 
    /*00014a30*/ BNE         H264E_DRV_UpdateLowerPowerCfg_x149d4
    /*00014a34*/ B           H264E_DRV_UpdateLowerPowerCfg_x149d0
FUNC_END H264E_DRV_UpdateLowerPowerCfg


FUNC_BEGIN H264E_DRV_InitRegConfigParam
    /*00014a38*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00014a3c*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00014a40*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00014a44*/ MOV         R7, R0 
    /*00014a48*/ LDR         R6, [R3, R0, LSL #2] 
    /*00014a4c*/ CMP         R6, #0 
    /*00014a50*/ BEQ         H264E_DRV_InitRegConfigParam_x14ae4
    H264E_DRV_InitRegConfigParam_x14a54:
    /*00014a54*/ LDR         R4, [R6, #1056]             @ 0x420 
    /*00014a58*/ MOVW        R2, #3436                   @ 0xd6c 
    /*00014a5c*/ MOV         R1, #0 
    /*00014a60*/ MOV         R5, #1 
    /*00014a64*/ MOV         R0, R4 
    /*00014a68*/ BL          0x0000000000014A68          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00014a6c*/ ADD         R3, R6, #12288              @ 0x3000 
    /*00014a70*/ MOV         R0, R7 
    /*00014a74*/ MOV         R1, #0 
    /*00014a78*/ STR         R5, [R3, #2152]             @ 0x868 
    /*00014a7c*/ BL          0x0000000000014A7C          @ H264E_DRV_UpdateLowerPowerCfg [R_ARM_CALL: .text+0x145e8] 
    /*00014a80*/ LDR         R3, [PC, #124]              @ 0x0000000000014b04 
    /*00014a84*/ ADD         R1, R4, #2288               @ 0x8f0 
    /*00014a88*/ MOV         R2, R5 
    /*00014a8c*/ ADD         R1, R1, #12 
    /*00014a90*/ ADD         R0, R3, #78                 @ 0x4e 
    /*00014a94*/ B           H264E_DRV_InitRegConfigParam_x14a9c
    H264E_DRV_InitRegConfigParam_x14a98:
    /*00014a98*/ LDRH        R2, [R3, #2]! 
    H264E_DRV_InitRegConfigParam_x14a9c:
    /*00014a9c*/ CMP         R3, R0 
    /*00014aa0*/ STR         R2, [R1, #4]! 
    /*00014aa4*/ BNE         H264E_DRV_InitRegConfigParam_x14a98
    /*00014aa8*/ LDR         R3, [PC, #88]               @ 0x0000000000014b08 
    /*00014aac*/ ADD         R2, R4, #2448               @ 0x990 
    /*00014ab0*/ ADD         R2, R2, #12 
    /*00014ab4*/ MOV         R1, #1 
    /*00014ab8*/ ADD         R0, R3, #39                 @ 0x27 
    /*00014abc*/ B           H264E_DRV_InitRegConfigParam_x14ac4
    H264E_DRV_InitRegConfigParam_x14ac0:
    /*00014ac0*/ LDRB        R1, [R3, #1]! 
    H264E_DRV_InitRegConfigParam_x14ac4:
    /*00014ac4*/ CMP         R3, R0 
    /*00014ac8*/ STR         R1, [R2, #4]! 
    /*00014acc*/ BNE         H264E_DRV_InitRegConfigParam_x14ac0
    /*00014ad0*/ LDR         R1, [R6, #1048]             @ 0x418 
    /*00014ad4*/ MOV         R2, #4096                   @ 0x1000 
    /*00014ad8*/ LDR         R0, [R6, #1056]             @ 0x420 
    /*00014adc*/ POP         {R4, R5, R6, R7, R8, LR} 
    H264E_DRV_InitRegConfigParam_x14ae0:
    /*00014ae0*/ B           H264E_DRV_InitRegConfigParam_x14ae0@ hil_mmb_flush_dcache_byaddr [R_ARM_JUMP24: +0x0] 
    H264E_DRV_InitRegConfigParam_x14ae4:
    /*00014ae4*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x435c] 
    /*00014ae8*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4370] 
    /*00014aec*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x435c] 
    /*00014af0*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4370] 
    /*00014af4*/ MOVW        R2, #1703                   @ 0x6a7 
    /*00014af8*/ LDR         R1, [PC, #12]               @ 0x0000000000014b0c 
    /*00014afc*/ BL          0x0000000000014AFC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00014b00*/ B           H264E_DRV_InitRegConfigParam_x14a54
    /*00014b04*/ ANDEQ       R0, R0, R0, ASR #20 
    /*00014b08*/ MULEQ       R0, R0, SL 
    /*00014b0c*/ @           <UNDEFINED> instruction: 0x00000ab8 
FUNC_END H264E_DRV_InitRegConfigParam


FUNC_BEGIN H264E_DRV_IsSupportPmeShareBuf
    /*00014b10*/ MOV         R0, #0 
    /*00014b14*/ BX          LR 
FUNC_END H264E_DRV_IsSupportPmeShareBuf


FUNC_BEGIN H264E_DRV_ReadRcnRefShareParam
    /*00014b18*/ BX          LR 
FUNC_END H264E_DRV_ReadRcnRefShareParam


FUNC_BEGIN H264E_DRV_PmeShareBufferSizeEx
    /*00014b1c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00014b20*/ SUB         SP, SP, #12 
    /*00014b24*/ MOV         R3, #2752                   @ 0xac0 
    /*00014b28*/ MOV         R1, #10 
    /*00014b2c*/ STR         R3, [SP] 
    /*00014b30*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x44a4] 
    /*00014b34*/ LDR         R3, [PC, #20]               @ 0x0000000000014b50 
    /*00014b38*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x44a4] 
    /*00014b3c*/ MOV         R0, #3 
    /*00014b40*/ BL          0x0000000000014B40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014b44*/ MOV         R0, #0 
    /*00014b48*/ ADD         SP, SP, #12 
    /*00014b4c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00014b50*/ LDRDEQ      R0, [R0], -R8 
FUNC_END H264E_DRV_PmeShareBufferSizeEx


FUNC_BEGIN H264E_DRV_RefRcnShareBufferSizeEx
    /*00014b54*/ MOV         R2, #96                     @ 0x60 
    /*00014b58*/ MOV         R3, #48                     @ 0x30 
    /*00014b5c*/ STR         R2, [R0] 
    /*00014b60*/ STR         R3, [R1] 
    /*00014b64*/ BX          LR 
FUNC_END H264E_DRV_RefRcnShareBufferSizeEx


FUNC_BEGIN H264E_DRV_UpdateRcnRefShareBuffParam
    /*00014b68*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00014b6c*/ MOV         R4, R1 
    /*00014b70*/ LDR         R1, [R0, #560]              @ 0x230 
    /*00014b74*/ LDR         R2, [R4, #8] 
    /*00014b78*/ LDR         IP, [R4, #60]               @ 0x3c 
    /*00014b7c*/ ADD         LR, R0, R1, LSL #2 
    /*00014b80*/ LDR         R6, [R4, #64]               @ 0x40 
    /*00014b84*/ LSL         R1, R1, #3 
    /*00014b88*/ LDR         R3, [LR, #340]              @ 0x154 
    /*00014b8c*/ ADD         R5, R0, R1 
    /*00014b90*/ SUB         IP, IP, R3 
    /*00014b94*/ STR         IP, [LR, #240]              @ 0xf0 
    /*00014b98*/ MUL         R2, R2, R3 
    /*00014b9c*/ LSR         IP, IP, #1 
    /*00014ba0*/ ADD         R3, R3, R6 
    /*00014ba4*/ STR         IP, [LR, #280]              @ 0x118 
    /*00014ba8*/ LDRD        R6, [R0, R1] 
    /*00014bac*/ LDRD        R0, [R5, #40]               @ 0x28 
    /*00014bb0*/ ADDS        R6, R6, R2 
    /*00014bb4*/ LSR         R2, R2, #1 
    /*00014bb8*/ ADC         R7, R7, #0 
    /*00014bbc*/ ADDS        R0, R0, R2 
    /*00014bc0*/ STRD        R6, [R5, #80]               @ 0x50 
    /*00014bc4*/ ADC         R1, R1, #0 
    /*00014bc8*/ STRD        R0, [R5, #120]              @ 0x78 
    /*00014bcc*/ LDR         R2, [R4, #60]               @ 0x3c 
    /*00014bd0*/ CMP         R3, R2 
    /*00014bd4*/ SUBHI       R3, R3, R2 
    /*00014bd8*/ STR         R3, [LR, #340]              @ 0x154 
    /*00014bdc*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END H264E_DRV_UpdateRcnRefShareBuffParam


FUNC_BEGIN H264E_DRV_CfgRcnRefShare
    /*00014be0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00014be4*/ ADD         R5, R0, #12288              @ 0x3000 
    /*00014be8*/ MOV         R6, R0 
    /*00014bec*/ MOV         R4, R1 
    /*00014bf0*/ LDR         R3, [R5, #1988]             @ 0x7c4 
    /*00014bf4*/ SUB         R3, R3, #4 
    /*00014bf8*/ CMP         R3, #1 
    /*00014bfc*/ BLS         H264E_DRV_CfgRcnRefShare_x14f94
    /*00014c00*/ LDR         R3, [R5, #1932]             @ 0x78c 
    /*00014c04*/ MOVW        IP, #3240                   @ 0xca8 
    /*00014c08*/ MOVW        R0, #3242                   @ 0xcaa 
    /*00014c0c*/ ADD         R7, R6, #8192               @ 0x2000 
    /*00014c10*/ ADD         R3, R3, #1712               @ 0x6b0 
    /*00014c14*/ MOVW        R1, #3186                   @ 0xc72 
    /*00014c18*/ ADD         R3, R3, #5 
    /*00014c1c*/ ADD         R2, R4, #3184               @ 0xc70 
    /*00014c20*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014c24*/ STR         R3, [R4, #3192]             @ 0xc78 
    /*00014c28*/ LDR         R3, [R5, #1932]             @ 0x78c 
    /*00014c2c*/ ADD         R3, R3, #1696               @ 0x6a0 
    /*00014c30*/ ADD         R3, R3, #11 
    /*00014c34*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014c38*/ STR         R3, [R4, #3200]             @ 0xc80 
    /*00014c3c*/ LDR         R3, [R5, #1932]             @ 0x78c 
    /*00014c40*/ ADD         R3, R3, #1712               @ 0x6b0 
    /*00014c44*/ ADD         R3, R3, #10 
    /*00014c48*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014c4c*/ STR         R3, [R4, #3196]             @ 0xc7c 
    /*00014c50*/ LDR         R3, [R5, #1932]             @ 0x78c 
    /*00014c54*/ ADD         R3, R3, #1712               @ 0x6b0 
    /*00014c58*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014c5c*/ STR         R3, [R4, #3204]             @ 0xc84 
    /*00014c60*/ LDR         R3, [R5, #1932]             @ 0x78c 
    /*00014c64*/ ADD         R3, R3, #3472               @ 0xd90 
    /*00014c68*/ ADD         R3, R3, #2 
    /*00014c6c*/ LDR         R3, [R6, R3, LSL #2] 
    /*00014c70*/ STRH        R3, [R4, IP] 
    /*00014c74*/ LDR         R3, [R5, #1932]             @ 0x78c 
    /*00014c78*/ ADD         R3, R3, #3472               @ 0xd90 
    /*00014c7c*/ ADD         R3, R3, #12 
    /*00014c80*/ LDR         R3, [R6, R3, LSL #2] 
    /*00014c84*/ STRH        R3, [R4, R0] 
    /*00014c88*/ LDR         R3, [R5, #1932]             @ 0x78c 
    /*00014c8c*/ ADD         R3, R3, #1744               @ 0x6d0 
    /*00014c90*/ ADD         R3, R3, #13 
    /*00014c94*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014c98*/ STR         R3, [R4, #3152]             @ 0xc50 
    /*00014c9c*/ LDR         R3, [R5, #1932]             @ 0x78c 
    /*00014ca0*/ ADD         R3, R3, #1760               @ 0x6e0 
    /*00014ca4*/ ADD         R3, R3, #2 
    /*00014ca8*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014cac*/ STR         R3, [R4, #3156]             @ 0xc54 
    /*00014cb0*/ LDR         R3, [R7, #2876]             @ 0xb3c 
    /*00014cb4*/ LDR         R3, [R3, #424]              @ 0x1a8 
    /*00014cb8*/ STR         R3, [R4, #3128]             @ 0xc38 
    /*00014cbc*/ LDR         R3, [R7, #2876]             @ 0xb3c 
    /*00014cc0*/ LDR         R3, [R3, #416]              @ 0x1a0 
    /*00014cc4*/ STR         R3, [R4, #3104]             @ 0xc20 
    /*00014cc8*/ LDR         R3, [R7, #2876]             @ 0xb3c 
    /*00014ccc*/ LDR         R3, [R3, #44]               @ 0x2c 
    /*00014cd0*/ STRH        R3, [R4, R1] 
    /*00014cd4*/ LDR         R3, [R7, #2876]             @ 0xb3c 
    /*00014cd8*/ LDR         R3, [R3, #48]               @ 0x30 
    /*00014cdc*/ STRH        R3, [R2] 
    /*00014ce0*/ LDR         R3, [R7, #2876]             @ 0xb3c 
    /*00014ce4*/ LDR         R3, [R3, #408]              @ 0x198 
    /*00014ce8*/ STR         R3, [R4, #3176]             @ 0xc68 
    /*00014cec*/ LDR         R3, [R7, #2880]             @ 0xb40 
    /*00014cf0*/ CMP         R3, #0 
    /*00014cf4*/ BEQ         H264E_DRV_CfgRcnRefShare_x14fd0
    H264E_DRV_CfgRcnRefShare_x14cf8:
    /*00014cf8*/ LDR         R3, [R5, #1936]             @ 0x790 
    /*00014cfc*/ MOVW        IP, #3244                   @ 0xcac 
    /*00014d00*/ MOVW        R0, #3246                   @ 0xcae 
    /*00014d04*/ MOVW        R1, #3190                   @ 0xc76 
    /*00014d08*/ ADD         R3, R3, #1712               @ 0x6b0 
    /*00014d0c*/ MOVW        R2, #3188                   @ 0xc74 
    /*00014d10*/ ADD         R3, R3, #5 
    /*00014d14*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014d18*/ STR         R3, [R4, #3208]             @ 0xc88 
    /*00014d1c*/ LDR         R3, [R5, #1936]             @ 0x790 
    /*00014d20*/ ADD         R3, R3, #1696               @ 0x6a0 
    /*00014d24*/ ADD         R3, R3, #11 
    /*00014d28*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014d2c*/ STR         R3, [R4, #3216]             @ 0xc90 
    /*00014d30*/ LDR         R3, [R5, #1936]             @ 0x790 
    /*00014d34*/ ADD         R3, R3, #1712               @ 0x6b0 
    /*00014d38*/ ADD         R3, R3, #10 
    /*00014d3c*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014d40*/ STR         R3, [R4, #3212]             @ 0xc8c 
    /*00014d44*/ LDR         R3, [R5, #1936]             @ 0x790 
    /*00014d48*/ ADD         R3, R3, #1712               @ 0x6b0 
    /*00014d4c*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014d50*/ STR         R3, [R4, #3220]             @ 0xc94 
    /*00014d54*/ LDR         R3, [R5, #1936]             @ 0x790 
    /*00014d58*/ ADD         R3, R3, #3472               @ 0xd90 
    /*00014d5c*/ ADD         R3, R3, #2 
    /*00014d60*/ LDR         R3, [R6, R3, LSL #2] 
    /*00014d64*/ STRH        R3, [R4, IP] 
    /*00014d68*/ LDR         R3, [R5, #1936]             @ 0x790 
    /*00014d6c*/ ADD         R3, R3, #3472               @ 0xd90 
    /*00014d70*/ ADD         R3, R3, #12 
    /*00014d74*/ LDR         R3, [R6, R3, LSL #2] 
    /*00014d78*/ STRH        R3, [R4, R0] 
    /*00014d7c*/ LDR         R3, [R5, #1936]             @ 0x790 
    /*00014d80*/ ADD         R3, R3, #1744               @ 0x6d0 
    /*00014d84*/ ADD         R3, R3, #13 
    /*00014d88*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014d8c*/ STR         R3, [R4, #3160]             @ 0xc58 
    /*00014d90*/ LDR         R3, [R5, #1936]             @ 0x790 
    /*00014d94*/ ADD         R3, R3, #1760               @ 0x6e0 
    /*00014d98*/ ADD         R3, R3, #2 
    /*00014d9c*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014da0*/ STR         R3, [R4, #3164]             @ 0xc5c 
    /*00014da4*/ LDR         R3, [R7, #2880]             @ 0xb40 
    /*00014da8*/ LDR         R3, [R3, #416]              @ 0x1a0 
    /*00014dac*/ STR         R3, [R4, #3108]             @ 0xc24 
    /*00014db0*/ LDR         R3, [R7, #2880]             @ 0xb40 
    /*00014db4*/ LDR         R3, [R3, #44]               @ 0x2c 
    /*00014db8*/ STRH        R3, [R4, R1] 
    /*00014dbc*/ LDR         R3, [R7, #2880]             @ 0xb40 
    /*00014dc0*/ LDR         R3, [R3, #48]               @ 0x30 
    /*00014dc4*/ STRH        R3, [R4, R2] 
    /*00014dc8*/ LDR         R3, [R7, #2880]             @ 0xb40 
    /*00014dcc*/ LDR         R3, [R3, #408]              @ 0x198 
    /*00014dd0*/ STR         R3, [R4, #3176]             @ 0xc68 
    H264E_DRV_CfgRcnRefShare_x14dd4:
    /*00014dd4*/ LDR         R3, [R7, #24] 
    /*00014dd8*/ CMP         R3, #0 
    /*00014ddc*/ BNE         H264E_DRV_CfgRcnRefShare_x14eb0
    H264E_DRV_CfgRcnRefShare_x14de0:
    /*00014de0*/ ADD         R2, R4, #3248               @ 0xcb0 
    /*00014de4*/ MOVW        R1, #3250                   @ 0xcb2 
    /*00014de8*/ MOV         R3, #0 
    /*00014dec*/ STR         R3, [R4, #3224]             @ 0xc98 
    /*00014df0*/ STR         R3, [R4, #3232]             @ 0xca0 
    /*00014df4*/ STR         R3, [R4, #3228]             @ 0xc9c 
    /*00014df8*/ STR         R3, [R4, #3236]             @ 0xca4 
    /*00014dfc*/ STRH        R3, [R2] 
    /*00014e00*/ STR         R3, [R4, #3096]             @ 0xc18 
    /*00014e04*/ STR         R3, [R4, #3100]             @ 0xc1c 
    /*00014e08*/ STRH        R3, [R4, R1] 
    H264E_DRV_CfgRcnRefShare_x14e0c:
    /*00014e0c*/ LDR         R1, [R5, #992]              @ 0x3e0 
    /*00014e10*/ ADD         R3, R4, #3168               @ 0xc60 
    /*00014e14*/ MOVW        R2, #3170                   @ 0xc62 
    /*00014e18*/ LDR         R1, [R1, #44]               @ 0x2c 
    /*00014e1c*/ STRH        R1, [R3] 
    /*00014e20*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*00014e24*/ LDR         R3, [R3, #48]               @ 0x30 
    /*00014e28*/ STRH        R3, [R4, R2] 
    /*00014e2c*/ LDR         R3, [R7, #24] 
    /*00014e30*/ CMP         R3, #0 
    /*00014e34*/ BEQ         H264E_DRV_CfgRcnRefShare_x14e74
    /*00014e38*/ LDR         R1, [R5, #1928]             @ 0x788 
    /*00014e3c*/ MOVW        R0, #14176                  @ 0x3760 
    /*00014e40*/ MOVW        IP, #14096                  @ 0x3710 
    /*00014e44*/ ADD         R1, R6, R1, LSL #3 
    /*00014e48*/ ADD         LR, R1, #14016              @ 0x36c0 
    /*00014e4c*/ ADD         R7, R1, #14144              @ 0x3740 
    /*00014e50*/ ADD         LR, LR, #48                 @ 0x30 
    /*00014e54*/ LDRD        R2, [LR, #-8] 
    /*00014e58*/ LDRD        R8, [R7, #-8] 
    /*00014e5c*/ STRD        R2, [R7, #-8] 
    /*00014e60*/ STRD        R8, [LR, #-8] 
    /*00014e64*/ LDRD        R2, [R1, R0] 
    /*00014e68*/ LDRD        R8, [R1, IP] 
    /*00014e6c*/ STRD        R2, [R1, IP] 
    /*00014e70*/ STRD        R8, [R1, R0] 
    H264E_DRV_CfgRcnRefShare_x14e74:
    /*00014e74*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*00014e78*/ LDR         R3, [R3, #416]              @ 0x1a0 
    /*00014e7c*/ STR         R3, [R4, #3112]             @ 0xc28 
    /*00014e80*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*00014e84*/ LDR         R3, [R3, #408]              @ 0x198 
    /*00014e88*/ STR         R3, [R4, #3172]             @ 0xc64 
    /*00014e8c*/ LDR         R3, [R5, #992]              @ 0x3e0 
    /*00014e90*/ LDR         R3, [R3, #424]              @ 0x1a8 
    /*00014e94*/ STR         R3, [R4, #3124]             @ 0xc34 
    /*00014e98*/ LDR         R3, [R6, #976]              @ 0x3d0 
    /*00014e9c*/ ADD         R3, R3, #63                 @ 0x3f 
    /*00014ea0*/ LSR         R3, R3, #6 
    /*00014ea4*/ LSL         R3, R3, #4 
    /*00014ea8*/ STR         R3, [R4, #3148]             @ 0xc4c 
    /*00014eac*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264E_DRV_CfgRcnRefShare_x14eb0:
    /*00014eb0*/ ADD         R1, R6, #1104               @ 0x450 
    /*00014eb4*/ ADD         R0, R6, #13632              @ 0x3540 
    /*00014eb8*/ ADD         R1, R1, #12 
    /*00014ebc*/ ADD         R0, R0, #24 
    /*00014ec0*/ BL          0x0000000000014EC0          @ H264E_DRV_UpdateRcnRefShareBuffParam [R_ARM_CALL: .text+0x14b68] 
    /*00014ec4*/ LDR         R3, [R7, #24] 
    /*00014ec8*/ CMP         R3, #0 
    /*00014ecc*/ BEQ         H264E_DRV_CfgRcnRefShare_x14de0
    /*00014ed0*/ LDR         R3, [R5, #1928]             @ 0x788 
    /*00014ed4*/ ADD         R1, R4, #3248               @ 0xcb0 
    /*00014ed8*/ MOVW        R2, #3250                   @ 0xcb2 
    /*00014edc*/ ADD         R3, R3, #1712               @ 0x6b0 
    /*00014ee0*/ ADD         R3, R3, #5 
    /*00014ee4*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014ee8*/ STR         R3, [R4, #3224]             @ 0xc98 
    /*00014eec*/ LDR         R3, [R5, #1928]             @ 0x788 
    /*00014ef0*/ ADD         R3, R3, #1696               @ 0x6a0 
    /*00014ef4*/ ADD         R3, R3, #11 
    /*00014ef8*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014efc*/ STR         R3, [R4, #3232]             @ 0xca0 
    /*00014f00*/ LDR         R3, [R5, #1928]             @ 0x788 
    /*00014f04*/ ADD         R3, R3, #1712               @ 0x6b0 
    /*00014f08*/ ADD         R3, R3, #10 
    /*00014f0c*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014f10*/ STR         R3, [R4, #3228]             @ 0xc9c 
    /*00014f14*/ LDR         R3, [R5, #1928]             @ 0x788 
    /*00014f18*/ ADD         R3, R3, #1712               @ 0x6b0 
    /*00014f1c*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014f20*/ STR         R3, [R4, #3236]             @ 0xca4 
    /*00014f24*/ LDR         R3, [R5, #1928]             @ 0x788 
    /*00014f28*/ ADD         R3, R3, #3472               @ 0xd90 
    /*00014f2c*/ ADD         R3, R3, #2 
    /*00014f30*/ LDR         R0, [R6, R3, LSL #2] 
    /*00014f34*/ STRH        R0, [R1] 
    /*00014f38*/ LDR         R3, [R5, #1928]             @ 0x788 
    /*00014f3c*/ ADD         R3, R3, #3472               @ 0xd90 
    /*00014f40*/ ADD         R3, R3, #12 
    /*00014f44*/ LDR         R3, [R6, R3, LSL #2] 
    /*00014f48*/ STRH        R3, [R4, R2] 
    /*00014f4c*/ LDR         R3, [R5, #1988]             @ 0x7c4 
    /*00014f50*/ CMP         R3, #12 
    /*00014f54*/ BEQ         H264E_DRV_CfgRcnRefShare_x14f84
    /*00014f58*/ LDR         R3, [R5, #1928]             @ 0x788 
    /*00014f5c*/ ADD         R3, R3, #1760               @ 0x6e0 
    /*00014f60*/ ADD         R3, R3, #7 
    /*00014f64*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014f68*/ STR         R3, [R4, #3096]             @ 0xc18 
    /*00014f6c*/ LDR         R3, [R5, #1928]             @ 0x788 
    /*00014f70*/ ADD         R3, R3, #1760               @ 0x6e0 
    /*00014f74*/ ADD         R3, R3, #12 
    /*00014f78*/ LDR         R3, [R6, R3, LSL #3] 
    /*00014f7c*/ STR         R3, [R4, #3100]             @ 0xc1c 
    /*00014f80*/ B           H264E_DRV_CfgRcnRefShare_x14e0c
    H264E_DRV_CfgRcnRefShare_x14f84:
    /*00014f84*/ MOV         R3, #0 
    /*00014f88*/ STR         R3, [R4, #3096]             @ 0xc18 
    /*00014f8c*/ STR         R3, [R4, #3100]             @ 0xc1c 
    /*00014f90*/ B           H264E_DRV_CfgRcnRefShare_x14e0c
    H264E_DRV_CfgRcnRefShare_x14f94:
    /*00014f94*/ ADD         R7, R0, #8192               @ 0x2000 
    /*00014f98*/ MOVW        R1, #3240                   @ 0xca8 
    /*00014f9c*/ MOVW        R2, #3242                   @ 0xcaa 
    /*00014fa0*/ MOV         R3, #0 
    /*00014fa4*/ STRH        R3, [R4, R1] 
    /*00014fa8*/ STR         R3, [R4, #3192]             @ 0xc78 
    /*00014fac*/ STR         R3, [R4, #3196]             @ 0xc7c 
    /*00014fb0*/ STR         R3, [R4, #3200]             @ 0xc80 
    /*00014fb4*/ STR         R3, [R4, #3204]             @ 0xc84 
    /*00014fb8*/ STR         R3, [R4, #3152]             @ 0xc50 
    /*00014fbc*/ STR         R3, [R4, #3156]             @ 0xc54 
    /*00014fc0*/ STRH        R3, [R4, R2] 
    /*00014fc4*/ LDR         R3, [R7, #2880]             @ 0xb40 
    /*00014fc8*/ CMP         R3, #0 
    /*00014fcc*/ BNE         H264E_DRV_CfgRcnRefShare_x14cf8
    H264E_DRV_CfgRcnRefShare_x14fd0:
    /*00014fd0*/ MOVW        R1, #3244                   @ 0xcac 
    /*00014fd4*/ MOVW        R2, #3246                   @ 0xcae 
    /*00014fd8*/ STR         R3, [R4, #3208]             @ 0xc88 
    /*00014fdc*/ STR         R3, [R4, #3212]             @ 0xc8c 
    /*00014fe0*/ STR         R3, [R4, #3216]             @ 0xc90 
    /*00014fe4*/ STR         R3, [R4, #3220]             @ 0xc94 
    /*00014fe8*/ STR         R3, [R4, #3160]             @ 0xc58 
    /*00014fec*/ STR         R3, [R4, #3164]             @ 0xc5c 
    /*00014ff0*/ STRH        R3, [R4, R1] 
    /*00014ff4*/ STRH        R3, [R4, R2] 
    /*00014ff8*/ B           H264E_DRV_CfgRcnRefShare_x14dd4
FUNC_END H264E_DRV_CfgRcnRefShare


FUNC_BEGIN H264E_DRV_CfgRcnRefNoShare
    /*00014ffc*/ ADD         R2, R0, #12288              @ 0x3000 
    /*00015000*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00015004*/ LDR         R3, [R2, #1988]             @ 0x7c4 
    /*00015008*/ SUB         R3, R3, #4 
    /*0001500c*/ CMP         R3, #1 
    /*00015010*/ ADD         R3, R0, #8192               @ 0x2000 
    /*00015014*/ BLS         H264E_DRV_CfgRcnRefNoShare_x1521c
    /*00015018*/ LDR         IP, [R3, #2876]             @ 0xb3c 
    /*0001501c*/ MOVW        R7, #3240                   @ 0xca8 
    /*00015020*/ MOVW        R6, #3242                   @ 0xcaa 
    /*00015024*/ MVN         LR, #15 
    /*00015028*/ MOVW        R4, #3186                   @ 0xc72 
    /*0001502c*/ LDR         R5, [IP, #120]              @ 0x78 
    /*00015030*/ ADD         IP, R1, #3184               @ 0xc70 
    /*00015034*/ STR         R5, [R1, #3192]             @ 0xc78 
    /*00015038*/ LDR         R5, [R3, #2876]             @ 0xb3c 
    /*0001503c*/ LDR         R5, [R5, #120]              @ 0x78 
    /*00015040*/ STR         R5, [R1, #3200]             @ 0xc80 
    /*00015044*/ LDR         R5, [R3, #2876]             @ 0xb3c 
    /*00015048*/ LDR         R5, [R5, #128]              @ 0x80 
    /*0001504c*/ STR         R5, [R1, #3196]             @ 0xc7c 
    /*00015050*/ LDR         R5, [R3, #2876]             @ 0xb3c 
    /*00015054*/ LDR         R5, [R5, #128]              @ 0x80 
    /*00015058*/ STRH        LR, [R1, R7] 
    /*0001505c*/ STRH        LR, [R1, R6] 
    /*00015060*/ STR         R5, [R1, #3204]             @ 0xc84 
    /*00015064*/ LDR         LR, [R3, #2876]             @ 0xb3c 
    /*00015068*/ LDR         LR, [LR, #72]               @ 0x48 
    /*0001506c*/ STR         LR, [R1, #3152]             @ 0xc50 
    /*00015070*/ LDR         LR, [R3, #2876]             @ 0xb3c 
    /*00015074*/ LDR         LR, [LR, #80]               @ 0x50 
    /*00015078*/ STR         LR, [R1, #3156]             @ 0xc54 
    /*0001507c*/ LDR         LR, [R3, #2876]             @ 0xb3c 
    /*00015080*/ LDR         LR, [LR, #424]              @ 0x1a8 
    /*00015084*/ STR         LR, [R1, #3128]             @ 0xc38 
    /*00015088*/ LDR         LR, [R3, #2876]             @ 0xb3c 
    /*0001508c*/ LDR         LR, [LR, #416]              @ 0x1a0 
    /*00015090*/ STR         LR, [R1, #3104]             @ 0xc20 
    /*00015094*/ LDR         LR, [R3, #2876]             @ 0xb3c 
    /*00015098*/ LDR         LR, [LR, #44]               @ 0x2c 
    /*0001509c*/ STRH        LR, [R1, R4] 
    /*000150a0*/ LDR         LR, [R3, #2876]             @ 0xb3c 
    /*000150a4*/ LDR         LR, [LR, #48]               @ 0x30 
    /*000150a8*/ STRH        LR, [IP] 
    /*000150ac*/ LDR         IP, [R3, #2876]             @ 0xb3c 
    /*000150b0*/ LDR         IP, [IP, #408]              @ 0x198 
    /*000150b4*/ STR         IP, [R1, #3176]             @ 0xc68 
    /*000150b8*/ LDR         IP, [R3, #2880]             @ 0xb40 
    /*000150bc*/ CMP         IP, #0 
    /*000150c0*/ BEQ         H264E_DRV_CfgRcnRefNoShare_x15254
    H264E_DRV_CfgRcnRefNoShare_x150c4:
    /*000150c4*/ LDR         LR, [IP, #120]              @ 0x78 
    /*000150c8*/ MOVW        R7, #3244                   @ 0xcac 
    /*000150cc*/ MOVW        R6, #3246                   @ 0xcae 
    /*000150d0*/ MVN         IP, #15 
    /*000150d4*/ MOVW        R4, #3190                   @ 0xc76 
    /*000150d8*/ STR         LR, [R1, #3208]             @ 0xc88 
    /*000150dc*/ LDR         LR, [R3, #2880]             @ 0xb40 
    /*000150e0*/ LDR         R5, [LR, #120]              @ 0x78 
    /*000150e4*/ MOVW        LR, #3188                   @ 0xc74 
    /*000150e8*/ STR         R5, [R1, #3216]             @ 0xc90 
    /*000150ec*/ LDR         R5, [R3, #2880]             @ 0xb40 
    /*000150f0*/ LDR         R5, [R5, #128]              @ 0x80 
    /*000150f4*/ STR         R5, [R1, #3212]             @ 0xc8c 
    /*000150f8*/ LDR         R5, [R3, #2880]             @ 0xb40 
    /*000150fc*/ LDR         R5, [R5, #128]              @ 0x80 
    /*00015100*/ STRH        IP, [R1, R7] 
    /*00015104*/ STRH        IP, [R1, R6] 
    /*00015108*/ STR         R5, [R1, #3220]             @ 0xc94 
    /*0001510c*/ LDR         IP, [R3, #2880]             @ 0xb40 
    /*00015110*/ LDR         IP, [IP, #72]               @ 0x48 
    /*00015114*/ STR         IP, [R1, #3160]             @ 0xc58 
    /*00015118*/ LDR         IP, [R3, #2880]             @ 0xb40 
    /*0001511c*/ LDR         IP, [IP, #80]               @ 0x50 
    /*00015120*/ STR         IP, [R1, #3164]             @ 0xc5c 
    /*00015124*/ LDR         IP, [R3, #2880]             @ 0xb40 
    /*00015128*/ LDR         IP, [IP, #416]              @ 0x1a0 
    /*0001512c*/ STR         IP, [R1, #3108]             @ 0xc24 
    /*00015130*/ LDR         IP, [R3, #2880]             @ 0xb40 
    /*00015134*/ LDR         IP, [IP, #44]               @ 0x2c 
    /*00015138*/ STRH        IP, [R1, R4] 
    /*0001513c*/ LDR         IP, [R3, #2880]             @ 0xb40 
    /*00015140*/ LDR         IP, [IP, #48]               @ 0x30 
    /*00015144*/ STRH        IP, [R1, LR] 
    /*00015148*/ LDR         R3, [R3, #2880]             @ 0xb40 
    /*0001514c*/ LDR         R3, [R3, #408]              @ 0x198 
    /*00015150*/ STR         R3, [R1, #3176]             @ 0xc68 
    H264E_DRV_CfgRcnRefNoShare_x15154:
    /*00015154*/ LDR         R4, [R2, #992]              @ 0x3e0 
    /*00015158*/ ADD         IP, R1, #3248               @ 0xcb0 
    /*0001515c*/ MOVW        R5, #3250                   @ 0xcb2 
    /*00015160*/ MVN         LR, #15 
    /*00015164*/ ADD         R3, R1, #3168               @ 0xc60 
    /*00015168*/ LDR         R6, [R4, #120]              @ 0x78 
    /*0001516c*/ MOVW        R4, #3170                   @ 0xc62 
    /*00015170*/ STR         R6, [R1, #3224]             @ 0xc98 
    /*00015174*/ LDR         R6, [R2, #992]              @ 0x3e0 
    /*00015178*/ LDR         R6, [R6, #120]              @ 0x78 
    /*0001517c*/ STR         R6, [R1, #3232]             @ 0xca0 
    /*00015180*/ LDR         R6, [R2, #992]              @ 0x3e0 
    /*00015184*/ LDR         R6, [R6, #128]              @ 0x80 
    /*00015188*/ STR         R6, [R1, #3228]             @ 0xc9c 
    /*0001518c*/ LDR         R6, [R2, #992]              @ 0x3e0 
    /*00015190*/ LDR         R6, [R6, #128]              @ 0x80 
    /*00015194*/ STR         R6, [R1, #3236]             @ 0xca4 
    /*00015198*/ STRH        LR, [IP] 
    /*0001519c*/ STRH        LR, [R1, R5] 
    /*000151a0*/ LDR         IP, [R2, #992]              @ 0x3e0 
    /*000151a4*/ LDR         IP, [IP, #44]               @ 0x2c 
    /*000151a8*/ STRH        IP, [R3] 
    /*000151ac*/ LDR         R3, [R2, #992]              @ 0x3e0 
    /*000151b0*/ LDR         R3, [R3, #48]               @ 0x30 
    /*000151b4*/ STRH        R3, [R1, R4] 
    /*000151b8*/ LDR         R3, [R2, #1988]             @ 0x7c4 
    /*000151bc*/ CMP         R3, #12 
    /*000151c0*/ LDRNE       R3, [R2, #992]              @ 0x3e0 
    /*000151c4*/ MOVEQ       R3, #0 
    /*000151c8*/ STREQ       R3, [R1, #3096]             @ 0xc18 
    /*000151cc*/ LDRNE       R3, [R3, #72]               @ 0x48 
    /*000151d0*/ STRNE       R3, [R1, #3096]             @ 0xc18 
    /*000151d4*/ LDRNE       R3, [R2, #992]              @ 0x3e0 
    /*000151d8*/ LDRNE       R3, [R3, #80]               @ 0x50 
    /*000151dc*/ STR         R3, [R1, #3100]             @ 0xc1c 
    /*000151e0*/ LDR         R3, [R2, #992]              @ 0x3e0 
    /*000151e4*/ LDR         R3, [R3, #416]              @ 0x1a0 
    /*000151e8*/ STR         R3, [R1, #3112]             @ 0xc28 
    /*000151ec*/ LDR         R3, [R2, #992]              @ 0x3e0 
    /*000151f0*/ LDR         R3, [R3, #408]              @ 0x198 
    /*000151f4*/ STR         R3, [R1, #3172]             @ 0xc64 
    /*000151f8*/ LDR         R3, [R2, #992]              @ 0x3e0 
    /*000151fc*/ LDR         R3, [R3, #424]              @ 0x1a8 
    /*00015200*/ STR         R3, [R1, #3124]             @ 0xc34 
    /*00015204*/ LDR         R3, [R0, #976]              @ 0x3d0 
    /*00015208*/ ADD         R3, R3, #63                 @ 0x3f 
    /*0001520c*/ LSR         R3, R3, #6 
    /*00015210*/ LSL         R3, R3, #4 
    /*00015214*/ STR         R3, [R1, #3148]             @ 0xc4c 
    /*00015218*/ POP         {R4, R5, R6, R7, PC} 
    H264E_DRV_CfgRcnRefNoShare_x1521c:
    /*0001521c*/ MOVW        R4, #3240                   @ 0xca8 
    /*00015220*/ MOVW        LR, #3242                   @ 0xcaa 
    /*00015224*/ MOV         IP, #0 
    /*00015228*/ STRH        IP, [R1, R4] 
    /*0001522c*/ STR         IP, [R1, #3192]             @ 0xc78 
    /*00015230*/ STR         IP, [R1, #3196]             @ 0xc7c 
    /*00015234*/ STR         IP, [R1, #3200]             @ 0xc80 
    /*00015238*/ STR         IP, [R1, #3204]             @ 0xc84 
    /*0001523c*/ STR         IP, [R1, #3152]             @ 0xc50 
    /*00015240*/ STR         IP, [R1, #3156]             @ 0xc54 
    /*00015244*/ STRH        IP, [R1, LR] 
    /*00015248*/ LDR         IP, [R3, #2880]             @ 0xb40 
    /*0001524c*/ CMP         IP, #0 
    /*00015250*/ BNE         H264E_DRV_CfgRcnRefNoShare_x150c4
    H264E_DRV_CfgRcnRefNoShare_x15254:
    /*00015254*/ MOVW        LR, #3244                   @ 0xcac 
    /*00015258*/ MOVW        R3, #3246                   @ 0xcae 
    /*0001525c*/ STR         IP, [R1, #3208]             @ 0xc88 
    /*00015260*/ STR         IP, [R1, #3212]             @ 0xc8c 
    /*00015264*/ STR         IP, [R1, #3216]             @ 0xc90 
    /*00015268*/ STR         IP, [R1, #3220]             @ 0xc94 
    /*0001526c*/ STR         IP, [R1, #3160]             @ 0xc58 
    /*00015270*/ STR         IP, [R1, #3164]             @ 0xc5c 
    /*00015274*/ STRH        IP, [R1, LR] 
    /*00015278*/ STRH        IP, [R1, R3] 
    /*0001527c*/ B           H264E_DRV_CfgRcnRefNoShare_x15154
FUNC_END H264E_DRV_CfgRcnRefNoShare


FUNC_BEGIN H264E_DRV_CfgAddress
    /*00015280*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015284*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015288*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0001528c*/ MOV         R7, R1 
    /*00015290*/ LDR         R5, [R3, R0, LSL #2] 
    /*00015294*/ MOVW        R2, #3146                   @ 0xc4a 
    /*00015298*/ MOVW        R3, #3144                   @ 0xc48 
    /*0001529c*/ MOV         R1, #0 
    /*000152a0*/ ADD         R6, R5, R7, LSL #2 
    /*000152a4*/ ADD         R0, R5, #14336              @ 0x3800 
    /*000152a8*/ LDR         R4, [R6, #1056]             @ 0x420 
    /*000152ac*/ LDR         R0, [R0] 
    /*000152b0*/ STR         R0, [R4, #3072]             @ 0xc00 
    /*000152b4*/ LDR         R0, [R5, #1196]             @ 0x4ac 
    /*000152b8*/ LDR         R0, [R0, #120]              @ 0x78 
    /*000152bc*/ STR         R0, [R4, #3076]             @ 0xc04 
    /*000152c0*/ LDR         R0, [R5, #1196]             @ 0x4ac 
    /*000152c4*/ LDR         R0, [R0, #128]              @ 0x80 
    /*000152c8*/ STR         R0, [R4, #3080]             @ 0xc08 
    /*000152cc*/ LDR         R0, [R5, #1196]             @ 0x4ac 
    /*000152d0*/ LDR         R0, [R0, #44]               @ 0x2c 
    /*000152d4*/ STRH        R0, [R4, R2] 
    /*000152d8*/ MOV         R0, R5 
    /*000152dc*/ LDR         R2, [R5, #1196]             @ 0x4ac 
    /*000152e0*/ LDR         R2, [R2, #48]               @ 0x30 
    /*000152e4*/ STR         R1, [R4, #3084]             @ 0xc0c 
    /*000152e8*/ STRH        R2, [R4, R3] 
    /*000152ec*/ LDR         R2, [R5, #1196]             @ 0x4ac 
    /*000152f0*/ LDR         R3, [R2, #20] 
    /*000152f4*/ CMP         R3, R1 
    /*000152f8*/ MOV         R1, R4 
    /*000152fc*/ STREQ       R3, [R4, #3088]             @ 0xc10 
    /*00015300*/ LDRNE       R3, [R2, #72]               @ 0x48 
    /*00015304*/ STRNE       R3, [R4, #3088]             @ 0xc10 
    /*00015308*/ LDRNE       R3, [R5, #1196]             @ 0x4ac 
    /*0001530c*/ LDRNE       R3, [R3, #80]               @ 0x50 
    /*00015310*/ STR         R3, [R4, #3092]             @ 0xc14 
    /*00015314*/ ADD         R3, R5, #12288              @ 0x3000 
    /*00015318*/ LDR         R3, [R3, #1364]             @ 0x554 
    /*0001531c*/ CMP         R3, #1 
    /*00015320*/ BEQ         H264E_DRV_CfgAddress_x153b8
    /*00015324*/ BL          0x0000000000015324          @ H264E_DRV_CfgRcnRefNoShare [R_ARM_CALL: .text+0x14ffc] 
    H264E_DRV_CfgAddress_x15328:
    /*00015328*/ LDR         R2, [R6, #1060]             @ 0x424 
    /*0001532c*/ ADD         R1, R5, R7, LSL #3 
    /*00015330*/ ADD         IP, R1, #1072               @ 0x430 
    /*00015334*/ LDR         R3, [R6, #1072]             @ 0x430 
    /*00015338*/ MOVW        R0, #14832                  @ 0x39f0 
    /*0001533c*/ ADD         LR, R5, #14848              @ 0x3a00 
    /*00015340*/ LDR         R2, [R2, #176]              @ 0xb0 
    /*00015344*/ LDRD        R8, [IP, #-8] 
    /*00015348*/ SUBS        R2, R2, R3 
    /*0001534c*/ ADDS        R2, R2, R8 
    /*00015350*/ STR         R2, [R4, #3180]             @ 0xc6c 
    /*00015354*/ LDR         R2, [R6, #1060]             @ 0x424 
    /*00015358*/ LDR         R3, [R6, #1072]             @ 0x430 
    /*0001535c*/ LDRD        R8, [IP, #-8] 
    /*00015360*/ ADD         R2, R2, #64                 @ 0x40 
    /*00015364*/ SUBS        R2, R2, R3 
    /*00015368*/ ADDS        R2, R2, R8 
    /*0001536c*/ STR         R2, [R4, #3120]             @ 0xc30 
    /*00015370*/ LDR         R2, [R6, #1060]             @ 0x424 
    /*00015374*/ LDR         R3, [R6, #1072]             @ 0x430 
    /*00015378*/ LDRD        R8, [IP, #-8] 
    /*0001537c*/ ADD         R2, R2, #128                @ 0x80 
    /*00015380*/ SUBS        R2, R2, R3 
    /*00015384*/ ADDS        R2, R2, R8 
    /*00015388*/ STR         R2, [R4, #3116]             @ 0xc2c 
    /*0001538c*/ LDR         R3, [R5, R0] 
    /*00015390*/ MOV         R2, #256                    @ 0x100 
    /*00015394*/ STR         R3, [R4, #3132]             @ 0xc3c 
    /*00015398*/ LDR         R3, [LR] 
    /*0001539c*/ STR         R3, [R4, #3136]             @ 0xc40 
    /*000153a0*/ LDR         R0, [R6, #1056]             @ 0x420 
    /*000153a4*/ LDR         R1, [R1, #1048]             @ 0x418 
    /*000153a8*/ ADD         R0, R0, #3072               @ 0xc00 
    /*000153ac*/ ADD         R1, R1, #3072               @ 0xc00 
    /*000153b0*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    H264E_DRV_CfgAddress_x153b4:
    /*000153b4*/ B           H264E_DRV_CfgAddress_x153b4 @ hil_mmb_flush_dcache_byaddr [R_ARM_JUMP24: +0x0] 
    H264E_DRV_CfgAddress_x153b8:
    /*000153b8*/ BL          0x00000000000153B8          @ H264E_DRV_CfgRcnRefShare [R_ARM_CALL: .text+0x14be0] 
    /*000153bc*/ B           H264E_DRV_CfgAddress_x15328
FUNC_END H264E_DRV_CfgAddress


FUNC_BEGIN H264E_DRV_UpdateSseConfigParam
    /*000153c0*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000153c4*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000153c8*/ LDR         IP, [R3, R0, LSL #2] 
    /*000153cc*/ ADD         R3, IP, #12288              @ 0x3000 
    /*000153d0*/ LDR         R2, [R3, #2200]             @ 0x898 
    /*000153d4*/ CMP         R2, #1 
    /*000153d8*/ BXNE        LR 
    /*000153dc*/ PUSH        {R4, R5, R6, LR} 
    /*000153e0*/ ADD         LR, IP, R1, LSL #2 
    /*000153e4*/ LDR         R0, [R3, #2208]             @ 0x8a0 
    /*000153e8*/ LDR         R2, [LR, #1056]             @ 0x420 
    /*000153ec*/ CMP         R0, #0 
    /*000153f0*/ BNE         H264E_DRV_UpdateSseConfigParam_x156cc
    /*000153f4*/ ADD         R4, R2, #2816               @ 0xb00 
    /*000153f8*/ MOVW        R6, #2818                   @ 0xb02 
    /*000153fc*/ MOVW        R5, #2820                   @ 0xb04 
    /*00015400*/ STRH        R0, [R4] 
    /*00015404*/ MOVW        R4, #2822                   @ 0xb06 
    /*00015408*/ STRH        R0, [R2, R6] 
    /*0001540c*/ STRH        R0, [R2, R5] 
    /*00015410*/ STRH        R0, [R2, R4] 
    /*00015414*/ LDR         R0, [R3, #2232]             @ 0x8b8 
    /*00015418*/ CMP         R0, #0 
    /*0001541c*/ BEQ         H264E_DRV_UpdateSseConfigParam_x15728
    H264E_DRV_UpdateSseConfigParam_x15420:
    /*00015420*/ LDR         R0, [R3, #2236]             @ 0x8bc 
    /*00015424*/ MOVW        R4, #2824                   @ 0xb08 
    /*00015428*/ MOVW        R6, #2826                   @ 0xb0a 
    /*0001542c*/ MOVW        R5, #2828                   @ 0xb0c 
    /*00015430*/ LSR         R0, R0, #4 
    /*00015434*/ STRH        R0, [R2, R4] 
    /*00015438*/ LDR         R0, [R3, #2240]             @ 0x8c0 
    /*0001543c*/ MOVW        R4, #2830                   @ 0xb0e 
    /*00015440*/ LSR         R0, R0, #4 
    /*00015444*/ STRH        R0, [R2, R6] 
    /*00015448*/ LDR         R0, [R3, #2236]             @ 0x8bc 
    /*0001544c*/ LDR         R6, [R3, #2244]             @ 0x8c4 
    /*00015450*/ ADD         R0, R0, R6 
    /*00015454*/ LSR         R0, R0, #4 
    /*00015458*/ STRH        R0, [R2, R5] 
    /*0001545c*/ LDR         R0, [R3, #2240]             @ 0x8c0 
    /*00015460*/ LDR         R5, [R3, #2248]             @ 0x8c8 
    /*00015464*/ ADD         R0, R0, R5 
    /*00015468*/ LSR         R0, R0, #4 
    /*0001546c*/ STRH        R0, [R2, R4] 
    /*00015470*/ LDR         R0, [R3, #2256]             @ 0x8d0 
    /*00015474*/ CMP         R0, #0 
    /*00015478*/ BEQ         H264E_DRV_UpdateSseConfigParam_x15754
    H264E_DRV_UpdateSseConfigParam_x1547c:
    /*0001547c*/ LDR         R4, [R3, #2260]             @ 0x8d4 
    /*00015480*/ ADD         R0, R2, #2832               @ 0xb10 
    /*00015484*/ MOVW        R6, #2834                   @ 0xb12 
    /*00015488*/ MOVW        R5, #2836                   @ 0xb14 
    /*0001548c*/ LSR         R4, R4, #4 
    /*00015490*/ STRH        R4, [R0] 
    /*00015494*/ LDR         R0, [R3, #2264]             @ 0x8d8 
    /*00015498*/ MOVW        R4, #2838                   @ 0xb16 
    /*0001549c*/ LSR         R0, R0, #4 
    /*000154a0*/ STRH        R0, [R2, R6] 
    /*000154a4*/ LDR         R0, [R3, #2260]             @ 0x8d4 
    /*000154a8*/ LDR         R6, [R3, #2268]             @ 0x8dc 
    /*000154ac*/ ADD         R0, R0, R6 
    /*000154b0*/ LSR         R0, R0, #4 
    /*000154b4*/ STRH        R0, [R2, R5] 
    /*000154b8*/ LDR         R0, [R3, #2264]             @ 0x8d8 
    /*000154bc*/ LDR         R5, [R3, #2272]             @ 0x8e0 
    /*000154c0*/ ADD         R0, R0, R5 
    /*000154c4*/ LSR         R0, R0, #4 
    /*000154c8*/ STRH        R0, [R2, R4] 
    /*000154cc*/ LDR         R0, [R3, #2280]             @ 0x8e8 
    /*000154d0*/ CMP         R0, #0 
    /*000154d4*/ BEQ         H264E_DRV_UpdateSseConfigParam_x15780
    H264E_DRV_UpdateSseConfigParam_x154d8:
    /*000154d8*/ LDR         R0, [R3, #2284]             @ 0x8ec 
    /*000154dc*/ MOVW        R4, #2840                   @ 0xb18 
    /*000154e0*/ MOVW        R6, #2842                   @ 0xb1a 
    /*000154e4*/ MOVW        R5, #2844                   @ 0xb1c 
    /*000154e8*/ LSR         R0, R0, #4 
    /*000154ec*/ STRH        R0, [R2, R4] 
    /*000154f0*/ LDR         R0, [R3, #2288]             @ 0x8f0 
    /*000154f4*/ MOVW        R4, #2846                   @ 0xb1e 
    /*000154f8*/ LSR         R0, R0, #4 
    /*000154fc*/ STRH        R0, [R2, R6] 
    /*00015500*/ LDR         R0, [R3, #2284]             @ 0x8ec 
    /*00015504*/ LDR         R6, [R3, #2292]             @ 0x8f4 
    /*00015508*/ ADD         R0, R0, R6 
    /*0001550c*/ LSR         R0, R0, #4 
    /*00015510*/ STRH        R0, [R2, R5] 
    /*00015514*/ LDR         R0, [R3, #2288]             @ 0x8f0 
    /*00015518*/ LDR         R5, [R3, #2296]             @ 0x8f8 
    /*0001551c*/ ADD         R0, R0, R5 
    /*00015520*/ LSR         R0, R0, #4 
    /*00015524*/ STRH        R0, [R2, R4] 
    /*00015528*/ LDR         R0, [R3, #2304]             @ 0x900 
    /*0001552c*/ CMP         R0, #0 
    /*00015530*/ BEQ         H264E_DRV_UpdateSseConfigParam_x157ac
    H264E_DRV_UpdateSseConfigParam_x15534:
    /*00015534*/ LDR         R4, [R3, #2308]             @ 0x904 
    /*00015538*/ ADD         R0, R2, #2848               @ 0xb20 
    /*0001553c*/ MOVW        R6, #2850                   @ 0xb22 
    /*00015540*/ MOVW        R5, #2852                   @ 0xb24 
    /*00015544*/ LSR         R4, R4, #4 
    /*00015548*/ STRH        R4, [R0] 
    /*0001554c*/ LDR         R0, [R3, #2312]             @ 0x908 
    /*00015550*/ MOVW        R4, #2854                   @ 0xb26 
    /*00015554*/ LSR         R0, R0, #4 
    /*00015558*/ STRH        R0, [R2, R6] 
    /*0001555c*/ LDR         R0, [R3, #2308]             @ 0x904 
    /*00015560*/ LDR         R6, [R3, #2316]             @ 0x90c 
    /*00015564*/ ADD         R0, R0, R6 
    /*00015568*/ LSR         R0, R0, #4 
    /*0001556c*/ STRH        R0, [R2, R5] 
    /*00015570*/ LDR         R0, [R3, #2312]             @ 0x908 
    /*00015574*/ LDR         R5, [R3, #2320]             @ 0x910 
    /*00015578*/ ADD         R0, R0, R5 
    /*0001557c*/ LSR         R0, R0, #4 
    /*00015580*/ STRH        R0, [R2, R4] 
    /*00015584*/ LDR         R0, [R3, #2328]             @ 0x918 
    /*00015588*/ CMP         R0, #0 
    /*0001558c*/ BEQ         H264E_DRV_UpdateSseConfigParam_x157d8
    H264E_DRV_UpdateSseConfigParam_x15590:
    /*00015590*/ LDR         R0, [R3, #2332]             @ 0x91c 
    /*00015594*/ MOVW        R4, #2856                   @ 0xb28 
    /*00015598*/ MOVW        R6, #2858                   @ 0xb2a 
    /*0001559c*/ MOVW        R5, #2860                   @ 0xb2c 
    /*000155a0*/ LSR         R0, R0, #4 
    /*000155a4*/ STRH        R0, [R2, R4] 
    /*000155a8*/ LDR         R0, [R3, #2336]             @ 0x920 
    /*000155ac*/ MOVW        R4, #2862                   @ 0xb2e 
    /*000155b0*/ LSR         R0, R0, #4 
    /*000155b4*/ STRH        R0, [R2, R6] 
    /*000155b8*/ LDR         R0, [R3, #2332]             @ 0x91c 
    /*000155bc*/ LDR         R6, [R3, #2340]             @ 0x924 
    /*000155c0*/ ADD         R0, R0, R6 
    /*000155c4*/ LSR         R0, R0, #4 
    /*000155c8*/ STRH        R0, [R2, R5] 
    /*000155cc*/ LDR         R0, [R3, #2336]             @ 0x920 
    /*000155d0*/ LDR         R5, [R3, #2344]             @ 0x928 
    /*000155d4*/ ADD         R0, R0, R5 
    /*000155d8*/ LSR         R0, R0, #4 
    /*000155dc*/ STRH        R0, [R2, R4] 
    /*000155e0*/ LDR         R0, [R3, #2352]             @ 0x930 
    /*000155e4*/ CMP         R0, #0 
    /*000155e8*/ BEQ         H264E_DRV_UpdateSseConfigParam_x15804
    H264E_DRV_UpdateSseConfigParam_x155ec:
    /*000155ec*/ LDR         R4, [R3, #2356]             @ 0x934 
    /*000155f0*/ ADD         R0, R2, #2864               @ 0xb30 
    /*000155f4*/ MOVW        R6, #2866                   @ 0xb32 
    /*000155f8*/ MOVW        R5, #2868                   @ 0xb34 
    /*000155fc*/ LSR         R4, R4, #4 
    /*00015600*/ STRH        R4, [R0] 
    /*00015604*/ LDR         R0, [R3, #2360]             @ 0x938 
    /*00015608*/ MOVW        R4, #2870                   @ 0xb36 
    /*0001560c*/ LSR         R0, R0, #4 
    /*00015610*/ STRH        R0, [R2, R6] 
    /*00015614*/ LDR         R0, [R3, #2356]             @ 0x934 
    /*00015618*/ LDR         R6, [R3, #2364]             @ 0x93c 
    /*0001561c*/ ADD         R0, R0, R6 
    /*00015620*/ LSR         R0, R0, #4 
    /*00015624*/ STRH        R0, [R2, R5] 
    /*00015628*/ LDR         R0, [R3, #2360]             @ 0x938 
    /*0001562c*/ LDR         R5, [R3, #2368]             @ 0x940 
    /*00015630*/ ADD         R0, R0, R5 
    /*00015634*/ LSR         R0, R0, #4 
    /*00015638*/ STRH        R0, [R2, R4] 
    /*0001563c*/ LDR         R0, [R3, #2376]             @ 0x948 
    /*00015640*/ CMP         R0, #0 
    /*00015644*/ BEQ         H264E_DRV_UpdateSseConfigParam_x15830
    H264E_DRV_UpdateSseConfigParam_x15648:
    /*00015648*/ LDR         R0, [R3, #2380]             @ 0x94c 
    /*0001564c*/ MOVW        R4, #2872                   @ 0xb38 
    /*00015650*/ MOVW        R6, #2874                   @ 0xb3a 
    /*00015654*/ MOVW        R5, #2876                   @ 0xb3c 
    /*00015658*/ LSR         R0, R0, #4 
    /*0001565c*/ STRH        R0, [R2, R4] 
    /*00015660*/ LDR         R0, [R3, #2384]             @ 0x950 
    /*00015664*/ MOVW        R4, #2878                   @ 0xb3e 
    /*00015668*/ LSR         R0, R0, #4 
    /*0001566c*/ STRH        R0, [R2, R6] 
    /*00015670*/ LDR         R0, [R3, #2380]             @ 0x94c 
    /*00015674*/ LDR         R6, [R3, #2388]             @ 0x954 
    /*00015678*/ ADD         R0, R0, R6 
    /*0001567c*/ LSR         R0, R0, #4 
    /*00015680*/ STRH        R0, [R2, R5] 
    /*00015684*/ LDR         R0, [R3, #2384]             @ 0x950 
    /*00015688*/ LDR         R5, [R3, #2392]             @ 0x958 
    /*0001568c*/ ADD         R0, R0, R5 
    /*00015690*/ LSR         R0, R0, #4 
    /*00015694*/ STRH        R0, [R2, R4] 
    H264E_DRV_UpdateSseConfigParam_x15698:
    /*00015698*/ LDR         R2, [R3, #2396]             @ 0x95c 
    /*0001569c*/ SUB         R2, R2, #1 
    /*000156a0*/ CMP         R2, R1 
    /*000156a4*/ ADD         R1, R1, #131                @ 0x83 
    /*000156a8*/ MOVEQ       R2, #0 
    /*000156ac*/ STREQ       R2, [R3, #2200]             @ 0x898 
    /*000156b0*/ LDR         R0, [LR, #1056]             @ 0x420 
    /*000156b4*/ MOV         R2, #128                    @ 0x80 
    /*000156b8*/ LDR         R1, [IP, R1, LSL #3] 
    /*000156bc*/ ADD         R0, R0, #2816               @ 0xb00 
    /*000156c0*/ ADD         R1, R1, #2816               @ 0xb00 
    /*000156c4*/ POP         {R4, R5, R6, LR} 
    H264E_DRV_UpdateSseConfigParam_x156c8:
    /*000156c8*/ B           H264E_DRV_UpdateSseConfigParam_x156c8@ hil_mmb_flush_dcache_byaddr [R_ARM_JUMP24: +0x0] 
    H264E_DRV_UpdateSseConfigParam_x156cc:
    /*000156cc*/ LDR         R4, [R3, #2212]             @ 0x8a4 
    /*000156d0*/ ADD         R0, R2, #2816               @ 0xb00 
    /*000156d4*/ MOVW        R6, #2818                   @ 0xb02 
    /*000156d8*/ MOVW        R5, #2820                   @ 0xb04 
    /*000156dc*/ LSR         R4, R4, #4 
    /*000156e0*/ STRH        R4, [R0] 
    /*000156e4*/ LDR         R0, [R3, #2216]             @ 0x8a8 
    /*000156e8*/ MOVW        R4, #2822                   @ 0xb06 
    /*000156ec*/ LSR         R0, R0, #4 
    /*000156f0*/ STRH        R0, [R2, R6] 
    /*000156f4*/ LDR         R0, [R3, #2212]             @ 0x8a4 
    /*000156f8*/ LDR         R6, [R3, #2220]             @ 0x8ac 
    /*000156fc*/ ADD         R0, R0, R6 
    /*00015700*/ LSR         R0, R0, #4 
    /*00015704*/ STRH        R0, [R2, R5] 
    /*00015708*/ LDR         R0, [R3, #2216]             @ 0x8a8 
    /*0001570c*/ LDR         R5, [R3, #2224]             @ 0x8b0 
    /*00015710*/ ADD         R0, R0, R5 
    /*00015714*/ LSR         R0, R0, #4 
    /*00015718*/ STRH        R0, [R2, R4] 
    /*0001571c*/ LDR         R0, [R3, #2232]             @ 0x8b8 
    /*00015720*/ CMP         R0, #0 
    /*00015724*/ BNE         H264E_DRV_UpdateSseConfigParam_x15420
    H264E_DRV_UpdateSseConfigParam_x15728:
    /*00015728*/ MOVW        R5, #2824                   @ 0xb08 
    /*0001572c*/ MOVW        R4, #2826                   @ 0xb0a 
    /*00015730*/ STRH        R0, [R2, R5] 
    /*00015734*/ MOVW        R5, #2828                   @ 0xb0c 
    /*00015738*/ STRH        R0, [R2, R4] 
    /*0001573c*/ MOVW        R4, #2830                   @ 0xb0e 
    /*00015740*/ STRH        R0, [R2, R5] 
    /*00015744*/ STRH        R0, [R2, R4] 
    /*00015748*/ LDR         R0, [R3, #2256]             @ 0x8d0 
    /*0001574c*/ CMP         R0, #0 
    /*00015750*/ BNE         H264E_DRV_UpdateSseConfigParam_x1547c
    H264E_DRV_UpdateSseConfigParam_x15754:
    /*00015754*/ ADD         R4, R2, #2832               @ 0xb10 
    /*00015758*/ MOVW        R6, #2834                   @ 0xb12 
    /*0001575c*/ MOVW        R5, #2836                   @ 0xb14 
    /*00015760*/ STRH        R0, [R4] 
    /*00015764*/ MOVW        R4, #2838                   @ 0xb16 
    /*00015768*/ STRH        R0, [R2, R6] 
    /*0001576c*/ STRH        R0, [R2, R5] 
    /*00015770*/ STRH        R0, [R2, R4] 
    /*00015774*/ LDR         R0, [R3, #2280]             @ 0x8e8 
    /*00015778*/ CMP         R0, #0 
    /*0001577c*/ BNE         H264E_DRV_UpdateSseConfigParam_x154d8
    H264E_DRV_UpdateSseConfigParam_x15780:
    /*00015780*/ MOVW        R5, #2840                   @ 0xb18 
    /*00015784*/ MOVW        R4, #2842                   @ 0xb1a 
    /*00015788*/ STRH        R0, [R2, R5] 
    /*0001578c*/ MOVW        R5, #2844                   @ 0xb1c 
    /*00015790*/ STRH        R0, [R2, R4] 
    /*00015794*/ MOVW        R4, #2846                   @ 0xb1e 
    /*00015798*/ STRH        R0, [R2, R5] 
    /*0001579c*/ STRH        R0, [R2, R4] 
    /*000157a0*/ LDR         R0, [R3, #2304]             @ 0x900 
    /*000157a4*/ CMP         R0, #0 
    /*000157a8*/ BNE         H264E_DRV_UpdateSseConfigParam_x15534
    H264E_DRV_UpdateSseConfigParam_x157ac:
    /*000157ac*/ ADD         R4, R2, #2848               @ 0xb20 
    /*000157b0*/ MOVW        R6, #2850                   @ 0xb22 
    /*000157b4*/ MOVW        R5, #2852                   @ 0xb24 
    /*000157b8*/ STRH        R0, [R4] 
    /*000157bc*/ MOVW        R4, #2854                   @ 0xb26 
    /*000157c0*/ STRH        R0, [R2, R6] 
    /*000157c4*/ STRH        R0, [R2, R5] 
    /*000157c8*/ STRH        R0, [R2, R4] 
    /*000157cc*/ LDR         R0, [R3, #2328]             @ 0x918 
    /*000157d0*/ CMP         R0, #0 
    /*000157d4*/ BNE         H264E_DRV_UpdateSseConfigParam_x15590
    H264E_DRV_UpdateSseConfigParam_x157d8:
    /*000157d8*/ MOVW        R5, #2856                   @ 0xb28 
    /*000157dc*/ MOVW        R4, #2858                   @ 0xb2a 
    /*000157e0*/ STRH        R0, [R2, R5] 
    /*000157e4*/ MOVW        R5, #2860                   @ 0xb2c 
    /*000157e8*/ STRH        R0, [R2, R4] 
    /*000157ec*/ MOVW        R4, #2862                   @ 0xb2e 
    /*000157f0*/ STRH        R0, [R2, R5] 
    /*000157f4*/ STRH        R0, [R2, R4] 
    /*000157f8*/ LDR         R0, [R3, #2352]             @ 0x930 
    /*000157fc*/ CMP         R0, #0 
    /*00015800*/ BNE         H264E_DRV_UpdateSseConfigParam_x155ec
    H264E_DRV_UpdateSseConfigParam_x15804:
    /*00015804*/ ADD         R4, R2, #2864               @ 0xb30 
    /*00015808*/ MOVW        R6, #2866                   @ 0xb32 
    /*0001580c*/ MOVW        R5, #2868                   @ 0xb34 
    /*00015810*/ STRH        R0, [R4] 
    /*00015814*/ MOVW        R4, #2870                   @ 0xb36 
    /*00015818*/ STRH        R0, [R2, R6] 
    /*0001581c*/ STRH        R0, [R2, R5] 
    /*00015820*/ STRH        R0, [R2, R4] 
    /*00015824*/ LDR         R0, [R3, #2376]             @ 0x948 
    /*00015828*/ CMP         R0, #0 
    /*0001582c*/ BNE         H264E_DRV_UpdateSseConfigParam_x15648
    H264E_DRV_UpdateSseConfigParam_x15830:
    /*00015830*/ MOVW        R5, #2872                   @ 0xb38 
    /*00015834*/ MOVW        R4, #2874                   @ 0xb3a 
    /*00015838*/ STRH        R0, [R2, R5] 
    /*0001583c*/ MOVW        R5, #2876                   @ 0xb3c 
    /*00015840*/ STRH        R0, [R2, R4] 
    /*00015844*/ MOVW        R4, #2878                   @ 0xb3e 
    /*00015848*/ STRH        R0, [R2, R5] 
    /*0001584c*/ STRH        R0, [R2, R4] 
    /*00015850*/ B           H264E_DRV_UpdateSseConfigParam_x15698
FUNC_END H264E_DRV_UpdateSseConfigParam


FUNC_BEGIN H264E_DRV_UpdateRegConfigParam
    /*00015854*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00015858*/ MOVW        R9, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001585c*/ MOVT        R9, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015860*/ MOV         R5, R0 
    /*00015864*/ LDR         R8, [R9, R0, LSL #2] 
    /*00015868*/ CMP         R8, #0 
    /*0001586c*/ BEQ         H264E_DRV_UpdateRegConfigParam_x15960
    H264E_DRV_UpdateRegConfigParam_x15870:
    /*00015870*/ ADD         R8, R8, #12288              @ 0x3000 
    /*00015874*/ LDR         R3, [R8, #2396]             @ 0x95c 
    /*00015878*/ CMP         R3, #0 
    /*0001587c*/ POPEQ       {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*00015880*/ MOV         R4, #0 
    H264E_DRV_UpdateRegConfigParam_x15884:
    /*00015884*/ MOV         R1, R4 
    /*00015888*/ MOV         R0, R5 
    /*0001588c*/ BL          0x000000000001588C          @ H264E_DRV_UpdateBaseReg [R_ARM_CALL: .text+0x1398c] 
    /*00015890*/ MOV         R1, R4 
    /*00015894*/ MOV         R0, R5 
    /*00015898*/ BL          0x0000000000015898          @ H264E_DRV_UpdateCommonReg [R_ARM_CALL: .text+0x13d44] 
    /*0001589c*/ MOV         R1, R4 
    /*000158a0*/ MOV         R0, R5 
    /*000158a4*/ BL          0x00000000000158A4          @ H264E_DRV_UpdateLowerPowerCfg [R_ARM_CALL: .text+0x145e8] 
    /*000158a8*/ MOV         R1, R4 
    /*000158ac*/ MOV         R0, R5 
    /*000158b0*/ BL          0x00000000000158B0          @ H264E_DRV_UpdateRegConfigConfigParamUnusual [R_ARM_CALL: .text+0x13800] 
    /*000158b4*/ MOV         R1, R4 
    /*000158b8*/ MOV         R0, R5 
    /*000158bc*/ BL          0x00000000000158BC          @ H264eDrvUpdateArithMeticCfg [R_ARM_CALL: .text+0x140a8] 
    /*000158c0*/ MOV         R1, R4 
    /*000158c4*/ MOV         R0, R5 
    /*000158c8*/ BL          0x00000000000158C8          @ H264eDrvCfgLambda [R_ARM_CALL: .text+0x14530] 
    /*000158cc*/ MOV         R1, R4 
    /*000158d0*/ MOV         R0, R5 
    /*000158d4*/ BL          0x00000000000158D4          @ H264eDrvUpdatePatternRemovalCfg [R_ARM_CALL: .text+0x1400c] 
    /*000158d8*/ MOV         R1, R4 
    /*000158dc*/ MOV         R0, R5 
    /*000158e0*/ BL          0x00000000000158E0          @ H264E_DRV_UpdateSseConfigParam [R_ARM_CALL: .text+0x153c0] 
    /*000158e4*/ MOV         R1, R4 
    /*000158e8*/ MOV         R0, R5 
    /*000158ec*/ BL          0x00000000000158EC          @ H264eDrvUpdatePatternRemovalCfg [R_ARM_CALL: .text+0x1400c] 
    /*000158f0*/ MOV         R1, R4 
    /*000158f4*/ MOV         R0, R5 
    /*000158f8*/ BL          0x00000000000158F8          @ H264E_DRV_CfgAddress [R_ARM_CALL: .text+0x15280] 
    /*000158fc*/ LDR         R6, [R9, R5, LSL #2] 
    /*00015900*/ MOV         R0, #25 
    /*00015904*/ ADD         R7, R6, R4, LSL #2 
    /*00015908*/ LDR         SL, [R7, #1056]             @ 0x420 
    /*0001590c*/ BL          0x000000000001590C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015910*/ LDR         R3, [R0, #80]               @ 0x50 
    /*00015914*/ MOV         R0, #25 
    /*00015918*/ CMP         R3, #0 
    /*0001591c*/ BEQ         H264E_DRV_UpdateRegConfigParam_x15930
    /*00015920*/ BL          0x0000000000015920          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015924*/ LDR         R3, [R0, #80]               @ 0x50 
    /*00015928*/ MOV         R0, SL 
    /*0001592c*/ BLX         R3 
    H264E_DRV_UpdateRegConfigParam_x15930:
    /*00015930*/ ADD         R3, R4, #131                @ 0x83 
    /*00015934*/ LDR         R0, [R7, #1056]             @ 0x420 
    /*00015938*/ MOV         R2, #128                    @ 0x80 
    /*0001593c*/ ADD         R4, R4, #1 
    /*00015940*/ LDR         R1, [R6, R3, LSL #3] 
    /*00015944*/ ADD         R0, R0, #3328               @ 0xd00 
    /*00015948*/ ADD         R1, R1, #3328               @ 0xd00 
    /*0001594c*/ BL          0x000000000001594C          @ hil_mmb_flush_dcache_byaddr [R_ARM_CALL: +0x0] 
    /*00015950*/ LDR         R3, [R8, #2396]             @ 0x95c 
    /*00015954*/ CMP         R3, #1 
    /*00015958*/ BHI         H264E_DRV_UpdateRegConfigParam_x15884
    /*0001595c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    H264E_DRV_UpdateRegConfigParam_x15960:
    /*00015960*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x435c] 
    /*00015964*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4370] 
    /*00015968*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x435c] 
    /*0001596c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4370] 
    /*00015970*/ MOVW        R2, #3413                   @ 0xd55 
    /*00015974*/ LDR         R1, [PC, #4]                @ 0x0000000000015980 
    /*00015978*/ BL          0x0000000000015978          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001597c*/ B           H264E_DRV_UpdateRegConfigParam_x15870
    /*00015980*/ STRDEQ      R0, [R0], -R8 
FUNC_END H264E_DRV_UpdateRegConfigParam


FUNC_BEGIN H264E_DRV_InitVuiCfg
    /*00015984*/ PUSH        {R4, LR} 
    /*00015988*/ SUBS        R4, R0, #0 
    /*0001598c*/ BEQ         H264E_DRV_InitVuiCfg_x159ec
    H264E_DRV_InitVuiCfg_x15990:
    /*00015990*/ MOV         R3, #1 
    /*00015994*/ MOV         R2, #0 
    /*00015998*/ MOV         R0, #60                     @ 0x3c 
    /*0001599c*/ MOV         R1, #5 
    /*000159a0*/ STRB        R2, [R4, #8] 
    /*000159a4*/ STRB        R2, [R4] 
    /*000159a8*/ STRB        R2, [R4, #2] 
    /*000159ac*/ STRB        R2, [R4, #3] 
    /*000159b0*/ STRB        R2, [R4, #27] 
    /*000159b4*/ STR         R3, [R4, #12] 
    /*000159b8*/ STRB        R3, [R4, #9] 
    /*000159bc*/ STRB        R3, [R4, #20] 
    /*000159c0*/ STRB        R3, [R4, #22] 
    /*000159c4*/ STRB        R3, [R4, #23] 
    /*000159c8*/ STRB        R3, [R4, #24] 
    /*000159cc*/ STRB        R3, [R4, #25] 
    /*000159d0*/ STRB        R3, [R4, #26] 
    /*000159d4*/ STRB        R3, [R4, #1] 
    /*000159d8*/ STRH        R3, [R4, #4] 
    /*000159dc*/ STRH        R3, [R4, #6] 
    /*000159e0*/ STR         R0, [R4, #16] 
    /*000159e4*/ STRB        R1, [R4, #21] 
    /*000159e8*/ POP         {R4, PC} 
    H264E_DRV_InitVuiCfg_x159ec:
    /*000159ec*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x44e4] 
    /*000159f0*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4370] 
    /*000159f4*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x44e4] 
    /*000159f8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4370] 
    /*000159fc*/ MOVW        R2, #3445                   @ 0xd75 
    /*00015a00*/ LDR         R1, [PC, #4]                @ 0x0000000000015a0c 
    /*00015a04*/ BL          0x0000000000015A04          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00015a08*/ B           H264E_DRV_InitVuiCfg_x15990
    /*00015a0c*/ ANDEQ       R0, R0, R8, LSL FP 
FUNC_END H264E_DRV_InitVuiCfg


FUNC_BEGIN H264E_DRV_GetNbiSize
    /*00015a10*/ MOV         R0, #0 
    /*00015a14*/ BX          LR 
FUNC_END H264E_DRV_GetNbiSize


FUNC_BEGIN H264E_DRV_GetTmvSize
    /*00015a18*/ ADD         R0, R0, #15 
    /*00015a1c*/ ADD         R1, R1, #15 
    /*00015a20*/ LSR         R3, R0, #4 
    /*00015a24*/ LSR         R0, R1, #4 
    /*00015a28*/ MUL         R0, R0, R3 
    /*00015a2c*/ LSL         R0, R0, #5 
    /*00015a30*/ BX          LR 
FUNC_END H264E_DRV_GetTmvSize


FUNC_BEGIN H264E_DRV_GetPmeSize
    /*00015a34*/ ADD         R0, R0, #63                 @ 0x3f 
    /*00015a38*/ ADD         R1, R1, #63                 @ 0x3f 
    /*00015a3c*/ LSR         R0, R0, #6 
    /*00015a40*/ LSR         R1, R1, #6 
    /*00015a44*/ LSL         R0, R0, #4 
    /*00015a48*/ LSL         R1, R1, #4 
    /*00015a4c*/ MUL         R0, R1, R0 
    /*00015a50*/ BX          LR 
FUNC_END H264E_DRV_GetPmeSize


FUNC_BEGIN H264E_DRV_GetPmeInfoSize
    /*00015a54*/ ADD         R0, R0, #4080               @ 0xff0 
    /*00015a58*/ ADD         R1, R1, #15 
    /*00015a5c*/ ADD         R0, R0, #15 
    /*00015a60*/ LSR         R1, R1, #4 
    /*00015a64*/ LSR         R0, R0, #12 
    /*00015a68*/ MUL         R0, R1, R0 
    /*00015a6c*/ LSL         R0, R0, #5 
    /*00015a70*/ BX          LR 
FUNC_END H264E_DRV_GetPmeInfoSize


FUNC_BEGIN H264E_DRV_GetCmpHeaderSize
    /*00015a74*/ ADD         R3, R0, #508                @ 0x1fc 
    /*00015a78*/ ADD         R1, R1, #15 
    /*00015a7c*/ ADD         R3, R3, #3 
    /*00015a80*/ LSR         R0, R1, #4 
    /*00015a84*/ LSR         R3, R3, #9 
    /*00015a88*/ LSL         R3, R3, #5 
    /*00015a8c*/ MUL         R0, R0, R3 
    /*00015a90*/ BX          LR 
FUNC_END H264E_DRV_GetCmpHeaderSize


FUNC_BEGIN H264E_DRV_UpdatePredModeAdaptive
    /*00015a94*/ MOVW        R3, #0                      @ g_pstH264EContext [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015a98*/ MOVT        R3, #0                      @ g_pstH264EContext [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015a9c*/ LDR         R2, [R3, R0, LSL #2] 
    /*00015aa0*/ ADD         R3, R2, #12288              @ 0x3000 
    /*00015aa4*/ LDR         R1, [R3, #2192]             @ 0x890 
    /*00015aa8*/ CMP         R1, #0 
    /*00015aac*/ BXEQ        LR 
    /*00015ab0*/ LDR         R1, [R3, #2396]             @ 0x95c 
    /*00015ab4*/ CMP         R1, #0 
    /*00015ab8*/ BXEQ        LR 
    /*00015abc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00015ac0*/ LDR         R2, [R2, #1056]             @ 0x420 
    /*00015ac4*/ LDR         R1, [R3, #1988]             @ 0x7c4 
    /*00015ac8*/ LDRB        R0, [R2, #1864]             @ 0x748 
    /*00015acc*/ SUB         R1, R1, #4 
    /*00015ad0*/ CMP         R1, #1 
    /*00015ad4*/ LDR         R6, [R2, #1800]             @ 0x708 
    /*00015ad8*/ AND         R7, R0, #15 
    /*00015adc*/ LDR         R8, [R2, #1864]             @ 0x748 
    /*00015ae0*/ LSR         R5, R0, #4 
    /*00015ae4*/ LDR         R0, [R2, #1876]             @ 0x754 
    /*00015ae8*/ BLS         H264E_DRV_UpdatePredModeAdaptive_x15b9c
    /*00015aec*/ LDR         R7, [R3, #2188]             @ 0x88c 
    /*00015af0*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x9d0] 
    /*00015af4*/ LDR         R5, [R3, #2180]             @ 0x884 
    /*00015af8*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x9d0] 
    /*00015afc*/ LDR         R4, [R3, #2184]             @ 0x888 
    /*00015b00*/ LDR         SL, [R3, #2176]             @ 0x880 
    /*00015b04*/ ADD         R7, R1, R7, LSL #2 
    /*00015b08*/ LDR         LR, [R3, #2160]             @ 0x870 
    /*00015b0c*/ ADD         R5, R1, R5, LSL #2 
    /*00015b10*/ LDR         IP, [R3, #2168]             @ 0x878 
    /*00015b14*/ ADD         R4, R1, R4, LSL #2 
    /*00015b18*/ LDR         R9, [R5, #352]              @ 0x160 
    /*00015b1c*/ ADD         LR, R1, LR, LSL #2 
    /*00015b20*/ LDR         R5, [R4, #352]              @ 0x160 
    /*00015b24*/ ADD         IP, R1, IP, LSL #2 
    /*00015b28*/ ADD         R1, R1, SL, LSL #2 
    /*00015b2c*/ LDR         R7, [R7, #352]              @ 0x160 
    /*00015b30*/ AND         R9, R9, #15 
    /*00015b34*/ LDR         R4, [LR, #352]              @ 0x160 
    /*00015b38*/ LDR         LR, [IP, #352]              @ 0x160 
    /*00015b3c*/ AND         R7, R7, #15 
    /*00015b40*/ LDR         IP, [R1, #352]              @ 0x160 
    /*00015b44*/ AND         R1, R5, #15 
    /*00015b48*/ AND         R4, R4, #15 
    /*00015b4c*/ AND         LR, LR, #15 
    /*00015b50*/ AND         IP, IP, #15 
    /*00015b54*/ MOV         R5, R7 
    /*00015b58*/ MOV         FP, R9 
    /*00015b5c*/ MOV         SL, R1 
    H264E_DRV_UpdatePredModeAdaptive_x15b60:
    /*00015b60*/ BFI         R0, R9, #0, #4 
    /*00015b64*/ BFI         R6, R4, #0, #4 
    /*00015b68*/ BFI         R0, FP, #4, #4 
    /*00015b6c*/ BFI         R6, LR, #4, #4 
    /*00015b70*/ BFI         R0, R1, #8, #4 
    /*00015b74*/ BFI         R8, R7, #0, #4 
    /*00015b78*/ BFI         R0, SL, #12, #4 
    /*00015b7c*/ BFI         R6, IP, #8, #4 
    /*00015b80*/ STR         R0, [R2, #1876]             @ 0x754 
    /*00015b84*/ BFI         R8, R5, #4, #4 
    /*00015b88*/ STR         R6, [R2, #1800]             @ 0x708 
    /*00015b8c*/ MOV         R1, #0 
    /*00015b90*/ STR         R8, [R2, #1864]             @ 0x748 
    /*00015b94*/ STR         R1, [R3, #2192]             @ 0x890 
    /*00015b98*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    H264E_DRV_UpdatePredModeAdaptive_x15b9c:
    /*00015b9c*/ LDR         R4, [R3, #2172]             @ 0x87c 
    /*00015ba0*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x9d0] 
    /*00015ba4*/ LDR         LR, [R3, #2156]             @ 0x86c 
    /*00015ba8*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x9d0] 
    /*00015bac*/ LDR         IP, [R3, #2164]             @ 0x874 
    /*00015bb0*/ LDRB        FP, [R2, #1876]             @ 0x754 
    /*00015bb4*/ ADD         LR, R1, LR, LSL #2 
    /*00015bb8*/ LDRB        SL, [R2, #1877]             @ 0x755 
    /*00015bbc*/ ADD         IP, R1, IP, LSL #2 
    /*00015bc0*/ ADD         R1, R1, R4, LSL #2 
    /*00015bc4*/ LDR         R4, [LR, #352]              @ 0x160 
    /*00015bc8*/ AND         R9, FP, #15 
    /*00015bcc*/ LDR         LR, [IP, #352]              @ 0x160 
    /*00015bd0*/ LSR         FP, FP, #4 
    /*00015bd4*/ LDR         IP, [R1, #352]              @ 0x160 
    /*00015bd8*/ AND         R4, R4, #15 
    /*00015bdc*/ AND         R1, SL, #15 
    /*00015be0*/ AND         LR, LR, #15 
    /*00015be4*/ AND         IP, IP, #15 
    /*00015be8*/ LSR         SL, SL, #4 
    /*00015bec*/ B           H264E_DRV_UpdatePredModeAdaptive_x15b60
FUNC_END H264E_DRV_UpdatePredModeAdaptive


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .init.text
@ Size: 0x4
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN h264e_mod_init
    h264e_mod_init_x0:
    /*00000000*/ B           h264e_mod_init_x0           @ H264E_ModInit [R_ARM_JUMP24: .text+0xda14] 
FUNC_END h264e_mod_init


FUNC_BEGIN init_module
    init_module_x0:
    /*00000000*/ B           init_module_x0              @ H264E_ModInit [R_ARM_JUMP24: .text+0xda14] 
FUNC_END init_module


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .exit.text
@ Size: 0x4
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN h264e_mod_exit
    h264e_mod_exit_x0:
    /*00000000*/ B           h264e_mod_exit_x0           @ H264E_ModExit [R_ARM_JUMP24: .text+0xdb80] 
FUNC_END h264e_mod_exit


FUNC_BEGIN cleanup_module
    cleanup_module_x0:
    /*00000000*/ B           cleanup_module_x0           @ H264E_ModExit [R_ARM_JUMP24: .text+0xdb80] 
FUNC_END cleanup_module



@
@ -- FILES --
@

@ rc_ext.c
@ rc_param.c
@ rc.c
@ rc_new_cbr_mode.c
@ rc_drv.c
@ rc_init.c
@ hi3516cv500_rc.mod.c


unsigned char rodata[4376] = {
    /*0000*/ "N\0Y\0",
    /*0004*/ "MEANQP\0MINQP\0\0MAXQP\0",
    /*0018*/ "\0\0\0\0",
    /*001c*/ "\xf0\x11\0\0",
    /*0020*/ "\xf8\x11\0\0",
    /*0024*/ "\0\x12\0\0",
    /*0028*/ "\xf0\x11\0\0",
    /*002c*/ "BITRATE\0",
    /*0034*/ "\0\0FRAMEBITS\0",
    /*0040*/ "NORMAl\0\0",
    /*0048*/ "PSKIP\0\0\0",
    /*0050*/ "NormalP\0",
    /*0058*/ "\0\0DualP\0",
    /*0060*/ "\0\0\0\0",
    /*0064*/ "SmartP\0\0",
    /*006c*/ "\0\0AdvSmartP\0",
    /*0078*/ "Bmode\0\0\0",
    /*0080*/ "\0\0LowdelayB\0",
    /*008c*/ "./decision_exp_modelparam.txt\0\0\0",
    /*00ac*/ "\0\0\0\0",
    /*00b0*/ "\0\0\0\0",
    /*00b4*/ "\0\0\0\0",
    /*00b8*/ "\0\0\0\0",
    /*00bc*/ "\0\0\0\0",
    /*00c0*/ "\0\0\0\0",
    /*00c4*/ "\0\0\0\0",
    /*00c8*/ "\0\0\0\0",
    /*00cc*/ "\0\0\0\0",
    /*00d0*/ "\0\0\0\0",
    /*00d4*/ "\0\0\0\0",
    /*00d8*/ "\0\0\0\0",
    /*00dc*/ "\0\0\0\0",
    /*00e0*/ "\0\0\0\0",
    /*00e4*/ "\0\0\0\0",
    /*00e8*/ "\0\0\0\0",
    /*00ec*/ "\0\0\0\0",
    /*00f0*/ "RcGetIndexFromType\0\0",
    /*0104*/ "RCParamInit\0",
    /*0110*/ "RcParamExit\0",
    /*011c*/ "RcGetFifoVal\0\0\0\0",
    /*012c*/ "RcInitFifo\0\0",
    /*0138*/ "RcCheckChnExist\0",
    /*0148*/ "RcGetRcMode\0",
    /*0154*/ "RcTransAttr\0",
    /*0160*/ "RcRevTransAttr\0\0",
    /*0170*/ "RcTransParam\0\0\0\0",
    /*0180*/ "RC_RevTransParam\0\0\0\0",
    /*0194*/ "RcCheckStaticAttr\0\0\0",
    /*01a8*/ "RcCheckGopAttr\0\0",
    /*01b8*/ "RcCheckFrmrateAttr\0\0",
    /*01cc*/ "RC_CheckCvbrAttr\0\0\0\0",
    /*01e0*/ "RcCheckAttr\0",
    /*01ec*/ "RC_CheckCbrParam\0\0\0\0",
    /*0200*/ "RC_CheckVbrComParm\0\0",
    /*0214*/ "RC_CheckAvbrParm\0\0\0\0",
    /*0228*/ "RC_CheckQvbrParm\0\0\0\0",
    /*023c*/ "RC_CheckCvbrParm\0\0\0\0",
    /*0250*/ "RC_CheckParam\0\0\0",
    /*0260*/ "RcWrFifoElem\0\0\0\0",
    /*0270*/ "RcInitAlgModel\0\0",
    /*0280*/ "MTCH_Init\0\0\0",
    /*028c*/ "RcResetAlgModel\0",
    /*029c*/ "RcWrFifoElemVI\0\0",
    /*02ac*/ "RcInitRunInfo\0\0\0",
    /*02bc*/ "RcInitSuperFrmCfg\0\0\0",
    /*02d0*/ "RcInitSobelCfg\0\0",
    /*02e0*/ "RC_InitStatBuf\0\0",
    /*02f0*/ "RC_CreateChn\0\0\0\0",
    /*0300*/ "RcOutput\0\0\0\0",
    /*030c*/ "RcComputeFrameLosted\0\0\0\0",
    /*0324*/ "RcLostFrmStrDecision\0\0\0\0",
    /*033c*/ "RC_CalHierarchicalQPLevel\0\0\0",
    /*0358*/ "RC_StartOneFrame\0\0\0\0",
    /*036c*/ "RC_StartOneFrame2\0\0\0",
    /*0380*/ "RC_ReadHw\0\0\0",
    /*038c*/ "RC_EndOneFrameNorStatus\0",
    /*03a4*/ "RC_EndOneFrame\0\0",
    /*03b4*/ "Rc_FreeStatFifoBuf\0\0",
    /*03c8*/ "RcAllocStatFifoBuf\0\0",
    /*03dc*/ "RcAllocStatCvbrFifoBuf\0\0",
    /*03f4*/ "Rc_AllocStatFifoBuf\0",
    /*0408*/ "RC_SetAttr\0\0",
    /*0414*/ "RC_GetAttr\0\0",
    /*0420*/ "RC_SetParam\0",
    /*042c*/ "RC_GetParam\0",
    /*0438*/ "RC_RequestIdr\0\0\0",
    /*0448*/ "RcCheckLostFrmParam\0",
    /*045c*/ "RC_SetFrmLostParam\0\0",
    /*0470*/ "RC_GetFrmLostParam\0\0",
    /*0484*/ "RcCheckSuperFrmCfg\0\0",
    /*0498*/ "RC_SetSuperFrmCfg\0\0\0",
    /*04ac*/ "RC_GetSuperFrmCfg\0\0\0",
    /*04c0*/ "RC_SetSobelCfg\0\0",
    /*04d0*/ "RC_GetSobelCfg\0\0",
    /*04e0*/ "RC_EnableIDR\0\0\0\0",
    /*04f0*/ "RC_CheckClrStatAfterSetBr\0\0\0",
    /*050c*/ "RC_SetModParam\0\0",
    /*051c*/ "RcCheckAvdParam\0",
    /*052c*/ "X\0\0\0",
    /*0530*/ "\xc8\0\0\0",
    /*0534*/ "\xbc\x02\0\0",
    /*0538*/ "\xb0\x04\0\0",
    /*053c*/ "\xd0\x07\0\0",
    /*0540*/ "\xa0\x0f\0\0",
    /*0544*/ "@\x1f\0\0",
    /*0548*/ "\x80>\0\0",
    /*054c*/ " N\0\0",
    /*0550*/ " N\0\0",
    /*0554*/ " N\0\0",
    /*0558*/ " N\0\0",
    /*055c*/ "\x12\0\0\0",
    /*0560*/ "\x11\0\0\0",
    /*0564*/ "\x0f\0\0\0",
    /*0568*/ "\x0e\0\0\0",
    /*056c*/ "\r\0\0\0",
    /*0570*/ "\x12\0\0\0",
    /*0574*/ "\n\0\0\0",
    /*0578*/ "\x08\0\0\0",
    /*057c*/ "\n\0\0\0",
    /*0580*/ "\n\0\0\0",
    /*0584*/ "\n\0\0\0",
    /*0588*/ "\n\0\0\0",
    /*058c*/ "\x0f\x0f\x0f\x0f\x0f\x10\x12\x14\x15\x16\x17\x18\x19\x19\x1a\x1b\x1c\x1c\x1d\x1d\x1e\x1e\x1e\x1f\x1f  !!!""""###$$$$$%%%%&&&&&''''''(((()))))))********++++++++,,,,,,,,----RcGetVirInstBits\0\0\0\0",
    /*0600*/ "RcGetInstBits\0\0\0",
    /*0610*/ "\0\0\0\0",
    /*0614*/ "@\xfb\xff\xff4\xfc\xff\xff\xc2\xfc\xff\xff'\xfd\xff\xffu\xfd\xff\xff\xb5\xfd\xff\xff\xeb\xfd\xff\xff\x1a\xfe\xff\xffC\xfe\xff\xffh\xfe\xff\xff\x8a\xfe\xff\xff\xa8\xfe\xff\xff\xc4\xfe\xff\xff\xde\xfe\xff\xff\xf7\xfe\xff\xff\r\xff\xff\xff#\xff\xff\xff7\xff\xff\xffJ\xff\xff\xff\\xff\xff\xffm\xff\xff\xff}\xff\xff\xff\x8d\xff\xff\xff\x9c\xff\xff\xff\xaa\xff\xff\xff\xb8\xff\xff\xff\xc5\xff\xff\xff\xd2\xff\xff\xff\xde\xff\xff\xff\xea\xff\xff\xff\xf5\xff\xff\xff\0\0\0\0",
    /*0694*/ "\n\0\0\0",
    /*0698*/ "\x15\0\0\0",
    /*069c*/ "\x1f\0\0\0",
    /*06a0*/ ")\0\0\0",
    /*06a4*/ "2\0\0\0",
    /*06a8*/ "<\0\0\0",
    /*06ac*/ "E\0\0\0",
    /*06b0*/ "N\0\0\0",
    /*06b4*/ "V\0\0\0",
    /*06b8*/ "_\0\0\0",
    /*06bc*/ "g\0\0\0",
    /*06c0*/ "o\0\0\0",
    /*06c4*/ "w\0\0\0",
    /*06c8*/ "\x7f\0\0\0",
    /*06cc*/ "\x86\0\0\0",
    /*06d0*/ "\x8e\0\0\0",
    /*06d4*/ "\x95\0\0\0",
    /*06d8*/ "\x9c\0\0\0",
    /*06dc*/ "\xa3\0\0\0",
    /*06e0*/ "\xaa\0\0\0",
    /*06e4*/ "\xb1\0\0\0",
    /*06e8*/ "\xb7\0\0\0",
    /*06ec*/ "\xbe\0\0\0",
    /*06f0*/ "\xc4\0\0\0",
    /*06f4*/ "\xca\0\0\0",
    /*06f8*/ "\xd0\0\0\0",
    /*06fc*/ "\xd6\0\0\0",
    /*0700*/ "\xdc\0\0\0",
    /*0704*/ "\xe2\0\0\0",
    /*0708*/ "\xe8\0\0\0",
    /*070c*/ "\xed\0\0\0",
    /*0710*/ "RCDecisionInitFrmBits\0\0\0",
    /*0728*/ "RCDecisionUpdateFrmBits\0",
    /*0740*/ "RCDecisionAllocteFrmBits\0\0\0\0",
    /*075c*/ "\0\0\x01\x01\x01\x02\x02\x02\x03\x03\x04\x04\x04\x05\x05\x05\x06\x06\x06\x07\x07\x07\x08\x08\x08\t\t\t\n\n\n\x0b\x0b\x0c\x0c\x0cRCReEncDecisionCbr\0\0",
    /*0794*/ "ReCalcStartQP\0\0\0",
    /*07a4*/ "RCReEncDecisionVbr\0\0",
    /*07b8*/ "ReCalcStartQPVbr\0\0\0\0",
    /*07cc*/ "RCReEncDecisionMjpeg\0\0\0\0",
    /*07e4*/ "\n\0\0\0",
    /*07e8*/ "\n\0\0\0",
    /*07ec*/ "\n\0\0\0",
    /*07f0*/ "\n\0\0\0",
    /*07f4*/ "\n\0\0\0",
    /*07f8*/ "\n\0\0\0",
    /*07fc*/ "\n\0\0\0",
    /*0800*/ "\n\0\0\0",
    /*0804*/ "\n\0\0\0",
    /*0808*/ "\n\0\0\0",
    /*080c*/ "\n\0\0\0",
    /*0810*/ "\n\0\0\0",
    /*0814*/ "\n\0\0\0",
    /*0818*/ "\n\0\0\0",
    /*081c*/ "\t\0\0\0",
    /*0820*/ "\t\0\0\0",
    /*0824*/ "\x08\0\0\0",
    /*0828*/ "\x08\0\0\0",
    /*082c*/ "\x07\0\0\0",
    /*0830*/ "\x07\0\0\0",
    /*0834*/ "\x06\0\0\0",
    /*0838*/ "\x06\0\0\0",
    /*083c*/ "\x05\0\0\0",
    /*0840*/ "\x05\0\0\0",
    /*0844*/ "\x05\0\0\0",
    /*0848*/ "\x04\0\0\0",
    /*084c*/ "\x04\0\0\0",
    /*0850*/ "\x04\0\0\0",
    /*0854*/ "\x03\0\0\0",
    /*0858*/ "\x03\0\0\0",
    /*085c*/ "\x03\0\0\0",
    /*0860*/ "\x03\0\0\0",
    /*0864*/ "\x03\0\0\0",
    /*0868*/ "\x02\0\0\0",
    /*086c*/ "\x02\0\0\0",
    /*0870*/ "\x02\0\0\0",
    /*0874*/ "\x02\0\0\0",
    /*0878*/ "\x02\0\0\0",
    /*087c*/ "\x02\0\0\0",
    /*0880*/ "\x01\0\0\0",
    /*0884*/ "\x01\0\0\0",
    /*0888*/ "\x01\0\0\0",
    /*088c*/ "\x01\0\0\0",
    /*0890*/ "\x01\0\0\0",
    /*0894*/ "\x01\0\0\0",
    /*0898*/ "\0\0\0\0",
    /*089c*/ "\0\0\0\0",
    /*08a0*/ "\0\0\0\0",
    /*08a4*/ "\0\0\0\0",
    /*08a8*/ "\0\0\0\0",
    /*08ac*/ "\0\0\0\0",
    /*08b0*/ "\0\0\0\0",
    /*08b4*/ "\0\0\0\0",
    /*08b8*/ "\0\0\0\0",
    /*08bc*/ "\0\0\0\0",
    /*08c0*/ "\0\0\0\0",
    /*08c4*/ "\0\0\0\0",
    /*08c8*/ "\0\0\0\0",
    /*08cc*/ "\0\0\0\0",
    /*08d0*/ "\0\0\0\0",
    /*08d4*/ "\0\0\0\0",
    /*08d8*/ "\0\0\0\0",
    /*08dc*/ "\0\0\0\0",
    /*08e0*/ "\0\0\0\0",
    /*08e4*/ "\0\0\0\0",
    /*08e8*/ "\0\0\0\0",
    /*08ec*/ "\0\0\0\0",
    /*08f0*/ "\0\0\0\0",
    /*08f4*/ "\0\0\0\0",
    /*08f8*/ "\0\0\0\0",
    /*08fc*/ "\0\0\0\0",
    /*0900*/ "\0\0\0\0",
    /*0904*/ "\0\0\0\0",
    /*0908*/ "\0\0\0\0",
    /*090c*/ "\0\0\0\0",
    /*0910*/ "\0\0\0\0",
    /*0914*/ "\0\0\0\0",
    /*0918*/ "\x01\0\0\0",
    /*091c*/ "\x01\0\0\0",
    /*0920*/ "\x02\0\0\0",
    /*0924*/ "\x03\0\0\0",
    /*0928*/ "\x04\0\0\0",
    /*092c*/ "\x06\0\0\0",
    /*0930*/ "\x08\0\0\0",
    /*0934*/ "\x08\0\0\0",
    /*0938*/ "\x08\0\0\0",
    /*093c*/ "\t\0\0\0",
    /*0940*/ "\t\0\0\0",
    /*0944*/ "\t\0\0\0",
    /*0948*/ "\n\0\0\0",
    /*094c*/ "\n\0\0\0",
    /*0950*/ "\n\0\0\0",
    /*0954*/ "\x0c\0\0\0",
    /*0958*/ "\r\0\0\0",
    /*095c*/ "\x0e\0\0\0",
    /*0960*/ "\x0f\0\0\0",
    /*0964*/ "\x10\0\0\0",
    /*0968*/ "\x11\0\0\0",
    /*096c*/ "\x12\0\0\0",
    /*0970*/ "\x13\0\0\0",
    /*0974*/ "\x0c\0\0\0",
    /*0978*/ "\r\0\0\0",
    /*097c*/ "\x0e\0\0\0",
    /*0980*/ "\x0f\0\0\0",
    /*0984*/ "\x10\0\0\0",
    /*0988*/ "\x11\0\0\0",
    /*098c*/ "\x12\0\0\0",
    /*0990*/ "\x13\0\0\0",
    /*0994*/ "\x18\0\0\0",
    /*0998*/ "\x18\0\0\0",
    /*099c*/ "\x18\0\0\0",
    /*09a0*/ "\x18\0\0\0",
    /*09a4*/ "\x18\0\0\0",
    /*09a8*/ "\x18\0\0\0",
    /*09ac*/ "\x18\0\0\0",
    /*09b0*/ "\x18\0\0\0",
    /*09b4*/ "\0\0\0\0",
    /*09b8*/ "\xe8\x03\0\0",
    /*09bc*/ "\x15\x05\0\0",
    /*09c0*/ "\xc5\x05\0\0",
    /*09c4*/ "T\x06\0\0",
    /*09c8*/ "\xa3\x06\0\0",
    /*09cc*/ "\xf2\x06\0\0",
    /*09d0*/ "5\x07\0\0",
    /*09d4*/ "o\x07\0\0",
    /*09d8*/ "\xa2\x07\0\0",
    /*09dc*/ "\xd0\x07\0\0",
    /*09e0*/ "\xf9\x07\0\0",
    /*09e4*/ "\x1f\x08\0\0",
    /*09e8*/ "B\x08\0\0",
    /*09ec*/ "b\x08\0\0",
    /*09f0*/ "\x80\x08\0\0",
    /*09f4*/ "\x9c\x08\0\0",
    /*09f8*/ "\xb6\x08\0\0",
    /*09fc*/ "\xcf\x08\0\0",
    /*0a00*/ "\xe7\x08\0\0",
    /*0a04*/ "\xfd\x08\0\0",
    /*0a08*/ "\xfd\x08\0\0",
    /*0a0c*/ "\x08\t\0\0",
    /*0a10*/ "\x12\t\0\0",
    /*0a14*/ "\x1c\t\0\0",
    /*0a18*/ "&\t\0\0",
    /*0a1c*/ "0\t\0\0",
    /*0a20*/ ":\t\0\0",
    /*0a24*/ "C\t\0\0",
    /*0a28*/ "L\t\0\0",
    /*0a2c*/ "U\t\0\0",
    /*0a30*/ "^\t\0\0",
    /*0a34*/ "g\t\0\0",
    /*0a38*/ "o\t\0\0",
    /*0a3c*/ "w\t\0\0",
    /*0a40*/ "\x7f\t\0\0",
    /*0a44*/ "\x87\t\0\0",
    /*0a48*/ "\x8f\t\0\0",
    /*0a4c*/ "\x97\t\0\0",
    /*0a50*/ "\x9e\t\0\0",
    /*0a54*/ "\xa6\t\0\0",
    /*0a58*/ "\xad\t\0\0",
    /*0a5c*/ "\xb4\t\0\0",
    /*0a60*/ "\xbb\t\0\0",
    /*0a64*/ "\xc2\t\0\0",
    /*0a68*/ "\xc9\t\0\0",
    /*0a6c*/ "\xd0\t\0\0",
    /*0a70*/ "\xd7\t\0\0",
    /*0a74*/ "\xdd\t\0\0",
    /*0a78*/ "\xe3\t\0\0",
    /*0a7c*/ "\xe9\t\0\0",
    /*0a80*/ "\xf0\t\0\0",
    /*0a84*/ "\xf6\t\0\0",
    /*0a88*/ "\xfc\t\0\0",
    /*0a8c*/ "\x02\n\0\0",
    /*0a90*/ "\x08\n\0\0",
    /*0a94*/ "\x0e\n\0\0",
    /*0a98*/ "\x14\n\0\0",
    /*0a9c*/ "\x19\n\0\0",
    /*0aa0*/ "\x1f\n\0\0",
    /*0aa4*/ "%\n\0\0",
    /*0aa8*/ "*\n\0\0",
    /*0aac*/ "\0\0\0\0",
    /*0ab0*/ "*\n\0\0",
    /*0ab4*/ "5\n\0\0",
    /*0ab8*/ "?\n\0\0",
    /*0abc*/ "I\n\0\0",
    /*0ac0*/ "S\n\0\0",
    /*0ac4*/ "]\n\0\0",
    /*0ac8*/ "g\n\0\0",
    /*0acc*/ "p\n\0\0",
    /*0ad0*/ "y\n\0\0",
    /*0ad4*/ "\x82\n\0\0",
    /*0ad8*/ "\x8b\n\0\0",
    /*0adc*/ "\x94\n\0\0",
    /*0ae0*/ "\x9c\n\0\0",
    /*0ae4*/ "\xa4\n\0\0",
    /*0ae8*/ "\xac\n\0\0",
    /*0aec*/ "\x96\n\0\0",
    /*0af0*/ "\xbc\n\0\0",
    /*0af4*/ "\xc4\n\0\0",
    /*0af8*/ "\xcb\n\0\0",
    /*0afc*/ "\xd3\n\0\0",
    /*0b00*/ "\xda\n\0\0",
    /*0b04*/ "\xe1\n\0\0",
    /*0b08*/ "\xe8\n\0\0",
    /*0b0c*/ "\xe8\n\0\0",
    /*0b10*/ "\xf6\n\0\0",
    /*0b14*/ "\x04\x0b\0\0",
    /*0b18*/ "\x11\x0b\0\0",
    /*0b1c*/ "\x1d\x0b\0\0",
    /*0b20*/ ")\x0b\0\0",
    /*0b24*/ "5\x0b\0\0",
    /*0b28*/ "A\x0b\0\0",
    /*0b2c*/ "L\x0b\0\0",
    /*0b30*/ "W\x0b\0\0",
    /*0b34*/ "W\x0b\0\0",
    /*0b38*/ "b\x0b\0\0",
    /*0b3c*/ "l\x0b\0\0",
    /*0b40*/ "w\x0b\0\0",
    /*0b44*/ "\x80\x0b\0\0",
    /*0b48*/ "\x8a\x0b\0\0",
    /*0b4c*/ "\x94\x0b\0\0",
    /*0b50*/ "\x9d\x0b\0\0",
    /*0b54*/ "\xa6\x0b\0\0",
    /*0b58*/ "\xaf\x0b\0\0",
    /*0b5c*/ "\xb8\x0b\0\0",
    /*0b60*/ "\xb8\x0b\0\0",
    /*0b64*/ "\xc5\x0b\0\0",
    /*0b68*/ "\xd1\x0b\0\0",
    /*0b6c*/ "\xdd\x0b\0\0",
    /*0b70*/ "\xe9\x0b\0\0",
    /*0b74*/ "\xf5\x0b\0\0",
    /*0b78*/ "\0\x0c\0\0",
    /*0b7c*/ "\n\x0c\0\0",
    /*0b80*/ "\x15\x0c\0\0",
    /*0b84*/ " \x0c\0\0",
    /*0b88*/ " \x0c\0\0",
    /*0b8c*/ "*\x0c\0\0",
    /*0b90*/ "4\x0c\0\0",
    /*0b94*/ ">\x0c\0\0",
    /*0b98*/ "G\x0c\0\0",
    /*0b9c*/ "P\x0c\0\0",
    /*0ba0*/ "Y\x0c\0\0",
    /*0ba4*/ "b\x0c\0\0",
    /*0ba8*/ "k\x0c\0\0",
    /*0bac*/ "t\x0c\0\0",
    /*0bb0*/ "|\x0c\0\0",
    /*0bb4*/ "\x84\x0c\0\0",
    /*0bb8*/ "\x84\x0c\0\0",
    /*0bbc*/ "\x8f\x0c\0\0",
    /*0bc0*/ "\x99\x0c\0\0",
    /*0bc4*/ "\xa4\x0c\0\0",
    /*0bc8*/ "\xae\x0c\0\0",
    /*0bcc*/ "\xb7\x0c\0\0",
    /*0bd0*/ "\xc1\x0c\0\0",
    /*0bd4*/ "\xca\x0c\0\0",
    /*0bd8*/ "\xd3\x0c\0\0",
    /*0bdc*/ "\xdc\x0c\0\0",
    /*0be0*/ "\xe5\x0c\0\0",
    /*0be4*/ "\xe5\x0c\0\0",
    /*0be8*/ "\xf0\x0c\0\0",
    /*0bec*/ "\xfa\x0c\0\0",
    /*0bf0*/ "\xfb\x0c\0\0",
    /*0bf4*/ "\x0e\r\0\0",
    /*0bf8*/ "\x18\r\0\0",
    /*0bfc*/ "!\r\0\0",
    /*0c00*/ "+\r\0\0",
    /*0c04*/ "4\r\0\0",
    /*0c08*/ "=\r\0\0",
    /*0c0c*/ "F\r\0\0",
    /*0c10*/ "F\r\0\0",
    /*0c14*/ "P\r\0\0",
    /*0c18*/ "Z\r\0\0",
    /*0c1c*/ "d\r\0\0",
    /*0c20*/ "n\r\0\0",
    /*0c24*/ "w\r\0\0",
    /*0c28*/ "\x80\r\0\0",
    /*0c2c*/ "\x89\r\0\0",
    /*0c30*/ "\x92\r\0\0",
    /*0c34*/ "\x9b\r\0\0",
    /*0c38*/ "\xa3\r\0\0",
    /*0c3c*/ "\xac\r\0\0",
    /*0c40*/ "\xac\r\0\0",
    /*0c44*/ "\xb6\r\0\0",
    /*0c48*/ "\xc1\r\0\0",
    /*0c4c*/ "\xcb\r\0\0",
    /*0c50*/ "\xd6\r\0\0",
    /*0c54*/ "\xdf\r\0\0",
    /*0c58*/ "\xe9\r\0\0",
    /*0c5c*/ "\xf3\r\0\0",
    /*0c60*/ "\xfc\r\0\0",
    /*0c64*/ "\xe7\r\0\0",
    /*0c68*/ "\x0e\x0e\0\0",
    /*0c6c*/ "\x0f\x0e\0\0",
    /*0c70*/ "\x1b\x0e\0\0",
    /*0c74*/ "%\x0e\0\0",
    /*0c78*/ "/\x0e\0\0",
    /*0c7c*/ "9\x0e\0\0",
    /*0c80*/ "C\x0e\0\0",
    /*0c84*/ "M\x0e\0\0",
    /*0c88*/ "V\x0e\0\0",
    /*0c8c*/ "_\x0e\0\0",
    /*0c90*/ "h\x0e\0\0",
    /*0c94*/ "q\x0e\0\0",
    /*0c98*/ "s\x0e\0\0",
    /*0c9c*/ "~\x0e\0\0",
    /*0ca0*/ "\x89\x0e\0\0",
    /*0ca4*/ "\x94\x0e\0\0",
    /*0ca8*/ "\x9e\x0e\0\0",
    /*0cac*/ "\xa8\x0e\0\0",
    /*0cb0*/ "\xb2\x0e\0\0",
    /*0cb4*/ "\xbc\x0e\0\0",
    /*0cb8*/ "\xc5\x0e\0\0",
    /*0cbc*/ "\xce\x0e\0\0",
    /*0cc0*/ "\xd7\x0e\0\0",
    /*0cc4*/ "\xd8\x0e\0\0",
    /*0cc8*/ "\xe2\x0e\0\0",
    /*0ccc*/ "\xec\x0e\0\0",
    /*0cd0*/ "\xf5\x0e\0\0",
    /*0cd4*/ "\xff\x0e\0\0",
    /*0cd8*/ "\x08\x0f\0\0",
    /*0cdc*/ "\x11\x0f\0\0",
    /*0ce0*/ "\x1a\x0f\0\0",
    /*0ce4*/ "#\x0f\0\0",
    /*0ce8*/ ",\x0f\0\0",
    /*0cec*/ "4\x0f\0\0",
    /*0cf0*/ "<\x0f\0\0",
    /*0cf4*/ "\xfe\xff\xff\xff\xfe\xff\xff\xff\xfe\xff\xff\xff\xfe\xff\xff\xff\xfe\xff\xff\xff\xfe\xff\xff\xff\xfe\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0",
    /*0d34*/ "\0\0\0\0",
    /*0d38*/ "\x01\0\0\0",
    /*0d3c*/ "\x01\0\0\0",
    /*0d40*/ "\x01\0\0\0",
    /*0d44*/ "\x01\0\0\0",
    /*0d48*/ "\x01\0\0\0",
    /*0d4c*/ "\x01\0\0\0",
    /*0d50*/ "\x01\0\0\0",
    /*0d54*/ "\x02\0\0\0",
    /*0d58*/ "\x02\0\0\0",
    /*0d5c*/ "\x02\0\0\0",
    /*0d60*/ "\x02\0\0\0",
    /*0d64*/ "\x02\0\0\0",
    /*0d68*/ "\x02\0\0\0",
    /*0d6c*/ "\x02\0\0\0",
    /*0d70*/ "\x02\0\0\0",
    /*0d74*/ "\xfe\xff\xff\xff\xfe\xff\xff\xff\xfe\xff\xff\xff\xfe\xff\xff\xff\xfe\xff\xff\xff\xfe\xff\xff\xff\xfe\xff\xff\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\0\0\0\0",
    /*0dac*/ "\0\0\0\0",
    /*0db0*/ "\x01\0\0\0",
    /*0db4*/ "\x01\0\0\0",
    /*0db8*/ "\x01\0\0\0",
    /*0dbc*/ "\x01\0\0\0",
    /*0dc0*/ "\x01\0\0\0",
    /*0dc4*/ "\x01\0\0\0",
    /*0dc8*/ "\x01\0\0\0",
    /*0dcc*/ "\x01\0\0\0",
    /*0dd0*/ "\x01\0\0\0",
    /*0dd4*/ "\x02\0\0\0",
    /*0dd8*/ "\x02\0\0\0",
    /*0ddc*/ "\x02\0\0\0",
    /*0de0*/ "\x02\0\0\0",
    /*0de4*/ "\x02\0\0\0",
    /*0de8*/ "\x02\0\0\0",
    /*0dec*/ "\x02\0\0\0",
    /*0df0*/ "\x02\0\0\0",
    /*0df4*/ "RcDrv_HEVC_SetRc\0\0\0\0",
    /*0e08*/ "RC_DRV_InitParam\0\0\0\0",
    /*0e1c*/ "RC_DRV_CheckFirstFrmQp\0\0",
    /*0e34*/ "RC_DRV_CheckQpmap\0\0\0",
    /*0e48*/ "RC_DRV_CheckBitRate\0",
    /*0e5c*/ "\x0e\0\0\0",
    /*0e60*/ "\x0f\0\0\0",
    /*0e64*/ "\x10\0\0\0",
    /*0e68*/ "\x12\0\0\0",
    /*0e6c*/ "\x14\0\0\0",
    /*0e70*/ "\x16\0\0\0",
    /*0e74*/ "\x19\0\0\0",
    /*0e78*/ "\x1c\0\0\0",
    /*0e7c*/ " \0\0\0",
    /*0e80*/ "$\0\0\0",
    /*0e84*/ "(\0\0\0",
    /*0e88*/ ",\0\0\0",
    /*0e8c*/ "2\0\0\0",
    /*0e90*/ "8\0\0\0",
    /*0e94*/ "@\0\0\0",
    /*0e98*/ "H\0\0\0",
    /*0e9c*/ "c\0\0\0",
    /*0ea0*/ "c\0\0\0",
    /*0ea4*/ "c\0\0\0",
    /*0ea8*/ "c\0\0\0",
    /*0eac*/ "c\0\0\0",
    /*0eb0*/ "c\0\0\0",
    /*0eb4*/ "c\0\0\0",
    /*0eb8*/ "c\0\0\0",
    /*0ebc*/ "c\0\0\0",
    /*0ec0*/ "c\0\0\0",
    /*0ec4*/ "c\0\0\0",
    /*0ec8*/ "_\0\0\0",
    /*0ecc*/ "Z\0\0\0",
    /*0ed0*/ "U\0\0\0",
    /*0ed4*/ "P\0\0\0",
    /*0ed8*/ "K\0\0\0",
    /*0edc*/ "H\0\0\0",
    /*0ee0*/ "E\0\0\0",
    /*0ee4*/ "B\0\0\0",
    /*0ee8*/ "@\0\0\0",
    /*0eec*/ ">\0\0\0",
    /*0ef0*/ "<\0\0\0",
    /*0ef4*/ ":\0\0\0",
    /*0ef8*/ "9\0\0\0",
    /*0efc*/ "8\0\0\0",
    /*0f00*/ "7\0\0\0",
    /*0f04*/ "6\0\0\0",
    /*0f08*/ "5\0\0\0",
    /*0f0c*/ "4\0\0\0",
    /*0f10*/ "3\0\0\0",
    /*0f14*/ "2\0\0\0",
    /*0f18*/ "1\0\0\0",
    /*0f1c*/ "0\0\0\0",
    /*0f20*/ "/\0\0\0",
    /*0f24*/ "/\0\0\0",
    /*0f28*/ ".\0\0\0",
    /*0f2c*/ ".\0\0\0",
    /*0f30*/ "-\0\0\0",
    /*0f34*/ "-\0\0\0",
    /*0f38*/ ",\0\0\0",
    /*0f3c*/ ",\0\0\0",
    /*0f40*/ "+\0\0\0",
    /*0f44*/ "+\0\0\0",
    /*0f48*/ "+\0\0\0",
    /*0f4c*/ "*\0\0\0",
    /*0f50*/ "*\0\0\0",
    /*0f54*/ "*\0\0\0",
    /*0f58*/ ")\0\0\0",
    /*0f5c*/ ")\0\0\0",
    /*0f60*/ ")\0\0\0",
    /*0f64*/ "(\0\0\0",
    /*0f68*/ "(\0\0\0",
    /*0f6c*/ "(\0\0\0",
    /*0f70*/ "'\0\0\0",
    /*0f74*/ "'\0\0\0",
    /*0f78*/ "'\0\0\0",
    /*0f7c*/ "&\0\0\0",
    /*0f80*/ "&\0\0\0",
    /*0f84*/ "&\0\0\0",
    /*0f88*/ "%\0\0\0",
    /*0f8c*/ "%\0\0\0",
    /*0f90*/ "%\0\0\0",
    /*0f94*/ "%\0\0\0",
    /*0f98*/ "%\0\0\0",
    /*0f9c*/ "%\0\0\0",
    /*0fa0*/ "%\0\0\0",
    /*0fa4*/ "$\0\0\0",
    /*0fa8*/ "$\0\0\0",
    /*0fac*/ "$\0\0\0",
    /*0fb0*/ "$\0\0\0",
    /*0fb4*/ "$\0\0\0",
    /*0fb8*/ "$\0\0\0",
    /*0fbc*/ "$\0\0\0",
    /*0fc0*/ "#\0\0\0",
    /*0fc4*/ "#\0\0\0",
    /*0fc8*/ "#\0\0\0",
    /*0fcc*/ ""\0\0\0",
    /*0fd0*/ ""\0\0\0",
    /*0fd4*/ ""\0\0\0",
    /*0fd8*/ ""\0\0\0",
    /*0fdc*/ ""\0\0\0",
    /*0fe0*/ "!\0\0\0",
    /*0fe4*/ "!\0\0\0",
    /*0fe8*/ "!\0\0\0",
    /*0fec*/ "!\0\0\0",
    /*0ff0*/ "!\0\0\0",
    /*0ff4*/ "!\0\0\0",
    /*0ff8*/ "!\0\0\0",
    /*0ffc*/ "!\0\0\0",
    /*1000*/ "!\0\0\0",
    /*1004*/ " \0\0\0",
    /*1008*/ " \0\0\0",
    /*100c*/ " \0\0\0",
    /*1010*/ " \0\0\0",
    /*1014*/ " \0\0\0",
    /*1018*/ " \0\0\0",
    /*101c*/ " \0\0\0",
    /*1020*/ " \0\0\0",
    /*1024*/ " \0\0\0",
    /*1028*/ " \0\0\0",
    /*102c*/ "\x06\x07\x08\t\n\x0b\r\x0e\x10\x12\x14\x16\x19\x1c $\x05\x05\x1c(29@FLQUY\_acd\0\0\0",
    /*1050*/ "0/.-,+*)('&&%%$$$###"!   \x1e\x1e\x1e\x1d\x1d\x1d\x1d\x1d\x1c\x1c\x1c\x1c\x1b\x1b\x1b\x1b\x1b\x1a\x1a\x1a\x1a\x1a\x1a\x19\x19\x19\x19\x19\x18\x18\x18\x18\x17\x17\x17\x16\x16\x15\x15\x14\x14\x13\x13\x12\x12\x11\x11\x10\x10\x0f\x0f\x0e\x0e\r\r\x0c\x0c\x0b\x0b\n\t\x08\x07\x06\x05\x04\x03\x02\x01\0\0",
    /*10b0*/ "\0\0\0\0",
    /*10b4*/ "0/.-,+*)('&&%%$$$###"""!!!!!       \x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1f\x1e\x1e\x1e\x1e\x1e\x1d\x1d\x1d\x1c\x1c\x1c\x1b\x1b\x1b\x1b\x1a\x1a\x1a\x19\x19\x18\x18\x17\x17\x16\x16\x15\x15\x14\x14\x13\x12\x11\x10\x0f\x0e\r\x0c\x0b\n\n\n\n\t\t\t\t\x08\x07\x06\x05\x04\x03\x02\x01"
};

unsigned char rel.rodata[32] = {
    /*0000*/ "\x1c\0\0\0",
    /*0004*/ "\x02\x06\0\0",
    /*0008*/ " \0\0\0",
    /*000c*/ "\x02\x06\0\0",
    /*0010*/ "$\0\0\0",
    /*0014*/ "\x02\x06\0\0",
    /*0018*/ "(\0\0\0",
    /*001c*/ "\x02\x06\0\0",
    /*0020*/ ""
};

unsigned char rodata.str1.4[14306] = {
    /*0000*/ "\n-----RC DeBreathEffect INFO-----------------------------------------------------------------\n\0\0",
    /*0060*/ "bEnable\0",
    /*0068*/ "ChnId\0\0\0",
    /*0070*/ "%7s%10s%10s%10s%18s\n\0\0\0\0",
    /*0088*/ "DeBrthEfctCnt\0\0\0",
    /*0098*/ "Strength1\0\0\0",
    /*00a4*/ "Strength0\0\0\0",
    /*00b0*/ "%7d%10s%10d%10d%18u\n\0\0\0\0",
    /*00c8*/ "%7d%10s%10s%10s%18u\n\0\0\0\0",
    /*00e0*/ "N/A\0",
    /*00e4*/ "\n-----RC HierarchicalQp INFO-----------------------------------------------------------------\n\0\0",
    /*0144*/ "%7s%10s%12s%12s%12s%12s%12s%12s%12s%12s\n\0\0\0\0",
    /*0170*/ "QpDelta[3]\0\0",
    /*017c*/ "QpDelta[2]\0\0",
    /*0188*/ "QpDelta[1]\0\0",
    /*0194*/ "QpDelta[0]\0\0",
    /*01a0*/ "FrameNum[3]\0",
    /*01ac*/ "FrameNum[2]\0",
    /*01b8*/ "FrameNum[1]\0",
    /*01c4*/ "FrameNum[0]\0",
    /*01d0*/ "%7d%10s%12d%12d%12d%12d%12d%12d%12d%12d\n\0\0\0\0",
    /*01fc*/ "\n------BASE PARAMS 1------------------------------------------------------------\n\0\0\0",
    /*0250*/ "Gop\0",
    /*0254*/ "%7s%7s%8s%6s%12s%8s%8s%10s%8s%5s%5s%5s \n\0\0\0\0",
    /*0280*/ "BQp\0",
    /*0284*/ "PQp\0",
    /*0288*/ "IQp\0",
    /*028c*/ "FluLev\0\0",
    /*0294*/ "Br(kbps)\0\0\0\0",
    /*02a0*/ "RcMode\0\0",
    /*02a8*/ "ProType\0",
    /*02b0*/ "TrgFr\0\0\0",
    /*02b8*/ "ViFr\0\0\0\0",
    /*02c0*/ "StatTm\0\0",
    /*02c8*/ "%d/%d\0\0\0",
    /*02d0*/ "%d\0\0",
    /*02d4*/ "%7d%7u%8u%6u%12s%8d%8s%10u%8u%5s%5s%5s\n\0",
    /*02fc*/ "CBR\0",
    /*0300*/ "%7d%7u%8u%6u%12s%8d%8s%10s%8s%5u%5u%5u\n\0",
    /*0328*/ "FIXQP\0\0\0",
    /*0330*/ "%7d%7u%8u%6u%12s%8d%8s%10u%8s%5s%5s%5s\n\0",
    /*0358*/ "VBR\0",
    /*035c*/ "AVBR\0\0\0\0",
    /*0364*/ "QVBR\0\0\0\0",
    /*036c*/ "%7d%7u%8u%6u%12s%8d%8s%10s%8s%5s%5s%5s\n\0",
    /*0394*/ "QPMAP\0\0\0",
    /*039c*/ "CVBR\0\0\0\0",
    /*03a4*/ "\n------BASE PARAMS 2------------------------------------------------------------\n\0\0\0",
    /*03f8*/ "MinQp\0\0\0",
    /*0400*/ "%7s%8s%8s%8s%8s%12s%12s%12s \n\0\0\0",
    /*0420*/ "QpMapMode\0\0\0",
    /*042c*/ "bQpMapEn\0\0\0\0",
    /*0438*/ "EnableIdr\0\0\0",
    /*0444*/ "MaxIQp\0\0",
    /*044c*/ "MinIQp\0\0",
    /*0454*/ "MaxQp\0\0\0",
    /*045c*/ "%7d%8u%8u%8u%8u%12s%12s%12s\n\0\0\0\0",
    /*047c*/ "%7d%8s%8s%8s%8s%12s%12s%12s\n\0\0\0\0",
    /*049c*/ "%7d%8d%8d%8d%8d%12s%12s%12s\n\0\0\0\0",
    /*04bc*/ "Y\0\0\0",
    /*04c0*/ "\n------BASE PARAMS 3------------------------------------------------------------\n\0\0\0",
    /*0514*/ "LongTermStatTime\0\0\0\0",
    /*0528*/ "%7s%20s%20s%20s%20s \n\0\0\0",
    /*0540*/ "LongTermMinBitrate\0\0",
    /*0554*/ "LongTermMaxBitrate\0\0",
    /*0568*/ "ShortTermStatTime\0\0\0",
    /*057c*/ "%7d%20d%20d%20d%20d\n\0\0\0\0",
    /*0594*/ "\n-----RUN COMM PARAM 1----------------------------------------------------------\n\0\0\0",
    /*05e8*/ "RowQpDelta\0\0",
    /*05f4*/ "%7s%12s%32s\n\0\0\0\0",
    /*0604*/ "ThrdI(16)\0\0\0",
    /*0610*/ "%7d%12u%s\0\0\0",
    /*061c*/ "  [\0",
    /*0620*/ " %3u\0\0\0\0",
    /*0628*/ "]\0\0\0",
    /*062c*/ "%s\n\0",
    /*0630*/ "\n-----RUN COMM PARAM 2------------------------------------------------------------\n\0",
    /*0684*/ "FirstFrmStartQP\0",
    /*0694*/ "%7s%17s%27s\n\0\0\0\0",
    /*06a4*/ "ThrdP(16)\0\0\0",
    /*06b0*/ "%7d%12d%s\0\0\0",
    /*06bc*/ "\n-----RUN COMM PARAM 3----------------------------------------------------------\n\0\0\0",
    /*0710*/ "DirectionThrd\0\0\0",
    /*0720*/ "%7s%15s%32s\n\0\0\0\0",
    /*0730*/ "ThrdB(16)\0\0\0",
    /*073c*/ "\n-----RUN COMM PARAM 4----------------------------------------------------------\n\0\0\0",
    /*0790*/ "bLost\0\0\0",
    /*0798*/ "%7s%8s%12s%12s%10s%12s%12s%12s%12s%12s%12s\n\0",
    /*07c4*/ "bClrStat\0\0\0\0",
    /*07d0*/ "SprBFrm\0",
    /*07d8*/ "SprPFrm\0",
    /*07e0*/ "SprIFrm\0",
    /*07e8*/ "SprFrmMod\0\0\0",
    /*07f4*/ "RCPriority\0\0",
    /*0800*/ "EncGap\0\0",
    /*0808*/ "LostFrmStr\0\0",
    /*0814*/ "LostThr\0",
    /*081c*/ "%7d%8s%12u%12s%10u%12s%12s%12u%12u%12u%12u\n\0",
    /*0848*/ "\n-----RUN COMM PARAM 5----------------------------------------------------------\n\0\0\0",
    /*089c*/ "bDetectSceneChange\0\0",
    /*08b0*/ "%7s%25s%25s\n\0\0\0\0",
    /*08c0*/ "bAdapInsertIFrame\0\0\0",
    /*08d4*/ "%7d%25s%25s\n\0\0\0\0",
    /*08e4*/ "\n-----Foreground INFO 1----------------------------------------------------------\n\0\0",
    /*0938*/ "bThrdEn\0",
    /*0940*/ "%7s%12s%15s%35s\n\0\0\0\0",
    /*0954*/ "%7d%12u%12u%s\0\0\0",
    /*0964*/ " %3d\0\0\0\0",
    /*096c*/ "\n-----Foreground INFO 2----------------------------------------------------------\n\0\0",
    /*09c0*/ "ThreshGain\0\0",
    /*09cc*/ "ThreshOffset\0\0\0\0",
    /*09dc*/ "\n-----GOP MODE ATTR-------------------------------------------------------------\n\0\0\0",
    /*0a30*/ "GopMode\0",
    /*0a38*/ "%7s%10s%10s%12s%10s%10s%10s%12s%10s\n\0\0\0\0",
    /*0a60*/ "ViQpDelta\0\0\0",
    /*0a6c*/ "BgInterval\0\0",
    /*0a78*/ "BQpDelta\0\0\0\0",
    /*0a84*/ "BFrmNum\0",
    /*0a8c*/ "SPQpDelta\0\0\0",
    /*0a98*/ "SPInterval\0\0",
    /*0aa4*/ "IpQpDelta\0\0\0",
    /*0ab0*/ "%7d%10s%10d%12s%10s%10s%10s%12s%10s\n\0\0\0\0",
    /*0ad8*/ "%7d%10s%10d%12u%10d%10s%10s%12s%10s\n\0\0\0\0",
    /*0b00*/ "%7d%10s%10d%12s%10s%10s%10s%12u%10d\n\0\0\0\0",
    /*0b28*/ "%7d%10s%10d%12s%10s%10u%10d%12s%10s\n\0\0\0\0",
    /*0b50*/ "%7d%10s%10s%12s%10s%10s%10s%12s%10s\n\0\0\0\0",
    /*0b78*/ "\n-----RUN CBR PARAM ------------------------------------------------------------\n\0\0\0",
    /*0bcc*/ "MinIprop\0\0\0\0",
    /*0bd8*/ "%7s%10s%10s%8s%8s%8s%8s%8s%15s\n\0",
    /*0bf8*/ "MaxReEncTimes\0\0\0",
    /*0c08*/ "QLevel\0\0",
    /*0c10*/ "MaxIprop\0\0\0\0",
    /*0c1c*/ "%7d%10u%10u%8u%8u%8u%8u%8d%15d\n\0",
    /*0c3c*/ "\n-----RUN VBR COMM PARAM ------------------------------------------------------------\n\0\0",
    /*0c94*/ "ChgPs\0\0\0",
    /*0c9c*/ "%7s%8s%10s%10s%8s%8s%8s%8s%15s\n\0",
    /*0cbc*/ "%7d%8d%10u%10u%8u%8u%8u%8u%15d\n\0",
    /*0cdc*/ "\n-----RUN AVBR PARAM ------------------------------------------------------------\n\0\0",
    /*0d30*/ "MaxStillQP\0\0",
    /*0d3c*/ "%7s%15s%15s%15s%15s%15s\n\0\0\0\0",
    /*0d58*/ "MinQpDelta\0\0",
    /*0d64*/ "MinStillPSNR\0\0\0\0",
    /*0d74*/ "MinPercent\0\0",
    /*0d80*/ "MotionSensi\0",
    /*0d8c*/ "%7d%15u%15u%15d%15u%15u\n\0\0\0\0",
    /*0da8*/ "\n-----RUN QVBR PARAM ------------------------------------------------------------\n\0\0",
    /*0dfc*/ "BitPercentLL\0\0\0\0",
    /*0e0c*/ "%7s%15s%15s%18s%18s\n\0\0\0\0",
    /*0e24*/ "PsnrFluctuateUL\0",
    /*0e34*/ "PsnrFluctuateLL\0",
    /*0e44*/ "BitPercentUL\0\0\0\0",
    /*0e54*/ "%7d%15d%15d%18d%18d\n\0\0\0\0",
    /*0e6c*/ "\n-----RUN CVBR PARAM ------------------------------------------------------------\n\0\0",
    /*0ec0*/ "%7s%15s%15s%20s%25s\n\0\0\0\0",
    /*0ed8*/ "LongTermStatTimeUnit\0\0\0\0",
    /*0ef0*/ "ExBitPercent\0\0\0\0",
    /*0f00*/ "MaxQpDelta\0\0",
    /*0f0c*/ "%7d%15u%15u%15u%20u\n\0\0\0\0",
    /*0f24*/ "\n-----RUN INFO1-----------------------------------------------------------------\n\0\0\0",
    /*0f78*/ "InsBr(kbps)\0",
    /*0f84*/ "%7s%14s%8s%8s%12s%12s%10s%12s%10s%8s%8s\n\0\0\0\0",
    /*0fb0*/ "StartQp\0",
    /*0fb8*/ "TarPercent\0\0",
    /*0fc4*/ "IPRatio\0",
    /*0fcc*/ "RealBt(kb)\0\0",
    /*0fd8*/ "CfgBt(kb)\0\0\0",
    /*0fe4*/ "WatL\0\0\0\0",
    /*0fec*/ "InsFr\0\0\0",
    /*0ff4*/ "%7d%14llu%8u%8d%12u%12u%10d%12d%10u%8u%8u\n\0\0",
    /*1020*/ "%7d%14llu%8u%8d%12u%12u%10d%12s%10u%8u%8u\n\0\0",
    /*104c*/ "\n-----RC PERFORMANCE  INFO------------------------------------------------------\n\0\0\0",
    /*10a0*/ "StaOfstaTim\0",
    /*10ac*/ "%7s%18s%18s%18s%18s%18s\n\0\0\0\0",
    /*10c8*/ "TotalTime\0\0\0",
    /*10d4*/ "TotaOfEndTim\0\0\0\0",
    /*10e4*/ "StaOfEndTim\0",
    /*10f0*/ "TotaOfstaTim\0\0\0\0",
    /*1100*/ "%7d%18llu%18llu%18llu%18llu%18llu\n\0\0",
    /*1124*/ "\n[RC] Version: [Hi3516CV500_MPP_V2.0.1.0 B090 Release], Build Time[Jan 14 2019, 20:23:45]\n\n\0",
    /*1180*/ "rc\0\0",
    /*1184*/ "load rc.ko fail!\n\0\0\0",
    /*1198*/ "load rc.ko fail !\n\0\0",
    /*11ac*/ "Hi3516CV500\0",
    /*11b8*/ "load rc.ko for %s...OK!\n\0\0\0\0",
    /*11d4*/ "unload rc.ko for %s...OK!\n\0\0",
    /*11f0*/ "None\0\0\0\0",
    /*11f8*/ "Lost\0\0\0\0",
    /*1200*/ "ReEncode\0\0\0\0",
    /*120c*/ "[Func]:%s [Line]:%d [Info]:enType %d for index err. \n\0\0\0",
    /*1244*/ "RC config file name null. \n\0",
    /*1260*/ "[Func]:%s [Line]:%d [Info]:Rc param has been initialized. \n\0",
    /*129c*/ "[Func]:%s [Line]:%d [Info]:param load sucessful\n\0\0\0\0",
    /*12d0*/ "Rc mode has not been loaded. \n\0\0",
    /*12f0*/ "[Func]:%s [Line]:%d [Info]:Rc mode has not been loaded. \n\0\0\0",
    /*132c*/ "param release succesul\n\0",
    /*1344*/ "pstQue != HI_NULL\0\0\0",
    /*1358*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*1398*/ "chn id %d err\n\0\0",
    /*13a8*/ "RC NULL PTR\n\0\0\0\0",
    /*13b8*/ "[Func]:%s [Line]:%d [Info]:Rc chn(%d) not exist!\n\0\0\0",
    /*13ec*/ "HI_NULL != pstRcAttr\0\0\0\0",
    /*1404*/ "[Func]:%s [Line]:%d [Info]:mode: %d err. \n\0\0",
    /*1430*/ "[Func]:%s [Line]:%d [Info]:type %d, mode: %derr. \n\0\0",
    /*1464*/ "RC Mode %d err\n\0",
    /*1474*/ "[Func]:%s [Line]:%d [Info]:venc gop mode %d err, should be in [%d %d]\0\0\0",
    /*14bc*/ "[Func]:%s [Line]:%d [Info]:venc rc mode %d err, should be in [%d %d]\0\0\0\0",
    /*1504*/ "[Func]:%s [Line]:%d [Info]:Chn type isn't be allowed to set. \n\0\0",
    /*1544*/ "[Func]:%s [Line]:%d [Info]:Now RcMod is %d,Input RcMod is %d,QPMAP can't be changed to other mode,and other mode can't be changed to QPMAP\n\0",
    /*15d0*/ "[Func]:%s [Line]:%d [Info]: IPQPdelta set %d error for out of [%d %d]\n\0\0",
    /*1618*/ "[Func]:%s [Line]:%d [Info]:BG interval %d err,shoule be no less than gop:%u. \n\0\0",
    /*1668*/ "[Func]:%s [Line]:%d [Info]:BG interval %d err,shoule be the multiple of gop:%u. \n\0\0\0",
    /*16bc*/ "[Func]:%s [Line]:%d [Info]:u32BgInterval %d err,shoule be in [%d %d]. \n\0",
    /*1704*/ "[Func]:%s [Line]:%d [Info]: viQPdelta set %d error for out of [%d %d]\n\0\0",
    /*174c*/ "[Func]:%s [Line]:%d [Info]: BQPdelta set %d error for out of [%d %d]\n\0\0\0",
    /*1794*/ "[Func]:%s [Line]:%d [Info]: u32BFrmNum set %d error ,should be [1,3]\n\0\0\0",
    /*17dc*/ "[Func]:%s [Line]:%d [Info]: u32SPInterval set %d error,should less than gop:%d\n\0",
    /*182c*/ "[Func]:%s [Line]:%d [Info]: SPQPdelta set %d error for out of [%d %d]\n\0\0",
    /*1874*/ "[Func]:%s [Line]:%d [Info]: u32SPInterval set %d error,should be 0 or less than gop:%d but not equal to 1\n\0\0",
    /*18e0*/ "[Func]:%s [Line]:%d [Info]:target frame rate set error for out of [%d, %d]\n\0",
    /*192c*/ "[Func]:%s [Line]:%d [Info]:fraction target frame rate set error for out of [1/%d, %d]\n\0\0",
    /*1984*/ "[Func]:%s [Line]:%d [Info]:target frame rate:%d should less than SrcFrmRate:%d\n\0",
    /*19d4*/ "[Func]:%s [Line]:%d [Info]:The denominator is less than or equal to %d, and the numerator is less than or equal to the denominator multiplied by %d\n\0\0\0\0",
    /*1a6c*/ "[Func]:%s [Line]:%d [Info]: u32ShortTermStatTime set %d error for out of [%d %d]\n\0\0\0",
    /*1ac0*/ "[Func]:%s [Line]:%d [Info]: u32LongTermStatTime set %d error for out of [%d %d]\n\0\0\0\0",
    /*1b14*/ "[Func]:%s [Line]:%d [Info]: u32LongTermMaxBitrate set %d error for out of [%d %d]\n\0\0",
    /*1b68*/ "[Func]:%s [Line]:%d [Info]: u32LongTermMinBitrate set %d error for out of [%d %d]\n\0\0",
    /*1bbc*/ "[Func]:%s [Line]:%d [Info]:enType %d isn't supported. \n\0",
    /*1bf4*/ "[Func]:%s [Line]:%d [Info]:gop %d err,shoule be in [%d %d]. \n\0\0\0",
    /*1c34*/ "[Func]:%s [Line]:%d [Info]:stat time %d err, should be in [%d, %d]. \n\0\0\0",
    /*1c7c*/ "[Func]:%s [Line]:%d [Info]:Src frame rate %d err,shoule be in [%d %d]. \n\0\0\0\0",
    /*1cc8*/ "[Func]:%s [Line]:%d [Info]:RC check framerate err.\n\0",
    /*1cfc*/ "[Func]:%s [Line]:%d [Info]:RC check gop attr err.\n\0\0",
    /*1d30*/ "[Func]:%s [Line]:%d [Info]:fixqp I set %d error for out of [%d,%d]\n\0",
    /*1d74*/ "[Func]:%s [Line]:%d [Info]:fixqp P set error %d for out of [%d,%d]\n\0",
    /*1db8*/ "[Func]:%s [Line]:%d [Info]:fixqp B set error %d for out of [%d,%d]\n\0",
    /*1dfc*/ "[Func]:%s [Line]:%d [Info]:rc Qpmap mode is not supported\n\0\0",
    /*1e38*/ "[Func]:%s [Line]:%d [Info]:Qpmap enQpMapMode set %d error for out of [%d,%d]\n\0\0\0",
    /*1e88*/ "[Func]:%s [Line]:%d [Info]:RC mode error! Only support CBR/AVBR/VBR/FIXQP/QPMAP. \n\0\0",
    /*1edc*/ "[Func]:%s [Line]:%d [Info]:enTYpe error in RcCheckParam\n\0\0\0\0",
    /*1f18*/ "[Func]:%s [Line]:%d [Info]: MaxQp set %d error for out of [%d %d]\n\0\0",
    /*1f5c*/ "[Func]:%s [Line]:%d [Info]: MinQp set %d error for out of [%d %d]\n\0\0",
    /*1fa0*/ "[Func]:%s [Line]:%d [Info]: MaxIQp set %d error for out of [%d %d]\n\0",
    /*1fe4*/ "[Func]:%s [Line]:%d [Info]: MinIQp set %d error for out of [%d %d]\n\0",
    /*2028*/ "[Func]:%s [Line]:%d [Info]:min prop set %d error for out of [%d %d]\n\0\0\0\0",
    /*2070*/ "[Func]:%s [Line]:%d [Info]:max prop set %d error for out of [%d %d]\n\0\0\0\0",
    /*20b8*/ "[Func]:%s [Line]:%d [Info]:quality level set %d error for out of [%d %d]\n\0\0\0",
    /*2104*/ "[Func]:%s [Line]:%d [Info]:max re-encode times set %d error for out of [%d %d]\n\0",
    /*2154*/ "[Func]:%s [Line]:%d [Info]:ChangePos set %d error for out of [50 100]\n\0\0",
    /*219c*/ "[Func]:%s [Line]:%d [Info]:min I prop set %d error for out of [%d %d]\n\0\0",
    /*21e4*/ "[Func]:%s [Line]:%d [Info]:max I prop set %d error for out of [%d %d]\n\0\0",
    /*222c*/ "[Func]:%s [Line]:%d [Info]: u32MaxStillQP set %d error for out of [%d %d]\n\0\0",
    /*2278*/ "[Func]:%s [Line]:%d [Info]:MinStillPercent set %d error for out of [%d, %d]\n\0\0\0\0",
    /*22c8*/ "[Func]:%s [Line]:%d [Info]:u32MotionSensitivity set %d error for out of [0 100]\n\0\0\0\0",
    /*231c*/ "[Func]:%s [Line]:%d [Info]: s32PsnrFluctuateLL set %d error for out of [%d %d]\n\0",
    /*236c*/ "[Func]:%s [Line]:%d [Info]:s32PsnrFluctuateUL set %d error for out of [%d, %d]\n\0",
    /*23bc*/ "[Func]:%s [Line]:%d [Info]:s32BitPercentLL set %d error for out of [%d, %d]\n\0\0\0\0",
    /*240c*/ "[Func]:%s [Line]:%d [Info]:s32BitPercentUL set %d error for out of [%d, %d]\n\0\0\0\0",
    /*245c*/ "[Func]:%s [Line]:%d [Info]: u32LongTermStatTimeUnit set %u error for out of [%d %d]\n\0\0\0\0",
    /*24b4*/ "[Func]:%s [Line]:%d [Info]:u32ExtraBitPercent set %u error for out of [%d, %d]\n\0",
    /*2504*/ "[Func]:%s [Line]:%d [Info]:venc rc mode %d err, should be in [%d %d]\n\0\0\0",
    /*254c*/ "[Func]:%s [Line]:%d [Info]:rc mode is FIXQP[%d], not support !!\n\0\0\0\0",
    /*2590*/ "[Func]:%s [Line]:%d [Info]:RcTransAttr err !!\n\0\0",
    /*25c0*/ "[Func]:%s [Line]:%d [Info]:Param Thrd set thrd[%d]:%d %d  %d error for out of [0 ,255]\n\0",
    /*2618*/ "[Func]:%s [Line]:%d [Info]:DirectionThrd Thrd:%d error for out of [0 ,%d]\n\0\0",
    /*2664*/ "[Func]:%s [Line]:%d [Info]:Param MinQpDelta: %d error for out of [0 ,%d]\n\0\0\0",
    /*26b0*/ "[Func]:%s [Line]:%d [Info]:Param RowQpDelta set %d error for out of [0 ,%d]\n\0\0\0\0",
    /*2700*/ "[Func]:%s [Line]:%d [Info]:Param bDetectSceneChange set %d error,should be HI_FALSE or HI_TRUE\n\0",
    /*2760*/ "[Func]:%s [Line]:%d [Info]:Param bAdaptiveInsertIDRFrame set %d error,should be HI_FALSE or HI_TRUE\n\0\0\0\0",
    /*27c8*/ "[Func]:%s [Line]:%d [Info]:enGopMode is BIPREDB,when enable DetectSceneChange,bAdaptiveInsertIDRFrame should be HI_FALSE\n\0\0\0",
    /*2844*/ "[Func]:%s [Line]:%d [Info]:mode not support Param\n\0\0",
    /*2878*/ "RC_MODE_FIXQP == pstRcAttr->enMode\0\0",
    /*289c*/ "HI_NULL != pstMatch\0",
    /*28b0*/ "!IS_FRACTION32(u32InRate)\0\0\0",
    /*28cc*/ "pstMatch->u32InRate >= pstMatch->u32OutRate\0",
    /*28f8*/ "HI_NULL != pstRunInfo\0\0\0",
    /*2910*/ "HI_NULL != pstSuperFrmCfg\0\0\0",
    /*292c*/ "HI_NULL != pstSobelCfg\0\0",
    /*2944*/ "[Func]:%s [Line]:%d [Info]:malloc Stat buff failed!\n\0\0\0\0",
    /*297c*/ "[Func]:%s [Line]:%d [Info]:malloc CVBR Stat buff failed!\n\0\0\0",
    /*29b8*/ "[Func]:%s [Line]:%d [Info]:The chn %d has been created!\n\0\0\0\0",
    /*29f4*/ "[Func]:%s [Line]:%d [Info]:chn %d trans users attr to interal attr err. \n\0\0\0",
    /*2a40*/ "[Func]:%s [Line]:%d [Info]:chn %d user attr err. \n\0\0",
    /*2a74*/ "[Func]:%s [Line]:%d [Info]:chn %d malloc failed!\n\0\0\0",
    /*2aa8*/ "[Func]:%s [Line]:%d [Info]:When creat Chn %d, Revtrans rc param err. \n\0\0",
    /*2af0*/ "HI_NULL != pstCtx\0\0\0",
    /*2b04*/ "HI_NULL != pstStartOutPut\0\0\0",
    /*2b20*/ "HI_NULL != ps32LostPicNum\0\0\0",
    /*2b3c*/ "HI_NULL != ps32FrameType\0\0\0\0",
    /*2b58*/ "[Func]:%s [Line]:%d [Info]:enGopMode %d not support HierarchicalQP!\n\0\0\0\0",
    /*2ba0*/ "HI_NULL != g_apstRcCtx[RcChn]\0\0\0",
    /*2bc0*/ "HI_NULL != pstStartInput\0\0\0\0",
    /*2bdc*/ "HI_NULL != pstStartOutType\0\0",
    /*2bf8*/ "function: %s, line: %d, enType: %d err. \n\0\0\0",
    /*2c24*/ "0\0\0\0",
    /*2c28*/ "[Func]:%s [Line]:%d [Info]:Clear ReqIDR!! \n\0",
    /*2c54*/ "[Func]:%s [Line]:%d [Info]:Ring DISCARD FRAME!!!!\n\0\0",
    /*2c88*/ "[Func]:%s [Line]:%d [Info]:REENCODE the BG image !!!!!!\n\0\0\0\0",
    /*2cc4*/ "Decompress the BG image err!!!!!!, u8EnCodeState 0x%x. \n\0\0\0\0",
    /*2d00*/ "[Func]:%s [Line]:%d [Info]:Chn %d: VencLowDelay mode bFrameOk is 0. u8EnCodeState 0x%x.\n\0\0\0\0",
    /*2d5c*/ "Chn %d: u8EnCodeState 0x%x. \n\0\0\0",
    /*2d7c*/ "[Func]:%s [Line]:%d [Info]:BG frame can not be discarded!! \n\0\0\0\0",
    /*2dbc*/ "[Func]:%s [Line]:%d [Info]:To Free Null Pointer. \n\0\0",
    /*2df0*/ "[Func]:%s [Line]:%d [Info]:RC %d malloc new bits fifo buffer fail. \n\0\0\0\0",
    /*2e38*/ "[Func]:%s [Line]:%d [Info]:Trans attr err. \n\0\0\0\0",
    /*2e68*/ "[Func]:%s [Line]:%d [Info]:Alloc StatFifoBuf Err. \n\0",
    /*2e9c*/ "[Func]:%s [Line]:%d [Info]:Rc get attr err\n\0",
    /*2ec8*/ "[Func]:%s [Line]:%d [Info]:rc trans param err. \n\0\0\0\0",
    /*2efc*/ "[Func]:%s [Line]:%d [Info]:chn %d :rc mode is %d,which is FIXQP,HI_MPI_VENC_GetRcParam not support !!\n\0\0",
    /*2f64*/ "[Func]:%s [Line]:%d [Info]:REV trans param err. \n\0\0\0",
    /*2f98*/ "HI_NULL != pstFrmLostParam\0\0",
    /*2fb4*/ "[Func]:%s [Line]:%d [Info]:bLostFrmOpen set %d error for out of [HI_FALSE,HI_TRUE]\n\0",
    /*3008*/ "[Func]:%s [Line]:%d [Info]:LostFrmBpsThr set %d error for smaller than %dk\n\0",
    /*3054*/ "[Func]:%s [Line]:%d [Info]:enLostFrmMode(%d)  is not valid,should be in [%d,%d)\n\0\0\0\0",
    /*30a8*/ "[Func]:%s [Line]:%d [Info]:u32EncFrmGaps(%d)  is not valid,should be in [%d,%d]\n\0\0\0\0",
    /*30fc*/ "[Func]:%s [Line]:%d [Info]:venc chn:%d frame lost param err!\n\0\0\0",
    /*313c*/ "[Func]:%s [Line]:%d [Info]:chn %d :rc mode is %d,which is FIXQP or QPMAP, not support !!\n\0\0\0",
    /*3198*/ "[Func]:%s [Line]:%d [Info]:eSuperFrameMode set %d error for out of [%d, %d]\n\0\0\0\0",
    /*31e8*/ "[Func]:%s [Line]:%d [Info]: rc priority mode %d not support !!\n\0",
    /*3228*/ "[Func]:%s [Line]:%d [Info]:venc chn %d rc mode %d not support !!\n\0\0\0",
    /*326c*/ "[Func]:%s [Line]:%d [Info]:venc chn %d rc superfrm mode %d not support !!\n\0\0",
    /*32b8*/ "[Func]:%s [Line]:%d [Info]:venc chn %d type  %d not support !!\n\0",
    /*32f8*/ "[Func]:%s [Line]:%d [Info]:User EnableIDR(%d)  error \n\0\0",
    /*3330*/ "[Func]:%s [Line]:%d [Info]:ModuleParam: ClrStatAfterSetBr(%d) is illegal,should be [0, 1]!\n\0",
    /*338c*/ "[Func]:%s [Line]:%d [Info]:check u32ClrStatAfterSetBr err!\n\0",
    /*33c8*/ "[Func]:%s [Line]:%d [Info]:venc chn %d u32ClearStatAfterSetAttr set %u error for out of [0, 1]\n\0",
    /*3428*/ "pstQue != HI_NULL\0\0\0",
    /*343c*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*347c*/ "[Func]:%s [Line]:%d [Info]:bits fifo is empty. \n\0\0\0\0",
    /*34b0*/ "0\0\0\0",
    /*34b4*/ "[Func]:%s [Line]:%d [Info]:LastFrameType is %d\n\0",
    /*34e4*/ "[Func]:%s [Line]:%d [Info]:Because bitsfifo is empty,Recode failed\n \n\0\0\0",
    /*352c*/ "[Func]:%s [Line]:%d [Info]:bQpMapEn %d changed from HI_TRUE to HI_FALSE. \n\0\0",
    /*3578*/ "-1 != s32Index\0\0",
    /*3588*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*35c8*/ "Rc mode %d err. \n\0\0\0",
    /*35dc*/ "[Func]:%s [Line]:%d [Info]:Rc mode %d err. \n\0\0\0\0",
    /*360c*/ "0\0\0\0",
    /*3610*/ "[Func]:%s [Line]:%d [Info]:s32FirstFrameStartQp set %d error,must be -1 or [%d %d]\n\0",
    /*3664*/ "[Func]:%s [Line]:%d [Info]:bQpMapEn set %d error,must be HI_FALSE or HI_TRUE\n\0\0\0",
    /*36b4*/ "[Func]:%s [Line]:%d [Info]:Adv SmartP Mode don't support Qpmap \n\0\0\0\0",
    /*36f8*/ "[Func]:%s [Line]:%d [Info]:enQpMapMode set %d error,must be in [%d,%d]\n\0",
    /*3740*/ "[Func]:%s [Line]:%d [Info]:not support Qpmap \n\0\0",
    /*3770*/ "[Func]:%s [Line]:%d [Info]:bit rate set %dk error for out of [%dk,%dk]\n\0",
    /*37b8*/ "[Func]:%s [Line]:%d [Info]:Wrong ChipID!\n\0"
};

unsigned char data[232] = {
    /*0000*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x72, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0010*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0020*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0030*/ 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0040*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0050*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0060*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0070*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0080*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0090*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00a0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00c0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00d0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00e0*/ 0x01, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 
};

unsigned char rel.data[352] = {
    /*0000*/ 0x1c, 0x00, 0x00, 0x00, 0x02, 0x79, 0x03, 0x00, 0x20, 0x00, 0x00, 0x00, 0x02, 0x3c, 0x03, 0x00, 
    /*0010*/ 0x2c, 0x00, 0x00, 0x00, 0x02, 0x16, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x02, 0x0d, 0x00, 0x00, 
    /*0020*/ 0x40, 0x00, 0x00, 0x00, 0x02, 0x19, 0x03, 0x00, 0x44, 0x00, 0x00, 0x00, 0x02, 0x0b, 0x03, 0x00, 
    /*0030*/ 0x48, 0x00, 0x00, 0x00, 0x02, 0x09, 0x03, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x02, 0x8f, 0x03, 0x00, 
    /*0040*/ 0x50, 0x00, 0x00, 0x00, 0x02, 0x57, 0x03, 0x00, 0x54, 0x00, 0x00, 0x00, 0x02, 0x89, 0x03, 0x00, 
    /*0050*/ 0x58, 0x00, 0x00, 0x00, 0x02, 0x37, 0x03, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x02, 0x7d, 0x03, 0x00, 
    /*0060*/ 0x60, 0x00, 0x00, 0x00, 0x02, 0x59, 0x03, 0x00, 0x64, 0x00, 0x00, 0x00, 0x02, 0x01, 0x03, 0x00, 
    /*0070*/ 0x68, 0x00, 0x00, 0x00, 0x02, 0x6e, 0x03, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x02, 0x90, 0x03, 0x00, 
    /*0080*/ 0x70, 0x00, 0x00, 0x00, 0x02, 0x2b, 0x03, 0x00, 0x74, 0x00, 0x00, 0x00, 0x02, 0x2a, 0x03, 0x00, 
    /*0090*/ 0x78, 0x00, 0x00, 0x00, 0x02, 0x4b, 0x03, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x02, 0x23, 0x03, 0x00, 
    /*00a0*/ 0x80, 0x00, 0x00, 0x00, 0x02, 0x64, 0x03, 0x00, 0x84, 0x00, 0x00, 0x00, 0x02, 0xfb, 0x02, 0x00, 
    /*00b0*/ 0x88, 0x00, 0x00, 0x00, 0x02, 0x45, 0x03, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x02, 0x55, 0x03, 0x00, 
    /*00c0*/ 0x90, 0x00, 0x00, 0x00, 0x02, 0x0a, 0x03, 0x00, 0x94, 0x00, 0x00, 0x00, 0x02, 0x6b, 0x03, 0x00, 
    /*00d0*/ 0x98, 0x00, 0x00, 0x00, 0x02, 0x73, 0x03, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x02, 0x83, 0x03, 0x00, 
    /*00e0*/ 0xa0, 0x00, 0x00, 0x00, 0x02, 0x69, 0x03, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x02, 0x81, 0x03, 0x00, 
    /*00f0*/ 0xa8, 0x00, 0x00, 0x00, 0x02, 0x9b, 0x03, 0x00, 0xac, 0x00, 0x00, 0x00, 0x02, 0xe6, 0x02, 0x00, 
    /*0100*/ 0xb0, 0x00, 0x00, 0x00, 0x02, 0xff, 0x02, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x02, 0x7e, 0x03, 0x00, 
    /*0110*/ 0xb8, 0x00, 0x00, 0x00, 0x02, 0x31, 0x03, 0x00, 0xbc, 0x00, 0x00, 0x00, 0x02, 0x86, 0x03, 0x00, 
    /*0120*/ 0xc0, 0x00, 0x00, 0x00, 0x02, 0x8c, 0x03, 0x00, 0xc4, 0x00, 0x00, 0x00, 0x02, 0x28, 0x03, 0x00, 
    /*0130*/ 0xc8, 0x00, 0x00, 0x00, 0x02, 0x0d, 0x03, 0x00, 0xcc, 0x00, 0x00, 0x00, 0x02, 0x03, 0x03, 0x00, 
    /*0140*/ 0xd0, 0x00, 0x00, 0x00, 0x02, 0x70, 0x03, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x02, 0x3a, 0x03, 0x00, 
    /*0150*/ 0xd8, 0x00, 0x00, 0x00, 0x02, 0x08, 0x03, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x02, 0x2d, 0x03, 0x00, 
};

unsigned char bss[840];

@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text
@ Size: 0x11e40
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN RC_GetVerMagic
    /*00000000*/ MOVW        R0, #61479                  @ 0xf027 
    /*00000004*/ MOVT        R0, #307                    @ 0x133 
    /*00000008*/ BX          LR 
FUNC_END RC_GetVerMagic


FUNC_BEGIN RC_Init
    /*0000000c*/ PUSH        {R4, R5, R6, LR} 
    /*00000010*/ MOVW        R4, #0                      @ stRcLock [R_ARM_MOVW_ABS_NC: .bss+0x308] 
    /*00000014*/ MOVT        R4, #0                      @ stRcLock [R_ARM_MOVT_ABS: .bss+0x308] 
    /*00000018*/ ADD         R5, R4, #64                 @ 0x40 
    RC_Init_x1c:
    /*0000001c*/ MOV         R0, R4 
    /*00000020*/ ADD         R4, R4, #4 
    /*00000024*/ BL          0x0000000000000024          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*00000028*/ CMP         R4, R5 
    /*0000002c*/ BNE         RC_Init_x1c
    /*00000030*/ MOV         R0, #0 
    /*00000034*/ POP         {R4, R5, R6, PC} 
FUNC_END RC_Init


FUNC_BEGIN RC_Exit
    /*00000038*/ PUSH        {R4, R5, R6, LR} 
    /*0000003c*/ MOVW        R5, #0                      @ stRcLock [R_ARM_MOVW_ABS_NC: .bss+0x308] 
    /*00000040*/ LDR         R6, [PC, #52]               @ 0x000000000000007c 
    /*00000044*/ MOVT        R5, #0                      @ stRcLock [R_ARM_MOVT_ABS: .bss+0x308] 
    /*00000048*/ MOV         R4, #0 
    RC_Exit_x4c:
    /*0000004c*/ LDR         R3, [R6, #4]! 
    /*00000050*/ MOV         R0, R4 
    /*00000054*/ ADD         R4, R4, #1 
    /*00000058*/ CMP         R3, #0 
    /*0000005c*/ BEQ         RC_Exit_x64
    /*00000060*/ BL          0x0000000000000060          @ RC_DestroyChn [R_ARM_CALL: .text+0x5f10] 
    RC_Exit_x64:
    /*00000064*/ MOV         R0, R5 
    /*00000068*/ ADD         R5, R5, #4 
    /*0000006c*/ BL          0x000000000000006C          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00000070*/ CMP         R4, #16 
    /*00000074*/ BNE         RC_Exit_x4c
    /*00000078*/ POP         {R4, R5, R6, PC} 
    /*0000007c*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_apstRcCtx [R_ARM_ABS32: .bss+0x288] 
FUNC_END RC_Exit


FUNC_BEGIN RcProcShowDeBreathEffectProc
    /*00000080*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00000084*/ SUB         SP, SP, #20 
    /*00000088*/ MOV         R7, R0 
    /*0000008c*/ MOVW        R1, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x0] 
    /*00000090*/ LDR         R5, [PC, #244]              @ 0x000000000000018c 
    /*00000094*/ MOVT        R1, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x0] 
    /*00000098*/ BL          0x0000000000000098          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000009c*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x88] 
    /*000000a0*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x98] 
    /*000000a4*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x88] 
    /*000000a8*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x98] 
    /*000000ac*/ STR         R2, [SP, #8] 
    /*000000b0*/ STR         R3, [SP, #4] 
    /*000000b4*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa4] 
    /*000000b8*/ MOV         R0, R7 
    /*000000bc*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa4] 
    /*000000c0*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60] 
    /*000000c4*/ STR         R2, [SP] 
    /*000000c8*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60] 
    /*000000cc*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*000000d0*/ MOVW        R1, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x70] 
    /*000000d4*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*000000d8*/ MOVT        R1, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x70] 
    /*000000dc*/ MOVW        SL, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe0] 
    /*000000e0*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*000000e4*/ MOVW        R8, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc8] 
    /*000000e8*/ ADD         R9, R5, #64                 @ 0x40 
    /*000000ec*/ BL          0x00000000000000EC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000000f0*/ MOVT        SL, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe0] 
    /*000000f4*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*000000f8*/ MOVT        R8, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc8] 
    /*000000fc*/ MOV         R4, #0 
    /*00000100*/ B           RcProcShowDeBreathEffectProc_x138
    RcProcShowDeBreathEffectProc_x104:
    /*00000104*/ LDR         FP, [IP, #1576]             @ 0x628 
    /*00000108*/ ADD         R3, R6, LR, LSL #1 
    /*0000010c*/ MOVW        R1, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb0] 
    /*00000110*/ MOVT        R1, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb0] 
    /*00000114*/ STR         FP, [SP, #8] 
    /*00000118*/ LDR         LR, [IP, #3124]             @ 0xc34 
    /*0000011c*/ STR         LR, [SP, #4] 
    /*00000120*/ LDR         IP, [IP, #3120]             @ 0xc30 
    /*00000124*/ STR         IP, [SP] 
    /*00000128*/ BL          0x0000000000000128          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowDeBreathEffectProc_x12c:
    /*0000012c*/ CMP         R5, R9 
    /*00000130*/ ADD         R4, R4, #1 
    /*00000134*/ BEQ         RcProcShowDeBreathEffectProc_x180
    RcProcShowDeBreathEffectProc_x138:
    /*00000138*/ LDR         IP, [R5, #4]! 
    /*0000013c*/ MOV         R2, R4 
    /*00000140*/ MOV         R3, R6 
    /*00000144*/ MOV         R1, R8 
    /*00000148*/ CMP         IP, #0 
    /*0000014c*/ MOV         R0, R7 
    /*00000150*/ BEQ         RcProcShowDeBreathEffectProc_x12c
    /*00000154*/ LDR         LR, [IP, #3116]             @ 0xc2c 
    /*00000158*/ CMP         LR, #0 
    /*0000015c*/ BNE         RcProcShowDeBreathEffectProc_x104
    /*00000160*/ LDR         IP, [IP, #1576]             @ 0x628 
    /*00000164*/ ADD         R4, R4, #1 
    /*00000168*/ STR         SL, [SP, #4] 
    /*0000016c*/ STR         SL, [SP] 
    /*00000170*/ STR         IP, [SP, #8] 
    /*00000174*/ BL          0x0000000000000174          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000178*/ CMP         R5, R9 
    /*0000017c*/ BNE         RcProcShowDeBreathEffectProc_x138
    RcProcShowDeBreathEffectProc_x180:
    /*00000180*/ MOV         R0, #0 
    /*00000184*/ ADD         SP, SP, #20 
    /*00000188*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000018c*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_apstRcCtx [R_ARM_ABS32: .bss+0x288] 
FUNC_END RcProcShowDeBreathEffectProc


FUNC_BEGIN RcProcShowHierarchicalQpProc
    /*00000190*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00000194*/ SUB         SP, SP, #36                 @ 0x24 
    /*00000198*/ MOV         R7, R0 
    /*0000019c*/ MOVW        R1, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe4] 
    /*000001a0*/ MOVT        R1, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe4] 
    /*000001a4*/ LDR         R4, [PC, #276]              @ 0x00000000000002c0 
    /*000001a8*/ BL          0x00000000000001A8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000001ac*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x170] 
    /*000001b0*/ MOVW        R3, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x17c] 
    /*000001b4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x170] 
    /*000001b8*/ MOVT        R3, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x17c] 
    /*000001bc*/ STR         R2, [SP, #28] 
    /*000001c0*/ STR         R3, [SP, #24] 
    /*000001c4*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x188] 
    /*000001c8*/ MOVW        R3, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x194] 
    /*000001cc*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x188] 
    /*000001d0*/ MOVT        R3, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x194] 
    /*000001d4*/ STR         R2, [SP, #20] 
    /*000001d8*/ STR         R3, [SP, #16] 
    /*000001dc*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a0] 
    /*000001e0*/ MOVW        R3, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ac] 
    /*000001e4*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a0] 
    /*000001e8*/ MOVT        R3, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ac] 
    /*000001ec*/ STR         R2, [SP, #12] 
    /*000001f0*/ STR         R3, [SP, #8] 
    /*000001f4*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b8] 
    /*000001f8*/ MOVW        R3, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c4] 
    /*000001fc*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b8] 
    /*00000200*/ MOVT        R3, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c4] 
    /*00000204*/ STR         R2, [SP, #4] 
    /*00000208*/ STR         R3, [SP] 
    /*0000020c*/ MOV         R0, R7 
    /*00000210*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60] 
    /*00000214*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00000218*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60] 
    /*0000021c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*00000220*/ MOVW        R1, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x144] 
    /*00000224*/ MOVT        R1, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x144] 
    /*00000228*/ BL          0x0000000000000228          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000022c*/ MOVW        R9, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00000230*/ MOVW        R6, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*00000234*/ ADD         R8, R4, #64                 @ 0x40 
    /*00000238*/ MOVT        R9, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*0000023c*/ MOVT        R6, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*00000240*/ MOV         R5, #0 
    RcProcShowHierarchicalQpProc_x244:
    /*00000244*/ LDR         IP, [R4, #4]! 
    /*00000248*/ MOV         R2, R5 
    /*0000024c*/ MOV         R1, R6 
    /*00000250*/ MOV         R0, R7 
    /*00000254*/ CMP         IP, #0 
    /*00000258*/ ADD         R5, R5, #1 
    /*0000025c*/ BEQ         RcProcShowHierarchicalQpProc_x2ac
    /*00000260*/ LDR         LR, [IP, #3200]             @ 0xc80 
    /*00000264*/ LDR         R3, [IP, #3184]             @ 0xc70 
    /*00000268*/ STR         LR, [SP, #28] 
    /*0000026c*/ LDR         LR, [IP, #3196]             @ 0xc7c 
    /*00000270*/ ADD         R3, R9, R3, LSL #1 
    /*00000274*/ STR         LR, [SP, #24] 
    /*00000278*/ LDR         LR, [IP, #3192]             @ 0xc78 
    /*0000027c*/ STR         LR, [SP, #20] 
    /*00000280*/ LDR         LR, [IP, #3188]             @ 0xc74 
    /*00000284*/ STR         LR, [SP, #16] 
    /*00000288*/ LDR         LR, [IP, #3216]             @ 0xc90 
    /*0000028c*/ STR         LR, [SP, #12] 
    /*00000290*/ LDR         LR, [IP, #3212]             @ 0xc8c 
    /*00000294*/ STR         LR, [SP, #8] 
    /*00000298*/ LDR         LR, [IP, #3208]             @ 0xc88 
    /*0000029c*/ STR         LR, [SP, #4] 
    /*000002a0*/ LDR         IP, [IP, #3204]             @ 0xc84 
    /*000002a4*/ STR         IP, [SP] 
    /*000002a8*/ BL          0x00000000000002A8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowHierarchicalQpProc_x2ac:
    /*000002ac*/ CMP         R4, R8 
    /*000002b0*/ BNE         RcProcShowHierarchicalQpProc_x244
    /*000002b4*/ MOV         R0, #0 
    /*000002b8*/ ADD         SP, SP, #36                 @ 0x24 
    /*000002bc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    /*000002c0*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_apstRcCtx [R_ARM_ABS32: .bss+0x288] 
FUNC_END RcProcShowHierarchicalQpProc


FUNC_BEGIN RcProcShowBaseParam
    /*000002c4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000002c8*/ SUB         SP, SP, #68                 @ 0x44 
    /*000002cc*/ LDR         R6, [PC, #1616]             @ 0x0000000000000924 
    /*000002d0*/ MOV         FP, R0 
    /*000002d4*/ MOVW        R1, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fc] 
    /*000002d8*/ MOVT        R1, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fc] 
    /*000002dc*/ BL          0x00000000000002DC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000002e0*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x280] 
    /*000002e4*/ MOVW        R3, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x284] 
    /*000002e8*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x280] 
    /*000002ec*/ MOVT        R3, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x284] 
    /*000002f0*/ STR         R2, [SP, #36]               @ 0x24 
    /*000002f4*/ STR         R3, [SP, #32] 
    /*000002f8*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x288] 
    /*000002fc*/ MOVW        R3, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28c] 
    /*00000300*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x288] 
    /*00000304*/ MOVT        R3, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28c] 
    /*00000308*/ STR         R2, [SP, #28] 
    /*0000030c*/ STR         R3, [SP, #24] 
    /*00000310*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x294] 
    /*00000314*/ MOVW        R3, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a0] 
    /*00000318*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x294] 
    /*0000031c*/ MOVT        R3, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a0] 
    /*00000320*/ STR         R2, [SP, #20] 
    /*00000324*/ STR         R3, [SP, #16] 
    /*00000328*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a8] 
    /*0000032c*/ MOVW        R3, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b0] 
    /*00000330*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a8] 
    /*00000334*/ MOVT        R3, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b0] 
    /*00000338*/ STR         R2, [SP, #12] 
    /*0000033c*/ STR         R3, [SP, #8] 
    /*00000340*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b8] 
    /*00000344*/ MOVW        R3, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c0] 
    /*00000348*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b8] 
    /*0000034c*/ MOVT        R3, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c0] 
    /*00000350*/ STR         R2, [SP, #4] 
    /*00000354*/ STR         R3, [SP] 
    /*00000358*/ MOV         R0, FP 
    /*0000035c*/ MOVW        R3, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x250] 
    /*00000360*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00000364*/ MOVT        R3, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x250] 
    /*00000368*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*0000036c*/ MOVW        R1, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x254] 
    /*00000370*/ MOVT        R1, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x254] 
    /*00000374*/ BL          0x0000000000000374          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000378*/ MOV         SL, #0 
    /*0000037c*/ MOVW        R8, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe0] 
    /*00000380*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x39c] 
    /*00000384*/ ADD         R9, R6, #64                 @ 0x40 
    /*00000388*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x39c] 
    /*0000038c*/ MOVT        SL, #65535                  @ 0xffff 
    /*00000390*/ MOVT        R8, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe0] 
    /*00000394*/ STR         R3, [SP, #40]               @ 0x28 
    /*00000398*/ MOV         R5, R6 
    /*0000039c*/ MOV         R7, #0 
    /*000003a0*/ B           RcProcShowBaseParam_x40c
    RcProcShowBaseParam_x3a4:
    /*000003a4*/ LSR         R2, R3, #16 
    /*000003a8*/ MOV         R1, #12 
    /*000003ac*/ UXTH        R3, R3 
    /*000003b0*/ STR         R2, [SP] 
    /*000003b4*/ ADD         R0, SP, #52                 @ 0x34 
    /*000003b8*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c8] 
    /*000003bc*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c8] 
    /*000003c0*/ BL          0x00000000000003C0          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*000003c4*/ LDR         R3, [R4, #52]               @ 0x34 
    /*000003c8*/ CMP         R3, #1 
    /*000003cc*/ BEQ         RcProcShowBaseParam_x454
    RcProcShowBaseParam_x3d0:
    /*000003d0*/ CMP         R3, #5 
    /*000003d4*/ BEQ         RcProcShowBaseParam_x754
    /*000003d8*/ CMP         R3, #0 
    /*000003dc*/ BEQ         RcProcShowBaseParam_x6f0
    /*000003e0*/ CMP         R3, #2 
    /*000003e4*/ BEQ         RcProcShowBaseParam_x81c
    /*000003e8*/ CMP         R3, #3 
    /*000003ec*/ BEQ         RcProcShowBaseParam_x830
    /*000003f0*/ CMP         R3, #6 
    /*000003f4*/ BEQ         RcProcShowBaseParam_x844
    /*000003f8*/ CMP         R3, #4 
    /*000003fc*/ BEQ         RcProcShowBaseParam_x874
    RcProcShowBaseParam_x400:
    /*00000400*/ CMP         R5, R9 
    /*00000404*/ ADD         R7, R7, #1 
    /*00000408*/ BEQ         RcProcShowBaseParam_x4c4
    RcProcShowBaseParam_x40c:
    /*0000040c*/ LDR         R4, [R5, #4]! 
    /*00000410*/ CMP         R4, #0 
    /*00000414*/ BEQ         RcProcShowBaseParam_x400
    /*00000418*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*0000041c*/ MOV         R2, #0 
    /*00000420*/ STR         R2, [SP, #52]               @ 0x34 
    /*00000424*/ TST         R3, SL 
    /*00000428*/ STR         R2, [SP, #56]               @ 0x38 
    /*0000042c*/ STR         R2, [SP, #60]               @ 0x3c 
    /*00000430*/ BNE         RcProcShowBaseParam_x3a4
    /*00000434*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d0] 
    /*00000438*/ MOV         R1, #12 
    /*0000043c*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d0] 
    /*00000440*/ ADD         R0, SP, #52                 @ 0x34 
    /*00000444*/ BL          0x0000000000000444          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*00000448*/ LDR         R3, [R4, #52]               @ 0x34 
    /*0000044c*/ CMP         R3, #1 
    /*00000450*/ BNE         RcProcShowBaseParam_x3d0
    RcProcShowBaseParam_x454:
    /*00000454*/ LDR         R3, [R4, #32] 
    /*00000458*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2fc] 
    /*0000045c*/ STR         R8, [SP, #36]               @ 0x24 
    /*00000460*/ MOVW        R1, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d4] 
    /*00000464*/ STR         R8, [SP, #32] 
    /*00000468*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2fc] 
    /*0000046c*/ STR         R8, [SP, #28] 
    /*00000470*/ MOVT        R1, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d4] 
    /*00000474*/ LDR         R0, [R4, #60]               @ 0x3c 
    /*00000478*/ STR         R0, [SP, #24] 
    /*0000047c*/ LDR         R0, [R4, #56]               @ 0x38 
    RcProcShowBaseParam_x480:
    /*00000480*/ STR         R2, [SP, #16] 
    /*00000484*/ LSR         R0, R0, #10 
    /*00000488*/ STR         R0, [SP, #20] 
    /*0000048c*/ ADD         R0, SP, #52                 @ 0x34 
    /*00000490*/ LDR         IP, [R4, #48]               @ 0x30 
    /*00000494*/ MOV         R2, R7 
    /*00000498*/ STR         R0, [SP, #8] 
    /*0000049c*/ MOV         R0, FP 
    /*000004a0*/ ADD         R7, R7, #1 
    /*000004a4*/ STR         IP, [SP, #12] 
    /*000004a8*/ LDR         IP, [R4, #40]               @ 0x28 
    /*000004ac*/ STR         IP, [SP, #4] 
    /*000004b0*/ LDR         IP, [R4, #36]               @ 0x24 
    /*000004b4*/ STR         IP, [SP] 
    /*000004b8*/ BL          0x00000000000004B8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000004bc*/ CMP         R5, R9 
    /*000004c0*/ BNE         RcProcShowBaseParam_x40c
    RcProcShowBaseParam_x4c4:
    /*000004c4*/ MOVW        R1, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a4] 
    /*000004c8*/ MOV         R0, FP 
    /*000004cc*/ MOVT        R1, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a4] 
    /*000004d0*/ MOVW        R8, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*000004d4*/ BL          0x00000000000004D4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000004d8*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x420] 
    /*000004dc*/ MOVW        R3, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c] 
    /*000004e0*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x420] 
    /*000004e4*/ MOVT        R3, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c] 
    /*000004e8*/ STR         R2, [SP, #20] 
    /*000004ec*/ STR         R3, [SP, #16] 
    /*000004f0*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x438] 
    /*000004f4*/ MOVW        R3, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x444] 
    /*000004f8*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x438] 
    /*000004fc*/ MOVT        R3, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x444] 
    /*00000500*/ STR         R2, [SP, #12] 
    /*00000504*/ STR         R3, [SP, #8] 
    /*00000508*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x44c] 
    /*0000050c*/ MOVW        R3, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x454] 
    /*00000510*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x44c] 
    /*00000514*/ MOVT        R3, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x454] 
    /*00000518*/ STR         R2, [SP, #4] 
    /*0000051c*/ STR         R3, [SP] 
    /*00000520*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00000524*/ MOVW        R3, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f8] 
    /*00000528*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*0000052c*/ MOVT        R3, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f8] 
    /*00000530*/ MOVW        R1, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x400] 
    /*00000534*/ MOV         R0, FP 
    /*00000538*/ MOVT        R1, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x400] 
    /*0000053c*/ BL          0x000000000000053C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000540*/ MOVW        SL, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49c] 
    /*00000544*/ MOVW        R3, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bc] 
    /*00000548*/ MOVT        SL, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49c] 
    /*0000054c*/ MOVT        R3, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bc] 
    /*00000550*/ LDR         R4, [PC, #972]              @ 0x0000000000000924 
    /*00000554*/ MOVT        R8, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00000558*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000055c*/ MOV         R7, #0 
    /*00000560*/ STR         SL, [SP, #44]               @ 0x2c 
    /*00000564*/ B           RcProcShowBaseParam_x594
    RcProcShowBaseParam_x568:
    /*00000568*/ CMP         R3, #5 
    /*0000056c*/ BEQ         RcProcShowBaseParam_x7d8
    /*00000570*/ SUB         R1, R3, #2 
    /*00000574*/ CMP         R3, #0 
    /*00000578*/ CMPNE       R1, #2 
    /*0000057c*/ BLS         RcProcShowBaseParam_x790
    /*00000580*/ CMP         R3, #6 
    /*00000584*/ BEQ         RcProcShowBaseParam_x89c
    RcProcShowBaseParam_x588:
    /*00000588*/ CMP         R4, R5 
    /*0000058c*/ ADD         R7, R7, #1 
    /*00000590*/ BEQ         RcProcShowBaseParam_x620
    RcProcShowBaseParam_x594:
    /*00000594*/ LDR         R2, [R4, #4]! 
    /*00000598*/ CMP         R2, #0 
    /*0000059c*/ BEQ         RcProcShowBaseParam_x588
    /*000005a0*/ LDR         R3, [R2, #52]               @ 0x34 
    /*000005a4*/ CMP         R3, #1 
    /*000005a8*/ BNE         RcProcShowBaseParam_x568
    /*000005ac*/ LDR         R1, [R2, #252]              @ 0xfc 
    /*000005b0*/ MOVW        R3, #265                    @ 0x109 
    /*000005b4*/ LDR         IP, [R2, #48]               @ 0x30 
    /*000005b8*/ LDR         R0, [R2, #3096]             @ 0xc18 
    /*000005bc*/ CMP         IP, R3 
    /*000005c0*/ CMPEQ       R1, #1 
    /*000005c4*/ LDR         LR, [R2, #232]              @ 0xe8 
    /*000005c8*/ ADD         R1, R8, R1, LSL #1 
    /*000005cc*/ LDR         R3, [R2, #228]              @ 0xe4 
    /*000005d0*/ ADD         R0, R8, R0, LSL #1 
    /*000005d4*/ LDR         IP, [R2, #224]              @ 0xe0 
    /*000005d8*/ LDR         R9, [R2, #236]              @ 0xec 
    /*000005dc*/ BEQ         RcProcShowBaseParam_x910
    RcProcShowBaseParam_x5e0:
    /*000005e0*/ MOVW        SL, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe0] 
    /*000005e4*/ MOVT        SL, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe0] 
    RcProcShowBaseParam_x5e8:
    /*000005e8*/ STR         R1, [SP, #16] 
    /*000005ec*/ MOV         R2, R7 
    /*000005f0*/ STR         R0, [SP, #12] 
    /*000005f4*/ MOVW        R1, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45c] 
    /*000005f8*/ STR         SL, [SP, #20] 
    /*000005fc*/ MOVT        R1, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45c] 
    /*00000600*/ STR         R9, [SP, #8] 
    /*00000604*/ MOV         R0, FP 
    /*00000608*/ STR         LR, [SP, #4] 
    /*0000060c*/ ADD         R7, R7, #1 
    /*00000610*/ STR         IP, [SP] 
    /*00000614*/ BL          0x0000000000000614          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000618*/ CMP         R4, R5 
    /*0000061c*/ BNE         RcProcShowBaseParam_x594
    RcProcShowBaseParam_x620:
    /*00000620*/ MOVW        R1, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c0] 
    /*00000624*/ MOV         R0, FP 
    /*00000628*/ MOVT        R1, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c0] 
    /*0000062c*/ MOVW        R7, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57c] 
    /*00000630*/ BL          0x0000000000000630          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000634*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x540] 
    /*00000638*/ MOVW        R3, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x554] 
    /*0000063c*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x540] 
    /*00000640*/ MOVT        R3, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x554] 
    /*00000644*/ STR         R2, [SP, #8] 
    /*00000648*/ STR         R3, [SP, #4] 
    /*0000064c*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x568] 
    /*00000650*/ MOVW        R3, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x514] 
    /*00000654*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x568] 
    /*00000658*/ MOVT        R3, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x514] 
    /*0000065c*/ STR         R2, [SP] 
    /*00000660*/ MOVW        R1, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x528] 
    /*00000664*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00000668*/ MOVT        R1, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x528] 
    /*0000066c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*00000670*/ MOV         R0, FP 
    /*00000674*/ MOVT        R7, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57c] 
    /*00000678*/ BL          0x0000000000000678          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000067c*/ MOV         R5, #0 
    /*00000680*/ B           RcProcShowBaseParam_x690
    RcProcShowBaseParam_x684:
    /*00000684*/ CMP         R4, R6 
    /*00000688*/ ADD         R5, R5, #1 
    /*0000068c*/ BEQ         RcProcShowBaseParam_x6e8
    RcProcShowBaseParam_x690:
    /*00000690*/ LDR         IP, [R6, #4]! 
    /*00000694*/ CMP         IP, #0 
    /*00000698*/ BEQ         RcProcShowBaseParam_x684
    /*0000069c*/ LDR         R3, [IP, #52]               @ 0x34 
    /*000006a0*/ CMP         R3, #4 
    /*000006a4*/ BNE         RcProcShowBaseParam_x684
    /*000006a8*/ LDR         LR, [IP, #72]               @ 0x48 
    /*000006ac*/ MOV         R2, R5 
    /*000006b0*/ LDR         R3, [IP, #64]               @ 0x40 
    /*000006b4*/ MOV         R1, R7 
    /*000006b8*/ MOV         R0, FP 
    /*000006bc*/ ADD         R5, R5, #1 
    /*000006c0*/ LSR         LR, LR, #10 
    /*000006c4*/ STR         LR, [SP, #8] 
    /*000006c8*/ LDR         LR, [IP, #68]               @ 0x44 
    /*000006cc*/ LSR         LR, LR, #10 
    /*000006d0*/ STR         LR, [SP, #4] 
    /*000006d4*/ LDR         IP, [IP, #60]               @ 0x3c 
    /*000006d8*/ STR         IP, [SP] 
    /*000006dc*/ BL          0x00000000000006DC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000006e0*/ CMP         R4, R6 
    /*000006e4*/ BNE         RcProcShowBaseParam_x690
    RcProcShowBaseParam_x6e8:
    /*000006e8*/ ADD         SP, SP, #68                 @ 0x44 
    /*000006ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RcProcShowBaseParam_x6f0:
    /*000006f0*/ MOVW        R1, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x358] 
    /*000006f4*/ MOVT        R1, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x358] 
    /*000006f8*/ LDR         R3, [R4, #32] 
    /*000006fc*/ STR         R8, [SP, #36]               @ 0x24 
    RcProcShowBaseParam_x700:
    /*00000700*/ STR         R8, [SP, #32] 
    /*00000704*/ STR         R8, [SP, #28] 
    /*00000708*/ STR         R8, [SP, #24] 
    /*0000070c*/ LDR         R2, [R4, #56]               @ 0x38 
    /*00000710*/ STR         R1, [SP, #16] 
    /*00000714*/ MOVW        R1, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x330] 
    /*00000718*/ MOVT        R1, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x330] 
    /*0000071c*/ LSR         R2, R2, #10 
    /*00000720*/ STR         R2, [SP, #20] 
    RcProcShowBaseParam_x724:
    /*00000724*/ LDR         R0, [R4, #48]               @ 0x30 
    /*00000728*/ ADD         R2, SP, #52                 @ 0x34 
    /*0000072c*/ STR         R2, [SP, #8] 
    /*00000730*/ MOV         R2, R7 
    /*00000734*/ STR         R0, [SP, #12] 
    /*00000738*/ MOV         R0, FP 
    /*0000073c*/ LDR         IP, [R4, #40]               @ 0x28 
    /*00000740*/ STR         IP, [SP, #4] 
    /*00000744*/ LDR         IP, [R4, #36]               @ 0x24 
    /*00000748*/ STR         IP, [SP] 
    /*0000074c*/ BL          0x000000000000074C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000750*/ B           RcProcShowBaseParam_x400
    RcProcShowBaseParam_x754:
    /*00000754*/ LDR         R1, [R4, #64]               @ 0x40 
    /*00000758*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x328] 
    /*0000075c*/ LDR         R3, [R4, #32] 
    /*00000760*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x328] 
    /*00000764*/ STR         R1, [SP, #36]               @ 0x24 
    /*00000768*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x300] 
    /*0000076c*/ LDR         R0, [R4, #60]               @ 0x3c 
    /*00000770*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x300] 
    /*00000774*/ STR         R0, [SP, #32] 
    /*00000778*/ LDR         R0, [R4, #56]               @ 0x38 
    /*0000077c*/ STR         R8, [SP, #24] 
    /*00000780*/ STR         R8, [SP, #20] 
    /*00000784*/ STR         R0, [SP, #28] 
    /*00000788*/ STR         R2, [SP, #16] 
    /*0000078c*/ B           RcProcShowBaseParam_x724
    RcProcShowBaseParam_x790:
    /*00000790*/ LDR         R1, [R2, #292]              @ 0x124 
    /*00000794*/ MOVW        R3, #265                    @ 0x109 
    /*00000798*/ LDR         IP, [R2, #48]               @ 0x30 
    /*0000079c*/ LDR         R0, [R2, #3096]             @ 0xc18 
    /*000007a0*/ CMP         IP, R3 
    /*000007a4*/ CMPEQ       R1, #1 
    /*000007a8*/ LDR         LR, [R2, #236]              @ 0xec 
    /*000007ac*/ ADD         R1, R8, R1, LSL #1 
    /*000007b0*/ LDR         R3, [R2, #240]              @ 0xf0 
    /*000007b4*/ ADD         R0, R8, R0, LSL #1 
    /*000007b8*/ LDR         IP, [R2, #248]              @ 0xf8 
    /*000007bc*/ LDR         R9, [R2, #244]              @ 0xf4 
    /*000007c0*/ BNE         RcProcShowBaseParam_x5e0
    /*000007c4*/ LDR         SL, [R2, #296]              @ 0x128 
    /*000007c8*/ LDR         R2, [PC, #344]              @ 0x0000000000000928 
    /*000007cc*/ RSB         SL, SL, SL, LSL #3 
    /*000007d0*/ ADD         SL, R2, SL 
    /*000007d4*/ B           RcProcShowBaseParam_x5e8
    RcProcShowBaseParam_x7d8:
    /*000007d8*/ MOVW        R0, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe0] 
    /*000007dc*/ MOVT        R0, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe0] 
    /*000007e0*/ STR         R0, [SP, #20] 
    /*000007e4*/ MOVW        R1, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47c] 
    /*000007e8*/ STR         R0, [SP, #16] 
    /*000007ec*/ MOV         R3, R0 
    /*000007f0*/ LDR         IP, [R2, #3096]             @ 0xc18 
    /*000007f4*/ MOVT        R1, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47c] 
    /*000007f8*/ STR         R0, [SP, #8] 
    /*000007fc*/ MOV         R2, R7 
    /*00000800*/ STR         R0, [SP, #4] 
    /*00000804*/ ADD         IP, R8, IP, LSL #1 
    /*00000808*/ STR         R0, [SP] 
    /*0000080c*/ STR         IP, [SP, #12] 
    /*00000810*/ MOV         R0, FP 
    /*00000814*/ BL          0x0000000000000814          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000818*/ B           RcProcShowBaseParam_x588
    RcProcShowBaseParam_x81c:
    /*0000081c*/ LDR         R3, [R4, #32] 
    /*00000820*/ MOVW        R1, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c] 
    /*00000824*/ STR         R8, [SP, #36]               @ 0x24 
    /*00000828*/ MOVT        R1, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c] 
    /*0000082c*/ B           RcProcShowBaseParam_x700
    RcProcShowBaseParam_x830:
    /*00000830*/ LDR         R3, [R4, #32] 
    /*00000834*/ MOVW        R1, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x364] 
    /*00000838*/ STR         R8, [SP, #36]               @ 0x24 
    /*0000083c*/ MOVT        R1, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x364] 
    /*00000840*/ B           RcProcShowBaseParam_x700
    RcProcShowBaseParam_x844:
    /*00000844*/ LDR         R3, [R4, #32] 
    /*00000848*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x394] 
    /*0000084c*/ MOVW        R1, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x36c] 
    /*00000850*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x394] 
    /*00000854*/ STR         R8, [SP, #36]               @ 0x24 
    /*00000858*/ MOVT        R1, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x36c] 
    /*0000085c*/ STR         R2, [SP, #16] 
    /*00000860*/ STR         R8, [SP, #32] 
    /*00000864*/ STR         R8, [SP, #28] 
    /*00000868*/ STR         R8, [SP, #24] 
    /*0000086c*/ STR         R8, [SP, #20] 
    /*00000870*/ B           RcProcShowBaseParam_x724
    RcProcShowBaseParam_x874:
    /*00000874*/ LDR         R3, [R4, #32] 
    /*00000878*/ MOVW        R1, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x330] 
    /*0000087c*/ STR         R8, [SP, #36]               @ 0x24 
    /*00000880*/ MOVT        R1, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x330] 
    /*00000884*/ STR         R8, [SP, #32] 
    /*00000888*/ STR         R8, [SP, #28] 
    /*0000088c*/ STR         R8, [SP, #24] 
    /*00000890*/ LDR         R2, [SP, #40]               @ 0x28 
    /*00000894*/ LDR         R0, [R4, #56]               @ 0x38 
    /*00000898*/ B           RcProcShowBaseParam_x480
    RcProcShowBaseParam_x89c:
    /*0000089c*/ LDR         R3, [R2, #48]               @ 0x30 
    /*000008a0*/ MOVW        R1, #1002                   @ 0x3ea 
    /*000008a4*/ CMP         R3, R1 
    /*000008a8*/ BEQ         RcProcShowBaseParam_x588
    /*000008ac*/ MOVW        R0, #265                    @ 0x109 
    /*000008b0*/ CMP         R3, R0 
    /*000008b4*/ LDR         R1, [R2, #3096]             @ 0xc18 
    /*000008b8*/ MOV         R0, #51                     @ 0x33 
    /*000008bc*/ LDREQ       R2, [R2, #56]               @ 0x38 
    /*000008c0*/ MOVWNE      R3, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe0] 
    /*000008c4*/ LDREQ       R3, [PC, #92]               @ 0x0000000000000928 
    /*000008c8*/ MOVTNE      R3, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe0] 
    /*000008cc*/ ADD         R1, R8, R1, LSL #1 
    /*000008d0*/ STR         R0, [SP, #8] 
    /*000008d4*/ RSBEQ       R2, R2, R2, LSL #3 
    /*000008d8*/ STR         R1, [SP, #12] 
    /*000008dc*/ ADDEQ       R3, R3, R2 
    /*000008e0*/ STR         R3, [SP, #20] 
    /*000008e4*/ LDR         R3, [SP, #40]               @ 0x28 
    /*000008e8*/ MOV         R2, #0 
    /*000008ec*/ STR         R0, [SP] 
    /*000008f0*/ MOV         R0, FP 
    /*000008f4*/ STR         R2, [SP, #4] 
    /*000008f8*/ STR         R3, [SP, #16] 
    /*000008fc*/ MOV         R3, R2 
    /*00000900*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*00000904*/ MOV         R2, R7 
    /*00000908*/ BL          0x0000000000000908          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000090c*/ B           RcProcShowBaseParam_x588
    RcProcShowBaseParam_x910:
    /*00000910*/ LDR         SL, [R2, #256]              @ 0x100 
    /*00000914*/ LDR         R2, [PC, #12]               @ 0x0000000000000928 
    /*00000918*/ RSB         SL, SL, SL, LSL #3 
    /*0000091c*/ ADD         SL, R2, SL 
    /*00000920*/ B           RcProcShowBaseParam_x5e8
    /*00000924*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_apstRcCtx [R_ARM_ABS32: .bss+0x288] 
    /*00000928*/ ANDEQ       R0, R0, R4 
FUNC_END RcProcShowBaseParam


FUNC_BEGIN RcProcShowCommParam
    /*0000092c*/ LDR         R3, [PC, #1636]             @ 0x0000000000000f98 
    /*00000930*/ MOVW        R1, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x594] 
    /*00000934*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00000938*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0000093c*/ MOV         R8, R3 
    /*00000940*/ MOV         R4, R0 
    /*00000944*/ MOVT        R1, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x594] 
    /*00000948*/ MOVW        FP, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61c] 
    /*0000094c*/ MOVW        R6, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x620] 
    /*00000950*/ ADD         SL, R8, #64                 @ 0x40 
    /*00000954*/ MOVT        FP, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61c] 
    /*00000958*/ MOVT        R6, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x620] 
    /*0000095c*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00000960*/ MOV         R9, #0 
    /*00000964*/ BL          0x0000000000000964          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000968*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x604] 
    /*0000096c*/ MOV         R0, R4 
    /*00000970*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x604] 
    /*00000974*/ MOVW        R3, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e8] 
    /*00000978*/ STR         R2, [SP] 
    /*0000097c*/ MOVT        R3, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e8] 
    /*00000980*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00000984*/ MOVW        R1, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f4] 
    /*00000988*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*0000098c*/ MOVT        R1, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f4] 
    /*00000990*/ BL          0x0000000000000990          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000994*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x610] 
    /*00000998*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x610] 
    /*0000099c*/ STR         R3, [SP, #40]               @ 0x28 
    RcProcShowCommParam_x9a0:
    /*000009a0*/ LDR         R5, [R8, #4]! 
    /*000009a4*/ CMP         R5, #0 
    /*000009a8*/ BEQ         RcProcShowCommParam_xa08
    /*000009ac*/ LDR         R3, [R5, #180]              @ 0xb4 
    /*000009b0*/ MOV         R2, R9 
    /*000009b4*/ LDR         R1, [SP, #40]               @ 0x28 
    /*000009b8*/ MOV         R0, R4 
    /*000009bc*/ STR         FP, [SP] 
    /*000009c0*/ ADD         R7, R5, #95                 @ 0x5f 
    /*000009c4*/ BL          0x00000000000009C4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000009c8*/ LDRB        R2, [R5, #80]!              @ 0x50 
    /*000009cc*/ MOV         R1, R6 
    /*000009d0*/ MOV         R0, R4 
    /*000009d4*/ BL          0x00000000000009D4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowCommParam_x9d8:
    /*000009d8*/ LDRB        R2, [R5, #1]! 
    /*000009dc*/ MOV         R1, R6 
    /*000009e0*/ MOV         R0, R4 
    /*000009e4*/ BL          0x00000000000009E4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000009e8*/ CMP         R5, R7 
    /*000009ec*/ BNE         RcProcShowCommParam_x9d8
    /*000009f0*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x628] 
    /*000009f4*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62c] 
    /*000009f8*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x628] 
    /*000009fc*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62c] 
    /*00000a00*/ MOV         R0, R4 
    /*00000a04*/ BL          0x0000000000000A04          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowCommParam_xa08:
    /*00000a08*/ CMP         R8, SL 
    /*00000a0c*/ ADD         R9, R9, #1 
    /*00000a10*/ BNE         RcProcShowCommParam_x9a0
    /*00000a14*/ MOVW        R3, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a4] 
    /*00000a18*/ MOVW        R1, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x630] 
    /*00000a1c*/ MOV         R5, R3 
    /*00000a20*/ MOVT        R1, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x630] 
    /*00000a24*/ MOV         R0, R4 
    /*00000a28*/ LDR         FP, [PC, #1384]             @ 0x0000000000000f98 
    /*00000a2c*/ BL          0x0000000000000A2C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000a30*/ MOV         R3, R5 
    /*00000a34*/ MOVT        R3, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a4] 
    /*00000a38*/ MOVW        SL, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*00000a3c*/ MOVW        R6, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x620] 
    /*00000a40*/ MOVT        SL, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*00000a44*/ MOVT        R6, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x620] 
    /*00000a48*/ MOV         R2, R3 
    /*00000a4c*/ STR         R3, [SP, #48]               @ 0x30 
    /*00000a50*/ MOVW        R1, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x694] 
    /*00000a54*/ STR         R2, [SP] 
    /*00000a58*/ MOVW        R3, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x684] 
    /*00000a5c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00000a60*/ MOVT        R3, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x684] 
    /*00000a64*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*00000a68*/ MOVT        R1, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x694] 
    /*00000a6c*/ MOV         R0, R4 
    /*00000a70*/ MOV         R9, #0 
    /*00000a74*/ BL          0x0000000000000A74          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000a78*/ MOVW        R3, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61c] 
    /*00000a7c*/ MOVT        R3, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61c] 
    /*00000a80*/ STR         R3, [SP, #40]               @ 0x28 
    RcProcShowCommParam_xa84:
    /*00000a84*/ LDR         R5, [FP, #4]! 
    /*00000a88*/ CMP         R5, #0 
    /*00000a8c*/ BEQ         RcProcShowCommParam_xaf0
    /*00000a90*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00000a94*/ MOV         R2, R9 
    /*00000a98*/ LDR         R3, [R5, #184]              @ 0xb8 
    /*00000a9c*/ MOV         R0, R4 
    /*00000aa0*/ ADD         R7, R5, #111                @ 0x6f 
    /*00000aa4*/ STR         R1, [SP] 
    /*00000aa8*/ MOV         R1, SL 
    /*00000aac*/ BL          0x0000000000000AAC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000ab0*/ LDRB        R2, [R5, #96]!              @ 0x60 
    /*00000ab4*/ MOV         R1, R6 
    /*00000ab8*/ MOV         R0, R4 
    /*00000abc*/ BL          0x0000000000000ABC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowCommParam_xac0:
    /*00000ac0*/ LDRB        R2, [R5, #1]! 
    /*00000ac4*/ MOV         R1, R6 
    /*00000ac8*/ MOV         R0, R4 
    /*00000acc*/ BL          0x0000000000000ACC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000ad0*/ CMP         R5, R7 
    /*00000ad4*/ BNE         RcProcShowCommParam_xac0
    /*00000ad8*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x628] 
    /*00000adc*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62c] 
    /*00000ae0*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x628] 
    /*00000ae4*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62c] 
    /*00000ae8*/ MOV         R0, R4 
    /*00000aec*/ BL          0x0000000000000AEC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowCommParam_xaf0:
    /*00000af0*/ CMP         FP, R8 
    /*00000af4*/ ADD         R9, R9, #1 
    /*00000af8*/ BNE         RcProcShowCommParam_xa84
    /*00000afc*/ MOVW        R3, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x730] 
    /*00000b00*/ MOVW        R1, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6bc] 
    /*00000b04*/ MOV         R5, R3 
    /*00000b08*/ MOVT        R1, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6bc] 
    /*00000b0c*/ MOV         R0, R4 
    /*00000b10*/ LDR         R8, [PC, #1152]             @ 0x0000000000000f98 
    /*00000b14*/ BL          0x0000000000000B14          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000b18*/ MOV         R3, R5 
    /*00000b1c*/ MOVT        R3, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x730] 
    /*00000b20*/ MOVW        SL, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61c] 
    /*00000b24*/ MOVW        R6, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x620] 
    /*00000b28*/ MOVT        SL, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61c] 
    /*00000b2c*/ MOVT        R6, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x620] 
    /*00000b30*/ MOV         R2, R3 
    /*00000b34*/ STR         R3, [SP, #52]               @ 0x34 
    /*00000b38*/ MOVW        R1, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x720] 
    /*00000b3c*/ STR         R2, [SP] 
    /*00000b40*/ MOVW        R3, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x710] 
    /*00000b44*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00000b48*/ MOVT        R3, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x710] 
    /*00000b4c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*00000b50*/ MOVT        R1, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x720] 
    /*00000b54*/ MOV         R0, R4 
    /*00000b58*/ MOV         R9, #0 
    /*00000b5c*/ BL          0x0000000000000B5C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000b60*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x610] 
    /*00000b64*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x610] 
    /*00000b68*/ STR         R3, [SP, #40]               @ 0x28 
    RcProcShowCommParam_xb6c:
    /*00000b6c*/ LDR         R5, [R8, #4]! 
    /*00000b70*/ CMP         R5, #0 
    /*00000b74*/ BEQ         RcProcShowCommParam_xbd4
    /*00000b78*/ LDR         R3, [R5, #176]              @ 0xb0 
    /*00000b7c*/ MOV         R2, R9 
    /*00000b80*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00000b84*/ MOV         R0, R4 
    /*00000b88*/ STR         SL, [SP] 
    /*00000b8c*/ ADD         R7, R5, #127                @ 0x7f 
    /*00000b90*/ BL          0x0000000000000B90          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000b94*/ LDRB        R2, [R5, #112]!             @ 0x70 
    /*00000b98*/ MOV         R1, R6 
    /*00000b9c*/ MOV         R0, R4 
    /*00000ba0*/ BL          0x0000000000000BA0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowCommParam_xba4:
    /*00000ba4*/ LDRB        R2, [R5, #1]! 
    /*00000ba8*/ MOV         R1, R6 
    /*00000bac*/ MOV         R0, R4 
    /*00000bb0*/ BL          0x0000000000000BB0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000bb4*/ CMP         R5, R7 
    /*00000bb8*/ BNE         RcProcShowCommParam_xba4
    /*00000bbc*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x628] 
    /*00000bc0*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62c] 
    /*00000bc4*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x628] 
    /*00000bc8*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62c] 
    /*00000bcc*/ MOV         R0, R4 
    /*00000bd0*/ BL          0x0000000000000BD0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowCommParam_xbd4:
    /*00000bd4*/ CMP         R8, FP 
    /*00000bd8*/ ADD         R9, R9, #1 
    /*00000bdc*/ BNE         RcProcShowCommParam_xb6c
    /*00000be0*/ MOVW        R1, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x73c] 
    /*00000be4*/ MOV         R0, R4 
    /*00000be8*/ MOVT        R1, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x73c] 
    /*00000bec*/ LDR         R6, [PC, #932]              @ 0x0000000000000f98 
    /*00000bf0*/ BL          0x0000000000000BF0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000bf4*/ MOVW        R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c4] 
    /*00000bf8*/ MOVW        R3, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d0] 
    /*00000bfc*/ MOVT        R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c4] 
    /*00000c00*/ MOVT        R3, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d0] 
    /*00000c04*/ STR         R2, [SP, #32] 
    /*00000c08*/ STR         R3, [SP, #28] 
    /*00000c0c*/ MOVW        R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d8] 
    /*00000c10*/ MOVW        R3, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e0] 
    /*00000c14*/ MOVT        R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d8] 
    /*00000c18*/ MOVT        R3, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e0] 
    /*00000c1c*/ STR         R2, [SP, #24] 
    /*00000c20*/ STR         R3, [SP, #20] 
    /*00000c24*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e8] 
    /*00000c28*/ MOVW        R3, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f4] 
    /*00000c2c*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e8] 
    /*00000c30*/ MOVT        R3, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f4] 
    /*00000c34*/ STR         R2, [SP, #16] 
    /*00000c38*/ STR         R3, [SP, #12] 
    /*00000c3c*/ MOVW        R2, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x800] 
    /*00000c40*/ MOVW        R3, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x808] 
    /*00000c44*/ MOVT        R2, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x800] 
    /*00000c48*/ MOVT        R3, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x808] 
    /*00000c4c*/ STR         R2, [SP, #8] 
    /*00000c50*/ STR         R3, [SP, #4] 
    /*00000c54*/ MOVW        R2, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x814] 
    /*00000c58*/ MOVW        R3, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x790] 
    /*00000c5c*/ MOVT        R2, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x814] 
    /*00000c60*/ MOVT        R3, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x790] 
    /*00000c64*/ STR         R2, [SP] 
    /*00000c68*/ MOVW        R1, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x798] 
    /*00000c6c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00000c70*/ MOVT        R1, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x798] 
    /*00000c74*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*00000c78*/ MOV         R0, R4 
    /*00000c7c*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00000c80*/ BL          0x0000000000000C80          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000c84*/ MOVW        SL, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x81c] 
    /*00000c88*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00000c8c*/ MOVT        SL, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x81c] 
    /*00000c90*/ MOV         R5, #0 
    RcProcShowCommParam_xc94:
    /*00000c94*/ LDR         IP, [R6, #4]! 
    /*00000c98*/ MOV         R2, R5 
    /*00000c9c*/ MOV         R9, #10 
    /*00000ca0*/ MOV         R1, SL 
    /*00000ca4*/ CMP         IP, #0 
    /*00000ca8*/ MOV         R0, R4 
    /*00000cac*/ ADD         R5, R5, #1 
    /*00000cb0*/ BEQ         RcProcShowCommParam_xd24
    /*00000cb4*/ LDR         LR, [IP, #3128]             @ 0xc38 
    /*00000cb8*/ LDR         R3, [IP, #2448]             @ 0x990 
    /*00000cbc*/ LDR         R8, [PC, #728]              @ 0x0000000000000f9c 
    /*00000cc0*/ STR         LR, [SP, #32] 
    /*00000cc4*/ LDR         LR, [IP, #2600]             @ 0xa28 
    /*00000cc8*/ ADD         R3, R7, R3, LSL #1 
    /*00000ccc*/ STR         LR, [SP, #28] 
    /*00000cd0*/ LDR         LR, [IP, #2596]             @ 0xa24 
    /*00000cd4*/ STR         LR, [SP, #24] 
    /*00000cd8*/ LDR         LR, [IP, #2592]             @ 0xa20 
    /*00000cdc*/ STR         LR, [SP, #20] 
    /*00000ce0*/ LDR         LR, [IP, #2588]             @ 0xa1c 
    /*00000ce4*/ AND         LR, LR, #3 
    /*00000ce8*/ ADD         LR, R7, LR, LSL #2 
    /*00000cec*/ LDR         LR, [LR, #28] 
    /*00000cf0*/ STR         LR, [SP, #16] 
    /*00000cf4*/ LDR         LR, [IP, #3488]             @ 0xda0 
    /*00000cf8*/ MLA         R9, R9, LR, R8 
    /*00000cfc*/ ADD         R8, R8, #20 
    /*00000d00*/ STR         R9, [SP, #12] 
    /*00000d04*/ LDR         LR, [IP, #2460]             @ 0x99c 
    /*00000d08*/ STR         LR, [SP, #8] 
    /*00000d0c*/ LDR         LR, [IP, #2456]             @ 0x998 
    /*00000d10*/ ADD         R8, R8, LR, LSL #3 
    /*00000d14*/ STR         R8, [SP, #4] 
    /*00000d18*/ LDR         IP, [IP, #2452]             @ 0x994 
    /*00000d1c*/ STR         IP, [SP] 
    /*00000d20*/ BL          0x0000000000000D20          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowCommParam_xd24:
    /*00000d24*/ CMP         R6, FP 
    /*00000d28*/ BNE         RcProcShowCommParam_xc94
    /*00000d2c*/ MOVW        R1, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x848] 
    /*00000d30*/ MOV         R0, R4 
    /*00000d34*/ MOVT        R1, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x848] 
    /*00000d38*/ LDR         R6, [PC, #600]              @ 0x0000000000000f98 
    /*00000d3c*/ BL          0x0000000000000D3C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000d40*/ MOVW        R2, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c0] 
    /*00000d44*/ MOVW        R3, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89c] 
    /*00000d48*/ MOVT        R2, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c0] 
    /*00000d4c*/ MOVT        R3, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89c] 
    /*00000d50*/ STR         R2, [SP] 
    /*00000d54*/ MOVW        R1, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8b0] 
    /*00000d58*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00000d5c*/ MOVT        R1, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8b0] 
    /*00000d60*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*00000d64*/ MOV         R0, R4 
    /*00000d68*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00000d6c*/ BL          0x0000000000000D6C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000d70*/ MOVW        R8, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d4] 
    /*00000d74*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00000d78*/ MOVT        R8, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d4] 
    /*00000d7c*/ MOV         R5, #0 
    RcProcShowCommParam_xd80:
    /*00000d80*/ LDR         R3, [R6, #4]! 
    /*00000d84*/ MOV         R2, R5 
    /*00000d88*/ MOV         R1, R8 
    /*00000d8c*/ MOV         R0, R4 
    /*00000d90*/ CMP         R3, #0 
    /*00000d94*/ ADD         R5, R5, #1 
    /*00000d98*/ BEQ         RcProcShowCommParam_xdb4
    /*00000d9c*/ LDR         IP, [R3, #208]              @ 0xd0 
    /*00000da0*/ LDR         R3, [R3, #204]              @ 0xcc 
    /*00000da4*/ ADD         IP, R7, IP, LSL #1 
    /*00000da8*/ STR         IP, [SP] 
    /*00000dac*/ ADD         R3, R7, R3, LSL #1 
    /*00000db0*/ BL          0x0000000000000DB0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowCommParam_xdb4:
    /*00000db4*/ CMP         R6, FP 
    /*00000db8*/ BNE         RcProcShowCommParam_xd80
    /*00000dbc*/ MOVW        R1, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8e4] 
    /*00000dc0*/ MOV         R0, R4 
    /*00000dc4*/ MOVT        R1, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8e4] 
    /*00000dc8*/ LDR         R8, [PC, #456]              @ 0x0000000000000f98 
    /*00000dcc*/ BL          0x0000000000000DCC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000dd0*/ LDR         R3, [SP, #48]               @ 0x30 
    /*00000dd4*/ MOVW        SL, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61c] 
    /*00000dd8*/ MOVW        R7, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x964] 
    /*00000ddc*/ MOVT        SL, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61c] 
    /*00000de0*/ MOVT        R7, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x964] 
    /*00000de4*/ STR         R3, [SP, #4] 
    /*00000de8*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x710] 
    /*00000dec*/ MOVW        R3, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x938] 
    /*00000df0*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x710] 
    /*00000df4*/ MOVT        R3, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0x938] 
    /*00000df8*/ STR         R2, [SP] 
    /*00000dfc*/ MOVW        R1, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x940] 
    /*00000e00*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00000e04*/ MOVT        R1, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x940] 
    /*00000e08*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*00000e0c*/ MOV         R0, R4 
    /*00000e10*/ MOV         R9, #0 
    /*00000e14*/ BL          0x0000000000000E14          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000e18*/ MOVW        R3, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x954] 
    /*00000e1c*/ MOVT        R3, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x954] 
    /*00000e20*/ STR         R3, [SP, #40]               @ 0x28 
    RcProcShowCommParam_xe24:
    /*00000e24*/ LDR         R5, [R8, #4]! 
    /*00000e28*/ CMP         R5, #0 
    /*00000e2c*/ BEQ         RcProcShowCommParam_xe98
    /*00000e30*/ LDR         R3, [R5, #3064]             @ 0xbf8 
    /*00000e34*/ MOV         R2, R9 
    /*00000e38*/ STR         SL, [SP, #4] 
    /*00000e3c*/ MOV         R0, R4 
    /*00000e40*/ LDR         IP, [R5, #3080]             @ 0xc08 
    /*00000e44*/ ADD         R6, R5, #2912               @ 0xb60 
    /*00000e48*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00000e4c*/ ADD         R6, R6, #15 
    /*00000e50*/ STR         IP, [SP] 
    /*00000e54*/ BL          0x0000000000000E54          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000e58*/ LDRB        R2, [R5, #2912]!            @ 0xb60 
    /*00000e5c*/ MOV         R1, R7 
    /*00000e60*/ MOV         R0, R4 
    /*00000e64*/ BL          0x0000000000000E64          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowCommParam_xe68:
    /*00000e68*/ LDRB        R2, [R5, #1]! 
    /*00000e6c*/ MOV         R1, R7 
    /*00000e70*/ MOV         R0, R4 
    /*00000e74*/ BL          0x0000000000000E74          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000e78*/ CMP         R6, R5 
    /*00000e7c*/ BNE         RcProcShowCommParam_xe68
    /*00000e80*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x628] 
    /*00000e84*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62c] 
    /*00000e88*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x628] 
    /*00000e8c*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62c] 
    /*00000e90*/ MOV         R0, R4 
    /*00000e94*/ BL          0x0000000000000E94          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowCommParam_xe98:
    /*00000e98*/ CMP         R8, FP 
    /*00000e9c*/ ADD         R9, R9, #1 
    /*00000ea0*/ BNE         RcProcShowCommParam_xe24
    /*00000ea4*/ MOVW        R1, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x96c] 
    /*00000ea8*/ MOV         R0, R4 
    /*00000eac*/ MOVT        R1, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0x96c] 
    /*00000eb0*/ MOVW        SL, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61c] 
    /*00000eb4*/ BL          0x0000000000000EB4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000eb8*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00000ebc*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9cc] 
    /*00000ec0*/ MOVW        R1, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x940] 
    /*00000ec4*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9cc] 
    /*00000ec8*/ MOVT        R1, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x940] 
    /*00000ecc*/ STR         R3, [SP, #4] 
    /*00000ed0*/ MOV         R0, R4 
    /*00000ed4*/ STR         R2, [SP] 
    /*00000ed8*/ MOVW        R3, #0                      @ .LC110 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c0] 
    /*00000edc*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00000ee0*/ MOVT        R3, #0                      @ .LC110 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c0] 
    /*00000ee4*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*00000ee8*/ MOVT        SL, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61c] 
    /*00000eec*/ BL          0x0000000000000EEC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000ef0*/ STR         SL, [SP, #40]               @ 0x28 
    /*00000ef4*/ LDR         SL, [SP, #44]               @ 0x2c 
    /*00000ef8*/ MOVW        R9, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x954] 
    /*00000efc*/ MOVW        R7, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x964] 
    /*00000f00*/ MOVT        R9, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x954] 
    /*00000f04*/ MOVT        R7, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x964] 
    /*00000f08*/ MOV         R8, #0 
    RcProcShowCommParam_xf0c:
    /*00000f0c*/ LDR         R5, [SL, #4]! 
    /*00000f10*/ CMP         R5, #0 
    /*00000f14*/ BEQ         RcProcShowCommParam_xf84
    /*00000f18*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00000f1c*/ MOV         R2, R8 
    /*00000f20*/ LDR         R3, [R5, #3012]             @ 0xbc4 
    /*00000f24*/ MOV         R0, R4 
    /*00000f28*/ ADD         R6, R5, #2896               @ 0xb50 
    /*00000f2c*/ STR         R1, [SP, #4] 
    /*00000f30*/ MOV         R1, R9 
    /*00000f34*/ LDR         IP, [R5, #3028]             @ 0xbd4 
    /*00000f38*/ ADD         R6, R6, #15 
    /*00000f3c*/ STR         IP, [SP] 
    /*00000f40*/ BL          0x0000000000000F40          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000f44*/ LDRB        R2, [R5, #2896]!            @ 0xb50 
    /*00000f48*/ MOV         R1, R7 
    /*00000f4c*/ MOV         R0, R4 
    /*00000f50*/ BL          0x0000000000000F50          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowCommParam_xf54:
    /*00000f54*/ LDRB        R2, [R5, #1]! 
    /*00000f58*/ MOV         R1, R7 
    /*00000f5c*/ MOV         R0, R4 
    /*00000f60*/ BL          0x0000000000000F60          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000f64*/ CMP         R5, R6 
    /*00000f68*/ BNE         RcProcShowCommParam_xf54
    /*00000f6c*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x628] 
    /*00000f70*/ MOVW        R1, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62c] 
    /*00000f74*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x628] 
    /*00000f78*/ MOVT        R1, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62c] 
    /*00000f7c*/ MOV         R0, R4 
    /*00000f80*/ BL          0x0000000000000F80          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowCommParam_xf84:
    /*00000f84*/ CMP         SL, FP 
    /*00000f88*/ ADD         R8, R8, #1 
    /*00000f8c*/ BNE         RcProcShowCommParam_xf0c
    /*00000f90*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00000f94*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00000f98*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_apstRcCtx [R_ARM_ABS32: .bss+0x288] 
    /*00000f9c*/ ANDEQ       R0, R0, IP, LSR #32 
FUNC_END RcProcShowCommParam


FUNC_BEGIN RcProcShowGopAttr
    /*00000fa0*/ LDR         IP, [PC, #680]              @ 0x0000000000001250 
    /*00000fa4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00000fa8*/ SUB         SP, SP, #96                 @ 0x60 
    /*00000fac*/ ADD         R5, IP, #48                 @ 0x30 
    /*00000fb0*/ ADD         R4, SP, #36                 @ 0x24 
    /*00000fb4*/ MOV         R8, R0 
    RcProcShowGopAttr_xfb8:
    /*00000fb8*/ LDR         R0, [IP] 
    /*00000fbc*/ ADD         IP, IP, #16 
    /*00000fc0*/ LDR         R1, [IP, #-12] 
    /*00000fc4*/ MOV         LR, R4 
    /*00000fc8*/ LDR         R2, [IP, #-8] 
    /*00000fcc*/ ADD         R4, R4, #16 
    /*00000fd0*/ LDR         R3, [IP, #-4] 
    /*00000fd4*/ CMP         IP, R5 
    /*00000fd8*/ STMIA       LR!, {R0, R1, R2, R3} 
    /*00000fdc*/ BNE         RcProcShowGopAttr_xfb8
    /*00000fe0*/ LDR         R0, [IP] 
    /*00000fe4*/ MOV         R3, R4 
    /*00000fe8*/ LDR         R1, [IP, #4] 
    /*00000fec*/ MOVW        R4, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe0] 
    /*00000ff0*/ LDR         R2, [IP, #8] 
    /*00000ff4*/ MOVW        SL, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb50] 
    /*00000ff8*/ LDR         R5, [PC, #596]              @ 0x0000000000001254 
    /*00000ffc*/ MOVW        R9, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb28] 
    /*00001000*/ MOVT        R4, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe0] 
    /*00001004*/ MOVT        SL, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb50] 
    /*00001008*/ STMIA       R3!, {R0, R1, R2} 
    /*0000100c*/ MOVW        R1, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9dc] 
    /*00001010*/ MOV         R0, R8 
    /*00001014*/ MOVT        R1, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9dc] 
    /*00001018*/ BL          0x0000000000001018          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000101c*/ MOVW        R2, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa60] 
    /*00001020*/ MOVW        R3, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa6c] 
    /*00001024*/ MOVT        R2, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa60] 
    /*00001028*/ MOVT        R3, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa6c] 
    /*0000102c*/ STR         R2, [SP, #24] 
    /*00001030*/ STR         R3, [SP, #20] 
    /*00001034*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa78] 
    /*00001038*/ MOVW        R3, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa84] 
    /*0000103c*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa78] 
    /*00001040*/ MOVT        R3, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa84] 
    /*00001044*/ STR         R2, [SP, #16] 
    /*00001048*/ STR         R3, [SP, #12] 
    /*0000104c*/ MOVW        R2, #0                      @ .LC119 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa8c] 
    /*00001050*/ MOVW        R3, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa98] 
    /*00001054*/ MOVT        R2, #0                      @ .LC119 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa8c] 
    /*00001058*/ MOVT        R3, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa98] 
    /*0000105c*/ STR         R2, [SP, #8] 
    /*00001060*/ STR         R3, [SP, #4] 
    /*00001064*/ MOVW        R2, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaa4] 
    /*00001068*/ MOVW        R3, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa30] 
    /*0000106c*/ MOVT        R2, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaa4] 
    /*00001070*/ MOVT        R3, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa30] 
    /*00001074*/ STR         R2, [SP] 
    /*00001078*/ MOVW        R1, #0                      @ .LC114 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa38] 
    /*0000107c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00001080*/ MOVT        R1, #0                      @ .LC114 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa38] 
    /*00001084*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*00001088*/ MOV         R0, R8 
    /*0000108c*/ ADD         R7, R5, #64                 @ 0x40 
    /*00001090*/ BL          0x0000000000001090          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001094*/ MOVT        R9, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb28] 
    /*00001098*/ MOV         R6, #0 
    /*0000109c*/ B           RcProcShowGopAttr_x1114
    RcProcShowGopAttr_x10a0:
    /*000010a0*/ LDR         R3, [IP] 
    /*000010a4*/ CMP         R3, #0 
    /*000010a8*/ BEQ         RcProcShowGopAttr_x117c
    /*000010ac*/ CMP         R3, #1 
    /*000010b0*/ BEQ         RcProcShowGopAttr_x11b8
    /*000010b4*/ CMP         R3, #2 
    /*000010b8*/ BEQ         RcProcShowGopAttr_x11fc
    /*000010bc*/ CMP         R3, #3 
    /*000010c0*/ BEQ         RcProcShowGopAttr_x1240
    /*000010c4*/ STR         R4, [SP, #24] 
    /*000010c8*/ CMP         R3, #4 
    /*000010cc*/ STR         R4, [SP, #20] 
    /*000010d0*/ ADDEQ       R3, SP, #76                 @ 0x4c 
    /*000010d4*/ LDR         LR, [IP, #12] 
    /*000010d8*/ ADDNE       R3, SP, #86                 @ 0x56 
    /*000010dc*/ MOV         R2, R6 
    /*000010e0*/ MOV         R1, R9 
    /*000010e4*/ MOV         R0, R8 
    /*000010e8*/ STR         LR, [SP, #16] 
    /*000010ec*/ LDR         LR, [IP, #8] 
    /*000010f0*/ STR         R4, [SP, #8] 
    /*000010f4*/ STR         R4, [SP, #4] 
    /*000010f8*/ STR         LR, [SP, #12] 
    /*000010fc*/ LDR         IP, [IP, #4] 
    /*00001100*/ STR         IP, [SP] 
    /*00001104*/ BL          0x0000000000001104          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowGopAttr_x1108:
    /*00001108*/ CMP         R5, R7 
    /*0000110c*/ ADD         R6, R6, #1 
    /*00001110*/ BEQ         RcProcShowGopAttr_x1174
    RcProcShowGopAttr_x1114:
    /*00001114*/ LDR         IP, [R5, #4]! 
    /*00001118*/ CMP         IP, #0 
    /*0000111c*/ BEQ         RcProcShowGopAttr_x1108
    /*00001120*/ LDR         R3, [IP, #48]               @ 0x30 
    /*00001124*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00001128*/ CMP         R3, R2 
    /*0000112c*/ CMPNE       R3, #26 
    /*00001130*/ BNE         RcProcShowGopAttr_x10a0
    /*00001134*/ MOV         R2, R6 
    /*00001138*/ STR         R4, [SP, #24] 
    /*0000113c*/ MOVW        R3, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe0] 
    /*00001140*/ STR         R4, [SP, #20] 
    /*00001144*/ MOVT        R3, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe0] 
    /*00001148*/ STR         R4, [SP, #16] 
    /*0000114c*/ STR         R4, [SP, #12] 
    /*00001150*/ MOV         R1, SL 
    /*00001154*/ STR         R4, [SP, #8] 
    /*00001158*/ MOV         R0, R8 
    /*0000115c*/ STR         R4, [SP, #4] 
    /*00001160*/ ADD         R6, R6, #1 
    /*00001164*/ STR         R4, [SP] 
    /*00001168*/ BL          0x0000000000001168          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000116c*/ CMP         R5, R7 
    /*00001170*/ BNE         RcProcShowGopAttr_x1114
    RcProcShowGopAttr_x1174:
    /*00001174*/ ADD         SP, SP, #96                 @ 0x60 
    /*00001178*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    RcProcShowGopAttr_x117c:
    /*0000117c*/ STR         R4, [SP, #24] 
    /*00001180*/ MOVW        R1, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xab0] 
    /*00001184*/ STR         R4, [SP, #20] 
    /*00001188*/ MOVT        R1, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0xab0] 
    /*0000118c*/ STR         R4, [SP, #16] 
    /*00001190*/ ADD         R3, SP, #36                 @ 0x24 
    /*00001194*/ STR         R4, [SP, #12] 
    /*00001198*/ MOV         R2, R6 
    /*0000119c*/ STR         R4, [SP, #8] 
    /*000011a0*/ MOV         R0, R8 
    /*000011a4*/ STR         R4, [SP, #4] 
    /*000011a8*/ LDR         IP, [IP, #4] 
    /*000011ac*/ STR         IP, [SP] 
    /*000011b0*/ BL          0x00000000000011B0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000011b4*/ B           RcProcShowGopAttr_x1108
    RcProcShowGopAttr_x11b8:
    /*000011b8*/ STR         R4, [SP, #24] 
    /*000011bc*/ MOVW        R1, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xad8] 
    /*000011c0*/ STR         R4, [SP, #20] 
    /*000011c4*/ MOVT        R1, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0xad8] 
    /*000011c8*/ STR         R4, [SP, #16] 
    /*000011cc*/ ADD         R3, SP, #46                 @ 0x2e 
    /*000011d0*/ STR         R4, [SP, #12] 
    /*000011d4*/ MOV         R2, R6 
    /*000011d8*/ LDR         LR, [IP, #20] 
    /*000011dc*/ MOV         R0, R8 
    /*000011e0*/ STR         LR, [SP, #8] 
    /*000011e4*/ LDR         LR, [IP, #16] 
    /*000011e8*/ STR         LR, [SP, #4] 
    /*000011ec*/ LDR         IP, [IP, #4] 
    /*000011f0*/ STR         IP, [SP] 
    /*000011f4*/ BL          0x00000000000011F4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000011f8*/ B           RcProcShowGopAttr_x1108
    RcProcShowGopAttr_x11fc:
    /*000011fc*/ LDR         R0, [IP, #28] 
    /*00001200*/ ADD         R3, SP, #56                 @ 0x38 
    /*00001204*/ MOVW        R1, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb00] 
    RcProcShowGopAttr_x1208:
    /*00001208*/ STR         R0, [SP, #24] 
    /*0000120c*/ MOVT        R1, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb00] 
    /*00001210*/ LDR         R0, [IP, #24] 
    /*00001214*/ MOV         R2, R6 
    /*00001218*/ STR         R4, [SP, #16] 
    /*0000121c*/ STR         R4, [SP, #12] 
    /*00001220*/ STR         R0, [SP, #20] 
    /*00001224*/ MOV         R0, R8 
    /*00001228*/ STR         R4, [SP, #8] 
    /*0000122c*/ STR         R4, [SP, #4] 
    /*00001230*/ LDR         IP, [IP, #4] 
    /*00001234*/ STR         IP, [SP] 
    /*00001238*/ BL          0x0000000000001238          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000123c*/ B           RcProcShowGopAttr_x1108
    RcProcShowGopAttr_x1240:
    /*00001240*/ LDR         R0, [IP, #28] 
    /*00001244*/ MOVW        R1, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb00] 
    /*00001248*/ ADD         R3, SP, #66                 @ 0x42 
    /*0000124c*/ B           RcProcShowGopAttr_x1208
    /*00001250*/ ANDEQ       R0, R0, R0, ASR R0 
    /*00001254*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_apstRcCtx [R_ARM_ABS32: .bss+0x288] 
FUNC_END RcProcShowGopAttr


FUNC_BEGIN RcProcShowRcParam
    /*00001258*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000125c*/ SUB         SP, SP, #52                 @ 0x34 
    /*00001260*/ LDR         R5, [PC, #1136]             @ 0x00000000000016d8 
    /*00001264*/ MOV         R7, R0 
    /*00001268*/ MOVW        R1, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb78] 
    /*0000126c*/ MOVT        R1, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb78] 
    /*00001270*/ BL          0x0000000000001270          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001274*/ MOVW        FP, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbf8] 
    /*00001278*/ MOVW        R3, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc08] 
    /*0000127c*/ MOVT        FP, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbf8] 
    /*00001280*/ MOVT        R3, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc08] 
    /*00001284*/ STR         FP, [SP, #24] 
    /*00001288*/ STR         R3, [SP, #20] 
    /*0000128c*/ MOVW        SL, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x44c] 
    /*00001290*/ MOVW        R9, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x444] 
    /*00001294*/ MOVT        SL, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x44c] 
    /*00001298*/ MOVT        R9, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x444] 
    /*0000129c*/ STR         SL, [SP, #16] 
    /*000012a0*/ MOVW        R3, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f8] 
    /*000012a4*/ STR         R9, [SP, #12] 
    /*000012a8*/ MOVT        R3, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f8] 
    /*000012ac*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x454] 
    /*000012b0*/ STR         R3, [SP, #44]               @ 0x2c 
    /*000012b4*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x454] 
    /*000012b8*/ STR         R3, [SP, #8] 
    /*000012bc*/ MOV         R0, R7 
    /*000012c0*/ STR         R2, [SP, #40]               @ 0x28 
    /*000012c4*/ MOVW        R3, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc10] 
    /*000012c8*/ STR         R2, [SP, #4] 
    /*000012cc*/ MOVT        R3, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc10] 
    /*000012d0*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*000012d4*/ STR         R3, [SP, #36]               @ 0x24 
    /*000012d8*/ STR         R3, [SP] 
    /*000012dc*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*000012e0*/ MOVW        R3, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbcc] 
    /*000012e4*/ MOVW        R1, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbd8] 
    /*000012e8*/ MOVT        R3, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbcc] 
    /*000012ec*/ MOVT        R1, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbd8] 
    /*000012f0*/ BL          0x00000000000012F0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000012f4*/ ADD         R8, R5, #64                 @ 0x40 
    /*000012f8*/ MOVW        R3, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc1c] 
    /*000012fc*/ MOV         R6, #0 
    /*00001300*/ MOVT        R3, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc1c] 
    /*00001304*/ MOV         R4, R5 
    /*00001308*/ STR         R3, [SP, #32] 
    /*0000130c*/ B           RcProcShowRcParam_x131c
    RcProcShowRcParam_x1310:
    /*00001310*/ CMP         R4, R8 
    /*00001314*/ ADD         R6, R6, #1 
    /*00001318*/ BEQ         RcProcShowRcParam_x138c
    RcProcShowRcParam_x131c:
    /*0000131c*/ LDR         IP, [R4, #4]! 
    /*00001320*/ CMP         IP, #0 
    /*00001324*/ BEQ         RcProcShowRcParam_x1310
    /*00001328*/ LDR         R3, [IP, #52]               @ 0x34 
    /*0000132c*/ CMP         R3, #1 
    /*00001330*/ BNE         RcProcShowRcParam_x1310
    /*00001334*/ LDR         R0, [IP, #248]              @ 0xf8 
    /*00001338*/ MOV         R2, R6 
    /*0000133c*/ LDR         R3, [IP, #216]              @ 0xd8 
    /*00001340*/ ADD         R6, R6, #1 
    /*00001344*/ LDR         R1, [SP, #32] 
    /*00001348*/ STR         R0, [SP, #24] 
    /*0000134c*/ MOV         R0, R7 
    /*00001350*/ LDR         LR, [IP, #244]              @ 0xf4 
    /*00001354*/ STR         LR, [SP, #20] 
    /*00001358*/ LDR         LR, [IP, #232]              @ 0xe8 
    /*0000135c*/ STR         LR, [SP, #16] 
    /*00001360*/ LDR         LR, [IP, #236]              @ 0xec 
    /*00001364*/ STR         LR, [SP, #12] 
    /*00001368*/ LDR         LR, [IP, #228]              @ 0xe4 
    /*0000136c*/ STR         LR, [SP, #8] 
    /*00001370*/ LDR         LR, [IP, #224]              @ 0xe0 
    /*00001374*/ STR         LR, [SP, #4] 
    /*00001378*/ LDR         IP, [IP, #220]              @ 0xdc 
    /*0000137c*/ STR         IP, [SP] 
    /*00001380*/ BL          0x0000000000001380          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001384*/ CMP         R4, R8 
    /*00001388*/ BNE         RcProcShowRcParam_x131c
    RcProcShowRcParam_x138c:
    /*0000138c*/ MOVW        R1, #0                      @ .LC134 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc3c] 
    /*00001390*/ MOV         R0, R7 
    /*00001394*/ MOVT        R1, #0                      @ .LC134 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc3c] 
    /*00001398*/ LDR         R6, [PC, #824]              @ 0x00000000000016d8 
    /*0000139c*/ BL          0x000000000000139C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000013a0*/ LDR         R2, [SP, #40]               @ 0x28 
    /*000013a4*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*000013a8*/ MOVW        R1, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbcc] 
    /*000013ac*/ STR         R9, [SP, #16] 
    /*000013b0*/ MOVT        R1, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbcc] 
    /*000013b4*/ STR         R2, [SP, #8] 
    /*000013b8*/ MOV         R0, R7 
    /*000013bc*/ LDR         R2, [SP, #36]               @ 0x24 
    /*000013c0*/ MOVW        R9, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcbc] 
    /*000013c4*/ STR         R3, [SP, #12] 
    /*000013c8*/ MOVW        R3, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc94] 
    /*000013cc*/ STR         R1, [SP] 
    /*000013d0*/ MOVT        R3, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc94] 
    /*000013d4*/ STR         R2, [SP, #4] 
    /*000013d8*/ MOVW        R1, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc9c] 
    /*000013dc*/ STR         FP, [SP, #24] 
    /*000013e0*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*000013e4*/ STR         SL, [SP, #20] 
    /*000013e8*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*000013ec*/ MOVT        R1, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc9c] 
    /*000013f0*/ MOVT        R9, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcbc] 
    /*000013f4*/ BL          0x00000000000013F4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000013f8*/ MOV         R8, #0 
    RcProcShowRcParam_x13fc:
    /*000013fc*/ LDR         IP, [R6, #4]! 
    /*00001400*/ CMP         IP, #0 
    /*00001404*/ BEQ         RcProcShowRcParam_x1468
    /*00001408*/ LDR         R3, [IP, #52]               @ 0x34 
    /*0000140c*/ SUB         R2, R3, #2 
    /*00001410*/ CMP         R3, #0 
    /*00001414*/ CMPNE       R2, #2 
    /*00001418*/ BHI         RcProcShowRcParam_x1468
    /*0000141c*/ LDR         LR, [IP, #232]              @ 0xe8 
    /*00001420*/ MOV         R2, R8 
    /*00001424*/ LDR         R3, [IP, #224]              @ 0xe0 
    /*00001428*/ MOV         R1, R9 
    /*0000142c*/ MOV         R0, R7 
    /*00001430*/ STR         LR, [SP, #24] 
    /*00001434*/ LDR         LR, [IP, #236]              @ 0xec 
    /*00001438*/ STR         LR, [SP, #20] 
    /*0000143c*/ LDR         LR, [IP, #244]              @ 0xf4 
    /*00001440*/ STR         LR, [SP, #16] 
    /*00001444*/ LDR         LR, [IP, #240]              @ 0xf0 
    /*00001448*/ STR         LR, [SP, #12] 
    /*0000144c*/ LDR         LR, [IP, #248]              @ 0xf8 
    /*00001450*/ STR         LR, [SP, #8] 
    /*00001454*/ LDR         LR, [IP, #220]              @ 0xdc 
    /*00001458*/ STR         LR, [SP, #4] 
    /*0000145c*/ LDR         IP, [IP, #216]              @ 0xd8 
    /*00001460*/ STR         IP, [SP] 
    /*00001464*/ BL          0x0000000000001464          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowRcParam_x1468:
    /*00001468*/ CMP         R6, R4 
    /*0000146c*/ ADD         R8, R8, #1 
    /*00001470*/ BNE         RcProcShowRcParam_x13fc
    /*00001474*/ MOVW        R1, #0                      @ .LC138 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcdc] 
    /*00001478*/ MOV         R0, R7 
    /*0000147c*/ MOVT        R1, #0                      @ .LC138 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcdc] 
    /*00001480*/ MOVW        R9, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd8c] 
    /*00001484*/ BL          0x0000000000001484          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001488*/ MOVW        R2, #0                      @ .LC141 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd58] 
    /*0000148c*/ MOVW        R3, #0                      @ .LC142 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd64] 
    /*00001490*/ MOVT        R2, #0                      @ .LC141 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd58] 
    /*00001494*/ MOVT        R3, #0                      @ .LC142 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd64] 
    /*00001498*/ STR         R2, [SP, #12] 
    /*0000149c*/ STR         R3, [SP, #8] 
    /*000014a0*/ MOVW        R2, #0                      @ .LC143 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd74] 
    /*000014a4*/ MOVW        R3, #0                      @ .LC144 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd80] 
    /*000014a8*/ MOVT        R2, #0                      @ .LC143 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd74] 
    /*000014ac*/ MOVT        R3, #0                      @ .LC144 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd80] 
    /*000014b0*/ STR         R2, [SP, #4] 
    /*000014b4*/ STR         R3, [SP] 
    /*000014b8*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*000014bc*/ MOVW        R3, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd30] 
    /*000014c0*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*000014c4*/ MOVT        R3, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd30] 
    /*000014c8*/ MOVW        R1, #0                      @ .LC140 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd3c] 
    /*000014cc*/ MOV         R0, R7 
    /*000014d0*/ MOVT        R1, #0                      @ .LC140 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd3c] 
    /*000014d4*/ LDR         R4, [PC, #508]              @ 0x00000000000016d8 
    /*000014d8*/ BL          0x00000000000014D8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000014dc*/ MOVT        R9, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd8c] 
    /*000014e0*/ MOV         R8, #0 
    /*000014e4*/ B           RcProcShowRcParam_x14f4
    RcProcShowRcParam_x14e8:
    /*000014e8*/ CMP         R4, R6 
    /*000014ec*/ ADD         R8, R8, #1 
    /*000014f0*/ BEQ         RcProcShowRcParam_x154c
    RcProcShowRcParam_x14f4:
    /*000014f4*/ LDR         IP, [R4, #4]! 
    /*000014f8*/ CMP         IP, #0 
    /*000014fc*/ BEQ         RcProcShowRcParam_x14e8
    /*00001500*/ LDR         R3, [IP, #52]               @ 0x34 
    /*00001504*/ CMP         R3, #2 
    /*00001508*/ BNE         RcProcShowRcParam_x14e8
    /*0000150c*/ LDR         R0, [IP, #188]              @ 0xbc 
    /*00001510*/ MOV         R2, R8 
    /*00001514*/ LDR         R3, [IP, #256]              @ 0x100 
    /*00001518*/ MOV         R1, R9 
    /*0000151c*/ ADD         R8, R8, #1 
    /*00001520*/ STR         R0, [SP, #12] 
    /*00001524*/ MOV         R0, R7 
    /*00001528*/ LDR         LR, [IP, #260]              @ 0x104 
    /*0000152c*/ STR         LR, [SP, #8] 
    /*00001530*/ LDR         LR, [IP, #3504]             @ 0xdb0 
    /*00001534*/ STR         LR, [SP, #4] 
    /*00001538*/ LDR         IP, [IP, #264]              @ 0x108 
    /*0000153c*/ STR         IP, [SP] 
    /*00001540*/ BL          0x0000000000001540          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001544*/ CMP         R4, R6 
    /*00001548*/ BNE         RcProcShowRcParam_x14f4
    RcProcShowRcParam_x154c:
    /*0000154c*/ MOVW        R1, #0                      @ .LC146 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xda8] 
    /*00001550*/ MOV         R0, R7 
    /*00001554*/ MOVT        R1, #0                      @ .LC146 [R_ARM_MOVT_ABS: .rodata.str1.4+0xda8] 
    /*00001558*/ MOVW        R9, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe54] 
    /*0000155c*/ BL          0x000000000000155C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001560*/ MOVW        R2, #0                      @ .LC149 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe24] 
    /*00001564*/ MOVW        R3, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe34] 
    /*00001568*/ MOVT        R2, #0                      @ .LC149 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe24] 
    /*0000156c*/ MOVT        R3, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe34] 
    /*00001570*/ STR         R2, [SP, #8] 
    /*00001574*/ STR         R3, [SP, #4] 
    /*00001578*/ MOVW        R2, #0                      @ .LC151 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe44] 
    /*0000157c*/ MOVW        R3, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdfc] 
    /*00001580*/ MOVT        R2, #0                      @ .LC151 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe44] 
    /*00001584*/ MOVT        R3, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdfc] 
    /*00001588*/ STR         R2, [SP] 
    /*0000158c*/ MOVW        R1, #0                      @ .LC148 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe0c] 
    /*00001590*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00001594*/ MOVT        R1, #0                      @ .LC148 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe0c] 
    /*00001598*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*0000159c*/ MOV         R0, R7 
    /*000015a0*/ LDR         R4, [PC, #304]              @ 0x00000000000016d8 
    /*000015a4*/ BL          0x00000000000015A4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000015a8*/ MOVT        R9, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe54] 
    /*000015ac*/ MOV         R8, #0 
    /*000015b0*/ B           RcProcShowRcParam_x15c0
    RcProcShowRcParam_x15b4:
    /*000015b4*/ CMP         R4, R6 
    /*000015b8*/ ADD         R8, R8, #1 
    /*000015bc*/ BEQ         RcProcShowRcParam_x1610
    RcProcShowRcParam_x15c0:
    /*000015c0*/ LDR         IP, [R4, #4]! 
    /*000015c4*/ CMP         IP, #0 
    /*000015c8*/ BEQ         RcProcShowRcParam_x15b4
    /*000015cc*/ LDR         R3, [IP, #52]               @ 0x34 
    /*000015d0*/ CMP         R3, #3 
    /*000015d4*/ BNE         RcProcShowRcParam_x15b4
    /*000015d8*/ LDR         R0, [IP, #276]              @ 0x114 
    /*000015dc*/ MOV         R2, R8 
    /*000015e0*/ LDR         R3, [IP, #272]              @ 0x110 
    /*000015e4*/ MOV         R1, R9 
    /*000015e8*/ ADD         R8, R8, #1 
    /*000015ec*/ STR         R0, [SP, #8] 
    /*000015f0*/ MOV         R0, R7 
    /*000015f4*/ LDR         LR, [IP, #280]              @ 0x118 
    /*000015f8*/ STR         LR, [SP, #4] 
    /*000015fc*/ LDR         IP, [IP, #268]              @ 0x10c 
    /*00001600*/ STR         IP, [SP] 
    /*00001604*/ BL          0x0000000000001604          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001608*/ CMP         R4, R6 
    /*0000160c*/ BNE         RcProcShowRcParam_x15c0
    RcProcShowRcParam_x1610:
    /*00001610*/ MOVW        R1, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe6c] 
    /*00001614*/ MOV         R0, R7 
    /*00001618*/ MOVT        R1, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe6c] 
    /*0000161c*/ MOVW        R8, #0                      @ .LC158 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0c] 
    /*00001620*/ BL          0x0000000000001620          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001624*/ MOVW        R2, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xed8] 
    /*00001628*/ MOVW        R3, #0                      @ .LC156 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xef0] 
    /*0000162c*/ MOVT        R2, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0xed8] 
    /*00001630*/ MOVT        R3, #0                      @ .LC156 [R_ARM_MOVT_ABS: .rodata.str1.4+0xef0] 
    /*00001634*/ STR         R2, [SP, #8] 
    /*00001638*/ STR         R3, [SP, #4] 
    /*0000163c*/ MOVW        R2, #0                      @ .LC157 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf00] 
    /*00001640*/ MOVW        R3, #0                      @ .LC141 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd58] 
    /*00001644*/ MOVT        R2, #0                      @ .LC157 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf00] 
    /*00001648*/ MOVT        R3, #0                      @ .LC141 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd58] 
    /*0000164c*/ STR         R2, [SP] 
    /*00001650*/ MOVW        R1, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xec0] 
    /*00001654*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00001658*/ MOVT        R1, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0xec0] 
    /*0000165c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*00001660*/ MOV         R0, R7 
    /*00001664*/ MOVT        R8, #0                      @ .LC158 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0c] 
    /*00001668*/ BL          0x0000000000001668          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000166c*/ MOV         R4, #0 
    /*00001670*/ B           RcProcShowRcParam_x1680
    RcProcShowRcParam_x1674:
    /*00001674*/ CMP         R5, R6 
    /*00001678*/ ADD         R4, R4, #1 
    /*0000167c*/ BEQ         RcProcShowRcParam_x16d0
    RcProcShowRcParam_x1680:
    /*00001680*/ LDR         IP, [R5, #4]! 
    /*00001684*/ CMP         IP, #0 
    /*00001688*/ BEQ         RcProcShowRcParam_x1674
    /*0000168c*/ LDR         R3, [IP, #52]               @ 0x34 
    /*00001690*/ CMP         R3, #4 
    /*00001694*/ BNE         RcProcShowRcParam_x1674
    /*00001698*/ LDR         LR, [IP, #288]              @ 0x120 
    /*0000169c*/ MOV         R2, R4 
    /*000016a0*/ LDR         R3, [IP, #188]              @ 0xbc 
    /*000016a4*/ MOV         R1, R8 
    /*000016a8*/ MOV         R0, R7 
    /*000016ac*/ ADD         R4, R4, #1 
    /*000016b0*/ STR         LR, [SP, #8] 
    /*000016b4*/ LDR         LR, [IP, #284]              @ 0x11c 
    /*000016b8*/ STR         LR, [SP, #4] 
    /*000016bc*/ LDR         IP, [IP, #192]              @ 0xc0 
    /*000016c0*/ STR         IP, [SP] 
    /*000016c4*/ BL          0x00000000000016C4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000016c8*/ CMP         R5, R6 
    /*000016cc*/ BNE         RcProcShowRcParam_x1680
    RcProcShowRcParam_x16d0:
    /*000016d0*/ ADD         SP, SP, #52                 @ 0x34 
    /*000016d4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*000016d8*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_apstRcCtx [R_ARM_ABS32: .bss+0x288] 
FUNC_END RcProcShowRcParam


FUNC_BEGIN RcProcShowRunInfo
    /*000016dc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000016e0*/ SUB         SP, SP, #48                 @ 0x30 
    /*000016e4*/ MOV         R5, R0 
    /*000016e8*/ MOVW        R1, #0                      @ .LC159 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf24] 
    /*000016ec*/ LDR         R4, [PC, #404]              @ 0x0000000000001888 
    /*000016f0*/ MOVT        R1, #0                      @ .LC159 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf24] 
    /*000016f4*/ BL          0x00000000000016F4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000016f8*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x454] 
    /*000016fc*/ MOVW        R3, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f8] 
    /*00001700*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x454] 
    /*00001704*/ MOVT        R3, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f8] 
    /*00001708*/ STR         R2, [SP, #32] 
    /*0000170c*/ STR         R3, [SP, #28] 
    /*00001710*/ MOVW        R2, #0                      @ .LC162 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfb0] 
    /*00001714*/ MOVW        R3, #0                      @ .LC163 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfb8] 
    /*00001718*/ MOVT        R2, #0                      @ .LC162 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfb0] 
    /*0000171c*/ MOVT        R3, #0                      @ .LC163 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfb8] 
    /*00001720*/ STR         R2, [SP, #24] 
    /*00001724*/ STR         R3, [SP, #20] 
    /*00001728*/ MOVW        R2, #0                      @ .LC164 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfc4] 
    /*0000172c*/ MOVW        R3, #0                      @ .LC165 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfcc] 
    /*00001730*/ MOVT        R2, #0                      @ .LC164 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfc4] 
    /*00001734*/ MOVT        R3, #0                      @ .LC165 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfcc] 
    /*00001738*/ STR         R2, [SP, #16] 
    /*0000173c*/ STR         R3, [SP, #12] 
    /*00001740*/ MOVW        R2, #0                      @ .LC166 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfd8] 
    /*00001744*/ MOVW        R3, #0                      @ .LC167 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfe4] 
    /*00001748*/ MOVT        R2, #0                      @ .LC166 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfd8] 
    /*0000174c*/ MOVT        R3, #0                      @ .LC167 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfe4] 
    /*00001750*/ STR         R2, [SP, #8] 
    /*00001754*/ STR         R3, [SP, #4] 
    /*00001758*/ MOVW        R2, #0                      @ .LC168 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfec] 
    /*0000175c*/ MOV         R0, R5 
    /*00001760*/ MOVT        R2, #0                      @ .LC168 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfec] 
    /*00001764*/ MOVW        R3, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf78] 
    /*00001768*/ STR         R2, [SP] 
    /*0000176c*/ MOVT        R3, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf78] 
    /*00001770*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*00001774*/ MOVW        R1, #0                      @ .LC161 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf84] 
    /*00001778*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*0000177c*/ MOVT        R1, #0                      @ .LC161 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf84] 
    /*00001780*/ MOVW        R8, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe0] 
    /*00001784*/ MOVW        R6, #0                      @ .LC170 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1020] 
    /*00001788*/ MOVW        R9, #0                      @ .LC169 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xff4] 
    /*0000178c*/ ADD         R7, R4, #64                 @ 0x40 
    /*00001790*/ BL          0x0000000000001790          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001794*/ MOVT        R8, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe0] 
    /*00001798*/ MOVT        R6, #0                      @ .LC170 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1020] 
    /*0000179c*/ MOVT        R9, #0                      @ .LC169 [R_ARM_MOVT_ABS: .rodata.str1.4+0xff4] 
    /*000017a0*/ MOV         SL, #0 
    /*000017a4*/ B           RcProcShowRunInfo_x1834
    RcProcShowRunInfo_x17a8:
    /*000017a8*/ LDR         IP, [R3, #3256]             @ 0xcb8 
    /*000017ac*/ CMP         LR, #2 
    /*000017b0*/ LSR         IP, IP, #4 
    /*000017b4*/ BNE         RcProcShowRunInfo_x185c
    /*000017b8*/ LDR         LR, [R3, #2000]             @ 0x7d0 
    /*000017bc*/ MOV         R1, R9 
    /*000017c0*/ STR         LR, [SP, #40]               @ 0x28 
    /*000017c4*/ LDR         LR, [R3, #2004]             @ 0x7d4 
    /*000017c8*/ STR         LR, [SP, #36]               @ 0x24 
    /*000017cc*/ LDR         LR, [R3, #1996]             @ 0x7cc 
    /*000017d0*/ STR         LR, [SP, #32] 
    /*000017d4*/ LDR         LR, [R3, #3500]             @ 0xdac 
    /*000017d8*/ STR         IP, [SP, #24] 
    /*000017dc*/ STR         LR, [SP, #28] 
    RcProcShowRunInfo_x17e0:
    /*000017e0*/ LDR         IP, [R3, #1640]             @ 0x668 
    /*000017e4*/ LSR         IP, IP, #10 
    /*000017e8*/ STR         IP, [SP, #20] 
    /*000017ec*/ LDR         IP, [R3, #1992]             @ 0x7c8 
    /*000017f0*/ LSR         IP, IP, #10 
    /*000017f4*/ STR         IP, [SP, #16] 
    /*000017f8*/ LDR         IP, [R3, #344]              @ 0x158 
    /*000017fc*/ ASR         IP, IP, #10 
    /*00001800*/ STR         IP, [SP, #12] 
    /*00001804*/ LDR         IP, [R3, #1536]             @ 0x600 
    /*00001808*/ STR         IP, [SP, #8] 
    /*0000180c*/ LDR         IP, [R3, #1528]             @ 0x5f8 
    /*00001810*/ LDR         LR, [R3, #1532]             @ 0x5fc 
    /*00001814*/ LSR         R3, IP, #10 
    /*00001818*/ ORR         R3, R3, LR, LSL #22 
    /*0000181c*/ LSR         LR, LR, #10 
    /*00001820*/ STM         SP, {R3, LR} 
    /*00001824*/ BL          0x0000000000001824          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcShowRunInfo_x1828:
    /*00001828*/ CMP         R7, R4 
    /*0000182c*/ ADD         SL, SL, #1 
    /*00001830*/ BEQ         RcProcShowRunInfo_x1880
    RcProcShowRunInfo_x1834:
    /*00001834*/ LDR         R3, [R4, #4]! 
    /*00001838*/ MOV         IP, #0 
    /*0000183c*/ MOV         R2, SL 
    /*00001840*/ MOV         R1, R6 
    /*00001844*/ CMP         R3, IP 
    /*00001848*/ MOV         R0, R5 
    /*0000184c*/ BEQ         RcProcShowRunInfo_x1828
    /*00001850*/ LDR         LR, [R3, #52]               @ 0x34 
    /*00001854*/ CMP         LR, #4 
    /*00001858*/ BLS         RcProcShowRunInfo_x17a8
    RcProcShowRunInfo_x185c:
    /*0000185c*/ LDR         LR, [R3, #2000]             @ 0x7d0 
    /*00001860*/ STR         LR, [SP, #40]               @ 0x28 
    /*00001864*/ LDR         LR, [R3, #2004]             @ 0x7d4 
    /*00001868*/ STR         LR, [SP, #36]               @ 0x24 
    /*0000186c*/ LDR         LR, [R3, #1996]             @ 0x7cc 
    /*00001870*/ STR         R8, [SP, #28] 
    /*00001874*/ STR         IP, [SP, #24] 
    /*00001878*/ STR         LR, [SP, #32] 
    /*0000187c*/ B           RcProcShowRunInfo_x17e0
    RcProcShowRunInfo_x1880:
    /*00001880*/ ADD         SP, SP, #48                 @ 0x30 
    /*00001884*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*00001888*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_apstRcCtx [R_ARM_ABS32: .bss+0x288] 
FUNC_END RcProcShowRunInfo


FUNC_BEGIN RcProcPerfomance
    /*0000188c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00001890*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00001894*/ MOV         FP, R0 
    /*00001898*/ MOVW        R1, #0                      @ .LC171 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x104c] 
    /*0000189c*/ MOVT        R1, #0                      @ .LC171 [R_ARM_MOVT_ABS: .rodata.str1.4+0x104c] 
    /*000018a0*/ LDR         R6, [PC, #196]              @ 0x000000000000196c 
    /*000018a4*/ BL          0x00000000000018A4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000018a8*/ MOVW        R2, #0                      @ .LC174 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10c8] 
    /*000018ac*/ MOVW        R3, #0                      @ .LC175 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10d4] 
    /*000018b0*/ MOVT        R2, #0                      @ .LC174 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10c8] 
    /*000018b4*/ MOVT        R3, #0                      @ .LC175 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10d4] 
    /*000018b8*/ STR         R2, [SP, #12] 
    /*000018bc*/ STR         R3, [SP, #8] 
    /*000018c0*/ MOVW        R2, #0                      @ .LC176 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10e4] 
    /*000018c4*/ MOVW        R3, #0                      @ .LC177 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10f0] 
    /*000018c8*/ MOVT        R2, #0                      @ .LC176 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10e4] 
    /*000018cc*/ MOVT        R3, #0                      @ .LC177 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10f0] 
    /*000018d0*/ STR         R2, [SP, #4] 
    /*000018d4*/ STR         R3, [SP] 
    /*000018d8*/ MOV         R0, FP 
    /*000018dc*/ MOVW        R3, #0                      @ .LC172 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10a0] 
    /*000018e0*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68] 
    /*000018e4*/ MOVT        R3, #0                      @ .LC172 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10a0] 
    /*000018e8*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68] 
    /*000018ec*/ MOVW        R1, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10ac] 
    /*000018f0*/ MOVT        R1, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10ac] 
    /*000018f4*/ BL          0x00000000000018F4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000018f8*/ MOVW        R7, #0                      @ .LC178 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1100] 
    /*000018fc*/ MOVT        R7, #0                      @ .LC178 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1100] 
    /*00001900*/ MOV         SL, #0 
    RcProcPerfomance_x1904:
    /*00001904*/ LDR         LR, [R6, #4]! 
    /*00001908*/ MOV         R2, SL 
    /*0000190c*/ MOV         R1, R7 
    /*00001910*/ MOV         R0, FP 
    /*00001914*/ CMP         LR, #0 
    /*00001918*/ ADD         SL, SL, #1 
    /*0000191c*/ ADD         IP, LR, #2496               @ 0x9c0 
    /*00001920*/ ADD         R3, LR, #2480               @ 0x9b0 
    /*00001924*/ BEQ         RcProcPerfomance_x1958
    /*00001928*/ LDRD        R4, [IP] 
    /*0000192c*/ LDRD        R8, [R3] 
    /*00001930*/ STRD        R4, [SP, #24] 
    /*00001934*/ ADDS        R4, R4, R8 
    /*00001938*/ ADC         R5, R5, R9 
    /*0000193c*/ STRD        R4, [SP, #32] 
    /*00001940*/ LDRD        R4, [IP, #-8] 
    /*00001944*/ STRD        R8, [SP, #8] 
    /*00001948*/ STRD        R4, [SP, #16] 
    /*0000194c*/ LDRD        R4, [R3, #-8] 
    /*00001950*/ STRD        R4, [SP] 
    /*00001954*/ BL          0x0000000000001954          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    RcProcPerfomance_x1958:
    /*00001958*/ LDR         R3, [PC, #16]               @ 0x0000000000001970 
    /*0000195c*/ CMP         R6, R3 
    /*00001960*/ BNE         RcProcPerfomance_x1904
    /*00001964*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00001968*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000196c*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_apstRcCtx [R_ARM_ABS32: .bss+0x288] 
    /*00001970*/ ANDEQ       R0, R0, IP, LSR R0          @ g_apstRcCtx [R_ARM_ABS32: .bss+0x288] 
FUNC_END RcProcPerfomance


FUNC_BEGIN RcProcShow
    /*00001974*/ PUSH        {R4, R5, R6, LR} 
    /*00001978*/ MOV         R4, R0 
    /*0000197c*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001980*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001984*/ BL          0x0000000000001984          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00001988*/ SUBS        R5, R0, #0 
    /*0000198c*/ BNE         RcProcShow_x19f4
    /*00001990*/ MOV         R0, R4 
    /*00001994*/ MOVW        R1, #0                      @ .LC179 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1124] 
    /*00001998*/ MOVT        R1, #0                      @ .LC179 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1124] 
    /*0000199c*/ BL          0x000000000000199C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000019a0*/ MOV         R0, R4 
    /*000019a4*/ BL          0x00000000000019A4          @ RcProcShowBaseParam [R_ARM_CALL: .text+0x2c4] 
    /*000019a8*/ MOV         R0, R4 
    /*000019ac*/ BL          0x00000000000019AC          @ RcProcShowCommParam [R_ARM_CALL: .text+0x92c] 
    /*000019b0*/ MOV         R0, R4 
    /*000019b4*/ BL          0x00000000000019B4          @ RcProcShowGopAttr [R_ARM_CALL: .text+0xfa0] 
    /*000019b8*/ MOV         R0, R4 
    /*000019bc*/ BL          0x00000000000019BC          @ RcProcShowRcParam [R_ARM_CALL: .text+0x1258] 
    /*000019c0*/ MOV         R0, R4 
    /*000019c4*/ BL          0x00000000000019C4          @ RcProcShowRunInfo [R_ARM_CALL: .text+0x16dc] 
    /*000019c8*/ MOV         R0, R4 
    /*000019cc*/ BL          0x00000000000019CC          @ RcProcShowDeBreathEffectProc [R_ARM_CALL: .text+0x80] 
    /*000019d0*/ MOV         R0, R4 
    /*000019d4*/ BL          0x00000000000019D4          @ RcProcShowHierarchicalQpProc [R_ARM_CALL: .text+0x190] 
    /*000019d8*/ MOV         R0, R4 
    /*000019dc*/ BL          0x00000000000019DC          @ RcProcPerfomance [R_ARM_CALL: .text+0x188c] 
    /*000019e0*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000019e4*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000019e8*/ BL          0x00000000000019E8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000019ec*/ MOV         R0, R5 
    /*000019f0*/ POP         {R4, R5, R6, PC} 
    RcProcShow_x19f4:
    /*000019f4*/ MOV         R0, #65024                  @ 0xfe00 
    /*000019f8*/ MOVT        R0, #65535                  @ 0xffff 
    /*000019fc*/ POP         {R4, R5, R6, PC} 
FUNC_END RcProcShow


FUNC_BEGIN RC_ModInit
    /*00001a00*/ PUSH        {R4, R5, LR} 
    /*00001a04*/ SUB         SP, SP, #108                @ 0x6c 
    /*00001a08*/ LDR         LR, [PC, #252]              @ 0x0000000000001b0c 
    /*00001a0c*/ ADD         IP, SP, #4 
    /*00001a10*/ LDM         LR!, {R0, R1, R2, R3} 
    /*00001a14*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*00001a18*/ LDM         LR, {R0, R1, R2, R3} 
    /*00001a1c*/ STMIA       IP!, {R0, R1, R2} 
    /*00001a20*/ MOV         R2, #70                     @ 0x46 
    /*00001a24*/ MOV         R1, #0 
    /*00001a28*/ ADD         R0, SP, #34                 @ 0x22 
    /*00001a2c*/ STRH        R3, [IP] 
    /*00001a30*/ BL          0x0000000000001A30          @ memset [R_ARM_CALL: +0x0] 
    /*00001a34*/ MOVW        R0, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1180] 
    /*00001a38*/ MOV         R1, #0 
    /*00001a3c*/ MOVT        R0, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1180] 
    /*00001a40*/ BL          0x0000000000001A40          @ osal_create_proc_entry [R_ARM_CALL: +0x0] 
    /*00001a44*/ SUBS        R2, R0, #0 
    /*00001a48*/ BEQ         RC_ModInit_x1b04
    /*00001a4c*/ MOVW        R3, #0                      @ RcProcShow [R_ARM_MOVW_ABS_NC: .text+0x1974] 
    /*00001a50*/ MOVW        R0, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00001a54*/ MOVT        R3, #0                      @ RcProcShow [R_ARM_MOVT_ABS: .text+0x1974] 
    /*00001a58*/ MOVT        R0, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00001a5c*/ STR         R3, [R2, #60]               @ 0x3c 
    /*00001a60*/ BL          0x0000000000001A60          @ CMPI_RegisterModule [R_ARM_CALL: +0x0] 
    /*00001a64*/ SUBS        R5, R0, #0 
    /*00001a68*/ BNE         RC_ModInit_x1aac
    /*00001a6c*/ ADD         R0, SP, #4 
    /*00001a70*/ BL          0x0000000000001A70          @ RCParamInit [R_ARM_CALL: .text+0x1e68] 
    /*00001a74*/ SUBS        R4, R0, #0 
    /*00001a78*/ BNE         RC_ModInit_x1ae0
    /*00001a7c*/ MOV         R1, #1 
    /*00001a80*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001a84*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001a88*/ BL          0x0000000000001A88          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*00001a8c*/ MOVW        R1, #0                      @ .LC184 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11ac] 
    /*00001a90*/ MOVW        R0, #0                      @ .LC185 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11b8] 
    /*00001a94*/ MOVT        R1, #0                      @ .LC184 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11ac] 
    /*00001a98*/ MOVT        R0, #0                      @ .LC185 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11b8] 
    /*00001a9c*/ BL          0x0000000000001A9C          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00001aa0*/ MOV         R0, R4 
    RC_ModInit_x1aa4:
    /*00001aa4*/ ADD         SP, SP, #108                @ 0x6c 
    /*00001aa8*/ POP         {R4, R5, PC} 
    RC_ModInit_x1aac:
    /*00001aac*/ MOVW        R0, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1180] 
    /*00001ab0*/ MOV         R1, #0 
    /*00001ab4*/ MOVT        R0, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1180] 
    /*00001ab8*/ BL          0x0000000000001AB8          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    /*00001abc*/ MOVW        R0, #0                      @ .LC182 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1184] 
    /*00001ac0*/ MOVT        R0, #0                      @ .LC182 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1184] 
    RC_ModInit_x1ac4:
    /*00001ac4*/ BL          0x0000000000001AC4          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00001ac8*/ MOV         R0, #0 
    /*00001acc*/ BL          0x0000000000001ACC          @ osal_deregisterdevice [R_ARM_CALL: +0x0] 
    /*00001ad0*/ MOV         R0, #0 
    /*00001ad4*/ BL          0x0000000000001AD4          @ osal_destroydev [R_ARM_CALL: +0x0] 
    /*00001ad8*/ MVN         R0, #0 
    /*00001adc*/ B           RC_ModInit_x1aa4
    RC_ModInit_x1ae0:
    /*00001ae0*/ MOV         R1, R5 
    /*00001ae4*/ MOVW        R0, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1180] 
    /*00001ae8*/ MOVT        R0, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1180] 
    /*00001aec*/ BL          0x0000000000001AEC          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    /*00001af0*/ MOV         R0, #19 
    /*00001af4*/ BL          0x0000000000001AF4          @ CMPI_UnRegisterModule [R_ARM_CALL: +0x0] 
    /*00001af8*/ MOVW        R0, #0                      @ .LC183 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1198] 
    /*00001afc*/ MOVT        R0, #0                      @ .LC183 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1198] 
    /*00001b00*/ B           RC_ModInit_x1ac4
    RC_ModInit_x1b04:
    /*00001b04*/ MVN         R0, #0 
    /*00001b08*/ B           RC_ModInit_x1aa4
    /*00001b0c*/ ANDEQ       R0, R0, IP, LSL #1 
FUNC_END RC_ModInit


FUNC_BEGIN RC_ModExit
    /*00001b10*/ PUSH        {R4, LR} 
    /*00001b14*/ BL          0x0000000000001B14          @ RcParamExit [R_ARM_CALL: .text+0x1f30] 
    /*00001b18*/ MOV         R0, #19 
    /*00001b1c*/ BL          0x0000000000001B1C          @ CMPI_UnRegisterModule [R_ARM_CALL: +0x0] 
    /*00001b20*/ MOV         R1, #0 
    /*00001b24*/ MOVW        R0, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1180] 
    /*00001b28*/ MOVT        R0, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1180] 
    /*00001b2c*/ BL          0x0000000000001B2C          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    /*00001b30*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001b34*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001b38*/ BL          0x0000000000001B38          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    /*00001b3c*/ MOVW        R1, #0                      @ .LC184 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11ac] 
    /*00001b40*/ MOVW        R0, #0                      @ .LC186 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11d4] 
    /*00001b44*/ MOVT        R1, #0                      @ .LC184 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11ac] 
    /*00001b48*/ MOVT        R0, #0                      @ .LC186 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11d4] 
    /*00001b4c*/ POP         {R4, LR} 
    RC_ModExit_x1b50:
    /*00001b50*/ B           RC_ModExit_x1b50            @ osal_printk [R_ARM_JUMP24: +0x0] 
FUNC_END RC_ModExit


FUNC_BEGIN RcGetIndexFromType
    /*00001b54*/ MOVW        R3, #265                    @ 0x109 
    /*00001b58*/ CMP         R0, R3 
    /*00001b5c*/ BEQ         RcGetIndexFromType_x1bb0
    /*00001b60*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00001b64*/ CMP         R0, R3 
    /*00001b68*/ BEQ         RcGetIndexFromType_x1bd8
    /*00001b6c*/ CMP         R0, #96                     @ 0x60 
    /*00001b70*/ BEQ         RcGetIndexFromType_x1bb0
    /*00001b74*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00001b78*/ SUB         SP, SP, #12 
    /*00001b7c*/ MOV         R2, #71                     @ 0x47 
    /*00001b80*/ MOV         R1, #19 
    /*00001b84*/ STR         R0, [SP, #4] 
    /*00001b88*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xf0] 
    /*00001b8c*/ STR         R2, [SP] 
    /*00001b90*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xf0] 
    /*00001b94*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x120c] 
    /*00001b98*/ MOV         R0, #3 
    /*00001b9c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x120c] 
    /*00001ba0*/ BL          0x0000000000001BA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001ba4*/ MVN         R0, #0 
    /*00001ba8*/ ADD         SP, SP, #12 
    /*00001bac*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RcGetIndexFromType_x1bb0:
    /*00001bb0*/ CMP         R1, #2 
    /*00001bb4*/ BEQ         RcGetIndexFromType_x1bd0
    /*00001bb8*/ CMP         R1, #3 
    /*00001bbc*/ BEQ         RcGetIndexFromType_x1bd0
    /*00001bc0*/ CMP         R1, #4 
    /*00001bc4*/ MOVNE       R0, #0 
    /*00001bc8*/ MOVEQ       R0, #4 
    /*00001bcc*/ BX          LR 
    RcGetIndexFromType_x1bd0:
    /*00001bd0*/ MOV         R0, R1 
    /*00001bd4*/ BX          LR 
    RcGetIndexFromType_x1bd8:
    /*00001bd8*/ MOV         R0, #1 
    /*00001bdc*/ BX          LR 
FUNC_END RcGetIndexFromType


FUNC_BEGIN RcCtrlDefaultParam
    /*00001be0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00001be4*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00001be8*/ SUB         SP, SP, #12 
    /*00001bec*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00001bf0*/ ADD         R1, R4, #220                @ 0xdc 
    /*00001bf4*/ ADD         R0, R4, #304                @ 0x130 
    /*00001bf8*/ MOV         R2, #84                     @ 0x54 
    /*00001bfc*/ MOV         R5, #0 
    /*00001c00*/ MOV         R6, #100                    @ 0x64 
    /*00001c04*/ MOV         R7, #51                     @ 0x33 
    /*00001c08*/ MOV         R8, #20 
    /*00001c0c*/ MOV         SL, #1 
    /*00001c10*/ MOV         R9, #3 
    /*00001c14*/ MOV         FP, #2 
    /*00001c18*/ MOV         R3, #10 
    /*00001c1c*/ MOV         IP, #5 
    /*00001c20*/ STR         R3, [R4, #12] 
    /*00001c24*/ STR         IP, [R4, #24] 
    /*00001c28*/ STR         R3, [R4, #16] 
    /*00001c2c*/ STR         R3, [R4, #68]               @ 0x44 
    /*00001c30*/ MOV         R3, #99                     @ 0x63 
    /*00001c34*/ STR         SL, [R4] 
    /*00001c38*/ STR         R3, [R4, #52]               @ 0x34 
    /*00001c3c*/ STR         R3, [R4, #64]               @ 0x40 
    /*00001c40*/ STR         R3, [SP, #4] 
    /*00001c44*/ MOV         R3, #90                     @ 0x5a 
    /*00001c48*/ STR         SL, [R4, #44]               @ 0x2c 
    /*00001c4c*/ STR         R3, [R4, #228]              @ 0xe4 
    /*00001c50*/ MOV         R3, #24 
    /*00001c54*/ STR         SL, [R4, #220]              @ 0xdc 
    /*00001c58*/ STR         R8, [R4, #4] 
    /*00001c5c*/ STR         R8, [R4, #56]               @ 0x38 
    /*00001c60*/ STR         R8, [R4, #60]               @ 0x3c 
    /*00001c64*/ STR         R8, [R4, #224]              @ 0xe0 
    /*00001c68*/ STR         R7, [R4, #8] 
    /*00001c6c*/ STR         R7, [R4, #20] 
    /*00001c70*/ STR         R7, [R4, #248]              @ 0xf8 
    /*00001c74*/ STR         R9, [R4, #28] 
    /*00001c78*/ STR         R9, [R4, #72]               @ 0x48 
    /*00001c7c*/ STR         R9, [R4, #232]              @ 0xe8 
    /*00001c80*/ STR         FP, [R4, #32] 
    /*00001c84*/ STR         FP, [R4, #76]               @ 0x4c 
    /*00001c88*/ STR         FP, [R4, #236]              @ 0xec 
    /*00001c8c*/ STR         R5, [R4, #36]               @ 0x24 
    /*00001c90*/ STR         R5, [R4, #40]               @ 0x28 
    /*00001c94*/ STR         R5, [R4, #80]               @ 0x50 
    /*00001c98*/ STR         R5, [R4, #84]               @ 0x54 
    /*00001c9c*/ STR         R5, [R4, #296]              @ 0x128 
    /*00001ca0*/ STR         R5, [R4, #300]              @ 0x12c 
    /*00001ca4*/ STR         R6, [R4, #48]               @ 0x30 
    /*00001ca8*/ STR         R3, [R4, #240]              @ 0xf0 
    /*00001cac*/ STR         R3, [R4, #244]              @ 0xf4 
    /*00001cb0*/ MOV         R3, #125                    @ 0x7d 
    /*00001cb4*/ STR         IP, [R4, #288]              @ 0x120 
    /*00001cb8*/ STR         R3, [R4, #272]              @ 0x110 
    /*00001cbc*/ MOV         R3, #45                     @ 0x2d 
    /*00001cc0*/ STR         R7, [R4, #252]              @ 0xfc 
    /*00001cc4*/ STR         R3, [R4, #276]              @ 0x114 
    /*00001cc8*/ MOV         R3, #30 
    /*00001ccc*/ STR         R6, [R4, #256]              @ 0x100 
    /*00001cd0*/ STR         R3, [R4, #280]              @ 0x118 
    /*00001cd4*/ MOV         R3, #23 
    /*00001cd8*/ STR         R7, [R4, #260]              @ 0x104 
    /*00001cdc*/ STR         R3, [R4, #284]              @ 0x11c 
    /*00001ce0*/ MOV         R3, #60                     @ 0x3c 
    /*00001ce4*/ STR         R5, [R4, #264]              @ 0x108 
    /*00001ce8*/ STR         R3, [R4, #292]              @ 0x124 
    /*00001cec*/ STR         R6, [R4, #268]              @ 0x10c 
    /*00001cf0*/ BL          0x0000000000001CF0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00001cf4*/ LDR         R3, [SP, #4] 
    /*00001cf8*/ MOV         R2, #16 
    /*00001cfc*/ MOV         LR, #24 
    /*00001d00*/ STR         R8, [R4, #324]              @ 0x144 
    /*00001d04*/ STR         LR, [R4, #408]              @ 0x198 
    /*00001d08*/ MOV         IP, #25 
    /*00001d0c*/ STR         R3, [R4, #332]              @ 0x14c 
    /*00001d10*/ MOV         R0, #35                     @ 0x23 
    /*00001d14*/ STR         R3, [R4, #336]              @ 0x150 
    /*00001d18*/ MOV         R1, #22 
    /*00001d1c*/ STR         LR, [R4, #412]              @ 0x19c 
    /*00001d20*/ MOV         R3, #90                     @ 0x5a 
    /*00001d24*/ STR         R8, [R4, #328]              @ 0x148 
    /*00001d28*/ MOV         LR, #125                    @ 0x7d 
    /*00001d2c*/ STR         R3, [R4, #396]              @ 0x18c 
    /*00001d30*/ MOV         R3, #47                     @ 0x2f 
    /*00001d34*/ STR         LR, [R4, #440]              @ 0x1b8 
    /*00001d38*/ MOV         LR, #45                     @ 0x2d 
    /*00001d3c*/ STR         SL, [R4, #388]              @ 0x184 
    /*00001d40*/ STR         LR, [R4, #444]              @ 0x1bc 
    /*00001d44*/ MOV         LR, #30 
    /*00001d48*/ STR         R6, [R4, #392]              @ 0x188 
    /*00001d4c*/ STR         LR, [R4, #448]              @ 0x1c0 
    /*00001d50*/ MOV         LR, #23 
    /*00001d54*/ STR         R9, [R4, #400]              @ 0x190 
    /*00001d58*/ STR         LR, [R4, #452]              @ 0x1c4 
    /*00001d5c*/ MOV         LR, #5 
    /*00001d60*/ STR         FP, [R4, #404]              @ 0x194 
    /*00001d64*/ STR         LR, [R4, #456]              @ 0x1c8 
    /*00001d68*/ MOV         LR, #60                     @ 0x3c 
    /*00001d6c*/ STR         R7, [R4, #416]              @ 0x1a0 
    /*00001d70*/ STR         R7, [R4, #420]              @ 0x1a4 
    /*00001d74*/ STR         R5, [R4, #464]              @ 0x1d0 
    /*00001d78*/ STR         R5, [R4, #468]              @ 0x1d4 
    /*00001d7c*/ STR         R5, [R4, #432]              @ 0x1b0 
    /*00001d80*/ STR         R6, [R4, #436]              @ 0x1b4 
    /*00001d84*/ STR         LR, [R4, #460]              @ 0x1cc 
    /*00001d88*/ STR         R6, [R4, #480]              @ 0x1e0 
    /*00001d8c*/ STR         SL, [R4, #472]              @ 0x1d8 
    /*00001d90*/ STR         R6, [R4, #476]              @ 0x1dc 
    /*00001d94*/ STR         R9, [R4, #484]              @ 0x1e4 
    /*00001d98*/ STR         FP, [R4, #488]              @ 0x1e8 
    /*00001d9c*/ STR         R7, [R4, #500]              @ 0x1f4 
    /*00001da0*/ STR         IP, [R4, #424]              @ 0x1a8 
    /*00001da4*/ STR         R0, [R4, #428]              @ 0x1ac 
    /*00001da8*/ STR         R2, [R4, #492]              @ 0x1ec 
    /*00001dac*/ STR         R2, [R4, #496]              @ 0x1f0 
    /*00001db0*/ MOV         R2, #125                    @ 0x7d 
    /*00001db4*/ STR         R3, [R4, #584]              @ 0x248 
    /*00001db8*/ STR         R2, [R4, #524]              @ 0x20c 
    /*00001dbc*/ MOV         R2, #45                     @ 0x2d 
    /*00001dc0*/ STR         SL, [R4, #556]              @ 0x22c 
    /*00001dc4*/ STR         R2, [R4, #528]              @ 0x210 
    /*00001dc8*/ MOV         R2, #30 
    /*00001dcc*/ STR         R7, [R4, #504]              @ 0x1f8 
    /*00001dd0*/ STR         R2, [R4, #532]              @ 0x214 
    /*00001dd4*/ MOV         R2, #23 
    /*00001dd8*/ STR         R5, [R4, #548]              @ 0x224 
    /*00001ddc*/ STR         R2, [R4, #536]              @ 0x218 
    /*00001de0*/ MOV         R2, #5 
    /*00001de4*/ STR         R5, [R4, #552]              @ 0x228 
    /*00001de8*/ STR         R2, [R4, #540]              @ 0x21c 
    /*00001dec*/ MOV         R2, #5 
    /*00001df0*/ STR         R6, [R4, #508]              @ 0x1fc 
    /*00001df4*/ STR         R2, [R4, #624]              @ 0x270 
    /*00001df8*/ MOV         R2, #125                    @ 0x7d 
    /*00001dfc*/ STR         R7, [R4, #512]              @ 0x200 
    /*00001e00*/ STR         R2, [R4, #608]              @ 0x260 
    /*00001e04*/ MOV         R2, #45                     @ 0x2d 
    /*00001e08*/ STR         R5, [R4, #516]              @ 0x204 
    /*00001e0c*/ STR         R6, [R4, #520]              @ 0x208 
    /*00001e10*/ STR         LR, [R4, #544]              @ 0x220 
    /*00001e14*/ STR         R6, [R4, #564]              @ 0x234 
    /*00001e18*/ STR         R6, [R4, #560]              @ 0x230 
    /*00001e1c*/ STR         R9, [R4, #568]              @ 0x238 
    /*00001e20*/ STR         FP, [R4, #572]              @ 0x23c 
    /*00001e24*/ STR         R8, [R4, #576]              @ 0x240 
    /*00001e28*/ STR         R5, [R4, #632]              @ 0x278 
    /*00001e2c*/ STR         R5, [R4, #636]              @ 0x27c 
    /*00001e30*/ STR         LR, [R4, #628]              @ 0x274 
    /*00001e34*/ STR         R6, [R4, #592]              @ 0x250 
    /*00001e38*/ STR         R7, [R4, #596]              @ 0x254 
    /*00001e3c*/ STR         R5, [R4, #600]              @ 0x258 
    /*00001e40*/ STR         R6, [R4, #604]              @ 0x25c 
    /*00001e44*/ STR         R2, [R4, #612]              @ 0x264 
    /*00001e48*/ STR         R1, [R4, #580]              @ 0x244 
    /*00001e4c*/ STR         R3, [R4, #588]              @ 0x24c 
    /*00001e50*/ MOV         R3, #30 
    /*00001e54*/ STR         R3, [R4, #616]              @ 0x268 
    /*00001e58*/ MOV         R3, #23 
    /*00001e5c*/ STR         R3, [R4, #620]              @ 0x26c 
    /*00001e60*/ ADD         SP, SP, #12 
    /*00001e64*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END RcCtrlDefaultParam


FUNC_BEGIN RCParamInit
    /*00001e68*/ CMP         R0, #0 
    /*00001e6c*/ PUSH        {R4, LR} 
    /*00001e70*/ SUB         SP, SP, #8 
    /*00001e74*/ BEQ         RCParamInit_x1f0c
    /*00001e78*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00001e7c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00001e80*/ LDR         R3, [R4, #640]              @ 0x280 
    /*00001e84*/ CMP         R3, #1 
    /*00001e88*/ BEQ         RCParamInit_x1ee4
    /*00001e8c*/ MOV         R2, #220                    @ 0xdc 
    /*00001e90*/ MOV         R1, #0 
    /*00001e94*/ MOV         R0, R4 
    /*00001e98*/ BL          0x0000000000001E98          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00001e9c*/ MOV         R2, #420                    @ 0x1a4 
    /*00001ea0*/ MOV         R1, #0 
    /*00001ea4*/ ADD         R0, R4, #220                @ 0xdc 
    /*00001ea8*/ BL          0x0000000000001EA8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00001eac*/ BL          0x0000000000001EAC          @ RcCtrlDefaultParam [R_ARM_CALL: .text+0x1be0] 
    /*00001eb0*/ MOVW        R3, #271                    @ 0x10f 
    /*00001eb4*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x129c] 
    /*00001eb8*/ STR         R3, [SP] 
    /*00001ebc*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x129c] 
    /*00001ec0*/ LDR         R3, [PC, #100]              @ 0x0000000000001f2c 
    /*00001ec4*/ MOV         R1, #19 
    /*00001ec8*/ MOV         R0, #6 
    /*00001ecc*/ MOV         IP, #1 
    /*00001ed0*/ STR         IP, [R4, #640]              @ 0x280 
    /*00001ed4*/ BL          0x0000000000001ED4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001ed8*/ MOV         R0, #0 
    RCParamInit_x1edc:
    /*00001edc*/ ADD         SP, SP, #8 
    /*00001ee0*/ POP         {R4, PC} 
    RCParamInit_x1ee4:
    /*00001ee4*/ MOVW        R3, #259                    @ 0x103 
    /*00001ee8*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1260] 
    /*00001eec*/ STR         R3, [SP] 
    /*00001ef0*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1260] 
    /*00001ef4*/ LDR         R3, [PC, #48]               @ 0x0000000000001f2c 
    /*00001ef8*/ MOV         R1, #19 
    /*00001efc*/ MOV         R0, #3 
    /*00001f00*/ BL          0x0000000000001F00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001f04*/ MVN         R0, #0 
    /*00001f08*/ B           RCParamInit_x1edc
    RCParamInit_x1f0c:
    /*00001f0c*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1244] 
    /*00001f10*/ MOV         R1, #19 
    /*00001f14*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1244] 
    /*00001f18*/ MOV         R0, #3 
    /*00001f1c*/ BL          0x0000000000001F1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001f20*/ MOVW        R0, #32774                  @ 0x8006 
    /*00001f24*/ MOVT        R0, #40979                  @ 0xa013 
    /*00001f28*/ B           RCParamInit_x1edc
    /*00001f2c*/ ANDEQ       R0, R0, R4, LSL #2 
FUNC_END RCParamInit


FUNC_BEGIN RcParamExit
    /*00001f30*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00001f34*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00001f38*/ LDR         R2, [R3, #640]              @ 0x280 
    /*00001f3c*/ CMP         R2, #0 
    /*00001f40*/ BEQ         RcParamExit_x1f60
    /*00001f44*/ MOV         IP, #0 
    /*00001f48*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x132c] 
    /*00001f4c*/ MOV         R1, #19 
    /*00001f50*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x132c] 
    /*00001f54*/ MOV         R0, #6 
    /*00001f58*/ STR         IP, [R3, #640]              @ 0x280 
    RcParamExit_x1f5c:
    /*00001f5c*/ B           RcParamExit_x1f5c           @ HI_LOG [R_ARM_JUMP24: +0x0] 
    RcParamExit_x1f60:
    /*00001f60*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00001f64*/ SUB         SP, SP, #12 
    /*00001f68*/ MOVW        R0, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12d0] 
    /*00001f6c*/ MOVT        R0, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12d0] 
    /*00001f70*/ BL          0x0000000000001F70          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00001f74*/ MOVW        R3, #282                    @ 0x11a 
    /*00001f78*/ MOV         R1, #19 
    /*00001f7c*/ STR         R3, [SP] 
    /*00001f80*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12f0] 
    /*00001f84*/ LDR         R3, [PC, #16]               @ 0x0000000000001f9c 
    /*00001f88*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12f0] 
    /*00001f8c*/ MOV         R0, #4 
    /*00001f90*/ BL          0x0000000000001F90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001f94*/ ADD         SP, SP, #12 
    /*00001f98*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00001f9c*/ ANDEQ       R0, R0, R0, LSL R1 
FUNC_END RcParamExit


FUNC_BEGIN RcGetFifoVal
    /*00001fa0*/ PUSH        {R4, LR} 
    /*00001fa4*/ SUBS        R4, R0, #0 
    /*00001fa8*/ BEQ         RcGetFifoVal_x2008
    RcGetFifoVal_x1fac:
    /*00001fac*/ LDR         IP, [R4, #16] 
    /*00001fb0*/ CMP         IP, #0 
    /*00001fb4*/ BLE         RcGetFifoVal_x1ffc
    /*00001fb8*/ LDR         R3, [R4, #12] 
    /*00001fbc*/ MOV         R0, #0 
    /*00001fc0*/ LDR         LR, [R4] 
    /*00001fc4*/ MOV         R1, #0 
    /*00001fc8*/ SUB         R3, R3, #1 
    /*00001fcc*/ SUB         IP, R3, IP 
    RcGetFifoVal_x1fd0:
    /*00001fd0*/ CMP         R3, #0 
    /*00001fd4*/ MOV         R2, R3 
    /*00001fd8*/ LDRLT       R2, [R4, #4] 
    /*00001fdc*/ ADDLT       R2, R3, R2 
    /*00001fe0*/ SUB         R3, R3, #1 
    /*00001fe4*/ LDR         R2, [LR, R2, LSL #2] 
    /*00001fe8*/ ADDS        R0, R0, R2 
    /*00001fec*/ ADC         R1, R1, #0 
    /*00001ff0*/ CMP         IP, R3 
    /*00001ff4*/ BNE         RcGetFifoVal_x1fd0
    /*00001ff8*/ POP         {R4, PC} 
    RcGetFifoVal_x1ffc:
    /*00001ffc*/ MOV         R0, #0 
    /*00002000*/ MOV         R1, #0 
    /*00002004*/ POP         {R4, PC} 
    RcGetFifoVal_x2008:
    /*00002008*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1344] 
    /*0000200c*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x11c] 
    /*00002010*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1344] 
    /*00002014*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x11c] 
    /*00002018*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*0000201c*/ MOVW        R2, #2538                   @ 0x9ea 
    /*00002020*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00002024*/ BL          0x0000000000002024          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002028*/ B           RcGetFifoVal_x1fac
FUNC_END RcGetFifoVal


FUNC_BEGIN RcInitFifo
    /*0000202c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00002030*/ SUBS        R4, R0, #0 
    /*00002034*/ MOV         R7, R1 
    /*00002038*/ MOV         R5, R2 
    /*0000203c*/ MOV         R6, R3 
    /*00002040*/ BEQ         RcInitFifo_x20c8
    RcInitFifo_x2044:
    /*00002044*/ CMP         R7, #0 
    /*00002048*/ BEQ         RcInitFifo_x20e8
    /*0000204c*/ CMP         R5, #0 
    /*00002050*/ MOV         R3, #0 
    /*00002054*/ STR         R7, [R4] 
    /*00002058*/ STR         R5, [R4, #4] 
    /*0000205c*/ STR         R3, [R4, #8] 
    /*00002060*/ STR         R3, [R4, #12] 
    /*00002064*/ STR         R3, [R4, #16] 
    /*00002068*/ BLE         RcInitFifo_x20c0
    /*0000206c*/ MOV         R1, R5 
    /*00002070*/ MOV         R0, R3 
    /*00002074*/ MOV         R2, R3 
    /*00002078*/ B           RcInitFifo_x2088
    RcInitFifo_x207c:
    /*0000207c*/ LDR         R0, [R4, #12] 
    /*00002080*/ LDR         R3, [R4, #16] 
    /*00002084*/ LDR         R1, [R4, #4] 
    RcInitFifo_x2088:
    /*00002088*/ CMP         R1, R3 
    /*0000208c*/ ADD         R2, R2, #1 
    /*00002090*/ ADD         R1, R0, #1 
    /*00002094*/ ADD         R3, R3, #1 
    /*00002098*/ BLE         RcInitFifo_x20b8
    /*0000209c*/ LDR         IP, [R4] 
    /*000020a0*/ STR         R6, [IP, R0, LSL #2] 
    /*000020a4*/ LDR         R0, [R4, #4] 
    /*000020a8*/ STR         R3, [R4, #16] 
    /*000020ac*/ CMP         R1, R0 
    /*000020b0*/ MOVGE       R1, #0 
    /*000020b4*/ STR         R1, [R4, #12] 
    RcInitFifo_x20b8:
    /*000020b8*/ CMP         R5, R2 
    /*000020bc*/ BNE         RcInitFifo_x207c
    RcInitFifo_x20c0:
    /*000020c0*/ MOV         R0, #0 
    /*000020c4*/ POP         {R4, R5, R6, R7, R8, PC} 
    RcInitFifo_x20c8:
    /*000020c8*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1344] 
    /*000020cc*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*000020d0*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1344] 
    /*000020d4*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*000020d8*/ MOVW        R2, #2492                   @ 0x9bc 
    /*000020dc*/ LDR         R1, [PC, #12]               @ 0x00000000000020f0 
    /*000020e0*/ BL          0x00000000000020E0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000020e4*/ B           RcInitFifo_x2044
    RcInitFifo_x20e8:
    /*000020e8*/ MVN         R0, #0 
    /*000020ec*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*000020f0*/ ANDEQ       R0, R0, IP, LSR #2 
FUNC_END RcInitFifo


FUNC_BEGIN RcCheckChnId.part.2
    /*000020f4*/ MOV         R3, R0 
    /*000020f8*/ MOV         R1, #19 
    /*000020fc*/ PUSH        {R4, LR} 
    /*00002100*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1398] 
    /*00002104*/ MOV         R0, #3 
    /*00002108*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1398] 
    /*0000210c*/ BL          0x000000000000210C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002110*/ MOVW        R0, #32770                  @ 0x8002 
    /*00002114*/ MOVT        R0, #40979                  @ 0xa013 
    /*00002118*/ POP         {R4, PC} 
FUNC_END RcCheckChnId.part.2


FUNC_BEGIN RcCheckNullPtr.part.3
    /*0000211c*/ PUSH        {R4, LR} 
    /*00002120*/ MOV         R1, #19 
    /*00002124*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13a8] 
    /*00002128*/ MOV         R0, #3 
    /*0000212c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13a8] 
    /*00002130*/ BL          0x0000000000002130          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002134*/ MOVW        R0, #32774                  @ 0x8006 
    /*00002138*/ MOVT        R0, #40979                  @ 0xa013 
    /*0000213c*/ POP         {R4, PC} 
FUNC_END RcCheckNullPtr.part.3


FUNC_BEGIN RcUpdateRcHwCfg.part.11
    /*00002140*/ LDR         R3, [R0, #48]               @ 0x30 
    /*00002144*/ MOVW        R2, #265                    @ 0x109 
    /*00002148*/ CMP         R3, R2 
    /*0000214c*/ CMPNE       R3, #96                     @ 0x60 
    /*00002150*/ BNE         RcUpdateRcHwCfg.part.11_x21b4
    /*00002154*/ ADD         R2, R0, #2016               @ 0x7e0 
    /*00002158*/ ADD         R3, R0, #79                 @ 0x4f 
    /*0000215c*/ ADD         R2, R2, #4 
    /*00002160*/ ADD         IP, R0, #95                 @ 0x5f 
    RcUpdateRcHwCfg.part.11_x2164:
    /*00002164*/ LDRB        R1, [R3, #1]! 
    /*00002168*/ CMP         R3, IP 
    /*0000216c*/ STR         R1, [R2, #4]! 
    /*00002170*/ LDRB        R1, [R3, #16] 
    /*00002174*/ STR         R1, [R2, #64]               @ 0x40 
    /*00002178*/ LDRB        R1, [R3, #32] 
    /*0000217c*/ STR         R1, [R2, #128]              @ 0x80 
    /*00002180*/ LDRB        R1, [R3, #48]               @ 0x30 
    /*00002184*/ STR         R1, [R2, #192]              @ 0xc0 
    /*00002188*/ LDRB        R1, [R3, #64]               @ 0x40 
    /*0000218c*/ STR         R1, [R2, #256]              @ 0x100 
    /*00002190*/ LDRB        R1, [R3, #80]               @ 0x50 
    /*00002194*/ STR         R1, [R2, #320]              @ 0x140 
    /*00002198*/ BNE         RcUpdateRcHwCfg.part.11_x2164
    /*0000219c*/ LDR         R2, [R0, #180]              @ 0xb4 
    /*000021a0*/ MVN         R1, #49                     @ 0x31 
    /*000021a4*/ LDR         R3, [R0, #176]              @ 0xb0 
    /*000021a8*/ STR         R1, [R0, #2016]             @ 0x7e0 
    /*000021ac*/ STR         R2, [R0, #2020]             @ 0x7e4 
    /*000021b0*/ STR         R3, [R0, #2408]             @ 0x968 
    RcUpdateRcHwCfg.part.11_x21b4:
    /*000021b4*/ MOV         R3, #0 
    /*000021b8*/ STR         R3, [R0, #1540]             @ 0x604 
    /*000021bc*/ BX          LR 
FUNC_END RcUpdateRcHwCfg.part.11


FUNC_BEGIN Rc_GetDoAttrMode_ByGopType.part.13
    /*000021c0*/ LDR         R3, [R0] 
    /*000021c4*/ SUB         R3, R3, #1 
    /*000021c8*/ CMP         R3, #4 
    /*000021cc*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*000021d0*/ B           Rc_GetDoAttrMode_ByGopType.part.13_x2230
    /*000021d4*/ ANDEQ       R2, R0, R8, LSL R2 
    /*000021d8*/ ANDEQ       R2, R0, R0, LSL #4 
    /*000021dc*/ ANDEQ       R2, R0, R0, LSL #4 
    /*000021e0*/ ANDEQ       R2, R0, R8, ROR #3 
    /*000021e4*/ ANDEQ       R2, R0, R8, ROR #3 
    /*000021e8*/ LDR         R0, [R0, #4] 
    /*000021ec*/ LDR         R3, [R1, #8] 
    /*000021f0*/ CMP         R0, R3 
    /*000021f4*/ MOVNE       R0, #2 
    /*000021f8*/ MOVEQ       R0, #0 
    /*000021fc*/ BX          LR 
    /*00002200*/ LDR         R0, [R0, #4] 
    /*00002204*/ LDR         R3, [R1, #24] 
    /*00002208*/ CMP         R0, R3 
    /*0000220c*/ MOVNE       R0, #2 
    /*00002210*/ MOVEQ       R0, #0 
    /*00002214*/ BX          LR 
    /*00002218*/ LDR         R0, [R0, #4] 
    /*0000221c*/ LDR         R3, [R1, #16] 
    /*00002220*/ CMP         R0, R3 
    /*00002224*/ MOVNE       R0, #2 
    /*00002228*/ MOVEQ       R0, #0 
    /*0000222c*/ BX          LR 
    Rc_GetDoAttrMode_ByGopType.part.13_x2230:
    /*00002230*/ MOV         R0, #0 
    /*00002234*/ BX          LR 
FUNC_END Rc_GetDoAttrMode_ByGopType.part.13


FUNC_BEGIN RcCheckChnId
    /*00002238*/ CMP         R0, #15 
    /*0000223c*/ BHI         RcCheckChnId_x2248
    /*00002240*/ MOV         R0, #0 
    /*00002244*/ BX          LR 
    RcCheckChnId_x2248:
    /*00002248*/ B           0x00000000000020F4 
FUNC_END RcCheckChnId


FUNC_BEGIN RcCheckChnExist
    /*0000224c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00002250*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00002254*/ LDR         R3, [R3, R0, LSL #2] 
    /*00002258*/ CMP         R3, #0 
    /*0000225c*/ BEQ         RcCheckChnExist_x2268
    /*00002260*/ MOV         R0, #0 
    /*00002264*/ BX          LR 
    RcCheckChnExist_x2268:
    /*00002268*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000226c*/ SUB         SP, SP, #12 
    /*00002270*/ MOV         R3, #76                     @ 0x4c 
    /*00002274*/ MOV         R1, #19 
    /*00002278*/ STR         R0, [SP, #4] 
    /*0000227c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13b8] 
    /*00002280*/ STR         R3, [SP] 
    /*00002284*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13b8] 
    /*00002288*/ LDR         R3, [PC, #20]               @ 0x00000000000022a4 
    /*0000228c*/ MOV         R0, #3 
    /*00002290*/ BL          0x0000000000002290          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002294*/ MOVW        R0, #32773                  @ 0x8005 
    /*00002298*/ MOVT        R0, #40979                  @ 0xa013 
    /*0000229c*/ ADD         SP, SP, #12 
    /*000022a0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000022a4*/ ANDEQ       R0, R0, R8, LSR R1 
FUNC_END RcCheckChnExist


FUNC_BEGIN RcCheckNullPtr
    /*000022a8*/ CMP         R0, #0 
    /*000022ac*/ BEQ         RcCheckNullPtr_x22b8
    /*000022b0*/ MOV         R0, #0 
    /*000022b4*/ BX          LR 
    RcCheckNullPtr_x22b8:
    /*000022b8*/ B           0x000000000000211C 
FUNC_END RcCheckNullPtr


FUNC_BEGIN RcGetRcMode
    /*000022bc*/ PUSH        {R4, LR} 
    /*000022c0*/ SUBS        R4, R0, #0 
    /*000022c4*/ SUB         SP, SP, #16 
    /*000022c8*/ BEQ         RcGetRcMode_x2440
    RcGetRcMode_x22cc:
    /*000022cc*/ LDR         R3, [R4, #48]               @ 0x30 
    /*000022d0*/ MOVW        R2, #265                    @ 0x109 
    /*000022d4*/ CMP         R3, R2 
    /*000022d8*/ BEQ         RcGetRcMode_x23dc
    /*000022dc*/ MOVW        R2, #1002                   @ 0x3ea 
    /*000022e0*/ CMP         R3, R2 
    /*000022e4*/ BEQ         RcGetRcMode_x23a8
    /*000022e8*/ CMP         R3, #96                     @ 0x60 
    /*000022ec*/ BEQ         RcGetRcMode_x2328
    /*000022f0*/ LDR         R1, [R4, #52]               @ 0x34 
    /*000022f4*/ MOV         R0, #219                    @ 0xdb 
    /*000022f8*/ STR         R3, [SP, #4] 
    /*000022fc*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1430] 
    /*00002300*/ STR         R0, [SP] 
    /*00002304*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1430] 
    /*00002308*/ STR         R1, [SP, #8] 
    /*0000230c*/ MOV         R0, #3 
    /*00002310*/ MOV         R1, #19 
    /*00002314*/ LDR         R3, [PC, #324]              @ 0x0000000000002460 
    /*00002318*/ BL          0x0000000000002318          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000231c*/ MOV         R0, #18 
    RcGetRcMode_x2320:
    /*00002320*/ ADD         SP, SP, #16 
    /*00002324*/ POP         {R4, PC} 
    RcGetRcMode_x2328:
    /*00002328*/ LDR         R0, [R4, #52]               @ 0x34 
    /*0000232c*/ CMP         R0, #1 
    /*00002330*/ BEQ         RcGetRcMode_x2320
    /*00002334*/ CMP         R0, #0 
    /*00002338*/ MOVEQ       R0, #2 
    /*0000233c*/ BEQ         RcGetRcMode_x2320
    /*00002340*/ CMP         R0, #2 
    /*00002344*/ MOVEQ       R0, #3 
    /*00002348*/ BEQ         RcGetRcMode_x2320
    /*0000234c*/ CMP         R0, #3 
    /*00002350*/ MOVEQ       R0, #4 
    /*00002354*/ BEQ         RcGetRcMode_x2320
    /*00002358*/ CMP         R0, #4 
    /*0000235c*/ MOVEQ       R0, #5 
    /*00002360*/ BEQ         RcGetRcMode_x2320
    /*00002364*/ CMP         R0, #5 
    /*00002368*/ MOVEQ       R0, #6 
    /*0000236c*/ BEQ         RcGetRcMode_x2320
    /*00002370*/ CMP         R0, #6 
    /*00002374*/ MOVEQ       R0, #7 
    /*00002378*/ BEQ         RcGetRcMode_x2320
    /*0000237c*/ MOV         R3, #189                    @ 0xbd 
    /*00002380*/ STR         R0, [SP, #4] 
    RcGetRcMode_x2384:
    /*00002384*/ STR         R3, [SP] 
    /*00002388*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1404] 
    /*0000238c*/ LDR         R3, [PC, #204]              @ 0x0000000000002460 
    /*00002390*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1404] 
    /*00002394*/ MOV         R1, #19 
    /*00002398*/ MOV         R0, #3 
    /*0000239c*/ BL          0x000000000000239C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000023a0*/ MOV         R0, #18 
    /*000023a4*/ B           RcGetRcMode_x2320
    RcGetRcMode_x23a8:
    /*000023a8*/ LDR         R3, [R4, #52]               @ 0x34 
    /*000023ac*/ CMP         R3, #1 
    /*000023b0*/ MOVEQ       R0, #8 
    /*000023b4*/ BEQ         RcGetRcMode_x2320
    /*000023b8*/ CMP         R3, #0 
    /*000023bc*/ MOVEQ       R0, #9 
    /*000023c0*/ BEQ         RcGetRcMode_x2320
    /*000023c4*/ CMP         R3, #5 
    /*000023c8*/ STRNE       R3, [SP, #4] 
    /*000023cc*/ MOVNE       R3, #211                    @ 0xd3 
    /*000023d0*/ BNE         RcGetRcMode_x2384
    /*000023d4*/ MOV         R0, #10 
    /*000023d8*/ B           RcGetRcMode_x2320
    RcGetRcMode_x23dc:
    /*000023dc*/ LDR         R3, [R4, #52]               @ 0x34 
    /*000023e0*/ CMP         R3, #1 
    /*000023e4*/ MOVEQ       R0, #11 
    /*000023e8*/ BEQ         RcGetRcMode_x2320
    /*000023ec*/ CMP         R3, #0 
    /*000023f0*/ MOVEQ       R0, #12 
    /*000023f4*/ BEQ         RcGetRcMode_x2320
    /*000023f8*/ CMP         R3, #2 
    /*000023fc*/ MOVEQ       R0, #13 
    /*00002400*/ BEQ         RcGetRcMode_x2320
    /*00002404*/ CMP         R3, #3 
    /*00002408*/ MOVEQ       R0, #14 
    /*0000240c*/ BEQ         RcGetRcMode_x2320
    /*00002410*/ CMP         R3, #4 
    /*00002414*/ MOVEQ       R0, #15 
    /*00002418*/ BEQ         RcGetRcMode_x2320
    /*0000241c*/ CMP         R3, #5 
    /*00002420*/ MOVEQ       R0, #16 
    /*00002424*/ BEQ         RcGetRcMode_x2320
    /*00002428*/ CMP         R3, #6 
    /*0000242c*/ STRNE       R3, [SP, #4] 
    /*00002430*/ MOVNE       R3, #151                    @ 0x97 
    /*00002434*/ BNE         RcGetRcMode_x2384
    /*00002438*/ MOV         R0, #17 
    /*0000243c*/ B           RcGetRcMode_x2320
    RcGetRcMode_x2440:
    /*00002440*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13ec] 
    /*00002444*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00002448*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13ec] 
    /*0000244c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00002450*/ MOV         R2, #115                    @ 0x73 
    /*00002454*/ LDR         R1, [PC, #4]                @ 0x0000000000002460 
    /*00002458*/ BL          0x0000000000002458          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000245c*/ B           RcGetRcMode_x22cc
    /*00002460*/ ANDEQ       R0, R0, R8, ASR #2 
FUNC_END RcGetRcMode


FUNC_BEGIN RcTransAttr
    /*00002464*/ PUSH        {R4, LR} 
    /*00002468*/ SUBS        R4, R0, #0 
    /*0000246c*/ SUB         SP, SP, #24 
    /*00002470*/ BEQ         RcTransAttr_x24d4
    RcTransAttr_x2474:
    /*00002474*/ CMP         R1, #0 
    /*00002478*/ BEQ         RcTransAttr_x2844
    RcTransAttr_x247c:
    /*0000247c*/ LDR         R3, [R4] 
    /*00002480*/ SUB         R0, R3, #1 
    /*00002484*/ CMP         R0, #16 
    /*00002488*/ LDRLS       PC, [PC, R0, LSL #2] 
    /*0000248c*/ B           RcTransAttr_x2888
    /*00002490*/ ANDEQ       R2, R0, IP, LSL #16 
    /*00002494*/ ANDEQ       R2, R0, R0, LSL #16 
    /*00002498*/ STRDEQ      R2, [R0], -R4 
    /*0000249c*/ ANDEQ       R2, R0, R8, ROR #15 
    /*000024a0*/ ANDEQ       R2, R0, R0, LSL #15 
    /*000024a4*/ ANDEQ       R2, R0, R8, ROR R7 
    /*000024a8*/ ANDEQ       R2, R0, IP, LSR R7 
    /*000024ac*/ STRDEQ      R2, [R0], -IP 
    /*000024b0*/ @           <UNDEFINED> instruction: 0x000026bc 
    /*000024b4*/ ANDEQ       R2, R0, IP, ROR #12 
    /*000024b8*/ ANDEQ       R2, R0, R8, LSR #12 
    /*000024bc*/ ANDEQ       R2, R0, R8, ROR #11 
    /*000024c0*/ ANDEQ       R2, R0, IP, LSL R8 
    /*000024c4*/ ANDEQ       R2, R0, R4, LSL R8 
    /*000024c8*/ ANDEQ       R2, R0, R8, LSR #16 
    /*000024cc*/ MULEQ       R0, IP, R5 
    /*000024d0*/ STRDEQ      R2, [R0], -R8 
    RcTransAttr_x24d4:
    /*000024d4*/ STR         R2, [SP, #20] 
    /*000024d8*/ STR         R1, [SP, #16] 
    /*000024dc*/ BL          0x000000000000211C 
    /*000024e0*/ LDR         R1, [SP, #16] 
    /*000024e4*/ LDR         R2, [SP, #20] 
    /*000024e8*/ CMP         R0, #0 
    /*000024ec*/ BEQ         RcTransAttr_x2474
    RcTransAttr_x24f0:
    /*000024f0*/ ADD         SP, SP, #24 
    /*000024f4*/ POP         {R4, PC} 
    /*000024f8*/ MOV         R3, #6 
    /*000024fc*/ MOVW        R0, #265                    @ 0x109 
    /*00002500*/ STR         R3, [R1, #52]               @ 0x34 
    /*00002504*/ STR         R0, [R1, #48]               @ 0x30 
    /*00002508*/ LDR         R3, [R4, #4] 
    /*0000250c*/ STR         R3, [R1, #32] 
    /*00002510*/ LDR         R3, [R4, #8] 
    /*00002514*/ STR         R3, [R1, #36]               @ 0x24 
    /*00002518*/ LDR         R3, [R4, #12] 
    /*0000251c*/ STR         R3, [R1, #40]               @ 0x28 
    /*00002520*/ LDR         R3, [R4, #16] 
    /*00002524*/ STR         R3, [R1, #44]               @ 0x2c 
    /*00002528*/ LDR         R3, [R4, #20] 
    /*0000252c*/ STR         R3, [R1, #56]               @ 0x38 
    RcTransAttr_x2530:
    /*00002530*/ CMP         R2, #0 
    /*00002534*/ MOV         R3, #0 
    /*00002538*/ STR         R3, [R1] 
    /*0000253c*/ BEQ         RcTransAttr_x28cc
    RcTransAttr_x2540:
    /*00002540*/ LDR         R3, [R2] 
    /*00002544*/ CMP         R3, #5 
    /*00002548*/ BHI         RcTransAttr_x28ec
    /*0000254c*/ CMP         R3, #0 
    /*00002550*/ BEQ         RcTransAttr_x2830
    /*00002554*/ CMP         R3, #1 
    /*00002558*/ BEQ         RcTransAttr_x28a8
    /*0000255c*/ CMP         R3, #2 
    /*00002560*/ BEQ         RcTransAttr_x2864
    /*00002564*/ CMP         R3, #3 
    /*00002568*/ BEQ         RcTransAttr_x2864
    /*0000256c*/ LDR         LR, [R2, #12] 
    /*00002570*/ CMP         R3, #4 
    /*00002574*/ MOV         R0, #0 
    /*00002578*/ MOVNE       IP, #5 
    /*0000257c*/ MOVEQ       IP, #4 
    /*00002580*/ STR         LR, [R1, #4] 
    /*00002584*/ LDR         R3, [R2, #8] 
    /*00002588*/ STR         R3, [R1, #12] 
    /*0000258c*/ LDR         R3, [R2, #4] 
    /*00002590*/ STR         IP, [R1] 
    /*00002594*/ STR         R3, [R1, #8] 
    /*00002598*/ B           RcTransAttr_x24f0
    /*0000259c*/ MOVW        R0, #265                    @ 0x109 
    RcTransAttr_x25a0:
    /*000025a0*/ STR         R0, [R1, #48]               @ 0x30 
    /*000025a4*/ MOV         R3, #5 
    /*000025a8*/ STR         R3, [R1, #52]               @ 0x34 
    /*000025ac*/ MOV         R0, #1 
    /*000025b0*/ LDR         R3, [R4, #4] 
    /*000025b4*/ STR         R0, [R1, #36]               @ 0x24 
    /*000025b8*/ STR         R3, [R1, #32] 
    /*000025bc*/ LDR         R3, [R4, #8] 
    /*000025c0*/ STR         R3, [R1, #40]               @ 0x28 
    /*000025c4*/ LDR         R3, [R4, #12] 
    /*000025c8*/ STR         R3, [R1, #44]               @ 0x2c 
    /*000025cc*/ LDR         R3, [R4, #16] 
    /*000025d0*/ STR         R3, [R1, #56]               @ 0x38 
    /*000025d4*/ LDR         R3, [R4, #20] 
    /*000025d8*/ STR         R3, [R1, #60]               @ 0x3c 
    /*000025dc*/ LDR         R3, [R4, #24] 
    /*000025e0*/ STR         R3, [R1, #64]               @ 0x40 
    /*000025e4*/ B           RcTransAttr_x2530
    /*000025e8*/ MOVW        R0, #265                    @ 0x109 
    /*000025ec*/ MOV         R3, #0 
    RcTransAttr_x25f0:
    /*000025f0*/ STR         R0, [R1, #48]               @ 0x30 
    /*000025f4*/ STR         R3, [R1, #52]               @ 0x34 
    /*000025f8*/ LDR         R3, [R4, #4] 
    /*000025fc*/ STR         R3, [R1, #32] 
    /*00002600*/ LDR         R3, [R4, #8] 
    /*00002604*/ STR         R3, [R1, #36]               @ 0x24 
    /*00002608*/ LDR         R3, [R4, #12] 
    /*0000260c*/ STR         R3, [R1, #40]               @ 0x28 
    /*00002610*/ LDR         R3, [R4, #16] 
    /*00002614*/ STR         R3, [R1, #44]               @ 0x2c 
    /*00002618*/ LDR         R3, [R4, #20] 
    /*0000261c*/ LSL         R3, R3, #10 
    /*00002620*/ STR         R3, [R1, #56]               @ 0x38 
    /*00002624*/ B           RcTransAttr_x2530
    /*00002628*/ MOVW        R3, #265                    @ 0x109 
    RcTransAttr_x262c:
    /*0000262c*/ STR         R3, [R1, #48]               @ 0x30 
    /*00002630*/ MOV         R0, #1 
    /*00002634*/ STR         R0, [R1, #52]               @ 0x34 
    /*00002638*/ LDR         R3, [R4, #4] 
    /*0000263c*/ STR         R3, [R1, #32] 
    /*00002640*/ LDR         R3, [R4, #8] 
    /*00002644*/ STR         R3, [R1, #36]               @ 0x24 
    /*00002648*/ LDR         R3, [R4, #12] 
    /*0000264c*/ STR         R3, [R1, #40]               @ 0x28 
    /*00002650*/ LDR         R3, [R4, #16] 
    /*00002654*/ STR         R3, [R1, #44]               @ 0x2c 
    /*00002658*/ LDR         R3, [R4, #20] 
    /*0000265c*/ STR         R0, [R1, #60]               @ 0x3c 
    /*00002660*/ LSL         R3, R3, #10 
    /*00002664*/ STR         R3, [R1, #56]               @ 0x38 
    /*00002668*/ B           RcTransAttr_x2530
    /*0000266c*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00002670*/ MOV         R2, #5 
    /*00002674*/ STR         R3, [R1, #48]               @ 0x30 
    /*00002678*/ MOV         R3, #1 
    /*0000267c*/ STR         R2, [R1, #52]               @ 0x34 
    /*00002680*/ STR         R3, [R1, #32] 
    /*00002684*/ STR         R3, [R1, #36]               @ 0x24 
    /*00002688*/ LDR         R3, [R4, #4] 
    /*0000268c*/ STR         R3, [R1, #40]               @ 0x28 
    /*00002690*/ LDR         R3, [R4, #8] 
    /*00002694*/ STR         R3, [R1, #44]               @ 0x2c 
    /*00002698*/ LDR         R3, [R4, #12] 
    /*0000269c*/ STR         R3, [R1, #56]               @ 0x38 
    /*000026a0*/ LDR         R3, [R4, #12] 
    /*000026a4*/ STR         R3, [R1, #60]               @ 0x3c 
    /*000026a8*/ LDR         R3, [R4, #12] 
    /*000026ac*/ STR         R3, [R1, #64]               @ 0x40 
    RcTransAttr_x26b0:
    /*000026b0*/ MOV         R0, #0 
    /*000026b4*/ STR         R0, [R1] 
    /*000026b8*/ B           RcTransAttr_x24f0
    /*000026bc*/ MOVW        R3, #1002                   @ 0x3ea 
    /*000026c0*/ MOV         R2, #0 
    /*000026c4*/ STR         R3, [R1, #48]               @ 0x30 
    /*000026c8*/ MOV         R3, #1 
    /*000026cc*/ STR         R2, [R1, #52]               @ 0x34 
    /*000026d0*/ STR         R3, [R1, #32] 
    /*000026d4*/ LDR         R3, [R4, #4] 
    /*000026d8*/ STR         R3, [R1, #36]               @ 0x24 
    /*000026dc*/ LDR         R3, [R4, #8] 
    /*000026e0*/ STR         R3, [R1, #40]               @ 0x28 
    /*000026e4*/ LDR         R3, [R4, #12] 
    /*000026e8*/ STR         R3, [R1, #44]               @ 0x2c 
    /*000026ec*/ LDR         R3, [R4, #16] 
    /*000026f0*/ LSL         R3, R3, #10 
    /*000026f4*/ STR         R3, [R1, #56]               @ 0x38 
    /*000026f8*/ B           RcTransAttr_x26b0
    /*000026fc*/ MOV         R2, #1 
    /*00002700*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00002704*/ STR         R2, [R1, #52]               @ 0x34 
    /*00002708*/ STR         R3, [R1, #48]               @ 0x30 
    /*0000270c*/ STR         R2, [R1, #32] 
    /*00002710*/ LDR         R3, [R4, #4] 
    /*00002714*/ STR         R3, [R1, #36]               @ 0x24 
    /*00002718*/ LDR         R3, [R4, #8] 
    /*0000271c*/ STR         R3, [R1, #40]               @ 0x28 
    /*00002720*/ LDR         R3, [R4, #12] 
    /*00002724*/ STR         R3, [R1, #44]               @ 0x2c 
    /*00002728*/ LDR         R3, [R4, #16] 
    /*0000272c*/ STR         R2, [R1, #60]               @ 0x3c 
    /*00002730*/ LSL         R3, R3, #10 
    /*00002734*/ STR         R3, [R1, #56]               @ 0x38 
    /*00002738*/ B           RcTransAttr_x26b0
    /*0000273c*/ MOV         R0, #96                     @ 0x60 
    /*00002740*/ MOV         R3, #6 
    /*00002744*/ STR         R0, [R1, #48]               @ 0x30 
    /*00002748*/ MOV         R0, #0 
    /*0000274c*/ STR         R3, [R1, #52]               @ 0x34 
    /*00002750*/ LDR         R3, [R4, #4] 
    /*00002754*/ STR         R3, [R1, #32] 
    /*00002758*/ LDR         R3, [R4, #8] 
    /*0000275c*/ STR         R3, [R1, #36]               @ 0x24 
    /*00002760*/ LDR         R3, [R4, #12] 
    /*00002764*/ STR         R3, [R1, #40]               @ 0x28 
    /*00002768*/ LDR         R3, [R4, #16] 
    /*0000276c*/ STR         R0, [R1, #56]               @ 0x38 
    /*00002770*/ STR         R3, [R1, #44]               @ 0x2c 
    /*00002774*/ B           RcTransAttr_x2530
    /*00002778*/ MOV         R0, #96                     @ 0x60 
    /*0000277c*/ B           RcTransAttr_x25a0
    /*00002780*/ MOV         R0, #96                     @ 0x60 
    RcTransAttr_x2784:
    /*00002784*/ STR         R0, [R1, #48]               @ 0x30 
    /*00002788*/ MOV         R3, #4 
    /*0000278c*/ STR         R3, [R1, #52]               @ 0x34 
    /*00002790*/ LDR         R3, [R4, #4] 
    /*00002794*/ STR         R3, [R1, #32] 
    /*00002798*/ LDR         R3, [R4, #8] 
    /*0000279c*/ STR         R3, [R1, #36]               @ 0x24 
    /*000027a0*/ LDR         R3, [R4, #12] 
    /*000027a4*/ STR         R3, [R1, #40]               @ 0x28 
    /*000027a8*/ LDR         R3, [R4, #16] 
    /*000027ac*/ STR         R3, [R1, #44]               @ 0x2c 
    /*000027b0*/ LDR         R3, [R4, #20] 
    /*000027b4*/ LSL         R3, R3, #10 
    /*000027b8*/ STR         R3, [R1, #56]               @ 0x38 
    /*000027bc*/ LDR         R3, [R4, #24] 
    /*000027c0*/ STR         R3, [R1, #60]               @ 0x3c 
    /*000027c4*/ LDR         R3, [R4, #28] 
    /*000027c8*/ STR         R3, [R1, #64]               @ 0x40 
    /*000027cc*/ LDR         R3, [R4, #32] 
    /*000027d0*/ LSL         R3, R3, #10 
    /*000027d4*/ STR         R3, [R1, #68]               @ 0x44 
    /*000027d8*/ LDR         R3, [R4, #36]               @ 0x24 
    /*000027dc*/ LSL         R3, R3, #10 
    /*000027e0*/ STR         R3, [R1, #72]               @ 0x48 
    /*000027e4*/ B           RcTransAttr_x2530
    /*000027e8*/ MOV         R0, #96                     @ 0x60 
    RcTransAttr_x27ec:
    /*000027ec*/ MOV         R3, #3 
    /*000027f0*/ B           RcTransAttr_x25f0
    /*000027f4*/ MOV         R0, #96                     @ 0x60 
    /*000027f8*/ MOV         R3, #2 
    /*000027fc*/ B           RcTransAttr_x25f0
    /*00002800*/ MOV         R0, #96                     @ 0x60 
    /*00002804*/ MOV         R3, #0 
    /*00002808*/ B           RcTransAttr_x25f0
    /*0000280c*/ MOV         R3, #96                     @ 0x60 
    /*00002810*/ B           RcTransAttr_x262c
    /*00002814*/ MOVW        R0, #265                    @ 0x109 
    /*00002818*/ B           RcTransAttr_x27ec
    /*0000281c*/ MOVW        R0, #265                    @ 0x109 
    /*00002820*/ MOV         R3, #2 
    /*00002824*/ B           RcTransAttr_x25f0
    /*00002828*/ MOVW        R0, #265                    @ 0x109 
    /*0000282c*/ B           RcTransAttr_x2784
    RcTransAttr_x2830:
    /*00002830*/ LDR         R2, [R2, #4] 
    /*00002834*/ MOV         R0, R3 
    /*00002838*/ STR         R3, [R1] 
    /*0000283c*/ STR         R2, [R1, #4] 
    /*00002840*/ B           RcTransAttr_x24f0
    RcTransAttr_x2844:
    /*00002844*/ STR         R2, [SP, #20] 
    /*00002848*/ STR         R1, [SP, #16] 
    /*0000284c*/ BL          0x000000000000211C 
    /*00002850*/ LDR         R1, [SP, #16] 
    /*00002854*/ LDR         R2, [SP, #20] 
    /*00002858*/ CMP         R0, #0 
    /*0000285c*/ BNE         RcTransAttr_x24f0
    /*00002860*/ B           RcTransAttr_x247c
    RcTransAttr_x2864:
    /*00002864*/ LDR         IP, [R2, #8] 
    /*00002868*/ MOV         R0, #0 
    /*0000286c*/ STR         IP, [R1, #4] 
    /*00002870*/ LDR         IP, [R2, #12] 
    /*00002874*/ STR         IP, [R1, #28] 
    /*00002878*/ LDR         R2, [R2, #4] 
    /*0000287c*/ STR         R3, [R1] 
    /*00002880*/ STR         R2, [R1, #24] 
    /*00002884*/ B           RcTransAttr_x24f0
    RcTransAttr_x2888:
    /*00002888*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1464] 
    /*0000288c*/ MOV         R1, #19 
    /*00002890*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1464] 
    /*00002894*/ MOV         R0, #3 
    /*00002898*/ BL          0x0000000000002898          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000289c*/ MOVW        R0, #32776                  @ 0x8008 
    /*000028a0*/ MOVT        R0, #40979                  @ 0xa013 
    /*000028a4*/ B           RcTransAttr_x24f0
    RcTransAttr_x28a8:
    /*000028a8*/ LDR         IP, [R2, #12] 
    /*000028ac*/ MOV         R0, #0 
    /*000028b0*/ STR         IP, [R1, #4] 
    /*000028b4*/ LDR         IP, [R2, #8] 
    /*000028b8*/ STR         IP, [R1, #20] 
    /*000028bc*/ LDR         R2, [R2, #4] 
    /*000028c0*/ STR         R3, [R1] 
    /*000028c4*/ STR         R2, [R1, #16] 
    /*000028c8*/ B           RcTransAttr_x24f0
    RcTransAttr_x28cc:
    /*000028cc*/ STR         R2, [SP, #20] 
    /*000028d0*/ STR         R1, [SP, #16] 
    /*000028d4*/ BL          0x000000000000211C 
    /*000028d8*/ LDR         R1, [SP, #16] 
    /*000028dc*/ LDR         R2, [SP, #20] 
    /*000028e0*/ CMP         R0, #0 
    /*000028e4*/ BNE         RcTransAttr_x24f0
    /*000028e8*/ B           RcTransAttr_x2540
    RcTransAttr_x28ec:
    /*000028ec*/ STR         R3, [SP, #4] 
    /*000028f0*/ MOV         R2, #5 
    /*000028f4*/ MOV         R3, #0 
    /*000028f8*/ STR         R2, [SP, #12] 
    /*000028fc*/ STR         R3, [SP, #8] 
    /*00002900*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1474] 
    /*00002904*/ MOV         R3, #548                    @ 0x224 
    /*00002908*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1474] 
    /*0000290c*/ STR         R3, [SP] 
    /*00002910*/ MOV         R1, #19 
    /*00002914*/ LDR         R3, [PC, #16]               @ 0x000000000000292c 
    /*00002918*/ MOV         R0, #3 
    /*0000291c*/ BL          0x000000000000291C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002920*/ MOVW        R0, #32771                  @ 0x8003 
    /*00002924*/ MOVT        R0, #40979                  @ 0xa013 
    /*00002928*/ B           RcTransAttr_x24f0
    /*0000292c*/ ANDEQ       R0, R0, R4, ASR R1 
FUNC_END RcTransAttr


FUNC_BEGIN RcRevTransAttr
    /*00002930*/ PUSH        {R4, R5, LR} 
    /*00002934*/ SUBS        R4, R1, #0 
    /*00002938*/ SUB         SP, SP, #28 
    /*0000293c*/ MOV         R5, R0 
    /*00002940*/ BEQ         RcRevTransAttr_x29dc
    RcRevTransAttr_x2944:
    /*00002944*/ CMP         R2, #0 
    /*00002948*/ BEQ         RcRevTransAttr_x2b0c
    RcRevTransAttr_x294c:
    /*0000294c*/ SUB         R3, R5, #1 
    /*00002950*/ STR         R5, [R2] 
    /*00002954*/ CMP         R3, #16 
    /*00002958*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*0000295c*/ B           RcRevTransAttr_x2b24
    /*00002960*/ ANDEQ       R2, R0, R4, LSR #19 
    /*00002964*/ ANDEQ       R2, R0, R4, LSR #19 
    /*00002968*/ ANDEQ       R2, R0, R4, LSR #19 
    /*0000296c*/ ANDEQ       R2, R0, R4, LSR #19 
    /*00002970*/ STRDEQ      R2, [R0], -R4 
    /*00002974*/ ANDEQ       R2, R0, IP, ASR SL 
    /*00002978*/ ANDEQ       R2, R0, R4, ROR #21 
    /*0000297c*/ ANDEQ       R2, R0, R0, LSR SL 
    /*00002980*/ ANDEQ       R2, R0, R0, LSR SL 
    /*00002984*/ MULEQ       R0, R4, SL 
    /*00002988*/ ANDEQ       R2, R0, R4, LSR #19 
    /*0000298c*/ ANDEQ       R2, R0, R4, LSR #19 
    /*00002990*/ ANDEQ       R2, R0, R4, LSR #19 
    /*00002994*/ ANDEQ       R2, R0, R4, LSR #19 
    /*00002998*/ STRDEQ      R2, [R0], -R4 
    /*0000299c*/ ANDEQ       R2, R0, IP, ASR SL 
    /*000029a0*/ @           <UNDEFINED> instruction: 0x00002ab4 
    /*000029a4*/ LDR         R3, [R4, #32] 
    /*000029a8*/ MOV         R0, #0 
    /*000029ac*/ STR         R3, [R2, #4] 
    /*000029b0*/ LDR         R3, [R4, #36]               @ 0x24 
    /*000029b4*/ STR         R3, [R2, #8] 
    /*000029b8*/ LDR         R3, [R4, #40]               @ 0x28 
    /*000029bc*/ STR         R3, [R2, #12] 
    /*000029c0*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*000029c4*/ STR         R3, [R2, #16] 
    /*000029c8*/ LDR         R3, [R4, #56]               @ 0x38 
    /*000029cc*/ LSR         R3, R3, #10 
    /*000029d0*/ STR         R3, [R2, #20] 
    RcRevTransAttr_x29d4:
    /*000029d4*/ ADD         SP, SP, #28 
    /*000029d8*/ POP         {R4, R5, PC} 
    RcRevTransAttr_x29dc:
    /*000029dc*/ STR         R2, [SP, #20] 
    /*000029e0*/ BL          0x000000000000211C 
    /*000029e4*/ LDR         R2, [SP, #20] 
    /*000029e8*/ CMP         R0, #0 
    /*000029ec*/ BNE         RcRevTransAttr_x29d4
    /*000029f0*/ B           RcRevTransAttr_x2944
    /*000029f4*/ LDR         R3, [R4, #56]               @ 0x38 
    /*000029f8*/ MOV         R0, #0 
    /*000029fc*/ LSR         R3, R3, #10 
    /*00002a00*/ STR         R3, [R2, #20] 
    /*00002a04*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*00002a08*/ STR         R3, [R2, #24] 
    /*00002a0c*/ LDR         R3, [R4, #64]               @ 0x40 
    /*00002a10*/ STR         R3, [R2, #28] 
    /*00002a14*/ LDR         R3, [R4, #68]               @ 0x44 
    /*00002a18*/ LSR         R3, R3, #10 
    /*00002a1c*/ STR         R3, [R2, #32] 
    /*00002a20*/ LDR         R3, [R4, #72]               @ 0x48 
    /*00002a24*/ LSR         R3, R3, #10 
    /*00002a28*/ STR         R3, [R2, #36]               @ 0x24 
    /*00002a2c*/ B           RcRevTransAttr_x29d4
    /*00002a30*/ LDR         R3, [R4, #40]               @ 0x28 
    /*00002a34*/ MOV         R0, #0 
    /*00002a38*/ STR         R3, [R2, #8] 
    /*00002a3c*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*00002a40*/ STR         R3, [R2, #12] 
    /*00002a44*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00002a48*/ STR         R3, [R2, #4] 
    /*00002a4c*/ LDR         R3, [R4, #56]               @ 0x38 
    /*00002a50*/ LSR         R3, R3, #10 
    /*00002a54*/ STR         R3, [R2, #16] 
    /*00002a58*/ B           RcRevTransAttr_x29d4
    /*00002a5c*/ LDR         R3, [R4, #32] 
    /*00002a60*/ MOV         R0, #0 
    /*00002a64*/ STR         R3, [R2, #4] 
    /*00002a68*/ LDR         R3, [R4, #40]               @ 0x28 
    /*00002a6c*/ STR         R3, [R2, #8] 
    /*00002a70*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*00002a74*/ STR         R3, [R2, #12] 
    /*00002a78*/ LDR         R3, [R4, #56]               @ 0x38 
    /*00002a7c*/ STR         R3, [R2, #16] 
    /*00002a80*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*00002a84*/ STR         R3, [R2, #20] 
    /*00002a88*/ LDR         R3, [R4, #64]               @ 0x40 
    /*00002a8c*/ STR         R3, [R2, #24] 
    /*00002a90*/ B           RcRevTransAttr_x29d4
    /*00002a94*/ LDR         R3, [R4, #40]               @ 0x28 
    /*00002a98*/ MOV         R0, #0 
    /*00002a9c*/ STR         R3, [R2, #4] 
    /*00002aa0*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*00002aa4*/ STR         R3, [R2, #8] 
    /*00002aa8*/ LDR         R3, [R4, #56]               @ 0x38 
    /*00002aac*/ STR         R3, [R2, #12] 
    /*00002ab0*/ B           RcRevTransAttr_x29d4
    /*00002ab4*/ LDR         R3, [R4, #32] 
    /*00002ab8*/ MOV         R0, #0 
    /*00002abc*/ STR         R3, [R2, #4] 
    /*00002ac0*/ LDR         R3, [R4, #40]               @ 0x28 
    /*00002ac4*/ STR         R3, [R2, #12] 
    /*00002ac8*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*00002acc*/ STR         R3, [R2, #16] 
    /*00002ad0*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00002ad4*/ STR         R3, [R2, #8] 
    /*00002ad8*/ LDR         R3, [R4, #56]               @ 0x38 
    /*00002adc*/ STR         R3, [R2, #20] 
    /*00002ae0*/ B           RcRevTransAttr_x29d4
    /*00002ae4*/ LDR         R3, [R4, #32] 
    /*00002ae8*/ MOV         R0, #0 
    /*00002aec*/ STR         R3, [R2, #4] 
    /*00002af0*/ LDR         R3, [R4, #40]               @ 0x28 
    /*00002af4*/ STR         R3, [R2, #12] 
    /*00002af8*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*00002afc*/ STR         R3, [R2, #16] 
    /*00002b00*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00002b04*/ STR         R3, [R2, #8] 
    /*00002b08*/ B           RcRevTransAttr_x29d4
    RcRevTransAttr_x2b0c:
    /*00002b0c*/ STR         R2, [SP, #20] 
    /*00002b10*/ BL          0x000000000000211C 
    /*00002b14*/ LDR         R2, [SP, #20] 
    /*00002b18*/ CMP         R0, #0 
    /*00002b1c*/ BNE         RcRevTransAttr_x29d4
    /*00002b20*/ B           RcRevTransAttr_x294c
    RcRevTransAttr_x2b24:
    /*00002b24*/ MOV         R2, #16 
    /*00002b28*/ MOV         R3, #1 
    /*00002b2c*/ STR         R2, [SP, #12] 
    /*00002b30*/ MOV         R1, #19 
    /*00002b34*/ STR         R3, [SP, #8] 
    /*00002b38*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14bc] 
    /*00002b3c*/ MOVW        R3, #818                    @ 0x332 
    /*00002b40*/ STR         R5, [SP, #4] 
    /*00002b44*/ STR         R3, [SP] 
    /*00002b48*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14bc] 
    /*00002b4c*/ LDR         R3, [PC, #16]               @ 0x0000000000002b64 
    /*00002b50*/ MOV         R0, #3 
    /*00002b54*/ BL          0x0000000000002B54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002b58*/ MOVW        R0, #32771                  @ 0x8003 
    /*00002b5c*/ MOVT        R0, #40968                  @ 0xa008 
    /*00002b60*/ B           RcRevTransAttr_x29d4
    /*00002b64*/ ANDEQ       R0, R0, R0, ROR #2 
FUNC_END RcRevTransAttr


FUNC_BEGIN RcTransParam
    /*00002b68*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00002b6c*/ SUB         R4, R0, #1 
    /*00002b70*/ CMP         R4, #16 
    /*00002b74*/ SUB         SP, SP, #28 
    /*00002b78*/ BHI         RcTransParam_x3364
    /*00002b7c*/ CMP         R1, #0 
    /*00002b80*/ BEQ         RcTransParam_x2c50
    RcTransParam_x2b84:
    /*00002b84*/ CMP         R2, #0 
    /*00002b88*/ BEQ         RcTransParam_x3344
    RcTransParam_x2b8c:
    /*00002b8c*/ SUB         R0, R1, #4 
    /*00002b90*/ SUB         R3, R2, #1 
    /*00002b94*/ ADD         R5, R1, #60                 @ 0x3c 
    /*00002b98*/ MOV         IP, #1 
    RcTransParam_x2b9c:
    /*00002b9c*/ LDR         LR, [R0, #4]! 
    /*00002ba0*/ CMP         R5, R0 
    /*00002ba4*/ STRB        LR, [R3, #1]! 
    /*00002ba8*/ LDR         LR, [R0, #64]               @ 0x40 
    /*00002bac*/ STRB        LR, [R3, #16] 
    /*00002bb0*/ LDR         LR, [R0, #128]              @ 0x80 
    /*00002bb4*/ STRB        IP, [R3, #48]               @ 0x30 
    /*00002bb8*/ STRB        IP, [R3, #64]               @ 0x40 
    /*00002bbc*/ STRB        LR, [R3, #32] 
    /*00002bc0*/ STRB        IP, [R3, #80]               @ 0x50 
    /*00002bc4*/ BNE         RcTransParam_x2b9c
    /*00002bc8*/ LDR         R0, [R1, #196]              @ 0xc4 
    /*00002bcc*/ MOV         R3, #0 
    /*00002bd0*/ STR         R0, [R2, #100]              @ 0x64 
    /*00002bd4*/ LDR         R0, [R1, #192]              @ 0xc0 
    /*00002bd8*/ STR         R0, [R2, #96]               @ 0x60 
    /*00002bdc*/ LDR         R0, [R1, #200]              @ 0xc8 
    /*00002be0*/ STR         R3, [R2, #132]              @ 0x84 
    /*00002be4*/ STR         R3, [R2, #108]              @ 0x6c 
    /*00002be8*/ STR         R0, [R2, #104]              @ 0x68 
    /*00002bec*/ STR         R3, [R2, #112]              @ 0x70 
    /*00002bf0*/ LDR         R3, [R1, #204]              @ 0xcc 
    /*00002bf4*/ STR         R3, [R2, #124]              @ 0x7c 
    /*00002bf8*/ LDR         R3, [R1, #208]              @ 0xd0 
    /*00002bfc*/ STR         R3, [R2, #128]              @ 0x80 
    /*00002c00*/ CMP         R4, #16 
    /*00002c04*/ LDRLS       PC, [PC, R4, LSL #2] 
    /*00002c08*/ B           RcTransParam_x3338
    /*00002c0c*/ ANDEQ       R2, R0, R4, LSR SP 
    /*00002c10*/ ANDEQ       R2, R0, IP, LSL #27 
    /*00002c14*/ ANDEQ       R2, R0, R4, LSR #28 
    /*00002c18*/ ANDEQ       R2, R0, R4, ASR #29 
    /*00002c1c*/ ANDEQ       R2, R0, IP, ASR PC 
    /*00002c20*/ ANDEQ       R3, R0, R8, LSR R3 
    /*00002c24*/ ANDEQ       R3, R0, IP 
    /*00002c28*/ ANDEQ       R3, R0, R4, LSL R0 
    /*00002c2c*/ ANDEQ       R3, R0, IP, RRX 
    /*00002c30*/ ANDEQ       R3, R0, R8, LSR R3 
    /*00002c34*/ STRDEQ      R3, [R0], -IP 
    /*00002c38*/ ANDEQ       R3, R0, IP, ASR R1 
    /*00002c3c*/ LDRDEQ      R3, [R0], -IP 
    /*00002c40*/ MULEQ       R0, IP, R2 
    /*00002c44*/ ANDEQ       R2, R0, R4, ROR IP 
    /*00002c48*/ ANDEQ       R3, R0, R8, LSR R3 
    /*00002c4c*/ ANDEQ       R3, R0, IP 
    RcTransParam_x2c50:
    /*00002c50*/ STR         R2, [SP, #20] 
    /*00002c54*/ STR         R1, [SP, #16] 
    /*00002c58*/ BL          0x000000000000211C 
    /*00002c5c*/ LDR         R1, [SP, #16] 
    /*00002c60*/ LDR         R2, [SP, #20] 
    /*00002c64*/ CMP         R0, #0 
    /*00002c68*/ BEQ         RcTransParam_x2b84
    RcTransParam_x2c6c:
    /*00002c6c*/ ADD         SP, SP, #28 
    /*00002c70*/ POP         {R4, R5, R6, R7, PC} 
    /*00002c74*/ MOV         R3, #100                    @ 0x64 
    /*00002c78*/ STR         R3, [R2, #144]              @ 0x90 
    /*00002c7c*/ LDR         IP, [R1, #216]              @ 0xd8 
    /*00002c80*/ MOV         LR, #3 
    /*00002c84*/ MOV         R7, #1 
    /*00002c88*/ MOV         R6, #5 
    /*00002c8c*/ MOV         R0, #0 
    /*00002c90*/ MOV         R4, #180                    @ 0xb4 
    /*00002c94*/ STR         IP, [R2, #140]              @ 0x8c 
    /*00002c98*/ LDR         IP, [R1, #212]              @ 0xd4 
    /*00002c9c*/ STR         LR, [R2, #148]              @ 0x94 
    /*00002ca0*/ MOV         LR, #30 
    /*00002ca4*/ STR         IP, [R2, #136]              @ 0x88 
    /*00002ca8*/ LDR         IP, [R1, #220]              @ 0xdc 
    /*00002cac*/ STR         IP, [R2, #152]              @ 0x98 
    /*00002cb0*/ MOV         IP, #40                     @ 0x28 
    /*00002cb4*/ LDR         R5, [R1, #224]              @ 0xe0 
    /*00002cb8*/ STR         R5, [R2, #212]              @ 0xd4 
    /*00002cbc*/ LDR         R5, [R1, #228]              @ 0xe4 
    /*00002cc0*/ STR         R5, [R2, #216]              @ 0xd8 
    /*00002cc4*/ LDR         R5, [R1, #244]              @ 0xf4 
    /*00002cc8*/ STR         R5, [R2, #156]              @ 0x9c 
    /*00002ccc*/ LDR         R5, [R1, #236]              @ 0xec 
    /*00002cd0*/ STR         R5, [R2, #160]              @ 0xa0 
    /*00002cd4*/ LDR         R5, [R1, #232]              @ 0xe8 
    /*00002cd8*/ STR         R5, [R2, #168]              @ 0xa8 
    /*00002cdc*/ LDR         R5, [R1, #240]              @ 0xf0 
    /*00002ce0*/ STR         R7, [R2, #132]              @ 0x84 
    /*00002ce4*/ STR         R6, [R2, #172]              @ 0xac 
    /*00002ce8*/ STR         R5, [R2, #164]              @ 0xa4 
    /*00002cec*/ LDR         R5, [R1, #240]              @ 0xf0 
    /*00002cf0*/ STR         R3, [R2, #184]              @ 0xb8 
    /*00002cf4*/ MOV         R3, #18 
    /*00002cf8*/ STR         R0, [R2, #180]              @ 0xb4 
    /*00002cfc*/ STR         R5, [R2, #176]              @ 0xb0 
    /*00002d00*/ STR         R4, [R2, #188]              @ 0xbc 
    /*00002d04*/ STR         LR, [R2, #192]              @ 0xc0 
    /*00002d08*/ STR         IP, [R2, #196]              @ 0xc4 
    /*00002d0c*/ STR         R3, [R2, #200]              @ 0xc8 
    /*00002d10*/ LDR         R3, [R1, #248]              @ 0xf8 
    /*00002d14*/ STR         R3, [R2, #108]              @ 0x6c 
    /*00002d18*/ LDR         R3, [R1, #252]              @ 0xfc 
    /*00002d1c*/ STR         R3, [R2, #112]              @ 0x70 
    /*00002d20*/ LDR         R3, [R1, #256]              @ 0x100 
    /*00002d24*/ STR         R3, [R2, #204]              @ 0xcc 
    /*00002d28*/ LDR         R3, [R1, #260]              @ 0x104 
    /*00002d2c*/ STR         R3, [R2, #208]              @ 0xd0 
    /*00002d30*/ B           RcTransParam_x2c6c
    /*00002d34*/ LDR         R3, [R1, #212]              @ 0xd4 
    /*00002d38*/ MOV         LR, #5 
    /*00002d3c*/ MOV         IP, #1 
    /*00002d40*/ MOV         R0, #0 
    /*00002d44*/ STR         R3, [R2, #136]              @ 0x88 
    /*00002d48*/ LDR         R3, [R1, #216]              @ 0xd8 
    /*00002d4c*/ STR         R3, [R2, #140]              @ 0x8c 
    /*00002d50*/ LDR         R3, [R1, #220]              @ 0xdc 
    /*00002d54*/ STR         R3, [R2, #144]              @ 0x90 
    /*00002d58*/ LDR         R3, [R1, #224]              @ 0xe0 
    /*00002d5c*/ STR         R3, [R2, #148]              @ 0x94 
    /*00002d60*/ LDR         R3, [R1, #232]              @ 0xe8 
    /*00002d64*/ STR         R3, [R2, #152]              @ 0x98 
    /*00002d68*/ LDR         R3, [R1, #228]              @ 0xe4 
    /*00002d6c*/ STR         LR, [R2, #160]              @ 0xa0 
    /*00002d70*/ STR         IP, [R2, #164]              @ 0xa4 
    /*00002d74*/ STR         R3, [R2, #156]              @ 0x9c 
    /*00002d78*/ LDR         R3, [R1, #236]              @ 0xec 
    /*00002d7c*/ STR         R3, [R2, #168]              @ 0xa8 
    /*00002d80*/ LDR         R3, [R1, #240]              @ 0xf0 
    /*00002d84*/ STR         R3, [R2, #172]              @ 0xac 
    /*00002d88*/ B           RcTransParam_x2c6c
    /*00002d8c*/ LDR         IP, [R1, #212]              @ 0xd4 
    /*00002d90*/ MOV         LR, #3 
    /*00002d94*/ MOV         R7, #5 
    /*00002d98*/ MOV         R3, #0 
    /*00002d9c*/ MOV         R0, R3 
    /*00002da0*/ MOV         R5, #100                    @ 0x64 
    /*00002da4*/ STR         IP, [R2, #144]              @ 0x90 
    /*00002da8*/ MOV         R4, #180                    @ 0xb4 
    /*00002dac*/ LDR         IP, [R1, #220]              @ 0xdc 
    /*00002db0*/ STR         IP, [R2, #140]              @ 0x8c 
    /*00002db4*/ LDR         IP, [R1, #216]              @ 0xd8 
    /*00002db8*/ STR         LR, [R2, #148]              @ 0x94 
    /*00002dbc*/ MOV         LR, #30 
    /*00002dc0*/ STR         IP, [R2, #136]              @ 0x88 
    /*00002dc4*/ MOV         IP, #40                     @ 0x28 
    /*00002dc8*/ LDR         R6, [R1, #224]              @ 0xe0 
    /*00002dcc*/ STR         R6, [R2, #152]              @ 0x98 
    /*00002dd0*/ LDR         R6, [R1, #228]              @ 0xe4 
    /*00002dd4*/ STR         R6, [R2, #212]              @ 0xd4 
    /*00002dd8*/ LDR         R6, [R1, #244]              @ 0xf4 
    /*00002ddc*/ STR         R6, [R2, #156]              @ 0x9c 
    /*00002de0*/ LDR         R6, [R1, #236]              @ 0xec 
    /*00002de4*/ STR         R6, [R2, #160]              @ 0xa0 
    /*00002de8*/ LDR         R6, [R1, #240]              @ 0xf0 
    /*00002dec*/ STR         R6, [R2, #164]              @ 0xa4 
    /*00002df0*/ LDR         R6, [R1, #232]              @ 0xe8 
    /*00002df4*/ STR         R7, [R2, #172]              @ 0xac 
    /*00002df8*/ STR         R6, [R2, #168]              @ 0xa8 
    /*00002dfc*/ LDR         R1, [R1, #240]              @ 0xf0 
    RcTransParam_x2e00:
    /*00002e00*/ STR         R3, [R2, #180]              @ 0xb4 
    /*00002e04*/ MOV         R3, #18 
    /*00002e08*/ STR         R5, [R2, #184]              @ 0xb8 
    /*00002e0c*/ STR         R1, [R2, #176]              @ 0xb0 
    /*00002e10*/ STR         R4, [R2, #188]              @ 0xbc 
    /*00002e14*/ STR         LR, [R2, #192]              @ 0xc0 
    /*00002e18*/ STR         IP, [R2, #196]              @ 0xc4 
    /*00002e1c*/ STR         R3, [R2, #200]              @ 0xc8 
    /*00002e20*/ B           RcTransParam_x2c6c
    /*00002e24*/ LDR         R0, [R1, #212]              @ 0xd4 
    /*00002e28*/ MOV         R6, #3 
    /*00002e2c*/ MOV         R4, #180                    @ 0xb4 
    /*00002e30*/ MOV         LR, #30 
    /*00002e34*/ MOV         IP, #40                     @ 0x28 
    /*00002e38*/ MOV         R3, #18 
    /*00002e3c*/ STR         R0, [R2, #144]              @ 0x90 
    /*00002e40*/ MOV         R0, #0 
    /*00002e44*/ LDR         R5, [R1, #220]              @ 0xdc 
    /*00002e48*/ STR         R5, [R2, #140]              @ 0x8c 
    /*00002e4c*/ LDR         R5, [R1, #216]              @ 0xd8 
    /*00002e50*/ STR         R6, [R2, #148]              @ 0x94 
    /*00002e54*/ STR         R5, [R2, #136]              @ 0x88 
    /*00002e58*/ LDR         R5, [R1, #224]              @ 0xe0 
    /*00002e5c*/ STR         R5, [R2, #152]              @ 0x98 
    /*00002e60*/ LDR         R5, [R1, #228]              @ 0xe4 
    /*00002e64*/ STR         R5, [R2, #212]              @ 0xd4 
    /*00002e68*/ LDR         R5, [R1, #256]              @ 0x100 
    /*00002e6c*/ STR         R5, [R2, #156]              @ 0x9c 
    /*00002e70*/ LDR         R5, [R1, #248]              @ 0xf8 
    /*00002e74*/ STR         R5, [R2, #160]              @ 0xa0 
    /*00002e78*/ LDR         R5, [R1, #252]              @ 0xfc 
    /*00002e7c*/ STR         R5, [R2, #164]              @ 0xa4 
    /*00002e80*/ LDR         R5, [R1, #244]              @ 0xf4 
    /*00002e84*/ STR         R5, [R2, #168]              @ 0xa8 
    /*00002e88*/ LDR         R5, [R1, #232]              @ 0xe8 
    /*00002e8c*/ STR         R5, [R2, #172]              @ 0xac 
    /*00002e90*/ LDR         R5, [R1, #236]              @ 0xec 
    /*00002e94*/ STR         R5, [R2, #176]              @ 0xb0 
    /*00002e98*/ LDR         R5, [R1, #240]              @ 0xf0 
    /*00002e9c*/ STR         R5, [R2, #180]              @ 0xb4 
    /*00002ea0*/ LDR         R5, [R1, #264]              @ 0x108 
    /*00002ea4*/ STR         R5, [R2, #184]              @ 0xb8 
    /*00002ea8*/ LDR         R1, [R1, #260]              @ 0x104 
    /*00002eac*/ STR         R4, [R2, #188]              @ 0xbc 
    /*00002eb0*/ STR         LR, [R2, #192]              @ 0xc0 
    /*00002eb4*/ STR         R1, [R2, #108]              @ 0x6c 
    /*00002eb8*/ STR         IP, [R2, #196]              @ 0xc4 
    /*00002ebc*/ STR         R3, [R2, #200]              @ 0xc8 
    /*00002ec0*/ B           RcTransParam_x2c6c
    /*00002ec4*/ MOV         IP, #100                    @ 0x64 
    /*00002ec8*/ STR         IP, [R2, #144]              @ 0x90 
    /*00002ecc*/ LDR         LR, [R1, #216]              @ 0xd8 
    /*00002ed0*/ MOV         R5, #3 
    /*00002ed4*/ MOV         R3, #0 
    /*00002ed8*/ MOV         R4, #5 
    /*00002edc*/ MOV         R0, R3 
    /*00002ee0*/ STR         LR, [R2, #140]              @ 0x8c 
    /*00002ee4*/ LDR         LR, [R1, #212]              @ 0xd4 
    /*00002ee8*/ STR         R5, [R2, #148]              @ 0x94 
    /*00002eec*/ STR         LR, [R2, #136]              @ 0x88 
    /*00002ef0*/ LDR         LR, [R1, #220]              @ 0xdc 
    /*00002ef4*/ STR         LR, [R2, #152]              @ 0x98 
    /*00002ef8*/ LDR         LR, [R1, #224]              @ 0xe0 
    /*00002efc*/ STR         R3, [R2, #216]              @ 0xd8 
    /*00002f00*/ STR         LR, [R2, #212]              @ 0xd4 
    /*00002f04*/ LDR         LR, [R1, #240]              @ 0xf0 
    /*00002f08*/ STR         LR, [R2, #156]              @ 0x9c 
    /*00002f0c*/ LDR         LR, [R1, #232]              @ 0xe8 
    /*00002f10*/ STR         LR, [R2, #160]              @ 0xa0 
    /*00002f14*/ LDR         LR, [R1, #236]              @ 0xec 
    /*00002f18*/ STR         LR, [R2, #164]              @ 0xa4 
    /*00002f1c*/ LDR         LR, [R1, #228]              @ 0xe4 
    /*00002f20*/ STR         R4, [R2, #172]              @ 0xac 
    /*00002f24*/ STR         LR, [R2, #168]              @ 0xa8 
    /*00002f28*/ LDR         LR, [R1, #228]              @ 0xe4 
    /*00002f2c*/ STR         IP, [R2, #184]              @ 0xb8 
    /*00002f30*/ STR         R3, [R2, #180]              @ 0xb4 
    /*00002f34*/ STR         LR, [R2, #176]              @ 0xb0 
    /*00002f38*/ LDR         R3, [R1, #244]              @ 0xf4 
    /*00002f3c*/ STR         R3, [R2, #188]              @ 0xbc 
    /*00002f40*/ LDR         R3, [R1, #248]              @ 0xf8 
    /*00002f44*/ STR         R3, [R2, #192]              @ 0xc0 
    /*00002f48*/ LDR         R3, [R1, #252]              @ 0xfc 
    /*00002f4c*/ STR         R3, [R2, #196]              @ 0xc4 
    /*00002f50*/ LDR         R3, [R1, #256]              @ 0x100 
    /*00002f54*/ STR         R3, [R2, #200]              @ 0xc8 
    /*00002f58*/ B           RcTransParam_x2c6c
    /*00002f5c*/ MOV         R3, #100                    @ 0x64 
    /*00002f60*/ STR         R3, [R2, #144]              @ 0x90 
    /*00002f64*/ LDR         IP, [R1, #216]              @ 0xd8 
    /*00002f68*/ MOV         LR, #3 
    /*00002f6c*/ MOV         R7, #5 
    /*00002f70*/ MOV         R0, #0 
    /*00002f74*/ MOV         R5, #180                    @ 0xb4 
    /*00002f78*/ MOV         R4, #30 
    /*00002f7c*/ STR         IP, [R2, #140]              @ 0x8c 
    /*00002f80*/ LDR         IP, [R1, #212]              @ 0xd4 
    /*00002f84*/ STR         LR, [R2, #148]              @ 0x94 
    /*00002f88*/ MOV         LR, #40                     @ 0x28 
    /*00002f8c*/ STR         IP, [R2, #136]              @ 0x88 
    /*00002f90*/ LDR         IP, [R1, #220]              @ 0xdc 
    /*00002f94*/ STR         IP, [R2, #152]              @ 0x98 
    /*00002f98*/ MOV         IP, #18 
    /*00002f9c*/ LDR         R6, [R1, #224]              @ 0xe0 
    /*00002fa0*/ STR         R6, [R2, #212]              @ 0xd4 
    /*00002fa4*/ LDR         R6, [R1, #240]              @ 0xf0 
    /*00002fa8*/ STR         R6, [R2, #156]              @ 0x9c 
    /*00002fac*/ LDR         R6, [R1, #232]              @ 0xe8 
    /*00002fb0*/ STR         R6, [R2, #160]              @ 0xa0 
    /*00002fb4*/ LDR         R6, [R1, #236]              @ 0xec 
    /*00002fb8*/ STR         R6, [R2, #164]              @ 0xa4 
    /*00002fbc*/ LDR         R6, [R1, #228]              @ 0xe4 
    /*00002fc0*/ STR         R7, [R2, #172]              @ 0xac 
    /*00002fc4*/ STR         R6, [R2, #168]              @ 0xa8 
    /*00002fc8*/ LDR         R6, [R1, #236]              @ 0xec 
    /*00002fcc*/ STR         R3, [R2, #184]              @ 0xb8 
    /*00002fd0*/ STR         R0, [R2, #180]              @ 0xb4 
    /*00002fd4*/ STR         R6, [R2, #176]              @ 0xb0 
    /*00002fd8*/ STR         R5, [R2, #188]              @ 0xbc 
    /*00002fdc*/ STR         R4, [R2, #192]              @ 0xc0 
    /*00002fe0*/ STR         LR, [R2, #196]              @ 0xc4 
    /*00002fe4*/ STR         IP, [R2, #200]              @ 0xc8 
    /*00002fe8*/ LDR         R3, [R1, #244]              @ 0xf4 
    /*00002fec*/ STR         R3, [R2, #108]              @ 0x6c 
    /*00002ff0*/ LDR         R3, [R1, #248]              @ 0xf8 
    /*00002ff4*/ STR         R3, [R2, #112]              @ 0x70 
    /*00002ff8*/ LDR         R3, [R1, #252]              @ 0xfc 
    /*00002ffc*/ STR         R3, [R2, #204]              @ 0xcc 
    /*00003000*/ LDR         R3, [R1, #256]              @ 0x100 
    /*00003004*/ STR         R3, [R2, #208]              @ 0xd0 
    /*00003008*/ B           RcTransParam_x2c6c
    /*0000300c*/ MOV         R0, #0 
    /*00003010*/ B           RcTransParam_x2c6c
    /*00003014*/ MOV         R3, #1 
    /*00003018*/ MOV         R0, #100                    @ 0x64 
    /*0000301c*/ STR         R3, [R2, #136]              @ 0x88 
    /*00003020*/ MOV         R3, #0 
    /*00003024*/ STR         R0, [R2, #140]              @ 0x8c 
    /*00003028*/ MOV         R4, #10 
    /*0000302c*/ LDR         R5, [R1, #212]              @ 0xd4 
    /*00003030*/ MOV         LR, #3 
    /*00003034*/ MOV         IP, #2 
    /*00003038*/ MOV         R0, R3 
    /*0000303c*/ STR         R5, [R2, #144]              @ 0x90 
    /*00003040*/ LDR         R5, [R1, #216]              @ 0xd8 
    /*00003044*/ STR         R5, [R2, #148]              @ 0x94 
    /*00003048*/ LDR         R5, [R1, #212]              @ 0xd4 
    /*0000304c*/ STR         R5, [R2, #156]              @ 0x9c 
    /*00003050*/ LDR         R1, [R1, #216]              @ 0xd8 
    /*00003054*/ STR         R3, [R2, #172]              @ 0xac 
    /*00003058*/ STR         R4, [R2, #160]              @ 0xa0 
    /*0000305c*/ STR         R1, [R2, #152]              @ 0x98 
    /*00003060*/ STR         LR, [R2, #164]              @ 0xa4 
    /*00003064*/ STR         IP, [R2, #168]              @ 0xa8 
    /*00003068*/ B           RcTransParam_x2c6c
    /*0000306c*/ LDR         R0, [R1, #212]              @ 0xd4 
    /*00003070*/ MOV         R3, #100                    @ 0x64 
    /*00003074*/ MOV         IP, #0 
    /*00003078*/ MOV         R4, #3 
    /*0000307c*/ MOV         LR, #2 
    /*00003080*/ MOV         R7, #1 
    /*00003084*/ STR         R0, [R2, #144]              @ 0x90 
    /*00003088*/ MOV         R6, #5 
    /*0000308c*/ LDR         R0, [R1, #216]              @ 0xd8 
    /*00003090*/ STR         R0, [R2, #168]              @ 0xa8 
    /*00003094*/ MOV         R0, IP 
    /*00003098*/ LDR         R5, [R1, #220]              @ 0xdc 
    /*0000309c*/ STR         R5, [R2, #160]              @ 0xa0 
    /*000030a0*/ LDR         R5, [R1, #216]              @ 0xd8 
    /*000030a4*/ STR         R5, [R2, #164]              @ 0xa4 
    /*000030a8*/ LDR         R5, [R1, #220]              @ 0xdc 
    /*000030ac*/ STR         R4, [R2, #148]              @ 0x94 
    /*000030b0*/ MOV         R4, #30 
    /*000030b4*/ STR         LR, [R2, #152]              @ 0x98 
    /*000030b8*/ MOV         LR, #40                     @ 0x28 
    /*000030bc*/ STR         R5, [R2, #156]              @ 0x9c 
    /*000030c0*/ MOV         R5, #180                    @ 0xb4 
    /*000030c4*/ STR         IP, [R2, #212]              @ 0xd4 
    /*000030c8*/ MOV         IP, #18 
    /*000030cc*/ STR         R3, [R2, #140]              @ 0x8c 
    /*000030d0*/ STR         R7, [R2, #136]              @ 0x88 
    /*000030d4*/ STR         R6, [R2, #172]              @ 0xac 
    /*000030d8*/ LDR         R1, [R1, #216]              @ 0xd8 
    /*000030dc*/ STR         R3, [R2, #180]              @ 0xb4 
    /*000030e0*/ STR         R3, [R2, #184]              @ 0xb8 
    /*000030e4*/ STR         R1, [R2, #176]              @ 0xb0 
    /*000030e8*/ STR         R5, [R2, #188]              @ 0xbc 
    /*000030ec*/ STR         R4, [R2, #192]              @ 0xc0 
    /*000030f0*/ STR         LR, [R2, #196]              @ 0xc4 
    /*000030f4*/ STR         IP, [R2, #200]              @ 0xc8 
    /*000030f8*/ B           RcTransParam_x2c6c
    /*000030fc*/ LDR         R3, [R1, #212]              @ 0xd4 
    /*00003100*/ MOV         LR, #5 
    /*00003104*/ MOV         IP, #1 
    /*00003108*/ MOV         R0, #0 
    /*0000310c*/ STR         R3, [R2, #136]              @ 0x88 
    /*00003110*/ LDR         R3, [R1, #216]              @ 0xd8 
    /*00003114*/ STR         R3, [R2, #140]              @ 0x8c 
    /*00003118*/ LDR         R3, [R1, #220]              @ 0xdc 
    /*0000311c*/ STR         R3, [R2, #144]              @ 0x90 
    /*00003120*/ LDR         R3, [R1, #224]              @ 0xe0 
    /*00003124*/ STR         R3, [R2, #148]              @ 0x94 
    /*00003128*/ LDR         R3, [R1, #232]              @ 0xe8 
    /*0000312c*/ STR         R3, [R2, #152]              @ 0x98 
    /*00003130*/ LDR         R3, [R1, #228]              @ 0xe4 
    /*00003134*/ STR         LR, [R2, #160]              @ 0xa0 
    /*00003138*/ STR         IP, [R2, #164]              @ 0xa4 
    /*0000313c*/ STR         R3, [R2, #156]              @ 0x9c 
    /*00003140*/ LDR         R3, [R1, #236]              @ 0xec 
    /*00003144*/ STR         R3, [R2, #168]              @ 0xa8 
    /*00003148*/ LDR         R3, [R1, #240]              @ 0xf0 
    /*0000314c*/ STR         R3, [R2, #172]              @ 0xac 
    /*00003150*/ LDR         R3, [R1, #244]              @ 0xf4 
    /*00003154*/ STR         R3, [R2, #176]              @ 0xb0 
    /*00003158*/ B           RcTransParam_x2c6c
    /*0000315c*/ LDR         IP, [R1, #212]              @ 0xd4 
    /*00003160*/ MOV         LR, #3 
    /*00003164*/ MOV         R3, #0 
    /*00003168*/ MOV         R7, #5 
    /*0000316c*/ MOV         R0, R3 
    /*00003170*/ MOV         R5, #100                    @ 0x64 
    /*00003174*/ STR         IP, [R2, #144]              @ 0x90 
    /*00003178*/ MOV         R4, #180                    @ 0xb4 
    /*0000317c*/ LDR         IP, [R1, #220]              @ 0xdc 
    /*00003180*/ STR         IP, [R2, #140]              @ 0x8c 
    /*00003184*/ LDR         IP, [R1, #216]              @ 0xd8 
    /*00003188*/ STR         LR, [R2, #148]              @ 0x94 
    /*0000318c*/ MOV         LR, #30 
    /*00003190*/ STR         IP, [R2, #136]              @ 0x88 
    /*00003194*/ MOV         IP, #40                     @ 0x28 
    /*00003198*/ LDR         R6, [R1, #224]              @ 0xe0 
    /*0000319c*/ STR         R6, [R2, #152]              @ 0x98 
    /*000031a0*/ LDR         R6, [R1, #244]              @ 0xf4 
    /*000031a4*/ STR         R6, [R2, #212]              @ 0xd4 
    /*000031a8*/ LDR         R6, [R1, #248]              @ 0xf8 
    /*000031ac*/ STR         R6, [R2, #216]              @ 0xd8 
    /*000031b0*/ LDR         R6, [R1, #240]              @ 0xf0 
    /*000031b4*/ STR         R6, [R2, #156]              @ 0x9c 
    /*000031b8*/ LDR         R6, [R1, #232]              @ 0xe8 
    /*000031bc*/ STR         R6, [R2, #160]              @ 0xa0 
    /*000031c0*/ LDR         R6, [R1, #228]              @ 0xe4 
    /*000031c4*/ STR         R6, [R2, #168]              @ 0xa8 
    /*000031c8*/ LDR         R6, [R1, #236]              @ 0xec 
    /*000031cc*/ STR         R7, [R2, #172]              @ 0xac 
    /*000031d0*/ STR         R6, [R2, #164]              @ 0xa4 
    /*000031d4*/ LDR         R1, [R1, #236]              @ 0xec 
    /*000031d8*/ B           RcTransParam_x2e00
    /*000031dc*/ LDR         R3, [R1, #212]              @ 0xd4 
    /*000031e0*/ MOV         R0, #3 
    /*000031e4*/ STR         R3, [R2, #144]              @ 0x90 
    /*000031e8*/ LDR         R3, [R1, #220]              @ 0xdc 
    /*000031ec*/ STR         R3, [R2, #140]              @ 0x8c 
    /*000031f0*/ LDR         R3, [R1, #216]              @ 0xd8 
    /*000031f4*/ STR         R0, [R2, #148]              @ 0x94 
    /*000031f8*/ MOV         R0, #180                    @ 0xb4 
    /*000031fc*/ STR         R3, [R2, #136]              @ 0x88 
    /*00003200*/ LDR         R3, [R1, #224]              @ 0xe0 
    /*00003204*/ STR         R3, [R2, #152]              @ 0x98 
    /*00003208*/ LDR         R3, [R1, #264]              @ 0x108 
    /*0000320c*/ STR         R3, [R2, #212]              @ 0xd4 
    /*00003210*/ LDR         R3, [R1, #268]              @ 0x10c 
    /*00003214*/ STR         R3, [R2, #216]              @ 0xd8 
    /*00003218*/ LDR         R3, [R1, #252]              @ 0xfc 
    /*0000321c*/ STR         R3, [R2, #156]              @ 0x9c 
    /*00003220*/ LDR         R3, [R1, #244]              @ 0xf4 
    /*00003224*/ STR         R3, [R2, #160]              @ 0xa0 
    /*00003228*/ LDR         R3, [R1, #240]              @ 0xf0 
    /*0000322c*/ STR         R3, [R2, #168]              @ 0xa8 
    /*00003230*/ LDR         R3, [R1, #248]              @ 0xf8 
    /*00003234*/ STR         R3, [R2, #164]              @ 0xa4 
    /*00003238*/ LDR         R3, [R1, #228]              @ 0xe4 
    /*0000323c*/ STR         R3, [R2, #172]              @ 0xac 
    /*00003240*/ LDR         R3, [R1, #232]              @ 0xe8 
    /*00003244*/ STR         R3, [R2, #176]              @ 0xb0 
    /*00003248*/ LDR         R3, [R1, #236]              @ 0xec 
    /*0000324c*/ STR         R3, [R2, #180]              @ 0xb4 
    /*00003250*/ LDR         R3, [R1, #260]              @ 0x104 
    /*00003254*/ STR         R3, [R2, #184]              @ 0xb8 
    /*00003258*/ LDR         R3, [R1, #256]              @ 0x100 
    /*0000325c*/ STR         R3, [R2, #108]              @ 0x6c 
    /*00003260*/ LDR         R3, [R1, #236]              @ 0xec 
    /*00003264*/ CMP         R3, #100                    @ 0x64 
    /*00003268*/ MOVNE       R3, #1 
    /*0000326c*/ STRNE       R3, [R2, #132]              @ 0x84 
    /*00003270*/ LDR         R3, [R1, #256]              @ 0x100 
    /*00003274*/ MOV         R1, #30 
    /*00003278*/ STR         R0, [R2, #188]              @ 0xbc 
    /*0000327c*/ MOV         R0, #0 
    /*00003280*/ STR         R1, [R2, #192]              @ 0xc0 
    /*00003284*/ MOV         R1, #40                     @ 0x28 
    /*00003288*/ STR         R3, [R2, #108]              @ 0x6c 
    /*0000328c*/ MOV         R3, #18 
    /*00003290*/ STR         R1, [R2, #196]              @ 0xc4 
    /*00003294*/ STR         R3, [R2, #200]              @ 0xc8 
    /*00003298*/ B           RcTransParam_x2c6c
    /*0000329c*/ MOV         IP, #100                    @ 0x64 
    /*000032a0*/ STR         IP, [R2, #144]              @ 0x90 
    /*000032a4*/ LDR         LR, [R1, #216]              @ 0xd8 
    /*000032a8*/ MOV         R5, #3 
    /*000032ac*/ MOV         R4, #5 
    /*000032b0*/ MOV         R3, #0 
    /*000032b4*/ MOV         R0, R3 
    /*000032b8*/ STR         LR, [R2, #140]              @ 0x8c 
    /*000032bc*/ LDR         LR, [R1, #212]              @ 0xd4 
    /*000032c0*/ STR         R5, [R2, #148]              @ 0x94 
    /*000032c4*/ STR         LR, [R2, #136]              @ 0x88 
    /*000032c8*/ LDR         LR, [R1, #220]              @ 0xdc 
    /*000032cc*/ STR         LR, [R2, #152]              @ 0x98 
    /*000032d0*/ LDR         LR, [R1, #224]              @ 0xe0 
    /*000032d4*/ STR         LR, [R2, #212]              @ 0xd4 
    /*000032d8*/ LDR         LR, [R1, #228]              @ 0xe4 
    /*000032dc*/ STR         LR, [R2, #216]              @ 0xd8 
    /*000032e0*/ LDR         LR, [R1, #244]              @ 0xf4 
    /*000032e4*/ STR         LR, [R2, #156]              @ 0x9c 
    /*000032e8*/ LDR         LR, [R1, #236]              @ 0xec 
    /*000032ec*/ STR         LR, [R2, #160]              @ 0xa0 
    /*000032f0*/ LDR         LR, [R1, #232]              @ 0xe8 
    /*000032f4*/ STR         LR, [R2, #168]              @ 0xa8 
    /*000032f8*/ LDR         LR, [R1, #240]              @ 0xf0 
    /*000032fc*/ STR         R4, [R2, #172]              @ 0xac 
    /*00003300*/ STR         LR, [R2, #164]              @ 0xa4 
    /*00003304*/ LDR         LR, [R1, #240]              @ 0xf0 
    /*00003308*/ STR         IP, [R2, #184]              @ 0xb8 
    /*0000330c*/ STR         R3, [R2, #180]              @ 0xb4 
    /*00003310*/ STR         LR, [R2, #176]              @ 0xb0 
    /*00003314*/ LDR         R3, [R1, #248]              @ 0xf8 
    /*00003318*/ STR         R3, [R2, #188]              @ 0xbc 
    /*0000331c*/ LDR         R3, [R1, #252]              @ 0xfc 
    /*00003320*/ STR         R3, [R2, #192]              @ 0xc0 
    /*00003324*/ LDR         R3, [R1, #256]              @ 0x100 
    /*00003328*/ STR         R3, [R2, #196]              @ 0xc4 
    /*0000332c*/ LDR         R3, [R1, #260]              @ 0x104 
    /*00003330*/ STR         R3, [R2, #200]              @ 0xc8 
    /*00003334*/ B           RcTransParam_x2c6c
    RcTransParam_x3338:
    /*00003338*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000333c*/ MOVT        R0, #40979                  @ 0xa013 
    /*00003340*/ B           RcTransParam_x2c6c
    RcTransParam_x3344:
    /*00003344*/ STR         R2, [SP, #20] 
    /*00003348*/ STR         R1, [SP, #16] 
    /*0000334c*/ BL          0x000000000000211C 
    /*00003350*/ LDR         R1, [SP, #16] 
    /*00003354*/ LDR         R2, [SP, #20] 
    /*00003358*/ CMP         R0, #0 
    /*0000335c*/ BNE         RcTransParam_x2c6c
    /*00003360*/ B           RcTransParam_x2b8c
    RcTransParam_x3364:
    /*00003364*/ STR         R0, [SP, #4] 
    /*00003368*/ MOV         R2, #16 
    /*0000336c*/ MOV         R3, #1 
    /*00003370*/ STR         R2, [SP, #12] 
    /*00003374*/ STR         R3, [SP, #8] 
    /*00003378*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14bc] 
    /*0000337c*/ MOV         R3, #852                    @ 0x354 
    /*00003380*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14bc] 
    /*00003384*/ STR         R3, [SP] 
    /*00003388*/ MOV         R1, #19 
    /*0000338c*/ LDR         R3, [PC, #16]               @ 0x00000000000033a4 
    /*00003390*/ MOV         R0, #3 
    /*00003394*/ BL          0x0000000000003394          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003398*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000339c*/ MOVT        R0, #40979                  @ 0xa013 
    /*000033a0*/ B           RcTransParam_x2c6c
    /*000033a4*/ ANDEQ       R0, R0, R0, ROR R1 
FUNC_END RcTransParam


FUNC_BEGIN RC_RevTransParam
    /*000033a8*/ PUSH        {R4, R5, LR} 
    /*000033ac*/ SUBS        R4, R1, #0 
    /*000033b0*/ SUB         SP, SP, #28 
    /*000033b4*/ MOV         R5, R0 
    /*000033b8*/ BEQ         RC_RevTransParam_x346c
    RC_RevTransParam_x33bc:
    /*000033bc*/ CMP         R2, #0 
    /*000033c0*/ BEQ         RC_RevTransParam_x38a8
    RC_RevTransParam_x33c4:
    /*000033c4*/ SUB         R3, R4, #1 
    /*000033c8*/ SUB         R0, R2, #4 
    /*000033cc*/ ADD         R1, R4, #15 
    RC_RevTransParam_x33d0:
    /*000033d0*/ LDRB        IP, [R3, #1]! 
    /*000033d4*/ CMP         R1, R3 
    /*000033d8*/ STR         IP, [R0, #4]! 
    /*000033dc*/ LDRB        IP, [R3, #16] 
    /*000033e0*/ STR         IP, [R0, #64]               @ 0x40 
    /*000033e4*/ LDRB        IP, [R3, #32] 
    /*000033e8*/ STR         IP, [R0, #128]              @ 0x80 
    /*000033ec*/ BNE         RC_RevTransParam_x33d0
    /*000033f0*/ LDR         R1, [R4, #96]               @ 0x60 
    /*000033f4*/ SUB         R3, R5, #1 
    /*000033f8*/ STR         R1, [R2, #192]              @ 0xc0 
    /*000033fc*/ LDR         R1, [R4, #100]              @ 0x64 
    /*00003400*/ STR         R1, [R2, #196]              @ 0xc4 
    /*00003404*/ LDR         R1, [R4, #104]              @ 0x68 
    /*00003408*/ STR         R1, [R2, #200]              @ 0xc8 
    /*0000340c*/ LDR         R1, [R4, #124]              @ 0x7c 
    /*00003410*/ STR         R1, [R2, #204]              @ 0xcc 
    /*00003414*/ LDR         R1, [R4, #128]              @ 0x80 
    /*00003418*/ STR         R1, [R2, #208]              @ 0xd0 
    /*0000341c*/ CMP         R3, #16 
    /*00003420*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*00003424*/ B           RC_RevTransParam_x38c0
    /*00003428*/ ANDEQ       R3, R0, R8, ASR R6 
    /*0000342c*/ ANDEQ       R3, R0, R0, LSR #13 
    /*00003430*/ STRDEQ      R3, [R0], -R0 
    /*00003434*/ ANDEQ       R3, R0, R8, ROR #14 
    /*00003438*/ LDRDEQ      R3, [R0], -R0 
    /*0000343c*/ ANDEQ       R3, R0, R8, LSL #9 
    /*00003440*/ ANDEQ       R3, R0, R8, LSL #9 
    /*00003444*/ MULEQ       R0, R0, R4 
    /*00003448*/ ANDEQ       R3, R0, R8, LSR #9 
    /*0000344c*/ ANDEQ       R3, R0, R8, LSL #9 
    /*00003450*/ ANDEQ       R3, R0, R0, LSR R5 
    /*00003454*/ ANDEQ       R3, R0, R0, LSL #11 
    /*00003458*/ LDRDEQ      R3, [R0], -R8 
    /*0000345c*/ ANDEQ       R3, R0, R8, ASR #9 
    /*00003460*/ ANDEQ       R3, R0, R8, LSR R8 
    /*00003464*/ ANDEQ       R3, R0, R8, LSL #9 
    /*00003468*/ ANDEQ       R3, R0, R8, LSL #9 
    RC_RevTransParam_x346c:
    /*0000346c*/ STR         R2, [SP, #20] 
    /*00003470*/ BL          0x000000000000211C 
    /*00003474*/ LDR         R2, [SP, #20] 
    /*00003478*/ CMP         R0, #0 
    /*0000347c*/ BEQ         RC_RevTransParam_x33bc
    RC_RevTransParam_x3480:
    /*00003480*/ ADD         SP, SP, #28 
    /*00003484*/ POP         {R4, R5, PC} 
    /*00003488*/ MOV         R0, #0 
    /*0000348c*/ B           RC_RevTransParam_x3480
    /*00003490*/ LDR         R3, [R4, #144]              @ 0x90 
    /*00003494*/ MOV         R0, #0 
    /*00003498*/ STR         R3, [R2, #212]              @ 0xd4 
    /*0000349c*/ LDR         R3, [R4, #148]              @ 0x94 
    /*000034a0*/ STR         R3, [R2, #216]              @ 0xd8 
    /*000034a4*/ B           RC_RevTransParam_x3480
    /*000034a8*/ LDR         R3, [R4, #144]              @ 0x90 
    /*000034ac*/ MOV         R0, #0 
    /*000034b0*/ STR         R3, [R2, #212]              @ 0xd4 
    /*000034b4*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*000034b8*/ STR         R3, [R2, #216]              @ 0xd8 
    /*000034bc*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*000034c0*/ STR         R3, [R2, #220]              @ 0xdc 
    /*000034c4*/ B           RC_RevTransParam_x3480
    /*000034c8*/ LDR         R3, [R4, #136]              @ 0x88 
    /*000034cc*/ MOV         R0, #0 
    /*000034d0*/ STR         R3, [R2, #212]              @ 0xd4 
    /*000034d4*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*000034d8*/ STR         R3, [R2, #216]              @ 0xd8 
    /*000034dc*/ LDR         R3, [R4, #156]              @ 0x9c 
    /*000034e0*/ STR         R3, [R2, #244]              @ 0xf4 
    /*000034e4*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*000034e8*/ STR         R3, [R2, #240]              @ 0xf0 
    /*000034ec*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*000034f0*/ STR         R3, [R2, #236]              @ 0xec 
    /*000034f4*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*000034f8*/ STR         R3, [R2, #232]              @ 0xe8 
    /*000034fc*/ LDR         R3, [R4, #152]              @ 0x98 
    /*00003500*/ STR         R3, [R2, #220]              @ 0xdc 
    /*00003504*/ LDR         R3, [R4, #212]              @ 0xd4 
    /*00003508*/ STR         R3, [R2, #224]              @ 0xe0 
    /*0000350c*/ LDR         R3, [R4, #188]              @ 0xbc 
    /*00003510*/ STR         R3, [R2, #248]              @ 0xf8 
    /*00003514*/ LDR         R3, [R4, #192]              @ 0xc0 
    /*00003518*/ STR         R3, [R2, #252]              @ 0xfc 
    /*0000351c*/ LDR         R3, [R4, #196]              @ 0xc4 
    /*00003520*/ STR         R3, [R2, #256]              @ 0x100 
    /*00003524*/ LDR         R3, [R4, #200]              @ 0xc8 
    /*00003528*/ STR         R3, [R2, #260]              @ 0x104 
    /*0000352c*/ B           RC_RevTransParam_x3480
    /*00003530*/ LDR         R3, [R4, #136]              @ 0x88 
    /*00003534*/ MOV         R0, #0 
    /*00003538*/ STR         R3, [R2, #212]              @ 0xd4 
    /*0000353c*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*00003540*/ STR         R3, [R2, #216]              @ 0xd8 
    /*00003544*/ LDR         R3, [R4, #144]              @ 0x90 
    /*00003548*/ STR         R3, [R2, #220]              @ 0xdc 
    /*0000354c*/ LDR         R3, [R4, #148]              @ 0x94 
    /*00003550*/ STR         R3, [R2, #224]              @ 0xe0 
    /*00003554*/ LDR         R3, [R4, #152]              @ 0x98 
    /*00003558*/ STR         R3, [R2, #232]              @ 0xe8 
    /*0000355c*/ LDR         R3, [R4, #156]              @ 0x9c 
    /*00003560*/ STR         R3, [R2, #228]              @ 0xe4 
    /*00003564*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00003568*/ STR         R3, [R2, #236]              @ 0xec 
    /*0000356c*/ LDR         R3, [R4, #172]              @ 0xac 
    /*00003570*/ STR         R3, [R2, #240]              @ 0xf0 
    /*00003574*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*00003578*/ STR         R3, [R2, #244]              @ 0xf4 
    /*0000357c*/ B           RC_RevTransParam_x3480
    /*00003580*/ LDR         R3, [R4, #144]              @ 0x90 
    /*00003584*/ MOV         R0, #0 
    /*00003588*/ STR         R3, [R2, #212]              @ 0xd4 
    /*0000358c*/ LDR         R3, [R4, #136]              @ 0x88 
    /*00003590*/ STR         R3, [R2, #216]              @ 0xd8 
    /*00003594*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*00003598*/ STR         R3, [R2, #220]              @ 0xdc 
    /*0000359c*/ LDR         R3, [R4, #156]              @ 0x9c 
    /*000035a0*/ STR         R3, [R2, #240]              @ 0xf0 
    /*000035a4*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*000035a8*/ STR         R3, [R2, #236]              @ 0xec 
    /*000035ac*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*000035b0*/ STR         R3, [R2, #232]              @ 0xe8 
    /*000035b4*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*000035b8*/ STR         R3, [R2, #228]              @ 0xe4 
    /*000035bc*/ LDR         R3, [R4, #152]              @ 0x98 
    /*000035c0*/ STR         R3, [R2, #224]              @ 0xe0 
    /*000035c4*/ LDR         R3, [R4, #212]              @ 0xd4 
    /*000035c8*/ STR         R3, [R2, #244]              @ 0xf4 
    /*000035cc*/ LDR         R3, [R4, #216]              @ 0xd8 
    /*000035d0*/ STR         R3, [R2, #248]              @ 0xf8 
    /*000035d4*/ B           RC_RevTransParam_x3480
    /*000035d8*/ LDR         R3, [R4, #144]              @ 0x90 
    /*000035dc*/ MOV         R0, #0 
    /*000035e0*/ STR         R3, [R2, #212]              @ 0xd4 
    /*000035e4*/ LDR         R3, [R4, #136]              @ 0x88 
    /*000035e8*/ STR         R3, [R2, #216]              @ 0xd8 
    /*000035ec*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*000035f0*/ STR         R3, [R2, #220]              @ 0xdc 
    /*000035f4*/ LDR         R3, [R4, #156]              @ 0x9c 
    /*000035f8*/ STR         R3, [R2, #252]              @ 0xfc 
    /*000035fc*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*00003600*/ STR         R3, [R2, #248]              @ 0xf8 
    /*00003604*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*00003608*/ STR         R3, [R2, #244]              @ 0xf4 
    /*0000360c*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00003610*/ STR         R3, [R2, #240]              @ 0xf0 
    /*00003614*/ LDR         R3, [R4, #108]              @ 0x6c 
    /*00003618*/ STR         R3, [R2, #256]              @ 0x100 
    /*0000361c*/ LDR         R3, [R4, #152]              @ 0x98 
    /*00003620*/ STR         R3, [R2, #224]              @ 0xe0 
    /*00003624*/ LDR         R3, [R4, #172]              @ 0xac 
    /*00003628*/ STR         R3, [R2, #228]              @ 0xe4 
    /*0000362c*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*00003630*/ STR         R3, [R2, #232]              @ 0xe8 
    /*00003634*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*00003638*/ STR         R3, [R2, #236]              @ 0xec 
    /*0000363c*/ LDR         R3, [R4, #184]              @ 0xb8 
    /*00003640*/ STR         R3, [R2, #260]              @ 0x104 
    /*00003644*/ LDR         R3, [R4, #212]              @ 0xd4 
    /*00003648*/ STR         R3, [R2, #264]              @ 0x108 
    /*0000364c*/ LDR         R3, [R4, #216]              @ 0xd8 
    /*00003650*/ STR         R3, [R2, #268]              @ 0x10c 
    /*00003654*/ B           RC_RevTransParam_x3480
    /*00003658*/ LDR         R3, [R4, #136]              @ 0x88 
    /*0000365c*/ MOV         R0, #0 
    /*00003660*/ STR         R3, [R2, #212]              @ 0xd4 
    /*00003664*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*00003668*/ STR         R3, [R2, #216]              @ 0xd8 
    /*0000366c*/ LDR         R3, [R4, #144]              @ 0x90 
    /*00003670*/ STR         R3, [R2, #220]              @ 0xdc 
    /*00003674*/ LDR         R3, [R4, #148]              @ 0x94 
    /*00003678*/ STR         R3, [R2, #224]              @ 0xe0 
    /*0000367c*/ LDR         R3, [R4, #152]              @ 0x98 
    /*00003680*/ STR         R3, [R2, #232]              @ 0xe8 
    /*00003684*/ LDR         R3, [R4, #156]              @ 0x9c 
    /*00003688*/ STR         R3, [R2, #228]              @ 0xe4 
    /*0000368c*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00003690*/ STR         R3, [R2, #236]              @ 0xec 
    /*00003694*/ LDR         R3, [R4, #172]              @ 0xac 
    /*00003698*/ STR         R3, [R2, #240]              @ 0xf0 
    /*0000369c*/ B           RC_RevTransParam_x3480
    /*000036a0*/ LDR         R3, [R4, #144]              @ 0x90 
    /*000036a4*/ MOV         R0, #0 
    /*000036a8*/ STR         R3, [R2, #212]              @ 0xd4 
    /*000036ac*/ LDR         R3, [R4, #136]              @ 0x88 
    /*000036b0*/ STR         R3, [R2, #216]              @ 0xd8 
    /*000036b4*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*000036b8*/ STR         R3, [R2, #220]              @ 0xdc 
    /*000036bc*/ LDR         R3, [R4, #156]              @ 0x9c 
    /*000036c0*/ STR         R3, [R2, #244]              @ 0xf4 
    /*000036c4*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*000036c8*/ STR         R3, [R2, #240]              @ 0xf0 
    /*000036cc*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*000036d0*/ STR         R3, [R2, #236]              @ 0xec 
    /*000036d4*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*000036d8*/ STR         R3, [R2, #232]              @ 0xe8 
    /*000036dc*/ LDR         R3, [R4, #152]              @ 0x98 
    /*000036e0*/ STR         R3, [R2, #224]              @ 0xe0 
    /*000036e4*/ LDR         R3, [R4, #212]              @ 0xd4 
    /*000036e8*/ STR         R3, [R2, #228]              @ 0xe4 
    /*000036ec*/ B           RC_RevTransParam_x3480
    /*000036f0*/ LDR         R3, [R4, #144]              @ 0x90 
    /*000036f4*/ MOV         R0, #0 
    /*000036f8*/ STR         R3, [R2, #212]              @ 0xd4 
    /*000036fc*/ LDR         R3, [R4, #136]              @ 0x88 
    /*00003700*/ STR         R3, [R2, #216]              @ 0xd8 
    /*00003704*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*00003708*/ STR         R3, [R2, #220]              @ 0xdc 
    /*0000370c*/ LDR         R3, [R4, #156]              @ 0x9c 
    /*00003710*/ STR         R3, [R2, #256]              @ 0x100 
    /*00003714*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*00003718*/ STR         R3, [R2, #252]              @ 0xfc 
    /*0000371c*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*00003720*/ STR         R3, [R2, #248]              @ 0xf8 
    /*00003724*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00003728*/ STR         R3, [R2, #244]              @ 0xf4 
    /*0000372c*/ LDR         R3, [R4, #108]              @ 0x6c 
    /*00003730*/ STR         R3, [R2, #260]              @ 0x104 
    /*00003734*/ LDR         R3, [R4, #152]              @ 0x98 
    /*00003738*/ STR         R3, [R2, #224]              @ 0xe0 
    /*0000373c*/ LDR         R3, [R4, #212]              @ 0xd4 
    /*00003740*/ STR         R3, [R2, #228]              @ 0xe4 
    /*00003744*/ LDR         R3, [R4, #172]              @ 0xac 
    /*00003748*/ STR         R3, [R2, #232]              @ 0xe8 
    /*0000374c*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*00003750*/ STR         R3, [R2, #236]              @ 0xec 
    /*00003754*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*00003758*/ STR         R3, [R2, #240]              @ 0xf0 
    /*0000375c*/ LDR         R3, [R4, #184]              @ 0xb8 
    /*00003760*/ STR         R3, [R2, #264]              @ 0x108 
    /*00003764*/ B           RC_RevTransParam_x3480
    /*00003768*/ LDR         R3, [R4, #136]              @ 0x88 
    /*0000376c*/ MOV         R0, #0 
    /*00003770*/ STR         R3, [R2, #212]              @ 0xd4 
    /*00003774*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*00003778*/ STR         R3, [R2, #216]              @ 0xd8 
    /*0000377c*/ LDR         R3, [R4, #156]              @ 0x9c 
    /*00003780*/ STR         R3, [R2, #240]              @ 0xf0 
    /*00003784*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*00003788*/ STR         R3, [R2, #236]              @ 0xec 
    /*0000378c*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*00003790*/ STR         R3, [R2, #232]              @ 0xe8 
    /*00003794*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00003798*/ STR         R3, [R2, #228]              @ 0xe4 
    /*0000379c*/ LDR         R3, [R4, #152]              @ 0x98 
    /*000037a0*/ STR         R3, [R2, #220]              @ 0xdc 
    /*000037a4*/ LDR         R3, [R4, #212]              @ 0xd4 
    /*000037a8*/ STR         R3, [R2, #224]              @ 0xe0 
    /*000037ac*/ LDR         R3, [R4, #188]              @ 0xbc 
    /*000037b0*/ STR         R3, [R2, #244]              @ 0xf4 
    /*000037b4*/ LDR         R3, [R4, #192]              @ 0xc0 
    /*000037b8*/ STR         R3, [R2, #248]              @ 0xf8 
    /*000037bc*/ LDR         R3, [R4, #196]              @ 0xc4 
    /*000037c0*/ STR         R3, [R2, #252]              @ 0xfc 
    /*000037c4*/ LDR         R3, [R4, #200]              @ 0xc8 
    /*000037c8*/ STR         R3, [R2, #256]              @ 0x100 
    /*000037cc*/ B           RC_RevTransParam_x3480
    /*000037d0*/ LDR         R3, [R4, #136]              @ 0x88 
    /*000037d4*/ MOV         R0, #0 
    /*000037d8*/ STR         R3, [R2, #212]              @ 0xd4 
    /*000037dc*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*000037e0*/ STR         R3, [R2, #216]              @ 0xd8 
    /*000037e4*/ LDR         R3, [R4, #156]              @ 0x9c 
    /*000037e8*/ STR         R3, [R2, #240]              @ 0xf0 
    /*000037ec*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*000037f0*/ STR         R3, [R2, #236]              @ 0xec 
    /*000037f4*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*000037f8*/ STR         R3, [R2, #232]              @ 0xe8 
    /*000037fc*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00003800*/ STR         R3, [R2, #228]              @ 0xe4 
    /*00003804*/ LDR         R3, [R4, #152]              @ 0x98 
    /*00003808*/ STR         R3, [R2, #220]              @ 0xdc 
    /*0000380c*/ LDR         R3, [R4, #212]              @ 0xd4 
    /*00003810*/ STR         R3, [R2, #224]              @ 0xe0 
    /*00003814*/ LDR         R3, [R4, #108]              @ 0x6c 
    /*00003818*/ STR         R3, [R2, #244]              @ 0xf4 
    /*0000381c*/ LDR         R3, [R4, #112]              @ 0x70 
    /*00003820*/ STR         R3, [R2, #248]              @ 0xf8 
    /*00003824*/ LDR         R3, [R4, #204]              @ 0xcc 
    /*00003828*/ STR         R3, [R2, #252]              @ 0xfc 
    /*0000382c*/ LDR         R3, [R4, #208]              @ 0xd0 
    /*00003830*/ STR         R3, [R2, #256]              @ 0x100 
    /*00003834*/ B           RC_RevTransParam_x3480
    /*00003838*/ LDR         R3, [R4, #136]              @ 0x88 
    /*0000383c*/ MOV         R0, #0 
    /*00003840*/ STR         R3, [R2, #212]              @ 0xd4 
    /*00003844*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*00003848*/ STR         R3, [R2, #216]              @ 0xd8 
    /*0000384c*/ LDR         R3, [R4, #156]              @ 0x9c 
    /*00003850*/ STR         R3, [R2, #244]              @ 0xf4 
    /*00003854*/ LDR         R3, [R4, #164]              @ 0xa4 
    /*00003858*/ STR         R3, [R2, #240]              @ 0xf0 
    /*0000385c*/ LDR         R3, [R4, #160]              @ 0xa0 
    /*00003860*/ STR         R3, [R2, #236]              @ 0xec 
    /*00003864*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00003868*/ STR         R3, [R2, #232]              @ 0xe8 
    /*0000386c*/ LDR         R3, [R4, #152]              @ 0x98 
    /*00003870*/ STR         R3, [R2, #220]              @ 0xdc 
    /*00003874*/ LDR         R3, [R4, #212]              @ 0xd4 
    /*00003878*/ STR         R3, [R2, #224]              @ 0xe0 
    /*0000387c*/ LDR         R3, [R4, #216]              @ 0xd8 
    /*00003880*/ STR         R3, [R2, #228]              @ 0xe4 
    /*00003884*/ LDR         R3, [R4, #108]              @ 0x6c 
    /*00003888*/ STR         R3, [R2, #248]              @ 0xf8 
    /*0000388c*/ LDR         R3, [R4, #112]              @ 0x70 
    /*00003890*/ STR         R3, [R2, #252]              @ 0xfc 
    /*00003894*/ LDR         R3, [R4, #204]              @ 0xcc 
    /*00003898*/ STR         R3, [R2, #256]              @ 0x100 
    /*0000389c*/ LDR         R3, [R4, #208]              @ 0xd0 
    /*000038a0*/ STR         R3, [R2, #260]              @ 0x104 
    /*000038a4*/ B           RC_RevTransParam_x3480
    RC_RevTransParam_x38a8:
    /*000038a8*/ STR         R2, [SP, #20] 
    /*000038ac*/ BL          0x000000000000211C 
    /*000038b0*/ LDR         R2, [SP, #20] 
    /*000038b4*/ CMP         R0, #0 
    /*000038b8*/ BNE         RC_RevTransParam_x3480
    /*000038bc*/ B           RC_RevTransParam_x33c4
    RC_RevTransParam_x38c0:
    /*000038c0*/ MOV         R2, #16 
    /*000038c4*/ MOV         R3, #1 
    /*000038c8*/ STR         R2, [SP, #12] 
    /*000038cc*/ MOV         R1, #19 
    /*000038d0*/ STR         R3, [SP, #8] 
    /*000038d4*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14bc] 
    /*000038d8*/ MOVW        R3, #1525                   @ 0x5f5 
    /*000038dc*/ STR         R5, [SP, #4] 
    /*000038e0*/ STR         R3, [SP] 
    /*000038e4*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14bc] 
    /*000038e8*/ LDR         R3, [PC, #16]               @ 0x0000000000003900 
    /*000038ec*/ MOV         R0, #3 
    /*000038f0*/ BL          0x00000000000038F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000038f4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000038f8*/ MOVT        R0, #40968                  @ 0xa008 
    /*000038fc*/ B           RC_RevTransParam_x3480
    /*00003900*/ ANDEQ       R0, R0, R0, LSL #3 
FUNC_END RC_RevTransParam


FUNC_BEGIN RcCheckStaticAttr
    /*00003904*/ PUSH        {R4, LR} 
    /*00003908*/ SUBS        R4, R0, #0 
    /*0000390c*/ SUB         SP, SP, #24 
    /*00003910*/ BEQ         RcCheckStaticAttr_x395c
    RcCheckStaticAttr_x3914:
    /*00003914*/ CMP         R1, #0 
    /*00003918*/ BEQ         RcCheckStaticAttr_x39a8
    RcCheckStaticAttr_x391c:
    /*0000391c*/ LDR         R2, [R4, #48]               @ 0x30 
    /*00003920*/ LDR         R3, [R1, #48]               @ 0x30 
    /*00003924*/ CMP         R2, R3 
    /*00003928*/ BNE         RcCheckStaticAttr_x39c0
    /*0000392c*/ LDR         R3, [R4, #52]               @ 0x34 
    /*00003930*/ LDR         R2, [R1, #52]               @ 0x34 
    /*00003934*/ CMP         R3, R2 
    /*00003938*/ MOVEQ       R0, #0 
    /*0000393c*/ BEQ         RcCheckStaticAttr_x3954
    /*00003940*/ CMP         R2, #6 
    /*00003944*/ CMPNE       R3, #6 
    /*00003948*/ MOVEQ       R0, #1 
    /*0000394c*/ MOVNE       R0, #0 
    /*00003950*/ BEQ         RcCheckStaticAttr_x3974
    RcCheckStaticAttr_x3954:
    /*00003954*/ ADD         SP, SP, #24 
    /*00003958*/ POP         {R4, PC} 
    RcCheckStaticAttr_x395c:
    /*0000395c*/ STR         R1, [SP, #20] 
    /*00003960*/ BL          0x000000000000211C 
    /*00003964*/ LDR         R1, [SP, #20] 
    /*00003968*/ CMP         R0, #0 
    /*0000396c*/ BNE         RcCheckStaticAttr_x3954
    /*00003970*/ B           RcCheckStaticAttr_x3914
    RcCheckStaticAttr_x3974:
    /*00003974*/ STR         R2, [SP, #8] 
    /*00003978*/ MOVW        R1, #1572                   @ 0x624 
    /*0000397c*/ STR         R3, [SP, #4] 
    /*00003980*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1544] 
    /*00003984*/ STR         R1, [SP] 
    /*00003988*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1544] 
    /*0000398c*/ LDR         R3, [PC, #88]               @ 0x00000000000039ec 
    /*00003990*/ MOV         R1, #19 
    /*00003994*/ MOV         R0, #3 
    /*00003998*/ BL          0x0000000000003998          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000399c*/ MOVW        R0, #32777                  @ 0x8009 
    /*000039a0*/ MOVT        R0, #40979                  @ 0xa013 
    /*000039a4*/ B           RcCheckStaticAttr_x3954
    RcCheckStaticAttr_x39a8:
    /*000039a8*/ STR         R1, [SP, #20] 
    /*000039ac*/ BL          0x000000000000211C 
    /*000039b0*/ LDR         R1, [SP, #20] 
    /*000039b4*/ CMP         R0, #0 
    /*000039b8*/ BNE         RcCheckStaticAttr_x3954
    /*000039bc*/ B           RcCheckStaticAttr_x391c
    RcCheckStaticAttr_x39c0:
    /*000039c0*/ MOVW        R3, #1562                   @ 0x61a 
    /*000039c4*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1504] 
    /*000039c8*/ STR         R3, [SP] 
    /*000039cc*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1504] 
    /*000039d0*/ LDR         R3, [PC, #20]               @ 0x00000000000039ec 
    /*000039d4*/ MOV         R1, #19 
    /*000039d8*/ MOV         R0, #3 
    /*000039dc*/ BL          0x00000000000039DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000039e0*/ MOVW        R0, #32777                  @ 0x8009 
    /*000039e4*/ MOVT        R0, #40979                  @ 0xa013 
    /*000039e8*/ B           RcCheckStaticAttr_x3954
    /*000039ec*/ MULEQ       R0, R4, R1 
FUNC_END RcCheckStaticAttr


FUNC_BEGIN RcGetMaxMinQp
    /*000039f0*/ MOVW        R3, #265                    @ 0x109 
    /*000039f4*/ CMP         R0, R3 
    /*000039f8*/ CMPNE       R0, #96                     @ 0x60 
    /*000039fc*/ MOVEQ       R3, #1 
    /*00003a00*/ MOVNE       R3, #0 
    /*00003a04*/ BEQ         RcGetMaxMinQp_x3a30
    /*00003a08*/ MOVW        IP, #1002                   @ 0x3ea 
    /*00003a0c*/ CMP         R0, IP 
    /*00003a10*/ STRNE       R3, [R2] 
    /*00003a14*/ MOVEQ       R0, R3 
    /*00003a18*/ MOVEQ       IP, #1 
    /*00003a1c*/ MOVEQ       R3, #99                     @ 0x63 
    /*00003a20*/ STREQ       IP, [R2] 
    /*00003a24*/ MVNNE       R0, #0 
    /*00003a28*/ STR         R3, [R1] 
    /*00003a2c*/ BX          LR 
    RcGetMaxMinQp_x3a30:
    /*00003a30*/ MOV         R0, #0 
    /*00003a34*/ MOV         R3, #51                     @ 0x33 
    /*00003a38*/ STR         R0, [R2] 
    /*00003a3c*/ STR         R3, [R1] 
    /*00003a40*/ BX          LR 
FUNC_END RcGetMaxMinQp


FUNC_BEGIN RcCheckGopAttr
    /*00003a44*/ PUSH        {R4, R5, R6, LR} 
    /*00003a48*/ SUB         SP, SP, #16 
    /*00003a4c*/ LDR         R3, [R0, #4] 
    /*00003a50*/ ADD         R2, R3, #10 
    /*00003a54*/ CMP         R2, #40                     @ 0x28 
    /*00003a58*/ BHI         RcCheckGopAttr_x3bbc
    /*00003a5c*/ LDR         R3, [R0] 
    /*00003a60*/ MOV         R4, R0 
    /*00003a64*/ SUB         R2, R3, #2 
    /*00003a68*/ CMP         R2, #1 
    /*00003a6c*/ BLS         RcCheckGopAttr_x3a90
    /*00003a70*/ SUB         R2, R3, #4 
    /*00003a74*/ CMP         R2, #1 
    /*00003a78*/ BLS         RcCheckGopAttr_x3b6c
    /*00003a7c*/ CMP         R3, #1 
    /*00003a80*/ BEQ         RcCheckGopAttr_x3b10
    RcCheckGopAttr_x3a84:
    /*00003a84*/ MOV         R0, #0 
    RcCheckGopAttr_x3a88:
    /*00003a88*/ ADD         SP, SP, #16 
    /*00003a8c*/ POP         {R4, R5, R6, PC} 
    RcCheckGopAttr_x3a90:
    /*00003a90*/ LDR         R5, [R0, #24] 
    /*00003a94*/ LDR         R6, [R0, #32] 
    /*00003a98*/ CMP         R5, R6 
    /*00003a9c*/ BCC         RcCheckGopAttr_x3c00
    /*00003aa0*/ MOV         R1, R6 
    /*00003aa4*/ MOV         R0, R5 
    /*00003aa8*/ BL          0x0000000000003AA8          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*00003aac*/ SUBS        R0, R1, #0 
    /*00003ab0*/ BNE         RcCheckGopAttr_x3be4
    /*00003ab4*/ SUB         R3, R5, #1 
    /*00003ab8*/ CMP         R3, #65536                  @ 0x10000 
    /*00003abc*/ BCS         RcCheckGopAttr_x3c1c
    /*00003ac0*/ LDR         R3, [R4, #28] 
    /*00003ac4*/ ADD         R2, R3, #10 
    /*00003ac8*/ CMP         R2, #40                     @ 0x28 
    /*00003acc*/ BLS         RcCheckGopAttr_x3a88
    /*00003ad0*/ MOV         R2, #30 
    /*00003ad4*/ STR         R2, [SP, #12] 
    /*00003ad8*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1704] 
    /*00003adc*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1704] 
    /*00003ae0*/ STR         R3, [SP, #4] 
    /*00003ae4*/ MVN         R3, #9 
    /*00003ae8*/ STR         R3, [SP, #8] 
    /*00003aec*/ MOVW        R3, #1646                   @ 0x66e 
    /*00003af0*/ STR         R3, [SP] 
    RcCheckGopAttr_x3af4:
    /*00003af4*/ LDR         R3, [PC, #436]              @ 0x0000000000003cb0 
    /*00003af8*/ MOV         R1, #19 
    /*00003afc*/ MOV         R0, #3 
    /*00003b00*/ BL          0x0000000000003B00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003b04*/ MOVW        R0, #32771                  @ 0x8003 
    /*00003b08*/ MOVT        R0, #40979                  @ 0xa013 
    /*00003b0c*/ B           RcCheckGopAttr_x3a88
    RcCheckGopAttr_x3b10:
    /*00003b10*/ LDR         R3, [R0, #16] 
    /*00003b14*/ LDR         R2, [R0, #32] 
    /*00003b18*/ CMP         R3, R2 
    /*00003b1c*/ BCS         RcCheckGopAttr_x3c6c
    /*00003b20*/ LDR         R1, [R0, #20] 
    /*00003b24*/ ADD         R0, R1, #10 
    /*00003b28*/ CMP         R0, #40                     @ 0x28 
    /*00003b2c*/ BHI         RcCheckGopAttr_x3c44
    /*00003b30*/ CMP         R3, #1 
    /*00003b34*/ BNE         RcCheckGopAttr_x3a84
    /*00003b38*/ STR         R2, [SP, #8] 
    /*00003b3c*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1874] 
    /*00003b40*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1874] 
    /*00003b44*/ MOVW        R1, #1692                   @ 0x69c 
    /*00003b48*/ STR         R3, [SP, #4] 
    /*00003b4c*/ STR         R1, [SP] 
    RcCheckGopAttr_x3b50:
    /*00003b50*/ LDR         R3, [PC, #344]              @ 0x0000000000003cb0 
    /*00003b54*/ MOV         R1, #19 
    /*00003b58*/ MOV         R0, #3 
    /*00003b5c*/ BL          0x0000000000003B5C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003b60*/ MOVW        R0, #32771                  @ 0x8003 
    /*00003b64*/ MOVT        R0, #40979                  @ 0xa013 
    /*00003b68*/ B           RcCheckGopAttr_x3a88
    RcCheckGopAttr_x3b6c:
    /*00003b6c*/ LDR         R3, [R0, #12] 
    /*00003b70*/ ADD         R2, R3, #10 
    /*00003b74*/ CMP         R2, #40                     @ 0x28 
    /*00003b78*/ BHI         RcCheckGopAttr_x3c88
    /*00003b7c*/ LDR         R3, [R0, #8] 
    /*00003b80*/ SUB         R2, R3, #1 
    /*00003b84*/ CMP         R2, #2 
    /*00003b88*/ BLS         RcCheckGopAttr_x3a84
    /*00003b8c*/ STR         R3, [SP, #4] 
    /*00003b90*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1794] 
    /*00003b94*/ MOVW        R3, #1665                   @ 0x681 
    /*00003b98*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1794] 
    /*00003b9c*/ STR         R3, [SP] 
    /*00003ba0*/ MOV         R1, #19 
    /*00003ba4*/ LDR         R3, [PC, #260]              @ 0x0000000000003cb0 
    /*00003ba8*/ MOV         R0, #3 
    /*00003bac*/ BL          0x0000000000003BAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003bb0*/ MOVW        R0, #32771                  @ 0x8003 
    /*00003bb4*/ MOVT        R0, #40979                  @ 0xa013 
    /*00003bb8*/ B           RcCheckGopAttr_x3a88
    RcCheckGopAttr_x3bbc:
    /*00003bbc*/ MOV         R2, #30 
    /*00003bc0*/ STR         R3, [SP, #4] 
    /*00003bc4*/ STR         R2, [SP, #12] 
    /*00003bc8*/ MVN         R3, #9 
    /*00003bcc*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15d0] 
    /*00003bd0*/ STR         R3, [SP, #8] 
    /*00003bd4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15d0] 
    /*00003bd8*/ MOVW        R3, #1608                   @ 0x648 
    /*00003bdc*/ STR         R3, [SP] 
    /*00003be0*/ B           RcCheckGopAttr_x3af4
    RcCheckGopAttr_x3be4:
    /*00003be4*/ MOVW        R3, #1627                   @ 0x65b 
    /*00003be8*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1668] 
    /*00003bec*/ STR         R6, [SP, #8] 
    /*00003bf0*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1668] 
    /*00003bf4*/ STR         R5, [SP, #4] 
    /*00003bf8*/ STR         R3, [SP] 
    /*00003bfc*/ B           RcCheckGopAttr_x3b50
    RcCheckGopAttr_x3c00:
    /*00003c00*/ MOVW        R3, #1618                   @ 0x652 
    /*00003c04*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1618] 
    /*00003c08*/ STR         R6, [SP, #8] 
    /*00003c0c*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1618] 
    /*00003c10*/ STR         R5, [SP, #4] 
    /*00003c14*/ STR         R3, [SP] 
    /*00003c18*/ B           RcCheckGopAttr_x3b50
    RcCheckGopAttr_x3c1c:
    /*00003c1c*/ MOV         R2, #65536                  @ 0x10000 
    /*00003c20*/ MOV         R3, #1 
    /*00003c24*/ STR         R2, [SP, #12] 
    /*00003c28*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16bc] 
    /*00003c2c*/ STR         R3, [SP, #8] 
    /*00003c30*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16bc] 
    /*00003c34*/ MOVW        R3, #1637                   @ 0x665 
    /*00003c38*/ STR         R5, [SP, #4] 
    /*00003c3c*/ STR         R3, [SP] 
    /*00003c40*/ B           RcCheckGopAttr_x3af4
    RcCheckGopAttr_x3c44:
    /*00003c44*/ MOV         R2, #30 
    /*00003c48*/ MVN         R3, #9 
    /*00003c4c*/ STR         R2, [SP, #12] 
    /*00003c50*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x182c] 
    /*00003c54*/ STR         R3, [SP, #8] 
    /*00003c58*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x182c] 
    /*00003c5c*/ MOVW        R3, #1683                   @ 0x693 
    /*00003c60*/ STR         R1, [SP, #4] 
    /*00003c64*/ STR         R3, [SP] 
    /*00003c68*/ B           RcCheckGopAttr_x3af4
    RcCheckGopAttr_x3c6c:
    /*00003c6c*/ STR         R2, [SP, #8] 
    /*00003c70*/ MOVW        R1, #1675                   @ 0x68b 
    /*00003c74*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x17dc] 
    /*00003c78*/ STR         R3, [SP, #4] 
    /*00003c7c*/ STR         R1, [SP] 
    /*00003c80*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x17dc] 
    /*00003c84*/ B           RcCheckGopAttr_x3b50
    RcCheckGopAttr_x3c88:
    /*00003c88*/ MOV         R2, #30 
    /*00003c8c*/ STR         R3, [SP, #4] 
    /*00003c90*/ STR         R2, [SP, #12] 
    /*00003c94*/ MVN         R3, #9 
    /*00003c98*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x174c] 
    /*00003c9c*/ STR         R3, [SP, #8] 
    /*00003ca0*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x174c] 
    /*00003ca4*/ MOVW        R3, #1657                   @ 0x679 
    /*00003ca8*/ STR         R3, [SP] 
    /*00003cac*/ B           RcCheckGopAttr_x3af4
    /*00003cb0*/ ANDEQ       R0, R0, R8, LSR #3 
FUNC_END RcCheckGopAttr


FUNC_BEGIN RcCheckFrmrateAttr
    /*00003cb4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00003cb8*/ SUB         SP, SP, #20 
    /*00003cbc*/ LDR         R2, [R0, #44]               @ 0x2c 
    /*00003cc0*/ LSRS        R3, R2, #16 
    /*00003cc4*/ BNE         RcCheckFrmrateAttr_x3cf8
    /*00003cc8*/ CMP         R2, #240                    @ 0xf0 
    /*00003ccc*/ BHI         RcCheckFrmrateAttr_x3d54
    /*00003cd0*/ LSLS        R1, R2, #6 
    /*00003cd4*/ BEQ         RcCheckFrmrateAttr_x3d54
    /*00003cd8*/ LDR         R1, [R0, #40]               @ 0x28 
    /*00003cdc*/ CMP         R2, R1 
    /*00003ce0*/ STRHI       R1, [SP, #8] 
    /*00003ce4*/ MOVWHI      R3, #1730                   @ 0x6c2 
    /*00003ce8*/ BHI         RcCheckFrmrateAttr_x3dbc
    RcCheckFrmrateAttr_x3cec:
    /*00003cec*/ MOV         R0, #0 
    /*00003cf0*/ ADD         SP, SP, #20 
    /*00003cf4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RcCheckFrmrateAttr_x3cf8:
    /*00003cf8*/ MOV         IP, #240                    @ 0xf0 
    /*00003cfc*/ UXTH        R1, R2 
    /*00003d00*/ MUL         LR, IP, R3 
    /*00003d04*/ CMP         LR, R1 
    /*00003d08*/ BCC         RcCheckFrmrateAttr_x3d14
    /*00003d0c*/ CMP         R3, R1, LSL #6 
    /*00003d10*/ BLS         RcCheckFrmrateAttr_x3d7c
    RcCheckFrmrateAttr_x3d14:
    /*00003d14*/ MOV         R3, #240                    @ 0xf0 
    /*00003d18*/ STR         R3, [SP, #8] 
    /*00003d1c*/ MOVW        R3, #1718                   @ 0x6b6 
    /*00003d20*/ STR         R3, [SP] 
    /*00003d24*/ LDR         R3, [PC, #168]              @ 0x0000000000003dd4 
    /*00003d28*/ MOV         R2, #64                     @ 0x40 
    /*00003d2c*/ STR         R2, [SP, #4] 
    /*00003d30*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x192c] 
    /*00003d34*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x192c] 
    RcCheckFrmrateAttr_x3d38:
    /*00003d38*/ MOV         R1, #19 
    /*00003d3c*/ MOV         R0, #3 
    /*00003d40*/ BL          0x0000000000003D40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003d44*/ MOVW        R0, #32771                  @ 0x8003 
    /*00003d48*/ MOVT        R0, #40979                  @ 0xa013 
    /*00003d4c*/ ADD         SP, SP, #20 
    /*00003d50*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RcCheckFrmrateAttr_x3d54:
    /*00003d54*/ MOV         R3, #240                    @ 0xf0 
    /*00003d58*/ MOV         R2, #1 
    /*00003d5c*/ STR         R3, [SP, #8] 
    /*00003d60*/ MOV         R3, #1712                   @ 0x6b0 
    /*00003d64*/ STR         R2, [SP, #4] 
    /*00003d68*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18e0] 
    /*00003d6c*/ STR         R3, [SP] 
    /*00003d70*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18e0] 
    /*00003d74*/ LDR         R3, [PC, #88]               @ 0x0000000000003dd4 
    /*00003d78*/ B           RcCheckFrmrateAttr_x3d38
    RcCheckFrmrateAttr_x3d7c:
    /*00003d7c*/ LDR         R0, [R0, #40]               @ 0x28 
    /*00003d80*/ MUL         LR, R0, R3 
    /*00003d84*/ CMP         LR, R1 
    /*00003d88*/ BCC         RcCheckFrmrateAttr_x3db4
    /*00003d8c*/ CMP         R3, #64                     @ 0x40 
    /*00003d90*/ BLS         RcCheckFrmrateAttr_x3cec
    /*00003d94*/ MOVW        R2, #1752                   @ 0x6d8 
    /*00003d98*/ MOV         R3, #64                     @ 0x40 
    /*00003d9c*/ STR         IP, [SP, #8] 
    /*00003da0*/ STM         SP, {R2, R3} 
    /*00003da4*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x19d4] 
    /*00003da8*/ LDR         R3, [PC, #36]               @ 0x0000000000003dd4 
    /*00003dac*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x19d4] 
    /*00003db0*/ B           RcCheckFrmrateAttr_x3d38
    RcCheckFrmrateAttr_x3db4:
    /*00003db4*/ MOVW        R3, #1743                   @ 0x6cf 
    /*00003db8*/ STR         R0, [SP, #8] 
    RcCheckFrmrateAttr_x3dbc:
    /*00003dbc*/ STR         R2, [SP, #4] 
    /*00003dc0*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1984] 
    /*00003dc4*/ STR         R3, [SP] 
    /*00003dc8*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1984] 
    /*00003dcc*/ LDR         R3, [PC]                    @ 0x0000000000003dd4 
    /*00003dd0*/ B           RcCheckFrmrateAttr_x3d38
    /*00003dd4*/ @           <UNDEFINED> instruction: 0x000001b8 
FUNC_END RcCheckFrmrateAttr


FUNC_BEGIN RC_CheckCvbrAttr
    /*00003dd8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00003ddc*/ SUB         SP, SP, #20 
    /*00003de0*/ LDR         R3, [R0, #4] 
    /*00003de4*/ SUB         R2, R3, #1 
    /*00003de8*/ CMP         R2, #119                    @ 0x77 
    /*00003dec*/ BHI         RC_CheckCvbrAttr_x3e74
    /*00003df0*/ LDR         R3, [R0, #8] 
    /*00003df4*/ SUB         R2, R3, #1 
    /*00003df8*/ CMP         R2, #1440                   @ 0x5a0 
    /*00003dfc*/ BCS         RC_CheckCvbrAttr_x3ea0
    /*00003e00*/ LDR         R1, [R0, #12] 
    /*00003e04*/ LDR         R3, [R0] 
    /*00003e08*/ LSR         R2, R1, #10 
    /*00003e0c*/ CMP         R2, #1 
    /*00003e10*/ LSR         R3, R3, #10 
    /*00003e14*/ BLS         RC_CheckCvbrAttr_x3e38
    /*00003e18*/ CMP         R2, R3 
    /*00003e1c*/ BHI         RC_CheckCvbrAttr_x3e38
    /*00003e20*/ LDR         R3, [R0, #16] 
    /*00003e24*/ CMP         R1, R3 
    /*00003e28*/ MOVCS       R0, #0 
    /*00003e2c*/ BCC         RC_CheckCvbrAttr_x3ecc
    RC_CheckCvbrAttr_x3e30:
    /*00003e30*/ ADD         SP, SP, #20 
    /*00003e34*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RC_CheckCvbrAttr_x3e38:
    /*00003e38*/ STR         R3, [SP, #12] 
    /*00003e3c*/ MOVW        R3, #1785                   @ 0x6f9 
    /*00003e40*/ STR         R3, [SP] 
    /*00003e44*/ MOV         R1, #2 
    /*00003e48*/ LDR         R3, [PC, #168]              @ 0x0000000000003ef8 
    /*00003e4c*/ STR         R2, [SP, #4] 
    /*00003e50*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b14] 
    /*00003e54*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b14] 
    /*00003e58*/ STR         R1, [SP, #8] 
    RC_CheckCvbrAttr_x3e5c:
    /*00003e5c*/ MOV         R1, #19 
    /*00003e60*/ MOV         R0, #3 
    /*00003e64*/ BL          0x0000000000003E64          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003e68*/ MOVW        R0, #32771                  @ 0x8003 
    /*00003e6c*/ MOVT        R0, #40979                  @ 0xa013 
    /*00003e70*/ B           RC_CheckCvbrAttr_x3e30
    RC_CheckCvbrAttr_x3e74:
    /*00003e74*/ MOV         R2, #120                    @ 0x78 
    /*00003e78*/ STR         R3, [SP, #4] 
    /*00003e7c*/ STR         R2, [SP, #12] 
    /*00003e80*/ MOV         R3, #1 
    /*00003e84*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a6c] 
    /*00003e88*/ STR         R3, [SP, #8] 
    /*00003e8c*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a6c] 
    /*00003e90*/ MOVW        R3, #1768                   @ 0x6e8 
    /*00003e94*/ STR         R3, [SP] 
    /*00003e98*/ LDR         R3, [PC, #88]               @ 0x0000000000003ef8 
    /*00003e9c*/ B           RC_CheckCvbrAttr_x3e5c
    RC_CheckCvbrAttr_x3ea0:
    /*00003ea0*/ MOV         R2, #1440                   @ 0x5a0 
    /*00003ea4*/ STR         R3, [SP, #4] 
    /*00003ea8*/ STR         R2, [SP, #12] 
    /*00003eac*/ MOV         R3, #1 
    /*00003eb0*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ac0] 
    /*00003eb4*/ STR         R3, [SP, #8] 
    /*00003eb8*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ac0] 
    /*00003ebc*/ MOVW        R3, #1777                   @ 0x6f1 
    /*00003ec0*/ STR         R3, [SP] 
    /*00003ec4*/ LDR         R3, [PC, #44]               @ 0x0000000000003ef8 
    /*00003ec8*/ B           RC_CheckCvbrAttr_x3e5c
    RC_CheckCvbrAttr_x3ecc:
    /*00003ecc*/ LSR         R3, R3, #10 
    /*00003ed0*/ STR         R2, [SP, #12] 
    /*00003ed4*/ STR         R3, [SP, #4] 
    /*00003ed8*/ MOV         R2, #0 
    /*00003edc*/ MOVW        R3, #1793                   @ 0x701 
    /*00003ee0*/ STR         R2, [SP, #8] 
    /*00003ee4*/ STR         R3, [SP] 
    /*00003ee8*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b68] 
    /*00003eec*/ LDR         R3, [PC, #4]                @ 0x0000000000003ef8 
    /*00003ef0*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b68] 
    /*00003ef4*/ B           RC_CheckCvbrAttr_x3e5c
    /*00003ef8*/ ANDEQ       R0, R0, IP, ASR #3 
FUNC_END RC_CheckCvbrAttr


FUNC_BEGIN RcCheckAttr
    /*00003efc*/ PUSH        {R4, R5, R6, LR} 
    /*00003f00*/ SUBS        R4, R0, #0 
    /*00003f04*/ SUB         SP, SP, #16 
    /*00003f08*/ BEQ         RcCheckAttr_x41a4
    RcCheckAttr_x3f0c:
    /*00003f0c*/ LDR         R3, [R4, #48]               @ 0x30 
    /*00003f10*/ MOVW        R5, #265                    @ 0x109 
    /*00003f14*/ MOVW        R1, #1002                   @ 0x3ea 
    /*00003f18*/ CMP         R3, R5 
    /*00003f1c*/ CMPNE       R3, #96                     @ 0x60 
    /*00003f20*/ MOVNE       R2, #1 
    /*00003f24*/ MOVEQ       R2, #0 
    /*00003f28*/ CMP         R3, R1 
    /*00003f2c*/ MOVEQ       R2, #0 
    /*00003f30*/ ANDNE       R2, R2, #1 
    /*00003f34*/ CMP         R2, #0 
    /*00003f38*/ BNE         RcCheckAttr_x4234
    /*00003f3c*/ LDR         R3, [R4, #32] 
    /*00003f40*/ SUB         R2, R3, #1 
    /*00003f44*/ CMP         R2, #65536                  @ 0x10000 
    /*00003f48*/ BCS         RcCheckAttr_x4264
    /*00003f4c*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00003f50*/ SUB         R2, R3, #1 
    /*00003f54*/ CMP         R2, #59                     @ 0x3b 
    /*00003f58*/ BHI         RcCheckAttr_x428c
    /*00003f5c*/ LDR         R3, [R4, #40]               @ 0x28 
    /*00003f60*/ SUB         R2, R3, #1 
    /*00003f64*/ CMP         R2, #239                    @ 0xef 
    /*00003f68*/ BHI         RcCheckAttr_x420c
    /*00003f6c*/ MOV         R0, R4 
    /*00003f70*/ BL          0x0000000000003F70          @ RcCheckFrmrateAttr [R_ARM_CALL: .text+0x3cb4] 
    /*00003f74*/ SUBS        R6, R0, #0 
    /*00003f78*/ BNE         RcCheckAttr_x3fbc
    /*00003f7c*/ LDR         R3, [R4, #48]               @ 0x30 
    /*00003f80*/ CMP         R3, R5 
    /*00003f84*/ CMPNE       R3, #96                     @ 0x60 
    /*00003f88*/ MOV         R0, R3 
    /*00003f8c*/ BEQ         RcCheckAttr_x4088
    /*00003f90*/ LDR         R2, [R4, #52]               @ 0x34 
    /*00003f94*/ CMP         R2, #6 
    /*00003f98*/ LDRLS       PC, [PC, R2, LSL #2] 
    /*00003f9c*/ B           RcCheckAttr_x4178
    /*00003fa0*/ ANDEQ       R4, R0, IP, ASR R0 
    /*00003fa4*/ ANDEQ       R4, R0, R4, ASR #32 
    /*00003fa8*/ ANDEQ       R4, R0, IP, ASR R0 
    /*00003fac*/ ANDEQ       R4, R0, IP, ASR R0 
    /*00003fb0*/ ANDEQ       R4, R0, IP, ASR R0 
    /*00003fb4*/ @           <UNDEFINED> instruction: 0x000041b4 
    /*00003fb8*/ ANDEQ       R3, R0, R8, ROR #31 
    RcCheckAttr_x3fbc:
    /*00003fbc*/ MOVW        R3, #1868                   @ 0x74c 
    /*00003fc0*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cc8] 
    /*00003fc4*/ STR         R3, [SP] 
    /*00003fc8*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cc8] 
    /*00003fcc*/ LDR         R3, [PC, #836]              @ 0x0000000000004318 
    /*00003fd0*/ MOV         R1, #19 
    /*00003fd4*/ MOV         R0, #3 
    /*00003fd8*/ BL          0x0000000000003FD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    RcCheckAttr_x3fdc:
    /*00003fdc*/ MOV         R0, R6 
    /*00003fe0*/ ADD         SP, SP, #16 
    /*00003fe4*/ POP         {R4, R5, R6, PC} 
    /*00003fe8*/ BL          0x0000000000003FE8          @ RC_DRV_IsSupportQpMap [R_ARM_CALL: .text+0x11118] 
    /*00003fec*/ CMP         R0, #0 
    /*00003ff0*/ BEQ         RcCheckAttr_x42ec
    /*00003ff4*/ LDR         R3, [R4, #56]               @ 0x38 
    /*00003ff8*/ CMP         R3, #2 
    /*00003ffc*/ BLS         RcCheckAttr_x3fdc
    /*00004000*/ MOV         R2, #2 
    /*00004004*/ STR         R2, [SP, #12] 
    /*00004008*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e38] 
    /*0000400c*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e38] 
    /*00004010*/ STR         R3, [SP, #4] 
    /*00004014*/ MOV         R3, #0 
    /*00004018*/ STR         R3, [SP, #8] 
    /*0000401c*/ MOVW        R3, #1980                   @ 0x7bc 
    /*00004020*/ STR         R3, [SP] 
    RcCheckAttr_x4024:
    /*00004024*/ LDR         R3, [PC, #748]              @ 0x0000000000004318 
    /*00004028*/ MOV         R1, #19 
    /*0000402c*/ MOV         R0, #3 
    /*00004030*/ MOVW        R6, #32771                  @ 0x8003 
    /*00004034*/ BL          0x0000000000004034          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004038*/ MOVT        R6, #40979                  @ 0xa013 
    /*0000403c*/ B           RcCheckAttr_x3fdc
    /*00004040*/ LDR         R3, [R4, #48]               @ 0x30 
    /*00004044*/ LDR         R1, [R4, #56]               @ 0x38 
    /*00004048*/ MOV         R0, R3 
    /*0000404c*/ ADD         SP, SP, #16 
    /*00004050*/ POP         {R4, R5, R6, LR} 
    RcCheckAttr_x4054:
    /*00004054*/ B           RcCheckAttr_x4054           @ RC_DRV_CheckBitRate [R_ARM_JUMP24: .text+0x114e8] 
    /*00004058*/ LDR         R0, [R4, #48]               @ 0x30 
    /*0000405c*/ LDR         R1, [R4, #56]               @ 0x38 
    /*00004060*/ BL          0x0000000000004060          @ RC_DRV_CheckBitRate [R_ARM_CALL: .text+0x114e8] 
    /*00004064*/ CMP         R0, #0 
    /*00004068*/ BNE         RcCheckAttr_x41dc
    /*0000406c*/ LDR         R3, [R4, #52]               @ 0x34 
    /*00004070*/ CMP         R3, #4 
    /*00004074*/ BNE         RcCheckAttr_x3fdc
    /*00004078*/ ADD         R0, R4, #56                 @ 0x38 
    /*0000407c*/ ADD         SP, SP, #16 
    /*00004080*/ POP         {R4, R5, R6, LR} 
    RcCheckAttr_x4084:
    /*00004084*/ B           RcCheckAttr_x4084           @ RC_CheckCvbrAttr [R_ARM_JUMP24: .text+0x3dd8] 
    RcCheckAttr_x4088:
    /*00004088*/ MOV         R0, R4 
    /*0000408c*/ BL          0x000000000000408C          @ RcCheckGopAttr [R_ARM_CALL: .text+0x3a44] 
    /*00004090*/ SUBS        IP, R0, #0 
    /*00004094*/ BNE         RcCheckAttr_x41e4
    /*00004098*/ LDR         R3, [R4, #52]               @ 0x34 
    /*0000409c*/ CMP         R3, #6 
    /*000040a0*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*000040a4*/ B           RcCheckAttr_x4178
    /*000040a8*/ ANDEQ       R4, R0, R8, ASR R0 
    /*000040ac*/ ANDEQ       R4, R0, R0, ASR #32 
    /*000040b0*/ ANDEQ       R4, R0, R8, ASR R0 
    /*000040b4*/ ANDEQ       R4, R0, R8, ASR R0 
    /*000040b8*/ ANDEQ       R4, R0, R8, ASR R0 
    /*000040bc*/ ANDEQ       R4, R0, R4, ASR #1 
    /*000040c0*/ ANDEQ       R3, R0, R8, ROR #31 
    /*000040c4*/ LDR         R0, [R4, #48]               @ 0x30 
    /*000040c8*/ MOVW        R3, #265                    @ 0x109 
    /*000040cc*/ CMP         R0, R3 
    /*000040d0*/ CMPNE       R0, #96                     @ 0x60 
    /*000040d4*/ MOVEQ       R1, #51                     @ 0x33 
    /*000040d8*/ MOVEQ       R2, #0 
    /*000040dc*/ BNE         RcCheckAttr_x41b4
    RcCheckAttr_x40e0:
    /*000040e0*/ LDR         R0, [R4, #56]               @ 0x38 
    /*000040e4*/ CMP         R0, R1 
    /*000040e8*/ MOVLS       R3, #0 
    /*000040ec*/ MOVHI       R3, #1 
    /*000040f0*/ CMP         R0, R2 
    /*000040f4*/ ORRCC       R3, R3, #1 
    /*000040f8*/ CMP         R3, #0 
    /*000040fc*/ BNE         RcCheckAttr_x42b4
    /*00004100*/ LDR         R0, [R4, #60]               @ 0x3c 
    /*00004104*/ CMP         R0, R1 
    /*00004108*/ MOVLS       R3, #0 
    /*0000410c*/ MOVHI       R3, #1 
    /*00004110*/ CMP         R0, R2 
    /*00004114*/ ORRCC       R3, R3, #1 
    /*00004118*/ CMP         R3, #0 
    /*0000411c*/ BNE         RcCheckAttr_x42d0
    /*00004120*/ LDR         R0, [R4, #64]               @ 0x40 
    /*00004124*/ CMP         R0, R1 
    /*00004128*/ MOVLS       R3, #0 
    /*0000412c*/ MOVHI       R3, #1 
    /*00004130*/ CMP         R0, R2 
    /*00004134*/ ORRCC       R3, R3, #1 
    /*00004138*/ CMP         R3, #0 
    /*0000413c*/ BEQ         RcCheckAttr_x3fdc
    /*00004140*/ STR         R2, [SP, #8] 
    /*00004144*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1db8] 
    /*00004148*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1db8] 
    /*0000414c*/ MOVW        R3, #1958                   @ 0x7a6 
    /*00004150*/ STR         R1, [SP, #12] 
    /*00004154*/ STR         R0, [SP, #4] 
    RcCheckAttr_x4158:
    /*00004158*/ STR         R3, [SP] 
    /*0000415c*/ MOV         R1, #19 
    /*00004160*/ LDR         R3, [PC, #432]              @ 0x0000000000004318 
    /*00004164*/ MOV         R0, #3 
    /*00004168*/ MOVW        R6, #32771                  @ 0x8003 
    /*0000416c*/ BL          0x000000000000416C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004170*/ MOVT        R6, #40979                  @ 0xa013 
    /*00004174*/ B           RcCheckAttr_x3fdc
    RcCheckAttr_x4178:
    /*00004178*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e88] 
    /*0000417c*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e88] 
    /*00004180*/ MOVW        R3, #1991                   @ 0x7c7 
    /*00004184*/ STR         R3, [SP] 
    RcCheckAttr_x4188:
    /*00004188*/ LDR         R3, [PC, #392]              @ 0x0000000000004318 
    /*0000418c*/ MOV         R1, #19 
    /*00004190*/ MOV         R0, #3 
    /*00004194*/ MOVW        R6, #32771                  @ 0x8003 
    /*00004198*/ BL          0x0000000000004198          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000419c*/ MOVT        R6, #40979                  @ 0xa013 
    /*000041a0*/ B           RcCheckAttr_x3fdc
    RcCheckAttr_x41a4:
    /*000041a4*/ BL          0x000000000000211C 
    /*000041a8*/ SUBS        R6, R0, #0 
    /*000041ac*/ BNE         RcCheckAttr_x3fdc
    /*000041b0*/ B           RcCheckAttr_x3f0c
    RcCheckAttr_x41b4:
    /*000041b4*/ MOVW        R3, #1002                   @ 0x3ea 
    /*000041b8*/ CMP         R0, R3 
    /*000041bc*/ MOVEQ       R1, #99                     @ 0x63 
    /*000041c0*/ MOVEQ       R2, #1 
    /*000041c4*/ BEQ         RcCheckAttr_x40e0
    /*000041c8*/ MOVW        R3, #1928                   @ 0x788 
    /*000041cc*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1edc] 
    /*000041d0*/ STR         R3, [SP] 
    /*000041d4*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1edc] 
    /*000041d8*/ B           RcCheckAttr_x4188
    RcCheckAttr_x41dc:
    /*000041dc*/ MOV         R6, R0 
    /*000041e0*/ B           RcCheckAttr_x3fdc
    RcCheckAttr_x41e4:
    /*000041e4*/ MOVW        R3, #1877                   @ 0x755 
    /*000041e8*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cfc] 
    /*000041ec*/ STR         R3, [SP] 
    /*000041f0*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cfc] 
    /*000041f4*/ LDR         R3, [PC, #284]              @ 0x0000000000004318 
    /*000041f8*/ MOV         R1, #19 
    /*000041fc*/ MOV         R0, #3 
    /*00004200*/ MOV         R6, IP 
    /*00004204*/ BL          0x0000000000004204          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004208*/ B           RcCheckAttr_x3fdc
    RcCheckAttr_x420c:
    /*0000420c*/ MOV         R2, #240                    @ 0xf0 
    /*00004210*/ STR         R3, [SP, #4] 
    /*00004214*/ STR         R2, [SP, #12] 
    /*00004218*/ MOV         R3, #1 
    /*0000421c*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c7c] 
    /*00004220*/ STR         R3, [SP, #8] 
    /*00004224*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c7c] 
    /*00004228*/ MOVW        R3, #1860                   @ 0x744 
    /*0000422c*/ STR         R3, [SP] 
    /*00004230*/ B           RcCheckAttr_x4024
    RcCheckAttr_x4234:
    /*00004234*/ STR         R3, [SP, #4] 
    /*00004238*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1bbc] 
    /*0000423c*/ MOVW        R3, #1828                   @ 0x724 
    /*00004240*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1bbc] 
    /*00004244*/ STR         R3, [SP] 
    /*00004248*/ MOV         R1, #19 
    /*0000424c*/ LDR         R3, [PC, #196]              @ 0x0000000000004318 
    /*00004250*/ MOV         R0, #3 
    /*00004254*/ MOVW        R6, #32771                  @ 0x8003 
    /*00004258*/ BL          0x0000000000004258          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000425c*/ MOVT        R6, #40979                  @ 0xa013 
    /*00004260*/ B           RcCheckAttr_x3fdc
    RcCheckAttr_x4264:
    /*00004264*/ MOV         R2, #65536                  @ 0x10000 
    /*00004268*/ STR         R3, [SP, #4] 
    /*0000426c*/ STR         R2, [SP, #12] 
    /*00004270*/ MOV         R3, #1 
    /*00004274*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1bf4] 
    /*00004278*/ STR         R3, [SP, #8] 
    /*0000427c*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1bf4] 
    /*00004280*/ MOVW        R3, #1839                   @ 0x72f 
    /*00004284*/ STR         R3, [SP] 
    /*00004288*/ B           RcCheckAttr_x4024
    RcCheckAttr_x428c:
    /*0000428c*/ MOV         R2, #60                     @ 0x3c 
    /*00004290*/ STR         R3, [SP, #4] 
    /*00004294*/ STR         R2, [SP, #12] 
    /*00004298*/ MOV         R3, #1 
    /*0000429c*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c34] 
    /*000042a0*/ STR         R3, [SP, #8] 
    /*000042a4*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c34] 
    /*000042a8*/ MOVW        R3, #1849                   @ 0x739 
    /*000042ac*/ STR         R3, [SP] 
    /*000042b0*/ B           RcCheckAttr_x4024
    RcCheckAttr_x42b4:
    /*000042b4*/ STR         R2, [SP, #8] 
    /*000042b8*/ MOVW        R3, #1938                   @ 0x792 
    /*000042bc*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d30] 
    /*000042c0*/ STR         R1, [SP, #12] 
    /*000042c4*/ STR         R0, [SP, #4] 
    /*000042c8*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d30] 
    /*000042cc*/ B           RcCheckAttr_x4158
    RcCheckAttr_x42d0:
    /*000042d0*/ STR         R2, [SP, #8] 
    /*000042d4*/ MOVW        R3, #1948                   @ 0x79c 
    /*000042d8*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d74] 
    /*000042dc*/ STR         R1, [SP, #12] 
    /*000042e0*/ STR         R0, [SP, #4] 
    /*000042e4*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d74] 
    /*000042e8*/ B           RcCheckAttr_x4158
    RcCheckAttr_x42ec:
    /*000042ec*/ MOVW        R3, #1971                   @ 0x7b3 
    /*000042f0*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1dfc] 
    /*000042f4*/ STR         R3, [SP] 
    /*000042f8*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1dfc] 
    /*000042fc*/ LDR         R3, [PC, #20]               @ 0x0000000000004318 
    /*00004300*/ MOV         R1, #19 
    /*00004304*/ MOV         R0, #3 
    /*00004308*/ MOVW        R6, #32776                  @ 0x8008 
    /*0000430c*/ BL          0x000000000000430C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004310*/ MOVT        R6, #40979                  @ 0xa013 
    /*00004314*/ B           RcCheckAttr_x3fdc
    /*00004318*/ ANDEQ       R0, R0, R0, ROR #3 
FUNC_END RcCheckAttr


FUNC_BEGIN RC_CheckCbrParam
    /*0000431c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00004320*/ MOVW        R2, #265                    @ 0x109 
    /*00004324*/ LDR         R3, [R1, #48]               @ 0x30 
    /*00004328*/ SUB         SP, SP, #20 
    /*0000432c*/ CMP         R3, R2 
    /*00004330*/ CMPNE       R3, #96                     @ 0x60 
    /*00004334*/ MOVEQ       R3, #0 
    /*00004338*/ MOVEQ       IP, #51                     @ 0x33 
    /*0000433c*/ BNE         RC_CheckCbrParam_x43f0
    RC_CheckCbrParam_x4340:
    /*00004340*/ LDR         R1, [R0, #8] 
    /*00004344*/ CMP         R1, IP 
    /*00004348*/ MOVLS       R2, #0 
    /*0000434c*/ MOVHI       R2, #1 
    /*00004350*/ CMP         R1, R3 
    /*00004354*/ ORRCC       R2, R2, #1 
    /*00004358*/ CMP         R2, #0 
    /*0000435c*/ BNE         RC_CheckCbrParam_x4430
    /*00004360*/ LDR         LR, [R0, #12] 
    /*00004364*/ CMP         R1, LR 
    /*00004368*/ CMPCS       LR, R3 
    /*0000436c*/ BCC         RC_CheckCbrParam_x446c
    /*00004370*/ LDR         R1, [R0, #20] 
    /*00004374*/ CMP         R1, IP 
    /*00004378*/ MOVLS       R2, #0 
    /*0000437c*/ MOVHI       R2, #1 
    /*00004380*/ CMP         R1, R3 
    /*00004384*/ ORRCC       R2, R2, #1 
    /*00004388*/ CMP         R2, #0 
    /*0000438c*/ BNE         RC_CheckCbrParam_x448c
    /*00004390*/ LDR         IP, [R0, #16] 
    /*00004394*/ CMP         IP, R3 
    /*00004398*/ CMPCS       R1, IP 
    /*0000439c*/ BCC         RC_CheckCbrParam_x44ac
    /*000043a0*/ LDR         R1, [R0] 
    /*000043a4*/ SUB         R3, R1, #1 
    /*000043a8*/ CMP         R3, #99                     @ 0x63 
    /*000043ac*/ BHI         RC_CheckCbrParam_x4504
    /*000043b0*/ LDR         R3, [R0, #4] 
    /*000043b4*/ CMP         R1, R3 
    /*000043b8*/ CMPLS       R3, #100                    @ 0x64 
    /*000043bc*/ MOVHI       R2, #1 
    /*000043c0*/ MOVLS       R2, #0 
    /*000043c4*/ BHI         RC_CheckCbrParam_x44c8
    /*000043c8*/ LDR         R3, [R0, #28] 
    /*000043cc*/ SUB         R1, R3, #1 
    /*000043d0*/ CMP         R1, #4 
    /*000043d4*/ BHI         RC_CheckCbrParam_x452c
    /*000043d8*/ LDR         R3, [R0, #32] 
    /*000043dc*/ CMP         R3, #3 
    /*000043e0*/ MOVLS       R0, R2 
    /*000043e4*/ BHI         RC_CheckCbrParam_x4554
    RC_CheckCbrParam_x43e8:
    /*000043e8*/ ADD         SP, SP, #20 
    /*000043ec*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RC_CheckCbrParam_x43f0:
    /*000043f0*/ MOVW        R2, #1002                   @ 0x3ea 
    /*000043f4*/ CMP         R3, R2 
    /*000043f8*/ MOVEQ       R3, #1 
    /*000043fc*/ MOVEQ       IP, #99                     @ 0x63 
    /*00004400*/ BEQ         RC_CheckCbrParam_x4340
    /*00004404*/ MOVW        R3, #2013                   @ 0x7dd 
    /*00004408*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1edc] 
    /*0000440c*/ STR         R3, [SP] 
    /*00004410*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1edc] 
    /*00004414*/ LDR         R3, [PC, #372]              @ 0x0000000000004590 
    /*00004418*/ MOV         R1, #19 
    /*0000441c*/ MOV         R0, #3 
    /*00004420*/ BL          0x0000000000004420          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004424*/ MOVW        R0, #32771                  @ 0x8003 
    /*00004428*/ MOVT        R0, #40979                  @ 0xa013 
    /*0000442c*/ B           RC_CheckCbrParam_x43e8
    RC_CheckCbrParam_x4430:
    /*00004430*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f18] 
    /*00004434*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f18] 
    /*00004438*/ MOVW        R0, #2021                   @ 0x7e5 
    /*0000443c*/ STR         IP, [SP, #12] 
    /*00004440*/ STR         R3, [SP, #8] 
    /*00004444*/ STR         R1, [SP, #4] 
    /*00004448*/ STR         R0, [SP] 
    RC_CheckCbrParam_x444c:
    /*0000444c*/ MOV         R1, #19 
    /*00004450*/ LDR         R3, [PC, #312]              @ 0x0000000000004590 
    /*00004454*/ MOV         R0, #3 
    /*00004458*/ BL          0x0000000000004458          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000445c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00004460*/ MOVT        R0, #40979                  @ 0xa013 
    /*00004464*/ ADD         SP, SP, #20 
    /*00004468*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RC_CheckCbrParam_x446c:
    /*0000446c*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f5c] 
    /*00004470*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f5c] 
    /*00004474*/ STR         R1, [SP, #12] 
    /*00004478*/ MOVW        R1, #2029                   @ 0x7ed 
    /*0000447c*/ STR         R3, [SP, #8] 
    /*00004480*/ STR         LR, [SP, #4] 
    RC_CheckCbrParam_x4484:
    /*00004484*/ STR         R1, [SP] 
    /*00004488*/ B           RC_CheckCbrParam_x444c
    RC_CheckCbrParam_x448c:
    /*0000448c*/ MOVW        R0, #2038                   @ 0x7f6 
    /*00004490*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fa0] 
    /*00004494*/ STR         IP, [SP, #12] 
    /*00004498*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fa0] 
    /*0000449c*/ STR         R3, [SP, #8] 
    /*000044a0*/ STR         R1, [SP, #4] 
    /*000044a4*/ STR         R0, [SP] 
    /*000044a8*/ B           RC_CheckCbrParam_x444c
    RC_CheckCbrParam_x44ac:
    /*000044ac*/ STR         R1, [SP, #12] 
    /*000044b0*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fe4] 
    /*000044b4*/ MOVW        R1, #2046                   @ 0x7fe 
    /*000044b8*/ STR         R3, [SP, #8] 
    /*000044bc*/ STR         IP, [SP, #4] 
    /*000044c0*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fe4] 
    /*000044c4*/ B           RC_CheckCbrParam_x4484
    RC_CheckCbrParam_x44c8:
    /*000044c8*/ MOV         R2, #100                    @ 0x64 
    /*000044cc*/ STR         R2, [SP, #12] 
    /*000044d0*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2070] 
    /*000044d4*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2070] 
    /*000044d8*/ STR         R3, [SP, #4] 
    /*000044dc*/ MOVW        R3, #2062                   @ 0x80e 
    /*000044e0*/ STR         R1, [SP, #8] 
    /*000044e4*/ STR         R3, [SP] 
    RC_CheckCbrParam_x44e8:
    /*000044e8*/ LDR         R3, [PC, #160]              @ 0x0000000000004590 
    /*000044ec*/ MOV         R1, #19 
    /*000044f0*/ MOV         R0, #3 
    /*000044f4*/ BL          0x00000000000044F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000044f8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000044fc*/ MOVT        R0, #40979                  @ 0xa013 
    /*00004500*/ B           RC_CheckCbrParam_x43e8
    RC_CheckCbrParam_x4504:
    /*00004504*/ MOV         R2, #100                    @ 0x64 
    /*00004508*/ MOV         R3, #1 
    /*0000450c*/ STR         R2, [SP, #12] 
    /*00004510*/ MOVW        R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2028] 
    /*00004514*/ STR         R3, [SP, #8] 
    /*00004518*/ MOVT        R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2028] 
    /*0000451c*/ MOVW        R3, #2054                   @ 0x806 
    /*00004520*/ STR         R1, [SP, #4] 
    /*00004524*/ STR         R3, [SP] 
    /*00004528*/ B           RC_CheckCbrParam_x44e8
    RC_CheckCbrParam_x452c:
    /*0000452c*/ MOV         R2, #5 
    /*00004530*/ STR         R3, [SP, #4] 
    /*00004534*/ STR         R2, [SP, #12] 
    /*00004538*/ MOV         R3, #1 
    /*0000453c*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20b8] 
    /*00004540*/ STR         R3, [SP, #8] 
    /*00004544*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20b8] 
    /*00004548*/ MOVW        R3, #2070                   @ 0x816 
    /*0000454c*/ STR         R3, [SP] 
    /*00004550*/ B           RC_CheckCbrParam_x44e8
    RC_CheckCbrParam_x4554:
    /*00004554*/ MOV         R1, #3 
    /*00004558*/ STR         R2, [SP, #8] 
    /*0000455c*/ STR         R3, [SP, #4] 
    /*00004560*/ MOV         R0, R1 
    /*00004564*/ STR         R1, [SP, #12] 
    /*00004568*/ MOVW        R3, #2078                   @ 0x81e 
    /*0000456c*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2104] 
    /*00004570*/ STR         R3, [SP] 
    /*00004574*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2104] 
    /*00004578*/ LDR         R3, [PC, #16]               @ 0x0000000000004590 
    /*0000457c*/ MOV         R1, #19 
    /*00004580*/ BL          0x0000000000004580          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004584*/ MOVW        R0, #32771                  @ 0x8003 
    /*00004588*/ MOVT        R0, #40979                  @ 0xa013 
    /*0000458c*/ B           RC_CheckCbrParam_x43e8
    /*00004590*/ ANDEQ       R0, R0, IP, ROR #3 
FUNC_END RC_CheckCbrParam


FUNC_BEGIN RC_CheckVbrComParm
    /*00004594*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00004598*/ MOVW        R2, #265                    @ 0x109 
    /*0000459c*/ LDR         R3, [R1, #48]               @ 0x30 
    /*000045a0*/ SUB         SP, SP, #20 
    /*000045a4*/ CMP         R3, R2 
    /*000045a8*/ CMPNE       R3, #96                     @ 0x60 
    /*000045ac*/ MOVEQ       R3, #0 
    /*000045b0*/ MOVEQ       IP, #51                     @ 0x33 
    /*000045b4*/ BNE         RC_CheckVbrComParm_x4668
    RC_CheckVbrComParm_x45b8:
    /*000045b8*/ LDR         R1, [R0, #32] 
    /*000045bc*/ CMP         R1, IP 
    /*000045c0*/ MOVLS       R2, #0 
    /*000045c4*/ MOVHI       R2, #1 
    /*000045c8*/ CMP         R1, R3 
    /*000045cc*/ ORRCC       R2, R2, #1 
    /*000045d0*/ CMP         R2, #0 
    /*000045d4*/ BNE         RC_CheckVbrComParm_x46a8
    /*000045d8*/ LDR         LR, [R0, #24] 
    /*000045dc*/ CMP         R1, LR 
    /*000045e0*/ CMPCS       LR, R3 
    /*000045e4*/ BCC         RC_CheckVbrComParm_x46e4
    /*000045e8*/ LDR         R1, [R0, #28] 
    /*000045ec*/ CMP         R1, IP 
    /*000045f0*/ MOVLS       R2, #0 
    /*000045f4*/ MOVHI       R2, #1 
    /*000045f8*/ CMP         R1, R3 
    /*000045fc*/ ORRCC       R2, R2, #1 
    /*00004600*/ CMP         R2, #0 
    /*00004604*/ BNE         RC_CheckVbrComParm_x4704
    /*00004608*/ LDR         IP, [R0, #20] 
    /*0000460c*/ CMP         IP, R3 
    /*00004610*/ CMPCS       R1, IP 
    /*00004614*/ BCC         RC_CheckVbrComParm_x4724
    /*00004618*/ LDR         R3, [R0, #8] 
    /*0000461c*/ SUB         R2, R3, #50                 @ 0x32 
    /*00004620*/ CMP         R2, #50                     @ 0x32 
    /*00004624*/ BHI         RC_CheckVbrComParm_x477c
    /*00004628*/ LDR         R1, [R0] 
    /*0000462c*/ SUB         R3, R1, #1 
    /*00004630*/ CMP         R3, #99                     @ 0x63 
    /*00004634*/ BHI         RC_CheckVbrComParm_x47ac
    /*00004638*/ LDR         R3, [R0, #4] 
    /*0000463c*/ CMP         R3, #100                    @ 0x64 
    /*00004640*/ CMPLS       R1, R3 
    /*00004644*/ MOVHI       R2, #1 
    /*00004648*/ MOVLS       R2, #0 
    /*0000464c*/ BHI         RC_CheckVbrComParm_x4740
    /*00004650*/ LDR         R3, [R0, #16] 
    /*00004654*/ CMP         R3, #3 
    /*00004658*/ MOVLS       R0, R2 
    /*0000465c*/ BHI         RC_CheckVbrComParm_x47d4
    RC_CheckVbrComParm_x4660:
    /*00004660*/ ADD         SP, SP, #20 
    /*00004664*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RC_CheckVbrComParm_x4668:
    /*00004668*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0000466c*/ CMP         R3, R2 
    /*00004670*/ MOVEQ       R3, #1 
    /*00004674*/ MOVEQ       IP, #99                     @ 0x63 
    /*00004678*/ BEQ         RC_CheckVbrComParm_x45b8
    /*0000467c*/ MOVW        R3, #2094                   @ 0x82e 
    /*00004680*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1edc] 
    /*00004684*/ STR         R3, [SP] 
    /*00004688*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1edc] 
    /*0000468c*/ LDR         R3, [PC, #380]              @ 0x0000000000004810 
    /*00004690*/ MOV         R1, #19 
    /*00004694*/ MOV         R0, #3 
    /*00004698*/ BL          0x0000000000004698          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000469c*/ MOVW        R0, #32771                  @ 0x8003 
    /*000046a0*/ MOVT        R0, #40979                  @ 0xa013 
    /*000046a4*/ B           RC_CheckVbrComParm_x4660
    RC_CheckVbrComParm_x46a8:
    /*000046a8*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f18] 
    /*000046ac*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f18] 
    /*000046b0*/ MOVW        R0, #2102                   @ 0x836 
    /*000046b4*/ STR         IP, [SP, #12] 
    /*000046b8*/ STR         R3, [SP, #8] 
    /*000046bc*/ STR         R1, [SP, #4] 
    /*000046c0*/ STR         R0, [SP] 
    RC_CheckVbrComParm_x46c4:
    /*000046c4*/ MOV         R1, #19 
    /*000046c8*/ LDR         R3, [PC, #320]              @ 0x0000000000004810 
    /*000046cc*/ MOV         R0, #3 
    /*000046d0*/ BL          0x00000000000046D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000046d4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000046d8*/ MOVT        R0, #40979                  @ 0xa013 
    /*000046dc*/ ADD         SP, SP, #20 
    /*000046e0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RC_CheckVbrComParm_x46e4:
    /*000046e4*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f5c] 
    /*000046e8*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f5c] 
    /*000046ec*/ STR         R1, [SP, #12] 
    /*000046f0*/ MOVW        R1, #2110                   @ 0x83e 
    /*000046f4*/ STR         R3, [SP, #8] 
    /*000046f8*/ STR         LR, [SP, #4] 
    RC_CheckVbrComParm_x46fc:
    /*000046fc*/ STR         R1, [SP] 
    /*00004700*/ B           RC_CheckVbrComParm_x46c4
    RC_CheckVbrComParm_x4704:
    /*00004704*/ MOVW        R0, #2118                   @ 0x846 
    /*00004708*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fa0] 
    /*0000470c*/ STR         IP, [SP, #12] 
    /*00004710*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fa0] 
    /*00004714*/ STR         R3, [SP, #8] 
    /*00004718*/ STR         R1, [SP, #4] 
    /*0000471c*/ STR         R0, [SP] 
    /*00004720*/ B           RC_CheckVbrComParm_x46c4
    RC_CheckVbrComParm_x4724:
    /*00004724*/ STR         R1, [SP, #12] 
    /*00004728*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fe4] 
    /*0000472c*/ MOVW        R1, #2126                   @ 0x84e 
    /*00004730*/ STR         R3, [SP, #8] 
    /*00004734*/ STR         IP, [SP, #4] 
    /*00004738*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fe4] 
    /*0000473c*/ B           RC_CheckVbrComParm_x46fc
    RC_CheckVbrComParm_x4740:
    /*00004740*/ MOV         R2, #100                    @ 0x64 
    /*00004744*/ STR         R2, [SP, #12] 
    /*00004748*/ MOVW        R2, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x21e4] 
    /*0000474c*/ MOVT        R2, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x21e4] 
    /*00004750*/ STR         R3, [SP, #4] 
    /*00004754*/ MOVW        R3, #2150                   @ 0x866 
    /*00004758*/ STR         R1, [SP, #8] 
    /*0000475c*/ STR         R3, [SP] 
    RC_CheckVbrComParm_x4760:
    /*00004760*/ LDR         R3, [PC, #168]              @ 0x0000000000004810 
    /*00004764*/ MOV         R1, #19 
    /*00004768*/ MOV         R0, #3 
    /*0000476c*/ BL          0x000000000000476C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004770*/ MOVW        R0, #32771                  @ 0x8003 
    /*00004774*/ MOVT        R0, #40979                  @ 0xa013 
    /*00004778*/ B           RC_CheckVbrComParm_x4660
    RC_CheckVbrComParm_x477c:
    /*0000477c*/ STR         R3, [SP, #4] 
    /*00004780*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2154] 
    /*00004784*/ MOVW        R3, #2134                   @ 0x856 
    /*00004788*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2154] 
    /*0000478c*/ STR         R3, [SP] 
    /*00004790*/ MOV         R1, #19 
    /*00004794*/ LDR         R3, [PC, #116]              @ 0x0000000000004810 
    /*00004798*/ MOV         R0, #3 
    /*0000479c*/ BL          0x000000000000479C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000047a0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000047a4*/ MOVT        R0, #40979                  @ 0xa013 
    /*000047a8*/ B           RC_CheckVbrComParm_x4660
    RC_CheckVbrComParm_x47ac:
    /*000047ac*/ MOV         R2, #100                    @ 0x64 
    /*000047b0*/ MOV         R3, #1 
    /*000047b4*/ STR         R2, [SP, #12] 
    /*000047b8*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x219c] 
    /*000047bc*/ STR         R3, [SP, #8] 
    /*000047c0*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x219c] 
    /*000047c4*/ MOVW        R3, #2142                   @ 0x85e 
    /*000047c8*/ STR         R1, [SP, #4] 
    /*000047cc*/ STR         R3, [SP] 
    /*000047d0*/ B           RC_CheckVbrComParm_x4760
    RC_CheckVbrComParm_x47d4:
    /*000047d4*/ MOV         R1, #3 
    /*000047d8*/ STR         R2, [SP, #8] 
    /*000047dc*/ STR         R3, [SP, #4] 
    /*000047e0*/ MOV         R0, R1 
    /*000047e4*/ STR         R1, [SP, #12] 
    /*000047e8*/ MOVW        R3, #2158                   @ 0x86e 
    /*000047ec*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2104] 
    /*000047f0*/ STR         R3, [SP] 
    /*000047f4*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2104] 
    /*000047f8*/ LDR         R3, [PC, #16]               @ 0x0000000000004810 
    /*000047fc*/ MOV         R1, #19 
    /*00004800*/ BL          0x0000000000004800          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004804*/ MOVW        R0, #32771                  @ 0x8003 
    /*00004808*/ MOVT        R0, #40979                  @ 0xa013 
    /*0000480c*/ B           RC_CheckVbrComParm_x4660
    /*00004810*/ ANDEQ       R0, R0, R0, LSL #4 
FUNC_END RC_CheckVbrComParm


FUNC_BEGIN RC_CheckAvbrParm
    /*00004814*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00004818*/ SUB         SP, SP, #20 
    /*0000481c*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00004820*/ LDR         R2, [R0, #20] 
    /*00004824*/ LDR         R1, [R0, #28] 
    /*00004828*/ CMP         R3, R2 
    /*0000482c*/ BCC         RC_CheckAvbrParm_x4860
    /*00004830*/ CMP         R3, R1 
    /*00004834*/ BHI         RC_CheckAvbrParm_x4860
    /*00004838*/ LDR         R3, [R0, #36]               @ 0x24 
    /*0000483c*/ SUB         R2, R3, #5 
    /*00004840*/ CMP         R2, #95                     @ 0x5f 
    /*00004844*/ BHI         RC_CheckAvbrParm_x4898
    /*00004848*/ LDR         R3, [R0, #48]               @ 0x30 
    /*0000484c*/ CMP         R3, #100                    @ 0x64 
    /*00004850*/ MOVLS       R0, #0 
    /*00004854*/ BHI         RC_CheckAvbrParm_x48d8
    RC_CheckAvbrParm_x4858:
    /*00004858*/ ADD         SP, SP, #20 
    /*0000485c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RC_CheckAvbrParm_x4860:
    /*00004860*/ STR         R1, [SP, #12] 
    /*00004864*/ MOV         R0, #3 
    /*00004868*/ MOVW        R1, #2170                   @ 0x87a 
    /*0000486c*/ STR         R2, [SP, #8] 
    /*00004870*/ STR         R3, [SP, #4] 
    /*00004874*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x222c] 
    /*00004878*/ STR         R1, [SP] 
    /*0000487c*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x222c] 
    /*00004880*/ MOV         R1, #19 
    /*00004884*/ LDR         R3, [PC, #124]              @ 0x0000000000004908 
    /*00004888*/ BL          0x0000000000004888          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000488c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00004890*/ MOVT        R0, #40979                  @ 0xa013 
    /*00004894*/ B           RC_CheckAvbrParm_x4858
    RC_CheckAvbrParm_x4898:
    /*00004898*/ STR         R3, [SP, #4] 
    /*0000489c*/ MOV         R2, #100                    @ 0x64 
    /*000048a0*/ MOV         R3, #5 
    /*000048a4*/ STR         R2, [SP, #12] 
    /*000048a8*/ STR         R3, [SP, #8] 
    /*000048ac*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2278] 
    /*000048b0*/ MOVW        R3, #2178                   @ 0x882 
    /*000048b4*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2278] 
    /*000048b8*/ STR         R3, [SP] 
    /*000048bc*/ MOV         R1, #19 
    /*000048c0*/ LDR         R3, [PC, #64]               @ 0x0000000000004908 
    /*000048c4*/ MOV         R0, #3 
    /*000048c8*/ BL          0x00000000000048C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000048cc*/ MOVW        R0, #32771                  @ 0x8003 
    /*000048d0*/ MOVT        R0, #40979                  @ 0xa013 
    /*000048d4*/ B           RC_CheckAvbrParm_x4858
    RC_CheckAvbrParm_x48d8:
    /*000048d8*/ STR         R3, [SP, #4] 
    /*000048dc*/ MOVW        R2, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22c8] 
    /*000048e0*/ MOVW        R3, #2186                   @ 0x88a 
    /*000048e4*/ MOVT        R2, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22c8] 
    /*000048e8*/ STR         R3, [SP] 
    /*000048ec*/ MOV         R1, #19 
    /*000048f0*/ LDR         R3, [PC, #16]               @ 0x0000000000004908 
    /*000048f4*/ MOV         R0, #3 
    /*000048f8*/ BL          0x00000000000048F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000048fc*/ MOVW        R0, #32771                  @ 0x8003 
    /*00004900*/ MOVT        R0, #40979                  @ 0xa013 
    /*00004904*/ B           RC_CheckAvbrParm_x4858
    /*00004908*/ ANDEQ       R0, R0, R4, LSL R2 
FUNC_END RC_CheckAvbrParm


FUNC_BEGIN RC_CheckQvbrParm
    /*0000490c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00004910*/ SUB         SP, SP, #20 
    /*00004914*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00004918*/ SUB         R2, R3, #18 
    /*0000491c*/ CMP         R2, #22 
    /*00004920*/ BHI         RC_CheckQvbrParm_x49c8
    /*00004924*/ LDR         R2, [R0, #60]               @ 0x3c 
    /*00004928*/ CMP         R3, R2 
    /*0000492c*/ CMPLE       R2, #40                     @ 0x28 
    /*00004930*/ BGT         RC_CheckQvbrParm_x4964
    /*00004934*/ LDR         R2, [R0, #56]               @ 0x38 
    /*00004938*/ SUB         R3, R2, #30 
    /*0000493c*/ CMP         R3, #150                    @ 0x96 
    /*00004940*/ BHI         RC_CheckQvbrParm_x49f0
    /*00004944*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00004948*/ CMP         R3, #180                    @ 0xb4 
    /*0000494c*/ CMPLE       R2, R3 
    /*00004950*/ MOVGT       R0, #1 
    /*00004954*/ MOVLE       R0, #0 
    /*00004958*/ BGT         RC_CheckQvbrParm_x49a4
    /*0000495c*/ ADD         SP, SP, #20 
    /*00004960*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RC_CheckQvbrParm_x4964:
    /*00004964*/ STR         R2, [SP, #4] 
    /*00004968*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x236c] 
    /*0000496c*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x236c] 
    /*00004970*/ STR         R3, [SP, #8] 
    /*00004974*/ MOV         R1, #40                     @ 0x28 
    /*00004978*/ MOVW        R3, #2217                   @ 0x8a9 
    /*0000497c*/ STR         R1, [SP, #12] 
    /*00004980*/ STR         R3, [SP] 
    RC_CheckQvbrParm_x4984:
    /*00004984*/ LDR         R3, [PC, #140]              @ 0x0000000000004a18 
    /*00004988*/ MOV         R1, #19 
    /*0000498c*/ MOV         R0, #3 
    /*00004990*/ BL          0x0000000000004990          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004994*/ MOVW        R0, #32771                  @ 0x8003 
    /*00004998*/ MOVT        R0, #40979                  @ 0xa013 
    /*0000499c*/ ADD         SP, SP, #20 
    /*000049a0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RC_CheckQvbrParm_x49a4:
    /*000049a4*/ STR         R2, [SP, #8] 
    /*000049a8*/ MOV         R2, #180                    @ 0xb4 
    /*000049ac*/ STR         R3, [SP, #4] 
    /*000049b0*/ MOVW        R3, #2233                   @ 0x8b9 
    /*000049b4*/ STR         R2, [SP, #12] 
    /*000049b8*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x240c] 
    /*000049bc*/ STR         R3, [SP] 
    /*000049c0*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x240c] 
    /*000049c4*/ B           RC_CheckQvbrParm_x4984
    RC_CheckQvbrParm_x49c8:
    /*000049c8*/ MOV         R2, #40                     @ 0x28 
    /*000049cc*/ STR         R3, [SP, #4] 
    /*000049d0*/ STR         R2, [SP, #12] 
    /*000049d4*/ MOV         R3, #18 
    /*000049d8*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x231c] 
    /*000049dc*/ STR         R3, [SP, #8] 
    /*000049e0*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x231c] 
    /*000049e4*/ MOVW        R3, #2209                   @ 0x8a1 
    /*000049e8*/ STR         R3, [SP] 
    /*000049ec*/ B           RC_CheckQvbrParm_x4984
    RC_CheckQvbrParm_x49f0:
    /*000049f0*/ MOV         R3, #30 
    /*000049f4*/ STR         R2, [SP, #4] 
    /*000049f8*/ STR         R3, [SP, #8] 
    /*000049fc*/ MOV         R2, #180                    @ 0xb4 
    /*00004a00*/ MOVW        R3, #2225                   @ 0x8b1 
    /*00004a04*/ STR         R2, [SP, #12] 
    /*00004a08*/ STR         R3, [SP] 
    /*00004a0c*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23bc] 
    /*00004a10*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23bc] 
    /*00004a14*/ B           RC_CheckQvbrParm_x4984
    /*00004a18*/ ANDEQ       R0, R0, R8, LSR #4 
FUNC_END RC_CheckQvbrParm


FUNC_BEGIN RC_CheckCvbrParm
    /*00004a1c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00004a20*/ MOVW        R2, #1799                   @ 0x707 
    /*00004a24*/ LDR         R3, [R0, #72]               @ 0x48 
    /*00004a28*/ SUB         SP, SP, #20 
    /*00004a2c*/ SUB         R1, R3, #1 
    /*00004a30*/ CMP         R1, R2 
    /*00004a34*/ BHI         RC_CheckCvbrParm_x4a50
    /*00004a38*/ LDR         R3, [R0, #68]               @ 0x44 
    /*00004a3c*/ CMP         R3, #1000                   @ 0x3e8 
    /*00004a40*/ MOVLS       R0, #0 
    /*00004a44*/ BHI         RC_CheckCvbrParm_x4a90
    RC_CheckCvbrParm_x4a48:
    /*00004a48*/ ADD         SP, SP, #20 
    /*00004a4c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RC_CheckCvbrParm_x4a50:
    /*00004a50*/ MOVW        R2, #1800                   @ 0x708 
    /*00004a54*/ STR         R2, [SP, #12] 
    /*00004a58*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x245c] 
    /*00004a5c*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x245c] 
    /*00004a60*/ STR         R3, [SP, #4] 
    /*00004a64*/ MOV         R3, #1 
    /*00004a68*/ STR         R3, [SP, #8] 
    /*00004a6c*/ MOVW        R3, #2247                   @ 0x8c7 
    /*00004a70*/ STR         R3, [SP] 
    RC_CheckCvbrParm_x4a74:
    /*00004a74*/ LDR         R3, [PC, #60]               @ 0x0000000000004ab8 
    /*00004a78*/ MOV         R1, #19 
    /*00004a7c*/ MOV         R0, #3 
    /*00004a80*/ BL          0x0000000000004A80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004a84*/ MOVW        R0, #32771                  @ 0x8003 
    /*00004a88*/ MOVT        R0, #40979                  @ 0xa013 
    /*00004a8c*/ B           RC_CheckCvbrParm_x4a48
    RC_CheckCvbrParm_x4a90:
    /*00004a90*/ MOV         R2, #1000                   @ 0x3e8 
    /*00004a94*/ STR         R3, [SP, #4] 
    /*00004a98*/ STR         R2, [SP, #12] 
    /*00004a9c*/ MOV         R3, #0 
    /*00004aa0*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24b4] 
    /*00004aa4*/ STR         R3, [SP, #8] 
    /*00004aa8*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24b4] 
    /*00004aac*/ MOVW        R3, #2255                   @ 0x8cf 
    /*00004ab0*/ STR         R3, [SP] 
    /*00004ab4*/ B           RC_CheckCvbrParm_x4a74
    /*00004ab8*/ ANDEQ       R0, R0, IP, LSR R2 
FUNC_END RC_CheckCvbrParm


FUNC_BEGIN RC_CheckVbrParam
    /*00004abc*/ PUSH        {R4, R5, R6, LR} 
    /*00004ac0*/ MOV         R5, R0 
    /*00004ac4*/ MOV         R4, R1 
    /*00004ac8*/ BL          0x0000000000004AC8          @ RC_CheckVbrComParm [R_ARM_CALL: .text+0x4594] 
    /*00004acc*/ CMP         R0, #0 
    /*00004ad0*/ POPNE       {R4, R5, R6, PC} 
    /*00004ad4*/ LDR         R3, [R4, #52]               @ 0x34 
    /*00004ad8*/ CMP         R3, #2 
    /*00004adc*/ BEQ         RC_CheckVbrParam_x4afc
    /*00004ae0*/ CMP         R3, #3 
    /*00004ae4*/ BEQ         RC_CheckVbrParam_x4b08
    /*00004ae8*/ CMP         R3, #4 
    /*00004aec*/ POPNE       {R4, R5, R6, PC} 
    /*00004af0*/ MOV         R0, R5 
    /*00004af4*/ POP         {R4, R5, R6, LR} 
    RC_CheckVbrParam_x4af8:
    /*00004af8*/ B           RC_CheckVbrParam_x4af8      @ RC_CheckCvbrParm [R_ARM_JUMP24: .text+0x4a1c] 
    RC_CheckVbrParam_x4afc:
    /*00004afc*/ MOV         R0, R5 
    /*00004b00*/ POP         {R4, R5, R6, LR} 
    RC_CheckVbrParam_x4b04:
    /*00004b04*/ B           RC_CheckVbrParam_x4b04      @ RC_CheckAvbrParm [R_ARM_JUMP24: .text+0x4814] 
    RC_CheckVbrParam_x4b08:
    /*00004b08*/ MOV         R0, R5 
    /*00004b0c*/ POP         {R4, R5, R6, LR} 
    RC_CheckVbrParam_x4b10:
    /*00004b10*/ B           RC_CheckVbrParam_x4b10      @ RC_CheckQvbrParm [R_ARM_JUMP24: .text+0x490c] 
FUNC_END RC_CheckVbrParam


FUNC_BEGIN RC_CheckParam
    /*00004b14*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00004b18*/ SUB         SP, SP, #332                @ 0x14c 
    /*00004b1c*/ LDR         R7, [R1] 
    /*00004b20*/ SUB         R3, R7, #1 
    /*00004b24*/ CMP         R3, #16 
    /*00004b28*/ BHI         RC_CheckParam_x4ddc
    /*00004b2c*/ SUB         R3, R7, #6 
    /*00004b30*/ BIC         R3, R3, #4 
    /*00004b34*/ CMP         R3, #0 
    /*00004b38*/ CMPNE       R7, #16 
    /*00004b3c*/ BEQ         RC_CheckParam_x4d68
    /*00004b40*/ MOV         R5, R0 
    /*00004b44*/ MOV         R0, R1 
    /*00004b48*/ ADD         R1, SP, #24 
    /*00004b4c*/ MOV         R6, R2 
    /*00004b50*/ BL          0x0000000000004B50          @ RcTransAttr [R_ARM_CALL: .text+0x2464] 
    /*00004b54*/ SUBS        R4, R0, #0 
    /*00004b58*/ BNE         RC_CheckParam_x4c88
    /*00004b5c*/ MOV         R0, R7 
    /*00004b60*/ MOV         R1, R5 
    /*00004b64*/ ADD         R2, SP, #104                @ 0x68 
    /*00004b68*/ BL          0x0000000000004B68          @ RcTransParam [R_ARM_CALL: .text+0x2b68] 
    /*00004b6c*/ SUBS        R4, R0, #0 
    /*00004b70*/ BNE         RC_CheckParam_x4c7c
    /*00004b74*/ SUB         R3, R5, #4 
    /*00004b78*/ MOV         R0, R4 
    RC_CheckParam_x4b7c:
    /*00004b7c*/ LDR         R1, [R3, #4]! 
    /*00004b80*/ CMP         R1, #255                    @ 0xff 
    /*00004b84*/ BHI         RC_CheckParam_x4d0c
    /*00004b88*/ LDR         R2, [R3, #64]               @ 0x40 
    /*00004b8c*/ CMP         R2, #255                    @ 0xff 
    /*00004b90*/ BHI         RC_CheckParam_x4d5c
    /*00004b94*/ LDR         IP, [R3, #128]              @ 0x80 
    /*00004b98*/ CMP         IP, #255                    @ 0xff 
    /*00004b9c*/ BHI         RC_CheckParam_x4d18
    /*00004ba0*/ ADD         R0, R0, #1 
    /*00004ba4*/ CMP         R0, #16 
    /*00004ba8*/ BNE         RC_CheckParam_x4b7c
    /*00004bac*/ LDR         R3, [SP, #200]              @ 0xc8 
    /*00004bb0*/ CMP         R3, #16 
    /*00004bb4*/ BHI         RC_CheckParam_x4e64
    /*00004bb8*/ LDR         R3, [SP, #212]              @ 0xd4 
    /*00004bbc*/ CMP         R3, #4 
    /*00004bc0*/ STRHI       R3, [SP, #4] 
    /*00004bc4*/ MOVHI       R2, #4 
    /*00004bc8*/ MOVWHI      R3, #2373                   @ 0x945 
    /*00004bcc*/ BHI         RC_CheckParam_x4c54
    /*00004bd0*/ LDR         R2, [SP, #216]              @ 0xd8 
    /*00004bd4*/ CMP         R2, #4 
    /*00004bd8*/ BHI         RC_CheckParam_x4c48
    /*00004bdc*/ LDR         R3, [SP, #204]              @ 0xcc 
    /*00004be0*/ CMP         R3, #10 
    /*00004be4*/ BHI         RC_CheckParam_x4e98
    /*00004be8*/ LDR         R3, [SP, #228]              @ 0xe4 
    /*00004bec*/ CMP         R3, #1 
    /*00004bf0*/ BHI         RC_CheckParam_x4e1c
    /*00004bf4*/ LDR         R2, [SP, #232]              @ 0xe8 
    /*00004bf8*/ CMP         R2, #1 
    /*00004bfc*/ BHI         RC_CheckParam_x4e4c
    /*00004c00*/ LDR         R1, [R6] 
    /*00004c04*/ AND         R3, R3, R2 
    /*00004c08*/ CMP         R1, #4 
    /*00004c0c*/ MOVNE       R3, #0 
    /*00004c10*/ ANDEQ       R3, R3, #1 
    /*00004c14*/ CMP         R3, #0 
    /*00004c18*/ BNE         RC_CheckParam_x4ebc
    /*00004c1c*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*00004c20*/ CMP         R3, #6 
    /*00004c24*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*00004c28*/ B           RC_CheckParam_x4db0
    /*00004c2c*/ MULEQ       R0, R8, SP 
    /*00004c30*/ @           <UNDEFINED> instruction: 0x00004cb4 
    /*00004c34*/ MULEQ       R0, R8, SP 
    /*00004c38*/ MULEQ       R0, R8, SP 
    /*00004c3c*/ MULEQ       R0, R8, SP 
    /*00004c40*/ @           <UNDEFINED> instruction: 0x00004db0 
    /*00004c44*/ ANDEQ       R4, R0, IP, ROR #25 
    RC_CheckParam_x4c48:
    /*00004c48*/ STR         R3, [SP, #4] 
    /*00004c4c*/ MOV         R2, #4 
    /*00004c50*/ MOVW        R3, #2381                   @ 0x94d 
    RC_CheckParam_x4c54:
    /*00004c54*/ STR         R3, [SP] 
    /*00004c58*/ LDR         R3, [PC, #624]              @ 0x0000000000004ed0 
    /*00004c5c*/ STR         R2, [SP, #8] 
    /*00004c60*/ MOVW        R2, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2664] 
    /*00004c64*/ MOVT        R2, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2664] 
    RC_CheckParam_x4c68:
    /*00004c68*/ MOV         R1, #19 
    /*00004c6c*/ MOV         R0, #3 
    /*00004c70*/ BL          0x0000000000004C70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004c74*/ MOVW        R4, #32771                  @ 0x8003 
    /*00004c78*/ MOVT        R4, #40979                  @ 0xa013 
    RC_CheckParam_x4c7c:
    /*00004c7c*/ MOV         R0, R4 
    /*00004c80*/ ADD         SP, SP, #332                @ 0x14c 
    /*00004c84*/ POP         {R4, R5, R6, R7, PC} 
    RC_CheckParam_x4c88:
    /*00004c88*/ MOV         R3, #2336                   @ 0x920 
    /*00004c8c*/ MOV         R1, #19 
    /*00004c90*/ STR         R3, [SP] 
    /*00004c94*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2590] 
    /*00004c98*/ LDR         R3, [PC, #560]              @ 0x0000000000004ed0 
    /*00004c9c*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2590] 
    /*00004ca0*/ MOV         R0, #3 
    /*00004ca4*/ BL          0x0000000000004CA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004ca8*/ MOV         R0, R4 
    /*00004cac*/ ADD         SP, SP, #332                @ 0x14c 
    /*00004cb0*/ POP         {R4, R5, R6, R7, PC} 
    /*00004cb4*/ ADD         R1, SP, #24 
    /*00004cb8*/ ADD         R0, SP, #240                @ 0xf0 
    /*00004cbc*/ BL          0x0000000000004CBC          @ RC_CheckCbrParam [R_ARM_CALL: .text+0x431c] 
    /*00004cc0*/ SUBS        R4, R0, #0 
    /*00004cc4*/ BNE         RC_CheckParam_x4c7c
    RC_CheckParam_x4cc8:
    /*00004cc8*/ LDR         R2, [SP, #72]               @ 0x48 
    /*00004ccc*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00004cd0*/ CMP         R2, R3 
    /*00004cd4*/ BEQ         RC_CheckParam_x4cec
    /*00004cd8*/ ADD         R1, SP, #24 
    /*00004cdc*/ ADD         R0, SP, #104                @ 0x68 
    /*00004ce0*/ BL          0x0000000000004CE0          @ RC_DRV_CheckQpmap [R_ARM_CALL: .text+0x111e4] 
    /*00004ce4*/ SUBS        R4, R0, #0 
    /*00004ce8*/ BNE         RC_CheckParam_x4c7c
    RC_CheckParam_x4cec:
    /*00004cec*/ ADD         R1, SP, #24 
    /*00004cf0*/ ADD         R0, SP, #104                @ 0x68 
    /*00004cf4*/ BL          0x0000000000004CF4          @ RC_DRV_CheckFirstFrmQp [R_ARM_CALL: .text+0x11120] 
    /*00004cf8*/ MOVW        R4, #32771                  @ 0x8003 
    /*00004cfc*/ MOVT        R4, #40979                  @ 0xa013 
    /*00004d00*/ CMP         R0, #0 
    /*00004d04*/ MOVEQ       R4, #0 
    /*00004d08*/ B           RC_CheckParam_x4c7c
    RC_CheckParam_x4d0c:
    /*00004d0c*/ ADD         R5, R5, R0, LSL #2 
    /*00004d10*/ LDR         R2, [R5, #64]               @ 0x40 
    /*00004d14*/ LDR         IP, [R5, #128]              @ 0x80 
    RC_CheckParam_x4d18:
    /*00004d18*/ STR         R2, [SP, #12] 
    /*00004d1c*/ MOVW        R3, #2356                   @ 0x934 
    /*00004d20*/ STR         R1, [SP, #8] 
    /*00004d24*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25c0] 
    /*00004d28*/ STR         R0, [SP, #4] 
    /*00004d2c*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25c0] 
    /*00004d30*/ STR         R3, [SP] 
    /*00004d34*/ MOV         R1, #19 
    /*00004d38*/ STR         IP, [SP, #16] 
    /*00004d3c*/ MOV         R0, #3 
    /*00004d40*/ LDR         R3, [PC, #392]              @ 0x0000000000004ed0 
    /*00004d44*/ MOVW        R4, #32771                  @ 0x8003 
    /*00004d48*/ BL          0x0000000000004D48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004d4c*/ MOVT        R4, #40979                  @ 0xa013 
    /*00004d50*/ MOV         R0, R4 
    /*00004d54*/ ADD         SP, SP, #332                @ 0x14c 
    /*00004d58*/ POP         {R4, R5, R6, R7, PC} 
    RC_CheckParam_x4d5c:
    /*00004d5c*/ ADD         R3, R0, #32 
    /*00004d60*/ LDR         IP, [R5, R3, LSL #2] 
    /*00004d64*/ B           RC_CheckParam_x4d18
    RC_CheckParam_x4d68:
    /*00004d68*/ MOVW        R3, #2326                   @ 0x916 
    /*00004d6c*/ STR         R7, [SP, #4] 
    /*00004d70*/ STR         R3, [SP] 
    /*00004d74*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x254c] 
    /*00004d78*/ LDR         R3, [PC, #336]              @ 0x0000000000004ed0 
    /*00004d7c*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x254c] 
    /*00004d80*/ MOV         R1, #19 
    /*00004d84*/ MOV         R0, #3 
    /*00004d88*/ MOVW        R4, #32776                  @ 0x8008 
    /*00004d8c*/ BL          0x0000000000004D8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004d90*/ MOVT        R4, #40979                  @ 0xa013 
    /*00004d94*/ B           RC_CheckParam_x4c7c
    /*00004d98*/ ADD         R1, SP, #24 
    /*00004d9c*/ ADD         R0, SP, #240                @ 0xf0 
    /*00004da0*/ BL          0x0000000000004DA0          @ RC_CheckVbrParam [R_ARM_CALL: .text+0x4abc] 
    /*00004da4*/ SUBS        R4, R0, #0 
    /*00004da8*/ BEQ         RC_CheckParam_x4cc8
    /*00004dac*/ B           RC_CheckParam_x4c7c
    RC_CheckParam_x4db0:
    /*00004db0*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2844] 
    /*00004db4*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2844] 
    /*00004db8*/ MOVW        R3, #2474                   @ 0x9aa 
    /*00004dbc*/ STR         R3, [SP] 
    RC_CheckParam_x4dc0:
    /*00004dc0*/ LDR         R3, [PC, #264]              @ 0x0000000000004ed0 
    /*00004dc4*/ MOV         R1, #19 
    /*00004dc8*/ MOV         R0, #3 
    /*00004dcc*/ MOVW        R4, #32771                  @ 0x8003 
    /*00004dd0*/ BL          0x0000000000004DD0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004dd4*/ MOVT        R4, #40979                  @ 0xa013 
    /*00004dd8*/ B           RC_CheckParam_x4c7c
    RC_CheckParam_x4ddc:
    /*00004ddc*/ MOV         R2, #17 
    /*00004de0*/ MOV         R3, #1 
    /*00004de4*/ STR         R2, [SP, #12] 
    /*00004de8*/ MOV         R1, #19 
    /*00004dec*/ STR         R3, [SP, #8] 
    /*00004df0*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2504] 
    /*00004df4*/ MOVW        R3, #2317                   @ 0x90d 
    /*00004df8*/ STR         R7, [SP, #4] 
    /*00004dfc*/ STR         R3, [SP] 
    /*00004e00*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2504] 
    /*00004e04*/ LDR         R3, [PC, #196]              @ 0x0000000000004ed0 
    /*00004e08*/ MOV         R0, #3 
    /*00004e0c*/ MOVW        R4, #32771                  @ 0x8003 
    /*00004e10*/ BL          0x0000000000004E10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004e14*/ MOVT        R4, #40979                  @ 0xa013 
    /*00004e18*/ B           RC_CheckParam_x4c7c
    RC_CheckParam_x4e1c:
    /*00004e1c*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2700] 
    /*00004e20*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2700] 
    /*00004e24*/ STR         R3, [SP, #4] 
    /*00004e28*/ MOVW        R3, #2397                   @ 0x95d 
    /*00004e2c*/ STR         R3, [SP] 
    RC_CheckParam_x4e30:
    /*00004e30*/ LDR         R3, [PC, #152]              @ 0x0000000000004ed0 
    /*00004e34*/ MOV         R1, #19 
    /*00004e38*/ MOV         R0, #3 
    /*00004e3c*/ MOVW        R4, #32771                  @ 0x8003 
    /*00004e40*/ BL          0x0000000000004E40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004e44*/ MOVT        R4, #40979                  @ 0xa013 
    /*00004e48*/ B           RC_CheckParam_x4c7c
    RC_CheckParam_x4e4c:
    /*00004e4c*/ STR         R2, [SP, #4] 
    /*00004e50*/ MOVW        R3, #2405                   @ 0x965 
    /*00004e54*/ MOVW        R2, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2760] 
    /*00004e58*/ STR         R3, [SP] 
    /*00004e5c*/ MOVT        R2, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2760] 
    /*00004e60*/ B           RC_CheckParam_x4e30
    RC_CheckParam_x4e64:
    /*00004e64*/ STR         R0, [SP, #8] 
    /*00004e68*/ MOVW        R1, #2365                   @ 0x93d 
    /*00004e6c*/ STR         R3, [SP, #4] 
    /*00004e70*/ MOVW        R2, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2618] 
    /*00004e74*/ STR         R1, [SP] 
    /*00004e78*/ MOVT        R2, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2618] 
    /*00004e7c*/ LDR         R3, [PC, #76]               @ 0x0000000000004ed0 
    /*00004e80*/ MOV         R1, #19 
    /*00004e84*/ MOV         R0, #3 
    /*00004e88*/ MOVW        R4, #32771                  @ 0x8003 
    /*00004e8c*/ BL          0x0000000000004E8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004e90*/ MOVT        R4, #40979                  @ 0xa013 
    /*00004e94*/ B           RC_CheckParam_x4c7c
    RC_CheckParam_x4e98:
    /*00004e98*/ MOV         R2, #10 
    /*00004e9c*/ STR         R3, [SP, #4] 
    /*00004ea0*/ STR         R2, [SP, #8] 
    /*00004ea4*/ MOVW        R3, #2389                   @ 0x955 
    /*00004ea8*/ MOVW        R2, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26b0] 
    /*00004eac*/ STR         R3, [SP] 
    /*00004eb0*/ MOVT        R2, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26b0] 
    /*00004eb4*/ LDR         R3, [PC, #20]               @ 0x0000000000004ed0 
    /*00004eb8*/ B           RC_CheckParam_x4c68
    RC_CheckParam_x4ebc:
    /*00004ebc*/ MOVW        R3, #2415                   @ 0x96f 
    /*00004ec0*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x27c8] 
    /*00004ec4*/ STR         R3, [SP] 
    /*00004ec8*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x27c8] 
    /*00004ecc*/ B           RC_CheckParam_x4dc0
    /*00004ed0*/ ANDEQ       R0, R0, R0, ASR R2 
FUNC_END RC_CheckParam


FUNC_BEGIN RcWrFifoElem
    /*00004ed4*/ PUSH        {R4, R5, R6, LR} 
    /*00004ed8*/ SUBS        R4, R0, #0 
    /*00004edc*/ MOV         R5, R1 
    /*00004ee0*/ BEQ         RcWrFifoElem_x4f54
    RcWrFifoElem_x4ee4:
    /*00004ee4*/ LDR         R3, [R4, #16] 
    /*00004ee8*/ LDR         R2, [R4, #4] 
    /*00004eec*/ CMP         R3, R2 
    /*00004ef0*/ BEQ         RcWrFifoElem_x4f2c
    RcWrFifoElem_x4ef4:
    /*00004ef4*/ CMP         R2, R3 
    /*00004ef8*/ BLE         RcWrFifoElem_x4f24
    /*00004efc*/ LDR         R1, [R4, #12] 
    /*00004f00*/ ADD         R3, R3, #1 
    /*00004f04*/ LDR         R0, [R4] 
    /*00004f08*/ ADD         R2, R1, #1 
    /*00004f0c*/ STR         R5, [R0, R1, LSL #2] 
    /*00004f10*/ LDR         R1, [R4, #4] 
    /*00004f14*/ STR         R3, [R4, #16] 
    /*00004f18*/ CMP         R2, R1 
    /*00004f1c*/ MOVGE       R2, #0 
    /*00004f20*/ STR         R2, [R4, #12] 
    RcWrFifoElem_x4f24:
    /*00004f24*/ MOV         R0, #0 
    /*00004f28*/ POP         {R4, R5, R6, PC} 
    RcWrFifoElem_x4f2c:
    /*00004f2c*/ CMP         R3, #0 
    /*00004f30*/ BLE         RcWrFifoElem_x4f24
    /*00004f34*/ LDR         R1, [R4, #8] 
    /*00004f38*/ ADD         R1, R1, #1 
    /*00004f3c*/ CMP         R3, R1 
    /*00004f40*/ SUB         R3, R3, #1 
    /*00004f44*/ STR         R3, [R4, #16] 
    /*00004f48*/ MOVLE       R1, #0 
    /*00004f4c*/ STR         R1, [R4, #8] 
    /*00004f50*/ B           RcWrFifoElem_x4ef4
    RcWrFifoElem_x4f54:
    /*00004f54*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1344] 
    /*00004f58*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00004f5c*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1344] 
    /*00004f60*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00004f64*/ MOV         R2, #2512                   @ 0x9d0 
    /*00004f68*/ LDR         R1, [PC, #4]                @ 0x0000000000004f74 
    /*00004f6c*/ BL          0x0000000000004F6C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00004f70*/ B           RcWrFifoElem_x4ee4
    /*00004f74*/ ANDEQ       R0, R0, R0, ROR #4 
FUNC_END RcWrFifoElem


FUNC_BEGIN RcUpdateRcHwCfg
    /*00004f78*/ LDR         R3, [R0, #1540]             @ 0x604 
    /*00004f7c*/ CMP         R3, #1 
    /*00004f80*/ BXNE        LR 
    /*00004f84*/ B           0x0000000000002140 
FUNC_END RcUpdateRcHwCfg


FUNC_BEGIN RcInitFrameLostParam
    /*00004f88*/ MOV         R3, #0 
    /*00004f8c*/ MOV         R2, #83886080               @ 0x5000000 
    /*00004f90*/ STR         R3, [R0] 
    /*00004f94*/ STR         R2, [R0, #4] 
    /*00004f98*/ STR         R3, [R0, #8] 
    /*00004f9c*/ STR         R3, [R0, #12] 
    /*00004fa0*/ BX          LR 
FUNC_END RcInitFrameLostParam


FUNC_BEGIN RcInitCvbrAlgModel
    /*00004fa4*/ PUSH        {R4, R5, R6, LR} 
    /*00004fa8*/ MOV         R4, R0 
    /*00004fac*/ LDR         R2, [R1, #64]               @ 0x40 
    /*00004fb0*/ MOV         R3, #0 
    /*00004fb4*/ LDR         R0, [R0, #1132]             @ 0x46c 
    /*00004fb8*/ MOV         R5, R1 
    /*00004fbc*/ STR         R3, [R4, #1120]             @ 0x460 
    /*00004fc0*/ MOV         R1, R3 
    /*00004fc4*/ STR         R3, [R4, #1124]             @ 0x464 
    /*00004fc8*/ STR         R3, [R4, #1128]             @ 0x468 
    /*00004fcc*/ STR         R2, [R4, #1116]             @ 0x45c 
    /*00004fd0*/ STR         R0, [R4, #1112]             @ 0x458 
    /*00004fd4*/ LDR         R2, [R4, #1136]             @ 0x470 
    /*00004fd8*/ BL          0x0000000000004FD8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00004fdc*/ LDR         R6, [R5, #40]               @ 0x28 
    /*00004fe0*/ LDR         R0, [R4, #1164]             @ 0x48c 
    /*00004fe4*/ MOV         R1, R6 
    /*00004fe8*/ BL          0x0000000000004FE8          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00004fec*/ LDR         R2, [R5, #60]               @ 0x3c 
    /*00004ff0*/ LDR         R1, [R4, #1160]             @ 0x488 
    /*00004ff4*/ MUL         R2, R2, R6 
    /*00004ff8*/ MOV         R3, R0 
    /*00004ffc*/ ADD         R0, R4, #1136               @ 0x470 
    /*00005000*/ ADD         R0, R0, #4 
    /*00005004*/ POP         {R4, R5, R6, LR} 
    /*00005008*/ B           0x000000000000202C 
FUNC_END RcInitCvbrAlgModel


FUNC_BEGIN RcInitAlgModel
    /*0000500c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00005010*/ MOV         R4, R0 
    /*00005014*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00005018*/ SUB         SP, SP, #4 
    /*0000501c*/ ADD         SL, R0, #304                @ 0x130 
    /*00005020*/ LDR         R5, [R0, #40]               @ 0x28 
    /*00005024*/ CMP         R3, #1 
    /*00005028*/ LDR         R7, [R0, #44]               @ 0x2c 
    /*0000502c*/ BEQ         RcInitAlgModel_x5210
    /*00005030*/ SUB         R6, R3, #2 
    /*00005034*/ CMP         R3, #0 
    /*00005038*/ CMPNE       R6, #1 
    /*0000503c*/ MOVLS       R6, #1 
    /*00005040*/ MOVHI       R6, #0 
    /*00005044*/ BLS         RcInitAlgModel_x508c
    /*00005048*/ CMP         R3, #4 
    /*0000504c*/ BEQ         RcInitAlgModel_x5234
    /*00005050*/ CMP         R3, #6 
    /*00005054*/ BEQ         RcInitAlgModel_x5240
    /*00005058*/ CMP         R3, #5 
    /*0000505c*/ BEQ         RcInitAlgModel_x5240
    /*00005060*/ MOVW        R3, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2878] 
    /*00005064*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00005068*/ MOVT        R3, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2878] 
    /*0000506c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00005070*/ MOVW        R2, #2648                   @ 0xa58 
    /*00005074*/ LDR         R1, [PC, #548]              @ 0x00000000000052a0 
    /*00005078*/ MOV         R8, R6 
    /*0000507c*/ BL          0x000000000000507C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005080*/ MOV         FP, R6 
    /*00005084*/ MOV         R9, R6 
    /*00005088*/ B           RcInitAlgModel_x50b8
    RcInitAlgModel_x508c:
    /*0000508c*/ LDR         R8, [R0, #36]               @ 0x24 
    /*00005090*/ LDR         R9, [R0, #56]               @ 0x38 
    RcInitAlgModel_x5094:
    /*00005094*/ CMP         R8, #5 
    /*00005098*/ LSR         R9, R9, #1 
    /*0000509c*/ MOVCS       R8, #5 
    /*000050a0*/ MOV         FP, R9 
    /*000050a4*/ MUL         R8, R9, R8 
    /*000050a8*/ CMP         R8, #0 
    /*000050ac*/ ADD         R6, R8, #7 
    /*000050b0*/ MOVGE       R6, R8 
    /*000050b4*/ ASR         R6, R6, #3 
    RcInitAlgModel_x50b8:
    /*000050b8*/ MOV         R3, #0 
    /*000050bc*/ MOV         R2, R5 
    /*000050c0*/ ADD         R1, R4, #452                @ 0x1c4 
    /*000050c4*/ ADD         R0, R4, #388                @ 0x184 
    /*000050c8*/ BL          0x000000000000202C 
    /*000050cc*/ CMP         SL, #0 
    /*000050d0*/ BEQ         RcInitAlgModel_x5280
    RcInitAlgModel_x50d4:
    /*000050d4*/ LSRS        R3, R5, #16 
    /*000050d8*/ BNE         RcInitAlgModel_x51f0
    RcInitAlgModel_x50dc:
    /*000050dc*/ LSRS        R3, R7, #16 
    /*000050e0*/ MOV         R2, #0 
    /*000050e4*/ STR         R5, [R4, #304]              @ 0x130 
    /*000050e8*/ STR         R7, [R4, #308]              @ 0x134 
    /*000050ec*/ STR         R2, [R4, #328]              @ 0x148 
    /*000050f0*/ STR         R2, [R4, #324]              @ 0x144 
    /*000050f4*/ BNE         RcInitAlgModel_x51d4
    /*000050f8*/ MOV         R3, R5 
    /*000050fc*/ SUB         R2, R5, R7 
    /*00005100*/ STR         R5, [R4, #312]              @ 0x138 
    /*00005104*/ STR         R7, [R4, #316]              @ 0x13c 
    /*00005108*/ STR         R2, [R4, #320]              @ 0x140 
    RcInitAlgModel_x510c:
    /*0000510c*/ CMP         R3, R7 
    /*00005110*/ BCS         RcInitAlgModel_x5130
    /*00005114*/ MOVW        R3, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28cc] 
    /*00005118*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*0000511c*/ MOVT        R3, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28cc] 
    /*00005120*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00005124*/ MOV         R2, #199                    @ 0xc7 
    /*00005128*/ LDR         R1, [PC, #372]              @ 0x00000000000052a4 
    /*0000512c*/ BL          0x000000000000512C          @ osal_panic [R_ARM_CALL: +0x0] 
    RcInitAlgModel_x5130:
    /*00005130*/ MOV         R1, R5 
    /*00005134*/ STR         FP, [R4, #332]              @ 0x14c 
    /*00005138*/ MOV         R0, FP 
    /*0000513c*/ STR         R5, [R4, #336]              @ 0x150 
    /*00005140*/ BL          0x0000000000005140          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*00005144*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*00005148*/ MOV         R2, #0 
    /*0000514c*/ STR         R8, [R4, #352]              @ 0x160 
    /*00005150*/ STR         R6, [R4, #344]              @ 0x158 
    /*00005154*/ LSRS        IP, R3, #16 
    /*00005158*/ STR         R6, [R4, #348]              @ 0x15c 
    /*0000515c*/ UXTHNE      R1, R3 
    /*00005160*/ STR         R2, [R4, #356]              @ 0x164 
    /*00005164*/ MOVEQ       R1, R3 
    /*00005168*/ STR         R2, [R4, #360]              @ 0x168 
    /*0000516c*/ STR         R2, [R4, #364]              @ 0x16c 
    /*00005170*/ STR         R0, [R4, #340]              @ 0x154 
    /*00005174*/ SUBNE       R3, R1, #1 
    /*00005178*/ LDREQ       R0, [R4, #40]               @ 0x28 
    /*0000517c*/ LDRNE       R0, [R4, #40]               @ 0x28 
    /*00005180*/ ADDEQ       R0, R3, R0 
    /*00005184*/ SUBEQ       R0, R0, #1 
    /*00005188*/ MLANE       R0, R0, IP, R3 
    /*0000518c*/ BL          0x000000000000518C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00005190*/ LDR         R3, [R4, #52]               @ 0x34 
    /*00005194*/ CMP         R3, #4 
    /*00005198*/ STR         R0, [R4, #1620]             @ 0x654 
    /*0000519c*/ LSL         R0, R0, #1 
    /*000051a0*/ STR         R0, [R4, #1624]             @ 0x658 
    /*000051a4*/ BEQ         RcInitAlgModel_x5250
    /*000051a8*/ MOV         R0, R9 
    /*000051ac*/ MOV         R1, R5 
    /*000051b0*/ BL          0x00000000000051B0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000051b4*/ MOV         R3, R0 
    RcInitAlgModel_x51b8:
    /*000051b8*/ LDR         R2, [R4, #36]               @ 0x24 
    /*000051bc*/ ADD         R0, R4, #368                @ 0x170 
    /*000051c0*/ LDR         R1, [R4, #416]              @ 0x1a0 
    /*000051c4*/ MUL         R2, R2, R5 
    /*000051c8*/ ADD         SP, SP, #4 
    /*000051cc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000051d0*/ B           0x000000000000202C 
    RcInitAlgModel_x51d4:
    /*000051d4*/ MUL         R3, R3, R5 
    /*000051d8*/ UXTH        R7, R7 
    /*000051dc*/ STR         R7, [R4, #316]              @ 0x13c 
    /*000051e0*/ SUB         R2, R3, R7 
    /*000051e4*/ STR         R2, [R4, #320]              @ 0x140 
    /*000051e8*/ STR         R3, [R4, #312]              @ 0x138 
    /*000051ec*/ B           RcInitAlgModel_x510c
    RcInitAlgModel_x51f0:
    /*000051f0*/ MOVW        R3, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28b0] 
    /*000051f4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*000051f8*/ MOVT        R3, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28b0] 
    /*000051fc*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00005200*/ MOV         R2, #172                    @ 0xac 
    /*00005204*/ LDR         R1, [PC, #152]              @ 0x00000000000052a4 
    /*00005208*/ BL          0x0000000000005208          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000520c*/ B           RcInitAlgModel_x50dc
    RcInitAlgModel_x5210:
    /*00005210*/ LDR         R9, [R0, #56]               @ 0x38 
    /*00005214*/ LDR         R8, [R0, #240]              @ 0xf0 
    /*00005218*/ MOV         FP, R9 
    /*0000521c*/ MUL         R8, R8, R9 
    /*00005220*/ CMP         R8, #0 
    /*00005224*/ ADD         R6, R8, #7 
    /*00005228*/ MOVGE       R6, R8 
    /*0000522c*/ ASR         R6, R6, #3 
    /*00005230*/ B           RcInitAlgModel_x50b8
    RcInitAlgModel_x5234:
    /*00005234*/ LDR         R8, [R0, #36]               @ 0x24 
    /*00005238*/ LDR         R9, [R0, #68]               @ 0x44 
    /*0000523c*/ B           RcInitAlgModel_x5094
    RcInitAlgModel_x5240:
    /*00005240*/ MOV         R8, R6 
    /*00005244*/ MOV         FP, R6 
    /*00005248*/ MOV         R9, R6 
    /*0000524c*/ B           RcInitAlgModel_x50b8
    RcInitAlgModel_x5250:
    /*00005250*/ ADD         R3, R4, #3888               @ 0xf30 
    /*00005254*/ MOV         R6, #0 
    /*00005258*/ MOV         R0, SL 
    /*0000525c*/ MOV         R8, #0 
    /*00005260*/ MOV         R9, #0 
    /*00005264*/ MOV         R1, R4 
    /*00005268*/ STRD        R8, [R3, #-8] 
    /*0000526c*/ STR         R6, [R4, #1556]             @ 0x614 
    /*00005270*/ STR         R6, [R4, #3888]             @ 0xf30 
    /*00005274*/ BL          0x0000000000005274          @ RcInitCvbrAlgModel [R_ARM_CALL: .text+0x4fa4] 
    /*00005278*/ MOV         R3, R6 
    /*0000527c*/ B           RcInitAlgModel_x51b8
    RcInitAlgModel_x5280:
    /*00005280*/ MOVW        R3, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x289c] 
    /*00005284*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00005288*/ MOVT        R3, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x289c] 
    /*0000528c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00005290*/ MOV         R2, #169                    @ 0xa9 
    /*00005294*/ LDR         R1, [PC, #8]                @ 0x00000000000052a4 
    /*00005298*/ BL          0x0000000000005298          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000529c*/ B           RcInitAlgModel_x50d4
    /*000052a0*/ ANDEQ       R0, R0, R0, ROR R2 
    /*000052a4*/ ANDEQ       R0, R0, R0, LSL #5 
FUNC_END RcInitAlgModel


FUNC_BEGIN RcResetAlgModel
    /*000052a8*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000052ac*/ MOV         R6, R1 
    /*000052b0*/ LDR         R1, [R1, #52]               @ 0x34 
    /*000052b4*/ MOV         R4, R0 
    /*000052b8*/ MOV         R9, R3 
    /*000052bc*/ LDR         SL, [R6, #40]               @ 0x28 
    /*000052c0*/ CMP         R1, #1 
    /*000052c4*/ LDR         R7, [R6, #44]               @ 0x2c 
    /*000052c8*/ BEQ         RcResetAlgModel_x546c
    /*000052cc*/ SUB         R5, R1, #2 
    /*000052d0*/ CMP         R1, #0 
    /*000052d4*/ CMPNE       R5, #2 
    /*000052d8*/ MOVLS       R5, #1 
    /*000052dc*/ MOVHI       R5, #0 
    /*000052e0*/ BLS         RcResetAlgModel_x531c
    /*000052e4*/ CMP         R1, #6 
    /*000052e8*/ BEQ         RcResetAlgModel_x5478
    /*000052ec*/ CMP         R1, #5 
    /*000052f0*/ BEQ         RcResetAlgModel_x5478
    /*000052f4*/ MOVW        R3, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2878] 
    /*000052f8*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*000052fc*/ MOVT        R3, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2878] 
    /*00005300*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00005304*/ MOVW        R2, #2730                   @ 0xaaa 
    /*00005308*/ LDR         R1, [PC, #404]              @ 0x00000000000054a4 
    /*0000530c*/ MOV         R8, R5 
    /*00005310*/ BL          0x0000000000005310          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005314*/ MOV         FP, R5 
    /*00005318*/ B           RcResetAlgModel_x5344
    RcResetAlgModel_x531c:
    /*0000531c*/ LDR         R8, [R6, #36]               @ 0x24 
    /*00005320*/ LDR         FP, [R6, #56]               @ 0x38 
    /*00005324*/ CMP         R8, #5 
    /*00005328*/ LSR         FP, FP, #1 
    /*0000532c*/ MOVCS       R8, #5 
    RcResetAlgModel_x5330:
    /*00005330*/ MUL         R8, FP, R8 
    /*00005334*/ CMP         R8, #0 
    /*00005338*/ ADD         R5, R8, #7 
    /*0000533c*/ MOVGE       R5, R8 
    /*00005340*/ ASR         R5, R5, #3 
    RcResetAlgModel_x5344:
    /*00005344*/ CMP         R4, #0 
    /*00005348*/ BEQ         RcResetAlgModel_x5484
    RcResetAlgModel_x534c:
    /*0000534c*/ LSRS        R3, SL, #16 
    /*00005350*/ BNE         RcResetAlgModel_x544c
    RcResetAlgModel_x5354:
    /*00005354*/ LSRS        R3, R7, #16 
    /*00005358*/ MOV         R2, #0 
    /*0000535c*/ STR         SL, [R4] 
    /*00005360*/ STR         R7, [R4, #4] 
    /*00005364*/ STR         R2, [R4, #24] 
    /*00005368*/ STR         R2, [R4, #20] 
    /*0000536c*/ BNE         RcResetAlgModel_x5430
    /*00005370*/ MOV         R3, SL 
    /*00005374*/ SUB         R2, SL, R7 
    /*00005378*/ STR         SL, [R4, #8] 
    /*0000537c*/ STR         R7, [R4, #12] 
    /*00005380*/ STR         R2, [R4, #16] 
    RcResetAlgModel_x5384:
    /*00005384*/ CMP         R3, R7 
    /*00005388*/ BCS         RcResetAlgModel_x53a8
    /*0000538c*/ MOVW        R3, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28cc] 
    /*00005390*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00005394*/ MOVT        R3, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28cc] 
    /*00005398*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*0000539c*/ MOV         R2, #199                    @ 0xc7 
    /*000053a0*/ LDR         R1, [PC, #256]              @ 0x00000000000054a8 
    /*000053a4*/ BL          0x00000000000053A4          @ osal_panic [R_ARM_CALL: +0x0] 
    RcResetAlgModel_x53a8:
    /*000053a8*/ MOV         R1, SL 
    /*000053ac*/ STR         FP, [R4, #28] 
    /*000053b0*/ MOV         R0, FP 
    /*000053b4*/ STR         SL, [R4, #32] 
    /*000053b8*/ BL          0x00000000000053B8          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*000053bc*/ STR         R8, [R4, #48]               @ 0x30 
    /*000053c0*/ STR         R5, [R4, #40]               @ 0x28 
    /*000053c4*/ MOV         R3, #0 
    /*000053c8*/ STR         R5, [R4, #44]               @ 0x2c 
    /*000053cc*/ STR         R3, [R4, #52]               @ 0x34 
    /*000053d0*/ STR         R3, [R4, #56]               @ 0x38 
    /*000053d4*/ STR         R3, [R4, #60]               @ 0x3c 
    /*000053d8*/ STR         R0, [R4, #36]               @ 0x24 
    /*000053dc*/ LDR         R3, [R6, #44]               @ 0x2c 
    /*000053e0*/ LSRS        R2, R3, #16 
    /*000053e4*/ UXTHNE      R1, R3 
    /*000053e8*/ LDREQ       R0, [R6, #40]               @ 0x28 
    /*000053ec*/ SUBNE       R3, R1, #1 
    /*000053f0*/ LDRNE       R0, [R6, #40]               @ 0x28 
    /*000053f4*/ MOVEQ       R1, R3 
    /*000053f8*/ ADDEQ       R0, R3, R0 
    /*000053fc*/ SUBEQ       R0, R0, #1 
    /*00005400*/ MLANE       R0, R0, R2, R3 
    /*00005404*/ BL          0x0000000000005404          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00005408*/ STR         R0, [R9, #4] 
    /*0000540c*/ LSL         R0, R0, #1 
    /*00005410*/ STR         R0, [R9, #8] 
    /*00005414*/ LDR         R3, [R6, #52]               @ 0x34 
    /*00005418*/ CMP         R3, #4 
    /*0000541c*/ POPNE       {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00005420*/ MOV         R1, R6 
    /*00005424*/ MOV         R0, R4 
    /*00005428*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    RcResetAlgModel_x542c:
    /*0000542c*/ B           RcResetAlgModel_x542c       @ RcInitCvbrAlgModel [R_ARM_JUMP24: .text+0x4fa4] 
    RcResetAlgModel_x5430:
    /*00005430*/ MUL         R3, R3, SL 
    /*00005434*/ UXTH        R7, R7 
    /*00005438*/ STR         R7, [R4, #12] 
    /*0000543c*/ SUB         R2, R3, R7 
    /*00005440*/ STR         R2, [R4, #16] 
    /*00005444*/ STR         R3, [R4, #8] 
    /*00005448*/ B           RcResetAlgModel_x5384
    RcResetAlgModel_x544c:
    /*0000544c*/ MOVW        R3, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28b0] 
    /*00005450*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00005454*/ MOVT        R3, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28b0] 
    /*00005458*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*0000545c*/ MOV         R2, #172                    @ 0xac 
    /*00005460*/ LDR         R1, [PC, #64]               @ 0x00000000000054a8 
    /*00005464*/ BL          0x0000000000005464          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005468*/ B           RcResetAlgModel_x5354
    RcResetAlgModel_x546c:
    /*0000546c*/ LDR         R8, [R2, #160]              @ 0xa0 
    /*00005470*/ LDR         FP, [R6, #56]               @ 0x38 
    /*00005474*/ B           RcResetAlgModel_x5330
    RcResetAlgModel_x5478:
    /*00005478*/ MOV         R8, R5 
    /*0000547c*/ MOV         FP, R5 
    /*00005480*/ B           RcResetAlgModel_x5344
    RcResetAlgModel_x5484:
    /*00005484*/ MOVW        R3, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x289c] 
    /*00005488*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*0000548c*/ MOVT        R3, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x289c] 
    /*00005490*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00005494*/ MOV         R2, #169                    @ 0xa9 
    /*00005498*/ LDR         R1, [PC, #8]                @ 0x00000000000054a8 
    /*0000549c*/ BL          0x000000000000549C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000054a0*/ B           RcResetAlgModel_x534c
    /*000054a4*/ ANDEQ       R0, R0, IP, LSL #5 
    /*000054a8*/ ANDEQ       R0, R0, R0, LSL #5 
FUNC_END RcResetAlgModel


FUNC_BEGIN RcUpdateAlgModel
    /*000054ac*/ PUSH        {R4, R5, R6, LR} 
    /*000054b0*/ MOV         R5, R1 
    /*000054b4*/ ADDS        R1, R1, #0 
    /*000054b8*/ MOV         R4, R0 
    /*000054bc*/ ADD         R0, R0, #84                 @ 0x54 
    /*000054c0*/ MOVNE       R1, #1 
    /*000054c4*/ BL          0x00000000000054C4          @ RcWrFifoElem [R_ARM_CALL: .text+0x4ed4] 
    /*000054c8*/ MOV         R1, R5 
    /*000054cc*/ ADD         R0, R4, #64                 @ 0x40 
    /*000054d0*/ BL          0x00000000000054D0          @ RcWrFifoElem [R_ARM_CALL: .text+0x4ed4] 
    /*000054d4*/ LDR         R3, [R4, #40]               @ 0x28 
    /*000054d8*/ LDR         R1, [R4, #48]               @ 0x30 
    /*000054dc*/ LDR         R2, [R4, #36]               @ 0x24 
    /*000054e0*/ ADD         R5, R5, R3 
    /*000054e4*/ LDR         R3, [R4, #52]               @ 0x34 
    /*000054e8*/ CMP         R5, R1 
    /*000054ec*/ RSBLE       R2, R2, R5 
    /*000054f0*/ RSBGT       R2, R2, R1 
    /*000054f4*/ LDR         R0, [R4, #56]               @ 0x38 
    /*000054f8*/ LDR         R1, [R4, #60]               @ 0x3c 
    /*000054fc*/ CMP         R3, R2 
    /*00005500*/ ADD         R0, R0, #1 
    /*00005504*/ STR         R0, [R4, #56]               @ 0x38 
    /*00005508*/ MOVLT       R3, R2 
    /*0000550c*/ ADD         R2, R1, #1 
    /*00005510*/ STR         R3, [R4, #40]               @ 0x28 
    /*00005514*/ STR         R2, [R4, #60]               @ 0x3c 
    /*00005518*/ POP         {R4, R5, R6, PC} 
FUNC_END RcUpdateAlgModel


FUNC_BEGIN RcUpdateCvbrAlgModel
    /*0000551c*/ ADD         R0, R0, #1136               @ 0x470 
    /*00005520*/ ADD         R0, R0, #4 
    RcUpdateCvbrAlgModel_x5524:
    /*00005524*/ B           RcUpdateCvbrAlgModel_x5524  @ RcWrFifoElem [R_ARM_JUMP24: .text+0x4ed4] 
FUNC_END RcUpdateCvbrAlgModel


FUNC_BEGIN RcUpdateAlgModelBg
    /*00005528*/ PUSH        {R4, R5, R6, LR} 
    /*0000552c*/ MOV         R4, R0 
    /*00005530*/ ADD         R0, R0, #64                 @ 0x40 
    /*00005534*/ MOV         R5, R1 
    /*00005538*/ BL          0x0000000000005538          @ RcWrFifoElem [R_ARM_CALL: .text+0x4ed4] 
    /*0000553c*/ LDR         R1, [R4, #40]               @ 0x28 
    /*00005540*/ LDR         R3, [R4, #48]               @ 0x30 
    /*00005544*/ ADD         R1, R5, R1 
    /*00005548*/ LDR         R2, [R4, #56]               @ 0x38 
    /*0000554c*/ CMP         R3, R1 
    /*00005550*/ ADD         R2, R2, #1 
    /*00005554*/ STR         R2, [R4, #56]               @ 0x38 
    /*00005558*/ MOVGE       R3, R1 
    /*0000555c*/ STR         R3, [R4, #40]               @ 0x28 
    /*00005560*/ POP         {R4, R5, R6, PC} 
FUNC_END RcUpdateAlgModelBg


FUNC_BEGIN RcUpdateAlgModeVI
    /*00005564*/ PUSH        {R4, R5, R6, LR} 
    /*00005568*/ MOV         R5, R1 
    /*0000556c*/ ADDS        R1, R1, #0 
    /*00005570*/ MOV         R4, R0 
    /*00005574*/ ADD         R0, R0, #84                 @ 0x54 
    /*00005578*/ MOVNE       R1, #1 
    /*0000557c*/ BL          0x000000000000557C          @ RcWrFifoElem [R_ARM_CALL: .text+0x4ed4] 
    /*00005580*/ CMN         R4, #64                     @ 0x40 
    /*00005584*/ BEQ         RcUpdateAlgModeVI_x5634
    RcUpdateAlgModeVI_x5588:
    /*00005588*/ LDR         R3, [R4, #80]               @ 0x50 
    /*0000558c*/ LDR         R2, [R4, #76]               @ 0x4c 
    /*00005590*/ CMP         R3, #0 
    /*00005594*/ LDR         R0, [R4, #68]               @ 0x44 
    /*00005598*/ MOVLE       R1, #0 
    /*0000559c*/ BLE         RcUpdateAlgModeVI_x55bc
    /*000055a0*/ SUBS        R2, R2, #1 
    /*000055a4*/ LDR         R1, [R4, #64]               @ 0x40 
    /*000055a8*/ ADDMI       R2, R2, R0 
    /*000055ac*/ SUB         R3, R3, #1 
    /*000055b0*/ LDR         R1, [R1, R2, LSL #2] 
    /*000055b4*/ STR         R3, [R4, #80]               @ 0x50 
    /*000055b8*/ STR         R2, [R4, #76]               @ 0x4c 
    RcUpdateAlgModeVI_x55bc:
    /*000055bc*/ CMP         R3, R0 
    /*000055c0*/ BGE         RcUpdateAlgModeVI_x55ec
    /*000055c4*/ LDR         IP, [R4, #64]               @ 0x40 
    /*000055c8*/ ADD         R0, R5, R1 
    /*000055cc*/ ADD         R1, R2, #1 
    /*000055d0*/ ADD         R3, R3, #1 
    /*000055d4*/ STR         R0, [IP, R2, LSL #2] 
    /*000055d8*/ LDR         R2, [R4, #68]               @ 0x44 
    /*000055dc*/ STR         R3, [R4, #80]               @ 0x50 
    /*000055e0*/ CMP         R1, R2 
    /*000055e4*/ MOVGE       R1, #0 
    /*000055e8*/ STR         R1, [R4, #76]               @ 0x4c 
    RcUpdateAlgModeVI_x55ec:
    /*000055ec*/ LDR         R3, [R4, #40]               @ 0x28 
    /*000055f0*/ LDR         R1, [R4, #48]               @ 0x30 
    /*000055f4*/ LDR         R2, [R4, #36]               @ 0x24 
    /*000055f8*/ ADD         R5, R5, R3 
    /*000055fc*/ LDR         R3, [R4, #52]               @ 0x34 
    /*00005600*/ CMP         R5, R1 
    /*00005604*/ RSBLE       R2, R2, R5 
    /*00005608*/ RSBGT       R2, R2, R1 
    /*0000560c*/ LDR         R0, [R4, #56]               @ 0x38 
    /*00005610*/ CMP         R3, R2 
    /*00005614*/ LDR         R1, [R4, #60]               @ 0x3c 
    /*00005618*/ MOVLT       R3, R2 
    /*0000561c*/ ADD         R2, R0, #1 
    /*00005620*/ STR         R3, [R4, #40]               @ 0x28 
    /*00005624*/ ADD         R3, R1, #1 
    /*00005628*/ STR         R2, [R4, #56]               @ 0x38 
    /*0000562c*/ STR         R3, [R4, #60]               @ 0x3c 
    /*00005630*/ POP         {R4, R5, R6, PC} 
    RcUpdateAlgModeVI_x5634:
    /*00005634*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1344] 
    /*00005638*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*0000563c*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1344] 
    /*00005640*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00005644*/ MOVW        R2, #2525                   @ 0x9dd 
    /*00005648*/ LDR         R1, [PC, #4]                @ 0x0000000000005654 
    /*0000564c*/ BL          0x000000000000564C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005650*/ B           RcUpdateAlgModeVI_x5588
    /*00005654*/ MULEQ       R0, IP, R2 
FUNC_END RcUpdateAlgModeVI


FUNC_BEGIN RcInitRunInfo
    /*00005658*/ PUSH        {R4, LR} 
    /*0000565c*/ SUBS        R4, R0, #0 
    /*00005660*/ BEQ         RcInitRunInfo_x56b0
    RcInitRunInfo_x5664:
    /*00005664*/ MOV         R3, #0 
    /*00005668*/ MOV         R2, #1 
    /*0000566c*/ MOV         IP, #10 
    /*00005670*/ MOV         R0, #0 
    /*00005674*/ MOV         R1, #0 
    /*00005678*/ STR         R3, [R4] 
    /*0000567c*/ STR         R3, [R4, #4] 
    /*00005680*/ STR         R3, [R4, #20] 
    /*00005684*/ STR         R3, [R4, #24] 
    /*00005688*/ STR         R3, [R4, #40]               @ 0x28 
    /*0000568c*/ STR         R3, [R4, #60]               @ 0x3c 
    /*00005690*/ STR         R3, [R4, #64]               @ 0x40 
    /*00005694*/ STR         R3, [R4, #72]               @ 0x48 
    /*00005698*/ STR         R3, [R4, #76]               @ 0x4c 
    /*0000569c*/ STR         R2, [R4, #8] 
    /*000056a0*/ STR         R2, [R4, #44]               @ 0x2c 
    /*000056a4*/ STR         IP, [R4, #12] 
    /*000056a8*/ STRD        R0, [R4, #32] 
    /*000056ac*/ POP         {R4, PC} 
    RcInitRunInfo_x56b0:
    /*000056b0*/ MOVW        R3, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28f8] 
    /*000056b4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*000056b8*/ MOVT        R3, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28f8] 
    /*000056bc*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*000056c0*/ MOVW        R2, #2813                   @ 0xafd 
    /*000056c4*/ LDR         R1, [PC, #4]                @ 0x00000000000056d0 
    /*000056c8*/ BL          0x00000000000056C8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000056cc*/ B           RcInitRunInfo_x5664
    /*000056d0*/ ANDEQ       R0, R0, IP, LSR #5 
FUNC_END RcInitRunInfo


FUNC_BEGIN RcInitSuperFrmCfg
    /*000056d4*/ PUSH        {R4, LR} 
    /*000056d8*/ SUBS        R4, R0, #0 
    /*000056dc*/ BEQ         RcInitSuperFrmCfg_x5704
    RcInitSuperFrmCfg_x56e0:
    /*000056e0*/ MOV         R2, #0 
    /*000056e4*/ MOVW        R3, #41248                  @ 0xa120 
    /*000056e8*/ MOVT        R3, #7 
    /*000056ec*/ STM         R4, {R2, R3} 
    /*000056f0*/ STR         R3, [R4, #8] 
    /*000056f4*/ MOV         R2, #1 
    /*000056f8*/ STR         R3, [R4, #12] 
    /*000056fc*/ STR         R2, [R4, #16] 
    /*00005700*/ POP         {R4, PC} 
    RcInitSuperFrmCfg_x5704:
    /*00005704*/ MOVW        R3, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2910] 
    /*00005708*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*0000570c*/ MOVT        R3, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2910] 
    /*00005710*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00005714*/ MOVW        R2, #2841                   @ 0xb19 
    /*00005718*/ LDR         R1, [PC, #4]                @ 0x0000000000005724 
    /*0000571c*/ BL          0x000000000000571C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005720*/ B           RcInitSuperFrmCfg_x56e0
    /*00005724*/ @           <UNDEFINED> instruction: 0x000002bc 
FUNC_END RcInitSuperFrmCfg


FUNC_BEGIN RcInitSobelCfg
    /*00005728*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000572c*/ SUBS        R4, R0, #0 
    /*00005730*/ BEQ         RcInitSobelCfg_x5864
    RcInitSobelCfg_x5734:
    /*00005734*/ MOV         R3, R4 
    /*00005738*/ SUB         R1, R4, #4 
    /*0000573c*/ ADD         FP, R4, #12 
    /*00005740*/ ADD         LR, R4, #160                @ 0xa0 
    /*00005744*/ MOV         R2, #1 
    /*00005748*/ MOV         SL, #100                    @ 0x64 
    /*0000574c*/ MOV         R8, #12 
    /*00005750*/ MOV         R0, #0 
    /*00005754*/ MOV         R4, #5 
    /*00005758*/ MOV         IP, #8 
    /*0000575c*/ MOV         R7, #3 
    /*00005760*/ MOV         R6, #20 
    RcInitSobelCfg_x5764:
    /*00005764*/ STR         R2, [R1, #4]! 
    /*00005768*/ CMP         R1, FP 
    /*0000576c*/ STR         SL, [R1, #16] 
    /*00005770*/ MOV         R5, #25 
    /*00005774*/ STR         R2, [R1, #64]               @ 0x40 
    /*00005778*/ MOV         R9, #15 
    /*0000577c*/ STR         R2, [R1, #80]               @ 0x50 
    /*00005780*/ ADD         R3, R3, #16 
    /*00005784*/ STR         R8, [R1, #96]               @ 0x60 
    /*00005788*/ STR         R8, [R1, #112]              @ 0x70 
    /*0000578c*/ STR         R2, [R1, #128]              @ 0x80 
    /*00005790*/ STR         R0, [R1, #144]              @ 0x90 
    /*00005794*/ STRB        R4, [LR], #1 
    /*00005798*/ STRB        R4, [LR, #3] 
    /*0000579c*/ STRB        IP, [LR, #7] 
    /*000057a0*/ STR         R0, [R1, #188]              @ 0xbc 
    /*000057a4*/ STR         R0, [R1, #204]              @ 0xcc 
    /*000057a8*/ STRB        R9, [R3, #267]              @ 0x10b 
    /*000057ac*/ MOV         R9, #2 
    /*000057b0*/ STRB        R5, [R3, #270]              @ 0x10e 
    /*000057b4*/ STRB        R5, [R3, #271]              @ 0x10f 
    /*000057b8*/ MOV         R5, #10 
    /*000057bc*/ STRB        R0, [R3, #256]              @ 0x100 
    /*000057c0*/ STRB        R0, [R3, #257]              @ 0x101 
    /*000057c4*/ STRB        R0, [R3, #258]              @ 0x102 
    /*000057c8*/ STRB        R0, [R3, #259]              @ 0x103 
    /*000057cc*/ STRB        R7, [R3, #260]              @ 0x104 
    /*000057d0*/ STRB        R7, [R3, #261]              @ 0x105 
    /*000057d4*/ STRB        R4, [R3, #262]              @ 0x106 
    /*000057d8*/ STRB        R4, [R3, #263]              @ 0x107 
    /*000057dc*/ STRB        IP, [R3, #264]              @ 0x108 
    /*000057e0*/ STRB        IP, [R3, #265]              @ 0x109 
    /*000057e4*/ STRB        IP, [R3, #266]              @ 0x10a 
    /*000057e8*/ STRB        R6, [R3, #268]              @ 0x10c 
    /*000057ec*/ STRB        R6, [R3, #269]              @ 0x10d 
    /*000057f0*/ STRB        R2, [R3, #320]              @ 0x140 
    /*000057f4*/ STRB        R2, [R3, #321]              @ 0x141 
    /*000057f8*/ STRB        R2, [R3, #322]              @ 0x142 
    /*000057fc*/ STRB        R2, [R3, #323]              @ 0x143 
    /*00005800*/ STRB        R2, [R3, #324]              @ 0x144 
    /*00005804*/ STRB        R2, [R3, #325]              @ 0x145 
    /*00005808*/ STRB        R2, [R3, #326]              @ 0x146 
    /*0000580c*/ STRB        R2, [R3, #327]              @ 0x147 
    /*00005810*/ STRB        R2, [R3, #328]              @ 0x148 
    /*00005814*/ STRB        R2, [R3, #329]              @ 0x149 
    /*00005818*/ STRB        R2, [R3, #330]              @ 0x14a 
    /*0000581c*/ STRB        R2, [R3, #331]              @ 0x14b 
    /*00005820*/ STRB        R2, [R3, #332]              @ 0x14c 
    /*00005824*/ STRB        R2, [R3, #333]              @ 0x14d 
    /*00005828*/ STRB        R2, [R3, #334]              @ 0x14e 
    /*0000582c*/ STRB        R2, [R3, #335]              @ 0x14f 
    /*00005830*/ STR         R9, [R1, #432]              @ 0x1b0 
    /*00005834*/ MOV         R9, #4 
    /*00005838*/ STR         IP, [R1, #400]              @ 0x190 
    /*0000583c*/ STR         IP, [R1, #416]              @ 0x1a0 
    /*00005840*/ STR         R0, [R1, #448]              @ 0x1c0 
    /*00005844*/ STR         IP, [R1, #464]              @ 0x1d0 
    /*00005848*/ STRB        R0, [LR, #59]               @ 0x3b 
    /*0000584c*/ STR         R5, [R1, #224]              @ 0xe0 
    /*00005850*/ MOV         R5, #51                     @ 0x33 
    /*00005854*/ STR         R9, [R1, #240]              @ 0xf0 
    /*00005858*/ STR         R5, [R1, #256]              @ 0x100 
    /*0000585c*/ BNE         RcInitSobelCfg_x5764
    /*00005860*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RcInitSobelCfg_x5864:
    /*00005864*/ MOVW        R3, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x292c] 
    /*00005868*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*0000586c*/ MOVT        R3, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x292c] 
    /*00005870*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00005874*/ MOVW        R2, #2854                   @ 0xb26 
    /*00005878*/ LDR         R1, [PC, #4]                @ 0x0000000000005884 
    /*0000587c*/ BL          0x000000000000587C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00005880*/ B           RcInitSobelCfg_x5734
    /*00005884*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END RcInitSobelCfg


FUNC_BEGIN RcFrameRateControl
    /*00005888*/ CMP         R1, #0 
    /*0000588c*/ PUSH        {R4, R5, R6, LR} 
    /*00005890*/ LDR         LR, [R0, #8] 
    /*00005894*/ BEQ         RcFrameRateControl_x5924
    /*00005898*/ LDR         R4, [R0, #12] 
    /*0000589c*/ MOV         R5, #0 
    /*000058a0*/ LDR         R6, [R0, #24] 
    /*000058a4*/ MOV         R2, R5 
    /*000058a8*/ LDR         R3, [R0, #16] 
    RcFrameRateControl_x58ac:
    /*000058ac*/ ADD         R3, R3, R4 
    /*000058b0*/ ADD         R2, R2, #1 
    /*000058b4*/ CMP         R3, LR 
    /*000058b8*/ SUBCS       R3, R3, LR 
    /*000058bc*/ ADDCS       R5, R5, #1 
    /*000058c0*/ LDRCS       IP, [R0, #20] 
    /*000058c4*/ ADDCS       IP, IP, #1 
    /*000058c8*/ STRCS       IP, [R0, #20] 
    /*000058cc*/ CMP         R1, R2 
    /*000058d0*/ BNE         RcFrameRateControl_x58ac
    /*000058d4*/ CMP         R5, #0 
    /*000058d8*/ STR         R3, [R0, #16] 
    /*000058dc*/ ADDGT       R3, R3, LR 
    /*000058e0*/ ADD         R2, R1, R6 
    /*000058e4*/ STR         R2, [R0, #24] 
    RcFrameRateControl_x58e8:
    /*000058e8*/ ADD         R3, R4, R3 
    /*000058ec*/ ADD         R1, R1, #1 
    /*000058f0*/ CMP         R3, LR 
    /*000058f4*/ ADD         R1, R1, R2 
    /*000058f8*/ STR         R1, [R0, #24] 
    /*000058fc*/ LDRCS       R2, [R0, #20] 
    /*00005900*/ MOVCS       R1, #0 
    /*00005904*/ MVNCC       R1, #0 
    /*00005908*/ STR         R3, [R0, #16] 
    /*0000590c*/ SUBCS       R3, R3, LR 
    /*00005910*/ STRCS       R3, [R0, #16] 
    /*00005914*/ ADDCS       R3, R2, #1 
    /*00005918*/ STRCS       R3, [R0, #20] 
    /*0000591c*/ MOV         R0, R1 
    /*00005920*/ POP         {R4, R5, R6, PC} 
    RcFrameRateControl_x5924:
    /*00005924*/ LDR         R2, [R0, #24] 
    /*00005928*/ LDR         R4, [R0, #12] 
    /*0000592c*/ LDR         R3, [R0, #16] 
    /*00005930*/ B           RcFrameRateControl_x58e8
FUNC_END RcFrameRateControl


FUNC_BEGIN RC_InitStatBuf
    /*00005934*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00005938*/ MOVW        R7, #4095                   @ 0xfff 
    /*0000593c*/ LDR         R3, [R1] 
    /*00005940*/ MOV         R8, #61440                  @ 0xf000 
    /*00005944*/ MOVT        R8, #65535                  @ 0xffff 
    /*00005948*/ SUB         SP, SP, #12 
    /*0000594c*/ SUB         R3, R3, #2 
    /*00005950*/ MOV         R4, R0 
    /*00005954*/ CMP         R3, #1 
    /*00005958*/ MOV         R6, R1 
    /*0000595c*/ LDRLS       R5, [R1, #24] 
    /*00005960*/ LDRHI       R5, [R1, #32] 
    /*00005964*/ LSL         R2, R5, #2 
    /*00005968*/ STR         R2, [R0, #412]              @ 0x19c 
    /*0000596c*/ LDR         R5, [R1, #40]               @ 0x28 
    /*00005970*/ LDR         R3, [R1, #36]               @ 0x24 
    /*00005974*/ MUL         R3, R3, R5 
    /*00005978*/ LSL         R3, R3, #2 
    /*0000597c*/ STR         R3, [R0, #420]              @ 0x1a4 
    /*00005980*/ ADD         R5, R3, R7 
    /*00005984*/ ADD         R5, R5, R2 
    /*00005988*/ AND         R5, R5, R8 
    /*0000598c*/ MOV         R0, R5 
    /*00005990*/ BL          0x0000000000005990          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00005994*/ CMP         R0, #0 
    /*00005998*/ MOV         R3, R0 
    /*0000599c*/ STR         R0, [R4, #416]              @ 0x1a0 
    /*000059a0*/ MOVEQ       R3, #3008                   @ 0xbc0 
    /*000059a4*/ MOVWEQ      R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2944] 
    /*000059a8*/ STREQ       R3, [SP] 
    /*000059ac*/ MOVTEQ      R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2944] 
    /*000059b0*/ BEQ         RC_InitStatBuf_x5aac
    /*000059b4*/ MOV         R2, R5 
    /*000059b8*/ MOV         R1, #0 
    /*000059bc*/ BL          0x00000000000059BC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000059c0*/ LDR         R2, [R4, #420]              @ 0x1a4 
    /*000059c4*/ LDR         R1, [R4, #412]              @ 0x19c 
    /*000059c8*/ MOV         R9, #0 
    /*000059cc*/ LDR         R3, [R4, #416]              @ 0x1a0 
    /*000059d0*/ STR         R5, [R4, #448]              @ 0x1c0 
    /*000059d4*/ ADD         R3, R3, R2 
    /*000059d8*/ STR         R2, [R4, #444]              @ 0x1bc 
    /*000059dc*/ STR         R1, [R4, #440]              @ 0x1b8 
    /*000059e0*/ STR         R3, [R4, #408]              @ 0x198 
    /*000059e4*/ STR         R9, [R4, #432]              @ 0x1b0 
    /*000059e8*/ STR         R9, [R4, #436]              @ 0x1b4 
    /*000059ec*/ STR         R9, [R4, #1412]             @ 0x584 
    /*000059f0*/ STR         R9, [R4, #1480]             @ 0x5c8 
    /*000059f4*/ STR         R9, [R4, #1464]             @ 0x5b8 
    /*000059f8*/ STR         R9, [R4, #1436]             @ 0x59c 
    /*000059fc*/ LDR         R3, [R6, #52]               @ 0x34 
    /*00005a00*/ CMP         R3, #4 
    /*00005a04*/ MOVNE       R0, R9 
    /*00005a08*/ BEQ         RC_InitStatBuf_x5a14
    RC_InitStatBuf_x5a0c:
    /*00005a0c*/ ADD         SP, SP, #12 
    /*00005a10*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    RC_InitStatBuf_x5a14:
    /*00005a14*/ LDR         R3, [R6, #64]               @ 0x40 
    /*00005a18*/ LSL         R3, R3, #2 
    /*00005a1c*/ STR         R3, [R4, #1440]             @ 0x5a0 
    /*00005a20*/ ADD         R7, R3, R7 
    /*00005a24*/ LDR         R2, [R6, #40]               @ 0x28 
    /*00005a28*/ LDR         R3, [R6, #60]               @ 0x3c 
    /*00005a2c*/ MUL         R3, R3, R2 
    /*00005a30*/ LSL         R3, R3, #2 
    /*00005a34*/ STR         R3, [R4, #1468]             @ 0x5bc 
    /*00005a38*/ ADD         R7, R7, R3 
    /*00005a3c*/ AND         R8, R8, R7 
    /*00005a40*/ MOV         R0, R8 
    /*00005a44*/ BL          0x0000000000005A44          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00005a48*/ CMP         R0, R9 
    /*00005a4c*/ STR         R0, [R4, #1412]             @ 0x584 
    /*00005a50*/ BEQ         RC_InitStatBuf_x5a94
    /*00005a54*/ MOV         R2, R8 
    /*00005a58*/ MOV         R1, R9 
    /*00005a5c*/ BL          0x0000000000005A5C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00005a60*/ LDR         R2, [R4, #1412]             @ 0x584 
    /*00005a64*/ LDR         R3, [R4, #1440]             @ 0x5a0 
    /*00005a68*/ MOV         R0, R9 
    /*00005a6c*/ LDR         R1, [R4, #1468]             @ 0x5bc 
    /*00005a70*/ ADD         IP, R2, R3 
    /*00005a74*/ STR         R8, [R4, #1472]             @ 0x5c0 
    /*00005a78*/ STR         R9, [R4, #1476]             @ 0x5c4 
    /*00005a7c*/ STR         R2, [R4, #1436]             @ 0x59c 
    /*00005a80*/ STR         IP, [R4, #1464]             @ 0x5b8 
    /*00005a84*/ STR         R3, [R4, #1484]             @ 0x5cc 
    /*00005a88*/ STR         R1, [R4, #1488]             @ 0x5d0 
    /*00005a8c*/ ADD         SP, SP, #12 
    /*00005a90*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    RC_InitStatBuf_x5a94:
    /*00005a94*/ LDR         R0, [R4, #416]              @ 0x1a0 
    /*00005a98*/ BL          0x0000000000005A98          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00005a9c*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x297c] 
    /*00005aa0*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x297c] 
    /*00005aa4*/ MOVW        R3, #3038                   @ 0xbde 
    /*00005aa8*/ STR         R3, [SP] 
    RC_InitStatBuf_x5aac:
    /*00005aac*/ LDR         R3, [PC, #20]               @ 0x0000000000005ac8 
    /*00005ab0*/ MOV         R1, #19 
    /*00005ab4*/ MOV         R0, #3 
    /*00005ab8*/ BL          0x0000000000005AB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005abc*/ MOVW        R0, #32780                  @ 0x800c 
    /*00005ac0*/ MOVT        R0, #40979                  @ 0xa013 
    /*00005ac4*/ B           RC_InitStatBuf_x5a0c
    /*00005ac8*/ ANDEQ       R0, R0, R0, ROR #5 
FUNC_END RC_InitStatBuf


FUNC_BEGIN RC_CreateChn
    /*00005acc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00005ad0*/ SUBS        R4, R1, #0 
    /*00005ad4*/ SUB         SP, SP, #100                @ 0x64 
    /*00005ad8*/ MOV         R6, R0 
    /*00005adc*/ BEQ         RC_CreateChn_x5c54
    RC_CreateChn_x5ae0:
    /*00005ae0*/ LDM         R4, {R5, R8} 
    /*00005ae4*/ LDR         R9, [R4, #16] 
    /*00005ae8*/ CMP         R5, #0 
    /*00005aec*/ BEQ         RC_CreateChn_x5cb4
    RC_CreateChn_x5af0:
    /*00005af0*/ CMP         R8, #0 
    /*00005af4*/ BEQ         RC_CreateChn_x5cf4
    RC_CreateChn_x5af8:
    /*00005af8*/ CMP         R6, #15 
    /*00005afc*/ BHI         RC_CreateChn_x5c38
    RC_CreateChn_x5b00:
    /*00005b00*/ MOVW        SL, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00005b04*/ MOVT        SL, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00005b08*/ LDR         R1, [SL, R6, LSL #2] 
    /*00005b0c*/ CMP         R1, #0 
    /*00005b10*/ BNE         RC_CreateChn_x5cc4
    /*00005b14*/ LDR         R3, [R4, #12] 
    /*00005b18*/ MOV         R2, #80                     @ 0x50 
    /*00005b1c*/ ADD         R0, SP, #16 
    /*00005b20*/ LDR         FP, [R4, #8] 
    /*00005b24*/ STR         R3, [SP, #12] 
    /*00005b28*/ BL          0x0000000000005B28          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00005b2c*/ MOV         R2, R8 
    /*00005b30*/ ADD         R1, SP, #16 
    /*00005b34*/ MOV         R0, R5 
    /*00005b38*/ BL          0x0000000000005B38          @ RcTransAttr [R_ARM_CALL: .text+0x2464] 
    /*00005b3c*/ SUBS        R7, R0, #0 
    /*00005b40*/ BNE         RC_CreateChn_x5c8c
    /*00005b44*/ ADD         R0, SP, #16 
    /*00005b48*/ BL          0x0000000000005B48          @ RcCheckAttr [R_ARM_CALL: .text+0x3efc] 
    /*00005b4c*/ SUBS        R7, R0, #0 
    /*00005b50*/ BNE         RC_CreateChn_x5c64
    /*00005b54*/ MOV         R1, R7 
    /*00005b58*/ MOV         R0, #3904                   @ 0xf40 
    /*00005b5c*/ BL          0x0000000000005B5C          @ osal_kmalloc [R_ARM_CALL: +0x0] 
    /*00005b60*/ SUBS        R5, R0, #0 
    /*00005b64*/ BEQ         RC_CreateChn_x5edc
    /*00005b68*/ MOV         R1, R7 
    /*00005b6c*/ MOV         R2, #3904                   @ 0xf40 
    /*00005b70*/ BL          0x0000000000005B70          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00005b74*/ ADD         R1, SP, #16 
    /*00005b78*/ MOV         R0, R5 
    /*00005b7c*/ BL          0x0000000000005B7C          @ RC_InitStatBuf [R_ARM_CALL: .text+0x5934] 
    /*00005b80*/ SUBS        R7, R0, #0 
    /*00005b84*/ BNE         RC_CreateChn_x5c2c
    /*00005b88*/ ADD         R8, R5, #80                 @ 0x50 
    /*00005b8c*/ MOV         R2, #80                     @ 0x50 
    /*00005b90*/ ADD         R1, SP, #16 
    /*00005b94*/ MOV         R0, R5 
    /*00005b98*/ BL          0x0000000000005B98          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005b9c*/ MOV         R2, #83886080               @ 0x5000000 
    /*00005ba0*/ MOV         R1, R8 
    /*00005ba4*/ STR         R2, [R5, #2452]             @ 0x994 
    /*00005ba8*/ STR         R7, [R5, #2448]             @ 0x990 
    /*00005bac*/ ADD         R0, SP, #16 
    /*00005bb0*/ STR         R7, [R5, #2456]             @ 0x998 
    /*00005bb4*/ STR         R7, [R5, #2460]             @ 0x99c 
    /*00005bb8*/ BL          0x0000000000005BB8          @ RC_DRV_InitParam [R_ARM_CALL: .text+0x10d38] 
    /*00005bbc*/ MOV         R0, R5 
    /*00005bc0*/ BL          0x0000000000005BC0          @ RcGetRcMode [R_ARM_CALL: .text+0x22bc] 
    /*00005bc4*/ MOV         R2, R9 
    /*00005bc8*/ MOV         R1, R8 
    /*00005bcc*/ BL          0x0000000000005BCC          @ RC_RevTransParam [R_ARM_CALL: .text+0x33a8] 
    /*00005bd0*/ SUBS        R7, R0, #0 
    /*00005bd4*/ BEQ         RC_CreateChn_x5d04
    /*00005bd8*/ MOVW        R3, #3169                   @ 0xc61 
    /*00005bdc*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2aa8] 
    /*00005be0*/ STR         R3, [SP] 
    /*00005be4*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2aa8] 
    /*00005be8*/ STR         R6, [SP, #4] 
    /*00005bec*/ MOV         R1, #19 
    /*00005bf0*/ LDR         R3, [PC, #788]              @ 0x0000000000005f0c 
    /*00005bf4*/ MOV         R0, #3 
    /*00005bf8*/ BL          0x0000000000005BF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    RC_CreateChn_x5bfc:
    /*00005bfc*/ LDR         R0, [R5, #416]              @ 0x1a0 
    /*00005c00*/ CMP         R0, #0 
    /*00005c04*/ BEQ         RC_CreateChn_x5c14
    /*00005c08*/ BL          0x0000000000005C08          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00005c0c*/ MOV         R3, #0 
    /*00005c10*/ STR         R3, [R5, #416]              @ 0x1a0 
    RC_CreateChn_x5c14:
    /*00005c14*/ LDR         R0, [R5, #1412]             @ 0x584 
    /*00005c18*/ CMP         R0, #0 
    /*00005c1c*/ BEQ         RC_CreateChn_x5c2c
    /*00005c20*/ BL          0x0000000000005C20          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00005c24*/ MOV         R3, #0 
    /*00005c28*/ STR         R3, [R5, #1412]             @ 0x584 
    RC_CreateChn_x5c2c:
    /*00005c2c*/ MOV         R0, R5 
    /*00005c30*/ BL          0x0000000000005C30          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*00005c34*/ B           RC_CreateChn_x5c48
    RC_CreateChn_x5c38:
    /*00005c38*/ MOV         R0, R6 
    /*00005c3c*/ BL          0x00000000000020F4 
    /*00005c40*/ SUBS        R7, R0, #0 
    /*00005c44*/ BEQ         RC_CreateChn_x5b00
    RC_CreateChn_x5c48:
    /*00005c48*/ MOV         R0, R7 
    /*00005c4c*/ ADD         SP, SP, #100                @ 0x64 
    /*00005c50*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_CreateChn_x5c54:
    /*00005c54*/ BL          0x000000000000211C 
    /*00005c58*/ SUBS        R7, R0, #0 
    /*00005c5c*/ BNE         RC_CreateChn_x5c48
    /*00005c60*/ B           RC_CreateChn_x5ae0
    RC_CreateChn_x5c64:
    /*00005c64*/ MOVW        R3, #3131                   @ 0xc3b 
    /*00005c68*/ STR         R6, [SP, #4] 
    /*00005c6c*/ STR         R3, [SP] 
    /*00005c70*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a40] 
    /*00005c74*/ LDR         R3, [PC, #656]              @ 0x0000000000005f0c 
    /*00005c78*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a40] 
    /*00005c7c*/ MOV         R1, #19 
    /*00005c80*/ MOV         R0, #3 
    /*00005c84*/ BL          0x0000000000005C84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005c88*/ B           RC_CreateChn_x5c48
    RC_CreateChn_x5c8c:
    /*00005c8c*/ MOV         R3, #3120                   @ 0xc30 
    /*00005c90*/ STR         R6, [SP, #4] 
    /*00005c94*/ STR         R3, [SP] 
    /*00005c98*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x29f4] 
    /*00005c9c*/ LDR         R3, [PC, #616]              @ 0x0000000000005f0c 
    /*00005ca0*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x29f4] 
    /*00005ca4*/ MOV         R1, #19 
    /*00005ca8*/ MOV         R0, #3 
    /*00005cac*/ BL          0x0000000000005CAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005cb0*/ B           RC_CreateChn_x5c48
    RC_CreateChn_x5cb4:
    /*00005cb4*/ BL          0x000000000000211C 
    /*00005cb8*/ SUBS        R7, R0, #0 
    /*00005cbc*/ BNE         RC_CreateChn_x5c48
    /*00005cc0*/ B           RC_CreateChn_x5af0
    RC_CreateChn_x5cc4:
    /*00005cc4*/ MOVW        R3, #3106                   @ 0xc22 
    /*00005cc8*/ STR         R6, [SP, #4] 
    /*00005ccc*/ STR         R3, [SP] 
    /*00005cd0*/ MOVW        R2, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x29b8] 
    /*00005cd4*/ LDR         R3, [PC, #560]              @ 0x0000000000005f0c 
    /*00005cd8*/ MOVT        R2, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x29b8] 
    /*00005cdc*/ MOV         R1, #19 
    /*00005ce0*/ MOV         R0, #3 
    /*00005ce4*/ MOVW        R7, #32772                  @ 0x8004 
    /*00005ce8*/ BL          0x0000000000005CE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005cec*/ MOVT        R7, #40979                  @ 0xa013 
    /*00005cf0*/ B           RC_CreateChn_x5c48
    RC_CreateChn_x5cf4:
    /*00005cf4*/ BL          0x000000000000211C 
    /*00005cf8*/ SUBS        R7, R0, #0 
    /*00005cfc*/ BNE         RC_CreateChn_x5c48
    /*00005d00*/ B           RC_CreateChn_x5af8
    RC_CreateChn_x5d04:
    /*00005d04*/ MOV         R0, R5 
    /*00005d08*/ BL          0x0000000000005D08          @ RcInitAlgModel [R_ARM_CALL: .text+0x500c] 
    /*00005d0c*/ MOV         R1, R5 
    /*00005d10*/ MOV         R0, R6 
    /*00005d14*/ BL          0x0000000000005D14          @ RC_NewModeInit [R_ARM_CALL: .text+0xc220] 
    /*00005d18*/ ADD         R0, R5, #1488               @ 0x5d0 
    /*00005d1c*/ ADD         R0, R0, #8 
    /*00005d20*/ BL          0x0000000000005D20          @ RcInitRunInfo [R_ARM_CALL: .text+0x5658] 
    /*00005d24*/ LDR         R0, [R5, #24] 
    /*00005d28*/ MOVW        R2, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00005d2c*/ MOVT        R2, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00005d30*/ LDR         R1, [R5, #8] 
    /*00005d34*/ STR         R0, [R5, #1592]             @ 0x638 
    /*00005d38*/ LDR         IP, [R5, #32] 
    /*00005d3c*/ LDR         R0, [R5, #16] 
    /*00005d40*/ LDR         R2, [R2] 
    /*00005d44*/ STR         R1, [R5, #1584]             @ 0x630 
    /*00005d48*/ MOV         R1, #6 
    /*00005d4c*/ STR         R0, [R5, #1588]             @ 0x634 
    /*00005d50*/ MOV         R0, #16 
    /*00005d54*/ STR         R1, [R5, #3120]             @ 0xc30 
    /*00005d58*/ MOV         R1, #1 
    /*00005d5c*/ STR         R7, [R5, #3116]             @ 0xc2c 
    /*00005d60*/ STR         IP, [R5, #1596]             @ 0x63c 
    /*00005d64*/ STR         R0, [R5, #3124]             @ 0xc34 
    /*00005d68*/ STR         R1, [R5, #3096]             @ 0xc18 
    /*00005d6c*/ LDRB        R2, [R2, #40]               @ 0x28 
    /*00005d70*/ CMP         R2, #2 
    /*00005d74*/ BHI         RC_CreateChn_x5e84
    /*00005d78*/ MOV         R2, R7 
    RC_CreateChn_x5d7c:
    /*00005d7c*/ STR         R2, [R5, #3112]             @ 0xc28 
    /*00005d80*/ MOV         R8, #1 
    /*00005d84*/ MOV         R2, #0 
    /*00005d88*/ STR         R8, [R5, #3144]             @ 0xc48 
    /*00005d8c*/ STR         R2, [R5, #3100]             @ 0xc1c 
    /*00005d90*/ ADD         R0, R5, #2576               @ 0xa10 
    /*00005d94*/ LDR         R2, [R4, #20] 
    /*00005d98*/ ADD         R0, R0, #12 
    /*00005d9c*/ STR         R2, [R5, #3108]             @ 0xc24 
    /*00005da0*/ BL          0x0000000000005DA0          @ RcInitSuperFrmCfg [R_ARM_CALL: .text+0x56d4] 
    /*00005da4*/ ADD         R1, R5, #2592               @ 0xa20 
    /*00005da8*/ ADD         R1, R1, #12 
    /*00005dac*/ MOV         R0, R5 
    /*00005db0*/ BL          0x0000000000005DB0          @ RC_NewModeSetRcPriority [R_ARM_CALL: .text+0xf7b4] 
    /*00005db4*/ ADD         R0, R5, #2608               @ 0xa30 
    /*00005db8*/ BL          0x0000000000005DB8          @ RcInitSobelCfg [R_ARM_CALL: .text+0x5728] 
    /*00005dbc*/ LDR         R2, [SP, #64]               @ 0x40 
    /*00005dc0*/ LDR         R3, [SP, #12] 
    /*00005dc4*/ MOVW        R1, #265                    @ 0x109 
    /*00005dc8*/ CMP         R2, R1 
    /*00005dcc*/ STR         R8, [R5, #3128]             @ 0xc38 
    /*00005dd0*/ STR         FP, [R5, #2504]             @ 0x9c8 
    /*00005dd4*/ STR         R3, [R5, #2508]             @ 0x9cc 
    /*00005dd8*/ BEQ         RC_CreateChn_x5e98
    /*00005ddc*/ CMP         R2, #96                     @ 0x60 
    /*00005de0*/ BEQ         RC_CreateChn_x5eb8
    RC_CreateChn_x5de4:
    /*00005de4*/ LDR         R3, [SP, #12] 
    /*00005de8*/ ADD         IP, FP, #7 
    /*00005dec*/ ADD         R0, R5, #3136               @ 0xc40 
    /*00005df0*/ MOV         R2, #0 
    /*00005df4*/ ADD         R1, R3, #7 
    /*00005df8*/ LSR         IP, IP, #3 
    /*00005dfc*/ MVN         LR, #1 
    /*00005e00*/ STR         R2, [R5, #3184]             @ 0xc70 
    /*00005e04*/ LSR         R1, R1, #3 
    /*00005e08*/ STR         R2, [R5, #3196]             @ 0xc7c 
    /*00005e0c*/ STR         R2, [R5, #3200]             @ 0xc80 
    /*00005e10*/ ADD         R0, R0, #12 
    /*00005e14*/ MUL         R1, R1, IP 
    /*00005e18*/ STR         R2, [R5, #3212]             @ 0xc8c 
    /*00005e1c*/ MOV         IP, #1 
    /*00005e20*/ STR         R2, [R5, #3216]             @ 0xc90 
    /*00005e24*/ STR         R2, [R5, #3220]             @ 0xc94 
    /*00005e28*/ STR         R2, [R5, #3224]             @ 0xc98 
    /*00005e2c*/ STR         R2, [R5, #3228]             @ 0xc9c 
    /*00005e30*/ MOV         R2, #36                     @ 0x24 
    /*00005e34*/ STR         R1, [R5, #2516]             @ 0x9d4 
    /*00005e38*/ MVN         R1, #3 
    /*00005e3c*/ STR         LR, [R5, #3188]             @ 0xc74 
    /*00005e40*/ STR         R1, [R5, #3192]             @ 0xc78 
    /*00005e44*/ ADD         R1, R5, #3184               @ 0xc70 
    /*00005e48*/ STR         IP, [R5, #3204]             @ 0xc84 
    /*00005e4c*/ STR         IP, [R5, #3208]             @ 0xc88 
    /*00005e50*/ BL          0x0000000000005E50          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005e54*/ MOVW        R0, #0                      @ g_stRcSem [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005e58*/ MOVT        R0, #0                      @ g_stRcSem [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005e5c*/ BL          0x0000000000005E5C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00005e60*/ CMP         R0, #0 
    /*00005e64*/ MOVNE       R7, #65024                  @ 0xfe00 
    /*00005e68*/ MOVTNE      R7, #65535                  @ 0xffff 
    /*00005e6c*/ BNE         RC_CreateChn_x5bfc
    /*00005e70*/ MOVW        R0, #0                      @ g_stRcSem [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005e74*/ MOVT        R0, #0                      @ g_stRcSem [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005e78*/ STR         R5, [SL, R6, LSL #2] 
    /*00005e7c*/ BL          0x0000000000005E7C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005e80*/ B           RC_CreateChn_x5c48
    RC_CreateChn_x5e84:
    /*00005e84*/ SUB         R2, R2, #5 
    /*00005e88*/ CMP         R2, #1 
    /*00005e8c*/ MOVLS       R2, #0 
    /*00005e90*/ MOVHI       R2, #1 
    /*00005e94*/ B           RC_CreateChn_x5d7c
    RC_CreateChn_x5e98:
    /*00005e98*/ ADD         R2, R3, #63                 @ 0x3f 
    /*00005e9c*/ ADD         R1, FP, #63                 @ 0x3f 
    /*00005ea0*/ LSR         R2, R2, #6 
    /*00005ea4*/ LSR         R1, R1, #6 
    /*00005ea8*/ STR         R2, [R5, #2520]             @ 0x9d8 
    /*00005eac*/ MUL         R2, R2, R1 
    /*00005eb0*/ STR         R2, [R5, #2512]             @ 0x9d0 
    /*00005eb4*/ B           RC_CreateChn_x5de4
    RC_CreateChn_x5eb8:
    /*00005eb8*/ LDR         R3, [SP, #12] 
    /*00005ebc*/ ADD         R1, FP, #15 
    /*00005ec0*/ ADD         R2, R3, #15 
    /*00005ec4*/ LSR         R1, R1, #4 
    /*00005ec8*/ LSR         R2, R2, #4 
    /*00005ecc*/ STR         R2, [R5, #2520]             @ 0x9d8 
    /*00005ed0*/ MUL         R2, R2, R1 
    /*00005ed4*/ STR         R2, [R5, #2512]             @ 0x9d0 
    /*00005ed8*/ B           RC_CreateChn_x5de4
    RC_CreateChn_x5edc:
    /*00005edc*/ MOVW        R3, #3141                   @ 0xc45 
    /*00005ee0*/ STR         R6, [SP, #4] 
    /*00005ee4*/ STR         R3, [SP] 
    /*00005ee8*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a74] 
    /*00005eec*/ LDR         R3, [PC, #24]               @ 0x0000000000005f0c 
    /*00005ef0*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a74] 
    /*00005ef4*/ MOV         R1, #19 
    /*00005ef8*/ MOV         R0, #3 
    /*00005efc*/ MOVW        R7, #32780                  @ 0x800c 
    /*00005f00*/ BL          0x0000000000005F00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005f04*/ MOVT        R7, #40979                  @ 0xa013 
    /*00005f08*/ B           RC_CreateChn_x5c48
    /*00005f0c*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END RC_CreateChn


FUNC_BEGIN RC_DestroyChn
    /*00005f10*/ CMP         R0, #15 
    /*00005f14*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00005f18*/ MOV         R7, R0 
    /*00005f1c*/ BHI         RC_DestroyChn_x5fd4
    RC_DestroyChn_x5f20:
    /*00005f20*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00005f24*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00005f28*/ LDR         R3, [R6, R7, LSL #2] 
    /*00005f2c*/ CMP         R3, #0 
    /*00005f30*/ BEQ         RC_DestroyChn_x5ff0
    /*00005f34*/ MOVW        R0, #0                      @ g_stRcSem [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005f38*/ MOVT        R0, #0                      @ g_stRcSem [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005f3c*/ BL          0x0000000000005F3C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00005f40*/ SUBS        R5, R0, #0 
    /*00005f44*/ BNE         RC_DestroyChn_x5fe4
    /*00005f48*/ LDR         R4, [R6, R7, LSL #2] 
    /*00005f4c*/ LDR         R0, [R4, #416]              @ 0x1a0 
    /*00005f50*/ CMP         R0, #0 
    /*00005f54*/ BEQ         RC_DestroyChn_x5f60
    /*00005f58*/ BL          0x0000000000005F58          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00005f5c*/ STR         R5, [R4, #416]              @ 0x1a0 
    RC_DestroyChn_x5f60:
    /*00005f60*/ LDR         R0, [R4, #436]              @ 0x1b4 
    /*00005f64*/ CMP         R0, #0 
    /*00005f68*/ BEQ         RC_DestroyChn_x5f78
    /*00005f6c*/ BL          0x0000000000005F6C          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00005f70*/ MOV         R3, #0 
    /*00005f74*/ STR         R3, [R4, #436]              @ 0x1b4 
    RC_DestroyChn_x5f78:
    /*00005f78*/ LDR         R0, [R4, #1412]             @ 0x584 
    /*00005f7c*/ MOV         R5, #0 
    /*00005f80*/ STR         R5, [R4, #432]              @ 0x1b0 
    /*00005f84*/ CMP         R0, R5 
    /*00005f88*/ BEQ         RC_DestroyChn_x5f94
    /*00005f8c*/ BL          0x0000000000005F8C          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00005f90*/ STR         R5, [R4, #1412]             @ 0x584 
    RC_DestroyChn_x5f94:
    /*00005f94*/ LDR         R0, [R4, #1480]             @ 0x5c8 
    /*00005f98*/ CMP         R0, #0 
    /*00005f9c*/ BEQ         RC_DestroyChn_x5fac
    /*00005fa0*/ BL          0x0000000000005FA0          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00005fa4*/ MOV         R3, #0 
    /*00005fa8*/ STR         R3, [R4, #1480]             @ 0x5c8 
    RC_DestroyChn_x5fac:
    /*00005fac*/ MOV         R5, #0 
    /*00005fb0*/ MOV         R0, R4 
    /*00005fb4*/ STR         R5, [R4, #1476]             @ 0x5c4 
    /*00005fb8*/ BL          0x0000000000005FB8          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*00005fbc*/ MOVW        R0, #0                      @ g_stRcSem [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005fc0*/ MOVT        R0, #0                      @ g_stRcSem [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005fc4*/ STR         R5, [R6, R7, LSL #2] 
    /*00005fc8*/ BL          0x0000000000005FC8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005fcc*/ MOV         R0, R5 
    /*00005fd0*/ POP         {R4, R5, R6, R7, R8, PC} 
    RC_DestroyChn_x5fd4:
    /*00005fd4*/ BL          0x00000000000020F4 
    /*00005fd8*/ CMP         R0, #0 
    /*00005fdc*/ POPNE       {R4, R5, R6, R7, R8, PC} 
    /*00005fe0*/ B           RC_DestroyChn_x5f20
    RC_DestroyChn_x5fe4:
    /*00005fe4*/ MOV         R0, #65024                  @ 0xfe00 
    /*00005fe8*/ MOVT        R0, #65535                  @ 0xffff 
    /*00005fec*/ POP         {R4, R5, R6, R7, R8, PC} 
    RC_DestroyChn_x5ff0:
    /*00005ff0*/ MOVW        R0, #32773                  @ 0x8005 
    /*00005ff4*/ MOVT        R0, #40979                  @ 0xa013 
    /*00005ff8*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END RC_DestroyChn


FUNC_BEGIN RC_CheckAttr
    /*00005ffc*/ PUSH        {R4, R5, LR} 
    /*00006000*/ SUBS        R5, R1, #0 
    /*00006004*/ SUB         SP, SP, #92                 @ 0x5c 
    /*00006008*/ MOV         R4, R0 
    /*0000600c*/ BEQ         RC_CheckAttr_x60a0
    RC_CheckAttr_x6010:
    /*00006010*/ CMP         R4, #15 
    /*00006014*/ BHI         RC_CheckAttr_x6048
    RC_CheckAttr_x6018:
    /*00006018*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*0000601c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00006020*/ LDR         R4, [R3, R4, LSL #2] 
    /*00006024*/ CMP         R4, #0 
    /*00006028*/ BEQ         RC_CheckAttr_x60b8
    /*0000602c*/ MOV         R0, R5 
    /*00006030*/ ADD         R1, SP, #8 
    /*00006034*/ BL          0x0000000000006034          @ RcTransAttr [R_ARM_CALL: .text+0x2464] 
    /*00006038*/ CMP         R0, #0 
    /*0000603c*/ BEQ         RC_CheckAttr_x6068
    RC_CheckAttr_x6040:
    /*00006040*/ ADD         SP, SP, #92                 @ 0x5c 
    /*00006044*/ POP         {R4, R5, PC} 
    RC_CheckAttr_x6048:
    /*00006048*/ MOV         R0, R4 
    /*0000604c*/ STR         R2, [SP, #4] 
    /*00006050*/ BL          0x00000000000020F4 
    /*00006054*/ LDR         R2, [SP, #4] 
    /*00006058*/ CMP         R0, #0 
    /*0000605c*/ BEQ         RC_CheckAttr_x6018
    /*00006060*/ ADD         SP, SP, #92                 @ 0x5c 
    /*00006064*/ POP         {R4, R5, PC} 
    RC_CheckAttr_x6068:
    /*00006068*/ ADD         R0, SP, #8 
    /*0000606c*/ BL          0x000000000000606C          @ RcCheckAttr [R_ARM_CALL: .text+0x3efc] 
    /*00006070*/ CMP         R0, #0 
    /*00006074*/ BNE         RC_CheckAttr_x60c4
    /*00006078*/ ADD         R1, SP, #8 
    /*0000607c*/ MOV         R0, R4 
    /*00006080*/ BL          0x0000000000006080          @ RcCheckStaticAttr [R_ARM_CALL: .text+0x3904] 
    /*00006084*/ MOVW        R3, #32777                  @ 0x8009 
    /*00006088*/ MOVT        R3, #40979                  @ 0xa013 
    /*0000608c*/ CMP         R0, #0 
    /*00006090*/ MOVNE       R0, R3 
    /*00006094*/ MOVEQ       R0, #0 
    /*00006098*/ ADD         SP, SP, #92                 @ 0x5c 
    /*0000609c*/ POP         {R4, R5, PC} 
    RC_CheckAttr_x60a0:
    /*000060a0*/ STR         R2, [SP, #4] 
    /*000060a4*/ BL          0x000000000000211C 
    /*000060a8*/ LDR         R2, [SP, #4] 
    /*000060ac*/ CMP         R0, #0 
    /*000060b0*/ BNE         RC_CheckAttr_x6040
    /*000060b4*/ B           RC_CheckAttr_x6010
    RC_CheckAttr_x60b8:
    /*000060b8*/ MOVW        R0, #32773                  @ 0x8005 
    /*000060bc*/ MOVT        R0, #40979                  @ 0xa013 
    /*000060c0*/ B           RC_CheckAttr_x6040
    RC_CheckAttr_x60c4:
    /*000060c4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000060c8*/ MOVT        R0, #40979                  @ 0xa013 
    /*000060cc*/ B           RC_CheckAttr_x6040
FUNC_END RC_CheckAttr


FUNC_BEGIN RC_ResetChn
    /*000060d0*/ CMP         R0, #15 
    /*000060d4*/ PUSH        {R4, LR} 
    /*000060d8*/ MOV         R4, R0 
    /*000060dc*/ BHI         RC_ResetChn_x6124
    RC_ResetChn_x60e0:
    /*000060e0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*000060e4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*000060e8*/ LDR         R4, [R3, R4, LSL #2] 
    /*000060ec*/ CMP         R4, #0 
    /*000060f0*/ BEQ         RC_ResetChn_x6134
    /*000060f4*/ MOV         R0, R4 
    /*000060f8*/ BL          0x00000000000060F8          @ RcInitAlgModel [R_ARM_CALL: .text+0x500c] 
    /*000060fc*/ ADD         R0, R4, #1488               @ 0x5d0 
    /*00006100*/ ADD         R0, R0, #8 
    /*00006104*/ BL          0x0000000000006104          @ RcInitRunInfo [R_ARM_CALL: .text+0x5658] 
    /*00006108*/ MOV         R3, #0 
    /*0000610c*/ MOV         R0, R3 
    /*00006110*/ STR         R3, [R4, #3104]             @ 0xc20 
    /*00006114*/ STR         R3, [R4, #1576]             @ 0x628 
    /*00006118*/ MOV         R3, #1 
    /*0000611c*/ STR         R3, [R4, #3144]             @ 0xc48 
    /*00006120*/ POP         {R4, PC} 
    RC_ResetChn_x6124:
    /*00006124*/ BL          0x00000000000020F4 
    /*00006128*/ CMP         R0, #0 
    /*0000612c*/ POPNE       {R4, PC} 
    /*00006130*/ B           RC_ResetChn_x60e0
    RC_ResetChn_x6134:
    /*00006134*/ MOVW        R0, #32773                  @ 0x8005 
    /*00006138*/ MOVT        R0, #40979                  @ 0xa013 
    /*0000613c*/ POP         {R4, PC} 
FUNC_END RC_ResetChn


FUNC_BEGIN RcOutput
    /*00006140*/ PUSH        {R4, R5, R6, LR} 
    /*00006144*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00006148*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*0000614c*/ MOV         R6, R0 
    /*00006150*/ MOV         R5, R1 
    /*00006154*/ LDR         R3, [R4, R0, LSL #2] 
    /*00006158*/ CMP         R3, #0 
    /*0000615c*/ BEQ         RcOutput_x61a0
    RcOutput_x6160:
    /*00006160*/ CMP         R5, #0 
    /*00006164*/ BEQ         RcOutput_x6180
    RcOutput_x6168:
    /*00006168*/ ADD         R4, R4, R6, LSL #2 
    /*0000616c*/ MOV         R3, #0 
    /*00006170*/ LDR         R2, [R4, #64]               @ 0x40 
    /*00006174*/ STR         R2, [R5] 
    /*00006178*/ STR         R3, [R4, #64]               @ 0x40 
    /*0000617c*/ POP         {R4, R5, R6, PC} 
    RcOutput_x6180:
    /*00006180*/ MOVW        R3, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b04] 
    /*00006184*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00006188*/ MOVT        R3, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b04] 
    /*0000618c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00006190*/ MOVW        R2, #3433                   @ 0xd69 
    /*00006194*/ LDR         R1, [PC, #36]               @ 0x00000000000061c0 
    /*00006198*/ BL          0x0000000000006198          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000619c*/ B           RcOutput_x6168
    RcOutput_x61a0:
    /*000061a0*/ MOVW        R3, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2af0] 
    /*000061a4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*000061a8*/ MOVT        R3, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2af0] 
    /*000061ac*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*000061b0*/ MOVW        R2, #3432                   @ 0xd68 
    /*000061b4*/ LDR         R1, [PC, #4]                @ 0x00000000000061c0 
    /*000061b8*/ BL          0x00000000000061B8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000061bc*/ B           RcOutput_x6160
    /*000061c0*/ ANDEQ       R0, R0, R0, LSL #6 
FUNC_END RcOutput


FUNC_BEGIN RcComputeFrameLosted
    /*000061c4*/ PUSH        {R4, R5, R6, LR} 
    /*000061c8*/ SUBS        R5, R2, #0 
    /*000061cc*/ MOV         R6, R0 
    /*000061d0*/ MOV         R4, R1 
    /*000061d4*/ BEQ         RcComputeFrameLosted_x623c
    RcComputeFrameLosted_x61d8:
    /*000061d8*/ CMP         R6, #0 
    /*000061dc*/ BEQ         RcComputeFrameLosted_x621c
    RcComputeFrameLosted_x61e0:
    /*000061e0*/ LDR         R1, [R6, #1504]             @ 0x5e0 
    /*000061e4*/ CMP         R1, #1 
    /*000061e8*/ BEQ         RcComputeFrameLosted_x6210
    /*000061ec*/ SUB         R1, R4, R1 
    /*000061f0*/ LSR         R1, R1, #1 
    /*000061f4*/ SUB         R1, R1, #1 
    /*000061f8*/ BIC         R1, R1, R1, ASR #31 
    /*000061fc*/ STR         R1, [R5] 
    /*00006200*/ CMP         R1, #960                    @ 0x3c0 
    /*00006204*/ MOVGT       R3, #960                    @ 0x3c0 
    /*00006208*/ STRGT       R3, [R5] 
    /*0000620c*/ POP         {R4, R5, R6, PC} 
    RcComputeFrameLosted_x6210:
    /*00006210*/ MOV         R3, #0 
    /*00006214*/ STR         R3, [R5] 
    /*00006218*/ POP         {R4, R5, R6, PC} 
    RcComputeFrameLosted_x621c:
    /*0000621c*/ MOVW        R3, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2af0] 
    /*00006220*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00006224*/ MOVT        R3, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2af0] 
    /*00006228*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*0000622c*/ MOVW        R2, #3470                   @ 0xd8e 
    /*00006230*/ LDR         R1, [PC, #36]               @ 0x000000000000625c 
    /*00006234*/ BL          0x0000000000006234          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00006238*/ B           RcComputeFrameLosted_x61e0
    RcComputeFrameLosted_x623c:
    /*0000623c*/ MOVW        R3, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b20] 
    /*00006240*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00006244*/ MOVT        R3, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b20] 
    /*00006248*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*0000624c*/ MOVW        R2, #3469                   @ 0xd8d 
    /*00006250*/ LDR         R1, [PC, #4]                @ 0x000000000000625c 
    /*00006254*/ BL          0x0000000000006254          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00006258*/ B           RcComputeFrameLosted_x61d8
    /*0000625c*/ ANDEQ       R0, R0, IP, LSL #6 
FUNC_END RcComputeFrameLosted


FUNC_BEGIN RcLostFrmStrDecision
    /*00006260*/ PUSH        {R4, R5, R6, LR} 
    /*00006264*/ SUBS        R4, R0, #0 
    /*00006268*/ MOV         R5, R1 
    /*0000626c*/ BEQ         RcLostFrmStrDecision_x6308
    RcLostFrmStrDecision_x6270:
    /*00006270*/ CMP         R5, #0 
    /*00006274*/ BEQ         RcLostFrmStrDecision_x6328
    RcLostFrmStrDecision_x6278:
    /*00006278*/ LDR         R3, [R4, #1496]             @ 0x5d8 
    /*0000627c*/ CMP         R3, #3 
    /*00006280*/ POPEQ       {R4, R5, R6, PC} 
    /*00006284*/ LDR         R2, [R4, #2460]             @ 0x99c 
    /*00006288*/ LDR         R3, [R5] 
    /*0000628c*/ CMP         R2, #0 
    /*00006290*/ BEQ         RcLostFrmStrDecision_x62c0
    /*00006294*/ LDR         R1, [R4, #2464]             @ 0x9a0 
    /*00006298*/ CMP         R2, R1 
    /*0000629c*/ BHI         RcLostFrmStrDecision_x62e8
    /*000062a0*/ MOV         R2, #0 
    /*000062a4*/ STR         R2, [R4, #2464]             @ 0x9a0 
    /*000062a8*/ LDR         R2, [R5] 
    /*000062ac*/ CMP         R2, #0 
    /*000062b0*/ CMPEQ       R3, #3 
    /*000062b4*/ BEQ         RcLostFrmStrDecision_x62dc
    RcLostFrmStrDecision_x62b8:
    /*000062b8*/ STR         R3, [R5] 
    /*000062bc*/ POP         {R4, R5, R6, PC} 
    RcLostFrmStrDecision_x62c0:
    /*000062c0*/ LDR         R2, [R4, #2456]             @ 0x998 
    /*000062c4*/ CMP         R2, #0 
    /*000062c8*/ MOVEQ       R3, #2 
    /*000062cc*/ BEQ         RcLostFrmStrDecision_x62b8
    RcLostFrmStrDecision_x62d0:
    /*000062d0*/ CMP         R3, #0 
    /*000062d4*/ MOVNE       R3, #3 
    /*000062d8*/ BNE         RcLostFrmStrDecision_x62b8
    RcLostFrmStrDecision_x62dc:
    /*000062dc*/ MOV         R3, #0 
    /*000062e0*/ STR         R3, [R5] 
    /*000062e4*/ POP         {R4, R5, R6, PC} 
    RcLostFrmStrDecision_x62e8:
    /*000062e8*/ LDR         R2, [R4, #2456]             @ 0x998 
    /*000062ec*/ CMP         R2, #0 
    /*000062f0*/ BNE         RcLostFrmStrDecision_x62d0
    /*000062f4*/ ADD         R1, R1, #1 
    /*000062f8*/ MOV         R3, #2 
    /*000062fc*/ STR         R1, [R4, #2464]             @ 0x9a0 
    /*00006300*/ STR         R3, [R5] 
    /*00006304*/ POP         {R4, R5, R6, PC} 
    RcLostFrmStrDecision_x6308:
    /*00006308*/ MOVW        R3, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2af0] 
    /*0000630c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00006310*/ MOVT        R3, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2af0] 
    /*00006314*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00006318*/ MOVW        R2, #3509                   @ 0xdb5 
    /*0000631c*/ LDR         R1, [PC, #36]               @ 0x0000000000006348 
    /*00006320*/ BL          0x0000000000006320          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00006324*/ B           RcLostFrmStrDecision_x6270
    RcLostFrmStrDecision_x6328:
    /*00006328*/ MOVW        R3, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b3c] 
    /*0000632c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00006330*/ MOVT        R3, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b3c] 
    /*00006334*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00006338*/ MOVW        R2, #3510                   @ 0xdb6 
    /*0000633c*/ LDR         R1, [PC, #4]                @ 0x0000000000006348 
    /*00006340*/ BL          0x0000000000006340          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00006344*/ B           RcLostFrmStrDecision_x6278
    /*00006348*/ ANDEQ       R0, R0, R4, LSR #6 
FUNC_END RcLostFrmStrDecision


FUNC_BEGIN RC_CalHierarchicalQPLevel
    /*0000634c*/ PUSH        {R4, LR} 
    /*00006350*/ MOV         R4, R0 
    /*00006354*/ LDR         R3, [R0] 
    /*00006358*/ SUB         SP, SP, #8 
    /*0000635c*/ SUB         R2, R3, #2 
    /*00006360*/ CMP         R2, #1 
    /*00006364*/ BLS         RC_CalHierarchicalQPLevel_x63c4
    /*00006368*/ CMP         R3, #0 
    /*0000636c*/ LDREQ       R3, [R0, #1500]             @ 0x5dc 
    /*00006370*/ BNE         RC_CalHierarchicalQPLevel_x6390
    /*00006374*/ CMP         R3, #0 
    /*00006378*/ BEQ         RC_CalHierarchicalQPLevel_x63dc
    RC_CalHierarchicalQPLevel_x637c:
    /*0000637c*/ LDR         R3, [R4, #3184]             @ 0xc70 
    /*00006380*/ CMP         R3, #1 
    /*00006384*/ BEQ         RC_CalHierarchicalQPLevel_x640c
    RC_CalHierarchicalQPLevel_x6388:
    /*00006388*/ ADD         SP, SP, #8 
    /*0000638c*/ POP         {R4, PC} 
    RC_CalHierarchicalQPLevel_x6390:
    /*00006390*/ LDR         R2, [R0, #3184]             @ 0xc70 
    /*00006394*/ CMP         R2, #1 
    /*00006398*/ BNE         RC_CalHierarchicalQPLevel_x6388
    /*0000639c*/ STR         R3, [SP, #4] 
    /*000063a0*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b58] 
    /*000063a4*/ MOV         R3, #3584                   @ 0xe00 
    /*000063a8*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b58] 
    /*000063ac*/ STR         R3, [SP] 
    /*000063b0*/ MOV         R1, #19 
    /*000063b4*/ LDR         R3, [PC, #284]              @ 0x00000000000064d8 
    /*000063b8*/ MOV         R0, #3 
    /*000063bc*/ BL          0x00000000000063BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000063c0*/ B           RC_CalHierarchicalQPLevel_x6388
    RC_CalHierarchicalQPLevel_x63c4:
    /*000063c4*/ LDR         R1, [R0, #1596]             @ 0x63c 
    /*000063c8*/ LDR         R0, [R0, #1516]             @ 0x5ec 
    /*000063cc*/ BL          0x00000000000063CC          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*000063d0*/ MOV         R3, R1 
    /*000063d4*/ CMP         R3, #0 
    /*000063d8*/ BNE         RC_CalHierarchicalQPLevel_x637c
    RC_CalHierarchicalQPLevel_x63dc:
    /*000063dc*/ ADD         R1, R4, #3136               @ 0xc40 
    /*000063e0*/ STR         R3, [R4, #3220]             @ 0xc94 
    /*000063e4*/ STR         R3, [R4, #3224]             @ 0xc98 
    /*000063e8*/ ADD         R1, R1, #12 
    /*000063ec*/ STR         R3, [R4, #3228]             @ 0xc9c 
    /*000063f0*/ ADD         R0, R4, #3184               @ 0xc70 
    /*000063f4*/ STR         R3, [R4, #3232]             @ 0xca0 
    /*000063f8*/ MOV         R2, #36                     @ 0x24 
    /*000063fc*/ STR         R3, [R4, #3236]             @ 0xca4 
    /*00006400*/ ADD         SP, SP, #8 
    /*00006404*/ POP         {R4, LR} 
    RC_CalHierarchicalQPLevel_x6408:
    /*00006408*/ B           RC_CalHierarchicalQPLevel_x6408@ osal_memcpy [R_ARM_JUMP24: +0x0] 
    RC_CalHierarchicalQPLevel_x640c:
    /*0000640c*/ LDR         R2, [R4, #3236]             @ 0xca4 
    /*00006410*/ LDR         R1, [R4, #3216]             @ 0xc90 
    /*00006414*/ CMP         R2, R1 
    /*00006418*/ BLT         RC_CalHierarchicalQPLevel_x6468
    /*0000641c*/ LDR         R2, [R4, #3232]             @ 0xca0 
    /*00006420*/ LDR         R1, [R4, #3212]             @ 0xc8c 
    /*00006424*/ CMP         R2, R1 
    /*00006428*/ BLT         RC_CalHierarchicalQPLevel_x649c
    /*0000642c*/ LDR         R2, [R4, #3228]             @ 0xc9c 
    /*00006430*/ LDR         R1, [R4, #3208]             @ 0xc88 
    /*00006434*/ CMP         R2, R1 
    /*00006438*/ BLT         RC_CalHierarchicalQPLevel_x647c
    /*0000643c*/ LDR         R2, [R4, #3224]             @ 0xc98 
    /*00006440*/ LDR         R1, [R4, #3204]             @ 0xc84 
    /*00006444*/ CMP         R2, R1 
    /*00006448*/ BLT         RC_CalHierarchicalQPLevel_x64b8
    /*0000644c*/ MOV         R3, #0 
    /*00006450*/ STR         R3, [R4, #3220]             @ 0xc94 
    /*00006454*/ STR         R3, [R4, #3236]             @ 0xca4 
    /*00006458*/ STR         R3, [R4, #3232]             @ 0xca0 
    /*0000645c*/ STR         R3, [R4, #3228]             @ 0xc9c 
    /*00006460*/ STR         R3, [R4, #3224]             @ 0xc98 
    /*00006464*/ B           RC_CalHierarchicalQPLevel_x6388
    RC_CalHierarchicalQPLevel_x6468:
    /*00006468*/ ADD         R2, R2, #1 
    /*0000646c*/ MOV         R3, #4 
    /*00006470*/ STR         R2, [R4, #3236]             @ 0xca4 
    /*00006474*/ STR         R3, [R4, #3220]             @ 0xc94 
    /*00006478*/ B           RC_CalHierarchicalQPLevel_x6388
    RC_CalHierarchicalQPLevel_x647c:
    /*0000647c*/ MOV         R3, #0 
    /*00006480*/ ADD         R2, R2, #1 
    /*00006484*/ MOV         R1, #2 
    /*00006488*/ STR         R2, [R4, #3228]             @ 0xc9c 
    /*0000648c*/ STR         R1, [R4, #3220]             @ 0xc94 
    /*00006490*/ STR         R3, [R4, #3236]             @ 0xca4 
    /*00006494*/ STR         R3, [R4, #3232]             @ 0xca0 
    /*00006498*/ B           RC_CalHierarchicalQPLevel_x6388
    RC_CalHierarchicalQPLevel_x649c:
    /*0000649c*/ ADD         R2, R2, #1 
    /*000064a0*/ MOV         R1, #3 
    /*000064a4*/ MOV         R3, #0 
    /*000064a8*/ STR         R2, [R4, #3232]             @ 0xca0 
    /*000064ac*/ STR         R1, [R4, #3220]             @ 0xc94 
    /*000064b0*/ STR         R3, [R4, #3236]             @ 0xca4 
    /*000064b4*/ B           RC_CalHierarchicalQPLevel_x6388
    RC_CalHierarchicalQPLevel_x64b8:
    /*000064b8*/ ADD         R2, R2, #1 
    /*000064bc*/ STR         R3, [R4, #3220]             @ 0xc94 
    /*000064c0*/ STR         R2, [R4, #3224]             @ 0xc98 
    /*000064c4*/ MOV         R3, #0 
    /*000064c8*/ STR         R3, [R4, #3236]             @ 0xca4 
    /*000064cc*/ STR         R3, [R4, #3232]             @ 0xca0 
    /*000064d0*/ STR         R3, [R4, #3228]             @ 0xc9c 
    /*000064d4*/ B           RC_CalHierarchicalQPLevel_x6388
    /*000064d8*/ ANDEQ       R0, R0, IP, LSR R3 
FUNC_END RC_CalHierarchicalQPLevel


FUNC_BEGIN RC_StartOneFrame
    /*000064dc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000064e0*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*000064e4*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*000064e8*/ SUB         SP, SP, #28 
    /*000064ec*/ MOV         R6, R2 
    /*000064f0*/ MOV         R2, #0 
    /*000064f4*/ LDR         R3, [R4, R0, LSL #2] 
    /*000064f8*/ MOV         R8, R0 
    /*000064fc*/ MOV         R5, R1 
    /*00006500*/ STR         R2, [SP, #12] 
    /*00006504*/ CMP         R3, R2 
    /*00006508*/ BEQ         RC_StartOneFrame_x6a64
    RC_StartOneFrame_x650c:
    /*0000650c*/ CMP         R5, #0 
    /*00006510*/ BEQ         RC_StartOneFrame_x6a84
    RC_StartOneFrame_x6514:
    /*00006514*/ CMP         R6, #0 
    /*00006518*/ BEQ         RC_StartOneFrame_x6a44
    RC_StartOneFrame_x651c:
    /*0000651c*/ LDR         R7, [PC, #1664]             @ 0x0000000000006ba4 
    /*00006520*/ ADD         R1, SP, #20 
    /*00006524*/ ADD         R7, R7, R8, LSL #2 
    /*00006528*/ MOV         R0, R7 
    /*0000652c*/ BL          0x000000000000652C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006530*/ LDR         R8, [R4, R8, LSL #2] 
    /*00006534*/ LDR         R3, [R8, #1564]             @ 0x61c 
    /*00006538*/ CMP         R3, #1 
    /*0000653c*/ BEQ         RC_StartOneFrame_x66d8
    RC_StartOneFrame_x6540:
    /*00006540*/ ADD         R3, R8, #2480               @ 0x9b0 
    /*00006544*/ MOV         R0, #2 
    /*00006548*/ STR         R3, [SP] 
    /*0000654c*/ MOV         R4, R3 
    /*00006550*/ BL          0x0000000000006550          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00006554*/ LDR         R3, [R0] 
    /*00006558*/ BLX         R3 
    /*0000655c*/ STRD        R0, [R4, #-8] 
    /*00006560*/ LDR         R2, [R5] 
    /*00006564*/ LDR         FP, [R8, #3100]             @ 0xc1c 
    /*00006568*/ LDR         R1, [R2] 
    /*0000656c*/ CMP         FP, #0 
    /*00006570*/ LDR         R3, [R2, #4] 
    /*00006574*/ ADD         R1, R1, #15 
    /*00006578*/ ADD         R3, R3, #15 
    /*0000657c*/ BIC         R1, R1, #15 
    /*00006580*/ BIC         R3, R3, #15 
    /*00006584*/ MUL         R3, R3, R1 
    /*00006588*/ LSR         R3, R3, #8 
    /*0000658c*/ STR         R3, [R8, #1616]             @ 0x650 
    /*00006590*/ LDR         R3, [R2] 
    /*00006594*/ ADD         R3, R3, #15 
    /*00006598*/ BIC         R3, R3, #15 
    /*0000659c*/ STR         R3, [R8, #1628]             @ 0x65c 
    /*000065a0*/ LDR         R3, [R2, #4] 
    /*000065a4*/ ADD         R3, R3, #15 
    /*000065a8*/ BIC         R3, R3, #15 
    /*000065ac*/ STR         R3, [R8, #1632]             @ 0x660 
    /*000065b0*/ LDR         R4, [R2, #232]              @ 0xe8 
    /*000065b4*/ BEQ         RC_StartOneFrame_x6710
    /*000065b8*/ MOV         R3, #0 
    /*000065bc*/ ADD         R9, R8, #304                @ 0x130 
    /*000065c0*/ MOV         R1, R3 
    /*000065c4*/ STR         R4, [R8, #1504]             @ 0x5e0 
    /*000065c8*/ STR         R3, [SP, #16] 
    RC_StartOneFrame_x65cc:
    /*000065cc*/ MOV         R0, R9 
    /*000065d0*/ BL          0x00000000000065D0          @ RcFrameRateControl [R_ARM_CALL: .text+0x5888] 
    /*000065d4*/ CMN         R0, #1 
    /*000065d8*/ BEQ         RC_StartOneFrame_x67d0
    RC_StartOneFrame_x65dc:
    /*000065dc*/ LDR         R4, [R8, #3104]             @ 0xc20 
    /*000065e0*/ CMP         R4, #1 
    /*000065e4*/ BEQ         RC_StartOneFrame_x6838
    /*000065e8*/ LDR         R3, [R8] 
    RC_StartOneFrame_x65ec:
    /*000065ec*/ MOV         R4, #0 
    RC_StartOneFrame_x65f0:
    /*000065f0*/ LDR         R2, [R5, #4] 
    /*000065f4*/ CMP         R2, #4 
    /*000065f8*/ BEQ         RC_StartOneFrame_x6608
    /*000065fc*/ LDR         R2, [R8, #3108]             @ 0xc24 
    /*00006600*/ CMP         R2, #1 
    /*00006604*/ BEQ         RC_StartOneFrame_x69f0
    RC_StartOneFrame_x6608:
    /*00006608*/ LDR         R2, [R5, #44]               @ 0x2c 
    /*0000660c*/ CMP         R2, #2 
    /*00006610*/ BEQ         RC_StartOneFrame_x6984
    /*00006614*/ LDR         R5, [R8, #1500]             @ 0x5dc 
    /*00006618*/ ADDS        SL, R5, #0 
    /*0000661c*/ MOVNE       SL, #1 
    RC_StartOneFrame_x6620:
    /*00006620*/ CMP         R3, #4 
    /*00006624*/ BEQ         RC_StartOneFrame_x693c
    RC_StartOneFrame_x6628:
    /*00006628*/ MOV         R0, R8 
    /*0000662c*/ BL          0x000000000000662C          @ RC_CalHierarchicalQPLevel [R_ARM_CALL: .text+0x634c] 
    /*00006630*/ LDR         R4, [R8] 
    /*00006634*/ SUB         R3, R4, #2 
    /*00006638*/ CMP         R3, #1 
    /*0000663c*/ BLS         RC_StartOneFrame_x699c
    /*00006640*/ CMP         R4, #1 
    /*00006644*/ CMPEQ       SL, #1 
    /*00006648*/ MVNNE       FP, #0 
    /*0000664c*/ BEQ         RC_StartOneFrame_x6868
    RC_StartOneFrame_x6650:
    /*00006650*/ ADD         R0, R8, #368                @ 0x170 
    /*00006654*/ ADD         R4, R8, #1536               @ 0x600 
    /*00006658*/ BL          0x0000000000001FA0 
    /*0000665c*/ LDR         R2, [R8, #36]               @ 0x24 
    /*00006660*/ BL          0x0000000000006660          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*00006664*/ STRD        R0, [R4, #-8] 
    /*00006668*/ ADD         R0, R8, #388                @ 0x184 
    /*0000666c*/ BL          0x0000000000001FA0 
    /*00006670*/ LDR         R3, [R8, #2448]             @ 0x990 
    /*00006674*/ STR         SL, [SP, #12] 
    /*00006678*/ CMP         R3, #1 
    /*0000667c*/ STR         R0, [R8, #1536]             @ 0x600 
    /*00006680*/ BEQ         RC_StartOneFrame_x68a0
    RC_StartOneFrame_x6684:
    /*00006684*/ MOV         IP, SL 
    RC_StartOneFrame_x6688:
    /*00006688*/ LDR         R3, [R8, #3144]             @ 0xc48 
    /*0000668c*/ CMP         R3, #1 
    /*00006690*/ BEQ         RC_StartOneFrame_x66a0
    /*00006694*/ LDR         R3, [R8, #3116]             @ 0xc2c 
    /*00006698*/ CMP         R3, #1 
    /*0000669c*/ BEQ         RC_StartOneFrame_x6a0c
    RC_StartOneFrame_x66a0:
    /*000066a0*/ LDR         LR, [R8, #1516]             @ 0x5ec 
    /*000066a4*/ ADD         R1, SP, #20 
    /*000066a8*/ LDR         R2, [R8, #24] 
    /*000066ac*/ MOV         R0, R7 
    /*000066b0*/ LDR         R3, [R8, #32] 
    /*000066b4*/ STR         SL, [R8, #1600]             @ 0x640 
    /*000066b8*/ STR         LR, [R8, #1604]             @ 0x644 
    /*000066bc*/ STR         R2, [R8, #1608]             @ 0x648 
    /*000066c0*/ STR         R3, [R8, #1612]             @ 0x64c 
    /*000066c4*/ STM         R6, {SL, IP} 
    /*000066c8*/ STR         FP, [R6, #8] 
    /*000066cc*/ BL          0x00000000000066CC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000066d0*/ ADD         SP, SP, #28 
    /*000066d4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_StartOneFrame_x66d8:
    /*000066d8*/ LDR         R3, [R8, #3144]             @ 0xc48 
    /*000066dc*/ CMP         R3, #1 
    /*000066e0*/ BEQ         RC_StartOneFrame_x6540
    /*000066e4*/ LDR         R3, [R8, #3132]             @ 0xc3c 
    /*000066e8*/ ADD         R1, SP, #20 
    /*000066ec*/ MOV         R0, R7 
    /*000066f0*/ STR         R3, [R6] 
    /*000066f4*/ LDR         R3, [R8, #3140]             @ 0xc44 
    /*000066f8*/ STR         R3, [R6, #8] 
    /*000066fc*/ LDR         R3, [R8, #3136]             @ 0xc40 
    /*00006700*/ STR         R3, [R6, #4] 
    /*00006704*/ BL          0x0000000000006704          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006708*/ ADD         SP, SP, #28 
    /*0000670c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_StartOneFrame_x6710:
    /*00006710*/ MOV         R1, R4 
    /*00006714*/ ADD         R2, SP, #16 
    /*00006718*/ MOV         R0, R8 
    /*0000671c*/ ADD         R9, R8, #304                @ 0x130 
    /*00006720*/ BL          0x0000000000006720          @ RcComputeFrameLosted [R_ARM_CALL: .text+0x61c4] 
    /*00006724*/ LDR         R1, [SP, #16] 
    /*00006728*/ LDR         R3, [R8, #1624]             @ 0x658 
    /*0000672c*/ STR         R4, [R8, #1504]             @ 0x5e0 
    /*00006730*/ CMP         R1, R3 
    /*00006734*/ MOVLT       R4, R1 
    /*00006738*/ MOVGE       R4, R3 
    /*0000673c*/ CMP         R4, #0 
    /*00006740*/ BLE         RC_StartOneFrame_x678c
    /*00006744*/ ADD         SL, R9, #1136               @ 0x470 
    /*00006748*/ ADD         SL, SL, #4 
    /*0000674c*/ B           RC_StartOneFrame_x6758
    RC_StartOneFrame_x6750:
    /*00006750*/ CMP         R4, FP 
    /*00006754*/ BEQ         RC_StartOneFrame_x6788
    RC_StartOneFrame_x6758:
    /*00006758*/ MOV         R1, #0 
    /*0000675c*/ MOV         R0, R9 
    /*00006760*/ BL          0x0000000000006760          @ RcUpdateAlgModel [R_ARM_CALL: .text+0x54ac] 
    /*00006764*/ LDR         R2, [R8, #52]               @ 0x34 
    /*00006768*/ ADD         FP, FP, #1 
    /*0000676c*/ CMP         R2, #4 
    /*00006770*/ BNE         RC_StartOneFrame_x6750
    /*00006774*/ MOV         R1, #0 
    /*00006778*/ MOV         R0, SL 
    /*0000677c*/ BL          0x000000000000677C          @ RcWrFifoElem [R_ARM_CALL: .text+0x4ed4] 
    /*00006780*/ CMP         R4, FP 
    /*00006784*/ BNE         RC_StartOneFrame_x6758
    RC_StartOneFrame_x6788:
    /*00006788*/ LDR         R1, [SP, #16] 
    RC_StartOneFrame_x678c:
    /*0000678c*/ SUB         R3, R1, R4 
    /*00006790*/ CMP         R3, #0 
    /*00006794*/ BLE         RC_StartOneFrame_x65cc
    /*00006798*/ ADD         SL, R8, #388                @ 0x184 
    /*0000679c*/ MOV         FP, #0 
    RC_StartOneFrame_x67a0:
    /*000067a0*/ MOV         R1, #0 
    /*000067a4*/ MOV         R0, SL 
    /*000067a8*/ BL          0x00000000000067A8          @ RcWrFifoElem [R_ARM_CALL: .text+0x4ed4] 
    /*000067ac*/ LDR         R1, [SP, #16] 
    /*000067b0*/ ADD         FP, FP, #1 
    /*000067b4*/ SUB         R2, R1, R4 
    /*000067b8*/ CMP         R2, FP 
    /*000067bc*/ BGT         RC_StartOneFrame_x67a0
    /*000067c0*/ MOV         R0, R9 
    /*000067c4*/ BL          0x00000000000067C4          @ RcFrameRateControl [R_ARM_CALL: .text+0x5888] 
    /*000067c8*/ CMN         R0, #1 
    /*000067cc*/ BNE         RC_StartOneFrame_x65dc
    RC_StartOneFrame_x67d0:
    /*000067d0*/ MOV         R1, #0 
    /*000067d4*/ MOV         R0, R9 
    /*000067d8*/ BL          0x00000000000067D8          @ RcUpdateAlgModel [R_ARM_CALL: .text+0x54ac] 
    /*000067dc*/ LDR         R3, [R8, #52]               @ 0x34 
    /*000067e0*/ CMP         R3, #4 
    /*000067e4*/ BEQ         RC_StartOneFrame_x6b68
    RC_StartOneFrame_x67e8:
    /*000067e8*/ MOV         R0, #2 
    /*000067ec*/ BL          0x00000000000067EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000067f0*/ LDR         R3, [R0] 
    /*000067f4*/ BLX         R3 
    /*000067f8*/ LDR         IP, [SP] 
    /*000067fc*/ LDRD        R2, [IP] 
    /*00006800*/ LDRD        R4, [IP, #-8] 
    /*00006804*/ SUBS        R2, R2, R4 
    /*00006808*/ SBC         R3, R3, R5 
    /*0000680c*/ ADDS        R2, R2, R0 
    /*00006810*/ ADC         R3, R3, R1 
    /*00006814*/ ADD         R1, SP, #20 
    /*00006818*/ STRD        R2, [IP] 
    RC_StartOneFrame_x681c:
    /*0000681c*/ MOV         R0, R7 
    /*00006820*/ BL          0x0000000000006820          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006824*/ MOV         R3, #2 
    /*00006828*/ STR         R3, [R6, #4] 
    /*0000682c*/ STR         R3, [R6] 
    /*00006830*/ ADD         SP, SP, #28 
    /*00006834*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_StartOneFrame_x6838:
    /*00006838*/ LDR         R3, [R8, #1496]             @ 0x5d8 
    /*0000683c*/ CMP         R3, #3 
    /*00006840*/ LDR         R3, [R8] 
    /*00006844*/ BEQ         RC_StartOneFrame_x65ec
    /*00006848*/ CMP         R3, #4 
    /*0000684c*/ STR         R4, [R8, #3144]             @ 0xc48 
    /*00006850*/ BEQ         RC_StartOneFrame_x6af4
    /*00006854*/ SUB         R2, R3, #2 
    /*00006858*/ MOV         R4, #0 
    /*0000685c*/ CMP         R2, #1 
    /*00006860*/ STRHI       R4, [R8, #1500]             @ 0x5dc 
    /*00006864*/ B           RC_StartOneFrame_x65f0
    RC_StartOneFrame_x6868:
    /*00006868*/ LDR         R1, [R8, #1588]             @ 0x634 
    /*0000686c*/ CMP         R1, #0 
    /*00006870*/ BEQ         RC_StartOneFrame_x6ab4
    /*00006874*/ LDR         R0, [R8, #1500]             @ 0x5dc 
    /*00006878*/ BL          0x0000000000006878          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*0000687c*/ CMP         R1, #0 
    /*00006880*/ MVNEQ       FP, #0 
    /*00006884*/ MOVEQ       SL, #8 
    /*00006888*/ BEQ         RC_StartOneFrame_x6650
    /*0000688c*/ CMP         R1, #2 
    /*00006890*/ MVN         FP, #0 
    /*00006894*/ MOVLT       SL, #1 
    /*00006898*/ MOVGE       SL, #7 
    /*0000689c*/ B           RC_StartOneFrame_x6650
    RC_StartOneFrame_x68a0:
    /*000068a0*/ LDR         R3, [R8, #1496]             @ 0x5d8 
    /*000068a4*/ CMP         R3, #0 
    /*000068a8*/ CMPNE       SL, #4 
    /*000068ac*/ BEQ         RC_StartOneFrame_x6684
    /*000068b0*/ LDR         R3, [R8, #52]               @ 0x34 
    /*000068b4*/ CMP         R3, #6 
    /*000068b8*/ BEQ         RC_StartOneFrame_x6684
    /*000068bc*/ LDRD        R0, [R4, #-8] 
    /*000068c0*/ MOV         R3, #0 
    /*000068c4*/ LDR         R2, [R8, #2452]             @ 0x994 
    /*000068c8*/ CMP         R1, R3 
    /*000068cc*/ CMPEQ       R0, R2 
    /*000068d0*/ BCC         RC_StartOneFrame_x6684
    /*000068d4*/ ADD         R1, SP, #12 
    /*000068d8*/ MOV         R0, R8 
    /*000068dc*/ BL          0x00000000000068DC          @ RcLostFrmStrDecision [R_ARM_CALL: .text+0x6260] 
    /*000068e0*/ MOV         R0, #2 
    /*000068e4*/ BL          0x00000000000068E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000068e8*/ LDR         R3, [R0] 
    /*000068ec*/ BLX         R3 
    /*000068f0*/ LDR         LR, [SP] 
    /*000068f4*/ LDR         IP, [SP, #12] 
    /*000068f8*/ LDRD        R2, [LR, #-8] 
    /*000068fc*/ LDRD        R4, [LR] 
    /*00006900*/ SUBS        R4, R4, R2 
    /*00006904*/ SBC         R5, R5, R3 
    /*00006908*/ ADDS        R2, R4, R0 
    /*0000690c*/ ADC         R3, R5, R1 
    /*00006910*/ CMP         IP, #2 
    /*00006914*/ STRD        R2, [LR] 
    /*00006918*/ BNE         RC_StartOneFrame_x6688
    /*0000691c*/ MOV         R1, #0 
    /*00006920*/ MOV         R0, R9 
    /*00006924*/ BL          0x0000000000006924          @ RcUpdateAlgModel [R_ARM_CALL: .text+0x54ac] 
    /*00006928*/ LDR         R3, [R8, #52]               @ 0x34 
    /*0000692c*/ CMP         R3, #4 
    /*00006930*/ BEQ         RC_StartOneFrame_x6b90
    RC_StartOneFrame_x6934:
    /*00006934*/ ADD         R1, SP, #20 
    /*00006938*/ B           RC_StartOneFrame_x681c
    RC_StartOneFrame_x693c:
    /*0000693c*/ LDR         R3, [R8, #3096]             @ 0xc18 
    /*00006940*/ CMP         R3, #0 
    /*00006944*/ BEQ         RC_StartOneFrame_x6958
    /*00006948*/ LDR         R3, [R8, #1596]             @ 0x63c 
    /*0000694c*/ SUB         R3, R3, #1 
    /*00006950*/ CMP         R3, R5 
    /*00006954*/ BEQ         RC_StartOneFrame_x6628
    RC_StartOneFrame_x6958:
    /*00006958*/ CMP         R4, #0 
    /*0000695c*/ BNE         RC_StartOneFrame_x6628
    /*00006960*/ LDR         R1, [R8, #1584]             @ 0x630 
    /*00006964*/ MOV         R0, R5 
    /*00006968*/ ADD         R1, R1, #1 
    /*0000696c*/ BL          0x000000000000696C          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*00006970*/ CMP         R1, #0 
    /*00006974*/ ADDNE       R5, R5, #1 
    /*00006978*/ STRNE       R5, [R8, #1500]             @ 0x5dc 
    /*0000697c*/ MOVNE       SL, #4 
    /*00006980*/ B           RC_StartOneFrame_x6628
    RC_StartOneFrame_x6984:
    /*00006984*/ MOV         R2, #0 
    /*00006988*/ STR         R2, [R8, #1500]             @ 0x5dc 
    /*0000698c*/ MOV         SL, R2 
    /*00006990*/ STR         R2, [R8, #1516]             @ 0x5ec 
    /*00006994*/ MOV         R5, R2 
    /*00006998*/ B           RC_StartOneFrame_x6620
    RC_StartOneFrame_x699c:
    /*0000699c*/ LDR         R5, [R8, #1596]             @ 0x63c 
    /*000069a0*/ LDR         SL, [R8, #1516]             @ 0x5ec 
    /*000069a4*/ MOV         R1, R5 
    /*000069a8*/ MOV         R0, SL 
    /*000069ac*/ BL          0x00000000000069AC          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*000069b0*/ LDR         R3, [R8, #1520]             @ 0x5f0 
    /*000069b4*/ CMP         R3, #1 
    /*000069b8*/ SUB         FP, R5, R1 
    /*000069bc*/ BEQ         RC_StartOneFrame_x6aa4
    /*000069c0*/ CMP         R4, #3 
    /*000069c4*/ BEQ         RC_StartOneFrame_x6b44
    /*000069c8*/ CMP         SL, #0 
    /*000069cc*/ MOVEQ       SL, #5 
    /*000069d0*/ BEQ         RC_StartOneFrame_x6650
    /*000069d4*/ CMP         R1, #0 
    /*000069d8*/ MOVEQ       SL, #6 
    /*000069dc*/ BEQ         RC_StartOneFrame_x6650
    /*000069e0*/ CMP         SL, #1 
    /*000069e4*/ MOVNE       SL, #7 
    /*000069e8*/ MOVEQ       SL, #1 
    /*000069ec*/ B           RC_StartOneFrame_x6650
    RC_StartOneFrame_x69f0:
    /*000069f0*/ LDR         R2, [R8, #1496]             @ 0x5d8 
    /*000069f4*/ SUB         R2, R2, #2 
    /*000069f8*/ CMP         R2, #1 
    /*000069fc*/ MOVLS       R2, #0 
    /*00006a00*/ STRLS       R2, [R8, #1500]             @ 0x5dc 
    /*00006a04*/ STRLS       R2, [R8, #1516]             @ 0x5ec 
    /*00006a08*/ B           RC_StartOneFrame_x6608
    RC_StartOneFrame_x6a0c:
    /*00006a0c*/ LDR         R3, [R8, #1496]             @ 0x5d8 
    /*00006a10*/ CMP         R3, #3 
    /*00006a14*/ BEQ         RC_StartOneFrame_x66a0
    /*00006a18*/ SUB         R3, SL, #5 
    /*00006a1c*/ CMP         SL, #0 
    /*00006a20*/ CMPNE       R3, #1 
    /*00006a24*/ BHI         RC_StartOneFrame_x66a0
    /*00006a28*/ STR         SL, [R8, #3132]             @ 0xc3c 
    /*00006a2c*/ MOV         R3, #0 
    /*00006a30*/ MOV         SL, #9 
    /*00006a34*/ STR         FP, [R8, #3140]             @ 0xc44 
    /*00006a38*/ STR         IP, [R8, #3136]             @ 0xc40 
    /*00006a3c*/ STR         R3, [R8, #1564]             @ 0x61c 
    /*00006a40*/ B           RC_StartOneFrame_x66a0
    RC_StartOneFrame_x6a44:
    /*00006a44*/ MOVW        R3, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bdc] 
    /*00006a48*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00006a4c*/ MOVT        R3, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bdc] 
    /*00006a50*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00006a54*/ MOV         R2, #3696                   @ 0xe70 
    /*00006a58*/ LDR         R1, [PC, #328]              @ 0x0000000000006ba8 
    /*00006a5c*/ BL          0x0000000000006A5C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00006a60*/ B           RC_StartOneFrame_x651c
    RC_StartOneFrame_x6a64:
    /*00006a64*/ MOVW        R3, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ba0] 
    /*00006a68*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00006a6c*/ MOVT        R3, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ba0] 
    /*00006a70*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00006a74*/ MOVW        R2, #3694                   @ 0xe6e 
    /*00006a78*/ LDR         R1, [PC, #296]              @ 0x0000000000006ba8 
    /*00006a7c*/ BL          0x0000000000006A7C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00006a80*/ B           RC_StartOneFrame_x650c
    RC_StartOneFrame_x6a84:
    /*00006a84*/ MOVW        R3, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bc0] 
    /*00006a88*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00006a8c*/ MOVT        R3, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bc0] 
    /*00006a90*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00006a94*/ MOVW        R2, #3695                   @ 0xe6f 
    /*00006a98*/ LDR         R1, [PC, #264]              @ 0x0000000000006ba8 
    /*00006a9c*/ BL          0x0000000000006A9C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00006aa0*/ B           RC_StartOneFrame_x6514
    RC_StartOneFrame_x6aa4:
    /*00006aa4*/ CMP         R1, #0 
    /*00006aa8*/ MOVNE       SL, #7 
    /*00006aac*/ MOVEQ       SL, #6 
    /*00006ab0*/ B           RC_StartOneFrame_x6650
    RC_StartOneFrame_x6ab4:
    /*00006ab4*/ LDR         R4, [R8, #1500]             @ 0x5dc 
    /*00006ab8*/ MVN         FP, #0 
    /*00006abc*/ LDR         R1, [R8, #1596]             @ 0x63c 
    /*00006ac0*/ MOV         R0, R4 
    /*00006ac4*/ BL          0x0000000000006AC4          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*00006ac8*/ LDR         R3, [R8, #3096]             @ 0xc18 
    /*00006acc*/ CLZ         R3, R3 
    /*00006ad0*/ LSR         R3, R3, #5 
    /*00006ad4*/ CMP         R1, #1 
    /*00006ad8*/ MOVGT       SL, #7 
    /*00006adc*/ MOVLE       SL, #1 
    /*00006ae0*/ CMP         R4, #1 
    /*00006ae4*/ MOVEQ       R3, #0 
    /*00006ae8*/ CMP         R3, #0 
    /*00006aec*/ MOVNE       SL, #7 
    /*00006af0*/ B           RC_StartOneFrame_x6650
    RC_StartOneFrame_x6af4:
    /*00006af4*/ LDR         SL, [R8, #1500]             @ 0x5dc 
    /*00006af8*/ LDR         R1, [R8, #1584]             @ 0x630 
    /*00006afc*/ STR         R3, [SP, #4] 
    /*00006b00*/ MOV         R0, SL 
    /*00006b04*/ ADD         R1, R1, #1 
    /*00006b08*/ BL          0x0000000000006B08          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*00006b0c*/ LDR         R2, [R8, #3096]             @ 0xc18 
    /*00006b10*/ LDR         R3, [SP, #4] 
    /*00006b14*/ CMP         R2, #1 
    /*00006b18*/ BEQ         RC_StartOneFrame_x6b7c
    RC_StartOneFrame_x6b1c:
    /*00006b1c*/ CMP         R1, #1 
    /*00006b20*/ MOVEQ       R4, #0 
    /*00006b24*/ STREQ       R4, [R8, #1500]             @ 0x5dc 
    /*00006b28*/ BEQ         RC_StartOneFrame_x65f0
    RC_StartOneFrame_x6b2c:
    /*00006b2c*/ CMP         SL, #0 
    /*00006b30*/ BEQ         RC_StartOneFrame_x65ec
    /*00006b34*/ LDR         R2, [R8, #1596]             @ 0x63c 
    /*00006b38*/ SUB         R2, R2, #1 
    /*00006b3c*/ STR         R2, [R8, #1500]             @ 0x5dc 
    /*00006b40*/ B           RC_StartOneFrame_x65f0
    RC_StartOneFrame_x6b44:
    /*00006b44*/ CMP         R1, #0 
    /*00006b48*/ MOVEQ       SL, R1 
    /*00006b4c*/ MVNEQ       FP, #0 
    /*00006b50*/ BEQ         RC_StartOneFrame_x6650
    /*00006b54*/ CMP         R1, #1 
    /*00006b58*/ MVN         FP, #0 
    /*00006b5c*/ MOVNE       SL, #7 
    /*00006b60*/ MOVEQ       SL, #1 
    /*00006b64*/ B           RC_StartOneFrame_x6650
    RC_StartOneFrame_x6b68:
    /*00006b68*/ ADD         R0, R9, #1136               @ 0x470 
    /*00006b6c*/ MOV         R1, #0 
    /*00006b70*/ ADD         R0, R0, #4 
    /*00006b74*/ BL          0x0000000000006B74          @ RcWrFifoElem [R_ARM_CALL: .text+0x4ed4] 
    /*00006b78*/ B           RC_StartOneFrame_x67e8
    RC_StartOneFrame_x6b7c:
    /*00006b7c*/ LDR         R2, [R8, #1596]             @ 0x63c 
    /*00006b80*/ SUB         R2, R2, #1 
    /*00006b84*/ CMP         SL, R2 
    /*00006b88*/ BNE         RC_StartOneFrame_x6b1c
    /*00006b8c*/ B           RC_StartOneFrame_x6b2c
    RC_StartOneFrame_x6b90:
    /*00006b90*/ ADD         R0, R9, #1136               @ 0x470 
    /*00006b94*/ MOV         R1, #0 
    /*00006b98*/ ADD         R0, R0, #4 
    /*00006b9c*/ BL          0x0000000000006B9C          @ RcWrFifoElem [R_ARM_CALL: .text+0x4ed4] 
    /*00006ba0*/ B           RC_StartOneFrame_x6934
    /*00006ba4*/ ANDEQ       R0, R0, R8, LSL #6 
    /*00006ba8*/ ANDEQ       R0, R0, R8, ASR R3 
FUNC_END RC_StartOneFrame


FUNC_BEGIN RC_StartOneFrame2
    /*00006bac*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00006bb0*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00006bb4*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00006bb8*/ SUB         SP, SP, #8 
    /*00006bbc*/ LDR         R3, [R9, R0, LSL #2] 
    /*00006bc0*/ CMP         R3, #0 
    /*00006bc4*/ BEQ         RC_StartOneFrame2_x6dcc
    /*00006bc8*/ CMP         R1, #0 
    /*00006bcc*/ MOV         R7, R2 
    /*00006bd0*/ MOV         R5, R1 
    /*00006bd4*/ MOV         R6, R0 
    /*00006bd8*/ BEQ         RC_StartOneFrame2_x6d70
    RC_StartOneFrame2_x6bdc:
    /*00006bdc*/ CMP         R7, #0 
    /*00006be0*/ BEQ         RC_StartOneFrame2_x6d90
    RC_StartOneFrame2_x6be4:
    /*00006be4*/ LDR         R8, [PC, #492]              @ 0x0000000000006dd8 
    /*00006be8*/ LSL         SL, R6, #2 
    /*00006bec*/ ADD         R1, SP, #4 
    /*00006bf0*/ ADD         R8, R8, SL 
    /*00006bf4*/ MOV         R0, R8 
    /*00006bf8*/ BL          0x0000000000006BF8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006bfc*/ LDR         R4, [R9, R6, LSL #2] 
    /*00006c00*/ CMP         R4, #0 
    /*00006c04*/ BEQ         RC_StartOneFrame2_x6dac
    RC_StartOneFrame2_x6c08:
    /*00006c08*/ LDR         R3, [R5, #4] 
    /*00006c0c*/ CMP         R3, #0 
    /*00006c10*/ CMPNE       R3, #5 
    /*00006c14*/ STR         R3, [R4, #1508]             @ 0x5e4 
    /*00006c18*/ BEQ         RC_StartOneFrame2_x6d34
    RC_StartOneFrame2_x6c1c:
    /*00006c1c*/ CMP         R3, #7 
    /*00006c20*/ MOVEQ       R3, #1 
    /*00006c24*/ STREQ       R3, [R4, #1508]             @ 0x5e4 
    /*00006c28*/ BEQ         RC_StartOneFrame2_x6c34
    /*00006c2c*/ CMP         R3, #3 
    /*00006c30*/ BEQ         RC_StartOneFrame2_x6d80
    RC_StartOneFrame2_x6c34:
    /*00006c34*/ MOV         R3, #0 
    /*00006c38*/ STR         R3, [R4, #2464]             @ 0x9a0 
    RC_StartOneFrame2_x6c3c:
    /*00006c3c*/ LDR         R1, [R5] 
    /*00006c40*/ MOV         R2, R5 
    /*00006c44*/ LDR         R3, [R4, #3104]             @ 0xc20 
    /*00006c48*/ MOV         R0, R6 
    /*00006c4c*/ STR         R1, [R4, #3092]             @ 0xc14 
    /*00006c50*/ MOV         R1, R4 
    /*00006c54*/ STR         R3, [R7, #4] 
    /*00006c58*/ LDR         R3, [R4, #3104]             @ 0xc20 
    /*00006c5c*/ STR         R3, [R4, #1552]             @ 0x610 
    /*00006c60*/ BL          0x0000000000006C60          @ RC_NewModeDecision [R_ARM_CALL: .text+0xc734] 
    /*00006c64*/ LDR         R3, [R5, #8] 
    /*00006c68*/ ADD         R0, R4, #2432               @ 0x980 
    /*00006c6c*/ ADD         R1, R4, #2448               @ 0x990 
    /*00006c70*/ MOV         IP, #1 
    /*00006c74*/ STR         R3, [R4, #2412]             @ 0x96c 
    /*00006c78*/ LDR         R3, [R5, #12] 
    /*00006c7c*/ STR         R3, [R4, #2416]             @ 0x970 
    /*00006c80*/ LDRD        R2, [R5, #24] 
    /*00006c84*/ STRD        R2, [R0, #-8] 
    /*00006c88*/ LDR         R3, [R5, #16] 
    /*00006c8c*/ STR         R3, [R4, #2432]             @ 0x980 
    /*00006c90*/ LDRD        R2, [R5, #32] 
    /*00006c94*/ STRD        R2, [R1, #-8] 
    /*00006c98*/ LDR         R2, [R4, #1540]             @ 0x604 
    /*00006c9c*/ LDR         R3, [R5, #40]               @ 0x28 
    /*00006ca0*/ CMP         R2, IP 
    /*00006ca4*/ STR         IP, [R4, #1496]             @ 0x5d8 
    /*00006ca8*/ STR         R3, [R4, #2012]             @ 0x7dc 
    /*00006cac*/ BEQ         RC_StartOneFrame2_x6da0
    RC_StartOneFrame2_x6cb0:
    /*00006cb0*/ LDR         R3, [R4, #1996]             @ 0x7cc 
    /*00006cb4*/ ADD         R9, R9, SL 
    /*00006cb8*/ MOV         R5, #0 
    /*00006cbc*/ ADD         R4, R4, #2480               @ 0x9b0 
    /*00006cc0*/ STR         R3, [R7, #8] 
    /*00006cc4*/ LDR         R3, [R4, #-472]             @ 0xfffffe28 
    /*00006cc8*/ STR         R3, [R7, #12] 
    /*00006ccc*/ LDR         R3, [R9, #64]               @ 0x40 
    /*00006cd0*/ STR         R3, [R7] 
    /*00006cd4*/ LDR         R1, [R4, #40]               @ 0x28 
    /*00006cd8*/ LDR         R0, [R4, #-488]             @ 0xfffffe18 
    /*00006cdc*/ BL          0x0000000000006CDC          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00006ce0*/ STR         R0, [R7, #16] 
    /*00006ce4*/ MOV         R0, #2 
    /*00006ce8*/ LDR         R3, [R4, #704]              @ 0x2c0 
    /*00006cec*/ STR         R3, [R7, #20] 
    /*00006cf0*/ STR         R5, [R9, #64]               @ 0x40 
    /*00006cf4*/ BL          0x0000000000006CF4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00006cf8*/ LDR         R3, [R0] 
    /*00006cfc*/ BLX         R3 
    /*00006d00*/ LDRD        R2, [R4] 
    /*00006d04*/ LDRD        R6, [R4, #-8] 
    /*00006d08*/ SUBS        R2, R2, R6 
    /*00006d0c*/ SBC         R3, R3, R7 
    /*00006d10*/ ADDS        R2, R2, R0 
    /*00006d14*/ MOV         R0, R8 
    /*00006d18*/ ADC         R3, R3, R1 
    /*00006d1c*/ ADD         R1, SP, #4 
    /*00006d20*/ STRD        R2, [R4] 
    /*00006d24*/ BL          0x0000000000006D24          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006d28*/ MOV         R0, R5 
    RC_StartOneFrame2_x6d2c:
    /*00006d2c*/ ADD         SP, SP, #8 
    /*00006d30*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    RC_StartOneFrame2_x6d34:
    /*00006d34*/ LDR         R2, [R4, #24] 
    /*00006d38*/ CMP         R3, #5 
    /*00006d3c*/ LDR         R0, [R4, #32] 
    /*00006d40*/ LDR         R1, [R4, #8] 
    /*00006d44*/ STR         R2, [R4, #1592]             @ 0x638 
    /*00006d48*/ LDR         R2, [R4, #16] 
    /*00006d4c*/ STR         R0, [R4, #1596]             @ 0x63c 
    /*00006d50*/ STR         R1, [R4, #1584]             @ 0x630 
    /*00006d54*/ STR         R2, [R4, #1588]             @ 0x634 
    /*00006d58*/ BNE         RC_StartOneFrame2_x6c1c
    /*00006d5c*/ LDR         R3, [R4] 
    /*00006d60*/ CMP         R3, #3 
    /*00006d64*/ MOVEQ       R3, #1 
    /*00006d68*/ STREQ       R3, [R4, #1520]             @ 0x5f0 
    /*00006d6c*/ B           RC_StartOneFrame2_x6c34
    RC_StartOneFrame2_x6d70:
    /*00006d70*/ BL          0x000000000000211C 
    /*00006d74*/ CMP         R0, #0 
    /*00006d78*/ BNE         RC_StartOneFrame2_x6d2c
    /*00006d7c*/ B           RC_StartOneFrame2_x6bdc
    RC_StartOneFrame2_x6d80:
    /*00006d80*/ LDR         R3, [R4, #2464]             @ 0x9a0 
    /*00006d84*/ ADD         R3, R3, #1 
    /*00006d88*/ STR         R3, [R4, #2464]             @ 0x9a0 
    /*00006d8c*/ B           RC_StartOneFrame2_x6c3c
    RC_StartOneFrame2_x6d90:
    /*00006d90*/ BL          0x000000000000211C 
    /*00006d94*/ CMP         R0, #0 
    /*00006d98*/ BNE         RC_StartOneFrame2_x6d2c
    /*00006d9c*/ B           RC_StartOneFrame2_x6be4
    RC_StartOneFrame2_x6da0:
    /*00006da0*/ MOV         R0, R4 
    /*00006da4*/ BL          0x0000000000002140 
    /*00006da8*/ B           RC_StartOneFrame2_x6cb0
    RC_StartOneFrame2_x6dac:
    /*00006dac*/ MOVW        R3, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2af0] 
    /*00006db0*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00006db4*/ MOVT        R3, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2af0] 
    /*00006db8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00006dbc*/ MOVW        R2, #4055                   @ 0xfd7 
    /*00006dc0*/ LDR         R1, [PC, #20]               @ 0x0000000000006ddc 
    /*00006dc4*/ BL          0x0000000000006DC4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00006dc8*/ B           RC_StartOneFrame2_x6c08
    RC_StartOneFrame2_x6dcc:
    /*00006dcc*/ MOVW        R0, #32773                  @ 0x8005 
    /*00006dd0*/ MOVT        R0, #40979                  @ 0xa013 
    /*00006dd4*/ B           RC_StartOneFrame2_x6d2c
    /*00006dd8*/ ANDEQ       R0, R0, R8, LSL #6 
    /*00006ddc*/ ANDEQ       R0, R0, IP, ROR #6 
FUNC_END RC_StartOneFrame2


FUNC_BEGIN RC_ConfigHw
    /*00006de0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00006de4*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00006de8*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00006dec*/ SUB         SP, SP, #304                @ 0x130 
    /*00006df0*/ LDR         R7, [R4, R0, LSL #2] 
    /*00006df4*/ CMP         R7, #0 
    /*00006df8*/ BEQ         RC_ConfigHw_x7028
    /*00006dfc*/ CMP         R1, #0 
    /*00006e00*/ MOV         R8, R1 
    /*00006e04*/ MOV         R5, R0 
    /*00006e08*/ BEQ         RC_ConfigHw_x700c
    RC_ConfigHw_x6e0c:
    /*00006e0c*/ LDR         R0, [R7, #48]               @ 0x30 
    /*00006e10*/ MOVW        R3, #265                    @ 0x109 
    /*00006e14*/ CMP         R0, R3 
    /*00006e18*/ CMPNE       R0, #96                     @ 0x60 
    /*00006e1c*/ MOVEQ       R0, #1 
    /*00006e20*/ MOVNE       R0, #0 
    /*00006e24*/ BNE         RC_ConfigHw_x6fec
    /*00006e28*/ LDR         R3, [R7, #1508]             @ 0x5e4 
    /*00006e2c*/ CMP         R3, #5 
    /*00006e30*/ CMPNE       R3, #0 
    /*00006e34*/ BEQ         RC_ConfigHw_x6ff4
    /*00006e38*/ CMP         R3, #4 
    /*00006e3c*/ ADDEQ       R6, R7, #2144               @ 0x860 
    /*00006e40*/ ADDEQ       R5, R7, #2336               @ 0x920 
    /*00006e44*/ ADDNE       R6, R7, #2080               @ 0x820 
    /*00006e48*/ ADDNE       R5, R7, #2272               @ 0x8e0 
    /*00006e4c*/ ADDEQ       R6, R6, #8 
    /*00006e50*/ ADDEQ       R5, R5, #8 
    /*00006e54*/ ADDNE       R6, R6, #8 
    /*00006e58*/ ADDNE       R5, R5, #8 
    /*00006e5c*/ MOVEQ       R4, #1 
    /*00006e60*/ MOVNE       R4, #2 
    RC_ConfigHw_x6e64:
    /*00006e64*/ LDR         R3, [R2] 
    /*00006e68*/ MOV         R0, R7 
    /*00006e6c*/ LDR         IP, [R7, #1992]             @ 0x7c8 
    /*00006e70*/ CMP         R3, #51                     @ 0x33 
    /*00006e74*/ STRLS       R3, [SP, #16] 
    /*00006e78*/ LDRHI       R1, [R7, #1996]             @ 0x7cc 
    /*00006e7c*/ LDRHI       R2, [R7, #2004]             @ 0x7d4 
    /*00006e80*/ LDRHI       R3, [R7, #2000]             @ 0x7d0 
    /*00006e84*/ STRLS       R3, [SP, #24] 
    /*00006e88*/ STRHI       R1, [SP, #16] 
    /*00006e8c*/ STRHI       R2, [SP, #24] 
    /*00006e90*/ LDR         R1, [R7, #2016]             @ 0x7e0 
    /*00006e94*/ LDR         R2, [R7, #2020]             @ 0x7e4 
    /*00006e98*/ STR         R3, [SP, #20] 
    /*00006e9c*/ LDR         R3, [R7, #2408]             @ 0x968 
    /*00006ea0*/ STR         R1, [SP, #28] 
    /*00006ea4*/ STR         R2, [SP, #32] 
    /*00006ea8*/ STR         R3, [SP, #164]              @ 0xa4 
    /*00006eac*/ STR         IP, [SP, #12] 
    /*00006eb0*/ BL          0x0000000000006EB0          @ RC_DRV_SetSceneMode [R_ARM_CALL: .text+0x113d4] 
    /*00006eb4*/ ADD         LR, SP, #100                @ 0x64 
    /*00006eb8*/ SUB         R0, R6, #4 
    /*00006ebc*/ SUB         R2, R5, #4 
    /*00006ec0*/ ADD         R3, SP, #36                 @ 0x24 
    /*00006ec4*/ MOV         R1, LR 
    RC_ConfigHw_x6ec8:
    /*00006ec8*/ LDR         IP, [R0, #4]! 
    /*00006ecc*/ STR         IP, [R3], #4 
    /*00006ed0*/ CMP         R3, LR 
    /*00006ed4*/ LDR         IP, [R2, #4]! 
    /*00006ed8*/ STR         IP, [R1], #4 
    /*00006edc*/ BNE         RC_ConfigHw_x6ec8
    /*00006ee0*/ ADD         R1, R7, R4, LSL #2 
    /*00006ee4*/ ADD         R3, R7, R4 
    /*00006ee8*/ ADD         R2, R4, #180                @ 0xb4 
    /*00006eec*/ LDR         R4, [R7, #3088]             @ 0xc10 
    /*00006ef0*/ LDR         IP, [R1, #2608]             @ 0xa30 
    /*00006ef4*/ ADD         LR, SP, #264                @ 0x108 
    /*00006ef8*/ LDR         R0, [R1, #2624]             @ 0xa40 
    /*00006efc*/ LSL         R2, R2, #4 
    /*00006f00*/ STR         R4, [SP, #300]              @ 0x12c 
    /*00006f04*/ STR         IP, [SP, #168]              @ 0xa8 
    /*00006f08*/ LDR         R4, [R1, #2672]             @ 0xa70 
    /*00006f0c*/ LDR         IP, [R1, #2688]             @ 0xa80 
    /*00006f10*/ STR         R0, [SP, #172]              @ 0xac 
    /*00006f14*/ LDR         R0, [R1, #2704]             @ 0xa90 
    /*00006f18*/ STR         R4, [SP, #176]              @ 0xb0 
    /*00006f1c*/ STR         IP, [SP, #180]              @ 0xb4 
    /*00006f20*/ LDR         R4, [R1, #2720]             @ 0xaa0 
    /*00006f24*/ LDR         IP, [R1, #2736]             @ 0xab0 
    /*00006f28*/ STR         R0, [SP, #184]              @ 0xb8 
    /*00006f2c*/ LDR         R0, [R1, #2752]             @ 0xac0 
    /*00006f30*/ STR         R4, [SP, #188]              @ 0xbc 
    /*00006f34*/ STR         IP, [SP, #192]              @ 0xc0 
    /*00006f38*/ LDR         R4, [R1, #2796]             @ 0xaec 
    /*00006f3c*/ LDR         IP, [R1, #2812]             @ 0xafc 
    /*00006f40*/ STR         R0, [SP, #196]              @ 0xc4 
    /*00006f44*/ LDR         R0, [R1, #2832]             @ 0xb10 
    /*00006f48*/ STR         R4, [SP, #204]              @ 0xcc 
    /*00006f4c*/ STR         IP, [SP, #208]              @ 0xd0 
    /*00006f50*/ LDRB        R4, [R3, #2768]             @ 0xad0 
    /*00006f54*/ LDRB        IP, [R3, #2772]             @ 0xad4 
    /*00006f58*/ STR         R0, [SP, #216]              @ 0xd8 
    /*00006f5c*/ LDRB        R0, [R3, #2776]             @ 0xad8 
    /*00006f60*/ LDRB        R3, [R3, #2828]             @ 0xb0c 
    /*00006f64*/ STRB        R4, [SP, #200]              @ 0xc8 
    /*00006f68*/ STRB        IP, [SP, #201]              @ 0xc9 
    /*00006f6c*/ ADD         IP, R2, #64                 @ 0x40 
    /*00006f70*/ STRB        R0, [SP, #202]              @ 0xca 
    /*00006f74*/ ADD         IP, R7, IP 
    /*00006f78*/ STRB        R3, [SP, #212]              @ 0xd4 
    /*00006f7c*/ ADD         R2, R7, R2 
    /*00006f80*/ LDR         R6, [R1, #2848]             @ 0xb20 
    /*00006f84*/ ADD         R3, SP, #248                @ 0xf8 
    /*00006f88*/ LDR         R5, [R1, #2864]             @ 0xb30 
    /*00006f8c*/ MOV         R0, LR 
    /*00006f90*/ LDR         R4, [R1, #3008]             @ 0xbc0 
    /*00006f94*/ STR         R6, [SP, #220]              @ 0xdc 
    /*00006f98*/ STR         R5, [SP, #224]              @ 0xe0 
    /*00006f9c*/ LDR         R6, [R1, #3024]             @ 0xbd0 
    /*00006fa0*/ LDR         R5, [R1, #3040]             @ 0xbe0 
    /*00006fa4*/ STR         R4, [SP, #228]              @ 0xe4 
    /*00006fa8*/ LDR         R4, [R1, #3056]             @ 0xbf0 
    /*00006fac*/ LDR         R1, [R1, #3072]             @ 0xc00 
    /*00006fb0*/ STR         R6, [SP, #232]              @ 0xe8 
    /*00006fb4*/ STR         R5, [SP, #236]              @ 0xec 
    /*00006fb8*/ STR         R4, [SP, #240]              @ 0xf0 
    /*00006fbc*/ STR         R1, [SP, #244]              @ 0xf4 
    RC_ConfigHw_x6fc0:
    /*00006fc0*/ LDRB        R1, [R2], #1 
    /*00006fc4*/ STRB        R1, [R3], #1 
    /*00006fc8*/ CMP         R3, LR 
    /*00006fcc*/ LDRB        R1, [IP], #1 
    /*00006fd0*/ STRB        R1, [R0], #1 
    /*00006fd4*/ BNE         RC_ConfigHw_x6fc0
    /*00006fd8*/ MOV         R1, R8 
    /*00006fdc*/ MOV         R0, R7 
    /*00006fe0*/ ADD         R2, SP, #12 
    /*00006fe4*/ BL          0x0000000000006FE4          @ RC_DRV_Config [R_ARM_CALL: .text+0x10430] 
    /*00006fe8*/ MOV         R0, #0 
    RC_ConfigHw_x6fec:
    /*00006fec*/ ADD         SP, SP, #304                @ 0x130 
    /*00006ff0*/ POP         {R4, R5, R6, R7, R8, PC} 
    RC_ConfigHw_x6ff4:
    /*00006ff4*/ ADD         R6, R7, #2016               @ 0x7e0 
    /*00006ff8*/ ADD         R5, R7, #2208               @ 0x8a0 
    /*00006ffc*/ ADD         R6, R6, #8 
    /*00007000*/ ADD         R5, R5, #8 
    /*00007004*/ MOV         R4, #0 
    /*00007008*/ B           RC_ConfigHw_x6e64
    RC_ConfigHw_x700c:
    /*0000700c*/ STR         R2, [SP, #4] 
    /*00007010*/ BL          0x000000000000211C 
    /*00007014*/ LDR         R2, [SP, #4] 
    /*00007018*/ CMP         R0, #0 
    /*0000701c*/ BNE         RC_ConfigHw_x6fec
    /*00007020*/ LDR         R7, [R4, R5, LSL #2] 
    /*00007024*/ B           RC_ConfigHw_x6e0c
    RC_ConfigHw_x7028:
    /*00007028*/ MOVW        R0, #32773                  @ 0x8005 
    /*0000702c*/ MOVT        R0, #40979                  @ 0xa013 
    /*00007030*/ B           RC_ConfigHw_x6fec
FUNC_END RC_ConfigHw


FUNC_BEGIN RC_ReadHw
    /*00007034*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00007038*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*0000703c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00007040*/ SUB         SP, SP, #12 
    /*00007044*/ LDR         IP, [R4, R0, LSL #2] 
    /*00007048*/ CMP         IP, #0 
    /*0000704c*/ BEQ         RC_ReadHw_x7138
    /*00007050*/ CMP         R1, #0 
    /*00007054*/ MOV         R7, R2 
    /*00007058*/ MOV         R6, R1 
    /*0000705c*/ MOV         R5, R0 
    /*00007060*/ BEQ         RC_ReadHw_x7108
    RC_ReadHw_x7064:
    /*00007064*/ CMP         R7, #0 
    /*00007068*/ BEQ         RC_ReadHw_x7120
    RC_ReadHw_x706c:
    /*0000706c*/ LDR         R4, [R4, R5, LSL #2] 
    /*00007070*/ MOVW        R1, #265                    @ 0x109 
    /*00007074*/ LDR         R2, [R4, #48]               @ 0x30 
    /*00007078*/ CMP         R2, R1 
    /*0000707c*/ BEQ         RC_ReadHw_x70e8
    /*00007080*/ MOVW        R1, #1002                   @ 0x3ea 
    /*00007084*/ CMP         R2, R1 
    /*00007088*/ BEQ         RC_ReadHw_x70c8
    /*0000708c*/ CMP         R2, #96                     @ 0x60 
    /*00007090*/ BEQ         RC_ReadHw_x70e8
    /*00007094*/ MOV         R3, R2 
    /*00007098*/ LDR         R1, [PC, #164]              @ 0x0000000000007144 
    /*0000709c*/ MOVW        R2, #4262                   @ 0x10a6 
    /*000070a0*/ MOVW        R0, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bf8] 
    /*000070a4*/ MOVT        R0, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bf8] 
    /*000070a8*/ BL          0x00000000000070A8          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000070ac*/ MOVW        R3, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c24] 
    /*000070b0*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*000070b4*/ MOVT        R3, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c24] 
    /*000070b8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*000070bc*/ MOVW        R2, #4264                   @ 0x10a8 
    /*000070c0*/ LDR         R1, [PC, #124]              @ 0x0000000000007144 
    /*000070c4*/ BL          0x00000000000070C4          @ osal_panic [R_ARM_CALL: +0x0] 
    RC_ReadHw_x70c8:
    /*000070c8*/ LDR         R3, [R4, #1640]             @ 0x668 
    /*000070cc*/ LDR         R2, [R4, #1664]             @ 0x680 
    /*000070d0*/ CMP         R3, R2 
    /*000070d4*/ STRHI       R3, [R4, #1664]             @ 0x680 
    /*000070d8*/ MOVHI       R0, #0 
    /*000070dc*/ MOVLS       R0, #0 
    RC_ReadHw_x70e0:
    /*000070e0*/ ADD         SP, SP, #12 
    /*000070e4*/ POP         {R4, R5, R6, R7, PC} 
    RC_ReadHw_x70e8:
    /*000070e8*/ MOV         R1, R6 
    /*000070ec*/ MOV         R2, R7 
    /*000070f0*/ MOV         R0, R4 
    /*000070f4*/ BL          0x00000000000070F4          @ RC_DRV_Read [R_ARM_CALL: .text+0x108b4] 
    /*000070f8*/ MOV         R1, R6 
    /*000070fc*/ MOV         R0, R4 
    /*00007100*/ BL          0x0000000000007100          @ RC_DRV_ReadForOptimization [R_ARM_CALL: .text+0x108b0] 
    /*00007104*/ B           RC_ReadHw_x70c8
    RC_ReadHw_x7108:
    /*00007108*/ STR         R3, [SP, #4] 
    /*0000710c*/ BL          0x000000000000211C 
    /*00007110*/ LDR         R3, [SP, #4] 
    /*00007114*/ CMP         R0, #0 
    /*00007118*/ BNE         RC_ReadHw_x70e0
    /*0000711c*/ B           RC_ReadHw_x7064
    RC_ReadHw_x7120:
    /*00007120*/ STR         R3, [SP, #4] 
    /*00007124*/ BL          0x000000000000211C 
    /*00007128*/ LDR         R3, [SP, #4] 
    /*0000712c*/ CMP         R0, #0 
    /*00007130*/ BNE         RC_ReadHw_x70e0
    /*00007134*/ B           RC_ReadHw_x706c
    RC_ReadHw_x7138:
    /*00007138*/ MOVW        R0, #32773                  @ 0x8005 
    /*0000713c*/ MOVT        R0, #40979                  @ 0xa013 
    /*00007140*/ B           RC_ReadHw_x70e0
    /*00007144*/ ANDEQ       R0, R0, R0, LSL #7 
FUNC_END RC_ReadHw


FUNC_BEGIN RcStatusConvert
    /*00007148*/ CMP         R0, #2 
    /*0000714c*/ BEQ         RcStatusConvert_x7160
    /*00007150*/ CMP         R0, #1 
    /*00007154*/ MOVEQ       R0, #2 
    /*00007158*/ MOVNE       R0, #1 
    /*0000715c*/ BX          LR 
    RcStatusConvert_x7160:
    /*00007160*/ MOV         R0, #3 
    /*00007164*/ BX          LR 
FUNC_END RcStatusConvert


FUNC_BEGIN RC_EndOneFrameNorStatus
    /*00007168*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000716c*/ MOV         R3, #0 
    /*00007170*/ STR         R3, [R1] 
    /*00007174*/ SUB         SP, SP, #12 
    /*00007178*/ LDR         R3, [R0] 
    /*0000717c*/ MOV         R6, R1 
    /*00007180*/ MOV         R4, R0 
    /*00007184*/ MOV         R5, R2 
    /*00007188*/ CMP         R3, #3 
    /*0000718c*/ BEQ         RC_EndOneFrameNorStatus_x72a0
    RC_EndOneFrameNorStatus_x7190:
    /*00007190*/ ADD         R7, R4, #304                @ 0x130 
    /*00007194*/ MOV         R1, R5 
    /*00007198*/ MOV         R0, R7 
    /*0000719c*/ BL          0x000000000000719C          @ RcUpdateAlgModel [R_ARM_CALL: .text+0x54ac] 
    /*000071a0*/ LDR         R3, [R4, #52]               @ 0x34 
    /*000071a4*/ CMP         R3, #4 
    /*000071a8*/ BEQ         RC_EndOneFrameNorStatus_x7378
    RC_EndOneFrameNorStatus_x71ac:
    /*000071ac*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*000071b0*/ CMP         R3, #4 
    /*000071b4*/ STR         R3, [R4, #1512]             @ 0x5e8 
    /*000071b8*/ BEQ         RC_EndOneFrameNorStatus_x71d4
    /*000071bc*/ LDR         R2, [R4, #1500]             @ 0x5dc 
    /*000071c0*/ LDR         R1, [R4, #1596]             @ 0x63c 
    /*000071c4*/ ADD         R2, R2, #1 
    /*000071c8*/ STR         R2, [R4, #1500]             @ 0x5dc 
    /*000071cc*/ CMP         R2, R1 
    /*000071d0*/ BCS         RC_EndOneFrameNorStatus_x720c
    RC_EndOneFrameNorStatus_x71d4:
    /*000071d4*/ LDR         R2, [R4] 
    /*000071d8*/ SUB         R1, R2, #2 
    /*000071dc*/ CMP         R1, #1 
    /*000071e0*/ BLS         RC_EndOneFrameNorStatus_x722c
    RC_EndOneFrameNorStatus_x71e4:
    /*000071e4*/ LDR         R2, [R4, #3104]             @ 0xc20 
    /*000071e8*/ CMP         R2, #1 
    /*000071ec*/ BEQ         RC_EndOneFrameNorStatus_x72d0
    RC_EndOneFrameNorStatus_x71f0:
    /*000071f0*/ CMP         R3, #3 
    /*000071f4*/ LDR         R3, [R4, #1556]             @ 0x614 
    /*000071f8*/ STRNE       R5, [R4, #1560]             @ 0x618 
    /*000071fc*/ ADD         R3, R3, #1 
    /*00007200*/ STR         R3, [R4, #1556]             @ 0x614 
    /*00007204*/ ADD         SP, SP, #12 
    /*00007208*/ POP         {R4, R5, R6, R7, PC} 
    RC_EndOneFrameNorStatus_x720c:
    /*0000720c*/ LDR         R2, [R4, #3096]             @ 0xc18 
    /*00007210*/ CMP         R2, #0 
    /*00007214*/ MOVNE       R2, #0 
    /*00007218*/ STRNE       R2, [R4, #1500]             @ 0x5dc 
    /*0000721c*/ LDR         R2, [R4] 
    /*00007220*/ SUB         R1, R2, #2 
    /*00007224*/ CMP         R1, #1 
    /*00007228*/ BHI         RC_EndOneFrameNorStatus_x71e4
    RC_EndOneFrameNorStatus_x722c:
    /*0000722c*/ LDR         R1, [R4, #3104]             @ 0xc20 
    /*00007230*/ CMP         R1, #1 
    /*00007234*/ BEQ         RC_EndOneFrameNorStatus_x7354
    RC_EndOneFrameNorStatus_x7238:
    /*00007238*/ CMP         R2, #3 
    /*0000723c*/ BEQ         RC_EndOneFrameNorStatus_x733c
    RC_EndOneFrameNorStatus_x7240:
    /*00007240*/ LDR         R3, [R4, #1516]             @ 0x5ec 
    /*00007244*/ ADD         R2, R3, #1 
    /*00007248*/ STR         R2, [R4, #1516]             @ 0x5ec 
    /*0000724c*/ MOV         R3, R2 
    RC_EndOneFrameNorStatus_x7250:
    /*00007250*/ LDR         R1, [R4, #1592]             @ 0x638 
    /*00007254*/ CMP         R1, R2 
    /*00007258*/ BHI         RC_EndOneFrameNorStatus_x731c
    /*0000725c*/ MOV         R3, #0 
    /*00007260*/ MOV         R2, #1 
    /*00007264*/ STR         R3, [R4, #1516]             @ 0x5ec 
    /*00007268*/ STR         R2, [R6, #8] 
    /*0000726c*/ STR         R3, [R4, #1520]             @ 0x5f0 
    /*00007270*/ LDR         R3, [R4, #1516]             @ 0x5ec 
    RC_EndOneFrameNorStatus_x7274:
    /*00007274*/ LDR         R2, [R4, #1596]             @ 0x63c 
    /*00007278*/ CMP         R3, R2 
    /*0000727c*/ BCC         RC_EndOneFrameNorStatus_x7328
    /*00007280*/ LDR         R3, [R4] 
    /*00007284*/ CMP         R3, #3 
    /*00007288*/ MOVEQ       R3, #0 
    /*0000728c*/ MOVEQ       R2, #1 
    /*00007290*/ STREQ       R3, [R4, #1516]             @ 0x5ec 
    /*00007294*/ STREQ       R2, [R6, #8] 
    /*00007298*/ STREQ       R3, [R4, #1520]             @ 0x5f0 
    /*0000729c*/ B           RC_EndOneFrameNorStatus_x7328
    RC_EndOneFrameNorStatus_x72a0:
    /*000072a0*/ LDR         R2, [R0, #1508]             @ 0x5e4 
    /*000072a4*/ CMP         R2, #5 
    /*000072a8*/ BEQ         RC_EndOneFrameNorStatus_x7440
    /*000072ac*/ LDR         R3, [R0, #1512]             @ 0x5e8 
    /*000072b0*/ CMP         R3, #5 
    /*000072b4*/ BNE         RC_EndOneFrameNorStatus_x7190
    /*000072b8*/ CMP         R2, #6 
    /*000072bc*/ BNE         RC_EndOneFrameNorStatus_x7190
    /*000072c0*/ MOV         R1, R5 
    /*000072c4*/ ADD         R0, R0, #304                @ 0x130 
    /*000072c8*/ BL          0x00000000000072C8          @ RcUpdateAlgModeVI [R_ARM_CALL: .text+0x5564] 
    /*000072cc*/ B           RC_EndOneFrameNorStatus_x71ac
    RC_EndOneFrameNorStatus_x72d0:
    /*000072d0*/ LDR         R2, [R4, #1552]             @ 0x610 
    /*000072d4*/ CMP         R2, #1 
    /*000072d8*/ CMPEQ       R3, #0 
    /*000072dc*/ MOVEQ       R2, #0 
    /*000072e0*/ MOVWEQ      R3, #4342                   @ 0x10f6 
    /*000072e4*/ BNE         RC_EndOneFrameNorStatus_x71f0
    RC_EndOneFrameNorStatus_x72e8:
    /*000072e8*/ STR         R2, [R4, #3104]             @ 0xc20 
    /*000072ec*/ MOV         R1, #19 
    /*000072f0*/ STR         R3, [SP] 
    /*000072f4*/ MOVW        R2, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c28] 
    /*000072f8*/ LDR         R3, [PC, #436]              @ 0x00000000000074b4 
    /*000072fc*/ MOVT        R2, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c28] 
    /*00007300*/ MOV         R0, #6 
    /*00007304*/ BL          0x0000000000007304          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007308*/ LDR         R2, [R4] 
    /*0000730c*/ SUB         R3, R2, #2 
    /*00007310*/ CMP         R3, #1 
    /*00007314*/ BHI         RC_EndOneFrameNorStatus_x7334
    /*00007318*/ B           RC_EndOneFrameNorStatus_x7238
    RC_EndOneFrameNorStatus_x731c:
    /*0000731c*/ LDR         R2, [R4, #1520]             @ 0x5f0 
    /*00007320*/ CMP         R2, #0 
    /*00007324*/ BEQ         RC_EndOneFrameNorStatus_x7274
    RC_EndOneFrameNorStatus_x7328:
    /*00007328*/ LDR         R3, [R4, #3104]             @ 0xc20 
    /*0000732c*/ CMP         R3, #1 
    /*00007330*/ BEQ         RC_EndOneFrameNorStatus_x738c
    RC_EndOneFrameNorStatus_x7334:
    /*00007334*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*00007338*/ B           RC_EndOneFrameNorStatus_x71f0
    RC_EndOneFrameNorStatus_x733c:
    /*0000733c*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*00007340*/ CMP         R3, #5 
    /*00007344*/ LDREQ       R3, [R4, #1516]             @ 0x5ec 
    /*00007348*/ MOVEQ       R2, R3 
    /*0000734c*/ BNE         RC_EndOneFrameNorStatus_x7240
    /*00007350*/ B           RC_EndOneFrameNorStatus_x7250
    RC_EndOneFrameNorStatus_x7354:
    /*00007354*/ LDR         R1, [R4, #1552]             @ 0x610 
    /*00007358*/ CMP         R1, #1 
    /*0000735c*/ BNE         RC_EndOneFrameNorStatus_x7238
    /*00007360*/ CMP         R3, #5 
    /*00007364*/ CMPNE       R3, #0 
    /*00007368*/ BNE         RC_EndOneFrameNorStatus_x7238
    /*0000736c*/ MOV         R2, #0 
    /*00007370*/ MOVW        R3, #4351                   @ 0x10ff 
    /*00007374*/ B           RC_EndOneFrameNorStatus_x72e8
    RC_EndOneFrameNorStatus_x7378:
    /*00007378*/ ADD         R0, R4, #1440               @ 0x5a0 
    /*0000737c*/ MOV         R1, R5 
    /*00007380*/ ADD         R0, R0, #4 
    /*00007384*/ BL          0x0000000000007384          @ RcWrFifoElem [R_ARM_CALL: .text+0x4ed4] 
    /*00007388*/ B           RC_EndOneFrameNorStatus_x71ac
    RC_EndOneFrameNorStatus_x738c:
    /*0000738c*/ MOV         R2, #0 
    /*00007390*/ STR         R2, [R4, #1516]             @ 0x5ec 
    /*00007394*/ STR         R3, [R6, #8] 
    /*00007398*/ LDR         R1, [R4, #1548]             @ 0x60c 
    /*0000739c*/ STR         R2, [R4, #1520]             @ 0x5f0 
    /*000073a0*/ CMP         R1, #1 
    /*000073a4*/ STR         R3, [R4, #3144]             @ 0xc48 
    /*000073a8*/ BNE         RC_EndOneFrameNorStatus_x7334
    /*000073ac*/ CMN         R4, #304                    @ 0x130 
    /*000073b0*/ LDR         R7, [R4, #40]               @ 0x28 
    /*000073b4*/ LDR         R6, [R4, #44]               @ 0x2c 
    /*000073b8*/ BEQ         RC_EndOneFrameNorStatus_x7494
    RC_EndOneFrameNorStatus_x73bc:
    /*000073bc*/ LSRS        R3, R7, #16 
    /*000073c0*/ BNE         RC_EndOneFrameNorStatus_x7474
    RC_EndOneFrameNorStatus_x73c4:
    /*000073c4*/ LSRS        R2, R6, #16 
    /*000073c8*/ STR         R7, [R4, #304]              @ 0x130 
    /*000073cc*/ STR         R6, [R4, #308]              @ 0x134 
    /*000073d0*/ UXTHNE      R6, R6 
    /*000073d4*/ MULNE       R7, R2, R7 
    /*000073d8*/ MOV         R3, #0 
    /*000073dc*/ STREQ       R7, [R4, #312]              @ 0x138 
    /*000073e0*/ STR         R3, [R4, #328]              @ 0x148 
    /*000073e4*/ STR         R3, [R4, #324]              @ 0x144 
    /*000073e8*/ SUBEQ       R3, R7, R6 
    /*000073ec*/ SUBNE       R3, R7, R6 
    /*000073f0*/ STREQ       R6, [R4, #316]              @ 0x13c 
    /*000073f4*/ STREQ       R3, [R4, #320]              @ 0x140 
    /*000073f8*/ STRNE       R6, [R4, #316]              @ 0x13c 
    /*000073fc*/ STRNE       R3, [R4, #320]              @ 0x140 
    /*00007400*/ STRNE       R7, [R4, #312]              @ 0x138 
    /*00007404*/ CMP         R7, R6 
    /*00007408*/ BCS         RC_EndOneFrameNorStatus_x7428
    /*0000740c*/ MOVW        R3, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28cc] 
    /*00007410*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00007414*/ MOVT        R3, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28cc] 
    /*00007418*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*0000741c*/ MOV         R2, #199                    @ 0xc7 
    /*00007420*/ LDR         R1, [PC, #144]              @ 0x00000000000074b8 
    /*00007424*/ BL          0x0000000000007424          @ osal_panic [R_ARM_CALL: +0x0] 
    RC_EndOneFrameNorStatus_x7428:
    /*00007428*/ MOV         R1, #1 
    /*0000742c*/ MOV         R2, #0 
    /*00007430*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*00007434*/ STR         R1, [R4, #1504]             @ 0x5e0 
    /*00007438*/ STR         R2, [R4, #1548]             @ 0x60c 
    /*0000743c*/ B           RC_EndOneFrameNorStatus_x71f0
    RC_EndOneFrameNorStatus_x7440:
    /*00007440*/ MOV         R1, R5 
    /*00007444*/ ADD         R0, R0, #368                @ 0x170 
    /*00007448*/ BL          0x0000000000007448          @ RcWrFifoElem [R_ARM_CALL: .text+0x4ed4] 
    /*0000744c*/ LDR         R2, [R4, #344]              @ 0x158 
    /*00007450*/ LDR         R3, [R4, #352]              @ 0x160 
    /*00007454*/ ADD         R2, R5, R2 
    /*00007458*/ LDR         R1, [R4, #360]              @ 0x168 
    /*0000745c*/ CMP         R3, R2 
    /*00007460*/ MOVGE       R3, R2 
    /*00007464*/ ADD         R2, R1, #1 
    /*00007468*/ STR         R3, [R4, #344]              @ 0x158 
    /*0000746c*/ STR         R2, [R4, #360]              @ 0x168 
    /*00007470*/ B           RC_EndOneFrameNorStatus_x71ac
    RC_EndOneFrameNorStatus_x7474:
    /*00007474*/ MOVW        R3, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28b0] 
    /*00007478*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*0000747c*/ MOVT        R3, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28b0] 
    /*00007480*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00007484*/ MOV         R2, #172                    @ 0xac 
    /*00007488*/ LDR         R1, [PC, #40]               @ 0x00000000000074b8 
    /*0000748c*/ BL          0x000000000000748C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00007490*/ B           RC_EndOneFrameNorStatus_x73c4
    RC_EndOneFrameNorStatus_x7494:
    /*00007494*/ MOVW        R3, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x289c] 
    /*00007498*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*0000749c*/ MOVT        R3, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x289c] 
    /*000074a0*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*000074a4*/ MOV         R2, #169                    @ 0xa9 
    /*000074a8*/ LDR         R1, [PC, #8]                @ 0x00000000000074b8 
    /*000074ac*/ BL          0x00000000000074AC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000074b0*/ B           RC_EndOneFrameNorStatus_x73bc
    /*000074b4*/ ANDEQ       R0, R0, IP, LSL #7 
    /*000074b8*/ ANDEQ       R0, R0, R0, LSL #5 
FUNC_END RC_EndOneFrameNorStatus


FUNC_BEGIN RC_EndOneFrame
    /*000074bc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000074c0*/ SUBS        R9, R1, #0 
    /*000074c4*/ SUB         SP, SP, #36                 @ 0x24 
    /*000074c8*/ MOV         R8, R0 
    /*000074cc*/ MOV         R7, R2 
    /*000074d0*/ BEQ         RC_EndOneFrame_x7778
    RC_EndOneFrame_x74d4:
    /*000074d4*/ CMP         R7, #0 
    /*000074d8*/ BEQ         RC_EndOneFrame_x7820
    RC_EndOneFrame_x74dc:
    /*000074dc*/ CMP         R8, #15 
    /*000074e0*/ BHI         RC_EndOneFrame_x7624
    RC_EndOneFrame_x74e4:
    /*000074e4*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*000074e8*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*000074ec*/ LDR         R4, [R5, R8, LSL #2] 
    /*000074f0*/ CMP         R4, #0 
    /*000074f4*/ BEQ         RC_EndOneFrame_x7a8c
    /*000074f8*/ MOV         R0, #2 
    /*000074fc*/ ADD         R5, R5, #128                @ 0x80 
    /*00007500*/ BL          0x0000000000007500          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007504*/ ADD         R6, R4, #2496               @ 0x9c0 
    /*00007508*/ ADD         R5, R5, R8, LSL #2 
    /*0000750c*/ LDR         R3, [R0] 
    /*00007510*/ BLX         R3 
    /*00007514*/ STRD        R0, [R6, #-8] 
    /*00007518*/ MOV         R0, R5 
    /*0000751c*/ ADD         R1, SP, #28 
    /*00007520*/ BL          0x0000000000007520          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007524*/ LDRB        R1, [R9] 
    /*00007528*/ MOV         R0, R4 
    /*0000752c*/ BL          0x000000000000752C          @ RC_DRV_CheckRingDiscard [R_ARM_CALL: .text+0x115cc] 
    /*00007530*/ CMP         R0, #1 
    /*00007534*/ BEQ         RC_EndOneFrame_x7990
    /*00007538*/ MOV         FP, #1 
    /*0000753c*/ MOV         R3, #0 
    /*00007540*/ STR         FP, [R4, #1496]             @ 0x5d8 
    /*00007544*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00007548*/ STR         R3, [R7, #12] 
    /*0000754c*/ LDR         R0, [R4, #48]               @ 0x30 
    /*00007550*/ CMP         R0, R2 
    /*00007554*/ BEQ         RC_EndOneFrame_x7640
    /*00007558*/ STR         FP, [R4, #1580]             @ 0x62c 
    /*0000755c*/ LDRB        R2, [R9] 
    /*00007560*/ LDR         SL, [R4, #1640]             @ 0x668 
    /*00007564*/ CMP         R2, #255                    @ 0xff 
    /*00007568*/ BEQ         RC_EndOneFrame_x7678
    /*0000756c*/ LDR         R9, [R4] 
    /*00007570*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*00007574*/ CMP         R9, #3 
    /*00007578*/ BEQ         RC_EndOneFrame_x78f8
    RC_EndOneFrame_x757c:
    /*0000757c*/ MOV         R2, #4 
    /*00007580*/ STR         R2, [R4, #1496]             @ 0x5d8 
    RC_EndOneFrame_x7584:
    /*00007584*/ CMP         R3, #9 
    /*00007588*/ BEQ         RC_EndOneFrame_x75a4
    RC_EndOneFrame_x758c:
    /*0000758c*/ CMP         R3, #5 
    /*00007590*/ CMPNE       R3, #0 
    /*00007594*/ MOVEQ       R2, #0 
    /*00007598*/ MOVEQ       R3, #1 
    /*0000759c*/ STREQ       R2, [R4, #1564]             @ 0x61c 
    /*000075a0*/ STREQ       R3, [R4, #3144]             @ 0xc48 
    RC_EndOneFrame_x75a4:
    /*000075a4*/ MOV         R3, #1 
    /*000075a8*/ STR         R3, [R7] 
    /*000075ac*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*000075b0*/ MOV         R2, #2 
    /*000075b4*/ STR         R2, [R4, #1496]             @ 0x5d8 
    /*000075b8*/ CMP         R3, #9 
    /*000075bc*/ BEQ         RC_EndOneFrame_x75dc
    /*000075c0*/ ADD         R7, R4, #304                @ 0x130 
    /*000075c4*/ MOV         R1, #0 
    /*000075c8*/ MOV         R0, R7 
    /*000075cc*/ BL          0x00000000000075CC          @ RcUpdateAlgModel [R_ARM_CALL: .text+0x54ac] 
    /*000075d0*/ LDR         R3, [R4, #52]               @ 0x34 
    /*000075d4*/ CMP         R3, #4 
    /*000075d8*/ BEQ         RC_EndOneFrame_x77ac
    RC_EndOneFrame_x75dc:
    /*000075dc*/ ADD         R1, SP, #28 
    /*000075e0*/ MOV         R0, R5 
    RC_EndOneFrame_x75e4:
    /*000075e4*/ BL          0x00000000000075E4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000075e8*/ MOV         R0, #2 
    /*000075ec*/ BL          0x00000000000075EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000075f0*/ LDR         R3, [R0] 
    /*000075f4*/ BLX         R3 
    /*000075f8*/ LDRD        R2, [R6] 
    /*000075fc*/ LDRD        R4, [R6, #-8] 
    /*00007600*/ MOV         IP, #0 
    RC_EndOneFrame_x7604:
    /*00007604*/ SUBS        R2, R2, R4 
    /*00007608*/ SBC         R3, R3, R5 
    /*0000760c*/ ADDS        R2, R2, R0 
    /*00007610*/ ADC         R3, R3, R1 
    /*00007614*/ MOV         R0, IP 
    /*00007618*/ STRD        R2, [R6] 
    /*0000761c*/ ADD         SP, SP, #36                 @ 0x24 
    /*00007620*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_EndOneFrame_x7624:
    /*00007624*/ MOV         R0, R8 
    /*00007628*/ BL          0x00000000000020F4 
    /*0000762c*/ SUBS        IP, R0, #0 
    /*00007630*/ BEQ         RC_EndOneFrame_x74e4
    RC_EndOneFrame_x7634:
    /*00007634*/ MOV         R0, IP 
    /*00007638*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000763c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_EndOneFrame_x7640:
    /*00007640*/ LDR         SL, [R9, #8] 
    /*00007644*/ MOVW        R1, #5264                   @ 0x1490 
    /*00007648*/ LDR         R2, [R4, #1996]             @ 0x7cc 
    /*0000764c*/ STR         R1, [R4, #1644]             @ 0x66c 
    /*00007650*/ STR         SL, [R4, #1640]             @ 0x668 
    /*00007654*/ STR         SL, [R4, #1648]             @ 0x670 
    /*00007658*/ STR         R2, [R4, #1652]             @ 0x674 
    /*0000765c*/ LDR         R2, [R9, #12] 
    /*00007660*/ CMP         R2, R3 
    /*00007664*/ BNE         RC_EndOneFrame_x77c0
    /*00007668*/ STR         FP, [R4, #1580]             @ 0x62c 
    /*0000766c*/ LDRB        R3, [R9] 
    /*00007670*/ ANDS        R3, R3, #1 
    /*00007674*/ BEQ         RC_EndOneFrame_x7798
    RC_EndOneFrame_x7678:
    /*00007678*/ LDR         R3, [R4, #52]               @ 0x34 
    /*0000767c*/ CMP         R3, #6 
    /*00007680*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*00007684*/ BEQ         RC_EndOneFrame_x783c
    /*00007688*/ CMP         R3, #5 
    /*0000768c*/ CMPNE       R3, #0 
    /*00007690*/ BEQ         RC_EndOneFrame_x7788
    RC_EndOneFrame_x7694:
    /*00007694*/ CMP         R3, #4 
    /*00007698*/ BEQ         RC_EndOneFrame_x7830
    /*0000769c*/ SUB         R2, R3, #4 
    /*000076a0*/ CMP         R3, #0 
    /*000076a4*/ CMPNE       R2, #1 
    /*000076a8*/ BLS         RC_EndOneFrame_x783c
    /*000076ac*/ LDR         R2, [R4, #2596]             @ 0xa24 
    /*000076b0*/ CMP         R2, SL 
    /*000076b4*/ BCS         RC_EndOneFrame_x783c
    RC_EndOneFrame_x76b8:
    /*000076b8*/ LDR         R2, [R4, #2588]             @ 0xa1c 
    /*000076bc*/ CMP         R2, #2 
    /*000076c0*/ BEQ         RC_EndOneFrame_x7a08
    /*000076c4*/ CMP         R2, #1 
    /*000076c8*/ MOVNE       R2, #1 
    /*000076cc*/ BEQ         RC_EndOneFrame_x7954
    RC_EndOneFrame_x76d0:
    /*000076d0*/ STR         R2, [R4, #1496]             @ 0x5d8 
    RC_EndOneFrame_x76d4:
    /*000076d4*/ CMP         R2, #2 
    /*000076d8*/ BEQ         RC_EndOneFrame_x7974
    RC_EndOneFrame_x76dc:
    /*000076dc*/ SUB         R1, R2, #2 
    /*000076e0*/ BIC         R1, R1, #2 
    RC_EndOneFrame_x76e4:
    /*000076e4*/ CMP         R3, #9 
    /*000076e8*/ BEQ         RC_EndOneFrame_x785c
    /*000076ec*/ CMP         R1, #0 
    /*000076f0*/ BEQ         RC_EndOneFrame_x758c
    RC_EndOneFrame_x76f4:
    /*000076f4*/ BIC         R9, R2, #2 
    /*000076f8*/ CMP         R9, #1 
    /*000076fc*/ BNE         RC_EndOneFrame_x7844
    /*00007700*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*00007704*/ CMP         R3, #3 
    /*00007708*/ STREQ       R9, [R4, #1496]             @ 0x5d8 
    /*0000770c*/ BEQ         RC_EndOneFrame_x774c
    /*00007710*/ MOV         R1, R4 
    /*00007714*/ MOV         R0, R8 
    /*00007718*/ BL          0x0000000000007718          @ RC_NewModelReEncDecision [R_ARM_CALL: .text+0xf758] 
    /*0000771c*/ CMP         R0, #1 
    /*00007720*/ MOVEQ       R3, #3 
    /*00007724*/ STREQ       R3, [R4, #1496]             @ 0x5d8 
    /*00007728*/ BEQ         RC_EndOneFrame_x7a10
    /*0000772c*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*00007730*/ STR         R9, [R4, #1496]             @ 0x5d8 
    RC_EndOneFrame_x7734:
    /*00007734*/ SUB         R2, R3, #5 
    /*00007738*/ CMP         R3, #0 
    /*0000773c*/ CMPNE       R2, #1 
    /*00007740*/ MOVLS       R3, #0 
    /*00007744*/ STRLS       R3, [R4, #1568]             @ 0x620 
    /*00007748*/ STRLS       R3, [R4, #1572]             @ 0x624 
    RC_EndOneFrame_x774c:
    /*0000774c*/ MOV         R1, R4 
    /*00007750*/ MOV         R0, R8 
    /*00007754*/ MOV         R8, #0 
    /*00007758*/ STR         R8, [R4, #1564]             @ 0x61c 
    /*0000775c*/ STR         R8, [R4, #3144]             @ 0xc48 
    /*00007760*/ BL          0x0000000000007760          @ RC_NewModeUpdateStatics [R_ARM_CALL: .text+0xf81c] 
    /*00007764*/ MOV         R2, SL 
    /*00007768*/ MOV         R1, R7 
    /*0000776c*/ MOV         R0, R4 
    /*00007770*/ BL          0x0000000000007770          @ RC_EndOneFrameNorStatus [R_ARM_CALL: .text+0x7168] 
    /*00007774*/ B           RC_EndOneFrame_x75dc
    RC_EndOneFrame_x7778:
    /*00007778*/ BL          0x000000000000211C 
    /*0000777c*/ SUBS        IP, R0, #0 
    /*00007780*/ BNE         RC_EndOneFrame_x7634
    /*00007784*/ B           RC_EndOneFrame_x74d4
    RC_EndOneFrame_x7788:
    /*00007788*/ LDR         R2, [R4, #2592]             @ 0xa20 
    /*0000778c*/ CMP         R2, SL 
    /*00007790*/ BCC         RC_EndOneFrame_x76b8
    /*00007794*/ B           RC_EndOneFrame_x7694
    RC_EndOneFrame_x7798:
    /*00007798*/ STR         R3, [R4, #1648]             @ 0x670 
    /*0000779c*/ MOV         R2, #4 
    /*000077a0*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*000077a4*/ STR         R2, [R4, #1496]             @ 0x5d8 
    /*000077a8*/ B           RC_EndOneFrame_x7584
    RC_EndOneFrame_x77ac:
    /*000077ac*/ ADD         R0, R4, #1440               @ 0x5a0 
    /*000077b0*/ MOV         R1, #0 
    /*000077b4*/ ADD         R0, R0, #4 
    /*000077b8*/ BL          0x00000000000077B8          @ RcWrFifoElem [R_ARM_CALL: .text+0x4ed4] 
    /*000077bc*/ B           RC_EndOneFrame_x75dc
    RC_EndOneFrame_x77c0:
    /*000077c0*/ STR         R3, [R4, #1580]             @ 0x62c 
    /*000077c4*/ MOV         R1, #3 
    /*000077c8*/ MOV         R2, #2 
    /*000077cc*/ STR         R1, [R4, #1496]             @ 0x5d8 
    /*000077d0*/ STR         R2, [R7] 
    /*000077d4*/ MOV         R0, R5 
    /*000077d8*/ LDR         R2, [R4, #320]              @ 0x140 
    /*000077dc*/ ADD         R1, SP, #28 
    /*000077e0*/ LDR         IP, [R4, #312]              @ 0x138 
    /*000077e4*/ LDR         LR, [R4, #328]              @ 0x148 
    /*000077e8*/ LDR         R5, [R4, #316]              @ 0x13c 
    /*000077ec*/ ADD         R2, R2, IP 
    /*000077f0*/ LDR         IP, [R4, #324]              @ 0x144 
    /*000077f4*/ SUB         LR, LR, #1 
    /*000077f8*/ SUB         R2, R2, R5 
    /*000077fc*/ STR         LR, [R4, #328]              @ 0x148 
    /*00007800*/ STR         R2, [R4, #320]              @ 0x140 
    /*00007804*/ SUB         R2, IP, #1 
    /*00007808*/ STR         R2, [R4, #324]              @ 0x144 
    /*0000780c*/ STR         R3, [SP, #20] 
    /*00007810*/ BL          0x0000000000007810          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007814*/ LDR         R3, [SP, #20] 
    /*00007818*/ MOV         IP, R3 
    /*0000781c*/ B           RC_EndOneFrame_x7634
    RC_EndOneFrame_x7820:
    /*00007820*/ BL          0x000000000000211C 
    /*00007824*/ SUBS        IP, R0, #0 
    /*00007828*/ BNE         RC_EndOneFrame_x7634
    /*0000782c*/ B           RC_EndOneFrame_x74dc
    RC_EndOneFrame_x7830:
    /*00007830*/ LDR         R2, [R4, #2600]             @ 0xa28 
    /*00007834*/ CMP         R2, SL 
    /*00007838*/ BCC         RC_EndOneFrame_x76b8
    RC_EndOneFrame_x783c:
    /*0000783c*/ LDR         R2, [R4, #1496]             @ 0x5d8 
    /*00007840*/ B           RC_EndOneFrame_x76d4
    RC_EndOneFrame_x7844:
    /*00007844*/ CMP         R2, #3 
    /*00007848*/ BEQ         RC_EndOneFrame_x7a10
    /*0000784c*/ CMP         R2, #1 
    /*00007850*/ BNE         RC_EndOneFrame_x7aa8
    /*00007854*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*00007858*/ B           RC_EndOneFrame_x7734
    RC_EndOneFrame_x785c:
    /*0000785c*/ CMP         R1, #0 
    /*00007860*/ BEQ         RC_EndOneFrame_x75a4
    /*00007864*/ MOV         FP, #0 
    RC_EndOneFrame_x7868:
    /*00007868*/ LDR         R3, [R4, #1576]             @ 0x628 
    /*0000786c*/ MOV         R2, #1 
    /*00007870*/ MOV         R1, #2 
    /*00007874*/ STR         R2, [R4, #1564]             @ 0x61c 
    /*00007878*/ ADD         R3, R3, R2 
    /*0000787c*/ STR         R1, [R4, #1496]             @ 0x5d8 
    /*00007880*/ STR         R3, [R4, #1576]             @ 0x628 
    /*00007884*/ MOV         R3, #0 
    /*00007888*/ STR         R2, [R7, #12] 
    /*0000788c*/ LDR         R2, [R4, #1496]             @ 0x5d8 
    /*00007890*/ STR         R3, [R4, #3144]             @ 0xc48 
    /*00007894*/ SUB         R3, R2, #2 
    /*00007898*/ BICS        R3, R3, #2 
    /*0000789c*/ LDREQ       R3, [R4, #1508]             @ 0x5e4 
    /*000078a0*/ BEQ         RC_EndOneFrame_x758c
    /*000078a4*/ CMP         FP, #0 
    /*000078a8*/ BEQ         RC_EndOneFrame_x76f4
    RC_EndOneFrame_x78ac:
    /*000078ac*/ MOV         R8, #2 
    /*000078b0*/ STR         R8, [R7] 
    /*000078b4*/ LDR         R3, [R4, #320]              @ 0x140 
    /*000078b8*/ ADD         R1, SP, #28 
    /*000078bc*/ LDR         IP, [R4, #312]              @ 0x138 
    /*000078c0*/ MOV         R0, R5 
    /*000078c4*/ LDR         R2, [R4, #316]              @ 0x13c 
    /*000078c8*/ ADD         R3, R3, IP 
    /*000078cc*/ LDR         IP, [R4, #328]              @ 0x148 
    /*000078d0*/ SUB         R3, R3, R2 
    /*000078d4*/ LDR         R2, [R4, #324]              @ 0x144 
    /*000078d8*/ STR         R3, [R4, #320]              @ 0x140 
    /*000078dc*/ SUB         IP, IP, #1 
    /*000078e0*/ SUB         R3, R2, #1 
    /*000078e4*/ STR         IP, [R4, #328]              @ 0x148 
    /*000078e8*/ STR         R3, [R4, #324]              @ 0x144 
    /*000078ec*/ MOV         R3, #1 
    /*000078f0*/ STR         R3, [R4, #1496]             @ 0x5d8 
    /*000078f4*/ B           RC_EndOneFrame_x75e4
    RC_EndOneFrame_x78f8:
    /*000078f8*/ CMP         R3, #5 
    /*000078fc*/ BNE         RC_EndOneFrame_x757c
    /*00007900*/ TST         R2, #4 
    /*00007904*/ BEQ         RC_EndOneFrame_x7ad4
    /*00007908*/ TST         R2, #8 
    /*0000790c*/ BEQ         RC_EndOneFrame_x7b48
    /*00007910*/ TST         R2, #2 
    /*00007914*/ BNE         RC_EndOneFrame_x7b08
    /*00007918*/ STR         R2, [SP, #8] 
    /*0000791c*/ MOVW        R3, #4539                   @ 0x11bb 
    /*00007920*/ MOV         R1, #19 
    /*00007924*/ STR         R3, [SP] 
    /*00007928*/ MOV         R0, R9 
    /*0000792c*/ LDR         R3, [PC, #572]              @ 0x0000000000007b70 
    /*00007930*/ STR         R8, [SP, #4] 
    /*00007934*/ MOVW        R2, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d00] 
    /*00007938*/ MOVT        R2, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d00] 
    /*0000793c*/ BL          0x000000000000793C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007940*/ LDR         R2, [R4, #1496]             @ 0x5d8 
    /*00007944*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*00007948*/ SUB         R1, R2, #2 
    /*0000794c*/ BIC         R1, R1, #2 
    /*00007950*/ B           RC_EndOneFrame_x76e4
    RC_EndOneFrame_x7954:
    /*00007954*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00007958*/ CMP         R0, R2 
    /*0000795c*/ MOV         R2, #2 
    /*00007960*/ STR         R2, [R4, #1496]             @ 0x5d8 
    /*00007964*/ BEQ         RC_EndOneFrame_x7a98
    /*00007968*/ LDR         R2, [R4, #3260]             @ 0xcbc 
    /*0000796c*/ ADD         R2, R2, #64                 @ 0x40 
    /*00007970*/ STR         R2, [R4, #3260]             @ 0xcbc 
    RC_EndOneFrame_x7974:
    /*00007974*/ LDR         R2, [R4] 
    /*00007978*/ CMP         R2, #3 
    /*0000797c*/ BEQ         RC_EndOneFrame_x7a54
    RC_EndOneFrame_x7980:
    /*00007980*/ LDR         R2, [R4, #1496]             @ 0x5d8 
    /*00007984*/ SUB         R1, R2, #2 
    /*00007988*/ BIC         R1, R1, #2 
    /*0000798c*/ B           RC_EndOneFrame_x76e4
    RC_EndOneFrame_x7990:
    /*00007990*/ STR         R0, [R7] 
    /*00007994*/ MOV         R1, #0 
    /*00007998*/ ADD         R0, R4, #304                @ 0x130 
    /*0000799c*/ MOV         R7, #2 
    /*000079a0*/ STR         R7, [R4, #1496]             @ 0x5d8 
    /*000079a4*/ BL          0x00000000000079A4          @ RcUpdateAlgModel [R_ARM_CALL: .text+0x54ac] 
    /*000079a8*/ ADD         R1, SP, #28 
    /*000079ac*/ MOV         R0, R5 
    /*000079b0*/ BL          0x00000000000079B0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000079b4*/ MOV         R0, R7 
    /*000079b8*/ BL          0x00000000000079B8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000079bc*/ LDR         R3, [R0] 
    /*000079c0*/ BLX         R3 
    /*000079c4*/ LDRD        R2, [R6] 
    /*000079c8*/ LDRD        R4, [R6, #-8] 
    /*000079cc*/ MOVW        IP, #4441                   @ 0x1159 
    /*000079d0*/ SUBS        R4, R2, R4 
    /*000079d4*/ MOVW        R2, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c54] 
    /*000079d8*/ SBC         R5, R3, R5 
    /*000079dc*/ MOVT        R2, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c54] 
    /*000079e0*/ LDR         R3, [PC, #392]              @ 0x0000000000007b70 
    /*000079e4*/ ADDS        R4, R4, R0 
    /*000079e8*/ MOV         R0, #3 
    /*000079ec*/ ADC         R5, R5, R1 
    /*000079f0*/ MOV         R1, #19 
    /*000079f4*/ STRD        R4, [R6] 
    /*000079f8*/ STR         IP, [SP] 
    /*000079fc*/ BL          0x00000000000079FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007a00*/ MOV         IP, #0 
    /*00007a04*/ B           RC_EndOneFrame_x7634
    RC_EndOneFrame_x7a08:
    /*00007a08*/ MOV         R2, #3 
    /*00007a0c*/ B           RC_EndOneFrame_x76d0
    RC_EndOneFrame_x7a10:
    /*00007a10*/ MOV         R8, #2 
    /*00007a14*/ STR         R8, [R7] 
    /*00007a18*/ LDR         R3, [R4, #320]              @ 0x140 
    /*00007a1c*/ ADD         R1, SP, #28 
    /*00007a20*/ LDR         IP, [R4, #312]              @ 0x138 
    /*00007a24*/ MOV         R0, R5 
    /*00007a28*/ LDR         R2, [R4, #316]              @ 0x13c 
    /*00007a2c*/ ADD         R3, R3, IP 
    /*00007a30*/ LDR         IP, [R4, #328]              @ 0x148 
    /*00007a34*/ SUB         R3, R3, R2 
    /*00007a38*/ LDR         R2, [R4, #324]              @ 0x144 
    /*00007a3c*/ STR         R3, [R4, #320]              @ 0x140 
    /*00007a40*/ SUB         IP, IP, #1 
    /*00007a44*/ SUB         R3, R2, #1 
    /*00007a48*/ STR         IP, [R4, #328]              @ 0x148 
    /*00007a4c*/ STR         R3, [R4, #324]              @ 0x144 
    /*00007a50*/ B           RC_EndOneFrame_x75e4
    RC_EndOneFrame_x7a54:
    /*00007a54*/ CMP         R3, #5 
    /*00007a58*/ BNE         RC_EndOneFrame_x7980
    /*00007a5c*/ STR         R2, [R4, #1496]             @ 0x5d8 
    /*00007a60*/ MOVW        R3, #4589                   @ 0x11ed 
    /*00007a64*/ MOVW        R2, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d7c] 
    /*00007a68*/ STR         R3, [SP] 
    /*00007a6c*/ MOVT        R2, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d7c] 
    /*00007a70*/ LDR         R3, [PC, #248]              @ 0x0000000000007b70 
    /*00007a74*/ MOV         R1, #19 
    /*00007a78*/ MOV         R0, #6 
    /*00007a7c*/ BL          0x0000000000007A7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007a80*/ LDR         R2, [R4, #1496]             @ 0x5d8 
    /*00007a84*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*00007a88*/ B           RC_EndOneFrame_x76dc
    RC_EndOneFrame_x7a8c:
    /*00007a8c*/ MOVW        IP, #32773                  @ 0x8005 
    /*00007a90*/ MOVT        IP, #40979                  @ 0xa013 
    /*00007a94*/ B           RC_EndOneFrame_x7634
    RC_EndOneFrame_x7a98:
    /*00007a98*/ LDR         R2, [R4, #3260]             @ 0xcbc 
    /*00007a9c*/ SUB         R2, R2, #64                 @ 0x40 
    /*00007aa0*/ STR         R2, [R4, #3260]             @ 0xcbc 
    /*00007aa4*/ B           RC_EndOneFrame_x7974
    RC_EndOneFrame_x7aa8:
    /*00007aa8*/ ADD         R1, SP, #28 
    /*00007aac*/ MOV         R0, R5 
    /*00007ab0*/ BL          0x0000000000007AB0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007ab4*/ MOV         R0, #2 
    /*00007ab8*/ BL          0x0000000000007AB8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007abc*/ LDR         R3, [R0] 
    /*00007ac0*/ BLX         R3 
    /*00007ac4*/ LDRD        R2, [R6] 
    /*00007ac8*/ LDRD        R4, [R6, #-8] 
    /*00007acc*/ MVN         IP, #0 
    /*00007ad0*/ B           RC_EndOneFrame_x7604
    RC_EndOneFrame_x7ad4:
    /*00007ad4*/ MOVW        R3, #4528                   @ 0x11b0 
    /*00007ad8*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c88] 
    /*00007adc*/ STR         R3, [SP] 
    /*00007ae0*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c88] 
    /*00007ae4*/ LDR         R3, [PC, #132]              @ 0x0000000000007b70 
    /*00007ae8*/ MOV         R1, #19 
    /*00007aec*/ MOV         R0, #4 
    /*00007af0*/ BL          0x0000000000007AF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007af4*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*00007af8*/ STR         R9, [R4, #1496]             @ 0x5d8 
    /*00007afc*/ CMP         R3, #9 
    /*00007b00*/ BNE         RC_EndOneFrame_x78ac
    /*00007b04*/ B           RC_EndOneFrame_x7868
    RC_EndOneFrame_x7b08:
    /*00007b08*/ MOVW        R0, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d5c] 
    /*00007b0c*/ MOV         R1, R8 
    /*00007b10*/ MOVT        R0, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d5c] 
    /*00007b14*/ BL          0x0000000000007B14          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00007b18*/ MOVW        R3, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c24] 
    /*00007b1c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00007b20*/ MOVT        R3, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c24] 
    /*00007b24*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00007b28*/ MOV         R2, #4544                   @ 0x11c0 
    RC_EndOneFrame_x7b2c:
    /*00007b2c*/ LDR         R1, [PC, #60]               @ 0x0000000000007b70 
    /*00007b30*/ BL          0x0000000000007B30          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00007b34*/ LDR         R2, [R4, #1496]             @ 0x5d8 
    /*00007b38*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*00007b3c*/ SUB         R1, R2, #2 
    /*00007b40*/ BIC         R1, R1, #2 
    /*00007b44*/ B           RC_EndOneFrame_x76e4
    RC_EndOneFrame_x7b48:
    /*00007b48*/ MOV         R1, R2 
    /*00007b4c*/ MOVW        R0, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2cc4] 
    /*00007b50*/ MOVT        R0, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2cc4] 
    /*00007b54*/ BL          0x0000000000007B54          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00007b58*/ MOVW        R3, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c24] 
    /*00007b5c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00007b60*/ MOVT        R3, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c24] 
    /*00007b64*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00007b68*/ MOVW        R2, #4535                   @ 0x11b7 
    /*00007b6c*/ B           RC_EndOneFrame_x7b2c
    /*00007b70*/ ANDEQ       R0, R0, R4, LSR #7 
FUNC_END RC_EndOneFrame


FUNC_BEGIN Rc_GetDoAttrMode_ByGopType
    /*00007b74*/ LDR         R3, [R1, #48]               @ 0x30 
    /*00007b78*/ MOVW        R2, #265                    @ 0x109 
    /*00007b7c*/ CMP         R3, R2 
    /*00007b80*/ CMPNE       R3, #96                     @ 0x60 
    /*00007b84*/ MOVEQ       R3, #1 
    /*00007b88*/ MOVNE       R3, #0 
    /*00007b8c*/ BNE         Rc_GetDoAttrMode_ByGopType_x7b94
    /*00007b90*/ B           0x00000000000021C0 
    Rc_GetDoAttrMode_ByGopType_x7b94:
    /*00007b94*/ MOV         R0, R3 
    /*00007b98*/ BX          LR 
FUNC_END Rc_GetDoAttrMode_ByGopType


FUNC_BEGIN Rc_GetDoAttrMode_ByRcType
    /*00007b9c*/ LDR         R2, [R0, #32] 
    /*00007ba0*/ LDR         R3, [R1, #32] 
    /*00007ba4*/ CMP         R2, R3 
    /*00007ba8*/ BEQ         Rc_GetDoAttrMode_ByRcType_x7bb4
    Rc_GetDoAttrMode_ByRcType_x7bac:
    /*00007bac*/ MOV         R0, #2 
    /*00007bb0*/ BX          LR 
    Rc_GetDoAttrMode_ByRcType_x7bb4:
    /*00007bb4*/ LDR         R2, [R0, #40]               @ 0x28 
    /*00007bb8*/ LDR         R3, [R1, #40]               @ 0x28 
    /*00007bbc*/ CMP         R2, R3 
    /*00007bc0*/ BNE         Rc_GetDoAttrMode_ByRcType_x7bac
    /*00007bc4*/ LDR         R2, [R0, #44]               @ 0x2c 
    /*00007bc8*/ LDR         R3, [R1, #44]               @ 0x2c 
    /*00007bcc*/ CMP         R2, R3 
    /*00007bd0*/ BNE         Rc_GetDoAttrMode_ByRcType_x7bac
    /*00007bd4*/ LDR         R2, [R0, #36]               @ 0x24 
    /*00007bd8*/ LDR         R3, [R1, #36]               @ 0x24 
    /*00007bdc*/ CMP         R2, R3 
    /*00007be0*/ BNE         Rc_GetDoAttrMode_ByRcType_x7bac
    /*00007be4*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00007be8*/ CMP         R3, #4 
    /*00007bec*/ BEQ         Rc_GetDoAttrMode_ByRcType_x7c30
    /*00007bf0*/ CMP         R3, #3 
    /*00007bf4*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*00007bf8*/ B           Rc_GetDoAttrMode_ByRcType_x7c78
    /*00007bfc*/ ANDEQ       R7, R0, IP, LSL #24 
    /*00007c00*/ ANDEQ       R7, R0, IP, LSL #24 
    /*00007c04*/ ANDEQ       R7, R0, IP, LSL #24 
    /*00007c08*/ ANDEQ       R7, R0, IP, LSL #24 
    /*00007c0c*/ LDR         R2, [R0, #56]               @ 0x38 
    /*00007c10*/ LDR         R3, [R1, #56]               @ 0x38 
    /*00007c14*/ CMP         R2, R3 
    /*00007c18*/ BEQ         Rc_GetDoAttrMode_ByRcType_x7c78
    /*00007c1c*/ LDR         R3, [R1, #3128]             @ 0xc38 
    /*00007c20*/ CMP         R3, #1 
    /*00007c24*/ MOVEQ       R0, #2 
    /*00007c28*/ MOVNE       R0, #1 
    /*00007c2c*/ BX          LR 
    Rc_GetDoAttrMode_ByRcType_x7c30:
    /*00007c30*/ LDR         R2, [R0, #64]               @ 0x40 
    /*00007c34*/ LDR         R3, [R1, #64]               @ 0x40 
    /*00007c38*/ CMP         R2, R3 
    /*00007c3c*/ BNE         Rc_GetDoAttrMode_ByRcType_x7bac
    /*00007c40*/ LDR         R2, [R0, #60]               @ 0x3c 
    /*00007c44*/ LDR         R3, [R1, #60]               @ 0x3c 
    /*00007c48*/ CMP         R2, R3 
    /*00007c4c*/ BNE         Rc_GetDoAttrMode_ByRcType_x7bac
    /*00007c50*/ LDR         R2, [R0, #68]               @ 0x44 
    /*00007c54*/ LDR         R3, [R1, #68]               @ 0x44 
    /*00007c58*/ CMP         R2, R3 
    /*00007c5c*/ BNE         Rc_GetDoAttrMode_ByRcType_x7bac
    /*00007c60*/ LDR         R0, [R0, #72]               @ 0x48 
    /*00007c64*/ LDR         R3, [R1, #72]               @ 0x48 
    /*00007c68*/ CMP         R0, R3 
    /*00007c6c*/ MOVNE       R0, #2 
    /*00007c70*/ MOVEQ       R0, #0 
    /*00007c74*/ BX          LR 
    Rc_GetDoAttrMode_ByRcType_x7c78:
    /*00007c78*/ MOV         R0, #0 
    /*00007c7c*/ BX          LR 
FUNC_END Rc_GetDoAttrMode_ByRcType


FUNC_BEGIN Rc_GetDoAttrMode.part.15
    /*00007c80*/ LDR         R3, [R2, #48]               @ 0x30 
    /*00007c84*/ MOVW        IP, #265                    @ 0x109 
    /*00007c88*/ PUSH        {R4, LR} 
    /*00007c8c*/ CMP         R3, IP 
    /*00007c90*/ CMPNE       R3, #96                     @ 0x60 
    /*00007c94*/ MOV         R4, R0 
    /*00007c98*/ BNE         Rc_GetDoAttrMode.part.15_x7cb0
    /*00007c9c*/ MOV         R0, R1 
    /*00007ca0*/ MOV         R1, R2 
    /*00007ca4*/ BL          0x00000000000021C0 
    /*00007ca8*/ CMP         R0, #2 
    /*00007cac*/ POPEQ       {R4, PC} 
    Rc_GetDoAttrMode.part.15_x7cb0:
    /*00007cb0*/ MOV         R0, R4 
    /*00007cb4*/ MOV         R1, R2 
    /*00007cb8*/ POP         {R4, LR} 
    Rc_GetDoAttrMode.part.15_x7cbc:
    /*00007cbc*/ B           Rc_GetDoAttrMode.part.15_x7cbc@ Rc_GetDoAttrMode_ByRcType [R_ARM_JUMP24: .text+0x7b9c] 
FUNC_END Rc_GetDoAttrMode.part.15


FUNC_BEGIN Rc_GetDoAttrMode
    /*00007cc0*/ LDR         IP, [R0, #52]               @ 0x34 
    /*00007cc4*/ LDR         R3, [R2, #52]               @ 0x34 
    /*00007cc8*/ CMP         IP, R3 
    /*00007ccc*/ BEQ         Rc_GetDoAttrMode_x7cd8
    /*00007cd0*/ MOV         R0, #3 
    /*00007cd4*/ BX          LR 
    Rc_GetDoAttrMode_x7cd8:
    /*00007cd8*/ B           0x0000000000007C80 
FUNC_END Rc_GetDoAttrMode


FUNC_BEGIN Rc_GetResolutionStatus
    /*00007cdc*/ LDR         R2, [R1, #2504]             @ 0x9c8 
    /*00007ce0*/ LDR         R3, [R0] 
    /*00007ce4*/ CMP         R2, R3 
    /*00007ce8*/ BEQ         Rc_GetResolutionStatus_x7cf4
    /*00007cec*/ MOV         R0, #1 
    /*00007cf0*/ BX          LR 
    Rc_GetResolutionStatus_x7cf4:
    /*00007cf4*/ LDR         R3, [R1, #2508]             @ 0x9cc 
    /*00007cf8*/ LDR         R0, [R0, #4] 
    /*00007cfc*/ SUBS        R0, R3, R0 
    /*00007d00*/ MOVNE       R0, #1 
    /*00007d04*/ BX          LR 
FUNC_END Rc_GetResolutionStatus


FUNC_BEGIN RC_ParamInit
    /*00007d08*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00007d0c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00007d10*/ PUSH        {R4, R5, R6, LR} 
    /*00007d14*/ MOV         R5, #0 
    /*00007d18*/ LDR         R4, [R3, R0, LSL #2] 
    /*00007d1c*/ MOV         R6, R0 
    /*00007d20*/ MOV         R3, #83886080               @ 0x5000000 
    /*00007d24*/ MOV         R0, R1 
    /*00007d28*/ ADD         R1, R4, #80                 @ 0x50 
    /*00007d2c*/ STR         R3, [R4, #2452]             @ 0x994 
    /*00007d30*/ STR         R5, [R4, #2448]             @ 0x990 
    /*00007d34*/ STR         R5, [R4, #2456]             @ 0x998 
    /*00007d38*/ STR         R5, [R4, #2460]             @ 0x99c 
    /*00007d3c*/ BL          0x0000000000007D3C          @ RC_DRV_InitParam [R_ARM_CALL: .text+0x10d38] 
    /*00007d40*/ MOV         R0, R4 
    /*00007d44*/ BL          0x0000000000007D44          @ RcInitAlgModel [R_ARM_CALL: .text+0x500c] 
    /*00007d48*/ MOV         R1, R4 
    /*00007d4c*/ MOV         R0, R6 
    /*00007d50*/ BL          0x0000000000007D50          @ RC_NewModeInit [R_ARM_CALL: .text+0xc220] 
    /*00007d54*/ ADD         R0, R4, #1488               @ 0x5d0 
    /*00007d58*/ ADD         R0, R0, #8 
    /*00007d5c*/ BL          0x0000000000007D5C          @ RcInitRunInfo [R_ARM_CALL: .text+0x5658] 
    /*00007d60*/ ADD         R0, R4, #2576               @ 0xa10 
    /*00007d64*/ MOV         R3, #1 
    /*00007d68*/ ADD         R0, R0, #12 
    /*00007d6c*/ STR         R3, [R4, #3096]             @ 0xc18 
    /*00007d70*/ BL          0x0000000000007D70          @ RcInitSuperFrmCfg [R_ARM_CALL: .text+0x56d4] 
    /*00007d74*/ ADD         R0, R4, #2608               @ 0xa30 
    /*00007d78*/ BL          0x0000000000007D78          @ RcInitSobelCfg [R_ARM_CALL: .text+0x5728] 
    /*00007d7c*/ MOV         R0, R5 
    /*00007d80*/ POP         {R4, R5, R6, PC} 
FUNC_END RC_ParamInit


FUNC_BEGIN Rc_FreeStatFifoBuf
    /*00007d84*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00007d88*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00007d8c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00007d90*/ ADD         R5, R3, #128                @ 0x80 
    /*00007d94*/ LDR         R4, [R3, R0, LSL #2] 
    /*00007d98*/ ADD         R5, R5, R0, LSL #2 
    /*00007d9c*/ SUB         SP, SP, #16 
    /*00007da0*/ MOV         R0, R5 
    /*00007da4*/ ADD         R1, SP, #12 
    /*00007da8*/ BL          0x0000000000007DA8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007dac*/ LDR         R3, [R4, #432]              @ 0x1b0 
    /*00007db0*/ CMP         R3, #2 
    /*00007db4*/ BEQ         Rc_FreeStatFifoBuf_x7dfc
    /*00007db8*/ LDR         R3, [R4, #1476]             @ 0x5c4 
    /*00007dbc*/ CMP         R3, #2 
    /*00007dc0*/ BNE         Rc_FreeStatFifoBuf_x7ee8
    /*00007dc4*/ LDR         R7, [R4, #1480]             @ 0x5c8 
    /*00007dc8*/ CMP         R7, #0 
    /*00007dcc*/ BEQ         Rc_FreeStatFifoBuf_x7e40
    /*00007dd0*/ MOV         R3, #0 
    /*00007dd4*/ ADD         R1, SP, #12 
    /*00007dd8*/ MOV         R0, R5 
    /*00007ddc*/ STR         R3, [R4, #1480]             @ 0x5c8 
    /*00007de0*/ STR         R3, [R4, #1476]             @ 0x5c4 
    /*00007de4*/ BL          0x0000000000007DE4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    Rc_FreeStatFifoBuf_x7de8:
    /*00007de8*/ MOV         R0, R7 
    /*00007dec*/ BL          0x0000000000007DEC          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00007df0*/ MOV         R0, #0 
    Rc_FreeStatFifoBuf_x7df4:
    /*00007df4*/ ADD         SP, SP, #16 
    /*00007df8*/ POP         {R4, R5, R6, R7, R8, PC} 
    Rc_FreeStatFifoBuf_x7dfc:
    /*00007dfc*/ LDR         R8, [R4, #436]              @ 0x1b4 
    /*00007e00*/ CMP         R8, #0 
    /*00007e04*/ BEQ         Rc_FreeStatFifoBuf_x7e80
    /*00007e08*/ LDR         R3, [R4, #1476]             @ 0x5c4 
    /*00007e0c*/ MOV         R6, #0 
    /*00007e10*/ STR         R6, [R4, #436]              @ 0x1b4 
    /*00007e14*/ CMP         R3, #2 
    /*00007e18*/ STR         R6, [R4, #432]              @ 0x1b0 
    /*00007e1c*/ BEQ         Rc_FreeStatFifoBuf_x7ebc
    /*00007e20*/ ADD         R1, SP, #12 
    /*00007e24*/ MOV         R0, R5 
    /*00007e28*/ BL          0x0000000000007E28          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007e2c*/ MOV         R0, R8 
    /*00007e30*/ BL          0x0000000000007E30          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00007e34*/ MOV         R0, R6 
    /*00007e38*/ ADD         SP, SP, #16 
    /*00007e3c*/ POP         {R4, R5, R6, R7, R8, PC} 
    Rc_FreeStatFifoBuf_x7e40:
    /*00007e40*/ MOVW        R3, #4931                   @ 0x1343 
    /*00007e44*/ MOV         R1, #19 
    /*00007e48*/ STR         R3, [SP] 
    /*00007e4c*/ MOVW        R2, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2dbc] 
    /*00007e50*/ LDR         R3, [PC, #164]              @ 0x0000000000007efc 
    /*00007e54*/ MOVT        R2, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2dbc] 
    /*00007e58*/ MOV         R0, #3 
    /*00007e5c*/ BL          0x0000000000007E5C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007e60*/ MOV         R0, R5 
    /*00007e64*/ MOV         R3, #0 
    /*00007e68*/ ADD         R1, SP, #12 
    /*00007e6c*/ STR         R3, [R4, #1476]             @ 0x5c4 
    /*00007e70*/ BL          0x0000000000007E70          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007e74*/ MOVW        R0, #32774                  @ 0x8006 
    /*00007e78*/ MOVT        R0, #40979                  @ 0xa013 
    /*00007e7c*/ B           Rc_FreeStatFifoBuf_x7df4
    Rc_FreeStatFifoBuf_x7e80:
    /*00007e80*/ MOVW        R3, #4916                   @ 0x1334 
    /*00007e84*/ MOV         R1, #19 
    /*00007e88*/ STR         R3, [SP] 
    /*00007e8c*/ MOVW        R2, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2dbc] 
    /*00007e90*/ LDR         R3, [PC, #100]              @ 0x0000000000007efc 
    /*00007e94*/ MOVT        R2, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2dbc] 
    /*00007e98*/ MOV         R0, #3 
    /*00007e9c*/ BL          0x0000000000007E9C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007ea0*/ MOV         R0, R5 
    /*00007ea4*/ STR         R8, [R4, #432]              @ 0x1b0 
    /*00007ea8*/ ADD         R1, SP, #12 
    /*00007eac*/ BL          0x0000000000007EAC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007eb0*/ MOVW        R0, #32774                  @ 0x8006 
    /*00007eb4*/ MOVT        R0, #40979                  @ 0xa013 
    /*00007eb8*/ B           Rc_FreeStatFifoBuf_x7df4
    Rc_FreeStatFifoBuf_x7ebc:
    /*00007ebc*/ LDR         R7, [R4, #1480]             @ 0x5c8 
    /*00007ec0*/ CMP         R7, #0 
    /*00007ec4*/ BEQ         Rc_FreeStatFifoBuf_x7e40
    /*00007ec8*/ MOV         R0, R5 
    /*00007ecc*/ STR         R6, [R4, #1480]             @ 0x5c8 
    /*00007ed0*/ ADD         R1, SP, #12 
    /*00007ed4*/ STR         R6, [R4, #1476]             @ 0x5c4 
    /*00007ed8*/ BL          0x0000000000007ED8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007edc*/ MOV         R0, R8 
    /*00007ee0*/ BL          0x0000000000007EE0          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00007ee4*/ B           Rc_FreeStatFifoBuf_x7de8
    Rc_FreeStatFifoBuf_x7ee8:
    /*00007ee8*/ MOV         R0, R5 
    /*00007eec*/ ADD         R1, SP, #12 
    /*00007ef0*/ BL          0x0000000000007EF0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007ef4*/ MOV         R0, #0 
    /*00007ef8*/ B           Rc_FreeStatFifoBuf_x7df4
    /*00007efc*/ @           <UNDEFINED> instruction: 0x000003b4 
FUNC_END Rc_FreeStatFifoBuf


FUNC_BEGIN RcAllocStatFifoBuf
    /*00007f00*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00007f04*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00007f08*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00007f0c*/ MOV         R8, R0 
    /*00007f10*/ LDR         R3, [R1] 
    /*00007f14*/ SUB         SP, SP, #20 
    /*00007f18*/ LDR         R6, [R2, R0, LSL #2] 
    /*00007f1c*/ LDR         R5, [R1, #36]               @ 0x24 
    /*00007f20*/ SUB         R3, R3, #2 
    /*00007f24*/ LDR         R0, [R1, #40]               @ 0x28 
    /*00007f28*/ CMP         R3, #1 
    /*00007f2c*/ LDR         R2, [R6, #440]              @ 0x1b8 
    /*00007f30*/ LDRLS       R7, [R1, #24] 
    /*00007f34*/ MUL         R5, R5, R0 
    /*00007f38*/ LDRHI       R7, [R1, #32] 
    /*00007f3c*/ LDR         R3, [R6, #444]              @ 0x1bc 
    /*00007f40*/ LSL         R7, R7, #2 
    /*00007f44*/ CMP         R7, R2 
    /*00007f48*/ LSL         R5, R5, #2 
    /*00007f4c*/ MOVCC       R7, R2 
    /*00007f50*/ CMP         R5, R3 
    /*00007f54*/ LDR         R2, [R6, #448]              @ 0x1c0 
    /*00007f58*/ MOVCC       R5, R3 
    /*00007f5c*/ ADD         R4, R5, #4080               @ 0xff0 
    /*00007f60*/ ADD         R4, R4, #15 
    /*00007f64*/ ADD         R4, R4, R7 
    /*00007f68*/ BIC         R4, R4, #4080               @ 0xff0 
    /*00007f6c*/ BIC         R4, R4, #15 
    /*00007f70*/ CMP         R4, R2 
    /*00007f74*/ BLS         RcAllocStatFifoBuf_x7fe8
    /*00007f78*/ MOV         R0, R4 
    /*00007f7c*/ BL          0x0000000000007F7C          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00007f80*/ SUBS        R9, R0, #0 
    /*00007f84*/ BEQ         RcAllocStatFifoBuf_x801c
    /*00007f88*/ MOV         R2, R4 
    /*00007f8c*/ MOV         R1, #0 
    /*00007f90*/ BL          0x0000000000007F90          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00007f94*/ LDR         R3, [PC, #176]              @ 0x000000000000804c 
    /*00007f98*/ STR         R4, [R6, #448]              @ 0x1c0 
    /*00007f9c*/ ADD         R1, SP, #12 
    /*00007fa0*/ ADD         R8, R3, R8, LSL #2 
    /*00007fa4*/ MOV         R0, R8 
    /*00007fa8*/ BL          0x0000000000007FA8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007fac*/ LDR         R4, [R6, #436]              @ 0x1b4 
    /*00007fb0*/ MOV         R0, R8 
    /*00007fb4*/ MOV         R3, #1 
    /*00007fb8*/ ADD         R1, SP, #12 
    /*00007fbc*/ STR         R7, [R6, #440]              @ 0x1b8 
    /*00007fc0*/ STR         R5, [R6, #444]              @ 0x1bc 
    /*00007fc4*/ STR         R9, [R6, #436]              @ 0x1b4 
    /*00007fc8*/ STR         R3, [R6, #432]              @ 0x1b0 
    /*00007fcc*/ BL          0x0000000000007FCC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007fd0*/ SUBS        R0, R4, #0 
    /*00007fd4*/ BEQ         RcAllocStatFifoBuf_x7fe0
    /*00007fd8*/ BL          0x0000000000007FD8          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00007fdc*/ MOV         R0, #0 
    RcAllocStatFifoBuf_x7fe0:
    /*00007fe0*/ ADD         SP, SP, #20 
    /*00007fe4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    RcAllocStatFifoBuf_x7fe8:
    /*00007fe8*/ LDR         R3, [PC, #92]               @ 0x000000000000804c 
    /*00007fec*/ ADD         R1, SP, #12 
    /*00007ff0*/ ADD         R8, R3, R8, LSL #2 
    /*00007ff4*/ MOV         R0, R8 
    /*00007ff8*/ BL          0x0000000000007FF8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007ffc*/ MOV         R0, R8 
    /*00008000*/ ADD         R1, SP, #12 
    /*00008004*/ STR         R7, [R6, #440]              @ 0x1b8 
    /*00008008*/ STR         R5, [R6, #444]              @ 0x1bc 
    /*0000800c*/ BL          0x000000000000800C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008010*/ MOV         R0, #0 
    /*00008014*/ ADD         SP, SP, #20 
    /*00008018*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    RcAllocStatFifoBuf_x801c:
    /*0000801c*/ MOVW        R3, #5009                   @ 0x1391 
    /*00008020*/ STR         R8, [SP, #4] 
    /*00008024*/ STR         R3, [SP] 
    /*00008028*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2df0] 
    /*0000802c*/ LDR         R3, [PC, #28]               @ 0x0000000000008050 
    /*00008030*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2df0] 
    /*00008034*/ MOV         R1, #19 
    /*00008038*/ MOV         R0, #3 
    /*0000803c*/ BL          0x000000000000803C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008040*/ MOVW        R0, #32780                  @ 0x800c 
    /*00008044*/ MOVT        R0, #40979                  @ 0xa013 
    /*00008048*/ B           RcAllocStatFifoBuf_x7fe0
    /*0000804c*/ ANDEQ       R0, R0, R8, LSL #6 
    /*00008050*/ ANDEQ       R0, R0, R8, ASR #7 
FUNC_END RcAllocStatFifoBuf


FUNC_BEGIN RcAllocStatCvbrFifoBuf
    /*00008054*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00008058*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*0000805c*/ LDR         R3, [R1, #40]               @ 0x28 
    /*00008060*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00008064*/ LDR         R6, [R1, #60]               @ 0x3c 
    /*00008068*/ SUB         SP, SP, #16 
    /*0000806c*/ LDR         R7, [R5, R0, LSL #2] 
    /*00008070*/ MOV         R9, R0 
    /*00008074*/ LDR         R8, [R1, #64]               @ 0x40 
    /*00008078*/ MUL         R6, R6, R3 
    /*0000807c*/ LDR         R2, [R7, #1484]             @ 0x5cc 
    /*00008080*/ LSL         R8, R8, #2 
    /*00008084*/ LDR         R3, [R7, #1488]             @ 0x5d0 
    /*00008088*/ CMP         R8, R2 
    /*0000808c*/ LDR         R1, [R7, #1472]             @ 0x5c0 
    /*00008090*/ MOVCC       R8, R2 
    /*00008094*/ LSL         R6, R6, #2 
    /*00008098*/ CMP         R6, R3 
    /*0000809c*/ MOVCC       R6, R3 
    /*000080a0*/ ADD         R4, R8, R6 
    /*000080a4*/ ADD         R4, R4, #4080               @ 0xff0 
    /*000080a8*/ ADD         R4, R4, #15 
    /*000080ac*/ BIC         R4, R4, #4080               @ 0xff0 
    /*000080b0*/ BIC         R4, R4, #15 
    /*000080b4*/ CMP         R4, R1 
    /*000080b8*/ BLS         RcAllocStatCvbrFifoBuf_x812c
    /*000080bc*/ MOV         R0, R4 
    /*000080c0*/ BL          0x00000000000080C0          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*000080c4*/ SUBS        SL, R0, #0 
    /*000080c8*/ BEQ         RcAllocStatCvbrFifoBuf_x8160
    /*000080cc*/ ADD         R5, R5, #128                @ 0x80 
    /*000080d0*/ MOV         R2, R4 
    /*000080d4*/ ADD         R5, R5, R9, LSL #2 
    /*000080d8*/ MOV         R1, #0 
    /*000080dc*/ BL          0x00000000000080DC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000080e0*/ STR         R4, [R7, #1472]             @ 0x5c0 
    /*000080e4*/ MOV         R0, R5 
    /*000080e8*/ ADD         R1, SP, #12 
    /*000080ec*/ BL          0x00000000000080EC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000080f0*/ LDR         R4, [R7, #1480]             @ 0x5c8 
    /*000080f4*/ MOV         R0, R5 
    /*000080f8*/ MOV         R3, #1 
    /*000080fc*/ ADD         R1, SP, #12 
    /*00008100*/ STR         R8, [R7, #1484]             @ 0x5cc 
    /*00008104*/ STR         R6, [R7, #1488]             @ 0x5d0 
    /*00008108*/ STR         SL, [R7, #1480]             @ 0x5c8 
    /*0000810c*/ STR         R3, [R7, #1476]             @ 0x5c4 
    /*00008110*/ BL          0x0000000000008110          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008114*/ SUBS        R0, R4, #0 
    /*00008118*/ BEQ         RcAllocStatCvbrFifoBuf_x8124
    /*0000811c*/ BL          0x000000000000811C          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00008120*/ MOV         R0, #0 
    RcAllocStatCvbrFifoBuf_x8124:
    /*00008124*/ ADD         SP, SP, #16 
    /*00008128*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    RcAllocStatCvbrFifoBuf_x812c:
    /*0000812c*/ ADD         R5, R5, #128                @ 0x80 
    /*00008130*/ ADD         R1, SP, #12 
    /*00008134*/ ADD         R5, R5, R0, LSL #2 
    /*00008138*/ MOV         R0, R5 
    /*0000813c*/ BL          0x000000000000813C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008140*/ MOV         R0, R5 
    /*00008144*/ ADD         R1, SP, #12 
    /*00008148*/ STR         R8, [R7, #1484]             @ 0x5cc 
    /*0000814c*/ STR         R6, [R7, #1488]             @ 0x5d0 
    /*00008150*/ BL          0x0000000000008150          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008154*/ MOV         R0, #0 
    /*00008158*/ ADD         SP, SP, #16 
    /*0000815c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    RcAllocStatCvbrFifoBuf_x8160:
    /*00008160*/ MOVW        R3, #5075                   @ 0x13d3 
    /*00008164*/ STR         R9, [SP, #4] 
    /*00008168*/ STR         R3, [SP] 
    /*0000816c*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2df0] 
    /*00008170*/ LDR         R3, [PC, #24]               @ 0x0000000000008190 
    /*00008174*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2df0] 
    /*00008178*/ MOV         R1, #19 
    /*0000817c*/ MOV         R0, #3 
    /*00008180*/ BL          0x0000000000008180          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008184*/ MOVW        R0, #32780                  @ 0x800c 
    /*00008188*/ MOVT        R0, #40979                  @ 0xa013 
    /*0000818c*/ B           RcAllocStatCvbrFifoBuf_x8124
    /*00008190*/ LDRDEQ      R0, [R0], -IP 
FUNC_END RcAllocStatCvbrFifoBuf


FUNC_BEGIN Rc_AllocStatFifoBuf
    /*00008194*/ PUSH        {R4, R5, R6, LR} 
    /*00008198*/ SUB         SP, SP, #88                 @ 0x58 
    /*0000819c*/ ADD         R2, R1, #48                 @ 0x30 
    /*000081a0*/ MOV         R6, R0 
    /*000081a4*/ MOV         R4, R1 
    /*000081a8*/ ADD         R0, R1, #8 
    /*000081ac*/ ADD         R1, SP, #8 
    /*000081b0*/ BL          0x00000000000081B0          @ RcTransAttr [R_ARM_CALL: .text+0x2464] 
    /*000081b4*/ SUBS        R5, R0, #0 
    /*000081b8*/ BNE         Rc_AllocStatFifoBuf_x81f0
    /*000081bc*/ ADD         R1, SP, #8 
    /*000081c0*/ MOV         R0, R6 
    /*000081c4*/ BL          0x00000000000081C4          @ RcAllocStatFifoBuf [R_ARM_CALL: .text+0x7f00] 
    /*000081c8*/ SUBS        R5, R0, #0 
    /*000081cc*/ MOVWNE      R3, #5129                   @ 0x1409 
    /*000081d0*/ BNE         Rc_AllocStatFifoBuf_x8234
    /*000081d4*/ LDR         R3, [R4, #8] 
    /*000081d8*/ CMP         R3, #15 
    /*000081dc*/ CMPNE       R3, #5 
    /*000081e0*/ BEQ         Rc_AllocStatFifoBuf_x821c
    Rc_AllocStatFifoBuf_x81e4:
    /*000081e4*/ MOV         R0, R5 
    /*000081e8*/ ADD         SP, SP, #88                 @ 0x58 
    /*000081ec*/ POP         {R4, R5, R6, PC} 
    Rc_AllocStatFifoBuf_x81f0:
    /*000081f0*/ MOVW        R3, #5121                   @ 0x1401 
    /*000081f4*/ MOV         R1, #19 
    /*000081f8*/ STR         R3, [SP] 
    /*000081fc*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e38] 
    /*00008200*/ LDR         R3, [PC, #84]               @ 0x000000000000825c 
    /*00008204*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e38] 
    /*00008208*/ MOV         R0, #3 
    /*0000820c*/ BL          0x000000000000820C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008210*/ MOV         R0, R5 
    /*00008214*/ ADD         SP, SP, #88                 @ 0x58 
    /*00008218*/ POP         {R4, R5, R6, PC} 
    Rc_AllocStatFifoBuf_x821c:
    /*0000821c*/ ADD         R1, SP, #8 
    /*00008220*/ MOV         R0, R6 
    /*00008224*/ BL          0x0000000000008224          @ RcAllocStatCvbrFifoBuf [R_ARM_CALL: .text+0x8054] 
    /*00008228*/ SUBS        R5, R0, #0 
    /*0000822c*/ BEQ         Rc_AllocStatFifoBuf_x81e4
    /*00008230*/ MOVW        R3, #5140                   @ 0x1414 
    Rc_AllocStatFifoBuf_x8234:
    /*00008234*/ STR         R3, [SP] 
    /*00008238*/ MOV         R1, #19 
    /*0000823c*/ LDR         R3, [PC, #24]               @ 0x000000000000825c 
    /*00008240*/ MOVW        R2, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e68] 
    /*00008244*/ MOV         R0, #3 
    /*00008248*/ MOVT        R2, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e68] 
    /*0000824c*/ BL          0x000000000000824C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008250*/ MOV         R0, R5 
    /*00008254*/ ADD         SP, SP, #88                 @ 0x58 
    /*00008258*/ POP         {R4, R5, R6, PC} 
    /*0000825c*/ STRDEQ      R0, [R0], -R4 
FUNC_END Rc_AllocStatFifoBuf


FUNC_BEGIN RC_SetAttr
    /*00008260*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00008264*/ SUBS        R8, R1, #0 
    /*00008268*/ SUB         SP, SP, #116                @ 0x74 
    /*0000826c*/ MOV         R5, R0 
    /*00008270*/ MOV         R9, R2 
    /*00008274*/ BEQ         RC_SetAttr_x8510
    RC_SetAttr_x8278:
    /*00008278*/ CMP         R5, #15 
    /*0000827c*/ BHI         RC_SetAttr_x84c8
    RC_SetAttr_x8280:
    /*00008280*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00008284*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00008288*/ LDR         R4, [R6, R5, LSL #2] 
    /*0000828c*/ CMP         R4, #0 
    /*00008290*/ BEQ         RC_SetAttr_x8580
    /*00008294*/ ADD         FP, R8, #48                 @ 0x30 
    /*00008298*/ ADD         R0, R8, #8 
    /*0000829c*/ ADD         R1, SP, #32 
    /*000082a0*/ MOV         R2, FP 
    /*000082a4*/ BL          0x00000000000082A4          @ RcTransAttr [R_ARM_CALL: .text+0x2464] 
    /*000082a8*/ SUBS        R7, R0, #0 
    /*000082ac*/ BNE         RC_SetAttr_x84e4
    /*000082b0*/ LSL         R3, R5, #2 
    /*000082b4*/ ADD         SL, R6, #128                @ 0x80 
    /*000082b8*/ ADD         SL, SL, R3 
    /*000082bc*/ ADD         R1, SP, #28 
    /*000082c0*/ STR         R3, [SP, #8] 
    /*000082c4*/ MOV         R0, SL 
    /*000082c8*/ BL          0x00000000000082C8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000082cc*/ LDR         R2, [R4, #432]              @ 0x1b0 
    /*000082d0*/ LDR         R0, [R4, #440]              @ 0x1b8 
    /*000082d4*/ CMP         R2, #1 
    /*000082d8*/ LDR         R1, [R4, #444]              @ 0x1bc 
    /*000082dc*/ STREQ       R2, [SP, #16] 
    /*000082e0*/ STR         R0, [R4, #412]              @ 0x19c 
    /*000082e4*/ MOVEQ       IP, #2 
    /*000082e8*/ LDREQ       R0, [R4, #416]              @ 0x1a0 
    /*000082ec*/ LDREQ       R2, [R4, #436]              @ 0x1b4 
    /*000082f0*/ LDRNE       R2, [R4, #416]              @ 0x1a0 
    /*000082f4*/ STREQ       R0, [R4, #436]              @ 0x1b4 
    /*000082f8*/ LDR         R0, [R4, #1476]             @ 0x5c4 
    /*000082fc*/ STREQ       R2, [R4, #416]              @ 0x1a0 
    /*00008300*/ STRNE       R7, [SP, #16] 
    /*00008304*/ STR         R1, [R4, #420]              @ 0x1a4 
    /*00008308*/ ADD         R1, R2, R1 
    /*0000830c*/ LDR         R2, [R4, #1484]             @ 0x5cc 
    /*00008310*/ STR         R1, [R4, #408]              @ 0x198 
    /*00008314*/ STR         R2, [R4, #1440]             @ 0x5a0 
    /*00008318*/ STREQ       IP, [R4, #432]              @ 0x1b0 
    /*0000831c*/ CMP         R0, #1 
    /*00008320*/ LDR         R0, [R4, #1488]             @ 0x5d0 
    /*00008324*/ LDREQ       R1, [R4, #1480]             @ 0x5c8 
    /*00008328*/ MOVEQ       IP, #2 
    /*0000832c*/ LDRNE       R1, [R4, #1412]             @ 0x584 
    /*00008330*/ STR         R0, [R4, #1468]             @ 0x5bc 
    /*00008334*/ LDREQ       R0, [R4, #1412]             @ 0x584 
    /*00008338*/ ADD         R2, R1, R2 
    /*0000833c*/ STREQ       R1, [R4, #1412]             @ 0x584 
    /*00008340*/ STREQ       IP, [R4, #1476]             @ 0x5c4 
    /*00008344*/ STREQ       R0, [R4, #1480]             @ 0x5c8 
    /*00008348*/ STR         R1, [R4, #1436]             @ 0x59c 
    /*0000834c*/ STR         R2, [R4, #1464]             @ 0x5b8 
    /*00008350*/ LDR         R1, [R4, #2504]             @ 0x9c8 
    /*00008354*/ LDR         R2, [R8] 
    /*00008358*/ CMP         R1, R2 
    /*0000835c*/ MOVNE       R3, #1 
    /*00008360*/ STRNE       R3, [SP, #12] 
    /*00008364*/ BEQ         RC_SetAttr_x842c
    RC_SetAttr_x8368:
    /*00008368*/ LDR         R1, [SP, #84]               @ 0x54 
    /*0000836c*/ LDR         R2, [R4, #52]               @ 0x34 
    /*00008370*/ CMP         R1, R2 
    /*00008374*/ BEQ         RC_SetAttr_x8444
    /*00008378*/ ORRS        R3, R9, R3 
    /*0000837c*/ BEQ         RC_SetAttr_x8388
    RC_SetAttr_x8380:
    /*00008380*/ MOV         R2, #1 
    /*00008384*/ STR         R2, [R4, #3144]             @ 0xc48 
    RC_SetAttr_x8388:
    /*00008388*/ MOV         R2, #80                     @ 0x50 
    /*0000838c*/ ADD         R1, SP, #32 
    /*00008390*/ MOV         R0, R4 
    /*00008394*/ BL          0x0000000000008394          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008398*/ ADD         R1, SP, #32 
    /*0000839c*/ MOV         R0, R5 
    /*000083a0*/ BL          0x00000000000083A0          @ RC_ParamInit [R_ARM_CALL: .text+0x7d08] 
    /*000083a4*/ LDR         R3, [SP, #8] 
    /*000083a8*/ MOV         IP, #1 
    /*000083ac*/ ADD         R1, SP, #28 
    /*000083b0*/ ADD         R6, R6, R3 
    /*000083b4*/ MOV         R0, SL 
    /*000083b8*/ STR         IP, [R4, #3104]             @ 0xc20 
    /*000083bc*/ LDR         R2, [R6, #64]               @ 0x40 
    /*000083c0*/ STR         IP, [R4, #1540]             @ 0x604 
    /*000083c4*/ ADD         R2, R2, IP 
    /*000083c8*/ STR         R2, [R6, #64]               @ 0x40 
    /*000083cc*/ BL          0x00000000000083CC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000083d0*/ LDR         R3, [SP, #12] 
    /*000083d4*/ CMP         R3, #0 
    /*000083d8*/ BEQ         RC_SetAttr_x8420
    /*000083dc*/ LDR         R0, [R8] 
    /*000083e0*/ MOVW        R1, #265                    @ 0x109 
    /*000083e4*/ LDR         R2, [SP, #80]               @ 0x50 
    /*000083e8*/ STR         R0, [R4, #2504]             @ 0x9c8 
    /*000083ec*/ CMP         R2, R1 
    /*000083f0*/ LDR         R1, [R8, #4] 
    /*000083f4*/ STR         R1, [R4, #2508]             @ 0x9cc 
    /*000083f8*/ BEQ         RC_SetAttr_x858c
    /*000083fc*/ CMP         R2, #96                     @ 0x60 
    /*00008400*/ BEQ         RC_SetAttr_x85bc
    RC_SetAttr_x8404:
    /*00008404*/ LDM         R8, {R2, R3} 
    /*00008408*/ ADD         R2, R2, #7 
    /*0000840c*/ ADD         R3, R3, #7 
    /*00008410*/ LSR         R2, R2, #3 
    /*00008414*/ LSR         R3, R3, #3 
    /*00008418*/ MUL         R3, R3, R2 
    /*0000841c*/ STR         R3, [R4, #2516]             @ 0x9d4 
    RC_SetAttr_x8420:
    /*00008420*/ MOV         R0, R7 
    /*00008424*/ ADD         SP, SP, #116                @ 0x74 
    /*00008428*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_SetAttr_x842c:
    /*0000842c*/ LDR         R1, [R4, #2508]             @ 0x9cc 
    /*00008430*/ LDR         R2, [R8, #4] 
    /*00008434*/ SUBS        R3, R1, R2 
    /*00008438*/ MOVNE       R3, #1 
    /*0000843c*/ STR         R3, [SP, #12] 
    /*00008440*/ B           RC_SetAttr_x8368
    RC_SetAttr_x8444:
    /*00008444*/ MOV         R1, FP 
    /*00008448*/ MOV         R2, R4 
    /*0000844c*/ ADD         R0, SP, #32 
    /*00008450*/ STR         R3, [SP, #20] 
    /*00008454*/ BL          0x0000000000007C80 
    /*00008458*/ LDR         R3, [SP, #20] 
    /*0000845c*/ ORRS        R9, R9, R3 
    /*00008460*/ MOV         FP, R0 
    /*00008464*/ BNE         RC_SetAttr_x8380
    /*00008468*/ CMP         R0, #3 
    /*0000846c*/ BEQ         RC_SetAttr_x8388
    /*00008470*/ CMP         R0, #2 
    /*00008474*/ BEQ         RC_SetAttr_x85ec
    /*00008478*/ CMP         FP, #1 
    /*0000847c*/ ADD         R1, SP, #32 
    /*00008480*/ MOV         R2, #80                     @ 0x50 
    /*00008484*/ MOV         R0, R4 
    /*00008488*/ BEQ         RC_SetAttr_x8520
    /*0000848c*/ BL          0x000000000000848C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008490*/ LDR         R3, [SP, #16] 
    /*00008494*/ CMP         R3, #1 
    /*00008498*/ BEQ         RC_SetAttr_x865c
    RC_SetAttr_x849c:
    /*0000849c*/ LDR         R3, [SP, #8] 
    /*000084a0*/ ADD         R6, R6, R3 
    /*000084a4*/ MOV         R3, #1 
    /*000084a8*/ STR         R3, [R4, #1540]             @ 0x604 
    /*000084ac*/ LDR         R3, [R6, #64]               @ 0x40 
    /*000084b0*/ ADD         R3, R3, #1 
    /*000084b4*/ STR         R3, [R6, #64]               @ 0x40 
    RC_SetAttr_x84b8:
    /*000084b8*/ ADD         R1, SP, #28 
    /*000084bc*/ MOV         R0, SL 
    /*000084c0*/ BL          0x00000000000084C0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000084c4*/ B           RC_SetAttr_x8420
    RC_SetAttr_x84c8:
    /*000084c8*/ MOV         R0, R5 
    /*000084cc*/ BL          0x00000000000020F4 
    /*000084d0*/ SUBS        R7, R0, #0 
    /*000084d4*/ BEQ         RC_SetAttr_x8280
    /*000084d8*/ MOV         R0, R7 
    /*000084dc*/ ADD         SP, SP, #116                @ 0x74 
    /*000084e0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_SetAttr_x84e4:
    /*000084e4*/ MOVW        R3, #5199                   @ 0x144f 
    /*000084e8*/ MOV         R1, #19 
    /*000084ec*/ STR         R3, [SP] 
    /*000084f0*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e38] 
    /*000084f4*/ LDR         R3, [PC, #364]              @ 0x0000000000008668 
    /*000084f8*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e38] 
    /*000084fc*/ MOV         R0, #3 
    /*00008500*/ BL          0x0000000000008500          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008504*/ MOV         R0, R7 
    /*00008508*/ ADD         SP, SP, #116                @ 0x74 
    /*0000850c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_SetAttr_x8510:
    /*00008510*/ BL          0x000000000000211C 
    /*00008514*/ SUBS        R7, R0, #0 
    /*00008518*/ BNE         RC_SetAttr_x8420
    /*0000851c*/ B           RC_SetAttr_x8278
    RC_SetAttr_x8520:
    /*00008520*/ BL          0x0000000000008520          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008524*/ ADD         R0, R4, #2576               @ 0xa10 
    /*00008528*/ MOV         R3, #83886080               @ 0x5000000 
    /*0000852c*/ ADD         R0, R0, #12 
    /*00008530*/ STR         R3, [R4, #2452]             @ 0x994 
    /*00008534*/ STR         R9, [R4, #2448]             @ 0x990 
    /*00008538*/ STR         R9, [R4, #2456]             @ 0x998 
    /*0000853c*/ STR         R9, [R4, #2460]             @ 0x99c 
    /*00008540*/ BL          0x0000000000008540          @ RcInitSuperFrmCfg [R_ARM_CALL: .text+0x56d4] 
    /*00008544*/ ADD         R3, R4, #1616               @ 0x650 
    /*00008548*/ ADD         R2, R4, #80                 @ 0x50 
    /*0000854c*/ MOV         R1, R4 
    /*00008550*/ ADD         R0, R4, #304                @ 0x130 
    /*00008554*/ BL          0x0000000000008554          @ RcResetAlgModel [R_ARM_CALL: .text+0x52a8] 
    /*00008558*/ MOV         R1, R4 
    /*0000855c*/ MOV         R0, R5 
    /*00008560*/ BL          0x0000000000008560          @ RC_NewModeReset [R_ARM_CALL: .text+0xf3d4] 
    /*00008564*/ LDR         R3, [SP, #8] 
    /*00008568*/ STR         FP, [R4, #1540]             @ 0x604 
    /*0000856c*/ ADD         R6, R6, R3 
    /*00008570*/ LDR         R3, [R6, #64]               @ 0x40 
    /*00008574*/ ADD         R3, R3, #1 
    /*00008578*/ STR         R3, [R6, #64]               @ 0x40 
    /*0000857c*/ B           RC_SetAttr_x84b8
    RC_SetAttr_x8580:
    /*00008580*/ MOVW        R7, #32773                  @ 0x8005 
    /*00008584*/ MOVT        R7, #40979                  @ 0xa013 
    /*00008588*/ B           RC_SetAttr_x8420
    RC_SetAttr_x858c:
    /*0000858c*/ LDR         R2, [R8, #4] 
    /*00008590*/ ADD         R2, R2, #63                 @ 0x3f 
    /*00008594*/ LSR         R2, R2, #6 
    /*00008598*/ STR         R2, [R4, #2520]             @ 0x9d8 
    /*0000859c*/ LDM         R8, {R1, R2} 
    /*000085a0*/ ADD         R1, R1, #63                 @ 0x3f 
    /*000085a4*/ ADD         R2, R2, #63                 @ 0x3f 
    /*000085a8*/ LSR         R1, R1, #6 
    /*000085ac*/ LSR         R2, R2, #6 
    /*000085b0*/ MUL         R2, R2, R1 
    /*000085b4*/ STR         R2, [R4, #2512]             @ 0x9d0 
    /*000085b8*/ B           RC_SetAttr_x8404
    RC_SetAttr_x85bc:
    /*000085bc*/ LDR         R2, [R8, #4] 
    /*000085c0*/ ADD         R2, R2, #15 
    /*000085c4*/ LSR         R2, R2, #4 
    /*000085c8*/ STR         R2, [R4, #2520]             @ 0x9d8 
    /*000085cc*/ LDM         R8, {R1, R2} 
    /*000085d0*/ ADD         R1, R1, #15 
    /*000085d4*/ ADD         R2, R2, #15 
    /*000085d8*/ LSR         R1, R1, #4 
    /*000085dc*/ LSR         R2, R2, #4 
    /*000085e0*/ MUL         R2, R2, R1 
    /*000085e4*/ STR         R2, [R4, #2512]             @ 0x9d0 
    /*000085e8*/ B           RC_SetAttr_x8404
    RC_SetAttr_x85ec:
    /*000085ec*/ LDR         R2, [R4, #32] 
    /*000085f0*/ LDR         R3, [SP, #64]               @ 0x40 
    /*000085f4*/ CMP         R2, R3 
    /*000085f8*/ BEQ         RC_SetAttr_x8610
    /*000085fc*/ LDR         R3, [R4] 
    /*00008600*/ SUB         R3, R3, #2 
    /*00008604*/ CMP         R3, #1 
    /*00008608*/ MOVLS       R3, #1 
    /*0000860c*/ STRLS       R3, [R4, #3104]             @ 0xc20 
    RC_SetAttr_x8610:
    /*00008610*/ ADD         R1, SP, #32 
    /*00008614*/ MOV         R2, #80                     @ 0x50 
    /*00008618*/ MOV         R0, R4 
    /*0000861c*/ BL          0x000000000000861C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008620*/ ADD         R0, R4, #2576               @ 0xa10 
    /*00008624*/ MOV         R3, #0 
    /*00008628*/ MOV         R2, #83886080               @ 0x5000000 
    /*0000862c*/ STR         R3, [R4, #2448]             @ 0x990 
    /*00008630*/ ADD         R0, R0, #12 
    /*00008634*/ STR         R3, [R4, #2456]             @ 0x998 
    /*00008638*/ STR         R3, [R4, #2460]             @ 0x99c 
    /*0000863c*/ STR         R2, [R4, #2452]             @ 0x994 
    /*00008640*/ BL          0x0000000000008640          @ RcInitSuperFrmCfg [R_ARM_CALL: .text+0x56d4] 
    /*00008644*/ MOV         R0, R4 
    /*00008648*/ BL          0x0000000000008648          @ RcInitAlgModel [R_ARM_CALL: .text+0x500c] 
    /*0000864c*/ MOV         R1, R4 
    /*00008650*/ MOV         R0, R5 
    /*00008654*/ BL          0x0000000000008654          @ RC_NewModeInit [R_ARM_CALL: .text+0xc220] 
    /*00008658*/ B           RC_SetAttr_x849c
    RC_SetAttr_x865c:
    /*0000865c*/ MOV         R0, R4 
    /*00008660*/ BL          0x0000000000008660          @ RcInitAlgModel [R_ARM_CALL: .text+0x500c] 
    /*00008664*/ B           RC_SetAttr_x849c
    /*00008668*/ ANDEQ       R0, R0, R8, LSL #8 
FUNC_END RC_SetAttr


FUNC_BEGIN RC_GetAttr
    /*0000866c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00008670*/ SUBS        R7, R1, #0 
    /*00008674*/ SUB         SP, SP, #20 
    /*00008678*/ MOV         R4, R0 
    /*0000867c*/ BEQ         RC_GetAttr_x873c
    RC_GetAttr_x8680:
    /*00008680*/ CMP         R4, #15 
    /*00008684*/ BHI         RC_GetAttr_x86e8
    RC_GetAttr_x8688:
    /*00008688*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*0000868c*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00008690*/ LDR         R3, [R5, R4, LSL #2] 
    /*00008694*/ CMP         R3, #0 
    /*00008698*/ BEQ         RC_GetAttr_x874c
    /*0000869c*/ ADD         R6, R5, #128                @ 0x80 
    /*000086a0*/ ADD         R1, SP, #12 
    /*000086a4*/ ADD         R6, R6, R4, LSL #2 
    /*000086a8*/ MOV         R0, R6 
    /*000086ac*/ BL          0x00000000000086AC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000086b0*/ LDR         R4, [R5, R4, LSL #2] 
    /*000086b4*/ MOV         R0, R4 
    /*000086b8*/ BL          0x00000000000086B8          @ RcGetRcMode [R_ARM_CALL: .text+0x22bc] 
    /*000086bc*/ MOV         R2, R7 
    /*000086c0*/ MOV         R1, R4 
    /*000086c4*/ BL          0x00000000000086C4          @ RcRevTransAttr [R_ARM_CALL: .text+0x2930] 
    /*000086c8*/ SUBS        R5, R0, #0 
    /*000086cc*/ BNE         RC_GetAttr_x8704
    /*000086d0*/ ADD         R1, SP, #12 
    /*000086d4*/ MOV         R0, R6 
    /*000086d8*/ BL          0x00000000000086D8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    RC_GetAttr_x86dc:
    /*000086dc*/ MOV         R0, R5 
    /*000086e0*/ ADD         SP, SP, #20 
    /*000086e4*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetAttr_x86e8:
    /*000086e8*/ MOV         R0, R4 
    /*000086ec*/ BL          0x00000000000020F4 
    /*000086f0*/ SUBS        R5, R0, #0 
    /*000086f4*/ BEQ         RC_GetAttr_x8688
    /*000086f8*/ MOV         R0, R5 
    /*000086fc*/ ADD         SP, SP, #20 
    /*00008700*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetAttr_x8704:
    /*00008704*/ MOVW        R3, #5375                   @ 0x14ff 
    /*00008708*/ MOV         R1, #19 
    /*0000870c*/ STR         R3, [SP] 
    /*00008710*/ MOVW        R2, #0                      @ .LC110 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e9c] 
    /*00008714*/ LDR         R3, [PC, #60]               @ 0x0000000000008758 
    /*00008718*/ MOVT        R2, #0                      @ .LC110 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e9c] 
    /*0000871c*/ MOV         R0, #3 
    /*00008720*/ BL          0x0000000000008720          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008724*/ MOV         R0, R6 
    /*00008728*/ ADD         R1, SP, #12 
    /*0000872c*/ BL          0x000000000000872C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008730*/ MOV         R0, R5 
    /*00008734*/ ADD         SP, SP, #20 
    /*00008738*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetAttr_x873c:
    /*0000873c*/ BL          0x000000000000211C 
    /*00008740*/ SUBS        R5, R0, #0 
    /*00008744*/ BNE         RC_GetAttr_x86dc
    /*00008748*/ B           RC_GetAttr_x8680
    RC_GetAttr_x874c:
    /*0000874c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00008750*/ MOVT        R5, #40979                  @ 0xa013 
    /*00008754*/ B           RC_GetAttr_x86dc
    /*00008758*/ ANDEQ       R0, R0, R4, LSL R4 
FUNC_END RC_GetAttr


FUNC_BEGIN RC_SetParam
    /*0000875c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00008760*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00008764*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00008768*/ LSL         R9, R0, #2 
    /*0000876c*/ ADD         R7, R5, #128                @ 0x80 
    /*00008770*/ SUB         SP, SP, #20 
    /*00008774*/ ADD         R7, R7, R9 
    /*00008778*/ MOV         SL, R1 
    /*0000877c*/ MOV         R8, R0 
    /*00008780*/ ADD         R1, SP, #12 
    /*00008784*/ MOV         R0, R7 
    /*00008788*/ BL          0x0000000000008788          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000878c*/ LDR         R4, [R5, R8, LSL #2] 
    /*00008790*/ MOV         R0, R4 
    /*00008794*/ BL          0x0000000000008794          @ RcGetRcMode [R_ARM_CALL: .text+0x22bc] 
    /*00008798*/ LDR         R2, [R4, #52]               @ 0x34 
    /*0000879c*/ MOV         R1, SL 
    /*000087a0*/ SUB         R3, R2, #2 
    /*000087a4*/ CMP         R2, #0 
    /*000087a8*/ CMPNE       R3, #2 
    /*000087ac*/ ADD         R2, R4, #80                 @ 0x50 
    /*000087b0*/ MOVHI       R3, #0 
    /*000087b4*/ MOVLS       R3, #1 
    /*000087b8*/ LDRLS       FP, [R4, #224]              @ 0xe0 
    /*000087bc*/ MOVHI       R6, R3 
    /*000087c0*/ LDRLS       R6, [R4, #288]              @ 0x120 
    /*000087c4*/ MOVHI       FP, #90                     @ 0x5a 
    /*000087c8*/ BL          0x00000000000087C8          @ RcTransParam [R_ARM_CALL: .text+0x2b68] 
    /*000087cc*/ SUBS        SL, R0, #0 
    /*000087d0*/ BNE         RC_SetParam_x8854
    /*000087d4*/ LDR         R3, [R4, #52]               @ 0x34 
    /*000087d8*/ SUB         R2, R3, #2 
    /*000087dc*/ CMP         R3, #0 
    /*000087e0*/ CMPNE       R2, #2 
    /*000087e4*/ BLS         RC_SetParam_x8818
    RC_SetParam_x87e8:
    /*000087e8*/ ADD         R5, R5, R9 
    /*000087ec*/ MOV         R2, #1 
    /*000087f0*/ MOV         R0, R7 
    /*000087f4*/ ADD         R1, SP, #12 
    /*000087f8*/ LDR         R3, [R5, #64]               @ 0x40 
    /*000087fc*/ STR         R2, [R4, #1540]             @ 0x604 
    /*00008800*/ ADD         R3, R3, R2 
    /*00008804*/ STR         R3, [R5, #64]               @ 0x40 
    /*00008808*/ BL          0x0000000000008808          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000880c*/ MOV         R0, SL 
    /*00008810*/ ADD         SP, SP, #20 
    /*00008814*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_SetParam_x8818:
    /*00008818*/ LDR         R2, [R4, #224]              @ 0xe0 
    /*0000881c*/ CMP         FP, R2 
    /*00008820*/ BEQ         RC_SetParam_x8834
    /*00008824*/ MOV         R0, R8 
    /*00008828*/ MOV         R1, R4 
    /*0000882c*/ BL          0x000000000000882C          @ RC_NewModeReset [R_ARM_CALL: .text+0xf3d4] 
    /*00008830*/ LDR         R3, [R4, #52]               @ 0x34 
    RC_SetParam_x8834:
    /*00008834*/ CMP         R3, #4 
    /*00008838*/ BNE         RC_SetParam_x87e8
    /*0000883c*/ LDR         R3, [R4, #288]              @ 0x120 
    /*00008840*/ CMP         R6, R3 
    /*00008844*/ BEQ         RC_SetParam_x87e8
    /*00008848*/ MOV         R0, R4 
    /*0000884c*/ BL          0x000000000000884C          @ RcInitAlgModel [R_ARM_CALL: .text+0x500c] 
    /*00008850*/ B           RC_SetParam_x87e8
    RC_SetParam_x8854:
    /*00008854*/ MOVW        R3, #5434                   @ 0x153a 
    /*00008858*/ MOV         R1, #19 
    /*0000885c*/ STR         R3, [SP] 
    /*00008860*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ec8] 
    /*00008864*/ LDR         R3, [PC, #32]               @ 0x000000000000888c 
    /*00008868*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ec8] 
    /*0000886c*/ MOV         R0, #3 
    /*00008870*/ BL          0x0000000000008870          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008874*/ MOV         R0, R7 
    /*00008878*/ ADD         R1, SP, #12 
    /*0000887c*/ BL          0x000000000000887C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008880*/ MOV         R0, SL 
    /*00008884*/ ADD         SP, SP, #20 
    /*00008888*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000888c*/ ANDEQ       R0, R0, R0, LSR #8 
FUNC_END RC_SetParam


FUNC_BEGIN RC_GetParam
    /*00008890*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00008894*/ SUBS        R7, R1, #0 
    /*00008898*/ SUB         SP, SP, #28 
    /*0000889c*/ MOV         R4, R0 
    /*000088a0*/ BEQ         RC_GetParam_x8980
    RC_GetParam_x88a4:
    /*000088a4*/ CMP         R4, #15 
    /*000088a8*/ BHI         RC_GetParam_x892c
    RC_GetParam_x88ac:
    /*000088ac*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*000088b0*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*000088b4*/ LDR         R3, [R5, R4, LSL #2] 
    /*000088b8*/ CMP         R3, #0 
    /*000088bc*/ BEQ         RC_GetParam_x8990
    /*000088c0*/ ADD         R6, R5, #128                @ 0x80 
    /*000088c4*/ ADD         R1, SP, #20 
    /*000088c8*/ ADD         R6, R6, R4, LSL #2 
    /*000088cc*/ MOV         R0, R6 
    /*000088d0*/ BL          0x00000000000088D0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000088d4*/ LDR         R0, [R5, R4, LSL #2] 
    /*000088d8*/ ADD         R5, R0, #80                 @ 0x50 
    /*000088dc*/ BL          0x00000000000088DC          @ RcGetRcMode [R_ARM_CALL: .text+0x22bc] 
    /*000088e0*/ SUB         R2, R0, #1 
    /*000088e4*/ CMP         R2, #16 
    /*000088e8*/ BHI         RC_GetParam_x89dc
    /*000088ec*/ SUB         IP, R0, #6 
    /*000088f0*/ BIC         IP, IP, #4 
    /*000088f4*/ CMP         IP, #0 
    /*000088f8*/ CMPNE       R0, #16 
    /*000088fc*/ BEQ         RC_GetParam_x899c
    /*00008900*/ MOV         R1, R5 
    /*00008904*/ MOV         R2, R7 
    /*00008908*/ BL          0x0000000000008908          @ RC_RevTransParam [R_ARM_CALL: .text+0x33a8] 
    /*0000890c*/ SUBS        R5, R0, #0 
    /*00008910*/ BNE         RC_GetParam_x8948
    /*00008914*/ ADD         R1, SP, #20 
    /*00008918*/ MOV         R0, R6 
    /*0000891c*/ BL          0x000000000000891C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    RC_GetParam_x8920:
    /*00008920*/ MOV         R0, R5 
    /*00008924*/ ADD         SP, SP, #28 
    /*00008928*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetParam_x892c:
    /*0000892c*/ MOV         R0, R4 
    /*00008930*/ BL          0x00000000000020F4 
    /*00008934*/ SUBS        R5, R0, #0 
    /*00008938*/ BEQ         RC_GetParam_x88ac
    /*0000893c*/ MOV         R0, R5 
    /*00008940*/ ADD         SP, SP, #28 
    /*00008944*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetParam_x8948:
    /*00008948*/ MOVW        R3, #5533                   @ 0x159d 
    /*0000894c*/ MOV         R1, #19 
    /*00008950*/ STR         R3, [SP] 
    /*00008954*/ MOVW        R2, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f64] 
    /*00008958*/ LDR         R3, [PC, #200]              @ 0x0000000000008a28 
    /*0000895c*/ MOVT        R2, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f64] 
    /*00008960*/ MOV         R0, #3 
    /*00008964*/ BL          0x0000000000008964          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008968*/ MOV         R0, R6 
    /*0000896c*/ ADD         R1, SP, #20 
    /*00008970*/ BL          0x0000000000008970          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008974*/ MOV         R0, R5 
    /*00008978*/ ADD         SP, SP, #28 
    /*0000897c*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetParam_x8980:
    /*00008980*/ BL          0x000000000000211C 
    /*00008984*/ SUBS        R5, R0, #0 
    /*00008988*/ BNE         RC_GetParam_x8920
    /*0000898c*/ B           RC_GetParam_x88a4
    RC_GetParam_x8990:
    /*00008990*/ MOVW        R5, #32773                  @ 0x8005 
    /*00008994*/ MOVT        R5, #40979                  @ 0xa013 
    /*00008998*/ B           RC_GetParam_x8920
    RC_GetParam_x899c:
    /*0000899c*/ STR         R0, [SP, #8] 
    /*000089a0*/ MOVW        R3, #5523                   @ 0x1593 
    /*000089a4*/ MOV         R1, #19 
    /*000089a8*/ STR         R3, [SP] 
    /*000089ac*/ STR         R4, [SP, #4] 
    /*000089b0*/ MOVW        R2, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2efc] 
    /*000089b4*/ LDR         R3, [PC, #108]              @ 0x0000000000008a28 
    /*000089b8*/ MOVT        R2, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2efc] 
    /*000089bc*/ MOV         R0, #3 
    /*000089c0*/ MOVW        R5, #32776                  @ 0x8008 
    /*000089c4*/ BL          0x00000000000089C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000089c8*/ ADD         R1, SP, #20 
    /*000089cc*/ MOV         R0, R6 
    /*000089d0*/ MOVT        R5, #40979                  @ 0xa013 
    /*000089d4*/ BL          0x00000000000089D4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000089d8*/ B           RC_GetParam_x8920
    RC_GetParam_x89dc:
    /*000089dc*/ STR         R0, [SP, #4] 
    /*000089e0*/ MOV         R2, #17 
    /*000089e4*/ MOV         R3, #1 
    /*000089e8*/ STR         R2, [SP, #12] 
    /*000089ec*/ STR         R3, [SP, #8] 
    /*000089f0*/ MOV         R1, #19 
    /*000089f4*/ MOVW        R3, #5512                   @ 0x1588 
    /*000089f8*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14bc] 
    /*000089fc*/ STR         R3, [SP] 
    /*00008a00*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14bc] 
    /*00008a04*/ LDR         R3, [PC, #28]               @ 0x0000000000008a28 
    /*00008a08*/ MOV         R0, #3 
    /*00008a0c*/ BL          0x0000000000008A0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008a10*/ ADD         R1, SP, #20 
    /*00008a14*/ MOV         R0, R6 
    /*00008a18*/ MOVW        R5, #32771                  @ 0x8003 
    /*00008a1c*/ BL          0x0000000000008A1C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008a20*/ MOVT        R5, #40979                  @ 0xa013 
    /*00008a24*/ B           RC_GetParam_x8920
    /*00008a28*/ ANDEQ       R0, R0, IP, LSR #8 
FUNC_END RC_GetParam


FUNC_BEGIN RC_RequestIdr
    /*00008a2c*/ CMP         R0, #15 
    /*00008a30*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00008a34*/ MOV         R5, R0 
    /*00008a38*/ SUB         SP, SP, #12 
    /*00008a3c*/ MOV         R8, R1 
    /*00008a40*/ BHI         RC_RequestIdr_x8ab4
    RC_RequestIdr_x8a44:
    /*00008a44*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00008a48*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00008a4c*/ LDR         R3, [R4, R5, LSL #2] 
    /*00008a50*/ CMP         R3, #0 
    /*00008a54*/ BEQ         RC_RequestIdr_x8b84
    /*00008a58*/ LSL         R7, R5, #2 
    /*00008a5c*/ ADD         R6, R4, #128                @ 0x80 
    /*00008a60*/ ADD         R6, R6, R7 
    /*00008a64*/ ADD         R1, SP, #4 
    /*00008a68*/ MOV         R0, R6 
    /*00008a6c*/ BL          0x0000000000008A6C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008a70*/ LDR         R5, [R4, R5, LSL #2] 
    /*00008a74*/ CMP         R8, #0 
    /*00008a78*/ MOV         R2, #1 
    /*00008a7c*/ MOV         R3, #0 
    /*00008a80*/ STR         R2, [R5, #3104]             @ 0xc20 
    /*00008a84*/ STR         R3, [R5, #1548]             @ 0x60c 
    /*00008a88*/ BNE         RC_RequestIdr_x8ac8
    RC_RequestIdr_x8a8c:
    /*00008a8c*/ ADD         R4, R4, R7 
    /*00008a90*/ MOV         R0, R6 
    /*00008a94*/ ADD         R1, SP, #4 
    /*00008a98*/ LDR         R3, [R4, #64]               @ 0x40 
    /*00008a9c*/ ADD         R3, R3, #1 
    /*00008aa0*/ STR         R3, [R4, #64]               @ 0x40 
    /*00008aa4*/ BL          0x0000000000008AA4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008aa8*/ MOV         R0, #0 
    RC_RequestIdr_x8aac:
    /*00008aac*/ ADD         SP, SP, #12 
    /*00008ab0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    RC_RequestIdr_x8ab4:
    /*00008ab4*/ BL          0x00000000000020F4 
    /*00008ab8*/ CMP         R0, #0 
    /*00008abc*/ BEQ         RC_RequestIdr_x8a44
    /*00008ac0*/ ADD         SP, SP, #12 
    /*00008ac4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    RC_RequestIdr_x8ac8:
    /*00008ac8*/ CMN         R5, #304                    @ 0x130 
    /*00008acc*/ LDR         R9, [R5, #40]               @ 0x28 
    /*00008ad0*/ LDR         R8, [R5, #44]               @ 0x2c 
    /*00008ad4*/ BEQ         RC_RequestIdr_x8bb0
    RC_RequestIdr_x8ad8:
    /*00008ad8*/ LSRS        R3, R9, #16 
    /*00008adc*/ BNE         RC_RequestIdr_x8b64
    RC_RequestIdr_x8ae0:
    /*00008ae0*/ LSRS        R2, R8, #16 
    /*00008ae4*/ STR         R9, [R5, #304]              @ 0x130 
    /*00008ae8*/ STR         R8, [R5, #308]              @ 0x134 
    /*00008aec*/ UXTHNE      R8, R8 
    /*00008af0*/ MULNE       R9, R2, R9 
    /*00008af4*/ MOV         R3, #0 
    /*00008af8*/ STREQ       R9, [R5, #312]              @ 0x138 
    /*00008afc*/ STR         R3, [R5, #328]              @ 0x148 
    /*00008b00*/ STR         R3, [R5, #324]              @ 0x144 
    /*00008b04*/ SUBEQ       R3, R9, R8 
    /*00008b08*/ SUBNE       R3, R9, R8 
    /*00008b0c*/ STREQ       R8, [R5, #316]              @ 0x13c 
    /*00008b10*/ STREQ       R3, [R5, #320]              @ 0x140 
    /*00008b14*/ STRNE       R8, [R5, #316]              @ 0x13c 
    /*00008b18*/ STRNE       R3, [R5, #320]              @ 0x140 
    /*00008b1c*/ STRNE       R9, [R5, #312]              @ 0x138 
    /*00008b20*/ CMP         R8, R9 
    /*00008b24*/ BLS         RC_RequestIdr_x8b44
    /*00008b28*/ MOVW        R3, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28cc] 
    /*00008b2c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00008b30*/ MOVT        R3, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28cc] 
    /*00008b34*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00008b38*/ MOV         R2, #199                    @ 0xc7 
    /*00008b3c*/ LDR         R1, [PC, #140]              @ 0x0000000000008bd0 
    /*00008b40*/ BL          0x0000000000008B40          @ osal_panic [R_ARM_CALL: +0x0] 
    RC_RequestIdr_x8b44:
    /*00008b44*/ ADD         R3, R5, #1488               @ 0x5d0 
    /*00008b48*/ ADD         R3, R3, #8 
    /*00008b4c*/ CMP         R3, #0 
    /*00008b50*/ BEQ         RC_RequestIdr_x8b90
    RC_RequestIdr_x8b54:
    /*00008b54*/ MOV         R3, #1 
    /*00008b58*/ STR         R3, [R5, #1504]             @ 0x5e0 
    /*00008b5c*/ STR         R3, [R5, #1548]             @ 0x60c 
    /*00008b60*/ B           RC_RequestIdr_x8a8c
    RC_RequestIdr_x8b64:
    /*00008b64*/ MOVW        R3, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28b0] 
    /*00008b68*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00008b6c*/ MOVT        R3, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28b0] 
    /*00008b70*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00008b74*/ MOV         R2, #172                    @ 0xac 
    /*00008b78*/ LDR         R1, [PC, #80]               @ 0x0000000000008bd0 
    /*00008b7c*/ BL          0x0000000000008B7C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008b80*/ B           RC_RequestIdr_x8ae0
    RC_RequestIdr_x8b84:
    /*00008b84*/ MOVW        R0, #32773                  @ 0x8005 
    /*00008b88*/ MOVT        R0, #40979                  @ 0xa013 
    /*00008b8c*/ B           RC_RequestIdr_x8aac
    RC_RequestIdr_x8b90:
    /*00008b90*/ MOVW        R3, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28f8] 
    /*00008b94*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00008b98*/ MOVT        R3, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28f8] 
    /*00008b9c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00008ba0*/ MOVW        R2, #5591                   @ 0x15d7 
    /*00008ba4*/ LDR         R1, [PC, #40]               @ 0x0000000000008bd4 
    /*00008ba8*/ BL          0x0000000000008BA8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008bac*/ B           RC_RequestIdr_x8b54
    RC_RequestIdr_x8bb0:
    /*00008bb0*/ MOVW        R3, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x289c] 
    /*00008bb4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00008bb8*/ MOVT        R3, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x289c] 
    /*00008bbc*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00008bc0*/ MOV         R2, #169                    @ 0xa9 
    /*00008bc4*/ LDR         R1, [PC, #4]                @ 0x0000000000008bd0 
    /*00008bc8*/ BL          0x0000000000008BC8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008bcc*/ B           RC_RequestIdr_x8ad8
    /*00008bd0*/ ANDEQ       R0, R0, R0, LSL #5 
    /*00008bd4*/ ANDEQ       R0, R0, R8, LSR R4 
FUNC_END RC_RequestIdr


FUNC_BEGIN RcCheckLostFrmParam
    /*00008bd8*/ PUSH        {R4, LR} 
    /*00008bdc*/ SUBS        R4, R0, #0 
    /*00008be0*/ SUB         SP, SP, #16 
    /*00008be4*/ BEQ         RcCheckLostFrmParam_x8c24
    RcCheckLostFrmParam_x8be8:
    /*00008be8*/ LDR         R3, [R4] 
    /*00008bec*/ CMP         R3, #1 
    /*00008bf0*/ BHI         RcCheckLostFrmParam_x8c44
    /*00008bf4*/ LDR         R3, [R4, #4] 
    /*00008bf8*/ CMP         R3, #65536                  @ 0x10000 
    /*00008bfc*/ BCC         RcCheckLostFrmParam_x8cb4
    /*00008c00*/ LDR         R3, [R4, #8] 
    /*00008c04*/ CMP         R3, #1 
    /*00008c08*/ BHI         RcCheckLostFrmParam_x8c74
    /*00008c0c*/ LDR         R3, [R4, #12] 
    /*00008c10*/ CMP         R3, #65536                  @ 0x10000 
    /*00008c14*/ MOVCC       R0, #0 
    /*00008c18*/ BCS         RcCheckLostFrmParam_x8cec
    RcCheckLostFrmParam_x8c1c:
    /*00008c1c*/ ADD         SP, SP, #16 
    /*00008c20*/ POP         {R4, PC} 
    RcCheckLostFrmParam_x8c24:
    /*00008c24*/ MOVW        R3, #0                      @ .LC114 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f98] 
    /*00008c28*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*00008c2c*/ MOVT        R3, #0                      @ .LC114 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f98] 
    /*00008c30*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*00008c34*/ MOVW        R2, #5606                   @ 0x15e6 
    /*00008c38*/ LDR         R1, [PC, #212]              @ 0x0000000000008d14 
    /*00008c3c*/ BL          0x0000000000008C3C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008c40*/ B           RcCheckLostFrmParam_x8be8
    RcCheckLostFrmParam_x8c44:
    /*00008c44*/ STR         R3, [SP, #4] 
    /*00008c48*/ MOVW        R2, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2fb4] 
    /*00008c4c*/ MOVW        R3, #5612                   @ 0x15ec 
    /*00008c50*/ MOVT        R2, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2fb4] 
    /*00008c54*/ STR         R3, [SP] 
    /*00008c58*/ MOV         R1, #19 
    /*00008c5c*/ LDR         R3, [PC, #176]              @ 0x0000000000008d14 
    /*00008c60*/ MOV         R0, #3 
    /*00008c64*/ BL          0x0000000000008C64          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008c68*/ MOVW        R0, #32771                  @ 0x8003 
    /*00008c6c*/ MOVT        R0, #40979                  @ 0xa013 
    /*00008c70*/ B           RcCheckLostFrmParam_x8c1c
    RcCheckLostFrmParam_x8c74:
    /*00008c74*/ MOV         R2, #2 
    /*00008c78*/ STR         R2, [SP, #12] 
    /*00008c7c*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3054] 
    /*00008c80*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3054] 
    /*00008c84*/ STR         R3, [SP, #4] 
    /*00008c88*/ MOV         R3, #0 
    /*00008c8c*/ STR         R3, [SP, #8] 
    /*00008c90*/ MOVW        R3, #5628                   @ 0x15fc 
    /*00008c94*/ STR         R3, [SP] 
    RcCheckLostFrmParam_x8c98:
    /*00008c98*/ LDR         R3, [PC, #116]              @ 0x0000000000008d14 
    /*00008c9c*/ MOV         R1, #8 
    /*00008ca0*/ MOV         R0, #3 
    /*00008ca4*/ BL          0x0000000000008CA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008ca8*/ MOVW        R0, #32771                  @ 0x8003 
    /*00008cac*/ MOVT        R0, #40979                  @ 0xa013 
    /*00008cb0*/ B           RcCheckLostFrmParam_x8c1c
    RcCheckLostFrmParam_x8cb4:
    /*00008cb4*/ STR         R3, [SP, #4] 
    /*00008cb8*/ MOV         R2, #64                     @ 0x40 
    /*00008cbc*/ MOVW        R3, #5621                   @ 0x15f5 
    /*00008cc0*/ STR         R2, [SP, #8] 
    /*00008cc4*/ STR         R3, [SP] 
    /*00008cc8*/ MOVW        R2, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3008] 
    /*00008ccc*/ LDR         R3, [PC, #64]               @ 0x0000000000008d14 
    /*00008cd0*/ MOVT        R2, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3008] 
    /*00008cd4*/ MOV         R1, #19 
    /*00008cd8*/ MOV         R0, #3 
    /*00008cdc*/ BL          0x0000000000008CDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008ce0*/ MOVW        R0, #32771                  @ 0x8003 
    /*00008ce4*/ MOVT        R0, #40979                  @ 0xa013 
    /*00008ce8*/ B           RcCheckLostFrmParam_x8c1c
    RcCheckLostFrmParam_x8cec:
    /*00008cec*/ MOVW        R2, #65535                  @ 0xffff 
    /*00008cf0*/ STR         R3, [SP, #4] 
    /*00008cf4*/ STR         R2, [SP, #12] 
    /*00008cf8*/ MOV         R3, #0 
    /*00008cfc*/ MOVW        R2, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30a8] 
    /*00008d00*/ STR         R3, [SP, #8] 
    /*00008d04*/ MOVT        R2, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30a8] 
    /*00008d08*/ MOVW        R3, #5636                   @ 0x1604 
    /*00008d0c*/ STR         R3, [SP] 
    /*00008d10*/ B           RcCheckLostFrmParam_x8c98
    /*00008d14*/ ANDEQ       R0, R0, R8, ASR #8 
FUNC_END RcCheckLostFrmParam


FUNC_BEGIN RC_SetFrmLostParam
    /*00008d18*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00008d1c*/ SUBS        R7, R1, #0 
    /*00008d20*/ SUB         SP, SP, #20 
    /*00008d24*/ MOV         R4, R0 
    /*00008d28*/ BEQ         RC_SetFrmLostParam_x8df8
    RC_SetFrmLostParam_x8d2c:
    /*00008d2c*/ CMP         R4, #15 
    /*00008d30*/ BHI         RC_SetFrmLostParam_x8dac
    RC_SetFrmLostParam_x8d34:
    /*00008d34*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00008d38*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00008d3c*/ LDR         R3, [R5, R4, LSL #2] 
    /*00008d40*/ CMP         R3, #0 
    /*00008d44*/ BEQ         RC_SetFrmLostParam_x8e08
    /*00008d48*/ MOV         R0, R7 
    /*00008d4c*/ BL          0x0000000000008D4C          @ RcCheckLostFrmParam [R_ARM_CALL: .text+0x8bd8] 
    /*00008d50*/ SUBS        R6, R0, #0 
    /*00008d54*/ BNE         RC_SetFrmLostParam_x8dc8
    /*00008d58*/ LSL         R9, R4, #2 
    /*00008d5c*/ ADD         R8, R5, #128                @ 0x80 
    /*00008d60*/ ADD         R8, R8, R9 
    /*00008d64*/ LDR         R4, [R5, R4, LSL #2] 
    /*00008d68*/ ADD         R1, SP, #12 
    /*00008d6c*/ ADD         R5, R5, R9 
    /*00008d70*/ MOV         R0, R8 
    /*00008d74*/ BL          0x0000000000008D74          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008d78*/ MOV         R1, R7 
    /*00008d7c*/ ADD         R0, R4, #2448               @ 0x990 
    /*00008d80*/ MOV         R2, #16 
    /*00008d84*/ BL          0x0000000000008D84          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008d88*/ LDR         R3, [R5, #64]               @ 0x40 
    /*00008d8c*/ MOV         R0, R8 
    /*00008d90*/ ADD         R1, SP, #12 
    /*00008d94*/ ADD         R3, R3, #1 
    /*00008d98*/ STR         R3, [R5, #64]               @ 0x40 
    /*00008d9c*/ BL          0x0000000000008D9C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    RC_SetFrmLostParam_x8da0:
    /*00008da0*/ MOV         R0, R6 
    /*00008da4*/ ADD         SP, SP, #20 
    /*00008da8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    RC_SetFrmLostParam_x8dac:
    /*00008dac*/ MOV         R0, R4 
    /*00008db0*/ BL          0x00000000000020F4 
    /*00008db4*/ SUBS        R6, R0, #0 
    /*00008db8*/ BEQ         RC_SetFrmLostParam_x8d34
    /*00008dbc*/ MOV         R0, R6 
    /*00008dc0*/ ADD         SP, SP, #20 
    /*00008dc4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    RC_SetFrmLostParam_x8dc8:
    /*00008dc8*/ STR         R4, [SP, #4] 
    /*00008dcc*/ MOVW        R3, #5658                   @ 0x161a 
    /*00008dd0*/ MOV         R1, #19 
    /*00008dd4*/ STR         R3, [SP] 
    /*00008dd8*/ MOVW        R2, #0                      @ .LC119 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30fc] 
    /*00008ddc*/ LDR         R3, [PC, #48]               @ 0x0000000000008e14 
    /*00008de0*/ MOVT        R2, #0                      @ .LC119 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30fc] 
    /*00008de4*/ MOV         R0, #3 
    /*00008de8*/ BL          0x0000000000008DE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008dec*/ MOV         R0, R6 
    /*00008df0*/ ADD         SP, SP, #20 
    /*00008df4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    RC_SetFrmLostParam_x8df8:
    /*00008df8*/ BL          0x000000000000211C 
    /*00008dfc*/ SUBS        R6, R0, #0 
    /*00008e00*/ BNE         RC_SetFrmLostParam_x8da0
    /*00008e04*/ B           RC_SetFrmLostParam_x8d2c
    RC_SetFrmLostParam_x8e08:
    /*00008e08*/ MOVW        R6, #32773                  @ 0x8005 
    /*00008e0c*/ MOVT        R6, #40979                  @ 0xa013 
    /*00008e10*/ B           RC_SetFrmLostParam_x8da0
    /*00008e14*/ ANDEQ       R0, R0, IP, ASR R4 
FUNC_END RC_SetFrmLostParam


FUNC_BEGIN RC_GetFrmLostParam
    /*00008e18*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00008e1c*/ SUBS        R7, R1, #0 
    /*00008e20*/ SUB         SP, SP, #28 
    /*00008e24*/ MOV         R4, R0 
    /*00008e28*/ BEQ         RC_GetFrmLostParam_x8ed0
    RC_GetFrmLostParam_x8e2c:
    /*00008e2c*/ CMP         R4, #15 
    /*00008e30*/ BHI         RC_GetFrmLostParam_x8eb8
    RC_GetFrmLostParam_x8e34:
    /*00008e34*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00008e38*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00008e3c*/ LDR         R3, [R5, R4, LSL #2] 
    /*00008e40*/ CMP         R3, #0 
    /*00008e44*/ BEQ         RC_GetFrmLostParam_x8ee0
    /*00008e48*/ ADD         R6, R5, #128                @ 0x80 
    /*00008e4c*/ ADD         R1, SP, #20 
    /*00008e50*/ ADD         R6, R6, R4, LSL #2 
    /*00008e54*/ MOV         R0, R6 
    /*00008e58*/ BL          0x0000000000008E58          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008e5c*/ LDR         R5, [R5, R4, LSL #2] 
    /*00008e60*/ MOV         R0, R5 
    /*00008e64*/ BL          0x0000000000008E64          @ RcGetRcMode [R_ARM_CALL: .text+0x22bc] 
    /*00008e68*/ SUB         R3, R0, #1 
    /*00008e6c*/ CMP         R3, #16 
    /*00008e70*/ BHI         RC_GetFrmLostParam_x8f2c
    /*00008e74*/ SUB         R2, R0, #6 
    /*00008e78*/ CMP         R2, #11 
    /*00008e7c*/ BHI         RC_GetFrmLostParam_x8e90
    /*00008e80*/ MOVW        R3, #3091                   @ 0xc13 
    /*00008e84*/ MVN         R3, R3, LSR R2 
    /*00008e88*/ TST         R3, #1 
    /*00008e8c*/ BEQ         RC_GetFrmLostParam_x8eec
    RC_GetFrmLostParam_x8e90:
    /*00008e90*/ ADD         R1, R5, #2448               @ 0x990 
    /*00008e94*/ MOV         R2, #16 
    /*00008e98*/ MOV         R0, R7 
    /*00008e9c*/ BL          0x0000000000008E9C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008ea0*/ MOV         R0, R6 
    /*00008ea4*/ ADD         R1, SP, #20 
    /*00008ea8*/ BL          0x0000000000008EA8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008eac*/ MOV         R0, #0 
    RC_GetFrmLostParam_x8eb0:
    /*00008eb0*/ ADD         SP, SP, #28 
    /*00008eb4*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetFrmLostParam_x8eb8:
    /*00008eb8*/ MOV         R0, R4 
    /*00008ebc*/ BL          0x00000000000020F4 
    /*00008ec0*/ CMP         R0, #0 
    /*00008ec4*/ BEQ         RC_GetFrmLostParam_x8e34
    /*00008ec8*/ ADD         SP, SP, #28 
    /*00008ecc*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetFrmLostParam_x8ed0:
    /*00008ed0*/ BL          0x000000000000211C 
    /*00008ed4*/ CMP         R0, #0 
    /*00008ed8*/ BNE         RC_GetFrmLostParam_x8eb0
    /*00008edc*/ B           RC_GetFrmLostParam_x8e2c
    RC_GetFrmLostParam_x8ee0:
    /*00008ee0*/ MOVW        R0, #32773                  @ 0x8005 
    /*00008ee4*/ MOVT        R0, #40979                  @ 0xa013 
    /*00008ee8*/ B           RC_GetFrmLostParam_x8eb0
    RC_GetFrmLostParam_x8eec:
    /*00008eec*/ STR         R0, [SP, #8] 
    /*00008ef0*/ MOVW        R3, #5706                   @ 0x164a 
    /*00008ef4*/ MOV         R1, #19 
    /*00008ef8*/ STR         R3, [SP] 
    /*00008efc*/ STR         R4, [SP, #4] 
    /*00008f00*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x313c] 
    /*00008f04*/ LDR         R3, [PC, #108]              @ 0x0000000000008f78 
    /*00008f08*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0x313c] 
    /*00008f0c*/ MOV         R0, #3 
    /*00008f10*/ BL          0x0000000000008F10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008f14*/ MOV         R0, R6 
    /*00008f18*/ ADD         R1, SP, #20 
    /*00008f1c*/ BL          0x0000000000008F1C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008f20*/ MOVW        R0, #32776                  @ 0x8008 
    /*00008f24*/ MOVT        R0, #40979                  @ 0xa013 
    /*00008f28*/ B           RC_GetFrmLostParam_x8eb0
    RC_GetFrmLostParam_x8f2c:
    /*00008f2c*/ STR         R0, [SP, #4] 
    /*00008f30*/ MOV         R2, #17 
    /*00008f34*/ MOV         R3, #1 
    /*00008f38*/ STR         R2, [SP, #12] 
    /*00008f3c*/ STR         R3, [SP, #8] 
    /*00008f40*/ MOV         R1, #19 
    /*00008f44*/ MOVW        R3, #5693                   @ 0x163d 
    /*00008f48*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14bc] 
    /*00008f4c*/ STR         R3, [SP] 
    /*00008f50*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14bc] 
    /*00008f54*/ LDR         R3, [PC, #28]               @ 0x0000000000008f78 
    /*00008f58*/ MOV         R0, #3 
    /*00008f5c*/ BL          0x0000000000008F5C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008f60*/ MOV         R0, R6 
    /*00008f64*/ ADD         R1, SP, #20 
    /*00008f68*/ BL          0x0000000000008F68          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008f6c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00008f70*/ MOVT        R0, #40979                  @ 0xa013 
    /*00008f74*/ B           RC_GetFrmLostParam_x8eb0
    /*00008f78*/ ANDEQ       R0, R0, R0, ROR R4 
FUNC_END RC_GetFrmLostParam


FUNC_BEGIN RcCheckSuperFrmCfg
    /*00008f7c*/ PUSH        {R4, LR} 
    /*00008f80*/ SUBS        R4, R0, #0 
    /*00008f84*/ SUB         SP, SP, #16 
    /*00008f88*/ BEQ         RcCheckSuperFrmCfg_x8fb4
    RcCheckSuperFrmCfg_x8f8c:
    /*00008f8c*/ LDR         R3, [R4] 
    /*00008f90*/ CMP         R3, #2 
    /*00008f94*/ BHI         RcCheckSuperFrmCfg_x8ff4
    /*00008f98*/ LDR         R3, [R4, #16] 
    /*00008f9c*/ SUB         R2, R3, #1 
    /*00008fa0*/ CMP         R2, #1 
    /*00008fa4*/ MOVLS       R0, #0 
    /*00008fa8*/ BHI         RcCheckSuperFrmCfg_x8fc4
    RcCheckSuperFrmCfg_x8fac:
    /*00008fac*/ ADD         SP, SP, #16 
    /*00008fb0*/ POP         {R4, PC} 
    RcCheckSuperFrmCfg_x8fb4:
    /*00008fb4*/ BL          0x000000000000211C 
    /*00008fb8*/ CMP         R0, #0 
    /*00008fbc*/ BNE         RcCheckSuperFrmCfg_x8fac
    /*00008fc0*/ B           RcCheckSuperFrmCfg_x8f8c
    RcCheckSuperFrmCfg_x8fc4:
    /*00008fc4*/ STR         R3, [SP, #4] 
    /*00008fc8*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31e8] 
    /*00008fcc*/ MOVW        R3, #5739                   @ 0x166b 
    /*00008fd0*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31e8] 
    /*00008fd4*/ STR         R3, [SP] 
    /*00008fd8*/ MOV         R1, #19 
    /*00008fdc*/ LDR         R3, [PC, #80]               @ 0x0000000000009034 
    /*00008fe0*/ MOV         R0, #3 
    /*00008fe4*/ BL          0x0000000000008FE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008fe8*/ MOVW        R0, #32771                  @ 0x8003 
    /*00008fec*/ MOVT        R0, #40979                  @ 0xa013 
    /*00008ff0*/ B           RcCheckSuperFrmCfg_x8fac
    RcCheckSuperFrmCfg_x8ff4:
    /*00008ff4*/ STR         R3, [SP, #4] 
    /*00008ff8*/ MOV         R2, #2 
    /*00008ffc*/ MOV         R3, #0 
    /*00009000*/ STR         R2, [SP, #12] 
    /*00009004*/ STR         R3, [SP, #8] 
    /*00009008*/ MOVW        R2, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3198] 
    /*0000900c*/ MOVW        R3, #5729                   @ 0x1661 
    /*00009010*/ MOVT        R2, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3198] 
    /*00009014*/ STR         R3, [SP] 
    /*00009018*/ MOV         R1, #19 
    /*0000901c*/ LDR         R3, [PC, #16]               @ 0x0000000000009034 
    /*00009020*/ MOV         R0, #3 
    /*00009024*/ BL          0x0000000000009024          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009028*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000902c*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009030*/ B           RcCheckSuperFrmCfg_x8fac
    /*00009034*/ ANDEQ       R0, R0, R4, LSL #9 
FUNC_END RcCheckSuperFrmCfg


FUNC_BEGIN RC_SetSuperFrmCfg
    /*00009038*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000903c*/ SUBS        R6, R1, #0 
    /*00009040*/ SUB         SP, SP, #24 
    /*00009044*/ MOV         R5, R0 
    /*00009048*/ BEQ         RC_SetSuperFrmCfg_x911c
    RC_SetSuperFrmCfg_x904c:
    /*0000904c*/ CMP         R5, #15 
    /*00009050*/ BHI         RC_SetSuperFrmCfg_x9100
    RC_SetSuperFrmCfg_x9054:
    /*00009054*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00009058*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*0000905c*/ LDR         R3, [R4, R5, LSL #2] 
    /*00009060*/ CMP         R3, #0 
    /*00009064*/ BEQ         RC_SetSuperFrmCfg_x912c
    /*00009068*/ ADD         R7, R4, #128                @ 0x80 
    /*0000906c*/ LSL         SL, R5, #2 
    /*00009070*/ ADD         R7, R7, SL 
    /*00009074*/ ADD         R1, SP, #20 
    /*00009078*/ MOV         R0, R7 
    /*0000907c*/ BL          0x000000000000907C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009080*/ LDR         R9, [R4, R5, LSL #2] 
    /*00009084*/ MOV         R0, R9 
    /*00009088*/ BL          0x0000000000009088          @ RcGetRcMode [R_ARM_CALL: .text+0x22bc] 
    /*0000908c*/ SUB         R2, R0, #6 
    /*00009090*/ CMP         R2, #11 
    /*00009094*/ BHI         RC_SetSuperFrmCfg_x90a8
    /*00009098*/ MOVW        R3, #3091                   @ 0xc13 
    /*0000909c*/ MVN         R3, R3, LSR R2 
    /*000090a0*/ TST         R3, #1 
    /*000090a4*/ BEQ         RC_SetSuperFrmCfg_x9138
    RC_SetSuperFrmCfg_x90a8:
    /*000090a8*/ MOV         R0, R6 
    /*000090ac*/ BL          0x00000000000090AC          @ RcCheckSuperFrmCfg [R_ARM_CALL: .text+0x8f7c] 
    /*000090b0*/ SUBS        R8, R0, #0 
    /*000090b4*/ BNE         RC_SetSuperFrmCfg_x9178
    /*000090b8*/ ADD         R0, R9, #2576               @ 0xa10 
    /*000090bc*/ MOV         R2, #20 
    /*000090c0*/ MOV         R1, R6 
    /*000090c4*/ ADD         R4, R4, SL 
    /*000090c8*/ ADD         R0, R0, #12 
    /*000090cc*/ BL          0x00000000000090CC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000090d0*/ ADD         R1, R6, #16 
    /*000090d4*/ MOV         R0, R9 
    /*000090d8*/ BL          0x00000000000090D8          @ RC_NewModeSetRcPriority [R_ARM_CALL: .text+0xf7b4] 
    /*000090dc*/ LDR         R3, [R4, #64]               @ 0x40 
    /*000090e0*/ ADD         R1, SP, #20 
    /*000090e4*/ MOV         R0, R7 
    /*000090e8*/ ADD         R3, R3, #1 
    /*000090ec*/ STR         R3, [R4, #64]               @ 0x40 
    /*000090f0*/ BL          0x00000000000090F0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    RC_SetSuperFrmCfg_x90f4:
    /*000090f4*/ MOV         R0, R8 
    /*000090f8*/ ADD         SP, SP, #24 
    /*000090fc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    RC_SetSuperFrmCfg_x9100:
    /*00009100*/ MOV         R0, R5 
    /*00009104*/ BL          0x00000000000020F4 
    /*00009108*/ SUBS        R8, R0, #0 
    /*0000910c*/ BEQ         RC_SetSuperFrmCfg_x9054
    /*00009110*/ MOV         R0, R8 
    /*00009114*/ ADD         SP, SP, #24 
    /*00009118*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    RC_SetSuperFrmCfg_x911c:
    /*0000911c*/ BL          0x000000000000211C 
    /*00009120*/ SUBS        R8, R0, #0 
    /*00009124*/ BNE         RC_SetSuperFrmCfg_x90f4
    /*00009128*/ B           RC_SetSuperFrmCfg_x904c
    RC_SetSuperFrmCfg_x912c:
    /*0000912c*/ MOVW        R8, #32773                  @ 0x8005 
    /*00009130*/ MOVT        R8, #40979                  @ 0xa013 
    /*00009134*/ B           RC_SetSuperFrmCfg_x90f4
    RC_SetSuperFrmCfg_x9138:
    /*00009138*/ STR         R0, [SP, #8] 
    /*0000913c*/ MOVW        R3, #5770                   @ 0x168a 
    /*00009140*/ MOV         R1, #19 
    /*00009144*/ STR         R3, [SP] 
    /*00009148*/ STR         R5, [SP, #4] 
    /*0000914c*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3228] 
    /*00009150*/ LDR         R3, [PC, #100]              @ 0x00000000000091bc 
    /*00009154*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3228] 
    /*00009158*/ MOV         R0, #3 
    /*0000915c*/ MOVW        R8, #32776                  @ 0x8008 
    /*00009160*/ BL          0x0000000000009160          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009164*/ ADD         R1, SP, #20 
    /*00009168*/ MOV         R0, R7 
    /*0000916c*/ MOVT        R8, #40979                  @ 0xa013 
    /*00009170*/ BL          0x0000000000009170          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009174*/ B           RC_SetSuperFrmCfg_x90f4
    RC_SetSuperFrmCfg_x9178:
    /*00009178*/ LDR         R3, [R6] 
    /*0000917c*/ MOVW        R1, #5780                   @ 0x1694 
    /*00009180*/ STR         R5, [SP, #4] 
    /*00009184*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x326c] 
    /*00009188*/ STR         R1, [SP] 
    /*0000918c*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x326c] 
    /*00009190*/ STR         R3, [SP, #8] 
    /*00009194*/ MOV         R1, #19 
    /*00009198*/ LDR         R3, [PC, #28]               @ 0x00000000000091bc 
    /*0000919c*/ MOV         R0, #3 
    /*000091a0*/ BL          0x00000000000091A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000091a4*/ ADD         R1, SP, #20 
    /*000091a8*/ MOV         R0, R7 
    /*000091ac*/ MOVW        R8, #32771                  @ 0x8003 
    /*000091b0*/ BL          0x00000000000091B0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000091b4*/ MOVT        R8, #40979                  @ 0xa013 
    /*000091b8*/ B           RC_SetSuperFrmCfg_x90f4
    /*000091bc*/ MULEQ       R0, R8, R4 
FUNC_END RC_SetSuperFrmCfg


FUNC_BEGIN RC_GetSuperFrmCfg
    /*000091c0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000091c4*/ SUBS        R7, R1, #0 
    /*000091c8*/ SUB         SP, SP, #28 
    /*000091cc*/ MOV         R4, R0 
    /*000091d0*/ BEQ         RC_GetSuperFrmCfg_x9270
    RC_GetSuperFrmCfg_x91d4:
    /*000091d4*/ CMP         R4, #15 
    /*000091d8*/ BHI         RC_GetSuperFrmCfg_x9258
    RC_GetSuperFrmCfg_x91dc:
    /*000091dc*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*000091e0*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*000091e4*/ LDR         R3, [R5, R4, LSL #2] 
    /*000091e8*/ CMP         R3, #0 
    /*000091ec*/ BEQ         RC_GetSuperFrmCfg_x9280
    /*000091f0*/ ADD         R6, R5, #128                @ 0x80 
    /*000091f4*/ ADD         R1, SP, #20 
    /*000091f8*/ ADD         R6, R6, R4, LSL #2 
    /*000091fc*/ MOV         R0, R6 
    /*00009200*/ BL          0x0000000000009200          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009204*/ LDR         R5, [R5, R4, LSL #2] 
    /*00009208*/ MOV         R0, R5 
    /*0000920c*/ BL          0x000000000000920C          @ RcGetRcMode [R_ARM_CALL: .text+0x22bc] 
    /*00009210*/ SUB         R2, R0, #6 
    /*00009214*/ CMP         R2, #11 
    /*00009218*/ BHI         RC_GetSuperFrmCfg_x922c
    /*0000921c*/ MOVW        R3, #3091                   @ 0xc13 
    /*00009220*/ MVN         R3, R3, LSR R2 
    /*00009224*/ TST         R3, #1 
    /*00009228*/ BEQ         RC_GetSuperFrmCfg_x928c
    RC_GetSuperFrmCfg_x922c:
    /*0000922c*/ ADD         R1, R5, #2576               @ 0xa10 
    /*00009230*/ MOV         R2, #20 
    /*00009234*/ ADD         R1, R1, #12 
    /*00009238*/ MOV         R0, R7 
    /*0000923c*/ BL          0x000000000000923C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009240*/ MOV         R0, R6 
    /*00009244*/ ADD         R1, SP, #20 
    /*00009248*/ BL          0x0000000000009248          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000924c*/ MOV         R0, #0 
    RC_GetSuperFrmCfg_x9250:
    /*00009250*/ ADD         SP, SP, #28 
    /*00009254*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetSuperFrmCfg_x9258:
    /*00009258*/ MOV         R0, R4 
    /*0000925c*/ BL          0x00000000000020F4 
    /*00009260*/ CMP         R0, #0 
    /*00009264*/ BEQ         RC_GetSuperFrmCfg_x91dc
    /*00009268*/ ADD         SP, SP, #28 
    /*0000926c*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetSuperFrmCfg_x9270:
    /*00009270*/ BL          0x000000000000211C 
    /*00009274*/ CMP         R0, #0 
    /*00009278*/ BNE         RC_GetSuperFrmCfg_x9250
    /*0000927c*/ B           RC_GetSuperFrmCfg_x91d4
    RC_GetSuperFrmCfg_x9280:
    /*00009280*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009284*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009288*/ B           RC_GetSuperFrmCfg_x9250
    RC_GetSuperFrmCfg_x928c:
    /*0000928c*/ STR         R0, [SP, #8] 
    /*00009290*/ MOV         R3, #5824                   @ 0x16c0 
    /*00009294*/ MOV         R1, #19 
    /*00009298*/ STR         R3, [SP] 
    /*0000929c*/ STR         R4, [SP, #4] 
    /*000092a0*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3228] 
    /*000092a4*/ LDR         R3, [PC, #32]               @ 0x00000000000092cc 
    /*000092a8*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3228] 
    /*000092ac*/ MOV         R0, #3 
    /*000092b0*/ BL          0x00000000000092B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000092b4*/ MOV         R0, R6 
    /*000092b8*/ ADD         R1, SP, #20 
    /*000092bc*/ BL          0x00000000000092BC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000092c0*/ MOVW        R0, #32776                  @ 0x8008 
    /*000092c4*/ MOVT        R0, #40979                  @ 0xa013 
    /*000092c8*/ B           RC_GetSuperFrmCfg_x9250
    /*000092cc*/ ANDEQ       R0, R0, IP, LSR #9 
FUNC_END RC_GetSuperFrmCfg


FUNC_BEGIN RC_SetSobelCfg
    /*000092d0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000092d4*/ SUBS        R7, R1, #0 
    /*000092d8*/ SUB         SP, SP, #24 
    /*000092dc*/ MOV         R5, R0 
    /*000092e0*/ BEQ         RC_SetSobelCfg_x937c
    RC_SetSobelCfg_x92e4:
    /*000092e4*/ CMP         R5, #15 
    /*000092e8*/ BHI         RC_SetSobelCfg_x9364
    RC_SetSobelCfg_x92ec:
    /*000092ec*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*000092f0*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*000092f4*/ LDR         R3, [R4, R5, LSL #2] 
    /*000092f8*/ CMP         R3, #0 
    /*000092fc*/ BEQ         RC_SetSobelCfg_x938c
    /*00009300*/ ADD         R6, R4, #128                @ 0x80 
    /*00009304*/ LSL         R8, R5, #2 
    /*00009308*/ ADD         R6, R6, R8 
    /*0000930c*/ ADD         R1, SP, #20 
    /*00009310*/ MOV         R0, R6 
    /*00009314*/ BL          0x0000000000009314          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009318*/ LDR         R0, [R4, R5, LSL #2] 
    /*0000931c*/ MOVW        R2, #265                    @ 0x109 
    /*00009320*/ LDR         R3, [R0, #48]               @ 0x30 
    /*00009324*/ CMP         R3, R2 
    /*00009328*/ BNE         RC_SetSobelCfg_x9398
    /*0000932c*/ ADD         R4, R4, R8 
    /*00009330*/ MOV         R1, R7 
    /*00009334*/ MOV         R2, #484                    @ 0x1e4 
    /*00009338*/ ADD         R0, R0, #2608               @ 0xa30 
    /*0000933c*/ BL          0x000000000000933C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009340*/ LDR         R3, [R4, #64]               @ 0x40 
    /*00009344*/ MOV         R0, R6 
    /*00009348*/ ADD         R1, SP, #20 
    /*0000934c*/ ADD         R3, R3, #1 
    /*00009350*/ STR         R3, [R4, #64]               @ 0x40 
    /*00009354*/ BL          0x0000000000009354          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009358*/ MOV         R0, #0 
    RC_SetSobelCfg_x935c:
    /*0000935c*/ ADD         SP, SP, #24 
    /*00009360*/ POP         {R4, R5, R6, R7, R8, PC} 
    RC_SetSobelCfg_x9364:
    /*00009364*/ MOV         R0, R5 
    /*00009368*/ BL          0x00000000000020F4 
    /*0000936c*/ CMP         R0, #0 
    /*00009370*/ BEQ         RC_SetSobelCfg_x92ec
    /*00009374*/ ADD         SP, SP, #24 
    /*00009378*/ POP         {R4, R5, R6, R7, R8, PC} 
    RC_SetSobelCfg_x937c:
    /*0000937c*/ BL          0x000000000000211C 
    /*00009380*/ CMP         R0, #0 
    /*00009384*/ BNE         RC_SetSobelCfg_x935c
    /*00009388*/ B           RC_SetSobelCfg_x92e4
    RC_SetSobelCfg_x938c:
    /*0000938c*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009390*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009394*/ B           RC_SetSobelCfg_x935c
    RC_SetSobelCfg_x9398:
    /*00009398*/ STR         R3, [SP, #8] 
    /*0000939c*/ MOV         R1, #19 
    /*000093a0*/ MOVW        R3, #5855                   @ 0x16df 
    /*000093a4*/ STR         R5, [SP, #4] 
    /*000093a8*/ STR         R3, [SP] 
    /*000093ac*/ MOVW        R2, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32b8] 
    /*000093b0*/ LDR         R3, [PC, #32]               @ 0x00000000000093d8 
    /*000093b4*/ MOVT        R2, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32b8] 
    /*000093b8*/ MOV         R0, #3 
    /*000093bc*/ BL          0x00000000000093BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000093c0*/ MOV         R0, R6 
    /*000093c4*/ ADD         R1, SP, #20 
    /*000093c8*/ BL          0x00000000000093C8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000093cc*/ MOVW        R0, #32776                  @ 0x8008 
    /*000093d0*/ MOVT        R0, #40979                  @ 0xa013 
    /*000093d4*/ B           RC_SetSobelCfg_x935c
    /*000093d8*/ ANDEQ       R0, R0, R0, ASR #9 
FUNC_END RC_SetSobelCfg


FUNC_BEGIN RC_GetSobelCfg
    /*000093dc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000093e0*/ SUBS        R7, R1, #0 
    /*000093e4*/ SUB         SP, SP, #28 
    /*000093e8*/ MOV         R4, R0 
    /*000093ec*/ BEQ         RC_GetSobelCfg_x9474
    RC_GetSobelCfg_x93f0:
    /*000093f0*/ CMP         R4, #15 
    /*000093f4*/ BHI         RC_GetSobelCfg_x945c
    RC_GetSobelCfg_x93f8:
    /*000093f8*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*000093fc*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00009400*/ LDR         R3, [R5, R4, LSL #2] 
    /*00009404*/ CMP         R3, #0 
    /*00009408*/ BEQ         RC_GetSobelCfg_x9484
    /*0000940c*/ ADD         R6, R5, #128                @ 0x80 
    /*00009410*/ ADD         R1, SP, #20 
    /*00009414*/ ADD         R6, R6, R4, LSL #2 
    /*00009418*/ MOV         R0, R6 
    /*0000941c*/ BL          0x000000000000941C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009420*/ LDR         R1, [R5, R4, LSL #2] 
    /*00009424*/ MOVW        R2, #265                    @ 0x109 
    /*00009428*/ LDR         R3, [R1, #48]               @ 0x30 
    /*0000942c*/ CMP         R3, R2 
    /*00009430*/ BNE         RC_GetSobelCfg_x9490
    /*00009434*/ ADD         R1, R1, #2608               @ 0xa30 
    /*00009438*/ MOV         R2, #484                    @ 0x1e4 
    /*0000943c*/ MOV         R0, R7 
    /*00009440*/ BL          0x0000000000009440          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009444*/ MOV         R0, R6 
    /*00009448*/ ADD         R1, SP, #20 
    /*0000944c*/ BL          0x000000000000944C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009450*/ MOV         R0, #0 
    RC_GetSobelCfg_x9454:
    /*00009454*/ ADD         SP, SP, #28 
    /*00009458*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetSobelCfg_x945c:
    /*0000945c*/ MOV         R0, R4 
    /*00009460*/ BL          0x00000000000020F4 
    /*00009464*/ CMP         R0, #0 
    /*00009468*/ BEQ         RC_GetSobelCfg_x93f8
    /*0000946c*/ ADD         SP, SP, #28 
    /*00009470*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetSobelCfg_x9474:
    /*00009474*/ BL          0x000000000000211C 
    /*00009478*/ CMP         R0, #0 
    /*0000947c*/ BNE         RC_GetSobelCfg_x9454
    /*00009480*/ B           RC_GetSobelCfg_x93f0
    RC_GetSobelCfg_x9484:
    /*00009484*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009488*/ MOVT        R0, #40979                  @ 0xa013 
    /*0000948c*/ B           RC_GetSobelCfg_x9454
    RC_GetSobelCfg_x9490:
    /*00009490*/ STR         R3, [SP, #8] 
    /*00009494*/ MOV         R1, #19 
    /*00009498*/ MOV         R3, #5888                   @ 0x1700 
    /*0000949c*/ STR         R4, [SP, #4] 
    /*000094a0*/ STR         R3, [SP] 
    /*000094a4*/ MOVW        R2, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32b8] 
    /*000094a8*/ LDR         R3, [PC, #32]               @ 0x00000000000094d0 
    /*000094ac*/ MOVT        R2, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32b8] 
    /*000094b0*/ MOV         R0, #3 
    /*000094b4*/ BL          0x00000000000094B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000094b8*/ MOV         R0, R6 
    /*000094bc*/ ADD         R1, SP, #20 
    /*000094c0*/ BL          0x00000000000094C0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000094c4*/ MOVW        R0, #32776                  @ 0x8008 
    /*000094c8*/ MOVT        R0, #40979                  @ 0xa013 
    /*000094cc*/ B           RC_GetSobelCfg_x9454
    /*000094d0*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END RC_GetSobelCfg


FUNC_BEGIN RC_EnableIDR
    /*000094d4*/ CMP         R0, #15 
    /*000094d8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000094dc*/ MOV         R5, R0 
    /*000094e0*/ SUB         SP, SP, #16 
    /*000094e4*/ MOV         R6, R1 
    /*000094e8*/ BHI         RC_EnableIDR_x9558
    RC_EnableIDR_x94ec:
    /*000094ec*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*000094f0*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*000094f4*/ LDR         R3, [R4, R5, LSL #2] 
    /*000094f8*/ CMP         R3, #0 
    /*000094fc*/ BEQ         RC_EnableIDR_x95ac
    /*00009500*/ CMP         R6, #1 
    /*00009504*/ BHI         RC_EnableIDR_x957c
    /*00009508*/ ADD         R7, R4, #128                @ 0x80 
    /*0000950c*/ LSL         R8, R5, #2 
    /*00009510*/ ADD         R7, R7, R8 
    /*00009514*/ ADD         R1, SP, #12 
    /*00009518*/ MOV         R0, R7 
    /*0000951c*/ BL          0x000000000000951C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009520*/ CMP         R6, #1 
    /*00009524*/ LDR         R3, [R4, R5, LSL #2] 
    /*00009528*/ BEQ         RC_EnableIDR_x956c
    RC_EnableIDR_x952c:
    /*0000952c*/ ADD         R4, R4, R8 
    /*00009530*/ STR         R6, [R3, #3096]             @ 0xc18 
    /*00009534*/ MOV         R0, R7 
    /*00009538*/ ADD         R1, SP, #12 
    /*0000953c*/ LDR         R3, [R4, #64]               @ 0x40 
    /*00009540*/ ADD         R3, R3, #1 
    /*00009544*/ STR         R3, [R4, #64]               @ 0x40 
    /*00009548*/ BL          0x0000000000009548          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000954c*/ MOV         R0, #0 
    RC_EnableIDR_x9550:
    /*00009550*/ ADD         SP, SP, #16 
    /*00009554*/ POP         {R4, R5, R6, R7, R8, PC} 
    RC_EnableIDR_x9558:
    /*00009558*/ BL          0x00000000000020F4 
    /*0000955c*/ CMP         R0, #0 
    /*00009560*/ BEQ         RC_EnableIDR_x94ec
    /*00009564*/ ADD         SP, SP, #16 
    /*00009568*/ POP         {R4, R5, R6, R7, R8, PC} 
    RC_EnableIDR_x956c:
    /*0000956c*/ LDR         R2, [R3, #3096]             @ 0xc18 
    /*00009570*/ CMP         R2, #0 
    /*00009574*/ STREQ       R6, [R3, #3104]             @ 0xc20 
    /*00009578*/ B           RC_EnableIDR_x952c
    RC_EnableIDR_x957c:
    /*0000957c*/ MOVW        R3, #5914                   @ 0x171a 
    /*00009580*/ STR         R6, [SP, #4] 
    /*00009584*/ STR         R3, [SP] 
    /*00009588*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32f8] 
    /*0000958c*/ LDR         R3, [PC, #36]               @ 0x00000000000095b8 
    /*00009590*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32f8] 
    /*00009594*/ MOV         R1, #19 
    /*00009598*/ MOV         R0, #3 
    /*0000959c*/ BL          0x000000000000959C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000095a0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000095a4*/ MOVT        R0, #40979                  @ 0xa013 
    /*000095a8*/ B           RC_EnableIDR_x9550
    RC_EnableIDR_x95ac:
    /*000095ac*/ MOVW        R0, #32773                  @ 0x8005 
    /*000095b0*/ MOVT        R0, #40979                  @ 0xa013 
    /*000095b4*/ B           RC_EnableIDR_x9550
    /*000095b8*/ ANDEQ       R0, R0, R0, ROR #9 
FUNC_END RC_EnableIDR


FUNC_BEGIN RC_ChangeGopModeAttr
    /*000095bc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000095c0*/ SUBS        R7, R1, #0 
    /*000095c4*/ SUB         SP, SP, #316                @ 0x13c 
    /*000095c8*/ MOV         R4, R0 
    /*000095cc*/ MOV         R8, R2 
    /*000095d0*/ BEQ         RC_ChangeGopModeAttr_x9680
    RC_ChangeGopModeAttr_x95d4:
    /*000095d4*/ CMP         R4, #15 
    /*000095d8*/ BHI         RC_ChangeGopModeAttr_x9614
    RC_ChangeGopModeAttr_x95dc:
    /*000095dc*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*000095e0*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*000095e4*/ LDR         R9, [R5, R4, LSL #2] 
    /*000095e8*/ CMP         R9, #0 
    /*000095ec*/ BEQ         RC_ChangeGopModeAttr_x9690
    /*000095f0*/ ADD         R2, R7, #100                @ 0x64 
    /*000095f4*/ ADD         R0, R7, #60                 @ 0x3c 
    /*000095f8*/ ADD         R1, SP, #8 
    /*000095fc*/ BL          0x00000000000095FC          @ RcTransAttr [R_ARM_CALL: .text+0x2464] 
    /*00009600*/ SUBS        R6, R0, #0 
    /*00009604*/ BEQ         RC_ChangeGopModeAttr_x9630
    RC_ChangeGopModeAttr_x9608:
    /*00009608*/ MOV         R0, R6 
    /*0000960c*/ ADD         SP, SP, #316                @ 0x13c 
    /*00009610*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    RC_ChangeGopModeAttr_x9614:
    /*00009614*/ MOV         R0, R4 
    /*00009618*/ BL          0x00000000000020F4 
    /*0000961c*/ SUBS        R6, R0, #0 
    /*00009620*/ BEQ         RC_ChangeGopModeAttr_x95dc
    /*00009624*/ MOV         R0, R6 
    /*00009628*/ ADD         SP, SP, #316                @ 0x13c 
    /*0000962c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    RC_ChangeGopModeAttr_x9630:
    /*00009630*/ ADD         R1, SP, #88                 @ 0x58 
    /*00009634*/ ADD         R0, SP, #8 
    /*00009638*/ BL          0x0000000000009638          @ RC_DRV_InitParam [R_ARM_CALL: .text+0x10d38] 
    /*0000963c*/ ADD         R0, SP, #8 
    /*00009640*/ BL          0x0000000000009640          @ RcGetRcMode [R_ARM_CALL: .text+0x22bc] 
    /*00009644*/ MOV         R2, R8 
    /*00009648*/ ADD         R1, SP, #88                 @ 0x58 
    /*0000964c*/ BL          0x000000000000964C          @ RC_RevTransParam [R_ARM_CALL: .text+0x33a8] 
    /*00009650*/ SUBS        R6, R0, #0 
    /*00009654*/ BNE         RC_ChangeGopModeAttr_x9608
    /*00009658*/ ADD         R5, R5, #128                @ 0x80 
    /*0000965c*/ ADD         R1, SP, #4 
    /*00009660*/ ADD         R4, R5, R4, LSL #2 
    /*00009664*/ MOV         R0, R4 
    /*00009668*/ BL          0x0000000000009668          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000966c*/ MOV         R0, R4 
    /*00009670*/ ADD         R1, SP, #4 
    /*00009674*/ STR         R6, [R9, #2448]             @ 0x990 
    /*00009678*/ BL          0x0000000000009678          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000967c*/ B           RC_ChangeGopModeAttr_x9608
    RC_ChangeGopModeAttr_x9680:
    /*00009680*/ BL          0x000000000000211C 
    /*00009684*/ SUBS        R6, R0, #0 
    /*00009688*/ BNE         RC_ChangeGopModeAttr_x9608
    /*0000968c*/ B           RC_ChangeGopModeAttr_x95d4
    RC_ChangeGopModeAttr_x9690:
    /*00009690*/ MOVW        R6, #32773                  @ 0x8005 
    /*00009694*/ MOVT        R6, #40979                  @ 0xa013 
    /*00009698*/ B           RC_ChangeGopModeAttr_x9608
FUNC_END RC_ChangeGopModeAttr


FUNC_BEGIN RC_GetQpMapEnFlag
    /*0000969c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000096a0*/ SUBS        R8, R1, #0 
    /*000096a4*/ SUB         SP, SP, #8 
    /*000096a8*/ MOV         R4, R0 
    /*000096ac*/ BEQ         RC_GetQpMapEnFlag_x976c
    RC_GetQpMapEnFlag_x96b0:
    /*000096b0*/ CMP         R4, #15 
    /*000096b4*/ BHI         RC_GetQpMapEnFlag_x9754
    RC_GetQpMapEnFlag_x96b8:
    /*000096b8*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*000096bc*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*000096c0*/ LDR         R3, [R5, R4, LSL #2] 
    /*000096c4*/ CMP         R3, #0 
    /*000096c8*/ BEQ         RC_GetQpMapEnFlag_x977c
    /*000096cc*/ ADD         R6, R5, #128                @ 0x80 
    /*000096d0*/ MOV         R7, #0 
    /*000096d4*/ ADD         R6, R6, R4, LSL #2 
    /*000096d8*/ ADD         R1, SP, #4 
    /*000096dc*/ STR         R7, [R8] 
    /*000096e0*/ MOV         R0, R6 
    /*000096e4*/ BL          0x00000000000096E4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000096e8*/ LDR         R2, [R5, R4, LSL #2] 
    /*000096ec*/ LDR         R3, [R2, #52]               @ 0x34 
    /*000096f0*/ CMP         R3, #1 
    /*000096f4*/ LDREQ       R3, [R2, #252]              @ 0xfc 
    /*000096f8*/ STREQ       R3, [R8] 
    /*000096fc*/ BEQ         RC_GetQpMapEnFlag_x9710
    /*00009700*/ CMP         R3, #0 
    /*00009704*/ BNE         RC_GetQpMapEnFlag_x9728
    RC_GetQpMapEnFlag_x9708:
    /*00009708*/ LDR         R3, [R2, #292]              @ 0x124 
    /*0000970c*/ STR         R3, [R8] 
    RC_GetQpMapEnFlag_x9710:
    /*00009710*/ MOV         R0, R6 
    /*00009714*/ ADD         R1, SP, #4 
    /*00009718*/ BL          0x0000000000009718          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000971c*/ MOV         R0, #0 
    RC_GetQpMapEnFlag_x9720:
    /*00009720*/ ADD         SP, SP, #8 
    /*00009724*/ POP         {R4, R5, R6, R7, R8, PC} 
    RC_GetQpMapEnFlag_x9728:
    /*00009728*/ CMP         R3, #2 
    /*0000972c*/ BEQ         RC_GetQpMapEnFlag_x9708
    /*00009730*/ CMP         R3, #3 
    /*00009734*/ BEQ         RC_GetQpMapEnFlag_x9708
    /*00009738*/ CMP         R3, #4 
    /*0000973c*/ BEQ         RC_GetQpMapEnFlag_x9708
    /*00009740*/ CMP         R3, #6 
    /*00009744*/ STRNE       R7, [R8] 
    /*00009748*/ MOVEQ       R3, #1 
    /*0000974c*/ STREQ       R3, [R8] 
    /*00009750*/ B           RC_GetQpMapEnFlag_x9710
    RC_GetQpMapEnFlag_x9754:
    /*00009754*/ MOV         R0, R4 
    /*00009758*/ BL          0x00000000000020F4 
    /*0000975c*/ CMP         R0, #0 
    /*00009760*/ BEQ         RC_GetQpMapEnFlag_x96b8
    /*00009764*/ ADD         SP, SP, #8 
    /*00009768*/ POP         {R4, R5, R6, R7, R8, PC} 
    RC_GetQpMapEnFlag_x976c:
    /*0000976c*/ BL          0x000000000000211C 
    /*00009770*/ CMP         R0, #0 
    /*00009774*/ BNE         RC_GetQpMapEnFlag_x9720
    /*00009778*/ B           RC_GetQpMapEnFlag_x96b0
    RC_GetQpMapEnFlag_x977c:
    /*0000977c*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009780*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009784*/ B           RC_GetQpMapEnFlag_x9720
FUNC_END RC_GetQpMapEnFlag


FUNC_BEGIN RC_InsertFrm
    /*00009788*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*0000978c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00009790*/ LDR         R3, [R3, R0, LSL #2] 
    /*00009794*/ MOV         R0, #0 
    /*00009798*/ STR         R1, [R3, #3100]             @ 0xc1c 
    /*0000979c*/ BX          LR 
FUNC_END RC_InsertFrm


FUNC_BEGIN Rc_SetSceneMode
    /*000097a0*/ PUSH        {R4, R5, R6, LR} 
    /*000097a4*/ SUBS        R5, R1, #0 
    /*000097a8*/ SUB         SP, SP, #8 
    /*000097ac*/ MOV         R4, R0 
    /*000097b0*/ BEQ         Rc_SetSceneMode_x9830
    Rc_SetSceneMode_x97b4:
    /*000097b4*/ CMP         R4, #15 
    /*000097b8*/ BHI         Rc_SetSceneMode_x9818
    Rc_SetSceneMode_x97bc:
    /*000097bc*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*000097c0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*000097c4*/ LDR         R6, [R3, R4, LSL #2] 
    /*000097c8*/ CMP         R6, #0 
    /*000097cc*/ BEQ         Rc_SetSceneMode_x9840
    /*000097d0*/ LDR         R1, [R6, #3112]             @ 0xc28 
    /*000097d4*/ LDR         R2, [R5] 
    /*000097d8*/ CMP         R1, R2 
    /*000097dc*/ MOVEQ       R0, #0 
    /*000097e0*/ BEQ         Rc_SetSceneMode_x9810
    /*000097e4*/ ADD         R3, R3, #128                @ 0x80 
    /*000097e8*/ ADD         R1, SP, #4 
    /*000097ec*/ ADD         R4, R3, R4, LSL #2 
    /*000097f0*/ MOV         R0, R4 
    /*000097f4*/ BL          0x00000000000097F4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000097f8*/ LDR         R3, [R5] 
    /*000097fc*/ MOV         R0, R4 
    /*00009800*/ ADD         R1, SP, #4 
    /*00009804*/ STR         R3, [R6, #3112]             @ 0xc28 
    /*00009808*/ BL          0x0000000000009808          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000980c*/ MOV         R0, #0 
    Rc_SetSceneMode_x9810:
    /*00009810*/ ADD         SP, SP, #8 
    /*00009814*/ POP         {R4, R5, R6, PC} 
    Rc_SetSceneMode_x9818:
    /*00009818*/ MOV         R0, R4 
    /*0000981c*/ BL          0x00000000000020F4 
    /*00009820*/ CMP         R0, #0 
    /*00009824*/ BEQ         Rc_SetSceneMode_x97bc
    /*00009828*/ ADD         SP, SP, #8 
    /*0000982c*/ POP         {R4, R5, R6, PC} 
    Rc_SetSceneMode_x9830:
    /*00009830*/ BL          0x000000000000211C 
    /*00009834*/ CMP         R0, #0 
    /*00009838*/ BNE         Rc_SetSceneMode_x9810
    /*0000983c*/ B           Rc_SetSceneMode_x97b4
    Rc_SetSceneMode_x9840:
    /*00009840*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009844*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009848*/ B           Rc_SetSceneMode_x9810
FUNC_END Rc_SetSceneMode


FUNC_BEGIN Rc_GetSceneMode
    /*0000984c*/ PUSH        {R4, R5, R6, LR} 
    /*00009850*/ SUBS        R5, R1, #0 
    /*00009854*/ MOV         R4, R0 
    /*00009858*/ BEQ         Rc_GetSceneMode_x989c
    Rc_GetSceneMode_x985c:
    /*0000985c*/ CMP         R4, #15 
    /*00009860*/ BHI         Rc_GetSceneMode_x9888
    Rc_GetSceneMode_x9864:
    /*00009864*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00009868*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*0000986c*/ LDR         R3, [R3, R4, LSL #2] 
    /*00009870*/ CMP         R3, #0 
    /*00009874*/ BEQ         Rc_GetSceneMode_x98ac
    /*00009878*/ LDR         R3, [R3, #3112]             @ 0xc28 
    /*0000987c*/ MOV         R0, #0 
    /*00009880*/ STR         R3, [R5] 
    /*00009884*/ POP         {R4, R5, R6, PC} 
    Rc_GetSceneMode_x9888:
    /*00009888*/ MOV         R0, R4 
    /*0000988c*/ BL          0x00000000000020F4 
    /*00009890*/ CMP         R0, #0 
    /*00009894*/ POPNE       {R4, R5, R6, PC} 
    /*00009898*/ B           Rc_GetSceneMode_x9864
    Rc_GetSceneMode_x989c:
    /*0000989c*/ BL          0x000000000000211C 
    /*000098a0*/ CMP         R0, #0 
    /*000098a4*/ POPNE       {R4, R5, R6, PC} 
    /*000098a8*/ B           Rc_GetSceneMode_x985c
    Rc_GetSceneMode_x98ac:
    /*000098ac*/ MOVW        R0, #32773                  @ 0x8005 
    /*000098b0*/ MOVT        R0, #40979                  @ 0xa013 
    /*000098b4*/ POP         {R4, R5, R6, PC} 
FUNC_END Rc_GetSceneMode


FUNC_BEGIN Rc_SetForeground
    /*000098b8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000098bc*/ SUBS        R4, R1, #0 
    /*000098c0*/ SUB         SP, SP, #12 
    /*000098c4*/ MOV         R7, R0 
    /*000098c8*/ BEQ         Rc_SetForeground_x99b0
    Rc_SetForeground_x98cc:
    /*000098cc*/ CMP         R7, #15 
    /*000098d0*/ BHI         Rc_SetForeground_x9998
    Rc_SetForeground_x98d4:
    /*000098d4*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*000098d8*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*000098dc*/ LDR         R5, [R6, R7, LSL #2] 
    /*000098e0*/ CMP         R5, #0 
    /*000098e4*/ BEQ         Rc_SetForeground_x99c0
    /*000098e8*/ ADD         R6, R6, #128                @ 0x80 
    /*000098ec*/ ADD         R1, SP, #4 
    /*000098f0*/ ADD         R6, R6, R7, LSL #2 
    /*000098f4*/ MOV         R0, R6 
    /*000098f8*/ BL          0x00000000000098F8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000098fc*/ ADD         R3, R5, #3008               @ 0xbc0 
    /*00009900*/ LDR         R7, [R5, #48]               @ 0x30 
    /*00009904*/ ADD         R3, R3, #4 
    /*00009908*/ ADD         LR, R5, #3024               @ 0xbd0 
    /*0000990c*/ MOV         IP, #1 
    /*00009910*/ MOV         R0, #0 
    Rc_SetForeground_x9914:
    /*00009914*/ LDR         R2, [R4] 
    /*00009918*/ CMP         R7, #96                     @ 0x60 
    /*0000991c*/ MOVNE       R1, IP 
    /*00009920*/ MOVEQ       R1, R0 
    /*00009924*/ STR         R2, [R3, #48]               @ 0x30 
    /*00009928*/ LDR         R2, [R4, #4] 
    /*0000992c*/ STR         R2, [R3, #64]               @ 0x40 
    /*00009930*/ LDR         R2, [R4, #8] 
    /*00009934*/ STR         R2, [R3], #4 
    /*00009938*/ CMP         R3, LR 
    /*0000993c*/ LDR         R2, [R4, #12] 
    /*00009940*/ STR         R1, [R3, #28] 
    /*00009944*/ STR         R2, [R3, #12] 
    /*00009948*/ BNE         Rc_SetForeground_x9914
    /*0000994c*/ ADD         R1, R5, #2880               @ 0xb40 
    /*00009950*/ ADD         R2, R5, #2896               @ 0xb50 
    /*00009954*/ ADD         IP, R4, #76                 @ 0x4c 
    /*00009958*/ ADD         R1, R1, #15 
    /*0000995c*/ ADD         R2, R2, #15 
    /*00009960*/ ADD         R3, R4, #12 
    /*00009964*/ MOV         R0, IP 
    Rc_SetForeground_x9968:
    /*00009968*/ LDR         LR, [IP, #4]! 
    /*0000996c*/ STRB        LR, [R1, #1]! 
    /*00009970*/ LDR         LR, [R3, #4]! 
    /*00009974*/ CMP         R3, R0 
    /*00009978*/ STRB        LR, [R2, #1]! 
    /*0000997c*/ BNE         Rc_SetForeground_x9968
    /*00009980*/ MOV         R0, R6 
    /*00009984*/ ADD         R1, SP, #4 
    /*00009988*/ BL          0x0000000000009988          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000998c*/ MOV         R0, #0 
    Rc_SetForeground_x9990:
    /*00009990*/ ADD         SP, SP, #12 
    /*00009994*/ POP         {R4, R5, R6, R7, PC} 
    Rc_SetForeground_x9998:
    /*00009998*/ MOV         R0, R7 
    /*0000999c*/ BL          0x00000000000020F4 
    /*000099a0*/ CMP         R0, #0 
    /*000099a4*/ BEQ         Rc_SetForeground_x98d4
    /*000099a8*/ ADD         SP, SP, #12 
    /*000099ac*/ POP         {R4, R5, R6, R7, PC} 
    Rc_SetForeground_x99b0:
    /*000099b0*/ BL          0x000000000000211C 
    /*000099b4*/ CMP         R0, #0 
    /*000099b8*/ BNE         Rc_SetForeground_x9990
    /*000099bc*/ B           Rc_SetForeground_x98cc
    Rc_SetForeground_x99c0:
    /*000099c0*/ MOVW        R0, #32773                  @ 0x8005 
    /*000099c4*/ MOVT        R0, #40979                  @ 0xa013 
    /*000099c8*/ B           Rc_SetForeground_x9990
FUNC_END Rc_SetForeground


FUNC_BEGIN Rc_GetForeground
    /*000099cc*/ PUSH        {R4, R5, R6, LR} 
    /*000099d0*/ SUBS        R5, R1, #0 
    /*000099d4*/ MOV         R4, R0 
    /*000099d8*/ BEQ         Rc_GetForeground_x9a68
    Rc_GetForeground_x99dc:
    /*000099dc*/ CMP         R4, #15 
    /*000099e0*/ BHI         Rc_GetForeground_x9a54
    Rc_GetForeground_x99e4:
    /*000099e4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*000099e8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*000099ec*/ LDR         R4, [R3, R4, LSL #2] 
    /*000099f0*/ CMP         R4, #0 
    /*000099f4*/ BEQ         Rc_GetForeground_x9a78
    /*000099f8*/ LDR         R1, [R4, #3060]             @ 0xbf4 
    /*000099fc*/ ADD         R2, R4, #2896               @ 0xb50 
    /*00009a00*/ ADD         R2, R2, #15 
    /*00009a04*/ ADD         R3, R4, #2880               @ 0xb40 
    /*00009a08*/ ADD         IP, R5, #76                 @ 0x4c 
    /*00009a0c*/ ADD         R3, R3, #15 
    /*00009a10*/ STR         R1, [R5] 
    /*00009a14*/ MOV         R0, R5 
    /*00009a18*/ LDR         R1, [R4, #3076]             @ 0xc04 
    /*00009a1c*/ MOV         LR, R2 
    /*00009a20*/ STR         R1, [R5, #4] 
    /*00009a24*/ LDR         R1, [R4, #3012]             @ 0xbc4 
    /*00009a28*/ STR         R1, [R5, #8] 
    /*00009a2c*/ LDR         R1, [R4, #3028]             @ 0xbd4 
    /*00009a30*/ STR         R1, [R0, #12]! 
    Rc_GetForeground_x9a34:
    /*00009a34*/ LDRB        R1, [R3, #1]! 
    /*00009a38*/ CMP         R3, LR 
    /*00009a3c*/ STR         R1, [IP, #4]! 
    /*00009a40*/ LDRB        R1, [R2, #1]! 
    /*00009a44*/ STR         R1, [R0, #4]! 
    /*00009a48*/ BNE         Rc_GetForeground_x9a34
    /*00009a4c*/ MOV         R0, #0 
    /*00009a50*/ POP         {R4, R5, R6, PC} 
    Rc_GetForeground_x9a54:
    /*00009a54*/ MOV         R0, R4 
    /*00009a58*/ BL          0x00000000000020F4 
    /*00009a5c*/ CMP         R0, #0 
    /*00009a60*/ POPNE       {R4, R5, R6, PC} 
    /*00009a64*/ B           Rc_GetForeground_x99e4
    Rc_GetForeground_x9a68:
    /*00009a68*/ BL          0x000000000000211C 
    /*00009a6c*/ CMP         R0, #0 
    /*00009a70*/ POPNE       {R4, R5, R6, PC} 
    /*00009a74*/ B           Rc_GetForeground_x99dc
    Rc_GetForeground_x9a78:
    /*00009a78*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009a7c*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009a80*/ POP         {R4, R5, R6, PC} 
FUNC_END Rc_GetForeground


FUNC_BEGIN Rc_SetHierarchicalQp
    /*00009a84*/ PUSH        {R4, R5, R6, LR} 
    /*00009a88*/ SUBS        R5, R1, #0 
    /*00009a8c*/ SUB         SP, SP, #8 
    /*00009a90*/ MOV         R4, R0 
    /*00009a94*/ BEQ         Rc_SetHierarchicalQp_x9b0c
    Rc_SetHierarchicalQp_x9a98:
    /*00009a98*/ CMP         R4, #15 
    /*00009a9c*/ BHI         Rc_SetHierarchicalQp_x9af4
    Rc_SetHierarchicalQp_x9aa0:
    /*00009aa0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00009aa4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00009aa8*/ LDR         R6, [R3, R4, LSL #2] 
    /*00009aac*/ CMP         R6, #0 
    /*00009ab0*/ BEQ         Rc_SetHierarchicalQp_x9b1c
    /*00009ab4*/ ADD         R3, R3, #128                @ 0x80 
    /*00009ab8*/ ADD         R1, SP, #4 
    /*00009abc*/ ADD         R4, R3, R4, LSL #2 
    /*00009ac0*/ MOV         R0, R4 
    /*00009ac4*/ BL          0x0000000000009AC4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009ac8*/ ADD         R0, R6, #3136               @ 0xc40 
    /*00009acc*/ MOV         R1, R5 
    /*00009ad0*/ MOV         R2, #36                     @ 0x24 
    /*00009ad4*/ ADD         R0, R0, #12 
    /*00009ad8*/ BL          0x0000000000009AD8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009adc*/ MOV         R0, R4 
    /*00009ae0*/ ADD         R1, SP, #4 
    /*00009ae4*/ BL          0x0000000000009AE4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009ae8*/ MOV         R0, #0 
    Rc_SetHierarchicalQp_x9aec:
    /*00009aec*/ ADD         SP, SP, #8 
    /*00009af0*/ POP         {R4, R5, R6, PC} 
    Rc_SetHierarchicalQp_x9af4:
    /*00009af4*/ MOV         R0, R4 
    /*00009af8*/ BL          0x00000000000020F4 
    /*00009afc*/ CMP         R0, #0 
    /*00009b00*/ BEQ         Rc_SetHierarchicalQp_x9aa0
    /*00009b04*/ ADD         SP, SP, #8 
    /*00009b08*/ POP         {R4, R5, R6, PC} 
    Rc_SetHierarchicalQp_x9b0c:
    /*00009b0c*/ BL          0x000000000000211C 
    /*00009b10*/ CMP         R0, #0 
    /*00009b14*/ BNE         Rc_SetHierarchicalQp_x9aec
    /*00009b18*/ B           Rc_SetHierarchicalQp_x9a98
    Rc_SetHierarchicalQp_x9b1c:
    /*00009b1c*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009b20*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009b24*/ B           Rc_SetHierarchicalQp_x9aec
FUNC_END Rc_SetHierarchicalQp


FUNC_BEGIN Rc_GetHierarchicalQp
    /*00009b28*/ PUSH        {R4, R5, R6, LR} 
    /*00009b2c*/ SUBS        R5, R1, #0 
    /*00009b30*/ MOV         R4, R0 
    /*00009b34*/ BEQ         Rc_GetHierarchicalQp_x9b84
    Rc_GetHierarchicalQp_x9b38:
    /*00009b38*/ CMP         R4, #15 
    /*00009b3c*/ BHI         Rc_GetHierarchicalQp_x9b70
    Rc_GetHierarchicalQp_x9b40:
    /*00009b40*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00009b44*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00009b48*/ LDR         R1, [R3, R4, LSL #2] 
    /*00009b4c*/ CMP         R1, #0 
    /*00009b50*/ BEQ         Rc_GetHierarchicalQp_x9b94
    /*00009b54*/ ADD         R1, R1, #3136               @ 0xc40 
    /*00009b58*/ MOV         R0, R5 
    /*00009b5c*/ ADD         R1, R1, #12 
    /*00009b60*/ MOV         R2, #36                     @ 0x24 
    /*00009b64*/ BL          0x0000000000009B64          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009b68*/ MOV         R0, #0 
    /*00009b6c*/ POP         {R4, R5, R6, PC} 
    Rc_GetHierarchicalQp_x9b70:
    /*00009b70*/ MOV         R0, R4 
    /*00009b74*/ BL          0x00000000000020F4 
    /*00009b78*/ CMP         R0, #0 
    /*00009b7c*/ POPNE       {R4, R5, R6, PC} 
    /*00009b80*/ B           Rc_GetHierarchicalQp_x9b40
    Rc_GetHierarchicalQp_x9b84:
    /*00009b84*/ BL          0x000000000000211C 
    /*00009b88*/ CMP         R0, #0 
    /*00009b8c*/ POPNE       {R4, R5, R6, PC} 
    /*00009b90*/ B           Rc_GetHierarchicalQp_x9b38
    Rc_GetHierarchicalQp_x9b94:
    /*00009b94*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009b98*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009b9c*/ POP         {R4, R5, R6, PC} 
FUNC_END Rc_GetHierarchicalQp


FUNC_BEGIN RC_CheckClrStatAfterSetBr
    /*00009ba0*/ CMP         R0, #1 
    /*00009ba4*/ BHI         RC_CheckClrStatAfterSetBr_x9bb0
    /*00009ba8*/ MOV         R0, #0 
    /*00009bac*/ BX          LR 
    RC_CheckClrStatAfterSetBr_x9bb0:
    /*00009bb0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00009bb4*/ SUB         SP, SP, #12 
    /*00009bb8*/ MOVW        R3, #6187                   @ 0x182b 
    /*00009bbc*/ MOV         R1, #19 
    /*00009bc0*/ STR         R0, [SP, #4] 
    /*00009bc4*/ MOVW        R2, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3330] 
    /*00009bc8*/ STR         R3, [SP] 
    /*00009bcc*/ MOVT        R2, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3330] 
    /*00009bd0*/ LDR         R3, [PC, #20]               @ 0x0000000000009bec 
    /*00009bd4*/ MOV         R0, #3 
    /*00009bd8*/ BL          0x0000000000009BD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009bdc*/ MOVW        R0, #32771                  @ 0x8003 
    /*00009be0*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009be4*/ ADD         SP, SP, #12 
    /*00009be8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00009bec*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END RC_CheckClrStatAfterSetBr


FUNC_BEGIN RC_SetModParam
    /*00009bf0*/ LDR         R2, [R0] 
    /*00009bf4*/ CMP         R2, #1 
    /*00009bf8*/ BLS         RC_SetModParam_x9c58
    /*00009bfc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00009c00*/ SUB         SP, SP, #12 
    /*00009c04*/ MOVW        R3, #6187                   @ 0x182b 
    /*00009c08*/ MOV         R1, #19 
    /*00009c0c*/ STR         R2, [SP, #4] 
    /*00009c10*/ MOV         R0, #3 
    /*00009c14*/ STR         R3, [SP] 
    /*00009c18*/ MOVW        R2, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3330] 
    /*00009c1c*/ LDR         R3, [PC, #72]               @ 0x0000000000009c6c 
    /*00009c20*/ MOVT        R2, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3330] 
    /*00009c24*/ BL          0x0000000000009C24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009c28*/ MOVW        R3, #6201                   @ 0x1839 
    /*00009c2c*/ MOV         R1, #19 
    /*00009c30*/ STR         R3, [SP] 
    /*00009c34*/ MOVW        R2, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x338c] 
    /*00009c38*/ LDR         R3, [PC, #48]               @ 0x0000000000009c70 
    /*00009c3c*/ MOVT        R2, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0x338c] 
    /*00009c40*/ MOV         R0, #3 
    /*00009c44*/ BL          0x0000000000009C44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009c48*/ MOVW        R0, #32771                  @ 0x8003 
    /*00009c4c*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009c50*/ ADD         SP, SP, #12 
    /*00009c54*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RC_SetModParam_x9c58:
    /*00009c58*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0xe0] 
    /*00009c5c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0xe0] 
    /*00009c60*/ MOV         R0, #0 
    /*00009c64*/ STR         R2, [R3] 
    /*00009c68*/ BX          LR 
    /*00009c6c*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
    /*00009c70*/ ANDEQ       R0, R0, IP, LSL #10 
FUNC_END RC_SetModParam


FUNC_BEGIN RC_GetModParam
    /*00009c74*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0xe0] 
    /*00009c78*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0xe0] 
    /*00009c7c*/ LDR         R3, [R3] 
    /*00009c80*/ STR         R3, [R0] 
    /*00009c84*/ MOV         R0, #0 
    /*00009c88*/ BX          LR 
FUNC_END RC_GetModParam


FUNC_BEGIN Rc_SetDeBreathEffect
    /*00009c8c*/ PUSH        {R4, R5, R6, LR} 
    /*00009c90*/ SUBS        R5, R1, #0 
    /*00009c94*/ SUB         SP, SP, #8 
    /*00009c98*/ MOV         R4, R0 
    /*00009c9c*/ BEQ         Rc_SetDeBreathEffect_x9d14
    Rc_SetDeBreathEffect_x9ca0:
    /*00009ca0*/ CMP         R4, #15 
    /*00009ca4*/ BHI         Rc_SetDeBreathEffect_x9cfc
    Rc_SetDeBreathEffect_x9ca8:
    /*00009ca8*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00009cac*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00009cb0*/ LDR         R6, [R3, R4, LSL #2] 
    /*00009cb4*/ CMP         R6, #0 
    /*00009cb8*/ BEQ         Rc_SetDeBreathEffect_x9d24
    /*00009cbc*/ ADD         R3, R3, #128                @ 0x80 
    /*00009cc0*/ ADD         R1, SP, #4 
    /*00009cc4*/ ADD         R4, R3, R4, LSL #2 
    /*00009cc8*/ MOV         R0, R4 
    /*00009ccc*/ BL          0x0000000000009CCC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009cd0*/ ADD         R0, R6, #3104               @ 0xc20 
    /*00009cd4*/ MOV         R1, R5 
    /*00009cd8*/ MOV         R2, #12 
    /*00009cdc*/ ADD         R0, R0, #12 
    /*00009ce0*/ BL          0x0000000000009CE0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009ce4*/ MOV         R0, R4 
    /*00009ce8*/ ADD         R1, SP, #4 
    /*00009cec*/ BL          0x0000000000009CEC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009cf0*/ MOV         R0, #0 
    Rc_SetDeBreathEffect_x9cf4:
    /*00009cf4*/ ADD         SP, SP, #8 
    /*00009cf8*/ POP         {R4, R5, R6, PC} 
    Rc_SetDeBreathEffect_x9cfc:
    /*00009cfc*/ MOV         R0, R4 
    /*00009d00*/ BL          0x00000000000020F4 
    /*00009d04*/ CMP         R0, #0 
    /*00009d08*/ BEQ         Rc_SetDeBreathEffect_x9ca8
    /*00009d0c*/ ADD         SP, SP, #8 
    /*00009d10*/ POP         {R4, R5, R6, PC} 
    Rc_SetDeBreathEffect_x9d14:
    /*00009d14*/ BL          0x000000000000211C 
    /*00009d18*/ CMP         R0, #0 
    /*00009d1c*/ BNE         Rc_SetDeBreathEffect_x9cf4
    /*00009d20*/ B           Rc_SetDeBreathEffect_x9ca0
    Rc_SetDeBreathEffect_x9d24:
    /*00009d24*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009d28*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009d2c*/ B           Rc_SetDeBreathEffect_x9cf4
FUNC_END Rc_SetDeBreathEffect


FUNC_BEGIN Rc_GetDeBreathEffect
    /*00009d30*/ PUSH        {R4, R5, R6, LR} 
    /*00009d34*/ SUBS        R5, R1, #0 
    /*00009d38*/ MOV         R4, R0 
    /*00009d3c*/ BEQ         Rc_GetDeBreathEffect_x9d8c
    Rc_GetDeBreathEffect_x9d40:
    /*00009d40*/ CMP         R4, #15 
    /*00009d44*/ BHI         Rc_GetDeBreathEffect_x9d78
    Rc_GetDeBreathEffect_x9d48:
    /*00009d48*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00009d4c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00009d50*/ LDR         R1, [R3, R4, LSL #2] 
    /*00009d54*/ CMP         R1, #0 
    /*00009d58*/ BEQ         Rc_GetDeBreathEffect_x9d9c
    /*00009d5c*/ ADD         R1, R1, #3104               @ 0xc20 
    /*00009d60*/ MOV         R0, R5 
    /*00009d64*/ ADD         R1, R1, #12 
    /*00009d68*/ MOV         R2, #12 
    /*00009d6c*/ BL          0x0000000000009D6C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009d70*/ MOV         R0, #0 
    /*00009d74*/ POP         {R4, R5, R6, PC} 
    Rc_GetDeBreathEffect_x9d78:
    /*00009d78*/ MOV         R0, R4 
    /*00009d7c*/ BL          0x00000000000020F4 
    /*00009d80*/ CMP         R0, #0 
    /*00009d84*/ POPNE       {R4, R5, R6, PC} 
    /*00009d88*/ B           Rc_GetDeBreathEffect_x9d48
    Rc_GetDeBreathEffect_x9d8c:
    /*00009d8c*/ BL          0x000000000000211C 
    /*00009d90*/ CMP         R0, #0 
    /*00009d94*/ POPNE       {R4, R5, R6, PC} 
    /*00009d98*/ B           Rc_GetDeBreathEffect_x9d40
    Rc_GetDeBreathEffect_x9d9c:
    /*00009d9c*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009da0*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009da4*/ POP         {R4, R5, R6, PC} 
FUNC_END Rc_GetDeBreathEffect


FUNC_BEGIN RcCheckAvdParam
    /*00009da8*/ LDR         R3, [R1] 
    /*00009dac*/ CMP         R3, #1 
    /*00009db0*/ BHI         RcCheckAvdParam_x9dbc
    /*00009db4*/ MOV         R0, #0 
    /*00009db8*/ BX          LR 
    RcCheckAvdParam_x9dbc:
    /*00009dbc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00009dc0*/ SUB         SP, SP, #20 
    /*00009dc4*/ MOV         R1, #19 
    /*00009dc8*/ MOVW        R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33c8] 
    /*00009dcc*/ STR         R3, [SP, #8] 
    /*00009dd0*/ MOVT        R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33c8] 
    /*00009dd4*/ STR         R0, [SP, #4] 
    /*00009dd8*/ MOVW        R3, #6262                   @ 0x1876 
    /*00009ddc*/ MOV         R0, #3 
    /*00009de0*/ STR         R3, [SP] 
    /*00009de4*/ LDR         R3, [PC, #16]               @ 0x0000000000009dfc 
    /*00009de8*/ BL          0x0000000000009DE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009dec*/ MOVW        R0, #32771                  @ 0x8003 
    /*00009df0*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009df4*/ ADD         SP, SP, #20 
    /*00009df8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00009dfc*/ ANDEQ       R0, R0, IP, LSL R5 
FUNC_END RcCheckAvdParam


FUNC_BEGIN RC_SetAdvParam
    /*00009e00*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00009e04*/ SUBS        R7, R1, #0 
    /*00009e08*/ SUB         SP, SP, #28 
    /*00009e0c*/ MOV         R4, R0 
    /*00009e10*/ BEQ         RC_SetAdvParam_x9edc
    RC_SetAdvParam_x9e14:
    /*00009e14*/ CMP         R4, #15 
    /*00009e18*/ BHI         RC_SetAdvParam_x9ec4
    RC_SetAdvParam_x9e1c:
    /*00009e1c*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00009e20*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00009e24*/ LDR         R3, [R5, R4, LSL #2] 
    /*00009e28*/ CMP         R3, #0 
    /*00009e2c*/ BEQ         RC_SetAdvParam_x9eec
    /*00009e30*/ ADD         R6, R5, #128                @ 0x80 
    /*00009e34*/ ADD         R1, SP, #20 
    /*00009e38*/ ADD         R6, R6, R4, LSL #2 
    /*00009e3c*/ MOV         R0, R6 
    /*00009e40*/ BL          0x0000000000009E40          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009e44*/ LDR         R3, [R7] 
    /*00009e48*/ LDR         R0, [R5, R4, LSL #2] 
    /*00009e4c*/ CMP         R3, #1 
    /*00009e50*/ BLS         RC_SetAdvParam_x9e98
    /*00009e54*/ STR         R3, [SP, #8] 
    /*00009e58*/ MOV         R1, #19 
    /*00009e5c*/ MOVW        R3, #6262                   @ 0x1876 
    /*00009e60*/ STR         R4, [SP, #4] 
    /*00009e64*/ STR         R3, [SP] 
    /*00009e68*/ MOVW        R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33c8] 
    /*00009e6c*/ LDR         R3, [PC, #132]              @ 0x0000000000009ef8 
    /*00009e70*/ MOVT        R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33c8] 
    /*00009e74*/ MOV         R0, #3 
    /*00009e78*/ BL          0x0000000000009E78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009e7c*/ MOV         R0, R6 
    /*00009e80*/ ADD         R1, SP, #20 
    /*00009e84*/ BL          0x0000000000009E84          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009e88*/ MOVW        R0, #32771                  @ 0x8003 
    /*00009e8c*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009e90*/ ADD         SP, SP, #28 
    /*00009e94*/ POP         {R4, R5, R6, R7, PC} 
    RC_SetAdvParam_x9e98:
    /*00009e98*/ ADD         R0, R0, #3120               @ 0xc30 
    /*00009e9c*/ MOV         R1, R7 
    /*00009ea0*/ MOV         R2, #4 
    /*00009ea4*/ ADD         R0, R0, #8 
    /*00009ea8*/ BL          0x0000000000009EA8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009eac*/ MOV         R0, R6 
    /*00009eb0*/ ADD         R1, SP, #20 
    /*00009eb4*/ BL          0x0000000000009EB4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009eb8*/ MOV         R0, #0 
    RC_SetAdvParam_x9ebc:
    /*00009ebc*/ ADD         SP, SP, #28 
    /*00009ec0*/ POP         {R4, R5, R6, R7, PC} 
    RC_SetAdvParam_x9ec4:
    /*00009ec4*/ MOV         R0, R4 
    /*00009ec8*/ BL          0x00000000000020F4 
    /*00009ecc*/ CMP         R0, #0 
    /*00009ed0*/ BEQ         RC_SetAdvParam_x9e1c
    /*00009ed4*/ ADD         SP, SP, #28 
    /*00009ed8*/ POP         {R4, R5, R6, R7, PC} 
    RC_SetAdvParam_x9edc:
    /*00009edc*/ BL          0x000000000000211C 
    /*00009ee0*/ CMP         R0, #0 
    /*00009ee4*/ BNE         RC_SetAdvParam_x9ebc
    /*00009ee8*/ B           RC_SetAdvParam_x9e14
    RC_SetAdvParam_x9eec:
    /*00009eec*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009ef0*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009ef4*/ B           RC_SetAdvParam_x9ebc
    /*00009ef8*/ ANDEQ       R0, R0, IP, LSL R5 
FUNC_END RC_SetAdvParam


FUNC_BEGIN RC_GetAdvParam
    /*00009efc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00009f00*/ SUBS        R7, R1, #0 
    /*00009f04*/ SUB         SP, SP, #12 
    /*00009f08*/ MOV         R4, R0 
    /*00009f0c*/ BEQ         RC_GetAdvParam_x9f88
    RC_GetAdvParam_x9f10:
    /*00009f10*/ CMP         R4, #15 
    /*00009f14*/ BHI         RC_GetAdvParam_x9f70
    RC_GetAdvParam_x9f18:
    /*00009f18*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x288] 
    /*00009f1c*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x288] 
    /*00009f20*/ LDR         R3, [R5, R4, LSL #2] 
    /*00009f24*/ CMP         R3, #0 
    /*00009f28*/ BEQ         RC_GetAdvParam_x9f98
    /*00009f2c*/ ADD         R6, R5, #128                @ 0x80 
    /*00009f30*/ ADD         R1, SP, #4 
    /*00009f34*/ ADD         R6, R6, R4, LSL #2 
    /*00009f38*/ MOV         R0, R6 
    /*00009f3c*/ BL          0x0000000000009F3C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009f40*/ LDR         R1, [R5, R4, LSL #2] 
    /*00009f44*/ MOV         R2, #4 
    /*00009f48*/ MOV         R0, R7 
    /*00009f4c*/ ADD         R1, R1, #3120               @ 0xc30 
    /*00009f50*/ ADD         R1, R1, #8 
    /*00009f54*/ BL          0x0000000000009F54          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009f58*/ MOV         R0, R6 
    /*00009f5c*/ ADD         R1, SP, #4 
    /*00009f60*/ BL          0x0000000000009F60          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009f64*/ MOV         R0, #0 
    RC_GetAdvParam_x9f68:
    /*00009f68*/ ADD         SP, SP, #12 
    /*00009f6c*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetAdvParam_x9f70:
    /*00009f70*/ MOV         R0, R4 
    /*00009f74*/ BL          0x00000000000020F4 
    /*00009f78*/ CMP         R0, #0 
    /*00009f7c*/ BEQ         RC_GetAdvParam_x9f18
    /*00009f80*/ ADD         SP, SP, #12 
    /*00009f84*/ POP         {R4, R5, R6, R7, PC} 
    RC_GetAdvParam_x9f88:
    /*00009f88*/ BL          0x000000000000211C 
    /*00009f8c*/ CMP         R0, #0 
    /*00009f90*/ BNE         RC_GetAdvParam_x9f68
    /*00009f94*/ B           RC_GetAdvParam_x9f10
    RC_GetAdvParam_x9f98:
    /*00009f98*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009f9c*/ MOVT        R0, #40979                  @ 0xa013 
    /*00009fa0*/ B           RC_GetAdvParam_x9f68
FUNC_END RC_GetAdvParam


FUNC_BEGIN InitFirstIStartQP
    /*00009fa4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00009fa8*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*00009fac*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*00009fb0*/ MOV         FP, R0 
    /*00009fb4*/ MOV         R8, R1 
    /*00009fb8*/ MOV         R9, R2 
    /*00009fbc*/ MOV         R5, R6 
    /*00009fc0*/ MOV         R7, R3 
    /*00009fc4*/ LDM         R5!, {R0, R1, R2, R3} 
    /*00009fc8*/ SUB         SP, SP, #100                @ 0x64 
    /*00009fcc*/ ADD         LR, R6, #48                 @ 0x30 
    /*00009fd0*/ ADD         IP, SP, #48                 @ 0x30 
    /*00009fd4*/ MOV         R4, SP 
    /*00009fd8*/ MOVW        SL, #265                    @ 0x109 
    /*00009fdc*/ STMIA       R4!, {R0, R1, R2, R3} 
    /*00009fe0*/ LDM         R5!, {R0, R1, R2, R3} 
    /*00009fe4*/ STMIA       R4!, {R0, R1, R2, R3} 
    /*00009fe8*/ LDM         R5, {R0, R1, R2, R3} 
    /*00009fec*/ STM         R4, {R0, R1, R2, R3} 
    /*00009ff0*/ LDM         LR!, {R0, R1, R2, R3} 
    /*00009ff4*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*00009ff8*/ LDM         LR!, {R0, R1, R2, R3} 
    /*00009ffc*/ LDR         R4, [FP, #48]               @ 0x30 
    /*0000a000*/ CMP         R4, SL 
    /*0000a004*/ CMPNE       R4, #96                     @ 0x60 
    /*0000a008*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*0000a00c*/ LDM         LR, {R0, R1, R2, R3} 
    /*0000a010*/ STM         IP, {R0, R1, R2, R3} 
    /*0000a014*/ BNE         InitFirstIStartQP_xa098
    /*0000a018*/ MOV         R3, SP 
    /*0000a01c*/ MOV         R0, #0 
    InitFirstIStartQP_xa020:
    /*0000a020*/ LDR         R2, [R3], #4 
    /*0000a024*/ CMP         R2, R7 
    /*0000a028*/ BGT         InitFirstIStartQP_xa038
    /*0000a02c*/ ADD         R0, R0, #1 
    /*0000a030*/ CMP         R0, #11 
    /*0000a034*/ BNE         InitFirstIStartQP_xa020
    InitFirstIStartQP_xa038:
    /*0000a038*/ ADD         R3, SP, #96                 @ 0x60 
    /*0000a03c*/ MOVW        R2, #26215                  @ 0x6667 
    /*0000a040*/ ADD         R0, R3, R0, LSL #2 
    /*0000a044*/ MOVW        R3, #2100                   @ 0x834 
    /*0000a048*/ MOVT        R2, #26214                  @ 0x6666 
    /*0000a04c*/ MOV         R1, R9 
    /*0000a050*/ LDR         R0, [R0, #-48]              @ 0xffffffd0 
    /*0000a054*/ MUL         R0, R3, R0 
    /*0000a058*/ MUL         R7, R7, R0 
    /*0000a05c*/ SMULL       R2, R3, R7, R2 
    /*0000a060*/ ASR         R7, R7, #31 
    /*0000a064*/ RSB         R0, R7, R3, ASR #2 
    /*0000a068*/ SUB         R0, R0, #300                @ 0x12c 
    /*0000a06c*/ BL          0x000000000000A06C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000a070*/ LDR         R3, [SP, #136]              @ 0x88 
    /*0000a074*/ LSL         R3, R3, #6 
    /*0000a078*/ CMP         R0, #4 
    /*0000a07c*/ MOVLT       R0, #4 
    /*0000a080*/ CMP         R0, #95                     @ 0x5f 
    /*0000a084*/ ADDLE       R6, R6, R0 
    /*0000a088*/ ADDGT       R6, R6, #95                 @ 0x5f 
    /*0000a08c*/ LDRB        R2, [R6, #96]               @ 0x60 
    /*0000a090*/ ADD         R3, R3, R2, LSL #6 
    /*0000a094*/ STR         R3, [R8, #20] 
    InitFirstIStartQP_xa098:
    /*0000a098*/ MOV         R0, #0 
    /*0000a09c*/ ADD         SP, SP, #100                @ 0x64 
    /*0000a0a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END InitFirstIStartQP


FUNC_BEGIN RcGetVirInstBits
    /*0000a0a4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000a0a8*/ SUBS        R7, R0, #0 
    /*0000a0ac*/ SUB         SP, SP, #12 
    /*0000a0b0*/ MOV         R4, R1 
    /*0000a0b4*/ MOV         R6, R2 
    /*0000a0b8*/ MOV         R5, R3 
    /*0000a0bc*/ BEQ         RcGetVirInstBits_xa170
    RcGetVirInstBits_xa0c0:
    /*0000a0c0*/ LDR         LR, [R7, #16] 
    /*0000a0c4*/ CMP         LR, #0 
    /*0000a0c8*/ BEQ         RcGetVirInstBits_xa190
    /*0000a0cc*/ SUB         R8, LR, #1 
    /*0000a0d0*/ CMP         R8, #0 
    /*0000a0d4*/ MOVLE       IP, #0 
    /*0000a0d8*/ LDRLE       R9, [R7, #12] 
    /*0000a0dc*/ MOVLE       R1, IP 
    /*0000a0e0*/ BLE         RcGetVirInstBits_xa12c
    /*0000a0e4*/ LDR         R9, [R7, #12] 
    /*0000a0e8*/ MOV         IP, #0 
    /*0000a0ec*/ MOV         R3, IP 
    /*0000a0f0*/ MOV         R1, IP 
    /*0000a0f4*/ SUB         R2, R9, #1 
    RcGetVirInstBits_xa0f8:
    /*0000a0f8*/ CMP         LR, R3 
    /*0000a0fc*/ MOV         R0, R2 
    /*0000a100*/ ADD         R3, R3, #1 
    /*0000a104*/ BLE         RcGetVirInstBits_xa11c
    /*0000a108*/ CMP         R2, #0 
    /*0000a10c*/ LDR         IP, [R7] 
    /*0000a110*/ LDRLT       R0, [R7, #4] 
    /*0000a114*/ ADDLT       R0, R2, R0 
    /*0000a118*/ LDR         IP, [IP, R0, LSL #2] 
    RcGetVirInstBits_xa11c:
    /*0000a11c*/ CMP         R3, R8 
    /*0000a120*/ SUB         R2, R2, #1 
    /*0000a124*/ ADD         R1, R1, IP 
    /*0000a128*/ BNE         RcGetVirInstBits_xa0f8
    RcGetVirInstBits_xa12c:
    /*0000a12c*/ BIC         R3, R8, R8, ASR #31 
    /*0000a130*/ CMP         LR, R3 
    /*0000a134*/ BGT         RcGetVirInstBits_xa154
    RcGetVirInstBits_xa138:
    /*0000a138*/ MOV         R0, #0 
    /*0000a13c*/ ADD         IP, IP, R1 
    /*0000a140*/ ADD         R1, R4, R1 
    /*0000a144*/ STR         IP, [R6] 
    /*0000a148*/ STR         R1, [R5] 
    RcGetVirInstBits_xa14c:
    /*0000a14c*/ ADD         SP, SP, #12 
    /*0000a150*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    RcGetVirInstBits_xa154:
    /*0000a154*/ SUB         R8, R9, R8 
    /*0000a158*/ SUBS        R8, R8, #1 
    /*0000a15c*/ LDRMI       R3, [R7, #4] 
    /*0000a160*/ ADDMI       R8, R8, R3 
    /*0000a164*/ LDR         R3, [R7] 
    /*0000a168*/ LDR         IP, [R3, R8, LSL #2] 
    /*0000a16c*/ B           RcGetVirInstBits_xa138
    RcGetVirInstBits_xa170:
    /*0000a170*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3428] 
    /*0000a174*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x343c] 
    /*0000a178*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3428] 
    /*0000a17c*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x343c] 
    /*0000a180*/ MOV         R2, #86                     @ 0x56 
    /*0000a184*/ LDR         R1, [PC, #44]               @ 0x000000000000a1b8 
    /*0000a188*/ BL          0x000000000000A188          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000a18c*/ B           RcGetVirInstBits_xa0c0
    RcGetVirInstBits_xa190:
    /*0000a190*/ MOV         R3, #95                     @ 0x5f 
    /*0000a194*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x347c] 
    /*0000a198*/ STR         R3, [SP] 
    /*0000a19c*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x347c] 
    /*0000a1a0*/ LDR         R3, [PC, #16]               @ 0x000000000000a1b8 
    /*0000a1a4*/ MOV         R1, #19 
    /*0000a1a8*/ MOV         R0, #4 
    /*0000a1ac*/ BL          0x000000000000A1AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a1b0*/ MVN         R0, #0 
    /*0000a1b4*/ B           RcGetVirInstBits_xa14c
    /*0000a1b8*/ ANDEQ       R0, R0, IP, ROR #11 
FUNC_END RcGetVirInstBits


FUNC_BEGIN RcGetInstBits
    /*0000a1bc*/ PUSH        {R4, LR} 
    /*0000a1c0*/ SUBS        R4, R0, #0 
    /*0000a1c4*/ BEQ         RcGetInstBits_xa218
    RcGetInstBits_xa1c8:
    /*0000a1c8*/ LDR         R1, [R4, #16] 
    /*0000a1cc*/ CMP         R1, #0 
    /*0000a1d0*/ BLE         RcGetInstBits_xa210
    /*0000a1d4*/ LDR         R3, [R4, #12] 
    /*0000a1d8*/ MOV         R0, #0 
    /*0000a1dc*/ LDR         IP, [R4] 
    /*0000a1e0*/ SUB         R3, R3, #1 
    /*0000a1e4*/ SUB         R1, R3, R1 
    RcGetInstBits_xa1e8:
    /*0000a1e8*/ CMP         R3, #0 
    /*0000a1ec*/ MOV         R2, R3 
    /*0000a1f0*/ LDRLT       R2, [R4, #4] 
    /*0000a1f4*/ ADDLT       R2, R3, R2 
    /*0000a1f8*/ SUB         R3, R3, #1 
    /*0000a1fc*/ CMP         R1, R3 
    /*0000a200*/ LDR         R2, [IP, R2, LSL #2] 
    /*0000a204*/ ADD         R0, R0, R2 
    /*0000a208*/ BNE         RcGetInstBits_xa1e8
    /*0000a20c*/ POP         {R4, PC} 
    RcGetInstBits_xa210:
    /*0000a210*/ MOV         R0, #0 
    /*0000a214*/ POP         {R4, PC} 
    RcGetInstBits_xa218:
    /*0000a218*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3428] 
    /*0000a21c*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x343c] 
    /*0000a220*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3428] 
    /*0000a224*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x343c] 
    /*0000a228*/ MOV         R2, #68                     @ 0x44 
    /*0000a22c*/ LDR         R1, [PC, #4]                @ 0x000000000000a238 
    /*0000a230*/ BL          0x000000000000A230          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000a234*/ B           RcGetInstBits_xa1c8
    /*0000a238*/ ANDEQ       R0, R0, R0, LSL #12 
FUNC_END RcGetInstBits


FUNC_BEGIN RCDecisionRunMjpeg
    /*0000a23c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000a240*/ MOV         R4, R0 
    /*0000a244*/ LDR         R5, [R4, #36]               @ 0x24 
    /*0000a248*/ SUB         SP, SP, #28 
    /*0000a24c*/ ADD         R0, R0, #368                @ 0x170 
    /*0000a250*/ MOV         R6, R1 
    /*0000a254*/ LDR         FP, [R4, #1640]             @ 0x668 
    /*0000a258*/ BL          0x000000000000A1BC 
    /*0000a25c*/ MOV         R1, R5 
    /*0000a260*/ BL          0x000000000000A260          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000a264*/ LDR         R3, [R4, #52]               @ 0x34 
    /*0000a268*/ LDR         R9, [R6, #20] 
    /*0000a26c*/ CMP         R3, #1 
    /*0000a270*/ MOV         R7, R0 
    /*0000a274*/ BEQ         RCDecisionRunMjpeg_xa528
    /*0000a278*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0000a27c*/ MOVW        R0, #34079                  @ 0x851f 
    /*0000a280*/ LDR         R5, [R4, #224]              @ 0xe0 
    /*0000a284*/ MOVT        R0, #20971                  @ 0x51eb 
    /*0000a288*/ LDR         R2, [R4, #248]              @ 0xf8 
    /*0000a28c*/ LSR         R1, R1, #8 
    /*0000a290*/ LDR         R8, [R4, #240]              @ 0xf0 
    /*0000a294*/ MUL         R5, R5, R1 
    /*0000a298*/ STR         R2, [SP] 
    /*0000a29c*/ MOV         R2, #3 
    /*0000a2a0*/ STR         R2, [SP, #4] 
    /*0000a2a4*/ SMULL       R0, R1, R5, R0 
    /*0000a2a8*/ ASR         R5, R5, #31 
    /*0000a2ac*/ RSB         R5, R5, R1, ASR #5 
    /*0000a2b0*/ LSL         R5, R5, #8 
    /*0000a2b4*/ CMP         R5, #0 
    /*0000a2b8*/ ADD         R1, R5, #15 
    /*0000a2bc*/ MOVGE       R1, R5 
    /*0000a2c0*/ ASR         R2, R1, #4 
    RCDecisionRunMjpeg_xa2c4:
    /*0000a2c4*/ LDR         R1, [R6, #12] 
    /*0000a2c8*/ CMP         R1, #2 
    /*0000a2cc*/ BEQ         RCDecisionRunMjpeg_xa4cc
    /*0000a2d0*/ LDR         R1, [R4, #1496]             @ 0x5d8 
    /*0000a2d4*/ CMP         R1, #3 
    /*0000a2d8*/ BEQ         RCDecisionRunMjpeg_xa554
    /*0000a2dc*/ STR         R3, [SP, #20] 
    /*0000a2e0*/ SUBS        IP, R9, #3200               @ 0xc80 
    /*0000a2e4*/ LDR         R3, [R6, #40]               @ 0x28 
    /*0000a2e8*/ RSBMI       IP, R9, #3200               @ 0xc80 
    /*0000a2ec*/ RSB         IP, IP, #3200               @ 0xc80 
    /*0000a2f0*/ STR         R2, [SP, #16] 
    /*0000a2f4*/ ADD         R1, R3, #1024               @ 0x400 
    /*0000a2f8*/ ASR         SL, R5, #5 
    /*0000a2fc*/ ASR         IP, IP, #2 
    /*0000a300*/ STR         R3, [SP, #12] 
    /*0000a304*/ LSR         R1, R1, #10 
    /*0000a308*/ RSB         R0, R1, FP, ASR #10 
    /*0000a30c*/ MUL         R0, R0, IP 
    /*0000a310*/ BL          0x000000000000A310          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000a314*/ LDR         FP, [R6, #48]               @ 0x30 
    /*0000a318*/ MOV         R1, SL 
    /*0000a31c*/ STR         R0, [SP, #8] 
    /*0000a320*/ MOV         R0, FP 
    /*0000a324*/ BL          0x000000000000A324          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000a328*/ MOV         R1, SL 
    /*0000a32c*/ SUB         SL, R0, #32 
    /*0000a330*/ MOV         R0, R7 
    /*0000a334*/ BL          0x000000000000A334          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000a338*/ MVN         IP, #30 
    /*0000a33c*/ LSL         SL, SL, #2 
    /*0000a340*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000a344*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000a348*/ LDR         R2, [SP, #16] 
    /*0000a34c*/ LDR         R3, [SP, #20] 
    /*0000a350*/ SUB         R0, R0, #32 
    /*0000a354*/ LSL         R0, R0, #2 
    /*0000a358*/ CMP         R0, #31 
    /*0000a35c*/ MOVGE       R0, #31 
    /*0000a360*/ CMP         R0, IP 
    /*0000a364*/ MOVLT       R0, IP 
    /*0000a368*/ CMP         SL, #31 
    /*0000a36c*/ ADD         R0, R1, R0, LSL #2 
    /*0000a370*/ MOVGE       SL, #31 
    /*0000a374*/ CMP         SL, IP 
    /*0000a378*/ LDR         R0, [R0, #356]              @ 0x164 
    /*0000a37c*/ MOVLT       SL, IP 
    /*0000a380*/ CMP         R7, FP 
    /*0000a384*/ ADD         SL, R1, SL, LSL #2 
    /*0000a388*/ LDR         SL, [SL, #356]              @ 0x164 
    /*0000a38c*/ SUB         R0, R0, SL 
    /*0000a390*/ BLE         RCDecisionRunMjpeg_xa3a8
    /*0000a394*/ SUB         R1, R5, R2 
    /*0000a398*/ CMP         FP, R1 
    /*0000a39c*/ MOVGT       SL, #6 
    /*0000a3a0*/ MULGT       SL, SL, R0 
    /*0000a3a4*/ BGT         RCDecisionRunMjpeg_xa3c0
    RCDecisionRunMjpeg_xa3a8:
    /*0000a3a8*/ CMP         R7, FP 
    /*0000a3ac*/ BGE         RCDecisionRunMjpeg_xa498
    /*0000a3b0*/ ADD         R1, R5, R2 
    /*0000a3b4*/ CMP         FP, R1 
    /*0000a3b8*/ BGE         RCDecisionRunMjpeg_xa498
    /*0000a3bc*/ LSL         SL, R0, #2 
    RCDecisionRunMjpeg_xa3c0:
    /*0000a3c0*/ STR         R3, [SP, #16] 
    /*0000a3c4*/ SUB         R0, R7, R5 
    /*0000a3c8*/ LDR         R3, [SP, #4] 
    /*0000a3cc*/ ASR         R1, R5, #6 
    /*0000a3d0*/ MUL         R0, R3, R0 
    /*0000a3d4*/ BL          0x000000000000A3D4          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000a3d8*/ LDR         R3, [SP, #8] 
    /*0000a3dc*/ CMN         R3, #256                    @ 0x100 
    /*0000a3e0*/ LDR         R3, [SP, #16] 
    /*0000a3e4*/ MVNLT       R5, #255                    @ 0xff 
    /*0000a3e8*/ BLT         RCDecisionRunMjpeg_xa3fc
    RCDecisionRunMjpeg_xa3ec:
    /*0000a3ec*/ LDR         R2, [SP, #8] 
    /*0000a3f0*/ CMP         R2, #128                    @ 0x80 
    /*0000a3f4*/ MOVLT       R5, R2 
    /*0000a3f8*/ MOVGE       R5, #128                    @ 0x80 
    RCDecisionRunMjpeg_xa3fc:
    /*0000a3fc*/ CMN         SL, #256                    @ 0x100 
    /*0000a400*/ SUBLT       SL, R5, #256                @ 0x100 
    /*0000a404*/ BLT         RCDecisionRunMjpeg_xa414
    /*0000a408*/ CMP         SL, #128                    @ 0x80 
    /*0000a40c*/ ADDLE       SL, R5, SL 
    /*0000a410*/ ADDGT       SL, R5, #128                @ 0x80 
    RCDecisionRunMjpeg_xa414:
    /*0000a414*/ CMP         R0, #32 
    /*0000a418*/ MVN         FP, #31 
    /*0000a41c*/ MOVLT       R5, R0 
    /*0000a420*/ MOVGE       R5, #32 
    /*0000a424*/ CMP         R5, FP 
    /*0000a428*/ MOVLT       R5, FP 
    /*0000a42c*/ CMP         R3, #1 
    /*0000a430*/ MOVNE       R0, #0 
    /*0000a434*/ BEQ         RCDecisionRunMjpeg_xa588
    RCDecisionRunMjpeg_xa438:
    /*0000a438*/ ADD         SL, SL, R5 
    /*0000a43c*/ LSL         R3, R8, #6 
    /*0000a440*/ ADD         SL, SL, R0 
    /*0000a444*/ STR         R7, [R6, #48]               @ 0x30 
    /*0000a448*/ SUB         R9, R9, SL 
    /*0000a44c*/ CMP         R9, R3 
    /*0000a450*/ BLT         RCDecisionRunMjpeg_xa464
    /*0000a454*/ LDR         R3, [SP] 
    /*0000a458*/ LSL         R3, R3, #6 
    /*0000a45c*/ CMP         R3, R9 
    /*0000a460*/ MOVGE       R3, R9 
    RCDecisionRunMjpeg_xa464:
    /*0000a464*/ STR         R3, [R6, #20] 
    /*0000a468*/ MOV         R1, #0 
    /*0000a46c*/ LSR         R3, R3, #6 
    /*0000a470*/ STR         R1, [R6, #28] 
    /*0000a474*/ STR         R3, [R4, #1996]             @ 0x7cc 
    /*0000a478*/ LDR         R3, [SP, #12] 
    /*0000a47c*/ STR         R8, [R4, #2004]             @ 0x7d4 
    /*0000a480*/ STR         R3, [R4, #1992]             @ 0x7c8 
    /*0000a484*/ LDR         R3, [SP] 
    /*0000a488*/ STR         R3, [R4, #2000]             @ 0x7d0 
    RCDecisionRunMjpeg_xa48c:
    /*0000a48c*/ MOV         R0, #0 
    /*0000a490*/ ADD         SP, SP, #28 
    /*0000a494*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RCDecisionRunMjpeg_xa498:
    /*0000a498*/ STR         R3, [SP, #16] 
    /*0000a49c*/ SUB         R0, R7, R5 
    /*0000a4a0*/ LDR         R3, [SP, #4] 
    /*0000a4a4*/ ASR         R1, R5, #6 
    /*0000a4a8*/ MUL         R0, R3, R0 
    /*0000a4ac*/ BL          0x000000000000A4AC          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000a4b0*/ LDR         R3, [SP, #8] 
    /*0000a4b4*/ CMN         R3, #256                    @ 0x100 
    /*0000a4b8*/ LDR         R3, [SP, #16] 
    /*0000a4bc*/ MVNLT       SL, #255                    @ 0xff 
    /*0000a4c0*/ BLT         RCDecisionRunMjpeg_xa414
    /*0000a4c4*/ MOV         SL, #0 
    /*0000a4c8*/ B           RCDecisionRunMjpeg_xa3ec
    RCDecisionRunMjpeg_xa4cc:
    /*0000a4cc*/ LDR         R3, [R4, #184]              @ 0xb8 
    /*0000a4d0*/ CMN         R3, #1 
    /*0000a4d4*/ LSREQ       R3, R9, #6 
    /*0000a4d8*/ LSLNE       R1, R3, #6 
    /*0000a4dc*/ STRNE       R1, [R6, #20] 
    /*0000a4e0*/ CMP         R3, R8 
    /*0000a4e4*/ MOVLT       R3, R8 
    /*0000a4e8*/ BLT         RCDecisionRunMjpeg_xa4f8
    /*0000a4ec*/ LDR         R2, [SP] 
    /*0000a4f0*/ CMP         R3, R2 
    /*0000a4f4*/ MOVGE       R3, R2 
    RCDecisionRunMjpeg_xa4f8:
    /*0000a4f8*/ LDR         R0, [R6, #40]               @ 0x28 
    /*0000a4fc*/ MOV         R1, #0 
    /*0000a500*/ STR         R3, [R4, #1996]             @ 0x7cc 
    /*0000a504*/ LDR         R3, [SP] 
    /*0000a508*/ STR         R0, [R4, #1992]             @ 0x7c8 
    /*0000a50c*/ MOV         R0, #0 
    /*0000a510*/ STR         R8, [R4, #2004]             @ 0x7d4 
    /*0000a514*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*0000a518*/ STR         R7, [R6, #48]               @ 0x30 
    /*0000a51c*/ STR         R1, [R6, #12] 
    /*0000a520*/ ADD         SP, SP, #28 
    /*0000a524*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RCDecisionRunMjpeg_xa528:
    /*0000a528*/ LDR         R2, [R4, #224]              @ 0xe0 
    /*0000a52c*/ LDR         R5, [R4, #56]               @ 0x38 
    /*0000a530*/ LDR         R8, [R4, #228]              @ 0xe4 
    /*0000a534*/ STR         R2, [SP] 
    /*0000a538*/ CMP         R5, #0 
    /*0000a53c*/ LDR         R2, [R4, #244]              @ 0xf4 
    /*0000a540*/ ADD         R1, R5, #15 
    /*0000a544*/ MOVGE       R1, R5 
    /*0000a548*/ STR         R2, [SP, #4] 
    /*0000a54c*/ ASR         R2, R1, #4 
    /*0000a550*/ B           RCDecisionRunMjpeg_xa2c4
    RCDecisionRunMjpeg_xa554:
    /*0000a554*/ LDR         R3, [R4, #1580]             @ 0x62c 
    /*0000a558*/ CMP         R3, #0 
    /*0000a55c*/ BEQ         RCDecisionRunMjpeg_xa48c
    /*0000a560*/ LDR         R1, [R6, #24] 
    /*0000a564*/ MOV         R0, #0 
    /*0000a568*/ LDR         R3, [R6, #40]               @ 0x28 
    /*0000a56c*/ LDR         R2, [SP] 
    /*0000a570*/ STR         R1, [R4, #1996]             @ 0x7cc 
    /*0000a574*/ STR         R3, [R4, #1992]             @ 0x7c8 
    /*0000a578*/ STR         R2, [R4, #2000]             @ 0x7d0 
    /*0000a57c*/ STR         R8, [R4, #2004]             @ 0x7d4 
    /*0000a580*/ ADD         SP, SP, #28 
    /*0000a584*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RCDecisionRunMjpeg_xa588:
    /*0000a588*/ LDR         R3, [R6, #60]               @ 0x3c 
    /*0000a58c*/ LDR         R0, [R4, #344]              @ 0x158 
    /*0000a590*/ ADD         R1, R3, #16 
    /*0000a594*/ SUB         R0, R0, R3 
    /*0000a598*/ LDR         R3, [SP, #4] 
    /*0000a59c*/ ASR         R1, R1, #4 
    /*0000a5a0*/ MUL         R0, R3, R0 
    /*0000a5a4*/ BL          0x000000000000A5A4          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000a5a8*/ CMP         R0, #32 
    /*0000a5ac*/ MOVGE       R0, #32 
    /*0000a5b0*/ CMP         R0, FP 
    /*0000a5b4*/ MOVLT       R0, FP 
    /*0000a5b8*/ B           RCDecisionRunMjpeg_xa438
FUNC_END RCDecisionRunMjpeg


FUNC_BEGIN RCDecisionInitFrmBits
    /*0000a5bc*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000a5c0*/ MOV         R4, R1 
    /*0000a5c4*/ LDR         R5, [R1, #4] 
    /*0000a5c8*/ MOV         R6, R0 
    /*0000a5cc*/ LDR         R7, [R1] 
    /*0000a5d0*/ LDR         R9, [R0] 
    /*0000a5d4*/ LSL         R5, R5, #4 
    /*0000a5d8*/ LDR         R8, [R1, #8] 
    /*0000a5dc*/ ORR         R5, R5, R7, LSR #28 
    /*0000a5e0*/ LSL         R7, R7, #4 
    /*0000a5e4*/ CMP         R9, #4 
    /*0000a5e8*/ LDRLS       PC, [PC, R9, LSL #2] 
    /*0000a5ec*/ B           RCDecisionInitFrmBits_xaa24
    /*0000a5f0*/ MULEQ       R0, R0, R9 
    /*0000a5f4*/ ANDEQ       SL, R0, R0, LSR R8 
    /*0000a5f8*/ ANDEQ       SL, R0, R0, LSL R7 
    /*0000a5fc*/ ANDEQ       SL, R0, R0, LSL R7 
    /*0000a600*/ ANDEQ       SL, R0, R4, LSL #12 
    /*0000a604*/ CMP         R8, #1 
    /*0000a608*/ BLE         RCDecisionInitFrmBits_xaa64
    /*0000a60c*/ LDR         R0, [R0, #32] 
    /*0000a610*/ SUB         R8, R8, #1 
    /*0000a614*/ LDR         R1, [R6, #8] 
    /*0000a618*/ SUB         R0, R0, #1 
    /*0000a61c*/ BL          0x000000000000A61C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000a620*/ LDR         R3, [R4, #232]              @ 0xe8 
    /*0000a624*/ LDR         R2, [R4, #244]              @ 0xf4 
    /*0000a628*/ MOV         R1, R5 
    /*0000a62c*/ SUB         R8, R8, R0 
    /*0000a630*/ ADD         R3, R3, R0, LSL #4 
    /*0000a634*/ MOV         R0, R7 
    /*0000a638*/ MLA         R2, R2, R8, R3 
    /*0000a63c*/ BL          0x000000000000A63C          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000a640*/ MOV         R8, R0 
    /*0000a644*/ MOV         R9, R1 
    RCDecisionInitFrmBits_xa648:
    /*0000a648*/ LDR         R0, [R4, #244]              @ 0xf4 
    /*0000a64c*/ ADDS        SL, R8, R8 
    /*0000a650*/ MOV         R2, #16 
    /*0000a654*/ STR         R8, [R4, #64]               @ 0x40 
    /*0000a658*/ STR         R8, [R4, #68]               @ 0x44 
    /*0000a65c*/ ASR         FP, R0, #31 
    /*0000a660*/ STR         R8, [R4, #72]               @ 0x48 
    /*0000a664*/ MUL         R3, R0, R9 
    /*0000a668*/ STR         R8, [R4, #76]               @ 0x4c 
    /*0000a66c*/ MLA         R3, R8, FP, R3 
    /*0000a670*/ ADC         FP, R9, R9 
    /*0000a674*/ UMULL       R0, R1, R0, R8 
    /*0000a678*/ ADDS        SL, SL, SL 
    /*0000a67c*/ ADC         FP, FP, FP 
    /*0000a680*/ ADDS        SL, SL, R8 
    /*0000a684*/ ADC         FP, FP, R9 
    /*0000a688*/ ADD         R1, R3, R1 
    /*0000a68c*/ STR         R8, [R4, #80]               @ 0x50 
    /*0000a690*/ STRD        SL, [R4, #200]              @ 0xc8 
    /*0000a694*/ BL          0x000000000000A694          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000a698*/ CMP         R0, #0 
    /*0000a69c*/ SBCS        R3, R1, #0 
    /*0000a6a0*/ BLT         RCDecisionInitFrmBits_xaaa4
    /*0000a6a4*/ LDR         R2, [R6, #2504]             @ 0x9c8 
    /*0000a6a8*/ LDR         R3, [R6, #2508]             @ 0x9cc 
    /*0000a6ac*/ UMULL       R2, R3, R2, R3 
    /*0000a6b0*/ CMP         R0, R2 
    /*0000a6b4*/ SBCS        IP, R1, R3 
    /*0000a6b8*/ MOVLT       R2, R0 
    /*0000a6bc*/ MOVLT       R3, R1 
    /*0000a6c0*/ ADDS        R0, R2, R2 
    /*0000a6c4*/ MOV         IP, R2 
    /*0000a6c8*/ ADC         R1, R3, R3 
    /*0000a6cc*/ ADDS        R0, R0, R0 
    /*0000a6d0*/ ADC         R1, R1, R1 
    /*0000a6d4*/ ADDS        SL, R0, R2 
    /*0000a6d8*/ ADC         FP, R1, R3 
    RCDecisionInitFrmBits_xa6dc:
    /*0000a6dc*/ LDR         LR, [R4, #232]              @ 0xe8 
    /*0000a6e0*/ MOV         R2, #16 
    /*0000a6e4*/ STR         IP, [R4, #104]              @ 0x68 
    /*0000a6e8*/ STR         IP, [R4, #108]              @ 0x6c 
    /*0000a6ec*/ ASR         R1, LR, #31 
    /*0000a6f0*/ STR         IP, [R4, #112]              @ 0x70 
    /*0000a6f4*/ MUL         R3, LR, R9 
    /*0000a6f8*/ STR         IP, [R4, #116]              @ 0x74 
    /*0000a6fc*/ MLA         R3, R8, R1, R3 
    /*0000a700*/ STR         IP, [R4, #120]              @ 0x78 
    /*0000a704*/ UMULL       R0, R1, LR, R8 
    /*0000a708*/ STRD        SL, [R4, #216]              @ 0xd8 
    /*0000a70c*/ B           RCDecisionInitFrmBits_xa948
    /*0000a710*/ LDR         R1, [R0, #32] 
    /*0000a714*/ SUB         R9, R9, #2 
    /*0000a718*/ LDR         R0, [R0, #24] 
    /*0000a71c*/ CLZ         R9, R9 
    /*0000a720*/ BL          0x000000000000A720          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000a724*/ LDR         R3, [R4, #228]              @ 0xe4 
    /*0000a728*/ LSR         R9, R9, #5 
    /*0000a72c*/ LDR         R2, [R4, #224]              @ 0xe0 
    /*0000a730*/ MOV         R1, R5 
    /*0000a734*/ CMP         R0, #0 
    /*0000a738*/ MOV         IP, R0 
    /*0000a73c*/ MOVLE       R9, #0 
    /*0000a740*/ CMP         R9, #0 
    /*0000a744*/ SUBNE       IP, R0, #1 
    /*0000a748*/ MOV         R0, R7 
    /*0000a74c*/ SUB         R8, R8, IP 
    /*0000a750*/ MUL         R3, R3, IP 
    /*0000a754*/ ADD         R8, R3, R8, LSL #4 
    /*0000a758*/ ADD         R2, R8, R2 
    /*0000a75c*/ MOV         R8, #5 
    /*0000a760*/ BL          0x000000000000A760          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000a764*/ MOV         R2, #16 
    /*0000a768*/ MOV         R5, R0 
    /*0000a76c*/ LDR         R0, [R4, #228]              @ 0xe4 
    /*0000a770*/ SMULL       R8, R9, R5, R8 
    /*0000a774*/ STR         R5, [R4, #64]               @ 0x40 
    /*0000a778*/ STR         R5, [R4, #68]               @ 0x44 
    /*0000a77c*/ STR         R5, [R4, #72]               @ 0x48 
    /*0000a780*/ STR         R5, [R4, #76]               @ 0x4c 
    /*0000a784*/ STR         R5, [R4, #80]               @ 0x50 
    /*0000a788*/ STRD        R8, [R4, #200]              @ 0xc8 
    /*0000a78c*/ SMULL       R0, R1, R5, R0 
    /*0000a790*/ BL          0x000000000000A790          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000a794*/ CMP         R0, #0 
    /*0000a798*/ SBCS        R3, R1, #0 
    /*0000a79c*/ BLT         RCDecisionInitFrmBits_xaa84
    /*0000a7a0*/ LDR         R2, [R6, #2504]             @ 0x9c8 
    /*0000a7a4*/ LDR         R3, [R6, #2508]             @ 0x9cc 
    /*0000a7a8*/ UMULL       R2, R3, R2, R3 
    /*0000a7ac*/ CMP         R0, R2 
    /*0000a7b0*/ SBCS        IP, R1, R3 
    /*0000a7b4*/ MOVLT       R3, R1 
    /*0000a7b8*/ MOVLT       R2, R0 
    /*0000a7bc*/ ADDS        R8, R2, R2 
    /*0000a7c0*/ ADC         R9, R3, R3 
    /*0000a7c4*/ MOV         R3, R2 
    RCDecisionInitFrmBits_xa7c8:
    /*0000a7c8*/ LDR         R0, [R4, #224]              @ 0xe0 
    /*0000a7cc*/ MOV         R2, #16 
    /*0000a7d0*/ STR         R3, [R4, #132]              @ 0x84 
    /*0000a7d4*/ STR         R3, [R4, #136]              @ 0x88 
    /*0000a7d8*/ STR         R3, [R4, #140]              @ 0x8c 
    /*0000a7dc*/ STR         R3, [R4, #144]              @ 0x90 
    /*0000a7e0*/ STRD        R8, [R4, #184]              @ 0xb8 
    /*0000a7e4*/ STRD        R8, [R4, #192]              @ 0xc0 
    /*0000a7e8*/ SMULL       R0, R1, R5, R0 
    /*0000a7ec*/ BL          0x000000000000A7EC          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000a7f0*/ CMP         R0, #0 
    /*0000a7f4*/ SBCS        R3, R1, #0 
    /*0000a7f8*/ BLT         RCDecisionInitFrmBits_xaac4
    /*0000a7fc*/ LDR         R2, [R6, #2504]             @ 0x9c8 
    /*0000a800*/ LDR         R3, [R6, #2508]             @ 0x9cc 
    /*0000a804*/ UMULL       R2, R3, R2, R3 
    /*0000a808*/ CMP         R0, R2 
    /*0000a80c*/ SBCS        IP, R1, R3 
    /*0000a810*/ MOVLT       R3, R1 
    /*0000a814*/ MOVLT       R2, R0 
    /*0000a818*/ ADDS        R0, R2, R2 
    /*0000a81c*/ ADC         R1, R3, R3 
    RCDecisionInitFrmBits_xa820:
    /*0000a820*/ STR         R2, [R4, #124]              @ 0x7c 
    /*0000a824*/ STR         R2, [R4, #128]              @ 0x80 
    /*0000a828*/ STRD        R0, [R4, #176]              @ 0xb0 
    /*0000a82c*/ B           RCDecisionInitFrmBits_xaa40
    /*0000a830*/ CMP         R8, #1 
    /*0000a834*/ BLE         RCDecisionInitFrmBits_xaa94
    /*0000a838*/ LDR         R1, [R0, #16] 
    /*0000a83c*/ LDR         R9, [R0, #32] 
    /*0000a840*/ CMP         R1, #0 
    /*0000a844*/ SUB         R9, R9, #1 
    /*0000a848*/ BEQ         RCDecisionInitFrmBits_xa858
    /*0000a84c*/ MOV         R0, R9 
    /*0000a850*/ BL          0x000000000000A850          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000a854*/ SUB         R9, R9, R0 
    RCDecisionInitFrmBits_xa858:
    /*0000a858*/ LDR         R3, [R4, #232]              @ 0xe8 
    /*0000a85c*/ SUB         R8, R8, #1 
    /*0000a860*/ LDR         R2, [R4, #240]              @ 0xf0 
    /*0000a864*/ SUB         R8, R8, R9 
    /*0000a868*/ ADD         R9, R3, R9, LSL #4 
    /*0000a86c*/ MOV         R0, R7 
    /*0000a870*/ MOV         R1, R5 
    /*0000a874*/ MLA         R2, R2, R8, R9 
    /*0000a878*/ BL          0x000000000000A878          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000a87c*/ MOV         R8, R0 
    /*0000a880*/ MOV         R9, R1 
    RCDecisionInitFrmBits_xa884:
    /*0000a884*/ LDR         R0, [R4, #240]              @ 0xf0 
    /*0000a888*/ ADDS        SL, R8, R8 
    /*0000a88c*/ MOV         R2, #16 
    /*0000a890*/ STR         R8, [R4, #64]               @ 0x40 
    /*0000a894*/ STR         R8, [R4, #68]               @ 0x44 
    /*0000a898*/ ASR         FP, R0, #31 
    /*0000a89c*/ STR         R8, [R4, #72]               @ 0x48 
    /*0000a8a0*/ MUL         R3, R0, R9 
    /*0000a8a4*/ STR         R8, [R4, #76]               @ 0x4c 
    /*0000a8a8*/ MLA         R3, R8, FP, R3 
    /*0000a8ac*/ ADC         FP, R9, R9 
    /*0000a8b0*/ UMULL       R0, R1, R0, R8 
    /*0000a8b4*/ ADDS        SL, SL, SL 
    /*0000a8b8*/ ADC         FP, FP, FP 
    /*0000a8bc*/ ADDS        SL, SL, R8 
    /*0000a8c0*/ ADC         FP, FP, R9 
    /*0000a8c4*/ ADD         R1, R3, R1 
    /*0000a8c8*/ STR         R8, [R4, #80]               @ 0x50 
    /*0000a8cc*/ STRD        SL, [R4, #200]              @ 0xc8 
    /*0000a8d0*/ BL          0x000000000000A8D0          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000a8d4*/ CMP         R0, #0 
    /*0000a8d8*/ SBCS        R3, R1, #0 
    /*0000a8dc*/ BLT         RCDecisionInitFrmBits_xaab4
    /*0000a8e0*/ LDR         R2, [R6, #2504]             @ 0x9c8 
    /*0000a8e4*/ LDR         R3, [R6, #2508]             @ 0x9cc 
    /*0000a8e8*/ UMULL       R2, R3, R2, R3 
    /*0000a8ec*/ CMP         R0, R2 
    /*0000a8f0*/ SBCS        IP, R1, R3 
    /*0000a8f4*/ MOVLT       R2, R0 
    /*0000a8f8*/ MOVLT       R3, R1 
    /*0000a8fc*/ ADDS        R0, R2, R2 
    /*0000a900*/ MOV         IP, R2 
    /*0000a904*/ ADC         R1, R3, R3 
    /*0000a908*/ ADDS        R0, R0, R0 
    /*0000a90c*/ ADC         R1, R1, R1 
    /*0000a910*/ ADDS        SL, R0, R2 
    /*0000a914*/ ADC         FP, R1, R3 
    RCDecisionInitFrmBits_xa918:
    /*0000a918*/ LDR         LR, [R4, #232]              @ 0xe8 
    /*0000a91c*/ MOV         R2, #16 
    /*0000a920*/ STR         IP, [R4, #84]               @ 0x54 
    /*0000a924*/ STR         IP, [R4, #88]               @ 0x58 
    /*0000a928*/ ASR         R1, LR, #31 
    /*0000a92c*/ STR         IP, [R4, #92]               @ 0x5c 
    /*0000a930*/ MUL         R3, LR, R9 
    /*0000a934*/ STR         IP, [R4, #96]               @ 0x60 
    /*0000a938*/ MLA         R3, R8, R1, R3 
    /*0000a93c*/ STR         IP, [R4, #100]              @ 0x64 
    /*0000a940*/ UMULL       R0, R1, LR, R8 
    /*0000a944*/ STRD        SL, [R4, #208]              @ 0xd0 
    RCDecisionInitFrmBits_xa948:
    /*0000a948*/ ADD         R1, R3, R1 
    /*0000a94c*/ BL          0x000000000000A94C          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000a950*/ CMP         R0, #0 
    /*0000a954*/ SBCS        R3, R1, #0 
    /*0000a958*/ BLT         RCDecisionInitFrmBits_xaa14
    RCDecisionInitFrmBits_xa95c:
    /*0000a95c*/ LDR         R2, [R6, #2504]             @ 0x9c8 
    /*0000a960*/ LDR         R3, [R6, #2508]             @ 0x9cc 
    /*0000a964*/ UMULL       R2, R3, R2, R3 
    /*0000a968*/ CMP         R0, R2 
    /*0000a96c*/ SBCS        IP, R1, R3 
    /*0000a970*/ MOVLT       R3, R1 
    /*0000a974*/ MOVLT       R2, R0 
    /*0000a978*/ ADDS        R0, R2, R2 
    /*0000a97c*/ ADC         R1, R3, R3 
    RCDecisionInitFrmBits_xa980:
    /*0000a980*/ STR         R2, [R4, #140]              @ 0x8c 
    /*0000a984*/ STR         R2, [R4, #144]              @ 0x90 
    /*0000a988*/ STRD        R0, [R4, #192]              @ 0xc0 
    /*0000a98c*/ B           RCDecisionInitFrmBits_xaa40
    /*0000a990*/ CMP         R8, #1 
    /*0000a994*/ BLE         RCDecisionInitFrmBits_xaa74
    /*0000a998*/ LDR         R3, [R1, #232]              @ 0xe8 
    /*0000a99c*/ SUB         R2, R8, #1 
    /*0000a9a0*/ MOV         R0, R7 
    /*0000a9a4*/ MOV         R1, R5 
    /*0000a9a8*/ ADD         R2, R3, R2, LSL #4 
    /*0000a9ac*/ BL          0x000000000000A9AC          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000a9b0*/ MOV         R8, R0 
    /*0000a9b4*/ MOV         R9, R1 
    RCDecisionInitFrmBits_xa9b8:
    /*0000a9b8*/ LDR         R0, [R4, #232]              @ 0xe8 
    /*0000a9bc*/ ADDS        SL, R8, R8 
    /*0000a9c0*/ MOV         R2, #16 
    /*0000a9c4*/ STR         R8, [R4, #64]               @ 0x40 
    /*0000a9c8*/ STR         R8, [R4, #68]               @ 0x44 
    /*0000a9cc*/ ASR         FP, R0, #31 
    /*0000a9d0*/ STR         R8, [R4, #72]               @ 0x48 
    /*0000a9d4*/ MUL         R3, R0, R9 
    /*0000a9d8*/ STR         R8, [R4, #76]               @ 0x4c 
    /*0000a9dc*/ MLA         R3, R8, FP, R3 
    /*0000a9e0*/ ADC         FP, R9, R9 
    /*0000a9e4*/ UMULL       R0, R1, R0, R8 
    /*0000a9e8*/ ADDS        SL, SL, SL 
    /*0000a9ec*/ ADC         FP, FP, FP 
    /*0000a9f0*/ ADDS        SL, SL, R8 
    /*0000a9f4*/ ADC         FP, FP, R9 
    /*0000a9f8*/ ADD         R1, R3, R1 
    /*0000a9fc*/ STR         R8, [R4, #80]               @ 0x50 
    /*0000aa00*/ STRD        SL, [R4, #200]              @ 0xc8 
    /*0000aa04*/ BL          0x000000000000AA04          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000aa08*/ CMP         R0, #0 
    /*0000aa0c*/ SBCS        R3, R1, #0 
    /*0000aa10*/ BGE         RCDecisionInitFrmBits_xa95c
    RCDecisionInitFrmBits_xaa14:
    /*0000aa14*/ MOV         R0, #0 
    /*0000aa18*/ MOV         R1, #0 
    /*0000aa1c*/ MOV         R2, #0 
    /*0000aa20*/ B           RCDecisionInitFrmBits_xa980
    RCDecisionInitFrmBits_xaa24:
    /*0000aa24*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34b0] 
    /*0000aa28*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x343c] 
    /*0000aa2c*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34b0] 
    /*0000aa30*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x343c] 
    /*0000aa34*/ MOVW        R2, #465                    @ 0x1d1 
    /*0000aa38*/ LDR         R1, [PC, #148]              @ 0x000000000000aad4 
    /*0000aa3c*/ BL          0x000000000000AA3C          @ osal_panic [R_ARM_CALL: +0x0] 
    RCDecisionInitFrmBits_xaa40:
    /*0000aa40*/ MOV         R3, #0 
    /*0000aa44*/ STR         R3, [R4, #160]              @ 0xa0 
    /*0000aa48*/ STR         R3, [R4, #164]              @ 0xa4 
    /*0000aa4c*/ MOV         R0, R3 
    /*0000aa50*/ STR         R3, [R4, #168]              @ 0xa8 
    /*0000aa54*/ STR         R3, [R4, #148]              @ 0x94 
    /*0000aa58*/ STR         R3, [R4, #152]              @ 0x98 
    /*0000aa5c*/ STR         R3, [R4, #156]              @ 0x9c 
    /*0000aa60*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RCDecisionInitFrmBits_xaa64:
    /*0000aa64*/ LSR         R8, R7, #4 
    /*0000aa68*/ ASR         R9, R5, #4 
    /*0000aa6c*/ ORR         R8, R8, R5, LSL #28 
    /*0000aa70*/ B           RCDecisionInitFrmBits_xa648
    RCDecisionInitFrmBits_xaa74:
    /*0000aa74*/ LSR         R8, R7, #4 
    /*0000aa78*/ ASR         R9, R5, #4 
    /*0000aa7c*/ ORR         R8, R8, R5, LSL #28 
    /*0000aa80*/ B           RCDecisionInitFrmBits_xa9b8
    RCDecisionInitFrmBits_xaa84:
    /*0000aa84*/ MOV         R8, #0 
    /*0000aa88*/ MOV         R9, #0 
    /*0000aa8c*/ MOV         R3, #0 
    /*0000aa90*/ B           RCDecisionInitFrmBits_xa7c8
    RCDecisionInitFrmBits_xaa94:
    /*0000aa94*/ LSR         R8, R7, #4 
    /*0000aa98*/ ASR         R9, R5, #4 
    /*0000aa9c*/ ORR         R8, R8, R5, LSL #28 
    /*0000aaa0*/ B           RCDecisionInitFrmBits_xa884
    RCDecisionInitFrmBits_xaaa4:
    /*0000aaa4*/ MOV         SL, #0 
    /*0000aaa8*/ MOV         FP, #0 
    /*0000aaac*/ MOV         IP, #0 
    /*0000aab0*/ B           RCDecisionInitFrmBits_xa6dc
    RCDecisionInitFrmBits_xaab4:
    /*0000aab4*/ MOV         SL, #0 
    /*0000aab8*/ MOV         FP, #0 
    /*0000aabc*/ MOV         IP, #0 
    /*0000aac0*/ B           RCDecisionInitFrmBits_xa918
    RCDecisionInitFrmBits_xaac4:
    /*0000aac4*/ MOV         R0, #0 
    /*0000aac8*/ MOV         R1, #0 
    /*0000aacc*/ MOV         R2, #0 
    /*0000aad0*/ B           RCDecisionInitFrmBits_xa820
    /*0000aad4*/ ANDEQ       R0, R0, R0, LSL R7 
FUNC_END RCDecisionInitFrmBits


FUNC_BEGIN RCDecisionUpdateFrmBits
    /*0000aad8*/ PUSH        {R4, R6, R7, LR} 
    /*0000aadc*/ MOV         R4, R1 
    /*0000aae0*/ LDR         R3, [R0, #1512]             @ 0x5e8 
    /*0000aae4*/ SUB         SP, SP, #8 
    /*0000aae8*/ CMP         R3, #8 
    /*0000aaec*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*0000aaf0*/ B           RCDecisionUpdateFrmBits_xab18
    /*0000aaf4*/ ANDEQ       SL, R0, R0, ASR #23 
    /*0000aaf8*/ ANDEQ       SL, R0, R4, ASR #24 
    /*0000aafc*/ ANDEQ       SL, R0, R8, LSL FP 
    /*0000ab00*/ ANDEQ       SL, R0, IP, LSR FP 
    /*0000ab04*/ ANDEQ       SL, R0, IP, LSR #25 
    /*0000ab08*/ ANDEQ       SL, R0, R4, LSR #26 
    /*0000ab0c*/ ANDEQ       SL, R0, R8, LSR #27 
    /*0000ab10*/ ANDEQ       SL, R0, R8, LSL FP 
    /*0000ab14*/ ANDEQ       SL, R0, R8, ASR #22 
    RCDecisionUpdateFrmBits_xab18:
    /*0000ab18*/ STR         R3, [SP, #4] 
    /*0000ab1c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34b4] 
    /*0000ab20*/ MOV         R3, #596                    @ 0x254 
    /*0000ab24*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34b4] 
    /*0000ab28*/ STR         R3, [SP] 
    /*0000ab2c*/ MOV         R1, #19 
    /*0000ab30*/ LDR         R3, [PC, #756]              @ 0x000000000000ae2c 
    /*0000ab34*/ MOV         R0, #4 
    /*0000ab38*/ BL          0x000000000000AB38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ab3c*/ MOV         R0, #0 
    /*0000ab40*/ ADD         SP, SP, #8 
    /*0000ab44*/ POP         {R4, R6, R7, PC} 
    /*0000ab48*/ LDR         R3, [R1, #152]              @ 0x98 
    /*0000ab4c*/ MOV         LR, #0 
    /*0000ab50*/ ADD         IP, R4, #104                @ 0x68 
    /*0000ab54*/ MOV         R0, LR 
    /*0000ab58*/ ADD         R1, R3, #1 
    /*0000ab5c*/ ADD         R3, R3, #21 
    /*0000ab60*/ CMP         R1, #4 
    /*0000ab64*/ STR         R2, [R4, R3, LSL #2] 
    /*0000ab68*/ MOVGT       R3, #0 
    /*0000ab6c*/ STRGT       R3, [R4, #152]              @ 0x98 
    /*0000ab70*/ ADD         R3, R4, #84                 @ 0x54 
    /*0000ab74*/ STRLE       R1, [R4, #152]              @ 0x98 
    /*0000ab78*/ MOV         R1, LR 
    /*0000ab7c*/ STR         LR, [R4, #208]              @ 0xd0 
    /*0000ab80*/ STR         LR, [R4, #212]              @ 0xd4 
    RCDecisionUpdateFrmBits_xab84:
    /*0000ab84*/ LDR         R2, [R3], #4 
    /*0000ab88*/ ADDS        R0, R0, R2 
    /*0000ab8c*/ ADC         R1, R1, R2, ASR #31 
    /*0000ab90*/ CMP         IP, R3 
    /*0000ab94*/ BNE         RCDecisionUpdateFrmBits_xab84
    /*0000ab98*/ LSL         R3, R1, #4 
    /*0000ab9c*/ STRD        R0, [R4, #208]              @ 0xd0 
    /*0000aba0*/ ORR         R1, R3, R0, LSR #28 
    /*0000aba4*/ LDRD        R2, [R4, #200]              @ 0xc8 
    /*0000aba8*/ LSL         R0, R0, #4 
    /*0000abac*/ BL          0x000000000000ABAC          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0000abb0*/ STR         R0, [R4, #240]              @ 0xf0 
    /*0000abb4*/ MOV         R0, #0 
    /*0000abb8*/ ADD         SP, SP, #8 
    /*0000abbc*/ POP         {R4, R6, R7, PC} 
    /*0000abc0*/ LDR         R3, [R1, #168]              @ 0xa8 
    /*0000abc4*/ ADD         R1, R3, #1 
    /*0000abc8*/ ADD         R3, R4, R3, LSL #2 
    /*0000abcc*/ CMP         R1, #1 
    /*0000abd0*/ STR         R2, [R3, #140]              @ 0x8c 
    /*0000abd4*/ MOVGT       R3, #0 
    /*0000abd8*/ LDR         R0, [R4, #144]              @ 0x90 
    /*0000abdc*/ LDR         IP, [R4, #140]              @ 0x8c 
    /*0000abe0*/ STRLE       R1, [R4, #168]              @ 0xa8 
    /*0000abe4*/ STRGT       R3, [R4, #168]              @ 0xa8 
    /*0000abe8*/ ASR         R1, R0, #31 
    /*0000abec*/ ADDS        R6, R0, IP 
    /*0000abf0*/ LDRD        R2, [R4, #200]              @ 0xc8 
    /*0000abf4*/ ADC         R7, R1, IP, ASR #31 
    /*0000abf8*/ ADDS        R0, R6, R6 
    /*0000abfc*/ ADC         R1, R7, R7 
    /*0000ac00*/ ADDS        R2, R2, R2 
    /*0000ac04*/ ADC         R3, R3, R3 
    /*0000ac08*/ ADDS        R0, R0, R0 
    /*0000ac0c*/ ADC         R1, R1, R1 
    /*0000ac10*/ ADDS        R0, R0, R6 
    /*0000ac14*/ ADC         R1, R1, R7 
    /*0000ac18*/ STRD        R6, [R4, #192]              @ 0xc0 
    /*0000ac1c*/ LSL         LR, R0, #4 
    /*0000ac20*/ LSL         IP, R1, #4 
    /*0000ac24*/ ORR         IP, IP, R0, LSR #28 
    /*0000ac28*/ MOV         R0, LR 
    /*0000ac2c*/ MOV         R1, IP 
    /*0000ac30*/ BL          0x000000000000AC30          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0000ac34*/ STR         R0, [R4, #232]              @ 0xe8 
    /*0000ac38*/ MOV         R0, #0 
    /*0000ac3c*/ ADD         SP, SP, #8 
    /*0000ac40*/ POP         {R4, R6, R7, PC} 
    /*0000ac44*/ LDR         R3, [R1, #148]              @ 0x94 
    /*0000ac48*/ MOV         LR, #0 
    /*0000ac4c*/ ADD         IP, R4, #84                 @ 0x54 
    /*0000ac50*/ MOV         R0, LR 
    /*0000ac54*/ ADD         R1, R3, #1 
    /*0000ac58*/ ADD         R3, R3, #16 
    /*0000ac5c*/ CMP         R1, #4 
    /*0000ac60*/ STR         R2, [R4, R3, LSL #2] 
    /*0000ac64*/ MOVGT       R3, #0 
    /*0000ac68*/ STRGT       R3, [R4, #148]              @ 0x94 
    /*0000ac6c*/ ADD         R3, R4, #64                 @ 0x40 
    /*0000ac70*/ STRLE       R1, [R4, #148]              @ 0x94 
    /*0000ac74*/ MOV         R1, LR 
    /*0000ac78*/ STR         LR, [R4, #200]              @ 0xc8 
    /*0000ac7c*/ STR         LR, [R4, #204]              @ 0xcc 
    RCDecisionUpdateFrmBits_xac80:
    /*0000ac80*/ LDR         R2, [R3], #4 
    /*0000ac84*/ ADDS        R0, R0, R2 
    /*0000ac88*/ ADC         R1, R1, R2, ASR #31 
    /*0000ac8c*/ CMP         IP, R3 
    /*0000ac90*/ BNE         RCDecisionUpdateFrmBits_xac80
    /*0000ac94*/ STRD        R0, [R4, #200]              @ 0xc8 
    /*0000ac98*/ MOV         R3, #16 
    /*0000ac9c*/ MOV         R0, #0 
    /*0000aca0*/ STR         R3, [R4, #236]              @ 0xec 
    /*0000aca4*/ ADD         SP, SP, #8 
    /*0000aca8*/ POP         {R4, R6, R7, PC} 
    /*0000acac*/ LDR         R3, [R1, #156]              @ 0x9c 
    /*0000acb0*/ MOV         LR, #0 
    /*0000acb4*/ ADD         IP, R4, #124                @ 0x7c 
    /*0000acb8*/ MOV         R0, LR 
    /*0000acbc*/ ADD         R1, R3, #1 
    /*0000acc0*/ ADD         R3, R3, #26 
    /*0000acc4*/ CMP         R1, #4 
    /*0000acc8*/ STR         R2, [R4, R3, LSL #2] 
    /*0000accc*/ MOVGT       R3, #0 
    /*0000acd0*/ STRGT       R3, [R4, #156]              @ 0x9c 
    /*0000acd4*/ ADD         R3, R4, #104                @ 0x68 
    /*0000acd8*/ STRLE       R1, [R4, #156]              @ 0x9c 
    /*0000acdc*/ MOV         R1, LR 
    /*0000ace0*/ STR         LR, [R4, #216]              @ 0xd8 
    /*0000ace4*/ STR         LR, [R4, #220]              @ 0xdc 
    RCDecisionUpdateFrmBits_xace8:
    /*0000ace8*/ LDR         R2, [R3], #4 
    /*0000acec*/ ADDS        R0, R0, R2 
    /*0000acf0*/ ADC         R1, R1, R2, ASR #31 
    /*0000acf4*/ CMP         IP, R3 
    /*0000acf8*/ BNE         RCDecisionUpdateFrmBits_xace8
    /*0000acfc*/ LSL         R3, R1, #4 
    /*0000ad00*/ STRD        R0, [R4, #216]              @ 0xd8 
    /*0000ad04*/ ORR         R1, R3, R0, LSR #28 
    /*0000ad08*/ LDRD        R2, [R4, #200]              @ 0xc8 
    /*0000ad0c*/ LSL         R0, R0, #4 
    /*0000ad10*/ BL          0x000000000000AD10          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0000ad14*/ STR         R0, [R4, #244]              @ 0xf4 
    /*0000ad18*/ MOV         R0, #0 
    /*0000ad1c*/ ADD         SP, SP, #8 
    /*0000ad20*/ POP         {R4, R6, R7, PC} 
    /*0000ad24*/ LDR         R3, [R1, #160]              @ 0xa0 
    /*0000ad28*/ ADD         R1, R3, #1 
    /*0000ad2c*/ ADD         R3, R4, R3, LSL #2 
    /*0000ad30*/ CMP         R1, #1 
    /*0000ad34*/ STR         R2, [R3, #124]              @ 0x7c 
    /*0000ad38*/ MOVGT       R3, #0 
    /*0000ad3c*/ LDR         R0, [R4, #128]              @ 0x80 
    /*0000ad40*/ LDR         IP, [R4, #124]              @ 0x7c 
    /*0000ad44*/ STRLE       R1, [R4, #160]              @ 0xa0 
    /*0000ad48*/ STRGT       R3, [R4, #160]              @ 0xa0 
    /*0000ad4c*/ ASR         R1, R0, #31 
    /*0000ad50*/ ADDS        R6, R0, IP 
    /*0000ad54*/ LDRD        R2, [R4, #200]              @ 0xc8 
    /*0000ad58*/ ADC         R7, R1, IP, ASR #31 
    /*0000ad5c*/ ADDS        R0, R6, R6 
    /*0000ad60*/ ADC         R1, R7, R7 
    /*0000ad64*/ ADDS        R2, R2, R2 
    /*0000ad68*/ ADC         R3, R3, R3 
    /*0000ad6c*/ ADDS        R0, R0, R0 
    /*0000ad70*/ ADC         R1, R1, R1 
    /*0000ad74*/ ADDS        R0, R0, R6 
    /*0000ad78*/ ADC         R1, R1, R7 
    /*0000ad7c*/ STRD        R6, [R4, #176]              @ 0xb0 
    /*0000ad80*/ LSL         LR, R0, #4 
    /*0000ad84*/ LSL         IP, R1, #4 
    /*0000ad88*/ ORR         IP, IP, R0, LSR #28 
    /*0000ad8c*/ MOV         R0, LR 
    /*0000ad90*/ MOV         R1, IP 
    /*0000ad94*/ BL          0x000000000000AD94          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0000ad98*/ STR         R0, [R4, #224]              @ 0xe0 
    /*0000ad9c*/ MOV         R0, #0 
    /*0000ada0*/ ADD         SP, SP, #8 
    /*0000ada4*/ POP         {R4, R6, R7, PC} 
    /*0000ada8*/ LDR         R3, [R1, #164]              @ 0xa4 
    /*0000adac*/ ADD         R1, R3, #1 
    /*0000adb0*/ ADD         R3, R4, R3, LSL #2 
    /*0000adb4*/ CMP         R1, #1 
    /*0000adb8*/ STR         R2, [R3, #132]              @ 0x84 
    /*0000adbc*/ MOVGT       R3, #0 
    /*0000adc0*/ LDR         R0, [R4, #136]              @ 0x88 
    /*0000adc4*/ LDR         IP, [R4, #132]              @ 0x84 
    /*0000adc8*/ STRLE       R1, [R4, #164]              @ 0xa4 
    /*0000adcc*/ STRGT       R3, [R4, #164]              @ 0xa4 
    /*0000add0*/ ASR         R1, R0, #31 
    /*0000add4*/ ADDS        R6, R0, IP 
    /*0000add8*/ LDRD        R2, [R4, #200]              @ 0xc8 
    /*0000addc*/ ADC         R7, R1, IP, ASR #31 
    /*0000ade0*/ ADDS        R0, R6, R6 
    /*0000ade4*/ ADC         R1, R7, R7 
    /*0000ade8*/ ADDS        R2, R2, R2 
    /*0000adec*/ ADC         R3, R3, R3 
    /*0000adf0*/ ADDS        R0, R0, R0 
    /*0000adf4*/ ADC         R1, R1, R1 
    /*0000adf8*/ ADDS        R0, R0, R6 
    /*0000adfc*/ ADC         R1, R1, R7 
    /*0000ae00*/ STRD        R6, [R4, #184]              @ 0xb8 
    /*0000ae04*/ LSL         LR, R0, #4 
    /*0000ae08*/ LSL         IP, R1, #4 
    /*0000ae0c*/ ORR         IP, IP, R0, LSR #28 
    /*0000ae10*/ MOV         R0, LR 
    /*0000ae14*/ MOV         R1, IP 
    /*0000ae18*/ BL          0x000000000000AE18          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0000ae1c*/ STR         R0, [R4, #228]              @ 0xe4 
    /*0000ae20*/ MOV         R0, #0 
    /*0000ae24*/ ADD         SP, SP, #8 
    /*0000ae28*/ POP         {R4, R6, R7, PC} 
    /*0000ae2c*/ ANDEQ       R0, R0, R8, LSR #14 
FUNC_END RCDecisionUpdateFrmBits


FUNC_BEGIN RCDecisionAllocteFrmBits
    /*0000ae30*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ae34*/ SUB         SP, SP, #36                 @ 0x24 
    /*0000ae38*/ LDR         R6, [R0] 
    /*0000ae3c*/ MOV         FP, R3 
    /*0000ae40*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*0000ae44*/ MOV         R5, R0 
    /*0000ae48*/ CMP         R6, #3 
    /*0000ae4c*/ MOV         R4, R1 
    /*0000ae50*/ MOV         SL, R2 
    /*0000ae54*/ LDR         R9, [R0, #1596]             @ 0x63c 
    /*0000ae58*/ LDR         R8, [SP, #72]               @ 0x48 
    /*0000ae5c*/ STR         R3, [SP, #4] 
    /*0000ae60*/ BEQ         RCDecisionAllocteFrmBits_xb0ac
    /*0000ae64*/ CMP         R6, #4 
    /*0000ae68*/ LDRLS       PC, [PC, R6, LSL #2] 
    /*0000ae6c*/ B           RCDecisionAllocteFrmBits_xb13c
    /*0000ae70*/ STRHEQ      FP, [R0], -R8 
    /*0000ae74*/ MULEQ       R0, R8, PC                  @ <UNPREDICTABLE> 
    /*0000ae78*/ ANDEQ       FP, R0, IP, LSR R3 
    /*0000ae7c*/ ANDEQ       FP, R0, IP, LSR R3 
    /*0000ae80*/ ANDEQ       SL, R0, R4, LSL #29 
    /*0000ae84*/ SUB         R3, R9, #1 
    /*0000ae88*/ LDR         R1, [R0, #1584]             @ 0x630 
    /*0000ae8c*/ STR         R3, [SP, #24] 
    /*0000ae90*/ MOV         R0, R3 
    /*0000ae94*/ BL          0x000000000000AE94          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000ae98*/ LDRD        R2, [R4, #192]              @ 0xc0 
    /*0000ae9c*/ MOV         R9, R0 
    /*0000aea0*/ ADDS        R0, R2, R2 
    /*0000aea4*/ ADC         R1, R3, R3 
    /*0000aea8*/ ADDS        R0, R0, R0 
    /*0000aeac*/ ADC         R1, R1, R1 
    /*0000aeb0*/ ADDS        R6, R0, R2 
    /*0000aeb4*/ ADC         R7, R1, R3 
    /*0000aeb8*/ LDRD        R0, [R4, #200]              @ 0xc8 
    /*0000aebc*/ LSL         LR, R6, #4 
    /*0000aec0*/ LSL         IP, R7, #4 
    /*0000aec4*/ ADDS        R2, R0, R0 
    /*0000aec8*/ ORR         IP, IP, R6, LSR #28 
    /*0000aecc*/ ADC         R3, R1, R1 
    /*0000aed0*/ MOV         R0, LR 
    /*0000aed4*/ MOV         R1, IP 
    /*0000aed8*/ BL          0x000000000000AED8          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0000aedc*/ LDR         R1, [R4, #220]              @ 0xdc 
    /*0000aee0*/ LDR         R3, [R4, #216]              @ 0xd8 
    /*0000aee4*/ LSL         R1, R1, #4 
    /*0000aee8*/ ORR         R1, R1, R3, LSR #28 
    /*0000aeec*/ STR         R0, [R4, #232]              @ 0xe8 
    /*0000aef0*/ STR         R0, [R4, #16] 
    /*0000aef4*/ LSL         R0, R3, #4 
    /*0000aef8*/ LDRD        R2, [R4, #200]              @ 0xc8 
    /*0000aefc*/ BL          0x000000000000AEFC          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0000af00*/ CMP         SL, #0 
    /*0000af04*/ STR         R0, [R4, #244]              @ 0xf4 
    /*0000af08*/ BNE         RCDecisionAllocteFrmBits_xb030
    RCDecisionAllocteFrmBits_xaf0c:
    /*0000af0c*/ LDR         R3, [R4, #232]              @ 0xe8 
    /*0000af10*/ LDR         R1, [SP, #4] 
    /*0000af14*/ CMP         R3, #16000                  @ 0x3e80 
    /*0000af18*/ LDR         R2, [SP, #24] 
    /*0000af1c*/ MOVGE       R3, #16000                  @ 0x3e80 
    /*0000af20*/ CMP         R3, #16 
    /*0000af24*/ SUB         R2, R2, R9 
    /*0000af28*/ MOVLT       R3, #16 
    /*0000af2c*/ CMP         R0, #16 
    /*0000af30*/ ASR         FP, R3, #31 
    /*0000af34*/ ADD         R9, R3, R9, LSL #4 
    /*0000af38*/ MUL         R6, R3, R1 
    /*0000af3c*/ MOVLT       IP, R0 
    /*0000af40*/ MLA         R6, R8, FP, R6 
    /*0000af44*/ MOVGE       IP, #16 
    /*0000af48*/ UMULL       R0, R1, R3, R8 
    /*0000af4c*/ CMP         IP, #2 
    /*0000af50*/ MOVLT       IP, #2 
    /*0000af54*/ ADD         R1, R6, R1 
    /*0000af58*/ MLA         R2, IP, R2, R9 
    /*0000af5c*/ BL          0x000000000000AF5C          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    RCDecisionAllocteFrmBits_xaf60:
    /*0000af60*/ LDR         R3, [R5, #2588]             @ 0xa1c 
    /*0000af64*/ CMP         R3, #0 
    /*0000af68*/ BEQ         RCDecisionAllocteFrmBits_xb09c
    RCDecisionAllocteFrmBits_xaf6c:
    /*0000af6c*/ LDR         R3, [R5, #2592]             @ 0xa20 
    RCDecisionAllocteFrmBits_xaf70:
    /*0000af70*/ CMP         R3, #0 
    /*0000af74*/ BLT         RCDecisionAllocteFrmBits_xb09c
    /*0000af78*/ CMP         R3, R0 
    /*0000af7c*/ STR         R3, [R4, #44]               @ 0x2c 
    /*0000af80*/ BGE         RCDecisionAllocteFrmBits_xb0a4
    /*0000af84*/ LDR         R2, [R4, #248]              @ 0xf8 
    /*0000af88*/ CMP         R2, #1 
    /*0000af8c*/ SUBEQ       R0, R3, R3, LSR #4 
    /*0000af90*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000af94*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0000af98*/ LDR         R1, [R0, #1588]             @ 0x634 
    /*0000af9c*/ SUB         R3, R9, #1 
    /*0000afa0*/ STR         R3, [SP, #24] 
    /*0000afa4*/ CMP         R1, #0 
    /*0000afa8*/ MOV         R9, R3 
    /*0000afac*/ BEQ         RCDecisionAllocteFrmBits_xafc0
    /*0000afb0*/ MOV         R0, R3 
    /*0000afb4*/ BL          0x000000000000AFB4          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000afb8*/ LDR         R3, [SP, #24] 
    /*0000afbc*/ SUB         R9, R3, R0 
    RCDecisionAllocteFrmBits_xafc0:
    /*0000afc0*/ LDRD        R2, [R4, #192]              @ 0xc0 
    /*0000afc4*/ ADDS        R0, R2, R2 
    /*0000afc8*/ ADC         R1, R3, R3 
    /*0000afcc*/ ADDS        R0, R0, R0 
    /*0000afd0*/ ADC         R1, R1, R1 
    /*0000afd4*/ ADDS        R6, R0, R2 
    /*0000afd8*/ ADC         R7, R1, R3 
    /*0000afdc*/ LDRD        R0, [R4, #200]              @ 0xc8 
    /*0000afe0*/ LSL         LR, R6, #4 
    /*0000afe4*/ LSL         IP, R7, #4 
    /*0000afe8*/ ADDS        R2, R0, R0 
    /*0000afec*/ ORR         IP, IP, R6, LSR #28 
    /*0000aff0*/ ADC         R3, R1, R1 
    /*0000aff4*/ MOV         R0, LR 
    /*0000aff8*/ MOV         R1, IP 
    /*0000affc*/ BL          0x000000000000AFFC          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0000b000*/ LDR         R1, [R4, #212]              @ 0xd4 
    /*0000b004*/ LDR         R3, [R4, #208]              @ 0xd0 
    /*0000b008*/ LSL         R1, R1, #4 
    /*0000b00c*/ ORR         R1, R1, R3, LSR #28 
    /*0000b010*/ STR         R0, [R4, #232]              @ 0xe8 
    /*0000b014*/ STR         R0, [R4, #16] 
    /*0000b018*/ LSL         R0, R3, #4 
    /*0000b01c*/ LDRD        R2, [R4, #200]              @ 0xc8 
    /*0000b020*/ BL          0x000000000000B020          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0000b024*/ CMP         SL, #0 
    /*0000b028*/ STR         R0, [R4, #240]              @ 0xf0 
    /*0000b02c*/ BEQ         RCDecisionAllocteFrmBits_xaf0c
    RCDecisionAllocteFrmBits_xb030:
    /*0000b030*/ CMP         SL, #1 
    /*0000b034*/ LDR         R3, [R4, #232]              @ 0xe8 
    /*0000b038*/ BEQ         RCDecisionAllocteFrmBits_xb380
    /*0000b03c*/ CMP         R3, #15 
    /*0000b040*/ MOVLE       FP, #16 
    /*0000b044*/ BLE         RCDecisionAllocteFrmBits_xb050
    /*0000b048*/ CMP         FP, R3 
    /*0000b04c*/ MOVGE       FP, R3 
    RCDecisionAllocteFrmBits_xb050:
    /*0000b050*/ LDR         R3, [SP, #24] 
    /*0000b054*/ CMP         R0, #16 
    /*0000b058*/ LDR         IP, [SP, #4] 
    /*0000b05c*/ SUB         R2, R3, R9 
    /*0000b060*/ MOVLT       R3, R0 
    /*0000b064*/ MOVGE       R3, #16 
    /*0000b068*/ CMP         R3, #2 
    /*0000b06c*/ ADD         R9, FP, R9, LSL #4 
    /*0000b070*/ MOVLT       R3, #2 
    /*0000b074*/ ASR         R1, R3, #31 
    /*0000b078*/ MUL         R6, R3, IP 
    /*0000b07c*/ MLA         R6, R8, R1, R6 
    /*0000b080*/ UMULL       R0, R1, R3, R8 
    /*0000b084*/ MLA         R2, R3, R2, R9 
    /*0000b088*/ ADD         R1, R6, R1 
    /*0000b08c*/ BL          0x000000000000B08C          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000b090*/ LDR         R3, [R5, #2588]             @ 0xa1c 
    /*0000b094*/ CMP         R3, #0 
    /*0000b098*/ BNE         RCDecisionAllocteFrmBits_xb168
    RCDecisionAllocteFrmBits_xb09c:
    /*0000b09c*/ MVN         R3, #-2147483648            @ 0x80000000 
    /*0000b0a0*/ STR         R3, [R4, #44]               @ 0x2c 
    RCDecisionAllocteFrmBits_xb0a4:
    /*0000b0a4*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000b0a8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RCDecisionAllocteFrmBits_xb0ac:
    /*0000b0ac*/ LDR         R3, [R0, #1520]             @ 0x5f0 
    /*0000b0b0*/ CMP         R3, #0 
    /*0000b0b4*/ BNE         RCDecisionAllocteFrmBits_xb17c
    /*0000b0b8*/ LDRD        R2, [R4, #192]              @ 0xc0 
    /*0000b0bc*/ ADDS        R0, R2, R2 
    /*0000b0c0*/ ADC         R1, R3, R3 
    /*0000b0c4*/ ADDS        R0, R0, R0 
    /*0000b0c8*/ ADC         R1, R1, R1 
    /*0000b0cc*/ ADDS        R6, R0, R2 
    /*0000b0d0*/ ADC         R7, R1, R3 
    /*0000b0d4*/ LDRD        R0, [R4, #200]              @ 0xc8 
    /*0000b0d8*/ LSL         LR, R6, #4 
    /*0000b0dc*/ LSL         IP, R7, #4 
    /*0000b0e0*/ ADDS        R2, R0, R0 
    /*0000b0e4*/ ORR         IP, IP, R6, LSR #28 
    /*0000b0e8*/ ADC         R3, R1, R1 
    /*0000b0ec*/ MOV         R0, LR 
    /*0000b0f0*/ MOV         R1, IP 
    /*0000b0f4*/ BL          0x000000000000B0F4          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0000b0f8*/ CMP         SL, #0 
    /*0000b0fc*/ STR         R0, [R4, #232]              @ 0xe8 
    /*0000b100*/ STR         R0, [R4, #16] 
    /*0000b104*/ BEQ         RCDecisionAllocteFrmBits_xb304
    /*0000b108*/ CMP         R0, #15 
    /*0000b10c*/ MOVLE       FP, #16 
    /*0000b110*/ BLE         RCDecisionAllocteFrmBits_xb11c
    /*0000b114*/ CMP         R0, FP 
    /*0000b118*/ MOVLT       FP, R0 
    RCDecisionAllocteFrmBits_xb11c:
    /*0000b11c*/ LDR         R3, [SP, #4] 
    /*0000b120*/ SUB         R2, R9, #1 
    /*0000b124*/ LSL         R0, R8, #4 
    /*0000b128*/ ADD         R2, FP, R2, LSL #4 
    /*0000b12c*/ LSL         R1, R3, #4 
    /*0000b130*/ ORR         R1, R1, R8, LSR #28 
    /*0000b134*/ BL          0x000000000000B134          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000b138*/ B           RCDecisionAllocteFrmBits_xb15c
    RCDecisionAllocteFrmBits_xb13c:
    /*0000b13c*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34b0] 
    /*0000b140*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x343c] 
    /*0000b144*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34b0] 
    /*0000b148*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x343c] 
    /*0000b14c*/ MOVW        R2, #818                    @ 0x332 
    /*0000b150*/ LDR         R1, [PC, #828]              @ 0x000000000000b494 
    /*0000b154*/ BL          0x000000000000B154          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000b158*/ MOV         R0, #0 
    RCDecisionAllocteFrmBits_xb15c:
    /*0000b15c*/ LDR         R3, [R5, #2588]             @ 0xa1c 
    /*0000b160*/ CMP         R3, #0 
    /*0000b164*/ BEQ         RCDecisionAllocteFrmBits_xb09c
    RCDecisionAllocteFrmBits_xb168:
    /*0000b168*/ CMP         SL, #5 
    /*0000b16c*/ CMPNE       SL, #0 
    /*0000b170*/ BEQ         RCDecisionAllocteFrmBits_xaf6c
    RCDecisionAllocteFrmBits_xb174:
    /*0000b174*/ LDR         R3, [R5, #2596]             @ 0xa24 
    /*0000b178*/ B           RCDecisionAllocteFrmBits_xaf70
    RCDecisionAllocteFrmBits_xb17c:
    /*0000b17c*/ LDR         R0, [R0, #1592]             @ 0x638 
    /*0000b180*/ MOV         R1, R9 
    /*0000b184*/ MOV         R9, #1 
    /*0000b188*/ STR         R0, [SP, #28] 
    /*0000b18c*/ BL          0x000000000000B18C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000b190*/ STR         R0, [SP, #24] 
    RCDecisionAllocteFrmBits_xb194:
    /*0000b194*/ LDRD        R0, [R4, #176]              @ 0xb0 
    /*0000b198*/ LDRD        R6, [R4, #200]              @ 0xc8 
    /*0000b19c*/ ADDS        R0, R0, R0 
    /*0000b1a0*/ ADC         R1, R1, R1 
    /*0000b1a4*/ ADDS        R0, R0, R0 
    /*0000b1a8*/ ADC         R1, R1, R1 
    /*0000b1ac*/ ADDS        R2, R6, R6 
    /*0000b1b0*/ ADC         R3, R7, R7 
    /*0000b1b4*/ LDRD        R6, [R4, #176]              @ 0xb0 
    /*0000b1b8*/ ADDS        R6, R6, R0 
    /*0000b1bc*/ ADC         R7, R7, R1 
    /*0000b1c0*/ LSL         LR, R6, #4 
    /*0000b1c4*/ LSL         IP, R7, #4 
    /*0000b1c8*/ ORR         IP, IP, R6, LSR #28 
    /*0000b1cc*/ MOV         R0, LR 
    /*0000b1d0*/ MOV         R1, IP 
    /*0000b1d4*/ BL          0x000000000000B1D4          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0000b1d8*/ LDRD        R2, [R4, #184]              @ 0xb8 
    /*0000b1dc*/ ADDS        R2, R2, R2 
    /*0000b1e0*/ ADC         R3, R3, R3 
    /*0000b1e4*/ ADDS        R6, R2, R2 
    /*0000b1e8*/ ADC         R7, R3, R3 
    /*0000b1ec*/ LDRD        R2, [R4, #200]              @ 0xc8 
    /*0000b1f0*/ STRD        R6, [SP, #16] 
    /*0000b1f4*/ ADDS        R2, R2, R2 
    /*0000b1f8*/ LDRD        R6, [R4, #184]              @ 0xb8 
    /*0000b1fc*/ ADC         R3, R3, R3 
    /*0000b200*/ STRD        R2, [SP, #8] 
    /*0000b204*/ LDRD        R2, [SP, #16] 
    /*0000b208*/ ADDS        R6, R6, R2 
    /*0000b20c*/ ADC         R7, R7, R3 
    /*0000b210*/ LDRD        R2, [SP, #8] 
    /*0000b214*/ LSL         IP, R6, #4 
    /*0000b218*/ LSL         R1, R7, #4 
    /*0000b21c*/ ORR         R1, R1, R6, LSR #28 
    /*0000b220*/ STR         R0, [R4, #224]              @ 0xe0 
    /*0000b224*/ MOV         R0, IP 
    /*0000b228*/ BL          0x000000000000B228          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0000b22c*/ LDRD        R2, [R4, #192]              @ 0xc0 
    /*0000b230*/ ADDS        R2, R2, R2 
    /*0000b234*/ ADC         R3, R3, R3 
    /*0000b238*/ ADDS        R6, R2, R2 
    /*0000b23c*/ ADC         R7, R3, R3 
    /*0000b240*/ LDRD        R2, [R4, #200]              @ 0xc8 
    /*0000b244*/ STRD        R6, [SP, #16] 
    /*0000b248*/ ADDS        R2, R2, R2 
    /*0000b24c*/ LDRD        R6, [R4, #192]              @ 0xc0 
    /*0000b250*/ ADC         R3, R3, R3 
    /*0000b254*/ STRD        R2, [SP, #8] 
    /*0000b258*/ LDRD        R2, [SP, #16] 
    /*0000b25c*/ ADDS        R6, R6, R2 
    /*0000b260*/ ADC         R7, R7, R3 
    /*0000b264*/ LDRD        R2, [SP, #8] 
    /*0000b268*/ LSL         IP, R6, #4 
    /*0000b26c*/ LSL         R1, R7, #4 
    /*0000b270*/ ORR         R1, R1, R6, LSR #28 
    /*0000b274*/ STR         R0, [R4, #228]              @ 0xe4 
    /*0000b278*/ MOV         R0, IP 
    /*0000b27c*/ BL          0x000000000000B27C          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0000b280*/ STR         R0, [R4, #232]              @ 0xe8 
    /*0000b284*/ LDR         R3, [R5, #1520]             @ 0x5f0 
    /*0000b288*/ CMP         R3, #1 
    /*0000b28c*/ ORREQ       R9, R9, #1 
    /*0000b290*/ LDR         R3, [R4, #224]              @ 0xe0 
    /*0000b294*/ CMP         R9, #0 
    /*0000b298*/ STREQ       R0, [R4, #16] 
    /*0000b29c*/ STRNE       R3, [R4, #16] 
    /*0000b2a0*/ CMP         SL, #5 
    /*0000b2a4*/ BEQ         RCDecisionAllocteFrmBits_xb3d4
    /*0000b2a8*/ CMP         SL, #6 
    /*0000b2ac*/ BEQ         RCDecisionAllocteFrmBits_xb438
    /*0000b2b0*/ CMP         R3, #15 
    /*0000b2b4*/ MOVLE       FP, #16 
    /*0000b2b8*/ BLE         RCDecisionAllocteFrmBits_xb2c4
    /*0000b2bc*/ CMP         FP, R3 
    /*0000b2c0*/ MOVGE       FP, R3 
    RCDecisionAllocteFrmBits_xb2c4:
    /*0000b2c4*/ LDR         R2, [R4, #228]              @ 0xe4 
    /*0000b2c8*/ LSL         R0, R8, #4 
    /*0000b2cc*/ LDR         IP, [SP, #24] 
    /*0000b2d0*/ LDR         R3, [SP, #28] 
    /*0000b2d4*/ CMP         R2, #160                    @ 0xa0 
    /*0000b2d8*/ LDR         R1, [SP, #4] 
    /*0000b2dc*/ SUB         R3, R3, IP 
    /*0000b2e0*/ MOVGE       R2, #160                    @ 0xa0 
    /*0000b2e4*/ CMP         R2, #16 
    /*0000b2e8*/ ADD         FP, FP, R3, LSL #4 
    /*0000b2ec*/ LSL         R1, R1, #4 
    /*0000b2f0*/ MOVLT       R2, #16 
    /*0000b2f4*/ ORR         R1, R1, R8, LSR #28 
    /*0000b2f8*/ MLA         R2, IP, R2, FP 
    /*0000b2fc*/ BL          0x000000000000B2FC          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000b300*/ B           RCDecisionAllocteFrmBits_xb15c
    RCDecisionAllocteFrmBits_xb304:
    /*0000b304*/ CMP         R0, #16000                  @ 0x3e80 
    /*0000b308*/ LDR         R3, [SP, #4] 
    /*0000b30c*/ SUB         R2, R9, #1 
    /*0000b310*/ MOVGE       R0, #16000                  @ 0x3e80 
    /*0000b314*/ CMP         R0, #16 
    /*0000b318*/ MOVLT       R0, #16 
    /*0000b31c*/ ADD         R2, R0, R2, LSL #4 
    /*0000b320*/ ASR         FP, R0, #31 
    /*0000b324*/ MUL         R6, R0, R3 
    /*0000b328*/ MLA         R6, R8, FP, R6 
    /*0000b32c*/ UMULL       R0, R1, R0, R8 
    /*0000b330*/ ADD         R1, R6, R1 
    /*0000b334*/ BL          0x000000000000B334          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000b338*/ B           RCDecisionAllocteFrmBits_xaf60
    /*0000b33c*/ LDR         R3, [R0, #1592]             @ 0x638 
    /*0000b340*/ MOV         R1, R9 
    /*0000b344*/ SUB         R9, R6, #2 
    /*0000b348*/ CLZ         R9, R9 
    /*0000b34c*/ MOV         R0, R3 
    /*0000b350*/ STR         R3, [SP, #28] 
    /*0000b354*/ BL          0x000000000000B354          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000b358*/ LSR         R9, R9, #5 
    /*0000b35c*/ CMP         R0, #0 
    /*0000b360*/ MOV         R3, R0 
    /*0000b364*/ STR         R0, [SP, #24] 
    /*0000b368*/ MOVLE       R9, #0 
    /*0000b36c*/ CMP         R9, #0 
    /*0000b370*/ SUBNE       R3, R0, #1 
    /*0000b374*/ STRNE       R3, [SP, #24] 
    /*0000b378*/ MOVNE       R9, #0 
    /*0000b37c*/ B           RCDecisionAllocteFrmBits_xb194
    RCDecisionAllocteFrmBits_xb380:
    /*0000b380*/ CMP         R3, #15 
    /*0000b384*/ MOVLE       R3, #16 
    /*0000b388*/ BGT         RCDecisionAllocteFrmBits_xb42c
    RCDecisionAllocteFrmBits_xb38c:
    /*0000b38c*/ LDR         R2, [SP, #24] 
    /*0000b390*/ CMP         R0, #16 
    /*0000b394*/ SUB         R7, R2, R9 
    /*0000b398*/ ADD         R9, R3, R9, LSL #4 
    /*0000b39c*/ LDR         R3, [SP, #4] 
    /*0000b3a0*/ MOVLT       R2, R0 
    /*0000b3a4*/ MOVGE       R2, #16 
    /*0000b3a8*/ CMP         R2, #2 
    /*0000b3ac*/ LSL         R0, R8, #4 
    /*0000b3b0*/ LSL         R1, R3, #4 
    /*0000b3b4*/ MOVLT       R2, #2 
    /*0000b3b8*/ ORR         R1, R1, R8, LSR #28 
    /*0000b3bc*/ MLA         R2, R2, R7, R9 
    /*0000b3c0*/ BL          0x000000000000B3C0          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    RCDecisionAllocteFrmBits_xb3c4:
    /*0000b3c4*/ LDR         R3, [R5, #2588]             @ 0xa1c 
    /*0000b3c8*/ CMP         R3, #0 
    /*0000b3cc*/ BNE         RCDecisionAllocteFrmBits_xb174
    /*0000b3d0*/ B           RCDecisionAllocteFrmBits_xb09c
    RCDecisionAllocteFrmBits_xb3d4:
    /*0000b3d4*/ CMP         R3, #16000                  @ 0x3e80 
    /*0000b3d8*/ LDR         R2, [SP, #28] 
    /*0000b3dc*/ LDR         LR, [SP, #24] 
    /*0000b3e0*/ MOVGE       R3, #16000                  @ 0x3e80 
    /*0000b3e4*/ CMP         R3, #16 
    /*0000b3e8*/ LDR         R6, [SP, #4] 
    /*0000b3ec*/ SUB         IP, R2, LR 
    /*0000b3f0*/ MOVLT       R3, #16 
    /*0000b3f4*/ LDR         R2, [R4, #228]              @ 0xe4 
    /*0000b3f8*/ ASR         R1, R3, #31 
    /*0000b3fc*/ CMP         R2, #160                    @ 0xa0 
    /*0000b400*/ MUL         R6, R3, R6 
    /*0000b404*/ MOVGE       R2, #160                    @ 0xa0 
    /*0000b408*/ MLA         R6, R8, R1, R6 
    /*0000b40c*/ CMP         R2, #16 
    /*0000b410*/ UMULL       R0, R1, R3, R8 
    /*0000b414*/ ADD         R3, R3, IP, LSL #4 
    /*0000b418*/ MOVLT       R2, #16 
    /*0000b41c*/ ADD         R1, R6, R1 
    /*0000b420*/ MLA         R2, LR, R2, R3 
    /*0000b424*/ BL          0x000000000000B424          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000b428*/ B           RCDecisionAllocteFrmBits_xaf60
    RCDecisionAllocteFrmBits_xb42c:
    /*0000b42c*/ CMP         FP, R3 
    /*0000b430*/ MOVLT       R3, FP 
    /*0000b434*/ B           RCDecisionAllocteFrmBits_xb38c
    RCDecisionAllocteFrmBits_xb438:
    /*0000b438*/ CMP         R3, #15 
    /*0000b43c*/ MOVLE       R3, #16 
    /*0000b440*/ BLE         RCDecisionAllocteFrmBits_xb44c
    /*0000b444*/ CMP         FP, R3 
    /*0000b448*/ MOVLT       R3, FP 
    RCDecisionAllocteFrmBits_xb44c:
    /*0000b44c*/ LDR         R2, [R4, #228]              @ 0xe4 
    /*0000b450*/ LDR         R1, [SP, #28] 
    /*0000b454*/ CMP         R2, #160                    @ 0xa0 
    /*0000b458*/ LDR         IP, [SP, #24] 
    /*0000b45c*/ LDR         LR, [SP, #4] 
    /*0000b460*/ MOVGE       R2, #160                    @ 0xa0 
    /*0000b464*/ CMP         R2, #16 
    /*0000b468*/ SUB         FP, R1, IP 
    /*0000b46c*/ MOVLT       R2, #16 
    /*0000b470*/ ASR         R1, R2, #31 
    /*0000b474*/ ADD         R3, R3, FP, LSL #4 
    /*0000b478*/ MUL         R6, R2, LR 
    /*0000b47c*/ MLA         R6, R8, R1, R6 
    /*0000b480*/ UMULL       R0, R1, R2, R8 
    /*0000b484*/ MLA         R2, R2, IP, R3 
    /*0000b488*/ ADD         R1, R6, R1 
    /*0000b48c*/ BL          0x000000000000B48C          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000b490*/ B           RCDecisionAllocteFrmBits_xb3c4
    /*0000b494*/ ANDEQ       R0, R0, R0, ASR #14 
FUNC_END RCDecisionAllocteFrmBits


FUNC_BEGIN RCDecisionUpdateMovementJudge
    /*0000b498*/ PUSH        {R4, LR} 
    /*0000b49c*/ LDR         IP, [R0, #1512]             @ 0x5e8 
    /*0000b4a0*/ CMP         IP, #5 
    /*0000b4a4*/ CMPNE       IP, #0 
    /*0000b4a8*/ BNE         RCDecisionUpdateMovementJudge_xb4c8
    /*0000b4ac*/ LDR         R4, [R1, #300]              @ 0x12c 
    /*0000b4b0*/ LDR         LR, [R1, #364]              @ 0x16c 
    /*0000b4b4*/ STR         R2, [R1, #300]              @ 0x12c 
    /*0000b4b8*/ STR         R4, [R1, #296]              @ 0x128 
    /*0000b4bc*/ STR         LR, [R1, #360]              @ 0x168 
    /*0000b4c0*/ LDR         R0, [R0, #1652]             @ 0x674 
    /*0000b4c4*/ STR         R0, [R1, #364]              @ 0x16c 
    RCDecisionUpdateMovementJudge_xb4c8:
    /*0000b4c8*/ CMP         IP, #1 
    /*0000b4cc*/ BEQ         RCDecisionUpdateMovementJudge_xb4d8
    /*0000b4d0*/ MOV         R0, #0 
    /*0000b4d4*/ POP         {R4, PC} 
    RCDecisionUpdateMovementJudge_xb4d8:
    /*0000b4d8*/ ADD         R0, R1, #328                @ 0x148 
    /*0000b4dc*/ ADD         R4, R1, #356                @ 0x164 
    RCDecisionUpdateMovementJudge_xb4e0:
    /*0000b4e0*/ LDR         IP, [R0, #4] 
    /*0000b4e4*/ STR         IP, [R0], #4 
    /*0000b4e8*/ CMP         R0, R4 
    /*0000b4ec*/ LDR         LR, [R0, #64]               @ 0x40 
    /*0000b4f0*/ LDR         IP, [R0, #96]               @ 0x60 
    /*0000b4f4*/ STR         LR, [R0, #60]               @ 0x3c 
    /*0000b4f8*/ STR         IP, [R0, #92]               @ 0x5c 
    /*0000b4fc*/ BNE         RCDecisionUpdateMovementJudge_xb4e0
    /*0000b500*/ STR         R2, [R1, #356]              @ 0x164 
    /*0000b504*/ ADD         IP, R1, #492                @ 0x1ec 
    /*0000b508*/ LDR         R0, [R3, #4] 
    /*0000b50c*/ ADD         R2, R1, #464                @ 0x1d0 
    /*0000b510*/ STR         R0, [R1, #420]              @ 0x1a4 
    /*0000b514*/ LDR         R0, [R3, #8] 
    /*0000b518*/ STR         R0, [R1, #452]              @ 0x1c4 
    RCDecisionUpdateMovementJudge_xb51c:
    /*0000b51c*/ LDR         R0, [R2, #4] 
    /*0000b520*/ STR         R0, [R2], #4 
    /*0000b524*/ CMP         IP, R2 
    /*0000b528*/ LDR         R0, [R2, #32] 
    /*0000b52c*/ STR         R0, [R2, #28] 
    /*0000b530*/ BNE         RCDecisionUpdateMovementJudge_xb51c
    /*0000b534*/ LDR         R2, [R3, #240]              @ 0xf0 
    /*0000b538*/ MOV         R0, #0 
    /*0000b53c*/ STR         R2, [R1, #492]              @ 0x1ec 
    /*0000b540*/ LDR         R3, [R3, #236]              @ 0xec 
    /*0000b544*/ STR         R3, [R1, #524]              @ 0x20c 
    /*0000b548*/ POP         {R4, PC} 
FUNC_END RCDecisionUpdateMovementJudge


FUNC_BEGIN RCDecisionInitMjpeg.constprop.1
    /*0000b54c*/ PUSH        {R4, R5, R6, R8, R9, LR} 
    /*0000b550*/ MOV         R4, R0 
    /*0000b554*/ LDR         R3, [R0, #52]               @ 0x34 
    /*0000b558*/ LDR         R5, [R0, #44]               @ 0x2c 
    /*0000b55c*/ CMP         R3, #1 
    /*0000b560*/ LSR         R6, R5, #16 
    /*0000b564*/ UXTH        R5, R5 
    /*0000b568*/ BEQ         RCDecisionInitMjpeg.constprop.1_xb604
    /*0000b56c*/ LDR         R3, [R0, #56]               @ 0x38 
    /*0000b570*/ MOV         R2, #100                    @ 0x64 
    /*0000b574*/ LDR         R0, [R0, #224]              @ 0xe0 
    /*0000b578*/ LSR         R3, R3, #8 
    /*0000b57c*/ ASR         R9, R0, #31 
    /*0000b580*/ MOV         R8, R0 
    /*0000b584*/ UMULL       R0, R1, R0, R3 
    /*0000b588*/ MLA         R1, R3, R9, R1 
    /*0000b58c*/ BL          0x000000000000B58C          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000b590*/ MOV         R2, R0 
    /*0000b594*/ LSL         R3, R1, #8 
    /*0000b598*/ LSL         R0, R0, #8 
    /*0000b59c*/ ORR         R3, R3, R2, LSR #24 
    RCDecisionInitMjpeg.constprop.1_xb5a0:
    /*0000b5a0*/ CMP         R6, #0 
    /*0000b5a4*/ UMULLNE     R0, R1, R6, R0 
    /*0000b5a8*/ MOVNE       R2, R5 
    /*0000b5ac*/ MOVEQ       R2, R5 
    /*0000b5b0*/ MOVEQ       R1, R3 
    /*0000b5b4*/ MLANE       R1, R6, R3, R1 
    /*0000b5b8*/ BL          0x000000000000B5B8          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000b5bc*/ LDR         R3, [R4, #352]              @ 0x160 
    /*0000b5c0*/ MOV         R2, #0 
    /*0000b5c4*/ STR         R2, [R4, #3268]             @ 0xcc4 
    /*0000b5c8*/ CMP         R3, R2 
    /*0000b5cc*/ ADD         LR, R3, #7 
    /*0000b5d0*/ MOVLT       R3, LR 
    /*0000b5d4*/ ASR         R3, R3, #3 
    /*0000b5d8*/ STR         R3, [R4, #3300]             @ 0xce4 
    /*0000b5dc*/ MOV         R3, #3200                   @ 0xc80 
    /*0000b5e0*/ STR         R3, [R4, #3260]             @ 0xcbc 
    /*0000b5e4*/ MOV         IP, R0 
    /*0000b5e8*/ STR         R0, [R4, #3240]             @ 0xca8 
    /*0000b5ec*/ STR         R1, [R4, #3244]             @ 0xcac 
    /*0000b5f0*/ MOV         R0, R2 
    /*0000b5f4*/ STR         IP, [R4, #3280]             @ 0xcd0 
    /*0000b5f8*/ MOV         R2, #2 
    /*0000b5fc*/ STR         R2, [R4, #3252]             @ 0xcb4 
    /*0000b600*/ POP         {R4, R5, R6, R8, R9, PC} 
    RCDecisionInitMjpeg.constprop.1_xb604:
    /*0000b604*/ LDR         R0, [R0, #56]               @ 0x38 
    /*0000b608*/ MOV         R3, #0 
    /*0000b60c*/ B           RCDecisionInitMjpeg.constprop.1_xb5a0
FUNC_END RCDecisionInitMjpeg.constprop.1


FUNC_BEGIN RcUpdateDeBreathEffectIStartQp
    /*0000b610*/ LDR         R2, [R0, #3124]             @ 0xc34 
    /*0000b614*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000b618*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000b61c*/ ADD         R3, R3, R2 
    /*0000b620*/ LDRB        R0, [R3, #560]              @ 0x230 
    /*0000b624*/ CMP         R0, R1 
    /*0000b628*/ SUBCC       R0, R1, R0 
    /*0000b62c*/ MOVCS       R0, R1 
    /*0000b630*/ BX          LR 
FUNC_END RcUpdateDeBreathEffectIStartQp


FUNC_BEGIN RCReEncDecisionCbr
    /*0000b634*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000b638*/ MOV         R0, R1 
    /*0000b63c*/ SUB         SP, SP, #84                 @ 0x54 
    /*0000b640*/ MOV         R4, R1 
    /*0000b644*/ LDR         R9, [R1, #1640]             @ 0x668 
    /*0000b648*/ LDR         R6, [R1, #56]               @ 0x38 
    /*0000b64c*/ LDR         FP, [R1, #36]               @ 0x24 
    /*0000b650*/ LDR         R5, [R1, #1508]             @ 0x5e4 
    /*0000b654*/ BL          0x000000000000B654          @ RC_DRV_ReEncodeSupport [R_ARM_CALL: .text+0x115d4] 
    /*0000b658*/ CMP         R0, #0 
    /*0000b65c*/ BEQ         RCReEncDecisionCbr_xb918
    /*0000b660*/ LDR         R2, [R4, #3268]             @ 0xcc4 
    /*0000b664*/ LDR         R3, [R4, #248]              @ 0xf8 
    /*0000b668*/ CMP         R2, R3 
    /*0000b66c*/ BGE         RCReEncDecisionCbr_xb918
    /*0000b670*/ ADD         SL, R4, #368                @ 0x170 
    /*0000b674*/ ADD         R3, SP, #32 
    /*0000b678*/ ADD         R2, SP, #28 
    /*0000b67c*/ MOV         R1, R9 
    /*0000b680*/ MOV         R0, SL 
    /*0000b684*/ LDR         R7, [R4, #1496]             @ 0x5d8 
    /*0000b688*/ BL          0x000000000000A0A4 
    /*0000b68c*/ CMP         R0, #0 
    /*0000b690*/ BNE         RCReEncDecisionCbr_xb8f8
    /*0000b694*/ MOV         R1, FP 
    /*0000b698*/ LDR         R0, [SP, #28] 
    /*0000b69c*/ BL          0x000000000000B69C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000b6a0*/ MOV         R1, FP 
    /*0000b6a4*/ MOV         R8, R0 
    /*0000b6a8*/ LDR         R0, [SP, #32] 
    /*0000b6ac*/ STR         R8, [SP, #28] 
    /*0000b6b0*/ BL          0x000000000000B6B0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000b6b4*/ CMP         R5, #0 
    /*0000b6b8*/ CMPNE       R5, #5 
    /*0000b6bc*/ MOVNE       R1, #1 
    /*0000b6c0*/ MOVEQ       R1, #0 
    /*0000b6c4*/ STR         R0, [SP, #32] 
    /*0000b6c8*/ BEQ         RCReEncDecisionCbr_xb6e0
    /*0000b6cc*/ LDR         R1, [R4, #3280]             @ 0xcd0 
    /*0000b6d0*/ ADD         R1, R1, R1, LSL #1 
    /*0000b6d4*/ CMP         R9, R1 
    /*0000b6d8*/ MOVLS       R1, #0 
    /*0000b6dc*/ MOVHI       R1, #1 
    RCReEncDecisionCbr_xb6e0:
    /*0000b6e0*/ CMP         R5, #5 
    /*0000b6e4*/ CMPNE       R5, #0 
    /*0000b6e8*/ MOVEQ       R3, #1 
    /*0000b6ec*/ MOVNE       R3, #0 
    /*0000b6f0*/ STR         R3, [SP, #12] 
    /*0000b6f4*/ BNE         RCReEncDecisionCbr_xb70c
    /*0000b6f8*/ LDR         R3, [R4, #3280]             @ 0xcd0 
    /*0000b6fc*/ ADD         R3, R3, R3, LSL #1 
    /*0000b700*/ ADD         R3, R3, R3, LSR #31 
    /*0000b704*/ CMP         R9, R3, ASR #1 
    /*0000b708*/ MOVHI       R1, #1 
    RCReEncDecisionCbr_xb70c:
    /*0000b70c*/ MOVW        R2, #26215                  @ 0x6667 
    /*0000b710*/ MOVT        R2, #26214                  @ 0x6666 
    /*0000b714*/ ASR         IP, R6, #31 
    /*0000b718*/ SUB         R8, R0, R8 
    /*0000b71c*/ SMULL       R2, R3, R6, R2 
    /*0000b720*/ RSB         R3, IP, R3, ASR #3 
    /*0000b724*/ CMP         R3, R8 
    /*0000b728*/ LSL         R3, R3, #1 
    /*0000b72c*/ SUB         R2, R6, R3 
    /*0000b730*/ MOVGE       R8, #0 
    /*0000b734*/ MOVLT       R8, #1 
    /*0000b738*/ CMP         R2, R0 
    /*0000b73c*/ ADD         R6, R6, R3 
    /*0000b740*/ MOVLE       R3, #0 
    /*0000b744*/ MOVGT       R3, #1 
    /*0000b748*/ CMP         R6, R0 
    /*0000b74c*/ MOVGE       R6, R3 
    /*0000b750*/ ORRLT       R6, R3, #1 
    /*0000b754*/ CMP         R7, #3 
    /*0000b758*/ BEQ         RCReEncDecisionCbr_xb924
    /*0000b75c*/ AND         R8, R8, R6 
    /*0000b760*/ TST         R1, R8 
    /*0000b764*/ LDRNE       R6, [R4, #1640]             @ 0x668 
    /*0000b768*/ BEQ         RCReEncDecisionCbr_xb918
    RCReEncDecisionCbr_xb76c:
    /*0000b76c*/ LDR         R3, [R4, #2000]             @ 0x7d0 
    /*0000b770*/ MOV         R2, #36                     @ 0x24 
    /*0000b774*/ ADD         R1, R4, #332                @ 0x14c 
    /*0000b778*/ ADD         R0, SP, #44                 @ 0x2c 
    /*0000b77c*/ LDR         R8, [R4, #2004]             @ 0x7d4 
    /*0000b780*/ STR         R3, [SP, #20] 
    /*0000b784*/ LDR         R9, [R4, #56]               @ 0x38 
    /*0000b788*/ LDR         FP, [R4, #36]               @ 0x24 
    /*0000b78c*/ BL          0x000000000000B78C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000b790*/ LDR         R1, [SP, #56]               @ 0x38 
    /*0000b794*/ MOV         R0, SL 
    /*0000b798*/ LDR         IP, [SP, #64]               @ 0x40 
    /*0000b79c*/ ADD         R3, SP, #36                 @ 0x24 
    /*0000b7a0*/ LDR         R7, [SP, #52]               @ 0x34 
    /*0000b7a4*/ ADD         R1, R1, R6 
    /*0000b7a8*/ LDR         R2, [SP, #68]               @ 0x44 
    /*0000b7ac*/ LSL         R8, R8, #6 
    /*0000b7b0*/ CMP         R1, IP 
    /*0000b7b4*/ RSBLE       R7, R7, R1 
    /*0000b7b8*/ RSBGT       R7, R7, IP 
    /*0000b7bc*/ LDR         R1, [SP, #72]               @ 0x48 
    /*0000b7c0*/ CMP         R7, R2 
    /*0000b7c4*/ LDR         IP, [SP, #76]               @ 0x4c 
    /*0000b7c8*/ ADD         R1, R1, #1 
    /*0000b7cc*/ STR         R1, [SP, #72]               @ 0x48 
    /*0000b7d0*/ MOVLT       R7, R2 
    /*0000b7d4*/ MOV         R1, R6 
    /*0000b7d8*/ ADD         R2, SP, #40                 @ 0x28 
    /*0000b7dc*/ ADD         IP, IP, #1 
    /*0000b7e0*/ STR         R7, [SP, #56]               @ 0x38 
    /*0000b7e4*/ STR         IP, [SP, #76]               @ 0x4c 
    /*0000b7e8*/ BL          0x000000000000A0A4 
    /*0000b7ec*/ CMP         R0, #0 
    /*0000b7f0*/ BNE         RCReEncDecisionCbr_xbae4
    /*0000b7f4*/ MOV         R1, FP 
    /*0000b7f8*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000b7fc*/ BL          0x000000000000B7FC          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000b800*/ MOV         R1, FP 
    /*0000b804*/ MOV         SL, R0 
    /*0000b808*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000b80c*/ BL          0x000000000000B80C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000b810*/ LDR         R2, [R4, #3280]             @ 0xcd0 
    /*0000b814*/ CMP         R2, R6 
    /*0000b818*/ MOV         R5, R0 
    /*0000b81c*/ BGT         RCReEncDecisionCbr_xbac8
    /*0000b820*/ SUB         R0, R6, R2 
    /*0000b824*/ ADD         R2, R2, #8 
    /*0000b828*/ LSL         R0, R0, #2 
    /*0000b82c*/ ASR         R1, R2, #3 
    /*0000b830*/ BL          0x000000000000B830          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000b834*/ MOV         R6, R0 
    RCReEncDecisionCbr_xb838:
    /*0000b838*/ ASR         R2, R9, #5 
    /*0000b83c*/ MOV         R0, R5 
    /*0000b840*/ STR         R2, [SP, #16] 
    /*0000b844*/ MOVW        FP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000b848*/ MOV         R1, R2 
    /*0000b84c*/ MOVT        FP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000b850*/ BL          0x000000000000B850          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000b854*/ LDR         R2, [SP, #16] 
    /*0000b858*/ MOV         R1, R2 
    /*0000b85c*/ USAT        R2, #6, R0 
    /*0000b860*/ MOV         R0, SL 
    /*0000b864*/ ADD         R2, FP, R2, LSL #2 
    /*0000b868*/ STR         R2, [SP, #16] 
    /*0000b86c*/ BL          0x000000000000B86C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000b870*/ LDR         R2, [SP, #16] 
    /*0000b874*/ CMP         SL, R5 
    /*0000b878*/ CMPLT       R9, SL 
    /*0000b87c*/ LDR         IP, [R2, #228]              @ 0xe4 
    /*0000b880*/ USAT        R0, #6, R0 
    /*0000b884*/ ADD         FP, FP, R0, LSL #2 
    /*0000b888*/ LDR         R2, [FP, #228]              @ 0xe4 
    /*0000b88c*/ SUB         IP, IP, R2 
    /*0000b890*/ BLT         RCReEncDecisionCbr_xb8a0
    /*0000b894*/ CMP         SL, R5 
    /*0000b898*/ CMPGT       R9, SL 
    /*0000b89c*/ BLE         RCReEncDecisionCbr_xb998
    RCReEncDecisionCbr_xb8a0:
    /*0000b8a0*/ SUB         R5, R5, R9 
    /*0000b8a4*/ MOV         R0, #96                     @ 0x60 
    /*0000b8a8*/ MOV         R1, R9 
    /*0000b8ac*/ MOV         SL, #6 
    /*0000b8b0*/ MUL         R0, R0, R5 
    /*0000b8b4*/ MUL         SL, SL, IP 
    /*0000b8b8*/ BL          0x000000000000B8B8          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000b8bc*/ LDR         R1, [R4, #3300]             @ 0xce4 
    /*0000b8c0*/ MOV         R9, R0 
    /*0000b8c4*/ SUB         R0, R7, R1 
    /*0000b8c8*/ LSL         R0, R0, #5 
    /*0000b8cc*/ BL          0x000000000000B8CC          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000b8d0*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*0000b8d4*/ CMP         R3, #5 
    /*0000b8d8*/ CMPNE       R3, #0 
    /*0000b8dc*/ BEQ         RCReEncDecisionCbr_xba10
    /*0000b8e0*/ CMP         SL, #256                    @ 0x100 
    /*0000b8e4*/ MVN         R3, #191                    @ 0xbf 
    /*0000b8e8*/ MOVGE       SL, #256                    @ 0x100 
    /*0000b8ec*/ CMP         SL, R3 
    /*0000b8f0*/ MOVLT       SL, R3 
    /*0000b8f4*/ B           RCReEncDecisionCbr_xb9d8
    RCReEncDecisionCbr_xb8f8:
    /*0000b8f8*/ MOVW        R3, #1604                   @ 0x644 
    /*0000b8fc*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34e4] 
    /*0000b900*/ STR         R3, [SP] 
    /*0000b904*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34e4] 
    /*0000b908*/ LDR         R3, [PC, #512]              @ 0x000000000000bb10 
    /*0000b90c*/ MOV         R1, #19 
    /*0000b910*/ MOV         R0, #4 
    /*0000b914*/ BL          0x000000000000B914          @ HI_LOG [R_ARM_CALL: +0x0] 
    RCReEncDecisionCbr_xb918:
    /*0000b918*/ MOV         R0, #0 
    /*0000b91c*/ ADD         SP, SP, #84                 @ 0x54 
    /*0000b920*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RCReEncDecisionCbr_xb924:
    /*0000b924*/ LDR         R6, [R4, #1640]             @ 0x668 
    /*0000b928*/ LDR         R0, [R4, #3284]             @ 0xcd4 
    /*0000b92c*/ CMP         R0, R6 
    /*0000b930*/ BGT         RCReEncDecisionCbr_xb76c
    /*0000b934*/ LDR         R3, [R4, #3488]             @ 0xda0 
    /*0000b938*/ CMP         R3, #1 
    /*0000b93c*/ BNE         RCReEncDecisionCbr_xb76c
    /*0000b940*/ SUB         R0, R6, R0 
    /*0000b944*/ LDR         R1, [R4, #3280]             @ 0xcd0 
    /*0000b948*/ LDR         R7, [R4, #1996]             @ 0x7cc 
    /*0000b94c*/ LSL         R0, R0, #2 
    /*0000b950*/ LDR         R8, [R4, #2004]             @ 0x7d4 
    /*0000b954*/ BL          0x000000000000B954          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000b958*/ MOV         R3, #160                    @ 0xa0 
    /*0000b95c*/ LSL         R2, R7, #6 
    /*0000b960*/ LSL         R8, R8, #6 
    /*0000b964*/ MUL         R0, R3, R0 
    /*0000b968*/ CMP         R0, #640                    @ 0x280 
    /*0000b96c*/ MOVGE       R0, #640                    @ 0x280 
    /*0000b970*/ CMP         R0, #128                    @ 0x80 
    /*0000b974*/ ADDGE       R0, R2, R0 
    /*0000b978*/ ADDLT       R0, R2, #128                @ 0x80 
    /*0000b97c*/ CMP         R8, R0 
    /*0000b980*/ BGT         RCReEncDecisionCbr_xba90
    /*0000b984*/ LDR         R8, [R4, #2000]             @ 0x7d0 
    /*0000b988*/ LSL         R8, R8, #6 
    /*0000b98c*/ CMP         R8, R0 
    /*0000b990*/ MOVGE       R8, R0 
    /*0000b994*/ B           RCReEncDecisionCbr_xba90
    RCReEncDecisionCbr_xb998:
    /*0000b998*/ LDR         R2, [R4, #1508]             @ 0x5e4 
    /*0000b99c*/ CMP         R2, #5 
    /*0000b9a0*/ CMPNE       R2, #0 
    /*0000b9a4*/ MOVEQ       SL, #1 
    /*0000b9a8*/ MOVNE       SL, #0 
    /*0000b9ac*/ BEQ         RCReEncDecisionCbr_xb9e4
    /*0000b9b0*/ SUB         R3, R5, R9 
    /*0000b9b4*/ MOV         R0, #96                     @ 0x60 
    /*0000b9b8*/ MOV         R1, R9 
    /*0000b9bc*/ MUL         R0, R0, R3 
    /*0000b9c0*/ BL          0x000000000000B9C0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000b9c4*/ LDR         R1, [R4, #3300]             @ 0xce4 
    /*0000b9c8*/ MOV         R9, R0 
    /*0000b9cc*/ SUB         R0, R7, R1 
    /*0000b9d0*/ LSL         R0, R0, #5 
    /*0000b9d4*/ BL          0x000000000000B9D4          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    RCReEncDecisionCbr_xb9d8:
    /*0000b9d8*/ LDR         R2, [R4, #3260]             @ 0xcbc 
    /*0000b9dc*/ LDR         R7, [R4, #1996]             @ 0x7cc 
    /*0000b9e0*/ B           RCReEncDecisionCbr_xba2c
    RCReEncDecisionCbr_xb9e4:
    /*0000b9e4*/ SUB         R5, R5, R9 
    /*0000b9e8*/ MOV         R0, #96                     @ 0x60 
    /*0000b9ec*/ MOV         R1, R9 
    /*0000b9f0*/ ADD         SL, IP, IP, LSL #1 
    /*0000b9f4*/ MUL         R0, R0, R5 
    /*0000b9f8*/ BL          0x000000000000B9F8          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000b9fc*/ LDR         R1, [R4, #3300]             @ 0xce4 
    /*0000ba00*/ MOV         R9, R0 
    /*0000ba04*/ SUB         R0, R7, R1 
    /*0000ba08*/ LSL         R0, R0, #5 
    /*0000ba0c*/ BL          0x000000000000BA0C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    RCReEncDecisionCbr_xba10:
    /*0000ba10*/ CMP         SL, #256                    @ 0x100 
    /*0000ba14*/ LDR         R7, [R4, #1996]             @ 0x7cc 
    /*0000ba18*/ MVN         R3, #191                    @ 0xbf 
    /*0000ba1c*/ MOVGE       SL, #256                    @ 0x100 
    /*0000ba20*/ CMP         SL, R3 
    /*0000ba24*/ LSL         R2, R7, #6 
    /*0000ba28*/ MOVLT       SL, R3 
    RCReEncDecisionCbr_xba2c:
    /*0000ba2c*/ CMP         R6, #256                    @ 0x100 
    /*0000ba30*/ MVN         R3, #127                    @ 0x7f 
    /*0000ba34*/ MVN         R1, #31 
    /*0000ba38*/ MOVGE       R6, #256                    @ 0x100 
    /*0000ba3c*/ CMP         R6, R3 
    /*0000ba40*/ ADDGE       R6, SL, R6 
    /*0000ba44*/ ADDLT       R6, SL, R3 
    /*0000ba48*/ CMP         R9, #32 
    /*0000ba4c*/ MOVLT       R3, R9 
    /*0000ba50*/ MOVGE       R3, #32 
    /*0000ba54*/ CMP         R3, R1 
    /*0000ba58*/ ADDGE       R3, R6, R3 
    /*0000ba5c*/ ADDLT       R3, R6, R1 
    /*0000ba60*/ CMP         R0, #32 
    /*0000ba64*/ MOVGE       R0, #32 
    /*0000ba68*/ CMP         R0, R1 
    /*0000ba6c*/ ADDGE       R3, R3, R0 
    /*0000ba70*/ ADDLT       R3, R3, R1 
    /*0000ba74*/ ADD         R3, R3, R2 
    /*0000ba78*/ CMP         R8, R3 
    /*0000ba7c*/ BGT         RCReEncDecisionCbr_xba90
    /*0000ba80*/ LDR         R2, [SP, #20] 
    /*0000ba84*/ LSL         R8, R2, #6 
    /*0000ba88*/ CMP         R8, R3 
    /*0000ba8c*/ MOVGE       R8, R3 
    RCReEncDecisionCbr_xba90:
    /*0000ba90*/ ASR         R3, R8, #6 
    /*0000ba94*/ CMP         R3, R7 
    /*0000ba98*/ BLS         RCReEncDecisionCbr_xb918
    /*0000ba9c*/ LDR         R2, [SP, #12] 
    /*0000baa0*/ MOV         R0, #1 
    /*0000baa4*/ STR         R3, [R4, #3264]             @ 0xcc0 
    /*0000baa8*/ CMP         R2, #0 
    /*0000baac*/ LDR         R2, [R4, #3268]             @ 0xcc4 
    /*0000bab0*/ STRNE       R3, [R4, #3272]             @ 0xcc8 
    /*0000bab4*/ ADD         R2, R2, #1 
    /*0000bab8*/ STREQ       R8, [R4, #3260]             @ 0xcbc 
    /*0000babc*/ STR         R2, [R4, #3268]             @ 0xcc4 
    /*0000bac0*/ ADD         SP, SP, #84                 @ 0x54 
    /*0000bac4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RCReEncDecisionCbr_xbac8:
    /*0000bac8*/ SUB         R0, R2, R6 
    /*0000bacc*/ ADD         R1, R6, #8 
    /*0000bad0*/ LSL         R0, R0, #2 
    /*0000bad4*/ ASR         R1, R1, #3 
    /*0000bad8*/ BL          0x000000000000BAD8          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000badc*/ RSB         R6, R0, #0 
    /*0000bae0*/ B           RCReEncDecisionCbr_xb838
    RCReEncDecisionCbr_xbae4:
    /*0000bae4*/ MOVW        R3, #1079                   @ 0x437 
    /*0000bae8*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34e4] 
    /*0000baec*/ STR         R3, [SP] 
    /*0000baf0*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34e4] 
    /*0000baf4*/ LDR         R3, [PC, #24]               @ 0x000000000000bb14 
    /*0000baf8*/ MOV         R1, #19 
    /*0000bafc*/ MOV         R0, #4 
    /*0000bb00*/ BL          0x000000000000BB00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bb04*/ LDR         R8, [R4, #3260]             @ 0xcbc 
    /*0000bb08*/ LDR         R7, [R4, #1996]             @ 0x7cc 
    /*0000bb0c*/ B           RCReEncDecisionCbr_xba90
    /*0000bb10*/ ANDEQ       R0, R0, R0, LSL #15 
    /*0000bb14*/ MULEQ       R0, R4, R7 
FUNC_END RCReEncDecisionCbr


FUNC_BEGIN ReCalcBySceneChange
    /*0000bb18*/ MOV         R3, R0 
    /*0000bb1c*/ LDR         R0, [R0, #1508]             @ 0x5e4 
    /*0000bb20*/ CMP         R0, #1 
    /*0000bb24*/ BEQ         ReCalcBySceneChange_xbb30
    /*0000bb28*/ MOV         R0, #0 
    /*0000bb2c*/ BX          LR 
    ReCalcBySceneChange_xbb30:
    /*0000bb30*/ PUSH        {R4, R5, LR} 
    /*0000bb34*/ MOV         R4, #100                    @ 0x64 
    /*0000bb38*/ LDR         LR, [R3, #2504]             @ 0x9c8 
    /*0000bb3c*/ LDR         IP, [R3, #2508]             @ 0x9cc 
    /*0000bb40*/ LDR         R0, [R3, #1928]             @ 0x788 
    /*0000bb44*/ LSR         LR, LR, #2 
    /*0000bb48*/ LDR         R5, [R3, #1924]             @ 0x784 
    /*0000bb4c*/ LSR         IP, IP, #2 
    /*0000bb50*/ LSL         R0, R0, #4 
    /*0000bb54*/ MUL         IP, IP, LR 
    /*0000bb58*/ ADD         R0, R0, R5, LSL #6 
    /*0000bb5c*/ LDR         LR, [R3, #1936]             @ 0x790 
    /*0000bb60*/ LDR         R5, [R3, #1932]             @ 0x78c 
    /*0000bb64*/ ADD         R0, R0, LR 
    /*0000bb68*/ MOV         LR, #90                     @ 0x5a 
    /*0000bb6c*/ ADD         R0, R0, R5, LSL #2 
    /*0000bb70*/ LDR         R5, [R3, #3280]             @ 0xcd0 
    /*0000bb74*/ MUL         IP, LR, IP 
    /*0000bb78*/ MOV         LR, #6 
    /*0000bb7c*/ MUL         R0, R4, R0 
    /*0000bb80*/ LDR         R4, [R3, #1640]             @ 0x668 
    /*0000bb84*/ MUL         LR, LR, R5 
    /*0000bb88*/ CMP         R0, IP 
    /*0000bb8c*/ BLS         ReCalcBySceneChange_xbc48
    /*0000bb90*/ LDR         R0, [R3, #204]              @ 0xcc 
    /*0000bb94*/ CMP         R0, #0 
    /*0000bb98*/ POPEQ       {R4, R5, PC} 
    /*0000bb9c*/ LDR         R0, [R3, #208]              @ 0xd0 
    /*0000bba0*/ CMP         R0, #0 
    /*0000bba4*/ BEQ         ReCalcBySceneChange_xbbec
    /*0000bba8*/ LDR         R0, [R3] 
    /*0000bbac*/ CMP         R0, #4 
    /*0000bbb0*/ BEQ         ReCalcBySceneChange_xbbec
    /*0000bbb4*/ LDR         R0, [R3, #3272]             @ 0xcc8 
    /*0000bbb8*/ MOV         IP, #0 
    /*0000bbbc*/ STR         IP, [R3, #1500]             @ 0x5dc 
    /*0000bbc0*/ CMP         R0, R1 
    /*0000bbc4*/ BLT         ReCalcBySceneChange_xbc50
    /*0000bbc8*/ LDR         IP, [R3, #232]              @ 0xe8 
    /*0000bbcc*/ CMP         R0, R2 
    /*0000bbd0*/ MOVLT       R1, R0 
    /*0000bbd4*/ MOVGE       R1, R2 
    /*0000bbd8*/ STR         IP, [R3, #3268]             @ 0xcc4 
    /*0000bbdc*/ STR         R1, [R3, #3264]             @ 0xcc0 
    ReCalcBySceneChange_xbbe0:
    /*0000bbe0*/ STR         R1, [R3, #3272]             @ 0xcc8 
    /*0000bbe4*/ MOV         R0, #1 
    /*0000bbe8*/ POP         {R4, R5, PC} 
    ReCalcBySceneChange_xbbec:
    /*0000bbec*/ LDR         R0, [R3, #1996]             @ 0x7cc 
    /*0000bbf0*/ CMP         R4, LR 
    /*0000bbf4*/ LDR         IP, [R3, #3272]             @ 0xcc8 
    /*0000bbf8*/ ADDHI       R0, R0, #4 
    /*0000bbfc*/ SUBLS       R0, R0, #4 
    /*0000bc00*/ ADD         R0, R0, IP 
    /*0000bc04*/ ASR         R0, R0, #1 
    /*0000bc08*/ CMP         R0, R1 
    /*0000bc0c*/ BGE         ReCalcBySceneChange_xbc2c
    /*0000bc10*/ LDR         R2, [R3, #232]              @ 0xe8 
    /*0000bc14*/ STR         R1, [R3, #3264]             @ 0xcc0 
    /*0000bc18*/ STR         R2, [R3, #3268]             @ 0xcc4 
    ReCalcBySceneChange_xbc1c:
    /*0000bc1c*/ LSL         R1, R1, #6 
    /*0000bc20*/ MOV         R0, #1 
    /*0000bc24*/ STR         R1, [R3, #3260]             @ 0xcbc 
    /*0000bc28*/ POP         {R4, R5, PC} 
    ReCalcBySceneChange_xbc2c:
    /*0000bc2c*/ LDR         IP, [R3, #232]              @ 0xe8 
    /*0000bc30*/ CMP         R0, R2 
    /*0000bc34*/ MOVLT       R1, R0 
    /*0000bc38*/ MOVGE       R1, R2 
    /*0000bc3c*/ STR         IP, [R3, #3268]             @ 0xcc4 
    /*0000bc40*/ STR         R1, [R3, #3264]             @ 0xcc0 
    /*0000bc44*/ B           ReCalcBySceneChange_xbc1c
    ReCalcBySceneChange_xbc48:
    /*0000bc48*/ MOV         R0, #0 
    /*0000bc4c*/ POP         {R4, R5, PC} 
    ReCalcBySceneChange_xbc50:
    /*0000bc50*/ LDR         R2, [R3, #232]              @ 0xe8 
    /*0000bc54*/ STR         R1, [R3, #3264]             @ 0xcc0 
    /*0000bc58*/ STR         R2, [R3, #3268]             @ 0xcc4 
    /*0000bc5c*/ B           ReCalcBySceneChange_xbbe0
FUNC_END ReCalcBySceneChange


FUNC_BEGIN RCReEncDecisionVbr
    /*0000bc60*/ LDR         R2, [R1, #3268]             @ 0xcc4 
    /*0000bc64*/ LDR         R3, [R1, #232]              @ 0xe8 
    /*0000bc68*/ CMP         R2, R3 
    /*0000bc6c*/ BGE         RCReEncDecisionVbr_xbf58
    /*0000bc70*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000bc74*/ ADD         R9, R1, #368                @ 0x170 
    /*0000bc78*/ LDR         R6, [R1, #1640]             @ 0x668 
    /*0000bc7c*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0000bc80*/ MOV         R4, R1 
    /*0000bc84*/ LDR         R7, [R1, #56]               @ 0x38 
    /*0000bc88*/ ADD         R3, SP, #28 
    /*0000bc8c*/ ADD         R2, SP, #24 
    /*0000bc90*/ MOV         R0, R9 
    /*0000bc94*/ MOV         R1, R6 
    /*0000bc98*/ LDR         FP, [R4, #36]               @ 0x24 
    /*0000bc9c*/ LDR         R5, [R4, #1508]             @ 0x5e4 
    /*0000bca0*/ LDR         R8, [R4, #1496]             @ 0x5d8 
    /*0000bca4*/ BL          0x000000000000A0A4 
    /*0000bca8*/ CMP         R0, #0 
    /*0000bcac*/ BNE         RCReEncDecisionVbr_xbfcc
    /*0000bcb0*/ MOV         R1, FP 
    /*0000bcb4*/ LDR         R0, [SP, #24] 
    /*0000bcb8*/ BL          0x000000000000BCB8          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000bcbc*/ MOV         R1, FP 
    /*0000bcc0*/ MOV         SL, R0 
    /*0000bcc4*/ LDR         R0, [SP, #28] 
    /*0000bcc8*/ STR         SL, [SP, #24] 
    /*0000bccc*/ BL          0x000000000000BCCC          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000bcd0*/ CMP         R5, #0 
    /*0000bcd4*/ CMPNE       R5, #5 
    /*0000bcd8*/ MOVNE       FP, #1 
    /*0000bcdc*/ MOVEQ       FP, #0 
    /*0000bce0*/ STR         R0, [SP, #28] 
    /*0000bce4*/ BEQ         RCReEncDecisionVbr_xbcfc
    /*0000bce8*/ LDR         FP, [R4, #3280]             @ 0xcd0 
    /*0000bcec*/ ADD         FP, FP, FP, LSL #1 
    /*0000bcf0*/ CMP         R6, FP 
    /*0000bcf4*/ MOVLS       FP, #0 
    /*0000bcf8*/ MOVHI       FP, #1 
    RCReEncDecisionVbr_xbcfc:
    /*0000bcfc*/ CMP         R5, #5 
    /*0000bd00*/ CMPNE       R5, #0 
    /*0000bd04*/ MOVEQ       R3, #1 
    /*0000bd08*/ MOVNE       R3, #0 
    /*0000bd0c*/ STR         R3, [SP, #12] 
    /*0000bd10*/ BNE         RCReEncDecisionVbr_xbd28
    /*0000bd14*/ LDR         R3, [R4, #3280]             @ 0xcd0 
    /*0000bd18*/ ADD         R3, R3, R3, LSL #1 
    /*0000bd1c*/ ADD         R3, R3, R3, LSR #31 
    /*0000bd20*/ CMP         R6, R3, ASR #1 
    /*0000bd24*/ MOVHI       FP, #1 
    RCReEncDecisionVbr_xbd28:
    /*0000bd28*/ MOVW        R2, #26215                  @ 0x6667 
    /*0000bd2c*/ MOVT        R2, #26214                  @ 0x6666 
    /*0000bd30*/ ASR         R1, R7, #31 
    /*0000bd34*/ SUB         SL, R0, SL 
    /*0000bd38*/ SMULL       R2, R3, R7, R2 
    /*0000bd3c*/ SUB         R7, R7, R7, ASR #3 
    /*0000bd40*/ CMP         R7, R0 
    /*0000bd44*/ LDR         R6, [R4, #2000]             @ 0x7d0 
    /*0000bd48*/ LDR         R5, [R4, #192]              @ 0xc0 
    /*0000bd4c*/ MOV         R0, R4 
    /*0000bd50*/ MOVGE       R7, #0 
    /*0000bd54*/ MOVLT       R7, #1 
    /*0000bd58*/ RSB         R1, R1, R3, ASR #3 
    /*0000bd5c*/ LDR         R3, [R4, #188]              @ 0xbc 
    /*0000bd60*/ CMP         R1, SL 
    /*0000bd64*/ MOVGE       SL, #0 
    /*0000bd68*/ MOVLT       SL, #1 
    /*0000bd6c*/ CMP         R6, R5 
    /*0000bd70*/ SUBHI       R6, R6, R5 
    /*0000bd74*/ LDR         R5, [R4, #2004]             @ 0x7d4 
    /*0000bd78*/ MOVLS       R6, #0 
    /*0000bd7c*/ ADD         R5, R5, R3 
    /*0000bd80*/ CMP         R6, R5 
    /*0000bd84*/ MOV         R1, R5 
    /*0000bd88*/ MOVCC       R6, R5 
    /*0000bd8c*/ MOV         R2, R6 
    /*0000bd90*/ BL          0x000000000000BD90          @ ReCalcBySceneChange [R_ARM_CALL: .text+0xbb18] 
    /*0000bd94*/ CMP         R0, #1 
    /*0000bd98*/ BEQ         RCReEncDecisionVbr_xbf50
    /*0000bd9c*/ CMP         R8, #3 
    /*0000bda0*/ BEQ         RCReEncDecisionVbr_xbf60
    /*0000bda4*/ AND         R7, R7, SL 
    /*0000bda8*/ TST         FP, R7 
    /*0000bdac*/ LDRNE       R8, [R4, #1640]             @ 0x668 
    /*0000bdb0*/ BEQ         RCReEncDecisionVbr_xbfec
    RCReEncDecisionVbr_xbdb4:
    /*0000bdb4*/ LDR         IP, [R4, #1508]             @ 0x5e4 
    /*0000bdb8*/ MOV         R0, R9 
    /*0000bdbc*/ ADD         R3, SP, #32 
    /*0000bdc0*/ ADD         R2, SP, #36                 @ 0x24 
    /*0000bdc4*/ MOV         R1, R8 
    /*0000bdc8*/ LDR         SL, [R4, #56]               @ 0x38 
    /*0000bdcc*/ LDR         R9, [R4, #3492]             @ 0xda4 
    /*0000bdd0*/ LSL         R5, R5, #6 
    /*0000bdd4*/ LDR         FP, [R4, #36]               @ 0x24 
    /*0000bdd8*/ STR         IP, [SP, #16] 
    /*0000bddc*/ BL          0x000000000000A0A4 
    /*0000bde0*/ CMP         R0, #0 
    /*0000bde4*/ BNE         RCReEncDecisionVbr_xc010
    /*0000bde8*/ MOV         R1, FP 
    /*0000bdec*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000bdf0*/ BL          0x000000000000BDF0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000bdf4*/ MOV         R1, FP 
    /*0000bdf8*/ MOV         R7, R0 
    /*0000bdfc*/ LDR         R0, [SP, #32] 
    /*0000be00*/ BL          0x000000000000BE00          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000be04*/ MOV         FP, R0 
    /*0000be08*/ LDR         R0, [R4, #3280]             @ 0xcd0 
    /*0000be0c*/ CMP         R0, R8 
    /*0000be10*/ BGT         RCReEncDecisionVbr_xbff8
    /*0000be14*/ ADD         R1, R0, #32 
    /*0000be18*/ SUB         R0, R8, R0 
    /*0000be1c*/ ASR         R1, R1, #5 
    /*0000be20*/ BL          0x000000000000BE20          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000be24*/ MOV         R8, R0 
    RCReEncDecisionVbr_xbe28:
    /*0000be28*/ ASR         R3, SL, #5 
    /*0000be2c*/ MOV         R0, FP 
    /*0000be30*/ STR         R3, [SP, #20] 
    /*0000be34*/ MOVW        SL, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000be38*/ MOV         R1, R3 
    /*0000be3c*/ MOVT        SL, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000be40*/ BL          0x000000000000BE40          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000be44*/ LDR         R3, [SP, #20] 
    /*0000be48*/ MOV         R1, R3 
    /*0000be4c*/ USAT        R3, #6, R0 
    /*0000be50*/ MOV         R0, R7 
    /*0000be54*/ ADD         R3, SL, R3, LSL #2 
    /*0000be58*/ LDR         R3, [R3, #228]              @ 0xe4 
    /*0000be5c*/ STR         R3, [SP, #20] 
    /*0000be60*/ BL          0x000000000000BE60          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000be64*/ CMP         R7, FP 
    /*0000be68*/ CMPLT       R9, FP 
    /*0000be6c*/ MOVLT       R7, #1 
    /*0000be70*/ MOVGE       R7, #0 
    /*0000be74*/ USAT        R0, #6, R0 
    /*0000be78*/ ADD         SL, SL, R0, LSL #2 
    /*0000be7c*/ LDR         R3, [SL, #228]              @ 0xe4 
    /*0000be80*/ BGE         RCReEncDecisionVbr_xbea8
    /*0000be84*/ LDR         R2, [SP, #20] 
    /*0000be88*/ MOV         R7, #6 
    /*0000be8c*/ SUB         R3, R2, R3 
    /*0000be90*/ MVN         R2, #191                    @ 0xbf 
    /*0000be94*/ MUL         R7, R7, R3 
    /*0000be98*/ CMP         R7, #256                    @ 0x100 
    /*0000be9c*/ MOVGE       R7, #256                    @ 0x100 
    /*0000bea0*/ CMP         R7, R2 
    /*0000bea4*/ MOVLT       R7, R2 
    RCReEncDecisionVbr_xbea8:
    /*0000bea8*/ SUB         FP, FP, R9 
    /*0000beac*/ MOV         R0, #96                     @ 0x60 
    /*0000beb0*/ MOV         R1, R9 
    /*0000beb4*/ MUL         R0, R0, FP 
    /*0000beb8*/ BL          0x000000000000BEB8          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000bebc*/ LDR         R3, [SP, #16] 
    /*0000bec0*/ MVN         R1, #127                    @ 0x7f 
    /*0000bec4*/ CMP         R3, #5 
    /*0000bec8*/ CMPNE       R3, #0 
    /*0000becc*/ MVN         R3, #31 
    /*0000bed0*/ LDREQ       R9, [R4, #1996]             @ 0x7cc 
    /*0000bed4*/ LDRNE       R2, [R4, #3260]             @ 0xcbc 
    /*0000bed8*/ LDRNE       R9, [R4, #1996]             @ 0x7cc 
    /*0000bedc*/ LSLEQ       R2, R9, #6 
    /*0000bee0*/ CMP         R8, #256                    @ 0x100 
    /*0000bee4*/ MOVGE       R8, #256                    @ 0x100 
    /*0000bee8*/ CMP         R8, R1 
    /*0000beec*/ ADDGE       R7, R7, R8 
    /*0000bef0*/ ADDLT       R7, R7, R1 
    /*0000bef4*/ CMP         R0, #32 
    /*0000bef8*/ MOVGE       R0, #32 
    /*0000befc*/ CMP         R0, R3 
    /*0000bf00*/ ADDGE       R7, R7, R0 
    /*0000bf04*/ ADDLT       R7, R7, R3 
    /*0000bf08*/ ADD         R7, R7, R2 
    /*0000bf0c*/ CMP         R5, R7 
    /*0000bf10*/ BGT         RCReEncDecisionVbr_xbf20
    /*0000bf14*/ LSL         R5, R6, #6 
    /*0000bf18*/ CMP         R5, R7 
    /*0000bf1c*/ MOVGE       R5, R7 
    RCReEncDecisionVbr_xbf20:
    /*0000bf20*/ ASR         R3, R5, #6 
    /*0000bf24*/ CMP         R3, R9 
    /*0000bf28*/ BLS         RCReEncDecisionVbr_xbfec
    /*0000bf2c*/ LDR         R2, [SP, #12] 
    /*0000bf30*/ MOV         R0, #1 
    /*0000bf34*/ STR         R3, [R4, #3264]             @ 0xcc0 
    /*0000bf38*/ CMP         R2, #0 
    /*0000bf3c*/ LDR         R2, [R4, #3268]             @ 0xcc4 
    /*0000bf40*/ STRNE       R3, [R4, #3272]             @ 0xcc8 
    /*0000bf44*/ ADD         R2, R2, #1 
    /*0000bf48*/ STREQ       R5, [R4, #3260]             @ 0xcbc 
    /*0000bf4c*/ STR         R2, [R4, #3268]             @ 0xcc4 
    RCReEncDecisionVbr_xbf50:
    /*0000bf50*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0000bf54*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RCReEncDecisionVbr_xbf58:
    /*0000bf58*/ MOV         R0, #0 
    /*0000bf5c*/ BX          LR 
    RCReEncDecisionVbr_xbf60:
    /*0000bf60*/ LDR         R8, [R4, #1640]             @ 0x668 
    /*0000bf64*/ LDR         R0, [R4, #3284]             @ 0xcd4 
    /*0000bf68*/ CMP         R0, R8 
    /*0000bf6c*/ BGT         RCReEncDecisionVbr_xbdb4
    /*0000bf70*/ LDR         R3, [R4, #3488]             @ 0xda0 
    /*0000bf74*/ CMP         R3, #1 
    /*0000bf78*/ BNE         RCReEncDecisionVbr_xbdb4
    /*0000bf7c*/ SUB         R0, R8, R0 
    /*0000bf80*/ LDR         R1, [R4, #3280]             @ 0xcd0 
    /*0000bf84*/ LDR         R9, [R4, #1996]             @ 0x7cc 
    /*0000bf88*/ LSL         R5, R5, #6 
    /*0000bf8c*/ LSL         R0, R0, #2 
    /*0000bf90*/ BL          0x000000000000BF90          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000bf94*/ MOV         R3, #160                    @ 0xa0 
    /*0000bf98*/ LSL         R2, R9, #6 
    /*0000bf9c*/ MUL         R0, R3, R0 
    /*0000bfa0*/ CMP         R0, #640                    @ 0x280 
    /*0000bfa4*/ MOVGE       R0, #640                    @ 0x280 
    /*0000bfa8*/ CMP         R0, #128                    @ 0x80 
    /*0000bfac*/ ADDGE       R0, R2, R0 
    /*0000bfb0*/ ADDLT       R0, R2, #128                @ 0x80 
    /*0000bfb4*/ CMP         R5, R0 
    /*0000bfb8*/ BGT         RCReEncDecisionVbr_xbf20
    /*0000bfbc*/ LSL         R5, R6, #6 
    /*0000bfc0*/ CMP         R5, R0 
    /*0000bfc4*/ MOVGE       R5, R0 
    /*0000bfc8*/ B           RCReEncDecisionVbr_xbf20
    RCReEncDecisionVbr_xbfcc:
    /*0000bfcc*/ MOVW        R3, #2433                   @ 0x981 
    /*0000bfd0*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34e4] 
    /*0000bfd4*/ STR         R3, [SP] 
    /*0000bfd8*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34e4] 
    /*0000bfdc*/ LDR         R3, [PC, #88]               @ 0x000000000000c03c 
    /*0000bfe0*/ MOV         R1, #19 
    /*0000bfe4*/ MOV         R0, #4 
    /*0000bfe8*/ BL          0x000000000000BFE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    RCReEncDecisionVbr_xbfec:
    /*0000bfec*/ MOV         R0, #0 
    /*0000bff0*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0000bff4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RCReEncDecisionVbr_xbff8:
    /*0000bff8*/ ADD         R1, R8, #32 
    /*0000bffc*/ SUB         R0, R0, R8 
    /*0000c000*/ ASR         R1, R1, #5 
    /*0000c004*/ BL          0x000000000000C004          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000c008*/ RSB         R8, R0, #0 
    /*0000c00c*/ B           RCReEncDecisionVbr_xbe28
    RCReEncDecisionVbr_xc010:
    /*0000c010*/ MOVW        R3, #2255                   @ 0x8cf 
    /*0000c014*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34e4] 
    /*0000c018*/ STR         R3, [SP] 
    /*0000c01c*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34e4] 
    /*0000c020*/ LDR         R3, [PC, #24]               @ 0x000000000000c040 
    /*0000c024*/ MOV         R1, #19 
    /*0000c028*/ MOV         R0, #4 
    /*0000c02c*/ BL          0x000000000000C02C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c030*/ LDR         R5, [R4, #3260]             @ 0xcbc 
    /*0000c034*/ LDR         R9, [R4, #1996]             @ 0x7cc 
    /*0000c038*/ B           RCReEncDecisionVbr_xbf20
    /*0000c03c*/ ANDEQ       R0, R0, R4, LSR #15 
    /*0000c040*/ @           <UNDEFINED> instruction: 0x000007b8 
FUNC_END RCReEncDecisionVbr


FUNC_BEGIN RCReEncDecisionMjpeg
    /*0000c044*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000c048*/ MOV         R0, R1 
    /*0000c04c*/ SUB         SP, SP, #20 
    /*0000c050*/ MOV         R4, R1 
    /*0000c054*/ LDR         R7, [R1, #1640]             @ 0x668 
    /*0000c058*/ LDR         R9, [R1, #36]               @ 0x24 
    /*0000c05c*/ BL          0x000000000000C05C          @ RC_DRV_ReEncodeSupport [R_ARM_CALL: .text+0x115d4] 
    /*0000c060*/ CMP         R0, #0 
    /*0000c064*/ BEQ         RCReEncDecisionMjpeg_xc200
    /*0000c068*/ LDR         R3, [R4, #52]               @ 0x34 
    /*0000c06c*/ CMP         R3, #1 
    /*0000c070*/ LDR         R3, [R4, #3268]             @ 0xcc4 
    /*0000c074*/ LDRNE       R5, [R4, #56]               @ 0x38 
    /*0000c078*/ LDREQ       R2, [R4, #248]              @ 0xf8 
    /*0000c07c*/ LDRNE       R2, [R4, #232]              @ 0xe8 
    /*0000c080*/ LDREQ       R5, [R4, #56]               @ 0x38 
    /*0000c084*/ SUBNE       R5, R5, R5, ASR #3 
    /*0000c088*/ CMP         R2, R3 
    /*0000c08c*/ BLE         RCReEncDecisionMjpeg_xc200
    /*0000c090*/ ADD         R3, SP, #12 
    /*0000c094*/ ADD         R2, SP, #8 
    /*0000c098*/ MOV         R1, R7 
    /*0000c09c*/ ADD         R0, R4, #368                @ 0x170 
    /*0000c0a0*/ LDR         R8, [R4, #1496]             @ 0x5d8 
    /*0000c0a4*/ BL          0x000000000000A0A4 
    /*0000c0a8*/ CMP         R0, #0 
    /*0000c0ac*/ BNE         RCReEncDecisionMjpeg_xc1e0
    /*0000c0b0*/ MOVW        R2, #26215                  @ 0x6667 
    /*0000c0b4*/ MOVT        R2, #26214                  @ 0x6666 
    /*0000c0b8*/ MOV         R1, R9 
    /*0000c0bc*/ ASR         R6, R5, #31 
    /*0000c0c0*/ SMULL       R2, R3, R5, R2 
    /*0000c0c4*/ LDR         R0, [SP, #8] 
    /*0000c0c8*/ RSB         R6, R6, R3, ASR #3 
    /*0000c0cc*/ BL          0x000000000000C0CC          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000c0d0*/ MOV         R1, R9 
    /*0000c0d4*/ LSL         FP, R6, #1 
    /*0000c0d8*/ MOV         SL, R0 
    /*0000c0dc*/ LDR         R0, [SP, #12] 
    /*0000c0e0*/ BL          0x000000000000C0E0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000c0e4*/ LDR         R9, [R4, #3280]             @ 0xcd0 
    /*0000c0e8*/ ADD         R3, R5, FP 
    /*0000c0ec*/ SUB         R5, R5, FP 
    /*0000c0f0*/ ADD         R2, R9, R9, LSL #1 
    /*0000c0f4*/ ADD         R2, R2, R2, LSR #31 
    /*0000c0f8*/ CMP         R7, R2, ASR #1 
    /*0000c0fc*/ MOVHI       R2, #1 
    /*0000c100*/ MOVLS       R2, #0 
    /*0000c104*/ CMP         R3, R0 
    /*0000c108*/ SUB         SL, R0, SL 
    /*0000c10c*/ MOVGE       R3, #0 
    /*0000c110*/ MOVLT       R3, #1 
    /*0000c114*/ CMP         R5, R0 
    /*0000c118*/ MOVLE       R5, R3 
    /*0000c11c*/ ORRGT       R5, R3, #1 
    /*0000c120*/ CMP         R6, SL 
    /*0000c124*/ MOVGE       R6, #0 
    /*0000c128*/ MOVLT       R6, #1 
    /*0000c12c*/ CMP         R8, #3 
    /*0000c130*/ BNE         RCReEncDecisionMjpeg_xc20c
    RCReEncDecisionMjpeg_xc134:
    /*0000c134*/ LDR         R3, [R4, #52]               @ 0x34 
    /*0000c138*/ LDR         R6, [R4, #3260]             @ 0xcbc 
    /*0000c13c*/ CMP         R3, #1 
    /*0000c140*/ LDR         R8, [R4, #1640]             @ 0x668 
    /*0000c144*/ LSR         R6, R6, #6 
    /*0000c148*/ LDREQ       R7, [R4, #224]              @ 0xe0 
    /*0000c14c*/ LDREQ       R5, [R4, #228]              @ 0xe4 
    /*0000c150*/ LDRNE       R7, [R4, #248]              @ 0xf8 
    /*0000c154*/ LDRNE       R5, [R4, #240]              @ 0xf0 
    /*0000c158*/ CMP         R6, #49                     @ 0x31 
    /*0000c15c*/ LSLHI       R0, R6, #1 
    /*0000c160*/ RSBHI       R0, R0, #200                @ 0xc8 
    /*0000c164*/ BHI         RCReEncDecisionMjpeg_xc174
    /*0000c168*/ MOV         R1, R6 
    /*0000c16c*/ MOVW        R0, #5000                   @ 0x1388 
    /*0000c170*/ BL          0x000000000000C170          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    RCReEncDecisionMjpeg_xc174:
    /*0000c174*/ MOV         R1, R9 
    /*0000c178*/ MUL         R0, R0, R8 
    /*0000c17c*/ BL          0x000000000000C17C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000c180*/ CMP         R0, #100                    @ 0x64 
    /*0000c184*/ RSBLE       R0, R0, #200                @ 0xc8 
    /*0000c188*/ ASRLE       R0, R0, #1 
    /*0000c18c*/ BLE         RCReEncDecisionMjpeg_xc19c
    /*0000c190*/ MOV         R1, R0 
    /*0000c194*/ MOVW        R0, #5000                   @ 0x1388 
    /*0000c198*/ BL          0x000000000000C198          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    RCReEncDecisionMjpeg_xc19c:
    /*0000c19c*/ CMP         R5, R0 
    /*0000c1a0*/ BGT         RCReEncDecisionMjpeg_xc1b0
    /*0000c1a4*/ CMP         R0, R7 
    /*0000c1a8*/ MOVLT       R5, R0 
    /*0000c1ac*/ MOVGE       R5, R7 
    RCReEncDecisionMjpeg_xc1b0:
    /*0000c1b0*/ LSL         R3, R5, #6 
    /*0000c1b4*/ ASR         R2, R3, #6 
    /*0000c1b8*/ CMP         R2, R6 
    /*0000c1bc*/ BGE         RCReEncDecisionMjpeg_xc200
    /*0000c1c0*/ LDR         R1, [R4, #3268]             @ 0xcc4 
    /*0000c1c4*/ MOV         R0, #1 
    /*0000c1c8*/ STR         R3, [R4, #3260]             @ 0xcbc 
    /*0000c1cc*/ ADD         R3, R1, R0 
    /*0000c1d0*/ STR         R2, [R4, #3264]             @ 0xcc0 
    /*0000c1d4*/ STR         R3, [R4, #3268]             @ 0xcc4 
    /*0000c1d8*/ ADD         SP, SP, #20 
    /*0000c1dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RCReEncDecisionMjpeg_xc1e0:
    /*0000c1e0*/ MOVW        R3, #4785                   @ 0x12b1 
    /*0000c1e4*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34e4] 
    /*0000c1e8*/ STR         R3, [SP] 
    /*0000c1ec*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34e4] 
    /*0000c1f0*/ LDR         R3, [PC, #36]               @ 0x000000000000c21c 
    /*0000c1f4*/ MOV         R1, #19 
    /*0000c1f8*/ MOV         R0, #4 
    /*0000c1fc*/ BL          0x000000000000C1FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    RCReEncDecisionMjpeg_xc200:
    /*0000c200*/ MOV         R0, #0 
    /*0000c204*/ ADD         SP, SP, #20 
    /*0000c208*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RCReEncDecisionMjpeg_xc20c:
    /*0000c20c*/ AND         R6, R6, R2 
    /*0000c210*/ TST         R5, R6 
    /*0000c214*/ BNE         RCReEncDecisionMjpeg_xc134
    /*0000c218*/ B           RCReEncDecisionMjpeg_xc200
    /*0000c21c*/ ANDEQ       R0, R0, IP, ASR #15 
FUNC_END RCReEncDecisionMjpeg


FUNC_BEGIN RC_NewModeInit
    /*0000c220*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000c224*/ MOVW        R0, #265                    @ 0x109 
    /*0000c228*/ LDR         R3, [R1, #48]               @ 0x30 
    /*0000c22c*/ MOV         R4, R1 
    /*0000c230*/ CMP         R3, R0 
    /*0000c234*/ CMPNE       R3, #96                     @ 0x60 
    /*0000c238*/ MOVEQ       R5, #1 
    /*0000c23c*/ MOVNE       R5, #0 
    /*0000c240*/ BNE         RC_NewModeInit_xc41c
    /*0000c244*/ LDR         R3, [R1, #52]               @ 0x34 
    /*0000c248*/ CMP         R3, #1 
    /*0000c24c*/ BEQ         RC_NewModeInit_xc454
    /*0000c250*/ SUB         R0, R3, #2 
    /*0000c254*/ CMP         R3, #0 
    /*0000c258*/ CMPNE       R0, #2 
    /*0000c25c*/ MOVLS       R0, #1 
    /*0000c260*/ MOVHI       R0, #0 
    /*0000c264*/ POPHI       {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*0000c268*/ CMP         R3, #4 
    /*0000c26c*/ LDR         R2, [R1, #44]               @ 0x2c 
    /*0000c270*/ ADD         R7, R1, #3232               @ 0xca0 
    /*0000c274*/ LDR         R6, [R4, #224]              @ 0xe0 
    /*0000c278*/ LDREQ       R0, [R1, #68]               @ 0x44 
    /*0000c27c*/ ADD         R7, R7, #8 
    /*0000c280*/ LDRNE       R0, [R1, #56]               @ 0x38 
    /*0000c284*/ LSR         R3, R2, #16 
    /*0000c288*/ LDR         R1, [R1] 
    /*0000c28c*/ UXTH        R2, R2 
    /*0000c290*/ SUB         R1, R1, #2 
    /*0000c294*/ CMP         R1, #1 
    /*0000c298*/ ASR         R1, R0, #10 
    /*0000c29c*/ MOVW        R0, #34079                  @ 0x851f 
    /*0000c2a0*/ MOVT        R0, #20971                  @ 0x51eb 
    /*0000c2a4*/ MUL         R6, R6, R1 
    /*0000c2a8*/ LDRLS       R5, [R4, #24] 
    /*0000c2ac*/ LDRHI       R5, [R4, #32] 
    /*0000c2b0*/ CMP         R3, #0 
    /*0000c2b4*/ SMULL       R0, R1, R6, R0 
    /*0000c2b8*/ ASR         R6, R6, #31 
    /*0000c2bc*/ RSB         R6, R6, R1, ASR #5 
    /*0000c2c0*/ LSL         R6, R6, #10 
    /*0000c2c4*/ SMULL       R0, R1, R6, R5 
    /*0000c2c8*/ UMULLNE     R8, R9, R3, R0 
    /*0000c2cc*/ MLANE       R9, R3, R1, R9 
    /*0000c2d0*/ MOVNE       R0, R8 
    /*0000c2d4*/ ADD         R8, R4, #3248               @ 0xcb0 
    /*0000c2d8*/ MOVNE       R1, R9 
    /*0000c2dc*/ BL          0x000000000000C2DC          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000c2e0*/ STR         R6, [R4, #3492]             @ 0xda4 
    /*0000c2e4*/ MOV         R2, #2 
    /*0000c2e8*/ MOV         IP, #320                    @ 0x140 
    /*0000c2ec*/ STRD        R0, [R8, #-8] 
    /*0000c2f0*/ MOV         R0, #16 
    /*0000c2f4*/ LDR         R3, [R4, #352]              @ 0x160 
    /*0000c2f8*/ STR         R2, [R4, #3252]             @ 0xcb4 
    /*0000c2fc*/ ADD         R1, R3, #7 
    /*0000c300*/ CMP         R3, #0 
    /*0000c304*/ LDR         R2, [R4, #408]              @ 0x198 
    /*0000c308*/ MOVLT       R3, R1 
    /*0000c30c*/ CMP         R5, #0 
    /*0000c310*/ ASR         R3, R3, #3 
    /*0000c314*/ MOV         R1, #32 
    /*0000c318*/ STR         R3, [R4, #3300]             @ 0xce4 
    /*0000c31c*/ MOV         R3, #160                    @ 0xa0 
    /*0000c320*/ STR         R1, [R4, #3468]             @ 0xd8c 
    /*0000c324*/ MOV         R1, #9 
    /*0000c328*/ STR         R3, [R4, #3472]             @ 0xd90 
    /*0000c32c*/ MOV         R3, #0 
    /*0000c330*/ STR         R0, [R4, #3476]             @ 0xd94 
    /*0000c334*/ MOV         R0, #256                    @ 0x100 
    /*0000c338*/ STR         R5, [R4, #3248]             @ 0xcb0 
    /*0000c33c*/ STR         IP, [R4, #3464]             @ 0xd88 
    /*0000c340*/ STR         R2, [R4, #3864]             @ 0xf18 
    /*0000c344*/ STR         R1, [R4, #3480]             @ 0xd98 
    /*0000c348*/ STR         R1, [R4, #3484]             @ 0xd9c 
    /*0000c34c*/ STR         R3, [R4, #3268]             @ 0xcc4 
    /*0000c350*/ STR         R3, [R4, #3488]             @ 0xda0 
    /*0000c354*/ STR         R3, [R4, #3496]             @ 0xda8 
    /*0000c358*/ STR         R3, [R4, #3768]             @ 0xeb8 
    /*0000c35c*/ STR         R0, [R4, #3868]             @ 0xf1c 
    /*0000c360*/ BLE         RC_NewModeInit_xc380
    /*0000c364*/ MOV         R1, R3 
    /*0000c368*/ B           RC_NewModeInit_xc370
    RC_NewModeInit_xc36c:
    /*0000c36c*/ LDR         R2, [R4, #3864]             @ 0xf18 
    RC_NewModeInit_xc370:
    /*0000c370*/ STR         R1, [R2, R3, LSL #2] 
    /*0000c374*/ ADD         R3, R3, #1 
    /*0000c378*/ CMP         R5, R3 
    /*0000c37c*/ BNE         RC_NewModeInit_xc36c
    RC_NewModeInit_xc380:
    /*0000c380*/ MOV         R1, R7 
    /*0000c384*/ MOV         R0, R4 
    /*0000c388*/ BL          0x000000000000A5BC 
    /*0000c38c*/ LDR         R2, [R4, #3344]             @ 0xd10 
    /*0000c390*/ MOV         R0, #10 
    /*0000c394*/ LDR         LR, [R4, #3248]             @ 0xcb0 
    /*0000c398*/ LDR         R1, [R4, #3304]             @ 0xce8 
    /*0000c39c*/ MVN         R3, #0 
    /*0000c3a0*/ MUL         R0, R0, R2 
    /*0000c3a4*/ LDRD        R6, [R8, #-8] 
    /*0000c3a8*/ ADD         R2, R4, #3600               @ 0xe10 
    /*0000c3ac*/ STR         R3, [R4, #3600]             @ 0xe10 
    /*0000c3b0*/ STR         R3, [R4, #3604]             @ 0xe14 
    /*0000c3b4*/ ADD         R3, R4, #3568               @ 0xdf0 
    /*0000c3b8*/ STR         R0, [R4, #3536]             @ 0xdd0 
    /*0000c3bc*/ STR         R0, [R4, #3540]             @ 0xdd4 
    RC_NewModeInit_xc3c0:
    /*0000c3c0*/ STR         R1, [R3], #4 
    /*0000c3c4*/ CMP         R2, R3 
    /*0000c3c8*/ BNE         RC_NewModeInit_xc3c0
    /*0000c3cc*/ ADD         R1, R4, #3776               @ 0xec0 
    /*0000c3d0*/ ADD         R3, R4, #3824               @ 0xef0 
    /*0000c3d4*/ ADD         R2, R4, #3856               @ 0xf10 
    /*0000c3d8*/ MVN         R0, #0 
    /*0000c3dc*/ ADD         IP, R4, #3792               @ 0xed0 
    /*0000c3e0*/ ADD         R3, R3, #8 
    /*0000c3e4*/ ADD         R2, R2, #8 
    /*0000c3e8*/ STR         LR, [R4, #3772]             @ 0xebc 
    /*0000c3ec*/ STRD        R6, [R1] 
    /*0000c3f0*/ MOV         R1, R0 
    /*0000c3f4*/ STRD        R6, [IP, #-8] 
    /*0000c3f8*/ STR         R0, [R4, #3800]             @ 0xed8 
    /*0000c3fc*/ STR         R0, [R4, #3804]             @ 0xedc 
    RC_NewModeInit_xc400:
    /*0000c400*/ STR         R1, [R3], #4 
    /*0000c404*/ CMP         R2, R3 
    /*0000c408*/ BNE         RC_NewModeInit_xc400
    /*0000c40c*/ MOV         R3, #255                    @ 0xff 
    /*0000c410*/ MOV         R0, #0 
    /*0000c414*/ STR         R3, [R4, #3700]             @ 0xe74 
    /*0000c418*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    RC_NewModeInit_xc41c:
    /*0000c41c*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0000c420*/ CMP         R3, R2 
    /*0000c424*/ BNE         RC_NewModeInit_xc44c
    /*0000c428*/ LDR         R3, [R1, #52]               @ 0x34 
    /*0000c42c*/ CMP         R3, #1 
    /*0000c430*/ BLS         RC_NewModeInit_xc43c
    RC_NewModeInit_xc434:
    /*0000c434*/ MOV         R0, #0 
    /*0000c438*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    RC_NewModeInit_xc43c:
    /*0000c43c*/ MOV         R0, R1 
    /*0000c440*/ BL          0x000000000000B54C 
    /*0000c444*/ MOV         R0, R5 
    /*0000c448*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    RC_NewModeInit_xc44c:
    /*0000c44c*/ MVN         R0, #0 
    /*0000c450*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    RC_NewModeInit_xc454:
    /*0000c454*/ LDR         R3, [R1] 
    /*0000c458*/ ADD         R6, R1, #3232               @ 0xca0 
    /*0000c45c*/ LDR         IP, [R1, #56]               @ 0x38 
    /*0000c460*/ ADD         R6, R6, #8 
    /*0000c464*/ SUB         R3, R3, #2 
    /*0000c468*/ LDR         R2, [R1, #44]               @ 0x2c 
    /*0000c46c*/ CMP         R3, #1 
    /*0000c470*/ LDRLS       R5, [R1, #24] 
    /*0000c474*/ LSR         R3, R2, #16 
    /*0000c478*/ LDRHI       R5, [R1, #32] 
    /*0000c47c*/ CMP         R3, #0 
    /*0000c480*/ UXTH        R2, R2 
    /*0000c484*/ UMULL       R0, R1, R5, IP 
    /*0000c488*/ ASR         R9, R5, #31 
    /*0000c48c*/ MOV         R8, R5 
    /*0000c490*/ MLA         R1, IP, R9, R1 
    /*0000c494*/ UMULLNE     R8, R9, R3, R0 
    /*0000c498*/ MLANE       R9, R3, R1, R9 
    /*0000c49c*/ MOVNE       R0, R8 
    /*0000c4a0*/ MOVNE       R1, R9 
    /*0000c4a4*/ BL          0x000000000000C4A4          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000c4a8*/ ADD         R3, R4, #3248               @ 0xcb0 
    /*0000c4ac*/ MOV         LR, #2 
    /*0000c4b0*/ MOV         IP, #320                    @ 0x140 
    /*0000c4b4*/ STRD        R0, [R3, #-8] 
    /*0000c4b8*/ MOV         R1, #32 
    /*0000c4bc*/ LDR         R3, [R4, #352]              @ 0x160 
    /*0000c4c0*/ MOV         R0, #16 
    /*0000c4c4*/ STR         R1, [R4, #3468]             @ 0xd8c 
    /*0000c4c8*/ MOV         R1, #8 
    /*0000c4cc*/ ADD         R2, R3, #7 
    /*0000c4d0*/ CMP         R3, #0 
    /*0000c4d4*/ STR         R5, [R4, #3248]             @ 0xcb0 
    /*0000c4d8*/ MOVLT       R3, R2 
    /*0000c4dc*/ LDR         R2, [R4, #408]              @ 0x198 
    /*0000c4e0*/ CMP         R5, #0 
    /*0000c4e4*/ ASR         R3, R3, #3 
    /*0000c4e8*/ STR         R5, [R4, #3772]             @ 0xebc 
    /*0000c4ec*/ STR         R3, [R4, #3300]             @ 0xce4 
    /*0000c4f0*/ MOV         R3, #160                    @ 0xa0 
    /*0000c4f4*/ STR         LR, [R4, #3252]             @ 0xcb4 
    /*0000c4f8*/ STR         R3, [R4, #3472]             @ 0xd90 
    /*0000c4fc*/ MOV         R3, #0 
    /*0000c500*/ STR         IP, [R4, #3464]             @ 0xd88 
    /*0000c504*/ STR         R2, [R4, #3864]             @ 0xf18 
    /*0000c508*/ STR         R0, [R4, #3476]             @ 0xd94 
    /*0000c50c*/ STR         R1, [R4, #3480]             @ 0xd98 
    /*0000c510*/ STR         R1, [R4, #3484]             @ 0xd9c 
    /*0000c514*/ STR         R3, [R4, #3268]             @ 0xcc4 
    /*0000c518*/ STR         R3, [R4, #3496]             @ 0xda8 
    /*0000c51c*/ STR         R3, [R4, #3488]             @ 0xda0 
    /*0000c520*/ STR         R3, [R4, #3768]             @ 0xeb8 
    /*0000c524*/ BLE         RC_NewModeInit_xc544
    /*0000c528*/ MOV         R1, R3 
    /*0000c52c*/ B           RC_NewModeInit_xc534
    RC_NewModeInit_xc530:
    /*0000c530*/ LDR         R2, [R4, #3864]             @ 0xf18 
    RC_NewModeInit_xc534:
    /*0000c534*/ STR         R1, [R2, R3, LSL #2] 
    /*0000c538*/ ADD         R3, R3, #1 
    /*0000c53c*/ CMP         R5, R3 
    /*0000c540*/ BNE         RC_NewModeInit_xc530
    RC_NewModeInit_xc544:
    /*0000c544*/ MOV         R1, R6 
    /*0000c548*/ MOV         R0, R4 
    /*0000c54c*/ BL          0x000000000000A5BC 
    /*0000c550*/ B           RC_NewModeInit_xc434
FUNC_END RC_NewModeInit


FUNC_BEGIN RcUpdateDeBreathEffect
    /*0000c554*/ PUSH        {R4, LR} 
    /*0000c558*/ ADD         R3, R0, #2512               @ 0x9d0 
    /*0000c55c*/ ADD         IP, R0, #2544               @ 0x9f0 
    /*0000c560*/ LDR         R4, [R0, #1880]             @ 0x758 
    /*0000c564*/ LDR         LR, [R0, #1948]             @ 0x79c 
    /*0000c568*/ ADD         R3, R3, #12 
    /*0000c56c*/ ADD         IP, IP, #8 
    RcUpdateDeBreathEffect_xc570:
    /*0000c570*/ LDR         R1, [R3, #36]               @ 0x24 
    /*0000c574*/ LDR         R2, [R3, #4] 
    /*0000c578*/ STR         R1, [R3, #32] 
    /*0000c57c*/ STR         R2, [R3], #4 
    /*0000c580*/ CMP         R3, IP 
    /*0000c584*/ BNE         RcUpdateDeBreathEffect_xc570
    /*0000c588*/ STR         R4, [R0, #2584]             @ 0xa18 
    /*0000c58c*/ STR         LR, [R0, #2552]             @ 0x9f8 
    /*0000c590*/ POP         {R4, PC} 
FUNC_END RcUpdateDeBreathEffect


FUNC_BEGIN RcCalcDeBreathEffectStartQp
    /*0000c594*/ ADD         R3, R0, #2512               @ 0x9d0 
    /*0000c598*/ MOV         R2, #0 
    /*0000c59c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000c5a0*/ MOV         R5, R0 
    /*0000c5a4*/ ADD         R0, R0, #2544               @ 0x9f0 
    /*0000c5a8*/ ADD         R3, R3, #12 
    /*0000c5ac*/ ADD         R0, R0, #12 
    RcCalcDeBreathEffectStartQp_xc5b0:
    /*0000c5b0*/ LDR         R1, [R3], #4 
    /*0000c5b4*/ CMP         R0, R3 
    /*0000c5b8*/ ADD         R2, R2, R1 
    /*0000c5bc*/ BNE         RcCalcDeBreathEffectStartQp_xc5b0
    /*0000c5c0*/ LDR         R1, [R5, #1572]             @ 0x624 
    /*0000c5c4*/ LSR         R4, R2, #3 
    /*0000c5c8*/ LDR         R0, [R5, #1568]             @ 0x620 
    /*0000c5cc*/ BL          0x000000000000C5CC          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000c5d0*/ LDR         R2, [R5, #3120]             @ 0xc30 
    /*0000c5d4*/ LDR         R1, [R5, #48]               @ 0x30 
    /*0000c5d8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000c5dc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000c5e0*/ ADD         R3, R3, R2 
    /*0000c5e4*/ MOVW        R2, #265                    @ 0x109 
    /*0000c5e8*/ CMP         R1, R2 
    /*0000c5ec*/ LDRB        R1, [R3, #560]              @ 0x230 
    /*0000c5f0*/ BEQ         RcCalcDeBreathEffectStartQp_xc6a4
    /*0000c5f4*/ LDR         R6, [R5, #1928]             @ 0x788 
    /*0000c5f8*/ MOV         R2, #200                    @ 0xc8 
    /*0000c5fc*/ LDR         IP, [R5, #2504]             @ 0x9c8 
    /*0000c600*/ LDR         R3, [R5, #2508]             @ 0x9cc 
    /*0000c604*/ LDR         LR, [R5, #1932]             @ 0x78c 
    /*0000c608*/ LSR         IP, IP, #2 
    /*0000c60c*/ ADD         R6, LR, R6, LSL #2 
    /*0000c610*/ LSR         R3, R3, #2 
    /*0000c614*/ LDR         LR, [R5, #1936]             @ 0x790 
    /*0000c618*/ MUL         R3, R3, IP 
    /*0000c61c*/ ADD         LR, LR, R6, LSL #2 
    /*0000c620*/ MOV         IP, #100                    @ 0x64 
    /*0000c624*/ MUL         R2, R2, LR 
    /*0000c628*/ MUL         IP, IP, R4 
    /*0000c62c*/ CMP         R2, R3, LSL #1 
    /*0000c630*/ LSR         R3, R3, #4 
    /*0000c634*/ MOVHI       R2, #1 
    /*0000c638*/ MOVLS       R2, #0 
    /*0000c63c*/ CMP         IP, R3 
    /*0000c640*/ ORRHI       R2, R2, #1 
    /*0000c644*/ CMP         R2, #0 
    /*0000c648*/ MOVEQ       R3, R2 
    /*0000c64c*/ BEQ         RcCalcDeBreathEffectStartQp_xc664
    /*0000c650*/ MOV         R2, #50                     @ 0x32 
    /*0000c654*/ MUL         R2, R2, R4 
    /*0000c658*/ CMP         R3, R2 
    /*0000c65c*/ BCS         RcCalcDeBreathEffectStartQp_xc724
    RcCalcDeBreathEffectStartQp_xc660:
    /*0000c660*/ MOV         R3, #8 
    RcCalcDeBreathEffectStartQp_xc664:
    /*0000c664*/ ADD         R2, R3, R1 
    /*0000c668*/ CMP         R0, R2 
    /*0000c66c*/ SUBHI       R0, R0, R1 
    /*0000c670*/ SUBHI       R0, R0, R3 
    /*0000c674*/ MOV         R3, #0 
    /*0000c678*/ CMP         R0, #51                     @ 0x33 
    /*0000c67c*/ STR         R3, [R5, #1992]             @ 0x7c8 
    /*0000c680*/ MOV         R3, #51                     @ 0x33 
    /*0000c684*/ STR         R3, [R5, #2000]             @ 0x7d0 
    /*0000c688*/ MOVCS       R0, #51                     @ 0x33 
    /*0000c68c*/ CMP         R0, #20 
    /*0000c690*/ MOV         R3, #20 
    /*0000c694*/ STR         R3, [R5, #2004]             @ 0x7d4 
    /*0000c698*/ MOVCC       R0, #20 
    /*0000c69c*/ STR         R0, [R5, #1996]             @ 0x7cc 
    /*0000c6a0*/ POP         {R4, R5, R6, R7, R8, PC} 
    RcCalcDeBreathEffectStartQp_xc6a4:
    /*0000c6a4*/ LDR         LR, [R5, #1924]             @ 0x784 
    /*0000c6a8*/ MOV         R3, #100                    @ 0x64 
    /*0000c6ac*/ LDR         R7, [R5, #1928]             @ 0x788 
    /*0000c6b0*/ MOV         R2, #200                    @ 0xc8 
    /*0000c6b4*/ MUL         IP, R3, R4 
    /*0000c6b8*/ LDR         R6, [R5, #2504]             @ 0x9c8 
    /*0000c6bc*/ LDR         R3, [R5, #2508]             @ 0x9cc 
    /*0000c6c0*/ ADD         R7, R7, LR, LSL #2 
    /*0000c6c4*/ LDR         LR, [R5, #1932]             @ 0x78c 
    /*0000c6c8*/ LSR         R6, R6, #2 
    /*0000c6cc*/ ADD         R7, LR, R7, LSL #2 
    /*0000c6d0*/ LSR         R3, R3, #2 
    /*0000c6d4*/ LDR         LR, [R5, #1936]             @ 0x790 
    /*0000c6d8*/ MUL         R3, R3, R6 
    /*0000c6dc*/ ADD         LR, LR, R7, LSL #2 
    /*0000c6e0*/ MUL         R2, R2, LR 
    /*0000c6e4*/ CMP         R2, R3, LSL #1 
    /*0000c6e8*/ LSR         R2, R3, #8 
    /*0000c6ec*/ MOVHI       R3, #1 
    /*0000c6f0*/ MOVLS       R3, #0 
    /*0000c6f4*/ CMP         IP, R2 
    /*0000c6f8*/ ORRHI       R3, R3, #1 
    /*0000c6fc*/ CMP         R3, #0 
    /*0000c700*/ BEQ         RcCalcDeBreathEffectStartQp_xc664
    /*0000c704*/ MOV         R3, #50                     @ 0x32 
    /*0000c708*/ MUL         R4, R3, R4 
    /*0000c70c*/ CMP         R2, R4 
    /*0000c710*/ BCC         RcCalcDeBreathEffectStartQp_xc660
    /*0000c714*/ CMP         IP, R2 
    /*0000c718*/ MOVLS       R3, #6 
    /*0000c71c*/ MOVHI       R3, #7 
    /*0000c720*/ B           RcCalcDeBreathEffectStartQp_xc664
    RcCalcDeBreathEffectStartQp_xc724:
    /*0000c724*/ CMP         IP, R3 
    /*0000c728*/ MOVLS       R3, #6 
    /*0000c72c*/ MOVHI       R3, #7 
    /*0000c730*/ B           RcCalcDeBreathEffectStartQp_xc664
FUNC_END RcCalcDeBreathEffectStartQp


FUNC_BEGIN RC_NewModeDecision
    /*0000c734*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000c738*/ ADD         R3, R1, #2512               @ 0x9d0 
    /*0000c73c*/ ADD         R6, R1, #3232               @ 0xca0 
    /*0000c740*/ ADD         IP, R1, #2544               @ 0x9f0 
    /*0000c744*/ LDR         R5, [R1, #1508]             @ 0x5e4 
    /*0000c748*/ SUB         SP, SP, #84                 @ 0x54 
    /*0000c74c*/ LDR         R8, [R1, #1880]             @ 0x758 
    /*0000c750*/ ADD         R6, R6, #8 
    /*0000c754*/ LDR         LR, [R1, #1948]             @ 0x79c 
    /*0000c758*/ ADD         R3, R3, #12 
    /*0000c75c*/ ADD         IP, IP, #8 
    /*0000c760*/ MOV         R4, R1 
    /*0000c764*/ MOV         R7, R0 
    RC_NewModeDecision_xc768:
    /*0000c768*/ LDR         R0, [R3, #36]               @ 0x24 
    /*0000c76c*/ LDR         R1, [R3, #4] 
    /*0000c770*/ STR         R0, [R3, #32] 
    /*0000c774*/ STR         R1, [R3], #4 
    /*0000c778*/ CMP         IP, R3 
    /*0000c77c*/ BNE         RC_NewModeDecision_xc768
    /*0000c780*/ CMP         R5, #9 
    /*0000c784*/ STR         R8, [R4, #2584]             @ 0xa18 
    /*0000c788*/ STR         LR, [R4, #2552]             @ 0x9f8 
    /*0000c78c*/ BEQ         RC_NewModeDecision_xcbc4
    /*0000c790*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0000c794*/ MOVW        R0, #265                    @ 0x109 
    /*0000c798*/ SUB         R1, R3, #96                 @ 0x60 
    /*0000c79c*/ CMP         R3, #96                     @ 0x60 
    /*0000c7a0*/ CMPNE       R3, R0 
    /*0000c7a4*/ CLZ         R1, R1 
    /*0000c7a8*/ MOV         IP, R3 
    /*0000c7ac*/ LSR         R1, R1, #5 
    /*0000c7b0*/ BNE         RC_NewModeDecision_xc818
    /*0000c7b4*/ LDR         R0, [R4, #52]               @ 0x34 
    /*0000c7b8*/ CMP         R0, #1 
    /*0000c7bc*/ BEQ         RC_NewModeDecision_xcbd0
    /*0000c7c0*/ CMP         R0, #0 
    /*0000c7c4*/ BEQ         RC_NewModeDecision_xc8b4
    /*0000c7c8*/ CMP         R0, #4 
    /*0000c7cc*/ BEQ         RC_NewModeDecision_xd5a4
    /*0000c7d0*/ CMP         R0, #2 
    /*0000c7d4*/ BEQ         RC_NewModeDecision_xdc88
    /*0000c7d8*/ CMP         R0, #3 
    /*0000c7dc*/ BEQ         RC_NewModeDecision_xcca4
    /*0000c7e0*/ CMP         R0, #5 
    /*0000c7e4*/ BEQ         RC_NewModeDecision_xcc50
    /*0000c7e8*/ CMP         R0, #6 
    /*0000c7ec*/ BEQ         RC_NewModeDecision_xdbb0
    RC_NewModeDecision_xc7f0:
    /*0000c7f0*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0000c7f4*/ CMP         R3, R2 
    /*0000c7f8*/ MOVNE       R3, R1 
    /*0000c7fc*/ ORREQ       R3, R1, #1 
    /*0000c800*/ CMP         R3, #0 
    /*0000c804*/ BEQ         RC_NewModeDecision_xc824
    RC_NewModeDecision_xc808:
    /*0000c808*/ LDR         R1, [R4, #1996]             @ 0x7cc 
    RC_NewModeDecision_xc80c:
    /*0000c80c*/ MOV         R3, #0 
    /*0000c810*/ STR         R3, [R4, #2008]             @ 0x7d8 
    /*0000c814*/ B           RC_NewModeDecision_xc840
    RC_NewModeDecision_xc818:
    /*0000c818*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0000c81c*/ CMP         R3, R2 
    /*0000c820*/ BEQ         RC_NewModeDecision_xc864
    RC_NewModeDecision_xc824:
    /*0000c824*/ SUB         R3, R5, #5 
    /*0000c828*/ LDR         R1, [R4, #1996]             @ 0x7cc 
    /*0000c82c*/ CMP         R5, #0 
    /*0000c830*/ CMPNE       R3, #1 
    /*0000c834*/ LDRHI       R3, [R4, #212]              @ 0xd4 
    /*0000c838*/ MOVLS       R3, #0 
    /*0000c83c*/ STR         R3, [R4, #2008]             @ 0x7d8 
    RC_NewModeDecision_xc840:
    /*0000c840*/ LDR         R2, [R4, #1568]             @ 0x620 
    /*0000c844*/ LDR         R3, [R4, #1572]             @ 0x624 
    /*0000c848*/ ADD         R2, R2, R1 
    /*0000c84c*/ STR         R2, [R4, #1568]             @ 0x620 
    /*0000c850*/ ADD         R3, R3, #1 
    /*0000c854*/ STR         R3, [R4, #1572]             @ 0x624 
    RC_NewModeDecision_xc858:
    /*0000c858*/ MOV         R0, #0 
    /*0000c85c*/ ADD         SP, SP, #84                 @ 0x54 
    /*0000c860*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_NewModeDecision_xc864:
    /*0000c864*/ LDR         R3, [R4, #52]               @ 0x34 
    /*0000c868*/ CMP         R3, #1 
    /*0000c86c*/ BEQ         RC_NewModeDecision_xcc84
    /*0000c870*/ CMP         R3, #0 
    /*0000c874*/ BEQ         RC_NewModeDecision_xcc84
    /*0000c878*/ CMP         R3, #5 
    /*0000c87c*/ BNE         RC_NewModeDecision_xc808
    /*0000c880*/ CMP         R5, #5 
    /*0000c884*/ CMPNE       R5, #0 
    /*0000c888*/ LDREQ       R1, [R4, #56]               @ 0x38 
    /*0000c88c*/ BEQ         RC_NewModeDecision_xc89c
    /*0000c890*/ CMP         R5, #4 
    /*0000c894*/ LDREQ       R1, [R4, #64]               @ 0x40 
    /*0000c898*/ LDRNE       R1, [R4, #60]               @ 0x3c 
    RC_NewModeDecision_xc89c:
    /*0000c89c*/ MOV         R3, #0 
    /*0000c8a0*/ STR         R1, [R4, #1996]             @ 0x7cc 
    /*0000c8a4*/ STR         R1, [R4, #2000]             @ 0x7d0 
    /*0000c8a8*/ STR         R1, [R4, #2004]             @ 0x7d4 
    /*0000c8ac*/ STR         R3, [R4, #1992]             @ 0x7c8 
    /*0000c8b0*/ B           RC_NewModeDecision_xc80c
    RC_NewModeDecision_xc8b4:
    /*0000c8b4*/ LDR         R3, [R4, #248]              @ 0xf8 
    /*0000c8b8*/ ADD         R0, R4, #368                @ 0x170 
    /*0000c8bc*/ LDR         SL, [R4, #236]              @ 0xec 
    /*0000c8c0*/ LDR         FP, [R4, #240]              @ 0xf0 
    /*0000c8c4*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000c8c8*/ LDR         R3, [R4, #244]              @ 0xf4 
    /*0000c8cc*/ STR         SL, [SP, #24] 
    /*0000c8d0*/ LDR         R8, [R4, #220]              @ 0xdc 
    /*0000c8d4*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000c8d8*/ LDR         R3, [R4, #4] 
    /*0000c8dc*/ STR         R3, [SP, #32] 
    /*0000c8e0*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000c8e4*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000c8e8*/ BL          0x000000000000A1BC 
    /*0000c8ec*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*0000c8f0*/ STR         R3, [SP, #16] 
    /*0000c8f4*/ STR         R0, [SP, #52]               @ 0x34 
    /*0000c8f8*/ CMP         R3, #8 
    /*0000c8fc*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*0000c900*/ B           RC_NewModeDecision_xc930
    /*0000c904*/ ANDEQ       SP, R0, R4, LSR #5 
    /*0000c908*/ ANDEQ       IP, R0, R0, LSR R9 
    /*0000c90c*/ ANDEQ       IP, R0, R0, LSR R9 
    /*0000c910*/ ANDEQ       IP, R0, R0, LSR R9 
    /*0000c914*/ ANDEQ       IP, R0, R8, LSR #18 
    /*0000c918*/ ANDEQ       SP, R0, R4, LSR #5 
    /*0000c91c*/ MULEQ       R0, R8, R2 
    /*0000c920*/ ANDEQ       IP, R0, R0, LSR R9 
    /*0000c924*/ ANDEQ       SP, R0, IP, LSL #5 
    /*0000c928*/ LDR         R3, [R4, #12] 
    /*0000c92c*/ STR         R3, [SP, #32] 
    RC_NewModeDecision_xc930:
    /*0000c930*/ LDR         R3, [R4, #1496]             @ 0x5d8 
    /*0000c934*/ CMP         R3, #3 
    /*0000c938*/ BEQ         RC_NewModeDecision_xdbd0
    /*0000c93c*/ LDR         R3, [R4, #3220]             @ 0xc94 
    /*0000c940*/ CMP         R3, #0 
    /*0000c944*/ ADDNE       R3, R4, R3, LSL #2 
    /*0000c948*/ LDRNE       R3, [R3, #3184]             @ 0xc70 
    /*0000c94c*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000c950*/ LDR         R3, [R4, #3252]             @ 0xcb4 
    /*0000c954*/ CMP         R3, #2 
    /*0000c958*/ BEQ         RC_NewModeDecision_xe250
    /*0000c95c*/ LDR         R2, [R4, #1512]             @ 0x5e8 
    /*0000c960*/ LSL         R3, R8, #4 
    /*0000c964*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0000c968*/ CMP         R2, #3 
    /*0000c96c*/ LDR         R8, [R4, #3492]             @ 0xda4 
    /*0000c970*/ STR         R1, [SP, #40]               @ 0x28 
    /*0000c974*/ BEQ         RC_NewModeDecision_xd2b0
    /*0000c978*/ CMP         R2, #5 
    /*0000c97c*/ CMPNE       R2, #0 
    /*0000c980*/ LDR         R9, [R4, #1640]             @ 0x668 
    /*0000c984*/ BEQ         RC_NewModeDecision_xe34c
    /*0000c988*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000c98c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000c990*/ STR         R2, [SP, #12] 
    RC_NewModeDecision_xc994:
    /*0000c994*/ MOV         R1, R6 
    /*0000c998*/ MOV         R2, R9 
    /*0000c99c*/ MOV         R0, R4 
    /*0000c9a0*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000c9a4*/ BL          0x000000000000AAD8 
    /*0000c9a8*/ ADD         R2, R4, #3248               @ 0xcb0 
    /*0000c9ac*/ MOV         R1, R6 
    /*0000c9b0*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0000c9b4*/ LDRD        R6, [R2, #-8] 
    /*0000c9b8*/ MOV         R0, R4 
    /*0000c9bc*/ LDR         R2, [SP, #16] 
    /*0000c9c0*/ STRD        R6, [SP] 
    /*0000c9c4*/ BL          0x000000000000AE30 
    /*0000c9c8*/ LDR         R3, [R4, #3280]             @ 0xcd0 
    /*0000c9cc*/ CMP         R3, R9 
    /*0000c9d0*/ MOV         R7, R0 
    /*0000c9d4*/ BGT         RC_NewModeDecision_xdbf4
    /*0000c9d8*/ SUB         R0, R9, R3 
    /*0000c9dc*/ ADD         R3, R3, #32 
    /*0000c9e0*/ LSL         R0, R0, #1 
    /*0000c9e4*/ ASR         R1, R3, #5 
    /*0000c9e8*/ BL          0x000000000000C9E8          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000c9ec*/ MOV         R6, R0 
    RC_NewModeDecision_xc9f0:
    /*0000c9f0*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000c9f4*/ LDR         R1, [SP, #48]               @ 0x30 
    /*0000c9f8*/ LDR         R0, [SP, #52]               @ 0x34 
    /*0000c9fc*/ ASR         R9, R3, #5 
    /*0000ca00*/ BL          0x000000000000CA00          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000ca04*/ STR         R9, [SP, #48]               @ 0x30 
    /*0000ca08*/ MOV         R1, R9 
    /*0000ca0c*/ LDR         R9, [R4, #3288]             @ 0xcd8 
    /*0000ca10*/ STR         R0, [SP, #52]               @ 0x34 
    /*0000ca14*/ BL          0x000000000000CA14          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000ca18*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000ca1c*/ LDR         R2, [SP, #12] 
    /*0000ca20*/ MOV         R1, R3 
    /*0000ca24*/ USAT        R3, #6, R0 
    /*0000ca28*/ MOV         R0, R9 
    /*0000ca2c*/ ADD         R3, R2, R3, LSL #2 
    /*0000ca30*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000ca34*/ BL          0x000000000000CA34          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000ca38*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000ca3c*/ CMP         R8, R9 
    /*0000ca40*/ LDR         R2, [SP, #52]               @ 0x34 
    /*0000ca44*/ LDR         R1, [R3, #228]              @ 0xe4 
    /*0000ca48*/ MOVGE       IP, R8 
    /*0000ca4c*/ MOVLT       IP, R9 
    /*0000ca50*/ USAT        R3, #6, R0 
    /*0000ca54*/ LDR         R0, [SP, #12] 
    /*0000ca58*/ CMP         R2, IP 
    /*0000ca5c*/ ADD         R3, R0, R3, LSL #2 
    /*0000ca60*/ LDR         R3, [R3, #228]              @ 0xe4 
    /*0000ca64*/ SUB         R1, R1, R3 
    /*0000ca68*/ BLE         RC_NewModeDecision_xdc64
    /*0000ca6c*/ MOV         R3, #6 
    /*0000ca70*/ MUL         R9, R3, R1 
    RC_NewModeDecision_xca74:
    /*0000ca74*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000ca78*/ SUB         R0, R2, R8 
    /*0000ca7c*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000ca80*/ ASR         R1, R3, #4 
    /*0000ca84*/ ADD         R0, R0, R0, LSL #1 
    /*0000ca88*/ BL          0x000000000000CA88          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000ca8c*/ CMN         R6, #128                    @ 0x80 
    /*0000ca90*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0000ca94*/ MVNLT       R6, #127                    @ 0x7f 
    /*0000ca98*/ BLT         RC_NewModeDecision_xcaa4
    RC_NewModeDecision_xca9c:
    /*0000ca9c*/ CMP         R6, #256                    @ 0x100 
    /*0000caa0*/ MOVGE       R6, #256                    @ 0x100 
    RC_NewModeDecision_xcaa4:
    /*0000caa4*/ CMN         R9, #128                    @ 0x80 
    /*0000caa8*/ MVNLT       R3, #127                    @ 0x7f 
    /*0000caac*/ BLT         RC_NewModeDecision_xcabc
    /*0000cab0*/ CMP         R9, #256                    @ 0x100 
    /*0000cab4*/ MOVLT       R3, R9 
    /*0000cab8*/ MOVGE       R3, #256                    @ 0x100 
    RC_NewModeDecision_xcabc:
    /*0000cabc*/ CMP         R0, #32 
    /*0000cac0*/ MVN         IP, #15 
    /*0000cac4*/ MOVLT       R1, R0 
    /*0000cac8*/ MOVGE       R1, #32 
    /*0000cacc*/ LDR         R0, [R4, #3256]             @ 0xcb8 
    /*0000cad0*/ CMP         R1, IP 
    /*0000cad4*/ MOVLT       R1, IP 
    /*0000cad8*/ CMP         R0, #640                    @ 0x280 
    /*0000cadc*/ BLE         RC_NewModeDecision_xcb00
    /*0000cae0*/ CMP         R6, #32 
    /*0000cae4*/ MOVGE       R6, #32 
    /*0000cae8*/ CMP         R6, IP 
    /*0000caec*/ MOVLT       R6, IP 
    /*0000caf0*/ CMP         R3, #32 
    /*0000caf4*/ MOVGE       R3, #32 
    /*0000caf8*/ CMP         R3, IP 
    /*0000cafc*/ MOVLT       R3, IP 
    RC_NewModeDecision_xcb00:
    /*0000cb00*/ ADD         R3, R6, R3 
    /*0000cb04*/ LDR         R0, [R4, #3260]             @ 0xcbc 
    /*0000cb08*/ ADD         R3, R3, R1 
    /*0000cb0c*/ LSL         R1, FP, #6 
    /*0000cb10*/ ADD         R3, R3, R0 
    /*0000cb14*/ STR         R2, [R4, #3288]             @ 0xcd8 
    /*0000cb18*/ CMP         R3, R1 
    /*0000cb1c*/ STR         R7, [R4, #3280]             @ 0xcd0 
    /*0000cb20*/ MOV         R2, FP 
    /*0000cb24*/ BLT         RC_NewModeDecision_xcb38
    /*0000cb28*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000cb2c*/ LSL         R1, R1, #6 
    /*0000cb30*/ CMP         R1, R3 
    /*0000cb34*/ MOVGE       R1, R3 
    RC_NewModeDecision_xcb38:
    /*0000cb38*/ LDR         R3, [SP, #16] 
    /*0000cb3c*/ STR         R1, [R4, #3260]             @ 0xcbc 
    /*0000cb40*/ CMP         R3, #5 
    /*0000cb44*/ CMPNE       R3, #0 
    /*0000cb48*/ MOV         R3, #0 
    /*0000cb4c*/ STR         R3, [R4, #3268]             @ 0xcc4 
    /*0000cb50*/ BNE         RC_NewModeDecision_xdc0c
    /*0000cb54*/ LDR         R2, [R4, #3496]             @ 0xda8 
    /*0000cb58*/ LDR         R3, [R4, #3272]             @ 0xcc8 
    /*0000cb5c*/ ADD         R1, R1, R2 
    /*0000cb60*/ LDR         R2, [R4, #1564]             @ 0x61c 
    /*0000cb64*/ ADD         R3, R3, R1, ASR #6 
    /*0000cb68*/ CMP         R2, #1 
    /*0000cb6c*/ ASR         R3, R3, #1 
    /*0000cb70*/ STR         R3, [R4, #3272]             @ 0xcc8 
    /*0000cb74*/ BEQ         RC_NewModeDecision_xe914
    RC_NewModeDecision_xcb78:
    /*0000cb78*/ LDR         R2, [SP, #32] 
    RC_NewModeDecision_xcb7c:
    /*0000cb7c*/ SUB         R3, R3, R2 
    RC_NewModeDecision_xcb80:
    /*0000cb80*/ CMP         SL, R3 
    /*0000cb84*/ BGT         RC_NewModeDecision_xcb98
    /*0000cb88*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000cb8c*/ CMP         R2, R3 
    /*0000cb90*/ MOVLT       R3, R2 
    /*0000cb94*/ STR         R3, [SP, #24] 
    RC_NewModeDecision_xcb98:
    /*0000cb98*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000cb9c*/ STR         SL, [R4, #2004]             @ 0x7d4 
    /*0000cba0*/ STR         R3, [R4, #2000]             @ 0x7d0 
    RC_NewModeDecision_xcba4:
    /*0000cba4*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0000cba8*/ LDR         R2, [SP, #24] 
    /*0000cbac*/ SUB         R1, R3, #96                 @ 0x60 
    /*0000cbb0*/ STR         R7, [R4, #1992]             @ 0x7c8 
    /*0000cbb4*/ CLZ         R1, R1 
    /*0000cbb8*/ STR         R2, [R4, #1996]             @ 0x7cc 
    /*0000cbbc*/ LSR         R1, R1, #5 
    /*0000cbc0*/ B           RC_NewModeDecision_xc7f0
    RC_NewModeDecision_xcbc4:
    /*0000cbc4*/ MOV         R0, R4 
    /*0000cbc8*/ BL          0x000000000000CBC8          @ RcCalcDeBreathEffectStartQp [R_ARM_CALL: .text+0xc594] 
    /*0000cbcc*/ B           RC_NewModeDecision_xc858
    RC_NewModeDecision_xcbd0:
    /*0000cbd0*/ LDR         R3, [R4, #224]              @ 0xe0 
    /*0000cbd4*/ ADD         R0, R4, #368                @ 0x170 
    /*0000cbd8*/ LDR         FP, [R4, #232]              @ 0xe8 
    /*0000cbdc*/ LDR         R8, [R4, #228]              @ 0xe4 
    /*0000cbe0*/ STR         R3, [SP, #32] 
    /*0000cbe4*/ LDR         R3, [R4, #236]              @ 0xec 
    /*0000cbe8*/ LDR         R9, [R4, #220]              @ 0xdc 
    /*0000cbec*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000cbf0*/ LDR         R3, [R4, #244]              @ 0xf4 
    /*0000cbf4*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000cbf8*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000cbfc*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000cc00*/ BL          0x000000000000A1BC 
    /*0000cc04*/ LDR         R3, [R4, #1496]             @ 0x5d8 
    /*0000cc08*/ STR         FP, [SP, #16] 
    /*0000cc0c*/ CMP         R3, #3 
    /*0000cc10*/ STR         R0, [SP, #48]               @ 0x30 
    /*0000cc14*/ BEQ         RC_NewModeDecision_xdbd0
    /*0000cc18*/ LDR         R3, [R4, #1508]             @ 0x5e4 
    /*0000cc1c*/ STR         R3, [SP, #24] 
    /*0000cc20*/ CMP         R3, #8 
    /*0000cc24*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*0000cc28*/ B           RC_NewModeDecision_xd598
    /*0000cc2c*/ ANDEQ       SP, R0, R4, ROR R5 
    /*0000cc30*/ MULEQ       R0, R8, R5 
    /*0000cc34*/ MULEQ       R0, R8, R5 
    /*0000cc38*/ MULEQ       R0, R8, R5 
    /*0000cc3c*/ ANDEQ       SP, R0, R4, ASR #5 
    /*0000cc40*/ ANDEQ       SP, R0, R4, ROR R5 
    /*0000cc44*/ ANDEQ       SP, R0, IP, LSL #11 
    /*0000cc48*/ MULEQ       R0, R8, R5 
    /*0000cc4c*/ ANDEQ       SP, R0, R0, LSL #11 
    RC_NewModeDecision_xcc50:
    /*0000cc50*/ CMP         R5, #5 
    /*0000cc54*/ CMPNE       R5, #0 
    /*0000cc58*/ LDREQ       R2, [R4, #56]               @ 0x38 
    /*0000cc5c*/ BEQ         RC_NewModeDecision_xcc6c
    /*0000cc60*/ CMP         R5, #4 
    /*0000cc64*/ LDREQ       R2, [R4, #64]               @ 0x40 
    /*0000cc68*/ LDRNE       R2, [R4, #60]               @ 0x3c 
    RC_NewModeDecision_xcc6c:
    /*0000cc6c*/ MOV         R0, #0 
    /*0000cc70*/ STR         R2, [R4, #1996]             @ 0x7cc 
    /*0000cc74*/ STR         R2, [R4, #2000]             @ 0x7d0 
    /*0000cc78*/ STR         R2, [R4, #2004]             @ 0x7d4 
    /*0000cc7c*/ STR         R0, [R4, #1992]             @ 0x7c8 
    /*0000cc80*/ B           RC_NewModeDecision_xc7f0
    RC_NewModeDecision_xcc84:
    /*0000cc84*/ MOV         R1, R6 
    /*0000cc88*/ MOV         R0, R4 
    /*0000cc8c*/ BL          0x000000000000A23C 
    /*0000cc90*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0000cc94*/ SUB         R1, R3, #96                 @ 0x60 
    /*0000cc98*/ CLZ         R1, R1 
    /*0000cc9c*/ LSR         R1, R1, #5 
    /*0000cca0*/ B           RC_NewModeDecision_xc7f0
    RC_NewModeDecision_xcca4:
    /*0000cca4*/ LDR         R2, [R4, #244]              @ 0xf4 
    /*0000cca8*/ CMP         R5, #6 
    /*0000ccac*/ LDR         SL, [R4, #236]              @ 0xec 
    /*0000ccb0*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0000ccb4*/ LDR         R2, [R4, #4] 
    /*0000ccb8*/ STR         SL, [SP, #40]               @ 0x28 
    /*0000ccbc*/ STR         R2, [SP, #24] 
    /*0000ccc0*/ BEQ         RC_NewModeDecision_xea70
    /*0000ccc4*/ CMP         R5, #8 
    /*0000ccc8*/ BEQ         RC_NewModeDecision_xea64
    /*0000cccc*/ CMP         R5, #4 
    /*0000ccd0*/ LDREQ       R2, [R4, #12] 
    /*0000ccd4*/ STREQ       R2, [SP, #24] 
    RC_NewModeDecision_xccd8:
    /*0000ccd8*/ LDR         R2, [R4, #1496]             @ 0x5d8 
    /*0000ccdc*/ CMP         R2, #3 
    /*0000cce0*/ LDREQ       R2, [R4, #3264]             @ 0xcc0 
    /*0000cce4*/ STREQ       R2, [R4, #1996]             @ 0x7cc 
    /*0000cce8*/ BEQ         RC_NewModeDecision_xc7f0
    /*0000ccec*/ LDR         R3, [R4, #3220]             @ 0xc94 
    /*0000ccf0*/ CMP         R3, #0 
    /*0000ccf4*/ ADDNE       R3, R4, R3, LSL #2 
    /*0000ccf8*/ LDRNE       R3, [R3, #3184]             @ 0xc70 
    /*0000ccfc*/ STR         R3, [SP, #72]               @ 0x48 
    /*0000cd00*/ LDR         R3, [R4, #3252]             @ 0xcb4 
    /*0000cd04*/ CMP         R3, #2 
    /*0000cd08*/ BEQ         RC_NewModeDecision_xeb1c
    /*0000cd0c*/ LDR         R3, [R4, #248]              @ 0xf8 
    /*0000cd10*/ LDR         R9, [R4, #1512]             @ 0x5e8 
    /*0000cd14*/ LDR         R8, [R4, #220]              @ 0xdc 
    /*0000cd18*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000cd1c*/ CMP         R9, #3 
    /*0000cd20*/ LDR         R3, [R4, #56]               @ 0x38 
    /*0000cd24*/ LDR         FP, [R4, #240]              @ 0xf0 
    /*0000cd28*/ LSL         R8, R8, #4 
    /*0000cd2c*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000cd30*/ LDR         R3, [R4, #3492]             @ 0xda4 
    /*0000cd34*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000cd38*/ LDR         R3, [R4, #3240]             @ 0xca8 
    /*0000cd3c*/ STR         R3, [SP, #16] 
    /*0000cd40*/ LDR         R3, [R4, #3244]             @ 0xcac 
    /*0000cd44*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000cd48*/ LDR         R3, [R4, #3292]             @ 0xcdc 
    /*0000cd4c*/ STR         R3, [SP, #32] 
    /*0000cd50*/ BEQ         RC_NewModeDecision_xea4c
    /*0000cd54*/ LDR         R3, [R4, #1640]             @ 0x668 
    /*0000cd58*/ MOV         R1, R6 
    /*0000cd5c*/ MOV         R0, R4 
    /*0000cd60*/ MOV         R2, R3 
    /*0000cd64*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000cd68*/ BL          0x000000000000AAD8 
    /*0000cd6c*/ LDR         R0, [R4, #1916]             @ 0x77c 
    /*0000cd70*/ MOVW        R3, #3540                   @ 0xdd4 
    /*0000cd74*/ MOVW        R2, #28848                  @ 0x70b0 
    /*0000cd78*/ MOVT        R2, #27 
    /*0000cd7c*/ LDR         R1, [R4, #1920]             @ 0x780 
    /*0000cd80*/ MUL         R3, R3, R0 
    /*0000cd84*/ ADD         R1, R1, #1 
    /*0000cd88*/ MUL         R0, R2, R0 
    /*0000cd8c*/ LDR         R2, [R4, #1512]             @ 0x5e8 
    /*0000cd90*/ ADD         R3, R3, #64                 @ 0x40 
    /*0000cd94*/ ADD         R0, R0, R3, LSR #7 
    /*0000cd98*/ STR         R2, [SP, #68]               @ 0x44 
    /*0000cd9c*/ BL          0x000000000000CD9C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000cda0*/ CMP         R0, #200                    @ 0xc8 
    /*0000cda4*/ BHI         RC_NewModeDecision_xec58
    /*0000cda8*/ MOVW        R2, #26215                  @ 0x6667 
    /*0000cdac*/ MOVT        R2, #26214                  @ 0x6666 
    /*0000cdb0*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000cdb4*/ ASR         R3, R0, #31 
    /*0000cdb8*/ MOV         IP, R1 
    /*0000cdbc*/ SMULL       R0, R1, R0, R2 
    /*0000cdc0*/ MOV         R2, IP 
    /*0000cdc4*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000cdc8*/ STR         R2, [SP, #12] 
    /*0000cdcc*/ RSB         R3, R3, R1, ASR #2 
    /*0000cdd0*/ ADD         R3, R2, R3, LSL #2 
    /*0000cdd4*/ LDR         R0, [R3, #1160]             @ 0x488 
    RC_NewModeDecision_xcdd8:
    /*0000cdd8*/ LDR         R3, [SP, #68]               @ 0x44 
    /*0000cddc*/ CMP         R3, #5 
    /*0000cde0*/ CMPNE       R3, #0 
    /*0000cde4*/ BNE         RC_NewModeDecision_xce04
    /*0000cde8*/ LDR         R2, [R4, #48]               @ 0x30 
    /*0000cdec*/ LDR         R3, [R4, #3804]             @ 0xedc 
    /*0000cdf0*/ CMP         R2, #96                     @ 0x60 
    /*0000cdf4*/ STRNE       R0, [R4, #3804]             @ 0xedc 
    /*0000cdf8*/ STR         R3, [R4, #3800]             @ 0xed8 
    /*0000cdfc*/ LDREQ       R3, [R4, #3260]             @ 0xcbc 
    /*0000ce00*/ STREQ       R3, [R4, #3804]             @ 0xedc 
    RC_NewModeDecision_xce04:
    /*0000ce04*/ LDR         R3, [SP, #68]               @ 0x44 
    /*0000ce08*/ CMP         R3, #1 
    /*0000ce0c*/ BEQ         RC_NewModeDecision_xed24
    RC_NewModeDecision_xce10:
    /*0000ce10*/ CMP         R9, #5 
    /*0000ce14*/ CMPNE       R9, #0 
    /*0000ce18*/ BNE         RC_NewModeDecision_xcecc
    /*0000ce1c*/ LDR         R3, [R4, #3244]             @ 0xcac 
    /*0000ce20*/ LDR         R0, [R4, #3240]             @ 0xca8 
    /*0000ce24*/ LDR         IP, [R4, #3248]             @ 0xcb0 
    /*0000ce28*/ MUL         R1, R8, R3 
    /*0000ce2c*/ ASR         R3, R8, #31 
    /*0000ce30*/ SUB         IP, IP, #1 
    /*0000ce34*/ MLA         R3, R0, R3, R1 
    /*0000ce38*/ ADD         R2, R8, IP, LSL #4 
    /*0000ce3c*/ UMULL       R0, R1, R0, R8 
    /*0000ce40*/ ADD         R1, R3, R1 
    /*0000ce44*/ BL          0x000000000000CE44          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000ce48*/ LDR         R3, [R4, #3272]             @ 0xcc8 
    /*0000ce4c*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0000ce50*/ CMP         R3, #51                     @ 0x33 
    /*0000ce54*/ MOVGE       R3, #51                     @ 0x33 
    /*0000ce58*/ BIC         R3, R3, R3, ASR #31 
    /*0000ce5c*/ CMP         R2, R0 
    /*0000ce60*/ LDR         R2, [SP, #12] 
    /*0000ce64*/ MOV         R1, R0 
    /*0000ce68*/ ADD         R3, R2, R3, LSL #2 
    /*0000ce6c*/ LDR         R9, [R3, #696]              @ 0x2b8 
    /*0000ce70*/ LDR         R3, [R4, #3496]             @ 0xda8 
    /*0000ce74*/ BGT         RC_NewModeDecision_xce80
    /*0000ce78*/ CMP         R3, #0 
    /*0000ce7c*/ BLE         RC_NewModeDecision_xcecc
    RC_NewModeDecision_xce80:
    /*0000ce80*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000ce84*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000ce88*/ SUB         R0, R3, R1 
    /*0000ce8c*/ LSL         R0, R0, #8 
    /*0000ce90*/ BL          0x000000000000CE90          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000ce94*/ LDR         R3, [SP, #68]               @ 0x44 
    /*0000ce98*/ MVN         R2, #255                    @ 0xff 
    /*0000ce9c*/ CMP         R0, #256                    @ 0x100 
    /*0000cea0*/ MOVGE       R0, #256                    @ 0x100 
    /*0000cea4*/ CMP         R0, R2 
    /*0000cea8*/ ADDGE       R2, R3, R0 
    /*0000ceac*/ ADDLT       R2, R3, R2 
    /*0000ceb0*/ CMP         R2, #0 
    /*0000ceb4*/ MOVLT       R3, #0 
    /*0000ceb8*/ BLT         RC_NewModeDecision_xcec8
    /*0000cebc*/ LSL         R3, R9, #6 
    /*0000cec0*/ CMP         R3, R2 
    /*0000cec4*/ MOVGE       R3, R2 
    RC_NewModeDecision_xcec8:
    /*0000cec8*/ STR         R3, [R4, #3496]             @ 0xda8 
    RC_NewModeDecision_xcecc:
    /*0000cecc*/ MOV         R0, R7 
    /*0000ced0*/ MOV         R1, R4 
    /*0000ced4*/ BL          0x000000000000CED4          @ RC_DRV_NewModePsnrDecision [R_ARM_CALL: .text+0x11934] 
    /*0000ced8*/ LDR         R2, [R4, #3700]             @ 0xe74 
    /*0000cedc*/ SUB         R7, R2, #3 
    /*0000cee0*/ CMP         R0, R7 
    /*0000cee4*/ BLT         RC_NewModeDecision_xcef4
    /*0000cee8*/ ADD         R7, R2, #6 
    /*0000ceec*/ CMP         R7, R0 
    /*0000cef0*/ MOVGE       R7, R0 
    RC_NewModeDecision_xcef4:
    /*0000cef4*/ CMP         R7, #254                    @ 0xfe 
    /*0000cef8*/ BGT         RC_NewModeDecision_xea28
    /*0000cefc*/ LDR         R3, [R4, #240]              @ 0xf0 
    /*0000cf00*/ CMP         R3, #23 
    /*0000cf04*/ LDR         R3, [R4, #3260]             @ 0xcbc 
    /*0000cf08*/ BLS         RC_NewModeDecision_xec4c
    /*0000cf0c*/ CMP         R3, #1920                   @ 0x780 
    /*0000cf10*/ SUB         R7, R7, #3 
    /*0000cf14*/ BLT         RC_NewModeDecision_xcf3c
    /*0000cf18*/ CMP         R7, #254                    @ 0xfe 
    /*0000cf1c*/ BGT         RC_NewModeDecision_xea34
    RC_NewModeDecision_xcf20:
    /*0000cf20*/ LDR         R1, [R4, #3492]             @ 0xda4 
    /*0000cf24*/ MOV         R3, #56                     @ 0x38 
    /*0000cf28*/ MUL         R3, R3, R1 
    /*0000cf2c*/ LDR         R1, [SP, #32] 
    /*0000cf30*/ CMP         R1, R3, ASR #6 
    /*0000cf34*/ ADDGT       R7, R7, #6 
    /*0000cf38*/ ADDLE       R7, R7, #9 
    RC_NewModeDecision_xcf3c:
    /*0000cf3c*/ SUB         R3, R2, R7 
    /*0000cf40*/ CMP         R3, #0 
    /*0000cf44*/ RSBLT       R3, R3, #0 
    /*0000cf48*/ CMP         R3, #19 
    /*0000cf4c*/ BLE         RC_NewModeDecision_xcf5c
    RC_NewModeDecision_xcf50:
    /*0000cf50*/ CMP         R2, R7 
    /*0000cf54*/ SUBGT       R7, R2, #6 
    /*0000cf58*/ ADDLE       R7, R2, #10 
    RC_NewModeDecision_xcf5c:
    /*0000cf5c*/ CMP         R7, #100                    @ 0x64 
    /*0000cf60*/ MOVLT       R7, #100                    @ 0x64 
    RC_NewModeDecision_xcf64:
    /*0000cf64*/ LDR         R2, [SP, #16] 
    /*0000cf68*/ MOV         R9, #0 
    /*0000cf6c*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0000cf70*/ ASR         R1, R7, #31 
    /*0000cf74*/ STR         R7, [R4, #3700]             @ 0xe74 
    /*0000cf78*/ MUL         R0, R7, R3 
    /*0000cf7c*/ MOV         R3, R8 
    /*0000cf80*/ MOV         R8, #0 
    /*0000cf84*/ STRD        R8, [SP, #16] 
    /*0000cf88*/ UMULL       R8, R9, R7, R2 
    /*0000cf8c*/ MLA         R0, R2, R1, R0 
    /*0000cf90*/ MOV         R1, R6 
    /*0000cf94*/ MOV         R2, R5 
    /*0000cf98*/ LSR         IP, R8, #8 
    /*0000cf9c*/ STR         IP, [SP, #16] 
    /*0000cfa0*/ ADD         R9, R0, R9 
    /*0000cfa4*/ LDR         LR, [SP, #16] 
    /*0000cfa8*/ LSR         IP, R8, #18 
    /*0000cfac*/ MOV         R0, R4 
    /*0000cfb0*/ ORR         LR, LR, R9, LSL #24 
    /*0000cfb4*/ STR         LR, [SP, #16] 
    /*0000cfb8*/ ASR         LR, R9, #8 
    /*0000cfbc*/ STR         LR, [SP, #20] 
    /*0000cfc0*/ ORR         IP, IP, R9, LSL #14 
    /*0000cfc4*/ LDRD        R8, [SP, #16] 
    /*0000cfc8*/ CMP         IP, #1 
    /*0000cfcc*/ STRD        R8, [SP] 
    /*0000cfd0*/ MOVLT       IP, #1 
    /*0000cfd4*/ STR         IP, [SP, #68]               @ 0x44 
    /*0000cfd8*/ BL          0x000000000000AE30 
    /*0000cfdc*/ LDR         R3, [SP, #64]               @ 0x40 
    /*0000cfe0*/ LDR         R2, [R4, #3280]             @ 0xcd0 
    /*0000cfe4*/ LDR         R1, [R4, #252]              @ 0xfc 
    /*0000cfe8*/ ASR         R8, R3, #10 
    /*0000cfec*/ MOV         R3, #100                    @ 0x64 
    /*0000cff0*/ MUL         R3, R3, R7 
    /*0000cff4*/ STR         R1, [R4, #3504]             @ 0xdb0 
    /*0000cff8*/ MUL         R8, R8, R7 
    /*0000cffc*/ CMP         R3, #0 
    /*0000d000*/ ASR         R8, R8, #8 
    /*0000d004*/ LSL         R8, R8, #10 
    /*0000d008*/ STR         R0, [SP, #56]               @ 0x38 
    /*0000d00c*/ ADD         R0, R3, #255                @ 0xff 
    /*0000d010*/ MOVLT       R3, R0 
    /*0000d014*/ LDR         R0, [SP, #48]               @ 0x30 
    /*0000d018*/ ASR         R3, R3, #8 
    /*0000d01c*/ STR         R3, [R4, #3500]             @ 0xdac 
    /*0000d020*/ CMP         R0, R2 
    /*0000d024*/ BLT         RC_NewModeDecision_xea08
    /*0000d028*/ SUB         R0, R0, R2 
    /*0000d02c*/ ADD         R2, R2, #32 
    /*0000d030*/ LSL         R0, R0, #1 
    /*0000d034*/ ASR         R1, R2, #5 
    /*0000d038*/ BL          0x000000000000D038          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d03c*/ STR         R0, [SP, #48]               @ 0x30 
    RC_NewModeDecision_xd040:
    /*0000d040*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0000d044*/ LDR         R0, [SP, #32] 
    /*0000d048*/ LDR         R7, [R4, #3288]             @ 0xcd8 
    /*0000d04c*/ ASR         R6, R3, #5 
    /*0000d050*/ MOV         R1, R6 
    /*0000d054*/ BL          0x000000000000D054          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d058*/ MOV         R1, R6 
    /*0000d05c*/ LDR         R9, [SP, #12] 
    /*0000d060*/ USAT        R6, #6, R0 
    /*0000d064*/ MOV         R0, R7 
    /*0000d068*/ BL          0x000000000000D068          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d06c*/ CMP         R8, R7 
    /*0000d070*/ LDR         R1, [SP, #32] 
    /*0000d074*/ ADD         R6, R9, R6, LSL #2 
    /*0000d078*/ MOVGE       R3, R8 
    /*0000d07c*/ MOVLT       R3, R7 
    /*0000d080*/ LDR         R2, [R6, #228]              @ 0xe4 
    /*0000d084*/ CMP         R1, R3 
    /*0000d088*/ USAT        R3, #6, R0 
    /*0000d08c*/ ADD         R3, R9, R3, LSL #2 
    /*0000d090*/ LDR         R3, [R3, #228]              @ 0xe4 
    /*0000d094*/ SUB         R6, R2, R3 
    /*0000d098*/ BLE         RC_NewModeDecision_xe9b4
    /*0000d09c*/ MOV         R3, #6 
    /*0000d0a0*/ MVN         R1, #127                    @ 0x7f 
    /*0000d0a4*/ MUL         R6, R3, R6 
    /*0000d0a8*/ ASR         R6, R6, #2 
    /*0000d0ac*/ CMP         R6, #256                    @ 0x100 
    /*0000d0b0*/ MOVGE       R6, #256                    @ 0x100 
    /*0000d0b4*/ CMP         R6, R1 
    /*0000d0b8*/ MOVLT       R6, R1 
    RC_NewModeDecision_xd0bc:
    /*0000d0bc*/ LDR         R2, [SP, #32] 
    /*0000d0c0*/ ADD         R3, R4, #3776               @ 0xec0 
    /*0000d0c4*/ LDR         LR, [SP, #48]               @ 0x30 
    /*0000d0c8*/ MVN         IP, #127                    @ 0x7f 
    /*0000d0cc*/ SUB         R8, R2, R8 
    /*0000d0d0*/ LDRD        R2, [R3] 
    /*0000d0d4*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0000d0d8*/ ADD         R0, R8, R8, LSL #1 
    /*0000d0dc*/ LDRD        R8, [SP, #16] 
    /*0000d0e0*/ SUBS        R8, R2, R8 
    /*0000d0e4*/ LSL         R0, R0, #3 
    /*0000d0e8*/ SBC         R9, R3, R9 
    /*0000d0ec*/ CMP         LR, #256                    @ 0x100 
    /*0000d0f0*/ LSR         R8, R8, #10 
    /*0000d0f4*/ MOVGE       LR, #256                    @ 0x100 
    /*0000d0f8*/ CMP         LR, IP 
    /*0000d0fc*/ MOV         R7, LR 
    /*0000d100*/ ORR         R8, R8, R9, LSL #22 
    /*0000d104*/ MOVLT       R7, IP 
    /*0000d108*/ BL          0x000000000000D108          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d10c*/ ADD         R8, R8, R8, LSL #1 
    /*0000d110*/ MVN         R3, #3 
    /*0000d114*/ LDR         R1, [SP, #68]               @ 0x44 
    /*0000d118*/ LSL         R8, R8, #3 
    /*0000d11c*/ CMP         R0, #8 
    /*0000d120*/ MOVLT       R9, R0 
    /*0000d124*/ MOVGE       R9, #8 
    /*0000d128*/ CMP         R9, R3 
    /*0000d12c*/ MOV         R0, R8 
    /*0000d130*/ MOVLT       R9, R3 
    /*0000d134*/ BL          0x000000000000D134          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d138*/ LDR         R3, [R4, #3256]             @ 0xcb8 
    /*0000d13c*/ CMP         R0, #1 
    /*0000d140*/ MOVGE       R0, #1 
    /*0000d144*/ CMP         R3, #640                    @ 0x280 
    /*0000d148*/ ORR         R0, R0, R0, ASR #31 
    /*0000d14c*/ BLE         RC_NewModeDecision_xd174
    /*0000d150*/ CMP         R7, #32 
    /*0000d154*/ MVN         R3, #15 
    /*0000d158*/ MOVGE       R7, #32 
    /*0000d15c*/ CMP         R7, R3 
    /*0000d160*/ MOVLT       R7, R3 
    /*0000d164*/ CMP         R6, #32 
    /*0000d168*/ MOVGE       R6, #32 
    /*0000d16c*/ CMP         R6, R3 
    /*0000d170*/ MOVLT       R6, R3 
    RC_NewModeDecision_xd174:
    /*0000d174*/ LDR         R1, [SP, #40]               @ 0x28 
    /*0000d178*/ ADD         R3, R7, R6 
    /*0000d17c*/ ADD         R3, R3, R9 
    /*0000d180*/ LDR         R2, [R4, #3260]             @ 0xcbc 
    /*0000d184*/ ADD         R3, R3, R0 
    /*0000d188*/ CMP         FP, R1 
    /*0000d18c*/ STR         R0, [R4, #3528]             @ 0xdc8 
    /*0000d190*/ ADD         R2, R3, R2 
    /*0000d194*/ LDR         R0, [SP, #56]               @ 0x38 
    /*0000d198*/ MOVGE       R3, R1 
    /*0000d19c*/ MOVLT       R3, FP 
    /*0000d1a0*/ STR         R7, [R4, #3516]             @ 0xdbc 
    /*0000d1a4*/ LSL         R3, R3, #6 
    /*0000d1a8*/ STR         R6, [R4, #3520]             @ 0xdc0 
    /*0000d1ac*/ STR         R0, [R4, #3280]             @ 0xcd0 
    /*0000d1b0*/ CMP         R2, R3 
    /*0000d1b4*/ LDR         R0, [SP, #32] 
    /*0000d1b8*/ MOV         R1, FP 
    /*0000d1bc*/ STR         R9, [R4, #3524]             @ 0xdc4 
    /*0000d1c0*/ STR         R0, [R4, #3288]             @ 0xcd8 
    /*0000d1c4*/ BLT         RC_NewModeDecision_xd1e4
    /*0000d1c8*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000d1cc*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000d1d0*/ CMP         R3, R0 
    /*0000d1d4*/ MOVLT       R3, R0 
    /*0000d1d8*/ LSL         R3, R3, #6 
    /*0000d1dc*/ CMP         R3, R2 
    /*0000d1e0*/ MOVGE       R3, R2 
    RC_NewModeDecision_xd1e4:
    /*0000d1e4*/ CMP         R5, #5 
    /*0000d1e8*/ CMPNE       R5, #0 
    /*0000d1ec*/ MOV         R2, #0 
    /*0000d1f0*/ STR         R3, [R4, #3260]             @ 0xcbc 
    /*0000d1f4*/ STR         R2, [R4, #3268]             @ 0xcc4 
    /*0000d1f8*/ BNE         RC_NewModeDecision_xe964
    /*0000d1fc*/ LDR         R0, [R4, #3496]             @ 0xda8 
    /*0000d200*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xe4] 
    /*0000d204*/ LDR         R1, [R4, #3272]             @ 0xcc8 
    /*0000d208*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xe4] 
    /*0000d20c*/ ADD         R3, R3, R0 
    /*0000d210*/ LDR         R0, [R4, #1564]             @ 0x61c 
    /*0000d214*/ ADD         R3, R1, R3, ASR #6 
    /*0000d218*/ LDR         R1, [R2] 
    /*0000d21c*/ ASR         R3, R3, #1 
    /*0000d220*/ CMP         R3, R1 
    /*0000d224*/ MOVGE       R3, R1 
    /*0000d228*/ CMP         R0, #1 
    /*0000d22c*/ STR         R3, [R4, #3272]             @ 0xcc8 
    /*0000d230*/ BEQ         RC_NewModeDecision_xee5c
    RC_NewModeDecision_xd234:
    /*0000d234*/ LDR         R1, [SP, #24] 
    RC_NewModeDecision_xd238:
    /*0000d238*/ SUB         R3, R3, R1 
    RC_NewModeDecision_xd23c:
    /*0000d23c*/ LDR         R1, [SP, #40]               @ 0x28 
    /*0000d240*/ CMP         R1, R3 
    /*0000d244*/ BGT         RC_NewModeDecision_xd258
    /*0000d248*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0000d24c*/ CMP         R1, R3 
    /*0000d250*/ MOVLT       SL, R1 
    /*0000d254*/ MOVGE       SL, R3 
    RC_NewModeDecision_xd258:
    /*0000d258*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000d25c*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*0000d260*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000d264*/ STR         R3, [R4, #2004]             @ 0x7d4 
    RC_NewModeDecision_xd268:
    /*0000d268*/ LDR         R1, [SP, #56]               @ 0x38 
    /*0000d26c*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0000d270*/ STR         SL, [R4, #1996]             @ 0x7cc 
    /*0000d274*/ STR         R1, [R4, #1992]             @ 0x7c8 
    /*0000d278*/ SUB         R1, R3, #96                 @ 0x60 
    /*0000d27c*/ CLZ         R1, R1 
    /*0000d280*/ STR         SL, [R2] 
    /*0000d284*/ LSR         R1, R1, #5 
    /*0000d288*/ B           RC_NewModeDecision_xc7f0
    /*0000d28c*/ LDR         R3, [R4, #20] 
    /*0000d290*/ STR         R3, [SP, #32] 
    /*0000d294*/ B           RC_NewModeDecision_xc930
    /*0000d298*/ LDR         R3, [R4, #28] 
    /*0000d29c*/ STR         R3, [SP, #32] 
    /*0000d2a0*/ B           RC_NewModeDecision_xc930
    /*0000d2a4*/ LDR         R3, [R4, #4] 
    /*0000d2a8*/ STR         R3, [SP, #32] 
    /*0000d2ac*/ B           RC_NewModeDecision_xc930
    RC_NewModeDecision_xd2b0:
    /*0000d2b0*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000d2b4*/ LDR         R9, [R4, #1560]             @ 0x618 
    /*0000d2b8*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000d2bc*/ STR         R2, [SP, #12] 
    /*0000d2c0*/ B           RC_NewModeDecision_xc994
    /*0000d2c4*/ LDR         R3, [R4, #12] 
    /*0000d2c8*/ STR         R3, [SP, #52]               @ 0x34 
    RC_NewModeDecision_xd2cc:
    /*0000d2cc*/ LDR         R3, [R4, #3220]             @ 0xc94 
    /*0000d2d0*/ CMP         R3, #0 
    /*0000d2d4*/ ADDNE       R3, R4, R3, LSL #2 
    /*0000d2d8*/ LDRNE       R3, [R3, #3184]             @ 0xc70 
    /*0000d2dc*/ STR         R3, [SP, #72]               @ 0x48 
    /*0000d2e0*/ LDR         R3, [R4, #3252]             @ 0xcb4 
    /*0000d2e4*/ CMP         R3, #2 
    /*0000d2e8*/ BEQ         RC_NewModeDecision_xe4c4
    /*0000d2ec*/ LDR         R2, [R4, #1512]             @ 0x5e8 
    /*0000d2f0*/ LSL         R3, R9, #4 
    /*0000d2f4*/ LDR         R1, [R4, #344]              @ 0x158 
    /*0000d2f8*/ CMP         R2, #3 
    /*0000d2fc*/ LDR         R9, [R4, #56]               @ 0x38 
    /*0000d300*/ STR         R1, [SP, #68]               @ 0x44 
    /*0000d304*/ BEQ         RC_NewModeDecision_xe6f8
    /*0000d308*/ CMP         R2, #5 
    /*0000d30c*/ CMPNE       R2, #0 
    /*0000d310*/ LDR         SL, [R4, #1640]             @ 0x668 
    /*0000d314*/ BEQ         RC_NewModeDecision_xe614
    /*0000d318*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000d31c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000d320*/ STR         R2, [SP, #12] 
    RC_NewModeDecision_xd324:
    /*0000d324*/ MOV         R1, R6 
    /*0000d328*/ MOV         R2, SL 
    /*0000d32c*/ MOV         R0, R4 
    /*0000d330*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000d334*/ BL          0x000000000000AAD8 
    /*0000d338*/ ADD         R2, R4, #3248               @ 0xcb0 
    /*0000d33c*/ MOV         R1, R6 
    /*0000d340*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000d344*/ LDRD        R6, [R2, #-8] 
    /*0000d348*/ MOV         R0, R4 
    /*0000d34c*/ LDR         R2, [SP, #24] 
    /*0000d350*/ STRD        R6, [SP] 
    /*0000d354*/ BL          0x000000000000AE30 
    /*0000d358*/ LDR         R3, [R4, #3280]             @ 0xcd0 
    /*0000d35c*/ CMP         R3, SL 
    /*0000d360*/ STR         R0, [SP, #40]               @ 0x28 
    /*0000d364*/ BGT         RC_NewModeDecision_xe414
    /*0000d368*/ SUB         R0, SL, R3 
    /*0000d36c*/ ADD         R3, R3, #8 
    /*0000d370*/ LSL         R0, R0, #3 
    /*0000d374*/ ASR         R1, R3, #3 
    /*0000d378*/ BL          0x000000000000D378          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d37c*/ STR         R0, [SP, #64]               @ 0x40 
    RC_NewModeDecision_xd380:
    /*0000d380*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0000d384*/ ASR         SL, R9, #5 
    /*0000d388*/ LDR         R0, [SP, #48]               @ 0x30 
    /*0000d38c*/ ADD         R6, R9, #15 
    /*0000d390*/ BL          0x000000000000D390          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000d394*/ LDR         R3, [R4, #3288]             @ 0xcd8 
    /*0000d398*/ CMP         R9, #0 
    /*0000d39c*/ MOV         R1, SL 
    /*0000d3a0*/ MOVGE       R6, R9 
    /*0000d3a4*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000d3a8*/ ASR         R6, R6, #4 
    /*0000d3ac*/ STR         R0, [SP, #48]               @ 0x30 
    /*0000d3b0*/ BL          0x000000000000D3B0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d3b4*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000d3b8*/ MOV         R1, SL 
    /*0000d3bc*/ LDR         R7, [SP, #12] 
    /*0000d3c0*/ USAT        SL, #6, R0 
    /*0000d3c4*/ MOV         R0, R3 
    /*0000d3c8*/ BL          0x000000000000D3C8          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d3cc*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000d3d0*/ ADD         SL, R7, SL, LSL #2 
    /*0000d3d4*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0000d3d8*/ LDR         IP, [SL, #228]              @ 0xe4 
    /*0000d3dc*/ CMP         R2, R3 
    /*0000d3e0*/ USAT        R1, #6, R0 
    /*0000d3e4*/ ADD         R1, R7, R1, LSL #2 
    /*0000d3e8*/ LDR         R1, [R1, #228]              @ 0xe4 
    /*0000d3ec*/ SUB         R1, IP, R1 
    /*0000d3f0*/ BLE         RC_NewModeDecision_xe234
    /*0000d3f4*/ SUB         R0, R9, R6 
    /*0000d3f8*/ CMP         R3, R0 
    /*0000d3fc*/ BLE         RC_NewModeDecision_xe234
    /*0000d400*/ MOV         R6, #6 
    /*0000d404*/ MUL         R6, R6, R1 
    RC_NewModeDecision_xd408:
    /*0000d408*/ LDR         R7, [SP, #56]               @ 0x38 
    /*0000d40c*/ SUB         R0, R2, R9 
    /*0000d410*/ ASR         R1, R9, #4 
    /*0000d414*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0000d418*/ MUL         R0, R7, R0 
    /*0000d41c*/ BL          0x000000000000D41C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d420*/ LDR         R3, [SP, #68]               @ 0x44 
    /*0000d424*/ LDR         R1, [R4, #3300]             @ 0xce4 
    /*0000d428*/ MOV         R9, R0 
    /*0000d42c*/ SUB         R0, R3, R1 
    /*0000d430*/ MUL         R0, R7, R0 
    /*0000d434*/ LSL         R0, R0, #2 
    /*0000d438*/ BL          0x000000000000D438          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d43c*/ LDR         R3, [SP, #64]               @ 0x40 
    /*0000d440*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000d444*/ CMN         R3, #128                    @ 0x80 
    /*0000d448*/ MVNLT       R3, #127                    @ 0x7f 
    /*0000d44c*/ BLT         RC_NewModeDecision_xd45c
    RC_NewModeDecision_xd450:
    /*0000d450*/ LDR         R3, [SP, #64]               @ 0x40 
    /*0000d454*/ CMP         R3, #256                    @ 0x100 
    /*0000d458*/ MOVGE       R3, #256                    @ 0x100 
    RC_NewModeDecision_xd45c:
    /*0000d45c*/ CMN         R6, #128                    @ 0x80 
    /*0000d460*/ SUBLT       R6, R3, #128                @ 0x80 
    /*0000d464*/ BGE         RC_NewModeDecision_xe93c
    RC_NewModeDecision_xd468:
    /*0000d468*/ CMP         R9, #32 
    /*0000d46c*/ MVN         R1, #31 
    /*0000d470*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000d474*/ MOVGE       R9, #32 
    /*0000d478*/ CMP         R9, R1 
    /*0000d47c*/ ADDGE       R6, R6, R9 
    /*0000d480*/ ADDLT       R6, R6, R1 
    /*0000d484*/ CMP         R0, #16 
    /*0000d488*/ MVN         R1, #15 
    /*0000d48c*/ LDR         IP, [R4, #3260]             @ 0xcbc 
    /*0000d490*/ MOVGE       R0, #16 
    /*0000d494*/ CMP         R0, R1 
    /*0000d498*/ ADDGE       R1, R6, R0 
    /*0000d49c*/ ADDLT       R1, R6, R1 
    /*0000d4a0*/ CMP         R8, FP 
    /*0000d4a4*/ STR         R3, [R4, #3280]             @ 0xcd0 
    /*0000d4a8*/ STR         R2, [R4, #3288]             @ 0xcd8 
    /*0000d4ac*/ ADD         R2, R1, IP 
    /*0000d4b0*/ MOVLT       R3, R8 
    /*0000d4b4*/ MOVGE       R3, FP 
    /*0000d4b8*/ LSL         R3, R3, #6 
    /*0000d4bc*/ MOV         R0, R8 
    /*0000d4c0*/ CMP         R2, R3 
    /*0000d4c4*/ BLT         RC_NewModeDecision_xd4e4
    /*0000d4c8*/ LDR         R3, [SP, #32] 
    /*0000d4cc*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000d4d0*/ CMP         R3, R1 
    /*0000d4d4*/ MOVLT       R3, R1 
    /*0000d4d8*/ LSL         R3, R3, #6 
    /*0000d4dc*/ CMP         R3, R2 
    /*0000d4e0*/ MOVGE       R3, R2 
    RC_NewModeDecision_xd4e4:
    /*0000d4e4*/ LDR         R2, [SP, #24] 
    /*0000d4e8*/ STR         R3, [R4, #3260]             @ 0xcbc 
    /*0000d4ec*/ CMP         R2, #5 
    /*0000d4f0*/ CMPNE       R2, #0 
    /*0000d4f4*/ MOV         R2, #0 
    /*0000d4f8*/ STR         R2, [R4, #3268]             @ 0xcc4 
    /*0000d4fc*/ BNE         RC_NewModeDecision_xe434
    /*0000d500*/ LDR         R1, [R4, #3496]             @ 0xda8 
    /*0000d504*/ LDR         R2, [R4, #3272]             @ 0xcc8 
    /*0000d508*/ ADD         R3, R3, R1 
    /*0000d50c*/ LDR         R1, [R4, #1564]             @ 0x61c 
    /*0000d510*/ ADD         R3, R2, R3, ASR #6 
    /*0000d514*/ CMP         R1, #1 
    /*0000d518*/ ASR         R3, R3, #1 
    /*0000d51c*/ STR         R3, [R4, #3272]             @ 0xcc8 
    /*0000d520*/ BEQ         RC_NewModeDecision_xebec
    RC_NewModeDecision_xd524:
    /*0000d524*/ LDR         R2, [SP, #52]               @ 0x34 
    RC_NewModeDecision_xd528:
    /*0000d528*/ SUB         R3, R3, R2 
    RC_NewModeDecision_xd52c:
    /*0000d52c*/ CMP         FP, R3 
    /*0000d530*/ BGT         RC_NewModeDecision_xd544
    /*0000d534*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0000d538*/ CMP         R2, R3 
    /*0000d53c*/ MOVLT       R3, R2 
    /*0000d540*/ STR         R3, [SP, #16] 
    RC_NewModeDecision_xd544:
    /*0000d544*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000d548*/ STR         FP, [R4, #2004]             @ 0x7d4 
    /*0000d54c*/ STR         R3, [R4, #2000]             @ 0x7d0 
    RC_NewModeDecision_xd550:
    /*0000d550*/ LDR         R2, [SP, #40]               @ 0x28 
    /*0000d554*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0000d558*/ STR         R2, [R4, #1992]             @ 0x7c8 
    /*0000d55c*/ SUB         R1, R3, #96                 @ 0x60 
    /*0000d560*/ LDR         R2, [SP, #16] 
    /*0000d564*/ CLZ         R1, R1 
    /*0000d568*/ LSR         R1, R1, #5 
    /*0000d56c*/ STR         R2, [R4, #1996]             @ 0x7cc 
    /*0000d570*/ B           RC_NewModeDecision_xc7f0
    /*0000d574*/ LDR         R3, [R4, #4] 
    /*0000d578*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000d57c*/ B           RC_NewModeDecision_xd2cc
    /*0000d580*/ LDR         R3, [R4, #20] 
    /*0000d584*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000d588*/ B           RC_NewModeDecision_xd2cc
    /*0000d58c*/ LDR         R3, [R4, #28] 
    /*0000d590*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000d594*/ B           RC_NewModeDecision_xd2cc
    RC_NewModeDecision_xd598:
    /*0000d598*/ MOV         R3, #0 
    /*0000d59c*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000d5a0*/ B           RC_NewModeDecision_xd2cc
    RC_NewModeDecision_xd5a4:
    /*0000d5a4*/ LDR         R0, [R4, #3888]             @ 0xf30 
    /*0000d5a8*/ CMP         R5, #6 
    /*0000d5ac*/ LDR         R2, [R4, #236]              @ 0xec 
    /*0000d5b0*/ LDR         R8, [R4, #244]              @ 0xf4 
    /*0000d5b4*/ ADD         R2, R0, R2 
    /*0000d5b8*/ STR         R0, [SP, #48]               @ 0x30 
    /*0000d5bc*/ LDR         R0, [R4, #4] 
    /*0000d5c0*/ BIC         R2, R2, R2, ASR #31 
    /*0000d5c4*/ STR         R2, [SP, #32] 
    /*0000d5c8*/ STR         R0, [SP, #36]               @ 0x24 
    /*0000d5cc*/ BEQ         RC_NewModeDecision_xe76c
    /*0000d5d0*/ CMP         R5, #8 
    /*0000d5d4*/ BEQ         RC_NewModeDecision_xe760
    /*0000d5d8*/ CMP         R5, #4 
    /*0000d5dc*/ LDREQ       R2, [R4, #12] 
    /*0000d5e0*/ STREQ       R2, [SP, #36]               @ 0x24 
    RC_NewModeDecision_xd5e4:
    /*0000d5e4*/ LDR         R2, [R4, #1496]             @ 0x5d8 
    /*0000d5e8*/ CMP         R2, #3 
    /*0000d5ec*/ BEQ         RC_NewModeDecision_xe570
    /*0000d5f0*/ LDR         R3, [R4, #3220]             @ 0xc94 
    /*0000d5f4*/ CMP         R3, #0 
    /*0000d5f8*/ ADDNE       R3, R4, R3, LSL #2 
    /*0000d5fc*/ LDRNE       R3, [R3, #3184]             @ 0xc70 
    /*0000d600*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0000d604*/ LDR         R3, [R4, #3252]             @ 0xcb4 
    /*0000d608*/ CMP         R3, #2 
    /*0000d60c*/ BEQ         RC_NewModeDecision_xe868
    /*0000d610*/ LDR         R3, [R4, #220]              @ 0xdc 
    /*0000d614*/ LDR         R7, [R4, #1512]             @ 0x5e8 
    /*0000d618*/ LDR         R2, [R4, #240]              @ 0xf0 
    /*0000d61c*/ LSL         R3, R3, #4 
    /*0000d620*/ STR         R3, [SP, #16] 
    /*0000d624*/ LDR         R3, [R4, #68]               @ 0x44 
    /*0000d628*/ CMP         R7, #3 
    /*0000d62c*/ LDR         R9, [R4, #248]              @ 0xf8 
    /*0000d630*/ STR         R2, [SP, #56]               @ 0x38 
    /*0000d634*/ STR         R3, [SP, #24] 
    /*0000d638*/ LDR         R3, [R4, #3492]             @ 0xda4 
    /*0000d63c*/ LDR         FP, [R4, #3240]             @ 0xca8 
    /*0000d640*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000d644*/ LDR         R3, [R4, #3244]             @ 0xcac 
    /*0000d648*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000d64c*/ LDR         R3, [R4, #3292]             @ 0xcdc 
    /*0000d650*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000d654*/ BEQ         RC_NewModeDecision_xe6e4
    /*0000d658*/ LDR         SL, [R4, #1640]             @ 0x668 
    /*0000d65c*/ MOV         R1, R6 
    /*0000d660*/ MOV         R0, R4 
    /*0000d664*/ MOV         R2, SL 
    /*0000d668*/ BL          0x000000000000AAD8 
    /*0000d66c*/ ADD         R3, R4, #1632               @ 0x660 
    /*0000d670*/ MOV         R2, SL 
    /*0000d674*/ ADD         R3, R3, #8 
    /*0000d678*/ MOV         R1, R6 
    /*0000d67c*/ MOV         R0, R4 
    /*0000d680*/ BL          0x000000000000B498 
    /*0000d684*/ CMP         R7, #5 
    /*0000d688*/ CMPNE       R7, #0 
    /*0000d68c*/ BNE         RC_NewModeDecision_xec3c
    /*0000d690*/ LDR         LR, [SP, #16] 
    /*0000d694*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000d698*/ LDR         R3, [R4, #3244]             @ 0xcac 
    /*0000d69c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000d6a0*/ LDR         IP, [R4, #3240]             @ 0xca8 
    /*0000d6a4*/ ASR         R1, LR, #31 
    /*0000d6a8*/ MOV         R7, R2 
    /*0000d6ac*/ MUL         R3, LR, R3 
    /*0000d6b0*/ STR         R2, [SP, #12] 
    /*0000d6b4*/ MLA         R3, IP, R1, R3 
    /*0000d6b8*/ LDR         R2, [R4, #3248]             @ 0xcb0 
    /*0000d6bc*/ UMULL       R0, R1, IP, LR 
    /*0000d6c0*/ SUB         R2, R2, #1 
    /*0000d6c4*/ ADD         R1, R3, R1 
    /*0000d6c8*/ ADD         R2, LR, R2, LSL #4 
    /*0000d6cc*/ BL          0x000000000000D6CC          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000d6d0*/ LDR         R3, [R4, #3272]             @ 0xcc8 
    /*0000d6d4*/ CMP         R3, #51                     @ 0x33 
    /*0000d6d8*/ MOVGE       R3, #51                     @ 0x33 
    /*0000d6dc*/ BIC         R3, R3, R3, ASR #31 
    /*0000d6e0*/ ADD         R3, R7, R3, LSL #2 
    /*0000d6e4*/ LDR         R7, [R3, #696]              @ 0x2b8 
    /*0000d6e8*/ LDR         R3, [R4, #3496]             @ 0xda8 
    /*0000d6ec*/ CMP         SL, R0 
    /*0000d6f0*/ BGT         RC_NewModeDecision_xd6fc
    /*0000d6f4*/ CMP         R3, #0 
    /*0000d6f8*/ BLE         RC_NewModeDecision_xd748
    RC_NewModeDecision_xd6fc:
    /*0000d6fc*/ ADD         R1, R0, #256                @ 0x100 
    /*0000d700*/ SUB         R0, SL, R0 
    /*0000d704*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000d708*/ ASR         R1, R1, #8 
    /*0000d70c*/ BL          0x000000000000D70C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d710*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000d714*/ MVN         R2, #255                    @ 0xff 
    /*0000d718*/ CMP         R0, #256                    @ 0x100 
    /*0000d71c*/ MOVGE       R0, #256                    @ 0x100 
    /*0000d720*/ CMP         R0, R2 
    /*0000d724*/ ADDGE       R2, R3, R0 
    /*0000d728*/ ADDLT       R2, R3, R2 
    /*0000d72c*/ CMP         R2, #0 
    /*0000d730*/ MOVLT       R3, #0 
    /*0000d734*/ BLT         RC_NewModeDecision_xd744
    /*0000d738*/ LSL         R3, R7, #6 
    /*0000d73c*/ CMP         R3, R2 
    /*0000d740*/ MOVGE       R3, R2 
    RC_NewModeDecision_xd744:
    /*0000d744*/ STR         R3, [R4, #3496]             @ 0xda8 
    RC_NewModeDecision_xd748:
    /*0000d748*/ LDR         R3, [SP, #24] 
    /*0000d74c*/ LDR         R7, [R4, #3868]             @ 0xf1c 
    /*0000d750*/ LDR         IP, [SP, #52]               @ 0x34 
    /*0000d754*/ MOV         R2, R3 
    /*0000d758*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000d75c*/ LDR         R3, [SP, #64]               @ 0x40 
    /*0000d760*/ ASR         R1, R7, #31 
    /*0000d764*/ CMP         R7, #256                    @ 0x100 
    /*0000d768*/ MUL         R3, R7, R3 
    /*0000d76c*/ MLA         R3, FP, R1, R3 
    /*0000d770*/ UMULL       R0, R1, R7, FP 
    /*0000d774*/ MUL         FP, R7, IP 
    /*0000d778*/ ADD         R1, R3, R1 
    /*0000d77c*/ LSR         R3, R0, #8 
    /*0000d780*/ LSR         IP, R0, #18 
    /*0000d784*/ ORR         R3, R3, R1, LSL #24 
    /*0000d788*/ STR         R3, [SP, #24] 
    /*0000d78c*/ ASR         R3, R1, #8 
    /*0000d790*/ STR         R3, [SP, #28] 
    /*0000d794*/ MOVGT       R3, R2 
    /*0000d798*/ ORR         IP, IP, R1, LSL #14 
    /*0000d79c*/ MULGT       R3, R7, R3 
    /*0000d7a0*/ MOV         R1, R6 
    /*0000d7a4*/ MOV         R0, R4 
    /*0000d7a8*/ ASR         FP, FP, #8 
    /*0000d7ac*/ ASRGT       R3, R3, #8 
    /*0000d7b0*/ STRGT       R3, [SP, #44]               @ 0x2c 
    /*0000d7b4*/ LDRD        R2, [SP, #24] 
    /*0000d7b8*/ CMP         IP, #1 
    /*0000d7bc*/ MOVLT       IP, #1 
    /*0000d7c0*/ STR         IP, [SP, #72]               @ 0x48 
    /*0000d7c4*/ STRD        R2, [SP] 
    /*0000d7c8*/ MOV         R2, R5 
    /*0000d7cc*/ LDR         R3, [SP, #16] 
    /*0000d7d0*/ BL          0x000000000000AE30 
    /*0000d7d4*/ MOV         R3, #100                    @ 0x64 
    /*0000d7d8*/ MUL         R7, R3, R7 
    /*0000d7dc*/ LDR         R3, [R4, #252]              @ 0xfc 
    /*0000d7e0*/ CMP         R7, #0 
    /*0000d7e4*/ ADD         R6, R7, #255                @ 0xff 
    /*0000d7e8*/ STR         R3, [R4, #3504]             @ 0xdb0 
    /*0000d7ec*/ MOVLT       R7, R6 
    /*0000d7f0*/ ASR         R7, R7, #8 
    /*0000d7f4*/ STR         R7, [R4, #3500]             @ 0xdac 
    /*0000d7f8*/ STR         R0, [SP, #52]               @ 0x34 
    /*0000d7fc*/ LDR         R0, [R4, #3280]             @ 0xcd0 
    /*0000d800*/ CMP         R0, SL 
    /*0000d804*/ BLE         RC_NewModeDecision_xe5f0
    /*0000d808*/ ADD         R1, R0, #32 
    /*0000d80c*/ SUB         R0, R0, SL 
    /*0000d810*/ ASR         R1, R1, #5 
    /*0000d814*/ BL          0x000000000000D814          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d818*/ CMP         R7, #120                    @ 0x78 
    /*0000d81c*/ ADDGT       R0, R0, R0, ASR #1 
    /*0000d820*/ RSB         R3, R0, #0 
    RC_NewModeDecision_xd824:
    /*0000d824*/ LDR         R2, [R4, #3256]             @ 0xcb8 
    /*0000d828*/ STR         R2, [SP, #64]               @ 0x40 
    /*0000d82c*/ LSR         R2, R2, #4 
    /*0000d830*/ CMP         R2, #9 
    /*0000d834*/ MOVLS       R1, #10 
    /*0000d838*/ BLS         RC_NewModeDecision_xd848
    /*0000d83c*/ CMP         R2, #200                    @ 0xc8 
    /*0000d840*/ MOVLT       R1, R2 
    /*0000d844*/ MOVGE       R1, #200                    @ 0xc8 
    RC_NewModeDecision_xd848:
    /*0000d848*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000d84c*/ MOV         R0, #10 
    /*0000d850*/ MUL         R0, R0, R3 
    /*0000d854*/ ASR         R7, R2, #5 
    /*0000d858*/ BL          0x000000000000D858          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d85c*/ MOV         R1, R7 
    /*0000d860*/ STR         R0, [SP, #68]               @ 0x44 
    /*0000d864*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000d868*/ BL          0x000000000000D868          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d86c*/ LDR         R6, [R4, #3288]             @ 0xcd8 
    /*0000d870*/ MOV         R1, R7 
    /*0000d874*/ LDR         SL, [SP, #12] 
    /*0000d878*/ USAT        R7, #6, R0 
    /*0000d87c*/ MOV         R0, R6 
    /*0000d880*/ BL          0x000000000000D880          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d884*/ CMP         FP, R6 
    /*0000d888*/ LDR         R1, [SP, #40]               @ 0x28 
    /*0000d88c*/ ADD         R7, SL, R7, LSL #2 
    /*0000d890*/ MOVGE       R3, FP 
    /*0000d894*/ MOVLT       R3, R6 
    /*0000d898*/ LDR         R2, [R7, #228]              @ 0xe4 
    /*0000d89c*/ CMP         R1, R3 
    /*0000d8a0*/ USAT        R3, #6, R0 
    /*0000d8a4*/ ADD         R3, SL, R3, LSL #2 
    /*0000d8a8*/ LDR         R3, [R3, #228]              @ 0xe4 
    /*0000d8ac*/ SUB         R3, R2, R3 
    /*0000d8b0*/ BGT         RC_NewModeDecision_xd8d8
    /*0000d8b4*/ LDR         SL, [SP, #40]               @ 0x28 
    /*0000d8b8*/ CMP         SL, R6 
    /*0000d8bc*/ MOVGE       SL, #0 
    /*0000d8c0*/ MOVLT       SL, #1 
    /*0000d8c4*/ CMP         FP, R6 
    /*0000d8c8*/ MOVLE       SL, #0 
    /*0000d8cc*/ CMP         SL, #0 
    /*0000d8d0*/ STREQ       SL, [SP, #16] 
    /*0000d8d4*/ BEQ         RC_NewModeDecision_xd8fc
    RC_NewModeDecision_xd8d8:
    /*0000d8d8*/ MOV         SL, #6 
    /*0000d8dc*/ MVN         R2, #127                    @ 0x7f 
    /*0000d8e0*/ MUL         R3, SL, R3 
    /*0000d8e4*/ ASR         R3, R3, #2 
    /*0000d8e8*/ CMP         R3, #256                    @ 0x100 
    /*0000d8ec*/ MOVGE       R3, #256                    @ 0x100 
    /*0000d8f0*/ CMP         R3, R2 
    /*0000d8f4*/ MOVLT       R3, R2 
    /*0000d8f8*/ STR         R3, [SP, #16] 
    RC_NewModeDecision_xd8fc:
    /*0000d8fc*/ ADD         R2, R4, #3776               @ 0xec0 
    /*0000d900*/ ADD         R3, R4, #3792               @ 0xed0 
    /*0000d904*/ LDR         R1, [SP, #40]               @ 0x28 
    /*0000d908*/ LDRD        R6, [R2] 
    /*0000d90c*/ SUB         R0, R1, FP 
    /*0000d910*/ LDRD        SL, [R3, #-8] 
    /*0000d914*/ LDRD        R2, [SP, #24] 
    /*0000d918*/ LDR         LR, [SP, #68]               @ 0x44 
    /*0000d91c*/ ADD         R0, R0, R0, LSL #1 
    /*0000d920*/ SUBS        R2, R6, R2 
    /*0000d924*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0000d928*/ SBC         R3, R7, R3 
    /*0000d92c*/ LSL         R0, R0, #3 
    /*0000d930*/ MOV         R6, R2 
    /*0000d934*/ MOV         R7, R3 
    /*0000d938*/ LDRD        R2, [SP, #24] 
    /*0000d93c*/ LSR         IP, R6, #10 
    /*0000d940*/ MVN         R6, #0 
    /*0000d944*/ SUBS        SL, SL, R2 
    /*0000d948*/ ORR         IP, IP, R7, LSL #22 
    /*0000d94c*/ SBC         FP, FP, R3 
    /*0000d950*/ CMP         LR, #256                    @ 0x100 
    /*0000d954*/ ADD         IP, IP, IP, LSL #1 
    /*0000d958*/ MOV         R3, FP 
    /*0000d95c*/ LSR         FP, SL, #10 
    /*0000d960*/ MOVGE       LR, #256                    @ 0x100 
    /*0000d964*/ ORR         FP, FP, R3, LSL #22 
    /*0000d968*/ MVN         R3, #127                    @ 0x7f 
    /*0000d96c*/ CMP         LR, R3 
    /*0000d970*/ LSL         R7, IP, #3 
    /*0000d974*/ ADD         FP, FP, FP, LSL #1 
    /*0000d978*/ MOVGE       R3, LR 
    /*0000d97c*/ STR         R3, [SP, #24] 
    /*0000d980*/ BL          0x000000000000D980          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d984*/ LDR         SL, [SP, #72]               @ 0x48 
    /*0000d988*/ MVN         R2, #3 
    /*0000d98c*/ LSL         FP, FP, #4 
    /*0000d990*/ MOV         R1, SL 
    /*0000d994*/ CMP         R0, #8 
    /*0000d998*/ MOVLT       R3, R0 
    /*0000d99c*/ MOVGE       R3, #8 
    /*0000d9a0*/ CMP         R3, R2 
    /*0000d9a4*/ MOV         R0, R7 
    /*0000d9a8*/ MOVLT       R3, R2 
    /*0000d9ac*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000d9b0*/ BL          0x000000000000D9B0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d9b4*/ MOV         R1, SL 
    /*0000d9b8*/ CMP         R0, #1 
    /*0000d9bc*/ MOVLT       R7, R0 
    /*0000d9c0*/ MOVGE       R7, #1 
    /*0000d9c4*/ CMP         R7, R6 
    /*0000d9c8*/ MOV         R0, FP 
    /*0000d9cc*/ MOVLT       R7, R6 
    /*0000d9d0*/ BL          0x000000000000D9D0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000d9d4*/ LDR         R2, [SP, #64]               @ 0x40 
    /*0000d9d8*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000d9dc*/ CMP         R0, #1 
    /*0000d9e0*/ MOVLT       FP, R0 
    /*0000d9e4*/ MOVGE       FP, #1 
    /*0000d9e8*/ CMP         FP, R6 
    /*0000d9ec*/ MOVLT       FP, R6 
    /*0000d9f0*/ CMP         R2, #640                    @ 0x280 
    /*0000d9f4*/ BLE         RC_NewModeDecision_xda2c
    /*0000d9f8*/ LDR         R1, [SP, #24] 
    /*0000d9fc*/ MVN         R2, #15 
    /*0000da00*/ CMP         R1, #32 
    /*0000da04*/ MOVGE       R1, #32 
    /*0000da08*/ CMP         R1, R2 
    /*0000da0c*/ MOVLT       R1, R2 
    /*0000da10*/ STR         R1, [SP, #24] 
    /*0000da14*/ LDR         R1, [SP, #16] 
    /*0000da18*/ CMP         R1, #32 
    /*0000da1c*/ MOVGE       R1, #32 
    /*0000da20*/ CMP         R1, R2 
    /*0000da24*/ MOVLT       R1, R2 
    /*0000da28*/ STR         R1, [SP, #16] 
    RC_NewModeDecision_xda2c:
    /*0000da2c*/ LDR         R2, [SP, #56]               @ 0x38 
    /*0000da30*/ LDR         R1, [SP, #48]               @ 0x30 
    /*0000da34*/ LDR         SL, [SP, #24] 
    /*0000da38*/ ADD         R6, R2, R1 
    /*0000da3c*/ LDR         R2, [SP, #16] 
    /*0000da40*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0000da44*/ BIC         R6, R6, R6, ASR #31 
    /*0000da48*/ STR         SL, [R4, #3516]             @ 0xdbc 
    /*0000da4c*/ STR         R2, [R4, #3520]             @ 0xdc0 
    /*0000da50*/ LDR         R2, [SP, #32] 
    /*0000da54*/ LSR         R1, R1, #5 
    /*0000da58*/ STR         R3, [R4, #3524]             @ 0xdc4 
    /*0000da5c*/ CMP         R6, R2 
    /*0000da60*/ STR         FP, [R4, #3532]             @ 0xdcc 
    /*0000da64*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000da68*/ MOV         R3, R2 
    /*0000da6c*/ STR         R7, [R4, #3528]             @ 0xdc8 
    /*0000da70*/ MOVLT       R3, R6 
    /*0000da74*/ STR         R3, [SP, #24] 
    /*0000da78*/ BL          0x000000000000DA78          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000da7c*/ LDR         IP, [SP, #40]               @ 0x28 
    /*0000da80*/ LDR         R3, [SP, #16] 
    /*0000da84*/ LDR         R2, [R4, #3260]             @ 0xcbc 
    /*0000da88*/ STR         IP, [R4, #3288]             @ 0xcd8 
    /*0000da8c*/ ADD         SL, SL, R3 
    /*0000da90*/ LDR         IP, [SP, #12] 
    /*0000da94*/ ADD         FP, SL, FP 
    /*0000da98*/ LDR         R3, [SP, #24] 
    /*0000da9c*/ ADD         FP, FP, R7 
    /*0000daa0*/ LDR         LR, [SP, #52]               @ 0x34 
    /*0000daa4*/ LSL         R1, R3, #6 
    /*0000daa8*/ STR         LR, [R4, #3280]             @ 0xcd0 
    /*0000daac*/ USAT        R0, #6, R0 
    /*0000dab0*/ ADD         R0, IP, R0, LSL #2 
    /*0000dab4*/ LDR         R0, [R0, #904]              @ 0x388 
    /*0000dab8*/ ADD         FP, FP, R0 
    /*0000dabc*/ ADD         R2, FP, R2 
    /*0000dac0*/ CMP         R2, R1 
    /*0000dac4*/ BLT         RC_NewModeDecision_xdaec
    /*0000dac8*/ CMP         R9, R8 
    /*0000dacc*/ MOVGE       R1, R9 
    /*0000dad0*/ MOVLT       R1, R8 
    /*0000dad4*/ CMP         R1, R3 
    /*0000dad8*/ MOVGE       R3, R1 
    /*0000dadc*/ LSL         R3, R3, #6 
    /*0000dae0*/ CMP         R3, R2 
    /*0000dae4*/ MOVLT       R1, R3 
    /*0000dae8*/ MOVGE       R1, R2 
    RC_NewModeDecision_xdaec:
    /*0000daec*/ CMP         R5, #5 
    /*0000daf0*/ CMPNE       R5, #0 
    /*0000daf4*/ MOV         R3, #0 
    /*0000daf8*/ STR         R1, [R4, #3260]             @ 0xcbc 
    /*0000dafc*/ STR         R3, [R4, #3268]             @ 0xcc4 
    /*0000db00*/ BNE         RC_NewModeDecision_xe5ac
    /*0000db04*/ LDR         R2, [R4, #3496]             @ 0xda8 
    /*0000db08*/ LDR         R3, [R4, #3272]             @ 0xcc8 
    /*0000db0c*/ ADD         R1, R1, R2 
    /*0000db10*/ LDR         R2, [R4, #1564]             @ 0x61c 
    /*0000db14*/ ADD         R3, R3, R1, ASR #6 
    /*0000db18*/ CMP         R2, #1 
    /*0000db1c*/ ASR         R3, R3, #1 
    /*0000db20*/ STR         R3, [R4, #3272]             @ 0xcc8 
    /*0000db24*/ BEQ         RC_NewModeDecision_xedc4
    RC_NewModeDecision_xdb28:
    /*0000db28*/ LDR         R2, [SP, #36]               @ 0x24 
    RC_NewModeDecision_xdb2c:
    /*0000db2c*/ SUB         R3, R3, R2 
    RC_NewModeDecision_xdb30:
    /*0000db30*/ LDR         R2, [SP, #32] 
    /*0000db34*/ CMP         R2, R3 
    /*0000db38*/ LDRGT       R3, [SP, #32] 
    /*0000db3c*/ BGT         RC_NewModeDecision_xdb48
    /*0000db40*/ CMP         R8, R3 
    /*0000db44*/ MOVLT       R3, R8 
    RC_NewModeDecision_xdb48:
    /*0000db48*/ LDR         R6, [SP, #32] 
    /*0000db4c*/ STR         R8, [R4, #2000]             @ 0x7d0 
    /*0000db50*/ STR         R6, [R4, #2004]             @ 0x7d4 
    RC_NewModeDecision_xdb54:
    /*0000db54*/ LDR         R2, [R4, #188]              @ 0xbc 
    /*0000db58*/ LDR         R0, [R4, #192]              @ 0xc0 
    /*0000db5c*/ ADD         R2, R6, R2 
    /*0000db60*/ CMP         R2, R8 
    /*0000db64*/ MOVCS       R2, R8 
    /*0000db68*/ CMP         R2, R3 
    /*0000db6c*/ MOVGE       R1, R2 
    /*0000db70*/ MOVLT       R1, R3 
    /*0000db74*/ CMP         R0, R8 
    /*0000db78*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0000db7c*/ SUBCC       R2, R8, R0 
    /*0000db80*/ LDR         R0, [SP, #52]               @ 0x34 
    /*0000db84*/ MOVCS       R2, #0 
    /*0000db88*/ CMP         R2, R6 
    /*0000db8c*/ MOVCC       R2, R6 
    /*0000db90*/ CMP         R2, R1 
    /*0000db94*/ STR         R0, [R4, #1992]             @ 0x7c8 
    /*0000db98*/ MOVGE       R2, R1 
    /*0000db9c*/ SUB         R1, R3, #96                 @ 0x60 
    /*0000dba0*/ CLZ         R1, R1 
    /*0000dba4*/ STR         R2, [R4, #1996]             @ 0x7cc 
    /*0000dba8*/ LSR         R1, R1, #5 
    /*0000dbac*/ B           RC_NewModeDecision_xc7f0
    RC_NewModeDecision_xdbb0:
    /*0000dbb0*/ MOV         R0, #0 
    /*0000dbb4*/ STR         R0, [R4, #1992]             @ 0x7c8 
    /*0000dbb8*/ LDR         R2, [R2, #20] 
    /*0000dbbc*/ MOV         IP, #51                     @ 0x33 
    /*0000dbc0*/ STR         R0, [R4, #2004]             @ 0x7d4 
    /*0000dbc4*/ STR         IP, [R4, #2000]             @ 0x7d0 
    /*0000dbc8*/ STR         R2, [R4, #1996]             @ 0x7cc 
    /*0000dbcc*/ B           RC_NewModeDecision_xc7f0
    RC_NewModeDecision_xdbd0:
    /*0000dbd0*/ LDR         R1, [R4, #3264]             @ 0xcc0 
    /*0000dbd4*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0000dbd8*/ LDR         R2, [R4, #3280]             @ 0xcd0 
    /*0000dbdc*/ STR         R1, [R4, #1996]             @ 0x7cc 
    /*0000dbe0*/ SUB         R1, R3, #96                 @ 0x60 
    /*0000dbe4*/ CLZ         R1, R1 
    /*0000dbe8*/ STR         R2, [R4, #1992]             @ 0x7c8 
    /*0000dbec*/ LSR         R1, R1, #5 
    /*0000dbf0*/ B           RC_NewModeDecision_xc7f0
    RC_NewModeDecision_xdbf4:
    /*0000dbf4*/ ADD         R1, R3, #32 
    /*0000dbf8*/ SUB         R0, R3, R9 
    /*0000dbfc*/ ASR         R1, R1, #5 
    /*0000dc00*/ BL          0x000000000000DC00          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000dc04*/ RSB         R6, R0, #0 
    /*0000dc08*/ B           RC_NewModeDecision_xc9f0
    RC_NewModeDecision_xdc0c:
    /*0000dc0c*/ LDR         R3, [SP, #16] 
    /*0000dc10*/ CMP         R3, #6 
    /*0000dc14*/ BEQ         RC_NewModeDecision_xe81c
    /*0000dc18*/ LDR         R3, [SP, #16] 
    /*0000dc1c*/ CMP         R3, #8 
    /*0000dc20*/ BEQ         RC_NewModeDecision_xe584
    /*0000dc24*/ LDR         R3, [SP, #16] 
    /*0000dc28*/ CMP         R3, #4 
    /*0000dc2c*/ BEQ         RC_NewModeDecision_xe584
    /*0000dc30*/ LDR         R3, [SP, #64]               @ 0x40 
    /*0000dc34*/ RSB         R1, R3, R1, LSR #6 
    /*0000dc38*/ CMP         FP, R1 
    /*0000dc3c*/ BGT         RC_NewModeDecision_xdc50
    /*0000dc40*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000dc44*/ CMP         R3, R1 
    /*0000dc48*/ MOVLT       R2, R3 
    /*0000dc4c*/ MOVGE       R2, R1 
    RC_NewModeDecision_xdc50:
    /*0000dc50*/ STR         R2, [SP, #24] 
    RC_NewModeDecision_xdc54:
    /*0000dc54*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000dc58*/ STR         FP, [R4, #2004]             @ 0x7d4 
    /*0000dc5c*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*0000dc60*/ B           RC_NewModeDecision_xcba4
    RC_NewModeDecision_xdc64:
    /*0000dc64*/ CMP         R2, R9 
    /*0000dc68*/ MOVGE       R3, #0 
    /*0000dc6c*/ MOVLT       R3, #1 
    /*0000dc70*/ CMP         R8, R9 
    /*0000dc74*/ MOVLE       R3, #0 
    /*0000dc78*/ CMP         R3, #0 
    /*0000dc7c*/ BEQ         RC_NewModeDecision_xe48c
    /*0000dc80*/ ADD         R9, R1, R1, LSL #1 
    /*0000dc84*/ B           RC_NewModeDecision_xca74
    RC_NewModeDecision_xdc88:
    /*0000dc88*/ LDR         R0, [R4, #244]              @ 0xf4 
    /*0000dc8c*/ CMP         R5, #6 
    /*0000dc90*/ LDR         R2, [R4, #236]              @ 0xec 
    /*0000dc94*/ STR         R0, [SP, #32] 
    /*0000dc98*/ LDR         R0, [R4, #4] 
    /*0000dc9c*/ STR         R2, [SP, #24] 
    /*0000dca0*/ STR         R2, [SP, #16] 
    /*0000dca4*/ STR         R0, [SP, #36]               @ 0x24 
    /*0000dca8*/ BEQ         RC_NewModeDecision_xe958
    /*0000dcac*/ CMP         R5, #8 
    /*0000dcb0*/ BEQ         RC_NewModeDecision_xe94c
    /*0000dcb4*/ CMP         R5, #4 
    /*0000dcb8*/ LDREQ       R2, [R4, #12] 
    /*0000dcbc*/ STREQ       R2, [SP, #36]               @ 0x24 
    RC_NewModeDecision_xdcc0:
    /*0000dcc0*/ LDR         R2, [R4, #1496]             @ 0x5d8 
    /*0000dcc4*/ CMP         R2, #3 
    /*0000dcc8*/ BEQ         RC_NewModeDecision_xe570
    /*0000dccc*/ LDR         R3, [R4, #3220]             @ 0xc94 
    /*0000dcd0*/ CMP         R3, #0 
    /*0000dcd4*/ ADDNE       R3, R4, R3, LSL #2 
    /*0000dcd8*/ LDRNE       R3, [R3, #3184]             @ 0xc70 
    /*0000dcdc*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0000dce0*/ LDR         R3, [R4, #3252]             @ 0xcb4 
    /*0000dce4*/ CMP         R3, #2 
    /*0000dce8*/ BEQ         RC_NewModeDecision_xea7c
    /*0000dcec*/ LDR         R3, [R4, #248]              @ 0xf8 
    /*0000dcf0*/ LDR         R9, [R4, #1512]             @ 0x5e8 
    /*0000dcf4*/ LDR         SL, [R4, #220]              @ 0xdc 
    /*0000dcf8*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000dcfc*/ CMP         R9, #3 
    /*0000dd00*/ LDR         R3, [R4, #56]               @ 0x38 
    /*0000dd04*/ LDR         R8, [R4, #240]              @ 0xf0 
    /*0000dd08*/ LSL         SL, SL, #4 
    /*0000dd0c*/ LDR         FP, [R4, #3244]             @ 0xcac 
    /*0000dd10*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000dd14*/ LDR         R3, [R4, #3492]             @ 0xda4 
    /*0000dd18*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000dd1c*/ LDR         R3, [R4, #3240]             @ 0xca8 
    /*0000dd20*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000dd24*/ LDR         R3, [R4, #3292]             @ 0xcdc 
    /*0000dd28*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000dd2c*/ BEQ         RC_NewModeDecision_xe778
    /*0000dd30*/ LDR         R3, [R4, #1640]             @ 0x668 
    /*0000dd34*/ MOV         R1, R6 
    /*0000dd38*/ MOV         R0, R4 
    /*0000dd3c*/ MOV         R2, R3 
    /*0000dd40*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000dd44*/ BL          0x000000000000AAD8 
    /*0000dd48*/ ADD         R3, R4, #1632               @ 0x660 
    /*0000dd4c*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0000dd50*/ ADD         R3, R3, #8 
    /*0000dd54*/ MOV         R1, R6 
    /*0000dd58*/ MOV         R0, R4 
    /*0000dd5c*/ BL          0x000000000000B498 
    /*0000dd60*/ CMP         R9, #5 
    /*0000dd64*/ CMPNE       R9, #0 
    /*0000dd68*/ BNE         RC_NewModeDecision_xecc4
    /*0000dd6c*/ LDR         R3, [R4, #3244]             @ 0xcac 
    /*0000dd70*/ ASR         R1, SL, #31 
    /*0000dd74*/ LDR         IP, [R4, #3240]             @ 0xca8 
    /*0000dd78*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000dd7c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000dd80*/ STR         R2, [SP, #12] 
    /*0000dd84*/ MUL         R3, SL, R3 
    /*0000dd88*/ MOV         R9, R2 
    /*0000dd8c*/ MLA         R3, IP, R1, R3 
    /*0000dd90*/ LDR         R2, [R4, #3248]             @ 0xcb0 
    /*0000dd94*/ UMULL       R0, R1, IP, SL 
    /*0000dd98*/ SUB         R2, R2, #1 
    /*0000dd9c*/ ADD         R1, R3, R1 
    /*0000dda0*/ ADD         R2, SL, R2, LSL #4 
    /*0000dda4*/ BL          0x000000000000DDA4          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000dda8*/ LDR         R3, [R4, #3272]             @ 0xcc8 
    /*0000ddac*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0000ddb0*/ CMP         R3, #51                     @ 0x33 
    /*0000ddb4*/ MOVGE       R3, #51                     @ 0x33 
    /*0000ddb8*/ BIC         R3, R3, R3, ASR #31 
    /*0000ddbc*/ ADD         R3, R9, R3, LSL #2 
    /*0000ddc0*/ LDR         R9, [R3, #696]              @ 0x2b8 
    /*0000ddc4*/ LDR         R3, [R4, #3496]             @ 0xda8 
    /*0000ddc8*/ CMP         R2, R0 
    /*0000ddcc*/ BGT         RC_NewModeDecision_xddd8
    /*0000ddd0*/ CMP         R3, #0 
    /*0000ddd4*/ BLE         RC_NewModeDecision_xde28
    RC_NewModeDecision_xddd8:
    /*0000ddd8*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000dddc*/ ADD         R1, R0, #256                @ 0x100 
    /*0000dde0*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000dde4*/ ASR         R1, R1, #8 
    /*0000dde8*/ SUB         R0, R3, R0 
    /*0000ddec*/ BL          0x000000000000DDEC          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000ddf0*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0000ddf4*/ MVN         R2, #255                    @ 0xff 
    /*0000ddf8*/ CMP         R0, #256                    @ 0x100 
    /*0000ddfc*/ MOVGE       R0, #256                    @ 0x100 
    /*0000de00*/ CMP         R0, R2 
    /*0000de04*/ ADDGE       R2, R3, R0 
    /*0000de08*/ ADDLT       R2, R3, R2 
    /*0000de0c*/ CMP         R2, #0 
    /*0000de10*/ MOVLT       R3, #0 
    /*0000de14*/ BLT         RC_NewModeDecision_xde24
    /*0000de18*/ LSL         R3, R9, #6 
    /*0000de1c*/ CMP         R3, R2 
    /*0000de20*/ MOVGE       R3, R2 
    RC_NewModeDecision_xde24:
    /*0000de24*/ STR         R3, [R4, #3496]             @ 0xda8 
    RC_NewModeDecision_xde28:
    /*0000de28*/ MOV         R1, R4 
    /*0000de2c*/ MOV         R0, R7 
    /*0000de30*/ BL          0x000000000000DE30          @ RC_DRV_NewModeMovingDecision [R_ARM_CALL: .text+0x1163c] 
    /*0000de34*/ LDR         R3, [R4, #3700]             @ 0xe74 
    /*0000de38*/ LDR         R2, [R4, #256]              @ 0x100 
    /*0000de3c*/ SUB         R9, R3, #2 
    /*0000de40*/ LDR         R1, [R4, #3260]             @ 0xcbc 
    /*0000de44*/ LSL         R2, R2, #6 
    /*0000de48*/ CMP         R9, R0 
    /*0000de4c*/ MOVLT       R9, R0 
    /*0000de50*/ CMP         R3, R9 
    /*0000de54*/ MOVLE       R0, #0 
    /*0000de58*/ MOVGT       R0, #1 
    /*0000de5c*/ CMP         R2, R1 
    /*0000de60*/ MOVHI       R0, #0 
    /*0000de64*/ CMP         R0, #0 
    /*0000de68*/ STREQ       R9, [R4, #3700]             @ 0xe74 
    /*0000de6c*/ BEQ         RC_NewModeDecision_xde80
    /*0000de70*/ ADD         R3, R3, #1 
    /*0000de74*/ CMP         R3, #254                    @ 0xfe 
    /*0000de78*/ MOVGT       R3, #255                    @ 0xff 
    /*0000de7c*/ STR         R3, [R4, #3700]             @ 0xe74 
    RC_NewModeDecision_xde80:
    /*0000de80*/ MOV         R2, R9 
    /*0000de84*/ ASR         R3, R9, #31 
    /*0000de88*/ STRD        R2, [SP, #56]               @ 0x38 
    /*0000de8c*/ MOV         R1, R6 
    /*0000de90*/ LDR         R2, [SP, #64]               @ 0x40 
    /*0000de94*/ MOV         R3, SL 
    /*0000de98*/ LDR         IP, [SP, #60]               @ 0x3c 
    /*0000de9c*/ MUL         R0, R9, FP 
    /*0000dea0*/ UMULL       R6, R7, R9, R2 
    /*0000dea4*/ MLA         R0, R2, IP, R0 
    /*0000dea8*/ MOV         R2, R5 
    /*0000deac*/ ADD         R7, R0, R7 
    /*0000deb0*/ LSR         IP, R6, #18 
    /*0000deb4*/ LSR         SL, R6, #8 
    /*0000deb8*/ MOV         R0, R4 
    /*0000debc*/ ORR         IP, IP, R7, LSL #14 
    /*0000dec0*/ ORR         SL, SL, R7, LSL #24 
    /*0000dec4*/ CMP         IP, #1 
    /*0000dec8*/ ASR         FP, R7, #8 
    /*0000decc*/ STRD        SL, [SP] 
    /*0000ded0*/ MOVLT       IP, #1 
    /*0000ded4*/ STR         IP, [SP, #64]               @ 0x40 
    /*0000ded8*/ BL          0x000000000000AE30 
    /*0000dedc*/ MOV         R3, #100                    @ 0x64 
    /*0000dee0*/ MUL         R3, R3, R9 
    /*0000dee4*/ LDR         R2, [SP, #68]               @ 0x44 
    /*0000dee8*/ LDR         R1, [R4, #252]              @ 0xfc 
    /*0000deec*/ CMP         R3, #0 
    /*0000def0*/ MUL         R9, R9, R2 
    /*0000def4*/ ADD         R2, R3, #255                @ 0xff 
    /*0000def8*/ STR         R1, [R4, #3504]             @ 0xdb0 
    /*0000defc*/ MOVLT       R3, R2 
    /*0000df00*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0000df04*/ ASR         R6, R3, #8 
    /*0000df08*/ STR         R6, [R4, #3500]             @ 0xdac 
    /*0000df0c*/ ASR         R3, R9, #8 
    /*0000df10*/ STR         R0, [SP, #56]               @ 0x38 
    /*0000df14*/ LDR         R0, [R4, #3280]             @ 0xcd0 
    /*0000df18*/ CMP         R2, R0 
    /*0000df1c*/ BLT         RC_NewModeDecision_xe7f8
    /*0000df20*/ ADD         R1, R0, #64                 @ 0x40 
    /*0000df24*/ SUB         R0, R2, R0 
    /*0000df28*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000df2c*/ ASR         R1, R1, #2 
    /*0000df30*/ BL          0x000000000000DF30          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000df34*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000df38*/ MUL         R0, R0, R6 
    /*0000df3c*/ ASR         R0, R0, #4 
    RC_NewModeDecision_xdf40:
    /*0000df40*/ LDR         R2, [R4, #3256]             @ 0xcb8 
    /*0000df44*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000df48*/ LSR         R2, R2, #4 
    /*0000df4c*/ CMP         R2, #9 
    /*0000df50*/ MOVLS       R1, #10 
    /*0000df54*/ BLS         RC_NewModeDecision_xdf64
    /*0000df58*/ CMP         R2, #200                    @ 0xc8 
    /*0000df5c*/ MOVLT       R1, R2 
    /*0000df60*/ MOVGE       R1, #200                    @ 0xc8 
    RC_NewModeDecision_xdf64:
    /*0000df64*/ STR         R3, [SP, #72]               @ 0x48 
    /*0000df68*/ MOV         R2, #10 
    /*0000df6c*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0000df70*/ MUL         R0, R2, R0 
    /*0000df74*/ ASR         R7, R3, #5 
    /*0000df78*/ BL          0x000000000000DF78          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000df7c*/ MOV         R1, R7 
    /*0000df80*/ STR         R0, [SP, #68]               @ 0x44 
    /*0000df84*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000df88*/ BL          0x000000000000DF88          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000df8c*/ LDR         R6, [R4, #3288]             @ 0xcd8 
    /*0000df90*/ MOV         R1, R7 
    /*0000df94*/ LDR         R9, [SP, #12] 
    /*0000df98*/ USAT        R7, #6, R0 
    /*0000df9c*/ MOV         R0, R6 
    /*0000dfa0*/ BL          0x000000000000DFA0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000dfa4*/ LDR         R3, [SP, #72]               @ 0x48 
    /*0000dfa8*/ LDR         IP, [SP, #40]               @ 0x28 
    /*0000dfac*/ ADD         R7, R9, R7, LSL #2 
    /*0000dfb0*/ CMP         R3, R6 
    /*0000dfb4*/ LDR         R1, [R7, #228]              @ 0xe4 
    /*0000dfb8*/ MOVGE       R2, R3 
    /*0000dfbc*/ MOVLT       R2, R6 
    /*0000dfc0*/ CMP         IP, R2 
    /*0000dfc4*/ USAT        R2, #6, R0 
    /*0000dfc8*/ ADD         R2, R9, R2, LSL #2 
    /*0000dfcc*/ LDR         R9, [R2, #228]              @ 0xe4 
    /*0000dfd0*/ SUB         R9, R1, R9 
    /*0000dfd4*/ BLE         RC_NewModeDecision_xe7c8
    /*0000dfd8*/ MOV         R1, #6 
    /*0000dfdc*/ MVN         R2, #127                    @ 0x7f 
    /*0000dfe0*/ MUL         R9, R1, R9 
    RC_NewModeDecision_xdfe4:
    /*0000dfe4*/ ASR         R9, R9, #2 
    /*0000dfe8*/ CMP         R9, #256                    @ 0x100 
    /*0000dfec*/ MOVGE       R9, #256                    @ 0x100 
    /*0000dff0*/ CMP         R9, R2 
    /*0000dff4*/ MOVLT       R9, R2 
    RC_NewModeDecision_xdff8:
    /*0000dff8*/ ADD         R1, R4, #3776               @ 0xec0 
    /*0000dffc*/ ADD         R2, R4, #3792               @ 0xed0 
    /*0000e000*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000e004*/ LDRD        R6, [R1] 
    /*0000e008*/ SUB         R0, R0, R3 
    /*0000e00c*/ LDRD        R2, [R2, #-8] 
    /*0000e010*/ SUBS        R6, R6, SL 
    /*0000e014*/ LDR         R1, [SP, #68]               @ 0x44 
    /*0000e018*/ SBC         R7, R7, FP 
    /*0000e01c*/ SUBS        R2, R2, SL 
    /*0000e020*/ SBC         R3, R3, FP 
    /*0000e024*/ CMP         R1, #256                    @ 0x100 
    /*0000e028*/ LSR         R2, R2, #10 
    /*0000e02c*/ ADD         R0, R0, R0, LSL #1 
    /*0000e030*/ ORR         R2, R2, R3, LSL #22 
    /*0000e034*/ LSR         SL, R6, #10 
    /*0000e038*/ MVN         R3, #127                    @ 0x7f 
    /*0000e03c*/ MOVLT       R6, R1 
    /*0000e040*/ MOVGE       R6, #256                    @ 0x100 
    /*0000e044*/ ADD         R2, R2, R2, LSL #1 
    /*0000e048*/ CMP         R6, R3 
    /*0000e04c*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0000e050*/ LSL         R0, R0, #3 
    /*0000e054*/ LSL         R2, R2, #4 
    /*0000e058*/ MOVLT       R6, R3 
    /*0000e05c*/ STR         R2, [SP, #68]               @ 0x44 
    /*0000e060*/ BL          0x000000000000E060          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000e064*/ ORR         SL, SL, R7, LSL #22 
    /*0000e068*/ MVN         R2, #3 
    /*0000e06c*/ LDR         R1, [SP, #64]               @ 0x40 
    /*0000e070*/ ADD         SL, SL, SL, LSL #1 
    /*0000e074*/ MVN         R7, #0 
    /*0000e078*/ LSL         SL, SL, #3 
    /*0000e07c*/ CMP         R0, #8 
    /*0000e080*/ MOVLT       FP, R0 
    /*0000e084*/ MOVGE       FP, #8 
    /*0000e088*/ CMP         FP, R2 
    /*0000e08c*/ MOV         R0, SL 
    /*0000e090*/ MOVLT       FP, R2 
    /*0000e094*/ BL          0x000000000000E094          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000e098*/ LDR         R1, [SP, #64]               @ 0x40 
    /*0000e09c*/ CMP         R0, #1 
    /*0000e0a0*/ MOVLT       SL, R0 
    /*0000e0a4*/ MOVGE       SL, #1 
    /*0000e0a8*/ CMP         SL, R7 
    /*0000e0ac*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0000e0b0*/ MOVLT       SL, R7 
    /*0000e0b4*/ BL          0x000000000000E0B4          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000e0b8*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000e0bc*/ CMP         R0, #1 
    /*0000e0c0*/ MOVGE       R0, #1 
    /*0000e0c4*/ CMP         R0, R7 
    /*0000e0c8*/ MOVLT       R0, R7 
    /*0000e0cc*/ CMP         R3, #640                    @ 0x280 
    /*0000e0d0*/ BLE         RC_NewModeDecision_xe0f8
    /*0000e0d4*/ CMP         R6, #32 
    /*0000e0d8*/ MVN         R3, #15 
    /*0000e0dc*/ MOVGE       R6, #32 
    /*0000e0e0*/ CMP         R6, R3 
    /*0000e0e4*/ MOVLT       R6, R3 
    /*0000e0e8*/ CMP         R9, #32 
    /*0000e0ec*/ MOVGE       R9, #32 
    /*0000e0f0*/ CMP         R9, R3 
    /*0000e0f4*/ MOVLT       R9, R3 
    RC_NewModeDecision_xe0f8:
    /*0000e0f8*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0000e0fc*/ LDR         R2, [SP, #40]               @ 0x28 
    /*0000e100*/ STR         R6, [R4, #3516]             @ 0xdbc 
    /*0000e104*/ CMP         R3, R2 
    /*0000e108*/ STR         R9, [R4, #3520]             @ 0xdc0 
    /*0000e10c*/ STR         FP, [R4, #3524]             @ 0xdc4 
    /*0000e110*/ ADD         R3, R6, R9 
    /*0000e114*/ STR         SL, [R4, #3528]             @ 0xdc8 
    /*0000e118*/ STR         R0, [R4, #3532]             @ 0xdcc 
    /*0000e11c*/ BGE         RC_NewModeDecision_xe790
    /*0000e120*/ ADD         R3, R3, R0 
    /*0000e124*/ LDR         R2, [R4, #3260]             @ 0xcbc 
    /*0000e128*/ ADD         R3, R3, SL 
    /*0000e12c*/ MOV         R1, #0 
    RC_NewModeDecision_xe130:
    /*0000e130*/ LDR         R0, [SP, #24] 
    /*0000e134*/ ADD         R3, R1, R3 
    /*0000e138*/ ADD         R3, R3, R2 
    /*0000e13c*/ LDR         R2, [SP, #56]               @ 0x38 
    /*0000e140*/ CMP         R8, R0 
    /*0000e144*/ MOV         R1, R8 
    /*0000e148*/ MOVLT       R0, R8 
    /*0000e14c*/ STR         R2, [R4, #3280]             @ 0xcd0 
    /*0000e150*/ LSL         R2, R0, #6 
    /*0000e154*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000e158*/ CMP         R3, R2 
    /*0000e15c*/ STR         R0, [R4, #3288]             @ 0xcd8 
    /*0000e160*/ BLT         RC_NewModeDecision_xe180
    /*0000e164*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000e168*/ LDR         R0, [SP, #32] 
    /*0000e16c*/ CMP         R2, R0 
    /*0000e170*/ MOVLT       R2, R0 
    /*0000e174*/ LSL         R2, R2, #6 
    /*0000e178*/ CMP         R2, R3 
    /*0000e17c*/ MOVGE       R2, R3 
    RC_NewModeDecision_xe180:
    /*0000e180*/ CMP         R5, #5 
    /*0000e184*/ CMPNE       R5, #0 
    /*0000e188*/ MOV         R3, #0 
    /*0000e18c*/ STR         R2, [R4, #3260]             @ 0xcbc 
    /*0000e190*/ STR         R3, [R4, #3268]             @ 0xcc4 
    /*0000e194*/ BNE         RC_NewModeDecision_xe70c
    /*0000e198*/ LDR         R1, [R4, #3496]             @ 0xda8 
    /*0000e19c*/ LDR         R3, [R4, #3272]             @ 0xcc8 
    /*0000e1a0*/ ADD         R2, R2, R1 
    /*0000e1a4*/ LDR         R1, [R4, #1564]             @ 0x61c 
    /*0000e1a8*/ ADD         R3, R3, R2, ASR #6 
    /*0000e1ac*/ CMP         R1, #1 
    /*0000e1b0*/ ASR         R3, R3, #1 
    /*0000e1b4*/ STR         R3, [R4, #3272]             @ 0xcc8 
    /*0000e1b8*/ BEQ         RC_NewModeDecision_xef70
    RC_NewModeDecision_xe1bc:
    /*0000e1bc*/ LDR         R2, [SP, #36]               @ 0x24 
    RC_NewModeDecision_xe1c0:
    /*0000e1c0*/ SUB         R3, R3, R2 
    RC_NewModeDecision_xe1c4:
    /*0000e1c4*/ LDR         R2, [SP, #24] 
    /*0000e1c8*/ CMP         R2, R3 
    /*0000e1cc*/ BGT         RC_NewModeDecision_xe1e0
    /*0000e1d0*/ LDR         R2, [SP, #32] 
    /*0000e1d4*/ CMP         R2, R3 
    /*0000e1d8*/ MOVLT       R3, R2 
    /*0000e1dc*/ STR         R3, [SP, #16] 
    RC_NewModeDecision_xe1e0:
    /*0000e1e0*/ LDR         R3, [SP, #32] 
    /*0000e1e4*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*0000e1e8*/ LDR         R3, [SP, #24] 
    /*0000e1ec*/ STR         R3, [R4, #2004]             @ 0x7d4 
    RC_NewModeDecision_xe1f0:
    /*0000e1f0*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0000e1f4*/ LDR         R2, [R4, #188]              @ 0xbc 
    /*0000e1f8*/ LDR         R1, [SP, #32] 
    /*0000e1fc*/ STR         R3, [R4, #1992]             @ 0x7c8 
    /*0000e200*/ LDR         R3, [SP, #24] 
    /*0000e204*/ ADD         R2, R3, R2 
    /*0000e208*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0000e20c*/ CMP         R2, R1 
    /*0000e210*/ MOVCS       R2, R1 
    /*0000e214*/ LDR         R1, [SP, #16] 
    /*0000e218*/ CMP         R2, R1 
    /*0000e21c*/ MOVLT       R2, R1 
    /*0000e220*/ SUB         R1, R3, #96                 @ 0x60 
    /*0000e224*/ CLZ         R1, R1 
    /*0000e228*/ STR         R2, [R4, #1996]             @ 0x7cc 
    /*0000e22c*/ LSR         R1, R1, #5 
    /*0000e230*/ B           RC_NewModeDecision_xc7f0
    RC_NewModeDecision_xe234:
    /*0000e234*/ CMP         R2, R3 
    /*0000e238*/ BGE         RC_NewModeDecision_xe2fc
    /*0000e23c*/ ADD         R6, R9, R6 
    /*0000e240*/ CMP         R3, R6 
    /*0000e244*/ BGE         RC_NewModeDecision_xe2fc
    /*0000e248*/ LSL         R6, R1, #2 
    /*0000e24c*/ B           RC_NewModeDecision_xd408
    RC_NewModeDecision_xe250:
    /*0000e250*/ LDR         R3, [R4, #184]              @ 0xb8 
    /*0000e254*/ MOV         R7, #10 
    /*0000e258*/ LDR         R2, [R4, #3304]             @ 0xce8 
    /*0000e25c*/ CMN         R3, #1 
    /*0000e260*/ MUL         R7, R7, R2 
    /*0000e264*/ BEQ         RC_NewModeDecision_xed98
    /*0000e268*/ LDR         R2, [SP, #32] 
    /*0000e26c*/ ADD         R2, R3, R2 
    /*0000e270*/ LSL         R2, R2, #6 
    /*0000e274*/ STR         R2, [R4, #3260]             @ 0xcbc 
    /*0000e278*/ LSR         R2, R2, #6 
    RC_NewModeDecision_xe27c:
    /*0000e27c*/ CMP         SL, R3 
    /*0000e280*/ BGT         RC_NewModeDecision_xe294
    /*0000e284*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000e288*/ CMP         R1, R3 
    /*0000e28c*/ MOVLT       R3, R1 
    /*0000e290*/ STR         R3, [SP, #24] 
    RC_NewModeDecision_xe294:
    /*0000e294*/ LDR         R3, [R4, #2588]             @ 0xa1c 
    /*0000e298*/ CMP         R3, #0 
    /*0000e29c*/ LDRNE       R3, [R4, #2592]             @ 0xa20 
    /*0000e2a0*/ MVNEQ       R3, #-134217728             @ 0xf8000000 
    /*0000e2a4*/ CMP         R7, R3 
    /*0000e2a8*/ STR         R3, [R4, #3284]             @ 0xcd4 
    /*0000e2ac*/ BLE         RC_NewModeDecision_xe2bc
    /*0000e2b0*/ LDR         R1, [R4, #3488]             @ 0xda0 
    /*0000e2b4*/ CMP         R1, #1 
    /*0000e2b8*/ SUBEQ       R7, R3, R3, LSR #4 
    RC_NewModeDecision_xe2bc:
    /*0000e2bc*/ LDR         R1, [SP, #24] 
    /*0000e2c0*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0000e2c4*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000e2c8*/ STR         R1, [R4, #1996]             @ 0x7cc 
    /*0000e2cc*/ SUB         R1, R3, #96                 @ 0x60 
    /*0000e2d0*/ CLZ         R1, R1 
    /*0000e2d4*/ STR         R7, [R4, #1992]             @ 0x7c8 
    /*0000e2d8*/ STR         R0, [R4, #2000]             @ 0x7d0 
    /*0000e2dc*/ MOV         R0, #0 
    /*0000e2e0*/ LSR         R1, R1, #5 
    /*0000e2e4*/ STR         SL, [R4, #2004]             @ 0x7d4 
    /*0000e2e8*/ STR         R7, [R4, #3280]             @ 0xcd0 
    /*0000e2ec*/ STR         R2, [R4, #3272]             @ 0xcc8 
    /*0000e2f0*/ STR         R2, [R4, #3276]             @ 0xccc 
    /*0000e2f4*/ STR         R0, [R4, #3252]             @ 0xcb4 
    /*0000e2f8*/ B           RC_NewModeDecision_xc7f0
    RC_NewModeDecision_xe2fc:
    /*0000e2fc*/ LDR         R6, [SP, #56]               @ 0x38 
    /*0000e300*/ SUB         R0, R2, R9 
    /*0000e304*/ ASR         R1, R9, #4 
    /*0000e308*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0000e30c*/ MUL         R0, R6, R0 
    /*0000e310*/ BL          0x000000000000E310          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000e314*/ LDR         R3, [SP, #68]               @ 0x44 
    /*0000e318*/ LDR         R1, [R4, #3300]             @ 0xce4 
    /*0000e31c*/ MOV         R9, R0 
    /*0000e320*/ SUB         R0, R3, R1 
    /*0000e324*/ MUL         R0, R6, R0 
    /*0000e328*/ LSL         R0, R0, #2 
    /*0000e32c*/ BL          0x000000000000E32C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000e330*/ LDR         R3, [SP, #64]               @ 0x40 
    /*0000e334*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000e338*/ CMN         R3, #128                    @ 0x80 
    /*0000e33c*/ MVNLT       R6, #127                    @ 0x7f 
    /*0000e340*/ BLT         RC_NewModeDecision_xd468
    /*0000e344*/ MOV         R6, #0 
    /*0000e348*/ B           RC_NewModeDecision_xd450
    RC_NewModeDecision_xe34c:
    /*0000e34c*/ LDR         IP, [R4, #3244]             @ 0xcac 
    /*0000e350*/ ASR         R1, R3, #31 
    /*0000e354*/ LDR         LR, [R4, #3240]             @ 0xca8 
    /*0000e358*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000e35c*/ LDR         R2, [R4, #3248]             @ 0xcb0 
    /*0000e360*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000e364*/ MUL         IP, R3, IP 
    /*0000e368*/ SUB         R2, R2, #1 
    /*0000e36c*/ MLA         IP, LR, R1, IP 
    /*0000e370*/ ADD         R2, R3, R2, LSL #4 
    /*0000e374*/ UMULL       R0, R1, LR, R3 
    /*0000e378*/ STR         R7, [SP, #12] 
    /*0000e37c*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000e380*/ ADD         R1, IP, R1 
    /*0000e384*/ BL          0x000000000000E384          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000e388*/ LDR         R2, [R4, #3272]             @ 0xcc8 
    /*0000e38c*/ CMP         R2, #51                     @ 0x33 
    /*0000e390*/ MOVGE       R2, #51                     @ 0x33 
    /*0000e394*/ BIC         R2, R2, R2, ASR #31 
    /*0000e398*/ ADD         R2, R7, R2, LSL #2 
    /*0000e39c*/ LDR         R3, [R2, #696]              @ 0x2b8 
    /*0000e3a0*/ LDR         R2, [R4, #3496]             @ 0xda8 
    /*0000e3a4*/ MOV         R7, R3 
    /*0000e3a8*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0000e3ac*/ CMP         R9, R0 
    /*0000e3b0*/ BGT         RC_NewModeDecision_xe3bc
    /*0000e3b4*/ CMP         R2, #0 
    /*0000e3b8*/ BLE         RC_NewModeDecision_xc994
    RC_NewModeDecision_xe3bc:
    /*0000e3bc*/ ADD         R1, R0, #256                @ 0x100 
    /*0000e3c0*/ SUB         R0, R9, R0 
    /*0000e3c4*/ STR         R2, [SP, #68]               @ 0x44 
    /*0000e3c8*/ ASR         R1, R1, #8 
    /*0000e3cc*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000e3d0*/ BL          0x000000000000E3D0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000e3d4*/ LDR         R2, [SP, #68]               @ 0x44 
    /*0000e3d8*/ MVN         R1, #255                    @ 0xff 
    /*0000e3dc*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0000e3e0*/ CMP         R0, #256                    @ 0x100 
    /*0000e3e4*/ MOVGE       R0, #256                    @ 0x100 
    /*0000e3e8*/ CMP         R0, R1 
    /*0000e3ec*/ ADDGE       R2, R2, R0 
    /*0000e3f0*/ ADDLT       R2, R2, R1 
    /*0000e3f4*/ CMP         R2, #0 
    /*0000e3f8*/ MOVLT       R2, #0 
    /*0000e3fc*/ BLT         RC_NewModeDecision_xe40c
    /*0000e400*/ LSL         R1, R7, #6 
    /*0000e404*/ CMP         R1, R2 
    /*0000e408*/ MOVLT       R2, R1 
    RC_NewModeDecision_xe40c:
    /*0000e40c*/ STR         R2, [R4, #3496]             @ 0xda8 
    /*0000e410*/ B           RC_NewModeDecision_xc994
    RC_NewModeDecision_xe414:
    /*0000e414*/ SUB         R0, R3, SL 
    /*0000e418*/ ADD         R3, R3, #8 
    /*0000e41c*/ ADD         R0, R0, R0, LSL #2 
    /*0000e420*/ ASR         R1, R3, #3 
    /*0000e424*/ BL          0x000000000000E424          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000e428*/ RSB         R3, R0, #0 
    /*0000e42c*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000e430*/ B           RC_NewModeDecision_xd380
    RC_NewModeDecision_xe434:
    /*0000e434*/ LDR         R2, [SP, #24] 
    /*0000e438*/ CMP         R2, #6 
    /*0000e43c*/ BEQ         RC_NewModeDecision_xec14
    /*0000e440*/ LDR         R2, [SP, #24] 
    /*0000e444*/ CMP         R2, #8 
    /*0000e448*/ BEQ         RC_NewModeDecision_xebb8
    /*0000e44c*/ LDR         R2, [SP, #24] 
    /*0000e450*/ CMP         R2, #4 
    /*0000e454*/ BEQ         RC_NewModeDecision_xebb8
    /*0000e458*/ LDR         R2, [SP, #72]               @ 0x48 
    /*0000e45c*/ RSB         R3, R2, R3, LSR #6 
    RC_NewModeDecision_xe460:
    /*0000e460*/ CMP         R8, R3 
    /*0000e464*/ STRGT       R8, [SP, #16] 
    /*0000e468*/ BGT         RC_NewModeDecision_xe47c
    /*0000e46c*/ LDR         R2, [SP, #32] 
    /*0000e470*/ CMP         R2, R3 
    /*0000e474*/ MOVLT       R3, R2 
    /*0000e478*/ STR         R3, [SP, #16] 
    RC_NewModeDecision_xe47c:
    /*0000e47c*/ LDR         R3, [SP, #32] 
    /*0000e480*/ STR         R8, [R4, #2004]             @ 0x7d4 
    /*0000e484*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*0000e488*/ B           RC_NewModeDecision_xd550
    RC_NewModeDecision_xe48c:
    /*0000e48c*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000e490*/ SUB         R0, R2, R8 
    /*0000e494*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000e498*/ ADD         R0, R0, R0, LSL #1 
    /*0000e49c*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000e4a0*/ ASR         R1, R3, #4 
    /*0000e4a4*/ BL          0x000000000000E4A4          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000e4a8*/ CMN         R6, #128                    @ 0x80 
    /*0000e4ac*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0000e4b0*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0000e4b4*/ MVNLT       R6, #127                    @ 0x7f 
    /*0000e4b8*/ BLT         RC_NewModeDecision_xcabc
    /*0000e4bc*/ MOV         R9, R3 
    /*0000e4c0*/ B           RC_NewModeDecision_xca9c
    RC_NewModeDecision_xe4c4:
    /*0000e4c4*/ LDR         R3, [R4, #184]              @ 0xb8 
    /*0000e4c8*/ MOV         R7, #10 
    /*0000e4cc*/ LDR         R2, [R4, #3304]             @ 0xce8 
    /*0000e4d0*/ CMN         R3, #1 
    /*0000e4d4*/ MUL         R7, R7, R2 
    /*0000e4d8*/ BEQ         RC_NewModeDecision_xefd0
    /*0000e4dc*/ LDR         R2, [SP, #52]               @ 0x34 
    /*0000e4e0*/ ADD         R2, R3, R2 
    /*0000e4e4*/ LSL         R2, R2, #6 
    /*0000e4e8*/ STR         R2, [R4, #3260]             @ 0xcbc 
    /*0000e4ec*/ LSR         R2, R2, #6 
    RC_NewModeDecision_xe4f0:
    /*0000e4f0*/ CMP         FP, R3 
    /*0000e4f4*/ BGT         RC_NewModeDecision_xe508
    /*0000e4f8*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000e4fc*/ CMP         R1, R3 
    /*0000e500*/ MOVLT       R3, R1 
    /*0000e504*/ STR         R3, [SP, #16] 
    RC_NewModeDecision_xe508:
    /*0000e508*/ LDR         R3, [R4, #2588]             @ 0xa1c 
    /*0000e50c*/ CMP         R3, #0 
    /*0000e510*/ LDRNE       R3, [R4, #2592]             @ 0xa20 
    /*0000e514*/ MVNEQ       R3, #-134217728             @ 0xf8000000 
    /*0000e518*/ CMP         R7, R3 
    /*0000e51c*/ STR         R3, [R4, #3284]             @ 0xcd4 
    /*0000e520*/ BLE         RC_NewModeDecision_xe530
    /*0000e524*/ LDR         R1, [R4, #3488]             @ 0xda0 
    /*0000e528*/ CMP         R1, #1 
    /*0000e52c*/ SUBEQ       R7, R3, R3, LSR #4 
    RC_NewModeDecision_xe530:
    /*0000e530*/ LDR         R1, [SP, #16] 
    /*0000e534*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0000e538*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000e53c*/ STR         R1, [R4, #1996]             @ 0x7cc 
    /*0000e540*/ SUB         R1, R3, #96                 @ 0x60 
    /*0000e544*/ CLZ         R1, R1 
    /*0000e548*/ STR         R7, [R4, #1992]             @ 0x7c8 
    /*0000e54c*/ STR         R0, [R4, #2000]             @ 0x7d0 
    /*0000e550*/ MOV         R0, #0 
    /*0000e554*/ LSR         R1, R1, #5 
    /*0000e558*/ STR         FP, [R4, #2004]             @ 0x7d4 
    /*0000e55c*/ STR         R7, [R4, #3280]             @ 0xcd0 
    /*0000e560*/ STR         R2, [R4, #3272]             @ 0xcc8 
    /*0000e564*/ STR         R2, [R4, #3276]             @ 0xccc 
    /*0000e568*/ STR         R0, [R4, #3252]             @ 0xcb4 
    /*0000e56c*/ B           RC_NewModeDecision_xc7f0
    RC_NewModeDecision_xe570:
    /*0000e570*/ LDR         R0, [R4, #3264]             @ 0xcc0 
    /*0000e574*/ LDR         R2, [R4, #3280]             @ 0xcd0 
    /*0000e578*/ STR         R0, [R4, #1996]             @ 0x7cc 
    /*0000e57c*/ STR         R2, [R4, #1992]             @ 0x7c8 
    /*0000e580*/ B           RC_NewModeDecision_xc7f0
    RC_NewModeDecision_xe584:
    /*0000e584*/ LDR         R3, [SP, #32] 
    /*0000e588*/ RSB         R1, R3, R1, LSR #6 
    /*0000e58c*/ CMP         FP, R1 
    /*0000e590*/ STRGT       FP, [SP, #24] 
    /*0000e594*/ BGT         RC_NewModeDecision_xdc54
    /*0000e598*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000e59c*/ CMP         R3, R1 
    /*0000e5a0*/ MOVGE       R3, R1 
    /*0000e5a4*/ STR         R3, [SP, #24] 
    /*0000e5a8*/ B           RC_NewModeDecision_xdc54
    RC_NewModeDecision_xe5ac:
    /*0000e5ac*/ CMP         R5, #6 
    /*0000e5b0*/ BEQ         RC_NewModeDecision_xecd4
    /*0000e5b4*/ CMP         R5, #8 
    /*0000e5b8*/ BEQ         RC_NewModeDecision_xec9c
    /*0000e5bc*/ CMP         R5, #4 
    /*0000e5c0*/ BEQ         RC_NewModeDecision_xec9c
    /*0000e5c4*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*0000e5c8*/ RSB         R3, R3, R1, LSR #6 
    /*0000e5cc*/ CMP         R6, R3 
    /*0000e5d0*/ MOVGT       R3, R6 
    /*0000e5d4*/ BGT         RC_NewModeDecision_xe5e0
    /*0000e5d8*/ CMP         R9, R3 
    /*0000e5dc*/ MOVLT       R3, R9 
    RC_NewModeDecision_xe5e0:
    /*0000e5e0*/ MOV         R8, R9 
    /*0000e5e4*/ STR         R9, [R4, #2000]             @ 0x7d0 
    /*0000e5e8*/ STR         R6, [R4, #2004]             @ 0x7d4 
    /*0000e5ec*/ B           RC_NewModeDecision_xdb54
    RC_NewModeDecision_xe5f0:
    /*0000e5f0*/ CMP         R7, #99                     @ 0x63 
    /*0000e5f4*/ BGT         RC_NewModeDecision_xe9f8
    /*0000e5f8*/ ADD         R1, R0, #64                 @ 0x40 
    /*0000e5fc*/ SUB         R0, SL, R0 
    /*0000e600*/ ASR         R1, R1, #2 
    /*0000e604*/ BL          0x000000000000E604          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000e608*/ MUL         R3, R0, R7 
    /*0000e60c*/ ASR         R3, R3, #4 
    /*0000e610*/ B           RC_NewModeDecision_xd824
    RC_NewModeDecision_xe614:
    /*0000e614*/ LDR         IP, [R4, #3244]             @ 0xcac 
    /*0000e618*/ ASR         R1, R3, #31 
    /*0000e61c*/ LDR         LR, [R4, #3240]             @ 0xca8 
    /*0000e620*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000e624*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000e628*/ STR         R2, [SP, #12] 
    /*0000e62c*/ MUL         IP, R3, IP 
    /*0000e630*/ MOV         R7, R2 
    /*0000e634*/ MLA         IP, LR, R1, IP 
    /*0000e638*/ LDR         R2, [R4, #3248]             @ 0xcb0 
    /*0000e63c*/ UMULL       R0, R1, LR, R3 
    /*0000e640*/ SUB         R2, R2, #1 
    /*0000e644*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000e648*/ ADD         R2, R3, R2, LSL #4 
    /*0000e64c*/ ADD         R1, IP, R1 
    /*0000e650*/ BL          0x000000000000E650          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000e654*/ LDR         R2, [R4, #3272]             @ 0xcc8 
    /*0000e658*/ CMP         R2, #51                     @ 0x33 
    /*0000e65c*/ MOVGE       R2, #51                     @ 0x33 
    /*0000e660*/ BIC         R2, R2, R2, ASR #31 
    /*0000e664*/ ADD         R2, R7, R2, LSL #2 
    /*0000e668*/ LDR         R3, [R2, #696]              @ 0x2b8 
    /*0000e66c*/ LDR         R2, [R4, #3496]             @ 0xda8 
    /*0000e670*/ MOV         R7, R3 
    /*0000e674*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000e678*/ CMP         SL, R0 
    /*0000e67c*/ BGT         RC_NewModeDecision_xe688
    /*0000e680*/ CMP         R2, #0 
    /*0000e684*/ BLE         RC_NewModeDecision_xd324
    RC_NewModeDecision_xe688:
    /*0000e688*/ SUB         IP, SL, R0 
    /*0000e68c*/ ADD         R1, R0, #32 
    /*0000e690*/ STR         R2, [SP, #64]               @ 0x40 
    /*0000e694*/ ASR         R1, R1, #5 
    /*0000e698*/ LSL         R0, IP, #3 
    /*0000e69c*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000e6a0*/ BL          0x000000000000E6A0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000e6a4*/ LDR         R2, [SP, #64]               @ 0x40 
    /*0000e6a8*/ MVN         R1, #255                    @ 0xff 
    /*0000e6ac*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000e6b0*/ CMP         R0, #256                    @ 0x100 
    /*0000e6b4*/ MOVGE       R0, #256                    @ 0x100 
    /*0000e6b8*/ CMP         R0, R1 
    /*0000e6bc*/ ADDGE       R1, R2, R0 
    /*0000e6c0*/ ADDLT       R1, R2, R1 
    /*0000e6c4*/ CMP         R1, #0 
    /*0000e6c8*/ MOVLT       R2, #0 
    /*0000e6cc*/ BLT         RC_NewModeDecision_xe6dc
    /*0000e6d0*/ LSL         R2, R7, #6 
    /*0000e6d4*/ CMP         R2, R1 
    /*0000e6d8*/ MOVGE       R2, R1 
    RC_NewModeDecision_xe6dc:
    /*0000e6dc*/ STR         R2, [R4, #3496]             @ 0xda8 
    /*0000e6e0*/ B           RC_NewModeDecision_xd324
    RC_NewModeDecision_xe6e4:
    /*0000e6e4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000e6e8*/ LDR         SL, [R4, #1560]             @ 0x618 
    /*0000e6ec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000e6f0*/ STR         R3, [SP, #12] 
    /*0000e6f4*/ B           RC_NewModeDecision_xd748
    RC_NewModeDecision_xe6f8:
    /*0000e6f8*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000e6fc*/ LDR         SL, [R4, #1560]             @ 0x618 
    /*0000e700*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000e704*/ STR         R2, [SP, #12] 
    /*0000e708*/ B           RC_NewModeDecision_xd324
    RC_NewModeDecision_xe70c:
    /*0000e70c*/ CMP         R5, #6 
    /*0000e710*/ BEQ         RC_NewModeDecision_xee84
    /*0000e714*/ CMP         R5, #8 
    /*0000e718*/ BEQ         RC_NewModeDecision_xed5c
    /*0000e71c*/ CMP         R5, #4 
    /*0000e720*/ BEQ         RC_NewModeDecision_xed5c
    /*0000e724*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*0000e728*/ RSB         R3, R3, R2, LSR #6 
    /*0000e72c*/ CMP         R8, R3 
    /*0000e730*/ STRGT       R8, [SP, #16] 
    /*0000e734*/ BGT         RC_NewModeDecision_xe748
    /*0000e738*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000e73c*/ CMP         R2, R3 
    /*0000e740*/ MOVLT       R3, R2 
    /*0000e744*/ STR         R3, [SP, #16] 
    RC_NewModeDecision_xe748:
    /*0000e748*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000e74c*/ STR         R8, [SP, #24] 
    /*0000e750*/ STR         R8, [R4, #2004]             @ 0x7d4 
    /*0000e754*/ STR         R3, [SP, #32] 
    /*0000e758*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*0000e75c*/ B           RC_NewModeDecision_xe1f0
    RC_NewModeDecision_xe760:
    /*0000e760*/ LDR         R2, [R4, #20] 
    /*0000e764*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000e768*/ B           RC_NewModeDecision_xd5e4
    RC_NewModeDecision_xe76c:
    /*0000e76c*/ LDR         R2, [R4, #28] 
    /*0000e770*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000e774*/ B           RC_NewModeDecision_xd5e4
    RC_NewModeDecision_xe778:
    /*0000e778*/ LDR         R2, [R4, #1560]             @ 0x618 
    /*0000e77c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000e780*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000e784*/ STR         R3, [SP, #12] 
    /*0000e788*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000e78c*/ B           RC_NewModeDecision_xde28
    RC_NewModeDecision_xe790:
    /*0000e790*/ ADD         R3, R3, R0 
    /*0000e794*/ ADD         R3, R3, SL 
    /*0000e798*/ CMP         R3, #0 
    /*0000e79c*/ LDRLE       R2, [R4, #3260]             @ 0xcbc 
    /*0000e7a0*/ MOVLE       R1, #0 
    /*0000e7a4*/ BLE         RC_NewModeDecision_xe130
    /*0000e7a8*/ LDR         R1, [R4, #256]              @ 0x100 
    /*0000e7ac*/ LDR         R2, [R4, #3260]             @ 0xcbc 
    /*0000e7b0*/ CMP         R2, R1, LSL #6 
    /*0000e7b4*/ ADDCS       R3, R9, R0 
    /*0000e7b8*/ MVNCS       R1, #5 
    /*0000e7bc*/ ADDCS       R3, R3, SL 
    /*0000e7c0*/ MOVCC       R1, #0 
    /*0000e7c4*/ B           RC_NewModeDecision_xe130
    RC_NewModeDecision_xe7c8:
    /*0000e7c8*/ LDR         R2, [SP, #40]               @ 0x28 
    /*0000e7cc*/ CMP         R2, R6 
    /*0000e7d0*/ MOVGE       R2, #0 
    /*0000e7d4*/ MOVLT       R2, #1 
    /*0000e7d8*/ CMP         R3, R6 
    /*0000e7dc*/ MOVLE       R2, #0 
    /*0000e7e0*/ CMP         R2, #0 
    /*0000e7e4*/ MOVEQ       R9, R2 
    /*0000e7e8*/ BEQ         RC_NewModeDecision_xdff8
    /*0000e7ec*/ ADD         R9, R9, R9, LSL #1 
    /*0000e7f0*/ MVN         R2, #127                    @ 0x7f 
    /*0000e7f4*/ B           RC_NewModeDecision_xdfe4
    RC_NewModeDecision_xe7f8:
    /*0000e7f8*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000e7fc*/ ADD         R1, R0, #32 
    /*0000e800*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000e804*/ ASR         R1, R1, #5 
    /*0000e808*/ SUB         R0, R0, R3 
    /*0000e80c*/ BL          0x000000000000E80C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000e810*/ LDR         R3, [SP, #68]               @ 0x44 
    /*0000e814*/ RSB         R0, R0, #0 
    /*0000e818*/ B           RC_NewModeDecision_xdf40
    RC_NewModeDecision_xe81c:
    /*0000e81c*/ LDR         R3, [R4, #3276]             @ 0xccc 
    /*0000e820*/ LDR         R0, [R4, #1564]             @ 0x61c 
    /*0000e824*/ ADD         R3, R3, R1, LSR #6 
    /*0000e828*/ CMP         R0, #1 
    /*0000e82c*/ ASR         R3, R3, #1 
    /*0000e830*/ STR         R3, [R4, #3276]             @ 0xccc 
    /*0000e834*/ BEQ         RC_NewModeDecision_xee34
    RC_NewModeDecision_xe838:
    /*0000e838*/ LDR         R1, [SP, #32] 
    RC_NewModeDecision_xe83c:
    /*0000e83c*/ SUB         R3, R3, R1 
    RC_NewModeDecision_xe840:
    /*0000e840*/ CMP         FP, R3 
    /*0000e844*/ BGT         RC_NewModeDecision_xe854
    /*0000e848*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0000e84c*/ CMP         R2, R3 
    /*0000e850*/ MOVGE       R2, R3 
    RC_NewModeDecision_xe854:
    /*0000e854*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000e858*/ STR         R2, [SP, #24] 
    /*0000e85c*/ STR         FP, [R4, #2004]             @ 0x7d4 
    /*0000e860*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*0000e864*/ B           RC_NewModeDecision_xcba4
    RC_NewModeDecision_xe868:
    /*0000e868*/ LDR         R3, [R4, #184]              @ 0xb8 
    /*0000e86c*/ MOV         R7, #10 
    /*0000e870*/ LDR         R2, [R4, #3304]             @ 0xce8 
    /*0000e874*/ CMN         R3, #1 
    /*0000e878*/ MUL         R7, R7, R2 
    /*0000e87c*/ BEQ         RC_NewModeDecision_xf120
    /*0000e880*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0000e884*/ ADD         R2, R3, R2 
    /*0000e888*/ LSL         R2, R2, #6 
    /*0000e88c*/ STR         R2, [R4, #3260]             @ 0xcbc 
    /*0000e890*/ LSR         R2, R2, #6 
    RC_NewModeDecision_xe894:
    /*0000e894*/ LDR         R1, [SP, #32] 
    /*0000e898*/ CMP         R1, R3 
    /*0000e89c*/ LDRGT       R1, [SP, #32] 
    /*0000e8a0*/ BGT         RC_NewModeDecision_xe8b0
    /*0000e8a4*/ CMP         R8, R3 
    /*0000e8a8*/ MOVLT       R1, R8 
    /*0000e8ac*/ MOVGE       R1, R3 
    RC_NewModeDecision_xe8b0:
    /*0000e8b0*/ LDR         R3, [R4, #2588]             @ 0xa1c 
    /*0000e8b4*/ CMP         R3, #0 
    /*0000e8b8*/ LDRNE       R3, [R4, #2592]             @ 0xa20 
    /*0000e8bc*/ MVNEQ       R3, #-134217728             @ 0xf8000000 
    /*0000e8c0*/ CMP         R7, R3 
    /*0000e8c4*/ STR         R3, [R4, #3284]             @ 0xcd4 
    /*0000e8c8*/ BLE         RC_NewModeDecision_xe8d8
    /*0000e8cc*/ LDR         R0, [R4, #3488]             @ 0xda0 
    /*0000e8d0*/ CMP         R0, #1 
    /*0000e8d4*/ SUBEQ       R7, R3, R3, LSR #4 
    RC_NewModeDecision_xe8d8:
    /*0000e8d8*/ STR         R1, [R4, #1996]             @ 0x7cc 
    /*0000e8dc*/ SUB         R1, IP, #96                 @ 0x60 
    /*0000e8e0*/ CLZ         R1, R1 
    /*0000e8e4*/ MOV         R3, IP 
    /*0000e8e8*/ LDR         IP, [SP, #32] 
    /*0000e8ec*/ MOV         R0, #0 
    /*0000e8f0*/ LSR         R1, R1, #5 
    /*0000e8f4*/ STR         R7, [R4, #1992]             @ 0x7c8 
    /*0000e8f8*/ STR         R8, [R4, #2000]             @ 0x7d0 
    RC_NewModeDecision_xe8fc:
    /*0000e8fc*/ STR         IP, [R4, #2004]             @ 0x7d4 
    /*0000e900*/ STR         R7, [R4, #3280]             @ 0xcd0 
    /*0000e904*/ STR         R2, [R4, #3272]             @ 0xcc8 
    /*0000e908*/ STR         R2, [R4, #3276]             @ 0xccc 
    /*0000e90c*/ STR         R0, [R4, #3252]             @ 0xcb4 
    /*0000e910*/ B           RC_NewModeDecision_xc7f0
    RC_NewModeDecision_xe914:
    /*0000e914*/ LDR         R2, [R4, #3144]             @ 0xc48 
    /*0000e918*/ CMP         R2, #1 
    /*0000e91c*/ BEQ         RC_NewModeDecision_xcb78
    /*0000e920*/ LDR         R2, [R4, #3124]             @ 0xc34 
    /*0000e924*/ LDR         R1, [SP, #12] 
    /*0000e928*/ ADD         R2, R1, R2 
    /*0000e92c*/ LDRB        R2, [R2, #560]              @ 0x230 
    /*0000e930*/ CMP         R2, R3 
    /*0000e934*/ BCS         RC_NewModeDecision_xcb80
    /*0000e938*/ B           RC_NewModeDecision_xcb7c
    RC_NewModeDecision_xe93c:
    /*0000e93c*/ CMP         R6, #256                    @ 0x100 
    /*0000e940*/ ADDLE       R6, R3, R6 
    /*0000e944*/ ADDGT       R6, R3, #256                @ 0x100 
    /*0000e948*/ B           RC_NewModeDecision_xd468
    RC_NewModeDecision_xe94c:
    /*0000e94c*/ LDR         R2, [R4, #20] 
    /*0000e950*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000e954*/ B           RC_NewModeDecision_xdcc0
    RC_NewModeDecision_xe958:
    /*0000e958*/ LDR         R2, [R4, #28] 
    /*0000e95c*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000e960*/ B           RC_NewModeDecision_xdcc0
    RC_NewModeDecision_xe964:
    /*0000e964*/ CMP         R5, #6 
    /*0000e968*/ BEQ         RC_NewModeDecision_xeefc
    /*0000e96c*/ CMP         R5, #8 
    /*0000e970*/ BEQ         RC_NewModeDecision_xef98
    /*0000e974*/ CMP         R5, #4 
    /*0000e978*/ BEQ         RC_NewModeDecision_xf0a4
    /*0000e97c*/ LDR         R2, [SP, #72]               @ 0x48 
    /*0000e980*/ RSB         SL, R2, R3, LSR #6 
    /*0000e984*/ CMP         FP, SL 
    /*0000e988*/ MOVGT       SL, FP 
    /*0000e98c*/ BGT         RC_NewModeDecision_xe99c
    /*0000e990*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000e994*/ CMP         R3, SL 
    /*0000e998*/ MOVLT       SL, R3 
    RC_NewModeDecision_xe99c:
    /*0000e99c*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000e9a0*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xe4] 
    /*0000e9a4*/ STR         FP, [R4, #2004]             @ 0x7d4 
    /*0000e9a8*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xe4] 
    /*0000e9ac*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*0000e9b0*/ B           RC_NewModeDecision_xd268
    RC_NewModeDecision_xe9b4:
    /*0000e9b4*/ LDR         R3, [SP, #32] 
    /*0000e9b8*/ CMP         R3, R7 
    /*0000e9bc*/ MOVGE       R3, #0 
    /*0000e9c0*/ MOVLT       R3, #1 
    /*0000e9c4*/ CMP         R8, R7 
    /*0000e9c8*/ MOVLE       R3, #0 
    /*0000e9cc*/ CMP         R3, #0 
    /*0000e9d0*/ MOVEQ       R6, R3 
    /*0000e9d4*/ BEQ         RC_NewModeDecision_xd0bc
    /*0000e9d8*/ ADD         R6, R6, R6, LSL #1 
    /*0000e9dc*/ MVN         R3, #127                    @ 0x7f 
    /*0000e9e0*/ ASR         R6, R6, #2 
    /*0000e9e4*/ CMP         R6, #256                    @ 0x100 
    /*0000e9e8*/ MOVGE       R6, #256                    @ 0x100 
    /*0000e9ec*/ CMP         R6, R3 
    /*0000e9f0*/ MOVLT       R6, R3 
    /*0000e9f4*/ B           RC_NewModeDecision_xd0bc
    RC_NewModeDecision_xe9f8:
    /*0000e9f8*/ SUB         R3, R7, #100                @ 0x64 
    /*0000e9fc*/ ASR         R3, R3, #3 
    /*0000ea00*/ RSB         R3, R3, #0 
    /*0000ea04*/ B           RC_NewModeDecision_xd824
    RC_NewModeDecision_xea08:
    /*0000ea08*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000ea0c*/ ADD         R1, R2, #32 
    /*0000ea10*/ SUB         R0, R2, R3 
    /*0000ea14*/ ASR         R1, R1, #5 
    /*0000ea18*/ BL          0x000000000000EA18          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000ea1c*/ RSB         R3, R0, #0 
    /*0000ea20*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000ea24*/ B           RC_NewModeDecision_xd040
    RC_NewModeDecision_xea28:
    /*0000ea28*/ LDR         R3, [R4, #3260]             @ 0xcbc 
    /*0000ea2c*/ CMP         R3, #1920                   @ 0x780 
    /*0000ea30*/ BLT         RC_NewModeDecision_xcf3c
    RC_NewModeDecision_xea34:
    /*0000ea34*/ SUB         R3, R2, R7 
    /*0000ea38*/ CMP         R3, #0 
    /*0000ea3c*/ RSBLT       R3, R3, #0 
    /*0000ea40*/ CMP         R3, #19 
    /*0000ea44*/ BGT         RC_NewModeDecision_xcf50
    /*0000ea48*/ B           RC_NewModeDecision_xcf64
    RC_NewModeDecision_xea4c:
    /*0000ea4c*/ LDR         R2, [R4, #1560]             @ 0x618 
    /*0000ea50*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000ea54*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000ea58*/ STR         R3, [SP, #12] 
    /*0000ea5c*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000ea60*/ B           RC_NewModeDecision_xcecc
    RC_NewModeDecision_xea64:
    /*0000ea64*/ LDR         R2, [R4, #20] 
    /*0000ea68*/ STR         R2, [SP, #24] 
    /*0000ea6c*/ B           RC_NewModeDecision_xccd8
    RC_NewModeDecision_xea70:
    /*0000ea70*/ LDR         R2, [R4, #28] 
    /*0000ea74*/ STR         R2, [SP, #24] 
    /*0000ea78*/ B           RC_NewModeDecision_xccd8
    RC_NewModeDecision_xea7c:
    /*0000ea7c*/ LDR         R3, [R4, #184]              @ 0xb8 
    /*0000ea80*/ MOV         R7, #10 
    /*0000ea84*/ LDR         R2, [R4, #3304]             @ 0xce8 
    /*0000ea88*/ CMN         R3, #1 
    /*0000ea8c*/ MUL         R7, R7, R2 
    /*0000ea90*/ BEQ         RC_NewModeDecision_xf04c
    /*0000ea94*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0000ea98*/ ADD         R2, R3, R2 
    /*0000ea9c*/ LSL         R2, R2, #6 
    /*0000eaa0*/ STR         R2, [R4, #3260]             @ 0xcbc 
    /*0000eaa4*/ LSR         R2, R2, #6 
    RC_NewModeDecision_xeaa8:
    /*0000eaa8*/ LDR         R1, [SP, #24] 
    /*0000eaac*/ CMP         R1, R3 
    /*0000eab0*/ BGT         RC_NewModeDecision_xeac4
    /*0000eab4*/ LDR         R1, [SP, #32] 
    /*0000eab8*/ CMP         R1, R3 
    /*0000eabc*/ MOVLT       R3, R1 
    /*0000eac0*/ STR         R3, [SP, #16] 
    RC_NewModeDecision_xeac4:
    /*0000eac4*/ LDR         R3, [R4, #2588]             @ 0xa1c 
    /*0000eac8*/ CMP         R3, #0 
    /*0000eacc*/ LDRNE       R3, [R4, #2592]             @ 0xa20 
    /*0000ead0*/ MVNEQ       R3, #-134217728             @ 0xf8000000 
    /*0000ead4*/ CMP         R7, R3 
    /*0000ead8*/ STR         R3, [R4, #3284]             @ 0xcd4 
    /*0000eadc*/ BLE         RC_NewModeDecision_xeaec
    /*0000eae0*/ LDR         R1, [R4, #3488]             @ 0xda0 
    /*0000eae4*/ CMP         R1, #1 
    /*0000eae8*/ SUBEQ       R7, R3, R3, LSR #4 
    RC_NewModeDecision_xeaec:
    /*0000eaec*/ LDR         R1, [SP, #16] 
    /*0000eaf0*/ MOV         R3, IP 
    /*0000eaf4*/ LDR         R0, [SP, #32] 
    /*0000eaf8*/ STR         R7, [R4, #1992]             @ 0x7c8 
    /*0000eafc*/ STR         R1, [R4, #1996]             @ 0x7cc 
    /*0000eb00*/ SUB         R1, IP, #96                 @ 0x60 
    /*0000eb04*/ CLZ         R1, R1 
    /*0000eb08*/ STR         R0, [R4, #2000]             @ 0x7d0 
    /*0000eb0c*/ LDR         IP, [SP, #24] 
    /*0000eb10*/ MOV         R0, #0 
    /*0000eb14*/ LSR         R1, R1, #5 
    /*0000eb18*/ B           RC_NewModeDecision_xe8fc
    RC_NewModeDecision_xeb1c:
    /*0000eb1c*/ LDR         R1, [R4, #184]              @ 0xb8 
    /*0000eb20*/ MOV         R7, #10 
    /*0000eb24*/ LDR         R3, [R4, #3304]             @ 0xce8 
    /*0000eb28*/ CMN         R1, #1 
    /*0000eb2c*/ MUL         R7, R7, R3 
    /*0000eb30*/ BEQ         RC_NewModeDecision_xf0f0
    /*0000eb34*/ LDR         R3, [SP, #24] 
    /*0000eb38*/ ADD         R3, R1, R3 
    /*0000eb3c*/ LSL         R3, R3, #6 
    /*0000eb40*/ STR         R3, [R4, #3260]             @ 0xcbc 
    /*0000eb44*/ LSR         R2, R3, #6 
    RC_NewModeDecision_xeb48:
    /*0000eb48*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000eb4c*/ CMP         R3, R1 
    /*0000eb50*/ BGT         RC_NewModeDecision_xeb64
    /*0000eb54*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000eb58*/ CMP         R3, R1 
    /*0000eb5c*/ MOVLT       SL, R3 
    /*0000eb60*/ MOVGE       SL, R1 
    RC_NewModeDecision_xeb64:
    /*0000eb64*/ LDR         R3, [R4, #2588]             @ 0xa1c 
    /*0000eb68*/ CMP         R3, #0 
    /*0000eb6c*/ LDRNE       R3, [R4, #2592]             @ 0xa20 
    /*0000eb70*/ MVNEQ       R3, #-134217728             @ 0xf8000000 
    /*0000eb74*/ CMP         R7, R3 
    /*0000eb78*/ STR         R3, [R4, #3284]             @ 0xcd4 
    /*0000eb7c*/ BLE         RC_NewModeDecision_xeb8c
    /*0000eb80*/ LDR         R1, [R4, #2604]             @ 0xa2c 
    /*0000eb84*/ CMP         R1, #2 
    /*0000eb88*/ SUBEQ       R7, R3, R3, LSR #4 
    RC_NewModeDecision_xeb8c:
    /*0000eb8c*/ SUB         R1, IP, #96                 @ 0x60 
    /*0000eb90*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000eb94*/ CLZ         R1, R1 
    /*0000eb98*/ MOV         R3, IP 
    /*0000eb9c*/ STR         R7, [R4, #1992]             @ 0x7c8 
    /*0000eba0*/ STR         R0, [R4, #2000]             @ 0x7d0 
    /*0000eba4*/ LSR         R1, R1, #5 
    /*0000eba8*/ STR         SL, [R4, #1996]             @ 0x7cc 
    /*0000ebac*/ MOV         R0, #0 
    /*0000ebb0*/ LDR         IP, [SP, #40]               @ 0x28 
    /*0000ebb4*/ B           RC_NewModeDecision_xe8fc
    RC_NewModeDecision_xebb8:
    /*0000ebb8*/ LDR         R2, [SP, #52]               @ 0x34 
    /*0000ebbc*/ RSB         R3, R2, R3, LSR #6 
    /*0000ebc0*/ CMP         R8, R3 
    /*0000ebc4*/ BGT         RC_NewModeDecision_xebd8
    /*0000ebc8*/ LDR         R2, [SP, #32] 
    /*0000ebcc*/ CMP         R2, R3 
    /*0000ebd0*/ MOVLT       R0, R2 
    /*0000ebd4*/ MOVGE       R0, R3 
    RC_NewModeDecision_xebd8:
    /*0000ebd8*/ LDR         R3, [SP, #32] 
    /*0000ebdc*/ STR         R0, [SP, #16] 
    /*0000ebe0*/ STR         R8, [R4, #2004]             @ 0x7d4 
    /*0000ebe4*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*0000ebe8*/ B           RC_NewModeDecision_xd550
    RC_NewModeDecision_xebec:
    /*0000ebec*/ LDR         R2, [R4, #3144]             @ 0xc48 
    /*0000ebf0*/ CMP         R2, #1 
    /*0000ebf4*/ BEQ         RC_NewModeDecision_xd524
    /*0000ebf8*/ LDR         R2, [R4, #3124]             @ 0xc34 
    /*0000ebfc*/ LDR         R1, [SP, #12] 
    /*0000ec00*/ ADD         R2, R1, R2 
    /*0000ec04*/ LDRB        R2, [R2, #560]              @ 0x230 
    /*0000ec08*/ CMP         R2, R3 
    /*0000ec0c*/ BCS         RC_NewModeDecision_xd52c
    /*0000ec10*/ B           RC_NewModeDecision_xd528
    RC_NewModeDecision_xec14:
    /*0000ec14*/ LDR         R2, [R4, #3276]             @ 0xccc 
    /*0000ec18*/ LDR         R1, [R4, #1564]             @ 0x61c 
    /*0000ec1c*/ ADD         R3, R2, R3, LSR #6 
    /*0000ec20*/ CMP         R1, #1 
    /*0000ec24*/ ASR         R3, R3, #1 
    /*0000ec28*/ STR         R3, [R4, #3276]             @ 0xccc 
    /*0000ec2c*/ BEQ         RC_NewModeDecision_xeffc
    RC_NewModeDecision_xec30:
    /*0000ec30*/ LDR         R2, [SP, #52]               @ 0x34 
    RC_NewModeDecision_xec34:
    /*0000ec34*/ SUB         R3, R3, R2 
    /*0000ec38*/ B           RC_NewModeDecision_xe460
    RC_NewModeDecision_xec3c:
    /*0000ec3c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000ec40*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000ec44*/ STR         R3, [SP, #12] 
    /*0000ec48*/ B           RC_NewModeDecision_xd748
    RC_NewModeDecision_xec4c:
    /*0000ec4c*/ CMP         R3, #1920                   @ 0x780 
    /*0000ec50*/ BGE         RC_NewModeDecision_xcf20
    /*0000ec54*/ B           RC_NewModeDecision_xcf3c
    RC_NewModeDecision_xec58:
    /*0000ec58*/ SUB         R3, R0, #201                @ 0xc9 
    /*0000ec5c*/ CMP         R3, #199                    @ 0xc7 
    /*0000ec60*/ BHI         RC_NewModeDecision_xedec
    /*0000ec64*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000ec68*/ SUB         R0, R0, #200                @ 0xc8 
    /*0000ec6c*/ MOV         R1, R3 
    /*0000ec70*/ MOVW        R2, #26215                  @ 0x6667 
    /*0000ec74*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000ec78*/ MOVT        R2, #26214                  @ 0x6666 
    /*0000ec7c*/ ASR         R3, R0, #31 
    /*0000ec80*/ STR         R1, [SP, #12] 
    /*0000ec84*/ MOV         IP, R1 
    /*0000ec88*/ SMULL       R0, R1, R0, R2 
    /*0000ec8c*/ RSB         R3, R3, R1, ASR #1 
    /*0000ec90*/ ADD         R3, IP, R3, LSL #2 
    /*0000ec94*/ LDR         R0, [R3, #1244]             @ 0x4dc 
    /*0000ec98*/ B           RC_NewModeDecision_xcdd8
    RC_NewModeDecision_xec9c:
    /*0000ec9c*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000eca0*/ RSB         R3, R3, R1, LSR #6 
    /*0000eca4*/ CMP         R6, R3 
    /*0000eca8*/ BGT         RC_NewModeDecision_xed1c
    RC_NewModeDecision_xecac:
    /*0000ecac*/ CMP         R9, R3 
    /*0000ecb0*/ MOVLT       R3, R9 
    RC_NewModeDecision_xecb4:
    /*0000ecb4*/ STR         R9, [R4, #2000]             @ 0x7d0 
    /*0000ecb8*/ MOV         R8, R9 
    /*0000ecbc*/ STR         R6, [R4, #2004]             @ 0x7d4 
    /*0000ecc0*/ B           RC_NewModeDecision_xdb54
    RC_NewModeDecision_xecc4:
    /*0000ecc4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000ecc8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000eccc*/ STR         R3, [SP, #12] 
    /*0000ecd0*/ B           RC_NewModeDecision_xde28
    RC_NewModeDecision_xecd4:
    /*0000ecd4*/ LDR         R3, [R4, #3276]             @ 0xccc 
    /*0000ecd8*/ LDR         R2, [R4, #1564]             @ 0x61c 
    /*0000ecdc*/ ADD         R3, R3, R1, LSR #6 
    /*0000ece0*/ CMP         R2, #1 
    /*0000ece4*/ ASR         R3, R3, #1 
    /*0000ece8*/ STR         R3, [R4, #3276]             @ 0xccc 
    /*0000ecec*/ BEQ         RC_NewModeDecision_xf0c8
    RC_NewModeDecision_xecf0:
    /*0000ecf0*/ LDR         R2, [SP, #36]               @ 0x24 
    RC_NewModeDecision_xecf4:
    /*0000ecf4*/ SUB         R3, R3, R2 
    RC_NewModeDecision_xecf8:
    /*0000ecf8*/ LDR         R2, [SP, #32] 
    /*0000ecfc*/ CMP         R2, R3 
    /*0000ed00*/ BGT         RC_NewModeDecision_xed10
    /*0000ed04*/ CMP         R8, R3 
    /*0000ed08*/ MOVLT       R3, R8 
    /*0000ed0c*/ STR         R3, [SP, #32] 
    RC_NewModeDecision_xed10:
    /*0000ed10*/ LDR         R3, [SP, #32] 
    /*0000ed14*/ CMP         R6, R3 
    /*0000ed18*/ BLE         RC_NewModeDecision_xecac
    RC_NewModeDecision_xed1c:
    /*0000ed1c*/ MOV         R3, R6 
    /*0000ed20*/ B           RC_NewModeDecision_xecb4
    RC_NewModeDecision_xed24:
    /*0000ed24*/ ADD         R3, R4, #3824               @ 0xef0 
    /*0000ed28*/ ADD         R2, R4, #3856               @ 0xf10 
    /*0000ed2c*/ ADD         R3, R3, #8 
    /*0000ed30*/ ADD         R2, R2, #4 
    RC_NewModeDecision_xed34:
    /*0000ed34*/ LDR         R1, [R3, #4] 
    /*0000ed38*/ STR         R1, [R3], #4 
    /*0000ed3c*/ CMP         R2, R3 
    /*0000ed40*/ BNE         RC_NewModeDecision_xed34
    /*0000ed44*/ LDR         R3, [R4, #48]               @ 0x30 
    /*0000ed48*/ CMP         R3, #96                     @ 0x60 
    /*0000ed4c*/ STRNE       R0, [R4, #3860]             @ 0xf14 
    /*0000ed50*/ LDREQ       R3, [R4, #3260]             @ 0xcbc 
    /*0000ed54*/ STREQ       R3, [R4, #3860]             @ 0xf14 
    /*0000ed58*/ B           RC_NewModeDecision_xce10
    RC_NewModeDecision_xed5c:
    /*0000ed5c*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000ed60*/ RSB         R3, R3, R2, LSR #6 
    /*0000ed64*/ CMP         R8, R3 
    /*0000ed68*/ STRGT       R8, [SP, #16] 
    /*0000ed6c*/ BGT         RC_NewModeDecision_xed80
    /*0000ed70*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000ed74*/ CMP         R2, R3 
    /*0000ed78*/ MOVLT       R3, R2 
    /*0000ed7c*/ STR         R3, [SP, #16] 
    RC_NewModeDecision_xed80:
    /*0000ed80*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000ed84*/ STR         R8, [R4, #2004]             @ 0x7d4 
    /*0000ed88*/ STR         R8, [SP, #24] 
    /*0000ed8c*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*0000ed90*/ STR         R3, [SP, #32] 
    /*0000ed94*/ B           RC_NewModeDecision_xe1f0
    RC_NewModeDecision_xed98:
    /*0000ed98*/ MOV         R1, R6 
    /*0000ed9c*/ LDR         R6, [SP, #32] 
    /*0000eda0*/ LDR         R3, [R4, #1616]             @ 0x650 
    /*0000eda4*/ MOV         R2, R7 
    /*0000eda8*/ MOV         R0, R4 
    /*0000edac*/ STR         R6, [SP] 
    /*0000edb0*/ BL          0x0000000000009FA4 
    /*0000edb4*/ LDR         R2, [R4, #3260]             @ 0xcbc 
    /*0000edb8*/ LSR         R2, R2, #6 
    /*0000edbc*/ SUB         R3, R2, R6 
    /*0000edc0*/ B           RC_NewModeDecision_xe27c
    RC_NewModeDecision_xedc4:
    /*0000edc4*/ LDR         R2, [R4, #3144]             @ 0xc48 
    /*0000edc8*/ CMP         R2, #1 
    /*0000edcc*/ BEQ         RC_NewModeDecision_xdb28
    /*0000edd0*/ LDR         R2, [R4, #3124]             @ 0xc34 
    /*0000edd4*/ LDR         R1, [SP, #12] 
    /*0000edd8*/ ADD         R2, R1, R2 
    /*0000eddc*/ LDRB        R2, [R2, #560]              @ 0x230 
    /*0000ede0*/ CMP         R2, R3 
    /*0000ede4*/ BCS         RC_NewModeDecision_xdb30
    /*0000ede8*/ B           RC_NewModeDecision_xdb2c
    RC_NewModeDecision_xedec:
    /*0000edec*/ SUB         R3, R0, #400                @ 0x190 
    /*0000edf0*/ SUB         R3, R3, #1 
    /*0000edf4*/ CMP         R3, #219                    @ 0xdb 
    /*0000edf8*/ BHI         RC_NewModeDecision_xf150
    /*0000edfc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000ee00*/ SUB         R0, R0, #400                @ 0x190 
    /*0000ee04*/ MOV         R1, R3 
    /*0000ee08*/ MOVW        R2, #26215                  @ 0x6667 
    /*0000ee0c*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000ee10*/ MOVT        R2, #26214                  @ 0x6666 
    /*0000ee14*/ ASR         R3, R0, #31 
    /*0000ee18*/ STR         R1, [SP, #12] 
    /*0000ee1c*/ MOV         IP, R1 
    /*0000ee20*/ SMULL       R0, R1, R0, R2 
    /*0000ee24*/ RSB         R3, R3, R1, ASR #2 
    /*0000ee28*/ ADD         R3, IP, R3, LSL #2 
    /*0000ee2c*/ LDR         R0, [R3, #1412]             @ 0x584 
    /*0000ee30*/ B           RC_NewModeDecision_xcdd8
    RC_NewModeDecision_xee34:
    /*0000ee34*/ LDR         R1, [R4, #3144]             @ 0xc48 
    /*0000ee38*/ CMP         R1, #1 
    /*0000ee3c*/ BEQ         RC_NewModeDecision_xe838
    /*0000ee40*/ LDR         R1, [R4, #3124]             @ 0xc34 
    /*0000ee44*/ LDR         R0, [SP, #12] 
    /*0000ee48*/ ADD         R1, R0, R1 
    /*0000ee4c*/ LDRB        R1, [R1, #560]              @ 0x230 
    /*0000ee50*/ CMP         R1, R3 
    /*0000ee54*/ BCS         RC_NewModeDecision_xe840
    /*0000ee58*/ B           RC_NewModeDecision_xe83c
    RC_NewModeDecision_xee5c:
    /*0000ee5c*/ LDR         R1, [R4, #3144]             @ 0xc48 
    /*0000ee60*/ CMP         R1, #1 
    /*0000ee64*/ BEQ         RC_NewModeDecision_xd234
    /*0000ee68*/ LDR         R1, [R4, #3124]             @ 0xc34 
    /*0000ee6c*/ LDR         R0, [SP, #12] 
    /*0000ee70*/ ADD         R1, R0, R1 
    /*0000ee74*/ LDRB        R1, [R1, #560]              @ 0x230 
    /*0000ee78*/ CMP         R1, R3 
    /*0000ee7c*/ BCS         RC_NewModeDecision_xd23c
    /*0000ee80*/ B           RC_NewModeDecision_xd238
    RC_NewModeDecision_xee84:
    /*0000ee84*/ LDR         R3, [R4, #3276]             @ 0xccc 
    /*0000ee88*/ LDR         R0, [R4, #1564]             @ 0x61c 
    /*0000ee8c*/ ADD         R3, R3, R2, LSR #6 
    /*0000ee90*/ CMP         R0, #1 
    /*0000ee94*/ ASR         R3, R3, #1 
    /*0000ee98*/ STR         R3, [R4, #3276]             @ 0xccc 
    /*0000ee9c*/ BEQ         RC_NewModeDecision_xf024
    RC_NewModeDecision_xeea0:
    /*0000eea0*/ LDR         R2, [SP, #36]               @ 0x24 
    RC_NewModeDecision_xeea4:
    /*0000eea4*/ SUB         R3, R3, R2 
    RC_NewModeDecision_xeea8:
    /*0000eea8*/ LDR         R2, [SP, #24] 
    /*0000eeac*/ CMP         R2, R3 
    /*0000eeb0*/ BGT         RC_NewModeDecision_xeec4
    /*0000eeb4*/ LDR         R2, [SP, #32] 
    /*0000eeb8*/ CMP         R2, R3 
    /*0000eebc*/ MOVLT       R3, R2 
    /*0000eec0*/ STR         R3, [SP, #16] 
    RC_NewModeDecision_xeec4:
    /*0000eec4*/ LDR         R3, [SP, #16] 
    /*0000eec8*/ CMP         R8, R3 
    /*0000eecc*/ BGT         RC_NewModeDecision_xeee0
    /*0000eed0*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000eed4*/ CMP         R2, R3 
    /*0000eed8*/ MOVLT       R1, R2 
    /*0000eedc*/ MOVGE       R1, R3 
    RC_NewModeDecision_xeee0:
    /*0000eee0*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000eee4*/ STR         R8, [R4, #2004]             @ 0x7d4 
    /*0000eee8*/ STR         R8, [SP, #24] 
    /*0000eeec*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*0000eef0*/ STR         R3, [SP, #32] 
    /*0000eef4*/ STR         R1, [SP, #16] 
    /*0000eef8*/ B           RC_NewModeDecision_xe1f0
    RC_NewModeDecision_xeefc:
    /*0000eefc*/ LDR         R2, [R4, #3276]             @ 0xccc 
    /*0000ef00*/ LDR         R0, [R4, #1564]             @ 0x61c 
    /*0000ef04*/ ADD         R3, R2, R3, LSR #6 
    /*0000ef08*/ CMP         R0, #1 
    /*0000ef0c*/ ASR         R3, R3, #1 
    /*0000ef10*/ STR         R3, [R4, #3276]             @ 0xccc 
    /*0000ef14*/ BEQ         RC_NewModeDecision_xf07c
    RC_NewModeDecision_xef18:
    /*0000ef18*/ LDR         R2, [SP, #24] 
    RC_NewModeDecision_xef1c:
    /*0000ef1c*/ SUB         R3, R3, R2 
    RC_NewModeDecision_xef20:
    /*0000ef20*/ LDR         R2, [SP, #40]               @ 0x28 
    /*0000ef24*/ CMP         R2, R3 
    /*0000ef28*/ BGT         RC_NewModeDecision_xef3c
    /*0000ef2c*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000ef30*/ CMP         R2, R3 
    /*0000ef34*/ MOVLT       SL, R2 
    /*0000ef38*/ MOVGE       SL, R3 
    RC_NewModeDecision_xef3c:
    /*0000ef3c*/ CMP         FP, SL 
    /*0000ef40*/ BGT         RC_NewModeDecision_xef54
    /*0000ef44*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000ef48*/ CMP         R3, SL 
    /*0000ef4c*/ MOVLT       R1, R3 
    /*0000ef50*/ MOVGE       R1, SL 
    RC_NewModeDecision_xef54:
    /*0000ef54*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000ef58*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xe4] 
    /*0000ef5c*/ MOV         SL, R1 
    /*0000ef60*/ STR         FP, [R4, #2004]             @ 0x7d4 
    /*0000ef64*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xe4] 
    /*0000ef68*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*0000ef6c*/ B           RC_NewModeDecision_xd268
    RC_NewModeDecision_xef70:
    /*0000ef70*/ LDR         R2, [R4, #3144]             @ 0xc48 
    /*0000ef74*/ CMP         R2, #1 
    /*0000ef78*/ BEQ         RC_NewModeDecision_xe1bc
    /*0000ef7c*/ LDR         R2, [R4, #3124]             @ 0xc34 
    /*0000ef80*/ LDR         R1, [SP, #12] 
    /*0000ef84*/ ADD         R2, R1, R2 
    /*0000ef88*/ LDRB        R2, [R2, #560]              @ 0x230 
    /*0000ef8c*/ CMP         R2, R3 
    /*0000ef90*/ BCS         RC_NewModeDecision_xe1c4
    /*0000ef94*/ B           RC_NewModeDecision_xe1c0
    RC_NewModeDecision_xef98:
    /*0000ef98*/ LDR         R2, [SP, #24] 
    /*0000ef9c*/ RSB         SL, R2, R3, LSR #6 
    /*0000efa0*/ CMP         FP, SL 
    /*0000efa4*/ MOVGT       SL, FP 
    /*0000efa8*/ BGT         RC_NewModeDecision_xefb8
    /*0000efac*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000efb0*/ CMP         R3, SL 
    /*0000efb4*/ MOVLT       SL, R3 
    RC_NewModeDecision_xefb8:
    /*0000efb8*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000efbc*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xe4] 
    /*0000efc0*/ STR         FP, [R4, #2004]             @ 0x7d4 
    /*0000efc4*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xe4] 
    /*0000efc8*/ STR         R3, [R4, #2000]             @ 0x7d0 
    /*0000efcc*/ B           RC_NewModeDecision_xd268
    RC_NewModeDecision_xefd0:
    /*0000efd0*/ MOV         R1, R6 
    /*0000efd4*/ LDR         R6, [SP, #52]               @ 0x34 
    /*0000efd8*/ LDR         R3, [R4, #1616]             @ 0x650 
    /*0000efdc*/ MOV         R2, R7 
    /*0000efe0*/ MOV         R0, R4 
    /*0000efe4*/ STR         R6, [SP] 
    /*0000efe8*/ BL          0x0000000000009FA4 
    /*0000efec*/ LDR         R2, [R4, #3260]             @ 0xcbc 
    /*0000eff0*/ LSR         R2, R2, #6 
    /*0000eff4*/ SUB         R3, R2, R6 
    /*0000eff8*/ B           RC_NewModeDecision_xe4f0
    RC_NewModeDecision_xeffc:
    /*0000effc*/ LDR         R2, [R4, #3144]             @ 0xc48 
    /*0000f000*/ CMP         R2, #1 
    /*0000f004*/ BEQ         RC_NewModeDecision_xec30
    /*0000f008*/ LDR         R2, [R4, #3124]             @ 0xc34 
    /*0000f00c*/ LDR         R1, [SP, #12] 
    /*0000f010*/ ADD         R2, R1, R2 
    /*0000f014*/ LDRB        R2, [R2, #560]              @ 0x230 
    /*0000f018*/ CMP         R2, R3 
    /*0000f01c*/ BCS         RC_NewModeDecision_xe460
    /*0000f020*/ B           RC_NewModeDecision_xec34
    RC_NewModeDecision_xf024:
    /*0000f024*/ LDR         R2, [R4, #3144]             @ 0xc48 
    /*0000f028*/ CMP         R2, #1 
    /*0000f02c*/ BEQ         RC_NewModeDecision_xeea0
    /*0000f030*/ LDR         R2, [R4, #3124]             @ 0xc34 
    /*0000f034*/ LDR         R0, [SP, #12] 
    /*0000f038*/ ADD         R2, R0, R2 
    /*0000f03c*/ LDRB        R2, [R2, #560]              @ 0x230 
    /*0000f040*/ CMP         R2, R3 
    /*0000f044*/ BCS         RC_NewModeDecision_xeea8
    /*0000f048*/ B           RC_NewModeDecision_xeea4
    RC_NewModeDecision_xf04c:
    /*0000f04c*/ MOV         R1, R6 
    /*0000f050*/ LDR         R6, [SP, #36]               @ 0x24 
    /*0000f054*/ LDR         R3, [R4, #1616]             @ 0x650 
    /*0000f058*/ MOV         R2, R7 
    /*0000f05c*/ MOV         R0, R4 
    /*0000f060*/ STR         R6, [SP] 
    /*0000f064*/ BL          0x0000000000009FA4 
    /*0000f068*/ LDR         R2, [R4, #3260]             @ 0xcbc 
    /*0000f06c*/ LDR         IP, [R4, #48]               @ 0x30 
    /*0000f070*/ LSR         R2, R2, #6 
    /*0000f074*/ SUB         R3, R2, R6 
    /*0000f078*/ B           RC_NewModeDecision_xeaa8
    RC_NewModeDecision_xf07c:
    /*0000f07c*/ LDR         R2, [R4, #3144]             @ 0xc48 
    /*0000f080*/ CMP         R2, #1 
    /*0000f084*/ BEQ         RC_NewModeDecision_xef18
    /*0000f088*/ LDR         R2, [R4, #3124]             @ 0xc34 
    /*0000f08c*/ LDR         R0, [SP, #12] 
    /*0000f090*/ ADD         R2, R0, R2 
    /*0000f094*/ LDRB        R2, [R2, #560]              @ 0x230 
    /*0000f098*/ CMP         R2, R3 
    /*0000f09c*/ BCS         RC_NewModeDecision_xef20
    /*0000f0a0*/ B           RC_NewModeDecision_xef1c
    RC_NewModeDecision_xf0a4:
    /*0000f0a4*/ LDR         R2, [SP, #24] 
    /*0000f0a8*/ RSB         R3, R2, R3, LSR #6 
    /*0000f0ac*/ CMP         FP, R3 
    /*0000f0b0*/ BGT         RC_NewModeDecision_xef54
    /*0000f0b4*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0000f0b8*/ CMP         R2, R3 
    /*0000f0bc*/ MOVLT       R1, R2 
    /*0000f0c0*/ MOVGE       R1, R3 
    /*0000f0c4*/ B           RC_NewModeDecision_xef54
    RC_NewModeDecision_xf0c8:
    /*0000f0c8*/ LDR         R2, [R4, #3144]             @ 0xc48 
    /*0000f0cc*/ CMP         R2, #1 
    /*0000f0d0*/ BEQ         RC_NewModeDecision_xecf0
    /*0000f0d4*/ LDR         R2, [R4, #3124]             @ 0xc34 
    /*0000f0d8*/ LDR         R1, [SP, #12] 
    /*0000f0dc*/ ADD         R2, R1, R2 
    /*0000f0e0*/ LDRB        R2, [R2, #560]              @ 0x230 
    /*0000f0e4*/ CMP         R2, R3 
    /*0000f0e8*/ BCS         RC_NewModeDecision_xecf8
    /*0000f0ec*/ B           RC_NewModeDecision_xecf4
    RC_NewModeDecision_xf0f0:
    /*0000f0f0*/ MOV         R1, R6 
    /*0000f0f4*/ LDR         R6, [SP, #24] 
    /*0000f0f8*/ LDR         R3, [R4, #1616]             @ 0x650 
    /*0000f0fc*/ MOV         R2, R7 
    /*0000f100*/ MOV         R0, R4 
    /*0000f104*/ STR         R6, [SP] 
    /*0000f108*/ BL          0x0000000000009FA4 
    /*0000f10c*/ LDR         R3, [R4, #3260]             @ 0xcbc 
    /*0000f110*/ LDR         IP, [R4, #48]               @ 0x30 
    /*0000f114*/ LSR         R2, R3, #6 
    /*0000f118*/ SUB         R1, R2, R6 
    /*0000f11c*/ B           RC_NewModeDecision_xeb48
    RC_NewModeDecision_xf120:
    /*0000f120*/ MOV         R1, R6 
    /*0000f124*/ LDR         R6, [SP, #36]               @ 0x24 
    /*0000f128*/ LDR         R3, [R4, #1616]             @ 0x650 
    /*0000f12c*/ MOV         R2, R7 
    /*0000f130*/ MOV         R0, R4 
    /*0000f134*/ STR         R6, [SP] 
    /*0000f138*/ BL          0x0000000000009FA4 
    /*0000f13c*/ LDR         R2, [R4, #3260]             @ 0xcbc 
    /*0000f140*/ LDR         IP, [R4, #48]               @ 0x30 
    /*0000f144*/ LSR         R2, R2, #6 
    /*0000f148*/ SUB         R3, R2, R6 
    /*0000f14c*/ B           RC_NewModeDecision_xe894
    RC_NewModeDecision_xf150:
    /*0000f150*/ SUB         R3, R0, #620                @ 0x26c 
    /*0000f154*/ SUB         R3, R3, #1 
    /*0000f158*/ CMP         R3, #179                    @ 0xb3 
    /*0000f15c*/ BHI         RC_NewModeDecision_xf198
    /*0000f160*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000f164*/ SUB         R0, R0, #620                @ 0x26c 
    /*0000f168*/ MOV         R1, R3 
    /*0000f16c*/ MOVW        R2, #26215                  @ 0x6667 
    /*0000f170*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000f174*/ MOVT        R2, #26214                  @ 0x6666 
    /*0000f178*/ ASR         R3, R0, #31 
    /*0000f17c*/ STR         R1, [SP, #12] 
    /*0000f180*/ MOV         IP, R1 
    /*0000f184*/ SMULL       R0, R1, R0, R2 
    /*0000f188*/ RSB         R3, R3, R1, ASR #3 
    /*0000f18c*/ ADD         R3, IP, R3, LSL #2 
    /*0000f190*/ LDR         R0, [R3, #1504]             @ 0x5e0 
    /*0000f194*/ B           RC_NewModeDecision_xcdd8
    RC_NewModeDecision_xf198:
    /*0000f198*/ SUB         R3, R0, #800                @ 0x320 
    /*0000f19c*/ SUB         R3, R3, #1 
    /*0000f1a0*/ CMP         R3, #199                    @ 0xc7 
    /*0000f1a4*/ BHI         RC_NewModeDecision_xf1cc
    /*0000f1a8*/ SUB         R0, R0, #800                @ 0x320 
    /*0000f1ac*/ MOV         R1, #20 
    /*0000f1b0*/ BL          0x000000000000F1B0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000f1b4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000f1b8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000f1bc*/ STR         R3, [SP, #12] 
    /*0000f1c0*/ ADD         R0, R3, R0, LSL #2 
    /*0000f1c4*/ LDR         R0, [R0, #1544]             @ 0x608 
    /*0000f1c8*/ B           RC_NewModeDecision_xcdd8
    RC_NewModeDecision_xf1cc:
    /*0000f1cc*/ SUB         R3, R0, #1000               @ 0x3e8 
    /*0000f1d0*/ MOVW        R2, #269                    @ 0x10d 
    /*0000f1d4*/ SUB         R3, R3, #1 
    /*0000f1d8*/ CMP         R3, R2 
    /*0000f1dc*/ BHI         RC_NewModeDecision_xf204
    /*0000f1e0*/ SUB         R0, R0, #1000               @ 0x3e8 
    /*0000f1e4*/ MOV         R1, #30 
    /*0000f1e8*/ BL          0x000000000000F1E8          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000f1ec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000f1f0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000f1f4*/ STR         R3, [SP, #12] 
    /*0000f1f8*/ ADD         R0, R3, R0, LSL #2 
    /*0000f1fc*/ LDR         R0, [R0, #1588]             @ 0x634 
    /*0000f200*/ B           RC_NewModeDecision_xcdd8
    RC_NewModeDecision_xf204:
    /*0000f204*/ SUB         R3, R0, #1264               @ 0x4f0 
    /*0000f208*/ MOVW        R2, #329                    @ 0x149 
    /*0000f20c*/ SUB         R1, R3, #7 
    /*0000f210*/ CMP         R1, R2 
    /*0000f214*/ BHI         RC_NewModeDecision_xf23c
    /*0000f218*/ SUB         R0, R3, #6 
    /*0000f21c*/ MOV         R1, #30 
    /*0000f220*/ BL          0x000000000000F220          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000f224*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000f228*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000f22c*/ STR         R3, [SP, #12] 
    /*0000f230*/ ADD         R0, R3, R0, LSL #2 
    /*0000f234*/ LDR         R0, [R0, #1628]             @ 0x65c 
    /*0000f238*/ B           RC_NewModeDecision_xcdd8
    RC_NewModeDecision_xf23c:
    /*0000f23c*/ SUB         R3, R0, #1600               @ 0x640 
    /*0000f240*/ SUB         R3, R3, #1 
    /*0000f244*/ CMP         R3, #400                    @ 0x190 
    /*0000f248*/ BCS         RC_NewModeDecision_xf270
    /*0000f24c*/ SUB         R0, R0, #1600               @ 0x640 
    /*0000f250*/ MOV         R1, #40                     @ 0x28 
    /*0000f254*/ BL          0x000000000000F254          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000f258*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000f25c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000f260*/ STR         R3, [SP, #12] 
    /*0000f264*/ ADD         R0, R3, R0, LSL #2 
    /*0000f268*/ LDR         R0, [R0, #1676]             @ 0x68c 
    /*0000f26c*/ B           RC_NewModeDecision_xcdd8
    RC_NewModeDecision_xf270:
    /*0000f270*/ SUB         R3, R0, #2000               @ 0x7d0 
    /*0000f274*/ SUB         R3, R3, #1 
    /*0000f278*/ CMP         R3, #500                    @ 0x1f4 
    /*0000f27c*/ BCS         RC_NewModeDecision_xf2a4
    /*0000f280*/ SUB         R0, R0, #2000               @ 0x7d0 
    /*0000f284*/ MOV         R1, #50                     @ 0x32 
    /*0000f288*/ BL          0x000000000000F288          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000f28c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000f290*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000f294*/ STR         R3, [SP, #12] 
    /*0000f298*/ ADD         R0, R3, R0, LSL #2 
    /*0000f29c*/ LDR         R0, [R0, #1720]             @ 0x6b8 
    /*0000f2a0*/ B           RC_NewModeDecision_xcdd8
    RC_NewModeDecision_xf2a4:
    /*0000f2a4*/ SUB         R3, R0, #2496               @ 0x9c0 
    /*0000f2a8*/ SUB         R2, R3, #5 
    /*0000f2ac*/ CMP         R2, #660                    @ 0x294 
    /*0000f2b0*/ BCS         RC_NewModeDecision_xf2d8
    /*0000f2b4*/ SUB         R0, R3, #4 
    /*0000f2b8*/ MOV         R1, #60                     @ 0x3c 
    /*0000f2bc*/ BL          0x000000000000F2BC          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000f2c0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000f2c4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000f2c8*/ STR         R3, [SP, #12] 
    /*0000f2cc*/ ADD         R0, R3, R0, LSL #2 
    /*0000f2d0*/ LDR         R0, [R0, #1764]             @ 0x6e4 
    /*0000f2d4*/ B           RC_NewModeDecision_xcdd8
    RC_NewModeDecision_xf2d8:
    /*0000f2d8*/ SUB         R3, R0, #3152               @ 0xc50 
    /*0000f2dc*/ SUB         R2, R3, #9 
    /*0000f2e0*/ CMP         R2, #800                    @ 0x320 
    /*0000f2e4*/ BCS         RC_NewModeDecision_xf30c
    /*0000f2e8*/ SUB         R0, R3, #8 
    /*0000f2ec*/ MOV         R1, #80                     @ 0x50 
    /*0000f2f0*/ BL          0x000000000000F2F0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000f2f4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000f2f8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000f2fc*/ STR         R3, [SP, #12] 
    /*0000f300*/ ADD         R0, R3, R0, LSL #2 
    /*0000f304*/ LDR         R0, [R0, #1812]             @ 0x714 
    /*0000f308*/ B           RC_NewModeDecision_xcdd8
    RC_NewModeDecision_xf30c:
    /*0000f30c*/ SUB         R3, R0, #3952               @ 0xf70 
    /*0000f310*/ SUB         R2, R3, #9 
    /*0000f314*/ CMP         R2, #1040                   @ 0x410 
    /*0000f318*/ BCS         RC_NewModeDecision_xf340
    /*0000f31c*/ SUB         R0, R3, #8 
    /*0000f320*/ MOV         R1, #100                    @ 0x64 
    /*0000f324*/ BL          0x000000000000F324          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000f328*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000f32c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000f330*/ STR         R3, [SP, #12] 
    /*0000f334*/ ADD         R0, R3, R0, LSL #2 
    /*0000f338*/ LDR         R0, [R0, #1856]             @ 0x740 
    /*0000f33c*/ B           RC_NewModeDecision_xcdd8
    RC_NewModeDecision_xf340:
    /*0000f340*/ SUB         R3, R0, #4992               @ 0x1380 
    /*0000f344*/ MOVW        R2, #1299                   @ 0x513 
    /*0000f348*/ SUB         R1, R3, #9 
    /*0000f34c*/ CMP         R1, R2 
    /*0000f350*/ BHI         RC_NewModeDecision_xf378
    /*0000f354*/ SUB         R0, R3, #8 
    /*0000f358*/ MOV         R1, #130                    @ 0x82 
    /*0000f35c*/ BL          0x000000000000F35C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000f360*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000f364*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000f368*/ STR         R3, [SP, #12] 
    /*0000f36c*/ ADD         R0, R3, R0, LSL #2 
    /*0000f370*/ LDR         R0, [R0, #1900]             @ 0x76c 
    /*0000f374*/ B           RC_NewModeDecision_xcdd8
    RC_NewModeDecision_xf378:
    /*0000f378*/ SUB         R3, R0, #6272               @ 0x1880 
    /*0000f37c*/ MOVW        R2, #1649                   @ 0x671 
    /*0000f380*/ SUB         R1, R3, #29 
    /*0000f384*/ CMP         R1, R2 
    /*0000f388*/ BHI         RC_NewModeDecision_xf3b0
    /*0000f38c*/ SUB         R0, R3, #28 
    /*0000f390*/ MOV         R1, #150                    @ 0x96 
    /*0000f394*/ BL          0x000000000000F394          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0000f398*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000f39c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000f3a0*/ STR         R3, [SP, #12] 
    /*0000f3a4*/ ADD         R0, R3, R0, LSL #2 
    /*0000f3a8*/ LDR         R0, [R0, #1944]             @ 0x798 
    /*0000f3ac*/ B           RC_NewModeDecision_xcdd8
    RC_NewModeDecision_xf3b0:
    /*0000f3b0*/ MOVW        R2, #7950                   @ 0x1f0e 
    /*0000f3b4*/ CMP         R0, R2 
    /*0000f3b8*/ MOVW        R3, #3900                   @ 0xf3c 
    /*0000f3bc*/ MOVGT       R0, R3 
    /*0000f3c0*/ MOVLE       R0, #0 
    /*0000f3c4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000f3c8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000f3cc*/ STR         R3, [SP, #12] 
    /*0000f3d0*/ B           RC_NewModeDecision_xcdd8
FUNC_END RC_NewModeDecision


FUNC_BEGIN RC_NewModeReset
    /*0000f3d4*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000f3d8*/ MOVW        R2, #265                    @ 0x109 
    /*0000f3dc*/ LDR         R3, [R1, #48]               @ 0x30 
    /*0000f3e0*/ MOV         R4, R1 
    /*0000f3e4*/ CMP         R3, R2 
    /*0000f3e8*/ CMPNE       R3, #96                     @ 0x60 
    /*0000f3ec*/ BNE         RC_NewModeReset_xf41c
    /*0000f3f0*/ LDR         R1, [R1, #52]               @ 0x34 
    /*0000f3f4*/ ADD         R6, R4, #3232               @ 0xca0 
    /*0000f3f8*/ ADD         R6, R6, #8 
    /*0000f3fc*/ CMP         R1, #1 
    /*0000f400*/ BEQ         RC_NewModeReset_xf60c
    /*0000f404*/ SUB         R3, R1, #2 
    /*0000f408*/ CMP         R1, #0 
    /*0000f40c*/ CMPNE       R3, #2 
    /*0000f410*/ BLS         RC_NewModeReset_xf440
    RC_NewModeReset_xf414:
    /*0000f414*/ MOV         R0, #0 
    /*0000f418*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_NewModeReset_xf41c:
    /*0000f41c*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0000f420*/ CMP         R3, R2 
    /*0000f424*/ BNE         RC_NewModeReset_xf414
    /*0000f428*/ LDR         R3, [R1, #52]               @ 0x34 
    /*0000f42c*/ CMP         R3, #1 
    /*0000f430*/ BHI         RC_NewModeReset_xf414
    /*0000f434*/ MOV         R0, R1 
    /*0000f438*/ BL          0x000000000000B54C 
    /*0000f43c*/ B           RC_NewModeReset_xf414
    RC_NewModeReset_xf440:
    /*0000f440*/ LDR         R3, [R4] 
    /*0000f444*/ LDR         R0, [R4, #56]               @ 0x38 
    /*0000f448*/ SUB         R3, R3, #2 
    /*0000f44c*/ LDR         R2, [R4, #44]               @ 0x2c 
    /*0000f450*/ CMP         R3, #1 
    /*0000f454*/ LDR         R3, [R4, #224]              @ 0xe0 
    /*0000f458*/ LDRLS       R8, [R4, #24] 
    /*0000f45c*/ LSR         IP, R2, #16 
    /*0000f460*/ LDRHI       R8, [R4, #32] 
    /*0000f464*/ CMP         R1, #4 
    /*0000f468*/ UXTH        R2, R2 
    /*0000f46c*/ LDREQ       R0, [R4, #68]               @ 0x44 
    /*0000f470*/ CMP         IP, #0 
    /*0000f474*/ ASR         R1, R0, #10 
    /*0000f478*/ MOVW        R0, #34079                  @ 0x851f 
    /*0000f47c*/ MOVT        R0, #20971                  @ 0x51eb 
    /*0000f480*/ MUL         R3, R3, R1 
    /*0000f484*/ SMULL       R0, R1, R3, R0 
    /*0000f488*/ ASR         R7, R3, #31 
    /*0000f48c*/ RSB         R7, R7, R1, ASR #5 
    /*0000f490*/ LSL         R7, R7, #10 
    /*0000f494*/ SMULL       R0, R1, R7, R8 
    /*0000f498*/ UMULLNE     SL, FP, IP, R0 
    /*0000f49c*/ MLANE       FP, IP, R1, FP 
    /*0000f4a0*/ MOVNE       R0, SL 
    /*0000f4a4*/ MOVNE       R1, FP 
    /*0000f4a8*/ BL          0x000000000000F4A8          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000f4ac*/ LDR         R3, [R4, #3248]             @ 0xcb0 
    /*0000f4b0*/ LDR         R2, [R4, #408]              @ 0x198 
    /*0000f4b4*/ CMP         R8, R3 
    /*0000f4b8*/ BEQ         RC_NewModeReset_xf5c4
    RC_NewModeReset_xf4bc:
    /*0000f4bc*/ ADD         R5, R4, #3248               @ 0xcb0 
    /*0000f4c0*/ MOV         IP, #0 
    /*0000f4c4*/ STRD        R0, [R5, #-8] 
    /*0000f4c8*/ LDR         R3, [R4, #352]              @ 0x160 
    /*0000f4cc*/ STR         R8, [R4, #3248]             @ 0xcb0 
    /*0000f4d0*/ ADD         R1, R3, #7 
    /*0000f4d4*/ CMP         R3, IP 
    /*0000f4d8*/ STR         R7, [R4, #3492]             @ 0xda4 
    /*0000f4dc*/ MOVLT       R3, R1 
    /*0000f4e0*/ STR         R2, [R4, #3864]             @ 0xf18 
    /*0000f4e4*/ ASR         R3, R3, #3 
    /*0000f4e8*/ STR         IP, [R4, #3496]             @ 0xda8 
    /*0000f4ec*/ STR         R3, [R4, #3300]             @ 0xce4 
    RC_NewModeReset_xf4f0:
    /*0000f4f0*/ CMP         R8, #0 
    /*0000f4f4*/ MOV         R3, #0 
    /*0000f4f8*/ STR         R3, [R4, #3768]             @ 0xeb8 
    /*0000f4fc*/ MOVGT       R1, R3 
    /*0000f500*/ BLE         RC_NewModeReset_xf518
    RC_NewModeReset_xf504:
    /*0000f504*/ LDR         R2, [R4, #3864]             @ 0xf18 
    /*0000f508*/ STR         R1, [R2, R3, LSL #2] 
    /*0000f50c*/ ADD         R3, R3, #1 
    /*0000f510*/ CMP         R8, R3 
    /*0000f514*/ BNE         RC_NewModeReset_xf504
    RC_NewModeReset_xf518:
    /*0000f518*/ ADD         R3, R4, #3456               @ 0xd80 
    /*0000f51c*/ MOV         R0, #28928                  @ 0x7100 
    /*0000f520*/ ADD         R3, R3, #8 
    /*0000f524*/ MOVT        R0, #2 
    /*0000f528*/ ADD         R1, R4, #3488               @ 0xda0 
    /*0000f52c*/ MOV         IP, #16 
    RC_NewModeReset_xf530:
    /*0000f530*/ LDR         R2, [R3] 
    /*0000f534*/ CMP         R2, #0 
    /*0000f538*/ STREQ       IP, [R3] 
    /*0000f53c*/ BEQ         RC_NewModeReset_xf548
    /*0000f540*/ CMP         R2, R0 
    /*0000f544*/ STRGT       R0, [R3] 
    RC_NewModeReset_xf548:
    /*0000f548*/ ADD         R3, R3, #4 
    /*0000f54c*/ CMP         R3, R1 
    /*0000f550*/ BNE         RC_NewModeReset_xf530
    /*0000f554*/ MOV         R1, R6 
    /*0000f558*/ MOV         R0, R4 
    /*0000f55c*/ BL          0x000000000000A5BC 
    /*0000f560*/ LDR         R2, [R4, #3344]             @ 0xd10 
    /*0000f564*/ MOV         R0, #10 
    /*0000f568*/ LDR         LR, [R4, #3248]             @ 0xcb0 
    /*0000f56c*/ LDR         R1, [R4, #3304]             @ 0xce8 
    /*0000f570*/ ADD         R3, R4, #3568               @ 0xdf0 
    /*0000f574*/ MUL         R0, R0, R2 
    /*0000f578*/ ADD         R2, R4, #3600               @ 0xe10 
    /*0000f57c*/ LDRD        R6, [R5, #-8] 
    /*0000f580*/ MVN         IP, #0 
    /*0000f584*/ STR         IP, [R4, #3600]             @ 0xe10 
    /*0000f588*/ STR         IP, [R4, #3604]             @ 0xe14 
    /*0000f58c*/ STR         R0, [R4, #3536]             @ 0xdd0 
    /*0000f590*/ STR         R0, [R4, #3540]             @ 0xdd4 
    RC_NewModeReset_xf594:
    /*0000f594*/ STR         R1, [R3], #4 
    /*0000f598*/ CMP         R2, R3 
    /*0000f59c*/ BNE         RC_NewModeReset_xf594
    /*0000f5a0*/ ADD         R1, R4, #3776               @ 0xec0 
    /*0000f5a4*/ ADD         R2, R4, #3792               @ 0xed0 
    /*0000f5a8*/ STR         LR, [R4, #3772]             @ 0xebc 
    /*0000f5ac*/ MOV         R3, #100                    @ 0x64 
    /*0000f5b0*/ STRD        R6, [R1] 
    /*0000f5b4*/ MOV         R0, #0 
    /*0000f5b8*/ STRD        R6, [R2, #-8] 
    /*0000f5bc*/ STR         R3, [R4, #3700]             @ 0xe74 
    /*0000f5c0*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_NewModeReset_xf5c4:
    /*0000f5c4*/ LDR         R3, [R4, #3864]             @ 0xf18 
    /*0000f5c8*/ CMP         R3, R2 
    /*0000f5cc*/ BNE         RC_NewModeReset_xf4bc
    /*0000f5d0*/ ADD         R5, R4, #3248               @ 0xcb0 
    /*0000f5d4*/ MOV         R2, #0 
    /*0000f5d8*/ STRD        R0, [R5, #-8] 
    /*0000f5dc*/ LDR         R3, [R4, #352]              @ 0x160 
    /*0000f5e0*/ LDR         R1, [R4, #3128]             @ 0xc38 
    /*0000f5e4*/ CMP         R3, R2 
    /*0000f5e8*/ ADD         R0, R3, #7 
    /*0000f5ec*/ STR         R7, [R4, #3492]             @ 0xda4 
    /*0000f5f0*/ MOVLT       R3, R0 
    /*0000f5f4*/ CMP         R1, #1 
    /*0000f5f8*/ ASR         R3, R3, #3 
    /*0000f5fc*/ STR         R2, [R4, #3496]             @ 0xda8 
    /*0000f600*/ STR         R3, [R4, #3300]             @ 0xce4 
    /*0000f604*/ BNE         RC_NewModeReset_xf518
    /*0000f608*/ B           RC_NewModeReset_xf4f0
    RC_NewModeReset_xf60c:
    /*0000f60c*/ LDR         R3, [R4] 
    /*0000f610*/ LDR         IP, [R4, #56]               @ 0x38 
    /*0000f614*/ SUB         R3, R3, #2 
    /*0000f618*/ LDR         R2, [R4, #44]               @ 0x2c 
    /*0000f61c*/ CMP         R3, #1 
    /*0000f620*/ LDRLS       R5, [R4, #24] 
    /*0000f624*/ LSR         R3, R2, #16 
    /*0000f628*/ LDRHI       R5, [R4, #32] 
    /*0000f62c*/ CMP         R3, #0 
    /*0000f630*/ UXTH        R2, R2 
    /*0000f634*/ UMULL       R0, R1, R5, IP 
    /*0000f638*/ ASR         R9, R5, #31 
    /*0000f63c*/ MOV         R8, R5 
    /*0000f640*/ MLA         R1, IP, R9, R1 
    /*0000f644*/ UMULLNE     R8, R9, R3, R0 
    /*0000f648*/ MLANE       R9, R3, R1, R9 
    /*0000f64c*/ MOVNE       R0, R8 
    /*0000f650*/ MOVNE       R1, R9 
    /*0000f654*/ BL          0x000000000000F654          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000f658*/ LDR         R3, [R4, #3248]             @ 0xcb0 
    /*0000f65c*/ LDR         IP, [R4, #408]              @ 0x198 
    /*0000f660*/ CMP         R5, R3 
    /*0000f664*/ BEQ         RC_NewModeReset_xf710
    RC_NewModeReset_xf668:
    /*0000f668*/ ADD         R3, R4, #3248               @ 0xcb0 
    /*0000f66c*/ MOV         R2, #0 
    /*0000f670*/ STRD        R0, [R3, #-8] 
    /*0000f674*/ LDR         R3, [R4, #352]              @ 0x160 
    /*0000f678*/ STR         R5, [R4, #3248]             @ 0xcb0 
    /*0000f67c*/ ADD         R1, R3, #7 
    /*0000f680*/ CMP         R3, R2 
    /*0000f684*/ STR         IP, [R4, #3864]             @ 0xf18 
    /*0000f688*/ MOVLT       R3, R1 
    /*0000f68c*/ STR         R2, [R4, #3496]             @ 0xda8 
    /*0000f690*/ ASR         R3, R3, #3 
    /*0000f694*/ STR         R2, [R4, #3268]             @ 0xcc4 
    /*0000f698*/ STR         R3, [R4, #3300]             @ 0xce4 
    RC_NewModeReset_xf69c:
    /*0000f69c*/ CMP         R5, #0 
    /*0000f6a0*/ MOV         R3, #0 
    /*0000f6a4*/ STR         R3, [R4, #3768]             @ 0xeb8 
    /*0000f6a8*/ BLE         RC_NewModeReset_xf6c4
    /*0000f6ac*/ MOV         R1, R3 
    RC_NewModeReset_xf6b0:
    /*0000f6b0*/ LDR         R2, [R4, #3864]             @ 0xf18 
    /*0000f6b4*/ STR         R1, [R2, R3, LSL #2] 
    /*0000f6b8*/ ADD         R3, R3, #1 
    /*0000f6bc*/ CMP         R5, R3 
    /*0000f6c0*/ BNE         RC_NewModeReset_xf6b0
    RC_NewModeReset_xf6c4:
    /*0000f6c4*/ ADD         R3, R4, #3456               @ 0xd80 
    /*0000f6c8*/ MOV         R0, #28928                  @ 0x7100 
    /*0000f6cc*/ ADD         R3, R3, #8 
    /*0000f6d0*/ MOVT        R0, #2 
    /*0000f6d4*/ ADD         R1, R4, #3488               @ 0xda0 
    /*0000f6d8*/ MOV         IP, #16 
    RC_NewModeReset_xf6dc:
    /*0000f6dc*/ LDR         R2, [R3] 
    /*0000f6e0*/ CMP         R2, #0 
    /*0000f6e4*/ STREQ       IP, [R3] 
    /*0000f6e8*/ BEQ         RC_NewModeReset_xf6f4
    /*0000f6ec*/ CMP         R2, R0 
    /*0000f6f0*/ STRGT       R0, [R3] 
    RC_NewModeReset_xf6f4:
    /*0000f6f4*/ ADD         R3, R3, #4 
    /*0000f6f8*/ CMP         R1, R3 
    /*0000f6fc*/ BNE         RC_NewModeReset_xf6dc
    /*0000f700*/ MOV         R1, R6 
    /*0000f704*/ MOV         R0, R4 
    /*0000f708*/ BL          0x000000000000A5BC 
    /*0000f70c*/ B           RC_NewModeReset_xf414
    RC_NewModeReset_xf710:
    /*0000f710*/ LDR         R3, [R4, #3864]             @ 0xf18 
    /*0000f714*/ CMP         R3, IP 
    /*0000f718*/ BNE         RC_NewModeReset_xf668
    /*0000f71c*/ ADD         R3, R4, #3248               @ 0xcb0 
    /*0000f720*/ MOV         R2, #0 
    /*0000f724*/ STRD        R0, [R3, #-8] 
    /*0000f728*/ LDR         R3, [R4, #352]              @ 0x160 
    /*0000f72c*/ LDR         R1, [R4, #3128]             @ 0xc38 
    /*0000f730*/ CMP         R3, R2 
    /*0000f734*/ ADD         R0, R3, #7 
    /*0000f738*/ STR         R2, [R4, #3496]             @ 0xda8 
    /*0000f73c*/ MOVLT       R3, R0 
    /*0000f740*/ CMP         R1, #1 
    /*0000f744*/ ASR         R3, R3, #3 
    /*0000f748*/ STR         R2, [R4, #3268]             @ 0xcc4 
    /*0000f74c*/ STR         R3, [R4, #3300]             @ 0xce4 
    /*0000f750*/ BNE         RC_NewModeReset_xf6c4
    /*0000f754*/ B           RC_NewModeReset_xf69c
FUNC_END RC_NewModeReset


FUNC_BEGIN RC_NewModelReEncDecision
    /*0000f758*/ LDR         R3, [R1, #48]               @ 0x30 
    /*0000f75c*/ MOVW        IP, #265                    @ 0x109 
    /*0000f760*/ CMP         R3, IP 
    /*0000f764*/ CMPNE       R3, #96                     @ 0x60 
    /*0000f768*/ BNE         RC_NewModelReEncDecision_xf790
    /*0000f76c*/ LDR         R3, [R1, #52]               @ 0x34 
    /*0000f770*/ CMP         R3, #1 
    /*0000f774*/ BEQ         RC_NewModelReEncDecision_xf7b0
    /*0000f778*/ SUB         R2, R3, #2 
    /*0000f77c*/ CMP         R3, #0 
    /*0000f780*/ CMPNE       R2, #2 
    /*0000f784*/ BLS         RC_NewModelReEncDecision_xf7ac
    RC_NewModelReEncDecision_xf788:
    /*0000f788*/ MOV         R0, #0 
    /*0000f78c*/ BX          LR 
    RC_NewModelReEncDecision_xf790:
    /*0000f790*/ MOVW        IP, #1002                   @ 0x3ea 
    /*0000f794*/ CMP         R3, IP 
    /*0000f798*/ BNE         RC_NewModelReEncDecision_xf788
    /*0000f79c*/ LDR         R3, [R1, #52]               @ 0x34 
    /*0000f7a0*/ CMP         R3, #1 
    /*0000f7a4*/ BHI         RC_NewModelReEncDecision_xf788
    RC_NewModelReEncDecision_xf7a8:
    /*0000f7a8*/ B           RC_NewModelReEncDecision_xf7a8@ RCReEncDecisionMjpeg [R_ARM_JUMP24: .text+0xc044] 
    RC_NewModelReEncDecision_xf7ac:
    /*0000f7ac*/ B           RC_NewModelReEncDecision_xf7ac@ RCReEncDecisionVbr [R_ARM_JUMP24: .text+0xbc60] 
    RC_NewModelReEncDecision_xf7b0:
    /*0000f7b0*/ B           RC_NewModelReEncDecision_xf7b0@ RCReEncDecisionCbr [R_ARM_JUMP24: .text+0xb634] 
FUNC_END RC_NewModelReEncDecision


FUNC_BEGIN RC_NewModeSetRcPriority
    /*0000f7b4*/ LDR         R3, [R1] 
    /*0000f7b8*/ MOV         R2, R0 
    /*0000f7bc*/ CMP         R3, #1 
    /*0000f7c0*/ BEQ         RC_NewModeSetRcPriority_xf7dc
    /*0000f7c4*/ CMP         R3, #2 
    /*0000f7c8*/ MOVEQ       R3, #1 
    /*0000f7cc*/ MOVEQ       R0, #0 
    /*0000f7d0*/ STREQ       R3, [R2, #3488]             @ 0xda0 
    /*0000f7d4*/ MVNNE       R0, #0 
    /*0000f7d8*/ BX          LR 
    RC_NewModeSetRcPriority_xf7dc:
    /*0000f7dc*/ MOV         R3, #0 
    /*0000f7e0*/ STR         R3, [R0, #3488]             @ 0xda0 
    /*0000f7e4*/ MOV         R0, R3 
    /*0000f7e8*/ BX          LR 
FUNC_END RC_NewModeSetRcPriority


FUNC_BEGIN RC_NewModeGetRcPriority
    /*0000f7ec*/ LDR         R0, [R0, #3488]             @ 0xda0 
    /*0000f7f0*/ CMP         R0, #0 
    /*0000f7f4*/ BEQ         RC_NewModeGetRcPriority_xf810
    /*0000f7f8*/ CMP         R0, #1 
    /*0000f7fc*/ MOVEQ       R3, #2 
    /*0000f800*/ MOVEQ       R0, #0 
    /*0000f804*/ STREQ       R3, [R1] 
    /*0000f808*/ MVNNE       R0, #0 
    /*0000f80c*/ BX          LR 
    RC_NewModeGetRcPriority_xf810:
    /*0000f810*/ MOV         R3, #1 
    /*0000f814*/ STR         R3, [R1] 
    /*0000f818*/ BX          LR 
FUNC_END RC_NewModeGetRcPriority


FUNC_BEGIN RC_NewModeUpdateStatics
    /*0000f81c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000f820*/ MOV         SL, R1 
    /*0000f824*/ LDR         R2, [SL, #48]               @ 0x30 
    /*0000f828*/ MOVW        R1, #265                    @ 0x109 
    /*0000f82c*/ SUB         SP, SP, #52                 @ 0x34 
    /*0000f830*/ CMP         R2, #96                     @ 0x60 
    /*0000f834*/ CMPNE       R2, R1 
    /*0000f838*/ BNE         RC_NewModeUpdateStatics_xfd94
    /*0000f83c*/ LDR         R2, [SL, #52]               @ 0x34 
    /*0000f840*/ SUB         R2, R2, #2 
    /*0000f844*/ BICS        R3, R2, #2 
    /*0000f848*/ BNE         RC_NewModeUpdateStatics_xfd94
    /*0000f84c*/ LDR         R2, [SL, #1508]             @ 0x5e4 
    /*0000f850*/ LDR         R1, [SL, #1640]             @ 0x668 
    /*0000f854*/ CMP         R2, #6 
    /*0000f858*/ LDR         R9, [SL, #44]               @ 0x2c 
    /*0000f85c*/ LDR         R3, [SL, #3248]             @ 0xcb0 
    /*0000f860*/ BEQ         RC_NewModeUpdateStatics_xfdf8
    RC_NewModeUpdateStatics_xf864:
    /*0000f864*/ LDR         R0, [SL, #3768]             @ 0xeb8 
    /*0000f868*/ LDR         R2, [SL, #3864]             @ 0xf18 
    /*0000f86c*/ STR         R1, [R2, R0, LSL #2] 
    /*0000f870*/ LDR         R2, [SL, #3768]             @ 0xeb8 
    /*0000f874*/ LDR         R1, [SL, #3772]             @ 0xebc 
    /*0000f878*/ ADD         R2, R2, #1 
    /*0000f87c*/ STR         R2, [SL, #3768]             @ 0xeb8 
    /*0000f880*/ CMP         R2, R1 
    /*0000f884*/ MOVGE       R2, #0 
    /*0000f888*/ STRGE       R2, [SL, #3768]             @ 0xeb8 
    RC_NewModeUpdateStatics_xf88c:
    /*0000f88c*/ LDR         R6, [SL, #3536]             @ 0xdd0 
    /*0000f890*/ ADD         R2, SL, #3568               @ 0xdf0 
    /*0000f894*/ LDR         IP, [SL, #3540]             @ 0xdd4 
    /*0000f898*/ ADD         LR, SL, #3600               @ 0xe10 
    /*0000f89c*/ MOV         R0, #0 
    /*0000f8a0*/ ADD         R6, R6, IP 
    RC_NewModeUpdateStatics_xf8a4:
    /*0000f8a4*/ LDR         IP, [R2], #4 
    /*0000f8a8*/ CMP         LR, R2 
    /*0000f8ac*/ ADD         R0, R0, IP 
    /*0000f8b0*/ BNE         RC_NewModeUpdateStatics_xf8a4
    /*0000f8b4*/ ADD         R6, R6, R6, LSR #31 
    /*0000f8b8*/ ADD         R2, R0, #7 
    /*0000f8bc*/ CMP         R0, #0 
    /*0000f8c0*/ UXTH        R8, R9 
    /*0000f8c4*/ ASR         R6, R6, #1 
    /*0000f8c8*/ MOVLT       R0, R2 
    /*0000f8cc*/ SUB         R2, R1, #1 
    /*0000f8d0*/ ASR         R7, R6, #31 
    /*0000f8d4*/ ASR         R0, R0, #3 
    /*0000f8d8*/ CMP         R1, #0 
    /*0000f8dc*/ SMLAL       R6, R7, R2, R0 
    /*0000f8e0*/ BLE         RC_NewModeUpdateStatics_xfe60
    /*0000f8e4*/ LDR         R2, [SL, #3864]             @ 0xf18 
    /*0000f8e8*/ MOV         R4, #0 
    /*0000f8ec*/ MOV         R5, #0 
    /*0000f8f0*/ ADD         R1, R2, R1, LSL #2 
    RC_NewModeUpdateStatics_xf8f4:
    /*0000f8f4*/ LDR         R0, [R2], #4 
    /*0000f8f8*/ ADDS        R4, R4, R0 
    /*0000f8fc*/ ADC         R5, R5, R0, ASR #31 
    /*0000f900*/ CMP         R1, R2 
    /*0000f904*/ BNE         RC_NewModeUpdateStatics_xf8f4
    /*0000f908*/ UMULL       R0, R1, R4, R8 
    /*0000f90c*/ MOV         FP, #0 
    /*0000f910*/ MLA         R1, R8, R5, R1 
    RC_NewModeUpdateStatics_xf914:
    /*0000f914*/ ADD         IP, SL, #3776               @ 0xec0 
    /*0000f918*/ ADD         R2, SL, #3792               @ 0xed0 
    /*0000f91c*/ LSRS        R9, R9, #16 
    /*0000f920*/ STRD        R4, [IP] 
    /*0000f924*/ STRD        R6, [R2, #-8] 
    /*0000f928*/ BNE         RC_NewModeUpdateStatics_xfda0
    /*0000f92c*/ MOV         R2, R3 
    /*0000f930*/ STR         R3, [SP] 
    /*0000f934*/ BL          0x000000000000F934          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000f938*/ MUL         FP, R6, FP 
    /*0000f93c*/ LDR         R3, [SP] 
    /*0000f940*/ MLA         FP, R8, R7, FP 
    /*0000f944*/ UMULL       R6, R7, R6, R8 
    /*0000f948*/ MOV         R2, R3 
    /*0000f94c*/ ADD         R7, FP, R7 
    /*0000f950*/ MOV         R1, R7 
    /*0000f954*/ STR         R0, [SL, #3292]             @ 0xcdc 
    /*0000f958*/ MOV         R0, R6 
    /*0000f95c*/ BL          0x000000000000F95C          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000f960*/ STR         R0, [SL, #3296]             @ 0xce0 
    RC_NewModeUpdateStatics_xf964:
    /*0000f964*/ LDR         R2, [SL, #52]               @ 0x34 
    /*0000f968*/ CMP         R2, #4 
    /*0000f96c*/ BNE         RC_NewModeUpdateStatics_xfd94
    /*0000f970*/ LDR         R1, [SL, #56]               @ 0x38 
    /*0000f974*/ LDR         FP, [SL, #68]               @ 0x44 
    /*0000f978*/ LDR         R3, [SL, #72]               @ 0x48 
    /*0000f97c*/ SUB         R1, R1, R1, LSR #3 
    /*0000f980*/ LDR         R4, [SL, #64]               @ 0x40 
    /*0000f984*/ MOV         R2, FP 
    /*0000f988*/ LDR         R7, [SL, #288]              @ 0x120 
    /*0000f98c*/ LSL         R0, R1, #8 
    /*0000f990*/ LSR         R1, R1, #24 
    /*0000f994*/ STR         R3, [SP, #32] 
    /*0000f998*/ LSR         R8, FP, #10 
    /*0000f99c*/ LDR         R5, [SL, #284]              @ 0x11c 
    /*0000f9a0*/ BL          0x000000000000F9A0          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    /*0000f9a4*/ LDR         R2, [SL, #44]               @ 0x2c 
    /*0000f9a8*/ UXTH        R3, R2 
    /*0000f9ac*/ STR         R3, [SP, #12] 
    /*0000f9b0*/ MOV         R6, R0 
    /*0000f9b4*/ UMULL       R0, R1, R4, R7 
    /*0000f9b8*/ STRD        R0, [SP, #40]               @ 0x28 
    /*0000f9bc*/ LSRS        R1, R2, #16 
    /*0000f9c0*/ STR         R1, [SP, #36]               @ 0x24 
    /*0000f9c4*/ BNE         RC_NewModeUpdateStatics_xfe2c
    /*0000f9c8*/ LDR         R3, [SP, #12] 
    /*0000f9cc*/ MUL         R7, R3, R7 
    RC_NewModeUpdateStatics_xf9d0:
    /*0000f9d0*/ LDR         R2, [SL, #1512]             @ 0x5e8 
    /*0000f9d4*/ CMP         R2, #3 
    /*0000f9d8*/ BEQ         RC_NewModeUpdateStatics_xf9f4
    /*0000f9dc*/ ADD         R2, SL, #3888               @ 0xf30 
    /*0000f9e0*/ LDR         IP, [SL, #1640]             @ 0x668 
    /*0000f9e4*/ LDRD        R0, [R2, #-8] 
    /*0000f9e8*/ ADDS        R0, R0, IP 
    /*0000f9ec*/ ADC         R1, R1, #0 
    /*0000f9f0*/ STRD        R0, [R2, #-8] 
    RC_NewModeUpdateStatics_xf9f4:
    /*0000f9f4*/ LDR         R0, [SL, #1556]             @ 0x614 
    /*0000f9f8*/ MOV         R1, R7 
    /*0000f9fc*/ ADD         R0, R0, #1 
    /*0000fa00*/ BL          0x000000000000FA00          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*0000fa04*/ CMP         R1, #0 
    /*0000fa08*/ BEQ         RC_NewModeUpdateStatics_xfe78
    /*0000fa0c*/ ADD         R4, SL, #1408               @ 0x580 
    /*0000fa10*/ ADD         R4, R4, #8 
    RC_NewModeUpdateStatics_xfa14:
    /*0000fa14*/ LDR         R2, [SL, #1432]             @ 0x598 
    /*0000fa18*/ LDR         R1, [SL, #1420]             @ 0x58c 
    /*0000fa1c*/ CMP         R2, R1 
    /*0000fa20*/ BEQ         RC_NewModeUpdateStatics_xfeac
    /*0000fa24*/ LDR         R0, [SL, #1556]             @ 0x614 
    /*0000fa28*/ MOV         R1, R7 
    /*0000fa2c*/ MUL         R9, R7, R2 
    /*0000fa30*/ ADD         R0, R0, #1 
    /*0000fa34*/ BL          0x000000000000FA34          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*0000fa38*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000fa3c*/ CMP         R3, #0 
    /*0000fa40*/ LDRNE       R2, [SP, #12] 
    /*0000fa44*/ LDREQ       R2, [SP, #12] 
    /*0000fa48*/ ADD         IP, R1, R9 
    /*0000fa4c*/ UMULLNE     R8, R9, R8, R3 
    /*0000fa50*/ UMULLEQ     R0, R1, R8, IP 
    /*0000fa54*/ UMULLNE     R0, R1, R8, IP 
    /*0000fa58*/ MLANE       R1, IP, R9, R1 
    /*0000fa5c*/ BL          0x000000000000FA5C          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    /*0000fa60*/ STRD        R0, [SP] 
    RC_NewModeUpdateStatics_xfa64:
    /*0000fa64*/ LDRD        R8, [SP] 
    /*0000fa68*/ MOV         R2, #100                    @ 0x64 
    /*0000fa6c*/ UMULL       R0, R1, R5, R8 
    /*0000fa70*/ MLA         R1, R5, R9, R1 
    /*0000fa74*/ BL          0x000000000000FA74          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    /*0000fa78*/ STRD        R0, [SP, #24] 
    /*0000fa7c*/ MOV         R0, R4 
    /*0000fa80*/ BL          0x000000000000A1BC 
    /*0000fa84*/ ADDS        R4, R8, R8 
    /*0000fa88*/ LDR         IP, [SL, #3880]             @ 0xf28 
    /*0000fa8c*/ ADC         R5, R9, R9 
    /*0000fa90*/ LDR         R1, [SL, #3884]             @ 0xf2c 
    /*0000fa94*/ ADDS        R4, R4, R4 
    /*0000fa98*/ MOV         R2, R8 
    /*0000fa9c*/ ADC         R5, R5, R5 
    /*0000faa0*/ ADDS        R8, R8, R4 
    /*0000faa4*/ MOV         R3, R9 
    /*0000faa8*/ ADC         R9, R9, R5 
    /*0000faac*/ STRD        R2, [SP] 
    /*0000fab0*/ ADDS        R4, R8, R8 
    /*0000fab4*/ LSR         R2, IP, #10 
    /*0000fab8*/ ADC         R5, R9, R9 
    /*0000fabc*/ ORR         R2, R2, R1, LSL #22 
    /*0000fac0*/ LSR         R8, R4, #3 
    /*0000fac4*/ LSR         R3, R1, #10 
    /*0000fac8*/ ORR         R8, R8, R5, LSL #29 
    /*0000facc*/ LSR         R9, R5, #3 
    /*0000fad0*/ ADDS        R4, R2, R0 
    /*0000fad4*/ ADC         R5, R3, #0 
    /*0000fad8*/ CMP         R5, R9 
    /*0000fadc*/ MOV         R2, R4 
    /*0000fae0*/ CMPEQ       R4, R8 
    /*0000fae4*/ MOV         R3, R5 
    /*0000fae8*/ STRD        R2, [SP, #16] 
    /*0000faec*/ BHI         RC_NewModeUpdateStatics_xfe4c
    /*0000faf0*/ LDRD        R0, [SP, #24] 
    /*0000faf4*/ LDRD        R8, [SP] 
    /*0000faf8*/ ADDS        R4, R8, R0 
    /*0000fafc*/ ADC         R5, R9, R1 
    /*0000fb00*/ MOV         R0, R4 
    /*0000fb04*/ MOV         R1, R5 
    /*0000fb08*/ CMP         R3, R1 
    /*0000fb0c*/ CMPEQ       R2, R0 
    /*0000fb10*/ MOV         R5, R3 
    /*0000fb14*/ BHI         RC_NewModeUpdateStatics_xfe4c
    /*0000fb18*/ MOV         R2, #980                    @ 0x3d4 
    /*0000fb1c*/ UMULL       R4, R5, R8, R2 
    /*0000fb20*/ MLA         R5, R2, R9, R5 
    /*0000fb24*/ LSR         R0, R4, #10 
    /*0000fb28*/ LDRD        R2, [SP, #24] 
    /*0000fb2c*/ ORR         R0, R0, R5, LSL #22 
    /*0000fb30*/ LSR         R1, R5, #10 
    /*0000fb34*/ ADDS        R2, R2, R0 
    /*0000fb38*/ LDRD        R4, [SP, #16] 
    /*0000fb3c*/ ADC         R3, R3, R1 
    /*0000fb40*/ CMP         R5, R3 
    /*0000fb44*/ CMPEQ       R4, R2 
    /*0000fb48*/ BHI         RC_NewModeUpdateStatics_xfed0
    /*0000fb4c*/ LSL         R2, R9, #4 
    /*0000fb50*/ LSL         R0, R8, #4 
    /*0000fb54*/ ORR         R1, R2, R8, LSR #28 
    /*0000fb58*/ SUBS        R2, R0, R8 
    /*0000fb5c*/ SBC         R3, R1, R9 
    /*0000fb60*/ MOV         R0, R2 
    /*0000fb64*/ LSL         IP, R0, #6 
    /*0000fb68*/ LSL         R2, R3, #6 
    /*0000fb6c*/ ORR         R2, R2, R0, LSR #26 
    /*0000fb70*/ LDRD        R0, [SP, #24] 
    /*0000fb74*/ LSR         R4, IP, #10 
    /*0000fb78*/ ORR         R4, R4, R2, LSL #22 
    /*0000fb7c*/ LSR         R5, R2, #10 
    /*0000fb80*/ ADDS        R0, R0, R4 
    /*0000fb84*/ LDRD        R2, [SP, #16] 
    /*0000fb88*/ ADC         R1, R1, R5 
    /*0000fb8c*/ CMP         R3, R1 
    /*0000fb90*/ CMPEQ       R2, R0 
    /*0000fb94*/ MOV         R5, R1 
    /*0000fb98*/ BHI         RC_NewModeUpdateStatics_xff08
    /*0000fb9c*/ MOV         R2, #940                    @ 0x3ac 
    /*0000fba0*/ UMULL       R4, R5, R8, R2 
    /*0000fba4*/ MLA         R5, R2, R9, R5 
    /*0000fba8*/ LSR         R0, R4, #10 
    /*0000fbac*/ LDRD        R2, [SP, #24] 
    /*0000fbb0*/ ORR         R0, R0, R5, LSL #22 
    /*0000fbb4*/ LSR         R1, R5, #10 
    /*0000fbb8*/ ADDS        R2, R2, R0 
    /*0000fbbc*/ LDRD        R4, [SP, #16] 
    /*0000fbc0*/ ADC         R3, R3, R1 
    /*0000fbc4*/ CMP         R5, R3 
    /*0000fbc8*/ CMPEQ       R4, R2 
    /*0000fbcc*/ BHI         RC_NewModeUpdateStatics_xff10
    /*0000fbd0*/ MOV         R2, #920                    @ 0x398 
    /*0000fbd4*/ UMULL       R4, R5, R8, R2 
    /*0000fbd8*/ MLA         R5, R2, R9, R5 
    /*0000fbdc*/ LSR         R0, R4, #10 
    /*0000fbe0*/ LDRD        R2, [SP, #24] 
    /*0000fbe4*/ ORR         R0, R0, R5, LSL #22 
    /*0000fbe8*/ LSR         R1, R5, #10 
    /*0000fbec*/ ADDS        R2, R2, R0 
    /*0000fbf0*/ LDRD        R4, [SP, #16] 
    /*0000fbf4*/ ADC         R3, R3, R1 
    /*0000fbf8*/ CMP         R5, R3 
    /*0000fbfc*/ CMPEQ       R4, R2 
    /*0000fc00*/ BHI         RC_NewModeUpdateStatics_xfe3c
    /*0000fc04*/ LSL         R2, R9, #3 
    /*0000fc08*/ LSL         R4, R8, #3 
    /*0000fc0c*/ ORR         R5, R2, R8, LSR #29 
    /*0000fc10*/ SUBS        R2, R4, R8 
    /*0000fc14*/ SBC         R3, R5, R9 
    /*0000fc18*/ MOV         R4, R2 
    /*0000fc1c*/ LSL         R2, R3, #5 
    /*0000fc20*/ LSL         R1, R4, #5 
    /*0000fc24*/ ORR         R2, R2, R4, LSR #27 
    /*0000fc28*/ MOV         R5, R2 
    /*0000fc2c*/ LDRD        R2, [SP] 
    /*0000fc30*/ ADDS        R2, R2, R1 
    /*0000fc34*/ ADC         R3, R3, R5 
    /*0000fc38*/ ADDS        R0, R2, R2 
    /*0000fc3c*/ ADC         R1, R3, R3 
    /*0000fc40*/ ADDS        R0, R0, R0 
    /*0000fc44*/ ADC         R1, R1, R1 
    /*0000fc48*/ LDRD        R4, [SP, #16] 
    /*0000fc4c*/ LSR         R8, R0, #10 
    /*0000fc50*/ ORR         R8, R8, R1, LSL #22 
    /*0000fc54*/ LSR         R9, R1, #10 
    /*0000fc58*/ LDRD        R0, [SP, #24] 
    /*0000fc5c*/ ADDS        R0, R0, R8 
    /*0000fc60*/ ADC         R1, R1, R9 
    /*0000fc64*/ CMP         R5, R1 
    /*0000fc68*/ CMPEQ       R4, R0 
    /*0000fc6c*/ MOVHI       R2, #320                    @ 0x140 
    /*0000fc70*/ BHI         RC_NewModeUpdateStatics_xfe40
    RC_NewModeUpdateStatics_xfc74:
    /*0000fc74*/ LDR         R2, [SL, #3868]             @ 0xf1c 
    /*0000fc78*/ CMP         R2, R6 
    /*0000fc7c*/ BCS         RC_NewModeUpdateStatics_xfc8c
    /*0000fc80*/ SUB         R1, R6, R2 
    /*0000fc84*/ CMP         R1, #4 
    /*0000fc88*/ ADDHI       R6, R2, #4 
    RC_NewModeUpdateStatics_xfc8c:
    /*0000fc8c*/ CMP         R2, R6 
    /*0000fc90*/ BLS         RC_NewModeUpdateStatics_xfca0
    /*0000fc94*/ SUB         R1, R2, R6 
    /*0000fc98*/ CMP         R1, #4 
    /*0000fc9c*/ SUBHI       R6, R2, #4 
    RC_NewModeUpdateStatics_xfca0:
    /*0000fca0*/ MUL         R2, R6, FP 
    /*0000fca4*/ LDR         R3, [SP, #32] 
    /*0000fca8*/ STR         R6, [SL, #3868]             @ 0xf1c 
    /*0000fcac*/ CMP         R3, #0 
    /*0000fcb0*/ LSR         R2, R2, #8 
    /*0000fcb4*/ STR         R2, [SL, #3896]             @ 0xf38 
    /*0000fcb8*/ BEQ         RC_NewModeUpdateStatics_xfe54
    /*0000fcbc*/ LDR         R0, [SL, #1556]             @ 0x614 
    /*0000fcc0*/ CMP         R0, #1000                   @ 0x3e8 
    /*0000fcc4*/ BLS         RC_NewModeUpdateStatics_xfe54
    /*0000fcc8*/ LDR         R2, [SL, #1432]             @ 0x598 
    /*0000fccc*/ LSR         R4, R3, #10 
    /*0000fcd0*/ LDR         R1, [SL, #1420]             @ 0x58c 
    /*0000fcd4*/ CMP         R2, R1 
    /*0000fcd8*/ BEQ         RC_NewModeUpdateStatics_xfef8
    /*0000fcdc*/ MOV         R1, R7 
    /*0000fce0*/ ADD         R0, R0, #1 
    /*0000fce4*/ MUL         R7, R7, R2 
    /*0000fce8*/ BL          0x000000000000FCE8          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*0000fcec*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000fcf0*/ CMP         R3, #0 
    /*0000fcf4*/ UMULLNE     R4, R5, R4, R3 
    /*0000fcf8*/ LDRNE       R2, [SP, #12] 
    /*0000fcfc*/ LDREQ       R2, [SP, #12] 
    /*0000fd00*/ ADD         R7, R1, R7 
    /*0000fd04*/ UMULLNE     R0, R1, R4, R7 
    /*0000fd08*/ UMULLEQ     R0, R1, R4, R7 
    /*0000fd0c*/ MLANE       R1, R7, R5, R1 
    /*0000fd10*/ BL          0x000000000000FD10          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    RC_NewModeUpdateStatics_xfd14:
    /*0000fd14*/ LSR         R2, R0, #4 
    /*0000fd18*/ LSR         R3, R1, #4 
    /*0000fd1c*/ ORR         R2, R2, R1, LSL #28 
    /*0000fd20*/ ORRS        R1, R2, R3 
    /*0000fd24*/ MOVEQ       R4, #0 
    /*0000fd28*/ BNE         RC_NewModeUpdateStatics_xfed8
    RC_NewModeUpdateStatics_xfd2c:
    /*0000fd2c*/ LDR         R3, [SP, #32] 
    /*0000fd30*/ LSRS        R1, R3, #14 
    /*0000fd34*/ BEQ         RC_NewModeUpdateStatics_xfd58
    /*0000fd38*/ LDR         R0, [SL, #3292]             @ 0xcdc 
    /*0000fd3c*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000fd40*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000fd44*/ ASR         R0, R0, #10 
    /*0000fd48*/ BL          0x000000000000FD48          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000fd4c*/ USAT        R0, #5, R0 
    /*0000fd50*/ ADD         R5, R5, R0, LSL #2 
    /*0000fd54*/ LDR         R1, [R5, #2120]             @ 0x848 
    RC_NewModeUpdateStatics_xfd58:
    /*0000fd58*/ LDR         R0, [SL, #3872]             @ 0xf20 
    /*0000fd5c*/ ADD         R2, R4, R1 
    /*0000fd60*/ MOV         R1, #57856                  @ 0xe200 
    /*0000fd64*/ MOVT        R1, #65535                  @ 0xffff 
    /*0000fd68*/ ADD         R2, R2, R0 
    /*0000fd6c*/ CMN         R2, #7680                   @ 0x1e00 
    /*0000fd70*/ BLT         RC_NewModeUpdateStatics_xfec4
    /*0000fd74*/ AND         R2, R2, R2, ASR #31 
    /*0000fd78*/ STR         R2, [SL, #3872]             @ 0xf20 
    /*0000fd7c*/ ADD         R1, R2, #508                @ 0x1fc 
    /*0000fd80*/ CMP         R2, #0 
    /*0000fd84*/ ADD         R1, R1, #3 
    /*0000fd88*/ MOVLT       R2, R1 
    /*0000fd8c*/ ASR         R2, R2, #9 
    RC_NewModeUpdateStatics_xfd90:
    /*0000fd90*/ STR         R2, [SL, #3888]             @ 0xf30 
    RC_NewModeUpdateStatics_xfd94:
    /*0000fd94*/ MOV         R0, #0 
    /*0000fd98*/ ADD         SP, SP, #52                 @ 0x34 
    /*0000fd9c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_NewModeUpdateStatics_xfda0:
    /*0000fda0*/ MOV         R2, R9 
    /*0000fda4*/ STR         R3, [SP] 
    /*0000fda8*/ BL          0x000000000000FDA8          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000fdac*/ LDR         R3, [SP] 
    /*0000fdb0*/ MUL         FP, R6, FP 
    /*0000fdb4*/ MOV         R2, R3 
    /*0000fdb8*/ MLA         FP, R8, R7, FP 
    /*0000fdbc*/ UMULL       R6, R7, R6, R8 
    /*0000fdc0*/ ADD         R7, FP, R7 
    /*0000fdc4*/ ASR         R1, R0, #31 
    /*0000fdc8*/ BL          0x000000000000FDC8          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000fdcc*/ MOV         R2, R9 
    /*0000fdd0*/ MOV         R1, R7 
    /*0000fdd4*/ STR         R0, [SL, #3292]             @ 0xcdc 
    /*0000fdd8*/ MOV         R0, R6 
    /*0000fddc*/ BL          0x000000000000FDDC          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000fde0*/ LDR         R3, [SP] 
    /*0000fde4*/ MOV         R2, R3 
    /*0000fde8*/ ASR         R1, R0, #31 
    /*0000fdec*/ BL          0x000000000000FDEC          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0000fdf0*/ STR         R0, [SL, #3296]             @ 0xce0 
    /*0000fdf4*/ B           RC_NewModeUpdateStatics_xf964
    RC_NewModeUpdateStatics_xfdf8:
    /*0000fdf8*/ LDR         R2, [SL, #1512]             @ 0x5e8 
    /*0000fdfc*/ CMP         R2, #5 
    /*0000fe00*/ BNE         RC_NewModeUpdateStatics_xf864
    /*0000fe04*/ LDR         R2, [SL, #3768]             @ 0xeb8 
    /*0000fe08*/ LDR         IP, [SL, #3864]             @ 0xf18 
    /*0000fe0c*/ SUBS        R2, R2, #1 
    /*0000fe10*/ LDRMI       R2, [SL, #3772]             @ 0xebc 
    /*0000fe14*/ SUBMI       R2, R2, #1 
    /*0000fe18*/ LDR         R0, [IP, R2, LSL #2] 
    /*0000fe1c*/ ADD         R1, R0, R1 
    /*0000fe20*/ STR         R1, [IP, R2, LSL #2] 
    /*0000fe24*/ LDR         R1, [SL, #3772]             @ 0xebc 
    /*0000fe28*/ B           RC_NewModeUpdateStatics_xf88c
    RC_NewModeUpdateStatics_xfe2c:
    /*0000fe2c*/ MUL         R0, R3, R7 
    /*0000fe30*/ BL          0x000000000000FE30          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000fe34*/ MOV         R7, R0 
    /*0000fe38*/ B           RC_NewModeUpdateStatics_xf9d0
    RC_NewModeUpdateStatics_xfe3c:
    /*0000fe3c*/ MOV         R2, #304                    @ 0x130 
    RC_NewModeUpdateStatics_xfe40:
    /*0000fe40*/ CMP         R6, R2 
    /*0000fe44*/ MOVCS       R6, R2 
    /*0000fe48*/ B           RC_NewModeUpdateStatics_xfc74
    RC_NewModeUpdateStatics_xfe4c:
    /*0000fe4c*/ MOV         R2, #196                    @ 0xc4 
    /*0000fe50*/ B           RC_NewModeUpdateStatics_xfe40
    RC_NewModeUpdateStatics_xfe54:
    /*0000fe54*/ MOV         R2, #0 
    /*0000fe58*/ STR         R2, [SL, #3872]             @ 0xf20 
    /*0000fe5c*/ B           RC_NewModeUpdateStatics_xfd94
    RC_NewModeUpdateStatics_xfe60:
    /*0000fe60*/ MOV         R0, #0 
    /*0000fe64*/ MOV         R1, #0 
    /*0000fe68*/ MOV         FP, #0 
    /*0000fe6c*/ MOV         R4, R0 
    /*0000fe70*/ MOV         R5, R1 
    /*0000fe74*/ B           RC_NewModeUpdateStatics_xf914
    RC_NewModeUpdateStatics_xfe78:
    /*0000fe78*/ LDR         R2, [SL, #3880]             @ 0xf28 
    /*0000fe7c*/ ADD         R4, SL, #1408               @ 0x580 
    /*0000fe80*/ LDR         R1, [SL, #3884]             @ 0xf2c 
    /*0000fe84*/ ADD         R4, R4, #8 
    /*0000fe88*/ ADD         R9, SL, #3888               @ 0xf30 
    /*0000fe8c*/ LSR         R2, R2, #10 
    /*0000fe90*/ MOV         R0, R4 
    /*0000fe94*/ ORR         R1, R2, R1, LSL #22 
    /*0000fe98*/ BL          0x000000000000FE98          @ RcWrFifoElem [R_ARM_CALL: .text+0x4ed4] 
    /*0000fe9c*/ MOV         R0, #0 
    /*0000fea0*/ MOV         R1, #0 
    /*0000fea4*/ STRD        R0, [R9, #-8] 
    /*0000fea8*/ B           RC_NewModeUpdateStatics_xfa14
    RC_NewModeUpdateStatics_xfeac:
    /*0000feac*/ LDRD        R0, [SP, #40]               @ 0x28 
    /*0000feb0*/ UMULL       R2, R3, R8, R0 
    /*0000feb4*/ STRD        R2, [SP] 
    /*0000feb8*/ MLA         R3, R8, R1, R3 
    /*0000febc*/ STR         R3, [SP, #4] 
    /*0000fec0*/ B           RC_NewModeUpdateStatics_xfa64
    RC_NewModeUpdateStatics_xfec4:
    /*0000fec4*/ STR         R1, [SL, #3872]             @ 0xf20 
    /*0000fec8*/ MVN         R2, #14 
    /*0000fecc*/ B           RC_NewModeUpdateStatics_xfd90
    RC_NewModeUpdateStatics_xfed0:
    /*0000fed0*/ MOV         R2, #256                    @ 0x100 
    /*0000fed4*/ B           RC_NewModeUpdateStatics_xfe40
    RC_NewModeUpdateStatics_xfed8:
    /*0000fed8*/ LDRD        R0, [SP, #16] 
    /*0000fedc*/ BL          0x000000000000FEDC          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    /*0000fee0*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x52c] 
    /*0000fee4*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x52c] 
    /*0000fee8*/ USAT        R0, #5, R0 
    /*0000feec*/ ADD         R2, R2, R0, LSL #2 
    /*0000fef0*/ LDR         R4, [R2, #1992]             @ 0x7c8 
    /*0000fef4*/ B           RC_NewModeUpdateStatics_xfd2c
    RC_NewModeUpdateStatics_xfef8:
    /*0000fef8*/ LDRD        R2, [SP, #40]               @ 0x28 
    /*0000fefc*/ UMULL       R0, R1, R4, R2 
    /*0000ff00*/ MLA         R1, R4, R3, R1 
    /*0000ff04*/ B           RC_NewModeUpdateStatics_xfd14
    RC_NewModeUpdateStatics_xff08:
    /*0000ff08*/ MOV         R2, #272                    @ 0x110 
    /*0000ff0c*/ B           RC_NewModeUpdateStatics_xfe40
    RC_NewModeUpdateStatics_xff10:
    /*0000ff10*/ MOV         R2, #288                    @ 0x120 
    /*0000ff14*/ B           RC_NewModeUpdateStatics_xfe40
FUNC_END RC_NewModeUpdateStatics


FUNC_BEGIN RcDrv_HEVC_SetRc
    /*0000ff18*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ff1c*/ MOV         R5, R1 
    /*0000ff20*/ LDR         R3, [R1, #92]               @ 0x5c 
    /*0000ff24*/ MOV         R4, R2 
    /*0000ff28*/ LDR         R1, [R2, #164]              @ 0xa4 
    /*0000ff2c*/ MOV         R6, R0 
    /*0000ff30*/ LDR         R2, [R2, #156]              @ 0x9c 
    /*0000ff34*/ SUB         SP, SP, #12 
    /*0000ff38*/ BFI         R3, R1, #0, #1 
    /*0000ff3c*/ LDR         R1, [R4, #288]              @ 0x120 
    /*0000ff40*/ BFI         R3, R2, #1, #1 
    /*0000ff44*/ LDR         R2, [R0, #2412]             @ 0x96c 
    /*0000ff48*/ BFC         R3, #8, #1 
    /*0000ff4c*/ LDR         R0, [R0, #2012]             @ 0x7dc 
    /*0000ff50*/ BFI         R3, R1, #19, #1 
    /*0000ff54*/ LDR         R1, [R6, #2416]             @ 0x970 
    /*0000ff58*/ BFI         R3, R2, #16, #1 
    /*0000ff5c*/ LDRB        R2, [R4, #200]              @ 0xc8 
    /*0000ff60*/ BFI         R3, R1, #17, #1 
    /*0000ff64*/ CMP         R0, #1 
    /*0000ff68*/ BFI         R3, R2, #18, #1 
    /*0000ff6c*/ MOV         R1, #0 
    /*0000ff70*/ BFCEQ       R3, #2, #1 
    /*0000ff74*/ MOV         R2, R1 
    /*0000ff78*/ BFCEQ       R3, #4, #1 
    /*0000ff7c*/ MOV         R7, R1 
    /*0000ff80*/ BFCEQ       R3, #18, #1 
    /*0000ff84*/ MOV         R0, #51                     @ 0x33 
    /*0000ff88*/ BFCEQ       R3, #14, #1 
    /*0000ff8c*/ STR         R3, [R5, #92]               @ 0x5c 
    /*0000ff90*/ STR         R1, [R5, #96]               @ 0x60 
    /*0000ff94*/ BFI         R7, R1, #6, #1 
    /*0000ff98*/ LDR         R3, [R4] 
    /*0000ff9c*/ STR         R3, [R5, #100]              @ 0x64 
    /*0000ffa0*/ LDR         R3, [R5, #24] 
    /*0000ffa4*/ LDR         LR, [R4, #4] 
    /*0000ffa8*/ LDR         IP, [R4, #168]              @ 0xa8 
    /*0000ffac*/ BFI         R3, LR, #10, #6 
    /*0000ffb0*/ BFI         R3, IP, #19, #1 
    /*0000ffb4*/ STR         R3, [R5, #24] 
    /*0000ffb8*/ LDR         R3, [R5, #104]              @ 0x68 
    /*0000ffbc*/ BFI         R3, R1, #0, #6 
    /*0000ffc0*/ BFI         R3, R0, #8, #6 
    /*0000ffc4*/ STR         R3, [R5, #104]              @ 0x68 
    /*0000ffc8*/ LDR         R1, [R4, #12] 
    /*0000ffcc*/ LDR         R3, [R4, #8] 
    /*0000ffd0*/ BFI         R2, R1, #0, #6 
    /*0000ffd4*/ BFI         R2, R3, #8, #6 
    /*0000ffd8*/ STR         R2, [R5, #108]              @ 0x6c 
    /*0000ffdc*/ LDR         R3, [R6, #2412]             @ 0x96c 
    /*0000ffe0*/ CMP         R3, #1 
    /*0000ffe4*/ BEQ         RcDrv_HEVC_SetRc_x10390
    RcDrv_HEVC_SetRc_xffe8:
    /*0000ffe8*/ STR         R7, [R5, #112]              @ 0x70 
    /*0000ffec*/ LDR         R1, [R6, #2520]             @ 0x9d8 
    /*0000fff0*/ LDR         R0, [R4] 
    /*0000fff4*/ BL          0x000000000000FFF4          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000fff8*/ LDR         R2, [R4, #20] 
    /*0000fffc*/ MOV         R3, #0 
    /*00010000*/ BFI         R3, R0, #6, #25 
    /*00010004*/ BFI         R3, R2, #0, #4 
    /*00010008*/ STR         R3, [R5, #116]              @ 0x74 
    /*0001000c*/ LDR         R1, [R6, #2512]             @ 0x9d0 
    /*00010010*/ MOV         R6, #1 
    /*00010014*/ LDR         R0, [R4] 
    /*00010018*/ BL          0x0000000000010018          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001001c*/ MOV         R3, #0 
    /*00010020*/ MOV         IP, R3 
    /*00010024*/ MOV         SL, R3 
    /*00010028*/ MOV         R9, R3 
    /*0001002c*/ MOV         R8, R3 
    /*00010030*/ MOV         R7, R3 
    /*00010034*/ MOV         R1, R3 
    /*00010038*/ MOV         LR, R3 
    /*0001003c*/ MOV         FP, R3 
    /*00010040*/ MOV         R2, R3 
    /*00010044*/ BFC         R3, #0, #2 
    /*00010048*/ BFC         R3, #2, #2 
    /*0001004c*/ BFI         R3, R6, #4, #2 
    /*00010050*/ BFI         R3, R6, #6, #2 
    /*00010054*/ BFI         R3, R6, #8, #2 
    /*00010058*/ BFI         R3, R6, #10, #2 
    /*0001005c*/ BFI         R3, R6, #12, #2 
    /*00010060*/ BFI         R3, R6, #14, #2 
    /*00010064*/ BFI         R3, R6, #16, #2 
    /*00010068*/ BFI         R3, R6, #18, #2 
    /*0001006c*/ BFI         R3, R6, #20, #2 
    /*00010070*/ BFI         R3, R6, #22, #2 
    /*00010074*/ BFI         R3, R6, #24, #2 
    /*00010078*/ BFI         R3, R6, #26, #2 
    /*0001007c*/ BFI         R3, R6, #28, #2 
    /*00010080*/ BFI         R3, R6, #30, #2 
    /*00010084*/ MOV         R6, #40                     @ 0x28 
    /*00010088*/ BFI         IP, R0, #0, #16 
    /*0001008c*/ STR         IP, [R5, #120]              @ 0x78 
    /*00010090*/ LDR         R0, [R4, #24] 
    /*00010094*/ MOV         IP, LR 
    /*00010098*/ BFI         SL, R0, #0, #8 
    /*0001009c*/ LDR         R0, [R4, #28] 
    /*000100a0*/ BFI         SL, R0, #8, #8 
    /*000100a4*/ LDR         R0, [R4, #32] 
    /*000100a8*/ BFI         SL, R0, #16, #8 
    /*000100ac*/ LDR         R0, [R4, #36]               @ 0x24 
    /*000100b0*/ BFI         SL, R0, #24, #8 
    /*000100b4*/ STR         SL, [R5, #124]              @ 0x7c 
    /*000100b8*/ LDR         R0, [R4, #40]               @ 0x28 
    /*000100bc*/ BFI         R9, R0, #0, #8 
    /*000100c0*/ LDR         R0, [R4, #44]               @ 0x2c 
    /*000100c4*/ BFI         R9, R0, #8, #8 
    /*000100c8*/ LDR         R0, [R4, #48]               @ 0x30 
    /*000100cc*/ BFI         R9, R0, #16, #8 
    /*000100d0*/ LDR         R0, [R4, #52]               @ 0x34 
    /*000100d4*/ BFI         R9, R0, #24, #8 
    /*000100d8*/ STR         R9, [R5, #128]              @ 0x80 
    /*000100dc*/ LDR         R0, [R4, #56]               @ 0x38 
    /*000100e0*/ BFI         R8, R0, #0, #8 
    /*000100e4*/ LDR         R0, [R4, #60]               @ 0x3c 
    /*000100e8*/ BFI         R8, R0, #8, #8 
    /*000100ec*/ LDR         R0, [R4, #64]               @ 0x40 
    /*000100f0*/ BFI         R8, R0, #16, #8 
    /*000100f4*/ LDR         R0, [R4, #68]               @ 0x44 
    /*000100f8*/ BFI         R8, R0, #24, #8 
    /*000100fc*/ STR         R8, [R5, #132]              @ 0x84 
    /*00010100*/ LDR         R0, [R4, #72]               @ 0x48 
    /*00010104*/ BFI         R7, R0, #0, #8 
    /*00010108*/ LDR         R0, [R4, #76]               @ 0x4c 
    /*0001010c*/ BFI         R7, R0, #8, #8 
    /*00010110*/ LDR         R0, [R4, #80]               @ 0x50 
    /*00010114*/ BFI         R7, R0, #16, #8 
    /*00010118*/ LDR         R0, [R4, #84]               @ 0x54 
    /*0001011c*/ BFI         R7, R0, #24, #8 
    /*00010120*/ STR         R7, [R5, #136]              @ 0x88 
    /*00010124*/ LDR         R0, [R4, #88]               @ 0x58 
    /*00010128*/ BFI         R1, R0, #0, #2 
    /*0001012c*/ LDR         R0, [R4, #92]               @ 0x5c 
    /*00010130*/ BFI         R1, R0, #2, #2 
    /*00010134*/ LDR         R0, [R4, #96]               @ 0x60 
    /*00010138*/ BFI         R1, R0, #4, #2 
    /*0001013c*/ LDR         R0, [R4, #100]              @ 0x64 
    /*00010140*/ BFI         R1, R0, #6, #2 
    /*00010144*/ LDR         R0, [R4, #104]              @ 0x68 
    /*00010148*/ BFI         R1, R0, #8, #2 
    /*0001014c*/ LDR         R0, [R4, #108]              @ 0x6c 
    /*00010150*/ BFI         R1, R0, #10, #2 
    /*00010154*/ LDR         R0, [R4, #112]              @ 0x70 
    /*00010158*/ BFI         R1, R0, #12, #2 
    /*0001015c*/ LDR         R0, [R4, #116]              @ 0x74 
    /*00010160*/ BFI         R1, R0, #14, #2 
    /*00010164*/ LDR         R0, [R4, #120]              @ 0x78 
    /*00010168*/ BFI         R1, R0, #16, #2 
    /*0001016c*/ LDR         R0, [R4, #124]              @ 0x7c 
    /*00010170*/ BFI         R1, R0, #18, #2 
    /*00010174*/ LDR         R0, [R4, #128]              @ 0x80 
    /*00010178*/ BFI         R1, R0, #20, #2 
    /*0001017c*/ LDR         R0, [R4, #132]              @ 0x84 
    /*00010180*/ BFI         R1, R0, #22, #2 
    /*00010184*/ LDR         R0, [R4, #136]              @ 0x88 
    /*00010188*/ BFI         R1, R0, #24, #2 
    /*0001018c*/ LDR         R0, [R4, #140]              @ 0x8c 
    /*00010190*/ BFI         R1, R0, #26, #2 
    /*00010194*/ LDR         R0, [R4, #144]              @ 0x90 
    /*00010198*/ BFI         R1, R0, #28, #2 
    /*0001019c*/ LDR         R0, [R4, #148]              @ 0x94 
    /*000101a0*/ BFI         R1, R0, #30, #2 
    /*000101a4*/ STR         R1, [R5, #140]              @ 0x8c 
    /*000101a8*/ LDR         R1, [R4, #152]              @ 0x98 
    /*000101ac*/ MOV         R0, FP 
    /*000101b0*/ BFI         IP, R1, #0, #5 
    /*000101b4*/ STR         IP, [R5, #144]              @ 0x90 
    /*000101b8*/ LDR         R1, [R4, #216]              @ 0xd8 
    /*000101bc*/ MOV         IP, FP 
    /*000101c0*/ BFI         LR, R1, #26, #4 
    /*000101c4*/ LDR         R1, [R4, #220]              @ 0xdc 
    /*000101c8*/ BFI         LR, R1, #18, #8 
    /*000101cc*/ LDR         R1, [R4, #224]              @ 0xe0 
    /*000101d0*/ BFI         LR, R1, #16, #2 
    /*000101d4*/ LDR         R1, [R4, #232]              @ 0xe8 
    /*000101d8*/ BFI         LR, R1, #4, #5 
    /*000101dc*/ LDR         R1, [R4, #228]              @ 0xe4 
    /*000101e0*/ BFI         LR, R1, #0, #1 
    /*000101e4*/ STR         LR, [R5, #148]              @ 0x94 
    /*000101e8*/ LDRB        R1, [R4, #236]              @ 0xec 
    /*000101ec*/ MOV         LR, R2 
    /*000101f0*/ BFI         LR, R6, #0, #8 
    /*000101f4*/ BFI         R0, R1, #0, #8 
    /*000101f8*/ LDRB        R1, [R4, #237]              @ 0xed 
    /*000101fc*/ BFI         LR, R6, #8, #8 
    /*00010200*/ BFI         R0, R1, #8, #8 
    /*00010204*/ LDRB        R1, [R4, #238]              @ 0xee 
    /*00010208*/ BFI         R0, R1, #16, #8 
    /*0001020c*/ LDRB        R1, [R4, #239]              @ 0xef 
    /*00010210*/ BFI         R0, R1, #24, #8 
    /*00010214*/ STR         R0, [R5, #156]              @ 0x9c 
    /*00010218*/ LDRB        R1, [R4, #240]              @ 0xf0 
    /*0001021c*/ MOV         R0, FP 
    /*00010220*/ BFI         R0, R1, #0, #8 
    /*00010224*/ LDRB        R1, [R4, #241]              @ 0xf1 
    /*00010228*/ BFI         R0, R1, #8, #8 
    /*0001022c*/ LDRB        R1, [R4, #242]              @ 0xf2 
    /*00010230*/ BFI         R0, R1, #16, #8 
    /*00010234*/ LDRB        R1, [R4, #243]              @ 0xf3 
    /*00010238*/ BFI         R0, R1, #24, #8 
    /*0001023c*/ STR         R0, [R5, #160]              @ 0xa0 
    /*00010240*/ LDRB        R0, [R4, #244]              @ 0xf4 
    /*00010244*/ MOV         R1, FP 
    /*00010248*/ BFC         R1, #0, #1 
    /*0001024c*/ BFI         IP, R0, #0, #8 
    /*00010250*/ LDRB        R0, [R4, #245]              @ 0xf5 
    /*00010254*/ BFC         R1, #1, #2 
    /*00010258*/ BFI         IP, R0, #8, #8 
    /*0001025c*/ LDRB        R0, [R4, #246]              @ 0xf6 
    /*00010260*/ BFI         IP, R0, #16, #8 
    /*00010264*/ LDRB        R0, [R4, #247]              @ 0xf7 
    /*00010268*/ BFI         IP, R0, #24, #8 
    /*0001026c*/ STR         IP, [R5, #164]              @ 0xa4 
    /*00010270*/ LDRB        R0, [R4, #248]              @ 0xf8 
    /*00010274*/ MOV         IP, #1 
    /*00010278*/ BFI         FP, R0, #0, #8 
    /*0001027c*/ LDRB        R0, [R4, #249]              @ 0xf9 
    /*00010280*/ BFI         FP, R0, #8, #8 
    /*00010284*/ LDRB        R0, [R4, #250]              @ 0xfa 
    /*00010288*/ BFI         FP, R0, #16, #8 
    /*0001028c*/ LDRB        R0, [R4, #251]              @ 0xfb 
    /*00010290*/ BFI         FP, R0, #24, #8 
    /*00010294*/ STR         FP, [R5, #168]              @ 0xa8 
    /*00010298*/ LDRB        R0, [R4, #252]              @ 0xfc 
    /*0001029c*/ LDRB        R7, [R4, #266]              @ 0x10a 
    /*000102a0*/ BFI         R2, R0, #0, #2 
    /*000102a4*/ LDRB        R0, [R4, #253]              @ 0xfd 
    /*000102a8*/ BFI         R2, R0, #2, #2 
    /*000102ac*/ LDRB        R0, [R4, #254]              @ 0xfe 
    /*000102b0*/ BFI         R2, R0, #4, #2 
    /*000102b4*/ LDRB        R0, [R4, #255]              @ 0xff 
    /*000102b8*/ BFI         R2, R0, #6, #2 
    /*000102bc*/ LDRB        R0, [R4, #256]              @ 0x100 
    /*000102c0*/ BFI         R2, R0, #8, #2 
    /*000102c4*/ LDRB        R0, [R4, #257]              @ 0x101 
    /*000102c8*/ BFI         R2, R0, #10, #2 
    /*000102cc*/ LDRB        R0, [R4, #258]              @ 0x102 
    /*000102d0*/ BFI         R2, R0, #12, #2 
    /*000102d4*/ LDRB        R0, [R4, #259]              @ 0x103 
    /*000102d8*/ BFI         R2, R0, #14, #2 
    /*000102dc*/ LDRB        R0, [R4, #260]              @ 0x104 
    /*000102e0*/ BFI         R2, R0, #16, #2 
    /*000102e4*/ LDRB        R0, [R4, #261]              @ 0x105 
    /*000102e8*/ BFI         R2, R0, #18, #2 
    /*000102ec*/ LDRB        R0, [R4, #262]              @ 0x106 
    /*000102f0*/ BFI         R2, R0, #20, #2 
    /*000102f4*/ LDRB        R0, [R4, #263]              @ 0x107 
    /*000102f8*/ BFI         R2, R0, #22, #2 
    /*000102fc*/ LDRB        R0, [R4, #264]              @ 0x108 
    /*00010300*/ BFI         R2, R0, #24, #2 
    /*00010304*/ LDRB        R0, [R4, #265]              @ 0x109 
    /*00010308*/ BFI         R2, R0, #26, #2 
    /*0001030c*/ LDRB        R0, [R4, #267]              @ 0x10b 
    /*00010310*/ BFI         R2, R7, #28, #2 
    /*00010314*/ MOV         R4, #0 
    /*00010318*/ BFI         R4, IP, #0, #8 
    /*0001031c*/ BFI         R2, R0, #30, #2 
    /*00010320*/ BFI         R4, IP, #8, #8 
    /*00010324*/ MOV         R0, #0 
    /*00010328*/ MVN         IP, #55                     @ 0x37 
    /*0001032c*/ BFI         R0, IP, #0, #8 
    /*00010330*/ STR         R2, [R5, #152]              @ 0x98 
    /*00010334*/ BFI         R0, IP, #8, #8 
    /*00010338*/ MOV         R2, #8 
    /*0001033c*/ BFI         R1, R2, #4, #5 
    /*00010340*/ MOV         R7, #50                     @ 0x32 
    /*00010344*/ MOV         IP, #20 
    /*00010348*/ MVN         R2, #25 
    /*0001034c*/ BFI         LR, R7, #16, #8 
    /*00010350*/ BFI         R4, IP, #16, #8 
    /*00010354*/ BFI         R0, R2, #16, #8 
    /*00010358*/ BFC         R1, #12, #8 
    /*0001035c*/ BFI         R0, R2, #24, #8 
    /*00010360*/ BFI         R1, R6, #20, #8 
    /*00010364*/ BFI         LR, R7, #24, #8 
    /*00010368*/ STR         R1, [R5, #172]              @ 0xac 
    /*0001036c*/ BFI         R4, IP, #24, #8 
    /*00010370*/ MVN         R2, #0 
    /*00010374*/ STR         R4, [R5, #180]              @ 0xb4 
    /*00010378*/ STR         LR, [R5, #184]              @ 0xb8 
    /*0001037c*/ STR         R0, [R5, #188]              @ 0xbc 
    /*00010380*/ STR         R2, [R5, #192]              @ 0xc0 
    /*00010384*/ STR         R3, [R5, #176]              @ 0xb0 
    /*00010388*/ ADD         SP, SP, #12 
    /*0001038c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RcDrv_HEVC_SetRc_x10390:
    /*00010390*/ LDR         R3, [R6, #52]               @ 0x34 
    /*00010394*/ CMP         R3, #6 
    /*00010398*/ BEQ         RcDrv_HEVC_SetRc_x10410
    /*0001039c*/ CMP         R3, #1 
    /*000103a0*/ BEQ         RcDrv_HEVC_SetRc_x103f0
    /*000103a4*/ LDR         R3, [R6, #292]              @ 0x124 
    /*000103a8*/ CMP         R3, #0 
    /*000103ac*/ BEQ         RcDrv_HEVC_SetRc_x103c4
    /*000103b0*/ LDR         R3, [R6, #296]              @ 0x128 
    /*000103b4*/ AND         R3, R3, #3 
    /*000103b8*/ BFI         R7, R3, #2, #2 
    /*000103bc*/ BFI         R7, R3, #4, #2 
    /*000103c0*/ B           RcDrv_HEVC_SetRc_xffe8
    RcDrv_HEVC_SetRc_x103c4:
    /*000103c4*/ MOV         R2, #143                    @ 0x8f 
    /*000103c8*/ STR         R3, [SP, #4] 
    RcDrv_HEVC_SetRc_x103cc:
    /*000103cc*/ STR         R2, [SP] 
    /*000103d0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xdf4] 
    /*000103d4*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x352c] 
    /*000103d8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xdf4] 
    /*000103dc*/ MOV         R1, #19 
    /*000103e0*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x352c] 
    /*000103e4*/ MOV         R0, #4 
    /*000103e8*/ BL          0x00000000000103E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000103ec*/ B           RcDrv_HEVC_SetRc_xffe8
    RcDrv_HEVC_SetRc_x103f0:
    /*000103f0*/ LDR         R3, [R6, #252]              @ 0xfc 
    /*000103f4*/ CMP         R3, #0 
    /*000103f8*/ BEQ         RcDrv_HEVC_SetRc_x10424
    /*000103fc*/ LDR         R3, [R6, #256]              @ 0x100 
    /*00010400*/ AND         R3, R3, #3 
    /*00010404*/ BFI         R7, R3, #2, #2 
    /*00010408*/ BFI         R7, R3, #4, #2 
    /*0001040c*/ B           RcDrv_HEVC_SetRc_xffe8
    RcDrv_HEVC_SetRc_x10410:
    /*00010410*/ LDR         R3, [R6, #56]               @ 0x38 
    /*00010414*/ AND         R3, R3, #3 
    /*00010418*/ BFI         R7, R3, #2, #2 
    /*0001041c*/ BFI         R7, R3, #4, #2 
    /*00010420*/ B           RcDrv_HEVC_SetRc_xffe8
    RcDrv_HEVC_SetRc_x10424:
    /*00010424*/ STR         R3, [SP, #4] 
    /*00010428*/ MOV         R2, #130                    @ 0x82 
    /*0001042c*/ B           RcDrv_HEVC_SetRc_x103cc
FUNC_END RcDrv_HEVC_SetRc


FUNC_BEGIN RC_DRV_Config
    /*00010430*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00010434*/ MOVW        R3, #265                    @ 0x109 
    /*00010438*/ LDR         IP, [R0, #48]               @ 0x30 
    /*0001043c*/ CMP         IP, R3 
    /*00010440*/ BEQ         RC_DRV_Config_x108a4
    /*00010444*/ LDR         R3, [R1, #92]               @ 0x5c 
    /*00010448*/ MOV         R4, R2 
    /*0001044c*/ LDR         IP, [R2, #164]              @ 0xa4 
    /*00010450*/ MOV         R6, R0 
    /*00010454*/ LDR         R0, [R2, #156]              @ 0x9c 
    /*00010458*/ MOV         R5, R1 
    /*0001045c*/ BFI         R3, IP, #0, #1 
    /*00010460*/ LDR         IP, [R4, #288]              @ 0x120 
    /*00010464*/ BFI         R3, R0, #1, #1 
    /*00010468*/ LDR         R0, [R6, #2412]             @ 0x96c 
    /*0001046c*/ BFI         R3, IP, #19, #1 
    /*00010470*/ LDR         IP, [R6, #2416]             @ 0x970 
    /*00010474*/ ORR         R3, R3, #4 
    /*00010478*/ MOV         R1, #0 
    /*0001047c*/ BFC         R3, #4, #1 
    /*00010480*/ BFC         R1, #0, #1 
    /*00010484*/ BFC         R3, #8, #1 
    /*00010488*/ MOV         R2, #0 
    /*0001048c*/ BFC         R3, #11, #1 
    /*00010490*/ BFC         R2, #0, #6 
    /*00010494*/ BFC         R3, #14, #1 
    /*00010498*/ ORR         R3, R3, #32768              @ 0x8000 
    /*0001049c*/ BFI         R3, R0, #16, #1 
    /*000104a0*/ MOV         R0, #51                     @ 0x33 
    /*000104a4*/ BFI         R3, IP, #17, #1 
    /*000104a8*/ BFI         R2, R0, #8, #6 
    /*000104ac*/ BFC         R3, #18, #1 
    /*000104b0*/ STR         R3, [R5, #92]               @ 0x5c 
    /*000104b4*/ STR         R1, [R5, #96]               @ 0x60 
    /*000104b8*/ ORR         R2, R2, #65536              @ 0x10000 
    /*000104bc*/ LDR         R3, [R4] 
    /*000104c0*/ MOV         R1, #0 
    /*000104c4*/ MOV         R7, R1 
    /*000104c8*/ STR         R3, [R5, #100]              @ 0x64 
    /*000104cc*/ LDR         IP, [R4, #4] 
    /*000104d0*/ LDR         R3, [R5, #24] 
    /*000104d4*/ LDR         R0, [R4, #168]              @ 0xa8 
    /*000104d8*/ BFI         R3, IP, #10, #6 
    /*000104dc*/ BFI         R3, R0, #19, #1 
    /*000104e0*/ STR         R3, [R5, #24] 
    /*000104e4*/ STR         R2, [R5, #104]              @ 0x68 
    /*000104e8*/ LDR         R2, [R4, #12] 
    /*000104ec*/ LDR         R3, [R4, #8] 
    /*000104f0*/ BFI         R1, R2, #0, #6 
    /*000104f4*/ BFI         R1, R3, #8, #6 
    /*000104f8*/ STR         R1, [R5, #108]              @ 0x6c 
    /*000104fc*/ STR         R7, [R5, #112]              @ 0x70 
    /*00010500*/ LDR         R1, [R6, #2520]             @ 0x9d8 
    /*00010504*/ LDR         R0, [R4] 
    /*00010508*/ BL          0x0000000000010508          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001050c*/ LDR         R3, [R4, #20] 
    /*00010510*/ BFI         R7, R0, #6, #25 
    /*00010514*/ BFI         R7, R3, #0, #4 
    /*00010518*/ STR         R7, [R5, #116]              @ 0x74 
    /*0001051c*/ LDR         R1, [R6, #2512]             @ 0x9d0 
    /*00010520*/ MOV         R7, #1 
    /*00010524*/ LDR         R0, [R4] 
    /*00010528*/ BL          0x0000000000010528          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001052c*/ MOV         R3, #0 
    /*00010530*/ MOV         R2, R3 
    /*00010534*/ MOV         FP, R3 
    /*00010538*/ MOV         R1, R3 
    /*0001053c*/ MOV         IP, R3 
    /*00010540*/ MOV         SL, R3 
    /*00010544*/ MOV         R9, R3 
    /*00010548*/ MOV         LR, R3 
    /*0001054c*/ MOV         R8, R3 
    /*00010550*/ MOV         R6, R3 
    /*00010554*/ BFI         R3, IP, #2, #2 
    /*00010558*/ BFI         R3, R7, #4, #2 
    /*0001055c*/ BFI         R3, R7, #6, #2 
    /*00010560*/ BFI         R3, R7, #8, #2 
    /*00010564*/ BFI         R3, R7, #10, #2 
    /*00010568*/ BFI         R3, R7, #12, #2 
    /*0001056c*/ BFI         R3, R7, #14, #2 
    /*00010570*/ BFI         R3, R7, #16, #2 
    /*00010574*/ BFI         R3, R7, #18, #2 
    /*00010578*/ BFI         R3, R7, #20, #2 
    /*0001057c*/ BFI         R3, R7, #22, #2 
    /*00010580*/ BFI         R3, R7, #24, #2 
    /*00010584*/ BFI         R3, R7, #26, #2 
    /*00010588*/ BFI         R3, R7, #28, #2 
    /*0001058c*/ BFI         R3, R7, #30, #2 
    /*00010590*/ BFI         IP, R0, #0, #16 
    /*00010594*/ STR         IP, [R5, #120]              @ 0x78 
    /*00010598*/ LDR         R0, [R4, #152]              @ 0x98 
    /*0001059c*/ MOV         IP, R1 
    /*000105a0*/ BFI         IP, R0, #0, #5 
    /*000105a4*/ STR         IP, [R5, #144]              @ 0x90 
    /*000105a8*/ LDR         R0, [R4, #88]               @ 0x58 
    /*000105ac*/ MOV         IP, R2 
    /*000105b0*/ BFI         R1, R0, #0, #2 
    /*000105b4*/ LDR         R0, [R4, #92]               @ 0x5c 
    /*000105b8*/ BFI         R1, R0, #2, #2 
    /*000105bc*/ LDR         R0, [R4, #96]               @ 0x60 
    /*000105c0*/ BFI         R1, R0, #4, #2 
    /*000105c4*/ LDR         R0, [R4, #100]              @ 0x64 
    /*000105c8*/ BFI         R1, R0, #6, #2 
    /*000105cc*/ LDR         R0, [R4, #104]              @ 0x68 
    /*000105d0*/ BFI         R1, R0, #8, #2 
    /*000105d4*/ LDR         R0, [R4, #108]              @ 0x6c 
    /*000105d8*/ BFI         R1, R0, #10, #2 
    /*000105dc*/ LDR         R0, [R4, #112]              @ 0x70 
    /*000105e0*/ BFI         R1, R0, #12, #2 
    /*000105e4*/ LDR         R0, [R4, #116]              @ 0x74 
    /*000105e8*/ BFI         R1, R0, #14, #2 
    /*000105ec*/ LDR         R0, [R4, #120]              @ 0x78 
    /*000105f0*/ BFI         R1, R0, #16, #2 
    /*000105f4*/ LDR         R0, [R4, #124]              @ 0x7c 
    /*000105f8*/ BFI         R1, R0, #18, #2 
    /*000105fc*/ LDR         R0, [R4, #128]              @ 0x80 
    /*00010600*/ BFI         R1, R0, #20, #2 
    /*00010604*/ LDR         R0, [R4, #132]              @ 0x84 
    /*00010608*/ BFI         R1, R0, #22, #2 
    /*0001060c*/ LDR         R0, [R4, #136]              @ 0x88 
    /*00010610*/ BFI         R1, R0, #24, #2 
    /*00010614*/ LDR         R0, [R4, #140]              @ 0x8c 
    /*00010618*/ BFI         R1, R0, #26, #2 
    /*0001061c*/ LDR         R0, [R4, #144]              @ 0x90 
    /*00010620*/ BFI         R1, R0, #28, #2 
    /*00010624*/ LDR         R0, [R4, #148]              @ 0x94 
    /*00010628*/ BFI         R1, R0, #30, #2 
    /*0001062c*/ STR         R1, [R5, #140]              @ 0x8c 
    /*00010630*/ LDR         R1, [R4, #24] 
    /*00010634*/ MOV         R0, FP 
    /*00010638*/ BFI         SL, R1, #0, #8 
    /*0001063c*/ LDR         R1, [R4, #28] 
    /*00010640*/ BFI         SL, R1, #8, #8 
    /*00010644*/ LDR         R1, [R4, #32] 
    /*00010648*/ BFI         SL, R1, #16, #8 
    /*0001064c*/ LDR         R1, [R4, #36]               @ 0x24 
    /*00010650*/ BFI         SL, R1, #24, #8 
    /*00010654*/ STR         SL, [R5, #124]              @ 0x7c 
    /*00010658*/ LDR         R1, [R4, #40]               @ 0x28 
    /*0001065c*/ BFI         R9, R1, #0, #8 
    /*00010660*/ LDR         R1, [R4, #44]               @ 0x2c 
    /*00010664*/ BFI         R9, R1, #8, #8 
    /*00010668*/ LDR         R1, [R4, #48]               @ 0x30 
    /*0001066c*/ BFI         R9, R1, #16, #8 
    /*00010670*/ LDR         R1, [R4, #52]               @ 0x34 
    /*00010674*/ BFI         R9, R1, #24, #8 
    /*00010678*/ STR         R9, [R5, #128]              @ 0x80 
    /*0001067c*/ LDR         R1, [R4, #56]               @ 0x38 
    /*00010680*/ BFI         LR, R1, #0, #8 
    /*00010684*/ LDR         R1, [R4, #60]               @ 0x3c 
    /*00010688*/ BFI         LR, R1, #8, #8 
    /*0001068c*/ LDR         R1, [R4, #64]               @ 0x40 
    /*00010690*/ BFI         LR, R1, #16, #8 
    /*00010694*/ LDR         R1, [R4, #68]               @ 0x44 
    /*00010698*/ BFI         LR, R1, #24, #8 
    /*0001069c*/ STR         LR, [R5, #132]              @ 0x84 
    /*000106a0*/ LDR         R1, [R4, #72]               @ 0x48 
    /*000106a4*/ BFI         R8, R1, #0, #8 
    /*000106a8*/ LDR         R1, [R4, #76]               @ 0x4c 
    /*000106ac*/ BFI         R8, R1, #8, #8 
    /*000106b0*/ LDR         R1, [R4, #80]               @ 0x50 
    /*000106b4*/ BFI         R8, R1, #16, #8 
    /*000106b8*/ LDR         R1, [R4, #84]               @ 0x54 
    /*000106bc*/ BFI         R8, R1, #24, #8 
    /*000106c0*/ STR         R8, [R5, #136]              @ 0x88 
    /*000106c4*/ LDR         R1, [R4, #216]              @ 0xd8 
    /*000106c8*/ BFI         R6, R1, #26, #4 
    /*000106cc*/ LDR         R1, [R4, #220]              @ 0xdc 
    /*000106d0*/ BFI         R6, R1, #18, #8 
    /*000106d4*/ LDR         R1, [R4, #224]              @ 0xe0 
    /*000106d8*/ BFI         R6, R1, #16, #2 
    /*000106dc*/ LDR         R1, [R4, #232]              @ 0xe8 
    /*000106e0*/ BFI         R6, R1, #4, #5 
    /*000106e4*/ LDR         R1, [R4, #228]              @ 0xe4 
    /*000106e8*/ BFI         R6, R1, #0, #1 
    /*000106ec*/ STR         R6, [R5, #148]              @ 0x94 
    /*000106f0*/ LDRB        R1, [R4, #236]              @ 0xec 
    /*000106f4*/ BFI         R0, R1, #0, #8 
    /*000106f8*/ LDRB        R1, [R4, #237]              @ 0xed 
    /*000106fc*/ BFI         R0, R1, #8, #8 
    /*00010700*/ LDRB        R1, [R4, #238]              @ 0xee 
    /*00010704*/ BFI         R0, R1, #16, #8 
    /*00010708*/ LDRB        R1, [R4, #239]              @ 0xef 
    /*0001070c*/ BFI         R0, R1, #24, #8 
    /*00010710*/ STR         R0, [R5, #156]              @ 0x9c 
    /*00010714*/ LDRB        R1, [R4, #240]              @ 0xf0 
    /*00010718*/ MOV         R0, FP 
    /*0001071c*/ BFI         R0, R1, #0, #8 
    /*00010720*/ LDRB        R1, [R4, #241]              @ 0xf1 
    /*00010724*/ BFI         R0, R1, #8, #8 
    /*00010728*/ LDRB        R1, [R4, #242]              @ 0xf2 
    /*0001072c*/ BFI         R0, R1, #16, #8 
    /*00010730*/ LDRB        R1, [R4, #243]              @ 0xf3 
    /*00010734*/ BFI         R0, R1, #24, #8 
    /*00010738*/ STR         R0, [R5, #160]              @ 0xa0 
    /*0001073c*/ LDRB        R1, [R4, #244]              @ 0xf4 
    /*00010740*/ BFI         FP, R1, #0, #8 
    /*00010744*/ LDRB        R1, [R4, #245]              @ 0xf5 
    /*00010748*/ BFI         FP, R1, #8, #8 
    /*0001074c*/ LDRB        R1, [R4, #246]              @ 0xf6 
    /*00010750*/ BFI         FP, R1, #16, #8 
    /*00010754*/ LDRB        R1, [R4, #247]              @ 0xf7 
    /*00010758*/ BFI         FP, R1, #24, #8 
    /*0001075c*/ STR         FP, [R5, #164]              @ 0xa4 
    /*00010760*/ LDRB        R0, [R4, #248]              @ 0xf8 
    /*00010764*/ MOV         R1, R2 
    /*00010768*/ BFI         R1, R2, #0, #1 
    /*0001076c*/ BFI         IP, R0, #0, #8 
    /*00010770*/ LDRB        R0, [R4, #249]              @ 0xf9 
    /*00010774*/ BFI         R1, R2, #1, #2 
    /*00010778*/ MOV         LR, IP 
    /*0001077c*/ MOV         IP, LR 
    /*00010780*/ BFI         IP, R0, #8, #8 
    /*00010784*/ LDRB        R0, [R4, #250]              @ 0xfa 
    /*00010788*/ MOV         LR, R2 
    /*0001078c*/ BFI         LR, R7, #0, #8 
    /*00010790*/ BFI         IP, R0, #16, #8 
    /*00010794*/ LDRB        R0, [R4, #251]              @ 0xfb 
    /*00010798*/ BFI         LR, R7, #8, #8 
    /*0001079c*/ BFI         IP, R0, #24, #8 
    /*000107a0*/ STR         IP, [R5, #168]              @ 0xa8 
    /*000107a4*/ LDRB        R0, [R4, #252]              @ 0xfc 
    /*000107a8*/ LDRB        R6, [R4, #253]              @ 0xfd 
    /*000107ac*/ BFI         R2, R0, #0, #2 
    /*000107b0*/ LDRB        R0, [R4, #254]              @ 0xfe 
    /*000107b4*/ LDRB        IP, [R4, #255]              @ 0xff 
    /*000107b8*/ BFI         R2, R6, #2, #2 
    /*000107bc*/ BFI         R2, R0, #4, #2 
    /*000107c0*/ LDRB        R0, [R4, #256]              @ 0x100 
    /*000107c4*/ BFI         R2, IP, #6, #2 
    /*000107c8*/ LDRB        IP, [R4, #257]              @ 0x101 
    /*000107cc*/ BFI         R2, R0, #8, #2 
    /*000107d0*/ LDRB        R0, [R4, #258]              @ 0x102 
    /*000107d4*/ BFI         R2, IP, #10, #2 
    /*000107d8*/ LDRB        IP, [R4, #259]              @ 0x103 
    /*000107dc*/ BFI         R2, R0, #12, #2 
    /*000107e0*/ LDRB        R0, [R4, #260]              @ 0x104 
    /*000107e4*/ BFI         R2, IP, #14, #2 
    /*000107e8*/ LDRB        IP, [R4, #261]              @ 0x105 
    /*000107ec*/ BFI         R2, R0, #16, #2 
    /*000107f0*/ LDRB        R0, [R4, #262]              @ 0x106 
    /*000107f4*/ BFI         R2, IP, #18, #2 
    /*000107f8*/ LDRB        IP, [R4, #263]              @ 0x107 
    /*000107fc*/ BFI         R2, R0, #20, #2 
    /*00010800*/ LDRB        R0, [R4, #264]              @ 0x108 
    /*00010804*/ BFI         R2, IP, #22, #2 
    /*00010808*/ LDRB        IP, [R4, #265]              @ 0x109 
    /*0001080c*/ BFI         R2, R0, #24, #2 
    /*00010810*/ LDRB        R0, [R4, #266]              @ 0x10a 
    /*00010814*/ BFI         R2, IP, #26, #2 
    /*00010818*/ LDRB        R4, [R4, #267]              @ 0x10b 
    /*0001081c*/ BFI         R2, R0, #28, #2 
    /*00010820*/ MOV         IP, #40                     @ 0x28 
    /*00010824*/ BFI         R2, R4, #30, #2 
    /*00010828*/ STR         R2, [R5, #152]              @ 0x98 
    /*0001082c*/ MOV         R2, #20 
    /*00010830*/ BFI         LR, R2, #16, #8 
    /*00010834*/ MVN         R4, #55                     @ 0x37 
    /*00010838*/ BFI         LR, R2, #24, #8 
    /*0001083c*/ MOV         R0, #0 
    /*00010840*/ MOV         R2, #8 
    /*00010844*/ BFI         R0, IP, #0, #8 
    /*00010848*/ BFI         R1, R2, #4, #5 
    /*0001084c*/ MOV         R2, #0 
    /*00010850*/ BFI         R2, R4, #0, #8 
    /*00010854*/ BFI         R0, IP, #8, #8 
    /*00010858*/ MOV         R6, #0 
    /*0001085c*/ BFI         R2, R4, #8, #8 
    /*00010860*/ BFI         R1, R6, #12, #8 
    /*00010864*/ MOV         R4, #50                     @ 0x32 
    /*00010868*/ BFI         R1, IP, #20, #8 
    /*0001086c*/ BFI         R0, R4, #16, #8 
    /*00010870*/ MVN         IP, #25 
    /*00010874*/ BFI         R2, IP, #16, #8 
    /*00010878*/ STR         R1, [R5, #172]              @ 0xac 
    /*0001087c*/ BFI         R0, R4, #24, #8 
    /*00010880*/ STR         LR, [R5, #180]              @ 0xb4 
    /*00010884*/ BFI         R2, IP, #24, #8 
    /*00010888*/ STR         R0, [R5, #184]              @ 0xb8 
    /*0001088c*/ MVN         R1, #0 
    /*00010890*/ STR         R2, [R5, #188]              @ 0xbc 
    /*00010894*/ MOV         R0, #0 
    /*00010898*/ STR         R1, [R5, #192]              @ 0xc0 
    /*0001089c*/ STR         R3, [R5, #176]              @ 0xb0 
    /*000108a0*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_DRV_Config_x108a4:
    /*000108a4*/ BL          0x00000000000108A4          @ RcDrv_HEVC_SetRc [R_ARM_CALL: .text+0xff18] 
    /*000108a8*/ MOV         R0, #0 
    /*000108ac*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END RC_DRV_Config


FUNC_BEGIN RC_DRV_ReadForOptimization
    /*000108b0*/ BX          LR 
FUNC_END RC_DRV_ReadForOptimization


FUNC_BEGIN RC_DRV_Read
    /*000108b4*/ LDR         IP, [R0, #1508]             @ 0x5e4 
    /*000108b8*/ CMP         IP, #9 
    /*000108bc*/ BEQ         RC_DRV_Read_x10a68
    /*000108c0*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000108c4*/ MOV         R7, R2 
    /*000108c8*/ LDR         R2, [R0, #48]               @ 0x30 
    /*000108cc*/ MOV         R6, R3 
    /*000108d0*/ MOVW        R3, #265                    @ 0x109 
    /*000108d4*/ MOV         R4, R1 
    /*000108d8*/ CMP         R2, R3 
    /*000108dc*/ MOV         R5, R0 
    /*000108e0*/ BEQ         RC_DRV_Read_x10ad4
    /*000108e4*/ CMP         R6, #3 
    /*000108e8*/ CMPNE       R6, #0 
    /*000108ec*/ LDR         R9, [R7, #24] 
    /*000108f0*/ LDR         R8, [R7, #28] 
    /*000108f4*/ BEQ         RC_DRV_Read_x10a70
    RC_DRV_Read_x108f8:
    /*000108f8*/ LDR         R3, [R4, #16] 
    /*000108fc*/ ADD         LR, R4, #12288              @ 0x3000 
    /*00010900*/ LDR         R2, [R5, #1644]             @ 0x66c 
    /*00010904*/ TST         R3, #4096                   @ 0x1000 
    /*00010908*/ LDR         R3, [R5, #1648]             @ 0x670 
    /*0001090c*/ LDREQ       R1, [LR, #2048]             @ 0x800 
    /*00010910*/ LDRNE       R1, [LR, #2056]             @ 0x808 
    /*00010914*/ ADDEQ       R2, R2, R1 
    /*00010918*/ STREQ       R2, [R5, #1644]             @ 0x66c 
    /*0001091c*/ ADDNE       R2, R2, R1 
    /*00010920*/ LDREQ       R2, [LR, #2052]             @ 0x804 
    /*00010924*/ STRNE       R2, [R5, #1644]             @ 0x66c 
    /*00010928*/ LDRNE       R2, [LR, #2060]             @ 0x80c 
    /*0001092c*/ ADD         R3, R3, R2 
    /*00010930*/ STR         R3, [R5, #1648]             @ 0x670 
    /*00010934*/ LDR         R3, [R7, #20] 
    /*00010938*/ CMP         R3, #0 
    /*0001093c*/ BEQ         RC_DRV_Read_x1096c
    /*00010940*/ ADD         R2, R5, #1664               @ 0x680 
    /*00010944*/ MOV         R3, #0 
    RC_DRV_Read_x10948:
    /*00010948*/ ADD         R0, R3, #3824               @ 0xef0 
    /*0001094c*/ ADD         R3, R3, #1 
    /*00010950*/ LDR         R1, [R2, #4] 
    /*00010954*/ CMP         R3, #52                     @ 0x34 
    /*00010958*/ LDR         IP, [R4, R0, LSL #2] 
    /*0001095c*/ UBFX        IP, IP, #0, #21 
    /*00010960*/ ADD         IP, IP, R1 
    /*00010964*/ STR         IP, [R2, #4]! 
    /*00010968*/ BNE         RC_DRV_Read_x10948
    RC_DRV_Read_x1096c:
    /*0001096c*/ LDR         R2, [LR, #2064]             @ 0x810 
    /*00010970*/ SUB         R6, R6, #2 
    /*00010974*/ LDR         R3, [R5, #1640]             @ 0x668 
    /*00010978*/ LDR         R1, [R5, #1652]             @ 0x674 
    /*0001097c*/ ADD         R3, R3, R2, LSL #3 
    /*00010980*/ STR         R3, [R5, #1640]             @ 0x668 
    /*00010984*/ LDR         R0, [LR, #2860]             @ 0xb2c 
    /*00010988*/ LDR         R2, [R5, #1876]             @ 0x754 
    /*0001098c*/ UBFX        R0, R0, #0, #26 
    /*00010990*/ LDR         R3, [R5, #1880]             @ 0x758 
    /*00010994*/ ADD         R0, R0, R1 
    /*00010998*/ STR         R0, [R5, #1652]             @ 0x674 
    /*0001099c*/ LDR         R1, [LR, #448]              @ 0x1c0 
    /*000109a0*/ LDR         IP, [R5, #1656]             @ 0x678 
    /*000109a4*/ UBFX        R1, R1, #0, #27 
    /*000109a8*/ ADD         R2, R2, R1 
    /*000109ac*/ STR         R2, [R5, #1876]             @ 0x754 
    /*000109b0*/ LDR         R2, [LR, #452]              @ 0x1c4 
    /*000109b4*/ UBFX        R2, R2, #0, #25 
    /*000109b8*/ ADD         R3, R3, R2 
    /*000109bc*/ STR         R3, [R5, #1880]             @ 0x758 
    /*000109c0*/ LDR         R1, [LR, #2864]             @ 0xb30 
    /*000109c4*/ LDR         R2, [LR, #2864]             @ 0xb30 
    /*000109c8*/ LDR         R3, [LR, #456]              @ 0x1c8 
    /*000109cc*/ UBFX        R1, R1, #8, #6 
    /*000109d0*/ AND         R2, R2, #63                 @ 0x3f 
    /*000109d4*/ CMP         R1, IP 
    /*000109d8*/ UBFX        R3, R3, #0, #19 
    /*000109dc*/ STR         R3, [R5, #1940]             @ 0x794 
    /*000109e0*/ LDR         R3, [LR, #460]              @ 0x1cc 
    /*000109e4*/ UBFX        R3, R3, #0, #17 
    /*000109e8*/ STR         R3, [R5, #1944]             @ 0x798 
    /*000109ec*/ LDR         R3, [LR, #476]              @ 0x1dc 
    /*000109f0*/ UBFX        R3, R3, #0, #21 
    /*000109f4*/ STR         R3, [R5, #1948]             @ 0x79c 
    /*000109f8*/ LDR         R3, [LR, #2788]             @ 0xae4 
    /*000109fc*/ UBFX        R3, R3, #2, #15 
    /*00010a00*/ STR         R3, [R5, #1928]             @ 0x788 
    /*00010a04*/ LDR         R3, [LR, #2756]             @ 0xac4 
    /*00010a08*/ UBFX        R3, R3, #0, #19 
    /*00010a0c*/ STR         R3, [R5, #1932]             @ 0x78c 
    /*00010a10*/ LDR         R3, [LR, #2792]             @ 0xae8 
    /*00010a14*/ STRHI       R1, [R5, #1656]             @ 0x678 
    /*00010a18*/ UBFX        R3, R3, #0, #19 
    /*00010a1c*/ LSL         R3, R3, #2 
    /*00010a20*/ STR         R3, [R5, #1936]             @ 0x790 
    /*00010a24*/ LDR         R3, [R5, #1660]             @ 0x67c 
    /*00010a28*/ CMP         R2, R3 
    /*00010a2c*/ STRCC       R2, [R5, #1660]             @ 0x67c 
    /*00010a30*/ CMP         R6, #1 
    /*00010a34*/ BLS         RC_DRV_Read_x10a88
    /*00010a38*/ LDR         R3, [R7, #20] 
    /*00010a3c*/ CMP         R3, #0 
    /*00010a40*/ BNE         RC_DRV_Read_x10a4c
    RC_DRV_Read_x10a44:
    /*00010a44*/ MOV         R0, #0 
    /*00010a48*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_DRV_Read_x10a4c:
    /*00010a4c*/ ADD         R1, R5, #1664               @ 0x680 
    /*00010a50*/ ADD         R0, R8, #96                 @ 0x60 
    /*00010a54*/ ADD         R1, R1, #4 
    /*00010a58*/ MOV         R2, #208                    @ 0xd0 
    /*00010a5c*/ BL          0x0000000000010A5C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00010a60*/ MOV         R0, #0 
    /*00010a64*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_DRV_Read_x10a68:
    /*00010a68*/ MOV         R0, #0 
    /*00010a6c*/ BX          LR 
    RC_DRV_Read_x10a70:
    /*00010a70*/ ADD         R0, R0, #1632               @ 0x660 
    /*00010a74*/ MOV         R2, #352                    @ 0x160 
    /*00010a78*/ MOV         R1, #0 
    /*00010a7c*/ ADD         R0, R0, #8 
    /*00010a80*/ BL          0x0000000000010A80          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00010a84*/ B           RC_DRV_Read_x108f8
    RC_DRV_Read_x10a88:
    /*00010a88*/ LDR         R1, [R5, #2512]             @ 0x9d0 
    /*00010a8c*/ BL          0x0000000000010A8C          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00010a90*/ STR         R0, [R5, #1652]             @ 0x674 
    /*00010a94*/ STR         R0, [R9, #36]               @ 0x24 
    /*00010a98*/ LDR         R3, [R4, #24] 
    /*00010a9c*/ UBFX        R3, R3, #10, #6 
    /*00010aa0*/ STR         R3, [R9, #32] 
    /*00010aa4*/ LDR         R3, [R5, #1876]             @ 0x754 
    /*00010aa8*/ STR         R3, [R8, #8] 
    /*00010aac*/ LDR         R3, [R5, #1880]             @ 0x758 
    /*00010ab0*/ STR         R3, [R8, #12] 
    /*00010ab4*/ LDR         R3, [R5, #1648]             @ 0x670 
    /*00010ab8*/ STR         R3, [R8] 
    /*00010abc*/ LDR         R3, [R5, #1644]             @ 0x66c 
    /*00010ac0*/ STR         R3, [R8, #4] 
    /*00010ac4*/ LDR         R3, [R7, #20] 
    /*00010ac8*/ CMP         R3, #0 
    /*00010acc*/ BEQ         RC_DRV_Read_x10a44
    /*00010ad0*/ B           RC_DRV_Read_x10a4c
    RC_DRV_Read_x10ad4:
    /*00010ad4*/ CMP         R6, #3 
    /*00010ad8*/ CMPNE       R6, #0 
    /*00010adc*/ LDR         R9, [R7, #24] 
    /*00010ae0*/ LDR         R8, [R7, #28] 
    /*00010ae4*/ BEQ         RC_DRV_Read_x10d20
    RC_DRV_Read_x10ae8:
    /*00010ae8*/ ADD         LR, R4, #12288              @ 0x3000 
    /*00010aec*/ LDR         R3, [R5, #1640]             @ 0x668 
    /*00010af0*/ LDR         R2, [R5, #1652]             @ 0x674 
    /*00010af4*/ ADD         SL, R5, #1872               @ 0x750 
    /*00010af8*/ LDR         R0, [LR, #1984]             @ 0x7c0 
    /*00010afc*/ ADD         SL, SL, #12 
    /*00010b00*/ LDR         R1, [R5, #1656]             @ 0x678 
    /*00010b04*/ ADD         R3, R3, R0, LSL #3 
    /*00010b08*/ STR         R3, [R5, #1640]             @ 0x668 
    /*00010b0c*/ LDR         R0, [LR, #2860]             @ 0xb2c 
    /*00010b10*/ UBFX        R0, R0, #0, #26 
    /*00010b14*/ ADD         R0, R0, R2 
    /*00010b18*/ STR         R0, [R5, #1652]             @ 0x674 
    /*00010b1c*/ LDR         R2, [LR, #2864]             @ 0xb30 
    /*00010b20*/ LDR         R3, [LR, #2864]             @ 0xb30 
    /*00010b24*/ UBFX        R2, R2, #8, #6 
    /*00010b28*/ CMP         R2, R1 
    /*00010b2c*/ STRHI       R2, [R5, #1656]             @ 0x678 
    /*00010b30*/ LDR         R2, [R5, #1660]             @ 0x67c 
    /*00010b34*/ AND         R3, R3, #63                 @ 0x3f 
    /*00010b38*/ LDR         R1, [R5, #1644]             @ 0x66c 
    /*00010b3c*/ CMP         R3, R2 
    /*00010b40*/ STRCC       R3, [R5, #1660]             @ 0x67c 
    /*00010b44*/ LDR         IP, [LR, #1996]             @ 0x7cc 
    /*00010b48*/ MOV         R3, #0 
    /*00010b4c*/ LDR         R2, [R5, #1648]             @ 0x670 
    /*00010b50*/ ADD         R1, R1, IP 
    /*00010b54*/ STR         R1, [R5, #1644]             @ 0x66c 
    /*00010b58*/ LDR         IP, [LR, #1992]             @ 0x7c8 
    /*00010b5c*/ MOV         R1, SL 
    /*00010b60*/ ADD         R2, R2, IP 
    /*00010b64*/ STR         R2, [R5, #1648]             @ 0x670 
    /*00010b68*/ LDR         IP, [LR, #448]              @ 0x1c0 
    /*00010b6c*/ LDR         R2, [R5, #1876]             @ 0x754 
    /*00010b70*/ UBFX        IP, IP, #0, #27 
    /*00010b74*/ ADD         R2, R2, IP 
    /*00010b78*/ STR         R2, [R5, #1876]             @ 0x754 
    /*00010b7c*/ LDR         IP, [LR, #452]              @ 0x1c4 
    /*00010b80*/ LDR         R2, [R5, #1880]             @ 0x758 
    /*00010b84*/ UBFX        IP, IP, #0, #25 
    /*00010b88*/ ADD         R2, R2, IP 
    /*00010b8c*/ STR         R2, [R5, #1880]             @ 0x758 
    /*00010b90*/ LDR         R2, [LR, #456]              @ 0x1c8 
    /*00010b94*/ MOVW        IP, #4020                   @ 0xfb4 
    /*00010b98*/ UBFX        R2, R2, #0, #19 
    /*00010b9c*/ STR         R2, [R5, #1940]             @ 0x794 
    /*00010ba0*/ LDR         R2, [LR, #460]              @ 0x1cc 
    /*00010ba4*/ UBFX        R2, R2, #0, #17 
    /*00010ba8*/ STR         R2, [R5, #1944]             @ 0x798 
    /*00010bac*/ LDR         R2, [LR, #476]              @ 0x1dc 
    /*00010bb0*/ UBFX        R2, R2, #0, #21 
    /*00010bb4*/ STR         R2, [R5, #1948]             @ 0x79c 
    /*00010bb8*/ LDR         R2, [LR, #2820]             @ 0xb04 
    /*00010bbc*/ UXTH        R2, R2 
    /*00010bc0*/ STR         R2, [R5, #1924]             @ 0x784 
    /*00010bc4*/ LDR         R2, [LR, #2788]             @ 0xae4 
    /*00010bc8*/ UBFX        R2, R2, #0, #17 
    /*00010bcc*/ STR         R2, [R5, #1928]             @ 0x788 
    /*00010bd0*/ LDR         R2, [LR, #2756]             @ 0xac4 
    /*00010bd4*/ UBFX        R2, R2, #0, #19 
    /*00010bd8*/ STR         R2, [R5, #1932]             @ 0x78c 
    /*00010bdc*/ LDR         R2, [LR, #2792]             @ 0xae8 
    /*00010be0*/ UBFX        R2, R2, #0, #19 
    /*00010be4*/ STR         R2, [R5, #1936]             @ 0x790 
    RC_DRV_Read_x10be8:
    /*00010be8*/ ADD         FP, R3, IP 
    /*00010bec*/ ADD         R3, R3, #1 
    /*00010bf0*/ LDR         R2, [R1] 
    /*00010bf4*/ CMP         R3, #8 
    /*00010bf8*/ LDR         FP, [R4, FP, LSL #2] 
    /*00010bfc*/ ADD         R2, R2, FP 
    /*00010c00*/ STR         R2, [R1], #4 
    /*00010c04*/ BNE         RC_DRV_Read_x10be8
    /*00010c08*/ LDR         R3, [R7, #20] 
    /*00010c0c*/ CMP         R3, #0 
    /*00010c10*/ BEQ         RC_DRV_Read_x10c40
    /*00010c14*/ ADD         R1, R5, #1664               @ 0x680 
    /*00010c18*/ MOV         R2, #0 
    RC_DRV_Read_x10c1c:
    /*00010c1c*/ ADD         R3, R2, #3824               @ 0xef0 
    /*00010c20*/ ADD         R2, R2, #1 
    /*00010c24*/ LDR         IP, [R1, #4] 
    /*00010c28*/ CMP         R2, #52                     @ 0x34 
    /*00010c2c*/ LDR         R3, [R4, R3, LSL #2] 
    /*00010c30*/ UBFX        R3, R3, #0, #21 
    /*00010c34*/ ADD         R3, R3, IP 
    /*00010c38*/ STR         R3, [R1, #4]! 
    /*00010c3c*/ BNE         RC_DRV_Read_x10c1c
    RC_DRV_Read_x10c40:
    /*00010c40*/ LDR         R1, [LR, #3784]             @ 0xec8 
    /*00010c44*/ SUB         R6, R6, #2 
    /*00010c48*/ LDR         R2, [R5, #1916]             @ 0x77c 
    /*00010c4c*/ CMP         R6, #1 
    /*00010c50*/ UBFX        R1, R1, #0, #15 
    /*00010c54*/ LDR         R3, [R5, #1920]             @ 0x780 
    /*00010c58*/ ADD         R2, R2, R1 
    /*00010c5c*/ STR         R2, [R5, #1916]             @ 0x77c 
    /*00010c60*/ LDR         R2, [LR, #3780]             @ 0xec4 
    /*00010c64*/ ADD         R3, R3, R2 
    /*00010c68*/ STR         R3, [R5, #1920]             @ 0x780 
    /*00010c6c*/ BHI         RC_DRV_Read_x10a44
    /*00010c70*/ LDR         R1, [R5, #2516]             @ 0x9d4 
    /*00010c74*/ BL          0x0000000000010C74          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00010c78*/ MOV         IP, #0 
    /*00010c7c*/ ADD         R1, R5, #1904               @ 0x770 
    /*00010c80*/ MOV         R3, R8 
    /*00010c84*/ ADD         R1, R1, #12 
    /*00010c88*/ STR         R0, [R5, #1652]             @ 0x674 
    /*00010c8c*/ STR         R0, [R9, #48]               @ 0x30 
    /*00010c90*/ LDR         R2, [R4, #24] 
    /*00010c94*/ UBFX        R2, R2, #10, #6 
    /*00010c98*/ STR         R2, [R9, #44]               @ 0x2c 
    /*00010c9c*/ STR         IP, [R8] 
    /*00010ca0*/ STR         IP, [R8, #4] 
    /*00010ca4*/ LDR         R2, [R5, #1916]             @ 0x77c 
    /*00010ca8*/ STR         R2, [R8, #24] 
    /*00010cac*/ LDR         R2, [R5, #1920]             @ 0x780 
    /*00010cb0*/ STR         R2, [R8, #28] 
    /*00010cb4*/ LDR         R2, [R5, #1876]             @ 0x754 
    /*00010cb8*/ STR         R2, [R8, #8] 
    /*00010cbc*/ LDR         R2, [R5, #1880]             @ 0x758 
    /*00010cc0*/ STR         R2, [R8, #12] 
    /*00010cc4*/ LDR         R2, [R5, #1648]             @ 0x670 
    /*00010cc8*/ STR         R2, [R8] 
    /*00010ccc*/ LDR         R2, [R5, #1644]             @ 0x66c 
    /*00010cd0*/ STR         R2, [R8, #4] 
    RC_DRV_Read_x10cd4:
    /*00010cd4*/ LDR         R2, [SL], #4 
    /*00010cd8*/ ADD         R3, R3, #8 
    /*00010cdc*/ CMP         SL, R1 
    /*00010ce0*/ STR         R2, [R3, #28] 
    /*00010ce4*/ BNE         RC_DRV_Read_x10cd4
    /*00010ce8*/ LDR         R3, [R7, #20] 
    /*00010cec*/ CMP         R3, #0 
    /*00010cf0*/ BNE         RC_DRV_Read_x10d08
    RC_DRV_Read_x10cf4:
    /*00010cf4*/ LDR         R3, [R5, #1660]             @ 0x67c 
    /*00010cf8*/ STR         R3, [R7, #8] 
    /*00010cfc*/ LDR         R3, [R5, #1656]             @ 0x678 
    /*00010d00*/ STR         R3, [R7, #4] 
    /*00010d04*/ B           RC_DRV_Read_x10a44
    RC_DRV_Read_x10d08:
    /*00010d08*/ ADD         R1, R5, #1664               @ 0x680 
    /*00010d0c*/ ADD         R0, R8, #96                 @ 0x60 
    /*00010d10*/ ADD         R1, R1, #4 
    /*00010d14*/ MOV         R2, #208                    @ 0xd0 
    /*00010d18*/ BL          0x0000000000010D18          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00010d1c*/ B           RC_DRV_Read_x10cf4
    RC_DRV_Read_x10d20:
    /*00010d20*/ ADD         R0, R0, #1632               @ 0x660 
    /*00010d24*/ MOV         R2, #352                    @ 0x160 
    /*00010d28*/ MOV         R1, #0 
    /*00010d2c*/ ADD         R0, R0, #8 
    /*00010d30*/ BL          0x0000000000010D30          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00010d34*/ B           RC_DRV_Read_x10ae8
FUNC_END RC_DRV_Read


FUNC_BEGIN RC_DRV_InitParam
    /*00010d38*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00010d3c*/ MOV         R5, R0 
    /*00010d40*/ SUB         SP, SP, #8 
    /*00010d44*/ MOV         R4, R1 
    /*00010d48*/ LDR         R0, [R0, #48]               @ 0x30 
    /*00010d4c*/ LDR         R1, [R5, #52]               @ 0x34 
    /*00010d50*/ BL          0x0000000000010D50          @ RcGetIndexFromType [R_ARM_CALL: .text+0x1b54] 
    /*00010d54*/ CMN         R0, #1 
    /*00010d58*/ MOV         R6, R0 
    /*00010d5c*/ BEQ         RC_DRV_InitParam_x110f4
    RC_DRV_InitParam_x10d60:
    /*00010d60*/ MOV         R2, #0 
    /*00010d64*/ MVN         R1, #0 
    /*00010d68*/ MOV         R0, #1 
    /*00010d6c*/ STR         R1, [R4, #104]              @ 0x68 
    /*00010d70*/ STR         R2, [R4, #108]              @ 0x6c 
    /*00010d74*/ MOVW        IP, #265                    @ 0x109 
    /*00010d78*/ STR         R2, [R4, #112]              @ 0x70 
    /*00010d7c*/ STR         R2, [R4, #128]              @ 0x80 
    /*00010d80*/ STR         R0, [R4, #124]              @ 0x7c 
    /*00010d84*/ LDR         R3, [R5, #48]               @ 0x30 
    /*00010d88*/ CMP         R3, IP 
    /*00010d8c*/ BEQ         RC_DRV_InitParam_x10e9c
    /*00010d90*/ CMP         R3, #96                     @ 0x60 
    /*00010d94*/ SUB         R3, R4, #1 
    /*00010d98*/ ADDNE       R0, R4, #15 
    /*00010d9c*/ MOVNE       IP, #8 
    /*00010da0*/ STRNE       IP, [R4, #96]               @ 0x60 
    /*00010da4*/ BEQ         RC_DRV_InitParam_x10fe0
    RC_DRV_InitParam_x10da8:
    /*00010da8*/ STRB        R1, [R3, #1]! 
    /*00010dac*/ CMP         R3, R0 
    /*00010db0*/ STRB        R1, [R3, #16] 
    /*00010db4*/ STRB        R1, [R3, #32] 
    /*00010db8*/ STRB        R2, [R3, #48]               @ 0x30 
    /*00010dbc*/ STRB        R2, [R3, #64]               @ 0x40 
    /*00010dc0*/ STRB        R2, [R3, #80]               @ 0x50 
    /*00010dc4*/ BNE         RC_DRV_InitParam_x10da8
    /*00010dc8*/ STR         R2, [R4, #100]              @ 0x64 
    /*00010dcc*/ STR         R2, [R4, #220]              @ 0xdc 
    RC_DRV_InitParam_x10dd0:
    /*00010dd0*/ LDR         R1, [R5, #52]               @ 0x34 
    /*00010dd4*/ CMP         R1, #6 
    /*00010dd8*/ BHI         RC_DRV_InitParam_x10e18
    /*00010ddc*/ MOV         R2, #1 
    /*00010de0*/ LSL         R3, R2, R1 
    /*00010de4*/ ANDS        IP, R3, #29 
    /*00010de8*/ BNE         RC_DRV_InitParam_x110d8
    /*00010dec*/ TST         R3, #96                     @ 0x60 
    /*00010df0*/ BNE         RC_DRV_InitParam_x1106c
    /*00010df4*/ TST         R3, #2 
    /*00010df8*/ BEQ         RC_DRV_InitParam_x10e18
    /*00010dfc*/ MOVW        R1, #0                      @ g_astCbrParam [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00010e00*/ MOVT        R1, #0                      @ g_astCbrParam [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00010e04*/ MOV         R2, #44                     @ 0x2c 
    /*00010e08*/ ADD         R0, R4, #136                @ 0x88 
    /*00010e0c*/ MLA         R1, R2, R6, R1 
    /*00010e10*/ BL          0x0000000000010E10          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00010e14*/ B           RC_DRV_InitParam_x10e68
    RC_DRV_InitParam_x10e18:
    /*00010e18*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c8] 
    /*00010e1c*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c8] 
    /*00010e20*/ BL          0x0000000000010E20          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00010e24*/ LDR         R3, [R5, #52]               @ 0x34 
    /*00010e28*/ MOVW        R1, #1234                   @ 0x4d2 
    /*00010e2c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35dc] 
    /*00010e30*/ STR         R1, [SP] 
    /*00010e34*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35dc] 
    /*00010e38*/ STR         R3, [SP, #4] 
    /*00010e3c*/ MOV         R1, #19 
    /*00010e40*/ LDR         R3, [PC, #716]              @ 0x0000000000011114 
    /*00010e44*/ MOV         R0, #3 
    /*00010e48*/ BL          0x0000000000010E48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010e4c*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x360c] 
    /*00010e50*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3588] 
    /*00010e54*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x360c] 
    /*00010e58*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3588] 
    /*00010e5c*/ MOVW        R2, #1235                   @ 0x4d3 
    /*00010e60*/ LDR         R1, [PC, #684]              @ 0x0000000000011114 
    /*00010e64*/ BL          0x0000000000010E64          @ osal_panic [R_ARM_CALL: +0x0] 
    RC_DRV_InitParam_x10e68:
    /*00010e68*/ MOV         R3, #0 
    /*00010e6c*/ STR         R3, [R4, #132]              @ 0x84 
    /*00010e70*/ LDR         R2, [R5, #48]               @ 0x30 
    /*00010e74*/ MOVW        R3, #265                    @ 0x109 
    /*00010e78*/ CMP         R2, R3 
    /*00010e7c*/ BNE         RC_DRV_InitParam_x10e94
    /*00010e80*/ LDR         R3, [R5, #52]               @ 0x34 
    /*00010e84*/ SUB         R3, R3, #2 
    /*00010e88*/ BICS        R3, R3, #2 
    /*00010e8c*/ MOVEQ       R3, #1 
    /*00010e90*/ STREQ       R3, [R4, #132]              @ 0x84 
    RC_DRV_InitParam_x10e94:
    /*00010e94*/ ADD         SP, SP, #8 
    /*00010e98*/ POP         {R4, R5, R6, R7, R8, PC} 
    RC_DRV_InitParam_x10e9c:
    /*00010e9c*/ ADD         R3, R4, #48                 @ 0x30 
    /*00010ea0*/ ADD         R1, R4, #56                 @ 0x38 
    /*00010ea4*/ MOV         R2, R0 
    /*00010ea8*/ MOV         R0, #8 
    /*00010eac*/ STR         R0, [R4, #96]               @ 0x60 
    RC_DRV_InitParam_x10eb0:
    /*00010eb0*/ STRB        R2, [R3], #1 
    /*00010eb4*/ CMP         R1, R3 
    /*00010eb8*/ STRB        R2, [R3, #15] 
    /*00010ebc*/ STRB        R2, [R3, #31] 
    /*00010ec0*/ BNE         RC_DRV_InitParam_x10eb0
    /*00010ec4*/ ADD         R3, R4, #8 
    /*00010ec8*/ ADD         R0, R4, #16 
    /*00010ecc*/ MVN         R1, #0 
    /*00010ed0*/ MOV         R2, #1 
    RC_DRV_InitParam_x10ed4:
    /*00010ed4*/ STRB        R1, [R3], #1 
    /*00010ed8*/ CMP         R3, R0 
    /*00010edc*/ STRB        R1, [R3, #15] 
    /*00010ee0*/ STRB        R1, [R3, #31] 
    /*00010ee4*/ STRB        R2, [R3, #47]               @ 0x2f 
    /*00010ee8*/ STRB        R2, [R3, #63]               @ 0x3f 
    /*00010eec*/ STRB        R2, [R3, #79]               @ 0x4f 
    /*00010ef0*/ BNE         RC_DRV_InitParam_x10ed4
    RC_DRV_InitParam_x10ef4:
    /*00010ef4*/ MOV         R3, #0 
    /*00010ef8*/ MOV         R2, #8 
    /*00010efc*/ MOV         LR, #3 
    /*00010f00*/ MOV         IP, #5 
    /*00010f04*/ MOV         R0, #15 
    /*00010f08*/ MOV         R1, #25 
    /*00010f0c*/ MOV         R7, #20 
    /*00010f10*/ STRB        R3, [R4] 
    /*00010f14*/ STRB        R3, [R4, #1] 
    /*00010f18*/ MOV         R8, #1 
    /*00010f1c*/ STRB        R3, [R4, #2] 
    /*00010f20*/ STRB        R3, [R4, #3] 
    /*00010f24*/ STRB        R3, [R4, #16] 
    /*00010f28*/ STRB        R3, [R4, #17] 
    /*00010f2c*/ STRB        R3, [R4, #18] 
    /*00010f30*/ STRB        R3, [R4, #19] 
    /*00010f34*/ STRB        LR, [R4, #4] 
    /*00010f38*/ STRB        LR, [R4, #5] 
    /*00010f3c*/ STRB        LR, [R4, #20] 
    /*00010f40*/ STRB        LR, [R4, #21] 
    /*00010f44*/ STRB        IP, [R4, #6] 
    /*00010f48*/ STRB        IP, [R4, #7] 
    /*00010f4c*/ STRB        IP, [R4, #22] 
    /*00010f50*/ STRB        IP, [R4, #23] 
    /*00010f54*/ STRB        R2, [R4, #8] 
    /*00010f58*/ STRB        R2, [R4, #9] 
    /*00010f5c*/ STRB        R2, [R4, #10] 
    /*00010f60*/ STRB        R2, [R4, #24] 
    /*00010f64*/ STRB        R2, [R4, #25] 
    /*00010f68*/ STRB        R2, [R4, #26] 
    /*00010f6c*/ STRB        R0, [R4, #11] 
    /*00010f70*/ STRB        R0, [R4, #12] 
    /*00010f74*/ STRB        R0, [R4, #27] 
    /*00010f78*/ STRB        R0, [R4, #28] 
    /*00010f7c*/ STRB        R7, [R4, #13] 
    /*00010f80*/ STRB        R7, [R4, #29] 
    /*00010f84*/ STRB        R1, [R4, #14] 
    /*00010f88*/ STRB        R1, [R4, #15] 
    /*00010f8c*/ STRB        R1, [R4, #30] 
    /*00010f90*/ STRB        R1, [R4, #31] 
    /*00010f94*/ STRB        R3, [R4, #32] 
    /*00010f98*/ STRB        R7, [R4, #45]               @ 0x2d 
    /*00010f9c*/ STRB        R3, [R4, #33]               @ 0x21 
    /*00010fa0*/ STRB        R3, [R4, #34]               @ 0x22 
    /*00010fa4*/ STRB        R3, [R4, #35]               @ 0x23 
    /*00010fa8*/ STRB        LR, [R4, #36]               @ 0x24 
    /*00010fac*/ STRB        LR, [R4, #37]               @ 0x25 
    /*00010fb0*/ STRB        IP, [R4, #38]               @ 0x26 
    /*00010fb4*/ STRB        IP, [R4, #39]               @ 0x27 
    /*00010fb8*/ STRB        R2, [R4, #40]               @ 0x28 
    /*00010fbc*/ STRB        R2, [R4, #41]               @ 0x29 
    /*00010fc0*/ STRB        R2, [R4, #42]               @ 0x2a 
    /*00010fc4*/ STRB        R0, [R4, #43]               @ 0x2b 
    /*00010fc8*/ STRB        R0, [R4, #44]               @ 0x2c 
    /*00010fcc*/ STRB        R1, [R4, #46]               @ 0x2e 
    /*00010fd0*/ STRB        R1, [R4, #47]               @ 0x2f 
    /*00010fd4*/ STR         R3, [R4, #220]              @ 0xdc 
    /*00010fd8*/ STR         R8, [R4, #100]              @ 0x64 
    /*00010fdc*/ B           RC_DRV_InitParam_x10dd0
    RC_DRV_InitParam_x10fe0:
    /*00010fe0*/ ADD         R1, R4, #3 
    /*00010fe4*/ MOV         R0, #8 
    /*00010fe8*/ STR         R0, [R4, #96]               @ 0x60 
    RC_DRV_InitParam_x10fec:
    /*00010fec*/ STRB        R2, [R3, #1]! 
    /*00010ff0*/ CMP         R3, R1 
    /*00010ff4*/ STRB        R2, [R3, #16] 
    /*00010ff8*/ STRB        R2, [R3, #32] 
    /*00010ffc*/ STRB        R2, [R3, #48]               @ 0x30 
    /*00011000*/ STRB        R2, [R3, #64]               @ 0x40 
    /*00011004*/ STRB        R2, [R3, #80]               @ 0x50 
    /*00011008*/ BNE         RC_DRV_InitParam_x10fec
    /*0001100c*/ ADD         R3, R4, #4 
    /*00011010*/ ADD         R0, R4, #8 
    /*00011014*/ MOV         R1, #0 
    /*00011018*/ MOV         R2, #1 
    RC_DRV_InitParam_x1101c:
    /*0001101c*/ STRB        R1, [R3], #1 
    /*00011020*/ CMP         R0, R3 
    /*00011024*/ STRB        R1, [R3, #15] 
    /*00011028*/ STRB        R1, [R3, #31] 
    /*0001102c*/ STRB        R2, [R3, #47]               @ 0x2f 
    /*00011030*/ STRB        R2, [R3, #63]               @ 0x3f 
    /*00011034*/ STRB        R2, [R3, #79]               @ 0x4f 
    /*00011038*/ BNE         RC_DRV_InitParam_x1101c
    /*0001103c*/ ADD         R0, R4, #16 
    /*00011040*/ MVN         R1, #0 
    /*00011044*/ MOV         R2, #1 
    RC_DRV_InitParam_x11048:
    /*00011048*/ STRB        R1, [R3], #1 
    /*0001104c*/ CMP         R3, R0 
    /*00011050*/ STRB        R1, [R3, #15] 
    /*00011054*/ STRB        R1, [R3, #31] 
    /*00011058*/ STRB        R2, [R3, #47]               @ 0x2f 
    /*0001105c*/ STRB        R2, [R3, #63]               @ 0x3f 
    /*00011060*/ STRB        R2, [R3, #79]               @ 0x4f 
    /*00011064*/ BNE         RC_DRV_InitParam_x11048
    /*00011068*/ B           RC_DRV_InitParam_x10ef4
    RC_DRV_InitParam_x1106c:
    /*0001106c*/ SUB         R3, R4, #1 
    /*00011070*/ ADD         R0, R4, #7 
    /*00011074*/ MOV         R1, IP 
    /*00011078*/ STR         IP, [R4, #100]              @ 0x64 
    /*0001107c*/ MOV         IP, #8 
    /*00011080*/ STR         IP, [R4, #96]               @ 0x60 
    RC_DRV_InitParam_x11084:
    /*00011084*/ STRB        R1, [R3, #1]! 
    /*00011088*/ CMP         R3, R0 
    /*0001108c*/ STRB        R1, [R3, #16] 
    /*00011090*/ STRB        R1, [R3, #32] 
    /*00011094*/ STRB        R2, [R3, #48]               @ 0x30 
    /*00011098*/ STRB        R2, [R3, #64]               @ 0x40 
    /*0001109c*/ STRB        R2, [R3, #80]               @ 0x50 
    /*000110a0*/ BNE         RC_DRV_InitParam_x11084
    /*000110a4*/ ADD         R3, R4, #8 
    /*000110a8*/ ADD         R0, R4, #16 
    /*000110ac*/ MVN         R1, #0 
    /*000110b0*/ MOV         R2, #1 
    RC_DRV_InitParam_x110b4:
    /*000110b4*/ STRB        R1, [R3], #1 
    /*000110b8*/ CMP         R3, R0 
    /*000110bc*/ STRB        R1, [R3, #15] 
    /*000110c0*/ STRB        R1, [R3, #31] 
    /*000110c4*/ STRB        R2, [R3, #47]               @ 0x2f 
    /*000110c8*/ STRB        R2, [R3, #63]               @ 0x3f 
    /*000110cc*/ STRB        R2, [R3, #79]               @ 0x4f 
    /*000110d0*/ BNE         RC_DRV_InitParam_x110b4
    /*000110d4*/ B           RC_DRV_InitParam_x10e68
    RC_DRV_InitParam_x110d8:
    /*000110d8*/ MOVW        R1, #0                      @ g_astVbrParam [R_ARM_MOVW_ABS_NC: .bss+0xe0] 
    /*000110dc*/ MOVT        R1, #0                      @ g_astVbrParam [R_ARM_MOVT_ABS: .bss+0xe0] 
    /*000110e0*/ MOV         R2, #84                     @ 0x54 
    /*000110e4*/ ADD         R0, R4, #136                @ 0x88 
    /*000110e8*/ MLA         R1, R2, R6, R1 
    /*000110ec*/ BL          0x00000000000110EC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000110f0*/ B           RC_DRV_InitParam_x10e68
    RC_DRV_InitParam_x110f4:
    /*000110f4*/ MOVW        R3, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3578] 
    /*000110f8*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3588] 
    /*000110fc*/ MOVT        R3, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3578] 
    /*00011100*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3588] 
    /*00011104*/ MOV         R2, #980                    @ 0x3d4 
    /*00011108*/ LDR         R1, [PC, #4]                @ 0x0000000000011114 
    /*0001110c*/ BL          0x000000000001110C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011110*/ B           RC_DRV_InitParam_x10d60
    /*00011114*/ ANDEQ       R0, R0, R8, LSL #28 
FUNC_END RC_DRV_InitParam


FUNC_BEGIN RC_DRV_IsSupportQpMap
    /*00011118*/ MOV         R0, #1 
    /*0001111c*/ BX          LR 
FUNC_END RC_DRV_IsSupportQpMap


FUNC_BEGIN RC_DRV_CheckFirstFrmQp
    /*00011120*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00011124*/ SUB         SP, SP, #20 
    /*00011128*/ LDR         R3, [R1, #52]               @ 0x34 
    /*0001112c*/ CMP         R3, #4 
    /*00011130*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*00011134*/ B           RC_DRV_CheckFirstFrmQp_x11170
    /*00011138*/ ANDEQ       R1, R1, IP, ASR #2 
    /*0001113c*/ ANDEQ       R1, R1, IP, ROR R1 
    /*00011140*/ ANDEQ       R1, R1, IP, ASR #2 
    /*00011144*/ ANDEQ       R1, R1, IP, ASR #2 
    /*00011148*/ ANDEQ       R1, R1, IP, ASR #2 
    /*0001114c*/ LDR         R3, [R0, #104]              @ 0x68 
    /*00011150*/ CMN         R3, #1 
    /*00011154*/ BEQ         RC_DRV_CheckFirstFrmQp_x11170
    /*00011158*/ LDR         R2, [R0, #156]              @ 0x9c 
    /*0001115c*/ LDR         R1, [R0, #164]              @ 0xa4 
    /*00011160*/ CMP         R3, R2 
    /*00011164*/ BCC         RC_DRV_CheckFirstFrmQp_x111ac
    /*00011168*/ CMP         R3, R1 
    /*0001116c*/ BHI         RC_DRV_CheckFirstFrmQp_x111ac
    RC_DRV_CheckFirstFrmQp_x11170:
    /*00011170*/ MOV         R0, #0 
    RC_DRV_CheckFirstFrmQp_x11174:
    /*00011174*/ ADD         SP, SP, #20 
    /*00011178*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0001117c*/ LDR         R3, [R0, #104]              @ 0x68 
    /*00011180*/ CMN         R3, #1 
    /*00011184*/ BEQ         RC_DRV_CheckFirstFrmQp_x11170
    /*00011188*/ LDR         R2, [R0, #152]              @ 0x98 
    /*0001118c*/ LDR         R1, [R0, #156]              @ 0x9c 
    /*00011190*/ CMP         R3, R2 
    /*00011194*/ BCC         RC_DRV_CheckFirstFrmQp_x111a0
    /*00011198*/ CMP         R3, R1 
    /*0001119c*/ BLS         RC_DRV_CheckFirstFrmQp_x11170
    RC_DRV_CheckFirstFrmQp_x111a0:
    /*000111a0*/ STR         R1, [SP, #12] 
    /*000111a4*/ MOVW        R1, #1271                   @ 0x4f7 
    /*000111a8*/ B           RC_DRV_CheckFirstFrmQp_x111b4
    RC_DRV_CheckFirstFrmQp_x111ac:
    /*000111ac*/ STR         R1, [SP, #12] 
    /*000111b0*/ MOVW        R1, #1287                   @ 0x507 
    RC_DRV_CheckFirstFrmQp_x111b4:
    /*000111b4*/ STR         R2, [SP, #8] 
    /*000111b8*/ MOV         R0, #3 
    /*000111bc*/ STR         R3, [SP, #4] 
    /*000111c0*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3610] 
    /*000111c4*/ STR         R1, [SP] 
    /*000111c8*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3610] 
    /*000111cc*/ MOV         R1, #19 
    /*000111d0*/ LDR         R3, [PC, #8]                @ 0x00000000000111e0 
    /*000111d4*/ BL          0x00000000000111D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000111d8*/ MVN         R0, #0 
    /*000111dc*/ B           RC_DRV_CheckFirstFrmQp_x11174
    /*000111e0*/ ANDEQ       R0, R0, IP, LSL LR 
FUNC_END RC_DRV_CheckFirstFrmQp


FUNC_BEGIN RC_DRV_CheckQpmap
    /*000111e4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000111e8*/ SUB         SP, SP, #20 
    /*000111ec*/ LDR         R3, [R1, #52]               @ 0x34 
    /*000111f0*/ CMP         R3, #4 
    /*000111f4*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*000111f8*/ B           RC_DRV_CheckQpmap_x11228
    /*000111fc*/ ANDEQ       R1, R1, R4, LSR R2 
    /*00011200*/ ANDEQ       R1, R1, R0, LSL R2 
    /*00011204*/ ANDEQ       R1, R1, R4, LSR R2 
    /*00011208*/ ANDEQ       R1, R1, R4, LSR R2 
    /*0001120c*/ ANDEQ       R1, R1, R4, LSR R2 
    /*00011210*/ LDR         R3, [R0, #172]              @ 0xac 
    /*00011214*/ CMP         R3, #1 
    /*00011218*/ STRHI       R3, [SP, #4] 
    /*0001121c*/ MOVWHI      R3, #1311                   @ 0x51f 
    /*00011220*/ BHI         RC_DRV_CheckQpmap_x11320
    /*00011224*/ BEQ         RC_DRV_CheckQpmap_x112bc
    RC_DRV_CheckQpmap_x11228:
    /*00011228*/ MOV         R0, #0 
    RC_DRV_CheckQpmap_x1122c:
    /*0001122c*/ ADD         SP, SP, #20 
    /*00011230*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00011234*/ LDR         R3, [R0, #212]              @ 0xd4 
    /*00011238*/ CMP         R3, #1 
    /*0001123c*/ BHI         RC_DRV_CheckQpmap_x11318
    /*00011240*/ BNE         RC_DRV_CheckQpmap_x11228
    /*00011244*/ LDR         R3, [R1] 
    /*00011248*/ CMP         R3, #3 
    /*0001124c*/ BEQ         RC_DRV_CheckQpmap_x11348
    /*00011250*/ LDR         R3, [R0, #216]              @ 0xd8 
    /*00011254*/ CMP         R3, #2 
    /*00011258*/ BLS         RC_DRV_CheckQpmap_x1126c
    /*0001125c*/ LDR         R1, [R1, #48]               @ 0x30 
    /*00011260*/ MOVW        R2, #265                    @ 0x109 
    /*00011264*/ CMP         R1, R2 
    /*00011268*/ BEQ         RC_DRV_CheckQpmap_x113b4
    RC_DRV_CheckQpmap_x1126c:
    /*0001126c*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00011270*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00011274*/ LDR         R3, [R3] 
    /*00011278*/ LDRB        R0, [R3, #40]               @ 0x28 
    /*0001127c*/ CMP         R0, #9 
    /*00011280*/ CMPNE       R0, #12 
    /*00011284*/ MOVEQ       R0, #1 
    /*00011288*/ MOVNE       R0, #0 
    /*0001128c*/ BNE         RC_DRV_CheckQpmap_x1122c
    /*00011290*/ MOVW        R3, #1380                   @ 0x564 
    RC_DRV_CheckQpmap_x11294:
    /*00011294*/ STR         R3, [SP] 
    /*00011298*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3740] 
    /*0001129c*/ LDR         R3, [PC, #300]              @ 0x00000000000113d0 
    /*000112a0*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3740] 
    /*000112a4*/ MOV         R1, #19 
    /*000112a8*/ MOV         R0, #3 
    /*000112ac*/ BL          0x00000000000112AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000112b0*/ MOVW        R0, #32776                  @ 0x8008 
    /*000112b4*/ MOVT        R0, #40979                  @ 0xa013 
    /*000112b8*/ B           RC_DRV_CheckQpmap_x1122c
    RC_DRV_CheckQpmap_x112bc:
    /*000112bc*/ LDR         R3, [R1] 
    /*000112c0*/ CMP         R3, #3 
    /*000112c4*/ MOVEQ       R0, R3 
    /*000112c8*/ MOVWEQ      R3, #1317                   @ 0x525 
    /*000112cc*/ BEQ         RC_DRV_CheckQpmap_x11350
    /*000112d0*/ LDR         R3, [R0, #176]              @ 0xb0 
    /*000112d4*/ CMP         R3, #2 
    /*000112d8*/ BLS         RC_DRV_CheckQpmap_x112ec
    /*000112dc*/ LDR         R1, [R1, #48]               @ 0x30 
    /*000112e0*/ MOVW        R2, #265                    @ 0x109 
    /*000112e4*/ CMP         R1, R2 
    /*000112e8*/ BEQ         RC_DRV_CheckQpmap_x11374
    RC_DRV_CheckQpmap_x112ec:
    /*000112ec*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*000112f0*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*000112f4*/ LDR         R3, [R3] 
    /*000112f8*/ LDRB        R0, [R3, #40]               @ 0x28 
    /*000112fc*/ CMP         R0, #9 
    /*00011300*/ CMPNE       R0, #12 
    /*00011304*/ MOVEQ       R0, #1 
    /*00011308*/ MOVNE       R0, #0 
    /*0001130c*/ MOVWEQ      R3, #1338                   @ 0x53a 
    /*00011310*/ BNE         RC_DRV_CheckQpmap_x1122c
    /*00011314*/ B           RC_DRV_CheckQpmap_x11294
    RC_DRV_CheckQpmap_x11318:
    /*00011318*/ STR         R3, [SP, #4] 
    /*0001131c*/ MOVW        R3, #1353                   @ 0x549 
    RC_DRV_CheckQpmap_x11320:
    /*00011320*/ STR         R3, [SP] 
    /*00011324*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3664] 
    /*00011328*/ LDR         R3, [PC, #160]              @ 0x00000000000113d0 
    /*0001132c*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3664] 
    /*00011330*/ MOV         R1, #19 
    /*00011334*/ MOV         R0, #3 
    /*00011338*/ BL          0x0000000000011338          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001133c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00011340*/ MOVT        R0, #40979                  @ 0xa013 
    /*00011344*/ B           RC_DRV_CheckQpmap_x1122c
    RC_DRV_CheckQpmap_x11348:
    /*00011348*/ MOV         R0, R3 
    /*0001134c*/ MOVW        R3, #1359                   @ 0x54f 
    RC_DRV_CheckQpmap_x11350:
    /*00011350*/ STR         R3, [SP] 
    /*00011354*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x36b4] 
    /*00011358*/ LDR         R3, [PC, #112]              @ 0x00000000000113d0 
    /*0001135c*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x36b4] 
    /*00011360*/ MOV         R1, #19 
    /*00011364*/ BL          0x0000000000011364          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011368*/ MOVW        R0, #32777                  @ 0x8009 
    /*0001136c*/ MOVT        R0, #40979                  @ 0xa013 
    /*00011370*/ B           RC_DRV_CheckQpmap_x1122c
    RC_DRV_CheckQpmap_x11374:
    /*00011374*/ STR         R3, [SP, #4] 
    /*00011378*/ MOV         R3, #0 
    /*0001137c*/ STR         R3, [SP, #8] 
    /*00011380*/ MOVW        R3, #1327                   @ 0x52f 
    /*00011384*/ MOV         R2, #2 
    /*00011388*/ STR         R2, [SP, #12] 
    RC_DRV_CheckQpmap_x1138c:
    /*0001138c*/ STR         R3, [SP] 
    /*00011390*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x36f8] 
    /*00011394*/ LDR         R3, [PC, #52]               @ 0x00000000000113d0 
    /*00011398*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x36f8] 
    /*0001139c*/ MOV         R1, #19 
    /*000113a0*/ MOV         R0, #3 
    /*000113a4*/ BL          0x00000000000113A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000113a8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000113ac*/ MOVT        R0, #40979                  @ 0xa013 
    /*000113b0*/ B           RC_DRV_CheckQpmap_x1122c
    RC_DRV_CheckQpmap_x113b4:
    /*000113b4*/ STR         R3, [SP, #4] 
    /*000113b8*/ MOV         R2, #2 
    /*000113bc*/ MOV         R3, #0 
    /*000113c0*/ STR         R2, [SP, #12] 
    /*000113c4*/ STR         R3, [SP, #8] 
    /*000113c8*/ MOVW        R3, #1369                   @ 0x559 
    /*000113cc*/ B           RC_DRV_CheckQpmap_x1138c
    /*000113d0*/ ANDEQ       R0, R0, R4, LSR LR 
FUNC_END RC_DRV_CheckQpmap


FUNC_BEGIN RC_DRV_SetSceneMode
    /*000113d4*/ LDR         R3, [R0, #3112]             @ 0xc28 
    /*000113d8*/ CMP         R3, #1 
    /*000113dc*/ BEQ         RC_DRV_SetSceneMode_x113f4
    /*000113e0*/ CMP         R3, #2 
    /*000113e4*/ MOVEQ       R3, #1 
    /*000113e8*/ STREQ       R3, [R0, #3088]             @ 0xc10 
    RC_DRV_SetSceneMode_x113ec:
    /*000113ec*/ MOV         R0, #0 
    /*000113f0*/ BX          LR 
    RC_DRV_SetSceneMode_x113f4:
    /*000113f4*/ LDR         R1, [R0, #48]               @ 0x30 
    /*000113f8*/ MOVW        R2, #265                    @ 0x109 
    /*000113fc*/ CMP         R1, R2 
    /*00011400*/ BNE         RC_DRV_SetSceneMode_x113ec
    /*00011404*/ PUSH        {R4, R5, LR} 
    /*00011408*/ MOV         R2, #0 
    /*0001140c*/ MOV         R1, #8 
    /*00011410*/ MOV         LR, #3 
    /*00011414*/ MOV         IP, #5 
    /*00011418*/ MOV         R4, #15 
    /*0001141c*/ STR         R2, [R0, #2024]             @ 0x7e8 
    /*00011420*/ MOV         R5, #20 
    /*00011424*/ STR         R2, [R0, #2028]             @ 0x7ec 
    /*00011428*/ STR         R2, [R0, #2032]             @ 0x7f0 
    /*0001142c*/ STR         R2, [R0, #2036]             @ 0x7f4 
    /*00011430*/ STR         R2, [R0, #2088]             @ 0x828 
    /*00011434*/ STR         R2, [R0, #2092]             @ 0x82c 
    /*00011438*/ STR         R2, [R0, #2096]             @ 0x830 
    /*0001143c*/ STR         R2, [R0, #2100]             @ 0x834 
    /*00011440*/ STR         LR, [R0, #2040]             @ 0x7f8 
    /*00011444*/ STR         LR, [R0, #2044]             @ 0x7fc 
    /*00011448*/ STR         LR, [R0, #2104]             @ 0x838 
    /*0001144c*/ STR         LR, [R0, #2108]             @ 0x83c 
    /*00011450*/ MOV         LR, #25 
    /*00011454*/ STR         IP, [R0, #2048]             @ 0x800 
    /*00011458*/ STR         IP, [R0, #2052]             @ 0x804 
    /*0001145c*/ STR         IP, [R0, #2112]             @ 0x840 
    /*00011460*/ STR         IP, [R0, #2116]             @ 0x844 
    /*00011464*/ MOV         IP, #4 
    /*00011468*/ STR         R1, [R0, #2056]             @ 0x808 
    /*0001146c*/ STR         R1, [R0, #2060]             @ 0x80c 
    /*00011470*/ STR         R1, [R0, #2064]             @ 0x810 
    /*00011474*/ STR         R1, [R0, #2120]             @ 0x848 
    /*00011478*/ STR         R1, [R0, #2124]             @ 0x84c 
    /*0001147c*/ STR         R1, [R0, #2128]             @ 0x850 
    /*00011480*/ STR         R4, [R0, #2068]             @ 0x814 
    /*00011484*/ STR         R4, [R0, #2072]             @ 0x818 
    /*00011488*/ STR         R4, [R0, #2132]             @ 0x854 
    /*0001148c*/ STR         R4, [R0, #2136]             @ 0x858 
    /*00011490*/ STR         R5, [R0, #2076]             @ 0x81c 
    /*00011494*/ STR         R5, [R0, #2140]             @ 0x85c 
    /*00011498*/ STR         LR, [R0, #2080]             @ 0x820 
    /*0001149c*/ STR         LR, [R0, #2084]             @ 0x824 
    /*000114a0*/ STR         LR, [R0, #2144]             @ 0x860 
    /*000114a4*/ STR         LR, [R0, #2148]             @ 0x864 
    /*000114a8*/ STR         R3, [R0, #2736]             @ 0xab0 
    /*000114ac*/ STRB        R1, [R0, #2776]             @ 0xad8 
    /*000114b0*/ STRB        R1, [R0, #2777]             @ 0xad9 
    /*000114b4*/ STRB        R2, [R0, #2828]             @ 0xb0c 
    /*000114b8*/ STRB        R2, [R0, #2829]             @ 0xb0d 
    /*000114bc*/ STR         R2, [R0, #3056]             @ 0xbf0 
    /*000114c0*/ STR         R2, [R0, #3060]             @ 0xbf4 
    /*000114c4*/ STR         R2, [R0, #2608]             @ 0xa30 
    /*000114c8*/ STR         R2, [R0, #2612]             @ 0xa34 
    /*000114cc*/ STR         R3, [R0, #2740]             @ 0xab4 
    /*000114d0*/ STRB        IP, [R0, #2768]             @ 0xad0 
    /*000114d4*/ STRB        IP, [R0, #2769]             @ 0xad1 
    /*000114d8*/ STRB        IP, [R0, #2772]             @ 0xad4 
    /*000114dc*/ STRB        IP, [R0, #2773]             @ 0xad5 
    /*000114e0*/ MOV         R0, #0 
    /*000114e4*/ POP         {R4, R5, PC} 
FUNC_END RC_DRV_SetSceneMode


FUNC_BEGIN RC_DRV_CheckBitRate
    /*000114e8*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*000114ec*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*000114f0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000114f4*/ SUB         SP, SP, #20 
    /*000114f8*/ LDR         R3, [R3] 
    /*000114fc*/ LDR         R3, [R3, #40]               @ 0x28 
    /*00011500*/ AND         R2, R3, #251                @ 0xfb 
    /*00011504*/ SUB         R2, R2, #1 
    /*00011508*/ CMP         R2, #1 
    /*0001150c*/ BLS         RC_DRV_CheckBitRate_x1155c
    /*00011510*/ UXTB        R3, R3 
    /*00011514*/ CMP         R3, #12 
    /*00011518*/ BHI         RC_DRV_CheckBitRate_x11530
    /*0001151c*/ MOVW        R2, #4609                   @ 0x1201 
    /*00011520*/ MVN         R3, R2, LSR R3 
    /*00011524*/ TST         R3, #1 
    /*00011528*/ MOVEQ       R3, #102400                 @ 0x19000 
    /*0001152c*/ BEQ         RC_DRV_CheckBitRate_x1156c
    RC_DRV_CheckBitRate_x11530:
    /*00011530*/ MOV         R3, #1504                   @ 0x5e0 
    /*00011534*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37b8] 
    /*00011538*/ STR         R3, [SP] 
    /*0001153c*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37b8] 
    /*00011540*/ LDR         R3, [PC, #128]              @ 0x00000000000115c8 
    /*00011544*/ MOV         R1, #8 
    /*00011548*/ MOV         R0, #3 
    /*0001154c*/ BL          0x000000000001154C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011550*/ MOVW        R0, #32776                  @ 0x8008 
    /*00011554*/ MOVT        R0, #40979                  @ 0xa013 
    /*00011558*/ B           RC_DRV_CheckBitRate_x11584
    RC_DRV_CheckBitRate_x1155c:
    /*0001155c*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00011560*/ CMP         R0, R3 
    /*00011564*/ MOVNE       R3, #51200                  @ 0xc800 
    /*00011568*/ MOVEQ       R3, #102400                 @ 0x19000 
    RC_DRV_CheckBitRate_x1156c:
    /*0001156c*/ LSR         R1, R1, #10 
    /*00011570*/ CMP         R3, R1 
    /*00011574*/ CMPCS       R1, #1 
    /*00011578*/ MOVLS       R0, #1 
    /*0001157c*/ MOVHI       R0, #0 
    /*00011580*/ BLS         RC_DRV_CheckBitRate_x1158c
    RC_DRV_CheckBitRate_x11584:
    /*00011584*/ ADD         SP, SP, #20 
    /*00011588*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    RC_DRV_CheckBitRate_x1158c:
    /*0001158c*/ STR         R3, [SP, #12] 
    /*00011590*/ MOV         R2, #2 
    /*00011594*/ STR         R1, [SP, #4] 
    /*00011598*/ MOVW        R3, #1512                   @ 0x5e8 
    /*0001159c*/ STR         R2, [SP, #8] 
    /*000115a0*/ MOV         R1, #19 
    /*000115a4*/ STR         R3, [SP] 
    /*000115a8*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3770] 
    /*000115ac*/ LDR         R3, [PC, #20]               @ 0x00000000000115c8 
    /*000115b0*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3770] 
    /*000115b4*/ MOV         R0, #3 
    /*000115b8*/ BL          0x00000000000115B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000115bc*/ MOVW        R0, #32771                  @ 0x8003 
    /*000115c0*/ MOVT        R0, #40979                  @ 0xa013 
    /*000115c4*/ B           RC_DRV_CheckBitRate_x11584
    /*000115c8*/ ANDEQ       R0, R0, R8, ASR #28 
FUNC_END RC_DRV_CheckBitRate


FUNC_BEGIN RC_DRV_CheckRingDiscard
    /*000115cc*/ MOV         R0, #0 
    /*000115d0*/ BX          LR 
FUNC_END RC_DRV_CheckRingDiscard


FUNC_BEGIN RC_DRV_ReEncodeSupport
    /*000115d4*/ MOV         R0, #1 
    /*000115d8*/ BX          LR 
FUNC_END RC_DRV_ReEncodeSupport


FUNC_BEGIN RCDecisionPercentJudge1
    /*000115dc*/ PUSH        {R4, LR} 
    /*000115e0*/ ADD         R4, R1, #496                @ 0x1f0 
    /*000115e4*/ MOV         R3, #0 
    /*000115e8*/ ADD         R1, R1, #464                @ 0x1d0 
    /*000115ec*/ MOV         R0, R4 
    /*000115f0*/ MOV         R2, R3 
    RCDecisionPercentJudge1_x115f4:
    /*000115f4*/ LDR         LR, [R1], #4 
    /*000115f8*/ LDR         IP, [R0], #4 
    /*000115fc*/ CMP         R1, R4 
    /*00011600*/ ADD         R2, R2, LR 
    /*00011604*/ ADD         R3, R3, IP 
    /*00011608*/ BNE         RCDecisionPercentJudge1_x115f4
    /*0001160c*/ LSRS        R1, R3, #8 
    /*00011610*/ BNE         RCDecisionPercentJudge1_x1161c
    /*00011614*/ MOV         R0, #100                    @ 0x64 
    /*00011618*/ POP         {R4, PC} 
    RCDecisionPercentJudge1_x1161c:
    /*0001161c*/ MOV         R0, #20 
    /*00011620*/ MUL         R0, R0, R2 
    /*00011624*/ BL          0x0000000000011624          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00011628*/ CMP         R0, #100                    @ 0x64 
    /*0001162c*/ MOVGE       R0, #100                    @ 0x64 
    /*00011630*/ CMP         R0, #5 
    /*00011634*/ MOVLT       R0, #5 
    /*00011638*/ POP         {R4, PC} 
FUNC_END RCDecisionPercentJudge1


FUNC_BEGIN RC_DRV_NewModeMovingDecision
    /*0001163c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00011640*/ MOV         R4, R1 
    /*00011644*/ LDR         R3, [R4, #264]              @ 0x108 
    /*00011648*/ ADD         R1, R1, #3536               @ 0xdd0 
    /*0001164c*/ LDR         R5, [R4, #252]              @ 0xfc 
    /*00011650*/ SUB         SP, SP, #12 
    /*00011654*/ LDR         LR, [R4, #1652]             @ 0x674 
    /*00011658*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xdf4] 
    /*0001165c*/ ADD         R1, R1, #8 
    /*00011660*/ ADD         R2, R4, #3536               @ 0xdd0 
    /*00011664*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xdf4] 
    /*00011668*/ MOV         R0, #0 
    /*0001166c*/ STR         R3, [SP] 
    RC_DRV_NewModeMovingDecision_x11670:
    /*00011670*/ LDR         R6, [R2, #64]               @ 0x40 
    /*00011674*/ MOV         R7, R2 
    /*00011678*/ CMN         R6, #1 
    /*0001167c*/ ADD         R3, R6, #8 
    /*00011680*/ MOVEQ       R6, #32 
    /*00011684*/ BEQ         RC_DRV_NewModeMovingDecision_x116a4
    /*00011688*/ SUBS        R3, R3, LR 
    /*0001168c*/ MOVMI       R6, #14 
    /*00011690*/ BMI         RC_DRV_NewModeMovingDecision_x116a4
    /*00011694*/ CMP         R3, #15 
    /*00011698*/ MOVGE       R3, #15 
    /*0001169c*/ ADD         R3, IP, R3, LSL #2 
    /*000116a0*/ LDR         R6, [R3, #104]              @ 0x68 
    RC_DRV_NewModeMovingDecision_x116a4:
    /*000116a4*/ LDR         R3, [R7] 
    /*000116a8*/ ADD         R2, R2, #4 
    /*000116ac*/ CMP         R1, R2 
    /*000116b0*/ MUL         R3, R3, R6 
    /*000116b4*/ ADD         R0, R0, R3, LSR #5 
    /*000116b8*/ BNE         RC_DRV_NewModeMovingDecision_x11670
    /*000116bc*/ ADD         R3, R4, #3568               @ 0xdf0 
    /*000116c0*/ ADD         IP, R4, #3600               @ 0xe10 
    /*000116c4*/ MOV         R1, #0 
    RC_DRV_NewModeMovingDecision_x116c8:
    /*000116c8*/ LDR         R2, [R3], #4 
    /*000116cc*/ CMP         IP, R3 
    /*000116d0*/ ADD         R1, R1, R2 
    /*000116d4*/ BNE         RC_DRV_NewModeMovingDecision_x116c8
    /*000116d8*/ CMP         R1, #0 
    /*000116dc*/ CMPNE       R0, #0 
    /*000116e0*/ MOVEQ       R6, #255                    @ 0xff 
    /*000116e4*/ BNE         RC_DRV_NewModeMovingDecision_x11874
    RC_DRV_NewModeMovingDecision_x116e8:
    /*000116e8*/ SUB         R3, R5, #30 
    /*000116ec*/ RSB         R5, R5, #100                @ 0x64 
    /*000116f0*/ MOVW        R7, #41195                  @ 0xa0eb 
    /*000116f4*/ MOVT        R7, #59918                  @ 0xea0e 
    /*000116f8*/ LSL         R3, R3, #8 
    /*000116fc*/ LDR         LR, [R4, #3664]             @ 0xe50 
    /*00011700*/ LDR         IP, [R4, #3632]             @ 0xe30 
    /*00011704*/ ADD         R0, R4, #3632               @ 0xe30 
    /*00011708*/ MLA         R6, R5, R6, R3 
    /*0001170c*/ MOV         SL, #0 
    /*00011710*/ STR         R3, [SP, #4] 
    /*00011714*/ ADD         R0, R0, #4 
    /*00011718*/ ADD         FP, R4, #3664               @ 0xe50 
    /*0001171c*/ MOV         R2, LR 
    /*00011720*/ MOV         R8, LR 
    /*00011724*/ MOV         R3, IP 
    /*00011728*/ MOV         R1, IP 
    /*0001172c*/ MOV         R9, SL 
    /*00011730*/ LSR         R6, R6, #1 
    /*00011734*/ UMULL       R6, R7, R6, R7 
    /*00011738*/ LSR         R6, R7, #5 
    /*0001173c*/ B           RC_DRV_NewModeMovingDecision_x11748
    RC_DRV_NewModeMovingDecision_x11740:
    /*00011740*/ LDR         R3, [R0], #4 
    /*00011744*/ LDR         R2, [R0, #28] 
    RC_DRV_NewModeMovingDecision_x11748:
    /*00011748*/ CMP         LR, R2 
    /*0001174c*/ ADD         R9, R9, R3 
    /*00011750*/ ADD         SL, SL, R2 
    /*00011754*/ MOVCC       LR, R2 
    /*00011758*/ CMP         R8, R2 
    /*0001175c*/ MOVCS       R8, R2 
    /*00011760*/ CMP         IP, R3 
    /*00011764*/ MOVCC       IP, R3 
    /*00011768*/ CMP         R1, R3 
    /*0001176c*/ MOVCS       R1, R3 
    /*00011770*/ CMP         FP, R0 
    /*00011774*/ BNE         RC_DRV_NewModeMovingDecision_x11740
    /*00011778*/ SUB         IP, R9, IP 
    /*0001177c*/ SUBS        R9, IP, R1 
    /*00011780*/ BNE         RC_DRV_NewModeMovingDecision_x118bc
    /*00011784*/ MOV         R7, #256                    @ 0x100 
    /*00011788*/ MOV         R3, #100                    @ 0x64 
    /*0001178c*/ STR         R3, [R4, #3696]             @ 0xe70 
    RC_DRV_NewModeMovingDecision_x11790:
    /*00011790*/ LDR         R3, [SP, #4] 
    /*00011794*/ MOVW        SL, #8969                   @ 0x2309 
    /*00011798*/ MOVT        SL, #22765                  @ 0x58ed 
    /*0001179c*/ ADD         IP, R4, #3728               @ 0xe90 
    /*000117a0*/ ADD         R8, R3, #6400               @ 0x1900 
    /*000117a4*/ ADD         IP, IP, #8 
    /*000117a8*/ ADD         R4, R4, #3696               @ 0xe70 
    /*000117ac*/ MOV         R3, #0 
    /*000117b0*/ MLA         R7, R7, R5, R8 
    /*000117b4*/ ADD         R4, R4, #8 
    /*000117b8*/ MOV         R0, IP 
    /*000117bc*/ MOV         R1, R3 
    /*000117c0*/ UMULL       SL, FP, R7, SL 
    /*000117c4*/ SUB         R7, R7, FP 
    /*000117c8*/ ADD         R7, FP, R7, LSR #1 
    /*000117cc*/ LSR         R7, R7, #6 
    RC_DRV_NewModeMovingDecision_x117d0:
    /*000117d0*/ LDR         LR, [R4], #4 
    /*000117d4*/ LDR         R2, [R0], #4 
    /*000117d8*/ CMP         IP, R4 
    /*000117dc*/ ADD         R3, R3, LR 
    /*000117e0*/ ADD         R1, R1, R2 
    /*000117e4*/ BNE         RC_DRV_NewModeMovingDecision_x117d0
    /*000117e8*/ LSRS        R1, R1, #8 
    /*000117ec*/ MOVEQ       R0, #256                    @ 0x100 
    /*000117f0*/ BEQ         RC_DRV_NewModeMovingDecision_x11828
    /*000117f4*/ MOV         R0, #20 
    /*000117f8*/ MUL         R0, R0, R3 
    /*000117fc*/ BL          0x00000000000117FC          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00011800*/ MOVW        R2, #34079                  @ 0x851f 
    /*00011804*/ MOVT        R2, #20971                  @ 0x51eb 
    /*00011808*/ CMP         R0, #100                    @ 0x64 
    /*0001180c*/ MOVGE       R0, #100                    @ 0x64 
    /*00011810*/ CMP         R0, #5 
    /*00011814*/ MOVLT       R0, #5 
    /*00011818*/ LSL         R0, R0, #8 
    /*0001181c*/ SMULL       R2, R3, R0, R2 
    /*00011820*/ ASR         R0, R0, #31 
    /*00011824*/ RSB         R0, R0, R3, ASR #5 
    RC_DRV_NewModeMovingDecision_x11828:
    /*00011828*/ MLA         R5, R5, R0, R8 
    /*0001182c*/ LDR         R2, [SP] 
    /*00011830*/ MOVW        R3, #8969                   @ 0x2309 
    /*00011834*/ MOVT        R3, #22765                  @ 0x58ed 
    /*00011838*/ ADD         R0, R6, #1 
    /*0001183c*/ RSB         LR, R2, #100                @ 0x64 
    /*00011840*/ MUL         R1, R7, R2 
    /*00011844*/ MOVW        IP, #34079                  @ 0x851f 
    /*00011848*/ UMULL       R6, R7, R5, R3 
    /*0001184c*/ MOVT        IP, #20971                  @ 0x51eb 
    /*00011850*/ SUB         R5, R5, R7 
    /*00011854*/ ADD         R2, R7, R5, LSR #1 
    /*00011858*/ LSR         R2, R2, #6 
    /*0001185c*/ MLA         R2, LR, R2, R1 
    /*00011860*/ UMULL       R2, R3, R2, IP 
    /*00011864*/ ADD         R0, R0, R3, LSR #5 
    /*00011868*/ LSR         R0, R0, #1 
    /*0001186c*/ ADD         SP, SP, #12 
    /*00011870*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    RC_DRV_NewModeMovingDecision_x11874:
    /*00011874*/ LSL         R0, R0, #6 
    /*00011878*/ BL          0x0000000000011878          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0001187c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xdf4] 
    /*00011880*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xdf4] 
    /*00011884*/ MOVW        R2, #34079                  @ 0x851f 
    /*00011888*/ MOVT        R2, #20971                  @ 0x51eb 
    /*0001188c*/ ASR         R0, R0, #4 
    /*00011890*/ CMP         R0, #99                     @ 0x63 
    /*00011894*/ MOVGE       R0, #99                     @ 0x63 
    /*00011898*/ CMP         R0, #1 
    /*0001189c*/ MOVLT       R0, #1 
    /*000118a0*/ ADD         R0, R3, R0, LSL #2 
    /*000118a4*/ LDR         R6, [R0, #168]              @ 0xa8 
    /*000118a8*/ LSL         R6, R6, #8 
    /*000118ac*/ SMULL       R2, R3, R6, R2 
    /*000118b0*/ ASR         R6, R6, #31 
    /*000118b4*/ RSB         R6, R6, R3, ASR #5 
    /*000118b8*/ B           RC_DRV_NewModeMovingDecision_x116e8
    RC_DRV_NewModeMovingDecision_x118bc:
    /*000118bc*/ LDR         R3, [R4, #3260]             @ 0xcbc 
    /*000118c0*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xdf4] 
    /*000118c4*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xdf4] 
    /*000118c8*/ SUB         LR, SL, LR 
    /*000118cc*/ SUB         R8, LR, R8 
    /*000118d0*/ MOV         R1, R9 
    /*000118d4*/ LSR         R3, R3, #6 
    /*000118d8*/ SUB         R3, R3, #22 
    /*000118dc*/ USAT        R3, #4, R3 
    /*000118e0*/ ADD         R3, R7, R3 
    /*000118e4*/ LDRB        R0, [R3, #568]              @ 0x238 
    /*000118e8*/ MUL         R0, R8, R0 
    /*000118ec*/ BL          0x00000000000118EC          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*000118f0*/ MOV         R3, #100                    @ 0x64 
    /*000118f4*/ MOV         R1, R9 
    /*000118f8*/ CMP         R0, #16 
    /*000118fc*/ MOVGE       R0, #16 
    /*00011900*/ CMP         R0, #1 
    /*00011904*/ ADDGE       R7, R7, R0 
    /*00011908*/ ADDLT       R7, R7, #1 
    /*0001190c*/ MUL         R0, R3, R8 
    /*00011910*/ BL          0x0000000000011910          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*00011914*/ LDRB        R7, [R7, #584]              @ 0x248 
    /*00011918*/ MOVW        R3, #34079                  @ 0x851f 
    /*0001191c*/ MOVT        R3, #20971                  @ 0x51eb 
    /*00011920*/ LSL         R2, R7, #8 
    /*00011924*/ SMULL       R2, R3, R2, R3 
    /*00011928*/ ASR         R7, R3, #5 
    /*0001192c*/ STR         R0, [R4, #3696]             @ 0xe70 
    /*00011930*/ B           RC_DRV_NewModeMovingDecision_x11790
FUNC_END RC_DRV_NewModeMovingDecision


FUNC_BEGIN RC_DRV_NewModePsnrDecision
    /*00011934*/ PUSH        {R4, R5, R6, LR} 
    /*00011938*/ LDR         R3, [R1, #48]               @ 0x30 
    /*0001193c*/ CMP         R3, #96                     @ 0x60 
    /*00011940*/ BEQ         RC_DRV_NewModePsnrDecision_x119bc
    /*00011944*/ ADD         R2, R1, #3824               @ 0xef0 
    /*00011948*/ LDR         R3, [R1, #3800]             @ 0xed8 
    /*0001194c*/ LDR         R5, [R1, #3804]             @ 0xedc 
    /*00011950*/ ADD         R2, R2, #8 
    /*00011954*/ ADD         R4, R1, #3856               @ 0xf10 
    /*00011958*/ MOV         R0, #0 
    /*0001195c*/ ADD         R4, R4, #8 
    /*00011960*/ ADD         R5, R3, R5 
    /*00011964*/ MOV         R3, R2 
    RC_DRV_NewModePsnrDecision_x11968:
    /*00011968*/ LDR         IP, [R3], #4 
    /*0001196c*/ CMP         R4, R3 
    /*00011970*/ ADD         R0, R0, IP 
    /*00011974*/ BNE         RC_DRV_NewModePsnrDecision_x11968
    /*00011978*/ MOV         LR, #0 
    RC_DRV_NewModePsnrDecision_x1197c:
    /*0001197c*/ LDR         IP, [R2], #4 
    /*00011980*/ CMP         IP, #0 
    /*00011984*/ ADDGT       LR, LR, #1 
    /*00011988*/ CMP         R3, R2 
    /*0001198c*/ BNE         RC_DRV_NewModePsnrDecision_x1197c
    /*00011990*/ CMP         R0, #0 
    /*00011994*/ CMPNE       R5, #0 
    /*00011998*/ MOVEQ       R3, #1 
    /*0001199c*/ MOVNE       R3, #0 
    /*000119a0*/ CMP         LR, #7 
    /*000119a4*/ MOVGT       LR, R3 
    /*000119a8*/ ORRLE       LR, R3, #1 
    /*000119ac*/ CMP         LR, #0 
    /*000119b0*/ BEQ         RC_DRV_NewModePsnrDecision_x11aa4
    RC_DRV_NewModePsnrDecision_x119b4:
    /*000119b4*/ MOV         R0, #255                    @ 0xff 
    /*000119b8*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x119bc:
    /*000119bc*/ LDR         R2, [R1, #3804]             @ 0xedc 
    /*000119c0*/ ADD         R3, R1, #3824               @ 0xef0 
    /*000119c4*/ LDR         LR, [R1, #3800]             @ 0xed8 
    /*000119c8*/ ADD         IP, R1, #3856               @ 0xf10 
    /*000119cc*/ ADD         R3, R3, #8 
    /*000119d0*/ ADD         IP, IP, #8 
    /*000119d4*/ ADD         LR, LR, R2 
    /*000119d8*/ MOV         R2, #0 
    RC_DRV_NewModePsnrDecision_x119dc:
    /*000119dc*/ LDR         R0, [R3], #4 
    /*000119e0*/ CMP         IP, R3 
    /*000119e4*/ ADD         R2, R2, R0 
    /*000119e8*/ BNE         RC_DRV_NewModePsnrDecision_x119dc
    /*000119ec*/ CMP         R2, #0 
    /*000119f0*/ CMPNE       LR, #0 
    /*000119f4*/ BEQ         RC_DRV_NewModePsnrDecision_x119b4
    /*000119f8*/ LDR         R4, [R1, #280]              @ 0x118 
    /*000119fc*/ ADD         LR, R2, #7 
    /*00011a00*/ LDR         R0, [R1, #276]              @ 0x114 
    /*00011a04*/ CMP         R2, #0 
    /*00011a08*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xdf4] 
    /*00011a0c*/ LDR         IP, [R1, #240]              @ 0xf0 
    /*00011a10*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xdf4] 
    /*00011a14*/ MOVLT       R2, LR 
    /*00011a18*/ ADD         R0, R3, R0 
    /*00011a1c*/ ADD         R3, R3, R4 
    /*00011a20*/ CMP         IP, #20 
    /*00011a24*/ LDRB        R4, [R3, #704]              @ 0x2c0 
    /*00011a28*/ ASR         R3, R2, #9 
    /*00011a2c*/ LDRB        LR, [R0, #604]              @ 0x25c 
    /*00011a30*/ SUBLS       R3, R3, #3 
    /*00011a34*/ LDR         R0, [R1, #272]              @ 0x110 
    /*00011a38*/ LDR         R2, [R1, #268]              @ 0x10c 
    /*00011a3c*/ BLS         RC_DRV_NewModePsnrDecision_x11a5c
    /*00011a40*/ SUB         R1, IP, #21 
    /*00011a44*/ CMP         R1, #1 
    /*00011a48*/ BLS         RC_DRV_NewModePsnrDecision_x11a58
    /*00011a4c*/ SUB         R1, IP, #23 
    /*00011a50*/ CMP         R1, #1 
    /*00011a54*/ BHI         RC_DRV_NewModePsnrDecision_x11a5c
    RC_DRV_NewModePsnrDecision_x11a58:
    /*00011a58*/ SUB         R3, R3, #2 
    RC_DRV_NewModePsnrDecision_x11a5c:
    /*00011a5c*/ CMP         R3, #24 
    /*00011a60*/ BLE         RC_DRV_NewModePsnrDecision_x11b38
    /*00011a64*/ CMP         R4, R3 
    /*00011a68*/ BGE         RC_DRV_NewModePsnrDecision_x11bac
    /*00011a6c*/ ADD         R1, R4, #2 
    /*00011a70*/ CMP         R3, R1 
    /*00011a74*/ BLE         RC_DRV_NewModePsnrDecision_x11ba4
    /*00011a78*/ ADD         R1, R4, #3 
    /*00011a7c*/ CMP         R3, R1 
    /*00011a80*/ BGT         RC_DRV_NewModePsnrDecision_x11c40
    RC_DRV_NewModePsnrDecision_x11a84:
    /*00011a84*/ SUB         R3, R2, #12 
    RC_DRV_NewModePsnrDecision_x11a88:
    /*00011a88*/ LSL         R3, R3, #8 
    /*00011a8c*/ MOVW        R0, #34079                  @ 0x851f 
    /*00011a90*/ MOVT        R0, #20971                  @ 0x51eb 
    /*00011a94*/ SMULL       R0, R1, R3, R0 
    /*00011a98*/ ASR         R3, R3, #31 
    /*00011a9c*/ RSB         R0, R3, R1, ASR #5 
    /*00011aa0*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11aa4:
    /*00011aa4*/ ADD         R3, R0, #7 
    /*00011aa8*/ CMP         R0, #0 
    /*00011aac*/ LDR         IP, [R1, #240]              @ 0xf0 
    /*00011ab0*/ MOVLT       R0, R3 
    /*00011ab4*/ LDR         LR, [R1, #280]              @ 0x118 
    /*00011ab8*/ CMP         IP, #20 
    /*00011abc*/ ASR         R3, R0, #3 
    /*00011ac0*/ LDR         R5, [R1, #276]              @ 0x114 
    /*00011ac4*/ SUBLS       R3, R3, #500                @ 0x1f4 
    /*00011ac8*/ LDR         R4, [R1, #272]              @ 0x110 
    /*00011acc*/ LDR         R2, [R1, #268]              @ 0x10c 
    /*00011ad0*/ BLS         RC_DRV_NewModePsnrDecision_x11af0
    /*00011ad4*/ SUB         R1, IP, #21 
    /*00011ad8*/ CMP         R1, #1 
    /*00011adc*/ BLS         RC_DRV_NewModePsnrDecision_x11aec
    /*00011ae0*/ SUB         IP, IP, #23 
    /*00011ae4*/ CMP         IP, #1 
    /*00011ae8*/ BHI         RC_DRV_NewModePsnrDecision_x11af0
    RC_DRV_NewModePsnrDecision_x11aec:
    /*00011aec*/ SUB         R3, R3, #300                @ 0x12c 
    RC_DRV_NewModePsnrDecision_x11af0:
    /*00011af0*/ CMP         R3, #2000                   @ 0x7d0 
    /*00011af4*/ BLE         RC_DRV_NewModePsnrDecision_x11b1c
    /*00011af8*/ MOV         R0, #100                    @ 0x64 
    /*00011afc*/ MUL         R1, R0, LR 
    /*00011b00*/ CMP         R3, R1 
    /*00011b04*/ BLE         RC_DRV_NewModePsnrDecision_x11b54
    /*00011b08*/ MUL         R0, R0, R5 
    /*00011b0c*/ CMP         R3, R0 
    /*00011b10*/ BGE         RC_DRV_NewModePsnrDecision_x11bf8
    RC_DRV_NewModePsnrDecision_x11b14:
    /*00011b14*/ MOV         R0, #253                    @ 0xfd 
    /*00011b18*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11b1c:
    /*00011b1c*/ LSL         R2, R2, #8 
    /*00011b20*/ MOVW        R3, #34079                  @ 0x851f 
    /*00011b24*/ MOVT        R3, #20971                  @ 0x51eb 
    /*00011b28*/ ASR         R0, R2, #31 
    /*00011b2c*/ SMULL       R2, R3, R2, R3 
    /*00011b30*/ RSB         R0, R0, R3, ASR #5 
    /*00011b34*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11b38:
    /*00011b38*/ LSL         R3, R0, #8 
    /*00011b3c*/ MOVW        R2, #34079                  @ 0x851f 
    /*00011b40*/ MOVT        R2, #20971                  @ 0x51eb 
    /*00011b44*/ ASR         R0, R3, #31 
    /*00011b48*/ SMULL       R2, R3, R3, R2 
    /*00011b4c*/ RSB         R0, R0, R3, ASR #5 
    /*00011b50*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11b54:
    /*00011b54*/ SUB         R0, R1, #100                @ 0x64 
    /*00011b58*/ CMP         R3, R0 
    /*00011b5c*/ BGT         RC_DRV_NewModePsnrDecision_x11ba4
    /*00011b60*/ SUB         R0, R1, #200                @ 0xc8 
    /*00011b64*/ CMP         R3, R0 
    /*00011b68*/ BGT         RC_DRV_NewModePsnrDecision_x11a84
    /*00011b6c*/ SUB         R0, R1, #300                @ 0x12c 
    /*00011b70*/ CMP         R3, R0 
    /*00011b74*/ SUBGT       R3, R2, #10 
    /*00011b78*/ BGT         RC_DRV_NewModePsnrDecision_x11a88
    /*00011b7c*/ SUB         R0, R1, #400                @ 0x190 
    /*00011b80*/ CMP         R3, R0 
    /*00011b84*/ SUBGT       R3, R2, #8 
    /*00011b88*/ BGT         RC_DRV_NewModePsnrDecision_x11a88
    /*00011b8c*/ SUB         R1, R1, #500                @ 0x1f4 
    /*00011b90*/ CMP         R3, R1 
    /*00011b94*/ SUBLE       R3, R2, #3 
    /*00011b98*/ BLE         RC_DRV_NewModePsnrDecision_x11a88
    RC_DRV_NewModePsnrDecision_x11b9c:
    /*00011b9c*/ SUB         R3, R2, #5 
    /*00011ba0*/ B           RC_DRV_NewModePsnrDecision_x11a88
    RC_DRV_NewModePsnrDecision_x11ba4:
    /*00011ba4*/ SUB         R3, R2, #15 
    /*00011ba8*/ B           RC_DRV_NewModePsnrDecision_x11a88
    RC_DRV_NewModePsnrDecision_x11bac:
    /*00011bac*/ CMP         LR, R3 
    /*00011bb0*/ BLT         RC_DRV_NewModePsnrDecision_x11b14
    /*00011bb4*/ BEQ         RC_DRV_NewModePsnrDecision_x11cec
    /*00011bb8*/ BLE         RC_DRV_NewModePsnrDecision_x11cc0
    /*00011bbc*/ SUB         R2, LR, #1 
    /*00011bc0*/ CMP         R3, R2 
    /*00011bc4*/ BLT         RC_DRV_NewModePsnrDecision_x11cc0
    /*00011bc8*/ ADD         R3, R0, #42                 @ 0x2a 
    /*00011bcc*/ MOVW        R0, #34079                  @ 0x851f 
    /*00011bd0*/ CMP         R3, #99                     @ 0x63 
    /*00011bd4*/ MOVT        R0, #20971                  @ 0x51eb 
    /*00011bd8*/ MOVGE       R3, #99                     @ 0x63 
    /*00011bdc*/ CMP         R3, #85                     @ 0x55 
    /*00011be0*/ MOVLT       R3, #85                     @ 0x55 
    /*00011be4*/ LSL         R3, R3, #8 
    /*00011be8*/ SMULL       R0, R1, R3, R0 
    /*00011bec*/ ASR         R3, R3, #31 
    /*00011bf0*/ RSB         R0, R3, R1, ASR #5 
    /*00011bf4*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11bf8:
    /*00011bf8*/ ADD         R2, R0, #100                @ 0x64 
    /*00011bfc*/ CMP         R3, R2 
    /*00011c00*/ BLT         RC_DRV_NewModePsnrDecision_x11c54
    /*00011c04*/ ADD         R2, R0, #200                @ 0xc8 
    /*00011c08*/ CMP         R3, R2 
    /*00011c0c*/ BGE         RC_DRV_NewModePsnrDecision_x11c84
    /*00011c10*/ ADD         R3, R4, #38                 @ 0x26 
    /*00011c14*/ MOVW        R0, #34079                  @ 0x851f 
    /*00011c18*/ CMP         R3, #99                     @ 0x63 
    /*00011c1c*/ MOVT        R0, #20971                  @ 0x51eb 
    /*00011c20*/ MOVGE       R3, #99                     @ 0x63 
    /*00011c24*/ CMP         R3, #80                     @ 0x50 
    /*00011c28*/ MOVLT       R3, #80                     @ 0x50 
    /*00011c2c*/ LSL         R3, R3, #8 
    /*00011c30*/ SMULL       R0, R1, R3, R0 
    /*00011c34*/ ASR         R3, R3, #31 
    /*00011c38*/ RSB         R0, R3, R1, ASR #5 
    /*00011c3c*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11c40:
    /*00011c40*/ ADD         R4, R4, #4 
    /*00011c44*/ CMP         R3, R4 
    /*00011c48*/ SUBGT       R3, R2, #2 
    /*00011c4c*/ BGT         RC_DRV_NewModePsnrDecision_x11a88
    /*00011c50*/ B           RC_DRV_NewModePsnrDecision_x11b9c
    RC_DRV_NewModePsnrDecision_x11c54:
    /*00011c54*/ ADD         R3, R4, #42                 @ 0x2a 
    /*00011c58*/ MOVW        R0, #34079                  @ 0x851f 
    /*00011c5c*/ CMP         R3, #99                     @ 0x63 
    /*00011c60*/ MOVT        R0, #20971                  @ 0x51eb 
    /*00011c64*/ MOVGE       R3, #99                     @ 0x63 
    /*00011c68*/ CMP         R3, #90                     @ 0x5a 
    /*00011c6c*/ MOVLT       R3, #90                     @ 0x5a 
    /*00011c70*/ LSL         R3, R3, #8 
    /*00011c74*/ SMULL       R0, R1, R3, R0 
    /*00011c78*/ ASR         R3, R3, #31 
    /*00011c7c*/ RSB         R0, R3, R1, ASR #5 
    /*00011c80*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11c84:
    /*00011c84*/ ADD         R2, R0, #300                @ 0x12c 
    /*00011c88*/ CMP         R3, R2 
    /*00011c8c*/ BGE         RC_DRV_NewModePsnrDecision_x11d1c
    /*00011c90*/ ADD         R3, R4, #32 
    /*00011c94*/ MOVW        R0, #34079                  @ 0x851f 
    /*00011c98*/ CMP         R3, #99                     @ 0x63 
    /*00011c9c*/ MOVT        R0, #20971                  @ 0x51eb 
    /*00011ca0*/ MOVGE       R3, #99                     @ 0x63 
    /*00011ca4*/ CMP         R3, #70                     @ 0x46 
    /*00011ca8*/ MOVLT       R3, #70                     @ 0x46 
    /*00011cac*/ LSL         R3, R3, #8 
    /*00011cb0*/ SMULL       R0, R1, R3, R0 
    /*00011cb4*/ ASR         R3, R3, #31 
    /*00011cb8*/ RSB         R0, R3, R1, ASR #5 
    /*00011cbc*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11cc0:
    /*00011cc0*/ SUB         R2, LR, #2 
    /*00011cc4*/ CMP         R3, R2 
    /*00011cc8*/ SUB         R2, LR, #3 
    /*00011ccc*/ BLT         RC_DRV_NewModePsnrDecision_x11d64
    /*00011cd0*/ CMP         R3, R2 
    /*00011cd4*/ BLT         RC_DRV_NewModePsnrDecision_x11e04
    /*00011cd8*/ SUB         R2, LR, #4 
    /*00011cdc*/ CMP         R3, R2 
    /*00011ce0*/ BLT         RC_DRV_NewModePsnrDecision_x11dd4
    RC_DRV_NewModePsnrDecision_x11ce4:
    /*00011ce4*/ MOV         R0, #130                    @ 0x82 
    /*00011ce8*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11cec:
    /*00011cec*/ ADD         R3, R0, #47                 @ 0x2f 
    /*00011cf0*/ MOVW        R0, #34079                  @ 0x851f 
    /*00011cf4*/ CMP         R3, #99                     @ 0x63 
    /*00011cf8*/ MOVT        R0, #20971                  @ 0x51eb 
    /*00011cfc*/ MOVGE       R3, #99                     @ 0x63 
    /*00011d00*/ CMP         R3, #92                     @ 0x5c 
    /*00011d04*/ MOVLT       R3, #92                     @ 0x5c 
    /*00011d08*/ LSL         R3, R3, #8 
    /*00011d0c*/ SMULL       R0, R1, R3, R0 
    /*00011d10*/ ASR         R3, R3, #31 
    /*00011d14*/ RSB         R0, R3, R1, ASR #5 
    /*00011d18*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11d1c:
    /*00011d1c*/ ADD         R2, R0, #400                @ 0x190 
    /*00011d20*/ CMP         R3, R2 
    /*00011d24*/ BLT         RC_DRV_NewModePsnrDecision_x11da4
    /*00011d28*/ ADD         R0, R0, #500                @ 0x1f4 
    /*00011d2c*/ CMP         R3, R0 
    /*00011d30*/ BGE         RC_DRV_NewModePsnrDecision_x11d9c
    /*00011d34*/ ADD         R3, R4, #18 
    /*00011d38*/ MOVW        R0, #34079                  @ 0x851f 
    /*00011d3c*/ CMP         R3, #99                     @ 0x63 
    /*00011d40*/ MOVT        R0, #20971                  @ 0x51eb 
    /*00011d44*/ MOVGE       R3, #99                     @ 0x63 
    /*00011d48*/ CMP         R3, #50                     @ 0x32 
    /*00011d4c*/ MOVLT       R3, #50                     @ 0x32 
    /*00011d50*/ LSL         R3, R3, #8 
    /*00011d54*/ SMULL       R0, R1, R3, R0 
    /*00011d58*/ ASR         R3, R3, #31 
    /*00011d5c*/ RSB         R0, R3, R1, ASR #5 
    /*00011d60*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11d64:
    /*00011d64*/ CMP         R3, R2 
    /*00011d68*/ BLT         RC_DRV_NewModePsnrDecision_x11e04
    /*00011d6c*/ ADD         R3, R0, #38                 @ 0x26 
    /*00011d70*/ MOVW        R0, #34079                  @ 0x851f 
    /*00011d74*/ CMP         R3, #99                     @ 0x63 
    /*00011d78*/ MOVT        R0, #20971                  @ 0x51eb 
    /*00011d7c*/ MOVGE       R3, #99                     @ 0x63 
    /*00011d80*/ CMP         R3, #75                     @ 0x4b 
    /*00011d84*/ MOVLT       R3, #75                     @ 0x4b 
    /*00011d88*/ LSL         R3, R3, #8 
    /*00011d8c*/ SMULL       R0, R1, R3, R0 
    /*00011d90*/ ASR         R3, R3, #31 
    /*00011d94*/ RSB         R0, R3, R1, ASR #5 
    /*00011d98*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11d9c:
    /*00011d9c*/ ADD         R3, R4, #10 
    /*00011da0*/ B           RC_DRV_NewModePsnrDecision_x11a88
    RC_DRV_NewModePsnrDecision_x11da4:
    /*00011da4*/ ADD         R3, R4, #25 
    /*00011da8*/ MOVW        R0, #34079                  @ 0x851f 
    /*00011dac*/ CMP         R3, #99                     @ 0x63 
    /*00011db0*/ MOVT        R0, #20971                  @ 0x51eb 
    /*00011db4*/ MOVGE       R3, #99                     @ 0x63 
    /*00011db8*/ CMP         R3, #60                     @ 0x3c 
    /*00011dbc*/ MOVLT       R3, #60                     @ 0x3c 
    /*00011dc0*/ LSL         R3, R3, #8 
    /*00011dc4*/ SMULL       R0, R1, R3, R0 
    /*00011dc8*/ ASR         R3, R3, #31 
    /*00011dcc*/ RSB         R0, R3, R1, ASR #5 
    /*00011dd0*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11dd4:
    /*00011dd4*/ SUB         R2, LR, #5 
    /*00011dd8*/ CMP         R3, R2 
    /*00011ddc*/ BLT         RC_DRV_NewModePsnrDecision_x11ce4
    /*00011de0*/ ADD         R0, R0, #12 
    /*00011de4*/ MOV         R1, #100                    @ 0x64 
    /*00011de8*/ CMP         R0, #99                     @ 0x63 
    /*00011dec*/ MOVGE       R0, #99                     @ 0x63 
    /*00011df0*/ CMP         R0, #55                     @ 0x37 
    /*00011df4*/ MOVLT       R0, #55                     @ 0x37 
    /*00011df8*/ LSL         R0, R0, #8 
    /*00011dfc*/ BL          0x0000000000011DFC          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*00011e00*/ POP         {R4, R5, R6, PC} 
    RC_DRV_NewModePsnrDecision_x11e04:
    /*00011e04*/ SUB         R2, LR, #4 
    /*00011e08*/ CMP         R3, R2 
    /*00011e0c*/ BLT         RC_DRV_NewModePsnrDecision_x11dd4
    /*00011e10*/ ADD         R3, R0, #30 
    /*00011e14*/ MOVW        R0, #34079                  @ 0x851f 
    /*00011e18*/ CMP         R3, #99                     @ 0x63 
    /*00011e1c*/ MOVT        R0, #20971                  @ 0x51eb 
    /*00011e20*/ MOVGE       R3, #99                     @ 0x63 
    /*00011e24*/ CMP         R3, #63                     @ 0x3f 
    /*00011e28*/ MOVLT       R3, #63                     @ 0x3f 
    /*00011e2c*/ LSL         R3, R3, #8 
    /*00011e30*/ SMULL       R0, R1, R3, R0 
    /*00011e34*/ ASR         R3, R3, #31 
    /*00011e38*/ RSB         R0, R3, R1, ASR #5 
    /*00011e3c*/ POP         {R4, R5, R6, PC} 
FUNC_END RC_DRV_NewModePsnrDecision


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .init.text
@ Size: 0x10
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN rc_mod_init
    /*00000000*/ PUSH        {R4, LR} 
    /*00000004*/ BL          0x0000000000000004          @ RC_ModInit [R_ARM_CALL: .text+0x1a00] 
    /*00000008*/ MOV         R0, #0 
    /*0000000c*/ POP         {R4, PC} 
FUNC_END rc_mod_init


FUNC_BEGIN init_module
    /*00000000*/ PUSH        {R4, LR} 
    /*00000004*/ BL          0x0000000000000004          @ RC_ModInit [R_ARM_CALL: .text+0x1a00] 
    /*00000008*/ MOV         R0, #0 
    /*0000000c*/ POP         {R4, PC} 
FUNC_END init_module


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .exit.text
@ Size: 0x4
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN rc_mod_exit
    rc_mod_exit_x0:
    /*00000000*/ B           rc_mod_exit_x0              @ RC_ModExit [R_ARM_JUMP24: .text+0x1b10] 
FUNC_END rc_mod_exit


FUNC_BEGIN cleanup_module
    cleanup_module_x0:
    /*00000000*/ B           cleanup_module_x0           @ RC_ModExit [R_ARM_JUMP24: .text+0x1b10] 
FUNC_END cleanup_module


